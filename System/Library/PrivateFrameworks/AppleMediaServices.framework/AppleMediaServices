|| __DATA.__data _AMSAccountFlagAgeVerificationExpiration
|| __DATA.__data _AMSAccountFlagAutoPlay
|| __DATA.__data _AMSAccountFlagCanUseAppClips
|| __DATA.__data _AMSAccountFlagHasAgreedToAppClipTerms
|| __DATA.__data _AMSAccountFlagHasAgreedToTerms
|| __DATA.__data _AMSAccountFlagIsDisabledAccount
|| __DATA.__data _AMSAccountFlagIsInBadCredit
|| __DATA.__data _AMSAccountFlagIsInRestrictedRegion
|| __DATA.__data _AMSAccountFlagIsManagedAccount
|| __DATA.__data _AMSAccountFlagIsRestrictedAccount
|| __DATA.__data _AMSAccountFlagPersonalization
|| __DATA.__data _AMSAccountFlagRetailDemo
|| __DATA.__data _AMSAccountFlagUnderThirteen
|| __DATA.__data _AMSAccountGrandSlamTokenIdentifierMultiUser
|| __DATA.__data _AMSAccountGrandSlamTokenIdentifierSettings
|| __DATA.__data _AMSAccountMediaTypeAppStore
|| __DATA.__data _AMSAccountMediaTypeAppStoreBeta
|| __DATA.__data _AMSAccountMediaTypeAppStoreSandbox
|| __DATA.__data _AMSAccountMediaTypeBooks
|| __DATA.__data _AMSAccountMediaTypeMusic
|| __DATA.__data _AMSAccountMediaTypePodcasts
|| __DATA.__data _AMSAccountMediaTypeProduction
|| __DATA.__data _AMSAccountMediaTypeTV
|| __DATA.__data _AMSAccountMediaTypeiTunes
|| __DATA.__data _AMSAccountMediaTypeiTunesU
|| __DATA.__data _AMSDeviceOfferFollowUpIdentifierAppleMusic
|| __DATA.__data _AMSDeviceOfferFollowUpIdentifierAppleMusicAndiCloud
|| __DATA.__data _AMSDeviceOfferFollowUpIdentifieriCloud
|| __DATA.__data _AMSDeviceOfferIdentifierAppleCare
|| __DATA.__data _AMSDeviceOfferIdentifierAppleMusic
|| __DATA.__data _AMSDeviceOfferIdentifierTV
|| __DATA.__data _AMSDeviceOfferIdentifieriCloud
|| __DATA.__data _kCoreASErrorDomainCA
|| __DATA.__data _kCoreASErrorDomainCADecrypt
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAttestation
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAuthKitUpdateResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAuthKitUpdateTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAuthenticateOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAuthenticateTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAutomaticDownloadKindsResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSBiometricsDisableTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSBiometricsSecurityService
|| __DATA.__objc_data _OBJC_CLASS_$_AMSBiometricsTokenUpdateTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSBuyParams
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardAuthorizationTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardEnrollmentEligibilityTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardEnrollmentPaymentSessionTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardEnrollmentVerificationTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardMetadataRegistrationResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardRegistrationResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardRegistrationTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCommandLineDialogTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSContentRating
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDaemonConnectionInterface
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDataMigrator
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDataMigratorOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDeviceMessenger
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDeviceMessengerFilter
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDeviceOffer
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDeviceOfferRegistrationTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDialog
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDialogAction
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDialogButton
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDialogTextField
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFamilyAccountPair
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFamilyContentDeletionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFamilyInfoLookupResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFamilyMember
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFeatureFlag
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFollowUp
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFollowUpAction
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFollowUpItem
|| __DATA.__objc_data _OBJC_CLASS_$_AMSHandleDialogResultTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSKeybag
|| __DATA.__objc_data _OBJC_CLASS_$_AMSKeychain
|| __DATA.__objc_data _OBJC_CLASS_$_AMSKeychainOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AMSLookupItemArtwork
|| __DATA.__objc_data _OBJC_CLASS_$_AMSLookupItemArtworkColor
|| __DATA.__objc_data _OBJC_CLASS_$_AMSLookupItemOffer
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMarketingItem
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMarketingItemAction
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMarketingItemActionComponent
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMarketingItemParser
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMediaArtwork
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMediaResponseDecoder
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMediaResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMediaVideo
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMetricsClientIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMetricsIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMockPurchaseQueue
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMockURLOverride
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMockURLResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMultiUserService
|| __DATA.__objc_data _OBJC_CLASS_$_AMSNotificationSettingsItem
|| __DATA.__objc_data _OBJC_CLASS_$_AMSNotificationSettingsResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSNotificationSettingsSection
|| __DATA.__objc_data _OBJC_CLASS_$_AMSNotificationSettingsTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSOpenURL
|| __DATA.__objc_data _OBJC_CLASS_$_AMSOperation
|| __DATA.__objc_data _OBJC_CLASS_$_AMSOptional
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPair
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPaymentSetupFeatureVerification
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPurchase
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPurchaseResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPushNotificationService
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPushPayload
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRatingSystem
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRatingsProviderResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRatingsProviderTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRatingsStoreFront
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRemoteNotification
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRestrictions
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSetDemoAccountTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSignInContext
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSignOutTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSnapshotBag
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSnapshotBagBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSubscriptionEntitlement
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSubscriptionEntitlementsResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSubscriptionEntitlementsTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSyncPasswordSettingsResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSyncPasswordSettingsTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSystemAlertDialogTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSThreadSafeObject
|| __DATA.__objc_data _OBJC_CLASS_$_AMSURLSecurityPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUniqueExecutionQueue
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUserNotification
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUserNotificationAction
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUserNotificationCenter
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUserNotificationMetricsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AMSXDDevice
|| __DATA.__objc_data _OBJC_CLASS_$_AMSXDMessage
|| __DATA.__objc_data _OBJC_CLASS_$_CerKRQOmMu7LBUoc
|| __DATA.__objc_data _OBJC_CLASS_$_RJ39VdykGnvJIRpv
|| __DATA.__objc_data _OBJC_CLASS_$_RvCyrXrrh7eJhtzx
|| __DATA.__objc_data _OBJC_CLASS_$_cBEET4QRedIfcDrp
|| __DATA.__objc_data _OBJC_CLASS_$_ktSeAkOyXkmyQNgH
|| __DATA.__objc_data _OBJC_CLASS_$_n4cyKQis9m01XZsR
|| __DATA.__objc_data _OBJC_CLASS_$_wumZ2SSA5KbWdu7E
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAttestation
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAuthKitUpdateResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAuthKitUpdateTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAuthenticateOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAuthenticateTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAutomaticDownloadKindsResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSBiometricsDisableTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSBiometricsSecurityService
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSBiometricsTokenUpdateTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSBuyParams
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardAuthorizationTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardEnrollmentEligibilityTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardEnrollmentPaymentSessionTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardEnrollmentVerificationTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardMetadataRegistrationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardRegistrationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardRegistrationTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCommandLineDialogTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSContentRating
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDaemonConnectionInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDataMigrator
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDataMigratorOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDeviceMessenger
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDeviceMessengerFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDeviceOffer
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDeviceOfferRegistrationTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDialog
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDialogAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDialogButton
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDialogTextField
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFamilyAccountPair
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFamilyContentDeletionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFamilyInfoLookupResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFamilyMember
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFeatureFlag
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFollowUp
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFollowUpAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFollowUpItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSHandleDialogResultTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSKeybag
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSKeychain
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSKeychainOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSLookupItemArtwork
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSLookupItemArtworkColor
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSLookupItemOffer
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMarketingItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMarketingItemAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMarketingItemActionComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMarketingItemParser
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMediaArtwork
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMediaResponseDecoder
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMediaResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMediaVideo
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMetricsClientIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMetricsIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMockPurchaseQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMockURLOverride
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMockURLResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMultiUserService
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSNotificationSettingsItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSNotificationSettingsResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSNotificationSettingsSection
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSNotificationSettingsTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSOpenURL
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSOptional
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPair
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPaymentSetupFeatureVerification
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPurchase
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPurchaseResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPushNotificationService
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPushPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRatingSystem
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRatingsProviderResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRatingsProviderTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRatingsStoreFront
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRemoteNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRestrictions
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSetDemoAccountTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSignInContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSignOutTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSnapshotBag
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSnapshotBagBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSubscriptionEntitlement
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSubscriptionEntitlementsResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSubscriptionEntitlementsTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSyncPasswordSettingsResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSyncPasswordSettingsTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSystemAlertDialogTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSThreadSafeObject
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSURLSecurityPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUniqueExecutionQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUserNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUserNotificationAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUserNotificationCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUserNotificationMetricsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSXDDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSXDMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_CerKRQOmMu7LBUoc
|| __DATA.__objc_data _OBJC_METACLASS_$_RJ39VdykGnvJIRpv
|| __DATA.__objc_data _OBJC_METACLASS_$_RvCyrXrrh7eJhtzx
|| __DATA.__objc_data _OBJC_METACLASS_$_cBEET4QRedIfcDrp
|| __DATA.__objc_data _OBJC_METACLASS_$_ktSeAkOyXkmyQNgH
|| __DATA.__objc_data _OBJC_METACLASS_$_n4cyKQis9m01XZsR
|| __DATA.__objc_data _OBJC_METACLASS_$_wumZ2SSA5KbWdu7E
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSPurchaseQueue._session
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSURLSession._configuration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSURLSession._delegateProxy
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSURLSession._delegateQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSURLSession._protocolHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSURLSession._responseDecoder
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSURLSession._session
|| __DATA_CONST.__const _AMSAuthenticateErrorDialogKey
|| __DATA_CONST.__const _AMSAuthenticateOptionsCreateAccountQueryParamsKey
|| __DATA_CONST.__const _AMSAuthenticateOptionsLogKeyKey
|| __DATA_CONST.__const _AMSAuthenticateOptionsUserAgentKey
|| __DATA_CONST.__const _AMSAuthenticateRequestUserInfoKeyServerPayload
|| __DATA_CONST.__const _AMSBagChangedNotification
|| __DATA_CONST.__const _AMSBagChangedNotificationUserInfoChangedKeys
|| __DATA_CONST.__const _AMSBagChangedNotificationUserInfoProfile
|| __DATA_CONST.__const _AMSBagChangedNotificationUserInfoProfileVersion
|| __DATA_CONST.__const _AMSBagInvalidatedNotification
|| __DATA_CONST.__const _AMSBagKeyManageAccountURL
|| __DATA_CONST.__const _AMSBagKeyPaymentInformationURL
|| __DATA_CONST.__const _AMSBagKeyPurchaseHistoryURL
|| __DATA_CONST.__const _AMSBagKeyShowSubscriptionsURL
|| __DATA_CONST.__const _AMSBuyParamPropertyAffiliateId
|| __DATA_CONST.__const _AMSBuyParamPropertyAppExtVrsId
|| __DATA_CONST.__const _AMSBuyParamPropertyAsn
|| __DATA_CONST.__const _AMSBuyParamPropertyBundleId
|| __DATA_CONST.__const _AMSBuyParamPropertyBundleVersion
|| __DATA_CONST.__const _AMSBuyParamPropertyDisableTouchId
|| __DATA_CONST.__const _AMSBuyParamPropertyDsid
|| __DATA_CONST.__const _AMSBuyParamPropertyExistingExternalVersionId
|| __DATA_CONST.__const _AMSBuyParamPropertyExternalVersionId
|| __DATA_CONST.__const _AMSBuyParamPropertyGUID
|| __DATA_CONST.__const _AMSBuyParamPropertyHasBeenAuthedForBuy
|| __DATA_CONST.__const _AMSBuyParamPropertyHasConfirmedPaymentSheet
|| __DATA_CONST.__const _AMSBuyParamPropertyICloudBackupEnabled
|| __DATA_CONST.__const _AMSBuyParamPropertyInstalledSoftwareRating
|| __DATA_CONST.__const _AMSBuyParamPropertyIsBackground
|| __DATA_CONST.__const _AMSBuyParamPropertyItemId
|| __DATA_CONST.__const _AMSBuyParamPropertyKbsync
|| __DATA_CONST.__const _AMSBuyParamPropertyOwnerDsid
|| __DATA_CONST.__const _AMSBuyParamPropertyPaymentObject
|| __DATA_CONST.__const _AMSBuyParamPropertyPaymentServicesURL
|| __DATA_CONST.__const _AMSBuyParamPropertyPricingParameters
|| __DATA_CONST.__const _AMSBuyParamPropertyRequestType
|| __DATA_CONST.__const _AMSBuyParamPropertySerialNumber
|| __DATA_CONST.__const _AMSBuyParamPropertySinfData
|| __DATA_CONST.__const _AMSBuyParamPropertySoftwareExternalVersionId
|| __DATA_CONST.__const _AMSBuyParamPropertyVendorID
|| __DATA_CONST.__const _AMSDemoAccountIdentifier
|| __DATA_CONST.__const _AMSDeviceOffersChangedNotification
|| __DATA_CONST.__const _AMSDialogRequestUserInfoKeyServerPayload
|| __DATA_CONST.__const _AMSDialogResultDismissIdentifier
|| __DATA_CONST.__const _AMSEngagementUserInfoKeyBuyParams
|| __DATA_CONST.__const _AMSErrorDomain
|| __DATA_CONST.__const _AMSErrorUserInfoKeyAnisetteErrorCode
|| __DATA_CONST.__const _AMSErrorUserInfoKeyContentType
|| __DATA_CONST.__const _AMSErrorUserInfoKeyEngagementPresented
|| __DATA_CONST.__const _AMSErrorUserInfoKeyServerAllowed
|| __DATA_CONST.__const _AMSErrorUserInfoKeyServerErrorCode
|| __DATA_CONST.__const _AMSErrorUserInfoKeyServerPayload
|| __DATA_CONST.__const _AMSErrorUserInfoKeyStatusCode
|| __DATA_CONST.__const _AMSErrorUserInfoKeyURL
|| __DATA_CONST.__const _AMSFamilyContentDeletionNotification
|| __DATA_CONST.__const _AMSFollowUpClientIdentifier
|| __DATA_CONST.__const _AMSFollowUpItemUserInfoMetrics
|| __DATA_CONST.__const _AMSFollowUpItemUserInfoPriority
|| __DATA_CONST.__const _AMSHTTPHeaderAPSDeliveryType
|| __DATA_CONST.__const _AMSHTTPHeaderAbsintheAction
|| __DATA_CONST.__const _AMSHTTPHeaderAbsintheSignature
|| __DATA_CONST.__const _AMSHTTPHeaderAbsintheSrv
|| __DATA_CONST.__const _AMSHTTPHeaderAccept
|| __DATA_CONST.__const _AMSHTTPHeaderAcceptLanguage
|| __DATA_CONST.__const _AMSHTTPHeaderAltDSID
|| __DATA_CONST.__const _AMSHTTPHeaderAppleTimingApp
|| __DATA_CONST.__const _AMSHTTPHeaderApplicationSite
|| __DATA_CONST.__const _AMSHTTPHeaderAuthorization
|| __DATA_CONST.__const _AMSHTTPHeaderCacheControl
|| __DATA_CONST.__const _AMSHTTPHeaderCachePolicy
|| __DATA_CONST.__const _AMSHTTPHeaderCanaryIdentifier
|| __DATA_CONST.__const _AMSHTTPHeaderClientApplication
|| __DATA_CONST.__const _AMSHTTPHeaderClientVersions
|| __DATA_CONST.__const _AMSHTTPHeaderConnectionType
|| __DATA_CONST.__const _AMSHTTPHeaderContentEncoding
|| __DATA_CONST.__const _AMSHTTPHeaderContentLength
|| __DATA_CONST.__const _AMSHTTPHeaderContentType
|| __DATA_CONST.__const _AMSHTTPHeaderCookie
|| __DATA_CONST.__const _AMSHTTPHeaderCorrelationId
|| __DATA_CONST.__const _AMSHTTPHeaderDSID
|| __DATA_CONST.__const _AMSHTTPHeaderDate
|| __DATA_CONST.__const _AMSHTTPHeaderEdgeNodeCacheStatus
|| __DATA_CONST.__const _AMSHTTPHeaderExpires
|| __DATA_CONST.__const _AMSHTTPHeaderGSToken
|| __DATA_CONST.__const _AMSHTTPHeaderGSTokenIdentifier
|| __DATA_CONST.__const _AMSHTTPHeaderGuid
|| __DATA_CONST.__const _AMSHTTPHeaderIgnoreAccountConversion
|| __DATA_CONST.__const _AMSHTTPHeaderIssuingProcess
|| __DATA_CONST.__const _AMSHTTPHeaderLocation
|| __DATA_CONST.__const _AMSHTTPHeaderMMeClientInfo
|| __DATA_CONST.__const _AMSHTTPHeaderMMeDeviceId
|| __DATA_CONST.__const _AMSHTTPHeaderPartnerHeader
|| __DATA_CONST.__const _AMSHTTPHeaderRequestingProcess
|| __DATA_CONST.__const _AMSHTTPHeaderRestrictions
|| __DATA_CONST.__const _AMSHTTPHeaderSetCookie
|| __DATA_CONST.__const _AMSHTTPHeaderSetGlobalCookie
|| __DATA_CONST.__const _AMSHTTPHeaderSetStoreFront
|| __DATA_CONST.__const _AMSHTTPHeaderSetUserCookies
|| __DATA_CONST.__const _AMSHTTPHeaderStoreFront
|| __DATA_CONST.__const _AMSHTTPHeaderTimezoneOffset
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDAction
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDChallenge
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDPublicKey
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDPublicKeyIdentifier
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDSignature
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDSignatureVersion
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDState
|| __DATA_CONST.__const _AMSHTTPHeaderUserAgent
|| __DATA_CONST.__const _AMSHTTPHeaderWT
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleAMD
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleAMDAction
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleAMDData
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleAMDM
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleActionSignature
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleAllowAuthTypes
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleMD
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleMDAction
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleMDData
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleMDM
|| __DATA_CONST.__const _AMSHTTPHeaderXToken
|| __DATA_CONST.__const _AMSHTTPHeaderXXDC
|| __DATA_CONST.__const _AMSHTTPHeaderiCloudDSID
|| __DATA_CONST.__const _AMSLocalAccountIdentifier
|| __DATA_CONST.__const _AMSLogSubsystemAppleMediaServices
|| __DATA_CONST.__const _AMSLookupItemArtworkColorKindBackground
|| __DATA_CONST.__const _AMSLookupItemArtworkColorKindText1
|| __DATA_CONST.__const _AMSLookupItemArtworkColorKindText2
|| __DATA_CONST.__const _AMSLookupItemArtworkColorKindText3
|| __DATA_CONST.__const _AMSLookupItemArtworkColorKindText4
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleBoundedBox
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleConstrainedHeight
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleConstrainedWidth
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleFCCrop270
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleFCCrop44
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleSourceSize
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleSpecificRectangle
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleSquareCenterCrop
|| __DATA_CONST.__const _AMSLookupItemArtworkFormatJPG
|| __DATA_CONST.__const _AMSLookupItemArtworkFormatPNG
|| __DATA_CONST.__const _AMSLookupItemOfferSubscriptionTypePodcast
|| __DATA_CONST.__const _AMSLookupItemOfferTextTypeDownloaded
|| __DATA_CONST.__const _AMSLookupItemOfferTextTypeDownloading
|| __DATA_CONST.__const _AMSLookupItemOfferTextTypeLong
|| __DATA_CONST.__const _AMSLookupItemOfferTextTypeMedium
|| __DATA_CONST.__const _AMSLookupItemOfferTextTypeShort
|| __DATA_CONST.__const _AMSLookupKeyProfileExternalVersionId
|| __DATA_CONST.__const _AMSLookupKeyProfileLockup
|| __DATA_CONST.__const _AMSLookupKeyProfilePlay
|| __DATA_CONST.__const _AMSLookupKeyProfilePlaylistProduct
|| __DATA_CONST.__const _AMSLookupKeyProfileProduct
|| __DATA_CONST.__const _AMSLookupKeyProfileURL
|| __DATA_CONST.__const _AMSLookupPropertyAdvisories
|| __DATA_CONST.__const _AMSLookupPropertyArtistName
|| __DATA_CONST.__const _AMSLookupPropertyArtistURL
|| __DATA_CONST.__const _AMSLookupPropertyArtwork
|| __DATA_CONST.__const _AMSLookupPropertyBundleIdentifier
|| __DATA_CONST.__const _AMSLookupPropertyContentRating
|| __DATA_CONST.__const _AMSLookupPropertyContentRatingName
|| __DATA_CONST.__const _AMSLookupPropertyCopyright
|| __DATA_CONST.__const _AMSLookupPropertyDescription
|| __DATA_CONST.__const _AMSLookupPropertyDescriptionStandard
|| __DATA_CONST.__const _AMSLookupPropertyDisplayName
|| __DATA_CONST.__const _AMSLookupPropertyGenreNames
|| __DATA_CONST.__const _AMSLookupPropertyHasInAppPurchases
|| __DATA_CONST.__const _AMSLookupPropertyIsAuthenticated
|| __DATA_CONST.__const _AMSLookupPropertyIsGameCenter
|| __DATA_CONST.__const _AMSLookupPropertyIsPOIBased
|| __DATA_CONST.__const _AMSLookupPropertyItemIdentifier
|| __DATA_CONST.__const _AMSLookupPropertyKind
|| __DATA_CONST.__const _AMSLookupPropertyLicenseAgreementURL
|| __DATA_CONST.__const _AMSLookupPropertyName
|| __DATA_CONST.__const _AMSLookupPropertyNewsstandArtwork
|| __DATA_CONST.__const _AMSLookupPropertyOfferName
|| __DATA_CONST.__const _AMSLookupPropertyOffers
|| __DATA_CONST.__const _AMSLookupPropertyPrivacyPolicyURL
|| __DATA_CONST.__const _AMSLookupPropertyProductURL
|| __DATA_CONST.__const _AMSLookupPropertyReleaseDate
|| __DATA_CONST.__const _AMSLookupPropertyRequiredCapabilities
|| __DATA_CONST.__const _AMSLookupPropertyRequirementsDescription
|| __DATA_CONST.__const _AMSLookupPropertyResults
|| __DATA_CONST.__const _AMSLookupPropertyScreenshotTypeIPad
|| __DATA_CONST.__const _AMSLookupPropertyScreenshotTypeIPhone
|| __DATA_CONST.__const _AMSLookupPropertyScreenshotTypeIPhone5
|| __DATA_CONST.__const _AMSLookupPropertyScreenshots
|| __DATA_CONST.__const _AMSLookupPropertyShortProductURL
|| __DATA_CONST.__const _AMSLookupPropertySoftwareInfo
|| __DATA_CONST.__const _AMSLookupPropertyStandardNotes
|| __DATA_CONST.__const _AMSLookupPropertyStatus
|| __DATA_CONST.__const _AMSLookupPropertyStoreNotes
|| __DATA_CONST.__const _AMSLookupPropertySupportURL
|| __DATA_CONST.__const _AMSLookupPropertyUserRatingCount
|| __DATA_CONST.__const _AMSLookupPropertyUserRatingCountCurrentVersion
|| __DATA_CONST.__const _AMSLookupPropertyUserRatingInfo
|| __DATA_CONST.__const _AMSLookupPropertyUserRatingValue
|| __DATA_CONST.__const _AMSLookupPropertyUserRatingValueCurrentVersion
|| __DATA_CONST.__const _AMSMarketingItemActionTypeBuy
|| __DATA_CONST.__const _AMSMarketingItemActionTypeLink
|| __DATA_CONST.__const _AMSMediaArtworkColorKindBackground
|| __DATA_CONST.__const _AMSMediaArtworkColorKindText1
|| __DATA_CONST.__const _AMSMediaArtworkColorKindText2
|| __DATA_CONST.__const _AMSMediaArtworkColorKindText3
|| __DATA_CONST.__const _AMSMediaArtworkColorKindText4
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleBoundedBox
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleConstrainedHeight
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleConstrainedWidth
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleFCCrop270
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleFCCrop44
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleIconMask
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleSourceSize
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleSpecificRectangle
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleSquareCenterCrop
|| __DATA_CONST.__const _AMSMediaArtworkFormatHEIC
|| __DATA_CONST.__const _AMSMediaArtworkFormatJPG
|| __DATA_CONST.__const _AMSMediaArtworkFormatPNG
|| __DATA_CONST.__const _AMSMediaTaskFilterAppex
|| __DATA_CONST.__const _AMSMediaTaskFilterBundleId
|| __DATA_CONST.__const _AMSMediaTaskFilterDeviceProtocol
|| __DATA_CONST.__const _AMSMediaTaskFilterExtension
|| __DATA_CONST.__const _AMSMediaTaskFilterIdentity
|| __DATA_CONST.__const _AMSMediaTaskFilterIsbn
|| __DATA_CONST.__const _AMSMediaTaskFilterIsrc
|| __DATA_CONST.__const _AMSMediaTaskFilterScheme
|| __DATA_CONST.__const _AMSMediaTaskFilterUti
|| __DATA_CONST.__const _AMSMediaTaskPlatformAppleTV
|| __DATA_CONST.__const _AMSMediaTaskPlatformAppleWatch
|| __DATA_CONST.__const _AMSMediaTaskPlatformMac
|| __DATA_CONST.__const _AMSMediaTaskPlatformiPad
|| __DATA_CONST.__const _AMSMediaTaskPlatformiPhone
|| __DATA_CONST.__const _AMSMetricsEventTypeAccount
|| __DATA_CONST.__const _AMSMetricsEventTypeAppInstall
|| __DATA_CONST.__const _AMSMetricsEventTypeClick
|| __DATA_CONST.__const _AMSMetricsEventTypeDialog
|| __DATA_CONST.__const _AMSMetricsEventTypeEnter
|| __DATA_CONST.__const _AMSMetricsEventTypeExit
|| __DATA_CONST.__const _AMSMetricsEventTypeImpressions
|| __DATA_CONST.__const _AMSMetricsEventTypeLoadURL
|| __DATA_CONST.__const _AMSMetricsEventTypeLog
|| __DATA_CONST.__const _AMSMetricsEventTypeMedia
|| __DATA_CONST.__const _AMSMetricsEventTypePage
|| __DATA_CONST.__const _AMSMetricsEventTypePurchase
|| __DATA_CONST.__const _AMSMetricsEventTypeSearch
|| __DATA_CONST.__const _AMSNetworkQualityInquiryInterfaceCellular
|| __DATA_CONST.__const _AMSNetworkQualityInquiryInterfaceEthernet
|| __DATA_CONST.__const _AMSNetworkQualityInquiryInterfaceWiFi
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyDataStalls
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyInterface
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyKnownGood
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyLQM
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyLastReportedRxSignalStrength
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyLinkQuality
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyLoadedLQM
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyLowInternetDL
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyLowInternetUL
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyRadioTechnology
|| __DATA_CONST.__const _AMSNetworkTypeCellular
|| __DATA_CONST.__const _AMSNetworkTypeNone
|| __DATA_CONST.__const _AMSNetworkTypeWiFi
|| __DATA_CONST.__const _AMSPushActionTypeAlertNotification
|| __DATA_CONST.__const _AMSPushActionTypeBadging
|| __DATA_CONST.__const _AMSPushActionTypeEngagement
|| __DATA_CONST.__const _AMSPushActionTypeFollowUp
|| __DATA_CONST.__const _AMSPushActionTypeGenericNotification
|| __DATA_CONST.__const _AMSPushActionTypeRichNotification
|| __DATA_CONST.__const _AMSPushPayloadKeyActionType
|| __DATA_CONST.__const _AMSQueryParameterKeyCacheBuster
|| __DATA_CONST.__const _AMSQueryParameterKeyGUID
|| __DATA_CONST.__const _AMSServerErrorDomain
|| __DATA_CONST.__const _AMSSnapshotBagExpiredValueAccessedNotification
|| __DATA_CONST.__const _AMSSubscriptionEntitlementsProductMusic
|| __DATA_CONST.__const _AMSSubscriptionEntitlementsProductMusicMatch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSAbsinthe
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSAcknowledgePrivacyTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSAuthenticateRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSAuthenticateResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSAutomaticDownloadKindsFetchTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSAutomaticDownloadKindsSetTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSBag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSBagKeySet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSBagValue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSBinaryPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSBiometrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSCardEnrollment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSDialogRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSDialogResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementClientData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementDestination
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementEnqueueRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementEnqueueResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementSyncRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementSyncResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEphemeralDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSFamilyInfoLookupTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSHTTPArchive
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSHTTPArchiveController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSLRUCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSLazyPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSLogConfig
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSLookup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSLookupItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSLookupResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMarketingItemTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMediaProtocolHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMediaRequestEncoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMediaTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMediaToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMediaTokenService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMescal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMetricsEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMetricsLoadURLContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMetricsLoadURLEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMutableBagKeySet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMutableLogConfig
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSNetworkConstraints
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSNetworkQualityInquiry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSObservable
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSProcessInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSPurchaseQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSPurchaseQueueConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSPurchaseTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSPushConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSPushHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLProtocolHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLRequestEncoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLResponseDecoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUnitTests
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUserAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSAbsinthe
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSAcknowledgePrivacyTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSAuthenticateRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSAuthenticateResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSAutomaticDownloadKindsFetchTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSAutomaticDownloadKindsSetTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSBag
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSBagKeySet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSBagValue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSBinaryPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSBiometrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSCardEnrollment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSDialogRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSDialogResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementClientData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementDestination
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementEnqueueRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementEnqueueResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementSyncRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementSyncResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEphemeralDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSFamilyInfoLookupTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSHTTPArchive
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSHTTPArchiveController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSLRUCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSLazyPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSLogConfig
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSLookup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSLookupItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSLookupResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMarketingItemTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMediaProtocolHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMediaRequestEncoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMediaTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMediaToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMediaTokenService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMescal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMetricsEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMetricsLoadURLContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMetricsLoadURLEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMutableBagKeySet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMutableLogConfig
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSNetworkConstraints
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSNetworkQualityInquiry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSObservable
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSProcessInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSPurchaseQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSPurchaseQueueConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSPurchaseTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSPushConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSPushHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLProtocolHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLRequestEncoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLResponseDecoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUnitTests
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUserAgent
|| __TEXT.__const _AMSEngagementEnqueueDefaultTimeout
|| __TEXT.__const _AMSEngagementSyncDefaultTimeout
|| __TEXT.__const _AMSEphemeralDefaultsHARLoggingItemLimitDisabled
|| __TEXT.__const _AMSLookupMaximumBatchSize
|| __TEXT.__const _AMSSizeLimitDisabled
|| __TEXT.__const _AMSSizeLimitNoLimit
|| __TEXT.__text _AMSCustomError
|| __TEXT.__text _AMSDefaultsNewFeaturesEnabled
|| __TEXT.__text _AMSError
|| __TEXT.__text _AMSErrorIsEqual
|| __TEXT.__text _AMSErrorWithFormat
|| __TEXT.__text _AMSGenerateLogCorrelationKey
|| __TEXT.__text _AMSHashIfNeeded
|| __TEXT.__text _AMSLogKey
|| __TEXT.__text _AMSLogableError
|| __TEXT.__text _AMSLogableURL
|| __TEXT.__text _AMSSetLogKey
|| __TEXT.__text _AMSSetLogKeyIfNeeded
|| __TEXT.__text _NSStringFromBagValueType
__ Accounts: _ACAccountIdentifierKey
__ Accounts: _ACAccountPropertyPersonaIdentifier
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifierIDMS
__ Accounts: _ACAccountTypeIdentifierIdentityServices
__ Accounts: _ACAccountTypeIdentifierKey
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _ACAccountTypeIdentifieriTunesStoreSandbox
__ Accounts: _ACErrorDomain
__ Accounts: _ACRawPasswordKey
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountCredential
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kACVerifyCredentialsShouldSaveKey
__ Accounts: _kAccountDataclassBackup
__ AppSupport: _CPSharedResourcesDirectory
__ AssertionServices: _BKSProcessAssertionSetExpirationHandler
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ AssertionServices: _OBJC_METACLASS_$_BKSProcessAssertion
__ AuthKit: _AKAuthenticationAlternateDSIDKey
__ AuthKit: _AKAuthenticationDSIDKey
__ AuthKit: _AKAuthenticationDidPerformInteractiveAuth
__ AuthKit: _AKAuthenticationPasswordKey
__ AuthKit: _AKAuthenticationRawPasswordKey
__ AuthKit: _AKAuthenticationUsernameKey
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationContext
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ AuthKit: _OBJC_CLASS_$_AKAppleIDSession
__ AuthKit: _OBJC_CLASS_$_AKDevice
__ AuthKit: _OBJC_CLASS_$_AKUsernameFormatter
__ CFNetwork: _CFURLCacheCreate
__ CFNetwork: _CFURLCacheSetDiskCapacity
__ CFNetwork: _CFURLCacheSetMemoryCapacity
__ CFNetwork: _CFURLResponseCopyPeerAddress
__ CFNetwork: _NSHTTPCookieDiscard
__ CFNetwork: _NSHTTPCookieDomain
__ CFNetwork: _NSHTTPCookieExpires
__ CFNetwork: _NSHTTPCookieName
__ CFNetwork: _NSHTTPCookiePath
__ CFNetwork: _NSHTTPCookieSecure
__ CFNetwork: _NSHTTPCookieValue
__ CFNetwork: _NSURLAuthenticationMethodServerTrust
__ CFNetwork: _OBJC_CLASS_$_NSHTTPCookie
__ CFNetwork: _OBJC_CLASS_$_NSHTTPCookieStorage
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLCache
__ CFNetwork: _OBJC_CLASS_$_NSURLCredential
__ CFNetwork: _OBJC_CLASS_$_NSURLProtocol
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: _OBJC_METACLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_METACLASS_$_NSURLProtocol
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFAttributedStringCreate
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCopyBundleURL
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetDistributedCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNumberGetType
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetFastestEncoding
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetSystemEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFURLCreateFromFileSystemRepresentation
__ CoreFoundation: _CFURLSetResourcePropertyForKey
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDGetUUIDBytes
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationGetResponseDictionary
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: __kCFBundleShortVersionStringKey
__ CoreFoundation: __kCFSystemVersionProductVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFURLIsExcludedFromBackupKey
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationOtherButtonTitleKey
__ CoreFoundation: _kCFUserNotificationTextFieldValuesKey
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawPath
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextGetClipBoundingBox
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetRGBFillColor
__ CoreGraphics: _CGContextSetRGBStrokeColor
__ CoreGraphics: _CGContextSetShouldAntialias
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextSetTextPosition
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGImageCreateCopy
__ CoreGraphics: _CGImageCreateWithJPEGDataProvider
__ CoreGraphics: _CGImageCreateWithMask
__ CoreGraphics: _CGImageCreateWithPNGDataProvider
__ CoreGraphics: _CGImageGetAlphaInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageMaskCreate
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathAddArcToPoint
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddQuadCurveToPoint
__ CoreGraphics: _CGPathCreateCopy
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateMutableCopy
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleRecord
__ CoreServices: _OBJC_CLASS_$__LSOpenConfiguration
__ CoreServices: _kUTTypePNG
__ CoreSymbolication: _CSArchitectureIs64Bit
__ CoreSymbolication: _CSIsNull
__ CoreSymbolication: _CSSourceInfoGetFilename
__ CoreSymbolication: _CSSourceInfoGetLineNumber
__ CoreSymbolication: _CSSymbolGetName
__ CoreSymbolication: _CSSymbolGetRange
__ CoreSymbolication: _CSSymbolOwnerGetName
__ CoreSymbolication: _CSSymbolOwnerGetSourceInfoWithAddress
__ CoreSymbolication: _CSSymbolicatorCreateWithTaskFlagsAndNotification
__ CoreSymbolication: _CSSymbolicatorGetArchitecture
__ CoreSymbolication: _CSSymbolicatorGetSymbolOwnerWithAddressAtTime
__ CoreSymbolication: _CSSymbolicatorGetSymbolWithAddressAtTime
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreText: _CTFontCreateWithName
__ CoreText: _CTFramesetterCreateWithAttributedString
__ CoreText: _CTFramesetterSuggestFrameSizeWithConstraints
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineDraw
__ CoreText: _kCTFontAttributeName
__ CoreText: _kCTForegroundColorAttributeName
__ CrashReporterSupport: _OSAWriteLogForSubmission
__ CryptoTokenKit: _TKErrorDomain
__ FeatureFlagsSupport: _OBJC_CLASS_$_FFConfiguration
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConditionLock
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDecimalNumber
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ FrontBoardServices: _FBSOpenApplicationOptionKeyLaunchOrigin
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _FBSOpenApplicationOptionKeyUnlockDevice
__ IOKit: _IOConnectCallMethod
__ IOKit: _IOConnectCallStructMethod
__ IOKit: _IOIteratorNext
__ IOKit: _IOMasterPort
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortGetRunLoopSource
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryFromPath
__ IOKit: _IOServiceAddMatchingNotification
__ IOKit: _IOServiceClose
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceGetMatchingServices
__ IOKit: _IOServiceMatching
__ IOKit: _IOServiceOpen
__ IOKit: _kIOMasterPortDefault
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetCount
__ LocalAuthentication: _LAErrorDomain
__ LocalAuthentication: _OBJC_CLASS_$_LAContext
__ ManagedConfiguration: _MCFeatureAccountModificationAllowed
__ ManagedConfiguration: _MCFeatureBookstoreEroticaAllowed
__ ManagedConfiguration: _MCFeatureExplicitContentAllowed
__ ManagedConfiguration: _MCFeatureITunesStorePasswordEntryForced
__ ManagedConfiguration: _MCFeatureInAppPurchasesAllowed
__ ManagedConfiguration: _MCFeatureMaximumAppsRating
__ ManagedConfiguration: _MCFeatureMaximumMoviesRating
__ ManagedConfiguration: _MCFeatureMaximumTVShowsRating
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ Network: _OBJC_CLASS_$_NWInterface
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ Security: _SecAccessControlCreateWithFlags
__ Security: _SecAccessControlGetConstraints
__ Security: _SecAccessControlGetTypeID
__ Security: _SecAccessControlSetConstraints
__ Security: _SecCertificateCopyData
__ Security: _SecCertificateCopyKey
__ Security: _SecCertificateCreateWithData
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecKeyCopyAttestationKey
__ Security: _SecKeyCopyAttributes
__ Security: _SecKeyCopyExternalRepresentation
__ Security: _SecKeyCopyPublicKey
__ Security: _SecKeyCreateAttestation
__ Security: _SecKeyCreateSignature
__ Security: _SecKeyGeneratePair
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTrustCopyInfo
__ Security: _SecTrustEvaluateWithError
__ Security: _SecTrustGetCertificateAtIndex
__ Security: _SecTrustGetCertificateCount
__ Security: _SecTrustSetAnchorCertificates
__ Security: _kSecAttrAccessControl
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAfterFirstUnlock
__ Security: _kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly
__ Security: _kSecAttrAccessibleWhenUnlockedThisDeviceOnly
__ Security: _kSecAttrAccount
__ Security: _kSecAttrApplicationLabel
__ Security: _kSecAttrIsPermanent
__ Security: _kSecAttrKeyClass
__ Security: _kSecAttrKeyClassPrivate
__ Security: _kSecAttrKeyClassSymmetric
__ Security: _kSecAttrKeySizeInBits
__ Security: _kSecAttrKeyType
__ Security: _kSecAttrKeyTypeECSECPrimeRandom
__ Security: _kSecAttrLabel
__ Security: _kSecAttrService
__ Security: _kSecAttrTokenID
__ Security: _kSecAttrTokenIDSecureEnclave
__ Security: _kSecClass
__ Security: _kSecClassCertificate
__ Security: _kSecClassGenericPassword
__ Security: _kSecClassKey
__ Security: _kSecKeyAlgorithmECDSASignatureMessageX962SHA256
__ Security: _kSecPolicyNameAppleAMPService
__ Security: _kSecPrivateKeyAttrs
__ Security: _kSecReturnData
__ Security: _kSecReturnRef
__ Security: _kSecTrustInfoExtendedValidationKey
__ Security: _kSecUseAuthenticationContext
__ Security: _kSecUseDataProtectionKeychain
__ Security: _kSecUseOperationPrompt
__ Security: _kSecValueData
__ Security: _kSecValueRef
__ SoftLinking: __sl_dlopen_audited
__ SpringBoardServices: _OBJC_CLASS_$_SBSMutableUserNotificationTextFieldDefinition
__ SpringBoardServices: _SBSUserNotificationTextFieldDefinitionsKey
__ SpringBoardServices: _SBUserNotificationAllowMenuButtonDismissal
__ SpringBoardServices: _SBUserNotificationButtonTagForUnlockActionKey
__ SpringBoardServices: _SBUserNotificationDefaultButtonTag
__ SpringBoardServices: _SBUserNotificationDismissOnLock
__ SpringBoardServices: _SBUserNotificationDisplayActionButtonOnLockScreen
__ SpringBoardServices: _SBUserNotificationDontDismissOnUnlock
__ SpringBoardServices: _SBUserNotificationForcesModalAlertAppearance
__ SpringBoardServices: _SBUserNotificationPendInSetupIfNotAllowedKey
__ SymptomPresentationFeed: _OBJC_CLASS_$_NWNetworkOfInterestManager
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ UserNotifications: _OBJC_CLASS_$_UNCalendarNotificationTrigger
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNNotificationAction
__ UserNotifications: _OBJC_CLASS_$_UNNotificationAttachment
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ UserNotifications: _UNNotificationDefaultActionIdentifier
__ UserNotifications: _UNNotificationDismissActionIdentifier
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetFloat32Answer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _CCCryptorGCMOneshotDecrypt
__ libSystem.B.dylib: _CCCryptorGCMOneshotEncrypt
__ libSystem.B.dylib: _CCRandomGenerateBytes
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _CC_SHA512
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___progname
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _asprintf
__ libSystem.B.dylib: _atexit
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _container_system_group_path_for_identifier
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_barrier
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _drand48
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _flock
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeifaddrs
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _ftell
__ libSystem.B.dylib: _ftruncate
__ libSystem.B.dylib: _getifaddrs
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getpwuid
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _inet_ntoa
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset_s
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_check
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _open_dprotected_np
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_rwlock_wrlock
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _scanf
__ libSystem.B.dylib: _srand48
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _syslog
__ libSystem.B.dylib: _tcgetattr
__ libSystem.B.dylib: _tcsetattr
__ libSystem.B.dylib: _umask
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _vm_allocate
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _class_addProtocol
__ libobjc.A.dylib: _imp_implementationWithBlock
__ libobjc.A.dylib: _imp_removeBlock
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_allocateClassPair
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_disposeClassPair
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getMetaClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_registerClassPair
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClassName
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libresolv.9.dylib: _res_9_getservers
__ libresolv.9.dylib: _res_9_ndestroy
__ libresolv.9.dylib: _res_9_ninit
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_bind_text16
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_name
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_result_codes
__ libsqlite3.dylib: _sqlite3_file_control
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_next_stmt
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_sql
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_stmt_readonly
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
AMSAbsinthe : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer_Project, AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAbsinthe _signingDataFromRequest:buyParams:bag:completion:]
  +[AMSAbsinthe createBagForSubProfile]
  +[AMSAbsinthe handleResponse:bag:]
  +[AMSAbsinthe bagKeySet]
  +[AMSAbsinthe headersForRequest:buyParams:bag:]
  +[AMSAbsinthe bagSubProfileVersion]
  +[AMSAbsinthe addRequiredBagKeysToAggregator:]
  +[AMSAbsinthe _dataToSignFromRequest:bagDefinition:]
  +[AMSAbsinthe bagSubProfile]


AMSAbsintheSignature : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *signature
 @property  NSString *servKey

  // instance methods
  -[AMSAbsintheSignature signature]
  -[AMSAbsintheSignature servKey]
  -[AMSAbsintheSignature .cxx_destruct]
  -[AMSAbsintheSignature setSignature:]
  -[AMSAbsintheSignature setServKey:]


AMSAbsintheSession : NSObject /usr/lib/libSystem.B.dylib
 @property  ^{PSCSessionInternal_=} sessionRef
 @property  NSString *servKey

  // class methods
  +[AMSAbsintheSession defaultSession]

  // instance methods
  -[AMSAbsintheSession init]
  -[AMSAbsintheSession servKey]
  -[AMSAbsintheSession .cxx_destruct]
  -[AMSAbsintheSession signData:bag:error:]
  -[AMSAbsintheSession setServKey:]
  -[AMSAbsintheSession clearSession]
  -[AMSAbsintheSession sessionRef]
  -[AMSAbsintheSession verifyData:bag:error:]
  -[AMSAbsintheSession setSessionRef:]
  -[AMSAbsintheSession _prepareContextWithBag:error:]


AMSAccountsChangedObservable : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSObservable *observable
 @property  NSObject<OS_dispatch_queue> *notificationsQueue
 @property  ACAccount *account
 @property  NSString *accountTypeIdentifier

  // class methods
  +[AMSAccountsChangedObservable sharedInstance]
  +[AMSAccountsChangedObservable createdObservables]
  +[AMSAccountsChangedObservable createdObservablesAccessQueue]
  +[AMSAccountsChangedObservable _processChangedAccount:]
  +[AMSAccountsChangedObservable sharedLocalAccountInstance]

  // instance methods
  -[AMSAccountsChangedObservable _accountStoreDidChange:]
  -[AMSAccountsChangedObservable subscribe:]
  -[AMSAccountsChangedObservable dealloc]
  -[AMSAccountsChangedObservable account]
  -[AMSAccountsChangedObservable .cxx_destruct]
  -[AMSAccountsChangedObservable setObservable:]
  -[AMSAccountsChangedObservable observable]
  -[AMSAccountsChangedObservable initWithAccount:]
  -[AMSAccountsChangedObservable unsubscribe:]
  -[AMSAccountsChangedObservable _initWithAccount:accountTypeIdentifier:]
  -[AMSAccountsChangedObservable notificationsQueue]
  -[AMSAccountsChangedObservable _processChangedAccount:]
  -[AMSAccountsChangedObservable accountTypeIdentifier]
  -[AMSAccountsChangedObservable _shouldNotifyObserversForChangedAccount:]
  -[AMSAccountsChangedObservable initWithAccountTypeIdentifier:]
  -[AMSAccountsChangedObservable setNotificationsQueue:]


AMSAccountsChangedResult : NSObject /usr/lib/libSystem.B.dylib <AMSHashable>
 @property  ACAccount *account
 @property  NSString *hashedDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSAccountsChangedResult account]
  -[AMSAccountsChangedResult .cxx_destruct]
  -[AMSAccountsChangedResult initWithAccount:]
  -[AMSAccountsChangedResult hashedDescription]


AMSAccountStoreCache : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSAccountStoreCache mediaTypeForAccountStore:]
  +[AMSAccountStoreCache cache]
  +[AMSAccountStoreCache accountStoreForMediaType:]
  +[AMSAccountStoreCache _resetAccountStoreCache]
  +[AMSAccountStoreCache cacheAccessQueue]


AMSAcknowledgePrivacyTask : AMSTask
 @property  NSSet *privacyIdentifiers
 @property  ACAccount *account

  // class methods
  +[AMSAcknowledgePrivacyTask _contentVersionForPrivacyIdentifier:]
  +[AMSAcknowledgePrivacyTask acknowledgementNeededForPrivacyIdentifier:account:]
  +[AMSAcknowledgePrivacyTask _multiplexPrivacyIdentifier:contentVersion:]
  +[AMSAcknowledgePrivacyTask acknowledgementNeededForPrivacyIdentifier:]
  +[AMSAcknowledgePrivacyTask hasPreviouslyAcknowledgedPrivacyIdentifier:account:]
  +[AMSAcknowledgePrivacyTask hasPreviouslyAcknowledgedPrivacyIdentifier:]
  +[AMSAcknowledgePrivacyTask _storePrivacyIdentifiers]
  +[AMSAcknowledgePrivacyTask _accountStoreForPrivacyIdentifier:]

  // instance methods
  -[AMSAcknowledgePrivacyTask setAccount:]
  -[AMSAcknowledgePrivacyTask account]
  -[AMSAcknowledgePrivacyTask .cxx_destruct]
  -[AMSAcknowledgePrivacyTask initWithPrivacyIdentifier:account:]
  -[AMSAcknowledgePrivacyTask privacyIdentifiers]
  -[AMSAcknowledgePrivacyTask initWithPrivacyIdentifiers:account:]
  -[AMSAcknowledgePrivacyTask initWithPrivacyIdentifier:]
  -[AMSAcknowledgePrivacyTask acknowledgePrivacy]
  -[AMSAcknowledgePrivacyTask initWithPrivacyIdentifiers:]
  -[AMSAcknowledgePrivacyTask setPrivacyIdentifiers:]


AMSAnisette : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer_Project>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAnisette handleResponse:account:type:bag:]
  +[AMSAnisette createBagForSubProfile]
  +[AMSAnisette _syncMachineWithActionData:type:account:bag:]
  +[AMSAnisette bagKeySet]
  +[AMSAnisette _headersForRequest:account:type:]
  +[AMSAnisette _provisionMachineWithActionData:type:account:bag:]
  +[AMSAnisette _handleActionName:actionData:account:type:bag:]
  +[AMSAnisette _accountIDForType:account:]
  +[AMSAnisette handleResponse:type:bag:account:]
  +[AMSAnisette _eraseProvisioningForType:account:]
  +[AMSAnisette headersForRequest:account:type:bag:]
  +[AMSAnisette bagSubProfileVersion]
  +[AMSAnisette addRequiredBagKeysToAggregator:]
  +[AMSAnisette _bagDomainExistsForURL:type:bag:completion:]
  +[AMSAnisette _shouldRetryAfterError:]
  +[AMSAnisette bagSubProfile]


AMSAnisetteProvisionTask : AMSTask
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSData *data
 @property  long long type

  // instance methods
  -[AMSAnisetteProvisionTask account]
  -[AMSAnisetteProvisionTask .cxx_destruct]
  -[AMSAnisetteProvisionTask data]
  -[AMSAnisetteProvisionTask bag]
  -[AMSAnisetteProvisionTask type]
  -[AMSAnisetteProvisionTask initWithData:type:account:bag:]
  -[AMSAnisetteProvisionTask performProvisioning]
  -[AMSAnisetteProvisionTask _startProvisioningWithOutputSessionID:error:]
  -[AMSAnisetteProvisionTask _createFinishProvisioningRequestWithClientData:error:]
  -[AMSAnisetteProvisionTask _processFinishProvisioningResult:sessionID:error:]


AMSAnisetteSyncTask : AMSTask
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSData *data
 @property  long long type

  // instance methods
  -[AMSAnisetteSyncTask account]
  -[AMSAnisetteSyncTask .cxx_destruct]
  -[AMSAnisetteSyncTask data]
  -[AMSAnisetteSyncTask bag]
  -[AMSAnisetteSyncTask type]
  -[AMSAnisetteSyncTask performSync]
  -[AMSAnisetteSyncTask initWithData:type:account:bag:]


AMSAppleCardSilentEnrollment : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAppleCardSilentEnrollment createBagForSubProfile]
  +[AMSAppleCardSilentEnrollment bagKeySet]
  +[AMSAppleCardSilentEnrollment bagSubProfileVersion]
  +[AMSAppleCardSilentEnrollment addRequiredBagKeysToAggregator:]
  +[AMSAppleCardSilentEnrollment gsTokenForAccount:error:]
  +[AMSAppleCardSilentEnrollment headersForAccount:]
  +[AMSAppleCardSilentEnrollment bagSubProfile]


AMSAppleCardSilentEnrollmentProtocolHandler : AMSURLProtocolHandler <NSURLSessionDelegate, AMSURLProtocolDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSAppleCardSilentEnrollmentProtocolHandler reconfigureNewRequest:originalTask:redirect:error:]
  -[AMSAppleCardSilentEnrollmentProtocolHandler AMSURLSession:task:handleAuthenticateRequest:completion:]


AMSApplePayClassic : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer_Project, AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSApplePayClassic createBagForSubProfile]
  +[AMSApplePayClassic bagKeySet]
  +[AMSApplePayClassic bagSubProfileVersion]
  +[AMSApplePayClassic addRequiredBagKeysToAggregator:]
  +[AMSApplePayClassic bagSubProfile]


AMSAttestation : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSAttestation _generateCertificateChainStringsForOptions:error:]
  +[AMSAttestation attestationWithOptions:error:]
  +[AMSAttestation _attestationPListWithStyle:primaryAttestation:extendedAttestation:error:]
  +[AMSAttestation attestationHTTPBodyDataWithStyle:regenerateKeys:error:]
  +[AMSAttestation clearAttestationWithAccount:options:error:]


AMSAuthenticateOptions : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  BOOL allowSecondaryCredentialSource
 @property  NSString *companionDeviceClientInfo
 @property  NSString *companionDeviceUDID
 @property  BOOL demoAccountSetup
 @property  BOOL ephemeral
 @property  long long serviceType
 @property  BOOL remoteProxyAuthentication
 @property  NSString *serviceIdentifier
 @property  BOOL allowServerDialogs
 @property  unsigned long authenticationType
 @property  NSString *appProvidedContext
 @property  NSDictionary *appProvidedData
 @property  NSString *cancelButtonString
 @property  BOOL canMakeAccountActive
 @property  NSDictionary *createAccountQueryParams
 @property  AMSProcessInfo *clientInfo
 @property  unsigned long credentialSource
 @property  NSString *debugReason
 @property  NSString *defaultButtonString
 @property  BOOL enableAccountCreation
 @property  NSDictionary *HTTPHeaders
 @property  NSURL *iconBundleURL
 @property  BOOL ignoreAccountConversion
 @property  NSString *logKey
 @property  NSString *promptTitle
 @property  NSString *proxyAppBundleID
 @property  NSString *proxyAppName
 @property  NSString *reason
 @property  NSString *userAgent
 @property  NSString *userAgentSuffix
 @property  BOOL usernameEditable

  // class methods
  +[AMSAuthenticateOptions supportsSecureCoding]

  // instance methods
  -[AMSAuthenticateOptions appProvidedContext]
  -[AMSAuthenticateOptions setUserAgent:]
  -[AMSAuthenticateOptions iconBundleURL]
  -[AMSAuthenticateOptions copyWithZone:]
  -[AMSAuthenticateOptions setCancelButtonString:]
  -[AMSAuthenticateOptions setMediaType:]
  -[AMSAuthenticateOptions cancelButtonString]
  -[AMSAuthenticateOptions userAgentSuffix]
  -[AMSAuthenticateOptions appProvidedData]
  -[AMSAuthenticateOptions mediaType]
  -[AMSAuthenticateOptions proxyAppBundleID]
  -[AMSAuthenticateOptions userAgent]
  -[AMSAuthenticateOptions setDebugReason:]
  -[AMSAuthenticateOptions setPromptTitle:]
  -[AMSAuthenticateOptions setLogKey:]
  -[AMSAuthenticateOptions allowSecondaryCredentialSource]
  -[AMSAuthenticateOptions promptTitle]
  -[AMSAuthenticateOptions setAppProvidedData:]
  -[AMSAuthenticateOptions serviceIdentifier]
  -[AMSAuthenticateOptions setProxyAppBundleID:]
  -[AMSAuthenticateOptions setUserAgentSuffix:]
  -[AMSAuthenticateOptions setAppProvidedContext:]
  -[AMSAuthenticateOptions setAuthKitData:]
  -[AMSAuthenticateOptions setReason:]
  -[AMSAuthenticateOptions defaultButtonString]
  -[AMSAuthenticateOptions setCanMakeAccountActive:]
  -[AMSAuthenticateOptions authenticationType]
  -[AMSAuthenticateOptions setDefaultButtonString:]
  -[AMSAuthenticateOptions init]
  -[AMSAuthenticateOptions setAuthenticationType:]
  -[AMSAuthenticateOptions setHTTPHeaders:]
  -[AMSAuthenticateOptions companionDeviceUDID]
  -[AMSAuthenticateOptions setServiceIdentifier:]
  -[AMSAuthenticateOptions setIconBundleURL:]
  -[AMSAuthenticateOptions setProxyAppName:]
  -[AMSAuthenticateOptions logKey]
  -[AMSAuthenticateOptions proxyAppName]
  -[AMSAuthenticateOptions isRemoteProxyAuthentication]
  -[AMSAuthenticateOptions setAllowServerDialogs:]
  -[AMSAuthenticateOptions setPresentingViewController:]
  -[AMSAuthenticateOptions setServiceType:]
  -[AMSAuthenticateOptions presentingViewController]
  -[AMSAuthenticateOptions setIgnoreAccountConversion:]
  -[AMSAuthenticateOptions .cxx_destruct]
  -[AMSAuthenticateOptions credentialSource]
  -[AMSAuthenticateOptions enableAccountCreation]
  -[AMSAuthenticateOptions serviceType]
  -[AMSAuthenticateOptions setDemoAccountSetup:]
  -[AMSAuthenticateOptions encodeWithCoder:]
  -[AMSAuthenticateOptions allowServerDialogs]
  -[AMSAuthenticateOptions optionsDictionary]
  -[AMSAuthenticateOptions setAllowSecondaryCredentialSource:]
  -[AMSAuthenticateOptions clientInfo]
  -[AMSAuthenticateOptions authKitData]
  -[AMSAuthenticateOptions ephemeral]
  -[AMSAuthenticateOptions isDemoAccountSetup]
  -[AMSAuthenticateOptions isEqual:]
  -[AMSAuthenticateOptions createAccountQueryParams]
  -[AMSAuthenticateOptions setClientInfo:]
  -[AMSAuthenticateOptions setCompanionDeviceClientInfo:]
  -[AMSAuthenticateOptions ignoreAccountConversion]
  -[AMSAuthenticateOptions optionsDictionaryForRemoteProxyAuthentication]
  -[AMSAuthenticateOptions setEnableAccountCreation:]
  -[AMSAuthenticateOptions setUsernameEditable:]
  -[AMSAuthenticateOptions usernameEditable]
  -[AMSAuthenticateOptions initWithOptionsDictionary:]
  -[AMSAuthenticateOptions setEphemeral:]
  -[AMSAuthenticateOptions debugReason]
  -[AMSAuthenticateOptions setCompanionDeviceUDID:]
  -[AMSAuthenticateOptions setCreateAccountQueryParams:]
  -[AMSAuthenticateOptions reason]
  -[AMSAuthenticateOptions HTTPHeaders]
  -[AMSAuthenticateOptions setCredentialSource:]
  -[AMSAuthenticateOptions companionDeviceClientInfo]
  -[AMSAuthenticateOptions initWithCoder:]
  -[AMSAuthenticateOptions canMakeAccountActive]


AMSAuthenticateRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  ACAccount *account
 @property  NSString *logKey
 @property  AMSAuthenticateOptions *options
 @property  NSDictionary *userInfo

  // class methods
  +[AMSAuthenticateRequest supportsSecureCoding]

  // instance methods
  -[AMSAuthenticateRequest setLogKey:]
  -[AMSAuthenticateRequest setUserInfo:]
  -[AMSAuthenticateRequest logKey]
  -[AMSAuthenticateRequest setAccount:]
  -[AMSAuthenticateRequest account]
  -[AMSAuthenticateRequest .cxx_destruct]
  -[AMSAuthenticateRequest options]
  -[AMSAuthenticateRequest encodeWithCoder:]
  -[AMSAuthenticateRequest setOptions:]
  -[AMSAuthenticateRequest userInfo]
  -[AMSAuthenticateRequest initWithAccount:options:]
  -[AMSAuthenticateRequest initWithDSID:altDSID:username:options:]
  -[AMSAuthenticateRequest initWithCoder:]


AMSAuthenticateResult : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  ACAccount *account
 @property  NSDictionary *serverResponse

  // class methods
  +[AMSAuthenticateResult supportsSecureCoding]

  // instance methods
  -[AMSAuthenticateResult serverResponse]
  -[AMSAuthenticateResult account]
  -[AMSAuthenticateResult .cxx_destruct]
  -[AMSAuthenticateResult encodeWithCoder:]
  -[AMSAuthenticateResult initWithAccount:]
  -[AMSAuthenticateResult initWithCoder:]


AMSAuthenticateTask : AMSTask <AMSBagConsumer>
 @property  <AMSBagProtocol> *bag
 @property  <AMSAuthenticateTaskDelegate> *delegate
 @property  AMSAuthenticateOptions *options
 @property  NSString *password
 @property  NSString *multiUserToken
 @property  NSString *rawPassword
 @property  NSString *altDSID
 @property  NSNumber *DSID
 @property  NSUUID *homeIdentifier
 @property  NSUUID *homeUserIdentifier
 @property  NSString *username
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAuthenticateTask createBagForSubProfile]
  +[AMSAuthenticateTask bagKeySet]
  +[AMSAuthenticateTask bagSubProfileVersion]
  +[AMSAuthenticateTask _createFallbackBag]
  +[AMSAuthenticateTask _updateAccountPasswordUsingSecondaryAccounts:]
  +[AMSAuthenticateTask bagSubProfile]

  // instance methods
  -[AMSAuthenticateTask setDSID:]
  -[AMSAuthenticateTask setUsername:]
  -[AMSAuthenticateTask altDSID]
  -[AMSAuthenticateTask initWithRequest:]
  -[AMSAuthenticateTask setAltDSID:]
  -[AMSAuthenticateTask DSID]
  -[AMSAuthenticateTask password]
  -[AMSAuthenticateTask homeID]
  -[AMSAuthenticateTask init]
  -[AMSAuthenticateTask setPassword:]
  -[AMSAuthenticateTask username]
  -[AMSAuthenticateTask .cxx_destruct]
  -[AMSAuthenticateTask options]
  -[AMSAuthenticateTask setBag:]
  -[AMSAuthenticateTask bag]
  -[AMSAuthenticateTask rawPassword]
  -[AMSAuthenticateTask initWithRequest:bag:]
  -[AMSAuthenticateTask setRawPassword:]
  -[AMSAuthenticateTask setDelegate:]
  -[AMSAuthenticateTask setHomeID:]
  -[AMSAuthenticateTask performAuthentication]
  -[AMSAuthenticateTask initWithAccount:options:]
  -[AMSAuthenticateTask homeIdentifier]
  -[AMSAuthenticateTask initWithAccount:options:bag:]
  -[AMSAuthenticateTask _accountForAuthenticationWithError:]
  -[AMSAuthenticateTask multiUserToken]
  -[AMSAuthenticateTask _runCreateAccountDialogWithError:]
  -[AMSAuthenticateTask _createAuthKitUpdateTaskForAccount:]
  -[AMSAuthenticateTask _attemptMultiUserTokenAuthenticationForAccount:]
  -[AMSAuthenticateTask _accountStoreForAuthentication]
  -[AMSAuthenticateTask _attemptPasswordReuseAuthenticationForAccount:error:]
  -[AMSAuthenticateTask _performAuthenticationUsingAccount:credentialSource:error:]
  -[AMSAuthenticateTask _sanitizeError:]
  -[AMSAuthenticateTask _updateAccountWithProvidedInformation:]
  -[AMSAuthenticateTask _runDialogRequest:]
  -[AMSAuthenticateTask _handleDialogFromError:]
  -[AMSAuthenticateTask setHomeIdentifier:]
  -[AMSAuthenticateTask setMultiUserToken:]
  -[AMSAuthenticateTask homeUserIdentifier]
  -[AMSAuthenticateTask setHomeUserIdentifier:]
  -[AMSAuthenticateTask delegate]


AMSAuthKitUpdateResult : NSObject /usr/lib/libSystem.B.dylib
 @property  ACAccount *account
 @property  NSDictionary *authenticationResults
 @property  unsigned long credentialSource

  // class methods
  +[AMSAuthKitUpdateResult _createUpdatedAccount:usingAuthenticationResults:options:]

  // instance methods
  -[AMSAuthKitUpdateResult account]
  -[AMSAuthKitUpdateResult .cxx_destruct]
  -[AMSAuthKitUpdateResult credentialSource]
  -[AMSAuthKitUpdateResult authenticationResults]
  -[AMSAuthKitUpdateResult initWithAccount:authenticationResults:options:]
  -[AMSAuthKitUpdateResult initWithAccount:authenticationResults:credentialSource:options:]


AMSAuthKitUpdateTask : AMSTask <AKAppleIDAuthenticationDelegate>
 @property  <AMSAuthKitUpdateTaskDelegate> *delegate
 @property  ACAccount *account
 @property  AMSAuthenticateOptions *options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAuthKitUpdateTask _updateAccountRawPasswordUsingSecondaryAccounts:]

  // instance methods
  -[AMSAuthKitUpdateTask account]
  -[AMSAuthKitUpdateTask .cxx_destruct]
  -[AMSAuthKitUpdateTask options]
  -[AMSAuthKitUpdateTask _authenticationType]
  -[AMSAuthKitUpdateTask authenticationController:shouldContinueWithAuthenticationResults:error:forContext:]
  -[AMSAuthKitUpdateTask setDelegate:]
  -[AMSAuthKitUpdateTask initWithAccount:options:]
  -[AMSAuthKitUpdateTask performAuthKitUpdate]
  -[AMSAuthKitUpdateTask _createAuthKitContext]
  -[AMSAuthKitUpdateTask delegate]
  -[AMSAuthKitUpdateTask _createAuthKitController]
  -[AMSAuthKitUpdateTask _configureAuthKitContext:]
  -[AMSAuthKitUpdateTask _logPromptSummaryForResults:context:]
  -[AMSAuthKitUpdateTask _canPresentBackgroundPrompt]
  -[AMSAuthKitUpdateTask _configureClientInfoForContext:]
  -[AMSAuthKitUpdateTask _configureCompanionDeviceForContext:]
  -[AMSAuthKitUpdateTask _configureIdentifiersForContext:]
  -[AMSAuthKitUpdateTask _configureProxyIdentifiersForContext:]
  -[AMSAuthKitUpdateTask _configureStringsForContext:]


AMSAutomaticDownloadKindsFetchTask : AMSTask <AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAutomaticDownloadKindsFetchTask createBagForSubProfile]
  +[AMSAutomaticDownloadKindsFetchTask bagKeySet]
  +[AMSAutomaticDownloadKindsFetchTask bagSubProfileVersion]
  +[AMSAutomaticDownloadKindsFetchTask addRequiredBagKeysToAggregator:]
  +[AMSAutomaticDownloadKindsFetchTask bagSubProfile]

  // instance methods
  -[AMSAutomaticDownloadKindsFetchTask perform]
  -[AMSAutomaticDownloadKindsFetchTask account]
  -[AMSAutomaticDownloadKindsFetchTask .cxx_destruct]
  -[AMSAutomaticDownloadKindsFetchTask bag]
  -[AMSAutomaticDownloadKindsFetchTask initWithAccount:bag:]


AMSAutomaticDownloadKindsResult : NSObject /usr/lib/libSystem.B.dylib
 @property  ACAccount *account
 @property  NSArray *enabledMediaKinds

  // instance methods
  -[AMSAutomaticDownloadKindsResult account]
  -[AMSAutomaticDownloadKindsResult .cxx_destruct]
  -[AMSAutomaticDownloadKindsResult enabledMediaKinds]
  -[AMSAutomaticDownloadKindsResult initWithAccount:andEnabledMediaKinds:]


AMSAutomaticDownloadKindsSetTask : AMSTask <NSURLSessionDelegate, AMSURLProtocolDelegate, AMSBagConsumer>
 @property  AMSURLSession *session
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSArray *enabledMediaKinds
 @property  <AMSRequestPresentationDelegate> *presentationDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAutomaticDownloadKindsSetTask createBagForSubProfile]
  +[AMSAutomaticDownloadKindsSetTask bagKeySet]
  +[AMSAutomaticDownloadKindsSetTask bagSubProfileVersion]
  +[AMSAutomaticDownloadKindsSetTask addRequiredBagKeysToAggregator:]
  +[AMSAutomaticDownloadKindsSetTask bagSubProfile]

  // instance methods
  -[AMSAutomaticDownloadKindsSetTask perform]
  -[AMSAutomaticDownloadKindsSetTask setSession:]
  -[AMSAutomaticDownloadKindsSetTask presentationDelegate]
  -[AMSAutomaticDownloadKindsSetTask AMSURLSession:task:handleDialogRequest:completion:]
  -[AMSAutomaticDownloadKindsSetTask session]
  -[AMSAutomaticDownloadKindsSetTask account]
  -[AMSAutomaticDownloadKindsSetTask .cxx_destruct]
  -[AMSAutomaticDownloadKindsSetTask AMSURLSession:task:handleAuthenticateRequest:completion:]
  -[AMSAutomaticDownloadKindsSetTask bag]
  -[AMSAutomaticDownloadKindsSetTask enabledMediaKinds]
  -[AMSAutomaticDownloadKindsSetTask initWithEnabledMediaKinds:account:bag:]
  -[AMSAutomaticDownloadKindsSetTask initWithEnabledMediaKinds:account:bag:presentationDelegate:]


AMSBag : NSObject /usr/lib/libSystem.B.dylib <AMSBagProtocol>
 @property  <AMSBagDataSourceProtocol> *dataSource
 @property  NSString *descriptionExtended
 @property  BOOL expired
 @property  NSDate *expirationDate
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  AMSProcessInfo *processInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSBag bagCache]
  +[AMSBag bagForProfile:profileVersion:]
  +[AMSBag _resetBagCache]
  +[AMSBag bagCacheAccessQueue]
  +[AMSBag bagForProfile:profileVersion:processInfo:]

  // instance methods
  -[AMSBag initWithDataSource:]
  -[AMSBag stringForKey:]
  -[AMSBag setDataSource:]
  -[AMSBag processInfo]
  -[AMSBag .cxx_destruct]
  -[AMSBag descriptionExtended]
  -[AMSBag profileVersion]
  -[AMSBag URLForKey:account:]
  -[AMSBag isExpired]
  -[AMSBag integerForKey:]
  -[AMSBag dataSource]
  -[AMSBag boolForKey:]
  -[AMSBag expirationDate]
  -[AMSBag profile]
  -[AMSBag URLForKey:]
  -[AMSBag createSnapshotWithCompletion:]
  -[AMSBag isLoaded]
  -[AMSBag arrayForKey:]
  -[AMSBag dictionaryForKey:]
  -[AMSBag doubleForKey:]


AMSBagFrozenDataSource : NSObject /usr/lib/libSystem.B.dylib <AMSBagDataSourceProtocol, NSCopying, NSSecureCoding>
 @property  AMSBagKeySet *bagKeySet
 @property  NSArray *cookies
 @property  NSDictionary *data
 @property  NSDate *expirationDate
 @property  BOOL loaded
 @property  AMSProcessInfo *processInfo
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  NSString *descriptionExtended
 @property  @? dataSourceChangedHandler
 @property  @? dataSourceDataInvalidatedHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSBagFrozenDataSource supportsSecureCoding]

  // instance methods
  -[AMSBagFrozenDataSource copyWithZone:]
  -[AMSBagFrozenDataSource _initWithProfile:profileVersion:data:expirationDate:bagKeySet:cookies:processInfo:]
  -[AMSBagFrozenDataSource loadWithCompletion:]
  -[AMSBagFrozenDataSource processInfo]
  -[AMSBagFrozenDataSource valueForURLVariable:account:]
  -[AMSBagFrozenDataSource .cxx_destruct]
  -[AMSBagFrozenDataSource profileVersion]
  -[AMSBagFrozenDataSource encodeWithCoder:]
  -[AMSBagFrozenDataSource data]
  -[AMSBagFrozenDataSource bagKeySet]
  -[AMSBagFrozenDataSource bagKeyInfoForKey:]
  -[AMSBagFrozenDataSource cookies]
  -[AMSBagFrozenDataSource expirationDate]
  -[AMSBagFrozenDataSource profile]
  -[AMSBagFrozenDataSource isLoaded]
  -[AMSBagFrozenDataSource initWithCoder:]


AMSBagFrozenDataSourceBuilder : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSBagKeySet *bagKeySet
 @property  NSArray *cookies
 @property  NSDictionary *data
 @property  NSDate *expirationDate
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  AMSProcessInfo *processInfo

  // instance methods
  -[AMSBagFrozenDataSourceBuilder setData:]
  -[AMSBagFrozenDataSourceBuilder setBagKeySet:]
  -[AMSBagFrozenDataSourceBuilder processInfo]
  -[AMSBagFrozenDataSourceBuilder setExpirationDate:]
  -[AMSBagFrozenDataSourceBuilder .cxx_destruct]
  -[AMSBagFrozenDataSourceBuilder profileVersion]
  -[AMSBagFrozenDataSourceBuilder setProcessInfo:]
  -[AMSBagFrozenDataSourceBuilder data]
  -[AMSBagFrozenDataSourceBuilder bagKeySet]
  -[AMSBagFrozenDataSourceBuilder initWithFrozenDataSource:]
  -[AMSBagFrozenDataSourceBuilder createFrozenDataSource]
  -[AMSBagFrozenDataSourceBuilder setCookies:]
  -[AMSBagFrozenDataSourceBuilder cookies]
  -[AMSBagFrozenDataSourceBuilder expirationDate]
  -[AMSBagFrozenDataSourceBuilder profile]
  -[AMSBagFrozenDataSourceBuilder setProfileVersion:]
  -[AMSBagFrozenDataSourceBuilder setProfile:]


AMSBagKeyInfo : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *bagKey
 @property  <NSObject> *defaultValue
 @property  unsigned long valueType

  // class methods
  +[AMSBagKeyInfo supportsSecureCoding]

  // instance methods
  -[AMSBagKeyInfo defaultValue]
  -[AMSBagKeyInfo valueType]
  -[AMSBagKeyInfo initWithBagKey:valueType:]
  -[AMSBagKeyInfo .cxx_destruct]
  -[AMSBagKeyInfo encodeWithCoder:]
  -[AMSBagKeyInfo isEqual:]
  -[AMSBagKeyInfo bagKey]
  -[AMSBagKeyInfo initWithBagKey:valueType:defaultValue:]
  -[AMSBagKeyInfo initWithCoder:]


AMSBagKeySet : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSSet *keys
 @property  unsigned long count

  // class methods
  +[AMSBagKeySet supportsSecureCoding]
  +[AMSBagKeySet registerBagKeySet:forProfile:profileVersion:]
  +[AMSBagKeySet registeredBagKeySetForProfile:profileVersion:]
  +[AMSBagKeySet bagKeySetCache]
  +[AMSBagKeySet bagKeySetCacheAccessQueue]
  +[AMSBagKeySet resetRegisteredBagKeySets]

  // instance methods
  -[AMSBagKeySet copyWithZone:]
  -[AMSBagKeySet keys]
  -[AMSBagKeySet hasKey:]
  -[AMSBagKeySet .cxx_destruct]
  -[AMSBagKeySet encodeWithCoder:]
  -[AMSBagKeySet bagKeyInfoForKey:]
  -[AMSBagKeySet isEqual:]
  -[AMSBagKeySet count]
  -[AMSBagKeySet mutableCopyWithZone:]
  -[AMSBagKeySet initWithCoder:]


AMSMutableBagKeySet : AMSBagKeySet
 @property  NSMutableSet *mutableKeys

  // instance methods
  -[AMSMutableBagKeySet keys]
  -[AMSMutableBagKeySet unionBagKeySet:]
  -[AMSMutableBagKeySet init]
  -[AMSMutableBagKeySet .cxx_destruct]
  -[AMSMutableBagKeySet addBagKey:valueType:defaultValue:]
  -[AMSMutableBagKeySet addBagKey:valueType:]
  -[AMSMutableBagKeySet mutableKeys]
  -[AMSMutableBagKeySet setMutableKeys:]


AMSBagKeySetAggregator : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *bagKeySets

  // instance methods
  -[AMSBagKeySetAggregator init]
  -[AMSBagKeySetAggregator .cxx_destruct]
  -[AMSBagKeySetAggregator setBagKeySets:]
  -[AMSBagKeySetAggregator bagKeySets]
  -[AMSBagKeySetAggregator hasBagKeySetForConsumer:]
  -[AMSBagKeySetAggregator generateAggregatedBagKeySet]
  -[AMSBagKeySetAggregator addBagKeySet:forConsumer:]


AMSBagNetworkDataSource : NSObject /usr/lib/libSystem.B.dylib <AMSBagDataSourceProtocol>
 @property  AMSObserver *accountsChangedObserver
 @property  AMSBagNetworkTaskResult *cachedResult
 @property  NSObject<OS_dispatch_queue> *cachedDataAccessQueue
 @property  NSString *cachedStorefront
 @property  NSObject<OS_dispatch_queue> *cachedStorefrontAccessQueue
 @property  NSObject<OS_dispatch_queue> *completionQueue
 @property  AMSBagNetworkTask *currentLoadTask
 @property  NSError *activeFailure
 @property  NSObject<OS_dispatch_queue> *processAccountStoreDidChangeNotificationQueue
 @property  NSDate *expirationDate
 @property  BOOL loaded
 @property  AMSProcessInfo *processInfo
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  NSString *descriptionExtended
 @property  @? dataSourceChangedHandler
 @property  @? dataSourceDataInvalidatedHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSBagNetworkDataSource _isDataDictionary:equalToDataDictionary:]
  +[AMSBagNetworkDataSource valueForURLVariable:account:clientInfo:]
  +[AMSBagNetworkDataSource _shouldProcessChangedAccount:forMediaType:]

  // instance methods
  -[AMSBagNetworkDataSource _accountStoreDidChange]
  -[AMSBagNetworkDataSource completionQueue]
  -[AMSBagNetworkDataSource dataSourceChangedHandler]
  -[AMSBagNetworkDataSource setCompletionQueue:]
  -[AMSBagNetworkDataSource setCurrentLoadTask:]
  -[AMSBagNetworkDataSource setAccountsChangedObserver:]
  -[AMSBagNetworkDataSource currentLoadTask]
  -[AMSBagNetworkDataSource cachedStorefront]
  -[AMSBagNetworkDataSource setProcessAccountStoreDidChangeNotificationQueue:]
  -[AMSBagNetworkDataSource setDataSourceDataInvalidatedHandler:]
  -[AMSBagNetworkDataSource loadWithCompletion:]
  -[AMSBagNetworkDataSource processInfo]
  -[AMSBagNetworkDataSource valueForURLVariable:account:]
  -[AMSBagNetworkDataSource dataSourceDataInvalidatedHandler]
  -[AMSBagNetworkDataSource dealloc]
  -[AMSBagNetworkDataSource .cxx_destruct]
  -[AMSBagNetworkDataSource descriptionExtended]
  -[AMSBagNetworkDataSource _invalidateCacheNotification:]
  -[AMSBagNetworkDataSource profileVersion]
  -[AMSBagNetworkDataSource setDataSourceChangedHandler:]
  -[AMSBagNetworkDataSource _fetchBag]
  -[AMSBagNetworkDataSource processAccountStoreDidChangeNotificationQueue]
  -[AMSBagNetworkDataSource setCachedStorefrontAccessQueue:]
  -[AMSBagNetworkDataSource _updateCachedResult:]
  -[AMSBagNetworkDataSource cachedStorefrontAccessQueue]
  -[AMSBagNetworkDataSource bagKeyInfoForKey:]
  -[AMSBagNetworkDataSource setCachedStorefront:]
  -[AMSBagNetworkDataSource activeFailure]
  -[AMSBagNetworkDataSource cachedDataAccessQueue]
  -[AMSBagNetworkDataSource expirationDate]
  -[AMSBagNetworkDataSource setCachedDataAccessQueue:]
  -[AMSBagNetworkDataSource setActiveFailure:]
  -[AMSBagNetworkDataSource profile]
  -[AMSBagNetworkDataSource accountsChangedObserver]
  -[AMSBagNetworkDataSource isLoaded]
  -[AMSBagNetworkDataSource cachedResult]
  -[AMSBagNetworkDataSource setCachedResult:]
  -[AMSBagNetworkDataSource initWithProfile:profileVersion:processInfo:]


AMSBagNetworkTaskResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *data
 @property  NSDate *expirationDate
 @property  BOOL expired
 @property  NSString *storefront

  // instance methods
  -[AMSBagNetworkTaskResult setData:]
  -[AMSBagNetworkTaskResult storefront]
  -[AMSBagNetworkTaskResult setStorefront:]
  -[AMSBagNetworkTaskResult expired]
  -[AMSBagNetworkTaskResult setExpirationDate:]
  -[AMSBagNetworkTaskResult .cxx_destruct]
  -[AMSBagNetworkTaskResult initWithData:]
  -[AMSBagNetworkTaskResult data]
  -[AMSBagNetworkTaskResult expirationDate]


AMSBagNetworkTask : AMSTask <NSURLSessionTaskDelegate, AMSURLProtocolDelegate>
 @property  AMSURLSession *URLSession
 @property  NSString *logKey
 @property  AMSProcessInfo *clientInfo
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSBagNetworkTask _setURLCookieNames:forProfile:]
  +[AMSBagNetworkTask _deviceString]
  +[AMSBagNetworkTask _defaultURLCookieNames]
  +[AMSBagNetworkTask _setStorefrontFromURLResponse:bagData:]
  +[AMSBagNetworkTask bagStorefrontForAccountMediaType:]
  +[AMSBagNetworkTask bagAccountForAccountMediaType:]
  +[AMSBagNetworkTask _OSBuildTypeString]
  +[AMSBagNetworkTask _URLCookieNamesForProfile:]
  +[AMSBagNetworkTask _shouldReloadDataForOriginalCookies:newCookies:]

  // instance methods
  -[AMSBagNetworkTask URLSession]
  -[AMSBagNetworkTask setLogKey:]
  -[AMSBagNetworkTask logKey]
  -[AMSBagNetworkTask _updateStorefrontSuffixIfNecessaryWithBagData:]
  -[AMSBagNetworkTask .cxx_destruct]
  -[AMSBagNetworkTask profileVersion]
  -[AMSBagNetworkTask setURLSession:]
  -[AMSBagNetworkTask _shouldRetryForResult:cookieNames:urlCookies:newStorefront:]
  -[AMSBagNetworkTask _createRequestWithCookieNames:storefront:]
  -[AMSBagNetworkTask URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[AMSBagNetworkTask clientInfo]
  -[AMSBagNetworkTask _cookiesForNames:]
  -[AMSBagNetworkTask setClientInfo:]
  -[AMSBagNetworkTask profile]
  -[AMSBagNetworkTask setProfileVersion:]
  -[AMSBagNetworkTask setProfile:]
  -[AMSBagNetworkTask performFetch]
  -[AMSBagNetworkTask initWithClientInfo:profile:profileVersion:]


AMSBagURLParser : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSBagURLParser URLBySubstitutingVariablesInURLString:usingBlock:]
  +[AMSBagURLParser _rangeofSubstringWithOpeningTag:closingTag:inString:]
  +[AMSBagURLParser _firstVariableInTemplate:includeTags:]
  +[AMSBagURLParser _rangeOfTemplateInURLString:]


AMSBagValue : NSObject /usr/lib/libSystem.B.dylib
 @property  ACAccount *account
 @property  <AMSBagDataSourceProtocol> *dataSource
 @property  NSString *key
 @property  NSArray *transformBlocks
 @property  unsigned long valueType
 @property  BOOL loaded

  // class methods
  +[AMSBagValue frozenBagValueWithKey:value:valueType:]
  +[AMSBagValue bagValueWithKey:valueType:valuePromise:]
  +[AMSBagValue globalBagValueStorage]
  +[AMSBagValue _value:isKindOfValueType:]
  +[AMSBagValue _valueFromDictionary:forBagKey:]
  +[AMSBagValue failingBagValueWithKey:valueType:error:]

  // instance methods
  -[AMSBagValue valueType]
  -[AMSBagValue setDataSource:]
  -[AMSBagValue valueWithCompletion:]
  -[AMSBagValue setAccount:]
  -[AMSBagValue account]
  -[AMSBagValue .cxx_destruct]
  -[AMSBagValue valueWithError:]
  -[AMSBagValue setKey:]
  -[AMSBagValue key]
  -[AMSBagValue dataSource]
  -[AMSBagValue setValueType:]
  -[AMSBagValue isLoaded]
  -[AMSBagValue initWithDataSource:key:valueType:]
  -[AMSBagValue initWithDataSource:key:valueType:account:]
  -[AMSBagValue transformBlocks]
  -[AMSBagValue setTransformBlocks:]
  -[AMSBagValue _processedDefaultValue:]
  -[AMSBagValue _applyTransformsToValue:index:completion:]
  -[AMSBagValue valuePromise]
  -[AMSBagValue transformWithBlock:]


AMSBinaryPromise : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSPromise *backingPromise

  // class methods
  +[AMSBinaryPromise promiseWithFlattenedPromises:]
  +[AMSBinaryPromise promiseWithError:]
  +[AMSBinaryPromise promiseWithPromise:]
  +[AMSBinaryPromise _globalPromiseStorage]
  +[AMSBinaryPromise promiseWithAll:]
  +[AMSBinaryPromise promiseWithAny:]
  +[AMSBinaryPromise _globalPromiseStorageAccessQueue]
  +[AMSBinaryPromise promiseWithSuccess]

  // instance methods
  -[AMSBinaryPromise addErrorBlock:]
  -[AMSBinaryPromise finishWithPromise:]
  -[AMSBinaryPromise resultWithError:]
  -[AMSBinaryPromise catchWithBlock:]
  -[AMSBinaryPromise addSuccessBlock:]
  -[AMSBinaryPromise waitUntilFinished]
  -[AMSBinaryPromise resultWithTimeout:error:]
  -[AMSBinaryPromise finishWithError:]
  -[AMSBinaryPromise waitUntilFinishedWithTimeout:]
  -[AMSBinaryPromise addFinishBlock:]
  -[AMSBinaryPromise completionHandlerAdapter]
  -[AMSBinaryPromise backingPromise]
  -[AMSBinaryPromise init]
  -[AMSBinaryPromise finishWithSuccess:error:]
  -[AMSBinaryPromise .cxx_destruct]
  -[AMSBinaryPromise _removeFromGlobalPromiseStorage]
  -[AMSBinaryPromise cancel]
  -[AMSBinaryPromise promiseAdapter]
  -[AMSBinaryPromise thenWithBlock:]
  -[AMSBinaryPromise continueWithBlock:]
  -[AMSBinaryPromise setBackingPromise:]
  -[AMSBinaryPromise finishWithSuccess]


AMSBiometrics : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSBiometrics _stateHeaderValueForAccount:]
  +[AMSBiometrics minimumACLVersionForAction:]
  +[AMSBiometrics deviceState]
  +[AMSBiometrics resumptionHeadersFromRequest:]
  +[AMSBiometrics deleteKeysWithError:]
  +[AMSBiometrics saveIdentityMap]
  +[AMSBiometrics identityMap]
  +[AMSBiometrics setState:forAccount:]
  +[AMSBiometrics isIdentityMapValid]
  +[AMSBiometrics _shouldAddBiometricHeader]
  +[AMSBiometrics type]
  +[AMSBiometrics isAvailableForAccount:]
  +[AMSBiometrics isActionSupported:withAccessControl:]
  +[AMSBiometrics ACLVersionForAccessControl:]
  +[AMSBiometrics setDeviceState:]
  +[AMSBiometrics ACLVersionForConstraints:]
  +[AMSBiometrics signChallenge:withAccount:clientInfo:options:]
  +[AMSBiometrics handleResponse:session:taskInfo:]
  +[AMSBiometrics stateForAccount:]
  +[AMSBiometrics isActionSupported:withConstraints:]
  +[AMSBiometrics _deleteKeysWithOptions:error:]
  +[AMSBiometrics disableForAccount:]
  +[AMSBiometrics headersWithAccount:options:signatureResult:]


AMSBiometricsDisableTask : AMSTask
 @property  ACAccount *account

  // instance methods
  -[AMSBiometricsDisableTask perform]
  -[AMSBiometricsDisableTask account]
  -[AMSBiometricsDisableTask .cxx_destruct]
  -[AMSBiometricsDisableTask initWithAccount:]


AMSBiometricsMigrator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSBiometricsMigrator migrateBiometricStateWithOptions:]


AMSBiometricsPresentationProxy : NSObject /usr/lib/libSystem.B.dylib <AMSRequestPresentationDelegate>
 @property  AMSURLSession *session
 @property  NSURLSessionTask *task
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSBiometricsPresentationProxy session]
  -[AMSBiometricsPresentationProxy .cxx_destruct]
  -[AMSBiometricsPresentationProxy initWithSession:task:]
  -[AMSBiometricsPresentationProxy task]
  -[AMSBiometricsPresentationProxy handleAuthenticateRequest:completion:]
  -[AMSBiometricsPresentationProxy handleDialogRequest:completion:]


AMSBiometricsSecurityService : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSBiometricsSecurityService saveIdentityMap]
  +[AMSBiometricsSecurityService isIdentityMapValid]
  +[AMSBiometricsSecurityService isAvailableForAccount:]


AMSBiometricsSignatureRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSString *challenge
 @property  AMSProcessInfo *clientInfo
 @property  BOOL dualAction
 @property  AMSKeychainOptions *keychainOptions
 @property  ^{__SecAccessControl=} localAuthAccessControlRef
 @property  LAContext *localAuthContext
 @property  NSDictionary *localAuthOptions

  // instance methods
  -[AMSBiometricsSignatureRequest challenge]
  -[AMSBiometricsSignatureRequest keychainOptions]
  -[AMSBiometricsSignatureRequest dealloc]
  -[AMSBiometricsSignatureRequest account]
  -[AMSBiometricsSignatureRequest .cxx_destruct]
  -[AMSBiometricsSignatureRequest setBag:]
  -[AMSBiometricsSignatureRequest bag]
  -[AMSBiometricsSignatureRequest clientInfo]
  -[AMSBiometricsSignatureRequest setDualAction:]
  -[AMSBiometricsSignatureRequest isDualAction]
  -[AMSBiometricsSignatureRequest initWithAccount:clientInfo:challenge:options:error:]
  -[AMSBiometricsSignatureRequest _localAuthOptions]
  -[AMSBiometricsSignatureRequest localAuthAccessControlRef]
  -[AMSBiometricsSignatureRequest setLocalAuthAccessControlRef:]
  -[AMSBiometricsSignatureRequest localAuthContext]
  -[AMSBiometricsSignatureRequest localAuthOptions]


AMSBiometricsSignatureResult : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSBiometricsSignatureRequest *originalRequest
 @property  NSString *signature

  // instance methods
  -[AMSBiometricsSignatureResult signature]
  -[AMSBiometricsSignatureResult originalRequest]
  -[AMSBiometricsSignatureResult setOriginalRequest:]
  -[AMSBiometricsSignatureResult .cxx_destruct]
  -[AMSBiometricsSignatureResult setSignature:]


AMSBiometricsSignatureTask : AMSTask
 @property  AMSBiometricsSignatureRequest *request

  // instance methods
  -[AMSBiometricsSignatureTask initWithRequest:]
  -[AMSBiometricsSignatureTask .cxx_destruct]
  -[AMSBiometricsSignatureTask request]
  -[AMSBiometricsSignatureTask performSignature]
  -[AMSBiometricsSignatureTask _performCardEnrollmentCheck:]


AMSBiometricsTokenUpdateTask : AMSTask <AMSSecurityClientInterface, AMSBagConsumer>
 @property  <AMSBagProtocol> *bag
 @property  AMSURLSession *session
 @property  BOOL shouldPromptUser
 @property  ACAccount *account
 @property  NSDictionary *additionalDialogMetrics
 @property  AMSProcessInfo *clientInfo
 @property  <AMSRequestPresentationDelegate> *presentationDelegate
 @property  BOOL shouldGenerateKeysOnly
 @property  BOOL shouldRequestConfirmation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSBiometricsTokenUpdateTask bagKeySet]
  +[AMSBiometricsTokenUpdateTask bagSubProfileVersion]
  +[AMSBiometricsTokenUpdateTask bagSubProfile]

  // instance methods
  -[AMSBiometricsTokenUpdateTask performUpdate]
  -[AMSBiometricsTokenUpdateTask setSession:]
  -[AMSBiometricsTokenUpdateTask presentationDelegate]
  -[AMSBiometricsTokenUpdateTask session]
  -[AMSBiometricsTokenUpdateTask setPresentationDelegate:]
  -[AMSBiometricsTokenUpdateTask account]
  -[AMSBiometricsTokenUpdateTask .cxx_destruct]
  -[AMSBiometricsTokenUpdateTask bag]
  -[AMSBiometricsTokenUpdateTask clientInfo]
  -[AMSBiometricsTokenUpdateTask initWithAccount:]
  -[AMSBiometricsTokenUpdateTask setClientInfo:]
  -[AMSBiometricsTokenUpdateTask initWithAccount:bag:]
  -[AMSBiometricsTokenUpdateTask handleAuthenticateRequest:completion:]
  -[AMSBiometricsTokenUpdateTask handleDialogRequest:completion:]
  -[AMSBiometricsTokenUpdateTask setShouldRequestConfirmation:]
  -[AMSBiometricsTokenUpdateTask setAdditionalDialogMetrics:]
  -[AMSBiometricsTokenUpdateTask shouldPromptUser]
  -[AMSBiometricsTokenUpdateTask _sendRequestToDaemon]
  -[AMSBiometricsTokenUpdateTask additionalDialogMetrics]
  -[AMSBiometricsTokenUpdateTask shouldGenerateKeysOnly]
  -[AMSBiometricsTokenUpdateTask shouldRequestConfirmation]
  -[AMSBiometricsTokenUpdateTask setShouldGenerateKeysOnly:]
  -[AMSBiometricsTokenUpdateTask setShouldPromptUser:]


AMSBridgedBagValue : AMSFrozenBagValue
 @property  AMSPromise *valuePromise

  // instance methods
  -[AMSBridgedBagValue valueWithCompletion:]
  -[AMSBridgedBagValue .cxx_destruct]
  -[AMSBridgedBagValue initWithKey:valueType:valuePromise:]
  -[AMSBridgedBagValue valuePromise]
  -[AMSBridgedBagValue setValuePromise:]


AMSBuyParams : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  double price
 @property  NSDictionary *dictionary

  // class methods
  +[AMSBuyParams supportsSecureCoding]
  +[AMSBuyParams buyParamsWithString:]

  // instance methods
  -[AMSBuyParams copyWithZone:]
  -[AMSBuyParams price]
  -[AMSBuyParams clear]
  -[AMSBuyParams setProperty:forKey:]
  -[AMSBuyParams init]
  -[AMSBuyParams initWithString:]
  -[AMSBuyParams propertyForKey:]
  -[AMSBuyParams .cxx_destruct]
  -[AMSBuyParams dictionary]
  -[AMSBuyParams encodeWithCoder:]
  -[AMSBuyParams initWithCoder:]
  -[AMSBuyParams _parseBuyParams:]
  -[AMSBuyParams _normalizedDictionary]
  -[AMSBuyParams buyParametersForRequest]
  -[AMSBuyParams importURLEncodedBuyParams:]
  -[AMSBuyParams requestDataWithError:]
  -[AMSBuyParams stringValue]


AMSCardAuthorizationTask : AMSTask <PKPaymentAuthorizationControllerDelegate, PKPaymentAuthorizationControllerPrivateDelegate>
 @property  AMSBinaryPromise *authorizationPromise
 @property  PKPayment *payment
 @property  BOOL didBiometricsLockout
 @property  BOOL didCancelHomeButton
 @property  NSMutableArray *userActions
 @property  long long confirmationStyle
 @property  NSString *countryCode
 @property  NSString *currencyCode
 @property  AMSMetricsEvent *metricsEvent
 @property  NSString *passSerialNumber
 @property  NSString *passTypeIdentifier
 @property  NSDictionary *paymentSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSCardAuthorizationTask currencyCode]
  -[AMSCardAuthorizationTask initWithPaymentSession:]
  -[AMSCardAuthorizationTask paymentAuthorizationController:didEncounterAuthorizationEvent:]
  -[AMSCardAuthorizationTask paymentAuthorizationController:willFinishWithError:]
  -[AMSCardAuthorizationTask setMetricsEvent:]
  -[AMSCardAuthorizationTask userActions]
  -[AMSCardAuthorizationTask .cxx_destruct]
  -[AMSCardAuthorizationTask payment]
  -[AMSCardAuthorizationTask countryCode]
  -[AMSCardAuthorizationTask setCurrencyCode:]
  -[AMSCardAuthorizationTask setCountryCode:]
  -[AMSCardAuthorizationTask setPayment:]
  -[AMSCardAuthorizationTask paymentSession]
  -[AMSCardAuthorizationTask confirmationStyle]
  -[AMSCardAuthorizationTask setConfirmationStyle:]
  -[AMSCardAuthorizationTask passSerialNumber]
  -[AMSCardAuthorizationTask setPassSerialNumber:]
  -[AMSCardAuthorizationTask passTypeIdentifier]
  -[AMSCardAuthorizationTask setPassTypeIdentifier:]
  -[AMSCardAuthorizationTask _presentPaymentRequest:]
  -[AMSCardAuthorizationTask _metricsPost]
  -[AMSCardAuthorizationTask setAuthorizationPromise:]
  -[AMSCardAuthorizationTask metricsEvent]
  -[AMSCardAuthorizationTask authorizationPromise]
  -[AMSCardAuthorizationTask _metricsTimestamp]
  -[AMSCardAuthorizationTask didBiometricsLockout]
  -[AMSCardAuthorizationTask didCancelHomeButton]
  -[AMSCardAuthorizationTask _metricsUserActionDictionary]
  -[AMSCardAuthorizationTask setDidBiometricsLockout:]
  -[AMSCardAuthorizationTask setDidCancelHomeButton:]
  -[AMSCardAuthorizationTask paymentAuthorizationControllerDidFinish:]
  -[AMSCardAuthorizationTask paymentAuthorizationController:didAuthorizePayment:handler:]
  -[AMSCardAuthorizationTask performCardAuthorization]
  -[AMSCardAuthorizationTask setUserActions:]


AMSCardAutoEnrollment : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer_Project, AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSCardAutoEnrollment createBagForSubProfile]
  +[AMSCardAutoEnrollment bagKeySet]
  +[AMSCardAutoEnrollment bagSubProfileVersion]
  +[AMSCardAutoEnrollment addRequiredBagKeysToAggregator:]
  +[AMSCardAutoEnrollment bagSubProfile]


AMSCardEnrollment : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSCardEnrollment shouldUseAutoEnrollmentWithBag:]
  +[AMSCardEnrollment shouldAttemptAutoEnrollment]
  +[AMSCardEnrollment _cardEligibilityStatusForCountryCode:]
  +[AMSCardEnrollment shouldAttemptApplePayClassicWithBag:accessControlRef:]
  +[AMSCardEnrollment _currentIdentifier]
  +[AMSCardEnrollment shouldUseAutoEnrollmentWithPercentage:sessionDuration:]
  +[AMSCardEnrollment shouldAttemptAutoEnrollmentWithBag:accessControlRef:]
  +[AMSCardEnrollment shouldAttemptAutoEnrollmentWithCountryCode:]
  +[AMSCardEnrollment shouldAttemptApplePayClassicWithCountryCode:paymentNetworks:accessControlRef:]
  +[AMSCardEnrollment clearAutoEnrollmentIdentifier]
  +[AMSCardEnrollment _shouldAttemptApplePayWithCountryCode:paymentNetworks:]
  +[AMSCardEnrollment updateAutoEnrollmentIdentifier]
  +[AMSCardEnrollment shouldUseApplePayClassicWithBag:]
  +[AMSCardEnrollment _paymentServicesMerchantURLPromise]
  +[AMSCardEnrollment finishCardEnrollmentAttemptWithBag:buyParams:purchaseResult:]
  +[AMSCardEnrollment paymentServicesMerchantURL]
  +[AMSCardEnrollment beginCardEnrollmentAttemptWithBag:account:]


AMSCardEnrollmentEligibilityTask : AMSTask
 @property  <AMSBagProtocol> *bag
 @property  NSString *countryCode

  // instance methods
  -[AMSCardEnrollmentEligibilityTask initWithBag:countryCode:]
  -[AMSCardEnrollmentEligibilityTask initWithCountryCode:]
  -[AMSCardEnrollmentEligibilityTask init]
  -[AMSCardEnrollmentEligibilityTask performCanWriteBillingInfoQueryWithPassTypeIdentifier:serialNumber:]
  -[AMSCardEnrollmentEligibilityTask _cardTypeForPassTypeIdentifier:serialNumber:]
  -[AMSCardEnrollmentEligibilityTask _performSilentEnrollmentCheckWithRequest:]
  -[AMSCardEnrollmentEligibilityTask canWriteBillingInfoWithPassTypeIdentifier:serialNumber:completion:]
  -[AMSCardEnrollmentEligibilityTask initWithBag:]
  -[AMSCardEnrollmentEligibilityTask .cxx_destruct]
  -[AMSCardEnrollmentEligibilityTask countryCode]
  -[AMSCardEnrollmentEligibilityTask setBag:]
  -[AMSCardEnrollmentEligibilityTask bag]


AMSCardEnrollmentPaymentSessionTask : AMSTask
  // class methods
  +[AMSCardEnrollmentPaymentSessionTask performPaymentSessionEnrollment]
  +[AMSCardEnrollmentPaymentSessionTask performPaymentSessionEnrollmentWithBag:]
  +[AMSCardEnrollmentPaymentSessionTask _paymentServiceURLStringForMerchantURL:]
  +[AMSCardEnrollmentPaymentSessionTask _performSilentEnrollmentPaymentSessionWithContext:]
  +[AMSCardEnrollmentPaymentSessionTask paymentSessionWithCompletion:]
  +[AMSCardEnrollmentPaymentSessionTask paymentSessionWithBag:completion:]


AMSCardEnrollmentVerificationTask : AMSTask
  // class methods
  +[AMSCardEnrollmentVerificationTask _performSilentEnrollmentPaymentSessionWithContext:]
  +[AMSCardEnrollmentVerificationTask performPaymentVerificationForPayment:isDefault:]
  +[AMSCardEnrollmentVerificationTask performPaymentVerificationForPayment:isDefault:bag:]
  +[AMSCardEnrollmentVerificationTask verifyPayment:isDefault:completion:]
  +[AMSCardEnrollmentVerificationTask verifyPayment:isDefault:bag:completion:]


AMSCardMetadataRegistrationResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *cardArtwork
 @property  long long cardType
 @property  NSString *descriptionLong
 @property  NSString *descriptionShort
 @property  long long paymentNetwork
 @property  NSString *serialNumber
 @property  NSString *suffix
 @property  NSDictionary *dictionary

  // instance methods
  -[AMSCardMetadataRegistrationResult suffix]
  -[AMSCardMetadataRegistrationResult initWithCardArtwork:cardType:descriptionLong:descriptionShort:paymentNetwork:serialNumber:suffix:]
  -[AMSCardMetadataRegistrationResult serialNumber]
  -[AMSCardMetadataRegistrationResult setCardType:]
  -[AMSCardMetadataRegistrationResult init]
  -[AMSCardMetadataRegistrationResult paymentNetwork]
  -[AMSCardMetadataRegistrationResult descriptionLong]
  -[AMSCardMetadataRegistrationResult setSuffix:]
  -[AMSCardMetadataRegistrationResult descriptionShort]
  -[AMSCardMetadataRegistrationResult setDescriptionLong:]
  -[AMSCardMetadataRegistrationResult setCardArtwork:]
  -[AMSCardMetadataRegistrationResult setDescriptionShort:]
  -[AMSCardMetadataRegistrationResult setPaymentNetwork:]
  -[AMSCardMetadataRegistrationResult .cxx_destruct]
  -[AMSCardMetadataRegistrationResult setDictionary:]
  -[AMSCardMetadataRegistrationResult dictionary]
  -[AMSCardMetadataRegistrationResult cardType]
  -[AMSCardMetadataRegistrationResult setSerialNumber:]
  -[AMSCardMetadataRegistrationResult cardArtwork]


AMSCardRegistrationResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *cardData
 @property  NSURL *brokerURL
 @property  NSURL *paymentServicesURL

  // instance methods
  -[AMSCardRegistrationResult paymentServicesURL]
  -[AMSCardRegistrationResult initWithCardRegistrationResponse:]
  -[AMSCardRegistrationResult .cxx_destruct]
  -[AMSCardRegistrationResult cardData]
  -[AMSCardRegistrationResult brokerURL]


AMSCardRegistrationTask : AMSTask
 @property  NSString *countryCode
 @property  NSString *merchantIdentifier

  // instance methods
  -[AMSCardRegistrationTask _performCardRegistration]
  -[AMSCardRegistrationTask merchantIdentifier]
  -[AMSCardRegistrationTask performCardRegistration]
  -[AMSCardRegistrationTask initWithCountryCode:merchantIdentifier:]
  -[AMSCardRegistrationTask setMerchantIdentifier:]
  -[AMSCardRegistrationTask .cxx_destruct]
  -[AMSCardRegistrationTask countryCode]
  -[AMSCardRegistrationTask setCountryCode:]


AMSCircularBuffer : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  unsigned long currentIndex
 @property  NSMutableArray *buffer
 @property  NSArray *allObjects
 @property  unsigned long count
 @property  unsigned long maxSize

  // class methods
  +[AMSCircularBuffer _rearrangeObjects:forCurrentIndex:]

  // instance methods
  -[AMSCircularBuffer _flush]
  -[AMSCircularBuffer accessQueue]
  -[AMSCircularBuffer setCurrentIndex:]
  -[AMSCircularBuffer currentIndex]
  -[AMSCircularBuffer setAccessQueue:]
  -[AMSCircularBuffer setBuffer:]
  -[AMSCircularBuffer init]
  -[AMSCircularBuffer buffer]
  -[AMSCircularBuffer maxSize]
  -[AMSCircularBuffer flush]
  -[AMSCircularBuffer .cxx_destruct]
  -[AMSCircularBuffer setMaxSize:]
  -[AMSCircularBuffer allObjects]
  -[AMSCircularBuffer count]
  -[AMSCircularBuffer addObject:]
  -[AMSCircularBuffer initWithMaxSize:]


AMSClientCertificateTask : AMSTask
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  AMSKeychainOptions *options

  // instance methods
  -[AMSClientCertificateTask initWithOptions:]
  -[AMSClientCertificateTask _baaOptionsWithOptions:error:]
  -[AMSClientCertificateTask .cxx_destruct]
  -[AMSClientCertificateTask dispatchQueue]
  -[AMSClientCertificateTask options]
  -[AMSClientCertificateTask setDispatchQueue:]
  -[AMSClientCertificateTask setOptions:]
  -[AMSClientCertificateTask performClientCertChainRequest]


AMSCommandLineDialogTask : AMSTask
 @property  AMSDialogRequest *request
 @property  double maximumDialogWidth
 @property  double minimumDialogWidth
 @property  double dialogPadding
 @property  long long automaticButtonSelection

  // instance methods
  -[AMSCommandLineDialogTask initWithRequest:]
  -[AMSCommandLineDialogTask dialogPadding]
  -[AMSCommandLineDialogTask maximumDialogWidth]
  -[AMSCommandLineDialogTask minimumDialogWidth]
  -[AMSCommandLineDialogTask _createHorizontolLineWithWidth:]
  -[AMSCommandLineDialogTask _createText:width:centered:omitLeftPipe:]
  -[AMSCommandLineDialogTask _createTextfieldWithTextfield:width:]
  -[AMSCommandLineDialogTask _createLinesFromText:width:]
  -[AMSCommandLineDialogTask _printMessage:]
  -[AMSCommandLineDialogTask _gatherTextfieldInput]
  -[AMSCommandLineDialogTask automaticButtonSelection]
  -[AMSCommandLineDialogTask _gatherButtonInput]
  -[AMSCommandLineDialogTask _getUserInput]
  -[AMSCommandLineDialogTask setMaximumDialogWidth:]
  -[AMSCommandLineDialogTask setMinimumDialogWidth:]
  -[AMSCommandLineDialogTask setDialogPadding:]
  -[AMSCommandLineDialogTask setAutomaticButtonSelection:]
  -[AMSCommandLineDialogTask .cxx_destruct]
  -[AMSCommandLineDialogTask present]
  -[AMSCommandLineDialogTask request]


AMSCommerceMigrator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSCommerceMigrator migrateCommerceAccountsWithOptions:]


AMSCommerceService : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSCommerceService proxyObject]
  +[AMSCommerceService _createXPCConnection]
  +[AMSCommerceService sharedConnection]
  +[AMSCommerceService proxyObjectAsync]
  +[AMSCommerceService setSharedConnection:]
  +[AMSCommerceService sharedConnectionAccessQueue]


AMSContentRating : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *contentRatingID
 @property  NSString *kind
 @property  NSString *label
 @property  NSString *name
 @property  NSNumber *value

  // class methods
  +[AMSContentRating contentRatingWithDictionary:]

  // instance methods
  -[AMSContentRating contentRatingID]
  -[AMSContentRating .cxx_destruct]
  -[AMSContentRating name]
  -[AMSContentRating label]
  -[AMSContentRating kind]
  -[AMSContentRating initWithDictionary:]
  -[AMSContentRating value]


AMSContractBagShim : NSObject /usr/lib/libSystem.B.dylib <AMSBagProtocol>
 @property  NSObject *bagContract
 @property  BOOL expired
 @property  NSDate *expirationDate
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  AMSProcessInfo *processInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSContractBagShim _callSelector:onBagContract:]

  // instance methods
  -[AMSContractBagShim setBagContract:]
  -[AMSContractBagShim stringForKey:]
  -[AMSContractBagShim _bagValueForBagKey:bagValueType:]
  -[AMSContractBagShim _selectorForBagKey:]
  -[AMSContractBagShim bagContract]
  -[AMSContractBagShim .cxx_destruct]
  -[AMSContractBagShim profileVersion]
  -[AMSContractBagShim isExpired]
  -[AMSContractBagShim initWithBagContract:]
  -[AMSContractBagShim integerForKey:]
  -[AMSContractBagShim boolForKey:]
  -[AMSContractBagShim expirationDate]
  -[AMSContractBagShim profile]
  -[AMSContractBagShim URLForKey:]
  -[AMSContractBagShim createSnapshotWithCompletion:]
  -[AMSContractBagShim isLoaded]
  -[AMSContractBagShim arrayForKey:]
  -[AMSContractBagShim dictionaryForKey:]
  -[AMSContractBagShim doubleForKey:]


AMSConnectionDelegateProxy : NSObject /usr/lib/libSystem.B.dylib
 @property  id delegate

  // class methods
  +[AMSConnectionDelegateProxy proxyWithDelegate:]

  // instance methods
  -[AMSConnectionDelegateProxy forwardInvocation:]
  -[AMSConnectionDelegateProxy methodSignatureForSelector:]
  -[AMSConnectionDelegateProxy .cxx_destruct]
  -[AMSConnectionDelegateProxy setDelegate:]
  -[AMSConnectionDelegateProxy delegate]


AMSDaemonConnection : NSObject /usr/lib/libSystem.B.dylib <AMSDServiceBrokerProtocol>
 @property  NSXPCConnection *sharedConnection
 @property  NSObject<OS_dispatch_queue> *sharedConnectionAccessQueue
 @property  NSMutableSet *activePromises
 @property  NSMutableArray *interruptionHandlers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSDaemonConnection _handleInvalidation]
  -[AMSDaemonConnection _handleInterruption]
  -[AMSDaemonConnection init]
  -[AMSDaemonConnection dealloc]
  -[AMSDaemonConnection sharedConnection]
  -[AMSDaemonConnection .cxx_destruct]
  -[AMSDaemonConnection setSharedConnection:]
  -[AMSDaemonConnection securityServiceProxyWithDelegate:]
  -[AMSDaemonConnection activePromises]
  -[AMSDaemonConnection deviceMessengerProxyWithDelegate:]
  -[AMSDaemonConnection sharedConnectionAccessQueue]
  -[AMSDaemonConnection addInterruptionHandler:]
  -[AMSDaemonConnection _connectionProxyForAsync:accessBlock:]
  -[AMSDaemonConnection pushNotificationService]
  -[AMSDaemonConnection interruptionHandlers]


AMSDaemonConnectionInterface : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSDaemonConnectionInterface _deviceMessengerClientInterface]
  +[AMSDaemonConnectionInterface _deviceMessengerServiceInterface]
  +[AMSDaemonConnectionInterface _securityClientInterface]
  +[AMSDaemonConnectionInterface _securityServiceInterface]
  +[AMSDaemonConnectionInterface _configureURLPresentationDelegateClasses:]
  +[AMSDaemonConnectionInterface _setUpSecurityInterfaceSignedHeadersSelector:]
  +[AMSDaemonConnectionInterface _setUpSecurityInterfaceHandleResponseSelector:]
  +[AMSDaemonConnectionInterface _setUpSecurityInterfaceBiometricProxy:]
  +[AMSDaemonConnectionInterface interface]


AMSData : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSData _dataEncodingFromResponse:]
  +[AMSData compressedGzippedDataWithData:]
  +[AMSData objectWithData:response:error:]
  +[AMSData decompressedDataWithGzippedData:]
  +[AMSData dataWithObject:encoding:error:]
  +[AMSData objectWithData:encoding:error:]


AMSDataMigrator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSDataMigrator performMigrationWithOptions:]


AMSDataMigratorOptions : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *currentBuildVersion
 @property  NSArray *optionsArray
 @property  NSString *previousBuildVersion
 @property  unsigned long scenario

  // class methods
  +[AMSDataMigratorOptions _stringFromOptionsArray:atIndex:]

  // instance methods
  -[AMSDataMigratorOptions currentBuildVersion]
  -[AMSDataMigratorOptions init]
  -[AMSDataMigratorOptions setScenario:]
  -[AMSDataMigratorOptions initWithOptionsArray:]
  -[AMSDataMigratorOptions setPreviousBuildVersion:]
  -[AMSDataMigratorOptions .cxx_destruct]
  -[AMSDataMigratorOptions scenario]
  -[AMSDataMigratorOptions previousBuildVersion]
  -[AMSDataMigratorOptions setCurrentBuildVersion:]
  -[AMSDataMigratorOptions optionsArray]


AMSDefaults : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSDefaults _setInteger:forKey:]
  +[AMSDefaults defaultPaymentPassIdentifier]
  +[AMSDefaults setDefaultPaymentPassIdentifier:]
  +[AMSDefaults shouldSampleWithPercentage:sessionDuration:identifier:]
  +[AMSDefaults QAMode]
  +[AMSDefaults _setValue:forKey:]
  +[AMSDefaults mediaTokens]
  +[AMSDefaults setQAMode:]
  +[AMSDefaults enableRemoteSecuritySigning]
  +[AMSDefaults alwaysSendGUID]
  +[AMSDefaults setLogHARData:]
  +[AMSDefaults _valueForKey:domain:]
  +[AMSDefaults sourceOverrides]
  +[AMSDefaults UIURLOverrides]
  +[AMSDefaults allowDuplicateAccounts]
  +[AMSDefaults applePayClassic]
  +[AMSDefaults alwaysSendCacheBuster]
  +[AMSDefaults authenticationStarted]
  +[AMSDefaults cardEnrollmentAutomatic]
  +[AMSDefaults cardEnrollmentManual]
  +[AMSDefaults cardEnrollmentSilent]
  +[AMSDefaults cardEnrollmentUpsell]
  +[AMSDefaults disableHARLogging]
  +[AMSDefaults deviceOfferEligibility]
  +[AMSDefaults deviceOffersSerialNumber]
  +[AMSDefaults didRetrieveDeviceOffers]
  +[AMSDefaults didRetrieveDeviceOffersEligibility]
  +[AMSDefaults didRetrieveTVOffers]
  +[AMSDefaults enableCameraRedeem]
  +[AMSDefaults disableStubbedMarketingItems]
  +[AMSDefaults enableFullDeviceOffersRetrieval]
  +[AMSDefaults enablePurchaseQueue]
  +[AMSDefaults forceEngagementPurchaseSuccess]
  +[AMSDefaults forceLoadUrlMetrics]
  +[AMSDefaults ignoreServerTrustEvaluation]
  +[AMSDefaults includeFullRequestInHARLogging]
  +[AMSDefaults includeFullResponseInHARLogging]
  +[AMSDefaults setBagOverrides:]
  +[AMSDefaults journeysURLOverride]
  +[AMSDefaults marketingItemOverrides]
  +[AMSDefaults mediaTokenOverride]
  +[AMSDefaults reversePushEnabled]
  +[AMSDefaults mescalCertExpiration]
  +[AMSDefaults metricsCanaryIdentifier]
  +[AMSDefaults metricsTimingWindowStartTime]
  +[AMSDefaults migratedDeviceOffers]
  +[AMSDefaults migratedToNewCookieStorage]
  +[AMSDefaults multiUserContainerID]
  +[AMSDefaults perfomedDeviceOfferSetup]
  +[AMSDefaults showSandboxAccountUI]
  +[AMSDefaults showSpyglassPurchases]
  +[AMSDefaults useNewAccountStore]
  +[AMSDefaults setAllowDuplicateAccounts:]
  +[AMSDefaults setAlwaysSendCacheBuster:]
  +[AMSDefaults setAlwaysSendGUID:]
  +[AMSDefaults setApplePayClassic:]
  +[AMSDefaults setAuthenticationStarted:]
  +[AMSDefaults setMediaTokens:]
  +[AMSDefaults setCardEnrollmentAutomatic:]
  +[AMSDefaults setCardEnrollmentManual:]
  +[AMSDefaults setCardEnrollmentSilent:]
  +[AMSDefaults setCardEnrollmentUpsell:]
  +[AMSDefaults setDeviceOfferEligibility:]
  +[AMSDefaults setDidRetrieveDeviceOffers:]
  +[AMSDefaults setDidRetrieveDeviceOffersEligibility:]
  +[AMSDefaults setDidRetrieveTVOffers:]
  +[AMSDefaults setHarURLFilters:]
  +[AMSDefaults setDisableHARLogging:]
  +[AMSDefaults setDisablePrivacyAcknowledgement:]
  +[AMSDefaults setEnableCameraRedeem:]
  +[AMSDefaults setDisableStubbedMarketingItems:]
  +[AMSDefaults setEnableFullDeviceOffersRetrieval:]
  +[AMSDefaults setEnablePurchaseQueue:]
  +[AMSDefaults setForceLoadUrlMetrics:]
  +[AMSDefaults setIgnoreServerTrustEvaluation:]
  +[AMSDefaults setIncludeFullRequestInHARLogging:]
  +[AMSDefaults setIncludeFullResponseInHARLogging:]
  +[AMSDefaults setJourneysURLOverride:]
  +[AMSDefaults setMarketingItemOverrides:]
  +[AMSDefaults setMediaTokenOverride:]
  +[AMSDefaults setMescalCertExpiration:]
  +[AMSDefaults setMetricsCanaryIdentifier:]
  +[AMSDefaults setMigratedDeviceOffers:]
  +[AMSDefaults setMetricsTimingWindowStartTime:]
  +[AMSDefaults setMigratedToNewCookieStorage:]
  +[AMSDefaults setPerfomedDeviceOfferSetup:]
  +[AMSDefaults setReversePushEnabled:]
  +[AMSDefaults setShowSandboxAccountUI:]
  +[AMSDefaults _randomDouble]
  +[AMSDefaults setSourceOverrides:]
  +[AMSDefaults setUIURLOverrides:]
  +[AMSDefaults cleanupSampleSessions]
  +[AMSDefaults useNewCookieStorage]
  +[AMSDefaults shouldSampleWithPercentageValue:sessionDurationValue:identifier:]
  +[AMSDefaults syncWithBlock:]
  +[AMSDefaults updateBadgeIdsForBundle:block:]
  +[AMSDefaults ss_ignoreServerTrustEvaluation]
  +[AMSDefaults allowUpsellEnrollmentForAppliedAccounts]
  +[AMSDefaults extendedBiometricACLVersion]
  +[AMSDefaults primaryBiometricACLVersion]
  +[AMSDefaults setAllowUpsellEnrollmentForAppliedAccounts:]
  +[AMSDefaults setExtendedBiometricACLVersion:]
  +[AMSDefaults setPrimaryBiometricACLVersion:]
  +[AMSDefaults setSharedDatabaseChangeToken:]
  +[AMSDefaults sharedDatabaseChangeToken]
  +[AMSDefaults _setBool:forKey:domain:]
  +[AMSDefaults harURLFilters]
  +[AMSDefaults demoAccount]
  +[AMSDefaults _valueForKey:]
  +[AMSDefaults _boolForKey:defaultValue:]
  +[AMSDefaults _boolForKey:defaultValue:domain:]
  +[AMSDefaults _integerForKey:defaultValue:domain:]
  +[AMSDefaults _setValue:forKey:domain:]
  +[AMSDefaults setEnableRemoteSecuritySigning:]
  +[AMSDefaults setPushEnvironment:]
  +[AMSDefaults setDemoAccount:]
  +[AMSDefaults disablePrivacyAcknowledgement]
  +[AMSDefaults _integerForKey:defaultValue:]
  +[AMSDefaults storefrontSuffixes]
  +[AMSDefaults bagOverrides]
  +[AMSDefaults setStorefrontSuffixes:]
  +[AMSDefaults logHARData]
  +[AMSDefaults bagURLCookies]
  +[AMSDefaults setBagURLCookies:]
  +[AMSDefaults deviceBiometricsState]
  +[AMSDefaults deviceBiometricIdentities]
  +[AMSDefaults setDeviceBiometricsState:]
  +[AMSDefaults pushEnvironment]
  +[AMSDefaults setDeviceBiometricIdentities:]
  +[AMSDefaults _setBool:forKey:]


AMSDeprecatedBagContract : NSObject /usr/lib/libSystem.B.dylib <AMSDeviceOfferBagContract, AMSMetricsBagContract, AMSMescalBagContract, AMSLookupBagContract>
 @property  <AMSBagProtocol> *bag
 @property  AMSBagValue *appleMusicDeviceOfferDeepLink
 @property  AMSBagValue *iCloudDeviceOfferDeepLink
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  AMSBagValue *metricsURL
 @property  AMSBagValue *metricsDictionary
 @property  AMSBagValue *metricsUrl
 @property  AMSBagValue *apsEnabledPatterns
 @property  AMSBagValue *apsSamplingPercent
 @property  AMSBagValue *apsAllowedProductTypes
 @property  AMSBagValue *guidRegexes
 @property  AMSBagValue *guidSchemes
 @property  <AMSMescalBagContract> *mescalContract
 @property  AMSBagValue *storefrontSuffix
 @property  AMSBagValue *TLSSamplingPercentage
 @property  AMSBagValue *TLSSamplingSessionDuration
 @property  AMSBagValue *TFOSamplingPercentage
 @property  AMSBagValue *TFOSamplingSessionDuration
 @property  AMSBagValue *trustedDomains
 @property  <AMSMetricsBagContract> *metricsContract
 @property  AMSBagValue *mescalCertificateURL
 @property  AMSBagValue *mescalSetupURL
 @property  AMSBagValue *mescalPrimingURL
 @property  AMSBagValue *mescalSignedActions
 @property  AMSBagValue *mescalSignSapRequests
 @property  AMSBagValue *mescalSignSapResponses
 @property  AMSBagValue *personalizedLookupURL
 @property  AMSBagValue *unpersonalizedLookupURL

  // instance methods
  -[AMSDeprecatedBagContract mescalSignSapResponses]
  -[AMSDeprecatedBagContract mescalSignedActions]
  -[AMSDeprecatedBagContract TFOSamplingPercentage]
  -[AMSDeprecatedBagContract TLSSamplingSessionDuration]
  -[AMSDeprecatedBagContract TLSSamplingPercentage]
  -[AMSDeprecatedBagContract initWithBag:]
  -[AMSDeprecatedBagContract apsEnabledPatterns]
  -[AMSDeprecatedBagContract apsAllowedProductTypes]
  -[AMSDeprecatedBagContract TFOSamplingSessionDuration]
  -[AMSDeprecatedBagContract personalizedLookupURL]
  -[AMSDeprecatedBagContract unpersonalizedLookupURL]
  -[AMSDeprecatedBagContract .cxx_destruct]
  -[AMSDeprecatedBagContract metricsDictionary]
  -[AMSDeprecatedBagContract mescalSetupURL]
  -[AMSDeprecatedBagContract metricsURL]
  -[AMSDeprecatedBagContract setBag:]
  -[AMSDeprecatedBagContract bag]
  -[AMSDeprecatedBagContract mescalCertificateURL]
  -[AMSDeprecatedBagContract mescalContract]
  -[AMSDeprecatedBagContract guidRegexes]
  -[AMSDeprecatedBagContract iCloudDeviceOfferDeepLink]
  -[AMSDeprecatedBagContract appleMusicDeviceOfferDeepLink]
  -[AMSDeprecatedBagContract apsSamplingPercent]
  -[AMSDeprecatedBagContract storefrontSuffix]
  -[AMSDeprecatedBagContract metricsContract]
  -[AMSDeprecatedBagContract trustedDomains]
  -[AMSDeprecatedBagContract metricsUrl]
  -[AMSDeprecatedBagContract guidSchemes]
  -[AMSDeprecatedBagContract mescalSignSapRequests]


AMSDevice : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSDevice screenScale]
  +[AMSDevice productVersion]
  +[AMSDevice productType]
  +[AMSDevice deviceName]
  +[AMSDevice serialNumber]
  +[AMSDevice isGift]
  +[AMSDevice deviceIsiPod]
  +[AMSDevice phoneNumber]
  +[AMSDevice deviceIsMac]
  +[AMSDevice deviceOffers]
  +[AMSDevice macAddress]
  +[AMSDevice _performAuth]
  +[AMSDevice saveDeviceOffers:]
  +[AMSDevice startListeningForDeviceLanguageChangeWithBagContract:]
  +[AMSDevice stopListeningForDeviceLanguageChange]
  +[AMSDevice _setRawDeviceOffers:offersStore:]
  +[AMSDevice postDeviceOfferFollowUpWithIdentifier:account:priority:bag:logKey:]
  +[AMSDevice _followUpItemWithIdentifier:account:priority:bag:]
  +[AMSDevice tearDownAllDeviceOfferFollowUpsForAccount:logKey:]
  +[AMSDevice postAllDeviceOfferFollowUpsForAccount:priority:bag:logKey:]
  +[AMSDevice isEligibleForOffers]
  +[AMSDevice _setDeviceEligibilityKeepingExistingDeviceOffers:offersStore:]
  +[AMSDevice buildVersion]
  +[AMSDevice shouldPresentSetupOffersForAccount:issues:]
  +[AMSDevice tearDownDeviceOfferFollowUpWithIdentifier:account:logKey:]
  +[AMSDevice _shouldPostOffersUpdatedNotification:oldOffers:]
  +[AMSDevice expressedIntent]
  +[AMSDevice hardwarePlatform]
  +[AMSDevice deviceOffersContainType:]
  +[AMSDevice deviceOffersForType:]
  +[AMSDevice registerCompanionWithSerialNumber:]
  +[AMSDevice registerCompanionWithSerialNumber:bag:]
  +[AMSDevice _notificationIdFromFollowUpId:account:]
  +[AMSDevice removeDeviceOfferWithIdentifier:account:bag:logKey:]
  +[AMSDevice saveDeviceOfferEligibility:]
  +[AMSDevice saveDeviceOffersForAccount:response:logKey:]
  +[AMSDevice shouldPresentSetupOffersForAccount:]
  +[AMSDevice deviceIsSeedBuild]
  +[AMSDevice setDeviceOffersCheckEncodingForRequestParameters:]
  +[AMSDevice localIPAddress]
  +[AMSDevice macAddressData]
  +[AMSDevice postAllDeviceOfferFollowUpsForAccount:priority:bagContract:logKey:]
  +[AMSDevice postDeviceOfferFollowUpWithIdentifier:account:priority:bagContract:logKey:]
  +[AMSDevice removeDeviceOfferWithIdentifier:account:bagContract:logKey:]
  +[AMSDevice setBiometricState:]
  +[AMSDevice isSecureElementAvailable]
  +[AMSDevice thinnedAppVariantId]
  +[AMSDevice _dataForNVRAMKey:]
  +[AMSDevice _systemVersionDictionary]
  +[AMSDevice compatibleProductType]
  +[AMSDevice createBagForSubProfile]
  +[AMSDevice deviceIsiPad]
  +[AMSDevice deviceIsInternalBuild]
  +[AMSDevice operatingSystem]
  +[AMSDevice deviceIsiPhone]
  +[AMSDevice bagKeySet]
  +[AMSDevice ROMAddress]
  +[AMSDevice deviceIsAppleWatch]
  +[AMSDevice deviceIsAudioAccessory]
  +[AMSDevice deviceIsAppleTV]
  +[AMSDevice isRunningInStoreDemoMode]
  +[AMSDevice bagSubProfileVersion]
  +[AMSDevice deviceGUID]
  +[AMSDevice addRequiredBagKeysToAggregator:]
  +[AMSDevice uniqueDeviceId]
  +[AMSDevice bagSubProfile]
  +[AMSDevice language]
  +[AMSDevice biometricState]
  +[AMSDevice MLBSerialNumber]


AMSDeviceUpdateHandlerInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSDeviceMessengerFilter *filter
 @property  @? block

  // instance methods
  -[AMSDeviceUpdateHandlerInfo setFilter:]
  -[AMSDeviceUpdateHandlerInfo filter]
  -[AMSDeviceUpdateHandlerInfo .cxx_destruct]
  -[AMSDeviceUpdateHandlerInfo block]
  -[AMSDeviceUpdateHandlerInfo setBlock:]


AMSDeviceMessenger : NSObject /usr/lib/libSystem.B.dylib <AMSDeviceMessengerClientInterface>
 @property  AMSDaemonConnection *connection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableArray *updateHandlers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSDeviceMessenger init]
  -[AMSDeviceMessenger deviceMessengerDidReceiveMessage:]
  -[AMSDeviceMessenger deviceMessengerDidReceiveReply:]
  -[AMSDeviceMessenger deviceMessengerDidClearMessage:]
  -[AMSDeviceMessenger deviceMessengerDidUpdateDevices]
  -[AMSDeviceMessenger clearDialog:]
  -[AMSDeviceMessenger updateHandlers]
  -[AMSDeviceMessenger _getProxyObject]
  -[AMSDeviceMessenger _identifierFromDialogRequest:]
  -[AMSDeviceMessenger _sendDelegateUpdateForMessage:]
  -[AMSDeviceMessenger .cxx_destruct]
  -[AMSDeviceMessenger addUpdateHandlerForType:filter:handler:]
  -[AMSDeviceMessenger dialogsWithFilter:]
  -[AMSDeviceMessenger sendDialog:account:]
  -[AMSDeviceMessenger setUpdateHandlers:]
  -[AMSDeviceMessenger setConnection:]
  -[AMSDeviceMessenger setQueue:]
  -[AMSDeviceMessenger queue]
  -[AMSDeviceMessenger connection]


AMSDeviceMessengerFilter : NSObject /usr/lib/libSystem.B.dylib
 @property  long long messageType
 @property  ACAccount *account
 @property  long long deviceType

  // instance methods
  -[AMSDeviceMessengerFilter messageType]
  -[AMSDeviceMessengerFilter setMessageType:]
  -[AMSDeviceMessengerFilter setDeviceType:]
  -[AMSDeviceMessengerFilter deviceType]
  -[AMSDeviceMessengerFilter setAccount:]
  -[AMSDeviceMessengerFilter account]
  -[AMSDeviceMessengerFilter matchesMessage:]
  -[AMSDeviceMessengerFilter .cxx_destruct]


AMSDeviceOffer : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer_Project, AMSBagConsumer>
 @property  NSNumber *adamId
 @property  NSString *description
 @property  BOOL downgrading
 @property  NSString *offerIdentifier
 @property  unsigned long offerType
 @property  NSSet *serialNumbers
 @property  BOOL subscribed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *debugDescription

  // class methods
  +[AMSDeviceOffer offersSetFromArray:]
  +[AMSDeviceOffer createBagForSubProfile]
  +[AMSDeviceOffer bagKeySet]
  +[AMSDeviceOffer bagSubProfileVersion]
  +[AMSDeviceOffer addRequiredBagKeysToAggregator:]
  +[AMSDeviceOffer bagSubProfile]

  // instance methods
  -[AMSDeviceOffer offerIdentifier]
  -[AMSDeviceOffer isDowngrading]
  -[AMSDeviceOffer .cxx_destruct]
  -[AMSDeviceOffer serialNumbers]
  -[AMSDeviceOffer initWithOfferIdentifier:]
  -[AMSDeviceOffer setDowngrading:]
  -[AMSDeviceOffer setOfferIdentifier:]
  -[AMSDeviceOffer initWithDictionary:]
  -[AMSDeviceOffer setAdamId:]
  -[AMSDeviceOffer adamId]
  -[AMSDeviceOffer isEqual:]
  -[AMSDeviceOffer setDescription:]
  -[AMSDeviceOffer offerType]
  -[AMSDeviceOffer isSubscribed]
  -[AMSDeviceOffer setSubscribed:]


AMSDeviceOfferMigrator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSDeviceOfferMigrator migrateDeviceOffersWithOptions:]


AMSDeviceOfferRegistrationTask : AMSTask <AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  BOOL lightweightCheckOnly
 @property  AMSProcessInfo *clientInfo
 @property  NSSet *offerIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSDeviceOfferRegistrationTask createBagForSubProfile]
  +[AMSDeviceOfferRegistrationTask bagKeySet]
  +[AMSDeviceOfferRegistrationTask bagSubProfileVersion]
  +[AMSDeviceOfferRegistrationTask addRequiredBagKeysToAggregator:]
  +[AMSDeviceOfferRegistrationTask bagSubProfile]

  // instance methods
  -[AMSDeviceOfferRegistrationTask perform]
  -[AMSDeviceOfferRegistrationTask setAccount:]
  -[AMSDeviceOfferRegistrationTask account]
  -[AMSDeviceOfferRegistrationTask .cxx_destruct]
  -[AMSDeviceOfferRegistrationTask setLightweightCheckOnly:]
  -[AMSDeviceOfferRegistrationTask _deviceOffersURL]
  -[AMSDeviceOfferRegistrationTask _urlRequestWithBagURL:]
  -[AMSDeviceOfferRegistrationTask _requestParameters]
  -[AMSDeviceOfferRegistrationTask _updateWithDeviceOffers:]
  -[AMSDeviceOfferRegistrationTask lightweightCheckOnly]
  -[AMSDeviceOfferRegistrationTask offerIdentifiers]
  -[AMSDeviceOfferRegistrationTask _bucketedOffers:]
  -[AMSDeviceOfferRegistrationTask _urlRequestMethod]
  -[AMSDeviceOfferRegistrationTask _latestOffersWithFetchedDeviceOffers:offersStore:]
  -[AMSDeviceOfferRegistrationTask setOfferIdentifiers:]
  -[AMSDeviceOfferRegistrationTask setBag:]
  -[AMSDeviceOfferRegistrationTask bag]
  -[AMSDeviceOfferRegistrationTask clientInfo]
  -[AMSDeviceOfferRegistrationTask setClientInfo:]
  -[AMSDeviceOfferRegistrationTask initWithAccount:bag:]


AMSDeviceOffersStore : NSObject /usr/lib/libSystem.B.dylib <AMSDeviceOffersTracking>
 @property  NSDictionary *deviceOfferEligibility
 @property  NSArray *deviceOffers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSDeviceOffersStore deviceOffers]
  -[AMSDeviceOffersStore deviceOfferEligibility]
  -[AMSDeviceOffersStore setDeviceOfferEligibility:]
  -[AMSDeviceOffersStore setDeviceOffers:]


AMSDialog : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *buttons
 @property  @? completionHandler
 @property  NSImage *icon
 @property  NSString *message
 @property  long long selectedButtonIndex
 @property  long long style
 @property  NSArray *textFields
 @property  NSString *title

  // class methods
  +[AMSDialog dialogWithTitle:message:style:]
  +[AMSDialog dialogWithTitle:message:]

  // instance methods
  -[AMSDialog message]
  -[AMSDialog textFields]
  -[AMSDialog buttons]
  -[AMSDialog setButtons:]
  -[AMSDialog setMessage:]
  -[AMSDialog addButton:]
  -[AMSDialog .cxx_destruct]
  -[AMSDialog addTextField:]
  -[AMSDialog setTextFields:]
  -[AMSDialog initWithTitle:message:style:]
  -[AMSDialog presentSystemDialog]
  -[AMSDialog presentFromViewController:]
  -[AMSDialog presentSheetFromWindow:]
  -[AMSDialog selectedButtonIndex]
  -[AMSDialog setSelectedButtonIndex:]
  -[AMSDialog icon]
  -[AMSDialog setTitle:]
  -[AMSDialog setIcon:]
  -[AMSDialog present]
  -[AMSDialog title]
  -[AMSDialog completionHandler]
  -[AMSDialog setCompletionHandler:]
  -[AMSDialog setStyle:]
  -[AMSDialog style]


AMSDialogAction : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  BOOL ams_commerceUIURL
 @property  long long ams_actionType
 @property  NSString *ams_buyParams
 @property  NSDictionary *ams_buttonDictionary
 @property  BOOL ams_resolvedInterruption
 @property  NSString *ams_subtarget
 @property  NSURL *ams_rawURL
 @property  long long ams_URLType
 @property  NSURL *deepLink
 @property  NSString *identifier
 @property  BOOL inferLinkDestination
 @property  AMSMetricsEvent *metricsEvent
 @property  NSURLRequest *request
 @property  long long style
 @property  AMSDialogRequest *dialogRequest
 @property  NSString *title
 @property  NSMutableDictionary *userInfo
 @property  BOOL shouldRetry

  // class methods
  +[AMSDialogAction supportsSecureCoding]
  +[AMSDialogAction actionWithTitle:]
  +[AMSDialogAction actionWithTitle:identifier:]
  +[AMSDialogAction actionWithTitle:style:]

  // instance methods
  -[AMSDialogAction copyWithZone:]
  -[AMSDialogAction setMetricsEvent:]
  -[AMSDialogAction init]
  -[AMSDialogAction setUserInfo:]
  -[AMSDialogAction setDeepLink:]
  -[AMSDialogAction setRequest:]
  -[AMSDialogAction .cxx_destruct]
  -[AMSDialogAction dialogRequest]
  -[AMSDialogAction inferLinkDestination]
  -[AMSDialogAction setDialogRequest:]
  -[AMSDialogAction setInferLinkDestination:]
  -[AMSDialogAction setTitle:]
  -[AMSDialogAction ams_URLType]
  -[AMSDialogAction ams_actionType]
  -[AMSDialogAction ams_subtarget]
  -[AMSDialogAction setIdentifier:]
  -[AMSDialogAction deepLink]
  -[AMSDialogAction ams_commerceUIURL]
  -[AMSDialogAction ams_buttonDictionary]
  -[AMSDialogAction ams_setButtonDictionary:]
  -[AMSDialogAction ams_buyParams]
  -[AMSDialogAction ams_setActionType:]
  -[AMSDialogAction ams_resolvedInterruption]
  -[AMSDialogAction ams_setBuyParams:]
  -[AMSDialogAction ams_setSubtarget:]
  -[AMSDialogAction ams_setCommerceUIURL:]
  -[AMSDialogAction ams_setResolvedInterruption:]
  -[AMSDialogAction ams_setRawURL:]
  -[AMSDialogAction ams_setURLType:]
  -[AMSDialogAction encodeWithCoder:]
  -[AMSDialogAction identifier]
  -[AMSDialogAction title]
  -[AMSDialogAction userInfo]
  -[AMSDialogAction setShouldRetry:]
  -[AMSDialogAction shouldRetry]
  -[AMSDialogAction ams_rawURL]
  -[AMSDialogAction request]
  -[AMSDialogAction setStyle:]
  -[AMSDialogAction initWithCoder:]
  -[AMSDialogAction style]
  -[AMSDialogAction metricsEvent]


AMSDialogButton : NSObject /usr/lib/libSystem.B.dylib
 @property  @? handler
 @property  long long style
 @property  NSString *title

  // class methods
  +[AMSDialogButton buttonWithTitle:style:handler:]
  +[AMSDialogButton buttonWithTitle:handler:]

  // instance methods
  -[AMSDialogButton .cxx_destruct]
  -[AMSDialogButton initWithTitle:style:handler:]
  -[AMSDialogButton handler]
  -[AMSDialogButton setTitle:]
  -[AMSDialogButton title]
  -[AMSDialogButton setHandler:]
  -[AMSDialogButton setStyle:]
  -[AMSDialogButton style]


AMSDialogRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSArray *buttonActions
 @property  AMSDialogAction *defaultAction
 @property  NSURL *iconBundleURL
 @property  NSString *identifier
 @property  NSString *logKey
 @property  NSString *message
 @property  AMSMetricsEvent *metricsEvent
 @property  long long style
 @property  NSArray *textFields
 @property  NSString *title
 @property  NSDictionary *userInfo

  // class methods
  +[AMSDialogRequest supportsSecureCoding]
  +[AMSDialogRequest requestWithTitle:message:]

  // instance methods
  -[AMSDialogRequest iconBundleURL]
  -[AMSDialogRequest copyWithZone:]
  -[AMSDialogRequest setLogKey:]
  -[AMSDialogRequest message]
  -[AMSDialogRequest setMetricsEvent:]
  -[AMSDialogRequest init]
  -[AMSDialogRequest setIconBundleURL:]
  -[AMSDialogRequest textFields]
  -[AMSDialogRequest setUserInfo:]
  -[AMSDialogRequest logKey]
  -[AMSDialogRequest setMessage:]
  -[AMSDialogRequest .cxx_destruct]
  -[AMSDialogRequest addTextField:]
  -[AMSDialogRequest setTextFields:]
  -[AMSDialogRequest setDefaultAction:]
  -[AMSDialogRequest replaceAction:]
  -[AMSDialogRequest locateActionWithIdentifier:]
  -[AMSDialogRequest setTitle:]
  -[AMSDialogRequest setIdentifier:]
  -[AMSDialogRequest encodeWithCoder:]
  -[AMSDialogRequest identifier]
  -[AMSDialogRequest title]
  -[AMSDialogRequest defaultAction]
  -[AMSDialogRequest userInfo]
  -[AMSDialogRequest buttonActions]
  -[AMSDialogRequest setButtonActions:]
  -[AMSDialogRequest initWithError:]
  -[AMSDialogRequest initWithTitle:message:]
  -[AMSDialogRequest addButtonAction:]
  -[AMSDialogRequest setStyle:]
  -[AMSDialogRequest initWithCoder:]
  -[AMSDialogRequest style]
  -[AMSDialogRequest metricsEvent]


AMSBiometricsIdentityMapChangeTask : AMSTask
 @property  ACAccount *account
 @property  AMSURLSession *session
 @property  NSURLSessionTask *task

  // instance methods
  -[AMSBiometricsIdentityMapChangeTask perform]
  -[AMSBiometricsIdentityMapChangeTask setSession:]
  -[AMSBiometricsIdentityMapChangeTask session]
  -[AMSBiometricsIdentityMapChangeTask setAccount:]
  -[AMSBiometricsIdentityMapChangeTask account]
  -[AMSBiometricsIdentityMapChangeTask .cxx_destruct]
  -[AMSBiometricsIdentityMapChangeTask initWithAccount:session:task:]
  -[AMSBiometricsIdentityMapChangeTask setTask:]
  -[AMSBiometricsIdentityMapChangeTask task]


AMSDialogResult : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  AMSDialogRequest *originalRequest
 @property  NSString *selectedActionIdentifier
 @property  NSArray *textfieldValues
 @property  NSMutableDictionary *userInfo

  // class methods
  +[AMSDialogResult supportsSecureCoding]

  // instance methods
  -[AMSDialogResult setUserInfo:]
  -[AMSDialogResult initWithOriginalRequest:selectedActionIdentifier:]
  -[AMSDialogResult setTextfieldValues:]
  -[AMSDialogResult originalRequest]
  -[AMSDialogResult .cxx_destruct]
  -[AMSDialogResult textfieldValues]
  -[AMSDialogResult setSelectedActionIdentifier:]
  -[AMSDialogResult encodeWithCoder:]
  -[AMSDialogResult userInfo]
  -[AMSDialogResult selectedActionIdentifier]
  -[AMSDialogResult initWithCoder:]


AMSDialogTextField : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  long long keyboardType
 @property  NSString *placeholder
 @property  BOOL secure
 @property  long long tag
 @property  NSString *text

  // class methods
  +[AMSDialogTextField supportsSecureCoding]
  +[AMSDialogTextField textFieldWithPlaceholder:secure:]

  // instance methods
  -[AMSDialogTextField keyboardType]
  -[AMSDialogTextField secure]
  -[AMSDialogTextField setKeyboardType:]
  -[AMSDialogTextField placeholder]
  -[AMSDialogTextField setTag:]
  -[AMSDialogTextField tag]
  -[AMSDialogTextField setSecure:]
  -[AMSDialogTextField text]
  -[AMSDialogTextField .cxx_destruct]
  -[AMSDialogTextField encodeWithCoder:]
  -[AMSDialogTextField setPlaceholder:]
  -[AMSDialogTextField setText:]
  -[AMSDialogTextField initWithCoder:]


AMSDoubleLinkedList : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *listIdentifier
 @property  NSArray *allNodes
 @property  unsigned long count
 @property  AMSDoubleLinkedListNode *head
 @property  AMSDoubleLinkedListNode *tail

  // instance methods
  -[AMSDoubleLinkedList setHead:]
  -[AMSDoubleLinkedList head]
  -[AMSDoubleLinkedList setListIdentifier:]
  -[AMSDoubleLinkedList tail]
  -[AMSDoubleLinkedList setTail:]
  -[AMSDoubleLinkedList listIdentifier]
  -[AMSDoubleLinkedList init]
  -[AMSDoubleLinkedList appendObject:]
  -[AMSDoubleLinkedList .cxx_destruct]
  -[AMSDoubleLinkedList insertNode:]
  -[AMSDoubleLinkedList removeAllNodes]
  -[AMSDoubleLinkedList appendNode:]
  -[AMSDoubleLinkedList insertObject:]
  -[AMSDoubleLinkedList count]
  -[AMSDoubleLinkedList removeNode:]
  -[AMSDoubleLinkedList allNodes]


AMSDoubleLinkedListNode : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *listIdentifier
 @property  AMSDoubleLinkedListNode *previous
 @property  id object
 @property  AMSDoubleLinkedListNode *next

  // instance methods
  -[AMSDoubleLinkedListNode setListIdentifier:]
  -[AMSDoubleLinkedListNode object]
  -[AMSDoubleLinkedListNode listIdentifier]
  -[AMSDoubleLinkedListNode next]
  -[AMSDoubleLinkedListNode initWithObject:]
  -[AMSDoubleLinkedListNode previous]
  -[AMSDoubleLinkedListNode init]
  -[AMSDoubleLinkedListNode .cxx_destruct]
  -[AMSDoubleLinkedListNode setPrevious:]
  -[AMSDoubleLinkedListNode setObject:]
  -[AMSDoubleLinkedListNode setNext:]


AMSEngagement : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSEngagementConnection *connection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableSet *runningPromises

  // class methods
  +[AMSEngagement _connection]
  +[AMSEngagement _connectionQueue]

  // instance methods
  -[AMSEngagement sync]
  -[AMSEngagement init]
  -[AMSEngagement .cxx_destruct]
  -[AMSEngagement _connectionErrorNotification]
  -[AMSEngagement _manageRunningPromise:]
  -[AMSEngagement enqueueData:]
  -[AMSEngagement _scheduleSyncIfNeeded:]
  -[AMSEngagement _parseActions:]
  -[AMSEngagement _removeRunningPromise:]
  -[AMSEngagement runningPromises]
  -[AMSEngagement _failAllRunningPromisesWithError:]
  -[AMSEngagement _createCombinedLogKey]
  -[AMSEngagement setRunningPromises:]
  -[AMSEngagement setConnection:]
  -[AMSEngagement setQueue:]
  -[AMSEngagement queue]
  -[AMSEngagement connection]


AMSEngagementAppData : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *cachedResponses
 @property  NSString *identifier
 @property  NSArray *whitelist

  // instance methods
  -[AMSEngagementAppData .cxx_destruct]
  -[AMSEngagementAppData cachedResponses]
  -[AMSEngagementAppData exportObject]
  -[AMSEngagementAppData setCachedResponses:]
  -[AMSEngagementAppData initWithIdentifier:cacheObject:]
  -[AMSEngagementAppData identifier]
  -[AMSEngagementAppData setWhitelist:]
  -[AMSEngagementAppData whitelist]


AMSEngagementAppResponseModel : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *definition
 @property  NSString *cacheKey
 @property  NSDate *created
 @property  NSDictionary *responseData

  // class methods
  +[AMSEngagementAppResponseModel _shouldEvictDefinition:created:]

  // instance methods
  -[AMSEngagementAppResponseModel cacheKey]
  -[AMSEngagementAppResponseModel responseData]
  -[AMSEngagementAppResponseModel created]
  -[AMSEngagementAppResponseModel .cxx_destruct]
  -[AMSEngagementAppResponseModel initWithCacheObject:]
  -[AMSEngagementAppResponseModel exportObject]
  -[AMSEngagementAppResponseModel initWithData:cacheInfo:]
  -[AMSEngagementAppResponseModel matchesEvent:]
  -[AMSEngagementAppResponseModel definition]


AMSEngagementAppWhitelistModel : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *definition
 @property  BOOL allowsResponse

  // class methods
  +[AMSEngagementAppWhitelistModel matchEvent:toFilter:]

  // instance methods
  -[AMSEngagementAppWhitelistModel .cxx_destruct]
  -[AMSEngagementAppWhitelistModel initWithCacheObject:]
  -[AMSEngagementAppWhitelistModel exportObject]
  -[AMSEngagementAppWhitelistModel matchesEvent:]
  -[AMSEngagementAppWhitelistModel allowsResponse]
  -[AMSEngagementAppWhitelistModel initWithFilter:allowsResponse:]
  -[AMSEngagementAppWhitelistModel definition]


AMSEngagementClientData : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *apps
 @property  NSString *lastSyncedBuild

  // class methods
  +[AMSEngagementClientData loadFromDisk]
  +[AMSEngagementClientData _sharedQueue]
  +[AMSEngagementClientData _fetchClientData]
  +[AMSEngagementClientData _assertEngagementd]
  +[AMSEngagementClientData _registerNotifications]
  +[AMSEngagementClientData _isDaemon]

  // instance methods
  -[AMSEngagementClientData setApps:]
  -[AMSEngagementClientData .cxx_destruct]
  -[AMSEngagementClientData destinationsForEvent:]
  -[AMSEngagementClientData cachedResponseDataForEvent:]
  -[AMSEngagementClientData lastSyncedBuild]
  -[AMSEngagementClientData initWithCacheObject:]
  -[AMSEngagementClientData _cleanUpApps]
  -[AMSEngagementClientData setLastSyncedBuild:]
  -[AMSEngagementClientData addCachedResponseData:cacheInfo:appIdentifier:]
  -[AMSEngagementClientData setWhitelists:appIdentifier:]
  -[AMSEngagementClientData apps]
  -[AMSEngagementClientData saveToDisk]


AMSEngagementConnection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSXPCConnection *connection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <AMSEngagementServiceProtocol> *proxy
 @property  @? errorHandler

  // instance methods
  -[AMSEngagementConnection setProxy:]
  -[AMSEngagementConnection init]
  -[AMSEngagementConnection proxy]
  -[AMSEngagementConnection errorHandler]
  -[AMSEngagementConnection dealloc]
  -[AMSEngagementConnection setErrorHandler:]
  -[AMSEngagementConnection .cxx_destruct]
  -[AMSEngagementConnection _newRemoteConnection]
  -[AMSEngagementConnection _removeRemoteConnection]
  -[AMSEngagementConnection setConnection:]
  -[AMSEngagementConnection setQueue:]
  -[AMSEngagementConnection queue]
  -[AMSEngagementConnection connection]


AMSEngagementDestination : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *identifier
 @property  BOOL allowsResponse

  // class methods
  +[AMSEngagementDestination supportsSecureCoding]

  // instance methods
  -[AMSEngagementDestination .cxx_destruct]
  -[AMSEngagementDestination allowsResponse]
  -[AMSEngagementDestination setAllowsResponse:]
  -[AMSEngagementDestination initWithIdentifier:]
  -[AMSEngagementDestination setIdentifier:]
  -[AMSEngagementDestination encodeWithCoder:]
  -[AMSEngagementDestination identifier]
  -[AMSEngagementDestination initWithCoder:]


AMSEngagementEnqueueRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  AMSProcessInfo *clientInfo
 @property  NSArray *destinations
 @property  NSArray *events
 @property  NSString *logKey
 @property  double timeout

  // class methods
  +[AMSEngagementEnqueueRequest supportsSecureCoding]
  +[AMSEngagementEnqueueRequest archiveClasses]

  // instance methods
  -[AMSEngagementEnqueueRequest events]
  -[AMSEngagementEnqueueRequest setDestinations:]
  -[AMSEngagementEnqueueRequest setLogKey:]
  -[AMSEngagementEnqueueRequest destinations]
  -[AMSEngagementEnqueueRequest timeout]
  -[AMSEngagementEnqueueRequest logKey]
  -[AMSEngagementEnqueueRequest setTimeout:]
  -[AMSEngagementEnqueueRequest .cxx_destruct]
  -[AMSEngagementEnqueueRequest setEvents:]
  -[AMSEngagementEnqueueRequest encodeWithCoder:]
  -[AMSEngagementEnqueueRequest clientInfo]
  -[AMSEngagementEnqueueRequest setClientInfo:]
  -[AMSEngagementEnqueueRequest initWithCoder:]


AMSEngagementEnqueueResult : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDictionary *data
 @property  NSArray *actions
 @property  AMSEngagementRequest *request

  // class methods
  +[AMSEngagementEnqueueResult supportsSecureCoding]
  +[AMSEngagementEnqueueResult archiveClasses]

  // instance methods
  -[AMSEngagementEnqueueResult actions]
  -[AMSEngagementEnqueueResult setData:]
  -[AMSEngagementEnqueueResult setActions:]
  -[AMSEngagementEnqueueResult setRequest:]
  -[AMSEngagementEnqueueResult .cxx_destruct]
  -[AMSEngagementEnqueueResult encodeWithCoder:]
  -[AMSEngagementEnqueueResult data]
  -[AMSEngagementEnqueueResult request]
  -[AMSEngagementEnqueueResult initWithCoder:]


AMSEngagementRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  ACAccount *account
 @property  NSDictionary *clientData
 @property  NSString *logKey
 @property  BOOL failOnDismiss
 @property  NSDictionary *metricsOverlay
 @property  NSURL *URL

  // class methods
  +[AMSEngagementRequest supportsSecureCoding]

  // instance methods
  -[AMSEngagementRequest setLogKey:]
  -[AMSEngagementRequest init]
  -[AMSEngagementRequest clientData]
  -[AMSEngagementRequest logKey]
  -[AMSEngagementRequest setAccount:]
  -[AMSEngagementRequest account]
  -[AMSEngagementRequest .cxx_destruct]
  -[AMSEngagementRequest failOnDismiss]
  -[AMSEngagementRequest metricsOverlay]
  -[AMSEngagementRequest setFailOnDismiss:]
  -[AMSEngagementRequest setMetricsOverlay:]
  -[AMSEngagementRequest encodeWithCoder:]
  -[AMSEngagementRequest setClientData:]
  -[AMSEngagementRequest URL]
  -[AMSEngagementRequest setURL:]
  -[AMSEngagementRequest initWithCoder:]


AMSEngagementResult : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDictionary *userInfo

  // class methods
  +[AMSEngagementResult supportsSecureCoding]

  // instance methods
  -[AMSEngagementResult setUserInfo:]
  -[AMSEngagementResult .cxx_destruct]
  -[AMSEngagementResult encodeWithCoder:]
  -[AMSEngagementResult userInfo]
  -[AMSEngagementResult initWithCoder:]


AMSEngagementSyncRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDictionary *context
 @property  NSArray *destinations
 @property  NSString *logKey
 @property  double timeout

  // class methods
  +[AMSEngagementSyncRequest supportsSecureCoding]
  +[AMSEngagementSyncRequest archiveClasses]

  // instance methods
  -[AMSEngagementSyncRequest context]
  -[AMSEngagementSyncRequest setDestinations:]
  -[AMSEngagementSyncRequest setLogKey:]
  -[AMSEngagementSyncRequest destinations]
  -[AMSEngagementSyncRequest timeout]
  -[AMSEngagementSyncRequest logKey]
  -[AMSEngagementSyncRequest setTimeout:]
  -[AMSEngagementSyncRequest .cxx_destruct]
  -[AMSEngagementSyncRequest encodeWithCoder:]
  -[AMSEngagementSyncRequest setContext:]
  -[AMSEngagementSyncRequest initWithCoder:]


AMSEngagementSyncResult : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSArray *actions

  // class methods
  +[AMSEngagementSyncResult supportsSecureCoding]
  +[AMSEngagementSyncResult archiveClasses]

  // instance methods
  -[AMSEngagementSyncResult actions]
  -[AMSEngagementSyncResult setActions:]
  -[AMSEngagementSyncResult .cxx_destruct]
  -[AMSEngagementSyncResult encodeWithCoder:]
  -[AMSEngagementSyncResult initWithCoder:]


AMSEphemeralDefaults : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSEphemeralDefaults _accessDataStoreUsingBlock:]
  +[AMSEphemeralDefaults setHARLoggingEnabled:]
  +[AMSEphemeralDefaults setBagKeyRegistrationEnabled:]
  +[AMSEphemeralDefaults setProcessAssertionsEnabled:]
  +[AMSEphemeralDefaults HARLoggingItemLimit]
  +[AMSEphemeralDefaults bagKeyRegistrationEnabled]
  +[AMSEphemeralDefaults _propertyForKey:defaultValue:expectedType:]
  +[AMSEphemeralDefaults _setProperty:forKey:]
  +[AMSEphemeralDefaults processAssertionsEnabled]
  +[AMSEphemeralDefaults HARLoggingEnabled]
  +[AMSEphemeralDefaults setHARLoggingItemLimit:]


AMSFailingBagValue : AMSFrozenBagValue
 @property  NSError *error

  // instance methods
  -[AMSFailingBagValue valueWithCompletion:]
  -[AMSFailingBagValue setError:]
  -[AMSFailingBagValue .cxx_destruct]
  -[AMSFailingBagValue error]
  -[AMSFailingBagValue initWithKey:valueType:error:]


AMSFamilyContentDeletionEvent : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSFamilyContentDeletionEvent _notificationPayloadWithAccountPairs:]
  +[AMSFamilyContentDeletionEvent postDistributedNotificationWithAccountPairs:]


AMSFamilyAccountPair : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long downloaderAccountID
 @property  unsigned long familyID
 @property  unsigned long purchaserAccountID

  // instance methods
  -[AMSFamilyAccountPair familyID]
  -[AMSFamilyAccountPair downloaderAccountID]
  -[AMSFamilyAccountPair purchaserAccountID]
  -[AMSFamilyAccountPair initWithDownloaderAccountID:purchaserAccountID:familyID:]


AMSFamilyInfoLookupResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *dictionaryRepresentation
 @property  BOOL cached
 @property  NSArray *familyMembers
 @property  BOOL headOfHouseholdSharingPayment

  // class methods
  +[AMSFamilyInfoLookupResult _familyMembersFromDictionaryRepresentation:]

  // instance methods
  -[AMSFamilyInfoLookupResult isCached]
  -[AMSFamilyInfoLookupResult .cxx_destruct]
  -[AMSFamilyInfoLookupResult isHeadOfHouseholdSharingPayment]
  -[AMSFamilyInfoLookupResult initWithDictionaryRepresentation:cached:]
  -[AMSFamilyInfoLookupResult familyMembers]
  -[AMSFamilyInfoLookupResult dictionaryRepresentation]


AMSFamilyInfoLookupTask : AMSTask <AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSString *logKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFamilyInfoLookupTask createBagForSubProfile]
  +[AMSFamilyInfoLookupTask bagKeySet]
  +[AMSFamilyInfoLookupTask _processURLResult:]
  +[AMSFamilyInfoLookupTask bagSubProfileVersion]
  +[AMSFamilyInfoLookupTask addRequiredBagKeysToAggregator:]
  +[AMSFamilyInfoLookupTask bagSubProfile]

  // instance methods
  -[AMSFamilyInfoLookupTask setLogKey:]
  -[AMSFamilyInfoLookupTask initWithBag:]
  -[AMSFamilyInfoLookupTask logKey]
  -[AMSFamilyInfoLookupTask account]
  -[AMSFamilyInfoLookupTask .cxx_destruct]
  -[AMSFamilyInfoLookupTask _performFamilyInfoRequestForAccount:error:]
  -[AMSFamilyInfoLookupTask _cachedFamilyInfoLookupResultForAccount:]
  -[AMSFamilyInfoLookupTask _pathForCachedFamilyInfoLookupResult]
  -[AMSFamilyInfoLookupTask _cacheFamilyInfoLookupResult:forAccount:]
  -[AMSFamilyInfoLookupTask _currentCachedFamilyInfo]
  -[AMSFamilyInfoLookupTask performFamilyInfoLookup]
  -[AMSFamilyInfoLookupTask bag]
  -[AMSFamilyInfoLookupTask initWithBagContract:]
  -[AMSFamilyInfoLookupTask initWithAccount:bag:]


AMSFamilyMember : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL currentSignedInUser
 @property  NSDictionary *dictionaryRepresentation
 @property  BOOL askToBuyEnabled
 @property  NSString *firstName
 @property  NSNumber *iCloudDSID
 @property  NSString *iCloudUsername
 @property  NSNumber *iTunesDSID
 @property  NSString *iTunesUsername
 @property  NSString *lastName
 @property  BOOL sharingPurchases

  // instance methods
  -[AMSFamilyMember lastName]
  -[AMSFamilyMember initWithDictionaryRepresentation:]
  -[AMSFamilyMember iTunesDSID]
  -[AMSFamilyMember firstName]
  -[AMSFamilyMember .cxx_destruct]
  -[AMSFamilyMember setCurrentSignedInUser:]
  -[AMSFamilyMember isAskToBuyEnabled]
  -[AMSFamilyMember isCurrentSignedInUser]
  -[AMSFamilyMember iTunesUsername]
  -[AMSFamilyMember iCloudUsername]
  -[AMSFamilyMember isSharingPurchases]
  -[AMSFamilyMember iCloudDSID]
  -[AMSFamilyMember dictionaryRepresentation]


AMSFeatureEnabler : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSFeatureEnabler clear]
  +[AMSFeatureEnabler cookie]
  +[AMSFeatureEnabler _fetchEnabledFeatures]


AMSFeatureFlag : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL hidden
 @property  NSString *feature
 @property  NSString *displayName
 @property  NSString *featureDescription
 @property  NSString *domain
 @property  NSString *ITFE
 @property  NSString *flagGroup
 @property  BOOL testable
 @property  BOOL enabled
 @property  BOOL defaultEnabled
 @property  BOOL userEnabled

  // class methods
  +[AMSFeatureFlag allFlagGroupsIncludingHidden:]
  +[AMSFeatureFlag flagForFeature:domain:]
  +[AMSFeatureFlag addNewITFEFeaturesWithNames:]
  +[AMSFeatureFlag setNonProfileITFEFeatureName:toValue:]
  +[AMSFeatureFlag allFlagGroups]
  +[AMSFeatureFlag flagGroupWithName:includingHidden:]
  +[AMSFeatureFlag setFlagGroup:enabled:error:]
  +[AMSFeatureFlag fetchProfileITFEFeatures]
  +[AMSFeatureFlag fetchITFEFeatures]
  +[AMSFeatureFlag enableFlagForFeature:domain:error:]
  +[AMSFeatureFlag disableFlagForFeature:domain:error:]
  +[AMSFeatureFlag flagGroupWithName:]
  +[AMSFeatureFlag enableFlagGroup:error:]
  +[AMSFeatureFlag disableFlagGroup:error:]

  // instance methods
  -[AMSFeatureFlag ITFE]
  -[AMSFeatureFlag domain]
  -[AMSFeatureFlag .cxx_destruct]
  -[AMSFeatureFlag setDomain:]
  -[AMSFeatureFlag setFlagGroup:]
  -[AMSFeatureFlag setTestable:]
  -[AMSFeatureFlag setFeatureDescription:]
  -[AMSFeatureFlag setDefaultEnabled:]
  -[AMSFeatureFlag isDefaultEnabled]
  -[AMSFeatureFlag featureDescription]
  -[AMSFeatureFlag isUserEnabled]
  -[AMSFeatureFlag setITFE:]
  -[AMSFeatureFlag isEnabled]
  -[AMSFeatureFlag feature]
  -[AMSFeatureFlag setDisplayName:]
  -[AMSFeatureFlag flagGroup]
  -[AMSFeatureFlag setUserEnabled:]
  -[AMSFeatureFlag setEnabled:]
  -[AMSFeatureFlag isTestable]
  -[AMSFeatureFlag displayName]
  -[AMSFeatureFlag setHidden:]
  -[AMSFeatureFlag setFeature:]
  -[AMSFeatureFlag isHidden]


AMSFinanceActionResponse : NSObject /usr/lib/libSystem.B.dylib <AMSFinancePerformable>
 @property  ACAccount *account
 @property  NSString *creditString
 @property  long long kind
 @property  AMSURLTaskInfo *taskInfo
 @property  NSURL *URL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFinanceActionResponse actionWithActionDictionary:taskInfo:]
  +[AMSFinanceActionResponse actionWithUpdatedCreditString:account:taskInfo:]

  // instance methods
  -[AMSFinanceActionResponse taskInfo]
  -[AMSFinanceActionResponse setAccount:]
  -[AMSFinanceActionResponse account]
  -[AMSFinanceActionResponse .cxx_destruct]
  -[AMSFinanceActionResponse kind]
  -[AMSFinanceActionResponse initWithTaskInfo:]
  -[AMSFinanceActionResponse setCreditString:]
  -[AMSFinanceActionResponse creditString]
  -[AMSFinanceActionResponse _performCreditDisplayUpdate]
  -[AMSFinanceActionResponse _performOpenAppURL]
  -[AMSFinanceActionResponse _performGotoURL]
  -[AMSFinanceActionResponse _performOpenStandardURL]
  -[AMSFinanceActionResponse performWithTaskInfo:]
  -[AMSFinanceActionResponse setKind:]
  -[AMSFinanceActionResponse setTaskInfo:]
  -[AMSFinanceActionResponse URL]
  -[AMSFinanceActionResponse setURL:]


AMSFinanceAuthenticateResponse : NSObject /usr/lib/libSystem.B.dylib <AMSFinancePerformable>
 @property  NSDictionary *dialogDictionary
 @property  AMSFinanceDialogResponse *dialogResponse
 @property  AMSAuthenticateRequest *authenticateRequest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFinanceAuthenticateResponse _handleDialogFromAuthError:taskInfo:]
  +[AMSFinanceAuthenticateResponse authenticationTypeForResponse:responseDictionary:]
  +[AMSFinanceAuthenticateResponse _authenticateRequestWithAuthType:taskInfo:dialogResponse:]
  +[AMSFinanceAuthenticateResponse _performAuthRequest:actionResult:redirectURL:taskInfo:]
  +[AMSFinanceAuthenticateResponse _presentAuthRequest:taskInfo:]
  +[AMSFinanceAuthenticateResponse _updateTaskWithAuthedAccount:taskInfo:]
  +[AMSFinanceAuthenticateResponse _updateTaskWithLastCredentialSource:taskInfo:]
  +[AMSFinanceAuthenticateResponse performAuthFromResponse:taskInfo:]

  // instance methods
  -[AMSFinanceAuthenticateResponse .cxx_destruct]
  -[AMSFinanceAuthenticateResponse performWithTaskInfo:]
  -[AMSFinanceAuthenticateResponse dialogResponse]
  -[AMSFinanceAuthenticateResponse authenticateRequest]
  -[AMSFinanceAuthenticateResponse _locateActionableButtonUsingDialogResponse:]
  -[AMSFinanceAuthenticateResponse dialogDictionary]
  -[AMSFinanceAuthenticateResponse initWithResponseDictionary:taskInfo:]
  -[AMSFinanceAuthenticateResponse setDialogDictionary:]


AMSFinanceDialogResponse : NSObject /usr/lib/libSystem.B.dylib <AMSFinancePerformable>
 @property  BOOL containsCommerceUIURL
 @property  NSDictionary *dialogDictionary
 @property  long long kind
 @property  AMSURLTaskInfo *taskInfo
 @property  AMSDialogRequest *dialogRequest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFinanceDialogResponse handleDialogResult:taskInfo:]
  +[AMSFinanceDialogResponse performFinanceDialog:taskInfo:]
  +[AMSFinanceDialogResponse _presentDialog:taskInfo:]
  +[AMSFinanceDialogResponse _credentialSource:satisfiesAuthenticationType:]
  +[AMSFinanceDialogResponse _shouldSendOverIDS:taskInfo:]
  +[AMSFinanceDialogResponse _presentIDSDialog:taskInfo:]
  +[AMSFinanceDialogResponse _stashTIDContinueHeadersForResult:info:]
  +[AMSFinanceDialogResponse _presentEngagementForResult:taskInfo:]
  +[AMSFinanceDialogResponse _updatedDialogResultFromResult:engagementResult:error:]
  +[AMSFinanceDialogResponse dialogKindForTaskInfo:withResponseDictionary:]

  // instance methods
  -[AMSFinanceDialogResponse taskInfo]
  -[AMSFinanceDialogResponse .cxx_destruct]
  -[AMSFinanceDialogResponse dialogRequest]
  -[AMSFinanceDialogResponse kind]
  -[AMSFinanceDialogResponse performWithTaskInfo:]
  -[AMSFinanceDialogResponse initWithDialogDictionary:kind:taskInfo:]
  -[AMSFinanceDialogResponse dialogDictionary]
  -[AMSFinanceDialogResponse _createDialogRequest]
  -[AMSFinanceDialogResponse _actionTypeFromButtonDictionary:]
  -[AMSFinanceDialogResponse _isCommerceUIURL:actionType:URLType:]
  -[AMSFinanceDialogResponse _URLForCommerceUIFromURL:tidContinue:]
  -[AMSFinanceDialogResponse _createRequestButtonsFromDialogDictionary:]
  -[AMSFinanceDialogResponse _createActionFromButtonDictionary:title:]
  -[AMSFinanceDialogResponse containsCommerceUIURL]
  -[AMSFinanceDialogResponse setKind:]
  -[AMSFinanceDialogResponse setTaskInfo:]


AMSFinancePaymentSheetResponse : NSObject /usr/lib/libSystem.B.dylib <AMSFinancePerformable>
 @property  AMSFinanceAuthenticateResponse *authenticateResponse
 @property  NSDictionary *metricsDictionary
 @property  AMSPaymentSheetRequest *paymentSheetRequest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFinancePaymentSheetResponse _createMerchantSessionFromDictionary:]
  +[AMSFinancePaymentSheetResponse _createRequestFromDictionary:confirmationOnly:authenticateResponse:taskInfo:]
  +[AMSFinancePaymentSheetResponse _payeeForRequestorValue:]
  +[AMSFinancePaymentSheetResponse _payeeInferredFromEnumeratedTitle:]
  +[AMSFinancePaymentSheetResponse _salableIconForString:]
  +[AMSFinancePaymentSheetResponse _confirmationTitleForString:]
  +[AMSFinancePaymentSheetResponse _flexListDictionaryForValues:account:shouldUppercaseText:]
  +[AMSFinancePaymentSheetResponse _attributedStringForSalableInfoStringArray:account:shouldUppercase:]
  +[AMSFinancePaymentSheetResponse _attributedListDictionaryForValues:account:]
  +[AMSFinancePaymentSheetResponse _attributedStringForAttributedDictionary:account:]
  +[AMSFinancePaymentSheetResponse _attributedStringForAttributedArray:account:]
  +[AMSFinancePaymentSheetResponse _attributedStringForStringArray:useGrey:account:shouldUppercase:]
  +[AMSFinancePaymentSheetResponse _greyAttributedStringForAttributedString:range:]

  // instance methods
  -[AMSFinancePaymentSheetResponse .cxx_destruct]
  -[AMSFinancePaymentSheetResponse metricsDictionary]
  -[AMSFinancePaymentSheetResponse performWithTaskInfo:]
  -[AMSFinancePaymentSheetResponse paymentSheetRequest]
  -[AMSFinancePaymentSheetResponse authenticateResponse]
  -[AMSFinancePaymentSheetResponse initWithResponseDictionary:confirmationOnly:taskInfo:]


AMSFinanceResponse : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSFinanceAuthenticateResponse *cachedAuthenticateResponse
 @property  AMSFinanceDialogResponse *cachedDialogResponse
 @property  AMSFinancePaymentSheetResponse *cachedPaymentSheetResponse
 @property  long long dialogKind
 @property  NSDictionary *responseDictionary
 @property  AMSURLTaskInfo *taskInfo
 @property  ACAccount *account
 @property  NSArray *actions
 @property  NSArray *pingURLs
 @property  NSError *serverError
 @property  BOOL supportedProtocolVersion
 @property  NSURL *versionMismatchURL

  // class methods
  +[AMSFinanceResponse valueForProtocolKey:inResponse:]

  // instance methods
  -[AMSFinanceResponse serverError]
  -[AMSFinanceResponse actions]
  -[AMSFinanceResponse responseDictionary]
  -[AMSFinanceResponse taskInfo]
  -[AMSFinanceResponse versionMismatchURL]
  -[AMSFinanceResponse cachedPaymentSheetResponse]
  -[AMSFinanceResponse _performerForAuthenticate]
  -[AMSFinanceResponse pingURLs]
  -[AMSFinanceResponse setCachedAuthenticateResponse:]
  -[AMSFinanceResponse _performerForActionDictionary]
  -[AMSFinanceResponse _performerForPaymentSheet]
  -[AMSFinanceResponse account]
  -[AMSFinanceResponse .cxx_destruct]
  -[AMSFinanceResponse setCachedPaymentSheetResponse:]
  -[AMSFinanceResponse _valueForProtocolKey:]
  -[AMSFinanceResponse _performerForDialog]
  -[AMSFinanceResponse cachedDialogResponse]
  -[AMSFinanceResponse supportedProtocolVersion]
  -[AMSFinanceResponse setTaskInfo:]
  -[AMSFinanceResponse initWithTaskInfo:decodedObject:]
  -[AMSFinanceResponse _performerForCreditDisplay]
  -[AMSFinanceResponse cachedAuthenticateResponse]
  -[AMSFinanceResponse setResponseDictionary:]
  -[AMSFinanceResponse setCachedDialogResponse:]
  -[AMSFinanceResponse dialogKind]


AMSFinanceVerifyPurchaseResponse : NSObject /usr/lib/libSystem.B.dylib <AMSFinancePerformable>
 @property  AMSDialogRequest *dialogRequest
 @property  NSDictionary *responseDictionary
 @property  AMSURLTaskInfo *taskInfo
 @property  long long verifyType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFinanceVerifyPurchaseResponse isVerifyPurchasePayload:]
  +[AMSFinanceVerifyPurchaseResponse _verifyTypeFromPayload:]
  +[AMSFinanceVerifyPurchaseResponse _dialogRequestForCVVFromPayload:verifyType:]
  +[AMSFinanceVerifyPurchaseResponse _dialogRequestForCarrierFromPayload:verifyType:]

  // instance methods
  -[AMSFinanceVerifyPurchaseResponse responseDictionary]
  -[AMSFinanceVerifyPurchaseResponse taskInfo]
  -[AMSFinanceVerifyPurchaseResponse .cxx_destruct]
  -[AMSFinanceVerifyPurchaseResponse dialogRequest]
  -[AMSFinanceVerifyPurchaseResponse setDialogRequest:]
  -[AMSFinanceVerifyPurchaseResponse performWithTaskInfo:]
  -[AMSFinanceVerifyPurchaseResponse verifyType]
  -[AMSFinanceVerifyPurchaseResponse setVerifyType:]
  -[AMSFinanceVerifyPurchaseResponse initWithPayload:taskInfo:]
  -[AMSFinanceVerifyPurchaseResponse _runCarrierNewCodeWithError:]
  -[AMSFinanceVerifyPurchaseResponse _handleCVVDialogResult:shouldReattempt:]
  -[AMSFinanceVerifyPurchaseResponse _runCVVRequestForCode:error:]
  -[AMSFinanceVerifyPurchaseResponse _handleCarrierDialogResult:shouldReattempt:]
  -[AMSFinanceVerifyPurchaseResponse _runCarrierVerifyCode:error:]
  -[AMSFinanceVerifyPurchaseResponse setTaskInfo:]
  -[AMSFinanceVerifyPurchaseResponse setResponseDictionary:]


AMSFollowUp : NSObject /usr/lib/libSystem.B.dylib
 @property  FLFollowUpController *followUpController
 @property  NSObject<OS_dispatch_queue> *followUpQueue

  // instance methods
  -[AMSFollowUp followUpController]
  -[AMSFollowUp init]
  -[AMSFollowUp postFollowUpItem:]
  -[AMSFollowUp pendingFollowUps]
  -[AMSFollowUp clearFollowUpItem:]
  -[AMSFollowUp .cxx_destruct]
  -[AMSFollowUp followUpQueue]
  -[AMSFollowUp clearFollowUpWithBackingIdentifier:]
  -[AMSFollowUp _pendingFollowUpWithBackingIdentifier:error:]
  -[AMSFollowUp clearFollowUpWithIdentifier:account:]
  -[AMSFollowUp setFollowUpQueue:]
  -[AMSFollowUp pendingFollowUpsForAccount:]
  -[AMSFollowUp pendingFollowUpWithIdentifier:account:]
  -[AMSFollowUp setFollowUpController:]


AMSFollowUpAction : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *backingIdentifier
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *actionQueue
 @property  NSString *identifier
 @property  NSString *label
 @property  NSString *logKey
 @property  AMSMetricsEvent *metricsEvent
 @property  NSString *parentIdentifier
 @property  NSString *preferredClient
 @property  NSURLRequest *request
 @property  BOOL requiresFollowUpUI
 @property  BOOL shouldClear
 @property  NSURL *url
 @property  NSMutableDictionary *userInfo

  // instance methods
  -[AMSFollowUpAction internalQueue]
  -[AMSFollowUpAction setInternalQueue:]
  -[AMSFollowUpAction initWithAction:]
  -[AMSFollowUpAction setLogKey:]
  -[AMSFollowUpAction setMetricsEvent:]
  -[AMSFollowUpAction url]
  -[AMSFollowUpAction initWithLabel:]
  -[AMSFollowUpAction setUserInfo:]
  -[AMSFollowUpAction logKey]
  -[AMSFollowUpAction setPreferredClient:]
  -[AMSFollowUpAction initWithLabel:parentIdentifier:]
  -[AMSFollowUpAction setRequest:]
  -[AMSFollowUpAction .cxx_destruct]
  -[AMSFollowUpAction label]
  -[AMSFollowUpAction setIdentifier:]
  -[AMSFollowUpAction setUrl:]
  -[AMSFollowUpAction identifier]
  -[AMSFollowUpAction backingIdentifier]
  -[AMSFollowUpAction initWithAction:parentIdentifier:]
  -[AMSFollowUpAction _setUserInfoProperty:forKey:]
  -[AMSFollowUpAction requiresFollowUpUI]
  -[AMSFollowUpAction shouldClear]
  -[AMSFollowUpAction initWithItem:action:]
  -[AMSFollowUpAction performActionsWithBag:account:]
  -[AMSFollowUpAction preferredClient]
  -[AMSFollowUpAction setRequiresFollowUpUI:]
  -[AMSFollowUpAction setShouldClear:]
  -[AMSFollowUpAction generateAction]
  -[AMSFollowUpAction postMetricsWithBag:]
  -[AMSFollowUpAction postMetricsWithBagContract:]
  -[AMSFollowUpAction performActionsWithContract:account:]
  -[AMSFollowUpAction setBackingIdentifier:]
  -[AMSFollowUpAction setActionQueue:]
  -[AMSFollowUpAction userInfo]
  -[AMSFollowUpAction parentIdentifier]
  -[AMSFollowUpAction setLabel:]
  -[AMSFollowUpAction request]
  -[AMSFollowUpAction setParentIdentifier:]
  -[AMSFollowUpAction actionQueue]
  -[AMSFollowUpAction metricsEvent]


AMSFollowUpItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *metricsQueue
 @property  ACAccount *account
 @property  NSArray *actions
 @property  BOOL active
 @property  NSString *backingIdentifier
 @property  long long displayStyle
 @property  NSString *footer
 @property  NSString *groupIdentifier
 @property  NSString *identifier
 @property  NSString *informativeText
 @property  NSString *logKey
 @property  AMSMetricsEvent *metricsEvent
 @property  long long priority
 @property  BOOL shouldPostNotification
 @property  NSString *title
 @property  NSMutableDictionary *userInfo

  // class methods
  +[AMSFollowUpItem backingIdentifierForIdentifier:account:]
  +[AMSFollowUpItem componentsFromBackingIdentifier:]

  // instance methods
  -[AMSFollowUpItem groupIdentifier]
  -[AMSFollowUpItem internalQueue]
  -[AMSFollowUpItem setInternalQueue:]
  -[AMSFollowUpItem footer]
  -[AMSFollowUpItem actions]
  -[AMSFollowUpItem setLogKey:]
  -[AMSFollowUpItem setActions:]
  -[AMSFollowUpItem active]
  -[AMSFollowUpItem metricsQueue]
  -[AMSFollowUpItem setMetricsEvent:]
  -[AMSFollowUpItem setUserInfo:]
  -[AMSFollowUpItem logKey]
  -[AMSFollowUpItem setAccount:]
  -[AMSFollowUpItem setShouldPostNotification:]
  -[AMSFollowUpItem setInformativeText:]
  -[AMSFollowUpItem account]
  -[AMSFollowUpItem initWithIdentifier:account:priority:]
  -[AMSFollowUpItem .cxx_destruct]
  -[AMSFollowUpItem setFooter:]
  -[AMSFollowUpItem setTitle:]
  -[AMSFollowUpItem setMetricsQueue:]
  -[AMSFollowUpItem setIdentifier:]
  -[AMSFollowUpItem identifier]
  -[AMSFollowUpItem backingIdentifier]
  -[AMSFollowUpItem generateItem]
  -[AMSFollowUpItem initWithFollowUpItem:]
  -[AMSFollowUpItem shouldOverwriteItem:]
  -[AMSFollowUpItem title]
  -[AMSFollowUpItem postMetricsWithBag:]
  -[AMSFollowUpItem postMetricsWithBagContract:]
  -[AMSFollowUpItem shouldPostNotification]
  -[AMSFollowUpItem userInfo]
  -[AMSFollowUpItem informativeText]
  -[AMSFollowUpItem displayStyle]
  -[AMSFollowUpItem setPriority:]
  -[AMSFollowUpItem priority]
  -[AMSFollowUpItem setDisplayStyle:]
  -[AMSFollowUpItem metricsEvent]


AMSFollowUpMetricsEvent : AMSMetricsEvent
  // class methods
  +[AMSFollowUpMetricsEvent eventFromMetricsDictionary:]


AMSFrozenBagValue : AMSBagValue
 @property  <AMSBagDataSourceProtocol> *dataSource

  // instance methods
  -[AMSFrozenBagValue setDataSource:]
  -[AMSFrozenBagValue .cxx_destruct]
  -[AMSFrozenBagValue dataSource]
  -[AMSFrozenBagValue initWithKey:value:valueType:]


AMSGenerateFraudScoreTask : AMSTask
 @property  CerKRQOmMu7LBUoc *scorer
 @property  ACAccount *account
 @property  unsigned long action
 @property  <AMSBagProtocol> *bag

  // class methods
  +[AMSGenerateFraudScoreTask _fraudScoreCacheAccessQueue]
  +[AMSGenerateFraudScoreTask _fraudScoreCache]
  +[AMSGenerateFraudScoreTask cachedFraudScoreForPurchaseInfo:]
  +[AMSGenerateFraudScoreTask cacheFraudScore:forPurchaseInfo:]
  +[AMSGenerateFraudScoreTask _serverEndpointIdentifierForFraudScoreAction:]

  // instance methods
  -[AMSGenerateFraudScoreTask scorer]
  -[AMSGenerateFraudScoreTask runTask]
  -[AMSGenerateFraudScoreTask account]
  -[AMSGenerateFraudScoreTask .cxx_destruct]
  -[AMSGenerateFraudScoreTask action]
  -[AMSGenerateFraudScoreTask setScorer:]
  -[AMSGenerateFraudScoreTask bag]
  -[AMSGenerateFraudScoreTask initWithAction:account:bag:]
  -[AMSGenerateFraudScoreTask _deviceSupportsFraudScores]
  -[AMSGenerateFraudScoreTask _generateFraudScore]
  -[AMSGenerateFraudScoreTask _createScorerWithError:]
  -[AMSGenerateFraudScoreTask initWithPurchaseInfo:bag:]


AMSHandleDialogResultTask : AMSTask
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSString *proxyBundleId
 @property  AMSDialogRequest *request
 @property  AMSDialogResult *result
 @property  NSError *error

  // instance methods
  -[AMSHandleDialogResultTask result]
  -[AMSHandleDialogResultTask perform]
  -[AMSHandleDialogResultTask setAccount:]
  -[AMSHandleDialogResultTask account]
  -[AMSHandleDialogResultTask .cxx_destruct]
  -[AMSHandleDialogResultTask setProxyBundleId:]
  -[AMSHandleDialogResultTask proxyBundleId]
  -[AMSHandleDialogResultTask bag]
  -[AMSHandleDialogResultTask _handleAskPermissionRequestWithURL:account:]
  -[AMSHandleDialogResultTask initWithRequest:result:error:bag:]
  -[AMSHandleDialogResultTask error]
  -[AMSHandleDialogResultTask clientInfo]
  -[AMSHandleDialogResultTask setClientInfo:]
  -[AMSHandleDialogResultTask request]
  -[AMSHandleDialogResultTask initWithResult:bag:]


AMSHTTPArchive : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *backingJSONData
 @property  BOOL compressed
 @property  NSData *JSONData
 @property  NSString *urlString

  // class methods
  +[AMSHTTPArchive _generateCommentsStringForMetrics:]
  +[AMSHTTPArchive _createJSONObjectForEntries:]
  +[AMSHTTPArchive _generateContentDictionaryForResponse:responseData:]
  +[AMSHTTPArchive removeHTTPArchiveFilesOlderThanDate:]
  +[AMSHTTPArchive _dateFormatterForTimeZone:]
  +[AMSHTTPArchive _generateResponseDictionaryForMetrics:responseData:]
  +[AMSHTTPArchive directory]
  +[AMSHTTPArchive merge:withEstimatedFileSizeLimit:]
  +[AMSHTTPArchive _timeIntervalFromFilename:]
  +[AMSHTTPArchive _generateRequestDictionaryForMetrics:requestData:]
  +[AMSHTTPArchive _createJSONObjectForTaskMetrics:requestData:responseData:]
  +[AMSHTTPArchive merge:]
  +[AMSHTTPArchive _generateHeadersArrayForHTTPHeaders:]

  // instance methods
  -[AMSHTTPArchive initWithMetrics:requestData:responseData:]
  -[AMSHTTPArchive backingJSONData]
  -[AMSHTTPArchive .cxx_destruct]
  -[AMSHTTPArchive setUrlString:]
  -[AMSHTTPArchive urlString]
  -[AMSHTTPArchive setCompressed:]
  -[AMSHTTPArchive initWithURLTaskInfo:]
  -[AMSHTTPArchive isCompressed]
  -[AMSHTTPArchive initWithJSONObject:]
  -[AMSHTTPArchive JSONData]
  -[AMSHTTPArchive writeToDiskWithError:compressed:]
  -[AMSHTTPArchive logHARData]
  -[AMSHTTPArchive setBackingJSONData:]


AMSHTTPArchiveController : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSHTTPArchiveController initialize]
  +[AMSHTTPArchiveController isRemoveDisabled]
  +[AMSHTTPArchiveController buffer]
  +[AMSHTTPArchiveController _updateMaxBufferSize]
  +[AMSHTTPArchiveController _disabled]
  +[AMSHTTPArchiveController maxBufferSizeOverride]
  +[AMSHTTPArchiveController harURLFilters]
  +[AMSHTTPArchiveController _updateHarFileFilters]
  +[AMSHTTPArchiveController addHTTPArchive:]
  +[AMSHTTPArchiveController _harURLFilters]
  +[AMSHTTPArchiveController setMaxBufferSizeOverride:]
  +[AMSHTTPArchiveController _shouldAddRequest:]
  +[AMSHTTPArchiveController setRemoveDisabled:]
  +[AMSHTTPArchiveController _writeHTTPArchivesToDiskCompressed:]


AMSInlineDelegate : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableSet *implementations
 @property  Protocol *protocol

  // instance methods
  -[AMSInlineDelegate protocol]
  -[AMSInlineDelegate setProtocol:]
  -[AMSInlineDelegate dealloc]
  -[AMSInlineDelegate implementOptionalInstanceMethodWithSelector:block:]
  -[AMSInlineDelegate .cxx_destruct]
  -[AMSInlineDelegate initWithProtocol:]
  -[AMSInlineDelegate _initWithProtocol:]
  -[AMSInlineDelegate _implementMethodWithSelector:isRequired:isInstance:block:]
  -[AMSInlineDelegate implementations]
  -[AMSInlineDelegate implementOptionalClassMethodWithSelector:block:]
  -[AMSInlineDelegate implementRequiredClassMethodWithSelector:block:]
  -[AMSInlineDelegate implementRequiredInstanceMethodWithSelector:block:]
  -[AMSInlineDelegate setImplementations:]


AMSBKSProcessAssertion : BKSProcessAssertion /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
 @property  unsigned long ams_assertionCount

  // instance methods
  -[AMSBKSProcessAssertion ams_assertionCount]
  -[AMSBKSProcessAssertion setAms_assertionCount:]


AMSKeepAlive : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  long long style

  // class methods
  +[AMSKeepAlive _handleAssertionExpiration]
  +[AMSKeepAlive keepAliveWithName:style:]
  +[AMSKeepAlive keepAliveWithName:]
  +[AMSKeepAlive keepAliveWithFormat:]
  +[AMSKeepAlive _accessAssertionCache:]
  +[AMSKeepAlive keepAliveWithName:style:block:]

  // instance methods
  -[AMSKeepAlive initWithName:]
  -[AMSKeepAlive _removeProcessAssertion]
  -[AMSKeepAlive _startLogTimer]
  -[AMSKeepAlive dealloc]
  -[AMSKeepAlive .cxx_destruct]
  -[AMSKeepAlive name]
  -[AMSKeepAlive _cacheKey]
  -[AMSKeepAlive _removeOSTransaction]
  -[AMSKeepAlive _assertionName]
  -[AMSKeepAlive _takeProcessAssertion]
  -[AMSKeepAlive invalidate]
  -[AMSKeepAlive initWithName:style:]
  -[AMSKeepAlive _takeOSTransaction]
  -[AMSKeepAlive style]


AMSKeybag : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  unsigned int fairPlayContextID

  // class methods
  +[AMSKeybag sharedInstance]

  // instance methods
  -[AMSKeybag init]
  -[AMSKeybag .cxx_destruct]
  -[AMSKeybag dispatchQueue]
  -[AMSKeybag setDispatchQueue:]
  -[AMSKeybag fairplayContextWithError:]
  -[AMSKeybag _getFairplayContext:]
  -[AMSKeybag _destroyContext]
  -[AMSKeybag resetContext]
  -[AMSKeybag fairplayContext:]
  -[AMSKeybag importKeybagData:outError:]
  -[AMSKeybag kybsyncData:transationType:error:]
  -[AMSKeybag keybagSyncData:transactionType:outError:]
  -[AMSKeybag fairPlayContextID]
  -[AMSKeybag setFairPlayContextID:]
  -[AMSKeybag importKeybagWithData:error:]
  -[AMSKeybag keybagSyncDataWithAccountID:transactionType:error:]


AMSKeychain : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSKeychain copyAccessControlRefWithAccount:options:error:]
  +[AMSKeychain storePrimaryCert:intermediateCert:privateKey:options:error:]
  +[AMSKeychain stashResumptionHeaders:]
  +[AMSKeychain certificateKeychainLabelsForOptions:]
  +[AMSKeychain keychainLabelForOptions:]
  +[AMSKeychain _certificatePrivateKeyLabelForOptions:]
  +[AMSKeychain _ssKeychainLabelForAccount:options:]
  +[AMSKeychain copyPrivateKeyWithContext:options:error:]
  +[AMSKeychain _generateLegacyKeypairForOptions:error:]
  +[AMSKeychain _copyLegacyPublicKeyForOptions:error:]
  +[AMSKeychain _copyLegacyPrivateKeyForOptions:error:]
  +[AMSKeychain _ssCertificateKeychainLabelForAccount:options:]
  +[AMSKeychain _resumptionHeadersQuery]
  +[AMSKeychain _deleteResumptionHeaders]
  +[AMSKeychain _legacyAttestationForOptions:error:]
  +[AMSKeychain _primaryConstraintsWithOptions:]
  +[AMSKeychain _primaryConstraints]
  +[AMSKeychain _extendedConstraintsWithOptions:]
  +[AMSKeychain _primaryConstraintsForMac]
  +[AMSKeychain resumptionHeaders]
  +[AMSKeychain _primaryConstraintsForWatch]
  +[AMSKeychain copyPublicKeyForOptions:error:]
  +[AMSKeychain performForwardKeyMigrationForDSID:forceMigration:]
  +[AMSKeychain deleteKeyPairWithOptions:error:]
  +[AMSKeychain legacyAttestationForOptions:error:]
  +[AMSKeychain deleteCertificateChainWithOptions:error:]
  +[AMSKeychain certificateChainStringsForOptions:error:]
  +[AMSKeychain copyPublicKeyForAccount:options:error:]
  +[AMSKeychain createAccessControlRefWithOptions:error:]
  +[AMSKeychain copyPrivateKeyWithContext:account:options:error:]
  +[AMSKeychain copyCertificatePrivateKeyWithContext:account:options:error:]


AMSKeychainOptions : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *clientCertLabel
 @property  NSString *intermediateCertLabel
 @property  NSString *label
 @property  unsigned long purpose
 @property  BOOL regenerateKeys
 @property  unsigned long style
 @property  BOOL authenticationFallbackVisible
 @property  BOOL displayAuthenticationReason
 @property  NSString *prompt

  // class methods
  +[AMSKeychainOptions preferredAttestationStyle]

  // instance methods
  -[AMSKeychainOptions setPrompt:]
  -[AMSKeychainOptions prompt]
  -[AMSKeychainOptions copyWithZone:]
  -[AMSKeychainOptions setPurpose:]
  -[AMSKeychainOptions init]
  -[AMSKeychainOptions purpose]
  -[AMSKeychainOptions .cxx_destruct]
  -[AMSKeychainOptions label]
  -[AMSKeychainOptions optionsDictionary]
  -[AMSKeychainOptions clientCertLabel]
  -[AMSKeychainOptions intermediateCertLabel]
  -[AMSKeychainOptions setClientCertLabel:]
  -[AMSKeychainOptions _compareString:withString:]
  -[AMSKeychainOptions setIntermediateCertLabel:]
  -[AMSKeychainOptions setAuthenticationFallbackVisible:]
  -[AMSKeychainOptions setDisplayAuthenticationReason:]
  -[AMSKeychainOptions isEqual:]
  -[AMSKeychainOptions setLabel:]
  -[AMSKeychainOptions initWithOptionsDictionary:]
  -[AMSKeychainOptions regenerateKeys]
  -[AMSKeychainOptions setRegenerateKeys:]
  -[AMSKeychainOptions setStyle:]
  -[AMSKeychainOptions displayAuthenticationReason]
  -[AMSKeychainOptions authenticationFallbackVisible]
  -[AMSKeychainOptions style]


AMSLazyPromise : AMSPromise
 @property  @? block
 @property  BOOL executedBlock
 @property  double timeout

  // instance methods
  -[AMSLazyPromise resultBeforeDate:error:]
  -[AMSLazyPromise addErrorBlock:]
  -[AMSLazyPromise resultWithError:]
  -[AMSLazyPromise addSuccessBlock:]
  -[AMSLazyPromise resultWithTimeout:error:]
  -[AMSLazyPromise addFinishBlock:]
  -[AMSLazyPromise timeout]
  -[AMSLazyPromise initWithBlock:]
  -[AMSLazyPromise setTimeout:]
  -[AMSLazyPromise .cxx_destruct]
  -[AMSLazyPromise block]
  -[AMSLazyPromise setBlock:]
  -[AMSLazyPromise initWithTimeout:block:]
  -[AMSLazyPromise executedBlock]
  -[AMSLazyPromise _runBlock]
  -[AMSLazyPromise setExecutedBlock:]


AMSLogConfig : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying>
 @property  NSObject<OS_os_log> *backingOSLogObject
 @property  NSObject<OS_dispatch_queue> *propertyAccessQueue
 @property  NSString *category
 @property  NSString *subsystem
 @property  BOOL debugLogsEnabled
 @property  NSObject<OS_os_log> *OSLogObject

  // class methods
  +[AMSLogConfig sharedBagConfig]
  +[AMSLogConfig sharedPrivacyConfig]
  +[AMSLogConfig sharedConfig]
  +[AMSLogConfig _debugLogsEnabled:]
  +[AMSLogConfig sharedAccountsMigrationConfig]
  +[AMSLogConfig sharedMarketingItemConfig]
  +[AMSLogConfig sharedAccountsMigrationConfigOversize]
  +[AMSLogConfig sharedUserNotificationConfig]
  +[AMSLogConfig _createLogConfigWithSubsystem:category:]
  +[AMSLogConfig sharedDeviceOffersConfig]
  +[AMSLogConfig sharedAccountsLogoutConfig]
  +[AMSLogConfig sharedAccountsCookiesConfig]
  +[AMSLogConfig sharedAttestationConfig]
  +[AMSLogConfig sharedMediaServiceOwnerConfig]
  +[AMSLogConfig sharedAccountsConfig]
  +[AMSLogConfig sharedAccountsOversizeConfig]
  +[AMSLogConfig sharedAccountsStorefrontConfig]
  +[AMSLogConfig sharedMediaConfig]
  +[AMSLogConfig sharedDataMigrationConfig]
  +[AMSLogConfig sharedPurchaseConfig]
  +[AMSLogConfig _createLogConfigWithBaseConfig:subystem:category:]
  +[AMSLogConfig sharedAnisetteConfig]
  +[AMSLogConfig sharedBagCacheConfig]
  +[AMSLogConfig sharedAccountsNotificationPluginConfig]
  +[AMSLogConfig sharedAccountsDaemonConfig]
  +[AMSLogConfig sharedAccountsAuthenticationPluginConfig]
  +[AMSLogConfig sharedAccountsMultiUserConfig]
  +[AMSLogConfig sharedFollowUpConfig]
  +[AMSLogConfig sharedPushNotificationConfig]
  +[AMSLogConfig sharedConfigOversize]
  +[AMSLogConfig sharedRatingsProviderConfig]
  +[AMSLogConfig sharedAccountsSyncPluginConfig]
  +[AMSLogConfig sharedKeychainConfig]

  // instance methods
  -[AMSLogConfig setBackingOSLogObject:]
  -[AMSLogConfig subsystem]
  -[AMSLogConfig copyWithZone:]
  -[AMSLogConfig setPropertyAccessQueue:]
  -[AMSLogConfig category]
  -[AMSLogConfig init]
  -[AMSLogConfig OSLogObject]
  -[AMSLogConfig .cxx_destruct]
  -[AMSLogConfig backingOSLogObject]
  -[AMSLogConfig setSubsystem:]
  -[AMSLogConfig isEqual:]
  -[AMSLogConfig propertyAccessQueue]
  -[AMSLogConfig debugLogsEnabled]
  -[AMSLogConfig setCategory:]
  -[AMSLogConfig mutableCopyWithZone:]


AMSMutableLogConfig : AMSLogConfig <NSCopying>
 @property  NSString *category
 @property  NSString *subsystem


AMSLookupDecoder : NSObject /usr/lib/libSystem.B.dylib <AMSResponseDecoding>
  // instance methods
  -[AMSLookupDecoder resultFromResult:error:]


AMSLookup : AMSTask <AMSBagConsumer>
 @property  <AMSBagProtocol> *bag
 @property  NSString *caller
 @property  AMSProcessInfo *clientInfo
 @property  NSString *imageProfile
 @property  NSString *keyProfile
 @property  NSString *platform
 @property  long long signatureType
 @property  long long version
 @property  NSString *language
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSLookup createBagForSubProfile]
  +[AMSLookup bagKeySet]
  +[AMSLookup bagSubProfileVersion]
  +[AMSLookup addRequiredBagKeysToAggregator:]
  +[AMSLookup bagSubProfile]

  // instance methods
  -[AMSLookup _compileQueryParametersWithBundleIds:itemIds:]
  -[AMSLookup setContract:]
  -[AMSLookup initWithBagContract:caller:keyProfile:]
  -[AMSLookup keyProfile]
  -[AMSLookup setLanguage:]
  -[AMSLookup .cxx_destruct]
  -[AMSLookup caller]
  -[AMSLookup setKeyProfile:]
  -[AMSLookup setCaller:]
  -[AMSLookup setVersion:]
  -[AMSLookup initWithBag:caller:keyProfile:]
  -[AMSLookup setBag:]
  -[AMSLookup bag]
  -[AMSLookup initWithBagContract:]
  -[AMSLookup performLookupWithBundleIdentifiers:itemIdentifiers:]
  -[AMSLookup clientInfo]
  -[AMSLookup setSignatureType:]
  -[AMSLookup platform]
  -[AMSLookup setClientInfo:]
  -[AMSLookup version]
  -[AMSLookup setImageProfile:]
  -[AMSLookup _addJSSignatureToRequest:]
  -[AMSLookup imageProfile]
  -[AMSLookup setPlatform:]
  -[AMSLookup contract]
  -[AMSLookup signatureType]
  -[AMSLookup language]


AMSLookupItem : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *artistName
 @property  NSArray *artwork
 @property  NSString *bundleIdentifier
 @property  NSArray *categoryNames
 @property  NSString *displayName
 @property  NSString *itemKind
 @property  NSNumber *iTunesStoreIdentifier
 @property  NSString *offerName
 @property  NSArray *offers
 @property  BOOL POIBased
 @property  NSURL *productPageURL
 @property  long long numberOfUserRatings
 @property  float userRating
 @property  long long numberOfUserRatingsForCurrentVersion
 @property  float userRatingForCurrentVersion
 @property  NSDictionary *itemDictionary

  // class methods
  +[AMSLookupItem supportsSecureCoding]

  // instance methods
  -[AMSLookupItem copyWithZone:]
  -[AMSLookupItem artistName]
  -[AMSLookupItem artwork]
  -[AMSLookupItem .cxx_destruct]
  -[AMSLookupItem offers]
  -[AMSLookupItem offerName]
  -[AMSLookupItem initWithLookupDictionary:]
  -[AMSLookupItem encodeWithCoder:]
  -[AMSLookupItem itemKind]
  -[AMSLookupItem isPOIBased]
  -[AMSLookupItem userRating]
  -[AMSLookupItem iTunesStoreIdentifier]
  -[AMSLookupItem categoryNames]
  -[AMSLookupItem numberOfUserRatings]
  -[AMSLookupItem productPageURL]
  -[AMSLookupItem numberOfUserRatingsForCurrentVersion]
  -[AMSLookupItem userRatingForCurrentVersion]
  -[AMSLookupItem itemDictionary]
  -[AMSLookupItem bundleIdentifier]
  -[AMSLookupItem displayName]
  -[AMSLookupItem initWithCoder:]


AMSLookupItemArtworkColor : NSObject /usr/lib/libSystem.B.dylib
 @property  double alpha
 @property  double blue
 @property  double green
 @property  double red

  // instance methods
  -[AMSLookupItemArtworkColor blue]
  -[AMSLookupItemArtworkColor red]
  -[AMSLookupItemArtworkColor alpha]
  -[AMSLookupItemArtworkColor setGreen:]
  -[AMSLookupItemArtworkColor green]
  -[AMSLookupItemArtworkColor setBlue:]
  -[AMSLookupItemArtworkColor setRed:]
  -[AMSLookupItemArtworkColor setAlpha:]


AMSLookupItemArtwork : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *artworkDictionary
 @property  double height
 @property  NSString *URLString
 @property  double width

  // instance methods
  -[AMSLookupItemArtwork URLString]
  -[AMSLookupItemArtwork width]
  -[AMSLookupItemArtwork .cxx_destruct]
  -[AMSLookupItemArtwork artworkDictionary]
  -[AMSLookupItemArtwork initWithArtworkDictionary:]
  -[AMSLookupItemArtwork colorWithKind:]
  -[AMSLookupItemArtwork URLWithHeight:width:cropStyle:format:]
  -[AMSLookupItemArtwork height]


AMSLookupItemOffer : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *buyParameters
 @property  NSString *formattedPrice
 @property  NSDictionary *lookupDictionary
 @property  NSString *offerType
 @property  NSNumber *price
 @property  NSString *subscriptionType

  // instance methods
  -[AMSLookupItemOffer price]
  -[AMSLookupItemOffer subscriptionType]
  -[AMSLookupItemOffer .cxx_destruct]
  -[AMSLookupItemOffer initWithLookupDictionary:]
  -[AMSLookupItemOffer formattedPrice]
  -[AMSLookupItemOffer offerType]
  -[AMSLookupItemOffer actionTextForType:]
  -[AMSLookupItemOffer lookupDictionary]
  -[AMSLookupItemOffer buyParameters]


AMSLookupResult : AMSURLResult
 @property  NSDate *expirationDate
 @property  NSArray *allItems

  // instance methods
  -[AMSLookupResult allItems]
  -[AMSLookupResult _enumerateItemsWithBlock:]
  -[AMSLookupResult valueForProperty:]
  -[AMSLookupResult setExpirationDate:]
  -[AMSLookupResult .cxx_destruct]
  -[AMSLookupResult itemForKey:]
  -[AMSLookupResult initWithResult:dictionary:]
  -[AMSLookupResult expirationDate]
  -[AMSLookupResult appStoreURLWithReason:initialIndex:]


AMSLRUCache : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  NSMutableDictionary *backingDictionary
 @property  AMSDoubleLinkedList *backingList
 @property  unsigned long count
 @property  unsigned long maxSize

  // instance methods
  -[AMSLRUCache accessQueue]
  -[AMSLRUCache setAccessQueue:]
  -[AMSLRUCache _count]
  -[AMSLRUCache init]
  -[AMSLRUCache maxSize]
  -[AMSLRUCache _addObject:forKey:]
  -[AMSLRUCache .cxx_destruct]
  -[AMSLRUCache removeAllObjects]
  -[AMSLRUCache backingList]
  -[AMSLRUCache setObject:forKey:]
  -[AMSLRUCache objectForKey:]
  -[AMSLRUCache _removeObjectForKey:]
  -[AMSLRUCache objectForKey:withCreationBlock:]
  -[AMSLRUCache setBackingList:]
  -[AMSLRUCache allObjectsAndKeys]
  -[AMSLRUCache setBackingDictionary:]
  -[AMSLRUCache count]
  -[AMSLRUCache backingDictionary]
  -[AMSLRUCache initWithMaxSize:]


AMSLRUCacheItem : AMSDoubleLinkedListNode
 @property  <NSCopying> *key

  // instance methods
  -[AMSLRUCacheItem .cxx_destruct]
  -[AMSLRUCacheItem setKey:]
  -[AMSLRUCacheItem key]
  -[AMSLRUCacheItem initWithKey:object:]


AMSMappedBundleInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *bundleIdentifier
 @property  NSString *clientName
 @property  NSString *clientVersion
 @property  NSString *scheme
 @property  NSString *secureScheme
 @property  NSString *accountMediaType

  // class methods
  +[AMSMappedBundleInfo bundleInfoForProcessInfo:]
  +[AMSMappedBundleInfo _accountMediaTypeForClientName:bundleID:]
  +[AMSMappedBundleInfo currentBundleInfo]
  +[AMSMappedBundleInfo _clientNameFromProcessInfo:]
  +[AMSMappedBundleInfo _clientVersionFromProcessInfo:clientName:]
  +[AMSMappedBundleInfo accountMediaTypeInfoForProcessInfo:]

  // instance methods
  -[AMSMappedBundleInfo setScheme:]
  -[AMSMappedBundleInfo scheme]
  -[AMSMappedBundleInfo clientName]
  -[AMSMappedBundleInfo .cxx_destruct]
  -[AMSMappedBundleInfo setClientVersion:]
  -[AMSMappedBundleInfo clientVersion]
  -[AMSMappedBundleInfo setBundleIdentifier:]
  -[AMSMappedBundleInfo setSecureScheme:]
  -[AMSMappedBundleInfo setClientName:]
  -[AMSMappedBundleInfo accountMediaType]
  -[AMSMappedBundleInfo bundleIdentifier]
  -[AMSMappedBundleInfo _initWithClient:processInfo:]
  -[AMSMappedBundleInfo setAccountMediaType:]
  -[AMSMappedBundleInfo secureScheme]


AMSMarketingItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *artworkDictionary
 @property  NSString *badge
 @property  NSString *campaignID
 @property  NSString *itemID
 @property  NSArray *itemActions
 @property  NSDictionary *rawValues
 @property  NSArray *relatedContent
 @property  NSString *serviceType
 @property  NSString *subtitle
 @property  NSString *templateID
 @property  NSString *title
 @property  NSString *type
 @property  NSString *URLString
 @property  NSArray *videos

  // instance methods
  -[AMSMarketingItem URLString]
  -[AMSMarketingItem campaignID]
  -[AMSMarketingItem rawValues]
  -[AMSMarketingItem badge]
  -[AMSMarketingItem .cxx_destruct]
  -[AMSMarketingItem abSettings]
  -[AMSMarketingItem artworkDictionary]
  -[AMSMarketingItem serviceType]
  -[AMSMarketingItem endDate]
  -[AMSMarketingItem title]
  -[AMSMarketingItem initWithDictionary:]
  -[AMSMarketingItem type]
  -[AMSMarketingItem itemActions]
  -[AMSMarketingItem renderingAttributes]
  -[AMSMarketingItem itemID]
  -[AMSMarketingItem templateID]
  -[AMSMarketingItem video]
  -[AMSMarketingItem tagline]
  -[AMSMarketingItem subtitle]
  -[AMSMarketingItem relatedContent]
  -[AMSMarketingItem videos]


AMSMarketingItemAction : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *rawValues
 @property  AMSBuyParams *buyParams
 @property  NSString *callToActionLabel
 @property  NSString *disclaimerText
 @property  BOOL isDefault
 @property  BOOL isFamily
 @property  BOOL isRecommended
 @property  NSString *offerID
 @property  NSNumber *price
 @property  NSString *priceForDisplay
 @property  NSNumber *priceDiff
 @property  NSString *priceDiffForDisplay
 @property  NSString *valuePropDetail
 @property  NSString *valuePropInfo
 @property  NSArray *serviceComponents
 @property  NSString *type
 @property  NSURL *url

  // instance methods
  -[AMSMarketingItemAction isRecommended]
  -[AMSMarketingItemAction price]
  -[AMSMarketingItemAction priceFormatted]
  -[AMSMarketingItemAction url]
  -[AMSMarketingItemAction isFamily]
  -[AMSMarketingItemAction rawValues]
  -[AMSMarketingItemAction .cxx_destruct]
  -[AMSMarketingItemAction callToActionLabel]
  -[AMSMarketingItemAction name]
  -[AMSMarketingItemAction introOfferPeriod]
  -[AMSMarketingItemAction setRawValues:]
  -[AMSMarketingItemAction disclaimerText]
  -[AMSMarketingItemAction inAppID]
  -[AMSMarketingItemAction initWithDictionary:]
  -[AMSMarketingItemAction type]
  -[AMSMarketingItemAction buyParams]
  -[AMSMarketingItemAction _servicesData]
  -[AMSMarketingItemAction dismissLabel]
  -[AMSMarketingItemAction offerID]
  -[AMSMarketingItemAction serviceComponents]
  -[AMSMarketingItemAction priceString]
  -[AMSMarketingItemAction introOfferPrice]
  -[AMSMarketingItemAction priceDiffForDisplay]
  -[AMSMarketingItemAction introOfferPriceForDisplay]
  -[AMSMarketingItemAction priceDiff]
  -[AMSMarketingItemAction recurringSubscriptionPeriod]
  -[AMSMarketingItemAction freeTrialPeriod]
  -[AMSMarketingItemAction isYearly]
  -[AMSMarketingItemAction isDefault]
  -[AMSMarketingItemAction _serviceComponentsFromMap:withNames:]
  -[AMSMarketingItemAction valuePropDetail]
  -[AMSMarketingItemAction priceForDisplay]
  -[AMSMarketingItemAction _serviceNames]
  -[AMSMarketingItemAction valuePropInfo]


AMSMarketingItemActionComponent : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *artworkURL
 @property  NSString *description
 @property  NSDictionary *rawValues

  // instance methods
  -[AMSMarketingItemActionComponent artworkURL]
  -[AMSMarketingItemActionComponent rawValues]
  -[AMSMarketingItemActionComponent .cxx_destruct]
  -[AMSMarketingItemActionComponent initWithDictionary:]


AMSMarketingItemParser : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSMarketingItemParser _rawMarketingItemSelectionFromRawMarketingItems:serviceType:placement:engagementService:]
  +[AMSMarketingItemParser selectionFromRawMarketingItems:]
  +[AMSMarketingItemParser selectionFromMarketingItems:]
  +[AMSMarketingItemParser selectionFromRawMarketingItems:serviceType:placement:]


AMSMarketingItemStub : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSMarketingItemStub stubForServiceType:placement:]


AMSMarketingItemTask : AMSTask <AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSDictionary *contextInfo
 @property  NSString *clientIdentifier
 @property  AMSProcessInfo *clientInfo
 @property  NSString *clientVersion
 @property  BOOL hydrateRelatedContent
 @property  NSString *logKey
 @property  NSString *placement
 @property  NSString *serviceType
 @property  BOOL includeMediaAssets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMarketingItemTask createBagForSubProfile]
  +[AMSMarketingItemTask bagKeySet]
  +[AMSMarketingItemTask bagSubProfileVersion]
  +[AMSMarketingItemTask addRequiredBagKeysToAggregator:]
  +[AMSMarketingItemTask bagSubProfile]

  // instance methods
  -[AMSMarketingItemTask initWithBag:clientIdentifier:clientVersion:placement:serviceType:]
  -[AMSMarketingItemTask setLogKey:]
  -[AMSMarketingItemTask perform]
  -[AMSMarketingItemTask logKey]
  -[AMSMarketingItemTask clientIdentifier]
  -[AMSMarketingItemTask setAccount:]
  -[AMSMarketingItemTask account]
  -[AMSMarketingItemTask performWithFetchOnly]
  -[AMSMarketingItemTask .cxx_destruct]
  -[AMSMarketingItemTask serviceType]
  -[AMSMarketingItemTask setHydrateRelatedContent:]
  -[AMSMarketingItemTask _fetchItems]
  -[AMSMarketingItemTask setIncludeMediaAssets:]
  -[AMSMarketingItemTask clientVersion]
  -[AMSMarketingItemTask bag]
  -[AMSMarketingItemTask hydrateRelatedContent]
  -[AMSMarketingItemTask clientInfo]
  -[AMSMarketingItemTask _fetchItemsFromURL:]
  -[AMSMarketingItemTask _processMediaResultFromPromise:]
  -[AMSMarketingItemTask initWithAccount:bag:clientIdentifier:clientVersion:placement:serviceType:]
  -[AMSMarketingItemTask setClientInfo:]
  -[AMSMarketingItemTask includeMediaAssets]
  -[AMSMarketingItemTask setContextInfo:]
  -[AMSMarketingItemTask placement]
  -[AMSMarketingItemTask contextInfo]


AMSMarketingItemTaskURLBuilder : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMarketingItemTaskURLBuilder bagKeySet]
  +[AMSMarketingItemTaskURLBuilder bagSubProfileVersion]
  +[AMSMarketingItemTaskURLBuilder bagSubProfile]

  // instance methods
  -[AMSMarketingItemTaskURLBuilder urlWithServiceType:placement:bag:hydrateRelatedContents:additionalParameters:]
  -[AMSMarketingItemTaskURLBuilder _realmOverridesFromBag:]
  -[AMSMarketingItemTaskURLBuilder _realmFromBag:]
  -[AMSMarketingItemTaskURLBuilder _formattedURLPathWithBag:]
  -[AMSMarketingItemTaskURLBuilder _additionalQueryItems]
  -[AMSMarketingItemTaskURLBuilder _stringForKey:fromBag:]
  -[AMSMarketingItemTaskURLBuilder _urlPathFromBag:]
  -[AMSMarketingItemTaskURLBuilder _countryCodeFromBag:]


AMSMediaArtwork : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *artworkDictionary
 @property  {CGSize=dd} artworkSize

  // instance methods
  -[AMSMediaArtwork URLString]
  -[AMSMediaArtwork width]
  -[AMSMediaArtwork .cxx_destruct]
  -[AMSMediaArtwork artworkSize]
  -[AMSMediaArtwork artworkDictionary]
  -[AMSMediaArtwork initWithDictionary:]
  -[AMSMediaArtwork colorWithKind:]
  -[AMSMediaArtwork URLWithSize:]
  -[AMSMediaArtwork _qualityForFormat:]
  -[AMSMediaArtwork URLWithSize:cropStyle:format:quality:]
  -[AMSMediaArtwork URLWithSize:cropStyle:format:]
  -[AMSMediaArtwork height]


AMSMediaProtocolHandler : AMSURLProtocolHandler
 @property  <AMSMediaTokenServiceProtocol> *tokenService

  // instance methods
  -[AMSMediaProtocolHandler reconfigureNewRequest:originalTask:redirect:error:]
  -[AMSMediaProtocolHandler initWithTokenService:]
  -[AMSMediaProtocolHandler tokenService]
  -[AMSMediaProtocolHandler .cxx_destruct]
  -[AMSMediaProtocolHandler handleResponse:task:]


AMSMediaRequestEncoder : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer, AMSRequestEncoding>
 @property  AMSURLRequestEncoder *requestEncoder
 @property  BOOL disableAccountMediaTypeComponent
 @property  BOOL URLKnownToBeTrusted
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  BOOL disableResponseDecoding
 @property  NSString *logKey
 @property  <AMSResponseDecoding> *responseDecoder
 @property  <AMSMediaTokenServiceProtocol> *tokenService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMediaRequestEncoder createBagForSubProfile]
  +[AMSMediaRequestEncoder bagKeySet]
  +[AMSMediaRequestEncoder bagSubProfileVersion]
  +[AMSMediaRequestEncoder bagSubProfile]

  // instance methods
  -[AMSMediaRequestEncoder setLogKey:]
  -[AMSMediaRequestEncoder requestEncoder]
  -[AMSMediaRequestEncoder requestWithURL:]
  -[AMSMediaRequestEncoder logKey]
  -[AMSMediaRequestEncoder requestByEncodingRequest:parameters:]
  -[AMSMediaRequestEncoder tokenService]
  -[AMSMediaRequestEncoder setDisableResponseDecoding:]
  -[AMSMediaRequestEncoder setAccount:]
  -[AMSMediaRequestEncoder account]
  -[AMSMediaRequestEncoder .cxx_destruct]
  -[AMSMediaRequestEncoder bag]
  -[AMSMediaRequestEncoder initWithTokenService:bag:]
  -[AMSMediaRequestEncoder requestWithComponents:]
  -[AMSMediaRequestEncoder disableAccountMediaTypeComponent]
  -[AMSMediaRequestEncoder setDisableAccountMediaTypeComponent:]
  -[AMSMediaRequestEncoder setResponseDecoder:]
  -[AMSMediaRequestEncoder clientInfo]
  -[AMSMediaRequestEncoder setClientInfo:]
  -[AMSMediaRequestEncoder responseDecoder]
  -[AMSMediaRequestEncoder URLKnownToBeTrusted]
  -[AMSMediaRequestEncoder setURLKnownToBeTrusted:]
  -[AMSMediaRequestEncoder disableResponseDecoding]


AMSMediaResponseDecoder : NSObject /usr/lib/libSystem.B.dylib <AMSResponseDecoding>
  // instance methods
  -[AMSMediaResponseDecoder resultFromResult:error:]


AMSMediaResult : AMSURLResult
 @property  NSDictionary *responseDictionary
 @property  NSArray *responseDataItems

  // instance methods
  -[AMSMediaResult responseDictionary]
  -[AMSMediaResult initWithResult:]
  -[AMSMediaResult .cxx_destruct]
  -[AMSMediaResult responseDataItems]


AMSMediaSharedProperties : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSURLSession *session
 @property  <AMSMediaTokenServiceProtocol> *tokenService

  // class methods
  +[AMSMediaSharedProperties accessQueue]
  +[AMSMediaSharedProperties propertiesForMarketingItemTask:]
  +[AMSMediaSharedProperties propertiesForRatingsTask:]
  +[AMSMediaSharedProperties _propertiesForClientIdentifier:bag:URLKnownToBeTrusted:]
  +[AMSMediaSharedProperties sharedPropertiesMapTable]
  +[AMSMediaSharedProperties propertiesForMediaTask:]

  // instance methods
  -[AMSMediaSharedProperties tokenService]
  -[AMSMediaSharedProperties session]
  -[AMSMediaSharedProperties dealloc]
  -[AMSMediaSharedProperties .cxx_destruct]
  -[AMSMediaSharedProperties _initWithClientIdentifier:bag:URLKnownToBeTrusted:]


AMSMediaTask : AMSTask <AMSBagConsumer>
 @property  BOOL URLKnownToBeTrusted
 @property  ACAccount *account
 @property  NSArray *additionalPlatforms
 @property  NSDictionary *additionalQueryParams
 @property  <AMSBagProtocol> *bag
 @property  NSArray *bundleIdentifiers
 @property  BOOL charts
 @property  NSString *clientIdentifier
 @property  AMSProcessInfo *clientInfo
 @property  NSString *clientVersion
 @property  NSDictionary *filters
 @property  NSArray *includedResultKeys
 @property  NSArray *itemIdentifiers
 @property  NSString *logKey
 @property  NSString *searchTerm
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMediaTask createBagForSubProfile]
  +[AMSMediaTask bagKeySet]
  +[AMSMediaTask bagSubProfileVersion]
  +[AMSMediaTask addRequiredBagKeysToAggregator:]
  +[AMSMediaTask bagSubProfile]

  // instance methods
  -[AMSMediaTask searchTerm]
  -[AMSMediaTask setSearchTerm:]
  -[AMSMediaTask setFilters:]
  -[AMSMediaTask itemIdentifiers]
  -[AMSMediaTask setLogKey:]
  -[AMSMediaTask perform]
  -[AMSMediaTask charts]
  -[AMSMediaTask logKey]
  -[AMSMediaTask clientIdentifier]
  -[AMSMediaTask bundleIdentifiers]
  -[AMSMediaTask setAccount:]
  -[AMSMediaTask account]
  -[AMSMediaTask setItemIdentifiers:]
  -[AMSMediaTask .cxx_destruct]
  -[AMSMediaTask filters]
  -[AMSMediaTask clientVersion]
  -[AMSMediaTask bag]
  -[AMSMediaTask type]
  -[AMSMediaTask setCharts:]
  -[AMSMediaTask additionalPlatforms]
  -[AMSMediaTask setAdditionalPlatforms:]
  -[AMSMediaTask additionalQueryParams]
  -[AMSMediaTask setAdditionalQueryParams:]
  -[AMSMediaTask setBundleIdentifiers:]
  -[AMSMediaTask includedResultKeys]
  -[AMSMediaTask setIncludedResultKeys:]
  -[AMSMediaTask initWithType:clientIdentifier:clientVersion:bag:]
  -[AMSMediaTask clientInfo]
  -[AMSMediaTask setClientInfo:]
  -[AMSMediaTask URLKnownToBeTrusted]
  -[AMSMediaTask setURLKnownToBeTrusted:]


AMSMediaTaskTypeConfig : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *hostBagKey
 @property  BOOL includePlatform
 @property  long long type
 @property  NSString *typeString

  // class methods
  +[AMSMediaTaskTypeConfig configForType:]

  // instance methods
  -[AMSMediaTaskTypeConfig .cxx_destruct]
  -[AMSMediaTaskTypeConfig type]
  -[AMSMediaTaskTypeConfig hostBagKey]
  -[AMSMediaTaskTypeConfig includePlatform]
  -[AMSMediaTaskTypeConfig initWithType:typeString:hostBagKey:includePlatform:]
  -[AMSMediaTaskTypeConfig typeString]


AMSMediaTaskURLBuilder : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *additionalPlatforms
 @property  NSDictionary *additionalQueryParams
 @property  <AMSBagProtocol> *bag
 @property  NSArray *bundleIdentifiers
 @property  BOOL charts
 @property  NSString *clientVersion
 @property  AMSMediaTaskTypeConfig *config
 @property  NSDictionary *filters
 @property  NSArray *includedResultKeys
 @property  NSArray *itemIdentifiers
 @property  NSString *logKey
 @property  NSString *searchTerm

  // instance methods
  -[AMSMediaTaskURLBuilder searchTerm]
  -[AMSMediaTaskURLBuilder setSearchTerm:]
  -[AMSMediaTaskURLBuilder setFilters:]
  -[AMSMediaTaskURLBuilder itemIdentifiers]
  -[AMSMediaTaskURLBuilder setLogKey:]
  -[AMSMediaTaskURLBuilder charts]
  -[AMSMediaTaskURLBuilder logKey]
  -[AMSMediaTaskURLBuilder build]
  -[AMSMediaTaskURLBuilder bundleIdentifiers]
  -[AMSMediaTaskURLBuilder setItemIdentifiers:]
  -[AMSMediaTaskURLBuilder .cxx_destruct]
  -[AMSMediaTaskURLBuilder config]
  -[AMSMediaTaskURLBuilder filters]
  -[AMSMediaTaskURLBuilder clientVersion]
  -[AMSMediaTaskURLBuilder bag]
  -[AMSMediaTaskURLBuilder _hostPromise]
  -[AMSMediaTaskURLBuilder setCharts:]
  -[AMSMediaTaskURLBuilder initWithConfig:clientVersion:bag:]
  -[AMSMediaTaskURLBuilder additionalPlatforms]
  -[AMSMediaTaskURLBuilder setAdditionalPlatforms:]
  -[AMSMediaTaskURLBuilder additionalQueryParams]
  -[AMSMediaTaskURLBuilder setAdditionalQueryParams:]
  -[AMSMediaTaskURLBuilder setBundleIdentifiers:]
  -[AMSMediaTaskURLBuilder includedResultKeys]
  -[AMSMediaTaskURLBuilder setIncludedResultKeys:]
  -[AMSMediaTaskURLBuilder _verifyConfiguration]
  -[AMSMediaTaskURLBuilder _pathPromise]
  -[AMSMediaTaskURLBuilder _addBundleIdentifiers:]
  -[AMSMediaTaskURLBuilder _addItemIdentifiers:]
  -[AMSMediaTaskURLBuilder _addSearchTerm:]
  -[AMSMediaTaskURLBuilder _devicePlatform]
  -[AMSMediaTaskURLBuilder _queryItems]
  -[AMSMediaTaskURLBuilder _addCharts:]


AMSMediaToken : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDate *expirationDate
 @property  double lifetime
 @property  NSString *tokenString
 @property  BOOL valid

  // class methods
  +[AMSMediaToken supportsSecureCoding]

  // instance methods
  -[AMSMediaToken willExpireWithin:]
  -[AMSMediaToken initWithString:expirationDate:lifetime:]
  -[AMSMediaToken .cxx_destruct]
  -[AMSMediaToken encodeWithCoder:]
  -[AMSMediaToken isExpired]
  -[AMSMediaToken invalidCopy]
  -[AMSMediaToken lifetime]
  -[AMSMediaToken isValid]
  -[AMSMediaToken initWithString:expirationDate:lifetime:valid:]
  -[AMSMediaToken isEqual:]
  -[AMSMediaToken expirationDate]
  -[AMSMediaToken tokenString]
  -[AMSMediaToken percentageOfLifetimeRemaining]
  -[AMSMediaToken initWithCoder:]


AMSMediaTokenService : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer_Project, AMSBagConsumer, AMSMediaTokenServiceProtocol>
 @property  AMSMediaToken *cachedMediaToken
 @property  AMSMediaTokenServiceThrottler *throttler
 @property  NSObject<OS_dispatch_queue> *tokenFetchQueue
 @property  AMSMediaTokenServiceStore *tokenStore
 @property  BOOL enabled
 @property  double refreshPercentage
 @property  double refreshTime
 @property  BOOL URLKnownToBeTrusted
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSString *clientIdentifier
 @property  AMSProcessInfo *clientInfo
 @property  NSString *keychainAccessGroup
 @property  AMSURLSession *session
 @property  NSString *clientVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMediaTokenService createBagForSubProfile]
  +[AMSMediaTokenService bagKeySet]
  +[AMSMediaTokenService bagSubProfileVersion]
  +[AMSMediaTokenService addRequiredBagKeysToAggregator:]
  +[AMSMediaTokenService bagSubProfile]

  // instance methods
  -[AMSMediaTokenService throttler]
  -[AMSMediaTokenService setSession:]
  -[AMSMediaTokenService clientIdentifier]
  -[AMSMediaTokenService session]
  -[AMSMediaTokenService setAccount:]
  -[AMSMediaTokenService refreshTime]
  -[AMSMediaTokenService account]
  -[AMSMediaTokenService setCachedMediaToken:]
  -[AMSMediaTokenService .cxx_destruct]
  -[AMSMediaTokenService _shouldRefreshMediaToken:]
  -[AMSMediaTokenService keychainAccessGroup]
  -[AMSMediaTokenService fetchMediaToken]
  -[AMSMediaTokenService invalidateMediaToken]
  -[AMSMediaTokenService setRefreshPercentage:]
  -[AMSMediaTokenService _fetchBagProperties]
  -[AMSMediaTokenService tokenFetchQueue]
  -[AMSMediaTokenService clientVersion]
  -[AMSMediaTokenService setBag:]
  -[AMSMediaTokenService _refreshMediaTokenIfNeeded:]
  -[AMSMediaTokenService bag]
  -[AMSMediaTokenService isEnabled]
  -[AMSMediaTokenService initWithClientIdentifier:clientVersion:bag:]
  -[AMSMediaTokenService cachedMediaToken]
  -[AMSMediaTokenService clientInfo]
  -[AMSMediaTokenService initWithClientIdentifier:bag:]
  -[AMSMediaTokenService setEnabled:]
  -[AMSMediaTokenService setClientInfo:]
  -[AMSMediaTokenService _fetchToken]
  -[AMSMediaTokenService URLKnownToBeTrusted]
  -[AMSMediaTokenService initWithClientIdentifier:keychainAccessGroup:bag:]
  -[AMSMediaTokenService setRefreshTime:]
  -[AMSMediaTokenService setURLKnownToBeTrusted:]
  -[AMSMediaTokenService _tokenRequestWithError:]
  -[AMSMediaTokenService tokenStore]
  -[AMSMediaTokenService setKeychainAccessGroup:]
  -[AMSMediaTokenService refreshPercentage]
  -[AMSMediaTokenService _shouldReturnMediaToken:]


AMSMediaTokenServiceDeserializer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSMediaTokenServiceDeserializer _deserializeMediaTokenDictionary:]
  +[AMSMediaTokenServiceDeserializer _correctPayload:]
  +[AMSMediaTokenServiceDeserializer mediaTokenFromDictionary:error:]


AMSMediaTokenServiceKeychainStore : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *clientIdentifier
 @property  NSString *keychainAccessGroup

  // instance methods
  -[AMSMediaTokenServiceKeychainStore clientIdentifier]
  -[AMSMediaTokenServiceKeychainStore .cxx_destruct]
  -[AMSMediaTokenServiceKeychainStore keychainAccessGroup]
  -[AMSMediaTokenServiceKeychainStore _copyKeychainQuery]
  -[AMSMediaTokenServiceKeychainStore _removeTokenFromKeychain]
  -[AMSMediaTokenServiceKeychainStore initWithClientIdentifier:keychainAccessGroup:]
  -[AMSMediaTokenServiceKeychainStore retrieveToken]
  -[AMSMediaTokenServiceKeychainStore storeToken:]
  -[AMSMediaTokenServiceKeychainStore setKeychainAccessGroup:]


AMSMediaTokenServiceStore : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSMediaToken *memoryMediaToken
 @property  AMSMediaTokenServiceKeychainStore *keychainStore
 @property  AMSMediaTokenServiceUserDefaultsStore *userDefaultsStore
 @property  NSString *clientIdentifier
 @property  NSString *keychainAccessGroup

  // instance methods
  -[AMSMediaTokenServiceStore setKeychainStore:]
  -[AMSMediaTokenServiceStore setUserDefaultsStore:]
  -[AMSMediaTokenServiceStore clientIdentifier]
  -[AMSMediaTokenServiceStore _hasAppleGroupEnabled]
  -[AMSMediaTokenServiceStore _setupKeychainNotifications]
  -[AMSMediaTokenServiceStore _mediaTokenChanged]
  -[AMSMediaTokenServiceStore dealloc]
  -[AMSMediaTokenServiceStore userDefaultsStore]
  -[AMSMediaTokenServiceStore .cxx_destruct]
  -[AMSMediaTokenServiceStore _postMediaTokenChangedNotification]
  -[AMSMediaTokenServiceStore _teardownKeychainNotifications]
  -[AMSMediaTokenServiceStore keychainAccessGroup]
  -[AMSMediaTokenServiceStore keychainStore]
  -[AMSMediaTokenServiceStore _mediaTokenChangedNotificationName]
  -[AMSMediaTokenServiceStore _keychainAccessGroup]
  -[AMSMediaTokenServiceStore initWithClientIdentifier:keychainAccessGroup:]
  -[AMSMediaTokenServiceStore memoryMediaToken]
  -[AMSMediaTokenServiceStore setMemoryMediaToken:]
  -[AMSMediaTokenServiceStore retrieveToken]
  -[AMSMediaTokenServiceStore storeToken:]
  -[AMSMediaTokenServiceStore setKeychainAccessGroup:]


AMSMediaTokenServiceThrottler : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long attemptNumber
 @property  NSDate *throttleDate
 @property  double baseSleepInterval
 @property  double maxSleepInterval

  // instance methods
  -[AMSMediaTokenServiceThrottler shouldThrottle]
  -[AMSMediaTokenServiceThrottler baseSleepInterval]
  -[AMSMediaTokenServiceThrottler setAttemptNumber:]
  -[AMSMediaTokenServiceThrottler throttle]
  -[AMSMediaTokenServiceThrottler .cxx_destruct]
  -[AMSMediaTokenServiceThrottler initWithBaseSleepInterval:maxSleepInterval:]
  -[AMSMediaTokenServiceThrottler _calculateThrottleInterval]
  -[AMSMediaTokenServiceThrottler attemptNumber]
  -[AMSMediaTokenServiceThrottler reset]
  -[AMSMediaTokenServiceThrottler maxSleepInterval]
  -[AMSMediaTokenServiceThrottler setMaxSleepInterval:]
  -[AMSMediaTokenServiceThrottler setThrottleDate:]
  -[AMSMediaTokenServiceThrottler setBaseSleepInterval:]
  -[AMSMediaTokenServiceThrottler throttleDate]


AMSMediaTokenServiceUserDefaultsStore : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *clientIdentifier

  // instance methods
  -[AMSMediaTokenServiceUserDefaultsStore clientIdentifier]
  -[AMSMediaTokenServiceUserDefaultsStore .cxx_destruct]
  -[AMSMediaTokenServiceUserDefaultsStore retrieveToken]
  -[AMSMediaTokenServiceUserDefaultsStore storeToken:]
  -[AMSMediaTokenServiceUserDefaultsStore initWithClientIdentifier:]


AMSMediaURLBuilderUtility : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSMediaURLBuilderUtility devicePlatform]


AMSMediaVideo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *URL
 @property  NSDictionary *videoDictionary

  // instance methods
  -[AMSMediaVideo .cxx_destruct]
  -[AMSMediaVideo name]
  -[AMSMediaVideo initWithDictionary:]
  -[AMSMediaVideo videoDictionary]
  -[AMSMediaVideo URL]


AMSMemoryPressure : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSMemoryPressure subscribe:]
  +[AMSMemoryPressure initialize]
  +[AMSMemoryPressure lastKnownStatus]
  +[AMSMemoryPressure observable]
  +[AMSMemoryPressure _memoryPressureStatusForMemoryPressure:]
  +[AMSMemoryPressure unsubscribe:]


AMSMescal : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMescal signatureFromData:type:bagContract:error:]
  +[AMSMescal signatureUsingRequest:type:bagContract:logKey:error:]
  +[AMSMescal signatureFromData:type:bagContract:logKey:error:]
  +[AMSMescal createBagForSubProfile]
  +[AMSMescal verifyTask:data:type:bag:error:]
  +[AMSMescal _matchSignSapURL:bagDictionary:error:]
  +[AMSMescal verifyTask:data:type:bagContract:error:]
  +[AMSMescal primeTheConnectionWithContract:logKey:error:]
  +[AMSMescal bagKeySet]
  +[AMSMescal _matchSignedActions:withURL:error:]
  +[AMSMescal _signedActionDataFromRequest:policy:]
  +[AMSMescal signatureFromData:type:bag:error:]
  +[AMSMescal verifyTask:data:type:bagContract:logKey:error:]
  +[AMSMescal signatureUsingRequest:type:bag:error:]
  +[AMSMescal bagSubProfileVersion]
  +[AMSMescal signatureUsingRequest:type:bagContract:error:]
  +[AMSMescal shouldReprimeConnectionWithResult:]
  +[AMSMescal addRequiredBagKeysToAggregator:]
  +[AMSMescal primeTheConnectionWithBag:error:]
  +[AMSMescal primeTheConnectionWithContract:error:]
  +[AMSMescal bagSubProfile]
  +[AMSMescal _DAAPActionsForURLBagActions:]


AMSMescalFairPlay : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL complete

  // instance methods
  -[AMSMescalFairPlay signData:error:]
  -[AMSMescalFairPlay isComplete]
  -[AMSMescalFairPlay initWithMescalType:]
  -[AMSMescalFairPlay dealloc]
  -[AMSMescalFairPlay verifyPrimeSignature:error:]
  -[AMSMescalFairPlay _dataWithFairPlayBytes:length:]
  -[AMSMescalFairPlay _teardownSession]
  -[AMSMescalFairPlay verifySignature:forData:error:]
  -[AMSMescalFairPlay primingSignatureForData:error:]
  -[AMSMescalFairPlay exchangeData:error:]


AMSMescalSession : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL primed

  // class methods
  +[AMSMescalSession sessionWithType:]

  // instance methods
  -[AMSMescalSession verifyData:withSignature:bag:error:]
  -[AMSMescalSession setPrimed:]
  -[AMSMescalSession primed]
  -[AMSMescalSession initWithType:]
  -[AMSMescalSession .cxx_destruct]
  -[AMSMescalSession _postExchangeData:bag:error:]
  -[AMSMescalSession _cachedCertPath]
  -[AMSMescalSession _resetSession]
  -[AMSMescalSession _cachedCertData]
  -[AMSMescalSession _loadCertificateDataWithBag:error:]
  -[AMSMescalSession _cacheCertData:expiration:]
  -[AMSMescalSession _verifyPrimeResponse:error:]
  -[AMSMescalSession _establishContextWithBag:error:]
  -[AMSMescalSession signData:bag:error:]
  -[AMSMescalSession _shouldRetryFairPlayForError:]
  -[AMSMescalSession primeTheConnectionWithBag:error:]
  -[AMSMescalSession _verifyEntitlements]


AMSMetrics : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer_Project, AMSBagConsumer>
 @property  NSObject<OS_dispatch_queue> *completionQueue
 @property  <AMSMetricsFlushStrategy> *currentFlushStrategy
 @property  AMSMetricsDatabaseDataSource *databaseSource
 @property  long long destination
 @property  NSObject<OS_dispatch_queue> *engagementQueue
 @property  BOOL flushingDisabled
 @property  BOOL flushOnForeground
 @property  @? flushIntervalBlock
 @property  NSDate *flushIntervalStartTime
 @property  NSObject<OS_dispatch_queue> *flushQueue
 @property  <AMSMetricsBagContract> *bagContract
 @property  <AMSBagProtocol> *bag
 @property  NSString *containerId
 @property  long long eventCount
 @property  BOOL flushTimerEnabled
 @property  long long maxBatchSize
 @property  long long maxRequestCount
 @property  BOOL monitorsLifecycleEvents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMetrics createBagForSubProfile]
  +[AMSMetrics flushTimerEnabled]
  +[AMSMetrics internalInstanceUsingBag:]
  +[AMSMetrics bagKeySet]
  +[AMSMetrics sharedTimerQueue]
  +[AMSMetrics serverTimeFromTimeInterval:]
  +[AMSMetrics appAnalyticsAllowed]
  +[AMSMetrics diagnosticsSubmissionAllowed]
  +[AMSMetrics recordAppAnalyticsForEvent:bugType:]
  +[AMSMetrics disableBackgroundMetrics]
  +[AMSMetrics flushDelayEnabled]
  +[AMSMetrics setDisableBackgroundMetrics:]
  +[AMSMetrics setFlushDelayEnabled:]
  +[AMSMetrics serverTimeFromDate:]
  +[AMSMetrics timeIntervalFromServerTime:]
  +[AMSMetrics bagSubProfileVersion]
  +[AMSMetrics addRequiredBagKeysToAggregator:]
  +[AMSMetrics setFlushTimerEnabled:]
  +[AMSMetrics bagSubProfile]

  // instance methods
  -[AMSMetrics containerId]
  -[AMSMetrics setFlushQueue:]
  -[AMSMetrics maxBatchSize]
  -[AMSMetrics completionQueue]
  -[AMSMetrics setCompletionQueue:]
  -[AMSMetrics setBagContract:]
  -[AMSMetrics flushOnForeground]
  -[AMSMetrics setMaxBatchSize:]
  -[AMSMetrics destination]
  -[AMSMetrics _handleFlushIntervalWithStyle:]
  -[AMSMetrics _flushIntervalInvalidate]
  -[AMSMetrics _beginFlushIntervalWithStyle:events:]
  -[AMSMetrics _flushIntervalForEvents:]
  -[AMSMetrics enqueueAsyncEvents:]
  -[AMSMetrics flush]
  -[AMSMetrics dealloc]
  -[AMSMetrics setMonitorsLifecycleEvents:]
  -[AMSMetrics bagContract]
  -[AMSMetrics .cxx_destruct]
  -[AMSMetrics flushQueue]
  -[AMSMetrics _determineFlushStrategyWithDataSource:topic:]
  -[AMSMetrics initWithContainerId:bagContract:]
  -[AMSMetrics enqueueEvents:]
  -[AMSMetrics enqueueEvent:]
  -[AMSMetrics setFlushOnForeground:]
  -[AMSMetrics initWithContainerID:bag:]
  -[AMSMetrics flushingDisabled]
  -[AMSMetrics setDatabaseSource:]
  -[AMSMetrics engagementQueue]
  -[AMSMetrics flushTimerEnabled]
  -[AMSMetrics setBag:]
  -[AMSMetrics _enqueueFigaroEvents:]
  -[AMSMetrics bag]
  -[AMSMetrics setEngagementQueue:]
  -[AMSMetrics cancel]
  -[AMSMetrics monitorsLifecycleEvents]
  -[AMSMetrics _applicationWillEnterForeground]
  -[AMSMetrics setFlushIntervalBlock:]
  -[AMSMetrics databaseSource]
  -[AMSMetrics setDestination:]
  -[AMSMetrics setFlushingDisabled:]
  -[AMSMetrics flushEvents:]
  -[AMSMetrics setMaxRequestCount:]
  -[AMSMetrics setCurrentFlushStrategy:]
  -[AMSMetrics eventCount]
  -[AMSMetrics flushTopic:]
  -[AMSMetrics setFlushIntervalStartTime:]
  -[AMSMetrics setFlushTimerEnabled:]
  -[AMSMetrics dropEvents]
  -[AMSMetrics _scheduledFlushAllowedForStyle:]
  -[AMSMetrics flushIntervalStartTime]
  -[AMSMetrics _flushDataSource:topic:]
  -[AMSMetrics currentFlushStrategy]
  -[AMSMetrics maxRequestCount]
  -[AMSMetrics flushIntervalBlock]


AMSMetricsClientIdentifier : AMSMetricsIdentifier

AMSMetricsDatabase : NSObject /usr/lib/libSystem.B.dylib <AMSSQLiteConnectionDelegate>
 @property  AMSSQLiteConnection *connection
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  long long keepAliveCount
 @property  NSString *containerId
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMetricsDatabase sharedDatabaseWithContainerId:]

  // instance methods
  -[AMSMetricsDatabase internalQueue]
  -[AMSMetricsDatabase setInternalQueue:]
  -[AMSMetricsDatabase containerId]
  -[AMSMetricsDatabase _performTransaction:]
  -[AMSMetricsDatabase dealloc]
  -[AMSMetricsDatabase identifierForKey:account:error:]
  -[AMSMetricsDatabase cleanupInvalidIdentifiersWithError:]
  -[AMSMetricsDatabase unlockAllEventsWithKey:error:]
  -[AMSMetricsDatabase .cxx_destruct]
  -[AMSMetricsDatabase close]
  -[AMSMetricsDatabase _lockedById]
  -[AMSMetricsDatabase setConnection:]
  -[AMSMetricsDatabase removeIdentifiersForAccount:error:]
  -[AMSMetricsDatabase keepAliveCount]
  -[AMSMetricsDatabase setIdentifier:forKey:account:duration:error:]
  -[AMSMetricsDatabase dropEvents:error:]
  -[AMSMetricsDatabase enumerateEventsWithTopic:lockKey:objectBlock:]
  -[AMSMetricsDatabase setKeepAliveCount:]
  -[AMSMetricsDatabase countAllEventsWithLockKey:error:]
  -[AMSMetricsDatabase connectionNeedsResetForCorruption:]
  -[AMSMetricsDatabase unlockEvents:error:]
  -[AMSMetricsDatabase dropAllEventsWithLockKey:error:]
  -[AMSMetricsDatabase connection]
  -[AMSMetricsDatabase setContainerId:]
  -[AMSMetricsDatabase insertEvents:error:]
  -[AMSMetricsDatabase lockAllEventsWithError:]
  -[AMSMetricsDatabase initWithContainerId:]


AMSMetricsDatabaseDataSource : NSObject /usr/lib/libSystem.B.dylib <AMSMetricsDataSource>
 @property  AMSMetricsDatabase *database
 @property  NSString *currentLockKey
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSString *containerIdentifier
 @property  long long eventCount

  // instance methods
  -[AMSMetricsDatabaseDataSource currentLockKey]
  -[AMSMetricsDatabaseDataSource containerIdentifier]
  -[AMSMetricsDatabaseDataSource dealloc]
  -[AMSMetricsDatabaseDataSource .cxx_destruct]
  -[AMSMetricsDatabaseDataSource enqueueEvents:]
  -[AMSMetricsDatabaseDataSource database]
  -[AMSMetricsDatabaseDataSource setQueue:]
  -[AMSMetricsDatabaseDataSource skipEvents:error:]
  -[AMSMetricsDatabaseDataSource removeEvents:error:]
  -[AMSMetricsDatabaseDataSource cancel]
  -[AMSMetricsDatabaseDataSource queue]
  -[AMSMetricsDatabaseDataSource removeAllEvents]
  -[AMSMetricsDatabaseDataSource initWithContainerIdentifier:]
  -[AMSMetricsDatabaseDataSource willStartBatchingWithLogKey:error:]
  -[AMSMetricsDatabaseDataSource eventCount]
  -[AMSMetricsDatabaseDataSource setCurrentLockKey:]
  -[AMSMetricsDatabaseDataSource enumerateSortedEventsForTopic:block:]
  -[AMSMetricsDatabaseDataSource didFinishBatching]


AMSMetricsDatabaseSchema : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSMetricsDatabaseSchema _containerURLForContainerId:]
  +[AMSMetricsDatabaseSchema migrateVersion3to4WithMigration:]
  +[AMSMetricsDatabaseSchema createOrUpdateSchemaUsingConnection:]
  +[AMSMetricsDatabaseSchema migrateVersion1to2WithMigration:]
  +[AMSMetricsDatabaseSchema migrateVersion0to1WithMigration:]
  +[AMSMetricsDatabaseSchema _addSkipBackupAttribute:forURL:]
  +[AMSMetricsDatabaseSchema removeDatabaseForContainerId:]
  +[AMSMetricsDatabaseSchema databasePathForContainerId:]
  +[AMSMetricsDatabaseSchema migrateVersion2to3WithMigration:]
  +[AMSMetricsDatabaseSchema _applyProtectionClassForDirectoryAtURL:]


AMSMetricsEvent : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSString *clientEventID
 @property  NSDictionary *databaseEventBody
 @property  NSNumber *databasePID
 @property  BOOL engagementEvent
 @property  NSDictionary *dictionaryForPosting
 @property  BOOL checkDiagnosticsAndUsageSetting
 @property  NSString *diagnosticsSubmissionBugType
 @property  BOOL preventSampling
 @property  NSMutableDictionary *underlyingDictionary
 @property  ACAccount *account
 @property  BOOL anonymous
 @property  NSString *app
 @property  NSString *appVersion
 @property  NSNumber *baseVersion
 @property  NSString *canaryIdentifier
 @property  NSString *clientIdentifier
 @property  NSNumber *eventTime
 @property  NSString *eventType
 @property  NSNumber *eventVersion
 @property  NSString *osVersion
 @property  NSNumber *timezoneOffset
 @property  NSString *topic

  // class methods
  +[AMSMetricsEvent _isValidJSONProperty:]
  +[AMSMetricsEvent sanitizedObject:]
  +[AMSMetricsEvent metricsAuthenticationAttemptDictionaryForAuthKitError:]
  +[AMSMetricsEvent _topicFromAuthenticationContext:]
  +[AMSMetricsEvent _buyParamsFromString:]
  +[AMSMetricsEvent _buyParamsStringFromAuthenticationContext:]
  +[AMSMetricsEvent createEventFromAuthenticationContext:error:]

  // instance methods
  -[AMSMetricsEvent setAppVersion:]
  -[AMSMetricsEvent copyWithZone:]
  -[AMSMetricsEvent internalQueue]
  -[AMSMetricsEvent setOsVersion:]
  -[AMSMetricsEvent topic]
  -[AMSMetricsEvent osVersion]
  -[AMSMetricsEvent appVersion]
  -[AMSMetricsEvent setEventType:]
  -[AMSMetricsEvent setTopic:]
  -[AMSMetricsEvent setEventTime:]
  -[AMSMetricsEvent clientIdentifier]
  -[AMSMetricsEvent app]
  -[AMSMetricsEvent setAnonymous:]
  -[AMSMetricsEvent setAccount:]
  -[AMSMetricsEvent account]
  -[AMSMetricsEvent .cxx_destruct]
  -[AMSMetricsEvent underlyingDictionary]
  -[AMSMetricsEvent initWithUnderlyingDictionary:]
  -[AMSMetricsEvent setCanaryIdentifier:]
  -[AMSMetricsEvent eventType]
  -[AMSMetricsEvent setBaseVersion:]
  -[AMSMetricsEvent eventTime]
  -[AMSMetricsEvent addPropertiesWithDictionary:]
  -[AMSMetricsEvent engagementEvent]
  -[AMSMetricsEvent dictionaryForPosting]
  -[AMSMetricsEvent clientEventID]
  -[AMSMetricsEvent setClientEventID:]
  -[AMSMetricsEvent diagnosticsSubmissionBugType]
  -[AMSMetricsEvent checkDiagnosticsAndUsageSetting]
  -[AMSMetricsEvent setDatabasePID:]
  -[AMSMetricsEvent initWithDatabaseEventBody:]
  -[AMSMetricsEvent databaseEventBody]
  -[AMSMetricsEvent _setProperty:forBodyKey:clientOnly:]
  -[AMSMetricsEvent propertyForBodyKey:]
  -[AMSMetricsEvent _propertyForBodyKey:clientOnly:]
  -[AMSMetricsEvent initForEngagement]
  -[AMSMetricsEvent eventVersion]
  -[AMSMetricsEvent preventSampling]
  -[AMSMetricsEvent timezoneOffset]
  -[AMSMetricsEvent setCheckDiagnosticsAndUsageSetting:]
  -[AMSMetricsEvent setEventVersion:]
  -[AMSMetricsEvent setDiagnosticsSubmissionBugType:]
  -[AMSMetricsEvent setPreventSampling:]
  -[AMSMetricsEvent setTimezoneOffset:]
  -[AMSMetricsEvent addClientIdentifier:]
  -[AMSMetricsEvent removePropertiesForKeys:]
  -[AMSMetricsEvent isAnonymous]
  -[AMSMetricsEvent setClientIdentifier:]
  -[AMSMetricsEvent canaryIdentifier]
  -[AMSMetricsEvent initWithTopic:]
  -[AMSMetricsEvent setProperty:forBodyKey:]
  -[AMSMetricsEvent baseVersion]
  -[AMSMetricsEvent setApp:]
  -[AMSMetricsEvent databasePID]


AMSMetricsFigaroBagConfguration : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *metricsDictionary
 @property  NSArray *overrides
 @property  AMSMetricsFigaroEventModifier *defaultModifier
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[AMSMetricsFigaroBagConfguration configurationWithBag:error:]

  // instance methods
  -[AMSMetricsFigaroBagConfguration .cxx_destruct]
  -[AMSMetricsFigaroBagConfguration metricsDictionary]
  -[AMSMetricsFigaroBagConfguration queue]
  -[AMSMetricsFigaroBagConfguration overrides]
  -[AMSMetricsFigaroBagConfguration _generateModifiersIfNeeded]
  -[AMSMetricsFigaroBagConfguration modifierForEvent:]
  -[AMSMetricsFigaroBagConfguration prepareForFlush]
  -[AMSMetricsFigaroBagConfguration initWithMetricsDictionary:]
  -[AMSMetricsFigaroBagConfguration defaultModifier]


AMSMetricsFigaroEventModifier : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *fieldFilters
 @property  NSDictionary *metricsDictionary
 @property  NSDictionary *overrideDictionary
 @property  NSString *sampleSessionKey
 @property  double flushInterval

  // instance methods
  -[AMSMetricsFigaroEventModifier _overridePropertyForKey:]
  -[AMSMetricsFigaroEventModifier fieldFilters]
  -[AMSMetricsFigaroEventModifier .cxx_destruct]
  -[AMSMetricsFigaroEventModifier metricsDictionary]
  -[AMSMetricsFigaroEventModifier sampleSessionKey]
  -[AMSMetricsFigaroEventModifier flushInterval]
  -[AMSMetricsFigaroEventModifier _shouldSampleEvent:]
  -[AMSMetricsFigaroEventModifier overrideDictionary]
  -[AMSMetricsFigaroEventModifier prepareEvent:]
  -[AMSMetricsFigaroEventModifier shouldDropEvent:]
  -[AMSMetricsFigaroEventModifier reportingURLForEvent:]
  -[AMSMetricsFigaroEventModifier shouldSkipEvent:]
  -[AMSMetricsFigaroEventModifier initWithMetricsDictionary:overrideDictionary:]
  -[AMSMetricsFigaroEventModifier _createSampleSessionKey]
  -[AMSMetricsFigaroEventModifier _fieldFiltersFromOverrides:]
  -[AMSMetricsFigaroEventModifier fieldFiltersMatchEvent:]


AMSMetricsBatch : NSObject /usr/lib/libSystem.B.dylib
 @property  ACAccount *account
 @property  BOOL anonymous
 @property  NSString *canaryIdentifier
 @property  BOOL containsLoadURL
 @property  NSArray *droppedEvents
 @property  NSArray *eventDictionaries
 @property  NSArray *events
 @property  NSURL *reportURL
 @property  NSArray *skippedEvents

  // instance methods
  -[AMSMetricsBatch events]
  -[AMSMetricsBatch setAnonymous:]
  -[AMSMetricsBatch setDroppedEvents:]
  -[AMSMetricsBatch setAccount:]
  -[AMSMetricsBatch account]
  -[AMSMetricsBatch .cxx_destruct]
  -[AMSMetricsBatch setContainsLoadURL:]
  -[AMSMetricsBatch droppedEvents]
  -[AMSMetricsBatch setCanaryIdentifier:]
  -[AMSMetricsBatch setEvents:]
  -[AMSMetricsBatch setReportURL:]
  -[AMSMetricsBatch containsLoadURL]
  -[AMSMetricsBatch setSkippedEvents:]
  -[AMSMetricsBatch reportURL]
  -[AMSMetricsBatch anonymous]
  -[AMSMetricsBatch setEventDictionaries:]
  -[AMSMetricsBatch skippedEvents]
  -[AMSMetricsBatch eventDictionaries]
  -[AMSMetricsBatch canaryIdentifier]


AMSMetricsFigaroFlushTask : AMSTask <AMSMetricsFlushStrategy>
 @property  AMSPromise *currentCancellablePromise
 @property  int requestCount
 @property  AMSURLSession *URLSession
 @property  <AMSBagProtocol> *bag
 @property  <AMSMetricsDataSource> *dataSource
 @property  long long maxRequestCount
 @property  long long maxBatchSize
 @property  NSString *topic
 @property  BOOL cancelled

  // instance methods
  -[AMSMetricsFigaroFlushTask URLSession]
  -[AMSMetricsFigaroFlushTask maxBatchSize]
  -[AMSMetricsFigaroFlushTask setRequestCount:]
  -[AMSMetricsFigaroFlushTask topic]
  -[AMSMetricsFigaroFlushTask setMaxBatchSize:]
  -[AMSMetricsFigaroFlushTask setDataSource:]
  -[AMSMetricsFigaroFlushTask setTopic:]
  -[AMSMetricsFigaroFlushTask .cxx_destruct]
  -[AMSMetricsFigaroFlushTask initWithDataSource:bag:]
  -[AMSMetricsFigaroFlushTask setBag:]
  -[AMSMetricsFigaroFlushTask bag]
  -[AMSMetricsFigaroFlushTask cancel]
  -[AMSMetricsFigaroFlushTask cancelled]
  -[AMSMetricsFigaroFlushTask performFlush]
  -[AMSMetricsFigaroFlushTask dataSource]
  -[AMSMetricsFigaroFlushTask requestCount]
  -[AMSMetricsFigaroFlushTask currentCancellablePromise]
  -[AMSMetricsFigaroFlushTask _shouldClearEventsDespiteError:result:]
  -[AMSMetricsFigaroFlushTask _nextBatchWithConfig:error:]
  -[AMSMetricsFigaroFlushTask setCurrentCancellablePromise:]
  -[AMSMetricsFigaroFlushTask setMaxRequestCount:]
  -[AMSMetricsFigaroFlushTask _postBatch:error:]
  -[AMSMetricsFigaroFlushTask _mescalSignatureWithBodyData:error:]
  -[AMSMetricsFigaroFlushTask maxRequestCount]


AMSMetricsIdentifier : NSObject /usr/lib/libSystem.B.dylib
 @property  ACAccount *account
 @property  AMSProcessInfo *clientInfo
 @property  double duration

  // class methods
  +[AMSMetricsIdentifier _sharedQueue]
  +[AMSMetricsIdentifier _database]
  +[AMSMetricsIdentifier _accountIdentifierForAccount:]
  +[AMSMetricsIdentifier cleanupIdentifiers]
  +[AMSMetricsIdentifier removeIdentifiersForAccount:]

  // instance methods
  -[AMSMetricsIdentifier init]
  -[AMSMetricsIdentifier setAccount:]
  -[AMSMetricsIdentifier account]
  -[AMSMetricsIdentifier .cxx_destruct]
  -[AMSMetricsIdentifier clientInfo]
  -[AMSMetricsIdentifier _generateCacheKey]
  -[AMSMetricsIdentifier generateIdentifier]
  -[AMSMetricsIdentifier generateEventFields]
  -[AMSMetricsIdentifier setClientInfo:]
  -[AMSMetricsIdentifier setDuration:]
  -[AMSMetricsIdentifier duration]


AMSMetricsLoadURLContext : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *decodedResponseBody
 @property  <AMSBagProtocol> *bag
 @property  NSError *error
 @property  AMSProcessInfo *processInfo
 @property  NSData *responseBody
 @property  NSURLSession *session
 @property  NSURLSessionTask *task
 @property  NSURLSessionTaskMetrics *taskMetrics

  // instance methods
  -[AMSMetricsLoadURLContext taskMetrics]
  -[AMSMetricsLoadURLContext setBagContract:]
  -[AMSMetricsLoadURLContext setSession:]
  -[AMSMetricsLoadURLContext setDecodedResponseBody:]
  -[AMSMetricsLoadURLContext processInfo]
  -[AMSMetricsLoadURLContext session]
  -[AMSMetricsLoadURLContext setError:]
  -[AMSMetricsLoadURLContext setTaskMetrics:]
  -[AMSMetricsLoadURLContext bagContract]
  -[AMSMetricsLoadURLContext .cxx_destruct]
  -[AMSMetricsLoadURLContext setProcessInfo:]
  -[AMSMetricsLoadURLContext initWithTaskInfo:serverPayload:]
  -[AMSMetricsLoadURLContext setBag:]
  -[AMSMetricsLoadURLContext bag]
  -[AMSMetricsLoadURLContext initWithTask:metrics:]
  -[AMSMetricsLoadURLContext error]
  -[AMSMetricsLoadURLContext setResponseBody:]
  -[AMSMetricsLoadURLContext setTask:]
  -[AMSMetricsLoadURLContext decodedResponseBody]
  -[AMSMetricsLoadURLContext task]
  -[AMSMetricsLoadURLContext responseBody]


AMSMetricsLoadURLEvent : AMSMetricsEvent
 @property  NSString *appleTimingApp
 @property  BOOL apsRelayAttempted
 @property  BOOL apsRelayDidFallback
 @property  BOOL apsRelaySucceeded
 @property  NSString *clientCorrelationKey
 @property  NSString *clientError
 @property  double connectionEndTime
 @property  NSString *connectionInterface
 @property  BOOL connectionReused
 @property  unsigned long connectionStartNStatRXBytes
 @property  unsigned long connectionStartNStatTXBytes
 @property  unsigned long connectionStopNStatRXBytes
 @property  unsigned long connectionStopNStatTXBytes
 @property  double connectionStartTime
 @property  NSString *connectionType
 @property  double domainLookupEndTime
 @property  double domainLookupStartTime
 @property  NSString *DNSServers
 @property  NSString *edgeNodeCacheStatus
 @property  NSString *environmentDataCenter
 @property  double fetchStartTime
 @property  BOOL cachedResponse
 @property  NSArray *networkQualityReports
 @property  NSString *originalApp
 @property  NSString *radioType
 @property  NSString *radioTechnology
 @property  unsigned long redirectCount
 @property  double redirectEndTime
 @property  double redirectStartTime
 @property  unsigned long requestMessageSize
 @property  double requestStartTime
 @property  NSString *requestURL
 @property  NSString *resolvedIPAddress
 @property  NSString *responseDate
 @property  double responseEndTime
 @property  unsigned long responseMessageSize
 @property  double responseStartTime
 @property  double secureConnectionStartTime
 @property  long long statusCode
 @property  NSString *TIDState
 @property  BOOL TFOEnabled
 @property  BOOL TLSSessionTickets
 @property  NSString *wt
 @property  double xpSessionDuration
 @property  BOOL xpSamplingForced
 @property  double xpSamplingPercentageUsers
 @property  double xpSamplingPercentageCachedResponses
 @property  NSString *xxdc

  // class methods
  +[AMSMetricsLoadURLEvent _resolvedIPAddressFromTask:]
  +[AMSMetricsLoadURLEvent _randomDouble]
  +[AMSMetricsLoadURLEvent _timingDataMetricToServerTimeInterval:]
  +[AMSMetricsLoadURLEvent _fetchNetworkQualityReports]
  +[AMSMetricsLoadURLEvent _metricsDictionaryFromConfig:]
  +[AMSMetricsLoadURLEvent shouldCollectMetricsForContext:]
  +[AMSMetricsLoadURLEvent _DNSServerIPAddresses]

  // instance methods
  -[AMSMetricsLoadURLEvent setWt:]
  -[AMSMetricsLoadURLEvent wt]
  -[AMSMetricsLoadURLEvent connectionEndTime]
  -[AMSMetricsLoadURLEvent setConnectionStartTime:]
  -[AMSMetricsLoadURLEvent clientError]
  -[AMSMetricsLoadURLEvent setClientError:]
  -[AMSMetricsLoadURLEvent setRedirectEndTime:]
  -[AMSMetricsLoadURLEvent setXpSamplingPercentageUsers:]
  -[AMSMetricsLoadURLEvent setXpSamplingPercentageCachedResponses:]
  -[AMSMetricsLoadURLEvent connectionReused]
  -[AMSMetricsLoadURLEvent connectionType]
  -[AMSMetricsLoadURLEvent xpSamplingForced]
  -[AMSMetricsLoadURLEvent apsRelaySucceeded]
  -[AMSMetricsLoadURLEvent edgeNodeCacheStatus]
  -[AMSMetricsLoadURLEvent setConnectionType:]
  -[AMSMetricsLoadURLEvent connectionStopNStatRXBytes]
  -[AMSMetricsLoadURLEvent xpSessionDuration]
  -[AMSMetricsLoadURLEvent setApsRelayDidFallback:]
  -[AMSMetricsLoadURLEvent apsRelayDidFallback]
  -[AMSMetricsLoadURLEvent setXpSessionDuration:]
  -[AMSMetricsLoadURLEvent setDNSServers:]
  -[AMSMetricsLoadURLEvent initWithContext:]
  -[AMSMetricsLoadURLEvent setResponseDate:]
  -[AMSMetricsLoadURLEvent setResponseStartTime:]
  -[AMSMetricsLoadURLEvent xpSamplingPercentageUsers]
  -[AMSMetricsLoadURLEvent connectionStartTime]
  -[AMSMetricsLoadURLEvent originalApp]
  -[AMSMetricsLoadURLEvent responseEndTime]
  -[AMSMetricsLoadURLEvent setRequestStartTime:]
  -[AMSMetricsLoadURLEvent setApsRelayAttempted:]
  -[AMSMetricsLoadURLEvent radioType]
  -[AMSMetricsLoadURLEvent responseMessageSize]
  -[AMSMetricsLoadURLEvent setResolvedIPAddress:]
  -[AMSMetricsLoadURLEvent DNSServers]
  -[AMSMetricsLoadURLEvent setConnectionInterface:]
  -[AMSMetricsLoadURLEvent setSecureConnectionStartTime:]
  -[AMSMetricsLoadURLEvent setStatusCode:]
  -[AMSMetricsLoadURLEvent setTIDState:]
  -[AMSMetricsLoadURLEvent statusCode]
  -[AMSMetricsLoadURLEvent setConnectionReused:]
  -[AMSMetricsLoadURLEvent secureConnectionStartTime]
  -[AMSMetricsLoadURLEvent TFOEnabled]
  -[AMSMetricsLoadURLEvent networkQualityReports]
  -[AMSMetricsLoadURLEvent setResponseMessageSize:]
  -[AMSMetricsLoadURLEvent setConnectionStopNStatRXBytes:]
  -[AMSMetricsLoadURLEvent TIDState]
  -[AMSMetricsLoadURLEvent setRequestMessageSize:]
  -[AMSMetricsLoadURLEvent setClientCorrelationKey:]
  -[AMSMetricsLoadURLEvent setTLSSessionTickets:]
  -[AMSMetricsLoadURLEvent responseStartTime]
  -[AMSMetricsLoadURLEvent setDomainLookupEndTime:]
  -[AMSMetricsLoadURLEvent radioTechnology]
  -[AMSMetricsLoadURLEvent domainLookupStartTime]
  -[AMSMetricsLoadURLEvent redirectEndTime]
  -[AMSMetricsLoadURLEvent setDomainLookupStartTime:]
  -[AMSMetricsLoadURLEvent setOriginalApp:]
  -[AMSMetricsLoadURLEvent setRedirectStartTime:]
  -[AMSMetricsLoadURLEvent setNetworkQualityReports:]
  -[AMSMetricsLoadURLEvent setRadioType:]
  -[AMSMetricsLoadURLEvent setRequestURL:]
  -[AMSMetricsLoadURLEvent TLSSessionTickets]
  -[AMSMetricsLoadURLEvent domainLookupEndTime]
  -[AMSMetricsLoadURLEvent setEnvironmentDataCenter:]
  -[AMSMetricsLoadURLEvent redirectStartTime]
  -[AMSMetricsLoadURLEvent connectionStopNStatTXBytes]
  -[AMSMetricsLoadURLEvent requestMessageSize]
  -[AMSMetricsLoadURLEvent connectionStartNStatRXBytes]
  -[AMSMetricsLoadURLEvent cachedResponse]
  -[AMSMetricsLoadURLEvent xpSamplingPercentageCachedResponses]
  -[AMSMetricsLoadURLEvent setFetchStartTime:]
  -[AMSMetricsLoadURLEvent redirectCount]
  -[AMSMetricsLoadURLEvent setEdgeNodeCacheStatus:]
  -[AMSMetricsLoadURLEvent responseDate]
  -[AMSMetricsLoadURLEvent requestStartTime]
  -[AMSMetricsLoadURLEvent setRedirectCount:]
  -[AMSMetricsLoadURLEvent setRadioTechnology:]
  -[AMSMetricsLoadURLEvent connectionStartNStatTXBytes]
  -[AMSMetricsLoadURLEvent resolvedIPAddress]
  -[AMSMetricsLoadURLEvent appleTimingApp]
  -[AMSMetricsLoadURLEvent setConnectionEndTime:]
  -[AMSMetricsLoadURLEvent environmentDataCenter]
  -[AMSMetricsLoadURLEvent xxdc]
  -[AMSMetricsLoadURLEvent setAppleTimingApp:]
  -[AMSMetricsLoadURLEvent connectionInterface]
  -[AMSMetricsLoadURLEvent fetchStartTime]
  -[AMSMetricsLoadURLEvent _prepareEventWithContext:]
  -[AMSMetricsLoadURLEvent clientCorrelationKey]
  -[AMSMetricsLoadURLEvent setTFOEnabled:]
  -[AMSMetricsLoadURLEvent setConnectionStartNStatRXBytes:]
  -[AMSMetricsLoadURLEvent setCachedResponse:]
  -[AMSMetricsLoadURLEvent setResponseEndTime:]
  -[AMSMetricsLoadURLEvent setXpSamplingForced:]
  -[AMSMetricsLoadURLEvent apsRelayAttempted]
  -[AMSMetricsLoadURLEvent setConnectionStartNStatTXBytes:]
  -[AMSMetricsLoadURLEvent setXxdc:]
  -[AMSMetricsLoadURLEvent setApsRelaySucceeded:]
  -[AMSMetricsLoadURLEvent setConnectionStopNStatTXBytes:]
  -[AMSMetricsLoadURLEvent requestURL]


AMSMetricsMemoryDataSource : NSObject /usr/lib/libSystem.B.dylib <AMSMetricsDataSource>
 @property  NSMutableDictionary *batches

  // class methods
  +[AMSMetricsMemoryDataSource batchesFromEvents:]

  // instance methods
  -[AMSMetricsMemoryDataSource batches]
  -[AMSMetricsMemoryDataSource .cxx_destruct]
  -[AMSMetricsMemoryDataSource skipEvents:error:]
  -[AMSMetricsMemoryDataSource removeEvents:error:]
  -[AMSMetricsMemoryDataSource cancel]
  -[AMSMetricsMemoryDataSource willStartBatchingWithLogKey:error:]
  -[AMSMetricsMemoryDataSource initWithEvents:]
  -[AMSMetricsMemoryDataSource enumerateSortedEventsForTopic:block:]
  -[AMSMetricsMemoryDataSource didFinishBatching]
  -[AMSMetricsMemoryDataSource setBatches:]


AMSMockNetworkProxy : NSURLProtocol /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  AMSMockURLOverride *currentOverride

  // class methods
  +[AMSMockNetworkProxy addOverride:]
  +[AMSMockNetworkProxy _executedOverrides]
  +[AMSMockNetworkProxy _removeOverride:]
  +[AMSMockNetworkProxy registeredOverrides]
  +[AMSMockNetworkProxy executedOverrides]
  +[AMSMockNetworkProxy removeOverride:]
  +[AMSMockNetworkProxy _removeAllOverrides]
  +[AMSMockNetworkProxy canonicalRequestForRequest:]
  +[AMSMockNetworkProxy _sync:]
  +[AMSMockNetworkProxy _overrides]
  +[AMSMockNetworkProxy canInitWithRequest:]
  +[AMSMockNetworkProxy clearOverrides]

  // instance methods
  -[AMSMockNetworkProxy finishWithError:]
  -[AMSMockNetworkProxy sendResponse:]
  -[AMSMockNetworkProxy .cxx_destruct]
  -[AMSMockNetworkProxy stopLoading]
  -[AMSMockNetworkProxy startLoading]
  -[AMSMockNetworkProxy setCurrentOverride:]
  -[AMSMockNetworkProxy finishWithData:]
  -[AMSMockNetworkProxy currentOverride]
  -[AMSMockNetworkProxy performRedirectFromResponse:]


AMSMockPurchaseQueue : AMSPurchaseQueue
 @property  AMSMockURLOverride *mockURLOverride

  // instance methods
  -[AMSMockPurchaseQueue dealloc]
  -[AMSMockPurchaseQueue .cxx_destruct]
  -[AMSMockPurchaseQueue mockURLOverride]
  -[AMSMockPurchaseQueue initWithConfiguration:mockURLOverride:]
  -[AMSMockPurchaseQueue setMockURLOverride:]


AMSMockURLOverride : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableArray *comparators
 @property  AMSObservable *executedObservable
 @property  AMSMockURLResponse *response

  // class methods
  +[AMSMockURLOverride overrideWithHost:usingResponse:]
  +[AMSMockURLOverride overrideWithPathComponent:usingResponse:]
  +[AMSMockURLOverride overrideWithURLRegex:usingResponse:]

  // instance methods
  -[AMSMockURLOverride copyWithZone:]
  -[AMSMockURLOverride init]
  -[AMSMockURLOverride .cxx_destruct]
  -[AMSMockURLOverride shouldOverrideURLRequest:]
  -[AMSMockURLOverride executedObservable]
  -[AMSMockURLOverride withResponse:]
  -[AMSMockURLOverride comparators]
  -[AMSMockURLOverride withURLMatchingHost:]
  -[AMSMockURLOverride withURLContainingPath:]
  -[AMSMockURLOverride withURLRegexValidation:]
  -[AMSMockURLOverride _withURLMatchingHost:containingPath:queryItems:]
  -[AMSMockURLOverride withURLQueryItems:]
  -[AMSMockURLOverride setExecutedObservable:]
  -[AMSMockURLOverride withHTTPBodyValidation:encoding:]
  -[AMSMockURLOverride setComparators:]
  -[AMSMockURLOverride setResponse:]
  -[AMSMockURLOverride response]


AMSMockURLRequestComparator : NSObject /usr/lib/libSystem.B.dylib <AMSURLRequestComparator>
 @property  @? criteriaBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSMockURLRequestComparator .cxx_destruct]
  -[AMSMockURLRequestComparator shouldOverrideURLRequest:]
  -[AMSMockURLRequestComparator initWithCriteriaBlock:]
  -[AMSMockURLRequestComparator criteriaBlock]
  -[AMSMockURLRequestComparator setCriteriaBlock:]


AMSMockURLResponse : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *responseHandlerBlocks
 @property  NSURLSessionTask *runningTask
 @property  unsigned long statusCode
 @property  NSDictionary *headers
 @property  NSData *body
 @property  BOOL performActualRequest
 @property  NSURLRequest *originalRequest

  // class methods
  +[AMSMockURLResponse responseFromActualResponse]
  +[AMSMockURLResponse responseWithHARFile:]
  +[AMSMockURLResponse responseWithStatus:headers:body:]

  // instance methods
  -[AMSMockURLResponse init]
  -[AMSMockURLResponse originalRequest]
  -[AMSMockURLResponse .cxx_destruct]
  -[AMSMockURLResponse setStatusCode:]
  -[AMSMockURLResponse statusCode]
  -[AMSMockURLResponse setBody:]
  -[AMSMockURLResponse body]
  -[AMSMockURLResponse handleReceivedRequest:]
  -[AMSMockURLResponse stopRunningTasks]
  -[AMSMockURLResponse headers]
  -[AMSMockURLResponse runningTask]
  -[AMSMockURLResponse setPerformActualRequest:]
  -[AMSMockURLResponse performActualRequest]
  -[AMSMockURLResponse setRunningTask:]
  -[AMSMockURLResponse responseHandlerBlocks]
  -[AMSMockURLResponse addResponseHandler:]
  -[AMSMockURLResponse setResponseHandlerBlocks:]
  -[AMSMockURLResponse setHeaders:]


AMSMockURLSession : AMSURLSession
  // instance methods
  -[AMSMockURLSession initWithConfiguration:delegate:delegateQueue:]


AMSMultiUserService : NSObject /usr/lib/libSystem.B.dylib <AMSMachService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMultiUserService proxyObject]
  +[AMSMultiUserService isConnectionEntitled:]
  +[AMSMultiUserService _createXPCConnection]
  +[AMSMultiUserService sharedConnection]
  +[AMSMultiUserService proxyObjectAsync]
  +[AMSMultiUserService setSharedConnection:]
  +[AMSMultiUserService sharedConnectionAccessQueue]
  +[AMSMultiUserService machServiceName]
  +[AMSMultiUserService serviceInterface]


AMSNetworkConstraints : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer_Project, AMSBagConsumer>
 @property  NSMutableDictionary *sizeLimits
 @property  BOOL anyNetworkTypeEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSNetworkConstraints createBagForSubProfile]
  +[AMSNetworkConstraints bagKeySet]
  +[AMSNetworkConstraints _networkConstraintsForMediaType:withArray:]
  +[AMSNetworkConstraints networkConstraintsForMediaType:withBag:]
  +[AMSNetworkConstraints bagSubProfileVersion]
  +[AMSNetworkConstraints addRequiredBagKeysToAggregator:]
  +[AMSNetworkConstraints bagSubProfile]

  // instance methods
  -[AMSNetworkConstraints init]
  -[AMSNetworkConstraints .cxx_destruct]
  -[AMSNetworkConstraints isEqualToConstraints:]
  -[AMSNetworkConstraints isAnyNetworkTypeEnabled]
  -[AMSNetworkConstraints hasSizeLimitForNetworkType:]
  -[AMSNetworkConstraints sizeLimits]
  -[AMSNetworkConstraints setSizeLimits:]
  -[AMSNetworkConstraints _initWithStoreConstraintDictionary:]
  -[AMSNetworkConstraints isEqual:]
  -[AMSNetworkConstraints _sizeLimitForNetworkType:]
  -[AMSNetworkConstraints _setSizeLimit:forNetworkType:]
  -[AMSNetworkConstraints _disableAllNetworkTypes]
  -[AMSNetworkConstraints sizeLimitForNetworkType:]


AMSNetworkQualityInquiry : NSObject /usr/lib/libSystem.B.dylib <NWNetworkOfInterestManagerDelegate>
 @property  NWNetworkOfInterestManager *manager
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableSet *knownNetworks
 @property  NSMutableArray *knownNetworksReadyHandlers

  // class methods
  +[AMSNetworkQualityInquiry sharedInstance]
  +[AMSNetworkQualityInquiry isEntitled]
  +[AMSNetworkQualityInquiry lastConnectionReport]
  +[AMSNetworkQualityInquiry reportForTask:fromReports:]
  +[AMSNetworkQualityInquiry updateLastConnectionReportWithTask:]

  // instance methods
  -[AMSNetworkQualityInquiry init]
  -[AMSNetworkQualityInquiry dealloc]
  -[AMSNetworkQualityInquiry knownNetworksReadyHandlers]
  -[AMSNetworkQualityInquiry .cxx_destruct]
  -[AMSNetworkQualityInquiry drainKnownNetworksReadyHandlers]
  -[AMSNetworkQualityInquiry manager]
  -[AMSNetworkQualityInquiry performWhenKnownNetworksReady:]
  -[AMSNetworkQualityInquiry queue]
  -[AMSNetworkQualityInquiry areKnownNetworksReady]
  -[AMSNetworkQualityInquiry knownNetworks]
  -[AMSNetworkQualityInquiry investigateNetworks]
  -[AMSNetworkQualityInquiry didStopTrackingAllNOIs:]
  -[AMSNetworkQualityInquiry didStartTrackingNOI:]
  -[AMSNetworkQualityInquiry didStopTrackingNOI:]
  -[AMSNetworkQualityInquiry setKnownNetworksReadyHandlers:]


AMSNotificationSettingsItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *dictionaryRepresentation
 @property  NSString *desc
 @property  BOOL enabled
 @property  NSString *identifier
 @property  NSString *title
 @property  BOOL userChanged

  // instance methods
  -[AMSNotificationSettingsItem desc]
  -[AMSNotificationSettingsItem initWithDictionaryRepresentation:]
  -[AMSNotificationSettingsItem .cxx_destruct]
  -[AMSNotificationSettingsItem identifier]
  -[AMSNotificationSettingsItem title]
  -[AMSNotificationSettingsItem isEnabled]
  -[AMSNotificationSettingsItem setUserChanged:]
  -[AMSNotificationSettingsItem initWithTitle:description:identifier:enabled:]
  -[AMSNotificationSettingsItem setEnabled:]
  -[AMSNotificationSettingsItem dictionaryRepresentation]
  -[AMSNotificationSettingsItem userChanged]


AMSNotificationSettingsResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *sections

  // class methods
  +[AMSNotificationSettingsResult _sectionsFromDictionaryRepresentation:]

  // instance methods
  -[AMSNotificationSettingsResult initWithDictionaryRepresentation:]
  -[AMSNotificationSettingsResult .cxx_destruct]
  -[AMSNotificationSettingsResult sections]


AMSNotificationSettingsSection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *dictionaryRepresentation
 @property  NSString *footer
 @property  NSString *identifier
 @property  NSArray *items
 @property  NSString *title

  // instance methods
  -[AMSNotificationSettingsSection initWithDictionaryRepresentation:]
  -[AMSNotificationSettingsSection footer]
  -[AMSNotificationSettingsSection items]
  -[AMSNotificationSettingsSection .cxx_destruct]
  -[AMSNotificationSettingsSection identifier]
  -[AMSNotificationSettingsSection title]
  -[AMSNotificationSettingsSection initWithTitle:footer:items:]
  -[AMSNotificationSettingsSection dictionaryRepresentation]


AMSNotificationSettingsTask : AMSTask <AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSNotificationSettingsTask bagKeySet]
  +[AMSNotificationSettingsTask bagSubProfileVersion]
  +[AMSNotificationSettingsTask addRequiredBagKeysToAggregator:]
  +[AMSNotificationSettingsTask bagSubProfile]

  // instance methods
  -[AMSNotificationSettingsTask setAccount:]
  -[AMSNotificationSettingsTask account]
  -[AMSNotificationSettingsTask .cxx_destruct]
  -[AMSNotificationSettingsTask identifier]
  -[AMSNotificationSettingsTask setBag:]
  -[AMSNotificationSettingsTask bag]
  -[AMSNotificationSettingsTask clientInfo]
  -[AMSNotificationSettingsTask fetchAllSettings]
  -[AMSNotificationSettingsTask _generateParametersForItems:]
  -[AMSNotificationSettingsTask initWithIdentifier:account:bag:]
  -[AMSNotificationSettingsTask fetchSettingForIdentifier:]
  -[AMSNotificationSettingsTask fetchSettingsForSections:]
  -[AMSNotificationSettingsTask updateSettings:]
  -[AMSNotificationSettingsTask setClientInfo:]


_AMSKeyValueObservable : AMSObservable
 @property  NSObject *context
 @property  NSString *keyPath
 @property  NSObject *object

  // instance methods
  -[_AMSKeyValueObservable context]
  -[_AMSKeyValueObservable initWithObject:keyPath:options:]
  -[_AMSKeyValueObservable object]
  -[_AMSKeyValueObservable sendCompletion]
  -[_AMSKeyValueObservable setKeyPath:]
  -[_AMSKeyValueObservable .cxx_destruct]
  -[_AMSKeyValueObservable setObject:]
  -[_AMSKeyValueObservable keyPath]
  -[_AMSKeyValueObservable setContext:]
  -[_AMSKeyValueObservable cancel]
  -[_AMSKeyValueObservable observeValueForKeyPath:ofObject:change:context:]


_AMSNotificationObservable : AMSObservable
  // instance methods
  -[_AMSNotificationObservable sendCompletion]
  -[_AMSNotificationObservable _receivedNotification:]
  -[_AMSNotificationObservable cancel]
  -[_AMSNotificationObservable initWithNotification:object:]


AMSObservable : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long behavior
 @property  NSError *failureError
 @property  NSString *logKey
 @property  NSMutableArray *observers
 @property  NSMutableArray *queuedResults
 @property  NSObject<OS_dispatch_queue> *sendMessageQueue
 @property  NSConditionLock *stateLock
 @property  BOOL cancelled
 @property  BOOL complete

  // instance methods
  -[AMSObservable isCancelled]
  -[AMSObservable initWithObject:keyPath:options:]
  -[AMSObservable queuedResults]
  -[AMSObservable stateLock]
  -[AMSObservable sendCompletion]
  -[AMSObservable isComplete]
  -[AMSObservable unsubscribeAll]
  -[AMSObservable failureError]
  -[AMSObservable setStateLock:]
  -[AMSObservable subscribe:]
  -[AMSObservable sendResult:]
  -[AMSObservable setLogKey:]
  -[AMSObservable init]
  -[AMSObservable behavior]
  -[AMSObservable setObservers:]
  -[AMSObservable logKey]
  -[AMSObservable initWithObserver:behavior:]
  -[AMSObservable .cxx_destruct]
  -[AMSObservable initWithObservers:behavior:]
  -[AMSObservable sendMessageQueue]
  -[AMSObservable observers]
  -[AMSObservable cancel]
  -[AMSObservable _isComplete]
  -[AMSObservable initWithObservers:]
  -[AMSObservable unsubscribe:]
  -[AMSObservable setSendMessageQueue:]
  -[AMSObservable setQueuedResults:]
  -[AMSObservable initWithNotification:object:]
  -[AMSObservable subscribeWithResultBlock:]
  -[AMSObservable initWithObserver:]
  -[AMSObservable sendFailure:]
  -[AMSObservable setFailureError:]


AMSObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  @? completionBlock
 @property  @? failureBlock
 @property  @? resultBlock

  // instance methods
  -[AMSObserver _sendCompletionUsingQueue:]
  -[AMSObserver initWithResultBlock:completionBlock:failureBlock:]
  -[AMSObserver .cxx_destruct]
  -[AMSObserver resultBlock]
  -[AMSObserver setCompletionBlock:]
  -[AMSObserver completionBlock]
  -[AMSObserver setResultBlock:]
  -[AMSObserver _sendFailure:usingQueue:]
  -[AMSObserver initWithResultBlock:]
  -[AMSObserver _sendResult:usingQueue:]
  -[AMSObserver failureBlock]
  -[AMSObserver setFailureBlock:]


URLTarget : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned int applicationState
 @property  NSString *bundleID
 @property  long long defaultIndex
 @property  NSString *normalScheme
 @property  NSString *secureScheme

  // class methods
  +[URLTarget targetWithBundle:scheme:secureScheme:]

  // instance methods
  -[URLTarget setBundleID:]
  -[URLTarget .cxx_destruct]
  -[URLTarget setSecureScheme:]
  -[URLTarget applicationState]
  -[URLTarget initWithBundle:scheme:secureScheme:]
  -[URLTarget setApplicationState:]
  -[URLTarget defaultIndex]
  -[URLTarget setDefaultIndex:]
  -[URLTarget normalScheme]
  -[URLTarget setNormalScheme:]
  -[URLTarget secureScheme]
  -[URLTarget bundleID]


AMSOpenURL : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableSet *attemptedTargets
 @property  NSURL *URL
 @property  AMSProcessInfo *clientInfo
 @property  <AMSBagProtocol> *bag

  // class methods
  +[AMSOpenURL openStandardURL:]
  +[AMSOpenURL _sortedTargets]
  +[AMSOpenURL _modifiedURLFromURL:bundleInfo:]
  +[AMSOpenURL openURL:account:preferredClient:]
  +[AMSOpenURL openURL:clientInfo:bag:]

  // instance methods
  -[AMSOpenURL .cxx_destruct]
  -[AMSOpenURL setBag:]
  -[AMSOpenURL bag]
  -[AMSOpenURL clientInfo]
  -[AMSOpenURL _performOpen]
  -[AMSOpenURL initWithURL:clientInfo:bag:]
  -[AMSOpenURL setAttemptedTargets:]
  -[AMSOpenURL _openURL:bundleInfo:]
  -[AMSOpenURL _shouldOpenURL:]
  -[AMSOpenURL attemptedTargets]
  -[AMSOpenURL setClientInfo:]
  -[AMSOpenURL URL]


AMSOperation : NSOperation /usr/lib/libobjc.A.dylib
 @property  AMSOperation *parentOperation
 @property  AMSBinaryPromise *promise
 @property  BOOL success
 @property  NSError *error

  // instance methods
  -[AMSOperation success]
  -[AMSOperation isCancelled]
  -[AMSOperation run]
  -[AMSOperation promise]
  -[AMSOperation init]
  -[AMSOperation main]
  -[AMSOperation setError:]
  -[AMSOperation .cxx_destruct]
  -[AMSOperation lock]
  -[AMSOperation unlock]
  -[AMSOperation cancel]
  -[AMSOperation error]
  -[AMSOperation runSubOperation:onQueue:]
  -[AMSOperation setParentOperation:]
  -[AMSOperation runSubOperation:]
  -[AMSOperation parentOperation]
  -[AMSOperation setSuccess:]


AMSOptional : NSObject /usr/lib/libSystem.B.dylib
 @property  id value

  // class methods
  +[AMSOptional optionalWithNil]
  +[AMSOptional optionalWithValue:]

  // instance methods
  -[AMSOptional init]
  -[AMSOptional initWithValue:]
  -[AMSOptional .cxx_destruct]
  -[AMSOptional value]


AMSPair : NSObject /usr/lib/libSystem.B.dylib
 @property  id first
 @property  id second

  // instance methods
  -[AMSPair second]
  -[AMSPair first]
  -[AMSPair initWithFirst:second:]
  -[AMSPair .cxx_destruct]


AMSPaymentSetupFeatureVerification : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier

  // instance methods
  -[AMSPaymentSetupFeatureVerification .cxx_destruct]
  -[AMSPaymentSetupFeatureVerification initWithIdentifier:]
  -[AMSPaymentSetupFeatureVerification setIdentifier:]
  -[AMSPaymentSetupFeatureVerification identifier]
  -[AMSPaymentSetupFeatureVerification performPaymentSetupFeatureLookup]
  -[AMSPaymentSetupFeatureVerification isPaymentSetupFeatureSupportedWithError:]


AMSPaymentSheetMetricsEvent : AMSMetricsEvent
  // class methods
  +[AMSPaymentSheetMetricsEvent _timestamp]
  +[AMSPaymentSheetMetricsEvent dictionaryForBiometricMatchState:didBiometricsLockout:]
  +[AMSPaymentSheetMetricsEvent dictionaryForCancellationEvent:didBiometricsLockout:]
  +[AMSPaymentSheetMetricsEvent dictionaryForUserAction:didBiometricsLockout:]

  // instance methods
  -[AMSPaymentSheetMetricsEvent addDualActionSuccess:]
  -[AMSPaymentSheetMetricsEvent addBiometricMatchStateFinal:]
  -[AMSPaymentSheetMetricsEvent addClientMetadataForPurchaseInfo:metricsDictionary:]
  -[AMSPaymentSheetMetricsEvent addUserActions:]


AMSPaymentSheetPriceSectionItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *label
 @property  NSString *price

  // instance methods
  -[AMSPaymentSheetPriceSectionItem price]
  -[AMSPaymentSheetPriceSectionItem .cxx_destruct]
  -[AMSPaymentSheetPriceSectionItem label]
  -[AMSPaymentSheetPriceSectionItem setPrice:]
  -[AMSPaymentSheetPriceSectionItem setLabel:]


AMSPaymentSheetRatingImage : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *localAssetName
 @property  long long ratingType
 @property  BOOL serverSupplied
 @property  BOOL tint
 @property  NSString *URLString
 @property  NSString *value

  // instance methods
  -[AMSPaymentSheetRatingImage URLString]
  -[AMSPaymentSheetRatingImage tint]
  -[AMSPaymentSheetRatingImage .cxx_destruct]
  -[AMSPaymentSheetRatingImage initWithDictionary:]
  -[AMSPaymentSheetRatingImage initWithURLString:]
  -[AMSPaymentSheetRatingImage ratingType]
  -[AMSPaymentSheetRatingImage _ratingTypeForType:]
  -[AMSPaymentSheetRatingImage isServerSupplied]
  -[AMSPaymentSheetRatingImage localAssetName]
  -[AMSPaymentSheetRatingImage value]


AMSPaymentSheetAssetCache : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[AMSPaymentSheetAssetCache init]
  -[AMSPaymentSheetAssetCache dealloc]
  -[AMSPaymentSheetAssetCache retainAsset:]


AMSPaymentSheetRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long ams_confirmationStyle
 @property  unsigned long ams_paymentRequestorType
 @property  ACAccount *account
 @property  NSString *accountHeader
 @property  BOOL applePayClassic
 @property  NSArray *attributedList
 @property  AMSBiometricsSignatureRequest *biometricsRequest
 @property  long long confirmationTitle
 @property  NSString *currencyCode
 @property  NSString *countryCode
 @property  NSString *displayPrice
 @property  NSString *explanation
 @property  NSArray *flexList
 @property  NSArray *inlineImages
 @property  NSString *logKey
 @property  NSDictionary *merchantSession
 @property  NSString *message
 @property  long long payee
 @property  NSString *paymentSession
 @property  NSString *paymentSummary
 @property  NSArray *preSheetDialog
 @property  NSNumber *price
 @property  NSArray *priceSectionItems
 @property  NSString *ratingHeader
 @property  NSString *ratingValue
 @property  long long salableIcon
 @property  NSURL *salableIconURL
 @property  NSArray *salableInfo
 @property  NSAttributedString *salableInfoLabel
 @property  BOOL requiresAuthorization
 @property  BOOL shouldUppercaseText
 @property  NSString *storeName
 @property  NSString *title
 @property  long long titleType

  // instance methods
  -[AMSPaymentSheetRequest explanation]
  -[AMSPaymentSheetRequest currencyCode]
  -[AMSPaymentSheetRequest price]
  -[AMSPaymentSheetRequest payee]
  -[AMSPaymentSheetRequest setLogKey:]
  -[AMSPaymentSheetRequest message]
  -[AMSPaymentSheetRequest logKey]
  -[AMSPaymentSheetRequest setStoreName:]
  -[AMSPaymentSheetRequest setApplePayClassic:]
  -[AMSPaymentSheetRequest setMessage:]
  -[AMSPaymentSheetRequest setAccount:]
  -[AMSPaymentSheetRequest account]
  -[AMSPaymentSheetRequest .cxx_destruct]
  -[AMSPaymentSheetRequest setRequiresAuthorization:]
  -[AMSPaymentSheetRequest setTitle:]
  -[AMSPaymentSheetRequest titleType]
  -[AMSPaymentSheetRequest requiresAuthorization]
  -[AMSPaymentSheetRequest displayPrice]
  -[AMSPaymentSheetRequest ratingHeader]
  -[AMSPaymentSheetRequest countryCode]
  -[AMSPaymentSheetRequest biometricsRequest]
  -[AMSPaymentSheetRequest setBiometricsRequest:]
  -[AMSPaymentSheetRequest setShouldUppercaseText:]
  -[AMSPaymentSheetRequest setAccountHeader:]
  -[AMSPaymentSheetRequest accountHeader]
  -[AMSPaymentSheetRequest setDisplayPrice:]
  -[AMSPaymentSheetRequest shouldUppercaseText]
  -[AMSPaymentSheetRequest setPriceSectionItems:]
  -[AMSPaymentSheetRequest setSalableIcon:]
  -[AMSPaymentSheetRequest setSalableIconURL:]
  -[AMSPaymentSheetRequest setRatingHeader:]
  -[AMSPaymentSheetRequest setRatingValue:]
  -[AMSPaymentSheetRequest setConfirmationTitle:]
  -[AMSPaymentSheetRequest flexList]
  -[AMSPaymentSheetRequest setPaymentSummary:]
  -[AMSPaymentSheetRequest paymentSummary]
  -[AMSPaymentSheetRequest setSalableInfo:]
  -[AMSPaymentSheetRequest setPreSheetDialog:]
  -[AMSPaymentSheetRequest setFlexList:]
  -[AMSPaymentSheetRequest setSalableInfoLabel:]
  -[AMSPaymentSheetRequest setInlineImages:]
  -[AMSPaymentSheetRequest setAttributedList:]
  -[AMSPaymentSheetRequest setPrice:]
  -[AMSPaymentSheetRequest title]
  -[AMSPaymentSheetRequest setCurrencyCode:]
  -[AMSPaymentSheetRequest setPayee:]
  -[AMSPaymentSheetRequest inlineImages]
  -[AMSPaymentSheetRequest confirmationTitle]
  -[AMSPaymentSheetRequest priceSectionItems]
  -[AMSPaymentSheetRequest attributedList]
  -[AMSPaymentSheetRequest _summaryItemsForAttributedList:cache:bag:]
  -[AMSPaymentSheetRequest preSheetDialog]
  -[AMSPaymentSheetRequest _contentItemsForFlexibleList:cache:bag:]
  -[AMSPaymentSheetRequest salableInfoLabel]
  -[AMSPaymentSheetRequest salableIconURL]
  -[AMSPaymentSheetRequest _createImageRefWithURL:adornmentStyle:bag:]
  -[AMSPaymentSheetRequest _countImagePlaceholderTags:]
  -[AMSPaymentSheetRequest _createRatingImageWithStringValue:assetScale:]
  -[AMSPaymentSheetRequest _removeAllImagePlaceholderTags:]
  -[AMSPaymentSheetRequest _createImageForResourceName:outAssetScale:]
  -[AMSPaymentSheetRequest _replaceImagePlaceholderTagWithImageData:tag:data:scale:tint:]
  -[AMSPaymentSheetRequest _createImageRefForImageSource:screenScale:outAssetScale:]
  -[AMSPaymentSheetRequest _imageTypeForURL:]
  -[AMSPaymentSheetRequest _createBorderPathForAdornmentStyle:iconWidth:iconHeight:]
  -[AMSPaymentSheetRequest ams_confirmationStyle]
  -[AMSPaymentSheetRequest _createDefaultImageWithImageRef:size:borderPath:]
  -[AMSPaymentSheetRequest ams_createSummaryItems]
  -[AMSPaymentSheetRequest _createMaskedImageRefForImageRef:withPathRef:andAdornmentStyle:]
  -[AMSPaymentSheetRequest merchantSession]
  -[AMSPaymentSheetRequest _createRGBImageRefForGreyScaleImageRef:width:height:]
  -[AMSPaymentSheetRequest ams_paymentRequestorType]
  -[AMSPaymentSheetRequest _createImageMaskRefWithSize:andPath:]
  -[AMSPaymentSheetRequest ams_createContentItemForAccount]
  -[AMSPaymentSheetRequest ams_createSummaryItemsForAttributedListWithCache:bag:]
  -[AMSPaymentSheetRequest setPaymentSession:]
  -[AMSPaymentSheetRequest ams_createContentItemsForFlexibleListWithCache:bag:]
  -[AMSPaymentSheetRequest ams_createContentItemsForPreScreenDialogWithCache:bag:]
  -[AMSPaymentSheetRequest isApplePayClassic]
  -[AMSPaymentSheetRequest ams_createContentItemForRating]
  -[AMSPaymentSheetRequest ams_createContentItemForSalableInfoWithCache:bag:]
  -[AMSPaymentSheetRequest _createResizedImageWithOriginalImage:targetHeight:]
  -[AMSPaymentSheetRequest setCountryCode:]
  -[AMSPaymentSheetRequest setTitleType:]
  -[AMSPaymentSheetRequest ratingValue]
  -[AMSPaymentSheetRequest salableInfo]
  -[AMSPaymentSheetRequest paymentSession]
  -[AMSPaymentSheetRequest setMerchantSession:]
  -[AMSPaymentSheetRequest salableIcon]
  -[AMSPaymentSheetRequest storeName]
  -[AMSPaymentSheetRequest setExplanation:]


AMSPaymentSheetResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *passwordEquivalentToken
 @property  NSString *paymentToken
 @property  AMSBiometricsSignatureResult *signatureResult

  // instance methods
  -[AMSPaymentSheetResult .cxx_destruct]
  -[AMSPaymentSheetResult signatureResult]
  -[AMSPaymentSheetResult passwordEquivalentToken]
  -[AMSPaymentSheetResult setPasswordEquivalentToken:]
  -[AMSPaymentSheetResult paymentToken]
  -[AMSPaymentSheetResult setPaymentToken:]
  -[AMSPaymentSheetResult setSignatureResult:]


_PaymentSheetState : NSObject /usr/lib/libSystem.B.dylib
 @property  NSError *error
 @property  BOOL didAuthorizePayment
 @property  BOOL didBiometricsLockout
 @property  unsigned long cancellationType
 @property  BOOL didPresent
 @property  NSString *passwordEquivalentToken
 @property  NSString *paymentToken
 @property  AMSBiometricsSignatureResult *signatureResult

  // instance methods
  -[_PaymentSheetState didPresent]
  -[_PaymentSheetState init]
  -[_PaymentSheetState setError:]
  -[_PaymentSheetState .cxx_destruct]
  -[_PaymentSheetState signatureResult]
  -[_PaymentSheetState error]
  -[_PaymentSheetState passwordEquivalentToken]
  -[_PaymentSheetState setPasswordEquivalentToken:]
  -[_PaymentSheetState paymentToken]
  -[_PaymentSheetState setPaymentToken:]
  -[_PaymentSheetState setSignatureResult:]
  -[_PaymentSheetState didAuthorizePayment]
  -[_PaymentSheetState setDidAuthorizePayment:]
  -[_PaymentSheetState cancellationType]
  -[_PaymentSheetState setDidPresent:]
  -[_PaymentSheetState setCancellationType:]
  -[_PaymentSheetState didBiometricsLockout]
  -[_PaymentSheetState setDidBiometricsLockout:]


AMSPaymentSheetTask : AMSTask <PKPaymentAuthorizationControllerDelegate, PKPaymentAuthorizationControllerPrivateDelegate>
 @property  AMSPaymentSheetAssetCache *assetCache
 @property  AKAppleIDAuthenticationContext *authenticationContext
 @property  AMSPromise *paymentSheetPromise
 @property  NSObject<OS_dispatch_queue> *presentationQueue
 @property  _PaymentSheetState *state
 @property  AMSPaymentSheetRequest *request
 @property  NSMutableArray *userActions
 @property  <AMSBagProtocol> *bag
 @property  NSDictionary *metricsDictionary
 @property  AMSPurchaseInfo *purchaseInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPaymentSheetTask _authenticationContextForRequest:]

  // instance methods
  -[AMSPaymentSheetTask perform]
  -[AMSPaymentSheetTask paymentAuthorizationController:didEncounterAuthorizationEvent:]
  -[AMSPaymentSheetTask paymentAuthorizationController:willFinishWithError:]
  -[AMSPaymentSheetTask userActions]
  -[AMSPaymentSheetTask authenticationContext]
  -[AMSPaymentSheetTask setState:]
  -[AMSPaymentSheetTask setRequest:]
  -[AMSPaymentSheetTask .cxx_destruct]
  -[AMSPaymentSheetTask metricsDictionary]
  -[AMSPaymentSheetTask purchaseInfo]
  -[AMSPaymentSheetTask setMetricsDictionary:]
  -[AMSPaymentSheetTask setBag:]
  -[AMSPaymentSheetTask bag]
  -[AMSPaymentSheetTask initWithRequest:bag:]
  -[AMSPaymentSheetTask _paymentRequest]
  -[AMSPaymentSheetTask setPaymentSheetPromise:]
  -[AMSPaymentSheetTask paymentSheetPromise]
  -[AMSPaymentSheetTask _presentPaymentSheetWithPaymentRequest:error:]
  -[AMSPaymentSheetTask presentationQueue]
  -[AMSPaymentSheetTask _challengeSigningDelay]
  -[AMSPaymentSheetTask setAssetCache:]
  -[AMSPaymentSheetTask setAuthenticationContext:]
  -[AMSPaymentSheetTask setPresentationQueue:]
  -[AMSPaymentSheetTask setPurchaseInfo:]
  -[AMSPaymentSheetTask state]
  -[AMSPaymentSheetTask assetCache]
  -[AMSPaymentSheetTask request]
  -[AMSPaymentSheetTask paymentAuthorizationControllerDidFinish:]
  -[AMSPaymentSheetTask _metricsEvent]
  -[AMSPaymentSheetTask paymentAuthorizationController:didAuthorizePayment:handler:]
  -[AMSPaymentSheetTask setUserActions:]


AMSProcessInfo : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  BOOL accountsDaemon
 @property  AMSMappedBundleInfo *mappedBundleInfo
 @property  NSString *accountMediaType
 @property  NSData *auditTokenData
 @property  NSString *bundleIdentifier
 @property  NSURL *bundleURL
 @property  NSString *clientVersion
 @property  NSString *executableName
 @property  NSString *localizedName
 @property  NSString *partnerHeader
 @property  NSString *proxyAppBundleID
 @property  NSString *userAgentSuffix

  // class methods
  +[AMSProcessInfo _bundleForIdentifier:record:]
  +[AMSProcessInfo supportsSecureCoding]
  +[AMSProcessInfo valueForEntitlement:]
  +[AMSProcessInfo _accessProcessInfoCache:]
  +[AMSProcessInfo _cacheProcessInfo:]
  +[AMSProcessInfo setDefaultMediaTypeForCurrentProcess:]
  +[AMSProcessInfo _currentProcessBundleIdentifier]
  +[AMSProcessInfo defaultMediaTypeForCurrentProcess]
  +[AMSProcessInfo copyPropertiesFrom:to:]
  +[AMSProcessInfo defaultMediaTypeAccessQueue]
  +[AMSProcessInfo stringForEntitlement:]
  +[AMSProcessInfo boolForEntitlement:]
  +[AMSProcessInfo _bundleRecordForIdentifier:]
  +[AMSProcessInfo boolForMachLookupAccess:]
  +[AMSProcessInfo _cachedProcessInfoForIdentifier:]
  +[AMSProcessInfo isBuddyRunning]
  +[AMSProcessInfo currentProcess]

  // instance methods
  -[AMSProcessInfo initWithBundleIdentifier:]
  -[AMSProcessInfo copyWithZone:]
  -[AMSProcessInfo auditTokenData]
  -[AMSProcessInfo setLocalizedName:]
  -[AMSProcessInfo userAgentSuffix]
  -[AMSProcessInfo proxyAppBundleID]
  -[AMSProcessInfo setBundleURL:]
  -[AMSProcessInfo setProxyAppBundleID:]
  -[AMSProcessInfo setUserAgentSuffix:]
  -[AMSProcessInfo init]
  -[AMSProcessInfo .cxx_destruct]
  -[AMSProcessInfo bundleURL]
  -[AMSProcessInfo localizedName]
  -[AMSProcessInfo setClientVersion:]
  -[AMSProcessInfo setAuditTokenData:]
  -[AMSProcessInfo encodeWithCoder:]
  -[AMSProcessInfo isAccountsDaemon]
  -[AMSProcessInfo setPartnerHeader:]
  -[AMSProcessInfo clientVersion]
  -[AMSProcessInfo generateConfigurationFromBagContract:]
  -[AMSProcessInfo mappedBundleInfo]
  -[AMSProcessInfo setBundleIdentifier:]
  -[AMSProcessInfo executableName]
  -[AMSProcessInfo generateConfiguration]
  -[AMSProcessInfo isEqual:]
  -[AMSProcessInfo partnerHeader]
  -[AMSProcessInfo accountMediaType]
  -[AMSProcessInfo bundleIdentifier]
  -[AMSProcessInfo generateConfigurationFromBag:]
  -[AMSProcessInfo setExecutableName:]
  -[AMSProcessInfo setAccountMediaType:]
  -[AMSProcessInfo initWithCoder:]


AMSPromise : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSPromiseCompletionBlocks *completionBlocks
 @property  AMSPromiseResult *promiseResult
 @property  NSConditionLock *stateLock
 @property  BOOL cancelled
 @property  BOOL finished
 @property  BOOL timedOut

  // class methods
  +[AMSPromise promiseWithFlattenedPromises:]
  +[AMSPromise promiseWithError:]
  +[AMSPromise promiseWithAny:timeout:]
  +[AMSPromise promiseWithAll:timeout:]
  +[AMSPromise _errorIsTimeOutError:]
  +[AMSPromise _configureFlattenedPromise:withPromises:results:previousError:currentPromiseIndex:]
  +[AMSPromise _enumeratePromises:startingAt:block:]
  +[AMSPromise _errorIsCanceledError:]
  +[AMSPromise promiseFinishedWithDefaultErrorOrResult:]
  +[AMSPromise promiseWithResult:]
  +[AMSPromise _globalPromiseStorage]
  +[AMSPromise promiseWithAll:]
  +[AMSPromise promiseWithAny:]
  +[AMSPromise _finishPromise:withPromise:]
  +[AMSPromise _globalPromiseStorageAccessQueue]

  // instance methods
  -[AMSPromise setPromiseResult:]
  -[AMSPromise resultBeforeDate:error:]
  -[AMSPromise addErrorBlock:]
  -[AMSPromise boolCompletionHandlerAdapter]
  -[AMSPromise finishWithResult:]
  -[AMSPromise errorOnlyCompletionHandlerAdapter]
  -[AMSPromise finishWithPromise:]
  -[AMSPromise finishWithResult:error:]
  -[AMSPromise isCancelled]
  -[AMSPromise nilValueCompletionHandlerAdapter]
  -[AMSPromise _addBlock:orCallWithResult:]
  -[AMSPromise resultWithError:]
  -[AMSPromise catchWithBlock:]
  -[AMSPromise addSuccessBlock:]
  -[AMSPromise waitUntilFinished]
  -[AMSPromise resultWithTimeout:error:]
  -[AMSPromise finishWithError:]
  -[AMSPromise setCompletionBlocks:]
  -[AMSPromise waitUntilFinishedWithTimeout:]
  -[AMSPromise addFinishBlock:]
  -[AMSPromise completionHandlerAdapter]
  -[AMSPromise promiseResult]
  -[AMSPromise _isFinished]
  -[AMSPromise stateLock]
  -[AMSPromise completionBlocks]
  -[AMSPromise setStateLock:]
  -[AMSPromise isTimedOut]
  -[AMSPromise init]
  -[AMSPromise .cxx_destruct]
  -[AMSPromise startTimeout:]
  -[AMSPromise isFinished]
  -[AMSPromise cancel]
  -[AMSPromise _finishWithResult:error:logDuplicateFinishes:]
  -[AMSPromise thenWithBlock:]
  -[AMSPromise continueWithBlock:]
  -[AMSPromise promiseWithTimeout:]
  -[AMSPromise binaryPromiseAdapter]
  -[AMSPromise initWithTimeout:]


AMSPromiseCompletionBlocks : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[AMSPromiseCompletionBlocks addErrorBlock:]
  -[AMSPromiseCompletionBlocks addSuccessBlock:]
  -[AMSPromiseCompletionBlocks callSuccessBlock:withPromiseResult:]
  -[AMSPromiseCompletionBlocks init]
  -[AMSPromiseCompletionBlocks .cxx_destruct]
  -[AMSPromiseCompletionBlocks callErrorBlock:withPromiseResult:]
  -[AMSPromiseCompletionBlocks flushCompletionBlocksWithPromiseResult:]
  -[AMSPromiseCompletionBlocks addCompletionBlock:]
  -[AMSPromiseCompletionBlocks callCompletionBlock:withPromiseResult:]


AMSPromiseResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSError *error
 @property  id result

  // instance methods
  -[AMSPromiseResult result]
  -[AMSPromiseResult .cxx_destruct]
  -[AMSPromiseResult error]
  -[AMSPromiseResult initWithResult:error:]


AMSPurchaseBatch : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL isComplete
 @property  NSLock *lock
 @property  AMSLazyPromise *promise
 @property  NSMutableArray *purchases
 @property  NSMutableDictionary *purchaseMap
 @property  NSMutableArray *results

  // instance methods
  -[AMSPurchaseBatch setLock:]
  -[AMSPurchaseBatch isComplete]
  -[AMSPurchaseBatch promise]
  -[AMSPurchaseBatch results]
  -[AMSPurchaseBatch .cxx_destruct]
  -[AMSPurchaseBatch lock]
  -[AMSPurchaseBatch purchases]
  -[AMSPurchaseBatch purchaseMap]
  -[AMSPurchaseBatch initWithPurchases:weakPromise:]
  -[AMSPurchaseBatch purchaseForPurchaseId:]
  -[AMSPurchaseBatch finishPurchase:withError:]
  -[AMSPurchaseBatch finishPurchase:withResult:]
  -[AMSPurchaseBatch nextPurchase]
  -[AMSPurchaseBatch setIsComplete:]


AMSPurchase : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  ACAccount *account
 @property  NSNumber *accountId
 @property  NSDictionary *additionalHeaders
 @property  AMSBuyParams *buyParams
 @property  NSString *callerBundleId
 @property  NSString *clientId
 @property  AMSProcessInfo *clientInfo
 @property  BOOL ignoreRequirePasswordRestriction
 @property  NSString *logUUID
 @property  NSNumber *ownerAccountId
 @property  NSDictionary *metricsOverlay
 @property  long long purchaseType
 @property  BOOL requiresAccount
 @property  NSString *storefront
 @property  NSNumber *uniqueIdentifier
 @property  BOOL userInitiated
 @property  BOOL useJSONContentType

  // instance methods
  -[AMSPurchase copyWithZone:]
  -[AMSPurchase storefront]
  -[AMSPurchase setStorefront:]
  -[AMSPurchase logUUID]
  -[AMSPurchase clientId]
  -[AMSPurchase setLogUUID:]
  -[AMSPurchase setAccount:]
  -[AMSPurchase account]
  -[AMSPurchase .cxx_destruct]
  -[AMSPurchase metricsOverlay]
  -[AMSPurchase setMetricsOverlay:]
  -[AMSPurchase isUserInitiated]
  -[AMSPurchase uniqueIdentifier]
  -[AMSPurchase setUserInitiated:]
  -[AMSPurchase buyParams]
  -[AMSPurchase clientInfo]
  -[AMSPurchase setAccountId:]
  -[AMSPurchase accountId]
  -[AMSPurchase setClientInfo:]
  -[AMSPurchase purchaseType]
  -[AMSPurchase additionalHeaders]
  -[AMSPurchase callerBundleId]
  -[AMSPurchase ignoreRequirePasswordRestriction]
  -[AMSPurchase ownerAccountId]
  -[AMSPurchase requiresAccount]
  -[AMSPurchase initWithPurchaseType:buyParams:]
  -[AMSPurchase setAdditionalHeaders:]
  -[AMSPurchase setCallerBundleId:]
  -[AMSPurchase setIgnoreRequirePasswordRestriction:]
  -[AMSPurchase setOwnerAccountId:]
  -[AMSPurchase setRequiresAccount:]
  -[AMSPurchase useJSONContentType]
  -[AMSPurchase setUseJSONContentType:]
  -[AMSPurchase _generateIdentifier]
  -[AMSPurchase setClientId:]


AMSPurchaseBagConsumer : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPurchaseBagConsumer createBagForSubProfile]
  +[AMSPurchaseBagConsumer bagKeySet]
  +[AMSPurchaseBagConsumer bagSubProfileVersion]
  +[AMSPurchaseBagConsumer addRequiredBagKeysToAggregator:]
  +[AMSPurchaseBagConsumer bagSubProfile]


AMSPurchaseInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  ACAccount *account
 @property  NSMutableDictionary *additionalHeaders
 @property  BOOL addKBSync
 @property  AMSBuyParams *buyParams
 @property  AMSProcessInfo *clientInfo
 @property  <AMSPurchaseDelegate> *delegate
 @property  NSDictionary *dialog
 @property  NSString *dialogId
 @property  BOOL hasBeenAuthedForBuy
 @property  BOOL hasRetriedOriginalOwnerAccount
 @property  NSURL *paymentServicesURL
 @property  NSString *paymentToken
 @property  AMSPurchase *purchase

  // instance methods
  -[AMSPurchaseInfo dialog]
  -[AMSPurchaseInfo paymentServicesURL]
  -[AMSPurchaseInfo setDialogId:]
  -[AMSPurchaseInfo setAccount:]
  -[AMSPurchaseInfo account]
  -[AMSPurchaseInfo .cxx_destruct]
  -[AMSPurchaseInfo purchase]
  -[AMSPurchaseInfo buyParams]
  -[AMSPurchaseInfo dialogId]
  -[AMSPurchaseInfo clientInfo]
  -[AMSPurchaseInfo addKBSync]
  -[AMSPurchaseInfo paymentToken]
  -[AMSPurchaseInfo setPaymentToken:]
  -[AMSPurchaseInfo additionalHeaders]
  -[AMSPurchaseInfo setAdditionalHeaders:]
  -[AMSPurchaseInfo _purchaseStringForType:]
  -[AMSPurchaseInfo setDialog:]
  -[AMSPurchaseInfo initWithPurchase:]
  -[AMSPurchaseInfo setAddKBSync:]
  -[AMSPurchaseInfo setBuyParams:]
  -[AMSPurchaseInfo hasBeenAuthedForBuy]
  -[AMSPurchaseInfo setHasBeenAuthedForBuy:]
  -[AMSPurchaseInfo hasRetriedOriginalOwnerAccount]
  -[AMSPurchaseInfo setPaymentServicesURL:]
  -[AMSPurchaseInfo setHasRetriedOriginalOwnerAccount:]
  -[AMSPurchaseInfo setDelegate:]
  -[AMSPurchaseInfo delegate]


AMSPurchaseProtocolHandler : AMSURLProtocolHandler <NSURLSessionDelegate, AMSURLProtocolDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPurchaseProtocolHandler reversePushSamplingPercentageForTask:]

  // instance methods
  -[AMSPurchaseProtocolHandler reconfigureNewRequest:originalTask:redirect:error:]
  -[AMSPurchaseProtocolHandler setSession:]
  -[AMSPurchaseProtocolHandler AMSURLSession:task:handleDialogRequest:completion:]
  -[AMSPurchaseProtocolHandler _locateBuyParamsFromResponse:selectedAction:purchaseInfo:]
  -[AMSPurchaseProtocolHandler AMSURLSession:task:handleAuthenticateRequest:completion:]
  -[AMSPurchaseProtocolHandler _updateSubscriptionStatusFromBody:account:]
  -[AMSPurchaseProtocolHandler AMSURLSession:task:handleEngagementRequest:completion:]
  -[AMSPurchaseProtocolHandler _shouldRetryForFailureAction:response:task:decodedObject:responseDictionary:]
  -[AMSPurchaseProtocolHandler _syncKeybagFromResponse:purchaseInfo:]
  -[AMSPurchaseProtocolHandler handleCompletionWithTask:metrics:decodedObject:]
  -[AMSPurchaseProtocolHandler _updatePasswordSettingWithBuyParams:account:]


AMSPurchaseQueue : NSObject /usr/lib/libSystem.B.dylib <AMSPurchaseDelegate, AMSBagConsumer>
 @property  NSMutableArray *batches
 @property  AMSPurchaseQueueConfiguration *config
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  BOOL isSuspeneded
 @property  NSLock *lock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPurchaseQueue createBagForSubProfile]
  +[AMSPurchaseQueue bagKeySet]
  +[AMSPurchaseQueue bagSubProfileVersion]
  +[AMSPurchaseQueue bagSubProfile]

  // instance methods
  -[AMSPurchaseQueue setLock:]
  -[AMSPurchaseQueue batches]
  -[AMSPurchaseQueue .cxx_destruct]
  -[AMSPurchaseQueue dispatchQueue]
  -[AMSPurchaseQueue config]
  -[AMSPurchaseQueue lock]
  -[AMSPurchaseQueue setDispatchQueue:]
  -[AMSPurchaseQueue _handleNextPurchase]
  -[AMSPurchaseQueue purchase:handleDialogRequest:completion:]
  -[AMSPurchaseQueue purchase:handleAuthenticateRequest:completion:]
  -[AMSPurchaseQueue _processPurchase:]
  -[AMSPurchaseQueue initWithConfiguration:]
  -[AMSPurchaseQueue purchase:handleEngagementRequest:completion:]
  -[AMSPurchaseQueue isSuspeneded]
  -[AMSPurchaseQueue enquePurchases:]
  -[AMSPurchaseQueue setIsSuspeneded:]
  -[AMSPurchaseQueue setSuspended:logUUID:]
  -[AMSPurchaseQueue setConfig:]
  -[AMSPurchaseQueue setBatches:]


AMSPurchaseQueueConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  <AMSBagProtocol> *bag
 @property  <AMSPurchaseResponseProtocol> *delegate

  // instance methods
  -[AMSPurchaseQueueConfiguration initWithBag:]
  -[AMSPurchaseQueueConfiguration .cxx_destruct]
  -[AMSPurchaseQueueConfiguration bag]
  -[AMSPurchaseQueueConfiguration setDelegate:]
  -[AMSPurchaseQueueConfiguration delegate]


AMSPurchaseRequestEncoder : AMSURLRequestEncoder
 @property  AMSPurchaseInfo *purchaseInfo
 @property  NSObject<OS_dispatch_queue> *purchaseRequestQueue

  // class methods
  +[AMSPurchaseRequestEncoder _anisetteTypeFromAccount:]
  +[AMSPurchaseRequestEncoder configureRequest:purchaseInfo:bag:error:]
  +[AMSPurchaseRequestEncoder _parametersFromPurchaseInfo:error:]

  // instance methods
  -[AMSPurchaseRequestEncoder initWithPurchaseInfo:]
  -[AMSPurchaseRequestEncoder .cxx_destruct]
  -[AMSPurchaseRequestEncoder setPurchaseRequestQueue:]
  -[AMSPurchaseRequestEncoder purchaseInfo]
  -[AMSPurchaseRequestEncoder purchaseRequestQueue]
  -[AMSPurchaseRequestEncoder setBag:]
  -[AMSPurchaseRequestEncoder bag]
  -[AMSPurchaseRequestEncoder _bagURL]
  -[AMSPurchaseRequestEncoder initWithPurchaseInfo:bag:]
  -[AMSPurchaseRequestEncoder encodeRequest]


AMSPurchaseResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *correlationID
 @property  NSError *error
 @property  AMSPurchase *purchase
 @property  NSDictionary *responseDictionary

  // instance methods
  -[AMSPurchaseResult responseDictionary]
  -[AMSPurchaseResult setError:]
  -[AMSPurchaseResult .cxx_destruct]
  -[AMSPurchaseResult purchase]
  -[AMSPurchaseResult error]
  -[AMSPurchaseResult correlationID]
  -[AMSPurchaseResult setCorrelationID:]
  -[AMSPurchaseResult setPurchase:]
  -[AMSPurchaseResult setResponseDictionary:]


AMSPurchaseTask : AMSTask <NSURLSessionDelegate, AMSURLProtocolDelegate, AMSAuthenticateTaskDelegate, AMSBagConsumer>
 @property  <AMSBagProtocol> *bag
 @property  AMSPurchaseInfo *purchaseInfo
 @property  AMSURLSession *session
 @property  <AMSPurchaseDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPurchaseTask createBagForSubProfile]
  +[AMSPurchaseTask bagKeySet]
  +[AMSPurchaseTask bagSubProfileVersion]
  +[AMSPurchaseTask bagSubProfile]

  // instance methods
  -[AMSPurchaseTask session]
  -[AMSPurchaseTask .cxx_destruct]
  -[AMSPurchaseTask purchaseInfo]
  -[AMSPurchaseTask setBag:]
  -[AMSPurchaseTask bag]
  -[AMSPurchaseTask performPurchase]
  -[AMSPurchaseTask initWithPurchase:bag:]
  -[AMSPurchaseTask setPurchaseInfo:]
  -[AMSPurchaseTask _generateFraudScoreWithInfo:]
  -[AMSPurchaseTask _promptForAccount]
  -[AMSPurchaseTask _shouldPreauthenticatePurchase:]
  -[AMSPurchaseTask _performPreauthenticate]
  -[AMSPurchaseTask _performPurchaseWithError:]
  -[AMSPurchaseTask _runAuthenticateRequest:]
  -[AMSPurchaseTask _recordEngagementEventWithInfo:result:error:]
  -[AMSPurchaseTask setDelegate:]
  -[AMSPurchaseTask authenticateTask:handleDialogRequest:completion:]
  -[AMSPurchaseTask _runDialogRequest:]
  -[AMSPurchaseTask delegate]


AMSPushConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  <AMSPushHandlerDelegate> *delegate
 @property  NSString *userNotificationExtensionId
 @property  NSSet *enabledActionTypes

  // instance methods
  -[AMSPushConfiguration enabledActionTypes]
  -[AMSPushConfiguration .cxx_destruct]
  -[AMSPushConfiguration userNotificationExtensionId]
  -[AMSPushConfiguration initWithEnabledActionTypes:]
  -[AMSPushConfiguration setUserNotificationExtensionId:]
  -[AMSPushConfiguration setDelegate:]
  -[AMSPushConfiguration delegate]
  -[AMSPushConfiguration setEnabledActionTypes:]


AMSPushHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  <AMSPushHandlerContract> *bagContract
 @property  <AMSBagProtocol> *bag
 @property  <AMSPushHandlerDelegate> *delegate
 @property  AMSPushConfiguration *configuration

  // instance methods
  -[AMSPushHandler bagContract]
  -[AMSPushHandler .cxx_destruct]
  -[AMSPushHandler shouldHandleNotification:]
  -[AMSPushHandler bag]
  -[AMSPushHandler initWithConfiguration:bag:]
  -[AMSPushHandler _enabledParsables]
  -[AMSPushHandler configuration]
  -[AMSPushHandler initWithConfiguration:bagContract:]
  -[AMSPushHandler setDelegate:]
  -[AMSPushHandler delegate]
  -[AMSPushHandler handleNotification:]


AMSPushNotificationService : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSPushNotificationService registerTokensIfNeeded]


AMSPushParsableBadging : NSObject /usr/lib/libSystem.B.dylib <AMSPushParsable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPushParsableBadging shouldSkipAccountCheck]
  +[AMSPushParsableBadging handleNotificationPayload:config:bag:]


AMSPushParsableEngagementEvent : NSObject /usr/lib/libSystem.B.dylib <AMSPushParsable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPushParsableEngagementEvent shouldSkipAccountCheck]
  +[AMSPushParsableEngagementEvent handleNotificationPayload:config:bag:]


AMSPushParsableFollowUp : NSObject /usr/lib/libSystem.B.dylib <AMSPushParsable, AMSUserNotificationIntentDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPushParsableFollowUp shouldSkipAccountCheck]
  +[AMSPushParsableFollowUp handleNotificationPayload:config:bag:]
  +[AMSPushParsableFollowUp isDeviceOfferNotification:]
  +[AMSPushParsableFollowUp removeDeviceOfferWithPayload:logKey:bag:]
  +[AMSPushParsableFollowUp _shouldAllowFollowUp:]
  +[AMSPushParsableFollowUp _shouldClearFollowUpFromPayload:]
  +[AMSPushParsableFollowUp _performClearWithPayload:]
  +[AMSPushParsableFollowUp _performPostWithPayload:bag:]
  +[AMSPushParsableFollowUp _createFollowUpItemFromNotification:]
  +[AMSPushParsableFollowUp _createFollowUpItemFromPayload:]
  +[AMSPushParsableFollowUp userNotification:selectedButtonAction:bag:]
  +[AMSPushParsableFollowUp _createNotificationFromFollowUpItem:]


AMSPushParsableGenericNotification : NSObject /usr/lib/libSystem.B.dylib <AMSPushParsable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPushParsableGenericNotification handleNotificationPayload:config:bag:]
  +[AMSPushParsableGenericNotification _shouldPresentAlertForPayload:]
  +[AMSPushParsableGenericNotification _generateDialogRequestFromPayload:config:]
  +[AMSPushParsableGenericNotification _generateNotificationFromPayload:config:]


AMSPushParsableRichNotification : NSObject /usr/lib/libSystem.B.dylib <AMSPushParsable, AMSUserNotificationIntentDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPushParsableRichNotification shouldSkipAccountCheck]
  +[AMSPushParsableRichNotification handleNotificationPayload:config:bag:]
  +[AMSPushParsableRichNotification userNotification:selectedButtonAction:]


AMSPushPayload : NSObject /usr/lib/libSystem.B.dylib
 @property  ACAccount *account
 @property  NSNumber *accountIdentifier
 @property  NSString *actionType
 @property  long long alertType
 @property  NSDictionary *aps
 @property  NSString *clientIdentifier
 @property  NSString *logKey
 @property  NSDictionary *payload
 @property  long long priority
 @property  NSString *URLString

  // class methods
  +[AMSPushPayload actionTypeFromPayload:]

  // instance methods
  -[AMSPushPayload aps]
  -[AMSPushPayload URLString]
  -[AMSPushPayload actionType]
  -[AMSPushPayload payload]
  -[AMSPushPayload logKey]
  -[AMSPushPayload clientIdentifier]
  -[AMSPushPayload accountIdentifier]
  -[AMSPushPayload account]
  -[AMSPushPayload .cxx_destruct]
  -[AMSPushPayload alertType]
  -[AMSPushPayload priority]
  -[AMSPushPayload initWithPayload:]


AMSRatingsProviderResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *ratingsStoreFronts

  // instance methods
  -[AMSRatingsProviderResult .cxx_destruct]
  -[AMSRatingsProviderResult ratingsStoreFronts]
  -[AMSRatingsProviderResult initWithDictionaries:mediaType:andStoreFront:]
  -[AMSRatingsProviderResult _mapRatingsDictionaries:withMediaType:andStoreFront:]
  -[AMSRatingsProviderResult _ratingInfoMediaTypeForTaskMediaType:]
  -[AMSRatingsProviderResult initWithURLResult:mediaType:andStoreFront:]
  -[AMSRatingsProviderResult initWithData:mediaType:andStoreFront:]


AMSRatingsProviderTask : AMSTask <AMSBagConsumer>
 @property  unsigned long mediaType
 @property  NSString *storeFront
 @property  <AMSBagProtocol> *bag
 @property  NSString *clientIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSRatingsProviderTask createBagForSubProfile]
  +[AMSRatingsProviderTask bagKeySet]
  +[AMSRatingsProviderTask bagSubProfileVersion]
  +[AMSRatingsProviderTask addRequiredBagKeysToAggregator:]
  +[AMSRatingsProviderTask bagSubProfile]

  // instance methods
  -[AMSRatingsProviderTask storeFront]
  -[AMSRatingsProviderTask mediaType]
  -[AMSRatingsProviderTask _cachePath]
  -[AMSRatingsProviderTask performTask]
  -[AMSRatingsProviderTask clientIdentifier]
  -[AMSRatingsProviderTask .cxx_destruct]
  -[AMSRatingsProviderTask bag]
  -[AMSRatingsProviderTask _urlForMediaType:]
  -[AMSRatingsProviderTask _cacheDirectory]
  -[AMSRatingsProviderTask _hasCachedData]
  -[AMSRatingsProviderTask cacheTitle]
  -[AMSRatingsProviderTask _clearCacheIfNeeded]
  -[AMSRatingsProviderTask _cachedRatingsData]
  -[AMSRatingsProviderTask initWithMediaType:storeFront:clientIdentifier:bag:]


AMSRatingsStoreFront : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *defaultLanguage
 @property  unsigned long mediaType
 @property  NSString *name
 @property  NSArray *ratingSystems
 @property  NSString *storeFront
 @property  NSString *storeFrontID
 @property  NSArray *supportedLanguages

  // class methods
  +[AMSRatingsStoreFront storeFrontWithDictionary:mediaType:andStoreFront:]

  // instance methods
  -[AMSRatingsStoreFront storeFront]
  -[AMSRatingsStoreFront mediaType]
  -[AMSRatingsStoreFront .cxx_destruct]
  -[AMSRatingsStoreFront name]
  -[AMSRatingsStoreFront storeFrontID]
  -[AMSRatingsStoreFront defaultLanguage]
  -[AMSRatingsStoreFront supportedLanguages]
  -[AMSRatingsStoreFront ratingSystems]
  -[AMSRatingsStoreFront initWithDictionary:mediaType:andStoreFront:]


AMSRatingSystem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *kind
 @property  NSString *label
 @property  NSArray *contentRatings
 @property  NSString *ratingSystemID

  // class methods
  +[AMSRatingSystem ratingSystemWithDictionary:]

  // instance methods
  -[AMSRatingSystem .cxx_destruct]
  -[AMSRatingSystem label]
  -[AMSRatingSystem kind]
  -[AMSRatingSystem initWithDictionary:]
  -[AMSRatingSystem ratingSystemID]
  -[AMSRatingSystem contentRatings]


AMSRemoteNotification : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSRemoteNotification shouldHandleNotification:]
  +[AMSRemoteNotification _sharedPushHandler]
  +[AMSRemoteNotification handleNotification:]


AMSRestrictions : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSRestrictions requirePasswordImmediately]
  +[AMSRestrictions _featureNameForMediaType:]
  +[AMSRestrictions maximumMediaRank]
  +[AMSRestrictions allowAccountModifications]
  +[AMSRestrictions eroticaAllowed]
  +[AMSRestrictions explicitContentAllowed]
  +[AMSRestrictions inAppPurchaseAllowed]
  +[AMSRestrictions isParentalControlEnabled]
  +[AMSRestrictions onDeviceDiagnosticsAllowed]
  +[AMSRestrictions rankForMediaType:]
  +[AMSRestrictions allowActiveAccountModifications]


AMSSetDemoAccountTask : AMSTask
 @property  AMSProcessInfo *clientInfo
 @property  NSString *password
 @property  NSString *username

  // instance methods
  -[AMSSetDemoAccountTask setUsername:]
  -[AMSSetDemoAccountTask password]
  -[AMSSetDemoAccountTask setPassword:]
  -[AMSSetDemoAccountTask performTask]
  -[AMSSetDemoAccountTask username]
  -[AMSSetDemoAccountTask .cxx_destruct]
  -[AMSSetDemoAccountTask initWithUsername:password:]
  -[AMSSetDemoAccountTask clientInfo]
  -[AMSSetDemoAccountTask setClientInfo:]


AMSSignInContext : NSObject /usr/lib/libSystem.B.dylib <AMSHashable>
 @property  BOOL canMakeAccountActive
 @property  NSString *debugReason
 @property  BOOL ignoreAccountConversion
 @property  BOOL skipAuthentication
 @property  NSString *hashedDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSSignInContext setDebugReason:]
  -[AMSSignInContext setCanMakeAccountActive:]
  -[AMSSignInContext init]
  -[AMSSignInContext setIgnoreAccountConversion:]
  -[AMSSignInContext .cxx_destruct]
  -[AMSSignInContext ignoreAccountConversion]
  -[AMSSignInContext skipAuthentication]
  -[AMSSignInContext setSkipAuthentication:]
  -[AMSSignInContext debugReason]
  -[AMSSignInContext hashedDescription]
  -[AMSSignInContext canMakeAccountActive]


AMSSigningSecurityService : NSObject /usr/lib/libSystem.B.dylib
 @property  <AMSDServiceBrokerProtocol> *serviceBroker

  // instance methods
  -[AMSSigningSecurityService initWithServiceBroker:]
  -[AMSSigningSecurityService init]
  -[AMSSigningSecurityService _handleSecurityServicePromise:onConnected:onDenied:onError:]
  -[AMSSigningSecurityService .cxx_destruct]
  -[AMSSigningSecurityService handleResponse:bag:]
  -[AMSSigningSecurityService serviceBroker]
  -[AMSSigningSecurityService headersForRequest:buyParams:bag:]
  -[AMSSigningSecurityService _headersForRequest:buyParams:bag:securityServicePromise:onDenied:]
  -[AMSSigningSecurityService _defaultSecurityServiceWithDelegate:]
  -[AMSSigningSecurityService _handleResponse:bag:securityServicePromise:onDenied:]


AMSSignOutTask : AMSTask
 @property  NSArray *accounts

  // class methods
  +[AMSSignOutTask _signOutOfAccount:]

  // instance methods
  -[AMSSignOutTask accounts]
  -[AMSSignOutTask performTask]
  -[AMSSignOutTask .cxx_destruct]
  -[AMSSignOutTask initWithAccounts:]
  -[AMSSignOutTask setAccounts:]


AMSSimulatedCrash : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSSimulatedCrash throwSimulatedCrashWithFormat:]


AMSSnapshotBag : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, AMSBagProtocol>
 @property  AMSBagFrozenDataSource *dataSource
 @property  NSDate *creationDate
 @property  BOOL expired
 @property  NSDate *expirationDate
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  AMSProcessInfo *processInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSSnapshotBag supportsSecureCoding]

  // instance methods
  -[AMSSnapshotBag stringForKey:]
  -[AMSSnapshotBag setDataSource:]
  -[AMSSnapshotBag init]
  -[AMSSnapshotBag creationDate]
  -[AMSSnapshotBag .cxx_destruct]
  -[AMSSnapshotBag initWithData:]
  -[AMSSnapshotBag profileVersion]
  -[AMSSnapshotBag URLForKey:account:]
  -[AMSSnapshotBag encodeWithCoder:]
  -[AMSSnapshotBag isExpired]
  -[AMSSnapshotBag _initWithSnapshotBag:]
  -[AMSSnapshotBag compile]
  -[AMSSnapshotBag integerForKey:]
  -[AMSSnapshotBag dataSource]
  -[AMSSnapshotBag boolForKey:]
  -[AMSSnapshotBag expirationDate]
  -[AMSSnapshotBag profile]
  -[AMSSnapshotBag URLForKey:]
  -[AMSSnapshotBag createSnapshotWithCompletion:]
  -[AMSSnapshotBag isLoaded]
  -[AMSSnapshotBag arrayForKey:]
  -[AMSSnapshotBag dictionaryForKey:]
  -[AMSSnapshotBag doubleForKey:]
  -[AMSSnapshotBag initWithCoder:]
  -[AMSSnapshotBag _initWithDataSource:]


AMSSnapshotBagBuilder : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *data
 @property  NSDate *expirationDate
 @property  AMSProcessInfo *processInfo
 @property  NSString *profile
 @property  NSString *profileVersion

  // instance methods
  -[AMSSnapshotBagBuilder setData:]
  -[AMSSnapshotBagBuilder processInfo]
  -[AMSSnapshotBagBuilder setExpirationDate:]
  -[AMSSnapshotBagBuilder .cxx_destruct]
  -[AMSSnapshotBagBuilder profileVersion]
  -[AMSSnapshotBagBuilder setProcessInfo:]
  -[AMSSnapshotBagBuilder data]
  -[AMSSnapshotBagBuilder expirationDate]
  -[AMSSnapshotBagBuilder profile]
  -[AMSSnapshotBagBuilder setProfileVersion:]
  -[AMSSnapshotBagBuilder setProfile:]
  -[AMSSnapshotBagBuilder buildWithError:]


AMSSQLiteConnection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSError *currentError
 @property  AMSSQLiteConnectionOptions *options
 @property  <AMSSQLiteConnectionDelegate> *delegate
 @property  long long lastChangeCount

  // instance methods
  -[AMSSQLiteConnection _close]
  -[AMSSQLiteConnection prepareStatement:error:]
  -[AMSSQLiteConnection initWithOptions:]
  -[AMSSQLiteConnection performTransaction:]
  -[AMSSQLiteConnection _resetAfterIOError]
  -[AMSSQLiteConnection truncate]
  -[AMSSQLiteConnection _statementForPreparedStatement:error:]
  -[AMSSQLiteConnection executePreparedStatement:error:bindings:]
  -[AMSSQLiteConnection dealloc]
  -[AMSSQLiteConnection _prepareStatement:error:]
  -[AMSSQLiteConnection .cxx_destruct]
  -[AMSSQLiteConnection _verifiedStatementForSQL:error:]
  -[AMSSQLiteConnection close]
  -[AMSSQLiteConnection _executeStatement:error:]
  -[AMSSQLiteConnection options]
  -[AMSSQLiteConnection executeStatement:error:bindings:]
  -[AMSSQLiteConnection executeStatement:error:]
  -[AMSSQLiteConnection open]
  -[AMSSQLiteConnection executeWithError:usingBlock:]
  -[AMSSQLiteConnection _flushAfterTransactionBlocks]
  -[AMSSQLiteConnection dispatchAfterTransaction:]
  -[AMSSQLiteConnection _verifiedStatementForPreparedStatement:error:]
  -[AMSSQLiteConnection _openAndAllowRetry:]
  -[AMSSQLiteConnection executeQuery:withResults:]
  -[AMSSQLiteConnection finalizePreparedStatement:error:]
  -[AMSSQLiteConnection executePreparedStatement:error:]
  -[AMSSQLiteConnection _open]
  -[AMSSQLiteConnection _resetAfterCorruptionError]
  -[AMSSQLiteConnection currentError]
  -[AMSSQLiteConnection setDelegate:]
  -[AMSSQLiteConnection _executeWithError:usingBlock:]
  -[AMSSQLiteConnection _finalizeAllStatements]
  -[AMSSQLiteConnection lastChangeCount]
  -[AMSSQLiteConnection _performResetAfterCorruptionError]
  -[AMSSQLiteConnection delegate]
  -[AMSSQLiteConnection executePreparedQuery:withResults:]


AMSSQLiteConnectionOptions : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *databasePath
 @property  long long cacheSize
 @property  NSString *protectionType
 @property  BOOL readOnly

  // class methods
  +[AMSSQLiteConnectionOptions supportsSecureCoding]

  // instance methods
  -[AMSSQLiteConnectionOptions initWithDatabasePath:]
  -[AMSSQLiteConnectionOptions setReadOnly:]
  -[AMSSQLiteConnectionOptions isReadOnly]
  -[AMSSQLiteConnectionOptions copyWithZone:]
  -[AMSSQLiteConnectionOptions cacheSize]
  -[AMSSQLiteConnectionOptions databasePath]
  -[AMSSQLiteConnectionOptions setProtectionType:]
  -[AMSSQLiteConnectionOptions .cxx_destruct]
  -[AMSSQLiteConnectionOptions setDatabasePath:]
  -[AMSSQLiteConnectionOptions encodeWithCoder:]
  -[AMSSQLiteConnectionOptions setCacheSizeWithNumberOfDatabasePages:]
  -[AMSSQLiteConnectionOptions setCacheSize:]
  -[AMSSQLiteConnectionOptions protectionType]
  -[AMSSQLiteConnectionOptions applyToDatabase:]
  -[AMSSQLiteConnectionOptions setCacheSizeWithNumberOfKilobytes:]
  -[AMSSQLiteConnectionOptions initWithCoder:]


AMSSQLiteCursor : NSObject /usr/lib/libSystem.B.dylib
 @property  long long numberOfColumns

  // instance methods
  -[AMSSQLiteCursor doubleForColumnIndex:]
  -[AMSSQLiteCursor int64ForColumnName:]
  -[AMSSQLiteCursor stringForColumnName:]
  -[AMSSQLiteCursor int64ForColumnIndex:]
  -[AMSSQLiteCursor numberForColumnName:]
  -[AMSSQLiteCursor stringForColumnIndex:]
  -[AMSSQLiteCursor URLForColumnName:]
  -[AMSSQLiteCursor intForColumnName:]
  -[AMSSQLiteCursor intForColumnIndex:]
  -[AMSSQLiteCursor columnIndexForColumnName:]
  -[AMSSQLiteCursor dateForColumnIndex:]
  -[AMSSQLiteCursor _columnTypeForColumnIndex:]
  -[AMSSQLiteCursor .cxx_destruct]
  -[AMSSQLiteCursor numberForColumnIndex:]
  -[AMSSQLiteCursor URLForColumnIndex:]
  -[AMSSQLiteCursor dataForColumnIndex:]
  -[AMSSQLiteCursor dataForColumnName:]
  -[AMSSQLiteCursor numberOfColumns]
  -[AMSSQLiteCursor doubleForColumnName:]
  -[AMSSQLiteCursor initWithStatement:]
  -[AMSSQLiteCursor dateForColumnName:]


AMSSQLiteEntity : NSObject /usr/lib/libSystem.B.dylib <AMSSQLiteEntity>
 @property  AMSSQLiteConnection *connection
 @property  long long persistentID
 @property  BOOL existsInDatabase
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSSQLiteEntity databaseTable]
  +[AMSSQLiteEntity disambiguatedSQLForProperty:]
  +[AMSSQLiteEntity memoryEntityClass]
  +[AMSSQLiteEntity _insertValues:intoTable:withPersistentID:onConnection:]
  +[AMSSQLiteEntity joinClauseForProperty:]
  +[AMSSQLiteEntity foreignDatabaseTablesToDelete]
  +[AMSSQLiteEntity foreignKeyColumnForTable:]
  +[AMSSQLiteEntity foreignDatabaseTableForProperty:]
  +[AMSSQLiteEntity foreignDatabaseColumnForProperty:]
  +[AMSSQLiteEntity queryOnConnection:predicate:]
  +[AMSSQLiteEntity anyOnConnection:predicate:]
  +[AMSSQLiteEntity _aggregateValueForProperty:function:predicate:onConnection:]
  +[AMSSQLiteEntity queryOnConnection:predicate:orderingProperties:]
  +[AMSSQLiteEntity countForProperty:predicate:onConnection:]
  +[AMSSQLiteEntity maxValueForProperty:predicate:onConnection:]
  +[AMSSQLiteEntity minValueForProperty:predicate:onConnection:]

  // instance methods
  -[AMSSQLiteEntity objectForKeyedSubscript:]
  -[AMSSQLiteEntity valueForProperty:]
  -[AMSSQLiteEntity .cxx_destruct]
  -[AMSSQLiteEntity setObject:forKeyedSubscript:]
  -[AMSSQLiteEntity persistentID]
  -[AMSSQLiteEntity _copyTableClusteredValuesWithValues:]
  -[AMSSQLiteEntity initWithPersistentID:onConnection:]
  -[AMSSQLiteEntity _deleteRowFromTable:usingColumn:]
  -[AMSSQLiteEntity setValuesWithDictionary:]
  -[AMSSQLiteEntity getValuesForProperties:]
  -[AMSSQLiteEntity deleteFromDatabase]
  -[AMSSQLiteEntity initWithPropertyValues:onConnection:]
  -[AMSSQLiteEntity existsInDatabase]
  -[AMSSQLiteEntity connection]
  -[AMSSQLiteEntity setValue:forProperty:]


AMSSQLiteMemoryEntity : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  long long databaseID
 @property  NSDictionary *propertyValues
 @property  NSDictionary *externalPropertyValues

  // class methods
  +[AMSSQLiteMemoryEntity databaseEntityClass]
  +[AMSSQLiteMemoryEntity defaultProperties]
  +[AMSSQLiteMemoryEntity queryOnConnection:predicate:]
  +[AMSSQLiteMemoryEntity anyOnConnection:predicate:]
  +[AMSSQLiteMemoryEntity queryOnConnection:predicate:orderingProperties:]

  // instance methods
  -[AMSSQLiteMemoryEntity databaseID]
  -[AMSSQLiteMemoryEntity setDatabaseID:]
  -[AMSSQLiteMemoryEntity copyWithZone:]
  -[AMSSQLiteMemoryEntity init]
  -[AMSSQLiteMemoryEntity valueForProperty:]
  -[AMSSQLiteMemoryEntity .cxx_destruct]
  -[AMSSQLiteMemoryEntity isEqual:]
  -[AMSSQLiteMemoryEntity setValuesWithDictionary:]
  -[AMSSQLiteMemoryEntity reloadFromDatabaseEntity:properties:]
  -[AMSSQLiteMemoryEntity setValues:forProperties:count:]
  -[AMSSQLiteMemoryEntity setValues:forExternalProperties:count:]
  -[AMSSQLiteMemoryEntity propertyValues]
  -[AMSSQLiteMemoryEntity externalPropertyValues]
  -[AMSSQLiteMemoryEntity initWithDatabaseEntity:properties:]
  -[AMSSQLiteMemoryEntity setExternalValuesWithDictionary:]
  -[AMSSQLiteMemoryEntity setValue:forExternalProperty:]
  -[AMSSQLiteMemoryEntity valueForExternalProperty:]
  -[AMSSQLiteMemoryEntity setValue:forProperty:]


AMSSQLitePredicate : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
  // instance methods
  -[AMSSQLitePredicate copyWithZone:]
  -[AMSSQLitePredicate SQLJoinClausesForEntityClass:]
  -[AMSSQLitePredicate SQLForEntityClass:]
  -[AMSSQLitePredicate isEqual:]
  -[AMSSQLitePredicate applyBinding:atIndex:]


AMSSQLitePropertyPredicate : AMSSQLitePredicate <NSCopying>
 @property  NSString *property

  // instance methods
  -[AMSSQLitePropertyPredicate copyWithZone:]
  -[AMSSQLitePropertyPredicate .cxx_destruct]
  -[AMSSQLitePropertyPredicate SQLJoinClausesForEntityClass:]
  -[AMSSQLitePropertyPredicate property]
  -[AMSSQLitePropertyPredicate isEqual:]


AMSSQLiteComparisonPredicate : AMSSQLitePropertyPredicate <NSCopying>
 @property  long long comparisonType
 @property  id value

  // class methods
  +[AMSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]
  +[AMSSQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]
  +[AMSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]

  // instance methods
  -[AMSSQLiteComparisonPredicate copyWithZone:]
  -[AMSSQLiteComparisonPredicate .cxx_destruct]
  -[AMSSQLiteComparisonPredicate comparisonType]
  -[AMSSQLiteComparisonPredicate SQLForEntityClass:]
  -[AMSSQLiteComparisonPredicate _comparisonTypeString]
  -[AMSSQLiteComparisonPredicate isEqual:]
  -[AMSSQLiteComparisonPredicate value]
  -[AMSSQLiteComparisonPredicate applyBinding:atIndex:]


AMSSQLiteContainsPredicate : AMSSQLitePropertyPredicate <NSCopying>
 @property  BOOL negative
 @property  AMSSQLiteQuery *query
 @property  NSString *queryProperty
 @property  NSArray *values

  // class methods
  +[AMSSQLiteContainsPredicate containsPredicateWithProperty:query:queryProperty:]
  +[AMSSQLiteContainsPredicate containsPredicateWithProperty:values:]
  +[AMSSQLiteContainsPredicate doesNotContainPredicateWithProperty:values:]

  // instance methods
  -[AMSSQLiteContainsPredicate copyWithZone:]
  -[AMSSQLiteContainsPredicate values]
  -[AMSSQLiteContainsPredicate isNegative]
  -[AMSSQLiteContainsPredicate queryProperty]
  -[AMSSQLiteContainsPredicate .cxx_destruct]
  -[AMSSQLiteContainsPredicate query]
  -[AMSSQLiteContainsPredicate SQLForEntityClass:]
  -[AMSSQLiteContainsPredicate isEqual:]
  -[AMSSQLiteContainsPredicate applyBinding:atIndex:]


AMSSQLiteNullPredicate : AMSSQLitePropertyPredicate <NSCopying>
 @property  BOOL matchesNull

  // class methods
  +[AMSSQLiteNullPredicate isNotNullPredicateWithProperty:]
  +[AMSSQLiteNullPredicate isNullPredicateWithProperty:]

  // instance methods
  -[AMSSQLiteNullPredicate copyWithZone:]
  -[AMSSQLiteNullPredicate matchesNull]
  -[AMSSQLiteNullPredicate SQLForEntityClass:]
  -[AMSSQLiteNullPredicate isEqual:]


AMSSQLiteCompoundPredicate : AMSSQLitePredicate <NSCopying>
 @property  NSArray *predicates

  // class methods
  +[AMSSQLiteCompoundPredicate predicateMatchingAnyPredicates:]
  +[AMSSQLiteCompoundPredicate predicateWithProperty:values:comparisonType:]
  +[AMSSQLiteCompoundPredicate predicateMatchingAllPredicates:]

  // instance methods
  -[AMSSQLiteCompoundPredicate copyWithZone:]
  -[AMSSQLiteCompoundPredicate .cxx_destruct]
  -[AMSSQLiteCompoundPredicate SQLJoinClausesForEntityClass:]
  -[AMSSQLiteCompoundPredicate SQLForEntityClass:]
  -[AMSSQLiteCompoundPredicate predicates]
  -[AMSSQLiteCompoundPredicate isEqual:]
  -[AMSSQLiteCompoundPredicate applyBinding:atIndex:]


AMSSQLitePreparedStatement : NSObject /usr/lib/libSystem.B.dylib
 @property  r^v connectionPointer
 @property  NSString *SQL

  // instance methods
  -[AMSSQLitePreparedStatement initWithConnection:SQL:]
  -[AMSSQLitePreparedStatement .cxx_destruct]
  -[AMSSQLitePreparedStatement SQL]
  -[AMSSQLitePreparedStatement connectionPointer]


AMSSQLiteQuery : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSSQLiteConnection *connection
 @property  AMSSQLiteQueryDescriptor *queryDescriptor
 @property  long long countOfEntities

  // instance methods
  -[AMSSQLiteQuery enumeratePersistentIDsAndProperties:usingBlock:]
  -[AMSSQLiteQuery enumeratePersistentIDsUsingBlock:]
  -[AMSSQLiteQuery countOfEntities]
  -[AMSSQLiteQuery queryDescriptor]
  -[AMSSQLiteQuery .cxx_destruct]
  -[AMSSQLiteQuery copySelectSQLWithProperties:]
  -[AMSSQLiteQuery applyBinding:atIndex:]
  -[AMSSQLiteQuery connection]
  -[AMSSQLiteQuery enumerateMemoryEntitiesWithProperties:usingBlock:]
  -[AMSSQLiteQuery _newSelectSQLWithProperties:]
  -[AMSSQLiteQuery initOnConnection:descriptor:]
  -[AMSSQLiteQuery copyEntityIdentifiers]
  -[AMSSQLiteQuery deleteAllEntities]
  -[AMSSQLiteQuery createTemporaryTableWithName:properties:]
  -[AMSSQLiteQuery enumerateMemoryEntitiesUsingBlock:]


AMSSQLiteQueryDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  Class entityClass
 @property  Class memoryEntityClass
 @property  long long limitCount
 @property  NSString *orderingClause
 @property  NSArray *orderingDirections
 @property  NSArray *orderingProperties
 @property  BOOL returnsDistinctEntities
 @property  AMSSQLitePredicate *predicate

  // instance methods
  -[AMSSQLiteQueryDescriptor limitCount]
  -[AMSSQLiteQueryDescriptor copyWithZone:]
  -[AMSSQLiteQueryDescriptor entityClass]
  -[AMSSQLiteQueryDescriptor setOrderingClause:]
  -[AMSSQLiteQueryDescriptor setMemoryEntityClass:]
  -[AMSSQLiteQueryDescriptor .cxx_destruct]
  -[AMSSQLiteQueryDescriptor orderingProperties]
  -[AMSSQLiteQueryDescriptor predicate]
  -[AMSSQLiteQueryDescriptor returnsDistinctEntities]
  -[AMSSQLiteQueryDescriptor setOrderingDirections:]
  -[AMSSQLiteQueryDescriptor setPredicate:]
  -[AMSSQLiteQueryDescriptor setLimitCount:]
  -[AMSSQLiteQueryDescriptor orderingClause]
  -[AMSSQLiteQueryDescriptor memoryEntityClass]
  -[AMSSQLiteQueryDescriptor setEntityClass:]
  -[AMSSQLiteQueryDescriptor _newSelectSQLWithProperties:columns:]
  -[AMSSQLiteQueryDescriptor setOrderingProperties:]
  -[AMSSQLiteQueryDescriptor setReturnsDistinctEntities:]
  -[AMSSQLiteQueryDescriptor orderingDirections]


AMSSQLiteQueryResults : NSObject /usr/lib/libSystem.B.dylib <AMSSQLiteBinding>
 @property  long long firstInt64Value
 @property  NSNumber *firstNumberValue
 @property  BOOL hasRows
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSSQLiteQueryResults bindInt64:atPosition:]
  -[AMSSQLiteQueryResults bindData:atPosition:]
  -[AMSSQLiteQueryResults bindFloat:atPosition:]
  -[AMSSQLiteQueryResults .cxx_destruct]
  -[AMSSQLiteQueryResults hasRows]
  -[AMSSQLiteQueryResults clearBindings]
  -[AMSSQLiteQueryResults bindDataCopy:atPosition:]
  -[AMSSQLiteQueryResults bindStringCopy:atPosition:]
  -[AMSSQLiteQueryResults bindNullableString:atPosition:]
  -[AMSSQLiteQueryResults bindInt:atPosition:]
  -[AMSSQLiteQueryResults firstNumberValue]
  -[AMSSQLiteQueryResults bindDictionary:atPosition:]
  -[AMSSQLiteQueryResults firstInt64Value]
  -[AMSSQLiteQueryResults bindString:atPosition:]
  -[AMSSQLiteQueryResults bindDate:atPosition:]
  -[AMSSQLiteQueryResults initWithStatement:]
  -[AMSSQLiteQueryResults bindDouble:atPosition:]
  -[AMSSQLiteQueryResults bindArray:atPosition:]
  -[AMSSQLiteQueryResults bindNullAtPosition:]
  -[AMSSQLiteQueryResults bindNumber:atPosition:]
  -[AMSSQLiteQueryResults enumerateRowsUsingBlock:]
  -[AMSSQLiteQueryResults bindURL:atPosition:]


AMSSQLiteSchema : NSObject /usr/lib/libSystem.B.dylib
 @property  long long currentUserVersion

  // instance methods
  -[AMSSQLiteSchema .cxx_destruct]
  -[AMSSQLiteSchema tableExists:]
  -[AMSSQLiteSchema currentUserVersion]
  -[AMSSQLiteSchema initWithConnection:]
  -[AMSSQLiteSchema column:existsInTable:]
  -[AMSSQLiteSchema _setUserVersion:]
  -[AMSSQLiteSchema migrateToVersion:usingBlock:]


AMSQRCodeDialogTask : AMSSystemAlertDialogTask
  // instance methods
  -[AMSQRCodeDialogTask _createNoteDictionaryWithKeys:buttonActions:outOptions:]


AMSSQLiteSchemaMigration : NSObject /usr/lib/libSystem.B.dylib
 @property  NSError *error
 @property  BOOL success

  // instance methods
  -[AMSSQLiteSchemaMigration success]
  -[AMSSQLiteSchemaMigration .cxx_destruct]
  -[AMSSQLiteSchemaMigration executeStatement:]
  -[AMSSQLiteSchemaMigration initWithConnection:]
  -[AMSSQLiteSchemaMigration error]
  -[AMSSQLiteSchemaMigration executeOptionalStatement:]
  -[AMSSQLiteSchemaMigration executeStatement:bindings:]
  -[AMSSQLiteSchemaMigration _executeStatement:canFailMigration:bindings:]
  -[AMSSQLiteSchemaMigration executeOptionalStatement:bindings:]


AMSSQLiteStatement : NSObject /usr/lib/libSystem.B.dylib <AMSSQLiteBinding>
 @property  AMSSQLiteConnection *connection
 @property  ^{sqlite3_stmt=} sqlite3_stmt
 @property  NSDictionary *columnIndexByName
 @property  BOOL readOnly
 @property  NSString *SQL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSSQLiteStatement isReadOnly]
  -[AMSSQLiteStatement bindInt64:atPosition:]
  -[AMSSQLiteStatement initWithStatement:onConnection:]
  -[AMSSQLiteStatement bindData:atPosition:]
  -[AMSSQLiteStatement bindFloat:atPosition:]
  -[AMSSQLiteStatement finalizeStatement]
  -[AMSSQLiteStatement .cxx_destruct]
  -[AMSSQLiteStatement clearBindings]
  -[AMSSQLiteStatement bindDataCopy:atPosition:]
  -[AMSSQLiteStatement bindStringCopy:atPosition:]
  -[AMSSQLiteStatement sqlite3_stmt]
  -[AMSSQLiteStatement SQL]
  -[AMSSQLiteStatement bindNullableString:atPosition:]
  -[AMSSQLiteStatement bindInt:atPosition:]
  -[AMSSQLiteStatement bindDictionary:atPosition:]
  -[AMSSQLiteStatement columnIndexByName]
  -[AMSSQLiteStatement reset]
  -[AMSSQLiteStatement bindString:atPosition:]
  -[AMSSQLiteStatement step]
  -[AMSSQLiteStatement bindDate:atPosition:]
  -[AMSSQLiteStatement bindDouble:atPosition:]
  -[AMSSQLiteStatement bindArray:atPosition:]
  -[AMSSQLiteStatement connection]
  -[AMSSQLiteStatement bindNullAtPosition:]
  -[AMSSQLiteStatement bindNumber:atPosition:]
  -[AMSSQLiteStatement bindURL:atPosition:]


AMSSubscriptionEntitlement : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL autoRenewEnabled
 @property  NSDate *expiration
 @property  BOOL familySubscription
 @property  BOOL freeTrialEligible
 @property  NSNumber *inAppAdamId
 @property  NSString *inAppVersion
 @property  NSString *offerId
 @property  unsigned long period
 @property  BOOL purchaser
 @property  unsigned int source
 @property  unsigned int status
 @property  long long carrierErrorCode
 @property  NSString *carrierOperatorName
 @property  NSString *carrierPhoneNumber
 @property  NSString *carrierSessionId
 @property  BOOL carrierRequiresVerification
 @property  BOOL carrierStatusUnknown
 @property  BOOL carrierUnlinked

  // instance methods
  -[AMSSubscriptionEntitlement period]
  -[AMSSubscriptionEntitlement init]
  -[AMSSubscriptionEntitlement setSource:]
  -[AMSSubscriptionEntitlement offerId]
  -[AMSSubscriptionEntitlement source]
  -[AMSSubscriptionEntitlement .cxx_destruct]
  -[AMSSubscriptionEntitlement exportObject]
  -[AMSSubscriptionEntitlement setPurchaser:]
  -[AMSSubscriptionEntitlement purchaser]
  -[AMSSubscriptionEntitlement setStatus:]
  -[AMSSubscriptionEntitlement inAppVersion]
  -[AMSSubscriptionEntitlement expiration]
  -[AMSSubscriptionEntitlement setPeriod:]
  -[AMSSubscriptionEntitlement autoRenewEnabled]
  -[AMSSubscriptionEntitlement carrierOperatorName]
  -[AMSSubscriptionEntitlement carrierPhoneNumber]
  -[AMSSubscriptionEntitlement freeTrialEligible]
  -[AMSSubscriptionEntitlement carrierErrorCode]
  -[AMSSubscriptionEntitlement familySubscription]
  -[AMSSubscriptionEntitlement carrierRequiresVerification]
  -[AMSSubscriptionEntitlement carrierSessionId]
  -[AMSSubscriptionEntitlement carrierStatusUnknown]
  -[AMSSubscriptionEntitlement setExpiration:]
  -[AMSSubscriptionEntitlement carrierUnlinked]
  -[AMSSubscriptionEntitlement setAutoRenewEnabled:]
  -[AMSSubscriptionEntitlement setFamilySubscription:]
  -[AMSSubscriptionEntitlement setInAppAdamId:]
  -[AMSSubscriptionEntitlement setFreeTrialEligible:]
  -[AMSSubscriptionEntitlement setInAppVersion:]
  -[AMSSubscriptionEntitlement setCarrierErrorCode:]
  -[AMSSubscriptionEntitlement setCarrierSessionId:]
  -[AMSSubscriptionEntitlement setCarrierOperatorName:]
  -[AMSSubscriptionEntitlement setCarrierPhoneNumber:]
  -[AMSSubscriptionEntitlement setCarrierRequiresVerification:]
  -[AMSSubscriptionEntitlement setCarrierStatusUnknown:]
  -[AMSSubscriptionEntitlement setCarrierUnlinked:]
  -[AMSSubscriptionEntitlement status]
  -[AMSSubscriptionEntitlement inAppAdamId]
  -[AMSSubscriptionEntitlement setOfferId:]


AMSSubscriptionEntitlementsResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *appAdamId
 @property  NSNumber *appVersion
 @property  NSDictionary *entitlements
 @property  NSDictionary *serverResponse

  // instance methods
  -[AMSSubscriptionEntitlementsResult setAppVersion:]
  -[AMSSubscriptionEntitlementsResult appVersion]
  -[AMSSubscriptionEntitlementsResult serverResponse]
  -[AMSSubscriptionEntitlementsResult setEntitlements:]
  -[AMSSubscriptionEntitlementsResult .cxx_destruct]
  -[AMSSubscriptionEntitlementsResult exportObject]
  -[AMSSubscriptionEntitlementsResult entitlements]
  -[AMSSubscriptionEntitlementsResult appAdamId]
  -[AMSSubscriptionEntitlementsResult setAppAdamId:]
  -[AMSSubscriptionEntitlementsResult setServerResponse:]


AMSSubscriptionEntitlementsTask : AMSTask
 @property  long long cachePolicy
 @property  BOOL extendedCarrierCheck
 @property  long long mediaType

  // class methods
  +[AMSSubscriptionEntitlementsTask updateCacheForMediaType:account:data:]
  +[AMSSubscriptionEntitlementsTask _segmentForMediaType:error:]

  // instance methods
  -[AMSSubscriptionEntitlementsTask setCachePolicy:]
  -[AMSSubscriptionEntitlementsTask setMediaType:]
  -[AMSSubscriptionEntitlementsTask mediaType]
  -[AMSSubscriptionEntitlementsTask cachePolicy]
  -[AMSSubscriptionEntitlementsTask _fetchEntitlementsFromIC]
  -[AMSSubscriptionEntitlementsTask _fetchEntitlementsFromASD]
  -[AMSSubscriptionEntitlementsTask performExternalLookup]
  -[AMSSubscriptionEntitlementsTask _shouldIgnoreCaches]
  -[AMSSubscriptionEntitlementsTask _resultFromASDEntitlements:]
  -[AMSSubscriptionEntitlementsTask _reloadASDSubscriptionForSegment:controller:]
  -[AMSSubscriptionEntitlementsTask _shouldIgnoreRemoteData]
  -[AMSSubscriptionEntitlementsTask _queryCachedASDSubscriptionForSegment:controller:reloadIfNeeded:]
  -[AMSSubscriptionEntitlementsTask extendedCarrierCheck]
  -[AMSSubscriptionEntitlementsTask _resultFromICResponse:]
  -[AMSSubscriptionEntitlementsTask setExtendedCarrierCheck:]
  -[AMSSubscriptionEntitlementsTask initWithMediaType:]


AMSSyncPasswordSettingsResult : NSObject /usr/lib/libSystem.B.dylib

AMSSyncPasswordSettingsTask : AMSTask <AMSURLProtocolDelegate, AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  <NSURLSessionDelegate><AMSURLProtocolDelegate> *delegate
 @property  unsigned long freeSetting
 @property  unsigned long paidSetting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSSyncPasswordSettingsTask freePasswordSettingFromServerValue:]
  +[AMSSyncPasswordSettingsTask createBagForSubProfile]
  +[AMSSyncPasswordSettingsTask bagKeySet]
  +[AMSSyncPasswordSettingsTask paidPasswordSettingFromServerValue:]
  +[AMSSyncPasswordSettingsTask serverValueForFreePasswordSetting:]
  +[AMSSyncPasswordSettingsTask bagSubProfileVersion]
  +[AMSSyncPasswordSettingsTask serverValueForPaidPasswordSetting:]
  +[AMSSyncPasswordSettingsTask addRequiredBagKeysToAggregator:]
  +[AMSSyncPasswordSettingsTask bagSubProfile]

  // instance methods
  -[AMSSyncPasswordSettingsTask account]
  -[AMSSyncPasswordSettingsTask .cxx_destruct]
  -[AMSSyncPasswordSettingsTask bag]
  -[AMSSyncPasswordSettingsTask clientInfo]
  -[AMSSyncPasswordSettingsTask setClientInfo:]
  -[AMSSyncPasswordSettingsTask performSync]
  -[AMSSyncPasswordSettingsTask initWithAccount:freeSetting:paidSetting:delegate:bag:]
  -[AMSSyncPasswordSettingsTask delegate]
  -[AMSSyncPasswordSettingsTask freeSetting]
  -[AMSSyncPasswordSettingsTask paidSetting]


AMSSystemAlertDialogTask : AMSTask
 @property  long long defaultButtonIndex
 @property  BOOL dismissOnHomeButton
 @property  BOOL dismissOnLock
 @property  BOOL shouldDismissAfterUnlock
 @property  BOOL shouldDisplayAsTopMost
 @property  BOOL shouldPendInSetupIfNotAllowed
 @property  BOOL displaysOnLockscreen
 @property  long long unlockActionButtonIndex
 @property  AMSDialogRequest *request

  // instance methods
  -[AMSSystemAlertDialogTask initWithRequest:]
  -[AMSSystemAlertDialogTask dismissOnLock]
  -[AMSSystemAlertDialogTask .cxx_destruct]
  -[AMSSystemAlertDialogTask present]
  -[AMSSystemAlertDialogTask setDefaultButtonIndex:]
  -[AMSSystemAlertDialogTask defaultButtonIndex]
  -[AMSSystemAlertDialogTask _createNoteDictionaryWithKeys:buttonActions:outOptions:]
  -[AMSSystemAlertDialogTask request]
  -[AMSSystemAlertDialogTask _reorderButtonActions]
  -[AMSSystemAlertDialogTask _showNotificationFromDictionary:options:]
  -[AMSSystemAlertDialogTask _handleResponseForNote:buttonActions:keys:]
  -[AMSSystemAlertDialogTask _keyboardTypeFor:]
  -[AMSSystemAlertDialogTask dismissOnHomeButton]
  -[AMSSystemAlertDialogTask _defaultButtonIndexForActions:]
  -[AMSSystemAlertDialogTask unlockActionButtonIndex]
  -[AMSSystemAlertDialogTask displaysOnLockscreen]
  -[AMSSystemAlertDialogTask shouldDisplayAsTopMost]
  -[AMSSystemAlertDialogTask shouldDismissAfterUnlock]
  -[AMSSystemAlertDialogTask shouldPendInSetupIfNotAllowed]
  -[AMSSystemAlertDialogTask setDismissOnHomeButton:]
  -[AMSSystemAlertDialogTask setDismissOnLock:]
  -[AMSSystemAlertDialogTask setShouldDismissAfterUnlock:]
  -[AMSSystemAlertDialogTask setShouldDisplayAsTopMost:]
  -[AMSSystemAlertDialogTask setShouldPendInSetupIfNotAllowed:]
  -[AMSSystemAlertDialogTask setDisplaysOnLockscreen:]
  -[AMSSystemAlertDialogTask setUnlockActionButtonIndex:]


AMSTask : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *performTaskQueue
 @property  AMSPromise *promise
 @property  NSObject<OS_dispatch_queue> *promiseAccessQueue
 @property  BOOL cancelled
 @property  BOOL finished
 @property  BOOL running
 @property  long long runMode

  // class methods
  +[AMSTask taskCache]
  +[AMSTask taskCacheAccessQueue]

  // instance methods
  -[AMSTask isCancelled]
  -[AMSTask promise]
  -[AMSTask init]
  -[AMSTask setPromise:]
  -[AMSTask .cxx_destruct]
  -[AMSTask isFinished]
  -[AMSTask runMode]
  -[AMSTask cancel]
  -[AMSTask isRunning]
  -[AMSTask performBinaryTaskWithBlock:]
  -[AMSTask promiseAccessQueue]
  -[AMSTask setPerformTaskQueue:]
  -[AMSTask performTaskQueue]
  -[AMSTask setPromiseAccessQueue:]
  -[AMSTask performTaskWithBlock:]
  -[AMSTask performTaskWithPromiseBlock:]
  -[AMSTask setRunMode:]


AMSThreadSafeDictionary : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *backingDictionary
 @property  NSObject<OS_dispatch_queue> *backingDictionaryAccessQueue
 @property  NSArray *allKeys
 @property  NSArray *allValues

  // instance methods
  -[AMSThreadSafeDictionary objectForKeyedSubscript:]
  -[AMSThreadSafeDictionary init]
  -[AMSThreadSafeDictionary removeObjectForKey:]
  -[AMSThreadSafeDictionary .cxx_destruct]
  -[AMSThreadSafeDictionary removeAllObjects]
  -[AMSThreadSafeDictionary setObject:forKeyedSubscript:]
  -[AMSThreadSafeDictionary setObject:forKey:]
  -[AMSThreadSafeDictionary objectForKey:]
  -[AMSThreadSafeDictionary setBackingDictionary:]
  -[AMSThreadSafeDictionary allValues]
  -[AMSThreadSafeDictionary allKeys]
  -[AMSThreadSafeDictionary backingDictionaryAccessQueue]
  -[AMSThreadSafeDictionary setBackingDictionaryAccessQueue:]
  -[AMSThreadSafeDictionary backingDictionary]


AMSThreadSafeObject : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *objectAccessQueue
 @property  id object

  // instance methods
  -[AMSThreadSafeObject object]
  -[AMSThreadSafeObject initWithObject:]
  -[AMSThreadSafeObject init]
  -[AMSThreadSafeObject .cxx_destruct]
  -[AMSThreadSafeObject setObject:]
  -[AMSThreadSafeObject objectAccessQueue]
  -[AMSThreadSafeObject accessAndSetObjectWithBlock:]
  -[AMSThreadSafeObject setObjectAccessQueue:]


AMSThreadSafeSet : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableSet *backingSet
 @property  NSObject<OS_dispatch_queue> *backingSetAccessQueue
 @property  NSArray *allObjects
 @property  unsigned long count

  // instance methods
  -[AMSThreadSafeSet init]
  -[AMSThreadSafeSet removeObject:]
  -[AMSThreadSafeSet .cxx_destruct]
  -[AMSThreadSafeSet backingSetAccessQueue]
  -[AMSThreadSafeSet setBackingSetAccessQueue:]
  -[AMSThreadSafeSet setBackingSet:]
  -[AMSThreadSafeSet allObjects]
  -[AMSThreadSafeSet count]
  -[AMSThreadSafeSet addObject:]
  -[AMSThreadSafeSet backingSet]


AMSUniqueExecutionQueue : NSObject /usr/lib/libSystem.B.dylib
 @property  @? block
 @property  NSObject<OS_dispatch_queue> *completionCallbacksQueue
 @property  NSObject<OS_dispatch_queue> *executeBlockQueue
 @property  AMSPromise *executionPromise
 @property  NSObject<OS_dispatch_queue> *executionPromiseAccessQueue

  // instance methods
  -[AMSUniqueExecutionQueue initWithBlock:]
  -[AMSUniqueExecutionQueue .cxx_destruct]
  -[AMSUniqueExecutionQueue block]
  -[AMSUniqueExecutionQueue setBlock:]
  -[AMSUniqueExecutionQueue addCompletionBlock:]
  -[AMSUniqueExecutionQueue executionPromiseAccessQueue]
  -[AMSUniqueExecutionQueue executionPromise]
  -[AMSUniqueExecutionQueue _createExecutionPromise]
  -[AMSUniqueExecutionQueue _beginExecutingBlockWithPromise:]
  -[AMSUniqueExecutionQueue executeBlockQueue]
  -[AMSUniqueExecutionQueue completionCallbacksQueue]
  -[AMSUniqueExecutionQueue setExecutionPromise:]
  -[AMSUniqueExecutionQueue setCompletionCallbacksQueue:]
  -[AMSUniqueExecutionQueue addCompletionBlockForSubsequentExecution:]
  -[AMSUniqueExecutionQueue setExecuteBlockQueue:]


AMSUnitTests : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSUnitTests encryptionKeyForDataProtectionClass:]
  +[AMSUnitTests setEncryptionKey:forDataProtectionClass:]
  +[AMSUnitTests _encryptionKeys]
  +[AMSUnitTests _sync:]
  +[AMSUnitTests isRunningUnitTests]


AMSUNUserNotificationStrategy : NSObject /usr/lib/libSystem.B.dylib <AMSUserNotificationStrategy>
  // class methods
  +[AMSUNUserNotificationStrategy _centerForBundleId:]
  +[AMSUNUserNotificationStrategy _activeNotificationsWithCenterBundleId:]
  +[AMSUNUserNotificationStrategy _badgeBundleId:increment:error:]
  +[AMSUNUserNotificationStrategy _postNotification:bag:centerBundleId:]
  +[AMSUNUserNotificationStrategy _removeNotification:centerBundleId:]
  +[AMSUNUserNotificationStrategy _removeNotificationWithIdentifier:centerBundleId:logKey:scheduledOnly:]


AMSURLDelegateProxy : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSURLSession *session
 @property  id delegate

  // instance methods
  -[AMSURLDelegateProxy forwardInvocation:]
  -[AMSURLDelegateProxy initWithSession:delegate:]
  -[AMSURLDelegateProxy methodSignatureForSelector:]
  -[AMSURLDelegateProxy forwardingTargetForSelector:]
  -[AMSURLDelegateProxy session]
  -[AMSURLDelegateProxy respondsToSelector:]
  -[AMSURLDelegateProxy .cxx_destruct]
  -[AMSURLDelegateProxy setDelegate:]
  -[AMSURLDelegateProxy invalidate]
  -[AMSURLDelegateProxy delegate]


AMSURLAction : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  AMSAuthenticateResult *authenticateResult
 @property  AMSDialogResult *dialogResult
 @property  NSDictionary *updatedHeaders
 @property  long long actionType
 @property  NSError *error
 @property  NSString *reason
 @property  NSURL *redirectURL
 @property  NSString *retryIdentifier

  // class methods
  +[AMSURLAction supportsSecureCoding]
  +[AMSURLAction redirectActionWithURL:]
  +[AMSURLAction proceedAction]
  +[AMSURLAction retryAction]
  +[AMSURLAction actionWithError:]

  // instance methods
  -[AMSURLAction actionType]
  -[AMSURLAction updatedHeaders]
  -[AMSURLAction setReason:]
  -[AMSURLAction initWithType:]
  -[AMSURLAction .cxx_destruct]
  -[AMSURLAction encodeWithCoder:]
  -[AMSURLAction setDialogResult:]
  -[AMSURLAction setRetryIdentifier:]
  -[AMSURLAction authenticateResult]
  -[AMSURLAction setAuthenticateResult:]
  -[AMSURLAction error]
  -[AMSURLAction retryIdentifier]
  -[AMSURLAction dialogResult]
  -[AMSURLAction setUpdatedHeaders:]
  -[AMSURLAction initWithType:error:reason:redirectURL:]
  -[AMSURLAction redirectURL]
  -[AMSURLAction reason]
  -[AMSURLAction initWithCoder:]


AMSURLParser : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer_Project, AMSBagConsumer>
 @property  <AMSBagProtocol> *bag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSURLParser createBagForSubProfile]
  +[AMSURLParser bagKeySet]
  +[AMSURLParser bagSubProfileVersion]
  +[AMSURLParser addRequiredBagKeysToAggregator:]
  +[AMSURLParser bagSubProfile]

  // instance methods
  -[AMSURLParser initWithBag:]
  -[AMSURLParser bagContract]
  -[AMSURLParser .cxx_destruct]
  -[AMSURLParser isCommerceUIURL:]
  -[AMSURLParser setBag:]
  -[AMSURLParser bag]
  -[AMSURLParser initWithBagContract:]
  -[AMSURLParser _commerceUIArrayForKey:]
  -[AMSURLParser _matchURL:toPatterns:]
  -[AMSURLParser _defaultWebAllowedForURL:]
  -[AMSURLParser _dynamicUIAllowedForURL:]
  -[AMSURLParser _legacyWebAllowedForURL:]
  -[AMSURLParser _waitForPromises:block:]
  -[AMSURLParser typeForCommerceUIURL:]
  -[AMSURLParser typeForURL:]


AMSURLProtocolHandler : NSObject /usr/lib/libSystem.B.dylib <AMSURLHandling>
 @property  NSObject<OS_dispatch_queue> *responsePingQueue
 @property  NSObject<OS_dispatch_queue> *metricsQueue
 @property  AMSSigningSecurityService *signingService
 @property  AMSURLSession *session
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSURLProtocolHandler _randomDouble]
  +[AMSURLProtocolHandler reversePushSamplingPercentageForTask:]

  // instance methods
  -[AMSURLProtocolHandler reconfigureNewRequest:originalTask:redirect:error:]
  -[AMSURLProtocolHandler metricsQueue]
  -[AMSURLProtocolHandler setSession:]
  -[AMSURLProtocolHandler init]
  -[AMSURLProtocolHandler signingService]
  -[AMSURLProtocolHandler setResponsePingQueue:]
  -[AMSURLProtocolHandler session]
  -[AMSURLProtocolHandler _shouldEnableReversePushForTask:]
  -[AMSURLProtocolHandler .cxx_destruct]
  -[AMSURLProtocolHandler didCreateTask:fromRequest:error:]
  -[AMSURLProtocolHandler setMetricsQueue:]
  -[AMSURLProtocolHandler _setResponseCookiesFromResponse:taskInfo:]
  -[AMSURLProtocolHandler handleResponse:task:]
  -[AMSURLProtocolHandler responsePingQueue]
  -[AMSURLProtocolHandler decodeData:task:error:]
  -[AMSURLProtocolHandler _pingURL:session:bag:]
  -[AMSURLProtocolHandler _URLIsTrustedFromRequest:bag:]
  -[AMSURLProtocolHandler handleCompletionWithTask:metrics:decodedObject:]
  -[AMSURLProtocolHandler reportMetricsForTaskInfo:decodedObject:]


AMSURLRequest : NSMutableURLRequest /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <NSCopying, NSMutableCopying>
 @property  AMSURLRequestProperties *properties

  // instance methods
  -[AMSURLRequest copyWithZone:]
  -[AMSURLRequest initWithRequest:]
  -[AMSURLRequest .cxx_destruct]
  -[AMSURLRequest setProperties:]
  -[AMSURLRequest initWithRequest:bag:]
  -[AMSURLRequest properties]
  -[AMSURLRequest mutableCopyWithZone:]


AMSURLRequestEncoder : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer_Project, AMSBagConsumer, AMSRequestEncoding>
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  long long encodeCount
 @property  AMSSigningSecurityService *signingService
 @property  NSURLSessionTask *parentTask
 @property  ACAccount *account
 @property  NSDictionary *additionalMetrics
 @property  long long anisetteType
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  BOOL compressRequestBody
 @property  BOOL disableResponseDecoding
 @property  long long dialogOptions
 @property  BOOL enableRemoteSecuritySigning
 @property  BOOL includeClientVersions
 @property  AMSKeychainOptions *keychainOptions
 @property  NSString *logUUID
 @property  long long mescalType
 @property  long long requestEncoding
 @property  <AMSResponseDecoding> *responseDecoder
 @property  BOOL shouldSetCookiesFromResponse
 @property  BOOL shouldSetStorefrontFromResponse
 @property  BOOL urlKnownToBeTrusted
 @property  <AMSURLBagContract> *bagContract
 @property  long long dataEncoding
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSURLRequestEncoder createBagForSubProfile]
  +[AMSURLRequestEncoder bagKeySet]
  +[AMSURLRequestEncoder bagSubProfileVersion]
  +[AMSURLRequestEncoder addRequiredBagKeysToAggregator:]
  +[AMSURLRequestEncoder bagSubProfile]

  // instance methods
  -[AMSURLRequestEncoder setAdditionalMetrics:]
  -[AMSURLRequestEncoder keychainOptions]
  -[AMSURLRequestEncoder internalQueue]
  -[AMSURLRequestEncoder setInternalQueue:]
  -[AMSURLRequestEncoder requestWithMethod:URLString:parameters:error:]
  -[AMSURLRequestEncoder setBagContract:]
  -[AMSURLRequestEncoder requestWithMethod:bagURL:parameters:]
  -[AMSURLRequestEncoder requestWithMethod:URL:error:]
  -[AMSURLRequestEncoder init]
  -[AMSURLRequestEncoder signingService]
  -[AMSURLRequestEncoder shouldSetStorefrontFromResponse]
  -[AMSURLRequestEncoder setShouldSetCookiesFromResponse:]
  -[AMSURLRequestEncoder initWithBag:]
  -[AMSURLRequestEncoder logUUID]
  -[AMSURLRequestEncoder requestByEncodingRequest:parameters:]
  -[AMSURLRequestEncoder enableRemoteSecuritySigning]
  -[AMSURLRequestEncoder setLogUUID:]
  -[AMSURLRequestEncoder setShouldSetStorefrontFromResponse:]
  -[AMSURLRequestEncoder requestWithMethod:URLString:error:]
  -[AMSURLRequestEncoder setDisableResponseDecoding:]
  -[AMSURLRequestEncoder setMescalType:]
  -[AMSURLRequestEncoder requestWithMethod:bagURL:error:]
  -[AMSURLRequestEncoder setAccount:]
  -[AMSURLRequestEncoder account]
  -[AMSURLRequestEncoder _addSecuritySigningHeadersToRequest:buyParams:bag:]
  -[AMSURLRequestEncoder bagContract]
  -[AMSURLRequestEncoder .cxx_destruct]
  -[AMSURLRequestEncoder requestByEncodingRequest:parameters:error:]
  -[AMSURLRequestEncoder includeClientVersions]
  -[AMSURLRequestEncoder setParentTask:]
  -[AMSURLRequestEncoder setAnisetteType:]
  -[AMSURLRequestEncoder requestWithMethod:URL:parameters:]
  -[AMSURLRequestEncoder setBag:]
  -[AMSURLRequestEncoder bag]
  -[AMSURLRequestEncoder setUrlKnownToBeTrusted:]
  -[AMSURLRequestEncoder initWithBagContract:]
  -[AMSURLRequestEncoder setRequestEncoding:]
  -[AMSURLRequestEncoder setResponseDecoder:]
  -[AMSURLRequestEncoder setKeychainOptions:]
  -[AMSURLRequestEncoder requestWithMethod:URL:parameters:error:]
  -[AMSURLRequestEncoder clientInfo]
  -[AMSURLRequestEncoder parentTask]
  -[AMSURLRequestEncoder _methodStringFromMethod:]
  -[AMSURLRequestEncoder setEnableRemoteSecuritySigning:]
  -[AMSURLRequestEncoder anisetteType]
  -[AMSURLRequestEncoder encodeCount]
  -[AMSURLRequestEncoder setEncodeCount:]
  -[AMSURLRequestEncoder setClientInfo:]
  -[AMSURLRequestEncoder compressRequestBody]
  -[AMSURLRequestEncoder responseDecoder]
  -[AMSURLRequestEncoder dataEncoding]
  -[AMSURLRequestEncoder shouldSetCookiesFromResponse]
  -[AMSURLRequestEncoder setDataEncoding:]
  -[AMSURLRequestEncoder dialogOptions]
  -[AMSURLRequestEncoder urlKnownToBeTrusted]
  -[AMSURLRequestEncoder setDialogOptions:]
  -[AMSURLRequestEncoder requestWithMethod:bagURL:parameters:error:]
  -[AMSURLRequestEncoder setCompressRequestBody:]
  -[AMSURLRequestEncoder mescalType]
  -[AMSURLRequestEncoder setIncludeClientVersions:]
  -[AMSURLRequestEncoder additionalMetrics]
  -[AMSURLRequestEncoder requestEncoding]
  -[AMSURLRequestEncoder disableResponseDecoding]


AMSURLRequestProperties : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying>
 @property  ACAccount *account
 @property  NSDictionary *additionalMetrics
 @property  long long anisetteType
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  long long dialogOptions
 @property  BOOL disableLoadURLMetrics
 @property  AMSKeychainOptions *keychainOptions
 @property  BOOL knownToBeTrusted
 @property  NSString *logUUID
 @property  long long maxRetryCount
 @property  long long mescalType
 @property  AMSPurchaseInfo *purchaseInfo
 @property  BOOL remoteSecuritySigningEnabled
 @property  <AMSResponseDecoding> *responseDecoder
 @property  BOOL disableResponseDecoding
 @property  long long reversePushType
 @property  BOOL shouldSetCookiesFromResponse
 @property  BOOL shouldSetStorefrontFromResponse
 @property  NSMutableDictionary *userInfo

  // instance methods
  -[AMSURLRequestProperties setAdditionalMetrics:]
  -[AMSURLRequestProperties reversePushType]
  -[AMSURLRequestProperties keychainOptions]
  -[AMSURLRequestProperties copyWithZone:]
  -[AMSURLRequestProperties init]
  -[AMSURLRequestProperties shouldSetStorefrontFromResponse]
  -[AMSURLRequestProperties knownToBeTrusted]
  -[AMSURLRequestProperties setShouldSetCookiesFromResponse:]
  -[AMSURLRequestProperties logUUID]
  -[AMSURLRequestProperties setUserInfo:]
  -[AMSURLRequestProperties setLogUUID:]
  -[AMSURLRequestProperties setShouldSetStorefrontFromResponse:]
  -[AMSURLRequestProperties setDisableResponseDecoding:]
  -[AMSURLRequestProperties setMescalType:]
  -[AMSURLRequestProperties setAccount:]
  -[AMSURLRequestProperties setKnownToBeTrusted:]
  -[AMSURLRequestProperties account]
  -[AMSURLRequestProperties .cxx_destruct]
  -[AMSURLRequestProperties remoteSecuritySigningEnabled]
  -[AMSURLRequestProperties disableLoadURLMetrics]
  -[AMSURLRequestProperties setAnisetteType:]
  -[AMSURLRequestProperties purchaseInfo]
  -[AMSURLRequestProperties setBag:]
  -[AMSURLRequestProperties bag]
  -[AMSURLRequestProperties userInfo]
  -[AMSURLRequestProperties setResponseDecoder:]
  -[AMSURLRequestProperties setKeychainOptions:]
  -[AMSURLRequestProperties clientInfo]
  -[AMSURLRequestProperties setRemoteSecuritySigningEnabled:]
  -[AMSURLRequestProperties setMaxRetryCount:]
  -[AMSURLRequestProperties anisetteType]
  -[AMSURLRequestProperties setClientInfo:]
  -[AMSURLRequestProperties setPurchaseInfo:]
  -[AMSURLRequestProperties responseDecoder]
  -[AMSURLRequestProperties shouldSetCookiesFromResponse]
  -[AMSURLRequestProperties dialogOptions]
  -[AMSURLRequestProperties maxRetryCount]
  -[AMSURLRequestProperties setDisableLoadURLMetrics:]
  -[AMSURLRequestProperties mutableCopyWithZone:]
  -[AMSURLRequestProperties setDialogOptions:]
  -[AMSURLRequestProperties setReversePushType:]
  -[AMSURLRequestProperties mescalType]
  -[AMSURLRequestProperties additionalMetrics]
  -[AMSURLRequestProperties disableResponseDecoding]


AMSURLResponseDecoder : NSObject /usr/lib/libSystem.B.dylib <AMSResponseDecoding>
 @property  NSIndexSet *allowedStatusCodes
 @property  NSSet *allowedContentTypes

  // instance methods
  -[AMSURLResponseDecoder setAllowedContentTypes:]
  -[AMSURLResponseDecoder init]
  -[AMSURLResponseDecoder setAllowedStatusCodes:]
  -[AMSURLResponseDecoder resultFromResult:error:]
  -[AMSURLResponseDecoder .cxx_destruct]
  -[AMSURLResponseDecoder allowedContentTypes]
  -[AMSURLResponseDecoder allowedStatusCodes]


AMSURLResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *data
 @property  NSString *logUUID
 @property  NSURLSessionTaskMetrics *taskMetrics
 @property  NSURLResponse *response
 @property  NSURLSessionTask *task
 @property  id object
 @property  NSString *responseCorrelationId
 @property  long long responseStatusCode
 @property  NSDictionary *responseHeaders

  // instance methods
  -[AMSURLResult taskMetrics]
  -[AMSURLResult object]
  -[AMSURLResult setData:]
  -[AMSURLResult responseStatusCode]
  -[AMSURLResult logUUID]
  -[AMSURLResult responseHeaders]
  -[AMSURLResult setLogUUID:]
  -[AMSURLResult initWithTaskInfo:object:]
  -[AMSURLResult initWithResult:]
  -[AMSURLResult .cxx_destruct]
  -[AMSURLResult setObject:]
  -[AMSURLResult responseCorrelationId]
  -[AMSURLResult initWithTask:response:data:object:]
  -[AMSURLResult data]
  -[AMSURLResult setTask:]
  -[AMSURLResult setResponse:]
  -[AMSURLResult task]
  -[AMSURLResult response]


AMSURLSecurityPolicy : NSObject /usr/lib/libSystem.B.dylib
 @property  long long trustMode
 @property  NSSet *pinnedCertificates

  // class methods
  +[AMSURLSecurityPolicy defaultPolicy]

  // instance methods
  -[AMSURLSecurityPolicy .cxx_destruct]
  -[AMSURLSecurityPolicy trustMode]
  -[AMSURLSecurityPolicy setTrustMode:]
  -[AMSURLSecurityPolicy initWithTrustMode:]
  -[AMSURLSecurityPolicy initWithTrustMode:pinnedCertificated:]
  -[AMSURLSecurityPolicy _evaluateExtendedValidationWithTrust:forTask:]
  -[AMSURLSecurityPolicy _shouldSkipValidation]
  -[AMSURLSecurityPolicy _evaluatePinnedCertificatesWithTrust:forTask:]
  -[AMSURLSecurityPolicy pinnedCertificates]
  -[AMSURLSecurityPolicy evaluateTrust:forTask:]
  -[AMSURLSecurityPolicy setPinnedCertificates:]


AMSURLSession : NSObject /usr/lib/libSystem.B.dylib <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate>
 @property  AMSURLDelegateProxy *delegateProxy
 @property  BOOL invalidated
 @property  AMSURLSecurityPolicy *securityPolicy
 @property  NSURLSessionConfiguration *configuration
 @property  <NSURLSessionDelegate><AMSURLProtocolDelegate> *delegate
 @property  NSOperationQueue *delegateQueue
 @property  <AMSURLHandling> *protocolHandler
 @property  <AMSRequestEncoding> *requestEncoder
 @property  <AMSResponseDecoding> *responseDecoder
 @property  NSURLSession *session
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSURLSession defaultSession]
  +[AMSURLSession sharedAuthKitSession]

  // instance methods
  -[AMSURLSession setProtocolHandler:]
  -[AMSURLSession dataTaskWithRequest:completionHandler:]
  -[AMSURLSession securityPolicy]
  -[AMSURLSession URLSession:dataTask:didReceiveData:]
  -[AMSURLSession URLSession:task:didFinishCollectingMetrics:]
  -[AMSURLSession requestEncoder]
  -[AMSURLSession init]
  -[AMSURLSession dataTaskWithRequest:]
  -[AMSURLSession setDelegateProxy:]
  -[AMSURLSession dataTaskPromiseWithRequest:]
  -[AMSURLSession session]
  -[AMSURLSession delegateQueue]
  -[AMSURLSession dealloc]
  -[AMSURLSession _prepareRequest:properties:error:]
  -[AMSURLSession .cxx_destruct]
  -[AMSURLSession URLSession:task:didReceiveChallenge:completionHandler:]
  -[AMSURLSession URLSession:task:didCompleteWithError:]
  -[AMSURLSession URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[AMSURLSession setRequestEncoder:]
  -[AMSURLSession invalidated]
  -[AMSURLSession initWithConfiguration:delegate:delegateQueue:]
  -[AMSURLSession URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[AMSURLSession invalidateAndCancel]
  -[AMSURLSession setResponseDecoder:]
  -[AMSURLSession _formatError:task:decodedObject:]
  -[AMSURLSession delegateProxy]
  -[AMSURLSession configuration]
  -[AMSURLSession _createSharedDataForTask:properties:completionHandler:]
  -[AMSURLSession initWithConfiguration:]
  -[AMSURLSession _completeTask:decodedObject:error:]
  -[AMSURLSession responseDecoder]
  -[AMSURLSession setInvalidated:]
  -[AMSURLSession protocolHandler]
  -[AMSURLSession dataTaskPromiseWithRequestPromise:]
  -[AMSURLSession setDelegate:]
  -[AMSURLSession finishTasksAndInvalidate]
  -[AMSURLSession _retryTask:action:error:]
  -[AMSURLSession setSecurityPolicy:]
  -[AMSURLSession delegate]
  -[AMSURLSession _handleURLAction:task:error:]


AMSURLTaskInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableData *data
 @property  NSError *error
 @property  unsigned long previousAuthorizationCredentialSource
 @property  NSURLSessionTaskMetrics *metrics
 @property  AMSURLRequestProperties *properties
 @property  AMSURLAction *receivedAction
 @property  NSURLResponse *response
 @property  long long retryCount
 @property  NSMutableSet *retryIdentifiers
 @property  AMSURLSession *session
 @property  NSURLSessionTask *task
 @property  NSObject<OS_dispatch_queue> *taskQueue
 @property  NSMutableDictionary *userInfo
 @property  @? completionBlock

  // class methods
  +[AMSURLTaskInfo taskInfoForTask:]
  +[AMSURLTaskInfo createTaskInfoForTask:]
  +[AMSURLTaskInfo removeTaskInfoForTask:]
  +[AMSURLTaskInfo sharedTaskStore]
  +[AMSURLTaskInfo sharedTaskQueue]

  // instance methods
  -[AMSURLTaskInfo metrics]
  -[AMSURLTaskInfo setRetryCount:]
  -[AMSURLTaskInfo setMetrics:]
  -[AMSURLTaskInfo setData:]
  -[AMSURLTaskInfo setSession:]
  -[AMSURLTaskInfo migrateFromTaskInfo:]
  -[AMSURLTaskInfo retryCount]
  -[AMSURLTaskInfo session]
  -[AMSURLTaskInfo setError:]
  -[AMSURLTaskInfo .cxx_destruct]
  -[AMSURLTaskInfo setProperties:]
  -[AMSURLTaskInfo taskQueue]
  -[AMSURLTaskInfo setReceivedAction:]
  -[AMSURLTaskInfo data]
  -[AMSURLTaskInfo setCompletionBlock:]
  -[AMSURLTaskInfo completionBlock]
  -[AMSURLTaskInfo error]
  -[AMSURLTaskInfo userInfo]
  -[AMSURLTaskInfo setPreviousAuthorizationCredentialSource:]
  -[AMSURLTaskInfo retryIdentifiers]
  -[AMSURLTaskInfo receivedAction]
  -[AMSURLTaskInfo setTask:]
  -[AMSURLTaskInfo setRetryIdentifiers:]
  -[AMSURLTaskInfo setResponse:]
  -[AMSURLTaskInfo task]
  -[AMSURLTaskInfo previousAuthorizationCredentialSource]
  -[AMSURLTaskInfo properties]
  -[AMSURLTaskInfo initWithTask:]
  -[AMSURLTaskInfo response]


AMSUserAgent : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSMappedBundleInfo *bundleInfo
 @property  AMSProcessInfo *processInfo
 @property  NSString *clientName
 @property  NSString *clientVersion

  // class methods
  +[AMSUserAgent userAgentForProcessInfo:]
  +[AMSUserAgent _sharedCache]
  +[AMSUserAgent cachedUserAgentForBundleIdentifier:]
  +[AMSUserAgent cacheUserAgent:forBundleIdentifier:]

  // instance methods
  -[AMSUserAgent _sharedComponentFrameworkVersion]
  -[AMSUserAgent clientName]
  -[AMSUserAgent processInfo]
  -[AMSUserAgent _iOSComponentDeviceModel]
  -[AMSUserAgent _userAgentSuffix]
  -[AMSUserAgent .cxx_destruct]
  -[AMSUserAgent setClientVersion:]
  -[AMSUserAgent _iOSComponentBuildVersion]
  -[AMSUserAgent _sharedComponentFairPlayDeviceType]
  -[AMSUserAgent clientVersion]
  -[AMSUserAgent compile]
  -[AMSUserAgent _iOSComponentClientInfo]
  -[AMSUserAgent initWithProcessInfo:]
  -[AMSUserAgent _compileAndShouldCache:]
  -[AMSUserAgent setClientName:]
  -[AMSUserAgent bundleInfo]
  -[AMSUserAgent _iOSComponentHardwarePlatform]
  -[AMSUserAgent _sharedComponentParentheticalWithFairPlayDeviceType:productType:]
  -[AMSUserAgent _iOSComponentProductVersion]
  -[AMSUserAgent _sharedComponentParentheticalWithFairPlayDeviceType:]


AMSUserNotification : NSObject /usr/lib/libSystem.B.dylib <AMSBagConsumer>
 @property  long long intent
 @property  NSString *categoryIdentifier
 @property  BOOL shouldSuppressDefaultAction
 @property  NSString *threadIdentifier
 @property  ACAccount *account
 @property  NSURL *artworkUrl
 @property  NSURL *videoUrl
 @property  NSArray *buttonActions
 @property  NSString *centerBundleIdentifier
 @property  AMSUserNotificationAction *defaultAction
 @property  BOOL explicitContent
 @property  NSString *identifier
 @property  NSString *informativeText
 @property  NSString *logKey
 @property  NSDictionary *metricsEvent
 @property  NSDate *scheduledTime
 @property  NSSet *subsections
 @property  NSString *subtitle
 @property  NSString *title
 @property  NSMutableDictionary *userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUserNotification createBagForSubProfile]
  +[AMSUserNotification shouldHandleNotificationResponse:]
  +[AMSUserNotification bagKeySet]
  +[AMSUserNotification bagSubProfileVersion]
  +[AMSUserNotification notificationWithPayload:andConfig:]
  +[AMSUserNotification shouldDeleteNotificationForPayload:outIdentifier:scheduledOnly:]
  +[AMSUserNotification addRequiredBagKeysToAggregator:]
  +[AMSUserNotification handleServiceExtensionNotificationRequest:bag:withContentHandler:]
  +[AMSUserNotification bagSubProfile]
  +[AMSUserNotification _serverFriendlyFormatter]
  +[AMSUserNotification _identifierFromPayload:]
  +[AMSUserNotification _canParseNotificationWithIdentifier:userInfo:]
  +[AMSUserNotification openAppUsingBundleIdentifier:]
  +[AMSUserNotification explicitEnabledForCenterBundleID:]
  +[AMSUserNotification _downloadAssetAtUrl:withIdentifier:logKey:bag:]
  +[AMSUserNotification handleNotificationResponse:bag:]
  +[AMSUserNotification _cachedImagePathForIdentifier:assetURL:]
  +[AMSUserNotification handleNotificationResponse:bagContract:]
  +[AMSUserNotification notificationCenter:didChangeSettings:bag:]
  +[AMSUserNotification notificationCenter:openSettingsForNotification:bag:]
  +[AMSUserNotification shouldHandleServiceExtensionNotificationRequest:]

  // instance methods
  -[AMSUserNotification setCategoryIdentifier:]
  -[AMSUserNotification setIntent:]
  -[AMSUserNotification setSubtitle:]
  -[AMSUserNotification initWithTitle:]
  -[AMSUserNotification setLogKey:]
  -[AMSUserNotification categoryIdentifier]
  -[AMSUserNotification setMetricsEvent:]
  -[AMSUserNotification intent]
  -[AMSUserNotification setUserInfo:]
  -[AMSUserNotification logKey]
  -[AMSUserNotification setAccount:]
  -[AMSUserNotification setInformativeText:]
  -[AMSUserNotification account]
  -[AMSUserNotification .cxx_destruct]
  -[AMSUserNotification setShouldSuppressDefaultAction:]
  -[AMSUserNotification setDefaultAction:]
  -[AMSUserNotification setTitle:]
  -[AMSUserNotification setIdentifier:]
  -[AMSUserNotification identifier]
  -[AMSUserNotification videoUrl]
  -[AMSUserNotification setThreadIdentifier:]
  -[AMSUserNotification title]
  -[AMSUserNotification defaultAction]
  -[AMSUserNotification threadIdentifier]
  -[AMSUserNotification userInfo]
  -[AMSUserNotification buttonActions]
  -[AMSUserNotification setButtonActions:]
  -[AMSUserNotification informativeText]
  -[AMSUserNotification initWithTitle:intent:]
  -[AMSUserNotification setCenterBundleIdentifier:]
  -[AMSUserNotification initWithPayload:andConfig:]
  -[AMSUserNotification subtitle]
  -[AMSUserNotification artworkUrl]
  -[AMSUserNotification initWithUNNotification:]
  -[AMSUserNotification createUNNotificationContent]
  -[AMSUserNotification createUNNotificationRequestFromContent:]
  -[AMSUserNotification addButtonAction:]
  -[AMSUserNotification setVideoUrl:]
  -[AMSUserNotification scheduledTime]
  -[AMSUserNotification centerBundleIdentifier]
  -[AMSUserNotification shouldSuppressDefaultAction]
  -[AMSUserNotification explicitContent]
  -[AMSUserNotification setArtworkUrl:]
  -[AMSUserNotification _generatePayload]
  -[AMSUserNotification determineSelectedActionFromResponse:error:]
  -[AMSUserNotification handleSelectedButton:bag:]
  -[AMSUserNotification setExplicitContent:]
  -[AMSUserNotification handleSelectedButton:bagContract:]
  -[AMSUserNotification createUNNotificationActions]
  -[AMSUserNotification setScheduledTime:]
  -[AMSUserNotification setSubsections:]
  -[AMSUserNotification metricsEvent]
  -[AMSUserNotification initWithNSUserNotification:]
  -[AMSUserNotification createNSUserNotification]
  -[AMSUserNotification subsections]


AMSUserNotificationAction : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long un_ActionOptions
 @property  NSString *identifier
 @property  NSURL *defaultURL
 @property  NSString *title
 @property  NSURLRequest *request
 @property  AMSMetricsEvent *metricsEvent
 @property  NSDictionary *userInfo
 @property  long long style

  // instance methods
  -[AMSUserNotificationAction initWithTitle:]
  -[AMSUserNotificationAction setMetricsEvent:]
  -[AMSUserNotificationAction init]
  -[AMSUserNotificationAction setUserInfo:]
  -[AMSUserNotificationAction setRequest:]
  -[AMSUserNotificationAction .cxx_destruct]
  -[AMSUserNotificationAction initWithTitle:style:]
  -[AMSUserNotificationAction setTitle:]
  -[AMSUserNotificationAction setIdentifier:]
  -[AMSUserNotificationAction identifier]
  -[AMSUserNotificationAction title]
  -[AMSUserNotificationAction defaultURL]
  -[AMSUserNotificationAction userInfo]
  -[AMSUserNotificationAction setDefaultURL:]
  -[AMSUserNotificationAction request]
  -[AMSUserNotificationAction setStyle:]
  -[AMSUserNotificationAction un_ActionOptions]
  -[AMSUserNotificationAction style]
  -[AMSUserNotificationAction metricsEvent]
  -[AMSUserNotificationAction initWithUserInfoAction:]
  -[AMSUserNotificationAction generateUserInfoAction]


AMSUserNotificationCenter : NSObject /usr/lib/libSystem.B.dylib
 @property  <AMSUserNotificationStrategy> *strategy

  // class methods
  +[AMSUserNotificationCenter badgeBundleId:badgeId:enabled:error:]
  +[AMSUserNotificationCenter postNotification:bag:centerBundleId:]
  +[AMSUserNotificationCenter removeNotificationWithIdentifier:centerBundleId:logKey:scheduledOnly:]
  +[AMSUserNotificationCenter _determineStrategyForBundleId:]
  +[AMSUserNotificationCenter activeNotificationsWithCenterBundleId:]
  +[AMSUserNotificationCenter removeNotification:centerBundleId:]

  // instance methods
  -[AMSUserNotificationCenter strategy]
  -[AMSUserNotificationCenter .cxx_destruct]


AMSUserNotificationMetricsEvent : AMSMetricsEvent
 @property  NSString *displayScheduledTime
 @property  NSString *errorDescription
 @property  BOOL postedSuccessfully

  // class methods
  +[AMSUserNotificationMetricsEvent eventForBadgingForMetricsDictionary:bundleID:]
  +[AMSUserNotificationMetricsEvent _centerForBundleId:]
  +[AMSUserNotificationMetricsEvent eventFromMetricsDictionary:centerBundleId:]
  +[AMSUserNotificationMetricsEvent eventForSettingsChangedWithSettings:bundleID:]
  +[AMSUserNotificationMetricsEvent eventFromNotificationCenterSettings:centerBundleId:]
  +[AMSUserNotificationMetricsEvent eventForContentEngagementWithNotification:]
  +[AMSUserNotificationMetricsEvent eventForVideoPlaybackForNotification:]

  // instance methods
  -[AMSUserNotificationMetricsEvent setErrorDescription:]
  -[AMSUserNotificationMetricsEvent errorDescription]
  -[AMSUserNotificationMetricsEvent setDisplayScheduledTime:]
  -[AMSUserNotificationMetricsEvent setPostedSuccessfully:]
  -[AMSUserNotificationMetricsEvent _createDisplayCriteriaFromSettings:]
  -[AMSUserNotificationMetricsEvent displayScheduledTime]
  -[AMSUserNotificationMetricsEvent initWithTopic:settings:centerBundleId:]
  -[AMSUserNotificationMetricsEvent _stringFromNotificationSetting:]
  -[AMSUserNotificationMetricsEvent postedSuccessfully]


AMSVersionComparator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AMSVersionComparator _sanitizedVersionStringForVersionString:]
  +[AMSVersionComparator isVersionSupported:requiredVersion:]


AMSXDDevice : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDictionary *JSONDictionary
 @property  NSString *identifier
 @property  long long type

  // class methods
  +[AMSXDDevice deviceFromIdentifier:]
  +[AMSXDDevice supportsSecureCoding]
  +[AMSXDDevice allPairedDevices]
  +[AMSXDDevice activePairedDevices]

  // instance methods
  -[AMSXDDevice setType:]
  -[AMSXDDevice .cxx_destruct]
  -[AMSXDDevice encodeWithCoder:]
  -[AMSXDDevice identifier]
  -[AMSXDDevice type]
  -[AMSXDDevice initWithCoder:]
  -[AMSXDDevice JSONDictionary]
  -[AMSXDDevice initWithDeviceID:type:]
  -[AMSXDDevice initWithJSONDictionary:]


AMSXDMessage : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *objectClassName
 @property  BOOL isReply
 @property  NSString *messageID
 @property  NSDate *receiptDate
 @property  NSDictionary *JSONDictionary
 @property  AMSXDDevice *destination
 @property  double expirationInterval
 @property  NSString *identifier
 @property  BOOL expired
 @property  NSString *logKey
 @property  <NSObject><NSSecureCoding> *object
 @property  AMSXDDevice *origin
 @property  long long purpose

  // class methods
  +[AMSXDMessage supportsSecureCoding]
  +[AMSXDMessage messageFromProtoMessage:]

  // instance methods
  -[AMSXDMessage setOrigin:]
  -[AMSXDMessage copyWithZone:]
  -[AMSXDMessage object]
  -[AMSXDMessage setPurpose:]
  -[AMSXDMessage setLogKey:]
  -[AMSXDMessage destination]
  -[AMSXDMessage origin]
  -[AMSXDMessage setObjectClassName:]
  -[AMSXDMessage logKey]
  -[AMSXDMessage setMessageID:]
  -[AMSXDMessage messageID]
  -[AMSXDMessage purpose]
  -[AMSXDMessage initWithIdentifier:destination:purpose:object:]
  -[AMSXDMessage .cxx_destruct]
  -[AMSXDMessage setObject:]
  -[AMSXDMessage setIdentifier:]
  -[AMSXDMessage expirationInterval]
  -[AMSXDMessage encodeWithCoder:]
  -[AMSXDMessage identifier]
  -[AMSXDMessage isExpired]
  -[AMSXDMessage objectClassName]
  -[AMSXDMessage setDestination:]
  -[AMSXDMessage isReply]
  -[AMSXDMessage initWithCoder:]
  -[AMSXDMessage setExpirationInterval:]
  -[AMSXDMessage receiptDate]
  -[AMSXDMessage setIsReply:]
  -[AMSXDMessage JSONDictionary]
  -[AMSXDMessage initWithJSONDictionary:]
  -[AMSXDMessage setReceiptDate:]
  -[AMSXDMessage createProtoMessage]


AMSXDProtoMessage : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  NSData *messageData
 @property  BOOL hasLogKey
 @property  NSString *logKey

  // instance methods
  -[AMSXDProtoMessage copyWithZone:]
  -[AMSXDProtoMessage setLogKey:]
  -[AMSXDProtoMessage logKey]
  -[AMSXDProtoMessage .cxx_destruct]
  -[AMSXDProtoMessage readFrom:]
  -[AMSXDProtoMessage hasLogKey]
  -[AMSXDProtoMessage writeTo:]
  -[AMSXDProtoMessage isEqual:]
  -[AMSXDProtoMessage copyTo:]
  -[AMSXDProtoMessage dictionaryRepresentation]
  -[AMSXDProtoMessage mergeFrom:]
  -[AMSXDProtoMessage messageData]
  -[AMSXDProtoMessage setMessageData:]


ktSeAkOyXkmyQNgH : NSObject /usr/lib/libSystem.B.dylib <pjRPsXEyBJiXQnH9>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ktSeAkOyXkmyQNgH sharedInstance]

  // instance methods
  -[ktSeAkOyXkmyQNgH Z8aAH7stm0EYhyxg:uhVTXyAfCFn7u0Ue:nG8az2sHG5tJ9P9c:TJKMyOe6zn5PdGIr:hostChallenge:challengeResponse:seid:completion:]
  -[ktSeAkOyXkmyQNgH Z8aAH7stm0EYhyxg:uhVTXyAfCFn7u0Ue:nG8az2sHG5tJ9P9c:TJKMyOe6zn5PdGIr:eCqgGM0WcnHOslnr:uWp4aZpP2vLhc04Q:QZYtNpvp0hKd248p:oCwPYmtRv8s31KUH:completion:]
  -[ktSeAkOyXkmyQNgH initWithServiceName:]
  -[ktSeAkOyXkmyQNgH JI0A3nkqsab9cUj8:completion:]
  -[ktSeAkOyXkmyQNgH QeMnG23X94qgz7jT:hostChallenge:challengeResponse:seid:nonce:completion:]
  -[ktSeAkOyXkmyQNgH ZfE6lVphNUVrZcKx:completion:]
  -[ktSeAkOyXkmyQNgH .cxx_destruct]


n4cyKQis9m01XZsR : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *fullName

  // instance methods
  -[n4cyKQis9m01XZsR fullName]
  -[n4cyKQis9m01XZsR lastName]
  -[n4cyKQis9m01XZsR setLastName:]
  -[n4cyKQis9m01XZsR setFullName:]
  -[n4cyKQis9m01XZsR setFirstName:]
  -[n4cyKQis9m01XZsR firstName]
  -[n4cyKQis9m01XZsR toDictionary]
  -[n4cyKQis9m01XZsR .cxx_destruct]
  -[n4cyKQis9m01XZsR initWithDictionary:]


RJ39VdykGnvJIRpv : NSObject /usr/lib/libSystem.B.dylib
 @property  n4cyKQis9m01XZsR *name
 @property  NSString *phone
 @property  NSString *pPhone
 @property  NSString *pEmail
 @property  NSString *email
 @property  NSString *endpointIdentifier
 @property  int endpointID
 @property  unsigned long settingsType

  // instance methods
  -[RJ39VdykGnvJIRpv setEmail:]
  -[RJ39VdykGnvJIRpv phone]
  -[RJ39VdykGnvJIRpv pEmail]
  -[RJ39VdykGnvJIRpv pPhone]
  -[RJ39VdykGnvJIRpv setPhone:]
  -[RJ39VdykGnvJIRpv setEndpointID:]
  -[RJ39VdykGnvJIRpv setEndpointIdentifier:]
  -[RJ39VdykGnvJIRpv setSettingsType:]
  -[RJ39VdykGnvJIRpv settingsType]
  -[RJ39VdykGnvJIRpv endpointIdentifier]
  -[RJ39VdykGnvJIRpv toDictionary]
  -[RJ39VdykGnvJIRpv .cxx_destruct]
  -[RJ39VdykGnvJIRpv name]
  -[RJ39VdykGnvJIRpv initWithDictionary:]
  -[RJ39VdykGnvJIRpv email]
  -[RJ39VdykGnvJIRpv setPEmail:]
  -[RJ39VdykGnvJIRpv setPPhone:]
  -[RJ39VdykGnvJIRpv endpointID]
  -[RJ39VdykGnvJIRpv setName:]


RvCyrXrrh7eJhtzx : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *hostChallenge
 @property  NSData *challengeResponse
 @property  NSString *seid
 @property  NSData *nonce

  // instance methods
  -[RvCyrXrrh7eJhtzx seid]
  -[RvCyrXrrh7eJhtzx setSeid:]
  -[RvCyrXrrh7eJhtzx hostChallenge]
  -[RvCyrXrrh7eJhtzx setHostChallenge:]
  -[RvCyrXrrh7eJhtzx challengeResponse]
  -[RvCyrXrrh7eJhtzx setChallengeResponse:]
  -[RvCyrXrrh7eJhtzx .cxx_destruct]
  -[RvCyrXrrh7eJhtzx setNonce:]
  -[RvCyrXrrh7eJhtzx nonce]


CerKRQOmMu7LBUoc : NSObject /usr/lib/libSystem.B.dylib
 @property  wumZ2SSA5KbWdu7E *context
 @property  @? handler
 @property  NSObject<OS_dispatch_queue> *callback_queue
 @property  NSObject<OS_dispatch_queue> *score_id_queue
 @property  NSString *lastScoreIdentifier
 @property  NSError *prepareError

  // class methods
  +[CerKRQOmMu7LBUoc scorerWithContext:]

  // instance methods
  -[CerKRQOmMu7LBUoc context]
  -[CerKRQOmMu7LBUoc settingsFromContext:]
  -[CerKRQOmMu7LBUoc callback_queue]
  -[CerKRQOmMu7LBUoc _safeCallbackWithMessage:uuid:error:]
  -[CerKRQOmMu7LBUoc VkBISyFszEu5z9lr:error:]
  -[CerKRQOmMu7LBUoc setCallback_queue:]
  -[CerKRQOmMu7LBUoc score_id_queue]
  -[CerKRQOmMu7LBUoc setScore_id_queue:]
  -[CerKRQOmMu7LBUoc lastScoreIdentifier]
  -[CerKRQOmMu7LBUoc setLastScoreIdentifier:]
  -[CerKRQOmMu7LBUoc prepareError]
  -[CerKRQOmMu7LBUoc setPrepareError:]
  -[CerKRQOmMu7LBUoc initWithContext:]
  -[CerKRQOmMu7LBUoc .cxx_destruct]
  -[CerKRQOmMu7LBUoc handler]
  -[CerKRQOmMu7LBUoc setContext:]
  -[CerKRQOmMu7LBUoc stop]
  -[CerKRQOmMu7LBUoc prepareScoreMessage]
  -[CerKRQOmMu7LBUoc scoreWithScoreRequest:completionHandler:]
  -[CerKRQOmMu7LBUoc setHandler:]


cBEET4QRedIfcDrp : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *fullName
 @property  NSString *phoneNumber
 @property  NSString *emailAddress
 @property  unsigned long source
 @property  unsigned long type

  // instance methods
  -[cBEET4QRedIfcDrp fullName]
  -[cBEET4QRedIfcDrp lastName]
  -[cBEET4QRedIfcDrp initWithSource:]
  -[cBEET4QRedIfcDrp setLastName:]
  -[cBEET4QRedIfcDrp setEmailAddress:]
  -[cBEET4QRedIfcDrp setFullName:]
  -[cBEET4QRedIfcDrp initWithPhoneNumber:source:]
  -[cBEET4QRedIfcDrp initWithFullName:source:]
  -[cBEET4QRedIfcDrp phoneNumber]
  -[cBEET4QRedIfcDrp setSource:]
  -[cBEET4QRedIfcDrp setPhoneNumber:]
  -[cBEET4QRedIfcDrp setFirstName:]
  -[cBEET4QRedIfcDrp source]
  -[cBEET4QRedIfcDrp setType:]
  -[cBEET4QRedIfcDrp firstName]
  -[cBEET4QRedIfcDrp .cxx_destruct]
  -[cBEET4QRedIfcDrp initWithFirstName:lastName:source:]
  -[cBEET4QRedIfcDrp initWithEmailAddress:source:]
  -[cBEET4QRedIfcDrp type]
  -[cBEET4QRedIfcDrp emailAddress]


wumZ2SSA5KbWdu7E : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *serverEndpointIdentifier
 @property  NSData *hostChallenge
 @property  NSData *challengeResponse
 @property  NSString *seid
 @property  NSSet *identities
 @property  NSString *phoneNumber
 @property  NSString *emailAddress
 @property  NSString *FPANSuffix
 @property  unsigned long eventFrequency

  // instance methods
  -[wumZ2SSA5KbWdu7E seid]
  -[wumZ2SSA5KbWdu7E setEmailAddress:]
  -[wumZ2SSA5KbWdu7E setSeid:]
  -[wumZ2SSA5KbWdu7E hostChallenge]
  -[wumZ2SSA5KbWdu7E setHostChallenge:]
  -[wumZ2SSA5KbWdu7E challengeResponse]
  -[wumZ2SSA5KbWdu7E setChallengeResponse:]
  -[wumZ2SSA5KbWdu7E serverEndpointIdentifier]
  -[wumZ2SSA5KbWdu7E eventFrequency]
  -[wumZ2SSA5KbWdu7E setServerEndpointIdentifier:]
  -[wumZ2SSA5KbWdu7E setFPANSuffix:]
  -[wumZ2SSA5KbWdu7E setEventFrequency:]
  -[wumZ2SSA5KbWdu7E phoneNumber]
  -[wumZ2SSA5KbWdu7E setPhoneNumber:]
  -[wumZ2SSA5KbWdu7E .cxx_destruct]
  -[wumZ2SSA5KbWdu7E identities]
  -[wumZ2SSA5KbWdu7E initWithServerEndpointIdentifier:]
  -[wumZ2SSA5KbWdu7E setIdentities:]
  -[wumZ2SSA5KbWdu7E emailAddress]
  -[wumZ2SSA5KbWdu7E FPANSuffix]


ACAccount(AppleMediaServices)
	// class methods
	+[ACAccount(AppleMediaServices) _defaultValueForAccountFlag:]
	+[ACAccount(AppleMediaServices) _isAccountFlagValue:validForAccountFlag:]
	+[ACAccount(AppleMediaServices) _isAccountFlagWritable:]
	+[ACAccount(AppleMediaServices) _getSetCookiesForResponse:]
	+[ACAccount(AppleMediaServices) _getSetGlobalCookiesForResponse:]

	// instance methods
	-[ACAccount(AppleMediaServices) ams_DSID]
	-[ACAccount(AppleMediaServices) ams_lastName]
	-[ACAccount(AppleMediaServices) ams_isHSA2]
	-[ACAccount(AppleMediaServices) ams_storefront]
	-[ACAccount(AppleMediaServices) ams_isIDMSAccount]
	-[ACAccount(AppleMediaServices) _accountPropertyForKey:dataProtectionClass:expectedClasses:error:]
	-[ACAccount(AppleMediaServices) _accountPropertyForKey:expectedClass:]
	-[ACAccount(AppleMediaServices) ams_isiCloudAccount]
	-[ACAccount(AppleMediaServices) ams_securityLevel]
	-[ACAccount(AppleMediaServices) ams_isSandboxAccount]
	-[ACAccount(AppleMediaServices) _setAccountProperty:forKey:expectedClass:]
	-[ACAccount(AppleMediaServices) ams_firstName]
	-[ACAccount(AppleMediaServices) ams_isiTunesAccount]
	-[ACAccount(AppleMediaServices) ams_isDemoAccount]
	-[ACAccount(AppleMediaServices) ams_altDSID]
	-[ACAccount(AppleMediaServices) _setAccountProperty:forKey:dataProtectionClass:expectedClass:]
	-[ACAccount(AppleMediaServices) ams_accountFlags]
	-[ACAccount(AppleMediaServices) ams_isLocalAccount]
	-[ACAccount(AppleMediaServices) ams_setStorefront:forMediaType:]
	-[ACAccount(AppleMediaServices) ams_storefrontForMediaType:]
	-[ACAccount(AppleMediaServices) ams_setAccountFlags:]
	-[ACAccount(AppleMediaServices) ams_privacyAcknowledgement]
	-[ACAccount(AppleMediaServices) ams_delta:]
	-[ACAccount(AppleMediaServices) _updateCookiesWithCookiesToAdd:cookiesToRemove:]
	-[ACAccount(AppleMediaServices) ams_addCookies:]
	-[ACAccount(AppleMediaServices) ams_addCookiesForResponse:]
	-[ACAccount(AppleMediaServices) ams_addGlobalCookiesForResponse:]
	-[ACAccount(AppleMediaServices) ams_fullName]
	-[ACAccount(AppleMediaServices) _cookiesMatchingProperties:]
	-[ACAccount(AppleMediaServices) ams_removeCookies:]
	-[ACAccount(AppleMediaServices) _hashedIdentifiers]
	-[ACAccount(AppleMediaServices) ams_password]
	-[ACAccount(AppleMediaServices) _hashedMultiUserIdentifiers]
	-[ACAccount(AppleMediaServices) _hashedActiveState]
	-[ACAccount(AppleMediaServices) _hashedStorefront]
	-[ACAccount(AppleMediaServices) ams_rawPassword]
	-[ACAccount(AppleMediaServices) ams_homeIdentifier]
	-[ACAccount(AppleMediaServices) ams_setDSID:]
	-[ACAccount(AppleMediaServices) ams_homeUserIdentifiers]
	-[ACAccount(AppleMediaServices) ams_setHomeIdentifier:]
	-[ACAccount(AppleMediaServices) ams_addHomeUserIdentifier:]
	-[ACAccount(AppleMediaServices) ams_removeHomeUserIdentifier:]
	-[ACAccount(AppleMediaServices) ams_allStorefronts]
	-[ACAccount(AppleMediaServices) ams_setAccountFlagValue:forAccountFlag:]
	-[ACAccount(AppleMediaServices) ams_accountFlagValueForAccountFlag:]
	-[ACAccount(AppleMediaServices) ams_automaticDownloadKinds]
	-[ACAccount(AppleMediaServices) ams_biometricsState]
	-[ACAccount(AppleMediaServices) ams_creditsString]
	-[ACAccount(AppleMediaServices) ams_homeUserID]
	-[ACAccount(AppleMediaServices) ams_didAgreeToTerms]
	-[ACAccount(AppleMediaServices) ams_freePasswordPromptSetting]
	-[ACAccount(AppleMediaServices) ams_isiCloudFamily]
	-[ACAccount(AppleMediaServices) ams_homeID]
	-[ACAccount(AppleMediaServices) ams_setFreePasswordPromptSetting:]
	-[ACAccount(AppleMediaServices) ams_isInGoodStanding]
	-[ACAccount(AppleMediaServices) ams_isManagedAppleID]
	-[ACAccount(AppleMediaServices) ams_isValidPayment]
	-[ACAccount(AppleMediaServices) ams_lastAuthenticationCredentialSource]
	-[ACAccount(AppleMediaServices) ams_setAgreedToTerms:]
	-[ACAccount(AppleMediaServices) ams_lastAuthenticationServerResponse]
	-[ACAccount(AppleMediaServices) ams_mergedPrivacyAcknowledgement]
	-[ACAccount(AppleMediaServices) ams_paidPasswordPromptSetting]
	-[ACAccount(AppleMediaServices) ams_setPaidPasswordPromptSetting:]
	-[ACAccount(AppleMediaServices) ams_setAltDSID:]
	-[ACAccount(AppleMediaServices) ams_pushRegistrationThrottleMap]
	-[ACAccount(AppleMediaServices) ams_registerSuccessCriteria]
	-[ACAccount(AppleMediaServices) ams_setDemoAccount:]
	-[ACAccount(AppleMediaServices) ams_requiresAuthKitUpdate]
	-[ACAccount(AppleMediaServices) ams_setBiometricsState:]
	-[ACAccount(AppleMediaServices) ams_setCreditsString:]
	-[ACAccount(AppleMediaServices) ams_setFirstName:]
	-[ACAccount(AppleMediaServices) ams_setiCloudFamily:]
	-[ACAccount(AppleMediaServices) ams_setInGoodStanding:]
	-[ACAccount(AppleMediaServices) ams_setLastName:]
	-[ACAccount(AppleMediaServices) ams_setLastAuthenticationCredentialSource:]
	-[ACAccount(AppleMediaServices) ams_setManagedAppleID:]
	-[ACAccount(AppleMediaServices) ams_setInUse:]
	-[ACAccount(AppleMediaServices) ams_setMergedPrivacyAcknowledgement:]
	-[ACAccount(AppleMediaServices) ams_setPassword:]
	-[ACAccount(AppleMediaServices) ams_setRawPassword:]
	-[ACAccount(AppleMediaServices) ams_setPushRegistrationThrottleMap:]
	-[ACAccount(AppleMediaServices) ams_setRegisterSuccessCriteria:]
	-[ACAccount(AppleMediaServices) ams_setServerResponse:]
	-[ACAccount(AppleMediaServices) ams_setStorefront:]
	-[ACAccount(AppleMediaServices) ams_setValidPayment:]
	-[ACAccount(AppleMediaServices) ams_isDuplicate:]
	-[ACAccount(AppleMediaServices) ams_encryptAccountFlags]
	-[ACAccount(AppleMediaServices) ams_isActiveForMediaType:]
	-[ACAccount(AppleMediaServices) ams_setActive:forMediaType:]
	-[ACAccount(AppleMediaServices) ams_mergePrivacyAcknowledgement:]
	-[ACAccount(AppleMediaServices) ams_addCookiesForResult:]
	-[ACAccount(AppleMediaServices) ams_cookiesForURL:]
	-[ACAccount(AppleMediaServices) ams_addGlobalCookiesForResult:]
	-[ACAccount(AppleMediaServices) ams_removeAllCookies]
	-[ACAccount(AppleMediaServices) _createCookieStorage]
	-[ACAccount(AppleMediaServices) ams_removeCookiesMatchingProperties:]
	-[ACAccount(AppleMediaServices) ams_secureToken]
	-[ACAccount(AppleMediaServices) ams_setHomeID:]
	-[ACAccount(AppleMediaServices) ams_postAccountFlagsWithBagContract:]
	-[ACAccount(AppleMediaServices) ams_setHomeUserID:]
	-[ACAccount(AppleMediaServices) ams_isPrivateListeningEnabled]
	-[ACAccount(AppleMediaServices) ams_setValue:forAccountFlag:]
	-[ACAccount(AppleMediaServices) ams_isPrivateListeningEnabledForHomeUserIdentifier:]
	-[ACAccount(AppleMediaServices) ams_setPrivateListeningEnabled:forHomeUserIdentifier:]
	-[ACAccount(AppleMediaServices) ams_valueForAccountFlag:]
	-[ACAccount(AppleMediaServices) hashedDescription]
	-[ACAccount(AppleMediaServices) ams_cookies]

ACAccountStore(AppleMediaServices)
	// class methods
	+[ACAccountStore(AppleMediaServices) ams_sharedAccountStore]
	+[ACAccountStore(AppleMediaServices) ams_sharedAccountStoreForMediaType:]
	+[ACAccountStore(AppleMediaServices) ams_accountTypeIdentifierForMediaType:]
	+[ACAccountStore(AppleMediaServices) _secureTokenForIdentifier:]
	+[ACAccountStore(AppleMediaServices) ams_sharedAccountStoreForClient:]
	+[ACAccountStore(AppleMediaServices) ams_sharedAccountStoreForProcessInfo:]

	// instance methods
	-[ACAccountStore(AppleMediaServices) _saveAccount:verifyCredentials:]
	-[ACAccountStore(AppleMediaServices) ams_IDMSAccountForAccount:]
	-[ACAccountStore(AppleMediaServices) ams_secureTokenForAccount:]
	-[ACAccountStore(AppleMediaServices) ams_cookiesForURL:]
	-[ACAccountStore(AppleMediaServices) ams_activeiCloudAccount]
	-[ACAccountStore(AppleMediaServices) ams_mediaType]
	-[ACAccountStore(AppleMediaServices) ams_activeiTunesAccount]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccounts]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithAltDSID:DSID:username:]
	-[ACAccountStore(AppleMediaServices) _isAccountNew:]
	-[ACAccountStore(AppleMediaServices) ams_localiTunesAccount]
	-[ACAccountStore(AppleMediaServices) ams_saveAccount:]
	-[ACAccountStore(AppleMediaServices) ams_localiTunesAccountForAccountMediaType:]
	-[ACAccountStore(AppleMediaServices) _correspondingAccountWithAccountTypeIdentifier:forAccount:]
	-[ACAccountStore(AppleMediaServices) _alliTunesAccounts]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithAltDSID:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithDSID:]
	-[ACAccountStore(AppleMediaServices) _storeClientIdentifier]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithUsername:]
	-[ACAccountStore(AppleMediaServices) _accountTypeForMediaType:]
	-[ACAccountStore(AppleMediaServices) ams_localiTunesAccountForAccountType:]
	-[ACAccountStore(AppleMediaServices) ams_demoAccount]
	-[ACAccountStore(AppleMediaServices) _fetchLocaliTunesAccountForAccountType:]
	-[ACAccountStore(AppleMediaServices) ams_saveAccount:withOptions:]
	-[ACAccountStore(AppleMediaServices) _createLocaliTunesAccountForAccountType:]
	-[ACAccountStore(AppleMediaServices) ams_saveAccount:verifyCredentials:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountForAccount:]
	-[ACAccountStore(AppleMediaServices) ams_isActiveAccountCombined]
	-[ACAccountStore(AppleMediaServices) _addUserCookiesForResponse:account:error:]
	-[ACAccountStore(AppleMediaServices) _addGlobalCookiesForResponse:error:]
	-[ACAccountStore(AppleMediaServices) ams_addCookiesForResponse:account:error:]
	-[ACAccountStore(AppleMediaServices) _iTunesAccountsForAccountType:]
	-[ACAccountStore(AppleMediaServices) ams_accountWithAltDSID:DSID:username:accountTypeIdentifier:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountForHomeWithIdentifier:error:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithHomeUserID:]
	-[ACAccountStore(AppleMediaServices) ams_mediaAccountForHomeWithIdentifier:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithHomeUserIdentifier:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountsWithHomeUserIdentifiers]
	-[ACAccountStore(AppleMediaServices) ams_iCloudAccountForAccount:]
	-[ACAccountStore(AppleMediaServices) ams_fetchGrandSlamTokenForAccount:withIdentifier:error:]
	-[ACAccountStore(AppleMediaServices) ams_IDSAccountForAccount:]
	-[ACAccountStore(AppleMediaServices) ams_setiTunesAccount:forHomeWithIdentifier:]
	-[ACAccountStore(AppleMediaServices) ams_setSecureToken:forAccount:error:]
	-[ACAccountStore(AppleMediaServices) ams_addCookiesForResult:account:error:]
	-[ACAccountStore(AppleMediaServices) ams_addCookiesForResponse:request:account:error:]
	-[ACAccountStore(AppleMediaServices) _cachedAccountWithIdentifier:]
	-[ACAccountStore(AppleMediaServices) ams_removeCookiesMatchingProperties:error:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountsWithHomeUserID]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountForHomeWithIdentifier:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithHomeID:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesSandboxAccounts]

NSHTTPCookie(AMSSecureCoding)
	// class methods
	+[NSHTTPCookie(AMSSecureCoding) supportsSecureCoding]
	+[NSHTTPCookie(AMSSecureCoding) ams_cookieByMarkingCookieAsDeleted:]

	// instance methods
	-[NSHTTPCookie(AMSSecureCoding) encodeWithCoder:]
	-[NSHTTPCookie(AMSSecureCoding) ams_isDeleted]
	-[NSHTTPCookie(AMSSecureCoding) ams_isExpired]
	-[NSHTTPCookie(AMSSecureCoding) ams_isEquivalent:]
	-[NSHTTPCookie(AMSSecureCoding) hashedDescription]
	-[NSHTTPCookie(AMSSecureCoding) ams_isCookieValidForBag]
	-[NSHTTPCookie(AMSSecureCoding) initWithCoder:]

NSFileManager(AppleMediaServices)
	// class methods
	+[NSFileManager(AppleMediaServices) ams_ensureDirectoryExists:]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) ams_enumerateObjectsForArrays:usingBlock:]

	// instance methods
	-[(AppleMediaServices) ams_anyWithTest:]
	-[(AppleMediaServices) ams_invertedDictionaryUsingTransform:]
	-[(AppleMediaServices) ams_objectAtIndex:]
	-[(AppleMediaServices) ams_dictionaryUsingTransform:]
	-[(AppleMediaServices) ams_mapWithTransformIgnoresNil:]
	-[(AppleMediaServices) ams_mapWithTransform:]
	-[(AppleMediaServices) ams_filterUsingTest:]
	-[(AppleMediaServices) ams_firstObjectPassingTest:]
	-[(AppleMediaServices) hashedDescription]
	-[(AppleMediaServices) ams_nonEmptyComponentsJoinedByString:]
	-[(AppleMediaServices) ams_invertedDictionaryUsingTransformIgnoresNil:]
	-[(AppleMediaServices) ams_allWithTest:]

NSBundle(AppleMediaServices)
	// class methods
	+[NSBundle(AppleMediaServices) ams_MusicBundle]
	+[NSBundle(AppleMediaServices) ams_AppleMediaServicesBundle]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) _AESKeyForDataProtectionClass:error:]
	+[(AppleMediaServices) _generateInitializationVectorDataWithError:]
	+[(AppleMediaServices) _labelForDataProtectionClass:]
	+[(AppleMediaServices) _accessibleAttributeForDataProtectionClass:]
	+[(AppleMediaServices) ams_generateEncryptionKey]

	// instance methods
	-[(AppleMediaServices) _compressGZIP]
	-[(AppleMediaServices) ams_decompressWithAlgorithm:]
	-[(AppleMediaServices) _compressLZMA]
	-[(AppleMediaServices) _decompressGZIP]
	-[(AppleMediaServices) _decompressLZMA]
	-[(AppleMediaServices) ams_encryptDataUsingKey:error:]
	-[(AppleMediaServices) ams_decryptUsingKey:initializationVectorData:tagData:error:]
	-[(AppleMediaServices) ams_nvramDescription]
	-[(AppleMediaServices) ams_hexAddressDescription]
	-[(AppleMediaServices) ams_SHA1]
	-[(AppleMediaServices) ams_compressedData]
	-[(AppleMediaServices) ams_decompressedData]
	-[(AppleMediaServices) ams_compressWithAlgorithm:]
	-[(AppleMediaServices) ams_decryptUsingDataProtectionClass:initializationVectorData:tagData:error:]
	-[(AppleMediaServices) ams_encryptDataUsingDataProtectionClass:error:]

(AppleMediaServices_EncryptionResult)
	// class methods
	+[(AppleMediaServices_EncryptionResult) ams_dictionaryWithEncryptionResult:]

	// instance methods
	-[(AppleMediaServices_EncryptionResult) ams_firstKeyObjectPassingTest:]
	-[(AppleMediaServices_EncryptionResult) ams_componentsJoinedByString:]
	-[(AppleMediaServices_EncryptionResult) ams_firstKeyPassingTest:]
	-[(AppleMediaServices_EncryptionResult) ams_arrayUsingTransform:]
	-[(AppleMediaServices_EncryptionResult) ams_objectForCaseInsensitiveKey:]
	-[(AppleMediaServices_EncryptionResult) ams_mapWithTransform:]
	-[(AppleMediaServices_EncryptionResult) ams_filterUsingTest:]
	-[(AppleMediaServices_EncryptionResult) ams_encryptionResult]
	-[(AppleMediaServices_EncryptionResult) ams_firstObjectPassingTest:]
	-[(AppleMediaServices_EncryptionResult) hashedDescription]
	-[(AppleMediaServices_EncryptionResult) ams_objectForKey:defaultValue:]
	-[(AppleMediaServices_EncryptionResult) ams_dictionaryByAddingEntriesFromDictionary:]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) serverFriendlyFormatter]

(AppleMediaServices)
	// instance methods
	-[(AppleMediaServices) ams_underlyingErrorWithDomain:code:]
	-[(AppleMediaServices) ams_errorByAddingUnderlyingError:]
	-[(AppleMediaServices) ams_title]
	-[(AppleMediaServices) ams_isUserCancelledError]
	-[(AppleMediaServices) ams_hasDomain:code:]
	-[(AppleMediaServices) ams_errorByAddingUserInfo:]
	-[(AppleMediaServices) ams_underlyingError]
	-[(AppleMediaServices) ams_message]

NSHTTPURLResponse(AMSAnisette)
	// instance methods
	-[NSHTTPURLResponse(AMSAnisette) ams_actionData]
	-[NSHTTPURLResponse(AMSAnisette) ams_actionName]
	-[NSHTTPURLResponse(AMSAnisette) ams_actionNameV1]
	-[NSHTTPURLResponse(AMSAnisette) ams_actionDataV1]
	-[NSHTTPURLResponse(AMSAnisette) ams_actionNameV1_5]
	-[NSHTTPURLResponse(AMSAnisette) ams_actionDataV1_5]
	-[NSHTTPURLResponse(AMSAnisette) _anisetteType]

NSMutableArray(AppleMediaServices)
	// instance methods
	-[NSMutableArray(AppleMediaServices) ams_addObjectsFromNullableArray:]
	-[NSMutableArray(AppleMediaServices) ams_removeObjectsPassingTest:]
	-[NSMutableArray(AppleMediaServices) ams_addNullableObject:]

NSMutableDictionary(AppleMediaServices)
	// instance methods
	-[NSMutableDictionary(AppleMediaServices) ams_setNullableObject:forKey:]

NSMutableString(AppleMediaServices)
	// instance methods
	-[NSMutableString(AppleMediaServices) ams_appendNullableString:]

(AppleMediaServices)
	// instance methods
	-[(AppleMediaServices) ams_generateDescriptionWithSubObjects:]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) ams_JSONClasses]
	+[(AppleMediaServices) ams_PLISTClasses]

	// instance methods
	-[(AppleMediaServices) ams_mapWithTransform:]
	-[(AppleMediaServices) ams_filterUsingTest:]
	-[(AppleMediaServices) ams_firstObjectPassingTest:]
	-[(AppleMediaServices) ams_nonEmptyComponentsJoinedByString:]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) _replaceMarkupForMutableAttributedString:markupType:]
	+[(AppleMediaServices) _replaceBreakingSpaceMarkupForMutableAttributedString:]

	// instance methods
	-[(AppleMediaServices) ams_matchesRegex:]
	-[(AppleMediaServices) ams_replacingPatternWithUsername:]
	-[(AppleMediaServices) ams_replacingMarkupUsingAccount:shouldUppercase:]
	-[(AppleMediaServices) ams_stringByRemovingCharactersInSet:]

NSThread(AppleMediaServices)
	// class methods
	+[NSThread(AppleMediaServices) ams_symbolicatedCallStackSymbols]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) ams_unescapedStringForString:]
	+[(AppleMediaServices) ams_cachesDirectory]
	+[(AppleMediaServices) ams_engagementDirectory]
	+[(AppleMediaServices) ams_realHomeDirectory]

	// instance methods
	-[(AppleMediaServices) ams_schemeSwizzledURL]
	-[(AppleMediaServices) ams_URLByAppendingQueryParameters:]
	-[(AppleMediaServices) ams_URLByDeletingTrailingSlash]
	-[(AppleMediaServices) ams_URLByReplacingSchemeWithScheme:]
	-[(AppleMediaServices) ams_URLByReplaceingQueryParameters:]
	-[(AppleMediaServices) ams_parameters]
	-[(AppleMediaServices) ams_valueForQueryParameter:]

NSURLQueryItem(AppleMediaServices)
	// class methods
	+[NSURLQueryItem(AppleMediaServices) queryItemsFromDictionary:]

NSURLRequest(AMSMockURLRequest)
	// instance methods
	-[NSURLRequest(AMSMockURLRequest) body]
	-[NSURLRequest(AMSMockURLRequest) ams_requestIsBagLoad]
	-[NSURLRequest(AMSMockURLRequest) ams_valueForHTTPHeader:]
	-[NSURLRequest(AMSMockURLRequest) ams_cookies]

NSMutableURLRequest(AppleMediaServices)
	// instance methods
	-[NSMutableURLRequest(AppleMediaServices) _ams_addCookies:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addContentTypeHeaderForEncoding:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addContentLengthHeaderForData:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addAuthorizationHeaderForAccount:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addStoreFrontHeaderForAccount:client:withBag:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addRequestTimestampHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addAnisetteHeadersForAccount:type:bag:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addXTokenHeaderWithAccount:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addParameters:encoding:compressBody:error:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addSilentEnrollmentHeadersForAccount:]
	-[NSMutableURLRequest(AppleMediaServices) ams_removeAnisetteHeaders]
	-[NSMutableURLRequest(AppleMediaServices) ams_addCookiesForAccount:clientInfo:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addIdentifierHeadersForAccount:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addAbsintheHeadersWithBuyParams:bag:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addMescalHeaderWithType:bag:logKey:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addPrimaryiCloudIdentifierHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addAuthKitHeaders]
	-[NSMutableURLRequest(AppleMediaServices) ams_addAcceptLanguageHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addCacheBusterParameter]
	-[NSMutableURLRequest(AppleMediaServices) ams_addCachePolicyHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addClientIdentifierHeaderForClient:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addHeaders:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addClientVersionsForClient:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addConnectionTypeHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addGUIDParameterUsingBag:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addIssuingProcessHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addRequestingProcessWithClient:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addTimezoneOffsetHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addUserAgentHeaderFromClient:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addBiometricsHeadersForAccount:options:]

NSURLResponse(AppleMediaServices)
	// instance methods
	-[NSURLResponse(AppleMediaServices) _getCacheControlMaxAge:]
	-[NSURLResponse(AppleMediaServices) ams_statusCode]
	-[NSURLResponse(AppleMediaServices) ams_headers]
	-[NSURLResponse(AppleMediaServices) ams_expirationInterval]
	-[NSURLResponse(AppleMediaServices) ams_valueForHTTPHeader:]

NSURLSessionConfiguration(AppleMediaServices)
	// class methods
	+[NSURLSessionConfiguration(AppleMediaServices) _URLBagCache]
	+[NSURLSessionConfiguration(AppleMediaServices) _allowsAMSURLCache]
	+[NSURLSessionConfiguration(AppleMediaServices) ams_configurationWithProcessInfo:bag:]

	// instance methods
	-[NSURLSessionConfiguration(AppleMediaServices) ams_configureWithProcessInfo:bag:]

01 00 0400 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0400 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountCredential 
01 00 0400 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0700 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 0700 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationContext 
01 00 0700 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 0700 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDSession 
01 00 0700 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKDevice 
01 00 0700 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKUsernameFormatter 
01 00 0600 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 0600 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 0c00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0f00 /System/Library/PrivateFrameworks/FeatureFlagsSupport.framework/FeatureFlagsSupport: FFConfiguration 
01 00 1700 /System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication: LAContext 
01 00 0a00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0a00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleRecord 
01 00 1800 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConditionLock 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDecimalNumber 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPCookie 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPCookieStorage 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponentsFormatter 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCache 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredential 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLProtocol 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLResponse 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1a00 /System/Library/Frameworks/Network.framework/Network: NWInterface 
01 00 0300 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomPresentationFeed.framework/SymptomPresentationFeed: NWNetworkOfInterestManager 
01 00 1b00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSMutableUserNotificationTextFieldDefinition 
01 00 0100 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 1e00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNCalendarNotificationTrigger 
01 00 1e00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 1e00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationAction 
01 00 1e00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationAttachment 
01 00 1e00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 1e00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 0a00 /System/Library/Frameworks/CoreServices.framework/CoreServices: _LSOpenConfiguration 
