|| __DATA.__objc_data _OBJC_CLASS_$_TADominantUserActivity
|| __DATA.__objc_data _OBJC_CLASS_$_TAGeneralDetectionMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_TAInterVisitMetricPerDeviceSettings
|| __DATA.__objc_data _OBJC_CLASS_$_TAInterVisitSummary
|| __DATA.__objc_data _OBJC_CLASS_$_TAMetricsInterVisit
|| __DATA.__objc_data _OBJC_CLASS_$_TAMetricsVisit
|| __DATA.__objc_data _OBJC_CLASS_$_TAPeopleDensityResult
|| __DATA.__objc_data _OBJC_CLASS_$_TAPrivateVehicleClassificationReason
|| __DATA.__objc_data _OBJC_CLASS_$_TAReplay
|| __DATA.__objc_data _OBJC_CLASS_$_TASingleVisitDetectionMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_TAStagedSuspiciousDevice
|| __DATA.__objc_data _OBJC_CLASS_$_TASuspiciousDevice
|| __DATA.__objc_data _OBJC_CLASS_$_TAVehicleCategory
|| __DATA.__objc_data _OBJC_CLASS_$_TAVehicleCategoryLogic
|| __DATA.__objc_data _OBJC_METACLASS_$_TADominantUserActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_TAGeneralDetectionMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_TAInterVisitMetricPerDeviceSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_TAInterVisitSummary
|| __DATA.__objc_data _OBJC_METACLASS_$_TAMetricsInterVisit
|| __DATA.__objc_data _OBJC_METACLASS_$_TAMetricsVisit
|| __DATA.__objc_data _OBJC_METACLASS_$_TAPeopleDensityResult
|| __DATA.__objc_data _OBJC_METACLASS_$_TAPrivateVehicleClassificationReason
|| __DATA.__objc_data _OBJC_METACLASS_$_TAReplay
|| __DATA.__objc_data _OBJC_METACLASS_$_TASingleVisitDetectionMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_TAStagedSuspiciousDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_TASuspiciousDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_TAVehicleCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_TAVehicleCategoryLogic
|| __DATA_CONST.__const _NSJSONSerializationNSStringErrorDomain
|| __DATA_CONST.__const _TAOutgoingRequestsAdditionalHawkeyeLowEnergyScanningKey
|| __DATA_CONST.__const _TAOutgoingRequestsAdditionalScanningKey
|| __DATA_CONST.__const _TAOutgoingRequestsBOMObservationKey
|| __DATA_CONST.__const _TAOutgoingRequestsExpiringRecordMetricsKey
|| __DATA_CONST.__const _TAOutgoingRequestsInterVisitMetricsDonationKey
|| __DATA_CONST.__const _TAOutgoingRequestsPeopleDensityKey
|| __DATA_CONST.__const _TAOutgoingRequestsPlaySoundWithDetectionKey
|| __DATA_CONST.__const _TAOutgoingRequestsVisitMetricsDonationKey
|| __DATA_CONST.__const _TASingleDeviceRecordOutgoingRequestBOMObservationProductInfoKey
|| __DATA_CONST.__const _TASingleDeviceRecordOutgoingRequestBOMObservationTimeIntervalSinceLastBOMObservation
|| __DATA_CONST.__const _TASingleDeviceRecordOutgoingRequestPlaySoundWithDetectionFirstAlertMinutes
|| __DATA_CONST.__const _TASingleDeviceRecordOutgoingRequestPlaySoundWithDetectionFirstSeenMinutes
|| __DATA_CONST.__const _TASingleDeviceRecordOutgoingRequestPlaySoundWithDetectionLastAlertMinutes
|| __DATA_CONST.__const _TASingleDeviceRecordOutgoingRequestPlaySoundWithDetectionLastAttemptedMinutes
|| __DATA_CONST.__const _TASingleDeviceRecordOutgoingRequestPlaySoundWithDetectionProductInfo
|| __DATA_CONST.__const _TASingleDeviceRecordOutgoingRequestPlaySoundWithDetectionSoundCount
|| __DATA_CONST.__const _TASingleDeviceRecordOutgoingRequestPlaySoundWithDetectionSoundMinutes
|| __DATA_CONST.__const _TASingleDeviceRecordOutgoingRequestPlaySoundWithDetectionSuccess
|| __DATA_CONST.__const _kTAAnalyticsManagerEnableSubmissionKey
|| __DATA_CONST.__const _kTAEventBufferCapacityKey
|| __DATA_CONST.__const _kTAEventBufferTimeIntervalOfRetentionKey
|| __DATA_CONST.__const _kTAFilterGeneralDurationOfConsiderationKey
|| __DATA_CONST.__const _kTAFilterGeneralThresholdOfLocationRelevanceKey
|| __DATA_CONST.__const _kTAFilterGeneralThresholdOfSignificantDistanceKey
|| __DATA_CONST.__const _kTAFilterGeneralThresholdOfSignificantDurationKey
|| __DATA_CONST.__const _kTAFilterSingleVisitEnabledLoiTypesKey
|| __DATA_CONST.__const _kTAFilterVisitsMaxSuspiciousDurationKey
|| __DATA_CONST.__const _kTAFilterVisitsMinInterVisitDistanceKey
|| __DATA_CONST.__const _kTAFilterVisitsMinNSigmaKey
|| __DATA_CONST.__const _kTANotificationThrottleHoursKey
|| __DATA_CONST.__const _kTANotificationThrottleMaxPerPeriodKey
|| __DATA_CONST.__const _kTAPeopleDensityEnabledKey
|| __DATA_CONST.__const _kTAPersistenceIntervalKey
|| __DATA_CONST.__const _kTAPersistenceManagerDirectoryKey
|| __DATA_CONST.__const _kTAPersistenceManagerStoreFileNameKey
|| __DATA_CONST.__const _kTAScanInterVisitScanDelayKey
|| __DATA_CONST.__const _kTAScanMaxDailyRequestsKey
|| __DATA_CONST.__const _kTAScanMaxInterVisitRequestsKey
|| __DATA_CONST.__const _kTAScanMinInterVisitDisplayOnDurationKey
|| __DATA_CONST.__const _kTAScanMinVisitEntryDisplayOnDurationKey
|| __DATA_CONST.__const _kTAScanRequestReasonKey
|| __DATA_CONST.__const _kTASettingsVersionKey
|| __DATA_CONST.__const _kTATrackingAvoidanceEnabledKey
|| __DATA_DIRTY.__common _TAEventsLog
|| __DATA_DIRTY.__common _TASAEventsLog
|| __DATA_DIRTY.__common _TASALog
|| __DATA_DIRTY.__common _TAStatusLog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAAggressiveScanState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAAnalyticsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAAnalyticsManagerSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TACLVisit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TACircularBuffer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TACoreAnalyticMetricManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TADeviceInformation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TADeviceRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TADeviceRecordSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TADisplayOnCalculator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAEventBuffer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAEventBufferSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAFilterGeneral
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAFilterGeneralSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAFilterKnownDevices
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAFilterLeavingLOI
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAFilterLeavingLOISettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAFilterObservationAggregator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAFilterSingleVisit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAFilterSingleVisitSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAFilterVisits
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAFilterVisitsSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAGeoNavigationNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAInterVisitMetricPerDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAInterVisitMetricsSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TALocationLite
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TALocationOfInterest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAMetricsDetection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAOutgoingRequests
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAPersistenceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAPersistenceManagerSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAPersistenceStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAPlaySoundSuccess
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAPredictedLocationOfInterest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TASPAdvertisement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAScanRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAScanRequestSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TASettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TASingleDeviceRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TASystemState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TATrackingAvoidanceService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TATrackingAvoidanceServiceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TATrackingAvoidanceServiceSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TATrackingAvoidanceServiceStateContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAUserActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAVehicleStateNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAVisitDetectionMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAVisitSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAVisitState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TAVisitStateSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAAggressiveScanState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAAnalyticsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAAnalyticsManagerSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TACLVisit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TACircularBuffer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TACoreAnalyticMetricManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TADeviceInformation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TADeviceRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TADeviceRecordSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TADisplayOnCalculator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAEventBuffer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAEventBufferSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAFilterGeneral
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAFilterGeneralSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAFilterKnownDevices
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAFilterLeavingLOI
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAFilterLeavingLOISettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAFilterObservationAggregator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAFilterSingleVisit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAFilterSingleVisitSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAFilterVisits
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAFilterVisitsSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAGeoNavigationNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAInterVisitMetricPerDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAInterVisitMetricsSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TALocationLite
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TALocationOfInterest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAMetricsDetection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAOutgoingRequests
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAPersistenceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAPersistenceManagerSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAPersistenceStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAPlaySoundSuccess
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAPredictedLocationOfInterest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TASPAdvertisement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAScanRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAScanRequestSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TASettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TASingleDeviceRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TASystemState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TATrackingAvoidanceService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TATrackingAvoidanceServiceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TATrackingAvoidanceServiceSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TATrackingAvoidanceServiceStateContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAUserActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAVehicleStateNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAVisitDetectionMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAVisitSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAVisitState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TAVisitStateSettings
|| __TEXT.__const _TALocationOfInterestHomeAssociationDistanceMeters
|| __TEXT.__text _TACLVisitConfidenceToString
|| __TEXT.__text _TAGeoNavigationListenerStateToString
|| __TEXT.__text _TAGeoTransportTypeToString
|| __TEXT.__text _TALocationOfInterestTypeToString
|| __TEXT.__text _TAPrivateVehicleClassificationReasonEnumToString
|| __TEXT.__text _TARegisterLogs
|| __TEXT.__text _TASystemStateTypeToString
|| __TEXT.__text _TAUserActivityTypeToString
|| __TEXT.__text _TAVehicularOperatorStateToString
|| __TEXT.__text _TAVehicularStateToString
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreRoutine: _OBJC_CLASS_$_RTRoutineManager
__ CoreRoutine: _OBJC_CLASS_$_RTStoredVisitFetchOptions
__ CoreRoutine: _RTVisitConfidenceHigh
__ CoreTime: _TMConvertTicksToSeconds
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ LoggingSupport: _OBJC_CLASS_$_OSActivityStream
__ LoggingSupport: _OBJC_CLASS_$_OSLogPersistence
__ libMobileGestalt.dylib: _MGIsDeviceOfType
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _sprintf
__ libSystem.B.dylib: _strtol
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
TAFilterKnownDevices : NSObject
  // class methods
  +[TAFilterKnownDevices removeMetricsFromKnownDevices:deviceRecord:]
  +[TAFilterKnownDevices removeDuplicateSuspiciousDevices:]
  +[TAFilterKnownDevices removeAndProcessBackgroundDetections:deviceRecord:]
  +[TAFilterKnownDevices removeIssuedDevices:deviceRecord:]
  +[TAFilterKnownDevices removeKnownSuspiciousDevices:deviceRecord:]


TAOutgoingRequests : NSObject
 @property  NSString *key
 @property  NSDictionary *additionalInformation
 @property  NSDate *date

  // instance methods
  -[TAOutgoingRequests descriptionDictionary]
  -[TAOutgoingRequests date]
  -[TAOutgoingRequests .cxx_destruct]
  -[TAOutgoingRequests key]
  -[TAOutgoingRequests initWithRequestKey:additionalInformation:date:]
  -[TAOutgoingRequests additionalInformation]


TAFilterLeavingLOISettings : NSObject
 @property  double thresholdOfSignificantDuration
 @property  double thresholdOfSignificantDistance
 @property  TAFilterVisitsSettings *visitsSettings
 @property  NSSet *enabledLoiTypes
 @property  unsigned long leavingHomeImmediacyType
 @property  unsigned long leavingWorkImmediacyType

  // class methods
  +[TAFilterLeavingLOISettings defaultLeavingLOIEnabledLoiTypes]

  // instance methods
  -[TAFilterLeavingLOISettings initWithThresholdOfSignificantDurationOrDefault:thresholdOfSignificantDistanceOrDefault:filterVisitsSettingsOrDefault:enabledLoiTypesOrDefault:leavingHomeImmediacyTypeOrDefault:leavingWorkImmediacyTypeOrDefault:]
  -[TAFilterLeavingLOISettings visitsSettings]
  -[TAFilterLeavingLOISettings enabledLoiTypesToString]
  -[TAFilterLeavingLOISettings initWithThresholdOfSignificantDuration:thresholdOfSignificantDistance:filterVisitsSettings:enabledLoiTypes:leavingHomeImmediacyType:leavingWorkImmediacyType:]
  -[TAFilterLeavingLOISettings .cxx_destruct]
  -[TAFilterLeavingLOISettings leavingWorkImmediacyType]
  -[TAFilterLeavingLOISettings thresholdOfSignificantDistance]
  -[TAFilterLeavingLOISettings enabledLoiTypes]
  -[TAFilterLeavingLOISettings thresholdOfSignificantDuration]
  -[TAFilterLeavingLOISettings leavingHomeImmediacyType]
  -[TAFilterLeavingLOISettings initWithDefaults]


TAFilterLeavingLOI : NSObject
  // class methods
  +[TAFilterLeavingLOI filterSuspiciousDeviceWithStore:leavingLOISettings:andAppendOutgoingRequestsTo:]
  +[TAFilterLeavingLOI getLeavingLOIDetectionTypeForLOIType:]
  +[TAFilterLeavingLOI getLeavingLOINotificationImmediacyTypeForLOIType:leavingLOISettings:]
  +[TAFilterLeavingLOI shouldDetectWithStore:filterLeavingLOISettings:]


TASuspiciousDevice : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *address
 @property  NSDictionary *detectionSummary
 @property  NSDate *date
 @property  TASPAdvertisement *latestAdvertisement
 @property  NSArray *locationHistory
 @property  TAMetricsDetection *detectionMetrics
 @property  unsigned long detectionType
 @property  unsigned long immediacyType

  // class methods
  +[TASuspiciousDevice supportsSecureCoding]
  +[TASuspiciousDevice convertTANotificationImmediacyTypeToString:]

  // instance methods
  -[TASuspiciousDevice encodeWithCoder:]
  -[TASuspiciousDevice descriptionDictionary]
  -[TASuspiciousDevice date]
  -[TASuspiciousDevice .cxx_destruct]
  -[TASuspiciousDevice address]
  -[TASuspiciousDevice latestAdvertisement]
  -[TASuspiciousDevice copyWithZone:]
  -[TASuspiciousDevice isEqual:]
  -[TASuspiciousDevice initWithCoder:]
  -[TASuspiciousDevice detectionType]
  -[TASuspiciousDevice initWithLatestAdv:detectionSummary:date:locHistory:detectionMetrics:detectionType:immediacyType:]
  -[TASuspiciousDevice detectionSummary]
  -[TASuspiciousDevice locationHistory]
  -[TASuspiciousDevice detectionMetrics]
  -[TASuspiciousDevice immediacyType]


TAPrivateVehicleClassificationReason : NSObject
 @property  unsigned long reason

  // instance methods
  -[TAPrivateVehicleClassificationReason initWithReason:]
  -[TAPrivateVehicleClassificationReason reason]
  -[TAPrivateVehicleClassificationReason isEqual:]


TAVehicleCategoryLogic : NSObject
  // class methods
  +[TAVehicleCategoryLogic accumulatedTAVehicleCategoryHistoryFromVehicleStateNotificationInTAStore:since:to:]
  +[TAVehicleCategoryLogic accumulatedTAVehicleCategoryHistoryFromGeoNavigationNotificationInTAStore:since:to:]
  +[TAVehicleCategoryLogic extractPrivateVehicleHintsFromTAStore:since:to:]


TAPersistenceStore : NSObject <NSSecureCoding>
 @property  TADeviceRecord *deviceRecord
 @property  TAVisitState *visitState

  // class methods
  +[TAPersistenceStore supportsSecureCoding]

  // instance methods
  -[TAPersistenceStore deviceRecord]
  -[TAPersistenceStore setDeviceRecord:]
  -[TAPersistenceStore encodeWithCoder:]
  -[TAPersistenceStore visitState]
  -[TAPersistenceStore .cxx_destruct]
  -[TAPersistenceStore setVisitState:]
  -[TAPersistenceStore isEqual:]
  -[TAPersistenceStore initWithCoder:]


TADominantUserActivity : NSObject
  // class methods
  +[TADominantUserActivity getCumulativeUserActivityTimeInDateInterval:store:]
  +[TADominantUserActivity getDominantUserActivityInfoInDateInterval:store:]


TAFilterGeneralSettings : NSObject
 @property  double durationOfConsideration
 @property  double thresholdOfLocationRelevance
 @property  double thresholdOfSignificantDuration
 @property  double thresholdOfSignificantDistance
 @property  double capOfReasonableWalkingSpeed
 @property  BOOL allowNavGeoHintAsPrivateVehicleHint
 @property  unsigned long vehicularImmediacyType
 @property  unsigned long beepOnMoveVehicularImmediacyType
 @property  unsigned long beepOnMovePedestrianImmediacyType
 @property  unsigned long nextPLOIVehicularImmediacyType
 @property  unsigned long nextPLOIPedestrianImmediacyType

  // instance methods
  -[TAFilterGeneralSettings thresholdOfLocationRelevance]
  -[TAFilterGeneralSettings vehicularImmediacyType]
  -[TAFilterGeneralSettings durationOfConsideration]
  -[TAFilterGeneralSettings beepOnMovePedestrianImmediacyType]
  -[TAFilterGeneralSettings allowNavGeoHintAsPrivateVehicleHint]
  -[TAFilterGeneralSettings nextPLOIVehicularImmediacyType]
  -[TAFilterGeneralSettings thresholdOfSignificantDistance]
  -[TAFilterGeneralSettings nextPLOIPedestrianImmediacyType]
  -[TAFilterGeneralSettings initWithDurationOfConsideration:thresholdOfLocationRelevance:thresholdOfSignificantDuration:thresholdOfSignificantDistance:capOfReasonableWalkingSpeed:allowNavGeoHintAsPrivateVehicleHint:vehicularImmediacyType:beepOnMoveVehicularImmediacyType:beepOnMovePedestrianImmediacyType:nextPLOIVehicularImmediacyType:nextPLOIPedestrianImmediacyType:]
  -[TAFilterGeneralSettings initWithDurationOfConsiderationOrDefault:thresholdOfLocationRelevanceOrDefault:thresholdOfSignificantDurationOrDefault:thresholdOfSignificantDistanceOrDefault:capOfReasonableWalkingSpeedOrDefault:allowNavGeoHintAsPrivateVehicleHintOrDefault:vehicularImmediacyTypeOrDefault:beepOnMoveVehicularImmediacyTypeOrDefault:beepOnMovePedestrianImmediacyTypeOrDefault:nextPLOIVehicularImmediacyTypeOrDefault:nextPLOIPedestrianImmediacyTypeOrDefault:]
  -[TAFilterGeneralSettings thresholdOfSignificantDuration]
  -[TAFilterGeneralSettings capOfReasonableWalkingSpeed]
  -[TAFilterGeneralSettings beepOnMoveVehicularImmediacyType]
  -[TAFilterGeneralSettings initWithDefaults]


TAFilterGeneral : NSObject
  // class methods
  +[TAFilterGeneral filterSuspiciousDeviceWithStore:andAppendOutgoingRequestsTo:]
  +[TAFilterGeneral getDateIntervalOfInterestForFiltering:settings:]
  +[TAFilterGeneral satisfyBeepOnMoveRequirementForAddress:store:settings:]
  +[TAFilterGeneral satisfyNextPLOIHomeWithStore:]
  +[TAFilterGeneral filterSuspiciousDeviceWithStore:settings:andAppendOutgoingRequestsTo:]
  +[TAFilterGeneral filteredInterVisitMetadataWithVisitAdjustment:inInterval:withLocRelevanceThreshold:]
  +[TAFilterGeneral dateIntervalAfterVisitAdjustment:intervalOfInterest:]
  +[TAFilterGeneral preprocessLocationAndAdvertisementWithEnumerator:addressToLocationList:addressToAdvertisementList:relevanceThreshold:]
  +[TAFilterGeneral filteredInterVisitMetadata:inInterval:withLocRelevanceThreshold:]
  +[TAFilterGeneral distOfTravelAlong:]
  +[TAFilterGeneral locationSegments:underMaxSpeed:]
  +[TAFilterGeneral locationSegmentsUnderPedestrianMaxSpeed:withFilterSettings:]
  +[TAFilterGeneral filteredPeopleDensityResults:within:]
  +[TAFilterGeneral shouldIssuePeopleDensityScan:distTravel:durationOfTravel:settings:resultsInBuffer:]


TAFilterSingleVisitSettings : NSObject
 @property  double thresholdOfSignificantDuration
 @property  double thresholdOfSignificantDistance
 @property  TAFilterVisitsSettings *visitsSettings
 @property  NSSet *enabledLoiTypes
 @property  unsigned long arrivingWorkImmediacyType

  // class methods
  +[TAFilterSingleVisitSettings defaultSingleVisitEnabledLoiTypes]

  // instance methods
  -[TAFilterSingleVisitSettings visitsSettings]
  -[TAFilterSingleVisitSettings enabledLoiTypesToString]
  -[TAFilterSingleVisitSettings .cxx_destruct]
  -[TAFilterSingleVisitSettings arrivingWorkImmediacyType]
  -[TAFilterSingleVisitSettings thresholdOfSignificantDistance]
  -[TAFilterSingleVisitSettings initWithThresholdOfSignificantDuration:thresholdOfSignificantDistance:filterVisitsSettings:enabledLoiTypes:arrivingWorkImmediacyType:]
  -[TAFilterSingleVisitSettings enabledLoiTypes]
  -[TAFilterSingleVisitSettings thresholdOfSignificantDuration]
  -[TAFilterSingleVisitSettings initWithThresholdOfSignificantDurationOrDefault:thresholdOfSignificantDistanceOrDefault:filterVisitsSettingsOrDefault:enabledLoiTypesOrDefault:arrivingWorkImmediacyTypeOrDefault:]
  -[TAFilterSingleVisitSettings initWithDefaults]


TAFilterSingleVisit : NSObject
  // class methods
  +[TAFilterSingleVisit filterSuspiciousDeviceWithStore:singleVisitSettings:andAppendOutgoingRequestsTo:]
  +[TAFilterSingleVisit getSingleVisitDetectionTypeForLOIType:]
  +[TAFilterSingleVisit getSingleVisitNotificationImmediacyTypeForLOIType:singleVisitSettings:]
  +[TAFilterSingleVisit shouldDetectWithStore:filterSingleVisitSettings:]


TAFilterVisitsSettings : NSObject
 @property  double maxSuspiciousDuration
 @property  double minInterVisitDistance
 @property  unsigned long minNSigmaBetweenVisits
 @property  double entryDisplayOnBudget
 @property  double exitDisplayOnBudget
 @property  NSSet *sensitiveLOITypes
 @property  double minObservationInterval
 @property  unsigned long threeVisitImmediacyType

  // class methods
  +[TAFilterVisitsSettings _isLegacyHardware]
  +[TAFilterVisitsSettings _determinDefaultEntryDisplayOnBudget]
  +[TAFilterVisitsSettings _determinDefaultExitDisplayOnBudget]
  +[TAFilterVisitsSettings defaultVisitsSensitiveLOITypes]

  // instance methods
  -[TAFilterVisitsSettings initWithMaxSuspiciousDurationOrDefault:minInterVisitDistanceOrDefault:minNSigmaBetweenVisitsOrDefault:entryDisplayOnBudgetOrDefault:exitDisplayOnBudgetOrDefault:sensitiveLOITypesOrDefault:minObservationIntervalOrDefault:threeVisitImmediacyTypeOrDefault:]
  -[TAFilterVisitsSettings .cxx_destruct]
  -[TAFilterVisitsSettings entryDisplayOnBudget]
  -[TAFilterVisitsSettings minInterVisitDistance]
  -[TAFilterVisitsSettings sensitiveLOITypesToString]
  -[TAFilterVisitsSettings minNSigmaBetweenVisits]
  -[TAFilterVisitsSettings threeVisitImmediacyType]
  -[TAFilterVisitsSettings maxSuspiciousDuration]
  -[TAFilterVisitsSettings minObservationInterval]
  -[TAFilterVisitsSettings sensitiveLOITypes]
  -[TAFilterVisitsSettings initWithMaxSuspiciousDuration:minInterVisitDistance:minNSigmaBetweenVisits:entryDisplayOnBudget:exitDisplayOnBudget:sensitiveLOITypes:minObservationInterval:threeVisitImmediacyType:]
  -[TAFilterVisitsSettings exitDisplayOnBudget]
  -[TAFilterVisitsSettings initWithDefaults]


TAFilterVisits : NSObject
  // class methods
  +[TAFilterVisits filterSuspiciousDeviceWithStore:andAppendOutgoingRequestsTo:]
  +[TAFilterVisits filterSuspiciousDeviceWithStore:settings:andAppendOutgoingRequestsTo:]
  +[TAFilterVisits getSuspiciousDeviceAdvertisementsFromVisitSnapshot:toVisitSnapshot:settings:currentClockTime:]
  +[TAFilterVisits getSuspiciousDeviceAdvertisementsFromVisitSnapshot:toVisitSnapshot:settings:currentClockTime:skipFreshObservationCheck:]
  +[TAFilterVisits shouldDetectWithStore:settings:]
  +[TAFilterVisits getEntryAddressSetInTAVisitSnapshot:usingSettings:]
  +[TAFilterVisits getExitAddressSetInTAVisitSnapshot:usingSettings:]
  +[TAFilterVisits getAddressSetInTAVisitSnapshot:]
  +[TAFilterVisits getIntersectionOfFirstSet:andSecondSet:]
  +[TAFilterVisits isReasonableSpeedOfTravelFrom:to:]
  +[TAFilterVisits identifyDetectionTypeWithStore:settings:]
  +[TAFilterVisits sensitiveVisitsTooCloseBetweenFromLOIType:toLOIType:distance:settings:]


TAMetricsVisit : NSObject <TAMetricsProtocol>
 @property  NSData *address
 @property  unsigned long totalVisitCount
 @property  unsigned long totalDistinctVisitCount
 @property  unsigned long consecutiveVisitCount
 @property  unsigned long consecutiveAndDistinctFromPrevVisitCount
 @property  double durationOfVisitEntryConsideration
 @property  double durationOfVisitExitConsideration
 @property  NSDateInterval *visitEntryDelay
 @property  NSDateInterval *visitExitDelay
 @property  double latitude
 @property  double longitude
 @property  NSNumber *distanceToPreviousSeenVisit
 @property  TASPAdvertisement *latestAdvertisement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TAMetricsVisit latitude]
  -[TAMetricsVisit descriptionDictionary]
  -[TAMetricsVisit longitude]
  -[TAMetricsVisit .cxx_destruct]
  -[TAMetricsVisit address]
  -[TAMetricsVisit latestAdvertisement]
  -[TAMetricsVisit getMetricsCollectionType]
  -[TAMetricsVisit initWithSnapshotHistory:andAddress:andVisitFilterSettings:]
  -[TAMetricsVisit totalVisitCount]
  -[TAMetricsVisit totalDistinctVisitCount]
  -[TAMetricsVisit consecutiveVisitCount]
  -[TAMetricsVisit consecutiveAndDistinctFromPrevVisitCount]
  -[TAMetricsVisit durationOfVisitEntryConsideration]
  -[TAMetricsVisit durationOfVisitExitConsideration]
  -[TAMetricsVisit visitEntryDelay]
  -[TAMetricsVisit visitExitDelay]
  -[TAMetricsVisit distanceToPreviousSeenVisit]


TAGeneralDetectionMetrics : NSObject <NSSecureCoding>
 @property  TAInterVisitMetricPerDevice *interVisitMetrics
 @property  unsigned long dominantUserActivity
 @property  long long pdState
 @property  BOOL geoNavHint
 @property  BOOL vehicularStateHint

  // class methods
  +[TAGeneralDetectionMetrics supportsSecureCoding]

  // instance methods
  -[TAGeneralDetectionMetrics encodeWithCoder:]
  -[TAGeneralDetectionMetrics .cxx_destruct]
  -[TAGeneralDetectionMetrics isEqual:]
  -[TAGeneralDetectionMetrics initWithCoder:]
  -[TAGeneralDetectionMetrics initWithInterVisitMetrics:dominantUserActivity:pdState:geoNavHint:vehicularStateHint:]
  -[TAGeneralDetectionMetrics interVisitMetrics]
  -[TAGeneralDetectionMetrics dominantUserActivity]
  -[TAGeneralDetectionMetrics pdState]
  -[TAGeneralDetectionMetrics geoNavHint]
  -[TAGeneralDetectionMetrics vehicularStateHint]


TAVisitDetectionMetrics : NSObject <NSSecureCoding>
 @property  double distanceToPreviousVisit
 @property  double residualDistanceToPreviousVisit
 @property  unsigned long nSigmaBetweenVisits

  // class methods
  +[TAVisitDetectionMetrics supportsSecureCoding]

  // instance methods
  -[TAVisitDetectionMetrics encodeWithCoder:]
  -[TAVisitDetectionMetrics isEqual:]
  -[TAVisitDetectionMetrics initWithCoder:]
  -[TAVisitDetectionMetrics initWithDistance:residualDistance:nSigma:]
  -[TAVisitDetectionMetrics distanceToPreviousVisit]
  -[TAVisitDetectionMetrics residualDistanceToPreviousVisit]
  -[TAVisitDetectionMetrics nSigmaBetweenVisits]


TASingleVisitDetectionMetrics : NSObject <NSSecureCoding>
 @property  TAInterVisitMetricPerDevice *interVisitMetrics
 @property  unsigned long loiType
 @property  unsigned long previousVisitType

  // class methods
  +[TASingleVisitDetectionMetrics supportsSecureCoding]

  // instance methods
  -[TASingleVisitDetectionMetrics encodeWithCoder:]
  -[TASingleVisitDetectionMetrics .cxx_destruct]
  -[TASingleVisitDetectionMetrics loiType]
  -[TASingleVisitDetectionMetrics isEqual:]
  -[TASingleVisitDetectionMetrics initWithCoder:]
  -[TASingleVisitDetectionMetrics interVisitMetrics]
  -[TASingleVisitDetectionMetrics initWithInterVisitMetrics:loiType:previousVisitType:]
  -[TASingleVisitDetectionMetrics previousVisitType]


TAMetricsDetection : NSObject <TAMetricsProtocol, NSSecureCoding>
 @property  unsigned long detectionType
 @property  TAGeneralDetectionMetrics *generalDetectionMetrics
 @property  TAVisitDetectionMetrics *visitDetectionMetrics
 @property  TASingleVisitDetectionMetrics *singleVisitDetectionMetrics
 @property  TASPAdvertisement *latestAdvertisement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TAMetricsDetection supportsSecureCoding]
  +[TAMetricsDetection convertTADetectionTypeToString:]

  // instance methods
  -[TAMetricsDetection encodeWithCoder:]
  -[TAMetricsDetection .cxx_destruct]
  -[TAMetricsDetection latestAdvertisement]
  -[TAMetricsDetection isEqual:]
  -[TAMetricsDetection initWithCoder:]
  -[TAMetricsDetection detectionType]
  -[TAMetricsDetection getMetricsCollectionType]
  -[TAMetricsDetection initWithDetectionType:visitDetectionMetrics:generalDetectionMetrics:singleVisitDetectionMetrics:latestAdvertisement:]
  -[TAMetricsDetection generalDetectionMetrics]
  -[TAMetricsDetection visitDetectionMetrics]
  -[TAMetricsDetection singleVisitDetectionMetrics]


TAInterVisitMetricPerDeviceSettings : NSObject <NSSecureCoding>
 @property  double sampledObservationLocationsInterval
 @property  unsigned long sampledObservationLocationsBufferSize

  // class methods
  +[TAInterVisitMetricPerDeviceSettings supportsSecureCoding]

  // instance methods
  -[TAInterVisitMetricPerDeviceSettings initWithSampledObservationLocationsInterval:sampledObservationLocationsBufferSize:]
  -[TAInterVisitMetricPerDeviceSettings setSampledObservationLocationsInterval:]
  -[TAInterVisitMetricPerDeviceSettings encodeWithCoder:]
  -[TAInterVisitMetricPerDeviceSettings sampledObservationLocationsInterval]
  -[TAInterVisitMetricPerDeviceSettings setSampledObservationLocationsBufferSize:]
  -[TAInterVisitMetricPerDeviceSettings sampledObservationLocationsBufferSize]
  -[TAInterVisitMetricPerDeviceSettings isEqual:]
  -[TAInterVisitMetricPerDeviceSettings init]
  -[TAInterVisitMetricPerDeviceSettings initWithCoder:]


TAInterVisitMetricPerDevice : NSObject <NSSecureCoding>
 @property  TAInterVisitMetricPerDeviceSettings *settings
 @property  NSArray *sampledObservedLocations
 @property  BOOL segmentSpeedExceedsLimit
 @property  unsigned long numOfAssociatedLocs
 @property  double duration
 @property  double distance
 @property  TASPAdvertisement *latestAdvertisement
 @property  NSDictionary *durationPerMotionState

  // class methods
  +[TAInterVisitMetricPerDevice supportsSecureCoding]

  // instance methods
  -[TAInterVisitMetricPerDevice distance]
  -[TAInterVisitMetricPerDevice initWithSettings:]
  -[TAInterVisitMetricPerDevice accumulateDuration:]
  -[TAInterVisitMetricPerDevice encodeWithCoder:]
  -[TAInterVisitMetricPerDevice descriptionDictionary]
  -[TAInterVisitMetricPerDevice durationPerMotionState]
  -[TAInterVisitMetricPerDevice .cxx_destruct]
  -[TAInterVisitMetricPerDevice duration]
  -[TAInterVisitMetricPerDevice settings]
  -[TAInterVisitMetricPerDevice setSettings:]
  -[TAInterVisitMetricPerDevice sampledObservedLocations]
  -[TAInterVisitMetricPerDevice accumulate:]
  -[TAInterVisitMetricPerDevice latestAdvertisement]
  -[TAInterVisitMetricPerDevice numOfAssociatedLocs]
  -[TAInterVisitMetricPerDevice accumulateDistance:]
  -[TAInterVisitMetricPerDevice accumulateSampledObservedLocations:]
  -[TAInterVisitMetricPerDevice accumulateDurationPerMotionState:]
  -[TAInterVisitMetricPerDevice accumulateLatestAdvertisement:]
  -[TAInterVisitMetricPerDevice segmentSpeedExceedsLimit]
  -[TAInterVisitMetricPerDevice isEqual:]
  -[TAInterVisitMetricPerDevice init]
  -[TAInterVisitMetricPerDevice setSegmentSpeedExceedsLimit:]
  -[TAInterVisitMetricPerDevice accumulateNumOfAssociatedLocs:]
  -[TAInterVisitMetricPerDevice initWithCoder:]


TAMetricsInterVisit : NSObject <TAMetricsProtocol>
 @property  TAInterVisitMetricPerDevice *currentInterVisitMetric
 @property  TAInterVisitMetricPerDevice *totalInterVisitMetric
 @property  TASPAdvertisement *latestAdvertisement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TAMetricsInterVisit descriptionDictionary]
  -[TAMetricsInterVisit .cxx_destruct]
  -[TAMetricsInterVisit latestAdvertisement]
  -[TAMetricsInterVisit init]
  -[TAMetricsInterVisit getMetricsCollectionType]
  -[TAMetricsInterVisit currentInterVisitMetric]
  -[TAMetricsInterVisit totalInterVisitMetric]


TASettings : NSObject
 @property  unsigned long settingsVersion
 @property  BOOL trackingAvoidanceEnabled
 @property  BOOL peopleDensityEnabled
 @property  unsigned long maximumDailyScans
 @property  unsigned long notificationThrottleHours
 @property  unsigned long notificationThrottleMaxPerPeriod
 @property  double persistenceInterval
 @property  TAFilterGeneralSettings *filterGeneralSettings
 @property  TAFilterVisitsSettings *filterVisitsSettings
 @property  TAFilterSingleVisitSettings *filterSingleVisitSettings
 @property  TAFilterLeavingLOISettings *filterLeavingLOISettings
 @property  TAEventBufferSettings *eventBufferSettings
 @property  TAVisitStateSettings *visitStateSettings
 @property  TADeviceRecordSettings *deviceRecordSettings
 @property  TAScanRequestSettings *scanRequestSettings
 @property  TATrackingAvoidanceServiceSettings *serviceSettings
 @property  TAPersistenceManagerSettings *persistenceManagerSettings
 @property  TAAnalyticsManagerSettings *analyticsManagerSettings

  // class methods
  +[TASettings getDoubleSettingsKeys]
  +[TASettings getUnsignedIntegerSettingsKeys]
  +[TASettings getArraySettingsKeys]
  +[TASettings getStringSettingsKeys]
  +[TASettings getBooleanSettingsKeys]
  +[TASettings getIntegerSettingsKeys]
  +[TASettings convertEnabledLoiTypesValueContentToNSNumberType:]

  // instance methods
  -[TASettings initWithSettings:]
  -[TASettings setPersistenceManagerSettings:]
  -[TASettings filterVisitsSettings]
  -[TASettings setScanRequestSettings:]
  -[TASettings setAnalyticsManagerSettings:]
  -[TASettings setTrackingAvoidanceEnabled:]
  -[TASettings maximumDailyScans]
  -[TASettings persistenceManagerSettings]
  -[TASettings filterLeavingLOISettings]
  -[TASettings .cxx_destruct]
  -[TASettings setVisitStateSettings:]
  -[TASettings setPersistenceInterval:]
  -[TASettings visitStateSettings]
  -[TASettings setFilterSingleVisitSettings:]
  -[TASettings setSettings:]
  -[TASettings persistenceInterval]
  -[TASettings notificationThrottleHours]
  -[TASettings setPeopleDensityEnabled:]
  -[TASettings setEventBufferSettings:]
  -[TASettings setMaximumDailyScans:]
  -[TASettings scanRequestSettings]
  -[TASettings setNotificationThrottleHours:]
  -[TASettings notificationThrottleMaxPerPeriod]
  -[TASettings setFilterGeneralSettings:]
  -[TASettings trackingAvoidanceEnabled]
  -[TASettings setSettingsVersion:]
  -[TASettings setFilterVisitsSettings:]
  -[TASettings peopleDensityEnabled]
  -[TASettings deviceRecordSettings]
  -[TASettings analyticsManagerSettings]
  -[TASettings eventBufferSettings]
  -[TASettings setNotificationThrottleMaxPerPeriod:]
  -[TASettings filterGeneralSettings]
  -[TASettings setFilterLeavingLOISettings:]
  -[TASettings filterSingleVisitSettings]
  -[TASettings setDeviceRecordSettings:]
  -[TASettings serviceSettings]
  -[TASettings init]
  -[TASettings settingsVersion]
  -[TASettings setServiceSettings:]


TAPredictedLocationOfInterest : NSObject <OSLogCoding, TAEventProtocol>
 @property  unsigned long type
 @property  double latitude
 @property  double longitude
 @property  double horizontalAccuracy
 @property  unsigned long referenceFrame
 @property  double confidence
 @property  NSDate *nextEntryTime
 @property  NSDate *date
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TAPredictedLocationOfInterest supportsSecureCoding]

  // instance methods
  -[TAPredictedLocationOfInterest horizontalAccuracy]
  -[TAPredictedLocationOfInterest confidence]
  -[TAPredictedLocationOfInterest latitude]
  -[TAPredictedLocationOfInterest encodeWithOSLogCoder:options:maxLength:]
  -[TAPredictedLocationOfInterest encodeWithCoder:]
  -[TAPredictedLocationOfInterest type]
  -[TAPredictedLocationOfInterest descriptionDictionary]
  -[TAPredictedLocationOfInterest longitude]
  -[TAPredictedLocationOfInterest getDate]
  -[TAPredictedLocationOfInterest date]
  -[TAPredictedLocationOfInterest .cxx_destruct]
  -[TAPredictedLocationOfInterest referenceFrame]
  -[TAPredictedLocationOfInterest copyWithZone:]
  -[TAPredictedLocationOfInterest isEqual:]
  -[TAPredictedLocationOfInterest initWithCoder:]
  -[TAPredictedLocationOfInterest nextEntryTime]
  -[TAPredictedLocationOfInterest initWithType:latitude:longitude:horizontalAccuracy:confidence:nextEntryTime:date:]
  -[TAPredictedLocationOfInterest initWithType:latitude:longitude:horizontalAccuracy:referenceFrame:confidence:nextEntryTime:date:]


TATrackingAvoidanceServiceSettings : NSObject
 @property  BOOL enableTAFilterGeneral
 @property  BOOL enableTAFilterVisits
 @property  BOOL enableTAFilterSingleVisit
 @property  BOOL enableTAFilterLeavingLOI
 @property  double classificationTimeInterval

  // instance methods
  -[TATrackingAvoidanceServiceSettings enableTAFilterGeneral]
  -[TATrackingAvoidanceServiceSettings enableTAFilterSingleVisit]
  -[TATrackingAvoidanceServiceSettings enableTAFilterVisits]
  -[TATrackingAvoidanceServiceSettings enableTAFilterLeavingLOI]
  -[TATrackingAvoidanceServiceSettings classificationTimeInterval]
  -[TATrackingAvoidanceServiceSettings initWithEnableTAFilterGeneral:enableTAFilterVisits:enableTAFilterSingleVisit:enableTAFilterLeavingLOI:classificationTimeInterval:]
  -[TATrackingAvoidanceServiceSettings initWithEnableTAFilterGeneralOrDefault:enableTAFilterVisitsOrDefault:enableTAFilterSingleVisitOrDefault:enableTAFilterLeavingLOIOrDefault:classificationTimeIntervalOrDefault:]
  -[TATrackingAvoidanceServiceSettings initWithDefaults]


TATrackingAvoidanceService : NSObject <TAStoreObserver, TATrackingAvoidanceServiceProtocol>
 @property  NSHashTable *observers
 @property  NSDate *latestClassificationDate
 @property  TATrackingAvoidanceServiceSettings *serviceSettings
 @property  TAOutgoingRequests *stagedIntervisitMetrics
 @property  TAStore *store
 @property  TASettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TATrackingAvoidanceService ingestTAEvent:]
  -[TATrackingAvoidanceService visitState:didChangeStateFromType:toType:]
  -[TATrackingAvoidanceService initWithSettings:]
  -[TATrackingAvoidanceService store]
  -[TATrackingAvoidanceService filterAndStageDetectionResults:]
  -[TATrackingAvoidanceService addObserver:]
  -[TATrackingAvoidanceService setStagedIntervisitMetrics:]
  -[TATrackingAvoidanceService notifyObserversOfStagedSuspiciousDevices:]
  -[TATrackingAvoidanceService bootstrapVisitState:]
  -[TATrackingAvoidanceService .cxx_destruct]
  -[TATrackingAvoidanceService latestClassificationDate]
  -[TATrackingAvoidanceService settings]
  -[TATrackingAvoidanceService bootstrapDeviceRecord:]
  -[TATrackingAvoidanceService _performDetection]
  -[TATrackingAvoidanceService setObservers:]
  -[TATrackingAvoidanceService notifyObserversOfSuspiciousDevices:]
  -[TATrackingAvoidanceService setLatestClassificationDate:]
  -[TATrackingAvoidanceService notifyObserversOfSuspiciousDeviceUpdate:]
  -[TATrackingAvoidanceService initWithTASettings:]
  -[TATrackingAvoidanceService visitState:didIssueMetricsSubmissionHint:]
  -[TATrackingAvoidanceService stagedIntervisitMetrics]
  -[TATrackingAvoidanceService _performUpdateIfNecessary:]
  -[TATrackingAvoidanceService removeObserver:]
  -[TATrackingAvoidanceService notifyObserversOfRequests:]
  -[TATrackingAvoidanceService shouldPerformDetection]
  -[TATrackingAvoidanceService notifyObserversOfVisitStateChange]
  -[TATrackingAvoidanceService serviceSettings]
  -[TATrackingAvoidanceService init]
  -[TATrackingAvoidanceService observers]
  -[TATrackingAvoidanceService setServiceSettings:]


TAReplay : NSObject <OSLogPersistenceDelegate, OSActivityStreamDelegate, OSDeviceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TAReplay .cxx_destruct]
  -[TAReplay streamDidStart:]
  -[TAReplay streamDidStop:]
  -[TAReplay persistence:results:error:]
  -[TAReplay persistenceDidFinishReadingForStartDate:endDate:]
  -[TAReplay activityStream:deviceUDID:deviceID:status:error:]
  -[TAReplay streamDidFail:error:]
  -[TAReplay activityStream:results:]
  -[TAReplay replayWithStartDate:endDate:]
  -[TAReplay replaySingleEventLogString:]
  -[TAReplay initWithLogArchive:outputPath:inputPersistencePath:settings:]


TASPAdvertisement : NSObject <OSLogCoding, TAEventProtocol>
 @property  NSData *address
 @property  NSData *advertisementData
 @property  unsigned char status
 @property  NSData *reserved
 @property  long long rssi
 @property  NSDate *scanDate
 @property  NSUUID *uuid
 @property  BOOL beepOnMoveHigh
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TASPAdvertisement supportsSecureCoding]
  +[TASPAdvertisement TASPAdvertisementTypeToString:]
  +[TASPAdvertisement TASPAdvertisementDeviceTypeToString:]

  // instance methods
  -[TASPAdvertisement getDeviceType]
  -[TASPAdvertisement getType]
  -[TASPAdvertisement encodeWithOSLogCoder:options:maxLength:]
  -[TASPAdvertisement encodeWithCoder:]
  -[TASPAdvertisement initWithAddress:advertisementData:status:reserved:rssi:scanDate:uuid:]
  -[TASPAdvertisement rssi]
  -[TASPAdvertisement descriptionDictionary]
  -[TASPAdvertisement status]
  -[TASPAdvertisement getDate]
  -[TASPAdvertisement uuid]
  -[TASPAdvertisement .cxx_destruct]
  -[TASPAdvertisement hasHawkeyeLowEnergyAdvertisementPolicy]
  -[TASPAdvertisement address]
  -[TASPAdvertisement copyWithZone:]
  -[TASPAdvertisement advertisementData]
  -[TASPAdvertisement beepOnMoveHigh]
  -[TASPAdvertisement reserved]
  -[TASPAdvertisement initWithAddress:advertisementData:status:reserved:rssi:scanDate:]
  -[TASPAdvertisement hasHawkeyeAdvertisementPolicy]
  -[TASPAdvertisement scanDate]
  -[TASPAdvertisement isEqual:]
  -[TASPAdvertisement initWithCoder:]


TAAnalyticsManagerSettings : NSObject
 @property  unsigned long settingsVersion
 @property  BOOL enableSubmission

  // instance methods
  -[TAAnalyticsManagerSettings setEnableSubmission:]
  -[TAAnalyticsManagerSettings enableSubmission]
  -[TAAnalyticsManagerSettings initWithEnableSubmissionOrDefault:andSettingsVersion:]
  -[TAAnalyticsManagerSettings setSettingsVersion:]
  -[TAAnalyticsManagerSettings init]
  -[TAAnalyticsManagerSettings settingsVersion]


TAAnalyticsManager : NSObject <TATrackingAvoidanceServiceObserver, TAPersistenceManagerObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TAAnalyticsManager _convertScanRequest:service:]
  +[TAAnalyticsManager getHour:]
  +[TAAnalyticsManager _convertDetection:service:]
  +[TAAnalyticsManager _convertRecord:service:]
  +[TAAnalyticsManager _convertBOMObservation:]
  +[TAAnalyticsManager _convertPlaySoundWithDetection:]
  +[TAAnalyticsManager _getMotionDuration:motionDistribution:]
  +[TAAnalyticsManager _convertHomeDetection:service:]

  // instance methods
  -[TAAnalyticsManager didReadFromURL:bytes:]
  -[TAAnalyticsManager initWithSettings:]
  -[TAAnalyticsManager didWriteToURL:bytes:]
  -[TAAnalyticsManager .cxx_destruct]
  -[TAAnalyticsManager trackingAvoidanceService:didUpdateSuspiciousDevices:]
  -[TAAnalyticsManager _submitEvent:content:]
  -[TAAnalyticsManager trackingAvoidanceService:requestingAdditionalInformation:]
  -[TAAnalyticsManager trackingAvoidanceService:didStageSuspiciousDevices:]
  -[TAAnalyticsManager trackingAvoidanceService:didFindSuspiciousDevices:]
  -[TAAnalyticsManager init]


TASingleDeviceRecord : NSObject <NSSecureCoding>
 @property  double keepAliveInterval
 @property  NSMutableArray *stagedDetectionResults
 @property  NSMutableSet *backgroundDetectionTypesInTravelSession
 @property  NSMutableDictionary *backgroundDetectionCount
 @property  NSMutableDictionary *firstBackgroundDetectionDate
 @property  NSData *address
 @property  unsigned long state
 @property  unsigned long type
 @property  NSDate *creationDate
 @property  TASPAdvertisement *latestAdvertisement
 @property  NSDate *earliestObservationDate
 @property  NSDate *keepStagedDetectionAliveUntilDate
 @property  BOOL hasSurfacedNotification
 @property  BOOL hasStagedImmediateDetections
 @property  unsigned long numStagedDetections
 @property  NSDate *firstStagedDetectionDate
 @property  NSDate *latestBeepOnMoveDate
 @property  NSDate *firstBeepOnMoveDate
 @property  unsigned long numBeepOnMove
 @property  unsigned long numSurfacedAlerts
 @property  NSDate *firstSurfacedAlertDate
 @property  unsigned long firstSurfacedAlertType
 @property  NSDate *lastSurfacedAlertDate
 @property  unsigned long playSoundSuccessCount
 @property  unsigned long playSoundFailureCount
 @property  unsigned long playSoundAttemptCount
 @property  NSDate *latestPlaySoundAttemptDate

  // class methods
  +[TASingleDeviceRecord supportsSecureCoding]

  // instance methods
  -[TASingleDeviceRecord getDeviceType]
  -[TASingleDeviceRecord encodeWithCoder:]
  -[TASingleDeviceRecord type]
  -[TASingleDeviceRecord descriptionDictionary]
  -[TASingleDeviceRecord state]
  -[TASingleDeviceRecord productName]
  -[TASingleDeviceRecord .cxx_destruct]
  -[TASingleDeviceRecord creationDate]
  -[TASingleDeviceRecord address]
  -[TASingleDeviceRecord setType:]
  -[TASingleDeviceRecord keepAliveInterval]
  -[TASingleDeviceRecord latestAdvertisement]
  -[TASingleDeviceRecord processBackgroundDetection:]
  -[TASingleDeviceRecord setKeepAliveInterval:]
  -[TASingleDeviceRecord isEqual:]
  -[TASingleDeviceRecord setState:]
  -[TASingleDeviceRecord initWithCoder:]
  -[TASingleDeviceRecord hasSurfacedNotification]
  -[TASingleDeviceRecord setHasSurfacedNotification:]
  -[TASingleDeviceRecord initWithDeviceAdvertisement:state:type:date:keepAliveInterval:]
  -[TASingleDeviceRecord stageDetection:]
  -[TASingleDeviceRecord getStagedDetections]
  -[TASingleDeviceRecord clearAllStagedDetections]
  -[TASingleDeviceRecord keepStagedDetectionAliveUntilDate]
  -[TASingleDeviceRecord _shouldPushStagedDetection:]
  -[TASingleDeviceRecord purgeStagedDetectionsWithClock:]
  -[TASingleDeviceRecord getDetectionsReadyToPush]
  -[TASingleDeviceRecord _updateEarliestObservationDateWithDate:]
  -[TASingleDeviceRecord updateAdvertisement:andAppendOutgoingRequestsTo:]
  -[TASingleDeviceRecord mergeWithAnotherSingleDeviceRecord:]
  -[TASingleDeviceRecord hasStagedImmediateDetections]
  -[TASingleDeviceRecord updateSingleDeviceRecordOnSessionChangeWithCurrentDate:]
  -[TASingleDeviceRecord processSurfacedAlert:]
  -[TASingleDeviceRecord backgroundDetectionCountForDetectionType:]
  -[TASingleDeviceRecord firstDetectionDateForDetectionType:]
  -[TASingleDeviceRecord preparePlaySoundTAOutgoingRequest:lastPlaySoundDate:]
  -[TASingleDeviceRecord processPlaySoundSuccess:andAppendOutgoingRequestsTo:]
  -[TASingleDeviceRecord playSoundAttemptCount]
  -[TASingleDeviceRecord earliestObservationDate]
  -[TASingleDeviceRecord numStagedDetections]
  -[TASingleDeviceRecord firstStagedDetectionDate]
  -[TASingleDeviceRecord latestBeepOnMoveDate]
  -[TASingleDeviceRecord firstBeepOnMoveDate]
  -[TASingleDeviceRecord numBeepOnMove]
  -[TASingleDeviceRecord numSurfacedAlerts]
  -[TASingleDeviceRecord firstSurfacedAlertDate]
  -[TASingleDeviceRecord firstSurfacedAlertType]
  -[TASingleDeviceRecord lastSurfacedAlertDate]
  -[TASingleDeviceRecord playSoundSuccessCount]
  -[TASingleDeviceRecord playSoundFailureCount]
  -[TASingleDeviceRecord latestPlaySoundAttemptDate]
  -[TASingleDeviceRecord stagedDetectionResults]
  -[TASingleDeviceRecord setStagedDetectionResults:]
  -[TASingleDeviceRecord backgroundDetectionTypesInTravelSession]
  -[TASingleDeviceRecord setBackgroundDetectionTypesInTravelSession:]
  -[TASingleDeviceRecord backgroundDetectionCount]
  -[TASingleDeviceRecord setBackgroundDetectionCount:]
  -[TASingleDeviceRecord firstBackgroundDetectionDate]
  -[TASingleDeviceRecord setFirstBackgroundDetectionDate:]


TALocationLite : NSObject <TAEventProtocol>
 @property  NSDate *timestamp
 @property  double latitude
 @property  double longitude
 @property  double horizontalAccuracy
 @property  double altitude
 @property  double verticalAccuracy
 @property  double speed
 @property  double speedAccuracy
 @property  double course
 @property  double courseAccuracy
 @property  double deltaDistance
 @property  double deltaDistanceAccuracy
 @property  double groundAltitude
 @property  double groundAltitudeUncertainty
 @property  double pressure
 @property  double pressureUncertainty
 @property  BOOL isSimulatedOrSpoofed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TALocationLite supportsSecureCoding]
  +[TALocationLite distanceFromLocation:toLocation:satisfyNSigma:satisfyMinDistance:]
  +[TALocationLite estimateSpeedFrom:to:]
  +[TALocationLite residualDistanceFromLocation:toLocation:nSigma:]

  // instance methods
  -[TALocationLite pressure]
  -[TALocationLite horizontalAccuracy]
  -[TALocationLite altitude]
  -[TALocationLite latitude]
  -[TALocationLite course]
  -[TALocationLite groundAltitudeUncertainty]
  -[TALocationLite encodeWithOSLogCoder:options:maxLength:]
  -[TALocationLite encodeWithCoder:]
  -[TALocationLite descriptionDictionary]
  -[TALocationLite deltaDistanceAccuracy]
  -[TALocationLite longitude]
  -[TALocationLite getDate]
  -[TALocationLite groundAltitude]
  -[TALocationLite deltaDistance]
  -[TALocationLite .cxx_destruct]
  -[TALocationLite verticalAccuracy]
  -[TALocationLite speed]
  -[TALocationLite pressureUncertainty]
  -[TALocationLite initWithTimestamp:latitude:longitude:horizontalAccuracy:altitude:verticalAccuracy:speed:speedAccuracy:course:courseAccuracy:deltaDistance:deltaDistanceAccuracy:groundAltitude:groundAltitudeUncertainty:pressure:pressureUncertainty:isSimulatedOrSpoofed:]
  -[TALocationLite isSimulatedOrSpoofed]
  -[TALocationLite speedAccuracy]
  -[TALocationLite copyWithZone:]
  -[TALocationLite timestamp]
  -[TALocationLite distanceFromLocation:]
  -[TALocationLite courseAccuracy]
  -[TALocationLite isEqual:]
  -[TALocationLite initWithTimestamp:latitude:longitude:horizontalAccuracy:]
  -[TALocationLite distanceToLocation:satisfyNSigma:satisfyMinDistance:]
  -[TALocationLite initWithCoder:]


TAPersistenceManagerSettings : NSObject
 @property  NSURL *persistenceDirectoryURL
 @property  NSString *persistenceStoreFileName

  // instance methods
  -[TAPersistenceManagerSettings setPersistenceStoreFileName:]
  -[TAPersistenceManagerSettings persistenceDirectoryURL]
  -[TAPersistenceManagerSettings .cxx_destruct]
  -[TAPersistenceManagerSettings persistenceStoreFileName]
  -[TAPersistenceManagerSettings setPersistenceDirectoryURL:]
  -[TAPersistenceManagerSettings initWithDirectoryURLOrDefault:storeFileNameOrDefault:]
  -[TAPersistenceManagerSettings _getStoreURL]
  -[TAPersistenceManagerSettings init]


TAPersistenceManager : NSObject
 @property  TAPersistenceManagerSettings *settings
 @property  NSHashTable *observers
 @property  TAPersistenceStore *store

  // instance methods
  -[TAPersistenceManager _notifyObserversOnReadFromURL:bytes:]
  -[TAPersistenceManager initWithSettings:]
  -[TAPersistenceManager store]
  -[TAPersistenceManager load]
  -[TAPersistenceManager addObserver:]
  -[TAPersistenceManager reset]
  -[TAPersistenceManager .cxx_destruct]
  -[TAPersistenceManager settings]
  -[TAPersistenceManager setSettings:]
  -[TAPersistenceManager setObservers:]
  -[TAPersistenceManager _createDirectoryIfNotPresent]
  -[TAPersistenceManager _notifyObserversOnWriteToURL:bytes:]
  -[TAPersistenceManager onUpdatedTAStore:]
  -[TAPersistenceManager removeObserver:]
  -[TAPersistenceManager save]
  -[TAPersistenceManager observers]


TAVehicleStateNotification : NSObject <OSLogCoding, TAEventProtocol>
 @property  NSDate *date
 @property  unsigned long vehicularState
 @property  unsigned long vehicularHints
 @property  unsigned long operatorState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TAVehicleStateNotification supportsSecureCoding]

  // instance methods
  -[TAVehicleStateNotification vehicularState]
  -[TAVehicleStateNotification encodeWithOSLogCoder:options:maxLength:]
  -[TAVehicleStateNotification encodeWithCoder:]
  -[TAVehicleStateNotification descriptionDictionary]
  -[TAVehicleStateNotification getDate]
  -[TAVehicleStateNotification date]
  -[TAVehicleStateNotification .cxx_destruct]
  -[TAVehicleStateNotification operatorState]
  -[TAVehicleStateNotification initWithVehicularState:andVehicularHints:andOperatorState:date:]
  -[TAVehicleStateNotification copyWithZone:]
  -[TAVehicleStateNotification vehicularHints]
  -[TAVehicleStateNotification isEqual:]
  -[TAVehicleStateNotification initWithCoder:]


TADeviceInformation : NSObject <OSLogCoding, TAEventProtocol>
 @property  TASPAdvertisement *advertisement
 @property  unsigned long deviceType
 @property  unsigned long notificationState
 @property  NSDate *date
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TADeviceInformation supportsSecureCoding]
  +[TADeviceInformation deviceTypeToString:]
  +[TADeviceInformation notificationStateToString:]

  // instance methods
  -[TADeviceInformation encodeWithOSLogCoder:options:maxLength:]
  -[TADeviceInformation encodeWithCoder:]
  -[TADeviceInformation descriptionDictionary]
  -[TADeviceInformation getDate]
  -[TADeviceInformation date]
  -[TADeviceInformation .cxx_destruct]
  -[TADeviceInformation deviceType]
  -[TADeviceInformation copyWithZone:]
  -[TADeviceInformation isEqual:]
  -[TADeviceInformation initWithCoder:]
  -[TADeviceInformation notificationState]
  -[TADeviceInformation advertisement]
  -[TADeviceInformation initWithTASPAdvertisement:deviceType:notificationState:date:]


TAGeoNavigationNotification : NSObject <OSLogCoding, TAEventProtocol>
 @property  NSDate *date
 @property  unsigned long transportType
 @property  unsigned long navState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TAGeoNavigationNotification supportsSecureCoding]

  // instance methods
  -[TAGeoNavigationNotification encodeWithOSLogCoder:options:maxLength:]
  -[TAGeoNavigationNotification encodeWithCoder:]
  -[TAGeoNavigationNotification descriptionDictionary]
  -[TAGeoNavigationNotification getDate]
  -[TAGeoNavigationNotification date]
  -[TAGeoNavigationNotification .cxx_destruct]
  -[TAGeoNavigationNotification transportType]
  -[TAGeoNavigationNotification copyWithZone:]
  -[TAGeoNavigationNotification isEqual:]
  -[TAGeoNavigationNotification initWithCoder:]
  -[TAGeoNavigationNotification navState]
  -[TAGeoNavigationNotification initWithTransportType:andNavigationState:date:]


TASystemState : NSObject <OSLogCoding, TAEventProtocol>
 @property  unsigned long systemStateType
 @property  BOOL isOn
 @property  NSDate *date
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TASystemState supportsSecureCoding]

  // instance methods
  -[TASystemState encodeWithOSLogCoder:options:maxLength:]
  -[TASystemState encodeWithCoder:]
  -[TASystemState isOn]
  -[TASystemState descriptionDictionary]
  -[TASystemState getDate]
  -[TASystemState date]
  -[TASystemState .cxx_destruct]
  -[TASystemState initWithSystemStateType:isOn:date:]
  -[TASystemState getEventSubtype]
  -[TASystemState copyWithZone:]
  -[TASystemState isEqual:]
  -[TASystemState systemStateType]
  -[TASystemState initWithCoder:]


TACLVisit : NSObject <OSLogCoding, TAEventProtocol>
 @property  NSDate *arrivalDate
 @property  NSDate *departureDate
 @property  {CLLocationCoordinate2D=dd} coordinate
 @property  double horizontalAccuracy
 @property  BOOL hasArrivalDate
 @property  BOOL hasDepartureDate
 @property  BOOL isTemporalOrderSensical
 @property  NSDate *detectionDate
 @property  unsigned long confidence
 @property  NSDateInterval *dateInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TACLVisit supportsSecureCoding]

  // instance methods
  -[TACLVisit horizontalAccuracy]
  -[TACLVisit confidence]
  -[TACLVisit dateInterval]
  -[TACLVisit encodeWithOSLogCoder:options:maxLength:]
  -[TACLVisit hasArrivalDate]
  -[TACLVisit hasDepartureDate]
  -[TACLVisit coordinate]
  -[TACLVisit encodeWithCoder:]
  -[TACLVisit descriptionDictionary]
  -[TACLVisit getDate]
  -[TACLVisit .cxx_destruct]
  -[TACLVisit initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:confidence:]
  -[TACLVisit departureDate]
  -[TACLVisit copyWithZone:]
  -[TACLVisit arrivalDate]
  -[TACLVisit detectionDate]
  -[TACLVisit isTemporalOrderSensical]
  -[TACLVisit isEqual:]
  -[TACLVisit initWithCoder:]


TATrackingAvoidanceServiceStateContext : NSObject
 @property  BOOL serviceEnabled
 @property  BOOL highThermalState
 @property  BOOL airplaneMode
 @property  BOOL batterySaverMode
 @property  BOOL locationServicesEnabled
 @property  BOOL restartRequired
 @property  BOOL locationSimulationInProgress
 @property  BOOL allowSimulatedEvents
 @property  BOOL deviceUnlockedSinceBoot
 @property  BOOL hasKoreaCountryCode
 @property  BOOL userLocationInsideKorea

  // instance methods
  -[TATrackingAvoidanceServiceStateContext setHasKoreaCountryCode:]
  -[TATrackingAvoidanceServiceStateContext hasKoreaCountryCode]
  -[TATrackingAvoidanceServiceStateContext setLocationSimulationInProgress:]
  -[TATrackingAvoidanceServiceStateContext setUserLocationInsideKorea:]
  -[TATrackingAvoidanceServiceStateContext setRestartRequired:]
  -[TATrackingAvoidanceServiceStateContext allowSimulatedEvents]
  -[TATrackingAvoidanceServiceStateContext setAirplaneMode:]
  -[TATrackingAvoidanceServiceStateContext locationSimulationInProgress]
  -[TATrackingAvoidanceServiceStateContext locationServicesEnabled]
  -[TATrackingAvoidanceServiceStateContext airplaneMode]
  -[TATrackingAvoidanceServiceStateContext setServiceEnabled:]
  -[TATrackingAvoidanceServiceStateContext serviceEnabled]
  -[TATrackingAvoidanceServiceStateContext setDeviceUnlockedSinceBoot:]
  -[TATrackingAvoidanceServiceStateContext setAllowSimulatedEvents:]
  -[TATrackingAvoidanceServiceStateContext restartRequired]
  -[TATrackingAvoidanceServiceStateContext userLocationInsideKorea]
  -[TATrackingAvoidanceServiceStateContext batterySaverMode]
  -[TATrackingAvoidanceServiceStateContext setLocationServicesEnabled:]
  -[TATrackingAvoidanceServiceStateContext setBatterySaverMode:]
  -[TATrackingAvoidanceServiceStateContext highThermalState]
  -[TATrackingAvoidanceServiceStateContext setHighThermalState:]
  -[TATrackingAvoidanceServiceStateContext deviceUnlockedSinceBoot]
  -[TATrackingAvoidanceServiceStateContext init]


TATrackingAvoidanceServiceManager : NSObject <TATrackingAvoidanceServiceObserver, TATrackingAvoidanceServiceProtocol>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSHashTable *observers
 @property  NSHashTable *dataSources
 @property  TATrackingAvoidanceService *service
 @property  TASettings *serviceSettings
 @property  TATrackingAvoidanceServiceStateContext *stateContext
 @property  TAPersistenceManager *persistenceManager
 @property  unsigned long persistenceManagerLastSaveTime
 @property  NSUUID *sessionID
 @property  TAAnalyticsManager *analyticsManager
 @property  RTRoutineManager *routineManager
 @property  unsigned long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TATrackingAvoidanceServiceManager managerStateToString:]

  // instance methods
  -[TATrackingAvoidanceServiceManager addDataSource:]
  -[TATrackingAvoidanceServiceManager persistenceManager]
  -[TATrackingAvoidanceServiceManager ingestTAEvent:]
  -[TATrackingAvoidanceServiceManager _onHasKoreaCountryCode:]
  -[TATrackingAvoidanceServiceManager _fetchAndIngestLastVisit]
  -[TATrackingAvoidanceServiceManager _setState:]
  -[TATrackingAvoidanceServiceManager _onLocationSimulationInProgress:]
  -[TATrackingAvoidanceServiceManager setPersistenceManager:]
  -[TATrackingAvoidanceServiceManager _onAirplaneMode:]
  -[TATrackingAvoidanceServiceManager sessionID]
  -[TATrackingAvoidanceServiceManager _fetchAndIngestNextPredictedLocationOfInterestWithCurrentVisitState]
  -[TATrackingAvoidanceServiceManager addObserver:]
  -[TATrackingAvoidanceServiceManager _onBatterySaverMode:]
  -[TATrackingAvoidanceServiceManager _onUserLocationInsideKorea:]
  -[TATrackingAvoidanceServiceManager state]
  -[TATrackingAvoidanceServiceManager _loadAndBootstrap]
  -[TATrackingAvoidanceServiceManager setService:]
  -[TATrackingAvoidanceServiceManager .cxx_destruct]
  -[TATrackingAvoidanceServiceManager setPersistenceManagerLastSaveTime:]
  -[TATrackingAvoidanceServiceManager trackingAvoidanceService:didUpdateSuspiciousDevices:]
  -[TATrackingAvoidanceServiceManager setAnalyticsManager:]
  -[TATrackingAvoidanceServiceManager _setLastSaveTime]
  -[TATrackingAvoidanceServiceManager _unregisterForAvengerScanner]
  -[TATrackingAvoidanceServiceManager routineManager]
  -[TATrackingAvoidanceServiceManager service]
  -[TATrackingAvoidanceServiceManager removeDataSource:]
  -[TATrackingAvoidanceServiceManager _onServiceEnabled:]
  -[TATrackingAvoidanceServiceManager stateContext]
  -[TATrackingAvoidanceServiceManager dataSources]
  -[TATrackingAvoidanceServiceManager setStateContext:]
  -[TATrackingAvoidanceServiceManager setObservers:]
  -[TATrackingAvoidanceServiceManager _onLocationServicesEnabled:]
  -[TATrackingAvoidanceServiceManager initWithQueue:settings:]
  -[TATrackingAvoidanceServiceManager setQueue:]
  -[TATrackingAvoidanceServiceManager _onLocationAndPrivacyReset:]
  -[TATrackingAvoidanceServiceManager _fetchAndIngestNextPredictedLocationOfInterestFromLocation:startDate:interval:]
  -[TATrackingAvoidanceServiceManager onUpdatedSettings:]
  -[TATrackingAvoidanceServiceManager setRoutineManager:]
  -[TATrackingAvoidanceServiceManager _unregisterForTATrackingAvoidanceService]
  -[TATrackingAvoidanceServiceManager trackingAvoidanceService:requestingAdditionalInformation:]
  -[TATrackingAvoidanceServiceManager queue]
  -[TATrackingAvoidanceServiceManager persistenceManagerLastSaveTime]
  -[TATrackingAvoidanceServiceManager analyticsManager]
  -[TATrackingAvoidanceServiceManager _onAllowSimulatedEvents:]
  -[TATrackingAvoidanceServiceManager trackingAvoidanceService:didStageSuspiciousDevices:]
  -[TATrackingAvoidanceServiceManager visitStateChangedForTrackingAvoidanceService:]
  -[TATrackingAvoidanceServiceManager _onDeviceUnlockedSinceBoot:]
  -[TATrackingAvoidanceServiceManager _handleStateUpdateIfNecessary]
  -[TATrackingAvoidanceServiceManager notifyObserversOfStateChangeFrom:to:]
  -[TATrackingAvoidanceServiceManager _shouldTerminateService]
  -[TATrackingAvoidanceServiceManager _shouldSuspendAvengerScanner]
  -[TATrackingAvoidanceServiceManager _registerForAvengerScanner]
  -[TATrackingAvoidanceServiceManager removeObserver:]
  -[TATrackingAvoidanceServiceManager trackingAvoidanceService:didFindSuspiciousDevices:]
  -[TATrackingAvoidanceServiceManager setSessionID:]
  -[TATrackingAvoidanceServiceManager _fetchStoreAndSave]
  -[TATrackingAvoidanceServiceManager _onHighThermalState:]
  -[TATrackingAvoidanceServiceManager setDataSources:]
  -[TATrackingAvoidanceServiceManager _schedulePeriodicSaveAfterTimeInterval:]
  -[TATrackingAvoidanceServiceManager _changeSession]
  -[TATrackingAvoidanceServiceManager serviceSettings]
  -[TATrackingAvoidanceServiceManager _registerForTATrackingAvoidanceServiceWithSettings:]
  -[TATrackingAvoidanceServiceManager observers]
  -[TATrackingAvoidanceServiceManager setServiceSettings:]


TALocationOfInterest : NSObject <OSLogCoding, TAEventProtocol>
 @property  unsigned long type
 @property  double latitude
 @property  double longitude
 @property  double horizontalAccuracy
 @property  unsigned long referenceFrame
 @property  NSDate *date
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TALocationOfInterest supportsSecureCoding]
  +[TALocationOfInterest convertRTToTALocationOfInterestType:]

  // instance methods
  -[TALocationOfInterest horizontalAccuracy]
  -[TALocationOfInterest latitude]
  -[TALocationOfInterest encodeWithOSLogCoder:options:maxLength:]
  -[TALocationOfInterest encodeWithCoder:]
  -[TALocationOfInterest type]
  -[TALocationOfInterest descriptionDictionary]
  -[TALocationOfInterest longitude]
  -[TALocationOfInterest getDate]
  -[TALocationOfInterest date]
  -[TALocationOfInterest .cxx_destruct]
  -[TALocationOfInterest referenceFrame]
  -[TALocationOfInterest copyWithZone:]
  -[TALocationOfInterest isEqual:]
  -[TALocationOfInterest initWithCoder:]
  -[TALocationOfInterest initWithType:latitude:longitude:horizontalAccuracy:referenceFrame:date:]
  -[TALocationOfInterest initWithType:latitude:longitude:horizontalAccuracy:date:]


TAAggressiveScanState : NSObject <OSLogCoding, TAEventProtocol>
 @property  unsigned long state
 @property  NSDate *date
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TAAggressiveScanState supportsSecureCoding]

  // instance methods
  -[TAAggressiveScanState encodeWithOSLogCoder:options:maxLength:]
  -[TAAggressiveScanState encodeWithCoder:]
  -[TAAggressiveScanState descriptionDictionary]
  -[TAAggressiveScanState state]
  -[TAAggressiveScanState getDate]
  -[TAAggressiveScanState date]
  -[TAAggressiveScanState .cxx_destruct]
  -[TAAggressiveScanState copyWithZone:]
  -[TAAggressiveScanState isEqual:]
  -[TAAggressiveScanState initWithCoder:]
  -[TAAggressiveScanState initWithState:date:]


TAPeopleDensityResult : NSObject <OSLogCoding, TAEventProtocol>
 @property  long long peopleDensityState
 @property  double confidence
 @property  NSDateInterval *observationInterval
 @property  NSDictionary *additionalInfo
 @property  NSDate *date
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TAPeopleDensityResult supportsSecureCoding]

  // instance methods
  -[TAPeopleDensityResult confidence]
  -[TAPeopleDensityResult encodeWithOSLogCoder:options:maxLength:]
  -[TAPeopleDensityResult encodeWithCoder:]
  -[TAPeopleDensityResult descriptionDictionary]
  -[TAPeopleDensityResult additionalInfo]
  -[TAPeopleDensityResult getDate]
  -[TAPeopleDensityResult date]
  -[TAPeopleDensityResult .cxx_destruct]
  -[TAPeopleDensityResult copyWithZone:]
  -[TAPeopleDensityResult isEqual:]
  -[TAPeopleDensityResult initWithCoder:]
  -[TAPeopleDensityResult observationInterval]
  -[TAPeopleDensityResult initWithState:confidence:observationInterval:additionalInfo:date:]
  -[TAPeopleDensityResult peopleDensityState]


TAPlaySoundSuccess : NSObject <TAEventProtocol>
 @property  NSUUID *uuid
 @property  NSData *address
 @property  unsigned long successType
 @property  NSDate *date
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TAPlaySoundSuccess supportsSecureCoding]

  // instance methods
  -[TAPlaySoundSuccess encodeWithOSLogCoder:options:maxLength:]
  -[TAPlaySoundSuccess encodeWithCoder:]
  -[TAPlaySoundSuccess descriptionDictionary]
  -[TAPlaySoundSuccess getDate]
  -[TAPlaySoundSuccess date]
  -[TAPlaySoundSuccess uuid]
  -[TAPlaySoundSuccess .cxx_destruct]
  -[TAPlaySoundSuccess address]
  -[TAPlaySoundSuccess copyWithZone:]
  -[TAPlaySoundSuccess isEqual:]
  -[TAPlaySoundSuccess initWithCoder:]
  -[TAPlaySoundSuccess successType]
  -[TAPlaySoundSuccess initWithUUID:address:successType:date:]


TAStagedSuspiciousDevice : NSObject <NSSecureCoding>
 @property  TASuspiciousDevice *detection
 @property  NSDate *keepInStagingUntil

  // class methods
  +[TAStagedSuspiciousDevice supportsSecureCoding]

  // instance methods
  -[TAStagedSuspiciousDevice encodeWithCoder:]
  -[TAStagedSuspiciousDevice descriptionDictionary]
  -[TAStagedSuspiciousDevice .cxx_destruct]
  -[TAStagedSuspiciousDevice isEqual:]
  -[TAStagedSuspiciousDevice initWithCoder:]
  -[TAStagedSuspiciousDevice detection]
  -[TAStagedSuspiciousDevice initWithDetection:keepInStagingUntil:]
  -[TAStagedSuspiciousDevice keepInStagingUntil]
  -[TAStagedSuspiciousDevice setKeepInStagingUntil:]


TAUserActivity : NSObject <OSLogCoding, TAEventProtocol>
 @property  unsigned long activityType
 @property  NSDate *date
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TAUserActivity supportsSecureCoding]

  // instance methods
  -[TAUserActivity encodeWithOSLogCoder:options:maxLength:]
  -[TAUserActivity encodeWithCoder:]
  -[TAUserActivity descriptionDictionary]
  -[TAUserActivity getDate]
  -[TAUserActivity date]
  -[TAUserActivity activityType]
  -[TAUserActivity .cxx_destruct]
  -[TAUserActivity copyWithZone:]
  -[TAUserActivity isEqual:]
  -[TAUserActivity initWithCoder:]
  -[TAUserActivity initWithActivityType:date:]


TAInterVisitSummary : NSObject
 @property  NSDateInterval *deviceObservationInterval
 @property  NSArray *deviceLocationHistory
 @property  TASPAdvertisement *latestObservation

  // instance methods
  -[TAInterVisitSummary .cxx_destruct]
  -[TAInterVisitSummary latestObservation]
  -[TAInterVisitSummary initWithObservationInterval:andLocationHistory:andLastObservation:]
  -[TAInterVisitSummary deviceObservationInterval]
  -[TAInterVisitSummary deviceLocationHistory]


TAVisitStateSettings : NSObject <NSSecureCoding>
 @property  unsigned long visitSnapshotCapacity
 @property  unsigned long visitDisplayBufferCapacity
 @property  unsigned long interVisitMetricSnapshotCapacity
 @property  double thresholdOfLocationRelevance
 @property  double interVisitSnapshotUpdateInterval
 @property  double snapshotBufferTimeIntervalOfRetention
 @property  unsigned long loiBufferPerTypeCapacity
 @property  double loiBufferTimeIntervalOfRetention
 @property  unsigned long maxNSigmaBetweenLastLocationAndVisit
 @property  double qualitySnapshotDwellDuration
 @property  double qualitySnapshotDisplayOnDuration
 @property  unsigned long uniqueUTObservationCapPerVisit
 @property  NSSet *sensitiveLOITypes

  // class methods
  +[TAVisitStateSettings supportsSecureCoding]

  // instance methods
  -[TAVisitStateSettings uniqueUTObservationCapPerVisit]
  -[TAVisitStateSettings qualitySnapshotDisplayOnDuration]
  -[TAVisitStateSettings thresholdOfLocationRelevance]
  -[TAVisitStateSettings encodeWithCoder:]
  -[TAVisitStateSettings qualitySnapshotDwellDuration]
  -[TAVisitStateSettings .cxx_destruct]
  -[TAVisitStateSettings interVisitMetricSnapshotCapacity]
  -[TAVisitStateSettings snapshotBufferTimeIntervalOfRetention]
  -[TAVisitStateSettings loiBufferPerTypeCapacity]
  -[TAVisitStateSettings maxNSigmaBetweenLastLocationAndVisit]
  -[TAVisitStateSettings sensitiveLOITypes]
  -[TAVisitStateSettings initWithVisitSnapshotCapacity:visitDisplayBufferCapacity:interVisitMetricSnapshotCapacity:interVisitSnapshotUpdateInterval:thresholdOfLocationRelevance:snapshotBufferTimeIntervalOfRetention:loiBufferPerTypeCapacity:loiBufferTimeIntervalOfRetention:maxNSigmaBetweenLastLocationAndVisit:qualitySnapshotDwellDuration:qualitySnapshotDisplayOnDuration:uniqueUTObservationCapPerVisit:sensitiveLOITypes:]
  -[TAVisitStateSettings loiBufferTimeIntervalOfRetention]
  -[TAVisitStateSettings visitDisplayBufferCapacity]
  -[TAVisitStateSettings isEqual:]
  -[TAVisitStateSettings visitSnapshotCapacity]
  -[TAVisitStateSettings initWithCoder:]
  -[TAVisitStateSettings initWithVisitSnapshotCapacityOrDefault:visitDisplayBufferCapacityOrDefault:interVisitMetricSnapshotCapacityOrDefault:interVisitSnapshotUpdateIntervalOrDefault:thresholdOfLocationRelevanceOrDefault:snapshotBufferTimeIntervalOfRetentionOrDefault:loiBufferPerTypeCapacityOrDefault:loiBufferTimeIntervalOfRetentionOrDefault:maxNSigmaBetweenLastLocationAndVisitOrDefault:qualitySnapshotDwellDurationOrDefault:qualitySnapshotDisplayOnDurationOrDefault:uniqueUTObservationCapPerVisitOrDefault:sensitiveLOITypesOrDefault:]
  -[TAVisitStateSettings interVisitSnapshotUpdateInterval]
  -[TAVisitStateSettings initWithDefaults]


TAVisitState : NSObject <NSSecureCoding>
 @property  TAVisitStateSettings *settings
 @property  NSHashTable *observers
 @property  TAScanRequest *scanRequest
 @property  TAInterVisitMetricsSnapshot *interVisitMetricsSnapshotBackup
 @property  NSMutableArray *nextPredictedLOIs
 @property  unsigned long state
 @property  unsigned long lastStateTransition
 @property  TACircularBuffer *visitSnapshotBuffer
 @property  TACircularBuffer *interVisitMetricSnapshotBuffer
 @property  NSMutableDictionary *importantLois
 @property  BOOL isInSensitiveVisit

  // class methods
  +[TAVisitState supportsSecureCoding]
  +[TAVisitState visitStateTypeToString:]

  // instance methods
  -[TAVisitState updateInterVisitBackupSnapshotWithStore:]
  -[TAVisitState notifyObserversOfMetricsHint:]
  -[TAVisitState setScanRequest:]
  -[TAVisitState getDisplayEventsWithFirstPrecedingInInterval:store:]
  -[TAVisitState resetInterVisitBackupSnapshot]
  -[TAVisitState encodeWithCoder:]
  -[TAVisitState openInterVisitSnapshotWithStore:departureVisit:]
  -[TAVisitState addObserver:]
  -[TAVisitState interVisitMetricSnapshotBuffer]
  -[TAVisitState state]
  -[TAVisitState purgeWithClock:]
  -[TAVisitState stateTransitionDecisionGivenTACLVisit:]
  -[TAVisitState purgeVisitSnapshotBufferWithCurrentDate:]
  -[TAVisitState closeLatestInterVisitSnapshotWithStore:arrivalVisit:]
  -[TAVisitState getLatestValidVisit]
  -[TAVisitState importantLois]
  -[TAVisitState .cxx_destruct]
  -[TAVisitState setInterVisitMetricsSnapshotBackup:]
  -[TAVisitState getLatestValidVisitArrivalDate]
  -[TAVisitState settings]
  -[TAVisitState shouldCreateNewVisitSnapshotFromUnknownState:]
  -[TAVisitState interVisitMetricsSnapshotBackup]
  -[TAVisitState setSettings:]
  -[TAVisitState recoverInterVisitSnapshotWithArrivalVisit:store:]
  -[TAVisitState nextPredictedLOIs]
  -[TAVisitState updateInterVisitSnapshot:store:]
  -[TAVisitState setObservers:]
  -[TAVisitState openInterVisitBackupSnapshotWithArrivalVisit:]
  -[TAVisitState labelLoiTypeForLastVisitSnapshot:]
  -[TAVisitState updateImportantLOIs:currentDate:]
  -[TAVisitState scanRequest]
  -[TAVisitState setNextPredictedLOIs:]
  -[TAVisitState getLatestValidVisitDepartureDate]
  -[TAVisitState initWithSettings:scanRequestSettings:]
  -[TAVisitState issueVisitEntryScanRequestIfNecessaryWithOpenSnapshot:clock:andAppendOutgoingRequestsTo:]
  -[TAVisitState issueInterVisitScanRequestIfNecessaryWithClosedSnapshot:store:andAppendOutgoingRequestsTo:]
  -[TAVisitState closeVisitSnapshotWithStore:visit:]
  -[TAVisitState purgeInterVisitSnapshotBufferWithCurrentDate:]
  -[TAVisitState notifyObserversOfStateChangeFromState:toState:]
  -[TAVisitState mergeWithAnotherTAVisitState:]
  -[TAVisitState visitSnapshotBuffer]
  -[TAVisitState lastStateTransition]
  -[TAVisitState ingestTAEvent:store:appendOutgoingRequestsTo:]
  -[TAVisitState openVisitSnapshotWithStore:visit:andAppendOutgoingRequestsTo:]
  -[TAVisitState evaluateLatestVisitSnapshotAndRecoverIfNecessaryWithStore:andAppendOutgoingRequestsTo:]
  -[TAVisitState isInSensitiveVisit]
  -[TAVisitState removeObserver:]
  -[TAVisitState updateInterVisitSnapshotWithStore:]
  -[TAVisitState performStateTransitionDecision:store:visit:andAppendOutgoingRequestsTo:]
  -[TAVisitState isEqual:]
  -[TAVisitState setState:]
  -[TAVisitState initWithCoder:]
  -[TAVisitState observers]


TADeviceRecordSettings : NSObject <NSSecureCoding>
 @property  double expiryTimeInterval
 @property  double purgeTimeInterval
 @property  double keepAliveInterval
 @property  double minimumStagingInterval
 @property  long long stagingBackstopHour
 @property  long long assumedKeyRollHour
 @property  double scanInterval
 @property  BOOL surfaceImmediatelyBetweenBackstopAndKeyroll
 @property  double maxExpectedHELEWildInterval
 @property  double maxExpectedDurianWildInterval
 @property  BOOL shouldAlertHELEImmediatelyForImmediateTypes
 @property  double minimumHELEStagingInterval
 @property  long long stagingHELEBackstopHour
 @property  BOOL surfaceHELEImmediatelyBetweenBackstopAndKeyroll

  // class methods
  +[TADeviceRecordSettings supportsSecureCoding]

  // instance methods
  -[TADeviceRecordSettings expiryTimeInterval]
  -[TADeviceRecordSettings assumedKeyRollHour]
  -[TADeviceRecordSettings maxExpectedHELEWildInterval]
  -[TADeviceRecordSettings encodeWithCoder:]
  -[TADeviceRecordSettings minimumHELEStagingInterval]
  -[TADeviceRecordSettings maxExpectedDurianWildInterval]
  -[TADeviceRecordSettings setExpiryTimeInterval:]
  -[TADeviceRecordSettings keepAliveInterval]
  -[TADeviceRecordSettings initWithExpiryTimeIntervalOrDefault:purgeTimeIntervalOrDefault:keepAliveIntervalOrDefault:minimumStagingIntervalOrDefault:stagingBackstopHourOrDefault:assumedKeyRollHourOrDefault:scanIntervalOrDefault:surfaceImmediatelyBetweenBackstopAndKeyrollOrDefault:maxExpectedHELEWildIntervalOrDefault:maxExpectedDurianWildIntervalOrDefault:shouldAlertHELEImmediatelyForImmediateTypesOrDefault:minimumHELEStagingIntervalOrDefault:stagingHELEBackstopHourOrDefault:surfaceHELEImmediatelyBetweenBackstopAndKeyrollOrDefault:]
  -[TADeviceRecordSettings minimumStagingInterval]
  -[TADeviceRecordSettings stagingHELEBackstopHour]
  -[TADeviceRecordSettings shouldAlertHELEImmediatelyForImmediateTypes]
  -[TADeviceRecordSettings initWithExpiryTimeInterval:purgeTimeInterval:keepAliveInterval:minimumStagingInterval:stagingBackstopHour:assumedKeyRollHour:scanInterval:surfaceImmediatelyBetweenBackstopAndKeyroll:maxExpectedHELEWildInterval:maxExpectedDurianWildInterval:shouldAlertHELEImmediatelyForImmediateTypes:minimumHELEStagingInterval:stagingHELEBackstopHour:surfaceHELEImmediatelyBetweenBackstopAndKeyroll:]
  -[TADeviceRecordSettings surfaceHELEImmediatelyBetweenBackstopAndKeyroll]
  -[TADeviceRecordSettings stagingBackstopHour]
  -[TADeviceRecordSettings scanInterval]
  -[TADeviceRecordSettings purgeTimeInterval]
  -[TADeviceRecordSettings isEqual:]
  -[TADeviceRecordSettings surfaceImmediatelyBetweenBackstopAndKeyroll]
  -[TADeviceRecordSettings init]
  -[TADeviceRecordSettings setPurgeTimeInterval:]
  -[TADeviceRecordSettings initWithCoder:]


TADeviceRecord : NSObject <NSSecureCoding>
 @property  NSMutableDictionary *deviceRecord
 @property  NSDate *lastPurgeDate
 @property  NSDate *lastScanAttemptDate
 @property  TADeviceRecordSettings *settings

  // class methods
  +[TADeviceRecord supportsSecureCoding]
  +[TADeviceRecord _isKnownDevice:]
  +[TADeviceRecord notificationInternalStateToString:]
  +[TADeviceRecord _convertTANotificationStateToTANotificationInternalState:]

  // instance methods
  -[TADeviceRecord deviceRecord]
  -[TADeviceRecord hasSurfacedNotificationFor:]
  -[TADeviceRecord setDeviceRecord:]
  -[TADeviceRecord forceStagedDetectionsToSurfaceImmediatelyWithAdvertisement:]
  -[TADeviceRecord hasStagedImmediateDetections:]
  -[TADeviceRecord initWithSettings:]
  -[TADeviceRecord _processPlaySoundSuccess:andAppendOutgoingRequestsTo:]
  -[TADeviceRecord getLatestBeepOnMoveDate:]
  -[TADeviceRecord _didSurfaceNotificationFor:]
  -[TADeviceRecord _setDevice:withInternalState:withDate:]
  -[TADeviceRecord isKnownDevice:]
  -[TADeviceRecord setLastPurgeDate:]
  -[TADeviceRecord purgeWithClock:andAppendOutgoingRequestsTo:]
  -[TADeviceRecord _determineFirstObservationDateWithTASuspiciousDevice:]
  -[TADeviceRecord updateDeviceRecordOnSessionChange:WithCurrentDate:]
  -[TADeviceRecord encodeWithCoder:]
  -[TADeviceRecord stageDetectionResults:]
  -[TADeviceRecord _updateAdvertisement:andAppendOutgoingRequestsTo:]
  -[TADeviceRecord descriptionDictionary]
  -[TADeviceRecord checkForScanRequestsWithClock:andAppendOutgoingRequestsTo:]
  -[TADeviceRecord _setDevice:withType:withDate:]
  -[TADeviceRecord getDeviceType:]
  -[TADeviceRecord .cxx_destruct]
  -[TADeviceRecord _getDeviceRecord:]
  -[TADeviceRecord getDeviceNotificationState:]
  -[TADeviceRecord settings]
  -[TADeviceRecord mergeWithAnotherDeviceRecord:]
  -[TADeviceRecord ingestTAEvent:andAppendOutgoingRequestsTo:]
  -[TADeviceRecord getDetectionResultsToPush]
  -[TADeviceRecord _determineKeepInStagingUntil:]
  -[TADeviceRecord setSettings:]
  -[TADeviceRecord _determineHELEKeepInStagingUntil:]
  -[TADeviceRecord getNumStagedDetections:]
  -[TADeviceRecord createTAOutgoingRequestWithExpiringTASingleDeviceRecord:withCurrentDate:]
  -[TADeviceRecord _performNotificationStateTransitionActionsForDevice:from:to:]
  -[TADeviceRecord _clearStagedDetectionsForDevice:]
  -[TADeviceRecord getLatestAdvertisement:]
  -[TADeviceRecord logDeviceRecord]
  -[TADeviceRecord processSurfacedAlerts:]
  -[TADeviceRecord getFirstStagedDetectionDate:]
  -[TADeviceRecord processBackgroundDetection:]
  -[TADeviceRecord _createRecordIfNecessaryWithAdvertisement:withDate:]
  -[TADeviceRecord _setDevice:withExternalState:withDate:]
  -[TADeviceRecord getDeviceOwnershipType:]
  -[TADeviceRecord isEqual:]
  -[TADeviceRecord stageDevice:withCurrentDate:]
  -[TADeviceRecord lastPurgeDate]
  -[TADeviceRecord init]
  -[TADeviceRecord setLastScanAttemptDate:]
  -[TADeviceRecord lastScanAttemptDate]
  -[TADeviceRecord initWithCoder:]


TACircularBuffer : NSObject <NSSecureCoding>
 @property  NSMutableArray *buffer
 @property  unsigned long capacity

  // class methods
  +[TACircularBuffer supportsSecureCoding]

  // instance methods
  -[TACircularBuffer lastObject]
  -[TACircularBuffer buffer]
  -[TACircularBuffer add:]
  -[TACircularBuffer getObjectAtIndex:]
  -[TACircularBuffer capacity]
  -[TACircularBuffer initWithCapacity:]
  -[TACircularBuffer firstObject]
  -[TACircularBuffer encodeWithCoder:]
  -[TACircularBuffer setBuffer:]
  -[TACircularBuffer .cxx_destruct]
  -[TACircularBuffer insert:at:]
  -[TACircularBuffer count]
  -[TACircularBuffer objectsMatchingPredicate:]
  -[TACircularBuffer dropOldestElement]
  -[TACircularBuffer removeUntilFirstPredicateFail:]
  -[TACircularBuffer firstObjectMatchingTest:withOptions:]
  -[TACircularBuffer isEqual:]
  -[TACircularBuffer bufferCopy]
  -[TACircularBuffer removeLastObject]
  -[TACircularBuffer removeWithPredicate:]
  -[TACircularBuffer initWithCoder:]


TAStore : NSObject <TAVisitStateObserver>
 @property  NSHashTable *observers
 @property  NSDate *clock
 @property  TAEventBuffer *eventBuffer
 @property  TAVisitState *visitState
 @property  TADeviceRecord *deviceRecord
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TAStore deviceRecord]
  -[TAStore clock]
  -[TAStore visitState:didChangeStateFromType:toType:]
  -[TAStore shouldAddTALocationLite:]
  -[TAStore addObserver:]
  -[TAStore visitState]
  -[TAStore .cxx_destruct]
  -[TAStore shouldAddTACLVisit:]
  -[TAStore addTAEvent:andAppendOutgoingRequestsTo:]
  -[TAStore initWithEventBufferSettings:scanRequestSettings:visitStateSettings:deviceRecordSettings:]
  -[TAStore setObservers:]
  -[TAStore shouldAddTASPAdvertisement:]
  -[TAStore visitState:didIssueMetricsSubmissionHint:]
  -[TAStore eventBuffer]
  -[TAStore removeObserver:]
  -[TAStore isEqual:]
  -[TAStore updateClock:]
  -[TAStore observers]


TADisplayOnCalculator : NSObject <NSSecureCoding>
 @property  BOOL useBudget
 @property  double budgetRemaining
 @property  NSDate *startTime
 @property  NSDate *evaluatedUntil

  // class methods
  +[TADisplayOnCalculator supportsSecureCoding]

  // instance methods
  -[TADisplayOnCalculator startTime]
  -[TADisplayOnCalculator encodeWithCoder:]
  -[TADisplayOnCalculator setStartTime:]
  -[TADisplayOnCalculator .cxx_destruct]
  -[TADisplayOnCalculator isEqual:]
  -[TADisplayOnCalculator initWithCoder:]
  -[TADisplayOnCalculator initWithStartTime:]
  -[TADisplayOnCalculator initWithStartTime:budget:]
  -[TADisplayOnCalculator completeDisplayOnWithEndDate:]
  -[TADisplayOnCalculator calculateDisplayOnWithEvents:advertisements:endDate:]
  -[TADisplayOnCalculator evaluatedUntil]
  -[TADisplayOnCalculator useBudget]
  -[TADisplayOnCalculator setUseBudget:]
  -[TADisplayOnCalculator budgetRemaining]
  -[TADisplayOnCalculator setBudgetRemaining:]


TAEventBufferSettings : NSObject
 @property  unsigned long bufferCapacity
 @property  double bufferTimeIntervalOfRetention

  // instance methods
  -[TAEventBufferSettings initWithBufferCapacityOrDefault:bufferTimeIntervalOfRetentionOrDefault:]
  -[TAEventBufferSettings initWithBufferCapacity:bufferTimeIntervalOfRetention:]
  -[TAEventBufferSettings bufferCapacity]
  -[TAEventBufferSettings copyWithZone:]
  -[TAEventBufferSettings bufferTimeIntervalOfRetention]


TAEventBuffer : NSObject
  // class methods
  +[TAEventBuffer getExpiredElementKeyForClass:andEventSubtype:]

  // instance methods
  -[TAEventBuffer ingestTAEvent:]
  -[TAEventBuffer getAllTAEventsMatchingCompoundPredicate:]
  -[TAEventBuffer initWithSettings:]
  -[TAEventBuffer purgeWithClock:]
  -[TAEventBuffer _updateLatestElement:withKey:]
  -[TAEventBuffer getLatestElementOf:andEventSubtype:]
  -[TAEventBuffer .cxx_destruct]
  -[TAEventBuffer getLatestElementOf:]
  -[TAEventBuffer getAllTAEventsOf:between:]
  -[TAEventBuffer getEarliestEventDate]
  -[TAEventBuffer getAllTAEventsOf:andEventSubtype:between:]
  -[TAEventBuffer getAllTAEventsOf:andEventSubtype:]
  -[TAEventBuffer updateLatestExpiredElements:]
  -[TAEventBuffer _updateLatestElement:]
  -[TAEventBuffer getAllTAEventsOf:]
  -[TAEventBuffer getAllTAEventsBetween:]


TAInterVisitMetricsSnapshot : NSObject <NSSecureCoding>
 @property  BOOL isClosed
 @property  NSDate *initialTime
 @property  NSDate *lastUpdateTime
 @property  unsigned long maxUniqueAddresses
 @property  NSMutableDictionary *accumulatedDeviceMetrics
 @property  NSMutableDictionary *firstAssociatedLocationPerDevice
 @property  NSMutableDictionary *lastAssociatedLocationPerDevice
 @property  NSMutableDictionary *lastAdvPerDevice

  // class methods
  +[TAInterVisitMetricsSnapshot supportsSecureCoding]

  // instance methods
  -[TAInterVisitMetricsSnapshot lastUpdateTime]
  -[TAInterVisitMetricsSnapshot lastAssociatedLocationPerDevice]
  -[TAInterVisitMetricsSnapshot lastAdvPerDevice]
  -[TAInterVisitMetricsSnapshot updateInterVisitMetric:store:withUpdatedTime:andCloseSnapshot:]
  -[TAInterVisitMetricsSnapshot initWithTime:maxUniqueAddresses:]
  -[TAInterVisitMetricsSnapshot initialTime]
  -[TAInterVisitMetricsSnapshot isClosed]
  -[TAInterVisitMetricsSnapshot encodeWithCoder:]
  -[TAInterVisitMetricsSnapshot updateWithInterVisitMetricsSnapshot:store:]
  -[TAInterVisitMetricsSnapshot accumulatedDeviceMetrics]
  -[TAInterVisitMetricsSnapshot .cxx_destruct]
  -[TAInterVisitMetricsSnapshot firstAssociatedLocationPerDevice]
  -[TAInterVisitMetricsSnapshot visitEntryDelayCorrection:store:]
  -[TAInterVisitMetricsSnapshot maxUniqueAddresses]
  -[TAInterVisitMetricsSnapshot isEqual:]
  -[TAInterVisitMetricsSnapshot initWithCoder:]


TAVehicleCategory : NSObject
 @property  NSDate *date
 @property  unsigned long vehicleCategoryType

  // class methods
  +[TAVehicleCategory speculateTAVehicleCategoryTypeFromVehicleStateNotification:]
  +[TAVehicleCategory speculateTAVehicleCategoryTypeFromGeoNavigationNotification:]

  // instance methods
  -[TAVehicleCategory date]
  -[TAVehicleCategory .cxx_destruct]
  -[TAVehicleCategory initWithVehicleCategoryType:andDate:]
  -[TAVehicleCategory initWithTAVehicularStateNotification:]
  -[TAVehicleCategory initWithTAGeoNavigationNotification:]
  -[TAVehicleCategory vehicleCategoryType]


TAFilterObservationAggregator : NSObject
  // class methods
  +[TAFilterObservationAggregator aggregateObservationsThroughHistoryForSingleDetection:visitSnapshotBuffer:intervisitSnapshotBuffer:clock:]
  +[TAFilterObservationAggregator location:withAdvertisementTimestamp:]
  +[TAFilterObservationAggregator aggregateObservationsThroughHistoryForDetectionResults:visitSnapshotBuffer:intervisitSnapshotBuffer:clock:]


TAVisitSnapshot : NSObject <NSSecureCoding>
 @property  NSMutableOrderedSet *lruUtAdvertisementCache
 @property  unsigned long uniqueUTBufferSizeCap
 @property  unsigned long displayEventBufferSizeCap
 @property  NSMutableArray *displayEvents
 @property  NSDate *exitIntervalBeginning
 @property  TADisplayOnCalculator *displayOnCalculator
 @property  NSNumber *distanceToClosestLoi
 @property  NSDate *entryDurationOfConsiderationClosed
 @property  unsigned long maxNSigmaBetweenLastLocationAndVisit
 @property  BOOL isClosed
 @property  TACLVisit *representativeVisit
 @property  TALocationLite *latestLocation
 @property  unsigned long loiType
 @property  NSMutableDictionary *latestUtAdvertisements
 @property  NSMutableDictionary *earliestUtAdvertisements
 @property  BOOL latestLocationInsideVisit

  // class methods
  +[TAVisitSnapshot supportsSecureCoding]

  // instance methods
  -[TAVisitSnapshot representativeVisit]
  -[TAVisitSnapshot latestLocationInsideVisit]
  -[TAVisitSnapshot isClosed]
  -[TAVisitSnapshot setDepartureVisit:]
  -[TAVisitSnapshot entryDurationOfConsiderationClosed]
  -[TAVisitSnapshot setDistanceToClosestLoi:]
  -[TAVisitSnapshot updateLatestLocation:]
  -[TAVisitSnapshot encodeWithCoder:]
  -[TAVisitSnapshot setDisplayEventBufferSizeCap:]
  -[TAVisitSnapshot setUniqueUTBufferSizeCap:]
  -[TAVisitSnapshot addSystemState:]
  -[TAVisitSnapshot .cxx_destruct]
  -[TAVisitSnapshot closeSnapshotCleanup]
  -[TAVisitSnapshot setExitIntervalBeginning:]
  -[TAVisitSnapshot earliestUtAdvertisements]
  -[TAVisitSnapshot uniqueUTBufferSizeCap]
  -[TAVisitSnapshot setLruUtAdvertisementCache:]
  -[TAVisitSnapshot getEntryIntervalEvaluatedUntil]
  -[TAVisitSnapshot addUTAdvertisement:]
  -[TAVisitSnapshot getDisplayOnTimeUntilEndDate:]
  -[TAVisitSnapshot setRepresentativeVisit:]
  -[TAVisitSnapshot setDisplayEvents:]
  -[TAVisitSnapshot getExitAdvertisementsWithDisplayOnBudget:]
  -[TAVisitSnapshot maxNSigmaBetweenLastLocationAndVisit]
  -[TAVisitSnapshot getEntryAdvertisementsWithDisplayOnBudget:]
  -[TAVisitSnapshot getDurationOfVisitEntryConsideredWithDisplayOnBudget:]
  -[TAVisitSnapshot pruneDisplayEvents]
  -[TAVisitSnapshot getArrivalDelay]
  -[TAVisitSnapshot getDurationOfVisitExitConsideredWithDisplayOnBudget:]
  -[TAVisitSnapshot updateLoiType:]
  -[TAVisitSnapshot initWithTACLVisit:uniqueUTBufferCap:displayEventBufferSizeCap:maxNSigmaBetweenLastLocationAndVisit:]
  -[TAVisitSnapshot setDisplayOnCalculator:]
  -[TAVisitSnapshot getDepartureDelay]
  -[TAVisitSnapshot displayOnCalculator]
  -[TAVisitSnapshot loiType]
  -[TAVisitSnapshot calculateExitIntervalWithDisplayOnBudget:]
  -[TAVisitSnapshot addScanState:]
  -[TAVisitSnapshot displayEventBufferSizeCap]
  -[TAVisitSnapshot updateEntryIntervalWithDisplayOnBudget:evaluateToEnd:]
  -[TAVisitSnapshot displayEvents]
  -[TAVisitSnapshot latestLocation]
  -[TAVisitSnapshot setMaxNSigmaBetweenLastLocationAndVisit:]
  -[TAVisitSnapshot latestUtAdvertisements]
  -[TAVisitSnapshot distanceToClosestLoi]
  -[TAVisitSnapshot lruUtAdvertisementCache]
  -[TAVisitSnapshot isEqual:]
  -[TAVisitSnapshot getLocationRepresentingSnapshot]
  -[TAVisitSnapshot mostRecentAdvertisementDate]
  -[TAVisitSnapshot exitIntervalBeginning]
  -[TAVisitSnapshot initWithCoder:]
  -[TAVisitSnapshot evaluateSnapshotQualityWithMinDwellDuration:minDisplayOnDuration:]
  -[TAVisitSnapshot setEntryDurationOfConsiderationClosed:]


TAScanRequestSettings : NSObject <NSSecureCoding>
 @property  double minVisitEntryDisplayOnDuration
 @property  double minInterVisitDisplayOnDuration
 @property  double interVisitScanDelay
 @property  unsigned long maxInterVisitScanRequests

  // class methods
  +[TAScanRequestSettings supportsSecureCoding]

  // instance methods
  -[TAScanRequestSettings minVisitEntryDisplayOnDuration]
  -[TAScanRequestSettings encodeWithCoder:]
  -[TAScanRequestSettings minInterVisitDisplayOnDuration]
  -[TAScanRequestSettings interVisitScanDelay]
  -[TAScanRequestSettings initWithMinVisitEntryDisplayOnDurationOrDefault:minInterVisitDisplayOnDurationOrDefault:interVisitScanDelayOrDefault:maxInterVisitScanRequestsOrDefault:]
  -[TAScanRequestSettings copyWithZone:]
  -[TAScanRequestSettings initWithMinVisitEntryDisplayOnDuration:minInterVisitDisplayOnDuration:interVisitScanDelay:maxInterVisitScanRequests:]
  -[TAScanRequestSettings maxInterVisitScanRequests]
  -[TAScanRequestSettings isEqual:]
  -[TAScanRequestSettings initWithCoder:]
  -[TAScanRequestSettings initWithDefaults]


TAScanRequest : NSObject <NSSecureCoding>
 @property  NSDate *lastScanRequestedDate
 @property  unsigned long interVisitScanCount
 @property  TAScanRequestSettings *settings
 @property  NSDate *scheduledScanRequest

  // class methods
  +[TAScanRequest supportsSecureCoding]

  // instance methods
  -[TAScanRequest evaluateInterVisitAfterVisitExit:displayEvents:advertisements:deviceRecord:clock:]
  -[TAScanRequest initWithSettings:]
  -[TAScanRequest interVisitScanCount]
  -[TAScanRequest lastScanRequestedDate]
  -[TAScanRequest encodeWithCoder:]
  -[TAScanRequest scheduledScanRequest]
  -[TAScanRequest .cxx_destruct]
  -[TAScanRequest scheduleInterVisitScanForAdvertisement:deviceRecord:clock:]
  -[TAScanRequest settings]
  -[TAScanRequest evictScheduledInterVisitScanWithClock:]
  -[TAScanRequest setLastScanRequestedDate:]
  -[TAScanRequest shouldScanOnAdvertisement:withDeviceRecord:]
  -[TAScanRequest setInterVisitScanCount:]
  -[TAScanRequest evaluateVisitEntry:clock:]
  -[TAScanRequest isEqual:]
  -[TAScanRequest initWithCoder:]


TACoreAnalyticMetricManager : NSObject
  // class methods
  +[TACoreAnalyticMetricManager computeMetricsInterVisit:]
  +[TACoreAnalyticMetricManager computeMetricsVisit:withFilterVisitsSettings:]


NSJSONSerialization(NSString)
	// class methods
	+[NSJSONSerialization(NSString) JSONStringFromNSDictionary:error:]

(TADateFormat)
	// instance methods
	-[(TADateFormat) getDateString]
	-[(TADateFormat) getNextDateAtHour:]
	-[(TADateFormat) getMinutesSinceStartOfDay]

(HexString)
	// class methods
	+[(HexString) dataWithHexString:]

	// instance methods
	-[(HexString) hexString]

NSPredicate(TAEventProtocol)
	// class methods
	+[NSPredicate(TAEventProtocol) predicateForTAEventsInDateInterval:]
	+[NSPredicate(TAEventProtocol) predicateForTAEventsClass:]
	+[NSPredicate(TAEventProtocol) predicateForTAEventsClass:andEventSubtype:]

NSDateInterval(Safety)
	// class methods
	+[NSDateInterval(Safety) createIntervalSafelyWithStartDate:endDate:]

01 00 0400 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0800 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0300 /System/Library/PrivateFrameworks/LoggingSupport.framework/LoggingSupport: OSActivityStream 
01 00 0300 /System/Library/PrivateFrameworks/LoggingSupport.framework/LoggingSupport: OSLogPersistence 
01 00 0500 /System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine: RTRoutineManager 
01 00 0500 /System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine: RTStoredVisitFetchOptions 
