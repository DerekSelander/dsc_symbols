|| __DATA.__common _activeTraceTargets
|| __DATA.__common _lowInternetModeScoresDL
|| __DATA.__common _lowInternetModeScoresUL
|| __DATA.__data _kDarwinNotificationHasAlternateAdvice
|| __DATA.__data _kDarwinNotificationMaterialLinkQualityChange
|| __DATA.__objc_data _OBJC_CLASS_$_AppHistoryScreener
|| __DATA.__objc_data _OBJC_CLASS_$_AppHistoryScreenerEpisode
|| __DATA.__objc_data _OBJC_CLASS_$_CLIPSShim
|| __DATA.__objc_data _OBJC_CLASS_$_HourlyMaintenanceActivity
|| __DATA.__objc_data _OBJC_CLASS_$_MathUtility
|| __DATA.__objc_data _OBJC_CLASS_$_NWPVarBandit
|| __DATA.__objc_data _OBJC_CLASS_$_NWPVarStoreImpoExpo
|| __DATA.__objc_data _OBJC_CLASS_$_NetDiagnosticsShim
|| __DATA.__objc_data _OBJC_CLASS_$_NetworkDomainsUtility
|| __DATA.__objc_data _OBJC_CLASS_$_SFActivityFullBitmaps
|| __DATA.__objc_data _OBJC_CLASS_$_SemiDailyMaintenanceActivity
|| __DATA.__objc_data _OBJC_CLASS_$_SymptomEvaluator
|| __DATA.__objc_data _OBJC_METACLASS_$_AppHistoryScreener
|| __DATA.__objc_data _OBJC_METACLASS_$_AppHistoryScreenerEpisode
|| __DATA.__objc_data _OBJC_METACLASS_$_CLIPSShim
|| __DATA.__objc_data _OBJC_METACLASS_$_HourlyMaintenanceActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_MathUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPVarBandit
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPVarStoreImpoExpo
|| __DATA.__objc_data _OBJC_METACLASS_$_NetDiagnosticsShim
|| __DATA.__objc_data _OBJC_METACLASS_$_NetworkDomainsUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_SFActivityFullBitmaps
|| __DATA.__objc_data _OBJC_METACLASS_$_SemiDailyMaintenanceActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_SymptomEvaluator
|| __DATA.__objc_ivar _OBJC_IVAR_$_AnalyticsEngineCore.workspace
|| __DATA_CONST.__const _CLIPS_BASEBAND_BEDF_MODULE
|| __DATA_CONST.__const _CLIPS_BASEBAND_MAV_MODULE
|| __DATA_CONST.__const _CLIPS_BASEBAND_MODULE
|| __DATA_CONST.__const _CLIPS_BLUETOOTH_MODULE
|| __DATA_CONST.__const _CLIPS_COMMON_MODULE
|| __DATA_CONST.__const _CLIPS_HOMEKIT_MODULE
|| __DATA_CONST.__const _CLIPS_MAIN_MODULE
|| __DATA_CONST.__const _CLIPS_MODULES_MODULE
|| __DATA_CONST.__const _CLIPS_MODULE_BASE_VERSION_KEY
|| __DATA_CONST.__const _CLIPS_MODULE_CONSTRUCTS_KEY
|| __DATA_CONST.__const _CLIPS_MODULE_FAILURE_REASON_KEY
|| __DATA_CONST.__const _CLIPS_MODULE_NAME_KEY
|| __DATA_CONST.__const _CLIPS_MODULE_OTA_SERIAL_NUMBER_KEY
|| __DATA_CONST.__const _CLIPS_MODULE_REQUIRED_MODULES_KEY
|| __DATA_CONST.__const _CLIPS_NETWORKING_MODULE
|| __DATA_CONST.__const _CLIPS_SYMPTOMS_MODULE
|| __DATA_CONST.__const _CLIPS_WIFI_MODULE
|| __DATA_CONST.__const _CTShimSubscriberLastUpdateTime
|| __DATA_CONST.__const _CTShimSubscriberMDN
|| __DATA_CONST.__const _CTShimSubscriberSlotID
|| __DATA_CONST.__const _CTShimSubscriberTag
|| __DATA_CONST.__const _CTShimSubscriberTagCounter
|| __DATA_CONST.__const _CTShimSubscriptionCurrentRATSelection
|| __DATA_CONST.__const _CTShimSubscriptionInfoBars
|| __DATA_CONST.__const _CTShimSubscriptionInfoCTCellInfo
|| __DATA_CONST.__const _CTShimSubscriptionInfoCTDataStatus
|| __DATA_CONST.__const _CTShimSubscriptionInfoCarrierName
|| __DATA_CONST.__const _CTShimSubscriptionInfoCountryCode
|| __DATA_CONST.__const _CTShimSubscriptionInfoDataStall
|| __DATA_CONST.__const _CTShimSubscriptionInfoDataTransferTime
|| __DATA_CONST.__const _CTShimSubscriptionInfoDataTransferTimeEnabled
|| __DATA_CONST.__const _CTShimSubscriptionInfoInUse
|| __DATA_CONST.__const _CTShimSubscriptionInfoIsCurrentDataSubscription
|| __DATA_CONST.__const _CTShimSubscriptionInfoLinkPowerCost
|| __DATA_CONST.__const _CTShimSubscriptionInfoLinkQualityFingerprint
|| __DATA_CONST.__const _CTShimSubscriptionInfoLinkState
|| __DATA_CONST.__const _CTShimSubscriptionInfoNetworkCode
|| __DATA_CONST.__const _CTShimSubscriptionInfoOperatorName
|| __DATA_CONST.__const _CTShimSubscriptionInfoSlot
|| __DATA_CONST.__const _CTShimSubscriptionInfoTimestamp
|| __DATA_CONST.__const _CTShimSubscriptionInfoTrafficClass
|| __DATA_CONST.__const _CTShimSubscriptionInfoUserDataPreferred
|| __DATA_CONST.__const _CTShimSubscriptionNRServingCellType
|| __DATA_CONST.__const _CTShimSubscriptionPreferredRATSelection
|| __DATA_CONST.__const _CTShimSubscriptionRATSelectionIsNR
|| __DATA_CONST.__const _CTShimSubscriptionRATSelectionMask
|| __DATA_CONST.__const _CTShimSubscriptionSupports5G
|| __DATA_CONST.__const _CTShimSubscriptions
|| __DATA_CONST.__const _kAWDCLIPSTemplateKey
|| __DATA_CONST.__const _kAWDCLIPSTemplateModuleKey
|| __DATA_CONST.__const _kCellularMaskedID
|| __DATA_CONST.__const _kConfigurationParamsRestoreDefaults
|| __DATA_CONST.__const _kHashFailedString
|| __DATA_CONST.__const _kLQMJournalPrefix
|| __DATA_CONST.__const _kMixedJournalPrefix
|| __DATA_CONST.__const _kNWPVarModelAnalytics
|| __DATA_CONST.__const _kNWPVarModelEpsilonGreedyEpsilonDecayRate
|| __DATA_CONST.__const _kNWPVarModelEpsilonGreedyEpsilonDecayedMinimumValue
|| __DATA_CONST.__const _kNWPVarModelEpsilonGreedyEpsilonValue
|| __DATA_CONST.__const _kNWPVarModelEpsilonGreedyLastRewardsRetained
|| __DATA_CONST.__const _kNWPVarModelEpsilonGreedyResetAtNthPull
|| __DATA_CONST.__const _kNWPVarModelUpperConfidenceBoundConfidenceValue
|| __DATA_CONST.__const _kNWPVarModelUpperConfidenceBoundResetAtNthPull
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskArchiveBaseDuration
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskArchiveBaseSize
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskArchiveHVDuration
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskArchiveHVSize
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskArchiveTTLDuration
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskArchiveTTLSize
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskFileDicts
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskFileGroupID
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskFileMode
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskFilePath
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskFileUserID
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskGNINDFInfo
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskGNISensitive
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskGNISysConfig
|| __DATA_CONST.__const _kNetDiagnosticsShim_TaskName
|| __DATA_CONST.__const _kNotificationAlgosScore
|| __DATA_CONST.__const _kNotificationAlgosScoreBundleName
|| __DATA_CONST.__const _kNotificationAlgosScoreValue
|| __DATA_CONST.__const _kNotificationCellLinkQualityChange
|| __DATA_CONST.__const _kNotificationCellLinkStateChange
|| __DATA_CONST.__const _kNotificationCellLinkStateReportCapable
|| __DATA_CONST.__const _kNotificationCellThroughputAdvisoryCapable
|| __DATA_CONST.__const _kNotificationCellTrafficClassReportCapable
|| __DATA_CONST.__const _kNotificationConsiderAlternateUpdate
|| __DATA_CONST.__const _kNotificationConsiderAlternateUpdateDetail
|| __DATA_CONST.__const _kNotificationCurrentICCID
|| __DATA_CONST.__const _kNotificationCurrentICCIDChange
|| __DATA_CONST.__const _kNotificationDomainPrivacyReset
|| __DATA_CONST.__const _kNotificationDomainResolving
|| __DATA_CONST.__const _kNotificationDomainResolvingBundleName
|| __DATA_CONST.__const _kNotificationDomainResolvingDomain
|| __DATA_CONST.__const _kNotificationDomainResolvingEffectiveUserId
|| __DATA_CONST.__const _kNotificationDomainResolvingEndpoints
|| __DATA_CONST.__const _kNotificationDomainUserAppTracking
|| __DATA_CONST.__const _kNotificationDomainUserAppTrackingState
|| __DATA_CONST.__const _kNotificationDomainUserAppTrackingUserID
|| __DATA_CONST.__const _kNotificationDomainUserEndpointTracking
|| __DATA_CONST.__const _kNotificationDomainUserEndpointTrackingState
|| __DATA_CONST.__const _kNotificationDomainUserEndpointTrackingUserID
|| __DATA_CONST.__const _kNotificationDomainUserManagementSwitching
|| __DATA_CONST.__const _kNotificationDomainUserManagementSwitchingFromUserID
|| __DATA_CONST.__const _kNotificationDomainUserManagementSwitchingToUserID
|| __DATA_CONST.__const _kNotificationFallbackAdminEnableValue
|| __DATA_CONST.__const _kNotificationFallbackAdminEnablementChange
|| __DATA_CONST.__const _kNotificationFallbackRecommendation
|| __DATA_CONST.__const _kNotificationLinkQualityValue
|| __DATA_CONST.__const _kNotificationNewConnectivityEpochCell
|| __DATA_CONST.__const _kNotificationNewConnectivityEpochCompanionLink
|| __DATA_CONST.__const _kNotificationNewConnectivityEpochWiFi
|| __DATA_CONST.__const _kNotificationNewConnectivityEpochWired
|| __DATA_CONST.__const _kNotificationNewModelGenerated
|| __DATA_CONST.__const _kNotificationNewPrimaryInterface
|| __DATA_CONST.__const _kNotificationNewTraffic
|| __DATA_CONST.__const _kNotificationOfFlowDisruptingEvent
|| __DATA_CONST.__const _kNotificationOfTetheringState
|| __DATA_CONST.__const _kNotificationRecommendationDetail
|| __DATA_CONST.__const _kNotificationStateChangeTimeStamp
|| __DATA_CONST.__const _kNotificationStateDetail
|| __DATA_CONST.__const _kNotificationStateHashedPrimaryKey
|| __DATA_CONST.__const _kNotificationStateKeyOnOff
|| __DATA_CONST.__const _kNotificationStateRelayReady
|| __DATA_CONST.__const _kNotificationSymptomsOSLogReceivedFromSymptomsTool
|| __DATA_CONST.__const _kNotificationWiFiLinkQualityChange
|| __DATA_CONST.__const _kNotificationWiredLinkQualityChange
|| __DATA_CONST.__const _kPrefAppIdentifierKey
|| __DATA_CONST.__const _kStateMachineStatusKeyAdminState
|| __DATA_CONST.__const _kStateMachineStatusKeyInternalVariables
|| __DATA_CONST.__const _kStateMachineStatusKeyState
|| __DATA_CONST.__const _kSymptomActivityBitmapCellularInterface
|| __DATA_CONST.__const _kSymptomActivityBitmapCurrentMachAbsTime
|| __DATA_CONST.__const _kSymptomActivityBitmapEndTime
|| __DATA_CONST.__const _kSymptomActivityBitmapEthernetInterface
|| __DATA_CONST.__const _kSymptomActivityBitmapIPSecInterface
|| __DATA_CONST.__const _kSymptomActivityBitmapStartTime
|| __DATA_CONST.__const _kSymptomActivityBitmapWiFiInterface
|| __DATA_CONST.__const _kSymptomActivityBitmapsActualStartTimeKey
|| __DATA_CONST.__const _kSymptomActivityBitmapsBitmapKey
|| __DATA_CONST.__const _kSymptomActivityBitmapsValidBitsCountKey
|| __DATA_CONST.__const _kSymptomAnalyticsHelperServiceEndpoint
|| __DATA_CONST.__const _kSymptomAnalyticsNetworkAdvisoryDefiniteImprovement
|| __DATA_CONST.__const _kSymptomAnalyticsNetworkAdvisoryDefiniteNotUse
|| __DATA_CONST.__const _kSymptomAnalyticsNetworkAdvisoryDefiniteUse
|| __DATA_CONST.__const _kSymptomAnalyticsNetworkAdvisoryError
|| __DATA_CONST.__const _kSymptomAnalyticsNetworkAdvisoryInconclusive
|| __DATA_CONST.__const _kSymptomAnalyticsNetworkAdvisoryInterfaceNotReady
|| __DATA_CONST.__const _kSymptomAnalyticsNetworkAdvisoryKey
|| __DATA_CONST.__const _kSymptomAnalyticsNetworkAdvisoryNoImprovement
|| __DATA_CONST.__const _kSymptomAnalyticsNetworkAdvisoryNotSupported
|| __DATA_CONST.__const _kSymptomAnalyticsNetworkAdvisoryWeakImprovement
|| __DATA_CONST.__const _kSymptomAnalyticsNetworkAdvisoryWeakNotUse
|| __DATA_CONST.__const _kSymptomAnalyticsNetworkAdvisoryWeakUse
|| __DATA_CONST.__const _kSymptomAnalyticsServiceCalendarUsageToggle
|| __DATA_CONST.__const _kSymptomAnalyticsServiceCopyRelationship
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingClearHistoryBundleIDs
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingClearHistoryEndDate
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingClearHistoryKey
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingClearHistoryStartDate
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingContext
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingContextVerificationType
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingCount
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingDomain
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingDomainClassification
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingDomainOwner
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingDomainType
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingFirstTimeStamp
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingHits
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingInitiatedType
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingIsAmbiguous
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingKind
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingMaintenance
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingMaxTimeStamp
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingMinTimeStamp
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingQueryBundleIdentifier
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingQueryContextVerification
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingQueryDomain
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingQueryLimit
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingQueryPredicate
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingQuerySortDescriptor
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingQueryUnnamedDomains
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingQueryViewType
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingQueryWebsite
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingResolvedEndpoints
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingResult
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingResultCount
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingShowDetails
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingStatusKey
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingSumHits
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingSwitchKey
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingSwitchStateKey
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingSwitchStateSinceKey
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingSwitchStateValueKey
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingTimeStamp
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingUnnamedDomains
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingUnresolvedEndpoints
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingUserDidFollowUpKey
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingXRefSwitchStateKey
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingXRefSwitchStateSinceKey
|| __DATA_CONST.__const _kSymptomAnalyticsServiceDomainTrackingXRefSwitchStateValueKey
|| __DATA_CONST.__const _kSymptomAnalyticsServiceEndpoint
|| __DATA_CONST.__const _kSymptomAnalyticsServiceFetchLimit
|| __DATA_CONST.__const _kSymptomAnalyticsServiceFetchOffset
|| __DATA_CONST.__const _kSymptomAnalyticsServiceFlowCurrent
|| __DATA_CONST.__const _kSymptomAnalyticsServiceFlowHistorical
|| __DATA_CONST.__const _kSymptomAnalyticsServiceFlowInstant
|| __DATA_CONST.__const _kSymptomAnalyticsServiceFlowTag
|| __DATA_CONST.__const _kSymptomAnalyticsServiceFlowTagAll
|| __DATA_CONST.__const _kSymptomAnalyticsServiceFlowTagIKE
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIArg1
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOICanUseOnAlternate
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOICanUseOnAlternateCodes
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOICanUseOnAlternateReasons
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOICanUseOnAlternateStates
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIEstTransferTimeConfidence
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIEstTransferTimeDLSecs
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIEstTransferTimeULSecs
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchAuditableLinkQuality
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchAuditableLinkQualityLoadedLQM
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchAuditableLinkQualityValue
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchDayOfWeekGrouping
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchEstTransferTime
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchForegroundActivity
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchInstantQuality
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchInterfaceTimeline
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchL2ThroughputMetrics
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchNetworkAttachmentInfo
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchPredictions
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchPredictionsError
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchPredictionsGenerationDate
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchTrafficInvitesHourlyDistribution
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIFetchTrainingProgress
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIPayloadInfoDLKB
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIPayloadInfoULKB
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIPredictions24hrs
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIRRCIdleDLThroughputKbps
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNOIRRCIdleULThroughputKbps
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNWInterfaceTypeCellular
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNWInterfaceTypeOther
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNWInterfaceTypeWiFi
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNWInterfaceTypeWiredEthernet
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNameChain
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNetworkAttachmentCurrent
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNetworkAttachmentHistorical
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNetworkAttachmentInstant
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNetworkAttachmentPerformance
|| __DATA_CONST.__const _kSymptomAnalyticsServiceNetworkDomainTracking
|| __DATA_CONST.__const _kSymptomAnalyticsServicePostProcess
|| __DATA_CONST.__const _kSymptomAnalyticsServicePostProcessComposeAdvisory
|| __DATA_CONST.__const _kSymptomAnalyticsServiceProcessWithGeneration
|| __DATA_CONST.__const _kSymptomAnalyticsServiceRNFForcedAdviceLevel
|| __DATA_CONST.__const _kSymptomAnalyticsServiceRNFTestResult
|| __DATA_CONST.__const _kSymptomAnalyticsServiceReason
|| __DATA_CONST.__const _kSymptomAnalyticsServiceRefreshUsage
|| __DATA_CONST.__const _kSymptomAnalyticsServiceSubscriberTag
|| __DATA_CONST.__const _kSymptomAnalyticsServiceSuccess
|| __DATA_CONST.__const _kSymptomAnalyticsServiceSweepUsage
|| __DATA_CONST.__const _kSymptomAnalyticsServiceTypicalUsageToggle
|| __DATA_CONST.__const _kSymptomAnalyticsServiceUsage
|| __DATA_CONST.__const _kSymptomAnalyticsServiceWatchpointKey
|| __DATA_CONST.__const _kSymptomAnalyticsServiceWatchpointTarget
|| __DATA_CONST.__const _kSymptomAnalyticsServiceWatchpointValue
|| __DATA_CONST.__const _kSymptomAnalyticsTypeBundleIdentifier
|| __DATA_CONST.__const _kSymptomAnalyticsTypeProcessName
|| __DATA_CONST.__const _kSymptomForcePreferCellOverWiFiAutoDisableTimestampKey
|| __DATA_CONST.__const _kSymptomForcePreferCellOverWiFiEnableKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AlgosScoreHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AnalyticsEngineCore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ApparentTimeHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_COSMEventSummary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_COSMStateSummary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTServerConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CellFallbackHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CellOutrankController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CellOutrankHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CellOutrankHandlerSTM
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CellularStateRelay
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ConfigurationParams
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CoreTelephonyShim
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CountDown
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DailyMaintenanceActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DateRounder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DecisionDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_Evaluation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EventDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ExpertSystemHandlerCore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ExpertSystemStateCore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FlowAnalyticsEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ImpoExpoService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_JournalTimeStamp
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LQMPredictionInternalRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LightweightTimer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ManagedEventHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ManagedEventTransport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWAppAdvice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWNetworkAdviceUpdate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWNetworkOfInterest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWNetworkPredictions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWPVar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWPVarValueItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NetDomainsHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NetworkAnalyticsEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NetworkAnalyticsModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NetworkAnalyticsQueueStatistics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NetworkAnalyticsQueueStatisticsSlotEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NetworkAnalyticsStateRelay
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NoBackhaulHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PeriodicMaintenanceActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFActivityBitmaps
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFEntitlements
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ServiceImpl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_StateWatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_StopWatch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SymptomExpertSystemHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SystemProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SystemSettingsRelay
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TCPProgressProbe
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TraceRecorder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeeklyMaintenanceActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AlgosScoreHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AnalyticsEngineCore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ApparentTimeHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_COSMEventSummary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_COSMStateSummary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTServerConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CellFallbackHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CellOutrankController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CellOutrankHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CellOutrankHandlerSTM
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CellularStateRelay
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ConfigurationParams
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CoreTelephonyShim
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CountDown
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DailyMaintenanceActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DateRounder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DecisionDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_Evaluation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EventDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ExpertSystemHandlerCore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ExpertSystemStateCore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FlowAnalyticsEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ImpoExpoService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_JournalTimeStamp
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LQMPredictionInternalRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LightweightTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ManagedEventHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ManagedEventTransport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWAppAdvice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWNetworkAdviceUpdate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWNetworkOfInterest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWNetworkPredictions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWPVar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWPVarValueItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NetDomainsHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NetworkAnalyticsEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NetworkAnalyticsModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NetworkAnalyticsQueueStatistics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NetworkAnalyticsQueueStatisticsSlotEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NetworkAnalyticsStateRelay
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NoBackhaulHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PeriodicMaintenanceActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFActivityBitmaps
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFEntitlements
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ServiceImpl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_StateWatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_StopWatch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SymptomExpertSystemHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SystemProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SystemSettingsRelay
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TCPProgressProbe
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TraceRecorder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeeklyMaintenanceActivity
|| __TEXT.__text _AlgosPackScore
|| __TEXT.__text _AlgosUnpackScore
|| __TEXT.__text _activate_symptom_evaluator_handling
|| __TEXT.__text _apparentTime
|| __TEXT.__text _boottime_secs
|| __TEXT.__text _client_transactions_release
|| __TEXT.__text _configure_analytics_launchpad_for_helper
|| __TEXT.__text _configure_symptom_evaluator_handling
|| __TEXT.__text _configure_symptom_logging
|| __TEXT.__text _dateStringMillisecondsFromReferenceInterval
|| __TEXT.__text _dateStringMillisecondsFromTimeInterval
|| __TEXT.__text _dispatch_with_apparent_delay
|| __TEXT.__text _formattedDateStringForCurrentTime
|| __TEXT.__text _formattedDateStringForTimeInterval
|| __TEXT.__text _hexStringForData
|| __TEXT.__text _init_analytics_portal_listening
|| __TEXT.__text _init_managed_event_listening
|| __TEXT.__text _init_symptom_evaluator_listening
|| __TEXT.__text _isDateWithinScope
|| __TEXT.__text _machAbsoluteTimeFromNanoseconds
|| __TEXT.__text _machAbsoluteTime_secs
|| __TEXT.__text _machContinuousTime_secs
|| __TEXT.__text _nanosecondsFromMachAbsoluteTime
|| __TEXT.__text _outrankHandlerEventToString
|| __TEXT.__text _secondsFromMachAbsoluteTime
|| __TEXT.__text _setApparentTime
|| __TEXT.__text _symptom_evaluator_shutdown
|| __TEXT.__text _timeIntervalFrom1970ToMidnight
|| __TEXT.__text _timeIntervalFromMachAbsoluteTime
|| __TEXT.__text _timeStringMillisecondsBetweenTimeIntervals
|| __TEXT.__text _timeStringMillisecondsDuration
|| __TEXT.__text _timeStringMillisecondsFromReferenceInterval
|| __TEXT.__text _timeStringMillisecondsFromTimeInterval
|| __TEXT.__text _traceCallout
|| __TEXT.__text _traceEntry
|| __TEXT.__text _traceItem
|| __TEXT.__text _uptime_secs
__ AlgosScoreFramework: _OBJC_CLASS_$_AlgosConnectionScore
__ CFNetwork: _CFNetServiceGetAddressing
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: _OBJC_CLASS_$___NSURLSessionStatistics
__ CFNetwork: __CFNetServiceCreateFromServiceName
__ CTCarrierSpace: _OBJC_CLASS_$_CTCarrierSpaceClient
__ CoreAnalytics: _AnalyticsIsEventUsed
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreAnalytics: _OBJC_CLASS_$_AnalyticsConfigurationObserver
__ CoreAnalytics: _analytics_send_event
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSExpressionDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreFoundation: _CFAllocatorGetDefault
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayContainsValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFCopyTypeIDDescription
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateCopy
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDateGetAbsoluteTime
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetDistributedCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNullGetTypeID
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetType
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPropertyListCreateDeepCopy
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRun
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFSocketCreateRunLoopSource
__ CoreFoundation: _CFSocketCreateWithNative
__ CoreFoundation: _CFSocketGetNative
__ CoreFoundation: _CFSocketInvalidate
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFUserNotificationDisplayNotice
__ CoreFoundation: _NSCalendarIdentifierBuddhist
__ CoreFoundation: _NSCalendarIdentifierChinese
__ CoreFoundation: _NSCalendarIdentifierCoptic
__ CoreFoundation: _NSCalendarIdentifierEthiopicAmeteAlem
__ CoreFoundation: _NSCalendarIdentifierEthiopicAmeteMihret
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCalendarIdentifierHebrew
__ CoreFoundation: _NSCalendarIdentifierISO8601
__ CoreFoundation: _NSCalendarIdentifierIndian
__ CoreFoundation: _NSCalendarIdentifierIslamic
__ CoreFoundation: _NSCalendarIdentifierIslamicCivil
__ CoreFoundation: _NSCalendarIdentifierIslamicTabular
__ CoreFoundation: _NSCalendarIdentifierIslamicUmmAlQura
__ CoreFoundation: _NSCalendarIdentifierJapanese
__ CoreFoundation: _NSCalendarIdentifierPersian
__ CoreFoundation: _NSCalendarIdentifierRepublicOfChina
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSSystemTimeZoneDidChangeNotification
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCMessageWithCFObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: __kCFSystemVersionProductNameKey
__ CoreFoundation: __kCFSystemVersionProductVersionKey
__ CoreFoundation: _kCFAbsoluteTimeIntervalSince1970
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreServices: _FSEventStreamCreate
__ CoreServices: _FSEventStreamSetDispatchQueue
__ CoreServices: _FSEventStreamStart
__ CoreServices: _FSEventsGetCurrentEventId
__ CoreServices: _OBJC_CLASS_$_LSApplicationExtensionRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleRecord
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CTServiceDescriptor
__ CoreTelephony: _OBJC_CLASS_$_CTXPCServiceSubscriptionContext
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: __CTServerConnectionCellMonitorCopyCellInfo
__ CoreTelephony: __CTServerConnectionConfigureLogging
__ CoreTelephony: __CTServerConnectionCopyDualSimCapability
__ CoreTelephony: __CTServerConnectionCopyProviderNameUsingCarrierBundle
__ CoreTelephony: __CTServerConnectionCopyReliableNetworkFallbackSettings
__ CoreTelephony: __CTServerConnectionCopySIMIdentity
__ CoreTelephony: __CTServerConnectionCopyTraceProperty
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionCreateWithIdentifier
__ CoreTelephony: __CTServerConnectionGetCellularDataIsEnabled
__ CoreTelephony: __CTServerConnectionGetPacketContextActiveByServiceType
__ CoreTelephony: __CTServerConnectionGetSupportedEnhancedLinkQualityMetric
__ CoreTelephony: __CTServerConnectionRegisterForNotification
__ CoreTelephony: __CTServerConnectionRegisterSupportedEnhancedLinkQualityMetric
__ CoreTelephony: __CTServerConnectionSendEnhancedLinkQualityTrafficInfo
__ CoreTelephony: __CTServerConnectionUnregisterForNotification
__ CoreTelephony: _kCTCellMonitorBandInfo
__ CoreTelephony: _kCTCellMonitorBandwidth
__ CoreTelephony: _kCTCellMonitorBaseStationId
__ CoreTelephony: _kCTCellMonitorCellId
__ CoreTelephony: _kCTCellMonitorCellRadioAccessTechnology
__ CoreTelephony: _kCTCellMonitorCellType
__ CoreTelephony: _kCTCellMonitorCellTypeServing
__ CoreTelephony: _kCTCellMonitorDeploymentType
__ CoreTelephony: _kCTCellMonitorMCC
__ CoreTelephony: _kCTCellMonitorMNC
__ CoreTelephony: _kCTCellMonitorPID
__ CoreTelephony: _kCTCellMonitorRSRP
__ CoreTelephony: _kCTCellMonitorRadioAccessTechnologyCDMA1x
__ CoreTelephony: _kCTCellMonitorRadioAccessTechnologyCDMAEVDO
__ CoreTelephony: _kCTCellMonitorRadioAccessTechnologyCDMAHybrid
__ CoreTelephony: _kCTCellMonitorRadioAccessTechnologyGSM
__ CoreTelephony: _kCTCellMonitorRadioAccessTechnologyLTE
__ CoreTelephony: _kCTCellMonitorRadioAccessTechnologyNR
__ CoreTelephony: _kCTCellMonitorRadioAccessTechnologyUMTS
__ CoreTelephony: _kCTCellMonitorRadioAccessTechnologyUTRAN
__ CoreTelephony: _kCTCellMonitorRadioAccessTechnologyUTRAN2
__ CoreTelephony: _kCTCellMonitorSectorId
__ CoreTelephony: _kCTCellMonitorTAC
__ CoreTelephony: _kCTCellMonitorUARFCN
__ CoreTelephony: _kCTCellularTransmitStateNotification
__ CoreTelephony: _kCTDataConnectionServiceTypeInternet
__ CoreTelephony: _kCTIndicatorsBeginStateDumpNotification
__ CoreTelephony: _kCTIndicatorsEndStateDumpNotification
__ CoreTelephony: _kCTIndicatorsGradedSignalStrength
__ CoreTelephony: _kCTIndicatorsSignalStrengthNotification
__ CoreTelephony: _kCTIndicatorsStateDumpFolderPrefix
__ CoreTelephony: _kCTIndicatorsStateDumpLogFilter
__ CoreTelephony: _kCTIndicatorsStateSnapshotFolderPath
__ CoreTelephony: _kCTRadioEnhancedLinkQualityNotification
__ CoreTelephony: _kCTRadioEnhancedLinkQualityNotificationData
__ CoreTelephony: _kCTRadioEnhancedLinkQualityNotificationType
__ CoreTelephony: _kCTRadioEnhancedLinkQualitySupportedMetricsNotification
__ CoreTelephony: _kCTRadioEnhancedLinkQualitySupportsLinkState
__ CoreTelephony: _kCTRadioRequireUserConfirmationToEnableKey
__ CoreTelephony: _kCTRadioUseLoggingProfileKey
__ CoreTelephony: _kCTRegistrationCellChangedNotification
__ CoreTelephony: _kCTRegistrationDataActive
__ CoreTelephony: _kCTRegistrationDataConnectionServices
__ CoreTelephony: _kCTRegistrationDataContextID
__ CoreTelephony: _kCTRegistrationDataStatusChangedNotification
__ CoreTelephony: _kCTReliableNetworkFallbackToCellularChangedNotification
__ CoreTelephony: _kCTReliableNetworkFallbackToCellularFeatureEnabledKey
__ CoreTelephony: _kCTReliableNetworkFallbackToCellularUserPreferenceKey
__ CoreTelephony: _kCTSIMSupportSIMStatus
__ CoreTelephony: _kCTSIMSupportSIMStatusChangeNotification
__ CoreTelephony: _kKeyCTCellularTransmitState
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSIntersectionRange
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSMachErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSProcessInfoPowerStateDidChangeNotification
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDataDetector
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ IOKit: _IOAllowPowerChange
__ IOKit: _IODeregisterForSystemPower
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IOObjectRelease
__ IOKit: _IOPMCopyAssertionsByProcessWithAllocator
__ IOKit: _IOPMScheduleAssertionExceptionNotification
__ IOKit: _IOPMUnregisterExceptionNotification
__ IOKit: _IOPSGetPercentRemaining
__ IOKit: _IORegisterForSystemPower
__ IOKit: _IORegistryEntryCreateCFProperties
__ IOKit: _IOServiceAddInterestNotification
__ IOKit: _IOServiceClose
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMasterPortDefault
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ MobileWiFi: _WiFiDeviceClientCopyCurrentNetwork
__ MobileWiFi: _WiFiDeviceClientCopyInterfaceStateInfo
__ MobileWiFi: _WiFiDeviceClientGetInterfaceName
__ MobileWiFi: _WiFiDeviceClientGetInterfaceRoleIndex
__ MobileWiFi: _WiFiDeviceClientGetLQMEventInterval
__ MobileWiFi: _WiFiDeviceClientIsInterfaceAWDL
__ MobileWiFi: _WiFiDeviceClientRegisterBssidChangeCallback
__ MobileWiFi: _WiFiDeviceClientRegisterExtendedLinkCallback
__ MobileWiFi: _WiFiDeviceClientRegisterLQMCallback
__ MobileWiFi: _WiFiDeviceClientRegisterRemovalCallback
__ MobileWiFi: _WiFiDeviceClientRegisterVirtualInterfaceStateChangeCallback
__ MobileWiFi: _WiFiDeviceClientSetLQMEventInterval
__ MobileWiFi: _WiFiManagerClientCopyDevices
__ MobileWiFi: _WiFiManagerClientCopyInterfaces
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientRegisterDeviceAttachmentCallback
__ MobileWiFi: _WiFiManagerClientRegisterPreferredNetworksChangedCallback
__ MobileWiFi: _WiFiManagerClientRegisterServerRestartCallback
__ MobileWiFi: _WiFiManagerClientRegisterVirtInterfaceChangeCallback
__ MobileWiFi: _WiFiManagerClientScheduleWithRunLoop
__ MobileWiFi: _WiFiNetworkGetPhyMode
__ MobileWiFi: _WiFiNetworkGetProperty
__ MobileWiFi: _WiFiNetworkGetSSID
__ MobileWiFi: _WiFiNetworkIsEAP
__ MobileWiFi: _WiFiNetworkIsHotspot
__ MobileWiFi: _WiFiNetworkIsHotspot20
__ MobileWiFi: _WiFiNetworkIsProfileBased
__ MobileWiFi: _WiFiNetworkIsPublicHotspot
__ MobileWiFi: _WiFiNetworkIsWEP
__ MobileWiFi: _WiFiNetworkIsWPA
__ MobileWiFi: _kWiFiNetworkChangeEventRemoveKey
__ MobileWiFi: _kWiFiNetworkIsAutoJoinedKey
__ Network: _OBJC_CLASS_$_NWAccumulator
__ Network: _OBJC_CLASS_$_NWActivityClientMetricStatistics
__ Network: _OBJC_CLASS_$_NWActivityEmptyTrigger
__ Network: _OBJC_CLASS_$_NWActivityEpilogueStatistics
__ Network: _OBJC_CLASS_$_NWActivityStatistics
__ Network: _OBJC_CLASS_$_NWConnectionStatistics
__ Network: _OBJC_CLASS_$_NWDeviceReport
__ Network: _OBJC_CLASS_$_NWInterface
__ Network: _OBJC_CLASS_$_NWL2InterfaceQueueStats
__ Network: _OBJC_CLASS_$_NWL2Report
__ Network: _OBJC_CLASS_$_NWNetworkAgentRegistration
__ Network: _OBJC_CLASS_$_NWParameters
__ Network: _OBJC_CLASS_$_NWPathEvaluator
__ Network: _OBJC_CLASS_$_NWPrivacyProxyNetwork
__ Network: _OBJC_CLASS_$_NWPrivacyProxyTraffic
__ Network: __nw_parameters_configure_protocol_default_configuration
__ Network: __nw_parameters_configure_protocol_disable
__ Network: _network_config_mptcp_cell_in_use
__ Network: _network_config_mptcp_watcher_create
__ Network: _network_config_mptcp_watcher_destroy
__ Network: _network_config_open_kernel_network_advisory_socket
__ Network: _nw_activity_activate
__ Network: _nw_activity_complete_with_reason
__ Network: _nw_activity_create
__ Network: _nw_activity_has_global_investigation_identifier
__ Network: _nw_activity_is_selected_for_reporting
__ Network: _nw_activity_should_report_to_destination
__ Network: _nw_connection_cancel
__ Network: _nw_connection_create
__ Network: _nw_connection_set_event_handler
__ Network: _nw_connection_set_queue
__ Network: _nw_connection_start
__ Network: _nw_endpoint_create_host_with_numeric_port
__ Network: _nw_interface_create_with_name
__ Network: _nw_interface_functional_type_to_interface_subtype
__ Network: _nw_interface_functional_type_to_interface_type
__ Network: _nw_interface_type_to_functional_type
__ Network: _nw_parameters_create_secure_tcp
__ Network: _nw_parameters_require_interface
__ Network: _nw_settings_get_flow_report_denominator
__ Network: _nw_settings_get_flow_report_numerator
__ Network: _nw_settings_get_quic_enabled
__ Network: _tcp_connection_fallback_watcher_create
__ Network: _tcp_connection_fallback_watcher_destroy
__ Network: _tcp_fallback_watcher_fallback_inuse
__ NetworkExtension: _OBJC_CLASS_$_NEPathControllerNetworkAgent
__ NetworkExtension: _OBJC_CLASS_$_NEPolicy
__ NetworkExtension: _OBJC_CLASS_$_NEPolicyCondition
__ NetworkExtension: _OBJC_CLASS_$_NEPolicyResult
__ NetworkExtension: _OBJC_CLASS_$_NEPolicySession
__ NetworkServiceProxy: _OBJC_CLASS_$_PrivacyProxyClient
__ NetworkStatistics: _NStatManagerCreate
__ NetworkStatistics: _NStatManagerCreateInterfaceSource
__ NetworkStatistics: _NStatManagerCreateRouteSource
__ NetworkStatistics: _NStatManagerDestroy
__ NetworkStatistics: _NStatManagerQueryAllSourcesUpdate
__ NetworkStatistics: _NStatSourceCopyProperties
__ NetworkStatistics: _NStatSourceCurrentSnapshot
__ NetworkStatistics: _NStatSourceQueryCounts
__ NetworkStatistics: _NStatSourceQueryDescription
__ NetworkStatistics: _NStatSourceRemove
__ NetworkStatistics: _NStatSourceSetEventsBlock
__ NetworkStatistics: _OBJC_CLASS_$_NWStatisticsManager
__ NetworkStatistics: _kNStatSrcKeyInterfaceDlCurrentBandwidth
__ NetworkStatistics: _kNStatSrcKeyInterfaceDlMaxBandwidth
__ NetworkStatistics: _kNStatSrcKeyInterfaceUlCurrentBandwidth
__ NetworkStatistics: _kNStatSrcKeyInterfaceUlMaxBandwidth
__ NetworkStatistics: _kNStatSrcKeyRxBytes
__ NetworkStatistics: _kNStatSrcKeyRxPackets
__ NetworkStatistics: _kNStatSrcKeyTxBytes
__ NetworkStatistics: _kNStatSrcKeyTxPackets
__ NetworkStatistics: _kNStatSrcTCPStateListen
__ PowerLog: _PLLogRegisteredEvent
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterPlaceMark
__ ProtocolBuffer: _PBDataWriterRecallMark
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedInt32Add
__ ProtocolBuffer: _PBRepeatedInt32Clear
__ ProtocolBuffer: _PBRepeatedInt32Copy
__ ProtocolBuffer: _PBRepeatedInt32Hash
__ ProtocolBuffer: _PBRepeatedInt32IsEqual
__ ProtocolBuffer: _PBRepeatedInt32Set
__ ProtocolBuffer: _PBRepeatedUInt32Add
__ ProtocolBuffer: _PBRepeatedUInt32Clear
__ ProtocolBuffer: _PBRepeatedUInt32Copy
__ ProtocolBuffer: _PBRepeatedUInt32Hash
__ ProtocolBuffer: _PBRepeatedUInt32IsEqual
__ ProtocolBuffer: _PBRepeatedUInt32NSArray
__ ProtocolBuffer: _PBRepeatedUInt32Set
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentifier
__ RunningBoardServices: _OBJC_CLASS_$_RBSResourceViolationHandler
__ Security: _SecTrustReportNetworkingAnalytics
__ SymptomAnalytics: _OBJC_CLASS_$_AnalyticsWorkspace
__ SymptomAnalytics: _OBJC_CLASS_$_AppAnalytics
__ SymptomAnalytics: _OBJC_CLASS_$_DiagnosticCaseUsageAnalytics
__ SymptomAnalytics: _OBJC_CLASS_$_FetchRequestPropertiesDescriptor
__ SymptomAnalytics: _OBJC_CLASS_$_LiveUsage
__ SymptomAnalytics: _OBJC_CLASS_$_NWActivityFragment
__ SymptomAnalytics: _OBJC_CLASS_$_NWActivityMetricData
__ SymptomAnalytics: _OBJC_CLASS_$_NetworkAttachmentAnalytics
__ SymptomAnalytics: _OBJC_CLASS_$_ObjectAnalytics
__ SymptomAnalytics: _OBJC_CLASS_$_Process
__ SymptomAnalytics: _OBJC_CLASS_$_ProcessAnalytics
__ SymptomAnalytics: _OBJC_CLASS_$_SFApp
__ SymptomAnalytics: _OBJC_CLASS_$_SFAppCalendarUsage
__ SymptomAnalytics: _OBJC_CLASS_$_SFAppDomainUsage
__ SymptomAnalytics: _OBJC_CLASS_$_SFAppEndpoint
__ SymptomAnalytics: _OBJC_CLASS_$_SFAppExperience
__ SymptomAnalytics: _OBJC_CLASS_$_SFAppRun
__ SymptomAnalytics: _OBJC_CLASS_$_SFAppTypicalUsage
__ SymptomAnalytics: _OBJC_CLASS_$_SFFlow
__ SymptomAnalytics: _OBJC_CLASS_$_SFLiveFlowPerf
__ SymptomAnalytics: _OBJC_CLASS_$_SFLiveRoutePerf
__ SymptomAnalytics: _OBJC_CLASS_$_SFNetworkAttachment
__ SymptomAnalytics: _OBJC_CLASS_$_SFProvisioningData
__ SymptomAnalytics: _OBJC_CLASS_$_SFTrackerDomain
__ SymptomAnalytics: _OBJC_CLASS_$_UsageAnalytics
__ SymptomAnalytics: _countOfKeyDescriptor
__ SymptomAnalytics: _kProcessKeyTypeBundleName
__ SymptomAnalytics: _kProcessKeyTypeProcName
__ SymptomAnalytics: _kSymptomAnalyticsFrameworkModelName
__ SymptomDiagnosticReporter: _OBJC_CLASS_$_SDRDiagnosticReporter
__ SymptomDiagnosticReporter: _kExpertSystemStatusKeyCLIPSModules
__ SymptomDiagnosticReporter: _kExpertSystemStatusKeyFailedToLoadDefaultRules
__ SymptomDiagnosticReporter: _kExpertSystemStatusKeyLoadedCLIPSRulesAndFacts
__ SymptomDiagnosticReporter: _kExpertSystemStatusKeyTriggeringSymptom
__ SymptomDiagnosticReporter: _kSymptomDiagnosticActionProbeDuration
__ SymptomDiagnosticReporter: _kSymptomDiagnosticActionProbePacketCapture
__ SymptomDiagnosticReporter: _kSymptomDiagnosticDomainEnergy
__ SymptomDiagnosticReporter: _kSymptomDiagnosticDomainNetworking
__ SymptomDiagnosticReporter: _kSymptomDiagnosticDomainResourceNotify
__ SymptomDiagnosticReporter: _kSymptomDiagnosticEventTypeExpertSystem
__ SymptomDiagnosticReporter: _kSymptomDiagnosticEventTypeMessage
__ SymptomDiagnosticReporter: _kSymptomDiagnosticEventTypeProbe
__ SymptomDiagnosticReporter: _kSymptomDiagnosticEventTypeSymptom
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyEventCount
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyEventDuration
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyEventEndpoint
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyEventInterface
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyEventInterfaceType
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyEventName
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyEventProcessName
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyEventStatus
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyEventValue
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyPayloadDEParameters
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyPayloadPath
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyTimestamp
__ SymptomDiagnosticReporter: _kSymptomDiagnosticKeyType
__ SymptomDiagnosticReporter: _kSymptomDiagnosticPayloadTypeFile
__ SymptomDiagnosticReporter: _kSymptomDiagnosticReplyGroupID
__ SymptomDiagnosticReporter: _kSymptomDiagnosticReplyReason
__ SymptomDiagnosticReporter: _kSymptomDiagnosticReplySessionID
__ SymptomDiagnosticReporter: _kSymptomDiagnosticReplySuccess
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureBundleIdentifier
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureDetectedProcess
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureDomain
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureInterfaceType
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureSubType
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureSubTypeContext
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureThresholdValues
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureType
__ SymptomDiagnosticReporter: _kSymptomDiagnosticTypeEnergy
__ SymptomDiagnosticReporter: _kSymptomDiagnosticTypeFunctional
__ SymptomDiagnosticReporter: _kSymptomDiagnosticTypeOperational
__ SymptomDiagnosticReporter: _kSymptomDiagnosticTypePerformance
__ SymptomNetworkUsage: _OBJC_CLASS_$_NWUsageConnSnapshot
__ SymptomNetworkUsage: _OBJC_CLASS_$_NWUsageManager
__ SymptomNetworkUsage: _OBJC_CLASS_$_NWUsageMonitor
__ SymptomNetworkUsage: _OBJC_CLASS_$_NWUsageProtocolSnapshot
__ SymptomNetworkUsage: _OBJC_CLASS_$_NWUsageQUICSnapshot
__ SymptomNetworkUsage: _OBJC_CLASS_$_NWUsageTCPSnapshot
__ SymptomNetworkUsage: _OBJC_CLASS_$_NWUsageTargetSelector
__ SymptomNetworkUsage: _OBJC_CLASS_$_NWUsageUDPSnapshot
__ SymptomNetworkUsage: _kNWSelectAllFlowsAndSubFlows
__ SymptomNetworkUsage: _kNWSelectConnEvents
__ SymptomNetworkUsage: _kNWSelectDescription
__ SymptomNetworkUsage: _kNWSelectFirstInstance
__ SymptomNetworkUsage: _kNWSelectFlowEvents
__ SymptomNetworkUsage: _kNWSelectHasCellTrafficDelta
__ SymptomNetworkUsage: _kNWSelectHasTraffic
__ SymptomNetworkUsage: _kNWSelectHasTrafficDelta
__ SymptomNetworkUsage: _kNWSelectInterfaceCellular
__ SymptomNetworkUsage: _kNWSelectInterfaceCellularViaFallback
__ SymptomNetworkUsage: _kNWSelectInterfaceCompanionLink
__ SymptomNetworkUsage: _kNWSelectInterfaceFlowswitchValueError
__ SymptomNetworkUsage: _kNWSelectInterfaceRouteValueError
__ SymptomNetworkUsage: _kNWSelectInterfaceWiFi
__ SymptomNetworkUsage: _kNWSelectInterfaceWired
__ SymptomNetworkUsage: _kNWSelectSkipNoChangeConnOnClose
__ SymptomNetworkUsage: _kNWSelectSkipNoChangeConnOnPoll
__ SymptomNetworkUsage: _kNWSelectStartupConnHasNetAccess
__ SymptomNetworkUsage: _kNWSelectUserlandConnections
__ SymptomNetworkUsage: _kNWUsageOptimizeCPU
__ SymptomNetworkUsage: _kNWUsageOptimizeLatency
__ SymptomNetworkUsage: _kNWUsageParameterDomainInfo
__ SymptomNetworkUsage: _kNWUsageParameterHandlesRNF
__ SymptomNetworkUsage: _kNWUsageParameterMappingAppStateMonitoring
__ SymptomNetworkUsage: _kNWUsageParameterMappingAvoidCoalitions
__ SymptomNetworkUsage: _kNWUsageParameterMappingFlavorSymptoms
__ SymptomNetworkUsage: _kNWUsageParameterMappingUseNEHelperForSet
__ SymptomNetworkUsage: _kNWUsageParameterMappingUseProcessPrefixForSet
__ SymptomNetworkUsage: _kNWUsageParameterTargetOpimization
__ SymptomNetworkUsage: _kNWUsageParameterTargetSelector
__ SymptomNetworkUsage: _kNWUsageParameterThresholds
__ SymptomNetworkUsage: _kNWUsageParameterTraceFD
__ SymptomReporter: _symptom_create
__ SymptomReporter: _symptom_framework_init
__ SymptomReporter: _symptom_new
__ SymptomReporter: _symptom_send
__ SymptomReporter: _symptom_send_immediate
__ SymptomReporter: _symptom_set_additional_qualifier
__ SymptomReporter: _symptom_set_qualifier
__ SystemConfiguration: _SCDynamicStoreAddWatchedKey
__ SystemConfiguration: _SCDynamicStoreCopyValue
__ SystemConfiguration: _SCDynamicStoreCreate
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkGlobalEntity
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkInterfaceEntity
__ SystemConfiguration: _SCDynamicStoreSetDispatchQueue
__ SystemConfiguration: _SCDynamicStoreSetNotificationKeys
__ SystemConfiguration: _SCError
__ SystemConfiguration: _SCErrorString
__ SystemConfiguration: _SCNetworkReachabilityCreateWithOptions
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCPreferencesCreate
__ SystemConfiguration: _SCPreferencesGetValue
__ SystemConfiguration: _SCPreferencesSetCallback
__ SystemConfiguration: _SCPreferencesSetDispatchQueue
__ SystemConfiguration: _SCPreferencesSynchronize
__ SystemConfiguration: _kSCDynamicStoreDomainState
__ SystemConfiguration: _kSCEntNetDNS
__ SystemConfiguration: _kSCEntNetLinkQuality
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ WiFiAnalytics: _OBJC_CLASS_$_WAClient
__ WiFiAnalytics: _OBJC_CLASS_$_WANWActivityStatistics
__ WirelessDiagnostics: _OBJC_CLASS_$_AWDObserver
__ WirelessDiagnostics: _OBJC_CLASS_$_AWDServerConnection
__ WirelessDiagnostics: _kAWDObserverEventKey
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logger_create
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logger_destroy
__ libCTGreenTeaLogger.dylib: _getCTGreenTeaOsLogHandle
__ libSystem.B.dylib: _CCCryptorCreate
__ libSystem.B.dylib: _CCCryptorFinal
__ libSystem.B.dylib: _CCCryptorGetOutputLength
__ libSystem.B.dylib: _CCCryptorRelease
__ libSystem.B.dylib: _CCCryptorReset
__ libSystem.B.dylib: _CCCryptorUpdate
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _DNSServiceCreateConnection
__ libSystem.B.dylib: _DNSServiceGetAddrInfo
__ libSystem.B.dylib: _DNSServiceRefDeallocate
__ libSystem.B.dylib: _DNSServiceResolve
__ libSystem.B.dylib: _DNSServiceSetDispatchQueue
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_7_DAYS
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_COALITION_INFO_KEY_BUNDLE_IDENTIFIER
__ libSystem.B.dylib: _XPC_COALITION_INFO_KEY_NAME
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stdinp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: ___tolower
__ libSystem.B.dylib: ___toupper
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_mach_recv
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __dispatch_source_type_read
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_assumes_log
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_error_key_description
__ libSystem.B.dylib: __xpc_error_termination_imminent
__ libSystem.B.dylib: __xpc_type_array
__ libSystem.B.dylib: __xpc_type_bool
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_data
__ libSystem.B.dylib: __xpc_type_date
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_double
__ libSystem.B.dylib: __xpc_type_endpoint
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: __xpc_type_fd
__ libSystem.B.dylib: __xpc_type_int64
__ libSystem.B.dylib: __xpc_type_null
__ libSystem.B.dylib: __xpc_type_shmem
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: __xpc_type_uint64
__ libSystem.B.dylib: __xpc_type_uuid
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _asprintf
__ libSystem.B.dylib: _atexit_b
__ libSystem.B.dylib: _atof
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _audit_session_port
__ libSystem.B.dylib: _bootstrap_check_in
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _clearerr
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _container_system_group_path_for_identifier
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_mig_server
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlclose
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dns_configuration_copy
__ libSystem.B.dylib: _dns_configuration_free
__ libSystem.B.dylib: _erand48
__ libSystem.B.dylib: _ether_aton
__ libSystem.B.dylib: _ether_ntoa
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fputc
__ libSystem.B.dylib: _fputs
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeifaddrs
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _ftell
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getc
__ libSystem.B.dylib: _getcwd
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _getifaddrs
__ libSystem.B.dylib: _getnameinfo
__ libSystem.B.dylib: _getsectiondata
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _gmtime
__ libSystem.B.dylib: _if_nametoindex
__ libSystem.B.dylib: _inet_aton
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _ioctl
__ libSystem.B.dylib: _kOSThermalNotificationPressureLevelName
__ libSystem.B.dylib: _localtime
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _longjmp
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_approximate_time
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _mach_error
__ libSystem.B.dylib: _mach_error_string
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_create_zone
__ libSystem.B.dylib: _malloc_destroy_zone
__ libSystem.B.dylib: _malloc_set_zone_name
__ libSystem.B.dylib: _malloc_zone_free
__ libSystem.B.dylib: _malloc_zone_from_ptr
__ libSystem.B.dylib: _malloc_zone_malloc
__ libSystem.B.dylib: _malloc_zone_statistics
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _modf
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_log_with_args
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_state_remove_handler
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _proc_listallpids
__ libSystem.B.dylib: _proc_pidinfo
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _pthread_attr_destroy
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_attr_setdetachstate
__ libSystem.B.dylib: _pthread_attr_setschedparam
__ libSystem.B.dylib: _pthread_attr_setschedpolicy
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_getschedparam
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _putc
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _recv
__ libSystem.B.dylib: _recvmsg
__ libSystem.B.dylib: _regcomp
__ libSystem.B.dylib: _regexec
__ libSystem.B.dylib: _regfree
__ libSystem.B.dylib: _remove
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _sched_get_priority_max
__ libSystem.B.dylib: _sched_get_priority_min
__ libSystem.B.dylib: _send
__ libSystem.B.dylib: _sendmsg
__ libSystem.B.dylib: _setlocale
__ libSystem.B.dylib: _setsockopt
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _srand
__ libSystem.B.dylib: _stpncpy
__ libSystem.B.dylib: _strcat
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strcpy
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror_r
__ libSystem.B.dylib: _strftime
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncasecmp
__ libSystem.B.dylib: _strncat
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _strndup
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _strtod
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _strtoll
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _timegm
__ libSystem.B.dylib: _ungetc
__ libSystem.B.dylib: _uuid_clear
__ libSystem.B.dylib: _uuid_compare
__ libSystem.B.dylib: _uuid_is_null
__ libSystem.B.dylib: _uuid_unparse_upper
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libSystem.B.dylib: _vsprintf
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_array_append_value
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_coalition_copy_info
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_copy_entitlement_value
__ libSystem.B.dylib: _xpc_connection_create
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_asid
__ libSystem.B.dylib: _xpc_connection_get_audit_token
__ libSystem.B.dylib: _xpc_connection_get_egid
__ libSystem.B.dylib: _xpc_connection_get_euid
__ libSystem.B.dylib: _xpc_connection_get_pid
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_copy_description
__ libSystem.B.dylib: _xpc_create_from_plist_descriptor
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_data
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_get_uuid
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_connection
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_double_get_value
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_hash
__ libSystem.B.dylib: _xpc_int64_get_value
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: _xpc_retain
__ libSystem.B.dylib: _xpc_string_create
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libbsm.0.dylib: _audit_token_to_euid
__ libbsm.0.dylib: _audit_token_to_pid
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___gxx_personality_v0
__ libnetworkextension.dylib: _NEHelperTrackerAppInfoSetIsBrowser
__ libnetworkextension.dylib: _NEHelperTrackerContextGetDomainOwner
__ libnetworkextension.dylib: _NEHelperTrackerFreeAppInfo
__ libnetworkextension.dylib: _NEHelperTrackerGetAppInfo
__ libnetworkextension.dylib: _NEHelperTrackerGetDisposition
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_copyPropertyList
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x11
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _property_getName
__ libobjc.A.dylib: _sel_getUid
__ libspindump.dylib: _SPReportCPUUsageResource
__ libspindump.dylib: _SPReportCPUWakeupsResource
__ libspindump.dylib: _SPReportDiskWritesResource
__ libspindump.dylib: _SPReportFileDescriptorExhaustion_FatalPort
__ libspindump.dylib: _SPReportPortExhaustion_FatalPort
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
AWDSymptomsCellularSDMTimeStatistics : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasTotalTimeSeconds
 @property  unsigned long totalTimeSeconds
 @property  BOOL hasTotalActiveTimeSeconds
 @property  unsigned long totalActiveTimeSeconds
 @property  BOOL hasTotalQuiesceTimeSeconds
 @property  unsigned long totalQuiesceTimeSeconds
 @property  BOOL hasTotalInferredSleepTimeSeconds
 @property  unsigned long totalInferredSleepTimeSeconds

  // instance methods
  -[AWDSymptomsCellularSDMTimeStatistics setTimestamp:]
  -[AWDSymptomsCellularSDMTimeStatistics copyTo:]
  -[AWDSymptomsCellularSDMTimeStatistics mergeFrom:]
  -[AWDSymptomsCellularSDMTimeStatistics setHasTimestamp:]
  -[AWDSymptomsCellularSDMTimeStatistics dictionaryRepresentation]
  -[AWDSymptomsCellularSDMTimeStatistics hasTimestamp]
  -[AWDSymptomsCellularSDMTimeStatistics copyWithZone:]
  -[AWDSymptomsCellularSDMTimeStatistics timestamp]
  -[AWDSymptomsCellularSDMTimeStatistics readFrom:]
  -[AWDSymptomsCellularSDMTimeStatistics writeTo:]
  -[AWDSymptomsCellularSDMTimeStatistics isEqual:]
  -[AWDSymptomsCellularSDMTimeStatistics setTotalTimeSeconds:]
  -[AWDSymptomsCellularSDMTimeStatistics setHasTotalTimeSeconds:]
  -[AWDSymptomsCellularSDMTimeStatistics hasTotalTimeSeconds]
  -[AWDSymptomsCellularSDMTimeStatistics setTotalActiveTimeSeconds:]
  -[AWDSymptomsCellularSDMTimeStatistics setHasTotalActiveTimeSeconds:]
  -[AWDSymptomsCellularSDMTimeStatistics hasTotalActiveTimeSeconds]
  -[AWDSymptomsCellularSDMTimeStatistics setTotalQuiesceTimeSeconds:]
  -[AWDSymptomsCellularSDMTimeStatistics setHasTotalQuiesceTimeSeconds:]
  -[AWDSymptomsCellularSDMTimeStatistics hasTotalQuiesceTimeSeconds]
  -[AWDSymptomsCellularSDMTimeStatistics setTotalInferredSleepTimeSeconds:]
  -[AWDSymptomsCellularSDMTimeStatistics setHasTotalInferredSleepTimeSeconds:]
  -[AWDSymptomsCellularSDMTimeStatistics hasTotalInferredSleepTimeSeconds]
  -[AWDSymptomsCellularSDMTimeStatistics totalTimeSeconds]
  -[AWDSymptomsCellularSDMTimeStatistics totalActiveTimeSeconds]
  -[AWDSymptomsCellularSDMTimeStatistics totalQuiesceTimeSeconds]
  -[AWDSymptomsCellularSDMTimeStatistics totalInferredSleepTimeSeconds]


AWDSymptomsCellularSDMPollingStatistics : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDurationSeconds
 @property  unsigned long durationSeconds
 @property  BOOL hasPollIntervalVersion
 @property  unsigned int pollIntervalVersion
 @property  unsigned long pollingIntervalCountsCount
 @property  ^I pollingIntervalCounts

  // instance methods
  -[AWDSymptomsCellularSDMPollingStatistics setTimestamp:]
  -[AWDSymptomsCellularSDMPollingStatistics copyTo:]
  -[AWDSymptomsCellularSDMPollingStatistics durationSeconds]
  -[AWDSymptomsCellularSDMPollingStatistics dealloc]
  -[AWDSymptomsCellularSDMPollingStatistics mergeFrom:]
  -[AWDSymptomsCellularSDMPollingStatistics setHasTimestamp:]
  -[AWDSymptomsCellularSDMPollingStatistics dictionaryRepresentation]
  -[AWDSymptomsCellularSDMPollingStatistics hasTimestamp]
  -[AWDSymptomsCellularSDMPollingStatistics copyWithZone:]
  -[AWDSymptomsCellularSDMPollingStatistics timestamp]
  -[AWDSymptomsCellularSDMPollingStatistics readFrom:]
  -[AWDSymptomsCellularSDMPollingStatistics writeTo:]
  -[AWDSymptomsCellularSDMPollingStatistics isEqual:]
  -[AWDSymptomsCellularSDMPollingStatistics setDurationSeconds:]
  -[AWDSymptomsCellularSDMPollingStatistics setHasDurationSeconds:]
  -[AWDSymptomsCellularSDMPollingStatistics hasDurationSeconds]
  -[AWDSymptomsCellularSDMPollingStatistics setPollIntervalVersion:]
  -[AWDSymptomsCellularSDMPollingStatistics setHasPollIntervalVersion:]
  -[AWDSymptomsCellularSDMPollingStatistics hasPollIntervalVersion]
  -[AWDSymptomsCellularSDMPollingStatistics pollingIntervalCountsCount]
  -[AWDSymptomsCellularSDMPollingStatistics pollingIntervalCounts]
  -[AWDSymptomsCellularSDMPollingStatistics clearPollingIntervalCounts]
  -[AWDSymptomsCellularSDMPollingStatistics addPollingIntervalCount:]
  -[AWDSymptomsCellularSDMPollingStatistics pollingIntervalCountAtIndex:]
  -[AWDSymptomsCellularSDMPollingStatistics setPollingIntervalCounts:count:]
  -[AWDSymptomsCellularSDMPollingStatistics pollIntervalVersion]


AWDSymptomsNetworkUsageAttributionMetric : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNetworkType
 @property  int networkType
 @property  BOOL hasUsageAttributedTo
 @property  int usageAttributedTo
 @property  BOOL hasUsageBytes
 @property  unsigned long usageBytes
 @property  BOOL hasFlowsImpactedCount
 @property  unsigned long flowsImpactedCount

  // instance methods
  -[AWDSymptomsNetworkUsageAttributionMetric setNetworkType:]
  -[AWDSymptomsNetworkUsageAttributionMetric networkType]
  -[AWDSymptomsNetworkUsageAttributionMetric setTimestamp:]
  -[AWDSymptomsNetworkUsageAttributionMetric copyTo:]
  -[AWDSymptomsNetworkUsageAttributionMetric mergeFrom:]
  -[AWDSymptomsNetworkUsageAttributionMetric setHasTimestamp:]
  -[AWDSymptomsNetworkUsageAttributionMetric dictionaryRepresentation]
  -[AWDSymptomsNetworkUsageAttributionMetric hasTimestamp]
  -[AWDSymptomsNetworkUsageAttributionMetric copyWithZone:]
  -[AWDSymptomsNetworkUsageAttributionMetric timestamp]
  -[AWDSymptomsNetworkUsageAttributionMetric readFrom:]
  -[AWDSymptomsNetworkUsageAttributionMetric writeTo:]
  -[AWDSymptomsNetworkUsageAttributionMetric isEqual:]
  -[AWDSymptomsNetworkUsageAttributionMetric setHasNetworkType:]
  -[AWDSymptomsNetworkUsageAttributionMetric hasNetworkType]
  -[AWDSymptomsNetworkUsageAttributionMetric networkTypeAsString:]
  -[AWDSymptomsNetworkUsageAttributionMetric StringAsNetworkType:]
  -[AWDSymptomsNetworkUsageAttributionMetric usageAttributedTo]
  -[AWDSymptomsNetworkUsageAttributionMetric setUsageAttributedTo:]
  -[AWDSymptomsNetworkUsageAttributionMetric setHasUsageAttributedTo:]
  -[AWDSymptomsNetworkUsageAttributionMetric hasUsageAttributedTo]
  -[AWDSymptomsNetworkUsageAttributionMetric usageAttributedToAsString:]
  -[AWDSymptomsNetworkUsageAttributionMetric StringAsUsageAttributedTo:]
  -[AWDSymptomsNetworkUsageAttributionMetric setUsageBytes:]
  -[AWDSymptomsNetworkUsageAttributionMetric setHasUsageBytes:]
  -[AWDSymptomsNetworkUsageAttributionMetric hasUsageBytes]
  -[AWDSymptomsNetworkUsageAttributionMetric setFlowsImpactedCount:]
  -[AWDSymptomsNetworkUsageAttributionMetric setHasFlowsImpactedCount:]
  -[AWDSymptomsNetworkUsageAttributionMetric hasFlowsImpactedCount]
  -[AWDSymptomsNetworkUsageAttributionMetric usageBytes]
  -[AWDSymptomsNetworkUsageAttributionMetric flowsImpactedCount]


AWDSymptomsNetworkLoadedLinkQualityMetric : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNetworkType
 @property  int networkType
 @property  BOOL hasNetworkAttachmentLabel
 @property  NSString *networkAttachmentLabel
 @property  BOOL hasLoadedLQM
 @property  int loadedLQM
 @property  BOOL hasLQM
 @property  int lQM
 @property  BOOL hasRadioAccessTechnology
 @property  NSString *radioAccessTechnology
 @property  BOOL hasIsNetworkReliable
 @property  BOOL isNetworkReliable
 @property  BOOL hasDataStalls
 @property  unsigned int dataStalls
 @property  BOOL hasLastReportedRSSI
 @property  int lastReportedRSSI
 @property  BOOL hasIsLowInternetUL
 @property  BOOL isLowInternetUL
 @property  BOOL hasIsLowInternetDL
 @property  BOOL isLowInternetDL

  // instance methods
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setNetworkType:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric radioAccessTechnology]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric networkType]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setTimestamp:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric copyTo:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric .cxx_destruct]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric mergeFrom:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setHasTimestamp:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric dictionaryRepresentation]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric hasTimestamp]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric copyWithZone:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric timestamp]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric readFrom:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric writeTo:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric isEqual:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setHasNetworkType:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric hasNetworkType]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric networkTypeAsString:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric StringAsNetworkType:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric dataStalls]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setDataStalls:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setHasDataStalls:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric hasDataStalls]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setRadioAccessTechnology:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric isLowInternetDL]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric isLowInternetUL]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric hasNetworkAttachmentLabel]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setLoadedLQM:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setHasLoadedLQM:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric hasLoadedLQM]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setLQM:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setHasLQM:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric hasLQM]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric hasRadioAccessTechnology]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setIsNetworkReliable:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setHasIsNetworkReliable:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric hasIsNetworkReliable]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setLastReportedRSSI:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setHasLastReportedRSSI:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric hasLastReportedRSSI]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setIsLowInternetUL:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setHasIsLowInternetUL:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric hasIsLowInternetUL]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setIsLowInternetDL:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setHasIsLowInternetDL:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric hasIsLowInternetDL]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric networkAttachmentLabel]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric setNetworkAttachmentLabel:]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric loadedLQM]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric lQM]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric isNetworkReliable]
  -[AWDSymptomsNetworkLoadedLinkQualityMetric lastReportedRSSI]


AWDSymptomsNetworkLowInternetModeRecord : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasLimSignature
 @property  NSData *limSignature
 @property  BOOL hasLimDLMaxBWBps
 @property  unsigned long limDLMaxBWBps
 @property  BOOL hasLimULMaxBWBps
 @property  unsigned long limULMaxBWBps
 @property  BOOL hasLimPacketLossRatePercent
 @property  unsigned long limPacketLossRatePercent
 @property  BOOL hasLimPacketOOORatePercent
 @property  unsigned long limPacketOOORatePercent
 @property  BOOL hasLimRTTVarMilliseconds
 @property  unsigned long limRTTVarMilliseconds
 @property  BOOL hasLimRTTMinMilliseconds
 @property  unsigned long limRTTMinMilliseconds
 @property  BOOL hasLimRTTAvgMilliseconds
 @property  unsigned long limRTTAvgMilliseconds
 @property  BOOL hasLimConnTimeoutRatePercent
 @property  unsigned long limConnTimeoutRatePercent
 @property  BOOL hasLimDLDetected
 @property  unsigned int limDLDetected
 @property  BOOL hasLimULDetected
 @property  unsigned int limULDetected
 @property  BOOL hasLimInterfaceType
 @property  unsigned int limInterfaceType

  // instance methods
  -[AWDSymptomsNetworkLowInternetModeRecord setHasLimPacketOOORatePercent:]
  -[AWDSymptomsNetworkLowInternetModeRecord hasLimULDetected]
  -[AWDSymptomsNetworkLowInternetModeRecord setTimestamp:]
  -[AWDSymptomsNetworkLowInternetModeRecord copyTo:]
  -[AWDSymptomsNetworkLowInternetModeRecord limPacketLossRatePercent]
  -[AWDSymptomsNetworkLowInternetModeRecord limPacketOOORatePercent]
  -[AWDSymptomsNetworkLowInternetModeRecord setHasLimDLMaxBWBps:]
  -[AWDSymptomsNetworkLowInternetModeRecord hasLimRTTAvgMilliseconds]
  -[AWDSymptomsNetworkLowInternetModeRecord setLimRTTMinMilliseconds:]
  -[AWDSymptomsNetworkLowInternetModeRecord setLimPacketLossRatePercent:]
  -[AWDSymptomsNetworkLowInternetModeRecord limDLMaxBWBps]
  -[AWDSymptomsNetworkLowInternetModeRecord limRTTMinMilliseconds]
  -[AWDSymptomsNetworkLowInternetModeRecord setLimULDetected:]
  -[AWDSymptomsNetworkLowInternetModeRecord hasLimDLDetected]
  -[AWDSymptomsNetworkLowInternetModeRecord .cxx_destruct]
  -[AWDSymptomsNetworkLowInternetModeRecord hasLimRTTMinMilliseconds]
  -[AWDSymptomsNetworkLowInternetModeRecord setHasLimDLDetected:]
  -[AWDSymptomsNetworkLowInternetModeRecord setLimInterfaceType:]
  -[AWDSymptomsNetworkLowInternetModeRecord limULMaxBWBps]
  -[AWDSymptomsNetworkLowInternetModeRecord limConnTimeoutRatePercent]
  -[AWDSymptomsNetworkLowInternetModeRecord hasLimPacketLossRatePercent]
  -[AWDSymptomsNetworkLowInternetModeRecord limRTTAvgMilliseconds]
  -[AWDSymptomsNetworkLowInternetModeRecord mergeFrom:]
  -[AWDSymptomsNetworkLowInternetModeRecord hasLimPacketOOORatePercent]
  -[AWDSymptomsNetworkLowInternetModeRecord setHasTimestamp:]
  -[AWDSymptomsNetworkLowInternetModeRecord setLimDLMaxBWBps:]
  -[AWDSymptomsNetworkLowInternetModeRecord setLimConnTimeoutRatePercent:]
  -[AWDSymptomsNetworkLowInternetModeRecord limSignature]
  -[AWDSymptomsNetworkLowInternetModeRecord setHasLimULMaxBWBps:]
  -[AWDSymptomsNetworkLowInternetModeRecord hasLimConnTimeoutRatePercent]
  -[AWDSymptomsNetworkLowInternetModeRecord setLimRTTAvgMilliseconds:]
  -[AWDSymptomsNetworkLowInternetModeRecord hasLimInterfaceType]
  -[AWDSymptomsNetworkLowInternetModeRecord setHasLimPacketLossRatePercent:]
  -[AWDSymptomsNetworkLowInternetModeRecord hasLimULMaxBWBps]
  -[AWDSymptomsNetworkLowInternetModeRecord dictionaryRepresentation]
  -[AWDSymptomsNetworkLowInternetModeRecord setLimSignature:]
  -[AWDSymptomsNetworkLowInternetModeRecord hasTimestamp]
  -[AWDSymptomsNetworkLowInternetModeRecord copyWithZone:]
  -[AWDSymptomsNetworkLowInternetModeRecord setHasLimRTTMinMilliseconds:]
  -[AWDSymptomsNetworkLowInternetModeRecord setHasLimInterfaceType:]
  -[AWDSymptomsNetworkLowInternetModeRecord setHasLimRTTVarMilliseconds:]
  -[AWDSymptomsNetworkLowInternetModeRecord setLimRTTVarMilliseconds:]
  -[AWDSymptomsNetworkLowInternetModeRecord limULDetected]
  -[AWDSymptomsNetworkLowInternetModeRecord hasLimDLMaxBWBps]
  -[AWDSymptomsNetworkLowInternetModeRecord timestamp]
  -[AWDSymptomsNetworkLowInternetModeRecord readFrom:]
  -[AWDSymptomsNetworkLowInternetModeRecord hasLimRTTVarMilliseconds]
  -[AWDSymptomsNetworkLowInternetModeRecord setHasLimRTTAvgMilliseconds:]
  -[AWDSymptomsNetworkLowInternetModeRecord limInterfaceType]
  -[AWDSymptomsNetworkLowInternetModeRecord setLimPacketOOORatePercent:]
  -[AWDSymptomsNetworkLowInternetModeRecord setHasLimULDetected:]
  -[AWDSymptomsNetworkLowInternetModeRecord setLimDLDetected:]
  -[AWDSymptomsNetworkLowInternetModeRecord writeTo:]
  -[AWDSymptomsNetworkLowInternetModeRecord hasLimSignature]
  -[AWDSymptomsNetworkLowInternetModeRecord setLimULMaxBWBps:]
  -[AWDSymptomsNetworkLowInternetModeRecord isEqual:]
  -[AWDSymptomsNetworkLowInternetModeRecord limRTTVarMilliseconds]
  -[AWDSymptomsNetworkLowInternetModeRecord setHasLimConnTimeoutRatePercent:]
  -[AWDSymptomsNetworkLowInternetModeRecord limDLDetected]


SmartDataModeRelay : NSObject
 @property  unsigned char cellDataStatus

  // class methods
  +[SmartDataModeRelay sharedInstance]
  +[SmartDataModeRelay cellDataStatusToString:]

  // instance methods
  -[SmartDataModeRelay setCellDataStatus:]
  -[SmartDataModeRelay cellDataStatus]
  -[SmartDataModeRelay dealloc]
  -[SmartDataModeRelay .cxx_destruct]
  -[SmartDataModeRelay observeValueForKeyPath:ofObject:change:context:]
  -[SmartDataModeRelay _updateCellDataStatus]
  -[SmartDataModeRelay init]


AnalyticsEngineCore : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL isHelper

  // class methods
  +[AnalyticsEngineCore queue]

  // instance methods
  -[AnalyticsEngineCore getOption:]
  -[AnalyticsEngineCore unsubscribeToNOIs:connection:]
  -[AnalyticsEngineCore resetDataFor:nameKind:]
  -[AnalyticsEngineCore inquireNOIFor:orPredicate:requestedKeys:options:connection:reply:]
  -[AnalyticsEngineCore dealloc]
  -[AnalyticsEngineCore performQueryOnEntity:fetchRequestProperties:pred:sort:actions:service:connection:reply:]
  -[AnalyticsEngineCore .cxx_destruct]
  -[AnalyticsEngineCore performQueryPostProcessing:actions:processOutcome:]
  -[AnalyticsEngineCore setOption:]
  -[AnalyticsEngineCore subscribeToNOIsFor:orPredicate:options:connection:]
  -[AnalyticsEngineCore setIsHelper:]
  -[AnalyticsEngineCore clientTransactionsRelease]
  -[AnalyticsEngineCore performQueryOnEntityFromCache:pred:altpred:actions:found:]
  -[AnalyticsEngineCore isHelper]
  -[AnalyticsEngineCore clientEvent:isAddEvent:]
  -[AnalyticsEngineCore createSnapshotFor:pred:actions:reply:]
  -[AnalyticsEngineCore shutdown]
  -[AnalyticsEngineCore handlesEntity:]
  -[AnalyticsEngineCore queue]
  -[AnalyticsEngineCore initWithWorkspace:params:queue:]
  -[AnalyticsEngineCore performQueryOnEntity:pred:sort:actions:service:connection:reply:]
  -[AnalyticsEngineCore predicateFullyAllowsEvaluation:]
  -[AnalyticsEngineCore safePredFrom:forEntity:]
  -[AnalyticsEngineCore safeCompoundPredicateFrom:forEntity:]
  -[AnalyticsEngineCore safeComparisonPredFrom:forEntity:]
  -[AnalyticsEngineCore _saveAndUnloadAllState]
  -[AnalyticsEngineCore entityDictionaryFromObject:attributeKeys:relationshipKeys:includeObjectID:]
  -[AnalyticsEngineCore performQueryOnEntityCore:pred:sort:actions:service:reply:]
  -[AnalyticsEngineCore performQueryOnEntityCore:fetchRequestProperties:pred:sort:actions:service:reply:]
  -[AnalyticsEngineCore extractQueryStringFrom:isGeneric:]


AnalyticsLaunchpad : NSObject <AnalyticsWorkspaceHealthDelegate, ConfigurableObjectProtocol>
 @property  NSMutableDictionary *launchParams
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AnalyticsLaunchpad sharedInstance]
  +[AnalyticsLaunchpad integrityCheckBreadcrumbCount]
  +[AnalyticsLaunchpad clearDestroyPersistentStoreBreadcrumb]
  +[AnalyticsLaunchpad leaveBreadcrumbForInitialWorkspaceSave]
  +[AnalyticsLaunchpad launchHealthCheck:]
  +[AnalyticsLaunchpad foundDestroyPersistentStoreBreadcrumb]
  +[AnalyticsLaunchpad foundIntegrityCheckBreadcrumbAboveThreshold:]
  +[AnalyticsLaunchpad symptomEvaluatorDatabaseContainerPath]
  +[AnalyticsLaunchpad clearIntegrityCheckBreadcrumb]
  +[AnalyticsLaunchpad leaveBreadcrumbForIntegrityCheck]
  +[AnalyticsLaunchpad clearInitialWorkspaceSaveBreadcrumb]
  +[AnalyticsLaunchpad configureClass:]
  +[AnalyticsLaunchpad foundInitialWorkspaceSaveBreadcrumb]
  +[AnalyticsLaunchpad postLaunchIntervalMetricWithPreviousLaunchTime:]
  +[AnalyticsLaunchpad foundBreadcrumb:]
  +[AnalyticsLaunchpad appendLaunchTime]
  +[AnalyticsLaunchpad leaveBreadcrumbForDestroyPersistentStore]

  // instance methods
  -[AnalyticsLaunchpad launchSequence]
  -[AnalyticsLaunchpad _launchSequence:]
  -[AnalyticsLaunchpad integrityCheckStarted]
  -[AnalyticsLaunchpad configureInstance:]
  -[AnalyticsLaunchpad .cxx_destruct]
  -[AnalyticsLaunchpad integrityCheckCompleted:error:]
  -[AnalyticsLaunchpad launchParams]
  -[AnalyticsLaunchpad setLaunchParams:]
  -[AnalyticsLaunchpad destroyPersistentStoreStarted]
  -[AnalyticsLaunchpad deleteDatabaseCompleted:error:]
  -[AnalyticsLaunchpad init]
  -[AnalyticsLaunchpad destroyPersistentStoreCompleted:error:]


SFEntitlements : NSObject
 @property  BOOL symptomAnalyticsTrain
 @property  BOOL symptomAnalyticsSweep
 @property  BOOL symptomAnalyticsRefresh
 @property  BOOL symptomAnalyticsSetWatchpoint
 @property  BOOL symptomAnalyticsNetworkBitmap
 @property  BOOL symptomAnalyticsQuery
 @property  BOOL symptomAnalyticsReset
 @property  BOOL symptomAnalyticsConfigure
 @property  BOOL symptomAnalyticsSetSnapshot
 @property  BOOL symptomAnalyticsHealthCheck
 @property  BOOL symptomsNetworkOfInterest
 @property  BOOL symptomsNetDomainsAdmin
 @property  BOOL symptomsRNFTest
 @property  BOOL symptomsSymptomsToolTest
 @property  BOOL symptomsNDF
 @property  BOOL symptomsCOSMAdmin
 @property  BOOL symptomsNWActivityDatabase

  // class methods
  +[SFEntitlements stringForEntitlement:]
  +[SFEntitlements entitlementForString:]

  // instance methods
  -[SFEntitlements symptomAnalyticsSetSnapshot]
  -[SFEntitlements symptomAnalyticsHealthCheck]
  -[SFEntitlements symptomAnalyticsTrain]
  -[SFEntitlements setSymptomAnalyticsTrain:]
  -[SFEntitlements symptomsRNFTest]
  -[SFEntitlements setSymptomsNDF:]
  -[SFEntitlements symptomAnalyticsSetWatchpoint]
  -[SFEntitlements symptomAnalyticsConfigure]
  -[SFEntitlements symptomsNetDomainsAdmin]
  -[SFEntitlements setSymptomAnalyticsHealthCheck:]
  -[SFEntitlements setSymptomsNetworkOfInterest:]
  -[SFEntitlements symptomsNetworkOfInterest]
  -[SFEntitlements boolForEntitlement:]
  -[SFEntitlements symptomAnalyticsRefresh]
  -[SFEntitlements symptomAnalyticsReset]
  -[SFEntitlements setSymptomAnalyticsQuery:]
  -[SFEntitlements symptomsNWActivityDatabase]
  -[SFEntitlements symptomsSymptomsToolTest]
  -[SFEntitlements setSymptomAnalyticsSweep:]
  -[SFEntitlements setSymptomsNWActivityDatabase:]
  -[SFEntitlements setSymptomsSymptomsToolTest:]
  -[SFEntitlements setSymptomsCOSMAdmin:]
  -[SFEntitlements setSymptomAnalyticsSetSnapshot:]
  -[SFEntitlements symptomsNDF]
  -[SFEntitlements setSymptomAnalyticsConfigure:]
  -[SFEntitlements symptomAnalyticsQuery]
  -[SFEntitlements symptomAnalyticsNetworkBitmap]
  -[SFEntitlements symptomsCOSMAdmin]
  -[SFEntitlements setSymptomsNetDomainsAdmin:]
  -[SFEntitlements symptomAnalyticsSweep]
  -[SFEntitlements setSymptomAnalyticsNetworkBitmap:]
  -[SFEntitlements boolForEntitlementString:]
  -[SFEntitlements setSymptomsRNFTest:]
  -[SFEntitlements setSymptomAnalyticsReset:]
  -[SFEntitlements setSymptomAnalyticsSetWatchpoint:]
  -[SFEntitlements setSymptomAnalyticsRefresh:]


WiFiTriggerHandler : NSObject <ConfigurableObjectProtocol, SyndromeHandlerProtocol, ManagedEventInfoProtocol, DataStallHandlerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WiFiTriggerHandler sharedInstance]
  +[WiFiTriggerHandler initialize]
  +[WiFiTriggerHandler getNetScoreInfo]
  +[WiFiTriggerHandler configureClass:]
  +[WiFiTriggerHandler getHandlerByName:]
  +[WiFiTriggerHandler triggerAllowedByRSSI:receiptTimestamp:]
  +[WiFiTriggerHandler _triggerAllowedByRSSI:receiptTimestamp:]

  // instance methods
  -[WiFiTriggerHandler read:returnedValues:]
  -[WiFiTriggerHandler noteSymptom:]
  -[WiFiTriggerHandler _reset]
  -[WiFiTriggerHandler combineScoreARP:ND6:DNS:RTT:flows:]
  -[WiFiTriggerHandler dampeningStage:]
  -[WiFiTriggerHandler _getARPFailureCount]
  -[WiFiTriggerHandler configureInstance:]
  -[WiFiTriggerHandler _getARPInfo]
  -[WiFiTriggerHandler _getAWDInfo:]
  -[WiFiTriggerHandler .cxx_destruct]
  -[WiFiTriggerHandler checkUniqueStallCountOnInterfaceType:stallType:]
  -[WiFiTriggerHandler _getND6Info]
  -[WiFiTriggerHandler _getND6FailureCount]
  -[WiFiTriggerHandler _getNetScoreInfo]
  -[WiFiTriggerHandler refuteStage:]
  -[WiFiTriggerHandler generateInfoForId:context:uuid:completionBlock:]
  -[WiFiTriggerHandler _getDNSInfo]
  -[WiFiTriggerHandler _getDataStallsScore]
  -[WiFiTriggerHandler _impactFromFlags:andFlows:]
  -[WiFiTriggerHandler init]
  -[WiFiTriggerHandler insufficientRxTrafficDetectedFrom:atTime:To:]
  -[WiFiTriggerHandler didReceiveSyndrome:]


AnalyticsPortal : NSObject
  // class methods
  +[AnalyticsPortal sharedInstance]
  +[AnalyticsPortal clientTransactionsRelease]
  +[AnalyticsPortal shutdown]
  +[AnalyticsPortal setListeningPort:queue:]

  // instance methods
  -[AnalyticsPortal .cxx_destruct]
  -[AnalyticsPortal clientTransactionsRelease]
  -[AnalyticsPortal shutdown]
  -[AnalyticsPortal setListeningPort:queue:]


CertificateErrorHandler : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  unsigned int maxAge
 @property  unsigned int maxCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CertificateErrorHandler sharedInstance]
  +[CertificateErrorHandler configureClass:]

  // instance methods
  -[CertificateErrorHandler setMaxCount:]
  -[CertificateErrorHandler maxCount]
  -[CertificateErrorHandler read:returnedValues:]
  -[CertificateErrorHandler maxAge]
  -[CertificateErrorHandler setMaxAge:]
  -[CertificateErrorHandler restoreDefaults]
  -[CertificateErrorHandler noteSymptom:]
  -[CertificateErrorHandler setConfiguration:]
  -[CertificateErrorHandler evaluate:forThreshold:]
  -[CertificateErrorHandler configureInstance:]
  -[CertificateErrorHandler .cxx_destruct]
  -[CertificateErrorHandler _reset:]
  -[CertificateErrorHandler allowNotifyingOutrankAt:]
  -[CertificateErrorHandler storeMaintenance]
  -[CertificateErrorHandler allowNotifyingCaptivityAt:]
  -[CertificateErrorHandler init]


ConfigurationHandler : NSObject <ManagedEventInfoProtocol, SymptomAdditionalProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ConfigurationHandler read:returnedValues:]
  +[ConfigurationHandler sharedInstance]
  +[ConfigurationHandler initialize]
  +[ConfigurationHandler objectForName:]
  +[ConfigurationHandler classRepresentativeForName:]
  +[ConfigurationHandler setConfigurationObject:forName:]
  +[ConfigurationHandler dumpAll]
  +[ConfigurationHandler configureItems:]

  // instance methods
  -[ConfigurationHandler read:returnedValues:]
  -[ConfigurationHandler noteSymptom:]
  -[ConfigurationHandler configure:]
  -[ConfigurationHandler _dumpState]
  -[ConfigurationHandler setAnnotation:]
  -[ConfigurationHandler generateInfoForId:context:uuid:completionBlock:]
  -[ConfigurationHandler init]
  -[ConfigurationHandler _setAnnotation:]
  -[ConfigurationHandler _configureHandlerClass:]
  -[ConfigurationHandler _configureBuildDetails:]


SystemProperties : NSObject
 @property  NSString *productType
 @property  int deviceClass
 @property  NSString *deviceClassString
 @property  BOOL basebandCapability
 @property  int dualSIMCapability
 @property  BOOL internalBuild
 @property  BOOL vendorBuild
 @property  BOOL seedBuild
 @property  BOOL carrierBuild
 @property  BOOL customerSeedBuild
 @property  BOOL carrierSeedBuild
 @property  BOOL isSymptomsdHelper
 @property  BOOL isLegacyBasebandModel
 @property  NSString *productName
 @property  NSString *productVersion
 @property  NSString *buildVersion
 @property  NSString *buildVersionPrefix
 @property  NSString *buildPlatform
 @property  NSString *buildVariant
 @property  NSString *basebandChipset
 @property  NSString *serialNumber
 @property  BOOL internalBuildDisabledByOverride
 @property  NSNumber *carrierSeedBuildOverride
 @property  NSNumber *seedBuildOverride
 @property  NSNumber *vendorBuildOverride

  // class methods
  +[SystemProperties sharedInstance]
  +[SystemProperties saveDeviceConfigType:forKey:]
  +[SystemProperties retrieveDeviceConfigTypeForKey:]
  +[SystemProperties retrieveDeviceConfigTypePreferenceForKey:]
  +[SystemProperties retrieveDeviceConfigTypePreference]
  +[SystemProperties deleteDeviceConfigTypePreference]
  +[SystemProperties deleteDeviceConfigTypePreferenceForKey:]
  +[SystemProperties systemPropertiesDeviceClassFromMGQDeviceClass:]
  +[SystemProperties setDeviceConfigTypeForSerialNumber:]

  // instance methods
  -[SystemProperties internalBuild]
  -[SystemProperties serialNumber]
  -[SystemProperties buildVersion]
  -[SystemProperties carrierBuild]
  -[SystemProperties carrierSeedBuild]
  -[SystemProperties productType]
  -[SystemProperties deviceClass]
  -[SystemProperties productName]
  -[SystemProperties .cxx_destruct]
  -[SystemProperties customerSeedBuild]
  -[SystemProperties productVersion]
  -[SystemProperties seedBuild]
  -[SystemProperties buildVariant]
  -[SystemProperties dualSIMCapability]
  -[SystemProperties vendorBuild]
  -[SystemProperties init]
  -[SystemProperties dualSIMCapabilityString]
  -[SystemProperties deviceClassString]
  -[SystemProperties setInternalBuildDisabledByOverride:]
  -[SystemProperties setCarrierSeedBuildOverride:]
  -[SystemProperties setSeedBuildOverride:]
  -[SystemProperties setVendorBuildOverride:]
  -[SystemProperties refreshDualSIMCapability]
  -[SystemProperties getDualSIMCapabilityFromCoreTelephony]
  -[SystemProperties isSymptomsdHelper]
  -[SystemProperties isLegacyBasebandModel]
  -[SystemProperties basebandCapability]
  -[SystemProperties buildVersionPrefix]
  -[SystemProperties buildPlatform]
  -[SystemProperties basebandChipset]
  -[SystemProperties internalBuildDisabledByOverride]
  -[SystemProperties carrierSeedBuildOverride]
  -[SystemProperties seedBuildOverride]
  -[SystemProperties vendorBuildOverride]


DecisionDetails : NSObject
 @property  NSDate *timestamp
 @property  NSMutableArray *evaluations
 @property  NSMutableDictionary *additionalInfo
 @property  unsigned long reasonCode
 @property  char * reason

  // instance methods
  -[DecisionDetails evaluations]
  -[DecisionDetails setTimestamp:]
  -[DecisionDetails setAdditionalInfo:]
  -[DecisionDetails setEvaluations:]
  -[DecisionDetails additionalInfo]
  -[DecisionDetails dealloc]
  -[DecisionDetails initWithReason:code:evaluations:]
  -[DecisionDetails .cxx_destruct]
  -[DecisionDetails reason]
  -[DecisionDetails timestamp]
  -[DecisionDetails reasonCode]
  -[DecisionDetails setReason:]
  -[DecisionDetails setReasonCode:]


TestHTTPProbe : TestProbe <NSURLSessionDelegate>
 @property  NSURL *urlToTest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TestHTTPProbe .cxx_destruct]
  -[TestHTTPProbe stopTest]
  -[TestHTTPProbe initWithQueue:]
  -[TestHTTPProbe URLSession:didBecomeInvalidWithError:]
  -[TestHTTPProbe isEqual:]
  -[TestHTTPProbe testURL:timeout:interfaceName:userAgent:reply:]
  -[TestHTTPProbe urlToTest]
  -[TestHTTPProbe setUrlToTest:]


NetDomainsHandler : NSObject <UMUserSwitchStakeholder, ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NetDomainsHandler sharedInstance]
  +[NetDomainsHandler configureClass:]

  // instance methods
  -[NetDomainsHandler read:returnedValues:]
  -[NetDomainsHandler noteSymptom:]
  -[NetDomainsHandler performPeriodicTasks]
  -[NetDomainsHandler _lastEnabledUserDisabling]
  -[NetDomainsHandler _sendInternalSymptomDNSResolvingEnable:]
  -[NetDomainsHandler setNetworkDomainsOptions:service:connection:]
  -[NetDomainsHandler setReconciliationSwitchState:forUser:]
  -[NetDomainsHandler setSwitchState:forUser:]
  -[NetDomainsHandler _internalStateDictionary]
  -[NetDomainsHandler logSwitchStatesFromDictionary:]
  -[NetDomainsHandler bundleNameImplies1stOr2ndParty:]
  -[NetDomainsHandler configureInstance:]
  -[NetDomainsHandler checkForAutoBugCaptureWorthyCase:domainName:initiatedType:]
  -[NetDomainsHandler dealloc]
  -[NetDomainsHandler .cxx_destruct]
  -[NetDomainsHandler getNetworkDomainsOptions:service:connection:]
  -[NetDomainsHandler _unregisterForUserSwitchStakeholder:]
  -[NetDomainsHandler hasCurrentUserReconciliationEnabled]
  -[NetDomainsHandler observeValueForKeyPath:ofObject:change:context:]
  -[NetDomainsHandler _resetSymptomDomainStatistics]
  -[NetDomainsHandler _bundleNameFromAuditTokenData:auditToken:orMachOUUID:]
  -[NetDomainsHandler _administrativeDisable]
  -[NetDomainsHandler _submitAppTrackingEnabled]
  -[NetDomainsHandler _processEngineReadyNotification:]
  -[NetDomainsHandler privacyReset]
  -[NetDomainsHandler _submitSymptomDomainStatistics]
  -[NetDomainsHandler _currentSwitchStateForUser:since:]
  -[NetDomainsHandler _resetSymptomCombinationBreakdown]
  -[NetDomainsHandler queue]
  -[NetDomainsHandler _registerForUserSwitchStakeholder]
  -[NetDomainsHandler _hasSomeUserEnabled]
  -[NetDomainsHandler willSwitchUser]
  -[NetDomainsHandler _administrativeEnable]
  -[NetDomainsHandler retrievePreferencesDictionaryWithKey:]
  -[NetDomainsHandler updateReconciliationSwitchStatesForUser:]
  -[NetDomainsHandler triggerAutoBugCaptureCaseForType:subType:privateSubtypeContext:detectedProcess:events:thresholdValuesString:]
  -[NetDomainsHandler _firstUserEnabling]
  -[NetDomainsHandler _postNotificationForResolutionBy:bundleIdentifier:forDomain:endpoints:]
  -[NetDomainsHandler getReconciliationStateForUser:]
  -[NetDomainsHandler _submitSymptomCombinationBreakdown]
  -[NetDomainsHandler savePreferencesDictionary:withKey:]
  -[NetDomainsHandler _postSwitchStateNotificationForName:]
  -[NetDomainsHandler initTestInstance]
  -[NetDomainsHandler _completeInitialization]
  -[NetDomainsHandler init]
  -[NetDomainsHandler _currentReconciliationSwitchStateForUser:since:]
  -[NetDomainsHandler _convertNSData:toAuditToken:]


TraceRecorder : NSObject <ApparentTimeHandlerDelegate, ConfigurableObjectProtocol>
 @property  NSString *traceFileRootName
 @property  unsigned long traceTargets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TraceRecorder sharedInstance]
  +[TraceRecorder configureClass:]

  // instance methods
  -[TraceRecorder startRecording]
  -[TraceRecorder stopRecording]
  -[TraceRecorder configureInstance:]
  -[TraceRecorder .cxx_destruct]
  -[TraceRecorder setTimerCallbackWithDelay:queue:reference:]
  -[TraceRecorder _jsonForName:objectString:]
  -[TraceRecorder _jsonForNumber:]
  -[TraceRecorder _jsonForAWDReport:]
  -[TraceRecorder _jsonForObject:]
  -[TraceRecorder _parseFormat:args:]
  -[TraceRecorder vTraceTarget:signature:callout:item:fmt:params:]
  -[TraceRecorder assessStartStop]
  -[TraceRecorder setTraceTargets:]
  -[TraceRecorder traceTargets]
  -[TraceRecorder setTraceFileRootName:]
  -[TraceRecorder traceFileRootName]


AWDSymptomsSDMParticipant : PBCodable <NSCopying>
 @property  BOOL hasParticipationDelta
 @property  unsigned long participationDelta
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasPeriodDuration
 @property  unsigned long periodDuration
 @property  BOOL hasDlThroughputBytesPerSecond
 @property  unsigned long dlThroughputBytesPerSecond
 @property  BOOL hasUlThroughputBytesPerSecond
 @property  unsigned long ulThroughputBytesPerSecond
 @property  BOOL hasAdditionalFlags
 @property  unsigned long additionalFlags

  // instance methods
  -[AWDSymptomsSDMParticipant hasName]
  -[AWDSymptomsSDMParticipant copyTo:]
  -[AWDSymptomsSDMParticipant .cxx_destruct]
  -[AWDSymptomsSDMParticipant mergeFrom:]
  -[AWDSymptomsSDMParticipant dictionaryRepresentation]
  -[AWDSymptomsSDMParticipant setName:]
  -[AWDSymptomsSDMParticipant copyWithZone:]
  -[AWDSymptomsSDMParticipant name]
  -[AWDSymptomsSDMParticipant readFrom:]
  -[AWDSymptomsSDMParticipant writeTo:]
  -[AWDSymptomsSDMParticipant periodDuration]
  -[AWDSymptomsSDMParticipant isEqual:]
  -[AWDSymptomsSDMParticipant additionalFlags]
  -[AWDSymptomsSDMParticipant setAdditionalFlags:]
  -[AWDSymptomsSDMParticipant setParticipationDelta:]
  -[AWDSymptomsSDMParticipant setHasParticipationDelta:]
  -[AWDSymptomsSDMParticipant hasParticipationDelta]
  -[AWDSymptomsSDMParticipant setPeriodDuration:]
  -[AWDSymptomsSDMParticipant setHasPeriodDuration:]
  -[AWDSymptomsSDMParticipant hasPeriodDuration]
  -[AWDSymptomsSDMParticipant setDlThroughputBytesPerSecond:]
  -[AWDSymptomsSDMParticipant setHasDlThroughputBytesPerSecond:]
  -[AWDSymptomsSDMParticipant hasDlThroughputBytesPerSecond]
  -[AWDSymptomsSDMParticipant setUlThroughputBytesPerSecond:]
  -[AWDSymptomsSDMParticipant setHasUlThroughputBytesPerSecond:]
  -[AWDSymptomsSDMParticipant hasUlThroughputBytesPerSecond]
  -[AWDSymptomsSDMParticipant setHasAdditionalFlags:]
  -[AWDSymptomsSDMParticipant hasAdditionalFlags]
  -[AWDSymptomsSDMParticipant participationDelta]
  -[AWDSymptomsSDMParticipant dlThroughputBytesPerSecond]
  -[AWDSymptomsSDMParticipant ulThroughputBytesPerSecond]


Evaluation : NSObject
 @property  @? callback

  // instance methods
  -[Evaluation callback]
  -[Evaluation setCallback:]
  -[Evaluation .cxx_destruct]


MiscStateRelay : NSObject
 @property  unsigned long cellWRMStatus
 @property  BOOL cellWRMStatusProlongedBad
 @property  BOOL cellWRMExpensive
 @property  BOOL wifiDnsProlongedOut
 @property  BOOL wifiGoodSecurity
 @property  BOOL cellPrivateNetworkActive
 @property  BOOL wifiHotspot20
 @property  BOOL wifiManuallyJoined
 @property  BOOL wifiPolledFlowsCurrentlyBad
 @property  BOOL wifiPolledFlowsProlongedBad
 @property  BOOL wifiProfileBased
 @property  BOOL wifiPublic
 @property  BOOL wifiActive
 @property  BOOL wifiSporadic
 @property  unsigned long wifiWRMStatus
 @property  BOOL LOIUseAuthorized
 @property  BOOL homeLocationIsKnown

  // class methods
  +[MiscStateRelay automaticallyNotifiesObserversForKey:]

  // instance methods
  -[MiscStateRelay LOIUseAuthorized]
  -[MiscStateRelay setWifiActive:]
  -[MiscStateRelay setLOIUseAuthorized:]
  -[MiscStateRelay cellWRMStatus]
  -[MiscStateRelay cellPrivateNetworkActive]
  -[MiscStateRelay setCellPrivateNetworkActive:]
  -[MiscStateRelay setCellWRMStatus:]
  -[MiscStateRelay cellWRMStatusProlongedBad]
  -[MiscStateRelay setCellWRMStatusProlongedBad:]
  -[MiscStateRelay cellWRMExpensive]
  -[MiscStateRelay setCellWRMExpensive:]
  -[MiscStateRelay wifiDnsProlongedOut]
  -[MiscStateRelay setWifiDnsProlongedOut:]
  -[MiscStateRelay wifiGoodSecurity]
  -[MiscStateRelay setWifiGoodSecurity:]
  -[MiscStateRelay wifiHotspot20]
  -[MiscStateRelay setWifiHotspot20:]
  -[MiscStateRelay wifiManuallyJoined]
  -[MiscStateRelay setWifiManuallyJoined:]
  -[MiscStateRelay wifiPolledFlowsCurrentlyBad]
  -[MiscStateRelay setWifiPolledFlowsCurrentlyBad:]
  -[MiscStateRelay wifiPolledFlowsProlongedBad]
  -[MiscStateRelay setWifiPolledFlowsProlongedBad:]
  -[MiscStateRelay wifiProfileBased]
  -[MiscStateRelay setWifiProfileBased:]
  -[MiscStateRelay wifiPublic]
  -[MiscStateRelay setWifiPublic:]
  -[MiscStateRelay homeLocationIsKnown]
  -[MiscStateRelay setHomeLocationIsKnown:]
  -[MiscStateRelay wifiHome]
  -[MiscStateRelay setWifiHome:]
  -[MiscStateRelay wifiWRMStatus]
  -[MiscStateRelay setWifiWRMStatus:]
  -[MiscStateRelay wifiActive]
  -[MiscStateRelay wifiSporadic]
  -[MiscStateRelay setWifiSporadic:]


CellOutrankHandler : ExpertSystemHandlerCore <StateWatcherDelegate, WiFiShimDelegate, ConfigurableObjectProtocol, ManagedEventInfoProtocol, DataStallHandlerDelegate>
 @property  BOOL systemForeground
 @property  unsigned int activationIdentifier
 @property  BOOL cellOutranksWiFi
 @property  unsigned int currentCellOutrankState
 @property  BOOL cellOutrankIconControl
 @property  BOOL nonIdle
 @property  BOOL motionRelaySubscribed
 @property  unsigned long cellOutrankReportableTransitionFlags
 @property  int cellOutrankReportableTransitionPrimaryReason
 @property  BOOL cellOutrankReported
 @property  BOOL pollingRequested
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CellOutrankHandler sharedInstance]
  +[CellOutrankHandler automaticallyNotifiesObserversForKey:]
  +[CellOutrankHandler noteOutrankEvent:]
  +[CellOutrankHandler internalStateDictionary]
  +[CellOutrankHandler initialize]
  +[CellOutrankHandler configureClass:]

  // instance methods
  -[CellOutrankHandler restoreDefaults]
  -[CellOutrankHandler _dumpState]
  -[CellOutrankHandler setConfiguration:]
  -[CellOutrankHandler outrankStateExitAction]
  -[CellOutrankHandler wifiShim_CurrentAssociationChanged:associationInfo:]
  -[CellOutrankHandler _WRMStatusString:status:timestamp:]
  -[CellOutrankHandler nonIdle]
  -[CellOutrankHandler cellOutrankReported]
  -[CellOutrankHandler historyAllowsOutrankForSSID:]
  -[CellOutrankHandler setNonIdle:]
  -[CellOutrankHandler configureFromPrefs:]
  -[CellOutrankHandler noteOutrankEvent:]
  -[CellOutrankHandler initializeHistory]
  -[CellOutrankHandler handleWRMState:]
  -[CellOutrankHandler ingestCurrentState]
  -[CellOutrankHandler setCellOutrankReport:]
  -[CellOutrankHandler resetHistoryForSSID:]
  -[CellOutrankHandler configureInstance:]
  -[CellOutrankHandler startObservingLOIChanges]
  -[CellOutrankHandler dealloc]
  -[CellOutrankHandler stopObservingLOIChanges]
  -[CellOutrankHandler checkEnablement]
  -[CellOutrankHandler cellOutrankReportableTransitionPrimaryReason]
  -[CellOutrankHandler setCurrentCellOutrankState:]
  -[CellOutrankHandler systemForeground]
  -[CellOutrankHandler internalStateDictionary]
  -[CellOutrankHandler .cxx_destruct]
  -[CellOutrankHandler motionRelaySubscribed]
  -[CellOutrankHandler updateForAssociation:]
  -[CellOutrankHandler checkUniqueStallCountOnInterfaceType:stallType:]
  -[CellOutrankHandler reportOutrankABCCase:singleShot:]
  -[CellOutrankHandler armedStateExitAction]
  -[CellOutrankHandler setMotionRelaySubscribed:]
  -[CellOutrankHandler entryActionForState:]
  -[CellOutrankHandler cellOutrankIconControl]
  -[CellOutrankHandler pollingRequested]
  -[CellOutrankHandler _updateWiFi:]
  -[CellOutrankHandler setActivationIdentifier:]
  -[CellOutrankHandler observeValueForKeyPath:ofObject:change:context:]
  -[CellOutrankHandler setHistoryForSSID:]
  -[CellOutrankHandler _administrativeDisable]
  -[CellOutrankHandler setCellOutranksWiFi:]
  -[CellOutrankHandler generateInfoForId:context:uuid:completionBlock:]
  -[CellOutrankHandler cellOutranksWiFi]
  -[CellOutrankHandler newSTMState:fromDeviceState:]
  -[CellOutrankHandler activationIdentifier]
  -[CellOutrankHandler outrankStateEntryAction]
  -[CellOutrankHandler _generateInfoForId:context:uuid:completionBlock:]
  -[CellOutrankHandler armedStateEntryAction]
  -[CellOutrankHandler queryHomeLOIRefresh:]
  -[CellOutrankHandler wifiShim_InfraAdminDisable:bssid:]
  -[CellOutrankHandler _getState:]
  -[CellOutrankHandler idleStateEntryAction]
  -[CellOutrankHandler cellOutrankReportableTransitionFlags]
  -[CellOutrankHandler _administrativeEnable]
  -[CellOutrankHandler currentCellOutrankState]
  -[CellOutrankHandler setCellOutrankIconControl:]
  -[CellOutrankHandler setSystemForeground:]
  -[CellOutrankHandler _refreshWifiShimItems]
  -[CellOutrankHandler setPollingRequested:]
  -[CellOutrankHandler _initializeUserFlowMonitor]
  -[CellOutrankHandler _completeInitialization]
  -[CellOutrankHandler init]
  -[CellOutrankHandler noteStateChange:new:old:]


InterfaceUtils : NSObject
  // class methods
  +[InterfaceUtils stringForInterfaceType:]
  +[InterfaceUtils stringForExtendedInterfaceType:]
  +[InterfaceUtils interfaceTypeForString:]
  +[InterfaceUtils nwInterfaceTypeForExtendedNWInterfaceType:]


ForegroundAppRecord : NSObject
 @property  NSString *bundleName
 @property  double stateChangeTime
 @property  BOOL isForeground
 @property  BOOL foregroundSessionActivity
 @property  BOOL countedAsExploitingOutrank
 @property  BOOL countedAsNonExploitingOutrank
 @property  unsigned long policyId
 @property  NEPolicy *policy
 @property  long long connectionCount
 @property  long long closedConnectionCount

  // instance methods
  -[ForegroundAppRecord bundleName]
  -[ForegroundAppRecord policyId]
  -[ForegroundAppRecord setConnectionCount:]
  -[ForegroundAppRecord setForegroundSessionActivity:]
  -[ForegroundAppRecord setBundleName:]
  -[ForegroundAppRecord closedConnectionCount]
  -[ForegroundAppRecord countedAsExploitingOutrank]
  -[ForegroundAppRecord .cxx_destruct]
  -[ForegroundAppRecord setIsForeground:]
  -[ForegroundAppRecord setCountedAsNonExploitingOutrank:]
  -[ForegroundAppRecord setClosedConnectionCount:]
  -[ForegroundAppRecord stateChangeTime]
  -[ForegroundAppRecord setPolicyId:]
  -[ForegroundAppRecord isForeground]
  -[ForegroundAppRecord countedAsNonExploitingOutrank]
  -[ForegroundAppRecord connectionCount]
  -[ForegroundAppRecord setPolicy:]
  -[ForegroundAppRecord setCountedAsExploitingOutrank:]
  -[ForegroundAppRecord policy]
  -[ForegroundAppRecord foregroundSessionActivity]


NEClientAssertionTracker : NSObject
 @property  NSUUID *processUUID
 @property  BOOL hasAppRecord
 @property  unsigned long count

  // instance methods
  -[NEClientAssertionTracker setCount:]
  -[NEClientAssertionTracker .cxx_destruct]
  -[NEClientAssertionTracker count]
  -[NEClientAssertionTracker processUUID]
  -[NEClientAssertionTracker setProcessUUID:]
  -[NEClientAssertionTracker hasAppRecord]
  -[NEClientAssertionTracker setHasAppRecord:]


CellOutrankController : NSObject
 @property  BOOL cellOutrankEffective
 @property  unsigned int currentUsage
 @property  int neAgentInstanceNumber
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSString *cellInterfaceName
 @property  BOOL cellOutranksWiFi
 @property  BOOL cellOutrankIcon
 @property  double cellOutrankPossibleDuration
 @property  double cellOutrankIconSetDuration
 @property  double cellOutrankFGExploitDuration
 @property  double cellOutrankFGNonExploitDuration
 @property  unsigned int cellOutrankIconSetEvents
 @property  int numForegroundAppsExploitingOutrank
 @property  int numForegroundAppsNonExploitingOutrank

  // class methods
  +[CellOutrankController sharedInstance]
  +[CellOutrankController automaticallyNotifiesObserversForKey:]

  // instance methods
  -[CellOutrankController restoreDefaults]
  -[CellOutrankController didSampleFlows]
  -[CellOutrankController setConfiguration:]
  -[CellOutrankController setCellInterfaceName:]
  -[CellOutrankController updatePolicy]
  -[CellOutrankController cleanupNEPolicy]
  -[CellOutrankController removeAllPolicies]
  -[CellOutrankController setCellOutrankEffective:]
  -[CellOutrankController _updateExploitNumbers]
  -[CellOutrankController numForegroundAppsNonExploitingOutrank]
  -[CellOutrankController unassertFallbackForClient:]
  -[CellOutrankController cellOutrankIconSetDuration]
  -[CellOutrankController applyPolicyDelta]
  -[CellOutrankController .cxx_destruct]
  -[CellOutrankController cellOutrankEffective]
  -[CellOutrankController numForegroundAppsExploitingOutrank]
  -[CellOutrankController assertFallbackForClient:process:]
  -[CellOutrankController assessIconState]
  -[CellOutrankController cellInterfaceName]
  -[CellOutrankController currentUsage]
  -[CellOutrankController _foregroundAppActivity:uuid:isForeground:]
  -[CellOutrankController cellOutrankIcon]
  -[CellOutrankController neAgentInstanceNumber]
  -[CellOutrankController setQueue:]
  -[CellOutrankController ensureMaintenanceTimer]
  -[CellOutrankController setCellOutranksWiFi:]
  -[CellOutrankController cellOutrankFGExploitDuration]
  -[CellOutrankController cellOutranksWiFi]
  -[CellOutrankController cellOutrankIconSetEvents]
  -[CellOutrankController queue]
  -[CellOutrankController getState:]
  -[CellOutrankController cellOutrankPossibleDuration]
  -[CellOutrankController setCurrentUsage:]
  -[CellOutrankController reportABCCase:]
  -[CellOutrankController checkInvariants:]
  -[CellOutrankController deleteAssertionTracker:]
  -[CellOutrankController deleteAllAssertionTrackers]
  -[CellOutrankController init]
  -[CellOutrankController cellOutrankFGNonExploitDuration]


AWDSymptomsAdvisoryAlternateNetworkType : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasAdvice
 @property  int advice
 @property  BOOL hasBailOutOf
 @property  int bailOutOf
 @property  BOOL hasAdviceHeldForSecs
 @property  unsigned long adviceHeldForSecs
 @property  BOOL hasKernelProbingActivated
 @property  BOOL kernelProbingActivated
 @property  BOOL hasIngressTrigger
 @property  int ingressTrigger
 @property  BOOL hasIngressTriggerOn
 @property  int ingressTriggerOn
 @property  BOOL hasIngressTriggerMultiplier
 @property  unsigned int ingressTriggerMultiplier
 @property  BOOL hasIngressTriggerPercentagex100
 @property  unsigned int ingressTriggerPercentagex100
 @property  BOOL hasEgressTrigger
 @property  int egressTrigger
 @property  BOOL hasEgressTriggerOn
 @property  int egressTriggerOn
 @property  BOOL hasEgressTriggerMultiplier
 @property  unsigned int egressTriggerMultiplier
 @property  BOOL hasEgressTriggerPercentagex100
 @property  unsigned int egressTriggerPercentagex100
 @property  NSMutableArray *ingressTriggerSignatures
 @property  NSMutableArray *egressTriggerSignatures
 @property  BOOL hasComingFromState
 @property  unsigned int comingFromState
 @property  BOOL hasIngressMobilityCode
 @property  int ingressMobilityCode
 @property  BOOL hasEgressMobilityCode
 @property  int egressMobilityCode
 @property  BOOL hasTransitionsSuppressedByMobility
 @property  unsigned int transitionsSuppressedByMobility
 @property  BOOL hasCellularDataUsage
 @property  unsigned int cellularDataUsage
 @property  BOOL hasPolicy
 @property  int policy
 @property  BOOL hasAdvisor
 @property  int advisor
 @property  BOOL hasActivationIdentifier
 @property  unsigned int activationIdentifier
 @property  unsigned long wifiIngressTriggersCount
 @property  ^i wifiIngressTriggers
 @property  unsigned long cellIngressTriggersCount
 @property  ^i cellIngressTriggers
 @property  unsigned long wifiEgressTriggersCount
 @property  ^i wifiEgressTriggers
 @property  unsigned long cellEgressTriggersCount
 @property  ^i cellEgressTriggers

  // class methods
  +[AWDSymptomsAdvisoryAlternateNetworkType ingressTriggerSignatureType]
  +[AWDSymptomsAdvisoryAlternateNetworkType egressTriggerSignatureType]

  // instance methods
  -[AWDSymptomsAdvisoryAlternateNetworkType setTimestamp:]
  -[AWDSymptomsAdvisoryAlternateNetworkType copyTo:]
  -[AWDSymptomsAdvisoryAlternateNetworkType dealloc]
  -[AWDSymptomsAdvisoryAlternateNetworkType .cxx_destruct]
  -[AWDSymptomsAdvisoryAlternateNetworkType mergeFrom:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasTimestamp:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setActivationIdentifier:]
  -[AWDSymptomsAdvisoryAlternateNetworkType dictionaryRepresentation]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasTimestamp]
  -[AWDSymptomsAdvisoryAlternateNetworkType activationIdentifier]
  -[AWDSymptomsAdvisoryAlternateNetworkType copyWithZone:]
  -[AWDSymptomsAdvisoryAlternateNetworkType timestamp]
  -[AWDSymptomsAdvisoryAlternateNetworkType readFrom:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setPolicy:]
  -[AWDSymptomsAdvisoryAlternateNetworkType writeTo:]
  -[AWDSymptomsAdvisoryAlternateNetworkType isEqual:]
  -[AWDSymptomsAdvisoryAlternateNetworkType policy]
  -[AWDSymptomsAdvisoryAlternateNetworkType advice]
  -[AWDSymptomsAdvisoryAlternateNetworkType setAdvice:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasAdvice:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasAdvice]
  -[AWDSymptomsAdvisoryAlternateNetworkType adviceAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsAdvice:]
  -[AWDSymptomsAdvisoryAlternateNetworkType bailOutOf]
  -[AWDSymptomsAdvisoryAlternateNetworkType setBailOutOf:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasBailOutOf:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasBailOutOf]
  -[AWDSymptomsAdvisoryAlternateNetworkType bailOutOfAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsBailOutOf:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setAdviceHeldForSecs:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasAdviceHeldForSecs:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasAdviceHeldForSecs]
  -[AWDSymptomsAdvisoryAlternateNetworkType setKernelProbingActivated:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasKernelProbingActivated:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasKernelProbingActivated]
  -[AWDSymptomsAdvisoryAlternateNetworkType ingressTrigger]
  -[AWDSymptomsAdvisoryAlternateNetworkType setIngressTrigger:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasIngressTrigger:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasIngressTrigger]
  -[AWDSymptomsAdvisoryAlternateNetworkType ingressTriggerAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsIngressTrigger:]
  -[AWDSymptomsAdvisoryAlternateNetworkType ingressTriggerOn]
  -[AWDSymptomsAdvisoryAlternateNetworkType setIngressTriggerOn:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasIngressTriggerOn:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasIngressTriggerOn]
  -[AWDSymptomsAdvisoryAlternateNetworkType ingressTriggerOnAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsIngressTriggerOn:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setIngressTriggerMultiplier:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasIngressTriggerMultiplier:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasIngressTriggerMultiplier]
  -[AWDSymptomsAdvisoryAlternateNetworkType setIngressTriggerPercentagex100:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasIngressTriggerPercentagex100:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasIngressTriggerPercentagex100]
  -[AWDSymptomsAdvisoryAlternateNetworkType egressTrigger]
  -[AWDSymptomsAdvisoryAlternateNetworkType setEgressTrigger:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasEgressTrigger:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasEgressTrigger]
  -[AWDSymptomsAdvisoryAlternateNetworkType egressTriggerAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsEgressTrigger:]
  -[AWDSymptomsAdvisoryAlternateNetworkType egressTriggerOn]
  -[AWDSymptomsAdvisoryAlternateNetworkType setEgressTriggerOn:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasEgressTriggerOn:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasEgressTriggerOn]
  -[AWDSymptomsAdvisoryAlternateNetworkType egressTriggerOnAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsEgressTriggerOn:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setEgressTriggerMultiplier:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasEgressTriggerMultiplier:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasEgressTriggerMultiplier]
  -[AWDSymptomsAdvisoryAlternateNetworkType setEgressTriggerPercentagex100:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasEgressTriggerPercentagex100:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasEgressTriggerPercentagex100]
  -[AWDSymptomsAdvisoryAlternateNetworkType clearIngressTriggerSignatures]
  -[AWDSymptomsAdvisoryAlternateNetworkType addIngressTriggerSignature:]
  -[AWDSymptomsAdvisoryAlternateNetworkType ingressTriggerSignaturesCount]
  -[AWDSymptomsAdvisoryAlternateNetworkType ingressTriggerSignatureAtIndex:]
  -[AWDSymptomsAdvisoryAlternateNetworkType clearEgressTriggerSignatures]
  -[AWDSymptomsAdvisoryAlternateNetworkType addEgressTriggerSignature:]
  -[AWDSymptomsAdvisoryAlternateNetworkType egressTriggerSignaturesCount]
  -[AWDSymptomsAdvisoryAlternateNetworkType egressTriggerSignatureAtIndex:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setComingFromState:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasComingFromState:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasComingFromState]
  -[AWDSymptomsAdvisoryAlternateNetworkType ingressMobilityCode]
  -[AWDSymptomsAdvisoryAlternateNetworkType setIngressMobilityCode:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasIngressMobilityCode:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasIngressMobilityCode]
  -[AWDSymptomsAdvisoryAlternateNetworkType ingressMobilityCodeAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsIngressMobilityCode:]
  -[AWDSymptomsAdvisoryAlternateNetworkType egressMobilityCode]
  -[AWDSymptomsAdvisoryAlternateNetworkType setEgressMobilityCode:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasEgressMobilityCode:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasEgressMobilityCode]
  -[AWDSymptomsAdvisoryAlternateNetworkType egressMobilityCodeAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsEgressMobilityCode:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setTransitionsSuppressedByMobility:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasTransitionsSuppressedByMobility:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasTransitionsSuppressedByMobility]
  -[AWDSymptomsAdvisoryAlternateNetworkType setCellularDataUsage:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasCellularDataUsage:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasCellularDataUsage]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasPolicy:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasPolicy]
  -[AWDSymptomsAdvisoryAlternateNetworkType policyAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsPolicy:]
  -[AWDSymptomsAdvisoryAlternateNetworkType advisor]
  -[AWDSymptomsAdvisoryAlternateNetworkType setAdvisor:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasAdvisor:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasAdvisor]
  -[AWDSymptomsAdvisoryAlternateNetworkType advisorAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsAdvisor:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setHasActivationIdentifier:]
  -[AWDSymptomsAdvisoryAlternateNetworkType hasActivationIdentifier]
  -[AWDSymptomsAdvisoryAlternateNetworkType wifiIngressTriggersCount]
  -[AWDSymptomsAdvisoryAlternateNetworkType wifiIngressTriggers]
  -[AWDSymptomsAdvisoryAlternateNetworkType clearWifiIngressTriggers]
  -[AWDSymptomsAdvisoryAlternateNetworkType addWifiIngressTriggers:]
  -[AWDSymptomsAdvisoryAlternateNetworkType wifiIngressTriggersAtIndex:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setWifiIngressTriggers:count:]
  -[AWDSymptomsAdvisoryAlternateNetworkType wifiIngressTriggersAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsWifiIngressTriggers:]
  -[AWDSymptomsAdvisoryAlternateNetworkType cellIngressTriggersCount]
  -[AWDSymptomsAdvisoryAlternateNetworkType cellIngressTriggers]
  -[AWDSymptomsAdvisoryAlternateNetworkType clearCellIngressTriggers]
  -[AWDSymptomsAdvisoryAlternateNetworkType addCellIngressTriggers:]
  -[AWDSymptomsAdvisoryAlternateNetworkType cellIngressTriggersAtIndex:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setCellIngressTriggers:count:]
  -[AWDSymptomsAdvisoryAlternateNetworkType cellIngressTriggersAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsCellIngressTriggers:]
  -[AWDSymptomsAdvisoryAlternateNetworkType wifiEgressTriggersCount]
  -[AWDSymptomsAdvisoryAlternateNetworkType wifiEgressTriggers]
  -[AWDSymptomsAdvisoryAlternateNetworkType clearWifiEgressTriggers]
  -[AWDSymptomsAdvisoryAlternateNetworkType addWifiEgressTriggers:]
  -[AWDSymptomsAdvisoryAlternateNetworkType wifiEgressTriggersAtIndex:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setWifiEgressTriggers:count:]
  -[AWDSymptomsAdvisoryAlternateNetworkType wifiEgressTriggersAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsWifiEgressTriggers:]
  -[AWDSymptomsAdvisoryAlternateNetworkType cellEgressTriggersCount]
  -[AWDSymptomsAdvisoryAlternateNetworkType cellEgressTriggers]
  -[AWDSymptomsAdvisoryAlternateNetworkType clearCellEgressTriggers]
  -[AWDSymptomsAdvisoryAlternateNetworkType addCellEgressTriggers:]
  -[AWDSymptomsAdvisoryAlternateNetworkType cellEgressTriggersAtIndex:]
  -[AWDSymptomsAdvisoryAlternateNetworkType setCellEgressTriggers:count:]
  -[AWDSymptomsAdvisoryAlternateNetworkType cellEgressTriggersAsString:]
  -[AWDSymptomsAdvisoryAlternateNetworkType StringAsCellEgressTriggers:]
  -[AWDSymptomsAdvisoryAlternateNetworkType adviceHeldForSecs]
  -[AWDSymptomsAdvisoryAlternateNetworkType kernelProbingActivated]
  -[AWDSymptomsAdvisoryAlternateNetworkType ingressTriggerMultiplier]
  -[AWDSymptomsAdvisoryAlternateNetworkType ingressTriggerPercentagex100]
  -[AWDSymptomsAdvisoryAlternateNetworkType egressTriggerMultiplier]
  -[AWDSymptomsAdvisoryAlternateNetworkType egressTriggerPercentagex100]
  -[AWDSymptomsAdvisoryAlternateNetworkType ingressTriggerSignatures]
  -[AWDSymptomsAdvisoryAlternateNetworkType setIngressTriggerSignatures:]
  -[AWDSymptomsAdvisoryAlternateNetworkType egressTriggerSignatures]
  -[AWDSymptomsAdvisoryAlternateNetworkType setEgressTriggerSignatures:]
  -[AWDSymptomsAdvisoryAlternateNetworkType comingFromState]
  -[AWDSymptomsAdvisoryAlternateNetworkType transitionsSuppressedByMobility]
  -[AWDSymptomsAdvisoryAlternateNetworkType cellularDataUsage]


IpsFileUtility : NSObject
  // class methods
  +[IpsFileUtility _createDataForCrashReporterIpsHeaderWithBugType:contentType:date:additionalFields:]
  +[IpsFileUtility _createIpsFileNameWithPrefix:date:inDirectory:]
  +[IpsFileUtility formattedDateForFilename:]

  // instance methods
  -[IpsFileUtility dealloc]
  -[IpsFileUtility createIpsFileWithBugType:contentType:additionalIpsHeaders:ipsContent:inDirectory:fileNamePrefix:]
  -[IpsFileUtility _writeIpsFileWithBugType:contentType:additionalIpsHeaders:ipsData:inDirectory:fileNamePrefix:]
  -[IpsFileUtility createIpsFileWithBugType:contentType:additionalIpsHeaders:ipsData:inDirectory:fileNamePrefix:]
  -[IpsFileUtility _checkDirectoryAndCreateIfNecessary:]


Client : NSObject
 @property  NSXPCConnection *connection
 @property  NSMutableSet *subscribedNOIs

  // instance methods
  -[Client _decrementMessageCounter:]
  -[Client initWithConn:]
  -[Client _shouldSendMessages]
  -[Client .cxx_destruct]
  -[Client connection]
  -[Client observeValueForKeyPath:ofObject:change:context:]
  -[Client _sendBarrierIfNecessaryWithBlock:]
  -[Client setSubscribedNOIs:]
  -[Client _incrementMessageCounter:]
  -[Client subscribedNOIs]
  -[Client setConnection:]


NOIAnalyticsEngine : AnalyticsEngineCore
  // class methods
  +[NOIAnalyticsEngine resetQueryStatistics]
  +[NOIAnalyticsEngine queue]
  +[NOIAnalyticsEngine getQueryStatistics:]

  // instance methods
  -[NOIAnalyticsEngine unsubscribeToNOIs:connection:]
  -[NOIAnalyticsEngine _dumpClientStructure]
  -[NOIAnalyticsEngine networkAttachmentInfo:options:reply:]
  -[NOIAnalyticsEngine auditableLinkQuality:options:reply:]
  -[NOIAnalyticsEngine _getQueryStatistics:]
  -[NOIAnalyticsEngine _resetRRCMetricCounters]
  -[NOIAnalyticsEngine inquireNOIFor:orPredicate:requestedKeys:options:connection:reply:]
  -[NOIAnalyticsEngine dealloc]
  -[NOIAnalyticsEngine .cxx_destruct]
  -[NOIAnalyticsEngine _validatedNOIs:orPredicate:]
  -[NOIAnalyticsEngine subscribeToNOIsFor:orPredicate:options:connection:]
  -[NOIAnalyticsEngine _initializeAllManagedNOIs]
  -[NOIAnalyticsEngine clientTransactionsRelease]
  -[NOIAnalyticsEngine _bottomUpNOIEvent:withInfo:]
  -[NOIAnalyticsEngine observeValueForKeyPath:ofObject:change:context:]
  -[NOIAnalyticsEngine estTransferTime:options:reply:]
  -[NOIAnalyticsEngine _evalPostingNotificationForNOI:forEvent:withInfo:]
  -[NOIAnalyticsEngine clientEvent:isAddEvent:]
  -[NOIAnalyticsEngine _observeStateRelays]
  -[NOIAnalyticsEngine _coreNOIMembershipChangeOn:forNOIs:isAddEvent:]
  -[NOIAnalyticsEngine _clientNOIEvent:forNOIs:isAddEvent:]
  -[NOIAnalyticsEngine initWithWorkspace:params:queue:]
  -[NOIAnalyticsEngine _updateRrcStateChangeTimestamp:forRrcState:]
  -[NOIAnalyticsEngine canUseOnAlternate:options:reply:]
  -[NOIAnalyticsEngine _resetQueryStatistics]
  -[NOIAnalyticsEngine l2ThroughputMetrics:options:reply:]


EventDescription : NSObject
 @property  int eventType
 @property  NSDate *creationTimeStamp
 @property  {?=[8I]} auditToken
 @property  unsigned long processId
 @property  char * processName
 @property  char * bundleId
 @property  BOOL verifiedDelegateSymptom
 @property  long long eventLen
 @property  ^v eventData
 @property  NSMutableDictionary *eventQualifiers
 @property  NSString *eventKey

  // instance methods
  -[EventDescription initWithType:length:data:fromPid:named:bundleId:]
  -[EventDescription processId]
  -[EventDescription eventQualifiers]
  -[EventDescription verifiedDelegateSymptom]
  -[EventDescription processName]
  -[EventDescription eventLen]
  -[EventDescription dealloc]
  -[EventDescription eventData]
  -[EventDescription .cxx_destruct]
  -[EventDescription eventType]
  -[EventDescription auditToken]
  -[EventDescription creationTimeStamp]
  -[EventDescription initWithType:length:data:fromAuditToken:fromPid:named:bundleId:verifiedDelegateSymptom:]
  -[EventDescription bundleId]
  -[EventDescription eventKey]
  -[EventDescription originatorForLogging]
  -[EventDescription eventQualifierStringForKey:]
  -[EventDescription setEventKey:]


LibtraceSymptomHandler : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LibtraceSymptomHandler sharedInstance]
  +[LibtraceSymptomHandler configureClass:]

  // instance methods
  -[LibtraceSymptomHandler noteSymptom:]
  -[LibtraceSymptomHandler configureInstance:]


MPTCPHandler : NSObject <ConfigurableObjectProtocol>
 @property  int sockfd
 @property  NSObject<OS_dispatch_source> *socksrc
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MPTCPHandler sharedInstance]
  +[MPTCPHandler configureClass:]

  // instance methods
  -[MPTCPHandler read:returnedValues:]
  -[MPTCPHandler sockfd]
  -[MPTCPHandler setSockfd:]
  -[MPTCPHandler setupSockFD]
  -[MPTCPHandler setSocksrc:]
  -[MPTCPHandler handleSrcEvent]
  -[MPTCPHandler sendReply:]
  -[MPTCPHandler configureInstance:]
  -[MPTCPHandler dealloc]
  -[MPTCPHandler .cxx_destruct]
  -[MPTCPHandler socksrc]
  -[MPTCPHandler _performUpdate]
  -[MPTCPHandler _setMPTCPAdvisoryCell:]
  -[MPTCPHandler observeValueForKeyPath:ofObject:change:context:]
  -[MPTCPHandler _setMPTCPAdvisoryWiFi:]
  -[MPTCPHandler rnfWiFiEvent:withInfo:]
  -[MPTCPHandler init]


FeedbackHandler : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FeedbackHandler sharedInstance]
  +[FeedbackHandler configureClass:]

  // instance methods
  -[FeedbackHandler read:returnedValues:]
  -[FeedbackHandler noteSymptom:]
  -[FeedbackHandler evaluate:forThreshold:]
  -[FeedbackHandler configureInstance:]


Filter : NSObject
 @property  long long subsystemId
 @property  unsigned int symptomId
 @property  long long queueLenAlert
 @property  long long queueLenDrop
 @property  long long queueTimeLimit

  // class methods
  +[Filter initForSymptom:withParams:]

  // instance methods
  -[Filter isEqual:]
  -[Filter subsystemId]
  -[Filter setSubsystemId:]
  -[Filter symptomId]
  -[Filter setSymptomId:]
  -[Filter queueLenAlert]
  -[Filter setQueueLenAlert:]
  -[Filter queueLenDrop]
  -[Filter setQueueLenDrop:]
  -[Filter queueTimeLimit]
  -[Filter setQueueTimeLimit:]


FilterActions : NSObject
 @property  unsigned int triggerSymptomId
 @property  Filter *initialFilter
 @property  long long delayValue
 @property  Filter *finalFilter

  // class methods
  +[FilterActions initForSymptom:trigger:triggering:finally:after:]

  // instance methods
  -[FilterActions triggerSymptomId]
  -[FilterActions finalFilter]
  -[FilterActions .cxx_destruct]
  -[FilterActions initialFilter]
  -[FilterActions setTriggerSymptomId:]
  -[FilterActions delayValue]
  -[FilterActions initForSymptom:trigger:triggering:finally:after:]


SymptomExpertSystemState : ExpertSystemStateCore
 @property  NSObject<OS_dispatch_source> *strobe

  // class methods
  +[SymptomExpertSystemState createStateWithLabel:rank:entryPreds:]

  // instance methods
  -[SymptomExpertSystemState .cxx_destruct]
  -[SymptomExpertSystemState setStrobe:]
  -[SymptomExpertSystemState strobe]


SymptomExpertSystemDiagnosingState : SymptomExpertSystemState
 @property  NSDictionary *triggeringSymptom

  // class methods
  +[SymptomExpertSystemDiagnosingState createStateWithLabel:rank:entryPreds:]

  // instance methods
  -[SymptomExpertSystemDiagnosingState setTriggeringSymptom:]
  -[SymptomExpertSystemDiagnosingState createAndPostAWDMetric]
  -[SymptomExpertSystemDiagnosingState .cxx_destruct]
  -[SymptomExpertSystemDiagnosingState triggeringSymptom]


SymptomExpertSystemHandler : ExpertSystemHandlerCore <ProbeManagerDelegate, CLIPSShimDelegate, SymptomsFileCleanerDelegate, SymptomsAWDObserverDelegate, AnalyticsConfigurationObserverDelegate, CoreTelephonyShimDelegate>
 @property  unsigned long stepper
 @property  NSMutableArray *incomingSymptoms
 @property  NSMutableArray *processedSymptoms
 @property  NSString *diagnosticSessionIdentifier
 @property  NSMutableArray *caseSignatures
 @property  NSMutableDictionary *diagnosticSessionOutput
 @property  NSDate *lastSymptomRun
 @property  NSMutableDictionary *obfuscations
 @property  NSDataDetector *urlDetector
 @property  NSDate *diagSessionExpectedEnd
 @property  long long diagnosingStrobeInterval
 @property  long long maximumDiagnosingTime
 @property  BOOL observingAWDMetrics
 @property  AnalyticsConfigurationObserver *analyticsConfigObserver
 @property  NSMutableDictionary *awdCLIPSMapping
 @property  NSMutableArray *awdCLIPSModules
 @property  NSObject<OS_dispatch_source> *clipsReleaseMemoryTimer
 @property  NSObject<OS_dispatch_source> *clipsResetTimer
 @property  NSObject<OS_dispatch_source> *clipsAWDObserverTimer
 @property  NSObject<OS_dispatch_source> *loadDefaultRulesTimer
 @property  NSObject<OS_dispatch_source> *loggingProfileTimeoutTimer
 @property  NSMutableDictionary *clipsFactsWaitTimers
 @property  ProbeManager *probeManager
 @property  NSDate *completedInitializationDate
 @property  SDRDiagnosticReporter *sdrReporter
 @property  NSXPCConnection *privateConnection
 @property  SymptomsFileCleaner *abcCleaner
 @property  NSNumber *apSleep
 @property  BOOL internalBuild
 @property  BOOL carrierSeedBuild
 @property  BOOL internalOrCarrierSeedBuild
 @property  BOOL customerSeedBuild
 @property  BOOL vendorBuild
 @property  NSMutableDictionary *libtraceOSLogWhiteList
 @property  NSString *activeDataSIMOperatorName
 @property  NSString *lastActiveDataSIMOperatorName
 @property  unsigned long activeDataSIMSignalBars
 @property  unsigned long lastActiveDataSIMSignalBars
 @property  NSMutableSet *filteredCTDumps
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SymptomExpertSystemHandler noteSymptom:]
  +[SymptomExpertSystemHandler sharedInstance]
  +[SymptomExpertSystemHandler internalStateDictionary]
  +[SymptomExpertSystemHandler configureClass:]
  +[SymptomExpertSystemHandler libtraceInfo:]
  +[SymptomExpertSystemHandler parseEndpoint:intoURL:host:scheme:path:]

  // instance methods
  -[SymptomExpertSystemHandler internalBuild]
  -[SymptomExpertSystemHandler setAbcCleaner:]
  -[SymptomExpertSystemHandler stepper]
  -[SymptomExpertSystemHandler noteSymptom:]
  -[SymptomExpertSystemHandler _dumpState]
  -[SymptomExpertSystemHandler rangeOfValueForSlotName:in:]
  -[SymptomExpertSystemHandler retractFacts:runAfterLastFact:]
  -[SymptomExpertSystemHandler retractFact:moduleName:run:]
  -[SymptomExpertSystemHandler probeStatusUpdate:]
  -[SymptomExpertSystemHandler requestCoreTelephonyDumpViaDiagnosticExtension:folderPrefix:dumpReason:resetBaseband:]
  -[SymptomExpertSystemHandler setAwdCLIPSMapping:]
  -[SymptomExpertSystemHandler coreTelephonyDumpStartedTo:folderPrefix:gotFilteredOut:]
  -[SymptomExpertSystemHandler runEngine]
  -[SymptomExpertSystemHandler logSessionEventMessage:]
  -[SymptomExpertSystemHandler _processSymptomsdExcessiveFailedConnections:symptomName:]
  -[SymptomExpertSystemHandler awdObserveModule:requiredModules:unloadModule:]
  -[SymptomExpertSystemHandler _processAnomalousFlowSymptom:symptomName:categoryType:]
  -[SymptomExpertSystemHandler _symptomsdSymptom:]
  -[SymptomExpertSystemHandler startLoadDefaultRulesTimer:]
  -[SymptomExpertSystemHandler setLastActiveDataSIMSignalBars:]
  -[SymptomExpertSystemHandler awdCLIPSModuleDictForModule:]
  -[SymptomExpertSystemHandler _configdSymptom:]
  -[SymptomExpertSystemHandler setObservingAWDMetrics:]
  -[SymptomExpertSystemHandler probeOutputFilePaths:forDiagSessionUUID:]
  -[SymptomExpertSystemHandler clipsReleaseMemoryTimer]
  -[SymptomExpertSystemHandler cancelAllWaitingForFactTimers]
  -[SymptomExpertSystemHandler onDisruptiveFlowChange:]
  -[SymptomExpertSystemHandler endDiagnosticSession:]
  -[SymptomExpertSystemHandler fetchCoreTelephonyLoggingEnabledStatus]
  -[SymptomExpertSystemHandler assertFactAndRun:module:reply:]
  -[SymptomExpertSystemHandler setUrlDetector:]
  -[SymptomExpertSystemHandler arbitratorDictionaryForSymptom:procName:interfaceType:eventCount:duration:]
  -[SymptomExpertSystemHandler signalStrengthChangedForSubscription:]
  -[SymptomExpertSystemHandler loggingProfileTimeoutTimer]
  -[SymptomExpertSystemHandler carrierSeedBuild]
  -[SymptomExpertSystemHandler setLastSymptomRun:]
  -[SymptomExpertSystemHandler lastActiveDataSIMOperatorName]
  -[SymptomExpertSystemHandler _removeDebuggabilityFolder]
  -[SymptomExpertSystemHandler setCompletedInitializationDate:]
  -[SymptomExpertSystemHandler unloadModule:]
  -[SymptomExpertSystemHandler setApSleep:]
  -[SymptomExpertSystemHandler urlDetector]
  -[SymptomExpertSystemHandler startDiagnosticSessionWithDomain:type:subType:subTypeContext:processID:processName:bundleID:interfaceType:threshold:sessionDuration:triggerRemoteCase:]
  -[SymptomExpertSystemHandler apSleep]
  -[SymptomExpertSystemHandler setDiagnosticSessionIdentifier:]
  -[SymptomExpertSystemHandler sdrReporter]
  -[SymptomExpertSystemHandler setClipsAWDObserverTimer:]
  -[SymptomExpertSystemHandler awdCLIPSMapping]
  -[SymptomExpertSystemHandler _processSymptomsdNoDefaultRoute:symptomName:]
  -[SymptomExpertSystemHandler setLoadDefaultRulesTimer:]
  -[SymptomExpertSystemHandler resetPreviousObfuscations]
  -[SymptomExpertSystemHandler deactivateModule:]
  -[SymptomExpertSystemHandler assertRelayFact:forRelayKey:moduleName:]
  -[SymptomExpertSystemHandler dealloc]
  -[SymptomExpertSystemHandler privateConnection]
  -[SymptomExpertSystemHandler lastActiveDataSIMSignalBars]
  -[SymptomExpertSystemHandler setProcessedSymptoms:]
  -[SymptomExpertSystemHandler setSdrReporter:]
  -[SymptomExpertSystemHandler loadModule:requiresBasebandModule:]
  -[SymptomExpertSystemHandler clipsConsoleOutput:consoleChannel:forEngine:]
  -[SymptomExpertSystemHandler setLibtraceOSLogWhiteList:]
  -[SymptomExpertSystemHandler internalStateDictionary]
  -[SymptomExpertSystemHandler serviceRemoved:type:]
  -[SymptomExpertSystemHandler loadDefaultRulesTimer]
  -[SymptomExpertSystemHandler setLastActiveDataSIMOperatorName:]
  -[SymptomExpertSystemHandler _bringStateToIdle]
  -[SymptomExpertSystemHandler caseSignatures]
  -[SymptomExpertSystemHandler addDiagnosticSession:hasDictionary:endSession:]
  -[SymptomExpertSystemHandler startAWDObserverTimer]
  -[SymptomExpertSystemHandler diagnosticSessionIdentifier]
  -[SymptomExpertSystemHandler cancelWaitForFactWithTemplateName:]
  -[SymptomExpertSystemHandler registerAllCLIPSCallbacks]
  -[SymptomExpertSystemHandler _removeAllObservers]
  -[SymptomExpertSystemHandler .cxx_destruct]
  -[SymptomExpertSystemHandler internalOrCarrierSeedBuild]
  -[SymptomExpertSystemHandler diagSessionExpectedEnd]
  -[SymptomExpertSystemHandler checkObfuscationsInAllCaseSignatures]
  -[SymptomExpertSystemHandler startAWDObserving:]
  -[SymptomExpertSystemHandler assertFactAsSymptom:module:]
  -[SymptomExpertSystemHandler cancelDiagnosticSession:]
  -[SymptomExpertSystemHandler setDiagSessionExpectedEnd:]
  -[SymptomExpertSystemHandler waitForFactWithTemplateName:module:timeout:]
  -[SymptomExpertSystemHandler _removeExternalRelayObservers]
  -[SymptomExpertSystemHandler didInstallProfileForKey:]
  -[SymptomExpertSystemHandler setActiveDataSIMSignalBars:]
  -[SymptomExpertSystemHandler stopAWDObserving:]
  -[SymptomExpertSystemHandler primaryComponent:obfuscationType:]
  -[SymptomExpertSystemHandler _processSymptomsdEnergyBackgroundRRCExcActivity:symptomName:]
  -[SymptomExpertSystemHandler sendCaseSignaturesToSDRWithSessionID:]
  -[SymptomExpertSystemHandler symptomsAWDObserver]
  -[SymptomExpertSystemHandler customerSeedBuild]
  -[SymptomExpertSystemHandler unloadAWDObservedModules]
  -[SymptomExpertSystemHandler processRelayStateChange:key:relay:scalar:]
  -[SymptomExpertSystemHandler setMaximumDiagnosingTime:]
  -[SymptomExpertSystemHandler serviceAdded:type:]
  -[SymptomExpertSystemHandler fileCleanupComplete]
  -[SymptomExpertSystemHandler setFilteredCTDumps:]
  -[SymptomExpertSystemHandler setLoggingProfileTimeoutTimer:]
  -[SymptomExpertSystemHandler libtraceOSLogWhiteList]
  -[SymptomExpertSystemHandler pendingOTACLIPSUpdates]
  -[SymptomExpertSystemHandler _libnetcoreSymptom:]
  -[SymptomExpertSystemHandler observeValueForKeyPath:ofObject:change:context:]
  -[SymptomExpertSystemHandler loadDefaultRules]
  -[SymptomExpertSystemHandler ingestPendingOTAUpdates]
  -[SymptomExpertSystemHandler setActiveDataSIMOperatorName:]
  -[SymptomExpertSystemHandler analyticsConfigObserver]
  -[SymptomExpertSystemHandler startDiagnosticSessionWithDomain:type:subType:subTypeContext:processID:processName:bundleID:interfaceType:threshold:sessionDuration:]
  -[SymptomExpertSystemHandler obfuscations]
  -[SymptomExpertSystemHandler handleEvent:]
  -[SymptomExpertSystemHandler setDiagnosticSessionOutput:]
  -[SymptomExpertSystemHandler filteredCTDumps]
  -[SymptomExpertSystemHandler diagnosticSessionOutput]
  -[SymptomExpertSystemHandler _administrativeDisable]
  -[SymptomExpertSystemHandler _performSeedCleanup]
  -[SymptomExpertSystemHandler _libtraceOSLog:]
  -[SymptomExpertSystemHandler setVendorBuild:]
  -[SymptomExpertSystemHandler setAwdCLIPSModules:]
  -[SymptomExpertSystemHandler obfuscatedSubcomponent:fromPrimaryEntry:withKey:obfuscation:]
  -[SymptomExpertSystemHandler setInternalOrCarrierSeedBuild:]
  -[SymptomExpertSystemHandler setCarrierSeedBuild:]
  -[SymptomExpertSystemHandler setStepper:]
  -[SymptomExpertSystemHandler isAWDEventEligibleForCLIPSIngestion:]
  -[SymptomExpertSystemHandler _airplaySymptom:]
  -[SymptomExpertSystemHandler deParamsDictForDiagnosticExtension:withDEParams:]
  -[SymptomExpertSystemHandler _processSymptomsdMbufPeak:symptomName:]
  -[SymptomExpertSystemHandler processedSymptoms]
  -[SymptomExpertSystemHandler abcCleaner]
  -[SymptomExpertSystemHandler setClipsResetTimer:]
  -[SymptomExpertSystemHandler diagnosingStrobeInterval]
  -[SymptomExpertSystemHandler setCaseSignatures:]
  -[SymptomExpertSystemHandler setCustomerSeedBuild:]
  -[SymptomExpertSystemHandler clipsAWDObserverTimer]
  -[SymptomExpertSystemHandler observer:didChangeConfiguration:type:]
  -[SymptomExpertSystemHandler setPrivateConnection:]
  -[SymptomExpertSystemHandler setIncomingSymptoms:]
  -[SymptomExpertSystemHandler clipsFactsWaitTimers]
  -[SymptomExpertSystemHandler setObfuscations:]
  -[SymptomExpertSystemHandler activeDataSIMSignalBars]
  -[SymptomExpertSystemHandler serviceUpdated:type:]
  -[SymptomExpertSystemHandler obfuscatedPrimaryComponent:obfuscationType:]
  -[SymptomExpertSystemHandler setDiagnosingStrobeInterval:]
  -[SymptomExpertSystemHandler probeFactString:module:goIntoDiagnosing:run:]
  -[SymptomExpertSystemHandler _processSymptomsdWiFiShimSymptom:symptomName:]
  -[SymptomExpertSystemHandler _processLibnetcoreSymptom:symptomName:]
  -[SymptomExpertSystemHandler logSessionEventProbe:endpoint:interface:status:]
  -[SymptomExpertSystemHandler coreTelephonyDumpCompletedTo:folderPrefix:]
  -[SymptomExpertSystemHandler awdCLIPSModules]
  -[SymptomExpertSystemHandler setProbeManager:]
  -[SymptomExpertSystemHandler getBatteryPercentage:]
  -[SymptomExpertSystemHandler _administrativeEnable]
  -[SymptomExpertSystemHandler urlIsAppleDomain:]
  -[SymptomExpertSystemHandler _processUIPerformanceThunderingHerdCase:symptomName:]
  -[SymptomExpertSystemHandler assertFactString:moduleName:run:]
  -[SymptomExpertSystemHandler obfuscatedEndpoint:]
  -[SymptomExpertSystemHandler processWiFiAssociationChange:atTime:]
  -[SymptomExpertSystemHandler _usageUpdaterSymptom:]
  -[SymptomExpertSystemHandler processIncomingOTAUpdate:]
  -[SymptomExpertSystemHandler completedInitializationDate]
  -[SymptomExpertSystemHandler _processSymptomsdFlowCountExceededThreshold:symptomName:]
  -[SymptomExpertSystemHandler retractService:type:]
  -[SymptomExpertSystemHandler _bringStateToDiagnosing]
  -[SymptomExpertSystemHandler releaseAllRelayFacts]
  -[SymptomExpertSystemHandler probeManager]
  -[SymptomExpertSystemHandler observingAWDMetrics]
  -[SymptomExpertSystemHandler _processSymptomsdEnergyBackgroundFullActivityMap:symptomName:]
  -[SymptomExpertSystemHandler setDefaultFacts]
  -[SymptomExpertSystemHandler _addAllObservers]
  -[SymptomExpertSystemHandler _processSymptomsdRnfSymptom:symptomName:categoryType:]
  -[SymptomExpertSystemHandler activeDataSIMOperatorName]
  -[SymptomExpertSystemHandler symptomDictionaryForSymptom:domain:type:]
  -[SymptomExpertSystemHandler setClipsReleaseMemoryTimer:]
  -[SymptomExpertSystemHandler operatorNameChangedForSubscription:]
  -[SymptomExpertSystemHandler setClipsFactsWaitTimers:]
  -[SymptomExpertSystemHandler clipsResetTimer]
  -[SymptomExpertSystemHandler lastSymptomRun]
  -[SymptomExpertSystemHandler vendorBuild]
  -[SymptomExpertSystemHandler getOperatorName]
  -[SymptomExpertSystemHandler _bringStateToRunning]
  -[SymptomExpertSystemHandler setValue:forKey:toEBFProfiles:]
  -[SymptomExpertSystemHandler _addExternalRelayObservers]
  -[SymptomExpertSystemHandler incomingSymptoms]
  -[SymptomExpertSystemHandler postAWDEvent:]
  -[SymptomExpertSystemHandler setAnalyticsConfigObserver:]
  -[SymptomExpertSystemHandler serviceToFactString:type:]
  -[SymptomExpertSystemHandler _completeInitialization]
  -[SymptomExpertSystemHandler init]
  -[SymptomExpertSystemHandler snapshotDiagnosticSessionWithDomain:type:subType:subTypeContext:processID:processName:bundleID:interfaceType:threshold:sessionDuration:]
  -[SymptomExpertSystemHandler logSessionEventSymptom:process:endpoint:interface:]
  -[SymptomExpertSystemHandler maximumDiagnosingTime]
  -[SymptomExpertSystemHandler setInternalBuild:]
  -[SymptomExpertSystemHandler getSignalBars]
  -[SymptomExpertSystemHandler interfaceTypeForName:]
  -[SymptomExpertSystemHandler adjustStrobeTimerInterval:maximum:]


SymptomsAWDObserverDelegateEntry : NSObject
 @property  <SymptomsAWDObserverDelegate> *delegate
 @property  NSMutableSet *events
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[SymptomsAWDObserverDelegateEntry events]
  -[SymptomsAWDObserverDelegateEntry setDelegate:]
  -[SymptomsAWDObserverDelegateEntry delegate]
  -[SymptomsAWDObserverDelegateEntry .cxx_destruct]
  -[SymptomsAWDObserverDelegateEntry setEvents:]
  -[SymptomsAWDObserverDelegateEntry setQueue:]
  -[SymptomsAWDObserverDelegateEntry queue]
  -[SymptomsAWDObserverDelegateEntry matchesDelegate:]
  -[SymptomsAWDObserverDelegateEntry isEqual:]


SymptomsAWDObserver : NSObject <AWDObserverDelegate>
 @property  AWDObserver *awdObserver
 @property  NSMutableArray *delegates
 @property  NSMutableSet *combinedEvents
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SymptomsAWDObserver sharedInstance]

  // instance methods
  -[SymptomsAWDObserver delegates]
  -[SymptomsAWDObserver setDelegates:]
  -[SymptomsAWDObserver addDelegate:forEvents:withQueue:completion:]
  -[SymptomsAWDObserver combinedEvents]
  -[SymptomsAWDObserver setCombinedEvents:]
  -[SymptomsAWDObserver dealloc]
  -[SymptomsAWDObserver .cxx_destruct]
  -[SymptomsAWDObserver setQueue:]
  -[SymptomsAWDObserver awdObserver]
  -[SymptomsAWDObserver observer:handleEvent:]
  -[SymptomsAWDObserver queue]
  -[SymptomsAWDObserver setAwdObserver:]
  -[SymptomsAWDObserver removeDelegate:withQueue:completion:]
  -[SymptomsAWDObserver updateAWDObserverRegistrationOnQueueWithCompletion:completionQueue:]
  -[SymptomsAWDObserver init]


FilterHandler : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FilterHandler sharedInstance]
  +[FilterHandler configureClass:]

  // instance methods
  -[FilterHandler read:returnedValues:]
  -[FilterHandler noteSymptom:]
  -[FilterHandler configureSubsystem:]
  -[FilterHandler configureInstance:]
  -[FilterHandler evaluate:]
  -[FilterHandler init]


AWDSymptomsNetworkAnalyticsPredictions : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNetworkType
 @property  int networkType
 @property  BOOL hasTimeSinceLastTrainedSecs
 @property  unsigned long timeSinceLastTrainedSecs
 @property  BOOL hasTrainingCompletionCode
 @property  int trainingCompletionCode
 @property  BOOL hasLifetimeOldestItemSecs
 @property  unsigned long lifetimeOldestItemSecs
 @property  BOOL hasTrainingProgress1000
 @property  unsigned int trainingProgress1000
 @property  BOOL hasPredictionErrorOver24hr1000
 @property  unsigned int predictionErrorOver24hr1000
 @property  BOOL hasUniquePredictionClients
 @property  unsigned long uniquePredictionClients
 @property  BOOL hasPredictionQueries
 @property  unsigned long predictionQueries
 @property  BOOL hasModelRecalls
 @property  unsigned long modelRecalls
 @property  BOOL hasModelGraphPullups
 @property  unsigned long modelGraphPullups
 @property  BOOL hasTimeZoneMarker
 @property  unsigned int timeZoneMarker
 @property  BOOL hasCalendarTypeMarker
 @property  unsigned int calendarTypeMarker
 @property  BOOL hasDayAlikeGroups
 @property  unsigned int dayAlikeGroups

  // instance methods
  -[AWDSymptomsNetworkAnalyticsPredictions setNetworkType:]
  -[AWDSymptomsNetworkAnalyticsPredictions networkType]
  -[AWDSymptomsNetworkAnalyticsPredictions setTimestamp:]
  -[AWDSymptomsNetworkAnalyticsPredictions copyTo:]
  -[AWDSymptomsNetworkAnalyticsPredictions mergeFrom:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasTimestamp:]
  -[AWDSymptomsNetworkAnalyticsPredictions dictionaryRepresentation]
  -[AWDSymptomsNetworkAnalyticsPredictions hasTimestamp]
  -[AWDSymptomsNetworkAnalyticsPredictions copyWithZone:]
  -[AWDSymptomsNetworkAnalyticsPredictions timestamp]
  -[AWDSymptomsNetworkAnalyticsPredictions readFrom:]
  -[AWDSymptomsNetworkAnalyticsPredictions writeTo:]
  -[AWDSymptomsNetworkAnalyticsPredictions isEqual:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasNetworkType:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasNetworkType]
  -[AWDSymptomsNetworkAnalyticsPredictions networkTypeAsString:]
  -[AWDSymptomsNetworkAnalyticsPredictions StringAsNetworkType:]
  -[AWDSymptomsNetworkAnalyticsPredictions setTimeSinceLastTrainedSecs:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasTimeSinceLastTrainedSecs:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasTimeSinceLastTrainedSecs]
  -[AWDSymptomsNetworkAnalyticsPredictions trainingCompletionCode]
  -[AWDSymptomsNetworkAnalyticsPredictions setTrainingCompletionCode:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasTrainingCompletionCode:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasTrainingCompletionCode]
  -[AWDSymptomsNetworkAnalyticsPredictions trainingCompletionCodeAsString:]
  -[AWDSymptomsNetworkAnalyticsPredictions StringAsTrainingCompletionCode:]
  -[AWDSymptomsNetworkAnalyticsPredictions setLifetimeOldestItemSecs:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasLifetimeOldestItemSecs:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasLifetimeOldestItemSecs]
  -[AWDSymptomsNetworkAnalyticsPredictions setTrainingProgress1000:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasTrainingProgress1000:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasTrainingProgress1000]
  -[AWDSymptomsNetworkAnalyticsPredictions setPredictionErrorOver24hr1000:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasPredictionErrorOver24hr1000:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasPredictionErrorOver24hr1000]
  -[AWDSymptomsNetworkAnalyticsPredictions setUniquePredictionClients:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasUniquePredictionClients:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasUniquePredictionClients]
  -[AWDSymptomsNetworkAnalyticsPredictions setPredictionQueries:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasPredictionQueries:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasPredictionQueries]
  -[AWDSymptomsNetworkAnalyticsPredictions setModelRecalls:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasModelRecalls:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasModelRecalls]
  -[AWDSymptomsNetworkAnalyticsPredictions setModelGraphPullups:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasModelGraphPullups:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasModelGraphPullups]
  -[AWDSymptomsNetworkAnalyticsPredictions setTimeZoneMarker:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasTimeZoneMarker:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasTimeZoneMarker]
  -[AWDSymptomsNetworkAnalyticsPredictions setCalendarTypeMarker:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasCalendarTypeMarker:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasCalendarTypeMarker]
  -[AWDSymptomsNetworkAnalyticsPredictions setDayAlikeGroups:]
  -[AWDSymptomsNetworkAnalyticsPredictions setHasDayAlikeGroups:]
  -[AWDSymptomsNetworkAnalyticsPredictions hasDayAlikeGroups]
  -[AWDSymptomsNetworkAnalyticsPredictions timeSinceLastTrainedSecs]
  -[AWDSymptomsNetworkAnalyticsPredictions lifetimeOldestItemSecs]
  -[AWDSymptomsNetworkAnalyticsPredictions trainingProgress1000]
  -[AWDSymptomsNetworkAnalyticsPredictions predictionErrorOver24hr1000]
  -[AWDSymptomsNetworkAnalyticsPredictions uniquePredictionClients]
  -[AWDSymptomsNetworkAnalyticsPredictions predictionQueries]
  -[AWDSymptomsNetworkAnalyticsPredictions modelRecalls]
  -[AWDSymptomsNetworkAnalyticsPredictions modelGraphPullups]
  -[AWDSymptomsNetworkAnalyticsPredictions timeZoneMarker]
  -[AWDSymptomsNetworkAnalyticsPredictions calendarTypeMarker]
  -[AWDSymptomsNetworkAnalyticsPredictions dayAlikeGroups]


AWDAgent : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  AWDServerConnection *symptomsAWDConnection
 @property  AWDServerConnection *libnetcoreAWDConnection
 @property  AWDServerConnection *cfnetworkAWDConnection
 @property  NSSet *awdSymptomsConfiguredMetricIds
 @property  NSSet *awdLibnetcoreConfiguredMetricIds
 @property  NSSet *awdCFNetworkConfiguredMetricIds

  // class methods
  +[AWDAgent defaultInstance]

  // instance methods
  -[AWDAgent postMetric:withIdentifier:]
  -[AWDAgent awdCFNetworkConfiguredMetricIds]
  -[AWDAgent libnetcoreAWDConnection]
  -[AWDAgent postMetric:withIdentifier:libnetcore:]
  -[AWDAgent setAwdLibnetcoreConfiguredMetricIds:]
  -[AWDAgent postMetricForSignificantEventWithName:errorContext:error:status:]
  -[AWDAgent dealloc]
  -[AWDAgent overridePostMetricConfig]
  -[AWDAgent setLibnetcoreAWDConnection:]
  -[AWDAgent .cxx_destruct]
  -[AWDAgent setAwdCFNetworkConfiguredMetricIds:]
  -[AWDAgent _handleQuery:]
  -[AWDAgent awdSymptomsConfiguredMetricIds]
  -[AWDAgent shouldSendMetric:]
  -[AWDAgent postMetricForSignificantEvent:errorContext:error:status:]
  -[AWDAgent _postMetricForSignificantEvent:orEventName:errorContext:error:status:]
  -[AWDAgent awdLibnetcoreConfiguredMetricIds]
  -[AWDAgent setQueue:]
  -[AWDAgent bulkPostMetrics:withIdentifier:libnetcore:]
  -[AWDAgent symptomsAWDConnection]
  -[AWDAgent cfnetworkAWDConnection]
  -[AWDAgent queue]
  -[AWDAgent setCfnetworkAWDConnection:]
  -[AWDAgent setSymptomsAWDConnection:]
  -[AWDAgent setAwdSymptomsConfiguredMetricIds:]
  -[AWDAgent init]


NWActivityAlgosScore : NSObject
 @property  NSMutableDictionary *recordedScores

  // class methods
  +[NWActivityAlgosScore sharedInstance]
  +[NWActivityAlgosScore processingComplete]
  +[NWActivityAlgosScore processNWActivitySuperMetric:]

  // instance methods
  -[NWActivityAlgosScore .cxx_destruct]
  -[NWActivityAlgosScore init]
  -[NWActivityAlgosScore _processingComplete]
  -[NWActivityAlgosScore _processNWActivityConnections:]
  -[NWActivityAlgosScore _processNWActivityTransactions:scoreDict:]
  -[NWActivityAlgosScore _scoreDictForBundleID:effectiveBundleID:]
  -[NWActivityAlgosScore _processNWActivitySuperMetric:]
  -[NWActivityAlgosScore _postSymptomFor:withScore:]
  -[NWActivityAlgosScore recordedScores]
  -[NWActivityAlgosScore setRecordedScores:]


TimedAppEndpoint : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  unsigned long type

  // class methods
  +[TimedAppEndpoint supportsSecureCoding]

  // instance methods
  -[TimedAppEndpoint encodeWithCoder:]
  -[TimedAppEndpoint type]
  -[TimedAppEndpoint .cxx_destruct]
  -[TimedAppEndpoint copyWithZone:]
  -[TimedAppEndpoint name]
  -[TimedAppEndpoint isEqual:]
  -[TimedAppEndpoint initWithCoder:]
  -[TimedAppEndpoint initWithEndpointName:type:]
  -[TimedAppEndpoint markResolved]


FlowAnalyticsEngine : AnalyticsEngineCore <ProxyAnalyticsDelegate, NWUsageManagerDelegate, FlowImmediateRefreshDelegate, CellThroughputAdviserDelegate, ManagedEventInfoProtocol>
 @property  CellularStateRelay *cellRelay
 @property  NetworkAnalyticsStateRelay *wifiRelay
 @property  NetworkAnalyticsStateRelay *mostRecentPrimaryRelay
 @property  BOOL delegateToProxyAnalytics
 @property  ProxyAnalytics *proxyAnalytics
 @property  BOOL haveCalendar
 @property  BOOL haveTypicalUsage
 @property  NSMutableDictionary *flowWatchers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FlowAnalyticsEngine sharedInstance]
  +[FlowAnalyticsEngine summaryAppDomainUsageBy:reply:]
  +[FlowAnalyticsEngine appsWithFlowsPassingTest:replyQueue:reply:]
  +[FlowAnalyticsEngine performAppEndpointTrackingPeriodicActivityWithReply:]
  +[FlowAnalyticsEngine appBundleIdentifierIsWebBrowser:]
  +[FlowAnalyticsEngine performAppTrackingPeriodicActivityWithReply:]
  +[FlowAnalyticsEngine endRNFPeriod]
  +[FlowAnalyticsEngine identifierForUUID:replyQueue:reply:]
  +[FlowAnalyticsEngine performAppPeriodicActivityWithReply:]
  +[FlowAnalyticsEngine hasAnyForegroundApp]
  +[FlowAnalyticsEngine appBundleIdentifierFromBundleIdentifier:]
  +[FlowAnalyticsEngine performAppTrackingActionWithOptions:userId:reply:]
  +[FlowAnalyticsEngine appBundleIdentifierFromAuditToken:]
  +[FlowAnalyticsEngine foregroundAppKeys]
  +[FlowAnalyticsEngine recentUsageForApps:replyQueue:reply:]
  +[FlowAnalyticsEngine queue]
  +[FlowAnalyticsEngine performAppExperiencePeriodicActivityWithReply:]
  +[FlowAnalyticsEngine checkForegroundStateForProcessWithUUID:replyQueue:reply:]
  +[FlowAnalyticsEngine workspaceSaveWithCallback:]

  // instance methods
  -[FlowAnalyticsEngine getOption:]
  -[FlowAnalyticsEngine _dumpState]
  -[FlowAnalyticsEngine identifierForUUID:reply:]
  -[FlowAnalyticsEngine pollFlows:]
  -[FlowAnalyticsEngine identifierForUUID:queue:reply:]
  -[FlowAnalyticsEngine _compactUsageForApp:intervalType:givenLastRun:]
  -[FlowAnalyticsEngine _saveAndUnloadSelectState]
  -[FlowAnalyticsEngine _liveUsageCountForProcess:subscriberTag:]
  -[FlowAnalyticsEngine _parseEvent:withGeneration:]
  -[FlowAnalyticsEngine _updateDeterminedTrackersFromAPICountForUserId:bundleName:increment:]
  -[FlowAnalyticsEngine setWifiRelay:]
  -[FlowAnalyticsEngine _handleAppTrackingNotification:]
  -[FlowAnalyticsEngine _updateLiveUsage:wifiIn:wifiOut:cellIn:cellOut:wiredIn:wiredOut:xIn:xOut:isJumboFlow:isExpensive:closing:]
  -[FlowAnalyticsEngine clearAppDomainUsageForUserWithID:]
  -[FlowAnalyticsEngine _reportThresholdedFlowCount:threshold:]
  -[FlowAnalyticsEngine domainInfoProcessingForSnapshot:process:attributedName:remoteAddress:isWebBrowser:]
  -[FlowAnalyticsEngine _handleEndpointTrackingNotification:]
  -[FlowAnalyticsEngine _liveUsageFetchForProcess:]
  -[FlowAnalyticsEngine _changedForegroundState:forBundle:]
  -[FlowAnalyticsEngine performAppPeriodicTasksComplete:error:]
  -[FlowAnalyticsEngine storeSnapshotFlowUUID:forSourceKey:]
  -[FlowAnalyticsEngine _performAppLevelAppDomainUsageAnalytics]
  -[FlowAnalyticsEngine requestDetailedWiFiFlowMonitoring:]
  -[FlowAnalyticsEngine resetDataFor:nameKind:]
  -[FlowAnalyticsEngine _isLiveUsageInRollingWindow:forTime:]
  -[FlowAnalyticsEngine _fetchAppEndpointsRecordForUserId:bundleName:]
  -[FlowAnalyticsEngine clearAppEndpointsForUserWithID:]
  -[FlowAnalyticsEngine postAWDMetric:withIdentifier:]
  -[FlowAnalyticsEngine _calendarUsageForApp:givenLastRun:]
  -[FlowAnalyticsEngine _pruneAppExperienceRecords]
  -[FlowAnalyticsEngine _isLiveUsageinScope:forTime:]
  -[FlowAnalyticsEngine haveTypicalUsage]
  -[FlowAnalyticsEngine flowWatchers]
  -[FlowAnalyticsEngine setMostRecentPrimaryRelay:]
  -[FlowAnalyticsEngine setCellRelay:]
  -[FlowAnalyticsEngine _appsWithFlowsPassingTest:replyQueue:reply:]
  -[FlowAnalyticsEngine _clearStaleNetDomainsRecords]
  -[FlowAnalyticsEngine dealloc]
  -[FlowAnalyticsEngine usageManager:thresholdReachedOn:]
  -[FlowAnalyticsEngine sendPowerLogReport:isStart:]
  -[FlowAnalyticsEngine haveCalendar]
  -[FlowAnalyticsEngine performQueryOnEntity:fetchRequestProperties:pred:sort:actions:service:connection:reply:]
  -[FlowAnalyticsEngine requestDetailedCellFlowMonitoring:]
  -[FlowAnalyticsEngine setDelegateToProxyAnalytics:]
  -[FlowAnalyticsEngine .cxx_destruct]
  -[FlowAnalyticsEngine logOutcomeArray:]
  -[FlowAnalyticsEngine performQueryPostProcessing:actions:processOutcome:]
  -[FlowAnalyticsEngine _refreshFullDataUsageWithCallback:]
  -[FlowAnalyticsEngine _summaryAppDomainUsageBy:reply:]
  -[FlowAnalyticsEngine _pruneFlowHistory]
  -[FlowAnalyticsEngine _updateTetheringUsage:]
  -[FlowAnalyticsEngine setOption:]
  -[FlowAnalyticsEngine usageManager:didReceiveGenericSnapshot:]
  -[FlowAnalyticsEngine setHaveCalendar:]
  -[FlowAnalyticsEngine performAppTrackingActionWithOptions:userId:reply:]
  -[FlowAnalyticsEngine _fetchFromProcCacheWithName:]
  -[FlowAnalyticsEngine performAppEndpointTrackingPeriodicTasksComplete:error:]
  -[FlowAnalyticsEngine delegateToProxyAnalytics]
  -[FlowAnalyticsEngine setHaveTypicalUsage:]
  -[FlowAnalyticsEngine cellRelay]
  -[FlowAnalyticsEngine mostRecentPrimaryRelay]
  -[FlowAnalyticsEngine _trafficEnvelopeToTier:]
  -[FlowAnalyticsEngine _appDomainUsageBy:bundleName:forDomain:domainOwner:domainType:domainClassification:context:contextVerificationType:initiatedType:]
  -[FlowAnalyticsEngine _shouldSendStatisticsReport:]
  -[FlowAnalyticsEngine _handlesFlowEntity:]
  -[FlowAnalyticsEngine relayCellThroughputAdvice:at:]
  -[FlowAnalyticsEngine _noteSizeableBackgroundTransferEvent:]
  -[FlowAnalyticsEngine _performAppEndpointTrackingPeriodicTasksWithReply:]
  -[FlowAnalyticsEngine _removeInfoFromWorkspaceForProcess:]
  -[FlowAnalyticsEngine _performAppPeriodicTasksWithReply:]
  -[FlowAnalyticsEngine _performAppTrackingPeriodicTasksWithReply:]
  -[FlowAnalyticsEngine proxyAnalytics]
  -[FlowAnalyticsEngine _generateFlowAnomalySymptom:currentUsage:snapshot:]
  -[FlowAnalyticsEngine _submitAppDomainUsageRecordInfoAnalytics]
  -[FlowAnalyticsEngine clearAppEndpoints:]
  -[FlowAnalyticsEngine _clearUninstalledAppEntries]
  -[FlowAnalyticsEngine endpointMaintenanceOnClose:]
  -[FlowAnalyticsEngine getNetworkBitmapsWithNames:startTime:endTime:reply:]
  -[FlowAnalyticsEngine submitNetworkDomainUsageToDateSPICallMetric]
  -[FlowAnalyticsEngine _handleSnapshotForDomains:]
  -[FlowAnalyticsEngine _foregroundAppKeys]
  -[FlowAnalyticsEngine _hasAnyForegroundApp]
  -[FlowAnalyticsEngine _processNameIsValid:]
  -[FlowAnalyticsEngine _refreshFullDataUsageComplete]
  -[FlowAnalyticsEngine _evalDomainTrackingDropOf:]
  -[FlowAnalyticsEngine observeValueForKeyPath:ofObject:change:context:]
  -[FlowAnalyticsEngine _flowFetchForName:]
  -[FlowAnalyticsEngine performQueryOnEntityFromCache:pred:altpred:actions:found:]
  -[FlowAnalyticsEngine _has1stPartyImpliedBundleNameBehavior:]
  -[FlowAnalyticsEngine _startMonitoringNetworkInterface:usingThreshold:]
  -[FlowAnalyticsEngine _newExpectedTransfer:]
  -[FlowAnalyticsEngine _requiresUserValidationPredicateForEntity:]
  -[FlowAnalyticsEngine _algosScoreFor:score:]
  -[FlowAnalyticsEngine _removeAllInfoForProcess:withUUID:]
  -[FlowAnalyticsEngine _refreshFullDataUsage]
  -[FlowAnalyticsEngine _performAppExperiencePeriodicTasksWithReply:]
  -[FlowAnalyticsEngine generateInfoForId:context:uuid:completionBlock:]
  -[FlowAnalyticsEngine _performQueryOnEntityFromInstantFlowCache:target:pred:found:]
  -[FlowAnalyticsEngine _appEndpointsInProcess:]
  -[FlowAnalyticsEngine _clearStaleAppEndpointRecords]
  -[FlowAnalyticsEngine _insertProcCache:underName:]
  -[FlowAnalyticsEngine _checkCellExcessUsageActions:previous:snapshot:]
  -[FlowAnalyticsEngine _processFetchForName:bundle:shouldFillMiss:]
  -[FlowAnalyticsEngine _didReceiveSnapshot:]
  -[FlowAnalyticsEngine createAppEndpointsStorageForUserId:]
  -[FlowAnalyticsEngine startObservingLaunchServices]
  -[FlowAnalyticsEngine _generateInfoForId:context:uuid:completionBlock:]
  -[FlowAnalyticsEngine _newFlowData:]
  -[FlowAnalyticsEngine relayAudioVideoStatus:rxThroughput:txThroughput:at:reset:]
  -[FlowAnalyticsEngine createSnapshotFor:pred:actions:reply:]
  -[FlowAnalyticsEngine submitAppEndpointToDateSPICallMetric]
  -[FlowAnalyticsEngine handlesEntity:]
  -[FlowAnalyticsEngine _submitAppEndpointRecordInfoAnalytics]
  -[FlowAnalyticsEngine _applyCountsTo:fromLiveUsage:mustReset:]
  -[FlowAnalyticsEngine _handleApplicationNotificationStateChangedForBundleName:edgeMode:intervalType:]
  -[FlowAnalyticsEngine _stopMonitoringNetworkInterface:]
  -[FlowAnalyticsEngine _isLiveFlowPerfinScope:forTime:andTag:]
  -[FlowAnalyticsEngine _logExcessCellUsage:snapshot:]
  -[FlowAnalyticsEngine initWithWorkspace:params:queue:]
  -[FlowAnalyticsEngine _newCoreMediaAssetDownloadEvent:]
  -[FlowAnalyticsEngine _initializeLocalCache]
  -[FlowAnalyticsEngine _shouldProcessDomainInfoForBundleID:implicit:knownToLaunchServices:ignoredInLaunchServices:isWebBrowser:]
  -[FlowAnalyticsEngine _clearAppDomainAndEndpointTrackingForUserWithID:]
  -[FlowAnalyticsEngine _performQueryOnEntityFromProcCache:target:pred:found:]
  -[FlowAnalyticsEngine updateEffectiveUserId:]
  -[FlowAnalyticsEngine performAppTrackingPeriodicTasksComplete:error:]
  -[FlowAnalyticsEngine wifiRelay]
  -[FlowAnalyticsEngine _handlesProcEntity:]
  -[FlowAnalyticsEngine clearAppDomainUsage:]
  -[FlowAnalyticsEngine _handleApplicationNotificationCompactForBundleName:edgeMode:]
  -[FlowAnalyticsEngine _startFlowMonitoring]
  -[FlowAnalyticsEngine _usageFingerprintForBundleName:]
  -[FlowAnalyticsEngine _endRNFPeriod]
  -[FlowAnalyticsEngine _resolveAppEndpointsForUserId:bundleName:]
  -[FlowAnalyticsEngine _liveUsagePackForProcess:subscriberTag:]
  -[FlowAnalyticsEngine _appExperienceForApp:forTime:]
  -[FlowAnalyticsEngine _bundleBackgroundAudioCapable:]
  -[FlowAnalyticsEngine stopObservingLaunchServices]
  -[FlowAnalyticsEngine _recentUsageForApps:replyQueue:reply:]
  -[FlowAnalyticsEngine _sendStatisticsReport:]
  -[FlowAnalyticsEngine _archiveRecord:]
  -[FlowAnalyticsEngine _archiveAppEndpointsForUserId:bundleName:]
  -[FlowAnalyticsEngine setProxyAnalytics:]
  -[FlowAnalyticsEngine _updateAppEndpoints:type:userId:bundleName:flowClosing:]
  -[FlowAnalyticsEngine _removeFromProcCache:]
  -[FlowAnalyticsEngine isSnapshotFlowUUIDStored:]
  -[FlowAnalyticsEngine _reportDomainTrackingDropFor:withCause:detail:]
  -[FlowAnalyticsEngine _appBundleIdentifierIsWebBrowser:]
  -[FlowAnalyticsEngine _removeOldFlowRecords]
  -[FlowAnalyticsEngine _attemptConvertingPluginNameToContainingAppName:]
  -[FlowAnalyticsEngine _handleSnapshot:]
  -[FlowAnalyticsEngine _fetchFromFlowCacheWithName:]
  -[FlowAnalyticsEngine workspaceSaveWithCallback:]
  -[FlowAnalyticsEngine _repurposeAppEndpointRecords:]
  -[FlowAnalyticsEngine _performSystemLevelAppDomainUsageAnalytics]
  -[FlowAnalyticsEngine performThresholdingOn:forKey:andValue:connection:createdBlock:hitBlock:errorBlock:]
  -[FlowAnalyticsEngine handleLaunchServicesApplicationUnregistration:]
  -[FlowAnalyticsEngine performAppExperiencePeriodicTasksComplete:error:]
  -[FlowAnalyticsEngine _checkForegroundStateForProcessWithUUID:replyQueue:reply:]
  -[FlowAnalyticsEngine removeSnapshotFlowUUIDsForSourceKey:]


TimedAction : NSObject
 @property  NSUUID *connectionId
 @property  int interfaceIndex
 @property  NSString *owner
 @property  NSDate *entryTime
 @property  unsigned long target

  // instance methods
  -[TimedAction owner]
  -[TimedAction initWithConnId:interfaceIndex:owner:target:]
  -[TimedAction setTarget:]
  -[TimedAction connectionId]
  -[TimedAction target]
  -[TimedAction dealloc]
  -[TimedAction .cxx_destruct]
  -[TimedAction entryTime]
  -[TimedAction interfaceIndex]


ProgressTargetHandler : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ProgressTargetHandler sharedInstance]
  +[ProgressTargetHandler configureClass:]

  // instance methods
  -[ProgressTargetHandler read:returnedValues:]
  -[ProgressTargetHandler noteSymptom:]
  -[ProgressTargetHandler configureInstance:]
  -[ProgressTargetHandler pruneActions]
  -[ProgressTargetHandler doActionsForNetworkType:]


NWActivityHelper : NSObject
  // instance methods
  -[NWActivityHelper analyticsWorkspace]
  -[NWActivityHelper .cxx_destruct]
  -[NWActivityHelper initWithQueue:]
  -[NWActivityHelper init]
  -[NWActivityHelper startNWActivitySuperMetricProcessing]
  -[NWActivityHelper cleanOutNWActivityMetrics]
  -[NWActivityHelper purgeOldNWActivityMetrics]
  -[NWActivityHelper retrieveNWActivityMetricsForActivity:completion:]
  -[NWActivityHelper _createDictionarySupermetricForActivity:withContext:]
  -[NWActivityHelper _fetchMetricsForActivity:maxChildDepth:destinationArray:]
  -[NWActivityHelper _fetchMetricsForUUID:]
  -[NWActivityHelper _deleteAllMetrics]
  -[NWActivityHelper _deleteOldMetrics]
  -[NWActivityHelper _deleteAllFragmentsMatchingPredicate:]
  -[NWActivityHelper _deleteNWActivityFragment:fromContext:]
  -[NWActivityHelper _garbageCollectNWActivityMetrics]
  -[NWActivityHelper _fetchActivitiesWithPredicate:batch:]
  -[NWActivityHelper _findNWActivityMetricsForUploading]
  -[NWActivityHelper _fetchFragmentsForUUID:fromContext:withError:]
  -[NWActivityHelper _fetchChildrenForUUID:fromContext:withError:]
  -[NWActivityHelper _createSupermetricFromFragments:forMetricUUID:]
  -[NWActivityHelper _uploadCompleteNWActivityMetrics]
  -[NWActivityHelper sendReportToMetricStream:]
  -[NWActivityHelper shouldSendMetricStream]


AWDSymptomsNetworkAnalyticsHistorical : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasNetworkType
 @property  int networkType
 @property  BOOL hasEpochs
 @property  unsigned long epochs
 @property  BOOL hasTotalStaySecs
 @property  unsigned long totalStaySecs
 @property  BOOL hasFaultyStaySecs
 @property  unsigned long faultyStaySecs
 @property  BOOL hasConnAttempts
 @property  unsigned long connAttempts
 @property  BOOL hasConnSuccess
 @property  unsigned long connSuccess
 @property  BOOL hasPacketsIn
 @property  unsigned long packetsIn
 @property  BOOL hasPacketsOut
 @property  unsigned long packetsOut
 @property  BOOL hasBytesIn
 @property  unsigned long bytesIn
 @property  BOOL hasBytesOut
 @property  unsigned long bytesOut
 @property  BOOL hasSecsSinceLastTrimmed
 @property  unsigned long secsSinceLastTrimmed
 @property  BOOL hasDnsPartialFailures
 @property  unsigned long dnsPartialFailures
 @property  BOOL hasDnsCompleteFailures
 @property  unsigned long dnsCompleteFailures

  // instance methods
  -[AWDSymptomsNetworkAnalyticsHistorical setNetworkType:]
  -[AWDSymptomsNetworkAnalyticsHistorical identifier]
  -[AWDSymptomsNetworkAnalyticsHistorical networkType]
  -[AWDSymptomsNetworkAnalyticsHistorical setTimestamp:]
  -[AWDSymptomsNetworkAnalyticsHistorical copyTo:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasIdentifier]
  -[AWDSymptomsNetworkAnalyticsHistorical .cxx_destruct]
  -[AWDSymptomsNetworkAnalyticsHistorical mergeFrom:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasTimestamp:]
  -[AWDSymptomsNetworkAnalyticsHistorical setIdentifier:]
  -[AWDSymptomsNetworkAnalyticsHistorical dictionaryRepresentation]
  -[AWDSymptomsNetworkAnalyticsHistorical hasTimestamp]
  -[AWDSymptomsNetworkAnalyticsHistorical copyWithZone:]
  -[AWDSymptomsNetworkAnalyticsHistorical timestamp]
  -[AWDSymptomsNetworkAnalyticsHistorical readFrom:]
  -[AWDSymptomsNetworkAnalyticsHistorical writeTo:]
  -[AWDSymptomsNetworkAnalyticsHistorical isEqual:]
  -[AWDSymptomsNetworkAnalyticsHistorical setBytesIn:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasBytesIn:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasBytesIn]
  -[AWDSymptomsNetworkAnalyticsHistorical setBytesOut:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasBytesOut:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasBytesOut]
  -[AWDSymptomsNetworkAnalyticsHistorical setPacketsIn:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasPacketsIn:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasPacketsIn]
  -[AWDSymptomsNetworkAnalyticsHistorical setPacketsOut:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasPacketsOut:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasPacketsOut]
  -[AWDSymptomsNetworkAnalyticsHistorical bytesIn]
  -[AWDSymptomsNetworkAnalyticsHistorical bytesOut]
  -[AWDSymptomsNetworkAnalyticsHistorical packetsIn]
  -[AWDSymptomsNetworkAnalyticsHistorical packetsOut]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasNetworkType:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasNetworkType]
  -[AWDSymptomsNetworkAnalyticsHistorical networkTypeAsString:]
  -[AWDSymptomsNetworkAnalyticsHistorical StringAsNetworkType:]
  -[AWDSymptomsNetworkAnalyticsHistorical epochs]
  -[AWDSymptomsNetworkAnalyticsHistorical connAttempts]
  -[AWDSymptomsNetworkAnalyticsHistorical setEpochs:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasEpochs:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasEpochs]
  -[AWDSymptomsNetworkAnalyticsHistorical setTotalStaySecs:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasTotalStaySecs:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasTotalStaySecs]
  -[AWDSymptomsNetworkAnalyticsHistorical setFaultyStaySecs:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasFaultyStaySecs:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasFaultyStaySecs]
  -[AWDSymptomsNetworkAnalyticsHistorical setConnAttempts:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasConnAttempts:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasConnAttempts]
  -[AWDSymptomsNetworkAnalyticsHistorical setConnSuccess:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasConnSuccess:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasConnSuccess]
  -[AWDSymptomsNetworkAnalyticsHistorical setSecsSinceLastTrimmed:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasSecsSinceLastTrimmed:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasSecsSinceLastTrimmed]
  -[AWDSymptomsNetworkAnalyticsHistorical setDnsPartialFailures:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasDnsPartialFailures:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasDnsPartialFailures]
  -[AWDSymptomsNetworkAnalyticsHistorical setDnsCompleteFailures:]
  -[AWDSymptomsNetworkAnalyticsHistorical setHasDnsCompleteFailures:]
  -[AWDSymptomsNetworkAnalyticsHistorical hasDnsCompleteFailures]
  -[AWDSymptomsNetworkAnalyticsHistorical totalStaySecs]
  -[AWDSymptomsNetworkAnalyticsHistorical faultyStaySecs]
  -[AWDSymptomsNetworkAnalyticsHistorical connSuccess]
  -[AWDSymptomsNetworkAnalyticsHistorical secsSinceLastTrimmed]
  -[AWDSymptomsNetworkAnalyticsHistorical dnsPartialFailures]
  -[AWDSymptomsNetworkAnalyticsHistorical dnsCompleteFailures]


MotionStateRelay : NSObject
 @property  int deviceOrientation
 @property  unsigned int currentMotion
 @property  BOOL isStationary

  // class methods
  +[MotionStateRelay sharedInstance]
  +[MotionStateRelay automaticallyNotifiesObserversOfIsStationary]
  +[MotionStateRelay automaticallyNotifiesObserversOfCurrentMotion]

  // instance methods
  -[MotionStateRelay isStationary]
  -[MotionStateRelay isMoving]
  -[MotionStateRelay transitionToState:]
  -[MotionStateRelay setdeviceOrientation:]
  -[MotionStateRelay subscribe]
  -[MotionStateRelay stopMotionMonitoring]
  -[MotionStateRelay startActivityUpdates]
  -[MotionStateRelay deviceOrientationString:]
  -[MotionStateRelay dealloc]
  -[MotionStateRelay stopActivityUpdates]
  -[MotionStateRelay .cxx_destruct]
  -[MotionStateRelay deviceOrientation]
  -[MotionStateRelay motionStateString:]
  -[MotionStateRelay unsubscribe]
  -[MotionStateRelay setDeviceOrientation:]
  -[MotionStateRelay initializeEngine]
  -[MotionStateRelay currentMotion]
  -[MotionStateRelay init]
  -[MotionStateRelay startMotionMonitoring]
  -[MotionStateRelay destroyEngine]


FlowRefreshRequest : NSObject
 @property  long long reference
 @property  double preferredExpiry
 @property  double scheduledExpiry
 @property  double interval
 @property  double maxStale
 @property  double maxLate
 @property  NSString *logAs
 @property  int preference
 @property  @? callback

  // instance methods
  -[FlowRefreshRequest reference]
  -[FlowRefreshRequest callback]
  -[FlowRefreshRequest setCallback:]
  -[FlowRefreshRequest logAs]
  -[FlowRefreshRequest setMaxStale:]
  -[FlowRefreshRequest scheduledExpiry]
  -[FlowRefreshRequest setInterval:]
  -[FlowRefreshRequest maxLate]
  -[FlowRefreshRequest preference]
  -[FlowRefreshRequest .cxx_destruct]
  -[FlowRefreshRequest setScheduledExpiry:]
  -[FlowRefreshRequest maxStale]
  -[FlowRefreshRequest preferredExpiry]
  -[FlowRefreshRequest setPreferredExpiry:]
  -[FlowRefreshRequest setPreference:]
  -[FlowRefreshRequest setMaxLate:]
  -[FlowRefreshRequest setLogAs:]
  -[FlowRefreshRequest setReference:]
  -[FlowRefreshRequest interval]


FlowRefreshScheduler : NSObject <ManagedEventInfoProtocol>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <FlowImmediateRefreshDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FlowRefreshScheduler dumpState]
  +[FlowRefreshScheduler sharedInstance]
  +[FlowRefreshScheduler refreshDataUsageFor:maxStale:maxDelay:logAs:callback:]

  // instance methods
  -[FlowRefreshScheduler dumpState]
  -[FlowRefreshScheduler _refreshTimer]
  -[FlowRefreshScheduler addDelegate:]
  -[FlowRefreshScheduler didPollFlowsAt:]
  -[FlowRefreshScheduler setDelegate:]
  -[FlowRefreshScheduler recalculateTimer]
  -[FlowRefreshScheduler delegate]
  -[FlowRefreshScheduler cancelTimer]
  -[FlowRefreshScheduler .cxx_destruct]
  -[FlowRefreshScheduler getState]
  -[FlowRefreshScheduler setRepeatingTimer:initialDelay:]
  -[FlowRefreshScheduler removeDelegate:]
  -[FlowRefreshScheduler generateInfoForId:context:uuid:completionBlock:]
  -[FlowRefreshScheduler initWithQueue:]
  -[FlowRefreshScheduler _generateInfoForId:context:uuid:completionBlock:]
  -[FlowRefreshScheduler cancelRefresh:]
  -[FlowRefreshScheduler queue]
  -[FlowRefreshScheduler periodicRefreshDataUsageFor:interval:maxStale:maxDelay:logAs:]
  -[FlowRefreshScheduler refreshDataUsageFor:maxStale:maxDelay:logAs:callback:]


SFActivityBitmaps : NSObject
 @property  NSString *appName
 @property  unsigned long startTime
 @property  unsigned long wordOffset
 @property  unsigned long numOfWords

  // class methods
  +[SFActivityBitmaps alignToBitmapTimeline:]
  +[SFActivityBitmaps adjustStartTime:endTime:currMachAbsTime:]

  // instance methods
  -[SFActivityBitmaps appName]
  -[SFActivityBitmaps startTime]
  -[SFActivityBitmaps getWordAtOffset:]
  -[SFActivityBitmaps clearAndSetNewActivityWithStartTime:part1:part:]
  -[SFActivityBitmaps setStartTime:]
  -[SFActivityBitmaps .cxx_destruct]
  -[SFActivityBitmaps wordOffset]
  -[SFActivityBitmaps writeWord:atOffset:]
  -[SFActivityBitmaps numOfWords]
  -[SFActivityBitmaps addActivityWithFlowId:startTime:part1:part2:]
  -[SFActivityBitmaps setAppName:]
  -[SFActivityBitmaps setNumOfWords:]
  -[SFActivityBitmaps adjustStartTime:]
  -[SFActivityBitmaps setWordOffset:]
  -[SFActivityBitmaps getEndTime]
  -[SFActivityBitmaps resetStartTimeToEarlierTime:]
  -[SFActivityBitmaps getLongestContiguousHammingWeight]
  -[SFActivityBitmaps getWrappedBitmapsFromTime:toTime:]
  -[SFActivityBitmaps freeUpBufferSpace]
  -[SFActivityBitmaps getAlignedBitmapStartingAtTime:]
  -[SFActivityBitmaps setActivityWithStartTime:part1:part2:]
  -[SFActivityBitmaps isEqual:]
  -[SFActivityBitmaps init]
  -[SFActivityBitmaps getHammingWeight]
  -[SFActivityBitmaps setAlignedBitmap:withStartTime:]
  -[SFActivityBitmaps resetAllActivities]


SFActivityFullBitmaps : SFActivityBitmaps
 @property  NSMutableDictionary *flows

  // instance methods
  -[SFActivityFullBitmaps getHammingWeightForFlowId:]
  -[SFActivityFullBitmaps .cxx_destruct]
  -[SFActivityFullBitmaps getLongestContiguousHammingWeightForFlowId:]
  -[SFActivityFullBitmaps addActivityWithFlowId:startTime:part1:part2:]
  -[SFActivityFullBitmaps setFlows:]
  -[SFActivityFullBitmaps freeUpBufferSpace]
  -[SFActivityFullBitmaps getAllFlowIds]
  -[SFActivityFullBitmaps init]
  -[SFActivityFullBitmaps flows]
  -[SFActivityFullBitmaps resetAllActivities]


AWDSymptomsNetworkAnalyticsDNSTotalFailure : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNetworkType
 @property  int networkType
 @property  BOOL hasDnsServers
 @property  unsigned int dnsServers

  // instance methods
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure setNetworkType:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure setDnsServers:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure networkType]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure setTimestamp:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure copyTo:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure dnsServers]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure mergeFrom:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure setHasTimestamp:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure dictionaryRepresentation]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure hasTimestamp]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure copyWithZone:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure timestamp]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure readFrom:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure writeTo:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure isEqual:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure setHasNetworkType:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure hasNetworkType]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure networkTypeAsString:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure StringAsNetworkType:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure setHasDnsServers:]
  -[AWDSymptomsNetworkAnalyticsDNSTotalFailure hasDnsServers]


LaunchServicesUtilities : NSObject
  // class methods
  +[LaunchServicesUtilities bundleIdentifier:hasEntitlement:ofClass:handler:]
  +[LaunchServicesUtilities appBundleIdentifierFromBundleRecord:isWebBrowser:]
  +[LaunchServicesUtilities implicitlyAssumedIdentityEntitlementForBundleIdentifier:]


ImplicitlyAssumedIdentityEntitlement : NSObject
 @property  unsigned long type
 @property  NSString *impliedBundleID
 @property  BOOL isWebBrowser

  // instance methods
  -[ImplicitlyAssumedIdentityEntitlement type]
  -[ImplicitlyAssumedIdentityEntitlement .cxx_destruct]
  -[ImplicitlyAssumedIdentityEntitlement isWebBrowser]
  -[ImplicitlyAssumedIdentityEntitlement initWithType:impliedBundleID:isWebBrowser:]
  -[ImplicitlyAssumedIdentityEntitlement impliedBundleID]


TCPDumpProbe : NetDiagnosticProbe
 @property  NSObject<OS_dispatch_source> *tcpDumpTimer
 @property  @? tcpDumpCompletedBlock
 @property  double duration
 @property  NSString *destinationPath

  // instance methods
  -[TCPDumpProbe setDuration:]
  -[TCPDumpProbe .cxx_destruct]
  -[TCPDumpProbe duration]
  -[TCPDumpProbe stopTest]
  -[TCPDumpProbe setDestinationPath:]
  -[TCPDumpProbe initWithQueue:]
  -[TCPDumpProbe destinationPath]
  -[TCPDumpProbe startNetDiagnosticsTask:]
  -[TCPDumpProbe stopNetDiagnosticsTask:]
  -[TCPDumpProbe startTCPDumpWithDuration:destinationPath:tcpDumpStarted:tcpDumpCompleted:]
  -[TCPDumpProbe probeOutputFilePaths]
  -[TCPDumpProbe tcpDumpTimer]
  -[TCPDumpProbe setTcpDumpTimer:]
  -[TCPDumpProbe tcpDumpCompletedBlock]
  -[TCPDumpProbe setTcpDumpCompletedBlock:]


NWNetworkOfInterest : NSObject <NSSecureCoding, NSCopying>
 @property  long long version
 @property  long long scopedToLOI
 @property  long long flags
 @property  unsigned char interfaceType
 @property  BOOL isTrafficEligible
 @property  BOOL willGetDiscretionaryTrafficInvites
 @property  BOOL discretionaryTrafficInvited
 @property  long long interfaceClass
 @property  long long considerAlternate
 @property  NWNetworkAdviceUpdate *considerAlternateUpdate
 @property  long long linkQuality
 @property  long long powerCostDL
 @property  long long powerCostUL
 @property  NSDate *predictionsGeneratedAt
 @property  NSArray *predictions
 @property  long long interface
 @property  long long interfaceSubtype
 @property  BOOL isAny
 @property  BOOL isBuiltin
 @property  NSPredicate *customSignature

  // class methods
  +[NWNetworkOfInterest supportsSecureCoding]
  +[NWNetworkOfInterest automaticallyNotifiesObserversForKey:]

  // instance methods
  -[NWNetworkOfInterest setValue:forUndefinedKey:]
  -[NWNetworkOfInterest interfaceType]
  -[NWNetworkOfInterest valueForUndefinedKey:]
  -[NWNetworkOfInterest interface]
  -[NWNetworkOfInterest linkQuality]
  -[NWNetworkOfInterest encodeWithCoder:]
  -[NWNetworkOfInterest setLinkQuality:]
  -[NWNetworkOfInterest .cxx_destruct]
  -[NWNetworkOfInterest flags]
  -[NWNetworkOfInterest setPowerCostDL:]
  -[NWNetworkOfInterest version]
  -[NWNetworkOfInterest copyWithZone:]
  -[NWNetworkOfInterest setPowerCostUL:]
  -[NWNetworkOfInterest powerCostUL]
  -[NWNetworkOfInterest predictions]
  -[NWNetworkOfInterest isEqual:]
  -[NWNetworkOfInterest powerCostDL]
  -[NWNetworkOfInterest initWithCoder:]
  -[NWNetworkOfInterest setPredictions:]
  -[NWNetworkOfInterest customSignature]
  -[NWNetworkOfInterest isBuiltin]
  -[NWNetworkOfInterest initWithSpec:isAny:isBuiltin:scopedToLOI:flags:hasCustomSignature:]
  -[NWNetworkOfInterest typePrettyPrint]
  -[NWNetworkOfInterest _descriptionFull:]
  -[NWNetworkOfInterest atHomeScopedNOI]
  -[NWNetworkOfInterest atWorkScopedNOI]
  -[NWNetworkOfInterest _isEqualToNOI:]
  -[NWNetworkOfInterest identityAttrsOnly]
  -[NWNetworkOfInterest addObserverForAllKeyPaths:]
  -[NWNetworkOfInterest removeObserverForAllKeyPaths:]
  -[NWNetworkOfInterest interfaceSubtype]
  -[NWNetworkOfInterest isAny]
  -[NWNetworkOfInterest isTrafficEligible]
  -[NWNetworkOfInterest setIsTrafficEligible:]
  -[NWNetworkOfInterest willGetDiscretionaryTrafficInvites]
  -[NWNetworkOfInterest setWillGetDiscretionaryTrafficInvites:]
  -[NWNetworkOfInterest discretionaryTrafficInvited]
  -[NWNetworkOfInterest setDiscretionaryTrafficInvited:]
  -[NWNetworkOfInterest interfaceClass]
  -[NWNetworkOfInterest setInterfaceClass:]
  -[NWNetworkOfInterest considerAlternate]
  -[NWNetworkOfInterest setConsiderAlternate:]
  -[NWNetworkOfInterest considerAlternateUpdate]
  -[NWNetworkOfInterest setConsiderAlternateUpdate:]
  -[NWNetworkOfInterest predictionsGeneratedAt]
  -[NWNetworkOfInterest setPredictionsGeneratedAt:]
  -[NWNetworkOfInterest scopedToLOI]
  -[NWNetworkOfInterest _newDistroSlot]
  -[NWNetworkOfInterest instantQuality]
  -[NWNetworkOfInterest setInstantQuality:]
  -[NWNetworkOfInterest hasForegroundActivity]
  -[NWNetworkOfInterest setHasForegroundActivity:]
  -[NWNetworkOfInterest anchorPowerCostToLinkQuality]
  -[NWNetworkOfInterest predictionsError]
  -[NWNetworkOfInterest dayOfWeekGrouping]
  -[NWNetworkOfInterest trainingProgress]
  -[NWNetworkOfInterest invitesHourlyDistribution]
  -[NWNetworkOfInterest interfaceTimeline]


FunctionalInterfaceUtils : NSObject
  // class methods
  +[FunctionalInterfaceUtils nwFunctionalInterfaceTypeForNWInterface:]
  +[FunctionalInterfaceUtils nwFunctionalInterfaceTypeForNWInterfaceType:nwInterfaceSubtype:]
  +[FunctionalInterfaceUtils nwFunctionalInterfaceTypeForNWInterfaceType:]
  +[FunctionalInterfaceUtils nwFunctionalInterfaceTypeForNWInterfaceSubtype:]
  +[FunctionalInterfaceUtils nwInterfaceTypeForNWFunctionalInterfaceType:]
  +[FunctionalInterfaceUtils nwInterfaceSubtypeForNWFunctionalInterfaceType:]
  +[FunctionalInterfaceUtils stringForFunctionalInterfaceType:]


ProxyAnalytics : NSObject
 @property  NSXPCConnection *connection
 @property  <ProxyAnalyticsDelegate> *delegate

  // instance methods
  -[ProxyAnalytics performAppEndpointTrackingPeriodicTasks]
  -[ProxyAnalytics setDelegate:]
  -[ProxyAnalytics delegate]
  -[ProxyAnalytics dealloc]
  -[ProxyAnalytics requestReverseGeocodeForLatitude:longitude:interfaceType:]
  -[ProxyAnalytics .cxx_destruct]
  -[ProxyAnalytics connection]
  -[ProxyAnalytics trainModelAndScore:lastScoreDate:]
  -[ProxyAnalytics performAppTrackingPeriodicTasks]
  -[ProxyAnalytics performPersistentStoreHealthCheck]
  -[ProxyAnalytics performAppExperiencePeriodicTasks]
  -[ProxyAnalytics performAppPeriodicTasks]
  -[ProxyAnalytics setConnection:]


AWDSymptomsNetworkAnalyticsInstant : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasNetworkType
 @property  int networkType
 @property  BOOL hasHasInternetConn
 @property  BOOL hasInternetConn
 @property  BOOL hasCumulInternetOutageSecs
 @property  unsigned long cumulInternetOutageSecs
 @property  BOOL hasConnAttempts
 @property  unsigned long connAttempts
 @property  BOOL hasConnSuccess
 @property  unsigned long connSuccess
 @property  BOOL hasPacketsIn
 @property  unsigned long packetsIn
 @property  BOOL hasPacketsOut
 @property  unsigned long packetsOut
 @property  BOOL hasBytesIn
 @property  unsigned long bytesIn
 @property  BOOL hasBytesOut
 @property  unsigned long bytesOut
 @property  BOOL hasRttMinUsecs
 @property  unsigned long rttMinUsecs
 @property  BOOL hasDnsServers
 @property  unsigned int dnsServers
 @property  BOOL hasPenalizedDnsServers
 @property  unsigned int penalizedDnsServers
 @property  BOOL hasRxSignalThreshold
 @property  unsigned int rxSignalThreshold
 @property  BOOL hasRxSignalThresholded
 @property  BOOL rxSignalThresholded
 @property  BOOL hasArpThreshold
 @property  unsigned int arpThreshold
 @property  BOOL hasArpThresholded
 @property  BOOL arpThresholded
 @property  BOOL hasSupportsIPv4
 @property  BOOL supportsIPv4
 @property  BOOL hasSupportsIPv6
 @property  BOOL supportsIPv6
 @property  BOOL hasLastReportedRSSI
 @property  unsigned int lastReportedRSSI
 @property  BOOL hasLastReportedLQM
 @property  int lastReportedLQM
 @property  BOOL hasLastReportedL2TxFrames
 @property  unsigned long lastReportedL2TxFrames
 @property  BOOL hasLastReportedL2TxReTry
 @property  unsigned long lastReportedL2TxReTry
 @property  BOOL hasLastReportedL2TxFail
 @property  unsigned long lastReportedL2TxFail

  // instance methods
  -[AWDSymptomsNetworkAnalyticsInstant setNetworkType:]
  -[AWDSymptomsNetworkAnalyticsInstant identifier]
  -[AWDSymptomsNetworkAnalyticsInstant rxSignalThresholded]
  -[AWDSymptomsNetworkAnalyticsInstant setDnsServers:]
  -[AWDSymptomsNetworkAnalyticsInstant networkType]
  -[AWDSymptomsNetworkAnalyticsInstant setTimestamp:]
  -[AWDSymptomsNetworkAnalyticsInstant setSupportsIPv4:]
  -[AWDSymptomsNetworkAnalyticsInstant copyTo:]
  -[AWDSymptomsNetworkAnalyticsInstant setRxSignalThresholded:]
  -[AWDSymptomsNetworkAnalyticsInstant hasIdentifier]
  -[AWDSymptomsNetworkAnalyticsInstant supportsIPv6]
  -[AWDSymptomsNetworkAnalyticsInstant supportsIPv4]
  -[AWDSymptomsNetworkAnalyticsInstant lastReportedL2TxFrames]
  -[AWDSymptomsNetworkAnalyticsInstant .cxx_destruct]
  -[AWDSymptomsNetworkAnalyticsInstant dnsServers]
  -[AWDSymptomsNetworkAnalyticsInstant mergeFrom:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasTimestamp:]
  -[AWDSymptomsNetworkAnalyticsInstant setLastReportedL2TxFail:]
  -[AWDSymptomsNetworkAnalyticsInstant setIdentifier:]
  -[AWDSymptomsNetworkAnalyticsInstant dictionaryRepresentation]
  -[AWDSymptomsNetworkAnalyticsInstant setSupportsIPv6:]
  -[AWDSymptomsNetworkAnalyticsInstant hasTimestamp]
  -[AWDSymptomsNetworkAnalyticsInstant copyWithZone:]
  -[AWDSymptomsNetworkAnalyticsInstant setLastReportedL2TxFrames:]
  -[AWDSymptomsNetworkAnalyticsInstant timestamp]
  -[AWDSymptomsNetworkAnalyticsInstant readFrom:]
  -[AWDSymptomsNetworkAnalyticsInstant writeTo:]
  -[AWDSymptomsNetworkAnalyticsInstant lastReportedL2TxFail]
  -[AWDSymptomsNetworkAnalyticsInstant isEqual:]
  -[AWDSymptomsNetworkAnalyticsInstant setBytesIn:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasBytesIn:]
  -[AWDSymptomsNetworkAnalyticsInstant hasBytesIn]
  -[AWDSymptomsNetworkAnalyticsInstant setBytesOut:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasBytesOut:]
  -[AWDSymptomsNetworkAnalyticsInstant hasBytesOut]
  -[AWDSymptomsNetworkAnalyticsInstant setPacketsIn:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasPacketsIn:]
  -[AWDSymptomsNetworkAnalyticsInstant hasPacketsIn]
  -[AWDSymptomsNetworkAnalyticsInstant setPacketsOut:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasPacketsOut:]
  -[AWDSymptomsNetworkAnalyticsInstant hasPacketsOut]
  -[AWDSymptomsNetworkAnalyticsInstant bytesIn]
  -[AWDSymptomsNetworkAnalyticsInstant bytesOut]
  -[AWDSymptomsNetworkAnalyticsInstant packetsIn]
  -[AWDSymptomsNetworkAnalyticsInstant packetsOut]
  -[AWDSymptomsNetworkAnalyticsInstant setHasNetworkType:]
  -[AWDSymptomsNetworkAnalyticsInstant hasNetworkType]
  -[AWDSymptomsNetworkAnalyticsInstant networkTypeAsString:]
  -[AWDSymptomsNetworkAnalyticsInstant StringAsNetworkType:]
  -[AWDSymptomsNetworkAnalyticsInstant connAttempts]
  -[AWDSymptomsNetworkAnalyticsInstant setLastReportedRSSI:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasLastReportedRSSI:]
  -[AWDSymptomsNetworkAnalyticsInstant hasLastReportedRSSI]
  -[AWDSymptomsNetworkAnalyticsInstant lastReportedRSSI]
  -[AWDSymptomsNetworkAnalyticsInstant setConnAttempts:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasConnAttempts:]
  -[AWDSymptomsNetworkAnalyticsInstant hasConnAttempts]
  -[AWDSymptomsNetworkAnalyticsInstant setConnSuccess:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasConnSuccess:]
  -[AWDSymptomsNetworkAnalyticsInstant hasConnSuccess]
  -[AWDSymptomsNetworkAnalyticsInstant connSuccess]
  -[AWDSymptomsNetworkAnalyticsInstant setHasDnsServers:]
  -[AWDSymptomsNetworkAnalyticsInstant hasDnsServers]
  -[AWDSymptomsNetworkAnalyticsInstant setHasInternetConn:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasHasInternetConn:]
  -[AWDSymptomsNetworkAnalyticsInstant hasHasInternetConn]
  -[AWDSymptomsNetworkAnalyticsInstant setCumulInternetOutageSecs:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasCumulInternetOutageSecs:]
  -[AWDSymptomsNetworkAnalyticsInstant hasCumulInternetOutageSecs]
  -[AWDSymptomsNetworkAnalyticsInstant setRttMinUsecs:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasRttMinUsecs:]
  -[AWDSymptomsNetworkAnalyticsInstant hasRttMinUsecs]
  -[AWDSymptomsNetworkAnalyticsInstant setPenalizedDnsServers:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasPenalizedDnsServers:]
  -[AWDSymptomsNetworkAnalyticsInstant hasPenalizedDnsServers]
  -[AWDSymptomsNetworkAnalyticsInstant setRxSignalThreshold:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasRxSignalThreshold:]
  -[AWDSymptomsNetworkAnalyticsInstant hasRxSignalThreshold]
  -[AWDSymptomsNetworkAnalyticsInstant setHasRxSignalThresholded:]
  -[AWDSymptomsNetworkAnalyticsInstant hasRxSignalThresholded]
  -[AWDSymptomsNetworkAnalyticsInstant setArpThreshold:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasArpThreshold:]
  -[AWDSymptomsNetworkAnalyticsInstant hasArpThreshold]
  -[AWDSymptomsNetworkAnalyticsInstant setArpThresholded:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasArpThresholded:]
  -[AWDSymptomsNetworkAnalyticsInstant hasArpThresholded]
  -[AWDSymptomsNetworkAnalyticsInstant setHasSupportsIPv4:]
  -[AWDSymptomsNetworkAnalyticsInstant hasSupportsIPv4]
  -[AWDSymptomsNetworkAnalyticsInstant setHasSupportsIPv6:]
  -[AWDSymptomsNetworkAnalyticsInstant hasSupportsIPv6]
  -[AWDSymptomsNetworkAnalyticsInstant setLastReportedLQM:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasLastReportedLQM:]
  -[AWDSymptomsNetworkAnalyticsInstant hasLastReportedLQM]
  -[AWDSymptomsNetworkAnalyticsInstant setHasLastReportedL2TxFrames:]
  -[AWDSymptomsNetworkAnalyticsInstant hasLastReportedL2TxFrames]
  -[AWDSymptomsNetworkAnalyticsInstant setLastReportedL2TxReTry:]
  -[AWDSymptomsNetworkAnalyticsInstant setHasLastReportedL2TxReTry:]
  -[AWDSymptomsNetworkAnalyticsInstant hasLastReportedL2TxReTry]
  -[AWDSymptomsNetworkAnalyticsInstant setHasLastReportedL2TxFail:]
  -[AWDSymptomsNetworkAnalyticsInstant hasLastReportedL2TxFail]
  -[AWDSymptomsNetworkAnalyticsInstant hasInternetConn]
  -[AWDSymptomsNetworkAnalyticsInstant cumulInternetOutageSecs]
  -[AWDSymptomsNetworkAnalyticsInstant rttMinUsecs]
  -[AWDSymptomsNetworkAnalyticsInstant penalizedDnsServers]
  -[AWDSymptomsNetworkAnalyticsInstant rxSignalThreshold]
  -[AWDSymptomsNetworkAnalyticsInstant arpThreshold]
  -[AWDSymptomsNetworkAnalyticsInstant arpThresholded]
  -[AWDSymptomsNetworkAnalyticsInstant lastReportedLQM]
  -[AWDSymptomsNetworkAnalyticsInstant lastReportedL2TxReTry]


AWDSymptomsNetworkTCPFlowThroughputEvent : PBCodable <NSCopying>
 @property  BOOL hasTimeToNetworkEventsMsecs
 @property  unsigned long timeToNetworkEventsMsecs
 @property  BOOL hasThroughputType
 @property  int throughputType
 @property  BOOL hasSnapshotType
 @property  int snapshotType
 @property  BOOL hasTxBytes
 @property  unsigned long txBytes
 @property  BOOL hasRxBytes
 @property  unsigned long rxBytes
 @property  BOOL hasFlowDurationMsecs
 @property  unsigned long flowDurationMsecs
 @property  BOOL hasUlThroughputBytesPerSec
 @property  unsigned long ulThroughputBytesPerSec
 @property  BOOL hasDlThroughputBytesPerSec
 @property  unsigned long dlThroughputBytesPerSec
 @property  BOOL hasEstimatorDelayMsecs
 @property  unsigned long estimatorDelayMsecs
 @property  BOOL hasEstimatorConfidence
 @property  unsigned long estimatorConfidence
 @property  BOOL hasInvalidResponses
 @property  unsigned long invalidResponses
 @property  BOOL hasRxDuplicateBytes
 @property  unsigned long rxDuplicateBytes
 @property  BOOL hasRxOutOfOrderBytes
 @property  unsigned long rxOutOfOrderBytes
 @property  BOOL hasTxRetransmittedBytes
 @property  unsigned long txRetransmittedBytes
 @property  BOOL hasConnAttempts
 @property  unsigned long connAttempts
 @property  BOOL hasConnSuccess
 @property  unsigned long connSuccess
 @property  BOOL hasRttMinimumMsecs
 @property  unsigned long rttMinimumMsecs
 @property  BOOL hasRttAverageMsecs
 @property  unsigned long rttAverageMsecs
 @property  BOOL hasRttVariation
 @property  unsigned long rttVariation
 @property  BOOL hasMaxCongestionWindow
 @property  unsigned long maxCongestionWindow
 @property  BOOL hasDelayedACKFactor
 @property  unsigned long delayedACKFactor
 @property  BOOL hasRetransmissionTimeoutMsecs
 @property  unsigned long retransmissionTimeoutMsecs
 @property  BOOL hasPacketErrorRate
 @property  unsigned long packetErrorRate
 @property  BOOL hasLQM
 @property  long long lQM

  // instance methods
  -[AWDSymptomsNetworkTCPFlowThroughputEvent rxDuplicateBytes]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent rxOutOfOrderBytes]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent rttVariation]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent txRetransmittedBytes]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent snapshotType]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent copyTo:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setTxBytes:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setRxBytes:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent mergeFrom:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setRxOutOfOrderBytes:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent rxBytes]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent dictionaryRepresentation]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent copyWithZone:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setRxDuplicateBytes:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent readFrom:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent writeTo:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent txBytes]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent isEqual:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setFlowDurationMsecs:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasFlowDurationMsecs:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasFlowDurationMsecs]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent flowDurationMsecs]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent timeToNetworkEventsMsecs]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasRxOutOfOrderBytes:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasRxOutOfOrderBytes]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent connAttempts]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setLQM:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasLQM:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasLQM]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent lQM]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setConnAttempts:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasConnAttempts:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasConnAttempts]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setConnSuccess:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasConnSuccess:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasConnSuccess]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent connSuccess]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setTimeToNetworkEventsMsecs:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasTimeToNetworkEventsMsecs:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasTimeToNetworkEventsMsecs]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent throughputType]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setThroughputType:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasThroughputType:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasThroughputType]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent throughputTypeAsString:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent StringAsThroughputType:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setSnapshotType:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasSnapshotType:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasSnapshotType]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent snapshotTypeAsString:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent StringAsSnapshotType:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasTxBytes:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasTxBytes]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasRxBytes:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasRxBytes]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setUlThroughputBytesPerSec:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasUlThroughputBytesPerSec:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasUlThroughputBytesPerSec]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setDlThroughputBytesPerSec:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasDlThroughputBytesPerSec:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasDlThroughputBytesPerSec]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setEstimatorDelayMsecs:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasEstimatorDelayMsecs:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasEstimatorDelayMsecs]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setEstimatorConfidence:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasEstimatorConfidence:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasEstimatorConfidence]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setInvalidResponses:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasInvalidResponses:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasInvalidResponses]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasRxDuplicateBytes:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasRxDuplicateBytes]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setTxRetransmittedBytes:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasTxRetransmittedBytes:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasTxRetransmittedBytes]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setRttMinimumMsecs:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasRttMinimumMsecs:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasRttMinimumMsecs]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setRttAverageMsecs:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasRttAverageMsecs:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasRttAverageMsecs]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setRttVariation:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasRttVariation:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasRttVariation]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setMaxCongestionWindow:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasMaxCongestionWindow:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasMaxCongestionWindow]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setDelayedACKFactor:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasDelayedACKFactor:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasDelayedACKFactor]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setRetransmissionTimeoutMsecs:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasRetransmissionTimeoutMsecs:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasRetransmissionTimeoutMsecs]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setPacketErrorRate:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent setHasPacketErrorRate:]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent hasPacketErrorRate]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent ulThroughputBytesPerSec]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent dlThroughputBytesPerSec]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent estimatorDelayMsecs]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent estimatorConfidence]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent invalidResponses]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent rttMinimumMsecs]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent rttAverageMsecs]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent maxCongestionWindow]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent delayedACKFactor]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent retransmissionTimeoutMsecs]
  -[AWDSymptomsNetworkTCPFlowThroughputEvent packetErrorRate]


NoBackhaulHandlerState : ExpertSystemStateCore
 @property  NSDictionary *entryCellPreds
 @property  NSDictionary *entryWiFiPreds
 @property  BOOL noPreconditions
 @property  AWDSymptomsAdvisoryAlternateNetworkType *awdMetric

  // class methods
  +[NoBackhaulHandlerState createStateWithLabel:rank:entryCellPreds:entryWiFiPreds:]
  +[NoBackhaulHandlerState createAndInitializeAWDMetricForStateWithLevel:activationIdentifier:]

  // instance methods
  -[NoBackhaulHandlerState awdMetric]
  -[NoBackhaulHandlerState .cxx_destruct]
  -[NoBackhaulHandlerState noPreconditions]
  -[NoBackhaulHandlerState setAwdMetric:]
  -[NoBackhaulHandlerState _initStateWithLabel:rank:entryCellPreds:entryWiFiPreds:]
  -[NoBackhaulHandlerState entryWiFiPreds]
  -[NoBackhaulHandlerState entryCellPreds]
  -[NoBackhaulHandlerState setNoPreconditions:]


NoBackhaulHandler : ExpertSystemHandlerCore <ICMPPingProbeDelegate, ManagedEventInfoProtocol>
 @property  BOOL noBackhaulActivated
 @property  BOOL systemForeground
 @property  BOOL callInForeground
 @property  BOOL dndWhileDriving
 @property  unsigned int activationIdentifier
 @property  unsigned long stepper
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NoBackhaulHandler sharedInstance]
  +[NoBackhaulHandler internalStateDictionary]
  +[NoBackhaulHandler _nwInterfaceTypeFromAPSDQualifier:]
  +[NoBackhaulHandler configureClass:]

  // instance methods
  -[NoBackhaulHandler read:returnedValues:]
  -[NoBackhaulHandler stepper]
  -[NoBackhaulHandler noteSymptom:]
  -[NoBackhaulHandler _dumpState]
  -[NoBackhaulHandler _startMaintenanceTimerFor:delay:interval:capWindowTo:]
  -[NoBackhaulHandler _assessProgressFromBaseline:toMetrics:]
  -[NoBackhaulHandler _stopMaintenanceTimer]
  -[NoBackhaulHandler activeExitAction:]
  -[NoBackhaulHandler drainPendingEventDescriptions]
  -[NoBackhaulHandler apsdFailing:onInterface:]
  -[NoBackhaulHandler _currentState]
  -[NoBackhaulHandler _fetchDampeningHistory]
  -[NoBackhaulHandler _setObscuredSSID:]
  -[NoBackhaulHandler reportAutoBugCaptureCaseWithDomain:type:subtype:subtypeContext:events:]
  -[NoBackhaulHandler initTestInstanceWithCellRelay:wifiRelay:rnfRelay:powerRelay:outrankRelay:]
  -[NoBackhaulHandler callInForeground]
  -[NoBackhaulHandler processSymptom:]
  -[NoBackhaulHandler configureInstance:]
  -[NoBackhaulHandler dealloc]
  -[NoBackhaulHandler systemForeground]
  -[NoBackhaulHandler internalStateDictionary]
  -[NoBackhaulHandler _bringStateToIdle]
  -[NoBackhaulHandler _postUpwards:]
  -[NoBackhaulHandler _states]
  -[NoBackhaulHandler .cxx_destruct]
  -[NoBackhaulHandler brokenEntryAction:]
  -[NoBackhaulHandler brokenExitAction:]
  -[NoBackhaulHandler resumedDefRouteProgress]
  -[NoBackhaulHandler _captureProgressFor:since:interval:capWindowTo:iteration:renewTest:]
  -[NoBackhaulHandler idleExitAction:]
  -[NoBackhaulHandler dampeningCheck]
  -[NoBackhaulHandler _idempotentInitializationFromIdle]
  -[NoBackhaulHandler setActivationIdentifier:]
  -[NoBackhaulHandler observeValueForKeyPath:ofObject:change:context:]
  -[NoBackhaulHandler activeEntryAction:]
  -[NoBackhaulHandler _performConnectivityTestToDefaultGateways:]
  -[NoBackhaulHandler dndWhileDriving]
  -[NoBackhaulHandler clientFeedback:]
  -[NoBackhaulHandler _administrativeDisable]
  -[NoBackhaulHandler addPendingEventDescription:]
  -[NoBackhaulHandler dampeningSetPrecedent]
  -[NoBackhaulHandler setDndWhileDriving:]
  -[NoBackhaulHandler changedSSIDto:]
  -[NoBackhaulHandler generateInfoForId:context:uuid:completionBlock:]
  -[NoBackhaulHandler setStepper:]
  -[NoBackhaulHandler activationIdentifier]
  -[NoBackhaulHandler idleEntryAction:]
  -[NoBackhaulHandler _idempotentInitializationFromIdleWithCellRelay:wifiRelay:rnfRelay:powerRelay:outrankRelay:]
  -[NoBackhaulHandler _administrativeEnable]
  -[NoBackhaulHandler icmpPingProbe:completedIterations:successfulCount:withError:]
  -[NoBackhaulHandler positiveExitAction:]
  -[NoBackhaulHandler dampeningReset]
  -[NoBackhaulHandler subscribeCarKitNotifications]
  -[NoBackhaulHandler _nudgeState]
  -[NoBackhaulHandler noBackhaulActivated]
  -[NoBackhaulHandler setSystemForeground:]
  -[NoBackhaulHandler setCallInForeground:]
  -[NoBackhaulHandler _setClearSSID:]
  -[NoBackhaulHandler _completeInitialization]
  -[NoBackhaulHandler init]
  -[NoBackhaulHandler positiveEntryAction:]
  -[NoBackhaulHandler setNoBackhaulActivated:]
  -[NoBackhaulHandler _updateSSID:]


LiveLinkObserver : NSObject
 @property  NSString *interfaceName
 @property  unsigned long tcpProgressScore
 @property  BOOL premiumModeEnabled

  // instance methods
  -[LiveLinkObserver _assessProgressFromBaseline:toMetrics:]
  -[LiveLinkObserver initWithInterfaceName:]
  -[LiveLinkObserver interfaceName]
  -[LiveLinkObserver dealloc]
  -[LiveLinkObserver .cxx_destruct]
  -[LiveLinkObserver postHasAdviceNotification:]
  -[LiveLinkObserver isEqual:]
  -[LiveLinkObserver stopTracking]
  -[LiveLinkObserver startTracking]
  -[LiveLinkObserver attemptStartProgressProbe]
  -[LiveLinkObserver enableLocalFlowsTracking]
  -[LiveLinkObserver disableLocalFlowsTracking]
  -[LiveLinkObserver enablePremiumMode]
  -[LiveLinkObserver disablePremiumMode]
  -[LiveLinkObserver startProgressProbeTimerWithInterval:capWindowTo:]
  -[LiveLinkObserver stopProgressProbeTimer]
  -[LiveLinkObserver _captureProgressWithInterval:capWindowTo:]
  -[LiveLinkObserver tcpProgressScore]
  -[LiveLinkObserver premiumModeEnabled]


LiveLinkHandler : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LiveLinkHandler sharedInstance]
  +[LiveLinkHandler configureClass:]

  // instance methods
  -[LiveLinkHandler noteSymptom:]
  -[LiveLinkHandler configureInstance:]
  -[LiveLinkHandler startTrackingLiveLinkOnInterface:]
  -[LiveLinkHandler stopTrackingLiveLinkOnInterface:]
  -[LiveLinkHandler includeLocalFlowsTrackingOnInterface:]
  -[LiveLinkHandler excludeLocalFlowsTrackingOnInterface:]


IOKitHandler : NSObject <ConfigurableObjectProtocol>
 @property  unsigned long mostRecentAPSleepMachTime
 @property  unsigned long mostRecentAPWakeMachTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IOKitHandler sharedInstance]
  +[IOKitHandler configureClass:]

  // instance methods
  -[IOKitHandler read:returnedValues:]
  -[IOKitHandler configureInstance:]
  -[IOKitHandler dealloc]
  -[IOKitHandler .cxx_destruct]
  -[IOKitHandler init]
  -[IOKitHandler enableIOKitAssertionNotifications]
  -[IOKitHandler disableIOKitAssertionNotifications]
  -[IOKitHandler reportIOPMAssertionException:pid:]
  -[IOKitHandler enableIOKitPowerNotifications]
  -[IOKitHandler disableIOKitPowerNotifications]
  -[IOKitHandler mostRecentAPSleepMachTime]
  -[IOKitHandler mostRecentAPWakeMachTime]
  -[IOKitHandler updateMostRecentAPSleepTime]
  -[IOKitHandler updateMostRecentAPWakeTime]


NWActivitySuperMetric : NSObject
 @property  NWActivityStatistics *activity
 @property  NWActivityEpilogueStatistics *activityEpilogue
 @property  NSMutableArray *connectionReports
 @property  NSMutableArray *taskMetrics
 @property  NSMutableArray *wifiFragments
 @property  NSMutableArray *cellularFragments
 @property  NSMutableArray *clientFragments
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[NWActivitySuperMetric flattenObject:intoDictionary:atPath:]
  +[NWActivitySuperMetric limitForFragmentType:]

  // instance methods
  -[NWActivitySuperMetric setTaskMetrics:]
  -[NWActivitySuperMetric taskMetrics]
  -[NWActivitySuperMetric .cxx_destruct]
  -[NWActivitySuperMetric activity]
  -[NWActivitySuperMetric dictionaryRepresentation]
  -[NWActivitySuperMetric setActivity:]
  -[NWActivitySuperMetric init]
  -[NWActivitySuperMetric activityEpilogue]
  -[NWActivitySuperMetric setActivityEpilogue:]
  -[NWActivitySuperMetric connectionReports]
  -[NWActivitySuperMetric setConnectionReports:]
  -[NWActivitySuperMetric wifiFragments]
  -[NWActivitySuperMetric setWifiFragments:]
  -[NWActivitySuperMetric cellularFragments]
  -[NWActivitySuperMetric setCellularFragments:]
  -[NWActivitySuperMetric clientFragments]
  -[NWActivitySuperMetric setClientFragments:]


NWNetworkPredictions : NSObject <NSSecureCoding>
 @property  NSDate *changePointAt
 @property  long long toQuality
 @property  double confidence
 @property  long long resolutionSeconds

  // class methods
  +[NWNetworkPredictions supportsSecureCoding]

  // instance methods
  -[NWNetworkPredictions confidence]
  -[NWNetworkPredictions encodeWithCoder:]
  -[NWNetworkPredictions .cxx_destruct]
  -[NWNetworkPredictions initWithCoder:]
  -[NWNetworkPredictions changePointAt]
  -[NWNetworkPredictions toQuality]
  -[NWNetworkPredictions resolutionSeconds]
  -[NWNetworkPredictions initWithSpec:toQuality:withConfidence:resolutionSeconds:]


AWDUsageDeltaTracker : NSObject
  // instance methods
  -[AWDUsageDeltaTracker dealloc]
  -[AWDUsageDeltaTracker initForNetworkType:rootCause:startValue:]
  -[AWDUsageDeltaTracker recordUsageValue:]
  -[AWDUsageDeltaTracker recordFlowCount:]


CanUseAppsCache : NSObject
  // class methods
  +[CanUseAppsCache makeVerdictFromRationaleCode:]

  // instance methods
  -[CanUseAppsCache enable]
  -[CanUseAppsCache disable]
  -[CanUseAppsCache .cxx_destruct]
  -[CanUseAppsCache init]
  -[CanUseAppsCache _makeKeyFrom:state:]
  -[CanUseAppsCache hasEntryFor:state:rationaleCode:]
  -[CanUseAppsCache insertEntryFor:state:rationaleCode:]


State : NSObject
 @property  NSString *label
 @property  unsigned long rank
 @property  NSDictionary *entryCellPreds
 @property  NSDictionary *entryWiFiPreds
 @property  StopWatch *sojournTime
 @property  @? entryAction
 @property  @? loopEvaluation
 @property  @? exitAction
 @property  int loopTokens
 @property  State *previousState
 @property  AWDSymptomsAdvisoryAlternateNetworkType *awdMetric
 @property  NSMutableArray *digest

  // class methods
  +[State createStateWithLabel:rank:entryCellPreds:entryWiFiPreds:]
  +[State createAndInitializeAWDMetricForStateWithLevel:activationIdentifier:policy:andSignature:]

  // instance methods
  -[State digest]
  -[State rank]
  -[State loopEvaluation]
  -[State setEntryAction:]
  -[State exitAction]
  -[State awdMetric]
  -[State dealloc]
  -[State previousState]
  -[State loopTokens]
  -[State .cxx_destruct]
  -[State setExitAction:]
  -[State entryAction]
  -[State setAwdMetric:]
  -[State setPreviousState:]
  -[State setLoopEvaluation:]
  -[State _initStateWithLabel:rank:entryCellPreds:entryWiFiPreds:]
  -[State setLoopTokens:]
  -[State label]
  -[State entryWiFiPreds]
  -[State entryCellPreds]
  -[State sojournTime]


CellFallbackHandler : NSObject <CTCarrierSpaceClientDelegate, ConfigurableObjectProtocol, SymptomAdditionalProtocol, ManagedEventInfoProtocol>
 @property  unsigned int activationIdentifier
 @property  BOOL rnfActivated
 @property  BOOL wifiCallUnderway
 @property  long long fallbackAdvice
 @property  BOOL boosted
 @property  BOOL runningRNFTest
 @property  BOOL internalBuild
 @property  BOOL adminDisabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CellFallbackHandler sharedInstance]
  +[CellFallbackHandler automaticallyNotifiesObserversForKey:]
  +[CellFallbackHandler requestBoost:]
  +[CellFallbackHandler internalStateDictionary]
  +[CellFallbackHandler appPolicyDenialsScore]
  +[CellFallbackHandler canUseApps:replyQueue:reply:]
  +[CellFallbackHandler startRunningRNFTest]
  +[CellFallbackHandler configureClass:]
  +[CellFallbackHandler stopRunningRNFTestWithReply:]
  +[CellFallbackHandler mdmProfilePath]
  +[CellFallbackHandler awdWifiAssistPolicyForRNFPolicy:]

  // instance methods
  -[CellFallbackHandler boosted]
  -[CellFallbackHandler internalBuild]
  -[CellFallbackHandler read:returnedValues:]
  -[CellFallbackHandler noteSymptom:]
  -[CellFallbackHandler _dumpState]
  -[CellFallbackHandler _canUseApps:replyQueue:reply:]
  -[CellFallbackHandler postAdminChangeUpwards:]
  -[CellFallbackHandler postMotionDetector:]
  -[CellFallbackHandler adminDisabled]
  -[CellFallbackHandler _setPolicyVerdictLedgerGivenAsk:exceptions:verdict:explain:]
  -[CellFallbackHandler _currentState]
  -[CellFallbackHandler _toggleElevatedState]
  -[CellFallbackHandler rnfTestAbortCFSMWentIdleReply:]
  -[CellFallbackHandler startElevatedStateWatchdogWithPeriod:]
  -[CellFallbackHandler runningRNFTest]
  -[CellFallbackHandler postUpwards:]
  -[CellFallbackHandler _motionToAwdCode]
  -[CellFallbackHandler wifiCallUnderway]
  -[CellFallbackHandler requestBoost:]
  -[CellFallbackHandler configureInstance:]
  -[CellFallbackHandler dealloc]
  -[CellFallbackHandler _trackCellUsageAfterTriggerDisconnectWithNewSeries:]
  -[CellFallbackHandler internalStateDictionary]
  -[CellFallbackHandler _appPolicyDenialsScore]
  -[CellFallbackHandler _bringStateToIdle]
  -[CellFallbackHandler _states]
  -[CellFallbackHandler _idempotentInitializationFromIdleWithCellRelay:wifiRelay:motionRelay:]
  -[CellFallbackHandler .cxx_destruct]
  -[CellFallbackHandler lookUpDataUsagePolicyForICCID:fromPolicies:]
  -[CellFallbackHandler _setDefaultDataUsageParameters]
  -[CellFallbackHandler appBlacklistsRNFToCellRatio]
  -[CellFallbackHandler _peekIntoCellPlan]
  -[CellFallbackHandler appBlacklistsSettleTime]
  -[CellFallbackHandler rnfActivated]
  -[CellFallbackHandler postUpwards:appsWithStates:always:]
  -[CellFallbackHandler stopWrongUsageGracePeriodTimer]
  -[CellFallbackHandler highCapacityCellPlan]
  -[CellFallbackHandler _idempotentInitializationFromIdle]
  -[CellFallbackHandler _setUnlimitedDataUsageParameters]
  -[CellFallbackHandler commonInit]
  -[CellFallbackHandler _updateMptcpState]
  -[CellFallbackHandler observeValueForKeyPath:ofObject:change:context:]
  -[CellFallbackHandler setFallbackAdvice:]
  -[CellFallbackHandler _isAppName:withState:inListType:]
  -[CellFallbackHandler applyDataUsagePolicyForICCID:givenPolicies:]
  -[CellFallbackHandler _administrativeDisable]
  -[CellFallbackHandler postSpeculativeTelemetryForKey:oldValue:newValue:]
  -[CellFallbackHandler dataPlanMetricsDidChange]
  -[CellFallbackHandler setBoosted:]
  -[CellFallbackHandler _setDataUsagePolicy:]
  -[CellFallbackHandler generateInfoForId:context:uuid:completionBlock:]
  -[CellFallbackHandler RNFTestAbortWaitForIdleUntil:reply:]
  -[CellFallbackHandler activationIdentifier]
  -[CellFallbackHandler fallbackAdvice]
  -[CellFallbackHandler stopElevatedStateWatchdog]
  -[CellFallbackHandler stopRNFTestIdleTimer]
  -[CellFallbackHandler _administrativeEnable]
  -[CellFallbackHandler setRunningRNFTest:]
  -[CellFallbackHandler updateFallbackAdvice:]
  -[CellFallbackHandler setWifiCallUnderway:]
  -[CellFallbackHandler initTestInstanceWithCellRelay:wifiRelay:motionRelay:]
  -[CellFallbackHandler postHasAdviceNotification:]
  -[CellFallbackHandler processRefreshedRNFDataUsageWithGrace:]
  -[CellFallbackHandler setRnfActivated:]
  -[CellFallbackHandler _completeInitialization]
  -[CellFallbackHandler init]
  -[CellFallbackHandler setInternalBuild:]
  -[CellFallbackHandler _updateCellFallbackState]
  -[CellFallbackHandler _setUnlimitedDataUsagePolicy:]
  -[CellFallbackHandler _createAndInitializeAWDMetricForAppQuery:verdictCode:reasonCode:]


SFPrivacyProxyNetwork : NSObject
 @property  int type
 @property  unsigned int status

  // instance methods
  -[SFPrivacyProxyNetwork type]
  -[SFPrivacyProxyNetwork status]
  -[SFPrivacyProxyNetwork setStatus:]
  -[SFPrivacyProxyNetwork setType:]


SFPrivacyProxyTraffic : NSObject <NSCopying>
 @property  BOOL safariUnencrypted
 @property  BOOL safariDNS
 @property  BOOL safariTrackers
 @property  BOOL safariAll
 @property  BOOL safariHTTP
 @property  BOOL mailTrackers
 @property  BOOL anyUnencrypted
 @property  BOOL anyDNS
 @property  BOOL anyKnownTrackers
 @property  BOOL anyAppTrackers
 @property  BOOL newsURLResolution

  // instance methods
  -[SFPrivacyProxyTraffic anyAppTrackers]
  -[SFPrivacyProxyTraffic setSafariHTTP:]
  -[SFPrivacyProxyTraffic safariHTTP]
  -[SFPrivacyProxyTraffic newsURLResolution]
  -[SFPrivacyProxyTraffic setNewsURLResolution:]
  -[SFPrivacyProxyTraffic safariAll]
  -[SFPrivacyProxyTraffic setAnyDNS:]
  -[SFPrivacyProxyTraffic setAnyKnownTrackers:]
  -[SFPrivacyProxyTraffic setSafariAll:]
  -[SFPrivacyProxyTraffic anyUnencrypted]
  -[SFPrivacyProxyTraffic setMailTrackers:]
  -[SFPrivacyProxyTraffic setAnyUnencrypted:]
  -[SFPrivacyProxyTraffic setSafariUnencrypted:]
  -[SFPrivacyProxyTraffic setSafariTrackers:]
  -[SFPrivacyProxyTraffic setSafariDNS:]
  -[SFPrivacyProxyTraffic copyWithZone:]
  -[SFPrivacyProxyTraffic anyKnownTrackers]
  -[SFPrivacyProxyTraffic safariDNS]
  -[SFPrivacyProxyTraffic anyDNS]
  -[SFPrivacyProxyTraffic safariUnencrypted]
  -[SFPrivacyProxyTraffic setAnyAppTrackers:]
  -[SFPrivacyProxyTraffic mailTrackers]
  -[SFPrivacyProxyTraffic safariTrackers]


PrivacyProxyStateRelay : NSObject
 @property  BOOL enabled
 @property  unsigned int serviceStatus
 @property  NSMutableArray *networks
 @property  unsigned int userTier
 @property  SFPrivacyProxyTraffic *traffic

  // class methods
  +[PrivacyProxyStateRelay sharedInstance]
  +[PrivacyProxyStateRelay serviceStatusFromNSPStatus:]
  +[PrivacyProxyStateRelay automaticallyNotifiesObserversForKey:]
  +[PrivacyProxyStateRelay userTierFromNSPTier:]
  +[PrivacyProxyStateRelay networkStatusFromNSPStatus:]
  +[PrivacyProxyStateRelay serviceStatusString:]
  +[PrivacyProxyStateRelay userTierString:]
  +[PrivacyProxyStateRelay networkStatusString:]

  // instance methods
  -[PrivacyProxyStateRelay setServiceStatus:]
  -[PrivacyProxyStateRelay serviceStatus]
  -[PrivacyProxyStateRelay updatePrivacyProxyConfiguration]
  -[PrivacyProxyStateRelay dealloc]
  -[PrivacyProxyStateRelay setUserTier:]
  -[PrivacyProxyStateRelay .cxx_destruct]
  -[PrivacyProxyStateRelay setEnabled:]
  -[PrivacyProxyStateRelay updatePrivacyProxyStatus]
  -[PrivacyProxyStateRelay traffic]
  -[PrivacyProxyStateRelay networks]
  -[PrivacyProxyStateRelay updatePrivacyProxyPath]
  -[PrivacyProxyStateRelay enabled]
  -[PrivacyProxyStateRelay setTraffic:]
  -[PrivacyProxyStateRelay setNetworks:]
  -[PrivacyProxyStateRelay userTier]
  -[PrivacyProxyStateRelay init]


AWDSymptomsSignificantOperationalEvent : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasName
 @property  int name
 @property  BOOL hasAlternateName
 @property  NSString *alternateName
 @property  BOOL hasError
 @property  int error
 @property  BOOL hasErrorDomain
 @property  NSString *errorDomain
 @property  BOOL hasErrorCode
 @property  long long errorCode
 @property  BOOL hasStatus
 @property  int status

  // instance methods
  -[AWDSymptomsSignificantOperationalEvent hasName]
  -[AWDSymptomsSignificantOperationalEvent hasErrorCode]
  -[AWDSymptomsSignificantOperationalEvent setErrorCode:]
  -[AWDSymptomsSignificantOperationalEvent errorCode]
  -[AWDSymptomsSignificantOperationalEvent setErrorDomain:]
  -[AWDSymptomsSignificantOperationalEvent setTimestamp:]
  -[AWDSymptomsSignificantOperationalEvent copyTo:]
  -[AWDSymptomsSignificantOperationalEvent setHasStatus:]
  -[AWDSymptomsSignificantOperationalEvent hasStatus]
  -[AWDSymptomsSignificantOperationalEvent error]
  -[AWDSymptomsSignificantOperationalEvent status]
  -[AWDSymptomsSignificantOperationalEvent hasErrorDomain]
  -[AWDSymptomsSignificantOperationalEvent setStatus:]
  -[AWDSymptomsSignificantOperationalEvent errorDomain]
  -[AWDSymptomsSignificantOperationalEvent statusAsString:]
  -[AWDSymptomsSignificantOperationalEvent .cxx_destruct]
  -[AWDSymptomsSignificantOperationalEvent setError:]
  -[AWDSymptomsSignificantOperationalEvent setHasErrorCode:]
  -[AWDSymptomsSignificantOperationalEvent mergeFrom:]
  -[AWDSymptomsSignificantOperationalEvent setHasTimestamp:]
  -[AWDSymptomsSignificantOperationalEvent StringAsStatus:]
  -[AWDSymptomsSignificantOperationalEvent hasError]
  -[AWDSymptomsSignificantOperationalEvent dictionaryRepresentation]
  -[AWDSymptomsSignificantOperationalEvent setName:]
  -[AWDSymptomsSignificantOperationalEvent hasTimestamp]
  -[AWDSymptomsSignificantOperationalEvent copyWithZone:]
  -[AWDSymptomsSignificantOperationalEvent name]
  -[AWDSymptomsSignificantOperationalEvent timestamp]
  -[AWDSymptomsSignificantOperationalEvent readFrom:]
  -[AWDSymptomsSignificantOperationalEvent setHasError:]
  -[AWDSymptomsSignificantOperationalEvent writeTo:]
  -[AWDSymptomsSignificantOperationalEvent isEqual:]
  -[AWDSymptomsSignificantOperationalEvent setHasName:]
  -[AWDSymptomsSignificantOperationalEvent nameAsString:]
  -[AWDSymptomsSignificantOperationalEvent StringAsName:]
  -[AWDSymptomsSignificantOperationalEvent alternateName]
  -[AWDSymptomsSignificantOperationalEvent setAlternateName:]
  -[AWDSymptomsSignificantOperationalEvent hasAlternateName]
  -[AWDSymptomsSignificantOperationalEvent errorAsString:]
  -[AWDSymptomsSignificantOperationalEvent StringAsError:]


AWDSymptomsNetworkAnalyticsRRCConnectedPeriod : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasPeriodType
 @property  int periodType
 @property  BOOL hasAnyListener
 @property  unsigned int anyListener
 @property  BOOL hasBackgroundListeners
 @property  unsigned int backgroundListeners
 @property  BOOL hasPeriodDurationUsecs
 @property  unsigned long periodDurationUsecs
 @property  BOOL hasLastDisconnectedSecs
 @property  unsigned long lastDisconnectedSecs
 @property  BOOL hasIngressLQM
 @property  unsigned int ingressLQM
 @property  BOOL hasCountLQMTransitions
 @property  unsigned int countLQMTransitions
 @property  BOOL hasEgressLQM
 @property  unsigned int egressLQM
 @property  BOOL hasIngressUlThroughputBps
 @property  unsigned long ingressUlThroughputBps
 @property  BOOL hasIngressDlThroughputBps
 @property  unsigned long ingressDlThroughputBps
 @property  BOOL hasEgressUlThroughputBps
 @property  unsigned long egressUlThroughputBps
 @property  BOOL hasEgressDlThroughputBps
 @property  unsigned long egressDlThroughputBps
 @property  BOOL hasBytesIn
 @property  unsigned long bytesIn
 @property  BOOL hasBytesOut
 @property  unsigned long bytesOut
 @property  BOOL hasPacketsIn
 @property  unsigned long packetsIn
 @property  BOOL hasPacketsOut
 @property  unsigned long packetsOut
 @property  BOOL hasUniqueActiveAppCount
 @property  unsigned long uniqueActiveAppCount
 @property  NSMutableArray *activeNameDuringPeriods
 @property  BOOL hasTcCountFlowDispositionUndefined
 @property  unsigned int tcCountFlowDispositionUndefined
 @property  BOOL hasTcCountFlowDispositionTCBKSYS
 @property  unsigned int tcCountFlowDispositionTCBKSYS
 @property  BOOL hasTcCountFlowDispositionTCBK
 @property  unsigned int tcCountFlowDispositionTCBK
 @property  BOOL hasTcCountFlowDispositionTCRD
 @property  unsigned int tcCountFlowDispositionTCRD
 @property  BOOL hasTcCountFlowDispositionTCOAM
 @property  unsigned int tcCountFlowDispositionTCOAM
 @property  BOOL hasTcCountFlowDispositionTCAV
 @property  unsigned int tcCountFlowDispositionTCAV
 @property  BOOL hasTcCountFlowDispositionTCRV
 @property  unsigned int tcCountFlowDispositionTCRV
 @property  BOOL hasTcCountFlowDispositionTCVI
 @property  unsigned int tcCountFlowDispositionTCVI
 @property  BOOL hasTcCountFlowDispositionTCVO
 @property  unsigned int tcCountFlowDispositionTCVO
 @property  BOOL hasTcCountFlowDispositionTCCTL
 @property  unsigned int tcCountFlowDispositionTCCTL
 @property  BOOL hasTcCountFlowDispositionLARGEUL
 @property  unsigned int tcCountFlowDispositionLARGEUL
 @property  BOOL hasTcCountFlowDispositionLARGEDL
 @property  unsigned int tcCountFlowDispositionLARGEDL
 @property  BOOL hasTcCountFlowDispositionLARGE
 @property  unsigned int tcCountFlowDispositionLARGE
 @property  BOOL hasTcCountFlowDispositionBURST
 @property  unsigned int tcCountFlowDispositionBURST
 @property  BOOL hasTcCountFlowDispositionSIRI
 @property  unsigned int tcCountFlowDispositionSIRI
 @property  BOOL hasTcCountFlowDispositionPUSH
 @property  unsigned int tcCountFlowDispositionPUSH
 @property  BOOL hasTcCountFlowDispositionKNOWNOTHER
 @property  unsigned int tcCountFlowDispositionKNOWNOTHER
 @property  BOOL hasTcCountFlowDispositionUNKNOWNOTHER
 @property  unsigned int tcCountFlowDispositionUNKNOWNOTHER
 @property  BOOL hasTcCountFlowDispositionDrop
 @property  unsigned int tcCountFlowDispositionDrop
 @property  BOOL hasTcCountFlowDispositionDefault
 @property  unsigned int tcCountFlowDispositionDefault
 @property  BOOL hasTcCountFlowDispositionFGFacetime
 @property  unsigned int tcCountFlowDispositionFGFacetime
 @property  BOOL hasTcCountFlowDispositionFGIMSG
 @property  unsigned int tcCountFlowDispositionFGIMSG
 @property  BOOL hasTcCountFlowDispositionMail
 @property  unsigned int tcCountFlowDispositionMail
 @property  BOOL hasTcCountFlowDispositionMaps
 @property  unsigned int tcCountFlowDispositionMaps
 @property  BOOL hasTcCountFlowDispositionMediaserverd
 @property  unsigned int tcCountFlowDispositionMediaserverd
 @property  BOOL hasTcCountFlowDispositionMusic
 @property  unsigned int tcCountFlowDispositionMusic
 @property  BOOL hasTcCountFlowDispositionNSURLSessiond
 @property  unsigned int tcCountFlowDispositionNSURLSessiond
 @property  BOOL hasTcCountFlowDispositionNews
 @property  unsigned int tcCountFlowDispositionNews
 @property  BOOL hasTcCountFlowDispositionPodcasts
 @property  unsigned int tcCountFlowDispositionPodcasts
 @property  BOOL hasTcCountFlowDispositionRTCReportingd
 @property  unsigned int tcCountFlowDispositionRTCReportingd
 @property  BOOL hasTcCountFlowDispositionWeather
 @property  unsigned int tcCountFlowDispositionWeather
 @property  BOOL hasTcCountFlowDispositionWebkit
 @property  unsigned int tcCountFlowDispositionWebkit
 @property  BOOL hasPeriodDurationTCEnabledUsecs
 @property  unsigned long periodDurationTCEnabledUsecs
 @property  BOOL hasTcUpdates
 @property  unsigned int tcUpdates
 @property  BOOL hasTcDampeningSuppressed
 @property  unsigned int tcDampeningSuppressed
 @property  BOOL hasTcCountFlowDispositionSafari
 @property  unsigned int tcCountFlowDispositionSafari
 @property  BOOL hasTcCountFlowDispositionStocks
 @property  unsigned int tcCountFlowDispositionStocks

  // class methods
  +[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod activeNameDuringPeriodType]

  // instance methods
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTimestamp:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod copyTo:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod .cxx_destruct]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod mergeFrom:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTimestamp:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod dictionaryRepresentation]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTimestamp]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod copyWithZone:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod timestamp]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod readFrom:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod writeTo:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod isEqual:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setBytesIn:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasBytesIn:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasBytesIn]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setBytesOut:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasBytesOut:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasBytesOut]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setPacketsIn:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasPacketsIn:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasPacketsIn]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setPacketsOut:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasPacketsOut:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasPacketsOut]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod bytesIn]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod bytesOut]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod packetsIn]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod packetsOut]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod periodType]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setPeriodType:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasPeriodType:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasPeriodType]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod periodTypeAsString:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod StringAsPeriodType:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setAnyListener:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasAnyListener:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasAnyListener]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setBackgroundListeners:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasBackgroundListeners:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasBackgroundListeners]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setPeriodDurationUsecs:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasPeriodDurationUsecs:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasPeriodDurationUsecs]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setLastDisconnectedSecs:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasLastDisconnectedSecs:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasLastDisconnectedSecs]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setIngressLQM:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasIngressLQM:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasIngressLQM]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setCountLQMTransitions:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasCountLQMTransitions:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasCountLQMTransitions]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setEgressLQM:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasEgressLQM:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasEgressLQM]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setIngressUlThroughputBps:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasIngressUlThroughputBps:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasIngressUlThroughputBps]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setIngressDlThroughputBps:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasIngressDlThroughputBps:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasIngressDlThroughputBps]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setEgressUlThroughputBps:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasEgressUlThroughputBps:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasEgressUlThroughputBps]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setEgressDlThroughputBps:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasEgressDlThroughputBps:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasEgressDlThroughputBps]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setUniqueActiveAppCount:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasUniqueActiveAppCount:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasUniqueActiveAppCount]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod clearActiveNameDuringPeriods]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod addActiveNameDuringPeriod:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod activeNameDuringPeriodsCount]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod activeNameDuringPeriodAtIndex:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionUndefined:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionUndefined:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionUndefined]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionTCBKSYS:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionTCBKSYS:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionTCBKSYS]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionTCBK:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionTCBK:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionTCBK]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionTCRD:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionTCRD:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionTCRD]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionTCOAM:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionTCOAM:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionTCOAM]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionTCAV:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionTCAV:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionTCAV]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionTCRV:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionTCRV:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionTCRV]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionTCVI:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionTCVI:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionTCVI]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionTCVO:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionTCVO:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionTCVO]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionTCCTL:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionTCCTL:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionTCCTL]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionLARGEUL:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionLARGEUL:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionLARGEUL]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionLARGEDL:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionLARGEDL:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionLARGEDL]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionLARGE:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionLARGE:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionLARGE]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionBURST:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionBURST:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionBURST]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionSIRI:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionSIRI:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionSIRI]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionPUSH:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionPUSH:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionPUSH]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionKNOWNOTHER:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionKNOWNOTHER:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionKNOWNOTHER]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionUNKNOWNOTHER:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionUNKNOWNOTHER:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionUNKNOWNOTHER]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionDrop:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionDrop:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionDrop]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionDefault:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionDefault:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionDefault]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionFGFacetime:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionFGFacetime:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionFGFacetime]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionFGIMSG:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionFGIMSG:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionFGIMSG]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionMail:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionMail:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionMail]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionMaps:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionMaps:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionMaps]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionMediaserverd:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionMediaserverd:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionMediaserverd]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionMusic:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionMusic:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionMusic]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionNSURLSessiond:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionNSURLSessiond:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionNSURLSessiond]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionNews:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionNews:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionNews]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionPodcasts:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionPodcasts:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionPodcasts]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionRTCReportingd:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionRTCReportingd:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionRTCReportingd]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionWeather:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionWeather:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionWeather]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionWebkit:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionWebkit:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionWebkit]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setPeriodDurationTCEnabledUsecs:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasPeriodDurationTCEnabledUsecs:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasPeriodDurationTCEnabledUsecs]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcUpdates:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcUpdates:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcUpdates]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcDampeningSuppressed:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcDampeningSuppressed:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcDampeningSuppressed]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionSafari:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionSafari:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionSafari]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setTcCountFlowDispositionStocks:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setHasTcCountFlowDispositionStocks:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod hasTcCountFlowDispositionStocks]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod anyListener]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod backgroundListeners]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod periodDurationUsecs]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod lastDisconnectedSecs]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod ingressLQM]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod countLQMTransitions]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod egressLQM]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod ingressUlThroughputBps]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod ingressDlThroughputBps]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod egressUlThroughputBps]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod egressDlThroughputBps]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod uniqueActiveAppCount]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod activeNameDuringPeriods]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod setActiveNameDuringPeriods:]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionUndefined]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionTCBKSYS]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionTCBK]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionTCRD]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionTCOAM]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionTCAV]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionTCRV]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionTCVI]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionTCVO]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionTCCTL]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionLARGEUL]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionLARGEDL]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionLARGE]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionBURST]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionSIRI]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionPUSH]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionKNOWNOTHER]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionUNKNOWNOTHER]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionDrop]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionDefault]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionFGFacetime]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionFGIMSG]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionMail]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionMaps]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionMediaserverd]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionMusic]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionNSURLSessiond]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionNews]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionPodcasts]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionRTCReportingd]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionWeather]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionWebkit]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod periodDurationTCEnabledUsecs]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcUpdates]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcDampeningSuppressed]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionSafari]
  -[AWDSymptomsNetworkAnalyticsRRCConnectedPeriod tcCountFlowDispositionStocks]


ManagedEvent : NSObject
 @property  unsigned long id_number
 @property  DecisionDetails *details

  // instance methods
  -[ManagedEvent setDetails:]
  -[ManagedEvent id_number]
  -[ManagedEvent setId_number:]
  -[ManagedEvent details]
  -[ManagedEvent .cxx_destruct]
  -[ManagedEvent serializeToXPCObject:]
  -[ManagedEvent initWithId:details:]


TrackerPolicy : NSObject
 @property  unsigned int numClassMaps
 @property  unsigned int numMgmtFlagsMaps
 @property  FlowClassification *defaultClassification
 @property  unsigned long maximumConnectionsPerHour

  // class methods
  +[TrackerPolicy initialize]
  +[TrackerPolicy preferredInstance:]

  // instance methods
  -[TrackerPolicy numMgmtFlagsMaps]
  -[TrackerPolicy configureInstance:]
  -[TrackerPolicy .cxx_destruct]
  -[TrackerPolicy numClassMaps]
  -[TrackerPolicy setNumClassMaps:]
  -[TrackerPolicy setNumMgmtFlagsMaps:]
  -[TrackerPolicy defaultClassification]
  -[TrackerPolicy addClassification:forTrafficMgmtFlags:]
  -[TrackerPolicy setMaximumConnectionsPerHour:]
  -[TrackerPolicy nonDefaultFlowClassificationFor:]
  -[TrackerPolicy flowClassificationFor:]
  -[TrackerPolicy setDefaultClassification:]
  -[TrackerPolicy addClassification:forTrafficClass:]
  -[TrackerPolicy maximumConnectionsPerHour]
  -[TrackerPolicy init]


OverrideTrackerPolicy : NSObject
  // class methods
  +[OverrideTrackerPolicy sharedInstance]

  // instance methods
  -[OverrideTrackerPolicy maxConnectionPolicyForTarget:]
  -[OverrideTrackerPolicy .cxx_destruct]
  -[OverrideTrackerPolicy maxRRCTimePolicyForTarget:]
  -[OverrideTrackerPolicy useFullActivityBitmaps]
  -[OverrideTrackerPolicy init]


PhysicalInterfaceSample : NSObject
 @property  double startTimeIntervalSinceReferenceDate
 @property  double elapsedTime
 @property  unsigned long rxBytes
 @property  unsigned long txBytes
 @property  double rxThroughput
 @property  double txThroughput
 @property  unsigned long rxThroughputBps
 @property  unsigned long txThroughputBps

  // instance methods
  -[PhysicalInterfaceSample elapsedTime]
  -[PhysicalInterfaceSample setElapsedTime:]
  -[PhysicalInterfaceSample setTxBytes:]
  -[PhysicalInterfaceSample setRxBytes:]
  -[PhysicalInterfaceSample rxBytes]
  -[PhysicalInterfaceSample txBytes]
  -[PhysicalInterfaceSample rxThroughput]
  -[PhysicalInterfaceSample txThroughput]
  -[PhysicalInterfaceSample rxThroughputBps]
  -[PhysicalInterfaceSample txThroughputBps]
  -[PhysicalInterfaceSample startTimeIntervalSinceReferenceDate]
  -[PhysicalInterfaceSample setStartTimeIntervalSinceReferenceDate:]


PhysicalInterfaceSampler : FlowHistorian
 @property  NSMutableArray *interfaceSamples
 @property  long long ifType
 @property  BOOL pendingInterfaceSampleIsIdle
 @property  unsigned long totalRxIfTypeBytes
 @property  unsigned long totalTxIfTypeBytes
 @property  double lastInterfaceTrafficTimestamp
 @property  BOOL hasSustainedConservativeHighInterfaceThroughput
 @property  BOOL hasSustainedResponsiveHighInterfaceThroughput
 @property  BOOL hasSustainedHighInterfaceRxThroughput
 @property  BOOL hasSustainedHighInterfaceTxThroughput

  // class methods
  +[PhysicalInterfaceSampler sharedInstanceForInterfaceType:]

  // instance methods
  -[PhysicalInterfaceSampler restoreDefaults]
  -[PhysicalInterfaceSampler setConfiguration:]
  -[PhysicalInterfaceSampler setLastInterfaceTrafficTimestamp:]
  -[PhysicalInterfaceSampler pendingInterfaceSampleIsIdle]
  -[PhysicalInterfaceSampler setHasSustainedResponsiveHighInterfaceThroughput:]
  -[PhysicalInterfaceSampler hasSustainedHighInterfaceRxThroughput]
  -[PhysicalInterfaceSampler .cxx_destruct]
  -[PhysicalInterfaceSampler updateAssesmentHelper:]
  -[PhysicalInterfaceSampler ensureNonZeroPhysicalInterfaceThroughputParameters]
  -[PhysicalInterfaceSampler setTotalTxIfTypeBytes:]
  -[PhysicalInterfaceSampler setHasSustainedConservativeHighInterfaceThroughput:]
  -[PhysicalInterfaceSampler updateInterfaceSamplesWithTime:bumpSamples:]
  -[PhysicalInterfaceSampler hasSustainedHighInterfaceTxThroughput]
  -[PhysicalInterfaceSampler totalTxIfTypeBytes]
  -[PhysicalInterfaceSampler setIfType:]
  -[PhysicalInterfaceSampler updateAssesments]
  -[PhysicalInterfaceSampler ifType]
  -[PhysicalInterfaceSampler hasSustainedResponsiveHighInterfaceThroughput]
  -[PhysicalInterfaceSampler interfaceSamples]
  -[PhysicalInterfaceSampler setInterfaceSamples:]
  -[PhysicalInterfaceSampler getState:]
  -[PhysicalInterfaceSampler totalRxIfTypeBytes]
  -[PhysicalInterfaceSampler lastInterfaceTrafficTimestamp]
  -[PhysicalInterfaceSampler init]
  -[PhysicalInterfaceSampler setTotalRxIfTypeBytes:]
  -[PhysicalInterfaceSampler hasSustainedConservativeHighInterfaceThroughput]


ManagedEventHandler : NSObject
  // class methods
  +[ManagedEventHandler initialize]
  +[ManagedEventHandler getHandlerByName:]

  // instance methods
  -[ManagedEventHandler feedbackForEventId:]
  -[ManagedEventHandler .cxx_destruct]
  -[ManagedEventHandler populateReply:ForId:Count:]
  -[ManagedEventHandler initWithName:]
  -[ManagedEventHandler sendNotificationWithId:]
  -[ManagedEventHandler didReceiveSyndrome:]


ExpertSystemStateCore : NSObject
 @property  NSString *label
 @property  unsigned long rank
 @property  NSDictionary *entryPreds
 @property  StopWatch *sojournTime
 @property  @? entryAction
 @property  @? loopEvaluation
 @property  @? exitAction
 @property  int loopTokens
 @property  ExpertSystemStateCore *previousState

  // instance methods
  -[ExpertSystemStateCore rank]
  -[ExpertSystemStateCore loopEvaluation]
  -[ExpertSystemStateCore setEntryAction:]
  -[ExpertSystemStateCore exitAction]
  -[ExpertSystemStateCore previousState]
  -[ExpertSystemStateCore loopTokens]
  -[ExpertSystemStateCore .cxx_destruct]
  -[ExpertSystemStateCore setExitAction:]
  -[ExpertSystemStateCore entryAction]
  -[ExpertSystemStateCore setPreviousState:]
  -[ExpertSystemStateCore setLoopEvaluation:]
  -[ExpertSystemStateCore setLoopTokens:]
  -[ExpertSystemStateCore label]
  -[ExpertSystemStateCore sojournTime]
  -[ExpertSystemStateCore initStateWithLabel:rank:entryPreds:]
  -[ExpertSystemStateCore entryPreds]


ExpertSystemHandlerCore : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ExpertSystemHandlerCore internalStateDictionary]
  +[ExpertSystemHandlerCore configureClass:]

  // instance methods
  -[ExpertSystemHandlerCore read:returnedValues:]
  -[ExpertSystemHandlerCore noteSymptom:]
  -[ExpertSystemHandlerCore configureInstance:]
  -[ExpertSystemHandlerCore dealloc]
  -[ExpertSystemHandlerCore .cxx_destruct]
  -[ExpertSystemHandlerCore cancelAllTimers]
  -[ExpertSystemHandlerCore initWithQueue:]
  -[ExpertSystemHandlerCore queue]
  -[ExpertSystemHandlerCore scheduleTimerFor:leeway:identifier:queue:eventHandler:cancelHandler:]
  -[ExpertSystemHandlerCore cancelTimerWithIdentifier:]


AWDSymptomsDiagnosticNotificationToken : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNotificationToken
 @property  NSString *notificationToken

  // instance methods
  -[AWDSymptomsDiagnosticNotificationToken setTimestamp:]
  -[AWDSymptomsDiagnosticNotificationToken copyTo:]
  -[AWDSymptomsDiagnosticNotificationToken .cxx_destruct]
  -[AWDSymptomsDiagnosticNotificationToken mergeFrom:]
  -[AWDSymptomsDiagnosticNotificationToken setHasTimestamp:]
  -[AWDSymptomsDiagnosticNotificationToken dictionaryRepresentation]
  -[AWDSymptomsDiagnosticNotificationToken hasTimestamp]
  -[AWDSymptomsDiagnosticNotificationToken copyWithZone:]
  -[AWDSymptomsDiagnosticNotificationToken timestamp]
  -[AWDSymptomsDiagnosticNotificationToken readFrom:]
  -[AWDSymptomsDiagnosticNotificationToken notificationToken]
  -[AWDSymptomsDiagnosticNotificationToken writeTo:]
  -[AWDSymptomsDiagnosticNotificationToken isEqual:]
  -[AWDSymptomsDiagnosticNotificationToken setNotificationToken:]
  -[AWDSymptomsDiagnosticNotificationToken hasNotificationToken]


ManagedEventTransport : NSObject
  // class methods
  +[ManagedEventTransport sharedInstance]
  +[ManagedEventTransport feedbackForEventId:]
  +[ManagedEventTransport setInfoProvider:forId:]
  +[ManagedEventTransport retireEventId:]
  +[ManagedEventTransport setListeningPort:]
  +[ManagedEventTransport obtainEventId:]

  // instance methods
  -[ManagedEventTransport feedbackForEventId:]
  -[ManagedEventTransport setInfoProvider:forId:]
  -[ManagedEventTransport retireEventId:]
  -[ManagedEventTransport setListeningPort:]
  -[ManagedEventTransport .cxx_destruct]
  -[ManagedEventTransport obtainEventId:]
  -[ManagedEventTransport sendReplyInfo:onConnection:withErrCode:forId:name:date:reason:reasonCode:info:]
  -[ManagedEventTransport _createReply:forConnection:]
  -[ManagedEventTransport init]


MinimalSyndromeHandler : NSObject <SyndromeHandlerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MinimalSyndromeHandler initialize]
  +[MinimalSyndromeHandler getHandlerByName:]

  // instance methods
  -[MinimalSyndromeHandler .cxx_destruct]
  -[MinimalSyndromeHandler didReceiveSyndrome:]


DelayDetails : NSObject
 @property  double fireAt
 @property  id context

  // instance methods
  -[DelayDetails .cxx_destruct]
  -[DelayDetails setContext:]
  -[DelayDetails context]
  -[DelayDetails fireAt]
  -[DelayDetails setFireAt:]


CellThroughputAdviser : NSObject <FlowScheduledRefreshDelegate>
 @property  FlowOracle *flowOracle
 @property  FlowScrutinizer *flowScrutinizer
 @property  BOOL enabled
 @property  BOOL isScreenDark
 @property  BOOL isScreenLocked
 @property  BOOL nrFrequencyBand
 @property  unsigned int adminAdviceOverride
 @property  unsigned int targetAdviceLevel
 @property  double propertyChangeTimestamp
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <CellThroughputAdviserDelegate> *delegate
 @property  double exploreExploitLearningRatioForHighTransferSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CellThroughputAdviser sharedInstance]

  // instance methods
  -[CellThroughputAdviser restoreDefaults]
  -[CellThroughputAdviser isScreenLocked]
  -[CellThroughputAdviser setNrFrequencyBand:]
  -[CellThroughputAdviser setDelegate:]
  -[CellThroughputAdviser postAWDMetric:withIdentifier:]
  -[CellThroughputAdviser delegate]
  -[CellThroughputAdviser configureInstance:]
  -[CellThroughputAdviser didPollFlowsCallbackOrder]
  -[CellThroughputAdviser .cxx_destruct]
  -[CellThroughputAdviser setEnabled:]
  -[CellThroughputAdviser observeValueForKeyPath:ofObject:change:context:]
  -[CellThroughputAdviser setQueue:]
  -[CellThroughputAdviser nrFrequencyBand]
  -[CellThroughputAdviser didPollFlowsAt:periodic:]
  -[CellThroughputAdviser queue]
  -[CellThroughputAdviser enabled]
  -[CellThroughputAdviser _getState:]
  -[CellThroughputAdviser setIsScreenLocked:]
  -[CellThroughputAdviser getStateAt:]
  -[CellThroughputAdviser init]
  -[CellThroughputAdviser flowScrutinizer]
  -[CellThroughputAdviser isScreenDark]
  -[CellThroughputAdviser willPollFlows]
  -[CellThroughputAdviser jsonForSnapshot:]
  -[CellThroughputAdviser jsonForClassification:]
  -[CellThroughputAdviser jsonForAWDReport:]
  -[CellThroughputAdviser jsonForUUID:]
  -[CellThroughputAdviser encodingRepresentsNSUUID:]
  -[CellThroughputAdviser encodingToNSUUID:]
  -[CellThroughputAdviser jsonForUint64:]
  -[CellThroughputAdviser encodingRepresentsUint64:]
  -[CellThroughputAdviser encodingToUint64:]
  -[CellThroughputAdviser jsonForInt:]
  -[CellThroughputAdviser encodingRepresentsInt:]
  -[CellThroughputAdviser encodingToInt:]
  -[CellThroughputAdviser jsonForNSString:]
  -[CellThroughputAdviser encodingRepresentsNSString:]
  -[CellThroughputAdviser encodingToNSString:]
  -[CellThroughputAdviser jsonForTimeInterval:indent:]
  -[CellThroughputAdviser encodingRepresentsNSTimeInterval:]
  -[CellThroughputAdviser encodingToNSTimeInterval:]
  -[CellThroughputAdviser _initiatorArray:addOriginNameWithForegroundPrefix:]
  -[CellThroughputAdviser _causeInitiators:]
  -[CellThroughputAdviser _initiatorNameSetFromCauseArray:]
  -[CellThroughputAdviser _AWDCollectLatestLinkThroughput:]
  -[CellThroughputAdviser _AWDActionForNewAdvice:cause:at:]
  -[CellThroughputAdviser _startPowerLogCollectionFor:]
  -[CellThroughputAdviser _finishPowerLogCollection]
  -[CellThroughputAdviser _powerLogActionForNewAdvice:cause:at:]
  -[CellThroughputAdviser noteAdviceForMetrics:cause:]
  -[CellThroughputAdviser reportPeriodicAWDStatistics]
  -[CellThroughputAdviser currentAWDSymptomsCellularSDMPollingStatistics]
  -[CellThroughputAdviser currentAWDSymptomsCellularSDMTimeStatistics]
  -[CellThroughputAdviser _minRequiredCoreMediaAssetDownloadThroughputForCurrentRadioState]
  -[CellThroughputAdviser _coreMediaAssetDownloadActiveCauseForCurrentRadioState]
  -[CellThroughputAdviser _minRequiredBackgroundTransferThroughputForCurrentRadioState]
  -[CellThroughputAdviser _backgroundTransferActiveCauseForCurrentRadioState]
  -[CellThroughputAdviser _backgroundTransferHysteresisCauseForCurrentRadioState]
  -[CellThroughputAdviser _coreMediaAssetDownloadHysteresisCauseForCurrentRadioState]
  -[CellThroughputAdviser checkCoreMediaAssetDownloadCauses:]
  -[CellThroughputAdviser checkBackgroundTransferCauses:]
  -[CellThroughputAdviser _minRequiredLargeTransferThroughputForCurrentRadioState]
  -[CellThroughputAdviser _largeTransferContinuesCauseForCurrentRadioState]
  -[CellThroughputAdviser _largeTransferHysteresisCauseForCurrentRadioState]
  -[CellThroughputAdviser _largeTransferFinalHysteresisCauseForCurrentRadioState]
  -[CellThroughputAdviser checkLibnetcoreLargeTransferCauses:andOptOuts:]
  -[CellThroughputAdviser determineAdvice:]
  -[CellThroughputAdviser determineNonCoreMediaRxThroughput:txThroughput:]
  -[CellThroughputAdviser setPollingRate:]
  -[CellThroughputAdviser _configureFlowOracleThresholds]
  -[CellThroughputAdviser quiesce]
  -[CellThroughputAdviser unquiesce]
  -[CellThroughputAdviser _assessActivityStateForQuiesce]
  -[CellThroughputAdviser performActivityStatsTimekeeping]
  -[CellThroughputAdviser _refreshAdvice:]
  -[CellThroughputAdviser setAdminAdviceOverride:]
  -[CellThroughputAdviser setTargetAdviceLevel:]
  -[CellThroughputAdviser setIsScreenDark:]
  -[CellThroughputAdviser setPropertyChangeTimestamp:]
  -[CellThroughputAdviser notePollIntervalForMetrics:]
  -[CellThroughputAdviser noteSizeableBackgroundTransferEventName:event:downloadSizeBytes:uploadSizeBytes:at:]
  -[CellThroughputAdviser configItemToLongLong:]
  -[CellThroughputAdviser _dumpArray:]
  -[CellThroughputAdviser dumpStateAt:verbose:]
  -[CellThroughputAdviser _getCombinedStateAt:]
  -[CellThroughputAdviser _checkPendingTimers:]
  -[CellThroughputAdviser setTimerCallbackWithSimulatedDelay:context:]
  -[CellThroughputAdviser performAction:verbose:]
  -[CellThroughputAdviser adminAdviceOverride]
  -[CellThroughputAdviser targetAdviceLevel]
  -[CellThroughputAdviser propertyChangeTimestamp]
  -[CellThroughputAdviser exploreExploitLearningRatioForHighTransferSize]
  -[CellThroughputAdviser flowOracle]
  -[CellThroughputAdviser setFlowOracle:]
  -[CellThroughputAdviser setFlowScrutinizer:]


NetworkAnalyticsQueueStatisticsSlotEntry : NSObject
 @property  unsigned char slot
 @property  unsigned long minimumQueueDelay
 @property  unsigned long maximumQueueDelay
 @property  unsigned long averageQueueDelay

  // instance methods
  -[NetworkAnalyticsQueueStatisticsSlotEntry slot]
  -[NetworkAnalyticsQueueStatisticsSlotEntry setSlot:]
  -[NetworkAnalyticsQueueStatisticsSlotEntry averageQueueDelay]
  -[NetworkAnalyticsQueueStatisticsSlotEntry setAverageQueueDelay:]
  -[NetworkAnalyticsQueueStatisticsSlotEntry minimumQueueDelay]
  -[NetworkAnalyticsQueueStatisticsSlotEntry setMinimumQueueDelay:]
  -[NetworkAnalyticsQueueStatisticsSlotEntry maximumQueueDelay]
  -[NetworkAnalyticsQueueStatisticsSlotEntry setMaximumQueueDelay:]


NetworkAnalyticsQueueStatistics : NSObject
 @property  NSMutableArray *slots
 @property  NSString *interfaceName

  // class methods
  +[NetworkAnalyticsQueueStatistics schedulerToString:]
  +[NetworkAnalyticsQueueStatistics slotToString:]

  // instance methods
  -[NetworkAnalyticsQueueStatistics initWithInterfaceName:]
  -[NetworkAnalyticsQueueStatistics interfaceName]
  -[NetworkAnalyticsQueueStatistics dealloc]
  -[NetworkAnalyticsQueueStatistics .cxx_destruct]
  -[NetworkAnalyticsQueueStatistics update]
  -[NetworkAnalyticsQueueStatistics slots]
  -[NetworkAnalyticsQueueStatistics createIoctlSocket]
  -[NetworkAnalyticsQueueStatistics cleanupIoctlSocket]
  -[NetworkAnalyticsQueueStatistics _entryForSlot:]
  -[NetworkAnalyticsQueueStatistics _processNewStats:forSlot:]
  -[NetworkAnalyticsQueueStatistics _updateForSlot:]
  -[NetworkAnalyticsQueueStatistics setSlots:]


Score : NSObject
 @property  double upPct
 @property  double overallStay
 @property  double handicapStay
 @property  double epochs
 @property  double lqmTransitionCount
 @property  double connSuccesses
 @property  double connAttempts

  // instance methods
  -[Score epochs]
  -[Score connAttempts]
  -[Score connSuccesses]
  -[Score lqmTransitionCount]
  -[Score overallStay]
  -[Score setEpochs:]
  -[Score setConnAttempts:]
  -[Score upPct]
  -[Score setUpPct:]
  -[Score setOverallStay:]
  -[Score handicapStay]
  -[Score setHandicapStay:]
  -[Score setLqmTransitionCount:]
  -[Score setConnSuccesses:]


NetworkAnalyticsStateRelay : NSObject
 @property  NSString *interfaceName
 @property  unsigned long interfaceIndex
 @property  BOOL active
 @property  BOOL primary
 @property  BOOL knownGood
 @property  BOOL knownSporadic
 @property  BOOL knowableSporadic
 @property  BOOL firstAttachment
 @property  BOOL rxSignalThresholded
 @property  BOOL rxSignalFullBars
 @property  BOOL txThresholded
 @property  BOOL arpOut
 @property  BOOL dnsOut
 @property  BOOL internetDnsOut
 @property  BOOL stuckDefRoute
 @property  unsigned int rxSignalExemptions
 @property  int linkQuality
 @property  int advisory
 @property  unsigned char powerCostDL
 @property  unsigned char powerCostUL
 @property  unsigned char signalBars
 @property  unsigned char radioTechnology
 @property  BOOL lqmAsystole
 @property  long long loi
 @property  BOOL supportsIPv4
 @property  BOOL supportsIPv6
 @property  int lastReportedRxSignalStrength
 @property  unsigned long lastReportedL2TxFrames
 @property  unsigned long lastReportedL2TxRetry
 @property  unsigned long lastReportedL2TxFail
 @property  unsigned long l2MetricsCount
 @property  NSDate *madePrimaryDate
 @property  NetworkAnalyticsQueueStatistics *queueStatistics
 @property  unsigned char interface
 @property  BOOL constrained
 @property  BOOL expensive
 @property  BOOL noCostAdvantage
 @property  BOOL tcpExtraStatsPositive
 @property  BOOL apsdFailure
 @property  unsigned int tcpProgressHintsScore
 @property  NSSet *defaultGateways

  // class methods
  +[NetworkAnalyticsStateRelay automaticallyNotifiesObserversForKey:]

  // instance methods
  -[NetworkAnalyticsStateRelay setValue:forUndefinedKey:]
  -[NetworkAnalyticsStateRelay madePrimaryDate]
  -[NetworkAnalyticsStateRelay knownGood]
  -[NetworkAnalyticsStateRelay addDefaultGateway:]
  -[NetworkAnalyticsStateRelay valueForUndefinedKey:]
  -[NetworkAnalyticsStateRelay interface]
  -[NetworkAnalyticsStateRelay setInterfaceIndex:]
  -[NetworkAnalyticsStateRelay active]
  -[NetworkAnalyticsStateRelay setApsdFailure:]
  -[NetworkAnalyticsStateRelay rxSignalThresholded]
  -[NetworkAnalyticsStateRelay tcpExtraStatsPositive]
  -[NetworkAnalyticsStateRelay linkQuality]
  -[NetworkAnalyticsStateRelay dnsOut]
  -[NetworkAnalyticsStateRelay setSupportsIPv4:]
  -[NetworkAnalyticsStateRelay setConstrained:]
  -[NetworkAnalyticsStateRelay setPrimary:]
  -[NetworkAnalyticsStateRelay knowableSporadic]
  -[NetworkAnalyticsStateRelay setKnownGood:]
  -[NetworkAnalyticsStateRelay setTcpProgressHintsScore:]
  -[NetworkAnalyticsStateRelay setRxSignalThresholded:]
  -[NetworkAnalyticsStateRelay queueStatistics]
  -[NetworkAnalyticsStateRelay setTcpExtraStatsPositive:]
  -[NetworkAnalyticsStateRelay advisory]
  -[NetworkAnalyticsStateRelay noCostAdvantage]
  -[NetworkAnalyticsStateRelay interfaceName]
  -[NetworkAnalyticsStateRelay supportsIPv6]
  -[NetworkAnalyticsStateRelay signalBars]
  -[NetworkAnalyticsStateRelay supportsIPv4]
  -[NetworkAnalyticsStateRelay l2MetricsCount]
  -[NetworkAnalyticsStateRelay setLinkQuality:]
  -[NetworkAnalyticsStateRelay lastReportedL2TxFrames]
  -[NetworkAnalyticsStateRelay setInterfaceName:]
  -[NetworkAnalyticsStateRelay rxSignalFullBars]
  -[NetworkAnalyticsStateRelay setSignalBars:]
  -[NetworkAnalyticsStateRelay .cxx_destruct]
  -[NetworkAnalyticsStateRelay setKnownSporadic:]
  -[NetworkAnalyticsStateRelay setPowerCostDL:]
  -[NetworkAnalyticsStateRelay firstAttachment]
  -[NetworkAnalyticsStateRelay defaultGateways]
  -[NetworkAnalyticsStateRelay txThresholded]
  -[NetworkAnalyticsStateRelay lqmAsystole]
  -[NetworkAnalyticsStateRelay setInternetDnsOut:]
  -[NetworkAnalyticsStateRelay expensive]
  -[NetworkAnalyticsStateRelay stuckDefRoute]
  -[NetworkAnalyticsStateRelay rxSignalExemptions]
  -[NetworkAnalyticsStateRelay tcpProgressHintsScore]
  -[NetworkAnalyticsStateRelay setActive:]
  -[NetworkAnalyticsStateRelay setTxThresholded:]
  -[NetworkAnalyticsStateRelay setLastReportedL2TxFail:]
  -[NetworkAnalyticsStateRelay primary]
  -[NetworkAnalyticsStateRelay setLqmAsystole:]
  -[NetworkAnalyticsStateRelay setLastReportedL2TxRetry:]
  -[NetworkAnalyticsStateRelay setDnsOut:]
  -[NetworkAnalyticsStateRelay setSupportsIPv6:]
  -[NetworkAnalyticsStateRelay initForInternalType:]
  -[NetworkAnalyticsStateRelay lastReportedRxSignalStrength]
  -[NetworkAnalyticsStateRelay arpOut]
  -[NetworkAnalyticsStateRelay setAdvisory:]
  -[NetworkAnalyticsStateRelay setFirstAttachment:]
  -[NetworkAnalyticsStateRelay setLastReportedL2TxFrames:]
  -[NetworkAnalyticsStateRelay setStuckDefRoute:]
  -[NetworkAnalyticsStateRelay setMadePrimaryDate:]
  -[NetworkAnalyticsStateRelay setKnowableSporadic:]
  -[NetworkAnalyticsStateRelay apsdFailure]
  -[NetworkAnalyticsStateRelay setLoi:]
  -[NetworkAnalyticsStateRelay setPowerCostUL:]
  -[NetworkAnalyticsStateRelay removeAllDefaultGateways]
  -[NetworkAnalyticsStateRelay knownSporadic]
  -[NetworkAnalyticsStateRelay setExpensive:]
  -[NetworkAnalyticsStateRelay populatePropertiesOnAWDMetric:ingress:]
  -[NetworkAnalyticsStateRelay loi]
  -[NetworkAnalyticsStateRelay setNoCostAdvantage:]
  -[NetworkAnalyticsStateRelay interfaceIndex]
  -[NetworkAnalyticsStateRelay setRxSignalExemptions:]
  -[NetworkAnalyticsStateRelay powerCostUL]
  -[NetworkAnalyticsStateRelay setL2MetricsCount:]
  -[NetworkAnalyticsStateRelay setArpOut:]
  -[NetworkAnalyticsStateRelay setLastReportedRxSignalStrength:]
  -[NetworkAnalyticsStateRelay lastReportedL2TxFail]
  -[NetworkAnalyticsStateRelay constrained]
  -[NetworkAnalyticsStateRelay updateSignalStrength:]
  -[NetworkAnalyticsStateRelay internetDnsOut]
  -[NetworkAnalyticsStateRelay powerCostDL]
  -[NetworkAnalyticsStateRelay lastReportedL2TxRetry]
  -[NetworkAnalyticsStateRelay setQueueStatistics:]
  -[NetworkAnalyticsStateRelay setRadioTechnology:]
  -[NetworkAnalyticsStateRelay radioTechnology]
  -[NetworkAnalyticsStateRelay setRxSignalFullBars:]


CellularStateRelay : NetworkAnalyticsStateRelay
 @property  BOOL nrServingCellType
 @property  BOOL nrFrequencyBand
 @property  BOOL ratSelectionIsNR
 @property  int cellMNC
 @property  int cellMCC
 @property  int cellUARFCN
 @property  int cellPID
 @property  int cellBandInfo
 @property  NSString *cellType
 @property  int cellBandwidth
 @property  int cellTAC
 @property  int cellRSRP
 @property  BOOL cellRrcConnected
 @property  NSNumber *ratSelectionMask
 @property  NSString *ratSelectionCurrent
 @property  NSString *ratSelectionPreferred
 @property  unsigned long cellSPIType
 @property  unsigned char cellDualSimStatus
 @property  int cellNonPreferredMNC
 @property  int cellNonPreferredMCC

  // instance methods
  -[CellularStateRelay setNrFrequencyBand:]
  -[CellularStateRelay cellRSRP]
  -[CellularStateRelay ratSelectionIsNR]
  -[CellularStateRelay ratSelectionCurrent]
  -[CellularStateRelay setNrServingCellType:]
  -[CellularStateRelay setCellSPIType:]
  -[CellularStateRelay cellPID]
  -[CellularStateRelay cellUARFCN]
  -[CellularStateRelay nrServingCellType]
  -[CellularStateRelay cellNonPreferredMCC]
  -[CellularStateRelay cellNonPreferredMNC]
  -[CellularStateRelay setCellMCC:]
  -[CellularStateRelay setRatSelectionCurrent:]
  -[CellularStateRelay cellBandwidth]
  -[CellularStateRelay cellBandInfo]
  -[CellularStateRelay .cxx_destruct]
  -[CellularStateRelay setCellType:]
  -[CellularStateRelay updateCellInfo:]
  -[CellularStateRelay setCellBandwidth:]
  -[CellularStateRelay setCellTAC:]
  -[CellularStateRelay ratSelectionPreferred]
  -[CellularStateRelay setCellNonPreferredMCC:]
  -[CellularStateRelay setRatSelectionMask:]
  -[CellularStateRelay setRatSelectionPreferred:]
  -[CellularStateRelay setCellRSRP:]
  -[CellularStateRelay setCellPID:]
  -[CellularStateRelay setCellNonPreferredMNC:]
  -[CellularStateRelay extendedDescription]
  -[CellularStateRelay initForInternalType:]
  -[CellularStateRelay setCellDualSimStatus:]
  -[CellularStateRelay nrFrequencyBand]
  -[CellularStateRelay cellDualSimStatus]
  -[CellularStateRelay cellMNC]
  -[CellularStateRelay setCellBandInfo:]
  -[CellularStateRelay cellRrcConnected]
  -[CellularStateRelay cellMCC]
  -[CellularStateRelay ratSelectionMask]
  -[CellularStateRelay setCellMNC:]
  -[CellularStateRelay cellSPIType]
  -[CellularStateRelay setCellUARFCN:]
  -[CellularStateRelay setCellRrcConnected:]
  -[CellularStateRelay setRatSelectionIsNR:]
  -[CellularStateRelay cellTAC]
  -[CellularStateRelay cellType]


NetworkAnalyticsEngine : AnalyticsEngineCore <WiFiShimDelegate, ProxyAnalyticsDelegate, CoreTelephonyShimDelegate>
 @property  BOOL delegateToProxyAnalytics
 @property  BOOL removeOldRecordsNow
 @property  ProxyAnalytics *proxyAnalytics
 @property  NSObject<OS_os_transaction> *activeEpochTransaction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NetworkAnalyticsEngine mapLinkQuality:]
  +[NetworkAnalyticsEngine sharedInstance]
  +[NetworkAnalyticsEngine mapRadioTechnologyTypeToString:]
  +[NetworkAnalyticsEngine setupCoreTelephonyAndBasebandNotificationsOnElevatedPriorityQueue]
  +[NetworkAnalyticsEngine relayRebufferState:]
  +[NetworkAnalyticsEngine usageToLOICorrelationFor:scopedToLOI:queue:reply:]
  +[NetworkAnalyticsEngine getDNSCountsOn:total:impacted:]
  +[NetworkAnalyticsEngine relayCellThroughputAdvice:]
  +[NetworkAnalyticsEngine hashPrimaryKey:]
  +[NetworkAnalyticsEngine trainModelAndScore:lastScoreDate:output:]
  +[NetworkAnalyticsEngine relayAudioVideoStatus:rxThroughput:txThroughput:reset:]
  +[NetworkAnalyticsEngine layer2MetricsOn:queue:reply:]
  +[NetworkAnalyticsEngine getAuditableLoadedLQMOn:queue:reply:]
  +[NetworkAnalyticsEngine hasNetworkAttachmentOn:isAny:isBuiltin:scopedToLOI:hasCustomSignature:queue:reply:]
  +[NetworkAnalyticsEngine getLoadedLQMOn:]
  +[NetworkAnalyticsEngine relayWiFiViability:]
  +[NetworkAnalyticsEngine hasAnyNetworkAttachmenOnLOI:]
  +[NetworkAnalyticsEngine estimatedTransferTimeOn:forPayloadInfo:queue:reply:]
  +[NetworkAnalyticsEngine concurrentEpochs]
  +[NetworkAnalyticsEngine skimMemoryJournalFor:]
  +[NetworkAnalyticsEngine fetchHashSaltFromJournalUsingImpoExpoService:]
  +[NetworkAnalyticsEngine hashPrimaryKey:withSalt:]
  +[NetworkAnalyticsEngine refreshLOIForInterfaceType:]
  +[NetworkAnalyticsEngine performPersistentStoreHealthCheckWithReply:]
  +[NetworkAnalyticsEngine updateLOI:forInterfaceType:]
  +[NetworkAnalyticsEngine mapNrFrequencyBandToString:]
  +[NetworkAnalyticsEngine awdCaptureIn:replyQueue:reply:]
  +[NetworkAnalyticsEngine performNetAttachmentQueryOn:reply:]
  +[NetworkAnalyticsEngine queue]
  +[NetworkAnalyticsEngine getStateRelayFor:]
  +[NetworkAnalyticsEngine mapPowerCost:]
  +[NetworkAnalyticsEngine sendTrafficInfoFlags:changeFlags:foreground:]
  +[NetworkAnalyticsEngine _constructRxSignalExemptionsBitmapFromHint:reasons:]
  +[NetworkAnalyticsEngine mapRadioTechnology:]
  +[NetworkAnalyticsEngine relayDataStallState:dnsFailureState:]

  // instance methods
  -[NetworkAnalyticsEngine getOption:]
  -[NetworkAnalyticsEngine signalStrengthChanged:]
  -[NetworkAnalyticsEngine wifiShim_WiFiManagerHasRestarted]
  -[NetworkAnalyticsEngine _awdCaptureIn:replyQueue:reply:]
  -[NetworkAnalyticsEngine _skimMemoryJournalFor:]
  -[NetworkAnalyticsEngine activeEpochTransaction]
  -[NetworkAnalyticsEngine _actUponCellRrcChangeTo:]
  -[NetworkAnalyticsEngine wifiShim_LQMAsystoleDetected:]
  -[NetworkAnalyticsEngine _refreshRouteMetricsWithCallbackOnQueue:completionBlock:]
  -[NetworkAnalyticsEngine _appendJournalRecord:withPreamble:]
  -[NetworkAnalyticsEngine _flushAllJournalRecords]
  -[NetworkAnalyticsEngine _dataStall:]
  -[NetworkAnalyticsEngine setRemoveOldRecordsNow:]
  -[NetworkAnalyticsEngine _performPeriodicTasks:]
  -[NetworkAnalyticsEngine _hasNetworkAttachmentOn:isAny:isBuiltin:scopedToLOI:hasCustomSignature:queue:reply:]
  -[NetworkAnalyticsEngine _generateAdviceForEpoch:relativeTo:]
  -[NetworkAnalyticsEngine wifiShim_L2NewMetrics:forInterface:]
  -[NetworkAnalyticsEngine proxyAnalyticsTrainAndScoreInterrupted]
  -[NetworkAnalyticsEngine infoDataStallChangedForSubscription:]
  -[NetworkAnalyticsEngine infoLinkStateChangedForSubscription:]
  -[NetworkAnalyticsEngine _getCellSPIType]
  -[NetworkAnalyticsEngine _estimatedTransferTimeOn:forPayloadInfo:queue:reply:]
  -[NetworkAnalyticsEngine _establishLqmBaselineOn:interfaceName:lqmPtr:]
  -[NetworkAnalyticsEngine _wifiKnownNetworksDeleted:]
  -[NetworkAnalyticsEngine _computeAndApplyLoadedLqmFrom:oldLqm:onInterfaceType:]
  -[NetworkAnalyticsEngine resetDataFor:nameKind:]
  -[NetworkAnalyticsEngine setProhibitNetworkAgentsForNWParameters:]
  -[NetworkAnalyticsEngine _updateCombinedDNSCounts]
  -[NetworkAnalyticsEngine _primaryKeyChange:interfaceName:interfaceType:roamingEvent:]
  -[NetworkAnalyticsEngine _informKernelOfLIMUplink:downlink:forInterface:]
  -[NetworkAnalyticsEngine _retrieveCellCarrierName]
  -[NetworkAnalyticsEngine _performNetAttachmentQueryOn:reply:]
  -[NetworkAnalyticsEngine _handleRouteClosing:]
  -[NetworkAnalyticsEngine getCellInterfaceState]
  -[NetworkAnalyticsEngine _registerForLinkQualityNotifications:]
  -[NetworkAnalyticsEngine infoTrafficClassChangedForSubscription:]
  -[NetworkAnalyticsEngine performPersistentStoreHealthCheckComplete:error:]
  -[NetworkAnalyticsEngine _populateInterfaceTimelineJournalRecord:forInterface:fromDict:]
  -[NetworkAnalyticsEngine getPrevCellFpTimeStamp]
  -[NetworkAnalyticsEngine _createNetworkAttachmentIdentifierExclusionList]
  -[NetworkAnalyticsEngine _usageToLOICorrelationFor:scopedToLOI:queue:reply:]
  -[NetworkAnalyticsEngine countryCodeChangedForSubscription:]
  -[NetworkAnalyticsEngine processCellLinkPowerCostNotification:]
  -[NetworkAnalyticsEngine _createJournalRecordOfType:forInterface:fromDict:]
  -[NetworkAnalyticsEngine processIsAuthorizedForHistoricalSweeps:]
  -[NetworkAnalyticsEngine _registerForEnhancedLinkQualityNotifications]
  -[NetworkAnalyticsEngine _setRadioTechnology:forInterfaceType:]
  -[NetworkAnalyticsEngine getCellRrcState]
  -[NetworkAnalyticsEngine wifiShim]
  -[NetworkAnalyticsEngine _combinedDNSCountForEpoch:]
  -[NetworkAnalyticsEngine dealloc]
  -[NetworkAnalyticsEngine proxyAnalyticsTrainAndScoreComplete:error:]
  -[NetworkAnalyticsEngine _recoverFromSystemCriticalErrors]
  -[NetworkAnalyticsEngine _determineIfThisIsWiFiFirstAttachment:]
  -[NetworkAnalyticsEngine _tcsInfoDescription]
  -[NetworkAnalyticsEngine _naIdentifierToMajor:]
  -[NetworkAnalyticsEngine wifiShim_HintForFallback:reasons:]
  -[NetworkAnalyticsEngine _removeOldRouteRecords]
  -[NetworkAnalyticsEngine _isKnowableSporadicForType:]
  -[NetworkAnalyticsEngine _cellNetworkChangeForInterface:roamingEvent:subscription:]
  -[NetworkAnalyticsEngine _trainModelAndScore:]
  -[NetworkAnalyticsEngine _delayedKnownGoodNetworkAlert]
  -[NetworkAnalyticsEngine wifiShim_BSSIDChangedForInterface:]
  -[NetworkAnalyticsEngine performQueryOnEntity:fetchRequestProperties:pred:sort:actions:service:connection:reply:]
  -[NetworkAnalyticsEngine _armFatalSuspector:isActive:]
  -[NetworkAnalyticsEngine _processNWActivityMetrics]
  -[NetworkAnalyticsEngine infoDataTransferTimeEnabledChangedForSubscription:]
  -[NetworkAnalyticsEngine _informKernelOfCellRrc:forInterface:]
  -[NetworkAnalyticsEngine setDelegateToProxyAnalytics:]
  -[NetworkAnalyticsEngine .cxx_destruct]
  -[NetworkAnalyticsEngine performQueryPostProcessing:actions:processOutcome:]
  -[NetworkAnalyticsEngine processCellLinkFingerprintNotification:]
  -[NetworkAnalyticsEngine _certError:]
  -[NetworkAnalyticsEngine _getAuditableLoadedLQMOn:queue:reply:]
  -[NetworkAnalyticsEngine _recordOfActiveFatalSuspector:]
  -[NetworkAnalyticsEngine setOption:]
  -[NetworkAnalyticsEngine getCellTrafficClassState]
  -[NetworkAnalyticsEngine delegateToProxyAnalytics]
  -[NetworkAnalyticsEngine _processCTCellInfo:]
  -[NetworkAnalyticsEngine _hashPrimaryKey:]
  -[NetworkAnalyticsEngine lastScoreDate]
  -[NetworkAnalyticsEngine _adviceToNSString:]
  -[NetworkAnalyticsEngine _sendTrafficInfoFlags:changeFlags:foreground:]
  -[NetworkAnalyticsEngine networkCodeChangedForSubscription:]
  -[NetworkAnalyticsEngine _hashPrimaryKey:withSalt:]
  -[NetworkAnalyticsEngine _setLastScoreDate:]
  -[NetworkAnalyticsEngine timeOfDayPrecise]
  -[NetworkAnalyticsEngine _refreshRouteMetrics]
  -[NetworkAnalyticsEngine _applyCalculatedScoringMetrics:entries:]
  -[NetworkAnalyticsEngine infoDataTransferTimeChangedForSubscription:]
  -[NetworkAnalyticsEngine ratSelectionChangedForSubscription:]
  -[NetworkAnalyticsEngine _newDefRouteForInterface:saFamily:]
  -[NetworkAnalyticsEngine _armLowQDisconnectSuspector:]
  -[NetworkAnalyticsEngine proxyAnalytics]
  -[NetworkAnalyticsEngine _awdCaptureHistorical:replyQueue:reply:]
  -[NetworkAnalyticsEngine _armDOASuspector:]
  -[NetworkAnalyticsEngine removeOldRecordsNow]
  -[NetworkAnalyticsEngine _relayDataStallState:dnsFailureState:]
  -[NetworkAnalyticsEngine clientTransactionsRelease]
  -[NetworkAnalyticsEngine processCellDataTransferTimeNotification:]
  -[NetworkAnalyticsEngine _setupCoreTelephonyAndBasebandNotificationsOnElevatedPriorityQueue]
  -[NetworkAnalyticsEngine processCellLinkStateNotification:]
  -[NetworkAnalyticsEngine _concurrentEpochs]
  -[NetworkAnalyticsEngine wifiNetworkChangedForInterface:roaming:]
  -[NetworkAnalyticsEngine getCurrCellFpTimeStamp]
  -[NetworkAnalyticsEngine observeValueForKeyPath:ofObject:change:context:]
  -[NetworkAnalyticsEngine _insertEpoch:forInterfaceType:]
  -[NetworkAnalyticsEngine handleRRCChange]
  -[NetworkAnalyticsEngine setActiveEpochTransaction:]
  -[NetworkAnalyticsEngine performQueryOnEntityFromCache:pred:altpred:actions:found:]
  -[NetworkAnalyticsEngine _captivityRedirects:]
  -[NetworkAnalyticsEngine _disarmFatalSuspector:withEventAt:by:]
  -[NetworkAnalyticsEngine _radioTechnologyTypeIsNonLTECellular:]
  -[NetworkAnalyticsEngine _registerForSIMStatusChangeNotification:]
  -[NetworkAnalyticsEngine lastScoreExits]
  -[NetworkAnalyticsEngine _computeAndApplyLoadedLqmFrom:oldLqm:onInterfaceType:loadedLqmAuditRecords:]
  -[NetworkAnalyticsEngine _trackRealTimeLqmLastUpdatedOnInterfaceType:]
  -[NetworkAnalyticsEngine _getDNSCountsOn:total:impacted:]
  -[NetworkAnalyticsEngine getCellEstTransferTimeSupportedStatus]
  -[NetworkAnalyticsEngine processCellTrafficClassNotification:]
  -[NetworkAnalyticsEngine _relayAudioVideoStatus:rxThroughput:txThroughput:reset:]
  -[NetworkAnalyticsEngine cellInfoChangedForSubscription:]
  -[NetworkAnalyticsEngine _cellNetworkChangeForInterface:roamingEvent:]
  -[NetworkAnalyticsEngine _disarmDOASuspector:]
  -[NetworkAnalyticsEngine _hashPrimaryKeyInPlace:withSalt:]
  -[NetworkAnalyticsEngine _awaitEstimatedDataTransferTimeWithCallbackOnQueue:completionBlock:]
  -[NetworkAnalyticsEngine currentDataSIMIdentifier:]
  -[NetworkAnalyticsEngine _idleExitTransactionCheck]
  -[NetworkAnalyticsEngine wifiShim_PreferredNetworksChanged:]
  -[NetworkAnalyticsEngine createSnapshotFor:pred:actions:reply:]
  -[NetworkAnalyticsEngine getCellLqmState]
  -[NetworkAnalyticsEngine infoNRServingCellTypeChangedForSubscription:]
  -[NetworkAnalyticsEngine shutdown]
  -[NetworkAnalyticsEngine _updateCellInternetStatus:pdpContext:]
  -[NetworkAnalyticsEngine handlesEntity:]
  -[NetworkAnalyticsEngine _newCellTransferTimeEstimateRequired]
  -[NetworkAnalyticsEngine _populateLIMJournalRecord:fromKernelDict:]
  -[NetworkAnalyticsEngine _actUponLoadedLqmChangeFrom:to:onInterfaceType:]
  -[NetworkAnalyticsEngine _retrieveDNSServersForEpoch:]
  -[NetworkAnalyticsEngine _getCellInternetStatus]
  -[NetworkAnalyticsEngine wifiShim_L2TriggerDisconnectEdge:forInterface:]
  -[NetworkAnalyticsEngine _scoringDuty:forType:withRetCode:oldestTime:]
  -[NetworkAnalyticsEngine processCellDataTransferTimeEnabledNotification:]
  -[NetworkAnalyticsEngine resetCellStatesForXCTests]
  -[NetworkAnalyticsEngine infoLinkPowerCostChangedForSubscription:]
  -[NetworkAnalyticsEngine wifiShim_InfraAdminDisable:bssid:]
  -[NetworkAnalyticsEngine _flowCompleted:]
  -[NetworkAnalyticsEngine _relayWiFiViability:]
  -[NetworkAnalyticsEngine handleLQMChange]
  -[NetworkAnalyticsEngine _relayCellThroughputAdvice:]
  -[NetworkAnalyticsEngine infoLinkQualityFingeprintChangedForSubscription:]
  -[NetworkAnalyticsEngine initWithWorkspace:params:queue:]
  -[NetworkAnalyticsEngine setCellEstTransferTimeSupportedStatus:]
  -[NetworkAnalyticsEngine startRNFTestWithConnection:options:scenarioName:reply:]
  -[NetworkAnalyticsEngine _shouldAcceptRouteSource:]
  -[NetworkAnalyticsEngine _scoringTrampoline]
  -[NetworkAnalyticsEngine stopRunningRNFTestWithReply:]
  -[NetworkAnalyticsEngine _fetchHashSaltFromJournal]
  -[NetworkAnalyticsEngine processCellHighThroughputState:]
  -[NetworkAnalyticsEngine _updateAdviceForInterfaceType:]
  -[NetworkAnalyticsEngine _retrieveCellId:]
  -[NetworkAnalyticsEngine infoHighThroughputStateChanged:]
  -[NetworkAnalyticsEngine _retrieveCellId]
  -[NetworkAnalyticsEngine _refreshRouteMetricsComplete]
  -[NetworkAnalyticsEngine _relayRebufferState:]
  -[NetworkAnalyticsEngine _processLIM:]
  -[NetworkAnalyticsEngine cellularDualSimStatusChangedTo:]
  -[NetworkAnalyticsEngine _sendTrafficClassAndExtendedReportToBaseband]
  -[NetworkAnalyticsEngine _setDefrouteMonitoring:ofInterfaceType:roamingEvent:family:retries:]
  -[NetworkAnalyticsEngine _disarmLowQDisconnectSuspector:]
  -[NetworkAnalyticsEngine _observeNetworkFramework]
  -[NetworkAnalyticsEngine _updateICCID:]
  -[NetworkAnalyticsEngine _populateLQMJournalRecord:fromCellFingerprint:key:atLOI:ofInterfaceType:lqm:isFaulty:]
  -[NetworkAnalyticsEngine _awdCaptureInstant:replyQueue:reply:]
  -[NetworkAnalyticsEngine processCellNRServingCellTypeNotification:]
  -[NetworkAnalyticsEngine _determineSporadicForType:withRetCode:]
  -[NetworkAnalyticsEngine _handleRouteData:]
  -[NetworkAnalyticsEngine setProxyAnalytics:]
  -[NetworkAnalyticsEngine processCellDataStallNotification:]
  -[NetworkAnalyticsEngine _dumpStats]
  -[NetworkAnalyticsEngine _removeEpochForInterfaceType:]
  -[NetworkAnalyticsEngine ctServerConnectionNotification:notificationInfo:]
  -[NetworkAnalyticsEngine _registerForCellChangedNotification:]
  -[NetworkAnalyticsEngine _model]
  -[NetworkAnalyticsEngine _getCellInternetPDPContext]
  -[NetworkAnalyticsEngine _retrieveICCID]
  -[NetworkAnalyticsEngine _wifiNetworkChange:]
  -[NetworkAnalyticsEngine _epochForInterfaceType:]
  -[NetworkAnalyticsEngine _updateAdviceForEpoch:]
  -[NetworkAnalyticsEngine _extractCellLinkFingerprintFrom:]
  -[NetworkAnalyticsEngine _triggerDisconnectEdge:]
  -[NetworkAnalyticsEngine _setScalarValueInNetworkAttachments:targetKeyPath:basedOn:matchingKeyPath:matchValue:noMatchValue:]
  -[NetworkAnalyticsEngine _refreshLOIForInterfaceType:]
  -[NetworkAnalyticsEngine _dnsWithSymptoms:]
  -[NetworkAnalyticsEngine abortRNFTestWithReply:]
  -[NetworkAnalyticsEngine ctDataStatusChangedForSubscription:]
  -[NetworkAnalyticsEngine _layer2MetricsOn:queue:reply:]


SFCacheEntry : NSObject
 @property  NSObject *item
 @property  NSDate *lastUsed

  // instance methods
  -[SFCacheEntry setItem:]
  -[SFCacheEntry setLastUsed:]
  -[SFCacheEntry lastUsed]
  -[SFCacheEntry .cxx_destruct]
  -[SFCacheEntry item]
  -[SFCacheEntry initWithCacheItem:]


SFCache : NSObject
  // instance methods
  -[SFCache initWithPolicy:]
  -[SFCache .cxx_destruct]
  -[SFCache count]
  -[SFCache removeObjectForKey:]
  -[SFCache init]
  -[SFCache initWithPolicy:timeToLive:size:]
  -[SFCache _entryForKey:]
  -[SFCache _insertCacheEntry:forKey:]
  -[SFCache _removeCacheEntryWithKey:]
  -[SFCache entryForKey:]
  -[SFCache addEntry:forKey:]


AlgosScoreHandler : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AlgosScoreHandler sharedInstance]
  +[AlgosScoreHandler configureClass:]

  // instance methods
  -[AlgosScoreHandler read:returnedValues:]
  -[AlgosScoreHandler noteSymptom:]
  -[AlgosScoreHandler processEventFor:withScore:]
  -[AlgosScoreHandler configureInstance:]
  -[AlgosScoreHandler .cxx_destruct]
  -[AlgosScoreHandler init]


AWDSymptomsAdvisoryAppCanUseAlternateNetwork : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasBundleName
 @property  NSString *bundleName
 @property  BOOL hasBailOutOf
 @property  int bailOutOf
 @property  BOOL hasDeliberation
 @property  int deliberation
 @property  BOOL hasRationale
 @property  int rationale
 @property  BOOL hasWwanUsage
 @property  unsigned long wwanUsage
 @property  BOOL hasWifiUsage
 @property  unsigned long wifiUsage
 @property  BOOL hasAltUsage
 @property  unsigned long altUsage
 @property  BOOL hasAllFlows
 @property  unsigned long allFlows
 @property  BOOL hasJumboFlows
 @property  unsigned long jumboFlows

  // instance methods
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork bundleName]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setBundleName:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setTimestamp:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork copyTo:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork .cxx_destruct]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork mergeFrom:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setHasTimestamp:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork dictionaryRepresentation]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork hasTimestamp]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork copyWithZone:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork timestamp]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork readFrom:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork writeTo:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork isEqual:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork allFlows]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork jumboFlows]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork bailOutOf]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setBailOutOf:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setHasBailOutOf:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork hasBailOutOf]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork bailOutOfAsString:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork StringAsBailOutOf:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork hasBundleName]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork deliberation]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setDeliberation:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setHasDeliberation:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork hasDeliberation]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork deliberationAsString:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork StringAsDeliberation:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork rationale]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setRationale:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setHasRationale:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork hasRationale]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork rationaleAsString:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork StringAsRationale:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setWwanUsage:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setHasWwanUsage:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork hasWwanUsage]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setWifiUsage:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setHasWifiUsage:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork hasWifiUsage]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setAltUsage:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setHasAltUsage:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork hasAltUsage]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setAllFlows:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setHasAllFlows:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork hasAllFlows]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setJumboFlows:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork setHasJumboFlows:]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork hasJumboFlows]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork wwanUsage]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork wifiUsage]
  -[AWDSymptomsAdvisoryAppCanUseAlternateNetwork altUsage]


TCPConnectionProbe : TestProbe
  // instance methods
  -[TCPConnectionProbe .cxx_destruct]
  -[TCPConnectionProbe testConection:port:timeout:interfaceName:reply:]
  -[TCPConnectionProbe cancelTest:]


NetworkEpoch : NSObject <NSCopying>
 @property  long long loi
 @property  BOOL active
 @property  BOOL oncell
 @property  ^{__NStatSource=} defRoute4
 @property  ^{__NStatSource=} defRoute6
 @property  BOOL supportsIPv4
 @property  BOOL supportsIPv6
 @property  NSString *primaryKey
 @property  NSString *interfaceName
 @property  int bars
 @property  double lqmTransitions
 @property  NSDate *lastCountedDown
 @property  StopWatch *overall
 @property  StopWatch *lowLqm
 @property  StopWatch *lowq
 @property  StopWatch *fatal
 @property  SFLiveRoutePerf *partial
 @property  SFLiveRoutePerf *partial4
 @property  SFLiveRoutePerf *partial6
 @property  double initialRttAvg
 @property  double initialRttVar
 @property  double topDownlRate
 @property  NSMutableSet *hasDNS
 @property  NSMutableSet *impDNS
 @property  NSMutableSet *hasGW
 @property  BOOL hasInternetDNS
 @property  SFNetworkAttachment *durable
 @property  SFLiveRoutePerf *currentLiveRoutePerf
 @property  NSUUID *uuid
 @property  BOOL knownGoodNotified
 @property  unsigned int seqno
 @property  BOOL deleteNetworkAttachmentsWhenDone

  // class methods
  +[NetworkEpoch snapshotsIn:olderThan:]
  +[NetworkEpoch parsePrimaryKey:majorID:minorID:]
  +[NetworkEpoch parsePrimaryKeyStr:majorIDLengthInBytes:minorIDLengthInBytes:]
  +[NetworkEpoch resetDataForSSIDs:exceptFor:inWorkspace:]
  +[NetworkEpoch epochWithPrimaryKey:interfaceName:isCell:maxBars:roamingEvent:roamingAttrs:supportsIPv4:supportsIPv6:inWorkspace:andQueue:]
  +[NetworkEpoch pruneDataOlderThan:exceptFor:inWorkspace:]
  +[NetworkEpoch coalescingFactor]
  +[NetworkEpoch resetDataFor:exceptFor:inWorkspace:]

  // instance methods
  -[NetworkEpoch fatal]
  -[NetworkEpoch oncell]
  -[NetworkEpoch bars]
  -[NetworkEpoch hasDNS]
  -[NetworkEpoch _retrieveLOIAttrsOnQueue:roamingEvent:roamingAttrs:reply:]
  -[NetworkEpoch setBars:]
  -[NetworkEpoch active]
  -[NetworkEpoch retire]
  -[NetworkEpoch setDefRoute4:]
  -[NetworkEpoch compareToSnapshot:]
  -[NetworkEpoch _initWithPrimaryKey:interfaceName:isCell:maxBars:roamingEvent:roamingAttrs:supportsIPv4:supportsIPv6:inWorkspace:andQueue:]
  -[NetworkEpoch setSupportsIPv4:]
  -[NetworkEpoch establishPartials:withFlag:]
  -[NetworkEpoch setTopDownlRate:]
  -[NetworkEpoch seqno]
  -[NetworkEpoch reportAdminDisable]
  -[NetworkEpoch defRoute4]
  -[NetworkEpoch _createCellSignature]
  -[NetworkEpoch lqmTransitions]
  -[NetworkEpoch interfaceName]
  -[NetworkEpoch partial]
  -[NetworkEpoch dealloc]
  -[NetworkEpoch unloadDurableState]
  -[NetworkEpoch supportsIPv6]
  -[NetworkEpoch supportsIPv4]
  -[NetworkEpoch matchesLOI:]
  -[NetworkEpoch setKnownGoodNotified:]
  -[NetworkEpoch uuid]
  -[NetworkEpoch _networkAttachmentDurableState]
  -[NetworkEpoch createCountDown:atTime:nextTick:ticksTotal:onQueue:withIterationBlock:completionBlock:]
  -[NetworkEpoch currentLiveRoutePerf]
  -[NetworkEpoch setPartial:]
  -[NetworkEpoch setHasDNS:]
  -[NetworkEpoch .cxx_destruct]
  -[NetworkEpoch setFatal:]
  -[NetworkEpoch setUuid:]
  -[NetworkEpoch _isLiveRoutePerfinScope:forTime:]
  -[NetworkEpoch lastCountedDown]
  -[NetworkEpoch setHasInternetDNS:]
  -[NetworkEpoch hasTypicalShortStay]
  -[NetworkEpoch setPartial6:]
  -[NetworkEpoch deleteNetworkAttachmentsWhenDone]
  -[NetworkEpoch updateMetrics:source:wasProgress:]
  -[NetworkEpoch initialRttVar]
  -[NetworkEpoch mapLOIToString]
  -[NetworkEpoch overall]
  -[NetworkEpoch durable]
  -[NetworkEpoch setImpDNS:]
  -[NetworkEpoch knownGoodNotified]
  -[NetworkEpoch reportCaptivityRedirect]
  -[NetworkEpoch setSupportsIPv6:]
  -[NetworkEpoch setLqmTransitions:]
  -[NetworkEpoch refreshLOIOnQueue:reply:]
  -[NetworkEpoch setOverall:]
  -[NetworkEpoch copyWithZone:]
  -[NetworkEpoch hasGW]
  -[NetworkEpoch reportCertError]
  -[NetworkEpoch impDNS]
  -[NetworkEpoch initialRttAvg]
  -[NetworkEpoch countDownStop:eventTimeStamp:]
  -[NetworkEpoch defRoute6]
  -[NetworkEpoch setDefRoute6:]
  -[NetworkEpoch setLoi:]
  -[NetworkEpoch topDownlRate]
  -[NetworkEpoch partial4]
  -[NetworkEpoch loi]
  -[NetworkEpoch hasCountDownActive:]
  -[NetworkEpoch lowLqm]
  -[NetworkEpoch reportDataStall]
  -[NetworkEpoch setLastCountedDown:]
  -[NetworkEpoch _init]
  -[NetworkEpoch hasInternetDNS]
  -[NetworkEpoch setDeleteNetworkAttachmentsWhenDone:]
  -[NetworkEpoch getMatchingRTLocationOfInterestType]
  -[NetworkEpoch primaryKey]
  -[NetworkEpoch partial6]
  -[NetworkEpoch lowq]
  -[NetworkEpoch setPartial4:]
  -[NetworkEpoch setLowq:]
  -[NetworkEpoch setHasGW:]
  -[NetworkEpoch setLowLqm:]
  -[NetworkEpoch RTLocationOfInterestTypeForExtended:]


SymptomsFileCleaner : NSObject <NetDiagnosticsShimDelegate>
 @property  NetDiagnosticsShim *netDiags
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSArray *filesToDelete
 @property  <SymptomsFileCleanerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SymptomsFileCleaner setDelegate:]
  -[SymptomsFileCleaner delegate]
  -[SymptomsFileCleaner .cxx_destruct]
  -[SymptomsFileCleaner setQueue:]
  -[SymptomsFileCleaner initWithQueue:]
  -[SymptomsFileCleaner queue]
  -[SymptomsFileCleaner netDiagnosticTaskStatusChangedFor:toStatus:]
  -[SymptomsFileCleaner cleanupFiles:]
  -[SymptomsFileCleaner netDiags]
  -[SymptomsFileCleaner setNetDiags:]
  -[SymptomsFileCleaner filesToDelete]
  -[SymptomsFileCleaner setFilesToDelete:]


GetNetworkInfoProbe : NetDiagnosticProbe
 @property  @? completionBlock

  // instance methods
  -[GetNetworkInfoProbe setCompletionBlock:]
  -[GetNetworkInfoProbe completionBlock]
  -[GetNetworkInfoProbe dealloc]
  -[GetNetworkInfoProbe .cxx_destruct]
  -[GetNetworkInfoProbe stopTest]
  -[GetNetworkInfoProbe initWithQueue:]
  -[GetNetworkInfoProbe startNetDiagnosticsTask:]
  -[GetNetworkInfoProbe probeOutputFilePaths]
  -[GetNetworkInfoProbe netDiagnosticTaskStatusChangedFor:toStatus:]


FlowScrutinizer : NSObject
 @property  NSMutableDictionary *transferSizeFlows
 @property  NSMutableDictionary *originLedgers
 @property  NSMutableArray *cellAudioVideoSamples
 @property  NSMutableArray *wifiAudioVideoSamples
 @property  BOOL hasForegroundAVTrafficClassFlows
 @property  BOOL hasForegroundCellAVTrafficClassFlows
 @property  BOOL hasForegroundWiFiAVTrafficClassFlows
 @property  long long numExpectedTransferSignificantChanges
 @property  BOOL hasForegroundLikelyAVFlows
 @property  BOOL cellThroughputAdviserShouldRun
 @property  PhysicalInterfaceSampler *cellInterfaceSampler
 @property  PhysicalInterfaceSampler *wifiInterfaceSampler
 @property  double lastCellInterfaceTrafficTimestamp
 @property  double lastWiFiInterfaceTrafficTimestamp
 @property  BOOL accumulateCellAppHistoryEpisodes

  // class methods
  +[FlowScrutinizer sharedInstance]

  // instance methods
  -[FlowScrutinizer restoreDefaults]
  -[FlowScrutinizer setConfiguration:]
  -[FlowScrutinizer transferSizeFlows]
  -[FlowScrutinizer lastWiFiInterfaceTrafficTimestamp]
  -[FlowScrutinizer cellInterfaceSampler]
  -[FlowScrutinizer handleFlowDeltas:snapshot:]
  -[FlowScrutinizer scrutinizeFlow:withClassification:]
  -[FlowScrutinizer wifiInterfaceSampler]
  -[FlowScrutinizer updateTransferSizeFlowsWithTime:]
  -[FlowScrutinizer noteCoreMediaAssetDownloadEvent:downloadUUID:onBehalfOf:duration:at:]
  -[FlowScrutinizer wifiAudioVideoSamples]
  -[FlowScrutinizer hasForegroundLikelyAVFlows]
  -[FlowScrutinizer hasForegroundCellAVTrafficClassFlows]
  -[FlowScrutinizer .cxx_destruct]
  -[FlowScrutinizer addStateForOrigin:named:array:isDelegate:]
  -[FlowScrutinizer coreMediaAssetDownloadCompletion:for:at:]
  -[FlowScrutinizer numExpectedTransferSignificantChanges]
  -[FlowScrutinizer hasForegroundAVTrafficClassFlows]
  -[FlowScrutinizer setOriginLedgers:]
  -[FlowScrutinizer updateInterfaceSamplesWithTime:bumpSamples:]
  -[FlowScrutinizer setHasForegroundAVTrafficClassFlows:]
  -[FlowScrutinizer setCellThroughputAdviserShouldRun:]
  -[FlowScrutinizer setNumExpectedTransferSignificantChanges:]
  -[FlowScrutinizer setWifiAudioVideoSamples:]
  -[FlowScrutinizer cellThroughputAdviserShouldRun]
  -[FlowScrutinizer originLedgers]
  -[FlowScrutinizer updateAudioVideoSamplesWithTime:bumpSamples:]
  -[FlowScrutinizer clearAVSamplesIfAllIdle:time:]
  -[FlowScrutinizer setHasForegroundWiFiAVTrafficClassFlows:]
  -[FlowScrutinizer cellAudioVideoSamples]
  -[FlowScrutinizer setCellAudioVideoSamples:]
  -[FlowScrutinizer getState:]
  -[FlowScrutinizer setHasForegroundCellAVTrafficClassFlows:]
  -[FlowScrutinizer noteExpectedTransfer:inbound:upperThreshold:flowUUID:at:]
  -[FlowScrutinizer lastCellInterfaceTrafficTimestamp]
  -[FlowScrutinizer setTransferSizeFlows:]
  -[FlowScrutinizer hasForegroundWiFiAVTrafficClassFlows]
  -[FlowScrutinizer accumulateCellAppHistoryEpisodes]
  -[FlowScrutinizer init]
  -[FlowScrutinizer setAccumulateCellAppHistoryEpisodes:]


ProcessInfoGenerator : NSObject <ConfigurableObjectProtocol, AdditionalInfoProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ProcessInfoGenerator sharedInstance]
  +[ProcessInfoGenerator generateAdditionalInfo:]
  +[ProcessInfoGenerator configureClass:]

  // instance methods
  -[ProcessInfoGenerator generateAdditionalInfo:]
  -[ProcessInfoGenerator configureInstance:]


ConnectionFailureInstance : NSObject
 @property  double flowStart
 @property  double flowDuration

  // instance methods
  -[ConnectionFailureInstance flowStart]
  -[ConnectionFailureInstance setFlowStart:]
  -[ConnectionFailureInstance flowDuration]
  -[ConnectionFailureInstance setFlowDuration:]


ReportDampener : NSObject
 @property  NSDate *suppressReportingUntil
 @property  unsigned long numSuppressedReports

  // instance methods
  -[ReportDampener .cxx_destruct]
  -[ReportDampener suppressReportingUntil]
  -[ReportDampener setSuppressReportingUntil:]
  -[ReportDampener numSuppressedReports]
  -[ReportDampener setNumSuppressedReports:]


ConnectionFailureTracker : NSObject
 @property  int numConsecutiveFailures
 @property  double firstConnectionFailTime
 @property  double lastConnectionFailTime
 @property  NSString *processName
 @property  BOOL isIPv6
 @property  unsigned int ifIndex
 @property  long long ifType
 @property  NSData *destinationAddress
 @property  NSMutableArray *failedFlows

  // instance methods
  -[ConnectionFailureTracker lastConnectionFailTime]
  -[ConnectionFailureTracker noteInitialSnapshot:]
  -[ConnectionFailureTracker setLastConnectionFailTime:]
  -[ConnectionFailureTracker processName]
  -[ConnectionFailureTracker setProcessName:]
  -[ConnectionFailureTracker isIPv6]
  -[ConnectionFailureTracker firstConnectionFailTime]
  -[ConnectionFailureTracker .cxx_destruct]
  -[ConnectionFailureTracker destinationAddress]
  -[ConnectionFailureTracker setIsIPv6:]
  -[ConnectionFailureTracker setFailedFlows:]
  -[ConnectionFailureTracker setNumConsecutiveFailures:]
  -[ConnectionFailureTracker setIfType:]
  -[ConnectionFailureTracker failedFlows]
  -[ConnectionFailureTracker numConsecutiveFailures]
  -[ConnectionFailureTracker ifType]
  -[ConnectionFailureTracker _logFailure]
  -[ConnectionFailureTracker setFirstConnectionFailTime:]
  -[ConnectionFailureTracker setIfIndex:]
  -[ConnectionFailureTracker setDestinationAddress:]
  -[ConnectionFailureTracker _reportFailure:owner:]
  -[ConnectionFailureTracker ifIndex]


RepeatedConnFailureDetector : NSObject
  // instance methods
  -[RepeatedConnFailureDetector _flush]
  -[RepeatedConnFailureDetector noteSuspectFlow:withOwner:]
  -[RepeatedConnFailureDetector dealloc]
  -[RepeatedConnFailureDetector .cxx_destruct]
  -[RepeatedConnFailureDetector invalidate]
  -[RepeatedConnFailureDetector init]
  -[RepeatedConnFailureDetector _excessiveConnFailuresDetectedOn:owner:]


FlowClassification : NSObject
 @property  unsigned int disposition
 @property  unsigned int latency
 @property  unsigned int jitter
 @property  unsigned int lossTolerance
 @property  unsigned int burstiness
 @property  unsigned int size
 @property  unsigned int requiredBandwidth
 @property  unsigned int preferredBandwidth
 @property  BOOL automatedExpiration
 @property  double expirationTime
 @property  FlowClassification *nextClassification
 @property  unsigned int duration

  // class methods
  +[FlowClassification lossToleranceFromDigest:]
  +[FlowClassification dispositionFromDigest:]
  +[FlowClassification classFlagsToString:]
  +[FlowClassification desiredBandwidthsizeFromDigest:]
  +[FlowClassification propertyFlagsToString:]
  +[FlowClassification undefinedInstance]
  +[FlowClassification defaultInstance]
  +[FlowClassification jitterFromDigest:]
  +[FlowClassification requiredBandwidthsizeFromDigest:]
  +[FlowClassification classificationWithDictionary:]
  +[FlowClassification latencyFromDigest:]

  // instance methods
  -[FlowClassification latency]
  -[FlowClassification setLatency:]
  -[FlowClassification configure:]
  -[FlowClassification nextClassification]
  -[FlowClassification setJitter:]
  -[FlowClassification setLossTolerance:]
  -[FlowClassification expirationTime]
  -[FlowClassification setExpirationTime:]
  -[FlowClassification automatedExpiration]
  -[FlowClassification preferredBandwidth]
  -[FlowClassification .cxx_destruct]
  -[FlowClassification setAutomatedExpiration:]
  -[FlowClassification requiredBandwidth]
  -[FlowClassification jitter]
  -[FlowClassification duration]
  -[FlowClassification size]
  -[FlowClassification setRequiredBandwidth:]
  -[FlowClassification setDisposition:]
  -[FlowClassification disposition]
  -[FlowClassification setBurstiness:]
  -[FlowClassification setOnExpiry:]
  -[FlowClassification burstiness]
  -[FlowClassification lossTolerance]
  -[FlowClassification setPreferredBandwidth:]
  -[FlowClassification setNextClassification:]
  -[FlowClassification setSize:]
  -[FlowClassification dictionaryForm]


AWDSymptomsNoBackhaulPopUpMetric : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNetworkType
 @property  int networkType
 @property  BOOL hasPopUpShownForSecs
 @property  unsigned int popUpShownForSecs
 @property  BOOL hasTimeSinceShownOnSameNetworkSecs
 @property  unsigned int timeSinceShownOnSameNetworkSecs
 @property  BOOL hasTimesShownOnAnyNetworkLast24Hrs
 @property  unsigned int timesShownOnAnyNetworkLast24Hrs
 @property  BOOL hasNetworksShownAtLeastOnceInLast24Hrs
 @property  unsigned int networksShownAtLeastOnceInLast24Hrs
 @property  BOOL hasAction
 @property  int action

  // instance methods
  -[AWDSymptomsNoBackhaulPopUpMetric setNetworkType:]
  -[AWDSymptomsNoBackhaulPopUpMetric networkType]
  -[AWDSymptomsNoBackhaulPopUpMetric setTimestamp:]
  -[AWDSymptomsNoBackhaulPopUpMetric copyTo:]
  -[AWDSymptomsNoBackhaulPopUpMetric mergeFrom:]
  -[AWDSymptomsNoBackhaulPopUpMetric action]
  -[AWDSymptomsNoBackhaulPopUpMetric setHasTimestamp:]
  -[AWDSymptomsNoBackhaulPopUpMetric dictionaryRepresentation]
  -[AWDSymptomsNoBackhaulPopUpMetric hasTimestamp]
  -[AWDSymptomsNoBackhaulPopUpMetric copyWithZone:]
  -[AWDSymptomsNoBackhaulPopUpMetric timestamp]
  -[AWDSymptomsNoBackhaulPopUpMetric readFrom:]
  -[AWDSymptomsNoBackhaulPopUpMetric writeTo:]
  -[AWDSymptomsNoBackhaulPopUpMetric setAction:]
  -[AWDSymptomsNoBackhaulPopUpMetric isEqual:]
  -[AWDSymptomsNoBackhaulPopUpMetric hasAction]
  -[AWDSymptomsNoBackhaulPopUpMetric setHasAction:]
  -[AWDSymptomsNoBackhaulPopUpMetric actionAsString:]
  -[AWDSymptomsNoBackhaulPopUpMetric StringAsAction:]
  -[AWDSymptomsNoBackhaulPopUpMetric setHasNetworkType:]
  -[AWDSymptomsNoBackhaulPopUpMetric hasNetworkType]
  -[AWDSymptomsNoBackhaulPopUpMetric networkTypeAsString:]
  -[AWDSymptomsNoBackhaulPopUpMetric StringAsNetworkType:]
  -[AWDSymptomsNoBackhaulPopUpMetric setPopUpShownForSecs:]
  -[AWDSymptomsNoBackhaulPopUpMetric setHasPopUpShownForSecs:]
  -[AWDSymptomsNoBackhaulPopUpMetric hasPopUpShownForSecs]
  -[AWDSymptomsNoBackhaulPopUpMetric setTimeSinceShownOnSameNetworkSecs:]
  -[AWDSymptomsNoBackhaulPopUpMetric setHasTimeSinceShownOnSameNetworkSecs:]
  -[AWDSymptomsNoBackhaulPopUpMetric hasTimeSinceShownOnSameNetworkSecs]
  -[AWDSymptomsNoBackhaulPopUpMetric setTimesShownOnAnyNetworkLast24Hrs:]
  -[AWDSymptomsNoBackhaulPopUpMetric setHasTimesShownOnAnyNetworkLast24Hrs:]
  -[AWDSymptomsNoBackhaulPopUpMetric hasTimesShownOnAnyNetworkLast24Hrs]
  -[AWDSymptomsNoBackhaulPopUpMetric setNetworksShownAtLeastOnceInLast24Hrs:]
  -[AWDSymptomsNoBackhaulPopUpMetric setHasNetworksShownAtLeastOnceInLast24Hrs:]
  -[AWDSymptomsNoBackhaulPopUpMetric hasNetworksShownAtLeastOnceInLast24Hrs]
  -[AWDSymptomsNoBackhaulPopUpMetric popUpShownForSecs]
  -[AWDSymptomsNoBackhaulPopUpMetric timeSinceShownOnSameNetworkSecs]
  -[AWDSymptomsNoBackhaulPopUpMetric timesShownOnAnyNetworkLast24Hrs]
  -[AWDSymptomsNoBackhaulPopUpMetric networksShownAtLeastOnceInLast24Hrs]


AWDSymptomsLaunchIntervalMetric : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasIntervalSincePreviousLaunch
 @property  unsigned long intervalSincePreviousLaunch
 @property  BOOL hasProcess
 @property  int process

  // instance methods
  -[AWDSymptomsLaunchIntervalMetric setTimestamp:]
  -[AWDSymptomsLaunchIntervalMetric copyTo:]
  -[AWDSymptomsLaunchIntervalMetric process]
  -[AWDSymptomsLaunchIntervalMetric setProcess:]
  -[AWDSymptomsLaunchIntervalMetric hasProcess]
  -[AWDSymptomsLaunchIntervalMetric mergeFrom:]
  -[AWDSymptomsLaunchIntervalMetric setHasTimestamp:]
  -[AWDSymptomsLaunchIntervalMetric dictionaryRepresentation]
  -[AWDSymptomsLaunchIntervalMetric hasTimestamp]
  -[AWDSymptomsLaunchIntervalMetric copyWithZone:]
  -[AWDSymptomsLaunchIntervalMetric timestamp]
  -[AWDSymptomsLaunchIntervalMetric readFrom:]
  -[AWDSymptomsLaunchIntervalMetric setHasProcess:]
  -[AWDSymptomsLaunchIntervalMetric writeTo:]
  -[AWDSymptomsLaunchIntervalMetric isEqual:]
  -[AWDSymptomsLaunchIntervalMetric setIntervalSincePreviousLaunch:]
  -[AWDSymptomsLaunchIntervalMetric setHasIntervalSincePreviousLaunch:]
  -[AWDSymptomsLaunchIntervalMetric hasIntervalSincePreviousLaunch]
  -[AWDSymptomsLaunchIntervalMetric processAsString:]
  -[AWDSymptomsLaunchIntervalMetric StringAsProcess:]
  -[AWDSymptomsLaunchIntervalMetric intervalSincePreviousLaunch]


CellOutrankHandlerState : ExpertSystemStateCore
 @property  BOOL noPreconditions

  // class methods
  +[CellOutrankHandlerState createStateWithLabel:rank:entryPreds:]

  // instance methods
  -[CellOutrankHandlerState noPreconditions]
  -[CellOutrankHandlerState setNoPreconditions:]
  -[CellOutrankHandlerState _initStateWithLabel:rank:entryPreds:]


CellOutrankHandlerSTM : ExpertSystemHandlerCore
 @property  BOOL systemForeground
 @property  unsigned int activationIdentifier
 @property  NSPredicate *armedEligiblePred
 @property  NSPredicate *captivityFrictionEligiblePred
 @property  NSPredicate *cellEligiblePred
 @property  NSPredicate *cellStatusOutrankExitEligiblePred
 @property  NSPredicate *deviceEligiblePred
 @property  NSPredicate *forcedOutrankEligiblePred
 @property  NSPredicate *userInitiatedFrictionEligiblePred
 @property  NSPredicate *wifiAmbientFrictionEligiblePred
 @property  NSPredicate *wifiEligiblePred

  // instance methods
  -[CellOutrankHandlerSTM restoreDefaults]
  -[CellOutrankHandlerSTM setConfiguration:]
  -[CellOutrankHandlerSTM _currentState]
  -[CellOutrankHandlerSTM dealloc]
  -[CellOutrankHandlerSTM systemForeground]
  -[CellOutrankHandlerSTM internalStateDictionary]
  -[CellOutrankHandlerSTM _bringStateToIdle]
  -[CellOutrankHandlerSTM _postUpwards:]
  -[CellOutrankHandlerSTM _states]
  -[CellOutrankHandlerSTM .cxx_destruct]
  -[CellOutrankHandlerSTM completeInitialization]
  -[CellOutrankHandlerSTM idleExitAction:]
  -[CellOutrankHandlerSTM setActivationIdentifier:]
  -[CellOutrankHandlerSTM initWithQueue:]
  -[CellOutrankHandlerSTM activationIdentifier]
  -[CellOutrankHandlerSTM idleEntryAction:]
  -[CellOutrankHandlerSTM getState:]
  -[CellOutrankHandlerSTM setSystemForeground:]
  -[CellOutrankHandlerSTM armedEntryAction:]
  -[CellOutrankHandlerSTM outrankEntryAction:]
  -[CellOutrankHandlerSTM armedExitAction:]
  -[CellOutrankHandlerSTM outrankExitAction:]
  -[CellOutrankHandlerSTM administrativeEnable]
  -[CellOutrankHandlerSTM administrativeDisable]
  -[CellOutrankHandlerSTM currentQualifier]
  -[CellOutrankHandlerSTM armedEligiblePred]
  -[CellOutrankHandlerSTM armedToOutrankRegretAvoidancePred]
  -[CellOutrankHandlerSTM captivityFrictionEligiblePred]
  -[CellOutrankHandlerSTM cellEligiblePred]
  -[CellOutrankHandlerSTM cellStatusOutrankExitEligiblePred]
  -[CellOutrankHandlerSTM deviceEligiblePred]
  -[CellOutrankHandlerSTM forcedOutrankEligiblePred]
  -[CellOutrankHandlerSTM userInitiatedFrictionEligiblePred]
  -[CellOutrankHandlerSTM wifiAmbientFrictionEligiblePred]
  -[CellOutrankHandlerSTM wifiEligiblePred]
  -[CellOutrankHandlerSTM populateDefaultPredicates]
  -[CellOutrankHandlerSTM evaluateState:]
  -[CellOutrankHandlerSTM valdateExitState:originally:]


NLCRunner : NSObject
 @property  NSString *interfaceName

  // class methods
  +[NLCRunner sharedInstance]

  // instance methods
  -[NLCRunner interfaceName]
  -[NLCRunner setInterfaceName:]
  -[NLCRunner .cxx_destruct]
  -[NLCRunner init]
  -[NLCRunner setUplinkPacketLossRate:]
  -[NLCRunner setDownlinkPacketLossRate:]
  -[NLCRunner disableDNS]
  -[NLCRunner enableDNS]
  -[NLCRunner modifySimulation]
  -[NLCRunner engage]
  -[NLCRunner disengage]


ImpoExpoService : NSObject
  // class methods
  +[ImpoExpoService _supportedClasses]
  +[ImpoExpoService impoExpoServiceInWorkspace:andQueue:]
  +[ImpoExpoService _supportArchivingOfObject:]

  // instance methods
  -[ImpoExpoService _locateRecord:createMissing:]
  -[ImpoExpoService deleteItemsWithNames:]
  -[ImpoExpoService _nameSubfix]
  -[ImpoExpoService exportAndUnarchiveItemUnderName:lastUpdated:verificationBlock:]
  -[ImpoExpoService .cxx_destruct]
  -[ImpoExpoService importItemUnderName:item:]
  -[ImpoExpoService importValueUnderName:value:]
  -[ImpoExpoService listItemsNameWithPrefix:sortDescriptor:]
  -[ImpoExpoService deleteItemsWithPrefix:]
  -[ImpoExpoService _initInWorkspace:andQueue:]
  -[ImpoExpoService exportItemUnderName:lastUpdated:verificationBlock:]
  -[ImpoExpoService deleteItemsWithPrefixes:]
  -[ImpoExpoService archiveAndImportItemUnderName:item:]
  -[ImpoExpoService deleteItemsMatchingPredicate:]
  -[ImpoExpoService exportValueUnderName:lastUpdated:]


RedirectHandler : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol, AdditionalInfoProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RedirectHandler noteSymptom:]
  +[RedirectHandler evaluate:forThreshold:]
  +[RedirectHandler generateAdditionalInfo:]
  +[RedirectHandler _sharedInstance]
  +[RedirectHandler configureClass:]

  // instance methods
  -[RedirectHandler read:returnedValues:]
  -[RedirectHandler noteSymptom:]
  -[RedirectHandler evaluate:forThreshold:]
  -[RedirectHandler generateAdditionalInfo:]
  -[RedirectHandler _prune]
  -[RedirectHandler configureInstance:]
  -[RedirectHandler .cxx_destruct]
  -[RedirectHandler _reset:]
  -[RedirectHandler performNegativeFeedback:]
  -[RedirectHandler _addRedirectFrom:To:by:atTime:]
  -[RedirectHandler _pruneDir:]
  -[RedirectHandler init]


ResourceNotifyHandler : NSObject <ConfigurableObjectProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ResourceNotifyHandler sharedInstance]
  +[ResourceNotifyHandler processOnBatteryOnly]
  +[ResourceNotifyHandler configureClass:]

  // instance methods
  -[ResourceNotifyHandler read:returnedValues:]
  -[ResourceNotifyHandler resouceNotifyEvent:triggeredBy:pid:path:endTime:observedValue:observationWindow:limitValue:limitWindow:fatal:fatalPort:]
  -[ResourceNotifyHandler configureInstance:]
  -[ResourceNotifyHandler .cxx_destruct]
  -[ResourceNotifyHandler setupResourceNotifyReceiver]
  -[ResourceNotifyHandler init]


ReporterFilter : NSObject
 @property  unsigned int reporterId
 @property  NSString *reporterName
 @property  NSMutableArray *symptomFilters
 @property  BOOL symptomFilterChanged
 @property  NSData *filterMessage

  // class methods
  +[ReporterFilter enumerateReporterFiltersUsingBlock:]
  +[ReporterFilter filterForName:id:]
  +[ReporterFilter initialize]
  +[ReporterFilter filterForId:]

  // instance methods
  -[ReporterFilter filterMessage]
  -[ReporterFilter setFinalTimer:]
  -[ReporterFilter reporterName]
  -[ReporterFilter .cxx_destruct]
  -[ReporterFilter updateTransportFilters]
  -[ReporterFilter pushFinalFilters]
  -[ReporterFilter symptomFilters]
  -[ReporterFilter reporterId]
  -[ReporterFilter pushTransportFilters]
  -[ReporterFilter setSymptomFilterChanged:]
  -[ReporterFilter setSymptomFilter:]
  -[ReporterFilter symptomFilterChanged]
  -[ReporterFilter configureSymptomFilter:]
  -[ReporterFilter init]
  -[ReporterFilter hasFinalTimer]


AWDLPeerProbe : TestProbe
 @property  NSArray *servicesOfInterest
 @property  <AWDLPeerProbeDelegate> *delegate
 @property  unsigned long pollCount
 @property  NSMutableDictionary *peerList

  // instance methods
  -[AWDLPeerProbe setDelegate:]
  -[AWDLPeerProbe delegate]
  -[AWDLPeerProbe dealloc]
  -[AWDLPeerProbe .cxx_destruct]
  -[AWDLPeerProbe stopTest]
  -[AWDLPeerProbe initWithQueue:]
  -[AWDLPeerProbe periodicTimerFired:]
  -[AWDLPeerProbe startAWDLPeerPollingForServices:withCount:interval:]
  -[AWDLPeerProbe pollCount]
  -[AWDLPeerProbe setPollCount:]
  -[AWDLPeerProbe peerList]
  -[AWDLPeerProbe setPeerList:]
  -[AWDLPeerProbe servicesOfInterest]
  -[AWDLPeerProbe setServicesOfInterest:]


PowerStateRelay : NSObject
 @property  BOOL pluggedIn
 @property  BOOL screenNotDark
 @property  BOOL screenUnlocked
 @property  unsigned int screenBrightness
 @property  double batteryPercentage
 @property  unsigned int batteryCurrentCapacity
 @property  unsigned int batteryMaximumCapacity
 @property  unsigned int batteryDesignCapacity
 @property  unsigned int batteryAbsoluteCapacity
 @property  unsigned int batteryVoltage
 @property  unsigned int batteryTimeRemaining
 @property  int batteryTemperature
 @property  BOOL batteryExternalPowerIsConnected
 @property  BOOL batteryIsCharging
 @property  BOOL batteryFullyCharged
 @property  BOOL batteryAtWarnLevel
 @property  BOOL batteryAtCriticalLevel
 @property  long long thermalPressure
 @property  BOOL lowPowerModeEnabled

  // class methods
  +[PowerStateRelay defaultRelay]
  +[PowerStateRelay automaticallyNotifiesObserversForKey:]

  // instance methods
  -[PowerStateRelay lowPowerModeEnabled]
  -[PowerStateRelay screenUnlocked]
  -[PowerStateRelay setBatteryPercentage:]
  -[PowerStateRelay setBatteryVoltage:]
  -[PowerStateRelay setLowPowerModeEnabled:]
  -[PowerStateRelay batteryAbsoluteCapacity]
  -[PowerStateRelay setScreenNotDark:]
  -[PowerStateRelay setBatteryFullyCharged:]
  -[PowerStateRelay batteryTimeRemaining]
  -[PowerStateRelay pluggedIn]
  -[PowerStateRelay setBatteryAtCriticalLevel:]
  -[PowerStateRelay dealloc]
  -[PowerStateRelay batteryExternalPowerIsConnected]
  -[PowerStateRelay setBatteryMaximumCapacity:]
  -[PowerStateRelay screenNotDark]
  -[PowerStateRelay batteryDesignCapacity]
  -[PowerStateRelay setPluggedIn:]
  -[PowerStateRelay .cxx_destruct]
  -[PowerStateRelay setBatteryExternalPowerIsConnected:]
  -[PowerStateRelay setBatteryDesignCapacity:]
  -[PowerStateRelay batteryCurrentCapacity]
  -[PowerStateRelay batteryAtCriticalLevel]
  -[PowerStateRelay batteryFullyCharged]
  -[PowerStateRelay updateBatteryValuesFromPowerSourceDictionary:]
  -[PowerStateRelay handleBatteryNotification]
  -[PowerStateRelay batteryIsCharging]
  -[PowerStateRelay thermalPressureLevelToString:]
  -[PowerStateRelay setBatteryCurrentCapacity:]
  -[PowerStateRelay setBatteryTimeRemaining:]
  -[PowerStateRelay batteryVoltage]
  -[PowerStateRelay screenBrightness]
  -[PowerStateRelay setThermalPressure:]
  -[PowerStateRelay setBatteryAtWarnLevel:]
  -[PowerStateRelay disableIOKitBatteryLevelNotifications]
  -[PowerStateRelay getBatteryProperties]
  -[PowerStateRelay getCurrentKeybagLockState]
  -[PowerStateRelay handlePowerStateChange:]
  -[PowerStateRelay setScreenBrightness:]
  -[PowerStateRelay batteryPercentage]
  -[PowerStateRelay batteryMaximumCapacity]
  -[PowerStateRelay setScreenUnlocked:]
  -[PowerStateRelay batteryAtWarnLevel]
  -[PowerStateRelay enableIOKitBatteryLevelNotifications]
  -[PowerStateRelay setBatteryTemperature:]
  -[PowerStateRelay batteryTemperature]
  -[PowerStateRelay setBatteryAbsoluteCapacity:]
  -[PowerStateRelay init]
  -[PowerStateRelay setBatteryIsCharging:]
  -[PowerStateRelay thermalPressure]


ServiceImpl : NSObject <NSXPCListenerDelegate, SFExtendedServiceInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ServiceImpl setUsageOption:reply:]
  -[ServiceImpl identifierForUUID:reply:]
  -[ServiceImpl retrieveActivityMetrics:reply:]
  -[ServiceImpl assertEntitlement:entitlement:orWaiveOnIntent:]
  -[ServiceImpl _serviceReadyCheckPoint]
  -[ServiceImpl postAWDEvent:reply:]
  -[ServiceImpl waitForOSLogErrorSymptomWithReply:]
  -[ServiceImpl getNetworkBitmapsWithNames:startTime:endTime:Reply:]
  -[ServiceImpl trainModelAndScore:lastScoreDate:reply:]
  -[ServiceImpl unsubscribeToNOIs:]
  -[ServiceImpl getExpertSystemsStatus:]
  -[ServiceImpl _serviceReady]
  -[ServiceImpl _serviceReadyCheckPointRelease]
  -[ServiceImpl _cacheEntitlementValuesForConnection:]
  -[ServiceImpl performAppExperiencePeriodicTasksWithReply:]
  -[ServiceImpl resetUsageFor:nameKind:reply:]
  -[ServiceImpl dealloc]
  -[ServiceImpl subscribeToNOIsFor:orPredicate:options:]
  -[ServiceImpl getOption:inScopes:reply:]
  -[ServiceImpl _checkRateLimitForConnection:]
  -[ServiceImpl .cxx_destruct]
  -[ServiceImpl clientTransactionsRelease]
  -[ServiceImpl performAppTrackingPeriodicTasksWithReply:]
  -[ServiceImpl setPreferCellOverWiFiWithOptions:reply:]
  -[ServiceImpl performPersistentStoreHealthCheckWithReply:]
  -[ServiceImpl initWithQueue:]
  -[ServiceImpl startRNFTestWithOptions:scenarioName:reply:]
  -[ServiceImpl requestReverseGeocodeForLatitude:longitude:reply:]
  -[ServiceImpl createSnapshotFor:pred:actions:reply:]
  -[ServiceImpl performQueryOnEntity:fetchRequestProperties:pred:sort:actions:reply:]
  -[ServiceImpl shutdown]
  -[ServiceImpl assertFactString:module:asSymptom:reply:]
  -[ServiceImpl performActionWithOptions:inScopes:reply:]
  -[ServiceImpl performAppPeriodicTasksWithReply:]
  -[ServiceImpl getPreferCellOverWiFiWithOptions:reply:]
  -[ServiceImpl resetDataFor:nameKind:inScopes:reply:]
  -[ServiceImpl inquireNOIFor:orPredicate:requestedKeys:options:reply:]
  -[ServiceImpl performAppEndpointTrackingPeriodicTasksWithReply:]
  -[ServiceImpl setOption:inScopes:reply:]
  -[ServiceImpl performQueryOnEntity:pred:sort:actions:reply:]
  -[ServiceImpl listener:shouldAcceptNewConnection:]
  -[ServiceImpl abortRNFTestWithReply:]


MaintenanceActivity : NSObject
 @property  @? activityBlock
 @property  NSObject<OS_dispatch_queue> *activityQueue
 @property  NSString *activityIdentifier

  // instance methods
  -[MaintenanceActivity activityIdentifier]
  -[MaintenanceActivity setActivityQueue:]
  -[MaintenanceActivity activityQueue]
  -[MaintenanceActivity activityBlock]
  -[MaintenanceActivity .cxx_destruct]
  -[MaintenanceActivity setActivityBlock:]
  -[MaintenanceActivity setActivityIdentifier:]


PeriodicMaintenanceActivity : NSObject
  // class methods
  +[PeriodicMaintenanceActivity sharedInstance]
  +[PeriodicMaintenanceActivity periodicActivityID]
  +[PeriodicMaintenanceActivity periodicActivityInterval]
  +[PeriodicMaintenanceActivity registerPeriodicActivityWithIdentifier:queue:activity:]

  // instance methods
  -[PeriodicMaintenanceActivity dealloc]
  -[PeriodicMaintenanceActivity .cxx_destruct]
  -[PeriodicMaintenanceActivity init]
  -[PeriodicMaintenanceActivity _registerPeriodicMaintenanceActivity]
  -[PeriodicMaintenanceActivity _handleActivityRun:]
  -[PeriodicMaintenanceActivity _registerPeriodicActivityWithIdentifier:queue:activity:]


DailyMaintenanceActivity : PeriodicMaintenanceActivity
  // class methods
  +[DailyMaintenanceActivity sharedInstance]
  +[DailyMaintenanceActivity periodicActivityID]
  +[DailyMaintenanceActivity periodicActivityInterval]


SemiDailyMaintenanceActivity : PeriodicMaintenanceActivity
  // class methods
  +[SemiDailyMaintenanceActivity sharedInstance]
  +[SemiDailyMaintenanceActivity periodicActivityID]
  +[SemiDailyMaintenanceActivity periodicActivityInterval]


WeeklyMaintenanceActivity : PeriodicMaintenanceActivity
  // class methods
  +[WeeklyMaintenanceActivity sharedInstance]
  +[WeeklyMaintenanceActivity periodicActivityID]
  +[WeeklyMaintenanceActivity periodicActivityInterval]


HourlyMaintenanceActivity : PeriodicMaintenanceActivity
  // class methods
  +[HourlyMaintenanceActivity sharedInstance]
  +[HourlyMaintenanceActivity periodicActivityID]
  +[HourlyMaintenanceActivity periodicActivityInterval]


LocationStateRelay : NSObject <CLLocationManagerDelegate>
 @property  NSArray *allLOIs
 @property  BOOL gpsInUse
 @property  BOOL LOIUseAuthorized
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LocationStateRelay sharedInstance]
  +[LocationStateRelay automaticallyNotifiesObserversForKey:]

  // instance methods
  -[LocationStateRelay locationManager:didFailWithError:]
  -[LocationStateRelay unloadFrameworks]
  -[LocationStateRelay addPendingLOIBlocks:]
  -[LocationStateRelay getLocationTechnologyStateForInitialState:]
  -[LocationStateRelay determineIfLocationOfInterestIsKnownOfType:queue:reply:]
  -[LocationStateRelay loadCoreLocation]
  -[LocationStateRelay dealloc]
  -[LocationStateRelay LOIUseAuthorized]
  -[LocationStateRelay .cxx_destruct]
  -[LocationStateRelay setGpsInUse:]
  -[LocationStateRelay locationManagerDidChangeAuthorization:]
  -[LocationStateRelay authorizedToUseCoreRoutine]
  -[LocationStateRelay cleanUpPendingLOIBlocks]
  -[LocationStateRelay fetchCurrentLocationLOIOnQueue:desiredAccuracy:reply:]
  -[LocationStateRelay rtLOITypeToString:]
  -[LocationStateRelay setLOIUseAuthorized:]
  -[LocationStateRelay loadCoreRoutine]
  -[LocationStateRelay preflightFrameworks]
  -[LocationStateRelay callPendingLOIBlocksWithCLLocation:LOI:andError:]
  -[LocationStateRelay setAllLOIs:]
  -[LocationStateRelay mobileWiFiLocationManager]
  -[LocationStateRelay showLocationArrow]
  -[LocationStateRelay allLOIs]
  -[LocationStateRelay locationManager:didUpdateLocations:]
  -[LocationStateRelay init]
  -[LocationStateRelay gpsInUse]


CoreTelephonyCellInfoContext : NSObject
 @property  @? completion
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[CoreTelephonyCellInfoContext completion]
  -[CoreTelephonyCellInfoContext setCompletion:]
  -[CoreTelephonyCellInfoContext .cxx_destruct]
  -[CoreTelephonyCellInfoContext setQueue:]
  -[CoreTelephonyCellInfoContext queue]
  -[CoreTelephonyCellInfoContext initWithCompletion:queue:]


CoreTelephonyShim : NSObject <CoreTelephonyClientRegistrationDelegate, CoreTelephonyClientDataDelegate>
 @property  NSMutableDictionary *subscriptions
 @property  ^{__CTServerConnection=} ctServerConnection
 @property  BOOL requiresCoreTelephonyClient
 @property  NSMutableDictionary *subscribers
 @property  NSNumber *currentSubscriberTag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CoreTelephonyShim sharedInstance]
  +[CoreTelephonyShim dateTimeStringFromCTDumpFolderPrefix:]
  +[CoreTelephonyShim elevatedQueue]
  +[CoreTelephonyShim timestampFromCTDumpFolderPrefix:]

  // instance methods
  -[CoreTelephonyShim operatorNameChanged:name:]
  -[CoreTelephonyShim cellMonitorUpdate:info:]
  -[CoreTelephonyShim signalStrengthChanged:info:]
  -[CoreTelephonyShim subscriptionInfoDidChange]
  -[CoreTelephonyShim ctServerConnection]
  -[CoreTelephonyShim currentDataSimChanged:]
  -[CoreTelephonyShim dataStatus:dataStatusInfo:]
  -[CoreTelephonyShim subscriptions]
  -[CoreTelephonyShim _deliverRatSelectionChanged:withSubscriptionDict:]
  -[CoreTelephonyShim _setCurrentSubscriberSlotID:]
  -[CoreTelephonyShim _unregisterFromCoreTelephonyNotifications:]
  -[CoreTelephonyShim _registerForCoreTelephonyNotifications:]
  -[CoreTelephonyShim enhancedDataLinkQualityChanged:metric:]
  -[CoreTelephonyShim registerForCTDumpNotifications]
  -[CoreTelephonyShim unregisterForCTDumpNotifications]
  -[CoreTelephonyShim addDelegate:]
  -[CoreTelephonyShim _updateSubscribers]
  -[CoreTelephonyShim subscriptionContextIsCurrentDataSubscription:]
  -[CoreTelephonyShim enableCoreTelephonyLoggingForCustomerSeed:]
  -[CoreTelephonyShim extractCellInfo:]
  -[CoreTelephonyShim dictionaryForSubscriptionContext:]
  -[CoreTelephonyShim _processPendingCoreTelephonyNotificationRegistrations]
  -[CoreTelephonyShim findSubscriberExactMatchForICCID:MDN:slotID:]
  -[CoreTelephonyShim getCurrentDataSubscriptionContext]
  -[CoreTelephonyShim processDataStatus:forContext:]
  -[CoreTelephonyShim _coreTelephonyClient]
  -[CoreTelephonyShim cacheEnhancedLinkQualityMetricType:withContents:forSlot:]
  -[CoreTelephonyShim dealloc]
  -[CoreTelephonyShim internalVariables]
  -[CoreTelephonyShim ratSelectionChanged:selection:]
  -[CoreTelephonyShim getBasebandTraceEnabledState:coreDumpEnabled:]
  -[CoreTelephonyShim unregisterRNFChangedWithDelegate:]
  -[CoreTelephonyShim .cxx_destruct]
  -[CoreTelephonyShim updateCurrentRatSelection]
  -[CoreTelephonyShim _deliverSignalStrengthChanged:]
  -[CoreTelephonyShim countryCodeChanged:forContext:]
  -[CoreTelephonyShim smartDataModeChanged:userEnabled:]
  -[CoreTelephonyShim handleCTServerNotification:notificationInfo:]
  -[CoreTelephonyShim reliableNetworkFallbackChanged:userEnabled:]
  -[CoreTelephonyShim updateSubscribers]
  -[CoreTelephonyShim registerRNFChangedWithDelegate:]
  -[CoreTelephonyShim removeDelegate:]
  -[CoreTelephonyShim findSubscriberBestMatchForICCID:MDN:slotID:update:]
  -[CoreTelephonyShim unregisterSignalStrengthChangedWithDelegate:]
  -[CoreTelephonyShim elevatedQueue]
  -[CoreTelephonyShim _deliverSmartDataModeSettingChanged:]
  -[CoreTelephonyShim cellCarrierNameForContext:refresh:]
  -[CoreTelephonyShim commonInit]
  -[CoreTelephonyShim dualSimStatusInspection:withSubscriptionsInUse:]
  -[CoreTelephonyShim networkCodeChanged:forContext:]
  -[CoreTelephonyShim removeCachedContentsForEnhancedLinkQualityMetricType:forSlot:]
  -[CoreTelephonyShim _deliverRNFSettingAvailable:enabled:]
  -[CoreTelephonyShim registerSignalStrengthChangedWithDelegate:]
  -[CoreTelephonyShim getPrivateNetworkSupported:forContext:]
  -[CoreTelephonyShim set5GSupportChanged:forContext:]
  -[CoreTelephonyShim getSortedSubscriberKeys]
  -[CoreTelephonyShim _processEngineReadyNotification:]
  -[CoreTelephonyShim initWithQueue:]
  -[CoreTelephonyShim getCachedContentsForEnhancedLinkQualityMetricType:forSlot:]
  -[CoreTelephonyShim _setInitializationComplete:]
  -[CoreTelephonyShim _dispatchCellInfoResult:error:queue:completion:]
  -[CoreTelephonyShim get5GSupportedForContext:]
  -[CoreTelephonyShim carrierSettingsDidChange]
  -[CoreTelephonyShim updateCurrentSubscriberTag:]
  -[CoreTelephonyShim subscribers]
  -[CoreTelephonyShim dualSimStatusChangedTo:]
  -[CoreTelephonyShim currentSubscriberTag]
  -[CoreTelephonyShim addNewSubscriberForICCID:MDN:slotID:]
  -[CoreTelephonyShim requiresCoreTelephonyClient]
  -[CoreTelephonyShim getSmartDataModeSetting]
  -[CoreTelephonyShim activeSubscriptionsDidChange]
  -[CoreTelephonyShim initializeCoreTelephonyClientAsNecessary]
  -[CoreTelephonyShim simLessSubscriptionsDidChange]
  -[CoreTelephonyShim copyCellInfoOnQueue:completion:]
  -[CoreTelephonyShim processEnhancedLinkQualityHighThroughputNotification:]
  -[CoreTelephonyShim _completeInitialization]
  -[CoreTelephonyShim init]


CTServerConnection : NSObject
  // class methods
  +[CTServerConnection unregisterForCTNotification:ctShim:completion:]
  +[CTServerConnection registerForCTNofication:ctShim:completion:]


KernelStatisticsHandler : NSObject <NWStatisticsManagerDelegate, ConfigurableObjectProtocol>
 @property  NWStatisticsManager *nwStatManager
 @property  NSObject<OS_dispatch_queue> *queue
 @property  AWDLibnetcoreStatsReport *kernelStatisticsReport
 @property  unsigned int coalescedReportPending
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[KernelStatisticsHandler sharedInstance]
  +[KernelStatisticsHandler configureClass:]

  // instance methods
  -[KernelStatisticsHandler read:returnedValues:]
  -[KernelStatisticsHandler statisticsManager:didReceiveDirectSystemInformation:]
  -[KernelStatisticsHandler configureInstance:]
  -[KernelStatisticsHandler .cxx_destruct]
  -[KernelStatisticsHandler kernelStatisticsReport]
  -[KernelStatisticsHandler setNwStatManager:]
  -[KernelStatisticsHandler setKernelStatisticsReport:]
  -[KernelStatisticsHandler nwStatManager]
  -[KernelStatisticsHandler coalescedReport]
  -[KernelStatisticsHandler setQueue:]
  -[KernelStatisticsHandler queue]
  -[KernelStatisticsHandler coalescedReportPending]
  -[KernelStatisticsHandler init]
  -[KernelStatisticsHandler setCoalescedReportPending:]


SpecificRedirectHandler : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SpecificRedirectHandler sharedInstance]
  +[SpecificRedirectHandler configureClass:]

  // instance methods
  -[SpecificRedirectHandler read:returnedValues:]
  -[SpecificRedirectHandler noteSymptom:]
  -[SpecificRedirectHandler evaluate:forThreshold:]
  -[SpecificRedirectHandler configureInstance:]
  -[SpecificRedirectHandler .cxx_destruct]


ManagedConfigurationUtils : NSObject <MCProfileConnectionObserver>
 @property  BOOL diagnosticsAndUsageEnabled
 @property  NSArray *installedVisibleProfileIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ManagedConfigurationUtils sharedInstance]

  // instance methods
  -[ManagedConfigurationUtils profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
  -[ManagedConfigurationUtils setDiagnosticsAndUsageEnabled:]
  -[ManagedConfigurationUtils diagnosticsAndUsageEnabled]
  -[ManagedConfigurationUtils dealloc]
  -[ManagedConfigurationUtils .cxx_destruct]
  -[ManagedConfigurationUtils profileConnectionDidReceiveProfileListChangedNotification:userInfo:]
  -[ManagedConfigurationUtils init]
  -[ManagedConfigurationUtils installedVisibleProfileIdentifiers]
  -[ManagedConfigurationUtils setInstalledVisibleProfileIdentifiers:]


AWDSymptomsCellularSDMAdviceChange : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasPreviousAdvice
 @property  int previousAdvice
 @property  BOOL hasPreviousAdviceCause
 @property  int previousAdviceCause
 @property  BOOL hasPreviousAdviceDuration
 @property  unsigned long previousAdviceDuration
 @property  BOOL hasDlPriorThroughputBytesPerSec
 @property  unsigned long dlPriorThroughputBytesPerSec
 @property  BOOL hasUlPriorThroughputBytesPerSec
 @property  unsigned long ulPriorThroughputBytesPerSec
 @property  BOOL hasNewAdvice
 @property  int newAdvice
 @property  BOOL hasNewAdviceCause
 @property  int newAdviceCause
 @property  BOOL hasNewAdviceAdditionalFlags
 @property  unsigned long newAdviceAdditionalFlags
 @property  BOOL hasDlSubsequentThroughputBytesPerSec
 @property  unsigned long dlSubsequentThroughputBytesPerSec
 @property  BOOL hasUlSubsequentThroughputBytesPerSec
 @property  unsigned long ulSubsequentThroughputBytesPerSec
 @property  NSMutableArray *adviceInitiatingNames
 @property  NSMutableArray *oldAdvicePartipants
 @property  BOOL hasPreviousScreenIsDark
 @property  BOOL previousScreenIsDark
 @property  BOOL hasPreviousScreenIsLocked
 @property  BOOL previousScreenIsLocked
 @property  BOOL hasNewScreenIsDark
 @property  BOOL newScreenIsDark
 @property  BOOL hasNewScreenIsLocked
 @property  BOOL newScreenIsLocked
 @property  BOOL hasPreviousAdviceInitialCause
 @property  int previousAdviceInitialCause

  // class methods
  +[AWDSymptomsCellularSDMAdviceChange adviceInitiatingNamesType]
  +[AWDSymptomsCellularSDMAdviceChange oldAdvicePartipantsType]

  // instance methods
  -[AWDSymptomsCellularSDMAdviceChange setTimestamp:]
  -[AWDSymptomsCellularSDMAdviceChange copyTo:]
  -[AWDSymptomsCellularSDMAdviceChange .cxx_destruct]
  -[AWDSymptomsCellularSDMAdviceChange mergeFrom:]
  -[AWDSymptomsCellularSDMAdviceChange setHasTimestamp:]
  -[AWDSymptomsCellularSDMAdviceChange dictionaryRepresentation]
  -[AWDSymptomsCellularSDMAdviceChange hasTimestamp]
  -[AWDSymptomsCellularSDMAdviceChange copyWithZone:]
  -[AWDSymptomsCellularSDMAdviceChange timestamp]
  -[AWDSymptomsCellularSDMAdviceChange readFrom:]
  -[AWDSymptomsCellularSDMAdviceChange writeTo:]
  -[AWDSymptomsCellularSDMAdviceChange isEqual:]
  -[AWDSymptomsCellularSDMAdviceChange previousAdvice]
  -[AWDSymptomsCellularSDMAdviceChange setPreviousAdvice:]
  -[AWDSymptomsCellularSDMAdviceChange setHasPreviousAdvice:]
  -[AWDSymptomsCellularSDMAdviceChange hasPreviousAdvice]
  -[AWDSymptomsCellularSDMAdviceChange previousAdviceAsString:]
  -[AWDSymptomsCellularSDMAdviceChange StringAsPreviousAdvice:]
  -[AWDSymptomsCellularSDMAdviceChange previousAdviceCause]
  -[AWDSymptomsCellularSDMAdviceChange setPreviousAdviceCause:]
  -[AWDSymptomsCellularSDMAdviceChange setHasPreviousAdviceCause:]
  -[AWDSymptomsCellularSDMAdviceChange hasPreviousAdviceCause]
  -[AWDSymptomsCellularSDMAdviceChange previousAdviceCauseAsString:]
  -[AWDSymptomsCellularSDMAdviceChange StringAsPreviousAdviceCause:]
  -[AWDSymptomsCellularSDMAdviceChange setPreviousAdviceDuration:]
  -[AWDSymptomsCellularSDMAdviceChange setHasPreviousAdviceDuration:]
  -[AWDSymptomsCellularSDMAdviceChange hasPreviousAdviceDuration]
  -[AWDSymptomsCellularSDMAdviceChange setDlPriorThroughputBytesPerSec:]
  -[AWDSymptomsCellularSDMAdviceChange setHasDlPriorThroughputBytesPerSec:]
  -[AWDSymptomsCellularSDMAdviceChange hasDlPriorThroughputBytesPerSec]
  -[AWDSymptomsCellularSDMAdviceChange setUlPriorThroughputBytesPerSec:]
  -[AWDSymptomsCellularSDMAdviceChange setHasUlPriorThroughputBytesPerSec:]
  -[AWDSymptomsCellularSDMAdviceChange hasUlPriorThroughputBytesPerSec]
  -[AWDSymptomsCellularSDMAdviceChange newAdvice]
  -[AWDSymptomsCellularSDMAdviceChange setNewAdvice:]
  -[AWDSymptomsCellularSDMAdviceChange setHasNewAdvice:]
  -[AWDSymptomsCellularSDMAdviceChange hasNewAdvice]
  -[AWDSymptomsCellularSDMAdviceChange newAdviceAsString:]
  -[AWDSymptomsCellularSDMAdviceChange StringAsNewAdvice:]
  -[AWDSymptomsCellularSDMAdviceChange newAdviceCause]
  -[AWDSymptomsCellularSDMAdviceChange setNewAdviceCause:]
  -[AWDSymptomsCellularSDMAdviceChange setHasNewAdviceCause:]
  -[AWDSymptomsCellularSDMAdviceChange hasNewAdviceCause]
  -[AWDSymptomsCellularSDMAdviceChange newAdviceCauseAsString:]
  -[AWDSymptomsCellularSDMAdviceChange StringAsNewAdviceCause:]
  -[AWDSymptomsCellularSDMAdviceChange setNewAdviceAdditionalFlags:]
  -[AWDSymptomsCellularSDMAdviceChange setHasNewAdviceAdditionalFlags:]
  -[AWDSymptomsCellularSDMAdviceChange hasNewAdviceAdditionalFlags]
  -[AWDSymptomsCellularSDMAdviceChange setDlSubsequentThroughputBytesPerSec:]
  -[AWDSymptomsCellularSDMAdviceChange setHasDlSubsequentThroughputBytesPerSec:]
  -[AWDSymptomsCellularSDMAdviceChange hasDlSubsequentThroughputBytesPerSec]
  -[AWDSymptomsCellularSDMAdviceChange setUlSubsequentThroughputBytesPerSec:]
  -[AWDSymptomsCellularSDMAdviceChange setHasUlSubsequentThroughputBytesPerSec:]
  -[AWDSymptomsCellularSDMAdviceChange hasUlSubsequentThroughputBytesPerSec]
  -[AWDSymptomsCellularSDMAdviceChange clearAdviceInitiatingNames]
  -[AWDSymptomsCellularSDMAdviceChange addAdviceInitiatingNames:]
  -[AWDSymptomsCellularSDMAdviceChange adviceInitiatingNamesCount]
  -[AWDSymptomsCellularSDMAdviceChange adviceInitiatingNamesAtIndex:]
  -[AWDSymptomsCellularSDMAdviceChange clearOldAdvicePartipants]
  -[AWDSymptomsCellularSDMAdviceChange addOldAdvicePartipants:]
  -[AWDSymptomsCellularSDMAdviceChange oldAdvicePartipantsCount]
  -[AWDSymptomsCellularSDMAdviceChange oldAdvicePartipantsAtIndex:]
  -[AWDSymptomsCellularSDMAdviceChange setPreviousScreenIsDark:]
  -[AWDSymptomsCellularSDMAdviceChange setHasPreviousScreenIsDark:]
  -[AWDSymptomsCellularSDMAdviceChange hasPreviousScreenIsDark]
  -[AWDSymptomsCellularSDMAdviceChange setPreviousScreenIsLocked:]
  -[AWDSymptomsCellularSDMAdviceChange setHasPreviousScreenIsLocked:]
  -[AWDSymptomsCellularSDMAdviceChange hasPreviousScreenIsLocked]
  -[AWDSymptomsCellularSDMAdviceChange setNewScreenIsDark:]
  -[AWDSymptomsCellularSDMAdviceChange setHasNewScreenIsDark:]
  -[AWDSymptomsCellularSDMAdviceChange hasNewScreenIsDark]
  -[AWDSymptomsCellularSDMAdviceChange setNewScreenIsLocked:]
  -[AWDSymptomsCellularSDMAdviceChange setHasNewScreenIsLocked:]
  -[AWDSymptomsCellularSDMAdviceChange hasNewScreenIsLocked]
  -[AWDSymptomsCellularSDMAdviceChange previousAdviceInitialCause]
  -[AWDSymptomsCellularSDMAdviceChange setPreviousAdviceInitialCause:]
  -[AWDSymptomsCellularSDMAdviceChange setHasPreviousAdviceInitialCause:]
  -[AWDSymptomsCellularSDMAdviceChange hasPreviousAdviceInitialCause]
  -[AWDSymptomsCellularSDMAdviceChange previousAdviceInitialCauseAsString:]
  -[AWDSymptomsCellularSDMAdviceChange StringAsPreviousAdviceInitialCause:]
  -[AWDSymptomsCellularSDMAdviceChange previousAdviceDuration]
  -[AWDSymptomsCellularSDMAdviceChange dlPriorThroughputBytesPerSec]
  -[AWDSymptomsCellularSDMAdviceChange ulPriorThroughputBytesPerSec]
  -[AWDSymptomsCellularSDMAdviceChange newAdviceAdditionalFlags]
  -[AWDSymptomsCellularSDMAdviceChange dlSubsequentThroughputBytesPerSec]
  -[AWDSymptomsCellularSDMAdviceChange ulSubsequentThroughputBytesPerSec]
  -[AWDSymptomsCellularSDMAdviceChange adviceInitiatingNames]
  -[AWDSymptomsCellularSDMAdviceChange setAdviceInitiatingNames:]
  -[AWDSymptomsCellularSDMAdviceChange oldAdvicePartipants]
  -[AWDSymptomsCellularSDMAdviceChange setOldAdvicePartipants:]
  -[AWDSymptomsCellularSDMAdviceChange previousScreenIsDark]
  -[AWDSymptomsCellularSDMAdviceChange previousScreenIsLocked]
  -[AWDSymptomsCellularSDMAdviceChange newScreenIsDark]
  -[AWDSymptomsCellularSDMAdviceChange newScreenIsLocked]


ReportRecord : NSObject
 @property  long long count
 @property  double lastSeen
 @property  NSString *keyString

  // instance methods
  -[ReportRecord setCount:]
  -[ReportRecord keyString]
  -[ReportRecord setLastSeen:]
  -[ReportRecord setKeyString:]
  -[ReportRecord lastSeen]
  -[ReportRecord .cxx_destruct]
  -[ReportRecord count]


ArbitratorExpertSystemState : ExpertSystemStateCore
  // class methods
  +[ArbitratorExpertSystemState createStateWithLabel:rank:entryPreds:]


ArbitratorExpertSystemHandler : ExpertSystemHandlerCore
 @property  unsigned long externalStepper

  // class methods
  +[ArbitratorExpertSystemHandler sharedInstance]
  +[ArbitratorExpertSystemHandler setInitializeAsHelper:]
  +[ArbitratorExpertSystemHandler internalStateDictionary]
  +[ArbitratorExpertSystemHandler resetAllForCustomerBuilds]
  +[ArbitratorExpertSystemHandler configureClass:]
  +[ArbitratorExpertSystemHandler disableResourceNotifyDampening]

  // instance methods
  -[ArbitratorExpertSystemHandler noteSymptom:]
  -[ArbitratorExpertSystemHandler _dumpState]
  -[ArbitratorExpertSystemHandler _saveReportRecord:]
  -[ArbitratorExpertSystemHandler alertCarrierSeedUserAboutABC]
  -[ArbitratorExpertSystemHandler _initializeWorkspace]
  -[ArbitratorExpertSystemHandler _completeInitialization:]
  -[ArbitratorExpertSystemHandler setupAssistantFinished]
  -[ArbitratorExpertSystemHandler _removeAllReportRecords]
  -[ArbitratorExpertSystemHandler setExternalStepper:]
  -[ArbitratorExpertSystemHandler dealloc]
  -[ArbitratorExpertSystemHandler requireUserNotification]
  -[ArbitratorExpertSystemHandler handleAssertionExceptionTriggerWithEvent:signatureSubType:]
  -[ArbitratorExpertSystemHandler internalStateDictionary]
  -[ArbitratorExpertSystemHandler _removeAllDiagnosticCaseUsageFor:]
  -[ArbitratorExpertSystemHandler .cxx_destruct]
  -[ArbitratorExpertSystemHandler recordReportForSignature:aggregateReport:specificReport:]
  -[ArbitratorExpertSystemHandler resetAll]
  -[ArbitratorExpertSystemHandler triggerABCSnapshotWithSignature:events:uuid:parameters:]
  -[ArbitratorExpertSystemHandler handleResourceNotifyOfType:event:]
  -[ArbitratorExpertSystemHandler _purgeDiagnosticCaseUsage]
  -[ArbitratorExpertSystemHandler removeSetupAssistantFinishedObserver]
  -[ArbitratorExpertSystemHandler scheduleABCNotificationForCarrierSeedUser]
  -[ArbitratorExpertSystemHandler observeValueForKeyPath:ofObject:change:context:]
  -[ArbitratorExpertSystemHandler _arbitratorReady]
  -[ArbitratorExpertSystemHandler _administrativeDisable]
  -[ArbitratorExpertSystemHandler _removeReportRecordForKey:]
  -[ArbitratorExpertSystemHandler resetDiagnosticCaseUsage]
  -[ArbitratorExpertSystemHandler externalStepper]
  -[ArbitratorExpertSystemHandler _addReportRecordWithKey:count:lastSeen:]
  -[ArbitratorExpertSystemHandler _administrativeEnable]
  -[ArbitratorExpertSystemHandler _scheduleMaintenanceActivity]
  -[ArbitratorExpertSystemHandler shouldGenerateReportForSignature:trigger:]
  -[ArbitratorExpertSystemHandler observeSetupAssistantFinished]
  -[ArbitratorExpertSystemHandler setupProcessNameForDESysLogFilterProcess:]
  -[ArbitratorExpertSystemHandler setupParametersForDESysLogFilterProcess:]
  -[ArbitratorExpertSystemHandler _reportRecordKeyForDomain:type:subType:process:]
  -[ArbitratorExpertSystemHandler init]
  -[ArbitratorExpertSystemHandler _retrieveReportRecordForDomain:type:subType:process:]


FlowHistorySample : NSObject
 @property  unsigned long rxBytes
 @property  unsigned long rxAppleStackBytes
 @property  unsigned long rxNonAppleStackBytes
 @property  unsigned long rxSISBytes
 @property  unsigned long txBytes
 @property  unsigned long txAppleStackBytes
 @property  unsigned long txNonAppleStackBytes
 @property  unsigned long txSISBytes
 @property  unsigned long openedFlows
 @property  unsigned long openedAppleStackFlows
 @property  unsigned long openedNonAppleStackFlows
 @property  unsigned long openedSISFlows
 @property  unsigned long openedRNFFlows
 @property  unsigned long closedFlows
 @property  unsigned long closedAppleStackFlows
 @property  unsigned long closedNonAppleStackFlows
 @property  unsigned long closedSISFlows
 @property  unsigned long closedRNFFlows
 @property  unsigned long currentFlows
 @property  unsigned long currentAppleStackFlows
 @property  unsigned long currentNonAppleStackFlows
 @property  unsigned long currentSISFlows
 @property  double startTimeIntervalSinceReferenceDate
 @property  double elapsedTime
 @property  double rxThroughput
 @property  double txThroughput
 @property  unsigned long rxThroughputBps
 @property  unsigned long txThroughputBps

  // instance methods
  -[FlowHistorySample elapsedTime]
  -[FlowHistorySample setElapsedTime:]
  -[FlowHistorySample rxBytes]
  -[FlowHistorySample txBytes]
  -[FlowHistorySample rxThroughput]
  -[FlowHistorySample txThroughput]
  -[FlowHistorySample rxThroughputBps]
  -[FlowHistorySample txThroughputBps]
  -[FlowHistorySample startTimeIntervalSinceReferenceDate]
  -[FlowHistorySample setStartTimeIntervalSinceReferenceDate:]
  -[FlowHistorySample noteCurent:previous:]
  -[FlowHistorySample rxAppleStackBytes]
  -[FlowHistorySample rxNonAppleStackBytes]
  -[FlowHistorySample rxSISBytes]
  -[FlowHistorySample txAppleStackBytes]
  -[FlowHistorySample txNonAppleStackBytes]
  -[FlowHistorySample txSISBytes]
  -[FlowHistorySample openedFlows]
  -[FlowHistorySample openedAppleStackFlows]
  -[FlowHistorySample openedNonAppleStackFlows]
  -[FlowHistorySample openedRNFFlows]
  -[FlowHistorySample openedSISFlows]
  -[FlowHistorySample closedFlows]
  -[FlowHistorySample closedAppleStackFlows]
  -[FlowHistorySample closedNonAppleStackFlows]
  -[FlowHistorySample closedRNFFlows]
  -[FlowHistorySample closedSISFlows]
  -[FlowHistorySample currentFlows]
  -[FlowHistorySample currentAppleStackFlows]
  -[FlowHistorySample currentNonAppleStackFlows]
  -[FlowHistorySample currentSISFlows]


FlowHistorian : NSObject
 @property  NSMutableArray *historySamples
 @property  double lastTrafficTimestamp
 @property  unsigned long totalRxBytes
 @property  unsigned long totalRxAppleStackBytes
 @property  unsigned long totalRxNonAppleStackBytes
 @property  unsigned long totalRxRNFBytes
 @property  unsigned long totalRxSISBytes
 @property  unsigned long totalTxBytes
 @property  unsigned long totalTxAppleStackBytes
 @property  unsigned long totalTxNonAppleStackBytes
 @property  unsigned long totalTxRNFBytes
 @property  unsigned long totalTxSISBytes
 @property  unsigned long totalClosedFlows
 @property  unsigned long totalClosedAppleStackFlows
 @property  unsigned long totalClosedNonAppleStackFlows
 @property  unsigned long totalClosedSISFlows
 @property  unsigned long totalClosedRNFFlows
 @property  unsigned long currentOpenedFlows
 @property  unsigned long currentOpenedAppleStackFlows
 @property  unsigned long currentOpenedNonAppleStackFlows
 @property  unsigned long currentOpenedSISFlows
 @property  BOOL pendingHistorySampleIsIdle
 @property  NSString *logPrefix
 @property  unsigned int maxHistorySamples
 @property  unsigned long totalOpenedFlows
 @property  unsigned long totalOpenedAppleStackFlows
 @property  unsigned long totalOpenedNonAppleStackFlows
 @property  unsigned long totalOpenedSISFlows
 @property  unsigned long totalOpenedRNFFlows

  // instance methods
  -[FlowHistorian logPrefix]
  -[FlowHistorian setLogPrefix:]
  -[FlowHistorian pendingInterfaceSampleIsIdle]
  -[FlowHistorian .cxx_destruct]
  -[FlowHistorian getState:]
  -[FlowHistorian lastInterfaceTrafficTimestamp]
  -[FlowHistorian init]
  -[FlowHistorian updateSamplesWithTime:bumpSamples:]
  -[FlowHistorian lastSampledRxBytes]
  -[FlowHistorian totalRxBytes]
  -[FlowHistorian lastSampledTxBytes]
  -[FlowHistorian totalTxBytes]
  -[FlowHistorian totalOpenedFlows]
  -[FlowHistorian totalOpenedAppleStackFlows]
  -[FlowHistorian totalOpenedNonAppleStackFlows]
  -[FlowHistorian totalOpenedSISFlows]
  -[FlowHistorian totalOpenedRNFFlows]
  -[FlowHistorian totalClosedFlows]
  -[FlowHistorian totalClosedAppleStackFlows]
  -[FlowHistorian totalClosedNonAppleStackFlows]
  -[FlowHistorian totalClosedSISFlows]
  -[FlowHistorian totalClosedRNFFlows]
  -[FlowHistorian currentOpenedFlows]
  -[FlowHistorian currentOpenedAppleStackFlows]
  -[FlowHistorian currentOpenedNonAppleStackFlows]
  -[FlowHistorian currentOpenedSISFlows]
  -[FlowHistorian applyDeltaRx:deltaTx:snapshot:]
  -[FlowHistorian historySamples]
  -[FlowHistorian setHistorySamples:]
  -[FlowHistorian maxHistorySamples]
  -[FlowHistorian setMaxHistorySamples:]
  -[FlowHistorian lastTrafficTimestamp]
  -[FlowHistorian totalRxAppleStackBytes]
  -[FlowHistorian totalRxNonAppleStackBytes]
  -[FlowHistorian totalRxRNFBytes]
  -[FlowHistorian totalRxSISBytes]
  -[FlowHistorian totalTxAppleStackBytes]
  -[FlowHistorian totalTxNonAppleStackBytes]
  -[FlowHistorian totalTxRNFBytes]
  -[FlowHistorian totalTxSISBytes]
  -[FlowHistorian pendingHistorySampleIsIdle]


WiFiViabilityMonitor : NSObject
  // instance methods
  -[WiFiViabilityMonitor dealloc]
  -[WiFiViabilityMonitor .cxx_destruct]
  -[WiFiViabilityMonitor getState]
  -[WiFiViabilityMonitor observeValueForKeyPath:ofObject:change:context:]
  -[WiFiViabilityMonitor initWithQueue:]
  -[WiFiViabilityMonitor currentWiFiViabilityFlags]
  -[WiFiViabilityMonitor _currentRNFAdvice]
  -[WiFiViabilityMonitor _isCellFallbackAdminDisabled]
  -[WiFiViabilityMonitor _isCellOutrankStateMachineInOutrank]
  -[WiFiViabilityMonitor possiblySignificantWiFiChange]


NWPVarStoreImpoExpo : NSObject <NWPVarStoreProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NWPVarStoreImpoExpo .cxx_destruct]
  -[NWPVarStoreImpoExpo listItemsNameWithPrefix:sortDescriptor:]
  -[NWPVarStoreImpoExpo initWithQueue:]
  -[NWPVarStoreImpoExpo deleteItemsMatchingPredicate:]
  -[NWPVarStoreImpoExpo init]
  -[NWPVarStoreImpoExpo fetchItemUnderName:verificationBlock:]
  -[NWPVarStoreImpoExpo storeUnderName:item:]
  -[NWPVarStoreImpoExpo _initWithImpoExpo:]


AWDSymptomsNetworkAnalyticsScoring : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNetworkType
 @property  int networkType
 @property  BOOL hasTimeSinceLastScoringSecs
 @property  unsigned long timeSinceLastScoringSecs
 @property  BOOL hasScoringCompletionCode
 @property  int scoringCompletionCode
 @property  BOOL hasScoredEntries
 @property  unsigned long scoredEntries
 @property  BOOL hasScoredKnownGood
 @property  unsigned long scoredKnownGood
 @property  BOOL hasLifetimeOldestItemSecs
 @property  unsigned long lifetimeOldestItemSecs
 @property  BOOL hasNumberEntriesWithHomeLOI
 @property  unsigned long numberEntriesWithHomeLOI
 @property  BOOL hasNumberEntriesWithWorkLOI
 @property  unsigned long numberEntriesWithWorkLOI
 @property  BOOL hasNumberEntriesWithUndefinedLOI
 @property  unsigned long numberEntriesWithUndefinedLOI
 @property  BOOL hasNumberEntriesWithUnapprovedLOI
 @property  unsigned long numberEntriesWithUnapprovedLOI

  // instance methods
  -[AWDSymptomsNetworkAnalyticsScoring setNetworkType:]
  -[AWDSymptomsNetworkAnalyticsScoring networkType]
  -[AWDSymptomsNetworkAnalyticsScoring setTimestamp:]
  -[AWDSymptomsNetworkAnalyticsScoring copyTo:]
  -[AWDSymptomsNetworkAnalyticsScoring mergeFrom:]
  -[AWDSymptomsNetworkAnalyticsScoring setHasTimestamp:]
  -[AWDSymptomsNetworkAnalyticsScoring dictionaryRepresentation]
  -[AWDSymptomsNetworkAnalyticsScoring hasTimestamp]
  -[AWDSymptomsNetworkAnalyticsScoring copyWithZone:]
  -[AWDSymptomsNetworkAnalyticsScoring timestamp]
  -[AWDSymptomsNetworkAnalyticsScoring readFrom:]
  -[AWDSymptomsNetworkAnalyticsScoring writeTo:]
  -[AWDSymptomsNetworkAnalyticsScoring isEqual:]
  -[AWDSymptomsNetworkAnalyticsScoring setHasNetworkType:]
  -[AWDSymptomsNetworkAnalyticsScoring hasNetworkType]
  -[AWDSymptomsNetworkAnalyticsScoring networkTypeAsString:]
  -[AWDSymptomsNetworkAnalyticsScoring StringAsNetworkType:]
  -[AWDSymptomsNetworkAnalyticsScoring setLifetimeOldestItemSecs:]
  -[AWDSymptomsNetworkAnalyticsScoring setHasLifetimeOldestItemSecs:]
  -[AWDSymptomsNetworkAnalyticsScoring hasLifetimeOldestItemSecs]
  -[AWDSymptomsNetworkAnalyticsScoring lifetimeOldestItemSecs]
  -[AWDSymptomsNetworkAnalyticsScoring setTimeSinceLastScoringSecs:]
  -[AWDSymptomsNetworkAnalyticsScoring setHasTimeSinceLastScoringSecs:]
  -[AWDSymptomsNetworkAnalyticsScoring hasTimeSinceLastScoringSecs]
  -[AWDSymptomsNetworkAnalyticsScoring scoringCompletionCode]
  -[AWDSymptomsNetworkAnalyticsScoring setScoringCompletionCode:]
  -[AWDSymptomsNetworkAnalyticsScoring setHasScoringCompletionCode:]
  -[AWDSymptomsNetworkAnalyticsScoring hasScoringCompletionCode]
  -[AWDSymptomsNetworkAnalyticsScoring scoringCompletionCodeAsString:]
  -[AWDSymptomsNetworkAnalyticsScoring StringAsScoringCompletionCode:]
  -[AWDSymptomsNetworkAnalyticsScoring setScoredEntries:]
  -[AWDSymptomsNetworkAnalyticsScoring setHasScoredEntries:]
  -[AWDSymptomsNetworkAnalyticsScoring hasScoredEntries]
  -[AWDSymptomsNetworkAnalyticsScoring setScoredKnownGood:]
  -[AWDSymptomsNetworkAnalyticsScoring setHasScoredKnownGood:]
  -[AWDSymptomsNetworkAnalyticsScoring hasScoredKnownGood]
  -[AWDSymptomsNetworkAnalyticsScoring setNumberEntriesWithHomeLOI:]
  -[AWDSymptomsNetworkAnalyticsScoring setHasNumberEntriesWithHomeLOI:]
  -[AWDSymptomsNetworkAnalyticsScoring hasNumberEntriesWithHomeLOI]
  -[AWDSymptomsNetworkAnalyticsScoring setNumberEntriesWithWorkLOI:]
  -[AWDSymptomsNetworkAnalyticsScoring setHasNumberEntriesWithWorkLOI:]
  -[AWDSymptomsNetworkAnalyticsScoring hasNumberEntriesWithWorkLOI]
  -[AWDSymptomsNetworkAnalyticsScoring setNumberEntriesWithUndefinedLOI:]
  -[AWDSymptomsNetworkAnalyticsScoring setHasNumberEntriesWithUndefinedLOI:]
  -[AWDSymptomsNetworkAnalyticsScoring hasNumberEntriesWithUndefinedLOI]
  -[AWDSymptomsNetworkAnalyticsScoring setNumberEntriesWithUnapprovedLOI:]
  -[AWDSymptomsNetworkAnalyticsScoring setHasNumberEntriesWithUnapprovedLOI:]
  -[AWDSymptomsNetworkAnalyticsScoring hasNumberEntriesWithUnapprovedLOI]
  -[AWDSymptomsNetworkAnalyticsScoring timeSinceLastScoringSecs]
  -[AWDSymptomsNetworkAnalyticsScoring scoredEntries]
  -[AWDSymptomsNetworkAnalyticsScoring scoredKnownGood]
  -[AWDSymptomsNetworkAnalyticsScoring numberEntriesWithHomeLOI]
  -[AWDSymptomsNetworkAnalyticsScoring numberEntriesWithWorkLOI]
  -[AWDSymptomsNetworkAnalyticsScoring numberEntriesWithUndefinedLOI]
  -[AWDSymptomsNetworkAnalyticsScoring numberEntriesWithUnapprovedLOI]


SymptomEvaluator : NSObject
  // class methods
  +[SymptomEvaluator hasNewPersistentData]
  +[SymptomEvaluator getPersistentData]
  +[SymptomEvaluator setPersistentData:]


SymptomFilter : NSObject
 @property  unsigned int targetSymptomId
 @property  NSMutableDictionary *potentialFilters
 @property  Filter *currentFilter
 @property  Filter *finalFilter

  // instance methods
  -[SymptomFilter potentialFilters]
  -[SymptomFilter finalFilter]
  -[SymptomFilter .cxx_destruct]
  -[SymptomFilter setCurrentFilter:]
  -[SymptomFilter currentFilter]
  -[SymptomFilter targetSymptomId]
  -[SymptomFilter setTargetSymptomId:]
  -[SymptomFilter configureItem:]
  -[SymptomFilter setFinalFilter:]
  -[SymptomFilter init]


NetDiagnosticProbe : TestProbe <NetDiagnosticsShimDelegate>
 @property  NetDiagnosticsShim *netDiags
 @property  NSString *taskName
 @property  NSString *ndFilePath
 @property  NSMutableDictionary *netDiagsTaskDict
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NetDiagnosticProbe dealloc]
  -[NetDiagnosticProbe .cxx_destruct]
  -[NetDiagnosticProbe setTaskName:]
  -[NetDiagnosticProbe taskName]
  -[NetDiagnosticProbe startNetDiagnosticsTask:]
  -[NetDiagnosticProbe stopNetDiagnosticsTask:]
  -[NetDiagnosticProbe cancelTest:]
  -[NetDiagnosticProbe netDiags]
  -[NetDiagnosticProbe setNetDiags:]
  -[NetDiagnosticProbe disconnectFromNetDiagnostics]
  -[NetDiagnosticProbe setUpDefaultTaskDictionary]
  -[NetDiagnosticProbe netDiagnosticsTaskInProgress:]
  -[NetDiagnosticProbe ndFilePath]
  -[NetDiagnosticProbe setNdFilePath:]
  -[NetDiagnosticProbe netDiagsTaskDict]
  -[NetDiagnosticProbe setNetDiagsTaskDict:]


SimpleRuleCondition : NSObject <ConfigurableObjectProtocol>
 @property  NSString *conditionName
 @property  long long conditionMinCount
 @property  int conditionType
 @property  NSString *conditionPrevSymptom
 @property  long long conditionMaxAge
 @property  long long conditionFlags
 @property  NSString *conditionStringID
 @property  long long conditionStringLength
 @property  <SymptomAdditionalProtocol> *additionalHandler
 @property  SEL additionalSelector
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SimpleRuleCondition configureClass:]
  +[SimpleRuleCondition objectWithName:]

  // instance methods
  -[SimpleRuleCondition read:returnedValues:]
  -[SimpleRuleCondition conditionPrevSymptom]
  -[SimpleRuleCondition setAdditionalHandler:]
  -[SimpleRuleCondition conditionMaxAge]
  -[SimpleRuleCondition setConditionMinCount:]
  -[SimpleRuleCondition setConditionStringLength:]
  -[SimpleRuleCondition setConditionFlags:]
  -[SimpleRuleCondition configureInstance:]
  -[SimpleRuleCondition setConditionStringID:]
  -[SimpleRuleCondition .cxx_destruct]
  -[SimpleRuleCondition conditionFlags]
  -[SimpleRuleCondition _reset:]
  -[SimpleRuleCondition conditionStringLength]
  -[SimpleRuleCondition conditionStringID]
  -[SimpleRuleCondition setConditionMaxAge:]
  -[SimpleRuleCondition conditionMinCount]
  -[SimpleRuleCondition additionalHandler]
  -[SimpleRuleCondition setConditionName:]
  -[SimpleRuleCondition setAdditionalSelector:]
  -[SimpleRuleCondition additionalSelector]
  -[SimpleRuleCondition conditionName]
  -[SimpleRuleCondition setConditionType:]
  -[SimpleRuleCondition evaluate:showingWorkAt:]
  -[SimpleRuleCondition evaluateHandler:showingWorkAt:]
  -[SimpleRuleCondition evaluatePrevSymptom:showingWorkAt:]
  -[SimpleRuleCondition conditionType]
  -[SimpleRuleCondition setConditionPrevSymptom:]


NWPVarValueItem : NSObject <NSSecureCoding>
 @property  unsigned long armPullCount
 @property  unsigned long armObservedCount
 @property  double sampleRewardMean
 @property  double sampleRewardSum
 @property  double sampleRewardSumSquares

  // class methods
  +[NWPVarValueItem supportsSecureCoding]

  // instance methods
  -[NWPVarValueItem encodeWithCoder:]
  -[NWPVarValueItem initWithCoder:]
  -[NWPVarValueItem armPullCount]
  -[NWPVarValueItem setArmPullCount:]
  -[NWPVarValueItem armObservedCount]
  -[NWPVarValueItem setArmObservedCount:]
  -[NWPVarValueItem sampleRewardMean]
  -[NWPVarValueItem setSampleRewardMean:]
  -[NWPVarValueItem sampleRewardSum]
  -[NWPVarValueItem setSampleRewardSum:]
  -[NWPVarValueItem sampleRewardSumSquares]
  -[NWPVarValueItem setSampleRewardSumSquares:]


NWPVar : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *label
 @property  unsigned long model
 @property  unsigned long pullCount
 @property  NSDictionary *allState
 @property  NSArray *referenceValues
 @property  NSObject<NSSecureCoding><NSCopying> *firstValue
 @property  NSObject<NSSecureCoding><NSCopying> *expectingRewardOn
 @property  unsigned long logicalClock
 @property  NSUUID *durableId
 @property  BOOL useScalarRange
 @property  NSString *exportLabel
 @property  NSDictionary *hyperParams

  // class methods
  +[NWPVar supportsSecureCoding]
  +[NWPVar _backgroundQueue]
  +[NWPVar _serviceQueue]
  +[NWPVar _defaultBackingStore]
  +[NWPVar _fetchCheckpoint:isPrefix:]
  +[NWPVar _setCustomBackingStore:]

  // instance methods
  -[NWPVar checkpoint]
  -[NWPVar setModel:]
  -[NWPVar model]
  -[NWPVar encodeWithCoder:]
  -[NWPVar setInitialValue:]
  -[NWPVar setLabel:]
  -[NWPVar .cxx_destruct]
  -[NWPVar copyWithZone:]
  -[NWPVar label]
  -[NWPVar init]
  -[NWPVar initWithCoder:]
  -[NWPVar firstValue]
  -[NWPVar setFirstValue:]
  -[NWPVar initInValueSpace:withLabel:]
  -[NWPVar initFromCheckpoint:forLabel:]
  -[NWPVar initFromLastCheckpointForLabel:]
  -[NWPVar _initToCopy]
  -[NWPVar selectModel:]
  -[NWPVar setHyperParams:]
  -[NWPVar predictValueGivenContext:generationId:]
  -[NWPVar setReward:onValue:forPredictionGenerationId:]
  -[NWPVar _mirrorFrom:]
  -[NWPVar _setToCleanSlate]
  -[NWPVar _pruneOldCheckpoints]
  -[NWPVar migrateToValueSpace:]
  -[NWPVar exportLabel]
  -[NWPVar setExportLabel:]
  -[NWPVar hyperParams]
  -[NWPVar pullCount]
  -[NWPVar setPullCount:]
  -[NWPVar allState]
  -[NWPVar setAllState:]
  -[NWPVar referenceValues]
  -[NWPVar setReferenceValues:]
  -[NWPVar expectingRewardOn]
  -[NWPVar setExpectingRewardOn:]
  -[NWPVar logicalClock]
  -[NWPVar setLogicalClock:]
  -[NWPVar durableId]
  -[NWPVar setDurableId:]
  -[NWPVar useScalarRange]
  -[NWPVar setUseScalarRange:]
  -[NWPVar _pullCounts]


NWPVarValue_Record : NSObject
 @property  NSObject<NSSecureCoding><NSCopying> *value
 @property  long long info
 @property  NSNumber *effective_epsilon

  // instance methods
  -[NWPVarValue_Record .cxx_destruct]
  -[NWPVarValue_Record setValue:]
  -[NWPVarValue_Record setInfo:]
  -[NWPVarValue_Record info]
  -[NWPVarValue_Record value]
  -[NWPVarValue_Record effective_epsilon]
  -[NWPVarValue_Record setEffective_epsilon:]


NWPVarBandit : NWPVar
 @property  SFCache *uuidCache
 @property  NSMutableDictionary *lastSampleRewards

  // instance methods
  -[NWPVarBandit setInitialValue:]
  -[NWPVarBandit .cxx_destruct]
  -[NWPVarBandit initInValueSpace:withLabel:]
  -[NWPVarBandit selectModel:]
  -[NWPVarBandit predictValueGivenContext:generationId:]
  -[NWPVarBandit setReward:onValue:forPredictionGenerationId:]
  -[NWPVarBandit _defaultModelInit]
  -[NWPVarBandit initInNumRangeFrom:to:stride:withLabel:]
  -[NWPVarBandit _epsilongreedy_predictValueGivenContext:]
  -[NWPVarBandit _ucb_predictValueGivenContext:]
  -[NWPVarBandit uuidCache]
  -[NWPVarBandit setUuidCache:]
  -[NWPVarBandit lastSampleRewards]
  -[NWPVarBandit setLastSampleRewards:]


AVFlowDetector : NSObject
  // instance methods
  -[AVFlowDetector setConfiguration:]
  -[AVFlowDetector getState:]
  -[AVFlowDetector possibleAVFlowScore:result:]


ContinuousAVFlowDetector : AVFlowDetector
  // instance methods
  -[ContinuousAVFlowDetector setDefaults]
  -[ContinuousAVFlowDetector init]
  -[ContinuousAVFlowDetector possibleAVFlowScore:result:]


StrictlyPeriodicAVFlowDetector : AVFlowDetector
  // instance methods
  -[StrictlyPeriodicAVFlowDetector setConfiguration:]
  -[StrictlyPeriodicAVFlowDetector setDefaults]
  -[StrictlyPeriodicAVFlowDetector getState:]
  -[StrictlyPeriodicAVFlowDetector init]
  -[StrictlyPeriodicAVFlowDetector possibleAVFlowScore:result:]


AWDSymptomsNetworkTCPFlowThroughputEstimator : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNetworkType
 @property  int networkType
 @property  BOOL hasClientIdentifier
 @property  NSString *clientIdentifier
 @property  BOOL hasSourceAppIdentifier
 @property  NSString *sourceAppIdentifier
 @property  NSMutableArray *flowThroughputEvents

  // class methods
  +[AWDSymptomsNetworkTCPFlowThroughputEstimator flowThroughputEventType]

  // instance methods
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator setNetworkType:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator setClientIdentifier:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator networkType]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator setTimestamp:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator copyTo:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator clientIdentifier]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator .cxx_destruct]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator mergeFrom:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator setHasTimestamp:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator hasClientIdentifier]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator dictionaryRepresentation]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator hasTimestamp]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator copyWithZone:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator timestamp]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator readFrom:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator writeTo:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator isEqual:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator sourceAppIdentifier]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator hasSourceAppIdentifier]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator setSourceAppIdentifier:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator setHasNetworkType:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator hasNetworkType]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator networkTypeAsString:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator StringAsNetworkType:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator clearFlowThroughputEvents]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator addFlowThroughputEvent:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator flowThroughputEventsCount]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator flowThroughputEventAtIndex:]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator flowThroughputEvents]
  -[AWDSymptomsNetworkTCPFlowThroughputEstimator setFlowThroughputEvents:]


NWAppAdvice : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *bundleIdentifier
 @property  long long state
 @property  NSString *reason

  // class methods
  +[NWAppAdvice supportsSecureCoding]

  // instance methods
  -[NWAppAdvice encodeWithCoder:]
  -[NWAppAdvice state]
  -[NWAppAdvice .cxx_destruct]
  -[NWAppAdvice reason]
  -[NWAppAdvice setBundleIdentifier:]
  -[NWAppAdvice bundleIdentifier]
  -[NWAppAdvice copyWithZone:]
  -[NWAppAdvice setReason:]
  -[NWAppAdvice isEqual:]
  -[NWAppAdvice setState:]
  -[NWAppAdvice initWithCoder:]


NWNetworkAdviceUpdate : NSObject <NSSecureCoding, NSCopying>
 @property  long long level
 @property  NSArray *applications

  // class methods
  +[NWNetworkAdviceUpdate supportsSecureCoding]

  // instance methods
  -[NWNetworkAdviceUpdate setLevel:]
  -[NWNetworkAdviceUpdate applications]
  -[NWNetworkAdviceUpdate encodeWithCoder:]
  -[NWNetworkAdviceUpdate setApplications:]
  -[NWNetworkAdviceUpdate initWithDictionary:]
  -[NWNetworkAdviceUpdate .cxx_destruct]
  -[NWNetworkAdviceUpdate copyWithZone:]
  -[NWNetworkAdviceUpdate level]
  -[NWNetworkAdviceUpdate isEqual:]
  -[NWNetworkAdviceUpdate initWithCoder:]


ConfigurationParams : NSObject
 @property  NSDictionary *underlyingDictionary
 @property  NSObject<OS_os_log> *logHandle

  // instance methods
  -[ConfigurationParams logHandle]
  -[ConfigurationParams underlyingDictionary]
  -[ConfigurationParams .cxx_destruct]
  -[ConfigurationParams setLogHandle:]
  -[ConfigurationParams objectForKey:]
  -[ConfigurationParams setUnderlyingDictionary:]
  -[ConfigurationParams init]
  -[ConfigurationParams extractKey:toDouble:defaultTo:]
  -[ConfigurationParams extractKey:toUint64:defaultTo:]
  -[ConfigurationParams extractKey:toUint32:defaultTo:]
  -[ConfigurationParams extractKey:toNSUInteger:defaultTo:]
  -[ConfigurationParams extractKey:toBOOL:defaultTo:]
  -[ConfigurationParams extractKey:toBool:defaultTo:]
  -[ConfigurationParams extractStringFromKey:defaultTo:]


CTMessageManager : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CTMessageManager sharedInstance]
  +[CTMessageManager configureClass:]

  // instance methods
  -[CTMessageManager read:returnedValues:]
  -[CTMessageManager noteSymptom:]
  -[CTMessageManager configureInstance:]


SimpleRuleEvaluator : NSObject <ConfigurableObjectProtocol>
 @property  NSString *signatureName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SimpleRuleEvaluator configureClass:]
  +[SimpleRuleEvaluator objectWithName:]

  // instance methods
  -[SimpleRuleEvaluator read:returnedValues:]
  -[SimpleRuleEvaluator evaluateSignatureForEvent:]
  -[SimpleRuleEvaluator configureInstance:]
  -[SimpleRuleEvaluator .cxx_destruct]
  -[SimpleRuleEvaluator setSignatureName:]
  -[SimpleRuleEvaluator signatureName]


AWDSymptomsABCEnhancedBetaFeedbackState : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasSwitchState
 @property  unsigned int switchState

  // instance methods
  -[AWDSymptomsABCEnhancedBetaFeedbackState setTimestamp:]
  -[AWDSymptomsABCEnhancedBetaFeedbackState copyTo:]
  -[AWDSymptomsABCEnhancedBetaFeedbackState mergeFrom:]
  -[AWDSymptomsABCEnhancedBetaFeedbackState setHasTimestamp:]
  -[AWDSymptomsABCEnhancedBetaFeedbackState dictionaryRepresentation]
  -[AWDSymptomsABCEnhancedBetaFeedbackState hasTimestamp]
  -[AWDSymptomsABCEnhancedBetaFeedbackState copyWithZone:]
  -[AWDSymptomsABCEnhancedBetaFeedbackState timestamp]
  -[AWDSymptomsABCEnhancedBetaFeedbackState readFrom:]
  -[AWDSymptomsABCEnhancedBetaFeedbackState writeTo:]
  -[AWDSymptomsABCEnhancedBetaFeedbackState isEqual:]
  -[AWDSymptomsABCEnhancedBetaFeedbackState switchState]
  -[AWDSymptomsABCEnhancedBetaFeedbackState setSwitchState:]
  -[AWDSymptomsABCEnhancedBetaFeedbackState setHasSwitchState:]
  -[AWDSymptomsABCEnhancedBetaFeedbackState hasSwitchState]


AWDSymptomsNetworkDebuggabilityFrameworkIssue : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  unsigned long ndfNetworkTypesCount
 @property  ^i ndfNetworkTypes
 @property  BOOL hasNdfCount
 @property  unsigned long ndfCount
 @property  BOOL hasNdfDuration
 @property  unsigned long ndfDuration
 @property  BOOL hasNdfDampeningFactor
 @property  unsigned long ndfDampeningFactor
 @property  BOOL hasNdfTriggerType
 @property  int ndfTriggerType
 @property  NSMutableArray *ndfAppNames
 @property  unsigned long ndfAppSymptomsCount
 @property  ^i ndfAppSymptoms
 @property  BOOL hasNdfLQM
 @property  long long ndfLQM
 @property  BOOL hasNdfSessionType
 @property  int ndfSessionType
 @property  NSMutableArray *ndfSignatures
 @property  BOOL hasNdfSymptomPoint
 @property  long long ndfSymptomPoint

  // class methods
  +[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfAppNameType]
  +[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfSignatureType]

  // instance methods
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setTimestamp:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue copyTo:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue dealloc]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue .cxx_destruct]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue mergeFrom:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setHasTimestamp:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue dictionaryRepresentation]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue hasTimestamp]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue copyWithZone:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue timestamp]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue readFrom:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue writeTo:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue isEqual:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfNetworkTypesCount]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfNetworkTypes]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue clearNdfNetworkTypes]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue addNdfNetworkType:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfNetworkTypeAtIndex:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setNdfNetworkTypes:count:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfNetworkTypesAsString:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue StringAsNdfNetworkTypes:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setNdfCount:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setHasNdfCount:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue hasNdfCount]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setNdfDuration:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setHasNdfDuration:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue hasNdfDuration]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setNdfDampeningFactor:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setHasNdfDampeningFactor:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue hasNdfDampeningFactor]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfTriggerType]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setNdfTriggerType:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setHasNdfTriggerType:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue hasNdfTriggerType]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfTriggerTypeAsString:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue StringAsNdfTriggerType:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue clearNdfAppNames]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue addNdfAppName:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfAppNamesCount]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfAppNameAtIndex:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfAppSymptomsCount]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfAppSymptoms]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue clearNdfAppSymptoms]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue addNdfAppSymptom:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfAppSymptomAtIndex:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setNdfAppSymptoms:count:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfAppSymptomsAsString:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue StringAsNdfAppSymptoms:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setNdfLQM:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setHasNdfLQM:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue hasNdfLQM]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfSessionType]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setNdfSessionType:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setHasNdfSessionType:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue hasNdfSessionType]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfSessionTypeAsString:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue StringAsNdfSessionType:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue clearNdfSignatures]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue addNdfSignature:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfSignaturesCount]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfSignatureAtIndex:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setNdfSymptomPoint:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setHasNdfSymptomPoint:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue hasNdfSymptomPoint]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfCount]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfDuration]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfDampeningFactor]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfAppNames]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setNdfAppNames:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfLQM]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfSignatures]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue setNdfSignatures:]
  -[AWDSymptomsNetworkDebuggabilityFrameworkIssue ndfSymptomPoint]


TCPProgressProbe : NSObject
 @property  unsigned long interfaceIndex
 @property  BOOL localFlowTracking

  // class methods
  +[TCPProgressProbe forceInvalidationFor:periods:]
  +[TCPProgressProbe initialize]
  +[TCPProgressProbe progressPrettyPrintUtility:]
  +[TCPProgressProbe probeForInterface:]

  // instance methods
  -[TCPProgressProbe fetchMetricsForFlowsAged:metrics:resultBlock:]
  -[TCPProgressProbe dealloc]
  -[TCPProgressProbe interfaceMappingIsCurrent]
  -[TCPProgressProbe .cxx_destruct]
  -[TCPProgressProbe localFlowTracking]
  -[TCPProgressProbe interfaceIndex]
  -[TCPProgressProbe manage:outValue:]
  -[TCPProgressProbe _initForInterface:]
  -[TCPProgressProbe setLocalFlowTracking:]


LQMPredictionInternalRecord : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned int offset
 @property  unsigned int length
 @property  unsigned int level
 @property  double confidence

  // class methods
  +[LQMPredictionInternalRecord supportsSecureCoding]

  // instance methods
  -[LQMPredictionInternalRecord confidence]
  -[LQMPredictionInternalRecord adjustOffsetTo:]
  -[LQMPredictionInternalRecord encodeWithCoder:]
  -[LQMPredictionInternalRecord length]
  -[LQMPredictionInternalRecord adjustConfidenceTo:]
  -[LQMPredictionInternalRecord copyWithZone:]
  -[LQMPredictionInternalRecord adjustLengthTo:]
  -[LQMPredictionInternalRecord offset]
  -[LQMPredictionInternalRecord initWithOffset:length:level:confidence:]
  -[LQMPredictionInternalRecord level]
  -[LQMPredictionInternalRecord initWithCoder:]


InternalNetworkStateRecord : NSObject
 @property  long long stateAge
 @property  long long stateDayOfWeek
 @property  long long stateSlotId
 @property  NSString *stateNetworkId
 @property  long long stateNetworkLQM
 @property  long long stateDurationSeconds
 @property  long long stateSlotLength

  // instance methods
  -[InternalNetworkStateRecord .cxx_destruct]
  -[InternalNetworkStateRecord isEqual:]
  -[InternalNetworkStateRecord initWithAge:dayOfWeek:slotId:networkId:networkLQM:stateDurationSeconds:stateSlotLength:]
  -[InternalNetworkStateRecord _isEqualToNetworkStateRecord:]
  -[InternalNetworkStateRecord mergeState:]
  -[InternalNetworkStateRecord stateAge]
  -[InternalNetworkStateRecord stateDayOfWeek]
  -[InternalNetworkStateRecord stateSlotId]
  -[InternalNetworkStateRecord stateNetworkId]
  -[InternalNetworkStateRecord stateNetworkLQM]
  -[InternalNetworkStateRecord stateDurationSeconds]
  -[InternalNetworkStateRecord stateSlotLength]


NetworkStateRecord : NSObject <NSSecureCoding>
 @property  long long stateAge
 @property  long long stateDayOfWeek
 @property  long long stateSlotId
 @property  long long stateLength
 @property  NSString *stateBeginningNetworkId
 @property  NSString *stateEndingNetworkId
 @property  long long stateType
 @property  long long stateLabelAssigned

  // class methods
  +[NetworkStateRecord supportsSecureCoding]

  // instance methods
  -[NetworkStateRecord encodeWithCoder:]
  -[NetworkStateRecord stateType]
  -[NetworkStateRecord .cxx_destruct]
  -[NetworkStateRecord initWithCoder:]
  -[NetworkStateRecord stateAge]
  -[NetworkStateRecord stateDayOfWeek]
  -[NetworkStateRecord stateSlotId]
  -[NetworkStateRecord initWithAge:dayOfWeek:slotId:stateLength:beginningNetworkId:endingNetworkId:stateType:label:]
  -[NetworkStateRecord assignDayOfWeek:]
  -[NetworkStateRecord assignLabel:]
  -[NetworkStateRecord stateLength]
  -[NetworkStateRecord stateBeginningNetworkId]
  -[NetworkStateRecord stateEndingNetworkId]
  -[NetworkStateRecord stateLabelAssigned]


JournalRecordInfo : NSObject
 @property  NSString *journalName
 @property  NSDate *lastUpdate
 @property  NSMutableData *journalData

  // instance methods
  -[JournalRecordInfo lastUpdate]
  -[JournalRecordInfo encodeWithCoder:]
  -[JournalRecordInfo .cxx_destruct]
  -[JournalRecordInfo initWithCoder:]
  -[JournalRecordInfo initWithJournalName:lastUpdate:journalData:]
  -[JournalRecordInfo journalName]
  -[JournalRecordInfo journalData]


DisconnectionStateStatistics : NSObject <NSSecureCoding>
 @property  NSSet *daysOfWeek
 @property  unsigned long periodId
 @property  NSString *disconnectedFromNetworkId
 @property  NSString *connectToNetworkId
 @property  NSMutableArray *networkStateRecords
 @property  unsigned long averageDisconnectionLength

  // class methods
  +[DisconnectionStateStatistics supportsSecureCoding]

  // instance methods
  -[DisconnectionStateStatistics encodeWithCoder:]
  -[DisconnectionStateStatistics .cxx_destruct]
  -[DisconnectionStateStatistics initWithCoder:]
  -[DisconnectionStateStatistics daysOfWeek]
  -[DisconnectionStateStatistics initWithDaysOfWeek:periodId:forNetworkStateRecord:]
  -[DisconnectionStateStatistics isMergeableWithDisconnectionStateStatistics:]
  -[DisconnectionStateStatistics mergeDisconnectionStateStatistics:]
  -[DisconnectionStateStatistics calculateAverageLength]
  -[DisconnectionStateStatistics periodId]
  -[DisconnectionStateStatistics disconnectedFromNetworkId]
  -[DisconnectionStateStatistics connectToNetworkId]
  -[DisconnectionStateStatistics networkStateRecords]
  -[DisconnectionStateStatistics averageDisconnectionLength]


NetworkAnalyticsModel : NSObject
 @property  NSDate *lastModelRunTime
 @property  NSDate *debugTrainingTime
 @property  BOOL isHelper

  // class methods
  +[NetworkAnalyticsModel modelGeneratedAt]
  +[NetworkAnalyticsModel resetModel]
  +[NetworkAnalyticsModel getDaysWithSimilarPatternForInterfaceType:]
  +[NetworkAnalyticsModel fetchTrainingProgressForInterfaceType:isAny:isBuiltin:scopedToLOI:hasCustomSignature:]
  +[NetworkAnalyticsModel fetchPredictionsForInterfaceType:isAny:isBuiltin:scopedToLOI:hasCustomSignature:error:]
  +[NetworkAnalyticsModel fetchPredictionErrorForInterfaceType:isAny:isBuiltin:scopedToLOI:hasCustomSignature:]
  +[NetworkAnalyticsModel modelResolution]
  +[NetworkAnalyticsModel purgeAllJournalRecords]

  // instance methods
  -[NetworkAnalyticsModel _purgeAndReturnValidJournalWithPrefix:olderThan:]
  -[NetworkAnalyticsModel _parseTimeIntoWeekdayAndSlotId:withReferenceDate:]
  -[NetworkAnalyticsModel _fetchHomeTimezoneOffsetFromJournal]
  -[NetworkAnalyticsModel _getWeightForAge:]
  -[NetworkAnalyticsModel _savePredictionToJournalForInterface:]
  -[NetworkAnalyticsModel _fetchPredictionsForInterfaceType:isAny:isBuiltin:scopedToLOI:hasCustomSignature:error:]
  -[NetworkAnalyticsModel lastModelRunTime]
  -[NetworkAnalyticsModel _readJournalEntriesUsingIpsfile]
  -[NetworkAnalyticsModel postAWDPredictionMetricsForInterface:previousTime:]
  -[NetworkAnalyticsModel _calculateStatisticsFromNetworkStateTable:usingPredicate:]
  -[NetworkAnalyticsModel _finishedReadingLowInternetModeRecords:]
  -[NetworkAnalyticsModel _printInternalStateSet:]
  -[NetworkAnalyticsModel setLastModelRunTime:]
  -[NetworkAnalyticsModel _purgeAllJournalRecords]
  -[NetworkAnalyticsModel _trainModelForInterfaceType:sanitizedLQMTable:]
  -[NetworkAnalyticsModel setDebugTrainingTime:]
  -[NetworkAnalyticsModel _evaluateErrorOfLQMPredictions:againstObservedLQMTable:]
  -[NetworkAnalyticsModel _removePrimarykeyAndLocationInJournalRecordInfo:]
  -[NetworkAnalyticsModel _loadLatestPredictionFromJournalWithInterfaceType:]
  -[NetworkAnalyticsModel _resetModel]
  -[NetworkAnalyticsModel dealloc]
  -[NetworkAnalyticsModel _getWifiInstantQualityBasedOnLQM:]
  -[NetworkAnalyticsModel _extractImpairmentEventsFromNetworkStateTable:setOfDays:]
  -[NetworkAnalyticsModel _purgeSavedPredictionsOlderThan:]
  -[NetworkAnalyticsModel .cxx_destruct]
  -[NetworkAnalyticsModel _getCurrentLocationTimezoneOffsetWithoutDST]
  -[NetworkAnalyticsModel trainModel]
  -[NetworkAnalyticsModel _generatePredictionForDays:fromClusteredEvents:clusterCentroids:interfaceType:basedOnWeekClusters:savePredictionsTo:]
  -[NetworkAnalyticsModel _isValidTimezoneToReturnPredictions]
  -[NetworkAnalyticsModel _handleTimezoneChanged]
  -[NetworkAnalyticsModel setIsHelper:]
  -[NetworkAnalyticsModel _readJournalEntriesUsingImpoExpoService]
  -[NetworkAnalyticsModel _getPredictionJournalNameWithPrefix:forInterface:slotSizeMinutes:]
  -[NetworkAnalyticsModel _actUponSystemSettingsAirplaneChanged:wifiChanged:cellDataChanged:]
  -[NetworkAnalyticsModel _isValidTimezoneToTrain]
  -[NetworkAnalyticsModel _processNetworkState:toStateSet:stateStartTimeInfo:stateEndTimeInfo:effectiveNetworkId:]
  -[NetworkAnalyticsModel _createHeaderDataForSavedPredictionsName:hasComplementaryPrediction:interfaceType:]
  -[NetworkAnalyticsModel initWithJournalName:workspace:queue:]
  -[NetworkAnalyticsModel observeValueForKeyPath:ofObject:change:context:]
  -[NetworkAnalyticsModel _getNWInstantQualityForNetwork:basedOnLQM:]
  -[NetworkAnalyticsModel _readJournalEntriesUsingSimulatedfile]
  -[NetworkAnalyticsModel _getTotalWeightForCompletedHistory]
  -[NetworkAnalyticsModel _clusterImpairmentEventsUsingKMeansOn:saveCentroidsTo:]
  -[NetworkAnalyticsModel _readJournalEntries]
  -[NetworkAnalyticsModel isHelper]
  -[NetworkAnalyticsModel _clusterUsingKMeansOn:into:iterations:saveCentroidsTo:]
  -[NetworkAnalyticsModel _modelResolution]
  -[NetworkAnalyticsModel _getSavedPredictionHeaderNameForInterface:]
  -[NetworkAnalyticsModel _processJournalData:startFrom:endAt:rawWifiStateSet:rawCellStateSet:]
  -[NetworkAnalyticsModel debugTrainingTime]
  -[NetworkAnalyticsModel _setCalendar:]
  -[NetworkAnalyticsModel _shuffleArray:]
  -[NetworkAnalyticsModel _fetchTrainingProgressForInterfaceType:isAny:isBuiltin:scopedToLOI:hasCustomSignature:]
  -[NetworkAnalyticsModel _isLegacyJournal:]
  -[NetworkAnalyticsModel _fetchPredictionErrorForInterfaceType:isAny:isBuiltin:scopedToLOI:hasCustomSignature:]
  -[NetworkAnalyticsModel _fetchTrainingProgressForInterfaceType:]
  -[NetworkAnalyticsModel _predictNetworkQualityBasedOnAverageNWInstantQuality:]
  -[NetworkAnalyticsModel _getCellInstantQualityBasedOnLQM:]
  -[NetworkAnalyticsModel _getComplementaryPredictionNameForInterface:]
  -[NetworkAnalyticsModel _clusterEventsUsingKMeansForSetOfDays:networkStateTable:saveCentroidsTo:]
  -[NetworkAnalyticsModel _getDaysWithSimilarPatternForInterfaceType:]
  -[NetworkAnalyticsModel _shouldCreateIpsFile]
  -[NetworkAnalyticsModel _insertInternalNetworkStateRecordTo:networkId:networkLQM:age:dayOfWeek:slotId:numberOfSlots:stateDuration:]
  -[NetworkAnalyticsModel _processLowInternetModeRecord:addTo:]
  -[NetworkAnalyticsModel _handleNetworkNotificationFrom:notification:]
  -[NetworkAnalyticsModel _learnDisconnectionPatternForSetOfDays:impairmentEvents:]
  -[NetworkAnalyticsModel _trainModelAt:]
  -[NetworkAnalyticsModel _elbowOfList:]
  -[NetworkAnalyticsModel _clusterEventsInWeekUsingKMeansOn:]
  -[NetworkAnalyticsModel processProxyTrain]
  -[NetworkAnalyticsModel _sanitizeInternalLQMStateEventFrom:toTable:]
  -[NetworkAnalyticsModel _updateHomeTimezoneOffsetIfNeeded]
  -[NetworkAnalyticsModel _getDominantLQMInSlotWithTimeSpentInBest:inFair:inMinimallyViable:inNone:]
  -[NetworkAnalyticsModel numberOfGroupOfSimilarDaysForInterface:]
  -[NetworkAnalyticsModel _loadSavedPredictionBasedOnHeaderData:interface:]


SymptomSet : NSObject
 @property  NSMutableArray *symptoms

  // instance methods
  -[SymptomSet .cxx_destruct]
  -[SymptomSet symptoms]
  -[SymptomSet setSymptoms:]


SymptomStore : NSObject
 @property  unsigned int symptomIdent
 @property  NSString *symptomKey
 @property  NSString *symptomName
 @property  NSString *symptomDescription
 @property  NSMutableArray *symptomHistory

  // class methods
  +[SymptomStore configure:]
  +[SymptomStore addFromReporter:]
  +[SymptomStore setRetainCount:forSymptom:]
  +[SymptomStore keyFromSymptomName:]
  +[SymptomStore storeFromSymptomKey:]
  +[SymptomStore setRetainTime:forSymptom:]
  +[SymptomStore resetSymptomsWithKey:]
  +[SymptomStore nameFromSymptomKey:]
  +[SymptomStore nameFromSymptomId:]
  +[SymptomStore nameFromReporterId:]
  +[SymptomStore initialize]
  +[SymptomStore pruneSymptomsWithKey:]
  +[SymptomStore numSymptomsWithKey:retainTime:]
  +[SymptomStore storedSymptomsWithKey:]
  +[SymptomStore keyFromSymptomId:]
  +[SymptomStore idFromSymptomName:]
  +[SymptomStore idFromReporterName:]
  +[SymptomStore noteReceivedSymptom:]
  +[SymptomStore storeFromSymptomName:]
  +[SymptomStore descriptionFromSymptomName:]
  +[SymptomStore _createForName:key:id:symptomDescription:]

  // instance methods
  -[SymptomStore numSymptomsWithRetainTime:]
  -[SymptomStore setSymptomDescription:]
  -[SymptomStore .cxx_destruct]
  -[SymptomStore symptomName]
  -[SymptomStore setSymptomKey:]
  -[SymptomStore setSymptomName:]
  -[SymptomStore symptomDescription]
  -[SymptomStore setSymptomIdent:]
  -[SymptomStore _pruneSymptomsForDate:]
  -[SymptomStore setSymptomHistory:]
  -[SymptomStore symptomHistory]
  -[SymptomStore symptomKey]
  -[SymptomStore noteReceivedSymptom:]
  -[SymptomStore setRetainTime:]
  -[SymptomStore setRetainCount:]
  -[SymptomStore symptomIdent]


SymptomTracer : NSObject
  // class methods
  +[SymptomTracer initialize]
  +[SymptomTracer traceBasicSymptom:]

  // instance methods
  -[SymptomTracer traceBasicSymptom:]


LikelyAVFlowDetails : NSObject
 @property  NSString *owner
 @property  int matchScore
 @property  double relevantThroughput

  // instance methods
  -[LikelyAVFlowDetails owner]
  -[LikelyAVFlowDetails setOwner:]
  -[LikelyAVFlowDetails .cxx_destruct]
  -[LikelyAVFlowDetails matchScore]
  -[LikelyAVFlowDetails setMatchScore:]
  -[LikelyAVFlowDetails relevantThroughput]
  -[LikelyAVFlowDetails setRelevantThroughput:]


AudioVideoSample : NSObject
 @property  double startTimeIntervalSinceReferenceDate
 @property  double elapsedTime
 @property  unsigned long rxBytes
 @property  unsigned long txBytes
 @property  double averageRxThroughput
 @property  double averageTxThroughput
 @property  BOOL isIdle

  // instance methods
  -[AudioVideoSample elapsedTime]
  -[AudioVideoSample setElapsedTime:]
  -[AudioVideoSample setTxBytes:]
  -[AudioVideoSample setRxBytes:]
  -[AudioVideoSample rxBytes]
  -[AudioVideoSample isIdle]
  -[AudioVideoSample txBytes]
  -[AudioVideoSample startTimeIntervalSinceReferenceDate]
  -[AudioVideoSample setStartTimeIntervalSinceReferenceDate:]
  -[AudioVideoSample averageRxThroughput]
  -[AudioVideoSample averageTxThroughput]


FlowSample : NSObject
 @property  double elapsedTime
 @property  unsigned long totalObservedRxBytes
 @property  unsigned long totalObservedTxBytes
 @property  unsigned long totalObservedCellRxBytes
 @property  unsigned long totalObservedCellTxBytes
 @property  unsigned long totalObservedWiFiRxBytes
 @property  unsigned long totalObservedWiFiTxBytes
 @property  double minCellRxThroughput
 @property  double averageCellRxThroughput
 @property  double maxCellRxThroughput
 @property  double minCellTxThroughput
 @property  double averageCellTxThroughput
 @property  double maxCellTxThroughput
 @property  double ceilingCellRxThroughput
 @property  double ceilingCellTxThroughput
 @property  double minWiFiRxThroughput
 @property  double averageWiFiRxThroughput
 @property  double maxWiFiRxThroughput
 @property  double minWiFiTxThroughput
 @property  double averageWiFiTxThroughput
 @property  double maxWiFiTxThroughput
 @property  double ceilingWiFiRxThroughput
 @property  double ceilingWiFiTxThroughput
 @property  double minRxThroughput
 @property  double averageRxThroughput
 @property  double maxRxThroughput
 @property  double minTxThroughput
 @property  double averageTxThroughput
 @property  double maxTxThroughput
 @property  double ceilingRxThroughput
 @property  double ceilingTxThroughput
 @property  BOOL isIdle

  // class methods
  +[FlowSample _cellRelay]
  +[FlowSample acquireNominalCeilingValuesForCellDL:andUL:]

  // instance methods
  -[FlowSample elapsedTime]
  -[FlowSample setElapsedTime:]
  -[FlowSample isIdle]
  -[FlowSample averageRxThroughput]
  -[FlowSample averageTxThroughput]
  -[FlowSample totalObservedRxBytes]
  -[FlowSample totalObservedTxBytes]
  -[FlowSample minRxThroughput]
  -[FlowSample maxRxThroughput]
  -[FlowSample minTxThroughput]
  -[FlowSample maxTxThroughput]
  -[FlowSample ceilingRxThroughput]
  -[FlowSample ceilingTxThroughput]
  -[FlowSample minCellRxThroughput]
  -[FlowSample averageCellRxThroughput]
  -[FlowSample maxCellRxThroughput]
  -[FlowSample minCellTxThroughput]
  -[FlowSample averageCellTxThroughput]
  -[FlowSample maxCellTxThroughput]
  -[FlowSample minWiFiRxThroughput]
  -[FlowSample averageWiFiRxThroughput]
  -[FlowSample maxWiFiRxThroughput]
  -[FlowSample minWiFiTxThroughput]
  -[FlowSample averageWiFiTxThroughput]
  -[FlowSample maxWiFiTxThroughput]
  -[FlowSample accumulateFrom:]
  -[FlowSample acquireCeilingValuesForCellFlow:]
  -[FlowSample totalObservedCellRxBytes]
  -[FlowSample setTotalObservedCellRxBytes:]
  -[FlowSample totalObservedCellTxBytes]
  -[FlowSample setTotalObservedCellTxBytes:]
  -[FlowSample totalObservedWiFiRxBytes]
  -[FlowSample setTotalObservedWiFiRxBytes:]
  -[FlowSample totalObservedWiFiTxBytes]
  -[FlowSample setTotalObservedWiFiTxBytes:]
  -[FlowSample ceilingCellRxThroughput]
  -[FlowSample ceilingCellTxThroughput]
  -[FlowSample ceilingWiFiRxThroughput]
  -[FlowSample ceilingWiFiTxThroughput]


FlowLedger : NSObject
 @property  NSString *createdBy
 @property  NSString *latestClassification
 @property  FlowOriginLedger *creatorLedger
 @property  AppHistoryScreenerEpisode *appEpisode
 @property  NSUUID *flowUUID
 @property  unsigned long flowIdentifier
 @property  unsigned long totalObservedRxBytes
 @property  unsigned long totalObservedTxBytes
 @property  unsigned long totalObservedCellRxBytes
 @property  unsigned long totalObservedCellTxBytes
 @property  unsigned long totalObservedWiFiRxBytes
 @property  unsigned long totalObservedWiFiTxBytes
 @property  double prevSampleTime
 @property  double flowIdleDuration
 @property  double flowNonIdleDuration
 @property  double pendingFlowNonIdleDuration
 @property  double maxRxThroughput
 @property  double maxTxThroughput
 @property  double minRxThroughput
 @property  double minTxThroughput
 @property  double recentRxThroughput
 @property  double recentTxThroughput
 @property  double recentCellRxThroughput
 @property  double recentCellTxThroughput
 @property  double recentWiFiRxThroughput
 @property  double recentWiFiTxThroughput
 @property  NSMutableArray *alternatingIdleNonIdlePeriods
 @property  NSMutableArray *nonIdleSamples
 @property  NSString *flowType
 @property  unsigned int numSamples
 @property  unsigned int trafficClass
 @property  BOOL interfaceCellular
 @property  BOOL trafficClassIsAudioVideo
 @property  BOOL flowIsUDP
 @property  BOOL flowIsTCP
 @property  BOOL flowIsQUIC
 @property  BOOL lastSampleWasIdle
 @property  BOOL flowStartedAsForeground
 @property  BOOL flowLastSeenAsForeground
 @property  BOOL notedAsFGAudioVideoTC
 @property  BOOL notedAsCellFGAudioVideoTC
 @property  BOOL notedAsWiFiFGAudioVideoTC
 @property  BOOL notedAsAudioVideoTC
 @property  unsigned int expectedTransferState
 @property  double transferStateEntryTimestamp
 @property  BOOL rxTransferSizeLowerThreshold
 @property  BOOL rxTransferSizeUpperThreshold
 @property  unsigned long rxTransferSizeCount
 @property  BOOL txTransferSizeLowerThreshold
 @property  BOOL txTransferSizeUpperThreshold
 @property  unsigned long txTransferSizeCount

  // instance methods
  -[FlowLedger flowType]
  -[FlowLedger briefDescription]
  -[FlowLedger trafficClass]
  -[FlowLedger numSamples]
  -[FlowLedger createdBy]
  -[FlowLedger .cxx_destruct]
  -[FlowLedger flowIdentifier]
  -[FlowLedger setTrafficClass:]
  -[FlowLedger interfaceCellular]
  -[FlowLedger setFlowType:]
  -[FlowLedger setFlowIdentifier:]
  -[FlowLedger statisticsDescription]
  -[FlowLedger totalObservedRxBytes]
  -[FlowLedger totalObservedTxBytes]
  -[FlowLedger minRxThroughput]
  -[FlowLedger maxRxThroughput]
  -[FlowLedger minTxThroughput]
  -[FlowLedger maxTxThroughput]
  -[FlowLedger totalObservedCellRxBytes]
  -[FlowLedger setTotalObservedCellRxBytes:]
  -[FlowLedger totalObservedCellTxBytes]
  -[FlowLedger setTotalObservedCellTxBytes:]
  -[FlowLedger totalObservedWiFiRxBytes]
  -[FlowLedger setTotalObservedWiFiRxBytes:]
  -[FlowLedger totalObservedWiFiTxBytes]
  -[FlowLedger setTotalObservedWiFiTxBytes:]
  -[FlowLedger trafficClassIsAudioVideo]
  -[FlowLedger recentRxThroughput]
  -[FlowLedger recentTxThroughput]
  -[FlowLedger recentCellRxThroughput]
  -[FlowLedger recentCellTxThroughput]
  -[FlowLedger recentWiFiRxThroughput]
  -[FlowLedger recentWiFiTxThroughput]
  -[FlowLedger statisticsForSampleCount:sampleDuration:minRxTput:avgRxTput:maxRxTput:avgCeilingRxTput:normalizedRxStdDeviation:minTxTput:avgTxTput:maxTxTput:avgCeilingTxTput:normalizedTxStdDeviation:requiredMinSampleCount:]
  -[FlowLedger statisticsForAccumulatedSamples:sampleDuration:avgRxTput:avgCeilingRxTput:avgTxTput:avgCeilingTxTput:]
  -[FlowLedger expectedTransferStateToString:]
  -[FlowLedger latestClassification]
  -[FlowLedger setLatestClassification:]
  -[FlowLedger creatorLedger]
  -[FlowLedger setCreatorLedger:]
  -[FlowLedger appEpisode]
  -[FlowLedger setAppEpisode:]
  -[FlowLedger flowUUID]
  -[FlowLedger setFlowUUID:]
  -[FlowLedger prevSampleTime]
  -[FlowLedger setPrevSampleTime:]
  -[FlowLedger flowIdleDuration]
  -[FlowLedger setFlowIdleDuration:]
  -[FlowLedger flowNonIdleDuration]
  -[FlowLedger setFlowNonIdleDuration:]
  -[FlowLedger pendingFlowNonIdleDuration]
  -[FlowLedger setPendingFlowNonIdleDuration:]
  -[FlowLedger setMaxRxThroughput:]
  -[FlowLedger setMaxTxThroughput:]
  -[FlowLedger setMinRxThroughput:]
  -[FlowLedger setMinTxThroughput:]
  -[FlowLedger alternatingIdleNonIdlePeriods]
  -[FlowLedger setAlternatingIdleNonIdlePeriods:]
  -[FlowLedger nonIdleSamples]
  -[FlowLedger setNonIdleSamples:]
  -[FlowLedger setNumSamples:]
  -[FlowLedger setInterfaceCellular:]
  -[FlowLedger setTrafficClassIsAudioVideo:]
  -[FlowLedger flowIsUDP]
  -[FlowLedger setFlowIsUDP:]
  -[FlowLedger flowIsTCP]
  -[FlowLedger setFlowIsTCP:]
  -[FlowLedger flowIsQUIC]
  -[FlowLedger setFlowIsQUIC:]
  -[FlowLedger lastSampleWasIdle]
  -[FlowLedger setLastSampleWasIdle:]
  -[FlowLedger flowStartedAsForeground]
  -[FlowLedger setFlowStartedAsForeground:]
  -[FlowLedger flowLastSeenAsForeground]
  -[FlowLedger setFlowLastSeenAsForeground:]
  -[FlowLedger notedAsFGAudioVideoTC]
  -[FlowLedger setNotedAsFGAudioVideoTC:]
  -[FlowLedger notedAsCellFGAudioVideoTC]
  -[FlowLedger setNotedAsCellFGAudioVideoTC:]
  -[FlowLedger notedAsWiFiFGAudioVideoTC]
  -[FlowLedger setNotedAsWiFiFGAudioVideoTC:]
  -[FlowLedger notedAsAudioVideoTC]
  -[FlowLedger setNotedAsAudioVideoTC:]
  -[FlowLedger expectedTransferState]
  -[FlowLedger setExpectedTransferState:]
  -[FlowLedger transferStateEntryTimestamp]
  -[FlowLedger setTransferStateEntryTimestamp:]
  -[FlowLedger rxTransferSizeLowerThreshold]
  -[FlowLedger setRxTransferSizeLowerThreshold:]
  -[FlowLedger rxTransferSizeUpperThreshold]
  -[FlowLedger setRxTransferSizeUpperThreshold:]
  -[FlowLedger rxTransferSizeCount]
  -[FlowLedger setRxTransferSizeCount:]
  -[FlowLedger txTransferSizeLowerThreshold]
  -[FlowLedger setTxTransferSizeLowerThreshold:]
  -[FlowLedger txTransferSizeUpperThreshold]
  -[FlowLedger setTxTransferSizeUpperThreshold:]
  -[FlowLedger txTransferSizeCount]
  -[FlowLedger setTxTransferSizeCount:]


CoreMediaDownload : NSObject
 @property  double startTime
 @property  double estimatedDuration
 @property  double prevRunBusyTime
 @property  double prevRunIdleTime
 @property  double thisRunStartTime
 @property  double quarantineStartTime
 @property  unsigned int downloadState
 @property  unsigned long prevRunsCellRxBytes
 @property  unsigned long prevRunsCellTxBytes
 @property  unsigned long thisRunStartCellRxBytes
 @property  unsigned long thisRunStartCellTxBytes
 @property  unsigned long prevRunsWiFiRxBytes
 @property  unsigned long prevRunsWiFiTxBytes
 @property  unsigned long thisRunStartWiFiRxBytes
 @property  unsigned long thisRunStartWiFiTxBytes
 @property  unsigned long prevRunsRxBytes
 @property  unsigned long prevRunsTxBytes
 @property  unsigned long thisRunStartRxBytes
 @property  unsigned long thisRunStartTxBytes

  // instance methods
  -[CoreMediaDownload setDownloadState:]
  -[CoreMediaDownload startTime]
  -[CoreMediaDownload setStartTime:]
  -[CoreMediaDownload downloadState]
  -[CoreMediaDownload estimatedDuration]
  -[CoreMediaDownload setEstimatedDuration:]
  -[CoreMediaDownload coreMediaDownloadStateToString:]
  -[CoreMediaDownload prevRunsRxBytes]
  -[CoreMediaDownload prevRunsTxBytes]
  -[CoreMediaDownload thisRunStartRxBytes]
  -[CoreMediaDownload thisRunStartTxBytes]
  -[CoreMediaDownload prevRunBusyTime]
  -[CoreMediaDownload setPrevRunBusyTime:]
  -[CoreMediaDownload prevRunIdleTime]
  -[CoreMediaDownload setPrevRunIdleTime:]
  -[CoreMediaDownload thisRunStartTime]
  -[CoreMediaDownload setThisRunStartTime:]
  -[CoreMediaDownload quarantineStartTime]
  -[CoreMediaDownload setQuarantineStartTime:]
  -[CoreMediaDownload prevRunsCellRxBytes]
  -[CoreMediaDownload setPrevRunsCellRxBytes:]
  -[CoreMediaDownload prevRunsCellTxBytes]
  -[CoreMediaDownload setPrevRunsCellTxBytes:]
  -[CoreMediaDownload thisRunStartCellRxBytes]
  -[CoreMediaDownload setThisRunStartCellRxBytes:]
  -[CoreMediaDownload thisRunStartCellTxBytes]
  -[CoreMediaDownload setThisRunStartCellTxBytes:]
  -[CoreMediaDownload prevRunsWiFiRxBytes]
  -[CoreMediaDownload setPrevRunsWiFiRxBytes:]
  -[CoreMediaDownload prevRunsWiFiTxBytes]
  -[CoreMediaDownload setPrevRunsWiFiTxBytes:]
  -[CoreMediaDownload thisRunStartWiFiRxBytes]
  -[CoreMediaDownload setThisRunStartWiFiRxBytes:]
  -[CoreMediaDownload thisRunStartWiFiTxBytes]
  -[CoreMediaDownload setThisRunStartWiFiTxBytes:]


FlowOriginLedger : NSObject
 @property  NSMutableDictionary *delegates
 @property  NSMutableDictionary *currentFlows
 @property  NSMutableDictionary *currentAssetDownloads
 @property  NSMutableArray *possibleAVFlows
 @property  NSString *name
 @property  unsigned long totalObservedCellRxBytes
 @property  unsigned long totalObservedCellTxBytes
 @property  unsigned long totalObservedWiFiRxBytes
 @property  unsigned long totalObservedWiFiTxBytes
 @property  unsigned long totalWithDelegatesCellRxBytes
 @property  unsigned long totalWithDelegatesCellTxBytes
 @property  unsigned long totalWithDelegatesWiFiRxBytes
 @property  unsigned long totalWithDelegatesWiFiTxBytes
 @property  unsigned long closedFlows
 @property  unsigned long prevPollCellRxBytes
 @property  unsigned long prevPollCellTxBytes
 @property  unsigned long prevPollWiFiRxBytes
 @property  unsigned long prevPollWiFiTxBytes
 @property  unsigned long pollIntervalCellRxBytes
 @property  unsigned long pollIntervalCellTxBytes
 @property  unsigned long pollIntervalWiFiRxBytes
 @property  unsigned long pollIntervalWiFiTxBytes
 @property  unsigned long prevPrevPollCellRxBytes
 @property  unsigned long prevPrevPollCellTxBytes
 @property  unsigned long prevPrevPollWiFiRxBytes
 @property  unsigned long prevPrevPollWiFiTxBytes
 @property  unsigned long prevPollIntervalCellRxBytes
 @property  unsigned long prevPollIntervalCellTxBytes
 @property  unsigned long prevPollIntervalWiFiRxBytes
 @property  unsigned long prevPollIntervalWiFiTxBytes
 @property  unsigned long sampleStartCellRxBytes
 @property  unsigned long sampleStartCellTxBytes
 @property  unsigned long sampleStartWiFiRxBytes
 @property  unsigned long sampleStartWiFiTxBytes
 @property  unsigned long sampleCellRxBytes
 @property  unsigned long sampleCellTxBytes
 @property  unsigned long sampleWiFiRxBytes
 @property  unsigned long sampleWiFiTxBytes
 @property  double sampleCellRxThroughput
 @property  double sampleCellTxThroughput
 @property  double sampleWiFiRxThroughput
 @property  double sampleWiFiTxThroughput
 @property  BOOL mostRecentFlowSeenAsForeground
 @property  BOOL sampleStartedInForegroundState
 @property  BOOL sampledAsHighTransferSize
 @property  BOOL sampledAsHighInterfaceUse
 @property  BOOL sampledAsCoreMediaAssetDownload
 @property  BOOL sampledCoreMediaAssetDownloadInactive
 @property  unsigned long sampleAdditionalFlags
 @property  double sampleStartTime
 @property  double sampleTotalBusyTime
 @property  double lastUsed

  // instance methods
  -[FlowOriginLedger delegates]
  -[FlowOriginLedger briefDescription]
  -[FlowOriginLedger setDelegates:]
  -[FlowOriginLedger setLastUsed:]
  -[FlowOriginLedger lastUsed]
  -[FlowOriginLedger .cxx_destruct]
  -[FlowOriginLedger setName:]
  -[FlowOriginLedger name]
  -[FlowOriginLedger init]
  -[FlowOriginLedger closedFlows]
  -[FlowOriginLedger currentFlows]
  -[FlowOriginLedger totalObservedCellRxBytes]
  -[FlowOriginLedger setTotalObservedCellRxBytes:]
  -[FlowOriginLedger totalObservedCellTxBytes]
  -[FlowOriginLedger setTotalObservedCellTxBytes:]
  -[FlowOriginLedger totalObservedWiFiRxBytes]
  -[FlowOriginLedger setTotalObservedWiFiRxBytes:]
  -[FlowOriginLedger totalObservedWiFiTxBytes]
  -[FlowOriginLedger setTotalObservedWiFiTxBytes:]
  -[FlowOriginLedger pollIntervalCellRxBytes]
  -[FlowOriginLedger pollIntervalCellTxBytes]
  -[FlowOriginLedger pollIntervalWiFiRxBytes]
  -[FlowOriginLedger pollIntervalWiFiTxBytes]
  -[FlowOriginLedger prevPollIntervalCellRxBytes]
  -[FlowOriginLedger prevPollIntervalCellTxBytes]
  -[FlowOriginLedger prevPollIntervalWiFiRxBytes]
  -[FlowOriginLedger prevPollIntervalWiFiTxBytes]
  -[FlowOriginLedger sampleCellRxBytes]
  -[FlowOriginLedger sampleCellTxBytes]
  -[FlowOriginLedger sampleWiFiRxBytes]
  -[FlowOriginLedger sampleWiFiTxBytes]
  -[FlowOriginLedger sampleCellRxThroughput]
  -[FlowOriginLedger sampleCellTxThroughput]
  -[FlowOriginLedger sampleWiFiRxThroughput]
  -[FlowOriginLedger sampleWiFiTxThroughput]
  -[FlowOriginLedger startSamplingPeriod]
  -[FlowOriginLedger setCurrentFlows:]
  -[FlowOriginLedger currentAssetDownloads]
  -[FlowOriginLedger setCurrentAssetDownloads:]
  -[FlowOriginLedger possibleAVFlows]
  -[FlowOriginLedger setPossibleAVFlows:]
  -[FlowOriginLedger totalWithDelegatesCellRxBytes]
  -[FlowOriginLedger setTotalWithDelegatesCellRxBytes:]
  -[FlowOriginLedger totalWithDelegatesCellTxBytes]
  -[FlowOriginLedger setTotalWithDelegatesCellTxBytes:]
  -[FlowOriginLedger totalWithDelegatesWiFiRxBytes]
  -[FlowOriginLedger setTotalWithDelegatesWiFiRxBytes:]
  -[FlowOriginLedger totalWithDelegatesWiFiTxBytes]
  -[FlowOriginLedger setTotalWithDelegatesWiFiTxBytes:]
  -[FlowOriginLedger setClosedFlows:]
  -[FlowOriginLedger prevPollCellRxBytes]
  -[FlowOriginLedger setPrevPollCellRxBytes:]
  -[FlowOriginLedger prevPollCellTxBytes]
  -[FlowOriginLedger setPrevPollCellTxBytes:]
  -[FlowOriginLedger prevPollWiFiRxBytes]
  -[FlowOriginLedger setPrevPollWiFiRxBytes:]
  -[FlowOriginLedger prevPollWiFiTxBytes]
  -[FlowOriginLedger setPrevPollWiFiTxBytes:]
  -[FlowOriginLedger prevPrevPollCellRxBytes]
  -[FlowOriginLedger setPrevPrevPollCellRxBytes:]
  -[FlowOriginLedger prevPrevPollCellTxBytes]
  -[FlowOriginLedger setPrevPrevPollCellTxBytes:]
  -[FlowOriginLedger prevPrevPollWiFiRxBytes]
  -[FlowOriginLedger setPrevPrevPollWiFiRxBytes:]
  -[FlowOriginLedger prevPrevPollWiFiTxBytes]
  -[FlowOriginLedger setPrevPrevPollWiFiTxBytes:]
  -[FlowOriginLedger sampleStartCellRxBytes]
  -[FlowOriginLedger setSampleStartCellRxBytes:]
  -[FlowOriginLedger sampleStartCellTxBytes]
  -[FlowOriginLedger setSampleStartCellTxBytes:]
  -[FlowOriginLedger sampleStartWiFiRxBytes]
  -[FlowOriginLedger setSampleStartWiFiRxBytes:]
  -[FlowOriginLedger sampleStartWiFiTxBytes]
  -[FlowOriginLedger setSampleStartWiFiTxBytes:]
  -[FlowOriginLedger mostRecentFlowSeenAsForeground]
  -[FlowOriginLedger setMostRecentFlowSeenAsForeground:]
  -[FlowOriginLedger sampleStartedInForegroundState]
  -[FlowOriginLedger setSampleStartedInForegroundState:]
  -[FlowOriginLedger sampledAsHighTransferSize]
  -[FlowOriginLedger setSampledAsHighTransferSize:]
  -[FlowOriginLedger sampledAsHighInterfaceUse]
  -[FlowOriginLedger setSampledAsHighInterfaceUse:]
  -[FlowOriginLedger sampledAsCoreMediaAssetDownload]
  -[FlowOriginLedger setSampledAsCoreMediaAssetDownload:]
  -[FlowOriginLedger sampledCoreMediaAssetDownloadInactive]
  -[FlowOriginLedger setSampledCoreMediaAssetDownloadInactive:]
  -[FlowOriginLedger sampleAdditionalFlags]
  -[FlowOriginLedger setSampleAdditionalFlags:]
  -[FlowOriginLedger sampleStartTime]
  -[FlowOriginLedger setSampleStartTime:]
  -[FlowOriginLedger sampleTotalBusyTime]
  -[FlowOriginLedger setSampleTotalBusyTime:]


AppHistoryScreener : NSObject
  // class methods
  +[AppHistoryScreener _sharedInstance]
  +[AppHistoryScreener fetchEpisodeFor:inbound:]

  // instance methods
  -[AppHistoryScreener .cxx_destruct]
  -[AppHistoryScreener init]
  -[AppHistoryScreener _makeLabelWith:inbound:fullLabel:exportLabel:]
  -[AppHistoryScreener _fetchEpisodeFor:inbound:]


AppHistoryScreenerEpisode : NSObject
 @property  BOOL screenIn

  // class methods
  +[AppHistoryScreenerEpisode _setCustomBackingStore:]
  +[AppHistoryScreenerEpisode _setCustomLearningResetAt:]
  +[AppHistoryScreenerEpisode _energyTaxBracketFor:]

  // instance methods
  -[AppHistoryScreenerEpisode dealloc]
  -[AppHistoryScreenerEpisode .cxx_destruct]
  -[AppHistoryScreenerEpisode initWithLabel:exportLabel:]
  -[AppHistoryScreenerEpisode _fetchWithLabel:exportLabel:]
  -[AppHistoryScreenerEpisode canAcceptEpisodeWithRedactionAndTax]
  -[AppHistoryScreenerEpisode computeReward]
  -[AppHistoryScreenerEpisode accrueRewardFromFlow:]
  -[AppHistoryScreenerEpisode screenIn]
  -[AppHistoryScreenerEpisode setScreenIn:]
  -[AppHistoryScreenerEpisode _getPvar]
  -[AppHistoryScreenerEpisode accrueReward:]


AppHistoryScreenerEpisodeFixed : AppHistoryScreenerEpisode
  // instance methods
  -[AppHistoryScreenerEpisodeFixed init]
  -[AppHistoryScreenerEpisodeFixed accrueRewardFromFlow:]
  -[AppHistoryScreenerEpisodeFixed initWithLabel:toValue:]


AWDSymptomsNetworkDiagnosticFrameworkSessionState : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasInState
 @property  int inState
 @property  BOOL hasStateHeldForSecs
 @property  unsigned long stateHeldForSecs
 @property  BOOL hasSymptomName
 @property  NSString *symptomName

  // instance methods
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState hasStateHeldForSecs]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState StringAsInState:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState setTimestamp:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState copyTo:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState setInState:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState setHasStateHeldForSecs:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState .cxx_destruct]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState symptomName]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState setStateHeldForSecs:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState mergeFrom:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState setSymptomName:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState setHasTimestamp:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState setHasInState:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState dictionaryRepresentation]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState hasTimestamp]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState copyWithZone:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState hasInState]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState hasSymptomName]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState timestamp]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState readFrom:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState inState]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState stateHeldForSecs]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState writeTo:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState isEqual:]
  -[AWDSymptomsNetworkDiagnosticFrameworkSessionState inStateAsString:]


ICMPPingProbe : TestProbe
 @property  NSMutableArray *pings
 @property  unsigned long successCount
 @property  unsigned long failedCount
 @property  float percentComplete
 @property  unsigned long pingCount
 @property  double interPingInterval
 @property  unsigned long burstCount
 @property  double interBurstInterval
 @property  unsigned long currentBurst
 @property  BOOL hostAddressIsIPv6
 @property  unsigned int interfaceIndex
 @property  NSObject<OS_dispatch_semaphore> *pingRunLoopReady
 @property  ^{__CFRunLoop=} pingRunLoop
 @property  ^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]} pingThread
 @property  ^{__CFRunLoopSource=} rls
 @property  <ICMPPingProbeDelegate> *delegate
 @property  NSString *ipAddress
 @property  NSString *hostName
 @property  unsigned long payloadSize

  // class methods
  +[ICMPPingProbe initialize]
  +[ICMPPingProbe loadStringUtils]
  +[ICMPPingProbe icmpIPv4OffsetInPacket:]
  +[ICMPPingProbe stringAddrToSockaddr:to:]

  // instance methods
  -[ICMPPingProbe readData]
  -[ICMPPingProbe percentComplete]
  -[ICMPPingProbe setInterfaceIndex:]
  -[ICMPPingProbe setDelegate:]
  -[ICMPPingProbe sendPing]
  -[ICMPPingProbe delegate]
  -[ICMPPingProbe setPingCount:]
  -[ICMPPingProbe setPings:]
  -[ICMPPingProbe hostName]
  -[ICMPPingProbe dealloc]
  -[ICMPPingProbe pingCount]
  -[ICMPPingProbe .cxx_destruct]
  -[ICMPPingProbe sendPingWithData:]
  -[ICMPPingProbe stopTest]
  -[ICMPPingProbe payloadSize]
  -[ICMPPingProbe initWithQueue:]
  -[ICMPPingProbe didFailWithError:]
  -[ICMPPingProbe setPercentComplete:]
  -[ICMPPingProbe interfaceIndex]
  -[ICMPPingProbe pings]
  -[ICMPPingProbe setPayloadSize:]
  -[ICMPPingProbe successCount]
  -[ICMPPingProbe ipAddress]
  -[ICMPPingProbe setHostName:]
  -[ICMPPingProbe setIpAddress:]
  -[ICMPPingProbe pingDidFailToSendToAddress:packet:sequence:error:]
  -[ICMPPingProbe startICMPPingTestTo:hostName:interface:pingCount:interPingInterval:burstCount:interBurstInterval:timeout:stopTestOnFirstSuccess:]
  -[ICMPPingProbe _shortErrorFromError:]
  -[ICMPPingProbe pingDidSendToAddress:packet:sequence:]
  -[ICMPPingProbe pingDidReceivePingResponseFromAddress:packet:sequence:]
  -[ICMPPingProbe pingDidReceiveUnexpectedPingResponseFromAddress:packet:sequence:]
  -[ICMPPingProbe stopDataTransfer]
  -[ICMPPingProbe isValidIPv6PingResponsePacket:isForMe:sequence:isBadPacket:]
  -[ICMPPingProbe isValidIPv4PingResponsePacket:isForMe:sequence:isBadPacket:]
  -[ICMPPingProbe startThePinging]
  -[ICMPPingProbe startRunLoop]
  -[ICMPPingProbe stopRunLoop]
  -[ICMPPingProbe setSuccessCount:]
  -[ICMPPingProbe failedCount]
  -[ICMPPingProbe setFailedCount:]
  -[ICMPPingProbe interPingInterval]
  -[ICMPPingProbe setInterPingInterval:]
  -[ICMPPingProbe burstCount]
  -[ICMPPingProbe setBurstCount:]
  -[ICMPPingProbe interBurstInterval]
  -[ICMPPingProbe setInterBurstInterval:]
  -[ICMPPingProbe currentBurst]
  -[ICMPPingProbe setCurrentBurst:]
  -[ICMPPingProbe hostAddressIsIPv6]
  -[ICMPPingProbe setHostAddressIsIPv6:]
  -[ICMPPingProbe pingRunLoopReady]
  -[ICMPPingProbe setPingRunLoopReady:]
  -[ICMPPingProbe pingRunLoop]
  -[ICMPPingProbe setPingRunLoop:]
  -[ICMPPingProbe pingThread]
  -[ICMPPingProbe setPingThread:]
  -[ICMPPingProbe rls]
  -[ICMPPingProbe setRls:]


SimpleSymptomEvaluator : NSObject <ConfigurableObjectProtocol>
 @property  NSString *symptomName
 @property  NSString *symptomKey
 @property  unsigned int symptomSaveFlags
 @property  unsigned int symptomSaveAdditionalId
 @property  unsigned int symptomMaxRetainTime
 @property  NSMutableArray *symptomRules
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SimpleSymptomEvaluator _defaultEvaluator]
  +[SimpleSymptomEvaluator initialize]
  +[SimpleSymptomEvaluator configureClass:]
  +[SimpleSymptomEvaluator postIncomingEvent:]
  +[SimpleSymptomEvaluator objectWithName:]

  // instance methods
  -[SimpleSymptomEvaluator read:returnedValues:]
  -[SimpleSymptomEvaluator evaluateIncomingEvent:]
  -[SimpleSymptomEvaluator configureInstance:]
  -[SimpleSymptomEvaluator .cxx_destruct]
  -[SimpleSymptomEvaluator symptomName]
  -[SimpleSymptomEvaluator setSymptomKey:]
  -[SimpleSymptomEvaluator setSymptomName:]
  -[SimpleSymptomEvaluator setSymptomRules:]
  -[SimpleSymptomEvaluator setSymptomMaxRetainTime:]
  -[SimpleSymptomEvaluator symptomSaveAdditionalId]
  -[SimpleSymptomEvaluator symptomSaveFlags]
  -[SimpleSymptomEvaluator symptomMaxRetainTime]
  -[SimpleSymptomEvaluator initWithName:]
  -[SimpleSymptomEvaluator setSymptomSaveFlags:]
  -[SimpleSymptomEvaluator setSymptomSaveAdditionalId:]
  -[SimpleSymptomEvaluator symptomKey]
  -[SimpleSymptomEvaluator symptomRules]


SimpleSyndromeHandler : NSObject <ConfigurableObjectProtocol>
 @property  NSString *syndromeName
 @property  r* syndromeUTF8Name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SimpleSyndromeHandler configureClass:]
  +[SimpleSyndromeHandler objectWithName:]
  +[SimpleSyndromeHandler setDefaultNextStage:]

  // instance methods
  -[SimpleSyndromeHandler read:returnedValues:]
  -[SimpleSyndromeHandler syndromeUTF8Name]
  -[SimpleSyndromeHandler configureInstance:]
  -[SimpleSyndromeHandler .cxx_destruct]
  -[SimpleSyndromeHandler _reset:]
  -[SimpleSyndromeHandler setSyndromeUTF8Name:]
  -[SimpleSyndromeHandler syndromeName]
  -[SimpleSyndromeHandler _setName:]
  -[SimpleSyndromeHandler didReceiveSyndrome:]


SymptomToAnalyticsHandler : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SymptomToAnalyticsHandler sharedInstance]
  +[SymptomToAnalyticsHandler configureClass:]

  // instance methods
  -[SymptomToAnalyticsHandler noteSymptom:]
  -[SymptomToAnalyticsHandler configureInstance:]


ProbeManager : NSObject <BonjourProbeDelegate, ICMPPingProbeDelegate, AWDLPeerProbeDelegate>
 @property  id probeDetails
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <ProbeManagerDelegate> *delegate
 @property  NSMutableDictionary *probes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ProbeManager startICMPPingForDiagSession:hostName:ipAddress:interface:pingCount:interPingInterval:burstCount:interBurstInterval:timeout:]
  -[ProbeManager cancelAllProbes]
  -[ProbeManager setDelegate:]
  -[ProbeManager setProbeDetails:]
  -[ProbeManager startTCPDumpForDiagSession:duration:]
  -[ProbeManager startAirDropBonjourScan:duration:]
  -[ProbeManager delegate]
  -[ProbeManager dealloc]
  -[ProbeManager startAWDLPeerPollingWithDiagSession:services:count:interval:]
  -[ProbeManager .cxx_destruct]
  -[ProbeManager awdlPeerPollProbe:serviceAdded:]
  -[ProbeManager bonjourServiceAdded:isUpdatedService:]
  -[ProbeManager awdlPeerPollProbe:serviceRemoved:]
  -[ProbeManager setQueue:]
  -[ProbeManager awdlPeerPollProbeIsComplete:]
  -[ProbeManager icmpPingProbe:echoResponseReceived:success:]
  -[ProbeManager awdlPeerPollProbe:serviceUpdated:]
  -[ProbeManager initWithQueue:]
  -[ProbeManager startTestTCPConnectionForDiagSession:url:host:port:interfaceName:timeout:]
  -[ProbeManager bonjourServiceRemoved:]
  -[ProbeManager queue]
  -[ProbeManager startGetNetworkInfo:]
  -[ProbeManager bonjourProbeComplete:status:]
  -[ProbeManager icmpPingProbe:completedIterations:successfulCount:withError:]
  -[ProbeManager probeDetails]
  -[ProbeManager startTestHTTPForDiagSession:url:timeout:interfaceName:userAgent:]
  -[ProbeManager probes]
  -[ProbeManager probeCallbackFunctions]
  -[ProbeManager stopTCPDump]
  -[ProbeManager icmpPingProbe:echoRequestSent:success:]


StateWatcher : NSObject
 @property  BOOL enabled
 @property  <StateWatcherDelegate> *delegate

  // instance methods
  -[StateWatcher enable]
  -[StateWatcher disable]
  -[StateWatcher setDelegate:]
  -[StateWatcher delegate]
  -[StateWatcher .cxx_destruct]
  -[StateWatcher setEnabled:]
  -[StateWatcher observeValueForKeyPath:ofObject:change:context:]
  -[StateWatcher enabled]
  -[StateWatcher currentStateSummary:]
  -[StateWatcher isValidSourceList:]
  -[StateWatcher isValidChangeList:]
  -[StateWatcher isValidWatchList:]
  -[StateWatcher deriveKeyPathListFromWatchList:sourceList:]
  -[StateWatcher configureWatchList:changeList:sourceList:]


AWDSymptomsNetworkAnalyticsDNSRestored : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNetworkType
 @property  int networkType
 @property  BOOL hasDnsServers
 @property  unsigned int dnsServers

  // instance methods
  -[AWDSymptomsNetworkAnalyticsDNSRestored setNetworkType:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored setDnsServers:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored networkType]
  -[AWDSymptomsNetworkAnalyticsDNSRestored setTimestamp:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored copyTo:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored dnsServers]
  -[AWDSymptomsNetworkAnalyticsDNSRestored mergeFrom:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored setHasTimestamp:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored dictionaryRepresentation]
  -[AWDSymptomsNetworkAnalyticsDNSRestored hasTimestamp]
  -[AWDSymptomsNetworkAnalyticsDNSRestored copyWithZone:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored timestamp]
  -[AWDSymptomsNetworkAnalyticsDNSRestored readFrom:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored writeTo:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored isEqual:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored setHasNetworkType:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored hasNetworkType]
  -[AWDSymptomsNetworkAnalyticsDNSRestored networkTypeAsString:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored StringAsNetworkType:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored setHasDnsServers:]
  -[AWDSymptomsNetworkAnalyticsDNSRestored hasDnsServers]


FlowBasedIconAdviser : NSObject
 @property  unsigned int internalState
 @property  int nePolicyCount
 @property  BOOL active
 @property  BOOL flowBasedIconRecommendationValid
 @property  BOOL flowBasedIconRecommendation

  // instance methods
  -[FlowBasedIconAdviser restoreDefaults]
  -[FlowBasedIconAdviser setInternalState:]
  -[FlowBasedIconAdviser internalState]
  -[FlowBasedIconAdviser didSampleFlows]
  -[FlowBasedIconAdviser setConfiguration:]
  -[FlowBasedIconAdviser active]
  -[FlowBasedIconAdviser flowBasedIconRecommendation]
  -[FlowBasedIconAdviser .cxx_destruct]
  -[FlowBasedIconAdviser setNePolicyCount:]
  -[FlowBasedIconAdviser _initializeOutrankFlowMonitor]
  -[FlowBasedIconAdviser setActive:]
  -[FlowBasedIconAdviser initWithQueue:]
  -[FlowBasedIconAdviser flowBasedIconRecommendationValid]
  -[FlowBasedIconAdviser getState:]
  -[FlowBasedIconAdviser nePolicyCount]


UsageTallySample : NSObject
 @property  double startTimeIntervalSinceReferenceDate
 @property  double elapsedTime
 @property  unsigned long byteCount

  // instance methods
  -[UsageTallySample elapsedTime]
  -[UsageTallySample setElapsedTime:]
  -[UsageTallySample byteCount]
  -[UsageTallySample setByteCount:]
  -[UsageTallySample startTimeIntervalSinceReferenceDate]
  -[UsageTallySample setStartTimeIntervalSinceReferenceDate:]


TrafficMonitor : NSObject <FlowScheduledRefreshDelegate>
 @property  BOOL trafficThreshold
 @property  double samplePeriodThroughput
 @property  double currentIdleDuration
 @property  double currentIdleStartTime
 @property  @? fetchBlock
 @property  BOOL activePolling
 @property  NWUsageTargetSelector *targetForPolling
 @property  NSString *name
 @property  double minSamplePeriod
 @property  double minSamplePeriodThroughputThreshold
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TrafficMonitor automaticallyNotifiesObserversForKey:]

  // instance methods
  -[TrafficMonitor _timerMaintenance]
  -[TrafficMonitor setTargetForPolling:]
  -[TrafficMonitor setActivePolling:]
  -[TrafficMonitor userInitiatedFlowThreshold]
  -[TrafficMonitor fetchBlock]
  -[TrafficMonitor currentIdleDuration]
  -[TrafficMonitor didPollFlowsCallbackOrder]
  -[TrafficMonitor .cxx_destruct]
  -[TrafficMonitor getState]
  -[TrafficMonitor minSamplePeriodThroughputThreshold]
  -[TrafficMonitor currentIdleStartTime]
  -[TrafficMonitor trafficThreshold]
  -[TrafficMonitor setName:]
  -[TrafficMonitor initWithQueue:]
  -[TrafficMonitor setFetchBlock:]
  -[TrafficMonitor setMinSamplePeriod:]
  -[TrafficMonitor activePolling]
  -[TrafficMonitor didPollFlowsAt:periodic:]
  -[TrafficMonitor name]
  -[TrafficMonitor samplePeriodThroughput]
  -[TrafficMonitor minSamplePeriod]
  -[TrafficMonitor targetForPolling]
  -[TrafficMonitor setUserInitiatedFlowThreshold:]
  -[TrafficMonitor setMinSamplePeriodThroughputThreshold:]
  -[TrafficMonitor _refreshValues]


CapturedSystemState : NSObject
 @property  unsigned int cosmState
 @property  unsigned long reasonFlags
 @property  unsigned long wrmStatus
 @property  double timestamp
 @property  BOOL cellPrivateNetworkActive
 @property  int cellularRAT
 @property  int cellularRSRP
 @property  int cellularNRFrequencyBand
 @property  long long cellularBandwidth
 @property  BOOL cellularExpensive
 @property  BOOL cellularWRMExpensive
 @property  BOOL cellularPrivateNetwork
 @property  double largeTransferHysteresisTime
 @property  long long largeTransferHysteresisWins
 @property  long long openedSISFlows
 @property  long long openedAppleStackFlows
 @property  long long openedNonAppleStackFlows
 @property  int outrankPercentFGExploited
 @property  int outrankPercentFGNonExploited
 @property  int outrankPercentIconShown
 @property  int outrankNumIconOnTransitions
 @property  int outrankNumFGAppsExploiting
 @property  int outrankNumFGAppsNonExploiting
 @property  NSString *wifiLargeTransferInitiatingName
 @property  unsigned long wifiLargeTransferInitiatingCount
 @property  int wifiRAT
 @property  int wifiRSSI
 @property  BOOL wifiSecure

  // instance methods
  -[CapturedSystemState setTimestamp:]
  -[CapturedSystemState .cxx_destruct]
  -[CapturedSystemState timestamp]
  -[CapturedSystemState setCellularBandwidth:]
  -[CapturedSystemState cellularBandwidth]
  -[CapturedSystemState wifiRSSI]
  -[CapturedSystemState setWifiRSSI:]
  -[CapturedSystemState cellPrivateNetworkActive]
  -[CapturedSystemState openedAppleStackFlows]
  -[CapturedSystemState openedNonAppleStackFlows]
  -[CapturedSystemState openedSISFlows]
  -[CapturedSystemState cellularExpensive]
  -[CapturedSystemState cellularWRMExpensive]
  -[CapturedSystemState wifiSecure]
  -[CapturedSystemState cosmState]
  -[CapturedSystemState setCosmState:]
  -[CapturedSystemState reasonFlags]
  -[CapturedSystemState setReasonFlags:]
  -[CapturedSystemState wrmStatus]
  -[CapturedSystemState setWrmStatus:]
  -[CapturedSystemState cellularRAT]
  -[CapturedSystemState setCellularRAT:]
  -[CapturedSystemState cellularRSRP]
  -[CapturedSystemState setCellularRSRP:]
  -[CapturedSystemState cellularNRFrequencyBand]
  -[CapturedSystemState setCellularNRFrequencyBand:]
  -[CapturedSystemState cellularPrivateNetwork]
  -[CapturedSystemState largeTransferHysteresisTime]
  -[CapturedSystemState setLargeTransferHysteresisTime:]
  -[CapturedSystemState largeTransferHysteresisWins]
  -[CapturedSystemState setLargeTransferHysteresisWins:]
  -[CapturedSystemState setOpenedSISFlows:]
  -[CapturedSystemState setOpenedAppleStackFlows:]
  -[CapturedSystemState setOpenedNonAppleStackFlows:]
  -[CapturedSystemState outrankPercentFGExploited]
  -[CapturedSystemState setOutrankPercentFGExploited:]
  -[CapturedSystemState outrankPercentFGNonExploited]
  -[CapturedSystemState setOutrankPercentFGNonExploited:]
  -[CapturedSystemState outrankPercentIconShown]
  -[CapturedSystemState setOutrankPercentIconShown:]
  -[CapturedSystemState outrankNumIconOnTransitions]
  -[CapturedSystemState setOutrankNumIconOnTransitions:]
  -[CapturedSystemState outrankNumFGAppsExploiting]
  -[CapturedSystemState setOutrankNumFGAppsExploiting:]
  -[CapturedSystemState outrankNumFGAppsNonExploiting]
  -[CapturedSystemState setOutrankNumFGAppsNonExploiting:]
  -[CapturedSystemState wifiLargeTransferInitiatingName]
  -[CapturedSystemState setWifiLargeTransferInitiatingName:]
  -[CapturedSystemState wifiLargeTransferInitiatingCount]
  -[CapturedSystemState setWifiLargeTransferInitiatingCount:]
  -[CapturedSystemState wifiRAT]
  -[CapturedSystemState setWifiRAT:]


CellOutrankMetrics : NSObject
  // instance methods
  -[CellOutrankMetrics restoreDefaults]
  -[CellOutrankMetrics didSampleFlows]
  -[CellOutrankMetrics setConfiguration:]
  -[CellOutrankMetrics .cxx_destruct]
  -[CellOutrankMetrics initWithQueue:]
  -[CellOutrankMetrics getState:]
  -[CellOutrankMetrics reportABCCase:]
  -[CellOutrankMetrics secondsToMetricsAccuracy:]
  -[CellOutrankMetrics _outrankMetricForNew:old:withDelayedItems:]
  -[CellOutrankMetrics _sendOutrankMetricNew:old:withDelayedItems:]
  -[CellOutrankMetrics _updateStateDeltas:duration:]
  -[CellOutrankMetrics updateOutrankExitMetrics:]
  -[CellOutrankMetrics _captureOutrankEntryAdditionalState:flags:]
  -[CellOutrankMetrics noteSTMState:flags:wrmStatus:]
  -[CellOutrankMetrics _logMetricDictionaryForNew:old:withDelayedItems:why:]


NWUUIDMapper : NSObject
 @property  double lastAccessDate
 @property  NSUUID *externalUUID
 @property  unsigned long usageFlags

  // instance methods
  -[NWUUIDMapper .cxx_destruct]
  -[NWUUIDMapper usageFlags]
  -[NWUUIDMapper externalUUID]
  -[NWUUIDMapper setExternalUUID:]
  -[NWUUIDMapper setLastAccessDate:]
  -[NWUUIDMapper lastAccessDate]
  -[NWUUIDMapper setUsageFlags:]


NWActivityHandler : NSObject <SymptomsAWDObserverDelegate, ConfigurableObjectProtocol, SymptomAdditionalProtocol, ManagedEventInfoProtocol>
 @property  NSMutableDictionary *mappedMetrics
 @property  NWUUIDMapper *nullUUIDMapper
 @property  NSUUID *nullUUID
 @property  NSMutableArray *currentActivities
 @property  NSMutableArray *completeActivities
 @property  NSUUID *lastWiFiActivity
 @property  NSDictionary *lastCellularFragment
 @property  NWAccumulator *batteryAccumulator
 @property  NWAccumulator *batteryAccumulatorSnapshot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NWActivityHandler sharedInstance]
  +[NWActivityHandler sharedMetricsQueue]
  +[NWActivityHandler configureClass:]
  +[NWActivityHandler metricNameForAWDMetricID:]

  // instance methods
  -[NWActivityHandler noteSymptom:]
  -[NWActivityHandler powerStateChanged:]
  -[NWActivityHandler _triggerWiFiMetric]
  -[NWActivityHandler currentActivities]
  -[NWActivityHandler _handleL2Start:]
  -[NWActivityHandler batteryAccumulator]
  -[NWActivityHandler _convertQueueStats:forInterfaceType:]
  -[NWActivityHandler createValidJSONObject:atPath:]
  -[NWActivityHandler _pruneActivityLists]
  -[NWActivityHandler setUpBatteryAccumulator]
  -[NWActivityHandler setLastCellularFragment:]
  -[NWActivityHandler analyticsWorkspace]
  -[NWActivityHandler mapperForUUID:reason:]
  -[NWActivityHandler _sendMetric:ofType:forActivities:parentActivity:additionalItems:]
  -[NWActivityHandler processSymptom:]
  -[NWActivityHandler setBatteryAccumulator:]
  -[NWActivityHandler configureInstance:]
  -[NWActivityHandler _handleStartActivity:]
  -[NWActivityHandler dealloc]
  -[NWActivityHandler _handleCellularItem:]
  -[NWActivityHandler .cxx_destruct]
  -[NWActivityHandler streamAWDMetric:withIdentifier:additionalDictionaryItems:]
  -[NWActivityHandler traverseObject:atPath:]
  -[NWActivityHandler lastWiFiActivity]
  -[NWActivityHandler _updateL2MetricLoggingRequests]
  -[NWActivityHandler _sendCAEvent:forReport:]
  -[NWActivityHandler setBatteryAccumulatorSnapshot:]
  -[NWActivityHandler _createNWL2Report]
  -[NWActivityHandler _getBundleNameFromPid:]
  -[NWActivityHandler observeValueForKeyPath:ofObject:change:context:]
  -[NWActivityHandler mappedMetrics]
  -[NWActivityHandler _handleWiFiItem:]
  -[NWActivityHandler _createDeviceReportForActivityType:andDomain:]
  -[NWActivityHandler handleEvent:]
  -[NWActivityHandler lastCellularFragment]
  -[NWActivityHandler generateInfoForId:context:uuid:completionBlock:]
  -[NWActivityHandler _deliverCellularFragment:]
  -[NWActivityHandler serialNumberForInternalBuilds]
  -[NWActivityHandler _handleEpilogue:]
  -[NWActivityHandler _triggerCellMetric]
  -[NWActivityHandler configuredForMetricStreaming]
  -[NWActivityHandler batteryAccumulatorSnapshot]
  -[NWActivityHandler _startL2Streaming]
  -[NWActivityHandler _dumpState:]
  -[NWActivityHandler setLastWiFiActivity:]
  -[NWActivityHandler _stopL2Streaming]
  -[NWActivityHandler _handleCFNetworkItem:]
  -[NWActivityHandler _saveMetricWithUUIDS:parentUUID:withData:ofType:]
  -[NWActivityHandler _pruneOldMappings]
  -[NWActivityHandler _handleL2Stop:]
  -[NWActivityHandler _handleNWConnectionStatistics:effectivePid:]
  -[NWActivityHandler nullUUID]
  -[NWActivityHandler nullUUIDMapper]
  -[NWActivityHandler completeActivities]
  -[NWActivityHandler _convertPLMNToDecimal:mcc:mnc:]
  -[NWActivityHandler _collectCellularFragment]
  -[NWActivityHandler init]
  -[NWActivityHandler _handleClientMetric:forBundleID:]
  -[NWActivityHandler _reportThermalPressureEvent:forActivityEpilogue:]


FlowOracle : NSObject <FlowScheduledRefreshDelegate>
 @property  FlowScrutinizer *flowScrutinizer
 @property  int activeLimitedThroughputAudioVideoTrafficForegroundFlowScore
 @property  int activeHighThroughputAudioVideoTrafficForegroundFlowScore
 @property  unsigned long numLowerThresholdTransferSizes
 @property  unsigned long numUpperThresholdTransferSizes
 @property  unsigned long numActiveTransferSizes
 @property  unsigned long numCloakedTransferSizes
 @property  double transferSizeRelatedRecentTotalThroughput
 @property  double transferSizeRelatedRecentTotalRxThroughput
 @property  double transferSizeRelatedRecentTotalTxThroughput
 @property  double transferSizeRelatedRecentCellThroughput
 @property  double transferSizeRelatedRecentCellRxThroughput
 @property  double transferSizeRelatedRecentCellTxThroughput
 @property  double transferSizeRelatedRecentWiFiThroughput
 @property  double transferSizeRelatedRecentWiFiRxThroughput
 @property  double transferSizeRelatedRecentWiFiTxThroughput
 @property  unsigned long numCandidateCoreMediaAssetDownloads
 @property  unsigned long numActiveCoreMediaAssetDownloads
 @property  double coreMediaAssetDownloadRelatedRecentThroughput
 @property  double backgroundCellTransferRecentThroughput
 @property  double backgroundWiFiTransferRecentThroughput
 @property  BOOL hasSustainedConservativeHighCellInterfaceThroughput
 @property  BOOL hasSustainedResponsiveHighCellInterfaceThroughput
 @property  BOOL hasSustainedHighCellInterfaceRxThroughput
 @property  BOOL hasSustainedHighCellInterfaceTxThroughput
 @property  double busiestCellOriginRecentThroughput
 @property  FlowOriginLedger *busiestCellOrigin
 @property  BOOL hasSustainedConservativeHighWiFiInterfaceThroughput
 @property  BOOL hasSustainedResponsiveHighWiFiInterfaceThroughput
 @property  BOOL hasSustainedHighWiFiInterfaceRxThroughput
 @property  BOOL hasSustainedHighWiFiInterfaceTxThroughput
 @property  double busiestWiFiOriginRecentThroughput
 @property  FlowOriginLedger *busiestWiFiOrigin
 @property  unsigned int cellNonCoreMediaAudioVideoOperation
 @property  double averageCellAudioVideoTrafficClassRxThroughput
 @property  double averageCellAudioVideoTrafficClassTxThroughput
 @property  NSSet *transferContributors
 @property  NSSet *highCellInterfaceUseContributors
 @property  NSSet *coreMediaAssetDownloadContributors
 @property  NSSet *allContributors
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FlowOracle sharedInstance]

  // instance methods
  -[FlowOracle restoreDefaults]
  -[FlowOracle setConfiguration:]
  -[FlowOracle didPollFlowsCallbackOrder]
  -[FlowOracle .cxx_destruct]
  -[FlowOracle _clearState]
  -[FlowOracle didPollFlowsAt:periodic:]
  -[FlowOracle getState:]
  -[FlowOracle init]
  -[FlowOracle flowScrutinizer]
  -[FlowOracle setFlowScrutinizer:]
  -[FlowOracle flowQualfiesForAVHeuristics:]
  -[FlowOracle applyFlowHeuristics:onBehalfOf:]
  -[FlowOracle evaluatePossibleAVFlows:currentFlowCount:activeFlowCount:]
  -[FlowOracle startSamplingPeriod:]
  -[FlowOracle logTransferContributors:]
  -[FlowOracle logCoreMediaAssetDownloadContributors:]
  -[FlowOracle logCellInterfaceUseContributors:]
  -[FlowOracle refreshTransferSizeState]
  -[FlowOracle refreshState:]
  -[FlowOracle markTransferSizeFlowsAsActive]
  -[FlowOracle markTransferSizeFlowsAsInactive]
  -[FlowOracle hasSustainedConservativeHighCellInterfaceThroughput]
  -[FlowOracle hasSustainedResponsiveHighCellInterfaceThroughput]
  -[FlowOracle hasSustainedHighCellInterfaceRxThroughput]
  -[FlowOracle hasSustainedHighCellInterfaceTxThroughput]
  -[FlowOracle hasSustainedConservativeHighWiFiInterfaceThroughput]
  -[FlowOracle hasSustainedResponsiveHighWiFiInterfaceThroughput]
  -[FlowOracle hasSustainedHighWiFiInterfaceRxThroughput]
  -[FlowOracle hasSustainedHighWiFiInterfaceTxThroughput]
  -[FlowOracle hadZeroCellInterfaceTrafficForLast:]
  -[FlowOracle hadZeroWiFiInterfaceTrafficForLast:]
  -[FlowOracle cellNonCoreMediaAudioVideoOperation]
  -[FlowOracle averageCellAudioVideoTrafficClassRxThroughput]
  -[FlowOracle averageCellAudioVideoTrafficClassTxThroughput]
  -[FlowOracle activeLimitedThroughputAudioVideoTrafficForegroundFlowScore]
  -[FlowOracle activeHighThroughputAudioVideoTrafficForegroundFlowScore]
  -[FlowOracle numCandidateCoreMediaAssetDownloads]
  -[FlowOracle numActiveCoreMediaAssetDownloads]
  -[FlowOracle markCoreMediaAssetDownloadsAsActive]
  -[FlowOracle markCoreMediaAssetDownloadsAsInactiveAt:]
  -[FlowOracle coreMediaAssetDownloadRelatedRecentThroughput]
  -[FlowOracle numUpperThresholdTransferSizes]
  -[FlowOracle numLowerThresholdTransferSizes]
  -[FlowOracle numActiveTransferSizes]
  -[FlowOracle numCloakedTransferSizes]
  -[FlowOracle transferContributors]
  -[FlowOracle coreMediaAssetDownloadContributors]
  -[FlowOracle allContributors]
  -[FlowOracle transferSizeRelatedRecentTotalThroughput]
  -[FlowOracle transferSizeRelatedRecentTotalRxThroughput]
  -[FlowOracle transferSizeRelatedRecentTotalTxThroughput]
  -[FlowOracle transferSizeRelatedRecentCellThroughput]
  -[FlowOracle transferSizeRelatedRecentCellRxThroughput]
  -[FlowOracle transferSizeRelatedRecentCellTxThroughput]
  -[FlowOracle transferSizeRelatedRecentWiFiThroughput]
  -[FlowOracle transferSizeRelatedRecentWiFiRxThroughput]
  -[FlowOracle transferSizeRelatedRecentWiFiTxThroughput]
  -[FlowOracle backgroundCellTransferRecentThroughput]
  -[FlowOracle backgroundWiFiTransferRecentThroughput]
  -[FlowOracle busiestCellOriginRecentThroughput]
  -[FlowOracle busiestCellOrigin]
  -[FlowOracle busiestWiFiOriginRecentThroughput]
  -[FlowOracle busiestWiFiOrigin]
  -[FlowOracle highCellInterfaceUseContributors]


ApparentTimeHandler : NSObject
 @property  <ApparentTimeHandlerDelegate> *delegate

  // class methods
  +[ApparentTimeHandler sharedInstance]

  // instance methods
  -[ApparentTimeHandler setDelegate:]
  -[ApparentTimeHandler delegate]
  -[ApparentTimeHandler .cxx_destruct]
  -[ApparentTimeHandler init]
  -[ApparentTimeHandler dispatchAfterDelay:queue:block:]
  -[ApparentTimeHandler timerCallbackWithReference:at:]


StopWatch : NSObject
  // class methods
  +[StopWatch nearlyEqualRun:toRun:fudgeFactor:]

  // instance methods
  -[StopWatch isRunning]
  -[StopWatch .cxx_destruct]
  -[StopWatch stop]
  -[StopWatch wasRunningBefore:]
  -[StopWatch currentRun]
  -[StopWatch start]
  -[StopWatch total]


CountDown : NSObject
 @property  NSDate *startTime

  // instance methods
  -[CountDown startTime]
  -[CountDown .cxx_destruct]
  -[CountDown stop]
  -[CountDown init]
  -[CountDown goOffNext:fromTime:forEpoch:timesTotal:onQueue:withIterationBlock:completionBlock:]


DateRounder : NSObject
  // class methods
  +[DateRounder roundToDayResolutionOnly:]


JournalTimeStamp : NSObject
  // class methods
  +[JournalTimeStamp getCurrentJournalNameUsingPrefix:]
  +[JournalTimeStamp getJournalNameUsingPrefix:forDate:]
  +[JournalTimeStamp getDateFromJournalName:]
  +[JournalTimeStamp shouldPurgeJournal:olderThan:]


TestProbe : NSObject
 @property  NSUUID *uuid
 @property  NSString *diagSessionUUID
 @property  unsigned int status
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL running
 @property  NSObject<OS_dispatch_source> *periodicTimer
 @property  NSMutableArray *probeOutputFilePaths

  // class methods
  +[TestProbe autoBugCapturePath:autoBugCaptureUID:autoBugCaptureGID:]
  +[TestProbe testProbeStatusString:]
  +[TestProbe loadCoreUtils]

  // instance methods
  -[TestProbe setRunning:]
  -[TestProbe status]
  -[TestProbe stopPeriodicTimer]
  -[TestProbe setStatus:]
  -[TestProbe isRunning]
  -[TestProbe uuid]
  -[TestProbe .cxx_destruct]
  -[TestProbe setUuid:]
  -[TestProbe stopTest]
  -[TestProbe startPeriodicTimer]
  -[TestProbe setQueue:]
  -[TestProbe initWithQueue:]
  -[TestProbe queue]
  -[TestProbe isEqual:]
  -[TestProbe probeOutputFilePaths]
  -[TestProbe cancelTest:]
  -[TestProbe periodicTimerFired:]
  -[TestProbe startPeriodicTimerAt:repeatInterval:]
  -[TestProbe removeProbeOutputFiles]
  -[TestProbe diagSessionUUID]
  -[TestProbe setDiagSessionUUID:]
  -[TestProbe periodicTimer]
  -[TestProbe setPeriodicTimer:]


wifiFlowObserver : NSObject <flowDispositionObserver>
 @property  BOOL enabled
 @property  BOOL foreground
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[wifiFlowObserver infoDir]
  -[wifiFlowObserver noteForegroundState:forApp:hasForegroundApps:]
  -[wifiFlowObserver setForeground:]
  -[wifiFlowObserver noteFlow:snapshot:present:trackedBy:]
  -[wifiFlowObserver foreground]
  -[wifiFlowObserver configurePolicies:]
  -[wifiFlowObserver .cxx_destruct]
  -[wifiFlowObserver setEnabled:]
  -[wifiFlowObserver enabled]
  -[wifiFlowObserver _noteNewUsage]
  -[wifiFlowObserver addClassification:context:]
  -[wifiFlowObserver removeClassification:context:]
  -[wifiFlowObserver init]


cellFlowObserver : NSObject <flowDispositionObserver>
 @property  BOOL enabled
 @property  BOOL foreground
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[cellFlowObserver infoDir]
  -[cellFlowObserver noteForegroundState:forApp:hasForegroundApps:]
  -[cellFlowObserver noteNewUsage:]
  -[cellFlowObserver setForeground:]
  -[cellFlowObserver beginTrafficClassFlowSnapshot]
  -[cellFlowObserver noteFlow:snapshot:present:trackedBy:]
  -[cellFlowObserver endTrafficClassFlowSnapshot:periodUsecs:reply:]
  -[cellFlowObserver foreground]
  -[cellFlowObserver configurePolicies:]
  -[cellFlowObserver .cxx_destruct]
  -[cellFlowObserver setEnabled:]
  -[cellFlowObserver resetTrafficClassFlowSnapshot:]
  -[cellFlowObserver enabled]
  -[cellFlowObserver performDisposition:present:]
  -[cellFlowObserver init]


InterfaceTypeTracker : NSObject
 @property  NSArray *alwaysNote
 @property  NSArray *neverNote
 @property  NSArray *daemonCheck
 @property  NSMutableDictionary *trackerCache
 @property  long long interfaceType
 @property  <flowDispositionObserver> *observer
 @property  TrackerPolicy *defaultPolicy
 @property  NWUsageTargetSelector *targetFlowsNewWiFi
 @property  NetworkAnalyticsStateRelay *stateRelay
 @property  NSDate *madePrimaryDate
 @property  LightweightTimer *lwTimer

  // instance methods
  -[InterfaceTypeTracker madePrimaryDate]
  -[InterfaceTypeTracker interfaceType]
  -[InterfaceTypeTracker _dumpState]
  -[InterfaceTypeTracker infoDir]
  -[InterfaceTypeTracker scheduleExpiryCheckFor:delay:]
  -[InterfaceTypeTracker setTargetFlowsNewWiFi:]
  -[InterfaceTypeTracker noteFlow:withDelegatee:snapshot:]
  -[InterfaceTypeTracker trackerCache]
  -[InterfaceTypeTracker noteFlow:withOwner:snapshot:]
  -[InterfaceTypeTracker configurePolicies:]
  -[InterfaceTypeTracker dealloc]
  -[InterfaceTypeTracker setAlwaysNote:]
  -[InterfaceTypeTracker .cxx_destruct]
  -[InterfaceTypeTracker setupLightweightTimer]
  -[InterfaceTypeTracker lwTimer]
  -[InterfaceTypeTracker alwaysNote]
  -[InterfaceTypeTracker observer]
  -[InterfaceTypeTracker getNetworkActivity:]
  -[InterfaceTypeTracker setNeverNote:]
  -[InterfaceTypeTracker neverNote]
  -[InterfaceTypeTracker _trackerCachePrune]
  -[InterfaceTypeTracker observeValueForKeyPath:ofObject:change:context:]
  -[InterfaceTypeTracker setStateRelay:]
  -[InterfaceTypeTracker removeLinkages:]
  -[InterfaceTypeTracker setLwTimer:]
  -[InterfaceTypeTracker defaultPolicy]
  -[InterfaceTypeTracker setTrackerCache:]
  -[InterfaceTypeTracker setInterfaceType:]
  -[InterfaceTypeTracker targetFlowsNewWiFi]
  -[InterfaceTypeTracker stateRelay]
  -[InterfaceTypeTracker setDaemonCheck:]
  -[InterfaceTypeTracker setMadePrimaryDate:]
  -[InterfaceTypeTracker noteFlowClassificationExpiry:]
  -[InterfaceTypeTracker daemonCheck]
  -[InterfaceTypeTracker initWithInterfaceType:]
  -[InterfaceTypeTracker setDefaultPolicy:]
  -[InterfaceTypeTracker setObserver:]


AppTracker : NSObject <ManagedEventInfoProtocol, ConfigurableObjectProtocol>
 @property  NSDate *timestamp
 @property  int flowsForSelf
 @property  int flowsForOthers
 @property  int flowsPerPeriod
 @property  int flowsPerPeriodAfterMadePrimary
 @property  TrackerPolicy *specificPolicy
 @property  unsigned int eversetClassFlags
 @property  BOOL isADaemon
 @property  BOOL sentFlowCountExceededPolicySymptom
 @property  BOOL sentThunderingHerdFlowCountExceededPolicySymptom
 @property  long long interfaceType
 @property  SFActivityBitmaps *activityBitmaps
 @property  unsigned long lastFullBitmapReportTime
 @property  NSString *userName
 @property  int prevFlows
 @property  int prevFlowsForOthers
 @property  double prevFlowDurations
 @property  unsigned long prevFlowRxBytes
 @property  unsigned long prevFlowTxBytes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AppTracker dumpState]
  +[AppTracker sharedInstance]
  +[AppTracker syncGetAllActivityMapsWithNames:startTime:endTime:reply:]
  +[AppTracker noteForegroundState:forApp:hasForegroundApps:]
  +[AppTracker setTrackCellular:]
  +[AppTracker noteFlow:withDelegatee:snapshot:]
  +[AppTracker startFlowPeriodTimer]
  +[AppTracker setWifiDaemonCheckList:]
  +[AppTracker beginTrafficClassFlowSnapshot]
  +[AppTracker endTrafficClassFlowSnapshot:periodUsecs:reply:]
  +[AppTracker noteFlowEnding:]
  +[AppTracker noteFlow:withOwner:snapshot:]
  +[AppTracker setWifiAlwaysNoteList:]
  +[AppTracker stopFlowPeriodTimer]
  +[AppTracker getWifiNetworkActivity:]
  +[AppTracker _getAllActivityMapsWithNames:startTime:endTime:replyQueue:reply:]
  +[AppTracker configureWifiPolicies:]
  +[AppTracker resetAllActivityMapsForInterfaceType:]
  +[AppTracker initialize]
  +[AppTracker ifTrackerForInterfaceType:]
  +[AppTracker setWifiNeverNoteList:]
  +[AppTracker freeUpActivityBitmapsForInterfaceType:]
  +[AppTracker configureClass:]
  +[AppTracker configureCompanionLinkPolicies:]
  +[AppTracker tallyUpAllActivityMapsForInterfaceType:replyQueue:reply:]
  +[AppTracker pruneCache:]
  +[AppTracker ifTrackerForFlow:]
  +[AppTracker setInternalQueue:]
  +[AppTracker resetTrafficClassFlowSnapshot]
  +[AppTracker getAllActivityMapsWithNames:startTime:endTime:replyQueue:reply:]
  +[AppTracker setAppTrackerVerbose:]
  +[AppTracker configureCellPolicies:]
  +[AppTracker getAlignedNetworkBitmapsForInterfaceType:names:startTime:endTime:]

  // instance methods
  -[AppTracker read:returnedValues:]
  -[AppTracker interfaceType]
  -[AppTracker userName]
  -[AppTracker checkForFlowCountPolicyViolation]
  -[AppTracker prevFlowRxBytes]
  -[AppTracker setPrevFlowRxBytes:]
  -[AppTracker sendFlowCount:exceededPolicyThreshold:isLikelyThunderingHerd:]
  -[AppTracker setTimestamp:]
  -[AppTracker resetFlowCountAfterMadePrimary]
  -[AppTracker activityBitmaps]
  -[AppTracker flowsForSelf]
  -[AppTracker setPrevFlowDurations:]
  -[AppTracker flowsPerPeriod]
  -[AppTracker resetFlowCountPolicyInfo]
  -[AppTracker flowsPerPeriodAfterMadePrimary]
  -[AppTracker configureInstance:]
  -[AppTracker .cxx_destruct]
  -[AppTracker prevFlows]
  -[AppTracker flowsForOthers]
  -[AppTracker addImmediateFlow:]
  -[AppTracker tallyUpAllActivityMaps:]
  -[AppTracker setEversetClassFlags:]
  -[AppTracker removeImmediateFlow:]
  -[AppTracker setFlowsForOthers:]
  -[AppTracker sentThunderingHerdFlowCountExceededPolicySymptom]
  -[AppTracker sentFlowCountExceededPolicySymptom]
  -[AppTracker setActivityBitmaps:]
  -[AppTracker eversetClassFlags]
  -[AppTracker adjustFlowLinkages:]
  -[AppTracker setLastFullBitmapReportTime:]
  -[AppTracker setFlowsPerPeriodAfterMadePrimary:]
  -[AppTracker setSentThunderingHerdFlowCountExceededPolicySymptom:]
  -[AppTracker addFlow:]
  -[AppTracker setSpecificPolicy:]
  -[AppTracker removeFlow:]
  -[AppTracker setFlowsPerPeriod:]
  -[AppTracker setFlowsForSelf:]
  -[AppTracker setInterfaceType:]
  -[AppTracker generateInfoForId:context:uuid:completionBlock:]
  -[AppTracker resetAllActivityMaps]
  -[AppTracker adjustImmediateFlowLinkages:]
  -[AppTracker prevFlowsForOthers]
  -[AppTracker setPrevFlows:]
  -[AppTracker prevFlowDurations]
  -[AppTracker _generateInfoForId:context:uuid:completionBlock:]
  -[AppTracker specificPolicy]
  -[AppTracker timestamp]
  -[AppTracker setPrevFlowTxBytes:]
  -[AppTracker setSentFlowCountExceededPolicySymptom:]
  -[AppTracker initWithUserName:interfaceType:]
  -[AppTracker setIsADaemon:]
  -[AppTracker lastFullBitmapReportTime]
  -[AppTracker isADaemon]
  -[AppTracker prevFlowTxBytes]
  -[AppTracker setPrevFlowsForOthers:]


LargeTransferFlowSummary : NSObject
 @property  double lastSeenAt
 @property  double stateEntryTimestamp
 @property  unsigned int state
 @property  FlowLedger *ledger

  // instance methods
  -[LargeTransferFlowSummary state]
  -[LargeTransferFlowSummary .cxx_destruct]
  -[LargeTransferFlowSummary setState:]
  -[LargeTransferFlowSummary lastSeenAt]
  -[LargeTransferFlowSummary setLastSeenAt:]
  -[LargeTransferFlowSummary stateEntryTimestamp]
  -[LargeTransferFlowSummary setStateEntryTimestamp:]
  -[LargeTransferFlowSummary ledger]
  -[LargeTransferFlowSummary setLedger:]


LargeTransferAppSummary : NSObject
 @property  FlowOriginLedger *ledger
 @property  NSMutableDictionary *transferFlows
 @property  NSString *name
 @property  unsigned long numCellRxLowerThresholdTransferSizes
 @property  unsigned long numCellTxLowerThresholdTransferSizes
 @property  unsigned long numCellRxUpperThresholdTransferSizes
 @property  unsigned long numCellTxUpperThresholdTransferSizes
 @property  unsigned long totalCellRxTransferSize
 @property  unsigned long totalCellTxTransferSize
 @property  unsigned long numWiFiRxLowerThresholdTransferSizes
 @property  unsigned long numWiFiTxLowerThresholdTransferSizes
 @property  unsigned long numWiFiRxUpperThresholdTransferSizes
 @property  unsigned long numWiFiTxUpperThresholdTransferSizes
 @property  unsigned long totalWiFiRxTransferSize
 @property  unsigned long totalWiFiTxTransferSize
 @property  double recentCellRxThroughput
 @property  double recentCellTxThroughput
 @property  double recentWiFiRxThroughput
 @property  double recentWiFiTxThroughput
 @property  double recentTotalThroughput
 @property  double recentTotalRxThroughput
 @property  double recentTotalTxThroughput
 @property  double recentCellThroughput
 @property  double recentWiFiThroughput

  // instance methods
  -[LargeTransferAppSummary .cxx_destruct]
  -[LargeTransferAppSummary setName:]
  -[LargeTransferAppSummary name]
  -[LargeTransferAppSummary recentCellRxThroughput]
  -[LargeTransferAppSummary recentCellTxThroughput]
  -[LargeTransferAppSummary recentWiFiRxThroughput]
  -[LargeTransferAppSummary recentWiFiTxThroughput]
  -[LargeTransferAppSummary ledger]
  -[LargeTransferAppSummary setLedger:]
  -[LargeTransferAppSummary recentTotalThroughput]
  -[LargeTransferAppSummary recentTotalRxThroughput]
  -[LargeTransferAppSummary recentTotalTxThroughput]
  -[LargeTransferAppSummary recentCellThroughput]
  -[LargeTransferAppSummary recentWiFiThroughput]
  -[LargeTransferAppSummary numCellRxLowerThresholdTransferSizes]
  -[LargeTransferAppSummary setNumCellRxLowerThresholdTransferSizes:]
  -[LargeTransferAppSummary numCellTxLowerThresholdTransferSizes]
  -[LargeTransferAppSummary setNumCellTxLowerThresholdTransferSizes:]
  -[LargeTransferAppSummary numCellRxUpperThresholdTransferSizes]
  -[LargeTransferAppSummary setNumCellRxUpperThresholdTransferSizes:]
  -[LargeTransferAppSummary numCellTxUpperThresholdTransferSizes]
  -[LargeTransferAppSummary setNumCellTxUpperThresholdTransferSizes:]
  -[LargeTransferAppSummary totalCellRxTransferSize]
  -[LargeTransferAppSummary setTotalCellRxTransferSize:]
  -[LargeTransferAppSummary totalCellTxTransferSize]
  -[LargeTransferAppSummary setTotalCellTxTransferSize:]
  -[LargeTransferAppSummary numWiFiRxLowerThresholdTransferSizes]
  -[LargeTransferAppSummary setNumWiFiRxLowerThresholdTransferSizes:]
  -[LargeTransferAppSummary numWiFiTxLowerThresholdTransferSizes]
  -[LargeTransferAppSummary setNumWiFiTxLowerThresholdTransferSizes:]
  -[LargeTransferAppSummary numWiFiRxUpperThresholdTransferSizes]
  -[LargeTransferAppSummary setNumWiFiRxUpperThresholdTransferSizes:]
  -[LargeTransferAppSummary numWiFiTxUpperThresholdTransferSizes]
  -[LargeTransferAppSummary setNumWiFiTxUpperThresholdTransferSizes:]
  -[LargeTransferAppSummary totalWiFiRxTransferSize]
  -[LargeTransferAppSummary setTotalWiFiRxTransferSize:]
  -[LargeTransferAppSummary totalWiFiTxTransferSize]
  -[LargeTransferAppSummary setTotalWiFiTxTransferSize:]
  -[LargeTransferAppSummary setRecentCellRxThroughput:]
  -[LargeTransferAppSummary setRecentCellTxThroughput:]
  -[LargeTransferAppSummary setRecentWiFiRxThroughput:]
  -[LargeTransferAppSummary setRecentWiFiTxThroughput:]
  -[LargeTransferAppSummary transferFlows]
  -[LargeTransferAppSummary setTransferFlows:]


LargeTransferAssessor : NSObject
 @property  int state
 @property  unsigned long numCellRxLowerThresholdTransferSizes
 @property  unsigned long numCellTxLowerThresholdTransferSizes
 @property  unsigned long numCellRxUpperThresholdTransferSizes
 @property  unsigned long numCellTxUpperThresholdTransferSizes
 @property  unsigned long numWiFiRxLowerThresholdTransferSizes
 @property  unsigned long numWiFiTxLowerThresholdTransferSizes
 @property  unsigned long numWiFiRxUpperThresholdTransferSizes
 @property  unsigned long numWiFiTxUpperThresholdTransferSizes
 @property  @? shouldGoActiveBlock
 @property  @? shouldStayActiveBlock
 @property  BOOL assessedPositive
 @property  int activeTransitionQualifier
 @property  NSSet *currentActiveTransferApps
 @property  double transferSizeRelatedRecentCellRxThroughput
 @property  double transferSizeRelatedRecentCellTxThroughput
 @property  double transferSizeRelatedRecentWiFiRxThroughput
 @property  double transferSizeRelatedRecentWiFiTxThroughput
 @property  double transferSizeRelatedRecentTotalRxThroughput
 @property  double transferSizeRelatedRecentTotalTxThroughput
 @property  double accumulatedLowThroughputHysteresisTime
 @property  int numTransitionsLowThroughputHysteresisToActive

  // instance methods
  -[LargeTransferAssessor restoreDefaults]
  -[LargeTransferAssessor setConfiguration:]
  -[LargeTransferAssessor checkLargeTransfersAt:]
  -[LargeTransferAssessor stateString]
  -[LargeTransferAssessor state]
  -[LargeTransferAssessor .cxx_destruct]
  -[LargeTransferAssessor getState]
  -[LargeTransferAssessor dumpStateAt:]
  -[LargeTransferAssessor init]
  -[LargeTransferAssessor setState:]
  -[LargeTransferAssessor refreshTransferSizeState]
  -[LargeTransferAssessor transferSizeRelatedRecentTotalThroughput]
  -[LargeTransferAssessor transferSizeRelatedRecentTotalRxThroughput]
  -[LargeTransferAssessor transferSizeRelatedRecentTotalTxThroughput]
  -[LargeTransferAssessor transferSizeRelatedRecentCellThroughput]
  -[LargeTransferAssessor transferSizeRelatedRecentCellRxThroughput]
  -[LargeTransferAssessor transferSizeRelatedRecentCellTxThroughput]
  -[LargeTransferAssessor transferSizeRelatedRecentWiFiThroughput]
  -[LargeTransferAssessor transferSizeRelatedRecentWiFiRxThroughput]
  -[LargeTransferAssessor transferSizeRelatedRecentWiFiTxThroughput]
  -[LargeTransferAssessor numCellRxLowerThresholdTransferSizes]
  -[LargeTransferAssessor setNumCellRxLowerThresholdTransferSizes:]
  -[LargeTransferAssessor numCellTxLowerThresholdTransferSizes]
  -[LargeTransferAssessor setNumCellTxLowerThresholdTransferSizes:]
  -[LargeTransferAssessor numCellRxUpperThresholdTransferSizes]
  -[LargeTransferAssessor setNumCellRxUpperThresholdTransferSizes:]
  -[LargeTransferAssessor numCellTxUpperThresholdTransferSizes]
  -[LargeTransferAssessor setNumCellTxUpperThresholdTransferSizes:]
  -[LargeTransferAssessor numWiFiRxLowerThresholdTransferSizes]
  -[LargeTransferAssessor setNumWiFiRxLowerThresholdTransferSizes:]
  -[LargeTransferAssessor numWiFiTxLowerThresholdTransferSizes]
  -[LargeTransferAssessor setNumWiFiTxLowerThresholdTransferSizes:]
  -[LargeTransferAssessor numWiFiRxUpperThresholdTransferSizes]
  -[LargeTransferAssessor setNumWiFiRxUpperThresholdTransferSizes:]
  -[LargeTransferAssessor numWiFiTxUpperThresholdTransferSizes]
  -[LargeTransferAssessor setNumWiFiTxUpperThresholdTransferSizes:]
  -[LargeTransferAssessor markActiveTransferSizeFlowsAs:]
  -[LargeTransferAssessor assessedPositive]
  -[LargeTransferAssessor shouldGoActiveBlock]
  -[LargeTransferAssessor setShouldGoActiveBlock:]
  -[LargeTransferAssessor shouldStayActiveBlock]
  -[LargeTransferAssessor setShouldStayActiveBlock:]
  -[LargeTransferAssessor activeTransitionQualifier]
  -[LargeTransferAssessor currentActiveTransferApps]
  -[LargeTransferAssessor accumulatedLowThroughputHysteresisTime]
  -[LargeTransferAssessor numTransitionsLowThroughputHysteresisToActive]


BonjourProbe : TestProbe
 @property  NSMutableDictionary *resolvers
 @property  NSObject<OS_dispatch_source> *bonjourBrowserTimer
 @property  double bonjourBrowserTimerDuration
 @property  ^{_DNSServiceRef_t=} dnsRef
 @property  <BonjourProbeDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *scanQueue
 @property  BOOL includeAWDL
 @property  NSMutableDictionary *currentlyDiscoveredServices
 @property  NSMutableDictionary *allDiscoveredServices

  // instance methods
  -[BonjourProbe setDelegate:]
  -[BonjourProbe delegate]
  -[BonjourProbe .cxx_destruct]
  -[BonjourProbe stopTest]
  -[BonjourProbe initWithQueue:]
  -[BonjourProbe setResolvers:]
  -[BonjourProbe resolvers]
  -[BonjourProbe cancelTest:]
  -[BonjourProbe loadBonjourSymbols]
  -[BonjourProbe startBonjourScanForService:onInterfaceNamed:]
  -[BonjourProbe stopAllResolvers]
  -[BonjourProbe dnsResolver:encounteredDNSError:]
  -[BonjourProbe scanQueue]
  -[BonjourProbe setScanQueue:]
  -[BonjourProbe includeAWDL]
  -[BonjourProbe setIncludeAWDL:]
  -[BonjourProbe currentlyDiscoveredServices]
  -[BonjourProbe setCurrentlyDiscoveredServices:]
  -[BonjourProbe allDiscoveredServices]
  -[BonjourProbe setAllDiscoveredServices:]
  -[BonjourProbe bonjourBrowserTimer]
  -[BonjourProbe setBonjourBrowserTimer:]
  -[BonjourProbe bonjourBrowserTimerDuration]
  -[BonjourProbe setBonjourBrowserTimerDuration:]
  -[BonjourProbe dnsRef]
  -[BonjourProbe setDnsRef:]


DNSResolverProbe : TestProbe
 @property  ^{_DNSServiceRef_t=} resolveDNSRef
 @property  ^{_DNSServiceRef_t=} getAddrInfoDNSRef
 @property  NSMutableDictionary *serviceDict
 @property  BOOL includeAWDL
 @property  <BonjourProbeDelegate> *bonjourDelegate
 @property  <DNSResolverProbeErrorDelegate> *errorDelegate
 @property  ^{_DNSServiceRef_t=} sharedDNSRef

  // instance methods
  -[DNSResolverProbe dealloc]
  -[DNSResolverProbe .cxx_destruct]
  -[DNSResolverProbe stopTest]
  -[DNSResolverProbe initWithQueue:]
  -[DNSResolverProbe includeAWDL]
  -[DNSResolverProbe setIncludeAWDL:]
  -[DNSResolverProbe startDNSResolveFor:includeAWDL:]
  -[DNSResolverProbe bonjourDelegate]
  -[DNSResolverProbe setBonjourDelegate:]
  -[DNSResolverProbe errorDelegate]
  -[DNSResolverProbe setErrorDelegate:]
  -[DNSResolverProbe sharedDNSRef]
  -[DNSResolverProbe setSharedDNSRef:]
  -[DNSResolverProbe resolveDNSRef]
  -[DNSResolverProbe setResolveDNSRef:]
  -[DNSResolverProbe getAddrInfoDNSRef]
  -[DNSResolverProbe setGetAddrInfoDNSRef:]
  -[DNSResolverProbe serviceDict]
  -[DNSResolverProbe setServiceDict:]


AirDropBonjourProbe : BonjourProbe
  // instance methods
  -[AirDropBonjourProbe startAirDropScanWithDuration:]


SystemSettingsRelay : NSObject <CoreTelephonyShimDelegate>
 @property  NSDictionary *autoBugCaptureConfiguration
 @property  BOOL registeredForAutoBugCaptureChangeNotifications
 @property  BOOL autoFeedbackAssistantInitialized
 @property  BOOL smartDataModeEnabled
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL wifiEnabled
 @property  BOOL airplaneModeSwitchEnabled
 @property  BOOL cellDataSwitchEnabled
 @property  BOOL rnfEnabled
 @property  BOOL noBackhaulEnabled
 @property  BOOL cellOutrankEnabled
 @property  BOOL cellPrivateNetworkFeatureFlagEnabled
 @property  BOOL domainTrackingFeatureFlagEnabled
 @property  BOOL geoIPTrackingFeatureFlagEnabled
 @property  BOOL autoBugCaptureEnabled
 @property  BOOL autoFeedbackAssistantEnable
 @property  BOOL autoBugCaptureAvailable
 @property  int autoBugCaptureEnhancedBetaFeedbackState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SystemSettingsRelay defaultRelay]
  +[SystemSettingsRelay automaticallyNotifiesObserversForKey:]

  // instance methods
  -[SystemSettingsRelay autoFeedbackAssistantEnable]
  -[SystemSettingsRelay dealloc]
  -[SystemSettingsRelay getAutoBugCaptureConfiguration]
  -[SystemSettingsRelay .cxx_destruct]
  -[SystemSettingsRelay autoBugCaptureEnabled]
  -[SystemSettingsRelay setQueue:]
  -[SystemSettingsRelay queue]
  -[SystemSettingsRelay ctServerConnectionNotification:notificationInfo:]
  -[SystemSettingsRelay init]
  -[SystemSettingsRelay autoBugCaptureAvailable]
  -[SystemSettingsRelay rnfEnabled]
  -[SystemSettingsRelay wifiEnabled]
  -[SystemSettingsRelay smartDataModeChangedToUserEnabled:]
  -[SystemSettingsRelay supports5GChangedTo:]
  -[SystemSettingsRelay supportsPrivateNetworkChangedTo:]
  -[SystemSettingsRelay rnfSettingChangedToFeatureEnabled:userEnabled:]
  -[SystemSettingsRelay registerForAutoBugCaptureChangeNotifications]
  -[SystemSettingsRelay _setAirplaneModeSwitchEnabled:]
  -[SystemSettingsRelay _setWifiEnabled:]
  -[SystemSettingsRelay _setCellDataSwitchEnabled:]
  -[SystemSettingsRelay _setRnfEnabled:]
  -[SystemSettingsRelay _setNoBackhaulEnabled:]
  -[SystemSettingsRelay _setCellOutrankEnabled:]
  -[SystemSettingsRelay _setSmartDataModeEnabled:]
  -[SystemSettingsRelay _setAutoBugCaptureEnabled:]
  -[SystemSettingsRelay _setAutoBugCaptureAvailable:]
  -[SystemSettingsRelay _setAutoFeedbackAssistantEnable:]
  -[SystemSettingsRelay autoBugCaptureEnhancedBetaFeedbackState]
  -[SystemSettingsRelay setDomainTrackingFeatureFlagEnabled:]
  -[SystemSettingsRelay setGeoIPTrackingFeatureFlagEnabled:]
  -[SystemSettingsRelay recalculateAndSetCellOutrankEnabled]
  -[SystemSettingsRelay setAutoBugCaptureConfiguration:]
  -[SystemSettingsRelay airplaneModeSwitchEnabled]
  -[SystemSettingsRelay cellDataSwitchEnabled]
  -[SystemSettingsRelay noBackhaulEnabled]
  -[SystemSettingsRelay cellOutrankEnabled]
  -[SystemSettingsRelay cellPrivateNetworkFeatureFlagEnabled]
  -[SystemSettingsRelay smartDataModeEnabled]
  -[SystemSettingsRelay setSmartDataModeEnabled:]
  -[SystemSettingsRelay domainTrackingFeatureFlagEnabled]
  -[SystemSettingsRelay geoIPTrackingFeatureFlagEnabled]
  -[SystemSettingsRelay autoBugCaptureConfiguration]
  -[SystemSettingsRelay registeredForAutoBugCaptureChangeNotifications]
  -[SystemSettingsRelay setRegisteredForAutoBugCaptureChangeNotifications:]
  -[SystemSettingsRelay autoFeedbackAssistantInitialized]
  -[SystemSettingsRelay setAutoFeedbackAssistantInitialized:]


TrackedFlowCounts : NSObject
 @property  unsigned long rxCellularBytes
 @property  unsigned long txCellularBytes
 @property  unsigned long rxWiFiBytes
 @property  unsigned long txWiFiBytes
 @property  unsigned long rxWiredBytes
 @property  unsigned long txWiredBytes
 @property  unsigned long rxPkts
 @property  unsigned long txPkts
 @property  unsigned long rxDupeBytes
 @property  unsigned long rxOOOBytes
 @property  unsigned long txReTxBytes
 @property  double rttMinimumSecs
 @property  double rttAverageSecs
 @property  double rttVariation
 @property  BOOL probedFlow
 @property  BOOL probed3WHSStuckFlow
 @property  BOOL probedReadStuckFlow
 @property  BOOL probedWriteStuckFlow

  // instance methods
  -[TrackedFlowCounts rttVariation]
  -[TrackedFlowCounts txWiFiBytes]
  -[TrackedFlowCounts txWiredBytes]
  -[TrackedFlowCounts rxWiredBytes]
  -[TrackedFlowCounts txCellularBytes]
  -[TrackedFlowCounts rxCellularBytes]
  -[TrackedFlowCounts rxWiFiBytes]
  -[TrackedFlowCounts rxDupeBytes]
  -[TrackedFlowCounts rxOOOBytes]
  -[TrackedFlowCounts setRttVariation:]
  -[TrackedFlowCounts addFlowCounts:]
  -[TrackedFlowCounts subtractFlowCounts:]
  -[TrackedFlowCounts setRxCellularBytes:]
  -[TrackedFlowCounts setTxCellularBytes:]
  -[TrackedFlowCounts setRxWiFiBytes:]
  -[TrackedFlowCounts setTxWiFiBytes:]
  -[TrackedFlowCounts setRxWiredBytes:]
  -[TrackedFlowCounts setTxWiredBytes:]
  -[TrackedFlowCounts rxPkts]
  -[TrackedFlowCounts setRxPkts:]
  -[TrackedFlowCounts txPkts]
  -[TrackedFlowCounts setTxPkts:]
  -[TrackedFlowCounts setRxDupeBytes:]
  -[TrackedFlowCounts setRxOOOBytes:]
  -[TrackedFlowCounts txReTxBytes]
  -[TrackedFlowCounts setTxReTxBytes:]
  -[TrackedFlowCounts rttMinimumSecs]
  -[TrackedFlowCounts setRttMinimumSecs:]
  -[TrackedFlowCounts rttAverageSecs]
  -[TrackedFlowCounts setRttAverageSecs:]
  -[TrackedFlowCounts probedFlow]
  -[TrackedFlowCounts setProbedFlow:]
  -[TrackedFlowCounts probed3WHSStuckFlow]
  -[TrackedFlowCounts setProbed3WHSStuckFlow:]
  -[TrackedFlowCounts probedReadStuckFlow]
  -[TrackedFlowCounts setProbedReadStuckFlow:]
  -[TrackedFlowCounts probedWriteStuckFlow]
  -[TrackedFlowCounts setProbedWriteStuckFlow:]


IntervalTrackedFlowCounts : TrackedFlowCounts
 @property  unsigned long timestampSeconds
 @property  unsigned long numBlemishedFlows
 @property  unsigned long numUnblemishedFlows

  // instance methods
  -[IntervalTrackedFlowCounts timestampSeconds]
  -[IntervalTrackedFlowCounts setTimestampSeconds:]
  -[IntervalTrackedFlowCounts addFlowCounts:]
  -[IntervalTrackedFlowCounts subtractFlowCounts:]
  -[IntervalTrackedFlowCounts addIntervalFlowCounts:]
  -[IntervalTrackedFlowCounts subtractIntervalFlowCounts:]
  -[IntervalTrackedFlowCounts numBlemishedFlows]
  -[IntervalTrackedFlowCounts setNumBlemishedFlows:]
  -[IntervalTrackedFlowCounts numUnblemishedFlows]
  -[IntervalTrackedFlowCounts setNumUnblemishedFlows:]


TrackedFlow : TrackedFlowCounts
 @property  unsigned int ifIndex
 @property  long long ifType
 @property  NSString *ownerKey
 @property  int pid
 @property  unsigned long flowId
 @property  AppTracker *ultimateUser
 @property  AppTracker *immediateUser
 @property  NSDate *startingTimestamp
 @property  BOOL closedOut
 @property  double duration
 @property  unsigned int txUnacked
 @property  unsigned int flags
 @property  unsigned int trafficMgtFlags
 @property  unsigned int trafficClassFlags
 @property  double wifiDownlRate
 @property  double cellDownlRate
 @property  BOOL isNiced
 @property  BOOL isRNF
 @property  BOOL isForcedNonRNF
 @property  BOOL trackedAsForeground
 @property  FlowClassification *classification
 @property  AppTracker *trackerForStatistics
 @property  unsigned long classificationChangeTimer
 @property  unsigned long backgroundCellFlowTrackingSeqNo

  // class methods
  +[TrackedFlow dumpState]
  +[TrackedFlow setPolledFlowQueue:]
  +[TrackedFlow _wifiStallCheckStarted]
  +[TrackedFlow activeFlowsCountForType:]
  +[TrackedFlow cellUsageGrandTallyAfterAdding:]
  +[TrackedFlow rnfExpensiveUsageGrandTallyAfterAdding:]
  +[TrackedFlow _notifyPollingEnd]
  +[TrackedFlow allActiveFlowsCount]
  +[TrackedFlow cellUsageGrandTallyAfterSetting:]
  +[TrackedFlow rnfUsageGrandTallyAfterAdding:]
  +[TrackedFlow foregroundNonLocalUsageGrandTallyAfterAdding:]
  +[TrackedFlow ownersOfFlowsPassingTest:]
  +[TrackedFlow wifiNonLocalUsageGrandTallyAfterAdding:]
  +[TrackedFlow rnfUsageGrandTallyAfterSetting:]
  +[TrackedFlow startPollingWifiFlows:]
  +[TrackedFlow flowForKey:]
  +[TrackedFlow _wifiStallCheck]
  +[TrackedFlow cellExpensiveUsageGrandTallyAfterAdding:]
  +[TrackedFlow initialize]
  +[TrackedFlow currentCellUsers]
  +[TrackedFlow getPolledFlowInfo]
  +[TrackedFlow removeTrackingForKey:]
  +[TrackedFlow stopPollingWifiFlows]
  +[TrackedFlow _dumpStateOfType:]
  +[TrackedFlow startTrackingForKey:]
  +[TrackedFlow countFlowsPassingTest:]
  +[TrackedFlow reverseRnfUsageGrandTallyAfterAdding:]

  // instance methods
  -[TrackedFlow txUnacked]
  -[TrackedFlow setUltimateUser:]
  -[TrackedFlow trackerForStatistics]
  -[TrackedFlow inheritLateProperties:]
  -[TrackedFlow setDuration:]
  -[TrackedFlow isNiced]
  -[TrackedFlow setBackgroundCellFlowTrackingSeqNo:]
  -[TrackedFlow inheritEarlyProperties:]
  -[TrackedFlow setIsForcedNonRNF:]
  -[TrackedFlow classificationChangeTimer]
  -[TrackedFlow setTrackerForStatistics:]
  -[TrackedFlow setClassification:]
  -[TrackedFlow setFlags:]
  -[TrackedFlow .cxx_destruct]
  -[TrackedFlow flags]
  -[TrackedFlow duration]
  -[TrackedFlow setWifiDownlRate:]
  -[TrackedFlow setClassificationChangeTimer:]
  -[TrackedFlow setImmediateUser:]
  -[TrackedFlow setIsRNF:]
  -[TrackedFlow setOwnerKey:]
  -[TrackedFlow setTrackedAsForeground:]
  -[TrackedFlow setTrafficMgtFlags:]
  -[TrackedFlow setIfType:]
  -[TrackedFlow startingTimestamp]
  -[TrackedFlow trackedAsForeground]
  -[TrackedFlow pid]
  -[TrackedFlow ifType]
  -[TrackedFlow classification]
  -[TrackedFlow backgroundCellFlowTrackingSeqNo]
  -[TrackedFlow _updateScoreholder:]
  -[TrackedFlow wifiDownlRate]
  -[TrackedFlow setIfIndex:]
  -[TrackedFlow setIsNiced:]
  -[TrackedFlow ultimateUser]
  -[TrackedFlow closedOut]
  -[TrackedFlow setPid:]
  -[TrackedFlow setTrafficClassFlags:]
  -[TrackedFlow flowId]
  -[TrackedFlow cellDownlRate]
  -[TrackedFlow setFlowId:]
  -[TrackedFlow ifIndex]
  -[TrackedFlow trafficClassFlags]
  -[TrackedFlow setCellDownlRate:]
  -[TrackedFlow trafficMgtFlags]
  -[TrackedFlow ownerKey]
  -[TrackedFlow setClosedOut:]
  -[TrackedFlow setStartingTimestamp:]
  -[TrackedFlow _decrementCounters]
  -[TrackedFlow setTxUnacked:]
  -[TrackedFlow _takeSnapshot]
  -[TrackedFlow isForcedNonRNF]
  -[TrackedFlow immediateUser]
  -[TrackedFlow isRNF]
  -[TrackedFlow init]


CellOutrankForceSPIHandler : NSObject
 @property  BOOL cellOutrankForcedViaSPI
 @property  double cellOutrankForcedViaSPIUntil
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[CellOutrankForceSPIHandler sharedInstance]

  // instance methods
  -[CellOutrankForceSPIHandler .cxx_destruct]
  -[CellOutrankForceSPIHandler queue]
  -[CellOutrankForceSPIHandler init]
  -[CellOutrankForceSPIHandler deletePreferCellOverWiFiSettings]
  -[CellOutrankForceSPIHandler handlePreferCellOverWiFi:until:updateDB:]
  -[CellOutrankForceSPIHandler setForcePreferCellOverWiFi:autoDisableTimestamp:]
  -[CellOutrankForceSPIHandler cellOutrankForcedViaSPI]
  -[CellOutrankForceSPIHandler setCellOutrankForcedViaSPI:]
  -[CellOutrankForceSPIHandler cellOutrankForcedViaSPIUntil]
  -[CellOutrankForceSPIHandler setCellOutrankForcedViaSPIUntil:]


COSMStateSummary : NSObject <NSCopying>
 @property  BOOL cellActive
 @property  BOOL cellLowDataMode
 @property  BOOL cellExpensive
 @property  BOOL cellPrimary
 @property  BOOL cellPrivateNetworkActive
 @property  unsigned long cellWRMStatus
 @property  BOOL cellWRMStatusProlongedBad
 @property  BOOL cellWRMExpensive
 @property  BOOL coremediaDownloadActive
 @property  BOOL coremediaDownloadHysteresis
 @property  BOOL coremediaDownloadPeriod
 @property  BOOL coremediaDownloadPeriodEnd
 @property  BOOL force5GPreferred
 @property  BOOL lowPowerModeEnabled
 @property  BOOL rnfActivated
 @property  BOOL screenNotDark
 @property  BOOL screenUnlocked
 @property  long long thermalPressure
 @property  BOOL userInitiatedActivity
 @property  BOOL wifiActive
 @property  BOOL wifiLowDataMode
 @property  BOOL wifiDnsOut
 @property  BOOL wifiDnsProlongedOut
 @property  BOOL wifiExpensive
 @property  BOOL wifiGoodSecurity
 @property  BOOL LOIUseAuthorized
 @property  BOOL homeLocationIsKnown
 @property  BOOL wifiHome
 @property  BOOL wifiHotspot20
 @property  BOOL wifiInternetDnsOut
 @property  BOOL wifiManuallyJoined
 @property  BOOL wifiPolledFlowsCurrentlyBad
 @property  BOOL wifiPolledFlowsProlongedBad
 @property  BOOL wifiPrimary
 @property  BOOL wifiPublic
 @property  BOOL wifiManaged
 @property  BOOL wifiKnowableSporadic
 @property  BOOL wifiSporadic
 @property  BOOL wifiTputAdvice
 @property  BOOL wifiTputInterfaceUse
 @property  BOOL wifiTputLargeXfer
 @property  unsigned long wifiWRMStatus
 @property  BOOL arpFailureEvent
 @property  BOOL captivityIndeterminateEvent
 @property  BOOL dampeningTimerExpiryEvent
 @property  BOOL dataStallThresholdEvent
 @property  BOOL excessCertificateErrorsEvent
 @property  BOOL imminentStallEvent
 @property  BOOL mediaPlaybackStallEvent
 @property  BOOL nd6FailureEvent
 @property  BOOL wifiChangedSSIDEvent
 @property  unsigned long eventsInstanceNumber
 @property  BOOL armedEligible
 @property  BOOL captivityFrictionEligible
 @property  BOOL cellEligible
 @property  BOOL cellStatusOutrankExitEligible
 @property  BOOL deviceEligible
 @property  BOOL forcedOutrankEligible
 @property  BOOL userInitiatedFrictionEligible
 @property  BOOL wifiAmbientFrictionEligible
 @property  BOOL wifiEligible
 @property  CellOutrankHandlerSTM *targetHandler
 @property  BOOL cellWRMStatusGood
 @property  BOOL forceCellPreferred
 @property  BOOL inDampeningPeriod
 @property  BOOL inRegretAvoidanceOutrank
 @property  BOOL inCellPrivateNetworkOutrank
 @property  BOOL thermalStateAllowsEntryToOutrank
 @property  BOOL thermalStateAllowsContinuedOutrank
 @property  BOOL wifiTputAdviceEnded
 @property  BOOL wifiWRMStatusBad
 @property  BOOL wifiWRMStatusGood

  // class methods
  +[COSMStateSummary initialize]
  +[COSMStateSummary summaryFromFlags:]
  +[COSMStateSummary primaryIdleReasonFromFlags:]
  +[COSMStateSummary primaryArmedReasonFromFlags:]
  +[COSMStateSummary primaryOutrankReasonFromFlags:]
  +[COSMStateSummary primaryReasonFromFlags:state:]
  +[COSMStateSummary wifiPublicTypeFromFlags:]

  // instance methods
  -[COSMStateSummary lowPowerModeEnabled]
  -[COSMStateSummary screenUnlocked]
  -[COSMStateSummary setLowPowerModeEnabled:]
  -[COSMStateSummary setScreenNotDark:]
  -[COSMStateSummary screenNotDark]
  -[COSMStateSummary LOIUseAuthorized]
  -[COSMStateSummary .cxx_destruct]
  -[COSMStateSummary rnfActivated]
  -[COSMStateSummary setWifiActive:]
  -[COSMStateSummary jsonRepresentation]
  -[COSMStateSummary setThermalPressure:]
  -[COSMStateSummary copyWithZone:]
  -[COSMStateSummary setLOIUseAuthorized:]
  -[COSMStateSummary setScreenUnlocked:]
  -[COSMStateSummary dictionaryForm]
  -[COSMStateSummary setRnfActivated:]
  -[COSMStateSummary setWifiPrimary:]
  -[COSMStateSummary thermalPressure]
  -[COSMStateSummary wifiPrimary]
  -[COSMStateSummary cellWRMStatus]
  -[COSMStateSummary cellPrivateNetworkActive]
  -[COSMStateSummary setCellPrivateNetworkActive:]
  -[COSMStateSummary setCellWRMStatus:]
  -[COSMStateSummary cellWRMStatusProlongedBad]
  -[COSMStateSummary setCellWRMStatusProlongedBad:]
  -[COSMStateSummary cellWRMExpensive]
  -[COSMStateSummary setCellWRMExpensive:]
  -[COSMStateSummary wifiDnsProlongedOut]
  -[COSMStateSummary setWifiDnsProlongedOut:]
  -[COSMStateSummary wifiGoodSecurity]
  -[COSMStateSummary setWifiGoodSecurity:]
  -[COSMStateSummary wifiHotspot20]
  -[COSMStateSummary setWifiHotspot20:]
  -[COSMStateSummary wifiManuallyJoined]
  -[COSMStateSummary setWifiManuallyJoined:]
  -[COSMStateSummary wifiPolledFlowsCurrentlyBad]
  -[COSMStateSummary setWifiPolledFlowsCurrentlyBad:]
  -[COSMStateSummary wifiPolledFlowsProlongedBad]
  -[COSMStateSummary setWifiPolledFlowsProlongedBad:]
  -[COSMStateSummary wifiPublic]
  -[COSMStateSummary setWifiPublic:]
  -[COSMStateSummary homeLocationIsKnown]
  -[COSMStateSummary setHomeLocationIsKnown:]
  -[COSMStateSummary wifiHome]
  -[COSMStateSummary setWifiHome:]
  -[COSMStateSummary wifiWRMStatus]
  -[COSMStateSummary setWifiWRMStatus:]
  -[COSMStateSummary wifiActive]
  -[COSMStateSummary wifiSporadic]
  -[COSMStateSummary setWifiSporadic:]
  -[COSMStateSummary reasonFlags]
  -[COSMStateSummary cellWRMStatusGood]
  -[COSMStateSummary setCellWRMStatusGood:]
  -[COSMStateSummary thermalStateAllowsEntryToOutrank]
  -[COSMStateSummary setThermalStateAllowsEntryToOutrank:]
  -[COSMStateSummary thermalStateAllowsContinuedOutrank]
  -[COSMStateSummary setThermalStateAllowsContinuedOutrank:]
  -[COSMStateSummary wifiWRMStatusBad]
  -[COSMStateSummary setWifiWRMStatusBad:]
  -[COSMStateSummary wifiWRMStatusGood]
  -[COSMStateSummary setWifiWRMStatusGood:]
  -[COSMStateSummary armedEligible]
  -[COSMStateSummary setArmedEligible:]
  -[COSMStateSummary captivityFrictionEligible]
  -[COSMStateSummary setCaptivityFrictionEligible:]
  -[COSMStateSummary cellEligible]
  -[COSMStateSummary setCellEligible:]
  -[COSMStateSummary cellStatusOutrankExitEligible]
  -[COSMStateSummary setCellStatusOutrankExitEligible:]
  -[COSMStateSummary deviceEligible]
  -[COSMStateSummary setDeviceEligible:]
  -[COSMStateSummary forcedOutrankEligible]
  -[COSMStateSummary setForcedOutrankEligible:]
  -[COSMStateSummary userInitiatedFrictionEligible]
  -[COSMStateSummary setUserInitiatedFrictionEligible:]
  -[COSMStateSummary wifiAmbientFrictionEligible]
  -[COSMStateSummary setWifiAmbientFrictionEligible:]
  -[COSMStateSummary wifiEligible]
  -[COSMStateSummary setWifiEligible:]
  -[COSMStateSummary _stringForKey:object:]
  -[COSMStateSummary _prettyJSONStringStarting:ending:]
  -[COSMStateSummary prettyJSONString]
  -[COSMStateSummary prettyJSONStringPart1]
  -[COSMStateSummary prettyJSONStringPart2]
  -[COSMStateSummary prettyJSONStringPart3]
  -[COSMStateSummary arrayOfStringsDescription]
  -[COSMStateSummary applyDictionary:]
  -[COSMStateSummary mergeEvents:]
  -[COSMStateSummary cellActive]
  -[COSMStateSummary setCellActive:]
  -[COSMStateSummary cellLowDataMode]
  -[COSMStateSummary setCellLowDataMode:]
  -[COSMStateSummary cellExpensive]
  -[COSMStateSummary setCellExpensive:]
  -[COSMStateSummary cellPrimary]
  -[COSMStateSummary setCellPrimary:]
  -[COSMStateSummary coremediaDownloadActive]
  -[COSMStateSummary setCoremediaDownloadActive:]
  -[COSMStateSummary coremediaDownloadHysteresis]
  -[COSMStateSummary setCoremediaDownloadHysteresis:]
  -[COSMStateSummary coremediaDownloadPeriod]
  -[COSMStateSummary setCoremediaDownloadPeriod:]
  -[COSMStateSummary coremediaDownloadPeriodEnd]
  -[COSMStateSummary setCoremediaDownloadPeriodEnd:]
  -[COSMStateSummary forceCellPreferred]
  -[COSMStateSummary force5GPreferred]
  -[COSMStateSummary setForce5GPreferred:]
  -[COSMStateSummary inDampeningPeriod]
  -[COSMStateSummary setInDampeningPeriod:]
  -[COSMStateSummary inRegretAvoidanceOutrank]
  -[COSMStateSummary setInRegretAvoidanceOutrank:]
  -[COSMStateSummary inCellPrivateNetworkOutrank]
  -[COSMStateSummary setInCellPrivateNetworkOutrank:]
  -[COSMStateSummary userInitiatedActivity]
  -[COSMStateSummary setUserInitiatedActivity:]
  -[COSMStateSummary wifiLowDataMode]
  -[COSMStateSummary setWifiLowDataMode:]
  -[COSMStateSummary wifiDnsOut]
  -[COSMStateSummary setWifiDnsOut:]
  -[COSMStateSummary wifiExpensive]
  -[COSMStateSummary setWifiExpensive:]
  -[COSMStateSummary wifiManaged]
  -[COSMStateSummary setWifiManaged:]
  -[COSMStateSummary wifiKnowableSporadic]
  -[COSMStateSummary setWifiKnowableSporadic:]
  -[COSMStateSummary wifiTputAdvice]
  -[COSMStateSummary setWifiTputAdvice:]
  -[COSMStateSummary wifiTputInterfaceUse]
  -[COSMStateSummary setWifiTputInterfaceUse:]
  -[COSMStateSummary wifiTputLargeXfer]
  -[COSMStateSummary setWifiTputLargeXfer:]
  -[COSMStateSummary wifiTputAdviceEnded]
  -[COSMStateSummary dampeningTimerExpiryEvent]
  -[COSMStateSummary setDampeningTimerExpiryEvent:]
  -[COSMStateSummary arpFailureEvent]
  -[COSMStateSummary setArpFailureEvent:]
  -[COSMStateSummary captivityIndeterminateEvent]
  -[COSMStateSummary setCaptivityIndeterminateEvent:]
  -[COSMStateSummary dataStallThresholdEvent]
  -[COSMStateSummary setDataStallThresholdEvent:]
  -[COSMStateSummary excessCertificateErrorsEvent]
  -[COSMStateSummary setExcessCertificateErrorsEvent:]
  -[COSMStateSummary imminentStallEvent]
  -[COSMStateSummary setImminentStallEvent:]
  -[COSMStateSummary mediaPlaybackStallEvent]
  -[COSMStateSummary setMediaPlaybackStallEvent:]
  -[COSMStateSummary nd6FailureEvent]
  -[COSMStateSummary setNd6FailureEvent:]
  -[COSMStateSummary wifiChangedSSIDEvent]
  -[COSMStateSummary setWifiChangedSSIDEvent:]
  -[COSMStateSummary eventsInstanceNumber]
  -[COSMStateSummary setEventsInstanceNumber:]
  -[COSMStateSummary wifiInternetDnsOut]
  -[COSMStateSummary setWifiInternetDnsOut:]
  -[COSMStateSummary targetHandler]
  -[COSMStateSummary setTargetHandler:]


COSMEventSummary : NSObject
 @property  BOOL arpFailureEvent
 @property  BOOL captivityIndeterminateEvent
 @property  BOOL dampeningTimerExpiryEvent
 @property  BOOL dataStallThresholdEvent
 @property  BOOL excessCertificateErrorsEvent
 @property  BOOL imminentStallEvent
 @property  BOOL mediaPlaybackStallEvent
 @property  BOOL nd6FailureEvent
 @property  BOOL wifiChangedSSIDEvent
 @property  unsigned long eventsInstanceNumber

  // class methods
  +[COSMEventSummary automaticallyNotifiesObserversForKey:]

  // instance methods
  -[COSMEventSummary clear]
  -[COSMEventSummary dampeningTimerExpiryEvent]
  -[COSMEventSummary setDampeningTimerExpiryEvent:]
  -[COSMEventSummary arpFailureEvent]
  -[COSMEventSummary setArpFailureEvent:]
  -[COSMEventSummary captivityIndeterminateEvent]
  -[COSMEventSummary setCaptivityIndeterminateEvent:]
  -[COSMEventSummary dataStallThresholdEvent]
  -[COSMEventSummary setDataStallThresholdEvent:]
  -[COSMEventSummary excessCertificateErrorsEvent]
  -[COSMEventSummary setExcessCertificateErrorsEvent:]
  -[COSMEventSummary imminentStallEvent]
  -[COSMEventSummary setImminentStallEvent:]
  -[COSMEventSummary mediaPlaybackStallEvent]
  -[COSMEventSummary setMediaPlaybackStallEvent:]
  -[COSMEventSummary nd6FailureEvent]
  -[COSMEventSummary setNd6FailureEvent:]
  -[COSMEventSummary wifiChangedSSIDEvent]
  -[COSMEventSummary setWifiChangedSSIDEvent:]
  -[COSMEventSummary eventsInstanceNumber]
  -[COSMEventSummary _bumpInstanceNumber]


WiFiThroughputAdviser : NSObject <FlowScheduledRefreshDelegate>
 @property  BOOL cellOutrankAdvised
 @property  BOOL cellOutrankAdvisedViaInterfaceUse
 @property  BOOL cellOutrankAdvisedViaLargeTransfers
 @property  BOOL enabled
 @property  LargeTransferAssessor *largeTransferAssessor
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WiFiThroughputAdviser sharedInstance]
  +[WiFiThroughputAdviser automaticallyNotifiesObserversForKey:]

  // instance methods
  -[WiFiThroughputAdviser restoreDefaults]
  -[WiFiThroughputAdviser setConfiguration:]
  -[WiFiThroughputAdviser checkLargeTransfersAt:]
  -[WiFiThroughputAdviser largeTransfersMeetInitialThreshold:]
  -[WiFiThroughputAdviser cellOutrankAdvised]
  -[WiFiThroughputAdviser cellOutrankAdvisedViaLargeTransfers]
  -[WiFiThroughputAdviser didPollFlowsCallbackOrder]
  -[WiFiThroughputAdviser .cxx_destruct]
  -[WiFiThroughputAdviser cellOutrankAdvisedViaInterfaceUse]
  -[WiFiThroughputAdviser setEnabled:]
  -[WiFiThroughputAdviser dumpStateAt:]
  -[WiFiThroughputAdviser setQueue:]
  -[WiFiThroughputAdviser setCellOutrankAdvisedViaInterfaceUse:]
  -[WiFiThroughputAdviser didPollFlowsAt:periodic:]
  -[WiFiThroughputAdviser queue]
  -[WiFiThroughputAdviser enabled]
  -[WiFiThroughputAdviser checkHeavyInterfaceUseAt:]
  -[WiFiThroughputAdviser getStateAt:]
  -[WiFiThroughputAdviser setCellOutrankAdvised:]
  -[WiFiThroughputAdviser setCellOutrankAdvisedViaLargeTransfers:]
  -[WiFiThroughputAdviser largeTransfersMeetContinuedThreshold:]
  -[WiFiThroughputAdviser init]
  -[WiFiThroughputAdviser largeTransferAssessor]


TransportHandler : NSObject
  // class methods
  +[TransportHandler initialize]
  +[TransportHandler updateFilters:]
  +[TransportHandler requestExplicitDisconnectSymptom:]

  // instance methods
  -[TransportHandler disconnect]
  -[TransportHandler receivePayload:length:]
  -[TransportHandler startRead]
  -[TransportHandler dealloc]
  -[TransportHandler _sendFilterUpdate]
  -[TransportHandler .cxx_destruct]
  -[TransportHandler _sendAck:]
  -[TransportHandler connect:connId:writefn:auditToken:pid:name:verifiedDelegateSymptom:]
  -[TransportHandler generateLibnetcoreSymptomSignpost:]
  -[TransportHandler didReceiveEvent:]
  -[TransportHandler init]


MediaDownloadInstance : NSObject
 @property  NSString *originator
 @property  BOOL originatedInForeground
 @property  int downloadState
 @property  int resumeCount

  // instance methods
  -[MediaDownloadInstance setDownloadState:]
  -[MediaDownloadInstance setResumeCount:]
  -[MediaDownloadInstance .cxx_destruct]
  -[MediaDownloadInstance setOriginator:]
  -[MediaDownloadInstance originator]
  -[MediaDownloadInstance resumeCount]
  -[MediaDownloadInstance downloadState]
  -[MediaDownloadInstance originatedInForeground]
  -[MediaDownloadInstance setOriginatedInForeground:]


CoreMediaDownloadMonitor : NSObject
 @property  BOOL userInitiatedDownloadInProgress
 @property  BOOL userInitiatedDownloadInProgressOrHysteresis
 @property  BOOL userInitiatedDownloadInHysteresis
 @property  int numInProgressForegroundDownloads
 @property  int numPausedForegroundDownloads
 @property  int numInHysteresisForegroundDownloads
 @property  int numInProgressBackgroundDownloads
 @property  int numPausedBackgroundDownloads
 @property  int numInHysteresisBackgroundDownloads
 @property  double userInitiatedDownloadHysteresis

  // class methods
  +[CoreMediaDownloadMonitor automaticallyNotifiesObserversForKey:]

  // instance methods
  -[CoreMediaDownloadMonitor restoreDefaults]
  -[CoreMediaDownloadMonitor setConfiguration:]
  -[CoreMediaDownloadMonitor .cxx_destruct]
  -[CoreMediaDownloadMonitor getState]
  -[CoreMediaDownloadMonitor initWithQueue:]
  -[CoreMediaDownloadMonitor _newCoreMediaAssetDownloadEvent:]
  -[CoreMediaDownloadMonitor _evaluateProperties]
  -[CoreMediaDownloadMonitor _noteCoreMediaAssetDownloadEvent:downloadUUID:onBehalfOf:duration:]
  -[CoreMediaDownloadMonitor userInitiatedDownloadInProgress]
  -[CoreMediaDownloadMonitor setUserInitiatedDownloadInProgress:]
  -[CoreMediaDownloadMonitor userInitiatedDownloadInProgressOrHysteresis]
  -[CoreMediaDownloadMonitor setUserInitiatedDownloadInProgressOrHysteresis:]
  -[CoreMediaDownloadMonitor userInitiatedDownloadInHysteresis]
  -[CoreMediaDownloadMonitor setUserInitiatedDownloadInHysteresis:]
  -[CoreMediaDownloadMonitor numInProgressForegroundDownloads]
  -[CoreMediaDownloadMonitor numPausedForegroundDownloads]
  -[CoreMediaDownloadMonitor numInHysteresisForegroundDownloads]
  -[CoreMediaDownloadMonitor numInProgressBackgroundDownloads]
  -[CoreMediaDownloadMonitor numPausedBackgroundDownloads]
  -[CoreMediaDownloadMonitor numInHysteresisBackgroundDownloads]
  -[CoreMediaDownloadMonitor userInitiatedDownloadHysteresis]


BackgroundNetworkingTriggerHandler : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BackgroundNetworkingTriggerHandler sharedInstance]
  +[BackgroundNetworkingTriggerHandler configureClass:]

  // instance methods
  -[BackgroundNetworkingTriggerHandler noteSymptom:]
  -[BackgroundNetworkingTriggerHandler configureInstance:]


ThroughputAdviserEnvironment : NSObject
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[ThroughputAdviserEnvironment .cxx_destruct]
  -[ThroughputAdviserEnvironment setQueue:]
  -[ThroughputAdviserEnvironment initWithQueue:]
  -[ThroughputAdviserEnvironment queue]


KernelEventMonitor : NSObject <ConfigurableObjectProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[KernelEventMonitor sharedInstance]
  +[KernelEventMonitor configureClass:]

  // instance methods
  -[KernelEventMonitor read:returnedValues:]
  -[KernelEventMonitor _handleSocket:]
  -[KernelEventMonitor configureInstance:]
  -[KernelEventMonitor _handleNetworkEvent:]
  -[KernelEventMonitor .cxx_destruct]
  -[KernelEventMonitor initListening]


WiFiShim : NSObject
 @property  unsigned char lqmCallbacks
 @property  unsigned char lqmCallbackThreshold
 @property  unsigned char lqmBradycardia
 @property  int lqmEventInterval
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL hasAssociation
 @property  BOOL apIsAwake
 @property  NSObject<OS_dispatch_source> *lqmCallbackTimer
 @property  BOOL lqmCallbackTimerResumed
 @property  double lqmBradycardiaLastCalled
 @property  double lqmAsystoleLastCalled
 @property  double lqmCallbackLastTimestamp
 @property  NSDictionary *awdlStateDict
 @property  NSObject<OS_dispatch_source> *awdlTimer
 @property  long long awdlTimerCount
 @property  BOOL awdlLinkState
 @property  ^{__WiFiDeviceClient=} awdlDevice
 @property  NSString *lastSsid
 @property  NSString *lastBssid
 @property  NSMutableSet *delegates
 @property  BOOL awdlLinkUp
 @property  BOOL monitorLQMBradycardia

  // class methods
  +[WiFiShim sharedInstance]

  // instance methods
  -[WiFiShim setLqmCallbackTimer:]
  -[WiFiShim apIsAwake]
  -[WiFiShim delegates]
  -[WiFiShim setLqmCallbacks:]
  -[WiFiShim toggleLQMIntervalOn:toFast:]
  -[WiFiShim wifiDevice]
  -[WiFiShim addDelegate:]
  -[WiFiShim wifiManager]
  -[WiFiShim setDelegates:]
  -[WiFiShim lqmBradycardiaLastCalled]
  -[WiFiShim setHasAssociation:]
  -[WiFiShim setLqmAsystoleLastCalled:]
  -[WiFiShim setAwdlTimerCount:]
  -[WiFiShim _wifiDevicesRefresh]
  -[WiFiShim lqmBradycardia]
  -[WiFiShim lqmCallbackTimerResumed]
  -[WiFiShim _registerForLQMCallbacks]
  -[WiFiShim lastSsid]
  -[WiFiShim lqmAsystoleLastCalled]
  -[WiFiShim setLqmEventInterval:]
  -[WiFiShim awdlDevice]
  -[WiFiShim lqmEventInterval]
  -[WiFiShim monitorLQMBradycardia]
  -[WiFiShim phyModeForInterfaceWithName:]
  -[WiFiShim awdlLinkState]
  -[WiFiShim awdlLinkUp]
  -[WiFiShim dealloc]
  -[WiFiShim setLqmCallbackThreshold:]
  -[WiFiShim _setAWDLLinkUp:]
  -[WiFiShim setLastBssid:]
  -[WiFiShim setLqmBradycardiaLastCalled:]
  -[WiFiShim checkForLQMCallbackRegistration]
  -[WiFiShim _setLQMEventInterval:]
  -[WiFiShim setAwdlStateDict:]
  -[WiFiShim .cxx_destruct]
  -[WiFiShim hasAssociation]
  -[WiFiShim setLqmCallbackLastTimestamp:]
  -[WiFiShim awdlPeerList]
  -[WiFiShim removeDelegate:]
  -[WiFiShim awdlTimerCount]
  -[WiFiShim ssidForInterfaceWithName:]
  -[WiFiShim bssidForInterfaceWithName:]
  -[WiFiShim setWifiDevice:]
  -[WiFiShim observeValueForKeyPath:ofObject:change:context:]
  -[WiFiShim registerForCallbacks]
  -[WiFiShim setAwdlTimer:]
  -[WiFiShim setQueue:]
  -[WiFiShim setLqmBradycardia:]
  -[WiFiShim lqmCallbackTimer]
  -[WiFiShim setLqmCallbackTimerResumed:]
  -[WiFiShim lqmCallbackThreshold]
  -[WiFiShim checkForLQMBradycardia]
  -[WiFiShim setAwdlDevice:]
  -[WiFiShim awdlStateDict]
  -[WiFiShim manualJoinInfoForNetwork:]
  -[WiFiShim suspendLQMCallbackMonitoring]
  -[WiFiShim _unregisterForLQMCallbacks]
  -[WiFiShim checkForLQMAsystole]
  -[WiFiShim setMonitorLQMBradycardia:]
  -[WiFiShim queue]
  -[WiFiShim setAWDLDevice:]
  -[WiFiShim changeLQMMonitoring]
  -[WiFiShim processAsystoleDeclaration]
  -[WiFiShim _delayedRegisterForLQMCallbacks]
  -[WiFiShim lqmCallbacks]
  -[WiFiShim resumeLQMCallbackMonitoring]
  -[WiFiShim lastBssid]
  -[WiFiShim isHotSpotOnInterfaceWithName:]
  -[WiFiShim lqmCallbackLastTimestamp]
  -[WiFiShim associationInfoForWiFiNetwork:]
  -[WiFiShim setLastSsid:]
  -[WiFiShim unregisterForCallbacks]
  -[WiFiShim awdlTimer]
  -[WiFiShim refreshAssociationInfo]
  -[WiFiShim init]
  -[WiFiShim _shouldRegisterForLQMCallbacks]
  -[WiFiShim _triggerDisconnectEdge:]
  -[WiFiShim getAWDLPeerList]
  -[WiFiShim setApIsAwake:]
  -[WiFiShim setAwdlLinkState:]
  -[WiFiShim handleAWDLStateChange:]


NetDiagnosticsShim : NSObject
 @property  NSString *taskName
 @property  <NetDiagnosticsShimDelegate> *delegate

  // instance methods
  -[NetDiagnosticsShim setDelegate:]
  -[NetDiagnosticsShim delegate]
  -[NetDiagnosticsShim dealloc]
  -[NetDiagnosticsShim .cxx_destruct]
  -[NetDiagnosticsShim setTaskName:]
  -[NetDiagnosticsShim taskName]
  -[NetDiagnosticsShim initWithTaskName:queue:]
  -[NetDiagnosticsShim connectToNetDiagnosticsd]
  -[NetDiagnosticsShim invalidateConnections]
  -[NetDiagnosticsShim startNetDiagnosticTaskWithOptions:reply:]
  -[NetDiagnosticsShim stopNetDiagnosticTaskWithReply:]
  -[NetDiagnosticsShim netDiagnosticTaskStatusWithReply:]
  -[NetDiagnosticsShim createNotificationListener]
  -[NetDiagnosticsShim sendNotificationListener]
  -[NetDiagnosticsShim _connectionForServiceNamed:queue:connectionInvalidHandler:]


CellThroughputAdviserEnvironment : ThroughputAdviserEnvironment <SymptomsAWDObserverDelegate, CoreTelephonyShimDelegate>
 @property  CellThroughputAdviser *cellThroughputAdviser
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CellThroughputAdviserEnvironment dealloc]
  -[CellThroughputAdviserEnvironment .cxx_destruct]
  -[CellThroughputAdviserEnvironment handleEvent:]
  -[CellThroughputAdviserEnvironment initWithQueue:]
  -[CellThroughputAdviserEnvironment infoHighThroughputStateChanged:]
  -[CellThroughputAdviserEnvironment cellThroughputAdviser]
  -[CellThroughputAdviserEnvironment monitorSDMActivations:]


MathUtility : NSObject
  // class methods
  +[MathUtility computeNewMeanFromValue:currentMean:currentCount:]
  +[MathUtility computeNewVarianceFromValue:currentMean:currentCount:currentVariance:]
  +[MathUtility getMegabytesSignificantFiguresHistogramBinIndexForBytes:]


LightweightTimerEntry : NSObject
 @property  id userParam
 @property  unsigned long slotNum
 @property  unsigned int seqNo

  // instance methods
  -[LightweightTimerEntry userParam]
  -[LightweightTimerEntry setSeqNo:]
  -[LightweightTimerEntry .cxx_destruct]
  -[LightweightTimerEntry setSlotNum:]
  -[LightweightTimerEntry slotNum]
  -[LightweightTimerEntry seqNo]
  -[LightweightTimerEntry setUserParam:]


LightweightTimer : NSObject
  // instance methods
  -[LightweightTimer cancel:]
  -[LightweightTimer setRelativeTimer:context:]
  -[LightweightTimer dealloc]
  -[LightweightTimer _handleTimerExpiry]
  -[LightweightTimer .cxx_destruct]
  -[LightweightTimer initWithQueue:maxDelay:precision:callback:]


GeoDBHandler : NSObject <ProxyAnalyticsDelegate, ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  ProxyAnalytics *proxyAnalytics
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GeoDBHandler sharedInstance]
  +[GeoDBHandler configureClass:]

  // instance methods
  -[GeoDBHandler read:returnedValues:]
  -[GeoDBHandler noteSymptom:]
  -[GeoDBHandler processSymptom:]
  -[GeoDBHandler configureInstance:]
  -[GeoDBHandler dealloc]
  -[GeoDBHandler processSymptomForInterfaceType:]
  -[GeoDBHandler .cxx_destruct]
  -[GeoDBHandler completeInitialization]
  -[GeoDBHandler nwInterfaceTypeFromAPSDInterface:]
  -[GeoDBHandler proxyAnalytics]
  -[GeoDBHandler submitGeoDBAttributes:]
  -[GeoDBHandler observeValueForKeyPath:ofObject:change:context:]
  -[GeoDBHandler _administrativeDisable]
  -[GeoDBHandler requestReverseGeocodeForLatitude:longitude:reply:]
  -[GeoDBHandler queue]
  -[GeoDBHandler _administrativeEnable]
  -[GeoDBHandler shouldHandleGeoDB]
  -[GeoDBHandler requestReverseGeocodeCompleteForLatitude:longitude:interfaceType:adminArea:countryCode:error:]
  -[GeoDBHandler setProxyAnalytics:]
  -[GeoDBHandler init]


CLIPSShim : NSObject
 @property  unsigned int strongAddressType
 @property  ^v environment
 @property  {?=iQ*^{re_guts}} consoleNameRegex
 @property  {?=iQ*^{re_guts}} dumpStringRegex
 @property  NSMutableString *dumpedString
 @property  NSMutableString *consoleContents
 @property  NSString *currentCommand
 @property  unsigned long commandStringLoc
 @property  NSMutableSet *clipsHeldObjects
 @property  NSMutableDictionary *invocationMap
 @property  NSMutableDictionary *pendingOTAUpdates
 @property  <CLIPSShimDelegate> *delegate
 @property  NSMutableDictionary *modules

  // class methods
  +[CLIPSShim sharedInstance]
  +[CLIPSShim createDecryptedCLPData:length:]
  +[CLIPSShim decodeAndInflateCLIPSString:]
  +[CLIPSShim cryptor]
  +[CLIPSShim dataSectionNameForModule:]
  +[CLIPSShim decryptCLIPSData:forModule:]

  // instance methods
  -[CLIPSShim slotsStringForTemplate:fromDictionary:moduleName:]
  -[CLIPSShim modules]
  -[CLIPSShim matchFactsWithDeftemplateName:withSlotKeyValues:]
  -[CLIPSShim setDumpedString:]
  -[CLIPSShim _logFactsForModule:limit:when:]
  -[CLIPSShim retractFact:]
  -[CLIPSShim unloadConstructsForModule:unconditionally:]
  -[CLIPSShim deftemplatesMatchingPrefix:]
  -[CLIPSShim loadDataSection:]
  -[CLIPSShim factIsImportant:]
  -[CLIPSShim initializeWorkspace]
  -[CLIPSShim pushFocus:]
  -[CLIPSShim registerCallbackFunction:selector:target:]
  -[CLIPSShim setDelegate:]
  -[CLIPSShim factCount]
  -[CLIPSShim commandStringLoc]
  -[CLIPSShim objectForDO:]
  -[CLIPSShim run:]
  -[CLIPSShim reportError:]
  -[CLIPSShim releaseFact:]
  -[CLIPSShim delegate]
  -[CLIPSShim clear]
  -[CLIPSShim moduleRulesByName:]
  -[CLIPSShim run]
  -[CLIPSShim pendingOTAUpdates]
  -[CLIPSShim deactivateModule:]
  -[CLIPSShim dumpEngineStatusWithContext:]
  -[CLIPSShim dealloc]
  -[CLIPSShim updateAllModuleInfos]
  -[CLIPSShim reset]
  -[CLIPSShim logMemoryStatistics:]
  -[CLIPSShim addCallbackInvocation:invocation:]
  -[CLIPSShim parseCLIPSModuleInfoFromConstructs:]
  -[CLIPSShim listAllDeftemplates]
  -[CLIPSShim setConsoleContents:]
  -[CLIPSShim .cxx_destruct]
  -[CLIPSShim addObjectToEnvironment:]
  -[CLIPSShim setCommandString:]
  -[CLIPSShim conservePrettyPrintMemory:]
  -[CLIPSShim addNewConstruct:]
  -[CLIPSShim stringFromConstructsLoadState:]
  -[CLIPSShim removeCallbackInvocation:]
  -[CLIPSShim currentModule]
  -[CLIPSShim releaseAllFreeMemory]
  -[CLIPSShim log:]
  -[CLIPSShim getNextFact:]
  -[CLIPSShim swapConsoleBuffer:]
  -[CLIPSShim setPendingOTAUpdates:]
  -[CLIPSShim otaUpdatePlatformStringForDeviceClass:]
  -[CLIPSShim factDictionaryForFact:]
  -[CLIPSShim setCurrentCommand:]
  -[CLIPSShim moduleNames]
  -[CLIPSShim setOTAUpdate:version:module:]
  -[CLIPSShim loadConstructsForModule:]
  -[CLIPSShim currentCommand]
  -[CLIPSShim setInvocationMap:]
  -[CLIPSShim executeBatchCommand:module:]
  -[CLIPSShim logFacts:]
  -[CLIPSShim printedFacts:limit:]
  -[CLIPSShim assertFactString:moduleName:]
  -[CLIPSShim setQueue:]
  -[CLIPSShim strongAddressType]
  -[CLIPSShim invocationMap]
  -[CLIPSShim setCurrentModule:]
  -[CLIPSShim addModuleNamed:withConstruct:]
  -[CLIPSShim memoryUsed]
  -[CLIPSShim objectFromMultifieldArg:start:end:]
  -[CLIPSShim consoleBuffer]
  -[CLIPSShim clipsHeldObjects]
  -[CLIPSShim dumpedString]
  -[CLIPSShim retainFact:]
  -[CLIPSShim consoleNameRegex]
  -[CLIPSShim deftemplateNamed:moduleName:]
  -[CLIPSShim setCommandStringLoc:]
  -[CLIPSShim setEnvironment:]
  -[CLIPSShim constructLoadStateForModule:]
  -[CLIPSShim consoleContents]
  -[CLIPSShim setDumpStringRegex:]
  -[CLIPSShim currentRuleName]
  -[CLIPSShim environment]
  -[CLIPSShim getValueForSlotNamed:fromFact:]
  -[CLIPSShim executeCommand:moduleName:]
  -[CLIPSShim logMemoryStatistics:verboseOnly:]
  -[CLIPSShim performOnFactsWithDeftemplateName:usingBlock:]
  -[CLIPSShim setStrongAddressType:]
  -[CLIPSShim setClipsHeldObjects:]
  -[CLIPSShim init]
  -[CLIPSShim factStringForFactDictionary:]
  -[CLIPSShim setConsoleNameRegex:]
  -[CLIPSShim updateModuleInfoForModule:slotValues:]
  -[CLIPSShim dumpStringRegex]


RateLimiter : NSObject
 @property  NSString *name
 @property  NSObject<OS_os_log> *logHandle

  // instance methods
  -[RateLimiter setConfiguration:]
  -[RateLimiter logHandle]
  -[RateLimiter .cxx_destruct]
  -[RateLimiter getState]
  -[RateLimiter setLogHandle:]
  -[RateLimiter setName:]
  -[RateLimiter name]
  -[RateLimiter _setTokenBucketDerivedValues]
  -[RateLimiter _setTokenBucketConfiguration:]
  -[RateLimiter _restoreTokenBucketDefaults]
  -[RateLimiter _tokenBucketResetWithRelativeStartTime:]
  -[RateLimiter _tokenBucketAcquireHelper:]
  -[RateLimiter _restoreDefaults]
  -[RateLimiter tryAcquire]
  -[RateLimiter checkAcquire]
  -[RateLimiter resetWithRelativeStartTime:]


NetworkDomainsUtility : NSObject
  // class methods
  +[NetworkDomainsUtility isValidDomain:]


TimedEndpoint : NSObject
 @property  NSString *name
 @property  NSDate *time
 @property  long long interfaceType
 @property  unsigned long stallType
 @property  BOOL foreground

  // instance methods
  -[TimedEndpoint interfaceType]
  -[TimedEndpoint time]
  -[TimedEndpoint foreground]
  -[TimedEndpoint .cxx_destruct]
  -[TimedEndpoint name]
  -[TimedEndpoint touch]
  -[TimedEndpoint isEqual:]
  -[TimedEndpoint initWithEndpoint:trigger:interfaceType:stallType:foreground:]
  -[TimedEndpoint stallType]


DataStallHandler : NSObject <ConfigurableObjectProtocol, SymptomAdditionalProtocol>
 @property  NSMutableSet *delegates
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DataStallHandler sharedInstance]
  +[DataStallHandler uniqStallCountForInterfaceType:stallType:foregroundOnly:since:]
  +[DataStallHandler configureClass:]
  +[DataStallHandler uniqForegroundCountForInterfaceType:stallType:]

  // instance methods
  -[DataStallHandler read:returnedValues:]
  -[DataStallHandler noteSymptom:]
  -[DataStallHandler delegates]
  -[DataStallHandler addDelegate:]
  -[DataStallHandler setDelegates:]
  -[DataStallHandler _resetInterfaceType:stallType:]
  -[DataStallHandler _cleanupAwdDirectHistory]
  -[DataStallHandler processStall:procName:endpoint:foreground:interfaceType:stallType:]
  -[DataStallHandler configureInstance:]
  -[DataStallHandler dealloc]
  -[DataStallHandler _pruneStaleEndpointsFor:onInterfaceType:stallType:]
  -[DataStallHandler .cxx_destruct]
  -[DataStallHandler uniqStallCountForInterfaceType:stallType:foregroundOnly:since:]
  -[DataStallHandler removeDelegate:]
  -[DataStallHandler _checkDampeningAndPostAWDDirectMetric:symptomName:foregroundState:timeStamp:signature:]
  -[DataStallHandler _getAWDDirectDampeningStatus:posted:forProcess:withTimeStamp:]
  -[DataStallHandler init]


(HexString)
	// instance methods
	-[(HexString) hexStringWithSpaces:]
	-[(HexString) gzipInflate]
	-[(HexString) gzipDeflate]

01 00 2600 /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics: AWDObserver 
01 00 2600 /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics: AWDServerConnection 
01 00 0d00 /System/Library/PrivateFrameworks/AlgosScoreFramework.framework/AlgosScoreFramework: AlgosConnectionScore 
01 00 0f00 /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics: AnalyticsConfigurationObserver 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: AnalyticsWorkspace 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: AppAnalytics 
01 00 0200 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 0700 /System/Library/PrivateFrameworks/CTCarrierSpace.framework/CTCarrierSpace: CTCarrierSpaceClient 
01 00 0200 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTServiceDescriptor 
01 00 0200 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTXPCServiceSubscriptionContext 
01 00 0200 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: DiagnosticCaseUsageAnalytics 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: FetchRequestPropertiesDescriptor 
01 00 2900 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationExtensionRecord 
01 00 2900 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 2900 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 2900 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 2900 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleRecord 
01 00 2900 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: LiveUsage 
01 00 1900 /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension: NEPathControllerNetworkAgent 
01 00 1900 /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension: NEPolicy 
01 00 1900 /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension: NEPolicyCondition 
01 00 1900 /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension: NEPolicyResult 
01 00 1900 /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension: NEPolicySession 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDataDetector 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSExpressionDescription 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0e00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0e00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0e00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWAccumulator 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWActivityClientMetricStatistics 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWActivityEmptyTrigger 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWActivityEpilogueStatistics 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: NWActivityFragment 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: NWActivityMetricData 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWActivityStatistics 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWConnectionStatistics 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWDeviceReport 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWInterface 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWL2InterfaceQueueStats 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWL2Report 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWNetworkAgentRegistration 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWParameters 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWPathEvaluator 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWPrivacyProxyNetwork 
01 00 1800 /System/Library/Frameworks/Network.framework/Network: NWPrivacyProxyTraffic 
01 00 1a00 /System/Library/PrivateFrameworks/NetworkStatistics.framework/NetworkStatistics: NWStatisticsManager 
01 00 2200 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomNetworkUsage.framework/SymptomNetworkUsage: NWUsageConnSnapshot 
01 00 2200 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomNetworkUsage.framework/SymptomNetworkUsage: NWUsageManager 
01 00 2200 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomNetworkUsage.framework/SymptomNetworkUsage: NWUsageMonitor 
01 00 2200 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomNetworkUsage.framework/SymptomNetworkUsage: NWUsageProtocolSnapshot 
01 00 2200 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomNetworkUsage.framework/SymptomNetworkUsage: NWUsageQUICSnapshot 
01 00 2200 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomNetworkUsage.framework/SymptomNetworkUsage: NWUsageTCPSnapshot 
01 00 2200 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomNetworkUsage.framework/SymptomNetworkUsage: NWUsageTargetSelector 
01 00 2200 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomNetworkUsage.framework/SymptomNetworkUsage: NWUsageUDPSnapshot 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: NetworkAttachmentAnalytics 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: ObjectAnalytics 
01 00 1b00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0c00 /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy: PrivacyProxyClient 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: Process 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: ProcessAnalytics 
01 00 1d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 1d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentifier 
01 00 1d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSResourceViolationHandler 
01 00 2100 /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/SymptomDiagnosticReporter: SDRDiagnosticReporter 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFApp 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFAppCalendarUsage 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFAppDomainUsage 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFAppEndpoint 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFAppExperience 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFAppRun 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFAppTypicalUsage 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFFlow 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFLiveFlowPerf 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFLiveRoutePerf 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFNetworkAttachment 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFProvisioningData 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: SFTrackerDomain 
01 00 0100 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 2000 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/SymptomAnalytics: UsageAnalytics 
01 00 0800 /System/Library/PrivateFrameworks/WiFiAnalytics.framework/WiFiAnalytics: WAClient 
01 00 0800 /System/Library/PrivateFrameworks/WiFiAnalytics.framework/WiFiAnalytics: WANWActivityStatistics 
01 00 0e00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: __NSURLSessionStatistics 
