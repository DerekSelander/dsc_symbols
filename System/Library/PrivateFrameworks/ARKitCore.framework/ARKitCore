|| __DATA.__common __updateTimer
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyCameraMatrix
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyCameraReadoutTime
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyCameraToImuPosition
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyCameraToImuRotation
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyImageHeight
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyImageWidth
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyLensType
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyRadialDistortion
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyTangentialDistortion
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyTimestampCorrectionForCamera
|| __DATA.__data _height
|| __DATA.__data _k_jasper_max_z
|| __DATA.__data _k_jasper_variance_uv
|| __DATA.__data _k_jasper_variance_z
|| __DATA.__data _k_viofeature_normalized_disparity_error
|| __DATA.__data _k_viofeature_variance_xy
|| __DATA.__data _nChannels
|| __DATA.__data _scale
|| __DATA.__data _width
|| __DATA.__objc_data _OBJC_CLASS_$_AR2DSkeletonDetectionPostProcessGPU
|| __DATA.__objc_data _OBJC_CLASS_$_AR2DSkeletonDetectionPostProcessingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_AR2DSkeletonDetectionTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_AR3DSkeletonDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_AR3DSkeletonDetectionResults
|| __DATA.__objc_data _OBJC_CLASS_$_AR3DSkeletonLiftingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_AR3DSkeletonRegistrationData
|| __DATA.__objc_data _OBJC_CLASS_$_AR3DSkeletonRegistrationTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_AR3DSkeletonRetargetingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARAccelerometerData
|| __DATA.__objc_data _OBJC_CLASS_$_ARAltitudeUndulationPair
|| __DATA.__objc_data _OBJC_CLASS_$_ARAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARAppClipCodeAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARAppClipCodeResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARAppClipCodeResultData
|| __DATA.__objc_data _OBJC_CLASS_$_ARAppClipCodeTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARArchive
|| __DATA.__objc_data _OBJC_CLASS_$_ARAreaLight
|| __DATA.__objc_data _OBJC_CLASS_$_ARAudioData
|| __DATA.__objc_data _OBJC_CLASS_$_ARBVHExporter
|| __DATA.__objc_data _OBJC_CLASS_$_ARBody2D
|| __DATA.__objc_data _OBJC_CLASS_$_ARBodyAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARBodyTrackingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARBufferPopulationMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_ARBufferPopulationRegistry
|| __DATA.__objc_data _OBJC_CLASS_$_ARCV3DPlaneDetectionPlaneList
|| __DATA.__objc_data _OBJC_CLASS_$_ARCV3DPlaneDetectionSingleShotPlaneList
|| __DATA.__objc_data _OBJC_CLASS_$_ARCamera
|| __DATA.__objc_data _OBJC_CLASS_$_ARCameraAlignmentData
|| __DATA.__objc_data _OBJC_CLASS_$_ARCameraParameters
|| __DATA.__objc_data _OBJC_CLASS_$_ARCircularArray
|| __DATA.__objc_data _OBJC_CLASS_$_ARCollaborationData
|| __DATA.__objc_data _OBJC_CLASS_$_ARCollaborationStats
|| __DATA.__objc_data _OBJC_CLASS_$_ARControlListener
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoreAnalyticsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoreRESkeletonResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoreRESkeletonResults
|| __DATA.__objc_data _OBJC_CLASS_$_ARCubemapCompletion
|| __DATA.__objc_data _OBJC_CLASS_$_ARCubemapGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_ARCustomTechniquesConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARDaemon
|| __DATA.__objc_data _OBJC_CLASS_$_ARDaemonControl
|| __DATA.__objc_data _OBJC_CLASS_$_ARDaemonMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_ARDaemonReplayBlockDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_ARDaemonService
|| __DATA.__objc_data _OBJC_CLASS_$_ARDaemonServiceListener
|| __DATA.__objc_data _OBJC_CLASS_$_ARDepthBasedPersonDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARDepthEstimationTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARDepthMapData
|| __DATA.__objc_data _OBJC_CLASS_$_ARDepthPointCloudCoalescer
|| __DATA.__objc_data _OBJC_CLASS_$_ARDepthSensor
|| __DATA.__objc_data _OBJC_CLASS_$_ARDepthSensorSettings
|| __DATA.__objc_data _OBJC_CLASS_$_ARDepthTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARDeviceOrientationData
|| __DATA.__objc_data _OBJC_CLASS_$_ARDeviceOrientationSensor
|| __DATA.__objc_data _OBJC_CLASS_$_ARDirectionalLightEstimate
|| __DATA.__objc_data _OBJC_CLASS_$_ARDisplayLink
|| __DATA.__objc_data _OBJC_CLASS_$_ARDualGuidedFilter
|| __DATA.__objc_data _OBJC_CLASS_$_AREnvironmentProbeAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_AREnvironmentProbeManager
|| __DATA.__objc_data _OBJC_CLASS_$_AREnvironmentProbeUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_AREnvironmentTexturingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARExecutionManager
|| __DATA.__objc_data _OBJC_CLASS_$_ARExposureLightEstimationTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARExtrinsicsWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceData
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceGeometry
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceLightEstimationTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceTrackingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceTrackingData
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceTrackingImageSensor
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceTrackingInternalTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceTrackingManager
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceTrackingResults
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceTrackingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARFilteredMLDepthData
|| __DATA.__objc_data _OBJC_CLASS_$_ARFrame
|| __DATA.__objc_data _OBJC_CLASS_$_ARFrameContextHandler
|| __DATA.__objc_data _OBJC_CLASS_$_ARFrameRateLimitingStrategy
|| __DATA.__objc_data _OBJC_CLASS_$_ARFrameTimingData
|| __DATA.__objc_data _OBJC_CLASS_$_ARGPUCubemapConverter
|| __DATA.__objc_data _OBJC_CLASS_$_ARGPUCubemapHistogram
|| __DATA.__objc_data _OBJC_CLASS_$_ARGPUCubemapProjector
|| __DATA.__objc_data _OBJC_CLASS_$_ARGPUImageUndistortion
|| __DATA.__objc_data _OBJC_CLASS_$_ARGPUSphericalBlur
|| __DATA.__objc_data _OBJC_CLASS_$_ARGPUWarper
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeoAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeoTrackingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeoTrackingConsensusAndAverageFilter
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeoTrackingData
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeoTrackingGradualCorrectionFilter
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeoTrackingLocationRequestHandler
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeoTrackingStatus
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeoTrackingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeoTrackingTechniqueService
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeoTrackingTechniqueState
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeoTrackingTechniqueStatePose
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeometryElement
|| __DATA.__objc_data _OBJC_CLASS_$_ARGeometrySource
|| __DATA.__objc_data _OBJC_CLASS_$_ARGyroscopeData
|| __DATA.__objc_data _OBJC_CLASS_$_ARHWFaceDetection
|| __DATA.__objc_data _OBJC_CLASS_$_ARHitTestRaycasting
|| __DATA.__objc_data _OBJC_CLASS_$_ARHitTestResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARIOMotionSensor
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageCroppingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageData
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageDetectionResultData
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageDetectionTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageDistortionCorrectionTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageNoiseTexture
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageRotationTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageScalePass
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageScalingPassDescription
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageScalingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageSensor
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageSensorSettings
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageTrackingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageTrackingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARInertialState
|| __DATA.__objc_data _OBJC_CLASS_$_ARInternalFaceTrackingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARJasperData
|| __DATA.__objc_data _OBJC_CLASS_$_ARKeyFrame
|| __DATA.__objc_data _OBJC_CLASS_$_ARKeyframeList
|| __DATA.__objc_data _OBJC_CLASS_$_ARLightEstimate
|| __DATA.__objc_data _OBJC_CLASS_$_ARLightEstimationData
|| __DATA.__objc_data _OBJC_CLASS_$_ARLine
|| __DATA.__objc_data _OBJC_CLASS_$_ARLineCloud
|| __DATA.__objc_data _OBJC_CLASS_$_ARLocationData
|| __DATA.__objc_data _OBJC_CLASS_$_ARLocationEstimationData
|| __DATA.__objc_data _OBJC_CLASS_$_ARLocationSensor
|| __DATA.__objc_data _OBJC_CLASS_$_ARLocationSensorService
|| __DATA.__objc_data _OBJC_CLASS_$_ARMLDepthData
|| __DATA.__objc_data _OBJC_CLASS_$_ARMLImageDownScalingResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARMLImageDownScalingResultData
|| __DATA.__objc_data _OBJC_CLASS_$_ARMLImageDownScalingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARMLImageMattingMetadataTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARMLImageProcessingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARMLImageTransform
|| __DATA.__objc_data _OBJC_CLASS_$_ARMLIntermediateDownScalingResultData
|| __DATA.__objc_data _OBJC_CLASS_$_ARMPSImageFilter
|| __DATA.__objc_data _OBJC_CLASS_$_ARMagnetometerData
|| __DATA.__objc_data _OBJC_CLASS_$_ARMatteGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_ARMattingImageMetaData
|| __DATA.__objc_data _OBJC_CLASS_$_ARMemoryPressureMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_ARMeshAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARMeshChunk
|| __DATA.__objc_data _OBJC_CLASS_$_ARMeshGeometry
|| __DATA.__objc_data _OBJC_CLASS_$_ARMeshList
|| __DATA.__objc_data _OBJC_CLASS_$_ARMeshPrimitive
|| __DATA.__objc_data _OBJC_CLASS_$_ARModifiedImageData
|| __DATA.__objc_data _OBJC_CLASS_$_ARMotionSensor
|| __DATA.__objc_data _OBJC_CLASS_$_ARNeutralFaceGeometry
|| __DATA.__objc_data _OBJC_CLASS_$_ARNoiseParameters
|| __DATA.__objc_data _OBJC_CLASS_$_ARNonSynchronousData
|| __DATA.__objc_data _OBJC_CLASS_$_ARNormalTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARODTHandleManager
|| __DATA.__objc_data _OBJC_CLASS_$_ARODTResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARObjectAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARObjectDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARObjectDetectionResultData
|| __DATA.__objc_data _OBJC_CLASS_$_ARObjectDetectionTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARObjectScanningConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AROrientationTrackingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARParametricLights
|| __DATA.__objc_data _OBJC_CLASS_$_ARParentImageSensor
|| __DATA.__objc_data _OBJC_CLASS_$_ARParentImageSensorSettings
|| __DATA.__objc_data _OBJC_CLASS_$_ARParentTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARParticipantAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARPatchGrid
|| __DATA.__objc_data _OBJC_CLASS_$_ARPersonDetectionData
|| __DATA.__objc_data _OBJC_CLASS_$_ARPersonDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARPersonMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_ARPersonOcclusionParentTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARPersonOcclusionTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARPersonSegmentationSingleTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARPersonSegmentationTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARPlaceholderMLDepthData
|| __DATA.__objc_data _OBJC_CLASS_$_ARPlaneAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARPlaneData
|| __DATA.__objc_data _OBJC_CLASS_$_ARPlaneEstimationTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARPlaneExtent
|| __DATA.__objc_data _OBJC_CLASS_$_ARPlaneGeometry
|| __DATA.__objc_data _OBJC_CLASS_$_ARPlaneWorld
|| __DATA.__objc_data _OBJC_CLASS_$_ARPointCloud
|| __DATA.__objc_data _OBJC_CLASS_$_ARPointCloudSensorData
|| __DATA.__objc_data _OBJC_CLASS_$_ARPoseContext
|| __DATA.__objc_data _OBJC_CLASS_$_ARPositionalTrackingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARProbeFilter
|| __DATA.__objc_data _OBJC_CLASS_$_ARProcessMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_ARProcessMonitorStateUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_ARQAHelper
|| __DATA.__objc_data _OBJC_CLASS_$_ARRawSceneUnderstandingData
|| __DATA.__objc_data _OBJC_CLASS_$_ARRaycastQuery
|| __DATA.__objc_data _OBJC_CLASS_$_ARRaycastResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARRecordingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARRecordingTechniquePublic
|| __DATA.__objc_data _OBJC_CLASS_$_ARReferenceImage
|| __DATA.__objc_data _OBJC_CLASS_$_ARReferenceImageCachedError
|| __DATA.__objc_data _OBJC_CLASS_$_ARRemoteControl
|| __DATA.__objc_data _OBJC_CLASS_$_ARRemoteGeoTrackingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARRemoteLocationSensor
|| __DATA.__objc_data _OBJC_CLASS_$_ARRemoteSensor
|| __DATA.__objc_data _OBJC_CLASS_$_ARRemoteService
|| __DATA.__objc_data _OBJC_CLASS_$_ARRemoteTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARRenderSyncScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_ARRenderSyncSchedulerBlockWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_ARReplayConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARReplayGraphScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_ARReplayMovieDataWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_ARReplaySensorPublic
|| __DATA.__objc_data _OBJC_CLASS_$_ARRollingNumberSeries
|| __DATA.__objc_data _OBJC_CLASS_$_ARRunLoop
|| __DATA.__objc_data _OBJC_CLASS_$_ARSIPersonDetectionTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARSISemanticSegmentationTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARSLAMState
|| __DATA.__objc_data _OBJC_CLASS_$_ARSceneReconstructionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_ARSceneReconstructionOptions
|| __DATA.__objc_data _OBJC_CLASS_$_ARSegmentationData
|| __DATA.__objc_data _OBJC_CLASS_$_ARSensorService
|| __DATA.__objc_data _OBJC_CLASS_$_ARServer
|| __DATA.__objc_data _OBJC_CLASS_$_ARServerConnection
|| __DATA.__objc_data _OBJC_CLASS_$_ARServiceUpdateParameters
|| __DATA.__objc_data _OBJC_CLASS_$_ARSessionMetricsFrameProperties
|| __DATA.__objc_data _OBJC_CLASS_$_ARSessionReplayStats
|| __DATA.__objc_data _OBJC_CLASS_$_ARSharedGPUDevice
|| __DATA.__objc_data _OBJC_CLASS_$_ARSkeleton
|| __DATA.__objc_data _OBJC_CLASS_$_ARSkeleton2D
|| __DATA.__objc_data _OBJC_CLASS_$_ARSkeleton3D
|| __DATA.__objc_data _OBJC_CLASS_$_ARSkeletonDefinition
|| __DATA.__objc_data _OBJC_CLASS_$_ARSkipTileBounds
|| __DATA.__objc_data _OBJC_CLASS_$_ARSpatialMappingPointCloud
|| __DATA.__objc_data _OBJC_CLASS_$_ARSpatialMappingResultData
|| __DATA.__objc_data _OBJC_CLASS_$_ARSplitForwarderTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARSplitTechniqueSynchronizerTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARSyncedUltraWideForwardingStrategy
|| __DATA.__objc_data _OBJC_CLASS_$_ARSystemTimeSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_ARTechniqueGatherContext
|| __DATA.__objc_data _OBJC_CLASS_$_ARTechniqueParallelGatherContext
|| __DATA.__objc_data _OBJC_CLASS_$_ARTechniqueSequentialGatherContext
|| __DATA.__objc_data _OBJC_CLASS_$_ARTechniqueService
|| __DATA.__objc_data _OBJC_CLASS_$_ARTimeKeyedList
|| __DATA.__objc_data _OBJC_CLASS_$_ARTrackedRaycast
|| __DATA.__objc_data _OBJC_CLASS_$_ARUndistortionMapping
|| __DATA.__objc_data _OBJC_CLASS_$_ARUserProfile
|| __DATA.__objc_data _OBJC_CLASS_$_ARVLStateData
|| __DATA.__objc_data _OBJC_CLASS_$_ARVideoFormat
|| __DATA.__objc_data _OBJC_CLASS_$_ARVisualLocalizationResultData
|| __DATA.__objc_data _OBJC_CLASS_$_ARWatchdogMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_ARWeakReference
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldAlignmentData
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldAlignmentTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldMap
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldTrackingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldTrackingErrorData
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldTrackingFeaturePointData
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldTrackingOptions
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldTrackingParticipantAnchorData
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldTrackingPoseData
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldTrackingReferenceAnchorData
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldTrackingState
|| __DATA.__objc_data _OBJC_CLASS_$_ARXPCDictionaryWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_URLDecodingResult
|| __DATA.__objc_data _OBJC_CLASS_$__ARDisplayLinkHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_AR2DSkeletonDetectionPostProcessGPU
|| __DATA.__objc_data _OBJC_METACLASS_$_AR2DSkeletonDetectionPostProcessingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_AR2DSkeletonDetectionTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_AR3DSkeletonDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AR3DSkeletonDetectionResults
|| __DATA.__objc_data _OBJC_METACLASS_$_AR3DSkeletonLiftingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_AR3DSkeletonRegistrationData
|| __DATA.__objc_data _OBJC_METACLASS_$_AR3DSkeletonRegistrationTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_AR3DSkeletonRetargetingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARAccelerometerData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARAltitudeUndulationPair
|| __DATA.__objc_data _OBJC_METACLASS_$_ARAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARAppClipCodeAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARAppClipCodeResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARAppClipCodeResultData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARAppClipCodeTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARArchive
|| __DATA.__objc_data _OBJC_METACLASS_$_ARAreaLight
|| __DATA.__objc_data _OBJC_METACLASS_$_ARAudioData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARBVHExporter
|| __DATA.__objc_data _OBJC_METACLASS_$_ARBody2D
|| __DATA.__objc_data _OBJC_METACLASS_$_ARBodyAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARBodyTrackingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARBufferPopulationMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARBufferPopulationRegistry
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCV3DPlaneDetectionPlaneList
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCV3DPlaneDetectionSingleShotPlaneList
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCamera
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCameraAlignmentData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCameraParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCircularArray
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCollaborationData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCollaborationStats
|| __DATA.__objc_data _OBJC_METACLASS_$_ARControlListener
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoreAnalyticsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoreRESkeletonResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoreRESkeletonResults
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCubemapCompletion
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCubemapGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCustomTechniquesConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDaemon
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDaemonControl
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDaemonMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDaemonReplayBlockDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDaemonService
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDaemonServiceListener
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDepthBasedPersonDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDepthEstimationTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDepthMapData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDepthPointCloudCoalescer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDepthSensor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDepthSensorSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDepthTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDeviceOrientationData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDeviceOrientationSensor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDirectionalLightEstimate
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDisplayLink
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDualGuidedFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_AREnvironmentProbeAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_AREnvironmentProbeManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AREnvironmentProbeUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_AREnvironmentTexturingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARExecutionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ARExposureLightEstimationTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARExtrinsicsWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceGeometry
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceLightEstimationTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceTrackingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceTrackingData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceTrackingImageSensor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceTrackingInternalTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceTrackingManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceTrackingResults
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceTrackingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFilteredMLDepthData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFrame
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFrameContextHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFrameRateLimitingStrategy
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFrameTimingData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGPUCubemapConverter
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGPUCubemapHistogram
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGPUCubemapProjector
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGPUImageUndistortion
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGPUSphericalBlur
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGPUWarper
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeoAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeoTrackingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeoTrackingConsensusAndAverageFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeoTrackingData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeoTrackingGradualCorrectionFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeoTrackingLocationRequestHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeoTrackingStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeoTrackingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeoTrackingTechniqueService
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeoTrackingTechniqueState
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeoTrackingTechniqueStatePose
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeometryElement
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGeometrySource
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGyroscopeData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARHWFaceDetection
|| __DATA.__objc_data _OBJC_METACLASS_$_ARHitTestRaycasting
|| __DATA.__objc_data _OBJC_METACLASS_$_ARHitTestResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARIOMotionSensor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageCroppingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageDetectionResultData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageDetectionTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageDistortionCorrectionTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageNoiseTexture
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageRotationTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageScalePass
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageScalingPassDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageScalingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageSensor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageSensorSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageTrackingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageTrackingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARInertialState
|| __DATA.__objc_data _OBJC_METACLASS_$_ARInternalFaceTrackingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARJasperData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARKeyFrame
|| __DATA.__objc_data _OBJC_METACLASS_$_ARKeyframeList
|| __DATA.__objc_data _OBJC_METACLASS_$_ARLightEstimate
|| __DATA.__objc_data _OBJC_METACLASS_$_ARLightEstimationData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARLine
|| __DATA.__objc_data _OBJC_METACLASS_$_ARLineCloud
|| __DATA.__objc_data _OBJC_METACLASS_$_ARLocationData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARLocationEstimationData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARLocationSensor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARLocationSensorService
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMLDepthData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMLImageDownScalingResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMLImageDownScalingResultData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMLImageDownScalingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMLImageMattingMetadataTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMLImageProcessingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMLImageTransform
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMLIntermediateDownScalingResultData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMPSImageFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMagnetometerData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMatteGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMattingImageMetaData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMemoryPressureMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMeshAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMeshChunk
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMeshGeometry
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMeshList
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMeshPrimitive
|| __DATA.__objc_data _OBJC_METACLASS_$_ARModifiedImageData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMotionSensor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARNeutralFaceGeometry
|| __DATA.__objc_data _OBJC_METACLASS_$_ARNoiseParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_ARNonSynchronousData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARNormalTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARODTHandleManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ARODTResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARObjectAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARObjectDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARObjectDetectionResultData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARObjectDetectionTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARObjectScanningConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AROrientationTrackingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARParametricLights
|| __DATA.__objc_data _OBJC_METACLASS_$_ARParentImageSensor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARParentImageSensorSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_ARParentTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARParticipantAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPatchGrid
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPersonDetectionData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPersonDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPersonMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPersonOcclusionParentTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPersonOcclusionTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPersonSegmentationSingleTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPersonSegmentationTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPlaceholderMLDepthData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPlaneAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPlaneData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPlaneEstimationTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPlaneExtent
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPlaneGeometry
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPlaneWorld
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPointCloud
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPointCloudSensorData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPoseContext
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPositionalTrackingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARProbeFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_ARProcessMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARProcessMonitorStateUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_ARQAHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRawSceneUnderstandingData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRaycastQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRaycastResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRecordingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRecordingTechniquePublic
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReferenceImage
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReferenceImageCachedError
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRemoteControl
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRemoteGeoTrackingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRemoteLocationSensor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRemoteSensor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRemoteService
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRemoteTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRenderSyncScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRenderSyncSchedulerBlockWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReplayConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReplayGraphScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReplayMovieDataWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReplaySensorPublic
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRollingNumberSeries
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRunLoop
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSIPersonDetectionTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSISemanticSegmentationTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSLAMState
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSceneReconstructionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSceneReconstructionOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSegmentationData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSensorService
|| __DATA.__objc_data _OBJC_METACLASS_$_ARServer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARServerConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_ARServiceUpdateParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSessionMetricsFrameProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSessionReplayStats
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSharedGPUDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSkeleton
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSkeleton2D
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSkeleton3D
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSkeletonDefinition
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSkipTileBounds
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSpatialMappingPointCloud
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSpatialMappingResultData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSplitForwarderTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSplitTechniqueSynchronizerTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSyncedUltraWideForwardingStrategy
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSystemTimeSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_ARTechniqueGatherContext
|| __DATA.__objc_data _OBJC_METACLASS_$_ARTechniqueParallelGatherContext
|| __DATA.__objc_data _OBJC_METACLASS_$_ARTechniqueSequentialGatherContext
|| __DATA.__objc_data _OBJC_METACLASS_$_ARTechniqueService
|| __DATA.__objc_data _OBJC_METACLASS_$_ARTimeKeyedList
|| __DATA.__objc_data _OBJC_METACLASS_$_ARTrackedRaycast
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUndistortionMapping
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUserProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_ARVLStateData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARVideoFormat
|| __DATA.__objc_data _OBJC_METACLASS_$_ARVisualLocalizationResultData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWatchdogMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWeakReference
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldAlignmentData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldAlignmentTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldMap
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldTrackingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldTrackingErrorData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldTrackingFeaturePointData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldTrackingOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldTrackingParticipantAnchorData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldTrackingPoseData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldTrackingReferenceAnchorData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldTrackingState
|| __DATA.__objc_data _OBJC_METACLASS_$_ARXPCDictionaryWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_URLDecodingResult
|| __DATA.__objc_data _OBJC_METACLASS_$__ARDisplayLinkHelper
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARConfiguration._cameraPosition
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARConfiguration._videoFormat
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARImageDetectionTechnique._needsWorldTrackingPoseData
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARImageScalePass._scaledPixelBufferPool
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARImageScalePass._vtPixelTransferSession
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARMLImageTransform._imageScalePassDescriptions
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARMLImageTransform._imageScalingTechnique
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARMLImageTransform._inputSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARMLImageTransform._resultBufferPool
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARMLImageTransform._rotationAngle
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARMLImageTransform._rotationSession
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARMLImageTransform._scaledSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARMLImageTransform._scalingSession
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARUndistortionMapping._imageSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARUndistortionMapping._mapping
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARUndistortionMapping._mappingU
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARUndistortionMapping._mappingV
|| __DATA_CONST.__const _ARAppClipCodePerformanceTestModeDefaultsKey
|| __DATA_CONST.__const _ARAppleDepthAggregationBankCount
|| __DATA_CONST.__const _ARAppleDepthComputeNormals
|| __DATA_CONST.__const _ARAppleDepthPersonOcclusionAverageDepthBoundingBox
|| __DATA_CONST.__const _ARAppleDepthPersonOcclusionUseExpFilter
|| __DATA_CONST.__const _ARAppleDepthTemporalFilteringStoredFrames
|| __DATA_CONST.__const _ARAppleDepthTemporalSmoothingMethod
|| __DATA_CONST.__const _ARBackFacingUltraWideImageSensorExposureDurationUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingUltraWideImageSensorFrameRateUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingUltraWideImageSensorGeometricDistortionCorrectionEnabledDefaultsKey
|| __DATA_CONST.__const _ARBackFacingUltraWideImageSensorISOUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingUltraWideImageSensorResolutionUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingUltraWideImageSensorVideoBinnedUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingUltraWideImageSensorWhiteBalanceUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorAutoFocusRangeUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorAutoFocusUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorExposureDurationUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorFrameRateUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorISOUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorLensPositionUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorPhotoQualityPrioritizationUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorResolutionUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorSmoothAutoFocusUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorVideoBinnedUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorWhiteBalanceUserDefaultsKey
|| __DATA_CONST.__const _ARBlendShapeLocationBrowDownLeft
|| __DATA_CONST.__const _ARBlendShapeLocationBrowDownRight
|| __DATA_CONST.__const _ARBlendShapeLocationBrowInnerUp
|| __DATA_CONST.__const _ARBlendShapeLocationBrowOuterUpLeft
|| __DATA_CONST.__const _ARBlendShapeLocationBrowOuterUpRight
|| __DATA_CONST.__const _ARBlendShapeLocationCheekPuff
|| __DATA_CONST.__const _ARBlendShapeLocationCheekSquintLeft
|| __DATA_CONST.__const _ARBlendShapeLocationCheekSquintRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeBlinkLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeBlinkRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookDownLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookDownRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookInLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookInRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookOutLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookOutRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookUpLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookUpRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeSquintLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeSquintRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeWideLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeWideRight
|| __DATA_CONST.__const _ARBlendShapeLocationJawForward
|| __DATA_CONST.__const _ARBlendShapeLocationJawLeft
|| __DATA_CONST.__const _ARBlendShapeLocationJawOpen
|| __DATA_CONST.__const _ARBlendShapeLocationJawRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthClose
|| __DATA_CONST.__const _ARBlendShapeLocationMouthDimpleLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthDimpleRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthFrownLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthFrownRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthFunnel
|| __DATA_CONST.__const _ARBlendShapeLocationMouthLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthLowerDownLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthLowerDownRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthPressLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthPressRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthPucker
|| __DATA_CONST.__const _ARBlendShapeLocationMouthRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthRollLower
|| __DATA_CONST.__const _ARBlendShapeLocationMouthRollUpper
|| __DATA_CONST.__const _ARBlendShapeLocationMouthShrugLower
|| __DATA_CONST.__const _ARBlendShapeLocationMouthShrugUpper
|| __DATA_CONST.__const _ARBlendShapeLocationMouthSmileLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthSmileRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthStretchLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthStretchRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthUpperUpLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthUpperUpRight
|| __DATA_CONST.__const _ARBlendShapeLocationNoseSneerLeft
|| __DATA_CONST.__const _ARBlendShapeLocationNoseSneerRight
|| __DATA_CONST.__const _ARBlendShapeLocationTongueOut
|| __DATA_CONST.__const _ARBodyTrackingJointExtrapolationTimeLimitSeconds
|| __DATA_CONST.__const _ARBodyTrackingMultipleBodyAnchors
|| __DATA_CONST.__const _ARBodyTrackingPushProjected3DSkeleton
|| __DATA_CONST.__const _ARBodyTrackingUseSupport3DSkeleton
|| __DATA_CONST.__const _ARBufferPopulationMonitorEnabledDefaultsKey
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonEvent
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonEventFieldAllClientsCountInt
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonEventFieldAllClientsStr
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonEventFieldAllServicesUsedStr
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonEventFieldDisconnectedClientStr
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonEventFieldPeakMemInt
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonHeartbeatEvent
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonHeartbeatEventFieldCurrentMemoryFootprintInt
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonHeartbeatEventFieldDaemonUpTimeExcludingSleepStr
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonHeartbeatEventFieldDaemonUpTimeIncludingSleepStr
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonHeartbeatEventFieldDeviceUDIDStr
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonHeartbeatEventFieldSessionUUIDStr
|| __DATA_CONST.__const _ARCoreAnalyticsDaemonHeartbeatEventFieldSystemUpTimeStr
|| __DATA_CONST.__const _ARCoreAnalyticsInternalDaemonEvent
|| __DATA_CONST.__const _ARCoreAnalyticsInternalDaemonEventFieldAllClientsCountInt
|| __DATA_CONST.__const _ARCoreAnalyticsInternalDaemonEventFieldAllClientsStr
|| __DATA_CONST.__const _ARCoreAnalyticsInternalDaemonEventFieldAllReportingClientServicesUsedStr
|| __DATA_CONST.__const _ARCoreAnalyticsInternalDaemonEventFieldIsServiceRemovedBool
|| __DATA_CONST.__const _ARCoreAnalyticsInternalDaemonEventFieldPeakMemInt
|| __DATA_CONST.__const _ARCoreAnalyticsInternalDaemonEventFieldReportedServiceStr
|| __DATA_CONST.__const _ARCoreAnalyticsInternalDaemonEventFieldReportingClientStr
|| __DATA_CONST.__const _ARDaemonControlPowerControlEntitlement
|| __DATA_CONST.__const _ARDaemonMetricsDisableReporting
|| __DATA_CONST.__const _ARDefaultRelocalizationTimeoutUserDefaultsKey
|| __DATA_CONST.__const _ARDepthSPIApprovedBundleIDPrefix
|| __DATA_CONST.__const _AREnvironmentTexturingHDRMaxValueUserDefaultsKey
|| __DATA_CONST.__const _AREnvironmentTexturingMinimumProbeUpdateIntervalUserDefaultsKey
|| __DATA_CONST.__const _AREnvironmentTexturingWantsHDRUserDefaultsKey
|| __DATA_CONST.__const _ARErrorDomain
|| __DATA_CONST.__const _ARErrorItemsUserInfoKey
|| __DATA_CONST.__const _ARErrorServiceNameUserInfoKey
|| __DATA_CONST.__const _ARFaceTrackingBackCameraAllowedDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingImageSensorDepthDataFilteringUserDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingImageSensorFrameRateLowUserDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingImageSensorFrameRateLowestUserDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingImageSensorFrameRateNormalUserDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingImageSensorMirrorUserDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingImageSensorUsePreviousImageDataWhenDroppingDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingLowPowerModeEnabledDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingRGBOnlyEnabledDefaultsKey
|| __DATA_CONST.__const _ARForceLinkedOnOrAfterAzul
|| __DATA_CONST.__const _ARFrontFacingImageSensorExposureDurationUserDefaultsKey
|| __DATA_CONST.__const _ARFrontFacingImageSensorFrameRateUserDefaultsKey
|| __DATA_CONST.__const _ARFrontFacingImageSensorISOUserDefaultsKey
|| __DATA_CONST.__const _ARFrontFacingImageSensorResolutionUserDefaultsKey
|| __DATA_CONST.__const _ARFrontFacingImageSensorVideoBinnedUserDefaultsKey
|| __DATA_CONST.__const _ARFrontFacingImageSensorWhiteBalanceUserDefaultsKey
|| __DATA_CONST.__const _ARGeoTrackingBypassChecksForANEDefaultsKey
|| __DATA_CONST.__const _ARGeoTrackingBypassChecksForGPSDefaultsKey
|| __DATA_CONST.__const _ARGeoTrackingGradualCorrectionIntervalDefaultsKey
|| __DATA_CONST.__const _ARGeoTrackingPosteriorVisualLocalizationCallIntervalDefaultsKey
|| __DATA_CONST.__const _ARGeoTrackingUseCLFusionUserDefaultsKey
|| __DATA_CONST.__const _ARGeoTrackingUseCMFusionUserDefaultsKey
|| __DATA_CONST.__const _ARGeoTrackingUseGradualCorrectionDefaultsKey
|| __DATA_CONST.__const _ARGeoTrackingUseVLTraceRecorderDefaultsKey
|| __DATA_CONST.__const _ARGeoTrackingVisualLocalizationCallIntervalDefaultsKey
|| __DATA_CONST.__const _ARGeoTrackingVisualLocalizationCallIntervalTimeThresholdDefaultsKey
|| __DATA_CONST.__const _ARImageCroppingTechniqueCroppedRect
|| __DATA_CONST.__const _ARImageDataDictionaryCMTimeKey
|| __DATA_CONST.__const _ARImageDataDictionaryCameraIntrinsicsKey
|| __DATA_CONST.__const _ARImageDataDictionaryExposureDurationKey
|| __DATA_CONST.__const _ARImageDataDictionaryTimestampKey
|| __DATA_CONST.__const _ARImageDetectionCustomAssetCatalogUserDefaultsKey
|| __DATA_CONST.__const _ARImageDetectionFixedPriorityProcessingQueueKey
|| __DATA_CONST.__const _ARImageDetectionPercentageThresholdKey
|| __DATA_CONST.__const _ARImageSensorAlwaysDiscardsLateCalibrationDataKey
|| __DATA_CONST.__const _ARImageSensorDropInitialFramesOutsideExposureTargetOffsetThresholdDefaultsKey
|| __DATA_CONST.__const _ARImageSensorInitialFrameDropMaxDroppedFramesCountDefaultsKey
|| __DATA_CONST.__const _ARImageSensorInitialFrameDropNegativeExposureTargetOffsetThresholdDefaultsKey
|| __DATA_CONST.__const _ARImageSensorInitialFrameDropPositiveExposureTargetOffsetThresholdDefaultsKey
|| __DATA_CONST.__const _ARImageSensorVideoHDRAllowedDefaultsKey
|| __DATA_CONST.__const _ARJasperEnabledUserDefaultsKey
|| __DATA_CONST.__const _ARJasperFramerateKey
|| __DATA_CONST.__const _ARJasperReplayFramerateKey
|| __DATA_CONST.__const _ARJasperTimeOfFlightProjectorMode
|| __DATA_CONST.__const _ARLeftBrowInner
|| __DATA_CONST.__const _ARLeftBrowMiddle
|| __DATA_CONST.__const _ARLeftBrowOuter
|| __DATA_CONST.__const _ARLeftEyeInnerCorner
|| __DATA_CONST.__const _ARLeftEyeLowerInner
|| __DATA_CONST.__const _ARLeftEyeLowerOuter
|| __DATA_CONST.__const _ARLeftEyeOuterCorner
|| __DATA_CONST.__const _ARLeftEyePupil
|| __DATA_CONST.__const _ARLeftEyeUpperInner
|| __DATA_CONST.__const _ARLeftEyeUpperOuter
|| __DATA_CONST.__const _ARLocationIntegrationSlamConfigurationName
|| __DATA_CONST.__const _ARMLImageDownScalingRegionOfInterest
|| __DATA_CONST.__const _ARMLImageDownScalingRotationOfResultTensorKey
|| __DATA_CONST.__const _ARMattingDepthDilationRadius
|| __DATA_CONST.__const _ARMattingDepthScale
|| __DATA_CONST.__const _ARMattingDisableSoftEdges
|| __DATA_CONST.__const _ARMattingEpsilon
|| __DATA_CONST.__const _ARMattingErosionRadius
|| __DATA_CONST.__const _ARMattingGuideDoubleMLResolutionForIPad
|| __DATA_CONST.__const _ARMattingUncertaintyRadius
|| __DATA_CONST.__const _ARMattingUseTemporalSmoothing
|| __DATA_CONST.__const _ARMattingUsesTemporalHandsSegmentation
|| __DATA_CONST.__const _ARMeasureAppSlamConfigurationName
|| __DATA_CONST.__const _ARMotionSensorMagnetometerEnabledUserDefaultsKey
|| __DATA_CONST.__const _ARMotionSensorSampleRateUserDefaultsKey
|| __DATA_CONST.__const _ARMouthCenterLower
|| __DATA_CONST.__const _ARMouthCenterPhiltrum
|| __DATA_CONST.__const _ARMouthInnerDown
|| __DATA_CONST.__const _ARMouthInnerDownLeft
|| __DATA_CONST.__const _ARMouthInnerDownRight
|| __DATA_CONST.__const _ARMouthInnerUp
|| __DATA_CONST.__const _ARMouthInnerUpLeft
|| __DATA_CONST.__const _ARMouthInnerUpRight
|| __DATA_CONST.__const _ARMouthLeftCorner
|| __DATA_CONST.__const _ARMouthLeftDown1
|| __DATA_CONST.__const _ARMouthLeftDown2
|| __DATA_CONST.__const _ARMouthLeftPhiltrum
|| __DATA_CONST.__const _ARMouthLeftUp1
|| __DATA_CONST.__const _ARMouthLeftUp2
|| __DATA_CONST.__const _ARMouthRightCorner
|| __DATA_CONST.__const _ARMouthRightDown1
|| __DATA_CONST.__const _ARMouthRightDown2
|| __DATA_CONST.__const _ARMouthRightPhiltrum
|| __DATA_CONST.__const _ARMouthRightUp1
|| __DATA_CONST.__const _ARMouthRightUp2
|| __DATA_CONST.__const _ARMulticamModeEnabledUserDefaultKey
|| __DATA_CONST.__const _ARNoseAlaLeft1
|| __DATA_CONST.__const _ARNoseAlaLeft2
|| __DATA_CONST.__const _ARNoseAlaRight1
|| __DATA_CONST.__const _ARNoseAlaRight2
|| __DATA_CONST.__const _ARNoseBaseCenter
|| __DATA_CONST.__const _ARNoseBaseCenterLeft
|| __DATA_CONST.__const _ARNoseBaseCenterRight
|| __DATA_CONST.__const _ARNoseBaseLeft
|| __DATA_CONST.__const _ARNoseBaseRight
|| __DATA_CONST.__const _ARNoseRidge1
|| __DATA_CONST.__const _ARNoseRidge2
|| __DATA_CONST.__const _ARNoseRidgeRoot
|| __DATA_CONST.__const _ARNoseRidgeTip
|| __DATA_CONST.__const _ARObjectDetectionFixedPriorityProcessingQueueKey
|| __DATA_CONST.__const _ARObjectDetectionRegionProposalModel
|| __DATA_CONST.__const _ARObjectScanningSlamConfigurationName
|| __DATA_CONST.__const _ARParentImageSensorAlwaysAttemptAVCaptureSessionFailureRecoveryDefaultsKey
|| __DATA_CONST.__const _ARParentImageSensorAttemptAVCaptureSessionFailureRecoveryAfterBackgroundDefaultsKey
|| __DATA_CONST.__const _ARPersonDetectionTechniqueMergeLargelyOverlappingBoundingBoxes
|| __DATA_CONST.__const _ARPersonDetectionTechniqueRenderBoundingBoxesIntoCapturedImage
|| __DATA_CONST.__const _ARPersonOcclusionOptimizationStrategyKey
|| __DATA_CONST.__const _ARPersonOcclusionParentTechniqueShouldDropFramesWhenBusy
|| __DATA_CONST.__const _ARPixelBufferBytesPerRow
|| __DATA_CONST.__const _ARPixelBufferData
|| __DATA_CONST.__const _ARPixelBufferFormat
|| __DATA_CONST.__const _ARPixelBufferHeight
|| __DATA_CONST.__const _ARPixelBufferWidth
|| __DATA_CONST.__const _ARPlaneEstimationAnchorRotationKey
|| __DATA_CONST.__const _ARPlaneEstimationDetectionMethodDefaultsKey
|| __DATA_CONST.__const _ARPlaneEstimationEnableLowQosSchedulingUserDefaultsKey
|| __DATA_CONST.__const _ARPlaneEstimationEnableMLOnANEDevicesUserDefaultsKey
|| __DATA_CONST.__const _ARPlaneEstimationInverseDepthDetectorEnabledKey
|| __DATA_CONST.__const _ARPlaneEstimationLineFeaturesAlwaysOnUserDefaultsKey
|| __DATA_CONST.__const _ARPlaneEstimationMinimumDetectionCountUserDefaultsKey
|| __DATA_CONST.__const _ARPlaneEstimationMinimumVergenceAngleUserDefaultsKey
|| __DATA_CONST.__const _ARPlaneEstimationNormalsKernelSizeKey
|| __DATA_CONST.__const _ARPrintColorBlue
|| __DATA_CONST.__const _ARPrintColorBold
|| __DATA_CONST.__const _ARPrintColorBoldRed
|| __DATA_CONST.__const _ARPrintColorBoldUnderlineBlue
|| __DATA_CONST.__const _ARPrintColorGreen
|| __DATA_CONST.__const _ARPrintColorNormal
|| __DATA_CONST.__const _ARPrintColorPurple
|| __DATA_CONST.__const _ARPrintColorRed
|| __DATA_CONST.__const _ARPrintColorYellow
|| __DATA_CONST.__const _ARRayCastingUsesAccuratePlaneExtentUserDefaultsKey
|| __DATA_CONST.__const _ARRecordingTechniqueRecordPearlDepthDataUserDefaultsKey
|| __DATA_CONST.__const _ARReferenceObjectArchiveExtension
|| __DATA_CONST.__const _ARReplaySensorCropFramesUserDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorDeterministicModeUseMovieFPSUserDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorDeterministicModeUserDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorDisplaySynchronizationMarkerDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorDisplaySynchronizationMarkerFrameCountDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorFilePathAdvanceFramesPerSecondMultiplierUserDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorFilePathAdvanceToFrameUserDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorFilePathNextFrameIndexUserDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorReplayPearlDepthDataUserDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorReplayVisionDataUserDefaultsKey
|| __DATA_CONST.__const _ARRightBrowInner
|| __DATA_CONST.__const _ARRightBrowMiddle
|| __DATA_CONST.__const _ARRightBrowOuter
|| __DATA_CONST.__const _ARRightEyeInnerCorner
|| __DATA_CONST.__const _ARRightEyeLowerInner
|| __DATA_CONST.__const _ARRightEyeLowerOuter
|| __DATA_CONST.__const _ARRightEyeOuterCorner
|| __DATA_CONST.__const _ARRightEyePupil
|| __DATA_CONST.__const _ARRightEyeUpperInner
|| __DATA_CONST.__const _ARRightEyeUpperOuter
|| __DATA_CONST.__const _ARSCNViewAttemptRenderSynchronisationARFrame
|| __DATA_CONST.__const _ARSCNViewRenderRawSceneUnderstandingImage
|| __DATA_CONST.__const _ARSCNViewRendersCameraGrain
|| __DATA_CONST.__const _ARSCNViewRendersMotionBlur
|| __DATA_CONST.__const _ARSceneReconstructionBucketsOrderOfMagnitudeKey
|| __DATA_CONST.__const _ARSceneReconstructionEnableKeyVolPipelineUserDefaultKey
|| __DATA_CONST.__const _ARSceneReconstructionEnableLowQosSchedulingUserDefaultKey
|| __DATA_CONST.__const _ARSceneReconstructionEnableMeshPlaneHarmonyDefaultKey
|| __DATA_CONST.__const _ARSceneReconstructionEnableOccupancyMappingUserDefaultKey
|| __DATA_CONST.__const _ARSceneReconstructionShouldWaitTillVIOIsStableUserDefaultKey
|| __DATA_CONST.__const _ARSceneReconstructionVoxelSizeUserDefaultKey
|| __DATA_CONST.__const _ARSemanticSegmentationUncertaintyThresholdUserDefaultKey
|| __DATA_CONST.__const _ARServiceNameControl
|| __DATA_CONST.__const _ARServiceNameGeoTracking
|| __DATA_CONST.__const _ARServiceNameLocation
|| __DATA_CONST.__const _ARServiceNameVisualLogger
|| __DATA_CONST.__const _ARSessionCameraPositionUserDefaultsKey
|| __DATA_CONST.__const _ARSessionDisableSessionMetricsReporting
|| __DATA_CONST.__const _ARSessionFeaturePointAccumulationCount
|| __DATA_CONST.__const _ARSessionForceRecordingDefaultsKey
|| __DATA_CONST.__const _ARSessionMirroredFrameOutputUserDefaultsKey
|| __DATA_CONST.__const _ARSessionQATracingDataFilePathDefaultsKey
|| __DATA_CONST.__const _ARSessionQATracingDumpSemanticSegmantationData
|| __DATA_CONST.__const _ARSessionQATracingEnabledUserDefaultsKey
|| __DATA_CONST.__const _ARSessionQATracingForceQuitAppUserDefaultsKey
|| __DATA_CONST.__const _ARSessionQATracingFramesLabelOffsetUserDefaultsKey
|| __DATA_CONST.__const _ARSessionQATracingScreenRecordingDefaultsKey
|| __DATA_CONST.__const _ARSessionRecordingFilePathDefaultsKey
|| __DATA_CONST.__const _ARSessionReplayFilePathManuallyUserDefaultsKey
|| __DATA_CONST.__const _ARSessionReplayFilePathUserDefaultsKey
|| __DATA_CONST.__const _ARSessionSaveConfigurationDotFile
|| __DATA_CONST.__const _ARSessionUseIOKitUserDefaultsKey
|| __DATA_CONST.__const _ARSkeletonJointNameHead
|| __DATA_CONST.__const _ARSkeletonJointNameLeftFoot
|| __DATA_CONST.__const _ARSkeletonJointNameLeftHand
|| __DATA_CONST.__const _ARSkeletonJointNameLeftShoulder
|| __DATA_CONST.__const _ARSkeletonJointNameRightFoot
|| __DATA_CONST.__const _ARSkeletonJointNameRightHand
|| __DATA_CONST.__const _ARSkeletonJointNameRightShoulder
|| __DATA_CONST.__const _ARSkeletonJointNameRoot
|| __DATA_CONST.__const _ARSkipCrashOnARCrash
|| __DATA_CONST.__const _ARStatusLoggingTypeInterval
|| __DATA_CONST.__const _ARStatusLoggingTypeUpdate
|| __DATA_CONST.__const _ARTestUserDefaultsKey
|| __DATA_CONST.__const _ARTimeOfFlightProjectorModeHighQualityMacro
|| __DATA_CONST.__const _ARTimeOfFlightProjectorModeNone
|| __DATA_CONST.__const _ARTimeOfFlightProjectorModeNormal
|| __DATA_CONST.__const _ARTimeOfFlightProjectorModeNormalShortHybrid
|| __DATA_CONST.__const _ARTimeOfFlightProjectorModeShortRange
|| __DATA_CONST.__const _ARUseCacheForUserDefaults
|| __DATA_CONST.__const _ARWorldTrackingBackUltraWideCalibrationParametersUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingBackWideCalibrationParametersUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingCollaborativeMappingStatisticsDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingDeviceModelUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingEnableMLCMRelocalizationUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingEnableTempMappingDirectoryDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingForceDisableFrontCameraDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingIMUCalibrationParametersUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingLineFeaturesAlwaysOnUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingLineFeaturesUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingMLRelocalizationModeDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingMinVergenceAngleUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingParticipantAnchorsUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingPoseGraphUpdatesUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingResultLatencyUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingSLAMConfigurationUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingSimluateHWFeatureDetectionDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingTransformToExternalSubmapDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingUseFixedIntrinsicsUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingUseLACCIfAvailableDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingUseNewCV3DApisUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingUseUltraWideDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingVisionDataUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingWarningSoundsUserDefaultsKey
|| __DATA_CONST.__const _AVCaptureDeviceTypeBuiltInSuperWideAngleCameraForReplayBackwardsCompatibility
|| __DATA_CONST.__const _AVMetadataIdentifierCVPixelBufferAttachment
|| __DATA_CONST.__const _AVMetadataIdentifierIMUDataType
|| __DATA_CONST.__const _AVMetadataIdentifierJasperCalibrationData
|| __DATA_CONST.__const _AVMetadataIdentifierPrefixResultData
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARAccelerometerData
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARCustomData
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARDeviceOrientationData
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARDeviceString
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARGyroscopeData
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARImageData
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARKitVersion
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeAROSVersion
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARSensorDataTypeInformation
|| __DATA_CONST.__const _AVMetadataIdentifierRawAccelerometerReadings
|| __DATA_CONST.__const _AVMetadataIdentifierRawDeviceMotionReadings
|| __DATA_CONST.__const _AVMetadataIdentifierRawGyroscopeReadings
|| __DATA_CONST.__const _AVMetadataIdentifierRawLocationReadings
|| __DATA_CONST.__const _AVMetadataIdentifierStreamDataType
|| __DATA_CONST.__const _AVStreamIdentifierQuickTimeARAudio
|| __DATA_CONST.__const _AVStreamIdentifierQuickTimeARImageData
|| __DATA_CONST.__const _CA_EVENT_ALTITUDE_LOOKUP
|| __DATA_CONST.__const _CA_EVENT_ALTITUDE_LOOKUP_BUNDLEID_STR
|| __DATA_CONST.__const _CA_EVENT_ALTITUDE_LOOKUP_DURATION_FLT
|| __DATA_CONST.__const _CA_EVENT_ALTITUDE_LOOKUP_RESULT_STR
|| __DATA_CONST.__const _CA_EVENT_BODYTRACKING
|| __DATA_CONST.__const _CA_EVENT_BODYTRACKING_FIELD_BUNDLEID_STR
|| __DATA_CONST.__const _CA_EVENT_BODYTRACKING_FIELD_skeletonScaleEstimationEnabled
|| __DATA_CONST.__const _CA_EVENT_COACHINGOVERLAY
|| __DATA_CONST.__const _CA_EVENT_COACHINGOVERLAY_FIELD_ACTIVATIONCOUNT_INT
|| __DATA_CONST.__const _CA_EVENT_COACHINGOVERLAY_FIELD_BUNDLEID_STRING
|| __DATA_CONST.__const _CA_EVENT_COACHINGOVERLAY_FIELD_GOAL_INT
|| __DATA_CONST.__const _CA_EVENT_FACETRACKING
|| __DATA_CONST.__const _CA_EVENT_FACETRACKING_FIELD_BUNDLEID_STR
|| __DATA_CONST.__const _CA_EVENT_FACETRACKING_FIELD_maximumNumberOfTrackedFaces_INT
|| __DATA_CONST.__const _CA_EVENT_FACETRACKING_FIELD_worldTrackingEnabled_BOOL
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_BUNDLEID_STRING
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_angleBackToDown_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_angleFirstUp_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_clFirstDem_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_clFirstGps_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_clFirstNonGps_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_failureReason_INT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_firstImage_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_highAccuracyFramePercentage_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_initializationTime_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_localizationTime_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_localized_BOOL
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_lowAccuracyFramePercentage_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_maxGeoAnchorDistance_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_meanGeoAnchorDistance_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_mediumAccuracyFramePercentage_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_minGeoAnchorDistance_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_numberOfGeoAnchorsWithUserDefinedAltitude_INT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_numberOfGeoAnchors_INT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_numberOfLocalizations_INT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_sessionEnd_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_trueNorthUnavailable_BOOL
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_vioBackToLimited_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_vioFirstNormalPose_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_vioFirstPose_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_vlAfterAvailabilityCall_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_vlAfterLocalizationCall_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_vlBeforeAvailabilityCall_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_vlBeforeLocalizationCall_FLT
|| __DATA_CONST.__const _CA_EVENT_GEOTRACKING_FIELD_vlFirstNonLocalized_FLT
|| __DATA_CONST.__const _CA_EVENT_HITTEST
|| __DATA_CONST.__const _CA_EVENT_HITTEST_FIELD_BUNDLEID_STR
|| __DATA_CONST.__const _CA_EVENT_HITTEST_FIELD_HITTEST_PER_SECOND
|| __DATA_CONST.__const _CA_EVENT_HITTEST_FIELD_TYPE_INT
|| __DATA_CONST.__const _CA_EVENT_IMAGETRACKING
|| __DATA_CONST.__const _CA_EVENT_IMAGETRACKING_FIELD_BUNDLEID_STR
|| __DATA_CONST.__const _CA_EVENT_IMAGETRACKING_FIELD_maximumNumberOfTrackedImages_INT
|| __DATA_CONST.__const _CA_EVENT_IMAGETRACKING_FIELD_numberOfTrackingImages_INT
|| __DATA_CONST.__const _CA_EVENT_RAYCAST
|| __DATA_CONST.__const _CA_EVENT_RAYCAST_FIELD_BUNDLEID_STR
|| __DATA_CONST.__const _CA_EVENT_RAYCAST_FIELD_alignment_INT
|| __DATA_CONST.__const _CA_EVENT_RAYCAST_FIELD_isTracked_BOOL
|| __DATA_CONST.__const _CA_EVENT_RAYCAST_FIELD_target_INT
|| __DATA_CONST.__const _CA_EVENT_REPLAY
|| __DATA_CONST.__const _CA_EVENT_REPLAY_FIELD_BUNDLEID_STRING
|| __DATA_CONST.__const _CA_EVENT_REPLAY_FIELD_FORMAT_STRING
|| __DATA_CONST.__const _CA_EVENT_REPLAY_FIELD_RECORDINGDEVICE_ARKITVERSION_STRING
|| __DATA_CONST.__const _CA_EVENT_REPLAY_FIELD_RECORDINGDEVICE_MODEL_STRING
|| __DATA_CONST.__const _CA_EVENT_REPLAY_FIELD_RECORDINGDEVICE_OSVERSION_STRING
|| __DATA_CONST.__const _CA_EVENT_REPLAY_FIELD_RECORDING_FILENAME_STRING
|| __DATA_CONST.__const _CA_EVENT_SESSION
|| __DATA_CONST.__const _CA_EVENT_SESSIONERROR
|| __DATA_CONST.__const _CA_EVENT_SESSIONERROR_FIELD_BUNDLEID_STR
|| __DATA_CONST.__const _CA_EVENT_SESSIONERROR_FIELD_errorCodeUnderlyingErrorCode_INT
|| __DATA_CONST.__const _CA_EVENT_SESSIONERROR_FIELD_errorCodeUnderlyingErrorDomain_STR
|| __DATA_CONST.__const _CA_EVENT_SESSIONERROR_FIELD_errorCode_INT
|| __DATA_CONST.__const _CA_EVENT_SESSIONERROR_FIELD_sessionDuration
|| __DATA_CONST.__const _CA_EVENT_SESSION_FIELD_AF_BOOL
|| __DATA_CONST.__const _CA_EVENT_SESSION_FIELD_BUNDLEID_STR
|| __DATA_CONST.__const _CA_EVENT_SESSION_FIELD_CONFIG_STR
|| __DATA_CONST.__const _CA_EVENT_SESSION_FIELD_DURATION_FLT
|| __DATA_CONST.__const _CA_EVENT_SESSION_FIELD_FRAMESEMANTICS_INT
|| __DATA_CONST.__const _CA_EVENT_SESSION_FIELD_RENDERER_STR
|| __DATA_CONST.__const _CA_EVENT_SESSION_FIELD_TIME_TO_THROTTLE
|| __DATA_CONST.__const _CA_EVENT_VIDEOFORMAT
|| __DATA_CONST.__const _CA_EVENT_VIDEOFORMAT_FIELD_BUNDLEID_STR
|| __DATA_CONST.__const _CA_EVENT_VIDEOFORMAT_FIELD_CONFIG_STR
|| __DATA_CONST.__const _CA_EVENT_VIDEOFORMAT_FIELD_FRAMERATE_INT
|| __DATA_CONST.__const _CA_EVENT_VIDEOFORMAT_FIELD_HIRESFRAMECAPTURECOUNT_INT
|| __DATA_CONST.__const _CA_EVENT_VIDEOFORMAT_FIELD_NONBINNED_BOOL
|| __DATA_CONST.__const _CA_EVENT_VIDEOFORMAT_FIELD_RESOLUTION_STR
|| __DATA_CONST.__const _CA_EVENT_VIDEOFORMAT_FIELD_VIDEOHDRSUPPORTED_BOOL
|| __DATA_CONST.__const _CA_EVENT_VIDEOFORMAT_FIELD_captureDevicePosition
|| __DATA_CONST.__const _CA_EVENT_WORLDMAP_LOADING
|| __DATA_CONST.__const _CA_EVENT_WORLDMAP_LOADING_FIELD_BUNDLEID_STR
|| __DATA_CONST.__const _CA_EVENT_WORLDMAP_LOADING_FIELD_duration_float
|| __DATA_CONST.__const _CA_EVENT_WORLDMAP_LOADING_FIELD_success_bool
|| __DATA_CONST.__const _CA_EVENT_WORLDMAP_SAVING
|| __DATA_CONST.__const _CA_EVENT_WORLDMAP_SAVING_FIELD_BUNDLEID_STR
|| __DATA_CONST.__const _CA_EVENT_WORLDMAP_SAVING_FIELD_mappingStatus_int
|| __DATA_CONST.__const _CA_EVENT_WORLDMAP_SAVING_FIELD_numberOfFeaturePoints_int
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_BUNDLEID_STR
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_appClipCodeTrackingEnabled_BOOL
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_area_FLT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_automaticImageScaleEstimationEnabled_BOOL
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_badFramePercentage10s_FLT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_badFramePercentage60s_FLT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_badFramePercentageMoreThan60s_FLT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_collaborativeSessionEnabled_BOOL
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_collaborativeSessionMaximumNumberOfUsers_INT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_duration_FLT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_environmentTexturingHdrEnabled_BOOL
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_environmentTexturingMode_INT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_frameSemantics_INT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_heightDelta_FLT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_maximumNumberOfTrackedImages_INT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_numberOfCameraSwitches_INT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_numberOfDetectedPlanes_INT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_numberOfDetectionImages_INT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_numberOfDetectionObjects_INT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_numberOfRaycasts_INT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_numberOfReinitializationAttempts_INT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_planeDetectionMode_INT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_sceneReconstruction_INT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_timeToThrottle_FLT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_userFaceTrackingEnabled_BOOL
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_vioInitializationTime_FLT
|| __DATA_CONST.__const _CA_EVENT_WORLDTRACKING_FIELD_vioMapSize_INT
|| __DATA_CONST.__const _SESSION_DID_PAUSE_DARWIN_NOTIFICATION
|| __DATA_CONST.__const _SESSION_DID_RUN_DARWIN_NOTIFICATION
|| __DATA_CONST.__const _kARLegacyJasperStreamIdentifier
|| __DATA_CONST.__const _kARManagedAssetsGroupKey
|| __DATA_CONST.__const _kARManagedAssetsReconDirectory
|| __DATA_CONST.__const _kARManagedAssetsSLAMDirectory
|| __DATA_CONST.__const _kAlgorithmInfoExpectedFrequencyKey
|| __DATA_CONST.__const _kAlgorithmInfoNameKey
|| __DATA_DIRTY.__common __initialRaycastResults
|| __DATA_DIRTY.__common __resultsHistory
|| __DATA_DIRTY.__common __targetRaycastResultUpdates
|| __DATA_DIRTY.__common __trackedRaycastSemaphore
|| __DATA_DIRTY.__common __trackedRaycasts
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARBKSAccelerometer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARFrameContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARImageBasedTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARKitUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARQATracer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARReferenceObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARSessionMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARTrackedRaycastPostProcessor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARWorldTrackingTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__ARSessionMetricsDefaultReporter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARBKSAccelerometer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARFrameContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARImageBasedTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARKitUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARQATracer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARReferenceObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARSessionMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARTrackedRaycastPostProcessor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARWorldTrackingTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__ARSessionMetricsDefaultReporter
|| __TEXT.__const _ARErrorCodeFaceTrackingFailed
|| __TEXT.__const _ARErrorCodeImageDetectionQualityEstimationFailed
|| __TEXT.__const _ARErrorCodePhotoLibraryAccessUnauthorized
|| __TEXT.__const _ARErrorCodeRecordingFailed
|| __TEXT.__const _ARErrorCodeTechniqueFailed
|| __TEXT.__const _ARErrorCodeUnsupportedCaptureSessionConfiguration
|| __TEXT.__const _ARErrorCodeUnsupportedSensorData
|| __TEXT.__const _ARErrorCodeWorldTrackingExcessiveMotion
|| __TEXT.__const _ARErrorCodeWorldTrackingInsufficientFeatures
|| __TEXT.__const _ARErrorCodeWorldTrackingLowLight
|| __TEXT.__const _ARErrorEspressoModelLoadingFailed
|| __TEXT.__const _ARKitCoreVersionNumber
|| __TEXT.__const _ARKitCoreVersionString
|| __TEXT.__const _ARPlaneDetectionAllWithoutAnchors
|| __TEXT.__const _ARPlaneDetectionOptionGridExtent
|| __TEXT.__const _ARPlaneDetectionOptionWorldAligned
|| __TEXT.__const _ARRigDependencyTable
|| __TEXT.__const _ARRigDependencyTableColCount
|| __TEXT.__const _ARRigDependencyTableRowCount
|| __TEXT.__const _ARRigInputJointsCount
|| __TEXT.__const _ARRigInputJointsDependencies
|| __TEXT.__const _ARRigOutputJointsCount
|| __TEXT.__const _ARSceneReconstructionKeyframePointCloud
|| __TEXT.__const _ARSceneReconstructionKeyframePointCloudWithColor
|| __TEXT.__const _ARTrackedRaycastOrientationChangeAllowanceInDegreesPerSecond
|| __TEXT.__const _ARTrackedRaycastResultSmoothingOrientationToleranceInRadians
|| __TEXT.__const _ARTrackedRaycastResultSmoothingPositionToleranceInMeters
|| __TEXT.__const _ARTrackedRaycastUpdateFramerate
|| __TEXT.__const _ARVideoTransformLandscapeLeft
|| __TEXT.__const _ARVideoTransformLandscapeRight
|| __TEXT.__const _ARVideoTransformPortrait
|| __TEXT.__const _ARVideoTransformPortraitUpsideDown
|| __TEXT.__const _ARWorldAlignmentGeoTracking
|| __TEXT.__const _ARWorldTrackingResultLatencyDefault
|| __TEXT.__const _squash
|| __TEXT.__text _ARAVCaptureDevicePositionToString
|| __TEXT.__text _ARAddJasperTechniquesToParent
|| __TEXT.__text _ARAddNonJasperSemanticsToParent
|| __TEXT.__text _ARAddScalingTechniquesToTechniques
|| __TEXT.__text _ARAdjustIntrincisForMirroring
|| __TEXT.__text _ARAdjustIntrincisForOrientation
|| __TEXT.__text _ARAdjustIntrinsicsForViewportSize
|| __TEXT.__text _ARAnchorToECEFTransform
|| __TEXT.__text _ARAnchorsForPoseGraphUpdates
|| __TEXT.__text _ARAnchorsForPublicDelegate
|| __TEXT.__text _ARAnchorsFromCV3DAnchorsArray
|| __TEXT.__text _ARAppendStringToStream
|| __TEXT.__text _ARAppleNeuralEngine
|| __TEXT.__text _ARApprovedDecoderClasses
|| __TEXT.__text _ARBucketsCountForSceneReconstructionOptions
|| __TEXT.__text _ARBucketsOrderOfMagnitudeForSceneReconstructionOptions
|| __TEXT.__text _ARBufferPopulationMonitorSignpostTypeForCaptureDevice
|| __TEXT.__text _ARBytesPerElement
|| __TEXT.__text _ARC3DCircumcircleContainsPoint
|| __TEXT.__text _ARC3DCircumcircleContainsPoint_BROKEN
|| __TEXT.__text _ARC3DComputeLinesIntersection
|| __TEXT.__text _ARC3DComputeLinesIntersectionForPoints
|| __TEXT.__text _ARC3DEdgeCrossingSegment
|| __TEXT.__text _ARC3DLinkFromTriangleToTriangle
|| __TEXT.__text _ARC3DLinkFromTriangleWithEdge
|| __TEXT.__text _ARC3DLinkIndexFromTriangleToTriangle
|| __TEXT.__text _ARC3DLinkIndicesFromTriangleToTriangle
|| __TEXT.__text _ARC3DNeighborSharingVertex
|| __TEXT.__text _ARC3DNeighborSharingVertices
|| __TEXT.__text _ARC3DPointFallsOnTriangleEdge
|| __TEXT.__text _ARC3DPointFallsOnTriangleEdgeAndLinks
|| __TEXT.__text _ARC3DSegmentIntersectsSegment
|| __TEXT.__text _ARC3DShapeConnectedComponentTriangulate
|| __TEXT.__text _ARC3DShapeConnectedComponentTriangulatePseudopolygon
|| __TEXT.__text _ARC3DShapeTriangulationAddEdge
|| __TEXT.__text _ARC3DShapeTriangulationAddPoint
|| __TEXT.__text _ARC3DShapeTriangulationCheckConsistency
|| __TEXT.__text _ARC3DShapeTriangulationClean
|| __TEXT.__text _ARC3DShapeTriangulationGetNewTriangle
|| __TEXT.__text _ARC3DShapeTriangulationInit
|| __TEXT.__text _ARC3DShapeTriangulationListCreate
|| __TEXT.__text _ARC3DShapeTriangulationListDestroy
|| __TEXT.__text _ARC3DShapeTriangulationListInsert
|| __TEXT.__text _ARC3DShapeTriangulationResolveSwaps
|| __TEXT.__text _ARC3DShapeTriangulationStackCreate
|| __TEXT.__text _ARC3DShapeTriangulationStackDestroy
|| __TEXT.__text _ARC3DShapeTriangulationStackPop
|| __TEXT.__text _ARC3DShapeTriangulationStackPush
|| __TEXT.__text _ARC3DShapeTriangulationTriangleArea
|| __TEXT.__text _ARC3DShapeTriangulationTriangleContainingPoint
|| __TEXT.__text _ARC3DShapeTriangulationTriangleContainingVertex
|| __TEXT.__text _ARC3DShapeTriangulationTriangleCrossesSegment
|| __TEXT.__text _ARC3DShapeTriangulationTriangleMark
|| __TEXT.__text _ARC3DShapeTriangulationTriangleSplitInside
|| __TEXT.__text _ARC3DShapeTriangulationTriangleSplitOnEdge
|| __TEXT.__text _ARC3DVertexNotSharedByTriangles
|| __TEXT.__text _ARCCT2RGB
|| __TEXT.__text _ARCGImagePropertyOrientationFromUIDeviceOrientation
|| __TEXT.__text _ARCGRectRotate
|| __TEXT.__text _ARCV3DColorComponentsForARKitSemantics
|| __TEXT.__text _ARCV3DColorComponentsForARKitSemanticsLUT8Elements
|| __TEXT.__text _ARCV3DColorComponentsForRawSemantics
|| __TEXT.__text _ARCameraDirectionFromCMAttitude
|| __TEXT.__text _ARCameraFieldOfViewFromIntrinsics
|| __TEXT.__text _ARCameraImageToViewTransform
|| __TEXT.__text _ARCameraToDisplayRotation
|| __TEXT.__text _ARCameraToJasperExtrinsics
|| __TEXT.__text _ARCameraToWorldTransformFromCMRotationMatrix
|| __TEXT.__text _ARCheckConfidenceJasper
|| __TEXT.__text _ARColorFromPlaneClassification
|| __TEXT.__text _ARConvertDepthFloatingPointBufferToFixedPointUnsigned13_3Buffer
|| __TEXT.__text _ARConvertFixedPointUnsigned13_3ToDepthFloat32Buffer
|| __TEXT.__text _ARConvertSecondsToTicks
|| __TEXT.__text _ARConvertTicksToSeconds
|| __TEXT.__text _ARCorrectCVPixelBufferOrientation
|| __TEXT.__text _ARCreateCVPixelBufferFromPool
|| __TEXT.__text _ARCreateCVPixelBufferFromPoolWithZeroCopyOption
|| __TEXT.__text _ARCreateDispatchSourceForSignalWithHandler
|| __TEXT.__text _ARCreateDownScaledGrayscaleImageAndMask
|| __TEXT.__text _ARCreateFixedPriorityDispatchQueue
|| __TEXT.__text _ARCreateFixedPriorityDispatchQueueWithQOS
|| __TEXT.__text _ARCreateFixedPriorityPthreadQueue
|| __TEXT.__text _ARCreateInstanceOfType
|| __TEXT.__text _ARCreateNonFixedPriorityDispatchQueue
|| __TEXT.__text _ARCreateOBJStringForMeshAnchors
|| __TEXT.__text _ARCreateOBJStringForPlaneAnchors
|| __TEXT.__text _ARCreatePixelBufferFromCGImage
|| __TEXT.__text _ARCreatePixelBufferFromSourceWithPixelConverter
|| __TEXT.__text _ARCreatePixelBufferWithConversion
|| __TEXT.__text _ARCreatePixelBufferWithPaddingToFillMinimumDimension
|| __TEXT.__text _ARCreateSynchronizationMarker
|| __TEXT.__text _ARCreateTemporaryDirectory
|| __TEXT.__text _ARCreateTexture
|| __TEXT.__text _ARCreateTransactionForService
|| __TEXT.__text _ARCubemapSimilarity
|| __TEXT.__text _ARDepth16ImageAverageDepth
|| __TEXT.__text _ARDepth32BitsBufferToBGRA
|| __TEXT.__text _ARDepth32BitsBufferToBGRAWithScaling
|| __TEXT.__text _ARDepth32ImageAverageDepth
|| __TEXT.__text _ARDepthRepresentationDictionary
|| __TEXT.__text _ARDepthRepresentationDictionaryClassList
|| __TEXT.__text _ARDeviceANEVersion
|| __TEXT.__text _ARDeviceClass
|| __TEXT.__text _ARDeviceHasBackCamera
|| __TEXT.__text _ARDeviceHasFrontCamera
|| __TEXT.__text _ARDeviceHasGPSCapability
|| __TEXT.__text _ARDeviceHasHomeButton
|| __TEXT.__text _ARDeviceHasInternetConnectivity
|| __TEXT.__text _ARDeviceHasIsland
|| __TEXT.__text _ARDeviceIsiPad
|| __TEXT.__text _ARDeviceName
|| __TEXT.__text _ARDeviceOrientationForCameraPositionAndVideoTransform
|| __TEXT.__text _ARDeviceRequiresFrameTrendControllerWorkaround
|| __TEXT.__text _ARDeviceString
|| __TEXT.__text _ARDeviceSupported
|| __TEXT.__text _ARDeviceSupportsJasper
|| __TEXT.__text _ARDeviceSupportsMulticamMode
|| __TEXT.__text _ARDeviceSupportsMulticamSessionWithVideoFormats
|| __TEXT.__text _ARDeviceSupportsMulticamWithTripleRGBStreaming
|| __TEXT.__text _ARDeviceSupportsSceneLuminanceEstimation
|| __TEXT.__text _ARDeviceSupportsUltraWideCamera
|| __TEXT.__text _ARDeviceUDID
|| __TEXT.__text _ARDictionaryFromAnchors
|| __TEXT.__text _ARDispatchAfterLeewayForTimeInterval
|| __TEXT.__text _ARDispatchQueueIsCurrentDispatchQueue
|| __TEXT.__text _ARDispatchQueueIsEqualToDispatchQueue
|| __TEXT.__text _ARDisplayCenterTransformForCaptureDevicePosition
|| __TEXT.__text _ARDrawNormalizedCGRectIntoYUVPixelBuffer
|| __TEXT.__text _ARECEFToENU
|| __TEXT.__text _ARECEFToLLA
|| __TEXT.__text _ARENUToECEF
|| __TEXT.__text _ARENUToECEFTransform
|| __TEXT.__text _AREarthMoversDistance
|| __TEXT.__text _AREqualTransforms
|| __TEXT.__text _ARErrorWithCodeAndUserInfo
|| __TEXT.__text _AREstimatedSceneLuminanceForCamera
|| __TEXT.__text _AREulerAnglesFromMatrix
|| __TEXT.__text _ARFaceLandmarkDataFromLabeledFacePosition
|| __TEXT.__text _ARFaceTrackingDevice
|| __TEXT.__text _ARFileDescriptorIsTTY
|| __TEXT.__text _ARFilterFaceTrackingPayload
|| __TEXT.__text _ARFixedIntrinsicsForBackUltraWideCamera640x480
|| __TEXT.__text _ARFrameworkVersions
|| __TEXT.__text _ARFrontFacingCameraFlip
|| __TEXT.__text _ARFrontWideCameraTransformFromBackWideAngleCameraTransform
|| __TEXT.__text _ARFrontWideCameraTransformFromBackWideAngleCameraTransformWithZFlip
|| __TEXT.__text _ARGetAnchorIdentifierFromCMData
|| __TEXT.__text _ARGetBundleIdentifierForPID
|| __TEXT.__text _ARGetCV3DCameraLensDistortionModelFromLensType
|| __TEXT.__text _ARGetCroppedRegionCenterCrop
|| __TEXT.__text _ARGetFallbackUndulationValue
|| __TEXT.__text _ARGetIntrinsicsFromCalibrationDictionary
|| __TEXT.__text _ARGetLensTypeFromCalibrationDictionary
|| __TEXT.__text _ARGetMemoryFootprint
|| __TEXT.__text _ARGetProcessNameForPID
|| __TEXT.__text _ARGetPropertiesForType
|| __TEXT.__text _ARGetRadialDistortionFromCalibrationDictionary
|| __TEXT.__text _ARGetSubclassesForClass
|| __TEXT.__text _ARGetSubclassesForClassAndImage
|| __TEXT.__text _ARGetSystemBootTime
|| __TEXT.__text _ARGetSystemUpTime
|| __TEXT.__text _ARGetSystemUpTimeIncludingSleep
|| __TEXT.__text _ARGetSystemUpTimeIncludingSleepAndDriftCorrection
|| __TEXT.__text _ARGetTangentialDistortionFromCalibrationDictionary
|| __TEXT.__text _ARGetTypeOfProperty
|| __TEXT.__text _ARGetValueOfProperty
|| __TEXT.__text _ARHasH10
|| __TEXT.__text _ARIMUtoCameraCoordinateTransform
|| __TEXT.__text _ARImageContextFromImageData
|| __TEXT.__text _ARInitializeHitTestIntent
|| __TEXT.__text _ARInitializeHitTestIntentWithExtentCheck
|| __TEXT.__text _ARInnerScaleFromMatrix
|| __TEXT.__text _ARInternalOSBuild
|| __TEXT.__text _ARInterpolateBetweenTransforms
|| __TEXT.__text _ARIntrinsicsFromDeviceFormat
|| __TEXT.__text _ARIntrinsicsFromTangent
|| __TEXT.__text _ARIntrinsicsFromTangents
|| __TEXT.__text _ARIsANEE5RTAvailable
|| __TEXT.__text _ARIsANEVersionEqualOrPriorToH12
|| __TEXT.__text _ARIsAirPlaneModeEnabled
|| __TEXT.__text _ARIsBoxInViewFrustum
|| __TEXT.__text _ARJasperWideCameraCalibration
|| __TEXT.__text _ARKitBundle
|| __TEXT.__text _ARKitCoreBuildVersionString
|| __TEXT.__text _ARKitCoreBundle
|| __TEXT.__text _ARKitUIBundle
|| __TEXT.__text _ARLFUToRUBCoordinateTransform
|| __TEXT.__text _ARLInfinityAngularDistance
|| __TEXT.__text _ARLInfinityDistance
|| __TEXT.__text _ARLLAToECEF
|| __TEXT.__text _ARLabHistogramCreate
|| __TEXT.__text _ARLibraryDirectory
|| __TEXT.__text _ARLinkedOnOrAfterAzul
|| __TEXT.__text _ARLinkedOnOrAfterAzulC
|| __TEXT.__text _ARLinkedOnOrAfterAzulE
|| __TEXT.__text _ARLinkedOnOrAfterPeace
|| __TEXT.__text _ARLinkedOnOrAfterPeaceE
|| __TEXT.__text _ARLinkedOnOrAfterSydney
|| __TEXT.__text _ARLinkedOnOrAfterYukon
|| __TEXT.__text _ARLoadExternalBundleByName
|| __TEXT.__text _ARLocationSensorDidOutputSensorDataClassApprovedList
|| __TEXT.__text _ARLocationSensorUpdateEstimationFromVIOPoseClassApprovedList
|| __TEXT.__text _ARLogInfoNoClassLongMessage
|| __TEXT.__text _ARMLDepthDataSourceDescription
|| __TEXT.__text _ARMLModelPath
|| __TEXT.__text _ARMSLToWGS84Altitude
|| __TEXT.__text _ARMTLPixelFormatFromOSType
|| __TEXT.__text _ARMakeSRT
|| __TEXT.__text _ARMapExposureOffset
|| __TEXT.__text _ARMapLightIntensity
|| __TEXT.__text _ARMatrix3x3CopyValues
|| __TEXT.__text _ARMatrix3x3Description
|| __TEXT.__text _ARMatrix3x3FromArray
|| __TEXT.__text _ARMatrix3x3FromColumnMajorFlatArray
|| __TEXT.__text _ARMatrix3x3FromMatrix4x4
|| __TEXT.__text _ARMatrix3x3FromNSData
|| __TEXT.__text _ARMatrix3x3FromRowMajorFlatArray
|| __TEXT.__text _ARMatrix3x3MakeColumnMajorTransform
|| __TEXT.__text _ARMatrix3x3MakeRowMajorTransform
|| __TEXT.__text _ARMatrix3x3MatlabDescription
|| __TEXT.__text _ARMatrix3x3RowMajorArray
|| __TEXT.__text _ARMatrix3x3ToColumnMajorFlatArray
|| __TEXT.__text _ARMatrix4x3Description
|| __TEXT.__text _ARMatrix4x3FromMatrix4x4
|| __TEXT.__text _ARMatrix4x3FromNSData
|| __TEXT.__text _ARMatrix4x3FromRowMajorFlatArray
|| __TEXT.__text _ARMatrix4x3Inverse
|| __TEXT.__text _ARMatrix4x3IsZero
|| __TEXT.__text _ARMatrix4x4ColumnMajorCopyValues
|| __TEXT.__text _ARMatrix4x4ColumnMajorRotationAndTranslation
|| __TEXT.__text _ARMatrix4x4ContainsNANValues
|| __TEXT.__text _ARMatrix4x4CopyToRowMajorFlatBuffer
|| __TEXT.__text _ARMatrix4x4CopyValues
|| __TEXT.__text _ARMatrix4x4Description
|| __TEXT.__text _ARMatrix4x4Dictionary
|| __TEXT.__text _ARMatrix4x4DoubleToFloat
|| __TEXT.__text _ARMatrix4x4FloatToDouble
|| __TEXT.__text _ARMatrix4x4FromCMRotationMatrix
|| __TEXT.__text _ARMatrix4x4FromColumnMajorFlatArray
|| __TEXT.__text _ARMatrix4x4FromDictionary
|| __TEXT.__text _ARMatrix4x4FromMatrix4x3
|| __TEXT.__text _ARMatrix4x4FromNSData
|| __TEXT.__text _ARMatrix4x4FromRotationAndTranslation
|| __TEXT.__text _ARMatrix4x4FromRowMajorFlatArray
|| __TEXT.__text _ARMatrix4x4FromRowMajorFlatBuffer
|| __TEXT.__text _ARMatrix4x4IsZero
|| __TEXT.__text _ARMatrix4x4MakeColumnMajorTransform
|| __TEXT.__text _ARMatrix4x4MakeColumnMajorTransformFromArray
|| __TEXT.__text _ARMatrix4x4MakeColumnMajorTransformFromArrayF
|| __TEXT.__text _ARMatrix4x4MakeRowMajorTransform
|| __TEXT.__text _ARMatrix4x4MatlabDescription
|| __TEXT.__text _ARMatrix4x4MirrorX
|| __TEXT.__text _ARMatrix4x4RowMajorCopyValues4x3
|| __TEXT.__text _ARMatrix4x4RowMajorRotationAndTranslation
|| __TEXT.__text _ARMatrix4x4ToColumnMajorFlatArray
|| __TEXT.__text _ARMatrix4x4ToColumnMajorFlatCArray
|| __TEXT.__text _ARMatrixFromScale
|| __TEXT.__text _ARMatrixIsZero
|| __TEXT.__text _ARMatrixMakeFrustum
|| __TEXT.__text _ARMatrixMakeLookAt
|| __TEXT.__text _ARMatrixMakePerspective
|| __TEXT.__text _ARMatrixPerspectiveFlipZ
|| __TEXT.__text _ARMeshAnchorFromMesh
|| __TEXT.__text _ARMeshAnchorFromMeshNoCopy
|| __TEXT.__text _ARMeshClassificationFromSemantic
|| __TEXT.__text _ARMetadataIdentifierForARRecordableResultsClass
|| __TEXT.__text _ARMetadataIdentifierForARSensorDataClass
|| __TEXT.__text _ARNeutralBodySkeleton3DLocalTransforms
|| __TEXT.__text _ARNeutralBodySkeleton3DModelTransforms
|| __TEXT.__text _ARNormalizedTransform
|| __TEXT.__text _AROSTypeFromMTLPixelFormat
|| __TEXT.__text _AROSTypeToString
|| __TEXT.__text _AROSVersionString
|| __TEXT.__text _AROverrideARAppleNeuralEngine
|| __TEXT.__text _AROverrideARDeviceHasGPSCapability
|| __TEXT.__text _AROverrideARDeviceHasHomeButton
|| __TEXT.__text _AROverrideARDeviceHasIsland
|| __TEXT.__text _AROverrideARDeviceIsiPad
|| __TEXT.__text _AROverrideARDeviceSupportsJasper
|| __TEXT.__text _AROverrideARUserDefaultsMulticamModeEnabled
|| __TEXT.__text _ARParseAndAddCameraCalibrationParameters
|| __TEXT.__text _ARParseAndAddImuCalibrationParameters
|| __TEXT.__text _ARPearlCameraSupported
|| __TEXT.__text _ARPixelBufferConvertBGRAToARGB
|| __TEXT.__text _ARPixelBufferConvertRGBAHalfTo128RGBAFloat
|| __TEXT.__text _ARPixelBufferConvertTwoComponent16HalfToRGBAHalf
|| __TEXT.__text _ARPixelBufferConvertYCbCrToARGB
|| __TEXT.__text _ARPixelBufferCopy
|| __TEXT.__text _ARPixelBufferFromDictionaryRepresentation
|| __TEXT.__text _ARPixelBufferGetMetadata
|| __TEXT.__text _ARPixelBufferGetSensorCropRect
|| __TEXT.__text _ARPixelBufferToDictionaryRepresentation
|| __TEXT.__text _ARPixelBufferWithCIImage
|| __TEXT.__text _ARPlaneClassificationForSceneUnderstandingLabel
|| __TEXT.__text _ARPointCovarianceJasper
|| __TEXT.__text _ARPointCovarianceVIOFeature
|| __TEXT.__text _ARPointVarianceJasper
|| __TEXT.__text _ARPointVarianceVIOFeature
|| __TEXT.__text _ARPowerUsageForPowerPressureLevel
|| __TEXT.__text _ARPowerUsageForThermalState
|| __TEXT.__text _ARPrimaryLightFromSphericalHarmonics
|| __TEXT.__text _ARPrintEscapeDisableAlternativeBuffer
|| __TEXT.__text _ARPrintEscapeEnableAlternativeBuffer
|| __TEXT.__text _ARPrintEscapeEraseScreen
|| __TEXT.__text _ARPrintEscapeMoveToLocation
|| __TEXT.__text _ARPrintToiTerm
|| __TEXT.__text _ARPrintUsageStrings
|| __TEXT.__text _ARQATraceableDefaultEntryForResultData
|| __TEXT.__text _ARQATraceableDefaultFormatForResultData
|| __TEXT.__text _ARRFUToRUBCoordinateTransform
|| __TEXT.__text _ARRGBFaceTrackingEnabled
|| __TEXT.__text _ARRadialDistortionForUltraWideCamera
|| __TEXT.__text _ARRandomBoxPointInWorldCoordinates
|| __TEXT.__text _ARReadDepthBufferFromFile
|| __TEXT.__text _ARRecreatePixelBufferPoolOnConfigurationChanges
|| __TEXT.__text _ARRecreatePixelBufferPoolOnConfigurationChangesWithZeroCopyOption
|| __TEXT.__text _ARReflectedLightMeterCalibrationConstantForDevice
|| __TEXT.__text _ARReleaseHitTestIntent
|| __TEXT.__text _ARRemoteGeoTrackingTechniqueClientInterface
|| __TEXT.__text _ARRemoteGeoTrackingTechniqueServiceInterface
|| __TEXT.__text _ARRemoteLocationSensorClientInterface
|| __TEXT.__text _ARRemoteLocationSensorServiceInterface
|| __TEXT.__text _ARRemoteSensorClientInterfaceWithProtocol
|| __TEXT.__text _ARRemoteSensorServiceInterfaceWithProtocol
|| __TEXT.__text _ARRemoteTechniqueClientInterfaceWithProtocol
|| __TEXT.__text _ARRemoteTechniqueServiceInterfaceWithProtocol
|| __TEXT.__text _ARRenderingToVisionCameraCoordinateTransform
|| __TEXT.__text _ARRenderingToVisionCoordinateTransform
|| __TEXT.__text _ARReplaySensorClassForMovieURL
|| __TEXT.__text _ARResizeBufferWithNearestNeighbors
|| __TEXT.__text _ARRigInputJoints
|| __TEXT.__text _ARRigOutputJoints
|| __TEXT.__text _ARRotateCovariance
|| __TEXT.__text _ARRowMajor3x3MatrixArrayToColumnMajor3x3MatrixArray
|| __TEXT.__text _ARST2CameraToJasperExtrinsics
|| __TEXT.__text _ARST2JasperWideCameraCalibration
|| __TEXT.__text _ARST2UltrawideToWideExtrinsics
|| __TEXT.__text _ARSaveFloatingPixelBufferAsPng16
|| __TEXT.__text _ARSavePixelBufferEXR
|| __TEXT.__text _ARSavePixelBufferJPG
|| __TEXT.__text _ARSavePixelBufferPGM
|| __TEXT.__text _ARSavePixelBufferPNG
|| __TEXT.__text _ARSavePixelBufferPPM
|| __TEXT.__text _ARScalePixelBufferMaxDimensionToNewDimension
|| __TEXT.__text _ARScaleTranslationMatrix4x4
|| __TEXT.__text _ARSensorDataTypesToString
|| __TEXT.__text _ARSessionRunOptionsToString
|| __TEXT.__text _ARSetValueOfIvar
|| __TEXT.__text _ARShouldSupport1440pAndAutofocus
|| __TEXT.__text _ARSkeletonJointNameForRecognizedPointKey
|| __TEXT.__text _ARSphericalHarmonicsByApplyingRotation
|| __TEXT.__text _ARSphericalHarmonicsByFlippingZAxis
|| __TEXT.__text _ARSphericalHarmonicsDataWithAmbientLight
|| __TEXT.__text _ARSphericalHarmonicsDataWithCoefficients
|| __TEXT.__text _ARSphericalHarmonicsDotProduct
|| __TEXT.__text _ARSphericalHarmonicsWithDirection
|| __TEXT.__text _ARStreamIdentifierForDeviceTypeAndPosition
|| __TEXT.__text _ARSubclassOverridesClassSelector
|| __TEXT.__text _ARSubclassOverridesSelector
|| __TEXT.__text _ARSurfaceExtentTypeForPlaneDetectionType
|| __TEXT.__text _ARSurfaceOrientationForPlaneDetectionType
|| __TEXT.__text _ARSurfaceUseCountIsZeroCallback
|| __TEXT.__text _ARTechniqueProcessDataClassApprovedList
|| __TEXT.__text _ARTechniqueResultDataClassApprovedList
|| __TEXT.__text _ARTrackingStateReasonToString
|| __TEXT.__text _ARTrackingStateToString
|| __TEXT.__text _ARTransformFromVisionTransform
|| __TEXT.__text _ARTypeIsSubclassOfType
|| __TEXT.__text _ARUltrawideToWideExtrinsics
|| __TEXT.__text _ARUnWrapFixedPointUnsigned13_3_OneComponent16Buffer_Depth32BitsBuffer
|| __TEXT.__text _ARUnWrapOneComponent16BufferDepth32BitsBuffer
|| __TEXT.__text _ARUserDefaultsMulticamModeEnabled
|| __TEXT.__text _ARVector2FromNSData
|| __TEXT.__text _ARVector3Description
|| __TEXT.__text _ARVector3FromArray
|| __TEXT.__text _ARVector3FromNSData
|| __TEXT.__text _ARVector3MatlabDescription
|| __TEXT.__text _ARVector3ScalarMultiplication
|| __TEXT.__text _ARVector3ToArray
|| __TEXT.__text _ARVector3dFromArray
|| __TEXT.__text _ARVector3dFromNSData
|| __TEXT.__text _ARVector3dToArray
|| __TEXT.__text _ARVector4Description
|| __TEXT.__text _ARVector4FromArray
|| __TEXT.__text _ARVector4MatlabDescription
|| __TEXT.__text _ARVector4ToArray
|| __TEXT.__text _ARVector4dFromArray
|| __TEXT.__text _ARVector4dToArray
|| __TEXT.__text _ARVersionStringForIdentifier
|| __TEXT.__text _ARVideoTransformForDeviceOrientation
|| __TEXT.__text _ARViewToCameraImageTransform
|| __TEXT.__text _ARVisionCameraToRenderingCoordinateTransform
|| __TEXT.__text _ARVisionCameraTransformFromWorldTransform
|| __TEXT.__text _ARVisionDataParametersForWorldTrackingOptions
|| __TEXT.__text _ARVisionToRenderingCoordinateTransform
|| __TEXT.__text _ARVisionTransformFromARTransform
|| __TEXT.__text _ARVisionTransformFromWorldTransform
|| __TEXT.__text _ARVisionVectorFromARVector
|| __TEXT.__text _ARVoxelSizeForSceneReconstructionOptions
|| __TEXT.__text _ARWGS84ToMSLAltitude
|| __TEXT.__text _ARWideToUltrawideExtrinsicsForOldRecordings
|| __TEXT.__text _ARWorldToCameraTransformFromCMRotationMatrix
|| __TEXT.__text _ARWorldTransformFromVisionTransform
|| __TEXT.__text _ARWorldVectorFromVisionVector
|| __TEXT.__text _ARWrapCVPixelBufferPlaneVImage
|| __TEXT.__text _ARWrapCVPixelBufferVImage
|| __TEXT.__text _ARWrapDepth32BitsBufferOneComponent16Buffer
|| __TEXT.__text _ARWrapDepth32BitsBufferOneComponent16BufferWithScale
|| __TEXT.__text _ARWrapDepth32BitsBufferOneComponent8BufferWithScale
|| __TEXT.__text _ARWrapDepth32BitsBuffer_FixedPointUnsigned13_3_OneComponent16Buffer
|| __TEXT.__text _ARWriteOBJForMeshAnchorsToStream
|| __TEXT.__text _ARYawDifference
|| __TEXT.__text _AVCaptureDevicePositionFromST2StreamIdentifier
|| __TEXT.__text _AVCaptureDevicePositionFromStreamIdentifier
|| __TEXT.__text _AVCaptureDeviceTypeFromST2StreamIdentifier
|| __TEXT.__text _AVCaptureDeviceTypeFromStreamIdentifier
|| __TEXT.__text _AppClipCodeUpdateCallbackHandler
|| __TEXT.__text _AppleCV3DValuesFromExternalCalibrationDictionary
|| __TEXT.__text _CV3DSLAMCameraVideoModeForResolutionAndDeviceType
|| __TEXT.__text _NSErrorFromCV3DVIOTrackingState
|| __TEXT.__text _NSStringFromARAltitudeSource
|| __TEXT.__text _NSStringFromARCollaborationData
|| __TEXT.__text _NSStringFromAREnvironmentTexturing
|| __TEXT.__text _NSStringFromARFrameSemantics
|| __TEXT.__text _NSStringFromARGeoTrackingAccuracy
|| __TEXT.__text _NSStringFromARGeoTrackingInternalFailureReason
|| __TEXT.__text _NSStringFromARGeoTrackingState
|| __TEXT.__text _NSStringFromARGeoTrackingStateReason
|| __TEXT.__text _NSStringFromARMemoryPressureCondition
|| __TEXT.__text _NSStringFromARPlaneClassification
|| __TEXT.__text _NSStringFromARPlaneClassificationStatus
|| __TEXT.__text _NSStringFromARPlaneDetection
|| __TEXT.__text _NSStringFromARProcessDebugState
|| __TEXT.__text _NSStringFromARProcessTaskState
|| __TEXT.__text _NSStringFromARReplayMode
|| __TEXT.__text _NSStringFromARSceneReconstruction
|| __TEXT.__text _NSStringFromARWorldAlignment
|| __TEXT.__text _NSStringFromARWorldMappingStatus
|| __TEXT.__text _NSStringFromAVCaptureDevicePosition
|| __TEXT.__text _NSStringFromAttitudeReferenceFrame
|| __TEXT.__text _NSStringFromCFUUIDRef
|| __TEXT.__text _NSStringFromCV3DPosePredictionReturn
|| __TEXT.__text _NSStringFromCV3DSLAMAnchorAddedResult
|| __TEXT.__text _NSStringFromCV3DSLAMCalibrationReturn
|| __TEXT.__text _NSStringFromCV3DSLAMConfigReturn
|| __TEXT.__text _NSStringFromCV3DSLAMJasperPointCloudReturn
|| __TEXT.__text _NSStringFromCV3DSLAMMode
|| __TEXT.__text _NSStringFromCV3DSLAMReturn
|| __TEXT.__text _NSStringFromCV3DVIOReturn
|| __TEXT.__text _NSStringFromCV3DVIOTrackingState
|| __TEXT.__text _NSStringFromCV3DVisualSLAMState
|| __TEXT.__text _NSStringFromMagneticFieldCalibrationAccuracy
|| __TEXT.__text _NSStringFromSLAMCMDataType
|| __TEXT.__text _NSStringFromSceneUnderstandingLabel
|| __TEXT.__text _NSStringFromUIInterfaceOrientation
|| __TEXT.__text __CV3DRawSemanticsValueForARKitSemantics
|| __TEXT.__text __Z10ConvertIMURK14simd_double4x4
|| __TEXT.__text __Z10createUUIDv
|| __TEXT.__text __Z10find_indexPKsssmmRm
|| __TEXT.__text __Z10homogenizeRKDv2_f
|| __TEXT.__text __Z10homogenizeRKDv3_f
|| __TEXT.__text __Z10homogenizeRKN3cva6MatrixIfLj2ELj1ELb0EEE
|| __TEXT.__text __Z10homogenizeRKN3cva6MatrixIfLj3ELj1ELb0EEE
|| __TEXT.__text __Z10intentFromRK17CV3DHitTestIntent
|| __TEXT.__text __Z11SanityCheck14simd_double4x4S_S_S_
|| __TEXT.__text __Z12dehomogenizeRKDv3_f
|| __TEXT.__text __Z12dehomogenizeRKDv4_f
|| __TEXT.__text __Z12dehomogenizeRKN3cva6MatrixIfLj3ELj1ELb0EEE
|| __TEXT.__text __Z12dehomogenizeRKN3cva6MatrixIfLj4ELj1ELb0EEE
|| __TEXT.__text __Z13ExtractConfigRK27PlaneDetectionConfiguration
|| __TEXT.__text __Z13ExtractParamsRK27PlaneDetectionConfiguration
|| __TEXT.__text __Z13convertToMeshRK15ARTexturedPlane
|| __TEXT.__text __Z14HeadingFromRotRK7Pos4Dof
|| __TEXT.__text __Z14MakeMatrix3x4fffffffffffff
|| __TEXT.__text __Z15convertToMeshesRKNSt3__16vectorI15ARTexturedPlaneNS_9allocatorIS1_EEEE
|| __TEXT.__text __Z16hartleyNormalizeRKNSt3__15arrayIN3cva6MatrixIfLj3ELj1ELb0EEELm4EEERS4_RNS2_IfLj3ELj3ELb0EEE
|| __TEXT.__text __Z17computeHomographyRKNSt3__15arrayIN3cva6MatrixIfLj3ELj1ELb0EEELm4EEES6_RNS2_IfLj3ELj3ELb0EEE
|| __TEXT.__text __Z18ARCascadeTransformPdS_13simd_float4x3PKdS2_
|| __TEXT.__text __Z18homographySquareToRKNSt3__15arrayIN3cva6MatrixIfLj3ELj1ELb0EEELm4EEE
|| __TEXT.__text __Z18raycastResultsFromP18CV3DHitTestResultsP14ARRaycastQuery13simd_float4x4
|| __TEXT.__text __Z19ARRaycastResultFromP17CV3DHitTestResult13simd_float4x4
|| __TEXT.__text __Z21ARCVAMatrixFromMatrix13simd_float3x3
|| __TEXT.__text __Z21ARCVAMatrixFromMatrix13simd_float4x4
|| __TEXT.__text __Z21ARMatrixFromCVAMatrixRKN3cva6MatrixIfLj3ELj3ELb0EEE
|| __TEXT.__text __Z21ARMatrixFromCVAMatrixRKN3cva6MatrixIfLj4ELj4ELb0EEE
|| __TEXT.__text __Z23GetRelativeMotionAndYawRK14simd_double4x4S1_RdS2_
|| __TEXT.__text __Z23MatrixFromTransform4DofRK13Transform4Dof
|| __TEXT.__text __Z23Transform4DofFromMatrixRK14simd_double4x4
|| __TEXT.__text __Z23raycastResultFromNewAPIPK17CV3DRaycastResult13simd_float4x4
|| __TEXT.__text __Z24raycastResultsFromNewAPIPK21CV3DRaycastResultListP14ARRaycastQuery13simd_float4x4
|| __TEXT.__text __Z30ARRaycastResultsDictionaryFromPK20CV3DRaycastResultMap13simd_float4x4
|| __TEXT.__text __Z31ar_createAttributeDictionaryNewjjj
|| __TEXT.__text __Z34randomPlanePointInWorldCoordinatesRK15ARTexturedPlane
|| __TEXT.__text __Z36_ARConvertBufferPixelsToBufferPixelsP10__CVBufferS0_U13block_pointerFvPKvmPvmE
|| __TEXT.__text __Z45ar_pixelBufferPoolCreateNewWithZeroCopyOptionjjjPP19__CVPixelBufferPoolb
|| __TEXT.__text __Z48ARPlaneDetectionOrientationForPlaneDetectionTypem
|| __TEXT.__text __Z49ar_createAttributeDictionaryNewWithZeroCopyOptionjjjb
|| __TEXT.__text __Z53ARCreatePlaneDetectionExtentTypeForPlaneDetectionTypem
|| __TEXT.__text __Z5roundRKN3cva6MatrixIfLj2ELj1ELb0EEE
|| __TEXT.__text __Z5roundRKN3cva6MatrixIfLj3ELj1ELb0EEE
|| __TEXT.__text __Z6toUUIDPK8__CFUUID
|| __TEXT.__text __Z7convertPK23CV3DPlaneDetectionPlane
|| __TEXT.__text __Z7convertPK27CV3DPlaneDetectionPlaneList
|| __TEXT.__text __Z7convertRK13simd_float3x3
|| __TEXT.__text __Z7convertRK13simd_float4x4
|| __TEXT.__text __Z7convertRK15ARTexturedPlane
|| __TEXT.__text __Z7convertRKDv2_f
|| __TEXT.__text __Z7convertRKDv3_f
|| __TEXT.__text __Z7convertRKN3cva6MatrixIfLj3ELj3ELb0EEE
|| __TEXT.__text __Z9angleDiffff
|| __TEXT.__text __ZN10thirdparty10quadprogpp12print_matrixEPKcRKNS0_6MatrixIdEEii
|| __TEXT.__text __ZN10thirdparty10quadprogpp14add_constraintERNS0_6MatrixIdEES3_RNS0_6VectorIdEERiRd
|| __TEXT.__text __ZN10thirdparty10quadprogpp14cholesky_solveERKNS0_6MatrixIdEERNS0_6VectorIdEERKS6_
|| __TEXT.__text __ZN10thirdparty10quadprogpp14solve_quadprogERNS0_6MatrixIdEERNS0_6VectorIdEERKS2_RKS5_S8_SA_S6_
|| __TEXT.__text __ZN10thirdparty10quadprogpp17delete_constraintERNS0_6MatrixIdEES3_RNS0_6VectorIiEERNS4_IdEEiiRii
|| __TEXT.__text __ZN10thirdparty10quadprogpp22cholesky_decompositionERNS0_6MatrixIdEE
|| __TEXT.__text __ZN10thirdparty10quadprogpp3seqEjj
|| __TEXT.__text __ZN10thirdparty10quadprogpp9singletonEj
|| __TEXT.__text __ZN14RaycastSession10PushChunksEPK17CV3DReconMeshList13simd_float4x4
|| __TEXT.__text __ZN14RaycastSession11StopRaycastEPK8__CFUUID
|| __TEXT.__text __ZN14RaycastSession14PerformHitTestERK17CV3DHitTestIntentP14ARRaycastQuery13simd_float4x4
|| __TEXT.__text __ZN14RaycastSession14PushDenseFrameEP10__CVBufferS1_13simd_float3x313simd_float4x4
|| __TEXT.__text __ZN14RaycastSession20InvalidateDenseFrameEv
|| __TEXT.__text __ZN14RaycastSessionC1EP15CV3DSLAMSessionU13block_pointerFvPK20CV3DRaycastResultMapEb
|| __TEXT.__text __ZN14RaycastSessionC2EP15CV3DSLAMSessionU13block_pointerFvPK20CV3DRaycastResultMapEb
|| __TEXT.__text __ZN21PlaneDetectionSession19UpdateConfigurationERK27PlaneDetectionConfiguration
|| __TEXT.__text __ZN21PlaneDetectionSessionC1EP15CV3DSLAMSessionRK27PlaneDetectionConfigurationU13block_pointerFvPK27CV3DPlaneDetectionPlaneListEU13block_pointerFvPK37CV3DPlaneDetectionSingleShotPlaneListE
|| __TEXT.__text __ZN21PlaneDetectionSessionC2EP15CV3DSLAMSessionRK27PlaneDetectionConfigurationU13block_pointerFvPK27CV3DPlaneDetectionPlaneListEU13block_pointerFvPK37CV3DPlaneDetectionSingleShotPlaneListE
|| __TEXT.__text __ZN5arkit10loadParamsE22ARNoiseModelIdentifierRNSt3__16vectorIfNS1_9allocatorIfEEEERNS2_IS5_NS3_IS5_EEEERNS2_IS8_NS3_IS8_EEEESC_S6_
|| __TEXT.__text __ZN5arkit11invgaussianEff
|| __TEXT.__text __ZN5arkit11normalizeL1ERKNSt3__16vectorIfNS0_9allocatorIfEEEE
|| __TEXT.__text __ZN5arkit11wrapRawDataEPKvm
|| __TEXT.__text __ZN5arkit12ChromaFilter6filterERKNS_12ImageViewYUVERKNSt3__16vectorINS_8LandmarkENS4_9allocatorIS6_EEEE
|| __TEXT.__text __ZN5arkit12ChromaFilter7uvl2indERKN3cva6MatrixIfLj3ELj1ELb0EEE
|| __TEXT.__text __ZN5arkit12ChromaFilter7xyz2uvlERKN3cva6MatrixIfLj3ELj1ELb0EEERS3_
|| __TEXT.__text __ZN5arkit12ChromaFilter9ycbcr2xyzERKN3cva6MatrixIfLj4ELj1ELb0EEE
|| __TEXT.__text __ZN5arkit12KeyMapBufferIPKvNSt3__16vectorIhNS3_9allocatorIhEEEEE4findERKS2_PS7_
|| __TEXT.__text __ZN5arkit12KeyMapBufferIPKvNSt3__16vectorIhNS3_9allocatorIhEEEEE6insertERKS2_RKS7_
|| __TEXT.__text __ZN5arkit12KeyMapBufferIPKvNSt3__16vectorIhNS3_9allocatorIhEEEEEC1Em
|| __TEXT.__text __ZN5arkit12KeyMapBufferIPKvNSt3__16vectorIhNS3_9allocatorIhEEEEEC2Em
|| __TEXT.__text __ZN5arkit13mixtureKernelERKNSt3__16vectorIfNS0_9allocatorIfEEEES6_j
|| __TEXT.__text __ZN5arkit14RTFSPContainer12rtfspDefaultEv
|| __TEXT.__text __ZN5arkit14RTFSPContainer16loadRtfspDefaultEv
|| __TEXT.__text __ZN5arkit14RTFSPContainer9loadRtfspENSt3__18optionalIKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
|| __TEXT.__text __ZN5arkit14RTFSPContainer9loadRtfspERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZN5arkit14RTFSPContainer9loadRtfspERNSt3__113basic_istreamIcNS1_11char_traitsIcEEEE
|| __TEXT.__text __ZN5arkit14gaussianKernelEfi
|| __TEXT.__text __ZN5arkit14mixtureKernelsERKNSt3__16vectorINS1_IfNS0_9allocatorIfEEEENS2_IS4_EEEES8_j
|| __TEXT.__text __ZN5arkit15unflattenParamsERKNSt3__16vectorIfNS0_9allocatorIfEEEES6_S6_S6_RS4_RNS1_IS4_NS2_IS4_EEEERNS1_IS9_NS2_IS9_EEEESD_
|| __TEXT.__text __ZN5arkit16FaceTrackingDataC1ERKN3cva6MatrixIfLj3ELj3ELb0EEERKNSt3__16vectorINS_8LandmarkENS6_9allocatorIS8_EEEE
|| __TEXT.__text __ZN5arkit16FaceTrackingDataC2ERKN3cva6MatrixIfLj3ELj3ELb0EEERKNSt3__16vectorINS_8LandmarkENS6_9allocatorIS8_EEEE
|| __TEXT.__text __ZN5arkit18FaceLightOptimizer11solveLinearERKN3cva6MatrixIfLj0ELj1ELb0EEERKNS2_IfLj0ELj0ELb0EEEb
|| __TEXT.__text __ZN5arkit18FaceLightOptimizer14solveQuadraticERKN3cva6MatrixIfLj0ELj1ELb0EEERKNS2_IfLj0ELj0ELb0EEEbfb
|| __TEXT.__text __ZN5arkit18FaceLightOptimizer15penaltyFunctionERKN3cva6MatrixIfLj9ELj1ELb0EEERKNS2_IfLj0ELj1ELb0EEERKNS2_IfLj0ELj0ELb0EEE
|| __TEXT.__text __ZN5arkit18FaceLightOptimizer17computeConfidenceERKN3cva6MatrixIfLj9ELj1ELb0EEERKNS2_IfLj0ELj1ELb0EEERKNS2_IfLj0ELj0ELb0EEE
|| __TEXT.__text __ZN5arkit18FaceLightOptimizer7computeERKNSt3__16vectorINS1_4pairIfN3cva6MatrixIfLj1ELj0ELb0EEEEENS1_9allocatorIS7_EEEERKNS2_ImNS8_ImEEEEffb
|| __TEXT.__text __ZN5arkit18FaceLightOptimizer9inlierSetERKN3cva6MatrixIfLj9ELj1ELb0EEEfNS2_IfLj0ELj1ELb0EEERKNS2_IfLj0ELj0ELb0EEE
|| __TEXT.__text __ZN5arkit19PrecomputedFaceDataC1ENSt3__18optionalIKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
|| __TEXT.__text __ZN5arkit19PrecomputedFaceDataC2ENSt3__18optionalIKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
|| __TEXT.__text __ZN5arkit19PrecomputedFaceDataD1Ev
|| __TEXT.__text __ZN5arkit19PrecomputedFaceDataD2Ev
|| __TEXT.__text __ZN5arkit19mapColorTemperatureEf
|| __TEXT.__text __ZN5arkit19sampleSignalToNoiseEfRKNSt3__16vectorIfNS0_9allocatorIfEEEERiS7_RfS8_
|| __TEXT.__text __ZN5arkit20kFLEDarkCoefficientsEv
|| __TEXT.__text __ZN5arkit21FacialLightEstimation13estimateLightERKNS_10FLEOptionsERKNS_16FaceTrackingDataERKNS_12ImageViewYUVE
|| __TEXT.__text __ZN5arkit21FacialLightEstimation13rotateShCoeffERKN3cva6MatrixIfLj9ELj1ELb0EEERKNS2_IfLj3ELj3ELb0EEE
|| __TEXT.__text __ZN5arkit21FacialLightEstimation15flipAxesShCoeffERKN3cva6MatrixIfLj9ELj1ELb0EEEbbb
|| __TEXT.__text __ZN5arkit21FacialLightEstimation25populateValidImageSamplesERKN3cva9ArrayViewIhLj2EEERKNSt3__16vectorIiNS6_9allocatorIiEEEERKNS7_INS_8LandmarkENS8_ISD_EEEESC_
|| __TEXT.__text __ZN5arkit21FacialLightEstimationC1Ev
|| __TEXT.__text __ZN5arkit21FacialLightEstimationC2Ev
|| __TEXT.__text __ZN5arkit22gaussianMixtureKernelsE22ARNoiseModelIdentifierfj
|| __TEXT.__text __ZN5arkit26kFLEInequalityCoefficientsEv
|| __TEXT.__text __ZN5arkit3btr15ScaleCorrection10GetDbgDataEv
|| __TEXT.__text __ZN5arkit3btr15ScaleCorrection13EstimateScaleERKNS0_16RegistrationDataERNS1_7OutcomeE
|| __TEXT.__text __ZN5arkit3btr15ScaleCorrectionC1ERKNS0_21ScaleCorrectionConfigE
|| __TEXT.__text __ZN5arkit3btr15ScaleCorrectionC2ERKNS0_21ScaleCorrectionConfigE
|| __TEXT.__text __ZN5arkit3btr25ComputeReprojectionErrorSEfRKNSt3__16vectorIPKNS0_16RegistrationDataENS1_9allocatorIS5_EEEE
|| __TEXT.__text __ZN5arkit3btr31EstimateScaleReprojectionLinearERKNSt3__16vectorINS0_16RegistrationDataENS1_9allocatorIS3_EEEE
|| __TEXT.__text __ZN5arkit3sumERKNSt3__16vectorINS1_IfNS0_9allocatorIfEEEENS2_IS4_EEEEj
|| __TEXT.__text __ZN5arkit4wrapEP10__CVBuffer
|| __TEXT.__text __ZN5arkit6Random10globalSeedEv
|| __TEXT.__text __ZN5arkit6Random19seedFromCurrentTimeEv
|| __TEXT.__text __ZN5arkit8gaussianEff
|| __TEXT.__text __ZN5arkit9runSolverERKNSt3__16vectorINS0_4pairIfN3cva6MatrixIfLj1ELj0ELb0EEEEENS0_9allocatorIS6_EEEERKNS_10FLEOptionsE
|| __TEXT.__text __ZN5arkit9unflattenENSt3__16vectorIfNS0_9allocatorIfEEEEDv3_j
|| __TEXT.__text __ZN5arkit9unflattenERKNSt3__16vectorIfNS0_9allocatorIfEEEEDv2_j
|| __TEXT.__text __ZNK21PlaneDetectionSession10LoadPlanesEPK8__CFData
|| __TEXT.__text __ZNK21PlaneDetectionSession11ErasePlanesEP7NSArrayIP8ARAnchorE
|| __TEXT.__text __ZNK21PlaneDetectionSession15SerializePlanesEv
|| __TEXT.__text __ZNK21PlaneDetectionSession20PushJasperPointCloudEPK20CV3DJasperPointCloud13simd_float4x413simd_float3x3Dv2_jd
|| __TEXT.__text __ZNK21PlaneDetectionSession22PushDepthWithSemanticsEPK13ARMLDepthDataPK18ARSegmentationData13simd_float4x413simd_float3x3d
|| __TEXT.__text __ZNK21PlaneDetectionSession23PushSemanticsAndNormalsEPK18ARSegmentationData13simd_float4x413simd_float3x3d
|| __TEXT.__text __ZNK21PlaneDetectionSession35DidParametersOrConfigurationChangedERK27PlaneDetectionConfiguration
|| __TEXT.__text __ZNK5arkit16FaceTrackingData10nLandmarksEv
|| __TEXT.__text __ZNK5arkit16FaceTrackingData17filteredLandmarksERKNSt3__16vectorIiNS1_9allocatorIiEEEE
|| __TEXT.__text __ZNK5arkit19PrecomputedFaceData13nCoefficientsEv
|| __TEXT.__text __ZNK5arkit19PrecomputedFaceData17getValidSampleIDsEi
|| __TEXT.__text __ZNK5arkit19PrecomputedFaceData17getValidSampleIDsEv
|| __TEXT.__text __ZNK5arkit19PrecomputedFaceData6getRTFERKNSt3__16vectorIiNS1_9allocatorIiEEEE
|| __TEXT.__text __ZNK5arkit19PrecomputedFaceData6getRTFEi
|| __TEXT.__text __ZNK5arkit19PrecomputedFaceData8nSamplesEv
|| __TEXT.__text __ZeqRK7ARPatchS1_
|| __TEXT.__text __printFormat
|| __TEXT.__text __printMessageWithColor
|| __TEXT.__text _ar_pixelBufferPoolCreateNew
|| __TEXT.__text _computeVarianceInCamZ
|| __TEXT.__text _copyHIDServicePlugin
|| __TEXT.__text _dehomogenize3d
|| __TEXT.__text _dehomogenize4d
|| __TEXT.__text _kVTRotationFromARRotationAngle
|| __TEXT.__text _printColoredMessage
|| __TEXT.__text _printError
|| __TEXT.__text _printInfo
|| __TEXT.__text _printMessage
|| __TEXT.__text _printVector3
|| __TEXT.__text _printWarning
|| __TEXT.__text _rawAccelerometerCallback
|| __TEXT.__text _rawGyroscopeCallback
|| __TEXT.__text _rawIOHIDEventCallback
|| __TEXT.__text _rawMagnetometerCallback
|| __TEXT.__text _replayModeByApplyingUserDefaultOverrides
|| __TEXT.__text _tanFromCos
__ ARKitFoundation: _OBJC_CLASS_$_ARDepthData
__ AVFoundation: _AVCaptureDeviceTypeBuiltInMicrophone
__ AVFoundation: _AVCaptureDeviceTypeBuiltInTimeOfFlightCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInTrueDepthCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInUltraWideCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInWideAngleCamera
__ AVFoundation: _AVCaptureExposureDurationCurrent
__ AVFoundation: _AVCaptureISOCurrent
__ AVFoundation: _AVCaptureLensPositionCurrent
__ AVFoundation: _AVCaptureSessionErrorKey
__ AVFoundation: _AVCaptureSessionInterruptionEndedNotification
__ AVFoundation: _AVCaptureSessionPresetInputPriority
__ AVFoundation: _AVCaptureSessionRuntimeErrorNotification
__ AVFoundation: _AVCaptureSessionSetAuthorizedToUseCameraInMultipleForegroundAppLayout
__ AVFoundation: _AVCaptureSessionWasInterruptedNotification
__ AVFoundation: _AVFoundationErrorDomain
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeCameraCalibrationData
__ AVFoundation: _AVMediaTypeDepthData
__ AVFoundation: _AVMediaTypeMetadataObject
__ AVFoundation: _AVMediaTypePointCloudData
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMediaTypeVisionData
__ AVFoundation: _AVMetadataObjectTypeFace
__ AVFoundation: _AVMetadataObjectTypeTrackedFaces
__ AVFoundation: _OBJC_CLASS_$_AVCameraCalibrationData
__ AVFoundation: _OBJC_CLASS_$_AVCaptureAudioDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureCameraCalibrationDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureConnection
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDataOutputSynchronizer
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDepthDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDevice
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceDiscoverySession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureMetadataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureMultiCamSession
__ AVFoundation: _OBJC_CLASS_$_AVCapturePhotoOutput
__ AVFoundation: _OBJC_CLASS_$_AVCapturePhotoSettings
__ AVFoundation: _OBJC_CLASS_$_AVCapturePointCloudDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSynchronizedDepthData
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSynchronizedMetadataObjectData
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSynchronizedSampleBufferData
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVisionDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVDepthData
__ AVFoundation: _OBJC_CLASS_$_AVMetadataTrackedFacesObject
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ Accelerate: _kvImage_YpCbCrToARGBMatrix_ITU_R_709_2
__ Accelerate: _vImageBuffer_Init
__ Accelerate: _vImageCVImageFormat_Release
__ Accelerate: _vImageConvert_420Yp8_CbCr8ToARGB8888
__ Accelerate: _vImageConvert_ARGB8888toRGB888
__ Accelerate: _vImageConvert_Planar16FtoPlanarF
__ Accelerate: _vImageConvert_YpCbCrToARGB_GenerateConversion
__ Accelerate: _vImageCopyBuffer
__ Accelerate: _vImageExtractChannel_ARGB8888
__ Accelerate: _vImageHorizontalReflect_Planar8
__ Accelerate: _vImageMapping_CreateFromMap_Image8U
__ Accelerate: _vImageMapping_Release
__ Accelerate: _vImageMin_PlanarF
__ Accelerate: _vImageOverwriteChannelsWithScalar_Planar16U
__ Accelerate: _vImageOverwriteChannelsWithScalar_Planar8
__ Accelerate: _vImageRemap_Image8U
__ Accelerate: _vImageRotate90_ARGB8888
__ Accelerate: _vImageRotate90_ARGBFFFF
__ Accelerate: _vImageRotate90_Planar8
__ Accelerate: _vImageRotate90_PlanarF
__ Accelerate: _vImageScale_ARGB8888
__ Accelerate: _vImageScale_Planar8
__ AltruisticBodyPoseKit: _CreateABPK3DLiftingAlgorithm
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPK2DDetection
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPK2DDetectionConfiguration
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPK2DDetectionPostProcessSelector
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPK2DDetectionResult
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPK2DDetectionResults
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPK2DMLModelConfigSelector
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPK2DSkeletonRawEspressoResult
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPK3DLiftingResult
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPKCameraRegistration
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPKDepthBasedScaleEstimation
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPKImageData
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPKImagePreProcessingParams
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPKMLImageData
__ AltruisticBodyPoseKit: _OBJC_CLASS_$_ABPKRetargeting
__ AppC3D: _AppC3DConfigCreate
__ AppC3D: _AppC3DConfigRelease
__ AppC3D: _AppC3DConfigSetMaxNumberCodesToTrack
__ AppC3D: _AppC3DConfigSetTrackingConfig
__ AppC3D: _AppC3DConfigSetTrackingMode
__ AppC3D: _AppC3DCreate
__ AppC3D: _AppC3DProcess
__ AppC3D: _AppC3DProcessCameraFrameData
__ AppC3D: _AppC3DRelease
__ AppC3D: _AppC3DSetPerformanceMode
__ AppC3D: _AppC3DSetUpdateCallback
__ AppC3D: _AppC3DTrackingResultCopyTransform
__ AppC3D: _AppC3DTrackingResultCreateData
__ AppC3D: _AppC3DTrackingResultGetConfidence
__ AppC3D: _AppC3DTrackingResultGetDataVersion
__ AppC3D: _AppC3DTrackingResultGetId
__ AppC3D: _AppC3DTrackingResultGetMetadata
__ AppC3D: _AppC3DTrackingResultGetNumberOfTrackingData
__ AppC3D: _AppC3DTrackingResultGetSize
__ AppC3D: _AppC3DTrackingResultIsScaleReliable
__ AppC3D: _kAppC3DKeyDeterministicMode
__ AppleCV3D: _CV3DGetVersionInfo
__ AppleCV3D: _CV3DHitTestingDefaultParameters
__ AppleCV3D: _CV3DKeyframeWithPointsRelease
__ AppleCV3D: _CV3DMLModelCreate
__ AppleCV3D: _CV3DMLModelRelease
__ AppleCV3D: _CV3DNormalEstimationCreate
__ AppleCV3D: _CV3DNormalEstimationSessionCompute
__ AppleCV3D: _CV3DNormalEstimationSessionRelease
__ AppleCV3D: _CV3DODTAdd3dObject
__ AppleCV3D: _CV3DODTAddPlanarObject
__ AppleCV3D: _CV3DODTConfigCreate
__ AppleCV3D: _CV3DODTConfigRelease
__ AppleCV3D: _CV3DODTCreateWithOptionsConfigAndModel
__ AppleCV3D: _CV3DODTDetectWithMetadata
__ AppleCV3D: _CV3DODTGetMaxSupportedNumberImagesToTrack
__ AppleCV3D: _CV3DODTImagePredict
__ AppleCV3D: _CV3DODTImagePredictInWorld
__ AppleCV3D: _CV3DODTObjectInfoRelease
__ AppleCV3D: _CV3DODTRelease
__ AppleCV3D: _CV3DODTSetMaximumTrackingTime
__ AppleCV3D: _CV3DODTSetPerformanceMode
__ AppleCV3D: _CV3DODTTrack
__ AppleCV3D: _CV3DODTTrackAndEstimateScale
__ AppleCV3D: _CV3DODTVerifyReferenceImage
__ AppleCV3D: _CV3DODTWaitForAllObjectsAddToFinish
__ AppleCV3D: _CV3DPerformHitTestPointCloud
__ AppleCV3D: _CV3DPlaneDetectionAlignedBoundingBoxMax
__ AppleCV3D: _CV3DPlaneDetectionAlignedBoundingBoxMin
__ AppleCV3D: _CV3DPlaneDetectionConfigurationCreate
__ AppleCV3D: _CV3DPlaneDetectionConfigurationEnableDeterministicMode
__ AppleCV3D: _CV3DPlaneDetectionConfigurationEnableLowQosScheduling
__ AppleCV3D: _CV3DPlaneDetectionConfigurationEnableMLSegmentDetector
__ AppleCV3D: _CV3DPlaneDetectionConfigurationEqualConfigurations
__ AppleCV3D: _CV3DPlaneDetectionConfigurationRelease
__ AppleCV3D: _CV3DPlaneDetectionConfigurationSetDesiredExtent
__ AppleCV3D: _CV3DPlaneDetectionConfigurationSetDesiredOrientations
__ AppleCV3D: _CV3DPlaneDetectionConfigurationSetDetectionPolicy
__ AppleCV3D: _CV3DPlaneDetectionConfigurationSetMinVergenceAngle
__ AppleCV3D: _CV3DPlaneDetectionConvexHullPointsNum
__ AppleCV3D: _CV3DPlaneDetectionConvexHullPointsRawPtr
__ AppleCV3D: _CV3DPlaneDetectionDepthAndSemanticFrameCreate
__ AppleCV3D: _CV3DPlaneDetectionDepthAndSemanticFrameRelease
__ AppleCV3D: _CV3DPlaneDetectionDepthCameraFrameCreate
__ AppleCV3D: _CV3DPlaneDetectionDepthCameraFrameRelease
__ AppleCV3D: _CV3DPlaneDetectionErasePlaneDetections
__ AppleCV3D: _CV3DPlaneDetectionExtentGridAtIndex
__ AppleCV3D: _CV3DPlaneDetectionExtentGridLength
__ AppleCV3D: _CV3DPlaneDetectionExtentTypesCreate
__ AppleCV3D: _CV3DPlaneDetectionExtentTypesRelease
__ AppleCV3D: _CV3DPlaneDetectionExtentTypesSetAll
__ AppleCV3D: _CV3DPlaneDetectionExtentTypesSetAxisAlignedBox
__ AppleCV3D: _CV3DPlaneDetectionExtentTypesSetConvexHull
__ AppleCV3D: _CV3DPlaneDetectionExtentTypesSetOrientedBox
__ AppleCV3D: _CV3DPlaneDetectionGetNumSemanticLabels
__ AppleCV3D: _CV3DPlaneDetectionGetSemanticLabel
__ AppleCV3D: _CV3DPlaneDetectionGetSemanticProbability
__ AppleCV3D: _CV3DPlaneDetectionLoadMap
__ AppleCV3D: _CV3DPlaneDetectionParametersCreate
__ AppleCV3D: _CV3DPlaneDetectionParametersEqualParameters
__ AppleCV3D: _CV3DPlaneDetectionParametersRelease
__ AppleCV3D: _CV3DPlaneDetectionParametersSetInverseDepthDetector
__ AppleCV3D: _CV3DPlaneDetectionParametersSetMinClusterSize
__ AppleCV3D: _CV3DPlaneDetectionParametersSetMinDepthConfidence
__ AppleCV3D: _CV3DPlaneDetectionParametersSetMinDetections
__ AppleCV3D: _CV3DPlaneDetectionParametersSetMinNormalDotProduct
__ AppleCV3D: _CV3DPlaneDetectionParametersSetMinimumCellSize
__ AppleCV3D: _CV3DPlaneDetectionParametersSetPlaneFitThreshold
__ AppleCV3D: _CV3DPlaneDetectionPlaneAge
__ AppleCV3D: _CV3DPlaneDetectionPlaneAtIndex
__ AppleCV3D: _CV3DPlaneDetectionPlaneConvexHull2D
__ AppleCV3D: _CV3DPlaneDetectionPlaneCopyUUID
__ AppleCV3D: _CV3DPlaneDetectionPlaneCreateTriangulatedPolygons
__ AppleCV3D: _CV3DPlaneDetectionPlaneExtentAlignedBoundingBox
__ AppleCV3D: _CV3DPlaneDetectionPlaneExtentOrientedBoundingBox
__ AppleCV3D: _CV3DPlaneDetectionPlaneExtentPolygons
__ AppleCV3D: _CV3DPlaneDetectionPlaneGetOrientation
__ AppleCV3D: _CV3DPlaneDetectionPlaneListLength
__ AppleCV3D: _CV3DPlaneDetectionPlaneListRelease
__ AppleCV3D: _CV3DPlaneDetectionPlaneListRetain
__ AppleCV3D: _CV3DPlaneDetectionPlaneMergedIds
__ AppleCV3D: _CV3DPlaneDetectionPlaneTransformationToWorld
__ AppleCV3D: _CV3DPlaneDetectionPlaneUncertaintyAlongNormal
__ AppleCV3D: _CV3DPlaneDetectionPolygonAtIndex
__ AppleCV3D: _CV3DPlaneDetectionPolygonListLength
__ AppleCV3D: _CV3DPlaneDetectionPolygonPointsNum
__ AppleCV3D: _CV3DPlaneDetectionPolygonPointsRawPtr
__ AppleCV3D: _CV3DPlaneDetectionPushDepthAndSemanticFrame
__ AppleCV3D: _CV3DPlaneDetectionPushSemanticFrame
__ AppleCV3D: _CV3DPlaneDetectionPushSlamState
__ AppleCV3D: _CV3DPlaneDetectionPushSparseDepthFrame
__ AppleCV3D: _CV3DPlaneDetectionSemanticFrameCreate
__ AppleCV3D: _CV3DPlaneDetectionSemanticFrameRelease
__ AppleCV3D: _CV3DPlaneDetectionSerialize
__ AppleCV3D: _CV3DPlaneDetectionSessionCreateWithConfig
__ AppleCV3D: _CV3DPlaneDetectionSessionRegisterUpdateCallback
__ AppleCV3D: _CV3DPlaneDetectionSessionRelease
__ AppleCV3D: _CV3DPlaneDetectionSessionSetAnchoringFunctors
__ AppleCV3D: _CV3DPlaneDetectionSessionSetSingleShotPlanesCallback
__ AppleCV3D: _CV3DPlaneDetectionSetConfiguration
__ AppleCV3D: _CV3DPlaneDetectionSingleShotPlaneListRelease
__ AppleCV3D: _CV3DPlaneDetectionSingleShotPlaneListRetain
__ AppleCV3D: _CV3DPosePredictionConfigCreate
__ AppleCV3D: _CV3DPosePredictionConfigRelease
__ AppleCV3D: _CV3DPosePredictionCreate
__ AppleCV3D: _CV3DPosePredictionGetPose
__ AppleCV3D: _CV3DPosePredictionPushAccel
__ AppleCV3D: _CV3DPosePredictionPushGyro
__ AppleCV3D: _CV3DPosePredictionPushSLAMMetadata
__ AppleCV3D: _CV3DPosePredictionRelease
__ AppleCV3D: _CV3DRayCastResultAtIndex
__ AppleCV3D: _CV3DRayCastResultListFromId
__ AppleCV3D: _CV3DRayCastResultMapIds
__ AppleCV3D: _CV3DRayCastResultMapLength
__ AppleCV3D: _CV3DRayCastResultsLength
__ AppleCV3D: _CV3DRaycastDenseFrameCreate
__ AppleCV3D: _CV3DRaycastDenseFrameRelease
__ AppleCV3D: _CV3DRaycastGetResultOrientation
__ AppleCV3D: _CV3DRaycastIntentCreate
__ AppleCV3D: _CV3DRaycastIntentEnableTracking
__ AppleCV3D: _CV3DRaycastIntentRelease
__ AppleCV3D: _CV3DRaycastIntentSetConsideredGeometry
__ AppleCV3D: _CV3DRaycastIntentSetConsideredOrientations
__ AppleCV3D: _CV3DRaycastIntentSetExtentCheckForTrackedPlanes
__ AppleCV3D: _CV3DRaycastInvalidateDenseFrame
__ AppleCV3D: _CV3DRaycastPushChunks
__ AppleCV3D: _CV3DRaycastPushDenseFrame
__ AppleCV3D: _CV3DRaycastPushJasperPointCloud
__ AppleCV3D: _CV3DRaycastPushPlanes
__ AppleCV3D: _CV3DRaycastPushSlamState
__ AppleCV3D: _CV3DRaycastRemoveTrackableRay
__ AppleCV3D: _CV3DRaycastResultExtentChecked
__ AppleCV3D: _CV3DRaycastResultListRelease
__ AppleCV3D: _CV3DRaycastResultOriginatedFrom
__ AppleCV3D: _CV3DRaycastResultPlaneIdentifier
__ AppleCV3D: _CV3DRaycastResultTransformationToWorld
__ AppleCV3D: _CV3DRaycastSessionAttemptWithIntent
__ AppleCV3D: _CV3DRaycastSessionConfigurationCreate
__ AppleCV3D: _CV3DRaycastSessionConfigurationEnableDeterministicMode
__ AppleCV3D: _CV3DRaycastSessionConfigurationRelease
__ AppleCV3D: _CV3DRaycastSessionCreateWithConfig
__ AppleCV3D: _CV3DRaycastSessionRegisterOnTrackableUpdateCallback
__ AppleCV3D: _CV3DRaycastSessionRelease
__ AppleCV3D: _CV3DRaycastSessionSetAnchoringFunctors
__ AppleCV3D: _CV3DRaycastTriggerUpdateFromTrackableIntentsAsync
__ AppleCV3D: _CV3DReconFrameBundleAddSlamMetadata
__ AppleCV3D: _CV3DReconFrameBundleCreate
__ AppleCV3D: _CV3DReconFrameBundleRelease
__ AppleCV3D: _CV3DReconFrameBundleSetColorImage
__ AppleCV3D: _CV3DReconFrameBundleSetDepthConfidenceImage
__ AppleCV3D: _CV3DReconFrameBundleSetDepthImage
__ AppleCV3D: _CV3DReconFrameBundleSetNormalsImage
__ AppleCV3D: _CV3DReconFrameBundleSetSemanticsImage
__ AppleCV3D: _CV3DReconKeyframeCreatePointCloud
__ AppleCV3D: _CV3DReconKeyframeGetCreationTime
__ AppleCV3D: _CV3DReconKeyframeListCopyKeyframeAtIndex
__ AppleCV3D: _CV3DReconKeyframeListGetCount
__ AppleCV3D: _CV3DReconKeyframeListGetKeyframeToWorldTransformAtIndex
__ AppleCV3D: _CV3DReconKeyframeListGetKeyframeUUIDAtIndex
__ AppleCV3D: _CV3DReconKeyframeListRelease
__ AppleCV3D: _CV3DReconKeyframeListRetain
__ AppleCV3D: _CV3DReconKeyframeRelease
__ AppleCV3D: _CV3DReconMeshGetFaceSemanticLabelsAsMTLBufferForDevice
__ AppleCV3D: _CV3DReconMeshGetFaceSemanticLabelsRawPtr
__ AppleCV3D: _CV3DReconMeshGetFacesAsMTLBufferForDevice
__ AppleCV3D: _CV3DReconMeshGetFacesCount
__ AppleCV3D: _CV3DReconMeshGetFacesRawPtr
__ AppleCV3D: _CV3DReconMeshGetVertexNormalsAsMTLBufferForDevice
__ AppleCV3D: _CV3DReconMeshGetVertexNormalsRawPtr
__ AppleCV3D: _CV3DReconMeshGetVerticesAsMTLBufferForDevice
__ AppleCV3D: _CV3DReconMeshGetVerticesCount
__ AppleCV3D: _CV3DReconMeshGetVerticesRawPtr
__ AppleCV3D: _CV3DReconMeshListCopyMeshAtIndex
__ AppleCV3D: _CV3DReconMeshListGetCount
__ AppleCV3D: _CV3DReconMeshListGetMeshUUIDAtIndex
__ AppleCV3D: _CV3DReconMeshListRelease
__ AppleCV3D: _CV3DReconMeshListRetain
__ AppleCV3D: _CV3DReconMeshRelease
__ AppleCV3D: _CV3DReconMeshingConfigurationCreateWithPrivatePreset
__ AppleCV3D: _CV3DReconMeshingConfigurationEnableOccupancyMapping
__ AppleCV3D: _CV3DReconMeshingConfigurationHasOccupancyMapping
__ AppleCV3D: _CV3DReconMeshingConfigurationRelease
__ AppleCV3D: _CV3DReconMeshingConfigurationSetBucketsOrderOfMagnitude
__ AppleCV3D: _CV3DReconMeshingConfigurationSetMinMeshingPeriod
__ AppleCV3D: _CV3DReconMeshingConfigurationSetVoxelSize
__ AppleCV3D: _CV3DReconOccupancyQueryRequestCreateFromPoints
__ AppleCV3D: _CV3DReconOccupancyQueryRequestRelease
__ AppleCV3D: _CV3DReconOccupancyQueryResultGetRawPtr
__ AppleCV3D: _CV3DReconOccupancyQueryResultGetWidth
__ AppleCV3D: _CV3DReconOccupancyQueryResultRelease
__ AppleCV3D: _CV3DReconPointCloudGetColorRawPtr
__ AppleCV3D: _CV3DReconPointCloudGetNormalsRawPtr
__ AppleCV3D: _CV3DReconPointCloudGetPointsCount
__ AppleCV3D: _CV3DReconPointCloudGetPointsRawPtr
__ AppleCV3D: _CV3DReconPointCloudGetSemanticHistogramLabelsRawPtr
__ AppleCV3D: _CV3DReconPointCloudGetSemanticHistogramVotesRawPtr
__ AppleCV3D: _CV3DReconPointCloudRelease
__ AppleCV3D: _CV3DReconSemanticBinsCount
__ AppleCV3D: _CV3DReconSessionAddOnKeyframeListUpdateCallback
__ AppleCV3D: _CV3DReconSessionAddOnMeshListUpdateCallback
__ AppleCV3D: _CV3DReconSessionConfigurationAddMappingAttribute
__ AppleCV3D: _CV3DReconSessionConfigurationAddPrivateMappingAttribute
__ AppleCV3D: _CV3DReconSessionConfigurationCreateWithPrivatePreset
__ AppleCV3D: _CV3DReconSessionConfigurationEnableConsumeVIOMetadata
__ AppleCV3D: _CV3DReconSessionConfigurationEnableDeterministicBehavior
__ AppleCV3D: _CV3DReconSessionConfigurationEnableLowQosScheduling
__ AppleCV3D: _CV3DReconSessionConfigurationEnableSynchronousScheduling
__ AppleCV3D: _CV3DReconSessionConfigurationRelease
__ AppleCV3D: _CV3DReconSessionConfigurationSetMeshingConfiguration
__ AppleCV3D: _CV3DReconSessionConfigurationSetSlamAdapter
__ AppleCV3D: _CV3DReconSessionCreateWithConfiguration
__ AppleCV3D: _CV3DReconSessionDisable
__ AppleCV3D: _CV3DReconSessionEnable
__ AppleCV3D: _CV3DReconSessionEnableMeshPlaneHarmony
__ AppleCV3D: _CV3DReconSessionEnablePerFrameMeshSemantics
__ AppleCV3D: _CV3DReconSessionHasKeyframingCapability
__ AppleCV3D: _CV3DReconSessionHasMeshingCapability
__ AppleCV3D: _CV3DReconSessionProcessFrameBundle
__ AppleCV3D: _CV3DReconSessionProcessPlaneList
__ AppleCV3D: _CV3DReconSessionQueryOccupancyAsync
__ AppleCV3D: _CV3DReconSessionRelease
__ AppleCV3D: _CV3DReconSessionReset
__ AppleCV3D: _CV3DReconSessionRetain
__ AppleCV3D: _CV3DReconSessionWait
__ AppleCV3D: _CV3DReconSlamAdapterCreate
__ AppleCV3D: _CV3DReconSlamAdapterRelease
__ AppleCV3D: _CV3DReconSlamAdapterSetAnchoringCallbacks
__ AppleCV3D: _CV3DReconSlamMetadataCreateFromSlamState
__ AppleCV3D: _CV3DReconSlamMetadataRelease
__ AppleCV3D: _CV3DReleaseHitTestResults
__ AppleCV3D: _CV3DSLAMAnchorCopyAnchorID
__ AppleCV3D: _CV3DSLAMAnchorCopyPose
__ AppleCV3D: _CV3DSLAMAnchorCopySessionID
__ AppleCV3D: _CV3DSLAMCalibrationAddCameraParameters2
__ AppleCV3D: _CV3DSLAMCalibrationAddIMUParameters
__ AppleCV3D: _CV3DSLAMCalibrationCreate
__ AppleCV3D: _CV3DSLAMCalibrationDetectRuntimeHardware
__ AppleCV3D: _CV3DSLAMCalibrationRelease
__ AppleCV3D: _CV3DSLAMCameraFrameAddHWFP
__ AppleCV3D: _CV3DSLAMCameraFrameCreate
__ AppleCV3D: _CV3DSLAMCameraFrameRelease
__ AppleCV3D: _CV3DSLAMCameraModelTypeFromString
__ AppleCV3D: _CV3DSLAMCameraVideoModeFromString
__ AppleCV3D: _CV3DSLAMConfigAnchorStrategy
__ AppleCV3D: _CV3DSLAMConfigAsString
__ AppleCV3D: _CV3DSLAMConfigCalcFeaturePointDetectionResolution
__ AppleCV3D: _CV3DSLAMConfigCalcLineDetectionResolution
__ AppleCV3D: _CV3DSLAMConfigCreate2
__ AppleCV3D: _CV3DSLAMConfigCreateAVCaptureConfig
__ AppleCV3D: _CV3DSLAMConfigDisableCameraSwitchingAndUsePrimaryCamera
__ AppleCV3D: _CV3DSLAMConfigDisableLineTracking
__ AppleCV3D: _CV3DSLAMConfigDisableMLRelocalization
__ AppleCV3D: _CV3DSLAMConfigDisablePlaneTracking
__ AppleCV3D: _CV3DSLAMConfigEnableCollaborativeMapping
__ AppleCV3D: _CV3DSLAMConfigEnableLacc
__ AppleCV3D: _CV3DSLAMConfigEnableLineTracking
__ AppleCV3D: _CV3DSLAMConfigEnableLineTrackingAlways
__ AppleCV3D: _CV3DSLAMConfigEnableMLRelocalization
__ AppleCV3D: _CV3DSLAMConfigEnablePlaneTracking
__ AppleCV3D: _CV3DSLAMConfigEnableTransformToExternalSubmap
__ AppleCV3D: _CV3DSLAMConfigGetLaccSupported
__ AppleCV3D: _CV3DSLAMConfigIsMLRelocalizationSupported
__ AppleCV3D: _CV3DSLAMConfigOutputCollaborativeMappingStatistics
__ AppleCV3D: _CV3DSLAMConfigOverrideSessionID
__ AppleCV3D: _CV3DSLAMConfigPresetFromString
__ AppleCV3D: _CV3DSLAMConfigRelease
__ AppleCV3D: _CV3DSLAMConfigSetMapFromCFData
__ AppleCV3D: _CV3DSLAMConfigSetMappingDirectory
__ AppleCV3D: _CV3DSLAMConfigSetRelocalizationEnabled
__ AppleCV3D: _CV3DSLAMConfigUseDeterministicMode
__ AppleCV3D: _CV3DSLAMConfigUseHWFeaturePoints
__ AppleCV3D: _CV3DSLAMConfigUseSWProxyFeaturePoints
__ AppleCV3D: _CV3DSLAMJasperPointCloudCreateFromADPointCloud
__ AppleCV3D: _CV3DSLAMJasperPointCloudRelease
__ AppleCV3D: _CV3DSLAMJasperPointCloudSetProjectorMode
__ AppleCV3D: _CV3DSLAMSessionAddAnchor
__ AppleCV3D: _CV3DSLAMSessionClearMap
__ AppleCV3D: _CV3DSLAMSessionCopyJasperCameraCalibration
__ AppleCV3D: _CV3DSLAMSessionCreate
__ AppleCV3D: _CV3DSLAMSessionCreateCMPoseAnchorData
__ AppleCV3D: _CV3DSLAMSessionDeregisterNewStateBlock
__ AppleCV3D: _CV3DSLAMSessionGetCMOjbectAnchorMetadata
__ AppleCV3D: _CV3DSLAMSessionGetCMPoseAnchorTransformation
__ AppleCV3D: _CV3DSLAMSessionGetSessionID
__ AppleCV3D: _CV3DSLAMSessionPushAccel
__ AppleCV3D: _CV3DSLAMSessionPushCMData
__ AppleCV3D: _CV3DSLAMSessionPushCamera
__ AppleCV3D: _CV3DSLAMSessionPushGyro
__ AppleCV3D: _CV3DSLAMSessionPushJasperPointCloud
__ AppleCV3D: _CV3DSLAMSessionRegisterNewStateBlock
__ AppleCV3D: _CV3DSLAMSessionRelease
__ AppleCV3D: _CV3DSLAMSessionRemoveAnchor
__ AppleCV3D: _CV3DSLAMSessionRetain
__ AppleCV3D: _CV3DSLAMSessionSerializeMap
__ AppleCV3D: _CV3DSLAMSessionSetCMDataBlock
__ AppleCV3D: _CV3DSLAMSessionSetLineEnablementPolicy
__ AppleCV3D: _CV3DSLAMSessionSetOutputMapPoints
__ AppleCV3D: _CV3DSLAMSessionWait
__ AppleCV3D: _CV3DSLAMSetErrorBlock
__ AppleCV3D: _CV3DSLAMSetNewStateBlock
__ AppleCV3D: _CV3DSLAMStateConvertPoseToCameraFrame
__ AppleCV3D: _CV3DSLAMStateCopyCameraFrameRates
__ AppleCV3D: _CV3DSLAMStateCopyCurrentTrackingCameraIds
__ AppleCV3D: _CV3DSLAMStateCopyNewAnchors
__ AppleCV3D: _CV3DSLAMStateCopyRemovedAnchors
__ AppleCV3D: _CV3DSLAMStateCopyUpdatedAnchors
__ AppleCV3D: _CV3DSLAMStateCreateFromData
__ AppleCV3D: _CV3DSLAMStateGetCameraSwitchingStatistics
__ AppleCV3D: _CV3DSLAMStateGetCollaborativeMapStatistics
__ AppleCV3D: _CV3DSLAMStateGetExternalAnchorNames
__ AppleCV3D: _CV3DSLAMStateGetLineCloud
__ AppleCV3D: _CV3DSLAMStateGetMapKeyFrameQuality
__ AppleCV3D: _CV3DSLAMStateGetMapMergeStats
__ AppleCV3D: _CV3DSLAMStateGetMapSize
__ AppleCV3D: _CV3DSLAMStateGetMappingIOMode
__ AppleCV3D: _CV3DSLAMStateGetNumberOfVOToVIOStateTransitions
__ AppleCV3D: _CV3DSLAMStateGetOldestStateCovarianceMatrices
__ AppleCV3D: _CV3DSLAMStateGetPointCloud
__ AppleCV3D: _CV3DSLAMStateGetPoseInCameraFrame
__ AppleCV3D: _CV3DSLAMStateGetRelocalizationTimestamp
__ AppleCV3D: _CV3DSLAMStateGetSLAMMode
__ AppleCV3D: _CV3DSLAMStateGetStatus
__ AppleCV3D: _CV3DSLAMStateGetTimestamp
__ AppleCV3D: _CV3DSLAMStateGetVisualSLAMState
__ AppleCV3D: _CV3DSLAMStateIsGlobalRelocalization
__ AppleCV3D: _CV3DSLAMStateIsInitFinished
__ AppleCV3D: _CV3DSLAMStateNumReinit
__ AppleCV3D: _CV3DSLAMStateRelease
__ AppleCV3D: _CV3DSLAMStateRelocalizationSucceeded
__ AppleCV3D: _CV3DSLAMStateRetain
__ AppleCV3D: _CV3DSLAMStateSerializeToData
__ AppleCV3D: _CV3DSLAMStateSnapshotCreate
__ AppleCV3D: _CV3DSLAMStateSnapshotCreateSLAMState
__ AppleCV3D: _CV3DSLAMStateSnapshotGetPose
__ AppleCV3D: _CV3DSLAMStateSnapshotRelease
__ AppleCV3D: _CV3DSLAMStateWasTrackingMap
__ AppleCV3D: _CV3DSurfaceDetectionCreateWithArgs
__ AppleCV3D: _CV3DSurfaceDetectionDefaultParameters
__ AppleCV3D: _CV3DSurfaceDetectionRelease
__ AppleCV3D: _CV3DSurfaceDetectionResultRelease
__ AppleCV3D: _CV3DSurfaceDetectionSingleShotSurfaces
__ AppleCV3D: _CV3DUpdateHitTestResultPose
__ AppleCV3D: _CV3DVIOAddCameraCalibrationToDictionaryV2
__ AppleCV3D: _CV3DVIOAlignAndMergeMaps
__ AppleCV3D: _CV3DVIOCreateKeyframesFromMap
__ AppleCV3D: _CV3DVIOCreatePointsFromMap
__ AppleCV3D: _CV3DVIOExtractObjectMap
__ AppleCV3D: _CV3DVIOGetMapBounds
__ AppleCV3D: _CV3DVIOIsVideoModeSupported
__ AppleCV3D: _CV3PosePredictionInitialize
__ AppleCV3D: _SetDefaultCameraCalibrationData
__ AppleCV3D: _SetDefaultImuCalibrationData
__ AppleCV3D: _SetDefaultJasperCalibrationData
__ AppleCV3D: _kAnchorToLatest
__ AppleCV3D: _kCV3DODT_DeterministicMode
__ AppleCV3D: _kCV3DODT_ForceDetection
__ AppleCV3D: _kCV3DODT_MaxNumberImagesToTrack
__ AppleCV3D: _kCV3DPlaneDetectionPlaneDesiredOrientationHorizontal
__ AppleCV3D: _kCV3DPlaneDetectionPlaneDesiredOrientationHorizontalAndVertical
__ AppleCV3D: _kCV3DPlaneDetectionPlaneDesiredOrientationNone
__ AppleCV3D: _kCV3DPlaneDetectionPlaneDesiredOrientationVertical
__ AppleCV3D: _kCV3DPlaneDetectionPlaneOrientationHorizontal
__ AppleCV3D: _kCV3DPlaneDetectionPlaneOrientationVertical
__ AppleCV3D: _kCV3DPlaneDetectionPolicyDepth
__ AppleCV3D: _kCV3DPlaneDetectionPolicySparseDepth
__ AppleCV3D: _kCV3DPlaneDetectionPolicyVio
__ AppleCV3D: _kCV3DRaycastIntentConsideredGeometryAll
__ AppleCV3D: _kCV3DRaycastIntentConsideredGeometryTrackedPlanes
__ AppleCV3D: _kCV3DRaycastIntentDesiredOrientationAny
__ AppleCV3D: _kCV3DRaycastIntentDesiredOrientationHorizontal
__ AppleCV3D: _kCV3DRaycastIntentDesiredOrientationHorizontalOrVertical
__ AppleCV3D: _kCV3DRaycastIntentDesiredOrientationVertical
__ AppleCV3D: _kCV3DRaycastIntentExtentAccurate
__ AppleCV3D: _kCV3DRaycastIntentExtentCheckInfinite
__ AppleCV3D: _kCV3DRaycastIntentExtentConvexHull
__ AppleCV3D: _kCV3DRaycastResultExtentCheckInfinite
__ AppleCV3D: _kCV3DRaycastResultOrientationHorizontal
__ AppleCV3D: _kCV3DRaycastResultOrientationVertical
__ AppleCV3D: _kCV3DRaycastResultOriginTrackedPlane
__ AppleCV3D: _kCV3DReconMappingAttributeColor
__ AppleCV3D: _kCV3DReconMappingAttributeSemantic
__ AppleCV3D: _kCV3DReconSessionPresetKeyframing
__ AppleCV3D: _kCV3DReconSessionPresetKeyframingVolumetricSeqIOS
__ AppleCV3D: _kCV3DReconSessionPresetVolumetricEfficiency
__ AppleCV3D: _kCV3DReconSessionPresetVolumetricQuality
__ AppleCV3D: _kCV3DSLAMAnchorAddedResultError
__ AppleCV3D: _kCV3DSLAMAnchorAddedResultInactiveAnchorGroup
__ AppleCV3D: _kCV3DSLAMAnchorAddedResultNoActiveAnchorGroup
__ AppleCV3D: _kCV3DSLAMAnchorAddedResultNoError
__ AppleCV3D: _kCV3DSLAMCMDataValueTypeKeyframeInfo
__ AppleCV3D: _kCV3DSLAMCMDataValueTypeMapRegistrationStats
__ AppleCV3D: _kCV3DSLAMCMDataValueTypeObjectAnchorRemoval
__ AppleCV3D: _kCV3DSLAMCMDataValueTypeObjectsAnchor
__ AppleCV3D: _kCV3DSLAMCMDataValueTypePoseAnchor
__ AppleCV3D: _kCV3DSLAMCMDataValueTypeRegistrationData
__ AppleCV3D: _kCV3DSLAMCMDataValueTypeRelocalizationResult
__ AppleCV3D: _kCV3DSLAMCMDataValueTypeVIOStateAndUTCTimestamp
__ AppleCV3D: _kCV3DSLAMErrorSLAMFailure
__ AppleCV3D: _kCV3DSLAMErrorSignificantFrameDataDrop
__ AppleCV3D: _kCV3DSLAMErrorSignificantImuDataDrop
__ AppleCV3D: _kCV3DSLAMJasperPointCloudProjectorModeNone
__ AppleCV3D: _kCV3DSLAMJasperPointCloudProjectorModeNormal
__ AppleCV3D: _kCV3DSLAMJasperPointCloudProjectorModeShortRange
__ AppleCV3D: _kCV3DSLAMLineEnablementPolicyAlways
__ AppleCV3D: _kCV3DSLAMLineEnablementPolicyWithLowFeaturePoints
__ AppleCV3D: _kCV3DSLAMMappingIODefault
__ AppleCV3D: _kCV3DSLAMMappingIOLocated
__ AppleCV3D: _kCV3DSLAMModeRegular
__ AppleCV3D: _kCV3DSLAMModeVisual
__ AppleCV3D: _kCV3DSLAMReturnCMMapNotAvailable
__ AppleCV3D: _kCV3DSLAMReturnError
__ AppleCV3D: _kCV3DSLAMReturnInsufficientMemory
__ AppleCV3D: _kCV3DSLAMReturnInvalidContext
__ AppleCV3D: _kCV3DSLAMReturnInvalidParameter
__ AppleCV3D: _kCV3DSLAMReturnNoError
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigDynamicThresholdingEnabled
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigFeatureBinningEnabled
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigFeatureDetectionFlowType
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigFeatureDetectionThreshold
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigFeatureMatchingDescriptorSize
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigFeatureMatchingEnabled
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigFeatureOrientationAssignmentEnabled
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigGuassianPyramidOctaveCount
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigGuassianPyramidOctaveDownscaleFactor
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigHammingDistanceThreshold
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigLaccConfigAndMetadata
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigMaxBurstDuration
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigMaxKeypointCount
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigMinBurstFrameDuration
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigMinFrameDuration
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigOrientationDistanceThreshold
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigSigmaDistanceThreshold
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigSquareDistanceDisparityFraction
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigSubPixelThreshold
__ AppleCV3D: _kCV3DVIO_CameraDescription
__ AppleCV3D: _kCV3DVIO_EffectiveFocusLength
__ AppleCV3D: _kCV3DVIO_IntrinsicsDictionary
__ AppleCV3D: _kCV3DVIO_LensType
__ AppleCV3D: _kCV3DVIO_PrincipalPoint
__ AppleCV3D: _kCV3DVIO_RadialDistortionCoefficients
__ AppleCV3D: _kCV3DVIO_TangentialDistortionCoefficients
__ AppleCV3D: _kCV3DVisualSLAMStateVisionOnly
__ AppleCV3D: _kCV3DVisualSLAMStateVisionOnlyAndInertialInitialization
__ AppleCV3D: _kCV3DVisualSLAMStateVisualInertial
__ AppleCV3D: _kMostRelavant
__ AppleCV3DMOVKit: _OBJC_CLASS_$_CMData
__ AppleCV3DMOVKit: _OBJC_CLASS_$_CVACMAccelerometerData
__ AppleCV3DMOVKit: _OBJC_CLASS_$_CVACMCompassData
__ AppleCV3DMOVKit: _OBJC_CLASS_$_CVACMGyroData
__ AppleCV3DMOVKit: _OBJC_CLASS_$_CVACameraCalibrationData
__ AppleCV3DMOVKit: _OBJC_CLASS_$_CVADepthIR
__ AppleCV3DMOVKit: _OBJC_CLASS_$_CVADepthTOF
__ AppleCV3DMOVKit: _OBJC_CLASS_$_CVAFeatureBuffer
__ AppleCV3DMOVKit: _OBJC_CLASS_$_CVAUserEvent
__ AppleCV3DMOVKit: _OBJC_CLASS_$_MOVReaderInterface
__ AppleCV3DMOVKit: _OBJC_CLASS_$_MOVWriterInterface
__ AppleCV3DMOVKit: _OBJC_CLASS_$_MetadataWrapper
__ AppleCV3DMOVKit: _kAVMetadataIdentifierFrameworkState
__ AppleCV3DMOVKit: _kAccelerometerIdentifierValue
__ AppleCV3DMOVKit: _kCMDataIdentifierValue
__ AppleCV3DMOVKit: _kCVACameraCalibrationIdentifierValue
__ AppleCV3DMOVKit: _kCVADepthIRIdentifierValue
__ AppleCV3DMOVKit: _kCVADepthTOFIdentifierValue
__ AppleCV3DMOVKit: _kCVAFeatureBufferIdentifierValue
__ AppleCV3DMOVKit: _kCVAUserEventIdentifierValue
__ AppleCV3DMOVKit: _kCompassIdentifierValue
__ AppleCV3DMOVKit: _kCoreLocationIdentifierValue
__ AppleCV3DMOVKit: _kDepthFrameRate
__ AppleCV3DMOVKit: _kDepthTOFIdentifierValue
__ AppleCV3DMOVKit: _kDepthTOFIdentifierValue2_3
__ AppleCV3DMOVKit: _kGyroscopeIdentifierValue
__ AppleCV3DMOVKit: _kIMUMotionIdentifierValue
__ AppleCV3DMOVKit: _kMOVSummaryDeviceString
__ AppleCV3DMOVKit: _kRawAccelerometerIdentifierValue
__ AppleCV3DMOVKit: _kRawCompassIdentifierValue
__ AppleCV3DMOVKit: _kRawGyroscopeIdentifierValue
__ AppleCV3DModels: _CV3DModelsCreateObjectRegionProposalModelData
__ AppleCVA: _CVAFaceTrackingCopySemantics
__ AppleCVA: _CVAFaceTrackingCreate
__ AppleCVA: _CVAFaceTrackingGetErrorDescription
__ AppleCVA: _CVAFaceTrackingMaximumNumberOfTrackedFaces
__ AppleCVA: _CVAFaceTrackingProcess
__ AppleCVA: _kCVAFaceTracking_AddDebugInfo
__ AppleCVA: _kCVAFaceTracking_AddMesh
__ AppleCVA: _kCVAFaceTracking_Animation
__ AppleCVA: _kCVAFaceTracking_AnimationBlendshapes
__ AppleCVA: _kCVAFaceTracking_AnimationGaze
__ AppleCVA: _kCVAFaceTracking_AnimationLeftEyePitch
__ AppleCVA: _kCVAFaceTracking_AnimationLeftEyeYaw
__ AppleCVA: _kCVAFaceTracking_AnimationRightEyePitch
__ AppleCVA: _kCVAFaceTracking_AnimationRightEyeYaw
__ AppleCVA: _kCVAFaceTracking_AnimationTongueOut
__ AppleCVA: _kCVAFaceTracking_BlendshapeActivations
__ AppleCVA: _kCVAFaceTracking_BlendshapeNames
__ AppleCVA: _kCVAFaceTracking_Callback
__ AppleCVA: _kCVAFaceTracking_CameraColor
__ AppleCVA: _kCVAFaceTracking_Color
__ AppleCVA: _kCVAFaceTracking_DataFailure
__ AppleCVA: _kCVAFaceTracking_DebugInfo
__ AppleCVA: _kCVAFaceTracking_Depth
__ AppleCVA: _kCVAFaceTracking_DepthUnit
__ AppleCVA: _kCVAFaceTracking_DetectedFaceAngleInfoRoll
__ AppleCVA: _kCVAFaceTracking_DetectedFaceFaceID
__ AppleCVA: _kCVAFaceTracking_DetectedFaceRect
__ AppleCVA: _kCVAFaceTracking_DetectedFacesArray
__ AppleCVA: _kCVAFaceTracking_Extrinsics
__ AppleCVA: _kCVAFaceTracking_FaceID
__ AppleCVA: _kCVAFaceTracking_FailureType
__ AppleCVA: _kCVAFaceTracking_Geometry
__ AppleCVA: _kCVAFaceTracking_GeometryLeftEye
__ AppleCVA: _kCVAFaceTracking_GeometryRightEye
__ AppleCVA: _kCVAFaceTracking_GeometryVertices
__ AppleCVA: _kCVAFaceTracking_Intrinsics
__ AppleCVA: _kCVAFaceTracking_Mesh
__ AppleCVA: _kCVAFaceTracking_MeshQuadIndices
__ AppleCVA: _kCVAFaceTracking_MeshTexcoords
__ AppleCVA: _kCVAFaceTracking_MeshVertices
__ AppleCVA: _kCVAFaceTracking_Pose
__ AppleCVA: _kCVAFaceTracking_RawData
__ AppleCVA: _kCVAFaceTracking_Rotation
__ AppleCVA: _kCVAFaceTracking_SetCameraDepthFromColor
__ AppleCVA: _kCVAFaceTracking_SmoothData
__ AppleCVA: _kCVAFaceTracking_Timestamp
__ AppleCVA: _kCVAFaceTracking_TrackedFacesArray
__ AppleCVA: _kCVAFaceTracking_Translation
__ AppleDepth: _OBJC_CLASS_$_ADAggregationParameters
__ AppleDepth: _OBJC_CLASS_$_ADCameraCalibration
__ AppleDepth: _OBJC_CLASS_$_ADJasperColorPipeline
__ AppleDepth: _OBJC_CLASS_$_ADJasperPointCloud
__ AppleDepth: _OBJC_CLASS_$_ADLKTOpticalFlow
__ AppleDepth: _OBJC_CLASS_$_ADMagnificationForRadiusLensDistortionModel
__ AppleDepth: _OBJC_CLASS_$_ADMonocularPipeline
__ AppleDepth: _OBJC_CLASS_$_ADMutableCameraCalibration
__ AppleDepth: _OBJC_CLASS_$_ADNilDistortionModel
__ AppleDepth: _OBJC_CLASS_$_ADNormals
__ AppleDepth: _OBJC_CLASS_$_ADNormalsBuffer
__ AppleDepth: _OBJC_CLASS_$_ADPointCloudAggregator
__ AppleNeuralEngine: _OBJC_CLASS_$__ANEDeviceInfo
__ BackBoardServices: _OBJC_CLASS_$_BKSAccelerometer
__ CMCapture: _kFigCapturePortType_BackFacingCamera
__ CMCapture: _kFigCapturePortType_BackFacingSparseTimeOfFlightCamera
__ CMCapture: _kFigCapturePortType_BackFacingSuperWideCamera
__ CMCapture: _kFigCaptureSampleBufferAttachmentKey_MetadataDictionary
__ CMCapture: _kFigCaptureSampleBufferAttachmentKey_OriginalPresentationTimeStamp
__ CMCapture: _kFigCaptureStreamMetadata_AEAverage
__ CMCapture: _kFigCaptureStreamMetadata_AETarget
__ CMCapture: _kFigCaptureStreamMetadata_ExposureTime
__ CMCapture: _kFigCaptureStreamMetadata_ISOBase
__ CMCapture: _kFigCaptureStreamMetadata_SNR
__ CMCapture: _kFigCaptureStreamMetadata_TotalSensorCropRect
__ CMCapture: _kFigCaptureStreamMetadata_ValidBufferRect
__ CMCapture: _kFigDepthBlurEffectMetadataKey_RenderingParameters
__ CMCapture: _kFigDepthBlurEffectMetadataKey_SimulatedAperture
__ CMCapture: _kFigDepthMetadataAttachmentKey_Accuracy
__ CMCapture: _kFigDepthMetadataAttachmentKey_Filtered
__ CMCapture: _kFigDepthMetadataAttachmentKey_Quality
__ CMCapture: _kFigDepthPrivateMetadataAttachmentKey_DepthDataVersion
__ CMCapture: _kFigSampleBufferAttachmentKey_DepthMetadata
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreAppleCVA: __ZN3cva6VecLibIfE4gemmEbbiiifPKfiS3_ifPfi
__ CoreAppleCVA: __ZN3cva6VecLibIfE4gemvEbiifPKfiS3_ifPfi
__ CoreAppleCVA: __ZN3cva6vecLib5gesvdIfEEvcciiPKT_iPS2_S5_iS5_iS5_iPi
__ CoreAppleCVA: __ZN3cva7imwriteINS_6MatrixIhLj3ELj1ELb0EEEEEbRKNS_9ArrayViewIT_Lj2EEEPKc
__ CoreAppleCVA: __ZN3cva7imwriteIhEEbRKNS_9ArrayViewIT_Lj2EEEPKc
__ CoreAppleCVA: __ZN3cva7imwriteItEEbRKNS_9ArrayViewIT_Lj2EEEPKc
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFCopyDescription
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFErrorCopyDescription
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopObserverCreateWithHandler
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRemoveObserver
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRun
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopStop
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateFromUUIDBytes
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _CFUUIDGetUUIDBytes
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSStreamDataWrittenToMemoryStreamKey
__ CoreFoundation: _NSURLIsReadableKey
__ CoreFoundation: _NSURLIsWritableKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFRunLoopSetPerCalloutAutoreleasepoolEnabled
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleExecutableKey
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGDataProviderCopyData
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageGetAlphaInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPointMakeWithDictionaryRepresentation
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectCreateDictionaryRepresentation
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectMakeWithDictionaryRepresentation
__ CoreGraphics: _CGRectStandardize
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreIK: _CoreIKCreateAltruisticSolverInstance
__ CoreIK: _CoreIKDestroySolver
__ CoreIK: _CoreIKSolverGetTargetBufferSize
__ CoreIK: _CoreIKSolverGetTargetName
__ CoreIK: _CoreIKSolverGetTargetParentName
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _OBJC_CLASS_$_CLSimulationManager
__ CoreLocation: _OBJC_CLASS_$__CLLocationGroundAltitude
__ CoreLocation: _OBJC_CLASS_$__CLVIOEstimation
__ CoreLocation: _OBJC_CLASS_$__CLVLLocalizationResult
__ CoreLocation: _kCLDistanceFilterNone
__ CoreLocation: _kCLLocationAccuracyBest
__ CoreLocation: _kCLLocationCoordinate2DInvalid
__ CoreLocationReplay: _OBJC_CLASS_$__CLLocationPlayer
__ CoreML: _OBJC_CLASS_$_MLArrayBatchProvider
__ CoreML: _OBJC_CLASS_$_MLFeatureValue
__ CoreML: _OBJC_CLASS_$_MLModel
__ CoreML: _OBJC_CLASS_$_MLPredictionOptions
__ CoreMedia: _CMAudioFormatDescriptionCreate
__ CoreMedia: _CMClockGetTime
__ CoreMedia: _CMFormatDescriptionGetMediaSubType
__ CoreMedia: _CMGetAttachment
__ CoreMedia: _CMSampleBufferGetImageBuffer
__ CoreMedia: _CMSampleBufferGetPresentationTimeStamp
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeCopyAsDictionary
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeMakeFromDictionary
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _CMVideoFormatDescriptionGetDimensions
__ CoreMedia: _FigCFDictionaryGetCGRectIfPresent
__ CoreMedia: _kCMSampleBufferAttachmentKey_CameraIntrinsicMatrix
__ CoreMedia: _kCMSampleBufferAttachmentKey_DroppedFrameReason
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimeRangeZero
__ CoreMedia: _kCMTimeZero
__ CoreMotion: _OBJC_CLASS_$_CMDeviceMotion
__ CoreMotion: _OBJC_CLASS_$_CMMotionManager
__ CoreNavigation: __ZN12cnnavigation17ENUToECEFJacobianD1Ev
__ CoreNavigation: __ZN12cnnavigation9ECEFToENUEPKdNS_7LLATypeENS_13ENUOriginTypeES1_NS_7ENUTypeEPd
__ CoreNavigation: __ZN12cnnavigation9ECEFToLLAEPKdNS_7LLATypeEPd
__ CoreNavigation: __ZN12cnnavigation9ENUToECEFEPKdNS_7LLATypeENS_13ENUOriginTypeES1_NS_7ENUTypeEPd
__ CoreNavigation: __ZN12cnnavigation9ENUToECEFEPKdNS_7LLATypeENS_13ENUOriginTypeES1_NS_7ENUTypeEPdRNS_17ENUToECEFJacobianE
__ CoreNavigation: __ZN12cnnavigation9LLAToECEFEPKdNS_7LLATypeEPd
__ CoreNavigation: __ZTVN12cnnavigation17ENUToECEFJacobianE
__ CoreUI: _OBJC_CLASS_$_CUICatalog
__ CoreVideo: _CVBufferCopyAttachment
__ CoreVideo: _CVBufferCopyAttachments
__ CoreVideo: _CVBufferPropagateAttachments
__ CoreVideo: _CVBufferRelease
__ CoreVideo: _CVBufferRetain
__ CoreVideo: _CVBufferSetAttachment
__ CoreVideo: _CVDataBufferGetIOSurface
__ CoreVideo: _CVPixelBufferCreate
__ CoreVideo: _CVPixelBufferCreateWithBytes
__ CoreVideo: _CVPixelBufferCreateWithIOSurface
__ CoreVideo: _CVPixelBufferGetBaseAddress
__ CoreVideo: _CVPixelBufferGetBaseAddressOfPlane
__ CoreVideo: _CVPixelBufferGetBytesPerRow
__ CoreVideo: _CVPixelBufferGetBytesPerRowOfPlane
__ CoreVideo: _CVPixelBufferGetDataSize
__ CoreVideo: _CVPixelBufferGetHeight
__ CoreVideo: _CVPixelBufferGetHeightOfPlane
__ CoreVideo: _CVPixelBufferGetIOSurface
__ CoreVideo: _CVPixelBufferGetPixelFormatType
__ CoreVideo: _CVPixelBufferGetPlaneCount
__ CoreVideo: _CVPixelBufferGetWidth
__ CoreVideo: _CVPixelBufferGetWidthOfPlane
__ CoreVideo: _CVPixelBufferIsPlanar
__ CoreVideo: _CVPixelBufferLockBaseAddress
__ CoreVideo: _CVPixelBufferPoolCreate
__ CoreVideo: _CVPixelBufferPoolCreatePixelBuffer
__ CoreVideo: _CVPixelBufferPoolGetPixelBufferAttributes
__ CoreVideo: _CVPixelBufferPoolRelease
__ CoreVideo: _CVPixelBufferRelease
__ CoreVideo: _CVPixelBufferRetain
__ CoreVideo: _CVPixelBufferUnlockBaseAddress
__ CoreVideo: _kCVPixelBufferBytesPerRowAlignmentKey
__ CoreVideo: _kCVPixelBufferCGBitmapContextCompatibilityKey
__ CoreVideo: _kCVPixelBufferCGImageCompatibilityKey
__ CoreVideo: _kCVPixelBufferHeightKey
__ CoreVideo: _kCVPixelBufferIOSurfacePropertiesKey
__ CoreVideo: _kCVPixelBufferPixelFormatDescriptionKey
__ CoreVideo: _kCVPixelBufferPixelFormatTypeKey
__ CoreVideo: _kCVPixelBufferPlaneAlignmentKey
__ CoreVideo: _kCVPixelBufferWidthKey
__ Espresso: _espresso_context_destroy
__ Espresso: _espresso_context_set_low_precision_accumulation
__ Espresso: _espresso_create_context
__ Espresso: _espresso_create_plan
__ Espresso: _espresso_network_bind_buffer
__ Espresso: _espresso_network_bind_direct_cvpixelbuffer
__ Espresso: _espresso_network_bind_input_vimagebuffer_bgra8
__ Espresso: _espresso_network_declare_input
__ Espresso: _espresso_network_declare_output
__ Espresso: _espresso_network_get_version
__ Espresso: _espresso_network_query_blob_dimensions
__ Espresso: _espresso_network_select_configuration
__ Espresso: _espresso_plan_add_network
__ Espresso: _espresso_plan_build
__ Espresso: _espresso_plan_build_clean
__ Espresso: _espresso_plan_destroy
__ Espresso: _espresso_plan_execute_sync
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFilePathErrorKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedFileSizeDescription
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSMultipleUnderlyingErrorsKey
__ Foundation: _NSPopAutoreleasePool
__ Foundation: _NSProcessInfoThermalStateDidChangeNotification
__ Foundation: _NSPushAutoreleasePool
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSCondition
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDecimalNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSProxy
__ GeoServices: _OBJC_CLASS_$_GEOApplicationAuditToken
__ IOKit: _IOHIDEventGetFloatValue
__ IOKit: _IOHIDEventGetTimeStamp
__ IOKit: _IOHIDEventGetType
__ IOKit: _IOHIDEventSystemClientCopyServices
__ IOKit: _IOHIDEventSystemClientCreateWithType
__ IOKit: _IOHIDEventSystemClientRegisterEventCallback
__ IOKit: _IOHIDEventSystemClientScheduleWithDispatchQueue
__ IOKit: _IOHIDEventSystemClientSetMatching
__ IOKit: _IOHIDEventSystemClientUnregisterEventCallback
__ IOKit: _IOHIDEventSystemClientUnscheduleFromDispatchQueue
__ IOKit: _IOHIDServiceClientCopyProperty
__ IOKit: _IOHIDServiceClientSetProperty
__ IOSurface: _IOSurfaceGetAllocSize
__ IOSurface: _IOSurfaceGetBaseAddress
__ IOSurface: _IOSurfaceGetBytesPerElement
__ IOSurface: _IOSurfaceGetBytesPerRow
__ IOSurface: _IOSurfaceGetHeight
__ IOSurface: _IOSurfaceGetHeightOfPlane
__ IOSurface: _IOSurfaceGetID
__ IOSurface: _IOSurfaceGetPixelFormat
__ IOSurface: _IOSurfaceGetUseCount
__ IOSurface: _IOSurfaceGetWidth
__ IOSurface: _IOSurfaceGetWidthOfPlane
__ IOSurface: _IOSurfaceLock
__ IOSurface: _IOSurfaceLookup
__ IOSurface: _IOSurfaceNotifierCreate
__ IOSurface: _IOSurfaceNotifierSetDispatchQueue
__ IOSurface: _IOSurfaceUnlock
__ IOSurface: _OBJC_CLASS_$_IOSurface
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _kCGImageDestinationEmbedThumbnail
__ MOVStreamIO: _OBJC_CLASS_$_MOVStreamIOUtility
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _OBJC_CLASS_$_MTLDepthStencilDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPassDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPipelineDescriptor
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ Metal: _OBJC_CLASS_$_MTLVertexDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageConvolution
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageGuidedFilter
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentifier
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessMonitor
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessPredicate
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessStateDescriptor
__ SceneIntelligence: _OBJC_CLASS_$_SIPeopleSegmentationAlgorithm
__ SceneIntelligence: _OBJC_CLASS_$_SIPersonDetectorAlgorithm
__ SceneIntelligence: _OBJC_CLASS_$_SISceneSegmentationAlgorithm
__ SceneIntelligence: _OBJC_CLASS_$_SISceneUnderstandingAlgorithm
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ VideoToolbox: _VTPixelRotationSessionCreate
__ VideoToolbox: _VTPixelRotationSessionInvalidate
__ VideoToolbox: _VTPixelRotationSessionRotateImage
__ VideoToolbox: _VTPixelTransferSessionCreate
__ VideoToolbox: _VTPixelTransferSessionInvalidate
__ VideoToolbox: _VTPixelTransferSessionTransferImage
__ VideoToolbox: _VTSessionSetProperties
__ VideoToolbox: _VTSessionSetProperty
__ VideoToolbox: _kVTPixelRotationPropertyKey_FlipHorizontalOrientation
__ VideoToolbox: _kVTPixelRotationPropertyKey_FlipVerticalOrientation
__ VideoToolbox: _kVTPixelRotationPropertyKey_Rotation
__ VideoToolbox: _kVTPixelTransferPropertyKey_SourceCropRectangle
__ VideoToolbox: _kVTRotation_0
__ VideoToolbox: _kVTRotation_180
__ VideoToolbox: _kVTRotation_CCW90
__ VideoToolbox: _kVTRotation_CW90
__ VisualLocalization: _OBJC_CLASS_$_VLLocalizationDebugInfo
__ VisualLocalization: _OBJC_CLASS_$_VLLocalizationResult
__ VisualLocalization: _OBJC_CLASS_$_VLLocalizer
__ VisualLocalization: _OBJC_CLASS_$_VLTraceRecorder
__ VisualLocalization: _VLLocalizerDebugInfoKey
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _NSVersionOfRunTimeLibrary
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___exp10f
__ libSystem.B.dylib: ___invert_d4
__ libSystem.B.dylib: ___invert_f3
__ libSystem.B.dylib: ___invert_f4
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___memset_chk
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: _acos
__ libSystem.B.dylib: _acosf
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _asinf
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _clock_gettime_nsec_np
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _cosf
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_pthread_root_queue_create
__ libSystem.B.dylib: _dispatch_queue_attr_make_initially_inactive
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_workloop_create_inactive
__ libSystem.B.dylib: _dispatch_workloop_set_qos_class_floor
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _expf
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fileno
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputs
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _isatty
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _log2f
__ libSystem.B.dylib: _logf
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _matrix_identity_double4x4
__ libSystem.B.dylib: _matrix_identity_float3x3
__ libSystem.B.dylib: _matrix_identity_float4x4
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_assert_not_owner
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_trylock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _posix_memalign
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _pthread_attr_destroy
__ libSystem.B.dylib: _pthread_attr_getschedparam
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_attr_setinheritsched
__ libSystem.B.dylib: _pthread_attr_setschedparam
__ libSystem.B.dylib: _pthread_attr_setschedpolicy
__ libSystem.B.dylib: _pthread_set_fixedpriority_self
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _rand_r
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sinf
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlnametomib
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: _tanf
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _xpc_get_type
__ libarchive.2.dylib: _archive_entry_filetype
__ libarchive.2.dylib: _archive_entry_free
__ libarchive.2.dylib: _archive_entry_new
__ libarchive.2.dylib: _archive_entry_pathname
__ libarchive.2.dylib: _archive_entry_set_atime
__ libarchive.2.dylib: _archive_entry_set_birthtime
__ libarchive.2.dylib: _archive_entry_set_ctime
__ libarchive.2.dylib: _archive_entry_set_filetype
__ libarchive.2.dylib: _archive_entry_set_mtime
__ libarchive.2.dylib: _archive_entry_set_pathname
__ libarchive.2.dylib: _archive_entry_set_perm
__ libarchive.2.dylib: _archive_entry_set_size
__ libarchive.2.dylib: _archive_error_string
__ libarchive.2.dylib: _archive_read_data
__ libarchive.2.dylib: _archive_read_free
__ libarchive.2.dylib: _archive_read_new
__ libarchive.2.dylib: _archive_read_next_header
__ libarchive.2.dylib: _archive_read_open_filename
__ libarchive.2.dylib: _archive_read_open_memory
__ libarchive.2.dylib: _archive_read_support_filter_compress
__ libarchive.2.dylib: _archive_read_support_format_zip
__ libarchive.2.dylib: _archive_set_error
__ libarchive.2.dylib: _archive_write_data
__ libarchive.2.dylib: _archive_write_free
__ libarchive.2.dylib: _archive_write_header
__ libarchive.2.dylib: _archive_write_new
__ libarchive.2.dylib: _archive_write_open
__ libarchive.2.dylib: _archive_write_open_filename
__ libarchive.2.dylib: _archive_write_set_format_zip
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
__ libc++.1.dylib: __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNKSt9exception4whatEv
__ libc++.1.dylib: __ZNSt11logic_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt11logic_errorD1Ev
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt12out_of_rangeD1Ev
__ libc++.1.dylib: __ZNSt13runtime_errorC1EPKc
__ libc++.1.dylib: __ZNSt13runtime_errorD1Ev
__ libc++.1.dylib: __ZNSt19bad_optional_accessD1Ev
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_
__ libc++.1.dylib: __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4openEPKcj
__ libc++.1.dylib: __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE5closeEv
__ libc++.1.dylib: __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC1Ev
__ libc++.1.dylib: __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE4peekEv
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6ignoreEli
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC1ERS3_b
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERf
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__14coutE
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__119__shared_weak_countE
__ libc++.1.dylib: __ZTIPKc
__ libc++.1.dylib: __ZTISt11logic_error
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt12out_of_range
__ libc++.1.dylib: __ZTISt13runtime_error
__ libc++.1.dylib: __ZTISt19bad_optional_access
__ libc++.1.dylib: __ZTISt9exception
__ libc++.1.dylib: __ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTTNSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTTNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTVNSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTVSt12out_of_range
__ libc++.1.dylib: __ZTVSt19bad_optional_access
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_copyPropertyList
__ libobjc.A.dylib: _class_createInstance
__ libobjc.A.dylib: _class_getInstanceVariable
__ libobjc.A.dylib: _class_getMethodImplementation
__ libobjc.A.dylib: _class_getProperty
__ libobjc.A.dylib: _class_getSuperclass
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyClassNamesForImage
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getClassList
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x3
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _object_setIvar
__ libobjc.A.dylib: _property_copyAttributeValue
__ libobjc.A.dylib: _property_getName
ARCV3DPlaneDetectionPlaneList : NSObject
 @property  r^{CV3DPlaneDetectionPlaneList=} cv3dPlaneDetections

  // instance methods
  -[ARCV3DPlaneDetectionPlaneList dealloc]
  -[ARCV3DPlaneDetectionPlaneList initWithDetectionResult:]
  -[ARCV3DPlaneDetectionPlaneList numberOfPlanes]
  -[ARCV3DPlaneDetectionPlaneList planeAtIndex:]
  -[ARCV3DPlaneDetectionPlaneList cv3dPlaneDetections]


ARCV3DPlaneDetectionSingleShotPlaneList : NSObject
 @property  r^{CV3DPlaneDetectionSingleShotPlaneList=} cv3dPlaneDetections

  // instance methods
  -[ARCV3DPlaneDetectionSingleShotPlaneList dealloc]
  -[ARCV3DPlaneDetectionSingleShotPlaneList initWithDetectionResult:]
  -[ARCV3DPlaneDetectionSingleShotPlaneList cv3dPlaneDetections]


ARMatteGenerator : NSObject
 @property  unsigned long uncertaintyRadius
 @property  unsigned long erosionRadius
 @property  unsigned long dilationRadius

  // instance methods
  -[ARMatteGenerator .cxx_destruct]
  -[ARMatteGenerator initWithDevice:matteResolution:useSmoothing:]
  -[ARMatteGenerator initWithDevice:matteResolution:]
  -[ARMatteGenerator _commonInitWithDevice:matteResolution:useSmoothing:]
  -[ARMatteGenerator setUncertaintyRadius:]
  -[ARMatteGenerator setErosionRadius:]
  -[ARMatteGenerator setDilationRadius:]
  -[ARMatteGenerator setupAlphaBufferForFrame:]
  -[ARMatteGenerator setupDepthBufferForFrame:]
  -[ARMatteGenerator setupBuffersForFrame:]
  -[ARMatteGenerator encodeCoefficients:frame:coefficientsForeground:coefficientsBackground:]
  -[ARMatteGenerator generateMatteFromFrame:commandBuffer:]
  -[ARMatteGenerator generateDilatedDepthFromFrame:commandBuffer:]
  -[ARMatteGenerator uncertaintyRadius]
  -[ARMatteGenerator erosionRadius]
  -[ARMatteGenerator dilationRadius]


AR3DSkeletonRetargetingTechnique : ARTechnique
 @property  ARCoreRESkeletonResults *latestResults
 @property  NSObject<OS_dispatch_semaphore> *resultSemaphore

  // class methods
  +[AR3DSkeletonRetargetingTechnique producesResultDataForAnchorOfClass:]

  // instance methods
  -[AR3DSkeletonRetargetingTechnique .cxx_destruct]
  -[AR3DSkeletonRetargetingTechnique latestResults]
  -[AR3DSkeletonRetargetingTechnique processData:]
  -[AR3DSkeletonRetargetingTechnique isEqual:]
  -[AR3DSkeletonRetargetingTechnique init]
  -[AR3DSkeletonRetargetingTechnique prepare:]
  -[AR3DSkeletonRetargetingTechnique requestResultDataAtTimestamp:context:]
  -[AR3DSkeletonRetargetingTechnique _retargetSkeleton:]
  -[AR3DSkeletonRetargetingTechnique setLatestResults:]
  -[AR3DSkeletonRetargetingTechnique resultSemaphore]
  -[AR3DSkeletonRetargetingTechnique setResultSemaphore:]


ARTrackedRaycastPostProcessor : NSObject
 @property  ARSession *session
 @property  NSArray *trackedRaycasts

  // instance methods
  -[ARTrackedRaycastPostProcessor invalidateAllRaycasts]
  -[ARTrackedRaycastPostProcessor session]
  -[ARTrackedRaycastPostProcessor removeTrackedRaycastWithIdentifier:]
  -[ARTrackedRaycastPostProcessor addTrackedRaycast:andProcessInitialResults:]
  -[ARTrackedRaycastPostProcessor setSession:]
  -[ARTrackedRaycastPostProcessor dealloc]
  -[ARTrackedRaycastPostProcessor .cxx_destruct]
  -[ARTrackedRaycastPostProcessor startUpdateTimer]
  -[ARTrackedRaycastPostProcessor trackedRaycasts]
  -[ARTrackedRaycastPostProcessor initWithSession:]
  -[ARTrackedRaycastPostProcessor updatePose:referenceOriginTransform:oldRayOrigin:oldRayDirection:newRayOrigin:newRayDirection:]
  -[ARTrackedRaycastPostProcessor invalidateRaycastWithIdentifier:]
  -[ARTrackedRaycastPostProcessor result:isCloseEnoughToInitialResultForRaycast:]
  -[ARTrackedRaycastPostProcessor processInitialResults:forRaycast:]
  -[ARTrackedRaycastPostProcessor processUpdatedResults:]
  -[ARTrackedRaycastPostProcessor performBlockWhileLockingRaycasts:]
  -[ARTrackedRaycastPostProcessor updateFromTimer:]
  -[ARTrackedRaycastPostProcessor updateFromPoseGraphEventWithData:referenceOriginTransform:]


ARDualGuidedFilter : NSObject
 @property  unsigned long uncertaintyRadius
 @property  unsigned long erosionRadius
 @property  double epsilon

  // instance methods
  -[ARDualGuidedFilter epsilon]
  -[ARDualGuidedFilter .cxx_destruct]
  -[ARDualGuidedFilter setEpsilon:]
  -[ARDualGuidedFilter setUncertaintyRadius:]
  -[ARDualGuidedFilter setErosionRadius:]
  -[ARDualGuidedFilter uncertaintyRadius]
  -[ARDualGuidedFilter erosionRadius]
  -[ARDualGuidedFilter initWithDevice:useSmoothing:]
  -[ARDualGuidedFilter encodeBoxBlurToCommandBuffer:input:intermediate:output:]
  -[ARDualGuidedFilter setupBuffersWithWidth:andHeight:]
  -[ARDualGuidedFilter encodeDualCoefficients:guide:stencil:coefficientsTextureFG:coefficientsTextureBG:]


ARProcessMonitorStateUpdate : NSObject
 @property  NSString *name
 @property  int pid
 @property  long long taskState
 @property  long long debugState
 @property  BOOL isVisible

  // instance methods
  -[ARProcessMonitorStateUpdate isVisible]
  -[ARProcessMonitorStateUpdate debugState]
  -[ARProcessMonitorStateUpdate .cxx_destruct]
  -[ARProcessMonitorStateUpdate taskState]
  -[ARProcessMonitorStateUpdate pid]
  -[ARProcessMonitorStateUpdate name]
  -[ARProcessMonitorStateUpdate initWithRBSProcessStateUpdate:]


ARProcessMonitor : NSObject
 @property  <ARProcessMonitorStateChangeDelegate> *delegate

  // class methods
  +[ARProcessMonitor processIsDaemon:error:]

  // instance methods
  -[ARProcessMonitor setDelegate:]
  -[ARProcessMonitor delegate]
  -[ARProcessMonitor dealloc]
  -[ARProcessMonitor .cxx_destruct]
  -[ARProcessMonitor handleStateUpdate:]
  -[ARProcessMonitor init]
  -[ARProcessMonitor startMonitoringPID:]
  -[ARProcessMonitor stopMonitoringPID:]
  -[ARProcessMonitor updateProcessMonitorConfig:withPredicates:]


ARMeshChunk : NSObject
 @property  {ChunkMesh={Matrix<short chunkMesh
 @property  {vector<unsigned char semanticsVector
 @property  double voxelSize
 @property  void chunkID
 @property  <MTLBuffer> *vertices
 @property  <MTLBuffer> *normals
 @property  <MTLBuffer> *faces
 @property  <MTLBuffer> *edges
 @property  <MTLBuffer> *semantics
 @property  unsigned int numVertices
 @property  unsigned int numNormals
 @property  unsigned int numFaces
 @property  unsigned int numEdges
 @property  unsigned int numSemantics
 @property  double timestamp

  // instance methods
  -[ARMeshChunk numFaces]
  -[ARMeshChunk identifier]
  -[ARMeshChunk setTimestamp:]
  -[ARMeshChunk .cxx_construct]
  -[ARMeshChunk edges]
  -[ARMeshChunk .cxx_destruct]
  -[ARMeshChunk setFaces:]
  -[ARMeshChunk setEdges:]
  -[ARMeshChunk timestamp]
  -[ARMeshChunk faces]
  -[ARMeshChunk vertexCount]
  -[ARMeshChunk faceCount]
  -[ARMeshChunk semantics]
  -[ARMeshChunk setSemantics:]
  -[ARMeshChunk vertices]
  -[ARMeshChunk setVertices:]
  -[ARMeshChunk initWithChunk:device:timestamp:voxelSize:]
  -[ARMeshChunk chunkIdFromPosition]
  -[ARMeshChunk chunkIdentifier]
  -[ARMeshChunk addSemantics:count:size:]
  -[ARMeshChunk convertToWorldSourceFromVisionSource:relativeTransform:rotationOnly:]
  -[ARMeshChunk anchorForReferenceOriginTransform:]
  -[ARMeshChunk chunkID]
  -[ARMeshChunk setChunkID:]
  -[ARMeshChunk normals]
  -[ARMeshChunk setNormals:]
  -[ARMeshChunk numVertices]
  -[ARMeshChunk setNumVertices:]
  -[ARMeshChunk numNormals]
  -[ARMeshChunk setNumNormals:]
  -[ARMeshChunk setNumFaces:]
  -[ARMeshChunk numEdges]
  -[ARMeshChunk setNumEdges:]
  -[ARMeshChunk numSemantics]
  -[ARMeshChunk setNumSemantics:]
  -[ARMeshChunk chunkMesh]
  -[ARMeshChunk setChunkMesh:]
  -[ARMeshChunk semanticsVector]
  -[ARMeshChunk setSemanticsVector:]
  -[ARMeshChunk voxelSize]
  -[ARMeshChunk setVoxelSize:]


ARMagnetometerData : NSObject <ARMutableSensorData, ARMetadataWrapperCoding, NSSecureCoding>
 @property  double timestamp
 @property  {?=ddd} magneticField
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARMagnetometerData supportsSecureCoding]
  +[ARMagnetometerData grabNextFromReader:timestamp:]

  // instance methods
  -[ARMagnetometerData setTimestamp:]
  -[ARMagnetometerData magneticField]
  -[ARMagnetometerData encodeWithCoder:]
  -[ARMagnetometerData copyWithZone:]
  -[ARMagnetometerData timestamp]
  -[ARMagnetometerData isEqual:]
  -[ARMagnetometerData initWithCoder:]
  -[ARMagnetometerData setMagneticField:]
  -[ARMagnetometerData encodeToMetadataWrapper]
  -[ARMagnetometerData initWithMetadataWrapper:]
  -[ARMagnetometerData appendToWriter:]
  -[ARMagnetometerData initWithCompassData:]


ARMLImageMattingMetadataTechnique : ARImageBasedTechnique
 @property  BOOL shouldOperateOnHighResolutionImages

  // instance methods
  -[ARMLImageMattingMetadataTechnique dealloc]
  -[ARMLImageMattingMetadataTechnique .cxx_destruct]
  -[ARMLImageMattingMetadataTechnique processData:]
  -[ARMLImageMattingMetadataTechnique isEqual:]
  -[ARMLImageMattingMetadataTechnique init]
  -[ARMLImageMattingMetadataTechnique prepare:]
  -[ARMLImageMattingMetadataTechnique requestResultDataAtTimestamp:context:]
  -[ARMLImageMattingMetadataTechnique requiredTimeInterval]
  -[ARMLImageMattingMetadataTechnique resultDataClasses]
  -[ARMLImageMattingMetadataTechnique _processDataInBackgound:]
  -[ARMLImageMattingMetadataTechnique _generateMattingMetadata:]
  -[ARMLImageMattingMetadataTechnique shouldOperateOnHighResolutionImages]
  -[ARMLImageMattingMetadataTechnique setShouldOperateOnHighResolutionImages:]


ARTrackedRaycast : NSObject
 @property  NSUUID *identifier
 @property  @? updateHandler
 @property  ARWorldTrackingTechnique *attachedWorldTrackingTechnique
 @property  ARRaycastQuery *trackedQuery

  // instance methods
  -[ARTrackedRaycast query]
  -[ARTrackedRaycast identifier]
  -[ARTrackedRaycast .cxx_destruct]
  -[ARTrackedRaycast updateHandler]
  -[ARTrackedRaycast stopTracking]
  -[ARTrackedRaycast initWithIdentifier:ray:worldTrackingTechnique:updateHandler:]
  -[ARTrackedRaycast attachedWorldTrackingTechnique]
  -[ARTrackedRaycast setAttachedWorldTrackingTechnique:]
  -[ARTrackedRaycast trackedQuery]
  -[ARTrackedRaycast setTrackedQuery:]


AR2DSkeletonDetectionTechnique : ARMLImageProcessingTechnique <ARTechniqueBusyState>
 @property  BOOL isBusy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AR2DSkeletonDetectionTechnique inputDimensionsForMLModel]

  // instance methods
  -[AR2DSkeletonDetectionTechnique .cxx_destruct]
  -[AR2DSkeletonDetectionTechnique init]
  -[AR2DSkeletonDetectionTechnique requiredTimeInterval]
  -[AR2DSkeletonDetectionTechnique _prepareOnce:]
  -[AR2DSkeletonDetectionTechnique processImageDataThroughNeuralNetwork:originalImageData:regionOfInterest:rotationOfResultTensor:]
  -[AR2DSkeletonDetectionTechnique runNeuralNetworkWithImageData:originalImageData:regionOfInterest:rotationOfResultTensor:]
  -[AR2DSkeletonDetectionTechnique _startLoadingMLModelSignpost]
  -[AR2DSkeletonDetectionTechnique _endLoadingMLModelSignpost]
  -[AR2DSkeletonDetectionTechnique _startMLProcessingSignpostWithTimestamp:]
  -[AR2DSkeletonDetectionTechnique _endMLProcessingSignpostWithTimestamp:]
  -[AR2DSkeletonDetectionTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[AR2DSkeletonDetectionTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[AR2DSkeletonDetectionTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[AR2DSkeletonDetectionTechnique _endMLCreateResultSignpostWithTimestamp:]


ARDepthSensorSettings : ARImageSensorSettings
 @property  NSString *timeOfFlightProjectorMode

  // instance methods
  -[ARDepthSensorSettings setTimeOfFlightProjectorMode:]
  -[ARDepthSensorSettings timeOfFlightProjectorMode]
  -[ARDepthSensorSettings .cxx_destruct]
  -[ARDepthSensorSettings copyWithZone:]
  -[ARDepthSensorSettings isEqual:]
  -[ARDepthSensorSettings initWithVideoFormat:]


ARDepthSensor : ARImageSensor <AVCapturePointCloudDataOutputDelegate>
 @property  AVCapturePointCloudDataOutput *pointCloudOutput
 @property  ARDepthSensorSettings *mutableDepthSettings
 @property  NSString *projectorMode
 @property  ARDepthSensorSettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARDepthSensor registerSignPostForPointCloudData:]

  // instance methods
  -[ARDepthSensor pointCloudOutput]
  -[ARDepthSensor .cxx_destruct]
  -[ARDepthSensor projectorMode]
  -[ARDepthSensor stop]
  -[ARDepthSensor setProjectorMode:]
  -[ARDepthSensor start]
  -[ARDepthSensor reconfigure:]
  -[ARDepthSensor pointCloudDataOutput:didOutputPointCloudData:timestamp:connection:]
  -[ARDepthSensor pointCloudDataOutput:didDropPointCloudData:timestamp:connection:reason:]
  -[ARDepthSensor providedDataTypes]
  -[ARDepthSensor prepareToStart]
  -[ARDepthSensor configureCaptureSession]
  -[ARDepthSensor mutableDepthSettings]
  -[ARDepthSensor canReconfigure:]
  -[ARDepthSensor _configureProjectorModeForDevice:]
  -[ARDepthSensor setPointCloudOutput:]


AR3DSkeletonLiftingTechnique : ARMLImageProcessingTechnique
  // instance methods
  -[AR3DSkeletonLiftingTechnique .cxx_destruct]
  -[AR3DSkeletonLiftingTechnique init]
  -[AR3DSkeletonLiftingTechnique requiredTimeInterval]
  -[AR3DSkeletonLiftingTechnique _prepareOnce:]
  -[AR3DSkeletonLiftingTechnique _startLoadingMLModelSignpost]
  -[AR3DSkeletonLiftingTechnique _endLoadingMLModelSignpost]
  -[AR3DSkeletonLiftingTechnique _startMLProcessingSignpostWithTimestamp:]
  -[AR3DSkeletonLiftingTechnique _endMLProcessingSignpostWithTimestamp:]
  -[AR3DSkeletonLiftingTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[AR3DSkeletonLiftingTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[AR3DSkeletonLiftingTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[AR3DSkeletonLiftingTechnique _endMLCreateResultSignpostWithTimestamp:]
  -[AR3DSkeletonLiftingTechnique requiredSensorDataTypes]
  -[AR3DSkeletonLiftingTechnique changeEspressoConfig:]
  -[AR3DSkeletonLiftingTechnique processEspressoTensor:]


ARGPUSphericalBlur : NSObject
  // instance methods
  -[ARGPUSphericalBlur .cxx_destruct]
  -[ARGPUSphericalBlur init]
  -[ARGPUSphericalBlur blurCubemapTexture:roughness:rotation:]


ARImageTrackingTechnique : ARImageDetectionTechnique
  // instance methods
  -[ARImageTrackingTechnique initWithReferenceImages:maximumNumberOfTrackedImages:]
  -[ARImageTrackingTechnique initWithReferenceImages:maximumNumberOfTrackedImages:deterministicMode:]


ARReferenceImageCachedError : NSObject
 @property  NSError *error

  // instance methods
  -[ARReferenceImageCachedError error]
  -[ARReferenceImageCachedError .cxx_destruct]
  -[ARReferenceImageCachedError setError:]


ARReferenceImage : NSObject <NSSecureCoding>
 @property  double estimatedQuality
 @property  ARReferenceImageCachedError *cachedVerificationError
 @property  {CGSize=dd} imageSize
 @property  ^{__CVBuffer=} pixelBuffer
 @property  ^{__CVBuffer=} alphaMask
 @property  NSUUID *identifier
 @property  NSString *name
 @property  {CGSize=dd} physicalSize
 @property  NSString *resourceGroupName

  // class methods
  +[ARReferenceImage supportsSecureCoding]
  +[ARReferenceImage referenceImagesInGroupNamed:catalog:]
  +[ARReferenceImage referenceImagesInGroupNamed:bundle:]
  +[ARReferenceImage referenceImagesInGroupNamed:catalogName:bundle:]
  +[ARReferenceImage referenceImagesInGroupNamed:catalogURL:]

  // instance methods
  -[ARReferenceImage identifier]
  -[ARReferenceImage imageSize]
  -[ARReferenceImage encodeWithCoder:]
  -[ARReferenceImage pixelBuffer]
  -[ARReferenceImage dealloc]
  -[ARReferenceImage .cxx_destruct]
  -[ARReferenceImage setName:]
  -[ARReferenceImage copyWithZone:]
  -[ARReferenceImage name]
  -[ARReferenceImage isEqual:]
  -[ARReferenceImage physicalSize]
  -[ARReferenceImage initWithCoder:]
  -[ARReferenceImage validateWithCompletionHandler:]
  -[ARReferenceImage initWithCGImage:orientation:physicalWidth:addPadding:]
  -[ARReferenceImage initWithPixelBuffer:orientation:physicalWidth:addPadding:]
  -[ARReferenceImage initWithCGImage:orientation:physicalWidth:]
  -[ARReferenceImage initWithPixelBuffer:orientation:physicalWidth:]
  -[ARReferenceImage initWithCIImage:orientation:physicalWidth:alphaInfo:addPadding:]
  -[ARReferenceImage setResourceGroupName:]
  -[ARReferenceImage estimateQualityWithCompletionHandler:]
  -[ARReferenceImage resourceGroupName]
  -[ARReferenceImage estimatedQuality]
  -[ARReferenceImage setEstimatedQuality:]
  -[ARReferenceImage cachedVerificationError]
  -[ARReferenceImage setCachedVerificationError:]
  -[ARReferenceImage alphaMask]


AR3DSkeletonDetectionResult : NSObject <NSSecureCoding, NSCopying>
 @property  unsigned long jointCount
 @property  r^ joints
 @property  r^ jointsLocalSpace
 @property  ABPK2DDetectionResult *skeletonDetectionResult2D

  // class methods
  +[AR3DSkeletonDetectionResult supportsSecureCoding]
  +[AR3DSkeletonDetectionResult childrenIndices]
  +[AR3DSkeletonDetectionResult jointNames]
  +[AR3DSkeletonDetectionResult parentIndices]

  // instance methods
  -[AR3DSkeletonDetectionResult encodeWithCoder:]
  -[AR3DSkeletonDetectionResult .cxx_construct]
  -[AR3DSkeletonDetectionResult .cxx_destruct]
  -[AR3DSkeletonDetectionResult copyWithZone:]
  -[AR3DSkeletonDetectionResult isEqual:]
  -[AR3DSkeletonDetectionResult initWithCoder:]
  -[AR3DSkeletonDetectionResult initWithJoints:numberOfJoints:referenceDetectionResult:]
  -[AR3DSkeletonDetectionResult joints]
  -[AR3DSkeletonDetectionResult jointsLocalSpace]
  -[AR3DSkeletonDetectionResult jointCount]
  -[AR3DSkeletonDetectionResult isJointTracked:]
  -[AR3DSkeletonDetectionResult createResultScaledByFactor:]
  -[AR3DSkeletonDetectionResult skeletonDetectionResult2D]


AR3DSkeletonDetectionResults : NSObject <ARResultData, NSCopying>
 @property  NSArray *detectedSkeletons
 @property  double timestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AR3DSkeletonDetectionResults setTimestamp:]
  -[AR3DSkeletonDetectionResults .cxx_destruct]
  -[AR3DSkeletonDetectionResults copyWithZone:]
  -[AR3DSkeletonDetectionResults timestamp]
  -[AR3DSkeletonDetectionResults detectedSkeletons]
  -[AR3DSkeletonDetectionResults setDetectedSkeletons:]


ARRemoteControl : NSObject <ARRemoteControlProtocol>
 @property  <ARControlProtocol> *control
 @property  <ARControlProtocol> *syncControl
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARRemoteControl initWithEndpoint:]
  -[ARRemoteControl interruptionHandler]
  -[ARRemoteControl .cxx_destruct]
  -[ARRemoteControl invalidate]
  -[ARRemoteControl invalidationHandler]
  -[ARRemoteControl init]
  -[ARRemoteControl control]
  -[ARRemoteControl syncControl]


ARLocationSensorService : ARSensorService <ARRemoteLocationSensorService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARLocationSensorService serviceName]

  // instance methods
  -[ARLocationSensorService initWithConnection:]
  -[ARLocationSensorService sensor:didOutputSensorData:]
  -[ARLocationSensorService configureForReplay]
  -[ARLocationSensorService currentLocationWithReply:]
  -[ARLocationSensorService lookupAltitudeAtCoordinate:completionHandler:]
  -[ARLocationSensorService updateARSessionState:]
  -[ARLocationSensorService updateEstimationFromVIOPose:imageData:]
  -[ARLocationSensorService updateFromVisualLocalizationResult:]
  -[ARLocationSensorService updateFromLocationData:]
  -[ARLocationSensorService updateFromDeviceOrientationData:]


AREnvironmentTexturingTechnique : ARTechnique
 @property  AREnvironmentProbeManager *probeManager
 @property  BOOL networkIntialized
 @property  BOOL wantsHDREnvironmentTextures

  // class methods
  +[AREnvironmentTexturingTechnique producesResultDataForAnchorOfClass:]

  // instance methods
  -[AREnvironmentTexturingTechnique .cxx_destruct]
  -[AREnvironmentTexturingTechnique processData:]
  -[AREnvironmentTexturingTechnique _fullDescription]
  -[AREnvironmentTexturingTechnique setProbeManager:]
  -[AREnvironmentTexturingTechnique probeManager]
  -[AREnvironmentTexturingTechnique isEqual:]
  -[AREnvironmentTexturingTechnique prepare:]
  -[AREnvironmentTexturingTechnique requestResultDataAtTimestamp:context:]
  -[AREnvironmentTexturingTechnique requiredSensorDataTypes]
  -[AREnvironmentTexturingTechnique initWithOptions:wantsHDREnvironmentTextures:]
  -[AREnvironmentTexturingTechnique reconfigurableFrom:]
  -[AREnvironmentTexturingTechnique reconfigureFrom:]
  -[AREnvironmentTexturingTechnique wantsHDREnvironmentTextures]
  -[AREnvironmentTexturingTechnique networkIntialized]
  -[AREnvironmentTexturingTechnique setNetworkIntialized:]


ARImageData : NSObject <ARDictionaryCoding, ARImageSensorData, ARQATraceable, NSCopying, ARDaemonSecureCoding>
 @property  NSMutableDictionary *extrinsicsMap
 @property  NSDictionary *tiffData
 @property  AVCaptureDevice *captureDevice
 @property  double timestamp
 @property  NSDate *captureDate
 @property  double currentCaptureTimestamp
 @property  {?=[3]} cameraIntrinsics
 @property  ^{__CVBuffer=} pixelBuffer
 @property  BOOL mirrored
 @property  {CGSize=dd} imageResolution
 @property  unsigned long lensType
 @property  void radialDistortion
 @property  void tangentialDistortion
 @property  double exposureDuration
 @property  float exposureTargetOffset
 @property  float temperature
 @property  float signalToNoiseRatio
 @property  float ISO
 @property  NSDictionary *exifData
 @property  long long deviceOrientation
 @property  ARFaceData *faceData
 @property  AVDepthData *depthData
 @property  ARPointCloud *pointCloud
 @property  double depthDataTimestamp
 @property  ^{__CVBuffer=} visionData
 @property  long long cameraPosition
 @property  NSString *cameraType
 @property  AVCameraCalibrationData *calibrationData
 @property  ADCameraCalibration *adCameraCalibration
 @property  long long captureFramesPerSecond
 @property  ARImageData *originalImage
 @property  BOOL secondary
 @property  BOOL highResolution
 @property  ARImageData *latestUltraWideImage
 @property  {?=[4]} visionTransform
 @property  double timestampOfSynchronizedWideImageData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDictionary *tracingEntry

  // class methods
  +[ARImageData supportsSecureCoding]
  +[ARImageData captureDateFromPresentationTimestamp:session:]

  // instance methods
  -[ARImageData setTemperature:]
  -[ARImageData temperature]
  -[ARImageData ISO]
  -[ARImageData exposureTargetOffset]
  -[ARImageData exposureDuration]
  -[ARImageData setTimestamp:]
  -[ARImageData initWithImageData:]
  -[ARImageData isMirrored]
  -[ARImageData encodeWithCoder:]
  -[ARImageData pixelBuffer]
  -[ARImageData initWithDictionary:]
  -[ARImageData dealloc]
  -[ARImageData setMirrored:]
  -[ARImageData cameraPosition]
  -[ARImageData .cxx_destruct]
  -[ARImageData deviceOrientation]
  -[ARImageData debugQuickLookObject]
  -[ARImageData setDeviceOrientation:]
  -[ARImageData captureDevice]
  -[ARImageData captureDate]
  -[ARImageData cameraType]
  -[ARImageData copyWithZone:]
  -[ARImageData timestamp]
  -[ARImageData setCaptureDevice:]
  -[ARImageData setExposureDuration:]
  -[ARImageData isEqual:]
  -[ARImageData depthData]
  -[ARImageData originalImage]
  -[ARImageData init]
  -[ARImageData initWithCoder:]
  -[ARImageData lensType]
  -[ARImageData setCameraType:]
  -[ARImageData setExposureTargetOffset:]
  -[ARImageData cameraIntrinsics]
  -[ARImageData setCameraIntrinsics:]
  -[ARImageData calibrationData]
  -[ARImageData setSecondary:]
  -[ARImageData currentCaptureTimestamp]
  -[ARImageData imageResolution]
  -[ARImageData setPixelBuffer:]
  -[ARImageData signalToNoiseRatio]
  -[ARImageData setSignalToNoiseRatio:]
  -[ARImageData setCameraPosition:]
  -[ARImageData encodeToDictionary]
  -[ARImageData setImageResolution:]
  -[ARImageData setLensType:]
  -[ARImageData radialDistortion]
  -[ARImageData setRadialDistortion:]
  -[ARImageData tangentialDistortion]
  -[ARImageData setTangentialDistortion:]
  -[ARImageData setISO:]
  -[ARImageData tracingEntry]
  -[ARImageData initWithSampleBuffer:captureFramePerSecond:captureDevice:captureSession:]
  -[ARImageData initWithPixelBuffer:captureFramePerSecond:captureDevice:captureSession:timestamp:intrinsics:exif:]
  -[ARImageData initWithPixelBuffer:captureFramePerSecond:captureDevice:captureSession:timestamp:intrinsics:exif:tiff:]
  -[ARImageData setVisionData:]
  -[ARImageData extrinsicsMap]
  -[ARImageData matchesPixelBufferPointerRecursively:]
  -[ARImageData extrinsicMatrix4x4ToDeviceType:]
  -[ARImageData extrinsicMatrixToDeviceType:]
  -[ARImageData addExtrinsicMatrix:toDeviceType:]
  -[ARImageData addExtrinsicMatrix4x4:toDeviceType:]
  -[ARImageData setCaptureDate:]
  -[ARImageData setCurrentCaptureTimestamp:]
  -[ARImageData exifData]
  -[ARImageData setExifData:]
  -[ARImageData faceData]
  -[ARImageData setFaceData:]
  -[ARImageData setDepthData:]
  -[ARImageData pointCloud]
  -[ARImageData setPointCloud:]
  -[ARImageData depthDataTimestamp]
  -[ARImageData setDepthDataTimestamp:]
  -[ARImageData visionData]
  -[ARImageData setCalibrationData:]
  -[ARImageData adCameraCalibration]
  -[ARImageData setAdCameraCalibration:]
  -[ARImageData captureFramesPerSecond]
  -[ARImageData setCaptureFramesPerSecond:]
  -[ARImageData isSecondary]
  -[ARImageData isHighResolution]
  -[ARImageData setHighResolution:]
  -[ARImageData latestUltraWideImage]
  -[ARImageData setLatestUltraWideImage:]
  -[ARImageData visionTransform]
  -[ARImageData setVisionTransform:]
  -[ARImageData timestampOfSynchronizedWideImageData]
  -[ARImageData setTimestampOfSynchronizedWideImageData:]
  -[ARImageData setExtrinsicsMap:]
  -[ARImageData tiffData]


ARModifiedImageData : ARImageData
 @property  ARImageData *originalImage
 @property  NSDictionary *metaData

  // instance methods
  -[ARModifiedImageData setMetaData:]
  -[ARModifiedImageData metaData]
  -[ARModifiedImageData initWithImageData:]
  -[ARModifiedImageData .cxx_destruct]
  -[ARModifiedImageData originalImage]


ARCameraParameters : NSObject <NSSecureCoding>
 @property  {CGSize=dd} imageResolution
 @property  {CGPoint=dd} focalLength
 @property  {CGPoint=dd} principalPoint

  // class methods
  +[ARCameraParameters supportsSecureCoding]

  // instance methods
  -[ARCameraParameters focalLength]
  -[ARCameraParameters encodeWithCoder:]
  -[ARCameraParameters copyWithZone:]
  -[ARCameraParameters initWithCoder:]
  -[ARCameraParameters imageResolution]
  -[ARCameraParameters initWithFocalLength:imageResolution:principalPoint:]
  -[ARCameraParameters principalPoint]


ARKitUserDefaults : NSObject
  // class methods
  +[ARKitUserDefaults defaultValues]
  +[ARKitUserDefaults userDefaultsCache]
  +[ARKitUserDefaults synchronize]
  +[ARKitUserDefaults integerForKey:]
  +[ARKitUserDefaults setObject:forKey:]
  +[ARKitUserDefaults valueForKey:]
  +[ARKitUserDefaults objectForKeySlow:]
  +[ARKitUserDefaults stringForKey:]
  +[ARKitUserDefaults floatForKey:]
  +[ARKitUserDefaults numberForKey:]
  +[ARKitUserDefaults removeCachedObjectForKey:]
  +[ARKitUserDefaults resolutionDictionaryForKey:]
  +[ARKitUserDefaults listForKey:]
  +[ARKitUserDefaults removeObjectForKey:]
  +[ARKitUserDefaults setBool:forKey:]
  +[ARKitUserDefaults boolForKey:]
  +[ARKitUserDefaults removeAllKeys]
  +[ARKitUserDefaults shouldUseCache]
  +[ARKitUserDefaults objectForKey:]
  +[ARKitUserDefaults cacheObject:forKey:]
  +[ARKitUserDefaults clearUserDefaultsCache]
  +[ARKitUserDefaults setValue:forKey:]
  +[ARKitUserDefaults objectForKey:useCache:]
  +[ARKitUserDefaults doubleForKey:]
  +[ARKitUserDefaults keysApprovedForProcessEnvironmentOverride]
  +[ARKitUserDefaults cachedObjectForKey:]


ARInertialState : NSObject <ARDaemonSecureCoding>
 @property  ^d covarianceMatrix
 @property  {?=[3]} orientation
 @property  void position
 @property  void velocity
 @property  void accelerometerBias
 @property  void gyroscopeBias

  // class methods
  +[ARInertialState supportsSecureCoding]

  // instance methods
  -[ARInertialState setVelocity:]
  -[ARInertialState encodeWithCoder:]
  -[ARInertialState orientation]
  -[ARInertialState velocity]
  -[ARInertialState setOrientation:]
  -[ARInertialState setPosition:]
  -[ARInertialState isEqual:]
  -[ARInertialState position]
  -[ARInertialState initWithCoder:]
  -[ARInertialState initWithCovarianceMatrix:]
  -[ARInertialState covarianceMatrix]
  -[ARInertialState accelerometerBias]
  -[ARInertialState setAccelerometerBias:]
  -[ARInertialState gyroscopeBias]
  -[ARInertialState setGyroscopeBias:]


ARImageBasedTechnique : ARTechnique
  // instance methods
  -[ARImageBasedTechnique .cxx_destruct]
  -[ARImageBasedTechnique processData:]
  -[ARImageBasedTechnique _fullDescription]
  -[ARImageBasedTechnique init]
  -[ARImageBasedTechnique requestResultDataAtTimestamp:context:]
  -[ARImageBasedTechnique pushResultData:forFrameReference:]
  -[ARImageBasedTechnique pushResultData:forFrame:]
  -[ARImageBasedTechnique pushResultData:forTimestamp:]
  -[ARImageBasedTechnique prepareResultData:forContext:]
  -[ARImageBasedTechnique context:matchesFrameReference:]
  -[ARImageBasedTechnique getDeviceOrientationFromImageData:]


ARImageDetectionTechnique : ARImageBasedTechnique
 @property  ARWorldTrackingPoseData *currentWorldTrackingPose
 @property  ARODTHandleManager *odtTHandleManger
 @property  NSDictionary *referenceImageMap
 @property  BOOL finishedLoadingImages
 @property  BOOL enableAutomaticImageScaleEstimation

  // class methods
  +[ARImageDetectionTechnique producesResultDataForAnchorOfClass:]
  +[ARImageDetectionTechnique _redetectionRequiredForContext:]

  // instance methods
  -[ARImageDetectionTechnique .cxx_construct]
  -[ARImageDetectionTechnique .cxx_destruct]
  -[ARImageDetectionTechnique processData:]
  -[ARImageDetectionTechnique isEqual:]
  -[ARImageDetectionTechnique prepare:]
  -[ARImageDetectionTechnique requiredTimeInterval]
  -[ARImageDetectionTechnique requiredSensorDataTypes]
  -[ARImageDetectionTechnique initWithReferenceImages:maximumNumberOfTrackedImages:continuousDetection:processingQueue:]
  -[ARImageDetectionTechnique initWithReferenceImages:maximumNumberOfTrackedImages:]
  -[ARImageDetectionTechnique setPowerUsage:]
  -[ARImageDetectionTechnique initWithReferenceImages:]
  -[ARImageDetectionTechnique initWithReferenceImages:maximumNumberOfTrackedImages:processingQueue:]
  -[ARImageDetectionTechnique syncWithProcessedImage]
  -[ARImageDetectionTechnique captureBehavior]
  -[ARImageDetectionTechnique deterministicMode]
  -[ARImageDetectionTechnique finishedLoadingImages]
  -[ARImageDetectionTechnique processResultData:timestamp:context:]
  -[ARImageDetectionTechnique _loadReferenceImagesInBackground]
  -[ARImageDetectionTechnique _loadReferenceImages]
  -[ARImageDetectionTechnique _addReferenceImagesAppleCV3D]
  -[ARImageDetectionTechnique _enqueueImageForTrackingSynced:]
  -[ARImageDetectionTechnique _enqueueImageForTrackingNonBlocking:]
  -[ARImageDetectionTechnique _trackImagesWithImageData:timeBudget:]
  -[ARImageDetectionTechnique predictAtTimeStamp:timeBudget:predictedWorldTrackingPose:]
  -[ARImageDetectionTechnique enableAutomaticImageScaleEstimation]
  -[ARImageDetectionTechnique setEnableAutomaticImageScaleEstimation:]
  -[ARImageDetectionTechnique currentWorldTrackingPose]
  -[ARImageDetectionTechnique setCurrentWorldTrackingPose:]
  -[ARImageDetectionTechnique odtTHandleManger]
  -[ARImageDetectionTechnique referenceImageMap]


ARMLImageTransform : NSObject
  // instance methods
  -[ARMLImageTransform dealloc]
  -[ARMLImageTransform .cxx_destruct]
  -[ARMLImageTransform initWithScaledSize:]
  -[ARMLImageTransform fastPassDownscaledResultDataFromImageData:croppedRect:rotation:rotationOfResultTensor:]
  -[ARMLImageTransform _calculatePreScalingPassesForInputResolution:]
  -[ARMLImageTransform _preScaleImageData:]
  -[ARMLImageTransform _prepareSessionAndPoolForRotation:]
  -[ARMLImageTransform _applyFinalTransformToScaledImage:rotation:finalResultSize:originalImageData:]


ARMLImageDownScalingTechnique : ARImageBasedTechnique
 @property  BOOL centerCropImage
 @property  {CGSize=dd} imageSize
 @property  BOOL resizeUltraWideImage
 @property  BOOL saveIntermediateScaleResultData
 @property  BOOL shouldOperateOnHighResolutionImages
 @property  @? wideRotationStrategy
 @property  @? ultrawideRotationStrategy

  // instance methods
  -[ARMLImageDownScalingTechnique imageSize]
  -[ARMLImageDownScalingTechnique initWithSize:]
  -[ARMLImageDownScalingTechnique dealloc]
  -[ARMLImageDownScalingTechnique .cxx_destruct]
  -[ARMLImageDownScalingTechnique processData:]
  -[ARMLImageDownScalingTechnique _fullDescription]
  -[ARMLImageDownScalingTechnique isEqual:]
  -[ARMLImageDownScalingTechnique prepare:]
  -[ARMLImageDownScalingTechnique requestResultDataAtTimestamp:context:]
  -[ARMLImageDownScalingTechnique requiredTimeInterval]
  -[ARMLImageDownScalingTechnique resultDataClasses]
  -[ARMLImageDownScalingTechnique shouldOperateOnHighResolutionImages]
  -[ARMLImageDownScalingTechnique setShouldOperateOnHighResolutionImages:]
  -[ARMLImageDownScalingTechnique getDeviceOrientationFromImageData:]
  -[ARMLImageDownScalingTechnique initWithSize:requiredTimeInterval:]
  -[ARMLImageDownScalingTechnique lockOrientation:]
  -[ARMLImageDownScalingTechnique _processImageDataInBackground:]
  -[ARMLImageDownScalingTechnique defaultRotationStrategy]
  -[ARMLImageDownScalingTechnique _twoPassDownscaledResultDataFromImageData:croppedRect:]
  -[ARMLImageDownScalingTechnique _scaleImageDataForNeuralNetwork:scaledSize:]
  -[ARMLImageDownScalingTechnique _rotateImageDataForNeuralNetwork:deviceOrientation:pRegionOfInterest:pRotationOfResultTensor:]
  -[ARMLImageDownScalingTechnique _fastPassDownscaledResultDataFromImageData:croppedRect:fastPassScaler:]
  -[ARMLImageDownScalingTechnique centerCropImage]
  -[ARMLImageDownScalingTechnique setCenterCropImage:]
  -[ARMLImageDownScalingTechnique resizeUltraWideImage]
  -[ARMLImageDownScalingTechnique setResizeUltraWideImage:]
  -[ARMLImageDownScalingTechnique saveIntermediateScaleResultData]
  -[ARMLImageDownScalingTechnique setSaveIntermediateScaleResultData:]
  -[ARMLImageDownScalingTechnique wideRotationStrategy]
  -[ARMLImageDownScalingTechnique setWideRotationStrategy:]
  -[ARMLImageDownScalingTechnique ultrawideRotationStrategy]
  -[ARMLImageDownScalingTechnique setUltrawideRotationStrategy:]


ARRemoteService : NSObject <ARServerConnectionDelegate, ARNamedService, ARRemoteServiceBaseProtocol>
 @property  <ARDaemonServiceBaseProtocol> *syncService
 @property  <ARDaemonServiceBaseProtocol> *service
 @property  unsigned long status
 @property  <ARRemoteServiceAnchorDelegate> *anchorDelegate
 @property  ARServerConnection *connection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARRemoteService serviceName]
  +[ARRemoteService isSupported]
  +[ARRemoteService _runningServices]
  +[ARRemoteService createRemoteServiceInterface:]
  +[ARRemoteService createDaemonServiceInterface:]
  +[ARRemoteService remoteServiceInterface]
  +[ARRemoteService daemonServiceInterface]
  +[ARRemoteService isSupportedWithError:]

  // instance methods
  -[ARRemoteService syncService]
  -[ARRemoteService initWithEndpoint:]
  -[ARRemoteService clientProcessName]
  -[ARRemoteService clientProcessIdentifier]
  -[ARRemoteService initWithDaemon:]
  -[ARRemoteService status]
  -[ARRemoteService dealloc]
  -[ARRemoteService setStatus:]
  -[ARRemoteService .cxx_destruct]
  -[ARRemoteService _startService]
  -[ARRemoteService connection]
  -[ARRemoteService service]
  -[ARRemoteService _commonInit]
  -[ARRemoteService reconnect]
  -[ARRemoteService initWithQueue:]
  -[ARRemoteService invalidate]
  -[ARRemoteService init]
  -[ARRemoteService setSyncService:]
  -[ARRemoteService setConnection:]
  -[ARRemoteService anchorDelegate]
  -[ARRemoteService setAnchorDelegate:]
  -[ARRemoteService serverConnectionInterrupted:]
  -[ARRemoteService serverConnectionInvalidated:]
  -[ARRemoteService serviceConfiguredWithError:]
  -[ARRemoteService initWithEndpoint:startConnection:]
  -[ARRemoteService initWithMachServiceName:exportedInterface:remoteObjectInterface:]
  -[ARRemoteService initWithMachServiceName:exportedInterface:remoteObjectInterface:endpoint:]
  -[ARRemoteService initWithMachServiceName:exportedInterface:remoteObjectInterface:endpoint:startConnection:queue:]
  -[ARRemoteService connectionDispatchGroupLeave]
  -[ARRemoteService _waitUntilStarted:]
  -[ARRemoteService waitUntilStarted:]
  -[ARRemoteService syncServiceWithTimeout:callback:]
  -[ARRemoteService asyncServiceWithCallback:]
  -[ARRemoteService setService:syncService:]
  -[ARRemoteService serviceDidReconnect:]
  -[ARRemoteService serviceConfiguredWithCompletionHandler:]
  -[ARRemoteService initWithDaemon:startConnection:]


ARFaceTrackingData : NSObject <ARFaceTrackingDataProtocol>
 @property  {?=[4]} leftEyeTransform
 @property  {?=[4]} rightEyeTransform
 @property  void gazePoint
 @property  NSDictionary *trackingData
 @property  NSError *trackingError
 @property  float tongueOut
 @property  NSUUID *identifier
 @property  BOOL isValid
 @property  {?=[4]} transform
 @property  unsigned long vertexCount
 @property  r^ vertices
 @property  r^ imageVertices
 @property  unsigned long normalCount
 @property  r^ normals
 @property  unsigned long blendShapeCoefficientsCount
 @property  r^f blendShapeCoefficients
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARFaceTrackingData supportsSecureCoding]
  +[ARFaceTrackingData sharedNeutralGeometry]

  // instance methods
  -[ARFaceTrackingData identifier]
  -[ARFaceTrackingData encodeWithCoder:]
  -[ARFaceTrackingData .cxx_construct]
  -[ARFaceTrackingData isValid]
  -[ARFaceTrackingData .cxx_destruct]
  -[ARFaceTrackingData initPrivate]
  -[ARFaceTrackingData copyWithZone:]
  -[ARFaceTrackingData transform]
  -[ARFaceTrackingData isEqual:]
  -[ARFaceTrackingData vertexCount]
  -[ARFaceTrackingData initWithCoder:]
  -[ARFaceTrackingData vertices]
  -[ARFaceTrackingData normals]
  -[ARFaceTrackingData leftEyeTransform]
  -[ARFaceTrackingData rightEyeTransform]
  -[ARFaceTrackingData gazePoint]
  -[ARFaceTrackingData imageVertices]
  -[ARFaceTrackingData normalCount]
  -[ARFaceTrackingData blendShapeCoefficientsCount]
  -[ARFaceTrackingData blendShapeCoefficients]
  -[ARFaceTrackingData trackingData]
  -[ARFaceTrackingData initWithTrackingData:anchorIdentifier:]
  -[ARFaceTrackingData initWithTrackingData:transformToMirrored:anchorIdentifier:]
  -[ARFaceTrackingData _extractMetaDataAndTransformToMirrored:]
  -[ARFaceTrackingData trackingError]
  -[ARFaceTrackingData tongueOut]
  -[ARFaceTrackingData setLeftEyeTransform:]
  -[ARFaceTrackingData setRightEyeTransform:]
  -[ARFaceTrackingData setGazePoint:]
  -[ARFaceTrackingData setTrackingData:]


ARFaceTrackingResults : NSObject <ARResultData, NSSecureCoding>
 @property  NSArray *trackedFaces
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARFaceTrackingResults supportsSecureCoding]

  // instance methods
  -[ARFaceTrackingResults encodeWithCoder:]
  -[ARFaceTrackingResults .cxx_destruct]
  -[ARFaceTrackingResults initWithCoder:]
  -[ARFaceTrackingResults anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARFaceTrackingResults trackedFaces]
  -[ARFaceTrackingResults setTrackedFaces:]


ARImageRotationTechnique : ARTechnique
 @property  long long rotationAngle
 @property  long long mirrorMode

  // instance methods
  -[ARImageRotationTechnique dealloc]
  -[ARImageRotationTechnique rotationAngle]
  -[ARImageRotationTechnique processData:]
  -[ARImageRotationTechnique _fullDescription]
  -[ARImageRotationTechnique isEqual:]
  -[ARImageRotationTechnique requiredSensorDataTypes]
  -[ARImageRotationTechnique initWithRotation:mirror:]
  -[ARImageRotationTechnique _rotateAccelerate:pOutputBuffer:]
  -[ARImageRotationTechnique mirrorMode]


ARFaceTrackingImageSensor : ARImageSensor <AVCaptureMetadataOutputObjectsDelegate>
 @property  BOOL recordingMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARFaceTrackingImageSensor dealloc]
  -[ARFaceTrackingImageSensor captureOutput:didOutputSampleBuffer:fromConnection:]
  -[ARFaceTrackingImageSensor .cxx_destruct]
  -[ARFaceTrackingImageSensor stop]
  -[ARFaceTrackingImageSensor reconfigure:]
  -[ARFaceTrackingImageSensor dataOutputSynchronizer:didOutputSynchronizedDataCollection:]
  -[ARFaceTrackingImageSensor captureOutput:didOutputMetadataObjects:fromConnection:]
  -[ARFaceTrackingImageSensor _videoOrientation]
  -[ARFaceTrackingImageSensor providedDataTypes]
  -[ARFaceTrackingImageSensor prepareToStart]
  -[ARFaceTrackingImageSensor configureCaptureSession]
  -[ARFaceTrackingImageSensor initWithSettings:captureSession:captureQueue:]
  -[ARFaceTrackingImageSensor configureCaptureDevice]
  -[ARFaceTrackingImageSensor outputsForSynchronizer]
  -[ARFaceTrackingImageSensor configureCaptureSessionCalibration]
  -[ARFaceTrackingImageSensor _configureMetaDataOutput]
  -[ARFaceTrackingImageSensor capturedSynchedOutput:didOutputSampleBuffer:fromVideoConnection:metaDataOutput:didOutputMetadataObjects:didOutputDepthData:atTime:]
  -[ARFaceTrackingImageSensor recordingMode]
  -[ARFaceTrackingImageSensor setRecordingMode:]


ARMotionSensor : NSObject <ARSensor>
 @property  double interval
 @property  <ARSensorDelegate> *delegate
 @property  unsigned long powerUsage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARMotionSensor setDelegate:]
  -[ARMotionSensor delegate]
  -[ARMotionSensor dealloc]
  -[ARMotionSensor setInterval:]
  -[ARMotionSensor .cxx_destruct]
  -[ARMotionSensor stop]
  -[ARMotionSensor start]
  -[ARMotionSensor interval]
  -[ARMotionSensor providedDataTypes]
  -[ARMotionSensor initWithMotionManager:]
  -[ARMotionSensor preferredInterval]
  -[ARMotionSensor gyroscopeOutput:]
  -[ARMotionSensor accelerometerOutput:]
  -[ARMotionSensor magnetometerOutput:]


ARAppClipCodeAnchor : ARAnchor <ARTrackable>
 @property  NSURL *url
 @property  NSNumber *instanceID
 @property  float confidence
 @property  float radius
 @property  long long urlDecodingStateInternal
 @property  BOOL isScaleReliable
 @property  unsigned long urlEncodingVersion
 @property  BOOL isTracked
 @property  long long urlDecodingState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARAppClipCodeAnchor supportsSecureCoding]

  // instance methods
  -[ARAppClipCodeAnchor confidence]
  -[ARAppClipCodeAnchor instanceID]
  -[ARAppClipCodeAnchor radius]
  -[ARAppClipCodeAnchor setUrl:]
  -[ARAppClipCodeAnchor encodeWithCoder:]
  -[ARAppClipCodeAnchor .cxx_destruct]
  -[ARAppClipCodeAnchor setInstanceID:]
  -[ARAppClipCodeAnchor url]
  -[ARAppClipCodeAnchor setConfidence:]
  -[ARAppClipCodeAnchor setRadius:]
  -[ARAppClipCodeAnchor initWithCoder:]
  -[ARAppClipCodeAnchor initWithAnchor:]
  -[ARAppClipCodeAnchor isTracked]
  -[ARAppClipCodeAnchor initWithAppClipCodeResult:instanceID:]
  -[ARAppClipCodeAnchor copyWithTrackedState:]
  -[ARAppClipCodeAnchor urlDecodingState]
  -[ARAppClipCodeAnchor copyWithAppClipCodeResult:isTracked:]
  -[ARAppClipCodeAnchor urlDecodingStateInternal]
  -[ARAppClipCodeAnchor setUrlDecodingStateInternal:]
  -[ARAppClipCodeAnchor isScaleReliable]
  -[ARAppClipCodeAnchor setIsScaleReliable:]
  -[ARAppClipCodeAnchor urlEncodingVersion]
  -[ARAppClipCodeAnchor setUrlEncodingVersion:]
  -[ARAppClipCodeAnchor setIsTracked:]


ARAnchor : NSObject <ARDaemonSecureCoding, ARAnchorCopying, NSSecureCoding>
 @property  NSUUID *sessionIdentifier
 @property  {?=[4]} transform
 @property  {?=[4]} referenceTransform
 @property  double lastUpdateTimestamp
 @property  BOOL isHiddenFromPublicDelegate
 @property  NSUUID *identifier
 @property  NSString *name

  // class methods
  +[ARAnchor supportsSecureCoding]

  // instance methods
  -[ARAnchor setSessionIdentifier:]
  -[ARAnchor sessionIdentifier]
  -[ARAnchor identifier]
  -[ARAnchor encodeWithCoder:]
  -[ARAnchor .cxx_destruct]
  -[ARAnchor debugQuickLookObject]
  -[ARAnchor setTransform:]
  -[ARAnchor copyWithZone:]
  -[ARAnchor name]
  -[ARAnchor transform]
  -[ARAnchor isEqual:]
  -[ARAnchor initWithCoder:]
  -[ARAnchor initWithTransform:]
  -[ARAnchor initWithAnchor:]
  -[ARAnchor setLastUpdateTimestamp:]
  -[ARAnchor lastUpdateTimestamp]
  -[ARAnchor copyWithTrackedState:]
  -[ARAnchor initWithIdentifier:transform:name:]
  -[ARAnchor initWithIdentifier:transform:name:hiddenFromPublicDelegate:]
  -[ARAnchor initWithName:transform:]
  -[ARAnchor initWithIdentifier:transform:]
  -[ARAnchor _commonInit:transform:name:]
  -[ARAnchor isEqualToAnchor:]
  -[ARAnchor _description:]
  -[ARAnchor referenceTransform]
  -[ARAnchor setReferenceTransform:]
  -[ARAnchor isHiddenFromPublicDelegate]


ARIOMotionSensor : NSObject <ARSensor>
 @property  <ARSensorDelegate> *delegate
 @property  unsigned long powerUsage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARIOMotionSensor setDelegate:]
  -[ARIOMotionSensor delegate]
  -[ARIOMotionSensor dealloc]
  -[ARIOMotionSensor .cxx_destruct]
  -[ARIOMotionSensor stop]
  -[ARIOMotionSensor start]
  -[ARIOMotionSensor init]
  -[ARIOMotionSensor preferredSampleRate]
  -[ARIOMotionSensor providedDataTypes]
  -[ARIOMotionSensor waitForOutstandingCallbacks]
  -[ARIOMotionSensor accelerometerDidOutputEvent:timestamp:]
  -[ARIOMotionSensor gyroscopeDidOutputEvent:timestamp:]


ARFaceTrackingInternalTechnique : ARImageBasedTechnique
 @property  long long maximumNumberOfTrackedFaces

  // class methods
  +[ARFaceTrackingInternalTechnique isSupported]

  // instance methods
  -[ARFaceTrackingInternalTechnique .cxx_destruct]
  -[ARFaceTrackingInternalTechnique processData:]
  -[ARFaceTrackingInternalTechnique isEqual:]
  -[ARFaceTrackingInternalTechnique initWithOptions:]
  -[ARFaceTrackingInternalTechnique init]
  -[ARFaceTrackingInternalTechnique requiredTimeInterval]
  -[ARFaceTrackingInternalTechnique resultDataClasses]
  -[ARFaceTrackingInternalTechnique requiredSensorDataTypes]
  -[ARFaceTrackingInternalTechnique captureBehavior]
  -[ARFaceTrackingInternalTechnique initWithMaximumNumberOfTrackedFaces:options:]
  -[ARFaceTrackingInternalTechnique _enqueueImageForFaceTrackingNonBlocking:]
  -[ARFaceTrackingInternalTechnique _processImageDataInBackgound:]
  -[ARFaceTrackingInternalTechnique maximumNumberOfTrackedFaces]


ARPointCloud : NSObject <NSSecureCoding>
 @property  unsigned long count
 @property  r^ points
 @property  r^Q identifiers

  // class methods
  +[ARPointCloud supportsSecureCoding]
  +[ARPointCloud concatPointClouds:]
  +[ARPointCloud emptyPointCloud]

  // instance methods
  -[ARPointCloud centroid]
  -[ARPointCloud identifiers]
  -[ARPointCloud points]
  -[ARPointCloud encodeWithCoder:]
  -[ARPointCloud .cxx_construct]
  -[ARPointCloud .cxx_destruct]
  -[ARPointCloud count]
  -[ARPointCloud standardDeviation]
  -[ARPointCloud isEqual:]
  -[ARPointCloud initWithCoder:]
  -[ARPointCloud initWithPointData:]
  -[ARPointCloud initWithCV3DPointData:minVergenceAngleCosine:]
  -[ARPointCloud initWithPointsVector:identifiersVector:]
  -[ARPointCloud initWithPointsVector:identifiersVector:vergenceAngleCosinesVector:]
  -[ARPointCloud initWithDepthPointCloud:]
  -[ARPointCloud depthPointCloud]
  -[ARPointCloud vergenceAngleCosines]
  -[ARPointCloud computeBounds]
  -[ARPointCloud filterPointCloudFrom:ellipsoid:]
  -[ARPointCloud filterPointCloudWithIdentifiers:]
  -[ARPointCloud _hitTestPointFromOrigin:withDirection:maximumAngle:cameraToWorldTransform:]
  -[ARPointCloud pointCloudByApplyingTransform:]


ARJasperData : NSObject <ARData>
 @property  double timestamp
 @property  ^{__CVBuffer=} dataBuffer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARJasperData setTimestamp:]
  -[ARJasperData dealloc]
  -[ARJasperData timestamp]
  -[ARJasperData dataBuffer]
  -[ARJasperData initWithBuffer:timestamp:]
  -[ARJasperData setDataBuffer:]


ARImageCroppingTechnique : ARTechnique
 @property  {CGSize=dd} croppedImageSize

  // instance methods
  -[ARImageCroppingTechnique dealloc]
  -[ARImageCroppingTechnique processData:]
  -[ARImageCroppingTechnique isEqual:]
  -[ARImageCroppingTechnique requiredSensorDataTypes]
  -[ARImageCroppingTechnique initWithCroppedImageSize:centerCropToTargetResolution:]
  -[ARImageCroppingTechnique initWithCroppedImageSize:]
  -[ARImageCroppingTechnique croppedImageSize]


ARControlListener : NSObject <NSXPCListenerDelegate>
 @property  <ARControlListenerDelegate> *delegate
 @property  NSXPCListenerEndpoint *endpoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARControlListener setDelegate:]
  -[ARControlListener endpoint]
  -[ARControlListener delegate]
  -[ARControlListener dealloc]
  -[ARControlListener .cxx_destruct]
  -[ARControlListener listener:shouldAcceptNewConnection:]
  -[ARControlListener initWithDelegate:anonymousListenerEnabled:]


ARSplitTechniqueSynchronizerTechnique : ARTechnique <ARTechniqueDelegate>
 @property  NSSet *synchronizedResultDataClasses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARSplitTechniqueSynchronizerTechnique .cxx_destruct]
  -[ARSplitTechniqueSynchronizerTechnique isEqual:]
  -[ARSplitTechniqueSynchronizerTechnique requestResultDataAtTimestamp:context:]
  -[ARSplitTechniqueSynchronizerTechnique technique:didOutputResultData:timestamp:context:]
  -[ARSplitTechniqueSynchronizerTechnique reconfigurableFrom:]
  -[ARSplitTechniqueSynchronizerTechnique technique:didFailWithError:]
  -[ARSplitTechniqueSynchronizerTechnique initWithSynchronizedResultDataClasses:]
  -[ARSplitTechniqueSynchronizerTechnique _recursivelyGatherData:fromContext:]
  -[ARSplitTechniqueSynchronizerTechnique synchronizedResultDataClasses]


ARSplitForwarderTechnique : ARParentTechnique
  // class methods
  +[ARSplitForwarderTechnique new]

  // instance methods
  -[ARSplitForwarderTechnique init]


ARAccelerometerData : NSObject <ARDictionaryCoding, ARMetadataWrapperCoding, ARMutableSensorData, NSSecureCoding>
 @property  double timestamp
 @property  {?=ddd} acceleration
 @property  double temperature
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARAccelerometerData supportsSecureCoding]
  +[ARAccelerometerData grabNextFromReader:timestamp:]

  // instance methods
  -[ARAccelerometerData setTemperature:]
  -[ARAccelerometerData temperature]
  -[ARAccelerometerData setTimestamp:]
  -[ARAccelerometerData acceleration]
  -[ARAccelerometerData encodeWithCoder:]
  -[ARAccelerometerData initWithDictionary:]
  -[ARAccelerometerData copyWithZone:]
  -[ARAccelerometerData timestamp]
  -[ARAccelerometerData isEqual:]
  -[ARAccelerometerData initWithCoder:]
  -[ARAccelerometerData setAcceleration:]
  -[ARAccelerometerData encodeToMetadataWrapper]
  -[ARAccelerometerData initWithMetadataWrapper:]
  -[ARAccelerometerData appendToWriter:]
  -[ARAccelerometerData encodeToDictionary]
  -[ARAccelerometerData initWithAccelData:]


ARSessionReplayStats : NSObject
 @property  int recordingFormat
 @property  NSString *deviceModel
 @property  NSString *osVersion
 @property  NSString *arkitVersion
 @property  NSString *fileName
 @property  unsigned long recordedSensorTypes

  // instance methods
  -[ARSessionReplayStats setOsVersion:]
  -[ARSessionReplayStats deviceModel]
  -[ARSessionReplayStats fileName]
  -[ARSessionReplayStats .cxx_destruct]
  -[ARSessionReplayStats osVersion]
  -[ARSessionReplayStats setDeviceModel:]
  -[ARSessionReplayStats setFileName:]
  -[ARSessionReplayStats arkitVersion]
  -[ARSessionReplayStats recordingFormat]
  -[ARSessionReplayStats setRecordingFormat:]
  -[ARSessionReplayStats setArkitVersion:]
  -[ARSessionReplayStats recordedSensorTypes]
  -[ARSessionReplayStats setRecordedSensorTypes:]


ARSessionMetricsFrameProperties : NSObject
 @property  ARCamera *camera
 @property  ARWorldTrackingState *worldTrackingState
 @property  NSArray *anchors
 @property  ARGeoTrackingStatus *geoTrackingStatus
 @property  CLLocation *location
 @property  ARVLStateData *vlState

  // instance methods
  -[ARSessionMetricsFrameProperties camera]
  -[ARSessionMetricsFrameProperties .cxx_destruct]
  -[ARSessionMetricsFrameProperties location]
  -[ARSessionMetricsFrameProperties initWithFrame:]
  -[ARSessionMetricsFrameProperties geoTrackingStatus]
  -[ARSessionMetricsFrameProperties worldTrackingState]
  -[ARSessionMetricsFrameProperties anchors]
  -[ARSessionMetricsFrameProperties vlState]


ARSessionMetrics : NSObject
  // class methods
  +[ARSessionMetrics setRenderType:]
  +[ARSessionMetrics recordHitTest:]
  +[ARSessionMetrics recordReplayMetrics:]
  +[ARSessionMetrics recordAltitudeLookupAttemptWithDuration:andResult:]
  +[ARSessionMetrics getRenderEngineString:]

  // instance methods
  -[ARSessionMetrics _recordBadFramePercentageFinal:]
  -[ARSessionMetrics recordCoachingOverlayUsage:]
  -[ARSessionMetrics _recordSessionEnd]
  -[ARSessionMetrics sessionStarted:withConfiguration:]
  -[ARSessionMetrics recordRaycast:tracked:]
  -[ARSessionMetrics initWithReporter:]
  -[ARSessionMetrics recordTrueNorthUnavailable]
  -[ARSessionMetrics recordSaveMap:numberOfFeaturePoints:]
  -[ARSessionMetrics .cxx_destruct]
  -[ARSessionMetrics sessionDidUpdateFrame:]
  -[ARSessionMetrics _processFrameProperties:]
  -[ARSessionMetrics sessionUpdateThermalState:]
  -[ARSessionMetrics reportSessionFailure:]
  -[ARSessionMetrics sessionStopped]
  -[ARSessionMetrics queue]
  -[ARSessionMetrics recordHiResFrameCapture]
  -[ARSessionMetrics init]


_ARSessionMetricsDefaultReporter : NSObject <ARSessionMetricsReporting>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_ARSessionMetricsDefaultReporter sendEvent:dictionary:]
  -[_ARSessionMetricsDefaultReporter postDarwinNotification:]


ARFaceTrackingConfiguration : ARConfiguration
 @property  BOOL lowPower
 @property  long long maximumNumberOfTrackedFaces
 @property  BOOL worldTrackingEnabled

  // class methods
  +[ARFaceTrackingConfiguration new]
  +[ARFaceTrackingConfiguration supportedVideoFormats]
  +[ARFaceTrackingConfiguration supportsFrameSemantics:]
  +[ARFaceTrackingConfiguration isSupported]
  +[ARFaceTrackingConfiguration supportsWorldTracking]
  +[ARFaceTrackingConfiguration supportedNumberOfTrackedFaces]
  +[ARFaceTrackingConfiguration fallbackVideoFormat]
  +[ARFaceTrackingConfiguration fallbackVideoFormatWithCaptureDeviceType:]
  +[ARFaceTrackingConfiguration _querySupportedVideoFormats]
  +[ARFaceTrackingConfiguration supportedVideoFormatsForWorldTracking]
  +[ARFaceTrackingConfiguration _querySupportedVideoFormatsForWorldTracking]

  // instance methods
  -[ARFaceTrackingConfiguration copyWithZone:]
  -[ARFaceTrackingConfiguration isEqual:]
  -[ARFaceTrackingConfiguration init]
  -[ARFaceTrackingConfiguration lowPower]
  -[ARFaceTrackingConfiguration setLightEstimationEnabled:]
  -[ARFaceTrackingConfiguration setCameraPosition:]
  -[ARFaceTrackingConfiguration maximumNumberOfTrackedFaces]
  -[ARFaceTrackingConfiguration createTechniques:]
  -[ARFaceTrackingConfiguration parentImageSensorSettings]
  -[ARFaceTrackingConfiguration imageSensorSettings]
  -[ARFaceTrackingConfiguration setMirroredFrameOutput:]
  -[ARFaceTrackingConfiguration secondaryTechniques]
  -[ARFaceTrackingConfiguration renderingTechnique]
  -[ARFaceTrackingConfiguration imageSensorSettingsForLowPower]
  -[ARFaceTrackingConfiguration imageSensorSettingsForWorldTracking]
  -[ARFaceTrackingConfiguration setMaximumNumberOfTrackedFaces:]
  -[ARFaceTrackingConfiguration isWorldTrackingEnabled]
  -[ARFaceTrackingConfiguration setWorldTrackingEnabled:]
  -[ARFaceTrackingConfiguration setLowPower:]


ARInternalFaceTrackingConfiguration : ARConfiguration
 @property  long long maximumNumberOfTrackedFaces
 @property  BOOL useAlternativeResources

  // class methods
  +[ARInternalFaceTrackingConfiguration new]
  +[ARInternalFaceTrackingConfiguration supportedVideoFormats]
  +[ARInternalFaceTrackingConfiguration isSupported]

  // instance methods
  -[ARInternalFaceTrackingConfiguration copyWithZone:]
  -[ARInternalFaceTrackingConfiguration isEqual:]
  -[ARInternalFaceTrackingConfiguration init]
  -[ARInternalFaceTrackingConfiguration setLightEstimationEnabled:]
  -[ARInternalFaceTrackingConfiguration setCameraPosition:]
  -[ARInternalFaceTrackingConfiguration maximumNumberOfTrackedFaces]
  -[ARInternalFaceTrackingConfiguration createTechniques:]
  -[ARInternalFaceTrackingConfiguration imageSensorSettings]
  -[ARInternalFaceTrackingConfiguration setMirroredFrameOutput:]
  -[ARInternalFaceTrackingConfiguration renderingTechnique]
  -[ARInternalFaceTrackingConfiguration setMaximumNumberOfTrackedFaces:]
  -[ARInternalFaceTrackingConfiguration useAlternativeResources]
  -[ARInternalFaceTrackingConfiguration setUseAlternativeResources:]


ARAltitudeUndulationPair : NSObject
 @property  double altitude
 @property  double undulation
 @property  BOOL lookupFailed
 @property  long long source

  // instance methods
  -[ARAltitudeUndulationPair source]
  -[ARAltitudeUndulationPair altitude]
  -[ARAltitudeUndulationPair undulation]
  -[ARAltitudeUndulationPair initWithAltitude:undulation:lookupFailed:source:]
  -[ARAltitudeUndulationPair lookupFailed]


ARSkipTileBounds : NSObject
  // class methods
  +[ARSkipTileBounds _normalizeLongitude:]

  // instance methods
  -[ARSkipTileBounds initWithCoordinate:]
  -[ARSkipTileBounds isInside:]


ARParentImageSensor : NSObject <AVCaptureAudioDataOutputSampleBufferDelegate, ARSensor, ARImageSensorDataSource>
 @property  NSMutableArray *sensors
 @property  BOOL running
 @property  BOOL interrupted
 @property  BOOL unrecoverable
 @property  <ARSensorDelegate> *delegate
 @property  ARParentImageSensorSettings *settings
 @property  unsigned long powerUsage
 @property  AVCaptureSession *captureSession
 @property  AVCaptureDeviceInput *audioInput
 @property  AVCaptureAudioDataOutput *audioOutput
 @property  AVCaptureConnection *audioConnection
 @property  BOOL recordingMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARParentImageSensor setRunning:]
  -[ARParentImageSensor running]
  -[ARParentImageSensor initWithSettings:]
  -[ARParentImageSensor teardown]
  -[ARParentImageSensor setDelegate:]
  -[ARParentImageSensor delegate]
  -[ARParentImageSensor audioOutput]
  -[ARParentImageSensor dealloc]
  -[ARParentImageSensor interrupted]
  -[ARParentImageSensor captureOutput:didOutputSampleBuffer:fromConnection:]
  -[ARParentImageSensor .cxx_destruct]
  -[ARParentImageSensor stop]
  -[ARParentImageSensor settings]
  -[ARParentImageSensor start]
  -[ARParentImageSensor setInterrupted:]
  -[ARParentImageSensor reconfigure:]
  -[ARParentImageSensor audioInput]
  -[ARParentImageSensor captureSession]
  -[ARParentImageSensor captureDeviceTypeToExtrinsicsMapForImageSensor:]
  -[ARParentImageSensor providedDataTypes]
  -[ARParentImageSensor canReconfigure:]
  -[ARParentImageSensor setPowerUsage:]
  -[ARParentImageSensor recordingMode]
  -[ARParentImageSensor setRecordingMode:]
  -[ARParentImageSensor forceUpdatePowerUsage:]
  -[ARParentImageSensor waitForOutstandingCallbacks]
  -[ARParentImageSensor powerUsage]
  -[ARParentImageSensor captureSessionStateChanged:]
  -[ARParentImageSensor _addSensors]
  -[ARParentImageSensor _addSensorForSettings:]
  -[ARParentImageSensor _startWithError:]
  -[ARParentImageSensor captureHighResolutionFrameWithPhotoSettings:]
  -[ARParentImageSensor _configureAudioCapture]
  -[ARParentImageSensor _validateCameraAuthorization]
  -[ARParentImageSensor _validateMicrophoneAuthorizationWithError:]
  -[ARParentImageSensor _captureSessionStateChanged:]
  -[ARParentImageSensor sensors]
  -[ARParentImageSensor setSensors:]
  -[ARParentImageSensor audioConnection]
  -[ARParentImageSensor unrecoverable]
  -[ARParentImageSensor setUnrecoverable:]


ARWorldTrackingOptions : NSObject <NSCopying>
 @property  ARImageSensorSettings *imageSensorSettings
 @property  ARImageSensorSettings *imageSensorSettingsForUltraWide
 @property  NSString *deviceModel
 @property  BOOL relocalizationEnabled
 @property  ARWorldMap *initialWorldMap
 @property  NSString *slamConfiguration
 @property  BOOL deterministicMode
 @property  BOOL lowQosSchedulingEnabled
 @property  unsigned long planeDetection
 @property  double minVergenceAngle
 @property  BOOL mlModelEnabled
 @property  BOOL collaborationEnabled
 @property  BOOL depthBuffersWillBeProvided
 @property  BOOL visionDataWillBeReplayed
 @property  unsigned long sceneReconstruction
 @property  BOOL planeEstimationShouldUseJasperData
 @property  ARSceneReconstructionOptions *sceneReconstructionOptions
 @property  NSDictionary *activeVideoFormatsMap
 @property  BOOL alwaysUsePrimaryCameraForTracking
 @property  BOOL disableMLRelocalization
 @property  BOOL recordForGeoTracking
 @property  NSNumber *vioSessionID
 @property  BOOL planeBundleAdjustmentEnabled
 @property  @? singleShotPlaneCallback
 @property  @? trackedPlaneCallback
 @property  @? planeDetectionVIOPoseCallback
 @property  @? planeDetectionPoseUpdateCallback

  // instance methods
  -[ARWorldTrackingOptions deviceModel]
  -[ARWorldTrackingOptions .cxx_destruct]
  -[ARWorldTrackingOptions setDeviceModel:]
  -[ARWorldTrackingOptions copyWithZone:]
  -[ARWorldTrackingOptions isEqual:]
  -[ARWorldTrackingOptions init]
  -[ARWorldTrackingOptions setPlaneDetection:]
  -[ARWorldTrackingOptions initialWorldMap]
  -[ARWorldTrackingOptions isCollaborationEnabled]
  -[ARWorldTrackingOptions deterministicMode]
  -[ARWorldTrackingOptions imageSensorSettings]
  -[ARWorldTrackingOptions initWithImageSensorSettings:]
  -[ARWorldTrackingOptions slamConfiguration]
  -[ARWorldTrackingOptions setSlamConfiguration:]
  -[ARWorldTrackingOptions shouldUseUltraWide]
  -[ARWorldTrackingOptions setImageSensorSettings:]
  -[ARWorldTrackingOptions setImageSensorSettingsForUltraWide:]
  -[ARWorldTrackingOptions updateCameraMap]
  -[ARWorldTrackingOptions activeVideoFormatsMap]
  -[ARWorldTrackingOptions cameraIdForCaptureDeviceType:]
  -[ARWorldTrackingOptions createSLAMCalibration:]
  -[ARWorldTrackingOptions setupCameraCalibration:forImageSensorSettings:deviceModel:]
  -[ARWorldTrackingOptions createSLAMConfig:calibration:]
  -[ARWorldTrackingOptions imageSensorSettingsForUltraWide]
  -[ARWorldTrackingOptions relocalizationEnabled]
  -[ARWorldTrackingOptions setRelocalizationEnabled:]
  -[ARWorldTrackingOptions setInitialWorldMap:]
  -[ARWorldTrackingOptions setDeterministicMode:]
  -[ARWorldTrackingOptions lowQosSchedulingEnabled]
  -[ARWorldTrackingOptions setLowQosSchedulingEnabled:]
  -[ARWorldTrackingOptions planeDetection]
  -[ARWorldTrackingOptions minVergenceAngle]
  -[ARWorldTrackingOptions setMinVergenceAngle:]
  -[ARWorldTrackingOptions mlModelEnabled]
  -[ARWorldTrackingOptions setMlModelEnabled:]
  -[ARWorldTrackingOptions setCollaborationEnabled:]
  -[ARWorldTrackingOptions depthBuffersWillBeProvided]
  -[ARWorldTrackingOptions setDepthBuffersWillBeProvided:]
  -[ARWorldTrackingOptions visionDataWillBeReplayed]
  -[ARWorldTrackingOptions setVisionDataWillBeReplayed:]
  -[ARWorldTrackingOptions sceneReconstruction]
  -[ARWorldTrackingOptions setSceneReconstruction:]
  -[ARWorldTrackingOptions planeEstimationShouldUseJasperData]
  -[ARWorldTrackingOptions setPlaneEstimationShouldUseJasperData:]
  -[ARWorldTrackingOptions sceneReconstructionOptions]
  -[ARWorldTrackingOptions setSceneReconstructionOptions:]
  -[ARWorldTrackingOptions alwaysUsePrimaryCameraForTracking]
  -[ARWorldTrackingOptions setAlwaysUsePrimaryCameraForTracking:]
  -[ARWorldTrackingOptions disableMLRelocalization]
  -[ARWorldTrackingOptions setDisableMLRelocalization:]
  -[ARWorldTrackingOptions recordForGeoTracking]
  -[ARWorldTrackingOptions setRecordForGeoTracking:]
  -[ARWorldTrackingOptions vioSessionID]
  -[ARWorldTrackingOptions setVioSessionID:]
  -[ARWorldTrackingOptions planeBundleAdjustmentEnabled]
  -[ARWorldTrackingOptions setPlaneBundleAdjustmentEnabled:]
  -[ARWorldTrackingOptions singleShotPlaneCallback]
  -[ARWorldTrackingOptions setSingleShotPlaneCallback:]
  -[ARWorldTrackingOptions trackedPlaneCallback]
  -[ARWorldTrackingOptions setTrackedPlaneCallback:]
  -[ARWorldTrackingOptions planeDetectionVIOPoseCallback]
  -[ARWorldTrackingOptions setPlaneDetectionVIOPoseCallback:]
  -[ARWorldTrackingOptions planeDetectionPoseUpdateCallback]
  -[ARWorldTrackingOptions setPlaneDetectionPoseUpdateCallback:]


ARConfiguration : NSObject <NSCopying>
 @property  BOOL smartPersonOcclusionEnabled
 @property  BOOL autoFocusEnabled
 @property  NSString *deviceModel
 @property  ARParentImageSensorSettings *parentImageSensorSettings
 @property  ARImageSensorSettings *imageSensorSettings
 @property  NSArray *customSensors
 @property  unsigned long lightEstimation
 @property  unsigned long frameDebugOptions
 @property  BOOL personMetadataEnabled
 @property  long long jasperFrameRate
 @property  long long cameraPosition
 @property  BOOL allowCameraInMultipleForegroundAppLayout
 @property  BOOL disableOcclusionForPersonSegmentation
 @property  BOOL disableMLRelocalization
 @property  BOOL mirroredFrameOutput
 @property  <ARReplaySensorProtocol> *replaySensor
 @property  NSString *timeOfFlightProjectorMode
 @property  long long maxUltrawideImageForwardingFrameRate
 @property  ARVideoFormat *videoFormat
 @property  long long worldAlignment
 @property  BOOL lightEstimationEnabled
 @property  BOOL providesAudioData
 @property  unsigned long frameSemantics
 @property  BOOL videoHDRAllowed

  // class methods
  +[ARConfiguration supportedVideoFormats]
  +[ARConfiguration recommendedVideoFormatForHighResolutionFrameCapturing]
  +[ARConfiguration supportsFrameSemantics:]
  +[ARConfiguration recommendedVideoFormatFor4KResolution]
  +[ARConfiguration isSupported]
  +[ARConfiguration _querySupportedVideoFormatsForJasper]
  +[ARConfiguration _supportedVideoFormatsForJasper]
  +[ARConfiguration supportsTimeOfFlightProjectorMode]
  +[ARConfiguration setShouldUse30FPSJasperFormats:]
  +[ARConfiguration shouldUse30FPSJasperFormats]
  +[ARConfiguration configurableCaptureDeviceForPrimaryCamera]
  +[ARConfiguration setShouldProvideX420VideoFormat:]
  +[ARConfiguration shouldProvideX420VideoFormat]
  +[ARConfiguration setShouldProvideNonBinnedVideoFormats:]
  +[ARConfiguration shouldProvideNonBinnedVideoFormats]

  // instance methods
  -[ARConfiguration deviceModel]
  -[ARConfiguration setTimeOfFlightProjectorMode:]
  -[ARConfiguration timeOfFlightProjectorMode]
  -[ARConfiguration videoFormat]
  -[ARConfiguration cameraPosition]
  -[ARConfiguration .cxx_destruct]
  -[ARConfiguration initPrivate]
  -[ARConfiguration copyWithZone:]
  -[ARConfiguration isEqual:]
  -[ARConfiguration init]
  -[ARConfiguration setVideoFormat:]
  -[ARConfiguration setWorldAlignment:]
  -[ARConfiguration setLightEstimationEnabled:]
  -[ARConfiguration worldAlignment]
  -[ARConfiguration _depthPrioritization]
  -[ARConfiguration setCameraPosition:]
  -[ARConfiguration isAutoFocusEnabled]
  -[ARConfiguration createTechniques:]
  -[ARConfiguration parentImageSensorSettings]
  -[ARConfiguration imageSensorSettings]
  -[ARConfiguration setMirroredFrameOutput:]
  -[ARConfiguration secondaryTechniques]
  -[ARConfiguration renderingTechnique]
  -[ARConfiguration disableMLRelocalization]
  -[ARConfiguration setDisableMLRelocalization:]
  -[ARConfiguration shouldUseJasper]
  -[ARConfiguration depthSensorSettingsForJasper]
  -[ARConfiguration setCustomSensors:]
  -[ARConfiguration isLightEstimationEnabled]
  -[ARConfiguration setFrameSemantics:]
  -[ARConfiguration replaySensor]
  -[ARConfiguration techniques]
  -[ARConfiguration setJasperFrameRate:]
  -[ARConfiguration jasperFrameRate]
  -[ARConfiguration descriptionWithoutBrackets]
  -[ARConfiguration isKindOfConfiguration:]
  -[ARConfiguration getAsKindOfConfiguration:]
  -[ARConfiguration providesAudioData]
  -[ARConfiguration setProvidesAudioData:]
  -[ARConfiguration frameSemantics]
  -[ARConfiguration videoHDRAllowed]
  -[ARConfiguration setVideoHDRAllowed:]
  -[ARConfiguration smartPersonOcclusionEnabled]
  -[ARConfiguration setSmartPersonOcclusionEnabled:]
  -[ARConfiguration setAutoFocusEnabled:]
  -[ARConfiguration customSensors]
  -[ARConfiguration lightEstimation]
  -[ARConfiguration setLightEstimation:]
  -[ARConfiguration frameDebugOptions]
  -[ARConfiguration setFrameDebugOptions:]
  -[ARConfiguration isPersonMetadataEnabled]
  -[ARConfiguration setPersonMetadataEnabled:]
  -[ARConfiguration allowCameraInMultipleForegroundAppLayout]
  -[ARConfiguration setAllowCameraInMultipleForegroundAppLayout:]
  -[ARConfiguration disableOcclusionForPersonSegmentation]
  -[ARConfiguration setDisableOcclusionForPersonSegmentation:]
  -[ARConfiguration mirroredFrameOutput]
  -[ARConfiguration maxUltrawideImageForwardingFrameRate]
  -[ARConfiguration setMaxUltrawideImageForwardingFrameRate:]


ARImageTrackingConfiguration : ARConfiguration
 @property  BOOL autoFocusEnabled
 @property  NSSet *trackingImages
 @property  long long maximumNumberOfTrackedImages

  // class methods
  +[ARImageTrackingConfiguration new]
  +[ARImageTrackingConfiguration supportedVideoFormats]
  +[ARImageTrackingConfiguration recommendedVideoFormatForHighResolutionFrameCapturing]
  +[ARImageTrackingConfiguration supportsFrameSemantics:]
  +[ARImageTrackingConfiguration recommendedVideoFormatFor4KResolution]
  +[ARImageTrackingConfiguration isSupported]

  // instance methods
  -[ARImageTrackingConfiguration .cxx_destruct]
  -[ARImageTrackingConfiguration copyWithZone:]
  -[ARImageTrackingConfiguration isEqual:]
  -[ARImageTrackingConfiguration init]
  -[ARImageTrackingConfiguration createTechniques:]
  -[ARImageTrackingConfiguration setMaximumNumberOfTrackedImages:]
  -[ARImageTrackingConfiguration trackingImages]
  -[ARImageTrackingConfiguration setTrackingImages:]
  -[ARImageTrackingConfiguration maximumNumberOfTrackedImages]


ARVideoFormat : NSObject <ARDaemonSecureCoding, NSCopying>
 @property  NSArray *frameRatesByPowerUsage
 @property  AVCaptureDevice *device
 @property  AVCaptureDeviceFormat *deviceFormat
 @property  AVCaptureDeviceFormat *depthDataFormat
 @property  NSString *pixelFormat
 @property  BOOL isX420PixelFormat
 @property  BOOL has4KVideoResolution
 @property  long long captureDevicePosition
 @property  NSString *captureDeviceType
 @property  {CGSize=dd} imageResolution
 @property  long long framesPerSecond
 @property  BOOL isRecommendedForHighResolutionFrameCapturing
 @property  BOOL videoHDRSupported

  // class methods
  +[ARVideoFormat supportsSecureCoding]
  +[ARVideoFormat bestVideoFormatForDevicePosition:deviceType:resolution:frameRate:videoBinned:]
  +[ARVideoFormat bestVideoFormatForDevicePosition:deviceType:resolution:frameRate:videoBinned:needsHDRSupport:]
  +[ARVideoFormat bestVideoFormatForDevicePosition:deviceType:resolution:frameRate:videoBinned:needsHDRSupport:pixelFormat:]
  +[ARVideoFormat bestVideoFormatForDevicePosition:deviceType:resolution:frameRates:videoBinned:]
  +[ARVideoFormat bestVideoFormatForDevicePosition:deviceType:resolution:frameRates:videoBinned:needsHDRSupport:pixelFormat:]
  +[ARVideoFormat bestTimeOfFlightFormatForDevicePosition:frameRates:]
  +[ARVideoFormat supportedVideoFormatsForDevicePosition:deviceType:]
  +[ARVideoFormat supportedVideoFormatsForDevicePosition:deviceType:videoBinned:]
  +[ARVideoFormat supportedVideoFormatsForDevicePosition:deviceType:frameRate:]
  +[ARVideoFormat supportedVideoFormatsForDevicePosition:deviceType:videoBinned:frameRate:]
  +[ARVideoFormat _querySupportedVideoFormatsForDevicePosition:deviceType:videoBinned:frameRate:]
  +[ARVideoFormat bestDepthFormatForDeviceFormat:]
  +[ARVideoFormat supportedVideoFormatsForStillImageCapture]
  +[ARVideoFormat hiResVideoDimensions]
  +[ARVideoFormat supportedVideoFormatsForHiResOrX420]

  // instance methods
  -[ARVideoFormat pixelFormat]
  -[ARVideoFormat setDepthDataFormat:]
  -[ARVideoFormat encodeWithCoder:]
  -[ARVideoFormat .cxx_destruct]
  -[ARVideoFormat device]
  -[ARVideoFormat copyWithZone:]
  -[ARVideoFormat captureDeviceType]
  -[ARVideoFormat isEqual:]
  -[ARVideoFormat depthDataFormat]
  -[ARVideoFormat initWithCoder:]
  -[ARVideoFormat framesPerSecond]
  -[ARVideoFormat isVideoHDRSupported]
  -[ARVideoFormat deviceFormat]
  -[ARVideoFormat imageResolution]
  -[ARVideoFormat initWithCaptureDevice:format:]
  -[ARVideoFormat initWithImageResolution:captureDevicePosition:captureDeviceType:]
  -[ARVideoFormat initWithImageResolution:captureDevicePosition:captureDeviceType:frameRatesByPowerUsage:]
  -[ARVideoFormat initWithImageResolution:captureDevicePosition:captureDeviceType:frameRatesByPowerUsage:pixelFormat:]
  -[ARVideoFormat isRecommendedForHighResolutionFrameCapturing]
  -[ARVideoFormat isX420PixelFormat]
  -[ARVideoFormat has4KVideoResolution]
  -[ARVideoFormat setFrameRatesByPowerUsage:]
  -[ARVideoFormat videoFormatWithUnthrottledLowPowerUsageFramerate]
  -[ARVideoFormat videoFormatWithDepthDataFormat:]
  -[ARVideoFormat captureDevicePosition]
  -[ARVideoFormat frameRatesByPowerUsage]


ARLightEstimate : NSObject <NSSecureCoding>
 @property  NSData *sphericalHarmonicsCoefficients
 @property  double ambientIntensity
 @property  double ambientColorTemperature

  // class methods
  +[ARLightEstimate supportsSecureCoding]

  // instance methods
  -[ARLightEstimate encodeWithCoder:]
  -[ARLightEstimate initWithCoder:]
  -[ARLightEstimate ambientIntensity]
  -[ARLightEstimate initWithAmbientIntensity:temperature:]
  -[ARLightEstimate sphericalHarmonicsCoefficients]
  -[ARLightEstimate ambientColorTemperature]


ARDirectionalLightEstimate : ARLightEstimate <NSCopying>
 @property  double timestamp
 @property  double confidenceRating
 @property  NSData *sphericalHarmonicsCoefficients
 @property  void primaryLightDirection
 @property  double primaryLightIntensity

  // class methods
  +[ARDirectionalLightEstimate supportsSecureCoding]

  // instance methods
  -[ARDirectionalLightEstimate setTimestamp:]
  -[ARDirectionalLightEstimate encodeWithCoder:]
  -[ARDirectionalLightEstimate .cxx_destruct]
  -[ARDirectionalLightEstimate copyWithZone:]
  -[ARDirectionalLightEstimate timestamp]
  -[ARDirectionalLightEstimate initWithCoder:]
  -[ARDirectionalLightEstimate sphericalHarmonicsCoefficients]
  -[ARDirectionalLightEstimate initWithSphericalHarmonics:ambientIntensity:temperature:]
  -[ARDirectionalLightEstimate initWithDirectionalLightEstimate:]
  -[ARDirectionalLightEstimate lightEstimateByApplyingRotation:]
  -[ARDirectionalLightEstimate primaryLightDirection]
  -[ARDirectionalLightEstimate primaryLightIntensity]
  -[ARDirectionalLightEstimate confidenceRating]
  -[ARDirectionalLightEstimate setConfidenceRating:]


ARRecordingTechniquePublic : ARTechnique <MOVWriterInterfaceDelegate, ARRecordingTechniqueProtocol>
 @property  unsigned long state
 @property  NSURL *outputFileURL
 @property  BOOL expectDepthData
 @property  BOOL expectAudioData
 @property  BOOL expectCustomData
 @property  BOOL shouldSaveVideoInPhotosLibrary
 @property  <ARRecordingTechniqueDelegate> *recordingTechniqueDelegate
 @property  unsigned long recordingSensorDataTypes
 @property  ARParentImageSensorSettings *parentImageSensorSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARRecordingTechniquePublic isSupported]

  // instance methods
  -[ARRecordingTechniquePublic startRecording]
  -[ARRecordingTechniquePublic state]
  -[ARRecordingTechniquePublic dealloc]
  -[ARRecordingTechniquePublic _finish:]
  -[ARRecordingTechniquePublic .cxx_destruct]
  -[ARRecordingTechniquePublic finished]
  -[ARRecordingTechniquePublic processData:]
  -[ARRecordingTechniquePublic didFailWithError:]
  -[ARRecordingTechniquePublic isEqual:]
  -[ARRecordingTechniquePublic init]
  -[ARRecordingTechniquePublic setState:]
  -[ARRecordingTechniquePublic outputFileURL]
  -[ARRecordingTechniquePublic requiredSensorDataTypes]
  -[ARRecordingTechniquePublic parentImageSensorSettings]
  -[ARRecordingTechniquePublic isReadyToRecord]
  -[ARRecordingTechniquePublic didFinishRecording]
  -[ARRecordingTechniquePublic initWithFileURL:sensorDataTypes:]
  -[ARRecordingTechniquePublic initWithFileURL:recordingSensorDataTypes:]
  -[ARRecordingTechniquePublic initWithFileURL:recordingSensorDataTypes:startImmediately:recordCollaborationData:]
  -[ARRecordingTechniquePublic recordCustomData:forTimestamp:]
  -[ARRecordingTechniquePublic recordCollaborationData:localSession:]
  -[ARRecordingTechniquePublic recordAddedAnchor:]
  -[ARRecordingTechniquePublic recordRemovedAnchor:]
  -[ARRecordingTechniquePublic finishRecording]
  -[ARRecordingTechniquePublic abortRecording]
  -[ARRecordingTechniquePublic expectDepthData]
  -[ARRecordingTechniquePublic setExpectDepthData:]
  -[ARRecordingTechniquePublic expectAudioData]
  -[ARRecordingTechniquePublic setExpectAudioData:]
  -[ARRecordingTechniquePublic expectCustomData]
  -[ARRecordingTechniquePublic setExpectCustomData:]
  -[ARRecordingTechniquePublic shouldSaveVideoInPhotosLibrary]
  -[ARRecordingTechniquePublic setShouldSaveVideoInPhotosLibrary:]
  -[ARRecordingTechniquePublic recordingTechniqueDelegate]
  -[ARRecordingTechniquePublic setRecordingTechniqueDelegate:]
  -[ARRecordingTechniquePublic recordingSensorDataTypes]
  -[ARRecordingTechniquePublic setParentImageSensorSettings:]
  -[ARRecordingTechniquePublic allowedToWrite]
  -[ARRecordingTechniquePublic removeTemporaryVideoFile]
  -[ARRecordingTechniquePublic _fail:]
  -[ARRecordingTechniquePublic _startRecording]
  -[ARRecordingTechniquePublic setupSensorTracks]
  -[ARRecordingTechniquePublic setupCustomTrack]
  -[ARRecordingTechniquePublic createFileMetadata]
  -[ARRecordingTechniquePublic writeTimeOfFlightData:]
  -[ARRecordingTechniquePublic writeSensorData:]
  -[ARRecordingTechniquePublic writeImageData:]
  -[ARRecordingTechniquePublic writePearlDepthData:withTimestamp:fromCaptureDevice:]
  -[ARRecordingTechniquePublic writeAudioData:]
  -[ARRecordingTechniquePublic writeResultData:withTimestamp:]
  -[ARRecordingTechniquePublic processTimeSensitiveNSCoderObject:withTimestamp:metadataID:]
  -[ARRecordingTechniquePublic _finishRecording]


ARPersonOcclusionTechnique : ARTechnique
  // class methods
  +[ARPersonOcclusionTechnique _confidenceForDepthData:location:]

  // instance methods
  -[ARPersonOcclusionTechnique isBusy]
  -[ARPersonOcclusionTechnique .cxx_construct]
  -[ARPersonOcclusionTechnique dealloc]
  -[ARPersonOcclusionTechnique .cxx_destruct]
  -[ARPersonOcclusionTechnique _fullDescription]
  -[ARPersonOcclusionTechnique init]
  -[ARPersonOcclusionTechnique requestResultDataAtTimestamp:context:]
  -[ARPersonOcclusionTechnique postProcessSegmentation:depthData:depthDataSource:detectionData:pResultingDepthBuffer:]
  -[ARPersonOcclusionTechnique _minFilterDepthMap:kernelSize:pResultBuffer:]


ARExecutionManager : NSObject

ARRunLoop : NSObject
 @property  BOOL cancelled

  // instance methods
  -[ARRunLoop cancelled]
  -[ARRunLoop setCancelled:]
  -[ARRunLoop dealloc]
  -[ARRunLoop .cxx_destruct]
  -[ARRunLoop initWithName:]
  -[ARRunLoop start]
  -[ARRunLoop cancel]
  -[ARRunLoop init]
  -[ARRunLoop _startThread]
  -[ARRunLoop runOnRunLoop:]
  -[ARRunLoop _runloop_handleActivity:]
  -[ARRunLoop _runloop_pushAutoreleasePool]
  -[ARRunLoop _runloop_popAutoreleasePool]


ARTechnique : NSObject <ARDotGraph, ARTechniqueProtocol, ARLoggingFullDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <ARTechniqueDelegate> *delegate
 @property  unsigned long powerUsage
 @property  double bonusLatency
 @property  NSNumber *traceKey
 @property  NSArray *splitTechniques
 @property  <ARTechniqueForwardingStrategy> *splitTechniqueFowardingStrategy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARTechnique producesResultDataForAnchorOfClass:]
  +[ARTechnique colorForTechnique:]
  +[ARTechnique techniqueOfClass:inArray:]
  +[ARTechnique techniqueMatchingPredicate:inArray:]

  // instance methods
  -[ARTechnique setDelegate:]
  -[ARTechnique delegate]
  -[ARTechnique .cxx_destruct]
  -[ARTechnique processData:]
  -[ARTechnique _fullDescription]
  -[ARTechnique isEqual:]
  -[ARTechnique init]
  -[ARTechnique prepare:]
  -[ARTechnique requestResultDataAtTimestamp:context:]
  -[ARTechnique requiredTimeInterval]
  -[ARTechnique resultDataClasses]
  -[ARTechnique requiredSensorDataTypes]
  -[ARTechnique reconfigurableFrom:]
  -[ARTechnique reconfigureFrom:]
  -[ARTechnique setPowerUsage:]
  -[ARTechnique captureBehavior]
  -[ARTechnique deterministicMode]
  -[ARTechnique processResultData:timestamp:context:]
  -[ARTechnique powerUsage]
  -[ARTechnique initWithTechniques:]
  -[ARTechnique dotGraphWithLines:]
  -[ARTechnique techniques]
  -[ARTechnique optionalSensorDataTypes]
  -[ARTechnique predictedResultDataAtTimestamp:context:]
  -[ARTechnique techniqueOfClass:]
  -[ARTechnique techniqueMatchingPredicate:]
  -[ARTechnique initWithParallelTechniques:]
  -[ARTechnique replaceTechniques:]
  -[ARTechnique bonusLatency]
  -[ARTechnique setBonusLatency:]
  -[ARTechnique traceKey]
  -[ARTechnique splitTechniques]
  -[ARTechnique setSplitTechniques:]
  -[ARTechnique splitTechniqueFowardingStrategy]
  -[ARTechnique setSplitTechniqueFowardingStrategy:]
  -[ARTechnique siblingTechniquesDidChange:]
  -[ARTechnique mergeResultData:intoData:context:]


ARGeoTrackingConfiguration : ARConfiguration
 @property  double minVergenceAngle
 @property  BOOL mlModelEnabled
 @property  BOOL lowQosSchedulingEnabled
 @property  BOOL shouldUseUltraWideIfAvailable
 @property  ARImageSensorSettings *imageSensorSettingsForUltraWide
 @property  BOOL depthOptimizedForStaticScene
 @property  BOOL alwaysUsePrimaryCameraForTracking
 @property  BOOL ignoreAppClipCodeURLLimitation
 @property  double visualLocalizationCallInterval
 @property  BOOL visualLocalizationUpdatesRequested
 @property  unsigned long supportEnablementOptions
 @property  BOOL useLidarIfAvailable
 @property  long long worldAlignment
 @property  long long environmentTexturing
 @property  BOOL wantsHDREnvironmentTextures
 @property  unsigned long planeDetection
 @property  NSSet *detectionImages
 @property  BOOL automaticImageScaleEstimationEnabled
 @property  long long maximumNumberOfTrackedImages
 @property  NSSet *detectionObjects
 @property  BOOL appClipCodeTrackingEnabled

  // class methods
  +[ARGeoTrackingConfiguration new]
  +[ARGeoTrackingConfiguration checkAvailabilityWithCompletionHandler:]
  +[ARGeoTrackingConfiguration supportedVideoFormats]
  +[ARGeoTrackingConfiguration locationManagerQueue]
  +[ARGeoTrackingConfiguration supportedVideoFormatsForUltraWide]
  +[ARGeoTrackingConfiguration recommendedVideoFormatForHighResolutionFrameCapturing]
  +[ARGeoTrackingConfiguration _verifyLocationPermissionsWithLocationManager:handler:]
  +[ARGeoTrackingConfiguration supportsFrameSemantics:]
  +[ARGeoTrackingConfiguration recommendedVideoFormatFor4KResolution]
  +[ARGeoTrackingConfiguration isSupported]
  +[ARGeoTrackingConfiguration isSupportedWithOptions:]
  +[ARGeoTrackingConfiguration supportsAppClipCodeTracking]
  +[ARGeoTrackingConfiguration checkAvailabilityQueue]
  +[ARGeoTrackingConfiguration checkAvailabilityAtCoordinate:withOptions:completionHandler:]
  +[ARGeoTrackingConfiguration verifyLocationPermissions]
  +[ARGeoTrackingConfiguration checkAvailabilityWithOptions:completionHandler:]
  +[ARGeoTrackingConfiguration checkAvailabilityAtCoordinate:completionHandler:]

  // instance methods
  -[ARGeoTrackingConfiguration .cxx_destruct]
  -[ARGeoTrackingConfiguration copyWithZone:]
  -[ARGeoTrackingConfiguration isMLModelEnabled]
  -[ARGeoTrackingConfiguration isEqual:]
  -[ARGeoTrackingConfiguration init]
  -[ARGeoTrackingConfiguration setVideoFormat:]
  -[ARGeoTrackingConfiguration setWorldAlignment:]
  -[ARGeoTrackingConfiguration setEnvironmentTexturing:]
  -[ARGeoTrackingConfiguration setSupportEnablementOptions:]
  -[ARGeoTrackingConfiguration setVisualLocalizationCallInterval:]
  -[ARGeoTrackingConfiguration setPlaneDetection:]
  -[ARGeoTrackingConfiguration worldAlignment]
  -[ARGeoTrackingConfiguration _depthPrioritization]
  -[ARGeoTrackingConfiguration wantsHDREnvironmentTextures]
  -[ARGeoTrackingConfiguration createTechniques:]
  -[ARGeoTrackingConfiguration parentImageSensorSettings]
  -[ARGeoTrackingConfiguration imageSensorSettings]
  -[ARGeoTrackingConfiguration shouldUseUltraWide]
  -[ARGeoTrackingConfiguration imageSensorSettingsForUltraWide]
  -[ARGeoTrackingConfiguration setLowQosSchedulingEnabled:]
  -[ARGeoTrackingConfiguration planeDetection]
  -[ARGeoTrackingConfiguration minVergenceAngle]
  -[ARGeoTrackingConfiguration setMinVergenceAngle:]
  -[ARGeoTrackingConfiguration setMlModelEnabled:]
  -[ARGeoTrackingConfiguration alwaysUsePrimaryCameraForTracking]
  -[ARGeoTrackingConfiguration setAlwaysUsePrimaryCameraForTracking:]
  -[ARGeoTrackingConfiguration shouldUseJasper]
  -[ARGeoTrackingConfiguration setMaximumNumberOfTrackedImages:]
  -[ARGeoTrackingConfiguration maximumNumberOfTrackedImages]
  -[ARGeoTrackingConfiguration appClipCodeTrackingEnabled]
  -[ARGeoTrackingConfiguration shouldEnableVisionDataForImageSensorSettings:]
  -[ARGeoTrackingConfiguration setDetectionImages:]
  -[ARGeoTrackingConfiguration _trackingOptions]
  -[ARGeoTrackingConfiguration environmentTexturing]
  -[ARGeoTrackingConfiguration setWantsHDREnvironmentTextures:]
  -[ARGeoTrackingConfiguration detectionImages]
  -[ARGeoTrackingConfiguration automaticImageScaleEstimationEnabled]
  -[ARGeoTrackingConfiguration setAutomaticImageScaleEstimationEnabled:]
  -[ARGeoTrackingConfiguration detectionObjects]
  -[ARGeoTrackingConfiguration setDetectionObjects:]
  -[ARGeoTrackingConfiguration setAppClipCodeTrackingEnabled:]
  -[ARGeoTrackingConfiguration isLowQosSchedulingEnabled]
  -[ARGeoTrackingConfiguration shouldUseUltraWideIfAvailable]
  -[ARGeoTrackingConfiguration setShouldUseUltraWideIfAvailable:]
  -[ARGeoTrackingConfiguration depthOptimizedForStaticScene]
  -[ARGeoTrackingConfiguration setDepthOptimizedForStaticScene:]
  -[ARGeoTrackingConfiguration ignoreAppClipCodeURLLimitation]
  -[ARGeoTrackingConfiguration setIgnoreAppClipCodeURLLimitation:]
  -[ARGeoTrackingConfiguration visualLocalizationCallInterval]
  -[ARGeoTrackingConfiguration visualLocalizationUpdatesRequested]
  -[ARGeoTrackingConfiguration setVisualLocalizationUpdatesRequested:]
  -[ARGeoTrackingConfiguration supportEnablementOptions]
  -[ARGeoTrackingConfiguration useLidarIfAvailable]
  -[ARGeoTrackingConfiguration setUseLidarIfAvailable:]


ARKeyFrame : NSObject
 @property  {?=[4]} transform
 @property  ARPointCloud *featurePoints
 @property  {?=[3]} cameraIntrinsics

  // instance methods
  -[ARKeyFrame .cxx_destruct]
  -[ARKeyFrame transform]
  -[ARKeyFrame cameraIntrinsics]
  -[ARKeyFrame setCameraIntrinsics:]
  -[ARKeyFrame featurePoints]
  -[ARKeyFrame initWithKeyframeData:featurePoints:referenceOriginTransform:]


ARNoiseParameters : NSObject
  // class methods
  +[ARNoiseParameters modelIdentifierForDevicePosition:longEdgeImageResolution:]


AR3DSkeletonRegistrationData : NSObject <ARResultData, NSCopying>
 @property  double timestamp
 @property  float estimatedScaleFactor
 @property  {?=[4]} visionTransform
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AR3DSkeletonRegistrationData setTimestamp:]
  -[AR3DSkeletonRegistrationData copyWithZone:]
  -[AR3DSkeletonRegistrationData timestamp]
  -[AR3DSkeletonRegistrationData isEqual:]
  -[AR3DSkeletonRegistrationData init]
  -[AR3DSkeletonRegistrationData visionTransform]
  -[AR3DSkeletonRegistrationData setVisionTransform:]
  -[AR3DSkeletonRegistrationData estimatedScaleFactor]
  -[AR3DSkeletonRegistrationData setEstimatedScaleFactor:]


ARHWFaceDetection : NSObject <NSSecureCoding>
 @property  long long ID
 @property  double rollAngleInDegrees
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox
 @property  long long detectionOrientation
 @property  {?=qiIq} time

  // class methods
  +[ARHWFaceDetection supportsSecureCoding]
  +[ARHWFaceDetection faceDetectionFromDictionary:]

  // instance methods
  -[ARHWFaceDetection setID:]
  -[ARHWFaceDetection time]
  -[ARHWFaceDetection ID]
  -[ARHWFaceDetection encodeWithCoder:]
  -[ARHWFaceDetection setTime:]
  -[ARHWFaceDetection boundingBox]
  -[ARHWFaceDetection isEqual:]
  -[ARHWFaceDetection initWithCoder:]
  -[ARHWFaceDetection setBoundingBox:]
  -[ARHWFaceDetection isEqualToFaceDetection:]
  -[ARHWFaceDetection rollAngleInDegrees]
  -[ARHWFaceDetection setRollAngleInDegrees:]
  -[ARHWFaceDetection detectionOrientation]
  -[ARHWFaceDetection setDetectionOrientation:]


ARXPCDictionaryWrapper : NSObject <NSSecureCoding>
 @property  NSObject<OS_xpc_object> *dictionary

  // class methods
  +[ARXPCDictionaryWrapper supportsSecureCoding]
  +[ARXPCDictionaryWrapper wrapperWithDictionary:]

  // instance methods
  -[ARXPCDictionaryWrapper encodeWithCoder:]
  -[ARXPCDictionaryWrapper initWithDictionary:]
  -[ARXPCDictionaryWrapper .cxx_destruct]
  -[ARXPCDictionaryWrapper initWithCoder:]
  -[ARXPCDictionaryWrapper dictionary]


ARWorldTrackingTechnique : ARImageBasedTechnique <ARSceneReconstructionDelegate>
 @property  unsigned long techniqueIndex
 @property  ARWorldTrackingOptions *mutableOptions
 @property  {?=[4]} referenceOriginTransform
 @property  ^{CV3DSLAMSession=} slamSessionHandle
 @property  ^{CV3DPosePredictionContext=} predictorHandle
 @property  {shared_ptr<RaycastSession>=^{RaycastSession}^{__shared_weak_count}} raycastSession
 @property  {shared_ptr<PlaneDetectionSession>=^{PlaneDetectionSession}^{__shared_weak_count}} planeDetectionSession
 @property  {?=[4]} reconstructionFrameBundleToWorld
 @property  unsigned long vioSessionIdentifier
 @property  BOOL hasQualityKeyframe
 @property  ARTrackedRaycastPostProcessor *trackedRaycastPostProcessor
 @property  {?=[4]} extrinsicsToWideSensor
 @property  ARSceneReconstructionHandler *sceneReconstructionHandler
 @property  ARWorldTrackingOptions *options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARWorldTrackingTechnique isSupported]
  +[ARWorldTrackingTechnique producesResultDataForAnchorOfClass:]
  +[ARWorldTrackingTechnique supportsVideoResolution:forDeviceType:]

  // instance methods
  -[ARWorldTrackingTechnique invalidateAllRaycasts]
  -[ARWorldTrackingTechnique addObserver:]
  -[ARWorldTrackingTechnique .cxx_construct]
  -[ARWorldTrackingTechnique dealloc]
  -[ARWorldTrackingTechnique .cxx_destruct]
  -[ARWorldTrackingTechnique options]
  -[ARWorldTrackingTechnique processData:]
  -[ARWorldTrackingTechnique _fullDescription]
  -[ARWorldTrackingTechnique removeObserver:]
  -[ARWorldTrackingTechnique isEqual:]
  -[ARWorldTrackingTechnique initWithOptions:]
  -[ARWorldTrackingTechnique init]
  -[ARWorldTrackingTechnique pushCollaborationData:]
  -[ARWorldTrackingTechnique _didFailWithError:]
  -[ARWorldTrackingTechnique prepare:]
  -[ARWorldTrackingTechnique requestResultDataAtTimestamp:context:]
  -[ARWorldTrackingTechnique requiredTimeInterval]
  -[ARWorldTrackingTechnique resultDataClasses]
  -[ARWorldTrackingTechnique requiredSensorDataTypes]
  -[ARWorldTrackingTechnique reconfigurableFrom:]
  -[ARWorldTrackingTechnique reconfigureFrom:]
  -[ARWorldTrackingTechnique prepareResultData:forContext:]
  -[ARWorldTrackingTechnique captureBehavior]
  -[ARWorldTrackingTechnique deterministicMode]
  -[ARWorldTrackingTechnique predictedResultDataAtTimestamp:context:]
  -[ARWorldTrackingTechnique mergeResultData:intoData:context:]
  -[ARWorldTrackingTechnique sceneReconstructionHandler:didOutputMeshList:withTimestamp:]
  -[ARWorldTrackingTechnique sceneReconstructionHandler:didOutputKeyframeList:withTimestamp:]
  -[ARWorldTrackingTechnique sceneReconstructionHandler:didFailWithError:]
  -[ARWorldTrackingTechnique vioHandleState]
  -[ARWorldTrackingTechnique _handleCV3DError:withDescription:failTechnique:]
  -[ARWorldTrackingTechnique updateSurfaceDetectionConfiguration]
  -[ARWorldTrackingTechnique annotateDepth:withSemantics:toTargetSemanticsImage:targetConfidenceBuffer:targetUncertaintyBuffer:]
  -[ARWorldTrackingTechnique annotateDepth:withSemantics:toTargetSemanticsImage:targetConfidenceBuffer:targetUncertaintyBuffer:useGpu:]
  -[ARWorldTrackingTechnique pushToSceneUnderstandingSegmentation:pose:]
  -[ARWorldTrackingTechnique pushToHitTestingDepth:pose:]
  -[ARWorldTrackingTechnique pushToSceneUnderstandingDepth:segmentation:pose:]
  -[ARWorldTrackingTechnique didReceiveKeyframesUpdatedCallback:]
  -[ARWorldTrackingTechnique serializeWorldMapWithReferenceOrigin:]
  -[ARWorldTrackingTechnique clearMap]
  -[ARWorldTrackingTechnique serializeSurfaceData]
  -[ARWorldTrackingTechnique loadSurfaceData:]
  -[ARWorldTrackingTechnique addReferenceAnchors:]
  -[ARWorldTrackingTechnique removeReferenceAnchors:]
  -[ARWorldTrackingTechnique getObservers]
  -[ARWorldTrackingTechnique _reportCollaborationData:type:metadata:]
  -[ARWorldTrackingTechnique removePlanesByUUIDs:]
  -[ARWorldTrackingTechnique isMultiSessionMode]
  -[ARWorldTrackingTechnique extentCheckFromConfiguration]
  -[ARWorldTrackingTechnique raycast:]
  -[ARWorldTrackingTechnique trackedRaycast:updateHandler:]
  -[ARWorldTrackingTechnique stopRaycast:]
  -[ARWorldTrackingTechnique stopAllRaycasts]
  -[ARWorldTrackingTechnique didUpdateRaycastResult:]
  -[ARWorldTrackingTechnique _handleRaycastResultCallback:]
  -[ARWorldTrackingTechnique raycastResultFrom:]
  -[ARWorldTrackingTechnique _updateVIOLineDetectionPolicy]
  -[ARWorldTrackingTechnique _initializeSLAMAndPredictorHandle]
  -[ARWorldTrackingTechnique setupSceneReconstruction]
  -[ARWorldTrackingTechnique resetSceneReconstruction]
  -[ARWorldTrackingTechnique _configureMeshPlaneHarmonization]
  -[ARWorldTrackingTechnique querySceneReconstructionOccupancyWithPoints:callback:]
  -[ARWorldTrackingTechnique _handlePlaneDetectionCallback:]
  -[ARWorldTrackingTechnique _handleSingleShotPlaneDetectionCallback:]
  -[ARWorldTrackingTechnique _initializeSurfaceDetection:]
  -[ARWorldTrackingTechnique _mappingStatusFromMapSize:keyframeQuality:isTrackingMap:timestamp:]
  -[ARWorldTrackingTechnique _featurePointDataFromSLAMState:]
  -[ARWorldTrackingTechnique _updateTrackingState:slamState:]
  -[ARWorldTrackingTechnique _trackingCameraID:]
  -[ARWorldTrackingTechnique _updatePoseData:forTimeStamp:updateTrackingState:]
  -[ARWorldTrackingTechnique onMetadataCallback:]
  -[ARWorldTrackingTechnique _pushWTResultDataForTimestamp:]
  -[ARWorldTrackingTechnique _handleSLAMError:]
  -[ARWorldTrackingTechnique techniqueIndex]
  -[ARWorldTrackingTechnique setTechniqueIndex:]
  -[ARWorldTrackingTechnique mutableOptions]
  -[ARWorldTrackingTechnique setMutableOptions:]
  -[ARWorldTrackingTechnique referenceOriginTransform]
  -[ARWorldTrackingTechnique setReferenceOriginTransform:]
  -[ARWorldTrackingTechnique slamSessionHandle]
  -[ARWorldTrackingTechnique setSlamSessionHandle:]
  -[ARWorldTrackingTechnique predictorHandle]
  -[ARWorldTrackingTechnique setPredictorHandle:]
  -[ARWorldTrackingTechnique raycastSession]
  -[ARWorldTrackingTechnique setRaycastSession:]
  -[ARWorldTrackingTechnique planeDetectionSession]
  -[ARWorldTrackingTechnique setPlaneDetectionSession:]
  -[ARWorldTrackingTechnique reconstructionFrameBundleToWorld]
  -[ARWorldTrackingTechnique setReconstructionFrameBundleToWorld:]
  -[ARWorldTrackingTechnique vioSessionIdentifier]
  -[ARWorldTrackingTechnique hasQualityKeyframe]
  -[ARWorldTrackingTechnique setHasQualityKeyframe:]
  -[ARWorldTrackingTechnique trackedRaycastPostProcessor]
  -[ARWorldTrackingTechnique setTrackedRaycastPostProcessor:]
  -[ARWorldTrackingTechnique extrinsicsToWideSensor]
  -[ARWorldTrackingTechnique setExtrinsicsToWideSensor:]
  -[ARWorldTrackingTechnique sceneReconstructionHandler]


ARExposureLightEstimationTechnique : ARTechnique <ARTechniqueBusyState>
 @property  BOOL isBusy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARExposureLightEstimationTechnique isBusy]
  -[ARExposureLightEstimationTechnique .cxx_construct]
  -[ARExposureLightEstimationTechnique .cxx_destruct]
  -[ARExposureLightEstimationTechnique processData:]
  -[ARExposureLightEstimationTechnique init]
  -[ARExposureLightEstimationTechnique requestResultDataAtTimestamp:context:]
  -[ARExposureLightEstimationTechnique requiredSensorDataTypes]


ARDepthPointCloudCoalescer : NSObject
 @property  ADAggregationParameters *aggregationParameters

  // instance methods
  -[ARDepthPointCloudCoalescer .cxx_destruct]
  -[ARDepthPointCloudCoalescer flush]
  -[ARDepthPointCloudCoalescer init]
  -[ARDepthPointCloudCoalescer initWithAggregationParameters:]
  -[ARDepthPointCloudCoalescer _commonInit:calibration:]
  -[ARDepthPointCloudCoalescer addDepthPointCloudData:]
  -[ARDepthPointCloudCoalescer depthPointCloudWithPose:imageData:]
  -[ARDepthPointCloudCoalescer aggregationParameters]


ARFrameRateLimitingStrategy : NSObject <ARTechniqueForwardingStrategy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARFrameRateLimitingStrategy .cxx_destruct]
  -[ARFrameRateLimitingStrategy isEqual:]
  -[ARFrameRateLimitingStrategy initWithFrameRate:]
  -[ARFrameRateLimitingStrategy shouldProcessData:]
  -[ARFrameRateLimitingStrategy shouldRequestResultDataAtTimestamp:context:]


ARBody2D : NSObject
 @property  ARSkeleton2D *skeleton

  // class methods
  +[ARBody2D supportsSecureCoding]

  // instance methods
  -[ARBody2D skeleton]
  -[ARBody2D encodeWithCoder:]
  -[ARBody2D .cxx_destruct]
  -[ARBody2D isEqual:]
  -[ARBody2D initWithCoder:]
  -[ARBody2D initWithSkeleton2D:]


ARSceneReconstructionOptions : NSObject <NSCopying>
 @property  long long voxelSize
 @property  long long bucketsCount
 @property  long long preset
 @property  BOOL deterministicMode
 @property  BOOL lowQosSchedulingEnabled
 @property  BOOL enableOccupancyMapping

  // instance methods
  -[ARSceneReconstructionOptions setPreset:]
  -[ARSceneReconstructionOptions preset]
  -[ARSceneReconstructionOptions copyWithZone:]
  -[ARSceneReconstructionOptions isEqual:]
  -[ARSceneReconstructionOptions init]
  -[ARSceneReconstructionOptions bucketsCount]
  -[ARSceneReconstructionOptions voxelSize]
  -[ARSceneReconstructionOptions setVoxelSize:]
  -[ARSceneReconstructionOptions deterministicMode]
  -[ARSceneReconstructionOptions setDeterministicMode:]
  -[ARSceneReconstructionOptions lowQosSchedulingEnabled]
  -[ARSceneReconstructionOptions setLowQosSchedulingEnabled:]
  -[ARSceneReconstructionOptions setBucketsCount:]
  -[ARSceneReconstructionOptions enableOccupancyMapping]
  -[ARSceneReconstructionOptions setEnableOccupancyMapping:]


AREnvironmentProbeAnchor : ARAnchor
 @property  <MTLTexture> *environmentTexture
 @property  float clippingPointLux
 @property  ARParametricLights *parametricLights
 @property  NSSet *sourceKeyframeUUIDs
 @property  NSData *colorHistogram
 @property  float opaquePixelPercentage
 @property  NSUUID *trackedPlaneIdentifier
 @property  void extent

  // class methods
  +[AREnvironmentProbeAnchor supportsSecureCoding]

  // instance methods
  -[AREnvironmentProbeAnchor encodeWithCoder:]
  -[AREnvironmentProbeAnchor .cxx_destruct]
  -[AREnvironmentProbeAnchor extent]
  -[AREnvironmentProbeAnchor initWithCoder:]
  -[AREnvironmentProbeAnchor initWithTransform:]
  -[AREnvironmentProbeAnchor initWithAnchor:]
  -[AREnvironmentProbeAnchor colorHistogram]
  -[AREnvironmentProbeAnchor environmentTexture]
  -[AREnvironmentProbeAnchor initWithTransform:extent:]
  -[AREnvironmentProbeAnchor initWithName:transform:]
  -[AREnvironmentProbeAnchor initWithIdentifier:transform:]
  -[AREnvironmentProbeAnchor initWithName:transform:extent:]
  -[AREnvironmentProbeAnchor initWithIdentifier:transform:extent:]
  -[AREnvironmentProbeAnchor initWithIdentifier:onPlane:]
  -[AREnvironmentProbeAnchor setEnvironmentTexture:]
  -[AREnvironmentProbeAnchor clippingPointLux]
  -[AREnvironmentProbeAnchor setClippingPointLux:]
  -[AREnvironmentProbeAnchor parametricLights]
  -[AREnvironmentProbeAnchor setParametricLights:]
  -[AREnvironmentProbeAnchor sourceKeyframeUUIDs]
  -[AREnvironmentProbeAnchor setSourceKeyframeUUIDs:]
  -[AREnvironmentProbeAnchor setColorHistogram:]
  -[AREnvironmentProbeAnchor opaquePixelPercentage]
  -[AREnvironmentProbeAnchor setOpaquePixelPercentage:]
  -[AREnvironmentProbeAnchor trackedPlaneIdentifier]
  -[AREnvironmentProbeAnchor setTrackedPlaneIdentifier:]


ARLocationSensor : NSObject <CLLocationManagerDelegate, ARSensor>
 @property  ARLocationData *currentLocation
 @property  <CLLocationManagerDelegate> *locationManagerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <ARSensorDelegate> *delegate
 @property  unsigned long powerUsage

  // instance methods
  -[ARLocationSensor locationManager:didFailWithError:]
  -[ARLocationSensor currentLocation]
  -[ARLocationSensor setDelegate:]
  -[ARLocationSensor setCurrentLocation:]
  -[ARLocationSensor delegate]
  -[ARLocationSensor dealloc]
  -[ARLocationSensor .cxx_destruct]
  -[ARLocationSensor stop]
  -[ARLocationSensor locationManagerDidChangeAuthorization:]
  -[ARLocationSensor initWithBundleIdentifier:]
  -[ARLocationSensor start]
  -[ARLocationSensor _createLocationManager]
  -[ARLocationSensor locationManager:didUpdateLocations:]
  -[ARLocationSensor init]
  -[ARLocationSensor providedDataTypes]
  -[ARLocationSensor configureForReplay]
  -[ARLocationSensor lookupAltitudeAtCoordinate:completionHandler:]
  -[ARLocationSensor updateARSessionState:]
  -[ARLocationSensor updateEstimationFromVIOPose:imageData:]
  -[ARLocationSensor updateFromVisualLocalizationResult:]
  -[ARLocationSensor updateFromLocationData:]
  -[ARLocationSensor updateFromDeviceOrientationData:]
  -[ARLocationSensor waitForOutstandingCallbacks]
  -[ARLocationSensor _validateLocationAuthorization]
  -[ARLocationSensor _attemptAltitudeLookupAtCoordinate:attemptCount:lookupStartDate:completionHandler:]
  -[ARLocationSensor locationManagerDelegate]
  -[ARLocationSensor setLocationManagerDelegate:]


ARRaycastQuery : NSObject
 @property  void origin
 @property  void direction
 @property  long long target
 @property  long long targetAlignment

  // instance methods
  -[ARRaycastQuery origin]
  -[ARRaycastQuery target]
  -[ARRaycastQuery direction]
  -[ARRaycastQuery isEqual:]
  -[ARRaycastQuery initWithOrigin:direction:allowingTarget:alignment:]
  -[ARRaycastQuery targetAlignment]


ARWorldTrackingConfiguration : ARConfiguration
 @property  BOOL relocalizationEnabled
 @property  NSString *slamConfiguration
 @property  double minVergenceAngle
 @property  BOOL mlModelEnabled
 @property  BOOL lowQosSchedulingEnabled
 @property  BOOL accuratePlaneExtentCheckEnabled
 @property  BOOL deliverRawSceneUnderstandingResults
 @property  BOOL shouldUseUltraWideIfAvailable
 @property  ARImageSensorSettings *imageSensorSettingsForUltraWide
 @property  BOOL depthTemporalSmoothingEnabled
 @property  BOOL depthOptimizedForStaticScene
 @property  {ARSpatialMappingParameters=qq} spatialMappingParameters
 @property  ARSceneReconstructionOptions *sceneReconstructionOptions
 @property  BOOL ignoreAppClipCodeURLLimitation
 @property  long long appClipCodePerformanceTestingMode
 @property  BOOL useSpatialMappingQualityMode
 @property  BOOL alwaysUsePrimaryCameraForTracking
 @property  BOOL recordForGeoTracking
 @property  BOOL planeBundleAdjustmentEnabled
 @property  @? singleShotPlaneCallback
 @property  @? trackedPlaneCallback
 @property  @? planeDetectionVIOPoseCallback
 @property  @? planeDetectionPoseUpdateCallback
 @property  BOOL autoFocusEnabled
 @property  long long environmentTexturing
 @property  BOOL wantsHDREnvironmentTextures
 @property  unsigned long planeDetection
 @property  ARWorldMap *initialWorldMap
 @property  NSSet *detectionImages
 @property  BOOL automaticImageScaleEstimationEnabled
 @property  long long maximumNumberOfTrackedImages
 @property  NSSet *detectionObjects
 @property  BOOL collaborationEnabled
 @property  BOOL userFaceTrackingEnabled
 @property  BOOL appClipCodeTrackingEnabled
 @property  unsigned long sceneReconstruction

  // class methods
  +[ARWorldTrackingConfiguration new]
  +[ARWorldTrackingConfiguration supportedVideoFormats]
  +[ARWorldTrackingConfiguration supportedVideoFormatsForUltraWide]
  +[ARWorldTrackingConfiguration recommendedVideoFormatForHighResolutionFrameCapturing]
  +[ARWorldTrackingConfiguration supportsFrameSemantics:]
  +[ARWorldTrackingConfiguration recommendedVideoFormatFor4KResolution]
  +[ARWorldTrackingConfiguration isSupported]
  +[ARWorldTrackingConfiguration supportsAppClipCodeTracking]
  +[ARWorldTrackingConfiguration _querySupportedVideoFormats]
  +[ARWorldTrackingConfiguration setShouldProvide30FPSVideoFormats:]
  +[ARWorldTrackingConfiguration shouldProvide30FPSVideoFormats]
  +[ARWorldTrackingConfiguration _querySupportedVideoFormatsForUserFaceTracking]
  +[ARWorldTrackingConfiguration supportedVideoFormatsForUserFaceTracking]
  +[ARWorldTrackingConfiguration _querySupportedVideoFormatsForUltraWide]
  +[ARWorldTrackingConfiguration supportsUserFaceTracking]
  +[ARWorldTrackingConfiguration supportsSceneReconstruction:]

  // instance methods
  -[ARWorldTrackingConfiguration .cxx_destruct]
  -[ARWorldTrackingConfiguration copyWithZone:]
  -[ARWorldTrackingConfiguration isMLModelEnabled]
  -[ARWorldTrackingConfiguration isEqual:]
  -[ARWorldTrackingConfiguration init]
  -[ARWorldTrackingConfiguration setVideoFormat:]
  -[ARWorldTrackingConfiguration setEnvironmentTexturing:]
  -[ARWorldTrackingConfiguration setPlaneDetection:]
  -[ARWorldTrackingConfiguration initialWorldMap]
  -[ARWorldTrackingConfiguration isCollaborationEnabled]
  -[ARWorldTrackingConfiguration _depthPrioritization]
  -[ARWorldTrackingConfiguration wantsHDREnvironmentTextures]
  -[ARWorldTrackingConfiguration createTechniques:]
  -[ARWorldTrackingConfiguration parentImageSensorSettings]
  -[ARWorldTrackingConfiguration imageSensorSettings]
  -[ARWorldTrackingConfiguration secondaryTechniques]
  -[ARWorldTrackingConfiguration slamConfiguration]
  -[ARWorldTrackingConfiguration setSlamConfiguration:]
  -[ARWorldTrackingConfiguration shouldUseUltraWide]
  -[ARWorldTrackingConfiguration imageSensorSettingsForUltraWide]
  -[ARWorldTrackingConfiguration relocalizationEnabled]
  -[ARWorldTrackingConfiguration setRelocalizationEnabled:]
  -[ARWorldTrackingConfiguration setInitialWorldMap:]
  -[ARWorldTrackingConfiguration setLowQosSchedulingEnabled:]
  -[ARWorldTrackingConfiguration planeDetection]
  -[ARWorldTrackingConfiguration minVergenceAngle]
  -[ARWorldTrackingConfiguration setMinVergenceAngle:]
  -[ARWorldTrackingConfiguration setMlModelEnabled:]
  -[ARWorldTrackingConfiguration setCollaborationEnabled:]
  -[ARWorldTrackingConfiguration sceneReconstruction]
  -[ARWorldTrackingConfiguration setSceneReconstruction:]
  -[ARWorldTrackingConfiguration sceneReconstructionOptions]
  -[ARWorldTrackingConfiguration setSceneReconstructionOptions:]
  -[ARWorldTrackingConfiguration alwaysUsePrimaryCameraForTracking]
  -[ARWorldTrackingConfiguration setAlwaysUsePrimaryCameraForTracking:]
  -[ARWorldTrackingConfiguration recordForGeoTracking]
  -[ARWorldTrackingConfiguration setRecordForGeoTracking:]
  -[ARWorldTrackingConfiguration setPlaneBundleAdjustmentEnabled:]
  -[ARWorldTrackingConfiguration singleShotPlaneCallback]
  -[ARWorldTrackingConfiguration setSingleShotPlaneCallback:]
  -[ARWorldTrackingConfiguration trackedPlaneCallback]
  -[ARWorldTrackingConfiguration setTrackedPlaneCallback:]
  -[ARWorldTrackingConfiguration planeDetectionVIOPoseCallback]
  -[ARWorldTrackingConfiguration setPlaneDetectionVIOPoseCallback:]
  -[ARWorldTrackingConfiguration planeDetectionPoseUpdateCallback]
  -[ARWorldTrackingConfiguration setPlaneDetectionPoseUpdateCallback:]
  -[ARWorldTrackingConfiguration shouldUseJasper]
  -[ARWorldTrackingConfiguration setMaximumNumberOfTrackedImages:]
  -[ARWorldTrackingConfiguration maximumNumberOfTrackedImages]
  -[ARWorldTrackingConfiguration appClipCodeTrackingEnabled]
  -[ARWorldTrackingConfiguration shouldEnableVisionDataForImageSensorSettings:]
  -[ARWorldTrackingConfiguration setDetectionImages:]
  -[ARWorldTrackingConfiguration _trackingOptions]
  -[ARWorldTrackingConfiguration environmentTexturing]
  -[ARWorldTrackingConfiguration setWantsHDREnvironmentTextures:]
  -[ARWorldTrackingConfiguration detectionImages]
  -[ARWorldTrackingConfiguration automaticImageScaleEstimationEnabled]
  -[ARWorldTrackingConfiguration setAutomaticImageScaleEstimationEnabled:]
  -[ARWorldTrackingConfiguration detectionObjects]
  -[ARWorldTrackingConfiguration setDetectionObjects:]
  -[ARWorldTrackingConfiguration setAppClipCodeTrackingEnabled:]
  -[ARWorldTrackingConfiguration isLowQosSchedulingEnabled]
  -[ARWorldTrackingConfiguration shouldUseUltraWideIfAvailable]
  -[ARWorldTrackingConfiguration setShouldUseUltraWideIfAvailable:]
  -[ARWorldTrackingConfiguration depthOptimizedForStaticScene]
  -[ARWorldTrackingConfiguration setDepthOptimizedForStaticScene:]
  -[ARWorldTrackingConfiguration ignoreAppClipCodeURLLimitation]
  -[ARWorldTrackingConfiguration setIgnoreAppClipCodeURLLimitation:]
  -[ARWorldTrackingConfiguration imageSensorSettingsForUserFaceTracking]
  -[ARWorldTrackingConfiguration setFrontCameraFaceAnchorsEnabled:]
  -[ARWorldTrackingConfiguration setSpatialMappingParameters:]
  -[ARWorldTrackingConfiguration spatialMappingParameters]
  -[ARWorldTrackingConfiguration setUseSpatialMappingQualityMode:]
  -[ARWorldTrackingConfiguration useSpatialMappingQualityMode]
  -[ARWorldTrackingConfiguration userFaceTrackingEnabled]
  -[ARWorldTrackingConfiguration setUserFaceTrackingEnabled:]
  -[ARWorldTrackingConfiguration isAccuratePlaneExtentCheckEnabled]
  -[ARWorldTrackingConfiguration setAccuratePlaneExtentCheckEnabled:]
  -[ARWorldTrackingConfiguration deliverRawSceneUnderstandingResults]
  -[ARWorldTrackingConfiguration setDeliverRawSceneUnderstandingResults:]
  -[ARWorldTrackingConfiguration depthTemporalSmoothingEnabled]
  -[ARWorldTrackingConfiguration setDepthTemporalSmoothingEnabled:]
  -[ARWorldTrackingConfiguration appClipCodePerformanceTestingMode]
  -[ARWorldTrackingConfiguration setAppClipCodePerformanceTestingMode:]
  -[ARWorldTrackingConfiguration isPlaneBundleAdjustmentEnabled]


ARMPSImageFilter : NSObject
  // instance methods
  -[ARMPSImageFilter dealloc]
  -[ARMPSImageFilter .cxx_destruct]
  -[ARMPSImageFilter initWithImageKernel:device:]
  -[ARMPSImageFilter processPixelBuffer:format:]


ARParentTechnique : ARTechnique <ARTechniqueDelegate>
 @property  NSArray *techniques
 @property  NSArray *_internalTechniques
 @property  BOOL isParallel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARParentTechnique parentTechniqueOfClass:inArray:]
  +[ARParentTechnique techinqueInArray:passingTest:]
  +[ARParentTechnique techniquesByReplacingOriginalTechniques:withReplacementTechniques:passingTest:]
  +[ARParentTechnique techniquesByForceReplacingTechniques:withMatchingClassTechniques:]

  // instance methods
  -[ARParentTechnique .cxx_destruct]
  -[ARParentTechnique processData:]
  -[ARParentTechnique _fullDescription]
  -[ARParentTechnique isEqual:]
  -[ARParentTechnique prepare:]
  -[ARParentTechnique requestResultDataAtTimestamp:context:]
  -[ARParentTechnique technique:didOutputResultData:timestamp:context:]
  -[ARParentTechnique requiredTimeInterval]
  -[ARParentTechnique resultDataClasses]
  -[ARParentTechnique requiredSensorDataTypes]
  -[ARParentTechnique reconfigurableFrom:]
  -[ARParentTechnique reconfigureFrom:]
  -[ARParentTechnique setPowerUsage:]
  -[ARParentTechnique processResultData:timestamp:context:]
  -[ARParentTechnique technique:didFailWithError:]
  -[ARParentTechnique initWithTechniques:]
  -[ARParentTechnique dotGraphWithLines:]
  -[ARParentTechnique techniques]
  -[ARParentTechnique optionalSensorDataTypes]
  -[ARParentTechnique predictedResultDataAtTimestamp:context:]
  -[ARParentTechnique techniqueOfClass:]
  -[ARParentTechnique techniqueMatchingPredicate:]
  -[ARParentTechnique initWithParallelTechniques:]
  -[ARParentTechnique setBonusLatency:]
  -[ARParentTechnique siblingTechniquesDidChange:]
  -[ARParentTechnique initWithTechniques:delegate:]
  -[ARParentTechnique reuseTechniques:]
  -[ARParentTechnique isParallel]
  -[ARParentTechnique processData:onTechniques:]
  -[ARParentTechnique requestResultDataAtTimestamp:context:onTechniques:]
  -[ARParentTechnique setTechniques:]
  -[ARParentTechnique technique:didOutputResultData:timestamp:context:onTechniques:]
  -[ARParentTechnique _submitResultsForTimestamp:context:]
  -[ARParentTechnique _internalTechniques]
  -[ARParentTechnique set_internalTechniques:]


ARDaemonService : NSObject <ARServiceType, ARDaemonServiceBaseProtocol>
 @property  NSXPCConnection *connection
 @property  <ARRemoteServiceBaseProtocol> *clientService
 @property  BOOL authorized
 @property  BOOL active
 @property  NSString *clientBundleIdentifier
 @property  int clientProcessIdentifier
 @property  NSString *clientProcessName
 @property  <ARDaemonServiceDataSource> *dataSource
 @property  <ARDaemonServiceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARDaemonService isUnique]
  +[ARDaemonService serviceName]
  +[ARDaemonService isSupported]
  +[ARDaemonService remoteServiceClass]

  // instance methods
  -[ARDaemonService clientProcessName]
  -[ARDaemonService dataSource]
  -[ARDaemonService clientProcessIdentifier]
  -[ARDaemonService initWithConnection:]
  -[ARDaemonService clientBundleIdentifier]
  -[ARDaemonService setDelegate:]
  -[ARDaemonService interruptionHandler]
  -[ARDaemonService isAuthorized]
  -[ARDaemonService suspend]
  -[ARDaemonService delegate]
  -[ARDaemonService isActive]
  -[ARDaemonService .cxx_destruct]
  -[ARDaemonService resume]
  -[ARDaemonService connection]
  -[ARDaemonService setActive:]
  -[ARDaemonService setDataSource:]
  -[ARDaemonService invalidate]
  -[ARDaemonService invalidationHandler]
  -[ARDaemonService setConnection:]
  -[ARDaemonService initWithConnection:exportedInterface:remoteObjectInterface:]
  -[ARDaemonService startService:]
  -[ARDaemonService initAsLocalService]
  -[ARDaemonService clientService]


ARRemoteTechnique : ARTechnique <ARRemoteTechniqueClient, ARServerConnectionDelegate>
 @property  BOOL active
 @property  ARServerConnection *serverConnection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARRemoteTechnique serviceProxy]
  -[ARRemoteTechnique initWithListenerEndpoint:]
  -[ARRemoteTechnique serverConnection]
  -[ARRemoteTechnique dealloc]
  -[ARRemoteTechnique isActive]
  -[ARRemoteTechnique .cxx_destruct]
  -[ARRemoteTechnique processData:]
  -[ARRemoteTechnique initWithServiceName:]
  -[ARRemoteTechnique setActive:]
  -[ARRemoteTechnique prepare:]
  -[ARRemoteTechnique requestResultDataAtTimestamp:context:]
  -[ARRemoteTechnique requiredTimeInterval]
  -[ARRemoteTechnique resultDataClasses]
  -[ARRemoteTechnique requiredSensorDataTypes]
  -[ARRemoteTechnique captureBehavior]
  -[ARRemoteTechnique serverConnectionInterrupted:]
  -[ARRemoteTechnique serverConnectionInvalidated:]
  -[ARRemoteTechnique techniqueDidOutputResultData:timestamp:context:]
  -[ARRemoteTechnique techniqueDidFailWithError:]
  -[ARRemoteTechnique initWithServerConnection:]
  -[ARRemoteTechnique numberOfActiveConnections]


ARPositionalTrackingConfiguration : ARConfiguration
 @property  BOOL relocalizationEnabled
 @property  BOOL vioFusionEnabled
 @property  unsigned long planeDetection
 @property  ARWorldMap *initialWorldMap

  // class methods
  +[ARPositionalTrackingConfiguration new]
  +[ARPositionalTrackingConfiguration supportedVideoFormats]
  +[ARPositionalTrackingConfiguration isSupported]
  +[ARPositionalTrackingConfiguration _querySupportedVideoFormats]

  // instance methods
  -[ARPositionalTrackingConfiguration .cxx_destruct]
  -[ARPositionalTrackingConfiguration copyWithZone:]
  -[ARPositionalTrackingConfiguration isEqual:]
  -[ARPositionalTrackingConfiguration init]
  -[ARPositionalTrackingConfiguration setPlaneDetection:]
  -[ARPositionalTrackingConfiguration initialWorldMap]
  -[ARPositionalTrackingConfiguration createTechniques:]
  -[ARPositionalTrackingConfiguration imageSensorSettings]
  -[ARPositionalTrackingConfiguration setRelocalizationEnabled:]
  -[ARPositionalTrackingConfiguration setInitialWorldMap:]
  -[ARPositionalTrackingConfiguration planeDetection]
  -[ARPositionalTrackingConfiguration worldTrackingOptions]
  -[ARPositionalTrackingConfiguration isRelocalizationEnabled]
  -[ARPositionalTrackingConfiguration isVIOFusionEnabled]
  -[ARPositionalTrackingConfiguration setVioFusionEnabled:]


ARPersonSegmentationTechnique : ARMLImageProcessingTechnique
 @property  BOOL shouldOperateOnHighResolutionImages

  // instance methods
  -[ARPersonSegmentationTechnique dealloc]
  -[ARPersonSegmentationTechnique .cxx_destruct]
  -[ARPersonSegmentationTechnique processData:]
  -[ARPersonSegmentationTechnique isEqual:]
  -[ARPersonSegmentationTechnique init]
  -[ARPersonSegmentationTechnique requestResultDataAtTimestamp:context:]
  -[ARPersonSegmentationTechnique requiredTimeInterval]
  -[ARPersonSegmentationTechnique resultDataClasses]
  -[ARPersonSegmentationTechnique shouldOperateOnHighResolutionImages]
  -[ARPersonSegmentationTechnique setShouldOperateOnHighResolutionImages:]
  -[ARPersonSegmentationTechnique _prepareOnce:]
  -[ARPersonSegmentationTechnique runNeuralNetworkWithImageData:originalImageData:regionOfInterest:rotationOfResultTensor:]
  -[ARPersonSegmentationTechnique isLoadedModelVersionCorrect:]
  -[ARPersonSegmentationTechnique preProcessNetworkInputImage:]


ARPersonSegmentationSingleTechnique : ARPersonSegmentationTechnique

AROrientationTrackingConfiguration : ARConfiguration
 @property  BOOL autoFocusEnabled

  // class methods
  +[AROrientationTrackingConfiguration new]
  +[AROrientationTrackingConfiguration supportedVideoFormats]
  +[AROrientationTrackingConfiguration recommendedVideoFormatForHighResolutionFrameCapturing]
  +[AROrientationTrackingConfiguration supportsFrameSemantics:]
  +[AROrientationTrackingConfiguration recommendedVideoFormatFor4KResolution]
  +[AROrientationTrackingConfiguration _querySupportedVideoFormats]

  // instance methods
  -[AROrientationTrackingConfiguration init]


ARPatchGrid : NSObject <NSSecureCoding>
 @property  unsigned long size
 @property  r^{?=} patches
 @property  float pivot

  // class methods
  +[ARPatchGrid supportsSecureCoding]

  // instance methods
  -[ARPatchGrid encodeWithCoder:]
  -[ARPatchGrid .cxx_construct]
  -[ARPatchGrid .cxx_destruct]
  -[ARPatchGrid size]
  -[ARPatchGrid copyWithZone:]
  -[ARPatchGrid isEqual:]
  -[ARPatchGrid initWithCoder:]
  -[ARPatchGrid initWithPatchesVector:pivotAngle:]
  -[ARPatchGrid patches]
  -[ARPatchGrid pivot]


ARGeoTrackingConsensusAndAverageFilter : NSObject
  // instance methods
  -[ARGeoTrackingConsensusAndAverageFilter score]
  -[ARGeoTrackingConsensusAndAverageFilter dealloc]
  -[ARGeoTrackingConsensusAndAverageFilter initWithENUFromECEF:maxHistory:minInlierScore:]
  -[ARGeoTrackingConsensusAndAverageFilter getCurrentENUFromVIO:ENUFromVIO:]
  -[ARGeoTrackingConsensusAndAverageFilter updateWithVIOPose:VLPose:]


ARGPUImageUndistortion : NSObject
  // instance methods
  -[ARGPUImageUndistortion .cxx_destruct]
  -[ARGPUImageUndistortion init]
  -[ARGPUImageUndistortion undistortFisheyeImage:withFisheyeIntrinsics:withFisheyeRadialCoefficients:toRectilinearImage:withRectilinearIntrinsics:]
  -[ARGPUImageUndistortion undistortFisheyeTexture:withFisheyeIntrinsics:withFisheyeRadialCoefficients:toRectilinearImage:withRectilinearIntrinsics:]


ARSpatialMappingPointCloud : NSObject <NSCopying>
 @property  long long count
 @property  r^ points
 @property  r^ semanticLabels
 @property  r^ semanticVotes
 @property  {?=[4]} cameraPose
 @property  * normals
 @property  * colors
 @property  char * semantics
 @property  unsigned long semanticsBinSize
 @property  NSUUID *identifier
 @property  * pointsToWorld
 @property  double timestamp

  // class methods
  +[ARSpatialMappingPointCloud dictionaryFromArray:]

  // instance methods
  -[ARSpatialMappingPointCloud identifier]
  -[ARSpatialMappingPointCloud colors]
  -[ARSpatialMappingPointCloud points]
  -[ARSpatialMappingPointCloud .cxx_construct]
  -[ARSpatialMappingPointCloud .cxx_destruct]
  -[ARSpatialMappingPointCloud count]
  -[ARSpatialMappingPointCloud copyWithZone:]
  -[ARSpatialMappingPointCloud timestamp]
  -[ARSpatialMappingPointCloud semantics]
  -[ARSpatialMappingPointCloud cameraPose]
  -[ARSpatialMappingPointCloud setCameraPose:]
  -[ARSpatialMappingPointCloud normals]
  -[ARSpatialMappingPointCloud initWithPointCloud:smTransform:identifier:timestamp:]
  -[ARSpatialMappingPointCloud initWithPointCloud:transform:identifier:timestamp:]
  -[ARSpatialMappingPointCloud updateTransform:]
  -[ARSpatialMappingPointCloud semanticLabels]
  -[ARSpatialMappingPointCloud semanticVotes]
  -[ARSpatialMappingPointCloud pointsToWorld]
  -[ARSpatialMappingPointCloud semanticsBinSize]


ARQAHelper : NSObject
  // class methods
  +[ARQAHelper arrayWithVector2:]
  +[ARQAHelper arrayWithVector3:]
  +[ARQAHelper arrayWithVector4:]
  +[ARQAHelper arrayWithMatrix4x4:]
  +[ARQAHelper arrayWithMatrix3x3:]
  +[ARQAHelper arrayOf2dPoints:count:]
  +[ARQAHelper arrayOf3dPoints:count:]
  +[ARQAHelper generateTagsForConfiguration:replaySensor:technique:]
  +[ARQAHelper traverseTechniques:withBlock:]
  +[ARQAHelper techniquesArray:array:]
  +[ARQAHelper headerInformationWithConfiguration:technique:]
  +[ARQAHelper dictionaryFromPlaneExtent:]
  +[ARQAHelper dictionaryFromVertices:vertexCount:textureCoordinates:textureCoordinateCount:]
  +[ARQAHelper dictionaryFromMeshGeometry:]
  +[ARQAHelper dictionaryFromPatchGrid:]
  +[ARQAHelper extractAnchorDataForFrame:]
  +[ARQAHelper extractDetectedBodiesForFrame:]
  +[ARQAHelper traceFrameData:withFrameIndex:]
  +[ARQAHelper traceFrameData:withFrameIndex:writeOBJ:]
  +[ARQAHelper dictionaryFromCLLocation:]
  +[ARQAHelper dictionaryFromRawCLLocation:]
  +[ARQAHelper dictionaryFromRaycastQuery:]
  +[ARQAHelper arrayFromRaycastResults:]
  +[ARQAHelper _meanDepthValueOfDepthBuffer:consideringSegmentation:ofSegmentationBuffer:]
  +[ARQAHelper formatDescriptionForAnchor]
  +[ARQAHelper dictionaryFromAnchor:]
  +[ARQAHelper formatDescriptionForPlaneAnchor]
  +[ARQAHelper dictionaryFromPlaneAnchor:]
  +[ARQAHelper dictionaryFromMeshAnchor:]


ARCamera : NSObject <NSSecureCoding, NSCopying>
 @property  {CGSize=dd} imageResolution
 @property  double exposureDuration
 @property  float exposureOffset
 @property  {?=[3]} intrinsics
 @property  unsigned long lensType
 @property  void radialDistortion
 @property  void tangentialDistortion
 @property  {?=[4]} transform
 @property  long long trackingState
 @property  long long trackingStateReason
 @property  long long devicePosition
 @property  AVCameraCalibrationData *calibrationData
 @property  NSDictionary *extrinsicsMap
 @property  void eulerAngles
 @property  {?=[4]} projectionMatrix

  // class methods
  +[ARCamera supportsSecureCoding]

  // instance methods
  -[ARCamera devicePosition]
  -[ARCamera exposureDuration]
  -[ARCamera focalLength]
  -[ARCamera setDevicePosition:]
  -[ARCamera encodeWithCoder:]
  -[ARCamera .cxx_destruct]
  -[ARCamera debugQuickLookObject]
  -[ARCamera setTransform:]
  -[ARCamera copyWithZone:]
  -[ARCamera setExposureDuration:]
  -[ARCamera transform]
  -[ARCamera isEqual:]
  -[ARCamera init]
  -[ARCamera initWithCoder:]
  -[ARCamera lensType]
  -[ARCamera trackingState]
  -[ARCamera setTrackingState:]
  -[ARCamera calibrationData]
  -[ARCamera trackingStateReason]
  -[ARCamera eulerAngles]
  -[ARCamera intrinsics]
  -[ARCamera imageResolution]
  -[ARCamera setImageResolution:]
  -[ARCamera setLensType:]
  -[ARCamera radialDistortion]
  -[ARCamera setRadialDistortion:]
  -[ARCamera tangentialDistortion]
  -[ARCamera setTangentialDistortion:]
  -[ARCamera extrinsicsMap]
  -[ARCamera extrinsicMatrix4x4ToDeviceType:]
  -[ARCamera extrinsicMatrixToDeviceType:]
  -[ARCamera setCalibrationData:]
  -[ARCamera setExtrinsicsMap:]
  -[ARCamera principalPoint]
  -[ARCamera _description:]
  -[ARCamera initWithIntrinsics:imageResolution:]
  -[ARCamera displayCenterTransform]
  -[ARCamera projectionMatrix]
  -[ARCamera projectPoint:orientation:viewportSize:]
  -[ARCamera unprojectPoint:ontoPlaneWithTransform:orientation:viewportSize:]
  -[ARCamera projectionMatrixForOrientation:viewportSize:zNear:zFar:]
  -[ARCamera viewMatrixForOrientation:]
  -[ARCamera setTrackingStateReason:]
  -[ARCamera setIntrinsics:]
  -[ARCamera exposureOffset]
  -[ARCamera setExposureOffset:]


ARUndistortionMapping : NSObject
  // instance methods
  -[ARUndistortionMapping .cxx_construct]
  -[ARUndistortionMapping dealloc]
  -[ARUndistortionMapping .cxx_destruct]
  -[ARUndistortionMapping initWithImageSize:]
  -[ARUndistortionMapping createVImageMappingIfNeededForImage:]


ARImageDistortionCorrectionTechnique : ARTechnique
 @property  {CGSize=dd} imageSize

  // instance methods
  -[ARImageDistortionCorrectionTechnique setImageSize:]
  -[ARImageDistortionCorrectionTechnique imageSize]
  -[ARImageDistortionCorrectionTechnique dealloc]
  -[ARImageDistortionCorrectionTechnique .cxx_destruct]
  -[ARImageDistortionCorrectionTechnique processData:]
  -[ARImageDistortionCorrectionTechnique initWithImageSize:]
  -[ARImageDistortionCorrectionTechnique buildUVMapWithDistortedPixelProviderBlock:]
  -[ARImageDistortionCorrectionTechnique buildUVMapWithCameraCalibrationData:]
  -[ARImageDistortionCorrectionTechnique buildUVMapFromHardcodedCalibrationParameters]
  -[ARImageDistortionCorrectionTechnique undistortImage:toTargetImage:imageRotationAngle:]
  -[ARImageDistortionCorrectionTechnique lensDistortionPointForPoint:lookupTable:distortionOpticalCenter:imageSize:]


ARFrameContext : NSObject <ARDaemonSecureCoding, ARResultDataContext>
 @property  NSArray *anchorsToAdd
 @property  NSArray *anchorsToRemove
 @property  NSArray *anchorsToStopTracking
 @property  NSSet *collaborationData
 @property  {?=[4]} sessionTransform
 @property  BOOL sessionTransformUpdated
 @property  BOOL sessionTransformReset
 @property  BOOL sessionTransformShouldResumeCameraHeading
 @property  BOOL sessionTransformShouldResumeCameraPosition
 @property  BOOL didRelocalize
 @property  {?=[4]} relocalizationDeltaTransform
 @property  ARImageData *imageData
 @property  ARDeviceOrientationData *orientationData
 @property  ARLocationData *locationData
 @property  long long worldAlignment
 @property  ARWorldMap *worldMap
 @property  unsigned long frameDebugOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARFrameContext supportsSecureCoding]

  // instance methods
  -[ARFrameContext removeAnchor:]
  -[ARFrameContext sessionTransformUpdated]
  -[ARFrameContext encodeWithCoder:]
  -[ARFrameContext cameraPosition]
  -[ARFrameContext .cxx_destruct]
  -[ARFrameContext stopTrackingAnchors:]
  -[ARFrameContext sessionTransform]
  -[ARFrameContext imageData]
  -[ARFrameContext setSessionTransform:]
  -[ARFrameContext resetSessionTransform]
  -[ARFrameContext addAnchor:]
  -[ARFrameContext anchorsToAdd]
  -[ARFrameContext clearAddedAnchors]
  -[ARFrameContext isEqual:]
  -[ARFrameContext setImageData:]
  -[ARFrameContext init]
  -[ARFrameContext initWithCoder:]
  -[ARFrameContext locationData]
  -[ARFrameContext setLocationData:]
  -[ARFrameContext setWorldAlignment:]
  -[ARFrameContext worldAlignment]
  -[ARFrameContext frameDebugOptions]
  -[ARFrameContext setFrameDebugOptions:]
  -[ARFrameContext resultDataOfClass:]
  -[ARFrameContext anchorsToRemove]
  -[ARFrameContext resumeSessionCameraPosition]
  -[ARFrameContext resumeSessionCameraPositionAndHeading]
  -[ARFrameContext anchorsToStopTracking]
  -[ARFrameContext setSessionTransformReset:]
  -[ARFrameContext setSessionTransformUpdated:]
  -[ARFrameContext setAnchorsToAdd:]
  -[ARFrameContext setAnchorsToRemove:]
  -[ARFrameContext setAnchorsToStopTracking:]
  -[ARFrameContext orientationData]
  -[ARFrameContext setOrientationData:]
  -[ARFrameContext worldMap]
  -[ARFrameContext setWorldMap:]
  -[ARFrameContext collaborationData]
  -[ARFrameContext setCollaborationData:]
  -[ARFrameContext sessionTransformReset]
  -[ARFrameContext sessionTransformShouldResumeCameraHeading]
  -[ARFrameContext sessionTransformShouldResumeCameraPosition]
  -[ARFrameContext didRelocalize]
  -[ARFrameContext setDidRelocalize:]
  -[ARFrameContext relocalizationDeltaTransform]
  -[ARFrameContext setRelocalizationDeltaTransform:]


ARFaceTrackingManager : NSObject
 @property  long long maximumNumberOfTrackedFaces

  // class methods
  +[ARFaceTrackingManager initialize]
  +[ARFaceTrackingManager isSupported]

  // instance methods
  -[ARFaceTrackingManager dealloc]
  -[ARFaceTrackingManager .cxx_destruct]
  -[ARFaceTrackingManager processData:]
  -[ARFaceTrackingManager isEqual:]
  -[ARFaceTrackingManager initWithOptions:]
  -[ARFaceTrackingManager init]
  -[ARFaceTrackingManager initWithMaximumNumberOfTrackedFaces:options:]
  -[ARFaceTrackingManager maximumNumberOfTrackedFaces]
  -[ARFaceTrackingManager faceTrackingOptionsFromImageData:withCallback:]


ARPersonOcclusionParentTechnique : ARParentTechnique <ARTechniqueDelegate>
 @property  <ARTechniqueForwardingStrategy> *depthTechniqueProcessingStrategy
 @property  long long optimizationStrategy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARPersonOcclusionParentTechnique dealloc]
  -[ARPersonOcclusionParentTechnique .cxx_destruct]
  -[ARPersonOcclusionParentTechnique processData:]
  -[ARPersonOcclusionParentTechnique isEqual:]
  -[ARPersonOcclusionParentTechnique requestResultDataAtTimestamp:context:]
  -[ARPersonOcclusionParentTechnique technique:didOutputResultData:timestamp:context:]
  -[ARPersonOcclusionParentTechnique reconfigureFrom:]
  -[ARPersonOcclusionParentTechnique initWithTechniques:delegate:]
  -[ARPersonOcclusionParentTechnique setTechniques:]
  -[ARPersonOcclusionParentTechnique setOptimizationStrategy:]
  -[ARPersonOcclusionParentTechnique techniquesToRunWithForwardedDepth:]
  -[ARPersonOcclusionParentTechnique depthTechniqueProcessingStrategy]
  -[ARPersonOcclusionParentTechnique setDepthTechniqueProcessingStrategy:]
  -[ARPersonOcclusionParentTechnique optimizationStrategy]


ARPlaneData : NSObject <ARResultData, ARQATraceable>
 @property  ARCV3DPlaneDetectionPlaneList *detectionResult
 @property  double timestamp
 @property  unsigned long detectionTypeMask
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDictionary *tracingEntry

  // class methods
  +[ARPlaneData _applyPivotToPlaneToWorldTransform:pivot:]
  +[ARPlaneData _pivotForPlane:]
  +[ARPlaneData _updateExtentsForPlaneAnchor:plane:pivot:applyPivotRotation:detectionTypeMask:]
  +[ARPlaneData _worldAlignmentRotationForReferenceTransform:planeAlignment:detectionTypeMask:]
  +[ARPlaneData _anchorForPlane:identifier:referenceOriginTransform:visionToRendering:sceneUnderstandingEnabled:applyPivotRotation:detectionTypeMask:]
  +[ARPlaneData _surfacePivotForPlane:]
  +[ARPlaneData _surfaceToWorldTransformForPlane:pivot:]
  +[ARPlaneData setSemanticsFromCV3D:labelProbabilities:sceneUnderstandingEnabled:onPlane:]
  +[ARPlaneData anchorForDetectionResult:]

  // instance methods
  -[ARPlaneData setTimestamp:]
  -[ARPlaneData .cxx_destruct]
  -[ARPlaneData timestamp]
  -[ARPlaneData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARPlaneData tracingEntry]
  -[ARPlaneData initWithDetectionResult:detectionTypeMask:sceneUnderstandingEnabled:]
  -[ARPlaneData initWithDetectionResult:detectionTypeMask:sceneUnderstandingEnabled:visionToRendering:atTimestamp:]
  -[ARPlaneData applyPivotRotation]
  -[ARPlaneData _anchorForPlane:identifier:referenceOriginTransform:]
  -[ARPlaneData _updatedAnchor:forPlane:referenceOriginTransform:]
  -[ARPlaneData detectionTypeMask]
  -[ARPlaneData detectionResult]


ARObjectDetectionResult : NSObject
 @property  {?=[4]} visionTransform
 @property  ARReferenceObject *referenceObject

  // instance methods
  -[ARObjectDetectionResult .cxx_destruct]
  -[ARObjectDetectionResult isEqual:]
  -[ARObjectDetectionResult visionTransform]
  -[ARObjectDetectionResult setVisionTransform:]
  -[ARObjectDetectionResult referenceObject]
  -[ARObjectDetectionResult setReferenceObject:]


ARObjectDetectionResultData : NSObject <ARResultData, ARQATraceable>
 @property  double timestamp
 @property  NSArray *detectedObjects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDictionary *tracingEntry

  // instance methods
  -[ARObjectDetectionResultData setTimestamp:]
  -[ARObjectDetectionResultData .cxx_destruct]
  -[ARObjectDetectionResultData timestamp]
  -[ARObjectDetectionResultData isEqual:]
  -[ARObjectDetectionResultData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARObjectDetectionResultData tracingEntry]
  -[ARObjectDetectionResultData detectedObjects]
  -[ARObjectDetectionResultData setDetectedObjects:]


ARGPUCubemapProjector : NSObject
  // class methods
  +[ARGPUCubemapProjector createCubemap:]

  // instance methods
  -[ARGPUCubemapProjector .cxx_destruct]
  -[ARGPUCubemapProjector init]
  -[ARGPUCubemapProjector projectToCube:transformWorldFromCube:meshes:blend:]


ARGPUCubemapHistogram : NSObject
  // instance methods
  -[ARGPUCubemapHistogram .cxx_destruct]
  -[ARGPUCubemapHistogram init]
  -[ARGPUCubemapHistogram colorHistogramForCubemap:]


ARGPUCubemapConverter : NSObject
  // instance methods
  -[ARGPUCubemapConverter .cxx_destruct]
  -[ARGPUCubemapConverter init]
  -[ARGPUCubemapConverter equirectangularTextureFromCubemapTexture:rotation:width:height:]
  -[ARGPUCubemapConverter cubemapTextureFromEquirectangularTexture:rotation:size:]


ARFrame : NSObject <NSSecureCoding, NSCopying>
 @property  double currentCaptureTimestamp
 @property  ^{__CVBuffer=} capturedImage
 @property  NSArray *anchors
 @property  NSArray *privateAnchors
 @property  ARLightEstimate *lightEstimate
 @property  long long worldMappingStatus
 @property  ARPointCloud *featurePoints
 @property  ARPointCloud *referenceFeaturePoints
 @property  NSArray *cachedPointClouds
 @property  {?=[4]} referenceOriginTransform
 @property  {?=[4]} referenceOriginDelta
 @property  {?=[4]} sessionOriginTransform
 @property  {?=[4]} worldAlignmentTransform
 @property  long long worldAlignment
 @property  ARFrameTimingData *timingData
 @property  ARWorldTrackingErrorData *worldTrackingErrorData
 @property  ARLineCloud *worldTrackingLineCloud
 @property  ARRawSceneUnderstandingData *rawSceneUnderstandingData
 @property  ARWorldTrackingState *worldTrackingState
 @property  long long renderFramesPerSecond
 @property  BOOL shouldRestrictFrameRate
 @property  NSDate *captureDate
 @property  double estimatedLuminance
 @property  NSArray *resultDatas
 @property  long long deviceOrientation
 @property  ^{__CVBuffer=} segmentationBuffer
 @property  ^{__CVBuffer=} estimatedDepthData
 @property  ^{__CVBuffer=} downSampledMattingPixelBuffer
 @property  ^{__CVBuffer=} mattingScaleImagePixelBuffer
 @property  NSArray *detectedBodies
 @property  NSArray *detectedPersonMetadata
 @property  ARFaceData *faceData
 @property  AVDepthData *capturedDepthData
 @property  ARVideoFormat *currentlyActiveVideoFormat
 @property  BOOL highResolution
 @property  ARPointCloud *capturedPointCloudData
 @property  ^{__CVBuffer=} depthConfidenceData
 @property  ^{__CVBuffer=} depthNormalData
 @property  ^{__CVBuffer=} semanticSegmentationBuffer
 @property  ^{CGImage=} depthMap
 @property  ARDepthData *sceneDepth
 @property  ARDepthData *smoothedSceneDepth
 @property  double capturedDepthDataTimestamp
 @property  CLLocation *location
 @property  double heading
 @property  CLLocation *rawLocation
 @property  double rawHeading
 @property  double rawLocationTimestamp
 @property  ARVLStateData *vlState
 @property  ARGeoTrackingStatus *geoTrackingStatus
 @property  VLLocalizationDebugInfo *vlDebugInfo
 @property  double undulation
 @property  NSDictionary *tiffData
 @property  <MTLTexture> *imageNoiseTexture
 @property  float imageNoiseIntensity
 @property  double timestamp
 @property  NSDictionary *exifData
 @property  <MTLTexture> *cameraGrainTexture
 @property  float cameraGrainIntensity
 @property  ARCamera *camera
 @property  ARPointCloud *rawFeaturePoints
 @property  ARBody2D *detectedBody

  // class methods
  +[ARFrame supportsSecureCoding]

  // instance methods
  -[ARFrame camera]
  -[ARFrame rawLocation]
  -[ARFrame heading]
  -[ARFrame encodeWithCoder:]
  -[ARFrame dealloc]
  -[ARFrame .cxx_destruct]
  -[ARFrame setRawLocation:]
  -[ARFrame deviceOrientation]
  -[ARFrame setTimingData:]
  -[ARFrame setLocation:]
  -[ARFrame timingData]
  -[ARFrame setHeading:]
  -[ARFrame setDeviceOrientation:]
  -[ARFrame captureDate]
  -[ARFrame copyWithZone:]
  -[ARFrame timestamp]
  -[ARFrame location]
  -[ARFrame isEqual:]
  -[ARFrame undulation]
  -[ARFrame initWithCoder:]
  -[ARFrame capturedImage]
  -[ARFrame setCapturedImage:]
  -[ARFrame setWorldAlignment:]
  -[ARFrame rawHeading]
  -[ARFrame currentCaptureTimestamp]
  -[ARFrame renderFramesPerSecond]
  -[ARFrame geoTrackingStatus]
  -[ARFrame worldTrackingState]
  -[ARFrame worldAlignment]
  -[ARFrame lightEstimate]
  -[ARFrame anchors]
  -[ARFrame setAnchors:]
  -[ARFrame capturedDepthData]
  -[ARFrame estimatedDepthData]
  -[ARFrame detectedPersonMetadata]
  -[ARFrame worldAlignmentTransform]
  -[ARFrame featurePoints]
  -[ARFrame segmentationBuffer]
  -[ARFrame setCaptureDate:]
  -[ARFrame exifData]
  -[ARFrame faceData]
  -[ARFrame setFaceData:]
  -[ARFrame isHighResolution]
  -[ARFrame tiffData]
  -[ARFrame vlState]
  -[ARFrame referenceOriginTransform]
  -[ARFrame setReferenceOriginTransform:]
  -[ARFrame initWithCamera:timestamp:]
  -[ARFrame initWithTimestamp:context:]
  -[ARFrame setPredictedTimestamp:]
  -[ARFrame setSegmentationBuffer:]
  -[ARFrame setEstimatedDepthData:]
  -[ARFrame setDepthConfidenceData:]
  -[ARFrame setDepthNormalData:]
  -[ARFrame setSemanticSegmentationBuffer:]
  -[ARFrame setDownSampledMattingPixelBuffer:]
  -[ARFrame setMattingScaleImagePixelBuffer:]
  -[ARFrame detectedBody]
  -[ARFrame transformPointToNDCSpace:]
  -[ARFrame hitTest:types:]
  -[ARFrame raycastQueryFromPoint:allowingTarget:alignment:]
  -[ARFrame displayTransformForOrientation:viewportSize:]
  -[ARFrame rawFeaturePoints]
  -[ARFrame _updatePredicted:]
  -[ARFrame referenceOriginTransformAvailable]
  -[ARFrame referenceOriginTransformUpdated]
  -[ARFrame setReferenceOriginTransformUpdated:]
  -[ARFrame referenceOriginChanged]
  -[ARFrame setReferenceOriginChanged:]
  -[ARFrame setReferenceOriginDelta:]
  -[ARFrame referenceOriginDeltaAvailable]
  -[ARFrame setSessionOriginTransform:]
  -[ARFrame sessionOriginTransformAvailable]
  -[ARFrame setWorldAlignmentTransform:]
  -[ARFrame worldAlignmentTransformAvailable]
  -[ARFrame gravityAlignedReferenceOriginTransform]
  -[ARFrame useHittestRaycasting]
  -[ARFrame _hitTestFromOrigin:withDirection:types:]
  -[ARFrame _horizontalPlaneEstimateFromFeaturePoint:fromOrigin:withDirection:]
  -[ARFrame _hitTestFromOrigin:withDirection:planeAlignment:forPlanes:referenceOriginTransform:]
  -[ARFrame _hitTestEstimatedPlanesFromOrigin:withDirection:planeAlignment:]
  -[ARFrame cameraGrainTexture]
  -[ARFrame cameraGrainIntensity]
  -[ARFrame setCapturedDepthData:]
  -[ARFrame capturedDepthDataTimestamp]
  -[ARFrame setCapturedDepthDataTimestamp:]
  -[ARFrame setLightEstimate:]
  -[ARFrame worldMappingStatus]
  -[ARFrame setWorldMappingStatus:]
  -[ARFrame setGeoTrackingStatus:]
  -[ARFrame sceneDepth]
  -[ARFrame setSceneDepth:]
  -[ARFrame smoothedSceneDepth]
  -[ARFrame setSmoothedSceneDepth:]
  -[ARFrame privateAnchors]
  -[ARFrame setPrivateAnchors:]
  -[ARFrame setFeaturePoints:]
  -[ARFrame referenceFeaturePoints]
  -[ARFrame setReferenceFeaturePoints:]
  -[ARFrame cachedPointClouds]
  -[ARFrame setCachedPointClouds:]
  -[ARFrame referenceOriginDelta]
  -[ARFrame sessionOriginTransform]
  -[ARFrame worldTrackingErrorData]
  -[ARFrame setWorldTrackingErrorData:]
  -[ARFrame worldTrackingLineCloud]
  -[ARFrame setWorldTrackingLineCloud:]
  -[ARFrame rawSceneUnderstandingData]
  -[ARFrame setRawSceneUnderstandingData:]
  -[ARFrame setWorldTrackingState:]
  -[ARFrame setRenderFramesPerSecond:]
  -[ARFrame shouldRestrictFrameRate]
  -[ARFrame setShouldRestrictFrameRate:]
  -[ARFrame estimatedLuminance]
  -[ARFrame setEstimatedLuminance:]
  -[ARFrame resultDatas]
  -[ARFrame setResultDatas:]
  -[ARFrame downSampledMattingPixelBuffer]
  -[ARFrame mattingScaleImagePixelBuffer]
  -[ARFrame detectedBodies]
  -[ARFrame setDetectedBodies:]
  -[ARFrame setDetectedPersonMetadata:]
  -[ARFrame currentlyActiveVideoFormat]
  -[ARFrame setCurrentlyActiveVideoFormat:]
  -[ARFrame capturedPointCloudData]
  -[ARFrame setCapturedPointCloudData:]
  -[ARFrame depthConfidenceData]
  -[ARFrame depthNormalData]
  -[ARFrame semanticSegmentationBuffer]
  -[ARFrame depthMap]
  -[ARFrame setDepthMap:]
  -[ARFrame setRawHeading:]
  -[ARFrame rawLocationTimestamp]
  -[ARFrame setRawLocationTimestamp:]
  -[ARFrame setVlState:]
  -[ARFrame vlDebugInfo]
  -[ARFrame setVlDebugInfo:]
  -[ARFrame setUndulation:]
  -[ARFrame imageNoiseTexture]
  -[ARFrame setImageNoiseTexture:]
  -[ARFrame imageNoiseIntensity]
  -[ARFrame setImageNoiseIntensity:]


ARFrameTimingData : NSObject
 @property  double videoLatency
 @property  NSDictionary *timestamps

  // instance methods
  -[ARFrameTimingData .cxx_destruct]
  -[ARFrameTimingData init]
  -[ARFrameTimingData timestamps]
  -[ARFrameTimingData addTimestamp:forDataOfClass:]
  -[ARFrameTimingData videoLatency]
  -[ARFrameTimingData setVideoLatency:]


ARRenderSyncScheduler : NSObject
 @property  double inputJitterBufferInterval
 @property  long long expectedFramesPerSecond
 @property  double vsyncOffset
 @property  BOOL schedulingActive
 @property  unsigned long excessiveCallbackOptions

  // instance methods
  -[ARRenderSyncScheduler _callback]
  -[ARRenderSyncScheduler .cxx_destruct]
  -[ARRenderSyncScheduler init]
  -[ARRenderSyncScheduler initWithExpectedFramesPerSecond:]
  -[ARRenderSyncScheduler vsyncOffset]
  -[ARRenderSyncScheduler setVsyncOffset:]
  -[ARRenderSyncScheduler expectedFramesPerSecond]
  -[ARRenderSyncScheduler setExpectedFramesPerSecond:]
  -[ARRenderSyncScheduler schedulingActive]
  -[ARRenderSyncScheduler setSchedulingActive:]
  -[ARRenderSyncScheduler submitBlock:]
  -[ARRenderSyncScheduler _tryNextBlockWithTotalTried:]
  -[ARRenderSyncScheduler _callbackActionForBlockWithLatency:]
  -[ARRenderSyncScheduler inputJitterBufferInterval]
  -[ARRenderSyncScheduler setInputJitterBufferInterval:]
  -[ARRenderSyncScheduler excessiveCallbackOptions]
  -[ARRenderSyncScheduler setExcessiveCallbackOptions:]


ARRenderSyncSchedulerBlockWrapper : NSObject
 @property  NSDate *entryTimestamp
 @property  @? block

  // instance methods
  -[ARRenderSyncSchedulerBlockWrapper .cxx_destruct]
  -[ARRenderSyncSchedulerBlockWrapper setBlock:]
  -[ARRenderSyncSchedulerBlockWrapper block]
  -[ARRenderSyncSchedulerBlockWrapper entryTimestamp]
  -[ARRenderSyncSchedulerBlockWrapper setEntryTimestamp:]


ARLine : NSObject <NSCopying>
 @property  unsigned long identifier
 @property  void startPoint
 @property  void endPoint

  // instance methods
  -[ARLine setEndPoint:]
  -[ARLine identifier]
  -[ARLine startPoint]
  -[ARLine setStartPoint:]
  -[ARLine setIdentifier:]
  -[ARLine copyWithZone:]
  -[ARLine endPoint]


ARLineCloud : NSObject <NSCopying>
 @property  NSArray *lines

  // instance methods
  -[ARLineCloud .cxx_destruct]
  -[ARLineCloud lines]
  -[ARLineCloud copyWithZone:]
  -[ARLineCloud initWithLineCloudData:]


ARSystemTimeSnapshot : NSObject
 @property  double upTime
 @property  double upTimeIncludingSleep
 @property  double upTimeIncludingSleepAndDriftCorrection

  // class methods
  +[ARSystemTimeSnapshot timeSinceSnapshot:]

  // instance methods
  -[ARSystemTimeSnapshot upTime]
  -[ARSystemTimeSnapshot init]
  -[ARSystemTimeSnapshot timeSinceSnapshot:]
  -[ARSystemTimeSnapshot initWithUpTime:upTimeIncludingSleep:upTimeIncludingSleepAndDriftCorrection:]
  -[ARSystemTimeSnapshot upTimeIncludingSleep]
  -[ARSystemTimeSnapshot upTimeIncludingSleepAndDriftCorrection]


ARPersonMetadata : NSObject <NSSecureCoding, NSCopying>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox
 @property  double meanDepth

  // class methods
  +[ARPersonMetadata supportsSecureCoding]

  // instance methods
  -[ARPersonMetadata encodeWithCoder:]
  -[ARPersonMetadata boundingBox]
  -[ARPersonMetadata copyWithZone:]
  -[ARPersonMetadata initWithCoder:]
  -[ARPersonMetadata rectScaledToSize:]
  -[ARPersonMetadata meanDepth]
  -[ARPersonMetadata initWithDepthBasedPersonDetectionResult:]
  -[ARPersonMetadata initWithBoundingBox:meanDepth:]


ARGeoTrackingLocationRequestHandler : NSObject <CLLocationManagerDelegate>
 @property  @? locationCompletionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARGeoTrackingLocationRequestHandler locationManager:didFailWithError:]
  -[ARGeoTrackingLocationRequestHandler .cxx_destruct]
  -[ARGeoTrackingLocationRequestHandler locationManagerDidChangeAuthorization:]
  -[ARGeoTrackingLocationRequestHandler setLocationManager:]
  -[ARGeoTrackingLocationRequestHandler locationManager:didUpdateLocations:]
  -[ARGeoTrackingLocationRequestHandler init]
  -[ARGeoTrackingLocationRequestHandler waitForAuthorizationStatus]
  -[ARGeoTrackingLocationRequestHandler requestLocationWithCompletionHandler:]
  -[ARGeoTrackingLocationRequestHandler locationCompletionHandler]
  -[ARGeoTrackingLocationRequestHandler setLocationCompletionHandler:]


ARSyncedUltraWideForwardingStrategy : NSObject <ARTechniqueForwardingStrategy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARSyncedUltraWideForwardingStrategy frameRateLimitAllowsProcessingThisData:mostRecentTimestamps:maxFrameRate:]

  // instance methods
  -[ARSyncedUltraWideForwardingStrategy .cxx_destruct]
  -[ARSyncedUltraWideForwardingStrategy shouldProcessData:]
  -[ARSyncedUltraWideForwardingStrategy shouldRequestResultDataAtTimestamp:context:]
  -[ARSyncedUltraWideForwardingStrategy initWithMaxFrameRate:]


ARRaycastResult : NSObject
 @property  long long target
 @property  ARAnchor *anchor
 @property  {?=[4]} localTransform
 @property  NSUUID *anchorIdentifier
 @property  {?=[4]} worldTransform
 @property  long long targetAlignment

  // instance methods
  -[ARRaycastResult anchor]
  -[ARRaycastResult setAnchor:]
  -[ARRaycastResult setTarget:]
  -[ARRaycastResult target]
  -[ARRaycastResult .cxx_destruct]
  -[ARRaycastResult setLocalTransform:]
  -[ARRaycastResult localTransform]
  -[ARRaycastResult worldTransform]
  -[ARRaycastResult _description:]
  -[ARRaycastResult targetAlignment]
  -[ARRaycastResult initWithWorldTransform:target:targetAlignment:]
  -[ARRaycastResult anchorIdentifier]
  -[ARRaycastResult setAnchorIdentifier:]


ARSISemanticSegmentationTechnique : ARMLImageProcessingTechnique <ARTechniqueBusyState>
 @property  BOOL supportsUncertainty
 @property  BOOL shouldUseSynchronizedUltraWide
 @property  BOOL isBusy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARSISemanticSegmentationTechnique createUncertaintyMaskedSegmentationBuffer:fromSegmentationBuffer:uncertaintyBuffer:maskValue:]

  // instance methods
  -[ARSISemanticSegmentationTechnique initLegacy]
  -[ARSISemanticSegmentationTechnique dealloc]
  -[ARSISemanticSegmentationTechnique .cxx_destruct]
  -[ARSISemanticSegmentationTechnique init]
  -[ARSISemanticSegmentationTechnique requiredTimeInterval]
  -[ARSISemanticSegmentationTechnique resultDataClasses]
  -[ARSISemanticSegmentationTechnique _prepareOnce:]
  -[ARSISemanticSegmentationTechnique runNeuralNetworkWithImageData:originalImageData:regionOfInterest:rotationOfResultTensor:]
  -[ARSISemanticSegmentationTechnique _startLoadingMLModelSignpost]
  -[ARSISemanticSegmentationTechnique _endLoadingMLModelSignpost]
  -[ARSISemanticSegmentationTechnique _startMLProcessingSignpostWithTimestamp:]
  -[ARSISemanticSegmentationTechnique _endMLProcessingSignpostWithTimestamp:]
  -[ARSISemanticSegmentationTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[ARSISemanticSegmentationTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[ARSISemanticSegmentationTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[ARSISemanticSegmentationTechnique _endMLCreateResultSignpostWithTimestamp:]
  -[ARSISemanticSegmentationTechnique changeEspressoConfig:]
  -[ARSISemanticSegmentationTechnique createResultDataFromOutputSegmentation:outputConfidence:outputNormalize:outputUncertainty:inputImageData:originalData:rotationNeeded:regionOfInterest:]
  -[ARSISemanticSegmentationTechnique scaleSegmentationPixelOutputBuffer:confidencePixelOutputBuffer:normalPixelOutputBuffer:targetResolution:]
  -[ARSISemanticSegmentationTechnique supportsNormals]
  -[ARSISemanticSegmentationTechnique _captureMLRunNetworkInputImageData:cameraType:imageWidth:imageHeight:]
  -[ARSISemanticSegmentationTechnique _mapUIDeviceOrientation:]
  -[ARSISemanticSegmentationTechnique _rotateImageData:withRotationTechnique:rotationNeeded:]
  -[ARSISemanticSegmentationTechnique shouldUseSynchronizedUltraWide]
  -[ARSISemanticSegmentationTechnique setShouldUseSynchronizedUltraWide:]
  -[ARSISemanticSegmentationTechnique supportsUncertainty]
  -[ARSISemanticSegmentationTechnique setSupportsUncertainty:]


ARPlaneExtent : NSObject <NSSecureCoding>
 @property  float rotationOnYAxis
 @property  float width
 @property  float height

  // class methods
  +[ARPlaneExtent supportsSecureCoding]

  // instance methods
  -[ARPlaneExtent width]
  -[ARPlaneExtent encodeWithCoder:]
  -[ARPlaneExtent height]
  -[ARPlaneExtent setWidth:]
  -[ARPlaneExtent copyWithZone:]
  -[ARPlaneExtent setHeight:]
  -[ARPlaneExtent isEqual:]
  -[ARPlaneExtent init]
  -[ARPlaneExtent initWithCoder:]
  -[ARPlaneExtent rotationOnYAxis]
  -[ARPlaneExtent setRotationOnYAxis:]


ARPlaneAnchor : ARAnchor <NSObject>
 @property  void center
 @property  void extent
 @property  ARPlaneExtent *planeExtent
 @property  ARPlaneGeometry *geometry
 @property  ARPatchGrid *gridExtent
 @property  float uncertaintyAlongNormal
 @property  long long worldAlignmentRotation
 @property  long long classificationStatus
 @property  long long classification
 @property  NSDictionary *possibleClassifications
 @property  NSString *classificationLabel
 @property  long long alignment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARPlaneAnchor supportsSecureCoding]
  +[ARPlaneAnchor isClassificationSupported]

  // instance methods
  -[ARPlaneAnchor center]
  -[ARPlaneAnchor setGeometry:]
  -[ARPlaneAnchor alignment]
  -[ARPlaneAnchor geometry]
  -[ARPlaneAnchor encodeWithCoder:]
  -[ARPlaneAnchor setCenter:]
  -[ARPlaneAnchor setClassification:]
  -[ARPlaneAnchor .cxx_destruct]
  -[ARPlaneAnchor debugQuickLookObject]
  -[ARPlaneAnchor classification]
  -[ARPlaneAnchor extent]
  -[ARPlaneAnchor initWithCoder:]
  -[ARPlaneAnchor initWithAnchor:]
  -[ARPlaneAnchor area]
  -[ARPlaneAnchor setExtent:]
  -[ARPlaneAnchor classificationLabel]
  -[ARPlaneAnchor _description:]
  -[ARPlaneAnchor initWithIdentifier:transform:alignment:]
  -[ARPlaneAnchor _hitTestFromOrigin:withDirection:usingExtent:usingGeometry:]
  -[ARPlaneAnchor planeExtent]
  -[ARPlaneAnchor setPlaneExtent:]
  -[ARPlaneAnchor classificationStatus]
  -[ARPlaneAnchor setClassificationStatus:]
  -[ARPlaneAnchor gridExtent]
  -[ARPlaneAnchor setGridExtent:]
  -[ARPlaneAnchor uncertaintyAlongNormal]
  -[ARPlaneAnchor setUncertaintyAlongNormal:]
  -[ARPlaneAnchor worldAlignmentRotation]
  -[ARPlaneAnchor setWorldAlignmentRotation:]
  -[ARPlaneAnchor possibleClassifications]
  -[ARPlaneAnchor setPossibleClassifications:]
  -[ARPlaneAnchor setClassificationLabel:]


ARLightEstimationData : NSObject <ARResultData>
 @property  ARLightEstimate *lightEstimate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARLightEstimationData .cxx_destruct]
  -[ARLightEstimationData timestamp]
  -[ARLightEstimationData lightEstimate]
  -[ARLightEstimationData setLightEstimate:]


ARGPUWarper : NSObject
  // instance methods
  -[ARGPUWarper .cxx_destruct]
  -[ARGPUWarper init]
  -[ARGPUWarper warpCameraImage:withExposureOffset:withCameraIntrinsics:withCameraTransform:toPlane:withLoadAction:synchronous:]
  -[ARGPUWarper warpPlane:toPlane:withLoadAction:synchronous:]


ARMattingImageMetaData : NSObject <ARResultData>
 @property  double timestamp
 @property  ^{__CVBuffer=} downSampledImageBuffer
 @property  ^{__CVBuffer=} mattingScaleImageBuffer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARMattingImageMetaData dealloc]
  -[ARMattingImageMetaData timestamp]
  -[ARMattingImageMetaData initWithTimestamp:downSampledImageBuffer:mattingScaleImageBuffer:]
  -[ARMattingImageMetaData downSampledImageBuffer]
  -[ARMattingImageMetaData mattingScaleImageBuffer]


ARBVHExporter : NSObject
 @property  BOOL running

  // class methods
  +[ARBVHExporter headerByApplyingScale:]
  +[ARBVHExporter liftedSkeletonHeaderByApplyingScale:]
  +[ARBVHExporter stickFigureHeaderByApplyingScale:]

  // instance methods
  -[ARBVHExporter running]
  -[ARBVHExporter .cxx_destruct]
  -[ARBVHExporter stop]
  -[ARBVHExporter start]
  -[ARBVHExporter initWithFilePath:type:scale:]
  -[ARBVHExporter appendBodyAnchor:]


ARObjectAnchor : ARAnchor
 @property  ARReferenceObject *referenceObject

  // class methods
  +[ARObjectAnchor supportsSecureCoding]

  // instance methods
  -[ARObjectAnchor encodeWithCoder:]
  -[ARObjectAnchor .cxx_destruct]
  -[ARObjectAnchor name]
  -[ARObjectAnchor initWithCoder:]
  -[ARObjectAnchor initWithAnchor:]
  -[ARObjectAnchor referenceObject]
  -[ARObjectAnchor initWithReferenceObject:transform:]


ARFaceData : NSObject <NSSecureCoding>
 @property  NSArray *detectedFaces
 @property  NSDictionary *faceMeshPayload
 @property  BOOL mirrored

  // class methods
  +[ARFaceData supportsSecureCoding]

  // instance methods
  -[ARFaceData isMirrored]
  -[ARFaceData encodeWithCoder:]
  -[ARFaceData setMirrored:]
  -[ARFaceData .cxx_destruct]
  -[ARFaceData isEqual:]
  -[ARFaceData init]
  -[ARFaceData initWithCoder:]
  -[ARFaceData setDetectedFaces:]
  -[ARFaceData detectedFaces]
  -[ARFaceData initWithMetadataObjects:mirroredVideoInput:stripDetectionData:]
  -[ARFaceData faceMeshPayload]
  -[ARFaceData setFaceMeshPayload:]


ARWorldMap : NSObject <NSCopying, NSSecureCoding>
 @property  long long version
 @property  NSData *trackingData
 @property  NSData *surfaceData
 @property  {?=[4]} referenceOriginTransform
 @property  void center
 @property  void extent
 @property  NSArray *anchors
 @property  ARPointCloud *rawFeaturePoints

  // class methods
  +[ARWorldMap supportsSecureCoding]
  +[ARWorldMap featurePointsForTrackingData:referenceOriginTransform:]
  +[ARWorldMap boundsForTrackingData:]
  +[ARWorldMap keyframesForTrackingData:withFeaturePoints:referenceOriginTransform:]

  // instance methods
  -[ARWorldMap center]
  -[ARWorldMap encodeWithCoder:]
  -[ARWorldMap .cxx_destruct]
  -[ARWorldMap version]
  -[ARWorldMap copyWithZone:]
  -[ARWorldMap extent]
  -[ARWorldMap isEqual:]
  -[ARWorldMap initWithCoder:]
  -[ARWorldMap anchors]
  -[ARWorldMap setAnchors:]
  -[ARWorldMap trackingData]
  -[ARWorldMap referenceOriginTransform]
  -[ARWorldMap rawFeaturePoints]
  -[ARWorldMap initWithTrackingData:referenceOriginTransform:]
  -[ARWorldMap extractReferenceObjectWithTransform:center:extent:error:]
  -[ARWorldMap surfaceData]
  -[ARWorldMap setSurfaceData:]


ARGeoAnchor : ARAnchor <ARDaemonSecureCoding, ARTrackable>
 @property  BOOL isAltitudeAvailable
 @property  BOOL isAltitudeLookupInProgress
 @property  double undulation
 @property  BOOL isTracked
 @property  void locationLLA
 @property  void locationECEF
 @property  {?=[4]} ecefFromAnchor
 @property  {CLLocationCoordinate2D=dd} coordinate
 @property  double altitude
 @property  long long altitudeSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARGeoAnchor supportsSecureCoding]

  // instance methods
  -[ARGeoAnchor altitude]
  -[ARGeoAnchor initWithCoordinate:]
  -[ARGeoAnchor coordinate]
  -[ARGeoAnchor encodeWithCoder:]
  -[ARGeoAnchor undulation]
  -[ARGeoAnchor initWithCoder:]
  -[ARGeoAnchor initWithAnchor:]
  -[ARGeoAnchor isTracked]
  -[ARGeoAnchor setIsTracked:]
  -[ARGeoAnchor initWithCoordinate:altitude:]
  -[ARGeoAnchor initWithName:coordinate:]
  -[ARGeoAnchor initWithName:coordinate:altitude:]
  -[ARGeoAnchor initWithCoordinate:altitude:altitudeSource:isAltitudeAvailable:undulation:]
  -[ARGeoAnchor altitudeSource]
  -[ARGeoAnchor isAltitudeAvailable]
  -[ARGeoAnchor isAltitudeLookupInProgress]
  -[ARGeoAnchor setIsAltitudeLookupInProgress:]
  -[ARGeoAnchor locationLLA]
  -[ARGeoAnchor locationECEF]
  -[ARGeoAnchor ecefFromAnchor]


ARWorldAlignmentTechnique : ARTechnique
 @property  long long alignment
 @property  long long cameraPosition
 @property  CMMotionManager *motionManager

  // instance methods
  -[ARWorldAlignmentTechnique isBusy]
  -[ARWorldAlignmentTechnique initWithAlignment:]
  -[ARWorldAlignmentTechnique alignment]
  -[ARWorldAlignmentTechnique cameraPosition]
  -[ARWorldAlignmentTechnique .cxx_destruct]
  -[ARWorldAlignmentTechnique processData:]
  -[ARWorldAlignmentTechnique _fullDescription]
  -[ARWorldAlignmentTechnique isEqual:]
  -[ARWorldAlignmentTechnique motionManager]
  -[ARWorldAlignmentTechnique requestResultDataAtTimestamp:context:]
  -[ARWorldAlignmentTechnique resultDataClasses]
  -[ARWorldAlignmentTechnique optionalSensorDataTypes]
  -[ARWorldAlignmentTechnique predictedResultDataAtTimestamp:context:]
  -[ARWorldAlignmentTechnique initWithAlignment:cameraPosition:]
  -[ARWorldAlignmentTechnique _referenceDeviceOrientation:]
  -[ARWorldAlignmentTechnique _trackingAlignmentAngleForPoseData:deviceOrientation:]
  -[ARWorldAlignmentTechnique _referenceTrackingAlignmentWithPoseData:deviceOrientation:]
  -[ARWorldAlignmentTechnique _updateHeadingAlignmentWithPoseData:deviceOrientation:timestamp:]
  -[ARWorldAlignmentTechnique _deviceOrientationPoseDataFromDeviceOrientation:]
  -[ARWorldAlignmentTechnique _handleTrackingStateChanges:initialized:relocalized:]
  -[ARWorldAlignmentTechnique setMotionManager:]


ARCameraAlignmentData : NSObject <ARResultData, NSSecureCoding>
 @property  double timestamp
 @property  {?=[4]} cameraTransform
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARCameraAlignmentData supportsSecureCoding]

  // instance methods
  -[ARCameraAlignmentData setTimestamp:]
  -[ARCameraAlignmentData encodeWithCoder:]
  -[ARCameraAlignmentData timestamp]
  -[ARCameraAlignmentData isEqual:]
  -[ARCameraAlignmentData init]
  -[ARCameraAlignmentData initWithCoder:]
  -[ARCameraAlignmentData setCameraTransform:]
  -[ARCameraAlignmentData cameraTransform]


ARWorldAlignmentData : NSObject <ARResultData, NSSecureCoding>
 @property  {?=[4]} worldAlignmentTransform
 @property  unsigned long worldAlignmentModifiers
 @property  BOOL worldAlignmentReset
 @property  BOOL referenceOriginChanged
 @property  BOOL sessionShouldResumeCameraPosition
 @property  BOOL sessionShouldResumeCameraPositionAndHeading
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARWorldAlignmentData supportsSecureCoding]

  // instance methods
  -[ARWorldAlignmentData encodeWithCoder:]
  -[ARWorldAlignmentData init]
  -[ARWorldAlignmentData initWithCoder:]
  -[ARWorldAlignmentData worldAlignmentTransform]
  -[ARWorldAlignmentData worldAlignmentModifiers]
  -[ARWorldAlignmentData referenceOriginChanged]
  -[ARWorldAlignmentData setReferenceOriginChanged:]
  -[ARWorldAlignmentData setWorldAlignmentTransform:]
  -[ARWorldAlignmentData worldAlignmentReset]
  -[ARWorldAlignmentData setWorldAlignmentReset:]
  -[ARWorldAlignmentData sessionShouldResumeCameraPosition]
  -[ARWorldAlignmentData setSessionShouldResumeCameraPosition:]
  -[ARWorldAlignmentData sessionShouldResumeCameraPositionAndHeading]
  -[ARWorldAlignmentData setSessionShouldResumeCameraPositionAndHeading:]


ARGeoTrackingData : NSObject <ARResultData, ARDaemonSecureCoding>
 @property  ARLocationData *enuOrigin
 @property  {?=[4]} vioFromENU
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARGeoTrackingData supportsSecureCoding]

  // instance methods
  -[ARGeoTrackingData encodeWithCoder:]
  -[ARGeoTrackingData .cxx_destruct]
  -[ARGeoTrackingData initWithCoder:]
  -[ARGeoTrackingData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARGeoTrackingData initWithENUOrigin:vioFromENU:]
  -[ARGeoTrackingData enuOrigin]
  -[ARGeoTrackingData vioFromENU]


ARLocationEstimationData : NSObject <ARResultData, ARDaemonSecureCoding>
 @property  double heading
 @property  CLLocation *location
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARLocationEstimationData supportsSecureCoding]

  // instance methods
  -[ARLocationEstimationData heading]
  -[ARLocationEstimationData encodeWithCoder:]
  -[ARLocationEstimationData .cxx_destruct]
  -[ARLocationEstimationData location]
  -[ARLocationEstimationData initWithCoder:]
  -[ARLocationEstimationData initWithCoordinates:altitude:heading:]
  -[ARLocationEstimationData initWithLocation:heading:]


ARVLStateData : NSObject <ARDaemonSecureCoding, NSCopying, ARResultData>
 @property  double timeSinceLastLocalization
 @property  double timeSinceInitialization
 @property  ARGeoTrackingStatus *trackingStatus
 @property  double fusedReplayLocationTimestamp
 @property  CLLocation *fusedReplayLocation
 @property  double fusedReplayHeading
 @property  double fusedReplayHeadingTimestamp
 @property  BOOL hasStartedAvailabilityCheck
 @property  BOOL hasReturnedAvailabilityCheck
 @property  BOOL hasStartedLocalization
 @property  BOOL hasReturnedLocalization
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARVLStateData supportsSecureCoding]

  // instance methods
  -[ARVLStateData encodeWithCoder:]
  -[ARVLStateData .cxx_destruct]
  -[ARVLStateData copyWithZone:]
  -[ARVLStateData isEqual:]
  -[ARVLStateData initWithCoder:]
  -[ARVLStateData init:timeSinceInitialization:trackingStatus:fusedReplayLocation:fusedReplayLocationTimestamp:fusedReplayHeading:fusedReplayHeadingTimestamp:hasStartedAvailabilityCheck:hasReturnedAvailabilityCheck:hasStartedLocalization:hasReturnedLocalization:]
  -[ARVLStateData timeSinceLastLocalization]
  -[ARVLStateData timeSinceInitialization]
  -[ARVLStateData trackingStatus]
  -[ARVLStateData fusedReplayLocationTimestamp]
  -[ARVLStateData fusedReplayLocation]
  -[ARVLStateData fusedReplayHeading]
  -[ARVLStateData fusedReplayHeadingTimestamp]
  -[ARVLStateData hasStartedAvailabilityCheck]
  -[ARVLStateData hasReturnedAvailabilityCheck]
  -[ARVLStateData hasStartedLocalization]
  -[ARVLStateData hasReturnedLocalization]


ARVisualLocalizationResultData : NSObject <ARResultData, ARDaemonSecureCoding>
 @property  BOOL secure
 @property  VLLocalizationResult *localizationResult
 @property  long long errorCode
 @property  VLLocalizationDebugInfo *debugInfo
 @property  CLLocation *location
 @property  double heading
 @property  long long algorithmVersion
 @property  double undulation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARVisualLocalizationResultData supportsSecureCoding]

  // instance methods
  -[ARVisualLocalizationResultData setErrorCode:]
  -[ARVisualLocalizationResultData errorCode]
  -[ARVisualLocalizationResultData heading]
  -[ARVisualLocalizationResultData algorithmVersion]
  -[ARVisualLocalizationResultData encodeWithCoder:]
  -[ARVisualLocalizationResultData .cxx_destruct]
  -[ARVisualLocalizationResultData setLocation:]
  -[ARVisualLocalizationResultData timestamp]
  -[ARVisualLocalizationResultData debugInfo]
  -[ARVisualLocalizationResultData location]
  -[ARVisualLocalizationResultData isSecure]
  -[ARVisualLocalizationResultData undulation]
  -[ARVisualLocalizationResultData initWithCoder:]
  -[ARVisualLocalizationResultData initWithVLLocalizationResult:errorCode:debugInfo:heading:inputLocation:algorithmVersion:undulation:]
  -[ARVisualLocalizationResultData localizationResult]


ARCubemapGenerator : NSObject
  // instance methods
  -[ARCubemapGenerator .cxx_destruct]
  -[ARCubemapGenerator init]
  -[ARCubemapGenerator cubemapWithTransform:extent:lastHistogram:fromMeshes:cameraImage:cameraTransform:cameraIntrinsics:cameraExposure:cameraExposureOffset:completionHandler:]


ARRemoteSensor : NSObject <ARRemoteSensorClient, ARServerConnectionDelegate, ARSensor>
 @property  BOOL running
 @property  <ARSensorDelegate> *delegate
 @property  ARServerConnection *serverConnection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long powerUsage

  // instance methods
  -[ARRemoteSensor initWithListenerEndpoint:]
  -[ARRemoteSensor setRunning:]
  -[ARRemoteSensor setDelegate:]
  -[ARRemoteSensor delegate]
  -[ARRemoteSensor serverConnection]
  -[ARRemoteSensor dealloc]
  -[ARRemoteSensor isRunning]
  -[ARRemoteSensor .cxx_destruct]
  -[ARRemoteSensor stop]
  -[ARRemoteSensor initWithServiceName:]
  -[ARRemoteSensor start]
  -[ARRemoteSensor providedDataTypes]
  -[ARRemoteSensor initWithServerConnection:]
  -[ARRemoteSensor sensorDidFailWithError:]
  -[ARRemoteSensor sensorDidOutputSensorData:]
  -[ARRemoteSensor sensorDidPause]
  -[ARRemoteSensor sensorDidRestart]
  -[ARRemoteSensor sensorDidStart]


ARSession : NSObject <ARSensorDelegate, ARTechniqueDelegate, ARWorldTrackingTechniqueObserver>
 @property  NSUUID *identifier
 @property  unsigned long state
 @property  ARConfiguration *configurationInternal
 @property  ARParentTechnique *technique
 @property  ARParentTechnique *secondaryTechnique
 @property  NSArray *availableSensors
 @property  unsigned long runningSensors
 @property  unsigned long pausedSensors
 @property  unsigned long powerUsage
 @property  ARQATracer *tracer
 @property  ARSessionMetrics *metrics
 @property  ARDeviceOrientationData *latestDeviceOrientationData
 @property  ARLocationData *latestLocationData
 @property  ARRemoteGeoTrackingTechnique *geoTrackingTechnique
 @property  BOOL relocalizing
 @property  NSMutableDictionary *geoAnchorToAltitude
 @property  <ARSessionDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  ARFrame *currentFrame
 @property  ARConfiguration *configuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARSession forceEnvironmentTexturingTechniqueToManualMode:]
  +[ARSession _applySessionOverrides:outError:]
  +[ARSession _supportsConfiguration:]
  +[ARSession _runningSessions]
  +[ARSession initialize]
  +[ARSession _fullDescription]
  +[ARSession setRenderType:]

  // instance methods
  -[ARSession _removeObserver:]
  -[ARSession removeAnchor:]
  -[ARSession identifier]
  -[ARSession setDelegate:]
  -[ARSession setTechnique:]
  -[ARSession runWithConfiguration:]
  -[ARSession delegate]
  -[ARSession configuration]
  -[ARSession setDelegateQueue:]
  -[ARSession state]
  -[ARSession pause]
  -[ARSession dealloc]
  -[ARSession .cxx_destruct]
  -[ARSession delegateQueue]
  -[ARSession setIdentifier:]
  -[ARSession _fullDescription]
  -[ARSession metrics]
  -[ARSession addAnchor:]
  -[ARSession _addObserver:]
  -[ARSession init]
  -[ARSession technique]
  -[ARSession setState:]
  -[ARSession currentFrame]
  -[ARSession _stateQueue]
  -[ARSession predictedDeviceTransformAtTimestamp:]
  -[ARSession runWithConfiguration:options:]
  -[ARSession tracer]
  -[ARSession technique:didOutputResultData:timestamp:context:]
  -[ARSession sensor:didOutputSensorData:]
  -[ARSession setPowerUsage:]
  -[ARSession sensor:didFailWithError:]
  -[ARSession powerUsage]
  -[ARSession technique:didFailWithError:]
  -[ARSession sensorDidPause:]
  -[ARSession sensorDidRestart:]
  -[ARSession replaySensor]
  -[ARSession technique:didChangeState:]
  -[ARSession technique:didOutputCollaborationData:]
  -[ARSession raycast:]
  -[ARSession trackedRaycast:updateHandler:]
  -[ARSession querySceneReconstructionOccupancyWithPoints:callback:]
  -[ARSession wantsPredictedAnchorTracking]
  -[ARSession setWorldOrigin:]
  -[ARSession forceEnvironmentTexturingToManualMode:]
  -[ARSession getCurrentWorldMapWithCompletionHandler:]
  -[ARSession adPipelineParameters]
  -[ARSession createReferenceObjectWithTransform:center:extent:completionHandler:]
  -[ARSession _pauseWaitingForOutstandingCallbacks:]
  -[ARSession _shouldUpdateLocationSensorForFusion]
  -[ARSession originTransform]
  -[ARSession setOriginTransform:]
  -[ARSession _interruptSession]
  -[ARSession _endInterruption]
  -[ARSession _updatePowerPressureLevelWithToken:]
  -[ARSession _updateThermalState:]
  -[ARSession _updatePowerUsage]
  -[ARSession _updatePowerUsageForced:]
  -[ARSession _changePowerUsage:]
  -[ARSession _shouldSkipAnchorCreationForData:]
  -[ARSession _changePowerUsage:forced:]
  -[ARSession _prepareTechniquesQueue]
  -[ARSession _frameContextByConsumingPendingChanges]
  -[ARSession frameWithCameraImage]
  -[ARSession annotateAnchorToRaycastResults:]
  -[ARSession updateWithCollaborationData:]
  -[ARSession _getGeoAnchorAltitude:]
  -[ARSession _setGeoAnchorAltitude:pair:]
  -[ARSession _removeGeoAnchorAltitude:]
  -[ARSession getGeoLocationForPoint:completionHandler:]
  -[ARSession _getObservers]
  -[ARSession _setPrimaryTechnique:]
  -[ARSession _setPrimaryTechnique:secondaryTechnique:]
  -[ARSession setupSessionForTechniques:]
  -[ARSession setupResultRequestSyncScheduler:forTechnique:]
  -[ARSession _updateSessionWithConfiguration:options:]
  -[ARSession _updateSessionStateWithConfiguration:options:]
  -[ARSession _exposeInternalDepthData]
  -[ARSession _cameraTransformForResultData:previousFrame:]
  -[ARSession _updateOriginTransformForFrame:previousFrame:modifiers:context:]
  -[ARSession _updateFeaturePointsForFrame:previousFrame:trackingStateChanged:context:]
  -[ARSession setGeoTrackingTechnique:]
  -[ARSession _lookupAltitudeAtCoordinate:completionHandler:]
  -[ARSession _lookupAltitudeForAnchor:]
  -[ARSession _updateAnchorsForFrame:resultDatas:context:addedAnchors:updatedAnchors:removedAnchors:externalAnchors:]
  -[ARSession setAvailableSensors:]
  -[ARSession _replaceOrAddSensor:]
  -[ARSession captureHighResolutionFrameWithCompletion:]
  -[ARSession captureHighResolutionFrameWithPhotoSettings:completion:]
  -[ARSession _updateSensorsWithConfiguration:]
  -[ARSession _imageSensorForConfiguration:existingSensor:]
  -[ARSession _startSensorsWithRequiredDataTypes:optionalDataTypes:]
  -[ARSession _configureSensorsForRecording]
  -[ARSession _stopSensorsWithDataTypes:keepingDataTypes:]
  -[ARSession _stopAllSensorsWaitingForOutstandingCallbacks:]
  -[ARSession isPrimaryImageData:]
  -[ARSession _sessionWillRunWithConfiguration:]
  -[ARSession _sessionRequestedRunWithConfiguration:options:]
  -[ARSession _sessionDidUpdateFrame:]
  -[ARSession _sessionDidCaptureHighResolutionFrame:error:]
  -[ARSession _sessionCameraDidChangeTrackingState:]
  -[ARSession _sessionDidFailWithError:]
  -[ARSession _sessionDidAddAnchors:]
  -[ARSession _sessionDidUpdateAnchors:]
  -[ARSession _sessionDidRemoveAnchors:]
  -[ARSession _sessionDidUpdateExternalAnchors:]
  -[ARSession _sessionShouldAttemptRelocalization]
  -[ARSession _sessionDidOutputAudioData:]
  -[ARSession _sessionDidOutputCollaborationData:]
  -[ARSession _sessionDidChangeGeoTrackingStatus:]
  -[ARSession _sessionDidUpdateSpatialMappingPointClouds:]
  -[ARSession is6DofFaceTracking]
  -[ARSession isUserFaceTracking]
  -[ARSession _saveGraphFileInFileName:]
  -[ARSession secondaryTechnique]
  -[ARSession setSecondaryTechnique:]
  -[ARSession configurationInternal]
  -[ARSession setConfigurationInternal:]
  -[ARSession availableSensors]
  -[ARSession runningSensors]
  -[ARSession setRunningSensors:]
  -[ARSession pausedSensors]
  -[ARSession setPausedSensors:]
  -[ARSession setTracer:]
  -[ARSession latestDeviceOrientationData]
  -[ARSession setLatestDeviceOrientationData:]
  -[ARSession latestLocationData]
  -[ARSession setLatestLocationData:]
  -[ARSession geoTrackingTechnique]
  -[ARSession relocalizing]
  -[ARSession setRelocalizing:]
  -[ARSession geoAnchorToAltitude]
  -[ARSession setGeoAnchorToAltitude:]


ARBodyTrackingConfiguration : ARConfiguration
 @property  ARImageSensorSettings *imageSensorSettingsForUltraWide
 @property  BOOL ignoreAppClipCodeURLLimitation
 @property  BOOL alwaysUsePrimaryCameraForTracking
 @property  BOOL lowQosSchedulingEnabled
 @property  BOOL autoFocusEnabled
 @property  ARWorldMap *initialWorldMap
 @property  long long environmentTexturing
 @property  BOOL wantsHDREnvironmentTextures
 @property  unsigned long planeDetection
 @property  NSSet *detectionImages
 @property  BOOL automaticImageScaleEstimationEnabled
 @property  BOOL automaticSkeletonScaleEstimationEnabled
 @property  long long maximumNumberOfTrackedImages
 @property  BOOL appClipCodeTrackingEnabled

  // class methods
  +[ARBodyTrackingConfiguration new]
  +[ARBodyTrackingConfiguration supportedVideoFormats]
  +[ARBodyTrackingConfiguration supportedVideoFormatsForUltraWide]
  +[ARBodyTrackingConfiguration recommendedVideoFormatForHighResolutionFrameCapturing]
  +[ARBodyTrackingConfiguration supportsFrameSemantics:]
  +[ARBodyTrackingConfiguration recommendedVideoFormatFor4KResolution]
  +[ARBodyTrackingConfiguration isSupported]
  +[ARBodyTrackingConfiguration supportsAppClipCodeTracking]
  +[ARBodyTrackingConfiguration _querySupportedVideoFormatsForUltraWide]
  +[ARBodyTrackingConfiguration supportsUserFaceTracking]

  // instance methods
  -[ARBodyTrackingConfiguration .cxx_destruct]
  -[ARBodyTrackingConfiguration copyWithZone:]
  -[ARBodyTrackingConfiguration isEqual:]
  -[ARBodyTrackingConfiguration init]
  -[ARBodyTrackingConfiguration setVideoFormat:]
  -[ARBodyTrackingConfiguration setEnvironmentTexturing:]
  -[ARBodyTrackingConfiguration setPlaneDetection:]
  -[ARBodyTrackingConfiguration initialWorldMap]
  -[ARBodyTrackingConfiguration wantsHDREnvironmentTextures]
  -[ARBodyTrackingConfiguration createTechniques:]
  -[ARBodyTrackingConfiguration parentImageSensorSettings]
  -[ARBodyTrackingConfiguration imageSensorSettings]
  -[ARBodyTrackingConfiguration shouldUseUltraWide]
  -[ARBodyTrackingConfiguration imageSensorSettingsForUltraWide]
  -[ARBodyTrackingConfiguration setInitialWorldMap:]
  -[ARBodyTrackingConfiguration setLowQosSchedulingEnabled:]
  -[ARBodyTrackingConfiguration planeDetection]
  -[ARBodyTrackingConfiguration alwaysUsePrimaryCameraForTracking]
  -[ARBodyTrackingConfiguration setAlwaysUsePrimaryCameraForTracking:]
  -[ARBodyTrackingConfiguration shouldUseJasper]
  -[ARBodyTrackingConfiguration setMaximumNumberOfTrackedImages:]
  -[ARBodyTrackingConfiguration maximumNumberOfTrackedImages]
  -[ARBodyTrackingConfiguration appClipCodeTrackingEnabled]
  -[ARBodyTrackingConfiguration shouldEnableVisionDataForImageSensorSettings:]
  -[ARBodyTrackingConfiguration setDetectionImages:]
  -[ARBodyTrackingConfiguration _trackingOptions]
  -[ARBodyTrackingConfiguration environmentTexturing]
  -[ARBodyTrackingConfiguration setWantsHDREnvironmentTextures:]
  -[ARBodyTrackingConfiguration detectionImages]
  -[ARBodyTrackingConfiguration automaticImageScaleEstimationEnabled]
  -[ARBodyTrackingConfiguration setAutomaticImageScaleEstimationEnabled:]
  -[ARBodyTrackingConfiguration setAppClipCodeTrackingEnabled:]
  -[ARBodyTrackingConfiguration isLowQosSchedulingEnabled]
  -[ARBodyTrackingConfiguration ignoreAppClipCodeURLLimitation]
  -[ARBodyTrackingConfiguration setIgnoreAppClipCodeURLLimitation:]
  -[ARBodyTrackingConfiguration imageSensorSettingsForUserFaceTracking]
  -[ARBodyTrackingConfiguration automaticSkeletonScaleEstimationEnabled]
  -[ARBodyTrackingConfiguration setAutomaticSkeletonScaleEstimationEnabled:]


ARQATracer : NSObject <ARInternalSessionObserver, ARReplaySensorDelegate>
 @property  NSString *traceOutputFilePath
 @property  BOOL recordScreen
 @property  id screenRecorder
 @property  {CGPoint=dd} offset
 @property  BOOL forceQuitApp
 @property  NSMutableDictionary *additionalResults
 @property  <ARQATracerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARQATracer isEnabled]
  +[ARQATracer traceOutputDirectory]

  // instance methods
  -[ARQATracer start:]
  -[ARQATracer setDelegate:]
  -[ARQATracer delegate]
  -[ARQATracer dealloc]
  -[ARQATracer .cxx_destruct]
  -[ARQATracer stop]
  -[ARQATracer session:didChangeState:]
  -[ARQATracer offset]
  -[ARQATracer session:didUpdateFrame:]
  -[ARQATracer setOffset:]
  -[ARQATracer init]
  -[ARQATracer additionalResults]
  -[ARQATracer replaySensorDidFinishReplayingData]
  -[ARQATracer traceRaycastQuery:]
  -[ARQATracer traceRaycastResults:]
  -[ARQATracer trace:forKey:]
  -[ARQATracer receiveDefaults]
  -[ARQATracer writeJSONObjectToStream:prefix:]
  -[ARQATracer writeStringToOutputStream:]
  -[ARQATracer flushDataBufferToFile]
  -[ARQATracer update:session:]
  -[ARQATracer isSemanticSegmentationDataAvailableForSession:]
  -[ARQATracer _shouldDumpSemanticData]
  -[ARQATracer _createRecordablePixelBufferFromSegmentationBuffer:]
  -[ARQATracer _createRecordablePixelBufferFromSemanticsBuffer:]
  -[ARQATracer traceOutputFilePath]
  -[ARQATracer setTraceOutputFilePath:]
  -[ARQATracer recordScreen]
  -[ARQATracer setRecordScreen:]
  -[ARQATracer screenRecorder]
  -[ARQATracer setScreenRecorder:]
  -[ARQATracer forceQuitApp]
  -[ARQATracer setForceQuitApp:]
  -[ARQATracer setAdditionalResults:]


ARDisplayLink : NSObject
 @property  long long preferredFramesPerSecond
 @property  double vsyncOffset
 @property  ARRunLoop *runloop

  // instance methods
  -[ARDisplayLink preferredFramesPerSecond]
  -[ARDisplayLink runloop]
  -[ARDisplayLink setPreferredFramesPerSecond:]
  -[ARDisplayLink dealloc]
  -[ARDisplayLink .cxx_destruct]
  -[ARDisplayLink invalidate]
  -[ARDisplayLink init]
  -[ARDisplayLink vsyncOffset]
  -[ARDisplayLink setVsyncOffset:]
  -[ARDisplayLink initWithPreferredFramesPerSecond:callback:]
  -[ARDisplayLink _recomputeActualVsyncOffsetWithVsyncOffset:preferredFramesPerSecond:]
  -[ARDisplayLink displayLinkCallback]


_ARDisplayLinkHelper : NSObject
  // instance methods
  -[_ARDisplayLinkHelper .cxx_destruct]
  -[_ARDisplayLinkHelper callback:]
  -[_ARDisplayLinkHelper initWithDisplayLink:]


ARDaemonServiceListener : NSObject <NSXPCListenerDelegate>
 @property  <ARDaemonServiceListenerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARDaemonServiceListener delegate]
  -[ARDaemonServiceListener .cxx_destruct]
  -[ARDaemonServiceListener initWithDelegate:]
  -[ARDaemonServiceListener listener:shouldAcceptNewConnection:]
  -[ARDaemonServiceListener initWithDelegate:enableAnonymousListeners:]
  -[ARDaemonServiceListener listenerForServiceNamed:]
  -[ARDaemonServiceListener addServiceWithQueueByName:serviceClass:]
  -[ARDaemonServiceListener addServiceByName:serviceClass:]
  -[ARDaemonServiceListener createService:]


ARGeoTrackingTechnique : ARTechnique <ARGeoTrackingTechniqueProtocol>
 @property  BOOL VLPoseEstimationExecuting
 @property  VLTraceRecorder *VLTraceRecorder
 @property  CLSimulationManager *locationSimulationManager
 @property  double visualLocalizationCallInterval
 @property  double posteriorVisualLocalizationCallInterval
 @property  double visualLocalizationCallIntervalTimeThreshold
 @property  BOOL visualLocalizationUpdatesRequested
 @property  unsigned long supportEnablementOptions
 @property  <ARTechniqueDelegate> *delegate
 @property  unsigned long powerUsage
 @property  double bonusLatency
 @property  NSNumber *traceKey
 @property  NSArray *splitTechniques
 @property  <ARTechniqueForwardingStrategy> *splitTechniqueFowardingStrategy

  // class methods
  +[ARGeoTrackingTechnique isSupported]
  +[ARGeoTrackingTechnique isSupportedWithOptions:]
  +[ARGeoTrackingTechnique producesResultDataForAnchorOfClass:]
  +[ARGeoTrackingTechnique getFailureReasonFromVLError:]
  +[ARGeoTrackingTechnique getHeadingForEnuFromCam:]
  +[ARGeoTrackingTechnique isCameraUp:]

  // instance methods
  -[ARGeoTrackingTechnique initWithAuditToken:]
  -[ARGeoTrackingTechnique dealloc]
  -[ARGeoTrackingTechnique .cxx_destruct]
  -[ARGeoTrackingTechnique processData:]
  -[ARGeoTrackingTechnique init]
  -[ARGeoTrackingTechnique setSupportEnablementOptions:]
  -[ARGeoTrackingTechnique setVisualLocalizationCallInterval:]
  -[ARGeoTrackingTechnique prepare:]
  -[ARGeoTrackingTechnique requestResultDataAtTimestamp:context:]
  -[ARGeoTrackingTechnique resultDataClasses]
  -[ARGeoTrackingTechnique requiredSensorDataTypes]
  -[ARGeoTrackingTechnique reconfigurableFrom:]
  -[ARGeoTrackingTechnique reconfigureFrom:]
  -[ARGeoTrackingTechnique captureBehavior]
  -[ARGeoTrackingTechnique visualLocalizationCallInterval]
  -[ARGeoTrackingTechnique visualLocalizationUpdatesRequested]
  -[ARGeoTrackingTechnique setVisualLocalizationUpdatesRequested:]
  -[ARGeoTrackingTechnique supportEnablementOptions]
  -[ARGeoTrackingTechnique getLocationFromWorldPosition:error:]
  -[ARGeoTrackingTechnique posteriorVisualLocalizationCallInterval]
  -[ARGeoTrackingTechnique setPosteriorVisualLocalizationCallInterval:]
  -[ARGeoTrackingTechnique visualLocalizationCallIntervalTimeThreshold]
  -[ARGeoTrackingTechnique setVisualLocalizationCallIntervalTimeThreshold:]
  -[ARGeoTrackingTechnique _simulateReplayLocationUpdates:]
  -[ARGeoTrackingTechnique _setTrackingState:techniqueStateObject:]
  -[ARGeoTrackingTechnique _getHighestPriorityFailureWithTechniqueStateObject:]
  -[ARGeoTrackingTechnique _logVioTransform:withTimestamp:withSuffix:]
  -[ARGeoTrackingTechnique _estimatePose:pose:]
  -[ARGeoTrackingTechnique _callVLWithHandle:pixelBuffer:deviceLocation:heading:inputGravity:vioTransform:cameraIntrinsics:radialDistortion:exposureTargetOffset:timestamp:vlDeterminismSemaphore:completionHandler:]
  -[ARGeoTrackingTechnique _estimateEnuFromVioFromCLCM:]
  -[ARGeoTrackingTechnique _updateVLStateData:]
  -[ARGeoTrackingTechnique VLPoseEstimationExecuting]
  -[ARGeoTrackingTechnique setVLPoseEstimationExecuting:]
  -[ARGeoTrackingTechnique VLTraceRecorder]
  -[ARGeoTrackingTechnique setVLTraceRecorder:]
  -[ARGeoTrackingTechnique locationSimulationManager]
  -[ARGeoTrackingTechnique setLocationSimulationManager:]


ARArchive : NSObject
 @property  NSArray *filePaths

  // instance methods
  -[ARArchive initWithContentsOfURL:error:]
  -[ARArchive dataRepresentation]
  -[ARArchive writeToURL:error:]
  -[ARArchive initWithData:error:]
  -[ARArchive filePaths]
  -[ARArchive .cxx_destruct]
  -[ARArchive init]
  -[ARArchive addData:withFilename:extension:]
  -[ARArchive addData:withPath:]
  -[ARArchive dataForResource:withExtension:]
  -[ARArchive dataForResourceAtPath:]
  -[ARArchive _loadArchiveFromMemory:error:]
  -[ARArchive _loadArchiveFromURL:error:]
  -[ARArchive _writeToArchive:]
  -[ARArchive _createArchiveForReading]
  -[ARArchive _readDataFromArchive:]
  -[ARArchive _readDataForEntry:archive:]


ARRemoteLocationSensor : ARRemoteSensor <ARLocationSensorProtocol>
 @property  ARLocationData *currentLocation
 @property  <ARSensorDelegate> *delegate
 @property  unsigned long powerUsage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARRemoteLocationSensor new]

  // instance methods
  -[ARRemoteLocationSensor currentLocation]
  -[ARRemoteLocationSensor init]
  -[ARRemoteLocationSensor providedDataTypes]
  -[ARRemoteLocationSensor configureForReplay]
  -[ARRemoteLocationSensor lookupAltitudeAtCoordinate:completionHandler:]
  -[ARRemoteLocationSensor updateARSessionState:]
  -[ARRemoteLocationSensor updateEstimationFromVIOPose:imageData:]
  -[ARRemoteLocationSensor updateFromVisualLocalizationResult:]
  -[ARRemoteLocationSensor updateFromLocationData:]
  -[ARRemoteLocationSensor initWithServerConnection:]


ARODTResult : NSObject
 @property  unsigned long detectedObjectID
 @property  {?=[4]} visionTransform
 @property  ^v imageContext
 @property  double estimatedScaleFactor

  // instance methods
  -[ARODTResult visionTransform]
  -[ARODTResult setVisionTransform:]
  -[ARODTResult estimatedScaleFactor]
  -[ARODTResult setEstimatedScaleFactor:]
  -[ARODTResult detectedObjectID]
  -[ARODTResult setDetectedObjectID:]
  -[ARODTResult imageContext]
  -[ARODTResult setImageContext:]


ARODTHandleManager : NSObject
 @property  long long maximumNumberOfTrackedImages
 @property  BOOL continuousDetection
 @property  BOOL deterministicMode

  // class methods
  +[ARODTHandleManager actualNumberOfImagesTracked:]
  +[ARODTHandleManager suggestionInvalidImage]
  +[ARODTHandleManager suggestionInvalidFeature]
  +[ARODTHandleManager suggestionInternalError]
  +[ARODTHandleManager accumulateReferenceImageErrorsForResult:refImage:objectID:pReferenceImageMap:pFailedReferenceImageNames:pUserErrorType:]
  +[ARODTHandleManager handleAccumulatedErrorType:failedReferenceImageNames:]
  +[ARODTHandleManager verifyReferenceImage:]
  +[ARODTHandleManager _calibrationDataFromImageData:pCalibrationData:]

  // instance methods
  -[ARODTHandleManager dealloc]
  -[ARODTHandleManager .cxx_destruct]
  -[ARODTHandleManager isEqual:]
  -[ARODTHandleManager init]
  -[ARODTHandleManager deterministicMode]
  -[ARODTHandleManager maximumNumberOfTrackedImages]
  -[ARODTHandleManager continuousDetection]
  -[ARODTHandleManager initWithMaximumNumberOfTrackedImages:]
  -[ARODTHandleManager initWithMaximumNumberOfTrackedImages:continuousDetection:deterministicMode:]
  -[ARODTHandleManager initWithDeterministicMode:]
  -[ARODTHandleManager initWithRegionProposalModelAndDeterministicMode:]
  -[ARODTHandleManager addReferenceImage:tracking:pObjectID:]
  -[ARODTHandleManager waitForAllObjectsAddToFinish]
  -[ARODTHandleManager addReferenceObject:tracking:pObjectID:]
  -[ARODTHandleManager detectReferenceObjectsForImageData:worldTrackingPose:imageContext:pResultArray:]
  -[ARODTHandleManager trackPlanarObjectAndEstimateScaleForImageData:worldTrackingPose:imageContext:timeBudget:pResultArray:]
  -[ARODTHandleManager trackPlanarObjectForImageData:imageContext:timeBudget:pResultArray:]
  -[ARODTHandleManager predictPlanarObjectsAtTimestamp:worldTrackingPose:timeBudget:pResultArray:]
  -[ARODTHandleManager updatePowerUsage:]
  -[ARODTHandleManager releaseODTHandle]


ARMLDepthData : NSObject <ARResultData>
 @property  double timestamp
 @property  ^{__CVBuffer=} depthBuffer
 @property  {CGSize=dd} depthBufferSize
 @property  long long source
 @property  ^{__CVBuffer=} confidenceBuffer
 @property  ^{__CVBuffer=} confidenceMap
 @property  ^{__CVBuffer=} singleFrameDepthBuffer
 @property  ^{__CVBuffer=} singleFrameConfidenceBuffer
 @property  ^{__CVBuffer=} normalsBuffer
 @property  ARImageData *sourceImageData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARMLDepthData source]
  -[ARMLDepthData dealloc]
  -[ARMLDepthData .cxx_destruct]
  -[ARMLDepthData timestamp]
  -[ARMLDepthData confidenceMap]
  -[ARMLDepthData setConfidenceMap:]
  -[ARMLDepthData initWithTimestamp:depthBuffer:source:]
  -[ARMLDepthData initWithTimestamp:depthBuffer:confidenceBuffer:source:]
  -[ARMLDepthData singleFrameDepthBuffer]
  -[ARMLDepthData setSingleFrameDepthBuffer:]
  -[ARMLDepthData singleFrameConfidenceBuffer]
  -[ARMLDepthData setSingleFrameConfidenceBuffer:]
  -[ARMLDepthData setNormalsBuffer:]
  -[ARMLDepthData depthBufferSize]
  -[ARMLDepthData depthBuffer]
  -[ARMLDepthData confidenceBuffer]
  -[ARMLDepthData normalsBuffer]
  -[ARMLDepthData sourceImageData]
  -[ARMLDepthData setSourceImageData:]


ARFilteredMLDepthData : ARMLDepthData

ARPlaceholderMLDepthData : ARMLDepthData

ARFaceLightEstimationTechnique : ARTechnique
  // class methods
  +[ARFaceLightEstimationTechnique _computeShSmoothingAlpha:]
  +[ARFaceLightEstimationTechnique _transformFaceTrackingData:]

  // instance methods
  -[ARFaceLightEstimationTechnique .cxx_construct]
  -[ARFaceLightEstimationTechnique dealloc]
  -[ARFaceLightEstimationTechnique .cxx_destruct]
  -[ARFaceLightEstimationTechnique processData:]
  -[ARFaceLightEstimationTechnique init]
  -[ARFaceLightEstimationTechnique requestResultDataAtTimestamp:context:]
  -[ARFaceLightEstimationTechnique requiredSensorDataTypes]
  -[ARFaceLightEstimationTechnique _processFaceDataInBackground:pixelBuffer:lightIntensity:timestamp:]


ARLocationData : NSObject <ARDictionaryCoding, ARMetadataWrapperCoding, ARSensorData, ARDaemonSecureCoding>
 @property  CLLocation *location
 @property  BOOL secure
 @property  double undulation
 @property  void locationLLA
 @property  void locationECEF
 @property  {?=[4]} ecefFromlocation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double timestamp

  // class methods
  +[ARLocationData supportsSecureCoding]
  +[ARLocationData grabNextFromReader:timestamp:]
  +[ARLocationData isAltitudeValid:]

  // instance methods
  -[ARLocationData initWithLocation:]
  -[ARLocationData setTimestamp:]
  -[ARLocationData encodeWithCoder:]
  -[ARLocationData initWithDictionary:]
  -[ARLocationData .cxx_destruct]
  -[ARLocationData setLocation:]
  -[ARLocationData copyWithZone:]
  -[ARLocationData timestamp]
  -[ARLocationData location]
  -[ARLocationData isSecure]
  -[ARLocationData isEqual:]
  -[ARLocationData undulation]
  -[ARLocationData initWithCoder:]
  -[ARLocationData encodeToMetadataWrapper]
  -[ARLocationData initWithMetadataWrapper:]
  -[ARLocationData appendToWriter:]
  -[ARLocationData encodeToDictionary]
  -[ARLocationData locationLLA]
  -[ARLocationData locationECEF]
  -[ARLocationData initWithLocation:timestamp:secure:]
  -[ARLocationData isUndulationValid]
  -[ARLocationData isAltitudeValid]
  -[ARLocationData enuFromLocation:]
  -[ARLocationData ecefFromlocation]


ARTechniqueGatherContext : NSObject <NSSecureCoding, ARResultDataContext>
 @property  id parentContext
 @property  NSArray *gatheredData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARTechniqueGatherContext supportsSecureCoding]

  // instance methods
  -[ARTechniqueGatherContext encodeWithCoder:]
  -[ARTechniqueGatherContext cameraPosition]
  -[ARTechniqueGatherContext .cxx_destruct]
  -[ARTechniqueGatherContext imageData]
  -[ARTechniqueGatherContext anchorsToAdd]
  -[ARTechniqueGatherContext initWithCoder:]
  -[ARTechniqueGatherContext parentContext]
  -[ARTechniqueGatherContext resultDataOfClass:]
  -[ARTechniqueGatherContext anchorsToRemove]
  -[ARTechniqueGatherContext initWithParentContext:]
  -[ARTechniqueGatherContext gatheredData]
  -[ARTechniqueGatherContext captureGatheredData]


ARTechniqueSequentialGatherContext : ARTechniqueGatherContext <ARDaemonSecureCoding>
  // class methods
  +[ARTechniqueSequentialGatherContext supportsSecureCoding]

  // instance methods
  -[ARTechniqueSequentialGatherContext encodeWithCoder:]
  -[ARTechniqueSequentialGatherContext .cxx_destruct]
  -[ARTechniqueSequentialGatherContext initWithCoder:]
  -[ARTechniqueSequentialGatherContext initWithParentContext:]
  -[ARTechniqueSequentialGatherContext gatheredData]
  -[ARTechniqueSequentialGatherContext addResultData:]
  -[ARTechniqueSequentialGatherContext mergeResultsOfContext:resultFilterBlock:]


ARTechniqueParallelGatherContext : ARTechniqueGatherContext
 @property  BOOL requiredTimeIntervalComplete
 @property  unsigned long techniqueCount

  // instance methods
  -[ARTechniqueParallelGatherContext .cxx_destruct]
  -[ARTechniqueParallelGatherContext gatheredData]
  -[ARTechniqueParallelGatherContext captureGatheredData]
  -[ARTechniqueParallelGatherContext initWithParentContext:previousContext:requiredTechniqueIndices:deterministicTechniqueIndices:techniques:]
  -[ARTechniqueParallelGatherContext indexForTechnique:]
  -[ARTechniqueParallelGatherContext deterministicResultsCaptured]
  -[ARTechniqueParallelGatherContext _allGatheredDataByTechniqueIndex]
  -[ARTechniqueParallelGatherContext addResultData:forTechniqueAtIndex:]
  -[ARTechniqueParallelGatherContext lateResultDataForTechniqueAtIndex:]
  -[ARTechniqueParallelGatherContext requiredTimeIntervalComplete]
  -[ARTechniqueParallelGatherContext setRequiredTimeIntervalComplete:]
  -[ARTechniqueParallelGatherContext techniqueCount]


ARPlaneEstimationTechnique : ARTechnique <ARWorldTrackingTechniqueObserver>
 @property  ARWorldTrackingTechnique *worldTrackingTechnique
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARPlaneEstimationTechnique detectPlanes:withFrame:]
  +[ARPlaneEstimationTechnique _detectPlanesWithDetector:types:camera:referenceFeaturePoints:referenceOriginTransform:]

  // instance methods
  -[ARPlaneEstimationTechnique isBusy]
  -[ARPlaneEstimationTechnique dealloc]
  -[ARPlaneEstimationTechnique .cxx_destruct]
  -[ARPlaneEstimationTechnique _fullDescription]
  -[ARPlaneEstimationTechnique isEqual:]
  -[ARPlaneEstimationTechnique requestResultDataAtTimestamp:context:]
  -[ARPlaneEstimationTechnique resultDataClasses]
  -[ARPlaneEstimationTechnique reconfigurableFrom:]
  -[ARPlaneEstimationTechnique reconfigureFrom:]
  -[ARPlaneEstimationTechnique siblingTechniquesDidChange:]
  -[ARPlaneEstimationTechnique technique:didDetectPlane:timestamp:]
  -[ARPlaneEstimationTechnique technique:didOutputSceneUnderstandingData:timestamp:]
  -[ARPlaneEstimationTechnique initWithTrackingTechnique:]
  -[ARPlaneEstimationTechnique worldTrackingTechnique]
  -[ARPlaneEstimationTechnique setWorldTrackingTechnique:]


ARHitTestRaycasting : NSObject
  // class methods
  +[ARHitTestRaycasting convertHitTestResult:resultType:origin:referenceOriginTransform:]
  +[ARHitTestRaycasting fillPointCloud:cloudFeatures:vergenceAngleCosines:cloudWorldPoints:pointsWorld:covariancesWorld:wideToJasperTransform:]
  +[ARHitTestRaycasting hitTestFromOrigin:resultType:origin:withDirection:referenceOriginTransform:]


ARFaceTrackingTechnique : ARImageBasedTechnique
 @property  BOOL isFaceTracked
 @property  long long maximumNumberOfTrackedFaces

  // class methods
  +[ARFaceTrackingTechnique isSupported]
  +[ARFaceTrackingTechnique producesResultDataForAnchorOfClass:]

  // instance methods
  -[ARFaceTrackingTechnique .cxx_destruct]
  -[ARFaceTrackingTechnique processData:]
  -[ARFaceTrackingTechnique isEqual:]
  -[ARFaceTrackingTechnique init]
  -[ARFaceTrackingTechnique resultDataClasses]
  -[ARFaceTrackingTechnique requiredSensorDataTypes]
  -[ARFaceTrackingTechnique maximumNumberOfTrackedFaces]
  -[ARFaceTrackingTechnique initWithMaximumNumberOfTrackedFaces:]
  -[ARFaceTrackingTechnique isFaceTracked]
  -[ARFaceTrackingTechnique setIsFaceTracked:]


ARReferenceObject : NSObject <NSSecureCoding>
 @property  NSUUID *identifier
 @property  long long version
 @property  NSData *trackingData
 @property  {?=[4]} referenceOriginTransform
 @property  NSSet *keyframes
 @property  NSString *name
 @property  void center
 @property  void extent
 @property  void scale
 @property  NSString *resourceGroupName
 @property  ARPointCloud *rawFeaturePoints

  // class methods
  +[ARReferenceObject supportsSecureCoding]
  +[ARReferenceObject referenceObjectsInGroupNamed:catalog:]
  +[ARReferenceObject referenceObjectsInGroupNamed:bundle:]
  +[ARReferenceObject referenceObjectsInGroupNamed:catalogName:bundle:]
  +[ARReferenceObject referenceObjectsInGroupNamed:catalogURL:]

  // instance methods
  -[ARReferenceObject identifier]
  -[ARReferenceObject center]
  -[ARReferenceObject encodeWithCoder:]
  -[ARReferenceObject .cxx_destruct]
  -[ARReferenceObject version]
  -[ARReferenceObject scale]
  -[ARReferenceObject setName:]
  -[ARReferenceObject name]
  -[ARReferenceObject extent]
  -[ARReferenceObject isEqual:]
  -[ARReferenceObject initWithCoder:]
  -[ARReferenceObject keyframes]
  -[ARReferenceObject setResourceGroupName:]
  -[ARReferenceObject resourceGroupName]
  -[ARReferenceObject trackingData]
  -[ARReferenceObject referenceOriginTransform]
  -[ARReferenceObject rawFeaturePoints]
  -[ARReferenceObject initWithTrackingData:referenceOriginTransform:]
  -[ARReferenceObject initWithArchiveData:name:error:]
  -[ARReferenceObject initWithArchiveURL:error:]
  -[ARReferenceObject initWithArchive:name:error:]
  -[ARReferenceObject exportObjectToURL:previewImage:error:]
  -[ARReferenceObject exportObjectToMemoryWithPreviewImage:error:]
  -[ARReferenceObject writeToArchiveWithPreviewImage:error:]
  -[ARReferenceObject referenceObjectByApplyingTransform:]
  -[ARReferenceObject referenceObjectByMergingObject:error:]


ARDeviceOrientationData : NSObject <ARDictionaryCoding, ARMetadataWrapperCoding, ARSensorData, ARDaemonSecureCoding, NSCopying>
 @property  CMDeviceMotion *deviceMotion
 @property  double timestamp
 @property  {?=ddddddddd} rotationMatrix
 @property  {?=[4]} rotationMatrixENU
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARDeviceOrientationData supportsSecureCoding]
  +[ARDeviceOrientationData grabNextFromReader:timestamp:]

  // instance methods
  -[ARDeviceOrientationData deviceMotion]
  -[ARDeviceOrientationData rotationMatrix]
  -[ARDeviceOrientationData setTimestamp:]
  -[ARDeviceOrientationData encodeWithCoder:]
  -[ARDeviceOrientationData initWithDictionary:]
  -[ARDeviceOrientationData .cxx_destruct]
  -[ARDeviceOrientationData copyWithZone:]
  -[ARDeviceOrientationData timestamp]
  -[ARDeviceOrientationData isEqual:]
  -[ARDeviceOrientationData init]
  -[ARDeviceOrientationData initWithCoder:]
  -[ARDeviceOrientationData setDeviceMotion:]
  -[ARDeviceOrientationData encodeToMetadataWrapper]
  -[ARDeviceOrientationData initWithMetadataWrapper:]
  -[ARDeviceOrientationData appendToWriter:]
  -[ARDeviceOrientationData encodeToDictionary]
  -[ARDeviceOrientationData rotationMatrixENU]
  -[ARDeviceOrientationData initWithTimestamp:rotationMatrix:]
  -[ARDeviceOrientationData initWithMotionData:]
  -[ARDeviceOrientationData setRotationMatrix:]


ARReplayGraphScheduler : NSObject

URLDecodingResult : NSObject
 @property  NSURL *url
 @property  long long urlDecodingStateInternal

  // instance methods
  -[URLDecodingResult setUrl:]
  -[URLDecodingResult .cxx_destruct]
  -[URLDecodingResult url]
  -[URLDecodingResult urlDecodingStateInternal]
  -[URLDecodingResult setUrlDecodingStateInternal:]


ARAppClipCodeTechnique : ARImageBasedTechnique
 @property  BOOL deterministicMode
 @property  BOOL ignoreURLLimitation

  // class methods
  +[ARAppClipCodeTechnique producesResultDataForAnchorOfClass:]
  +[ARAppClipCodeTechnique shouldRunCameraOrScannerPerformanceTestingMode]

  // instance methods
  -[ARAppClipCodeTechnique dealloc]
  -[ARAppClipCodeTechnique .cxx_destruct]
  -[ARAppClipCodeTechnique processData:]
  -[ARAppClipCodeTechnique isEqual:]
  -[ARAppClipCodeTechnique prepare:]
  -[ARAppClipCodeTechnique requiredTimeInterval]
  -[ARAppClipCodeTechnique setPowerUsage:]
  -[ARAppClipCodeTechnique captureBehavior]
  -[ARAppClipCodeTechnique deterministicMode]
  -[ARAppClipCodeTechnique initWithIgnoreURLLimitation:]
  -[ARAppClipCodeTechnique ignoreURLLimitation]


ARTechniqueService : ARDaemonService <ARRemoteTechniqueService, ARTechniqueDelegate>
 @property  <ARRemoteTechniqueClient> *clientProxy
 @property  ARTechnique *technique
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARTechniqueService serviceName]

  // instance methods
  -[ARTechniqueService initWithConnection:]
  -[ARTechniqueService interruptionHandler]
  -[ARTechniqueService setTechnique:]
  -[ARTechniqueService .cxx_destruct]
  -[ARTechniqueService processData:]
  -[ARTechniqueService invalidationHandler]
  -[ARTechniqueService technique]
  -[ARTechniqueService prepare:]
  -[ARTechniqueService requestResultDataAtTimestamp:context:]
  -[ARTechniqueService technique:didOutputResultData:timestamp:context:]
  -[ARTechniqueService initWithConnection:exportedInterface:remoteObjectInterface:]
  -[ARTechniqueService technique:didFailWithError:]
  -[ARTechniqueService processData:reply:]
  -[ARTechniqueService isActiveWithReply:]
  -[ARTechniqueService captureBehaviorWithReply:]
  -[ARTechniqueService numberOfActiveConnectionsWithReply:]
  -[ARTechniqueService requiredSensorDataTypesWithReply:]
  -[ARTechniqueService requiredTimeIntervalWithReply:]
  -[ARTechniqueService resultDataClassesWithReply:]
  -[ARTechniqueService _initCommon:]
  -[ARTechniqueService clientProxy]
  -[ARTechniqueService setClientProxy:]


ARGyroscopeData : NSObject <ARDictionaryCoding, ARMetadataWrapperCoding, ARMutableSensorData, NSSecureCoding>
 @property  double timestamp
 @property  {?=ddd} rotationRate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARGyroscopeData supportsSecureCoding]
  +[ARGyroscopeData grabNextFromReader:timestamp:]

  // instance methods
  -[ARGyroscopeData setTimestamp:]
  -[ARGyroscopeData encodeWithCoder:]
  -[ARGyroscopeData rotationRate]
  -[ARGyroscopeData initWithDictionary:]
  -[ARGyroscopeData copyWithZone:]
  -[ARGyroscopeData timestamp]
  -[ARGyroscopeData isEqual:]
  -[ARGyroscopeData initWithCoder:]
  -[ARGyroscopeData setRotationRate:]
  -[ARGyroscopeData encodeToMetadataWrapper]
  -[ARGyroscopeData initWithMetadataWrapper:]
  -[ARGyroscopeData appendToWriter:]
  -[ARGyroscopeData encodeToDictionary]
  -[ARGyroscopeData initWithGyroData:]


ARServerConnection : NSObject <NSXPCProxyCreating>
 @property  NSXPCConnection *connection
 @property  <ARServerConnectionDelegate> *delegate
 @property  NSXPCInterface *exportedInterface
 @property  id exportedObject
 @property  NSXPCInterface *remoteObjectInterface
 @property  NSXPCListenerEndpoint *listenerEndpoint

  // instance methods
  -[ARServerConnection initWithListenerEndpoint:]
  -[ARServerConnection setInvalidationHandler:]
  -[ARServerConnection listenerEndpoint]
  -[ARServerConnection setExportedObject:]
  -[ARServerConnection setListenerEndpoint:]
  -[ARServerConnection setDelegate:]
  -[ARServerConnection interruptionHandler]
  -[ARServerConnection delegate]
  -[ARServerConnection remoteObjectInterface]
  -[ARServerConnection dealloc]
  -[ARServerConnection .cxx_destruct]
  -[ARServerConnection connection]
  -[ARServerConnection setInterruptionHandler:]
  -[ARServerConnection synchronousRemoteObjectProxyWithErrorHandler:]
  -[ARServerConnection initWithServiceName:]
  -[ARServerConnection remoteObjectProxyWithErrorHandler:]
  -[ARServerConnection setRemoteObjectInterface:]
  -[ARServerConnection exportedObject]
  -[ARServerConnection invalidate]
  -[ARServerConnection invalidationHandler]
  -[ARServerConnection remoteObjectProxy]
  -[ARServerConnection exportedInterface]
  -[ARServerConnection setExportedInterface:]
  -[ARServerConnection initWithServiceName:options:]
  -[ARServerConnection initWithServiceName:options:queue:]
  -[ARServerConnection serverConnectionInterrupted]
  -[ARServerConnection serverConnectionInvalidated]


ARKeyframeList : NSObject <ARResultData>
 @property  NSSet *updatedAnchors
 @property  NSSet *removedAnchors
 @property  r^{CV3DReconKeyframeList=} keyframeList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARKeyframeList dealloc]
  -[ARKeyframeList .cxx_destruct]
  -[ARKeyframeList timestamp]
  -[ARKeyframeList setKeyframeList:updatedAnchors:removedAnchors:timestamp:]
  -[ARKeyframeList keyframeList]
  -[ARKeyframeList updatedAnchors]
  -[ARKeyframeList setUpdatedAnchors:]
  -[ARKeyframeList removedAnchors]
  -[ARKeyframeList setRemovedAnchors:]


ARDepthTechnique : ARMLImageProcessingTechnique <ARTechniqueBusyState, ARMLDepthDataSourceProvider>
 @property  ^{__CVBuffer=} opticalFlowOutputBuffer
 @property  ADJasperColorPipelineParameters *pipelineParameters
 @property  long long prioritization
 @property  BOOL isBusy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long depthDataSource

  // instance methods
  -[ARDepthTechnique dealloc]
  -[ARDepthTechnique prioritization]
  -[ARDepthTechnique .cxx_destruct]
  -[ARDepthTechnique isEqual:]
  -[ARDepthTechnique init]
  -[ARDepthTechnique pipelineParameters]
  -[ARDepthTechnique requiredTimeInterval]
  -[ARDepthTechnique resultDataClasses]
  -[ARDepthTechnique _startLoadingMLModelSignpost]
  -[ARDepthTechnique _endLoadingMLModelSignpost]
  -[ARDepthTechnique _startMLProcessingSignpostWithTimestamp:]
  -[ARDepthTechnique _endMLProcessingSignpostWithTimestamp:]
  -[ARDepthTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[ARDepthTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[ARDepthTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[ARDepthTechnique _endMLCreateResultSignpostWithTimestamp:]
  -[ARDepthTechnique _captureMLRunNetworkInputImageData:cameraType:imageWidth:imageHeight:]
  -[ARDepthTechnique bindInputBuffer:withImage:andOriginalImageData:rotationOfResultTensor:]
  -[ARDepthTechnique networkModeDidChange:toMode:]
  -[ARDepthTechnique depthDataSource]
  -[ARDepthTechnique initWithPrioritization:temporalSmoothing:]
  -[ARDepthTechnique _initLKT]
  -[ARDepthTechnique _allocateLKTBuffers]
  -[ARDepthTechnique setOpticalFlowOutputBuffer:]
  -[ARDepthTechnique _executeLKTWithFrame:]
  -[ARDepthTechnique prepareBindInputBuffer:withName:]
  -[ARDepthTechnique _updateOpticalFlowOutputBufferInBackgroundFromImageData:]
  -[ARDepthTechnique networkModesForOrientation:]
  -[ARDepthTechnique createResultDataFromTensors:numberOfOutputTensors:imageDataForNeuralNetwork:inputImageData:rotationNeeded:regionOfInterest:]
  -[ARDepthTechnique _rotatedPixelBufferImageData:]
  -[ARDepthTechnique opticalFlowOutputBuffer]


ARNeutralFaceGeometry : NSObject
  // class methods
  +[ARNeutralFaceGeometry sharedNeutralGeometry]

  // instance methods
  -[ARNeutralFaceGeometry .cxx_construct]
  -[ARNeutralFaceGeometry .cxx_destruct]
  -[ARNeutralFaceGeometry textureCoordinates]
  -[ARNeutralFaceGeometry vertexCount]
  -[ARNeutralFaceGeometry triangleCount]
  -[ARNeutralFaceGeometry vertices]
  -[ARNeutralFaceGeometry initFromCVAFaceTrackingSemantics]
  -[ARNeutralFaceGeometry textureCoordinateCount]
  -[ARNeutralFaceGeometry triangleIndices]


ARFaceGeometry : NSObject <NSSecureCoding, NSCopying>
 @property  unsigned long vertexCount
 @property  r^ vertices
 @property  unsigned long textureCoordinateCount
 @property  r^ textureCoordinates
 @property  unsigned long triangleCount
 @property  r^s triangleIndices

  // class methods
  +[ARFaceGeometry supportsSecureCoding]

  // instance methods
  -[ARFaceGeometry encodeWithCoder:]
  -[ARFaceGeometry .cxx_construct]
  -[ARFaceGeometry .cxx_destruct]
  -[ARFaceGeometry initPrivate]
  -[ARFaceGeometry textureCoordinates]
  -[ARFaceGeometry copyWithZone:]
  -[ARFaceGeometry isEqual:]
  -[ARFaceGeometry vertexCount]
  -[ARFaceGeometry initWithCoder:]
  -[ARFaceGeometry triangleCount]
  -[ARFaceGeometry vertices]
  -[ARFaceGeometry normals]
  -[ARFaceGeometry normalCount]
  -[ARFaceGeometry textureCoordinateCount]
  -[ARFaceGeometry triangleIndices]
  -[ARFaceGeometry initWithBlendShapes:]
  -[ARFaceGeometry initWithFaceTrackingData:]
  -[ARFaceGeometry initWithFaceTrackingDataProtocol:]
  -[ARFaceGeometry initWithCustomVertices:verticesCount:]
  -[ARFaceGeometry positionForLabeledFacePosition:]
  -[ARFaceGeometry normalForLabeledFacePosition:]
  -[ARFaceGeometry closestVertexIndexToLabeledFacePosition:]


ARGeoTrackingStatus : NSObject <ARDaemonSecureCoding, NSCopying, NSSecureCoding>
 @property  long long failureReasons
 @property  long long state
 @property  long long stateReason
 @property  long long accuracy

  // class methods
  +[ARGeoTrackingStatus supportsSecureCoding]
  +[ARGeoTrackingStatus initialStatus]

  // instance methods
  -[ARGeoTrackingStatus encodeWithCoder:]
  -[ARGeoTrackingStatus state]
  -[ARGeoTrackingStatus copyWithZone:]
  -[ARGeoTrackingStatus accuracy]
  -[ARGeoTrackingStatus isEqual:]
  -[ARGeoTrackingStatus setState:]
  -[ARGeoTrackingStatus initWithCoder:]
  -[ARGeoTrackingStatus stateReason]
  -[ARGeoTrackingStatus setStateReason:]
  -[ARGeoTrackingStatus initWithGeoTrackingState:accuracy:stateReason:failureReasons:]
  -[ARGeoTrackingStatus isEqualPrivate:]
  -[ARGeoTrackingStatus failureReasons]


ARDepthEstimationTechnique : ARMLImageProcessingTechnique <ARTechniqueBusyState, ARMLDepthDataSourceProvider>
 @property  BOOL isBusy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long depthDataSource

  // instance methods
  -[ARDepthEstimationTechnique dealloc]
  -[ARDepthEstimationTechnique .cxx_destruct]
  -[ARDepthEstimationTechnique _fullDescription]
  -[ARDepthEstimationTechnique init]
  -[ARDepthEstimationTechnique requiredTimeInterval]
  -[ARDepthEstimationTechnique resultDataClasses]
  -[ARDepthEstimationTechnique _startLoadingMLModelSignpost]
  -[ARDepthEstimationTechnique _endLoadingMLModelSignpost]
  -[ARDepthEstimationTechnique _startMLProcessingSignpostWithTimestamp:]
  -[ARDepthEstimationTechnique _endMLProcessingSignpostWithTimestamp:]
  -[ARDepthEstimationTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[ARDepthEstimationTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[ARDepthEstimationTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[ARDepthEstimationTechnique _endMLCreateResultSignpostWithTimestamp:]
  -[ARDepthEstimationTechnique networkModeDidChange:toMode:]
  -[ARDepthEstimationTechnique depthDataSource]
  -[ARDepthEstimationTechnique createResultDataFromTensors:numberOfOutputTensors:imageDataForNeuralNetwork:inputImageData:rotationNeeded:regionOfInterest:]
  -[ARDepthEstimationTechnique numberOfInputChannelsToExpectInNetwork]


ARBufferPopulationRegistry : NSObject
 @property  unsigned long count

  // instance methods
  -[ARBufferPopulationRegistry .cxx_destruct]
  -[ARBufferPopulationRegistry count]
  -[ARBufferPopulationRegistry init]
  -[ARBufferPopulationRegistry countWithLabel:]
  -[ARBufferPopulationRegistry labelForBufferWithSurfaceID:]
  -[ARBufferPopulationRegistry registerBufferWithSurfaceID:label:signpostType:timestamp:]
  -[ARBufferPopulationRegistry signpostTypeForLabel:]
  -[ARBufferPopulationRegistry timestampForSurfaceID:]
  -[ARBufferPopulationRegistry surfaceIDsForBuffersWithLabel:]
  -[ARBufferPopulationRegistry unregisterBufferWithSurfaceID:]


ARBufferPopulationMonitor : NSObject
 @property  unsigned long count
 @property  <ARBufferPopulationMonitorDelegate> *delegate

  // instance methods
  -[ARBufferPopulationMonitor setDelegate:]
  -[ARBufferPopulationMonitor delegate]
  -[ARBufferPopulationMonitor dealloc]
  -[ARBufferPopulationMonitor .cxx_destruct]
  -[ARBufferPopulationMonitor count]
  -[ARBufferPopulationMonitor initWithDelegate:]
  -[ARBufferPopulationMonitor init]
  -[ARBufferPopulationMonitor countWithLabel:]
  -[ARBufferPopulationMonitor trackDataBuffer:]
  -[ARBufferPopulationMonitor trackDataBuffer:withLabel:timestamp:signpostType:]
  -[ARBufferPopulationMonitor trackPixelBuffer:]
  -[ARBufferPopulationMonitor trackPixelBuffer:withLabel:timestamp:signpostType:]
  -[ARBufferPopulationMonitor trackSurface:]
  -[ARBufferPopulationMonitor emitStartSignpost:surfaceID:count:timestamp:]
  -[ARBufferPopulationMonitor emitEndSignpost:surfaceID:count:timestamp:]
  -[ARBufferPopulationMonitor trackSurface:withLabel:timestamp:signpostType:]
  -[ARBufferPopulationMonitor updateBufferPopulationRegistryWithReleasedSurfaceID:]


ARSpatialMappingResultData : NSObject <ARResultData>
 @property  NSArray *meshChunks
 @property  ^{CV3DReconMeshList=} meshList
 @property  unsigned long sceneReconstruction
 @property  double timestamp
 @property  BOOL empty
 @property  <MTLDevice> *mtlDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARSpatialMappingResultData emptyResultData]

  // instance methods
  -[ARSpatialMappingResultData setEmpty:]
  -[ARSpatialMappingResultData setTimestamp:]
  -[ARSpatialMappingResultData dealloc]
  -[ARSpatialMappingResultData .cxx_destruct]
  -[ARSpatialMappingResultData isEmpty]
  -[ARSpatialMappingResultData timestamp]
  -[ARSpatialMappingResultData mtlDevice]
  -[ARSpatialMappingResultData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARSpatialMappingResultData sceneReconstruction]
  -[ARSpatialMappingResultData setSceneReconstruction:]
  -[ARSpatialMappingResultData initWithMeshChunks:]
  -[ARSpatialMappingResultData initWithMeshList:sceneReconstruction:timestamp:]
  -[ARSpatialMappingResultData updateSemanticsFromSamplingData:]
  -[ARSpatialMappingResultData anchorsFromMeshChunksForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARSpatialMappingResultData anchorsFromMeshListForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARSpatialMappingResultData meshChunks]
  -[ARSpatialMappingResultData setMeshChunks:]
  -[ARSpatialMappingResultData meshList]
  -[ARSpatialMappingResultData setMeshList:]
  -[ARSpatialMappingResultData setMtlDevice:]


ARMeshAnchor : ARAnchor
 @property  void corner
 @property  void extent
 @property  double timestamp
 @property  double maxExtentError
 @property  {?=[4]} visionTransform
 @property  ARMeshGeometry *geometry

  // class methods
  +[ARMeshAnchor supportsSecureCoding]

  // instance methods
  -[ARMeshAnchor geometry]
  -[ARMeshAnchor encodeWithCoder:]
  -[ARMeshAnchor .cxx_destruct]
  -[ARMeshAnchor corner]
  -[ARMeshAnchor timestamp]
  -[ARMeshAnchor extent]
  -[ARMeshAnchor initWithCoder:]
  -[ARMeshAnchor initWithAnchor:]
  -[ARMeshAnchor tracingEntry]
  -[ARMeshAnchor visionTransform]
  -[ARMeshAnchor initWithGeometry:atTimestamp:identifier:referenceOriginTransform:]
  -[ARMeshAnchor initWithGeometry:atTimestamp:identifier:visionTransform:referenceOriginTransform:]
  -[ARMeshAnchor initWithGeometry:atTimestamp:identifier:]
  -[ARMeshAnchor initWithGeometry:atTimestamp:identifier:transform:]
  -[ARMeshAnchor initWithGeometry:atTimestamp:identifier:transform:voxelSize:]
  -[ARMeshAnchor maxExtentError]
  -[ARMeshAnchor setMaxExtentError:]


ARCubemapCompletion : NSObject
 @property  BOOL generateHDROutput

  // class methods
  +[ARCubemapCompletion sharedInstance]

  // instance methods
  -[ARCubemapCompletion .cxx_construct]
  -[ARCubemapCompletion dealloc]
  -[ARCubemapCompletion .cxx_destruct]
  -[ARCubemapCompletion init]
  -[ARCubemapCompletion srgbToLog:]
  -[ARCubemapCompletion completeCubemap:cameraExposure:rotationWorldFromCube:]
  -[ARCubemapCompletion completeLatLongImage:]
  -[ARCubemapCompletion toVImageBuffer:]
  -[ARCubemapCompletion toTexture:]
  -[ARCubemapCompletion grayCubemapOfSize:]
  -[ARCubemapCompletion generateSeamSmoothingTexture]
  -[ARCubemapCompletion generateHDROutput]
  -[ARCubemapCompletion setGenerateHDROutput:]


ARSIPersonDetectionTechnique : ARMLImageProcessingTechnique <ARTechniqueBusyState>
 @property  ARPersonDetectionData *latestResult
 @property  BOOL isBusy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARSIPersonDetectionTechnique dealloc]
  -[ARSIPersonDetectionTechnique .cxx_destruct]
  -[ARSIPersonDetectionTechnique init]
  -[ARSIPersonDetectionTechnique requiredTimeInterval]
  -[ARSIPersonDetectionTechnique resultDataClasses]
  -[ARSIPersonDetectionTechnique _prepareOnce:]
  -[ARSIPersonDetectionTechnique runNeuralNetworkWithImageData:originalImageData:regionOfInterest:rotationOfResultTensor:]
  -[ARSIPersonDetectionTechnique _startLoadingMLModelSignpost]
  -[ARSIPersonDetectionTechnique _endLoadingMLModelSignpost]
  -[ARSIPersonDetectionTechnique _startMLProcessingSignpostWithTimestamp:]
  -[ARSIPersonDetectionTechnique _endMLProcessingSignpostWithTimestamp:]
  -[ARSIPersonDetectionTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[ARSIPersonDetectionTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[ARSIPersonDetectionTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[ARSIPersonDetectionTechnique _endMLCreateResultSignpostWithTimestamp:]
  -[ARSIPersonDetectionTechnique changeEspressoConfig:]
  -[ARSIPersonDetectionTechnique isLoadedModelVersionCorrect:]
  -[ARSIPersonDetectionTechnique createResultDataFromAlgorithmOutput:imageDataForNeuralNetwork:inputImageData:rotationNeeded:regionOfInterest:]
  -[ARSIPersonDetectionTechnique latestResult]
  -[ARSIPersonDetectionTechnique setLatestResult:]


ARDaemonControl : NSObject <ARControlProtocol>
 @property  ARServer *server
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARDaemonControl controlProxyInterface]
  +[ARDaemonControl controlInterface]

  // instance methods
  -[ARDaemonControl initWithConnection:]
  -[ARDaemonControl interruptionHandler]
  -[ARDaemonControl .cxx_destruct]
  -[ARDaemonControl server]
  -[ARDaemonControl invalidationHandler]
  -[ARDaemonControl setServer:]
  -[ARDaemonControl getStatusWithVerboseOutput:reply:]
  -[ARDaemonControl getStatusDictionaryWithReply:]


ARMLIntermediateDownScalingResultData : NSObject <ARResultData>
 @property  double timestamp
 @property  ^{__CVBuffer=} pixelBuffer
 @property  ARImageData *originalImageData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARMLIntermediateDownScalingResultData pixelBuffer]
  -[ARMLIntermediateDownScalingResultData dealloc]
  -[ARMLIntermediateDownScalingResultData .cxx_destruct]
  -[ARMLIntermediateDownScalingResultData timestamp]
  -[ARMLIntermediateDownScalingResultData isEqual:]
  -[ARMLIntermediateDownScalingResultData originalImageData]
  -[ARMLIntermediateDownScalingResultData initWithPixelBuffer:timestamp:originalImageData:]


ARFrameContextHandler : NSObject
 @property  {?=[4]} sessionTransform
 @property  BOOL sessionTransformUpdated
 @property  NSArray *anchorsToAdd

  // instance methods
  -[ARFrameContextHandler removeAnchor:]
  -[ARFrameContextHandler sessionTransformUpdated]
  -[ARFrameContextHandler createdContextByConsumingPendingChanges]
  -[ARFrameContextHandler .cxx_destruct]
  -[ARFrameContextHandler stopTrackingAnchors:]
  -[ARFrameContextHandler sessionTransform]
  -[ARFrameContextHandler addCollaborationData:]
  -[ARFrameContextHandler setSessionTransform:]
  -[ARFrameContextHandler clearInFlightContextsReapplyingChanges]
  -[ARFrameContextHandler resetSessionTransform]
  -[ARFrameContextHandler addAnchor:]
  -[ARFrameContextHandler anchorsToAdd]
  -[ARFrameContextHandler clearAddedAnchors]
  -[ARFrameContextHandler init]
  -[ARFrameContextHandler markFrameContextProcessed:]


ARImageScalingPassDescription : NSObject
 @property  {CGSize=dd} size
 @property  unsigned int pixelBufferFormat

  // instance methods
  -[ARImageScalingPassDescription initWithSize:]
  -[ARImageScalingPassDescription size]
  -[ARImageScalingPassDescription setSize:]
  -[ARImageScalingPassDescription pixelBufferFormat]
  -[ARImageScalingPassDescription setPixelBufferFormat:]


ARImageScalePass : NSObject
 @property  unsigned int conversionPixelFormatType
 @property  {CGSize=dd} scaledSize

  // instance methods
  -[ARImageScalePass dealloc]
  -[ARImageScalePass initWithDescription:]
  -[ARImageScalePass scaledSize]
  -[ARImageScalePass setConversionPixelFormatType:]
  -[ARImageScalePass scalePixelBuffer:]
  -[ARImageScalePass conversionPixelFormatType]


ARImageScalingTechnique : ARTechnique
 @property  {CGSize=dd} scaledSize
 @property  unsigned int conversionPixelFormatType
 @property  unsigned char downscaleFactor

  // class methods
  +[ARImageScalingTechnique scalingPassDescriptionForInputSize:scaledSize:conversionPixelFormat:]

  // instance methods
  -[ARImageScalingTechnique .cxx_destruct]
  -[ARImageScalingTechnique processData:]
  -[ARImageScalingTechnique isEqual:]
  -[ARImageScalingTechnique scaledSize]
  -[ARImageScalingTechnique requiredSensorDataTypes]
  -[ARImageScalingTechnique initWithScaledSize:]
  -[ARImageScalingTechnique setConversionPixelFormatType:]
  -[ARImageScalingTechnique conversionPixelFormatType]
  -[ARImageScalingTechnique initWithDownscaleFactor:]
  -[ARImageScalingTechnique _createScalingPassesForInputSize:]
  -[ARImageScalingTechnique _applyScalingPasses:]
  -[ARImageScalingTechnique downscaleFactor]


ARMeshPrimitive : NSObject
 @property  {?=[4]} transform_world_from_primitive
 @property  <MTLBuffer> *vertexBuffer
 @property  <MTLBuffer> *uvBuffer
 @property  unsigned long nVertices
 @property  <MTLBuffer> *indexBuffer
 @property  unsigned long nIndices
 @property  <MTLTexture> *texture

  // class methods
  +[ARMeshPrimitive planeWithTransform:min:max:texture:]

  // instance methods
  -[ARMeshPrimitive texture]
  -[ARMeshPrimitive .cxx_destruct]
  -[ARMeshPrimitive indexBuffer]
  -[ARMeshPrimitive vertexBuffer]
  -[ARMeshPrimitive initAsPlaneWithTransform:min:max:texture:]
  -[ARMeshPrimitive transform_world_from_primitive]
  -[ARMeshPrimitive uvBuffer]
  -[ARMeshPrimitive nVertices]
  -[ARMeshPrimitive nIndices]


ARAudioData : NSObject <ARSensorData>
 @property  double timestamp
 @property  ^{opaqueCMSampleBuffer=} sampleBuffer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARAudioData setTimestamp:]
  -[ARAudioData dealloc]
  -[ARAudioData timestamp]
  -[ARAudioData sampleBuffer]
  -[ARAudioData initWithSampleBuffer:]


AR2DSkeletonDetectionPostProcessingTechnique : ARImageBasedTechnique
 @property  ABPK2DDetectionResult *abpkPrevious3DSkeleton

  // instance methods
  -[AR2DSkeletonDetectionPostProcessingTechnique .cxx_destruct]
  -[AR2DSkeletonDetectionPostProcessingTechnique processData:]
  -[AR2DSkeletonDetectionPostProcessingTechnique prepare:]
  -[AR2DSkeletonDetectionPostProcessingTechnique requestResultDataAtTimestamp:context:]
  -[AR2DSkeletonDetectionPostProcessingTechnique requiredTimeInterval]
  -[AR2DSkeletonDetectionPostProcessingTechnique abpkPrevious3DSkeleton]
  -[AR2DSkeletonDetectionPostProcessingTechnique _process2DSkeletonRawEspressoResultInBackground:]


ARImageAnchor : ARAnchor <ARTrackable>
 @property  BOOL detectionOnly
 @property  BOOL isTracked
 @property  ARReferenceImage *referenceImage
 @property  double estimatedScaleFactor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARImageAnchor supportsSecureCoding]

  // instance methods
  -[ARImageAnchor encodeWithCoder:]
  -[ARImageAnchor .cxx_destruct]
  -[ARImageAnchor name]
  -[ARImageAnchor initWithCoder:]
  -[ARImageAnchor initWithAnchor:]
  -[ARImageAnchor referenceImage]
  -[ARImageAnchor setDetectionOnly:]
  -[ARImageAnchor isTracked]
  -[ARImageAnchor copyWithTrackedState:]
  -[ARImageAnchor setIsTracked:]
  -[ARImageAnchor estimatedScaleFactor]
  -[ARImageAnchor setEstimatedScaleFactor:]
  -[ARImageAnchor initWithReferenceImage:transform:detectionOnly:tracked:]
  -[ARImageAnchor isDetectionOnly]


ARAppClipCodeResult : NSObject <NSCopying, NSSecureCoding>
 @property  NSURL *url
 @property  {?=[4]} codeToWorldVisionTransform
 @property  float confidence
 @property  BOOL isScaleReliable
 @property  {CGSize=dd} size
 @property  long long urlDecodingStateInternal
 @property  unsigned long urlEncodingVersion

  // class methods
  +[ARAppClipCodeResult supportsSecureCoding]

  // instance methods
  -[ARAppClipCodeResult confidence]
  -[ARAppClipCodeResult setUrl:]
  -[ARAppClipCodeResult encodeWithCoder:]
  -[ARAppClipCodeResult .cxx_destruct]
  -[ARAppClipCodeResult size]
  -[ARAppClipCodeResult copyWithZone:]
  -[ARAppClipCodeResult url]
  -[ARAppClipCodeResult setConfidence:]
  -[ARAppClipCodeResult setSize:]
  -[ARAppClipCodeResult initWithCoder:]
  -[ARAppClipCodeResult urlDecodingStateInternal]
  -[ARAppClipCodeResult setUrlDecodingStateInternal:]
  -[ARAppClipCodeResult isScaleReliable]
  -[ARAppClipCodeResult setIsScaleReliable:]
  -[ARAppClipCodeResult urlEncodingVersion]
  -[ARAppClipCodeResult setUrlEncodingVersion:]
  -[ARAppClipCodeResult codeToWorldVisionTransform]
  -[ARAppClipCodeResult setCodeToWorldVisionTransform:]


ARAppClipCodeResultData : NSObject <ARResultData, NSSecureCoding, NSCopying>
 @property  NSDictionary *trackedAppClipCodes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARAppClipCodeResultData supportsSecureCoding]

  // instance methods
  -[ARAppClipCodeResultData encodeWithCoder:]
  -[ARAppClipCodeResultData .cxx_destruct]
  -[ARAppClipCodeResultData copyWithZone:]
  -[ARAppClipCodeResultData isEqual:]
  -[ARAppClipCodeResultData initWithCoder:]
  -[ARAppClipCodeResultData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARAppClipCodeResultData trackedAppClipCodes]
  -[ARAppClipCodeResultData setTrackedAppClipCodes:]


ARServiceUpdateParameters : NSObject

ARServer : NSObject <ARDaemonServiceDataSource, ARDaemonServiceDelegate, ARDaemonServiceListenerDelegate, ARControlListenerDelegate, ARLoggingFullDescription>
 @property  NSArray *servicesBeingAdded
 @property  ARDaemonService *serviceBeingRemoved
 @property  BOOL isKeybagUnlocked
 @property  ARUserProfile *userProfile
 @property  NSString *statusString
 @property  NSDictionary *statusDictionary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARServer statusDictionary]
  -[ARServer suspend]
  -[ARServer dealloc]
  -[ARServer .cxx_destruct]
  -[ARServer resume]
  -[ARServer _fullDescription]
  -[ARServer invalidate]
  -[ARServer setServices:]
  -[ARServer statusString]
  -[ARServer userProfile]
  -[ARServer setUserProfile:]
  -[ARServer service:peerServiceOfType:]
  -[ARServer numberOfActiveConnectionsForService:]
  -[ARServer serviceDidInvalidate:]
  -[ARServer serviceDidInterrupt:]
  -[ARServer didDiscoverService:]
  -[ARServer didDiscoverControl:]
  -[ARServer initInProcess:spawnTime:sessionUUID:watchdogMonitor:executionManager:]
  -[ARServer daemonServiceForServiceNamed:]
  -[ARServer _addService:]
  -[ARServer _addServices:]
  -[ARServer listenerEndPointForServiceNamed:]
  -[ARServer _peerServicesOfService:]
  -[ARServer _updateWithServices:dryRun:parameters:error:]
  -[ARServer _updateWithServices:error:]
  -[ARServer _removeService:]
  -[ARServer _updateServicesByPID]
  -[ARServer _configureServiceForExecution:]
  -[ARServer commitServices:]
  -[ARServer updateAlgorithmConfigurationWithService:]
  -[ARServer updateAlgorithmConfigurationWithServices:]
  -[ARServer _logDaemonStatusWithType:]
  -[ARServer _setupStatusTimer]
  -[ARServer servicesBeingAdded]
  -[ARServer setServicesBeingAdded:]
  -[ARServer serviceBeingRemoved]
  -[ARServer setServiceBeingRemoved:]
  -[ARServer isKeybagUnlocked]
  -[ARServer setIsKeybagUnlocked:]


ARPlaneGeometry : NSObject <NSSecureCoding>
 @property  void center
 @property  void extent
 @property  unsigned long vertexCount
 @property  r^ vertices
 @property  unsigned long textureCoordinateCount
 @property  r^ textureCoordinates
 @property  unsigned long triangleCount
 @property  r^s triangleIndices
 @property  unsigned long boundaryVertexCount
 @property  r^ boundaryVertices

  // class methods
  +[ARPlaneGeometry supportsSecureCoding]

  // instance methods
  -[ARPlaneGeometry center]
  -[ARPlaneGeometry encodeWithCoder:]
  -[ARPlaneGeometry .cxx_construct]
  -[ARPlaneGeometry .cxx_destruct]
  -[ARPlaneGeometry textureCoordinates]
  -[ARPlaneGeometry extent]
  -[ARPlaneGeometry vertexCount]
  -[ARPlaneGeometry initWithCoder:]
  -[ARPlaneGeometry triangleCount]
  -[ARPlaneGeometry vertices]
  -[ARPlaneGeometry textureCoordinateCount]
  -[ARPlaneGeometry triangleIndices]
  -[ARPlaneGeometry initWithVertices:triangleIndices:boundaryVertexCount:center:extent:]
  -[ARPlaneGeometry initWithBoundaryVertices:center:extent:]
  -[ARPlaneGeometry boundaryVertices]
  -[ARPlaneGeometry boundaryVertexCount]


ARHitTestResult : NSObject
 @property  ARAnchor *anchor
 @property  double distance
 @property  {?=[4]} localTransform
 @property  {?=[4]} worldTransform
 @property  unsigned long type

  // instance methods
  -[ARHitTestResult anchor]
  -[ARHitTestResult distance]
  -[ARHitTestResult setAnchor:]
  -[ARHitTestResult type]
  -[ARHitTestResult .cxx_destruct]
  -[ARHitTestResult initWithType:]
  -[ARHitTestResult debugQuickLookObject]
  -[ARHitTestResult setDistance:]
  -[ARHitTestResult setLocalTransform:]
  -[ARHitTestResult localTransform]
  -[ARHitTestResult worldTransform]
  -[ARHitTestResult _description:]
  -[ARHitTestResult setWorldTransform:]


ARMeshList : NSObject <ARResultData>
 @property  NSSet *updatedAnchors
 @property  NSSet *removedAnchors
 @property  r^{CV3DReconMeshList=} meshList
 @property  NSArray *visibleMeshIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARMeshList dealloc]
  -[ARMeshList .cxx_destruct]
  -[ARMeshList timestamp]
  -[ARMeshList updatedAnchors]
  -[ARMeshList setUpdatedAnchors:]
  -[ARMeshList removedAnchors]
  -[ARMeshList setRemovedAnchors:]
  -[ARMeshList meshList]
  -[ARMeshList setMeshList:visibleMeshIdentifiers:updatedAnchors:removedAnchors:timestamp:]
  -[ARMeshList visibleMeshIdentifiers]


ARPlaneWorld : NSObject
  // class methods
  +[ARPlaneWorld findMergedPlanes::]

  // instance methods
  -[ARPlaneWorld isBusy]
  -[ARPlaneWorld .cxx_construct]
  -[ARPlaneWorld .cxx_destruct]
  -[ARPlaneWorld _fullDescription]
  -[ARPlaneWorld init]
  -[ARPlaneWorld initWithTextureSize:]
  -[ARPlaneWorld updatePlanes:withCurrentDetections:synchronous:]
  -[ARPlaneWorld updatePlanes:withCameraImage:exposureOffset:transform:intrinsics:synchronous:]
  -[ARPlaneWorld planes]


ARCollaborationStats : NSObject
 @property  unsigned long localSessionIdentifier
 @property  unsigned long mergedKeyframesCount
 @property  unsigned long remainingKeyframesCount
 @property  unsigned long remainingWeakKeyframesCount
 @property  unsigned long externalKeyframesCount
 @property  unsigned long externalWeakKeyframesCount
 @property  unsigned long anchorsCount
 @property  BOOL originAnchorMerged

  // instance methods
  -[ARCollaborationStats localSessionIdentifier]
  -[ARCollaborationStats setLocalSessionIdentifier:]
  -[ARCollaborationStats mergedKeyframesCount]
  -[ARCollaborationStats setMergedKeyframesCount:]
  -[ARCollaborationStats remainingKeyframesCount]
  -[ARCollaborationStats setRemainingKeyframesCount:]
  -[ARCollaborationStats remainingWeakKeyframesCount]
  -[ARCollaborationStats setRemainingWeakKeyframesCount:]
  -[ARCollaborationStats externalKeyframesCount]
  -[ARCollaborationStats setExternalKeyframesCount:]
  -[ARCollaborationStats externalWeakKeyframesCount]
  -[ARCollaborationStats setExternalWeakKeyframesCount:]
  -[ARCollaborationStats anchorsCount]
  -[ARCollaborationStats setAnchorsCount:]
  -[ARCollaborationStats originAnchorMerged]
  -[ARCollaborationStats setOriginAnchorMerged:]


ARWeakReference : NSProxy
 @property  id object

  // class methods
  +[ARWeakReference weakReferenceWithObject:]
  +[ARWeakReference _noOp]

  // instance methods
  -[ARWeakReference methodSignatureForSelector:]
  -[ARWeakReference initWithObject:]
  -[ARWeakReference .cxx_destruct]
  -[ARWeakReference object]
  -[ARWeakReference forwardInvocation:]


ARSkeletonDefinition : NSObject
 @property  unsigned long jointCount
 @property  NSArray *jointNames
 @property  NSArray *parentIndices
 @property  ARSkeleton3D *neutralBodySkeleton3D

  // class methods
  +[ARSkeletonDefinition defaultBody3DSkeletonDefinition]
  +[ARSkeletonDefinition defaultBody2DSkeletonDefinition]

  // instance methods
  -[ARSkeletonDefinition .cxx_destruct]
  -[ARSkeletonDefinition jointNames]
  -[ARSkeletonDefinition parentIndices]
  -[ARSkeletonDefinition jointCount]
  -[ARSkeletonDefinition initDefault3DSkeletonDefinition]
  -[ARSkeletonDefinition initDefault2DSkeletonDefinition]
  -[ARSkeletonDefinition indexForJointName:]
  -[ARSkeletonDefinition neutralBodySkeleton3D]


ARMemoryPressureMonitor : NSObject
 @property  <ARMemoryPressureMonitorDelegate> *delegate

  // instance methods
  -[ARMemoryPressureMonitor setDelegate:]
  -[ARMemoryPressureMonitor delegate]
  -[ARMemoryPressureMonitor dealloc]
  -[ARMemoryPressureMonitor .cxx_destruct]
  -[ARMemoryPressureMonitor init]


AR2DSkeletonDetectionPostProcessGPU : NSObject
  // instance methods
  -[AR2DSkeletonDetectionPostProcessGPU dealloc]
  -[AR2DSkeletonDetectionPostProcessGPU .cxx_destruct]
  -[AR2DSkeletonDetectionPostProcessGPU init]
  -[AR2DSkeletonDetectionPostProcessGPU process:counter:shape:]


ARGeoTrackingTechniqueService : ARTechniqueService <ARRemoteGeoTrackingTechniqueService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARGeoTrackingTechniqueService serviceName]

  // instance methods
  -[ARGeoTrackingTechniqueService initWithConnection:]
  -[ARGeoTrackingTechniqueService .cxx_destruct]
  -[ARGeoTrackingTechniqueService processData:]
  -[ARGeoTrackingTechniqueService setSupportEnablementOptions:]
  -[ARGeoTrackingTechniqueService setVisualLocalizationCallInterval:]
  -[ARGeoTrackingTechniqueService technique:didOutputResultData:timestamp:context:]
  -[ARGeoTrackingTechniqueService setVisualLocalizationUpdatesRequested:]
  -[ARGeoTrackingTechniqueService setPosteriorVisualLocalizationCallInterval:]
  -[ARGeoTrackingTechniqueService setVisualLocalizationCallIntervalTimeThreshold:]
  -[ARGeoTrackingTechniqueService getLocationFromWorldPosition:reply:]
  -[ARGeoTrackingTechniqueService visualLocalizationCallIntervalWithReply:]
  -[ARGeoTrackingTechniqueService posteriorVisualLocalizationCallIntervalWithReply:]
  -[ARGeoTrackingTechniqueService visualLocalizationCallIntervalTimeThresholdWithReply:]
  -[ARGeoTrackingTechniqueService visualLocalizationUpdatesRequestedWithReply:]
  -[ARGeoTrackingTechniqueService supportEnablementOptionsWithReply:]
  -[ARGeoTrackingTechniqueService processLocationData:]
  -[ARGeoTrackingTechniqueService processDeviceOrientationData:]


ARGeoTrackingGradualCorrectionFilter : NSObject
 @property  {?=[4]} ENUFromVIOTarget

  // instance methods
  -[ARGeoTrackingGradualCorrectionFilter .cxx_construct]
  -[ARGeoTrackingGradualCorrectionFilter .cxx_destruct]
  -[ARGeoTrackingGradualCorrectionFilter initWithTargetTransform:]
  -[ARGeoTrackingGradualCorrectionFilter ENUFromVIOTarget]
  -[ARGeoTrackingGradualCorrectionFilter setENUFromVIOTarget:]
  -[ARGeoTrackingGradualCorrectionFilter setTargetTranslation:]
  -[ARGeoTrackingGradualCorrectionFilter setTargetRotation:]
  -[ARGeoTrackingGradualCorrectionFilter getCurrentENUFromVIO:]
  -[ARGeoTrackingGradualCorrectionFilter updateWithVIOPose:timestamp:]


ARPoseContext : NSObject <ARResultDataContext>
 @property  long long cameraPosition
 @property  @? cameraTransformCallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARPoseContext cameraPosition]
  -[ARPoseContext .cxx_destruct]
  -[ARPoseContext imageData]
  -[ARPoseContext setCameraPosition:]
  -[ARPoseContext resultDataOfClass:]
  -[ARPoseContext cameraTransformCallback]
  -[ARPoseContext setCameraTransformCallback:]


AREnvironmentProbeManager : NSObject
 @property  long long mode

  // instance methods
  -[AREnvironmentProbeManager isBusy]
  -[AREnvironmentProbeManager initWithMode:]
  -[AREnvironmentProbeManager .cxx_construct]
  -[AREnvironmentProbeManager mode]
  -[AREnvironmentProbeManager .cxx_destruct]
  -[AREnvironmentProbeManager _fullDescription]
  -[AREnvironmentProbeManager _textureDataIsBusy]
  -[AREnvironmentProbeManager insertIntoQueue:]
  -[AREnvironmentProbeManager updateProbesForTimestamp:planes:imageData:pose:enableDirectTexturingForProbesWithIdentifier:]
  -[AREnvironmentProbeManager updateProbesFromExistingAnchors:]
  -[AREnvironmentProbeManager addProbeWithAnchor:timestamp:textureImmediately:]
  -[AREnvironmentProbeManager requestTextureForProbe:]


ARProbeFilter : NSObject
  // class methods
  +[ARProbeFilter filter:]


AREnvironmentProbeUpdate : NSObject <ARResultData>
 @property  AREnvironmentProbeManager *manager
 @property  NSArray *addedProbeAnchors
 @property  NSArray *updatedProbeAnchors
 @property  NSArray *removedProbeAnchors
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AREnvironmentProbeUpdate setManager:]
  -[AREnvironmentProbeUpdate .cxx_destruct]
  -[AREnvironmentProbeUpdate manager]
  -[AREnvironmentProbeUpdate anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[AREnvironmentProbeUpdate addedProbeAnchors]
  -[AREnvironmentProbeUpdate setAddedProbeAnchors:]
  -[AREnvironmentProbeUpdate updatedProbeAnchors]
  -[AREnvironmentProbeUpdate setUpdatedProbeAnchors:]
  -[AREnvironmentProbeUpdate removedProbeAnchors]
  -[AREnvironmentProbeUpdate setRemovedProbeAnchors:]


ARNonSynchronousData : NSObject <ARResultData>
 @property  NSArray *gatheredData
 @property  double timestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARNonSynchronousData setTimestamp:]
  -[ARNonSynchronousData .cxx_destruct]
  -[ARNonSynchronousData timestamp]
  -[ARNonSynchronousData resultDataOfClass:]
  -[ARNonSynchronousData gatheredData]
  -[ARNonSynchronousData initWithGatheredData:timestamp:]
  -[ARNonSynchronousData setGatheredData:]


AR3DSkeletonRegistrationTechnique : ARTechnique
 @property  BOOL automaticSkeletonScaleEstimationEnabled

  // instance methods
  -[AR3DSkeletonRegistrationTechnique resetState]
  -[AR3DSkeletonRegistrationTechnique .cxx_construct]
  -[AR3DSkeletonRegistrationTechnique .cxx_destruct]
  -[AR3DSkeletonRegistrationTechnique isEqual:]
  -[AR3DSkeletonRegistrationTechnique prepare:]
  -[AR3DSkeletonRegistrationTechnique requestResultDataAtTimestamp:context:]
  -[AR3DSkeletonRegistrationTechnique reconfigurableFrom:]
  -[AR3DSkeletonRegistrationTechnique processResultData:timestamp:context:]
  -[AR3DSkeletonRegistrationTechnique automaticSkeletonScaleEstimationEnabled]
  -[AR3DSkeletonRegistrationTechnique setAutomaticSkeletonScaleEstimationEnabled:]
  -[AR3DSkeletonRegistrationTechnique _estimateCameraPoseFromMatchingImageData:to3DData:worldTrackingPose:pCameraFromBody:depthData:pScaleOut:]
  -[AR3DSkeletonRegistrationTechnique _estimateScaleFromDepthData:imageData:cameraPoseFromBody:skeleton:]
  -[AR3DSkeletonRegistrationTechnique _estimateScaleFromJasperCloud:cameraPoseFromBody:skeleton:]


ARImageDetectionResult : NSObject <NSCopying>
 @property  {?=[4]} visionTransform
 @property  {?=[4]} transform
 @property  double estimatedScaleFactor
 @property  ARReferenceImage *referenceImage
 @property  {?=[4]} worldTrackingCameraTransformAtDetection
 @property  ^v imageContext
 @property  unsigned long odtObjectIdentifer

  // instance methods
  -[ARImageDetectionResult .cxx_destruct]
  -[ARImageDetectionResult setTransform:]
  -[ARImageDetectionResult copyWithZone:]
  -[ARImageDetectionResult transform]
  -[ARImageDetectionResult isEqual:]
  -[ARImageDetectionResult referenceImage]
  -[ARImageDetectionResult visionTransform]
  -[ARImageDetectionResult setVisionTransform:]
  -[ARImageDetectionResult estimatedScaleFactor]
  -[ARImageDetectionResult setEstimatedScaleFactor:]
  -[ARImageDetectionResult imageContext]
  -[ARImageDetectionResult setImageContext:]
  -[ARImageDetectionResult setReferenceImage:]
  -[ARImageDetectionResult worldTrackingCameraTransformAtDetection]
  -[ARImageDetectionResult setWorldTrackingCameraTransformAtDetection:]
  -[ARImageDetectionResult odtObjectIdentifer]
  -[ARImageDetectionResult setOdtObjectIdentifer:]


ARImageDetectionResultData : NSObject <ARResultData, ARQATraceable, NSCopying>
 @property  double timestamp
 @property  BOOL detectionOnly
 @property  BOOL predicted
 @property  BOOL providesWorldTrackingCameraPose
 @property  ARCamera *currentCamera
 @property  NSArray *detectedImages
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDictionary *tracingEntry

  // class methods
  +[ARImageDetectionResultData tracingEntryFormat]

  // instance methods
  -[ARImageDetectionResultData setTimestamp:]
  -[ARImageDetectionResultData .cxx_destruct]
  -[ARImageDetectionResultData copyWithZone:]
  -[ARImageDetectionResultData timestamp]
  -[ARImageDetectionResultData isEqual:]
  -[ARImageDetectionResultData detectionOnly]
  -[ARImageDetectionResultData setDetectionOnly:]
  -[ARImageDetectionResultData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARImageDetectionResultData tracingEntry]
  -[ARImageDetectionResultData predicted]
  -[ARImageDetectionResultData setPredicted:]
  -[ARImageDetectionResultData providesWorldTrackingCameraPose]
  -[ARImageDetectionResultData setProvidesWorldTrackingCameraPose:]
  -[ARImageDetectionResultData currentCamera]
  -[ARImageDetectionResultData setCurrentCamera:]
  -[ARImageDetectionResultData detectedImages]
  -[ARImageDetectionResultData setDetectedImages:]


ARSensorService : ARDaemonService <ARRemoteSensorService, ARSensorDelegate>
 @property  <ARRemoteSensorClient> *clientProxy
 @property  <ARSensor> *sensor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARSensorService initWithConnection:]
  -[ARSensorService sensor]
  -[ARSensorService .cxx_destruct]
  -[ARSensorService stop]
  -[ARSensorService start]
  -[ARSensorService sensor:didOutputSensorData:]
  -[ARSensorService providedDataTypesWithReply:]
  -[ARSensorService sensor:didFailWithError:]
  -[ARSensorService sensorDidStart:]
  -[ARSensorService sensorDidPause:]
  -[ARSensorService sensorDidRestart:]
  -[ARSensorService clientProxy]
  -[ARSensorService setClientProxy:]
  -[ARSensorService setSensor:]


ARImageSensorSettings : NSObject <NSCopying>
 @property  ARVideoFormat *videoFormat
 @property  BOOL autoFocusEnabled
 @property  BOOL mirrorVideoOutput
 @property  BOOL visionDataOutputEnabled
 @property  BOOL calibrationDataOutputEnabled
 @property  float maxGainOverride
 @property  BOOL videoHDRAllowed
 @property  BOOL dropsInitialFramesOutsideExposureTargetOffsetThreshold
 @property  float negativeExposureTargetOffsetThreshold
 @property  float positiveExposureTargetOffsetThreshold
 @property  unsigned long maximumNumberOfInitialFramesDropped
 @property  BOOL backFacingCameraGeometricDistortionCorrectionEnabled
 @property  NSString *metaData
 @property  NSDictionary *visionDataOutputParameters
 @property  unsigned long maximumNumberOfTrackedFaces
 @property  BOOL supportsCapturingHighResolutionFrames
 @property  BOOL enabled

  // instance methods
  -[ARImageSensorSettings videoFormat]
  -[ARImageSensorSettings setMetaData:]
  -[ARImageSensorSettings metaData]
  -[ARImageSensorSettings .cxx_destruct]
  -[ARImageSensorSettings setEnabled:]
  -[ARImageSensorSettings copyWithZone:]
  -[ARImageSensorSettings isEqual:]
  -[ARImageSensorSettings setMaxGainOverride:]
  -[ARImageSensorSettings maxGainOverride]
  -[ARImageSensorSettings isEnabled]
  -[ARImageSensorSettings setVideoFormat:]
  -[ARImageSensorSettings initWithVideoFormat:]
  -[ARImageSensorSettings maximumNumberOfTrackedFaces]
  -[ARImageSensorSettings setMaximumNumberOfTrackedFaces:]
  -[ARImageSensorSettings videoHDRAllowed]
  -[ARImageSensorSettings setVideoHDRAllowed:]
  -[ARImageSensorSettings setAutoFocusEnabled:]
  -[ARImageSensorSettings autoFocusEnabled]
  -[ARImageSensorSettings setVisionDataOutputEnabled:]
  -[ARImageSensorSettings setCalibrationDataOutputEnabled:]
  -[ARImageSensorSettings mirrorVideoOutput]
  -[ARImageSensorSettings setMirrorVideoOutput:]
  -[ARImageSensorSettings visionDataOutputEnabled]
  -[ARImageSensorSettings calibrationDataOutputEnabled]
  -[ARImageSensorSettings dropsInitialFramesOutsideExposureTargetOffsetThreshold]
  -[ARImageSensorSettings setDropsInitialFramesOutsideExposureTargetOffsetThreshold:]
  -[ARImageSensorSettings negativeExposureTargetOffsetThreshold]
  -[ARImageSensorSettings setNegativeExposureTargetOffsetThreshold:]
  -[ARImageSensorSettings positiveExposureTargetOffsetThreshold]
  -[ARImageSensorSettings setPositiveExposureTargetOffsetThreshold:]
  -[ARImageSensorSettings maximumNumberOfInitialFramesDropped]
  -[ARImageSensorSettings setMaximumNumberOfInitialFramesDropped:]
  -[ARImageSensorSettings backFacingCameraGeometricDistortionCorrectionEnabled]
  -[ARImageSensorSettings setBackFacingCameraGeometricDistortionCorrectionEnabled:]
  -[ARImageSensorSettings visionDataOutputParameters]
  -[ARImageSensorSettings setVisionDataOutputParameters:]
  -[ARImageSensorSettings supportsCapturingHighResolutionFrames]
  -[ARImageSensorSettings setSupportsCapturingHighResolutionFrames:]


ARParentImageSensorSettings : NSObject <NSCopying>
 @property  BOOL audioCaptureEnabled
 @property  BOOL allowCameraInMultipleForegroundAppLayout
 @property  NSArray *settings

  // instance methods
  -[ARParentImageSensorSettings .cxx_destruct]
  -[ARParentImageSensorSettings settings]
  -[ARParentImageSensorSettings setSettings:]
  -[ARParentImageSensorSettings copyWithZone:]
  -[ARParentImageSensorSettings isEqual:]
  -[ARParentImageSensorSettings init]
  -[ARParentImageSensorSettings allowCameraInMultipleForegroundAppLayout]
  -[ARParentImageSensorSettings setAllowCameraInMultipleForegroundAppLayout:]
  -[ARParentImageSensorSettings audioCaptureEnabled]
  -[ARParentImageSensorSettings setAudioCaptureEnabled:]


ARImageSensor : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureDataOutputSynchronizerDelegate, AVCaptureCameraCalibrationDataOutputDelegate, AVCapturePhotoCaptureDelegate, ARSensor>
 @property  float defaultLensPosition
 @property  long long captureFramesPerSecond
 @property  BOOL runningSingleShotAutoFocus
 @property  AVCaptureCameraCalibrationDataOutput *calibrationOutput
 @property  ARImageSensorSettings *mutableSettings
 @property  AVCaptureDeviceInput *videoInput
 @property  AVCaptureConnection *videoConnection
 @property  ARBufferPopulationMonitor *bufferPopulationMonitor
 @property  BOOL interrupted
 @property  <ARSensorDelegate> *delegate
 @property  <ARImageSensorDataSource> *dataSource
 @property  ARImageSensorSettings *settings
 @property  AVCaptureDevice *captureDevice
 @property  AVCaptureSession *captureSession
 @property  AVCaptureVideoDataOutput *videoOutput
 @property  AVCapturePhotoOutput *photoOutput
 @property  AVCaptureConnection *calibrationConnection
 @property  AVCaptureConnection *visionDataConnection
 @property  NSArray *outputsForSynchronizer
 @property  AVCaptureDataOutputSynchronizer *outputSynchronizer
 @property  NSObject<OS_dispatch_queue> *captureQueue
 @property  unsigned long powerUsage
 @property  NSMutableArray *connections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARImageSensor defaultLensPosition]
  +[ARImageSensor registerSignPostForImageData:]

  // instance methods
  -[ARImageSensor logPrefix]
  -[ARImageSensor setConnections:]
  -[ARImageSensor videoOutput]
  -[ARImageSensor dataSource]
  -[ARImageSensor connections]
  -[ARImageSensor teardown]
  -[ARImageSensor setDelegate:]
  -[ARImageSensor delegate]
  -[ARImageSensor captureQueue]
  -[ARImageSensor dealloc]
  -[ARImageSensor interrupted]
  -[ARImageSensor captureOutput:didOutputSampleBuffer:fromConnection:]
  -[ARImageSensor .cxx_destruct]
  -[ARImageSensor stop]
  -[ARImageSensor settings]
  -[ARImageSensor triggerVisionDataBurst]
  -[ARImageSensor observeValueForKeyPath:ofObject:change:context:]
  -[ARImageSensor captureDevice]
  -[ARImageSensor captureOutput:didFinishProcessingPhoto:error:]
  -[ARImageSensor setDataSource:]
  -[ARImageSensor start]
  -[ARImageSensor captureOutput:didDropSampleBuffer:fromConnection:]
  -[ARImageSensor setInterrupted:]
  -[ARImageSensor reconfigure:]
  -[ARImageSensor init]
  -[ARImageSensor mutableSettings]
  -[ARImageSensor dataOutputSynchronizer:didOutputSynchronizedDataCollection:]
  -[ARImageSensor cameraCalibrationDataOutput:didOutputCameraCalibrationData:timestamp:connection:]
  -[ARImageSensor cameraCalibrationDataOutput:didDropCameraCalibrationDataAtTimestamp:connection:reason:]
  -[ARImageSensor videoInput]
  -[ARImageSensor captureSession]
  -[ARImageSensor providedDataTypes]
  -[ARImageSensor prepareToStart]
  -[ARImageSensor configureCaptureSession]
  -[ARImageSensor canReconfigure:]
  -[ARImageSensor captureFramesPerSecond]
  -[ARImageSensor setCaptureFramesPerSecond:]
  -[ARImageSensor setPowerUsage:]
  -[ARImageSensor initWithSettings:captureSession:captureQueue:]
  -[ARImageSensor configureCaptureDevice]
  -[ARImageSensor outputsForSynchronizer]
  -[ARImageSensor configureCaptureSessionCalibration]
  -[ARImageSensor forceUpdatePowerUsage:]
  -[ARImageSensor powerUsage]
  -[ARImageSensor captureHighResolutionFrameWithPhotoSettings:]
  -[ARImageSensor defaultLensPosition]
  -[ARImageSensor enableSensor:]
  -[ARImageSensor _configurePhotoOutputForCaptureSession:]
  -[ARImageSensor updateCaptureDeviceFrameRate:]
  -[ARImageSensor setActiveFormat]
  -[ARImageSensor configureFrameRateForDevice:]
  -[ARImageSensor _configureFrameRateForDevice:frameRate:]
  -[ARImageSensor _configureCameraExposureForDevice:]
  -[ARImageSensor _configureCameraWhiteBalanceForDevice:]
  -[ARImageSensor _configureCameraFocusForDevice:]
  -[ARImageSensor _configureImageControlModeForDevice:]
  -[ARImageSensor configureGeometricDistortionCorrectionForDevice:]
  -[ARImageSensor enableAutoFocusForDevice:]
  -[ARImageSensor _configureVisionDataOutputForSession:]
  -[ARImageSensor enableContinuousAutoFocusIfPossible]
  -[ARImageSensor trackExposureTargetOffsetIfNeededForImageData:shouldDrop:]
  -[ARImageSensor resetExposureTracking]
  -[ARImageSensor _createCMTimeFractionFromDecimalDuration:]
  -[ARImageSensor _defaultPhotoSettings]
  -[ARImageSensor _dispatchImageData:]
  -[ARImageSensor setVideoInput:]
  -[ARImageSensor videoConnection]
  -[ARImageSensor setVideoConnection:]
  -[ARImageSensor photoOutput]
  -[ARImageSensor calibrationConnection]
  -[ARImageSensor visionDataConnection]
  -[ARImageSensor outputSynchronizer]
  -[ARImageSensor setDefaultLensPosition:]
  -[ARImageSensor runningSingleShotAutoFocus]
  -[ARImageSensor setRunningSingleShotAutoFocus:]
  -[ARImageSensor calibrationOutput]
  -[ARImageSensor bufferPopulationMonitor]
  -[ARImageSensor setBufferPopulationMonitor:]


ARDeviceOrientationSensor : NSObject <ARSensor>
 @property  double interval
 @property  <ARSensorDelegate> *delegate
 @property  long long worldAlignment
 @property  unsigned long powerUsage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARDeviceOrientationSensor setDelegate:]
  -[ARDeviceOrientationSensor delegate]
  -[ARDeviceOrientationSensor dealloc]
  -[ARDeviceOrientationSensor setInterval:]
  -[ARDeviceOrientationSensor .cxx_destruct]
  -[ARDeviceOrientationSensor stop]
  -[ARDeviceOrientationSensor start]
  -[ARDeviceOrientationSensor interval]
  -[ARDeviceOrientationSensor worldAlignment]
  -[ARDeviceOrientationSensor providedDataTypes]
  -[ARDeviceOrientationSensor waitForOutstandingCallbacks]
  -[ARDeviceOrientationSensor preferredInterval]
  -[ARDeviceOrientationSensor initWithMotionManager:alignment:]
  -[ARDeviceOrientationSensor changeReferenceFrame:]
  -[ARDeviceOrientationSensor handleDeviceMotionUpdateWithMotion:error:]


ARTimeKeyedList : NSObject
  // instance methods
  -[ARTimeKeyedList initWithMaxSize:]
  -[ARTimeKeyedList clear]
  -[ARTimeKeyedList .cxx_destruct]
  -[ARTimeKeyedList init]
  -[ARTimeKeyedList appendObject:forTime:]
  -[ARTimeKeyedList insertionIndexForTime:]
  -[ARTimeKeyedList nearestObjectForTime:]


ARReplaySensorPublic : NSObject <ARReplaySensorProtocolInternal, ARReplaySensorProtocol>
 @property  int imageIndex
 @property  long long nextFrameIndex
 @property  long long targetFrameIndex
 @property  double recordingTimeToReplayTimeOffset
 @property  BOOL recordingTimeToReplayTimeOffsetReset
 @property  NSMutableArray *cmDataBuffer
 @property  NSMutableArray *userEventBuffer
 @property  NSMutableArray *cvaDepthTOFBuffer
 @property  <ARSensorDelegate> *delegate
 @property  <ARReplaySensorDelegate> *replaySensorDelegate
 @property  NSURL *sequenceURL
 @property  NSString *deviceModel
 @property  NSString *osVersion
 @property  NSString *arkitVersion
 @property  {CGSize=dd} imageResolution
 @property  double nominalFrameRate
 @property  unsigned long recordedSensorTypes
 @property  long long replayMode
 @property  BOOL isReplayingManually
 @property  BOOL synchronousMode
 @property  float advanceFramesPerSecondMultiplier
 @property  NSSet *customDataClasses
 @property  ARParentImageSensorSettings *parentImageSensorSettings
 @property  NSString *mainVideoStreamIdentifier
 @property  ARSession *session
 @property  BOOL interrupted
 @property  BOOL shouldReplayVisionData
 @property  <ARReplaySensorDelegate> *traceReplaySensorDelegate
 @property  unsigned long powerUsage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL finishedReplaying

  // instance methods
  -[ARReplaySensorPublic currentTime]
  -[ARReplaySensorPublic deviceModel]
  -[ARReplaySensorPublic interrupt]
  -[ARReplaySensorPublic session]
  -[ARReplaySensorPublic setDelegate:]
  -[ARReplaySensorPublic failWithError:]
  -[ARReplaySensorPublic setSession:]
  -[ARReplaySensorPublic delegate]
  -[ARReplaySensorPublic dealloc]
  -[ARReplaySensorPublic interrupted]
  -[ARReplaySensorPublic .cxx_destruct]
  -[ARReplaySensorPublic nominalFrameRate]
  -[ARReplaySensorPublic stop]
  -[ARReplaySensorPublic osVersion]
  -[ARReplaySensorPublic observeValueForKeyPath:ofObject:change:context:]
  -[ARReplaySensorPublic start]
  -[ARReplaySensorPublic isEqual:]
  -[ARReplaySensorPublic advance]
  -[ARReplaySensorPublic endInterruption]
  -[ARReplaySensorPublic imageResolution]
  -[ARReplaySensorPublic tick]
  -[ARReplaySensorPublic providedDataTypes]
  -[ARReplaySensorPublic waitForOutstandingCallbacks]
  -[ARReplaySensorPublic arkitVersion]
  -[ARReplaySensorPublic recordedSensorTypes]
  -[ARReplaySensorPublic parentImageSensorSettings]
  -[ARReplaySensorPublic initWithDataFromFile:]
  -[ARReplaySensorPublic initWithSequenceURL:replayMode:]
  -[ARReplaySensorPublic initWithSequenceURL:manualReplay:]
  -[ARReplaySensorPublic initWithSequenceURL:manualReplay:synchronousMode:]
  -[ARReplaySensorPublic advanceFrame]
  -[ARReplaySensorPublic advanceToFrameIndex:]
  -[ARReplaySensorPublic customDataForTimestamp:]
  -[ARReplaySensorPublic replaySensorDelegate]
  -[ARReplaySensorPublic setReplaySensorDelegate:]
  -[ARReplaySensorPublic replayMode]
  -[ARReplaySensorPublic sequenceURL]
  -[ARReplaySensorPublic isReplayingManually]
  -[ARReplaySensorPublic isSynchronousMode]
  -[ARReplaySensorPublic finishedReplaying]
  -[ARReplaySensorPublic nextFrameIndex]
  -[ARReplaySensorPublic advanceFramesPerSecondMultiplier]
  -[ARReplaySensorPublic setAdvanceFramesPerSecondMultiplier:]
  -[ARReplaySensorPublic customDataClasses]
  -[ARReplaySensorPublic setCustomDataClasses:]
  -[ARReplaySensorPublic setParentImageSensorSettings:]
  -[ARReplaySensorPublic setTraceReplaySensorDelegate:]
  -[ARReplaySensorPublic traceReplaySensorDelegate]
  -[ARReplaySensorPublic _mainVideoStringID:]
  -[ARReplaySensorPublic availableVideoFormatForDeviceType:position:]
  -[ARReplaySensorPublic sourceTimestampForMovieTimestamp:]
  -[ARReplaySensorPublic prepareForReplay]
  -[ARReplaySensorPublic _allStreamsAreAvailable:]
  -[ARReplaySensorPublic startReplayIfNeeded]
  -[ARReplaySensorPublic currentCMTime]
  -[ARReplaySensorPublic _endReplay]
  -[ARReplaySensorPublic wrappedImageDataOrderedByTime:]
  -[ARReplaySensorPublic _populateDeviceOrientationIfNeededOnImageData:fromDeviceOrientationData:accelerometerData:streamIdentifier:]
  -[ARReplaySensorPublic _populateCalibrationStream:timestamp:]
  -[ARReplaySensorPublic _cameraCalibrationDataForStream:timestamp:]
  -[ARReplaySensorPublic _appendVisionDataToImageData:streamIdentifier:]
  -[ARReplaySensorPublic _appendCalibrationData:streamIdentifier:]
  -[ARReplaySensorPublic _populateDepthDataForImageData:]
  -[ARReplaySensorPublic readAndVendCMDatasUntil:]
  -[ARReplaySensorPublic readAndVendCVADepthTOFsUntil:]
  -[ARReplaySensorPublic readAndVendCVAUserEventsUntil:]
  -[ARReplaySensorPublic keyedArchiveConverter:]
  -[ARReplaySensorPublic keyedArchiveConverterForClasses:]
  -[ARReplaySensorPublic metadataWrapperConverter:]
  -[ARReplaySensorPublic peekNextWrappedImageDataForAllRequiredStreams]
  -[ARReplaySensorPublic peekNextWrappedImageDataForStreamIdentifier:]
  -[ARReplaySensorPublic getNextWrappedImageDataForReplay]
  -[ARReplaySensorPublic getItemsFromStream:upToMovieTime:converter:]
  -[ARReplaySensorPublic getItemsFromStream:upToMovieTime:metadataClass:]
  -[ARReplaySensorPublic readNextFrameFromStream:forWrapper:]
  -[ARReplaySensorPublic _getMinFrameDurationForStream:]
  -[ARReplaySensorPublic getWrappedItemsFromPixelBufferStream:upToMovieTime:converter:]
  -[ARReplaySensorPublic getWrappedItemsFromStream:upToMovieTime:converter:]
  -[ARReplaySensorPublic getWrappedItemsFromStream:upToMovieTime:withBlock:]
  -[ARReplaySensorPublic getNextWrappedItemsFromStream:converter:]
  -[ARReplaySensorPublic _didOutputSensorData:]
  -[ARReplaySensorPublic setImageIndex:]
  -[ARReplaySensorPublic imageDataToReplayForTimestamp:]
  -[ARReplaySensorPublic readFileMetadata]
  -[ARReplaySensorPublic _replaySensorFinishedReplayingData]
  -[ARReplaySensorPublic _streamIdentifierForCaptureDeviceType:position:]
  -[ARReplaySensorPublic setNextFrameIndex:]
  -[ARReplaySensorPublic mainVideoStreamIdentifier]
  -[ARReplaySensorPublic setMainVideoStreamIdentifier:]
  -[ARReplaySensorPublic shouldReplayVisionData]
  -[ARReplaySensorPublic imageIndex]
  -[ARReplaySensorPublic targetFrameIndex]
  -[ARReplaySensorPublic setTargetFrameIndex:]
  -[ARReplaySensorPublic recordingTimeToReplayTimeOffset]
  -[ARReplaySensorPublic setRecordingTimeToReplayTimeOffset:]
  -[ARReplaySensorPublic recordingTimeToReplayTimeOffsetReset]
  -[ARReplaySensorPublic setRecordingTimeToReplayTimeOffsetReset:]
  -[ARReplaySensorPublic cmDataBuffer]
  -[ARReplaySensorPublic userEventBuffer]
  -[ARReplaySensorPublic cvaDepthTOFBuffer]


ARReplayMovieDataWrapper : NSObject
 @property  double timestamp
 @property  id data

  // instance methods
  -[ARReplayMovieDataWrapper setTimestamp:]
  -[ARReplayMovieDataWrapper .cxx_destruct]
  -[ARReplayMovieDataWrapper setData:]
  -[ARReplayMovieDataWrapper timestamp]
  -[ARReplayMovieDataWrapper data]


ARFaceAnchor : ARAnchor <ARTrackable>
 @property  <ARFaceTrackingDataProtocol> *trackingData
 @property  BOOL isTracked
 @property  NSError *trackingError
 @property  ARFaceGeometry *geometry
 @property  {?=[4]} leftEyeTransform
 @property  {?=[4]} rightEyeTransform
 @property  void lookAtPoint
 @property  NSDictionary *blendShapes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARFaceAnchor supportsSecureCoding]
  +[ARFaceAnchor blendShapeMapping]
  +[ARFaceAnchor mirroredBlendShapeMapping]
  +[ARFaceAnchor blendShapeToMirroredBlendShapeMapping]

  // instance methods
  -[ARFaceAnchor geometry]
  -[ARFaceAnchor encodeWithCoder:]
  -[ARFaceAnchor .cxx_destruct]
  -[ARFaceAnchor initWithCoder:]
  -[ARFaceAnchor initWithAnchor:]
  -[ARFaceAnchor lookAtPoint]
  -[ARFaceAnchor blendShapes]
  -[ARFaceAnchor leftEyeTransform]
  -[ARFaceAnchor rightEyeTransform]
  -[ARFaceAnchor gazePoint]
  -[ARFaceAnchor imageVertices]
  -[ARFaceAnchor trackingData]
  -[ARFaceAnchor trackingError]
  -[ARFaceAnchor setTrackingData:]
  -[ARFaceAnchor isTracked]
  -[ARFaceAnchor copyWithTrackedState:]
  -[ARFaceAnchor setIsTracked:]
  -[ARFaceAnchor initWithIdentifier:trackingData:]
  -[ARFaceAnchor initWithIdentifier:faceTrackingData:]
  -[ARFaceAnchor initWithExistingFaceAnchor:tracked:trackingError:]
  -[ARFaceAnchor faceTrackingData]
  -[ARFaceAnchor isEqualToFaceAnchor:]
  -[ARFaceAnchor setTrackingError:]


ARWorldTrackingState : NSObject <NSCopying, ARDaemonSecureCoding>
 @property  long long state
 @property  long long reason
 @property  BOOL majorRelocalization
 @property  BOOL minorRelocalization
 @property  BOOL poseGraphUpdated
 @property  {?=[4]} majorRelocalizationCameraTransform
 @property  long long vioTrackingState
 @property  double lastMajorRelocalizationTimestamp
 @property  double originTimestamp
 @property  double poseTimestamp
 @property  unsigned long currentVIOMapSize
 @property  unsigned long numberOfCameraSwitches
 @property  unsigned long reinitializationAttempts
 @property  NSArray *mergedSessionIdentifiers
 @property  NSArray *collaborationStats
 @property  ARInertialState *inertialState

  // class methods
  +[ARWorldTrackingState supportsSecureCoding]

  // instance methods
  -[ARWorldTrackingState encodeWithCoder:]
  -[ARWorldTrackingState state]
  -[ARWorldTrackingState .cxx_destruct]
  -[ARWorldTrackingState reason]
  -[ARWorldTrackingState copyWithZone:]
  -[ARWorldTrackingState setReason:]
  -[ARWorldTrackingState isEqual:]
  -[ARWorldTrackingState setState:]
  -[ARWorldTrackingState initWithCoder:]
  -[ARWorldTrackingState originTimestamp]
  -[ARWorldTrackingState setOriginTimestamp:]
  -[ARWorldTrackingState inertialState]
  -[ARWorldTrackingState setInertialState:]
  -[ARWorldTrackingState majorRelocalization]
  -[ARWorldTrackingState minorRelocalization]
  -[ARWorldTrackingState setMajorRelocalization:]
  -[ARWorldTrackingState setMinorRelocalization:]
  -[ARWorldTrackingState poseGraphUpdated]
  -[ARWorldTrackingState setPoseGraphUpdated:]
  -[ARWorldTrackingState majorRelocalizationCameraTransform]
  -[ARWorldTrackingState setMajorRelocalizationCameraTransform:]
  -[ARWorldTrackingState vioTrackingState]
  -[ARWorldTrackingState setVioTrackingState:]
  -[ARWorldTrackingState lastMajorRelocalizationTimestamp]
  -[ARWorldTrackingState setLastMajorRelocalizationTimestamp:]
  -[ARWorldTrackingState poseTimestamp]
  -[ARWorldTrackingState setPoseTimestamp:]
  -[ARWorldTrackingState currentVIOMapSize]
  -[ARWorldTrackingState setCurrentVIOMapSize:]
  -[ARWorldTrackingState numberOfCameraSwitches]
  -[ARWorldTrackingState setNumberOfCameraSwitches:]
  -[ARWorldTrackingState reinitializationAttempts]
  -[ARWorldTrackingState setReinitializationAttempts:]
  -[ARWorldTrackingState mergedSessionIdentifiers]
  -[ARWorldTrackingState setMergedSessionIdentifiers:]
  -[ARWorldTrackingState collaborationStats]
  -[ARWorldTrackingState setCollaborationStats:]


ARWorldTrackingPoseData : NSObject <ARResultData, ARDaemonSecureCoding, NSCopying>
 @property  double timestamp
 @property  double lastInertialTimestamp
 @property  double currentStateTimestamp
 @property  {?=[4]} visionCameraTransform
 @property  ARWorldTrackingState *worldTrackingState
 @property  ARLineCloud *lineCloud
 @property  ARVideoFormat *currentlyActiveVideoFormat
 @property  long long worldMappingStatus
 @property  {?=[4]} cameraTransform
 @property  ARSLAMState *slamState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARWorldTrackingPoseData supportsSecureCoding]

  // instance methods
  -[ARWorldTrackingPoseData setTimestamp:]
  -[ARWorldTrackingPoseData encodeWithCoder:]
  -[ARWorldTrackingPoseData .cxx_destruct]
  -[ARWorldTrackingPoseData copyWithZone:]
  -[ARWorldTrackingPoseData initWithTimestamp:]
  -[ARWorldTrackingPoseData timestamp]
  -[ARWorldTrackingPoseData isEqual:]
  -[ARWorldTrackingPoseData initWithCoder:]
  -[ARWorldTrackingPoseData setCameraTransform:]
  -[ARWorldTrackingPoseData worldTrackingState]
  -[ARWorldTrackingPoseData cameraTransform]
  -[ARWorldTrackingPoseData worldMappingStatus]
  -[ARWorldTrackingPoseData setWorldMappingStatus:]
  -[ARWorldTrackingPoseData setWorldTrackingState:]
  -[ARWorldTrackingPoseData currentlyActiveVideoFormat]
  -[ARWorldTrackingPoseData setCurrentlyActiveVideoFormat:]
  -[ARWorldTrackingPoseData setVisionCameraTransform:]
  -[ARWorldTrackingPoseData lastInertialTimestamp]
  -[ARWorldTrackingPoseData setLastInertialTimestamp:]
  -[ARWorldTrackingPoseData currentStateTimestamp]
  -[ARWorldTrackingPoseData setCurrentStateTimestamp:]
  -[ARWorldTrackingPoseData visionCameraTransform]
  -[ARWorldTrackingPoseData lineCloud]
  -[ARWorldTrackingPoseData setLineCloud:]
  -[ARWorldTrackingPoseData slamState]
  -[ARWorldTrackingPoseData setSlamState:]


ARWorldTrackingFeaturePointData : NSObject <ARResultData, NSSecureCoding>
 @property  double timestamp
 @property  ARPointCloud *visionFeaturePoints
 @property  ARPointCloud *featurePoints
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARWorldTrackingFeaturePointData supportsSecureCoding]

  // instance methods
  -[ARWorldTrackingFeaturePointData encodeWithCoder:]
  -[ARWorldTrackingFeaturePointData .cxx_destruct]
  -[ARWorldTrackingFeaturePointData initWithTimestamp:]
  -[ARWorldTrackingFeaturePointData timestamp]
  -[ARWorldTrackingFeaturePointData isEqual:]
  -[ARWorldTrackingFeaturePointData initWithCoder:]
  -[ARWorldTrackingFeaturePointData featurePoints]
  -[ARWorldTrackingFeaturePointData setFeaturePoints:]
  -[ARWorldTrackingFeaturePointData setVisionFeaturePoints:]
  -[ARWorldTrackingFeaturePointData visionFeaturePoints]


ARWorldTrackingReferenceAnchorData : NSObject <ARResultData, NSSecureCoding>
 @property  double timestamp
 @property  NSSet *updatedAnchors
 @property  NSSet *addedAnchors
 @property  NSSet *removedAnchors
 @property  NSSet *externalAnchors
 @property  NSSet *receivedAnchors
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARWorldTrackingReferenceAnchorData supportsSecureCoding]

  // instance methods
  -[ARWorldTrackingReferenceAnchorData setTimestamp:]
  -[ARWorldTrackingReferenceAnchorData encodeWithCoder:]
  -[ARWorldTrackingReferenceAnchorData .cxx_destruct]
  -[ARWorldTrackingReferenceAnchorData timestamp]
  -[ARWorldTrackingReferenceAnchorData isEqual:]
  -[ARWorldTrackingReferenceAnchorData initWithCoder:]
  -[ARWorldTrackingReferenceAnchorData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARWorldTrackingReferenceAnchorData externalAnchorsWithReferenceOriginTransform:existingAnchors:]
  -[ARWorldTrackingReferenceAnchorData updatedAnchors]
  -[ARWorldTrackingReferenceAnchorData removedAnchors]
  -[ARWorldTrackingReferenceAnchorData initWithUpdatedAnchors:addedAnchors:removedAnchors:externalAnchors:]
  -[ARWorldTrackingReferenceAnchorData addedAnchors]
  -[ARWorldTrackingReferenceAnchorData externalAnchors]
  -[ARWorldTrackingReferenceAnchorData receivedAnchors]
  -[ARWorldTrackingReferenceAnchorData setReceivedAnchors:]


ARWorldTrackingParticipantAnchorData : NSObject <ARResultData>
 @property  NSSet *anchors
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARWorldTrackingParticipantAnchorData .cxx_destruct]
  -[ARWorldTrackingParticipantAnchorData anchors]
  -[ARWorldTrackingParticipantAnchorData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARWorldTrackingParticipantAnchorData initWithAnchors:]


ARWorldTrackingErrorData : NSObject <ARResultData, NSSecureCoding>
 @property  double timestamp
 @property  long long errorCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARWorldTrackingErrorData supportsSecureCoding]

  // instance methods
  -[ARWorldTrackingErrorData setErrorCode:]
  -[ARWorldTrackingErrorData errorCode]
  -[ARWorldTrackingErrorData encodeWithCoder:]
  -[ARWorldTrackingErrorData initWithTimestamp:]
  -[ARWorldTrackingErrorData timestamp]
  -[ARWorldTrackingErrorData isEqual:]
  -[ARWorldTrackingErrorData initWithCoder:]


ARCircularArray : NSObject <NSFastEnumeration>
 @property  NSArray *allObjects
 @property  unsigned long count
 @property  id firstObject
 @property  id lastObject

  // instance methods
  -[ARCircularArray lastObject]
  -[ARCircularArray countByEnumeratingWithState:objects:count:]
  -[ARCircularArray initWithCapacity:]
  -[ARCircularArray containsObject:]
  -[ARCircularArray firstObject]
  -[ARCircularArray .cxx_destruct]
  -[ARCircularArray addObject:]
  -[ARCircularArray count]
  -[ARCircularArray allObjects]
  -[ARCircularArray objectAtIndex:]
  -[ARCircularArray objectAtIndexedSubscript:]
  -[ARCircularArray indexOfObject:inSortedRange:options:usingComparator:]


ARUserProfile : NSObject
 @property  NSString *identifier
 @property  long long type

  // class methods
  +[ARUserProfile defaultProfile]

  // instance methods
  -[ARUserProfile identifier]
  -[ARUserProfile type]
  -[ARUserProfile initWithIdentifier:type:]
  -[ARUserProfile .cxx_destruct]
  -[ARUserProfile isEqual:]


ARDaemon : NSObject <ARMemoryPressureMonitorDelegate>
 @property  ARDaemonServiceListener *listener
 @property  unsigned long state
 @property  ARServer *server
 @property  NSArray *runningRemoteServices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARDaemon _fullDescription]
  +[ARDaemon localAnonymousListenerDaemon]
  +[ARDaemon createAnonymousListenerDaemon]
  +[ARDaemon createAnonymousListenerDaemonWithReplayURL:deterministic:replayDelegate:]
  +[ARDaemon _runningDaemons]

  // instance methods
  -[ARDaemon startup]
  -[ARDaemon state]
  -[ARDaemon dealloc]
  -[ARDaemon .cxx_destruct]
  -[ARDaemon server]
  -[ARDaemon _fullDescription]
  -[ARDaemon printInfo]
  -[ARDaemon shutdown]
  -[ARDaemon listener]
  -[ARDaemon listenerEndPointForServiceNamed:]
  -[ARDaemon memoryPressureMonitor:didUpdateProcessMemoryPressureCondition:]
  -[ARDaemon memoryPressureMonitor:didUpdateSystemMemoryPressureCondition:]
  -[ARDaemon initWithSpawnTime:watchdogMonitor:]
  -[ARDaemon initWithSpawnTime:watchdogMonitor:anonymousListenerEnabled:graphScheduler:replayDelegate:]
  -[ARDaemon startWithServices:]
  -[ARDaemon runningRemoteServices]


ARDaemonReplayBlockDelegate : NSObject <ARDaemonReplayDelegate>
 @property  @? replayFailedBlock
 @property  @? replayStartedBlock
 @property  @? replayUpdatedBlock
 @property  @? replayStoppedBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARDaemonReplayBlockDelegate .cxx_destruct]
  -[ARDaemonReplayBlockDelegate replayDidFailWithError:]
  -[ARDaemonReplayBlockDelegate replayDidStartWithReplayTime:]
  -[ARDaemonReplayBlockDelegate replayDidUpdateResource:withKey:atTime:]
  -[ARDaemonReplayBlockDelegate replayDidStop]
  -[ARDaemonReplayBlockDelegate replayFailedBlock]
  -[ARDaemonReplayBlockDelegate setReplayFailedBlock:]
  -[ARDaemonReplayBlockDelegate replayStartedBlock]
  -[ARDaemonReplayBlockDelegate setReplayStartedBlock:]
  -[ARDaemonReplayBlockDelegate replayUpdatedBlock]
  -[ARDaemonReplayBlockDelegate setReplayUpdatedBlock:]
  -[ARDaemonReplayBlockDelegate replayStoppedBlock]
  -[ARDaemonReplayBlockDelegate setReplayStoppedBlock:]


ARDepthMapData : NSObject <ARResultData>
 @property  ^{CGImage=} depthMap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARDepthMapData depthMap]
  -[ARDepthMapData setDepthMap:]


ARObjectDetectionTechnique : ARImageBasedTechnique
 @property  BOOL finishedLoadingObjects
 @property  ARWorldTrackingPoseData *currentWorldTrackingPose
 @property  NSDictionary *referenceObjecteMap
 @property  NSArray *detectionObjects

  // class methods
  +[ARObjectDetectionTechnique producesResultDataForAnchorOfClass:]

  // instance methods
  -[ARObjectDetectionTechnique .cxx_destruct]
  -[ARObjectDetectionTechnique processData:]
  -[ARObjectDetectionTechnique isEqual:]
  -[ARObjectDetectionTechnique prepare:]
  -[ARObjectDetectionTechnique requiredTimeInterval]
  -[ARObjectDetectionTechnique processResultData:timestamp:context:]
  -[ARObjectDetectionTechnique currentWorldTrackingPose]
  -[ARObjectDetectionTechnique setCurrentWorldTrackingPose:]
  -[ARObjectDetectionTechnique _processImageDataInBackgound:]
  -[ARObjectDetectionTechnique detectionObjects]
  -[ARObjectDetectionTechnique initWithDetectionObjects:]
  -[ARObjectDetectionTechnique _loadReferenceObjects]
  -[ARObjectDetectionTechnique _enqueueObjectForDetectionNonBlocking:]
  -[ARObjectDetectionTechnique referenceObjecteMap]
  -[ARObjectDetectionTechnique finishedLoadingObjects]
  -[ARObjectDetectionTechnique setFinishedLoadingObjects:]


ARSceneReconstructionHandler : NSObject
 @property  ARSceneReconstructionOptions *options
 @property  unsigned long sceneReconstruction
 @property  <ARSceneReconstructionDelegate> *delegate

  // instance methods
  -[ARSceneReconstructionHandler setDelegate:]
  -[ARSceneReconstructionHandler delegate]
  -[ARSceneReconstructionHandler .cxx_construct]
  -[ARSceneReconstructionHandler pause]
  -[ARSceneReconstructionHandler dealloc]
  -[ARSceneReconstructionHandler reset]
  -[ARSceneReconstructionHandler .cxx_destruct]
  -[ARSceneReconstructionHandler options]
  -[ARSceneReconstructionHandler start]
  -[ARSceneReconstructionHandler sceneReconstruction]
  -[ARSceneReconstructionHandler initWithSceneReconstruction:options:slamSessionHandle:]
  -[ARSceneReconstructionHandler bufferSlamState:]
  -[ARSceneReconstructionHandler swapSlamStateBuffers]
  -[ARSceneReconstructionHandler _recreateReconstructionSessionWithError:]
  -[ARSceneReconstructionHandler _setupSLAMStateBuffering]
  -[ARSceneReconstructionHandler _canReconfigureExistingSessionForSceneReconstruction:options:]
  -[ARSceneReconstructionHandler _reconfigureSession:error:]
  -[ARSceneReconstructionHandler _configureMeshingConfiguration:error:]
  -[ARSceneReconstructionHandler _didReceiveMeshListUpdateCallbackWithMeshList:timestamp:error:]
  -[ARSceneReconstructionHandler _didReceiveKeyframeListUpdateCallbackWithKeyframeList:timestamp:error:]
  -[ARSceneReconstructionHandler reconfigureSceneReconstruction:options:]
  -[ARSceneReconstructionHandler meshPlaneHarmonizationShouldEnable:]
  -[ARSceneReconstructionHandler pushDepth:semanticSegmentation:personSegmentation:pose:]
  -[ARSceneReconstructionHandler postProcessConfidenceBuffer:fromSegmentationData:]
  -[ARSceneReconstructionHandler processPlaneList:]
  -[ARSceneReconstructionHandler queryOccupancyWithPoints:callback:]
  -[ARSceneReconstructionHandler handleCFError:withErrorMessage:failSession:]
  -[ARSceneReconstructionHandler handleCFError:withErrorMessage:]


ARSLAMState : NSObject <ARResultData, ARQATraceable, NSSecureCoding>
 @property  int trackingState
 @property  r^{CV3DSLAMStateContext=} slamState
 @property  double timestamp
 @property  NSSet *updatedAnchors
 @property  NSSet *addedAnchors
 @property  NSSet *removedAnchors
 @property  NSSet *externalAnchors
 @property  unsigned int slamMode
 @property  unsigned int visualSLAMState
 @property  ARPointCloud *pointCloud
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDictionary *tracingEntry

  // class methods
  +[ARSLAMState supportsSecureCoding]

  // instance methods
  -[ARSLAMState encodeWithCoder:]
  -[ARSLAMState dealloc]
  -[ARSLAMState timestamp]
  -[ARSLAMState initWithCoder:]
  -[ARSLAMState trackingState]
  -[ARSLAMState tracingEntry]
  -[ARSLAMState pointCloud]
  -[ARSLAMState updatedAnchors]
  -[ARSLAMState removedAnchors]
  -[ARSLAMState slamState]
  -[ARSLAMState addedAnchors]
  -[ARSLAMState externalAnchors]
  -[ARSLAMState initWithSLAMState:]
  -[ARSLAMState setSLAMState:]
  -[ARSLAMState slamMode]
  -[ARSLAMState visualSLAMState]
  -[ARSLAMState updatedAnchorsForGroupIdentifiers:]
  -[ARSLAMState addedAnchorsForGroupIdentifiers:]
  -[ARSLAMState removedAnchorsForGroupIdentifiers:]
  -[ARSLAMState externalAnchorsForGroupIdentifiers:]


ARRollingNumberSeries : NSObject
 @property  unsigned long windowSize
 @property  unsigned long count
 @property  double sum
 @property  double max
 @property  double min
 @property  double average
 @property  double variance

  // instance methods
  -[ARRollingNumberSeries min]
  -[ARRollingNumberSeries windowSize]
  -[ARRollingNumberSeries average]
  -[ARRollingNumberSeries clear]
  -[ARRollingNumberSeries dealloc]
  -[ARRollingNumberSeries count]
  -[ARRollingNumberSeries max]
  -[ARRollingNumberSeries initWithWindowSize:]
  -[ARRollingNumberSeries variance]
  -[ARRollingNumberSeries sum]
  -[ARRollingNumberSeries appendNumber:]


ARParticipantAnchor : ARAnchor

ARNormalTechnique : ARTechnique
  // instance methods
  -[ARNormalTechnique dealloc]
  -[ARNormalTechnique processData:]
  -[ARNormalTechnique init]


ARBKSAccelerometer : NSObject
  // class methods
  +[ARBKSAccelerometer sharedWeakAccelerometerHandle]
  +[ARBKSAccelerometer sharedAccelerometerHandle]

  // instance methods
  -[ARBKSAccelerometer currentOrientation]
  -[ARBKSAccelerometer dealloc]
  -[ARBKSAccelerometer .cxx_destruct]
  -[ARBKSAccelerometer rawOrientation]
  -[ARBKSAccelerometer initPrivate]


ARDaemonMetrics : NSObject
  // class methods
  +[ARDaemonMetrics sharedDaemonMetrics]

  // instance methods
  -[ARDaemonMetrics .cxx_destruct]
  -[ARDaemonMetrics init]
  -[ARDaemonMetrics reportMemoryFootprintInBytes:]
  -[ARDaemonMetrics setCurrentMemoryFootprintAsPeak]
  -[ARDaemonMetrics _reportCoreAnalyticsDaemonEventWithServiceName:clientBundleIdentifier:isServiceRemoved:isDisconnectingClient:]
  -[ARDaemonMetrics reportCoreAnalyticsDaemonEventWithServiceName:clientBundleIdentifier:isServiceRemoved:isDisconnectingClient:]
  -[ARDaemonMetrics reportServiceRemovedWithName:clientBundleIdentifier:]
  -[ARDaemonMetrics reportServiceAddedWithName:clientBundleIdentifier:]
  -[ARDaemonMetrics _reportDaemonHeartbeatForSessionUUID:daemonUpTimeExcludingSleep:daemonUpTimeIncludingSleep:systemUpTime:memoryFootprintInBytes:]
  -[ARDaemonMetrics reportDaemonHeartbeatForSessionUUID:daemonUpTimeExcludingSleep:daemonUpTimeIncludingSleep:systemUpTime:memoryFootprintInBytes:]
  -[ARDaemonMetrics _getPeakMemoryUsageInMegabytes]
  -[ARDaemonMetrics _getActiveServiceCountPerClient]
  -[ARDaemonMetrics _getAllServicesUsedPerClient]
  -[ARDaemonMetrics _addServiceForClient:serviceName:]
  -[ARDaemonMetrics _removeServiceForClient:serviceName:]


ARCoreAnalyticsEvent : NSObject
 @property  NSString *eventName
 @property  NSDictionary *eventDictionary

  // instance methods
  -[ARCoreAnalyticsEvent eventName]
  -[ARCoreAnalyticsEvent .cxx_destruct]
  -[ARCoreAnalyticsEvent eventDictionary]
  -[ARCoreAnalyticsEvent initWithEventName:eventDictionary:]
  -[ARCoreAnalyticsEvent reportEvent]


ARSharedGPUDevice : NSObject
 @property  <MTLDevice> *device

  // class methods
  +[ARSharedGPUDevice sharedInstance]

  // instance methods
  -[ARSharedGPUDevice .cxx_destruct]
  -[ARSharedGPUDevice setDevice:]
  -[ARSharedGPUDevice device]


ARWatchdogMonitor : NSObject
  // instance methods
  -[ARWatchdogMonitor updateStatus:]
  -[ARWatchdogMonitor init]
  -[ARWatchdogMonitor addQueue:]


ARParametricLights : NSObject <ARDaemonSecureCoding>
 @property  void ambientColor
 @property  NSArray *areaLights

  // class methods
  +[ARParametricLights supportsSecureCoding]

  // instance methods
  -[ARParametricLights encodeWithCoder:]
  -[ARParametricLights .cxx_destruct]
  -[ARParametricLights initWithCoder:]
  -[ARParametricLights initWithAmbientColor:areaLights:]
  -[ARParametricLights ambientColor]
  -[ARParametricLights areaLights]


ARAreaLight : NSObject <ARDaemonSecureCoding>
 @property  void direction
 @property  float angularSize
 @property  void color

  // class methods
  +[ARAreaLight supportsSecureCoding]

  // instance methods
  -[ARAreaLight encodeWithCoder:]
  -[ARAreaLight direction]
  -[ARAreaLight color]
  -[ARAreaLight initWithCoder:]
  -[ARAreaLight initWithDirection:angularSize:color:]
  -[ARAreaLight angularSize]


ARCollaborationData : NSObject <NSSecureCoding>
 @property  long long version
 @property  double timestamp
 @property  NSData *vioData
 @property  long long vioDataType
 @property  unsigned long vioSessionID
 @property  NSUUID *anchorIdentifier
 @property  NSSet *anchors
 @property  long long priority

  // class methods
  +[ARCollaborationData supportsSecureCoding]

  // instance methods
  -[ARCollaborationData encodeWithCoder:]
  -[ARCollaborationData .cxx_destruct]
  -[ARCollaborationData version]
  -[ARCollaborationData priority]
  -[ARCollaborationData timestamp]
  -[ARCollaborationData initWithCoder:]
  -[ARCollaborationData anchors]
  -[ARCollaborationData setAnchors:]
  -[ARCollaborationData vioSessionID]
  -[ARCollaborationData anchorIdentifier]
  -[ARCollaborationData setAnchorIdentifier:]
  -[ARCollaborationData initWithVIOData:type:sessionID:]
  -[ARCollaborationData vioData]
  -[ARCollaborationData vioDataType]


ARSegmentationData : NSObject <ARResultData, ARQATraceable>
 @property  double timestamp
 @property  ^{__CVBuffer=} segmentationBuffer
 @property  ^{__CVBuffer=} confidenceBuffer
 @property  ^{__CVBuffer=} uncertaintyBuffer
 @property  long long source
 @property  BOOL hasSegmentedPeople
 @property  ^{__CVBuffer=} normalsBuffer
 @property  ^{__CVBuffer=} semanticsSampledForDepth
 @property  ^{__CVBuffer=} confidenceSampledForDepth
 @property  ^{__CVBuffer=} uncertaintySampledForDepth
 @property  ^{__CVBuffer=} maskedSemanticsSampledForDepth
 @property  ARImageData *sourceImageData
 @property  {?=[3]} adjustedIntrinics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDictionary *tracingEntry

  // instance methods
  -[ARSegmentationData source]
  -[ARSegmentationData setTimestamp:]
  -[ARSegmentationData dealloc]
  -[ARSegmentationData .cxx_destruct]
  -[ARSegmentationData timestamp]
  -[ARSegmentationData segmentationBuffer]
  -[ARSegmentationData tracingEntry]
  -[ARSegmentationData setNormalsBuffer:]
  -[ARSegmentationData confidenceBuffer]
  -[ARSegmentationData normalsBuffer]
  -[ARSegmentationData sourceImageData]
  -[ARSegmentationData setSourceImageData:]
  -[ARSegmentationData initWithTimestamp:segmentationBuffer:]
  -[ARSegmentationData initWithTimestamp:segmentationBuffer:confidenceBuffer:source:]
  -[ARSegmentationData initWithTimestamp:segmentationBuffer:confidenceBuffer:uncertaintyBuffer:source:]
  -[ARSegmentationData adjustedIntrinics]
  -[ARSegmentationData resampleSemanticsToDepthCPU:depthToSemantics:semanticsIntrinsics:depthIntrinsics:]
  -[ARSegmentationData setSemanticsSampledForDepth:]
  -[ARSegmentationData setConfidenceSampledForDepth:]
  -[ARSegmentationData setUncertaintySampledForDepth:]
  -[ARSegmentationData setMaskedSemanticsSampledForDepth:]
  -[ARSegmentationData updateTimestamp:]
  -[ARSegmentationData uncertaintyBuffer]
  -[ARSegmentationData hasSegmentedPeople]
  -[ARSegmentationData semanticsSampledForDepth]
  -[ARSegmentationData confidenceSampledForDepth]
  -[ARSegmentationData uncertaintySampledForDepth]
  -[ARSegmentationData maskedSemanticsSampledForDepth]


ARPointCloudSensorData : NSObject <NSSecureCoding, ARSensorData>
 @property  double timestamp
 @property  {?=[4]} visionCameraTransform
 @property  {?=[4]} cameraTransform
 @property  ADJasperPointCloud *pointCloud
 @property  long long cameraPosition
 @property  NSString *cameraType
 @property  {?=[4]} extrinsicsToWideSensor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARPointCloudSensorData supportsSecureCoding]

  // instance methods
  -[ARPointCloudSensorData setTimestamp:]
  -[ARPointCloudSensorData encodeWithCoder:]
  -[ARPointCloudSensorData cameraPosition]
  -[ARPointCloudSensorData .cxx_destruct]
  -[ARPointCloudSensorData projectorMode]
  -[ARPointCloudSensorData cameraType]
  -[ARPointCloudSensorData timestamp]
  -[ARPointCloudSensorData initWithCoder:]
  -[ARPointCloudSensorData setCameraTransform:]
  -[ARPointCloudSensorData pointCloudData]
  -[ARPointCloudSensorData cameraTransform]
  -[ARPointCloudSensorData pointCloud]
  -[ARPointCloudSensorData extrinsicsToWideSensor]
  -[ARPointCloudSensorData setExtrinsicsToWideSensor:]
  -[ARPointCloudSensorData setVisionCameraTransform:]
  -[ARPointCloudSensorData visionCameraTransform]
  -[ARPointCloudSensorData initWithPointCloudData:captureFramePerSecond:captureDevice:captureSession:]
  -[ARPointCloudSensorData initWithPointCloudData:projectorMode:timestamp:]


ARRecordingConfiguration : ARCustomTechniquesConfiguration <ARRecordingTechniqueDelegate>
 @property  unsigned long state
 @property  <ARRecordingTechniqueProtocol> *recordingTechnique
 @property  @? finishBlock
 @property  NSURL *fileURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARRecordingConfiguration supportsFrameSemantics:]
  +[ARRecordingConfiguration isSupported]

  // instance methods
  -[ARRecordingConfiguration videoFormat]
  -[ARRecordingConfiguration fileURL]
  -[ARRecordingConfiguration startRecording]
  -[ARRecordingConfiguration state]
  -[ARRecordingConfiguration .cxx_destruct]
  -[ARRecordingConfiguration initPrivate]
  -[ARRecordingConfiguration copyWithZone:]
  -[ARRecordingConfiguration isEqual:]
  -[ARRecordingConfiguration setState:]
  -[ARRecordingConfiguration setVideoFormat:]
  -[ARRecordingConfiguration worldAlignment]
  -[ARRecordingConfiguration parentImageSensorSettings]
  -[ARRecordingConfiguration imageSensorSettings]
  -[ARRecordingConfiguration secondaryTechniques]
  -[ARRecordingConfiguration technique:didFinishWithResult:]
  -[ARRecordingConfiguration abortRecording]
  -[ARRecordingConfiguration initWithBaseConfiguration:fileURL:]
  -[ARRecordingConfiguration initWithBaseConfiguration:recordingTechnique:]
  -[ARRecordingConfiguration recordingTechnique]
  -[ARRecordingConfiguration finishRecordingWithHandler:]
  -[ARRecordingConfiguration ensureTechniqueAndCustomSensorCompatibility]
  -[ARRecordingConfiguration setRecordingTechnique:]
  -[ARRecordingConfiguration finishBlock]
  -[ARRecordingConfiguration setFinishBlock:]


ARObjectScanningConfiguration : ARConfiguration
 @property  BOOL mlModelEnabled
 @property  BOOL lowQosSchedulingEnabled
 @property  BOOL deliverRawSceneUnderstandingResults
 @property  BOOL autoFocusEnabled
 @property  unsigned long planeDetection

  // class methods
  +[ARObjectScanningConfiguration new]
  +[ARObjectScanningConfiguration supportedVideoFormats]
  +[ARObjectScanningConfiguration supportsFrameSemantics:]
  +[ARObjectScanningConfiguration isSupported]

  // instance methods
  -[ARObjectScanningConfiguration copyWithZone:]
  -[ARObjectScanningConfiguration isMLModelEnabled]
  -[ARObjectScanningConfiguration isEqual:]
  -[ARObjectScanningConfiguration init]
  -[ARObjectScanningConfiguration setPlaneDetection:]
  -[ARObjectScanningConfiguration createTechniques:]
  -[ARObjectScanningConfiguration imageSensorSettings]
  -[ARObjectScanningConfiguration setLowQosSchedulingEnabled:]
  -[ARObjectScanningConfiguration planeDetection]
  -[ARObjectScanningConfiguration setMlModelEnabled:]
  -[ARObjectScanningConfiguration isLowQosSchedulingEnabled]
  -[ARObjectScanningConfiguration deliverRawSceneUnderstandingResults]
  -[ARObjectScanningConfiguration setDeliverRawSceneUnderstandingResults:]


ARSkeleton : NSObject
 @property  ARSkeletonDefinition *definition
 @property  unsigned long jointCount

  // instance methods
  -[ARSkeleton definition]
  -[ARSkeleton .cxx_destruct]
  -[ARSkeleton initPrivate]
  -[ARSkeleton jointCount]
  -[ARSkeleton isJointTracked:]


ARSkeleton3D : ARSkeleton <NSSecureCoding>
 @property  ARCoreRESkeletonResult *coreRESkeleton
 @property  r^{?=[4]} jointModelTransforms
 @property  r^{?=[4]} jointLocalTransforms

  // class methods
  +[ARSkeleton3D supportsSecureCoding]

  // instance methods
  -[ARSkeleton3D encodeWithCoder:]
  -[ARSkeleton3D definition]
  -[ARSkeleton3D .cxx_destruct]
  -[ARSkeleton3D isEqual:]
  -[ARSkeleton3D initWithCoder:]
  -[ARSkeleton3D jointCount]
  -[ARSkeleton3D isJointTracked:]
  -[ARSkeleton3D initWithCoreRESkeletonResult:]
  -[ARSkeleton3D jointModelTransforms]
  -[ARSkeleton3D jointLocalTransforms]
  -[ARSkeleton3D coreRESkeleton]
  -[ARSkeleton3D modelTransformForJointName:]
  -[ARSkeleton3D localTransformForJointName:]


ARSkeleton2D : ARSkeleton <NSSecureCoding>
 @property  r^ jointLandmarks

  // class methods
  +[ARSkeleton2D supportsSecureCoding]

  // instance methods
  -[ARSkeleton2D encodeWithCoder:]
  -[ARSkeleton2D definition]
  -[ARSkeleton2D .cxx_destruct]
  -[ARSkeleton2D isEqual:]
  -[ARSkeleton2D initWithCoder:]
  -[ARSkeleton2D jointCount]
  -[ARSkeleton2D isJointTracked:]
  -[ARSkeleton2D initWithDetectedSkeleton:]
  -[ARSkeleton2D jointLandmarks]
  -[ARSkeleton2D landmarkForJointNamed:]


ARGeoTrackingTechniqueStatePose : NSObject
 @property  double timestamp
 @property  {?=[4]} transform
 @property  BOOL fused
 @property  double heading

  // instance methods
  -[ARGeoTrackingTechniqueStatePose heading]
  -[ARGeoTrackingTechniqueStatePose timestamp]
  -[ARGeoTrackingTechniqueStatePose transform]
  -[ARGeoTrackingTechniqueStatePose initWithTimestamp:transform:fused:heading:]
  -[ARGeoTrackingTechniqueStatePose fused]


ARGeoTrackingTechniqueState : NSObject
 @property  VLLocalizer *VLHandle
 @property  ARDeviceOrientationData *lastCMDeviceMotion
 @property  ARLocationData *lastCLLocation
 @property  double lastVLExecutionTimestamp
 @property  long long trackingState
 @property  long long trackingAccuracy
 @property  long long failureReasons
 @property  ARGeoTrackingConsensusAndAverageFilter *consensusAverageFilter
 @property  ARGeoTrackingGradualCorrectionFilter *gradualCorrectionFilter
 @property  {?=[4]} enuFromVIO
 @property  ARLocationData *enuOrigin
 @property  long long resetCount
 @property  NSMutableArray *resultDatas
 @property  int poseOkCount
 @property  double firstVLExecutionAttemptTimestamp
 @property  double lastVLExecutionAttemptTimestamp
 @property  BOOL hasStartedAvailabilityCheck
 @property  BOOL hasReturnedAvailabilityCheck
 @property  BOOL hasStartedLocalization
 @property  BOOL hasReturnedLocalization
 @property  double lastGradualCorrectionTime
 @property  long long lastLoggedFailureReasons
 @property  long long failureLogCount
 @property  double lastPoseOriginTimestamp
 @property  double firstRequestResultTimestamp
 @property  void lastLoggedVioPosition
 @property  double lastLoggedVioTimestamp
 @property  ARCircularArray *vioPoseCircularBuffer
 @property  ARCircularArray *deviceMotionCircularBuffer
 @property  ARLocationData *lastLocationProcessedForFusion

  // class methods
  +[ARGeoTrackingTechniqueState _findClosestDataToTimestamp:inBuffer:]

  // instance methods
  -[ARGeoTrackingTechniqueState resetCount]
  -[ARGeoTrackingTechniqueState .cxx_destruct]
  -[ARGeoTrackingTechniqueState trackingState]
  -[ARGeoTrackingTechniqueState setTrackingState:]
  -[ARGeoTrackingTechniqueState resultDatas]
  -[ARGeoTrackingTechniqueState setResultDatas:]
  -[ARGeoTrackingTechniqueState enuOrigin]
  -[ARGeoTrackingTechniqueState hasStartedAvailabilityCheck]
  -[ARGeoTrackingTechniqueState hasReturnedAvailabilityCheck]
  -[ARGeoTrackingTechniqueState hasStartedLocalization]
  -[ARGeoTrackingTechniqueState hasReturnedLocalization]
  -[ARGeoTrackingTechniqueState failureReasons]
  -[ARGeoTrackingTechniqueState initWithResetCount:]
  -[ARGeoTrackingTechniqueState enuFromVIO]
  -[ARGeoTrackingTechniqueState setEnuFromVIO:]
  -[ARGeoTrackingTechniqueState setEnuFromVIOTranslation:]
  -[ARGeoTrackingTechniqueState setEnuFromVIORotation:]
  -[ARGeoTrackingTechniqueState addFailureReason:]
  -[ARGeoTrackingTechniqueState removeFailureReason:]
  -[ARGeoTrackingTechniqueState VLHasExecuted]
  -[ARGeoTrackingTechniqueState findClosestVioPoseToTimestamp:]
  -[ARGeoTrackingTechniqueState addVioPoseData:]
  -[ARGeoTrackingTechniqueState findClosestDeviceMotionDataToTimestamp:]
  -[ARGeoTrackingTechniqueState addDeviceMotionData:]
  -[ARGeoTrackingTechniqueState VLHandle]
  -[ARGeoTrackingTechniqueState setVLHandle:]
  -[ARGeoTrackingTechniqueState lastCMDeviceMotion]
  -[ARGeoTrackingTechniqueState setLastCMDeviceMotion:]
  -[ARGeoTrackingTechniqueState lastCLLocation]
  -[ARGeoTrackingTechniqueState setLastCLLocation:]
  -[ARGeoTrackingTechniqueState lastVLExecutionTimestamp]
  -[ARGeoTrackingTechniqueState setLastVLExecutionTimestamp:]
  -[ARGeoTrackingTechniqueState trackingAccuracy]
  -[ARGeoTrackingTechniqueState setTrackingAccuracy:]
  -[ARGeoTrackingTechniqueState setFailureReasons:]
  -[ARGeoTrackingTechniqueState consensusAverageFilter]
  -[ARGeoTrackingTechniqueState setConsensusAverageFilter:]
  -[ARGeoTrackingTechniqueState gradualCorrectionFilter]
  -[ARGeoTrackingTechniqueState setGradualCorrectionFilter:]
  -[ARGeoTrackingTechniqueState setEnuOrigin:]
  -[ARGeoTrackingTechniqueState setResetCount:]
  -[ARGeoTrackingTechniqueState poseOkCount]
  -[ARGeoTrackingTechniqueState setPoseOkCount:]
  -[ARGeoTrackingTechniqueState firstVLExecutionAttemptTimestamp]
  -[ARGeoTrackingTechniqueState setFirstVLExecutionAttemptTimestamp:]
  -[ARGeoTrackingTechniqueState lastVLExecutionAttemptTimestamp]
  -[ARGeoTrackingTechniqueState setLastVLExecutionAttemptTimestamp:]
  -[ARGeoTrackingTechniqueState setHasStartedAvailabilityCheck:]
  -[ARGeoTrackingTechniqueState setHasReturnedAvailabilityCheck:]
  -[ARGeoTrackingTechniqueState setHasStartedLocalization:]
  -[ARGeoTrackingTechniqueState setHasReturnedLocalization:]
  -[ARGeoTrackingTechniqueState lastGradualCorrectionTime]
  -[ARGeoTrackingTechniqueState setLastGradualCorrectionTime:]
  -[ARGeoTrackingTechniqueState lastLoggedFailureReasons]
  -[ARGeoTrackingTechniqueState setLastLoggedFailureReasons:]
  -[ARGeoTrackingTechniqueState failureLogCount]
  -[ARGeoTrackingTechniqueState setFailureLogCount:]
  -[ARGeoTrackingTechniqueState lastPoseOriginTimestamp]
  -[ARGeoTrackingTechniqueState setLastPoseOriginTimestamp:]
  -[ARGeoTrackingTechniqueState firstRequestResultTimestamp]
  -[ARGeoTrackingTechniqueState setFirstRequestResultTimestamp:]
  -[ARGeoTrackingTechniqueState lastLoggedVioPosition]
  -[ARGeoTrackingTechniqueState setLastLoggedVioPosition:]
  -[ARGeoTrackingTechniqueState lastLoggedVioTimestamp]
  -[ARGeoTrackingTechniqueState setLastLoggedVioTimestamp:]
  -[ARGeoTrackingTechniqueState vioPoseCircularBuffer]
  -[ARGeoTrackingTechniqueState setVioPoseCircularBuffer:]
  -[ARGeoTrackingTechniqueState deviceMotionCircularBuffer]
  -[ARGeoTrackingTechniqueState setDeviceMotionCircularBuffer:]
  -[ARGeoTrackingTechniqueState lastLocationProcessedForFusion]
  -[ARGeoTrackingTechniqueState setLastLocationProcessedForFusion:]


ARRawSceneUnderstandingData : NSObject <ARResultData>
 @property  double timestamp
 @property  ^v sceneUnderstandingResultRef
 @property  ^{__CVBuffer=} semanticSegmentationBuffer
 @property  ^{__CVBuffer=} semanticSegmentationBufferSampledForDepth
 @property  ^{__CVBuffer=} semanticSegmentationConfidenceBuffer
 @property  ^{__CVBuffer=} semanticSegmentationConfidenceBufferSampledForDepth
 @property  ^{__CVBuffer=} semanticSegmentationUncertaintyBuffer
 @property  ^{__CVBuffer=} normalsBuffer
 @property  ^{__CVBuffer=} depthBuffer
 @property  ^{__CVBuffer=} depthConfidenceBuffer
 @property  ^{__CVBuffer=} capturedImage
 @property  ARCamera *wideCamera
 @property  ARCamera *ultraWideCamera
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARRawSceneUnderstandingData setTimestamp:]
  -[ARRawSceneUnderstandingData dealloc]
  -[ARRawSceneUnderstandingData .cxx_destruct]
  -[ARRawSceneUnderstandingData timestamp]
  -[ARRawSceneUnderstandingData capturedImage]
  -[ARRawSceneUnderstandingData setCapturedImage:]
  -[ARRawSceneUnderstandingData setSemanticSegmentationBuffer:]
  -[ARRawSceneUnderstandingData semanticSegmentationBuffer]
  -[ARRawSceneUnderstandingData setNormalsBuffer:]
  -[ARRawSceneUnderstandingData depthBuffer]
  -[ARRawSceneUnderstandingData normalsBuffer]
  -[ARRawSceneUnderstandingData sceneUnderstandingResultRef]
  -[ARRawSceneUnderstandingData setSemanticSegmentationBufferSampledForDepth:]
  -[ARRawSceneUnderstandingData setSemanticSegmentationUncertaintyBuffer:]
  -[ARRawSceneUnderstandingData setSemanticSegmentationConfidenceBuffer:]
  -[ARRawSceneUnderstandingData setSemanticSegmentationConfidenceBufferSampledForDepth:]
  -[ARRawSceneUnderstandingData setDepthBuffer:]
  -[ARRawSceneUnderstandingData setDepthConfidenceBuffer:]
  -[ARRawSceneUnderstandingData wideCamera]
  -[ARRawSceneUnderstandingData setWideCamera:]
  -[ARRawSceneUnderstandingData ultraWideCamera]
  -[ARRawSceneUnderstandingData setUltraWideCamera:]
  -[ARRawSceneUnderstandingData semanticSegmentationBufferSampledForDepth]
  -[ARRawSceneUnderstandingData semanticSegmentationConfidenceBuffer]
  -[ARRawSceneUnderstandingData semanticSegmentationConfidenceBufferSampledForDepth]
  -[ARRawSceneUnderstandingData semanticSegmentationUncertaintyBuffer]
  -[ARRawSceneUnderstandingData depthConfidenceBuffer]


ARMLImageProcessingTechnique : ARImageBasedTechnique <ARTechniqueBusyState>
 @property  BOOL prepComplete
 @property  NSString *networkFilePath
 @property  NSArray *inputTensorNames
 @property  NSArray *outputTensorNames
 @property  {CGSize=dd} allowedResamplingImageSize
 @property  BOOL networkHasConfigurations
 @property  NSString *networkVersionString
 @property  BOOL failedToLoadNetwork
 @property  {CGSize=dd} networkInputScaleBeforeRotation
 @property  BOOL useEspressoZeroCopyOutput
 @property  BOOL isBusy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARMLImageProcessingTechnique isSupported]

  // instance methods
  -[ARMLImageProcessingTechnique isBusy]
  -[ARMLImageProcessingTechnique .cxx_construct]
  -[ARMLImageProcessingTechnique dealloc]
  -[ARMLImageProcessingTechnique .cxx_destruct]
  -[ARMLImageProcessingTechnique processData:]
  -[ARMLImageProcessingTechnique defaultEngine]
  -[ARMLImageProcessingTechnique prepare:]
  -[ARMLImageProcessingTechnique requiredTimeInterval]
  -[ARMLImageProcessingTechnique resultDataClasses]
  -[ARMLImageProcessingTechnique initWithDispatchQueue:networkInputScaleBeforeRotation:delegateInference:]
  -[ARMLImageProcessingTechnique _prepareOnce:]
  -[ARMLImageProcessingTechnique processImageDataThroughNeuralNetwork:originalImageData:regionOfInterest:rotationOfResultTensor:]
  -[ARMLImageProcessingTechnique runNeuralNetworkWithImageData:originalImageData:regionOfInterest:rotationOfResultTensor:]
  -[ARMLImageProcessingTechnique _startLoadingMLModelSignpost]
  -[ARMLImageProcessingTechnique _endLoadingMLModelSignpost]
  -[ARMLImageProcessingTechnique _startMLProcessingSignpostWithTimestamp:]
  -[ARMLImageProcessingTechnique _endMLProcessingSignpostWithTimestamp:]
  -[ARMLImageProcessingTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[ARMLImageProcessingTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[ARMLImageProcessingTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[ARMLImageProcessingTechnique _endMLCreateResultSignpostWithTimestamp:]
  -[ARMLImageProcessingTechnique requiredSensorDataTypes]
  -[ARMLImageProcessingTechnique changeEspressoConfig:]
  -[ARMLImageProcessingTechnique processEspressoTensor:]
  -[ARMLImageProcessingTechnique getDeviceOrientationFromImageData:]
  -[ARMLImageProcessingTechnique captureBehavior]
  -[ARMLImageProcessingTechnique lockOrientation:]
  -[ARMLImageProcessingTechnique ARMLVerifyLoadedModelVersion:deviceName:major:minor:]
  -[ARMLImageProcessingTechnique isLoadedModelVersionCorrect:]
  -[ARMLImageProcessingTechnique preProcessNetworkInputImage:]
  -[ARMLImageProcessingTechnique _captureMLRunNetworkInputImageData:cameraType:imageWidth:imageHeight:]
  -[ARMLImageProcessingTechnique shouldUseSynchronizedUltraWide]
  -[ARMLImageProcessingTechnique initWithDispatchQueue:inputTensorNames:outputTensorNames:networkInputScaleBeforeRotation:networkFilePath:]
  -[ARMLImageProcessingTechnique bindInputBuffer:withImage:andOriginalImageData:rotationOfResultTensor:]
  -[ARMLImageProcessingTechnique networkModeDidChange:toMode:]
  -[ARMLImageProcessingTechnique prepareBindInputBuffer:withName:]
  -[ARMLImageProcessingTechnique networkModesForOrientation:]
  -[ARMLImageProcessingTechnique createResultDataFromTensors:numberOfOutputTensors:imageDataForNeuralNetwork:inputImageData:rotationNeeded:regionOfInterest:]
  -[ARMLImageProcessingTechnique numberOfInputChannelsToExpectInNetwork]
  -[ARMLImageProcessingTechnique networkProvidesConfigurationsForDeviceOrientation]
  -[ARMLImageProcessingTechnique initWithDispatchQueue:inputTensorNames:outputTensorNames:networkInputScaleBeforeRotation:networkFilePath:useEspressoZeroCopyOutput:]
  -[ARMLImageProcessingTechnique initWithDispatchQueue:networkInputScaleBeforeRotation:]
  -[ARMLImageProcessingTechnique processingSemaphore]
  -[ARMLImageProcessingTechnique espressoNetwork]
  -[ARMLImageProcessingTechnique espressoPlan]
  -[ARMLImageProcessingTechnique espressoOutputTensorsData]
  -[ARMLImageProcessingTechnique espressoOutputTensorsSize]
  -[ARMLImageProcessingTechnique espressoInputTensorsData]
  -[ARMLImageProcessingTechnique espressoInputTensorsSize]
  -[ARMLImageProcessingTechnique defaultEngineName]
  -[ARMLImageProcessingTechnique networkVersionString]
  -[ARMLImageProcessingTechnique loadMLWithPath:networkMode:]
  -[ARMLImageProcessingTechnique _bindOutputTensor]
  -[ARMLImageProcessingTechnique orientationForInitializingEspresso]
  -[ARMLImageProcessingTechnique waitForProcessingCompleteInDeterministicMode]
  -[ARMLImageProcessingTechnique _asynchronousProcessDownSampledImage:]
  -[ARMLImageProcessingTechnique _runNeuralNetworkAndPushResult:originalImageData:regionOfInterest:rotationOfResultTensor:]
  -[ARMLImageProcessingTechnique _asynchronousProcessEspressoTensor:]
  -[ARMLImageProcessingTechnique _resampleImage:rotationOfResultTensor:networkInputSize:]
  -[ARMLImageProcessingTechnique networkInputParams]
  -[ARMLImageProcessingTechnique networkFilePath]
  -[ARMLImageProcessingTechnique setNetworkFilePath:]
  -[ARMLImageProcessingTechnique failedToLoadNetwork]
  -[ARMLImageProcessingTechnique networkInputScaleBeforeRotation]
  -[ARMLImageProcessingTechnique useEspressoZeroCopyOutput]
  -[ARMLImageProcessingTechnique setUseEspressoZeroCopyOutput:]
  -[ARMLImageProcessingTechnique prepComplete]
  -[ARMLImageProcessingTechnique setPrepComplete:]
  -[ARMLImageProcessingTechnique inputTensorNames]
  -[ARMLImageProcessingTechnique outputTensorNames]
  -[ARMLImageProcessingTechnique allowedResamplingImageSize]
  -[ARMLImageProcessingTechnique setAllowedResamplingImageSize:]
  -[ARMLImageProcessingTechnique networkHasConfigurations]
  -[ARMLImageProcessingTechnique setNetworkHasConfigurations:]


ARPersonDetectionResult : NSObject <NSCopying>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox

  // class methods
  +[ARPersonDetectionResult supportsSecureCoding]

  // instance methods
  -[ARPersonDetectionResult encodeWithCoder:]
  -[ARPersonDetectionResult boundingBox]
  -[ARPersonDetectionResult copyWithZone:]
  -[ARPersonDetectionResult initWithCoder:]
  -[ARPersonDetectionResult setBoundingBox:]
  -[ARPersonDetectionResult initWithBoundingBox:]
  -[ARPersonDetectionResult rectScaledToSizeOfPixelBuffer:]


ARDepthBasedPersonDetectionResult : ARPersonDetectionResult
 @property  double initialBoundingBoxAvg
 @property  unsigned long numberOfSamples

  // instance methods
  -[ARDepthBasedPersonDetectionResult encodeWithCoder:]
  -[ARDepthBasedPersonDetectionResult copyWithZone:]
  -[ARDepthBasedPersonDetectionResult numberOfSamples]
  -[ARDepthBasedPersonDetectionResult initWithCoder:]
  -[ARDepthBasedPersonDetectionResult meanValue]
  -[ARDepthBasedPersonDetectionResult initWithBoundingBox:]
  -[ARDepthBasedPersonDetectionResult addSampleValue:]
  -[ARDepthBasedPersonDetectionResult addSampleValueWithHighConfidence:]
  -[ARDepthBasedPersonDetectionResult initialBoundingBoxAvg]
  -[ARDepthBasedPersonDetectionResult setInitialBoundingBoxAvg:]


ARPersonDetectionData : NSObject <ARResultData>
 @property  double timestamp
 @property  NSArray *detectedObjects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARPersonDetectionData setTimestamp:]
  -[ARPersonDetectionData .cxx_destruct]
  -[ARPersonDetectionData timestamp]
  -[ARPersonDetectionData detectedObjects]
  -[ARPersonDetectionData setDetectedObjects:]
  -[ARPersonDetectionData transformToCVPixelBuffer:depthBuffer:]
  -[ARPersonDetectionData mergeOverlappingDetectionsWithThreshold:]


ARRemoteGeoTrackingTechnique : ARRemoteTechnique <ARGeoTrackingTechniqueProtocol>
 @property  double visualLocalizationCallInterval
 @property  double posteriorVisualLocalizationCallInterval
 @property  double visualLocalizationCallIntervalTimeThreshold
 @property  BOOL visualLocalizationUpdatesRequested
 @property  unsigned long supportEnablementOptions
 @property  <ARTechniqueDelegate> *delegate
 @property  unsigned long powerUsage
 @property  double bonusLatency
 @property  NSNumber *traceKey
 @property  NSArray *splitTechniques
 @property  <ARTechniqueForwardingStrategy> *splitTechniqueFowardingStrategy

  // class methods
  +[ARRemoteGeoTrackingTechnique new]

  // instance methods
  -[ARRemoteGeoTrackingTechnique init]
  -[ARRemoteGeoTrackingTechnique setSupportEnablementOptions:]
  -[ARRemoteGeoTrackingTechnique setVisualLocalizationCallInterval:]
  -[ARRemoteGeoTrackingTechnique requiredSensorDataTypes]
  -[ARRemoteGeoTrackingTechnique reconfigurableFrom:]
  -[ARRemoteGeoTrackingTechnique reconfigureFrom:]
  -[ARRemoteGeoTrackingTechnique visualLocalizationCallInterval]
  -[ARRemoteGeoTrackingTechnique visualLocalizationUpdatesRequested]
  -[ARRemoteGeoTrackingTechnique setVisualLocalizationUpdatesRequested:]
  -[ARRemoteGeoTrackingTechnique supportEnablementOptions]
  -[ARRemoteGeoTrackingTechnique initWithServerConnection:]
  -[ARRemoteGeoTrackingTechnique getLocationFromWorldPosition:error:]
  -[ARRemoteGeoTrackingTechnique posteriorVisualLocalizationCallInterval]
  -[ARRemoteGeoTrackingTechnique setPosteriorVisualLocalizationCallInterval:]
  -[ARRemoteGeoTrackingTechnique visualLocalizationCallIntervalTimeThreshold]
  -[ARRemoteGeoTrackingTechnique setVisualLocalizationCallIntervalTimeThreshold:]


ARReplayConfiguration : ARCustomTechniquesConfiguration <ARReplaySensorDelegate>
 @property  NSNumber *vioSessionID
 @property  NSURL *fileURL
 @property  <ARReplayConfigurationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARReplayConfiguration supportsFrameSemantics:]

  // instance methods
  -[ARReplayConfiguration fileURL]
  -[ARReplayConfiguration setDelegate:]
  -[ARReplayConfiguration delegate]
  -[ARReplayConfiguration pause]
  -[ARReplayConfiguration .cxx_destruct]
  -[ARReplayConfiguration initPrivate]
  -[ARReplayConfiguration copyWithZone:]
  -[ARReplayConfiguration play]
  -[ARReplayConfiguration isEqual:]
  -[ARReplayConfiguration worldAlignment]
  -[ARReplayConfiguration parentImageSensorSettings]
  -[ARReplayConfiguration imageSensorSettings]
  -[ARReplayConfiguration secondaryTechniques]
  -[ARReplayConfiguration imageSensorSettingsForUltraWide]
  -[ARReplayConfiguration vioSessionID]
  -[ARReplayConfiguration replaySensorDidFinishReplayingData]
  -[ARReplayConfiguration ensureTechniqueAndCustomSensorCompatibility]
  -[ARReplayConfiguration initWithBaseConfiguration:fileURL:outError:]
  -[ARReplayConfiguration initWithBaseConfiguration:fileURL:replayMode:outError:]
  -[ARReplayConfiguration initWithBaseConfiguration:replaySensor:]
  -[ARReplayConfiguration setAlwaysUsePrimaryCameraForHiResOrX420VideoFormat]
  -[ARReplayConfiguration initWithBaseConfiguration:replaySensor:replayingResultDataClasses:]


ARGeometrySource : NSObject <NSSecureCoding>
 @property  <MTLBuffer> *buffer
 @property  long long count
 @property  unsigned long format
 @property  long long componentsPerVector
 @property  long long offset
 @property  long long stride

  // class methods
  +[ARGeometrySource supportsSecureCoding]

  // instance methods
  -[ARGeometrySource setCount:]
  -[ARGeometrySource buffer]
  -[ARGeometrySource stride]
  -[ARGeometrySource setStride:]
  -[ARGeometrySource encodeWithCoder:]
  -[ARGeometrySource setBuffer:]
  -[ARGeometrySource .cxx_destruct]
  -[ARGeometrySource count]
  -[ARGeometrySource setFormat:]
  -[ARGeometrySource format]
  -[ARGeometrySource offset]
  -[ARGeometrySource setOffset:]
  -[ARGeometrySource isEqual:]
  -[ARGeometrySource initWithCoder:]
  -[ARGeometrySource componentsPerVector]
  -[ARGeometrySource initWithBuffer:count:format:componentsPerVector:offset:stride:]
  -[ARGeometrySource componentSize]
  -[ARGeometrySource setComponentsPerVector:]


ARGeometryElement : NSObject <NSSecureCoding>
 @property  <MTLBuffer> *buffer
 @property  long long count
 @property  long long bytesPerIndex
 @property  long long primitiveType
 @property  long long indexCountPerPrimitive

  // class methods
  +[ARGeometryElement supportsSecureCoding]

  // instance methods
  -[ARGeometryElement setCount:]
  -[ARGeometryElement buffer]
  -[ARGeometryElement encodeWithCoder:]
  -[ARGeometryElement setBuffer:]
  -[ARGeometryElement .cxx_destruct]
  -[ARGeometryElement count]
  -[ARGeometryElement isEqual:]
  -[ARGeometryElement initWithCoder:]
  -[ARGeometryElement primitiveType]
  -[ARGeometryElement setPrimitiveType:]
  -[ARGeometryElement bytesPerIndex]
  -[ARGeometryElement initWithBuffer:count:bytesPerIndex:primitiveType:]
  -[ARGeometryElement indexCountPerPrimitive]
  -[ARGeometryElement setBytesPerIndex:]


ARMeshGeometry : NSObject <NSSecureCoding>
 @property  ARGeometrySource *vertices
 @property  ARGeometrySource *normals
 @property  ARGeometryElement *faces
 @property  ARGeometrySource *classification

  // class methods
  +[ARMeshGeometry supportsSecureCoding]

  // instance methods
  -[ARMeshGeometry encodeWithCoder:]
  -[ARMeshGeometry setClassification:]
  -[ARMeshGeometry .cxx_destruct]
  -[ARMeshGeometry setFaces:]
  -[ARMeshGeometry classification]
  -[ARMeshGeometry faces]
  -[ARMeshGeometry isEqual:]
  -[ARMeshGeometry initWithCoder:]
  -[ARMeshGeometry vertices]
  -[ARMeshGeometry setVertices:]
  -[ARMeshGeometry normals]
  -[ARMeshGeometry setNormals:]
  -[ARMeshGeometry initWithVertices:normals:faces:]


ARMLImageDownScalingResult : NSObject
 @property  ^{__CVBuffer=} pixelBuffer
 @property  {CGSize=dd} imageResolution
 @property  {CGSize=dd} regionOfInterest
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRegion
 @property  ^{__CVBuffer=} undistortedPixelBuffer

  // instance methods
  -[ARMLImageDownScalingResult pixelBuffer]
  -[ARMLImageDownScalingResult dealloc]
  -[ARMLImageDownScalingResult imageResolution]
  -[ARMLImageDownScalingResult regionOfInterest]
  -[ARMLImageDownScalingResult setPixelBuffer:]
  -[ARMLImageDownScalingResult initWithPixelBuffer:regionOfInterest:cropRegion:]
  -[ARMLImageDownScalingResult setUndistortedPixelBuffer:]
  -[ARMLImageDownScalingResult cropRegion]
  -[ARMLImageDownScalingResult undistortedPixelBuffer]


ARMLImageDownScalingResultData : NSObject <ARResultData>
 @property  double timestamp
 @property  long long rotationOfResultTensor
 @property  NSArray *downScalingResults
 @property  ARImageData *originalImageData
 @property  ARMLImageDownScalingResultData *latestResizedUltraWideImageData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARMLImageDownScalingResultData .cxx_destruct]
  -[ARMLImageDownScalingResultData timestamp]
  -[ARMLImageDownScalingResultData isEqual:]
  -[ARMLImageDownScalingResultData originalImageData]
  -[ARMLImageDownScalingResultData initWithResultDataArray:timestamp:rotationOfResultTensor:originalImageData:]
  -[ARMLImageDownScalingResultData rotationOfResultTensor]
  -[ARMLImageDownScalingResultData downScalingResults]
  -[ARMLImageDownScalingResultData latestResizedUltraWideImageData]
  -[ARMLImageDownScalingResultData setLatestResizedUltraWideImageData:]


ARImageNoiseTexture : NSObject
 @property  <MTLTexture> *texture

  // class methods
  +[ARImageNoiseTexture sharedInstanceForCameraPosition:longEdgeImageResolution:]

  // instance methods
  -[ARImageNoiseTexture texture]
  -[ARImageNoiseTexture .cxx_destruct]
  -[ARImageNoiseTexture initWithNoiseModel:]
  -[ARImageNoiseTexture snrToNoiseIntensity:]


ARBodyAnchor : ARAnchor <ARTrackable>
 @property  ARBody2D *referenceBody
 @property  ARSkeleton3D *skeleton
 @property  double estimatedScaleFactor
 @property  BOOL isTracked
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARBodyAnchor supportsSecureCoding]

  // instance methods
  -[ARBodyAnchor skeleton]
  -[ARBodyAnchor encodeWithCoder:]
  -[ARBodyAnchor .cxx_destruct]
  -[ARBodyAnchor isEqual:]
  -[ARBodyAnchor initWithCoder:]
  -[ARBodyAnchor initWithAnchor:]
  -[ARBodyAnchor isTracked]
  -[ARBodyAnchor copyWithTrackedState:]
  -[ARBodyAnchor estimatedScaleFactor]
  -[ARBodyAnchor initWithIdentifier:transform:tracked:skeletonData:]
  -[ARBodyAnchor referenceBody]
  -[ARBodyAnchor isEqualToARBodyAnchor:]


ARExtrinsicsWrapper : NSObject <NSSecureCoding>
 @property  {?=[4]} matrix

  // class methods
  +[ARExtrinsicsWrapper supportsSecureCoding]

  // instance methods
  -[ARExtrinsicsWrapper encodeWithCoder:]
  -[ARExtrinsicsWrapper isEqual:]
  -[ARExtrinsicsWrapper initWithCoder:]
  -[ARExtrinsicsWrapper matrix]
  -[ARExtrinsicsWrapper initWithMatrix:]


ARCustomTechniquesConfiguration : ARConfiguration
 @property  NSArray *techniques
 @property  ARWorldMap *initialWorldMap
 @property  ARConfiguration *templateConfiguration

  // class methods
  +[ARCustomTechniquesConfiguration new]
  +[ARCustomTechniquesConfiguration supportedVideoFormats]

  // instance methods
  -[ARCustomTechniquesConfiguration .cxx_destruct]
  -[ARCustomTechniquesConfiguration initPrivate]
  -[ARCustomTechniquesConfiguration copyWithZone:]
  -[ARCustomTechniquesConfiguration isEqual:]
  -[ARCustomTechniquesConfiguration init]
  -[ARCustomTechniquesConfiguration setVideoFormat:]
  -[ARCustomTechniquesConfiguration initialWorldMap]
  -[ARCustomTechniquesConfiguration worldAlignment]
  -[ARCustomTechniquesConfiguration setCameraPosition:]
  -[ARCustomTechniquesConfiguration imageSensorSettings]
  -[ARCustomTechniquesConfiguration imageSensorSettingsForUltraWide]
  -[ARCustomTechniquesConfiguration setCustomSensors:]
  -[ARCustomTechniquesConfiguration isLightEstimationEnabled]
  -[ARCustomTechniquesConfiguration techniques]
  -[ARCustomTechniquesConfiguration setProvidesAudioData:]
  -[ARCustomTechniquesConfiguration setTechniques:]
  -[ARCustomTechniquesConfiguration ensureTechniqueAndCustomSensorCompatibility]
  -[ARCustomTechniquesConfiguration _updateCaptureSettings]
  -[ARCustomTechniquesConfiguration configureRecordingTechnique]
  -[ARCustomTechniquesConfiguration _ensureTechniqueAndCustomSensorCompatibilityIfNeeded]
  -[ARCustomTechniquesConfiguration _configureRecordingTechniqueIfNeeded]
  -[ARCustomTechniquesConfiguration templateConfiguration]
  -[ARCustomTechniquesConfiguration setTemplateConfiguration:]


ARCoreRESkeletonResult : NSObject <NSSecureCoding, NSCopying>
 @property  NSUUID *identifier
 @property  unsigned long jointTransformCount
 @property  r^{?=[4]} jointModelTransforms
 @property  r^{?=[4]} jointLocalTransforms
 @property  r^{?={?=}} localJointTransformsSRT
 @property  AR3DSkeletonDetectionResult *liftedSkeletonData
 @property  {?=[4]} visionTransform
 @property  double estimatedScaleFactor

  // class methods
  +[ARCoreRESkeletonResult supportsSecureCoding]
  +[ARCoreRESkeletonResult jointNames]
  +[ARCoreRESkeletonResult jointParentIndices]

  // instance methods
  -[ARCoreRESkeletonResult identifier]
  -[ARCoreRESkeletonResult encodeWithCoder:]
  -[ARCoreRESkeletonResult .cxx_construct]
  -[ARCoreRESkeletonResult .cxx_destruct]
  -[ARCoreRESkeletonResult copyWithZone:]
  -[ARCoreRESkeletonResult isEqual:]
  -[ARCoreRESkeletonResult initWithCoder:]
  -[ARCoreRESkeletonResult isJointTracked:]
  -[ARCoreRESkeletonResult visionTransform]
  -[ARCoreRESkeletonResult setVisionTransform:]
  -[ARCoreRESkeletonResult estimatedScaleFactor]
  -[ARCoreRESkeletonResult setEstimatedScaleFactor:]
  -[ARCoreRESkeletonResult jointModelTransforms]
  -[ARCoreRESkeletonResult jointLocalTransforms]
  -[ARCoreRESkeletonResult initWithModelJointTransforms:localJointTransformsSRT:numberOfTransforms:liftedSkeletonData:identifier:]
  -[ARCoreRESkeletonResult localJointTransformsSRT]
  -[ARCoreRESkeletonResult jointTransformCount]
  -[ARCoreRESkeletonResult liftedSkeletonData]


ARCoreRESkeletonResults : NSObject <ARResultData, NSCopying>
 @property  {?=[3]} cameraIntrinsics
 @property  {CGSize=dd} imageResolution
 @property  NSArray *retargetedSkeletons
 @property  double timestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARCoreRESkeletonResults setTimestamp:]
  -[ARCoreRESkeletonResults .cxx_destruct]
  -[ARCoreRESkeletonResults copyWithZone:]
  -[ARCoreRESkeletonResults timestamp]
  -[ARCoreRESkeletonResults isEqual:]
  -[ARCoreRESkeletonResults cameraIntrinsics]
  -[ARCoreRESkeletonResults setCameraIntrinsics:]
  -[ARCoreRESkeletonResults imageResolution]
  -[ARCoreRESkeletonResults anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARCoreRESkeletonResults setImageResolution:]
  -[ARCoreRESkeletonResults retargetedSkeletons]
  -[ARCoreRESkeletonResults setRetargetedSkeletons:]


gan_model_pre_A11Input : NSObject <MLFeatureProvider>
 @property  MLMultiArray *input
 @property  NSSet *featureNames

  // instance methods
  -[gan_model_pre_A11Input input]
  -[gan_model_pre_A11Input featureNames]
  -[gan_model_pre_A11Input featureValueForName:]
  -[gan_model_pre_A11Input .cxx_destruct]
  -[gan_model_pre_A11Input initWithInput:]
  -[gan_model_pre_A11Input setInput:]


gan_model_pre_A11Output : NSObject <MLFeatureProvider>
 @property  MLMultiArray *output
 @property  NSSet *featureNames

  // instance methods
  -[gan_model_pre_A11Output featureNames]
  -[gan_model_pre_A11Output featureValueForName:]
  -[gan_model_pre_A11Output .cxx_destruct]
  -[gan_model_pre_A11Output setOutput:]
  -[gan_model_pre_A11Output output]
  -[gan_model_pre_A11Output initWithOutput:]


gan_model_pre_A11 : NSObject
 @property  MLModel *model

  // class methods
  +[gan_model_pre_A11 loadContentsOfURL:configuration:completionHandler:]
  +[gan_model_pre_A11 URLOfModelInThisBundle]
  +[gan_model_pre_A11 loadWithConfiguration:completionHandler:]

  // instance methods
  -[gan_model_pre_A11 initWithContentsOfURL:error:]
  -[gan_model_pre_A11 predictionFromFeatures:options:error:]
  -[gan_model_pre_A11 model]
  -[gan_model_pre_A11 .cxx_destruct]
  -[gan_model_pre_A11 initWithConfiguration:error:]
  -[gan_model_pre_A11 predictionFromFeatures:error:]
  -[gan_model_pre_A11 init]
  -[gan_model_pre_A11 initWithMLModel:]
  -[gan_model_pre_A11 initWithContentsOfURL:configuration:error:]
  -[gan_model_pre_A11 predictionsFromInputs:options:error:]
  -[gan_model_pre_A11 predictionFromInput:error:]


gan_modelInput : NSObject <MLFeatureProvider>
 @property  MLMultiArray *input
 @property  NSSet *featureNames

  // instance methods
  -[gan_modelInput input]
  -[gan_modelInput featureNames]
  -[gan_modelInput featureValueForName:]
  -[gan_modelInput .cxx_destruct]
  -[gan_modelInput initWithInput:]
  -[gan_modelInput setInput:]


gan_modelOutput : NSObject <MLFeatureProvider>
 @property  MLMultiArray *output
 @property  NSSet *featureNames

  // instance methods
  -[gan_modelOutput featureNames]
  -[gan_modelOutput featureValueForName:]
  -[gan_modelOutput .cxx_destruct]
  -[gan_modelOutput setOutput:]
  -[gan_modelOutput output]
  -[gan_modelOutput initWithOutput:]


gan_model : NSObject
 @property  MLModel *model

  // class methods
  +[gan_model loadContentsOfURL:configuration:completionHandler:]
  +[gan_model URLOfModelInThisBundle]
  +[gan_model loadWithConfiguration:completionHandler:]

  // instance methods
  -[gan_model initWithContentsOfURL:error:]
  -[gan_model predictionFromFeatures:options:error:]
  -[gan_model model]
  -[gan_model .cxx_destruct]
  -[gan_model initWithConfiguration:error:]
  -[gan_model predictionFromFeatures:error:]
  -[gan_model init]
  -[gan_model initWithMLModel:]
  -[gan_model initWithContentsOfURL:configuration:error:]
  -[gan_model predictionsFromInputs:options:error:]
  -[gan_model predictionFromInput:error:]


NSKeyedUnarchiver(ARAdditions)
	// class methods
	+[NSKeyedUnarchiver(ARAdditions) ar_unarchivedObjectOfClasses:fromData:error:]
	+[NSKeyedUnarchiver(ARAdditions) ar_unarchivedObjectOfClass:fromData:error:]

NSUserDefaults(ARAppleGlobalDomain)
	// class methods
	+[NSUserDefaults(ARAppleGlobalDomain) appleGlobalDomain]
	+[NSUserDefaults(ARAppleGlobalDomain) appleGlobalDomainARKitKeys]
	+[NSUserDefaults(ARAppleGlobalDomain) appleGlobalDomainARKitDefaults]

NSXPCConnection(ARAdditions)
	// instance methods
	-[NSXPCConnection(ARAdditions) ar_processBundleIdentifier]
	-[NSXPCConnection(ARAdditions) ar_processName]
	-[NSXPCConnection(ARAdditions) ar_entitlementsArray]

NSBundle(ARAdditions)
	// instance methods
	-[NSBundle(ARAdditions) ar_pathForPrivateResourceBundlePath]
	-[NSBundle(ARAdditions) ar_pathForPrivateResource:ofType:]

ARDepthData(ARKitCore)
	// instance methods
	-[ARDepthData(ARKitCore) tracingEntry]

NSCoder(ARAdditions)
	// instance methods
	-[NSCoder(ARAdditions) _ar_decodeDataNoCopyForKey:]
	-[NSCoder(ARAdditions) _ar_decodeDataNoCopyWithFallbackForKey:]
	-[NSCoder(ARAdditions) ar_encodeVector2:forKey:]
	-[NSCoder(ARAdditions) ar_decodeVector2ForKey:]
	-[NSCoder(ARAdditions) ar_encodeVector3:forKey:]
	-[NSCoder(ARAdditions) ar_decodeVector3ForKey:]
	-[NSCoder(ARAdditions) ar_encodeMatrix3x3:forKey:]
	-[NSCoder(ARAdditions) ar_decodeMatrix3x3ForKey:]
	-[NSCoder(ARAdditions) ar_encodeMatrix4x4:forKey:]
	-[NSCoder(ARAdditions) ar_decodeMatrix4x4ForKey:]
	-[NSCoder(ARAdditions) ar_encodeMatrix4x3:forKey:]
	-[NSCoder(ARAdditions) ar_decodeMatrix4x3ForKey:]
	-[NSCoder(ARAdditions) ar_encodeCMRotationMatrix:forKey:]
	-[NSCoder(ARAdditions) ar_decodeCMRotationMatrixForKey:]

NSXPCCoder(ARAdditions)
	// instance methods
	-[NSXPCCoder(ARAdditions) ar_decodePixelBufferForKey:]
	-[NSXPCCoder(ARAdditions) ar_encodePixelBuffer:forKey:]

NSUUID(ARAdditions)
	// class methods
	+[NSUUID(ARAdditions) ar_UUIDWithCVPixelBuffer:]
	+[NSUUID(ARAdditions) ar_UUIDWithData:]
	+[NSUUID(ARAdditions) ar_zeroUUID]
	+[NSUUID(ARAdditions) ar_UUIDWithIntegerValue:]
	+[NSUUID(ARAdditions) ar_UUIDWithCFUUIDRef:]

	// instance methods
	-[NSUUID(ARAdditions) ar_integerValue]
	-[NSUUID(ARAdditions) ar_createCFUUIDRef]

NSError(ARAdditions)
	// instance methods
	-[NSError(ARAdditions) initWithDictionary:]
	-[NSError(ARAdditions) encodeToDictionary]

(ARAdditions)
	// instance methods
	-[(ARAdditions) ar_map:]

ADAggregationParameters(ARAdditions)
	// instance methods
	-[ADAggregationParameters(ARAdditions) ar_isEqualToParameters:]

ADCameraCalibration(ARAdditions)
	// class methods
	+[ADCameraCalibration(ARAdditions) ar_calibrationWithImageData:adCalibrationData:]
	+[ADCameraCalibration(ARAdditions) ar_initWithCVACameraCalibrationData:]

	// instance methods
	-[ADCameraCalibration(ARAdditions) ar_initWithImageData:calibrationData:]
	-[ADCameraCalibration(ARAdditions) ar_initWithImageData:cameraToPlatformTransform:pixelSize:referenceDimensions:distortionCenter:lensDistortionLookupTable:inverseLensDistortionLookupTable:]

(ARAdditions)
	// class methods
	+[(ARAdditions) ar_arrayWithFloats:count:]

	// instance methods
	-[(ARAdditions) ar_map:]
	-[(ARAdditions) ar_firstObjectPassingTest:]
	-[(ARAdditions) ar_filter:]

(ARAdditions)
	// class methods
	+[(ARAdditions) ar_hoursMinutesSecondsWithTimeInterval:]
	+[(ARAdditions) ar_timestampWithDate:]
	+[(ARAdditions) ar_timestampWithDate:timeZone:locale:]

	// instance methods
	-[(ARAdditions) ar_removePrefix:]
	-[(ARAdditions) ar_removeSuffix:]

NSPointerArray(ARAdditions)
	// instance methods
	-[NSPointerArray(ARAdditions) ar_compactZeroedWeakPointers]

(ARPersonDetectionData)
	// instance methods
	-[(ARPersonDetectionData) recursiveObjectForKey:deleteKeys:]
	-[(ARPersonDetectionData) _recursiveObjectForKey:visited:]

ABPK2DSkeletonRawEspressoResult(ARResultDataAddition)
ABPK2DDetectionResults(ARResultDataAddition)
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPK2DDetection 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPK2DDetectionConfiguration 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPK2DDetectionPostProcessSelector 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPK2DDetectionResult 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPK2DDetectionResults 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPK2DMLModelConfigSelector 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPK2DSkeletonRawEspressoResult 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPK3DLiftingResult 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPKCameraRegistration 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPKDepthBasedScaleEstimation 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPKImageData 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPKImagePreProcessingParams 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPKMLImageData 
01 00 1200 /System/Library/PrivateFrameworks/AltruisticBodyPoseKit.framework/AltruisticBodyPoseKit: ABPKRetargeting 
01 00 0a00 /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth: ADAggregationParameters 
01 00 0a00 /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth: ADCameraCalibration 
01 00 0a00 /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth: ADJasperColorPipeline 
01 00 0a00 /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth: ADJasperPointCloud 
01 00 0a00 /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth: ADLKTOpticalFlow 
01 00 0a00 /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth: ADMagnificationForRadiusLensDistortionModel 
01 00 0a00 /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth: ADMonocularPipeline 
01 00 0a00 /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth: ADMutableCameraCalibration 
01 00 0a00 /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth: ADNilDistortionModel 
01 00 0a00 /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth: ADNormals 
01 00 0a00 /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth: ADNormalsBuffer 
01 00 0a00 /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth: ADPointCloudAggregator 
01 00 0100 /System/Library/PrivateFrameworks/ARKitFoundation.framework/ARKitFoundation: ARDepthData 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCameraCalibrationData 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureAudioDataOutput 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureCameraCalibrationDataOutput 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureConnection 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDataOutputSynchronizer 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDepthDataOutput 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDevice 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceDiscoverySession 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureMetadataOutput 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureMultiCamSession 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCapturePhotoOutput 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCapturePhotoSettings 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCapturePointCloudDataOutput 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSynchronizedDepthData 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSynchronizedMetadataObjectData 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSynchronizedSampleBufferData 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoDataOutput 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVisionDataOutput 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVDepthData 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataTrackedFacesObject 
01 00 2900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 1100 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSAccelerometer 
01 00 2700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 2300 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 2300 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 2600 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 2600 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 2600 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLSimulationManager 
01 00 1400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: CMData 
01 00 2500 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMDeviceMotion 
01 00 2500 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMMotionManager 
01 00 1e00 /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI: CUICatalog 
01 00 1400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: CVACMAccelerometerData 
01 00 1400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: CVACMCompassData 
01 00 1400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: CVACMGyroData 
01 00 1400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: CVACameraCalibrationData 
01 00 1400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: CVADepthIR 
01 00 1400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: CVADepthTOF 
01 00 1400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: CVAFeatureBuffer 
01 00 1400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: CVAUserEvent 
01 00 0d00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOApplicationAuditToken 
01 00 1b00 /System/Library/Frameworks/IOSurface.framework/IOSurface: IOSurface 
01 00 1c00 /System/Library/Frameworks/CoreML.framework/CoreML: MLArrayBatchProvider 
01 00 1c00 /System/Library/Frameworks/CoreML.framework/CoreML: MLFeatureValue 
01 00 1c00 /System/Library/Frameworks/CoreML.framework/CoreML: MLModel 
01 00 1c00 /System/Library/Frameworks/CoreML.framework/CoreML: MLPredictionOptions 
01 00 1400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: MOVReaderInterface 
01 00 1300 /System/Library/PrivateFrameworks/MOVStreamIO.framework/MOVStreamIO: MOVStreamIOUtility 
01 00 1400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: MOVWriterInterface 
01 00 1800 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageConvolution 
01 00 1800 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageGuidedFilter 
01 00 1d00 /System/Library/Frameworks/Metal.framework/Metal: MTLDepthStencilDescriptor 
01 00 1d00 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPassDescriptor 
01 00 1d00 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPipelineDescriptor 
01 00 1d00 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 1d00 /System/Library/Frameworks/Metal.framework/Metal: MTLVertexDescriptor 
01 00 1400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: MetadataWrapper 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCondition 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDecimalNumber 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0800 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 0800 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentifier 
01 00 0800 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessMonitor 
01 00 0800 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessPredicate 
01 00 0800 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessStateDescriptor 
01 00 1500 /System/Library/PrivateFrameworks/SceneIntelligence.framework/SceneIntelligence: SIPeopleSegmentationAlgorithm 
01 00 1500 /System/Library/PrivateFrameworks/SceneIntelligence.framework/SceneIntelligence: SIPersonDetectorAlgorithm 
01 00 1500 /System/Library/PrivateFrameworks/SceneIntelligence.framework/SceneIntelligence: SISceneSegmentationAlgorithm 
01 00 1500 /System/Library/PrivateFrameworks/SceneIntelligence.framework/SceneIntelligence: SISceneUnderstandingAlgorithm 
01 00 0e00 /System/Library/PrivateFrameworks/VisualLocalization.framework/VisualLocalization: VLLocalizationDebugInfo 
01 00 0e00 /System/Library/PrivateFrameworks/VisualLocalization.framework/VisualLocalization: VLLocalizationResult 
01 00 0e00 /System/Library/PrivateFrameworks/VisualLocalization.framework/VisualLocalization: VLLocalizer 
01 00 0e00 /System/Library/PrivateFrameworks/VisualLocalization.framework/VisualLocalization: VLTraceRecorder 
01 00 0200 /System/Library/PrivateFrameworks/AppleNeuralEngine.framework/AppleNeuralEngine: _ANEDeviceInfo 
01 00 2600 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: _CLLocationGroundAltitude 
01 00 0f00 /System/Library/PrivateFrameworks/CoreLocationReplay.framework/CoreLocationReplay: _CLLocationPlayer 
01 00 2600 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: _CLVIOEstimation 
01 00 2600 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: _CLVLLocalizationResult 
