|| __DATA.__data _AKAdornmentZPositionOffset
|| __DATA.__data _AKAnnotationChangeObjectKey
|| __DATA.__data _AKAnnotationLayerSetupCompleteNotification
|| __DATA.__data _AKAnnotationPropertiesChangedNotification
|| __DATA.__data _AKAnnotationsAddedOrRemovedNotification
|| __DATA.__data _AKControllerDrawingGestureRecognizerNeedsDependencyUpdate
|| __DATA.__data _AKControllerWillSaveNotification
|| __DATA.__data _AKDidEndEditingTextAnnotationNotification
|| __DATA.__data _AKEditingTextAnnotationKey
|| __DATA.__data _AKPointOfInterestRadius_Handle_Alternate
|| __DATA.__data _AKPointOfInterestSize_Handle
|| __DATA.__data _AKPointOfInterestSize_LargestHandleSize
|| __DATA.__data _AKSelectionChangedNotification
|| __DATA.__data _AKSelectionChangedPageModelControllerKey
|| __DATA.__data _AKStatisticsDocumentTypeImage
|| __DATA.__data _AKStatisticsDocumentTypePDF
|| __DATA.__data _AKWillBeginEditingTextAnnotationNotification
|| __DATA.__objc_data _OBJC_CLASS_$_AKActionController
|| __DATA.__objc_data _OBJC_CLASS_$_AKAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKAnnotationEventHandler
|| __DATA.__objc_data _OBJC_CLASS_$_AKAnnotationPointOfInterestHelper
|| __DATA.__objc_data _OBJC_CLASS_$_AKAnnotationRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_AKArrowAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKArrowShapeAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKAttributeController
|| __DATA.__objc_data _OBJC_CLASS_$_AKBorderMaskAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKController
|| __DATA.__objc_data _OBJC_CLASS_$_AKControllerForTesting
|| __DATA.__objc_data _OBJC_CLASS_$_AKCropAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKDoodleAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKGeometryHelper
|| __DATA.__objc_data _OBJC_CLASS_$_AKHeartAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKHighlightAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKImageAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKInkAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKInkAnnotation2
|| __DATA.__objc_data _OBJC_CLASS_$_AKLayerPresentationManager
|| __DATA.__objc_data _OBJC_CLASS_$_AKLoupeAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKMainEventHandler
|| __DATA.__objc_data _OBJC_CLASS_$_AKModelController
|| __DATA.__objc_data _OBJC_CLASS_$_AKNoteAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKOvalAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKPageControllerForTesting
|| __DATA.__objc_data _OBJC_CLASS_$_AKPageModelController
|| __DATA.__objc_data _OBJC_CLASS_$_AKPolygonAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKPopupAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKRectAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKRectangularShapeAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKSecureSerializationHelper
|| __DATA.__objc_data _OBJC_CLASS_$_AKShapeAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKSidecarController
|| __DATA.__objc_data _OBJC_CLASS_$_AKSignature
|| __DATA.__objc_data _OBJC_CLASS_$_AKSignatureAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKSparseMutableControllerArray
|| __DATA.__objc_data _OBJC_CLASS_$_AKSpeechBubbleAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKStarAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKStarAnnotationRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_AKStrokedAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKTextAnnotationAttributeHelper
|| __DATA.__objc_data _OBJC_CLASS_$_AKTextBoxAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKTextFieldAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKThoughtBubbleAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKTriangleAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_AKUndoController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKActionController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAnnotationEventHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAnnotationPointOfInterestHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAnnotationRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_AKArrowAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKArrowShapeAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAttributeController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKBorderMaskAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKControllerForTesting
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCropAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKDoodleAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKGeometryHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_AKHeartAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKHighlightAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKImageAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKInkAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKInkAnnotation2
|| __DATA.__objc_data _OBJC_METACLASS_$_AKLayerPresentationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AKLoupeAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKMainEventHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_AKModelController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKNoteAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKOvalAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKPageControllerForTesting
|| __DATA.__objc_data _OBJC_METACLASS_$_AKPageModelController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKPolygonAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKPopupAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKRectAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKRectangularShapeAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKSecureSerializationHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_AKShapeAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKSidecarController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKSignature
|| __DATA.__objc_data _OBJC_METACLASS_$_AKSignatureAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKSparseMutableControllerArray
|| __DATA.__objc_data _OBJC_METACLASS_$_AKSpeechBubbleAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKStarAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKStarAnnotationRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_AKStrokedAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKTextAnnotationAttributeHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_AKTextBoxAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKTextFieldAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKThoughtBubbleAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKTriangleAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKUndoController
|| __DATA_CONST.__const _AKAttributeControllerInkDidChangeNotification
|| __DATA_CONST.__const _AKChildAnnotationUUIDAssociatedObjectKey
|| __DATA_CONST.__const _AKContentScrollViewEndScrollOrMagnifyNotification
|| __DATA_CONST.__const _AKContentScrollViewVisibleRectChangeNotification
|| __DATA_CONST.__const _AKControllerWillTeardownNotification
|| __DATA_CONST.__const _AKParentAnnotationUUIDAssociatedObjectKey
|| __DATA_CONST.__const _AKRawDataForCoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKInkSignatureView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKOverlayView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKPageController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKSignatureView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKToolbarView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKToolbarViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKInkSignatureView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKOverlayView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKPageController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKSignatureView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKToolbarView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKToolbarViewController
|| __TEXT.__const _AKZeroQuadrilateral
|| __TEXT.__text _AKLog
|| __TEXT.__text _AKQuadrilateralCreateDictionaryRepresentation
|| __TEXT.__text _AKQuadrilateralMakeWithDictionaryRepresentation
|| __TEXT.__text _AKSidecarMarkupGetApplicationFromDictionary
__ Accelerate: _vDSP_minvi
__ Accelerate: _vDSP_sve
__ Accelerate: _vDSP_vlim
__ Accelerate: _vDSP_vthres
__ Accelerate: _vDSP_vthrsc
__ Accelerate: _vImageBuffer_InitWithCGImage
__ Accelerate: _vImageConvert_Planar8toPlanarF
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSGetSizeAndAlignment
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSMutableArray
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetBitmapInfo
__ CoreGraphics: _CGBitmapContextGetBitsPerComponent
__ CoreGraphics: _CGBitmapContextGetBitsPerPixel
__ CoreGraphics: _CGBitmapContextGetBytesPerRow
__ CoreGraphics: _CGBitmapContextGetColorSpace
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGBitmapContextGetHeight
__ CoreGraphics: _CGBitmapContextGetWidth
__ CoreGraphics: _CGBitmapGetAlignedBytesPerRow
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorGetAlpha
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorRetain
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateLab
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceCreateWithPropertyList
__ CoreGraphics: _CGColorSpaceGetNumberOfComponents
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGColorTransformConvertColor
__ CoreGraphics: _CGColorTransformCreate
__ CoreGraphics: _CGContextAddCurveToPoint
__ CoreGraphics: _CGContextAddEllipseInRect
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextBeginTransparencyLayer
__ CoreGraphics: _CGContextBeginTransparencyLayerWithRect
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextClipToMask
__ CoreGraphics: _CGContextClipToRect
__ CoreGraphics: _CGContextClosePath
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextConvertRectToDeviceSpace
__ CoreGraphics: _CGContextConvertRectToUserSpace
__ CoreGraphics: _CGContextConvertSizeToDeviceSpace
__ CoreGraphics: _CGContextConvertSizeToUserSpace
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawPDFPage
__ CoreGraphics: _CGContextEOClip
__ CoreGraphics: _CGContextEOFillPath
__ CoreGraphics: _CGContextEndTransparencyLayer
__ CoreGraphics: _CGContextFillEllipseInRect
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextFlush
__ CoreGraphics: _CGContextGetCTM
__ CoreGraphics: _CGContextGetClipBoundingBox
__ CoreGraphics: _CGContextGetType
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetAllowsAntialiasing
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetFlatness
__ CoreGraphics: _CGContextSetGrayFillColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetLineCap
__ CoreGraphics: _CGContextSetLineDash
__ CoreGraphics: _CGContextSetLineJoin
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetMiterLimit
__ CoreGraphics: _CGContextSetShadowWithColor
__ CoreGraphics: _CGContextSetShouldAntialias
__ CoreGraphics: _CGContextSetShouldSmoothFonts
__ CoreGraphics: _CGContextSetShouldSubpixelPositionFonts
__ CoreGraphics: _CGContextSetShouldSubpixelQuantizeFonts
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextStrokeEllipseInRect
__ CoreGraphics: _CGContextStrokeLineSegments
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGContextStrokeRect
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataConsumerCreateWithCFData
__ CoreGraphics: _CGDataConsumerRelease
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetTypeID
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGImageSetProperty
__ CoreGraphics: _CGImageWriteToFile
__ CoreGraphics: _CGPDFContextBeginPage
__ CoreGraphics: _CGPDFContextClose
__ CoreGraphics: _CGPDFContextCreate
__ CoreGraphics: _CGPDFContextEndPage
__ CoreGraphics: _CGPDFDocumentCreateWithProvider
__ CoreGraphics: _CGPDFDocumentGetNumberOfPages
__ CoreGraphics: _CGPDFDocumentGetPage
__ CoreGraphics: _CGPDFDocumentRelease
__ CoreGraphics: _CGPDFDocumentRetain
__ CoreGraphics: _CGPDFPageGetBoxRect
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathAddCurveToPoint
__ CoreGraphics: _CGPathAddEllipseInRect
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddPath
__ CoreGraphics: _CGPathAddQuadCurveToPoint
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathApply
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathContainsPoint
__ CoreGraphics: _CGPathCreateCopy
__ CoreGraphics: _CGPathCreateCopyByStrokingPath
__ CoreGraphics: _CGPathCreateCopyByTransformingPath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateMutableCopy
__ CoreGraphics: _CGPathCreateWithEllipseInRect
__ CoreGraphics: _CGPathCreateWithRect
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathGetBoundingBox
__ CoreGraphics: _CGPathGetCurrentPoint
__ CoreGraphics: _CGPathGetPathBoundingBox
__ CoreGraphics: _CGPathIsEmpty
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPathRetain
__ CoreGraphics: _CGPointCreateDictionaryRepresentation
__ CoreGraphics: _CGPointMakeWithDictionaryRepresentation
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectCreateDictionaryRepresentation
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInfinite
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectMakeWithDictionaryRepresentation
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectStandardize
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeCreateDictionaryRepresentation
__ CoreGraphics: _CGSizeMakeWithDictionaryRepresentation
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceExtendedSRGB
__ CoreGraphics: _kCGColorSpaceGenericGrayGamma2_2
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreGraphics: _kCGImagePropertyIOSurface
__ CoreHandwriting: _OBJC_CLASS_$_CHBoxcarFilterPointFIFO
__ CoreHandwriting: _OBJC_CLASS_$_CHDrawing
__ CoreHandwriting: _OBJC_CLASS_$_CHPointFIFO
__ CoreHandwriting: _OBJC_CLASS_$_CHPointStrokeFIFO
__ CoreHandwriting: _OBJC_CLASS_$_CHQuadCurvePointFIFO
__ CoreHandwriting: _OBJC_CLASS_$_CHRecognizer
__ CoreHandwriting: _OBJC_METACLASS_$_CHPointFIFO
__ CoreImage: _OBJC_CLASS_$_CIColor
__ Foundation: _NSIntegralRectWithOptions
__ Foundation: _NSKeyValueChangeIndexesKey
__ Foundation: _NSKeyValueChangeKindKey
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeNotificationIsPriorKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUndoManagerCheckpointNotification
__ Foundation: _NSUndoManagerDidCloseUndoGroupNotification
__ Foundation: _NSUndoManagerDidRedoChangeNotification
__ Foundation: _NSUndoManagerDidUndoChangeNotification
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNotificationQueue
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUndoManager
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: __NSDictionaryOfVariableBindings
__ IOKit: _IOHIDManagerCreate
__ IOKit: _IOHIDManagerOpen
__ IOKit: _IOHIDManagerRegisterDeviceMatchingCallback
__ IOKit: _IOHIDManagerRegisterDeviceRemovalCallback
__ IOKit: _IOHIDManagerScheduleWithRunLoop
__ IOKit: _IOHIDManagerSetDeviceMatching
__ IOSurface: _IOSurfaceCopyValue
__ IOSurface: _IOSurfaceCreate
__ IOSurface: _IOSurfaceDecrementUseCount
__ IOSurface: _IOSurfaceGetAllocSize
__ IOSurface: _IOSurfaceGetBaseAddress
__ IOSurface: _IOSurfaceGetBytesPerRow
__ IOSurface: _IOSurfaceGetHeight
__ IOSurface: _IOSurfaceGetWidth
__ IOSurface: _IOSurfaceIncrementUseCount
__ IOSurface: _kIOSurfaceAllocSize
__ IOSurface: _kIOSurfaceBytesPerElement
__ IOSurface: _kIOSurfaceBytesPerRow
__ IOSurface: _kIOSurfaceColorSpace
__ IOSurface: _kIOSurfaceHeight
__ IOSurface: _kIOSurfacePixelFormat
__ IOSurface: _kIOSurfaceWidth
__ PencilKit: _OBJC_CLASS_$_PKCanvasView
__ PencilKit: _OBJC_CLASS_$_PKDrawing
__ PencilKit: _OBJC_CLASS_$_PKImageRenderer
__ PencilKit: _OBJC_CLASS_$_PKInk
__ PencilKit: _OBJC_CLASS_$_PKInlineInkPicker
__ PencilKit: _OBJC_CLASS_$_PKToolPicker
__ PencilKit: _PKInkIdentifierLasso
__ PencilKit: _PKInkIdentifierPen
__ QuartzCore: _CARenderServerRenderLayerWithTransform
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _OBJC_METACLASS_$_CAShapeLayer
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCAFilterLinear
__ QuartzCore: _kCAFilterMultiplyBlendMode
__ QuartzCore: _kCAFilterNearest
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccount
__ Security: _kSecAttrComment
__ Security: _kSecAttrLabel
__ Security: _kSecAttrService
__ Security: _kSecAttrSynchronizable
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecMatchLimitOne
__ Security: _kSecReturnAttributes
__ Security: _kSecReturnData
__ Security: _kSecReturnPersistentRef
__ Security: _kSecValueData
__ Security: _kSecValuePersistentRef
__ UIKit: _NSBackgroundColorAttributeName
__ UIKit: _NSBackgroundColorDocumentAttribute
__ UIKit: _NSDocumentTypeDocumentAttribute
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSOriginalFontAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSRTFTextDocumentType
__ UIKit: _NSSourceTextScalingDocumentOption
__ UIKit: _NSStrikethroughColorAttributeName
__ UIKit: _NSStrikethroughStyleAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStrokeColorAttributeName
__ UIKit: _NSTargetTextScalingDocumentOption
__ UIKit: _NSUnderlineColorAttributeName
__ UIKit: _NSUnderlineStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSDataAsset
__ UIKit: _OBJC_CLASS_$_NSLayoutManager
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSTextContainer
__ UIKit: _OBJC_CLASS_$_NSTextStorage
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILargeContentViewerInteraction
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenuController
__ UIKit: _OBJC_CLASS_$_UIMenuItem
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPasteboard
__ UIKit: _OBJC_CLASS_$_UIPopoverPresentationController
__ UIKit: _OBJC_CLASS_$_UIResponder
__ UIKit: _OBJC_CLASS_$_UIRotationGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISlider
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UIStepper
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIToolbar
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIBackdropViewSettings
__ UIKit: _OBJC_METACLASS_$_NSLayoutManager
__ UIKit: _OBJC_METACLASS_$_UIBarButtonItem
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIResponder
__ UIKit: _OBJC_METACLASS_$_UIRotationGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UITextView
__ UIKit: _OBJC_METACLASS_$_UIToolbar
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIApplicationDidReceiveMemoryWarningNotification
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIGraphicsPopContext
__ UIKit: _UIGraphicsPushContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIImageSymbolSizeDefault
__ UIKit: _UIImageSymbolSizeSmall
__ UIKit: _UIKeyboardDidHideNotification
__ UIKit: _UILayoutFittingCompressedSize
__ UIKit: _UIMenuControllerWillHideMenuNotification
__ UIKit: _UIMenuControllerWillShowMenuNotification
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UITextEffectsWindowIsHostedNotification
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: _UIWindowDidBecomeKeyNotification
__ UIKit: __UIScrollViewDidEndDeceleratingNotification
__ UIKit: __UIScrollViewDidEndDraggingNotification
__ UIKit: __UIScrollViewDidEndDraggingWillDecelerateUserInfoKey
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___fpclassifyd
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___snprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_data_or
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _acos
__ libSystem.B.dylib: _acosf
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _hypotf
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _sinf
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___gxx_personality_v0
__ libcompression.dylib: _compression_decode_buffer
__ libcompression.dylib: _compression_encode_buffer
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _method_exchangeImplementations
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libxml2.2.dylib: _xmlFreeDoc
__ libxml2.2.dylib: _xmlReadMemory
__ libxml2.2.dylib: _xmlXPathEvalExpression
__ libxml2.2.dylib: _xmlXPathFreeContext
__ libxml2.2.dylib: _xmlXPathFreeObject
__ libxml2.2.dylib: _xmlXPathNewContext
__ libxml2.2.dylib: _xmlXPathRegisterNs
AKRotationGestureRecognizer : UIRotationGestureRecognizer /usr/lib/libobjc.A.dylib
 @property  AKController *annotationController

  // instance methods
  -[AKRotationGestureRecognizer .cxx_destruct]
  -[AKRotationGestureRecognizer setState:]
  -[AKRotationGestureRecognizer touchesMoved:withEvent:]
  -[AKRotationGestureRecognizer annotationController]
  -[AKRotationGestureRecognizer setAnnotationController:]


AKPotrace : NSObject /usr/lib/libc++.1.dylib
 @property  int turdsize
 @property  int turnpolicy
 @property  double alphamax
 @property  int opticurve
 @property  double opttolerance

  // class methods
  +[AKPotrace newCGPathFromPotracePath:]

  // instance methods
  -[AKPotrace dealloc]
  -[AKPotrace CGPath]
  -[AKPotrace _clearPathIfNecessary]
  -[AKPotrace _generatePath]
  -[AKPotrace initWithCGImage:flipped:whiteIsInside:]
  -[AKPotrace turdsize]
  -[AKPotrace turnpolicy]
  -[AKPotrace alphamax]
  -[AKPotrace opticurve]
  -[AKPotrace opttolerance]
  -[AKPotrace setTurdsize:]
  -[AKPotrace setTurnpolicy:]
  -[AKPotrace setAlphamax:]
  -[AKPotrace setOpticurve:]
  -[AKPotrace setOpttolerance:]


AKCalloutButton : UIButton /usr/lib/libobjc.A.dylib
 @property  int position
 @property  AKCalloutBar *bar

  // instance methods
  -[AKCalloutButton .cxx_destruct]
  -[AKCalloutButton position]
  -[AKCalloutButton setPosition:]
  -[AKCalloutButton initWithFrame:]
  -[AKCalloutButton setHighlighted:]
  -[AKCalloutButton bar]
  -[AKCalloutButton setBar:]


AKThoughtBubbleAnnotationEventHandler : AKRectangularAnnotationEventHandler
  // instance methods
  -[AKThoughtBubbleAnnotationEventHandler getInitialDraggedPoint:otherPoint:center:forEvent:orRecognizer:]
  -[AKThoughtBubbleAnnotationEventHandler updateModelWithCurrentPoint:]


AKFlexibleLinePointOfInterestHelper : AKTwoPointLinePointOfInterestHelper
  // class methods
  +[AKFlexibleLinePointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKFlexibleLinePointOfInterestHelper _concreteDraggableAreaForPointOfInterestWithIndex:ofAnnotation:onPageController:]


AKBoxAdornmentLayer : AKAdornmentLayer
  // instance methods
  -[AKBoxAdornmentLayer _drawsBorderForAnnotation:]
  -[AKBoxAdornmentLayer _rectangleForAnnotation:]
  -[AKBoxAdornmentLayer updateAdornmentElements]
  -[AKBoxAdornmentLayer updateSublayersWithScale:]


AKUserInterfaceItemTableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib <AKUserInterfaceItem, AKLineWidthChooserUserInterfaceItem, AKInkIsUpdatable>
 @property  UIImageView *imageView
 @property  double lineWidth
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKUserInterfaceItemTableViewCell .cxx_destruct]
  -[AKUserInterfaceItemTableViewCell setLineWidth:]
  -[AKUserInterfaceItemTableViewCell lineWidth]
  -[AKUserInterfaceItemTableViewCell imageView]
  -[AKUserInterfaceItemTableViewCell initWithStyle:reuseIdentifier:]
  -[AKUserInterfaceItemTableViewCell setImageView:]
  -[AKUserInterfaceItemTableViewCell wantsInkUpdate]


AKColorPickerViewController : UIViewController /usr/lib/libobjc.A.dylib <AKTextAttributesUserInterfaceItem>
 @property  AKController *controller
 @property  AKColorPaletteView *colorPalette
 @property  long long tag
 @property  UIColor *color
 @property  long long colorAttributeTag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKColorPickerViewController .cxx_destruct]
  -[AKColorPickerViewController tag]
  -[AKColorPickerViewController color]
  -[AKColorPickerViewController setColor:]
  -[AKColorPickerViewController viewWillAppear:]
  -[AKColorPickerViewController viewDidLoad]
  -[AKColorPickerViewController setTag:]
  -[AKColorPickerViewController setController:]
  -[AKColorPickerViewController controller]
  -[AKColorPickerViewController valueChanged:]
  -[AKColorPickerViewController initWithController:]
  -[AKColorPickerViewController setColorPalette:]
  -[AKColorPickerViewController colorPalette]
  -[AKColorPickerViewController colorAttributeTag]
  -[AKColorPickerViewController convertTextAttributes:]
  -[AKColorPickerViewController syncTextAttributesToUI:]
  -[AKColorPickerViewController setColorAttributeTag:]


AKMinimalUserInterfaceItem : NSObject /usr/lib/libc++.1.dylib <AKUserInterfaceItem>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKMinimalUserInterfaceItem initWithTag:]
  -[AKMinimalUserInterfaceItem tag]


AKMinimalInkChooserUserInterfaceItem : AKMinimalUserInterfaceItem <AKInkChooserUserInterfaceItem>
 @property  PKInk *ink
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKMinimalInkChooserUserInterfaceItem .cxx_destruct]
  -[AKMinimalInkChooserUserInterfaceItem ink]
  -[AKMinimalInkChooserUserInterfaceItem setInk:]


AKMinimalColorChooserUserInterfaceItem : AKMinimalUserInterfaceItem <AKColorChooserUserInterfaceItem>
 @property  UIColor *color
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKMinimalColorChooserUserInterfaceItem .cxx_destruct]
  -[AKMinimalColorChooserUserInterfaceItem color]
  -[AKMinimalColorChooserUserInterfaceItem setColor:]


AKMinimalTextColorUserInterfaceItem : AKMinimalColorChooserUserInterfaceItem
  // instance methods
  -[AKMinimalTextColorUserInterfaceItem convertTextAttributes:]


AKToolbarUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKToolbarUtilities attributeTagForCurrentSelectionState:]


AKCropToolPointOfInterestHelper : AKEightPointRectangularPointOfInterestHelper
  // class methods
  +[AKCropToolPointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKCropToolPointOfInterestHelper _concreteDraggableAreaForPoint:onAnnotation:withScale:pageControllerForPixelAlignment:]


AKPopupAdornmentLayer : AKAdornmentLayer
  // instance methods
  -[AKPopupAdornmentLayer updateAdornmentElements]
  -[AKPopupAdornmentLayer updateSublayersWithScale:]


AKMiniNoteLayer : CALayer /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting

AKTriangleAnnotationEventHandler : AKRectangularAnnotationEventHandler
  // instance methods
  -[AKTriangleAnnotationEventHandler naturalAspectRatioForAnnotation]


AKThoughtBubbleAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKThoughtBubbleAnnotationRenderer _newCloudPathScaledToModelSpaceForAnnotation:]
  +[AKThoughtBubbleAnnotationRenderer _newLargestBubblePathScaledToModelSpaceForAnnotation:]
  +[AKThoughtBubbleAnnotationRenderer _newSmallestBubblePathScaledToModelSpaceForAnnotation:]
  +[AKThoughtBubbleAnnotationRenderer _fillAndStrokePath:forAnnotation:inContext:]
  +[AKThoughtBubbleAnnotationRenderer _unitCloudCenter]
  +[AKThoughtBubbleAnnotationRenderer _unitCloudRadius]
  +[AKThoughtBubbleAnnotationRenderer _unitAnnotationPointyPointForAnnotation:]
  +[AKThoughtBubbleAnnotationRenderer _templatePointyPointToCircleIntersect]
  +[AKThoughtBubbleAnnotationRenderer _newSmallBubblePathForAnnotation:atCenter:withSize:]
  +[AKThoughtBubbleAnnotationRenderer _templateToUnitPointyPointScaleForAnnotation:]
  +[AKThoughtBubbleAnnotationRenderer _newPathTransformedFromUnitToModelSpace:forAnnotation:]
  +[AKThoughtBubbleAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKThoughtBubbleAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKThoughtBubbleAnnotationRenderer _concreteTextBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKThoughtBubbleAnnotationRenderer _concreteRectangleForAnnotation:withTextBounds:]
  +[AKThoughtBubbleAnnotationRenderer _newConcreteTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKThoughtBubbleAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKThoughtBubbleAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKThoughtBubbleAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]


AKLoupeAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKLoupeAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKLoupeAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKLoupeAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKLoupeAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKLoupeAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKLoupeAnnotationRenderer innerClipRect:]


AKSignatureAnnotation : AKAnnotation <AKRectangularAnnotationProtocol, AKRotatableAnnotationProtocol>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rectangle
 @property  AKSignature *signature
 @property  UIColor *strokeColor
 @property  double rotationAngle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKSignatureAnnotation supportsSecureCoding]
  +[AKSignatureAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKSignatureAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKSignatureAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKSignatureAnnotation encodeWithCoder:]
  -[AKSignatureAnnotation initWithCoder:]
  -[AKSignatureAnnotation .cxx_destruct]
  -[AKSignatureAnnotation displayName]
  -[AKSignatureAnnotation signature]
  -[AKSignatureAnnotation setStrokeColor:]
  -[AKSignatureAnnotation strokeColor]
  -[AKSignatureAnnotation rotationAngle]
  -[AKSignatureAnnotation setRotationAngle:]
  -[AKSignatureAnnotation setSignature:]
  -[AKSignatureAnnotation shouldBurnIn]
  -[AKSignatureAnnotation setRectangle:]
  -[AKSignatureAnnotation keysForValuesToObserveForUndo]
  -[AKSignatureAnnotation rectangle]
  -[AKSignatureAnnotation keysForValuesToObserveForRedrawing]
  -[AKSignatureAnnotation adjustModelToCompensateForOriginalExif]
  -[AKSignatureAnnotation hitTestBounds]
  -[AKSignatureAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKSignatureAnnotation translateBy:]


AKThoughtBubbleAnnotation : AKRectangularShapeAnnotation
 @property  {CGPoint=dd} pointyBitPoint

  // class methods
  +[AKThoughtBubbleAnnotation supportsSecureCoding]
  +[AKThoughtBubbleAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKThoughtBubbleAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKThoughtBubbleAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKThoughtBubbleAnnotation encodeWithCoder:]
  -[AKThoughtBubbleAnnotation initWithCoder:]
  -[AKThoughtBubbleAnnotation displayName]
  -[AKThoughtBubbleAnnotation keysForValuesToObserveForUndo]
  -[AKThoughtBubbleAnnotation pointyBitPoint]
  -[AKThoughtBubbleAnnotation setPointyBitPoint:]
  -[AKThoughtBubbleAnnotation keysForValuesToObserveForRedrawing]
  -[AKThoughtBubbleAnnotation adjustModelToCompensateForOriginalExif]
  -[AKThoughtBubbleAnnotation hitTestBounds]
  -[AKThoughtBubbleAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKThoughtBubbleAnnotation translateBy:]
  -[AKThoughtBubbleAnnotation keysForValuesToObserveForAdornments]


AKHighlightAnnotation : AKAnnotation <AKParentAnnotationProtocol>
 @property  unsigned long style
 @property  UIColor *color
 @property  NSArray *quadPoints
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  AKAnnotation *childAnnotation

  // class methods
  +[AKHighlightAnnotation supportsSecureCoding]
  +[AKHighlightAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKHighlightAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKHighlightAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKHighlightAnnotation encodeWithCoder:]
  -[AKHighlightAnnotation initWithCoder:]
  -[AKHighlightAnnotation .cxx_destruct]
  -[AKHighlightAnnotation displayName]
  -[AKHighlightAnnotation style]
  -[AKHighlightAnnotation setStyle:]
  -[AKHighlightAnnotation color]
  -[AKHighlightAnnotation setColor:]
  -[AKHighlightAnnotation quadPoints]
  -[AKHighlightAnnotation keysForValuesToObserveForUndo]
  -[AKHighlightAnnotation keysForValuesToObserveForRedrawing]
  -[AKHighlightAnnotation hitTestBounds]
  -[AKHighlightAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKHighlightAnnotation translateBy:]
  -[AKHighlightAnnotation setQuadPoints:]


AKPolygonAnnotation : AKRectangularShapeAnnotation <AKFlippableAnnotationProtocol>
 @property  unsigned long pointCount
 @property  BOOL verticallyFlipped
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL horizontallyFlipped

  // class methods
  +[AKPolygonAnnotation supportsSecureCoding]
  +[AKPolygonAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKPolygonAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKPolygonAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKPolygonAnnotation encodeWithCoder:]
  -[AKPolygonAnnotation initWithCoder:]
  -[AKPolygonAnnotation displayName]
  -[AKPolygonAnnotation pointCount]
  -[AKPolygonAnnotation setPointCount:]
  -[AKPolygonAnnotation keysForValuesToObserveForUndo]
  -[AKPolygonAnnotation keysForValuesToObserveForRedrawing]
  -[AKPolygonAnnotation hitTestBounds]
  -[AKPolygonAnnotation keysForValuesToObserveForAdornments]
  -[AKPolygonAnnotation verticallyFlipped]
  -[AKPolygonAnnotation setVerticallyFlipped:]


AKSignatureModelController : NSObject /usr/lib/libc++.1.dylib
 @property  AKController *controller
 @property  NSArray *signatures
 @property  AKSignature *selectedSignature

  // instance methods
  -[AKSignatureModelController .cxx_destruct]
  -[AKSignatureModelController setController:]
  -[AKSignatureModelController controller]
  -[AKSignatureModelController initWithController:]
  -[AKSignatureModelController _saveSignatureToPersistentStorage:]
  -[AKSignatureModelController _deleteSignatureFromKeychain:]
  -[AKSignatureModelController _loadSignaturesFromPersistentStorage]
  -[AKSignatureModelController _createAKSignatureFromItemRef:]
  -[AKSignatureModelController _createNewKeychainItemWithSignature:]
  -[AKSignatureModelController insertObject:inSignaturesAtIndex:]
  -[AKSignatureModelController removeObjectFromSignaturesAtIndex:]
  -[AKSignatureModelController signatures]
  -[AKSignatureModelController reloadSignaturesFromSource]
  -[AKSignatureModelController _migrateLegacySignaturesFromPreviewContainer]
  -[AKSignatureModelController selectedSignature]
  -[AKSignatureModelController setSelectedSignature:]


AKAlignmentGuideController : NSObject /usr/lib/libc++.1.dylib
 @property  AKPageController *pageController
 @property  BOOL exifHasFlippedAxes
 @property  double screenToModelScaleFactor

  // instance methods
  -[AKAlignmentGuideController dealloc]
  -[AKAlignmentGuideController .cxx_destruct]
  -[AKAlignmentGuideController pageController]
  -[AKAlignmentGuideController setPageController:]
  -[AKAlignmentGuideController initWithPageController:]
  -[AKAlignmentGuideController setExifHasFlippedAxes:]
  -[AKAlignmentGuideController setScreenToModelScaleFactor:]
  -[AKAlignmentGuideController screenToModelScaleFactor]
  -[AKAlignmentGuideController guideAlignedPointForPoint:withEvent:orRecognizer:]
  -[AKAlignmentGuideController exifHasFlippedAxes]


AKSignatureBaselineView : UIView /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} lastSafeAreaInsets
 @property  double baselinePercent

  // instance methods
  -[AKSignatureBaselineView initWithCoder:]
  -[AKSignatureBaselineView scaleFactor]
  -[AKSignatureBaselineView _commonInit]
  -[AKSignatureBaselineView setFrame:]
  -[AKSignatureBaselineView initWithFrame:]
  -[AKSignatureBaselineView layoutSubviews]
  -[AKSignatureBaselineView _isRTL]
  -[AKSignatureBaselineView drawRect:]
  -[AKSignatureBaselineView setBaselinePercent:]
  -[AKSignatureBaselineView _drawBaselineInContext:]
  -[AKSignatureBaselineView lastSafeAreaInsets]
  -[AKSignatureBaselineView setLastSafeAreaInsets:]
  -[AKSignatureBaselineView baselinePercent]


AKFontListController : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *fonts
 @property  UIFont *defaultFont

  // class methods
  +[AKFontListController attributedStringForFont:]

  // instance methods
  -[AKFontListController .cxx_destruct]
  -[AKFontListController defaultFont]
  -[AKFontListController fonts]
  -[AKFontListController setFonts:]
  -[AKFontListController initWithController:]
  -[AKFontListController _createFontsList]
  -[AKFontListController setDefaultFont:]


AKSpeechBubbleAnnotation : AKThoughtBubbleAnnotation
 @property  double pointyBitBaseWidthAngle

  // class methods
  +[AKSpeechBubbleAnnotation supportsSecureCoding]
  +[AKSpeechBubbleAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKSpeechBubbleAnnotation encodeWithCoder:]
  -[AKSpeechBubbleAnnotation initWithCoder:]
  -[AKSpeechBubbleAnnotation displayName]
  -[AKSpeechBubbleAnnotation keysForValuesToObserveForUndo]
  -[AKSpeechBubbleAnnotation keysForValuesToObserveForRedrawing]
  -[AKSpeechBubbleAnnotation keysForValuesToObserveForAdornments]
  -[AKSpeechBubbleAnnotation pointyBitBaseWidthAngle]
  -[AKSpeechBubbleAnnotation setPointyBitBaseWidthAngle:]


AKStarShapePointOfInterestHelper : AKPolygonPointOfInterestHelper
  // class methods
  +[AKStarShapePointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKStarShapePointOfInterestHelper _concreteDraggableAreaForPointOfInterestWithIndex:ofAnnotation:onPageController:]
  +[AKStarShapePointOfInterestHelper maxPolygonPoints]
  +[AKStarShapePointOfInterestHelper minPolygonPoints]


AKAnnotationThemeGreen : AKAnnotationTheme
  // instance methods
  -[AKAnnotationThemeGreen highlightColor]
  -[AKAnnotationThemeGreen annotationStyle]
  -[AKAnnotationThemeGreen noteFillColor]
  -[AKAnnotationThemeGreen noteBorderColor]
  -[AKAnnotationThemeGreen noteTextColor]
  -[AKAnnotationThemeGreen noteMarkerFillColor]
  -[AKAnnotationThemeGreen noteMarkerBorderColor]
  -[AKAnnotationThemeGreen notesSidebarBarColor]
  -[AKAnnotationThemeGreen isUnderline]


AKAnnotationThemeBlue : AKAnnotationTheme
  // instance methods
  -[AKAnnotationThemeBlue highlightColor]
  -[AKAnnotationThemeBlue annotationStyle]
  -[AKAnnotationThemeBlue noteFillColor]
  -[AKAnnotationThemeBlue noteBorderColor]
  -[AKAnnotationThemeBlue noteTextColor]
  -[AKAnnotationThemeBlue noteMarkerFillColor]
  -[AKAnnotationThemeBlue noteMarkerBorderColor]
  -[AKAnnotationThemeBlue notesSidebarBarColor]
  -[AKAnnotationThemeBlue isUnderline]


AKAnnotationThemeYellow : AKAnnotationTheme
  // instance methods
  -[AKAnnotationThemeYellow highlightColor]
  -[AKAnnotationThemeYellow annotationStyle]
  -[AKAnnotationThemeYellow noteFillColor]
  -[AKAnnotationThemeYellow noteBorderColor]
  -[AKAnnotationThemeYellow noteTextColor]
  -[AKAnnotationThemeYellow noteMarkerFillColor]
  -[AKAnnotationThemeYellow noteMarkerBorderColor]
  -[AKAnnotationThemeYellow notesSidebarBarColor]
  -[AKAnnotationThemeYellow isUnderline]


AKAnnotationThemePurple : AKAnnotationTheme
  // instance methods
  -[AKAnnotationThemePurple highlightColor]
  -[AKAnnotationThemePurple annotationStyle]
  -[AKAnnotationThemePurple noteFillColor]
  -[AKAnnotationThemePurple noteBorderColor]
  -[AKAnnotationThemePurple noteTextColor]
  -[AKAnnotationThemePurple noteMarkerFillColor]
  -[AKAnnotationThemePurple noteMarkerBorderColor]
  -[AKAnnotationThemePurple notesSidebarBarColor]
  -[AKAnnotationThemePurple isUnderline]


AKAnnotationThemePink : AKAnnotationTheme
  // instance methods
  -[AKAnnotationThemePink highlightColor]
  -[AKAnnotationThemePink annotationStyle]
  -[AKAnnotationThemePink noteFillColor]
  -[AKAnnotationThemePink noteBorderColor]
  -[AKAnnotationThemePink noteTextColor]
  -[AKAnnotationThemePink noteMarkerFillColor]
  -[AKAnnotationThemePink noteMarkerBorderColor]
  -[AKAnnotationThemePink notesSidebarBarColor]
  -[AKAnnotationThemePink isUnderline]


AKAnnotationThemeUnderline : AKAnnotationTheme
  // instance methods
  -[AKAnnotationThemeUnderline highlightColor]
  -[AKAnnotationThemeUnderline annotationStyle]
  -[AKAnnotationThemeUnderline noteFillColor]
  -[AKAnnotationThemeUnderline noteBorderColor]
  -[AKAnnotationThemeUnderline noteTextColor]
  -[AKAnnotationThemeUnderline noteMarkerFillColor]
  -[AKAnnotationThemeUnderline noteMarkerBorderColor]
  -[AKAnnotationThemeUnderline notesSidebarBarColor]
  -[AKAnnotationThemeUnderline isUnderline]


AKAnnotationTheme : NSObject /usr/lib/libc++.1.dylib
 @property  int pageTheme
 @property  int annotationStyle
 @property  BOOL isUnderline
 @property  UIColor *highlightColor
 @property  UIColor *noteFillColor
 @property  UIColor *noteBorderColor
 @property  double noteShadowRadius
 @property  double noteShadowOpacity
 @property  UIColor *noteShadowColor
 @property  {CGSize=dd} noteShadowOffset
 @property  UIColor *notesSidebarBarColor
 @property  UIColor *notesSidebarTextColor
 @property  UIFont *noteTextFont
 @property  UIFont *noteTextFontInTable
 @property  UIColor *noteTextColor
 @property  UIColor *noteMarkerFillColor
 @property  UIColor *noteMarkerBorderColor
 @property  UIColor *noteMarkerStrikethroughColor

  // class methods
  +[AKAnnotationTheme themeDescriptions]
  +[AKAnnotationTheme themeItemForAnnotationStyle:propertyName:]
  +[AKAnnotationTheme colorForThemeItem:pageTheme:]
  +[AKAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:]
  +[AKAnnotationTheme blueTheme:]
  +[AKAnnotationTheme greenTheme:]
  +[AKAnnotationTheme yellowTheme:]
  +[AKAnnotationTheme pinkTheme:]
  +[AKAnnotationTheme purpleTheme:]
  +[AKAnnotationTheme themeForAnnotationStyle:pageTheme:]
  +[AKAnnotationTheme underlineTheme:]
  +[AKAnnotationTheme theme:]
  +[AKAnnotationTheme themeForAnnotationStyle:pageTheme:isUnderline:]
  +[AKAnnotationTheme highlightTextColor:]

  // instance methods
  -[AKAnnotationTheme highlightColor]
  -[AKAnnotationTheme pageTheme]
  -[AKAnnotationTheme annotationStyle]
  -[AKAnnotationTheme noteFillColor]
  -[AKAnnotationTheme noteBorderColor]
  -[AKAnnotationTheme noteTextColor]
  -[AKAnnotationTheme noteMarkerFillColor]
  -[AKAnnotationTheme noteMarkerBorderColor]
  -[AKAnnotationTheme notesSidebarBarColor]
  -[AKAnnotationTheme isUnderline]
  -[AKAnnotationTheme setPageTheme:]
  -[AKAnnotationTheme noteMarkerStrikethroughColor]
  -[AKAnnotationTheme notesSidebarTextColor]
  -[AKAnnotationTheme noteShadowRadius]
  -[AKAnnotationTheme noteShadowOpacity]
  -[AKAnnotationTheme noteShadowColor]
  -[AKAnnotationTheme noteShadowOffset]
  -[AKAnnotationTheme noteTextFont]
  -[AKAnnotationTheme noteTextFontInTable]


AKToggleButton : UIButton /usr/lib/libobjc.A.dylib
 @property  BOOL showsBackgroundColor
 @property  BOOL shouldTintNormalImage
 @property  UIColor *selectedColor
 @property  UIImage *templateImage

  // class methods
  +[AKToggleButton colorImage:withColor:]

  // instance methods
  -[AKToggleButton .cxx_destruct]
  -[AKToggleButton traitCollectionDidChange:]
  -[AKToggleButton setHighlighted:]
  -[AKToggleButton tintColorDidChange]
  -[AKToggleButton setSelected:]
  -[AKToggleButton setImage:forState:]
  -[AKToggleButton _touchCommitted:]
  -[AKToggleButton showsBackgroundColor]
  -[AKToggleButton _updateSelectionColorsAnimated:]
  -[AKToggleButton shouldTintNormalImage]
  -[AKToggleButton templateImage]
  -[AKToggleButton _setSelectedStateColorImage]
  -[AKToggleButton selectedColor]
  -[AKToggleButton _setDeselectedStateColorImage]
  -[AKToggleButton _updateStateColors]
  -[AKToggleButton initWithFrame:templateImage:autoUpdatesColor:]
  -[AKToggleButton setShowsBackgroundColor:]
  -[AKToggleButton setShouldTintNormalImage:]
  -[AKToggleButton setSelectedColor:]
  -[AKToggleButton setTemplateImage:]


AKEllipseLayer : CAShapeLayer /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
  // instance methods
  -[AKEllipseLayer init]
  -[AKEllipseLayer setBounds:]


AKTextAnnotationRenderHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKTextAnnotationRenderHelper renderAnnotationText:intoContext:isForScreen:pageControllerOrNil:]
  +[AKTextAnnotationRenderHelper unconstrainedSizeForText:]
  +[AKTextAnnotationRenderHelper _sharedLayoutManager]
  +[AKTextAnnotationRenderHelper _hitTestPoint:againstActualTextForAnnotation:onPageController:contextForVisualDebugging:]
  +[AKTextAnnotationRenderHelper getAnnotationRectangle:textBounds:containerSize:exclusionPaths:isTextClipped:forAnnotation:onPageController:orInContext:shouldAlignToPixels:optionalText:optionalCenter:optionalProposedRectangle:]
  +[AKTextAnnotationRenderHelper hitTestPoint:againstActualTextForAnnotation:onPageController:]


AKFastLayerSnapshotHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKFastLayerSnapshotHelper newFastSnapshotFromLayer:withSourceRect:acutalSnapshotRect:]


AKTextAnnotationAttributeHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKTextAnnotationAttributeHelper actualOrPlaceholderTextOfAnnotation:]
  +[AKTextAnnotationAttributeHelper newTextStorageOriginalFontSavvyWithString:attributes:]
  +[AKTextAnnotationAttributeHelper typingAttributes:byApplyingScaleFactor:]
  +[AKTextAnnotationAttributeHelper newTextStorage:byApplyingScaleFactor:]
  +[AKTextAnnotationAttributeHelper enumerateFontAttributesOfAttributedString:usingBlock:]
  +[AKTextAnnotationAttributeHelper font:byApplyingScaleFactor:]
  +[AKTextAnnotationAttributeHelper newTextStorageOriginalFontSavvyWithAttributedString:]
  +[AKTextAnnotationAttributeHelper placeholderTextOfAnnotation:]
  +[AKTextAnnotationAttributeHelper resolvedAlignmentAndDirection:locale:alignment:direction:]
  +[AKTextAnnotationAttributeHelper fontsOfAnnotations:]
  +[AKTextAnnotationAttributeHelper fontsOfEditor:]
  +[AKTextAnnotationAttributeHelper setFont:ofAnnotation:]
  +[AKTextAnnotationAttributeHelper setTextAlignment:ofAnnotation:]
  +[AKTextAnnotationAttributeHelper textAttributesOfAnnotations:]
  +[AKTextAnnotationAttributeHelper textAttributesOfEditor:]
  +[AKTextAnnotationAttributeHelper setTextAttributes:ofAnnotation:]
  +[AKTextAnnotationAttributeHelper adjustBoundsOfAnnotation:toFitOptionalText:onPageController:]
  +[AKTextAnnotationAttributeHelper adjustAnnotationBoundsToFitText:]


_AKNonMinibarToolbar : UIToolbar /usr/lib/libobjc.A.dylib
  // instance methods
  -[_AKNonMinibarToolbar isMinibar]


AKAttributesPickerButton : UIButton /usr/lib/libobjc.A.dylib
  // instance methods
  -[AKAttributesPickerButton layoutSubviews]


AKToolbarView : UIView /usr/lib/libobjc.A.dylib <AKToolsListViewControllerDelegate, AKAttributePickerViewControllerDelegate, AKSignaturesViewControllerDelegate, AKSignatureCreationControllerDelegate, UIPopoverPresentationControllerDelegate, PKPaletteViewAnnotationDelegate, PKPaletteViewPrivateDelegate>
 @property  BOOL undoRedoButtonsHidden
 @property  BOOL alwaysShowUndoButton
 @property  BOOL shareButtonHidden
 @property  id shareButtonTarget
 @property  SEL shareButtonAction
 @property  BOOL translucent
 @property  BOOL contentsHidden
 @property  BOOL useNewFullscreenPalette
 @property  BOOL supportsOpacityEditing
 @property  <AKToolbarViewOpacityEditingDelegate> *opacityEditingDelegate
 @property  BOOL wantsClearBackgroundColorInCompactSize
 @property  AKController *annotationController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKToolbarView undoButtonImage]
  +[AKToolbarView redoButtonImage]
  +[AKToolbarView undoButtonImageWithStyle:]
  +[AKToolbarView redoButtonImageWithStyle:]

  // instance methods
  -[AKToolbarView dealloc]
  -[AKToolbarView .cxx_destruct]
  -[AKToolbarView setOpaque:]
  -[AKToolbarView setHidden:]
  -[AKToolbarView setBackgroundColor:]
  -[AKToolbarView intrinsicContentSize]
  -[AKToolbarView initWithFrame:]
  -[AKToolbarView traitCollectionDidChange:]
  -[AKToolbarView sizeThatFits:]
  -[AKToolbarView setAlpha:]
  -[AKToolbarView layoutSubviews]
  -[AKToolbarView presentedViewController]
  -[AKToolbarView updateConstraints]
  -[AKToolbarView pointInside:withEvent:]
  -[AKToolbarView adaptivePresentationStyleForPresentationController:traitCollection:]
  -[AKToolbarView canBecomeFirstResponder]
  -[AKToolbarView didMoveToWindow]
  -[AKToolbarView willMoveToWindow:]
  -[AKToolbarView popoverPresentationControllerShouldDismissPopover:]
  -[AKToolbarView popoverPresentationController:willRepositionPopoverToRect:inView:]
  -[AKToolbarView hitTest:withEvent:]
  -[AKToolbarView isTranslucent]
  -[AKToolbarView setTranslucent:]
  -[AKToolbarView setBackgroundImage:forToolbarPosition:barMetrics:]
  -[AKToolbarView setShadowImage:forToolbarPosition:]
  -[AKToolbarView annotationController]
  -[AKToolbarView selectedAnnotations]
  -[AKToolbarView setShareButtonHidden:]
  -[AKToolbarView setAnnotationController:]
  -[AKToolbarView contentsHidden]
  -[AKToolbarView setContentsHidden:]
  -[AKToolbarView _undoManagerNotification:]
  -[AKToolbarView _annotationSelectionNotification:]
  -[AKToolbarView _textEffectsWindowIsHosted:]
  -[AKToolbarView _keyWindowDidBecomeActive:]
  -[AKToolbarView _undo:]
  -[AKToolbarView _undoLongPress:]
  -[AKToolbarView _redo:]
  -[AKToolbarView _showShapesPicker:]
  -[AKToolbarView _showTextAttributes:]
  -[AKToolbarView _safeAreaInsetsWithCachingIfNeeded]
  -[AKToolbarView _setupPaletteViewIfNecessary]
  -[AKToolbarView _forceToolPickerVisible:]
  -[AKToolbarView hideModernToolbarView]
  -[AKToolbarView popoverPresentingController]
  -[AKToolbarView _updatePalette]
  -[AKToolbarView _setToolPickerVisible:forResponder:]
  -[AKToolbarView _updateAttributeControllerInk:]
  -[AKToolbarView forceHideRuler]
  -[AKToolbarView shouldHide]
  -[AKToolbarView setSupportsOpacityEditing:]
  -[AKToolbarView revalidateItems]
  -[AKToolbarView shouldUseCompactWidth]
  -[AKToolbarView useNewFullscreenPalette]
  -[AKToolbarView wantsClearBackgroundColorInCompactSize]
  -[AKToolbarView setWantsClearBackgroundColorInCompactSize:]
  -[AKToolbarView setContentsHidden:animated:]
  -[AKToolbarView _saveCachedSafeAreaInsets]
  -[AKToolbarView _shouldUseCachedSafeAreaInsets:]
  -[AKToolbarView _cleanupAfterUndoAlert]
  -[AKToolbarView _undoAll:]
  -[AKToolbarView _showShapeAttributes:]
  -[AKToolbarView _installAttributesPickerButtonInPaletteContextEditingViewIfNeeded]
  -[AKToolbarView _updateAttributesPickerButtonWithCurrentSelection:]
  -[AKToolbarView _showUndoAlertPopover:]
  -[AKToolbarView _showMarkupToolsPopover:]
  -[AKToolbarView _dismissCurrentlyPresentedPopoverAnimated:withCompletion:]
  -[AKToolbarView _showTextStylePopover:]
  -[AKToolbarView _showShapeAttributesPopover:]
  -[AKToolbarView signaturesViewControllerContinueToCreateSignature:]
  -[AKToolbarView signaturesViewControllerContinueToManageSignatures:]
  -[AKToolbarView signaturesViewControllerDidCancel:]
  -[AKToolbarView _setPopoverPresentationSource:fromSender:sourceRect:]
  -[AKToolbarView _presentViewController:animated:]
  -[AKToolbarView _setPopoverPresentationSource:fromSender:]
  -[AKToolbarView didDismissPopover]
  -[AKToolbarView _updateTraitCollectionForViewController:]
  -[AKToolbarView createUndoViewController]
  -[AKToolbarView _showSignaturesPopover:fromSourceView:sourceRect:]
  -[AKToolbarView opacityEditingDelegate]
  -[AKToolbarView supportsOpacityEditing]
  -[AKToolbarView endOpacityEditing]
  -[AKToolbarView frameObscuredInView:]
  -[AKToolbarView toolsList:didSelectToolWithTag:]
  -[AKToolbarView toolsListDidSelectOpacityItem:]
  -[AKToolbarView attributePicker:didSelectToolWithTag:attributeTag:]
  -[AKToolbarView signaturesViewControllerDidSelectSignature:]
  -[AKToolbarView signatureCreationControllerDidCreateSignature:]
  -[AKToolbarView dismissPalettePopoverWithCompletion:]
  -[AKToolbarView paletteViewDidChangePosition:]
  -[AKToolbarView paletteViewDidSelectPlusButton:]
  -[AKToolbarView paletteViewDidSelectOpacityOption:]
  -[AKToolbarView paletteViewSelectedAnnotationColor:]
  -[AKToolbarView paletteViewUndoManager:]
  -[AKToolbarView paletteViewSelectedToolInkDidChange:]
  -[AKToolbarView paletteViewDidToggleRuler:]
  -[AKToolbarView paletteView:shouldSetSelectedToolColor:]
  -[AKToolbarView setToolPickerVisible:forFirstResponder:]
  -[AKToolbarView layoutForSize:]
  -[AKToolbarView shouldUseCompactHeight]
  -[AKToolbarView resetToLastDrawingTool]
  -[AKToolbarView _showColorPicker:]
  -[AKToolbarView setUndoRedoButtonsHidden:]
  -[AKToolbarView setShareButtonAction:]
  -[AKToolbarView shareButtonAction]
  -[AKToolbarView setShareButtonTarget:]
  -[AKToolbarView shareButtonTarget]
  -[AKToolbarView isPresentingPopovers]
  -[AKToolbarView isPresentingPopover]
  -[AKToolbarView dismissPresentedPopovers]
  -[AKToolbarView tagForPKPaletteAnnotationType:]
  -[AKToolbarView inkPicker]
  -[AKToolbarView undoRedoButtonsHidden]
  -[AKToolbarView alwaysShowUndoButton]
  -[AKToolbarView setAlwaysShowUndoButton:]
  -[AKToolbarView isShareButtonHidden]
  -[AKToolbarView setOpacityEditingDelegate:]


AKSignature : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSUUID *uniqueID
 @property  NSDate *creationDate
 @property  double baselineOffset
 @property  BOOL shouldPersist
 @property  ^{CGPath=} path
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} pathBounds
 @property  PKDrawing *drawing

  // class methods
  +[AKSignature supportsSecureCoding]

  // instance methods
  -[AKSignature init]
  -[AKSignature dealloc]
  -[AKSignature isEqual:]
  -[AKSignature copyWithZone:]
  -[AKSignature encodeWithCoder:]
  -[AKSignature initWithCoder:]
  -[AKSignature .cxx_destruct]
  -[AKSignature path]
  -[AKSignature setPath:]
  -[AKSignature uniqueID]
  -[AKSignature creationDate]
  -[AKSignature setCreationDate:]
  -[AKSignature baselineOffset]
  -[AKSignature setBaselineOffset:]
  -[AKSignature setUniqueID:]
  -[AKSignature initWithDrawing:path:baselineOffset:creationDate:]
  -[AKSignature initWithDrawing:path:baselineOffset:]
  -[AKSignature shouldPersist]
  -[AKSignature drawing]
  -[AKSignature setShouldPersist:]
  -[AKSignature initForTesting]
  -[AKSignature pathBounds]


AKArrowShapeAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKArrowShapeAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKArrowShapeAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKArrowShapeAnnotationRenderer _concreteTextBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKArrowShapeAnnotationRenderer _newConcreteTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKArrowShapeAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKArrowShapeAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKArrowShapeAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKArrowShapeAnnotationRenderer _drawPathForArrowShape:inContext:inPath:]


AKSecureSerializationHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKSecureSerializationHelper encodeColor:]
  +[AKSecureSerializationHelper decodeColor:]
  +[AKSecureSerializationHelper encodeFont:]
  +[AKSecureSerializationHelper decodeFont:]
  +[AKSecureSerializationHelper encodeTextAttributes:]
  +[AKSecureSerializationHelper decodeTextAttributes:]
  +[AKSecureSerializationHelper _callXPCServiceProxyWithInputData:andSelector:]
  +[AKSecureSerializationHelper _encodeAttributedStringAsRTFData:]
  +[AKSecureSerializationHelper _encodeTextAttributesAsRTFData:]
  +[AKSecureSerializationHelper _decodeTextPropertiesForAnnotation:withSecureCoder:]
  +[AKSecureSerializationHelper _unsafeLegacyDecodeTextPropertiesForAnnotation:withNonSecureCoder:]
  +[AKSecureSerializationHelper dataForSecureCodingCompliantObject:withOptionalKey:]
  +[AKSecureSerializationHelper secureCodingCompliantObjectForData:ofClasses:withOptionalKey:]
  +[AKSecureSerializationHelper _decodeTextAttributesFromRTFData:]
  +[AKSecureSerializationHelper _securelyConvertLegacyTextAttributeDataToRTFData:]
  +[AKSecureSerializationHelper _decodeRTFTextPropertiesWithSecureCoder:annotationTextRTF:typingAttributesRTF:]
  +[AKSecureSerializationHelper _decodeLegacyTextPropertiesWithSecureCoder:annotationTextRTF:typingAttributesRTF:]
  +[AKSecureSerializationHelper _decodeAttributedStringFromRTFData:]
  +[AKSecureSerializationHelper _securelyConvertLegacyAnnotationArchiveToRTFArchive:]
  +[AKSecureSerializationHelper _unsafeLegacyDecodeTextAttributesFromData:]
  +[AKSecureSerializationHelper convertLegacyModelControllerArchive:]
  +[AKSecureSerializationHelper encodeTextPropertiesOfAnnotation:withCoder:]
  +[AKSecureSerializationHelper decodeTextPropertiesOfAnnotation:withSecureCoder:]
  +[AKSecureSerializationHelper insecurelyConvertLegacyModelControllerArchive:]
  +[AKSecureSerializationHelper insecurelyConvertLegacyAnnotationArchiveToRTFArchive:]
  +[AKSecureSerializationHelper insecurelyConvertLegacyTextAttributeDataToRTFData:]


AKDoodleAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKDoodleAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKDoodleAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKDoodleAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKDoodleAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKDoodleAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]


AKShapeDetectionController : NSObject /usr/lib/libc++.1.dylib
 @property  CHDrawing *lastDrawing
 @property  double veryHighConfidenceLevel
 @property  CHDrawing *candidateDrawing
 @property  NSMutableArray *candidateAKTags
 @property  NSMutableDictionary *candidateAKTagsToAnnotationInfoMap
 @property  AKCandidatePickerView_iOS *candidatePickerView
 @property  <AKShapeDetectionControllerDelegate> *delegate
 @property  AKController *controller
 @property  AKAnnotation *candidateAnnotation
 @property  CHRecognizer *shapeRecognizer
 @property  BOOL isShowingCandidatePicker
 @property  BOOL preferDoodle
 @property  BOOL coalescesDoodles
 @property  BOOL shapeDetectionEnabled
 @property  BOOL isPreviousCandidateAnnotationUndecided
 @property  AKPageModelController *modelControllerToObserveForAnnotationsAndSelections

  // class methods
  +[AKShapeDetectionController drawingIsValidForRecognition:withPath:]
  +[AKShapeDetectionController logAllResults:]

  // instance methods
  -[AKShapeDetectionController dealloc]
  -[AKShapeDetectionController delegate]
  -[AKShapeDetectionController setDelegate:]
  -[AKShapeDetectionController .cxx_destruct]
  -[AKShapeDetectionController observeValueForKeyPath:ofObject:change:context:]
  -[AKShapeDetectionController reset]
  -[AKShapeDetectionController setController:]
  -[AKShapeDetectionController controller]
  -[AKShapeDetectionController initWithController:]
  -[AKShapeDetectionController setVeryHighConfidenceLevel:]
  -[AKShapeDetectionController setIsPreviousCandidateAnnotationUndecided:]
  -[AKShapeDetectionController _shouldDismissNotification:]
  -[AKShapeDetectionController candidatePickerView]
  -[AKShapeDetectionController _teardownCandidatePicker]
  -[AKShapeDetectionController isShowingCandidatePicker]
  -[AKShapeDetectionController dismissCandidatePicker]
  -[AKShapeDetectionController isPreviousCandidateAnnotationUndecided]
  -[AKShapeDetectionController clearPreviousCandidateAnnotation]
  -[AKShapeDetectionController candidateAnnotation]
  -[AKShapeDetectionController setCandidateAnnotation:]
  -[AKShapeDetectionController setCandidateAKTags:]
  -[AKShapeDetectionController setCandidateAKTagsToAnnotationInfoMap:]
  -[AKShapeDetectionController setCandidateDrawing:]
  -[AKShapeDetectionController candidateAKTags]
  -[AKShapeDetectionController _createAnnotationWithRecognizerResult:forDrawingBoundsInInputView:shouldGoToPageController:]
  -[AKShapeDetectionController candidateAKTagsToAnnotationInfoMap]
  -[AKShapeDetectionController _presentCandidatePickerBarWithCandidates:ofDrawing:]
  -[AKShapeDetectionController _teardownCandidatePickerBar]
  -[AKShapeDetectionController modelControllerToObserveForAnnotationsAndSelections]
  -[AKShapeDetectionController _matchingBlurEffectStyleForCurrentTintColor:]
  -[AKShapeDetectionController _pickCandidateResult:]
  -[AKShapeDetectionController setCandidatePickerView:]
  -[AKShapeDetectionController _pickCandidateResultWithAnnotationType:]
  -[AKShapeDetectionController _performRecognitionOnDrawing:withInkDrawing:orWithDoodlePath:boundsInInputView:center:isPrestroked:optionalAnnotation:]
  -[AKShapeDetectionController convertDrawingBoundsInInputView:outBoundsInPageModel:]
  -[AKShapeDetectionController _createFlippedCHDrawingFromCHDrawing:withDrawingCenter:]
  -[AKShapeDetectionController shapeRecognizer]
  -[AKShapeDetectionController createInkResultFromInkDrawing:annotation:]
  -[AKShapeDetectionController _createDoodleShapeResultWithPath:withDrawingCenter:pathIsPrestroked:]
  -[AKShapeDetectionController _isResultVeryHighConfidence:]
  -[AKShapeDetectionController _toolTagForCHRecognitionResult:]
  -[AKShapeDetectionController _showCandidatePickerWithTypes:forDrawingInInputView:shouldSurfaceDoodle:]
  -[AKShapeDetectionController veryHighConfidenceLevel]
  -[AKShapeDetectionController lastDrawing]
  -[AKShapeDetectionController setModelControllerToObserveForAnnotationsAndSelections:]
  -[AKShapeDetectionController performRecognitionOnDrawing:withDrawing:annotation:boundsInInputView:center:]
  -[AKShapeDetectionController performRecognitionOnDrawing:withPath:boundsInInputView:center:isPrestroked:]
  -[AKShapeDetectionController logLastDrawingToDisk]
  -[AKShapeDetectionController setShapeRecognizer:]
  -[AKShapeDetectionController preferDoodle]
  -[AKShapeDetectionController setPreferDoodle:]
  -[AKShapeDetectionController coalescesDoodles]
  -[AKShapeDetectionController setCoalescesDoodles:]
  -[AKShapeDetectionController shapeDetectionEnabled]
  -[AKShapeDetectionController setShapeDetectionEnabled:]
  -[AKShapeDetectionController setLastDrawing:]
  -[AKShapeDetectionController candidateDrawing]


AKShapeToCHRecognitionResult : NSObject /usr/lib/libc++.1.dylib
 @property  long long tag
 @property  CHRecognitionResult *result
 @property  UIBezierPath *doodlePath
 @property  PKDrawing *inkDrawing
 @property  AKAnnotation *annotation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} doodlePathBoundsInInputView
 @property  BOOL doodlePathIsPrestroked

  // instance methods
  -[AKShapeToCHRecognitionResult .cxx_destruct]
  -[AKShapeToCHRecognitionResult result]
  -[AKShapeToCHRecognitionResult setResult:]
  -[AKShapeToCHRecognitionResult tag]
  -[AKShapeToCHRecognitionResult setTag:]
  -[AKShapeToCHRecognitionResult annotation]
  -[AKShapeToCHRecognitionResult setAnnotation:]
  -[AKShapeToCHRecognitionResult initWith:result:]
  -[AKShapeToCHRecognitionResult doodlePath]
  -[AKShapeToCHRecognitionResult doodlePathBoundsInInputView]
  -[AKShapeToCHRecognitionResult doodlePathIsPrestroked]
  -[AKShapeToCHRecognitionResult setDoodlePath:]
  -[AKShapeToCHRecognitionResult setDoodlePathIsPrestroked:]
  -[AKShapeToCHRecognitionResult setDoodlePathBoundsInInputView:]
  -[AKShapeToCHRecognitionResult setInkDrawing:]
  -[AKShapeToCHRecognitionResult inkDrawing]


AKInkAnnotationDrawingImageCache : NSObject /usr/lib/libc++.1.dylib
 @property  NSPointerArray *pointerArray

  // class methods
  +[AKInkAnnotationDrawingImageCache sharedCache]
  +[AKInkAnnotationDrawingImageCache purgeSharedCache]

  // instance methods
  -[AKInkAnnotationDrawingImageCache init]
  -[AKInkAnnotationDrawingImageCache objectForKeyedSubscript:]
  -[AKInkAnnotationDrawingImageCache .cxx_destruct]
  -[AKInkAnnotationDrawingImageCache setObject:forKeyedSubscript:]
  -[AKInkAnnotationDrawingImageCache _makeKeyMostRecentlyUsed:]
  -[AKInkAnnotationDrawingImageCache _indexOfPointer:]
  -[AKInkAnnotationDrawingImageCache _removeEntryAtIndex:]
  -[AKInkAnnotationDrawingImageCache _addEntryWithObject:key:]
  -[AKInkAnnotationDrawingImageCache _purgeExtraEntries]
  -[AKInkAnnotationDrawingImageCache pointerArray]
  -[AKInkAnnotationDrawingImageCache setPointerArray:]


AKTapGestureRecognizer : UITapGestureRecognizer /usr/lib/libobjc.A.dylib <AKPenDetectionGestureRecognizerProtocol>
 @property  BOOL penGestureDetected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKTapGestureRecognizer reset]
  -[AKTapGestureRecognizer touchesBegan:withEvent:]
  -[AKTapGestureRecognizer touchesMoved:withEvent:]
  -[AKTapGestureRecognizer touchesEnded:withEvent:]
  -[AKTapGestureRecognizer touchesCancelled:withEvent:]
  -[AKTapGestureRecognizer setPenGestureDetected:]
  -[AKTapGestureRecognizer _checkTouchesForStylus:]
  -[AKTapGestureRecognizer penGestureDetected]


AKTwoPointRectangularTextPointOfInterestHelper : AKAnnotationPointOfInterestHelper
  // class methods
  +[AKTwoPointRectangularTextPointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKTwoPointRectangularTextPointOfInterestHelper _concreteDraggableAreaForPointOfInterestWithIndex:ofAnnotation:onPageController:]
  +[AKTwoPointRectangularTextPointOfInterestHelper _concreteValidatePoint:ofDraggableArea:forAnnotation:onPageController:]


AKLineStylePicker : AKModernToolbarPicker
 @property  unsigned long lineType
 @property  long long lineStyle

  // instance methods
  -[AKLineStylePicker lineType]
  -[AKLineStylePicker _shapeTagForType:]
  -[AKLineStylePicker _buttonImagesForType:]
  -[AKLineStylePicker _styleButtonPressed:]
  -[AKLineStylePicker initWithFrame:lineType:controller:]
  -[AKLineStylePicker revalidateItems:]
  -[AKLineStylePicker lineStyle]


AKAttributeController : NSObject /usr/lib/libc++.1.dylib
 @property  AKController *controller
 @property  UIColor *strokeColor
 @property  UIColor *fillColor
 @property  PKInk *ink
 @property  double strokeWidth
 @property  BOOL strokeIsDashed
 @property  BOOL hasShadow
 @property  long long brushStyle
 @property  unsigned long arrowHeadStyle
 @property  UIFont *font
 @property  NSDictionary *textAttributes
 @property  AKPageModelController *modelControllerToObserveForSelections
 @property  long long highlightStyle

  // class methods
  +[AKAttributeController initialize]
  +[AKAttributeController defaultFont]
  +[AKAttributeController defaultTextAttributes]

  // instance methods
  -[AKAttributeController .cxx_destruct]
  -[AKAttributeController observeValueForKeyPath:ofObject:change:context:]
  -[AKAttributeController setFont:]
  -[AKAttributeController font]
  -[AKAttributeController fillColor]
  -[AKAttributeController highlightStyle]
  -[AKAttributeController setHighlightStyle:]
  -[AKAttributeController hasShadow]
  -[AKAttributeController textAttributes]
  -[AKAttributeController setTextAttributes:]
  -[AKAttributeController setController:]
  -[AKAttributeController controller]
  -[AKAttributeController setFillColor:]
  -[AKAttributeController setStrokeColor:]
  -[AKAttributeController setHasShadow:]
  -[AKAttributeController strokeColor]
  -[AKAttributeController strokeWidth]
  -[AKAttributeController initWithController:]
  -[AKAttributeController setStrokeWidth:]
  -[AKAttributeController setArrowHeadStyle:]
  -[AKAttributeController ink]
  -[AKAttributeController setInk:]
  -[AKAttributeController brushStyle]
  -[AKAttributeController forceHideRuler]
  -[AKAttributeController annotationEditingDidEndWithCompletion:]
  -[AKAttributeController setDefaultInk]
  -[AKAttributeController toggleRuler]
  -[AKAttributeController arrowHeadStyle]
  -[AKAttributeController _restorePersistedAttributes]
  -[AKAttributeController beganDrawingStroke]
  -[AKAttributeController didEndOrCancelStroke]
  -[AKAttributeController _syncAttributesFromSelectedAnnotationsToUI]
  -[AKAttributeController _updateInk]
  -[AKAttributeController _persistCurrentAttributes]
  -[AKAttributeController _syncAttributesFromSenderToSelfAndSelectedAnnotations:segment:]
  -[AKAttributeController modelControllerToObserveForSelections]
  -[AKAttributeController _isEnabledForSender:segment:withSelectedAnnotations:]
  -[AKAttributeController _updateStateOnSender:segment:]
  -[AKAttributeController _disableInkPicker:]
  -[AKAttributeController strokeIsDashed]
  -[AKAttributeController setStrokeIsDashed:]
  -[AKAttributeController setBrushStyle:]
  -[AKAttributeController updateInkIfNeeded:]
  -[AKAttributeController syncFillColorOnSelectionToUI]
  -[AKAttributeController syncStrokeColorOnSelectionToUI]
  -[AKAttributeController _updateStateOnSender:segment:fromSelectedAnnotations:]
  -[AKAttributeController _updateStateOnSenderFromSelf:segment:]
  -[AKAttributeController _allAnnotations:all:atLeastOneShare:attributeFromTag:]
  -[AKAttributeController performAttributeActionForSender:segment:]
  -[AKAttributeController isAttributeSenderEnabled:segment:]
  -[AKAttributeController updateAttributeSenderState:segment:enabled:]
  -[AKAttributeController strokeColorIsEqualTo:]
  -[AKAttributeController restoreStrokeColorToSystemDefault]
  -[AKAttributeController setModelControllerToObserveForSelections:]
  -[AKAttributeController resetToLastDrawingInk]


AKPolygonAdornmentLayer : AKAdornmentLayer
  // instance methods
  -[AKPolygonAdornmentLayer updateAdornmentElements]
  -[AKPolygonAdornmentLayer updateSublayersWithScale:]
  -[AKPolygonAdornmentLayer needsUpdateWhenDraggingStartsOrEnds]


AKFillableShapeStylePicker : AKModernToolbarPicker
 @property  BOOL showFill

  // instance methods
  -[AKFillableShapeStylePicker .cxx_destruct]
  -[AKFillableShapeStylePicker initWithFrame:controller:]
  -[AKFillableShapeStylePicker _styleButtonPressed:]
  -[AKFillableShapeStylePicker revalidateItems:]
  -[AKFillableShapeStylePicker _updateImagesForAnnotationType:]
  -[AKFillableShapeStylePicker setShowFill:]
  -[AKFillableShapeStylePicker showFill]


AKColorPaletteView : UIControl /usr/lib/libobjc.A.dylib <UICollectionViewDataSource, UICollectionViewDelegate, AKInkIsUpdatable, AKUserInterfaceItem, AKColorChooserUserInterfaceItem>
 @property  UICollectionView *collectionView
 @property  NSArray *colors
 @property  UIColor *color
 @property  long long scrollDirection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKColorPaletteView initWithCoder:]
  -[AKColorPaletteView .cxx_destruct]
  -[AKColorPaletteView color]
  -[AKColorPaletteView setColor:]
  -[AKColorPaletteView _commonInit]
  -[AKColorPaletteView initWithFrame:]
  -[AKColorPaletteView layoutSubviews]
  -[AKColorPaletteView collectionView]
  -[AKColorPaletteView numberOfSectionsInCollectionView:]
  -[AKColorPaletteView collectionView:numberOfItemsInSection:]
  -[AKColorPaletteView collectionView:cellForItemAtIndexPath:]
  -[AKColorPaletteView setColors:]
  -[AKColorPaletteView setScrollDirection:]
  -[AKColorPaletteView scrollDirection]
  -[AKColorPaletteView setCollectionView:]
  -[AKColorPaletteView collectionView:didSelectItemAtIndexPath:]
  -[AKColorPaletteView colors]
  -[AKColorPaletteView wantsInkUpdate]
  -[AKColorPaletteView _itemSizeInContainer]
  -[AKColorPaletteView _indexPathOfColor:]
  -[AKColorPaletteView scrollToCurrentColor]


AKPopupAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKPopupAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKPopupAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKPopupAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKPopupAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKPopupAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]


AKTextOverflowIndicatorLayer : CAShapeLayer /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
  // instance methods
  -[AKTextOverflowIndicatorLayer init]


AKArrowAnnotation : AKShapeAnnotation <AKTextAnnotationProtocol>
 @property  {CGPoint=dd} startPoint
 @property  {CGPoint=dd} endPoint
 @property  {CGPoint=dd} midPoint
 @property  unsigned long arrowHeadStyle
 @property  NSTextStorage *annotationText
 @property  NSDictionary *typingAttributes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isEditingText
 @property  BOOL textIsFixedWidth
 @property  BOOL textIsFixedHeight
 @property  BOOL textIsClipped
 @property  BOOL shouldUsePlaceholderText

  // class methods
  +[AKArrowAnnotation supportsSecureCoding]
  +[AKArrowAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKArrowAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKArrowAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKArrowAnnotation init]
  -[AKArrowAnnotation encodeWithCoder:]
  -[AKArrowAnnotation initWithCoder:]
  -[AKArrowAnnotation .cxx_destruct]
  -[AKArrowAnnotation displayName]
  -[AKArrowAnnotation typingAttributes]
  -[AKArrowAnnotation setTypingAttributes:]
  -[AKArrowAnnotation setStartPoint:]
  -[AKArrowAnnotation setEndPoint:]
  -[AKArrowAnnotation startPoint]
  -[AKArrowAnnotation endPoint]
  -[AKArrowAnnotation annotationText]
  -[AKArrowAnnotation setAnnotationText:]
  -[AKArrowAnnotation setMidPoint:]
  -[AKArrowAnnotation setArrowHeadStyle:]
  -[AKArrowAnnotation keysForValuesToObserveForUndo]
  -[AKArrowAnnotation midPoint]
  -[AKArrowAnnotation keysForValuesToObserveForRedrawing]
  -[AKArrowAnnotation adjustModelToCompensateForOriginalExif]
  -[AKArrowAnnotation hitTestBounds]
  -[AKArrowAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKArrowAnnotation translateBy:]
  -[AKArrowAnnotation keysForValuesToObserveForAdornments]
  -[AKArrowAnnotation arrowHeadStyle]


AKShapesPicker : AKModernToolbarPicker
 @property  NSArray *shapes
 @property  long long style

  // instance methods
  -[AKShapesPicker .cxx_destruct]
  -[AKShapesPicker style]
  -[AKShapesPicker setStyle:]
  -[AKShapesPicker sizeThatFits:]
  -[AKShapesPicker layoutSubviews]
  -[AKShapesPicker shapes]
  -[AKShapesPicker setShapes:]
  -[AKShapesPicker _shapeButtonPressed:]
  -[AKShapesPicker _updateCurrentAppearanceIfNeeded]
  -[AKShapesPicker initWithFrame:shapeTags:]


AKImageAnnotationEventHandler : AKRectangularAnnotationEventHandler
  // instance methods
  -[AKImageAnnotationEventHandler updateModelWithCurrentPoint:]
  -[AKImageAnnotationEventHandler lockAspectRatioByDefault]
  -[AKImageAnnotationEventHandler naturalSizeForAnnotation]


AKTSDBezierPath : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSCoding>
  // class methods
  +[AKTSDBezierPath initialize]
  +[AKTSDBezierPath setLineWidth:]
  +[AKTSDBezierPath lineWidth]
  +[AKTSDBezierPath bezierPathWithRoundedRect:cornerRadius:]
  +[AKTSDBezierPath bezierPathWithRect:]
  +[AKTSDBezierPath bezierPathWithOvalInRect:]
  +[AKTSDBezierPath bezierPathWithCGPath:]
  +[AKTSDBezierPath bezierPath]
  +[AKTSDBezierPath fillRect:]
  +[AKTSDBezierPath strokeRect:]
  +[AKTSDBezierPath lineCapStyle]
  +[AKTSDBezierPath setLineCapStyle:]
  +[AKTSDBezierPath lineJoinStyle]
  +[AKTSDBezierPath setLineJoinStyle:]
  +[AKTSDBezierPath miterLimit]
  +[AKTSDBezierPath setMiterLimit:]
  +[AKTSDBezierPath flatness]
  +[AKTSDBezierPath setFlatness:]
  +[AKTSDBezierPath windingRule]
  +[AKTSDBezierPath setWindingRule:]
  +[AKTSDBezierPath bezierPathWithStart:end:]
  +[AKTSDBezierPath clipRect:]
  +[AKTSDBezierPath strokeLineFromPoint:toPoint:]
  +[AKTSDBezierPath setDefaultMiterLimit:]
  +[AKTSDBezierPath defaultMiterLimit]
  +[AKTSDBezierPath setDefaultFlatness:]
  +[AKTSDBezierPath defaultFlatness]
  +[AKTSDBezierPath setDefaultWindingRule:]
  +[AKTSDBezierPath defaultWindingRule]
  +[AKTSDBezierPath setDefaultLineCapStyle:]
  +[AKTSDBezierPath defaultLineCapStyle]
  +[AKTSDBezierPath setDefaultLineJoinStyle:]
  +[AKTSDBezierPath defaultLineJoinStyle]
  +[AKTSDBezierPath setDefaultLineWidth:]
  +[AKTSDBezierPath defaultLineWidth]

  // instance methods
  -[AKTSDBezierPath init]
  -[AKTSDBezierPath dealloc]
  -[AKTSDBezierPath length]
  -[AKTSDBezierPath copyWithZone:]
  -[AKTSDBezierPath isEmpty]
  -[AKTSDBezierPath encodeWithCoder:]
  -[AKTSDBezierPath initWithCoder:]
  -[AKTSDBezierPath cString]
  -[AKTSDBezierPath initWithCString:]
  -[AKTSDBezierPath bounds]
  -[AKTSDBezierPath elementAtIndex:]
  -[AKTSDBezierPath setLineWidth:]
  -[AKTSDBezierPath lineWidth]
  -[AKTSDBezierPath containsPoint:]
  -[AKTSDBezierPath CGPath]
  -[AKTSDBezierPath stroke]
  -[AKTSDBezierPath fill]
  -[AKTSDBezierPath moveToPoint:]
  -[AKTSDBezierPath closePath]
  -[AKTSDBezierPath setLineDash:count:phase:]
  -[AKTSDBezierPath appendBezierPathWithRect:]
  -[AKTSDBezierPath appendBezierPath:]
  -[AKTSDBezierPath lineToPoint:]
  -[AKTSDBezierPath addClip]
  -[AKTSDBezierPath removeAllPoints]
  -[AKTSDBezierPath bezierPathByReversingPath]
  -[AKTSDBezierPath currentPoint]
  -[AKTSDBezierPath getLineDash:count:phase:]
  -[AKTSDBezierPath appendBezierPathWithOvalInRect:]
  -[AKTSDBezierPath appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:]
  -[AKTSDBezierPath lineCapStyle]
  -[AKTSDBezierPath setLineCapStyle:]
  -[AKTSDBezierPath lineJoinStyle]
  -[AKTSDBezierPath setLineJoinStyle:]
  -[AKTSDBezierPath miterLimit]
  -[AKTSDBezierPath setMiterLimit:]
  -[AKTSDBezierPath flatness]
  -[AKTSDBezierPath setFlatness:]
  -[AKTSDBezierPath elementCount]
  -[AKTSDBezierPath pressure]
  -[AKTSDBezierPath windingRule]
  -[AKTSDBezierPath setWindingRule:]
  -[AKTSDBezierPath _deviceMoveToPoint:]
  -[AKTSDBezierPath _deviceLineToPoint:]
  -[AKTSDBezierPath _deviceCurveToPoint:controlPoint1:controlPoint2:]
  -[AKTSDBezierPath _deviceClosePath]
  -[AKTSDBezierPath subdivideBezierWithFlatness:startPoint:controlPoint1:controlPoint2:endPoint:]
  -[AKTSDBezierPath flattenIntoPath:]
  -[AKTSDBezierPath curveToPoint:controlPoint1:controlPoint2:]
  -[AKTSDBezierPath _doPath]
  -[AKTSDBezierPath controlPointBounds]
  -[AKTSDBezierPath elementAtIndex:associatedPoints:]
  -[AKTSDBezierPath elementAtIndex:allPoints:]
  -[AKTSDBezierPath calculateLengthOfElement:]
  -[AKTSDBezierPath calculateLengths]
  -[AKTSDBezierPath _appendToPath:]
  -[AKTSDBezierPath appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:]
  -[AKTSDBezierPath transformUsingAffineTransform:]
  -[AKTSDBezierPath _appendArcSegmentWithCenter:radius:angle1:angle2:]
  -[AKTSDBezierPath relativeMoveToPoint:]
  -[AKTSDBezierPath relativeLineToPoint:]
  -[AKTSDBezierPath relativeCurveToPoint:controlPoint1:controlPoint2:]
  -[AKTSDBezierPath bezierPathByFlatteningPath]
  -[AKTSDBezierPath _copyFlattenedPath]
  -[AKTSDBezierPath isFlat]
  -[AKTSDBezierPath isClockwise]
  -[AKTSDBezierPath lengthOfElement:]
  -[AKTSDBezierPath lengthToElement:]
  -[AKTSDBezierPath setAssociatedPoints:atIndex:]
  -[AKTSDBezierPath appendBezierPathWithPoints:count:]
  -[AKTSDBezierPath appendBezierPathWithArcFromPoint:toPoint:radius:]
  -[AKTSDBezierPath _addPathSegment:point:]
  -[AKTSDBezierPath getStartPoint:andEndPoint:]
  -[AKTSDBezierPath addIntersectionsWithPath:to:allIntersections:reversed:]
  -[AKTSDBezierPath appendBezierPath:fromSegment:t:toSegment:t:withoutMove:]
  -[AKTSDBezierPath recursiveSubdivideOntoPath:withScaling:inElementRange:into:]
  -[AKTSDBezierPath rawGradientAt:fromElement:]
  -[AKTSDBezierPath elementPercentage:forOverallPercentage:]
  -[AKTSDBezierPath gradientAt:fromElement:]
  -[AKTSDBezierPath pointAt:fromElement:]
  -[AKTSDBezierPath elementPercentageFromElement:forOverallPercentage:]
  -[AKTSDBezierPath curvatureAt:fromElement:]
  -[AKTSDBezierPath transformedTotalCoordinate:betweenElement:andElement:withPressure:getElement:getPercentage:]
  -[AKTSDBezierPath myGradientAt:fromElement:]
  -[AKTSDBezierPath addIntersectionsWithPath:to:]
  -[AKTSDBezierPath addIntersectionsWithLine:to:]
  -[AKTSDBezierPath appendBezierPath:fromSegment:toSegment:]
  -[AKTSDBezierPath copyFromSegment:t:toSegment:t:]
  -[AKTSDBezierPath nearestPointOnPathToLine:]
  -[AKTSDBezierPath nearestAngleOnPathToLine:]
  -[AKTSDBezierPath gradientAt:]
  -[AKTSDBezierPath transformedCoordinate:withPressure:]
  -[AKTSDBezierPath transformedTotalCoordinate:inElement:withPressure:]
  -[AKTSDBezierPath myGradientAt:]
  -[AKTSDBezierPath curvatureAt:]
  -[AKTSDBezierPath recursiveSubdivideOntoPath:into:]
  -[AKTSDBezierPath recursiveSubdivideOntoPath:withScaling:into:]
  -[AKTSDBezierPath chisel]


AKToolsPickerController : NSObject /usr/lib/libc++.1.dylib
 @property  UINavigationController *navController
 @property  UIViewController *toolsListController
 @property  AKController *controller

  // instance methods
  -[AKToolsPickerController .cxx_destruct]
  -[AKToolsPickerController navController]
  -[AKToolsPickerController setController:]
  -[AKToolsPickerController controller]
  -[AKToolsPickerController initWithController:]
  -[AKToolsPickerController setToolsListController:]
  -[AKToolsPickerController setNavController:]
  -[AKToolsPickerController toolsListController]


AKNoteEditorController : NSObject /usr/lib/libc++.1.dylib <AKNoteEditorViewControllerDelegate, UIPopoverPresentationControllerDelegate>
 @property  AKNoteEditorViewController *contentViewController
 @property  AKPopupAnnotation *annotation
 @property  NSString *editedText
 @property  <AKNoteEditorControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKNoteEditorController delegate]
  -[AKNoteEditorController setDelegate:]
  -[AKNoteEditorController .cxx_destruct]
  -[AKNoteEditorController setContentViewController:]
  -[AKNoteEditorController adaptivePresentationStyleForPresentationController:]
  -[AKNoteEditorController presentationController:viewControllerForAdaptivePresentationStyle:]
  -[AKNoteEditorController contentViewController]
  -[AKNoteEditorController hide]
  -[AKNoteEditorController annotation]
  -[AKNoteEditorController show:]
  -[AKNoteEditorController setAnnotation:]
  -[AKNoteEditorController _popupBackgroundColorForPopupAnnotation:]
  -[AKNoteEditorController finishEditing]
  -[AKNoteEditorController noteEditorViewControllerDidBeginEditing:]
  -[AKNoteEditorController noteEditorViewControllerDidEndEditing:]
  -[AKNoteEditorController editedText]
  -[AKNoteEditorController suggestedEditorHeightForWidth:]
  -[AKNoteEditorController beginEditing:]


AKPDFDocumentWrapper : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[AKPDFDocumentWrapper init]
  -[AKPDFDocumentWrapper dealloc]
  -[AKPDFDocumentWrapper pdfDocument]
  -[AKPDFDocumentWrapper initWithPDF:]


AKEightPointRectangularPointOfInterestHelper : AKAnnotationPointOfInterestHelper
  // class methods
  +[AKEightPointRectangularPointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKEightPointRectangularPointOfInterestHelper _concreteDraggableAreaForPointOfInterestWithIndex:ofAnnotation:onPageController:]
  +[AKEightPointRectangularPointOfInterestHelper _concreteValidatePoint:ofDraggableArea:forAnnotation:onPageController:]


AKTSDShape : NSObject /usr/lib/libc++.1.dylib
 @property  AKTSDBezierPath *path
 @property  AKTSDBrushStroke *stroke
 @property  AKTSDLineEnd *headLineEnd
 @property  AKTSDLineEnd *tailLineEnd

  // instance methods
  -[AKTSDShape init]
  -[AKTSDShape .cxx_destruct]
  -[AKTSDShape path]
  -[AKTSDShape setPath:]
  -[AKTSDShape stroke]
  -[AKTSDShape drawInContext:]
  -[AKTSDShape setStroke:]
  -[AKTSDShape clippedPathForLineEnds]
  -[AKTSDShape p_drawLineEndForHead:withDelta:inContext:useFastDrawing:]
  -[AKTSDShape strokeHeadLineEnd]
  -[AKTSDShape strokeTailLineEnd]
  -[AKTSDShape headLineEndPoint]
  -[AKTSDShape tailLineEndPoint]
  -[AKTSDShape headLineEndAngle]
  -[AKTSDShape tailLineEndAngle]
  -[AKTSDShape lineEndScale]
  -[AKTSDShape headLineEnd]
  -[AKTSDShape tailLineEnd]
  -[AKTSDShape p_validateHeadLineEnd]
  -[AKTSDShape p_validateTailLineEnd]
  -[AKTSDShape _newClippedPath]
  -[AKTSDShape p_invalidateClippedPath]
  -[AKTSDShape p_validateHeadAndTail]
  -[AKTSDShape p_computeAngle:point:cutSegment:cutT:forLineEndAtHead:]
  -[AKTSDShape p_invalidateHead]
  -[AKTSDShape p_invalidateTail]
  -[AKTSDShape setHeadLineEnd:]
  -[AKTSDShape setTailLineEnd:]


AKToolsListViewController : UIViewController /usr/lib/libobjc.A.dylib <UITableViewDelegate, UITableViewDataSource>
 @property  UITableView *tableView
 @property  NSArray *cellItemTypes
 @property  <AKToolsListViewControllerDelegate> *delegate
 @property  BOOL supportsOpacityEditing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKToolsListViewController defaultCellItemTypes]

  // instance methods
  -[AKToolsListViewController initWithCoder:]
  -[AKToolsListViewController delegate]
  -[AKToolsListViewController setDelegate:]
  -[AKToolsListViewController .cxx_destruct]
  -[AKToolsListViewController tableView]
  -[AKToolsListViewController initWithNibName:bundle:]
  -[AKToolsListViewController viewWillAppear:]
  -[AKToolsListViewController viewDidLoad]
  -[AKToolsListViewController tableView:numberOfRowsInSection:]
  -[AKToolsListViewController tableView:cellForRowAtIndexPath:]
  -[AKToolsListViewController setTableView:]
  -[AKToolsListViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[AKToolsListViewController tableView:heightForRowAtIndexPath:]
  -[AKToolsListViewController tableView:shouldHighlightRowAtIndexPath:]
  -[AKToolsListViewController tableView:didSelectRowAtIndexPath:]
  -[AKToolsListViewController _canShowWhileLocked]
  -[AKToolsListViewController setSupportsOpacityEditing:]
  -[AKToolsListViewController supportsOpacityEditing]
  -[AKToolsListViewController _shapeButtonPressed:]
  -[AKToolsListViewController _buttonViewForShapes]
  -[AKToolsListViewController cellItemTypes]
  -[AKToolsListViewController _buttonViewForText]
  -[AKToolsListViewController addRowView:toCellView:]
  -[AKToolsListViewController _buttonViewForSignature]
  -[AKToolsListViewController _buttonViewForLoupe]
  -[AKToolsListViewController _buttonViewForOpacity]
  -[AKToolsListViewController _shapesCellIndexRow]
  -[AKToolsListViewController _buttonViewWithImage:title:]
  -[AKToolsListViewController setCellItemTypes:]
  -[AKToolsListViewController _reloadCellItemTypes]


AKMarkupBarButtonItem : UIBarButtonItem /usr/lib/libobjc.A.dylib
 @property  UIButton *toggleButton
 @property  AKMarkupButtonContainerView *toggleView
 @property  UIImage *toggleButtonImage

  // class methods
  +[AKMarkupBarButtonItem markupBarButtonWithTarget:action:]

  // instance methods
  -[AKMarkupBarButtonItem init]
  -[AKMarkupBarButtonItem setEnabled:]
  -[AKMarkupBarButtonItem .cxx_destruct]
  -[AKMarkupBarButtonItem setTarget:]
  -[AKMarkupBarButtonItem setAction:]
  -[AKMarkupBarButtonItem setSelected:]
  -[AKMarkupBarButtonItem toggleView]
  -[AKMarkupBarButtonItem toggleButton]
  -[AKMarkupBarButtonItem setToggleButton:]
  -[AKMarkupBarButtonItem setToggleView:]
  -[AKMarkupBarButtonItem toggleButtonImage]
  -[AKMarkupBarButtonItem setToggleButtonImage:]


AKMarkupButtonContainerView : UIView /usr/lib/libobjc.A.dylib
 @property  UIButton *button
 @property  UIImage *templateImage
 @property  UIImage *colorizedImage
 @property  BOOL selected

  // instance methods
  -[AKMarkupButtonContainerView .cxx_destruct]
  -[AKMarkupButtonContainerView intrinsicContentSize]
  -[AKMarkupButtonContainerView initWithFrame:]
  -[AKMarkupButtonContainerView button]
  -[AKMarkupButtonContainerView sizeThatFits:]
  -[AKMarkupButtonContainerView layoutSubviews]
  -[AKMarkupButtonContainerView setSelected:]
  -[AKMarkupButtonContainerView selected]
  -[AKMarkupButtonContainerView updateForMiniBarState:]
  -[AKMarkupButtonContainerView setButton:]
  -[AKMarkupButtonContainerView _buttonSize]
  -[AKMarkupButtonContainerView templateImage]
  -[AKMarkupButtonContainerView setTemplateImage:]
  -[AKMarkupButtonContainerView colorizedImage]
  -[AKMarkupButtonContainerView setColorizedImage:]


AKPeripheralAvailabilityManager_iOS : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long currentAvailability

  // class methods
  +[AKPeripheralAvailabilityManager_iOS onlyDrawWithApplePencil]

  // instance methods
  -[AKPeripheralAvailabilityManager_iOS init]
  -[AKPeripheralAvailabilityManager_iOS dealloc]
  -[AKPeripheralAvailabilityManager_iOS teardown]
  -[AKPeripheralAvailabilityManager_iOS stopMonitoringForPeripheralConnection]
  -[AKPeripheralAvailabilityManager_iOS postConnectionStatusNotification]
  -[AKPeripheralAvailabilityManager_iOS startMonitoringForPeripheralConnection]
  -[AKPeripheralAvailabilityManager_iOS currentAvailability]
  -[AKPeripheralAvailabilityManager_iOS setCurrentAvailability:]


AKSignatureCreationViewController_iOS : UIViewController /usr/lib/libobjc.A.dylib <UINavigationBarDelegate>
 @property  UINavigationBar *navBar
 @property  AKSmoothPathView *pathView
 @property  AKInkSignatureView *signatureView
 @property  AKSignatureBaselineView *baselineView
 @property  UILabel *label
 @property  AKController *controller
 @property  UIResponder *responderToRestore
 @property  <AKSignatureCreationControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKSignatureCreationViewController_iOS delegate]
  -[AKSignatureCreationViewController_iOS setDelegate:]
  -[AKSignatureCreationViewController_iOS .cxx_destruct]
  -[AKSignatureCreationViewController_iOS setLabel:]
  -[AKSignatureCreationViewController_iOS label]
  -[AKSignatureCreationViewController_iOS loadView]
  -[AKSignatureCreationViewController_iOS becomeFirstResponder]
  -[AKSignatureCreationViewController_iOS willTransitionToTraitCollection:withTransitionCoordinator:]
  -[AKSignatureCreationViewController_iOS viewDidLoad]
  -[AKSignatureCreationViewController_iOS viewDidAppear:]
  -[AKSignatureCreationViewController_iOS viewDidDisappear:]
  -[AKSignatureCreationViewController_iOS canBecomeFirstResponder]
  -[AKSignatureCreationViewController_iOS positionForBar:]
  -[AKSignatureCreationViewController_iOS setController:]
  -[AKSignatureCreationViewController_iOS controller]
  -[AKSignatureCreationViewController_iOS _canShowWhileLocked]
  -[AKSignatureCreationViewController_iOS didReceiveMemoryWarning]
  -[AKSignatureCreationViewController_iOS prefersStatusBarHidden]
  -[AKSignatureCreationViewController_iOS setBaselineView:]
  -[AKSignatureCreationViewController_iOS baselineView]
  -[AKSignatureCreationViewController_iOS initWithController:]
  -[AKSignatureCreationViewController_iOS _cancel:]
  -[AKSignatureCreationViewController_iOS _done:]
  -[AKSignatureCreationViewController_iOS setNavBar:]
  -[AKSignatureCreationViewController_iOS navBar]
  -[AKSignatureCreationViewController_iOS _clear:]
  -[AKSignatureCreationViewController_iOS setSignatureView:]
  -[AKSignatureCreationViewController_iOS signatureView]
  -[AKSignatureCreationViewController_iOS setResponderToRestore:]
  -[AKSignatureCreationViewController_iOS responderToRestore]
  -[AKSignatureCreationViewController_iOS _setToolPickerVisible]
  -[AKSignatureCreationViewController_iOS _validateButtons]
  -[AKSignatureCreationViewController_iOS pathView]
  -[AKSignatureCreationViewController_iOS setPathView:]


AKTriangleAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKTriangleAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKTriangleAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKTriangleAnnotationRenderer _concreteTextBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKTriangleAnnotationRenderer _concreteRectangleForAnnotation:withTextBounds:]
  +[AKTriangleAnnotationRenderer _newConcreteTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKTriangleAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKTriangleAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKTriangleAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKTriangleAnnotationRenderer _newPathScaledToModelSpaceForAnnotation:]


AKInkOverlayView : UIView /usr/lib/libobjc.A.dylib <PKCanvasViewDelegate>
 @property  id drawingUndoTarget
 @property  {CGSize=dd} canvasSizeInPKDrawingSpace
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} previousPageRectInAKModel
 @property  AKPageController *pageController
 @property  PKCanvasView *canvasView
 @property  <AKInkOverlayViewDelegate> *delegate
 @property  PKInk *ink
 @property  UIGestureRecognizer *drawingGestureRecognizer
 @property  UIGestureRecognizer *pinchGestureRecognizer
 @property  <PKRulerHostingDelegate> *rulerHostingDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKInkOverlayView _convertRect:fromPageControllerModelSpace:toDrawingInCanvasViewSpace:]
  +[AKInkOverlayView newAKInkOverlayViewForCurrentPlatformWithPageController:drawingUndoTarget:]
  +[AKInkOverlayView newDrawingUndoTargetWithPageController:]

  // instance methods
  -[AKInkOverlayView delegate]
  -[AKInkOverlayView setDelegate:]
  -[AKInkOverlayView .cxx_destruct]
  -[AKInkOverlayView commonInit]
  -[AKInkOverlayView teardown]
  -[AKInkOverlayView initWithFrame:]
  -[AKInkOverlayView layoutSubviews]
  -[AKInkOverlayView didMoveToSuperview]
  -[AKInkOverlayView willMoveToSuperview:]
  -[AKInkOverlayView setCanvasView:]
  -[AKInkOverlayView canvasView]
  -[AKInkOverlayView awakeFromNib]
  -[AKInkOverlayView pageController]
  -[AKInkOverlayView setPageController:]
  -[AKInkOverlayView pinchGestureRecognizer]
  -[AKInkOverlayView setRulerHostingDelegate:]
  -[AKInkOverlayView ink]
  -[AKInkOverlayView setInk:]
  -[AKInkOverlayView initWithPageController:drawingUndoTarget:]
  -[AKInkOverlayView setDrawingUndoTarget:]
  -[AKInkOverlayView commonPostInit]
  -[AKInkOverlayView _updateCanvasViewInk]
  -[AKInkOverlayView setupInkView]
  -[AKInkOverlayView _calculateFixedPixelSize:drawingScale:]
  -[AKInkOverlayView drawingUndoTarget]
  -[AKInkOverlayView previousPageRectInAKModel]
  -[AKInkOverlayView canvasNeedsUpdate]
  -[AKInkOverlayView updatedDrawingForPageRectUpdate]
  -[AKInkOverlayView setPreviousPageRectInAKModel:]
  -[AKInkOverlayView setCanvasSizeInPKDrawingSpace:]
  -[AKInkOverlayView drawingGestureRecognizer]
  -[AKInkOverlayView canvasViewDrawingDidChange:]
  -[AKInkOverlayView removeStrokesFromDrawing:]
  -[AKInkOverlayView _canvasView:shouldBeginDrawingWithTouch:]
  -[AKInkOverlayView canvasViewDidBeginDrawing:]
  -[AKInkOverlayView canvasViewDidEndDrawing:]
  -[AKInkOverlayView _canvasView:beganStroke:]
  -[AKInkOverlayView _canvasView:endedStroke:]
  -[AKInkOverlayView _canvasView:cancelledStroke:]
  -[AKInkOverlayView canvasSizeInPKDrawingSpace]
  -[AKInkOverlayView rulerHostingDelegate]


_AKInkOverlayDrawingUndoTarget : NSObject /usr/lib/libc++.1.dylib
 @property  AKPageController *pageController

  // instance methods
  -[_AKInkOverlayDrawingUndoTarget .cxx_destruct]
  -[_AKInkOverlayDrawingUndoTarget pageController]
  -[_AKInkOverlayDrawingUndoTarget setPageController:]
  -[_AKInkOverlayDrawingUndoTarget initWithPageController:]
  -[_AKInkOverlayDrawingUndoTarget performUndo:]


AKSignatureView : UIView /usr/lib/libobjc.A.dylib
 @property  double currentWeight
 @property  unsigned long totalPointsAdded
 @property  {CGPoint=dd} strokeStartLocation
 @property  {CGPoint=dd} strokeLastLocation
 @property  double strokeStartTime
 @property  BOOL isAddingPointWithoutSmoothing
 @property  CHPointStrokeFIFO *strokeFIFO
 @property  CHBoxcarFilterPointFIFO *boxcarFIFO
 @property  CHQuadCurvePointFIFO *interpolatingFIFO
 @property  AKBitmapFIFO *bitmapFifo
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} aggregateInvalid
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} unionDrawingRect
 @property  double interfaceScale
 @property  <AKSignatureViewLiveDelegate> *liveDelegate
 @property  UIColor *strokeColor
 @property  double minPressure
 @property  double maxPressure
 @property  double minThickness
 @property  double maxThickness

  // instance methods
  -[AKSignatureView dealloc]
  -[AKSignatureView clear]
  -[AKSignatureView initWithCoder:]
  -[AKSignatureView .cxx_destruct]
  -[AKSignatureView teardown]
  -[AKSignatureView _commonInit]
  -[AKSignatureView setNeedsDisplayInRect:]
  -[AKSignatureView setFrame:]
  -[AKSignatureView initWithFrame:]
  -[AKSignatureView touchesBegan:withEvent:]
  -[AKSignatureView touchesMoved:withEvent:]
  -[AKSignatureView touchesEnded:withEvent:]
  -[AKSignatureView touchesCancelled:withEvent:]
  -[AKSignatureView drawRect:]
  -[AKSignatureView setStrokeColor:]
  -[AKSignatureView setInterpolatingFIFO:]
  -[AKSignatureView interpolatingFIFO]
  -[AKSignatureView setStrokeFIFO:]
  -[AKSignatureView strokeFIFO]
  -[AKSignatureView strokeColor]
  -[AKSignatureView setCurrentWeight:]
  -[AKSignatureView setMinPressure:]
  -[AKSignatureView setMaxPressure:]
  -[AKSignatureView setMinThickness:]
  -[AKSignatureView setMaxThickness:]
  -[AKSignatureView interfaceScale]
  -[AKSignatureView bitmapFifo]
  -[AKSignatureView totalPointsAdded]
  -[AKSignatureView setTotalPointsAdded:]
  -[AKSignatureView _windowBackingScaleFactor]
  -[AKSignatureView setBitmapFifo:]
  -[AKSignatureView setBoxcarFIFO:]
  -[AKSignatureView _forceRedisplay]
  -[AKSignatureView setStrokeStartTime:]
  -[AKSignatureView setStrokeLastLocation:]
  -[AKSignatureView strokeLastLocation]
  -[AKSignatureView setStrokeStartLocation:]
  -[AKSignatureView setIsAddingPointWithoutSmoothing:]
  -[AKSignatureView strokeStartTime]
  -[AKSignatureView strokeStartLocation]
  -[AKSignatureView currentWeight]
  -[AKSignatureView continueStrokeWithoutSmoothing:]
  -[AKSignatureView minPressure]
  -[AKSignatureView maxPressure]
  -[AKSignatureView minThickness]
  -[AKSignatureView maxThickness]
  -[AKSignatureView ak_forceAvailableForTouch:]
  -[AKSignatureView weightForValue:]
  -[AKSignatureView weightForTouch:]
  -[AKSignatureView startStroke:]
  -[AKSignatureView handleCoalescedTouches:forTouch:]
  -[AKSignatureView continueStroke:]
  -[AKSignatureView terminateStroke]
  -[AKSignatureView copyStrokedInterpolatedPath]
  -[AKSignatureView isAddingPointWithoutSmoothing]
  -[AKSignatureView boxcarFIFO]
  -[AKSignatureView aggregateInvalid]
  -[AKSignatureView setAggregateInvalid:]
  -[AKSignatureView unionDrawingRect]
  -[AKSignatureView setUnionDrawingRect:]
  -[AKSignatureView liveDelegate]
  -[AKSignatureView setLiveDelegate:]


AKHighlightAnnotationEventHandler : AKAnnotationEventHandler
  // class methods
  +[AKHighlightAnnotationEventHandler allowsDragging]

  // instance methods
  -[AKHighlightAnnotationEventHandler handleDownEvent:orRecognizer:]
  -[AKHighlightAnnotationEventHandler enterDraggableAreaEventTrackingLoopWithEvent:orRecognizer:]
  -[AKHighlightAnnotationEventHandler continueDraggableAreaEventTrackingLoopWithEvent:orRecognizer:]


AKToolbarViewController_iOS : AKToolbarViewController <AKSignaturesViewControllerDelegate, AKSignatureCreationControllerDelegate, UIPopoverPresentationControllerDelegate>
 @property  UIBarButtonItem *richSketchButton
 @property  UIBarButtonItem *sketchButton
 @property  UIBarButtonItem *inkButton
 @property  UIBarButtonItem *textButton
 @property  UIBarButtonItem *loupeButton
 @property  UIBarButtonItem *signatureButton
 @property  UIBarButtonItem *undoButton
 @property  UIBarButtonItem *redoButton
 @property  UIBarButtonItem *textStyleButton
 @property  UIBarButtonItem *lineStyleButton
 @property  UIBarButtonItem *strokeColorButton
 @property  NSArray *staticToolbarItems
 @property  UIAlertController *signaturesAlertController
 @property  UIAlertController *undoAlertController
 @property  AKSignaturesViewController_iOS *signaturesSheetViewController
 @property  AKLineStylesViewController *lineStylesViewController
 @property  AKTextAttributesViewController *textAttributesViewController
 @property  AKColorPickerViewController *colorPickerPopoverViewController
 @property  AKFloatingAttributePickerViewController *attributeToolbarViewController
 @property  NSLayoutConstraint *attributeToolbarViewControllerConstraint
 @property  UIView *floatingAttributeToolbarContainer
 @property  double visibleHeightOfAttributeBar
 @property  double heightIncludingAdditionalVisibleBars
 @property  UIColor *barTintColor
 @property  UIColor *tintColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKToolbarViewController_iOS dealloc]
  -[AKToolbarViewController_iOS .cxx_destruct]
  -[AKToolbarViewController_iOS observeValueForKeyPath:ofObject:change:context:]
  -[AKToolbarViewController_iOS loadView]
  -[AKToolbarViewController_iOS traitCollectionDidChange:]
  -[AKToolbarViewController_iOS tintColor]
  -[AKToolbarViewController_iOS setTintColor:]
  -[AKToolbarViewController_iOS textButton]
  -[AKToolbarViewController_iOS popoverPresentationControllerShouldDismissPopover:]
  -[AKToolbarViewController_iOS setBarTintColor:]
  -[AKToolbarViewController_iOS barTintColor]
  -[AKToolbarViewController_iOS initWithController:]
  -[AKToolbarViewController_iOS setTextButton:]
  -[AKToolbarViewController_iOS _undoManagerNotification:]
  -[AKToolbarViewController_iOS revalidateItems]
  -[AKToolbarViewController_iOS _dismissCurrentlyPresentedPopoverAnimated:withCompletion:]
  -[AKToolbarViewController_iOS _showTextStylePopover:]
  -[AKToolbarViewController_iOS signaturesViewControllerContinueToCreateSignature:]
  -[AKToolbarViewController_iOS signaturesViewControllerContinueToManageSignatures:]
  -[AKToolbarViewController_iOS signaturesViewControllerDidCancel:]
  -[AKToolbarViewController_iOS signaturesViewControllerDidSelectSignature:]
  -[AKToolbarViewController_iOS signatureCreationControllerDidCreateSignature:]
  -[AKToolbarViewController_iOS isPresentingPopovers]
  -[AKToolbarViewController_iOS isPresentingPopover]
  -[AKToolbarViewController_iOS dismissPresentedPopovers]
  -[AKToolbarViewController_iOS setFillColorUIDisplayToColor:]
  -[AKToolbarViewController_iOS setStrokeColorUIDisplayToColor:]
  -[AKToolbarViewController_iOS undoButton]
  -[AKToolbarViewController_iOS _buildBasicItems]
  -[AKToolbarViewController_iOS _peripheralAvailabilityDidUpdate:]
  -[AKToolbarViewController_iOS dismissAttributeToolbarForSelectedAnnotations]
  -[AKToolbarViewController_iOS setFloatingAttributeToolbarContainer:]
  -[AKToolbarViewController_iOS floatingAttributeToolbarContainer]
  -[AKToolbarViewController_iOS _legacyDoodlesEnabled]
  -[AKToolbarViewController_iOS _barButtonForToolbarType:]
  -[AKToolbarViewController_iOS setSketchButton:]
  -[AKToolbarViewController_iOS setInkButton:]
  -[AKToolbarViewController_iOS setSignatureButton:]
  -[AKToolbarViewController_iOS setLoupeButton:]
  -[AKToolbarViewController_iOS setUndoButton:]
  -[AKToolbarViewController_iOS setRedoButton:]
  -[AKToolbarViewController_iOS setTextStyleButton:]
  -[AKToolbarViewController_iOS setLineStyleButton:]
  -[AKToolbarViewController_iOS setStrokeColorButton:]
  -[AKToolbarViewController_iOS _layoutToolbarForTraitCollection:]
  -[AKToolbarViewController_iOS inkButton]
  -[AKToolbarViewController_iOS loupeButton]
  -[AKToolbarViewController_iOS signatureButton]
  -[AKToolbarViewController_iOS strokeColorButton]
  -[AKToolbarViewController_iOS lineStyleButton]
  -[AKToolbarViewController_iOS textStyleButton]
  -[AKToolbarViewController_iOS sketchButton]
  -[AKToolbarViewController_iOS setStaticToolbarItems:]
  -[AKToolbarViewController_iOS attributeToolbarViewController]
  -[AKToolbarViewController_iOS _updateToggleButton:withTraitCollection:]
  -[AKToolbarViewController_iOS staticToolbarItems]
  -[AKToolbarViewController_iOS _doodleModeToolbarImage]
  -[AKToolbarViewController_iOS richSketchButton]
  -[AKToolbarViewController_iOS redoButton]
  -[AKToolbarViewController_iOS dismissAttributeToolbarImmediately]
  -[AKToolbarViewController_iOS showAttributeToolbarForSelectedAnnotations:andToolMode:]
  -[AKToolbarViewController_iOS syncUIToSelectedColor]
  -[AKToolbarViewController_iOS colorPickerPopoverViewController]
  -[AKToolbarViewController_iOS _createNewToggleToolbarButtonWithImage:tag:target:selector:autoUpdatesColor:]
  -[AKToolbarViewController_iOS _showSignaturesPopover:]
  -[AKToolbarViewController_iOS _undoLongPressAction:]
  -[AKToolbarViewController_iOS _createNewCustomViewToolbarButtonWithImage:target:selector:]
  -[AKToolbarViewController_iOS _showLineStylePopover:]
  -[AKToolbarViewController_iOS _showColorPickerPopover:]
  -[AKToolbarViewController_iOS _createNewColorPickerToolbarButtonWithTarget:selector:]
  -[AKToolbarViewController_iOS visibleHeightOfAttributeBar]
  -[AKToolbarViewController_iOS signaturesAlertController]
  -[AKToolbarViewController_iOS signaturesSheetViewController]
  -[AKToolbarViewController_iOS lineStylesViewController]
  -[AKToolbarViewController_iOS textAttributesViewController]
  -[AKToolbarViewController_iOS undoAlertController]
  -[AKToolbarViewController_iOS _showUndoAlert:]
  -[AKToolbarViewController_iOS _buildUndoAlertController]
  -[AKToolbarViewController_iOS _undoButtonAction:]
  -[AKToolbarViewController_iOS _undoAllButtonAction:]
  -[AKToolbarViewController_iOS setSignaturesAlertController:]
  -[AKToolbarViewController_iOS signaturesViewControllerEnterSignatureMode:]
  -[AKToolbarViewController_iOS _setupPassthroughViewsForViewController:]
  -[AKToolbarViewController_iOS setLineStylesViewController:]
  -[AKToolbarViewController_iOS setTextAttributesViewController:]
  -[AKToolbarViewController_iOS setColorPickerPopoverViewController:]
  -[AKToolbarViewController_iOS _attributeTagForCurrentSelectionState]
  -[AKToolbarViewController_iOS setSignaturesSheetViewController:]
  -[AKToolbarViewController_iOS setUndoAlertController:]
  -[AKToolbarViewController_iOS setAttributeToolbarViewControllerConstraint:]
  -[AKToolbarViewController_iOS attributeToolbarViewControllerConstraint]
  -[AKToolbarViewController_iOS _layoutAttributeContainer]
  -[AKToolbarViewController_iOS setAttributeToolbarViewController:]
  -[AKToolbarViewController_iOS _workaroundToolbarPopoverPositioningBug26744300]
  -[AKToolbarViewController_iOS _deleteSelectedItems:]
  -[AKToolbarViewController_iOS _toolbarButtonItemOfType:]
  -[AKToolbarViewController_iOS heightIncludingAdditionalVisibleBars]
  -[AKToolbarViewController_iOS _redoButtonAction:]
  -[AKToolbarViewController_iOS _validateUndoButton]
  -[AKToolbarViewController_iOS setRichSketchButton:]


AKInkAnnotation2 : AKInkAnnotation

AKArrowShapePointOfInterestHelper : AKTwoPointLinePointOfInterestHelper
  // class methods
  +[AKArrowShapePointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKArrowShapePointOfInterestHelper _concreteDraggableAreaForPointOfInterestWithIndex:ofAnnotation:onPageController:]
  +[AKArrowShapePointOfInterestHelper _concreteValidatePoint:ofDraggableArea:forAnnotation:onPageController:]
  +[AKArrowShapePointOfInterestHelper _arrowHeadOuterControlPoint:]
  +[AKArrowShapePointOfInterestHelper _arrowHeadInnerControlPoint:]
  +[AKArrowShapePointOfInterestHelper _centeredBaseControlPoint:]
  +[AKArrowShapePointOfInterestHelper _normalizedDirectionVector:]


AKBoxLayer : CAShapeLayer /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
 @property  double boxCornerRadius
 @property  double nominalBorderWidth
 @property  double borderWidthScale

  // instance methods
  -[AKBoxLayer setBounds:]
  -[AKBoxLayer initWithBorderWidth:cornerRadius:]
  -[AKBoxLayer setBorderWidthScale:]
  -[AKBoxLayer _updateBoxPath]
  -[AKBoxLayer nominalBorderWidth]
  -[AKBoxLayer borderWidthScale]
  -[AKBoxLayer boxCornerRadius]
  -[AKBoxLayer setBoxCornerRadius:]
  -[AKBoxLayer setNominalBorderWidth:]


AKInkPageOverlayController : NSObject /usr/lib/libc++.1.dylib <AKInkOverlayViewDelegate, AKShapeDetectionControllerDelegate>
 @property  AKPageController *pageController
 @property  AKInkOverlayView *inkOverlayView
 @property  AKShapeDetectionController *shapeDetectionController
 @property  BOOL ignoreAnnotationAndSelectionKVO
 @property  BOOL onlyPencilDraws
 @property  @? delayedShapeDetectionBlock
 @property  double lastStrokeEndTime
 @property  <PKRulerHostingDelegate> *rulerHostingDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKInkPageOverlayController newInkOverlayDrawingUndoTargetWithPageController:]

  // instance methods
  -[AKInkPageOverlayController .cxx_destruct]
  -[AKInkPageOverlayController teardown]
  -[AKInkPageOverlayController pageController]
  -[AKInkPageOverlayController setPageController:]
  -[AKInkPageOverlayController setup]
  -[AKInkPageOverlayController setRulerHostingDelegate:]
  -[AKInkPageOverlayController initWithPageController:]
  -[AKInkPageOverlayController annotationEditingDidEndWithCompletion:]
  -[AKInkPageOverlayController isWaitingToCoalesceStrokes]
  -[AKInkPageOverlayController beginIgnoringAnnotationSelectionObservation:]
  -[AKInkPageOverlayController endIgnoringAnnotationSelectionObservation:]
  -[AKInkPageOverlayController isIgnoringAnnotationAndSelectionKVO:]
  -[AKInkPageOverlayController shapeDetectionControllerWillPickCandidate:isInk:]
  -[AKInkPageOverlayController shapeDetectionController:shouldSelectCandidateAnnotation:]
  -[AKInkPageOverlayController overlayView:]
  -[AKInkPageOverlayController inkOverlayView]
  -[AKInkPageOverlayController didToggleRuler]
  -[AKInkPageOverlayController inputViewCanBeginDrawing:withTouch:]
  -[AKInkPageOverlayController inputViewDidBeginStroke:]
  -[AKInkPageOverlayController inputView:didCollectDrawingForAnalysis:]
  -[AKInkPageOverlayController rulerHostingDelegate]
  -[AKInkPageOverlayController _fullSetup]
  -[AKInkPageOverlayController _toolStatusUpdated:]
  -[AKInkPageOverlayController _controllerWillSave:]
  -[AKInkPageOverlayController setShapeDetectionController:]
  -[AKInkPageOverlayController shapeDetectionController]
  -[AKInkPageOverlayController setInkOverlayView:]
  -[AKInkPageOverlayController _setupGestureDependencies]
  -[AKInkPageOverlayController _updateAllowedTouchTypesAllEnabled:pencilEnabled:]
  -[AKInkPageOverlayController _inkDidChangeNotification:]
  -[AKInkPageOverlayController _enclosingScrollViewDidScroll:]
  -[AKInkPageOverlayController _partialTeardown]
  -[AKInkPageOverlayController _tearDownGestureDependencies]
  -[AKInkPageOverlayController _performDelayedShapeDetection]
  -[AKInkPageOverlayController setDelayedShapeDetectionBlock:]
  -[AKInkPageOverlayController _convertRect:fromDrawingInCanvasView:toPageControllerModelSpace:]
  -[AKInkPageOverlayController lastStrokeEndTime]
  -[AKInkPageOverlayController setLastStrokeEndTime:]
  -[AKInkPageOverlayController setIgnoreAnnotationAndSelectionKVO:]
  -[AKInkPageOverlayController _convertCHDrawing:fromDrawingInCanvasView:toInkOverlayView:]
  -[AKInkPageOverlayController delayedShapeDetectionBlock]
  -[AKInkPageOverlayController ignoreAnnotationAndSelectionKVO]
  -[AKInkPageOverlayController _updateGestureDependencyPriority]
  -[AKInkPageOverlayController shapeDetectionControllerPositioningRectForCandidatePicker:]
  -[AKInkPageOverlayController scaleFromDrawingInCanvasView:toPageControllerModelSpace:]
  -[AKInkPageOverlayController onlyPencilDraws]
  -[AKInkPageOverlayController setOnlyPencilDraws:]


AKNoteEditorViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  UITextView *textView
 @property  AKPopupAnnotation *annotation
 @property  <AKNoteEditorViewControllerDelegate> *delegate

  // instance methods
  -[AKNoteEditorViewController delegate]
  -[AKNoteEditorViewController setDelegate:]
  -[AKNoteEditorViewController .cxx_destruct]
  -[AKNoteEditorViewController textView]
  -[AKNoteEditorViewController setTextView:]
  -[AKNoteEditorViewController viewWillDisappear:]
  -[AKNoteEditorViewController viewDidLoad]
  -[AKNoteEditorViewController viewDidAppear:]
  -[AKNoteEditorViewController annotation]
  -[AKNoteEditorViewController setAnnotation:]


AKSpeechBubbleAnnotationEventHandler : AKThoughtBubbleAnnotationEventHandler
  // instance methods
  -[AKSpeechBubbleAnnotationEventHandler getInitialDraggedPoint:otherPoint:center:forEvent:orRecognizer:]
  -[AKSpeechBubbleAnnotationEventHandler updateModelWithCurrentPoint:]


AKLoupePointOfInterestHelper : AKAnnotationPointOfInterestHelper
  // class methods
  +[AKLoupePointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKLoupePointOfInterestHelper _concreteDraggableAreaForPointOfInterestWithIndex:ofAnnotation:onPageController:]
  +[AKLoupePointOfInterestHelper _concreteValidatePoint:ofDraggableArea:forAnnotation:onPageController:]


AKFontChooserUIItemDelegate : NSObject /usr/lib/libc++.1.dylib <AKUserInterfaceItem, AKFontChooserUserInterfaceItem>
 @property  AKTextAttributesViewController *parentController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKFontChooserUIItemDelegate .cxx_destruct]
  -[AKFontChooserUIItemDelegate tag]
  -[AKFontChooserUIItemDelegate setParentController:]
  -[AKFontChooserUIItemDelegate parentController]
  -[AKFontChooserUIItemDelegate convertFont:]
  -[AKFontChooserUIItemDelegate syncFontsToUI:]


AKTextAttributesUIItemDelegate : NSObject /usr/lib/libc++.1.dylib <AKUserInterfaceItem, AKTextAttributesUserInterfaceItem>
 @property  AKTextAttributesViewController *parentController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKTextAttributesUIItemDelegate .cxx_destruct]
  -[AKTextAttributesUIItemDelegate tag]
  -[AKTextAttributesUIItemDelegate setParentController:]
  -[AKTextAttributesUIItemDelegate parentController]
  -[AKTextAttributesUIItemDelegate convertTextAttributes:]
  -[AKTextAttributesUIItemDelegate syncTextAttributesToUI:]


AKArrowAnnotationEventHandler : AKAnnotationEventHandler
  // instance methods
  -[AKArrowAnnotationEventHandler getInitialDraggedPoint:otherPoint:center:forEvent:orRecognizer:]
  -[AKArrowAnnotationEventHandler updateModelWithCurrentPoint:]
  -[AKArrowAnnotationEventHandler _updatedMidPointForAnnotation:withNewStartPt:andNewEndPt:]
  -[AKArrowAnnotationEventHandler setupDraggingConstraints]


AKHeartAnnotationEventHandler : AKRectangularAnnotationEventHandler

AKBorderMaskToolPointOfInterestHelper : AKEightPointRectangularPointOfInterestHelper
  // class methods
  +[AKBorderMaskToolPointOfInterestHelper _concreteDraggableAreaForPoint:onAnnotation:withScale:pageControllerForPixelAlignment:]


AKRectAnnotationEventHandler : AKRectangularAnnotationEventHandler

AKFloatingAttributePickerViewController : UIViewController /usr/lib/libobjc.A.dylib <AKTextAttributesUserInterfaceItem>
 @property  AKController *controller
 @property  AKColorPaletteView *colorPalette
 @property  UIToolbar *toolbar
 @property  UIBarButtonItem *colorPaletteButtonItem
 @property  UIView *separatorView
 @property  NSArray *staticItems
 @property  NSArray *rightButtonItems
 @property  long long tag
 @property  UIColor *color
 @property  long long colorAttributeTag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKFloatingAttributePickerViewController .cxx_destruct]
  -[AKFloatingAttributePickerViewController tag]
  -[AKFloatingAttributePickerViewController color]
  -[AKFloatingAttributePickerViewController setColor:]
  -[AKFloatingAttributePickerViewController separatorView]
  -[AKFloatingAttributePickerViewController viewDidLoad]
  -[AKFloatingAttributePickerViewController viewDidLayoutSubviews]
  -[AKFloatingAttributePickerViewController setTag:]
  -[AKFloatingAttributePickerViewController setController:]
  -[AKFloatingAttributePickerViewController controller]
  -[AKFloatingAttributePickerViewController toolbar]
  -[AKFloatingAttributePickerViewController setSeparatorView:]
  -[AKFloatingAttributePickerViewController setToolbar:]
  -[AKFloatingAttributePickerViewController valueChanged:]
  -[AKFloatingAttributePickerViewController initWithController:]
  -[AKFloatingAttributePickerViewController setColorPalette:]
  -[AKFloatingAttributePickerViewController colorPalette]
  -[AKFloatingAttributePickerViewController colorAttributeTag]
  -[AKFloatingAttributePickerViewController convertTextAttributes:]
  -[AKFloatingAttributePickerViewController syncTextAttributesToUI:]
  -[AKFloatingAttributePickerViewController setColorAttributeTag:]
  -[AKFloatingAttributePickerViewController setRightButtonItems:animated:]
  -[AKFloatingAttributePickerViewController setColorPaletteButtonItem:]
  -[AKFloatingAttributePickerViewController colorPaletteButtonItem]
  -[AKFloatingAttributePickerViewController setStaticItems:]
  -[AKFloatingAttributePickerViewController staticItems]
  -[AKFloatingAttributePickerViewController rightButtonItems]
  -[AKFloatingAttributePickerViewController setRightButtonItems:]


AKUndoController : NSObject /usr/lib/libc++.1.dylib
 @property  AKController *controller
 @property  NSUndoManager *undoManager
 @property  NSMutableSet *observedPageModelControllers
 @property  NSMutableSet *observedAnnotations
 @property  NSString *undoGroupPresentablePropertyName
 @property  BOOL undoGroupHasChangesToMultipleProperties
 @property  NSMapTable *undoGroupOldPropertiesPerAnnotation
 @property  BOOL externalSourceTrackingChanged

  // instance methods
  -[AKUndoController dealloc]
  -[AKUndoController .cxx_destruct]
  -[AKUndoController observeValueForKeyPath:ofObject:change:context:]
  -[AKUndoController setUndoManager:]
  -[AKUndoController setController:]
  -[AKUndoController controller]
  -[AKUndoController undoManager]
  -[AKUndoController initWithController:]
  -[AKUndoController setObservedPageModelControllers:]
  -[AKUndoController setObservedAnnotations:]
  -[AKUndoController setUndoGroupPresentablePropertyName:]
  -[AKUndoController setUndoGroupHasChangesToMultipleProperties:]
  -[AKUndoController setUndoGroupOldPropertiesPerAnnotation:]
  -[AKUndoController observeUndoManagerCheckpoint:]
  -[AKUndoController observeUndoManagerDetectedEdit:]
  -[AKUndoController observePageControllerRequestsDisableRegistration:]
  -[AKUndoController observePageControllerRequestsEnableRegistration:]
  -[AKUndoController observedAnnotations]
  -[AKUndoController observedPageModelControllers]
  -[AKUndoController _startObservingAnnotations:]
  -[AKUndoController _stopObservingAnnotations:]
  -[AKUndoController undoGroupOldPropertiesPerAnnotation]
  -[AKUndoController _registerUndoForSelectionOnPageModelController:]
  -[AKUndoController _setAnnotationProperties:]
  -[AKUndoController undoGroupPresentablePropertyName]
  -[AKUndoController undoGroupHasChangesToMultipleProperties]
  -[AKUndoController _annotationsWillBeRemoved:onPageController:]
  -[AKUndoController _annotationsWereAdded:onPageController:]
  -[AKUndoController externalSourceTrackingChanged]
  -[AKUndoController _deleteAnnotationsFromModel:]
  -[AKUndoController _endEditingOfTextIfAnnotationsDeleted:]
  -[AKUndoController _addAnnotationsFromModel:]
  -[AKUndoController _undoActionForSelectionState:]
  -[AKUndoController startObservingPageModelController:]
  -[AKUndoController stopObservingPageModelController:]
  -[AKUndoController setExternalSourceTrackingChanged:]


AKStarAnnotation : AKPolygonAnnotation
 @property  double innerRadiusFactor

  // class methods
  +[AKStarAnnotation supportsSecureCoding]
  +[AKStarAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKStarAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKStarAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKStarAnnotation encodeWithCoder:]
  -[AKStarAnnotation initWithCoder:]
  -[AKStarAnnotation displayName]
  -[AKStarAnnotation keysForValuesToObserveForUndo]
  -[AKStarAnnotation keysForValuesToObserveForRedrawing]
  -[AKStarAnnotation keysForValuesToObserveForAdornments]
  -[AKStarAnnotation innerRadiusFactor]
  -[AKStarAnnotation setInnerRadiusFactor:]


AKLineStylesViewController : UIViewController /usr/lib/libobjc.A.dylib <UITableViewDataSource, UITableViewDelegate>
 @property  AKController *controller
 @property  UITableView *tableView
 @property  NSArray *lineWidthTags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKLineStylesViewController generateLineImageForTag:selected:]

  // instance methods
  -[AKLineStylesViewController .cxx_destruct]
  -[AKLineStylesViewController tableView]
  -[AKLineStylesViewController viewWillAppear:]
  -[AKLineStylesViewController viewDidLoad]
  -[AKLineStylesViewController setController:]
  -[AKLineStylesViewController controller]
  -[AKLineStylesViewController tableView:numberOfRowsInSection:]
  -[AKLineStylesViewController tableView:cellForRowAtIndexPath:]
  -[AKLineStylesViewController setTableView:]
  -[AKLineStylesViewController tableView:didSelectRowAtIndexPath:]
  -[AKLineStylesViewController initWithController:]
  -[AKLineStylesViewController setLineWidthTags:]
  -[AKLineStylesViewController lineWidthTags]
  -[AKLineStylesViewController currentLineWidthTag]
  -[AKLineStylesViewController selectRowForTag:]
  -[AKLineStylesViewController indexPathForLineWidthTag:]
  -[AKLineStylesViewController selectedLineWidthChanged:]


AKStrokedAnnotation : AKAnnotation <AKStrokedAnnotationProtocol>
 @property  double strokeWidth
 @property  UIColor *strokeColor
 @property  BOOL dashed
 @property  long long brushStyle
 @property  BOOL hasShadow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKStrokedAnnotation supportsSecureCoding]
  +[AKStrokedAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKStrokedAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKStrokedAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKStrokedAnnotation encodeWithCoder:]
  -[AKStrokedAnnotation initWithCoder:]
  -[AKStrokedAnnotation .cxx_destruct]
  -[AKStrokedAnnotation displayName]
  -[AKStrokedAnnotation hasShadow]
  -[AKStrokedAnnotation setStrokeColor:]
  -[AKStrokedAnnotation setHasShadow:]
  -[AKStrokedAnnotation strokeColor]
  -[AKStrokedAnnotation strokeWidth]
  -[AKStrokedAnnotation setStrokeWidth:]
  -[AKStrokedAnnotation setDashed:]
  -[AKStrokedAnnotation keysForValuesToObserveForUndo]
  -[AKStrokedAnnotation isDashed]
  -[AKStrokedAnnotation brushStyle]
  -[AKStrokedAnnotation keysForValuesToObserveForRedrawing]
  -[AKStrokedAnnotation setBrushStyle:]


AKAnnotationLayer : CALayer /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
 @property  AKAnnotation *annotation
 @property  AKPageController *pageController
 @property  CALayer *fastPathLayer
 @property  BOOL isObservingAnnotation
 @property  BOOL wasLastDrawingClipped
 @property  BOOL lastRedrawWasForDrawingBounds
 @property  BOOL shouldRecalculateLoupeImage

  // class methods
  +[AKAnnotationLayer newAnnotationLayerForAnnotation:withPageController:]

  // instance methods
  -[AKAnnotationLayer dealloc]
  -[AKAnnotationLayer .cxx_destruct]
  -[AKAnnotationLayer observeValueForKeyPath:ofObject:change:context:]
  -[AKAnnotationLayer pageController]
  -[AKAnnotationLayer setPageController:]
  -[AKAnnotationLayer drawInContext:]
  -[AKAnnotationLayer annotation]
  -[AKAnnotationLayer actionForKey:]
  -[AKAnnotationLayer setAnnotation:]
  -[AKAnnotationLayer _stopObservingAnnotation]
  -[AKAnnotationLayer _startObservingAnnotation]
  -[AKAnnotationLayer updateContents]
  -[AKAnnotationLayer _initWithAnnotation:andPageController:]
  -[AKAnnotationLayer setShouldRecalculateLoupeImage:]
  -[AKAnnotationLayer _updateAnnotationLayerWithLoupeFastPath:]
  -[AKAnnotationLayer _addDebugVisuals]
  -[AKAnnotationLayer _removeDebugVisuals]
  -[AKAnnotationLayer lastRedrawWasForDrawingBounds]
  -[AKAnnotationLayer setLastRedrawWasForDrawingBounds:]
  -[AKAnnotationLayer wasLastDrawingClipped]
  -[AKAnnotationLayer setWasLastDrawingClipped:]
  -[AKAnnotationLayer fastPathLayer]
  -[AKAnnotationLayer setFastPathLayer:]
  -[AKAnnotationLayer shouldRecalculateLoupeImage]
  -[AKAnnotationLayer isObservingAnnotation]
  -[AKAnnotationLayer setIsObservingAnnotation:]
  -[AKAnnotationLayer updatePixelAlignment]


AKNoteAnnotationHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKNoteAnnotationHelper _boundsForClosedPopupAnnotation:havingParent:onPageController:]
  +[AKNoteAnnotationHelper _boundsForOpenPopupAnnotation:withClosedBounds:havingParent:onPageController:]
  +[AKNoteAnnotationHelper newPopupAnnotationWithParent:onPageController:]


AKInkRendererHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKInkRendererHelper _sharedOfflineInkRendererSmallSize]
  +[AKInkRendererHelper _sharedOfflineInkRendererFullSize]
  +[AKInkRendererHelper _calculateMaxRenderingSize]
  +[AKInkRendererHelper maxRenderingSize]
  +[AKInkRendererHelper renderDrawing:clippedToStrokeSpaceRect:scale:]
  +[AKInkRendererHelper purgeSharedRenderer]


AKSparseMutableControllerArray : NSMutableArray
  // instance methods
  -[AKSparseMutableControllerArray initWithCapacity:]
  -[AKSparseMutableControllerArray count]
  -[AKSparseMutableControllerArray addObject:]
  -[AKSparseMutableControllerArray removeObject:]
  -[AKSparseMutableControllerArray objectAtIndex:]
  -[AKSparseMutableControllerArray insertObject:atIndex:]
  -[AKSparseMutableControllerArray removeObjectAtIndex:]
  -[AKSparseMutableControllerArray removeAllObjects]
  -[AKSparseMutableControllerArray replaceObjectAtIndex:withObject:]
  -[AKSparseMutableControllerArray removeLastObject]
  -[AKSparseMutableControllerArray objectsAtIndexes:]
  -[AKSparseMutableControllerArray .cxx_destruct]
  -[AKSparseMutableControllerArray _backFillUntilCount:]
  -[AKSparseMutableControllerArray containsAnyObjects:]


AKController : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL isTestingInstance
 @property  BOOL isTornDown
 @property  AKSparseMutableControllerArray *pageControllers
 @property  NSMapTable *pageModelControllersToPageControllers
 @property  <AKControllerDelegateProtocol> *delegate
 @property  AKActionController *actionController
 @property  AKToolController *toolController
 @property  AKToolbarViewController *toolbarViewController
 @property  AKAttributeController *attributeController
 @property  AKModelController *modelController
 @property  AKUndoController *undoController
 @property  AKSidecarController *sidecarController
 @property  AKMainEventHandler *mainEventHandler
 @property  AKTextEditorController *textEditorController
 @property  AKLegacyDoodleController *legacyDoodleController
 @property  UIView *toolbarView
 @property  AKSignatureModelController *signatureModelController
 @property  AKFormFeatureDetectorController *formDetectionController
 @property  AKHighlightAnnotationController *highlightAnnotationController
 @property  AKStatistics *statisticsLogger
 @property  AKPeripheralAvailabilityManager_iOS *peripheralAvailabilityManager
 @property  BOOL showingMenu
 @property  unsigned long pasteCascadingMultiplier
 @property  long long lastPasteboardChangeCount
 @property  unsigned long creationCascadingMultiplier
 @property  AKPageController *lastCreationCascadingPageController
 @property  BOOL hideAllAdornments
 @property  BOOL isUsedOnDarkBackground
 @property  double akModelToCanvasFixedPixelScaleOfFirstEncounteredPage
 @property  double screenPixelsToCanvasPixelsDownscale
 @property  BOOL isLogging
 @property  BOOL selectNewlyCreatedAnnotations
 @property  BOOL shapeDetectionEnabled
 @property  AKToolbarView *modernToolbarView
 @property  BOOL useHighVisibilityDefaultInks
 @property  BOOL onlyDrawWithApplePencil
 @property  BOOL _isInDFRAction
 @property  BOOL overlayShouldPixelate
 @property  BOOL allEditingDisabled
 @property  BOOL annotationEditingEnabled
 @property  BOOL pencilAlwaysDraws
 @property  unsigned long currentPageIndex
 @property  <PKRulerHostingDelegate> *rulerHostingDelegate
 @property  NSString *author

  // class methods
  +[AKController renderAnnotation:inContext:]
  +[AKController controllerWithDelegate:]
  +[AKController akBundle]
  +[AKController adjustAnnotationBoundsToFitText:]
  +[AKController colorForHighlightAttributeWithTag:]
  +[AKController akBundleIdentifier]
  +[AKController _isInLowMemoryEnvironment]
  +[AKController canConnectToStylus]
  +[AKController hasPressureCapableHardware]
  +[AKController markupBarButtonItemWithTarget:action:]

  // instance methods
  -[AKController dealloc]
  -[AKController delegate]
  -[AKController setDelegate:]
  -[AKController .cxx_destruct]
  -[AKController observeValueForKeyPath:ofObject:change:context:]
  -[AKController initWithDelegate:]
  -[AKController author]
  -[AKController setAuthor:]
  -[AKController teardown]
  -[AKController panGestureRecognizer]
  -[AKController cut:]
  -[AKController copy:]
  -[AKController paste:]
  -[AKController undo:]
  -[AKController redo:]
  -[AKController handleEvent:]
  -[AKController _didReceiveMemoryWarning:]
  -[AKController selectAll:]
  -[AKController delete:]
  -[AKController currentPageIndex]
  -[AKController setCurrentPageIndex:]
  -[AKController commitEditing]
  -[AKController tapGestureRecognizer]
  -[AKController pressGestureRecognizer]
  -[AKController isTornDown]
  -[AKController modelController]
  -[AKController highlightableSelectionChanged]
  -[AKController highlightableSelectionWillBeginChanging]
  -[AKController highlightableSelectionDidEndChanging]
  -[AKController isOverlayViewLoadedAtIndex:]
  -[AKController currentModelBaseScaleFactorForPageAtIndex:]
  -[AKController currentExifOrientationForPageAtIndex:]
  -[AKController doubleTapGestureRecognizer]
  -[AKController prepareOverlayAtIndex:]
  -[AKController overlayViewAtIndex:]
  -[AKController relinquishOverlayAtIndex:]
  -[AKController onlyDrawWithApplePencil]
  -[AKController rotationGestureRecognizer]
  -[AKController renderAnnotation:inContext:]
  -[AKController setRulerHostingDelegate:]
  -[AKController setAnnotationEditingEnabled:]
  -[AKController toolbarView]
  -[AKController validateUndo:]
  -[AKController validateRedo:]
  -[AKController toolbarButtonItemOfType:]
  -[AKController annotationEditingEnabled]
  -[AKController resetToDefaultToolMode]
  -[AKController performActionForSender:]
  -[AKController isShowingMenu]
  -[AKController actionController]
  -[AKController currentPageController]
  -[AKController mainEventHandler]
  -[AKController attributeController]
  -[AKController setModernToolbarView:]
  -[AKController toolController]
  -[AKController toolMode]
  -[AKController signatureModelController]
  -[AKController undoController]
  -[AKController isPresentingPopover]
  -[AKController initForTesting]
  -[AKController statisticsLogger]
  -[AKController modernToolbarView]
  -[AKController pageControllers]
  -[AKController shapeDetectionEnabled]
  -[AKController setShapeDetectionEnabled:]
  -[AKController validateSender:]
  -[AKController toolbarViewController]
  -[AKController useHighVisibilityDefaultInks]
  -[AKController textEditorController]
  -[AKController legacyDoodleController]
  -[AKController akModelToCanvasFixedPixelScaleOfFirstEncounteredPage]
  -[AKController screenPixelsToCanvasPixelsDownscale]
  -[AKController setAkModelToCanvasFixedPixelScaleOfFirstEncounteredPage:]
  -[AKController setScreenPixelsToCanvasPixelsDownscale:]
  -[AKController sidecarController]
  -[AKController rulerHostingDelegate]
  -[AKController imageForToolbarButtonItemOfType:]
  -[AKController shouldDrawVariableStrokeDoodles]
  -[AKController pencilAlwaysDraws]
  -[AKController selectNewlyCreatedAnnotations]
  -[AKController _updateGestureDependencyPriority]
  -[AKController setIsTestingInstance:]
  -[AKController setStatisticsLogger:]
  -[AKController setPageControllers:]
  -[AKController setPageModelControllersToPageControllers:]
  -[AKController setAllEditingDisabled:]
  -[AKController setPencilAlwaysDraws:]
  -[AKController setModelController:]
  -[AKController setUndoController:]
  -[AKController setSidecarController:]
  -[AKController setLegacyDoodleController:]
  -[AKController enclosingScrollViewDidScroll:]
  -[AKController setToolController:]
  -[AKController setAttributeController:]
  -[AKController setActionController:]
  -[AKController setToolbarViewController:]
  -[AKController setToolbarView:]
  -[AKController setMainEventHandler:]
  -[AKController setTextEditorController:]
  -[AKController setSignatureModelController:]
  -[AKController setFormDetectionController:]
  -[AKController setHighlightAnnotationController:]
  -[AKController setPeripheralAvailabilityManager:]
  -[AKController peripheralAvailabilityManager]
  -[AKController _pageModelControllerSelectedAnnotationsChangedNotification:]
  -[AKController setIsTornDown:]
  -[AKController isTestingInstance]
  -[AKController setPasteCascadingMultiplier:]
  -[AKController pageModelControllersToPageControllers]
  -[AKController _setupPageModelController:]
  -[AKController overlayShouldPixelate]
  -[AKController validateCut:]
  -[AKController validateCopy:]
  -[AKController validatePaste:]
  -[AKController validateDelete:]
  -[AKController duplicate:]
  -[AKController validateDuplicate:]
  -[AKController validateSelectAll:]
  -[AKController showAttributeInspector:]
  -[AKController validateShowAttributeInspector:]
  -[AKController supportForPencilAlwaysDrawsSatisfied]
  -[AKController setToolMode:]
  -[AKController _validateCutCopyDelete]
  -[AKController setLastPasteboardChangeCount:]
  -[AKController lastPasteboardChangeCount]
  -[AKController lastCreationCascadingPageController]
  -[AKController creationCascadingMultiplier]
  -[AKController setLastCreationCascadingPageController:]
  -[AKController setCreationCascadingMultiplier:]
  -[AKController pageControllerForAnnotation:]
  -[AKController canBeginEditingTextAnnotation:]
  -[AKController _popoverAnchorFrameInModelForAnnotations:]
  -[AKController editTextAnnotation:]
  -[AKController willShowMenu:]
  -[AKController willHideMenu:]
  -[AKController setShowingMenu:]
  -[AKController highlightAnnotationController]
  -[AKController setSelectNewlyCreatedAnnotations:]
  -[AKController addPopupToAnnotation:openPopup:]
  -[AKController removeNoteFromAnnotation:]
  -[AKController strokeAddedNotification:]
  -[AKController updateOverlayViewAtIndex:]
  -[AKController setOverlayShouldPixelate:]
  -[AKController reloadVisibleToolbarItemIdentifiers]
  -[AKController contentAlignedRectForRect:onPageAtIndex:]
  -[AKController applyCurrentCrop]
  -[AKController clearUndoStack]
  -[AKController delayedUndoControllerSetup]
  -[AKController validateEditTextAnnotation:]
  -[AKController showSelectionMenu:]
  -[AKController hideSelectionMenu:]
  -[AKController _toolpicker_setColor:]
  -[AKController _toolpicker_color]
  -[AKController _toolpicker_setInkIdentifier:]
  -[AKController _toolpicker_inkIdentifier]
  -[AKController pageControllerForPageModelController:]
  -[AKController setHideAllAdornments:]
  -[AKController beginLogging:documentType:]
  -[AKController endLogging]
  -[AKController isUsedOnDarkBackground]
  -[AKController setIsUsedOnDarkBackground:]
  -[AKController allEditingDisabled]
  -[AKController formDetectionController]
  -[AKController pasteCascadingMultiplier]
  -[AKController hideAllAdornments]
  -[AKController isLogging]
  -[AKController setIsLogging:]
  -[AKController setUseHighVisibilityDefaultInks:]
  -[AKController _isInDFRAction]


AKRectangularShapeAnnotation : AKShapeAnnotation <AKRectangularAnnotationProtocol, AKRotatableAnnotationProtocol, AKTextAnnotationProtocol>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rectangle
 @property  NSTextStorage *annotationText
 @property  NSDictionary *typingAttributes
 @property  double rotationAngle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isEditingText
 @property  BOOL textIsFixedWidth
 @property  BOOL textIsFixedHeight
 @property  BOOL textIsClipped
 @property  BOOL shouldUsePlaceholderText

  // class methods
  +[AKRectangularShapeAnnotation supportsSecureCoding]
  +[AKRectangularShapeAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKRectangularShapeAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKRectangularShapeAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKRectangularShapeAnnotation init]
  -[AKRectangularShapeAnnotation encodeWithCoder:]
  -[AKRectangularShapeAnnotation initWithCoder:]
  -[AKRectangularShapeAnnotation .cxx_destruct]
  -[AKRectangularShapeAnnotation displayName]
  -[AKRectangularShapeAnnotation typingAttributes]
  -[AKRectangularShapeAnnotation setTypingAttributes:]
  -[AKRectangularShapeAnnotation rotationAngle]
  -[AKRectangularShapeAnnotation setRotationAngle:]
  -[AKRectangularShapeAnnotation annotationText]
  -[AKRectangularShapeAnnotation setAnnotationText:]
  -[AKRectangularShapeAnnotation setRectangle:]
  -[AKRectangularShapeAnnotation keysForValuesToObserveForUndo]
  -[AKRectangularShapeAnnotation rectangle]
  -[AKRectangularShapeAnnotation keysForValuesToObserveForRedrawing]
  -[AKRectangularShapeAnnotation adjustModelToCompensateForOriginalExif]
  -[AKRectangularShapeAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKRectangularShapeAnnotation translateBy:]
  -[AKRectangularShapeAnnotation keysForValuesToObserveForAdornments]


AKHandleLayer : CAShapeLayer /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
  // instance methods
  -[AKHandleLayer init]


AKRectAnnotation : AKRectangularShapeAnnotation
 @property  double cornerRadius

  // class methods
  +[AKRectAnnotation supportsSecureCoding]
  +[AKRectAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKRectAnnotation encodeWithCoder:]
  -[AKRectAnnotation initWithCoder:]
  -[AKRectAnnotation displayName]
  -[AKRectAnnotation setCornerRadius:]
  -[AKRectAnnotation cornerRadius]
  -[AKRectAnnotation keysForValuesToObserveForUndo]
  -[AKRectAnnotation keysForValuesToObserveForRedrawing]
  -[AKRectAnnotation hitTestBounds]


AKModernToolbarPicker : UIControl /usr/lib/libobjc.A.dylib
 @property  AKController *controller
 @property  UIStackView *stackview
 @property  long long currentTag

  // instance methods
  -[AKModernToolbarPicker .cxx_destruct]
  -[AKModernToolbarPicker setController:]
  -[AKModernToolbarPicker controller]
  -[AKModernToolbarPicker initWithFrame:controller:]
  -[AKModernToolbarPicker stackview]
  -[AKModernToolbarPicker setCurrentTag:]
  -[AKModernToolbarPicker revalidateItems:]
  -[AKModernToolbarPicker currentTag]
  -[AKModernToolbarPicker setStackview:]


AKHighlightAnnotationController : NSObject /usr/lib/libc++.1.dylib
 @property  AKController *controller
 @property  AKHighlightAnnotation *continuousHighlight

  // instance methods
  -[AKHighlightAnnotationController .cxx_destruct]
  -[AKHighlightAnnotationController setController:]
  -[AKHighlightAnnotationController controller]
  -[AKHighlightAnnotationController initWithController:]
  -[AKHighlightAnnotationController continueHighlighting]
  -[AKHighlightAnnotationController beginContinuousHighlighting]
  -[AKHighlightAnnotationController endContinuousHighlighting]
  -[AKHighlightAnnotationController _createHighlightAnnotationWithAttributeTag:]
  -[AKHighlightAnnotationController _adaptExistingHighlightsToNewHighlight:onPageController:firstModifiedHighlight:]
  -[AKHighlightAnnotationController _clearHighlightsWithStyleMatchingMask:except:inRange:onPageController:]
  -[AKHighlightAnnotationController _highlightsInCharacterIndexRange:onPageController:]
  -[AKHighlightAnnotationController setContinuousHighlight:]
  -[AKHighlightAnnotationController continuousHighlight]
  -[AKHighlightAnnotationController performOneShotHighlightWithAttributeTag:]
  -[AKHighlightAnnotationController clearHighlightsWithinSelection]
  -[AKHighlightAnnotationController highlightsWithinSelection]


AKSpeechBubblePointOfInterestHelper : AKThoughtBubblePointOfInterestHelper
  // class methods
  +[AKSpeechBubblePointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKSpeechBubblePointOfInterestHelper _concreteDraggableAreaForPointOfInterestWithIndex:ofAnnotation:onPageController:]
  +[AKSpeechBubblePointOfInterestHelper _concreteValidatePoint:ofDraggableArea:forAnnotation:onPageController:]
  +[AKSpeechBubblePointOfInterestHelper minOutset]
  +[AKSpeechBubblePointOfInterestHelper maxOutset]
  +[AKSpeechBubblePointOfInterestHelper _endPointOfBoundingLineSegmentFromPointyPointThroughtPoint:forAnnotation:]


AKShapeDetectionLogger : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKShapeDetectionLogger initialize]
  +[AKShapeDetectionLogger sharedInstance]

  // instance methods
  -[AKShapeDetectionLogger logCHDrawingToDisk:withIntendedShape:]
  -[AKShapeDetectionLogger openFinderWindowToLogs]
  -[AKShapeDetectionLogger _loggingIsEnabled]
  -[AKShapeDetectionLogger _newLogPathWithShapeName:]
  -[AKShapeDetectionLogger _logsPath]
  -[AKShapeDetectionLogger _fileName:]


AKInkAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKInkAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKInkAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKInkAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKInkAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKInkAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]


AKStarAnnotationEventHandler : AKPolygonAnnotationEventHandler
  // instance methods
  -[AKStarAnnotationEventHandler getInitialDraggedPoint:otherPoint:center:forEvent:orRecognizer:]
  -[AKStarAnnotationEventHandler updateModelWithCurrentPoint:]
  -[AKStarAnnotationEventHandler lockAspectRatioByDefault]


AKAdaptiveLayout : NSObject /usr/lib/libc++.1.dylib

AKPolygonAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKPolygonAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKPolygonAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKPolygonAnnotationRenderer _concreteTextBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKPolygonAnnotationRenderer _concreteRectangleForAnnotation:withTextBounds:]
  +[AKPolygonAnnotationRenderer _newConcreteTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKPolygonAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKPolygonAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKPolygonAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKPolygonAnnotationRenderer _newPathForAnnotation:]


AKCropAnnotation : AKAnnotation <AKRectangularAnnotationProtocol>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rectangle
 @property  BOOL hidden
 @property  BOOL cropApplied
 @property  BOOL showHandles
 @property  ^{CGColor=} color
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKCropAnnotation supportsSecureCoding]
  +[AKCropAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKCropAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKCropAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKCropAnnotation init]
  -[AKCropAnnotation dealloc]
  -[AKCropAnnotation encodeWithCoder:]
  -[AKCropAnnotation initWithCoder:]
  -[AKCropAnnotation displayName]
  -[AKCropAnnotation color]
  -[AKCropAnnotation setColor:]
  -[AKCropAnnotation setHidden:]
  -[AKCropAnnotation hidden]
  -[AKCropAnnotation setRectangle:]
  -[AKCropAnnotation keysForValuesToObserveForUndo]
  -[AKCropAnnotation rectangle]
  -[AKCropAnnotation cropApplied]
  -[AKCropAnnotation keysForValuesToObserveForRedrawing]
  -[AKCropAnnotation adjustModelToCompensateForOriginalExif]
  -[AKCropAnnotation hitTestBounds]
  -[AKCropAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKCropAnnotation translateBy:]
  -[AKCropAnnotation keysForValuesToObserveForAdornments]
  -[AKCropAnnotation setShowHandles:]
  -[AKCropAnnotation setCropApplied:]
  -[AKCropAnnotation showHandles]


AKHeartAnnotation : AKRectangularShapeAnnotation <AKFlippableAnnotationProtocol>
 @property  BOOL verticallyFlipped
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL horizontallyFlipped

  // class methods
  +[AKHeartAnnotation supportsSecureCoding]
  +[AKHeartAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKHeartAnnotation encodeWithCoder:]
  -[AKHeartAnnotation initWithCoder:]
  -[AKHeartAnnotation displayName]
  -[AKHeartAnnotation keysForValuesToObserveForUndo]
  -[AKHeartAnnotation keysForValuesToObserveForRedrawing]
  -[AKHeartAnnotation hitTestBounds]
  -[AKHeartAnnotation keysForValuesToObserveForAdornments]
  -[AKHeartAnnotation verticallyFlipped]
  -[AKHeartAnnotation setVerticallyFlipped:]


AKImageAnnotation : AKAnnotation <AKRectangularAnnotationProtocol, AKRotatableAnnotationProtocol, AKFlippableAnnotationProtocol>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rectangle
 @property  BOOL hasShadow
 @property  UIImage *image
 @property  BOOL verticallyFlipped
 @property  BOOL horizontallyFlipped
 @property  double rotationAngle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKImageAnnotation supportsSecureCoding]
  +[AKImageAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKImageAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKImageAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKImageAnnotation encodeWithCoder:]
  -[AKImageAnnotation initWithCoder:]
  -[AKImageAnnotation .cxx_destruct]
  -[AKImageAnnotation displayName]
  -[AKImageAnnotation image]
  -[AKImageAnnotation setImage:]
  -[AKImageAnnotation hasShadow]
  -[AKImageAnnotation setHasShadow:]
  -[AKImageAnnotation rotationAngle]
  -[AKImageAnnotation setRotationAngle:]
  -[AKImageAnnotation setRectangle:]
  -[AKImageAnnotation keysForValuesToObserveForUndo]
  -[AKImageAnnotation rectangle]
  -[AKImageAnnotation keysForValuesToObserveForRedrawing]
  -[AKImageAnnotation adjustModelToCompensateForOriginalExif]
  -[AKImageAnnotation hitTestBounds]
  -[AKImageAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKImageAnnotation translateBy:]
  -[AKImageAnnotation verticallyFlipped]
  -[AKImageAnnotation setVerticallyFlipped:]
  -[AKImageAnnotation horizontallyFlipped]
  -[AKImageAnnotation setHorizontallyFlipped:]


AKNoteAnnotation : AKAnnotation <AKParentAnnotationProtocol, AKRectangularAnnotationProtocol, AKFilledAnnotationProtocol>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rectangle
 @property  UIColor *fillColor
 @property  AKAnnotation *childAnnotation
 @property  NSString *contents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKNoteAnnotation supportsSecureCoding]
  +[AKNoteAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKNoteAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKNoteAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKNoteAnnotation encodeWithCoder:]
  -[AKNoteAnnotation initWithCoder:]
  -[AKNoteAnnotation .cxx_destruct]
  -[AKNoteAnnotation contents]
  -[AKNoteAnnotation displayName]
  -[AKNoteAnnotation setContents:]
  -[AKNoteAnnotation fillColor]
  -[AKNoteAnnotation setFillColor:]
  -[AKNoteAnnotation setRectangle:]
  -[AKNoteAnnotation childAnnotation]
  -[AKNoteAnnotation setChildAnnotation:]
  -[AKNoteAnnotation keysForValuesToObserveForUndo]
  -[AKNoteAnnotation rectangle]
  -[AKNoteAnnotation keysForValuesToObserveForRedrawing]
  -[AKNoteAnnotation hitTestBounds]
  -[AKNoteAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKNoteAnnotation translateBy:]


AKTSDBrushStroke : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *strokeName
 @property  UIColor *color
 @property  double width
 @property  int join
 @property  double miterLimit

  // class methods
  +[AKTSDBrushStroke cacheDirectory]
  +[AKTSDBrushStroke strokeWithType:color:width:]
  +[AKTSDBrushStroke loadLineEndsForBrush:inSVGDoc:]
  +[AKTSDBrushStroke loadSectionsForBrush:inSVGDoc:]
  +[AKTSDBrushStroke loadBrush:]
  +[AKTSDBrushStroke strokeWithName:color:width:]
  +[AKTSDBrushStroke mutableClass]

  // instance methods
  -[AKTSDBrushStroke copyWithZone:]
  -[AKTSDBrushStroke mutableCopyWithZone:]
  -[AKTSDBrushStroke .cxx_destruct]
  -[AKTSDBrushStroke width]
  -[AKTSDBrushStroke color]
  -[AKTSDBrushStroke miterLimit]
  -[AKTSDBrushStroke brushPath:inContext:]
  -[AKTSDBrushStroke paintLineEnd:atPoint:atAngle:withScale:inContext:useFastDrawing:]
  -[AKTSDBrushStroke strokeLineEnd:]
  -[AKTSDBrushStroke initWithName:color:width:join:miterLimit:]
  -[AKTSDBrushStroke strokeName]
  -[AKTSDBrushStroke join]
  -[AKTSDBrushStroke paintLineEnd:atPoint:atAngle:withScale:inContext:]
  -[AKTSDBrushStroke brushPathsForId:]
  -[AKTSDBrushStroke brushBoundsForId:]
  -[AKTSDBrushStroke brushSection:sectionIndex:ontoPath:withScaling:inElementRange:into:viewScale:]
  -[AKTSDBrushStroke brushPath:withScaling:inElementRange:into:sectionIndex:viewScale:]


AKTSDMutableBrushStroke : AKTSDBrushStroke
 @property  UIColor *color
 @property  double width
 @property  int join
 @property  double miterLimit
 @property  NSString *strokeName

  // instance methods
  -[AKTSDMutableBrushStroke copyWithZone:]
  -[AKTSDMutableBrushStroke .cxx_destruct]
  -[AKTSDMutableBrushStroke width]
  -[AKTSDMutableBrushStroke color]
  -[AKTSDMutableBrushStroke setWidth:]
  -[AKTSDMutableBrushStroke setColor:]
  -[AKTSDMutableBrushStroke miterLimit]
  -[AKTSDMutableBrushStroke setMiterLimit:]
  -[AKTSDMutableBrushStroke strokeName]
  -[AKTSDMutableBrushStroke join]
  -[AKTSDMutableBrushStroke setJoin:]
  -[AKTSDMutableBrushStroke setStrokeName:]


AKActionController : NSObject /usr/lib/libc++.1.dylib
 @property  AKController *controller

  // instance methods
  -[AKActionController .cxx_destruct]
  -[AKActionController setController:]
  -[AKActionController controller]
  -[AKActionController initWithController:]
  -[AKActionController performActionForSender:]
  -[AKActionController validateSender:]
  -[AKActionController performActionForSender:segment:]
  -[AKActionController _isSenderEnabled:segment:]
  -[AKActionController validateSender:segment:]
  -[AKActionController isSenderEnabled:]


AKLoupeAnnotationEventHandler : AKAnnotationEventHandler
  // instance methods
  -[AKLoupeAnnotationEventHandler getInitialDraggedPoint:otherPoint:center:forEvent:orRecognizer:]
  -[AKLoupeAnnotationEventHandler updateModelWithCurrentPoint:]
  -[AKLoupeAnnotationEventHandler setupDraggingConstraints]


AKModelController : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *pageModelControllers

  // instance methods
  -[AKModelController init]
  -[AKModelController .cxx_destruct]
  -[AKModelController pageModelControllers]
  -[AKModelController pageModelControllerForAnnotation:]
  -[AKModelController allSelectedAnnotations]
  -[AKModelController deselectAllAnnotations]
  -[AKModelController archivedPageModelControllers]
  -[AKModelController pageModelControllerForPage:]
  -[AKModelController deleteAllSelectedAnnotations]
  -[AKModelController insertObject:inPageModelControllersAtIndex:]
  -[AKModelController replaceObjectInPageModelControllersAtIndex:withObject:]
  -[AKModelController insertPageModelControllers:atIndexes:]
  -[AKModelController removeObjectFromPageModelControllersAtIndex:]
  -[AKModelController removePageModelControllersAtIndexes:]
  -[AKModelController replacePageModelControllersAtIndexes:withPageModelControllers:]
  -[AKModelController populateFromArchivedPageModelControllers:]


AKCropAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKCropAnnotationRenderer cropHandle:forAnnotation:withPageController:]
  +[AKCropAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKCropAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKCropAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKCropAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKCropAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKCropAnnotationRenderer _pixelAlignedBaseRect:interiorRect:scaleFactor:forAnnotation:withPageController:]
  +[AKCropAnnotationRenderer _newClipMaskEOPathForAnnotation:withPageController:]
  +[AKCropAnnotationRenderer _newRectanglePathForAnnotation:withPageController:outLineWidth:]
  +[AKCropAnnotationRenderer newLeftEdgePathForAnnotation:withPageController:]
  +[AKCropAnnotationRenderer newRightEdgePathForAnnotation:withPageController:]
  +[AKCropAnnotationRenderer newBottomEdgePathForAnnotation:withPageController:]
  +[AKCropAnnotationRenderer newTopEdgePathForAnnotation:withPageController:]
  +[AKCropAnnotationRenderer newTopLeftCornerPathForAnnotation:withPageController:]
  +[AKCropAnnotationRenderer newTopRightCornerPathForAnnotation:withPageController:]
  +[AKCropAnnotationRenderer newBottomLeftCornerPathForAnnotation:withPageController:]
  +[AKCropAnnotationRenderer newBottomRightCornerPathForAnnotation:withPageController:]


AKLoupeAnnotationImageUpdaterHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKLoupeAnnotationImageUpdaterHelper transformForFastPathLayer:ofLoupeAnnotation:onPageController:]
  +[AKLoupeAnnotationImageUpdaterHelper updateFastPathImageOnLoupeAnnotation:withFastPathLayer:onPageController:]
  +[AKLoupeAnnotationImageUpdaterHelper updateModelImageOnLoupeAnnotation:onPageController:]
  +[AKLoupeAnnotationImageUpdaterHelper magnifiedRectForUnmagnifiedRect:ofLoupeAnnotation:onPageController:]
  +[AKLoupeAnnotationImageUpdaterHelper unmagnifiedRectForMagnifiedRect:ofLoupeAnnotation:]


AKAdornmentLayer : CALayer /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
 @property  AKAnnotation *annotation
 @property  AKPageController *pageController
 @property  BOOL isObservingAnnotation
 @property  CALayer *handleContainerLayer
 @property  double currentScaleFactor
 @property  BOOL isObservingEventHandling

  // class methods
  +[AKAdornmentLayer _adornmentClassForAnnotation:]
  +[AKAdornmentLayer newAdornmentLayerForAnnotation:withPageController:]

  // instance methods
  -[AKAdornmentLayer dealloc]
  -[AKAdornmentLayer .cxx_destruct]
  -[AKAdornmentLayer observeValueForKeyPath:ofObject:change:context:]
  -[AKAdornmentLayer teardown]
  -[AKAdornmentLayer pageController]
  -[AKAdornmentLayer setPageController:]
  -[AKAdornmentLayer annotation]
  -[AKAdornmentLayer actionForKey:]
  -[AKAdornmentLayer setAnnotation:]
  -[AKAdornmentLayer _stopObservingAnnotation]
  -[AKAdornmentLayer _startObservingAnnotation]
  -[AKAdornmentLayer currentScaleFactor]
  -[AKAdornmentLayer updateAdornmentElements]
  -[AKAdornmentLayer updateSublayersWithScale:]
  -[AKAdornmentLayer currentlyDraggedArea]
  -[AKAdornmentLayer needsUpdateWhenDraggingStartsOrEnds]
  -[AKAdornmentLayer _initWithAnnotation:andPageController:]
  -[AKAdornmentLayer isObservingAnnotation]
  -[AKAdornmentLayer setIsObservingAnnotation:]
  -[AKAdornmentLayer updatePixelAlignment]
  -[AKAdornmentLayer setCurrentScaleFactor:]
  -[AKAdornmentLayer setHandleContainerLayer:]
  -[AKAdornmentLayer handleContainerLayer]
  -[AKAdornmentLayer _startObservingAnnotationEventHandlers]
  -[AKAdornmentLayer _stopObservingAnnotationEventHandlers]
  -[AKAdornmentLayer _addHandleSublayerAtPoint:withStyle:]
  -[AKAdornmentLayer isObservingEventHandling]
  -[AKAdornmentLayer setIsObservingEventHandling:]


AKFingerPotView : UIButton /usr/lib/libobjc.A.dylib
 @property  UIImageView *selectedOutline
 @property  UIImageView *highlight
 @property  UIImage *menuImage

  // instance methods
  -[AKFingerPotView .cxx_destruct]
  -[AKFingerPotView initWithFrame:]
  -[AKFingerPotView layoutSubviews]
  -[AKFingerPotView setHighlighted:]
  -[AKFingerPotView setSelected:]
  -[AKFingerPotView highlight]
  -[AKFingerPotView setHighlight:]
  -[AKFingerPotView selectedOutline]
  -[AKFingerPotView setSelectedOutline:]
  -[AKFingerPotView menuImage]
  -[AKFingerPotView setMenuImage:]


AKAlternateHandleLayer : CAShapeLayer /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
  // instance methods
  -[AKAlternateHandleLayer init]


AKFontSizePicker : UIControl /usr/lib/libobjc.A.dylib <UICollectionViewDataSource, UICollectionViewDelegate>
 @property  long long style
 @property  UILabel *label
 @property  UIStepper *stepper
 @property  UISlider *slider
 @property  UICollectionView *sizeList
 @property  NSArray *sizeListValues
 @property  double value
 @property  @? willBeginTrackingUpdates
 @property  @? didEndTrackingUpdates
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKFontSizePicker .cxx_destruct]
  -[AKFontSizePicker value]
  -[AKFontSizePicker setValue:]
  -[AKFontSizePicker style]
  -[AKFontSizePicker setStyle:]
  -[AKFontSizePicker setLabel:]
  -[AKFontSizePicker label]
  -[AKFontSizePicker initWithFrame:]
  -[AKFontSizePicker numberOfSectionsInCollectionView:]
  -[AKFontSizePicker collectionView:numberOfItemsInSection:]
  -[AKFontSizePicker collectionView:cellForItemAtIndexPath:]
  -[AKFontSizePicker initWithFrame:style:]
  -[AKFontSizePicker hitTest:withEvent:]
  -[AKFontSizePicker collectionView:didSelectItemAtIndexPath:]
  -[AKFontSizePicker collectionView:didDeselectItemAtIndexPath:]
  -[AKFontSizePicker slider]
  -[AKFontSizePicker setSlider:]
  -[AKFontSizePicker _handleValueChanged:]
  -[AKFontSizePicker stepper]
  -[AKFontSizePicker setStepper:]
  -[AKFontSizePicker _itemSizeInContainer]
  -[AKFontSizePicker sizeList]
  -[AKFontSizePicker setSizeList:]
  -[AKFontSizePicker _sliderTouchUp:]
  -[AKFontSizePicker _sliderTouchDown:]
  -[AKFontSizePicker _decreaseSize:]
  -[AKFontSizePicker _increaseSize:]
  -[AKFontSizePicker _selectSizeInList]
  -[AKFontSizePicker willBeginTrackingUpdates]
  -[AKFontSizePicker didEndTrackingUpdates]
  -[AKFontSizePicker sizeListValues]
  -[AKFontSizePicker setWillBeginTrackingUpdates:]
  -[AKFontSizePicker setDidEndTrackingUpdates:]
  -[AKFontSizePicker setSizeListValues:]


AKHeartAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKHeartAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKHeartAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKHeartAnnotationRenderer _concreteTextBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKHeartAnnotationRenderer _concreteRectangleForAnnotation:withTextBounds:]
  +[AKHeartAnnotationRenderer _newConcreteTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKHeartAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKHeartAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKHeartAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKHeartAnnotationRenderer _newPathScaledToModelSpaceForAnnotation:]


AKHighlightColorEditorController : AKAnnotationPopoverViewController <UIPopoverControllerDelegate>
 @property  AKCalloutBar *calloutBar
 @property  UIView *colorControls
 @property  UIButton *addNoteButton
 @property  UIButton *deleteButton
 @property  UIButton *rightArrowButton
 @property  UIButton *shareButton
 @property  UIAlertController *alertController
 @property  int pageTheme
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKHighlightColorEditorController setDelegate:]
  -[AKHighlightColorEditorController .cxx_destruct]
  -[AKHighlightColorEditorController setPosition:]
  -[AKHighlightColorEditorController loadView]
  -[AKHighlightColorEditorController setAlertController:]
  -[AKHighlightColorEditorController alertController]
  -[AKHighlightColorEditorController viewDidLoad]
  -[AKHighlightColorEditorController setDeleteButton:]
  -[AKHighlightColorEditorController deleteButton]
  -[AKHighlightColorEditorController didShow]
  -[AKHighlightColorEditorController willShow]
  -[AKHighlightColorEditorController useColorOf:]
  -[AKHighlightColorEditorController showColorControlsMenu:]
  -[AKHighlightColorEditorController handleDeleteButtonTap:]
  -[AKHighlightColorEditorController handleAddNoteButton:]
  -[AKHighlightColorEditorController handleRightArrowButton:]
  -[AKHighlightColorEditorController rightArrowButton]
  -[AKHighlightColorEditorController shareButton]
  -[AKHighlightColorEditorController pageTheme]
  -[AKHighlightColorEditorController setPageTheme:]
  -[AKHighlightColorEditorController releaseOutlets]
  -[AKHighlightColorEditorController setCalloutBar:]
  -[AKHighlightColorEditorController setColorControls:]
  -[AKHighlightColorEditorController addNoteButton]
  -[AKHighlightColorEditorController setAddNoteButton:]
  -[AKHighlightColorEditorController setRightArrowButton:]
  -[AKHighlightColorEditorController setShareButton:]
  -[AKHighlightColorEditorController p_shouldShowCompactMenu]
  -[AKHighlightColorEditorController p_buttonTagForTheme:]
  -[AKHighlightColorEditorController p_paletteImageForTag:pageTheme:]
  -[AKHighlightColorEditorController colorControls]
  -[AKHighlightColorEditorController p_noteGlyphForTag:pageTheme:]
  -[AKHighlightColorEditorController p_shouldShowShareButton]
  -[AKHighlightColorEditorController handleShareButton:]
  -[AKHighlightColorEditorController p_updateAppearance]
  -[AKHighlightColorEditorController p_colorControlImageForTag:pageTheme:]
  -[AKHighlightColorEditorController localizedAccessibilityStringForStyle:]
  -[AKHighlightColorEditorController calloutBar]
  -[AKHighlightColorEditorController presentFromRect:view:]
  -[AKHighlightColorEditorController p_themeForStyle:pageTheme:]
  -[AKHighlightColorEditorController p_removeAnnotation:]
  -[AKHighlightColorEditorController p_setStyle:forAnnotation:]
  -[AKHighlightColorEditorController p_drawColorControlCircleWithFrame:color:]
  -[AKHighlightColorEditorController p_colorControlImageForColor:withForegroundImage:]
  -[AKHighlightColorEditorController p_colorForTag:pageTheme:]
  -[AKHighlightColorEditorController p_underlineForegroundImageForPageTheme:]
  -[AKHighlightColorEditorController p_colorControlImageForColor:]
  -[AKHighlightColorEditorController p_colorControlUnderlineImageForPageTheme:]
  -[AKHighlightColorEditorController p_drawCrescentWithCircleRect:color:leftShift:addRadius:]
  -[AKHighlightColorEditorController p_paletteImageWithFrontColor:middleColor:backColor:frontForegroundImage:]
  -[AKHighlightColorEditorController p_buildPaletteImageForFrontTag:middleTag:backTag:pageTheme:]
  -[AKHighlightColorEditorController p_monochromaticImageFromImage:withColor:]
  -[AKHighlightColorEditorController canPresentInPosition:]
  -[AKHighlightColorEditorController p_postDeleteConfirmation]


AKDoodleAnnotation : AKAnnotation <AKRectangularAnnotationProtocol, AKRotatableAnnotationProtocol, AKStrokedAnnotationProtocol>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rectangle
 @property  double rotationAngle
 @property  double strokeWidth
 @property  UIColor *strokeColor
 @property  BOOL dashed
 @property  long long brushStyle
 @property  BOOL hasShadow
 @property  UIBezierPath *path
 @property  BOOL pathIsPrestroked
 @property  BOOL pathIsDot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKDoodleAnnotation supportsSecureCoding]
  +[AKDoodleAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKDoodleAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKDoodleAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKDoodleAnnotation encodeWithCoder:]
  -[AKDoodleAnnotation initWithCoder:]
  -[AKDoodleAnnotation .cxx_destruct]
  -[AKDoodleAnnotation path]
  -[AKDoodleAnnotation setPath:]
  -[AKDoodleAnnotation displayName]
  -[AKDoodleAnnotation hasShadow]
  -[AKDoodleAnnotation setStrokeColor:]
  -[AKDoodleAnnotation setHasShadow:]
  -[AKDoodleAnnotation strokeColor]
  -[AKDoodleAnnotation rotationAngle]
  -[AKDoodleAnnotation setRotationAngle:]
  -[AKDoodleAnnotation strokeWidth]
  -[AKDoodleAnnotation setStrokeWidth:]
  -[AKDoodleAnnotation setDashed:]
  -[AKDoodleAnnotation setRectangle:]
  -[AKDoodleAnnotation keysForValuesToObserveForUndo]
  -[AKDoodleAnnotation isDashed]
  -[AKDoodleAnnotation rectangle]
  -[AKDoodleAnnotation brushStyle]
  -[AKDoodleAnnotation keysForValuesToObserveForRedrawing]
  -[AKDoodleAnnotation adjustModelToCompensateForOriginalExif]
  -[AKDoodleAnnotation hitTestBounds]
  -[AKDoodleAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKDoodleAnnotation translateBy:]
  -[AKDoodleAnnotation keysForValuesToObserveForAdornments]
  -[AKDoodleAnnotation pathIsPrestroked]
  -[AKDoodleAnnotation pathIsDot]
  -[AKDoodleAnnotation setPathIsPrestroked:]
  -[AKDoodleAnnotation setBrushStyle:]
  -[AKDoodleAnnotation setPathIsDot:]


AKLegacyDoodleController : NSObject /usr/lib/libc++.1.dylib <AKSmoothPathViewDelegate, AKShapeDetectionControllerDelegate>
 @property  AKController *controller
 @property  AKSmoothPathView *intelligentSketchOverlayView
 @property  @? performRecognitionBlock
 @property  AKShapeDetectionController *shapeDetectionController
 @property  AKAnnotation *coalescedAnnotation
 @property  NSMutableArray *recentDoodlesAnnotations
 @property  NSMutableArray *recentDoodlePaths
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} recentDrawingBoundsInInputView
 @property  BOOL ignoreAnnotationAndSelectionKVO
 @property  BOOL isShowingOverlay
 @property  BOOL isWaitingToCoalesceStrokes
 @property  BOOL preferDoodle
 @property  BOOL coalescesDoodles
 @property  BOOL shapeDetectionEnabled
 @property  BOOL selectNewlyCreatedAnnotations
 @property  BOOL pressureSensitiveDoodleMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKLegacyDoodleController dealloc]
  -[AKLegacyDoodleController .cxx_destruct]
  -[AKLegacyDoodleController setController:]
  -[AKLegacyDoodleController controller]
  -[AKLegacyDoodleController handleTapAction:]
  -[AKLegacyDoodleController initWithController:]
  -[AKLegacyDoodleController isShowingCandidatePicker]
  -[AKLegacyDoodleController dismissCandidatePicker]
  -[AKLegacyDoodleController isWaitingToCoalesceStrokes]
  -[AKLegacyDoodleController beginIgnoringAnnotationSelectionObservation:]
  -[AKLegacyDoodleController endIgnoringAnnotationSelectionObservation:]
  -[AKLegacyDoodleController isIgnoringAnnotationAndSelectionKVO:]
  -[AKLegacyDoodleController shapeDetectionControllerWillPickCandidate:isInk:]
  -[AKLegacyDoodleController shapeDetectionController:shouldSelectCandidateAnnotation:]
  -[AKLegacyDoodleController overlayView:]
  -[AKLegacyDoodleController preferDoodle]
  -[AKLegacyDoodleController setPreferDoodle:]
  -[AKLegacyDoodleController coalescesDoodles]
  -[AKLegacyDoodleController setCoalescesDoodles:]
  -[AKLegacyDoodleController shapeDetectionEnabled]
  -[AKLegacyDoodleController setShapeDetectionEnabled:]
  -[AKLegacyDoodleController updateStrokeAttributes]
  -[AKLegacyDoodleController setShapeDetectionController:]
  -[AKLegacyDoodleController shapeDetectionController]
  -[AKLegacyDoodleController setIgnoreAnnotationAndSelectionKVO:]
  -[AKLegacyDoodleController ignoreAnnotationAndSelectionKVO]
  -[AKLegacyDoodleController selectNewlyCreatedAnnotations]
  -[AKLegacyDoodleController shapeDetectionControllerPositioningRectForCandidatePicker:]
  -[AKLegacyDoodleController setSelectNewlyCreatedAnnotations:]
  -[AKLegacyDoodleController setRecentDoodlesAnnotations:]
  -[AKLegacyDoodleController setRecentDoodlePaths:]
  -[AKLegacyDoodleController setRecentDrawingBoundsInInputView:]
  -[AKLegacyDoodleController setIsWaitingToCoalesceStrokes:]
  -[AKLegacyDoodleController updateOverlayBoundsAndBackingScale:]
  -[AKLegacyDoodleController _coalesceRecentDrawings]
  -[AKLegacyDoodleController isShowingOverlay]
  -[AKLegacyDoodleController setIsShowingOverlay:]
  -[AKLegacyDoodleController intelligentSketchOverlayView]
  -[AKLegacyDoodleController _frameForOurOverlayInHostingView:]
  -[AKLegacyDoodleController enclosingScrollViewNotification:]
  -[AKLegacyDoodleController toolbarNotification:]
  -[AKLegacyDoodleController setIntelligentSketchOverlayView:]
  -[AKLegacyDoodleController handleForwardedEvent:]
  -[AKLegacyDoodleController handleDragAction:]
  -[AKLegacyDoodleController pressureSensitiveDoodleMode]
  -[AKLegacyDoodleController _executeDeferredRecognition]
  -[AKLegacyDoodleController performRecognitionBlock]
  -[AKLegacyDoodleController setPerformRecognitionBlock:]
  -[AKLegacyDoodleController _inputView:didCollectPath:isPrestroked:]
  -[AKLegacyDoodleController _beginOrExtendCoalescingTimer]
  -[AKLegacyDoodleController _addAnnotationImmediatelyFor:withDrawingCenter:drawingBoundsInView:pathIsPrestroked:isSingelDot:fromInputView:]
  -[AKLegacyDoodleController _scheduleDelayedRecognitionForDrawing:withPath:boundsInView:center:isPrestroked:]
  -[AKLegacyDoodleController createDoodleAnnotationWithPath:drawingBoundsInView:drawingCenter:pathIsPrestroked:shouldGoToPageController:]
  -[AKLegacyDoodleController recentDoodlePaths]
  -[AKLegacyDoodleController recentDoodlesAnnotations]
  -[AKLegacyDoodleController recentDrawingBoundsInInputView]
  -[AKLegacyDoodleController coalescedAnnotation]
  -[AKLegacyDoodleController setCoalescedAnnotation:]
  -[AKLegacyDoodleController _coalesceDrawingsCancelled]
  -[AKLegacyDoodleController _removeAnnotations:mostLikelyFromPageController:]
  -[AKLegacyDoodleController _clearCoalescingState]
  -[AKLegacyDoodleController inputViewWillStartDrawing:]
  -[AKLegacyDoodleController inputView:didCollectPath:]
  -[AKLegacyDoodleController inputView:didCollectPrestrokedPath:]
  -[AKLegacyDoodleController showOverlay]
  -[AKLegacyDoodleController removeOverlay]
  -[AKLegacyDoodleController setPressureSensitiveDoodleMode:]


AKImageAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKImageAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKImageAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKImageAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKImageAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKImageAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]


AKControllerForTesting : AKController
 @property  <AKControllerDelegateProtocol> *testingDelegate
 @property  AKModelController *testingModelController
 @property  AKActionController *testingActionController
 @property  AKToolController *testingToolController
 @property  AKAttributeController *testingAttributeController
 @property  AKUndoController *testingUndoController
 @property  AKMainEventHandler *testingMainEventHandler
 @property  UIView *testingToolbarView
 @property  UIView *testingOverlayView
 @property  AKLegacyDoodleController *testingIntelligentSketchController
 @property  AKSignatureModelController *testingSignatureModelController

  // class methods
  +[AKControllerForTesting renderAnnotation:inContext:]

  // instance methods
  -[AKControllerForTesting init]
  -[AKControllerForTesting delegate]
  -[AKControllerForTesting .cxx_destruct]
  -[AKControllerForTesting overlayView]
  -[AKControllerForTesting modelController]
  -[AKControllerForTesting toolbarView]
  -[AKControllerForTesting performActionForSender:]
  -[AKControllerForTesting actionController]
  -[AKControllerForTesting mainEventHandler]
  -[AKControllerForTesting attributeController]
  -[AKControllerForTesting toolController]
  -[AKControllerForTesting signatureModelController]
  -[AKControllerForTesting undoController]
  -[AKControllerForTesting validateSender:]
  -[AKControllerForTesting legacyDoodleController]
  -[AKControllerForTesting updateOverlayViewAtIndex:]
  -[AKControllerForTesting setOverlayShouldPixelate:]
  -[AKControllerForTesting reloadVisibleToolbarItemIdentifiers]
  -[AKControllerForTesting testingDelegate]
  -[AKControllerForTesting testingModelController]
  -[AKControllerForTesting testingToolbarView]
  -[AKControllerForTesting testingOverlayView]
  -[AKControllerForTesting testingActionController]
  -[AKControllerForTesting testingToolController]
  -[AKControllerForTesting testingAttributeController]
  -[AKControllerForTesting testingUndoController]
  -[AKControllerForTesting testingMainEventHandler]
  -[AKControllerForTesting testingIntelligentSketchController]
  -[AKControllerForTesting testingSignatureModelController]
  -[AKControllerForTesting setTestingDelegate:]
  -[AKControllerForTesting setTestingModelController:]
  -[AKControllerForTesting setTestingActionController:]
  -[AKControllerForTesting setTestingToolController:]
  -[AKControllerForTesting setTestingAttributeController:]
  -[AKControllerForTesting setTestingUndoController:]
  -[AKControllerForTesting setTestingMainEventHandler:]
  -[AKControllerForTesting setTestingToolbarView:]
  -[AKControllerForTesting setTestingOverlayView:]
  -[AKControllerForTesting setTestingIntelligentSketchController:]
  -[AKControllerForTesting setTestingSignatureModelController:]


AKAttributePickerViewController : UIViewController /usr/lib/libobjc.A.dylib <UITableViewDelegate, UITableViewDataSource>
 @property  AKController *controller
 @property  UITableView *tableView
 @property  NSArray *rowViews
 @property  <AKAttributePickerViewControllerDelegate> *delegate
 @property  NSSet *selectedAnnotations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKAttributePickerViewController delegate]
  -[AKAttributePickerViewController setDelegate:]
  -[AKAttributePickerViewController .cxx_destruct]
  -[AKAttributePickerViewController tableView]
  -[AKAttributePickerViewController viewDidLoad]
  -[AKAttributePickerViewController _updatePreferredContentSize]
  -[AKAttributePickerViewController setController:]
  -[AKAttributePickerViewController controller]
  -[AKAttributePickerViewController tableView:numberOfRowsInSection:]
  -[AKAttributePickerViewController tableView:cellForRowAtIndexPath:]
  -[AKAttributePickerViewController setTableView:]
  -[AKAttributePickerViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[AKAttributePickerViewController _canShowWhileLocked]
  -[AKAttributePickerViewController selectedAnnotations]
  -[AKAttributePickerViewController setRowViews:]
  -[AKAttributePickerViewController setSelectedAnnotations:]
  -[AKAttributePickerViewController rowViews]
  -[AKAttributePickerViewController revalidateItems]
  -[AKAttributePickerViewController initWithController:selectedAnnotations:]
  -[AKAttributePickerViewController updateLayoutForSelectedAnnotations]
  -[AKAttributePickerViewController _lineAttributesChanged:]
  -[AKAttributePickerViewController _attributeStyleChanged:]


AKPolygonAnnotationEventHandler : AKRectangularAnnotationEventHandler
  // instance methods
  -[AKPolygonAnnotationEventHandler getInitialDraggedPoint:otherPoint:center:forEvent:orRecognizer:]
  -[AKPolygonAnnotationEventHandler updateModelWithCurrentPoint:]
  -[AKPolygonAnnotationEventHandler lockAspectRatioByDefault]


AKTextView : UITextView /usr/lib/libobjc.A.dylib
  // instance methods
  -[AKTextView motionEnded:withEvent:]


AKTouchOutsideViewGestureRecognizerTarget : NSObject /usr/lib/libc++.1.dylib
 @property  id target
 @property  SEL action

  // instance methods
  -[AKTouchOutsideViewGestureRecognizerTarget isEqual:]
  -[AKTouchOutsideViewGestureRecognizerTarget .cxx_destruct]
  -[AKTouchOutsideViewGestureRecognizerTarget setTarget:]
  -[AKTouchOutsideViewGestureRecognizerTarget target]
  -[AKTouchOutsideViewGestureRecognizerTarget action]
  -[AKTouchOutsideViewGestureRecognizerTarget setAction:]


AKTouchOutsideViewGestureRecognizer : UIGestureRecognizer /usr/lib/libobjc.A.dylib <UIGestureRecognizerDelegate>
 @property  UIView *watchView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKTouchOutsideViewGestureRecognizer dealloc]
  -[AKTouchOutsideViewGestureRecognizer .cxx_destruct]
  -[AKTouchOutsideViewGestureRecognizer removeTarget:action:]
  -[AKTouchOutsideViewGestureRecognizer addTarget:action:]
  -[AKTouchOutsideViewGestureRecognizer gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[AKTouchOutsideViewGestureRecognizer touchesBegan:withEvent:]
  -[AKTouchOutsideViewGestureRecognizer watchView]
  -[AKTouchOutsideViewGestureRecognizer setWatchView:]
  -[AKTouchOutsideViewGestureRecognizer initWithTarget:action:watchView:]


AKPageController : NSObject /usr/lib/libc++.1.dylib <AKNoteEditorControllerDelegate, AKHighlightColorEditorControllerDelegate, AKNoteEditorControllerDelegate>
 @property  AKController *controller
 @property  AKPageModelController *pageModelController
 @property  AKGeometryHelper *geometryHelper
 @property  BOOL superviewDependentThingsWereSetUp
 @property  AKLayerPresentationManager *layerPresentationManager
 @property  AKInkPageOverlayController *inkPageOverlayController
 @property  id inkOverlayDrawingUndoTarget
 @property  UIView *overlayView
 @property  NSMutableDictionary *noteEditors
 @property  unsigned long pageIndex
 @property  BOOL shouldPixelate
 @property  AKHighlightColorEditorController *highlightColorEditorController
 @property  <AKControllerDelegateProtocol> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKPageController pageControllerWithController:andPageModelController:]

  // instance methods
  -[AKPageController delegate]
  -[AKPageController .cxx_destruct]
  -[AKPageController teardown]
  -[AKPageController setController:]
  -[AKPageController controller]
  -[AKPageController setOverlayView:]
  -[AKPageController pageIndex]
  -[AKPageController setPageIndex:]
  -[AKPageController overlayView]
  -[AKPageController modelBaseScaleFactor]
  -[AKPageController geometryHelper]
  -[AKPageController pageModelController]
  -[AKPageController currentModelToScreenExifOrientation]
  -[AKPageController currentModelToScreenScaleFactor]
  -[AKPageController layerPresentationManager]
  -[AKPageController maxPageRect]
  -[AKPageController initForTesting]
  -[AKPageController convertPointFromOverlayToModel:]
  -[AKPageController convertRectFromOverlayToModel:]
  -[AKPageController relinquishablesAreLoaded]
  -[AKPageController inkPageOverlayController]
  -[AKPageController stickyViewFrameForNoteEditor:]
  -[AKPageController stickyContainerForNoteEditor:]
  -[AKPageController edgeForNoteEditor:]
  -[AKPageController popoverPresentingViewControllerForNoteEditor:]
  -[AKPageController noteEditorWillDismissFromFullScreen:]
  -[AKPageController noteEditorDidBeginEditing:]
  -[AKPageController noteEditorDidFinishEditing:]
  -[AKPageController noteEditorWillPresentFullScreen:]
  -[AKPageController updateOverlayViewLayers]
  -[AKPageController convertRectFromModelToOverlay:]
  -[AKPageController openPopoverForHighlightAnnotation:]
  -[AKPageController inkOverlayDrawingUndoTarget]
  -[AKPageController unregisterFromUndoManager:]
  -[AKPageController setShouldPixelate:]
  -[AKPageController setupRelinquishables]
  -[AKPageController releaseRelinquishables]
  -[AKPageController visibleRectOfOverlay]
  -[AKPageController addPopupToAnnotation:openPopup:]
  -[AKPageController removeNoteFromAnnotation:]
  -[AKPageController convertPointFromModelToOverlay:]
  -[AKPageController newContentSnapshotPDFDataAtScale:inRect:forLoupeAnnotation:]
  -[AKPageController annotationsBeneathLoupe:]
  -[AKPageController editorController:isRightArrowEnabledForAnnotation:]
  -[AKPageController editorController:setTheme:forAnnotation:]
  -[AKPageController editorController:deleteAnnotation:]
  -[AKPageController editorController:editNote:]
  -[AKPageController editorController:showEditMenuForAnnotation:]
  -[AKPageController _initWithController:andPageModelController:]
  -[AKPageController setPageModelController:]
  -[AKPageController setNoteEditors:]
  -[AKPageController setInkOverlayDrawingUndoTarget:]
  -[AKPageController setGeometryHelper:]
  -[AKPageController setLayerPresentationManager:]
  -[AKPageController setInkPageOverlayController:]
  -[AKPageController setSuperviewDependentThingsWereSetUp:]
  -[AKPageController shouldPixelate]
  -[AKPageController superviewDependentThingsWereSetUp]
  -[AKPageController updateScaleFactor:isLiveUpdate:forceUpdate:]
  -[AKPageController _popoverPresentingViewController]
  -[AKPageController openPopupAnnotation:]
  -[AKPageController noteEditors]
  -[AKPageController handleEditAnnotation:]
  -[AKPageController overlayWasAddedToSuperview]
  -[AKPageController highlightColorEditorController]


AKRectangularAnnotationEventHandler : AKAnnotationEventHandler
 @property  {CGPoint=dd} lastMungedPositionInModel

  // instance methods
  -[AKRectangularAnnotationEventHandler getInitialDraggedPoint:otherPoint:center:forEvent:orRecognizer:]
  -[AKRectangularAnnotationEventHandler updateModelWithCurrentPoint:]
  -[AKRectangularAnnotationEventHandler setupDraggingConstraints]
  -[AKRectangularAnnotationEventHandler setLastMungedPositionInModel:]
  -[AKRectangularAnnotationEventHandler _updateModelFlippednessWithCurrentPoint:]
  -[AKRectangularAnnotationEventHandler _rectForModifiedRotatedRect:withOriginal:andRotation:]
  -[AKRectangularAnnotationEventHandler lastMungedPositionInModel]


AKPanGestureRecognizer : UIPanGestureRecognizer /usr/lib/libobjc.A.dylib <AKPenDetectionGestureRecognizerProtocol>
 @property  {CGPoint=dd} locationOfFirstTouch
 @property  BOOL penGestureDetected
 @property  NSMutableArray *currentAccumulatedTouches
 @property  double currentWeight
 @property  double currentMaxWeight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKPanGestureRecognizer .cxx_destruct]
  -[AKPanGestureRecognizer reset]
  -[AKPanGestureRecognizer touchesBegan:withEvent:]
  -[AKPanGestureRecognizer touchesMoved:withEvent:]
  -[AKPanGestureRecognizer touchesEnded:withEvent:]
  -[AKPanGestureRecognizer touchesCancelled:withEvent:]
  -[AKPanGestureRecognizer locationOfFirstTouchInView:]
  -[AKPanGestureRecognizer setLocationOfFirstTouch:]
  -[AKPanGestureRecognizer locationOfFirstTouch]
  -[AKPanGestureRecognizer setPenGestureDetected:]
  -[AKPanGestureRecognizer penGestureDetected]
  -[AKPanGestureRecognizer setCurrentWeight:]
  -[AKPanGestureRecognizer currentWeight]
  -[AKPanGestureRecognizer setCurrentMaxWeight:]
  -[AKPanGestureRecognizer resetAccumulatedTouches]
  -[AKPanGestureRecognizer currentAccumulatedTouches]
  -[AKPanGestureRecognizer setCurrentAccumulatedTouches:]
  -[AKPanGestureRecognizer _checkTouchForStylus:]
  -[AKPanGestureRecognizer accumulatedTouches]
  -[AKPanGestureRecognizer currentMaxWeight]


AKSpeechBubbleAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKSpeechBubbleAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKSpeechBubbleAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKSpeechBubbleAnnotationRenderer _concreteTextBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKSpeechBubbleAnnotationRenderer _concreteRectangleForAnnotation:withTextBounds:]
  +[AKSpeechBubbleAnnotationRenderer _newConcreteTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKSpeechBubbleAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKSpeechBubbleAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKSpeechBubbleAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKSpeechBubbleAnnotationRenderer basePointsOfPointyBit:withUpdatedProperties:firstPoint:secondPoint:]
  +[AKSpeechBubbleAnnotationRenderer pointyBitPointWidthAngleGivenControlBasePoint:forAnnotation:]
  +[AKSpeechBubbleAnnotationRenderer _newPathForAnnotation:]


AKRectAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKRectAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKRectAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKRectAnnotationRenderer _concreteTextBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKRectAnnotationRenderer _concreteRectangleForAnnotation:withTextBounds:]
  +[AKRectAnnotationRenderer _newConcreteTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKRectAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKRectAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKRectAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKRectAnnotationRenderer _newPathForAnnotation:axisAlignedForStroke:alignToScreenUsingPageController:orAlignToContext:]


AKInkAnnotation : AKAnnotation <AKRectangularAnnotationProtocol>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rectangle
 @property  PKDrawing *drawing
 @property  {CGSize=dd} drawingSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKInkAnnotation supportsSecureCoding]
  +[AKInkAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKInkAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKInkAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKInkAnnotation encodeWithCoder:]
  -[AKInkAnnotation initWithCoder:]
  -[AKInkAnnotation .cxx_destruct]
  -[AKInkAnnotation displayName]
  -[AKInkAnnotation shouldBurnIn]
  -[AKInkAnnotation setRectangle:]
  -[AKInkAnnotation keysForValuesToObserveForUndo]
  -[AKInkAnnotation rectangle]
  -[AKInkAnnotation keysForValuesToObserveForRedrawing]
  -[AKInkAnnotation adjustModelToCompensateForOriginalExif]
  -[AKInkAnnotation hitTestBounds]
  -[AKInkAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKInkAnnotation translateBy:]
  -[AKInkAnnotation keysForValuesToObserveForAdornments]
  -[AKInkAnnotation drawing]
  -[AKInkAnnotation setDrawing:]
  -[AKInkAnnotation drawingSize]
  -[AKInkAnnotation setDrawingSize:]


AKAnnotationImageHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKAnnotationImageHelper imageForShapeTag:]
  +[AKAnnotationImageHelper _imageOfSize:forAnnotation:strokeWidth:withFillColor:]
  +[AKAnnotationImageHelper _drawFilledShapeImageForAnnotation:inRect:inContext:]
  +[AKAnnotationImageHelper _drawImageForPath:inRect:inContext:]
  +[AKAnnotationImageHelper _drawImageForSignature:withFillColor:scale:pathOffset:inContext:]
  +[AKAnnotationImageHelper imageOfSize:forAnnotationTag:]
  +[AKAnnotationImageHelper imageOfSize:forAnnotation:]
  +[AKAnnotationImageHelper imageOfSize:forPath:]
  +[AKAnnotationImageHelper imageOfSize:withFillColor:forSignature:]
  +[AKAnnotationImageHelper createImageOfAnnotation:withScale:]


AKGeometryHelper : NSObject /usr/lib/libc++.1.dylib
 @property  AKPageController *pageController

  // class methods
  +[AKGeometryHelper rotationTransformForRect:withAngle:]
  +[AKGeometryHelper compareVectorDirectionsFirstVector:secondVector:]
  +[AKGeometryHelper exifOrientationHasReversedAxes:]
  +[AKGeometryHelper annotationHasRotation:outAngle:]
  +[AKGeometryHelper draggableArea:convertedForExif:]
  +[AKGeometryHelper boundsOfRotatedRectangle:angle:]
  +[AKGeometryHelper isUnpresentableRect:]
  +[AKGeometryHelper rotationTransformForRectangularAnnotation:hasRotation:]
  +[AKGeometryHelper intersectLineSegmentStartingAt:ending:withCircleWithCenter:andRadius:farthestResult:]
  +[AKGeometryHelper angleBetweenPoint:andPoint:]
  +[AKGeometryHelper rotationTransformAroundPoint:withAngle:]
  +[AKGeometryHelper inverseExifOrientation:]
  +[AKGeometryHelper adjustRect:forExifOrientation:aboutCenter:]
  +[AKGeometryHelper adjustOriginalExifOrientationOnAnnotation:flatteningOriginalModelExif:]
  +[AKGeometryHelper affineTransformFlatteningOriginalModelExif:withOriginalModelSize:]
  +[AKGeometryHelper expandCGRect:toContainPoint:]
  +[AKGeometryHelper adjustPoint:forExifOrientation:aboutCenter:]
  +[AKGeometryHelper affineTransformForExifOrientation:aboutCenter:]
  +[AKGeometryHelper renderingAlignedTextRectForRect:alignToScreenUsingPageController:orAlignToContext:usingAnnotation:]
  +[AKGeometryHelper affineTransformRecenteringAboutOriginForExifOrientation:withOriginalSize:]
  +[AKGeometryHelper newPathWithPath:applyingExifOrientation:aboutCenter:]
  +[AKGeometryHelper rectWithSize:centeredAtPoint:]
  +[AKGeometryHelper renderingStrokeAlignedRectForRect:withStrokeWidth:alignToScreenUsingPageController:orAlignToContext:usingAnnotation:]
  +[AKGeometryHelper convertModelToScreenOrientationForRect:withPageController:]
  +[AKGeometryHelper convertModelToScreenOrientationForPoint:relativeToRect:withPageController:]
  +[AKGeometryHelper convertScreenToModelOrientationForPoint:relativeToRect:withPageController:]
  +[AKGeometryHelper convertRect:fromViewToScreenPixels:useNativeScale:]
  +[AKGeometryHelper isUnpresentableSize:]
  +[AKGeometryHelper distanceBetweenPoints:andPoint:]
  +[AKGeometryHelper normalizeVectorPoint:]
  +[AKGeometryHelper projectPoint:ontoRayWithFirstPoint:andSecondPoint:]
  +[AKGeometryHelper isPointOnLeft:ofRayWithFirstPoint:andSecondPoint:]
  +[AKGeometryHelper exifOrientationHasFlip:]
  +[AKGeometryHelper constrainRect:withinRect:]
  +[AKGeometryHelper intersectRayStartingAt:ending:withEllipseOfRect:farthestResult:]
  +[AKGeometryHelper intersectLineSegmentStartingAt:ending:withEllipseOfRect:farthestResult:]
  +[AKGeometryHelper exifOrientationWithConversionBlock:]
  +[AKGeometryHelper verticesOfPolygonWithPointCount:inRect:rotation:flippedVertically:]
  +[AKGeometryHelper lengthOfVector:]
  +[AKGeometryHelper normalizeVector:]
  +[AKGeometryHelper angleOfVector:]
  +[AKGeometryHelper integralRect:withOptions:]
  +[AKGeometryHelper verticalFlipTransformForRect:]
  +[AKGeometryHelper projectVector:ontoAspectVector:]
  +[AKGeometryHelper snapVector:toDiagonalForAspectRatio:ignoreWidth:ignoreHeight:]
  +[AKGeometryHelper radiusOfCenteredCircleFor:]
  +[AKGeometryHelper ellipseToCenteredCircleTransform:]
  +[AKGeometryHelper pointAtAngle:inCircleWithCenter:andRadius:]
  +[AKGeometryHelper centeredCircleToEllipseTransform:]
  +[AKGeometryHelper rectHasZeroSize:]
  +[AKGeometryHelper intersectRayStartingAt:ending:withCircleWithCenter:andRadius:farthestResult:]
  +[AKGeometryHelper _checkIntersectionOfLineSegmentStartingAt:endingAt:withCircleAt:andRadius:results:]
  +[AKGeometryHelper _collectIntersectionsOfLineSegmentStartingAt:endingAt:withCornerCirclesOfRoundedRect:withRadius:results:]
  +[AKGeometryHelper intersectLineSegmentStartingAt:ending:withAnotherSegmentStartingAt:ending:]
  +[AKGeometryHelper _farthestPointFrom:inArray:]
  +[AKGeometryHelper intersectCircleAtPoint:withRadius:withCircleAtPoint:withRadius:firstOutPoint:secondOutPoint:]
  +[AKGeometryHelper flipPointVertically:inRect:]
  +[AKGeometryHelper _rawAffineTransformForExifOrientation:]
  +[AKGeometryHelper concatExifOrientation:withExifOrientation:]
  +[AKGeometryHelper _cornersOfRotatedRectangle:angle:]
  +[AKGeometryHelper isUnpresentablePoint:]
  +[AKGeometryHelper _alignedPointForPoint:alignToContent:alignToScreenUsingPageController:orAlignToBitmapContext:usingAnnotation:]
  +[AKGeometryHelper _alignedStableRectForRect:alignToContent:alignToScreenUsingPageController:orAlignToBitmapContext:usingAnnotation:]
  +[AKGeometryHelper _strokeAlignedRectForRect:withStrokeWidth:shouldAlignStrictlyToScreen:alignToScreenUsingPageController:orAlignToBitmapContext:usingAnnotation:]
  +[AKGeometryHelper stableIntegralRectForRect:]
  +[AKGeometryHelper _rectForRect:alignToContent:alignToScreenUsingPageController:orAlignToBitmapContext:usingAnnotation:withAlignmentBlock:]
  +[AKGeometryHelper effectiveDrawingBoundsForAnnotation:forDisplay:pageControllerOrNil:outScaleFactor:]
  +[AKGeometryHelper rectForSize:inRect:]
  +[AKGeometryHelper centerOfRect:]
  +[AKGeometryHelper snapVectorTo45Degrees:]
  +[AKGeometryHelper scaleOfTransform:]
  +[AKGeometryHelper intersectLineSegmentStartingAt:ending:withRect:andRoundedCornerRadius:]
  +[AKGeometryHelper isPoint:onEllipse:]
  +[AKGeometryHelper tangentPointsToEllipse:fromPoint:firstOutPoint:secondOutPoint:]
  +[AKGeometryHelper tangentOfEllipse:throughRayWithFirstPoint:goingThrough:]
  +[AKGeometryHelper convertScreenToModelOrientationForRect:withPageController:]
  +[AKGeometryHelper horizontalFlipTransformForRect:]
  +[AKGeometryHelper convertRect:fromScreenPointsToView:]

  // instance methods
  -[AKGeometryHelper .cxx_destruct]
  -[AKGeometryHelper pageController]
  -[AKGeometryHelper setPageController:]
  -[AKGeometryHelper _rootLayer]
  -[AKGeometryHelper initWithPageController:]
  -[AKGeometryHelper contentAlignedPointForPoint:]
  -[AKGeometryHelper screenPixelAlignedPointForPoint:]
  -[AKGeometryHelper contentAlignedRectForRect:]
  -[AKGeometryHelper screenPixelAlignedRectForRect:]
  -[AKGeometryHelper convertRect:fromModelToLayer:]
  -[AKGeometryHelper convertPoint:fromModelToLayer:]
  -[AKGeometryHelper annotationLayerFrameForAnnotation:layerIsClipped:]
  -[AKGeometryHelper adornmentLayerFrameForAnnotation:]
  -[AKGeometryHelper _smartAlignedRectForRect:]
  -[AKGeometryHelper _shouldAlignToContent]
  -[AKGeometryHelper _shouldAlignToScreen]
  -[AKGeometryHelper _clippingFrameForView:]
  -[AKGeometryHelper screenStrokeAlignedRectForRect:withStrokeWidth:]


AKSmoothPathView : UIView /usr/lib/libobjc.A.dylib <CHPointFIFODrawingTarget>
 @property  BOOL applyModelBaseScaleFactorToStroke
 @property  BOOL startedTouchDrawing
 @property  BOOL isAddingPointWithoutSmoothing
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} singleDotRect
 @property  double shadowRadiusInModel
 @property  double shadowRadiusInView
 @property  double cachedModelToViewScale
 @property  double minPressure
 @property  double maxPressure
 @property  double minThickness
 @property  double maxThickness
 @property  CHPointStrokeFIFO *strokeFIFO
 @property  CHBoxcarFilterPointFIFO *smoothingFIFO
 @property  CHQuadCurvePointFIFO *interpolatingFIFO
 @property  AKBitmapFIFO *bitmapFifo
 @property  AKController *controller
 @property  double currentWeight
 @property  BOOL disableSingleDotSpecialCase
 @property  double singleDotCurrentSize
 @property  <AKSmoothPathViewDelegate> *delegate
 @property  BOOL prestrokedOutputMode
 @property  UIColor *strokeColor
 @property  double strokeWidth
 @property  BOOL hasShadow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKSmoothPathView newSmoothPathViewForCurrentPlatformWithController:]

  // instance methods
  -[AKSmoothPathView delegate]
  -[AKSmoothPathView setDelegate:]
  -[AKSmoothPathView .cxx_destruct]
  -[AKSmoothPathView isOpaque]
  -[AKSmoothPathView commonInit]
  -[AKSmoothPathView teardown]
  -[AKSmoothPathView initWithFrame:]
  -[AKSmoothPathView hasShadow]
  -[AKSmoothPathView drawRect:]
  -[AKSmoothPathView setController:]
  -[AKSmoothPathView controller]
  -[AKSmoothPathView handleTapAction:]
  -[AKSmoothPathView awakeFromNib]
  -[AKSmoothPathView setStrokeColor:]
  -[AKSmoothPathView setInterpolatingFIFO:]
  -[AKSmoothPathView interpolatingFIFO]
  -[AKSmoothPathView setSmoothingFIFO:]
  -[AKSmoothPathView smoothingFIFO]
  -[AKSmoothPathView setStrokeFIFO:]
  -[AKSmoothPathView strokeFIFO]
  -[AKSmoothPathView setHasShadow:]
  -[AKSmoothPathView strokeColor]
  -[AKSmoothPathView _clear]
  -[AKSmoothPathView strokeWidth]
  -[AKSmoothPathView initWithController:]
  -[AKSmoothPathView setStrokeWidth:]
  -[AKSmoothPathView drawing]
  -[AKSmoothPathView setCurrentWeight:]
  -[AKSmoothPathView setMinPressure:]
  -[AKSmoothPathView setMaxPressure:]
  -[AKSmoothPathView setMinThickness:]
  -[AKSmoothPathView setMaxThickness:]
  -[AKSmoothPathView bitmapFifo]
  -[AKSmoothPathView _windowBackingScaleFactor]
  -[AKSmoothPathView setBitmapFifo:]
  -[AKSmoothPathView setIsAddingPointWithoutSmoothing:]
  -[AKSmoothPathView currentWeight]
  -[AKSmoothPathView continueStrokeWithoutSmoothing:]
  -[AKSmoothPathView minPressure]
  -[AKSmoothPathView maxPressure]
  -[AKSmoothPathView minThickness]
  -[AKSmoothPathView maxThickness]
  -[AKSmoothPathView weightForValue:]
  -[AKSmoothPathView continueStroke:]
  -[AKSmoothPathView terminateStroke]
  -[AKSmoothPathView isAddingPointWithoutSmoothing]
  -[AKSmoothPathView handleForwardedEvent:]
  -[AKSmoothPathView handleDragAction:]
  -[AKSmoothPathView setPrestrokedOutputMode:]
  -[AKSmoothPathView setStartedTouchDrawing:]
  -[AKSmoothPathView _updateShadowRadiusInView]
  -[AKSmoothPathView setDisableSingleDotSpecialCase:]
  -[AKSmoothPathView setSingleDotRect:]
  -[AKSmoothPathView updateInterpolatingFifoUnitScale]
  -[AKSmoothPathView _updateInterpolatingFifoLineWidth]
  -[AKSmoothPathView prestrokedOutputMode]
  -[AKSmoothPathView disableSingleDotSpecialCase]
  -[AKSmoothPathView singleDotRect]
  -[AKSmoothPathView _setupFilterChainWithBitmapFifo:]
  -[AKSmoothPathView setApplyModelBaseScaleFactorToStroke:]
  -[AKSmoothPathView setShadowRadiusInModel:]
  -[AKSmoothPathView shadowRadiusInModel]
  -[AKSmoothPathView _getPlatformCGContext]
  -[AKSmoothPathView shadowRadiusInView]
  -[AKSmoothPathView _setupShadowInContext:]
  -[AKSmoothPathView _effectiveStrokeWidthInModel]
  -[AKSmoothPathView setSingleDotCurrentSize:]
  -[AKSmoothPathView callDelegate]
  -[AKSmoothPathView startStroke]
  -[AKSmoothPathView _pointForRecognizer:]
  -[AKSmoothPathView _pointForTouch:]
  -[AKSmoothPathView _catchUpAccumulatedTouchesForRecognizer:]
  -[AKSmoothPathView setShadowRadiusInView:]
  -[AKSmoothPathView _convertValueFromModelToSelf:]
  -[AKSmoothPathView applyModelBaseScaleFactorToStroke]
  -[AKSmoothPathView startedTouchDrawing]
  -[AKSmoothPathView cachedModelToViewScale]
  -[AKSmoothPathView setCachedModelToViewScale:]
  -[AKSmoothPathView singleDotCurrentSize]


AKPolygonPointOfInterestHelper : AKEightPointRectangularPointOfInterestHelper
  // class methods
  +[AKPolygonPointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKPolygonPointOfInterestHelper _concreteDraggableAreaForPointOfInterestWithIndex:ofAnnotation:onPageController:]
  +[AKPolygonPointOfInterestHelper maxPolygonPoints]
  +[AKPolygonPointOfInterestHelper minPolygonPoints]
  +[AKPolygonPointOfInterestHelper _concreteValidatePoint:ofDraggableArea:forAnnotation:onPageController:]
  +[AKPolygonPointOfInterestHelper pointsControlPointDistanceFactor]
  +[AKPolygonPointOfInterestHelper numberOfPolygonPointsForControlPoint:inAnnotation:onPageController:]
  +[AKPolygonPointOfInterestHelper _pointForPointsControlOfPolygonWithNumberOfPoints:inAnnotation:onPageController:]
  +[AKPolygonPointOfInterestHelper _degreesBetweenPointsForPointsControl]
  +[AKPolygonPointOfInterestHelper _degreesForPointsControlGivenPolygonWithNumberOfPoints:]


AKHighlightAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKHighlightAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKHighlightAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKHighlightAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKHighlightAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKHighlightAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKHighlightAnnotationRenderer _enumerateQuadPathsOfAnnotation:applyStyle:handler:]
  +[AKHighlightAnnotationRenderer _rectForQuad:rotationAngle:]
  +[AKHighlightAnnotationRenderer _highlightOutsetFactor]


AKThoughtBubblePointOfInterestHelper : AKEightPointRectangularPointOfInterestHelper
  // class methods
  +[AKThoughtBubblePointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKThoughtBubblePointOfInterestHelper _concreteDraggableAreaForPointOfInterestWithIndex:ofAnnotation:onPageController:]
  +[AKThoughtBubblePointOfInterestHelper _concreteValidatePoint:ofDraggableArea:forAnnotation:onPageController:]
  +[AKThoughtBubblePointOfInterestHelper minOutset]
  +[AKThoughtBubblePointOfInterestHelper maxOutset]
  +[AKThoughtBubblePointOfInterestHelper _constrainPointyPointToOutset:forAnnotation:outsetIsMin:]


AKTriangleAnnotation : AKRectangularShapeAnnotation <AKFlippableAnnotationProtocol>
 @property  UIBezierPath *path
 @property  BOOL verticallyFlipped
 @property  BOOL horizontallyFlipped
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKTriangleAnnotation supportsSecureCoding]
  +[AKTriangleAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKTriangleAnnotation encodeWithCoder:]
  -[AKTriangleAnnotation initWithCoder:]
  -[AKTriangleAnnotation .cxx_destruct]
  -[AKTriangleAnnotation path]
  -[AKTriangleAnnotation setPath:]
  -[AKTriangleAnnotation displayName]
  -[AKTriangleAnnotation keysForValuesToObserveForUndo]
  -[AKTriangleAnnotation keysForValuesToObserveForRedrawing]
  -[AKTriangleAnnotation hitTestBounds]
  -[AKTriangleAnnotation verticallyFlipped]
  -[AKTriangleAnnotation setVerticallyFlipped:]
  -[AKTriangleAnnotation horizontallyFlipped]
  -[AKTriangleAnnotation setHorizontallyFlipped:]


AKAnnotation : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  BOOL isEdited
 @property  long long akSerializationVersion
 @property  long long akSerializationPlatform
 @property  BOOL isEditingText
 @property  BOOL textIsFixedWidth
 @property  BOOL textIsFixedHeight
 @property  BOOL textIsClipped
 @property  BOOL shouldUsePlaceholderText
 @property  AKAnnotation *parentAnnotation
 @property  AKAnnotation *childAnnotation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} initialDrawingBoundsForAppearanceOverride
 @property  BOOL shouldUseAppearanceOverride
 @property  BOOL shouldObserveEdits
 @property  BOOL isBeingCopied
 @property  NSString *UUID
 @property  NSString *displayName
 @property  NSString *customPlaceholderText
 @property  double originalModelBaseScaleFactor
 @property  long long originalExifOrientation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} hitTestBounds
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} drawingBounds
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} integralDrawingBounds
 @property  @? appearanceOverride
 @property  BOOL isUsingAppearanceOverride
 @property  BOOL editsDisableAppearanceOverride
 @property  BOOL shouldBurnIn
 @property  NSDate *modificationDate
 @property  NSString *author
 @property  BOOL isTranslating
 @property  BOOL isDraggingHandle

  // class methods
  +[AKAnnotation supportsSecureCoding]
  +[AKAnnotation annotationWithData:]
  +[AKAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKAnnotation displayNameForUndoablePropertyChangeWithKey:]
  +[AKAnnotation defaultPlaceholderText]

  // instance methods
  -[AKAnnotation init]
  -[AKAnnotation dealloc]
  -[AKAnnotation copyWithZone:]
  -[AKAnnotation encodeWithCoder:]
  -[AKAnnotation initWithCoder:]
  -[AKAnnotation .cxx_destruct]
  -[AKAnnotation observeValueForKeyPath:ofObject:change:context:]
  -[AKAnnotation UUID]
  -[AKAnnotation dataRepresentation]
  -[AKAnnotation modificationDate]
  -[AKAnnotation displayName]
  -[AKAnnotation author]
  -[AKAnnotation setAuthor:]
  -[AKAnnotation drawingBounds]
  -[AKAnnotation isTranslating]
  -[AKAnnotation setModificationDate:]
  -[AKAnnotation originalExifOrientation]
  -[AKAnnotation shouldBurnIn]
  -[AKAnnotation parentAnnotation]
  -[AKAnnotation setAppearanceOverride:]
  -[AKAnnotation setEditsDisableAppearanceOverride:]
  -[AKAnnotation isEditingText]
  -[AKAnnotation setIsEditingText:]
  -[AKAnnotation textIsFixedWidth]
  -[AKAnnotation setTextIsFixedWidth:]
  -[AKAnnotation textIsFixedHeight]
  -[AKAnnotation setTextIsFixedHeight:]
  -[AKAnnotation textIsClipped]
  -[AKAnnotation setTextIsClipped:]
  -[AKAnnotation shouldUsePlaceholderText]
  -[AKAnnotation setShouldUsePlaceholderText:]
  -[AKAnnotation appearanceOverride]
  -[AKAnnotation setParentAnnotation:]
  -[AKAnnotation childAnnotation]
  -[AKAnnotation setChildAnnotation:]
  -[AKAnnotation keysForValuesToObserveForUndo]
  -[AKAnnotation originalModelBaseScaleFactor]
  -[AKAnnotation setOriginalModelBaseScaleFactor:]
  -[AKAnnotation setOriginalExifOrientation:]
  -[AKAnnotation integralDrawingBounds]
  -[AKAnnotation customPlaceholderText]
  -[AKAnnotation setCustomPlaceholderText:]
  -[AKAnnotation conformsToAKRotatableAnnotationProtocol]
  -[AKAnnotation keysForValuesToObserveForRedrawing]
  -[AKAnnotation adjustModelToCompensateForOriginalExif]
  -[AKAnnotation setIsTranslating:]
  -[AKAnnotation hitTestBounds]
  -[AKAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKAnnotation translateBy:]
  -[AKAnnotation keysForValuesToObserveForAdornments]
  -[AKAnnotation conformsToAKRectangularAnnotationProtocol]
  -[AKAnnotation conformsToAKTextAnnotationProtocol]
  -[AKAnnotation akSerializationVersion]
  -[AKAnnotation conformsToAKFilledAnnotationProtocol]
  -[AKAnnotation conformsToAKParentAnnotationProtocol]
  -[AKAnnotation conformsToAKStrokedAnnotationProtocol]
  -[AKAnnotation setShouldUseAppearanceOverride:]
  -[AKAnnotation isDraggingHandle]
  -[AKAnnotation shouldObserveEdits]
  -[AKAnnotation setShouldObserveEdits:]
  -[AKAnnotation shouldUseAppearanceOverride]
  -[AKAnnotation setIsBeingCopied:]
  -[AKAnnotation conformsToAKFlippableAnnotationProtocol]
  -[AKAnnotation setInitialDrawingBoundsForAppearanceOverride:]
  -[AKAnnotation isEdited]
  -[AKAnnotation setIsEdited:]
  -[AKAnnotation editsDisableAppearanceOverride]
  -[AKAnnotation setAkSerializationVersion:]
  -[AKAnnotation setAkSerializationPlatform:]
  -[AKAnnotation akSerializationPlatform]
  -[AKAnnotation isBeingCopied]
  -[AKAnnotation initialDrawingBoundsForAppearanceOverride]
  -[AKAnnotation isUsingAppearanceOverride]
  -[AKAnnotation conformsToAKChildAnnotationProtocol]
  -[AKAnnotation setIsDraggingHandle:]


AKSignatureAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKSignatureAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKSignatureAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKSignatureAnnotationRenderer _newConcreteTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKSignatureAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKSignatureAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKSignatureAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]


AKTSDLineEnd : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  ^{CGPath=} path
 @property  ^{CGPath=} wrapPath
 @property  {CGPoint=dd} endPoint
 @property  BOOL isFilled
 @property  BOOL isNone
 @property  NSString *identifier
 @property  int lineJoin

  // class methods
  +[AKTSDLineEnd line]
  +[AKTSDLineEnd lineEndWithPath:wrapPath:endPoint:isFilled:identifier:]
  +[AKTSDLineEnd lineEndWithIdentifier:]
  +[AKTSDLineEnd lineEndWithPath:endPoint:isFilled:identifier:]
  +[AKTSDLineEnd simpleArrow]
  +[AKTSDLineEnd filledCircle]
  +[AKTSDLineEnd filledDiamond]
  +[AKTSDLineEnd openArrow]
  +[AKTSDLineEnd filledArrow]
  +[AKTSDLineEnd filledSquare]
  +[AKTSDLineEnd openSquare]
  +[AKTSDLineEnd openCircle]
  +[AKTSDLineEnd invertedArrow]
  +[AKTSDLineEnd none]
  +[AKTSDLineEnd lineEndWithType:]

  // instance methods
  -[AKTSDLineEnd dealloc]
  -[AKTSDLineEnd isEqual:]
  -[AKTSDLineEnd copyWithZone:]
  -[AKTSDLineEnd .cxx_destruct]
  -[AKTSDLineEnd identifier]
  -[AKTSDLineEnd path]
  -[AKTSDLineEnd lineJoin]
  -[AKTSDLineEnd endPoint]
  -[AKTSDLineEnd isNone]
  -[AKTSDLineEnd isFilled]
  -[AKTSDLineEnd initWithPath:wrapPath:endPoint:isFilled:identifier:lineJoin:]
  -[AKTSDLineEnd initWithPath:endPoint:isFilled:identifier:]
  -[AKTSDLineEnd wrapPath]


AKArrowShapeAnnotationEventHandler : AKArrowAnnotationEventHandler
  // instance methods
  -[AKArrowShapeAnnotationEventHandler getInitialDraggedPoint:otherPoint:center:forEvent:orRecognizer:]
  -[AKArrowShapeAnnotationEventHandler updateModelWithCurrentPoint:]


AKCalloutBar : UIView /usr/lib/libobjc.A.dylib
 @property  double arrowX
 @property  BOOL up
 @property  NSArray *controls

  // instance methods
  -[AKCalloutBar dealloc]
  -[AKCalloutBar .cxx_destruct]
  -[AKCalloutBar initWithFrame:]
  -[AKCalloutBar sizeThatFits:]
  -[AKCalloutBar layoutSubviews]
  -[AKCalloutBar controls]
  -[AKCalloutBar setControls:]
  -[AKCalloutBar setHighlighted:forControl:]
  -[AKCalloutBar sizeThatFitsControls:]
  -[AKCalloutBar setUp:]
  -[AKCalloutBar setBlurDisabled:]
  -[AKCalloutBar setArrowX:]
  -[AKCalloutBar newMaskView:]
  -[AKCalloutBar dividerLineRectForControl:]
  -[AKCalloutBar up]
  -[AKCalloutBar arrowX]


AKFormFeatureDetector : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject<AKFormFeatureDetectorDelegate> *delegate

  // class methods
  +[AKFormFeatureDetector _newBitmapInRect:onPage:scale:]
  +[AKFormFeatureDetector _newBitmapFromCGPDFDocument:]

  // instance methods
  -[AKFormFeatureDetector dealloc]
  -[AKFormFeatureDetector delegate]
  -[AKFormFeatureDetector setDelegate:]
  -[AKFormFeatureDetector .cxx_destruct]
  -[AKFormFeatureDetector initWithDelegate:]
  -[AKFormFeatureDetector _featureAtPoint:onPage:mode:]
  -[AKFormFeatureDetector _checkboxAtPoint:onPage:pageBitmap:]
  -[AKFormFeatureDetector _translateFeature:toPageOrigin:]
  -[AKFormFeatureDetector _formFieldAtPoint:onPage:enforceMaxWidth:pageBitmap:]
  -[AKFormFeatureDetector _snappedFormFieldForField:]
  -[AKFormFeatureDetector _defaultFeatureForPoint:onPage:snapToVerticalEdges:]
  -[AKFormFeatureDetector _lineAtPoint:onPage:useVerticalCenter:]
  -[AKFormFeatureDetector _boxOnLine:atPoint:]
  -[AKFormFeatureDetector _floatPixelBufferForCGContext:imageBuffer:]
  -[AKFormFeatureDetector _thresholdPixelStripIn:withImageLenth:thresholdValue:startingPtr:withThresholdLength:]
  -[AKFormFeatureDetector _shiftScanAwayFromEdgeInPixels:]
  -[AKFormFeatureDetector _scanToEdgeOfFormFieldStartingAtPoint:withBitmapData:width:height:bottomRowStartsAt:bottomRowEndsAt:withLineThickness:gapWidthForDottedLines:separatorHeights:andRegionHeight:trackAverageSpacingWidth:trackFarthestPossibleEdge:trackNumberOfSegments:trackNumberOfGapsForDottedLine:goingLeft:]
  -[AKFormFeatureDetector _findLineEdgeTypeOnLeft:startingAt:withPageLeftEdge:withPageWidth:andFormHeight:]
  -[AKFormFeatureDetector _findExtentForLineTop:lineBottom:x:onPage:]
  -[AKFormFeatureDetector _findVerticalEdgesAtPoint:extent:onPage:]
  -[AKFormFeatureDetector featureAtPoint:onPage:mode:]
  -[AKFormFeatureDetector _drawThresholdedBitmapForTestForPageBitmap:withPixels:]


AKNoteAnnotationEventHandler : AKRectangularAnnotationEventHandler
  // class methods
  +[AKNoteAnnotationEventHandler allowsDragging]

  // instance methods
  -[AKNoteAnnotationEventHandler handleDownEvent:orRecognizer:]
  -[AKNoteAnnotationEventHandler enterDraggableAreaEventTrackingLoopWithEvent:orRecognizer:]
  -[AKNoteAnnotationEventHandler continueDraggableAreaEventTrackingLoopWithEvent:orRecognizer:]


AKAnnotationEventHandler : NSObject /usr/lib/libc++.1.dylib
 @property  AKPageController *pageController
 @property  AKAnnotation *annotation
 @property  unsigned long initiallyDraggedArea
 @property  {CGPoint=dd} initialDraggedPoint
 @property  {CGPoint=dd} initialOtherPoint
 @property  {CGPoint=dd} initialCenter
 @property  BOOL draggingHorizontalOnly
 @property  BOOL draggingVerticalOnly
 @property  {CGPoint=dd} lastPositionInModel
 @property  {CGPoint=dd} lastPositionInWindow

  // class methods
  +[AKAnnotationEventHandler allowsDragging]
  +[AKAnnotationEventHandler annotationRectangleForDraggingBounds:forAnnotation:onPageController:withOriginalCenter:]
  +[AKAnnotationEventHandler _handlerClassForPlatformForAnnotation:]
  +[AKAnnotationEventHandler newAnnotationEventHandlerForCurrentPlatformForAnnotation:withPageController:]
  +[AKAnnotationEventHandler allowsDraggingOfAnnotation:]

  // instance methods
  -[AKAnnotationEventHandler .cxx_destruct]
  -[AKAnnotationEventHandler pageController]
  -[AKAnnotationEventHandler setPageController:]
  -[AKAnnotationEventHandler annotation]
  -[AKAnnotationEventHandler setAnnotation:]
  -[AKAnnotationEventHandler initiallyDraggedArea]
  -[AKAnnotationEventHandler getInitialDraggedPoint:otherPoint:center:forEvent:orRecognizer:]
  -[AKAnnotationEventHandler updateModelWithCurrentPoint:]
  -[AKAnnotationEventHandler initialCenter]
  -[AKAnnotationEventHandler initialOtherPoint]
  -[AKAnnotationEventHandler lastPositionInModel]
  -[AKAnnotationEventHandler initialDraggedPoint]
  -[AKAnnotationEventHandler naturalAspectRatioForAnnotation]
  -[AKAnnotationEventHandler lockAspectRatioByDefault]
  -[AKAnnotationEventHandler naturalSizeForAnnotation]
  -[AKAnnotationEventHandler handleDownEvent:orRecognizer:]
  -[AKAnnotationEventHandler enterDraggableAreaEventTrackingLoopWithEvent:orRecognizer:]
  -[AKAnnotationEventHandler continueDraggableAreaEventTrackingLoopWithEvent:orRecognizer:]
  -[AKAnnotationEventHandler setupDraggingConstraints]
  -[AKAnnotationEventHandler _initWithAnnotation:andPageController:]
  -[AKAnnotationEventHandler setDraggingHorizontalOnly:]
  -[AKAnnotationEventHandler setDraggingVerticalOnly:]
  -[AKAnnotationEventHandler draggingHorizontalOnly]
  -[AKAnnotationEventHandler draggingVerticalOnly]
  -[AKAnnotationEventHandler canLockAspectRatio]
  -[AKAnnotationEventHandler alwaysLockAspectRatio]
  -[AKAnnotationEventHandler setInitialDraggedPoint:]
  -[AKAnnotationEventHandler setInitialOtherPoint:]
  -[AKAnnotationEventHandler setInitialCenter:]
  -[AKAnnotationEventHandler windowPointFromEvent:orRecognizer:]
  -[AKAnnotationEventHandler setLastPositionInWindow:]
  -[AKAnnotationEventHandler lastPositionInWindow]
  -[AKAnnotationEventHandler modelPointFromPointInWindow:]
  -[AKAnnotationEventHandler setLastPositionInModel:]
  -[AKAnnotationEventHandler setInitiallyDraggedArea:]


AKStatistics : NSObject /usr/lib/libc++.1.dylib
 @property  NSCountedSet *annotationsCounts
 @property  NSString *documentType
 @property  NSString *clientPrefix

  // class methods
  +[AKStatistics nameForAnnotation:]
  +[AKStatistics nameForClassName:]

  // instance methods
  -[AKStatistics .cxx_destruct]
  -[AKStatistics documentType]
  -[AKStatistics setDocumentType:]
  -[AKStatistics logShapeDetectionHUDShown]
  -[AKStatistics logShapeDetectionHUDPickedShape:]
  -[AKStatistics logInkAnnotationStrokeAdded:]
  -[AKStatistics setClientPrefix:]
  -[AKStatistics resetLogging]
  -[AKStatistics logDocumentSaved]
  -[AKStatistics setAnnotationsCounts:]
  -[AKStatistics annotationsCounts]
  -[AKStatistics clientPrefix]
  -[AKStatistics logAnnotationAdded:]


AKSignaturesViewController_iOS : UIViewController /usr/lib/libobjc.A.dylib <UITableViewDataSource, UITableViewDelegate, UINavigationBarDelegate, AKSignatureCreationControllerDelegate>
 @property  UITableView *tableView
 @property  UINavigationBar *navBar
 @property  NSArray *rightBarItems
 @property  NSArray *editingLeftBarItems
 @property  NSArray *leftBarItems
 @property  UIResponder *responderToRestore
 @property  AKController *controller
 @property  <AKSignaturesViewControllerDelegate> *delegate
 @property  double idealHeight
 @property  BOOL presentedInAlert
 @property  BOOL showsNavigationBar
 @property  BOOL allowsEdits
 @property  BOOL showAddEditButtonRow
 @property  UIColor *tableBackgroundColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKSignaturesViewController_iOS delegate]
  -[AKSignaturesViewController_iOS setDelegate:]
  -[AKSignaturesViewController_iOS .cxx_destruct]
  -[AKSignaturesViewController_iOS traitCollectionDidChange:]
  -[AKSignaturesViewController_iOS becomeFirstResponder]
  -[AKSignaturesViewController_iOS tableView]
  -[AKSignaturesViewController_iOS preferredContentSize]
  -[AKSignaturesViewController_iOS viewDidLoad]
  -[AKSignaturesViewController_iOS viewWillLayoutSubviews]
  -[AKSignaturesViewController_iOS viewDidAppear:]
  -[AKSignaturesViewController_iOS viewDidDisappear:]
  -[AKSignaturesViewController_iOS canBecomeFirstResponder]
  -[AKSignaturesViewController_iOS positionForBar:]
  -[AKSignaturesViewController_iOS setController:]
  -[AKSignaturesViewController_iOS controller]
  -[AKSignaturesViewController_iOS tableView:numberOfRowsInSection:]
  -[AKSignaturesViewController_iOS tableView:cellForRowAtIndexPath:]
  -[AKSignaturesViewController_iOS tableView:canEditRowAtIndexPath:]
  -[AKSignaturesViewController_iOS tableView:commitEditingStyle:forRowAtIndexPath:]
  -[AKSignaturesViewController_iOS setTableView:]
  -[AKSignaturesViewController_iOS tableView:willDisplayCell:forRowAtIndexPath:]
  -[AKSignaturesViewController_iOS tableView:didSelectRowAtIndexPath:]
  -[AKSignaturesViewController_iOS tableBackgroundColor]
  -[AKSignaturesViewController_iOS _canShowWhileLocked]
  -[AKSignaturesViewController_iOS setTableBackgroundColor:]
  -[AKSignaturesViewController_iOS _signatures]
  -[AKSignaturesViewController_iOS initWithController:]
  -[AKSignaturesViewController_iOS setPresentedInAlert:]
  -[AKSignaturesViewController_iOS setShowsNavigationBar:]
  -[AKSignaturesViewController_iOS setAllowsEdits:]
  -[AKSignaturesViewController_iOS signatureCreationControllerDidCreateSignature:]
  -[AKSignaturesViewController_iOS setNavBar:]
  -[AKSignaturesViewController_iOS navBar]
  -[AKSignaturesViewController_iOS setResponderToRestore:]
  -[AKSignaturesViewController_iOS responderToRestore]
  -[AKSignaturesViewController_iOS presentedInAlert]
  -[AKSignaturesViewController_iOS idealHeight]
  -[AKSignaturesViewController_iOS _configureUI]
  -[AKSignaturesViewController_iOS showsNavigationBar]
  -[AKSignaturesViewController_iOS allowsEdits]
  -[AKSignaturesViewController_iOS _continueToCreateSignature:]
  -[AKSignaturesViewController_iOS _cancelPicker:]
  -[AKSignaturesViewController_iOS setRightBarItems:]
  -[AKSignaturesViewController_iOS setLeftBarItems:]
  -[AKSignaturesViewController_iOS leftBarItems]
  -[AKSignaturesViewController_iOS rightBarItems]
  -[AKSignaturesViewController_iOS _deleteSignature:]
  -[AKSignaturesViewController_iOS showAddEditButtonRow]
  -[AKSignaturesViewController_iOS setShowAddEditButtonRow:]
  -[AKSignaturesViewController_iOS editingLeftBarItems]
  -[AKSignaturesViewController_iOS setEditingLeftBarItems:]


AKSignatureTableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib
 @property  AKSignature *signature
 @property  UIImageView *signatureImageView

  // instance methods
  -[AKSignatureTableViewCell initWithCoder:]
  -[AKSignatureTableViewCell .cxx_destruct]
  -[AKSignatureTableViewCell signature]
  -[AKSignatureTableViewCell _commonInit]
  -[AKSignatureTableViewCell layoutSubviews]
  -[AKSignatureTableViewCell initWithStyle:reuseIdentifier:]
  -[AKSignatureTableViewCell setSignature:]
  -[AKSignatureTableViewCell signatureImageView]
  -[AKSignatureTableViewCell setSignatureImageView:]
  -[AKSignatureTableViewCell _setImageFromSignature]


AKOvalAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKOvalAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKOvalAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKOvalAnnotationRenderer _concreteTextBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKOvalAnnotationRenderer _concreteRectangleForAnnotation:withTextBounds:]
  +[AKOvalAnnotationRenderer _newConcreteTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKOvalAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKOvalAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKOvalAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKOvalAnnotationRenderer _newPathForAnnotation:]


AKBitmapFIFO : CHPointFIFO /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  {CGSize=dd} bitmapSize
 @property  BOOL bitmapSizeHasBeenUpdatedOnceForLiveDraw
 @property  void lastPoint
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} unionDirtyRect
 @property  {CGAffineTransform=dddddd} viewToBitmapTransform
 @property  double bitmapSizeMultiplier
 @property  BOOL isInLiveDraw
 @property  UIView *view
 @property  double shadowRadiusInView

  // instance methods
  -[AKBitmapFIFO clear]
  -[AKBitmapFIFO .cxx_destruct]
  -[AKBitmapFIFO flush]
  -[AKBitmapFIFO teardown]
  -[AKBitmapFIFO view]
  -[AKBitmapFIFO addPoint:]
  -[AKBitmapFIFO initWithFIFO:]
  -[AKBitmapFIFO setLastPoint:]
  -[AKBitmapFIFO lastPoint]
  -[AKBitmapFIFO setView:]
  -[AKBitmapFIFO setIsInLiveDraw:]
  -[AKBitmapFIFO setBitmapSizeMultiplier:]
  -[AKBitmapFIFO newPathFromCurrentBitmap]
  -[AKBitmapFIFO currentBitmap]
  -[AKBitmapFIFO viewToBitmapTransform]
  -[AKBitmapFIFO bitmapRectInView]
  -[AKBitmapFIFO resetDirtyRect]
  -[AKBitmapFIFO shadowRadiusInView]
  -[AKBitmapFIFO setShadowRadiusInView:]
  -[AKBitmapFIFO setBitmapSize:]
  -[AKBitmapFIFO setBitmapSizeHasBeenUpdatedOnceForLiveDraw:]
  -[AKBitmapFIFO setViewToBitmapTransform:]
  -[AKBitmapFIFO setUnionDirtyRect:]
  -[AKBitmapFIFO _clearAllBitmapData]
  -[AKBitmapFIFO _clearCachedPath]
  -[AKBitmapFIFO _createBitmapContextIfNecessary]
  -[AKBitmapFIFO _addPointToBitmap:]
  -[AKBitmapFIFO _updateBitmapSizeFromViewIfNecessary]
  -[AKBitmapFIFO _convertPointToScreenBacking:]
  -[AKBitmapFIFO _createBitmapIfNecessary]
  -[AKBitmapFIFO isInLiveDraw]
  -[AKBitmapFIFO bitmapSizeHasBeenUpdatedOnceForLiveDraw]
  -[AKBitmapFIFO bitmapSizeMultiplier]
  -[AKBitmapFIFO bitmapSize]
  -[AKBitmapFIFO _addSinglePointToBitmap:]
  -[AKBitmapFIFO _applyDirtyRectToView]
  -[AKBitmapFIFO _addToDirtyRect:]
  -[AKBitmapFIFO unionDirtyRect]


AKCandidatePickerView_iOS : UIView /usr/lib/libobjc.A.dylib
 @property  UIStackView *buttonContainer
 @property  UIVisualEffectView *visualEffectView
 @property  long long blurStyle
 @property  NSArray *itemTags
 @property  NSArray *annotations
 @property  NSArray *buttons
 @property  id target
 @property  SEL action

  // instance methods
  -[AKCandidatePickerView_iOS .cxx_destruct]
  -[AKCandidatePickerView_iOS setTarget:]
  -[AKCandidatePickerView_iOS target]
  -[AKCandidatePickerView_iOS action]
  -[AKCandidatePickerView_iOS intrinsicContentSize]
  -[AKCandidatePickerView_iOS setAction:]
  -[AKCandidatePickerView_iOS blurStyle]
  -[AKCandidatePickerView_iOS setBlurStyle:]
  -[AKCandidatePickerView_iOS visualEffectView]
  -[AKCandidatePickerView_iOS setSelectedIndex:]
  -[AKCandidatePickerView_iOS setButtons:]
  -[AKCandidatePickerView_iOS buttons]
  -[AKCandidatePickerView_iOS setVisualEffectView:]
  -[AKCandidatePickerView_iOS annotations]
  -[AKCandidatePickerView_iOS setAnnotations:]
  -[AKCandidatePickerView_iOS initWithFrame:items:annotations:target:action:visualStyle:]
  -[AKCandidatePickerView_iOS setBarHidden:animated:completion:]
  -[AKCandidatePickerView_iOS _createButtonsWithBlurStyle:]
  -[AKCandidatePickerView_iOS _selectBackground:animated:]
  -[AKCandidatePickerView_iOS itemTags]
  -[AKCandidatePickerView_iOS _selectBackground:]
  -[AKCandidatePickerView_iOS buttonContainer]
  -[AKCandidatePickerView_iOS tagForCandidateItemAtIndex:]
  -[AKCandidatePickerView_iOS setButtonContainer:]
  -[AKCandidatePickerView_iOS setItemTags:]


AKOverlayView : UIView /usr/lib/libobjc.A.dylib
 @property  AKPageController *pageController
 @property  AKMainEventHandler *mainEventHandler
 @property  BOOL isObserving
 @property  BOOL deferWasMovedToSuperviewUntilMoveToWindow
 @property  UIScrollView *observedScrollView
 @property  BOOL scrollViewIsInLiveMagnify

  // class methods
  +[AKOverlayView initialize]

  // instance methods
  -[AKOverlayView dealloc]
  -[AKOverlayView .cxx_destruct]
  -[AKOverlayView observeValueForKeyPath:ofObject:change:context:]
  -[AKOverlayView layoutSublayersOfLayer:]
  -[AKOverlayView canPerformAction:withSender:]
  -[AKOverlayView canBecomeFirstResponder]
  -[AKOverlayView didMoveToSuperview]
  -[AKOverlayView didMoveToWindow]
  -[AKOverlayView willMoveToSuperview:]
  -[AKOverlayView hitTest:withEvent:]
  -[AKOverlayView _scrollViewDidEndDragging:]
  -[AKOverlayView pageController]
  -[AKOverlayView setPageController:]
  -[AKOverlayView delete:]
  -[AKOverlayView isObserving]
  -[AKOverlayView _scrollViewDidEndDecelerating:]
  -[AKOverlayView initWithPageController:]
  -[AKOverlayView mainEventHandler]
  -[AKOverlayView setMainEventHandler:]
  -[AKOverlayView duplicate:]
  -[AKOverlayView updateLayers]
  -[AKOverlayView editTextAnnotation:]
  -[AKOverlayView _teardownObservation]
  -[AKOverlayView _willRemoveFromOldSuperview]
  -[AKOverlayView _wasMovedToNewSuperview]
  -[AKOverlayView setDeferWasMovedToSuperviewUntilMoveToWindow:]
  -[AKOverlayView deferWasMovedToSuperviewUntilMoveToWindow]
  -[AKOverlayView _updateLayersUsingScrollView]
  -[AKOverlayView _postScrollViewRectChangedNotification]
  -[AKOverlayView _updateLayersUsingScrollViewWithForcedUpdate:]
  -[AKOverlayView observedScrollView]
  -[AKOverlayView scrollViewIsInLiveMagnify]
  -[AKOverlayView setIsObserving:]
  -[AKOverlayView setObservedScrollView:]
  -[AKOverlayView _willStartLiveMagnify:]
  -[AKOverlayView _willEndLiveMagnify:]
  -[AKOverlayView _scrollViewDidEndAnimation:]
  -[AKOverlayView _scrollViewDidScrollToTop:]
  -[AKOverlayView _setupObservation]
  -[AKOverlayView setScrollViewIsInLiveMagnify:]
  -[AKOverlayView _postScrollViewScrollOrMagnifyEndNotification]


AKOvalAnnotationEventHandler : AKRectangularAnnotationEventHandler

AKToolbarViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  AKController *controller
 @property  BOOL isPresentingPopover

  // class methods
  +[AKToolbarViewController imageForToolbarButtonItemOfType:]
  +[AKToolbarViewController _imageNameForToolbarButtonItemOfType:]
  +[AKToolbarViewController titleForToolbarButtonItemOfType:]
  +[AKToolbarViewController alternateImageForToolbarButtonItemOfType:]
  +[AKToolbarViewController buttonTypeForToolbarButtonItemOfType:]

  // instance methods
  -[AKToolbarViewController .cxx_destruct]
  -[AKToolbarViewController teardown]
  -[AKToolbarViewController setController:]
  -[AKToolbarViewController controller]
  -[AKToolbarViewController initWithController:]
  -[AKToolbarViewController revalidateItems]
  -[AKToolbarViewController isPresentingPopover]
  -[AKToolbarViewController setFillColorUIDisplayToColor:]
  -[AKToolbarViewController setStrokeColorUIDisplayToColor:]
  -[AKToolbarViewController _toolbarButtonItemOfType:]


AKLoupeAnnotation : AKStrokedAnnotation <AKRectangularAnnotationProtocol>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rectangle
 @property  double magnification
 @property  NSData *imageData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKLoupeAnnotation supportsSecureCoding]
  +[AKLoupeAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKLoupeAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKLoupeAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKLoupeAnnotation copyWithZone:]
  -[AKLoupeAnnotation encodeWithCoder:]
  -[AKLoupeAnnotation initWithCoder:]
  -[AKLoupeAnnotation .cxx_destruct]
  -[AKLoupeAnnotation displayName]
  -[AKLoupeAnnotation imageData]
  -[AKLoupeAnnotation setImageData:]
  -[AKLoupeAnnotation setRectangle:]
  -[AKLoupeAnnotation keysForValuesToObserveForUndo]
  -[AKLoupeAnnotation rectangle]
  -[AKLoupeAnnotation magnification]
  -[AKLoupeAnnotation keysForValuesToObserveForRedrawing]
  -[AKLoupeAnnotation adjustModelToCompensateForOriginalExif]
  -[AKLoupeAnnotation hitTestBounds]
  -[AKLoupeAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKLoupeAnnotation translateBy:]
  -[AKLoupeAnnotation keysForValuesToObserveForAdornments]
  -[AKLoupeAnnotation setMagnification:]


AKShapeAnnotation : AKStrokedAnnotation <AKFilledAnnotationProtocol>
 @property  UIColor *fillColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKShapeAnnotation supportsSecureCoding]
  +[AKShapeAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKShapeAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKShapeAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKShapeAnnotation encodeWithCoder:]
  -[AKShapeAnnotation initWithCoder:]
  -[AKShapeAnnotation .cxx_destruct]
  -[AKShapeAnnotation displayName]
  -[AKShapeAnnotation fillColor]
  -[AKShapeAnnotation setFillColor:]
  -[AKShapeAnnotation keysForValuesToObserveForUndo]
  -[AKShapeAnnotation keysForValuesToObserveForRedrawing]


AKRectangularPageSizedAnnotationEventHandler : AKRectangularAnnotationEventHandler
  // instance methods
  -[AKRectangularPageSizedAnnotationEventHandler getInitialDraggedPoint:otherPoint:center:forEvent:orRecognizer:]
  -[AKRectangularPageSizedAnnotationEventHandler updateModelWithCurrentPoint:]
  -[AKRectangularPageSizedAnnotationEventHandler _validateAnnotationRectForResize:]
  -[AKRectangularPageSizedAnnotationEventHandler _validateAnnotationRectForDrag:]


AKInkAnnotationEventHandler : AKRectangularAnnotationEventHandler
  // class methods
  +[AKInkAnnotationEventHandler allowsDraggingOfAnnotation:]

  // instance methods
  -[AKInkAnnotationEventHandler naturalSizeForAnnotation]
  -[AKInkAnnotationEventHandler handleDownEvent:orRecognizer:]
  -[AKInkAnnotationEventHandler enterDraggableAreaEventTrackingLoopWithEvent:orRecognizer:]
  -[AKInkAnnotationEventHandler alwaysLockAspectRatio]


AKLongPressGestureRecognizer : UILongPressGestureRecognizer /usr/lib/libobjc.A.dylib <AKPenDetectionGestureRecognizerProtocol>
 @property  BOOL penGestureDetected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKLongPressGestureRecognizer reset]
  -[AKLongPressGestureRecognizer touchesBegan:withEvent:]
  -[AKLongPressGestureRecognizer touchesMoved:withEvent:]
  -[AKLongPressGestureRecognizer touchesEnded:withEvent:]
  -[AKLongPressGestureRecognizer touchesCancelled:withEvent:]
  -[AKLongPressGestureRecognizer setPenGestureDetected:]
  -[AKLongPressGestureRecognizer _checkTouchesForStylus:]
  -[AKLongPressGestureRecognizer penGestureDetected]


AKTextFieldAnnotation : AKTextBoxAnnotation
 @property  NSString *fieldName

  // class methods
  +[AKTextFieldAnnotation supportsSecureCoding]

  // instance methods
  -[AKTextFieldAnnotation encodeWithCoder:]
  -[AKTextFieldAnnotation initWithCoder:]
  -[AKTextFieldAnnotation .cxx_destruct]
  -[AKTextFieldAnnotation fieldName]
  -[AKTextFieldAnnotation setFieldName:]


AKTwoPointLinePointOfInterestHelper : AKAnnotationPointOfInterestHelper
  // class methods
  +[AKTwoPointLinePointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKTwoPointLinePointOfInterestHelper _concreteDraggableAreaForPointOfInterestWithIndex:ofAnnotation:onPageController:]
  +[AKTwoPointLinePointOfInterestHelper _concreteValidatePoint:ofDraggableArea:forAnnotation:onPageController:]


AKBorderMaskAnnotation : AKAnnotation <AKRectangularAnnotationProtocol, AKFilledAnnotationProtocol>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rectangle
 @property  UIColor *fillColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKBorderMaskAnnotation supportsSecureCoding]
  +[AKBorderMaskAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKBorderMaskAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKBorderMaskAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKBorderMaskAnnotation encodeWithCoder:]
  -[AKBorderMaskAnnotation initWithCoder:]
  -[AKBorderMaskAnnotation .cxx_destruct]
  -[AKBorderMaskAnnotation displayName]
  -[AKBorderMaskAnnotation fillColor]
  -[AKBorderMaskAnnotation setFillColor:]
  -[AKBorderMaskAnnotation setRectangle:]
  -[AKBorderMaskAnnotation keysForValuesToObserveForUndo]
  -[AKBorderMaskAnnotation rectangle]
  -[AKBorderMaskAnnotation keysForValuesToObserveForRedrawing]
  -[AKBorderMaskAnnotation adjustModelToCompensateForOriginalExif]
  -[AKBorderMaskAnnotation hitTestBounds]
  -[AKBorderMaskAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKBorderMaskAnnotation translateBy:]


AKTextBoxAnnotation : AKRectangularShapeAnnotation
  // class methods
  +[AKTextBoxAnnotation defaultPlaceholderText]
  +[AKTextBoxAnnotation deleteAfterEditingIfEmpty]

  // instance methods
  -[AKTextBoxAnnotation init]
  -[AKTextBoxAnnotation displayName]
  -[AKTextBoxAnnotation hitTestBounds]


AKTextLayoutManager : NSLayoutManager /usr/lib/libobjc.A.dylib
  // instance methods
  -[AKTextLayoutManager allowsOriginalFontMetricsOverride]


AKCropAdornmentLayer : AKAdornmentLayer
 @property  CAShapeLayer *handlesLayer

  // instance methods
  -[AKCropAdornmentLayer .cxx_destruct]
  -[AKCropAdornmentLayer updateAdornmentElements]
  -[AKCropAdornmentLayer updateSublayersWithScale:]
  -[AKCropAdornmentLayer needsUpdateWhenDraggingStartsOrEnds]
  -[AKCropAdornmentLayer handlesLayer]
  -[AKCropAdornmentLayer _addHandles]
  -[AKCropAdornmentLayer _updateHandles]
  -[AKCropAdornmentLayer _shouldShowHandles]
  -[AKCropAdornmentLayer _removeHandles]
  -[AKCropAdornmentLayer setHandlesLayer:]


AKFormFeature : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rect
 @property  AKPageController *page

  // class methods
  +[AKFormFeature featureWithRect:onPage:]

  // instance methods
  -[AKFormFeature copyWithZone:]
  -[AKFormFeature .cxx_destruct]
  -[AKFormFeature rect]
  -[AKFormFeature page]
  -[AKFormFeature setPage:]
  -[AKFormFeature setRect:]
  -[AKFormFeature initWithRect:onPage:]


AKFormFeatureLine : AKFormFeature

AKFormFeatureBox : AKFormFeature
 @property  unsigned long flags
 @property  BOOL widthExpands
 @property  BOOL multiline
 @property  unsigned long alignment
 @property  AKFormFeatureLine *baseline
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} enclosingRegionRect

  // class methods
  +[AKFormFeatureBox boxWithRect:onPage:flags:baseline:]

  // instance methods
  -[AKFormFeatureBox .cxx_destruct]
  -[AKFormFeatureBox flags]
  -[AKFormFeatureBox alignment]
  -[AKFormFeatureBox setAlignment:]
  -[AKFormFeatureBox setFlags:]
  -[AKFormFeatureBox setBaseline:]
  -[AKFormFeatureBox baseline]
  -[AKFormFeatureBox isMultiline]
  -[AKFormFeatureBox setMultiline:]
  -[AKFormFeatureBox setEnclosingRegionRect:]
  -[AKFormFeatureBox enclosingRegionRect]
  -[AKFormFeatureBox initWithRect:onPage:flags:baseline:]
  -[AKFormFeatureBox widthExpands]
  -[AKFormFeatureBox setWidthExpands:]


AKFormFeatureCheckbox : AKFormFeature
  // class methods
  +[AKFormFeatureCheckbox checkboxWithRect:onPage:]


AKFormFeatureSegmented : AKFormFeature
 @property  AKFormFeatureLine *baseline
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} enclosingRegionRect
 @property  NSArray *characterSegmentRects

  // class methods
  +[AKFormFeatureSegmented segments:withEnclosingRect:baseline:onPage:]

  // instance methods
  -[AKFormFeatureSegmented .cxx_destruct]
  -[AKFormFeatureSegmented setBaseline:]
  -[AKFormFeatureSegmented baseline]
  -[AKFormFeatureSegmented setEnclosingRegionRect:]
  -[AKFormFeatureSegmented enclosingRegionRect]
  -[AKFormFeatureSegmented initWithCharacterSegments:enclosingRect:baseline:onPage:]
  -[AKFormFeatureSegmented characterSegmentRects]
  -[AKFormFeatureSegmented setCharacterSegmentRects:]


AKNoPointOfInterestHelper : AKAnnotationPointOfInterestHelper
  // class methods
  +[AKNoPointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKNoPointOfInterestHelper _concreteDraggableAreaForPoint:onAnnotation:withScale:pageControllerForPixelAlignment:]


AKPageControllerForTesting : AKPageController
 @property  AKController *testingController
 @property  unsigned long testingPageIndex
 @property  AKPageModelController *testingPageModelController
 @property  AKLayerPresentationManager *testingLayerPresentationManager
 @property  AKGeometryHelper *testingGeometryHelper
 @property  UIView *testingOverlayView

  // instance methods
  -[AKPageControllerForTesting init]
  -[AKPageControllerForTesting .cxx_destruct]
  -[AKPageControllerForTesting controller]
  -[AKPageControllerForTesting pageIndex]
  -[AKPageControllerForTesting overlayView]
  -[AKPageControllerForTesting modelBaseScaleFactor]
  -[AKPageControllerForTesting geometryHelper]
  -[AKPageControllerForTesting pageModelController]
  -[AKPageControllerForTesting layerPresentationManager]
  -[AKPageControllerForTesting maxPageRect]
  -[AKPageControllerForTesting convertPointFromOverlayToModel:]
  -[AKPageControllerForTesting convertRectFromOverlayToModel:]
  -[AKPageControllerForTesting convertRectFromModelToOverlay:]
  -[AKPageControllerForTesting convertPointFromModelToOverlay:]
  -[AKPageControllerForTesting testingOverlayView]
  -[AKPageControllerForTesting setTestingOverlayView:]
  -[AKPageControllerForTesting testingController]
  -[AKPageControllerForTesting testingPageIndex]
  -[AKPageControllerForTesting testingPageModelController]
  -[AKPageControllerForTesting testingLayerPresentationManager]
  -[AKPageControllerForTesting testingGeometryHelper]
  -[AKPageControllerForTesting setTestingController:]
  -[AKPageControllerForTesting setTestingPageIndex:]
  -[AKPageControllerForTesting setTestingPageModelController:]
  -[AKPageControllerForTesting setTestingLayerPresentationManager:]
  -[AKPageControllerForTesting setTestingGeometryHelper:]


AKAnnotationPopoverViewController : UIViewController /usr/lib/libobjc.A.dylib <UIGestureRecognizerDelegate, AKPopoverAnnotationEditor>
 @property  UIView *presentationView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} presentationRect
 @property  <AKAnnotationEditorDelegate> *delegate
 @property  int position
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  AKAnnotation *annotation
 @property  AKPageController *annotationPageController
 @property  AKAnnotationTheme *annotationTheme
 @property  BOOL editsOnLaunch
 @property  IMTheme *theme

  // instance methods
  -[AKAnnotationPopoverViewController init]
  -[AKAnnotationPopoverViewController dealloc]
  -[AKAnnotationPopoverViewController delegate]
  -[AKAnnotationPopoverViewController setDelegate:]
  -[AKAnnotationPopoverViewController .cxx_destruct]
  -[AKAnnotationPopoverViewController position]
  -[AKAnnotationPopoverViewController setPosition:]
  -[AKAnnotationPopoverViewController gestureRecognizerShouldBegin:]
  -[AKAnnotationPopoverViewController viewDidLoad]
  -[AKAnnotationPopoverViewController didReceiveMemoryWarning]
  -[AKAnnotationPopoverViewController hide]
  -[AKAnnotationPopoverViewController presentationView]
  -[AKAnnotationPopoverViewController didShow]
  -[AKAnnotationPopoverViewController willShow]
  -[AKAnnotationPopoverViewController annotation]
  -[AKAnnotationPopoverViewController presentationRect]
  -[AKAnnotationPopoverViewController setAnnotation:]
  -[AKAnnotationPopoverViewController releaseOutlets]
  -[AKAnnotationPopoverViewController annotationTheme]
  -[AKAnnotationPopoverViewController presentFromRect:view:]
  -[AKAnnotationPopoverViewController setAnnotationTheme:]
  -[AKAnnotationPopoverViewController canPresentInPosition:]
  -[AKAnnotationPopoverViewController setAnnotationPageController:]
  -[AKAnnotationPopoverViewController p_containerFrameForView:]
  -[AKAnnotationPopoverViewController setPresentationView:]
  -[AKAnnotationPopoverViewController setPresentationRect:]
  -[AKAnnotationPopoverViewController popInAnimation:finished:context:]
  -[AKAnnotationPopoverViewController willHide]
  -[AKAnnotationPopoverViewController hideAnimation:finished:context:]
  -[AKAnnotationPopoverViewController didHide]
  -[AKAnnotationPopoverViewController annotationPageController]
  -[AKAnnotationPopoverViewController editsOnLaunch]
  -[AKAnnotationPopoverViewController setEditsOnLaunch:]
  -[AKAnnotationPopoverViewController willPresentInPosition:view:]


AKHighlightAppearanceHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKHighlightAppearanceHelper attributeTagForHighlightOfColor:]
  +[AKHighlightAppearanceHelper colorForNoteOfHighlightAttributeTag:]
  +[AKHighlightAppearanceHelper borderColorForNoteOfHighlightAttributeTag:]
  +[AKHighlightAppearanceHelper colorForHighlightAttributeWithTag:]
  +[AKHighlightAppearanceHelper highlightColor:isEquivalentToHighlightColor:]
  +[AKHighlightAppearanceHelper annotationStyleForHighlightAttributeWithTag:]
  +[AKHighlightAppearanceHelper attributeTagForNoteOfColor:]


AKArrowAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKArrowAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKArrowAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKArrowAnnotationRenderer _concreteTextBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKArrowAnnotationRenderer _newConcreteTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKArrowAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKArrowAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKArrowAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKArrowAnnotationRenderer _drawPathForArrow:inContext:inPath:pageControllerForPixelAlignmentOrNil:minimumGrabbableBorderThickness:]
  +[AKArrowAnnotationRenderer _controlPointsForArrow:outControlPoint1:outControlPoint2:]
  +[AKArrowAnnotationRenderer _arrowHeadPathsForArrow:inOutStartArrowHead:outBezierStartParameter:inOutEndArrowHead:outBezierEndParameter:]
  +[AKArrowAnnotationRenderer _newLinePathForArrow:withHeads:fromBezierParameter:toBezierParameter:optionalPageController:optionalContext:]
  +[AKArrowAnnotationRenderer _arrowHeadLineIntersection:outStartIntersection:outBezierStartParameter:outEndIntersection:outBezierEndParameter:]
  +[AKArrowAnnotationRenderer _drawableArrowHeads:]
  +[AKArrowAnnotationRenderer _oneDimensionalCubicBezierValueForParameter:start:controlPt1:controlPt2:end:]
  +[AKArrowAnnotationRenderer _cubicBezierPointForParameter:start:controlPt1:controlPt2:end:]


AKMainEventHandler : UIResponder /usr/lib/libobjc.A.dylib <AKFormFeatureDetectorDelegate>
 @property  BOOL shouldEatNextLeftMouseUp
 @property  BOOL shouldEatNextRightMouseUp
 @property  BOOL dragDidCopySelectedAnnotations
 @property  BOOL undoManagerWasGroupingByEvent
 @property  {CGPoint=dd} leftMouseDownPoint
 @property  AKPageController *dragPageController
 @property  AKAlignmentGuideController *dragAlignmentGuideController
 @property  {CGPoint=dd} lastDragPoint
 @property  {CGPoint=dd} lastDragActualLocation
 @property  {CGPoint=dd} lastDragActualLocationInWindow
 @property  double draggedAnnotationsMaxLeftEdge
 @property  double draggedAnnotationsMinRightEdge
 @property  double draggedAnnotationsMaxBottomEdge
 @property  double draggedAnnotationsMinTopEdge
 @property  UIEvent *lastEventWithValidLocationForAutoscroll
 @property  UIEvent *lastLeftMouseDownEvent
 @property  BOOL wasSelectedByLongPressRecognizer
 @property  AKAnnotation *annotationToBeginEditingOnDragEnd
 @property  AKHighlightColorEditorController *highlightColorEditor
 @property  AKController *controller
 @property  unsigned long currentModifierFlags
 @property  BOOL mainEventHandlerIsInTrackingLoop
 @property  BOOL mainEventHandlerIsInDoodleTrackingLoop
 @property  BOOL mainEventHandlerIsInRotationLoop
 @property  {CGPoint=dd} firstDragPoint
 @property  {CGPoint=dd} panGestureStartPointInWindow
 @property  AKAnnotationEventHandler *annotationEventHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKMainEventHandler newMainEventHandlerForCurrentPlatformWithController:]

  // instance methods
  -[AKMainEventHandler .cxx_destruct]
  -[AKMainEventHandler teardown]
  -[AKMainEventHandler setController:]
  -[AKMainEventHandler controller]
  -[AKMainEventHandler initWithController:]
  -[AKMainEventHandler firstDragPoint]
  -[AKMainEventHandler handleDownEvent:orRecognizer:]
  -[AKMainEventHandler hitTestAnnotationsIncludingPOI:ignoreIfDeselected:atPointInWindow:outAnnotation:]
  -[AKMainEventHandler mainEventHandlerIsInTrackingLoop]
  -[AKMainEventHandler annotationEventHandler]
  -[AKMainEventHandler mainEventHandlerIsInRotationLoop]
  -[AKMainEventHandler mainHandleEvent:orRecognizer:]
  -[AKMainEventHandler windowPointFromEvent:orRecognizer:]
  -[AKMainEventHandler setAnnotationEventHandler:]
  -[AKMainEventHandler setWasSelectedByLongPressRecognizer:]
  -[AKMainEventHandler continueDragEventTrackingLoopWithEvent:orRecognizer:]
  -[AKMainEventHandler setMainEventHandlerIsInTrackingLoop:]
  -[AKMainEventHandler setLeftMouseDownPoint:]
  -[AKMainEventHandler continueRotateEventTrackingLoopWithEvent:orRecognizer:]
  -[AKMainEventHandler setMainEventHandlerIsInRotationLoop:]
  -[AKMainEventHandler handleRotateEvent:orRecognizer:]
  -[AKMainEventHandler modelPointFromWindowPoint:foundOnPageController:]
  -[AKMainEventHandler setPanGestureStartPointInWindow:]
  -[AKMainEventHandler panGestureStartPointInWindow]
  -[AKMainEventHandler setAnnotationToBeginEditingOnDragEnd:]
  -[AKMainEventHandler modelPointFromEvent:orRecognizer:onPageController:]
  -[AKMainEventHandler handleDoubleDownEvent:orRecognizer:]
  -[AKMainEventHandler setMainEventHandlerIsInDoodleTrackingLoop:]
  -[AKMainEventHandler _setCurrentPageBasedOnPageController:]
  -[AKMainEventHandler mainEventHandlerIsInDoodleTrackingLoop]
  -[AKMainEventHandler annotationsPassingBoundingBoxHitTestsWithPoint:onPageController:]
  -[AKMainEventHandler wasSelectedByLongPressRecognizer]
  -[AKMainEventHandler hitTestPointsOfInterestsAtPoint:onPageController:inAnnotations:event:recognizer:cursorUpdateOnly:]
  -[AKMainEventHandler topmostAnnotationForBorderAndInteriorHitTestAtPoint:inAnnotations:onPageController:wasOnBorder:wasOnText:]
  -[AKMainEventHandler _updateSelectionWithAnnotation:onPageController:]
  -[AKMainEventHandler enterDragEventTrackingLoopWithEvent:orRecognizer:]
  -[AKMainEventHandler _detectFormElementInCurrentPageControllerUnderPointInWindow:]
  -[AKMainEventHandler _didNotHandleEventSoDeselect]
  -[AKMainEventHandler enterRotateEventTrackingLoopWithEvent:orRecognizer:]
  -[AKMainEventHandler setDraggedAnnotationsMaxLeftEdge:]
  -[AKMainEventHandler setDraggedAnnotationsMinRightEdge:]
  -[AKMainEventHandler setDraggedAnnotationsMaxBottomEdge:]
  -[AKMainEventHandler setDraggedAnnotationsMinTopEdge:]
  -[AKMainEventHandler draggedAnnotationsMaxLeftEdge]
  -[AKMainEventHandler draggedAnnotationsMinRightEdge]
  -[AKMainEventHandler draggedAnnotationsMaxBottomEdge]
  -[AKMainEventHandler draggedAnnotationsMinTopEdge]
  -[AKMainEventHandler setDragPageController:]
  -[AKMainEventHandler setDragAlignmentGuideController:]
  -[AKMainEventHandler _alignedAnnotationDragPointForPoint:withEvent:orRecognizer:]
  -[AKMainEventHandler setFirstDragPoint:]
  -[AKMainEventHandler setLastDragPoint:]
  -[AKMainEventHandler setLastDragActualLocationInWindow:]
  -[AKMainEventHandler setLastEventWithValidLocationForAutoscroll:]
  -[AKMainEventHandler lastDragPoint]
  -[AKMainEventHandler lastDragActualLocation]
  -[AKMainEventHandler lastDragActualLocationInWindow]
  -[AKMainEventHandler dragPageController]
  -[AKMainEventHandler _modelPointFromPointInWindow:usingPageController:]
  -[AKMainEventHandler setLastDragActualLocation:]
  -[AKMainEventHandler applyTranslationToAllSelectedAnnotations:]
  -[AKMainEventHandler finishTranslationOfAllSelectedAnnotations]
  -[AKMainEventHandler applyToAllSelectedAnnotationsRotateEvent:orRecognizer:]
  -[AKMainEventHandler setDragDidCopySelectedAnnotations:]
  -[AKMainEventHandler setUndoManagerWasGroupingByEvent:]
  -[AKMainEventHandler dragAlignmentGuideController]
  -[AKMainEventHandler leftMouseDownPoint]
  -[AKMainEventHandler handleRightDownEvent:]
  -[AKMainEventHandler handleKeyboardEvent:]
  -[AKMainEventHandler updateCursorForEvent:]
  -[AKMainEventHandler _detectFormElementInCurrentPageControllerUnderPointInWindow:withStartingPoint:]
  -[AKMainEventHandler currentModifierFlags]
  -[AKMainEventHandler setCurrentModifierFlags:]
  -[AKMainEventHandler shouldEatNextLeftMouseUp]
  -[AKMainEventHandler setShouldEatNextLeftMouseUp:]
  -[AKMainEventHandler shouldEatNextRightMouseUp]
  -[AKMainEventHandler setShouldEatNextRightMouseUp:]
  -[AKMainEventHandler dragDidCopySelectedAnnotations]
  -[AKMainEventHandler undoManagerWasGroupingByEvent]
  -[AKMainEventHandler lastEventWithValidLocationForAutoscroll]
  -[AKMainEventHandler lastLeftMouseDownEvent]
  -[AKMainEventHandler setLastLeftMouseDownEvent:]
  -[AKMainEventHandler annotationToBeginEditingOnDragEnd]
  -[AKMainEventHandler highlightColorEditor]
  -[AKMainEventHandler setHighlightColorEditor:]


AKSegmentedCtrl : UIControl /usr/lib/libobjc.A.dylib
 @property  NSArray *images
 @property  NSArray *buttons
 @property  unsigned long selectedSegment
 @property  NSMutableOrderedSet *selectionStack
 @property  unsigned long selectionType

  // instance methods
  -[AKSegmentedCtrl .cxx_destruct]
  -[AKSegmentedCtrl images]
  -[AKSegmentedCtrl setImages:]
  -[AKSegmentedCtrl _commonInit]
  -[AKSegmentedCtrl initWithFrame:]
  -[AKSegmentedCtrl setSelectedSegment:]
  -[AKSegmentedCtrl setEnabled:forSegment:]
  -[AKSegmentedCtrl isEnabledForSegment:]
  -[AKSegmentedCtrl selectedSegment]
  -[AKSegmentedCtrl setButtons:]
  -[AKSegmentedCtrl buttons]
  -[AKSegmentedCtrl segmentCount]
  -[AKSegmentedCtrl _buttonTapped:]
  -[AKSegmentedCtrl setSelectionType:]
  -[AKSegmentedCtrl selectionType]
  -[AKSegmentedCtrl initWithImages:]
  -[AKSegmentedCtrl tagForSegment:]
  -[AKSegmentedCtrl _configureForNewImages]
  -[AKSegmentedCtrl _setSelected:forSegment:]
  -[AKSegmentedCtrl segmentAtIndex:]
  -[AKSegmentedCtrl segmentForTag:]
  -[AKSegmentedCtrl setSelected:forSegment:]
  -[AKSegmentedCtrl isSelectedForSegment:]
  -[AKSegmentedCtrl selectSegmentWithTag:]
  -[AKSegmentedCtrl deselectAllSegments]
  -[AKSegmentedCtrl setTag:forSegment:]
  -[AKSegmentedCtrl selectionStack]
  -[AKSegmentedCtrl setSelectionStack:]


AKToolController : NSObject /usr/lib/libc++.1.dylib
 @property  AKController *controller
 @property  BOOL allInkEnabled
 @property  BOOL pencilInkEnabled
 @property  BOOL isInDefaultMode
 @property  unsigned long toolMode

  // class methods
  +[AKToolController cascadeAnnotations:onPageController:forPaste:]

  // instance methods
  -[AKToolController dealloc]
  -[AKToolController .cxx_destruct]
  -[AKToolController setController:]
  -[AKToolController controller]
  -[AKToolController initWithController:]
  -[AKToolController toolMode]
  -[AKToolController resetToDefaultMode]
  -[AKToolController addNewAnnotation:onPageController:shouldSelect:shouldCascade:]
  -[AKToolController createAnnotationOfType:centeredAtPoint:]
  -[AKToolController _peripheralAvailabilityDidUpdate:]
  -[AKToolController allInkEnabled]
  -[AKToolController pencilInkEnabled]
  -[AKToolController setToolMode:]
  -[AKToolController performToolActionForSender:]
  -[AKToolController isToolSenderEnabled:]
  -[AKToolController updateToolSenderState:enabled:]
  -[AKToolController _defaultCenterForNewAnnotation]
  -[AKToolController _modelBaseScaleFactorForNewAnnotation]
  -[AKToolController _defaultFillColorForAnnotationOfClass:]
  -[AKToolController _strokeWidthForNewAnnotation]
  -[AKToolController _strokeColorForNewAnnotation]
  -[AKToolController _defaultRectangleForNewAnnotation:centeredAtPoint:]
  -[AKToolController _defaultTypingAttributes]
  -[AKToolController _arrowStyleForToolTag:]
  -[AKToolController _defaultTextBoxTypingAttributes]
  -[AKToolController _defaultHeartTypingAttributesWithFillColor:]
  -[AKToolController _setRectangleToFitTextOnTextAnnotation:]
  -[AKToolController setAllInkEnabled:]
  -[AKToolController setPencilInkEnabled:]
  -[AKToolController defaultToolMode]
  -[AKToolController isInDefaultMode]
  -[AKToolController _validatedRect:fitsInVisibleRegionOfOverlayView:ownedByPageController:centeredAtPoint:]
  -[AKToolController _centerBounds:atPoint:]


AKOvalAnnotation : AKRectangularShapeAnnotation
  // instance methods
  -[AKOvalAnnotation displayName]
  -[AKOvalAnnotation hitTestBounds]


AKAlignmentGuideLineLayer : CAShapeLayer /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
  // instance methods
  -[AKAlignmentGuideLineLayer initWithScaleFactor:forVerticalOrientation:withMaxSize:]


AKTextFieldAnnotationEventHandler : AKAnnotationEventHandler
  // class methods
  +[AKTextFieldAnnotationEventHandler allowsDragging]

  // instance methods
  -[AKTextFieldAnnotationEventHandler handleDownEvent:orRecognizer:]
  -[AKTextFieldAnnotationEventHandler enterDraggableAreaEventTrackingLoopWithEvent:orRecognizer:]
  -[AKTextFieldAnnotationEventHandler continueDraggableAreaEventTrackingLoopWithEvent:orRecognizer:]


AKPopupAnnotation : AKAnnotation <AKRectangularAnnotationProtocol, AKChildAnnotationProtocol>
 @property  unsigned long visualStyle
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rectangle
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} openRectangle
 @property  AKAnnotation *parentAnnotation
 @property  NSString *contents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKPopupAnnotation supportsSecureCoding]
  +[AKPopupAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKPopupAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKPopupAnnotation encodeWithCoder:]
  -[AKPopupAnnotation initWithCoder:]
  -[AKPopupAnnotation .cxx_destruct]
  -[AKPopupAnnotation contents]
  -[AKPopupAnnotation displayName]
  -[AKPopupAnnotation setContents:]
  -[AKPopupAnnotation visualStyle]
  -[AKPopupAnnotation setVisualStyle:]
  -[AKPopupAnnotation parentAnnotation]
  -[AKPopupAnnotation setRectangle:]
  -[AKPopupAnnotation setParentAnnotation:]
  -[AKPopupAnnotation keysForValuesToObserveForUndo]
  -[AKPopupAnnotation rectangle]
  -[AKPopupAnnotation hitTestBounds]
  -[AKPopupAnnotation flattenModelExifOrientation:withModelSize:]
  -[AKPopupAnnotation translateBy:]
  -[AKPopupAnnotation keysForValuesToObserveForAdornments]
  -[AKPopupAnnotation setOpenRectangle:]
  -[AKPopupAnnotation openRectangle]


AKSmoothPathView_iOS : AKSmoothPathView
  // instance methods
  -[AKSmoothPathView_iOS handleForwardedEvent:]


AKArrowShapeAnnotation : AKArrowAnnotation <AKFilledAnnotationProtocol>
 @property  double arrowLineWidth
 @property  double arrowHeadWidth
 @property  double arrowHeadLength
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIColor *fillColor

  // class methods
  +[AKArrowShapeAnnotation supportsSecureCoding]
  +[AKArrowShapeAnnotation keyPathsForValuesAffectingHitTestBounds]
  +[AKArrowShapeAnnotation keyPathsForValuesAffectingDrawingBounds]
  +[AKArrowShapeAnnotation displayNameForUndoablePropertyChangeWithKey:]

  // instance methods
  -[AKArrowShapeAnnotation init]
  -[AKArrowShapeAnnotation encodeWithCoder:]
  -[AKArrowShapeAnnotation initWithCoder:]
  -[AKArrowShapeAnnotation displayName]
  -[AKArrowShapeAnnotation keysForValuesToObserveForUndo]
  -[AKArrowShapeAnnotation keysForValuesToObserveForRedrawing]
  -[AKArrowShapeAnnotation hitTestBounds]
  -[AKArrowShapeAnnotation keysForValuesToObserveForAdornments]
  -[AKArrowShapeAnnotation arrowHeadLength]
  -[AKArrowShapeAnnotation arrowHeadWidth]
  -[AKArrowShapeAnnotation arrowLineWidth]
  -[AKArrowShapeAnnotation setArrowHeadLength:]
  -[AKArrowShapeAnnotation setArrowHeadWidth:]
  -[AKArrowShapeAnnotation setArrowLineWidth:]


AKInkSignatureView : UIView /usr/lib/libobjc.A.dylib <PKCanvasViewDelegate>
 @property  PKCanvasView *canvasView
 @property  PKInk *ink
 @property  PKDrawing *latestDrawing
 @property  BOOL hasStrokes
 @property  UIColor *strokeColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKInkSignatureView clear]
  -[AKInkSignatureView initWithCoder:]
  -[AKInkSignatureView .cxx_destruct]
  -[AKInkSignatureView teardown]
  -[AKInkSignatureView _commonInit]
  -[AKInkSignatureView initWithFrame:]
  -[AKInkSignatureView layoutSubviews]
  -[AKInkSignatureView setCanvasView:]
  -[AKInkSignatureView canvasView]
  -[AKInkSignatureView setStrokeColor:]
  -[AKInkSignatureView strokeColor]
  -[AKInkSignatureView ink]
  -[AKInkSignatureView setInk:]
  -[AKInkSignatureView _updateInk]
  -[AKInkSignatureView hasStrokes]
  -[AKInkSignatureView copyPotracedPathAndReturnDrawing:]
  -[AKInkSignatureView canvasViewDrawingDidChange:]
  -[AKInkSignatureView setLatestDrawing:]
  -[AKInkSignatureView latestDrawing]
  -[AKInkSignatureView setHasStrokes:]


AKTSDPathCut : NSObject /usr/lib/libc++.1.dylib
 @property  long long segment
 @property  double t
 @property  double skew

  // instance methods
  -[AKTSDPathCut segment]
  -[AKTSDPathCut t]
  -[AKTSDPathCut initWithSegment:atT:withSkew:]
  -[AKTSDPathCut skew]


AKTSDPathIntersection : NSObject /usr/lib/libc++.1.dylib
 @property  long long segment
 @property  long long segmentB
 @property  double t
 @property  double tB
 @property  {CGPoint=dd} point

  // instance methods
  -[AKTSDPathIntersection point]
  -[AKTSDPathIntersection setPoint:]
  -[AKTSDPathIntersection segment]
  -[AKTSDPathIntersection compareSegmentAndT:]
  -[AKTSDPathIntersection t]
  -[AKTSDPathIntersection initWithSegment:atT:onSegmentB:atT:atPoint:]
  -[AKTSDPathIntersection compareT:]
  -[AKTSDPathIntersection initWithSegment:atT:atPoint:]
  -[AKTSDPathIntersection segmentB]
  -[AKTSDPathIntersection tB]


AKFormTextBoxAnnotation : AKTextBoxAnnotation
  // class methods
  +[AKFormTextBoxAnnotation defaultPlaceholderText]
  +[AKFormTextBoxAnnotation deleteAfterEditingIfEmpty]


AKFormFeatureDetectorController : NSObject /usr/lib/libc++.1.dylib <AKFormFeatureDetectorDelegate>
 @property  AKController *controller
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKFormFeatureDetectorController .cxx_destruct]
  -[AKFormFeatureDetectorController setController:]
  -[AKFormFeatureDetectorController controller]
  -[AKFormFeatureDetectorController initWithController:]
  -[AKFormFeatureDetectorController defaultFeatureSizeForPage:]
  -[AKFormFeatureDetectorController maximumFeatureWidthForPage:]
  -[AKFormFeatureDetectorController wantsDefaultFeatures]
  -[AKFormFeatureDetectorController detectFormFeatureAtPoint:inPageController:]
  -[AKFormFeatureDetectorController formFeatureAtPoint:inPageController:]
  -[AKFormFeatureDetectorController formFeature:intersectsAnnotationsOnPage:]
  -[AKFormFeatureDetectorController createAnnotationWithFeature:onPageController:]
  -[AKFormFeatureDetectorController _convertFont:toSize:]


AKPopupAnnotationEventHandler : AKRectangularAnnotationEventHandler
  // class methods
  +[AKPopupAnnotationEventHandler allowsDragging]

  // instance methods
  -[AKPopupAnnotationEventHandler handleDownEvent:orRecognizer:]
  -[AKPopupAnnotationEventHandler enterDraggableAreaEventTrackingLoopWithEvent:orRecognizer:]
  -[AKPopupAnnotationEventHandler continueDraggableAreaEventTrackingLoopWithEvent:orRecognizer:]


AKSidecarController : NSObject /usr/lib/libc++.1.dylib
 @property  AKController *controller
 @property  NSMutableSet *observedPageModelControllers
 @property  NSMutableSet *observedAnnotations
 @property  BOOL shouldObserveEdits
 @property  <AKSidecarControllerDelegate> *delegate

  // class methods
  +[AKSidecarController validateInitialMessage:applicationData:]

  // instance methods
  -[AKSidecarController dealloc]
  -[AKSidecarController delegate]
  -[AKSidecarController setDelegate:]
  -[AKSidecarController .cxx_destruct]
  -[AKSidecarController observeValueForKeyPath:ofObject:change:context:]
  -[AKSidecarController done]
  -[AKSidecarController setController:]
  -[AKSidecarController controller]
  -[AKSidecarController initWithController:]
  -[AKSidecarController handleLiveStrokeBegan:onInkOverlayView:]
  -[AKSidecarController handleLiveStrokeComplete:]
  -[AKSidecarController setObservedPageModelControllers:]
  -[AKSidecarController setObservedAnnotations:]
  -[AKSidecarController observePageControllerRequestsDisableRegistration:]
  -[AKSidecarController observePageControllerRequestsEnableRegistration:]
  -[AKSidecarController observedAnnotations]
  -[AKSidecarController observedPageModelControllers]
  -[AKSidecarController _startObservingAnnotations:]
  -[AKSidecarController _stopObservingAnnotations:]
  -[AKSidecarController startObservingPageModelController:]
  -[AKSidecarController stopObservingPageModelController:]
  -[AKSidecarController shouldObserveEdits]
  -[AKSidecarController setShouldObserveEdits:]
  -[AKSidecarController _handleUndo:]
  -[AKSidecarController _handleRedo:]
  -[AKSidecarController _handleUndoCheckpoint:]
  -[AKSidecarController _actuallySendAnnotationChange]
  -[AKSidecarController _unregisterObservers]
  -[AKSidecarController _registerObservers]
  -[AKSidecarController _indexOfAnnotationUUID:annotations:]
  -[AKSidecarController _handleInternalFailure]
  -[AKSidecarController _handleAnnotationAdd:]
  -[AKSidecarController _handleAnnotationRemove:]
  -[AKSidecarController _handleAnnotationModify:]
  -[AKSidecarController _handleSelectionChanged:]
  -[AKSidecarController _startChangeUndoGroup]
  -[AKSidecarController _inkAnnotationFromPageModelController:]
  -[AKSidecarController _removeAnnotationUUID:fromPageModelController:]
  -[AKSidecarController _annotationWithUUID:inPageModelController:]
  -[AKSidecarController _sendDictionary:]
  -[AKSidecarController _handleLiveStrokeUpdate]
  -[AKSidecarController _annotation:modifiedInPageController:properties:]
  -[AKSidecarController _coalesceAnnotationChange:keyChange:]
  -[AKSidecarController _annotationsWillBeRemoved:onPageController:isUndoingRedoing:]
  -[AKSidecarController _annotationsWereAdded:onPageController:isUndoingRedoing:]
  -[AKSidecarController _selectionChangedOnPageController:]
  -[AKSidecarController _annotation:addedToPageController:selected:atIndex:]
  -[AKSidecarController _annotation:removedFromPageController:]
  -[AKSidecarController _replaceAnnotation:inPageModelController:]
  -[AKSidecarController handleIncomingOPACKObject:]


AKUserInterfaceItemHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKUserInterfaceItemHelper highlightAttributeTagFromHighlightToolTag:]


AKColorPaletteButton : UIButton /usr/lib/libobjc.A.dylib
 @property  UIColor *color

  // instance methods
  -[AKColorPaletteButton .cxx_destruct]
  -[AKColorPaletteButton color]
  -[AKColorPaletteButton setColor:]


AKTextBoxAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKTextBoxAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKTextBoxAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKTextBoxAnnotationRenderer _concreteTextBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKTextBoxAnnotationRenderer _concreteRectangleForAnnotation:withTextBounds:]
  +[AKTextBoxAnnotationRenderer _newConcreteTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKTextBoxAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKTextBoxAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKTextBoxAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]


AKNotePointOfInterestHelper : AKAnnotationPointOfInterestHelper
  // class methods
  +[AKNotePointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]


AKAnnotationRenderer : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKAnnotationRenderer draggingBoundsInsetsForAnnotation:]
  +[AKAnnotationRenderer textBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKAnnotationRenderer pointIsOnInside:ofAnnotation:]
  +[AKAnnotationRenderer _transformContextToModelCoordinates:forAnnotation:forDisplay:pageControllerOrNil:]
  +[AKAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKAnnotationRenderer _concreteTextBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKAnnotationRenderer _concreteRectangleForAnnotation:withTextBounds:]
  +[AKAnnotationRenderer _newConcreteTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKAnnotationRenderer newTextExclusionPathForAnnotation:withOptionalAnnotationRect:]
  +[AKAnnotationRenderer rectangleForAnnotation:withTextBounds:]
  +[AKAnnotationRenderer renderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKAnnotationRenderer annotationShouldAvoidRedrawDuringLiveResize:]
  +[AKAnnotationRenderer drawingBoundsOfAnnotation:]
  +[AKAnnotationRenderer pointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKAnnotationRenderer _rendererClassForAnnotation:]
  +[AKAnnotationRenderer _testRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]


AKAnnotationPointOfInterestHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKAnnotationPointOfInterestHelper validatePoint:ofDraggableArea:forAnnotation:onPageController:]
  +[AKAnnotationPointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKAnnotationPointOfInterestHelper _concreteDraggableAreaForPointOfInterestWithIndex:ofAnnotation:onPageController:]
  +[AKAnnotationPointOfInterestHelper _concreteDraggableAreaForPoint:onAnnotation:withScale:pageControllerForPixelAlignment:]
  +[AKAnnotationPointOfInterestHelper _concreteValidatePoint:ofDraggableArea:forAnnotation:onPageController:]
  +[AKAnnotationPointOfInterestHelper pointForDraggableArea:onAnnotation:pageControllerForPixelAlignment:]
  +[AKAnnotationPointOfInterestHelper pointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKAnnotationPointOfInterestHelper draggableAreaScaleFactorForScaleFactor:]
  +[AKAnnotationPointOfInterestHelper draggableAreaForPoint:onAnnotation:withScale:pageControllerForPixelAlignment:]
  +[AKAnnotationPointOfInterestHelper _poiHelperClassForAnnotation:]
  +[AKAnnotationPointOfInterestHelper _point:isInCircleWithRadius:atPoint:]
  +[AKAnnotationPointOfInterestHelper _point:isInRectWithSize:atPoint:]


AKAnnotationRendererUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AKAnnotationRendererUtilities outsetRectForShadow:onAnnotation:]
  +[AKAnnotationRendererUtilities setStandardLineStateInContext:forLineWidth:]
  +[AKAnnotationRendererUtilities setStandardLineDashInContext:forLineWidth:]
  +[AKAnnotationRendererUtilities beginShadowInContext:forAnnotation:]
  +[AKAnnotationRendererUtilities endShadowInContext:]
  +[AKAnnotationRendererUtilities newStandardStrokedBorderPathWithPath:withStrokeWidth:]
  +[AKAnnotationRendererUtilities _shadowDirectionForAnnotation:]


AKSignatureAnnotationEventHandler : AKRectangularAnnotationEventHandler
  // instance methods
  -[AKSignatureAnnotationEventHandler naturalSizeForAnnotation]
  -[AKSignatureAnnotationEventHandler alwaysLockAspectRatio]


AKTextBoxAnnotationEventHandler : AKRectangularAnnotationEventHandler
  // instance methods
  -[AKTextBoxAnnotationEventHandler updateModelWithCurrentPoint:]
  -[AKTextBoxAnnotationEventHandler canLockAspectRatio]


AKFourPointRectangularPointOfInterestHelper : AKAnnotationPointOfInterestHelper
  // class methods
  +[AKFourPointRectangularPointOfInterestHelper _concretePointsOfInterest:withVisualStyle:ofAnnotation:pageControllerForPixelAlignment:]
  +[AKFourPointRectangularPointOfInterestHelper _concreteDraggableAreaForPointOfInterestWithIndex:ofAnnotation:onPageController:]
  +[AKFourPointRectangularPointOfInterestHelper _concreteValidatePoint:ofDraggableArea:forAnnotation:onPageController:]


AKMainEventHandler_iOS : AKMainEventHandler <UIGestureRecognizerDelegate>
 @property  UITapGestureRecognizer *tapRecognizer
 @property  UITapGestureRecognizer *doubleTapRecognizer
 @property  UILongPressGestureRecognizer *pressRecognizer
 @property  AKPanGestureRecognizer *panRecognizer
 @property  AKRotationGestureRecognizer *rotationRecognizer
 @property  double lastRotationAngleInRotationGesture
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKMainEventHandler_iOS .cxx_destruct]
  -[AKMainEventHandler_iOS teardown]
  -[AKMainEventHandler_iOS gestureRecognizerShouldBegin:]
  -[AKMainEventHandler_iOS gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[AKMainEventHandler_iOS gestureRecognizer:shouldReceiveTouch:]
  -[AKMainEventHandler_iOS tapRecognizer]
  -[AKMainEventHandler_iOS setTapRecognizer:]
  -[AKMainEventHandler_iOS initWithController:]
  -[AKMainEventHandler_iOS doubleTapRecognizer]
  -[AKMainEventHandler_iOS pressRecognizer]
  -[AKMainEventHandler_iOS panRecognizer]
  -[AKMainEventHandler_iOS rotationRecognizer]
  -[AKMainEventHandler_iOS applyToAllSelectedAnnotationsRotateEvent:orRecognizer:]
  -[AKMainEventHandler_iOS forwardRecognizerToMainHandleEvent:]
  -[AKMainEventHandler_iOS _penDrawingQuiesced]
  -[AKMainEventHandler_iOS setDoubleTapRecognizer:]
  -[AKMainEventHandler_iOS setPressRecognizer:]
  -[AKMainEventHandler_iOS setRotationRecognizer:]
  -[AKMainEventHandler_iOS setPanRecognizer:]
  -[AKMainEventHandler_iOS setLastRotationAngleInRotationGesture:]
  -[AKMainEventHandler_iOS lastRotationAngleInRotationGesture]


AKTextAttributesViewController : UITableViewController /usr/lib/libobjc.A.dylib <AKFontChooserUserInterfaceItem, AKTextAttributesUserInterfaceItem>
 @property  UITableViewCell *sizeTableCell
 @property  UITableViewCell *alignmentTableCell
 @property  UIColor *currentFontColor
 @property  NSString *currentFontFamilyName
 @property  NSNumber *currentFontSize
 @property  id currentAlignment
 @property  id currentStyle
 @property  AKController *controller
 @property  AKFontListController *presetFontController
 @property  long long lastActionID
 @property  id lastActionValue
 @property  AKFontChooserUIItemDelegate *fontUIItemDelegate
 @property  AKTextAttributesUIItemDelegate *textAttributesUIItemDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKTextAttributesViewController fontSizeNumberFormatter]

  // instance methods
  -[AKTextAttributesViewController .cxx_destruct]
  -[AKTextAttributesViewController _commonInit]
  -[AKTextAttributesViewController viewDidLoad]
  -[AKTextAttributesViewController setController:]
  -[AKTextAttributesViewController controller]
  -[AKTextAttributesViewController tableView:numberOfRowsInSection:]
  -[AKTextAttributesViewController tableView:cellForRowAtIndexPath:]
  -[AKTextAttributesViewController numberOfSectionsInTableView:]
  -[AKTextAttributesViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[AKTextAttributesViewController tableView:willSelectRowAtIndexPath:]
  -[AKTextAttributesViewController tableView:didSelectRowAtIndexPath:]
  -[AKTextAttributesViewController _canShowWhileLocked]
  -[AKTextAttributesViewController setCurrentStyle:]
  -[AKTextAttributesViewController currentStyle]
  -[AKTextAttributesViewController initWithController:]
  -[AKTextAttributesViewController convertTextAttributes:]
  -[AKTextAttributesViewController syncTextAttributesToUI:]
  -[AKTextAttributesViewController convertFont:]
  -[AKTextAttributesViewController syncFontsToUI:]
  -[AKTextAttributesViewController setPresetFontController:]
  -[AKTextAttributesViewController presetFontController]
  -[AKTextAttributesViewController setCurrentFontFamilyName:]
  -[AKTextAttributesViewController setCurrentFontSize:]
  -[AKTextAttributesViewController setCurrentFontColor:]
  -[AKTextAttributesViewController setFontUIItemDelegate:]
  -[AKTextAttributesViewController fontUIItemDelegate]
  -[AKTextAttributesViewController setTextAttributesUIItemDelegate:]
  -[AKTextAttributesViewController textAttributesUIItemDelegate]
  -[AKTextAttributesViewController validateUserInterfaceItems]
  -[AKTextAttributesViewController createRowFontSizeCell]
  -[AKTextAttributesViewController createRowAlignmentCell]
  -[AKTextAttributesViewController currentFontFamilyName]
  -[AKTextAttributesViewController didSelectFont:]
  -[AKTextAttributesViewController sizeTableCell]
  -[AKTextAttributesViewController currentFontSize]
  -[AKTextAttributesViewController _sizeStepperValueChanged:]
  -[AKTextAttributesViewController setSizeTableCell:]
  -[AKTextAttributesViewController alignmentTableCell]
  -[AKTextAttributesViewController _alignmentSegmentChanged:]
  -[AKTextAttributesViewController setAlignmentTableCell:]
  -[AKTextAttributesViewController setLastActionID:]
  -[AKTextAttributesViewController setLastActionValue:]
  -[AKTextAttributesViewController _sendFontAction]
  -[AKTextAttributesViewController _sendTextAttributesAction]
  -[AKTextAttributesViewController lastActionID]
  -[AKTextAttributesViewController lastActionValue]
  -[AKTextAttributesViewController _styleSegmentChanged:]
  -[AKTextAttributesViewController currentFontColor]
  -[AKTextAttributesViewController currentAlignment]
  -[AKTextAttributesViewController setCurrentAlignment:]


AKDoodleAnnotationEventHandler : AKRectangularAnnotationEventHandler
  // instance methods
  -[AKDoodleAnnotationEventHandler naturalSizeForAnnotation]
  -[AKDoodleAnnotationEventHandler alwaysLockAspectRatio]


AKNoteAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKNoteAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKNoteAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKNoteAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKNoteAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKNoteAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]


AKPageModelController : NSObject /usr/lib/libc++.1.dylib
 @property  AKCropAnnotation *cropAnnotation
 @property  AKInkAnnotation *inkCanvasAnnotation
 @property  AKStatistics *statisticsLogger
 @property  id representedObject
 @property  NSArray *annotations
 @property  NSSet *selectedAnnotations
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} appliedCropRect

  // class methods
  +[AKPageModelController automaticallyNotifiesObserversForKey:]

  // instance methods
  -[AKPageModelController init]
  -[AKPageModelController .cxx_destruct]
  -[AKPageModelController representedObject]
  -[AKPageModelController setRepresentedObject:]
  -[AKPageModelController annotations]
  -[AKPageModelController selectAnnotation:byExtendingSelection:]
  -[AKPageModelController selectAnnotationsAtIndexes:byExtendingSelection:]
  -[AKPageModelController selectedAnnotations]
  -[AKPageModelController cropAnnotation]
  -[AKPageModelController removeAllAnnotations]
  -[AKPageModelController setSelectedAnnotations:]
  -[AKPageModelController containsAnnotation:]
  -[AKPageModelController statisticsLogger]
  -[AKPageModelController inkCanvasAnnotation]
  -[AKPageModelController setInkCanvasAnnotationOneTime:]
  -[AKPageModelController selectionStateForUndo]
  -[AKPageModelController restoreSelectionStateForUndo:]
  -[AKPageModelController setStatisticsLogger:]
  -[AKPageModelController removeCropToolAnnotation]
  -[AKPageModelController hasMaskBorderAnnotation]
  -[AKPageModelController selectAllAnnotations]
  -[AKPageModelController archivableRepresentation]
  -[AKPageModelController initWithArchivableRepresentation:]
  -[AKPageModelController insertObject:inAnnotationsAtIndex:]
  -[AKPageModelController replaceObjectInAnnotationsAtIndex:withObject:]
  -[AKPageModelController removeObjectFromAnnotationsAtIndex:]
  -[AKPageModelController _ensureInkAnnotationIsInFrontWhenEditsAreDone]
  -[AKPageModelController setInkCanvasAnnotation:]
  -[AKPageModelController _enableEditObservationForAnnotationIfNew:]
  -[AKPageModelController _logAnnotationAdded:]
  -[AKPageModelController removeAnnotationsAtIndexes:]
  -[AKPageModelController removeSelectedAnnotationsObject:]
  -[AKPageModelController removeSelectedAnnotations:]
  -[AKPageModelController _postSelectedAnnotationsChangedNotification]
  -[AKPageModelController addSelectedAnnotationsObject:]
  -[AKPageModelController addSelectedAnnotations:]
  -[AKPageModelController insertAnnotations:atIndexes:]
  -[AKPageModelController setCropAnnotation:]
  -[AKPageModelController _coalescedEnsureInkAnnotationIsInFront:]
  -[AKPageModelController replaceAnnotationsAtIndexes:withAnnotations:]
  -[AKPageModelController intersectSelectedAnnotations:]
  -[AKPageModelController bringSelectedAnnotationsForward]
  -[AKPageModelController bringSelectedAnnotationsToFront]
  -[AKPageModelController sendSelectedAnnotationsBackward]
  -[AKPageModelController sendSelectedAnnotationsToBack]
  -[AKPageModelController addCropToolAnnotation]
  -[AKPageModelController appliedCropRect]
  -[AKPageModelController setAppliedCropRect:]


AKStarAnnotationRenderer : AKPolygonAnnotationRenderer
  // class methods
  +[AKStarAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKStarAnnotationRenderer _concreteTextBoundsOfAnnotation:withOptionalAnnotationRect:optionalText:]
  +[AKStarAnnotationRenderer _concreteRectangleForAnnotation:withTextBounds:]
  +[AKStarAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKStarAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKStarAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKStarAnnotationRenderer innerStarPoints:]
  +[AKStarAnnotationRenderer innerRadiusFactorForPoint:inAnnotation:onPageController:]
  +[AKStarAnnotationRenderer _newPathForAnnotation:]
  +[AKStarAnnotationRenderer defaultInnerRadiusForStar:]
  +[AKStarAnnotationRenderer _innerStarPoints:withInnerRadiusFactor:]
  +[AKStarAnnotationRenderer starPoints:]
  +[AKStarAnnotationRenderer _segLengthOfStarWithPoints:]


AKBorderMaskAnnotationRenderer : AKAnnotationRenderer
  // class methods
  +[AKBorderMaskAnnotationRenderer _concreteDrawingBoundsOfAnnotation:]
  +[AKBorderMaskAnnotationRenderer _concreteDraggingBoundsInsetsForAnnotation:]
  +[AKBorderMaskAnnotationRenderer _concreteRenderAnnotation:intoContext:forDisplay:pageControllerOrNil:]
  +[AKBorderMaskAnnotationRenderer _concretePointIsOnBorder:ofAnnotation:minimumBorderThickness:]
  +[AKBorderMaskAnnotationRenderer _concretePointIsOnInside:ofAnnotation:]
  +[AKBorderMaskAnnotationRenderer _newClipMaskEOPathForAnnotation:]


AKInkOverlayView_iOS : AKInkOverlayView
  // instance methods
  -[AKInkOverlayView_iOS commonInit]
  -[AKInkOverlayView_iOS pointInside:withEvent:]
  -[AKInkOverlayView_iOS hitTest:withEvent:]
  -[AKInkOverlayView_iOS _viewToHitTestForEvent:]


AKLayerPresentationManager : NSObject /usr/lib/libc++.1.dylib
 @property  AKPageController *pageController
 @property  CALayer *rootLayer
 @property  NSMapTable *annotationsToAnnotationLayers
 @property  NSMapTable *annotationsToAdornmentLayers
 @property  CALayer *cropAnnotationLayer
 @property  CALayer *cropAdornmentLayer
 @property  CAShapeLayer *alignmentGuideXLayer
 @property  CAShapeLayer *alignmentGuideYLayer
 @property  AKPageModelController *pageModelController
 @property  BOOL isObservingModel
 @property  double currentScaleFactor
 @property  BOOL shouldPixelate
 @property  BOOL adornmentsHidden
 @property  double alignmentGuidePositionX
 @property  double alignmentGuidePositionY

  // instance methods
  -[AKLayerPresentationManager dealloc]
  -[AKLayerPresentationManager .cxx_destruct]
  -[AKLayerPresentationManager observeValueForKeyPath:ofObject:change:context:]
  -[AKLayerPresentationManager teardown]
  -[AKLayerPresentationManager rootLayer]
  -[AKLayerPresentationManager pageController]
  -[AKLayerPresentationManager setPageController:]
  -[AKLayerPresentationManager setRootLayer:]
  -[AKLayerPresentationManager setup]
  -[AKLayerPresentationManager currentScaleFactor]
  -[AKLayerPresentationManager initWithPageController:]
  -[AKLayerPresentationManager pageModelController]
  -[AKLayerPresentationManager setAlignmentGuidePositionX:]
  -[AKLayerPresentationManager setAlignmentGuidePositionY:]
  -[AKLayerPresentationManager setShouldPixelate:]
  -[AKLayerPresentationManager setAdornmentsHidden:]
  -[AKLayerPresentationManager setCurrentScaleFactor:]
  -[AKLayerPresentationManager setPageModelController:]
  -[AKLayerPresentationManager shouldPixelate]
  -[AKLayerPresentationManager updateScaleFactor:isLiveUpdate:forceUpdate:]
  -[AKLayerPresentationManager forceUpdateAnnotationLayer:]
  -[AKLayerPresentationManager setAnnotationsToAnnotationLayers:]
  -[AKLayerPresentationManager setAnnotationsToAdornmentLayers:]
  -[AKLayerPresentationManager _startObservingModel]
  -[AKLayerPresentationManager _stopObservingModel]
  -[AKLayerPresentationManager annotationsToAdornmentLayers]
  -[AKLayerPresentationManager _applyUpdatesWithScale:toLayers:isLiveUpdate:forceUpdate:]
  -[AKLayerPresentationManager alignmentGuideXLayer]
  -[AKLayerPresentationManager setAlignmentGuideXLayer:]
  -[AKLayerPresentationManager alignmentGuideYLayer]
  -[AKLayerPresentationManager setAlignmentGuideYLayer:]
  -[AKLayerPresentationManager _updateLoupeAnnotationsIntersectingRemovedAnnotation:]
  -[AKLayerPresentationManager _removeAdornmentLayerForAnnotation:]
  -[AKLayerPresentationManager _removeLayerForAnnotation:]
  -[AKLayerPresentationManager _addLayerForAnnotation:]
  -[AKLayerPresentationManager _addAdornmentLayerForAnnotation:]
  -[AKLayerPresentationManager _updateLoupeAnnotationsContributedToByAnnotation:]
  -[AKLayerPresentationManager annotationsToAnnotationLayers]
  -[AKLayerPresentationManager _hiDPIScaleFactor]
  -[AKLayerPresentationManager isObservingModel]
  -[AKLayerPresentationManager setIsObservingModel:]
  -[AKLayerPresentationManager setCropAnnotationLayer:]
  -[AKLayerPresentationManager _setNeedsDisplayOnNewLayer:]
  -[AKLayerPresentationManager cropAnnotationLayer]
  -[AKLayerPresentationManager setCropAdornmentLayer:]
  -[AKLayerPresentationManager cropAdornmentLayer]
  -[AKLayerPresentationManager adornmentsHidden]
  -[AKLayerPresentationManager alignmentGuidePositionX]
  -[AKLayerPresentationManager alignmentGuidePositionY]


AKToolbarBackgroundView : UIView /usr/lib/libobjc.A.dylib
 @property  UIView *separatorLine
 @property  UIColor *separatorColor
 @property  BOOL translucent
 @property  long long blurStyle

  // instance methods
  -[AKToolbarBackgroundView .cxx_destruct]
  -[AKToolbarBackgroundView setOpaque:]
  -[AKToolbarBackgroundView setBackgroundColor:]
  -[AKToolbarBackgroundView initWithFrame:]
  -[AKToolbarBackgroundView isTranslucent]
  -[AKToolbarBackgroundView setTranslucent:]
  -[AKToolbarBackgroundView separatorColor]
  -[AKToolbarBackgroundView setBackgroundImage:forToolbarPosition:barMetrics:]
  -[AKToolbarBackgroundView setShadowImage:forToolbarPosition:]
  -[AKToolbarBackgroundView setSeparatorColor:]
  -[AKToolbarBackgroundView blurStyle]
  -[AKToolbarBackgroundView setBlurStyle:]
  -[AKToolbarBackgroundView separatorLine]
  -[AKToolbarBackgroundView setSeparatorLine:]
  -[AKToolbarBackgroundView _hostSeparatorInView:]
  -[AKToolbarBackgroundView updateSeparatorVisibility]


AKTextEditorController : NSObject /usr/lib/libc++.1.dylib <NSTextStorageDelegate, UITextViewDelegate>
 @property  AKController *controller
 @property  AKPageController *pageController
 @property  AKAnnotation<AKTextAnnotationProtocol> *annotation
 @property  UITextView *textView
 @property  CALayer *textViewMaskLayer
 @property  UIView *textViewContainer
 @property  NSTextStorage *textStorage
 @property  double renderingTextStorageScaleFactor
 @property  double modelToEditorScaleFactor
 @property  double handleCompensatingScaleFactor
 @property  NSUndoManager *textViewUndoManager
 @property  BOOL isInEndEditing
 @property  BOOL isInAdjustAnnotationFrameToFitText
 @property  BOOL isEditing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKTextEditorController dealloc]
  -[AKTextEditorController endEditing]
  -[AKTextEditorController .cxx_destruct]
  -[AKTextEditorController textStorage]
  -[AKTextEditorController textView]
  -[AKTextEditorController setTextStorage:]
  -[AKTextEditorController setTextView:]
  -[AKTextEditorController setController:]
  -[AKTextEditorController controller]
  -[AKTextEditorController isEditing]
  -[AKTextEditorController _keyboardDidHide:]
  -[AKTextEditorController pageController]
  -[AKTextEditorController setPageController:]
  -[AKTextEditorController annotation]
  -[AKTextEditorController textViewDidEndEditing:]
  -[AKTextEditorController textViewDidChange:]
  -[AKTextEditorController setAnnotation:]
  -[AKTextEditorController _endEditing]
  -[AKTextEditorController _performBlockOnMainThread:]
  -[AKTextEditorController initWithController:]
  -[AKTextEditorController updateForTextAttributeChange]
  -[AKTextEditorController commitToModelWithoutEndingEditing]
  -[AKTextEditorController beginEditingAnnotation:withPageController:selectAllText:]
  -[AKTextEditorController _registerForKeyboardNotifications]
  -[AKTextEditorController _unregisterForKeyboardNotifications]
  -[AKTextEditorController setTextViewContainer:]
  -[AKTextEditorController _beginEditingAnnotation:withPageController:selectAllText:]
  -[AKTextEditorController _commitToModelWithoutEndingEditing]
  -[AKTextEditorController setTextViewUndoManager:]
  -[AKTextEditorController _editorFrameForTextBoundsInModel:]
  -[AKTextEditorController setModelToEditorScaleFactor:]
  -[AKTextEditorController setHandleCompensatingScaleFactor:]
  -[AKTextEditorController setRenderingTextStorageScaleFactor:]
  -[AKTextEditorController _newScaledPaths:withScaleFactor:aboutCenter:]
  -[AKTextEditorController renderingTextStorageScaleFactor]
  -[AKTextEditorController textViewContainer]
  -[AKTextEditorController _adjustEditorToFitAnnotation:withText:]
  -[AKTextEditorController _adjustAnnotationFrameToFitText]
  -[AKTextEditorController isInEndEditing]
  -[AKTextEditorController setIsInEndEditing:]
  -[AKTextEditorController isInAdjustAnnotationFrameToFitText]
  -[AKTextEditorController setIsInAdjustAnnotationFrameToFitText:]
  -[AKTextEditorController modelToEditorScaleFactor]
  -[AKTextEditorController _updateTextView:withFrame:andOrientation:additionalRotation:]
  -[AKTextEditorController handleCompensatingScaleFactor]
  -[AKTextEditorController textViewMaskLayer]
  -[AKTextEditorController setTextViewMaskLayer:]
  -[AKTextEditorController textViewUndoManager]


NSData(CGPathExtensions)
	// class methods
	+[NSData(CGPathExtensions) encodeCGPath:]
	+[NSData(CGPathExtensions) newCGPathDecodedFromData:]

NSValue(AKValueQuadrilateralExtensions)
	// class methods
	+[NSValue(AKValueQuadrilateralExtensions) valueWithCGRect:]
	+[NSValue(AKValueQuadrilateralExtensions) akValueWithPoint:]
	+[NSValue(AKValueQuadrilateralExtensions) valueWithQuadrilateral:]
	+[NSValue(AKValueQuadrilateralExtensions) akValueWithSize:]
	+[NSValue(AKValueQuadrilateralExtensions) akValueWithRect:]

	// instance methods
	-[NSValue(AKValueQuadrilateralExtensions) CGRectValue]
	-[NSValue(AKValueQuadrilateralExtensions) quadrilateralValue]
	-[NSValue(AKValueQuadrilateralExtensions) akPointValue]
	-[NSValue(AKValueQuadrilateralExtensions) akSizeValue]
	-[NSValue(AKValueQuadrilateralExtensions) akRectValue]

NSUserDefaults(AKPlatformUserDefaults_Extensions)
	// class methods
	+[NSUserDefaults(AKPlatformUserDefaults_Extensions) akDataForColor:]
	+[NSUserDefaults(AKPlatformUserDefaults_Extensions) akDataForFont:]
	+[NSUserDefaults(AKPlatformUserDefaults_Extensions) akDataForTextAttributes:]

	// instance methods
	-[NSUserDefaults(AKPlatformUserDefaults_Extensions) akSetColor:forKey:]
	-[NSUserDefaults(AKPlatformUserDefaults_Extensions) akColorForKey:]
	-[NSUserDefaults(AKPlatformUserDefaults_Extensions) akSetFont:forKey:]
	-[NSUserDefaults(AKPlatformUserDefaults_Extensions) akFontForKey:]
	-[NSUserDefaults(AKPlatformUserDefaults_Extensions) akSetTextAttributes:forKey:]
	-[NSUserDefaults(AKPlatformUserDefaults_Extensions) akTextAttributesForKey:]

UIColor(AKPlatformColor_Extensions_Shared)
	// class methods
	+[UIColor(AKPlatformColor_Extensions_Shared) akColorWithCIColor:]
	+[UIColor(AKPlatformColor_Extensions_Shared) akColorWithWhite:alpha:]
	+[UIColor(AKPlatformColor_Extensions_Shared) _getCIELABColorSpace]
	+[UIColor(AKPlatformColor_Extensions_Shared) akColorWithSRGBRed:green:blue:alpha:]
	+[UIColor(AKPlatformColor_Extensions_Shared) im_colorWithSRGBDescription:]
	+[UIColor(AKPlatformColor_Extensions_Shared) akColorPickerPurple]
	+[UIColor(AKPlatformColor_Extensions_Shared) akColorPickerBlue]
	+[UIColor(AKPlatformColor_Extensions_Shared) akColorPickerGreen]
	+[UIColor(AKPlatformColor_Extensions_Shared) akColorPickerYellow]
	+[UIColor(AKPlatformColor_Extensions_Shared) akColorPickerOrange]
	+[UIColor(AKPlatformColor_Extensions_Shared) akColorPickerRed]
	+[UIColor(AKPlatformColor_Extensions_Shared) akBoxBorderColor]
	+[UIColor(AKPlatformColor_Extensions_Shared) akSystemBlueColor]
	+[UIColor(AKPlatformColor_Extensions_Shared) akRowSeparatorColor]
	+[UIColor(AKPlatformColor_Extensions_Shared) akButtonHoverStateColor]
	+[UIColor(AKPlatformColor_Extensions_Shared) akSystemRedColor]
	+[UIColor(AKPlatformColor_Extensions_Shared) akSystemYellowColor]
	+[UIColor(AKPlatformColor_Extensions_Shared) akSystemGreenColor]
	+[UIColor(AKPlatformColor_Extensions_Shared) akSystemPinkColor]
	+[UIColor(AKPlatformColor_Extensions_Shared) akSystemPurpleColor]
	+[UIColor(AKPlatformColor_Extensions_Shared) akBubbleFillColor]

	// instance methods
	-[UIColor(AKPlatformColor_Extensions_Shared) akIsEqualToColor:]
	-[UIColor(AKPlatformColor_Extensions_Shared) getL:a:b:]
	-[UIColor(AKPlatformColor_Extensions_Shared) akDistanceFromColor:]
	-[UIColor(AKPlatformColor_Extensions_Shared) colorUsingSRGBColorSpace]
	-[UIColor(AKPlatformColor_Extensions_Shared) akAlphaComponent]
	-[UIColor(AKPlatformColor_Extensions_Shared) akHasHueEqualToColor:withTolerance:]
	-[UIColor(AKPlatformColor_Extensions_Shared) akBlendedColorWithFraction:ofColor:]

UIBezierPath(AKPlatformGeometryExtensions)
	// instance methods
	-[UIBezierPath(AKPlatformGeometryExtensions) newCGPathForPlatformBezierPath]
	-[UIBezierPath(AKPlatformGeometryExtensions) akAppendPath:]

NSString(AKExtensions)
	// instance methods
	-[NSString(AKExtensions) stringByTrimmingLeadingCharactersInSet:]
	-[NSString(AKExtensions) stringByTrimmingTrailingCharactersInSet:]
	-[NSString(AKExtensions) stringByTrimmingTrailingWhitespace]
	-[NSString(AKExtensions) stringByTrimmingLeadingWhitespace]
	-[NSString(AKExtensions) stringByTrimmingLeadingWhitespaceAndNewline]
	-[NSString(AKExtensions) stringByTrimmingTrailingWhitespaceAndNewline]
	-[NSString(AKExtensions) stringByTrimmingTrailingWhitespaceFromEachLine]

UIGestureRecognizer(AKPlatformGestureRecognizer_Extensions)
	// instance methods
	-[UIGestureRecognizer(AKPlatformGestureRecognizer_Extensions) akNumberOfTouches]
	-[UIGestureRecognizer(AKPlatformGestureRecognizer_Extensions) akLocationInWindow]

UITapGestureRecognizer(AKPlatformGestureRecognizer_Extensions)
	// instance methods
	-[UITapGestureRecognizer(AKPlatformGestureRecognizer_Extensions) akNumberOfTapsRequired]

UIView(AKPlatformView_Extensions)
	// instance methods
	-[UIView(AKPlatformView_Extensions) ak_addSubview:withEdgeInsets:]
	-[UIView(AKPlatformView_Extensions) akEnclosingScrollView]
	-[UIView(AKPlatformView_Extensions) akVisibleRect]

UIScrollView(AKPlatformView_Extensions)
	// instance methods
	-[UIScrollView(AKPlatformView_Extensions) akMagnification]
	-[UIScrollView(AKPlatformView_Extensions) _swizzled_scrollViewAnimationEnded:finished:]

PKInk(AKAdditions)
	// class methods
	+[PKInk(AKAdditions) akInkFromInk:color:strokeWidth:]
	+[PKInk(AKAdditions) inkWeightFromAKValue:]
	+[PKInk(AKAdditions) akDefaultInkWithIdentifier:]
	+[PKInk(AKAdditions) akDefaultInkWithIdentifier:color:strokeWidth:]
	+[PKInk(AKAdditions) akInkFromInk:strokeWidth:]

NSObject(AKToolbarButtonItem_Extensions)
	// instance methods
	-[NSObject(AKToolbarButtonItem_Extensions) akToolbarButtonItemType]

UIImage(AKPlatformImageExtensions)
	// class methods
	+[UIImage(AKPlatformImageExtensions) akImageNamed:]
	+[UIImage(AKPlatformImageExtensions) ak_colorSwatchPickerImageWithColor:size:selected:]
	+[UIImage(AKPlatformImageExtensions) ak_colorSwatchToolbarButtonImageWithColor:size:selected:]
	+[UIImage(AKPlatformImageExtensions) ak_boldTextStyleImage]
	+[UIImage(AKPlatformImageExtensions) ak_italicTextStyleImage]
	+[UIImage(AKPlatformImageExtensions) ak_underlineTextStyleImage]
	+[UIImage(AKPlatformImageExtensions) ak_strikethroughTextStyleImage]

	// instance methods
	-[UIImage(AKPlatformImageExtensions) akCGImage]

NSCoder(AKPlatformImage_Extensions)
	// instance methods
	-[NSCoder(AKPlatformImage_Extensions) akEncodeColor:forKey:]
	-[NSCoder(AKPlatformImage_Extensions) akDecodeColorForKey:]
	-[NSCoder(AKPlatformImage_Extensions) akEncodeImage:forKey:]
	-[NSCoder(AKPlatformImage_Extensions) akDecodeImageForKey:]

UISlider(AKPlatformSlider_Extensions)
	// instance methods
	-[UISlider(AKPlatformSlider_Extensions) akValue]
	-[UISlider(AKPlatformSlider_Extensions) setAkValue:]
	-[UISlider(AKPlatformSlider_Extensions) akMinimumValue]
	-[UISlider(AKPlatformSlider_Extensions) setAkMinimumValue:]
	-[UISlider(AKPlatformSlider_Extensions) akMaximumValue]
	-[UISlider(AKPlatformSlider_Extensions) setAkMaximumValue:]

NSTextContainer(AKPlatformTextExtensions)
	// instance methods
	-[NSTextContainer(AKPlatformTextExtensions) initWithContainerSize:]
	-[NSTextContainer(AKPlatformTextExtensions) akSetContainerSize:]
	-[NSTextContainer(AKPlatformTextExtensions) akContainerSize]

UITableView(AKUtilityExtensions)
	// instance methods
	-[UITableView(AKUtilityExtensions) selectedCell]

NSScanner(TSUAdditions)
	// instance methods
	-[NSScanner(TSUAdditions) scanCGFloat:]

UIPasteboard(AKPlatformPasteboard_Extensions)
	// instance methods
	-[UIPasteboard(AKPlatformPasteboard_Extensions) akClearContents]
	-[UIPasteboard(AKPlatformPasteboard_Extensions) akPasteboardSetAnnotations:]
	-[UIPasteboard(AKPlatformPasteboard_Extensions) akPasteboardAnnotations]
	-[UIPasteboard(AKPlatformPasteboard_Extensions) akPasteboardContainsAnnotations]

01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0f00 /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting: CHBoxcarFilterPointFIFO 
01 00 0f00 /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting: CHDrawing 
01 00 0f00 /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting: CHPointFIFO 
01 00 0f00 /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting: CHPointStrokeFIFO 
01 00 0f00 /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting: CHQuadCurvePointFIFO 
01 00 0f00 /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting: CHRecognizer 
01 00 0d00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIColor 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: NSDataAsset 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: NSLayoutManager 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationQueue 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextContainer 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextStorage 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUndoManager 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0500 /System/Library/Frameworks/PencilKit.framework/PencilKit: PKCanvasView 
01 00 0500 /System/Library/Frameworks/PencilKit.framework/PencilKit: PKDrawing 
01 00 0500 /System/Library/Frameworks/PencilKit.framework/PencilKit: PKImageRenderer 
01 00 0500 /System/Library/Frameworks/PencilKit.framework/PencilKit: PKInk 
01 00 0500 /System/Library/Frameworks/PencilKit.framework/PencilKit: PKInlineInkPicker 
01 00 0500 /System/Library/Frameworks/PencilKit.framework/PencilKit: PKToolPicker 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayout 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageConfiguration 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UILargeContentViewerInteraction 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuController 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuItem 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIPasteboard 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIPopoverPresentationController 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIResponder 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIRotationGestureRecognizer 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UISlider 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIStepper 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbar 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropViewSettings 
