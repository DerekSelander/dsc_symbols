|| __DATA.__data _AMSNotificationSettingsVisibleKey
|| __DATA.__data _AMSUIWebPluginPurchaseContentTypeApp
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPaymentVerificationTokenResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIAddFundsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIAgeVerificationTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIAlertDialogTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIAuthKitUpdateTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIAuthenticateTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIAutomaticDownloadKindsSetTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIBannerAppearance
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIBannerMessageViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIBubbleTipAppearance
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIBubbleTipInlineAnchorInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIBubbleTipViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIBundleViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUICardMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUICommonStackView
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIDynamicImpressionItem
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIDynamicImpressionMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIDynamicImpressionMetricsIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIManageSubsriptionSpecifierProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIPasswordSettingsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIPaymentVerificationTokenFetchTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIPrivacyViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUISubscriptionsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIUpdateMultiUserTokenTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUIUserNotificationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPaymentVerificationTokenResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIAddFundsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIAgeVerificationTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIAlertDialogTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIAuthKitUpdateTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIAuthenticateTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIAutomaticDownloadKindsSetTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIBannerAppearance
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIBannerMessageViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIBubbleTipAppearance
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIBubbleTipInlineAnchorInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIBubbleTipViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIBundleViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUICardMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUICommonStackView
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIDynamicImpressionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIDynamicImpressionMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIDynamicImpressionMetricsIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIManageSubsriptionSpecifierProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIPasswordSettingsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIPaymentVerificationTokenFetchTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIPrivacyViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUISubscriptionsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIUpdateMultiUserTokenTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUIUserNotificationViewController
|| __DATA_CONST.__const _AMSUIDynamicClientOptionsKeyMarketingItemQueryParams
|| __DATA_CONST.__const _AMSUIEngagementTaskErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIAppearance
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICGRectHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICommonButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICommonCollectionView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICommonCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICommonControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICommonDynamicColor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICommonImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICommonLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICommonScreen
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICommonTextView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICommonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICommonViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUICommonVisualEffectView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIDynamicViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIEngagementTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIEngagementTaskViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIImageLoader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIInlineDialogViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIMarketingItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIMessageGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIMessageRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUINotificationSettingsViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIOnboardingFeature
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIOnboardingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIToastAppearance
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIToastPresentationController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIToastViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIWebAppearance
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUIWebViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIAppearance
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICGRectHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICommonButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICommonCollectionView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICommonCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICommonControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICommonDynamicColor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICommonImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICommonLabel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICommonScreen
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICommonTextView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICommonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICommonViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUICommonVisualEffectView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIDynamicViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIEngagementTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIEngagementTaskViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIImageLoader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIInlineDialogViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIMarketingItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIMessageGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIMessageRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUINotificationSettingsViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIOnboardingFeature
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIOnboardingViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIToastAppearance
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIToastPresentationController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIToastViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIWebAppearance
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUIWebViewController
|| __TEXT.__text _AMSStringFromSize
__ Accounts: _ACAccountIdentifierKey
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACAccountTypeIdentifierKey
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppSupport: _CPPhoneNumberCopyFormattedStringForTextMessage
__ AppSupport: _OBJC_CLASS_$_RadiosPreferences
__ AppleAccountUI: _OBJC_CLASS_$_AAUISignInFlowControllerDelegate
__ AppleIDSSOAuthentication: _AIDAServiceTypeCloud
__ AppleIDSSOAuthentication: _OBJC_CLASS_$_AIDAMutableServiceContext
__ AppleIDSSOAuthentication: _OBJC_CLASS_$_AIDAServiceOwnersManager
__ AppleMediaServices: _AMSAccountFlagAgeVerificationExpiration
__ AppleMediaServices: _AMSAccountMediaTypeAppStore
__ AppleMediaServices: _AMSAccountMediaTypeAppStoreSandbox
__ AppleMediaServices: _AMSAppearanceFontSizeKey
__ AppleMediaServices: _AMSAppearanceFontSystemDesignKey
__ AppleMediaServices: _AMSAppearanceFontTextStyleKey
__ AppleMediaServices: _AMSAppearanceFontWeightKey
__ AppleMediaServices: _AMSBuyParamPropertyItemId
__ AppleMediaServices: _AMSCustomError
__ AppleMediaServices: _AMSEngagementUserInfoKeyBuyParams
__ AppleMediaServices: _AMSError
__ AppleMediaServices: _AMSErrorDomain
__ AppleMediaServices: _AMSErrorUserInfoKeyEngagementPresented
__ AppleMediaServices: _AMSErrorWithFormat
__ AppleMediaServices: _AMSGenerateLogCorrelationKey
__ AppleMediaServices: _AMSHTTPHeaderAltDSID
__ AppleMediaServices: _AMSHTTPHeaderDSID
__ AppleMediaServices: _AMSHTTPHeaderGSToken
__ AppleMediaServices: _AMSHTTPHeaderGuid
__ AppleMediaServices: _AMSHTTPHeaderMMeClientInfo
__ AppleMediaServices: _AMSHTTPHeaderMMeDeviceId
__ AppleMediaServices: _AMSHTTPHeaderSetCookie
__ AppleMediaServices: _AMSHTTPHeaderSetUserCookies
__ AppleMediaServices: _AMSHTTPHeaderTouchIDAction
__ AppleMediaServices: _AMSHTTPHeaderTouchIDChallenge
__ AppleMediaServices: _AMSHTTPHeaderTouchIDPublicKey
__ AppleMediaServices: _AMSHTTPHeaderTouchIDSignature
__ AppleMediaServices: _AMSHTTPHeaderTouchIDSignatureVersion
__ AppleMediaServices: _AMSHTTPHeaderTouchIDState
__ AppleMediaServices: _AMSHTTPHeaderXAppleActionSignature
__ AppleMediaServices: _AMSHashIfNeeded
__ AppleMediaServices: _AMSLastConnectionReportChangedNotification
__ AppleMediaServices: _AMSLocalAccountIdentifier
__ AppleMediaServices: _AMSLogKey
__ AppleMediaServices: _AMSLogableError
__ AppleMediaServices: _AMSLogableURL
__ AppleMediaServices: _AMSMetricsEventTypeAccount
__ AppleMediaServices: _AMSMetricsEventTypeClick
__ AppleMediaServices: _AMSMetricsEventTypePage
__ AppleMediaServices: _AMSNetworkQualityInquiryReportKeyInterface
__ AppleMediaServices: _AMSNetworkQualityInquiryReportKeyRadioTechnology
__ AppleMediaServices: _AMSODISessionIdentifierApplicationCreate
__ AppleMediaServices: _AMSODISessionIdentifierApplicationSubmit
__ AppleMediaServices: _AMSSetLogKey
__ AppleMediaServices: _AMSSetLogKeyIfNeeded
__ AppleMediaServices: _OBJC_CLASS_$_AMSAcknowledgePrivacyTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSAgeVerificationPresentationResult
__ AppleMediaServices: _OBJC_CLASS_$_AMSAgeVerificationTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSAuthKitUpdateTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSAuthenticateOptions
__ AppleMediaServices: _OBJC_CLASS_$_AMSAuthenticateRequest
__ AppleMediaServices: _OBJC_CLASS_$_AMSAuthenticateResult
__ AppleMediaServices: _OBJC_CLASS_$_AMSAuthenticateTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSAutomaticDownloadKindsSetTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSBag
__ AppleMediaServices: _OBJC_CLASS_$_AMSBagKeySet
__ AppleMediaServices: _OBJC_CLASS_$_AMSBinaryPromise
__ AppleMediaServices: _OBJC_CLASS_$_AMSBiometrics
__ AppleMediaServices: _OBJC_CLASS_$_AMSBuyParams
__ AppleMediaServices: _OBJC_CLASS_$_AMSCampaignAttributionTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSCardAuthorizationTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSCardMetadataRegistrationResult
__ AppleMediaServices: _OBJC_CLASS_$_AMSCardRegistrationTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSData
__ AppleMediaServices: _OBJC_CLASS_$_AMSDefaults
__ AppleMediaServices: _OBJC_CLASS_$_AMSDevice
__ AppleMediaServices: _OBJC_CLASS_$_AMSDialogAction
__ AppleMediaServices: _OBJC_CLASS_$_AMSDialogRequest
__ AppleMediaServices: _OBJC_CLASS_$_AMSDialogResult
__ AppleMediaServices: _OBJC_CLASS_$_AMSDialogTextField
__ AppleMediaServices: _OBJC_CLASS_$_AMSEngagement
__ AppleMediaServices: _OBJC_CLASS_$_AMSEngagementMessageEvent
__ AppleMediaServices: _OBJC_CLASS_$_AMSEngagementMessageRequest
__ AppleMediaServices: _OBJC_CLASS_$_AMSEngagementPlacementInfo
__ AppleMediaServices: _OBJC_CLASS_$_AMSEngagementRequest
__ AppleMediaServices: _OBJC_CLASS_$_AMSEngagementResult
__ AppleMediaServices: _OBJC_CLASS_$_AMSFamilyInfoLookupTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSKeychain
__ AppleMediaServices: _OBJC_CLASS_$_AMSKeychainOptions
__ AppleMediaServices: _OBJC_CLASS_$_AMSLazyPromise
__ AppleMediaServices: _OBJC_CLASS_$_AMSLocalizations
__ AppleMediaServices: _OBJC_CLASS_$_AMSLogConfig
__ AppleMediaServices: _OBJC_CLASS_$_AMSMarketingItemTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSMediaProtocolHandler
__ AppleMediaServices: _OBJC_CLASS_$_AMSMediaRequestEncoder
__ AppleMediaServices: _OBJC_CLASS_$_AMSMediaResponseDecoder
__ AppleMediaServices: _OBJC_CLASS_$_AMSMediaResult
__ AppleMediaServices: _OBJC_CLASS_$_AMSMediaTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSMediaTokenService
__ AppleMediaServices: _OBJC_CLASS_$_AMSMescalAccountPrimeSession
__ AppleMediaServices: _OBJC_CLASS_$_AMSMetrics
__ AppleMediaServices: _OBJC_CLASS_$_AMSMetricsEvent
__ AppleMediaServices: _OBJC_CLASS_$_AMSMetricsIdentifierKey
__ AppleMediaServices: _OBJC_CLASS_$_AMSMetricsIdentifierStore
__ AppleMediaServices: _OBJC_CLASS_$_AMSMutableBagKeySet
__ AppleMediaServices: _OBJC_CLASS_$_AMSNetworkQualityInquiry
__ AppleMediaServices: _OBJC_CLASS_$_AMSNotificationSettingsTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSODIAdditionalAttributes
__ AppleMediaServices: _OBJC_CLASS_$_AMSODISession
__ AppleMediaServices: _OBJC_CLASS_$_AMSOpenURL
__ AppleMediaServices: _OBJC_CLASS_$_AMSPaymentSetupFeatureVerification
__ AppleMediaServices: _OBJC_CLASS_$_AMSProcessInfo
__ AppleMediaServices: _OBJC_CLASS_$_AMSPromise
__ AppleMediaServices: _OBJC_CLASS_$_AMSPromiseResult
__ AppleMediaServices: _OBJC_CLASS_$_AMSPurchase
__ AppleMediaServices: _OBJC_CLASS_$_AMSPurchaseQueue
__ AppleMediaServices: _OBJC_CLASS_$_AMSPurchaseTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSSnapshotBagBuilder
__ AppleMediaServices: _OBJC_CLASS_$_AMSSubscriptionEntitlementsTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSSyncPasswordSettingsTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSURLParser
__ AppleMediaServices: _OBJC_CLASS_$_AMSURLProtocolHandler
__ AppleMediaServices: _OBJC_CLASS_$_AMSURLRequestEncoder
__ AppleMediaServices: _OBJC_CLASS_$_AMSURLSession
__ AppleMediaServices: _OBJC_CLASS_$_AMSUnitTests
__ AppleMediaServices: _OBJC_CLASS_$_AMSUserAgent
__ AppleMediaServices: _OBJC_CLASS_$_AMSUserNotification
__ AppleMediaServices: _OBJC_CLASS_$_AMSUserNotificationMetricsEvent
__ AppleMediaServices: _OBJC_METACLASS_$_AMSAuthKitUpdateTask
__ AppleMediaServices: _OBJC_METACLASS_$_AMSAuthenticateTask
__ AppleMediaServices: _OBJC_METACLASS_$_AMSDialogRequest
__ AppleMediaServices: _OBJC_METACLASS_$_AMSMetricsEvent
__ AppleMediaServices: _OBJC_METACLASS_$_AMSTask
__ AppleMediaServices: _OBJC_METACLASS_$_AMSURLProtocolHandler
__ AuthKit: _AKAppleIDAuthenticationErrorDomain
__ AuthKit: _AKAuthenticationIDMSTokenKey
__ AuthKit: _AKAuthenticationRawPasswordKey
__ AuthKit: _OBJC_CLASS_$_AKDevice
__ AuthKitUI: _OBJC_CLASS_$_AKAppleIDAuthenticationInAppContext
__ CFNetwork: _OBJC_CLASS_$_NSHTTPCookie
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLCredential
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: _kCFErrorDomainCFNetwork
__ CoreCDPUI: _OBJC_CLASS_$_CDPUIController
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDistributedCenter
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleIconFileKey
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreRecognition: _CRCodeRedeemerInfoCodeKey
__ CoreRecognition: _CRCodeRedeemerInfoErrorKey
__ CoreRecognition: _CROutputTypeCreditCardCardholderName
__ CoreRecognition: _CROutputTypeCreditCardExpirationDate
__ CoreRecognition: _CROutputTypeCreditCardNumber
__ CoreRecognition: _CROutputTypeIDCardBack
__ CoreRecognition: _CROutputTypeIDCardFront
__ CoreRecognition: _OBJC_CLASS_$_CRCameraReader
__ CoreRecognition: _OBJC_CLASS_$_CRCameraReaderOutputIDCard
__ CoreRecognition: _OBJC_CLASS_$_CRCodeRedeemerController
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleRecord
__ CoreServices: _OBJC_CLASS_$__LSOpenConfiguration
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: _kCTDataConnectionServiceTypeInternet
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ HSAAuthentication: _HSAAuthenticationRegisterIncomingAuthenticationTokenBlockWithIdentifier
__ HSAAuthentication: _HSAAuthenticationUnregisterIncomingAuthenticationTokenBlockWithIdentifier
__ IconServices: _OBJC_CLASS_$_ISIcon
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ InAppMessages: _OBJC_CLASS_$_IAMMessageGroup
__ InAppMessages: _OBJC_METACLASS_$_IAMMessageGroup
__ ManagedConfiguration: _MCFeatureExplicitContentAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ OnBoardingKit: _OBJC_CLASS_$_OBPrivacyPresenter
__ Preferences: _OBJC_CLASS_$_PSAirplaneModeSettingsDetail
__ Preferences: _OBJC_CLASS_$_PSSpecifier
__ Preferences: _OBJC_CLASS_$_PSTableCell
__ Preferences: _OBJC_METACLASS_$_PSTableCell
__ Preferences: _PSCellClassKey
__ Preferences: _PSTableCellHeightKey
__ Preferences: _PSTableCellSubtitleTextKey
__ Preferences: _PSTitleKey
__ ProxCardKit: _OBJC_CLASS_$_PRXButton
__ ProxCardKit: _OBJC_CLASS_$_PRXFlowConfiguration
__ ProxCardKit: _PRXCardDefaultSize
__ ProxCardKit: _PRXExpectedCardWidthForStyle
__ ProxCardKit: _PRXIsPad
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _kCAGradientLayerAxial
__ QuartzCore: _kCAGradientLayerConic
__ QuartzCore: _kCAGradientLayerRadial
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ SoftLinking: __sl_dlopen
__ StoreServices: _OBJC_CLASS_$_SSVTelephonyController
__ StoreServices: _SSErrorDomain
__ UIFoundation: _NSFontAttributeName
__ UIFoundation: _NSForegroundColorAttributeName
__ UIFoundation: _NSParagraphStyleAttributeName
__ UIFoundation: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIFoundation: _OBJC_CLASS_$_UIFont
__ UIFoundation: _OBJC_CLASS_$_UIFontDescriptor
__ UIFoundation: _UIFontDescriptorSystemDesignDefault
__ UIFoundation: _UIFontDescriptorSystemDesignMonospaced
__ UIFoundation: _UIFontDescriptorSystemDesignRounded
__ UIFoundation: _UIFontDescriptorSystemDesignSerif
__ UIFoundation: _UIFontDescriptorTraitsAttribute
__ UIFoundation: _UIFontWeightBlack
__ UIFoundation: _UIFontWeightBold
__ UIFoundation: _UIFontWeightHeavy
__ UIFoundation: _UIFontWeightLight
__ UIFoundation: _UIFontWeightMedium
__ UIFoundation: _UIFontWeightRegular
__ UIFoundation: _UIFontWeightSemibold
__ UIFoundation: _UIFontWeightThin
__ UIFoundation: _UIFontWeightTrait
__ UIFoundation: _UIFontWeightUltraLight
__ UIKit: _NSDirectionalEdgeInsetsZero
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIButtonConfiguration
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UICubicTimingParameters
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFontMetrics
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIKeyCommand
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UINavigationBarAppearance
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPresentationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISheetPresentationControllerDetent
__ UIKit: _OBJC_CLASS_$_UISpringTimingParameters
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITabBarController
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIToolbar
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_CLASS_$__UIHyperInteractor
__ UIKit: _OBJC_CLASS_$__UIHyperrectangle
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_CLASS_$__UIResilientRemoteViewContainerViewController
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UIPresentationController
__ UIKit: _OBJC_METACLASS_$_UIScreen
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UIStackView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UITextView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIVisualEffectView
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsVoiceOverRunning
__ UIKit: _UIApp
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationOpenURLOptionUniversalLinksOnly
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleLargeTitle
__ UIKit: _UIFontTextStyleSubhead
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleSubheadline1
__ UIKit: _UIFontTextStyleTitle0
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIKeyboardAnimationCurveUserInfoKey
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardDidHideNotification
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardOrderOutAutomatic
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ WebKit: _OBJC_CLASS_$_WKContentRuleListStore
__ WebKit: _OBJC_CLASS_$_WKContentWorld
__ WebKit: _OBJC_CLASS_$_WKProcessPool
__ WebKit: _OBJC_CLASS_$_WKUserContentController
__ WebKit: _OBJC_CLASS_$_WKUserScript
__ WebKit: _OBJC_CLASS_$_WKWebView
__ WebKit: _OBJC_CLASS_$_WKWebViewConfiguration
__ WebKit: _OBJC_CLASS_$_WKWebsiteDataStore
__ WebKit: _OBJC_CLASS_$__WKProcessPoolConfiguration
__ WebKit: _OBJC_CLASS_$__WKRemoteObjectInterface
__ WebKit: _OBJC_METACLASS_$_WKWebView
__ iTunesStore: _ISCopyEncodedBase64
__ iTunesStore: _OBJC_CLASS_$_ISBiometricStore
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
AMSPaymentVerificationTokenResult : NSObject <NSSecureCoding>
 @property  NSData *tokenData

  // class methods
  +[AMSPaymentVerificationTokenResult supportsSecureCoding]

  // instance methods
  -[AMSPaymentVerificationTokenResult initWithCoder:]
  -[AMSPaymentVerificationTokenResult .cxx_destruct]
  -[AMSPaymentVerificationTokenResult tokenData]
  -[AMSPaymentVerificationTokenResult encodeWithCoder:]
  -[AMSPaymentVerificationTokenResult initWithTokenData:]


AMSUIAddFundsViewController : AMSUICommonViewController
 @property  AMSUIWebViewController *webViewController
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSDictionary *metricsOverlay

  // class methods
  +[AMSUIAddFundsViewController bagKeySet]
  +[AMSUIAddFundsViewController bagSubProfileVersion]
  +[AMSUIAddFundsViewController bagSubProfile]
  +[AMSUIAddFundsViewController createBagForSubProfile]

  // instance methods
  -[AMSUIAddFundsViewController setAccount:]
  -[AMSUIAddFundsViewController viewWillLayoutSubviews]
  -[AMSUIAddFundsViewController account]
  -[AMSUIAddFundsViewController setClientInfo:]
  -[AMSUIAddFundsViewController .cxx_destruct]
  -[AMSUIAddFundsViewController bag]
  -[AMSUIAddFundsViewController clientInfo]
  -[AMSUIAddFundsViewController initWithAccount:bag:]
  -[AMSUIAddFundsViewController metricsOverlay]
  -[AMSUIAddFundsViewController setMetricsOverlay:]
  -[AMSUIAddFundsViewController viewWillAppear:]
  -[AMSUIAddFundsViewController setBag:]
  -[AMSUIAddFundsViewController loadView]
  -[AMSUIAddFundsViewController webViewController]
  -[AMSUIAddFundsViewController initWithAccount:bag:clientInfo:]


AMSUIAgeVerificationTask : AMSTask <AMSBagConsumer, AMSRequestPresentationDelegate>
 @property  AMSAgeVerificationTask *task
 @property  UIViewController *viewController
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSDictionary *options
 @property  NSString *pincode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIAgeVerificationTask bagKeySet]
  +[AMSUIAgeVerificationTask bagSubProfileVersion]
  +[AMSUIAgeVerificationTask bagSubProfile]
  +[AMSUIAgeVerificationTask _dateFormatter]
  +[AMSUIAgeVerificationTask createBagForSubProfile]
  +[AMSUIAgeVerificationTask _dialogForResult:withBag:expiration:dateFormatter:]
  +[AMSUIAgeVerificationTask _promiseResultForCancelWithVerificationResult:]
  +[AMSUIAgeVerificationTask _promiseResultForOpeningURL:]
  +[AMSUIAgeVerificationTask _titleForResult:withBag:]
  +[AMSUIAgeVerificationTask _messageForResult:withBag:expiration:dateFormatter:]

  // instance methods
  -[AMSUIAgeVerificationTask viewController]
  -[AMSUIAgeVerificationTask account]
  -[AMSUIAgeVerificationTask options]
  -[AMSUIAgeVerificationTask pincode]
  -[AMSUIAgeVerificationTask setOptions:]
  -[AMSUIAgeVerificationTask .cxx_destruct]
  -[AMSUIAgeVerificationTask isVerificationNeeded]
  -[AMSUIAgeVerificationTask performTask]
  -[AMSUIAgeVerificationTask bag]
  -[AMSUIAgeVerificationTask handleAuthenticateRequest:completion:]
  -[AMSUIAgeVerificationTask handleDialogRequest:completion:]
  -[AMSUIAgeVerificationTask setTask:]
  -[AMSUIAgeVerificationTask task]
  -[AMSUIAgeVerificationTask setPincode:]
  -[AMSUIAgeVerificationTask setViewController:]
  -[AMSUIAgeVerificationTask _performTaskWithVerificationResult:]
  -[AMSUIAgeVerificationTask initWithAccount:bag:options:viewController:]


AMSUIAirplaneModeInquiry : NSObject <RadiosPreferencesDelegate>
 @property  RadiosPreferences *radiosPreferences
 @property  <AMSUIAirplaneModeInquiryDelegate> *delegate
 @property  BOOL isEnabled

  // class methods
  +[AMSUIAirplaneModeInquiry settingsURL]

  // instance methods
  -[AMSUIAirplaneModeInquiry radiosPreferences]
  -[AMSUIAirplaneModeInquiry .cxx_destruct]
  -[AMSUIAirplaneModeInquiry setDelegate:]
  -[AMSUIAirplaneModeInquiry init]
  -[AMSUIAirplaneModeInquiry isEnabled]
  -[AMSUIAirplaneModeInquiry delegate]
  -[AMSUIAirplaneModeInquiry airplaneModeChanged]


AMSUIAlertDialogTask : AMSTask
 @property  AMSDialogRequest *request
 @property  UIViewController *presentingViewController

  // class methods
  +[AMSUIAlertDialogTask _keyboardTypeFromType:]

  // instance methods
  -[AMSUIAlertDialogTask present]
  -[AMSUIAlertDialogTask .cxx_destruct]
  -[AMSUIAlertDialogTask presentingViewController]
  -[AMSUIAlertDialogTask request]
  -[AMSUIAlertDialogTask cancel]
  -[AMSUIAlertDialogTask initWithRequest:presentingViewController:]
  -[AMSUIAlertDialogTask _createIOSViewControllerFromRequest:completion:]


AMSUIAppearance : NSObject <NSCopying>
  // instance methods
  -[AMSUIAppearance init]
  -[AMSUIAppearance initWithDictionary:]
  -[AMSUIAppearance copyWithZone:]
  -[AMSUIAppearance _colorWithDictionary:]
  -[AMSUIAppearance _gradientImageWithDictionary:]
  -[AMSUIAppearance _gradientLayerTypeForRawValue:]
  -[AMSUIAppearance _imageSymbolConfigurationStyleWithDictionary:]
  -[AMSUIAppearance _imageSymbolConfigurationTextStyleWithDictionary:]
  -[AMSUIAppearance _backgroundColorWithDictionary:]
  -[AMSUIAppearance _backgroundImageWithDictionary:]
  -[AMSUIAppearance _fontWithDictionary:]
  -[AMSUIAppearance _imageSymbolConfigurationWithDictionary:]


AMSUIApplePayPVTFetchTask : AMSTask <NSURLSessionDelegate, AMSURLProtocolDelegate, NSURLSessionTaskDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIApplePayPVTFetchTask performTask]


AMSUIAssetFetchOperation : NSOperation
 @property  BOOL lowLatency
 @property  AMSPromise *operationPromise

  // instance methods
  -[AMSUIAssetFetchOperation setQueuePriority:]
  -[AMSUIAssetFetchOperation main]
  -[AMSUIAssetFetchOperation .cxx_destruct]
  -[AMSUIAssetFetchOperation setLowLatency:]
  -[AMSUIAssetFetchOperation cancel]
  -[AMSUIAssetFetchOperation _finishWithImage:error:]
  -[AMSUIAssetFetchOperation setOperationPromise:]
  -[AMSUIAssetFetchOperation operationPromise]
  -[AMSUIAssetFetchOperation isLowLatency]


AMSUIAssetQueue : NSObject
 @property  NSOperationQueue *underlyingQueue
 @property  NSMutableDictionary *pendingOperations
 @property  NSCountedSet *priorityCounts
 @property  {os_unfair_lock_s=I} stateLock
 @property  NSString *name
 @property  long long qualityOfService
 @property  long long maxConcurrentOperationCount
 @property  BOOL suspended

  // instance methods
  -[AMSUIAssetQueue setSuspended:]
  -[AMSUIAssetQueue setUnderlyingQueue:]
  -[AMSUIAssetQueue name]
  -[AMSUIAssetQueue qualityOfService]
  -[AMSUIAssetQueue .cxx_destruct]
  -[AMSUIAssetQueue setName:]
  -[AMSUIAssetQueue setMaxConcurrentOperationCount:]
  -[AMSUIAssetQueue setQualityOfService:]
  -[AMSUIAssetQueue init]
  -[AMSUIAssetQueue setStateLock:]
  -[AMSUIAssetQueue stateLock]
  -[AMSUIAssetQueue maxConcurrentOperationCount]
  -[AMSUIAssetQueue pendingOperations]
  -[AMSUIAssetQueue dealloc]
  -[AMSUIAssetQueue isSuspended]
  -[AMSUIAssetQueue underlyingQueue]
  -[AMSUIAssetQueue setPendingOperations:]
  -[AMSUIAssetQueue priorityCounts]
  -[AMSUIAssetQueue _didBeginFetchingAssets]
  -[AMSUIAssetQueue _didFetchAllAssetsAtPriority:]
  -[AMSUIAssetQueue _didFinishFetchingAllAssets]
  -[AMSUIAssetQueue _operationDidChangePriority:]
  -[AMSUIAssetQueue _operationDidCancel:]
  -[AMSUIAssetQueue _decrementCountAt:]
  -[AMSUIAssetQueue _incrementCountAt:]
  -[AMSUIAssetQueue _removeObserverForOperation:]
  -[AMSUIAssetQueue _didFetchAssetWithKey:producingImage:orError:]
  -[AMSUIAssetQueue _addObserverForOperation:]
  -[AMSUIAssetQueue _prepareToAddOperation:withKey:]
  -[AMSUIAssetQueue addOperation:withKey:]
  -[AMSUIAssetQueue operationWithKey:]
  -[AMSUIAssetQueue setPriorityCounts:]


AMSUIAuthenticateCloudTask : AMSTask
 @property  CDPUIController *cdpUIController
 @property  AMSAuthenticateRequest *authRequest
 @property  UIViewController *presentingViewController

  // instance methods
  -[AMSUIAuthenticateCloudTask .cxx_destruct]
  -[AMSUIAuthenticateCloudTask setPresentingViewController:]
  -[AMSUIAuthenticateCloudTask presentingViewController]
  -[AMSUIAuthenticateCloudTask authRequest]
  -[AMSUIAuthenticateCloudTask _serviceContextWithResults:parentViewController:]
  -[AMSUIAuthenticateCloudTask setCdpUIController:]
  -[AMSUIAuthenticateCloudTask cdpUIController]
  -[AMSUIAuthenticateCloudTask initWithAuthRequest:presentingViewController:]
  -[AMSUIAuthenticateCloudTask performAuthenticate]
  -[AMSUIAuthenticateCloudTask setAuthRequest:]


AMSUIAuthenticateTask : AMSAuthenticateTask <AMSAuthenticateTaskDelegate>
 @property  <AMSBagProtocol> *bag
 @property  UIViewController *presentingViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIAuthenticateTask .cxx_destruct]
  -[AMSUIAuthenticateTask performAuthentication]
  -[AMSUIAuthenticateTask initWithAccount:presentingViewController:options:]
  -[AMSUIAuthenticateTask _createAuthKitUpdateTaskForAccount:]
  -[AMSUIAuthenticateTask authenticateTask:handleDialogRequest:completion:]
  -[AMSUIAuthenticateTask presentingViewController]
  -[AMSUIAuthenticateTask initWithRequest:presentingViewController:]
  -[AMSUIAuthenticateTask initWithAuthenticationResults:presentingViewController:options:]


AMSUIAuthKitUpdateTask : AMSAuthKitUpdateTask
 @property  UIViewController *presentingViewController

  // instance methods
  -[AMSUIAuthKitUpdateTask .cxx_destruct]
  -[AMSUIAuthKitUpdateTask initWithAccount:presentingViewController:options:]
  -[AMSUIAuthKitUpdateTask _configureAuthKitContext:]
  -[AMSUIAuthKitUpdateTask _createAuthKitContext]
  -[AMSUIAuthKitUpdateTask _createAuthKitController]
  -[AMSUIAuthKitUpdateTask _authenticationType]
  -[AMSUIAuthKitUpdateTask presentingViewController]


AMSUIAutomaticDownloadKindsSetTask : AMSTask <AMSBagConsumer, AMSRequestPresentationDelegate>
 @property  AMSAutomaticDownloadKindsSetTask *task
 @property  UIViewController *viewController
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSArray *enabledMediaKinds
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIAutomaticDownloadKindsSetTask bagKeySet]
  +[AMSUIAutomaticDownloadKindsSetTask bagSubProfileVersion]
  +[AMSUIAutomaticDownloadKindsSetTask bagSubProfile]
  +[AMSUIAutomaticDownloadKindsSetTask createBagForSubProfile]

  // instance methods
  -[AMSUIAutomaticDownloadKindsSetTask viewController]
  -[AMSUIAutomaticDownloadKindsSetTask account]
  -[AMSUIAutomaticDownloadKindsSetTask .cxx_destruct]
  -[AMSUIAutomaticDownloadKindsSetTask bag]
  -[AMSUIAutomaticDownloadKindsSetTask handleAuthenticateRequest:completion:]
  -[AMSUIAutomaticDownloadKindsSetTask handleDialogRequest:completion:]
  -[AMSUIAutomaticDownloadKindsSetTask enabledMediaKinds]
  -[AMSUIAutomaticDownloadKindsSetTask setTask:]
  -[AMSUIAutomaticDownloadKindsSetTask perform]
  -[AMSUIAutomaticDownloadKindsSetTask task]
  -[AMSUIAutomaticDownloadKindsSetTask setViewController:]
  -[AMSUIAutomaticDownloadKindsSetTask initWithEnabledMediaKinds:account:bag:viewController:]


AMSUIBannerAppearance : AMSUIAppearance <NSCopying>
 @property  UIColor *accessoryButtonColor
 @property  UIFont *accessoryButtonFont
 @property  UIColor *backgroundColor
 @property  UIImage *backgroundImage
 @property  UIImageSymbolConfiguration *imageSymbolConfiguration
 @property  UIColor *imageTintColor
 @property  UIFont *messageFont
 @property  UIColor *messageTextColor
 @property  UIColor *separatorColor
 @property  UIFont *titleFont
 @property  UIColor *titleTextColor

  // instance methods
  -[AMSUIBannerAppearance setImageTintColor:]
  -[AMSUIBannerAppearance setTitleFont:]
  -[AMSUIBannerAppearance setSeparatorColor:]
  -[AMSUIBannerAppearance backgroundImage]
  -[AMSUIBannerAppearance separatorColor]
  -[AMSUIBannerAppearance imageTintColor]
  -[AMSUIBannerAppearance setBackgroundImage:]
  -[AMSUIBannerAppearance backgroundColor]
  -[AMSUIBannerAppearance .cxx_destruct]
  -[AMSUIBannerAppearance imageSymbolConfiguration]
  -[AMSUIBannerAppearance titleFont]
  -[AMSUIBannerAppearance init]
  -[AMSUIBannerAppearance setImageSymbolConfiguration:]
  -[AMSUIBannerAppearance setBackgroundColor:]
  -[AMSUIBannerAppearance titleTextColor]
  -[AMSUIBannerAppearance initWithDictionary:]
  -[AMSUIBannerAppearance setTitleTextColor:]
  -[AMSUIBannerAppearance setAccessoryButtonColor:]
  -[AMSUIBannerAppearance setMessageTextColor:]
  -[AMSUIBannerAppearance setMessageFont:]
  -[AMSUIBannerAppearance setAccessoryButtonFont:]
  -[AMSUIBannerAppearance accessoryButtonFont]
  -[AMSUIBannerAppearance accessoryButtonColor]
  -[AMSUIBannerAppearance messageFont]
  -[AMSUIBannerAppearance messageTextColor]


AMSUIBannerMessageViewController : UIViewController <AMSUIMessageViewController>
 @property  BOOL didEnqueueMetrics
 @property  BOOL isLoadingImage
 @property  UIImage *loadedImage
 @property  AMSDialogRequest *request
 @property  AMSUIBannerAppearance *requestAppearance
 @property  <AMSUIMessageViewControllerDelegate> *delegate
 @property  AMSBinaryPromise *loadPromise
 @property  AMSUIBannerAppearance *preferredAppearance
 @property  BOOL shouldAutomaticallyReportMetrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIBannerMessageViewController setRequest:]
  -[AMSUIBannerMessageViewController initWithRequest:]
  -[AMSUIBannerMessageViewController .cxx_destruct]
  -[AMSUIBannerMessageViewController viewDidLoad]
  -[AMSUIBannerMessageViewController setDelegate:]
  -[AMSUIBannerMessageViewController viewDidAppear:]
  -[AMSUIBannerMessageViewController request]
  -[AMSUIBannerMessageViewController delegate]
  -[AMSUIBannerMessageViewController loadView]
  -[AMSUIBannerMessageViewController setPreferredAppearance:]
  -[AMSUIBannerMessageViewController enqueueImpressionMetrics]
  -[AMSUIBannerMessageViewController loadPromise]
  -[AMSUIBannerMessageViewController setLoadPromise:]
  -[AMSUIBannerMessageViewController shouldAutomaticallyReportMetrics]
  -[AMSUIBannerMessageViewController setShouldAutomaticallyReportMetrics:]
  -[AMSUIBannerMessageViewController messageView]
  -[AMSUIBannerMessageViewController _preloadImageIfNeeded]
  -[AMSUIBannerMessageViewController isLoadingImage]
  -[AMSUIBannerMessageViewController _setDialogRequest:]
  -[AMSUIBannerMessageViewController _commitAppearance]
  -[AMSUIBannerMessageViewController _updateTextWithAttributes]
  -[AMSUIBannerMessageViewController loadedImage]
  -[AMSUIBannerMessageViewController requestAppearance]
  -[AMSUIBannerMessageViewController _didTapActionButton:]
  -[AMSUIBannerMessageViewController setIsLoadingImage:]
  -[AMSUIBannerMessageViewController setLoadedImage:]
  -[AMSUIBannerMessageViewController _setImageWithURL:]
  -[AMSUIBannerMessageViewController _titleLabelAttributes]
  -[AMSUIBannerMessageViewController _messageLabelAttributes]
  -[AMSUIBannerMessageViewController preferredAppearance]
  -[AMSUIBannerMessageViewController didEnqueueMetrics]
  -[AMSUIBannerMessageViewController setDidEnqueueMetrics:]
  -[AMSUIBannerMessageViewController setRequestAppearance:]


AMSUIBubbleTipAppearance : AMSUIAppearance <NSCopying>
 @property  UIColor *accessoryButtonColor
 @property  UIFont *accessoryButtonFont
 @property  UIColor *backgroundColor
 @property  UIImage *backgroundImage
 @property  UIColor *footerButtonColor
 @property  UIFont *footerButtonFont
 @property  UIImageSymbolConfiguration *imageSymbolConfiguration
 @property  UIColor *imageTintColor
 @property  UIFont *messageFont
 @property  UIColor *messageTextColor
 @property  UIColor *separatorColor
 @property  UIFont *titleFont
 @property  UIColor *titleTextColor

  // instance methods
  -[AMSUIBubbleTipAppearance setImageTintColor:]
  -[AMSUIBubbleTipAppearance setTitleFont:]
  -[AMSUIBubbleTipAppearance setSeparatorColor:]
  -[AMSUIBubbleTipAppearance backgroundImage]
  -[AMSUIBubbleTipAppearance separatorColor]
  -[AMSUIBubbleTipAppearance imageTintColor]
  -[AMSUIBubbleTipAppearance setBackgroundImage:]
  -[AMSUIBubbleTipAppearance backgroundColor]
  -[AMSUIBubbleTipAppearance .cxx_destruct]
  -[AMSUIBubbleTipAppearance imageSymbolConfiguration]
  -[AMSUIBubbleTipAppearance titleFont]
  -[AMSUIBubbleTipAppearance init]
  -[AMSUIBubbleTipAppearance setImageSymbolConfiguration:]
  -[AMSUIBubbleTipAppearance setBackgroundColor:]
  -[AMSUIBubbleTipAppearance titleTextColor]
  -[AMSUIBubbleTipAppearance initWithDictionary:]
  -[AMSUIBubbleTipAppearance setTitleTextColor:]
  -[AMSUIBubbleTipAppearance setAccessoryButtonColor:]
  -[AMSUIBubbleTipAppearance setMessageTextColor:]
  -[AMSUIBubbleTipAppearance setMessageFont:]
  -[AMSUIBubbleTipAppearance setAccessoryButtonFont:]
  -[AMSUIBubbleTipAppearance accessoryButtonFont]
  -[AMSUIBubbleTipAppearance accessoryButtonColor]
  -[AMSUIBubbleTipAppearance messageFont]
  -[AMSUIBubbleTipAppearance messageTextColor]
  -[AMSUIBubbleTipAppearance footerButtonColor]
  -[AMSUIBubbleTipAppearance setFooterButtonColor:]
  -[AMSUIBubbleTipAppearance footerButtonFont]
  -[AMSUIBubbleTipAppearance setFooterButtonFont:]


AMSUIBubbleTipInlineAnchorInfo : NSObject
 @property  unsigned long arrowDirection
 @property  double arrowOffset
 @property  double relativeArrowOffset

  // instance methods
  -[AMSUIBubbleTipInlineAnchorInfo arrowOffset]
  -[AMSUIBubbleTipInlineAnchorInfo setArrowDirection:]
  -[AMSUIBubbleTipInlineAnchorInfo setArrowOffset:]
  -[AMSUIBubbleTipInlineAnchorInfo arrowDirection]
  -[AMSUIBubbleTipInlineAnchorInfo initWithArrowDirection:arrowOffset:]
  -[AMSUIBubbleTipInlineAnchorInfo initWithArrowDirection:relativeArrowOffset:]
  -[AMSUIBubbleTipInlineAnchorInfo relativeArrowOffset]
  -[AMSUIBubbleTipInlineAnchorInfo setRelativeArrowOffset:]


AMSUIBubbleTipViewController : UIViewController <AMSUICommonTextViewDelegate, AMSUIMessageViewController>
 @property  BOOL didEnqueueMetrics
 @property  BOOL isLoadingImage
 @property  UIImage *loadedImage
 @property  AMSDialogRequest *request
 @property  AMSUIBubbleTipAppearance *requestAppearance
 @property  BOOL isSelfSizing
 @property  {CGPoint=dd} anchorPoint
 @property  <AMSUIMessageViewControllerDelegate> *delegate
 @property  AMSUIBubbleTipInlineAnchorInfo *inlineAnchorInfo
 @property  AMSBinaryPromise *loadPromise
 @property  AMSUIBubbleTipAppearance *preferredAppearance
 @property  BOOL shouldAutomaticallyReportMetrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIBubbleTipViewController setRequest:]
  -[AMSUIBubbleTipViewController setAnchorPoint:]
  -[AMSUIBubbleTipViewController preferredContentSize]
  -[AMSUIBubbleTipViewController initWithRequest:]
  -[AMSUIBubbleTipViewController .cxx_destruct]
  -[AMSUIBubbleTipViewController viewDidLoad]
  -[AMSUIBubbleTipViewController setDelegate:]
  -[AMSUIBubbleTipViewController viewDidAppear:]
  -[AMSUIBubbleTipViewController request]
  -[AMSUIBubbleTipViewController setPreferredContentSize:]
  -[AMSUIBubbleTipViewController viewDidLayoutSubviews]
  -[AMSUIBubbleTipViewController viewWillAppear:]
  -[AMSUIBubbleTipViewController delegate]
  -[AMSUIBubbleTipViewController dealloc]
  -[AMSUIBubbleTipViewController loadView]
  -[AMSUIBubbleTipViewController observeValueForKeyPath:ofObject:change:context:]
  -[AMSUIBubbleTipViewController anchorPoint]
  -[AMSUIBubbleTipViewController setPreferredAppearance:]
  -[AMSUIBubbleTipViewController enqueueImpressionMetrics]
  -[AMSUIBubbleTipViewController loadPromise]
  -[AMSUIBubbleTipViewController setLoadPromise:]
  -[AMSUIBubbleTipViewController shouldAutomaticallyReportMetrics]
  -[AMSUIBubbleTipViewController setShouldAutomaticallyReportMetrics:]
  -[AMSUIBubbleTipViewController messageView]
  -[AMSUIBubbleTipViewController _preloadImageIfNeeded]
  -[AMSUIBubbleTipViewController isLoadingImage]
  -[AMSUIBubbleTipViewController _setDialogRequest:]
  -[AMSUIBubbleTipViewController _commitAppearance]
  -[AMSUIBubbleTipViewController _updateTextWithAttributes]
  -[AMSUIBubbleTipViewController loadedImage]
  -[AMSUIBubbleTipViewController requestAppearance]
  -[AMSUIBubbleTipViewController _didTapActionButton:]
  -[AMSUIBubbleTipViewController setIsLoadingImage:]
  -[AMSUIBubbleTipViewController setLoadedImage:]
  -[AMSUIBubbleTipViewController _setImageWithURL:]
  -[AMSUIBubbleTipViewController _titleLabelAttributes]
  -[AMSUIBubbleTipViewController _messageLabelAttributes]
  -[AMSUIBubbleTipViewController preferredAppearance]
  -[AMSUIBubbleTipViewController didEnqueueMetrics]
  -[AMSUIBubbleTipViewController setDidEnqueueMetrics:]
  -[AMSUIBubbleTipViewController setRequestAppearance:]
  -[AMSUIBubbleTipViewController _startObservations]
  -[AMSUIBubbleTipViewController _endObservations]
  -[AMSUIBubbleTipViewController _messageViewStyle]
  -[AMSUIBubbleTipViewController _updateSelfSizedContentSize]
  -[AMSUIBubbleTipViewController _updateArrowProperties]
  -[AMSUIBubbleTipViewController inlineAnchorInfo]
  -[AMSUIBubbleTipViewController directionForAMSUIPopoverArrowDirection:]
  -[AMSUIBubbleTipViewController isSelfSizing]
  -[AMSUIBubbleTipViewController setIsSelfSizing:]
  -[AMSUIBubbleTipViewController ams_textViewDidUpdatePreferredContentSizeCategory:]
  -[AMSUIBubbleTipViewController setInlineAnchorInfo:]


AMSUIBundleImageFetchOperation : AMSUIAssetFetchOperation
 @property  NSString *imageName
 @property  NSArray *bundlesToSearch
 @property  UITraitCollection *traitCollection

  // instance methods
  -[AMSUIBundleImageFetchOperation setTraitCollection:]
  -[AMSUIBundleImageFetchOperation main]
  -[AMSUIBundleImageFetchOperation .cxx_destruct]
  -[AMSUIBundleImageFetchOperation traitCollection]
  -[AMSUIBundleImageFetchOperation imageName]
  -[AMSUIBundleImageFetchOperation setImageName:]
  -[AMSUIBundleImageFetchOperation isLowLatency]
  -[AMSUIBundleImageFetchOperation bundlesToSearch]
  -[AMSUIBundleImageFetchOperation initWithImageName:searchBundles:compatibleWithTraitCollection:]
  -[AMSUIBundleImageFetchOperation setBundlesToSearch:]


AMSUIBundleViewController : AMSUIDynamicViewController <AMSBagConsumer>
 @property  NSString *placement
 @property  NSString *serviceType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIBundleViewController bagKeySet]
  +[AMSUIBundleViewController bagSubProfileVersion]
  +[AMSUIBundleViewController bagSubProfile]

  // instance methods
  -[AMSUIBundleViewController setPlacement:]
  -[AMSUIBundleViewController placement]
  -[AMSUIBundleViewController setAccount:]
  -[AMSUIBundleViewController account]
  -[AMSUIBundleViewController setServiceType:]
  -[AMSUIBundleViewController .cxx_destruct]
  -[AMSUIBundleViewController serviceType]
  -[AMSUIBundleViewController initWithServiceType:placement:account:bag:]


AMSUICardMetadata : NSObject
  // class methods
  +[AMSUICardMetadata appleCardIcon]
  +[AMSUICardMetadata _passesForPassTypeIdentifier:serialNumber:]
  +[AMSUICardMetadata _cardArtworkForPaymentPass:width:]
  +[AMSUICardMetadata appleCardIconString]
  +[AMSUICardMetadata metadataForPassTypeIdentifier:serialNumber:cardArtworkSize:]


AMSUICardOnFilePVTFetchTask : AMSTask
 @property  ACAccount *account
 @property  NSDictionary *accountParameters
 @property  <AMSBagProtocol> *bag
 @property  NSString *displayName
 @property  AMSUIPaymentVerificationMetrics *metrics
 @property  ACAccount *originalAccount
 @property  UIViewController *viewController

  // class methods
  +[AMSUICardOnFilePVTFetchTask _accountToUseFromGivenAccount:accountParameters:activeiTunesAccount:]
  +[AMSUICardOnFilePVTFetchTask _promiseToFetchURLResponseForAccount:accountParameters:url:bag:]
  +[AMSUICardOnFilePVTFetchTask _isCardOnFileOnStack:]
  +[AMSUICardOnFilePVTFetchTask _tokenFromObject:]
  +[AMSUICardOnFilePVTFetchTask _tokenResultFromTokenString:]
  +[AMSUICardOnFilePVTFetchTask _encoderWithBag:account:]
  +[AMSUICardOnFilePVTFetchTask _sessionWithBag:account:accountParameters:]

  // instance methods
  -[AMSUICardOnFilePVTFetchTask displayName]
  -[AMSUICardOnFilePVTFetchTask viewController]
  -[AMSUICardOnFilePVTFetchTask setAccount:]
  -[AMSUICardOnFilePVTFetchTask account]
  -[AMSUICardOnFilePVTFetchTask .cxx_destruct]
  -[AMSUICardOnFilePVTFetchTask performTask]
  -[AMSUICardOnFilePVTFetchTask bag]
  -[AMSUICardOnFilePVTFetchTask accountParameters]
  -[AMSUICardOnFilePVTFetchTask setMetrics:]
  -[AMSUICardOnFilePVTFetchTask setDisplayName:]
  -[AMSUICardOnFilePVTFetchTask setAccountParameters:]
  -[AMSUICardOnFilePVTFetchTask metrics]
  -[AMSUICardOnFilePVTFetchTask setBag:]
  -[AMSUICardOnFilePVTFetchTask setViewController:]
  -[AMSUICardOnFilePVTFetchTask originalAccount]
  -[AMSUICardOnFilePVTFetchTask _promiseToLoadBooleanURL]
  -[AMSUICardOnFilePVTFetchTask _promiseToPromptAfterCancel]
  -[AMSUICardOnFilePVTFetchTask _promiseToFetchCardOnStackBooleanURL:]
  -[AMSUICardOnFilePVTFetchTask _promiseToPromptBeforeBiometricAuth]
  -[AMSUICardOnFilePVTFetchTask _promiseToLoadPVTURL]
  -[AMSUICardOnFilePVTFetchTask _promiseToFetchCardOnStackTokenURL:]
  -[AMSUICardOnFilePVTFetchTask initWithAccount:accountParameters:bag:displayName:metrics:viewController:]
  -[AMSUICardOnFilePVTFetchTask setOriginalAccount:]


AMSUICGRectHelper : NSObject
  // class methods
  +[AMSUICGRectHelper rect:withFlippedOriginXRelativeTo:]
  +[AMSUICGRectHelper flattenRect:toParentFrame:]


AMSUICommonButton : UIButton
  // instance methods
  -[AMSUICommonButton _setup]
  -[AMSUICommonButton init]


AMSUICommonCollectionView : UICollectionView
 @property  AMSUICommonCollectionViewHandler *handler
 @property  <AMSUICommonCollectionViewDelegate> *commonDelegate
 @property  <UICollectionViewDelegate> *delegate

  // instance methods
  -[AMSUICommonCollectionView .cxx_destruct]
  -[AMSUICommonCollectionView init]
  -[AMSUICommonCollectionView handler]
  -[AMSUICommonCollectionView commonDelegate]
  -[AMSUICommonCollectionView setCommonDelegate:]


AMSUICommonCollectionViewCell : UICollectionViewCell
 @property  AMSUICommonView *underlyingContentView
 @property  AMSUICommonView *contentView

  // instance methods
  -[AMSUICommonCollectionViewCell tintColor]
  -[AMSUICommonCollectionViewCell _setup]
  -[AMSUICommonCollectionViewCell .cxx_destruct]
  -[AMSUICommonCollectionViewCell layoutSubviews]
  -[AMSUICommonCollectionViewCell contentView]
  -[AMSUICommonCollectionViewCell init]
  -[AMSUICommonCollectionViewCell initWithFrame:]
  -[AMSUICommonCollectionViewCell underlyingContentView]


AMSUICommonCollectionViewHandler : NSObject <UICollectionViewDelegate>
 @property  AMSUICommonCollectionView *collectionView
 @property  <AMSUICommonCollectionViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUICommonCollectionViewHandler initWithCollectionView:]
  -[AMSUICommonCollectionViewHandler collectionView:didSelectItemAtIndexPath:]
  -[AMSUICommonCollectionViewHandler collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[AMSUICommonCollectionViewHandler .cxx_destruct]
  -[AMSUICommonCollectionViewHandler collectionView:shouldHighlightItemAtIndexPath:]
  -[AMSUICommonCollectionViewHandler setDelegate:]
  -[AMSUICommonCollectionViewHandler collectionView]
  -[AMSUICommonCollectionViewHandler scrollViewDidScroll:]
  -[AMSUICommonCollectionViewHandler delegate]


AMSUICommonControl : UIControl
 @property  BOOL trackingMouse

  // instance methods
  -[AMSUICommonControl _setup]
  -[AMSUICommonControl initWithCoder:]
  -[AMSUICommonControl init]
  -[AMSUICommonControl initWithFrame:]
  -[AMSUICommonControl isTrackingMouse]
  -[AMSUICommonControl setTrackingMouse:]


AMSUICommonDynamicColor : NSObject
  // class methods
  +[AMSUICommonDynamicColor dynamicColorWithLightColor:darkColor:lightHighContrastColor:darkHighContrastColor:]


AMSUICommonErrorViewController : AMSUICommonViewController
 @property  <AMSBagProtocol> *bag
 @property  @? cancelAction
 @property  NSError *error
 @property  AMSUIErrorView *errorView
 @property  @? retryAction
 @property  NSString *logKey

  // instance methods
  -[AMSUICommonErrorViewController cancelAction]
  -[AMSUICommonErrorViewController _setup]
  -[AMSUICommonErrorViewController viewWillLayoutSubviews]
  -[AMSUICommonErrorViewController logKey]
  -[AMSUICommonErrorViewController .cxx_destruct]
  -[AMSUICommonErrorViewController bag]
  -[AMSUICommonErrorViewController viewDidLoad]
  -[AMSUICommonErrorViewController setCancelAction:]
  -[AMSUICommonErrorViewController retryAction]
  -[AMSUICommonErrorViewController navigationItem]
  -[AMSUICommonErrorViewController setLogKey:]
  -[AMSUICommonErrorViewController setBag:]
  -[AMSUICommonErrorViewController loadView]
  -[AMSUICommonErrorViewController setError:]
  -[AMSUICommonErrorViewController error]
  -[AMSUICommonErrorViewController _setupNavigationItem]
  -[AMSUICommonErrorViewController _showCancelButton]
  -[AMSUICommonErrorViewController _cancelButtonAction]
  -[AMSUICommonErrorViewController errorView]
  -[AMSUICommonErrorViewController setErrorView:]
  -[AMSUICommonErrorViewController initWithError:logKey:bag:retryAction:cancelAction:]
  -[AMSUICommonErrorViewController setRetryAction:]


AMSUICommonImageView : UIImageView
  // instance methods
  -[AMSUICommonImageView _setup]
  -[AMSUICommonImageView initWithCoder:]
  -[AMSUICommonImageView init]
  -[AMSUICommonImageView initWithFrame:]


AMSUICommonLabel : UILabel

AMSUICommonLoadingViewController : AMSUICommonViewController
 @property  AMSUILoadingView *loadingView

  // instance methods
  -[AMSUICommonLoadingViewController _setup]
  -[AMSUICommonLoadingViewController viewWillLayoutSubviews]
  -[AMSUICommonLoadingViewController .cxx_destruct]
  -[AMSUICommonLoadingViewController viewDidLoad]
  -[AMSUICommonLoadingViewController loadView]
  -[AMSUICommonLoadingViewController viewDidDisappear:]
  -[AMSUICommonLoadingViewController setLoadingView:]
  -[AMSUICommonLoadingViewController loadingView]


AMSUICommonScreen : UIScreen
  // class methods
  +[AMSUICommonScreen scale]


AMSUICommonStackView : UIStackView
  // instance methods
  -[AMSUICommonStackView addArrangedSubviews:]
  -[AMSUICommonStackView removeArrangedSubviews]


AMSUICommonTextView : UITextView
 @property  <AMSUICommonTextViewDelegate> *ams_delegate
 @property  BOOL centerText

  // instance methods
  -[AMSUICommonTextView traitCollectionDidChange:]
  -[AMSUICommonTextView .cxx_destruct]
  -[AMSUICommonTextView layoutSubviews]
  -[AMSUICommonTextView setCenterText:]
  -[AMSUICommonTextView setAms_delegate:]
  -[AMSUICommonTextView _centerTextIfNeeded]
  -[AMSUICommonTextView ams_delegate]
  -[AMSUICommonTextView centerText]


AMSUICommonView : UIView
 @property  NSString *accessibilityElementLabel

  // instance methods
  -[AMSUICommonView tintColor]
  -[AMSUICommonView _setup]
  -[AMSUICommonView initWithCoder:]
  -[AMSUICommonView .cxx_destruct]
  -[AMSUICommonView accessibilityLabel]
  -[AMSUICommonView init]
  -[AMSUICommonView initWithFrame:]
  -[AMSUICommonView accessibilityElementLabel]


AMSUICommonViewController : UIViewController
 @property  BOOL movingFromParentViewController
 @property  BOOL movingToParentViewController
 @property  AMSUICommonView *view

  // instance methods
  -[AMSUICommonViewController _unregisterNotifications]
  -[AMSUICommonViewController init]
  -[AMSUICommonViewController view]
  -[AMSUICommonViewController setView:]
  -[AMSUICommonViewController dealloc]
  -[AMSUICommonViewController loadView]
  -[AMSUICommonViewController _registerNotifications]
  -[AMSUICommonViewController setChildViewController:]
  -[AMSUICommonViewController unsetChildViewController:]


AMSUICommonVisualEffectView : UIVisualEffectView
  // instance methods
  -[AMSUICommonVisualEffectView init]


AMSUIContentImageFetchOperation : AMSUIAssetFetchOperation
 @property  NSURL *imageURL
 @property  @? fallbackBlock

  // instance methods
  -[AMSUIContentImageFetchOperation main]
  -[AMSUIContentImageFetchOperation imageURL]
  -[AMSUIContentImageFetchOperation .cxx_destruct]
  -[AMSUIContentImageFetchOperation setImageURL:]
  -[AMSUIContentImageFetchOperation initWithURL:]
  -[AMSUIContentImageFetchOperation _fallbackWithURL:]
  -[AMSUIContentImageFetchOperation fallbackBlock]
  -[AMSUIContentImageFetchOperation setFallbackBlock:]


AMSUIDynamicImpressionItem : NSObject
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  AMSUIDynamicImpressionMetrics *impressionMetrics

  // instance methods
  -[AMSUIDynamicImpressionItem .cxx_destruct]
  -[AMSUIDynamicImpressionItem setFrame:]
  -[AMSUIDynamicImpressionItem frame]
  -[AMSUIDynamicImpressionItem initWithFrame:impressionMetrics:]
  -[AMSUIDynamicImpressionItem impressionMetrics]
  -[AMSUIDynamicImpressionItem setImpressionMetrics:]


AMSUIDynamicImpressionMetrics : NSObject
 @property  NSDictionary *custom
 @property  NSDictionary *fields
 @property  AMSUIDynamicImpressionMetricsIdentifier *identifier

  // instance methods
  -[AMSUIDynamicImpressionMetrics setFields:]
  -[AMSUIDynamicImpressionMetrics fields]
  -[AMSUIDynamicImpressionMetrics custom]
  -[AMSUIDynamicImpressionMetrics .cxx_destruct]
  -[AMSUIDynamicImpressionMetrics identifier]
  -[AMSUIDynamicImpressionMetrics setIdentifier:]
  -[AMSUIDynamicImpressionMetrics setCustom:]
  -[AMSUIDynamicImpressionMetrics initWithIdentifier:fields:custom:]


AMSUIDynamicImpressionMetricsIdentifier : NSObject
 @property  NSString *element
 @property  long long index
 @property  NSString *parent

  // instance methods
  -[AMSUIDynamicImpressionMetricsIdentifier element]
  -[AMSUIDynamicImpressionMetricsIdentifier setIndex:]
  -[AMSUIDynamicImpressionMetricsIdentifier .cxx_destruct]
  -[AMSUIDynamicImpressionMetricsIdentifier setElement:]
  -[AMSUIDynamicImpressionMetricsIdentifier setParent:]
  -[AMSUIDynamicImpressionMetricsIdentifier parent]
  -[AMSUIDynamicImpressionMetricsIdentifier index]
  -[AMSUIDynamicImpressionMetricsIdentifier initWithParent:element:index:]


AMSUIDynamicViewController : AMSUICommonViewController <AMSUIDynamicViewControllerDelegate, AMSBagConsumer>
 @property  AMSUIDynamicViewControllerDelegateProxy *delegateProxy
 @property  AMSUIDynamicViewController *dynamicViewController
 @property  NSDictionary *internalClientOptions
 @property  ACAccount *account
 @property  BOOL anonymousMetrics
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSDictionary *clientOptions
 @property  <AMSUIDynamicViewControllerDelegate> *delegate
 @property  NSString *mediaClientIdentifier
 @property  NSDictionary *metricsOverlay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIDynamicViewController bagKeySet]
  +[AMSUIDynamicViewController bagSubProfileVersion]
  +[AMSUIDynamicViewController bagSubProfile]
  +[AMSUIDynamicViewController createBagForSubProfile]

  // instance methods
  -[AMSUIDynamicViewController _setup]
  -[AMSUIDynamicViewController setAccount:]
  -[AMSUIDynamicViewController viewWillLayoutSubviews]
  -[AMSUIDynamicViewController account]
  -[AMSUIDynamicViewController setTitle:]
  -[AMSUIDynamicViewController setClientInfo:]
  -[AMSUIDynamicViewController .cxx_destruct]
  -[AMSUIDynamicViewController bag]
  -[AMSUIDynamicViewController viewDidLoad]
  -[AMSUIDynamicViewController clientInfo]
  -[AMSUIDynamicViewController setDelegate:]
  -[AMSUIDynamicViewController viewDidAppear:]
  -[AMSUIDynamicViewController preload]
  -[AMSUIDynamicViewController isBeingDismissed]
  -[AMSUIDynamicViewController delegateProxy]
  -[AMSUIDynamicViewController metricsOverlay]
  -[AMSUIDynamicViewController navigationItem]
  -[AMSUIDynamicViewController setMetricsOverlay:]
  -[AMSUIDynamicViewController title]
  -[AMSUIDynamicViewController isMovingFromParentViewController]
  -[AMSUIDynamicViewController delegate]
  -[AMSUIDynamicViewController setClientOptions:]
  -[AMSUIDynamicViewController setBag:]
  -[AMSUIDynamicViewController setAnonymousMetrics:]
  -[AMSUIDynamicViewController initWithBag:URL:]
  -[AMSUIDynamicViewController setMediaClientIdentifier:]
  -[AMSUIDynamicViewController initWithBag:bagValue:]
  -[AMSUIDynamicViewController dynamicViewController]
  -[AMSUIDynamicViewController anonymousMetrics]
  -[AMSUIDynamicViewController clientOptions]
  -[AMSUIDynamicViewController internalClientOptions]
  -[AMSUIDynamicViewController mediaClientIdentifier]
  -[AMSUIDynamicViewController setInternalClientOptions:]
  -[AMSUIDynamicViewController reloadContentViewImpressionItems]
  -[AMSUIDynamicViewController initWithBag:javaScriptBagValue:]
  -[AMSUIDynamicViewController initWithBag:javaScriptURL:]
  -[AMSUIDynamicViewController _setupContentSize]


AMSUIDynamicViewControllerDelegateProxy : NSObject <AMSUIDynamicViewControllerDelegate>
 @property  AMSUIDynamicViewController *dynamicViewController
 @property  <AMSUIDynamicViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIDynamicViewControllerDelegateProxy .cxx_destruct]
  -[AMSUIDynamicViewControllerDelegateProxy setDelegate:]
  -[AMSUIDynamicViewControllerDelegateProxy dynamicViewController:didFinishPurchaseWithResult:error:]
  -[AMSUIDynamicViewControllerDelegateProxy delegate]
  -[AMSUIDynamicViewControllerDelegateProxy dynamicViewController:didFinishCarrierLinkingWithResult:error:]
  -[AMSUIDynamicViewControllerDelegateProxy dynamicViewController:didFinishWithPurchaseResult:error:]
  -[AMSUIDynamicViewControllerDelegateProxy dynamicViewController:contentViewControllerWithDictionary:]
  -[AMSUIDynamicViewControllerDelegateProxy dynamicViewController:contentViewWithDictionary:frame:]
  -[AMSUIDynamicViewControllerDelegateProxy dynamicViewController:didResolveWithResult:error:]
  -[AMSUIDynamicViewControllerDelegateProxy dynamicViewControllerShouldDismiss:]
  -[AMSUIDynamicViewControllerDelegateProxy dynamicViewController]
  -[AMSUIDynamicViewControllerDelegateProxy initWithDynamicViewController:]
  -[AMSUIDynamicViewControllerDelegateProxy setDynamicViewController:]


AMSUIEngagementCardWrapperViewController : AMSUICommonViewController <PRXCardContentProviding>
 @property  UINavigationController *childNavigationController
 @property  long long presentationStyle
 @property  UIViewController *viewController
 @property  long long cardStyle
 @property  BOOL allowsPullToDismiss
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIEngagementCardWrapperViewController viewController]
  -[AMSUIEngagementCardWrapperViewController initWithViewController:]
  -[AMSUIEngagementCardWrapperViewController viewWillLayoutSubviews]
  -[AMSUIEngagementCardWrapperViewController presentationStyle]
  -[AMSUIEngagementCardWrapperViewController setPresentationStyle:]
  -[AMSUIEngagementCardWrapperViewController .cxx_destruct]
  -[AMSUIEngagementCardWrapperViewController viewDidLoad]
  -[AMSUIEngagementCardWrapperViewController allowsPullToDismiss]
  -[AMSUIEngagementCardWrapperViewController setChildNavigationController:]
  -[AMSUIEngagementCardWrapperViewController childNavigationController]


AMSUIEngagementRemoteViewController : _UIRemoteViewController
 @property  <AMSUIEngagementTaskHostInterface> *delegate
 @property  <AMSUIEngagementTaskRemoteInterface> *remoteProxy

  // class methods
  +[AMSUIEngagementRemoteViewController exportedInterface]
  +[AMSUIEngagementRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[AMSUIEngagementRemoteViewController .cxx_destruct]
  -[AMSUIEngagementRemoteViewController setDelegate:]
  -[AMSUIEngagementRemoteViewController delegate]
  -[AMSUIEngagementRemoteViewController engagementTaskDidFinishWithResult:error:completion:]
  -[AMSUIEngagementRemoteViewController preferredContentSizeDidChange:]
  -[AMSUIEngagementRemoteViewController remoteProxy]


AMSUIEngagementRemoteViewTask : AMSTask <AMSUIEngagementTaskHostInterface>
 @property  NSObject<OS_dispatch_group> *dispatchGroup
 @property  NSError *error
 @property  UIViewController *presentedViewController
 @property  NSXPCListener *remoteListener
 @property  AMSEngagementRequest *request
 @property  AMSEngagementResult *result
 @property  UIViewController *viewController
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIEngagementRemoteViewTask setRequest:]
  -[AMSUIEngagementRemoteViewTask viewController]
  -[AMSUIEngagementRemoteViewTask setClientInfo:]
  -[AMSUIEngagementRemoteViewTask .cxx_destruct]
  -[AMSUIEngagementRemoteViewTask bag]
  -[AMSUIEngagementRemoteViewTask clientInfo]
  -[AMSUIEngagementRemoteViewTask setDispatchGroup:]
  -[AMSUIEngagementRemoteViewTask _presentViewController:]
  -[AMSUIEngagementRemoteViewTask result]
  -[AMSUIEngagementRemoteViewTask request]
  -[AMSUIEngagementRemoteViewTask presentEngagement]
  -[AMSUIEngagementRemoteViewTask setPresentedViewController:]
  -[AMSUIEngagementRemoteViewTask setResult:]
  -[AMSUIEngagementRemoteViewTask dispatchGroup]
  -[AMSUIEngagementRemoteViewTask remoteListener]
  -[AMSUIEngagementRemoteViewTask setBag:]
  -[AMSUIEngagementRemoteViewTask setViewController:]
  -[AMSUIEngagementRemoteViewTask _unblock]
  -[AMSUIEngagementRemoteViewTask setError:]
  -[AMSUIEngagementRemoteViewTask error]
  -[AMSUIEngagementRemoteViewTask engagementTaskDidFinishWithResult:error:completion:]
  -[AMSUIEngagementRemoteViewTask _snapshotBagDataPromise]
  -[AMSUIEngagementRemoteViewTask setRemoteListener:]
  -[AMSUIEngagementRemoteViewTask presentedViewController]
  -[AMSUIEngagementRemoteViewTask initWithRequest:presentingViewController:]
  -[AMSUIEngagementRemoteViewTask preferredContentSizeDidChange:]


AMSUIEngagementTask : AMSTask <AMSUIWebDelegate, AMSUIDynamicViewControllerDelegate, PRXFlowDelegate, AMSBagConsumer>
 @property  <AMSBagProtocol> *bag
 @property  UIViewController *cachedNavigationController
 @property  NSError *error
 @property  BOOL presented
 @property  AMSEngagementRequest *request
 @property  AMSEngagementResult *result
 @property  AMSUIEngagementTaskViewController *taskController
 @property  UIViewController *presentingViewController
 @property  BOOL allowMultiplePresentations
 @property  AMSProcessInfo *clientInfo
 @property  BOOL remotePresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIEngagementTask bagKeySet]
  +[AMSUIEngagementTask bagSubProfileVersion]
  +[AMSUIEngagementTask bagSubProfile]
  +[AMSUIEngagementTask createBagForSubProfile]
  +[AMSUIEngagementTask _isMacAppStore]

  // instance methods
  -[AMSUIEngagementTask setRequest:]
  -[AMSUIEngagementTask isFinished]
  -[AMSUIEngagementTask setClientInfo:]
  -[AMSUIEngagementTask .cxx_destruct]
  -[AMSUIEngagementTask setPresentingViewController:]
  -[AMSUIEngagementTask presented]
  -[AMSUIEngagementTask isRunning]
  -[AMSUIEngagementTask bag]
  -[AMSUIEngagementTask clientInfo]
  -[AMSUIEngagementTask presentingViewController]
  -[AMSUIEngagementTask result]
  -[AMSUIEngagementTask request]
  -[AMSUIEngagementTask initWithRequest:bag:presentingViewController:]
  -[AMSUIEngagementTask setRemotePresentation:]
  -[AMSUIEngagementTask presentEngagement]
  -[AMSUIEngagementTask setResult:]
  -[AMSUIEngagementTask _modalPresentationStyle]
  -[AMSUIEngagementTask setBag:]
  -[AMSUIEngagementTask setError:]
  -[AMSUIEngagementTask error]
  -[AMSUIEngagementTask taskController]
  -[AMSUIEngagementTask _isRemotePresentationEnabled]
  -[AMSUIEngagementTask _presentEngagementRemotely]
  -[AMSUIEngagementTask _presentEngagementLocally]
  -[AMSUIEngagementTask allowMultiplePresentations]
  -[AMSUIEngagementTask _presentTaskController]
  -[AMSUIEngagementTask remotePresentation]
  -[AMSUIEngagementTask _isRemoteViewService]
  -[AMSUIEngagementTask setPresented:]
  -[AMSUIEngagementTask _presentViewController:dismissBlock:]
  -[AMSUIEngagementTask cachedNavigationController]
  -[AMSUIEngagementTask setCachedNavigationController:]
  -[AMSUIEngagementTask _infoWithBuyParams:additionalInfo:]
  -[AMSUIEngagementTask _isWindowPresentation]
  -[AMSUIEngagementTask setAllowMultiplePresentations:]
  -[AMSUIEngagementTask setTaskController:]


AMSUIEngagementTaskViewController : AMSUICommonViewController <AMSUIWebDelegate, AMSUIDynamicViewControllerDelegate, UIAdaptivePresentationControllerDelegate, UIViewControllerTransitioningDelegate, AMSBagConsumer>
 @property  <AMSBagProtocol> *bag
 @property  UIViewController *childController
 @property  AMSPromise *childPromise
 @property  @? dismissBlock
 @property  NSError *error
 @property  BOOL presented
 @property  AMSEngagementRequest *request
 @property  AMSEngagementResult *result
 @property  BOOL ignoresDismissDetection
 @property  AMSProcessInfo *clientInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIEngagementTaskViewController bagKeySet]
  +[AMSUIEngagementTaskViewController bagSubProfileVersion]
  +[AMSUIEngagementTaskViewController bagSubProfile]
  +[AMSUIEngagementTaskViewController createBagForSubProfile]

  // instance methods
  -[AMSUIEngagementTaskViewController presentationControllerDidDismiss:]
  -[AMSUIEngagementTaskViewController setRequest:]
  -[AMSUIEngagementTaskViewController _setup]
  -[AMSUIEngagementTaskViewController viewWillLayoutSubviews]
  -[AMSUIEngagementTaskViewController setClientInfo:]
  -[AMSUIEngagementTaskViewController .cxx_destruct]
  -[AMSUIEngagementTaskViewController presented]
  -[AMSUIEngagementTaskViewController bag]
  -[AMSUIEngagementTaskViewController clientInfo]
  -[AMSUIEngagementTaskViewController viewDidAppear:]
  -[AMSUIEngagementTaskViewController dynamicViewController:didFinishPurchaseWithResult:error:]
  -[AMSUIEngagementTaskViewController result]
  -[AMSUIEngagementTaskViewController request]
  -[AMSUIEngagementTaskViewController initWithRequest:bag:]
  -[AMSUIEngagementTaskViewController setResult:]
  -[AMSUIEngagementTaskViewController _modalPresentationStyle]
  -[AMSUIEngagementTaskViewController dealloc]
  -[AMSUIEngagementTaskViewController setBag:]
  -[AMSUIEngagementTaskViewController loadView]
  -[AMSUIEngagementTaskViewController setError:]
  -[AMSUIEngagementTaskViewController viewDidDisappear:]
  -[AMSUIEngagementTaskViewController error]
  -[AMSUIEngagementTaskViewController webViewController:didFinishPurchaseWithResult:error:]
  -[AMSUIEngagementTaskViewController webViewController:didResolveWithResult:error:completion:]
  -[AMSUIEngagementTaskViewController dynamicViewController:didFinishWithPurchaseResult:error:]
  -[AMSUIEngagementTaskViewController dynamicViewController:didResolveWithResult:error:]
  -[AMSUIEngagementTaskViewController dynamicViewControllerShouldDismiss:]
  -[AMSUIEngagementTaskViewController _setupContentSize]
  -[AMSUIEngagementTaskViewController canPresent]
  -[AMSUIEngagementTaskViewController setPresented:]
  -[AMSUIEngagementTaskViewController startEngagement]
  -[AMSUIEngagementTaskViewController setDismissBlock:]
  -[AMSUIEngagementTaskViewController setIgnoresDismissDetection:]
  -[AMSUIEngagementTaskViewController ignoresDismissDetection]
  -[AMSUIEngagementTaskViewController dismissBlock]
  -[AMSUIEngagementTaskViewController childController]
  -[AMSUIEngagementTaskViewController _preloadChild]
  -[AMSUIEngagementTaskViewController childPromise]
  -[AMSUIEngagementTaskViewController _updateChildViewController:]
  -[AMSUIEngagementTaskViewController setChildController:]
  -[AMSUIEngagementTaskViewController _isURLTrusted:inDomains:]
  -[AMSUIEngagementTaskViewController _isOriginatingURLTrusted]
  -[AMSUIEngagementTaskViewController _viewControllerForType:]
  -[AMSUIEngagementTaskViewController setChildPromise:]
  -[AMSUIEngagementTaskViewController _finishWithResultInfo:error:]
  -[AMSUIEngagementTaskViewController _receivedPurchaseResult:]


AMSUIEngagementWrapperViewController : AMSUICommonViewController <UIAdaptivePresentationControllerDelegate>
 @property  @? dismissBlock
 @property  UIViewController *viewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIEngagementWrapperViewController presentationControllerDidDismiss:]
  -[AMSUIEngagementWrapperViewController _setup]
  -[AMSUIEngagementWrapperViewController viewController]
  -[AMSUIEngagementWrapperViewController initWithViewController:]
  -[AMSUIEngagementWrapperViewController viewWillLayoutSubviews]
  -[AMSUIEngagementWrapperViewController .cxx_destruct]
  -[AMSUIEngagementWrapperViewController viewDidAppear:]
  -[AMSUIEngagementWrapperViewController viewWillDisappear:]
  -[AMSUIEngagementWrapperViewController dealloc]
  -[AMSUIEngagementWrapperViewController loadView]
  -[AMSUIEngagementWrapperViewController viewDidDisappear:]
  -[AMSUIEngagementWrapperViewController _setupContentSize]
  -[AMSUIEngagementWrapperViewController setDismissBlock:]
  -[AMSUIEngagementWrapperViewController dismissBlock]


AMSUIErrorView : AMSUICommonView
 @property  _UIContentUnavailableView *backingView
 @property  @? buttonAction
 @property  NSString *buttonTitle
 @property  NSString *message
 @property  NSString *title

  // instance methods
  -[AMSUIErrorView buttonTitle]
  -[AMSUIErrorView setTitle:]
  -[AMSUIErrorView .cxx_destruct]
  -[AMSUIErrorView setMessage:]
  -[AMSUIErrorView layoutSubviews]
  -[AMSUIErrorView message]
  -[AMSUIErrorView initWithFrame:title:]
  -[AMSUIErrorView title]
  -[AMSUIErrorView buttonAction]
  -[AMSUIErrorView setButtonAction:]
  -[AMSUIErrorView setButtonTitle:]
  -[AMSUIErrorView backingView]
  -[AMSUIErrorView _handleButtonTap]
  -[AMSUIErrorView setBackingView:]


AMSUIFadeAnimator : NSObject <UIViewControllerAnimatedTransitioning>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIFadeAnimator transitionDuration:]
  -[AMSUIFadeAnimator animateTransition:]


AMSUIFontParser : NSObject
  // class methods
  +[AMSUIFontParser fontWithDictionary:]
  +[AMSUIFontParser fontTextStyleForString:]
  +[AMSUIFontParser systemDesignForString:]
  +[AMSUIFontParser weightForString:]


AMSUIImageLoader : NSObject
 @property  NSCache *imageCache
 @property  AMSUIAssetQueue *fetchQueue
 @property  AMSURLSession *urlSession
 @property  NSObject<OS_dispatch_queue> *workQueue

  // class methods
  +[AMSUIImageLoader defaultLoader]

  // instance methods
  -[AMSUIImageLoader fetchQueue]
  -[AMSUIImageLoader setWorkQueue:]
  -[AMSUIImageLoader setFetchQueue:]
  -[AMSUIImageLoader setImageCache:]
  -[AMSUIImageLoader imageCache]
  -[AMSUIImageLoader .cxx_destruct]
  -[AMSUIImageLoader urlSession]
  -[AMSUIImageLoader init]
  -[AMSUIImageLoader setUrlSession:]
  -[AMSUIImageLoader workQueue]
  -[AMSUIImageLoader fetchImageWithURL:]
  -[AMSUIImageLoader fetchImageWithURL:searchBundles:]
  -[AMSUIImageLoader _fetchImageWithURL:searchBundles:atPriority:]
  -[AMSUIImageLoader _fetchImageFromCacheWithURL:]
  -[AMSUIImageLoader _makeOperationForImageWithURL:searchBundles:error:]
  -[AMSUIImageLoader _performLowLatencyOperation:]
  -[AMSUIImageLoader _cacheImage:withURL:]
  -[AMSUIImageLoader _isURLEngagementContent:]
  -[AMSUIImageLoader _isURLSystemImage:]
  -[AMSUIImageLoader _isURLBundleResource:]


AMSUIInlineDialogView : AMSUICommonView
  // instance methods
  -[AMSUIInlineDialogView layoutSubviews]
  -[AMSUIInlineDialogView _contentView]
  -[AMSUIInlineDialogView sizeThatFits:]


AMSUIInlineDialogViewController : UIViewController <AMSUIMessageViewControllerDelegate, AMSEngagementObserver, AMSUIMessageViewController>
 @property  AMSEngagement *engagement
 @property  AMSDialogRequest *dialogRequest
 @property  NSString *placement
 @property  NSString *serviceType
 @property  NSDictionary *context
 @property  UIViewController<AMSUIMessageViewController> *childContentController
 @property  {CGPoint=dd} anchorPoint
 @property  AMSBinaryPromise *loadPromise
 @property  AMSUIAppearance *preferredAppearance
 @property  <AMSUIMessageViewControllerDelegate> *delegate
 @property  BOOL shouldAutomaticallyReportMetrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIInlineDialogViewController setPlacement:]
  -[AMSUIInlineDialogViewController placement]
  -[AMSUIInlineDialogViewController setAnchorPoint:]
  -[AMSUIInlineDialogViewController initWithRequest:]
  -[AMSUIInlineDialogViewController setServiceType:]
  -[AMSUIInlineDialogViewController .cxx_destruct]
  -[AMSUIInlineDialogViewController setDelegate:]
  -[AMSUIInlineDialogViewController init]
  -[AMSUIInlineDialogViewController delegate]
  -[AMSUIInlineDialogViewController setContext:]
  -[AMSUIInlineDialogViewController dialogRequest]
  -[AMSUIInlineDialogViewController setDialogRequest:]
  -[AMSUIInlineDialogViewController loadView]
  -[AMSUIInlineDialogViewController engagement:handleEngagementRequest:completion:]
  -[AMSUIInlineDialogViewController engagement:handleDialogRequest:completion:]
  -[AMSUIInlineDialogViewController engagement:didUpdateRequest:placement:serviceType:]
  -[AMSUIInlineDialogViewController anchorPoint]
  -[AMSUIInlineDialogViewController context]
  -[AMSUIInlineDialogViewController serviceType]
  -[AMSUIInlineDialogViewController engagement]
  -[AMSUIInlineDialogViewController setEngagement:]
  -[AMSUIInlineDialogViewController messageViewController:didSelectActionWithDialogResult:]
  -[AMSUIInlineDialogViewController messageViewController:didLoadDialogRequest:]
  -[AMSUIInlineDialogViewController messageViewController:didUpdateSize:]
  -[AMSUIInlineDialogViewController messageViewController:didFailWithError:]
  -[AMSUIInlineDialogViewController messageViewControllerDidDismiss:]
  -[AMSUIInlineDialogViewController setPreferredAppearance:]
  -[AMSUIInlineDialogViewController enqueueImpressionMetrics]
  -[AMSUIInlineDialogViewController loadPromise]
  -[AMSUIInlineDialogViewController setLoadPromise:]
  -[AMSUIInlineDialogViewController shouldAutomaticallyReportMetrics]
  -[AMSUIInlineDialogViewController setShouldAutomaticallyReportMetrics:]
  -[AMSUIInlineDialogViewController messageViewController:shouldEnqueueMetricsForDialogResult:]
  -[AMSUIInlineDialogViewController _dialogView]
  -[AMSUIInlineDialogViewController _setDialogRequest:]
  -[AMSUIInlineDialogViewController preferredAppearance]
  -[AMSUIInlineDialogViewController _setupEngagement]
  -[AMSUIInlineDialogViewController _setDialogRequestBanner:]
  -[AMSUIInlineDialogViewController _setDialogRequestBubbleTip:]
  -[AMSUIInlineDialogViewController _setContentController:]
  -[AMSUIInlineDialogViewController childContentController]
  -[AMSUIInlineDialogViewController setChildContentController:]
  -[AMSUIInlineDialogViewController _didFetchResponse:]
  -[AMSUIInlineDialogViewController _didFailToFetchWithError:]
  -[AMSUIInlineDialogViewController _tearDownContentView]
  -[AMSUIInlineDialogViewController _findDialogRequestInResponse:]
  -[AMSUIInlineDialogViewController initWithServiceType:placement:]
  -[AMSUIInlineDialogViewController initWithServiceType:placement:context:]


AMSUILoadingView : AMSUICommonView
 @property  UIActivityIndicatorView *activityIndicator
 @property  UILabel *label

  // instance methods
  -[AMSUILoadingView label]
  -[AMSUILoadingView activityIndicator]
  -[AMSUILoadingView .cxx_destruct]
  -[AMSUILoadingView layoutSubviews]
  -[AMSUILoadingView stopAnimating]
  -[AMSUILoadingView sizeThatFits:]
  -[AMSUILoadingView startAnimating]
  -[AMSUILoadingView initWithFrame:]
  -[AMSUILoadingView setActivityIndicator:]
  -[AMSUILoadingView setLabel:]
  -[AMSUILoadingView setLoadingText:]


AMSUIManageSubsriptionSpecifierProvider : NSObject <AAUISpecifierProvider, AMSUIWebDelegate>
 @property  AIDAAccountManager *accountManager
 @property  PSSpecifier *activelyLoadingSpecifier
 @property  <AAUISpecifierProviderDelegate> *delegate
 @property  NSArray *specifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIManageSubsriptionSpecifierProvider setSpecifiers:]
  -[AMSUIManageSubsriptionSpecifierProvider _appleAccount]
  -[AMSUIManageSubsriptionSpecifierProvider specifiers]
  -[AMSUIManageSubsriptionSpecifierProvider initWithAccountManager:]
  -[AMSUIManageSubsriptionSpecifierProvider webViewController:handleAuthenticateRequest:completion:]
  -[AMSUIManageSubsriptionSpecifierProvider setAccountManager:]
  -[AMSUIManageSubsriptionSpecifierProvider setActivelyLoadingSpecifier:]
  -[AMSUIManageSubsriptionSpecifierProvider accountManager]
  -[AMSUIManageSubsriptionSpecifierProvider _isSingleIdentity]
  -[AMSUIManageSubsriptionSpecifierProvider .cxx_destruct]
  -[AMSUIManageSubsriptionSpecifierProvider setDelegate:]
  -[AMSUIManageSubsriptionSpecifierProvider _findViewController]
  -[AMSUIManageSubsriptionSpecifierProvider webViewController:handleDelegateAction:completion:]
  -[AMSUIManageSubsriptionSpecifierProvider _subscriptionsSpecifierWasTapped:]
  -[AMSUIManageSubsriptionSpecifierProvider delegate]
  -[AMSUIManageSubsriptionSpecifierProvider webViewController:handleDialogRequest:completion:]
  -[AMSUIManageSubsriptionSpecifierProvider _storeAccount]
  -[AMSUIManageSubsriptionSpecifierProvider activelyLoadingSpecifier]


AMSUIMarketingItemViewController : AMSUIDynamicViewController <AMSBagConsumer>
 @property  NSString *offerHints
 @property  NSString *seed
 @property  NSDictionary *contextInfo
 @property  NSString *placement
 @property  NSString *serviceType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIMarketingItemViewController bagKeySet]
  +[AMSUIMarketingItemViewController bagSubProfileVersion]
  +[AMSUIMarketingItemViewController bagSubProfile]
  +[AMSUIMarketingItemViewController createBagForSubProfile]

  // instance methods
  -[AMSUIMarketingItemViewController setPlacement:]
  -[AMSUIMarketingItemViewController placement]
  -[AMSUIMarketingItemViewController seed]
  -[AMSUIMarketingItemViewController setServiceType:]
  -[AMSUIMarketingItemViewController .cxx_destruct]
  -[AMSUIMarketingItemViewController setSeed:]
  -[AMSUIMarketingItemViewController offerHints]
  -[AMSUIMarketingItemViewController setContextInfo:]
  -[AMSUIMarketingItemViewController setOfferHints:]
  -[AMSUIMarketingItemViewController contextInfo]
  -[AMSUIMarketingItemViewController serviceType]
  -[AMSUIMarketingItemViewController initWithMarketingItem:bag:]
  -[AMSUIMarketingItemViewController initWithServiceType:placement:account:bag:]
  -[AMSUIMarketingItemViewController _setInternalClientOptionsValue:forKey:]
  -[AMSUIMarketingItemViewController initWithServiceType:placement:bag:]


AMSUIMessageButton : AMSUICommonButton
 @property  unsigned long messageStyle
 @property  AMSDialogAction *dialogAction
 @property  UIFont *titleFont

  // instance methods
  -[AMSUIMessageButton setTitleFont:]
  -[AMSUIMessageButton .cxx_destruct]
  -[AMSUIMessageButton titleFont]
  -[AMSUIMessageButton _closeImage]
  -[AMSUIMessageButton _symbolConfiguration]
  -[AMSUIMessageButton _chevronImage]
  -[AMSUIMessageButton dialogAction]
  -[AMSUIMessageButton _setupWithDialogAction:]
  -[AMSUIMessageButton _defaultTextFont]
  -[AMSUIMessageButton _defaultContentColor]
  -[AMSUIMessageButton messageStyle]
  -[AMSUIMessageButton initWithDialogAction:messageStyle:]
  -[AMSUIMessageButton setFooterStyle]
  -[AMSUIMessageButton isDefaultCloseButton]
  -[AMSUIMessageButton setMessageStyle:]


AMSUIMessageGroup : IAMMessageGroup <AMSUIWebDelegate, AMSUIDynamicViewControllerDelegate>
 @property  <AMSBagProtocol> *bag
 @property  NSDictionary *clientData
 @property  NSString *clientIdentifier
 @property  NSString *clientVersion
 @property  <AMSUIMessageGroupDelegate> *delegate
 @property  NSDictionary *clientMetricsOverlay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIMessageGroup clientVersion]
  -[AMSUIMessageGroup clientMetricsOverlay]
  -[AMSUIMessageGroup setClientData:]
  -[AMSUIMessageGroup .cxx_destruct]
  -[AMSUIMessageGroup _viewControllerForServiceType:placement:clientIdentifier:clientVersion:params:account:sidepack:metrics:]
  -[AMSUIMessageGroup bag]
  -[AMSUIMessageGroup clientData]
  -[AMSUIMessageGroup initWithBag:]
  -[AMSUIMessageGroup _viewControllerForURL:account:sidepack:metrics:]
  -[AMSUIMessageGroup setDelegate:]
  -[AMSUIMessageGroup init]
  -[AMSUIMessageGroup dynamicViewController:didFinishPurchaseWithResult:error:]
  -[AMSUIMessageGroup clientIdentifier]
  -[AMSUIMessageGroup viewControllerForModalMessagePresentation:completion:]
  -[AMSUIMessageGroup delegate]
  -[AMSUIMessageGroup _dictionaryForParamObject:error:]
  -[AMSUIMessageGroup setClientMetricsOverlay:]
  -[AMSUIMessageGroup setClientVersion:]
  -[AMSUIMessageGroup setBag:]
  -[AMSUIMessageGroup dynamicViewController:didFinishCarrierLinkingWithResult:error:]
  -[AMSUIMessageGroup webViewController:didFinishPurchaseWithResult:error:]
  -[AMSUIMessageGroup setClientIdentifier:]


AMSUIMessageRequest : AMSDialogRequest
 @property  UIImage *iconImage

  // instance methods
  -[AMSUIMessageRequest iconImage]
  -[AMSUIMessageRequest .cxx_destruct]
  -[AMSUIMessageRequest setIconImage:]


AMSUIMessageView : AMSUICommonView
 @property  unsigned long style
 @property  UIView *containerView
 @property  UIView *imageContainerView
 @property  AMSUIMessageViewLayoutContext *layoutContext
 @property  NSArray *separatorViews
 @property  AMSUIPopoverShapeLayerView *maskShapeView
 @property  UIView *accessoryView
 @property  NSArray *footerButtonViews
 @property  UIImageView *backgroundImageView
 @property  AMSUICommonImageView *imageView
 @property  NSAttributedString *message
 @property  UIColor *separatorColor
 @property  AMSUICommonTextView *textView
 @property  AMSDialogAction *bodyAction
 @property  NSAttributedString *title
 @property  BOOL preLayoutImageView

  // instance methods
  -[AMSUIMessageView textView]
  -[AMSUIMessageView setSeparatorColor:]
  -[AMSUIMessageView imageView]
  -[AMSUIMessageView separatorColor]
  -[AMSUIMessageView traitCollectionDidChange:]
  -[AMSUIMessageView setTitle:]
  -[AMSUIMessageView containerView]
  -[AMSUIMessageView _setupDefaults]
  -[AMSUIMessageView .cxx_destruct]
  -[AMSUIMessageView setBackgroundImageView:]
  -[AMSUIMessageView setStyle:]
  -[AMSUIMessageView setMessage:]
  -[AMSUIMessageView layoutSubviews]
  -[AMSUIMessageView _setupImageView]
  -[AMSUIMessageView setNeedsLayout]
  -[AMSUIMessageView sizeThatFits:]
  -[AMSUIMessageView layoutContext]
  -[AMSUIMessageView setContainerView:]
  -[AMSUIMessageView initWithStyle:]
  -[AMSUIMessageView message]
  -[AMSUIMessageView setBackgroundColor:]
  -[AMSUIMessageView title]
  -[AMSUIMessageView setAccessoryView:]
  -[AMSUIMessageView backgroundImageView]
  -[AMSUIMessageView setLayoutContext:]
  -[AMSUIMessageView imageContainerView]
  -[AMSUIMessageView setImageContainerView:]
  -[AMSUIMessageView _defaultTitleFont]
  -[AMSUIMessageView dealloc]
  -[AMSUIMessageView accessoryView]
  -[AMSUIMessageView style]
  -[AMSUIMessageView observeValueForKeyPath:ofObject:change:context:]
  -[AMSUIMessageView _setupInitialLayout]
  -[AMSUIMessageView setSeparatorViews:]
  -[AMSUIMessageView separatorViews]
  -[AMSUIMessageView _makeSeparatorView]
  -[AMSUIMessageView setPreLayoutImageView:]
  -[AMSUIMessageView setAccessoryViewForDialogAction:target:action:]
  -[AMSUIMessageView setBodyDialogAction:target:action:]
  -[AMSUIMessageView bodyAction]
  -[AMSUIMessageView _startObservations]
  -[AMSUIMessageView _endObservations]
  -[AMSUIMessageView setFooterForDialogActions:target:action:]
  -[AMSUIMessageView footerButtonViews]
  -[AMSUIMessageView removeBubbleArrowMaskView]
  -[AMSUIMessageView setupBubbleArrowMaskView]
  -[AMSUIMessageView maskShapeView]
  -[AMSUIMessageView _setBackground]
  -[AMSUIMessageView setFooterButtonViews:]
  -[AMSUIMessageView setMaskShapeView:]
  -[AMSUIMessageView _setTextAlignment]
  -[AMSUIMessageView _setAccessibility]
  -[AMSUIMessageView _setTextViewText]
  -[AMSUIMessageView _setShadow]
  -[AMSUIMessageView _defaultMessageFont]
  -[AMSUIMessageView _defaultMessageColor]
  -[AMSUIMessageView _defaultTitleColor]
  -[AMSUIMessageView preLayoutImageView]


AMSUIMessageViewLayoutContext : NSObject
 @property  AMSUIMessageView *messageView
 @property  {CGSize=dd} lastFittingSize
 @property  {CGSize=dd} lastSize
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} mainContentFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} accessoryViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} footerContainerViewFrame
 @property  NSMutableArray *footerButtonFrames
 @property  NSMutableArray *footerButtonFramesPreFlatten
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imageViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} maskViewFrame
 @property  NSMutableArray *separatorViewFrames
 @property  {CGSize=dd} textViewContentHuggingSize
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} textViewFrame
 @property  BOOL isDirty
 @property  UIBezierPath *textViewExclusionPath
 @property  {NSDirectionalEdgeInsets=dddd} contentLayoutMargins
 @property  double accessorySpacing
 @property  BOOL shouldUseStackedLayout

  // instance methods
  -[AMSUIMessageViewLayoutContext isDirty]
  -[AMSUIMessageViewLayoutContext .cxx_destruct]
  -[AMSUIMessageViewLayoutContext setIsDirty:]
  -[AMSUIMessageViewLayoutContext accessoryViewFrame]
  -[AMSUIMessageViewLayoutContext sizeThatFits:]
  -[AMSUIMessageViewLayoutContext _isSymbolImage]
  -[AMSUIMessageViewLayoutContext lastSize]
  -[AMSUIMessageViewLayoutContext maskViewFrame]
  -[AMSUIMessageViewLayoutContext contentLayoutMargins]
  -[AMSUIMessageViewLayoutContext invalidate]
  -[AMSUIMessageViewLayoutContext _interitemSpacing]
  -[AMSUIMessageViewLayoutContext _footerHeight]
  -[AMSUIMessageViewLayoutContext setLastSize:]
  -[AMSUIMessageViewLayoutContext separatorThickness]
  -[AMSUIMessageViewLayoutContext messageView]
  -[AMSUIMessageViewLayoutContext setMessageView:]
  -[AMSUIMessageViewLayoutContext initWithMessageView:]
  -[AMSUIMessageViewLayoutContext layoutSubviewFrames]
  -[AMSUIMessageViewLayoutContext accessorySpacing]
  -[AMSUIMessageViewLayoutContext imageViewFrame]
  -[AMSUIMessageViewLayoutContext textViewFrame]
  -[AMSUIMessageViewLayoutContext separatorViewFrames]
  -[AMSUIMessageViewLayoutContext footerButtonFrames]
  -[AMSUIMessageViewLayoutContext shouldUseStackedLayout]
  -[AMSUIMessageViewLayoutContext setLastFittingSize:]
  -[AMSUIMessageViewLayoutContext _updateWithRootFrame:sizing:]
  -[AMSUIMessageViewLayoutContext lastFittingSize]
  -[AMSUIMessageViewLayoutContext isImageViewHidden]
  -[AMSUIMessageViewLayoutContext _makeImageViewSize]
  -[AMSUIMessageViewLayoutContext _labelSpacing]
  -[AMSUIMessageViewLayoutContext footerContainerViewFrame]
  -[AMSUIMessageViewLayoutContext calculateMainContentFrameRootFrame:]
  -[AMSUIMessageViewLayoutContext calculateAccessoryViewSize]
  -[AMSUIMessageViewLayoutContext calculateAccessoryViewFrame]
  -[AMSUIMessageViewLayoutContext calculateTextViewSizeInFrame:dirty:]
  -[AMSUIMessageViewLayoutContext _calculateFooterButtonFrames]
  -[AMSUIMessageViewLayoutContext footerButtonFramesPreFlatten]
  -[AMSUIMessageViewLayoutContext _isAccessoryViewLeading]
  -[AMSUIMessageViewLayoutContext totalFooterButtonHeight]
  -[AMSUIMessageViewLayoutContext _scaledUIValueForValue:]
  -[AMSUIMessageViewLayoutContext mainContentFrame]
  -[AMSUIMessageViewLayoutContext leadingContentTextBaseline]
  -[AMSUIMessageViewLayoutContext _isTextOnlyBanner]
  -[AMSUIMessageViewLayoutContext setImageViewFrame:]
  -[AMSUIMessageViewLayoutContext setMaskViewFrame:]
  -[AMSUIMessageViewLayoutContext setTextViewFrame:]
  -[AMSUIMessageViewLayoutContext setAccessoryViewFrame:]
  -[AMSUIMessageViewLayoutContext setSeparatorViewFrames:]
  -[AMSUIMessageViewLayoutContext setFooterContainerViewFrame:]
  -[AMSUIMessageViewLayoutContext setFooterButtonFrames:]
  -[AMSUIMessageViewLayoutContext setMainContentFrame:]
  -[AMSUIMessageViewLayoutContext _bannerMaxTextWidth]
  -[AMSUIMessageViewLayoutContext calculateTextViewExlcusionFrame]
  -[AMSUIMessageViewLayoutContext textViewExclusionPath]
  -[AMSUIMessageViewLayoutContext setTextViewContentHuggingSize:]
  -[AMSUIMessageViewLayoutContext textViewContentHuggingSize]
  -[AMSUIMessageViewLayoutContext setTextViewExclusionPath:]
  -[AMSUIMessageViewLayoutContext _imageLength]
  -[AMSUIMessageViewLayoutContext setFooterButtonFramesPreFlatten:]


AMSUINetworkImageFetchOperation : AMSUIAssetFetchOperation
 @property  NSURLSessionTask *sessionTask
 @property  NSURL *url
 @property  AMSURLSession *URLSession

  // class methods
  +[AMSUINetworkImageFetchOperation keyPathsForValuesAffectingIsExecuting]
  +[AMSUINetworkImageFetchOperation keyPathsForValuesAffectingIsFinished]

  // instance methods
  -[AMSUINetworkImageFetchOperation URLSession]
  -[AMSUINetworkImageFetchOperation setQueuePriority:]
  -[AMSUINetworkImageFetchOperation isAsynchronous]
  -[AMSUINetworkImageFetchOperation isFinished]
  -[AMSUINetworkImageFetchOperation url]
  -[AMSUINetworkImageFetchOperation .cxx_destruct]
  -[AMSUINetworkImageFetchOperation isExecuting]
  -[AMSUINetworkImageFetchOperation setUrl:]
  -[AMSUINetworkImageFetchOperation cancel]
  -[AMSUINetworkImageFetchOperation setURLSession:]
  -[AMSUINetworkImageFetchOperation start]
  -[AMSUINetworkImageFetchOperation sessionTask]
  -[AMSUINetworkImageFetchOperation setSessionTask:]
  -[AMSUINetworkImageFetchOperation initWithURL:URLSession:]
  -[AMSUINetworkImageFetchOperation _sessionTaskPriorityForQueuePriority:]
  -[AMSUINetworkImageFetchOperation _didCompleteTaskWithResult:error:]
  -[AMSUINetworkImageFetchOperation _eagerlyDecompressImage:]


AMSUINotificationSettingsTableViewCell : UITableViewCell
 @property  UISwitch *itemSwitch
 @property  <AMSUINotificationInAppSettingsTableViewCellDelegate> *delegate
 @property  AMSNotificationSettingsItem *item

  // instance methods
  -[AMSUINotificationSettingsTableViewCell setItem:]
  -[AMSUINotificationSettingsTableViewCell .cxx_destruct]
  -[AMSUINotificationSettingsTableViewCell setDelegate:]
  -[AMSUINotificationSettingsTableViewCell item]
  -[AMSUINotificationSettingsTableViewCell delegate]
  -[AMSUINotificationSettingsTableViewCell initWithStyle:reuseIdentifier:]
  -[AMSUINotificationSettingsTableViewCell switchToggled:]
  -[AMSUINotificationSettingsTableViewCell itemSwitch]
  -[AMSUINotificationSettingsTableViewCell setItemSwitch:]


AMSUINotificationSettingsViewController : UIViewController <AMSUINotificationSettingsViewModelDelegate, UITableViewDelegate, AMSBagConsumer>
 @property  NSMutableDictionary *changedItems
 @property  _UIContentUnavailableView *errorView
 @property  AMSUILoadingView *loadingView
 @property  AMSUINotificationSettingsViewModel *model
 @property  UNUserNotificationCenter *notificationCenter
 @property  UITableView *tableView
 @property  BOOL shouldDeepLink
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSString *identifier
 @property  ACAccount *account
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUINotificationSettingsViewController bagKeySet]
  +[AMSUINotificationSettingsViewController bagSubProfileVersion]
  +[AMSUINotificationSettingsViewController bagSubProfile]

  // instance methods
  -[AMSUINotificationSettingsViewController notificationCenter]
  -[AMSUINotificationSettingsViewController setTableView:]
  -[AMSUINotificationSettingsViewController setNotificationCenter:]
  -[AMSUINotificationSettingsViewController viewWillLayoutSubviews]
  -[AMSUINotificationSettingsViewController account]
  -[AMSUINotificationSettingsViewController setClientInfo:]
  -[AMSUINotificationSettingsViewController .cxx_destruct]
  -[AMSUINotificationSettingsViewController tableView:didSelectRowAtIndexPath:]
  -[AMSUINotificationSettingsViewController bag]
  -[AMSUINotificationSettingsViewController viewDidLoad]
  -[AMSUINotificationSettingsViewController clientInfo]
  -[AMSUINotificationSettingsViewController viewDidAppear:]
  -[AMSUINotificationSettingsViewController tableView]
  -[AMSUINotificationSettingsViewController identifier]
  -[AMSUINotificationSettingsViewController _commonSetup]
  -[AMSUINotificationSettingsViewController viewWillDisappear:]
  -[AMSUINotificationSettingsViewController initWithIdentifier:account:bag:]
  -[AMSUINotificationSettingsViewController model]
  -[AMSUINotificationSettingsViewController _isAuthenticated]
  -[AMSUINotificationSettingsViewController changedItems]
  -[AMSUINotificationSettingsViewController setModel:]
  -[AMSUINotificationSettingsViewController dealloc]
  -[AMSUINotificationSettingsViewController _loadData]
  -[AMSUINotificationSettingsViewController _appWillEnterForeground:]
  -[AMSUINotificationSettingsViewController setLoadingView:]
  -[AMSUINotificationSettingsViewController loadingView]
  -[AMSUINotificationSettingsViewController errorView]
  -[AMSUINotificationSettingsViewController setErrorView:]
  -[AMSUINotificationSettingsViewController initWithIdentifier:bag:]
  -[AMSUINotificationSettingsViewController _promptForAuthentication]
  -[AMSUINotificationSettingsViewController _handleAuthenticationError:]
  -[AMSUINotificationSettingsViewController _commitChangedItemsUpdates]
  -[AMSUINotificationSettingsViewController _updateNotificationStatus]
  -[AMSUINotificationSettingsViewController shouldDeepLink]
  -[AMSUINotificationSettingsViewController setShouldDeepLink:]
  -[AMSUINotificationSettingsViewController _handleAllowNotificationsButton]
  -[AMSUINotificationSettingsViewController viewModel:didReceiveValueChange:forItem:]
  -[AMSUINotificationSettingsViewController setChangedItems:]


AMSUINotificationSettingsViewModel : NSObject <AMSUINotificationInAppSettingsTableViewCellDelegate, UITableViewDataSource>
 @property  <AMSUINotificationSettingsViewModelDelegate> *delegate
 @property  NSArray *sections
 @property  BOOL showAllowNotificationsButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUINotificationSettingsViewModel setSections:]
  -[AMSUINotificationSettingsViewModel sections]
  -[AMSUINotificationSettingsViewModel numberOfSectionsInTableView:]
  -[AMSUINotificationSettingsViewModel tableView:numberOfRowsInSection:]
  -[AMSUINotificationSettingsViewModel tableView:titleForHeaderInSection:]
  -[AMSUINotificationSettingsViewModel .cxx_destruct]
  -[AMSUINotificationSettingsViewModel tableView:cellForRowAtIndexPath:]
  -[AMSUINotificationSettingsViewModel setDelegate:]
  -[AMSUINotificationSettingsViewModel tableView:titleForFooterInSection:]
  -[AMSUINotificationSettingsViewModel delegate]
  -[AMSUINotificationSettingsViewModel notificationInAppSettingsTableViewCellDidToggleValue:forItem:]
  -[AMSUINotificationSettingsViewModel setShowAllowNotificationsButton:]
  -[AMSUINotificationSettingsViewModel showAllowNotificationsButton]


AMSUIOnboardingFeatureView : UIView
 @property  UIImageView *imageView
 @property  UILabel *titleLabel
 @property  UILabel *descriptionLabel
 @property  double baselineOffsetFromBottom

  // instance methods
  -[AMSUIOnboardingFeatureView titleLabel]
  -[AMSUIOnboardingFeatureView imageView]
  -[AMSUIOnboardingFeatureView traitCollectionDidChange:]
  -[AMSUIOnboardingFeatureView .cxx_destruct]
  -[AMSUIOnboardingFeatureView setTitleLabel:]
  -[AMSUIOnboardingFeatureView layoutSubviews]
  -[AMSUIOnboardingFeatureView descriptionLabel]
  -[AMSUIOnboardingFeatureView sizeThatFits:]
  -[AMSUIOnboardingFeatureView setImageView:]
  -[AMSUIOnboardingFeatureView initWithFeature:]
  -[AMSUIOnboardingFeatureView baselineOffsetFromBottom]
  -[AMSUIOnboardingFeatureView setDescriptionLabel:]


AMSUIOnboardingHeaderView : UIScrollView
 @property  UIImageView *imageView
 @property  UILabel *titleLabel
 @property  UILabel *descriptionLabel
 @property  double containerHeight
 @property  BOOL isPresentedInFormSheet

  // instance methods
  -[AMSUIOnboardingHeaderView titleLabel]
  -[AMSUIOnboardingHeaderView imageView]
  -[AMSUIOnboardingHeaderView updateContentSize]
  -[AMSUIOnboardingHeaderView traitCollectionDidChange:]
  -[AMSUIOnboardingHeaderView .cxx_destruct]
  -[AMSUIOnboardingHeaderView setFrame:]
  -[AMSUIOnboardingHeaderView setTitleLabel:]
  -[AMSUIOnboardingHeaderView layoutSubviews]
  -[AMSUIOnboardingHeaderView descriptionLabel]
  -[AMSUIOnboardingHeaderView initWithFrame:]
  -[AMSUIOnboardingHeaderView setImageView:]
  -[AMSUIOnboardingHeaderView adjustedContentInsetDidChange]
  -[AMSUIOnboardingHeaderView setDescriptionLabel:]
  -[AMSUIOnboardingHeaderView isPresentedInFormSheet]
  -[AMSUIOnboardingHeaderView containerHeight]
  -[AMSUIOnboardingHeaderView setContainerHeight:]
  -[AMSUIOnboardingHeaderView setIsPresentedInFormSheet:]


AMSUIOnboardingMultiFeatureHeaderView : UIScrollView
 @property  UILabel *titleLabel
 @property  NSArray *featureViews
 @property  double containerHeight
 @property  BOOL isPresentedInFormSheet

  // instance methods
  -[AMSUIOnboardingMultiFeatureHeaderView titleLabel]
  -[AMSUIOnboardingMultiFeatureHeaderView updateContentSize]
  -[AMSUIOnboardingMultiFeatureHeaderView traitCollectionDidChange:]
  -[AMSUIOnboardingMultiFeatureHeaderView initWithFeatures:]
  -[AMSUIOnboardingMultiFeatureHeaderView .cxx_destruct]
  -[AMSUIOnboardingMultiFeatureHeaderView setFrame:]
  -[AMSUIOnboardingMultiFeatureHeaderView setTitleLabel:]
  -[AMSUIOnboardingMultiFeatureHeaderView layoutSubviews]
  -[AMSUIOnboardingMultiFeatureHeaderView adjustedContentInsetDidChange]
  -[AMSUIOnboardingMultiFeatureHeaderView featureViews]
  -[AMSUIOnboardingMultiFeatureHeaderView setFeatureViews:]
  -[AMSUIOnboardingMultiFeatureHeaderView isPresentedInFormSheet]
  -[AMSUIOnboardingMultiFeatureHeaderView containerHeight]
  -[AMSUIOnboardingMultiFeatureHeaderView setContainerHeight:]
  -[AMSUIOnboardingMultiFeatureHeaderView setIsPresentedInFormSheet:]


AMSUITintedBackgroundButton : UIButton
  // instance methods
  -[AMSUITintedBackgroundButton setHighlighted:]
  -[AMSUITintedBackgroundButton tintColorDidChange]
  -[AMSUITintedBackgroundButton updateBackgroundColor]


AMSUIOnboardingFeature : NSObject
 @property  UIImage *image
 @property  NSString *titleText
 @property  NSString *descriptionText

  // instance methods
  -[AMSUIOnboardingFeature descriptionText]
  -[AMSUIOnboardingFeature image]
  -[AMSUIOnboardingFeature .cxx_destruct]
  -[AMSUIOnboardingFeature titleText]
  -[AMSUIOnboardingFeature initWithImage:titleText:descriptionText:]


AMSUIOnboardingViewController : UIViewController <UIScrollViewDelegate>
 @property  OBWelcomeController *welcomeController
 @property  UIImage *image
 @property  NSString *titleText
 @property  NSString *descriptionText
 @property  NSString *primaryButtonText
 @property  OBPrivacyLinkController *privacyLinkController
 @property  BOOL isPresentedInFormSheet
 @property  UITraitCollection *cappedTraitCollection
 @property  NSObject<OS_dispatch_queue> *metricsQueue
 @property  BOOL viewHasAppeared
 @property  UIImage *headerImage
 @property  UIImage *rightImage
 @property  @? primaryButtonCallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIOnboardingViewController privacyLinkIdentifiersFromController:]

  // instance methods
  -[AMSUIOnboardingViewController setMetricsQueue:]
  -[AMSUIOnboardingViewController descriptionText]
  -[AMSUIOnboardingViewController setPrivacyLinkController:]
  -[AMSUIOnboardingViewController preferredContentSize]
  -[AMSUIOnboardingViewController metricsQueue]
  -[AMSUIOnboardingViewController privacyLinkController]
  -[AMSUIOnboardingViewController image]
  -[AMSUIOnboardingViewController .cxx_destruct]
  -[AMSUIOnboardingViewController viewDidLoad]
  -[AMSUIOnboardingViewController viewDidAppear:]
  -[AMSUIOnboardingViewController titleText]
  -[AMSUIOnboardingViewController headerImage]
  -[AMSUIOnboardingViewController keyCommands]
  -[AMSUIOnboardingViewController viewWillAppear:]
  -[AMSUIOnboardingViewController setImage:]
  -[AMSUIOnboardingViewController setTitleText:]
  -[AMSUIOnboardingViewController setDescriptionText:]
  -[AMSUIOnboardingViewController supportedInterfaceOrientations]
  -[AMSUIOnboardingViewController setViewHasAppeared:]
  -[AMSUIOnboardingViewController viewHasAppeared]
  -[AMSUIOnboardingViewController isPresentedInFormSheet]
  -[AMSUIOnboardingViewController commonSetupWithPrimaryButtonText:privacyLinkBundleIdentifiers:]
  -[AMSUIOnboardingViewController initWithHeaderImage:titleText:features:primaryButtonText:privacyLinkBundleIdentifier:]
  -[AMSUIOnboardingViewController welcomeController]
  -[AMSUIOnboardingViewController didTapPrimaryButton:]
  -[AMSUIOnboardingViewController cappedTraitCollection]
  -[AMSUIOnboardingViewController childTraitCollectionForViewController:]
  -[AMSUIOnboardingViewController primaryButtonText]
  -[AMSUIOnboardingViewController primaryButtonCallback]
  -[AMSUIOnboardingViewController initWithHeaderImage:titleText:descriptionText:primaryButtonText:privacyLinkController:]
  -[AMSUIOnboardingViewController initWithTitleText:features:primaryButtonText:privacyLinkController:]
  -[AMSUIOnboardingViewController initWithHeaderImage:titleText:descriptionText:primaryButtonText:privacyLinkBundleIdentifier:]
  -[AMSUIOnboardingViewController initWithTitleText:features:primaryButtonText:privacyLinkBundleIdentifier:]
  -[AMSUIOnboardingViewController commonInitWithPrimaryButtonText:privacyLinkController:]
  -[AMSUIOnboardingViewController updateOverrideTraits]
  -[AMSUIOnboardingViewController rightImage]
  -[AMSUIOnboardingViewController setRightImage:]
  -[AMSUIOnboardingViewController setPrimaryButtonText:]
  -[AMSUIOnboardingViewController setPrimaryButtonCallback:]
  -[AMSUIOnboardingViewController setWelcomeController:]


AMSUIPasswordSettingsFreeDownloadsCell : UITableViewCell
 @property  <AMSUIPasswordSettingsFreeDownloadsCellDelegate> *delegate
 @property  UISwitch *toggle

  // instance methods
  -[AMSUIPasswordSettingsFreeDownloadsCell _setup]
  -[AMSUIPasswordSettingsFreeDownloadsCell toggle]
  -[AMSUIPasswordSettingsFreeDownloadsCell selectionStyle]
  -[AMSUIPasswordSettingsFreeDownloadsCell .cxx_destruct]
  -[AMSUIPasswordSettingsFreeDownloadsCell setDelegate:]
  -[AMSUIPasswordSettingsFreeDownloadsCell delegate]
  -[AMSUIPasswordSettingsFreeDownloadsCell initWithStyle:reuseIdentifier:]
  -[AMSUIPasswordSettingsFreeDownloadsCell setToggle:]
  -[AMSUIPasswordSettingsFreeDownloadsCell _toggleChanged:]


AMSUIPasswordSettingsPurchasesCell : UITableViewCell
  // instance methods
  -[AMSUIPasswordSettingsPurchasesCell setSelected:animated:]
  -[AMSUIPasswordSettingsPurchasesCell layoutSubviews]
  -[AMSUIPasswordSettingsPurchasesCell initWithStyle:reuseIdentifier:]


AMSUIPasswordSettingsViewController : UIViewController <UITableViewDataSource, UITableViewDelegate, AMSUIPasswordSettingsFreeDownloadsCellDelegate, AMSURLProtocolDelegate, NSURLSessionDelegate>
 @property  UITableView *tableView
 @property  unsigned long freeSetting
 @property  unsigned long paidSetting
 @property  NSBundle *bundle
 @property  ACAccount *account
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIPasswordSettingsViewController setTableView:]
  -[AMSUIPasswordSettingsViewController AMSURLSession:task:handleDialogRequest:completion:]
  -[AMSUIPasswordSettingsViewController bundle]
  -[AMSUIPasswordSettingsViewController AMSURLSession:task:handleAuthenticateRequest:completion:]
  -[AMSUIPasswordSettingsViewController setBundle:]
  -[AMSUIPasswordSettingsViewController account]
  -[AMSUIPasswordSettingsViewController numberOfSectionsInTableView:]
  -[AMSUIPasswordSettingsViewController tableView:numberOfRowsInSection:]
  -[AMSUIPasswordSettingsViewController tableView:titleForHeaderInSection:]
  -[AMSUIPasswordSettingsViewController .cxx_destruct]
  -[AMSUIPasswordSettingsViewController tableView:willSelectRowAtIndexPath:]
  -[AMSUIPasswordSettingsViewController tableView:didSelectRowAtIndexPath:]
  -[AMSUIPasswordSettingsViewController viewDidLoad]
  -[AMSUIPasswordSettingsViewController tableView:cellForRowAtIndexPath:]
  -[AMSUIPasswordSettingsViewController initWithAccount:]
  -[AMSUIPasswordSettingsViewController handleAuthenticateRequest:completion:]
  -[AMSUIPasswordSettingsViewController handleDialogRequest:completion:]
  -[AMSUIPasswordSettingsViewController tableView]
  -[AMSUIPasswordSettingsViewController freeSetting]
  -[AMSUIPasswordSettingsViewController paidSetting]
  -[AMSUIPasswordSettingsViewController donePressed:]
  -[AMSUIPasswordSettingsViewController freeDownloadsToggle:changedValue:]
  -[AMSUIPasswordSettingsViewController setPaidSetting:]
  -[AMSUIPasswordSettingsViewController setFreeSetting:]


AMSUIPaymentSessionTask : AMSTask

AMSUIPaymentSetupTask : AMSTask <AMSUIPaymentSetupViewControllerDelegate>
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  long long paymentSetupFeatureState
 @property  AMSBinaryPromise *resultPromise
 @property  AMSBinaryPromise *setupControllerPromise
 @property  NSString *referrerIdentifier
 @property  UIViewController *viewController

  // instance methods
  -[AMSUIPaymentSetupTask present]
  -[AMSUIPaymentSetupTask viewController]
  -[AMSUIPaymentSetupTask .cxx_destruct]
  -[AMSUIPaymentSetupTask _didSucceed]
  -[AMSUIPaymentSetupTask referrerIdentifier]
  -[AMSUIPaymentSetupTask setReferrerIdentifier:]
  -[AMSUIPaymentSetupTask dispatchQueue]
  -[AMSUIPaymentSetupTask setViewController:]
  -[AMSUIPaymentSetupTask _fetchPaymentSetupFeature]
  -[AMSUIPaymentSetupTask resultPromise]
  -[AMSUIPaymentSetupTask setPaymentSetupFeatureState:]
  -[AMSUIPaymentSetupTask _presentPaymentSetupControllerWithPaymentSetupFeatures:]
  -[AMSUIPaymentSetupTask setupControllerPromise]
  -[AMSUIPaymentSetupTask paymentSetupFeatureState]
  -[AMSUIPaymentSetupTask paymentSetupViewControllerDidDismiss]
  -[AMSUIPaymentSetupTask initWithReferrerIdentifier:presentingViewController:]
  -[AMSUIPaymentSetupTask setResultPromise:]
  -[AMSUIPaymentSetupTask setSetupControllerPromise:]


AMSUIWebApplicationLookupAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSString *bundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebApplicationLookupAction bundleIdentifier]
  -[AMSUIWebApplicationLookupAction .cxx_destruct]
  -[AMSUIWebApplicationLookupAction setBundleIdentifier:]
  -[AMSUIWebApplicationLookupAction initWithJSObject:context:]
  -[AMSUIWebApplicationLookupAction runAction]


AMSUIPaymentSetupViewController : UIViewController
 @property  UIViewController *childViewController
 @property  <AMSUIPaymentSetupViewControllerDelegate> *delegate
 @property  PKPaymentSetupRequest *paymentSetupRequest

  // instance methods
  -[AMSUIPaymentSetupViewController _setup]
  -[AMSUIPaymentSetupViewController .cxx_destruct]
  -[AMSUIPaymentSetupViewController setDelegate:]
  -[AMSUIPaymentSetupViewController viewDidAppear:]
  -[AMSUIPaymentSetupViewController dismissViewControllerAnimated:completion:]
  -[AMSUIPaymentSetupViewController childViewController]
  -[AMSUIPaymentSetupViewController delegate]
  -[AMSUIPaymentSetupViewController loadView]
  -[AMSUIPaymentSetupViewController initWithPaymentSetupRequest:]
  -[AMSUIPaymentSetupViewController setChildViewController:]
  -[AMSUIPaymentSetupViewController paymentSetupRequest]


AMSUIPaymentVerificationMetrics : NSObject
 @property  NSString *appID
 @property  <AMSBagProtocol> *bag
 @property  NSString *displayReason

  // class methods
  +[AMSUIPaymentVerificationMetrics _event]
  +[AMSUIPaymentVerificationMetrics _metricsInstanceWithBag:]

  // instance methods
  -[AMSUIPaymentVerificationMetrics flushEvents]
  -[AMSUIPaymentVerificationMetrics setAppID:]
  -[AMSUIPaymentVerificationMetrics appID]
  -[AMSUIPaymentVerificationMetrics .cxx_destruct]
  -[AMSUIPaymentVerificationMetrics bag]
  -[AMSUIPaymentVerificationMetrics setBag:]
  -[AMSUIPaymentVerificationMetrics setDisplayReason:]
  -[AMSUIPaymentVerificationMetrics enqueueEventWithPageId:displayReason:]
  -[AMSUIPaymentVerificationMetrics enqueueEventWithTargetId:pageId:displayReason:]
  -[AMSUIPaymentVerificationMetrics _propertiesWithPageId:displayReason:]
  -[AMSUIPaymentVerificationMetrics _propertiesWithTargetId:pageId:displayReason:]
  -[AMSUIPaymentVerificationMetrics initWithBag:appID:]
  -[AMSUIPaymentVerificationMetrics displayReason]


AMSUIPaymentVerificationProtocolHandler : AMSURLProtocolHandler <NSURLSessionDelegate, AMSURLProtocolDelegate>
 @property  ACAccount *account
 @property  NSMutableDictionary *accountParameters
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIPaymentVerificationProtocolHandler _headersFromAccount:]
  +[AMSUIPaymentVerificationProtocolHandler _setHeaders:on:]
  +[AMSUIPaymentVerificationProtocolHandler _headersFromAccountParameters:]
  +[AMSUIPaymentVerificationProtocolHandler requestAddingHeaders:to:]
  +[AMSUIPaymentVerificationProtocolHandler headersFromAccount:accountParameters:]

  // instance methods
  -[AMSUIPaymentVerificationProtocolHandler AMSURLSession:task:handleAuthenticateRequest:completion:]
  -[AMSUIPaymentVerificationProtocolHandler setAccount:]
  -[AMSUIPaymentVerificationProtocolHandler account]
  -[AMSUIPaymentVerificationProtocolHandler .cxx_destruct]
  -[AMSUIPaymentVerificationProtocolHandler accountParameters]
  -[AMSUIPaymentVerificationProtocolHandler setAccountParameters:]
  -[AMSUIPaymentVerificationProtocolHandler reconfigureNewRequest:originalTask:redirect:error:]
  -[AMSUIPaymentVerificationProtocolHandler initWithAccount:accountParameters:]


WrappedAMSUIWebViewController : AMSUIWebViewController
 @property  @? dismissBlock

  // instance methods
  -[WrappedAMSUIWebViewController .cxx_destruct]
  -[WrappedAMSUIWebViewController viewDidDisappear:]
  -[WrappedAMSUIWebViewController setDismissBlock:]
  -[WrappedAMSUIWebViewController dismissBlock]


AMSUIPaymentVerificationTokenFetchTask : AMSTask <AMSBagConsumer, AMSUIWebDelegate>
 @property  AMSUIPaymentVerificationMetrics *metrics
 @property  AMSPromise *resultPromise
 @property  WrappedAMSUIWebViewController *webVC
 @property  ACAccount *account
 @property  NSDictionary *accountParameters
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSString *displayName
 @property  unsigned long mode
 @property  NSDictionary *userInfo
 @property  UIViewController *viewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIPaymentVerificationTokenFetchTask bagKeySet]
  +[AMSUIPaymentVerificationTokenFetchTask bagSubProfileVersion]
  +[AMSUIPaymentVerificationTokenFetchTask bagSubProfile]
  +[AMSUIPaymentVerificationTokenFetchTask createBagForSubProfile]
  +[AMSUIPaymentVerificationTokenFetchTask _promiseToTryNextFlowWithResult:error:continuationBlock:]
  +[AMSUIPaymentVerificationTokenFetchTask performApplePayTask:]
  +[AMSUIPaymentVerificationTokenFetchTask performCardOnFileTask:]
  +[AMSUIPaymentVerificationTokenFetchTask accountForNetworkingFromAccount:accountParameters:accountStore:]
  +[AMSUIPaymentVerificationTokenFetchTask _contextCombining:with:]
  +[AMSUIPaymentVerificationTokenFetchTask _tokenFromDictionary:]

  // instance methods
  -[AMSUIPaymentVerificationTokenFetchTask webViewController:handleAuthenticateRequest:completion:]
  -[AMSUIPaymentVerificationTokenFetchTask displayName]
  -[AMSUIPaymentVerificationTokenFetchTask viewController]
  -[AMSUIPaymentVerificationTokenFetchTask setUserInfo:]
  -[AMSUIPaymentVerificationTokenFetchTask account]
  -[AMSUIPaymentVerificationTokenFetchTask setClientInfo:]
  -[AMSUIPaymentVerificationTokenFetchTask webVC]
  -[AMSUIPaymentVerificationTokenFetchTask .cxx_destruct]
  -[AMSUIPaymentVerificationTokenFetchTask performTask]
  -[AMSUIPaymentVerificationTokenFetchTask bag]
  -[AMSUIPaymentVerificationTokenFetchTask clientInfo]
  -[AMSUIPaymentVerificationTokenFetchTask accountParameters]
  -[AMSUIPaymentVerificationTokenFetchTask setMetrics:]
  -[AMSUIPaymentVerificationTokenFetchTask webViewController:handleDelegateAction:completion:]
  -[AMSUIPaymentVerificationTokenFetchTask metrics]
  -[AMSUIPaymentVerificationTokenFetchTask userInfo]
  -[AMSUIPaymentVerificationTokenFetchTask mode]
  -[AMSUIPaymentVerificationTokenFetchTask webViewController:didEncodeNetworkRequest:]
  -[AMSUIPaymentVerificationTokenFetchTask resultPromise]
  -[AMSUIPaymentVerificationTokenFetchTask setResultPromise:]
  -[AMSUIPaymentVerificationTokenFetchTask performCardOnFileTaskWithFeatureFlag:]
  -[AMSUIPaymentVerificationTokenFetchTask performWebFlowTask]
  -[AMSUIPaymentVerificationTokenFetchTask setWebVC:]
  -[AMSUIPaymentVerificationTokenFetchTask _finishPromiseWithResult:error:]
  -[AMSUIPaymentVerificationTokenFetchTask setHeader:withValueIn:forKey:onRequest:]
  -[AMSUIPaymentVerificationTokenFetchTask initWithMode:account:viewController:bag:displayName:]
  -[AMSUIPaymentVerificationTokenFetchTask initWithMode:accountParameters:viewController:bag:displayName:]
  -[AMSUIPaymentVerificationTokenFetchTask performApplePayTaskWithFeatureFlag:]


AMSUIPopoverShapeLayerMaskView : UIView
 @property  BOOL disablePathAnimation

  // class methods
  +[AMSUIPopoverShapeLayerMaskView layerClass]

  // instance methods
  -[AMSUIPopoverShapeLayerMaskView disablePathAnimation]
  -[AMSUIPopoverShapeLayerMaskView setDisablePathAnimation:]


AMSUIPopoverShapeLayerView : UIView
 @property  BOOL shapeLayerPathNeedsUpdate
 @property  BOOL popoverBackgroundColorIsOpaque
 @property  BOOL arrowVisible
 @property  BOOL arrowOffsetWasFlipped
 @property  BOOL arrowDirectionWasFlipped
 @property  AMSUIPopoverShapeLayerMaskView *shapeLayerMaskView
 @property  unsigned long arrowDirection
 @property  double arrowHeight
 @property  double arrowOffset
 @property  UIView *viewToMaskWhenContentExtendsOverArrow

  // class methods
  +[AMSUIPopoverShapeLayerView arrowBase]
  +[AMSUIPopoverShapeLayerView cornerRadius]

  // instance methods
  -[AMSUIPopoverShapeLayerView .cxx_destruct]
  -[AMSUIPopoverShapeLayerView layoutSubviews]
  -[AMSUIPopoverShapeLayerView _shadowPath]
  -[AMSUIPopoverShapeLayerView setNeedsLayout]
  -[AMSUIPopoverShapeLayerView arrowOffset]
  -[AMSUIPopoverShapeLayerView _shadowRadius]
  -[AMSUIPopoverShapeLayerView arrowHeight]
  -[AMSUIPopoverShapeLayerView _shadowOffset]
  -[AMSUIPopoverShapeLayerView setArrowDirection:]
  -[AMSUIPopoverShapeLayerView initWithFrame:]
  -[AMSUIPopoverShapeLayerView _shadowOpacity]
  -[AMSUIPopoverShapeLayerView _updateShapeLayerPath]
  -[AMSUIPopoverShapeLayerView _updateShapeLayerPathIfNeeded]
  -[AMSUIPopoverShapeLayerView wouldPinForOffset:]
  -[AMSUIPopoverShapeLayerView _upAndDownStartingXLocationForBounds:]
  -[AMSUIPopoverShapeLayerView _leftAndRightStartYLocationForBounds:]
  -[AMSUIPopoverShapeLayerView _loadNecessaryViews]
  -[AMSUIPopoverShapeLayerView _shadowInsets]
  -[AMSUIPopoverShapeLayerView viewToMaskWhenContentExtendsOverArrow]
  -[AMSUIPopoverShapeLayerView minNonPinnedOffset]
  -[AMSUIPopoverShapeLayerView maxNonPinnedOffset]
  -[AMSUIPopoverShapeLayerView didMoveToWindow]
  -[AMSUIPopoverShapeLayerView setArrowOffset:]
  -[AMSUIPopoverShapeLayerView arrowDirection]
  -[AMSUIPopoverShapeLayerView setViewToMaskWhenContentExtendsOverArrow:]
  -[AMSUIPopoverShapeLayerView _updatePathAnimationState]
  -[AMSUIPopoverShapeLayerView _addLeadingPinnedCurveToPath:bounds:startPoint:]
  -[AMSUIPopoverShapeLayerView _addLeadingPinnedCurveToPath:bounds:startPoint:endPoint:]
  -[AMSUIPopoverShapeLayerView _addRoundedRectExcludingTopLeftCornerForPath:bounds:]
  -[AMSUIPopoverShapeLayerView _addTopBottomRoundedRectWithGapForPath:bounds:]
  -[AMSUIPopoverShapeLayerView _addTopBottomArrowCurveForPath:bounds:startPoint:endPoint:peakPoint:isPinned:]
  -[AMSUIPopoverShapeLayerView _addLeftRightRoundedRectWithGapForPath:bounds:]
  -[AMSUIPopoverShapeLayerView _addLeftRightArrowCurveForPath:bounds:startPoint:endPoint:peakPoint:isPinned:]
  -[AMSUIPopoverShapeLayerView shapeLayerPathNeedsUpdate]
  -[AMSUIPopoverShapeLayerView setShapeLayerPathNeedsUpdate:]
  -[AMSUIPopoverShapeLayerView popoverBackgroundColorIsOpaque]
  -[AMSUIPopoverShapeLayerView setPopoverBackgroundColorIsOpaque:]
  -[AMSUIPopoverShapeLayerView arrowVisible]
  -[AMSUIPopoverShapeLayerView setArrowVisible:]
  -[AMSUIPopoverShapeLayerView arrowOffsetWasFlipped]
  -[AMSUIPopoverShapeLayerView setArrowOffsetWasFlipped:]
  -[AMSUIPopoverShapeLayerView arrowDirectionWasFlipped]
  -[AMSUIPopoverShapeLayerView setArrowDirectionWasFlipped:]
  -[AMSUIPopoverShapeLayerView shapeLayerMaskView]
  -[AMSUIPopoverShapeLayerView setShapeLayerMaskView:]


AMSUIPrivacyAnimatedTransitioning : NSObject <UIViewControllerAnimatedTransitioning>
 @property  BOOL presentation
 @property  UIViewController *viewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIPrivacyAnimatedTransitioning viewController]
  -[AMSUIPrivacyAnimatedTransitioning transitionDuration:]
  -[AMSUIPrivacyAnimatedTransitioning .cxx_destruct]
  -[AMSUIPrivacyAnimatedTransitioning setPresentation:]
  -[AMSUIPrivacyAnimatedTransitioning _animateTransition:completionBlock:]
  -[AMSUIPrivacyAnimatedTransitioning animateTransition:]
  -[AMSUIPrivacyAnimatedTransitioning isPresentation]
  -[AMSUIPrivacyAnimatedTransitioning setViewController:]
  -[AMSUIPrivacyAnimatedTransitioning _presentedViewControllerForContext:]


AMSUIPrivacyPresentationController : UIPresentationController <UIAdaptivePresentationControllerDelegate>
 @property  UIView *dimmingView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIPrivacyPresentationController dimmingView]
  -[AMSUIPrivacyPresentationController containerViewDidLayoutSubviews]
  -[AMSUIPrivacyPresentationController setDimmingView:]
  -[AMSUIPrivacyPresentationController presentationController:viewControllerForAdaptivePresentationStyle:]
  -[AMSUIPrivacyPresentationController .cxx_destruct]
  -[AMSUIPrivacyPresentationController _frameForTransitionViewInPresentationSuperview:]
  -[AMSUIPrivacyPresentationController initWithPresentedViewController:presentingViewController:]
  -[AMSUIPrivacyPresentationController containerViewWillLayoutSubviews]
  -[AMSUIPrivacyPresentationController _prepareDimmingViewIfNecessary]
  -[AMSUIPrivacyPresentationController adaptivePresentationStyleForPresentationController:]
  -[AMSUIPrivacyPresentationController presentationTransitionWillBegin]
  -[AMSUIPrivacyPresentationController shouldRemovePresentersView]
  -[AMSUIPrivacyPresentationController adaptivePresentationStyle]


AMSUIPrivacyViewController : UIAlertController
  // class methods
  +[AMSUIPrivacyViewController privacyControllerWithIdentifier:acknowledgementHandler:]


AMSUIPrivacyIconViewController : UIViewController
 @property  UIImageView *imageView

  // instance methods
  -[AMSUIPrivacyIconViewController preferredContentSize]
  -[AMSUIPrivacyIconViewController imageView]
  -[AMSUIPrivacyIconViewController viewWillLayoutSubviews]
  -[AMSUIPrivacyIconViewController initWithImage:]
  -[AMSUIPrivacyIconViewController .cxx_destruct]
  -[AMSUIPrivacyIconViewController viewDidLoad]
  -[AMSUIPrivacyIconViewController setImageView:]


AMSUISlideAnimator : NSObject <UIViewControllerAnimatedTransitioning>
 @property  CASpringAnimation *animation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUISlideAnimator animation]
  -[AMSUISlideAnimator transitionDuration:]
  -[AMSUISlideAnimator .cxx_destruct]
  -[AMSUISlideAnimator animateTransition:]
  -[AMSUISlideAnimator setAnimation:]


AMSUISpecifierWithSubtitleCell : PSTableCell
  // class methods
  +[AMSUISpecifierWithSubtitleCell cellStyle]

  // instance methods
  -[AMSUISpecifierWithSubtitleCell refreshCellContentsWithSpecifier:]


AMSUISubscriptionsViewController : UIViewController <AMSBagConsumer>
 @property  AMSUIWebViewController *webViewController
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSDictionary *metricsOverlay
 @property  NSString *subscriptionType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUISubscriptionsViewController bagKeySet]
  +[AMSUISubscriptionsViewController bagSubProfileVersion]
  +[AMSUISubscriptionsViewController bagSubProfile]
  +[AMSUISubscriptionsViewController createBagForSubProfile]

  // instance methods
  -[AMSUISubscriptionsViewController _setup]
  -[AMSUISubscriptionsViewController subscriptionType]
  -[AMSUISubscriptionsViewController setAccount:]
  -[AMSUISubscriptionsViewController viewWillLayoutSubviews]
  -[AMSUISubscriptionsViewController account]
  -[AMSUISubscriptionsViewController setClientInfo:]
  -[AMSUISubscriptionsViewController setSubscriptionType:]
  -[AMSUISubscriptionsViewController .cxx_destruct]
  -[AMSUISubscriptionsViewController bag]
  -[AMSUISubscriptionsViewController viewDidLoad]
  -[AMSUISubscriptionsViewController clientInfo]
  -[AMSUISubscriptionsViewController initWithAccount:bag:]
  -[AMSUISubscriptionsViewController _startLoading]
  -[AMSUISubscriptionsViewController metricsOverlay]
  -[AMSUISubscriptionsViewController setMetricsOverlay:]
  -[AMSUISubscriptionsViewController _setupLayout]
  -[AMSUISubscriptionsViewController viewWillAppear:]
  -[AMSUISubscriptionsViewController setBag:]
  -[AMSUISubscriptionsViewController _setChildViewController:]
  -[AMSUISubscriptionsViewController _setupChildViewController]
  -[AMSUISubscriptionsViewController webViewController]
  -[AMSUISubscriptionsViewController initWithAccount:bag:clientInfo:]


AMSUISystemImageFetchOperation : AMSUIAssetFetchOperation
 @property  NSString *imageName
 @property  UITraitCollection *traitCollection

  // instance methods
  -[AMSUISystemImageFetchOperation setTraitCollection:]
  -[AMSUISystemImageFetchOperation main]
  -[AMSUISystemImageFetchOperation .cxx_destruct]
  -[AMSUISystemImageFetchOperation traitCollection]
  -[AMSUISystemImageFetchOperation imageName]
  -[AMSUISystemImageFetchOperation setImageName:]
  -[AMSUISystemImageFetchOperation isLowLatency]
  -[AMSUISystemImageFetchOperation initWithSystemImageName:compatibleWithTraitCollection:]


AMSUIToastAppearance : AMSUIAppearance <NSCopying>
 @property  UIColor *accessoryButtonColor
 @property  UIFont *accessoryButtonFont
 @property  UIColor *backgroundColor
 @property  UIImage *backgroundImage
 @property  UIImageSymbolConfiguration *imageSymbolConfiguration
 @property  UIColor *imageTintColor
 @property  UIFont *messageFont
 @property  UIColor *messageTextColor
 @property  UIFont *titleFont
 @property  UIColor *titleTextColor

  // instance methods
  -[AMSUIToastAppearance setImageTintColor:]
  -[AMSUIToastAppearance setTitleFont:]
  -[AMSUIToastAppearance backgroundImage]
  -[AMSUIToastAppearance imageTintColor]
  -[AMSUIToastAppearance setBackgroundImage:]
  -[AMSUIToastAppearance backgroundColor]
  -[AMSUIToastAppearance .cxx_destruct]
  -[AMSUIToastAppearance imageSymbolConfiguration]
  -[AMSUIToastAppearance titleFont]
  -[AMSUIToastAppearance init]
  -[AMSUIToastAppearance setImageSymbolConfiguration:]
  -[AMSUIToastAppearance setBackgroundColor:]
  -[AMSUIToastAppearance titleTextColor]
  -[AMSUIToastAppearance initWithDictionary:]
  -[AMSUIToastAppearance setTitleTextColor:]
  -[AMSUIToastAppearance setAccessoryButtonColor:]
  -[AMSUIToastAppearance setMessageTextColor:]
  -[AMSUIToastAppearance setMessageFont:]
  -[AMSUIToastAppearance setAccessoryButtonFont:]
  -[AMSUIToastAppearance accessoryButtonFont]
  -[AMSUIToastAppearance accessoryButtonColor]
  -[AMSUIToastAppearance messageFont]
  -[AMSUIToastAppearance messageTextColor]


AMSUIToastPresentationController : UIPresentationController <_UIHyperInteractorDelegate>
 @property  _UIHyperInteractor *interactor
 @property  _UIHyperrectangle *interactiveRegion
 @property  NSTimer *dismissalTimer
 @property  UIPanGestureRecognizer *panRecognizer
 @property  BOOL showing
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} lastFrameOfPresentedViewInContainerView
 @property  AMSUITouchForwardingView *touchForwardingView
 @property  double dismissDelayTimeInterval
 @property  NSArray *passthroughViews
 @property  UITabBarController *relativeTabBarController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIToastPresentationController interactor]
  -[AMSUIToastPresentationController presentationStyle]
  -[AMSUIToastPresentationController isShowing]
  -[AMSUIToastPresentationController .cxx_destruct]
  -[AMSUIToastPresentationController dismissalTransitionWillBegin]
  -[AMSUIToastPresentationController frameOfPresentedViewInContainerView]
  -[AMSUIToastPresentationController _yOffset]
  -[AMSUIToastPresentationController setPassthroughViews:]
  -[AMSUIToastPresentationController _setupPanGestureRecognizer]
  -[AMSUIToastPresentationController initWithPresentedViewController:presentingViewController:]
  -[AMSUIToastPresentationController containerViewWillLayoutSubviews]
  -[AMSUIToastPresentationController passthroughViews]
  -[AMSUIToastPresentationController _hyperInteractorApplyPresentationPoint:]
  -[AMSUIToastPresentationController presentationTransitionWillBegin]
  -[AMSUIToastPresentationController shouldPresentInFullscreen]
  -[AMSUIToastPresentationController setShowing:]
  -[AMSUIToastPresentationController _startDismissTimer]
  -[AMSUIToastPresentationController presentationTransitionDidEnd:]
  -[AMSUIToastPresentationController _bottomMargin]
  -[AMSUIToastPresentationController setLastFrameOfPresentedViewInContainerView:]
  -[AMSUIToastPresentationController dismissalTimer]
  -[AMSUIToastPresentationController setDismissalTimer:]
  -[AMSUIToastPresentationController lastFrameOfPresentedViewInContainerView]
  -[AMSUIToastPresentationController interactiveRegion]
  -[AMSUIToastPresentationController _setupPassthroughView]
  -[AMSUIToastPresentationController touchForwardingView]
  -[AMSUIToastPresentationController dismissDelayTimeInterval]
  -[AMSUIToastPresentationController _dismissTimerFired:]
  -[AMSUIToastPresentationController _didPanPresentedView:]
  -[AMSUIToastPresentationController setPanRecognizer:]
  -[AMSUIToastPresentationController panRecognizer]
  -[AMSUIToastPresentationController _dismissToast]
  -[AMSUIToastPresentationController relativeTabBarController]
  -[AMSUIToastPresentationController setDismissDelayTimeInterval:]
  -[AMSUIToastPresentationController setRelativeTabBarController:]
  -[AMSUIToastPresentationController setTouchForwardingView:]


AMSUIToastTransitioningDelegate : NSObject <UIViewControllerTransitioningDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIToastTransitioningDelegate animationControllerForPresentedController:presentingController:sourceController:]
  -[AMSUIToastTransitioningDelegate animationControllerForDismissedController:]
  -[AMSUIToastTransitioningDelegate _animator]
  -[AMSUIToastTransitioningDelegate presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]


AMSUIToastViewController : UIViewController <AMSUIMessageViewController>
 @property  BOOL didEnqueueMetrics
 @property  BOOL isLoadingImage
 @property  UIImage *loadedImage
 @property  AMSDialogRequest *request
 @property  AMSUIToastAppearance *requestAppearance
 @property  AMSUIToastTransitioningDelegate *transitionDelegate
 @property  <AMSUIMessageViewControllerDelegate> *delegate
 @property  AMSBinaryPromise *loadPromise
 @property  AMSUIToastAppearance *preferredAppearance
 @property  BOOL shouldAutomaticallyReportMetrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIToastViewController setRequest:]
  -[AMSUIToastViewController initWithRequest:]
  -[AMSUIToastViewController .cxx_destruct]
  -[AMSUIToastViewController viewDidLoad]
  -[AMSUIToastViewController setDelegate:]
  -[AMSUIToastViewController transitionDelegate]
  -[AMSUIToastViewController setTransitionDelegate:]
  -[AMSUIToastViewController viewDidAppear:]
  -[AMSUIToastViewController request]
  -[AMSUIToastViewController delegate]
  -[AMSUIToastViewController loadView]
  -[AMSUIToastViewController setPreferredAppearance:]
  -[AMSUIToastViewController enqueueImpressionMetrics]
  -[AMSUIToastViewController loadPromise]
  -[AMSUIToastViewController setLoadPromise:]
  -[AMSUIToastViewController shouldAutomaticallyReportMetrics]
  -[AMSUIToastViewController setShouldAutomaticallyReportMetrics:]
  -[AMSUIToastViewController messageView]
  -[AMSUIToastViewController _preloadImageIfNeeded]
  -[AMSUIToastViewController isLoadingImage]
  -[AMSUIToastViewController _setDialogRequest:]
  -[AMSUIToastViewController _commitAppearance]
  -[AMSUIToastViewController _updateTextWithAttributes]
  -[AMSUIToastViewController loadedImage]
  -[AMSUIToastViewController requestAppearance]
  -[AMSUIToastViewController _didTapActionButton:]
  -[AMSUIToastViewController setIsLoadingImage:]
  -[AMSUIToastViewController setLoadedImage:]
  -[AMSUIToastViewController _setImageWithURL:]
  -[AMSUIToastViewController _titleLabelAttributes]
  -[AMSUIToastViewController _messageLabelAttributes]
  -[AMSUIToastViewController preferredAppearance]
  -[AMSUIToastViewController didEnqueueMetrics]
  -[AMSUIToastViewController setDidEnqueueMetrics:]
  -[AMSUIToastViewController setRequestAppearance:]


AMSUITouchForwardingView : UIView
 @property  NSArray *passthroughViews

  // instance methods
  -[AMSUITouchForwardingView hitTest:withEvent:]
  -[AMSUITouchForwardingView .cxx_destruct]
  -[AMSUITouchForwardingView setPassthroughViews:]
  -[AMSUITouchForwardingView passthroughViews]


AMSUIUpdateMultiUserTokenTask : AMSTask
 @property  ACAccount *account
 @property  NSUUID *homeIdentifier
 @property  UIViewController *viewController

  // class methods
  +[AMSUIUpdateMultiUserTokenTask _errorIsRecoverable:]

  // instance methods
  -[AMSUIUpdateMultiUserTokenTask viewController]
  -[AMSUIUpdateMultiUserTokenTask homeIdentifier]
  -[AMSUIUpdateMultiUserTokenTask account]
  -[AMSUIUpdateMultiUserTokenTask .cxx_destruct]
  -[AMSUIUpdateMultiUserTokenTask performTask]
  -[AMSUIUpdateMultiUserTokenTask initWithAccount:homeIdentifier:viewController:]


AMSUIUserNotificationContentViewController : UIViewController <UIGestureRecognizerDelegate>
 @property  NSString *audioSessionCategory
 @property  unsigned long audioSessionCategoryOptions
 @property  BOOL hasAppeared
 @property  BOOL hasPlayedVideo
 @property  UIImageView *imageView
 @property  AMSMetrics *metrics
 @property  UILabel *textLabel
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  AVPlayerViewController *videoPlayerController
 @property  <AMSUIUserNotificationContentDelegate> *delegate
 @property  {CGSize=dd} expectedContentSize
 @property  AMSUserNotification *userNotification
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIUserNotificationContentViewController titleLabel]
  -[AMSUIUserNotificationContentViewController imageView]
  -[AMSUIUserNotificationContentViewController viewWillLayoutSubviews]
  -[AMSUIUserNotificationContentViewController .cxx_destruct]
  -[AMSUIUserNotificationContentViewController hasAppeared]
  -[AMSUIUserNotificationContentViewController setDelegate:]
  -[AMSUIUserNotificationContentViewController setAudioSessionCategory:]
  -[AMSUIUserNotificationContentViewController setAudioSessionCategoryOptions:]
  -[AMSUIUserNotificationContentViewController userNotification]
  -[AMSUIUserNotificationContentViewController subtitleLabel]
  -[AMSUIUserNotificationContentViewController setPreferredContentSize:]
  -[AMSUIUserNotificationContentViewController audioSessionCategory]
  -[AMSUIUserNotificationContentViewController gestureRecognizer:shouldReceiveTouch:]
  -[AMSUIUserNotificationContentViewController viewWillAppear:]
  -[AMSUIUserNotificationContentViewController metrics]
  -[AMSUIUserNotificationContentViewController delegate]
  -[AMSUIUserNotificationContentViewController textLabel]
  -[AMSUIUserNotificationContentViewController loadView]
  -[AMSUIUserNotificationContentViewController observeValueForKeyPath:ofObject:change:context:]
  -[AMSUIUserNotificationContentViewController viewTapped:]
  -[AMSUIUserNotificationContentViewController setHasAppeared:]
  -[AMSUIUserNotificationContentViewController audioSessionCategoryOptions]
  -[AMSUIUserNotificationContentViewController expectedContentSize]
  -[AMSUIUserNotificationContentViewController videoPlayerController]
  -[AMSUIUserNotificationContentViewController hasPlayedVideo]
  -[AMSUIUserNotificationContentViewController setHasPlayedVideo:]
  -[AMSUIUserNotificationContentViewController initWithNotification:delegate:]
  -[AMSUIUserNotificationContentViewController mediaPause]


AMSUIUserNotificationViewController : UIViewController <AMSUIUserNotificationContentDelegate, UNNotificationContentExtension>
 @property  AMSUIUserNotificationContentViewController *contentViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long mediaPlayPauseButtonType
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} mediaPlayPauseButtonFrame
 @property  UIColor *mediaPlayPauseButtonTintColor

  // class methods
  +[AMSUIUserNotificationViewController userNotificationFromNotification:]

  // instance methods
  -[AMSUIUserNotificationViewController setContentViewController:]
  -[AMSUIUserNotificationViewController viewWillLayoutSubviews]
  -[AMSUIUserNotificationViewController .cxx_destruct]
  -[AMSUIUserNotificationViewController didReceiveNotification:]
  -[AMSUIUserNotificationViewController contentViewController]
  -[AMSUIUserNotificationViewController viewWillDisappear:]
  -[AMSUIUserNotificationViewController viewController:didUpdatePreferredContentSize:]
  -[AMSUIUserNotificationViewController openNotification]
  -[AMSUIUserNotificationViewController renderUserNotification:]
  -[AMSUIUserNotificationViewController didReceiveNotificationResponse:completionHandler:]


AMSUIWebAccountAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  ACAccount *account
 @property  NSDictionary *accountObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebAccountAction setAccount:]
  -[AMSUIWebAccountAction account]
  -[AMSUIWebAccountAction .cxx_destruct]
  -[AMSUIWebAccountAction initWithJSObject:context:]
  -[AMSUIWebAccountAction runAction]
  -[AMSUIWebAccountAction accountObject]
  -[AMSUIWebAccountAction setAccountObject:]


AMSUIWebActionMapper : NSObject
  // class methods
  +[AMSUIWebActionMapper actionFromJSObject:context:]


AMSUIWebAction : NSObject <AMSUIWebActionRunnable>
 @property  AMSMetricsEvent *actionEvent
 @property  NSArray *acceptedResponseVersions
 @property  AMSUIWebClientContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebAction .cxx_destruct]
  -[AMSUIWebAction initWithContext:]
  -[AMSUIWebAction setContext:]
  -[AMSUIWebAction context]
  -[AMSUIWebAction initWithJSObject:context:]
  -[AMSUIWebAction runAction]
  -[AMSUIWebAction actionEvent]
  -[AMSUIWebAction acceptedResponseVersions]
  -[AMSUIWebAction setAcceptedResponseVersions:]


AMSUIWebActivityIndicatorModel : NSObject <AMSUIWebModelInterface>
 @property  BOOL animate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebActivityIndicatorModel animate]
  -[AMSUIWebActivityIndicatorModel initWithJSObject:context:]
  -[AMSUIWebActivityIndicatorModel setAnimate:]


AMSUIWebAppearance : NSObject <NSCopying>
 @property  UIColor *backgroundColor

  // class methods
  +[AMSUIWebAppearance secondarySystemGroupedBackgroundColor]
  +[AMSUIWebAppearance systemBackgroundColor]
  +[AMSUIWebAppearance secondarySystemBackgroundColor]
  +[AMSUIWebAppearance tertiarySystemBackgroundColor]
  +[AMSUIWebAppearance systemGroupedBackgroundColor]
  +[AMSUIWebAppearance tertiarySystemGroupedBackgroundColor]
  +[AMSUIWebAppearance tableViewAppearance]
  +[AMSUIWebAppearance defaultAppearance]

  // instance methods
  -[AMSUIWebAppearance backgroundColor]
  -[AMSUIWebAppearance .cxx_destruct]
  -[AMSUIWebAppearance setBackgroundColor:]
  -[AMSUIWebAppearance copyWithZone:]
  -[AMSUIWebAppearance updateBackgroundColorWithJSString:]


AMSUIWebAppViewModel : NSObject <AMSUIWebModelInterface>
 @property  NSString *bundleIdentifier
 @property  NSURL *iconURL
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIWebAppViewModel validateJSObject:]

  // instance methods
  -[AMSUIWebAppViewModel iconURL]
  -[AMSUIWebAppViewModel bundleIdentifier]
  -[AMSUIWebAppViewModel setTitle:]
  -[AMSUIWebAppViewModel setIconURL:]
  -[AMSUIWebAppViewModel .cxx_destruct]
  -[AMSUIWebAppViewModel setBundleIdentifier:]
  -[AMSUIWebAppViewModel title]
  -[AMSUIWebAppViewModel initWithJSObject:context:]
  -[AMSUIWebAppViewModel iconWithSize:scale:]


AMSUIWebAuthenticateAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  BOOL pauseTimeouts
 @property  BOOL isAuthenticatingCloud
 @property  BOOL makeCurrentAccount
 @property  AMSAuthenticateRequest *request
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebAuthenticateAction setRequest:]
  -[AMSUIWebAuthenticateAction .cxx_destruct]
  -[AMSUIWebAuthenticateAction request]
  -[AMSUIWebAuthenticateAction initWithJSObject:context:]
  -[AMSUIWebAuthenticateAction runAction]
  -[AMSUIWebAuthenticateAction setIsAuthenticatingCloud:]
  -[AMSUIWebAuthenticateAction isAuthenticatingCloud]
  -[AMSUIWebAuthenticateAction pauseTimeouts]
  -[AMSUIWebAuthenticateAction _updateContextWithAccountIfNeeded:]
  -[AMSUIWebAuthenticateAction _responseForAccount:]
  -[AMSUIWebAuthenticateAction makeCurrentAccount]
  -[AMSUIWebAuthenticateAction setMakeCurrentAccount:]
  -[AMSUIWebAuthenticateAction setPauseTimeouts:]


AMSUIWebAuthorizeApplePayEnrollmentAction : AMSUIWebAction
 @property  NSNumber *confirmationStyle
 @property  NSString *passSerialNumber
 @property  NSString *passTypeIdentifier
 @property  NSDictionary *paymentSession

  // instance methods
  -[AMSUIWebAuthorizeApplePayEnrollmentAction .cxx_destruct]
  -[AMSUIWebAuthorizeApplePayEnrollmentAction setPassTypeIdentifier:]
  -[AMSUIWebAuthorizeApplePayEnrollmentAction paymentSession]
  -[AMSUIWebAuthorizeApplePayEnrollmentAction confirmationStyle]
  -[AMSUIWebAuthorizeApplePayEnrollmentAction setConfirmationStyle:]
  -[AMSUIWebAuthorizeApplePayEnrollmentAction passSerialNumber]
  -[AMSUIWebAuthorizeApplePayEnrollmentAction setPassSerialNumber:]
  -[AMSUIWebAuthorizeApplePayEnrollmentAction setPaymentSession:]
  -[AMSUIWebAuthorizeApplePayEnrollmentAction passTypeIdentifier]
  -[AMSUIWebAuthorizeApplePayEnrollmentAction initWithJSObject:context:]
  -[AMSUIWebAuthorizeApplePayEnrollmentAction runAction]


AMSUIWebBagKey : NSObject
 @property  NSString *key
 @property  unsigned long valueType

  // instance methods
  -[AMSUIWebBagKey setValueType:]
  -[AMSUIWebBagKey setKey:]
  -[AMSUIWebBagKey .cxx_destruct]
  -[AMSUIWebBagKey valueType]
  -[AMSUIWebBagKey key]


AMSUIWebBagAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  NSArray *requestedKeys
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebBagAction setProfile:]
  -[AMSUIWebBagAction .cxx_destruct]
  -[AMSUIWebBagAction profileVersion]
  -[AMSUIWebBagAction profile]
  -[AMSUIWebBagAction setProfileVersion:]
  -[AMSUIWebBagAction initWithJSObject:context:]
  -[AMSUIWebBagAction runAction]
  -[AMSUIWebBagAction requestedKeys]
  -[AMSUIWebBagAction _fetchValuesForKeys:bag:startingAtIndex:valuesArray:completion:]
  -[AMSUIWebBagAction setRequestedKeys:]


AMSUIWebBusinessChatAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSString *body
 @property  NSString *businessID
 @property  NSString *businessGroupID
 @property  NSString *intentID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebBusinessChatAction businessID]
  -[AMSUIWebBusinessChatAction body]
  -[AMSUIWebBusinessChatAction .cxx_destruct]
  -[AMSUIWebBusinessChatAction setBusinessID:]
  -[AMSUIWebBusinessChatAction setIntentID:]
  -[AMSUIWebBusinessChatAction setBody:]
  -[AMSUIWebBusinessChatAction intentID]
  -[AMSUIWebBusinessChatAction initWithJSObject:context:]
  -[AMSUIWebBusinessChatAction runAction]
  -[AMSUIWebBusinessChatAction makeBusinessChatDeeplink]
  -[AMSUIWebBusinessChatAction businessGroupID]
  -[AMSUIWebBusinessChatAction setBusinessGroupID:]


AMSUIWebButtonModel : NSObject <AMSUIWebModelInterface>
 @property  NSDictionary *underlyingJSObject
 @property  <AMSUIWebActionRunnable> *action
 @property  SEL actionSelector
 @property  AMSUIWebActivityIndicatorModel *activityIndicator
 @property  AMSUIWebAppViewModel *appView
 @property  BOOL bold
 @property  BOOL enabled
 @property  id target
 @property  NSString *title
 @property  long long style
 @property  NSString *systemImageName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebButtonModel _barButtonItemStyle]
  -[AMSUIWebButtonModel bold]
  -[AMSUIWebButtonModel setTitle:]
  -[AMSUIWebButtonModel activityIndicator]
  -[AMSUIWebButtonModel .cxx_destruct]
  -[AMSUIWebButtonModel setStyle:]
  -[AMSUIWebButtonModel systemImageName]
  -[AMSUIWebButtonModel setActionSelector:]
  -[AMSUIWebButtonModel actionSelector]
  -[AMSUIWebButtonModel enabled]
  -[AMSUIWebButtonModel setAction:]
  -[AMSUIWebButtonModel action]
  -[AMSUIWebButtonModel setTarget:]
  -[AMSUIWebButtonModel appView]
  -[AMSUIWebButtonModel setSystemImageName:]
  -[AMSUIWebButtonModel title]
  -[AMSUIWebButtonModel setActivityIndicator:]
  -[AMSUIWebButtonModel setBold:]
  -[AMSUIWebButtonModel target]
  -[AMSUIWebButtonModel setEnabled:]
  -[AMSUIWebButtonModel style]
  -[AMSUIWebButtonModel initWithJSObject:context:]
  -[AMSUIWebButtonModel _createAppViewItemWithModel:]
  -[AMSUIWebButtonModel _createSpinnerItem]
  -[AMSUIWebButtonModel _createProxCardItemWithTarget:selector:]
  -[AMSUIWebButtonModel _imageForButtonWithNavStyle:]
  -[AMSUIWebButtonModel underlyingJSObject]
  -[AMSUIWebButtonModel initWithAppViewObject:context:]
  -[AMSUIWebButtonModel createBarButtonItemWithTarget:selector:navBar:]
  -[AMSUIWebButtonModel createDialogAction]
  -[AMSUIWebButtonModel setAppView:]
  -[AMSUIWebButtonModel setUnderlyingJSObject:]


AMSUIWebBuyAction : AMSUIWebAction <AMSPurchaseDelegate, AMSUIWebActionRunnable>
 @property  NSString *contentType
 @property  BOOL makeCurrentAccount
 @property  BOOL requiresAccount
 @property  NSDictionary *metricsOverlay
 @property  ACAccount *account
 @property  NSString *buyParams
 @property  BOOL legacyBuy
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebBuyAction setAccount:]
  -[AMSUIWebBuyAction account]
  -[AMSUIWebBuyAction buyParams]
  -[AMSUIWebBuyAction setType:]
  -[AMSUIWebBuyAction .cxx_destruct]
  -[AMSUIWebBuyAction setContentType:]
  -[AMSUIWebBuyAction contentType]
  -[AMSUIWebBuyAction metricsOverlay]
  -[AMSUIWebBuyAction _runBuy]
  -[AMSUIWebBuyAction setMetricsOverlay:]
  -[AMSUIWebBuyAction type]
  -[AMSUIWebBuyAction requiresAccount]
  -[AMSUIWebBuyAction setRequiresAccount:]
  -[AMSUIWebBuyAction setBuyParams:]
  -[AMSUIWebBuyAction purchase:handleDialogRequest:completion:]
  -[AMSUIWebBuyAction purchase:handleAuthenticateRequest:completion:]
  -[AMSUIWebBuyAction purchase:handleEngagementRequest:completion:]
  -[AMSUIWebBuyAction _iTunesAccount]
  -[AMSUIWebBuyAction initWithJSObject:context:]
  -[AMSUIWebBuyAction runAction]
  -[AMSUIWebBuyAction makeCurrentAccount]
  -[AMSUIWebBuyAction setMakeCurrentAccount:]
  -[AMSUIWebBuyAction legacyBuy]
  -[AMSUIWebBuyAction _runLegacyBuy]
  -[AMSUIWebBuyAction _runBuyWithContentType:]
  -[AMSUIWebBuyAction _makeCurrentAccountIfNeeded:]
  -[AMSUIWebBuyAction _purchasePluginIdentifierForContentType:]
  -[AMSUIWebBuyAction purchaseContentWithType:]
  -[AMSUIWebBuyAction setLegacyBuy:]


AMSUIWebCallbackAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSString *service
 @property  NSDictionary *data
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebCallbackAction .cxx_destruct]
  -[AMSUIWebCallbackAction data]
  -[AMSUIWebCallbackAction service]
  -[AMSUIWebCallbackAction setData:]
  -[AMSUIWebCallbackAction setService:]
  -[AMSUIWebCallbackAction initWithJSObject:context:]
  -[AMSUIWebCallbackAction runAction]


AMSUIWebCameraReaderInfoView : AMSUICommonView
 @property  UIButton *bottomLink
 @property  <AMSUIWebActionRunnable> *bottomLinkAction
 @property  UILabel *primaryLabel
 @property  UILabel *secondaryLabel

  // instance methods
  -[AMSUIWebCameraReaderInfoView setBottomLink:]
  -[AMSUIWebCameraReaderInfoView .cxx_destruct]
  -[AMSUIWebCameraReaderInfoView layoutSubviews]
  -[AMSUIWebCameraReaderInfoView secondaryLabel]
  -[AMSUIWebCameraReaderInfoView initWithFrame:]
  -[AMSUIWebCameraReaderInfoView setPrimaryLabel:]
  -[AMSUIWebCameraReaderInfoView setSecondaryLabel:]
  -[AMSUIWebCameraReaderInfoView primaryLabel]
  -[AMSUIWebCameraReaderInfoView bottomLink]
  -[AMSUIWebCameraReaderInfoView _createLabelWithLines:title:]
  -[AMSUIWebCameraReaderInfoView _bottomLinkSelected:]
  -[AMSUIWebCameraReaderInfoView _createButtonWithTarget:selector:]
  -[AMSUIWebCameraReaderInfoView bottomLinkAction]
  -[AMSUIWebCameraReaderInfoView setBottomLinkAction:]


AMSUIWebCameraReaderPageModel : NSObject <AMSUIWebPageProvider>
 @property  <AMSUIWebActionRunnable> *action
 @property  AMSUIWebClientContext *context
 @property  UIViewController *presentedViewController
 @property  BOOL allowsCameraToggle
 @property  BOOL allowsTextEntry
 @property  NSString *bottomLinkLabel
 @property  <AMSUIWebActionRunnable> *bottomLinkAction
 @property  BOOL fullScreen
 @property  long long pageType
 @property  NSString *primaryLabel
 @property  NSString *secondaryLabel
 @property  NSString *textFieldPlaceholder
 @property  AMSUIWebNavigationBarModel *navigationBar
 @property  NSString *backgroundColor
 @property  AMSMetricsEvent *impressionEvent
 @property  BOOL disableReappearPlaceholder
 @property  {CGSize=dd} windowSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebCameraReaderPageModel isFullScreen]
  -[AMSUIWebCameraReaderPageModel impressionEvent]
  -[AMSUIWebCameraReaderPageModel backgroundColor]
  -[AMSUIWebCameraReaderPageModel setFullScreen:]
  -[AMSUIWebCameraReaderPageModel .cxx_destruct]
  -[AMSUIWebCameraReaderPageModel navigationBar]
  -[AMSUIWebCameraReaderPageModel setAction:]
  -[AMSUIWebCameraReaderPageModel action]
  -[AMSUIWebCameraReaderPageModel pageType]
  -[AMSUIWebCameraReaderPageModel secondaryLabel]
  -[AMSUIWebCameraReaderPageModel setPresentedViewController:]
  -[AMSUIWebCameraReaderPageModel setPrimaryLabel:]
  -[AMSUIWebCameraReaderPageModel setSecondaryLabel:]
  -[AMSUIWebCameraReaderPageModel primaryLabel]
  -[AMSUIWebCameraReaderPageModel setContext:]
  -[AMSUIWebCameraReaderPageModel windowSize]
  -[AMSUIWebCameraReaderPageModel setPageType:]
  -[AMSUIWebCameraReaderPageModel loadPage]
  -[AMSUIWebCameraReaderPageModel presentedViewController]
  -[AMSUIWebCameraReaderPageModel context]
  -[AMSUIWebCameraReaderPageModel initWithJSObject:context:]
  -[AMSUIWebCameraReaderPageModel bottomLinkAction]
  -[AMSUIWebCameraReaderPageModel setBottomLinkAction:]
  -[AMSUIWebCameraReaderPageModel createViewControllerForContainer:]
  -[AMSUIWebCameraReaderPageModel disableReappearPlaceholder]
  -[AMSUIWebCameraReaderPageModel allowsCameraToggle]
  -[AMSUIWebCameraReaderPageModel setAllowsCameraToggle:]
  -[AMSUIWebCameraReaderPageModel allowsTextEntry]
  -[AMSUIWebCameraReaderPageModel setAllowsTextEntry:]
  -[AMSUIWebCameraReaderPageModel bottomLinkLabel]
  -[AMSUIWebCameraReaderPageModel setBottomLinkLabel:]
  -[AMSUIWebCameraReaderPageModel textFieldPlaceholder]
  -[AMSUIWebCameraReaderPageModel setTextFieldPlaceholder:]


AMSUIWebCameraReaderViewController : AMSUICommonViewController <CRCameraReaderDelegate, CRCodeRedeemerControllerDelegate, UITextFieldDelegate, AMSUIWebPagePresenter>
 @property  AMSUIWebAppearance *appearance
 @property  UIViewController *childController
 @property  AMSUIWebClientContext *context
 @property  AMSUIWebCameraReaderInfoView *infoView
 @property  AMSUIWebCameraReaderPageModel *model
 @property  AMSUIWebNavigationBarModel *navigationBarModel
 @property  NSDictionary *output
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} keyboardRect
 @property  UIView *overlay
 @property  AMSUIWebCameraTextField *textField
 @property  UIView *textFieldSafeAreaBackdrop
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIWebCameraReaderViewController cameraSupported]

  // instance methods
  -[AMSUIWebCameraReaderViewController textField]
  -[AMSUIWebCameraReaderViewController output]
  -[AMSUIWebCameraReaderViewController overlay]
  -[AMSUIWebCameraReaderViewController keyboardDidHide:]
  -[AMSUIWebCameraReaderViewController textFieldShouldReturn:]
  -[AMSUIWebCameraReaderViewController setTextField:]
  -[AMSUIWebCameraReaderViewController viewWillLayoutSubviews]
  -[AMSUIWebCameraReaderViewController _hideKeyboard]
  -[AMSUIWebCameraReaderViewController appearance]
  -[AMSUIWebCameraReaderViewController textFieldDidBeginEditing:]
  -[AMSUIWebCameraReaderViewController .cxx_destruct]
  -[AMSUIWebCameraReaderViewController viewDidAppear:]
  -[AMSUIWebCameraReaderViewController textFieldDidEndEditing:]
  -[AMSUIWebCameraReaderViewController setOutput:]
  -[AMSUIWebCameraReaderViewController setAppearance:]
  -[AMSUIWebCameraReaderViewController initWithContext:]
  -[AMSUIWebCameraReaderViewController keyboardWillHide:]
  -[AMSUIWebCameraReaderViewController model]
  -[AMSUIWebCameraReaderViewController viewWillAppear:]
  -[AMSUIWebCameraReaderViewController setModel:]
  -[AMSUIWebCameraReaderViewController setContext:]
  -[AMSUIWebCameraReaderViewController dealloc]
  -[AMSUIWebCameraReaderViewController infoView]
  -[AMSUIWebCameraReaderViewController keyboardWillShow:]
  -[AMSUIWebCameraReaderViewController loadView]
  -[AMSUIWebCameraReaderViewController setOverlay:]
  -[AMSUIWebCameraReaderViewController context]
  -[AMSUIWebCameraReaderViewController cameraReaderDidCancel:]
  -[AMSUIWebCameraReaderViewController cameraReaderDidEnd:]
  -[AMSUIWebCameraReaderViewController cameraReader:didFailWithError:]
  -[AMSUIWebCameraReaderViewController cameraReader:didRecognizeObjects:]
  -[AMSUIWebCameraReaderViewController setInfoView:]
  -[AMSUIWebCameraReaderViewController childController]
  -[AMSUIWebCameraReaderViewController setChildController:]
  -[AMSUIWebCameraReaderViewController _applyAppearance]
  -[AMSUIWebCameraReaderViewController _setupPage]
  -[AMSUIWebCameraReaderViewController _layoutPage]
  -[AMSUIWebCameraReaderViewController _cameraReader]
  -[AMSUIWebCameraReaderViewController _setupPageForCreditCard]
  -[AMSUIWebCameraReaderViewController _setupPageForGiftCard]
  -[AMSUIWebCameraReaderViewController _setupPageForIDCard]
  -[AMSUIWebCameraReaderViewController _setupInfoView]
  -[AMSUIWebCameraReaderViewController _setupCameraToggle]
  -[AMSUIWebCameraReaderViewController _setupTextEntry]
  -[AMSUIWebCameraReaderViewController _setupNavigationModel]
  -[AMSUIWebCameraReaderViewController _commitNavigationBarModel]
  -[AMSUIWebCameraReaderViewController setTextFieldSafeAreaBackdrop:]
  -[AMSUIWebCameraReaderViewController textFieldSafeAreaBackdrop]
  -[AMSUIWebCameraReaderViewController _overlayTapGestureAction:]
  -[AMSUIWebCameraReaderViewController _makeTextFieldWithPlaceholderColor:]
  -[AMSUIWebCameraReaderViewController _layoutFullScreen]
  -[AMSUIWebCameraReaderViewController _layoutHalfScreen]
  -[AMSUIWebCameraReaderViewController _layoutTextField]
  -[AMSUIWebCameraReaderViewController keyboardRect]
  -[AMSUIWebCameraReaderViewController navigationBarModel]
  -[AMSUIWebCameraReaderViewController _setCameraToggleButton]
  -[AMSUIWebCameraReaderViewController _redeemAction:]
  -[AMSUIWebCameraReaderViewController _setChild:]
  -[AMSUIWebCameraReaderViewController _outputForGiftCardReaderCode:]
  -[AMSUIWebCameraReaderViewController _handleCameraOutput:error:]
  -[AMSUIWebCameraReaderViewController _outputForCreditCardReaderObjects:]
  -[AMSUIWebCameraReaderViewController _outputForIDCardReaderObjects:]
  -[AMSUIWebCameraReaderViewController _outputForGiftCardReaderObjects:]
  -[AMSUIWebCameraReaderViewController _setRedeemButton]
  -[AMSUIWebCameraReaderViewController setKeyboardRect:]
  -[AMSUIWebCameraReaderViewController codeRedeemerControllerDidCancel:]
  -[AMSUIWebCameraReaderViewController codeRedeemerController:didEndWithInfo:]
  -[AMSUIWebCameraReaderViewController willPresentPageModel:appearance:]
  -[AMSUIWebCameraReaderViewController setNavigationBarModel:]


AMSUIWebCameraTextField : UITextField
  // instance methods
  -[AMSUIWebCameraTextField placeholderRectForBounds:]
  -[AMSUIWebCameraTextField textRectForBounds:]
  -[AMSUIWebCameraTextField editingRectForBounds:]
  -[AMSUIWebCameraTextField initWithFrame:]


AMSUIWebCampaignAttributionAction : AMSUIWebAction
 @property  ACAccount *account
 @property  NSArray *additionalQueryItems
 @property  NSURL *URL

  // class methods
  +[AMSUIWebCampaignAttributionAction _campaignAttributionTaskForURL:]

  // instance methods
  -[AMSUIWebCampaignAttributionAction setAccount:]
  -[AMSUIWebCampaignAttributionAction account]
  -[AMSUIWebCampaignAttributionAction setURL:]
  -[AMSUIWebCampaignAttributionAction .cxx_destruct]
  -[AMSUIWebCampaignAttributionAction additionalQueryItems]
  -[AMSUIWebCampaignAttributionAction setAdditionalQueryItems:]
  -[AMSUIWebCampaignAttributionAction URL]
  -[AMSUIWebCampaignAttributionAction initWithJSObject:context:]
  -[AMSUIWebCampaignAttributionAction runAction]


AMSUIWebCheckDownloadQueueAction : AMSUIWebAction
 @property  id contentType

  // instance methods
  -[AMSUIWebCheckDownloadQueueAction .cxx_destruct]
  -[AMSUIWebCheckDownloadQueueAction setContentType:]
  -[AMSUIWebCheckDownloadQueueAction contentType]
  -[AMSUIWebCheckDownloadQueueAction initWithJSObject:context:]
  -[AMSUIWebCheckDownloadQueueAction runAction]


AMSUIWebClientContext : NSObject
 @property  <AMSBagProtocol> *backingBag
 @property  ACAccount *account
 @property  <AMSUIWebActionRunnerDelegate> *actionDelegate
 @property  NSDictionary *additionalHeaders
 @property  AMSSnapshotBag *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSDictionary *clientOptions
 @property  AMSUIWebJSDataProvider *dataProvider
 @property  BOOL disableTrustedDomains
 @property  AMSUIWebFlowController *flowController
 @property  BOOL loadUsingWebKit
 @property  NSString *logKey
 @property  AMSMetrics *metrics
 @property  NSDictionary *metricsOverlay
 @property  AMSMescalAccountPrimeSession *mescalSession
 @property  AMSUIWebPluginLoader *pluginLoader
 @property  BOOL signatureResumption
 @property  AMSURLSession *URLSession
 @property  AMSUIWebPageViewController *webPage

  // class methods
  +[AMSUIWebClientContext _boolForKey:defaultValue:domain:]
  +[AMSUIWebClientContext _createClientInfoFromAccount:clientInfo:]

  // instance methods
  -[AMSUIWebClientContext URLSession]
  -[AMSUIWebClientContext account]
  -[AMSUIWebClientContext setWebPage:]
  -[AMSUIWebClientContext logKey]
  -[AMSUIWebClientContext .cxx_destruct]
  -[AMSUIWebClientContext actionDelegate]
  -[AMSUIWebClientContext bag]
  -[AMSUIWebClientContext clientInfo]
  -[AMSUIWebClientContext setDataProvider:]
  -[AMSUIWebClientContext setMetrics:]
  -[AMSUIWebClientContext metricsOverlay]
  -[AMSUIWebClientContext webPage]
  -[AMSUIWebClientContext setMetricsOverlay:]
  -[AMSUIWebClientContext setURLSession:]
  -[AMSUIWebClientContext metrics]
  -[AMSUIWebClientContext setActionDelegate:]
  -[AMSUIWebClientContext additionalHeaders]
  -[AMSUIWebClientContext setAdditionalHeaders:]
  -[AMSUIWebClientContext setLogKey:]
  -[AMSUIWebClientContext setClientOptions:]
  -[AMSUIWebClientContext dataProvider]
  -[AMSUIWebClientContext flowController]
  -[AMSUIWebClientContext setFlowController:]
  -[AMSUIWebClientContext JSAccountFromAccount:store:]
  -[AMSUIWebClientContext clientOptions]
  -[AMSUIWebClientContext iTunesAccountFromJSAccount:]
  -[AMSUIWebClientContext replaceCurrentAccount:clientInfo:]
  -[AMSUIWebClientContext iTunesAccountFromJSDSID:]
  -[AMSUIWebClientContext signatureResumption]
  -[AMSUIWebClientContext pluginLoader]
  -[AMSUIWebClientContext backingBag]
  -[AMSUIWebClientContext updateBackingBag:]
  -[AMSUIWebClientContext setBackingBag:]
  -[AMSUIWebClientContext initWithAccount:clientInfo:backingBag:]
  -[AMSUIWebClientContext disableTrustedDomains]
  -[AMSUIWebClientContext loadSnapshot]
  -[AMSUIWebClientContext loadUsingWebKit]
  -[AMSUIWebClientContext setLoadUsingWebKit:]
  -[AMSUIWebClientContext mescalSession]
  -[AMSUIWebClientContext setMescalSession:]
  -[AMSUIWebClientContext setPluginLoader:]
  -[AMSUIWebClientContext setSignatureResumption:]


AMSUIWebConditionalButtonModel : NSObject <AMSUIWebModelInterface>
 @property  AMSUIWebButtonModel *button
 @property  BOOL hideOnModal
 @property  BOOL hideOnPush
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebConditionalButtonModel .cxx_destruct]
  -[AMSUIWebConditionalButtonModel button]
  -[AMSUIWebConditionalButtonModel setButton:]
  -[AMSUIWebConditionalButtonModel initWithJSObject:context:]
  -[AMSUIWebConditionalButtonModel hideOnModal]
  -[AMSUIWebConditionalButtonModel setHideOnModal:]
  -[AMSUIWebConditionalButtonModel hideOnPush]
  -[AMSUIWebConditionalButtonModel setHideOnPush:]


AMSUIWebContainerViewController : AMSUICommonViewController <UIViewControllerTransitioningDelegate, AMSUIWebPresentationDelegate, UIAdaptivePresentationControllerDelegate>
 @property  AMSBinaryPromise *activeRefresh
 @property  AMSUIWebClientContext *context
 @property  BOOL didAppearOnce
 @property  BOOL dismissCalled
 @property  BOOL isAppearing
 @property  UIViewController *hiddenViewController
 @property  UINavigationItem *lastNavigationItem
 @property  long long lastNavigationStyle
 @property  AMSUIWebNavigationBarModel *navigationBarModel
 @property  {CGPoint=dd} scrollPosition
 @property  unsigned long activePresentationType
 @property  AMSUIWebAppearance *appearance
 @property  long long containerIndex
 @property  UIViewController<AMSUIWebPagePresenter> *containedViewController
 @property  long long disableReappearPlaceholder
 @property  AMSUIWebContainerViewController<AMSUIWebPresentationDelegate> *modalPresentationDelegate
 @property  AMSUIWebContainerViewController *nextContainer
 @property  NSDictionary *pageInfo
 @property  AMSUIWebContainerViewController<AMSUIWebPresentationDelegate> *pushPresentationDelegate
 @property  BOOL shouldSkipInitialRefresh
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebContainerViewController presentationControllerDidDismiss:]
  -[AMSUIWebContainerViewController isAppearing]
  -[AMSUIWebContainerViewController viewWillLayoutSubviews]
  -[AMSUIWebContainerViewController appearance]
  -[AMSUIWebContainerViewController .cxx_destruct]
  -[AMSUIWebContainerViewController viewDidAppear:]
  -[AMSUIWebContainerViewController setScrollPosition:]
  -[AMSUIWebContainerViewController setAppearance:]
  -[AMSUIWebContainerViewController scrollPosition]
  -[AMSUIWebContainerViewController navigationItem]
  -[AMSUIWebContainerViewController viewWillAppear:]
  -[AMSUIWebContainerViewController containedViewController]
  -[AMSUIWebContainerViewController setContainedViewController:]
  -[AMSUIWebContainerViewController setContext:]
  -[AMSUIWebContainerViewController dealloc]
  -[AMSUIWebContainerViewController loadView]
  -[AMSUIWebContainerViewController pageInfo]
  -[AMSUIWebContainerViewController setIsAppearing:]
  -[AMSUIWebContainerViewController viewDidDisappear:]
  -[AMSUIWebContainerViewController context]
  -[AMSUIWebContainerViewController didAppearOnce]
  -[AMSUIWebContainerViewController setDidAppearOnce:]
  -[AMSUIWebContainerViewController disableReappearPlaceholder]
  -[AMSUIWebContainerViewController _applyAppearance]
  -[AMSUIWebContainerViewController navigationBarModel]
  -[AMSUIWebContainerViewController applyNavigationModel:]
  -[AMSUIWebContainerViewController setNavigationBarModel:]
  -[AMSUIWebContainerViewController dismissCalled]
  -[AMSUIWebContainerViewController pushPresentationDelegate]
  -[AMSUIWebContainerViewController handleModalDismissal]
  -[AMSUIWebContainerViewController _postEvent:]
  -[AMSUIWebContainerViewController setDismissCalled:]
  -[AMSUIWebContainerViewController didDismissController:]
  -[AMSUIWebContainerViewController _determineActivePresentationType]
  -[AMSUIWebContainerViewController _refreshForInitialAppear]
  -[AMSUIWebContainerViewController setShouldSkipInitialRefresh:]
  -[AMSUIWebContainerViewController _setupNavBarAnimated:]
  -[AMSUIWebContainerViewController modalPresentationDelegate]
  -[AMSUIWebContainerViewController _adjustWebViewScrollFor:completion:]
  -[AMSUIWebContainerViewController _prepareToMoveWebViewToVC:completion:]
  -[AMSUIWebContainerViewController setNextContainer:]
  -[AMSUIWebContainerViewController _refreshWithOptions:]
  -[AMSUIWebContainerViewController replaceContentWithViewController:animated:completion:]
  -[AMSUIWebContainerViewController _scrollTo:webView:completion:]
  -[AMSUIWebContainerViewController activePresentationType]
  -[AMSUIWebContainerViewController _leftButtonModel]
  -[AMSUIWebContainerViewController _rightButtonModel]
  -[AMSUIWebContainerViewController _buttonModelForConditionalButtons:]
  -[AMSUIWebContainerViewController shouldSkipInitialRefresh]
  -[AMSUIWebContainerViewController activeRefresh]
  -[AMSUIWebContainerViewController setActiveRefresh:]
  -[AMSUIWebContainerViewController _handleLeftNavigationButton:]
  -[AMSUIWebContainerViewController _handleRightNavigationButton:]
  -[AMSUIWebContainerViewController lastNavigationStyle]
  -[AMSUIWebContainerViewController lastNavigationItem]
  -[AMSUIWebContainerViewController setLastNavigationStyle:]
  -[AMSUIWebContainerViewController setLastNavigationItem:]
  -[AMSUIWebContainerViewController _makeCustomNavigationBarAppearanceWithModel:]
  -[AMSUIWebContainerViewController initWithViewController:appearance:navigationBar:context:]
  -[AMSUIWebContainerViewController cacheScrollViewPositionFor:]
  -[AMSUIWebContainerViewController containerIndex]
  -[AMSUIWebContainerViewController setContainerIndex:]
  -[AMSUIWebContainerViewController setDisableReappearPlaceholder:]
  -[AMSUIWebContainerViewController setModalPresentationDelegate:]
  -[AMSUIWebContainerViewController nextContainer]
  -[AMSUIWebContainerViewController setPageInfo:]
  -[AMSUIWebContainerViewController setPushPresentationDelegate:]
  -[AMSUIWebContainerViewController hiddenViewController]
  -[AMSUIWebContainerViewController setHiddenViewController:]


AMSUIWebDelegateAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSDictionary *delegateData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebDelegateAction .cxx_destruct]
  -[AMSUIWebDelegateAction _infoWithBuyParams:additionalInfo:]
  -[AMSUIWebDelegateAction initWithJSObject:context:]
  -[AMSUIWebDelegateAction runAction]
  -[AMSUIWebDelegateAction delegateData]
  -[AMSUIWebDelegateAction _handleResolveAction]
  -[AMSUIWebDelegateAction _handleActionObject:]
  -[AMSUIWebDelegateAction _didResolveWithResult:error:]
  -[AMSUIWebDelegateAction setDelegateData:]


AMSUIWebDelegateProxy : NSObject
 @property  id delegate

  // instance methods
  -[AMSUIWebDelegateProxy methodSignatureForSelector:]
  -[AMSUIWebDelegateProxy .cxx_destruct]
  -[AMSUIWebDelegateProxy setDelegate:]
  -[AMSUIWebDelegateProxy forwardingTargetForSelector:]
  -[AMSUIWebDelegateProxy respondsToSelector:]
  -[AMSUIWebDelegateProxy initWithDelegate:]
  -[AMSUIWebDelegateProxy delegate]
  -[AMSUIWebDelegateProxy forwardInvocation:]


AMSUIWebDialogAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  BOOL pauseTimeouts
 @property  NSArray *buttonModels
 @property  AMSDialogRequest *request
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebDialogAction setRequest:]
  -[AMSUIWebDialogAction .cxx_destruct]
  -[AMSUIWebDialogAction request]
  -[AMSUIWebDialogAction initWithJSObject:context:]
  -[AMSUIWebDialogAction runAction]
  -[AMSUIWebDialogAction pauseTimeouts]
  -[AMSUIWebDialogAction setPauseTimeouts:]
  -[AMSUIWebDialogAction buttonModels]
  -[AMSUIWebDialogAction setButtonModels:]


AMSUIWebDynamicPageModel : NSObject <AMSUIWebPageProvider>
 @property  AMSUIWebClientContext *context
 @property  ACAccount *account
 @property  NSDictionary *clientOptions
 @property  NSDictionary *metricsOverlay
 @property  NSURL *URL
 @property  AMSUIWebNavigationBarModel *navigationBar
 @property  NSString *backgroundColor
 @property  AMSMetricsEvent *impressionEvent
 @property  BOOL disableReappearPlaceholder
 @property  {CGSize=dd} windowSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebDynamicPageModel setAccount:]
  -[AMSUIWebDynamicPageModel account]
  -[AMSUIWebDynamicPageModel impressionEvent]
  -[AMSUIWebDynamicPageModel backgroundColor]
  -[AMSUIWebDynamicPageModel setURL:]
  -[AMSUIWebDynamicPageModel .cxx_destruct]
  -[AMSUIWebDynamicPageModel navigationBar]
  -[AMSUIWebDynamicPageModel metricsOverlay]
  -[AMSUIWebDynamicPageModel setMetricsOverlay:]
  -[AMSUIWebDynamicPageModel URL]
  -[AMSUIWebDynamicPageModel setContext:]
  -[AMSUIWebDynamicPageModel setClientOptions:]
  -[AMSUIWebDynamicPageModel windowSize]
  -[AMSUIWebDynamicPageModel loadPage]
  -[AMSUIWebDynamicPageModel context]
  -[AMSUIWebDynamicPageModel clientOptions]
  -[AMSUIWebDynamicPageModel initWithJSObject:context:]
  -[AMSUIWebDynamicPageModel createViewControllerForContainer:]
  -[AMSUIWebDynamicPageModel disableReappearPlaceholder]


AMSUIWebDynamicViewController : AMSUIDynamicViewController <AMSUIWebPagePresenter, AMSUIDynamicViewControllerDelegate>
 @property  AMSUIWebClientContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebDynamicViewController .cxx_destruct]
  -[AMSUIWebDynamicViewController dynamicViewController:didFinishPurchaseWithResult:error:]
  -[AMSUIWebDynamicViewController setContext:]
  -[AMSUIWebDynamicViewController context]
  -[AMSUIWebDynamicViewController initWithContext:URL:]
  -[AMSUIWebDynamicViewController dynamicViewController:didFinishWithPurchaseResult:error:]
  -[AMSUIWebDynamicViewController willPresentPageModel:appearance:]


AMSUIWebEngagementAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSDictionary *event
 @property  NSArray *messagePlacements
 @property  NSString *messageServiceType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebEngagementAction .cxx_destruct]
  -[AMSUIWebEngagementAction event]
  -[AMSUIWebEngagementAction messageServiceType]
  -[AMSUIWebEngagementAction initWithJSObject:context:]
  -[AMSUIWebEngagementAction runAction]
  -[AMSUIWebEngagementAction messagePlacements]
  -[AMSUIWebEngagementAction _resultFromMessageResponse:]


AMSUIWebErrorPageModel : NSObject <AMSUIWebPageProvider>
 @property  NSBundle *bundle
 @property  AMSUIWebClientContext *context
 @property  <AMSUIWebActionRunnable> *action
 @property  @? actionBlock
 @property  NSString *actionButtonTitle
 @property  NSString *errorMessage
 @property  BOOL errorMessageInternalOnly
 @property  NSString *errorTitle
 @property  AMSUIWebNavigationBarModel *navigationBar
 @property  NSString *backgroundColor
 @property  AMSMetricsEvent *impressionEvent
 @property  BOOL disableReappearPlaceholder
 @property  {CGSize=dd} windowSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIWebErrorPageModel _messageFromError:]

  // instance methods
  -[AMSUIWebErrorPageModel bundle]
  -[AMSUIWebErrorPageModel setBundle:]
  -[AMSUIWebErrorPageModel impressionEvent]
  -[AMSUIWebErrorPageModel backgroundColor]
  -[AMSUIWebErrorPageModel errorTitle]
  -[AMSUIWebErrorPageModel .cxx_destruct]
  -[AMSUIWebErrorPageModel setErrorTitle:]
  -[AMSUIWebErrorPageModel navigationBar]
  -[AMSUIWebErrorPageModel actionButtonTitle]
  -[AMSUIWebErrorPageModel actionBlock]
  -[AMSUIWebErrorPageModel setActionButtonTitle:]
  -[AMSUIWebErrorPageModel setAction:]
  -[AMSUIWebErrorPageModel action]
  -[AMSUIWebErrorPageModel setActionBlock:]
  -[AMSUIWebErrorPageModel errorMessage]
  -[AMSUIWebErrorPageModel setContext:]
  -[AMSUIWebErrorPageModel windowSize]
  -[AMSUIWebErrorPageModel loadPage]
  -[AMSUIWebErrorPageModel context]
  -[AMSUIWebErrorPageModel initWithJSObject:context:]
  -[AMSUIWebErrorPageModel createViewControllerForContainer:]
  -[AMSUIWebErrorPageModel disableReappearPlaceholder]
  -[AMSUIWebErrorPageModel errorMessageInternalOnly]
  -[AMSUIWebErrorPageModel initWithError:context:actionBlock:]
  -[AMSUIWebErrorPageModel setErrorMessageInternalOnly:]


AMSUIWebErrorViewController : AMSUICommonViewController <AMSUIWebPagePresenter>
 @property  AMSUIWebAppearance *appearance
 @property  AMSUIWebClientContext *context
 @property  AMSUIErrorView *errorView
 @property  AMSUIWebErrorPageModel *model
 @property  BOOL showingCancelButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebErrorViewController viewWillLayoutSubviews]
  -[AMSUIWebErrorViewController appearance]
  -[AMSUIWebErrorViewController .cxx_destruct]
  -[AMSUIWebErrorViewController setAppearance:]
  -[AMSUIWebErrorViewController initWithContext:]
  -[AMSUIWebErrorViewController model]
  -[AMSUIWebErrorViewController viewWillAppear:]
  -[AMSUIWebErrorViewController setModel:]
  -[AMSUIWebErrorViewController setContext:]
  -[AMSUIWebErrorViewController loadView]
  -[AMSUIWebErrorViewController context]
  -[AMSUIWebErrorViewController errorView]
  -[AMSUIWebErrorViewController setErrorView:]
  -[AMSUIWebErrorViewController _applyAppearance]
  -[AMSUIWebErrorViewController willPresentPageModel:appearance:]
  -[AMSUIWebErrorViewController _showCancelButtonIfNeeded]
  -[AMSUIWebErrorViewController showingCancelButton]
  -[AMSUIWebErrorViewController setShowingCancelButton:]


AMSUIWebFamilyAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  ACAccount *account
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebFamilyAction setAccount:]
  -[AMSUIWebFamilyAction account]
  -[AMSUIWebFamilyAction .cxx_destruct]
  -[AMSUIWebFamilyAction initWithJSObject:context:]
  -[AMSUIWebFamilyAction runAction]
  -[AMSUIWebFamilyAction _dictionaryFromLookupResult:]


AMSUIWebFetchAttestationVersionAction : AMSUIWebAction
 @property  ACAccount *account

  // instance methods
  -[AMSUIWebFetchAttestationVersionAction setAccount:]
  -[AMSUIWebFetchAttestationVersionAction account]
  -[AMSUIWebFetchAttestationVersionAction .cxx_destruct]
  -[AMSUIWebFetchAttestationVersionAction initWithJSObject:context:]
  -[AMSUIWebFetchAttestationVersionAction runAction]
  -[AMSUIWebFetchAttestationVersionAction minimumVersions]


AMSUIWebFetchCardDataAction : AMSUIWebAction
 @property  NSString *merchantID
 @property  NSString *storeFrontCountryCode

  // instance methods
  -[AMSUIWebFetchCardDataAction .cxx_destruct]
  -[AMSUIWebFetchCardDataAction merchantID]
  -[AMSUIWebFetchCardDataAction initWithJSObject:context:]
  -[AMSUIWebFetchCardDataAction runAction]
  -[AMSUIWebFetchCardDataAction storeFrontCountryCode]
  -[AMSUIWebFetchCardDataAction setMerchantID:]
  -[AMSUIWebFetchCardDataAction setStoreFrontCountryCode:]


AMSUIWebFetchCardMetadataAction : AMSUIWebAction
 @property  NSNumber *cardArtworkSize
 @property  NSString *passTypeIdentifier
 @property  NSString *serialNumber

  // instance methods
  -[AMSUIWebFetchCardMetadataAction serialNumber]
  -[AMSUIWebFetchCardMetadataAction setSerialNumber:]
  -[AMSUIWebFetchCardMetadataAction .cxx_destruct]
  -[AMSUIWebFetchCardMetadataAction setPassTypeIdentifier:]
  -[AMSUIWebFetchCardMetadataAction passTypeIdentifier]
  -[AMSUIWebFetchCardMetadataAction initWithJSObject:context:]
  -[AMSUIWebFetchCardMetadataAction runAction]
  -[AMSUIWebFetchCardMetadataAction cardArtworkSize]
  -[AMSUIWebFetchCardMetadataAction setCardArtworkSize:]


AMSUIWebFetchMetricsIdentifierAction : AMSUIWebAction
 @property  ACAccount *account
 @property  NSString *bagNamespace
 @property  NSString *bagProfile
 @property  NSString *bagProfileVersion
 @property  BOOL crossDeviceSync
 @property  NSString *identifierKey

  // instance methods
  -[AMSUIWebFetchMetricsIdentifierAction crossDeviceSync]
  -[AMSUIWebFetchMetricsIdentifierAction setAccount:]
  -[AMSUIWebFetchMetricsIdentifierAction account]
  -[AMSUIWebFetchMetricsIdentifierAction .cxx_destruct]
  -[AMSUIWebFetchMetricsIdentifierAction bagProfile]
  -[AMSUIWebFetchMetricsIdentifierAction setBagProfileVersion:]
  -[AMSUIWebFetchMetricsIdentifierAction identifierKey]
  -[AMSUIWebFetchMetricsIdentifierAction setBagProfile:]
  -[AMSUIWebFetchMetricsIdentifierAction bagProfileVersion]
  -[AMSUIWebFetchMetricsIdentifierAction setCrossDeviceSync:]
  -[AMSUIWebFetchMetricsIdentifierAction initWithJSObject:context:]
  -[AMSUIWebFetchMetricsIdentifierAction runAction]
  -[AMSUIWebFetchMetricsIdentifierAction bagNamespace]
  -[AMSUIWebFetchMetricsIdentifierAction setBagNamespace:]
  -[AMSUIWebFetchMetricsIdentifierAction setIdentifierKey:]


AMSUIWebFetchTelephonyAction : AMSUIWebAction
  // instance methods
  -[AMSUIWebFetchTelephonyAction runAction]


AMSUIWebFlowAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  id actionData
 @property  long long animationType
 @property  BOOL deferredPresentation
 @property  NSString *backgroundColor
 @property  AMSUIWebLoadingPageModel *loadingPage
 @property  NSDictionary *metrics
 @property  {CGSize=dd} modalWindowSize
 @property  AMSUIWebNavigationBarModel *navigationBar
 @property  long long popToRelativeIndex
 @property  long long presentationType
 @property  <AMSUIWebPageProvider> *replacementPage
 @property  long long replacementType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebFlowAction animationType]
  -[AMSUIWebFlowAction setPresentationType:]
  -[AMSUIWebFlowAction presentationType]
  -[AMSUIWebFlowAction backgroundColor]
  -[AMSUIWebFlowAction .cxx_destruct]
  -[AMSUIWebFlowAction navigationBar]
  -[AMSUIWebFlowAction setAnimationType:]
  -[AMSUIWebFlowAction setMetrics:]
  -[AMSUIWebFlowAction initWithContext:]
  -[AMSUIWebFlowAction setBackgroundColor:]
  -[AMSUIWebFlowAction metrics]
  -[AMSUIWebFlowAction setNavigationBar:]
  -[AMSUIWebFlowAction actionData]
  -[AMSUIWebFlowAction setActionData:]
  -[AMSUIWebFlowAction initWithJSObject:context:]
  -[AMSUIWebFlowAction runAction]
  -[AMSUIWebFlowAction setDeferredPresentation:]
  -[AMSUIWebFlowAction loadingPage]
  -[AMSUIWebFlowAction setLoadingPage:]
  -[AMSUIWebFlowAction deferredPresentation]
  -[AMSUIWebFlowAction _runWithType:options:]
  -[AMSUIWebFlowAction replacementType]
  -[AMSUIWebFlowAction replacementPage]
  -[AMSUIWebFlowAction modalWindowSize]
  -[AMSUIWebFlowAction setModalWindowSize:]
  -[AMSUIWebFlowAction popToRelativeIndex]
  -[AMSUIWebFlowAction setPopToRelativeIndex:]
  -[AMSUIWebFlowAction setReplacementPage:]
  -[AMSUIWebFlowAction setReplacementType:]


AMSUIWebFlowController : NSObject
 @property  AMSUIWebContainerViewController *rootContainer
 @property  AMSUIWebClientContext *context
 @property  NSString *currentRefreshToken
 @property  NSLock *timeoutLock
 @property  NSMutableSet *timeouts
 @property  AMSUIWebContainerViewController *currentContainer

  // instance methods
  -[AMSUIWebFlowController .cxx_destruct]
  -[AMSUIWebFlowController timeouts]
  -[AMSUIWebFlowController dismissViewController]
  -[AMSUIWebFlowController setTimeouts:]
  -[AMSUIWebFlowController rootContainer]
  -[AMSUIWebFlowController context]
  -[AMSUIWebFlowController popViewController]
  -[AMSUIWebFlowController currentContainer]
  -[AMSUIWebFlowController refreshPageForContainer:options:]
  -[AMSUIWebFlowController replaceWithPageModel:forContainer:options:]
  -[AMSUIWebFlowController pushWithOptions:]
  -[AMSUIWebFlowController presentWithOptions:]
  -[AMSUIWebFlowController popViewControllerToRelativeIndex:]
  -[AMSUIWebFlowController _takeSnapshotFromContainer:completion:]
  -[AMSUIWebFlowController _setWindowSize:onContainer:completion:]
  -[AMSUIWebFlowController _refreshPageWithForContainer:options:isRetry:]
  -[AMSUIWebFlowController timeoutLock]
  -[AMSUIWebFlowController setCurrentRefreshToken:]
  -[AMSUIWebFlowController startTimeout:queue:block:]
  -[AMSUIWebFlowController currentRefreshToken]
  -[AMSUIWebFlowController initWithRootContainer:context:]
  -[AMSUIWebFlowController performSafeTransitionFrom:block:]
  -[AMSUIWebFlowController startTimeoutInterruption]
  -[AMSUIWebFlowController stopTimeoutInterruption]
  -[AMSUIWebFlowController setTimeoutLock:]


AMSUIWebFlowOptions : NSObject
 @property  BOOL animated
 @property  NSString *backgroundColor
 @property  BOOL deferredPresentation
 @property  BOOL disableTimeout
 @property  BOOL reuseExistingPage
 @property  AMSUIWebLoadingPageModel *loadingPage
 @property  long long modalPresentationStyle
 @property  long long modalTransitionStyle
 @property  {CGSize=dd} modalWindowSize
 @property  AMSUIWebNavigationBarModel *navigationBar
 @property  NSDictionary *pageData
 @property  BOOL suppressErrorPage

  // instance methods
  -[AMSUIWebFlowOptions animated]
  -[AMSUIWebFlowOptions setAnimated:]
  -[AMSUIWebFlowOptions modalTransitionStyle]
  -[AMSUIWebFlowOptions backgroundColor]
  -[AMSUIWebFlowOptions .cxx_destruct]
  -[AMSUIWebFlowOptions navigationBar]
  -[AMSUIWebFlowOptions setBackgroundColor:]
  -[AMSUIWebFlowOptions setModalPresentationStyle:]
  -[AMSUIWebFlowOptions modalPresentationStyle]
  -[AMSUIWebFlowOptions setModalTransitionStyle:]
  -[AMSUIWebFlowOptions setNavigationBar:]
  -[AMSUIWebFlowOptions pageData]
  -[AMSUIWebFlowOptions setPageData:]
  -[AMSUIWebFlowOptions setDeferredPresentation:]
  -[AMSUIWebFlowOptions setReuseExistingPage:]
  -[AMSUIWebFlowOptions loadingPage]
  -[AMSUIWebFlowOptions setLoadingPage:]
  -[AMSUIWebFlowOptions deferredPresentation]
  -[AMSUIWebFlowOptions modalWindowSize]
  -[AMSUIWebFlowOptions setModalWindowSize:]
  -[AMSUIWebFlowOptions reuseExistingPage]
  -[AMSUIWebFlowOptions suppressErrorPage]
  -[AMSUIWebFlowOptions disableTimeout]
  -[AMSUIWebFlowOptions setDisableTimeout:]
  -[AMSUIWebFlowOptions setSuppressErrorPage:]


AMSUIWebFlowTimeout : NSObject
 @property  @? enqueuedBlock
 @property  @? block
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSDate *startTime
 @property  double timeout
 @property  double timeRemaining

  // class methods
  +[AMSUIWebFlowTimeout timeoutWithTimeout:queue:block:]

  // instance methods
  -[AMSUIWebFlowTimeout setBlock:]
  -[AMSUIWebFlowTimeout setStartTime:]
  -[AMSUIWebFlowTimeout timeRemaining]
  -[AMSUIWebFlowTimeout .cxx_destruct]
  -[AMSUIWebFlowTimeout setTimeout:]
  -[AMSUIWebFlowTimeout setQueue:]
  -[AMSUIWebFlowTimeout pause]
  -[AMSUIWebFlowTimeout reset]
  -[AMSUIWebFlowTimeout startTime]
  -[AMSUIWebFlowTimeout timeout]
  -[AMSUIWebFlowTimeout queue]
  -[AMSUIWebFlowTimeout start]
  -[AMSUIWebFlowTimeout block]
  -[AMSUIWebFlowTimeout setTimeRemaining:]
  -[AMSUIWebFlowTimeout initWithTimeout:queue:block:]
  -[AMSUIWebFlowTimeout enqueuedBlock]
  -[AMSUIWebFlowTimeout setEnqueuedBlock:]


AMSUIWebJSAppQueryManager : NSObject <ASDAppQueryResultsObserver>
 @property  <AMSUIWebJSAppQueryManagerDelegate> *delegate
 @property  NSMutableDictionary *observingQueries
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebJSAppQueryManager appQuery:resultsDidChange:]
  -[AMSUIWebJSAppQueryManager .cxx_destruct]
  -[AMSUIWebJSAppQueryManager setDelegate:]
  -[AMSUIWebJSAppQueryManager initWithDelegate:]
  -[AMSUIWebJSAppQueryManager delegate]
  -[AMSUIWebJSAppQueryManager invalidate]
  -[AMSUIWebJSAppQueryManager observingQueries]
  -[AMSUIWebJSAppQueryManager _executeAppQuery:]
  -[AMSUIWebJSAppQueryManager _postMediaQueryResultsChangeEventWithApps:]
  -[AMSUIWebJSAppQueryManager _encodeApp:]
  -[AMSUIWebJSAppQueryManager queryAppsWithBundleIDs:startObserving:]
  -[AMSUIWebJSAppQueryManager queryAppsWithStoreItemIDs:startObserving:]
  -[AMSUIWebJSAppQueryManager stopObservingAllApps]
  -[AMSUIWebJSAppQueryManager stopObservingAppsWithBundleIDs:]
  -[AMSUIWebJSAppQueryManager stopObservingAppsWithStoreItemIDs:]


AMSUIWebJSDataProvider : NSObject <AMSUIWebJSAppQueryManagerDelegate, AMSUIWebJSPropertiesDelegate, AMSUIWebJSTelephonyDelegate>
 @property  AMSUIWebView *webView
 @property  AMSUIWebClientContext *context
 @property  AMSUIWebJSProperties *properties
 @property  NSString *otpIdentifier
 @property  AMSUIWebJSAppQueryManager *appQueryManager
 @property  <AMSUIWebJSTelephonyProtocol> *telephony
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebJSDataProvider webView]
  -[AMSUIWebJSDataProvider .cxx_destruct]
  -[AMSUIWebJSDataProvider properties]
  -[AMSUIWebJSDataProvider initWithContext:]
  -[AMSUIWebJSDataProvider setProperties:]
  -[AMSUIWebJSDataProvider setContext:]
  -[AMSUIWebJSDataProvider dealloc]
  -[AMSUIWebJSDataProvider setWebView:]
  -[AMSUIWebJSDataProvider context]
  -[AMSUIWebJSDataProvider _observeNotifications]
  -[AMSUIWebJSDataProvider runJSRequest:]
  -[AMSUIWebJSDataProvider syncProperties]
  -[AMSUIWebJSDataProvider postEvent:options:]
  -[AMSUIWebJSDataProvider telephony]
  -[AMSUIWebJSDataProvider loadPageModelWithInfo:]
  -[AMSUIWebJSDataProvider _postMediaQueryResultsChangeEventWithApps:]
  -[AMSUIWebJSDataProvider appQueryManager:didReceiveApps:]
  -[AMSUIWebJSDataProvider _syncPropertiesScriptWithProperties:]
  -[AMSUIWebJSDataProvider _canInteractWithJS]
  -[AMSUIWebJSDataProvider stopOTPListener]
  -[AMSUIWebJSDataProvider setOtpIdentifier:]
  -[AMSUIWebJSDataProvider otpIdentifier]
  -[AMSUIWebJSDataProvider _postSubscriptionChangedWithType:]
  -[AMSUIWebJSDataProvider _postTelephonyDidChangeEvent]
  -[AMSUIWebJSDataProvider _safariDataUpdate:]
  -[AMSUIWebJSDataProvider _subscriptionStatusChangeActivity:]
  -[AMSUIWebJSDataProvider _subscriptionStatusChangeAppStore:]
  -[AMSUIWebJSDataProvider _subscriptionStatusChangeNews:]
  -[AMSUIWebJSDataProvider _subscriptionStatusChangeMusic:]
  -[AMSUIWebJSDataProvider _subscriptionStatusChangeTV:]
  -[AMSUIWebJSDataProvider _subscriptionStatusChangeiCloud:]
  -[AMSUIWebJSDataProvider _purchaseDidSucceed:]
  -[AMSUIWebJSDataProvider propertiesDidChange:]
  -[AMSUIWebJSDataProvider telephonyDidChange:]
  -[AMSUIWebJSDataProvider appQueryManager]
  -[AMSUIWebJSDataProvider createWebView]
  -[AMSUIWebJSDataProvider runSafariCallback:]
  -[AMSUIWebJSDataProvider startOTPListener]


AMSUIWebJSProperties : NSObject
 @property  AMSUIWebClientContext *context
 @property  NSDictionary *lastAccountsExport
 @property  <AMSUIWebJSPropertiesDelegate> *delegate

  // instance methods
  -[AMSUIWebJSProperties _accountStoreDidChange:]
  -[AMSUIWebJSProperties .cxx_destruct]
  -[AMSUIWebJSProperties setDelegate:]
  -[AMSUIWebJSProperties delegate]
  -[AMSUIWebJSProperties setContext:]
  -[AMSUIWebJSProperties dealloc]
  -[AMSUIWebJSProperties context]
  -[AMSUIWebJSProperties initWithContext:delegate:]
  -[AMSUIWebJSProperties generateProperties]
  -[AMSUIWebJSProperties _lastConnectionReportDidChange:]
  -[AMSUIWebJSProperties _pluginProperties]
  -[AMSUIWebJSProperties _clientOptionsProperties]
  -[AMSUIWebJSProperties _deviceProperties]
  -[AMSUIWebJSProperties _processProperties]
  -[AMSUIWebJSProperties _accountsProperties]
  -[AMSUIWebJSProperties setLastAccountsExport:]
  -[AMSUIWebJSProperties lastAccountsExport]
  -[AMSUIWebJSProperties _propertiesForClientInfo:]
  -[AMSUIWebJSProperties _hexStringFromColor:]


AMSUIWebJSRequest : NSObject <NSSecureCoding>
 @property  NSString *logKey
 @property  NSDictionary *options
 @property  NSString *service

  // class methods
  +[AMSUIWebJSRequest supportsSecureCoding]

  // instance methods
  -[AMSUIWebJSRequest initWithCoder:]
  -[AMSUIWebJSRequest logKey]
  -[AMSUIWebJSRequest options]
  -[AMSUIWebJSRequest setOptions:]
  -[AMSUIWebJSRequest .cxx_destruct]
  -[AMSUIWebJSRequest init]
  -[AMSUIWebJSRequest service]
  -[AMSUIWebJSRequest setLogKey:]
  -[AMSUIWebJSRequest encodeWithCoder:]
  -[AMSUIWebJSRequest initWithServiceName:logKey:]


AMSUIWebJSResponse : NSObject <NSSecureCoding>
 @property  NSDictionary *body
 @property  double duration
 @property  AMSUIWebJSRequest *originalRequest

  // class methods
  +[AMSUIWebJSResponse supportsSecureCoding]

  // instance methods
  -[AMSUIWebJSResponse initWithCoder:]
  -[AMSUIWebJSResponse body]
  -[AMSUIWebJSResponse .cxx_destruct]
  -[AMSUIWebJSResponse originalRequest]
  -[AMSUIWebJSResponse setBody:]
  -[AMSUIWebJSResponse duration]
  -[AMSUIWebJSResponse encodeWithCoder:]
  -[AMSUIWebJSResponse initWithRequest:duration:]


AMSUIWebJSTelephony : NSObject <AMSUIWebJSTelephonyProtocol>
 @property  <AMSUIWebJSTelephonyDelegate> *delegate
 @property  CoreTelephonyClient *telephonyClient
 @property  CTXPCServiceSubscriptionContext *telephonyContext
 @property  BOOL telephonySetupFailed
 @property  NSObject<OS_dispatch_queue> *telephonyQueue
 @property  NSString *countryCode
 @property  NSString *networkCode
 @property  NSString *phoneNumber
 @property  NSString *providerName
 @property  NSString *radioTechnology
 @property  NSString *radioType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIWebJSTelephony _hasRequiredTelephonyEntitlement]
  +[AMSUIWebJSTelephony _hasCellularTelephonyCapability]

  // instance methods
  -[AMSUIWebJSTelephony radioType]
  -[AMSUIWebJSTelephony radioTechnology]
  -[AMSUIWebJSTelephony phoneNumberChanged:]
  -[AMSUIWebJSTelephony providerName]
  -[AMSUIWebJSTelephony countryCode]
  -[AMSUIWebJSTelephony telephonyClient]
  -[AMSUIWebJSTelephony .cxx_destruct]
  -[AMSUIWebJSTelephony setTelephonyClient:]
  -[AMSUIWebJSTelephony setDelegate:]
  -[AMSUIWebJSTelephony phoneNumber]
  -[AMSUIWebJSTelephony init]
  -[AMSUIWebJSTelephony phoneNumberAvailable:]
  -[AMSUIWebJSTelephony initWithDelegate:]
  -[AMSUIWebJSTelephony networkCode]
  -[AMSUIWebJSTelephony operatorNameChanged:name:]
  -[AMSUIWebJSTelephony delegate]
  -[AMSUIWebJSTelephony dealloc]
  -[AMSUIWebJSTelephony invalidate]
  -[AMSUIWebJSTelephony formattedPhoneNumber:]
  -[AMSUIWebJSTelephony telephonyQueue]
  -[AMSUIWebJSTelephony telephonyContext]
  -[AMSUIWebJSTelephony setTelephonyContext:]
  -[AMSUIWebJSTelephony telephonySetupFailed]
  -[AMSUIWebJSTelephony setTelephonySetupFailed:]
  -[AMSUIWebJSTelephony setTelephonyQueue:]


AMSUIWebLoadingPageModel : NSObject <AMSUIWebPageProvider>
 @property  AMSUIWebClientContext *context
 @property  BOOL animateFadeIn
 @property  BOOL disableDelay
 @property  NSString *message
 @property  AMSUIWebNavigationBarModel *navigationBar
 @property  NSString *backgroundColor
 @property  AMSMetricsEvent *impressionEvent
 @property  BOOL disableReappearPlaceholder
 @property  {CGSize=dd} windowSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebLoadingPageModel impressionEvent]
  -[AMSUIWebLoadingPageModel backgroundColor]
  -[AMSUIWebLoadingPageModel .cxx_destruct]
  -[AMSUIWebLoadingPageModel setMessage:]
  -[AMSUIWebLoadingPageModel navigationBar]
  -[AMSUIWebLoadingPageModel initWithContext:]
  -[AMSUIWebLoadingPageModel message]
  -[AMSUIWebLoadingPageModel setContext:]
  -[AMSUIWebLoadingPageModel windowSize]
  -[AMSUIWebLoadingPageModel loadPage]
  -[AMSUIWebLoadingPageModel context]
  -[AMSUIWebLoadingPageModel initWithJSObject:context:]
  -[AMSUIWebLoadingPageModel createViewControllerForContainer:]
  -[AMSUIWebLoadingPageModel disableReappearPlaceholder]
  -[AMSUIWebLoadingPageModel setAnimateFadeIn:]
  -[AMSUIWebLoadingPageModel animateFadeIn]
  -[AMSUIWebLoadingPageModel disableDelay]
  -[AMSUIWebLoadingPageModel setDisableDelay:]


AMSUIWebLoadPluginAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSString *bundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebLoadPluginAction bundleIdentifier]
  -[AMSUIWebLoadPluginAction .cxx_destruct]
  -[AMSUIWebLoadPluginAction initWithJSObject:context:]
  -[AMSUIWebLoadPluginAction runAction]


AMSUIWebLocalApproveAction : AMSUIWebAction
 @property  NSString *itemIdentifier

  // instance methods
  -[AMSUIWebLocalApproveAction setItemIdentifier:]
  -[AMSUIWebLocalApproveAction itemIdentifier]
  -[AMSUIWebLocalApproveAction .cxx_destruct]
  -[AMSUIWebLocalApproveAction initWithJSObject:context:]
  -[AMSUIWebLocalApproveAction runAction]


AMSUIWebLogAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  long long level
 @property  NSString *message
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebLogAction setLevel:]
  -[AMSUIWebLogAction level]
  -[AMSUIWebLogAction .cxx_destruct]
  -[AMSUIWebLogAction setMessage:]
  -[AMSUIWebLogAction message]
  -[AMSUIWebLogAction initWithJSObject:context:]
  -[AMSUIWebLogAction runAction]
  -[AMSUIWebLogAction _logTypeFromLevel:]


AMSUIWebMarketingItemAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  ACAccount *account
 @property  NSString *clientIdentifier
 @property  NSDictionary *contextInfo
 @property  NSString *clientVersion
 @property  NSString *offerHints
 @property  NSString *placement
 @property  NSString *serviceType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebMarketingItemAction placement]
  -[AMSUIWebMarketingItemAction clientVersion]
  -[AMSUIWebMarketingItemAction account]
  -[AMSUIWebMarketingItemAction .cxx_destruct]
  -[AMSUIWebMarketingItemAction offerHints]
  -[AMSUIWebMarketingItemAction clientIdentifier]
  -[AMSUIWebMarketingItemAction contextInfo]
  -[AMSUIWebMarketingItemAction serviceType]
  -[AMSUIWebMarketingItemAction initWithJSObject:context:]
  -[AMSUIWebMarketingItemAction runAction]


AMSUIWebMediaAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSArray *bundleIdentifiers
 @property  NSString *clientIdentifier
 @property  NSString *clientVersion
 @property  NSArray *itemIdentifiers
 @property  NSArray *includedResultKeys
 @property  long long type
 @property  NSString *urlString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebMediaAction urlString]
  -[AMSUIWebMediaAction clientVersion]
  -[AMSUIWebMediaAction itemIdentifiers]
  -[AMSUIWebMediaAction setUrlString:]
  -[AMSUIWebMediaAction setType:]
  -[AMSUIWebMediaAction .cxx_destruct]
  -[AMSUIWebMediaAction setBundleIdentifiers:]
  -[AMSUIWebMediaAction includedResultKeys]
  -[AMSUIWebMediaAction setIncludedResultKeys:]
  -[AMSUIWebMediaAction setItemIdentifiers:]
  -[AMSUIWebMediaAction bundleIdentifiers]
  -[AMSUIWebMediaAction clientIdentifier]
  -[AMSUIWebMediaAction type]
  -[AMSUIWebMediaAction setClientVersion:]
  -[AMSUIWebMediaAction setClientIdentifier:]
  -[AMSUIWebMediaAction initWithJSObject:context:]
  -[AMSUIWebMediaAction runAction]
  -[AMSUIWebMediaAction _runMediaRequestWithURL:clientIdentifier:clientVersion:]
  -[AMSUIWebMediaAction _runMediaRequestWithType:clientIdentifier:clientVersion:]


AMSUIWebMediaQueryAction : AMSUIWebAction
 @property  NSArray *bundleIDs
 @property  NSNumber *observing
 @property  NSArray *storeItemIDs

  // instance methods
  -[AMSUIWebMediaQueryAction setBundleIDs:]
  -[AMSUIWebMediaQueryAction bundleIDs]
  -[AMSUIWebMediaQueryAction .cxx_destruct]
  -[AMSUIWebMediaQueryAction observing]
  -[AMSUIWebMediaQueryAction setObserving:]
  -[AMSUIWebMediaQueryAction initWithJSObject:context:]
  -[AMSUIWebMediaQueryAction runAction]
  -[AMSUIWebMediaQueryAction storeItemIDs]
  -[AMSUIWebMediaQueryAction setStoreItemIDs:]


AMSUIWebMetricsAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSArray *events
 @property  BOOL shouldFlush
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebMetricsAction events]
  -[AMSUIWebMetricsAction .cxx_destruct]
  -[AMSUIWebMetricsAction setEvents:]
  -[AMSUIWebMetricsAction initWithJSObject:context:]
  -[AMSUIWebMetricsAction runAction]
  -[AMSUIWebMetricsAction shouldFlush]
  -[AMSUIWebMetricsAction setShouldFlush:]


AMSUIWebMetricsEvent : AMSMetricsEvent
  // instance methods
  -[AMSUIWebMetricsEvent initWithJSObject:context:]


AMSUIWebModel : NSObject
  // class methods
  +[AMSUIWebModel backgroundColorFromPageModel:]
  +[AMSUIWebModel impressionEventFromPageModel:context:]
  +[AMSUIWebModel navigationBarFromPageModel:context:]
  +[AMSUIWebModel windowSizeFromPageModel:]
  +[AMSUIWebModel windowSizeFromJSObject:key:]
  +[AMSUIWebModel pageModelFromJSObject:context:]


AMSUIWebNavigationBarModel : NSObject <AMSUIWebModelInterface>
 @property  NSString *backButtonTitle
 @property  NSString *backgroundColor
 @property  long long backgroundStyle
 @property  BOOL hidesBackButton
 @property  BOOL includesLeftItems
 @property  BOOL includesRightItems
 @property  AMSUIWebButtonModel *leftButton
 @property  NSArray *leftButtons
 @property  AMSUIWebButtonModel *rightButton
 @property  NSArray *rightButtons
 @property  long long style
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebNavigationBarModel leftButton]
  -[AMSUIWebNavigationBarModel setLeftButton:]
  -[AMSUIWebNavigationBarModel setBackgroundStyle:]
  -[AMSUIWebNavigationBarModel setTitle:]
  -[AMSUIWebNavigationBarModel backgroundColor]
  -[AMSUIWebNavigationBarModel backgroundStyle]
  -[AMSUIWebNavigationBarModel .cxx_destruct]
  -[AMSUIWebNavigationBarModel setStyle:]
  -[AMSUIWebNavigationBarModel setRightButton:]
  -[AMSUIWebNavigationBarModel setBackgroundColor:]
  -[AMSUIWebNavigationBarModel title]
  -[AMSUIWebNavigationBarModel hidesBackButton]
  -[AMSUIWebNavigationBarModel backButtonTitle]
  -[AMSUIWebNavigationBarModel rightButton]
  -[AMSUIWebNavigationBarModel setBackButtonTitle:]
  -[AMSUIWebNavigationBarModel setHidesBackButton:]
  -[AMSUIWebNavigationBarModel style]
  -[AMSUIWebNavigationBarModel initWithJSObject:context:]
  -[AMSUIWebNavigationBarModel leftButtons]
  -[AMSUIWebNavigationBarModel rightButtons]
  -[AMSUIWebNavigationBarModel includesLeftItems]
  -[AMSUIWebNavigationBarModel includesRightItems]
  -[AMSUIWebNavigationBarModel setLeftButtons:]
  -[AMSUIWebNavigationBarModel setRightButtons:]


AMSUIWebNetworkAction : AMSUIWebAction
 @property  ACAccount *account
 @property  NSString *body
 @property  NSString *gsTokenIdentifier
 @property  NSDictionary *headers
 @property  BOOL includeAuthKitTokens
 @property  BOOL includeiCloudTokens
 @property  NSString *method
 @property  BOOL requiresCellularAccess
 @property  NSString *signatureData
 @property  NSURL *URL
 @property  BOOL usePrimaryKeychain

  // instance methods
  -[AMSUIWebNetworkAction gsTokenIdentifier]
  -[AMSUIWebNetworkAction method]
  -[AMSUIWebNetworkAction setAccount:]
  -[AMSUIWebNetworkAction setGsTokenIdentifier:]
  -[AMSUIWebNetworkAction account]
  -[AMSUIWebNetworkAction body]
  -[AMSUIWebNetworkAction setURL:]
  -[AMSUIWebNetworkAction .cxx_destruct]
  -[AMSUIWebNetworkAction setSignatureData:]
  -[AMSUIWebNetworkAction setHeaders:]
  -[AMSUIWebNetworkAction setMethod:]
  -[AMSUIWebNetworkAction URL]
  -[AMSUIWebNetworkAction signatureData]
  -[AMSUIWebNetworkAction headers]
  -[AMSUIWebNetworkAction setBody:]
  -[AMSUIWebNetworkAction initWithJSObject:context:]
  -[AMSUIWebNetworkAction runAction]
  -[AMSUIWebNetworkAction includeAuthKitTokens]
  -[AMSUIWebNetworkAction includeiCloudTokens]
  -[AMSUIWebNetworkAction usePrimaryKeychain]
  -[AMSUIWebNetworkAction _createSession]
  -[AMSUIWebNetworkAction requiresCellularAccess]
  -[AMSUIWebNetworkAction setIncludeAuthKitTokens:]
  -[AMSUIWebNetworkAction setIncludeiCloudTokens:]
  -[AMSUIWebNetworkAction setRequiresCellularAccess:]
  -[AMSUIWebNetworkAction setUsePrimaryKeychain:]


AMSUIWebODIAssessmentAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSDictionary *additionalAttributes
 @property  NSString *rawAccountType
 @property  NSString *rawBundleIdentifer
 @property  NSString *rawSessionIdentifer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebODIAssessmentAction setAdditionalAttributes:]
  -[AMSUIWebODIAssessmentAction .cxx_destruct]
  -[AMSUIWebODIAssessmentAction additionalAttributes]
  -[AMSUIWebODIAssessmentAction initWithJSObject:context:]
  -[AMSUIWebODIAssessmentAction runAction]
  -[AMSUIWebODIAssessmentAction rawAccountType]
  -[AMSUIWebODIAssessmentAction accountTypeForString:]
  -[AMSUIWebODIAssessmentAction rawSessionIdentifer]
  -[AMSUIWebODIAssessmentAction sessionIdentifierForString:]
  -[AMSUIWebODIAssessmentAction rawBundleIdentifer]
  -[AMSUIWebODIAssessmentAction setRawAccountType:]
  -[AMSUIWebODIAssessmentAction setRawBundleIdentifer:]
  -[AMSUIWebODIAssessmentAction setRawSessionIdentifer:]


AMSUIWebODIAssessmentFeedbackAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSString *cacheIdentifier
 @property  unsigned long outcome
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebODIAssessmentFeedbackAction .cxx_destruct]
  -[AMSUIWebODIAssessmentFeedbackAction setCacheIdentifier:]
  -[AMSUIWebODIAssessmentFeedbackAction cacheIdentifier]
  -[AMSUIWebODIAssessmentFeedbackAction setOutcome:]
  -[AMSUIWebODIAssessmentFeedbackAction outcome]
  -[AMSUIWebODIAssessmentFeedbackAction initWithJSObject:context:]
  -[AMSUIWebODIAssessmentFeedbackAction runAction]


AMSUIWebOpenApplicationAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSString *bundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebOpenApplicationAction bundleIdentifier]
  -[AMSUIWebOpenApplicationAction .cxx_destruct]
  -[AMSUIWebOpenApplicationAction setBundleIdentifier:]
  -[AMSUIWebOpenApplicationAction initWithJSObject:context:]
  -[AMSUIWebOpenApplicationAction runAction]


AMSUIWebOpenFamilyCircleAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSString *clientName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebOpenFamilyCircleAction .cxx_destruct]
  -[AMSUIWebOpenFamilyCircleAction setClientName:]
  -[AMSUIWebOpenFamilyCircleAction clientName]
  -[AMSUIWebOpenFamilyCircleAction initWithJSObject:context:]
  -[AMSUIWebOpenFamilyCircleAction runAction]


AMSUIWebOpenSafariAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  NSString *callbackScheme
 @property  NSDictionary *data
 @property  UIViewController *presentedViewController
 @property  NSURL *URL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIWebOpenSafariAction resultFromURL:error:]

  // instance methods
  -[AMSUIWebOpenSafariAction setURL:]
  -[AMSUIWebOpenSafariAction .cxx_destruct]
  -[AMSUIWebOpenSafariAction data]
  -[AMSUIWebOpenSafariAction URL]
  -[AMSUIWebOpenSafariAction setPresentedViewController:]
  -[AMSUIWebOpenSafariAction setData:]
  -[AMSUIWebOpenSafariAction presentedViewController]
  -[AMSUIWebOpenSafariAction initWithJSObject:context:]
  -[AMSUIWebOpenSafariAction runAction]
  -[AMSUIWebOpenSafariAction callbackScheme]
  -[AMSUIWebOpenSafariAction _presentViewContoller:]
  -[AMSUIWebOpenSafariAction setCallbackScheme:]


AMSUIWebOpenURLAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  long long type
 @property  NSURL *URL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIWebOpenURLAction _openUniversalLink:]
  +[AMSUIWebOpenURLAction _openIgnoringOverrides:]

  // instance methods
  -[AMSUIWebOpenURLAction setType:]
  -[AMSUIWebOpenURLAction setURL:]
  -[AMSUIWebOpenURLAction .cxx_destruct]
  -[AMSUIWebOpenURLAction URL]
  -[AMSUIWebOpenURLAction type]
  -[AMSUIWebOpenURLAction initWithJSObject:context:]
  -[AMSUIWebOpenURLAction runAction]


AMSUIWebOTPAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  BOOL enabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebOTPAction enabled]
  -[AMSUIWebOTPAction setEnabled:]
  -[AMSUIWebOTPAction initWithJSObject:context:]
  -[AMSUIWebOTPAction runAction]


AMSUIWebPageModel : NSObject <AMSUIWebPageProvider>
 @property  AMSUIWebClientContext *context
 @property  BOOL ignoreBottomSafeArea
 @property  BOOL ignoreTopSafeArea
 @property  AMSUIWebToolbarModel *toolbar
 @property  AMSUIWebNavigationBarModel *navigationBar
 @property  NSString *backgroundColor
 @property  AMSMetricsEvent *impressionEvent
 @property  BOOL disableReappearPlaceholder
 @property  {CGSize=dd} windowSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebPageModel impressionEvent]
  -[AMSUIWebPageModel backgroundColor]
  -[AMSUIWebPageModel .cxx_destruct]
  -[AMSUIWebPageModel navigationBar]
  -[AMSUIWebPageModel toolbar]
  -[AMSUIWebPageModel setToolbar:]
  -[AMSUIWebPageModel setContext:]
  -[AMSUIWebPageModel windowSize]
  -[AMSUIWebPageModel loadPage]
  -[AMSUIWebPageModel context]
  -[AMSUIWebPageModel initWithJSObject:context:]
  -[AMSUIWebPageModel createViewControllerForContainer:]
  -[AMSUIWebPageModel disableReappearPlaceholder]
  -[AMSUIWebPageModel ignoreBottomSafeArea]
  -[AMSUIWebPageModel setIgnoreBottomSafeArea:]
  -[AMSUIWebPageModel ignoreTopSafeArea]
  -[AMSUIWebPageModel setIgnoreTopSafeArea:]


AMSUIWebPageViewController : AMSUICommonViewController <AMSUIWebPagePresenter>
 @property  AMSUIWebAppearance *appearance
 @property  AMSUIWebClientContext *context
 @property  {CGSize=dd} contentSize
 @property  AMSUIWebPageModel *model
 @property  NSURL *URL
 @property  UIToolbar *toolbar
 @property  <AMSUIWebPageViewControllerDelegate> *delegate
 @property  AMSUIWebView *webView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebPageViewController webView]
  -[AMSUIWebPageViewController _updateLayout]
  -[AMSUIWebPageViewController viewWillLayoutSubviews]
  -[AMSUIWebPageViewController contentSize]
  -[AMSUIWebPageViewController appearance]
  -[AMSUIWebPageViewController setURL:]
  -[AMSUIWebPageViewController .cxx_destruct]
  -[AMSUIWebPageViewController setDelegate:]
  -[AMSUIWebPageViewController viewDidAppear:]
  -[AMSUIWebPageViewController toolbar]
  -[AMSUIWebPageViewController setToolbar:]
  -[AMSUIWebPageViewController model]
  -[AMSUIWebPageViewController URL]
  -[AMSUIWebPageViewController viewWillAppear:]
  -[AMSUIWebPageViewController delegate]
  -[AMSUIWebPageViewController setModel:]
  -[AMSUIWebPageViewController loadView]
  -[AMSUIWebPageViewController loadRequest:]
  -[AMSUIWebPageViewController setContentSize:]
  -[AMSUIWebPageViewController context]
  -[AMSUIWebPageViewController _applyAppearance]
  -[AMSUIWebPageViewController willPresentPageModel:appearance:]
  -[AMSUIWebPageViewController _willEncodeRequest:]
  -[AMSUIWebPageViewController _didEncodeRequest:]
  -[AMSUIWebPageViewController _downloadHTMLForRequest:completion:]
  -[AMSUIWebPageViewController _didTapLeftToolbarButton:]
  -[AMSUIWebPageViewController _didTapRightToolbarButton:]
  -[AMSUIWebPageViewController initWithContext:dataProvider:]


AMSUIWebPaymentSetupAction : AMSUIWebAction
 @property  NSString *referrerIdentifier

  // instance methods
  -[AMSUIWebPaymentSetupAction .cxx_destruct]
  -[AMSUIWebPaymentSetupAction referrerIdentifier]
  -[AMSUIWebPaymentSetupAction setReferrerIdentifier:]
  -[AMSUIWebPaymentSetupAction initWithJSObject:context:]
  -[AMSUIWebPaymentSetupAction runAction]


AMSUIWebPlaceholderViewController : AMSUICommonViewController <AMSUIWebPagePresenter>
 @property  AMSUIWebClientContext *context
 @property  BOOL hasAppeared
 @property  BOOL isVisible
 @property  AMSUILoadingView *loadingView
 @property  BOOL shouldSnapshot
 @property  AMSBinaryPromise *snapshotPromise
 @property  UIView *snapshotView
 @property  UIView *visibleView
 @property  BOOL animateFadeIn
 @property  AMSUIWebAppearance *appearance
 @property  AMSUIWebLoadingPageModel *model
 @property  UIViewController<AMSUIWebPagePresenter> *originalViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebPlaceholderViewController viewWillLayoutSubviews]
  -[AMSUIWebPlaceholderViewController appearance]
  -[AMSUIWebPlaceholderViewController shouldSnapshot]
  -[AMSUIWebPlaceholderViewController snapshotView]
  -[AMSUIWebPlaceholderViewController .cxx_destruct]
  -[AMSUIWebPlaceholderViewController hasAppeared]
  -[AMSUIWebPlaceholderViewController viewDidAppear:]
  -[AMSUIWebPlaceholderViewController isVisible]
  -[AMSUIWebPlaceholderViewController setAppearance:]
  -[AMSUIWebPlaceholderViewController initWithContext:]
  -[AMSUIWebPlaceholderViewController visibleView]
  -[AMSUIWebPlaceholderViewController model]
  -[AMSUIWebPlaceholderViewController viewWillAppear:]
  -[AMSUIWebPlaceholderViewController setModel:]
  -[AMSUIWebPlaceholderViewController setContext:]
  -[AMSUIWebPlaceholderViewController dealloc]
  -[AMSUIWebPlaceholderViewController setSnapshotView:]
  -[AMSUIWebPlaceholderViewController loadView]
  -[AMSUIWebPlaceholderViewController viewDidDisappear:]
  -[AMSUIWebPlaceholderViewController context]
  -[AMSUIWebPlaceholderViewController setLoadingView:]
  -[AMSUIWebPlaceholderViewController loadingView]
  -[AMSUIWebPlaceholderViewController setIsVisible:]
  -[AMSUIWebPlaceholderViewController setHasAppeared:]
  -[AMSUIWebPlaceholderViewController _applyAppearance]
  -[AMSUIWebPlaceholderViewController willPresentPageModel:appearance:]
  -[AMSUIWebPlaceholderViewController willAppearAfterDismiss]
  -[AMSUIWebPlaceholderViewController initWithModel:context:appearance:]
  -[AMSUIWebPlaceholderViewController setAnimateFadeIn:]
  -[AMSUIWebPlaceholderViewController initWithSnapshot:context:appearance:]
  -[AMSUIWebPlaceholderViewController setOriginalViewController:]
  -[AMSUIWebPlaceholderViewController awaitSnapshotWithCompletion:]
  -[AMSUIWebPlaceholderViewController animateFadeIn]
  -[AMSUIWebPlaceholderViewController snapshotPromise]
  -[AMSUIWebPlaceholderViewController _transitionToLoadingAnimated:]
  -[AMSUIWebPlaceholderViewController _transitionToSnapshot]
  -[AMSUIWebPlaceholderViewController _startReappearTransitionTimerAnimated:]
  -[AMSUIWebPlaceholderViewController setVisibleView:]
  -[AMSUIWebPlaceholderViewController _replacePrimaryViewWithView:animated:]
  -[AMSUIWebPlaceholderViewController originalViewController]
  -[AMSUIWebPlaceholderViewController setShouldSnapshot:]
  -[AMSUIWebPlaceholderViewController setSnapshotPromise:]


AMSUIWebPluginAction : AMSUIWebAction
 @property  NSString *actionIdentifier
 @property  NSString *bundleIdentifier
 @property  NSDictionary *options

  // instance methods
  -[AMSUIWebPluginAction bundleIdentifier]
  -[AMSUIWebPluginAction options]
  -[AMSUIWebPluginAction .cxx_destruct]
  -[AMSUIWebPluginAction actionIdentifier]
  -[AMSUIWebPluginAction initWithJSObject:context:]
  -[AMSUIWebPluginAction runAction]


AMSUIWebPluginConfiguration : NSObject <NSSecureCoding>
 @property  NSString *logKey

  // class methods
  +[AMSUIWebPluginConfiguration supportsSecureCoding]

  // instance methods
  -[AMSUIWebPluginConfiguration initWithCoder:]
  -[AMSUIWebPluginConfiguration logKey]
  -[AMSUIWebPluginConfiguration .cxx_destruct]
  -[AMSUIWebPluginConfiguration setLogKey:]
  -[AMSUIWebPluginConfiguration encodeWithCoder:]


AMSUIWebPluginLoader : NSObject
 @property  AMSUIWebClientContext *context
 @property  NSDictionary *installedPluginURLs
 @property  NSMutableDictionary *loadedPluginsMap
 @property  NSArray *loadedPlugins

  // instance methods
  -[AMSUIWebPluginLoader .cxx_destruct]
  -[AMSUIWebPluginLoader initWithContext:]
  -[AMSUIWebPluginLoader context]
  -[AMSUIWebPluginLoader pluginForBundleIdentifier:]
  -[AMSUIWebPluginLoader loadedPlugins]
  -[AMSUIWebPluginLoader _loadInstalledPlugins]
  -[AMSUIWebPluginLoader loadedPluginsMap]
  -[AMSUIWebPluginLoader installedPluginURLs]
  -[AMSUIWebPluginLoader setLoadedPluginsMap:]


AMSUIWebPresentPrivacySplashAction : AMSUIWebAction
 @property  NSString *privacyIdentifier

  // instance methods
  -[AMSUIWebPresentPrivacySplashAction .cxx_destruct]
  -[AMSUIWebPresentPrivacySplashAction initWithJSObject:context:]
  -[AMSUIWebPresentPrivacySplashAction runAction]
  -[AMSUIWebPresentPrivacySplashAction privacyIdentifier]
  -[AMSUIWebPresentPrivacySplashAction setPrivacyIdentifier:]


AMSUIWebProtocolHandler : AMSURLProtocolHandler
 @property  <AMSUIWebProtocolDelegate> *delegate

  // instance methods
  -[AMSUIWebProtocolHandler .cxx_destruct]
  -[AMSUIWebProtocolHandler setDelegate:]
  -[AMSUIWebProtocolHandler reconfigureNewRequest:originalTask:redirect:error:]
  -[AMSUIWebProtocolHandler delegate]


AMSUIWebRemoveDeviceOfferAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  ACAccount *account
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebRemoveDeviceOfferAction setAccount:]
  -[AMSUIWebRemoveDeviceOfferAction account]
  -[AMSUIWebRemoveDeviceOfferAction .cxx_destruct]
  -[AMSUIWebRemoveDeviceOfferAction identifier]
  -[AMSUIWebRemoveDeviceOfferAction setIdentifier:]
  -[AMSUIWebRemoveDeviceOfferAction initWithJSObject:context:]
  -[AMSUIWebRemoveDeviceOfferAction runAction]


AMSUIWebRestrictedFeatureAction : AMSUIWebAction
 @property  NSString *identifier
 @property  NSNumber *enabled

  // instance methods
  -[AMSUIWebRestrictedFeatureAction .cxx_destruct]
  -[AMSUIWebRestrictedFeatureAction enabled]
  -[AMSUIWebRestrictedFeatureAction _featureWithIdentifier:]
  -[AMSUIWebRestrictedFeatureAction identifier]
  -[AMSUIWebRestrictedFeatureAction setIdentifier:]
  -[AMSUIWebRestrictedFeatureAction setEnabled:]
  -[AMSUIWebRestrictedFeatureAction initWithJSObject:context:]
  -[AMSUIWebRestrictedFeatureAction runAction]


AMSUIWebRoutePageModel : NSObject <AMSUIWebPageProvider>
 @property  NSDictionary *clientOptions
 @property  AMSUIWebClientContext *context
 @property  NSURL *URL
 @property  AMSUIWebWrapperViewController *viewController
 @property  AMSUIWebNavigationBarModel *navigationBar
 @property  NSString *backgroundColor
 @property  AMSMetricsEvent *impressionEvent
 @property  BOOL disableReappearPlaceholder
 @property  {CGSize=dd} windowSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebRoutePageModel viewController]
  -[AMSUIWebRoutePageModel impressionEvent]
  -[AMSUIWebRoutePageModel backgroundColor]
  -[AMSUIWebRoutePageModel .cxx_destruct]
  -[AMSUIWebRoutePageModel navigationBar]
  -[AMSUIWebRoutePageModel URL]
  -[AMSUIWebRoutePageModel windowSize]
  -[AMSUIWebRoutePageModel setViewController:]
  -[AMSUIWebRoutePageModel loadPage]
  -[AMSUIWebRoutePageModel context]
  -[AMSUIWebRoutePageModel clientOptions]
  -[AMSUIWebRoutePageModel initWithJSObject:context:]
  -[AMSUIWebRoutePageModel createViewControllerForContainer:]
  -[AMSUIWebRoutePageModel disableReappearPlaceholder]
  -[AMSUIWebRoutePageModel _webPageViewController]


AMSUIWebSafariPageModel : AMSUIWebModel <AMSUIWebPageProvider>
 @property  AMSUIWebClientContext *context
 @property  NSString *callbackScheme
 @property  NSDictionary *data
 @property  BOOL hideToolBar
 @property  AMSUIWebLoadingPageModel *loadingModel
 @property  BOOL showShareButton
 @property  NSURL *URL
 @property  AMSUIWebNavigationBarModel *navigationBar
 @property  NSString *backgroundColor
 @property  AMSMetricsEvent *impressionEvent
 @property  BOOL disableReappearPlaceholder
 @property  {CGSize=dd} windowSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebSafariPageModel impressionEvent]
  -[AMSUIWebSafariPageModel backgroundColor]
  -[AMSUIWebSafariPageModel setURL:]
  -[AMSUIWebSafariPageModel .cxx_destruct]
  -[AMSUIWebSafariPageModel navigationBar]
  -[AMSUIWebSafariPageModel data]
  -[AMSUIWebSafariPageModel URL]
  -[AMSUIWebSafariPageModel setData:]
  -[AMSUIWebSafariPageModel windowSize]
  -[AMSUIWebSafariPageModel loadPage]
  -[AMSUIWebSafariPageModel context]
  -[AMSUIWebSafariPageModel initWithJSObject:context:]
  -[AMSUIWebSafariPageModel createViewControllerForContainer:]
  -[AMSUIWebSafariPageModel disableReappearPlaceholder]
  -[AMSUIWebSafariPageModel callbackScheme]
  -[AMSUIWebSafariPageModel setCallbackScheme:]
  -[AMSUIWebSafariPageModel hideToolBar]
  -[AMSUIWebSafariPageModel setHideToolBar:]
  -[AMSUIWebSafariPageModel loadingModel]
  -[AMSUIWebSafariPageModel setLoadingModel:]
  -[AMSUIWebSafariPageModel showShareButton]
  -[AMSUIWebSafariPageModel setShowShareButton:]


AMSUIWebSafariViewController : AMSUICommonViewController <WKNavigationDelegate, AMSUIWebSafariWebDelegate, UIAdaptivePresentationControllerDelegate, AMSUIWebPagePresenter>
 @property  AMSUIWebAppearance *appearance
 @property  AMSUIWebClientContext *context
 @property  BOOL didHandleDismiss
 @property  UIViewController *placeholderPage
 @property  AMSUIWebSafariPageModel *model
 @property  long long pageState
 @property  BOOL performingNavigation
 @property  UIToolbar *toolbar
 @property  UIBarButtonItem *toolbarLeft
 @property  UIBarButtonItem *toolbarRight
 @property  AMSUIWebSafariWebView *webView
 @property  @? actionHandler
 @property  NSURL *originalURL
 @property  BOOL shouldDismissOnCallback
 @property  BOOL shouldSetPresentationDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebSafariViewController webView:didFinishNavigation:]
  -[AMSUIWebSafariViewController actionHandler]
  -[AMSUIWebSafariViewController webView]
  -[AMSUIWebSafariViewController _share:]
  -[AMSUIWebSafariViewController presentationControllerDidDismiss:]
  -[AMSUIWebSafariViewController originalURL]
  -[AMSUIWebSafariViewController viewWillLayoutSubviews]
  -[AMSUIWebSafariViewController setActionHandler:]
  -[AMSUIWebSafariViewController appearance]
  -[AMSUIWebSafariViewController _pop]
  -[AMSUIWebSafariViewController webView:didStartProvisionalNavigation:]
  -[AMSUIWebSafariViewController webView:didCommitNavigation:]
  -[AMSUIWebSafariViewController .cxx_destruct]
  -[AMSUIWebSafariViewController _dismiss]
  -[AMSUIWebSafariViewController _updateButtons]
  -[AMSUIWebSafariViewController _back:]
  -[AMSUIWebSafariViewController setAppearance:]
  -[AMSUIWebSafariViewController toolbar]
  -[AMSUIWebSafariViewController initWithContext:]
  -[AMSUIWebSafariViewController model]
  -[AMSUIWebSafariViewController viewWillAppear:]
  -[AMSUIWebSafariViewController _cancel:]
  -[AMSUIWebSafariViewController webView:stopURLSchemeTask:]
  -[AMSUIWebSafariViewController webView:decidePolicyForNavigationAction:decisionHandler:]
  -[AMSUIWebSafariViewController dealloc]
  -[AMSUIWebSafariViewController _refresh:]
  -[AMSUIWebSafariViewController loadView]
  -[AMSUIWebSafariViewController viewDidDisappear:]
  -[AMSUIWebSafariViewController context]
  -[AMSUIWebSafariViewController pageState]
  -[AMSUIWebSafariViewController _handleDismiss]
  -[AMSUIWebSafariViewController setPageState:]
  -[AMSUIWebSafariViewController willPresentPageModel:appearance:]
  -[AMSUIWebSafariViewController setShouldDismissOnCallback:]
  -[AMSUIWebSafariViewController loadActionURL:data:callbackScheme:actionHandler:]
  -[AMSUIWebSafariViewController setShouldSetPresentationDelegate:]
  -[AMSUIWebSafariViewController _startLoadingWebView]
  -[AMSUIWebSafariViewController _transitionToLoading]
  -[AMSUIWebSafariViewController _transitionToWebView]
  -[AMSUIWebSafariViewController _setupPageForWebView]
  -[AMSUIWebSafariViewController shouldSetPresentationDelegate]
  -[AMSUIWebSafariViewController placeholderPage]
  -[AMSUIWebSafariViewController _finishedLoadingWithSuccess:]
  -[AMSUIWebSafariViewController _callActionHandlerWithURL:error:]
  -[AMSUIWebSafariViewController didHandleDismiss]
  -[AMSUIWebSafariViewController shouldDismissOnCallback]
  -[AMSUIWebSafariViewController setDidHandleDismiss:]
  -[AMSUIWebSafariViewController setPerformingNavigation:]
  -[AMSUIWebSafariViewController _forward:]
  -[AMSUIWebSafariViewController _transitionToErrorViewWithError:]
  -[AMSUIWebSafariViewController setPlaceholderPage:]
  -[AMSUIWebSafariViewController _createToolBar]
  -[AMSUIWebSafariViewController performingNavigation]
  -[AMSUIWebSafariViewController _setupSafariNavBarWithSpinner:]
  -[AMSUIWebSafariViewController _presentPlaceholderModel:]
  -[AMSUIWebSafariViewController _startErrorTimer]
  -[AMSUIWebSafariViewController toolbarLeft]
  -[AMSUIWebSafariViewController toolbarRight]
  -[AMSUIWebSafariViewController safariView:didReceiveAction:body:replyHandler:]
  -[AMSUIWebSafariViewController safariView:didRedirectToSchemeWithURL:]


AMSUIWebSafariWebView : WKWebView <WKURLSchemeHandler, WKScriptMessageHandlerWithReply>
 @property  NSString *logKey
 @property  <WKNavigationDelegate><WKScriptMessageHandlerWithReply><WKURLSchemeHandler><AMSUIWebSafariWebDelegate> *safariDelegate
 @property  NSString *scheme
 @property  double topInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIWebSafariWebView _createContentControllerWithScheme:data:messageHandler:]

  // instance methods
  -[AMSUIWebSafariWebView topInset]
  -[AMSUIWebSafariWebView logKey]
  -[AMSUIWebSafariWebView .cxx_destruct]
  -[AMSUIWebSafariWebView scheme]
  -[AMSUIWebSafariWebView webView:startURLSchemeTask:]
  -[AMSUIWebSafariWebView setScheme:]
  -[AMSUIWebSafariWebView webView:stopURLSchemeTask:]
  -[AMSUIWebSafariWebView userContentController:didReceiveScriptMessage:replyHandler:]
  -[AMSUIWebSafariWebView setLogKey:]
  -[AMSUIWebSafariWebView setTopInset:]
  -[AMSUIWebSafariWebView initWithAppearance:scheme:data:delegate:]
  -[AMSUIWebSafariWebView safariDelegate]
  -[AMSUIWebSafariWebView setSafariDelegate:]


AMSUIWebSendSMSAction : AMSUIWebAction
 @property  NSString *body
 @property  NSString *countryCode
 @property  NSString *digits

  // instance methods
  -[AMSUIWebSendSMSAction setCountryCode:]
  -[AMSUIWebSendSMSAction body]
  -[AMSUIWebSendSMSAction countryCode]
  -[AMSUIWebSendSMSAction .cxx_destruct]
  -[AMSUIWebSendSMSAction setDigits:]
  -[AMSUIWebSendSMSAction digits]
  -[AMSUIWebSendSMSAction setBody:]
  -[AMSUIWebSendSMSAction initWithJSObject:context:]
  -[AMSUIWebSendSMSAction runAction]
  -[AMSUIWebSendSMSAction telephonyAccessPatterns]


AMSUIWebSnapshotView : AMSUICommonView
 @property  UIView *snapshot
 @property  double originalRatio
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} originalSnapshotFrame
 @property  long long originalInterfaceStyle
 @property  unsigned long visibilityModifiers

  // class methods
  +[AMSUIWebSnapshotView _screenCapFromView:completion:]
  +[AMSUIWebSnapshotView _imageViewForImage:]

  // instance methods
  -[AMSUIWebSnapshotView traitCollectionDidChange:]
  -[AMSUIWebSnapshotView setSnapshot:]
  -[AMSUIWebSnapshotView .cxx_destruct]
  -[AMSUIWebSnapshotView layoutSubviews]
  -[AMSUIWebSnapshotView _updateSnapshot:]
  -[AMSUIWebSnapshotView snapshot]
  -[AMSUIWebSnapshotView initWithView:completion:]
  -[AMSUIWebSnapshotView setOriginalSnapshotFrame:]
  -[AMSUIWebSnapshotView originalRatio]
  -[AMSUIWebSnapshotView setOriginalRatio:]
  -[AMSUIWebSnapshotView visibilityModifiers]
  -[AMSUIWebSnapshotView setVisibilityModifiers:]
  -[AMSUIWebSnapshotView _visibilityUnmodified]
  -[AMSUIWebSnapshotView originalSnapshotFrame]
  -[AMSUIWebSnapshotView originalInterfaceStyle]
  -[AMSUIWebSnapshotView setOriginalInterfaceStyle:]


AMSUIWebSubscriptionAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  long long cachePolicy
 @property  BOOL extendedCarrierCheck
 @property  long long mediaType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebSubscriptionAction setMediaType:]
  -[AMSUIWebSubscriptionAction setCachePolicy:]
  -[AMSUIWebSubscriptionAction cachePolicy]
  -[AMSUIWebSubscriptionAction extendedCarrierCheck]
  -[AMSUIWebSubscriptionAction mediaType]
  -[AMSUIWebSubscriptionAction setExtendedCarrierCheck:]
  -[AMSUIWebSubscriptionAction initWithJSObject:context:]
  -[AMSUIWebSubscriptionAction runAction]


AMSUIWebToolbarModel : NSObject <AMSUIWebModelInterface>
 @property  AMSUIWebButtonModel *leftButton
 @property  AMSUIWebButtonModel *rightButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebToolbarModel leftButton]
  -[AMSUIWebToolbarModel setLeftButton:]
  -[AMSUIWebToolbarModel .cxx_destruct]
  -[AMSUIWebToolbarModel setRightButton:]
  -[AMSUIWebToolbarModel rightButton]
  -[AMSUIWebToolbarModel initWithJSObject:context:]


AMSUIWebVerifyCredentialsAction : AMSUIWebAction <AMSUIWebActionRunnable>
 @property  ACAccount *account
 @property  NSString *authenticationType
 @property  NSString *buttonText
 @property  BOOL ephemeral
 @property  long long serviceType
 @property  NSString *serviceIdentifier
 @property  NSString *subtitle
 @property  NSString *title
 @property  BOOL usernameEditable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIWebVerifyCredentialsAction _serviceTypeFromType:]
  +[AMSUIWebVerifyCredentialsAction _authenticationTypeFromStringedType:]

  // instance methods
  -[AMSUIWebVerifyCredentialsAction setAccount:]
  -[AMSUIWebVerifyCredentialsAction setAuthenticationType:]
  -[AMSUIWebVerifyCredentialsAction account]
  -[AMSUIWebVerifyCredentialsAction setServiceIdentifier:]
  -[AMSUIWebVerifyCredentialsAction ephemeral]
  -[AMSUIWebVerifyCredentialsAction setTitle:]
  -[AMSUIWebVerifyCredentialsAction serviceIdentifier]
  -[AMSUIWebVerifyCredentialsAction setServiceType:]
  -[AMSUIWebVerifyCredentialsAction buttonText]
  -[AMSUIWebVerifyCredentialsAction setButtonText:]
  -[AMSUIWebVerifyCredentialsAction .cxx_destruct]
  -[AMSUIWebVerifyCredentialsAction setEphemeral:]
  -[AMSUIWebVerifyCredentialsAction usernameEditable]
  -[AMSUIWebVerifyCredentialsAction setUsernameEditable:]
  -[AMSUIWebVerifyCredentialsAction setSubtitle:]
  -[AMSUIWebVerifyCredentialsAction authenticationType]
  -[AMSUIWebVerifyCredentialsAction subtitle]
  -[AMSUIWebVerifyCredentialsAction title]
  -[AMSUIWebVerifyCredentialsAction serviceType]
  -[AMSUIWebVerifyCredentialsAction initWithJSObject:context:]
  -[AMSUIWebVerifyCredentialsAction runAction]


AMSUIWebVerifyPaymentSetupFeatureAction : AMSUIWebAction
 @property  NSString *referrerIdentifier

  // instance methods
  -[AMSUIWebVerifyPaymentSetupFeatureAction .cxx_destruct]
  -[AMSUIWebVerifyPaymentSetupFeatureAction referrerIdentifier]
  -[AMSUIWebVerifyPaymentSetupFeatureAction setReferrerIdentifier:]
  -[AMSUIWebVerifyPaymentSetupFeatureAction initWithJSObject:context:]
  -[AMSUIWebVerifyPaymentSetupFeatureAction runAction]


AMSUIWebVerifyPrivacyAcknowledgementAction : AMSUIWebAction
 @property  NSString *privacyIdentifier

  // instance methods
  -[AMSUIWebVerifyPrivacyAcknowledgementAction .cxx_destruct]
  -[AMSUIWebVerifyPrivacyAcknowledgementAction initWithJSObject:context:]
  -[AMSUIWebVerifyPrivacyAcknowledgementAction runAction]
  -[AMSUIWebVerifyPrivacyAcknowledgementAction privacyIdentifier]
  -[AMSUIWebVerifyPrivacyAcknowledgementAction setPrivacyIdentifier:]


AMSUIWebView : AMSUICommonView <AMSUIWebViewClientInterface, WKUIDelegate, WKNavigationDelegatePrivate>
 @property  NSArray *baseScripts
 @property  AMSBinaryPromise *contentRulesPromise
 @property  AMSUIWebClientContext *context
 @property  AMSBinaryPromise *currentLoadPromise
 @property  _WKRemoteObjectInterface *exportedInterface
 @property  AMSUIWebDelegateProxy *exportedObjectProxy
 @property  <AMSUIWebViewPluginInterface> *remoteProxy
 @property  BOOL contentLoaded
 @property  double topInset
 @property  double bottomInset
 @property  WKWebView *underlyingWebView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIWebView _sharedProcessPool]
  +[AMSUIWebView _getSetCookiesForResponse:]

  // instance methods
  -[AMSUIWebView webView:didFinishNavigation:]
  -[AMSUIWebView webView:didFailProvisionalNavigation:withError:]
  -[AMSUIWebView topInset]
  -[AMSUIWebView webView:didStartProvisionalNavigation:]
  -[AMSUIWebView webView:didCommitNavigation:]
  -[AMSUIWebView .cxx_destruct]
  -[AMSUIWebView layoutSubviews]
  -[AMSUIWebView setExportedInterface:]
  -[AMSUIWebView _webView:navigationDidFinishDocumentLoad:]
  -[AMSUIWebView _webView:navigation:didFailProvisionalLoadInSubframe:withError:]
  -[AMSUIWebView _webView:navigation:didSameDocumentNavigation:]
  -[AMSUIWebView webView:didReceiveAuthenticationChallenge:completionHandler:]
  -[AMSUIWebView _webView:didFailNavigation:withError:userInfo:]
  -[AMSUIWebView _webView:webContentProcessDidTerminateWithReason:]
  -[AMSUIWebView exportedInterface]
  -[AMSUIWebView bottomInset]
  -[AMSUIWebView setContext:]
  -[AMSUIWebView webView:decidePolicyForNavigationAction:decisionHandler:]
  -[AMSUIWebView dealloc]
  -[AMSUIWebView setTopInset:]
  -[AMSUIWebView setBottomInset:]
  -[AMSUIWebView loadRequest:]
  -[AMSUIWebView _webView:contentRuleListWithIdentifier:performedAction:forURL:]
  -[AMSUIWebView context]
  -[AMSUIWebView remoteProxy]
  -[AMSUIWebView underlyingWebView]
  -[AMSUIWebView initWithContext:additionalScripts:]
  -[AMSUIWebView sendJSRequest:]
  -[AMSUIWebView updateUserScriptsWithScripts:]
  -[AMSUIWebView contentLoaded]
  -[AMSUIWebView loadRequest:response:responseData:]
  -[AMSUIWebView takeSnapshotWithCompletion:]
  -[AMSUIWebView _addScriptsToContentController:additionalScripts:]
  -[AMSUIWebView _unregisterProxies]
  -[AMSUIWebView _prepareWithURL:loadBlock:]
  -[AMSUIWebView currentLoadPromise]
  -[AMSUIWebView setCurrentLoadPromise:]
  -[AMSUIWebView setRemoteProxy:]
  -[AMSUIWebView baseScripts]
  -[AMSUIWebView setBaseScripts:]
  -[AMSUIWebView contentRulesPromise]
  -[AMSUIWebView _setupContentRulesForWebView:context:]
  -[AMSUIWebView setContentRulesPromise:]
  -[AMSUIWebView exportedObjectProxy]
  -[AMSUIWebView webPlugInDidCreateContext]
  -[AMSUIWebView webPlugInWillDestroyContext]
  -[AMSUIWebView frameFinishedLoading]
  -[AMSUIWebView receiveJSObject:logKey:completion:]
  -[AMSUIWebView _webView:didFailToInitializePlugInWithInfo:]
  -[AMSUIWebView setExportedObjectProxy:]


AMSUIWebViewController : AMSUICommonViewController <NSURLSessionDelegate, AMSURLProtocolDelegate, AMSUIWebActionRunnerDelegate, AMSUIWebPageViewControllerDelegate, AMSUIWebProtocolDelegate, AMSBagConsumer>
 @property  UILabel *automationView
 @property  AMSUIWebClientContext *context
 @property  UIViewController *childViewController
 @property  long long currentLoadState
 @property  BOOL hasAppeared
 @property  BOOL hasStarted
 @property  NSURL *lastLoadedURL
 @property  AMSUIWebContainerViewController *rootContainer
 @property  AMSUIWebPageViewController *webPage
 @property  ACAccount *account
 @property  AMSUIWebAppearance *appearance
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSDictionary *clientOptions
 @property  <AMSUIWebDelegate> *delegate
 @property  BOOL loadUsingWebKit
 @property  NSDictionary *metricsOverlay
 @property  NSDictionary *clientData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUIWebViewController bagKeySet]
  +[AMSUIWebViewController bagSubProfileVersion]
  +[AMSUIWebViewController bagSubProfile]
  +[AMSUIWebViewController createBagForSubProfile]

  // instance methods
  -[AMSUIWebViewController loadURL:]
  -[AMSUIWebViewController AMSURLSession:task:handleDialogRequest:completion:]
  -[AMSUIWebViewController AMSURLSession:task:handleAuthenticateRequest:completion:]
  -[AMSUIWebViewController setAccount:]
  -[AMSUIWebViewController viewWillLayoutSubviews]
  -[AMSUIWebViewController account]
  -[AMSUIWebViewController appearance]
  -[AMSUIWebViewController setClientData:]
  -[AMSUIWebViewController setHasStarted:]
  -[AMSUIWebViewController setClientInfo:]
  -[AMSUIWebViewController AMSURLSession:task:handleEngagementRequest:completion:]
  -[AMSUIWebViewController .cxx_destruct]
  -[AMSUIWebViewController hasAppeared]
  -[AMSUIWebViewController bag]
  -[AMSUIWebViewController clientInfo]
  -[AMSUIWebViewController clientData]
  -[AMSUIWebViewController initWithBag:]
  -[AMSUIWebViewController _dismiss]
  -[AMSUIWebViewController setDelegate:]
  -[AMSUIWebViewController shouldAutomaticallyForwardAppearanceMethods]
  -[AMSUIWebViewController setAppearance:]
  -[AMSUIWebViewController metricsOverlay]
  -[AMSUIWebViewController webPage]
  -[AMSUIWebViewController hasStarted]
  -[AMSUIWebViewController setMetricsOverlay:]
  -[AMSUIWebViewController viewWillAppear:]
  -[AMSUIWebViewController childViewController]
  -[AMSUIWebViewController delegate]
  -[AMSUIWebViewController setClientOptions:]
  -[AMSUIWebViewController rootContainer]
  -[AMSUIWebViewController setBag:]
  -[AMSUIWebViewController loadView]
  -[AMSUIWebViewController loadRequest:]
  -[AMSUIWebViewController context]
  -[AMSUIWebViewController setChildViewController:]
  -[AMSUIWebViewController setHasAppeared:]
  -[AMSUIWebViewController initWithBag:account:clientInfo:]
  -[AMSUIWebViewController loadBagValue:]
  -[AMSUIWebViewController clientOptions]
  -[AMSUIWebViewController action:pauseTimeouts:handleAuthenticateCloudRequest:]
  -[AMSUIWebViewController action:pauseTimeouts:handleAuthenticateRequest:]
  -[AMSUIWebViewController action:pauseTimeouts:handleDialogRequest:]
  -[AMSUIWebViewController actionDidFinishPurchaseWithResult:error:]
  -[AMSUIWebViewController runJSRequest:]
  -[AMSUIWebViewController loadUsingWebKit]
  -[AMSUIWebViewController setLoadUsingWebKit:]
  -[AMSUIWebViewController action:handleActionObject:]
  -[AMSUIWebViewController action:didResolveWithResult:error:]
  -[AMSUIWebViewController action:didEncodeNetworkRequest:]
  -[AMSUIWebViewController webPageViewController:didEncodeNetworkRequest:]
  -[AMSUIWebViewController protocolHandler:didEncodeNetworkRequest:]
  -[AMSUIWebViewController automationView]
  -[AMSUIWebViewController setAutomationView:]
  -[AMSUIWebViewController _rootNavigationController]
  -[AMSUIWebViewController _loadRequest:bagValue:]
  -[AMSUIWebViewController _handleAuthenticateRequest:pauseTimeouts:]
  -[AMSUIWebViewController _handleAuthenticateCloudRequest:pauseTimeouts:]
  -[AMSUIWebViewController _handleDialogRequest:pauseTimeouts:]
  -[AMSUIWebViewController _handleDidEncodeNetworkRequest:]
  -[AMSUIWebViewController _handleEngagementRequest:pauseTimeouts:]
  -[AMSUIWebViewController _applyMappingsToURL:]
  -[AMSUIWebViewController currentLoadState]
  -[AMSUIWebViewController setCurrentLoadState:]
  -[AMSUIWebViewController _buildRequestWithRequest:bagValue:]
  -[AMSUIWebViewController lastLoadedURL]
  -[AMSUIWebViewController _loadMescalSessionForRequestWithURL:]
  -[AMSUIWebViewController setLastLoadedURL:]
  -[AMSUIWebViewController _parseWebPropertiesFromRequest:]
  -[AMSUIWebViewController _lazyPromiseForBagSnapshot]
  -[AMSUIWebViewController _lazyPromiseForLoadingSession]
  -[AMSUIWebViewController _lazyPromiseForLoadingRequest:bagValue:]
  -[AMSUIWebViewController _lazyPromiseForPageLoad]
  -[AMSUIWebViewController _stringForLoadState:]
  -[AMSUIWebViewController _showErrorViewWithError:request:bagValue:]


AMSUIWebViewImageWrapper : AMSUICommonView
 @property  UIView *view
 @property  double inset

  // instance methods
  -[AMSUIWebViewImageWrapper inset]
  -[AMSUIWebViewImageWrapper .cxx_destruct]
  -[AMSUIWebViewImageWrapper layoutSubviews]
  -[AMSUIWebViewImageWrapper view]
  -[AMSUIWebViewImageWrapper setInset:]
  -[AMSUIWebViewImageWrapper setView:]
  -[AMSUIWebViewImageWrapper intrinsicContentSize]
  -[AMSUIWebViewImageWrapper initWithView:topInset:]


AMSUIWebWalletPassAction : AMSUIWebAction
 @property  BOOL attemptLynxProvisioning
 @property  NSNumber *lookupFeature

  // instance methods
  -[AMSUIWebWalletPassAction .cxx_destruct]
  -[AMSUIWebWalletPassAction initWithJSObject:context:]
  -[AMSUIWebWalletPassAction runAction]
  -[AMSUIWebWalletPassAction attemptLynxProvisioning]
  -[AMSUIWebWalletPassAction _attemptLynxProvisioning]
  -[AMSUIWebWalletPassAction lookupFeature]
  -[AMSUIWebWalletPassAction _lookupPassForIdentifier:]
  -[AMSUIWebWalletPassAction setAttemptLynxProvisioning:]
  -[AMSUIWebWalletPassAction setLookupFeature:]


AMSUIWebWrapperViewController : AMSUIWebViewController <AMSUIWebPagePresenter, AMSUIWebDelegate>
 @property  AMSUIWebClientContext *wrapperContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSUIWebWrapperViewController webViewController:handleAuthenticateRequest:completion:]
  -[AMSUIWebWrapperViewController .cxx_destruct]
  -[AMSUIWebWrapperViewController initWithContext:]
  -[AMSUIWebWrapperViewController webViewController:handleDelegateAction:completion:]
  -[AMSUIWebWrapperViewController webViewController:handleDialogRequest:completion:]
  -[AMSUIWebWrapperViewController webViewController:didFinishPurchaseWithResult:error:]
  -[AMSUIWebWrapperViewController webViewController:didResolveWithResult:error:completion:]
  -[AMSUIWebWrapperViewController willPresentPageModel:appearance:]
  -[AMSUIWebWrapperViewController wrapperContext]
  -[AMSUIWebWrapperViewController setWrapperContext:]


AMSEngagementOfflineBag : NSObject <AMSBagProtocol>
 @property  AMSPromise *snapshotPromise
 @property  <AMSBagProtocol> *underlyingBag
 @property  AMSSnapshotBag *underlyingOfflineBag
 @property  BOOL expired
 @property  NSDate *expirationDate
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  AMSProcessInfo *processInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSEngagementOfflineBag setUnderlyingBag:]
  -[AMSEngagementOfflineBag .cxx_destruct]
  -[AMSEngagementOfflineBag isExpired]
  -[AMSEngagementOfflineBag boolForKey:]
  -[AMSEngagementOfflineBag URLForKey:account:]
  -[AMSEngagementOfflineBag integerForKey:]
  -[AMSEngagementOfflineBag underlyingBag]
  -[AMSEngagementOfflineBag profileVersion]
  -[AMSEngagementOfflineBag stringForKey:]
  -[AMSEngagementOfflineBag arrayForKey:]
  -[AMSEngagementOfflineBag URLForKey:]
  -[AMSEngagementOfflineBag profile]
  -[AMSEngagementOfflineBag doubleForKey:]
  -[AMSEngagementOfflineBag createSnapshotWithCompletion:]
  -[AMSEngagementOfflineBag expirationDate]
  -[AMSEngagementOfflineBag dictionaryForKey:]
  -[AMSEngagementOfflineBag initWithUnderlyingBag:]
  -[AMSEngagementOfflineBag snapshotPromise]
  -[AMSEngagementOfflineBag setSnapshotPromise:]
  -[AMSEngagementOfflineBag underlyingOfflineBag]
  -[AMSEngagementOfflineBag _getOfflineBagData]
  -[AMSEngagementOfflineBag _getSnapshotResult]
  -[AMSEngagementOfflineBag _attemptBagLoad]
  -[AMSEngagementOfflineBag setUnderlyingOfflineBag:]


ACAccount(AMSUIWeb)
	// instance methods
	-[ACAccount(AMSUIWeb) web_matchAccount:]

AMSBag(AppleMediaServicesUI)
	// class methods
	+[AMSBag(AppleMediaServicesUI) amsui_internalBag]

AMSDialogRequest(AMSUIWeb)
	// instance methods
	-[AMSDialogRequest(AMSUIWeb) _resultFromDialogAction:]
	-[AMSDialogRequest(AMSUIWeb) _resultFromDialogTextField:]
	-[AMSDialogRequest(AMSUIWeb) generateWebExport]

AMSEngagementMessageRequest(AMSUIWeb)
	// instance methods
	-[AMSEngagementMessageRequest(AMSUIWeb) generateWebExport]
	-[AMSEngagementMessageRequest(AMSUIWeb) _resultFromMessageAction:]

AMSEngagementRequest(AMSUIWeb)
	// instance methods
	-[AMSEngagementRequest(AMSUIWeb) generateWebExportWithContext:]

UIColor(AMSUICommonColor)
	// class methods
	+[UIColor(AMSUICommonColor) ams_dim]
	+[UIColor(AMSUICommonColor) ams_colorFromDictionary:]
	+[UIColor(AMSUICommonColor) ams_clear]
	+[UIColor(AMSUICommonColor) ams_dynamicColorWithLightColor:darkColor:lightHighContrastColor:darkHighContrastColor:]
	+[UIColor(AMSUICommonColor) ams_namedColorFromDictionary:]
	+[UIColor(AMSUICommonColor) ams_dynamicColorFromDictionary:]
	+[UIColor(AMSUICommonColor) ams_rgbColorFromDictionary:]
	+[UIColor(AMSUICommonColor) _colorIdentifierDictionary]
	+[UIColor(AMSUICommonColor) ams_dynamicColorWithLightColor:darkColor:]
	+[UIColor(AMSUICommonColor) ams_appTint]
	+[UIColor(AMSUICommonColor) ams_primaryBackground]
	+[UIColor(AMSUICommonColor) ams_primaryGroupedBackground]
	+[UIColor(AMSUICommonColor) ams_secondaryBackground]
	+[UIColor(AMSUICommonColor) ams_secondaryGroupedBackground]
	+[UIColor(AMSUICommonColor) ams_componentBackground]
	+[UIColor(AMSUICommonColor) ams_placeholderBackground]
	+[UIColor(AMSUICommonColor) ams_defaultLine]
	+[UIColor(AMSUICommonColor) ams_primaryText]
	+[UIColor(AMSUICommonColor) ams_secondaryText]
	+[UIColor(AMSUICommonColor) ams_tertiaryText]
	+[UIColor(AMSUICommonColor) ams_quaternaryText]
	+[UIColor(AMSUICommonColor) ams_colorFromHexString:]
	+[UIColor(AMSUICommonColor) ams_dynamicColorWithLightColor:darkColor:lightHighContrastColor:]
	+[UIColor(AMSUICommonColor) ams_dynamicColorWithLightColor:darkColor:darkHighContrastColor:]
	+[UIColor(AMSUICommonColor) ams_mediaBorder]
	+[UIColor(AMSUICommonColor) ams_shadow]

	// instance methods
	-[UIColor(AMSUICommonColor) ams_luminance]
	-[UIColor(AMSUICommonColor) ams_isDark]
	-[UIColor(AMSUICommonColor) ams_isLight]

UIImage(AMSUICommonImage)
	// class methods
	+[UIImage(AMSUICommonImage) ams_imageWithSystemSymbolName:]
	+[UIImage(AMSUICommonImage) ams_systemChevronLeft]
	+[UIImage(AMSUICommonImage) ams_systemChevronRight]

	// instance methods
	-[UIImage(AMSUICommonImage) ams_aspectRatio]
	-[UIImage(AMSUICommonImage) ams_imageCroppedTo:]
	-[UIImage(AMSUICommonImage) ams_imageScaledTo:]
	-[UIImage(AMSUICommonImage) ams_imageWithSymbolConfiguration:]

UINavigationItem(AMSUICommonNavigationItem)
	// instance methods
	-[UINavigationItem(AMSUICommonNavigationItem) ams_configureWithTransparentBackground]
	-[UINavigationItem(AMSUICommonNavigationItem) ams_configureWithDefaultBackground]
	-[UINavigationItem(AMSUICommonNavigationItem) ams_configureWithTranslucentWhileScrollingBackground]

(AppleMediaServicesUI)
NSBundle(AppleMediaServices)
	// instance methods
	-[NSBundle(AppleMediaServices) icon]
	-[NSBundle(AppleMediaServices) ams_imageForResource:]

(AMSUIWeb)
	// instance methods
	-[(AMSUIWeb) ams_JSONStringWithError:]

(AMSUIWeb)
	// instance methods
	-[(AMSUIWeb) ams_sanitizeServerObject]
	-[(AMSUIWeb) _sanitizedServerObject:]

(AppleMediaServicesUI)
	// instance methods
	-[(AppleMediaServicesUI) ams_enumerateRangesOfString:options:usingBlock:]
	-[(AppleMediaServicesUI) ams_enumerateRangesOfString:usingBlock:]

UIView(AppleMediaServicesUI)
	// instance methods
	-[UIView(AppleMediaServicesUI) ams_setBackgroundColor:]
	-[UIView(AppleMediaServicesUI) ams_setAlpha:]
	-[UIView(AppleMediaServicesUI) ams_alpha]
	-[UIView(AppleMediaServicesUI) ams_backgroundColor]
	-[UIView(AppleMediaServicesUI) ams_layout]
	-[UIView(AppleMediaServicesUI) ams_sendSubviewToBack:]

UIViewController(AppleMediaServices)
	// instance methods
	-[UIViewController(AppleMediaServices) ams_setBackgroundColor:]
	-[UIViewController(AppleMediaServices) ams_navigationItemViewController]
	-[UIViewController(AppleMediaServices) ams_frontmostController]
	-[UIViewController(AppleMediaServices) ams_dismissViewControllerAnimated:completion:]
	-[UIViewController(AppleMediaServices) ams_didMoveToParentViewController:]
	-[UIViewController(AppleMediaServices) ams_setChildViewController:]
	-[UIViewController(AppleMediaServices) ams_removeFromParentViewController]
	-[UIViewController(AppleMediaServices) ams_navigationController]
	-[UIViewController(AppleMediaServices) ams_parentContainer]
	-[UIViewController(AppleMediaServices) ams_dismissViewControllerAnimated:includePresented:completion:]
	-[UIViewController(AppleMediaServices) ams_hasDescendentChildViewController:]
	-[UIViewController(AppleMediaServices) ams_navigationIndex]
	-[UIViewController(AppleMediaServices) ams_backgroundColor]
	-[UIViewController(AppleMediaServices) ams_willMoveToParentViewController:]
	-[UIViewController(AppleMediaServices) ams_transitionFromViewController:toViewController:completionHandler:]

01 00 1900 /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI: AAUISignInFlowControllerDelegate 
01 00 0300 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0300 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1a00 /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/AppleIDSSOAuthentication: AIDAMutableServiceContext 
01 00 1a00 /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/AppleIDSSOAuthentication: AIDAServiceOwnersManager 
01 00 0700 /System/Library/PrivateFrameworks/AuthKitUI.framework/AuthKitUI: AKAppleIDAuthenticationInAppContext 
01 00 0600 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKDevice 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAcknowledgePrivacyTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAgeVerificationPresentationResult 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAgeVerificationTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAuthKitUpdateTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAuthenticateOptions 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAuthenticateRequest 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAuthenticateResult 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAuthenticateTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAutomaticDownloadKindsSetTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBag 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBagKeySet 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBinaryPromise 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBiometrics 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBuyParams 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSCampaignAttributionTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSCardAuthorizationTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSCardMetadataRegistrationResult 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSCardRegistrationTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSData 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSDefaults 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSDevice 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSDialogAction 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSDialogRequest 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSDialogResult 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSDialogTextField 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSEngagement 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSEngagementMessageEvent 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSEngagementMessageRequest 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSEngagementPlacementInfo 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSEngagementRequest 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSEngagementResult 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSFamilyInfoLookupTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSKeychain 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSKeychainOptions 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLazyPromise 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLocalizations 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLogConfig 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMarketingItemTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMediaProtocolHandler 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMediaRequestEncoder 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMediaResponseDecoder 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMediaResult 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMediaTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMediaTokenService 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMescalAccountPrimeSession 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMetrics 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMetricsEvent 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMetricsIdentifierKey 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMetricsIdentifierStore 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMutableBagKeySet 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSNetworkQualityInquiry 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSNotificationSettingsTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSODIAdditionalAttributes 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSODISession 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSOpenURL 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSPaymentSetupFeatureVerification 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSProcessInfo 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSPromise 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSPromiseResult 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSPurchase 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSPurchaseQueue 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSPurchaseTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSSnapshotBagBuilder 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSSubscriptionEntitlementsTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSSyncPasswordSettingsTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSTask 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSURLParser 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSURLProtocolHandler 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSURLRequestEncoder 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSURLSession 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSUnitTests 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSUserAgent 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSUserNotification 
01 00 0400 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSUserNotificationMetricsEvent 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 1b00 /System/Library/PrivateFrameworks/CoreCDPUI.framework/CoreCDPUI: CDPUIController 
01 00 0100 /System/Library/PrivateFrameworks/CoreRecognition.framework/CoreRecognition: CRCameraReader 
01 00 0100 /System/Library/PrivateFrameworks/CoreRecognition.framework/CoreRecognition: CRCameraReaderOutputIDCard 
01 00 0100 /System/Library/PrivateFrameworks/CoreRecognition.framework/CoreRecognition: CRCodeRedeemerController 
01 00 0a00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 0a00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0200 /System/Library/PrivateFrameworks/InAppMessages.framework/InAppMessages: IAMMessageGroup 
01 00 2200 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISBiometricStore 
01 00 1c00 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISIcon 
01 00 1c00 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 1600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 1600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleRecord 
01 00 1d00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPCookie 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2100 /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation: NSMutableParagraphStyle 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredential 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 0800 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1e00 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPrivacyPresenter 
01 00 0e00 /System/Library/PrivateFrameworks/ProxCardKit.framework/ProxCardKit: PRXButton 
01 00 0e00 /System/Library/PrivateFrameworks/ProxCardKit.framework/ProxCardKit: PRXFlowConfiguration 
01 00 0d00 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSAirplaneModeSettingsDetail 
01 00 0d00 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSpecifier 
01 00 0d00 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSTableCell 
01 00 0500 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: RadiosPreferences 
01 00 2000 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVTelephonyController 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIButtonConfiguration 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayout 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UICubicTimingParameters 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 2100 /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation: UIFont 
01 00 2100 /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation: UIFontDescriptor 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontMetrics 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageConfiguration 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyCommand 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBarAppearance 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIPresentationController 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UISheetPresentationControllerDetent 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringTimingParameters 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarController 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbar 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1800 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: WKContentRuleListStore 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: WKContentWorld 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: WKProcessPool 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: WKUserContentController 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: WKUserScript 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebView 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebViewConfiguration 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebsiteDataStore 
01 00 1600 /System/Library/Frameworks/CoreServices.framework/CoreServices: _LSOpenConfiguration 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContentUnavailableView 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: _UIHyperInteractor 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: _UIHyperrectangle 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: _UIResilientRemoteViewContainerViewController 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: _WKProcessPoolConfiguration 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: _WKRemoteObjectInterface 
