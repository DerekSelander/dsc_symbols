|| __DATA.__data _SBChamoisExternalDisplayControllerIsEnabled
|| __DATA.__data _SBChamoisUISceneLifecycleIsEnabled
|| __DATA.__data _SBChamoisWindowingUIIsEnabled
|| __DATA.__data _SBFSceneWorkspaceControllerErrorDomain
|| __DATA.__data _SBMoreForegroundApps
|| __DATA.__data _gACMLoggingLevel
|| __DATA.__data _gAllocatedBytes
|| __DATA.__objc_data _OBJC_CLASS_$_SBAbstractDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBAccessibilityDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBAlwaysOnDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBAlwaysOnLiveRenderingFBSSceneAssertionManager
|| __DATA.__objc_data _OBJC_CLASS_$_SBAlwaysOnLiveRenderingSceneAssertionManager
|| __DATA.__objc_data _OBJC_CLASS_$_SBAlwaysOnLiveRenderingUISceneAssertionManager
|| __DATA.__objc_data _OBJC_CLASS_$_SBAnalyticsContextProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBAnalyticsDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBAppSwitcherDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBApplicationDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBBiometricAuthenticationDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBBootDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBC2GroupCompletion
|| __DATA.__objc_data _OBJC_CLASS_$_SBCameraHardwareButtonDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBCornerGestureDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBDemoDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBDisplayModePredicate
|| __DATA.__objc_data _OBJC_CLASS_$_SBDisplayScaleMapping
|| __DATA.__objc_data _OBJC_CLASS_$_SBExternalDisplayDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBFAlwaysOnLiveRenderingAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_SBFAlwaysOnLiveRenderingAssertionManager
|| __DATA.__objc_data _OBJC_CLASS_$_SBFAnalyticsBackend
|| __DATA.__objc_data _OBJC_CLASS_$_SBFAnalyticsClient
|| __DATA.__objc_data _OBJC_CLASS_$_SBFAnimationSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBFAnimationUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_SBFApplication
|| __DATA.__objc_data _OBJC_CLASS_$_SBFAuthenticationAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_SBFAuthenticationAssertionManager
|| __DATA.__objc_data _OBJC_CLASS_$_SBFAuthenticationAssertionTracker
|| __DATA.__objc_data _OBJC_CLASS_$_SBFAuthenticationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SBFBackdropLegibilitySettingsProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBFBacklightSceneHostEnvironmentProviderEntry
|| __DATA.__objc_data _OBJC_CLASS_$_SBFBarSwipeBehavior
|| __DATA.__objc_data _OBJC_CLASS_$_SBFBuildVersion
|| __DATA.__objc_data _OBJC_CLASS_$_SBFButton
|| __DATA.__objc_data _OBJC_CLASS_$_SBFCAColorMatrixSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBFCARenderer
|| __DATA.__objc_data _OBJC_CLASS_$_SBFCARendererImageRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_SBFCARendererImpl
|| __DATA.__objc_data _OBJC_CLASS_$_SBFCancelationToken
|| __DATA.__objc_data _OBJC_CLASS_$_SBFCredentialSet
|| __DATA.__objc_data _OBJC_CLASS_$_SBFDashBoardViewMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_SBFDateTimeController
|| __DATA.__objc_data _OBJC_CLASS_$_SBFDefaultDateProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBFDeviceBlockTimer
|| __DATA.__objc_data _OBJC_CLASS_$_SBFDeviceLockOutController
|| __DATA.__objc_data _OBJC_CLASS_$_SBFFeatherBlurView
|| __DATA.__objc_data _OBJC_CLASS_$_SBFFileCache
|| __DATA.__objc_data _OBJC_CLASS_$_SBFFileCacheFileStore
|| __DATA.__objc_data _OBJC_CLASS_$_SBFFileCacheMemoryStore
|| __DATA.__objc_data _OBJC_CLASS_$_SBFFileCacheURLFaultHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SBFFluidBehaviorSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBFFrameRateAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_SBFHomeGrabberDomain
|| __DATA.__objc_data _OBJC_CLASS_$_SBFHomeGrabberSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBFLazyObjectProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBFLegacyWallpaperWakeAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBFLegibilityDomain
|| __DATA.__objc_data _OBJC_CLASS_$_SBFLegibilitySettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBFLockScreenActionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBFLockScreenAlternateDateLabel
|| __DATA.__objc_data _OBJC_CLASS_$_SBFLockScreenDateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBFLockScreenMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMagnifyMode
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMappedImageCache
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMobileKeyBag
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMobileKeyBagState
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMobileKeyBagUnlockOptions
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMotionAlarmController
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMotionGestureController
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMouseButtonDownGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMutableLockScreenActionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMutableMobileKeyBagState
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMutableTraitsPreferencesOrientation
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMutableTraitsPreferencesZOrderLevel
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMutableTraitsSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMutableTraitsSettingsOrientation
|| __DATA.__objc_data _OBJC_CLASS_$_SBFMutableTraitsSettingsZOrderLevel
|| __DATA.__objc_data _OBJC_CLASS_$_SBFObliterationController
|| __DATA.__objc_data _OBJC_CLASS_$_SBFObservable
|| __DATA.__objc_data _OBJC_CLASS_$_SBFObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SBFOverridableDateProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBFPagedScrollView
|| __DATA.__objc_data _OBJC_CLASS_$_SBFParallaxSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBFPasscodeLockTrackerForPreventLockAssertions
|| __DATA.__objc_data _OBJC_CLASS_$_SBFPasscodeLockTrackerForTransientAssertions
|| __DATA.__objc_data _OBJC_CLASS_$_SBFProceduralWallpaper
|| __DATA.__objc_data _OBJC_CLASS_$_SBFRemoteBasebandLoggingManager
|| __DATA.__objc_data _OBJC_CLASS_$_SBFSceneWorkspaceController
|| __DATA.__objc_data _OBJC_CLASS_$_SBFScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_SBFSecureDisplayCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SBFSecureTouchPassThroughWindow
|| __DATA.__objc_data _OBJC_CLASS_$_SBFSecureWindow
|| __DATA.__objc_data _OBJC_CLASS_$_SBFShamMobileKeyBag
|| __DATA.__objc_data _OBJC_CLASS_$_SBFSpringLoadedInteractionBehavior
|| __DATA.__objc_data _OBJC_CLASS_$_SBFSpringLoadedInteractionEffect
|| __DATA.__objc_data _OBJC_CLASS_$_SBFStatusBarLegibilityView
|| __DATA.__objc_data _OBJC_CLASS_$_SBFSteppedAnimationTimingFunctionCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_SBFSubject
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTapToWakeGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTapticEngine
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTodayGestureDomain
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTodayGestureSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTouchPassThroughClippingView
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTouchPassThroughViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTouchPassThroughWindow
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsArbiter
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsArbiterUpdateContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsArbitrationDeviceOrientationInputs
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsArbitrationInputs
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsArbitrationInputsValidationStage
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsArbitrationInterfaceIdiomInputs
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsArbitrationKeyboardInputs
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsArbitrationPreferencesResolutionStage
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsOrientationResolutionPolicyInfo
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsParticipant
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsPreferencesOrientation
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsPreferencesResolutionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsPreferencesTree
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsPreferencesTreeNode
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsPreferencesTreeNodeSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsPreferencesZOrderLevel
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsSettingsActuationContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsSettingsOrientation
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsSettingsValidator
|| __DATA.__objc_data _OBJC_CLASS_$_SBFTraitsSettingsZOrderLevel
|| __DATA.__objc_data _OBJC_CLASS_$_SBFUserAuthenticationController
|| __DATA.__objc_data _OBJC_CLASS_$_SBFUserAuthenticationModelEducationalMode
|| __DATA.__objc_data _OBJC_CLASS_$_SBFUserAuthenticationModelJournaledDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBFUserAuthenticationModelSEP
|| __DATA.__objc_data _OBJC_CLASS_$_SBFUserAuthenticationResponder
|| __DATA.__objc_data _OBJC_CLASS_$_SBFView
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWakeAnimationDomain
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWakeAnimationSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWallpaperAggdLogger
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWallpaperConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWallpaperConfigurationManager
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWallpaperCoreAnalyticsLogger
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWallpaperGradient
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWallpaperImage
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWallpaperOptions
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWallpaperParallaxSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWebClipSanitationReport
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWebClipUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_SBFWindow
|| __DATA.__objc_data _OBJC_CLASS_$_SBFZStackParticipant
|| __DATA.__objc_data _OBJC_CLASS_$_SBFZStackParticipantPreferences
|| __DATA.__objc_data _OBJC_CLASS_$_SBFZStackResolver
|| __DATA.__objc_data _OBJC_CLASS_$_SBFloatingDockDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBGestureDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBHardwareDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBHomeScreenDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBIdleTimerDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBInCallPresentationDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBLocalDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBMiscellaneousDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBMultiUserDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBNotificationCenterDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBNotificationDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBPIPDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBPowerDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBReadonlyRow
|| __DATA.__objc_data _OBJC_CLASS_$_SBReadonlyTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_SBRecentDisplayItemsDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBReusableViewMap
|| __DATA.__objc_data _OBJC_CLASS_$_SBRotationDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBSOSDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBSecurityDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBSetupDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBSoftwareUpdateDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBSoundDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBStateDumpDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBStatusBarDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBStatusBarLegibilityGradientView
|| __DATA.__objc_data _OBJC_CLASS_$_SBTestingDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBThermalDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBTraitsArbiterAdoptionDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBUsageDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBVoiceControlDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBWakeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SBWakeLogger
|| __DATA.__objc_data _OBJC_CLASS_$_SBWallpaperLegacyDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBWorkspaceDefaults
|| __DATA.__objc_data _OBJC_CLASS_$__SBAllDisplaysPredicate
|| __DATA.__objc_data _OBJC_CLASS_$__SBDisplayPredicate
|| __DATA.__objc_data _OBJC_CLASS_$__SBDisplayScaleMappingCache
|| __DATA.__objc_data _OBJC_CLASS_$__SBDisplaysWithSizePredicate
|| __DATA.__objc_data _OBJC_CLASS_$__SBFAccumulatingObserver
|| __DATA.__objc_data _OBJC_CLASS_$__SBFActualClippingView
|| __DATA.__objc_data _OBJC_CLASS_$__SBFBlockObservable
|| __DATA.__objc_data _OBJC_CLASS_$__SBFBlockObserver
|| __DATA.__objc_data _OBJC_CLASS_$__SBFForkJoinObservable
|| __DATA.__objc_data _OBJC_CLASS_$__SBFImmediateScheduler
|| __DATA.__objc_data _OBJC_CLASS_$__SBFKeyWindowStack
|| __DATA.__objc_data _OBJC_CLASS_$__SBFQueueScheduler
|| __DATA.__objc_data _OBJC_CLASS_$__SBFScheduledObservable
|| __DATA.__objc_data _OBJC_CLASS_$__SBFThrottledObservable
|| __DATA.__objc_data _OBJC_CLASS_$__SBFVibrantSettings
|| __DATA.__objc_data _OBJC_CLASS_$__SBSteppedAnimationTimingFunction
|| __DATA.__objc_data _OBJC_CLASS_$__SBWindowReference
|| __DATA.__objc_data _OBJC_METACLASS_$_SBAbstractDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBAccessibilityDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBAlwaysOnDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBAlwaysOnLiveRenderingFBSSceneAssertionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SBAlwaysOnLiveRenderingSceneAssertionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SBAlwaysOnLiveRenderingUISceneAssertionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SBAnalyticsContextProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBAnalyticsDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBAppSwitcherDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBApplicationDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBBiometricAuthenticationDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBBootDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBC2GroupCompletion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBCameraHardwareButtonDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBCornerGestureDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBDemoDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBDisplayModePredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_SBDisplayScaleMapping
|| __DATA.__objc_data _OBJC_METACLASS_$_SBExternalDisplayDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFAlwaysOnLiveRenderingAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFAlwaysOnLiveRenderingAssertionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFAnalyticsBackend
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFAnalyticsClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFAnimationSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFAnimationUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFAuthenticationAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFAuthenticationAssertionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFAuthenticationAssertionTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFAuthenticationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFBackdropLegibilitySettingsProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFBacklightSceneHostEnvironmentProviderEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFBarSwipeBehavior
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFBuildVersion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFCAColorMatrixSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFCARenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFCARendererImageRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFCARendererImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFCancelationToken
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFCredentialSet
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFDashBoardViewMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFDateTimeController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFDefaultDateProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFDeviceBlockTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFDeviceLockOutController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFFeatherBlurView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFFileCache
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFFileCacheFileStore
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFFileCacheMemoryStore
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFFileCacheURLFaultHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFFluidBehaviorSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFFrameRateAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFHomeGrabberDomain
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFHomeGrabberSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFLazyObjectProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFLegacyWallpaperWakeAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFLegibilityDomain
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFLegibilitySettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFLockScreenActionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFLockScreenAlternateDateLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFLockScreenDateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFLockScreenMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMagnifyMode
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMappedImageCache
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMobileKeyBag
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMobileKeyBagState
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMobileKeyBagUnlockOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMotionAlarmController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMotionGestureController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMouseButtonDownGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMutableLockScreenActionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMutableMobileKeyBagState
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMutableTraitsPreferencesOrientation
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMutableTraitsPreferencesZOrderLevel
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMutableTraitsSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMutableTraitsSettingsOrientation
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFMutableTraitsSettingsZOrderLevel
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFObliterationController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFObservable
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFOverridableDateProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFPagedScrollView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFParallaxSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFPasscodeLockTrackerForPreventLockAssertions
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFPasscodeLockTrackerForTransientAssertions
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFProceduralWallpaper
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFRemoteBasebandLoggingManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFSceneWorkspaceController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFSecureDisplayCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFSecureTouchPassThroughWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFSecureWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFShamMobileKeyBag
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFSpringLoadedInteractionBehavior
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFSpringLoadedInteractionEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFStatusBarLegibilityView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFSteppedAnimationTimingFunctionCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFSubject
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTapToWakeGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTapticEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTodayGestureDomain
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTodayGestureSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTouchPassThroughClippingView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTouchPassThroughViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTouchPassThroughWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsArbiter
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsArbiterUpdateContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsArbitrationDeviceOrientationInputs
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsArbitrationInputs
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsArbitrationInputsValidationStage
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsArbitrationInterfaceIdiomInputs
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsArbitrationKeyboardInputs
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsArbitrationPreferencesResolutionStage
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsOrientationResolutionPolicyInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsParticipant
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsPreferencesOrientation
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsPreferencesResolutionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsPreferencesTree
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsPreferencesTreeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsPreferencesTreeNodeSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsPreferencesZOrderLevel
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsSettingsActuationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsSettingsOrientation
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsSettingsValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFTraitsSettingsZOrderLevel
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFUserAuthenticationController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFUserAuthenticationModelEducationalMode
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFUserAuthenticationModelJournaledDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFUserAuthenticationModelSEP
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFUserAuthenticationResponder
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWakeAnimationDomain
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWakeAnimationSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWallpaperAggdLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWallpaperConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWallpaperConfigurationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWallpaperCoreAnalyticsLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWallpaperGradient
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWallpaperImage
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWallpaperOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWallpaperParallaxSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWebClipSanitationReport
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWebClipUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFZStackParticipant
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFZStackParticipantPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFZStackResolver
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFloatingDockDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBGestureDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHardwareDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHomeScreenDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIdleTimerDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBInCallPresentationDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLocalDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBMiscellaneousDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBMultiUserDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBNotificationCenterDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBNotificationDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBPIPDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBPowerDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBReadonlyRow
|| __DATA.__objc_data _OBJC_METACLASS_$_SBReadonlyTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_SBRecentDisplayItemsDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBReusableViewMap
|| __DATA.__objc_data _OBJC_METACLASS_$_SBRotationDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSOSDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSecurityDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSetupDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSoftwareUpdateDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSoundDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBStateDumpDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBStatusBarDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBStatusBarLegibilityGradientView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBTestingDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBThermalDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBTraitsArbiterAdoptionDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUsageDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBVoiceControlDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWakeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWakeLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWallpaperLegacyDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWorkspaceDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$__SBAllDisplaysPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$__SBDisplayPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$__SBDisplayScaleMappingCache
|| __DATA.__objc_data _OBJC_METACLASS_$__SBDisplaysWithSizePredicate
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFAccumulatingObserver
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFActualClippingView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFBlockObservable
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFBlockObserver
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFForkJoinObservable
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFImmediateScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFKeyWindowStack
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFQueueScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFScheduledObservable
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFThrottledObservable
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFVibrantSettings
|| __DATA.__objc_data _OBJC_METACLASS_$__SBSteppedAnimationTimingFunction
|| __DATA.__objc_data _OBJC_METACLASS_$__SBWindowReference
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBAnalyticsContextProvider._backend
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBAnalyticsContextProvider._eventPayload
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBFAuthenticationAssertionTracker._assertions
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBFAuthenticationAssertionTracker._mkbAssertion
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBFMobileKeyBagState._state
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBDisplayScaleMappingCache._displayManager
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBDisplayScaleMappingCache._hardwareIdentifierToMappings
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFAccumulatingObserver._didComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFAccumulatingObserver._error
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFAccumulatingObserver._results
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFAccumulatingObserver._semaphore
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFBlockObservable._block
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFBlockObserver._completionBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFBlockObserver._failureBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFBlockObserver._resultBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFForkJoinObservable._observables
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFForkJoinObservable._results
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFForkJoinObservable._uncompletedObservableCount
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFScheduledObservable._observable
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFScheduledObservable._scheduler
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFThrottledObservable._delayToken
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFThrottledObservable._hasResult
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFThrottledObservable._interval
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFThrottledObservable._observable
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFThrottledObservable._result
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFThrottledObservable._resultCounter
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBFThrottledObservable._scheduler
|| __DATA_CONST.__const _SBDefaultKeyBlockedForPasscode
|| __DATA_CONST.__const _SBDefaultKeyDeviceLockBlockStateGeneration
|| __DATA_CONST.__const _SBDefaultKeyDeviceLockPendingWipe
|| __DATA_CONST.__const _SBDefaultKeyNumberOfFailedPasscodeAttempts
|| __DATA_CONST.__const _SBDefaultKeyShowBatteryPercentage
|| __DATA_CONST.__const _SBDefaultKeyStatusBarishLogOptions
|| __DATA_CONST.__const _SBDefaultKeySystemGestureLoggingOptions
|| __DATA_CONST.__const _SBDefaultKeyUnblockTimeIntervalSinceReferenceDate
|| __DATA_CONST.__const _SBDeviceDidDisableDisplaySecureModeNotification
|| __DATA_CONST.__const _SBDeviceDidEnableDisplaySecureModeNotification
|| __DATA_CONST.__const _SBDeviceWillDisableDisplaySecureModeNotification
|| __DATA_CONST.__const _SBDeviceWillEnableDisplaySecureModeNotification
|| __DATA_CONST.__const _SBFDeviceBlockStateDidChangeNotification
|| __DATA_CONST.__const _SBFMKBErrorDomain
|| __DATA_CONST.__const _SBFRemoteBasebandLogCollectionEnabledText
|| __DATA_CONST.__const _SBFSetupBuddyCompletedNotification
|| __DATA_CONST.__const _SBFTraitsArbiterUnknownRoleException
|| __DATA_CONST.__const _SBFUserAuthenticatedForFirstTimeNotification
|| __DATA_CONST.__const _SBFUserAuthenticationRequestCompletedAuthenticationTypeKey
|| __DATA_CONST.__const _SBFUserAuthenticationRequestCompletedNotification
|| __DATA_CONST.__const _SBFUserAuthenticationRequestCompletedResultFailure
|| __DATA_CONST.__const _SBFUserAuthenticationRequestCompletedResultInvalid
|| __DATA_CONST.__const _SBFUserAuthenticationRequestCompletedResultKey
|| __DATA_CONST.__const _SBFUserAuthenticationRequestCompletedResultSuccess
|| __DATA_CONST.__const _SBFUserAuthenticationStateDidChangeNotification
|| __DATA_CONST.__const _SBFUserAuthenticationStateWasAuthenticatedKey
|| __DATA_CONST.__const _SBFWallpaperDidChangeNotification
|| __DATA_CONST.__const _SBFWebClipUtilitiesErrorDomain
|| __DATA_CONST.__const _SBFWebClipUtilitiesLastSanitizedBuildVersionUserDefaultsKey
|| __DATA_CONST.__const _SBScreenTimeCategoryKey
|| __DATA_CONST.__const _SBScreenTimeTrackingChangedNotification
|| __DATA_CONST.__const _SBWallpaperIdentifierHomescreenWallpaperAggdKey
|| __DATA_CONST.__const _SBWallpaperIdentifierLockscreenWallpaperAggdKey
|| __DATA_CONST.__const _SBWallpaperIrisEnabledAggdKey
|| __DATA_CONST.__const _SBWallpaperIrisPlayCountAggdKey
|| __DATA_CONST.__const _SBWallpaperSharedWallpaperBetweenHomeAndLockScreen
|| __DATA_CONST.__const _SBWallpaperTypeHomescreenWallpaperAggdKey
|| __DATA_CONST.__const _SBWallpaperTypeLockscreenWallpaperAggdKey
|| __DATA_CONST.__const _SBWorkspaceDefaultsInternalSettingsChangedDarwinNotificationName
|| __DATA_CONST.__const _kSBFMagicWallpaper360VRSectionKey
|| __DATA_CONST.__const _kSBFMagicWallpaperBundlePathKey
|| __DATA_CONST.__const _kSBFMagicWallpaperDynamicSectionKey
|| __DATA_CONST.__const _kSBFMagicWallpaperIdentifierKey
|| __DATA_CONST.__const _kSBFMagicWallpaperPanoVRSectionKey
|| __DATA_CONST.__const _kSBFMagicWallpaperPresetOptionsBokehVariantKey
|| __DATA_CONST.__const _kSBFMagicWallpaperPresetOptionsKey
|| __DATA_CONST.__const _kSBFMagicWallpaperSmallThumbnailDataKey
|| __DATA_CONST.__const _kSBFMagicWallpaperThumbnailNameKey
|| __DATA_CONST.__const _kSBFMagicWallpaperThumbnailPathKey
|| __DATA_CONST.__const _kSBFSyncSessionBegan
|| __DATA_CONST.__const _kSBSOSTriggerMechanismChangedNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBAbstractSpringBoardDefaultDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFFocusIsolationView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFLockScreenDateSubtitleDateView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFLockScreenDateSubtitleView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFLockScreenDateView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFTouchPassThroughView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFWallpaperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBAbstractSpringBoardDefaultDomain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFFocusIsolationView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFLockScreenDateSubtitleDateView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFLockScreenDateSubtitleView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFLockScreenDateView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFTouchPassThroughView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFWallpaperView
|| __TEXT.__const _SBFFontMetricsZero
|| __TEXT.__const _SBFMKBErrorCodePolicy
|| __TEXT.__const _SBFPinAlphanumericEntryFieldBottomYDistanceFromKeyboard
|| __TEXT.__const _SBFPinNumberBaseOffsetFromTopOfScreen
|| __TEXT.__const _SBFPinNumberPadAncillaryButtonOffset
|| __TEXT.__const _SBFPinNumberPadBottomPaddingHeight
|| __TEXT.__const _SBFPinNumberPadButtonOuterCircleDiameter
|| __TEXT.__const _SBFPinNumberPadButtonPaddingHeight
|| __TEXT.__const _SBFPinNumberPadButtonPaddingWidth
|| __TEXT.__const _SBFPinNumberPadFixedDigitEntryFieldIndicatorDiameter
|| __TEXT.__const _SBFPinNumberPadFixedDigitEntryFieldIndicatorPaddingWidth
|| __TEXT.__const _SBFProudLockAssetHeight
|| __TEXT.__const _SBFProudLockAssetWidth
|| __TEXT.__const _SBFProudLockCenterFromTopOfScreen
|| __TEXT.__const _SBFProudLockCompactCenterFromTopOfScreen
|| __TEXT.__const _SBFTimeLabelTextSize
|| __TEXT.__const _kBaseiPadSize
|| __TEXT.__const _kBaseiPhoneSize
|| __TEXT.__const _kSBFBarSwipeHomeAffordanceTranslationY
|| __TEXT.__text _ACMContextAddCredential
|| __TEXT.__text _ACMContextAddCredentialWithScope
|| __TEXT.__text _ACMContextContainsCredentialType
|| __TEXT.__text _ACMContextContainsCredentialTypeEx
|| __TEXT.__text _ACMContextContainsPassphraseCredentialWithPurpose
|| __TEXT.__text _ACMContextCreate
|| __TEXT.__text _ACMContextCreateWithExternalForm
|| __TEXT.__text _ACMContextCredentialGetProperty
|| __TEXT.__text _ACMContextDelete
|| __TEXT.__text _ACMContextGetData
|| __TEXT.__text _ACMContextGetDataEx
|| __TEXT.__text _ACMContextGetDataProperty
|| __TEXT.__text _ACMContextGetExternalForm
|| __TEXT.__text _ACMContextGetInfo
|| __TEXT.__text _ACMContextGetTrackingNumber
|| __TEXT.__text _ACMContextRemoveCredentialsByType
|| __TEXT.__text _ACMContextRemoveCredentialsByTypeAndScope
|| __TEXT.__text _ACMContextRemoveCredentialsByValue
|| __TEXT.__text _ACMContextRemoveCredentialsByValueAndScope
|| __TEXT.__text _ACMContextRemovePassphraseCredentialsByPurposeAndScope
|| __TEXT.__text _ACMContextReplacePassphraseCredentialsWithScope
|| __TEXT.__text _ACMContextSetData
|| __TEXT.__text _ACMContextSetDataEx
|| __TEXT.__text _ACMContextVerifyAclConstraint
|| __TEXT.__text _ACMContextVerifyAclConstraintForOperation
|| __TEXT.__text _ACMContextVerifyPolicy
|| __TEXT.__text _ACMContextVerifyPolicyEx
|| __TEXT.__text _ACMContextVerifyPolicyWithPreflight
|| __TEXT.__text _ACMCredentialCreate
|| __TEXT.__text _ACMCredentialDelete
|| __TEXT.__text _ACMCredentialGetProperty
|| __TEXT.__text _ACMCredentialGetPropertyData
|| __TEXT.__text _ACMCredentialGetType
|| __TEXT.__text _ACMCredentialSetProperty
|| __TEXT.__text _ACMGetAclAuthMethod
|| __TEXT.__text _ACMGetEnvironmentVariable
|| __TEXT.__text _ACMGlobalContextAddCredential
|| __TEXT.__text _ACMGlobalContextCredentialGetProperty
|| __TEXT.__text _ACMGlobalContextRemoveCredentialsByType
|| __TEXT.__text _ACMGlobalContextVerifyPolicy
|| __TEXT.__text _ACMKernelControl
|| __TEXT.__text _ACMParseAclAndCopyConstraintCharacteristics
|| __TEXT.__text _ACMPing
|| __TEXT.__text _ACMRequirementGetPriority
|| __TEXT.__text _ACMRequirementGetProperties
|| __TEXT.__text _ACMRequirementGetProperty
|| __TEXT.__text _ACMRequirementGetPropertyData
|| __TEXT.__text _ACMRequirementGetState
|| __TEXT.__text _ACMRequirementGetSubrequirements
|| __TEXT.__text _ACMRequirementGetType
|| __TEXT.__text _ACMSetEnvironmentVariable
|| __TEXT.__text _ACMSetEnvironmentVariableWithAccessPolicy
|| __TEXT.__text _CompareCredentials
|| __TEXT.__text _CopyCredential
|| __TEXT.__text _DeallocCredentialList
|| __TEXT.__text _DeserializeAddCredential
|| __TEXT.__text _DeserializeAddCredentialType
|| __TEXT.__text _DeserializeCredential
|| __TEXT.__text _DeserializeCredentialList
|| __TEXT.__text _DeserializeGetContextProperty
|| __TEXT.__text _DeserializeProcessAcl
|| __TEXT.__text _DeserializeRemoveCredential
|| __TEXT.__text _DeserializeReplacePassphraseCredential
|| __TEXT.__text _DeserializeRequirement
|| __TEXT.__text _DeserializeVerifyAclConstraint
|| __TEXT.__text _DeserializeVerifyPolicy
|| __TEXT.__text _GetSerializedAddCredentialSize
|| __TEXT.__text _GetSerializedCredentialSize
|| __TEXT.__text _GetSerializedGetContextPropertySize
|| __TEXT.__text _GetSerializedProcessAclSize
|| __TEXT.__text _GetSerializedRemoveCredentialSize
|| __TEXT.__text _GetSerializedReplacePassphraseCredentialSize
|| __TEXT.__text _GetSerializedRequirementSize
|| __TEXT.__text _GetSerializedVerifyAclConstraintSize
|| __TEXT.__text _GetSerializedVerifyPolicySize
|| __TEXT.__text _LibCall_ACMContexAddCredentialWithScope
|| __TEXT.__text _LibCall_ACMContexRemoveCredentialsByTypeAndScope
|| __TEXT.__text _LibCall_ACMContextCreate
|| __TEXT.__text _LibCall_ACMContextCreateWithExternalForm
|| __TEXT.__text _LibCall_ACMContextCredentialGetProperty
|| __TEXT.__text _LibCall_ACMContextDelete
|| __TEXT.__text _LibCall_ACMContextGetData
|| __TEXT.__text _LibCall_ACMContextGetInfo
|| __TEXT.__text _LibCall_ACMContextLoadFromImage
|| __TEXT.__text _LibCall_ACMContextRemoveCredentialsByValueAndScope
|| __TEXT.__text _LibCall_ACMContextSetData
|| __TEXT.__text _LibCall_ACMContextUnloadToImage
|| __TEXT.__text _LibCall_ACMContextUnloadToImage_Block
|| __TEXT.__text _LibCall_ACMContextVerifyAclConstraint
|| __TEXT.__text _LibCall_ACMContextVerifyAclConstraintForOperation
|| __TEXT.__text _LibCall_ACMContextVerifyPolicyAndCopyRequirementEx
|| __TEXT.__text _LibCall_ACMContextVerifyPolicyEx
|| __TEXT.__text _LibCall_ACMContextVerifyPolicyEx_Block
|| __TEXT.__text _LibCall_ACMContextVerifyPolicyWithPreflight_Block
|| __TEXT.__text _LibCall_ACMContextVerifyPolicy_Block
|| __TEXT.__text _LibCall_ACMCredentialCreate
|| __TEXT.__text _LibCall_ACMCredentialDelete
|| __TEXT.__text _LibCall_ACMCredentialGetPropertyData
|| __TEXT.__text _LibCall_ACMCredentialGetType
|| __TEXT.__text _LibCall_ACMCredentialSetProperty
|| __TEXT.__text _LibCall_ACMGetAclAuthMethod_Block
|| __TEXT.__text _LibCall_ACMGetEnvironmentVariable
|| __TEXT.__text _LibCall_ACMGetEnvironmentVariable_Block
|| __TEXT.__text _LibCall_ACMGlobalContextCredentialGetProperty
|| __TEXT.__text _LibCall_ACMGlobalContextCredentialGetProperty_Block
|| __TEXT.__text _LibCall_ACMGlobalContextVerifyPolicyEx
|| __TEXT.__text _LibCall_ACMGlobalContextVerifyPolicy_Block
|| __TEXT.__text _LibCall_ACMKernDoubleClickNotify
|| __TEXT.__text _LibCall_ACMKernelControl
|| __TEXT.__text _LibCall_ACMKernelControl_Block
|| __TEXT.__text _LibCall_ACMPing
|| __TEXT.__text _LibCall_ACMPublishTrustedAccessories
|| __TEXT.__text _LibCall_ACMRequirementDelete
|| __TEXT.__text _LibCall_ACMRequirementGetPriority
|| __TEXT.__text _LibCall_ACMRequirementGetPropertyData
|| __TEXT.__text _LibCall_ACMRequirementGetState
|| __TEXT.__text _LibCall_ACMRequirementGetType
|| __TEXT.__text _LibCall_ACMSecContextProcessAcl
|| __TEXT.__text _LibCall_ACMSecContextProcessAclAndCopyAuthMethod
|| __TEXT.__text _LibCall_ACMSecContextVerifyAclConstraintAndCopyRequirement
|| __TEXT.__text _LibCall_ACMSecSetBiometryAvailability
|| __TEXT.__text _LibCall_ACMSecSetBuiltinBiometry
|| __TEXT.__text _LibCall_ACMSetEnvironmentVariable
|| __TEXT.__text _LibCall_ACMTRMLoadState
|| __TEXT.__text _LibCall_ACMTRMLoadState_Block
|| __TEXT.__text _LibCall_ACMTRMSaveState
|| __TEXT.__text _LibCall_BuildCommand
|| __TEXT.__text _LibSer_ContextCredentialGetProperty_Deserialize
|| __TEXT.__text _LibSer_ContextCredentialGetProperty_GetSize
|| __TEXT.__text _LibSer_ContextCredentialGetProperty_Serialize
|| __TEXT.__text _LibSer_DeleteContext_Deserialize
|| __TEXT.__text _LibSer_DeleteContext_GetSize
|| __TEXT.__text _LibSer_DeleteContext_Serialize
|| __TEXT.__text _LibSer_GetAclAuthMethod_Deserialize
|| __TEXT.__text _LibSer_GetAclAuthMethod_GetSize
|| __TEXT.__text _LibSer_GetAclAuthMethod_Serialize
|| __TEXT.__text _LibSer_GlobalContextCredentialGetProperty_Deserialize
|| __TEXT.__text _LibSer_GlobalContextCredentialGetProperty_GetSize
|| __TEXT.__text _LibSer_GlobalContextCredentialGetProperty_Serialize
|| __TEXT.__text _LibSer_RemoveCredentialByType_Deserialize
|| __TEXT.__text _LibSer_RemoveCredentialByType_GetSize
|| __TEXT.__text _LibSer_RemoveCredentialByType_Serialize
|| __TEXT.__text _LibSer_StorageAnyCmd_DeserializeCommonFields
|| __TEXT.__text _LibSer_StorageGetData_Deserialize
|| __TEXT.__text _LibSer_StorageGetData_GetSize
|| __TEXT.__text _LibSer_StorageGetData_Serialize
|| __TEXT.__text _LibSer_StorageSetData_Deserialize
|| __TEXT.__text _LibSer_StorageSetData_GetSize
|| __TEXT.__text _LibSer_StorageSetData_Serialize
|| __TEXT.__text _NSStringFromIdleTimerDuration
|| __TEXT.__text _NSStringFromIdleWarnMode
|| __TEXT.__text _NSStringFromSBFAuthenticationAssertionType
|| __TEXT.__text _NSStringFromSBFAuthenticationState
|| __TEXT.__text _NSStringFromSBFIdleTimerMode
|| __TEXT.__text _NSStringFromSBFWebClipSanitizationError
|| __TEXT.__text _NSStringFromSBFWebClipSanitizationResult
|| __TEXT.__text _SBBitmaskUnionIf
|| __TEXT.__text _SBCompletionBlockBSToC2
|| __TEXT.__text _SBCompletionBlockC2ToBS
|| __TEXT.__text _SBFAngleForRotationFromInterfaceOrientationToInterfaceOrientation
|| __TEXT.__text _SBFApplyParallaxSettingsToView
|| __TEXT.__text _SBFApplyParallaxSettingsToViewWithFactor
|| __TEXT.__text _SBFBSInterfaceOrientationMaskForBSInterfaceOrientation
|| __TEXT.__text _SBFBoolEquals
|| __TEXT.__text _SBFBoundPoint
|| __TEXT.__text _SBFBundle
|| __TEXT.__text _SBFCachedNSHomeDirectory
|| __TEXT.__text _SBFCachesPathForSandboxPath
|| __TEXT.__text _SBFCompareIntegers
|| __TEXT.__text _SBFComposedColor
|| __TEXT.__text _SBFCreateIOSurfaceForImage
|| __TEXT.__text _SBFDashBoardOrientationLeadingInsetsMake
|| __TEXT.__text _SBFDashBoardPadPageInsetsMake
|| __TEXT.__text _SBFDescriptionForSensorType
|| __TEXT.__text _SBFEdgeInsetsRelativeToRectEdge
|| __TEXT.__text _SBFEdgeInsetsRotateToInterfaceOrientation
|| __TEXT.__text _SBFEffectiveArtworkSubtype
|| __TEXT.__text _SBFEffectiveDeviceClass
|| __TEXT.__text _SBFEffectiveDisplayCornerRadius
|| __TEXT.__text _SBFEffectiveHomeButtonType
|| __TEXT.__text _SBFEnsureDirectoryExistsAtPath
|| __TEXT.__text _SBFEqualStrings
|| __TEXT.__text _SBFFeatureFlagsIsChamoisExtendedDisplayLivingOnEnabled
|| __TEXT.__text _SBFFeatureFlagsIsChamoisExternalDisplayControllerEnabled
|| __TEXT.__text _SBFFeatureFlagsIsChamoisLegacyDeviceSupportEnabled
|| __TEXT.__text _SBFFeatureFlagsIsChamoisOverflowGestureEnabled
|| __TEXT.__text _SBFFeatureFlagsIsChamoisUISceneLifecycleEnabled
|| __TEXT.__text _SBFFeatureFlagsIsChamoisWindowingLivingOnEnabled
|| __TEXT.__text _SBFFeatureFlagsIsChamoisWindowingUIEnabled
|| __TEXT.__text _SBFFeatureFlagsIsMoreForegroundAppsEnabled
|| __TEXT.__text _SBFFeatureFlagsIsPrototypeClamshellMirroringEnabled
|| __TEXT.__text _SBFFeatureFlagsResetChamoisExtendedDisplayLivingOnEnabled
|| __TEXT.__text _SBFFeatureFlagsResetChamoisExternalDisplayControllerEnabled
|| __TEXT.__text _SBFFeatureFlagsResetChamoisLegacyDeviceSupportEnabled
|| __TEXT.__text _SBFFeatureFlagsResetChamoisOverflowGestureEnabled
|| __TEXT.__text _SBFFeatureFlagsResetChamoisUISceneLifecycleEnabled
|| __TEXT.__text _SBFFeatureFlagsResetChamoisWindowingLivingOnEnabled
|| __TEXT.__text _SBFFeatureFlagsResetChamoisWindowingUIEnabled
|| __TEXT.__text _SBFFeatureFlagsResetMoreForegroundAppsEnabled
|| __TEXT.__text _SBFFeatureFlagsResetPrototypeClamshellMirroringEnabled
|| __TEXT.__text _SBFFeatureFlagsSetChamoisExtendedDisplayLivingOnEnabled
|| __TEXT.__text _SBFFeatureFlagsSetChamoisExternalDisplayControllerEnabled
|| __TEXT.__text _SBFFeatureFlagsSetChamoisLegacyDeviceSupportEnabled
|| __TEXT.__text _SBFFeatureFlagsSetChamoisOverflowGestureEnabled
|| __TEXT.__text _SBFFeatureFlagsSetChamoisUISceneLifecycleEnabled
|| __TEXT.__text _SBFFeatureFlagsSetChamoisWindowingLivingOnEnabled
|| __TEXT.__text _SBFFeatureFlagsSetChamoisWindowingUIEnabled
|| __TEXT.__text _SBFFeatureFlagsSetMoreForegroundAppsEnabled
|| __TEXT.__text _SBFFeatureFlagsSetPrototypeClamshellMirroringEnabled
|| __TEXT.__text _SBFFirstInterfaceOrientationInInterfaceOrientationMask
|| __TEXT.__text _SBFFloatCeilForScale
|| __TEXT.__text _SBFFloatEqualsFloat
|| __TEXT.__text _SBFFloatFloorForScale
|| __TEXT.__text _SBFFloatRoundForScale
|| __TEXT.__text _SBFFrameRateReasonString
|| __TEXT.__text _SBFGraphicsContextTypeDescription
|| __TEXT.__text _SBFImageNameModifierSuffix
|| __TEXT.__text _SBFInterfaceOrientationMaskContainsInterfaceOrientation
|| __TEXT.__text _SBFInterfaceOrientationMaskForInterfaceOrientation
|| __TEXT.__text _SBFIsSymbolicLinkAtPath
|| __TEXT.__text _SBFLocalizedStringForKey
|| __TEXT.__text _SBFMagicWallpaperEnumeration
|| __TEXT.__text _SBFMagicWallpaperRepresentativeThumbnailForClass
|| __TEXT.__text _SBFMagicWallpaperThumbnail
|| __TEXT.__text _SBFMainScreenScale
|| __TEXT.__text _SBFModificationDateForPath
|| __TEXT.__text _SBFModifiedFullscreenImageNameForName
|| __TEXT.__text _SBFModifiedImageNameForName
|| __TEXT.__text _SBFPointEqualToPointAtScale
|| __TEXT.__text _SBFPointLessThanEqualToPoint
|| __TEXT.__text _SBFPointRoundForScale
|| __TEXT.__text _SBFPreheatImageData
|| __TEXT.__text _SBFRectApproximatelyEqualToRect
|| __TEXT.__text _SBFRectRoundForScale
|| __TEXT.__text _SBFRectScaleWithScale
|| __TEXT.__text _SBFSafeCast
|| __TEXT.__text _SBFSafeProtocolCast
|| __TEXT.__text _SBFStringForAppearState
|| __TEXT.__text _SBFStringForBSDeviceOrientation
|| __TEXT.__text _SBFStringForBSInterfaceOrientation
|| __TEXT.__text _SBFStringForBSInterfaceOrientationMask
|| __TEXT.__text _SBFStringForUIDeviceOrientation
|| __TEXT.__text _SBFStringForUIInterfaceOrientation
|| __TEXT.__text _SBFStringForUIInterfaceOrientationMask
|| __TEXT.__text _SBFStringForWallpaperLocations
|| __TEXT.__text _SBFStringForWallpaperMode
|| __TEXT.__text _SBFStringForWallpaperType
|| __TEXT.__text _SBFStringForWallpaperVariant
|| __TEXT.__text _SBFStringFromDeviceOrientationStateType
|| __TEXT.__text _SBFStringFromTraitsOrientationPolicy
|| __TEXT.__text _SBFStringFromTraitsPreferencesType
|| __TEXT.__text _SBFTransformForScalingAboutPointInSuperview
|| __TEXT.__text _SBFTransformFromOrientationToOrientation
|| __TEXT.__text _SBFWindowForViewControllerTransition
|| __TEXT.__text _SBIsDeviceChamoisCapable
|| __TEXT.__text _SBLogAnimation
|| __TEXT.__text _SBLogCellularLogCollection
|| __TEXT.__text _SBLogFeatureFlags
|| __TEXT.__text _SBLogKeyWindow
|| __TEXT.__text _SBLogReusableViewCache
|| __TEXT.__text _SBLogTailspinSignposts
|| __TEXT.__text _SBLogWallpaper
|| __TEXT.__text _SBLogWebClip
|| __TEXT.__text _SBScreenWakeStateDescription
|| __TEXT.__text _SBStringFromAnimationUpdateMode
|| __TEXT.__text _SBWakeLoggerSourceFromBacklightChangeSource
|| __TEXT.__text _SB_NSStringFromUIPressType
|| __TEXT.__text _SerializeAddCredential
|| __TEXT.__text _SerializeCredential
|| __TEXT.__text _SerializeCredentialList
|| __TEXT.__text _SerializeGetContextProperty
|| __TEXT.__text _SerializeProcessAcl
|| __TEXT.__text _SerializeRemoveCredential
|| __TEXT.__text _SerializeReplacePassphraseCredential
|| __TEXT.__text _SerializeRequirement
|| __TEXT.__text _SerializeVerifyAclConstraint
|| __TEXT.__text _SerializeVerifyPolicy
|| __TEXT.__text _Util_AllocCredential
|| __TEXT.__text _Util_AllocRequirement
|| __TEXT.__text _Util_CreateRequirement
|| __TEXT.__text _Util_DeallocCredential
|| __TEXT.__text _Util_DeallocRequirement
|| __TEXT.__text _Util_GetBitCount
|| __TEXT.__text _Util_KeybagLockStateToEnvVar
|| __TEXT.__text _Util_ReadFromBuffer
|| __TEXT.__text _Util_SafeDeallocParameters
|| __TEXT.__text _Util_WriteToBuffer
|| __TEXT.__text _Util_hexDumpToStrHelper
|| __TEXT.__text _Util_isNonNullEqualMemory
|| __TEXT.__text _Util_isNullOrZeroMemory
|| __TEXT.__text __SBFGetHSBAValuesForColor
|| __TEXT.__text __SBFGetHSBValuesForColor
|| __TEXT.__text __SBFGetRGBAValuesForColor
|| __TEXT.__text __SBFGetRGBValuesForColor
|| __TEXT.__text __SBFLockScreenDateViewShouldRoundFramesForAlignmentPercent
|| __TEXT.__text __SBFLockScreenFloatFloorForMainScreenScale
|| __TEXT.__text __SBFLoggingMethodProem
|| __TEXT.__text __SBFScreenTimeNameForCategory
|| __TEXT.__text __SBFScreenTimePostExternalChangeNotification
|| __TEXT.__text __SBFScreenTimeRegisterForExternalChangeNotification
|| __TEXT.__text __SBFWallpaperRegisterForExternalChangeNotification
|| __TEXT.__text __SBF_Private_IsD16
|| __TEXT.__text __SBF_Private_IsD17
|| __TEXT.__text __SBF_Private_IsD33OrSimilarDevice
|| __TEXT.__text __SBF_Private_IsD52OrSimilarDevice
|| __TEXT.__text __SBF_Private_IsD52ZoomedOrSimilarDevice
|| __TEXT.__text __SBF_Private_IsD53
|| __TEXT.__text __SBF_Private_IsD54
|| __TEXT.__text __SBF_Private_IsD63
|| __TEXT.__text __SBF_Private_IsD63Like
|| __TEXT.__text __SBF_Private_IsD64
|| __TEXT.__text __SBF_Private_IsD64Like
|| __TEXT.__text __SBF_Private_IsN84OrSimilarDevice
|| __TEXT.__text __SBF_Private_IsN84ZoomedOrSimilarDevice
|| __TEXT.__text _acm_explicit_bzero
|| __TEXT.__text _acm_get_mem
|| __TEXT.__text _acm_mem_alloc
|| __TEXT.__text _acm_mem_alloc_data
|| __TEXT.__text _acm_mem_alloc_info
|| __TEXT.__text _acm_mem_free
|| __TEXT.__text _acm_mem_free_data
|| __TEXT.__text _acm_mem_free_info
|| __TEXT.__text _convertDampingMassAndStiffnessToDampingRatioAndResponse
|| __TEXT.__text _convertDampingRatioAndResponseToTensionAndFriction
|| __TEXT.__text _convertTensionAndFrictionToDampingRatioAndResponse
|| __TEXT.__text _verifyAclConstraintInternal
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientSetValueForScalarKey
__ AppSupport: _CPBitmapCreateImagesFromData
__ AppSupport: _CPBitmapCreateMappedDataFromPath
__ BackBoardServices: _BKSDisplaySetSecureMode
__ BackBoardServices: _BKSHIDEventMatchingPredicate
__ BacklightServices: _NSStringFromBLSBacklightState
__ BacklightServices: _NSStringFromBLSFlipbookState
__ BacklightServices: _OBJC_CLASS_$_BLSAlwaysOnTimeline
__ BacklightServices: _OBJC_CLASS_$_BLSAssertion
__ BacklightServices: _OBJC_CLASS_$_BLSBacklight
__ BacklightServices: _OBJC_CLASS_$_BLSRequestLiveUpdatingAttribute
__ BacklightServices: _OBJC_CLASS_$_BLSRequestUnrestrictedFramerateAttribute
__ BacklightServices: _OBJC_CLASS_$_BLSTimeoutDurationAttribute
__ BacklightServices: _OBJC_CLASS_$_BLSValidWhenBacklightInactiveAttribute
__ BaseBoardUI: _BSUISurfaceWithColorSpaceAndDrawBlock
__ BaseBoardUI: _OBJC_CLASS_$_BSUIAnimationFactory
__ BaseBoardUI: _OBJC_CLASS_$_BSUIMappedImageCache
__ BaseBoardUI: _OBJC_CLASS_$_BSUIScrollView
__ BaseBoardUI: _OBJC_METACLASS_$_BSUIMappedImageCache
__ BaseBoardUI: _OBJC_METACLASS_$_BSUIScrollView
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreAnalytics: _AnalyticsSetCallbackForQueriedEventWithQueue
__ CoreEmoji: _CEMStringContainsEmoji
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopObserverCreateWithHandler
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRemoveObserver
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSSystemTimeZoneDidChangeNotification
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFCopySystemVersionDictionaryValue
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapAllocateData
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapFreeData
__ CoreGraphics: _CGBitmapGetAlignedBytesPerRow
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorCreateSRGB
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorSpaceCopyName
__ CoreGraphics: _CGColorSpaceCopyPropertyList
__ CoreGraphics: _CGColorSpaceCreateDeviceCMYK
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceCreateWithPropertyList
__ CoreGraphics: _CGColorSpaceEqualToColorSpace
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceGetNumberOfComponents
__ CoreGraphics: _CGColorSpaceGetType
__ CoreGraphics: _CGColorSpaceIsICCCompatible
__ CoreGraphics: _CGColorSpaceIsWideGamutRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGColorSpaceRetain
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextGetCTM
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBaseCTM
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCopyData
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderCreateWithFilename
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGImageBlockGetBytesPerRow
__ CoreGraphics: _CGImageBlockGetData
__ CoreGraphics: _CGImageBlockSetGetImageBlock
__ CoreGraphics: _CGImageBlockSetRelease
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageCreateCopyWithColorSpace
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetImageProvider
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageMaskCreate
__ CoreGraphics: _CGImageProviderCopyImageBlockSetWithOptions
__ CoreGraphics: _CGImageProviderGetColorSpace
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageSetProperty
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectCreateDictionaryRepresentation
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceDisplayP3
__ CoreGraphics: _kCGColorSpaceExtendedSRGB
__ CoreGraphics: _kCGColorSpaceGenericGrayGamma2_2
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreGraphics: _kCGImageBlockFormatBGRx8
__ CoreGraphics: _kCGImageBlockFormatRequest
__ CoreGraphics: _kCGImageBlockMarkAsReadOnlyRequest
__ CoreGraphics: _kCGImageBlockSingletonRequest
__ CoreGraphics: _kCGImagePropertyIOSurface
__ CoreMotion: _OBJC_CLASS_$_CMGestureManager
__ CoreMotion: _OBJC_CLASS_$_CMMotionAlarmManager
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreText: _CTFontCreateWithNameAndOptions
__ CoreVideo: _CVPixelBufferCreateWithIOSurface
__ CoreVideo: _CVPixelBufferGetIOSurface
__ CoreVideo: _CVPixelBufferRelease
__ EventKitUI: _CalendarPreferencesNotification_OverlayCalendarID
__ EventKitUI: _OBJC_CLASS_$_CalendarPreferences
__ Foundation: _NSClassFromString
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSHomeDirectory
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFileWrapper
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: __NSFullMethodName
__ FrontBoard: _BSContinuousMachTimeNow
__ FrontBoard: _BSDateTimeCacheChangedNotification
__ FrontBoard: _BSDegreesToRadians
__ FrontBoard: _BSDispatchMain
__ FrontBoard: _BSDispatchQueueAssert
__ FrontBoard: _BSDispatchQueueAssertMain
__ FrontBoard: _BSDispatchQueueAssertNot
__ FrontBoard: _BSDispatchQueueCreate
__ FrontBoard: _BSDispatchQueueCreateSerial
__ FrontBoard: _BSDispatchQueueCreateWithQualityOfService
__ FrontBoard: _BSEqualBools
__ FrontBoard: _BSEqualObjects
__ FrontBoard: _BSEqualSets
__ FrontBoard: _BSFloatApproximatelyEqualToFloat
__ FrontBoard: _BSFloatEqualToFloat
__ FrontBoard: _BSFloatGreaterThanFloat
__ FrontBoard: _BSFloatGreaterThanOrEqualToFloat
__ FrontBoard: _BSFloatIsZero
__ FrontBoard: _BSFloatLessThanFloat
__ FrontBoard: _BSFloatLessThanOrEqualToFloat
__ FrontBoard: _BSFloatRoundForScale
__ FrontBoard: _BSInterfaceOrientationDescription
__ FrontBoard: _BSInterfaceOrientationMaskDescription
__ FrontBoard: _BSIntervalMap
__ FrontBoard: _BSIntervalZero
__ FrontBoard: _BSLogAddStateCaptureBlockWithTitle
__ FrontBoard: _BSNSStringFromCGSize
__ FrontBoard: _BSRectGetCenter
__ FrontBoard: _BSRectRoundForScale
__ FrontBoard: _BSRunLoopPerformAfterCACommit
__ FrontBoard: _BSSettingFlagForBool
__ FrontBoard: _BSSettingFlagIsYes
__ FrontBoard: _BSSizeRoundForScale
__ FrontBoard: _BSStringFromBOOL
__ FrontBoard: _OBJC_CLASS_$_BSAbstractDefaultDomain
__ FrontBoard: _OBJC_CLASS_$_BSAnimationSettings
__ FrontBoard: _OBJC_CLASS_$_BSCanonicalOrientationMapResolver
__ FrontBoard: _OBJC_CLASS_$_BSDateFormatterCache
__ FrontBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ FrontBoard: _OBJC_CLASS_$_BSDispatchQueueAttributes
__ FrontBoard: _OBJC_CLASS_$_BSHashBuilder
__ FrontBoard: _OBJC_CLASS_$_BSMutableAnimationSettings
__ FrontBoard: _OBJC_CLASS_$_BSMutableSpringAnimationSettings
__ FrontBoard: _OBJC_CLASS_$_BSPlatform
__ FrontBoard: _OBJC_CLASS_$_BSSimpleAssertion
__ FrontBoard: _OBJC_CLASS_$_BSSpringAnimationSettings
__ FrontBoard: _OBJC_CLASS_$_FBDisplayManager
__ FrontBoard: _OBJC_CLASS_$_FBSSceneClientIdentity
__ FrontBoard: _OBJC_CLASS_$_FBSceneWorkspace
__ FrontBoard: _OBJC_METACLASS_$_BSAbstractDefaultDomain
__ FrontBoard: __BSIsInternalInstall
__ FrontBoard: __BSSafeCast
__ IOKit: _IOConnectCallScalarMethod
__ IOKit: _IOConnectCallStructMethod
__ IOKit: _IOHIDEventGetIntegerValue
__ IOKit: _IOHIDEventGetTimeStamp
__ IOKit: _IOHIDEventGetType
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IORegistryEntrySearchCFProperty
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _IOServiceOpen
__ IOKit: _kIOMainPortDefault
__ IOKit: _kIOMasterPortDefault
__ IOMobileFramebuffer: _IOMobileFramebufferGetCanvasSizes
__ IOMobileFramebuffer: _IOMobileFramebufferGetMainDisplay
__ IOMobileFramebuffer: _IOMobileFramebufferGetServiceObject
__ IOMobileFramebuffer: _IOMobileFramebufferOpenByName
__ IOSurface: _IOSurfaceCopyValue
__ IOSurface: _IOSurfaceGetPixelFormat
__ IOSurface: _IOSurfaceGetPropertyMaximum
__ IOSurface: _IOSurfaceSetValue
__ IOSurface: _IOSurfaceWrapClientImage
__ IOSurface: _OBJC_CLASS_$_IOSurface
__ IOSurface: _kIOSurfaceColorSpace
__ IOSurface: _kIOSurfaceHeight
__ IOSurface: _kIOSurfaceWidth
__ ImageIO: _CGImageCopySourceData
__ ImageIO: _CGImageCreateFromIOSurface
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateThumbnailAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithDataProvider
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _kCGImageComponentTypeRequest
__ ImageIO: _kCGImagePreferredColorConversionMode
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImageSkipCIF10SRGBCheck
__ ImageIO: _kCGImageSourceCreateThumbnailFromImageAlways
__ ImageIO: _kCGImageSourceShouldCache
__ ImageIO: _kCGImageSourceThumbnailMaxPixelSize
__ IntlPreferences: _OBJC_CLASS_$_IntlUtility
__ ManagedConfiguration: _MCFeatureEraseContentAndSettingsAllowed
__ ManagedConfiguration: _MCFeatureMaximumFailedPasscodeAttempts
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MaterialKit: _OBJC_CLASS_$_MTMaterialView
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ MobileKeyBag: _MKBDeviceLockAssertion
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBEventsRegister
__ MobileKeyBag: _MKBEventsUnregister
__ MobileKeyBag: _MKBGetDeviceConfigurations
__ MobileKeyBag: _MKBGetDeviceLockState
__ MobileKeyBag: _MKBGetDeviceLockStateInfo
__ MobileKeyBag: _MKBKeyBagKeyStashCommit
__ MobileKeyBag: _MKBKeyBagKeyStashCreateWithOpts
__ MobileKeyBag: _MKBKeyBagKeyStashVerify
__ MobileKeyBag: _MKBKeyBagPerformRecovery
__ MobileKeyBag: _MKBLockDevice
__ MobileKeyBag: _MKBPrewarmSPS
__ MobileKeyBag: _MKBUnlockDevice
__ MobileKeyBag: _kMKBConfigMaxUnlockAttempts
__ MobileKeyBag: _kMKBInfoBackOff
__ MobileKeyBag: _kMKBInfoBagState
__ MobileKeyBag: _kMKBInfoFailedAttempts
__ MobileKeyBag: _kMKBInfoLockState
__ MobileKeyBag: _kMKBInfoPermanentlyBlocked
__ MobileKeyBag: _kMKBInfoRecoveryCountdown
__ MobileKeyBag: _kMKBInfoShouldWipe
__ MobileObliteration: _Mobile_Obliterate
__ MobileObliteration: _kDisplayProgressBarKey
__ MobileObliteration: _kObliterateDataPartition
__ MobileObliteration: _kObliterationMessageKey
__ MobileObliteration: _kObliterationTypeKey
__ MobileObliteration: _kObliterationTypeMarkStart
__ MobileObliteration: _kObliterationTypeWipeAndBrick
__ MobileObliteration: _kSkipDataObliteration
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperConfiguration
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperConfigurationManager
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperDefaultsDomain
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperGradient
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperImage
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperOptions
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperParallaxSettings
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperView
__ PaperBoardUI: _OBJC_METACLASS_$_PBUIWallpaperConfiguration
__ PaperBoardUI: _OBJC_METACLASS_$_PBUIWallpaperConfigurationManager
__ PaperBoardUI: _OBJC_METACLASS_$_PBUIWallpaperGradient
__ PaperBoardUI: _OBJC_METACLASS_$_PBUIWallpaperImage
__ PaperBoardUI: _OBJC_METACLASS_$_PBUIWallpaperOptions
__ PaperBoardUI: _OBJC_METACLASS_$_PBUIWallpaperParallaxSettings
__ PaperBoardUI: _OBJC_METACLASS_$_PBUIWallpaperView
__ PaperBoardUI: _PBUIMagicWallpaperEnumeration
__ PaperBoardUI: _PBUIMagicWallpaperRepresentativeThumbnailForClass
__ PaperBoardUI: _PBUIMagicWallpaperThumbnail
__ PaperBoardUI: _PBUIRegisterForWallpaperExternalChangeNotification
__ PaperBoardUI: _PBUIStringForWallpaperLocations
__ PaperBoardUI: _PBUIStringForWallpaperMode
__ PaperBoardUI: _PBUIStringForWallpaperType
__ PaperBoardUI: _PBUIStringForWallpaperVariant
__ PersistentConnection: _OBJC_CLASS_$_PCPersistentTimer
__ PrototypeTools: _OBJC_CLASS_$_PTButtonRow
__ PrototypeTools: _OBJC_CLASS_$_PTChoiceRow
__ PrototypeTools: _OBJC_CLASS_$_PTDomain
__ PrototypeTools: _OBJC_CLASS_$_PTDrillDownRow
__ PrototypeTools: _OBJC_CLASS_$_PTEditFloatRow
__ PrototypeTools: _OBJC_CLASS_$_PTModule
__ PrototypeTools: _OBJC_CLASS_$_PTRestoreDefaultSettingsRowAction
__ PrototypeTools: _OBJC_CLASS_$_PTRow
__ PrototypeTools: _OBJC_CLASS_$_PTSettings
__ PrototypeTools: _OBJC_CLASS_$_PTSliderRow
__ PrototypeTools: _OBJC_CLASS_$_PTSwitchRow
__ PrototypeTools: _OBJC_METACLASS_$_PTDomain
__ PrototypeTools: _OBJC_METACLASS_$_PTRow
__ PrototypeTools: _OBJC_METACLASS_$_PTSettings
__ PrototypeToolsUI: _OBJC_CLASS_$_PTUIRowTableViewCell
__ PrototypeToolsUI: _OBJC_METACLASS_$_PTUIRowTableViewCell
__ QuartzCore: _CAColorMatrixIdentity
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CAFrameRateRangeDefault
__ QuartzCore: _CAFrameRateRangeIsEqualToRange
__ QuartzCore: _CAFrameRateRangeMake
__ QuartzCore: _OBJC_CLASS_$_CABackdropLayer
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayModeCriteria
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMatchMoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CARenderer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFilterColorDodgeBlendMode
__ QuartzCore: _kCAFilterColorSaturate
__ QuartzCore: _kCAFilterDarkenBlendMode
__ QuartzCore: _kCAFilterDarkenSourceOver
__ QuartzCore: _kCAFilterDestOut
__ QuartzCore: _kCAFilterDestOver
__ QuartzCore: _kCAFilterLuminanceMap
__ QuartzCore: _kCAFilterMultiplyBlendMode
__ QuartzCore: _kCAGradientLayerAxial
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ QuartzCore: _kCARendererColorSpace
__ QuartzCore: _kCARendererMetalCommandQueue
__ SoftLinking: __sl_dlopen
__ SpringBoardServices: _NSStringFromAnalyticsQueryName
__ SpringBoardServices: _OBJC_CLASS_$_SBSAnalyticsState
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutService
__ SpringBoardServices: _OBJC_CLASS_$_SBSDisplayModeSettings
__ SpringBoardServices: _SBDisplayMetrics
__ SpringBoardServices: _SBLogAuthenticationAssertions
__ SpringBoardServices: _SBLogAuthenticationController
__ SpringBoardServices: _SBLogAuthenticationKeybag
__ SpringBoardServices: _SBLogAuthenticationModel
__ SpringBoardServices: _SBLogAuthenticationRequests
__ SpringBoardServices: _SBLogCommon
__ SpringBoardServices: _SBLogDashBoard
__ SpringBoardServices: _SBLogDisplayControlling
__ SpringBoardServices: _SBLogMotionAlarm
__ SpringBoardServices: _SBLogMotionGesture
__ SpringBoardServices: _SBLogScreenWake
__ SpringBoardServices: _SBLogTraitsArbiter
__ SpringBoardServices: _SBLogZStack
__ SpringBoardServices: _SBLoggingSubsystem
__ SpringBoardServices: _SBSDisplayScaleDescription
__ SpringBoardServices: _SBSDisplayScaleMaskDescription
__ SpringBoardServices: _SBSDisplayScaleMaskFromScale
__ SpringBoardServices: ___sb__mainScreenReferenceBounds
__ SpringBoardServices: ___sb__runningInSpringBoard
__ SpringBoardServices: _kSBSAnalyticsTimestampKey
__ UIKit: _NSFontAttributeName
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIColorEffect
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIKeyboard
__ UIKit: _OBJC_CLASS_$_UINotificationFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UISpringLoadedInteraction
__ UIKit: _OBJC_CLASS_$_UIStatusBar
__ UIKit: _OBJC_CLASS_$_UIStatusBarManager
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWebClip
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_CLASS_$__UINotificationFeedbackGeneratorConfiguration
__ UIKit: _OBJC_CLASS_$__UIParallaxMotionEffect
__ UIKit: _OBJC_CLASS_$__UISettings
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$__UISettings
__ UIKit: _UIAccessibilityBoldTextStatusDidChangeNotification
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityLargeTextChangedNotification
__ UIKit: _UIApp
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UICreateCGImageFromIOSurface
__ UIKit: _UIEdgeInsetsRotate
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFloorToScale
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIGraphicsPopContext
__ UIKit: _UIGraphicsPushContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIIntegralTransform
__ UIKit: _UIRectCenteredXInRect
__ UIKit: _UIRectCenteredXInRectScale
__ UIKit: _UIRectCenteredYInRectScale
__ UIKit: _UIRectInset
__ UIKit: _UIRectIntegralWithScale
__ UIKit: _UIRoundToScreenScale
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: _UIWindowDidBecomeKeyNotification
__ UIKit: __EXIFOrientationForUIImageOrientation
__ UIKit: __UIAngleInRadiansForRotationBetweenAngleAndAngleInDirection
__ UIKit: __UIInterfaceOrientationRotationDirectionForRotationFromInterfaceOrientationToInterfaceOrientation
__ UIKit: __UILegibilityStrengthLow
__ UIKit: __UISystemApplicationDidUnlockNotification
__ UIKit: __UISystemApplicationWillLockNotification
__ UIKit: __UIUpdateRequestActivate
__ UIKit: __UIUpdateRequestDeactivate
__ UniformTypeIdentifiers: _UTTypePNG
__ VideoToolbox: _FigCreateIOSurfaceBackedCVPixelBufferWithAttributes
__ VideoToolbox: _VTPixelTransferSessionCreate
__ VideoToolbox: _VTPixelTransferSessionInvalidate
__ VideoToolbox: _VTPixelTransferSessionTransferImage
__ VideoToolbox: _VTSessionSetProperty
__ VideoToolbox: _kVTPixelTransferPropertyKey_AllowLowQualityScaling
__ VideoToolbox: _kVTPixelTransferPropertyKey_SourceCropRectangle
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetFloat32Answer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _lstat
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _mach_get_times
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _madvise
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset_s
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_unfair_lock_assert_not_owner
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _putchar
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _sync
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: _usleep
__ libicucore.A.dylib: _u_errorName
__ libicucore.A.dylib: _uset_freeze
__ libicucore.A.dylib: _uset_openPattern
__ libicucore.A.dylib: _uset_span
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_copyPropertyList
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _property_copyAttributeValue
__ libobjc.A.dylib: _property_getName
SBFTodayGestureSettings : PTSettings
 @property  double sideSpringTension
 @property  double sideSpringFriction
 @property  double interactiveSideSpringTension
 @property  double interactiveSideSpringFriction
 @property  SBFFluidBehaviorSettings *overlayPositionSettings
 @property  SBFFluidBehaviorSettings *overlayBackdropSettings
 @property  BOOL scaleAnimationSettingsWithGestureVelocity
 @property  double minimumVelocity
 @property  double maximumVelocity
 @property  double dampingRatioAtMinimumVelocity
 @property  double dampingRatioAtMaximumVelocity
 @property  double responseAtMinimumVelocity
 @property  double responseAtMaximumVelocity

  // class methods
  +[SBFTodayGestureSettings settingsControllerModule]

  // instance methods
  -[SBFTodayGestureSettings sideSpringTension]
  -[SBFTodayGestureSettings setOverlayBackdropSettings:]
  -[SBFTodayGestureSettings setScaleAnimationSettingsWithGestureVelocity:]
  -[SBFTodayGestureSettings scaleAnimationSettingsWithGestureVelocity]
  -[SBFTodayGestureSettings setResponseAtMinimumVelocity:]
  -[SBFTodayGestureSettings setDampingRatioAtMaximumVelocity:]
  -[SBFTodayGestureSettings setDefaultValues]
  -[SBFTodayGestureSettings responseAtMinimumVelocity]
  -[SBFTodayGestureSettings setDampingRatioAtMinimumVelocity:]
  -[SBFTodayGestureSettings setMaximumVelocity:]
  -[SBFTodayGestureSettings interactiveSideSpringFriction]
  -[SBFTodayGestureSettings setSideSpringTension:]
  -[SBFTodayGestureSettings setSideSpringFriction:]
  -[SBFTodayGestureSettings .cxx_destruct]
  -[SBFTodayGestureSettings dampingRatioAtMinimumVelocity]
  -[SBFTodayGestureSettings setOverlayPositionSettings:]
  -[SBFTodayGestureSettings sideSpringFriction]
  -[SBFTodayGestureSettings dampingRatioAtMaximumVelocity]
  -[SBFTodayGestureSettings maximumVelocity]
  -[SBFTodayGestureSettings setInteractiveSideSpringFriction:]
  -[SBFTodayGestureSettings responseAtMaximumVelocity]
  -[SBFTodayGestureSettings setMinimumVelocity:]
  -[SBFTodayGestureSettings setResponseAtMaximumVelocity:]
  -[SBFTodayGestureSettings minimumVelocity]
  -[SBFTodayGestureSettings overlayBackdropSettings]
  -[SBFTodayGestureSettings overlayPositionSettings]
  -[SBFTodayGestureSettings setInteractiveSideSpringTension:]
  -[SBFTodayGestureSettings interactiveSideSpringTension]


SBFParallaxSettings : _UISettings
 @property  BOOL slideEnabled
 @property  long long slideDirectionX
 @property  long long slideDirectionY
 @property  double slidePixelsX
 @property  double slidePixelsY
 @property  BOOL tiltEnabled
 @property  long long tiltDirectionX
 @property  long long tiltDirectionY
 @property  double tiltDegreesX
 @property  double tiltDegreesY
 @property  long long distanceFromScreen
 @property  BOOL increaseEnabled
 @property  double slideIncreaseX
 @property  double slideIncreaseY

  // class methods
  +[SBFParallaxSettings settingsControllerModule]

  // instance methods
  -[SBFParallaxSettings setDefaultValues]
  -[SBFParallaxSettings setTiltEnabled:]
  -[SBFParallaxSettings slideEnabled]
  -[SBFParallaxSettings setSlideEnabled:]
  -[SBFParallaxSettings slideDirectionX]
  -[SBFParallaxSettings setSlideDirectionX:]
  -[SBFParallaxSettings slideDirectionY]
  -[SBFParallaxSettings setSlideDirectionY:]
  -[SBFParallaxSettings slidePixelsX]
  -[SBFParallaxSettings setSlidePixelsX:]
  -[SBFParallaxSettings slidePixelsY]
  -[SBFParallaxSettings setSlidePixelsY:]
  -[SBFParallaxSettings tiltEnabled]
  -[SBFParallaxSettings tiltDirectionX]
  -[SBFParallaxSettings setTiltDirectionX:]
  -[SBFParallaxSettings tiltDirectionY]
  -[SBFParallaxSettings setTiltDirectionY:]
  -[SBFParallaxSettings tiltDegreesX]
  -[SBFParallaxSettings setTiltDegreesX:]
  -[SBFParallaxSettings tiltDegreesY]
  -[SBFParallaxSettings setTiltDegreesY:]
  -[SBFParallaxSettings distanceFromScreen]
  -[SBFParallaxSettings setDistanceFromScreen:]
  -[SBFParallaxSettings increaseEnabled]
  -[SBFParallaxSettings setIncreaseEnabled:]
  -[SBFParallaxSettings slideIncreaseX]
  -[SBFParallaxSettings setSlideIncreaseX:]
  -[SBFParallaxSettings slideIncreaseY]
  -[SBFParallaxSettings setSlideIncreaseY:]


SBFPagedScrollView : BSUIScrollView
 @property  unsigned long currentPageIndex
 @property  {_NSRange=QQ} visiblePageRange
 @property  NSArray *pageViews
 @property  BOOL gestureEnabled

  // instance methods
  -[SBFPagedScrollView setPageViews:]
  -[SBFPagedScrollView scrollToPageAtIndex:animated:withCompletion:]
  -[SBFPagedScrollView pageViews]
  -[SBFPagedScrollView _layoutScrollView]
  -[SBFPagedScrollView _bs_didEndScrolling]
  -[SBFPagedScrollView setFrame:]
  -[SBFPagedScrollView setGestureEnabled:]
  -[SBFPagedScrollView _bs_willBeginScrolling]
  -[SBFPagedScrollView currentScrollInterval]
  -[SBFPagedScrollView gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[SBFPagedScrollView layoutPages]
  -[SBFPagedScrollView .cxx_destruct]
  -[SBFPagedScrollView scrollToPageAtIndex:animated:]
  -[SBFPagedScrollView _bs_didScrollWithContext:]
  -[SBFPagedScrollView layoutSubviews]
  -[SBFPagedScrollView setCurrentPageIndex:]
  -[SBFPagedScrollView resetContentOffsetToCurrentPage]
  -[SBFPagedScrollView gestureRecognizer:shouldReceiveTouch:]
  -[SBFPagedScrollView visiblePageRange]
  -[SBFPagedScrollView unclippedPageRelativeScrollOffset]
  -[SBFPagedScrollView _updateVisiblePages]
  -[SBFPagedScrollView contentOffsetForPageAtIndex:]
  -[SBFPagedScrollView setVisiblePageRange:]
  -[SBFPagedScrollView _updateCurrentPageForScrollOffset]
  -[SBFPagedScrollView currentPageIndex]
  -[SBFPagedScrollView initWithFrame:]
  -[SBFPagedScrollView scrollToPageAtIndex:withAnimationSettings:withCompletion:]
  -[SBFPagedScrollView gestureEnabled]
  -[SBFPagedScrollView pageRelativeScrollOffset]


SBFObliterationController : NSObject
  // class methods
  +[SBFObliterationController sharedInstance]

  // instance methods
  -[SBFObliterationController _doObliterateWithType:eraseDataPlan:showingProgress:options:]
  -[SBFObliterationController wipeAndBrickShowingProgress:reason:]
  -[SBFObliterationController obliterateDataPartitionShowingProgress:skipDataObliteration:eraseDataPlan:reason:]
  -[SBFObliterationController markObliterationStart]


SBFMotionAlarmController : NSObject <CMMotionAlarmDelegateProtocol>
 @property  NSMutableArray *observers
 @property  CMMotionAlarmManager *motionAlarmManager
 @property  <SBFMotionAlarmDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFMotionAlarmController setDelegate:]
  -[SBFMotionAlarmController delegate]
  -[SBFMotionAlarmController dealloc]
  -[SBFMotionAlarmController .cxx_destruct]
  -[SBFMotionAlarmController _notifyDelegate]
  -[SBFMotionAlarmController setObservers:]
  -[SBFMotionAlarmController init]
  -[SBFMotionAlarmController observers]
  -[SBFMotionAlarmController alarmDidRegister:error:]
  -[SBFMotionAlarmController alarmDidUnregister:error:]
  -[SBFMotionAlarmController alarmDidFire:error:]
  -[SBFMotionAlarmController remoteAppLaunchedWithResult:error:]
  -[SBFMotionAlarmController registerMotionAlarm]
  -[SBFMotionAlarmController unregisterMotionAlarm]
  -[SBFMotionAlarmController _registerMotionAlarm]
  -[SBFMotionAlarmController _unregisterMotionAlarm]
  -[SBFMotionAlarmController motionAlarmManager]
  -[SBFMotionAlarmController setMotionAlarmManager:]


SBFRemoteBasebandLoggingManager : NSObject
 @property  CellularLogging *cellularLogging
 @property  NSHashTable *observers

  // class methods
  +[SBFRemoteBasebandLoggingManager sharedInstance]

  // instance methods
  -[SBFRemoteBasebandLoggingManager addObserver:]
  -[SBFRemoteBasebandLoggingManager .cxx_destruct]
  -[SBFRemoteBasebandLoggingManager _notifyObservers]
  -[SBFRemoteBasebandLoggingManager cellularLogging]
  -[SBFRemoteBasebandLoggingManager setObservers:]
  -[SBFRemoteBasebandLoggingManager isLogCollectionEnabled]
  -[SBFRemoteBasebandLoggingManager setCellularLogging:]
  -[SBFRemoteBasebandLoggingManager removeObserver:]
  -[SBFRemoteBasebandLoggingManager init]
  -[SBFRemoteBasebandLoggingManager observers]


SBSoftwareUpdateDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL developerInstallBrickAlertShown7DayWarning
 @property  BOOL developerInstallBrickAlertShown3DayWarning
 @property  BOOL developerInstallBrickAlertShownTomorrowWarning

  // instance methods
  -[SBSoftwareUpdateDefaults _bindAndRegisterDefaults]
  -[SBSoftwareUpdateDefaults clearDeveloperInstallBrickAlerts]


_SBFActualClippingView : SBFTouchPassThroughView
 @property  BOOL hitTestsSubviewsOutsideBounds

  // instance methods
  -[_SBFActualClippingView pointInside:withEvent:]
  -[_SBFActualClippingView hitTestsSubviewsOutsideBounds]
  -[_SBFActualClippingView setHitTestsSubviewsOutsideBounds:]


SBFTouchPassThroughClippingView : SBFTouchPassThroughView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentClippingFrame
 @property  double contentCornerRadius
 @property  _SBFActualClippingView *contentClippingView
 @property  BOOL contentClippingEnabled
 @property  BOOL hitTestsSubviewsOutsideBounds

  // instance methods
  -[SBFTouchPassThroughClippingView sendSubviewToBack:]
  -[SBFTouchPassThroughClippingView insertSubview:atIndex:]
  -[SBFTouchPassThroughClippingView bringSubviewToFront:]
  -[SBFTouchPassThroughClippingView setOpaque:]
  -[SBFTouchPassThroughClippingView setContentCornerRadius:]
  -[SBFTouchPassThroughClippingView setContentClippingFrame:]
  -[SBFTouchPassThroughClippingView _setContinuousCornerRadius:]
  -[SBFTouchPassThroughClippingView .cxx_destruct]
  -[SBFTouchPassThroughClippingView addSubview:]
  -[SBFTouchPassThroughClippingView contentClippingView]
  -[SBFTouchPassThroughClippingView layoutSubviews]
  -[SBFTouchPassThroughClippingView setContentClippingView:]
  -[SBFTouchPassThroughClippingView contentClippingFrame]
  -[SBFTouchPassThroughClippingView setBackgroundColor:]
  -[SBFTouchPassThroughClippingView isContentClippingEnabled]
  -[SBFTouchPassThroughClippingView hitTestsSubviewsOutsideBounds]
  -[SBFTouchPassThroughClippingView setHitTestsSubviewsOutsideBounds:]
  -[SBFTouchPassThroughClippingView _layoutContentClippingView]
  -[SBFTouchPassThroughClippingView initWithFrame:]
  -[SBFTouchPassThroughClippingView insertSubview:aboveSubview:]
  -[SBFTouchPassThroughClippingView insertSubview:belowSubview:]
  -[SBFTouchPassThroughClippingView setContentClippingFrame:cornerRadii:]
  -[SBFTouchPassThroughClippingView contentCornerRadius]
  -[SBFTouchPassThroughClippingView setContentClippingEnabled:]


SBFTraitsPreferencesResolutionContext : NSObject
 @property  NSArray *acquiredParticipants
 @property  NSArray *stageParticipantsRoles
 @property  SBFTraitsArbitrationInputs *validatedInputs
 @property  SBFTraitsArbitrationInputs *rawInputs

  // instance methods
  -[SBFTraitsPreferencesResolutionContext validatedInputs]
  -[SBFTraitsPreferencesResolutionContext .cxx_destruct]
  -[SBFTraitsPreferencesResolutionContext acquiredParticipants]
  -[SBFTraitsPreferencesResolutionContext rawInputs]
  -[SBFTraitsPreferencesResolutionContext initWithAcquiredParticipants:stageParticipantsRoles:validatedInputs:rawInputs:]
  -[SBFTraitsPreferencesResolutionContext stageParticipantsRoles]


SBFTraitsArbitrationInputsValidationStage : NSObject <BSDescriptionProviding, SBFTraitsArbitrationInputsValidating>
 @property  SBFTraitsArbiter *arbiter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSNumber *validatorOrder

  // instance methods
  -[SBFTraitsArbitrationInputsValidationStage arbiter]
  -[SBFTraitsArbitrationInputsValidationStage removeInputsValidator:]
  -[SBFTraitsArbitrationInputsValidationStage descriptionWithMultilinePrefix:]
  -[SBFTraitsArbitrationInputsValidationStage initWithValidators:arbiter:]
  -[SBFTraitsArbitrationInputsValidationStage descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsArbitrationInputsValidationStage _setupStateDump]
  -[SBFTraitsArbitrationInputsValidationStage dealloc]
  -[SBFTraitsArbitrationInputsValidationStage addInputsValidator:]
  -[SBFTraitsArbitrationInputsValidationStage .cxx_destruct]
  -[SBFTraitsArbitrationInputsValidationStage succinctDescription]
  -[SBFTraitsArbitrationInputsValidationStage addInputsValidator:update:]
  -[SBFTraitsArbitrationInputsValidationStage validateInputs:]
  -[SBFTraitsArbitrationInputsValidationStage validatorOrder]
  -[SBFTraitsArbitrationInputsValidationStage succinctDescriptionBuilder]
  -[SBFTraitsArbitrationInputsValidationStage removeInputsValidator:update:]
  -[SBFTraitsArbitrationInputsValidationStage setArbiter:]


SBFTraitsArbitrationPreferencesResolutionStage : NSObject <BSDescriptionProviding>
 @property  NSArray *participantsRoles
 @property  long long preferencesType
 @property  SBFTraitsArbiter *arbiter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsArbitrationPreferencesResolutionStage arbiter]
  -[SBFTraitsArbitrationPreferencesResolutionStage _addStageComponent:toArray:update:animate:]
  -[SBFTraitsArbitrationPreferencesResolutionStage addResolutionPolicySpecifier:update:]
  -[SBFTraitsArbitrationPreferencesResolutionStage descriptionWithMultilinePrefix:]
  -[SBFTraitsArbitrationPreferencesResolutionStage preferencesType]
  -[SBFTraitsArbitrationPreferencesResolutionStage descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsArbitrationPreferencesResolutionStage _setupStateDump]
  -[SBFTraitsArbitrationPreferencesResolutionStage dealloc]
  -[SBFTraitsArbitrationPreferencesResolutionStage .cxx_destruct]
  -[SBFTraitsArbitrationPreferencesResolutionStage removeResolutionPolicySpecifier:]
  -[SBFTraitsArbitrationPreferencesResolutionStage addNodesSpecificationsSpecifier:]
  -[SBFTraitsArbitrationPreferencesResolutionStage addTreeSolver:]
  -[SBFTraitsArbitrationPreferencesResolutionStage succinctDescription]
  -[SBFTraitsArbitrationPreferencesResolutionStage updateResolutionWithContext:]
  -[SBFTraitsArbitrationPreferencesResolutionStage initWithParticipantsRoles:preferencesType:arbiter:]
  -[SBFTraitsArbitrationPreferencesResolutionStage removeResolutionPolicySpecifier:update:]
  -[SBFTraitsArbitrationPreferencesResolutionStage removeTreeSolver:]
  -[SBFTraitsArbitrationPreferencesResolutionStage participantsRoles]
  -[SBFTraitsArbitrationPreferencesResolutionStage removeNodesSpecificationsSpecifier:]
  -[SBFTraitsArbitrationPreferencesResolutionStage addResolutionPolicySpecifier:]
  -[SBFTraitsArbitrationPreferencesResolutionStage _TEMP_89923418_currentStagePreferencesTree]
  -[SBFTraitsArbitrationPreferencesResolutionStage succinctDescriptionBuilder]
  -[SBFTraitsArbitrationPreferencesResolutionStage removeResolutionPolicySpecifier:animate:]
  -[SBFTraitsArbitrationPreferencesResolutionStage _removeComponent:fromArray:update:animate:]
  -[SBFTraitsArbitrationPreferencesResolutionStage addResolutionPolicySpecifier:animate:]


SBFTraitsArbitrationInputs : NSObject <NSCopying, BSDescriptionProviding>
 @property  SBFTraitsArbitrationInterfaceIdiomInputs *interfaceIdiomInputs
 @property  SBFTraitsArbitrationDeviceOrientationInputs *deviceOrientationInputs
 @property  SBFTraitsArbitrationKeyboardInputs *keyboardInputs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsArbitrationInputs deviceOrientationInputs]
  -[SBFTraitsArbitrationInputs descriptionWithMultilinePrefix:]
  -[SBFTraitsArbitrationInputs descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsArbitrationInputs interfaceIdiomInputs]
  -[SBFTraitsArbitrationInputs .cxx_destruct]
  -[SBFTraitsArbitrationInputs succinctDescription]
  -[SBFTraitsArbitrationInputs copyWithZone:]
  -[SBFTraitsArbitrationInputs succinctDescriptionBuilder]
  -[SBFTraitsArbitrationInputs keyboardInputs]
  -[SBFTraitsArbitrationInputs initWithInterfaceIdiomInputs:deviceOrientationInputs:keyboardInputs:]


SBFTraitsArbitrationInterfaceIdiomInputs : NSObject <NSCopying, BSDescriptionProviding>
 @property  BOOL isPad
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsArbitrationInterfaceIdiomInputs isPad]
  -[SBFTraitsArbitrationInterfaceIdiomInputs descriptionWithMultilinePrefix:]
  -[SBFTraitsArbitrationInterfaceIdiomInputs descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsArbitrationInterfaceIdiomInputs succinctDescription]
  -[SBFTraitsArbitrationInterfaceIdiomInputs initWithIsPad:]
  -[SBFTraitsArbitrationInterfaceIdiomInputs copyWithZone:]
  -[SBFTraitsArbitrationInterfaceIdiomInputs succinctDescriptionBuilder]


SBFTraitsArbitrationDeviceOrientationInputs : NSObject <NSCopying, BSDescriptionProviding>
 @property  long long currentDeviceOrientation
 @property  long long nonFlatDeviceOrientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsArbitrationDeviceOrientationInputs isEqualToDeviceOrientationInputs:]
  -[SBFTraitsArbitrationDeviceOrientationInputs descriptionWithMultilinePrefix:]
  -[SBFTraitsArbitrationDeviceOrientationInputs descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsArbitrationDeviceOrientationInputs succinctDescription]
  -[SBFTraitsArbitrationDeviceOrientationInputs currentDeviceOrientation]
  -[SBFTraitsArbitrationDeviceOrientationInputs copyWithZone:]
  -[SBFTraitsArbitrationDeviceOrientationInputs succinctDescriptionBuilder]
  -[SBFTraitsArbitrationDeviceOrientationInputs initWithCurrentDeviceOrientation:nonFlatDeviceOrientation:]
  -[SBFTraitsArbitrationDeviceOrientationInputs nonFlatDeviceOrientation]
  -[SBFTraitsArbitrationDeviceOrientationInputs isEqual:]


SBFTraitsArbitrationKeyboardInputs : NSObject <NSCopying, BSDescriptionProviding>
 @property  UIKBArbiterClientFocusContext *keyboardFocusContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsArbitrationKeyboardInputs descriptionWithMultilinePrefix:]
  -[SBFTraitsArbitrationKeyboardInputs descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsArbitrationKeyboardInputs .cxx_destruct]
  -[SBFTraitsArbitrationKeyboardInputs succinctDescription]
  -[SBFTraitsArbitrationKeyboardInputs isEqualToTraitsArbitrationKeyboardInputs:]
  -[SBFTraitsArbitrationKeyboardInputs copyWithZone:]
  -[SBFTraitsArbitrationKeyboardInputs initWithKeyboardFocusContext:]
  -[SBFTraitsArbitrationKeyboardInputs succinctDescriptionBuilder]
  -[SBFTraitsArbitrationKeyboardInputs isEqual:]
  -[SBFTraitsArbitrationKeyboardInputs keyboardFocusContext]


SBTraitsArbiterAdoptionDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL orientationActuationEnabledForAllRoles
 @property  BOOL orientationActuationEnabledForAccessibilityDaemonUI
 @property  BOOL orientationActuationEnabledForAlert
 @property  BOOL orientationActuationEnabledForAssistant
 @property  BOOL orientationActuationEnabledForBanner
 @property  BOOL orientationActuationEnabledForBiometricMonitorUI
 @property  BOOL orientationActuationEnabledForCommandTab
 @property  BOOL orientationActuationEnabledForControlCenter
 @property  BOOL orientationActuationEnabledForCoverSheet
 @property  BOOL orientationActuationEnabledForCoverSheetCamera
 @property  BOOL orientationActuationEnabledForCoverSheetHomeScreenOverlay
 @property  BOOL orientationActuationEnabledForDeviceApplicationSceneViewOverlay
 @property  BOOL orientationActuationEnabledForDruid
 @property  BOOL orientationActuationEnabledForEnsembleUI
 @property  BOOL orientationActuationEnabledForFloatingDock
 @property  BOOL orientationActuationEnabledForFloatingKeyboard
 @property  BOOL orientationActuationEnabledForHomeScreen
 @property  BOOL orientationActuationEnabledForHomeScreenDimming
 @property  BOOL orientationActuationEnabledForHUD
 @property  BOOL orientationActuationEnabledForInputUI
 @property  BOOL orientationActuationEnabledForInteractiveScreenshotGesture
 @property  BOOL orientationActuationEnabledForLiveTranscriptionUI
 @property  BOOL orientationActuationEnabledForLoginBootToSetupAppZoomInAnimation
 @property  BOOL orientationActuationEnabledForLogWindowRecipe
 @property  BOOL orientationActuationEnabledForMedusaDrag
 @property  BOOL orientationActuationEnabledForModifierTimeline
 @property  BOOL orientationActuationEnabledForOverlayUI
 @property  BOOL orientationActuationEnabledForPictureInPicture
 @property  BOOL orientationActuationEnabledForPipelineManager
 @property  BOOL orientationActuationEnabledForReachability
 @property  BOOL orientationActuationEnabledForRecordingIndicator
 @property  BOOL orientationActuationEnabledForRenderOverlayRecipe
 @property  BOOL orientationActuationEnabledForScreenFlash
 @property  BOOL orientationActuationEnabledForSecureApp
 @property  BOOL orientationActuationEnabledForStartupFadeAnimation
 @property  BOOL orientationActuationEnabledForSwitcherRaw
 @property  BOOL orientationActuationEnabledForSwitcherLiveOverlay
 @property  BOOL orientationActuationEnabledForTransientOverlay
 @property  BOOL orientationActuationEnabledForTransientOverlayBackground
 @property  BOOL orientationActuationEnabledForUIBanner
 @property  BOOL orientationActuationEnabledForUIContextMenu
 @property  BOOL orientationActuationEnabledForUIDragAnimation
 @property  BOOL orientationActuationEnabledForUIKeyboardPrivacySheet
 @property  BOOL orientationActuationEnabledForUIKeyCommandHUD
 @property  BOOL orientationActuationEnabledForUIPeekAndPop
 @property  BOOL orientationActuationEnabledForUIProgress
 @property  BOOL orientationActuationEnabledForWallpaper
 @property  BOOL orientationActuationEnabledForWallpaperExternal
 @property  BOOL orientationActuationEnabledForWindowedAccessory
 @property  BOOL orientationActuationEnabledForSystemAperture

  // instance methods
  -[SBTraitsArbiterAdoptionDefaults valueForUndefinedKey:]
  -[SBTraitsArbiterAdoptionDefaults _bindAndRegisterDefaults]


SBFWallpaperParallaxSettings : PBUIWallpaperParallaxSettings

SBIconDefaults : SBAbstractSpringBoardDefaultDomain
 @property  long long maxIconListCount
 @property  BOOL didShowIconReorderAlert
 @property  BOOL shouldDisableLiveIcons
 @property  BOOL suppressSetCurrentPage
 @property  BOOL suppressAppShortcutTruncation
 @property  NSDictionary *legacyIconState
 @property  NSDictionary *legacyIconState2

  // instance methods
  -[SBIconDefaults _bindAndRegisterDefaults]
  -[SBIconDefaults clearLegacyDefaults]


SBFSpringLoadedInteractionBehavior : NSObject <UISpringLoadedInteractionBehavior>
 @property  <SBFSpringLoadedInteractionBehaviorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFSpringLoadedInteractionBehavior setDelegate:]
  -[SBFSpringLoadedInteractionBehavior delegate]
  -[SBFSpringLoadedInteractionBehavior interactionDidFinish:]
  -[SBFSpringLoadedInteractionBehavior .cxx_destruct]
  -[SBFSpringLoadedInteractionBehavior shouldAllowInteraction:withContext:]


SBFSpringLoadedInteractionEffect : NSObject <UISpringLoadedInteractionEffect>
 @property  BOOL useFastBlinkAnimation
 @property  <SBFSpringLoadedInteractionEffectDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFSpringLoadedInteractionEffect setDelegate:]
  -[SBFSpringLoadedInteractionEffect delegate]
  -[SBFSpringLoadedInteractionEffect setUseFastBlinkAnimation:]
  -[SBFSpringLoadedInteractionEffect .cxx_destruct]
  -[SBFSpringLoadedInteractionEffect interaction:didChangeWithContext:]
  -[SBFSpringLoadedInteractionEffect fastBlinkAnimation]
  -[SBFSpringLoadedInteractionEffect useFastBlinkAnimation]
  -[SBFSpringLoadedInteractionEffect init]


SBPowerDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL disableIdleSleep
 @property  BOOL hideACPower
 @property  BOOL hideLowPowerAlerts
 @property  long long lowBatteryLevel
 @property  BOOL trackPowerEvents

  // instance methods
  -[SBPowerDefaults _bindAndRegisterDefaults]


SBMultiUserDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL forceLoginWindow
 @property  BOOL disablesInternalDebugBlockingTasksUI

  // instance methods
  -[SBMultiUserDefaults _bindAndRegisterDefaults]


SBAlwaysOnDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL enableAlwaysOn
 @property  BOOL enableTapToInteract
 @property  BOOL enableSwipeToUnlock
 @property  BOOL forceAndromedaSupport
 @property  BOOL useAlwaysOnBrightnessCurve
 @property  BOOL useDebugColors
 @property  BOOL enforceOverallAPLLimit
 @property  NSNumber *maximumRenderInterval

  // instance methods
  -[SBAlwaysOnDefaults _bindAndRegisterDefaults]


SBFProceduralWallpaper : UIView
  // class methods
  +[SBFProceduralWallpaper identifier]

  // instance methods
  -[SBFProceduralWallpaper view]
  -[SBFProceduralWallpaper setAnimating:]


SBFWallpaperConfiguration : PBUIWallpaperConfiguration
 @property  SBFWallpaperImage *wallpaperImage
 @property  SBFWallpaperOptions *wallpaperOptions

  // instance methods
  -[SBFWallpaperConfiguration wallpaperImage]
  -[SBFWallpaperConfiguration wallpaperOptions]


SBFMobileKeyBag : NSObject
 @property  SBFMobileKeyBagState *state
 @property  SBFMobileKeyBagState *extendedState
 @property  BOOL hasBeenUnlockedSinceBoot
 @property  BOOL hasPasscodeSet
 @property  long long maxUnlockAttempts

  // class methods
  +[SBFMobileKeyBag sharedInstance]

  // instance methods
  -[SBFMobileKeyBag hasPasscodeSet]
  -[SBFMobileKeyBag _queue_createStashBag:skipSEKeepUserDataOperation:]
  -[SBFMobileKeyBag _queue_lockStateExtended:]
  -[SBFMobileKeyBag addObserver:]
  -[SBFMobileKeyBag state]
  -[SBFMobileKeyBag _queue_verifyExpectedStashState:]
  -[SBFMobileKeyBag dealloc]
  -[SBFMobileKeyBag .cxx_destruct]
  -[SBFMobileKeyBag extendedState]
  -[SBFMobileKeyBag beginRecovery:error:]
  -[SBFMobileKeyBag _queue_firstUnlockOccurred]
  -[SBFMobileKeyBag createStashBagWithOptions:completion:completionQueue:]
  -[SBFMobileKeyBag hasBeenUnlockedSinceBoot]
  -[SBFMobileKeyBag createStashBagWithOptions:completion:]
  -[SBFMobileKeyBag _queue_handleKeybagStatusChanged]
  -[SBFMobileKeyBag lockSkippingGracePeriod:]
  -[SBFMobileKeyBag removeObserver:]
  -[SBFMobileKeyBag waitForUnlockWithTimeout:]
  -[SBFMobileKeyBag maxUnlockAttempts]
  -[SBFMobileKeyBag performAfterFirstUnlockSinceBootUsingBlock:]
  -[SBFMobileKeyBag unlockWithOptions:error:]
  -[SBFMobileKeyBag init]
  -[SBFMobileKeyBag _queue_setHasPasscodeIfNecessary:]


SBSecurityDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL blockedForThermal
 @property  NSNumber *pendingDeviceWipe
 @property  NSNumber *blockedForPasscode
 @property  NSNumber *numberOfFailedPasscodeAttempts
 @property  NSNumber *unblockTimeFromReferenceDate
 @property  NSNumber *blockStateGeneration
 @property  BOOL deviceWipeEnabled
 @property  BOOL dontLockEver
 @property  BOOL allowLockAndUnlockWithCase
 @property  BOOL enableLayerBasedViewSecurity
 @property  BOOL reportSecureDrawViolations

  // instance methods
  -[SBSecurityDefaults _bindAndRegisterDefaults]
  -[SBSecurityDefaults deviceLockDefaultForKey:]
  -[SBSecurityDefaults setDeviceLockDefault:forKey:]


SBInCallPresentationDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL assertNoZombieInCallScenes
 @property  BOOL skipPromptUnlockEntitlementCheck

  // instance methods
  -[SBInCallPresentationDefaults _bindAndRegisterDefaults]


SBFLockScreenDateSubtitleDateView : SBFLockScreenDateSubtitleView
 @property  SBFLockScreenAlternateDateLabel *alternateDateLabel
 @property  double alignmentPercent
 @property  NSDate *date
 @property  BOOL useCompactDateFormat

  // class methods
  +[SBFLockScreenDateSubtitleDateView subtitleLabelToLunarDateLabelBaselineDifferenceY]
  +[SBFLockScreenDateSubtitleDateView dateTimeLunarDateFontMetrics]
  +[SBFLockScreenDateSubtitleDateView scaledFontSize:withMaximumFontSizeCategory:]
  +[SBFLockScreenDateSubtitleDateView dateTimeLunarDateFont]

  // instance methods
  -[SBFLockScreenDateSubtitleDateView _overlayCalendarDidChange]
  -[SBFLockScreenDateSubtitleDateView _lunarDateLabelYOffsetFromDateLabel]
  -[SBFLockScreenDateSubtitleDateView alternateDateLabelFrame]
  -[SBFLockScreenDateSubtitleDateView _setupAlternateDateLabel]
  -[SBFLockScreenDateSubtitleDateView setStrength:]
  -[SBFLockScreenDateSubtitleDateView dealloc]
  -[SBFLockScreenDateSubtitleDateView setDate:]
  -[SBFLockScreenDateSubtitleDateView date]
  -[SBFLockScreenDateSubtitleDateView .cxx_destruct]
  -[SBFLockScreenDateSubtitleDateView _setDate:inTimeZone:]
  -[SBFLockScreenDateSubtitleDateView setAlternateDateLabel:]
  -[SBFLockScreenDateSubtitleDateView useCompactDateFormat]
  -[SBFLockScreenDateSubtitleDateView layoutSubviews]
  -[SBFLockScreenDateSubtitleDateView _updateDateLabelForCompact]
  -[SBFLockScreenDateSubtitleDateView setLegibilitySettings:]
  -[SBFLockScreenDateSubtitleDateView setAlignmentPercent:]
  -[SBFLockScreenDateSubtitleDateView sizeThatFits:]
  -[SBFLockScreenDateSubtitleDateView alignmentPercent]
  -[SBFLockScreenDateSubtitleDateView setUseCompactDateFormat:]
  -[SBFLockScreenDateSubtitleDateView alternateDateLabel]
  -[SBFLockScreenDateSubtitleDateView subtitleLabelFrame]
  -[SBFLockScreenDateSubtitleDateView traitCollectionDidChange:]
  -[SBFLockScreenDateSubtitleDateView initWithDate:]


SBDisplayModePredicate : NSObject <NSCopying>
  // class methods
  +[SBDisplayModePredicate allDisplays]
  +[SBDisplayModePredicate forDisplaysSimilarToDisplay:]
  +[SBDisplayModePredicate forDisplay:]
  +[SBDisplayModePredicate fromDefaultsKey:]

  // instance methods
  -[SBDisplayModePredicate copyWithZone:]
  -[SBDisplayModePredicate _init]
  -[SBDisplayModePredicate matchesDisplay:]
  -[SBDisplayModePredicate defaultsKeyRepresentation]


_SBAllDisplaysPredicate : SBDisplayModePredicate
  // class methods
  +[_SBAllDisplaysPredicate sharedInstance]
  +[_SBAllDisplaysPredicate fromDefaultsKey:]

  // instance methods
  -[_SBAllDisplaysPredicate isEqual:]
  -[_SBAllDisplaysPredicate init]
  -[_SBAllDisplaysPredicate matchesDisplay:]
  -[_SBAllDisplaysPredicate defaultsKeyRepresentation]


_SBDisplaysWithSizePredicate : SBDisplayModePredicate
  // class methods
  +[_SBDisplaysWithSizePredicate fromDefaultsKey:]

  // instance methods
  -[_SBDisplaysWithSizePredicate isEqual:]
  -[_SBDisplaysWithSizePredicate initWithDisplay:]
  -[_SBDisplaysWithSizePredicate matchesDisplay:]
  -[_SBDisplaysWithSizePredicate defaultsKeyRepresentation]
  -[_SBDisplaysWithSizePredicate initWithDiagonal:pixelSize:]


_SBDisplayPredicate : SBDisplayModePredicate
  // class methods
  +[_SBDisplayPredicate fromDefaultsKey:]

  // instance methods
  -[_SBDisplayPredicate .cxx_destruct]
  -[_SBDisplayPredicate isEqual:]
  -[_SBDisplayPredicate initWithDisplay:]
  -[_SBDisplayPredicate matchesDisplay:]
  -[_SBDisplayPredicate defaultsKeyRepresentation]
  -[_SBDisplayPredicate initWithDisplayHardwareIdentifier:productName:]


SBAccessibilityDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL allowReachability
 @property  BOOL reallyDisableReachability

  // instance methods
  -[SBAccessibilityDefaults _bindAndRegisterDefaults]


SBFWallpaperCoreAnalyticsLogger : NSObject
 @property  unsigned long ageOfWallpaper

  // instance methods
  -[SBFWallpaperCoreAnalyticsLogger .cxx_destruct]
  -[SBFWallpaperCoreAnalyticsLogger init]
  -[SBFWallpaperCoreAnalyticsLogger initWithWallpaperDefaultsDomain:]
  -[SBFWallpaperCoreAnalyticsLogger ageOfWallpaper]
  -[SBFWallpaperCoreAnalyticsLogger saveStateOfWallpaperToCoreAnalytics:withHasVideo:hasProcedural:name:]
  -[SBFWallpaperCoreAnalyticsLogger sendStateOfWallpaperToCoreAnalytics]
  -[SBFWallpaperCoreAnalyticsLogger setAgeOfWallpaper:]


SBFSceneWorkspaceController : NSObject <SBFSceneWorkspaceControllerDelegate, BSInvalidatable>
 @property  <SBFSceneWorkspaceControllerDelegate> *delegate
 @property  NSMutableSet *allowedClientProcessIdentities
 @property  NSMutableSet *scenes
 @property  NSMutableSet *scenesActivatedUponClientConnection
 @property  NSMutableSet *scenesKeptActiveWhileForeground
 @property  FBSceneWorkspace *sceneWorkspace
 @property  NSString *sceneWorkspaceIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFSceneWorkspaceController allowedClientProcessIdentities]
  -[SBFSceneWorkspaceController workspace:clientDidConnectWithHandshake:]
  -[SBFSceneWorkspaceController initWithIdentifier:delegate:]
  -[SBFSceneWorkspaceController sceneDidActivate:]
  -[SBFSceneWorkspaceController sceneContentStateDidChange:]
  -[SBFSceneWorkspaceController sceneFromIdentityToken:]
  -[SBFSceneWorkspaceController sceneDidDeactivate:withError:]
  -[SBFSceneWorkspaceController setDelegate:]
  -[SBFSceneWorkspaceController delegate]
  -[SBFSceneWorkspaceController .cxx_destruct]
  -[SBFSceneWorkspaceController setScene:shouldBeKeptActiveWhileForeground:]
  -[SBFSceneWorkspaceController scenes]
  -[SBFSceneWorkspaceController sceneWorkspaceIdentifier]
  -[SBFSceneWorkspaceController scenesActivatedUponClientConnection]
  -[SBFSceneWorkspaceController sceneFromIdentityTokenStringRepresentation:]
  -[SBFSceneWorkspaceController setScenes:]
  -[SBFSceneWorkspaceController setScenesKeptActiveWhileForeground:]
  -[SBFSceneWorkspaceController createSceneForProcessIdentity:withOptions:completion:]
  -[SBFSceneWorkspaceController scenesKeptActiveWhileForeground]
  -[SBFSceneWorkspaceController setScenesActivatedUponClientConnection:]
  -[SBFSceneWorkspaceController sceneWorkspace]
  -[SBFSceneWorkspaceController invalidate]
  -[SBFSceneWorkspaceController workspace:didAddScene:]
  -[SBFSceneWorkspaceController setAllowedClientProcessIdentities:]
  -[SBFSceneWorkspaceController setSceneWorkspace:]
  -[SBFSceneWorkspaceController workspace:willRemoveScene:]
  -[SBFSceneWorkspaceController activateAllScenesIfAtLeastOneIsActive]
  -[SBFSceneWorkspaceController enumerateScenesWithBlock:]
  -[SBFSceneWorkspaceController setScene:shouldActivateUponClientConnection:]


SBLockScreenDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL limitFeaturesForRemoteLock
 @property  BOOL showLegalText
 @property  BOOL showAuthenticationEngineeringUI
 @property  BOOL showSupervisionText
 @property  BOOL showQuickNoteFingerGestureRecognizer
 @property  BOOL forceWakeToMaps
 @property  double nowPlayingTimeout
 @property  BOOL weDontNeedNoEducation
 @property  BOOL useDefaultsValuesForCameraPrewarm
 @property  BOOL prewarmCameraOnSwipe
 @property  double cameraSwipePrewarmThreshold
 @property  BOOL prelaunchCameraOnSwipe
 @property  double cameraSwipePrelaunchThreshold
 @property  BOOL prewarmCameraOnButtonTouch
 @property  BOOL prelaunchCameraOnButtonTouch
 @property  BOOL useDefaultsValuesForDateTimeOverrides
 @property  long long dateTimeOverridesIntervalSince1970
 @property  BOOL overridesDateTimeToDefaultToday
 @property  BOOL overridesDateTimeToDefaultPast
 @property  NSDictionary *sessionTestWidgetInfo

  // instance methods
  -[SBLockScreenDefaults _bindAndRegisterDefaults]


SBFTraitsPreferencesTreeNode : NSObject <SBFTraitsPreferencesTreeNode, BSDescriptionProviding>
 @property  NSString *role
 @property  NSString *uniqueIdentifier
 @property  SBFTraitsParticipant *participant
 @property  <SBFTraitsPreferencesTreeNode> *parent
 @property  NSArray *children
 @property  double order
 @property  BOOL debugLastSettingsWereValidated
 @property  NSString *debugLastOrientationSettingsValidationFailureReason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsPreferencesTreeNode children]
  -[SBFTraitsPreferencesTreeNode setParent:]
  -[SBFTraitsPreferencesTreeNode role]
  -[SBFTraitsPreferencesTreeNode descriptionWithMultilinePrefix:]
  -[SBFTraitsPreferencesTreeNode setDebugLastOrientationSettingsValidationFailureReason:]
  -[SBFTraitsPreferencesTreeNode descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsPreferencesTreeNode setChildren:]
  -[SBFTraitsPreferencesTreeNode setDebugLastSettingsWereValidated:]
  -[SBFTraitsPreferencesTreeNode debugLastSettingsWereValidated]
  -[SBFTraitsPreferencesTreeNode setOrder:]
  -[SBFTraitsPreferencesTreeNode initWithParticipant:]
  -[SBFTraitsPreferencesTreeNode _participant]
  -[SBFTraitsPreferencesTreeNode .cxx_destruct]
  -[SBFTraitsPreferencesTreeNode succinctDescription]
  -[SBFTraitsPreferencesTreeNode order]
  -[SBFTraitsPreferencesTreeNode addChild:]
  -[SBFTraitsPreferencesTreeNode participant]
  -[SBFTraitsPreferencesTreeNode uniqueIdentifier]
  -[SBFTraitsPreferencesTreeNode settingsUpdater]
  -[SBFTraitsPreferencesTreeNode debugLastOrientationSettingsValidationFailureReason]
  -[SBFTraitsPreferencesTreeNode succinctDescriptionBuilder]
  -[SBFTraitsPreferencesTreeNode parent]


SBFTraitsPreferencesTree : NSObject <SBFTraitsPreferencesTree, BSDescriptionProviding>
 @property  BOOL isFlatTree
 @property  long long traversalType
 @property  NSString *debugName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFTraitsPreferencesTree treeWithNodesSpecifications:traversalType:debugName:]

  // instance methods
  -[SBFTraitsPreferencesTree recursiveDescription]
  -[SBFTraitsPreferencesTree descriptionWithMultilinePrefix:]
  -[SBFTraitsPreferencesTree descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsPreferencesTree traversalType]
  -[SBFTraitsPreferencesTree topologicalSort]
  -[SBFTraitsPreferencesTree .cxx_destruct]
  -[SBFTraitsPreferencesTree _recursiveDescriptionWithChildrenInZOrder:]
  -[SBFTraitsPreferencesTree succinctDescription]
  -[SBFTraitsPreferencesTree setTraversalType:]
  -[SBFTraitsPreferencesTree _initWithRootChildren:traversalType:debugName:]
  -[SBFTraitsPreferencesTree isFlatTree]
  -[SBFTraitsPreferencesTree participantsTopologicalSort]
  -[SBFTraitsPreferencesTree succinctDescriptionBuilder]
  -[SBFTraitsPreferencesTree setIsFlatTree:]
  -[SBFTraitsPreferencesTree debugName]


SBFTraitsPreferencesTreeNodeSpecification : NSObject <NSCopying, BSDescriptionProviding>
 @property  SBFTraitsParticipant *participant
 @property  SBFTraitsParticipant *parentParticipant
 @property  double order
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsPreferencesTreeNodeSpecification setParticipant:]
  -[SBFTraitsPreferencesTreeNodeSpecification descriptionWithMultilinePrefix:]
  -[SBFTraitsPreferencesTreeNodeSpecification descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsPreferencesTreeNodeSpecification parentParticipant]
  -[SBFTraitsPreferencesTreeNodeSpecification setOrder:]
  -[SBFTraitsPreferencesTreeNodeSpecification .cxx_destruct]
  -[SBFTraitsPreferencesTreeNodeSpecification succinctDescription]
  -[SBFTraitsPreferencesTreeNodeSpecification order]
  -[SBFTraitsPreferencesTreeNodeSpecification participant]
  -[SBFTraitsPreferencesTreeNodeSpecification initWithParticipant:parentParticipant:]
  -[SBFTraitsPreferencesTreeNodeSpecification setParentParticipant:]
  -[SBFTraitsPreferencesTreeNodeSpecification copyWithZone:]
  -[SBFTraitsPreferencesTreeNodeSpecification succinctDescriptionBuilder]
  -[SBFTraitsPreferencesTreeNodeSpecification isEqual:]


SBFLockScreenDateView : UIView
 @property  CSProminentDisplayViewController *prominentDisplayViewController
 @property  BOOL restrictsVibrancy
 @property  BOOL subtitleHidden
 @property  BOOL useLandscapeTimeFontSize
 @property  BOOL useCompactDateFormat
 @property  NSDate *date
 @property  UIColor *textColor
 @property  _UILegibilitySettings *legibilitySettings
 @property  double timeLegibilityStrength
 @property  double subtitleLegibilityStrength
 @property  double alignmentPercent
 @property  double dateToTimeStretch
 @property  double maximumSubtitleWidth
 @property  UIFont *customTimeFont
 @property  {?=dddd} customTimeMetrics
 @property  BOOL subtitleOnTop
 @property  NSString *customTimeNumberingSystem
 @property  BSUIVibrancyConfiguration *vibrancyConfiguration
 @property  double timeBaselineOffsetFromOrigin
 @property  double subtitleBaselineOffsetFromOrigin
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} restingFrame
 @property  double timeAlpha
 @property  double subtitleAlpha
 @property  SBFLockScreenDateSubtitleView *customSubtitleView
 @property  UIView *inlineComplicationView

  // class methods
  +[SBFLockScreenDateView defaultHeight]
  +[SBFLockScreenDateView metricsForFont:]
  +[SBFLockScreenDateView timeFontMetrics]
  +[SBFLockScreenDateView timeFont]

  // instance methods
  -[SBFLockScreenDateView isSubtitleHidden]
  -[SBFLockScreenDateView chargingVisualInformationTimeSubtitleFrame]
  -[SBFLockScreenDateView _timeLabelFrameForAlignmentPercent:]
  -[SBFLockScreenDateView setCustomSubtitleView:]
  -[SBFLockScreenDateView _updateLabels]
  -[SBFLockScreenDateView presentationExtentForAlignmentPercent:]
  -[SBFLockScreenDateView setTimeAlpha:subtitleAlpha:]
  -[SBFLockScreenDateView setRestrictsVibrancy:]
  -[SBFLockScreenDateView setCustomTimeFont:]
  -[SBFLockScreenDateView setSubtitleHidden:]
  -[SBFLockScreenDateView restrictsVibrancy]
  -[SBFLockScreenDateView maximumSubtitleWidth]
  -[SBFLockScreenDateView setMaximumSubtitleWidth:]
  -[SBFLockScreenDateView setDateToTimeStretch:]
  -[SBFLockScreenDateView _effectiveTextColor]
  -[SBFLockScreenDateView setTextColor:]
  -[SBFLockScreenDateView setSubtitleOnTop:]
  -[SBFLockScreenDateView _updateForNewFont]
  -[SBFLockScreenDateView restingFrame]
  -[SBFLockScreenDateView useLandscapeTimeFontSize]
  -[SBFLockScreenDateView timeAlpha]
  -[SBFLockScreenDateView setDate:]
  -[SBFLockScreenDateView customTimeFont]
  -[SBFLockScreenDateView _subtitleViewFrameForView:alignmentPercent:]
  -[SBFLockScreenDateView date]
  -[SBFLockScreenDateView _updateActiveSubtitleView]
  -[SBFLockScreenDateView _updateUsesCompactDateFormat]
  -[SBFLockScreenDateView .cxx_destruct]
  -[SBFLockScreenDateView customTimeMetrics]
  -[SBFLockScreenDateView _setDate:inTimeZone:]
  -[SBFLockScreenDateView subtitleLegibilityStrength]
  -[SBFLockScreenDateView subtitleAlpha]
  -[SBFLockScreenDateView inlineComplicationView]
  -[SBFLockScreenDateView vibrancyConfiguration]
  -[SBFLockScreenDateView _timeLabel]
  -[SBFLockScreenDateView setCustomTimeNumberingSystem:]
  -[SBFLockScreenDateView _updateLabelAlpha]
  -[SBFLockScreenDateView useCompactDateFormat]
  -[SBFLockScreenDateView timeBaselineOffsetFromOrigin]
  -[SBFLockScreenDateView setUseLandscapeTimeFontSize:]
  -[SBFLockScreenDateView layoutSubviews]
  -[SBFLockScreenDateView _timeLabelInsetsForTimeString:]
  -[SBFLockScreenDateView chargingVisualInformationTimeFrame]
  -[SBFLockScreenDateView subtitleBaselineOffsetFromOrigin]
  -[SBFLockScreenDateView setLegibilitySettings:]
  -[SBFLockScreenDateView _cacheCustomTimeMetrics]
  -[SBFLockScreenDateView _setSubtitleAlpha:]
  -[SBFLockScreenDateView setAlignmentPercent:]
  -[SBFLockScreenDateView timeLegibilityStrength]
  -[SBFLockScreenDateView sizeThatFits:]
  -[SBFLockScreenDateView customTimeNumberingSystem]
  -[SBFLockScreenDateView setSubtitleLegibilityStrength:]
  -[SBFLockScreenDateView updateFormat]
  -[SBFLockScreenDateView setProminentDisplayViewController:]
  -[SBFLockScreenDateView _layoutSubtitle]
  -[SBFLockScreenDateView textColor]
  -[SBFLockScreenDateView alignmentPercent]
  -[SBFLockScreenDateView setInlineComplicationView:]
  -[SBFLockScreenDateView setUseCompactDateFormat:]
  -[SBFLockScreenDateView initWithFrame:]
  -[SBFLockScreenDateView dateToTimeStretch]
  -[SBFLockScreenDateView prominentDisplayViewController]
  -[SBFLockScreenDateView setRestingFrame:]
  -[SBFLockScreenDateView customSubtitleView]
  -[SBFLockScreenDateView traitCollectionDidChange:]
  -[SBFLockScreenDateView legibilitySettings]
  -[SBFLockScreenDateView subtitleOnTop]
  -[SBFLockScreenDateView setVibrancyConfiguration:]
  -[SBFLockScreenDateView _cachedGlyphInsetsTimeFontForString:]
  -[SBFLockScreenDateView setTimeLegibilityStrength:]


SBFAnalyticsBackend : NSObject <SBFAnalyticsBackendEventHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFAnalyticsBackend sharedInstance]

  // instance methods
  -[SBFAnalyticsBackend handleEvent:withContext:]
  -[SBFAnalyticsBackend .cxx_destruct]
  -[SBFAnalyticsBackend registerForQueryName:handler:]
  -[SBFAnalyticsBackend stateForQueryName:completion:]
  -[SBFAnalyticsBackend registerSynchronousEventHandler:]
  -[SBFAnalyticsBackend registerEventHandler:]
  -[SBFAnalyticsBackend init]


SBRotationDefaults : SBAbstractSpringBoardDefaultDomain
 @property  long long lastLockedOrientation
 @property  BOOL videoRotationEnabled
 @property  BOOL postModernRotationForciblyEnabled

  // instance methods
  -[SBRotationDefaults _bindAndRegisterDefaults]


SBFBarSwipeBehavior : NSObject
 @property  UIView *grabberView
 @property  double grabberViewAdditionalEdgeSpacing
 @property  <UIViewSpringAnimationBehaviorDescribing> *settleAffordanceAnimationBehaviorDescription
 @property  <SBFBarSwipeBehaviorDelegate> *delegate
 @property  long long feedbackType

  // instance methods
  -[SBFBarSwipeBehavior setFeedbackType:]
  -[SBFBarSwipeBehavior feedbackType]
  -[SBFBarSwipeBehavior _settleAffordanceAnimationBehaviorDescription]
  -[SBFBarSwipeBehavior settleAffordanceAnimationBehaviorDescription]
  -[SBFBarSwipeBehavior setDelegate:]
  -[SBFBarSwipeBehavior delegate]
  -[SBFBarSwipeBehavior initWithGrabberView:settleAffordanceAnimationBehaviorDescription:]
  -[SBFBarSwipeBehavior _offsetGrabberForProgress:]
  -[SBFBarSwipeBehavior .cxx_destruct]
  -[SBFBarSwipeBehavior _progressWithTranslation:liftoffVelocity:]
  -[SBFBarSwipeBehavior barSwipeInteractionBegan:]
  -[SBFBarSwipeBehavior _fireAction]
  -[SBFBarSwipeBehavior barSwipeInteractionChanged:]
  -[SBFBarSwipeBehavior _createFeedbackGenerator]
  -[SBFBarSwipeBehavior grabberView]
  -[SBFBarSwipeBehavior _settleGrabber]
  -[SBFBarSwipeBehavior barSwipeInteractionEnded:]
  -[SBFBarSwipeBehavior _grabberViewContainerView]
  -[SBFBarSwipeBehavior _setGrabberAdditionalEdgeSpacing:]
  -[SBFBarSwipeBehavior barSwipeInteractionCancelled:]
  -[SBFBarSwipeBehavior grabberViewAdditionalEdgeSpacing]


SBFDefaultDateProvider : NSObject <SBFDateProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFDefaultDateProvider date]
  -[SBFDefaultDateProvider .cxx_destruct]
  -[SBFDefaultDateProvider removeMinuteUpdateHandler:]
  -[SBFDefaultDateProvider observeMinuteUpdatesWithHandler:]
  -[SBFDefaultDateProvider init]
  -[SBFDefaultDateProvider _minuteTimerFired]
  -[SBFDefaultDateProvider _updateMinuteTimer]
  -[SBFDefaultDateProvider _scheduleNextMinuteTimer]


_SBFBlockObserver : NSObject <SBFObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBFBlockObserver initWithResultBlock:completionBlock:failureBlock:]
  -[_SBFBlockObserver observerDidFailWithError:]
  -[_SBFBlockObserver .cxx_destruct]
  -[_SBFBlockObserver observerDidComplete]
  -[_SBFBlockObserver observerDidReceiveResult:]


SBFObserver : NSObject
  // class methods
  +[SBFObserver observerWithResultBlock:completionBlock:failureBlock:]
  +[SBFObserver sendObserver:resultsOfBlock:]
  +[SBFObserver observerWithResultBlock:]
  +[SBFObserver sendArray:error:toObserver:]


SBFloatingDockDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL appLibraryEnabled
 @property  BOOL recentsEnabled

  // instance methods
  -[SBFloatingDockDefaults _bindAndRegisterDefaults]


SBFFeatherBlurView : UIView
 @property  MTMaterialView *backgroundBlurView
 @property  double intrinsicHeight

  // class methods
  +[SBFFeatherBlurView configureGradientMaskForFeatherBlurRecipe:onContentView:]
  +[SBFFeatherBlurView _requiresLowQualityFeatherBlur:]
  +[SBFFeatherBlurView gradientMaskLayerInsetsForFeatherBlurRecipe:]
  +[SBFFeatherBlurView matchMoveAnimationForFrame:relativeToView:]

  // instance methods
  -[SBFFeatherBlurView backgroundBlurView]
  -[SBFFeatherBlurView .cxx_destruct]
  -[SBFFeatherBlurView layoutSubviews]
  -[SBFFeatherBlurView intrinsicHeight]
  -[SBFFeatherBlurView setIntrinsicHeight:]
  -[SBFFeatherBlurView sizeThatFits:]
  -[SBFFeatherBlurView intrinsicContentSize]
  -[SBFFeatherBlurView initWithRecipe:]


SBFLegibilitySettings : PTSettings
 @property  double slideToUnlockDarkShadowStrength
 @property  double slideToUnlockLightShadowStrength
 @property  double appIconGrabberDarkShadowStrength
 @property  double appIconGrabberLightShadowStrength
 @property  double timeDarkShadowStrength
 @property  double timeLightShadowStrength
 @property  double dateDarkShadowStrength
 @property  double dateLightShadowStrength
 @property  double statusTextDarkShadowStrength
 @property  double statusTextLightShadowStrength
 @property  double iconLabelDarkShadowStrength
 @property  double iconLabelLightShadowStrength
 @property  double folderTitleDarkShadowStrength
 @property  double folderTitleLightShadowStrength
 @property  double timerTextDarkShadowStrength
 @property  double timerTextLightShadowStrength
 @property  double timerDialDarkShadowStrength
 @property  double timerDialLightShadowStrength
 @property  double logoutButtonGlyphDarkShadowStrength
 @property  double logoutButtonGlyphLightShadowStrength
 @property  double logoutButtonTextDarkShadowStrength
 @property  double logoutButtonTextLightShadowStrength
 @property  double userPictureDarkShadowStrength
 @property  double userPictureLightShadowStrength

  // class methods
  +[SBFLegibilitySettings settingsControllerModule]

  // instance methods
  -[SBFLegibilitySettings setUserPictureLightShadowStrength:]
  -[SBFLegibilitySettings timerTextLightShadowStrength]
  -[SBFLegibilitySettings setTimerDialDarkShadowStrength:]
  -[SBFLegibilitySettings setIconLabelLightShadowStrength:]
  -[SBFLegibilitySettings folderTitleStrengthForStyle:]
  -[SBFLegibilitySettings setAppIconGrabberLightShadowStrength:]
  -[SBFLegibilitySettings setDefaultValues]
  -[SBFLegibilitySettings iconLabelLightShadowStrength]
  -[SBFLegibilitySettings folderTitleLightShadowStrength]
  -[SBFLegibilitySettings folderTitleDarkShadowStrength]
  -[SBFLegibilitySettings userPictureStrengthForStyle:]
  -[SBFLegibilitySettings timeStrengthForStyle:]
  -[SBFLegibilitySettings logoutButtonGlyphLightShadowStrength]
  -[SBFLegibilitySettings statusTextStrengthForStyle:]
  -[SBFLegibilitySettings appIconGrabberDarkShadowStrength]
  -[SBFLegibilitySettings timerDialStrengthForStyle:]
  -[SBFLegibilitySettings timerTextDarkShadowStrength]
  -[SBFLegibilitySettings iconLabelDarkShadowStrength]
  -[SBFLegibilitySettings logoutButtonGlyphStrengthForStyle:]
  -[SBFLegibilitySettings timeLightShadowStrength]
  -[SBFLegibilitySettings userPictureLightShadowStrength]
  -[SBFLegibilitySettings statusTextLightShadowStrength]
  -[SBFLegibilitySettings slideToUnlockLightShadowStrength]
  -[SBFLegibilitySettings logoutButtonTextLightShadowStrength]
  -[SBFLegibilitySettings timerTextStrengthForStyle:]
  -[SBFLegibilitySettings setIconLabelDarkShadowStrength:]
  -[SBFLegibilitySettings setStatusTextDarkShadowStrength:]
  -[SBFLegibilitySettings logoutButtonTextDarkShadowStrength]
  -[SBFLegibilitySettings timerDialDarkShadowStrength]
  -[SBFLegibilitySettings dateStrengthForStyle:]
  -[SBFLegibilitySettings setDateDarkShadowStrength:]
  -[SBFLegibilitySettings dateLightShadowStrength]
  -[SBFLegibilitySettings setSlideToUnlockDarkShadowStrength:]
  -[SBFLegibilitySettings timeDarkShadowStrength]
  -[SBFLegibilitySettings appIconGrabberStrengthForStyle:]
  -[SBFLegibilitySettings setLogoutButtonGlyphDarkShadowStrength:]
  -[SBFLegibilitySettings setTimeLightShadowStrength:]
  -[SBFLegibilitySettings statusTextDarkShadowStrength]
  -[SBFLegibilitySettings timerDialLightShadowStrength]
  -[SBFLegibilitySettings setUserPictureDarkShadowStrength:]
  -[SBFLegibilitySettings setTimerTextLightShadowStrength:]
  -[SBFLegibilitySettings setFolderTitleLightShadowStrength:]
  -[SBFLegibilitySettings setLogoutButtonTextLightShadowStrength:]
  -[SBFLegibilitySettings setSlideToUnlockLightShadowStrength:]
  -[SBFLegibilitySettings slideToUnlockStrengthForStyle:]
  -[SBFLegibilitySettings setStatusTextLightShadowStrength:]
  -[SBFLegibilitySettings setLogoutButtonTextDarkShadowStrength:]
  -[SBFLegibilitySettings logoutButtonTextStrengthForStyle:]
  -[SBFLegibilitySettings appIconGrabberLightShadowStrength]
  -[SBFLegibilitySettings setTimerDialLightShadowStrength:]
  -[SBFLegibilitySettings setLogoutButtonGlyphLightShadowStrength:]
  -[SBFLegibilitySettings setAppIconGrabberDarkShadowStrength:]
  -[SBFLegibilitySettings setTimerTextDarkShadowStrength:]
  -[SBFLegibilitySettings logoutButtonGlyphDarkShadowStrength]
  -[SBFLegibilitySettings dateDarkShadowStrength]
  -[SBFLegibilitySettings setTimeDarkShadowStrength:]
  -[SBFLegibilitySettings slideToUnlockDarkShadowStrength]
  -[SBFLegibilitySettings setDateLightShadowStrength:]
  -[SBFLegibilitySettings userPictureDarkShadowStrength]
  -[SBFLegibilitySettings setFolderTitleDarkShadowStrength:]
  -[SBFLegibilitySettings iconLabelStrengthForStyle:]


SBFCancelationToken : NSObject <SBFCancelable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFCancelationToken tokenWithCancelationBlock:]
  +[SBFCancelationToken tokenWrappingCancelable:]

  // instance methods
  -[SBFCancelationToken isCanceled]
  -[SBFCancelationToken .cxx_destruct]
  -[SBFCancelationToken addCancelationBlock:]
  -[SBFCancelationToken callCancelationBlocks:]
  -[SBFCancelationToken cancel]
  -[SBFCancelationToken init]
  -[SBFCancelationToken nts_cancel]


SBStatusBarDefaults : SBAbstractSpringBoardDefaultDomain
 @property  NSArray *countryCodesShowingEmergencyOnlyStatus
 @property  BOOL showBatteryLevel
 @property  BOOL showBatteryPercentage
 @property  BOOL suppressStatusBarOverrideForScreenSharing
 @property  BOOL showOptimalCellDataForCarPlay
 @property  BOOL showOverridesForRecording
 @property  BOOL showRSSI
 @property  unsigned long statusBarLogLevel
 @property  BOOL showThermalWarning

  // instance methods
  -[SBStatusBarDefaults _bindAndRegisterDefaults]


SBFUserAuthenticationController : NSObject <SBFMobileKeyBagObserver, SBFUserAuthenticationModelDelegate, SBFAuthenticationAssertionProviding, SBFAuthenticationStatusProvider, SBFPasscodeFieldChangeObserver>
 @property  <SBFAuthenticationPolicy> *policy
 @property  NSDate *lastRevokedAuthenticationDate
 @property  BOOL inSecureDisplayMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFUserAuthenticationController hasPasscodeSet]
  -[SBFUserAuthenticationController _shouldRevokeAuthenticationNow]
  -[SBFUserAuthenticationController _updateSecureModeIfNecessaryForNewAuthState]
  -[SBFUserAuthenticationController _evaluateBiometricAttempt:]
  -[SBFUserAuthenticationController _isUserRequestedEraseEnabled]
  -[SBFUserAuthenticationController _isInGracePeriodState]
  -[SBFUserAuthenticationController _setModel:]
  -[SBFUserAuthenticationController revokeAuthenticationIfNecessaryForPublicReason:]
  -[SBFUserAuthenticationController processAuthenticationRequest:responder:]
  -[SBFUserAuthenticationController _removeAuthResponder:]
  -[SBFUserAuthenticationController descriptionWithMultilinePrefix:]
  -[SBFUserAuthenticationController addAsFirstResponder:]
  -[SBFUserAuthenticationController descriptionBuilderWithMultilinePrefix:]
  -[SBFUserAuthenticationController _cachedLockStateExtended]
  -[SBFUserAuthenticationController publicDescription]
  -[SBFUserAuthenticationController _scheduleUnblockTimer]
  -[SBFUserAuthenticationController _isUserAuthenticated]
  -[SBFUserAuthenticationController isAuthenticated]
  -[SBFUserAuthenticationController processAuthenticationRequest:]
  -[SBFUserAuthenticationController dealloc]
  -[SBFUserAuthenticationController _clearUnblockTimer]
  -[SBFUserAuthenticationController deviceLockStateMayHaveChangedForModel:]
  -[SBFUserAuthenticationController createKeybagUnlockAssertionWithReason:]
  -[SBFUserAuthenticationController _addAuthenticationAssertion:]
  -[SBFUserAuthenticationController _notifyAboutTemporaryBlockStatusChanged]
  -[SBFUserAuthenticationController .cxx_destruct]
  -[SBFUserAuthenticationController _updateAuthenticationStateImmediately:forPublicReason:]
  -[SBFUserAuthenticationController keybag:extendedStateDidChange:]
  -[SBFUserAuthenticationController inSecureDisplayMode]
  -[SBFUserAuthenticationController _policy]
  -[SBFUserAuthenticationController succinctDescription]
  -[SBFUserAuthenticationController _unblockTimerFired]
  -[SBFUserAuthenticationController _boolForAuthenticationResult:]
  -[SBFUserAuthenticationController _revokeAuthenticationImmediately:forPublicReason:]
  -[SBFUserAuthenticationController _evaluatePasscodeAttempt:outError:]
  -[SBFUserAuthenticationController _updateAuthenticationStateForPublicReason:]
  -[SBFUserAuthenticationController _addAsFirstResponder:]
  -[SBFUserAuthenticationController revokeAuthenticationImmediatelyIfNecessaryForPublicReason:]
  -[SBFUserAuthenticationController notePasscodeEntryCancelled]
  -[SBFUserAuthenticationController _timeUntilUnblockedSinceReferenceDate]
  -[SBFUserAuthenticationController _refreshModelCacheIfNeeded]
  -[SBFUserAuthenticationController _handleSuccessfulAuthentication:responder:]
  -[SBFUserAuthenticationController _isPermanentlyBlocked]
  -[SBFUserAuthenticationController _setAuthState:]
  -[SBFUserAuthenticationController _invalidateCachedPasscodeLockState]
  -[SBFUserAuthenticationController _authenticateIfInGracePeriod]
  -[SBFUserAuthenticationController _notifyClientsOfAuthenticationResult:forRequest:error:withResponder:]
  -[SBFUserAuthenticationController isAuthenticatedCached]
  -[SBFUserAuthenticationController _setPolicy:]
  -[SBFUserAuthenticationController lastRevokedAuthenticationDate]
  -[SBFUserAuthenticationController removeResponder:]
  -[SBFUserAuthenticationController _handleFailedAuthentication:error:responder:]
  -[SBFUserAuthenticationController _updateAuthenticationStateAndDateForLockState:]
  -[SBFUserAuthenticationController _addPrivateAuthenticationObserver:]
  -[SBFUserAuthenticationController _processAuthenticationRequest:responder:]
  -[SBFUserAuthenticationController _isInBioUnlockState]
  -[SBFUserAuthenticationController _setupPolicy:]
  -[SBFUserAuthenticationController hasAuthenticatedAtLeastOnceSinceBoot]
  -[SBFUserAuthenticationController initWithAssertionManager:policy:keybag:model:]
  -[SBFUserAuthenticationController revokeAuthenticationImmediatelyForPublicReason:]
  -[SBFUserAuthenticationController keybagDidUnlockForTheFirstTime:]
  -[SBFUserAuthenticationController initWithAssertionManager:policy:]
  -[SBFUserAuthenticationController succinctDescriptionBuilder]
  -[SBFUserAuthenticationController deviceLockModelRequestsDeviceWipe:]
  -[SBFUserAuthenticationController _removePrivateAuthenticationObserver:]
  -[SBFUserAuthenticationController _isAssertionValid:]
  -[SBFUserAuthenticationController _evaluateAuthenticationAttempt:outError:]
  -[SBFUserAuthenticationController _handleInvalidAuthentication:responder:]
  -[SBFUserAuthenticationController notePasscodeEntryBegan]
  -[SBFUserAuthenticationController _noteDeviceLockStateMayHaveChangedForExternalReasons]
  -[SBFUserAuthenticationController _performNilPasscodeCheck]
  -[SBFUserAuthenticationController _setup_runLoopObserverIfNecessary]
  -[SBFUserAuthenticationController _clearBlockedState]
  -[SBFUserAuthenticationController _uncachePasscodeIfNecessary]
  -[SBFUserAuthenticationController _isTemporarilyBlocked]
  -[SBFUserAuthenticationController createGracePeriodAssertionWithReason:]
  -[SBFUserAuthenticationController _removeAuthenticationAssertion:]


SBRecentDisplayItemsDefaults : SBAbstractSpringBoardDefaultDomain
 @property  NSArray *commandTabPlistRepresentation
 @property  NSArray *dockRecentsPlistRepresentation

  // instance methods
  -[SBRecentDisplayItemsDefaults _bindAndRegisterDefaults]


SBMiscellaneousDefaults : SBAbstractSpringBoardDefaultDomain
 @property  long long dataPlanActivationPromptCount
 @property  BOOL suppressNoSimAlert
 @property  BOOL walletPreArmForceLockButton
 @property  BOOL suppressAlertsForKeynote
 @property  BOOL unobscureIntersensorRegion
 @property  BOOL sensitiveUIEnabled
 @property  BOOL disableAsyncRenderingSurfaceRetention
 @property  BOOL launchWithMallocStackLogging
 @property  BOOL disableAutomaticMallocStackLogging
 @property  BOOL enableDynamicJetsamLimits
 @property  float backlightLevel

  // instance methods
  -[SBMiscellaneousDefaults _bindAndRegisterDefaults]


SBFLockScreenActionContext : NSObject
 @property  NSString *identifier
 @property  NSString *lockLabel
 @property  NSString *shortLockLabel
 @property  NSString *unlockDestination
 @property  @? action
 @property  BOOL requiresUIUnlock
 @property  BOOL deactivateAwayController
 @property  BOOL canBypassPinLock
 @property  BOOL requiresAuthentication
 @property  BOOL wantsBiometricPresentation
 @property  BOOL confirmedNotInPocket
 @property  int source
 @property  int intent
 @property  BOOL hasCustomUnlockLabel

  // instance methods
  -[SBFLockScreenActionContext source]
  -[SBFLockScreenActionContext canBypassPinLock]
  -[SBFLockScreenActionContext setCanBypassPinLock:]
  -[SBFLockScreenActionContext identifier]
  -[SBFLockScreenActionContext setSource:]
  -[SBFLockScreenActionContext confirmedNotInPocket]
  -[SBFLockScreenActionContext setIntent:]
  -[SBFLockScreenActionContext requiresAuthentication]
  -[SBFLockScreenActionContext .cxx_destruct]
  -[SBFLockScreenActionContext setConfirmedNotInPocket:]
  -[SBFLockScreenActionContext action]
  -[SBFLockScreenActionContext setRequiresAuthentication:]
  -[SBFLockScreenActionContext setIdentifier:]
  -[SBFLockScreenActionContext setWantsBiometricPresentation:]
  -[SBFLockScreenActionContext wantsBiometricPresentation]
  -[SBFLockScreenActionContext setAction:]
  -[SBFLockScreenActionContext intent]
  -[SBFLockScreenActionContext initWithLockLabel:shortLockLabel:action:identifier:]
  -[SBFLockScreenActionContext lockLabel]
  -[SBFLockScreenActionContext shortLockLabel]
  -[SBFLockScreenActionContext hasCustomUnlockLabel]
  -[SBFLockScreenActionContext setLockLabel:]
  -[SBFLockScreenActionContext setShortLockLabel:]
  -[SBFLockScreenActionContext unlockDestination]
  -[SBFLockScreenActionContext setUnlockDestination:]
  -[SBFLockScreenActionContext requiresUIUnlock]
  -[SBFLockScreenActionContext setRequiresUIUnlock:]
  -[SBFLockScreenActionContext deactivateAwayController]
  -[SBFLockScreenActionContext setDeactivateAwayController:]


SBFMutableLockScreenActionContext : SBFLockScreenActionContext
 @property  NSString *identifier
 @property  NSString *lockLabel
 @property  NSString *shortLockLabel
 @property  NSString *unlockDestination
 @property  @? action
 @property  BOOL requiresUIUnlock
 @property  BOOL deactivateAwayController
 @property  BOOL canBypassPinLock
 @property  BOOL requiresAuthentication
 @property  BOOL wantsBiometricPresentation
 @property  BOOL confirmedNotInPocket
 @property  int source
 @property  int intent


SBFApplication : NSObject
 @property  NSString *applicationBundleIdentifier
 @property  NSString *displayName
 @property  NSURL *bundleURL
 @property  BOOL systemOrInternalApplication
 @property  NSNumber *appStoreItemID
 @property  NSString *applicationShortcutWidgetBundleIdentifier
 @property  NSArray *staticApplicationShortcutItems
 @property  NSArray *dynamicApplicationShortcutItems

  // instance methods
  -[SBFApplication applicationBundleIdentifier]
  -[SBFApplication bundleURL]
  -[SBFApplication initWithApplicationBundleIdentifier:]
  -[SBFApplication _updateApplicationShortcutServiceFetchResult]
  -[SBFApplication staticApplicationShortcutItems]
  -[SBFApplication dealloc]
  -[SBFApplication .cxx_destruct]
  -[SBFApplication applicationShortcutWidgetBundleIdentifier]
  -[SBFApplication appStoreItemID]
  -[SBFApplication isSystemOrInternalApplication]
  -[SBFApplication displayName]
  -[SBFApplication init]
  -[SBFApplication dynamicApplicationShortcutItems]


SBPIPDefaults : SBAbstractSpringBoardDefaultDomain
 @property  NSDictionary *lastKnownCornerPositionByContentType
 @property  NSDictionary *lastKnownSizeByContentType
 @property  BOOL allowAutoPIP
 @property  BOOL visualizeKeyboardFrame
 @property  BOOL visualizePositionRegions
 @property  BOOL initiallyUsesMinimumPreferredContentSize

  // instance methods
  -[SBPIPDefaults _bindAndRegisterDefaults]
  -[SBPIPDefaults lastKnownCornerPositionForContentType:]
  -[SBPIPDefaults setLastKnownCornerPosition:contentType:]
  -[SBPIPDefaults lastKnownSizeForContentType:]
  -[SBPIPDefaults setLastKnownSize:contentType:]


SBFOverridableDateProvider : NSObject <SBFDateTimeOverrideObserver, SBFDateProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFOverridableDateProvider controller:didChangeOverrideDateFromDate:]
  -[SBFOverridableDateProvider initWithDateProvider:]
  -[SBFOverridableDateProvider date]
  -[SBFOverridableDateProvider .cxx_destruct]
  -[SBFOverridableDateProvider _updateUnderlyingProvider]
  -[SBFOverridableDateProvider removeMinuteUpdateHandler:]
  -[SBFOverridableDateProvider _updateForOverrides]
  -[SBFOverridableDateProvider observeMinuteUpdatesWithHandler:]
  -[SBFOverridableDateProvider init]
  -[SBFOverridableDateProvider _fireHandlersForDate:]


SBBiometricAuthenticationDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL logTimestampsEnabled

  // instance methods
  -[SBBiometricAuthenticationDefaults _bindAndRegisterDefaults]


SBStateDumpDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL remoteDumpEnabled
 @property  NSNumber *remoteDumpTimeout

  // instance methods
  -[SBStateDumpDefaults _bindAndRegisterDefaults]


SBFWallpaperImage : PBUIWallpaperImage

SBTestingDefaults : SBAbstractSpringBoardDefaultDomain
 @property  NSString *testRunnerRecoveryApplicationBundleIdentifier

  // instance methods
  -[SBTestingDefaults _bindAndRegisterDefaults]


SBFLegibilityDomain : PTDomain
  // class methods
  +[SBFLegibilityDomain rootSettings]
  +[SBFLegibilityDomain domainName]
  +[SBFLegibilityDomain domainGroupName]
  +[SBFLegibilityDomain rootSettingsClass]


SBFAuthenticationAssertion : NSObject <BSDescriptionProviding>
 @property  BOOL valid
 @property  long long type
 @property  NSString *identifier
 @property  SBFUserAuthenticationController *controller
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFAuthenticationAssertion activate]
  -[SBFAuthenticationAssertion identifier]
  -[SBFAuthenticationAssertion descriptionWithMultilinePrefix:]
  -[SBFAuthenticationAssertion type]
  -[SBFAuthenticationAssertion descriptionBuilderWithMultilinePrefix:]
  -[SBFAuthenticationAssertion publicDescription]
  -[SBFAuthenticationAssertion dealloc]
  -[SBFAuthenticationAssertion isValid]
  -[SBFAuthenticationAssertion .cxx_destruct]
  -[SBFAuthenticationAssertion succinctDescription]
  -[SBFAuthenticationAssertion initWithIdentifier:type:withController:]
  -[SBFAuthenticationAssertion controller]
  -[SBFAuthenticationAssertion invalidate]
  -[SBFAuthenticationAssertion succinctDescriptionBuilder]


SBFStatusBarLegibilityView : UIView <SBUILegibility>
 @property  UIView *statusBarGradientView
 @property  UIImageView *leftCornerView
 @property  UIImageView *rightCornerView
 @property  BOOL forceLegibilityGradientHidden
 @property  double strength
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFStatusBarLegibilityView gradientViewWithOpacities:locations:]
  +[SBFStatusBarLegibilityView statusBarGradientView]

  // instance methods
  -[SBFStatusBarLegibilityView setForceLegibilityGradientHidden:]
  -[SBFStatusBarLegibilityView rightCornerView]
  -[SBFStatusBarLegibilityView setRightCornerView:]
  -[SBFStatusBarLegibilityView _configureAsPad]
  -[SBFStatusBarLegibilityView forceLegibilityGradientHidden]
  -[SBFStatusBarLegibilityView setStrength:]
  -[SBFStatusBarLegibilityView _configureWithLegibilitySettings:forceLegibilityGradientHidden:]
  -[SBFStatusBarLegibilityView .cxx_destruct]
  -[SBFStatusBarLegibilityView _configureAsPhone]
  -[SBFStatusBarLegibilityView setStatusBarGradientView:]
  -[SBFStatusBarLegibilityView layoutSubviews]
  -[SBFStatusBarLegibilityView setLeftCornerView:]
  -[SBFStatusBarLegibilityView setLegibilitySettings:]
  -[SBFStatusBarLegibilityView statusBarGradientView]
  -[SBFStatusBarLegibilityView leftCornerView]
  -[SBFStatusBarLegibilityView strength]
  -[SBFStatusBarLegibilityView legibilitySettings]


SBStatusBarLegibilityGradientView : UIView
  // class methods
  +[SBStatusBarLegibilityGradientView layerClass]


SBFFileCache : NSObject
 @property  double accessDateTimeAdjustment
 @property  <SBFFileCacheStore> *store
 @property  <SBFFileCacheFaultHandler> *faultHandler
 @property  <SBFFileCacheDelegate> *delegate
 @property  unsigned long maxTotalFileSize
 @property  unsigned long maxTotalFileCount
 @property  double maxAllowedTimeSinceLastAccess
 @property  double maxAllowedTimeSinceGeneration

  // instance methods
  -[SBFFileCache store]
  -[SBFFileCache setDelegate:]
  -[SBFFileCache delegate]
  -[SBFFileCache callbackQueue]
  -[SBFFileCache .cxx_destruct]
  -[SBFFileCache removeAllFiles]
  -[SBFFileCache init]
  -[SBFFileCache initWithStore:faultHandler:]
  -[SBFFileCache loadFileWithIdentifier:completionHandler:]
  -[SBFFileCache removeFileWithIdentifier:]
  -[SBFFileCache fileNameForIdentifier:]
  -[SBFFileCache performOnWorkQueueUsingBlock:]
  -[SBFFileCache _queue_loadManifestUsingStore:]
  -[SBFFileCache _queue_saveManifestUsingStore:]
  -[SBFFileCache _queue_createManifestEntryForGeneratedFileWrapper:filename:usingStore:]
  -[SBFFileCache _queue_updateManifestForLoadedFileWrapper:filename:usingStore:]
  -[SBFFileCache _queue_removeManifestEntryForFilename:usingStore:]
  -[SBFFileCache _queue_evictIfNeededUsingStore:]
  -[SBFFileCache _queue_evictFilesAtManifestIndexes:usingStore:]
  -[SBFFileCache _queue_evictFileWithInfo:usingStore:]
  -[SBFFileCache _queue_resetManifestUsingStore:]
  -[SBFFileCache faultHandler]
  -[SBFFileCache maxTotalFileSize]
  -[SBFFileCache setMaxTotalFileSize:]
  -[SBFFileCache maxTotalFileCount]
  -[SBFFileCache setMaxTotalFileCount:]
  -[SBFFileCache maxAllowedTimeSinceLastAccess]
  -[SBFFileCache setMaxAllowedTimeSinceLastAccess:]
  -[SBFFileCache maxAllowedTimeSinceGeneration]
  -[SBFFileCache setMaxAllowedTimeSinceGeneration:]
  -[SBFFileCache accessDateTimeAdjustment]
  -[SBFFileCache setAccessDateTimeAdjustment:]


SBFFileCacheFileStore : NSObject <SBFFileCacheStore>
 @property  NSURL *directoryURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFFileCacheFileStore directoryURL]
  -[SBFFileCacheFileStore .cxx_destruct]
  -[SBFFileCacheFileStore initWithDirectoryURL:]
  -[SBFFileCacheFileStore init]
  -[SBFFileCacheFileStore fileCache:storeFileWrapper:]
  -[SBFFileCacheFileStore fileCache:loadFileWrapperNamed:]
  -[SBFFileCacheFileStore fileCache:removeFileWrapperNamed:]
  -[SBFFileCacheFileStore removeAllFileWrappersForFileCache:]
  -[SBFFileCacheFileStore fileURLForFileNamed:]


SBFFileCacheMemoryStore : NSObject <SBFFileCacheStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFFileCacheMemoryStore .cxx_destruct]
  -[SBFFileCacheMemoryStore fileCache:storeFileWrapper:]
  -[SBFFileCacheMemoryStore fileCache:loadFileWrapperNamed:]
  -[SBFFileCacheMemoryStore fileCache:removeFileWrapperNamed:]
  -[SBFFileCacheMemoryStore removeAllFileWrappersForFileCache:]


SBFFileCacheURLFaultHandler : NSObject <SBFFileCacheFaultHandler>
 @property  NSURLSession *urlSession
 @property  NSArray *retryIntervals
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFFileCacheURLFaultHandler setUrlSession:]
  -[SBFFileCacheURLFaultHandler urlSession]
  -[SBFFileCacheURLFaultHandler .cxx_destruct]
  -[SBFFileCacheURLFaultHandler init]
  -[SBFFileCacheURLFaultHandler fileCache:loadFileForIdentifier:completionHandler:]
  -[SBFFileCacheURLFaultHandler attemptLoadFromURL:session:retryIntervalEnumerator:completionHandler:]
  -[SBFFileCacheURLFaultHandler performLoadFromURL:session:completionHandler:]
  -[SBFFileCacheURLFaultHandler retryIntervals]
  -[SBFFileCacheURLFaultHandler setRetryIntervals:]


SBFMappedImageCache : BSUIMappedImageCache
  // class methods
  +[SBFMappedImageCache systemAppPersistenteCache]

  // instance methods
  -[SBFMappedImageCache initWithDescription:]
  -[SBFMappedImageCache imageForKey:generateImageWithBlockIfNecessary:]
  -[SBFMappedImageCache imageForKey:options:generateImageWithBlockIfNecessary:]
  -[SBFMappedImageCache imageForKey:options:]
  -[SBFMappedImageCache imageForKey:cacheOptions:generateImageWithBlockIfNecessary:]
  -[SBFMappedImageCache warmupImageForKey:]


SBUsageDefaults : BSAbstractDefaultDomain
 @property  NSNumber *standbyTime
 @property  NSNumber *batteryUsageTime
 @property  BOOL hasChargedPartially

  // instance methods
  -[SBUsageDefaults _bindAndRegisterDefaults]
  -[SBUsageDefaults clearUsageDefaults]


SBFButton : UIButton
  // instance methods
  -[SBFButton _updateForStateChange]
  -[SBFButton setSelected:]
  -[SBFButton setHighlighted:]
  -[SBFButton initWithFrame:]
  -[SBFButton _touchUpInside]
  -[SBFButton _drawingAsSelected]
  -[SBFButton _updateSelected:highlighted:]


SBFUserAuthenticationModelEducationalMode : NSObject <SBFUserAuthenticationModel>
 @property  <SBFUserAuthenticationModelDelegate> *delegate
 @property  BOOL temporarilyBlocked
 @property  BOOL permanentlyBlocked
 @property  BOOL userRequestedEraseEnabled
 @property  double timeUntilUnblockedSinceReferenceDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFUserAuthenticationModelEducationalMode notePasscodeUnlockSucceeded]
  -[SBFUserAuthenticationModelEducationalMode synchronize]
  -[SBFUserAuthenticationModelEducationalMode setDelegate:]
  -[SBFUserAuthenticationModelEducationalMode _refreshStateForMkbState:notify:]
  -[SBFUserAuthenticationModelEducationalMode delegate]
  -[SBFUserAuthenticationModelEducationalMode _refreshStateAndNotify:]
  -[SBFUserAuthenticationModelEducationalMode isUserRequestedEraseEnabled]
  -[SBFUserAuthenticationModelEducationalMode timeUntilUnblockedSinceReferenceDate]
  -[SBFUserAuthenticationModelEducationalMode .cxx_destruct]
  -[SBFUserAuthenticationModelEducationalMode performPasswordTest:]
  -[SBFUserAuthenticationModelEducationalMode notePasscodeUnlockFailedWithError:]
  -[SBFUserAuthenticationModelEducationalMode notePasscodeEntryCancelled]
  -[SBFUserAuthenticationModelEducationalMode isTemporarilyBlocked]
  -[SBFUserAuthenticationModelEducationalMode initWithKeyBag:]
  -[SBFUserAuthenticationModelEducationalMode noteNewMkbDeviceLockState:]
  -[SBFUserAuthenticationModelEducationalMode isPermanentlyBlocked]
  -[SBFUserAuthenticationModelEducationalMode notePasscodeEntryBegan]


SBWorkspaceDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL medusaEnabled
 @property  long long medusaDeviceSimulation
 @property  BOOL breadcrumbDisabled

  // instance methods
  -[SBWorkspaceDefaults _bindAndRegisterDefaults]


SBFTraitsSettings : NSObject <NSCopying, NSMutableCopying, BSDescriptionProviding>
 @property  SBFTraitsSettingsZOrderLevel *zOrderLevelSettings
 @property  SBFTraitsSettingsOrientation *orientationSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsSettings initWithSettings:]
  -[SBFTraitsSettings setOrientationSettings:]
  -[SBFTraitsSettings descriptionWithMultilinePrefix:]
  -[SBFTraitsSettings descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsSettings .cxx_destruct]
  -[SBFTraitsSettings succinctDescription]
  -[SBFTraitsSettings setZOrderLevelSettings:]
  -[SBFTraitsSettings zOrderLevelSettings]
  -[SBFTraitsSettings initWithZOrderLevelSettings:orientationSettings:]
  -[SBFTraitsSettings copyWithZone:]
  -[SBFTraitsSettings orientationSettings]
  -[SBFTraitsSettings succinctDescriptionBuilder]
  -[SBFTraitsSettings mutableCopyWithZone:]
  -[SBFTraitsSettings init]


SBFMutableTraitsSettings : SBFTraitsSettings
 @property  SBFTraitsSettingsZOrderLevel *zOrderLevelSettings
 @property  SBFTraitsSettingsOrientation *orientationSettings

  // instance methods
  -[SBFMutableTraitsSettings setOrientationSettings:]
  -[SBFMutableTraitsSettings setZOrderLevelSettings:]
  -[SBFMutableTraitsSettings copyWithZone:]
  -[SBFMutableTraitsSettings mutableCopyWithZone:]


SBFTraitsSettingsZOrderLevel : NSObject <NSCopying, NSMutableCopying>
 @property  double zOrderLevel

  // instance methods
  -[SBFTraitsSettingsZOrderLevel isEqualToZOrderLevelSettings:]
  -[SBFTraitsSettingsZOrderLevel zOrderLevel]
  -[SBFTraitsSettingsZOrderLevel initWithZOrderLevelSettings:]
  -[SBFTraitsSettingsZOrderLevel initWithZOrderLevel:]
  -[SBFTraitsSettingsZOrderLevel setZOrderLevel:]
  -[SBFTraitsSettingsZOrderLevel copyWithZone:]
  -[SBFTraitsSettingsZOrderLevel mutableCopyWithZone:]
  -[SBFTraitsSettingsZOrderLevel isEqual:]
  -[SBFTraitsSettingsZOrderLevel init]


SBFMutableTraitsSettingsZOrderLevel : SBFTraitsSettingsZOrderLevel
 @property  double zOrderLevel

  // instance methods
  -[SBFMutableTraitsSettingsZOrderLevel setZOrderLevel:]
  -[SBFMutableTraitsSettingsZOrderLevel copyWithZone:]
  -[SBFMutableTraitsSettingsZOrderLevel mutableCopyWithZone:]


SBFTraitsSettingsOrientation : NSObject <NSCopying, NSMutableCopying, BSDescriptionProviding>
 @property  long long orientation
 @property  <BSInterfaceOrientationMapResolving><BSXPCSecureCoding> *orientationMapResolver
 @property  SBFTraitsArbitrationDeviceOrientationInputs *validatedOrientationInputs
 @property  SBFTraitsArbitrationDeviceOrientationInputs *rawOrientationInputs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsSettingsOrientation initWithOrientation:]
  -[SBFTraitsSettingsOrientation setOrientationMapResolver:]
  -[SBFTraitsSettingsOrientation setRawOrientationInputs:]
  -[SBFTraitsSettingsOrientation descriptionWithMultilinePrefix:]
  -[SBFTraitsSettingsOrientation descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsSettingsOrientation orientation]
  -[SBFTraitsSettingsOrientation .cxx_destruct]
  -[SBFTraitsSettingsOrientation succinctDescription]
  -[SBFTraitsSettingsOrientation rawOrientationInputs]
  -[SBFTraitsSettingsOrientation setOrientation:]
  -[SBFTraitsSettingsOrientation initWithOrientationSettings:]
  -[SBFTraitsSettingsOrientation copyWithZone:]
  -[SBFTraitsSettingsOrientation orientationMapResolver]
  -[SBFTraitsSettingsOrientation setValidatedOrientationInputs:]
  -[SBFTraitsSettingsOrientation succinctDescriptionBuilder]
  -[SBFTraitsSettingsOrientation initWithOrientation:orientationMapResolver:validatedOrientationInputs:rawOrientationInputs:]
  -[SBFTraitsSettingsOrientation mutableCopyWithZone:]
  -[SBFTraitsSettingsOrientation isEqualToOrientationSettings:]
  -[SBFTraitsSettingsOrientation isEqual:]
  -[SBFTraitsSettingsOrientation init]
  -[SBFTraitsSettingsOrientation validatedOrientationInputs]


SBFMutableTraitsSettingsOrientation : SBFTraitsSettingsOrientation
 @property  long long orientation
 @property  <BSInterfaceOrientationMapResolving><BSXPCSecureCoding> *orientationMapResolver
 @property  SBFTraitsArbitrationDeviceOrientationInputs *validatedOrientationInputs
 @property  SBFTraitsArbitrationDeviceOrientationInputs *rawOrientationInputs

  // instance methods
  -[SBFMutableTraitsSettingsOrientation setOrientationMapResolver:]
  -[SBFMutableTraitsSettingsOrientation setRawOrientationInputs:]
  -[SBFMutableTraitsSettingsOrientation setOrientation:]
  -[SBFMutableTraitsSettingsOrientation copyWithZone:]
  -[SBFMutableTraitsSettingsOrientation setValidatedOrientationInputs:]
  -[SBFMutableTraitsSettingsOrientation mutableCopyWithZone:]


SBFTraitsSettingsActuationContext : NSObject <NSCopying, BSDescriptionProviding>
 @property  BSAnimationSettings *animationSettings
 @property  id drawingFence
 @property  BOOL preventTouchCancellation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsSettingsActuationContext drawingFence]
  -[SBFTraitsSettingsActuationContext preventTouchCancellation]
  -[SBFTraitsSettingsActuationContext descriptionWithMultilinePrefix:]
  -[SBFTraitsSettingsActuationContext descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsSettingsActuationContext setAnimationSettings:]
  -[SBFTraitsSettingsActuationContext .cxx_destruct]
  -[SBFTraitsSettingsActuationContext initWithAnimationSettings:drawingFence:]
  -[SBFTraitsSettingsActuationContext animationSettings]
  -[SBFTraitsSettingsActuationContext succinctDescription]
  -[SBFTraitsSettingsActuationContext initWithSettingsActuationContext:]
  -[SBFTraitsSettingsActuationContext copyWithZone:]
  -[SBFTraitsSettingsActuationContext setDrawingFence:]
  -[SBFTraitsSettingsActuationContext initWithAnimationSettings:drawingFence:preventTouchCancellation:]
  -[SBFTraitsSettingsActuationContext succinctDescriptionBuilder]
  -[SBFTraitsSettingsActuationContext isEqualToSettingsActuationContext:]
  -[SBFTraitsSettingsActuationContext isEqual:]
  -[SBFTraitsSettingsActuationContext init]


SBFTraitsSettingsValidator : NSObject <SBFTraitsSettingsValidating>
 @property  BOOL orientationSettingsValidated
 @property  NSString *orientationSettingsValidatedReason
 @property  SBFTraitsSettingsOrientation *orientationSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsSettingsValidator setOrientationSettings:]
  -[SBFTraitsSettingsValidator .cxx_destruct]
  -[SBFTraitsSettingsValidator validateOrientationSettingsWithBlock:]
  -[SBFTraitsSettingsValidator setOrientationSettingsValidatedReason:]
  -[SBFTraitsSettingsValidator orientationSettingsValidatedReason]
  -[SBFTraitsSettingsValidator orientationSettings]
  -[SBFTraitsSettingsValidator didValidateOrientationSettings]
  -[SBFTraitsSettingsValidator setOrientationSettingsValidated:]


SBAnalyticsContextProvider : NSObject <SBFAnalyticsBackendEventContextProviding>
 @property  SBSAnalyticsState *eventPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBAnalyticsContextProvider .cxx_destruct]
  -[SBAnalyticsContextProvider eventPayload]
  -[SBAnalyticsContextProvider initWithEventPayload:backend:]
  -[SBAnalyticsContextProvider stateForQueryName:completion:]


SBFAnalyticsClient : NSObject
 @property  NSString *significantTimeChangedNotificationName

  // class methods
  +[SBFAnalyticsClient sharedInstance]

  // instance methods
  -[SBFAnalyticsClient significantTimeChangedNotificationName]
  -[SBFAnalyticsClient emitEvent:]
  -[SBFAnalyticsClient _noteSignificantTimeChanged:]
  -[SBFAnalyticsClient .cxx_destruct]
  -[SBFAnalyticsClient emitEvent:withPayload:]
  -[SBFAnalyticsClient setSignificantTimeChangedNotificationName:]
  -[SBFAnalyticsClient registerForQueryName:handler:]
  -[SBFAnalyticsClient initWithBackend:]


SBFTraitsPreferencesZOrderLevel : NSObject <NSCopying, NSMutableCopying, BSDescriptionProviding>
 @property  double preferredZOrderLevel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsPreferencesZOrderLevel initWithZOrderLevelPreferences:]
  -[SBFTraitsPreferencesZOrderLevel descriptionWithMultilinePrefix:]
  -[SBFTraitsPreferencesZOrderLevel initWithPreferredZOrderLevel:]
  -[SBFTraitsPreferencesZOrderLevel descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsPreferencesZOrderLevel isEqualToZOrderLevelPreferences:]
  -[SBFTraitsPreferencesZOrderLevel succinctDescription]
  -[SBFTraitsPreferencesZOrderLevel setPreferredZOrderLevel:]
  -[SBFTraitsPreferencesZOrderLevel copyWithZone:]
  -[SBFTraitsPreferencesZOrderLevel succinctDescriptionBuilder]
  -[SBFTraitsPreferencesZOrderLevel mutableCopyWithZone:]
  -[SBFTraitsPreferencesZOrderLevel isEqual:]
  -[SBFTraitsPreferencesZOrderLevel init]
  -[SBFTraitsPreferencesZOrderLevel preferredZOrderLevel]


SBFMutableTraitsPreferencesZOrderLevel : SBFTraitsPreferencesZOrderLevel
 @property  double preferredZOrderLevel

  // instance methods
  -[SBFMutableTraitsPreferencesZOrderLevel setPreferredZOrderLevel:]
  -[SBFMutableTraitsPreferencesZOrderLevel copyWithZone:]
  -[SBFMutableTraitsPreferencesZOrderLevel mutableCopyWithZone:]


SBFTraitsPreferencesOrientation : NSObject <NSCopying, NSMutableCopying, BSDescriptionProviding>
 @property  unsigned long supportedOrientations
 @property  long long preferredOrientation
 @property  BOOL canDetermineActiveOrientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsPreferencesOrientation initWithOrientationPreferences:]
  -[SBFTraitsPreferencesOrientation canDetermineActiveOrientation]
  -[SBFTraitsPreferencesOrientation setCanDetermineActiveOrientation:]
  -[SBFTraitsPreferencesOrientation supportedOrientations]
  -[SBFTraitsPreferencesOrientation descriptionWithMultilinePrefix:]
  -[SBFTraitsPreferencesOrientation isEqualToOrientationPreferences:]
  -[SBFTraitsPreferencesOrientation descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsPreferencesOrientation setPreferredOrientation:]
  -[SBFTraitsPreferencesOrientation succinctDescription]
  -[SBFTraitsPreferencesOrientation setSupportedOrientations:]
  -[SBFTraitsPreferencesOrientation copyWithZone:]
  -[SBFTraitsPreferencesOrientation initWithSupportedMask:preferred:determinesActiveOrientation:]
  -[SBFTraitsPreferencesOrientation preferredOrientation]
  -[SBFTraitsPreferencesOrientation succinctDescriptionBuilder]
  -[SBFTraitsPreferencesOrientation initWithSupportedMask:determinesActiveOrientation:]
  -[SBFTraitsPreferencesOrientation mutableCopyWithZone:]
  -[SBFTraitsPreferencesOrientation isEqual:]
  -[SBFTraitsPreferencesOrientation init]


SBFMutableTraitsPreferencesOrientation : SBFTraitsPreferencesOrientation
 @property  unsigned long supportedOrientations
 @property  long long preferredOrientation
 @property  BOOL canDetermineActiveOrientation

  // instance methods
  -[SBFMutableTraitsPreferencesOrientation setCanDetermineActiveOrientation:]
  -[SBFMutableTraitsPreferencesOrientation setPreferredOrientation:]
  -[SBFMutableTraitsPreferencesOrientation setSupportedOrientations:]
  -[SBFMutableTraitsPreferencesOrientation copyWithZone:]
  -[SBFMutableTraitsPreferencesOrientation mutableCopyWithZone:]


SBFSecureDisplayCoordinator : NSObject
 @property  BOOL secureMode

  // instance methods
  -[SBFSecureDisplayCoordinator inSecureMode]
  -[SBFSecureDisplayCoordinator setSecureMode:postNotification:]
  -[SBFSecureDisplayCoordinator setSecureMode:]


SBFTraitsParticipant : NSObject <SBFTraitsPreferencesUpdating, SBFTraitsSettingsUpdating, SBFTraitsSettingsActuationContextProviding, SBFTraitsPreferencesProviding, SBFTraitsResolutionPoliciesProviding, NSCopying, BSInvalidatable, BSDescriptionProviding, SBFTraitsSettingsProviding>
 @property  NSString *role
 @property  NSString *uniqueIdentifier
 @property  <SBFTraitsParticipantDelegate> *delegate
 @property  SBFTraitsArbiter *arbiter
 @property  SBFTraitsPreferencesZOrderLevel *zOrderLevelPreferences
 @property  SBFTraitsPreferencesOrientation *orientationPreferences
 @property  SBFTraitsSettings *currentSettings
 @property  SBFTraitsSettings *previousSettings
 @property  BOOL _debugDelegateDidValidateLastSettings
 @property  NSString *_debugLastOrientationValidationFailureReason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBFTraitsSettingsActuationContext *orientationActuationContext
 @property  SBFTraitsOrientationResolutionPolicyInfo *orientationResolutionPolicyInfo

  // instance methods
  -[SBFTraitsParticipant arbiter]
  -[SBFTraitsParticipant setUniqueIdentifier:]
  -[SBFTraitsParticipant setOrientationPreferences:]
  -[SBFTraitsParticipant orientationActuationContext]
  -[SBFTraitsParticipant setNeedsUpdatePreferencesWithReason:animate:]
  -[SBFTraitsParticipant updateOrientationPreferencesWithBlock:]
  -[SBFTraitsParticipant currentOrientation]
  -[SBFTraitsParticipant setDelegate:]
  -[SBFTraitsParticipant role]
  -[SBFTraitsParticipant setCurrentSettings:]
  -[SBFTraitsParticipant descriptionWithMultilinePrefix:]
  -[SBFTraitsParticipant orientationPreferences]
  -[SBFTraitsParticipant currentZOrderLevel]
  -[SBFTraitsParticipant delegate]
  -[SBFTraitsParticipant setZOrderLevelPreferences:]
  -[SBFTraitsParticipant descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsParticipant _setupStateDump]
  -[SBFTraitsParticipant set_debugLastOrientationValidationFailureReason:]
  -[SBFTraitsParticipant orientationResolutionPolicyInfo]
  -[SBFTraitsParticipant dealloc]
  -[SBFTraitsParticipant .cxx_destruct]
  -[SBFTraitsParticipant succinctDescription]
  -[SBFTraitsParticipant set_debugDelegateDidValidateLastSettings:]
  -[SBFTraitsParticipant setRole:]
  -[SBFTraitsParticipant previousDeviceOrientation]
  -[SBFTraitsParticipant hasAnyActuationContext]
  -[SBFTraitsParticipant setPreviousSettings:]
  -[SBFTraitsParticipant updateZOrderLevelSettingsWithBlock:]
  -[SBFTraitsParticipant setOrientationResolutionPolicyInfo:]
  -[SBFTraitsParticipant currentDeviceOrientation]
  -[SBFTraitsParticipant currentSettings]
  -[SBFTraitsParticipant copyWithZone:]
  -[SBFTraitsParticipant setNeedsUpdatePreferencesWithReason:force:animate:]
  -[SBFTraitsParticipant zOrderLevelPreferences]
  -[SBFTraitsParticipant previousZOrderLevel]
  -[SBFTraitsParticipant invalidate]
  -[SBFTraitsParticipant uniqueIdentifier]
  -[SBFTraitsParticipant setNeedsUpdatePreferencesWithReason:force:]
  -[SBFTraitsParticipant succinctDescriptionBuilder]
  -[SBFTraitsParticipant previousSettings]
  -[SBFTraitsParticipant _debugDelegateDidValidateLastSettings]
  -[SBFTraitsParticipant _debugLastOrientationValidationFailureReason]
  -[SBFTraitsParticipant updateOrientationSettingsWithBlock:]
  -[SBFTraitsParticipant setArbiter:]
  -[SBFTraitsParticipant updatePreferencesIfNeeded]
  -[SBFTraitsParticipant previousOrientation]
  -[SBFTraitsParticipant setNeedsUpdatePreferencesWithReason:]
  -[SBFTraitsParticipant initWithRole:uniqueIdentifier:delegate:arbiter:]
  -[SBFTraitsParticipant updateZOrderLevelPreferencesWithBlock:]


SBExternalDisplayDefaults : SBAbstractSpringBoardDefaultDomain
 @property  NSDictionary *displayModeSettingsMap
 @property  unsigned int arrangementEdge
 @property  double arrangementOffset
 @property  BOOL mirroringEnabled
 @property  BOOL extendedDisplayEverEnabledWithHardwareReqsSatisfied
 @property  BOOL extendedDisplayEverEnabledWithoutHardwareReqsSatisfied
 @property  double contentsScale
 @property  BOOL allowWirelessDisplaysForExtendedDisplayMode

  // instance methods
  -[SBExternalDisplayDefaults _bindAndRegisterDefaults]
  -[SBExternalDisplayDefaults resetPrototypeSettingAdjustableDefaults]
  -[SBExternalDisplayDefaults hasShownAllExtendedDisplayEducations]
  -[SBExternalDisplayDefaults displayModeSettingsForDisplay:]
  -[SBExternalDisplayDefaults setDisplayModeSettings:forDisplaysMatchingPredicates:]
  -[SBExternalDisplayDefaults observeDisplayModeSettingsOnQueue:withBlock:]
  -[SBExternalDisplayDefaults _saveDisplaySettingsMapToStore:]
  -[SBExternalDisplayDefaults _constructDisplaySettingsMap]


SBFMotionGestureController : NSObject
  // class methods
  +[SBFMotionGestureController sharedInstance]

  // instance methods
  -[SBFMotionGestureController _observersForPriority:]
  -[SBFMotionGestureController dealloc]
  -[SBFMotionGestureController .cxx_destruct]
  -[SBFMotionGestureController addGestureObserver:]
  -[SBFMotionGestureController removeGestureObserver:]
  -[SBFMotionGestureController init]
  -[SBFMotionGestureController addGestureObserver:withPriority:]
  -[SBFMotionGestureController _addGestureObserver:withPriority:]
  -[SBFMotionGestureController _removeGestureObserver:]
  -[SBFMotionGestureController _notifyObserversOfGesture:]
  -[SBFMotionGestureController _hasObservers]
  -[SBFMotionGestureController _enumerateObserversByPriority:]
  -[SBFMotionGestureController _highestPriorityObservers]
  -[SBFMotionGestureController _updateGestureManager]
  -[SBFMotionGestureController _addGestureManager]
  -[SBFMotionGestureController _removeGestureManager]


SBHomeScreenDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL sidebarPinned
 @property  BOOL shouldUseLargeIcons
 @property  BOOL shouldFudgeShortcutsToCauseMaximumPain
 @property  BOOL shouldHideReportWidgetStackRotationQuickAction
 @property  BOOL shouldPrepareDefaultTodayList
 @property  BOOL shouldPrepareStackForDefaultTodayList
 @property  BOOL shouldUpgradeEnableWidgetSuggestions
 @property  BOOL shouldAddDefaultWidgetsToHomeScreen
 @property  BOOL enableModalWidgetDiscoverabilityForTesting
 @property  NSString *overriddenScreenType
 @property  BOOL automaticallyAddsNewApplications
 @property  BOOL showsBadgesInAppLibrary
 @property  BOOL showsHomeScreenSearchAffordance
 @property  BOOL pagesHaveEverBeenHidden
 @property  BOOL shouldShowLibraryEducationView
 @property  BOOL shouldShowInternalWidgets
 @property  BOOL shouldShowWidgetIntroductionPopover
 @property  BOOL userHasDeletedSuggestedWidget
 @property  BOOL userDidUndoSuggestedWidget
 @property  BOOL widgetScalingEnabled
 @property  NSArray *focusModesRequiringIntroduction

  // instance methods
  -[SBHomeScreenDefaults _bindAndRegisterDefaults]
  -[SBHomeScreenDefaults automaticallyAddsNewApplicationsExists]


SBSoundDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL ringerMuted
 @property  NSString *calendarAlarmPath
 @property  BOOL vibrateWhenRinging
 @property  BOOL vibrateWhenSilent
 @property  BOOL playSoundOnDeviceWake

  // instance methods
  -[SBSoundDefaults _bindAndRegisterDefaults]


SBApplicationDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL forcesMedusaAdoption
 @property  BOOL ignoresDeclaredNetworkUsage
 @property  BOOL shouldAllowScreenshotsInLoginWindow
 @property  NSString *bundleIdentifierToForceHomeAffordanceInset
 @property  BOOL shouldAllowUseOfNonRecapPPT
 @property  BOOL laserForLaunchPPT
 @property  BOOL shouldShowInternalApplications
 @property  BOOL shouldShowNonDefaultSystemApplications

  // instance methods
  -[SBApplicationDefaults _bindAndRegisterDefaults]


SBThermalDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL wasConnectedToWiFiWhenBrickedForThermalConditions

  // instance methods
  -[SBThermalDefaults _bindAndRegisterDefaults]


SBFCARendererImpl : NSObject
  // class methods
  +[SBFCARendererImpl renderTreatedWallpaperImage:needsLuminanceTreatment:needsDimmingTreatment:downsampleFactor:averageColor:]
  +[SBFCARendererImpl renderMaterialImage:recipeName:containingBundle:weighting:downsampleFactor:scaleAdjustment:]
  +[SBFCARendererImpl renderMaterialImage:recipeName:containingBundle:weighting:downsampleFactor:]
  +[SBFCARendererImpl _actuallyRenderImage:requiresBGRA:downsampleFactor:layerCustomizer:]
  +[SBFCARendererImpl luminanceTreatmentFilters]


SBFSubject : SBFObservable <SBFObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFSubject _observers]
  -[SBFSubject subscribe:]
  -[SBFSubject observerDidFailWithError:]
  -[SBFSubject .cxx_destruct]
  -[SBFSubject observerDidComplete]
  -[SBFSubject observerDidReceiveResult:]
  -[SBFSubject init]


SBVoiceControlDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL disableVoiceControlForBluetoothRequests
 @property  BOOL disableHandlerActions
 @property  BOOL voiceControlLoggingEnabled

  // instance methods
  -[SBVoiceControlDefaults _bindAndRegisterDefaults]


SBFTraitsOrientationResolutionPolicyInfo : NSObject <NSCopying, BSDescriptionProviding>
 @property  long long resolutionPolicy
 @property  NSString *associatedParticipantUniqueIdentifier
 @property  NSString *associatedParticipantRole
 @property  NSArray *associatedDeviceOrientationStateTypes
 @property  NSDictionary *associatedDeviceOrientationStateTypesBySupportedOrientationMask
 @property  BOOL forceResolution
 @property  SBFTraitsSettingsActuationContext *actuationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFTraitsOrientationResolutionPolicyInfo resolutionPolicyInfoIsolation]
  +[SBFTraitsOrientationResolutionPolicyInfo resolutionPolicyInfoOrientationBelow]
  +[SBFTraitsOrientationResolutionPolicyInfo resolutionPolicyInfoDeviceOrientation]
  +[SBFTraitsOrientationResolutionPolicyInfo resolutionPolicyInfoDeviceOrientationWithStateTypesBySupportedOrientationMask:]
  +[SBFTraitsOrientationResolutionPolicyInfo resolutionPolicyInfoOrientationBelowParticipantWithRole:]
  +[SBFTraitsOrientationResolutionPolicyInfo resolutionPolicyInfoDeviceOrientationWithStateTypes:]
  +[SBFTraitsOrientationResolutionPolicyInfo resolutionPolicyInfoForAssociatedParticipantWithRole:]
  +[SBFTraitsOrientationResolutionPolicyInfo resolutionPolicyInfoOrientationBelowParticipantWithUniqueID:]
  +[SBFTraitsOrientationResolutionPolicyInfo resolutionPolicyInfoForAssociatedParticipantWithUniqueID:]

  // instance methods
  -[SBFTraitsOrientationResolutionPolicyInfo initWithResolutionPolicyInfo:]
  -[SBFTraitsOrientationResolutionPolicyInfo associatedParticipantUniqueIdentifier]
  -[SBFTraitsOrientationResolutionPolicyInfo actuationContext]
  -[SBFTraitsOrientationResolutionPolicyInfo descriptionWithMultilinePrefix:]
  -[SBFTraitsOrientationResolutionPolicyInfo descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsOrientationResolutionPolicyInfo associatedDeviceOrientationStateTypesBySupportedOrientationMask]
  -[SBFTraitsOrientationResolutionPolicyInfo setActuationContext:]
  -[SBFTraitsOrientationResolutionPolicyInfo .cxx_destruct]
  -[SBFTraitsOrientationResolutionPolicyInfo resolutionPolicy]
  -[SBFTraitsOrientationResolutionPolicyInfo associatedParticipantRole]
  -[SBFTraitsOrientationResolutionPolicyInfo succinctDescription]
  -[SBFTraitsOrientationResolutionPolicyInfo forceResolution]
  -[SBFTraitsOrientationResolutionPolicyInfo initWithResolutionPolicy:associatedParticipantUniqueID:associatedParticipantRole:associatedAccStateTypes:associatedAccStateTypesByMask:]
  -[SBFTraitsOrientationResolutionPolicyInfo initWithResolutionPolicy:associatedParticipantRole:]
  -[SBFTraitsOrientationResolutionPolicyInfo initWithResolutionPolicy:associatedAccStateTypes:]
  -[SBFTraitsOrientationResolutionPolicyInfo copyWithZone:]
  -[SBFTraitsOrientationResolutionPolicyInfo initWithResolutionPolicy:]
  -[SBFTraitsOrientationResolutionPolicyInfo initWithResolutionPolicy:associatedAccStateTypesByMask:]
  -[SBFTraitsOrientationResolutionPolicyInfo succinctDescriptionBuilder]
  -[SBFTraitsOrientationResolutionPolicyInfo associatedDeviceOrientationStateTypes]
  -[SBFTraitsOrientationResolutionPolicyInfo setForceResolution:]
  -[SBFTraitsOrientationResolutionPolicyInfo setAssociatedDeviceOrientationStateTypes:]
  -[SBFTraitsOrientationResolutionPolicyInfo initWithResolutionPolicy:associatedParticipantUniqueID:]
  -[SBFTraitsOrientationResolutionPolicyInfo initWithResolutionPolicy:associatedParticipantUniqueID:associatedParticipantRole:associatedAccStateTypes:]


SBFZStackResolver : NSObject <BSDescriptionProviding>
 @property  <BSInvalidatable> *stateCaptureHandle
 @property  NSMutableArray *participants
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFZStackResolver _registerParticipant:]
  -[SBFZStackResolver participants]
  -[SBFZStackResolver stateCaptureHandle]
  -[SBFZStackResolver setParticipants:]
  -[SBFZStackResolver acquireParticipantWithIdentifier:delegate:]
  -[SBFZStackResolver _updateResolutionsForAddedParticipant:removedParticipant:]
  -[SBFZStackResolver setStateCaptureHandle:]
  -[SBFZStackResolver _resolveActivationStateOfSortedParticipants:changedParticipantHandler:]
  -[SBFZStackResolver _setNeedsUpdateFromParticipant:]
  -[SBFZStackResolver descriptionWithMultilinePrefix:]
  -[SBFZStackResolver _registeredParticipants]
  -[SBFZStackResolver descriptionBuilderWithMultilinePrefix:]
  -[SBFZStackResolver _resolveSystemApertureSuppressionOfSortedParticipants:changedParticipantHandler:]
  -[SBFZStackResolver dealloc]
  -[SBFZStackResolver .cxx_destruct]
  -[SBFZStackResolver succinctDescription]
  -[SBFZStackResolver _resolveHomeGestureOwnershipOfSortedParticipants:changedParticipantHandler:]
  -[SBFZStackResolver _resolveHomeAffordanceDrawingSuppressionOfSortedParticipants:changedParticipantHandler:]
  -[SBFZStackResolver _updateResolutions]
  -[SBFZStackResolver succinctDescriptionBuilder]
  -[SBFZStackResolver _unregisterParticipant:]
  -[SBFZStackResolver init]


SBFZStackParticipant : NSObject <NSCopying, BSDescriptionProviding>
 @property  long long activationState
 @property  BOOL ownsHomeGesture
 @property  BOOL homeAffordanceDrawingSuppressed
 @property  BOOL systemApertureSuppressedForSystemChromeSuppression
 @property  NSSet *associatedBundleIdentifiersToSuppressInSystemAperture
 @property  NSSet *associatedSceneIdentifiersToSuppressInSystemAperture
 @property  SBFZStackResolver *resolver
 @property  SBFZStackParticipantPreferences *preferences
 @property  long long identifier
 @property  <SBFZStackParticipantDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFZStackParticipant setSystemApertureSuppressedForSystemChromeSuppression:]
  -[SBFZStackParticipant setActivationState:]
  -[SBFZStackParticipant setAssociatedSceneIdentifiersToSuppressInSystemAperture:]
  -[SBFZStackParticipant identifier]
  -[SBFZStackParticipant associatedSceneIdentifiersToSuppressInSystemAperture]
  -[SBFZStackParticipant initWithIdentifier:delegate:]
  -[SBFZStackParticipant associatedBundleIdentifiersToSuppressInSystemAperture]
  -[SBFZStackParticipant setResolver:]
  -[SBFZStackParticipant descriptionWithMultilinePrefix:]
  -[SBFZStackParticipant _updatePreferences]
  -[SBFZStackParticipant delegate]
  -[SBFZStackParticipant descriptionBuilderWithMultilinePrefix:]
  -[SBFZStackParticipant setPreferences:]
  -[SBFZStackParticipant .cxx_destruct]
  -[SBFZStackParticipant preferences]
  -[SBFZStackParticipant succinctDescription]
  -[SBFZStackParticipant resolver]
  -[SBFZStackParticipant activationState]
  -[SBFZStackParticipant setHomeAffordanceDrawingSuppressed:]
  -[SBFZStackParticipant copyWithZone:]
  -[SBFZStackParticipant invalidate]
  -[SBFZStackParticipant systemApertureSuppressedForSystemChromeSuppression]
  -[SBFZStackParticipant succinctDescriptionBuilder]
  -[SBFZStackParticipant ownsHomeGesture]
  -[SBFZStackParticipant homeAffordanceDrawingSuppressed]
  -[SBFZStackParticipant setOwnsHomeGesture:]
  -[SBFZStackParticipant setNeedsUpdatePreferencesWithReason:]
  -[SBFZStackParticipant setAssociatedBundleIdentifiersToSuppressInSystemAperture:]


SBFZStackParticipantPreferences : NSObject <NSCopying, BSDescriptionProviding>
 @property  long long activationPolicyForParticipantsBelow
 @property  NSIndexSet *assertIsAboveParticipantIdentifiers
 @property  long long homeGestureConsumption
 @property  long long homeAffordanceDrawingSuppression
 @property  BOOL suppressSystemApertureForSystemChromeSuppression
 @property  NSSet *associatedBundleIdentifiersToSuppressInSystemAperture
 @property  NSSet *associatedSceneIdentifiersToSuppressInSystemAperture
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFZStackParticipantPreferences setAssociatedSceneIdentifiersToSuppressInSystemAperture:]
  -[SBFZStackParticipantPreferences associatedSceneIdentifiersToSuppressInSystemAperture]
  -[SBFZStackParticipantPreferences associatedBundleIdentifiersToSuppressInSystemAperture]
  -[SBFZStackParticipantPreferences setAssertIsAboveParticipantIdentifiers:]
  -[SBFZStackParticipantPreferences initInternal]
  -[SBFZStackParticipantPreferences homeGestureConsumption]
  -[SBFZStackParticipantPreferences descriptionWithMultilinePrefix:]
  -[SBFZStackParticipantPreferences descriptionBuilderWithMultilinePrefix:]
  -[SBFZStackParticipantPreferences setHomeGestureConsumption:]
  -[SBFZStackParticipantPreferences .cxx_destruct]
  -[SBFZStackParticipantPreferences succinctDescription]
  -[SBFZStackParticipantPreferences setSuppressSystemApertureForSystemChromeSuppression:]
  -[SBFZStackParticipantPreferences setActivationPolicyForParticipantsBelow:]
  -[SBFZStackParticipantPreferences activationPolicyForParticipantsBelow]
  -[SBFZStackParticipantPreferences copyWithZone:]
  -[SBFZStackParticipantPreferences homeAffordanceDrawingSuppression]
  -[SBFZStackParticipantPreferences setHomeAffordanceDrawingSuppression:]
  -[SBFZStackParticipantPreferences succinctDescriptionBuilder]
  -[SBFZStackParticipantPreferences assertIsAboveParticipantIdentifiers]
  -[SBFZStackParticipantPreferences isEqual:]
  -[SBFZStackParticipantPreferences suppressSystemApertureForSystemChromeSuppression]
  -[SBFZStackParticipantPreferences setAssociatedBundleIdentifiersToSuppressInSystemAperture:]


SBFTouchPassThroughViewController : UIViewController
  // instance methods
  -[SBFTouchPassThroughViewController loadView]
  -[SBFTouchPassThroughViewController configureTouchPassThroughView:]


SBFMobileKeyBagUnlockOptions : NSObject
 @property  NSData *passcode
 @property  BOOL skipSEKeepUserDataOperation

  // instance methods
  -[SBFMobileKeyBagUnlockOptions passcode]
  -[SBFMobileKeyBagUnlockOptions .cxx_destruct]
  -[SBFMobileKeyBagUnlockOptions initWithPasscode:]
  -[SBFMobileKeyBagUnlockOptions initWithPasscode:skipSEKeepUserDataOperation:]
  -[SBFMobileKeyBagUnlockOptions skipSEKeepUserDataOperation]


SBFPasscodeLockTrackerForTransientAssertions : SBFAuthenticationAssertionTracker
  // instance methods
  -[SBFPasscodeLockTrackerForTransientAssertions isAssertionValid:]
  -[SBFPasscodeLockTrackerForTransientAssertions mkbAssertionOptions]


SBFPasscodeLockTrackerForPreventLockAssertions : SBFAuthenticationAssertionTracker

SBFAuthenticationAssertionTracker : NSObject <BSDescriptionProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFAuthenticationAssertionTracker removeAssertion:]
  -[SBFAuthenticationAssertionTracker addAssertion:]
  -[SBFAuthenticationAssertionTracker descriptionWithMultilinePrefix:]
  -[SBFAuthenticationAssertionTracker descriptionBuilderWithMultilinePrefix:]
  -[SBFAuthenticationAssertionTracker hasActiveAssertions]
  -[SBFAuthenticationAssertionTracker dealloc]
  -[SBFAuthenticationAssertionTracker isAssertionValid:]
  -[SBFAuthenticationAssertionTracker .cxx_destruct]
  -[SBFAuthenticationAssertionTracker succinctDescription]
  -[SBFAuthenticationAssertionTracker succinctDescriptionBuilder]
  -[SBFAuthenticationAssertionTracker mkbAssertionOptions]
  -[SBFAuthenticationAssertionTracker init]


SBFAuthenticationAssertionManager : NSObject <BSDescriptionProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFAuthenticationAssertionManager removeAssertion:]
  -[SBFAuthenticationAssertionManager addAssertion:]
  -[SBFAuthenticationAssertionManager descriptionWithMultilinePrefix:]
  -[SBFAuthenticationAssertionManager descriptionBuilderWithMultilinePrefix:]
  -[SBFAuthenticationAssertionManager hasActiveAssertions]
  -[SBFAuthenticationAssertionManager isAssertionValid:]
  -[SBFAuthenticationAssertionManager .cxx_destruct]
  -[SBFAuthenticationAssertionManager succinctDescription]
  -[SBFAuthenticationAssertionManager succinctDescriptionBuilder]
  -[SBFAuthenticationAssertionManager init]


SBFTouchPassThroughView : UIView
  // instance methods
  -[SBFTouchPassThroughView hitTest:withEvent:]


SBFView : UIView <SBFCustomImplicitPropertyAnimating>
 @property  {CGSize=dd} intrinsicContentSize
 @property  @? didMoveToWindowHandler
 @property  NSArray *animatedLayerProperties
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFView setIntrinsicContentSize:]
  -[SBFView animatedLayerProperties]
  -[SBFView setDidMoveToWindowHandler:]
  -[SBFView .cxx_destruct]
  -[SBFView _shouldAnimatePropertyWithKey:]
  -[SBFView setAnimatedLayerProperties:]
  -[SBFView didMoveToWindowHandler]
  -[SBFView intrinsicContentSize]
  -[SBFView didMoveToWindow]


SBFCredentialSet : NSObject <NSSecureCoding>
  // class methods
  +[SBFCredentialSet supportsSecureCoding]

  // instance methods
  -[SBFCredentialSet encodeWithCoder:]
  -[SBFCredentialSet dealloc]
  -[SBFCredentialSet .cxx_destruct]
  -[SBFCredentialSet init]
  -[SBFCredentialSet initWithCoder:]
  -[SBFCredentialSet initWithSerializedCredentialSet:]
  -[SBFCredentialSet serializedCredentialSet]


SBSetupDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL inSetupModeForActivationChange

  // instance methods
  -[SBSetupDefaults _bindAndRegisterDefaults]


SBFDateTimeController : NSObject
 @property  NSDate *currentDate
 @property  NSDate *overrideDate
 @property  double overrideDateOffset

  // class methods
  +[SBFDateTimeController sharedInstance]

  // instance methods
  -[SBFDateTimeController setOverrideDateOffset:]
  -[SBFDateTimeController currentDate]
  -[SBFDateTimeController overrideDate]
  -[SBFDateTimeController addObserver:]
  -[SBFDateTimeController .cxx_destruct]
  -[SBFDateTimeController overrideDateOffset]
  -[SBFDateTimeController setOverrideDate:]
  -[SBFDateTimeController removeObserver:]


SBFFluidBehaviorSettings : PTSettings <BSDescriptionProviding, UIViewSpringAnimationBehaviorDescribing>
 @property  long long behaviorType
 @property  NSString *name
 @property  double deceleration
 @property  double dampingRatio
 @property  double response
 @property  double retargetImpulse
 @property  double trackingDampingRatio
 @property  double trackingResponse
 @property  double trackingRetargetImpulse
 @property  BOOL smoothingAndProjectionEnabled
 @property  double dampingRatioSmoothing
 @property  double responseSmoothing
 @property  double trackingDampingRatioSmoothing
 @property  double trackingResponseSmoothing
 @property  double inertialTargetSmoothingRatio
 @property  double inertialProjectionDeceleration
 @property  PTFrameRateRangeSettings *preferredFrameRateRange
 @property  {CAFrameRateRange=fff} frameRateRange
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFFluidBehaviorSettings settingsControllerModule]
  +[SBFFluidBehaviorSettings _moduleWithSectionTitle:]

  // instance methods
  -[SBFFluidBehaviorSettings frameRateRange]
  -[SBFFluidBehaviorSettings dampingRatio]
  -[SBFFluidBehaviorSettings setDampingRatio:]
  -[SBFFluidBehaviorSettings setFrameRateRange:]
  -[SBFFluidBehaviorSettings setFrameRateRange:highFrameRateReason:]
  -[SBFFluidBehaviorSettings preferredFrameRateRange]
  -[SBFFluidBehaviorSettings setDefaultValues]
  -[SBFFluidBehaviorSettings descriptionWithMultilinePrefix:]
  -[SBFFluidBehaviorSettings descriptionBuilderWithMultilinePrefix:]
  -[SBFFluidBehaviorSettings .cxx_destruct]
  -[SBFFluidBehaviorSettings inertialProjectionDeceleration]
  -[SBFFluidBehaviorSettings parametersForTransitionFromState:toState:]
  -[SBFFluidBehaviorSettings setInertialProjectionDeceleration:]
  -[SBFFluidBehaviorSettings succinctDescription]
  -[SBFFluidBehaviorSettings setResponse:]
  -[SBFFluidBehaviorSettings setName:]
  -[SBFFluidBehaviorSettings settlingDuration]
  -[SBFFluidBehaviorSettings name]
  -[SBFFluidBehaviorSettings setPreferredFrameRateRange:]
  -[SBFFluidBehaviorSettings response]
  -[SBFFluidBehaviorSettings succinctDescriptionBuilder]
  -[SBFFluidBehaviorSettings BSAnimationSettings]
  -[SBFFluidBehaviorSettings setDefaultCriticallyDampedValues]
  -[SBFFluidBehaviorSettings _effectiveTrackingDampingRatio]
  -[SBFFluidBehaviorSettings _effectiveTrackingResponse]
  -[SBFFluidBehaviorSettings _effectiveTrackingRetargetImpulse]
  -[SBFFluidBehaviorSettings behaviorType]
  -[SBFFluidBehaviorSettings setBehaviorType:]
  -[SBFFluidBehaviorSettings deceleration]
  -[SBFFluidBehaviorSettings setDeceleration:]
  -[SBFFluidBehaviorSettings retargetImpulse]
  -[SBFFluidBehaviorSettings setRetargetImpulse:]
  -[SBFFluidBehaviorSettings trackingDampingRatio]
  -[SBFFluidBehaviorSettings setTrackingDampingRatio:]
  -[SBFFluidBehaviorSettings trackingResponse]
  -[SBFFluidBehaviorSettings setTrackingResponse:]
  -[SBFFluidBehaviorSettings trackingRetargetImpulse]
  -[SBFFluidBehaviorSettings setTrackingRetargetImpulse:]
  -[SBFFluidBehaviorSettings smoothingAndProjectionEnabled]
  -[SBFFluidBehaviorSettings setSmoothingAndProjectionEnabled:]
  -[SBFFluidBehaviorSettings dampingRatioSmoothing]
  -[SBFFluidBehaviorSettings setDampingRatioSmoothing:]
  -[SBFFluidBehaviorSettings responseSmoothing]
  -[SBFFluidBehaviorSettings setResponseSmoothing:]
  -[SBFFluidBehaviorSettings trackingDampingRatioSmoothing]
  -[SBFFluidBehaviorSettings setTrackingDampingRatioSmoothing:]
  -[SBFFluidBehaviorSettings trackingResponseSmoothing]
  -[SBFFluidBehaviorSettings setTrackingResponseSmoothing:]
  -[SBFFluidBehaviorSettings inertialTargetSmoothingRatio]
  -[SBFFluidBehaviorSettings setInertialTargetSmoothingRatio:]


SBFAnimationUtilities : NSObject
  // class methods
  +[SBFAnimationUtilities matchMoveAnimationForPinningToView:]


SBAppSwitcherDefaults : SBAbstractSpringBoardDefaultDomain
 @property  NSArray *recentsPlistRepresentation
 @property  BOOL chamoisWindowingEnabled
 @property  BOOL chamoisHideStrips
 @property  BOOL chamoisHideDock
 @property  BOOL chamoisEverEnabled
 @property  BOOL chamoisHideStripsExternal
 @property  BOOL chamoisHideDockExternal
 @property  unsigned long bottomEdgeGestureSwipeCount
 @property  BOOL springBoardKillable
 @property  BOOL trackpadSwitcherGesturesEnabled
 @property  BOOL shouldShowSplitPeekEducation
 @property  BOOL shouldShowSlideOverPeekEducation
 @property  NSArray *legacyRecentApplications
 @property  NSArray *legacyRecentDisplayItems
 @property  NSArray *legacyRecentDisplayItemRoles

  // instance methods
  -[SBAppSwitcherDefaults _bindAndRegisterDefaults]
  -[SBAppSwitcherDefaults clearLegacyDefaults]


SBFBackdropLegibilitySettingsProvider : NSObject <_UIBackdropViewObserver, SBFLegibilitySettingsProvider>
 @property  _UILegibilitySettings *legibilitySettings
 @property  <SBFLegibilitySettingsProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFBackdropLegibilitySettingsProvider setDelegate:]
  -[SBFBackdropLegibilitySettingsProvider delegate]
  -[SBFBackdropLegibilitySettingsProvider dealloc]
  -[SBFBackdropLegibilitySettingsProvider .cxx_destruct]
  -[SBFBackdropLegibilitySettingsProvider legibilitySettings]
  -[SBFBackdropLegibilitySettingsProvider backdropViewDidChange:]
  -[SBFBackdropLegibilitySettingsProvider initWithBackdropView:]


SBFWakeAnimationSettings : PTSettings
 @property  double backlightFadeDuration
 @property  double speedMultiplierForWake
 @property  double speedMultiplierForLiftToWake
 @property  SBFAnimationSettings *contentWakeSettings
 @property  double awakeColorBrightness
 @property  double awakeDateAlpha
 @property  SBFAnimationSettings *awakeWallpaperFilterSettings
 @property  double sleepColorBrightness
 @property  SBFAnimationSettings *sleepWallpaperFilterSettings

  // class methods
  +[SBFWakeAnimationSettings settingsControllerModule]

  // instance methods
  -[SBFWakeAnimationSettings setDefaultValues]
  -[SBFWakeAnimationSettings setAwakeWallpaperFilterSettings:]
  -[SBFWakeAnimationSettings setSleepWallpaperFilterSettings:]
  -[SBFWakeAnimationSettings setAwakeColorBrightness:]
  -[SBFWakeAnimationSettings setSpeedMultiplierForWake:]
  -[SBFWakeAnimationSettings .cxx_destruct]
  -[SBFWakeAnimationSettings awakeWallpaperFilterSettings]
  -[SBFWakeAnimationSettings setAwakeDateAlpha:]
  -[SBFWakeAnimationSettings sleepColorBrightness]
  -[SBFWakeAnimationSettings setContentWakeSettings:]
  -[SBFWakeAnimationSettings setSleepColorBrightness:]
  -[SBFWakeAnimationSettings speedMultiplierForLiftToWake]
  -[SBFWakeAnimationSettings setBacklightFadeDuration:]
  -[SBFWakeAnimationSettings awakeColorBrightness]
  -[SBFWakeAnimationSettings awakeDateAlpha]
  -[SBFWakeAnimationSettings speedMultiplierForWake]
  -[SBFWakeAnimationSettings setSpeedMultiplierForLiftToWake:]
  -[SBFWakeAnimationSettings contentWakeSettings]
  -[SBFWakeAnimationSettings sleepWallpaperFilterSettings]
  -[SBFWakeAnimationSettings backlightFadeDuration]


SBFWakeAnimationDomain : PTDomain
  // class methods
  +[SBFWakeAnimationDomain rootSettings]
  +[SBFWakeAnimationDomain domainName]
  +[SBFWakeAnimationDomain domainGroupName]
  +[SBFWakeAnimationDomain rootSettingsClass]


SBReusableViewMap : NSObject <BSDescriptionProviding>
 @property  <SBReusableViewMapDelegate> *delegate
 @property  unsigned long recycledViewCount
 @property  unsigned long viewRecyclingCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBReusableViewMap addRecycledViewsOfClass:upToCount:]
  -[SBReusableViewMap setDelegate:]
  -[SBReusableViewMap descriptionWithMultilinePrefix:]
  -[SBReusableViewMap delegate]
  -[SBReusableViewMap descriptionBuilderWithMultilinePrefix:]
  -[SBReusableViewMap recycledViewCount]
  -[SBReusableViewMap dealloc]
  -[SBReusableViewMap .cxx_destruct]
  -[SBReusableViewMap purgeViewsForClass:]
  -[SBReusableViewMap succinctDescription]
  -[SBReusableViewMap initWithDelegate:]
  -[SBReusableViewMap recycleView:]
  -[SBReusableViewMap purgeView:]
  -[SBReusableViewMap invalidate]
  -[SBReusableViewMap viewRecyclingCount]
  -[SBReusableViewMap succinctDescriptionBuilder]
  -[SBReusableViewMap dequeueReusableViewOfClass:]
  -[SBReusableViewMap isViewRecycled:]
  -[SBReusableViewMap purgeAllViews]
  -[SBReusableViewMap viewOfClass:]
  -[SBReusableViewMap init]
  -[SBReusableViewMap newViewOfClass:]
  -[SBReusableViewMap enumerateRecycledViewsUsingBlock:]


SBCameraHardwareButtonDefaults : SBAbstractSpringBoardDefaultDomain
 @property  double shutterButtonLongPressTimeout
 @property  double shutterButtonLongPressCancellationTimeout
 @property  BOOL shutterButtonShouldUsePocketDetection

  // instance methods
  -[SBCameraHardwareButtonDefaults _bindAndRegisterDefaults]


SBFWallpaperView : PBUIWallpaperView

SBFUserAuthenticationResponder : NSObject <SBFAuthenticationResponder>
 @property  @? successHandler
 @property  @? failureHandler
 @property  @? invalidHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFUserAuthenticationResponder responderWithSuccessHandler:failureHandler:invalidHandler:]

  // instance methods
  -[SBFUserAuthenticationResponder .cxx_destruct]
  -[SBFUserAuthenticationResponder handleSuccessfulAuthenticationRequest:]
  -[SBFUserAuthenticationResponder handleFailedAuthenticationRequest:error:]
  -[SBFUserAuthenticationResponder handleInvalidAuthenticationRequest:]
  -[SBFUserAuthenticationResponder initWithSuccessHandler:failureHandler:invalidHandler:]
  -[SBFUserAuthenticationResponder successHandler]
  -[SBFUserAuthenticationResponder setSuccessHandler:]
  -[SBFUserAuthenticationResponder failureHandler]
  -[SBFUserAuthenticationResponder setFailureHandler:]
  -[SBFUserAuthenticationResponder invalidHandler]
  -[SBFUserAuthenticationResponder setInvalidHandler:]


SBGestureDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL systemGesturesAllowed
 @property  NSArray *systemGestureLoggingOptions

  // instance methods
  -[SBGestureDefaults _bindAndRegisterDefaults]


SBFTodayGestureDomain : PTDomain
  // class methods
  +[SBFTodayGestureDomain rootSettings]
  +[SBFTodayGestureDomain domainName]
  +[SBFTodayGestureDomain domainGroupName]
  +[SBFTodayGestureDomain rootSettingsClass]


SBAnalyticsDefaults : SBAbstractSpringBoardDefaultDomain
 @property  NSDictionary *engagementPlistRepresentation

  // instance methods
  -[SBAnalyticsDefaults _bindAndRegisterDefaults]


SBWallpaperLegacyDefaults : SBAbstractSpringBoardDefaultDomain
 @property  NSString *homeScreenWallpaperIdentifier
 @property  NSDictionary *homeScreenWallpaperOptions
 @property  BOOL homeScreenWallpaperWasUserSet
 @property  NSString *lockScreenWallpaperIdentifier
 @property  NSDictionary *lockScreenWallpaperOptions
 @property  BOOL lockScreenWallpaperWasUserSet
 @property  double homeScreenParallaxFactor
 @property  double homeScreenZoomScale
 @property  NSString *homeScreenCropRectString
 @property  BOOL homeScreenSupportsCropping
 @property  BOOL homeScreenMagnifyEnabled
 @property  BOOL homeScreenPortrait
 @property  NSString *homeScreenWallpaperName
 @property  NSDictionary *homeScreenWallpaperKitData
 @property  double lockScreenParallaxFactor
 @property  double lockScreenZoomScale
 @property  NSString *lockScreenCropRectString
 @property  BOOL lockScreenSupportsCropping
 @property  BOOL lockScreenMagnifyEnabled
 @property  BOOL lockScreenPortrait
 @property  BOOL lockScreenHasVideo
 @property  double lockScreenStillTimeInVideo
 @property  NSString *lockScreenWallpaperName
 @property  NSDictionary *lockScreenWallpaperKitData
 @property  NSData *lockScreenColorData
 @property  NSData *homeScreenColorData
 @property  NSString *lockScreenColorName
 @property  NSString *homeScreenColorName
 @property  NSData *lockScreenImageHashData
 @property  NSData *homeScreenImageHashData
 @property  NSData *lockScreenGradientData
 @property  NSData *homeScreenGradientData

  // instance methods
  -[SBWallpaperLegacyDefaults _bindAndRegisterDefaults]


SBFCARenderer : NSObject
  // class methods
  +[SBFCARenderer sharedInstance]
  +[SBFCARenderer shouldUseXPCServiceForRendering]

  // instance methods
  -[SBFCARenderer _createConnection]
  -[SBFCARenderer .cxx_destruct]
  -[SBFCARenderer _remoteObjectProxy]
  -[SBFCARenderer warmup]
  -[SBFCARenderer applyMaterialRecipe:recipeName:containingBundle:weighting:downsampleFactor:]


SBFSteppedAnimationTimingFunctionCalculator : NSObject
 @property  double percentComplete

  // instance methods
  -[SBFSteppedAnimationTimingFunctionCalculator percentComplete]
  -[SBFSteppedAnimationTimingFunctionCalculator valueForFunctionWithName:]
  -[SBFSteppedAnimationTimingFunctionCalculator addTimingFunction:withName:constrainedToIntervalBetween:and:]
  -[SBFSteppedAnimationTimingFunctionCalculator .cxx_destruct]
  -[SBFSteppedAnimationTimingFunctionCalculator addTimingFunctionWithName:fromNormalizedAnimationSettings:]
  -[SBFSteppedAnimationTimingFunctionCalculator setPercentComplete:]
  -[SBFSteppedAnimationTimingFunctionCalculator addTimingFunction:withName:]
  -[SBFSteppedAnimationTimingFunctionCalculator timingFunctionNames]
  -[SBFSteppedAnimationTimingFunctionCalculator init]


_SBSteppedAnimationTimingFunction : NSObject
 @property  CAMediaTimingFunction *timingFunction
 @property  {SBNormalizedTransitionInterval=dd} constrainedRange

  // class methods
  +[_SBSteppedAnimationTimingFunction timingFunctionWithTimingFunction:constrainedToIntervalBetween:and:]

  // instance methods
  -[_SBSteppedAnimationTimingFunction timingFunction]
  -[_SBSteppedAnimationTimingFunction .cxx_destruct]
  -[_SBSteppedAnimationTimingFunction constrainedRange]
  -[_SBSteppedAnimationTimingFunction valueAtPercentage:]
  -[_SBSteppedAnimationTimingFunction initWithTimingFunction:constrainedToIntervalBetween:and:]


SBFBacklightSceneHostEnvironmentProviderEntry : NSObject
 @property  <BLSHBacklightSceneHostEnvironment> *environment
 @property  NSString *bundleIdentifier

  // class methods
  +[SBFBacklightSceneHostEnvironmentProviderEntry entryWithSceneHostEnvironment:bundleIdentifier:]

  // instance methods
  -[SBFBacklightSceneHostEnvironmentProviderEntry .cxx_destruct]
  -[SBFBacklightSceneHostEnvironmentProviderEntry bundleIdentifier]
  -[SBFBacklightSceneHostEnvironmentProviderEntry environment]
  -[SBFBacklightSceneHostEnvironmentProviderEntry initWithSceneHostEnvironment:bundleIdentifier:]


SBFTapticEngine : NSObject
 @property  BOOL supportsFeedbackActuation

  // class methods
  +[SBFTapticEngine sharedInstance]

  // instance methods
  -[SBFTapticEngine .cxx_destruct]
  -[SBFTapticEngine init]
  -[SBFTapticEngine actuateFeedback:]
  -[SBFTapticEngine warmUpForFeedback:withReason:]
  -[SBFTapticEngine coolDownForFeedback:withReason:]
  -[SBFTapticEngine supportsFeedbackActuation]


SBFDashBoardViewMetrics : NSObject
  // class methods
  +[SBFDashBoardViewMetrics timeSubtitleBaselineY]
  +[SBFDashBoardViewMetrics dateTimeLayoutForPage:]
  +[SBFDashBoardViewMetrics suggestedContentInsetsForListForPage:pageBounds:scrollsDateTime:]
  +[SBFDashBoardViewMetrics suggestedFrameForDateTimeViewInScreenCoordinates:centeredX:]
  +[SBFDashBoardViewMetrics suggestedFrameForCallToActionLabel:yOffset:inBounds:]
  +[SBFDashBoardViewMetrics layoutUsesMargin:]
  +[SBFDashBoardViewMetrics _isPortrait]
  +[SBFDashBoardViewMetrics suggestedFrameForStatusView:inView:withInsets:]
  +[SBFDashBoardViewMetrics listLayoutForPage:]
  +[SBFDashBoardViewMetrics layoutCentersContent:]
  +[SBFDashBoardViewMetrics suggestedFrameForMediaControlsForPageBounds:]
  +[SBFDashBoardViewMetrics timeToListInsetXforPage:]
  +[SBFDashBoardViewMetrics dateBaselineToListY]
  +[SBFDashBoardViewMetrics _padSpecificValueForDevice:leading:]
  +[SBFDashBoardViewMetrics dateOnlyLunarDateFont]
  +[SBFDashBoardViewMetrics timeLabelToSubtitleLabelDifferenceY]
  +[SBFDashBoardViewMetrics _padSpecificInsets:leading:]
  +[SBFDashBoardViewMetrics timeLabelBaselineY]
  +[SBFDashBoardViewMetrics dateFont]
  +[SBFDashBoardViewMetrics suggestedFrameForListForPage:pageBounds:]
  +[SBFDashBoardViewMetrics _reducedPageBoundsFromBounds:forPage:]
  +[SBFDashBoardViewMetrics suggestedFrameForListForPage:pageBounds:insets:]
  +[SBFDashBoardViewMetrics listInsetXForPage:]
  +[SBFDashBoardViewMetrics listMinYForPage:]
  +[SBFDashBoardViewMetrics suggestedFrameForMediaArtworkForControlsFrame:bottomInset:inPageBounds:]
  +[SBFDashBoardViewMetrics timeLabelScrollPercentForPage:]
  +[SBFDashBoardViewMetrics _phoneSpecificValueN56:n61:n69:d22:]
  +[SBFDashBoardViewMetrics listInsetXForPage:leading:]
  +[SBFDashBoardViewMetrics searchBarWidth]
  +[SBFDashBoardViewMetrics _dateTimeMinXForReducedBounds:forPage:]
  +[SBFDashBoardViewMetrics _padSpecificValueJ99:otherPad:]
  +[SBFDashBoardViewMetrics timeToSubtitleLabelBaselineDifferenceY]
  +[SBFDashBoardViewMetrics scaledFontSize:withMaximumFontSizeCategory:]
  +[SBFDashBoardViewMetrics singleLineDateViewBaselineDifferenceY]
  +[SBFDashBoardViewMetrics _phoneSpecificValueN56:n61:n69:]
  +[SBFDashBoardViewMetrics listWidthForPage:]
  +[SBFDashBoardViewMetrics suggestedContentInsetsForListForPage:pageBounds:]
  +[SBFDashBoardViewMetrics suggestedFrameForListForPage:pageBounds:insets:scrollsDateTime:]
  +[SBFDashBoardViewMetrics _cachedGlyphInsetsForString:withFont:]
  +[SBFDashBoardViewMetrics _presentsListBelowDateTime]
  +[SBFDashBoardViewMetrics searchClippingLineMaxY]
  +[SBFDashBoardViewMetrics listScrollsDateTime]


SBFMobileKeyBagState : NSObject <BSDescriptionProviding, NSCopying, NSMutableCopying>
 @property  long long lockState
 @property  double backOffTime
 @property  unsigned long failedAttemptCount
 @property  BOOL permanentlyBlocked
 @property  BOOL shouldWipe
 @property  BOOL recoveryEnabled
 @property  BOOL recoveryRequired
 @property  BOOL recoveryPossible
 @property  long long escrowCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFMobileKeyBagState recoveryRequired]
  -[SBFMobileKeyBagState permanentlyBlocked]
  -[SBFMobileKeyBagState recoveryEnabled]
  -[SBFMobileKeyBagState initWithMKBLockStateInfo:]
  -[SBFMobileKeyBagState escrowCount]
  -[SBFMobileKeyBagState failedAttemptCount]
  -[SBFMobileKeyBagState lockState]
  -[SBFMobileKeyBagState isEffectivelyLocked]
  -[SBFMobileKeyBagState shouldWipe]
  -[SBFMobileKeyBagState recoveryPossible]
  -[SBFMobileKeyBagState backOffTime]
  -[SBFMobileKeyBagState descriptionWithMultilinePrefix:]
  -[SBFMobileKeyBagState descriptionBuilderWithMultilinePrefix:]
  -[SBFMobileKeyBagState publicDescription]
  -[SBFMobileKeyBagState .cxx_destruct]
  -[SBFMobileKeyBagState succinctDescription]
  -[SBFMobileKeyBagState copyWithZone:]
  -[SBFMobileKeyBagState succinctDescriptionBuilder]
  -[SBFMobileKeyBagState mutableCopyWithZone:]
  -[SBFMobileKeyBagState isEqual:]
  -[SBFMobileKeyBagState init]


SBFMutableMobileKeyBagState : SBFMobileKeyBagState
 @property  long long lockState
 @property  double backOffTime
 @property  unsigned long failedAttemptCount
 @property  BOOL permanentlyBlocked
 @property  BOOL shouldWipe
 @property  BOOL recoveryEnabled
 @property  BOOL recoveryRequired
 @property  BOOL recoveryPossible
 @property  long long escrowCount

  // instance methods
  -[SBFMutableMobileKeyBagState _mutableState]
  -[SBFMutableMobileKeyBagState initWithMKBLockStateInfo:]
  -[SBFMutableMobileKeyBagState setLockState:]
  -[SBFMutableMobileKeyBagState setEscrowCount:]
  -[SBFMutableMobileKeyBagState setBackOffTime:]
  -[SBFMutableMobileKeyBagState setShouldWipe:]
  -[SBFMutableMobileKeyBagState setFailedAttemptCount:]
  -[SBFMutableMobileKeyBagState setRecoveryEnabled:]
  -[SBFMutableMobileKeyBagState copyWithZone:]
  -[SBFMutableMobileKeyBagState setRecoveryPossible:]
  -[SBFMutableMobileKeyBagState setRecoveryRequired:]
  -[SBFMutableMobileKeyBagState init]
  -[SBFMutableMobileKeyBagState setPermanentlyBlocked:]


SBFLegacyWallpaperWakeAnimator : NSObject <SBFScreenWakeAnimationTarget>
 @property  long long wakeState
 @property  UIVisualEffectView *wakeEffectView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFLegacyWallpaperWakeAnimator .cxx_destruct]
  -[SBFLegacyWallpaperWakeAnimator setWakeEffectView:]
  -[SBFLegacyWallpaperWakeAnimator wakeEffectView]
  -[SBFLegacyWallpaperWakeAnimator updateWakeEffectsForWake:]
  -[SBFLegacyWallpaperWakeAnimator updateWakeEffectsForWake:animated:completion:]
  -[SBFLegacyWallpaperWakeAnimator _targetWakeStateForFadeIn:]
  -[SBFLegacyWallpaperWakeAnimator _wakeEffectsForAnimatingWakeState:]
  -[SBFLegacyWallpaperWakeAnimator _wakeEffectsForPersistentWakeState:]
  -[SBFLegacyWallpaperWakeAnimator _shouldHideWakeEffectViewAfterUpdate]
  -[SBFLegacyWallpaperWakeAnimator wakeState]
  -[SBFLegacyWallpaperWakeAnimator setWakeState:]


SBLocalDefaults : SBAbstractDefaults
 @property  SBAccessibilityDefaults *accessibilityDefaults
 @property  SBAnalyticsDefaults *analyticsDefaults
 @property  SBAppSwitcherDefaults *appSwitcherDefaults
 @property  SBApplicationDefaults *applicationDefaults
 @property  SBBiometricAuthenticationDefaults *biometricAuthenticationDefaults
 @property  SBBootDefaults *bootDefaults
 @property  SBCameraHardwareButtonDefaults *cameraHardwareButtonDefaults
 @property  SBDemoDefaults *demoDefaults
 @property  SBInCallPresentationDefaults *inCallPresentationDefaults
 @property  SBFloatingDockDefaults *floatingDockDefaults
 @property  SBGestureDefaults *gestureDefaults
 @property  SBHardwareDefaults *hardwareDefaults
 @property  SBHomeScreenDefaults *homeScreenDefaults
 @property  SBIconDefaults *iconDefaults
 @property  SBIdleTimerDefaults *idleTimerDefaults
 @property  SBLockScreenDefaults *lockScreenDefaults
 @property  SBMiscellaneousDefaults *miscellaneousDefaults
 @property  SBMultiUserDefaults *multiUserDefaults
 @property  SBNotificationCenterDefaults *notificationCenterDefaults
 @property  SBNotificationDefaults *notificationDefaults
 @property  SBPIPDefaults *pipDefaults
 @property  SBPowerDefaults *powerDefaults
 @property  SBRecentDisplayItemsDefaults *recentDisplayItemsDefaults
 @property  SBRotationDefaults *rotationDefaults
 @property  SBSOSDefaults *sosDefaults
 @property  SBSecurityDefaults *securityDefaults
 @property  SBSetupDefaults *setupDefaults
 @property  SBSoftwareUpdateDefaults *softwareUpdateDefaults
 @property  SBSoundDefaults *soundDefaults
 @property  SBStateDumpDefaults *stateDumpDefaults
 @property  SBStatusBarDefaults *statusBarDefaults
 @property  SBTestingDefaults *testingDefaults
 @property  SBThermalDefaults *thermalDefaults
 @property  SBTraitsArbiterAdoptionDefaults *traitsArbiterAdoptionDefaults
 @property  SBUsageDefaults *usageDefaults
 @property  SBVoiceControlDefaults *voiceControlDefaults
 @property  SBWorkspaceDefaults *workspaceDefaults
 @property  SBCornerGestureDefaults *cornerGestureDefaults
 @property  SBAlwaysOnDefaults *alwaysOnDefaults
 @property  SBExternalDisplayDefaults *externalDisplayDefaults

  // instance methods
  -[SBLocalDefaults lockScreenDefaults]
  -[SBLocalDefaults homeScreenDefaults]
  -[SBLocalDefaults bootDefaults]
  -[SBLocalDefaults migrateAndRemoveOldDefaults]
  -[SBLocalDefaults soundDefaults]
  -[SBLocalDefaults stateDumpDefaults]
  -[SBLocalDefaults demoDefaults]
  -[SBLocalDefaults rotationDefaults]
  -[SBLocalDefaults analyticsDefaults]
  -[SBLocalDefaults appSwitcherDefaults]
  -[SBLocalDefaults pipDefaults]
  -[SBLocalDefaults traitsArbiterAdoptionDefaults]
  -[SBLocalDefaults idleTimerDefaults]
  -[SBLocalDefaults externalDisplayDefaults]
  -[SBLocalDefaults multiUserDefaults]
  -[SBLocalDefaults accessibilityDefaults]
  -[SBLocalDefaults .cxx_destruct]
  -[SBLocalDefaults floatingDockDefaults]
  -[SBLocalDefaults usageDefaults]
  -[SBLocalDefaults miscellaneousDefaults]
  -[SBLocalDefaults statusBarDefaults]
  -[SBLocalDefaults cameraHardwareButtonDefaults]
  -[SBLocalDefaults securityDefaults]
  -[SBLocalDefaults notificationCenterDefaults]
  -[SBLocalDefaults notificationDefaults]
  -[SBLocalDefaults alwaysOnDefaults]
  -[SBLocalDefaults gestureDefaults]
  -[SBLocalDefaults workspaceDefaults]
  -[SBLocalDefaults setupDefaults]
  -[SBLocalDefaults iconDefaults]
  -[SBLocalDefaults inCallPresentationDefaults]
  -[SBLocalDefaults testingDefaults]
  -[SBLocalDefaults recentDisplayItemsDefaults]
  -[SBLocalDefaults powerDefaults]
  -[SBLocalDefaults hardwareDefaults]
  -[SBLocalDefaults biometricAuthenticationDefaults]
  -[SBLocalDefaults applicationDefaults]
  -[SBLocalDefaults cornerGestureDefaults]
  -[SBLocalDefaults softwareUpdateDefaults]
  -[SBLocalDefaults voiceControlDefaults]
  -[SBLocalDefaults thermalDefaults]
  -[SBLocalDefaults sosDefaults]


_SBFBlockObservable : SBFObservable
  // instance methods
  -[_SBFBlockObservable subscribe:]
  -[_SBFBlockObservable .cxx_destruct]
  -[_SBFBlockObservable initWithBlock:]


_SBFScheduledObservable : SBFObservable
  // instance methods
  -[_SBFScheduledObservable subscribe:]
  -[_SBFScheduledObservable .cxx_destruct]
  -[_SBFScheduledObservable initWithObservable:scheduler:]


_SBFAccumulatingObserver : NSObject <SBFObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBFAccumulatingObserver observerDidFailWithError:]
  -[_SBFAccumulatingObserver .cxx_destruct]
  -[_SBFAccumulatingObserver observerDidComplete]
  -[_SBFAccumulatingObserver observerDidReceiveResult:]
  -[_SBFAccumulatingObserver init]
  -[_SBFAccumulatingObserver waitForResults:]


_SBFThrottledObservable : SBFObservable
  // instance methods
  -[_SBFThrottledObservable subscribe:]
  -[_SBFThrottledObservable _cancel]
  -[_SBFThrottledObservable dealloc]
  -[_SBFThrottledObservable .cxx_destruct]
  -[_SBFThrottledObservable initWithInterval:observable:scheduler:]
  -[_SBFThrottledObservable _setDelayToken:]
  -[_SBFThrottledObservable _sendResultToObserver:withIdentifier:]
  -[_SBFThrottledObservable _sendCompletionToObsever:]
  -[_SBFThrottledObservable _clearResult]
  -[_SBFThrottledObservable _setResult:]


_SBFForkJoinObservable : SBFObservable
  // instance methods
  -[_SBFForkJoinObservable subscribe:]
  -[_SBFForkJoinObservable .cxx_destruct]
  -[_SBFForkJoinObservable initWithWithObservables:]
  -[_SBFForkJoinObservable _setResult:atIndex:]
  -[_SBFForkJoinObservable _observableFinishedForObserver:]


SBFObservable : NSObject <SBFObservable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFObservable observableWithBlock:]
  +[SBFObservable forkJoin:]

  // instance methods
  -[SBFObservable map:]
  -[SBFObservable subscribe:]
  -[SBFObservable subscribeWithResultBlock:]
  -[SBFObservable waitForResults:]
  -[SBFObservable subscribeWithResultBlock:completionBlock:failureBlock:]
  -[SBFObservable subscribeOn:]
  -[SBFObservable observeOn:]
  -[SBFObservable throttle:onScheduler:]
  -[SBFObservable generate:]


SBFAnimationSettings : PTSettings <PTSettingsKeyPathObserver>
 @property  long long animationType
 @property  double delay
 @property  unsigned long frameRate
 @property  unsigned long curve
 @property  PTPointSettings *controlPoint1Settings
 @property  PTPointSettings *controlPoint2Settings
 @property  PTFrameRateRangeSettings *preferredFrameRateRange
 @property  double duration
 @property  double mass
 @property  double stiffness
 @property  double damping
 @property  double epsilon
 @property  double initialVelocity
 @property  double calculatedDuration
 @property  double speed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFAnimationSettings _moduleWithSectionTitle:delay:frameRate:]
  +[SBFAnimationSettings settingsControllerModule]
  +[SBFAnimationSettings ignoresKey:]
  +[SBFAnimationSettings _moduleWithSectionTitle:]

  // instance methods
  -[SBFAnimationSettings settings:changedValueForKeyPath:]
  -[SBFAnimationSettings stiffness]
  -[SBFAnimationSettings setCurve:]
  -[SBFAnimationSettings setDuration:]
  -[SBFAnimationSettings curve]
  -[SBFAnimationSettings setFrameRateRange:highFrameRateReason:]
  -[SBFAnimationSettings epsilon]
  -[SBFAnimationSettings setDamping:]
  -[SBFAnimationSettings preferredFrameRateRange]
  -[SBFAnimationSettings setDefaultValues]
  -[SBFAnimationSettings controlPoint1Settings]
  -[SBFAnimationSettings setInitialVelocity:]
  -[SBFAnimationSettings setDelay:]
  -[SBFAnimationSettings setSpeed:]
  -[SBFAnimationSettings calculatedDuration]
  -[SBFAnimationSettings dealloc]
  -[SBFAnimationSettings setControlPoint2Settings:]
  -[SBFAnimationSettings frameRate]
  -[SBFAnimationSettings .cxx_destruct]
  -[SBFAnimationSettings controlPoint2Settings]
  -[SBFAnimationSettings speed]
  -[SBFAnimationSettings duration]
  -[SBFAnimationSettings damping]
  -[SBFAnimationSettings setEpsilon:]
  -[SBFAnimationSettings setMass:]
  -[SBFAnimationSettings mass]
  -[SBFAnimationSettings delay]
  -[SBFAnimationSettings setPreferredFrameRateRange:]
  -[SBFAnimationSettings setStiffness:]
  -[SBFAnimationSettings animationType]
  -[SBFAnimationSettings setAnimationType:]
  -[SBFAnimationSettings setFrameRate:]
  -[SBFAnimationSettings setControlPoint1Settings:]
  -[SBFAnimationSettings BSAnimationSettings]
  -[SBFAnimationSettings initialVelocity]
  -[SBFAnimationSettings initWithDefaultValues]


SBReadonlyRow : PTRow
  // instance methods
  -[SBReadonlyRow tableViewCellClass]


SBReadonlyTableViewCell : PTUIRowTableViewCell
  // class methods
  +[SBReadonlyTableViewCell cellStyleForRow:]

  // instance methods
  -[SBReadonlyTableViewCell updateDisplayedValue]


SBFWallpaperGradient : PBUIWallpaperGradient

SBFWindow : UIWindow
 @property  _SBFKeyWindowStack *_keyWindowStack

  // instance methods
  -[SBFWindow autorotationPreventionReasons]
  -[SBFWindow dealloc]
  -[SBFWindow .cxx_destruct]
  -[SBFWindow setHidden:]
  -[SBFWindow _canBecomeKeyWindow]
  -[SBFWindow isContentHidden]
  -[SBFWindow isInterfaceAutorotationDisabled]
  -[SBFWindow makeKeyWindow]
  -[SBFWindow resignAsKeyWindow]
  -[SBFWindow hostedSceneIdentityTokens]
  -[SBFWindow _keyWindowStack]
  -[SBFWindow _isEffectivelyHiddenForKeyWindowStack]
  -[SBFWindow _makeKeyFromKeyWindowStack]
  -[SBFWindow _resignKeyFromKeyWindowStack]
  -[SBFWindow _setKeyWindowStack:]


SBFSecureWindow : SBFWindow
  // class methods
  +[SBFSecureWindow _isSecure]


_SBFVibrantSettings : NSObject
 @property  UIColor *highlightLimitingColor
 @property  UIColor *shimmerColor
 @property  UIColor *chevronShimmerColor
 @property  UIColor *highlightColor
 @property  UIColor *tintColor
 @property  UIColor *referenceColor
 @property  double referenceContrast
 @property  _UILegibilitySettings *legibilitySettings
 @property  long long style

  // class methods
  +[_SBFVibrantSettings vibrantSettingsWithReferenceColor:referenceContrast:legibilitySettings:]

  // instance methods
  -[_SBFVibrantSettings style]
  -[_SBFVibrantSettings .cxx_destruct]
  -[_SBFVibrantSettings highlightColor]
  -[_SBFVibrantSettings setHighlightColor:]
  -[_SBFVibrantSettings _style]
  -[_SBFVibrantSettings tintColor]
  -[_SBFVibrantSettings setTintColor:]
  -[_SBFVibrantSettings isEqual:]
  -[_SBFVibrantSettings legibilitySettings]
  -[_SBFVibrantSettings initWithReferenceColor:referenceContrast:legibilitySettings:]
  -[_SBFVibrantSettings highlightLimitingColor]
  -[_SBFVibrantSettings shimmerColor]
  -[_SBFVibrantSettings chevronShimmerColor]
  -[_SBFVibrantSettings _computeSourceColorDodgeColorForDestinationColor:producingLuminanceChange:]
  -[_SBFVibrantSettings tintViewWithFrame:]
  -[_SBFVibrantSettings highlightLimitingViewWithFrame:]
  -[_SBFVibrantSettings referenceColor]
  -[_SBFVibrantSettings referenceContrast]
  -[_SBFVibrantSettings setHighlightLimitingColor:]
  -[_SBFVibrantSettings setShimmerColor:]
  -[_SBFVibrantSettings setChevronShimmerColor:]


SBFFocusIsolationView : UIView
  // instance methods
  -[SBFFocusIsolationView isTransparentFocusItem]


SBFAuthenticationRequest : NSObject
 @property  unsigned long type
 @property  long long source
 @property  NSString *passcode
 @property  @? handler
 @property  BOOL skipSEKeepUserDataOperation

  // instance methods
  -[SBFAuthenticationRequest source]
  -[SBFAuthenticationRequest passcode]
  -[SBFAuthenticationRequest descriptionWithMultilinePrefix:]
  -[SBFAuthenticationRequest type]
  -[SBFAuthenticationRequest descriptionBuilderWithMultilinePrefix:]
  -[SBFAuthenticationRequest publicDescription]
  -[SBFAuthenticationRequest .cxx_destruct]
  -[SBFAuthenticationRequest succinctDescription]
  -[SBFAuthenticationRequest handler]
  -[SBFAuthenticationRequest succinctDescriptionBuilder]
  -[SBFAuthenticationRequest skipSEKeepUserDataOperation]
  -[SBFAuthenticationRequest _initWithType:source:passcode:skipSEKeepUserDataOperation:handler:]
  -[SBFAuthenticationRequest initForPasscode:source:skipSEKeepUserDataOperation:handler:]
  -[SBFAuthenticationRequest initForPasscode:source:handler:]
  -[SBFAuthenticationRequest initForPasscode:source:]
  -[SBFAuthenticationRequest initForBiometricAuthenticationWithSource:handler:]
  -[SBFAuthenticationRequest initForBiometricAuthenticationWithSource:]


SBFUserAuthenticationModelSEP : NSObject <SBFUserAuthenticationModel>
 @property  <SBFUserAuthenticationModelDelegate> *delegate
 @property  BOOL temporarilyBlocked
 @property  BOOL permanentlyBlocked
 @property  BOOL userRequestedEraseEnabled
 @property  double timeUntilUnblockedSinceReferenceDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFUserAuthenticationModelSEP descriptionBuilder]
  -[SBFUserAuthenticationModelSEP notePasscodeUnlockSucceeded]
  -[SBFUserAuthenticationModelSEP clearBlockedState]
  -[SBFUserAuthenticationModelSEP synchronize]
  -[SBFUserAuthenticationModelSEP setDelegate:]
  -[SBFUserAuthenticationModelSEP _refreshStateForMkbState:notify:]
  -[SBFUserAuthenticationModelSEP delegate]
  -[SBFUserAuthenticationModelSEP _refreshStateAndNotify:]
  -[SBFUserAuthenticationModelSEP refreshBlockedState]
  -[SBFUserAuthenticationModelSEP _isDeviceWipePreferenceEnabled]
  -[SBFUserAuthenticationModelSEP isUserRequestedEraseEnabled]
  -[SBFUserAuthenticationModelSEP timeUntilUnblockedSinceReferenceDate]
  -[SBFUserAuthenticationModelSEP .cxx_destruct]
  -[SBFUserAuthenticationModelSEP _initWithKeyBag:profileConnection:]
  -[SBFUserAuthenticationModelSEP performPasswordTest:]
  -[SBFUserAuthenticationModelSEP notePasscodeUnlockFailedWithError:]
  -[SBFUserAuthenticationModelSEP notePasscodeEntryCancelled]
  -[SBFUserAuthenticationModelSEP isTemporarilyBlocked]
  -[SBFUserAuthenticationModelSEP initWithKeyBag:]
  -[SBFUserAuthenticationModelSEP noteNewMkbDeviceLockState:]
  -[SBFUserAuthenticationModelSEP isPermanentlyBlocked]
  -[SBFUserAuthenticationModelSEP notePasscodeEntryBegan]


_SBFImmediateScheduler : NSObject <SBFScheduler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBFImmediateScheduler performBlock:]
  -[_SBFImmediateScheduler afterDelay:performBlock:]
  -[_SBFImmediateScheduler performCancelableBlock:]


_SBFQueueScheduler : NSObject <SBFScheduler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBFQueueScheduler performBlock:]
  -[_SBFQueueScheduler afterDelay:performBlock:]
  -[_SBFQueueScheduler performCancelableBlock:]
  -[_SBFQueueScheduler .cxx_destruct]
  -[_SBFQueueScheduler initWithQueue:]


SBFScheduler : NSObject
  // class methods
  +[SBFScheduler mainScheduler]
  +[SBFScheduler immediateScheduler]
  +[SBFScheduler globalAsyncScheduler]


SBFWallpaperOptions : PBUIWallpaperOptions

SBFMagnifyMode : NSObject <NSCopying, BSDescriptionProviding>
 @property  {CGSize=dd} size
 @property  NSString *name
 @property  float zoomFactor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFMagnifyMode currentMagnifyMode]
  +[SBFMagnifyMode magnifyModeWithSize:name:]

  // instance methods
  -[SBFMagnifyMode zoomFactor]
  -[SBFMagnifyMode descriptionWithMultilinePrefix:]
  -[SBFMagnifyMode setZoomFactor:]
  -[SBFMagnifyMode descriptionBuilderWithMultilinePrefix:]
  -[SBFMagnifyMode .cxx_destruct]
  -[SBFMagnifyMode succinctDescription]
  -[SBFMagnifyMode size]
  -[SBFMagnifyMode setName:]
  -[SBFMagnifyMode copyWithZone:]
  -[SBFMagnifyMode name]
  -[SBFMagnifyMode succinctDescriptionBuilder]
  -[SBFMagnifyMode setSize:]
  -[SBFMagnifyMode isEqual:]
  -[SBFMagnifyMode init]


SBC2GroupCompletion : NSObject
  // class methods
  +[SBC2GroupCompletion perform:finalCompletion:]
  +[SBC2GroupCompletion perform:finalCompletion:options:delegate:]


SBAbstractSpringBoardDefaultDomain : BSAbstractDefaultDomain
  // instance methods
  -[SBAbstractSpringBoardDefaultDomain init]


SBFWebClipSanitationReport : NSObject
 @property  UIWebClip *webClip
 @property  long long result
 @property  NSError *error

  // instance methods
  -[SBFWebClipSanitationReport error]
  -[SBFWebClipSanitationReport .cxx_destruct]
  -[SBFWebClipSanitationReport result]
  -[SBFWebClipSanitationReport initWithWebClip:result:error:]
  -[SBFWebClipSanitationReport webClip]


SBFWebClipUtilities : NSObject
  // class methods
  +[SBFWebClipUtilities sanitizeWebClipsIfNeeded]
  +[SBFWebClipUtilities sanitizeWebClips:]
  +[SBFWebClipUtilities sanitizeWebClip:]


SBFFrameRateAssertion : NSObject <BSInvalidatable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFFrameRateAssertion initWithFrameRateRange:highFrameRateReason:]
  -[SBFFrameRateAssertion .cxx_destruct]
  -[SBFFrameRateAssertion invalidate]


SBFTapToWakeGestureRecognizer : UIGestureRecognizer
  // instance methods
  -[SBFTapToWakeGestureRecognizer _isTapEvent:]
  -[SBFTapToWakeGestureRecognizer _succesfullyRecognizeFromEvent:]
  -[SBFTapToWakeGestureRecognizer touchesEnded:withEvent:]


SBFWallpaperAggdLogger : NSObject
  // instance methods
  -[SBFWallpaperAggdLogger incrementIrisPlayCount]
  -[SBFWallpaperAggdLogger .cxx_destruct]
  -[SBFWallpaperAggdLogger init]
  -[SBFWallpaperAggdLogger updateWallpaperAggdKeysForLocations:withHasVideo:hasProcedural:name:]
  -[SBFWallpaperAggdLogger saveWallpaperAggdCurrentValues]
  -[SBFWallpaperAggdLogger _clearAggdKeysForLocations:]
  -[SBFWallpaperAggdLogger _valueString]
  -[SBFWallpaperAggdLogger _bucketedPlayCount]
  -[SBFWallpaperAggdLogger _resetPlayCountDate]


SBBootDefaults : SBAbstractSpringBoardDefaultDomain
 @property  NSString *lastSystemBuildVersion
 @property  NSString *lastRestoreIdentifier
 @property  BOOL hasCompletedSynchronizingCloudCriticalData
 @property  NSDictionary *bootTransitionContext
 @property  BOOL dontLockAfterCrash
 @property  BOOL recordBootTimeTillDidFinishLaunching

  // instance methods
  -[SBBootDefaults _bindAndRegisterDefaults]


SBIdleTimerDefaults : SBAbstractSpringBoardDefaultDomain
 @property  double minimumLockscreenIdleTime
 @property  BOOL disableAutoDim
 @property  BOOL dontDimOrLockWhileConnectedToPower
 @property  BOOL supportLiftToWake
 @property  BOOL supportTapToWake
 @property  BOOL disableAttentionAwareness
 @property  BOOL backlightLoggingEnabled

  // instance methods
  -[SBIdleTimerDefaults _bindAndRegisterDefaults]
  -[SBIdleTimerDefaults disableAutoDim]
  -[SBIdleTimerDefaults disableAutoDimExists]


SBFWallpaperConfigurationManager : PBUIWallpaperConfigurationManager
 @property  NSArray *dataStores

  // instance methods
  -[SBFWallpaperConfigurationManager dataStores]
  -[SBFWallpaperConfigurationManager wallpaperConfigurationForVariant:includingValuesForTypes:]
  -[SBFWallpaperConfigurationManager wallpaperConfigurationForVariant:includingValuesForTypes:wallpaperMode:]


SBHardwareDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL hasSeenACaseLatchCoverOnce
 @property  BOOL disableHomeButton
 @property  BOOL useHardwareSwitchAsOrientationLock
 @property  BOOL disableProximitySensor
 @property  BOOL disableHomeButtonDoublePress
 @property  long long homeButtonHapticType
 @property  BOOL disableNaturalVolumeButtonOrientation
 @property  BOOL enableD7xPORCompatibilityMode

  // instance methods
  -[SBHardwareDefaults _bindAndRegisterDefaults]
  -[SBHardwareDefaults _deviceRequiresNaturalVolumeButtonArrangement]
  -[SBHardwareDefaults isNaturalVolumeButtonOrientationEnabled]


SBWakeEvent : NSObject
 @property  unsigned long eventAbsTimestamp
 @property  unsigned long eventRecvContTimestamp

  // instance methods
  -[SBWakeEvent setEventRecvContTimestamp:]
  -[SBWakeEvent eventRecvContTimestamp]
  -[SBWakeEvent setEventAbsTimestamp:]
  -[SBWakeEvent initWithTimestamp:]
  -[SBWakeEvent eventAbsTimestamp]


SBWakeLogger : NSObject
 @property  BOOL trackingWake
 @property  long long homeButtonType
 @property  unsigned int timesyncService
 @property  unsigned int backlightService
 @property  NSMutableDictionary *wakeSouceToEventDict
 @property  long long activeWakeLoggerSource
 @property  NSString *activeWakeSourceDescription

  // class methods
  +[SBWakeLogger sharedInstance]

  // instance methods
  -[SBWakeLogger trackingWake]
  -[SBWakeLogger wakeSouceToEventDict]
  -[SBWakeLogger homeButtonType]
  -[SBWakeLogger wakeMayBegin:withTimestamp:]
  -[SBWakeLogger lockDidBegin]
  -[SBWakeLogger wakeDidBegin:]
  -[SBWakeLogger dealloc]
  -[SBWakeLogger .cxx_destruct]
  -[SBWakeLogger setWakeSouceToEventDict:]
  -[SBWakeLogger setBacklightService:]
  -[SBWakeLogger wakeDidEnd]
  -[SBWakeLogger activeWakeSourceDescription]
  -[SBWakeLogger timesyncService]
  -[SBWakeLogger setTrackingWake:]
  -[SBWakeLogger _lock_wakeDidBegin:]
  -[SBWakeLogger activeWakeLoggerSource]
  -[SBWakeLogger setHomeButtonType:]
  -[SBWakeLogger backlightService]
  -[SBWakeLogger setActiveWakeLoggerSource:]
  -[SBWakeLogger setTimesyncService:]
  -[SBWakeLogger init]


SBCornerGestureDefaults : SBAbstractSpringBoardDefaultDomain
 @property  unsigned long bottomLeftCornerGestureFeature
 @property  unsigned long bottomLeftCornerGestureTouchTypes
 @property  unsigned long bottomRightCornerGestureFeature
 @property  unsigned long bottomRightCornerGestureTouchTypes

  // instance methods
  -[SBCornerGestureDefaults _bindAndRegisterDefaults]
  -[SBCornerGestureDefaults _migrateSkyDefaultsIfNecessary]


SBFLockScreenDateSubtitleView : UIView
 @property  _UILegibilitySettings *legibilitySettings
 @property  double strength
 @property  UIFont *font
 @property  double baselineOffsetFromOrigin
 @property  double baselineOffsetFromBottom
 @property  NSString *string
 @property  UIView *accessoryView

  // class methods
  +[SBFLockScreenDateSubtitleView labelFont]
  +[SBFLockScreenDateSubtitleView labelFontMetrics]
  +[SBFLockScreenDateSubtitleView scaledFontSize:withMaximumFontSizeCategory:]

  // instance methods
  -[SBFLockScreenDateSubtitleView interItemSpacing]
  -[SBFLockScreenDateSubtitleView accessoryView]
  -[SBFLockScreenDateSubtitleView string]
  -[SBFLockScreenDateSubtitleView setStrength:]
  -[SBFLockScreenDateSubtitleView initWithString:accessoryView:]
  -[SBFLockScreenDateSubtitleView dealloc]
  -[SBFLockScreenDateSubtitleView accessoryViewFrame]
  -[SBFLockScreenDateSubtitleView .cxx_destruct]
  -[SBFLockScreenDateSubtitleView subtitleLabelCharacterOverflowInsets]
  -[SBFLockScreenDateSubtitleView layoutSubviews]
  -[SBFLockScreenDateSubtitleView _updateForCurrentSizeCategory]
  -[SBFLockScreenDateSubtitleView setAccessoryView:]
  -[SBFLockScreenDateSubtitleView setLegibilitySettings:]
  -[SBFLockScreenDateSubtitleView sizeThatFits:]
  -[SBFLockScreenDateSubtitleView font]
  -[SBFLockScreenDateSubtitleView setFont:]
  -[SBFLockScreenDateSubtitleView setString:]
  -[SBFLockScreenDateSubtitleView baselineOffsetFromBottom]
  -[SBFLockScreenDateSubtitleView strength]
  -[SBFLockScreenDateSubtitleView subtitleLabelFrame]
  -[SBFLockScreenDateSubtitleView legibilitySettings]
  -[SBFLockScreenDateSubtitleView init]
  -[SBFLockScreenDateSubtitleView baselineOffsetFromOrigin]


SBFLazyObjectProvider : NSObject
 @property  id object
 @property  @? generator

  // instance methods
  -[SBFLazyObjectProvider .cxx_destruct]
  -[SBFLazyObjectProvider object]
  -[SBFLazyObjectProvider generator]
  -[SBFLazyObjectProvider setObject:]
  -[SBFLazyObjectProvider setGenerator:]
  -[SBFLazyObjectProvider initWithGenerator:]


SBFBuildVersion : NSObject
 @property  NSString *stringRepresentation
 @property  long long majorBuildNumber
 @property  NSString *majorBuildLetterString
 @property  long long minorBuildNumber
 @property  NSString *minorBuildLetterString

  // instance methods
  -[SBFBuildVersion majorBuildLetterString]
  -[SBFBuildVersion minorBuildNumber]
  -[SBFBuildVersion majorBuildNumber]
  -[SBFBuildVersion .cxx_destruct]
  -[SBFBuildVersion stringRepresentation]
  -[SBFBuildVersion initWithString:]
  -[SBFBuildVersion minorBuildLetterString]
  -[SBFBuildVersion isEqual:]
  -[SBFBuildVersion compareBuildVersion:withPrecision:]
  -[SBFBuildVersion compareBuildVersionString:withPrecision:]


SBAbstractDefaults : NSObject <BSDescriptionProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBAbstractDefaults descriptionWithMultilinePrefix:]
  -[SBAbstractDefaults descriptionBuilderWithMultilinePrefix:]
  -[SBAbstractDefaults succinctDescription]
  -[SBAbstractDefaults succinctDescriptionBuilder]


SBFLockScreenMetrics : NSObject
  // class methods
  +[SBFLockScreenMetrics slideToUnlockInsets]
  +[SBFLockScreenMetrics pinKeypadStatusSubtitleTitleExtraOffset]
  +[SBFLockScreenMetrics slideToUnlockFontSize]
  +[SBFLockScreenMetrics proudLockAssetSize]
  +[SBFLockScreenMetrics _notificationListSideOffset]
  +[SBFLockScreenMetrics dateViewBaselineY]
  +[SBFLockScreenMetrics pinNumberPadBaseOffsetFromTopOfScreen:]
  +[SBFLockScreenMetrics pinKeypadStatusTitleBaselineOffsetFromEntryFieldIncludingSubtitle]
  +[SBFLockScreenMetrics deviceInformationParagraphSpacing]
  +[SBFLockScreenMetrics pinLongNumericEntryFieldBottomYDistanceFromNumberPadTopButton]
  +[SBFLockScreenMetrics deviceInformationLabelFontLeading]
  +[SBFLockScreenMetrics pinFixedDigitEntryFieldIndicatorStrokeSize]
  +[SBFLockScreenMetrics _subTitleHeight]
  +[SBFLockScreenMetrics proudLockScaleFactor]
  +[SBFLockScreenMetrics notificationListInsets]
  +[SBFLockScreenMetrics pinKeyboardEntryFieldOffset:]
  +[SBFLockScreenMetrics deviceInformationLabelFontSize]
  +[SBFLockScreenMetrics proudLockCenterFromTopOfScreen]
  +[SBFLockScreenMetrics _notificationListTopPadding]
  +[SBFLockScreenMetrics pinFixedDigitEntryFieldBottomYDistanceFromNumberPadTopButton:]
  +[SBFLockScreenMetrics slideToUnlockOverlayMargin]
  +[SBFLockScreenMetrics pinKeypadStatusTitleBaselineOffsetFromEntryField]
  +[SBFLockScreenMetrics pinNumberPadButtonOuterCircleDiameter]
  +[SBFLockScreenMetrics dateBaselineOffsetFromTime]
  +[SBFLockScreenMetrics logoutLabelFontSize]
  +[SBFLockScreenMetrics pinNumberPadWidth]
  +[SBFLockScreenMetrics pinFixedDigitEntryFieldIndicatorDiameter]
  +[SBFLockScreenMetrics logoutInsets]
  +[SBFLockScreenMetrics pinKeypadStatusTitleExtraOffsetIncludingSubtitle]
  +[SBFLockScreenMetrics proudLockOffsetFromTopOfScreen]
  +[SBFLockScreenMetrics scaledFontSize:withMaximumFontSizeCategory:]
  +[SBFLockScreenMetrics pinKeypadStatusTitleBaselineOffsetFromTitle]
  +[SBFLockScreenMetrics pinKeypadEntryFieldOffsetForSubtitle]
  +[SBFLockScreenMetrics dateViewSideMargin]
  +[SBFLockScreenMetrics pinKeypadStatusSubtitleViewTitleFont]
  +[SBFLockScreenMetrics dateLabelFontSize]
  +[SBFLockScreenMetrics pinAlphanumericEntryFieldBottomYDistanceFromKeyboard]
  +[SBFLockScreenMetrics pinNumberPadAncillaryButtonOffset]
  +[SBFLockScreenMetrics pinKeypadStatusTitleViewTitleFont]
  +[SBFLockScreenMetrics pinNumberPadButtonPaddingHeight]
  +[SBFLockScreenMetrics slideUpGrabberInset]
  +[SBFLockScreenMetrics pinNumberPadButtonPaddingWidth]
  +[SBFLockScreenMetrics pinFixedDigitEntryFieldIndicatorPaddingWidth]
  +[SBFLockScreenMetrics subtitleBaselineOffsetFromTopOfScreen]
  +[SBFLockScreenMetrics _notificationListBottomOffset]
  +[SBFLockScreenMetrics systemApertureProudLockAssetSize]
  +[SBFLockScreenMetrics deviceInformationInsets]
  +[SBFLockScreenMetrics pinNumberPadBottomPaddingHeight]


SBSOSDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL disablesForAccessibility
 @property  BOOL performedCheckForTripleClickSOSMigrationAlert

  // instance methods
  -[SBSOSDefaults isAutomaticCallCountdownEnabled]
  -[SBSOSDefaults _bindAndRegisterDefaults]
  -[SBSOSDefaults lockButtonSOSTriggerCount]
  -[SBSOSDefaults clawCanTriggerSOS]


_SBDisplayScaleMappingCache : NSObject <FBSDisplayObserving>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SBDisplayScaleMappingCache sharedInstance]

  // instance methods
  -[_SBDisplayScaleMappingCache dealloc]
  -[_SBDisplayScaleMappingCache .cxx_destruct]
  -[_SBDisplayScaleMappingCache displayMonitor:willDisconnectIdentity:]
  -[_SBDisplayScaleMappingCache init]
  -[_SBDisplayScaleMappingCache mappingForDisplayIdentifier:]
  -[_SBDisplayScaleMappingCache cacheMapping:]


SBDisplayScaleMapping : NSObject
 @property  NSString *displayHardwareIdentifier
 @property  unsigned long supportedScales

  // class methods
  +[SBDisplayScaleMapping withDisplay:allowWirelessDisplays:]

  // instance methods
  -[SBDisplayScaleMapping .cxx_destruct]
  -[SBDisplayScaleMapping initWithDisplayHardwareIdentifier:nativePPI:supportedScales:displayScaleToLogicalScale:]
  -[SBDisplayScaleMapping logicalScaleForDisplayScale:]
  -[SBDisplayScaleMapping ppiForDisplayScale:]
  -[SBDisplayScaleMapping createDefaultSettings]
  -[SBDisplayScaleMapping supportedScales]
  -[SBDisplayScaleMapping displayHardwareIdentifier]


SBFAlwaysOnLiveRenderingAssertion : NSObject <BSInvalidatable>
 @property  NSDate *createdAt
 @property  NSString *reason
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFAlwaysOnLiveRenderingAssertion valid]
  -[SBFAlwaysOnLiveRenderingAssertion dealloc]
  -[SBFAlwaysOnLiveRenderingAssertion .cxx_destruct]
  -[SBFAlwaysOnLiveRenderingAssertion reason]
  -[SBFAlwaysOnLiveRenderingAssertion createdAt]
  -[SBFAlwaysOnLiveRenderingAssertion invalidate]
  -[SBFAlwaysOnLiveRenderingAssertion initWithReason:invalidationHandler:]


SBFAlwaysOnLiveRenderingAssertionManager : NSObject <BLSAssertionObserving>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFAlwaysOnLiveRenderingAssertionManager sharedInstance]

  // instance methods
  -[SBFAlwaysOnLiveRenderingAssertionManager .cxx_destruct]
  -[SBFAlwaysOnLiveRenderingAssertionManager invalidateAllAssertions]
  -[SBFAlwaysOnLiveRenderingAssertionManager init]
  -[SBFAlwaysOnLiveRenderingAssertionManager assertionWasAcquired:]
  -[SBFAlwaysOnLiveRenderingAssertionManager assertion:didCancelWithError:]
  -[SBFAlwaysOnLiveRenderingAssertionManager acquireLiveRenderingAssertionForUIScene:reason:]
  -[SBFAlwaysOnLiveRenderingAssertionManager acquireLiveRenderingAssertionForFBSScene:reason:]
  -[SBFAlwaysOnLiveRenderingAssertionManager _invalidateAllAssertionsInTable:]


SBAlwaysOnLiveRenderingSceneAssertionManager : NSObject <BLSBacklightStateObserving>
 @property  <BLSAssertionObserving> *assertionObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBAlwaysOnLiveRenderingSceneAssertionManager backlight:didCompleteUpdateToState:forEvent:]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager dealloc]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager .cxx_destruct]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager _invalidateWithReason:]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager invalidate]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager init]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager backlight:didChangeAlwaysOnEnabled:]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager assertionAttributes]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager acquireLiveRenderingAssertionWithReason:]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager _acquireLiveRenderingAssertionProxy:]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager _releaseLiveRenderingAssertionProxy:]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager _nextLiveRenderingAssertionProxyIfAny]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager _acquireLiveRenderingAssertionIfNeededForProxy:backlight:]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager _releaseLiveRenderingAssertionWithReason:]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager assertionObserver]
  -[SBAlwaysOnLiveRenderingSceneAssertionManager setAssertionObserver:]


SBAlwaysOnLiveRenderingUISceneAssertionManager : SBAlwaysOnLiveRenderingSceneAssertionManager
  // instance methods
  -[SBAlwaysOnLiveRenderingUISceneAssertionManager .cxx_destruct]
  -[SBAlwaysOnLiveRenderingUISceneAssertionManager initWithScene:]
  -[SBAlwaysOnLiveRenderingUISceneAssertionManager assertionAttributes]


SBAlwaysOnLiveRenderingFBSSceneAssertionManager : SBAlwaysOnLiveRenderingSceneAssertionManager
  // instance methods
  -[SBAlwaysOnLiveRenderingFBSSceneAssertionManager .cxx_destruct]
  -[SBAlwaysOnLiveRenderingFBSSceneAssertionManager initWithScene:]
  -[SBAlwaysOnLiveRenderingFBSSceneAssertionManager assertionAttributes]


SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier : NSObject <SBFTraitsPreferencesStageResolutionPolicySpecifying>
 @property  NSArray *participantsUniqueIdentifiers
 @property  BOOL forceResolution
 @property  SBFTraitsSettingsActuationContext *actuationContext
 @property  NSNumber *componentOrder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier componentOrder]
  -[SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier participantsUniqueIdentifiers]
  -[SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier actuationContext]
  -[SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier preferencesType]
  -[SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier setActuationContext:]
  -[SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier .cxx_destruct]
  -[SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier forceResolution]
  -[SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier initWithComponentOrder:]
  -[SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier setParticipantsUniqueIdentifiers:]
  -[SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier setForceResolution:]
  -[SBFTraitsArbiterUpdateOrientationResolutionPolicySpecifier updateStageParticipantsResolutionPolicies:context:]


SBFTraitsArbiter : NSObject <BSDescriptionProviding>
 @property  <SBFTraitsArbiterInputsDataSource> *inputsDataSource
 @property  <SBFTraitsArbiterDrawingDataSource> *drawingDataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsArbiter drawingDataSource]
  -[SBFTraitsArbiter _setNeedsUpdateArbitrationWithReason:animated:]
  -[SBFTraitsArbiter _updateArbitrationWithClientContext:defaultContext:]
  -[SBFTraitsArbiter descriptionWithMultilinePrefix:]
  -[SBFTraitsArbiter addObserver:]
  -[SBFTraitsArbiter descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsArbiter _setupStateDump]
  -[SBFTraitsArbiter dealloc]
  -[SBFTraitsArbiter _addResolutionPolicySpecifierForClientContext:]
  -[SBFTraitsArbiter .cxx_destruct]
  -[SBFTraitsArbiter _newUniqueIdentifierForRole:]
  -[SBFTraitsArbiter succinctDescription]
  -[SBFTraitsArbiter orientationPreferencesResolutionStage]
  -[SBFTraitsArbiter _setNeedsUpdateArbitrationWithClientContext:defaultContext:]
  -[SBFTraitsArbiter initWithRolesProvider:inputsDataSource:drawingDataSource:]
  -[SBFTraitsArbiter _preferencesResolutionStageDidUpdateComponents:animate:]
  -[SBFTraitsArbiter updateArbitrationIfNeeded]
  -[SBFTraitsArbiter _defaultUpdateContextWithReason:animatable:]
  -[SBFTraitsArbiter _participantDidUpdatePreferences:]
  -[SBFTraitsArbiter setNeedsUpdateArbitrationWithContext:]
  -[SBFTraitsArbiter noteArbiterWillBeginTransitionWithContext:]
  -[SBFTraitsArbiter noteArbiterDidCompleteTransitionWithContext:]
  -[SBFTraitsArbiter inputsDataSource]
  -[SBFTraitsArbiter _newOrderedPreferencesResolutionStagesWithRolesProvider:]
  -[SBFTraitsArbiter succinctDescriptionBuilder]
  -[SBFTraitsArbiter _TEMP_89923418_updateZOrderSettingsForInputUI]
  -[SBFTraitsArbiter acquireParticipantWithRole:delegate:]
  -[SBFTraitsArbiter removeObserver:]
  -[SBFTraitsArbiter _inputsValidationStageDidUpdateValidators:]
  -[SBFTraitsArbiter _participantDidUpdateSettings:]
  -[SBFTraitsArbiter _removeForceResolutionSpecifier]
  -[SBFTraitsArbiter inputsValidationStage]
  -[SBFTraitsArbiter _invalidateParticipant:]


SBFTraitsArbiterUpdateContext : NSObject <SBFTraitsArbiterUpdateContextBuilding, BSDescriptionProviding, SBFTraitsSettingsActuationContextProviding>
 @property  <SBFTraitsArbiterDrawingDataSource> *_drawingConfigProvider
 @property  BOOL _hasDefaultOrientationActuationContext
 @property  NSString *reason
 @property  NSArray *requestingParticipantsUniqueIdentifiers
 @property  BOOL forceOrientationResolution
 @property  SBFTraitsSettingsActuationContext *orientationActuationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFTraitsArbiterUpdateContext _hasDefaultOrientationActuationContext]
  -[SBFTraitsArbiterUpdateContext orientationActuationContext]
  -[SBFTraitsArbiterUpdateContext descriptionWithMultilinePrefix:]
  -[SBFTraitsArbiterUpdateContext descriptionBuilderWithMultilinePrefix:]
  -[SBFTraitsArbiterUpdateContext setForceOrientationResolution:]
  -[SBFTraitsArbiterUpdateContext initWithBuilder:]
  -[SBFTraitsArbiterUpdateContext setRequestingParticipantsUniqueIdentifiers:]
  -[SBFTraitsArbiterUpdateContext .cxx_destruct]
  -[SBFTraitsArbiterUpdateContext succinctDescription]
  -[SBFTraitsArbiterUpdateContext reason]
  -[SBFTraitsArbiterUpdateContext hasAnyActuationContext]
  -[SBFTraitsArbiterUpdateContext _setDrawingConfigurationProvider:]
  -[SBFTraitsArbiterUpdateContext setOrientationActuationContext:]
  -[SBFTraitsArbiterUpdateContext requestingParticipantsUniqueIdentifiers]
  -[SBFTraitsArbiterUpdateContext forceOrientationResolution]
  -[SBFTraitsArbiterUpdateContext succinctDescriptionBuilder]
  -[SBFTraitsArbiterUpdateContext _drawingConfigProvider]
  -[SBFTraitsArbiterUpdateContext setReason:]


SBFLockScreenAlternateDateLabel : UIView <SBUILegibility>
 @property  SBUILegibilityLabel *label
 @property  NSDate *date
 @property  UIFont *font
 @property  {UIEdgeInsets=dddd} characterOverflowInsets
 @property  double strength
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFLockScreenAlternateDateLabel showAlternateDate]
  +[SBFLockScreenAlternateDateLabel _lunarCalendarIdentifier]

  // instance methods
  -[SBFLockScreenAlternateDateLabel characterOverflowInsets]
  -[SBFLockScreenAlternateDateLabel setStrength:]
  -[SBFLockScreenAlternateDateLabel setLabel:]
  -[SBFLockScreenAlternateDateLabel setDate:]
  -[SBFLockScreenAlternateDateLabel date]
  -[SBFLockScreenAlternateDateLabel .cxx_destruct]
  -[SBFLockScreenAlternateDateLabel _alternateDateString]
  -[SBFLockScreenAlternateDateLabel layoutSubviews]
  -[SBFLockScreenAlternateDateLabel setLegibilitySettings:]
  -[SBFLockScreenAlternateDateLabel sizeThatFits:]
  -[SBFLockScreenAlternateDateLabel label]
  -[SBFLockScreenAlternateDateLabel font]
  -[SBFLockScreenAlternateDateLabel setFont:]
  -[SBFLockScreenAlternateDateLabel strength]
  -[SBFLockScreenAlternateDateLabel legibilitySettings]
  -[SBFLockScreenAlternateDateLabel initWithSettings:strength:font:]


SBNotificationCenterDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL useDuetRecommendations
 @property  BOOL batteryWidgetAlwaysAvailable
 @property  BOOL showInternalWidgets
 @property  BOOL widgetSnapshottingEnabled
 @property  BOOL didPurgeNonCAMLSnapshots
 @property  BOOL didPurgeNonASTCSnapshots
 @property  BOOL widgetLoggingEnabled
 @property  BOOL showWidgetSnapshotDebugLabels

  // instance methods
  -[SBNotificationCenterDefaults _bindAndRegisterDefaults]


SBFHomeGrabberSettings : PTSettings
 @property  double coverSheetHomeAffordanceCursorTopEdgeInset
 @property  double coverSheetHomeAffordanceCursorBottomEdgeInset
 @property  double coverSheetHomeAffordanceCursorLeftEdgeInset
 @property  double coverSheetHomeAffordanceCursorRightEdgeInset
 @property  double coverSheetSuppressAnimationForPointerTopEdgeInset
 @property  double coverSheetSuppressAnimationForPointerBottomEdgeInset
 @property  double coverSheetSuppressAnimationForPointerLeftEdgeInset
 @property  double coverSheetSuppressAnimationForPointerRightEdgeInset
 @property  BOOL enabled
 @property  long long initializationStyle
 @property  BOOL removeViewOnHide
 @property  long long edgeProtectOverride
 @property  long long autoHideOverride
 @property  double autoHideTime
 @property  double autoHideTimeOnAppRequest
 @property  BOOL resetAutoHideTimeOnRotation
 @property  double delayForUnhideOnTouch
 @property  double delayForUnhideOnAppRequest
 @property  double bounceHitTestOutsetTop
 @property  double bounceHitTestOutsetSides
 @property  SBFAnimationSettings *hideAnimationSettings
 @property  SBFAnimationSettings *unhideAnimationSettings
 @property  SBFAnimationSettings *hideForHomeGestureOwnershipAnimationSettings
 @property  SBFAnimationSettings *unhideForHomeGestureOwnershipAnimationSettings
 @property  SBFAnimationSettings *thinToProminentAnimationSettings
 @property  SBFAnimationSettings *prominentToThinAnimationSettings
 @property  SBFAnimationSettings *forcedProminentToThinAnimationSettings
 @property  SBFAnimationSettings *lumaResponseAnimationSettings
 @property  SBFAnimationSettings *initialLumaResponseAnimationSettings
 @property  SBFAnimationSettings *rotationFadeOutAnimationSettings
 @property  SBFAnimationSettings *rotationFadeInAnimationSettings
 @property  SBFFluidBehaviorSettings *edgeProtectAnimationSettings

  // class methods
  +[SBFHomeGrabberSettings settingsControllerModule]

  // instance methods
  -[SBFHomeGrabberSettings setAutoHideTime:]
  -[SBFHomeGrabberSettings hideAnimationSettings]
  -[SBFHomeGrabberSettings setEdgeProtectOverride:]
  -[SBFHomeGrabberSettings coverSheetSuppressAnimationForPointerBottomEdgeInset]
  -[SBFHomeGrabberSettings setForcedProminentToThinAnimationSettings:]
  -[SBFHomeGrabberSettings setLumaResponseAnimationSettings:]
  -[SBFHomeGrabberSettings setDefaultValues]
  -[SBFHomeGrabberSettings setCoverSheetHomeAffordanceCursorBottomEdgeInset:]
  -[SBFHomeGrabberSettings setInitialLumaResponseAnimationSettings:]
  -[SBFHomeGrabberSettings setCoverSheetHomeAffordanceCursorRightEdgeInset:]
  -[SBFHomeGrabberSettings setInitializationStyle:]
  -[SBFHomeGrabberSettings setHideForHomeGestureOwnershipAnimationSettings:]
  -[SBFHomeGrabberSettings edgeProtectOverride]
  -[SBFHomeGrabberSettings coverSheetHomeAffordanceCursorTopEdgeInset]
  -[SBFHomeGrabberSettings coverSheetSuppressAnimationForPointerTopEdgeInset]
  -[SBFHomeGrabberSettings resetAutoHideTimeOnRotation]
  -[SBFHomeGrabberSettings unhideAnimationSettings]
  -[SBFHomeGrabberSettings initialLumaResponseAnimationSettings]
  -[SBFHomeGrabberSettings setCoverSheetSuppressAnimationForPointerBottomEdgeInset:]
  -[SBFHomeGrabberSettings setCoverSheetSuppressAnimationForPointerRightEdgeInset:]
  -[SBFHomeGrabberSettings hideForHomeGestureOwnershipAnimationSettings]
  -[SBFHomeGrabberSettings .cxx_destruct]
  -[SBFHomeGrabberSettings setUnhideForHomeGestureOwnershipAnimationSettings:]
  -[SBFHomeGrabberSettings setRotationFadeOutAnimationSettings:]
  -[SBFHomeGrabberSettings setEnabled:]
  -[SBFHomeGrabberSettings delayForUnhideOnTouch]
  -[SBFHomeGrabberSettings autoHideOverride]
  -[SBFHomeGrabberSettings autoHideTimeOnAppRequest]
  -[SBFHomeGrabberSettings setRotationFadeInAnimationSettings:]
  -[SBFHomeGrabberSettings coverSheetSuppressAnimationForPointerRightEdgeInset]
  -[SBFHomeGrabberSettings setRemoveViewOnHide:]
  -[SBFHomeGrabberSettings setCoverSheetSuppressAnimationForPointerLeftEdgeInset:]
  -[SBFHomeGrabberSettings setEdgeProtectAnimationSettings:]
  -[SBFHomeGrabberSettings bounceHitTestOutsetTop]
  -[SBFHomeGrabberSettings unhideForHomeGestureOwnershipAnimationSettings]
  -[SBFHomeGrabberSettings forcedProminentToThinAnimationSettings]
  -[SBFHomeGrabberSettings setProminentToThinAnimationSettings:]
  -[SBFHomeGrabberSettings setAutoHideOverride:]
  -[SBFHomeGrabberSettings setDelayForUnhideOnTouch:]
  -[SBFHomeGrabberSettings autoHideTime]
  -[SBFHomeGrabberSettings setAutoHideTimeOnAppRequest:]
  -[SBFHomeGrabberSettings setCoverSheetSuppressAnimationForPointerTopEdgeInset:]
  -[SBFHomeGrabberSettings setResetAutoHideTimeOnRotation:]
  -[SBFHomeGrabberSettings coverSheetHomeAffordanceCursorEdgeInsets]
  -[SBFHomeGrabberSettings setDelayForUnhideOnAppRequest:]
  -[SBFHomeGrabberSettings initializationStyle]
  -[SBFHomeGrabberSettings setHideAnimationSettings:]
  -[SBFHomeGrabberSettings lumaResponseAnimationSettings]
  -[SBFHomeGrabberSettings coverSheetHomeAffordanceCursorRightEdgeInset]
  -[SBFHomeGrabberSettings rotationFadeOutAnimationSettings]
  -[SBFHomeGrabberSettings coverSheetHomeAffordanceCursorBottomEdgeInset]
  -[SBFHomeGrabberSettings setThinToProminentAnimationSettings:]
  -[SBFHomeGrabberSettings coverSheetHomeAffordanceCursorLeftEdgeInset]
  -[SBFHomeGrabberSettings setCoverSheetHomeAffordanceCursorLeftEdgeInset:]
  -[SBFHomeGrabberSettings coverSheetSuppressAnimationForPointerInsets]
  -[SBFHomeGrabberSettings prominentToThinAnimationSettings]
  -[SBFHomeGrabberSettings rotationFadeInAnimationSettings]
  -[SBFHomeGrabberSettings setCoverSheetHomeAffordanceCursorTopEdgeInset:]
  -[SBFHomeGrabberSettings setBounceHitTestOutsetSides:]
  -[SBFHomeGrabberSettings setBounceHitTestOutsetTop:]
  -[SBFHomeGrabberSettings coverSheetSuppressAnimationForPointerLeftEdgeInset]
  -[SBFHomeGrabberSettings removeViewOnHide]
  -[SBFHomeGrabberSettings edgeProtectAnimationSettings]
  -[SBFHomeGrabberSettings thinToProminentAnimationSettings]
  -[SBFHomeGrabberSettings isEnabled]
  -[SBFHomeGrabberSettings bounceHitTestOutsetSides]
  -[SBFHomeGrabberSettings setUnhideAnimationSettings:]
  -[SBFHomeGrabberSettings delayForUnhideOnAppRequest]


SBFHomeGrabberDomain : PTDomain
  // class methods
  +[SBFHomeGrabberDomain rootSettings]
  +[SBFHomeGrabberDomain domainName]
  +[SBFHomeGrabberDomain domainGroupName]
  +[SBFHomeGrabberDomain rootSettingsClass]


_SBWindowReference : NSObject <NSCopying>
 @property  unsigned long pointer
 @property  id object

  // class methods
  +[_SBWindowReference referenceForObject:]

  // instance methods
  -[_SBWindowReference initWithObject:]
  -[_SBWindowReference pointer]
  -[_SBWindowReference object]
  -[_SBWindowReference copyWithZone:]
  -[_SBWindowReference isEqual:]


_SBFKeyWindowStack : NSObject <BSDescriptionProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SBFKeyWindowStack sharedInstance]

  // instance methods
  -[_SBFKeyWindowStack descriptionWithMultilinePrefix:]
  -[_SBFKeyWindowStack popKeyWindow:]
  -[_SBFKeyWindowStack descriptionBuilderWithMultilinePrefix:]
  -[_SBFKeyWindowStack dealloc]
  -[_SBFKeyWindowStack .cxx_destruct]
  -[_SBFKeyWindowStack succinctDescription]
  -[_SBFKeyWindowStack _keyWindowDidChangeNotification:]
  -[_SBFKeyWindowStack expectedKeyWindow]
  -[_SBFKeyWindowStack noteWindowDeallocated:]
  -[_SBFKeyWindowStack succinctDescriptionBuilder]
  -[_SBFKeyWindowStack _isWindowEligibleForKeyness:]
  -[_SBFKeyWindowStack _evaluateForNewKeyWindowWithReason:]
  -[_SBFKeyWindowStack popKeyWindow:reason:]
  -[_SBFKeyWindowStack init]
  -[_SBFKeyWindowStack noteWindowUnhidden:]
  -[_SBFKeyWindowStack pushKeyWindow:]
  -[_SBFKeyWindowStack noteWindowHidden:]


SBFDeviceBlockTimer : NSObject
 @property  NSString *titleText
 @property  NSString *subtitleText
 @property  NSString *timeoutText
 @property  NSString *primaryActionButtonText
 @property  BOOL userRequestedEraseEnabled
 @property  <SBFBlockStatusProvider> *blockStatusProvider
 @property  NSTimer *timer
 @property  BOOL enabled
 @property  @? handler

  // instance methods
  -[SBFDeviceBlockTimer _isEnabled]
  -[SBFDeviceBlockTimer subtitleText]
  -[SBFDeviceBlockTimer setTitleText:]
  -[SBFDeviceBlockTimer setHandler:]
  -[SBFDeviceBlockTimer titleText]
  -[SBFDeviceBlockTimer _setEnabled:]
  -[SBFDeviceBlockTimer dealloc]
  -[SBFDeviceBlockTimer isUserRequestedEraseEnabled]
  -[SBFDeviceBlockTimer .cxx_destruct]
  -[SBFDeviceBlockTimer setSubtitleText:]
  -[SBFDeviceBlockTimer timer]
  -[SBFDeviceBlockTimer handler]
  -[SBFDeviceBlockTimer invalidate]
  -[SBFDeviceBlockTimer start]
  -[SBFDeviceBlockTimer _clearTimer]
  -[SBFDeviceBlockTimer _scheduleTimerIfNecessaryAndUpdateState]
  -[SBFDeviceBlockTimer initWithDeviceBlockStatusProvider:]
  -[SBFDeviceBlockTimer timeoutText]
  -[SBFDeviceBlockTimer setTimeoutText:]
  -[SBFDeviceBlockTimer setUserRequestedEraseEnabled:]
  -[SBFDeviceBlockTimer primaryActionButtonText]
  -[SBFDeviceBlockTimer setPrimaryActionButtonText:]
  -[SBFDeviceBlockTimer blockStatusProvider]
  -[SBFDeviceBlockTimer _setBlockStatusProvider:]
  -[SBFDeviceBlockTimer _setTimer:]


SBFTouchPassThroughWindow : UIWindow
  // class methods
  +[SBFTouchPassThroughWindow touchPassThroughRootViewControllerClass]

  // instance methods
  -[SBFTouchPassThroughWindow hitTest:withEvent:]
  -[SBFTouchPassThroughWindow initWithFrame:]
  -[SBFTouchPassThroughWindow initWithWindowScene:role:debugName:]


SBFSecureTouchPassThroughWindow : SBFTouchPassThroughWindow
  // class methods
  +[SBFSecureTouchPassThroughWindow _isSecure]


SBFCARendererImageRepresentation : NSObject <NSSecureCoding>
 @property  long long representationType
 @property  NSURL *fileURL
 @property  NSData *imageData
 @property  long long imageOrientation
 @property  IOSurface *surface

  // class methods
  +[SBFCARendererImageRepresentation supportsSecureCoding]
  +[SBFCARendererImageRepresentation representationWithImage:]
  +[SBFCARendererImageRepresentation representationWithFileURL:imageOrientation:]
  +[SBFCARendererImageRepresentation representationWithImageData:imageOrientation:]
  +[SBFCARendererImageRepresentation representationWithIOSurface:imageOrientation:]

  // instance methods
  -[SBFCARendererImageRepresentation imageOrientation]
  -[SBFCARendererImageRepresentation fileURL]
  -[SBFCARendererImageRepresentation encodeWithCoder:]
  -[SBFCARendererImageRepresentation .cxx_destruct]
  -[SBFCARendererImageRepresentation surface]
  -[SBFCARendererImageRepresentation imageData]
  -[SBFCARendererImageRepresentation initWithCoder:]
  -[SBFCARendererImageRepresentation createCGImageReturningScale:]
  -[SBFCARendererImageRepresentation representationType]


SBFMouseButtonDownGestureRecognizer : UIGestureRecognizer
  // instance methods
  -[SBFMouseButtonDownGestureRecognizer _succesfullyRecognizeFromEvent:]
  -[SBFMouseButtonDownGestureRecognizer _isMouseButtonClickEvent:]
  -[SBFMouseButtonDownGestureRecognizer touchesBegan:withEvent:]


SBFLockScreenDateViewController : UIViewController <PTSettingsKeyObserver>
 @property  double backgroundAlpha
 @property  UIViewController *inlineComplicationViewController
 @property  UIViewController *complicationContainerViewController
 @property  BOOL screenOff
 @property  BOOL alternateDateEnabled
 @property  BOOL subtitleHidden
 @property  BOOL shouldApplyVibrancyToComplications
 @property  BOOL restrictsVibrancy
 @property  _UILegibilitySettings *legibilitySettings
 @property  <SBFDateProviding> *dateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFLockScreenDateViewController _updateState]
  -[SBFLockScreenDateViewController isSubtitleHidden]
  -[SBFLockScreenDateViewController shouldApplyVibrancyToComplications]
  -[SBFLockScreenDateViewController setComplicationContainerViewController:]
  -[SBFLockScreenDateViewController dateProvider]
  -[SBFLockScreenDateViewController setCustomSubtitleView:]
  -[SBFLockScreenDateViewController setScreenOff:]
  -[SBFLockScreenDateViewController dateView]
  -[SBFLockScreenDateViewController isAlternateDateEnabled]
  -[SBFLockScreenDateViewController setTimeAlpha:subtitleAlpha:]
  -[SBFLockScreenDateViewController setRestrictsVibrancy:]
  -[SBFLockScreenDateViewController _canShowWhileLocked]
  -[SBFLockScreenDateViewController _handleTimeZoneChange]
  -[SBFLockScreenDateViewController inlineComplicationViewController]
  -[SBFLockScreenDateViewController setAlternateDateEnabled:]
  -[SBFLockScreenDateViewController settings:changedValueForKey:]
  -[SBFLockScreenDateViewController setCustomSubtitle:]
  -[SBFLockScreenDateViewController setSubtitleHidden:]
  -[SBFLockScreenDateViewController _updateWithFrameSpecifier:]
  -[SBFLockScreenDateViewController screenOff]
  -[SBFLockScreenDateViewController _addObservers]
  -[SBFLockScreenDateViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[SBFLockScreenDateViewController restrictsVibrancy]
  -[SBFLockScreenDateViewController _timelinesForDateInterval:]
  -[SBFLockScreenDateViewController updateTimerWithText:]
  -[SBFLockScreenDateViewController setShouldApplyVibrancyToComplications:]
  -[SBFLockScreenDateViewController setBackgroundAlpha:]
  -[SBFLockScreenDateViewController complicationContainerViewController]
  -[SBFLockScreenDateViewController setDateProvider:]
  -[SBFLockScreenDateViewController initWithNibName:bundle:]
  -[SBFLockScreenDateViewController dealloc]
  -[SBFLockScreenDateViewController .cxx_destruct]
  -[SBFLockScreenDateViewController viewWillAppear:]
  -[SBFLockScreenDateViewController loadView]
  -[SBFLockScreenDateViewController _startUpdateTimer]
  -[SBFLockScreenDateViewController setInlineComplicationViewController:]
  -[SBFLockScreenDateViewController backgroundAlpha]
  -[SBFLockScreenDateViewController dateViewIfExists]
  -[SBFLockScreenDateViewController setLegibilitySettings:]
  -[SBFLockScreenDateViewController setView:]
  -[SBFLockScreenDateViewController _updateView]
  -[SBFLockScreenDateViewController viewDidDisappear:]
  -[SBFLockScreenDateViewController _updateLegibilityStrength]
  -[SBFLockScreenDateViewController updateTimeNow]
  -[SBFLockScreenDateViewController setCustomSubtitle:withTimeout:]
  -[SBFLockScreenDateViewController _updateAlternateCalendar]
  -[SBFLockScreenDateViewController _updateFormatIfEnabled]
  -[SBFLockScreenDateViewController _stopUpdateTimer]
  -[SBFLockScreenDateViewController legibilitySettings]
  -[SBFLockScreenDateViewController _updateFormat]
  -[SBFLockScreenDateViewController willMoveToParentViewController:]
  -[SBFLockScreenDateViewController setTimerWithText:]


SBFDeviceLockOutController : NSObject <BSDescriptionProviding, SBFThermalConditionObserver, SBFPrivateAuthenticationObserver, SBFLockOutStatusProvider>
 @property  SBFUserAuthenticationController *authenticationController
 @property  <SBFThermalBlockProvider> *thermalProvider
 @property  BOOL lockedOutCached
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFDeviceLockOutController isBlocked]
  -[SBFDeviceLockOutController _noteLockedOutStateMayHaveChanged:]
  -[SBFDeviceLockOutController descriptionWithMultilinePrefix:]
  -[SBFDeviceLockOutController descriptionBuilderWithMultilinePrefix:]
  -[SBFDeviceLockOutController _thermalProvider]
  -[SBFDeviceLockOutController dealloc]
  -[SBFDeviceLockOutController isUserRequestedEraseEnabled]
  -[SBFDeviceLockOutController .cxx_destruct]
  -[SBFDeviceLockOutController succinctDescription]
  -[SBFDeviceLockOutController _setLockedOutCached:]
  -[SBFDeviceLockOutController _authenticationController]
  -[SBFDeviceLockOutController timeIntervalUntilUnblockedSinceReferenceDate]
  -[SBFDeviceLockOutController _isLockedOutCached]
  -[SBFDeviceLockOutController _setAuthenticationController:]
  -[SBFDeviceLockOutController initWithThermalController:authenticationController:]
  -[SBFDeviceLockOutController deviceBlockStatus]
  -[SBFDeviceLockOutController isTemporarilyBlocked]
  -[SBFDeviceLockOutController thermalBlockStatusChanged:]
  -[SBFDeviceLockOutController succinctDescriptionBuilder]
  -[SBFDeviceLockOutController isLockedOut]
  -[SBFDeviceLockOutController isThermallyBlocked]
  -[SBFDeviceLockOutController temporaryBlockStatusChanged]
  -[SBFDeviceLockOutController isPermanentlyBlocked]
  -[SBFDeviceLockOutController _setThermalProvider:]
  -[SBFDeviceLockOutController _noteLockedOutReasonsMayHaveChanged]


SBFCAColorMatrixSettings : PTSettings
 @property  BOOL controlFirstThreeRowsTogether
 @property  double mx1
 @property  double mx2
 @property  double mx3
 @property  double mx4
 @property  double mx5
 @property  double m11
 @property  double m12
 @property  double m13
 @property  double m14
 @property  double m15
 @property  double m21
 @property  double m22
 @property  double m23
 @property  double m24
 @property  double m25
 @property  double m31
 @property  double m32
 @property  double m33
 @property  double m34
 @property  double m35
 @property  double m41
 @property  double m42
 @property  double m43
 @property  double m44
 @property  double m45
 @property  {CAColorMatrix=ffffffffffffffffffff} colorMatrix

  // class methods
  +[SBFCAColorMatrixSettings settingsControllerModule]
  +[SBFCAColorMatrixSettings ignoresKey:]

  // instance methods
  -[SBFCAColorMatrixSettings setDefaultValues]
  -[SBFCAColorMatrixSettings drillDownSummary]
  -[SBFCAColorMatrixSettings colorMatrix]
  -[SBFCAColorMatrixSettings setControlFirstThreeRowsTogether:]
  -[SBFCAColorMatrixSettings mx1]
  -[SBFCAColorMatrixSettings setMx1:]
  -[SBFCAColorMatrixSettings mx2]
  -[SBFCAColorMatrixSettings setMx2:]
  -[SBFCAColorMatrixSettings mx3]
  -[SBFCAColorMatrixSettings setMx3:]
  -[SBFCAColorMatrixSettings mx4]
  -[SBFCAColorMatrixSettings setMx4:]
  -[SBFCAColorMatrixSettings mx5]
  -[SBFCAColorMatrixSettings setMx5:]
  -[SBFCAColorMatrixSettings setColorMatrix:]
  -[SBFCAColorMatrixSettings m11]
  -[SBFCAColorMatrixSettings setM11:]
  -[SBFCAColorMatrixSettings m12]
  -[SBFCAColorMatrixSettings setM12:]
  -[SBFCAColorMatrixSettings m13]
  -[SBFCAColorMatrixSettings setM13:]
  -[SBFCAColorMatrixSettings m14]
  -[SBFCAColorMatrixSettings setM14:]
  -[SBFCAColorMatrixSettings m15]
  -[SBFCAColorMatrixSettings setM15:]
  -[SBFCAColorMatrixSettings m21]
  -[SBFCAColorMatrixSettings setM21:]
  -[SBFCAColorMatrixSettings m22]
  -[SBFCAColorMatrixSettings setM22:]
  -[SBFCAColorMatrixSettings m23]
  -[SBFCAColorMatrixSettings setM23:]
  -[SBFCAColorMatrixSettings m24]
  -[SBFCAColorMatrixSettings setM24:]
  -[SBFCAColorMatrixSettings m25]
  -[SBFCAColorMatrixSettings setM25:]
  -[SBFCAColorMatrixSettings m31]
  -[SBFCAColorMatrixSettings setM31:]
  -[SBFCAColorMatrixSettings m32]
  -[SBFCAColorMatrixSettings setM32:]
  -[SBFCAColorMatrixSettings m33]
  -[SBFCAColorMatrixSettings setM33:]
  -[SBFCAColorMatrixSettings m34]
  -[SBFCAColorMatrixSettings setM34:]
  -[SBFCAColorMatrixSettings m35]
  -[SBFCAColorMatrixSettings setM35:]
  -[SBFCAColorMatrixSettings m41]
  -[SBFCAColorMatrixSettings setM41:]
  -[SBFCAColorMatrixSettings m42]
  -[SBFCAColorMatrixSettings setM42:]
  -[SBFCAColorMatrixSettings m43]
  -[SBFCAColorMatrixSettings setM43:]
  -[SBFCAColorMatrixSettings m44]
  -[SBFCAColorMatrixSettings setM44:]
  -[SBFCAColorMatrixSettings m45]
  -[SBFCAColorMatrixSettings setM45:]
  -[SBFCAColorMatrixSettings controlFirstThreeRowsTogether]


SBFShamMobileKeyBag : NSObject
  // class methods
  +[SBFShamMobileKeyBag shamKeyBagWithRecoveryRequired:correctPasscode:]
  +[SBFShamMobileKeyBag shamKeyBagWithRecoveryRequired:recoveryPossible:timeScaleFactor:correctPasscode:]

  // instance methods
  -[SBFShamMobileKeyBag state]
  -[SBFShamMobileKeyBag .cxx_destruct]
  -[SBFShamMobileKeyBag extendedState]
  -[SBFShamMobileKeyBag beginRecovery:error:]
  -[SBFShamMobileKeyBag lock]
  -[SBFShamMobileKeyBag waitForUnlockWithTimeout:]
  -[SBFShamMobileKeyBag initWithRecoveryRequired:correctPasscode:]
  -[SBFShamMobileKeyBag initWithRecoveryRequired:recoveryPossible:timeScaleFactor:correctPasscode:]
  -[SBFShamMobileKeyBag createStashBag:skipSEKeepUserDataOperation:completion:]
  -[SBFShamMobileKeyBag createStashBag:skipSEKeepUserDataOperation:completion:completionQueue:]
  -[SBFShamMobileKeyBag _queue_initializeSecretChangeMachine:]
  -[SBFShamMobileKeyBag _queue_stepSecretChangeMachine]
  -[SBFShamMobileKeyBag _simplifiedLockStateForLockState:]


SBDemoDefaults : SBAbstractSpringBoardDefaultDomain
 @property  BOOL storeDemoApplicationLockEnabled

  // instance methods
  -[SBDemoDefaults _bindAndRegisterDefaults]


SBFUserAuthenticationModelJournaledDefaults : NSObject <SBFUserAuthenticationModel>
 @property  <SBFUserAuthenticationModelDelegate> *delegate
 @property  BOOL temporarilyBlocked
 @property  BOOL permanentlyBlocked
 @property  BOOL userRequestedEraseEnabled
 @property  double timeUntilUnblockedSinceReferenceDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFUserAuthenticationModelJournaledDefaults _journaledDefaultsAndTypes]

  // instance methods
  -[SBFUserAuthenticationModelJournaledDefaults notePasscodeUnlockSucceeded]
  -[SBFUserAuthenticationModelJournaledDefaults clearBlockedState]
  -[SBFUserAuthenticationModelJournaledDefaults synchronize]
  -[SBFUserAuthenticationModelJournaledDefaults setDelegate:]
  -[SBFUserAuthenticationModelJournaledDefaults delegate]
  -[SBFUserAuthenticationModelJournaledDefaults _isDeviceWipePreferenceEnabled]
  -[SBFUserAuthenticationModelJournaledDefaults isUserRequestedEraseEnabled]
  -[SBFUserAuthenticationModelJournaledDefaults timeUntilUnblockedSinceReferenceDate]
  -[SBFUserAuthenticationModelJournaledDefaults .cxx_destruct]
  -[SBFUserAuthenticationModelJournaledDefaults performPasswordTest:]
  -[SBFUserAuthenticationModelJournaledDefaults notePasscodeUnlockFailedWithError:]
  -[SBFUserAuthenticationModelJournaledDefaults notePasscodeEntryCancelled]
  -[SBFUserAuthenticationModelJournaledDefaults isTemporarilyBlocked]
  -[SBFUserAuthenticationModelJournaledDefaults isPermanentlyBlocked]
  -[SBFUserAuthenticationModelJournaledDefaults notePasscodeEntryBegan]
  -[SBFUserAuthenticationModelJournaledDefaults init]
  -[SBFUserAuthenticationModelJournaledDefaults _initWithJournalPath:securityDefaults:profileConnection:]
  -[SBFUserAuthenticationModelJournaledDefaults _evaluatePendingWipe]
  -[SBFUserAuthenticationModelJournaledDefaults _persistentStateQueue_beginSpeculativeFailureCharge]
  -[SBFUserAuthenticationModelJournaledDefaults _persistentStateQueue_cancelSpeculativeFailureCharge]
  -[SBFUserAuthenticationModelJournaledDefaults _persistentStateQueue_unlockSucceeded]
  -[SBFUserAuthenticationModelJournaledDefaults _persistentStateQueue_unlockFailedWithError:]
  -[SBFUserAuthenticationModelJournaledDefaults _persistentStateQueue_loadLockState]
  -[SBFUserAuthenticationModelJournaledDefaults _persistentStateQueue_evaluatePendingWipe]
  -[SBFUserAuthenticationModelJournaledDefaults _persistentStateQueue_clearBlockedState]
  -[SBFUserAuthenticationModelJournaledDefaults test_reloadState]
  -[SBFUserAuthenticationModelJournaledDefaults updateLockControllerDefaultsWithBlock:journaled:]
  -[SBFUserAuthenticationModelJournaledDefaults _copyLockControllerDefaults]
  -[SBFUserAuthenticationModelJournaledDefaults _updateLockControllerDefaultsJournal]
  -[SBFUserAuthenticationModelJournaledDefaults _loadLockControllerDefaults:]
  -[SBFUserAuthenticationModelJournaledDefaults _loadLockControllerDefaultsJournalIfNecessary]


SBNotificationDefaults : SBAbstractSpringBoardDefaultDomain
 @property  NSArray *displayIDsWithBadgingEnabled
 @property  BOOL alwaysAllowDefaultAction
 @property  BOOL alwaysAllowLongLookGesture
 @property  BOOL dontSuppressForPrivacyWhenUnlocked
 @property  BOOL shouldTestBannerPlayTextTone
 @property  BOOL alwaysSpeakNotifications
 @property  NSArray *legacyAlarmList

  // class methods
  +[SBNotificationDefaults standardDefaults]

  // instance methods
  -[SBNotificationDefaults _bindAndRegisterDefaults]


_UILegibilitySettings(SpringBoard)
	// instance methods
	-[_UILegibilitySettings(SpringBoard) descriptionWithMultilinePrefix:]
	-[_UILegibilitySettings(SpringBoard) descriptionBuilderWithMultilinePrefix:]
	-[_UILegibilitySettings(SpringBoard) succinctDescription]
	-[_UILegibilitySettings(SpringBoard) succinctDescriptionBuilder]
	-[_UILegibilitySettings(SpringBoard) sb_description]
	-[_UILegibilitySettings(SpringBoard) sb_styleString]
	-[_UILegibilitySettings(SpringBoard) sb_isEqualToLegibilitySettings:]
	-[_UILegibilitySettings(SpringBoard) sb_copy]

UIStatusBarManager(SpringBoardFoundation)
	// instance methods
	-[UIStatusBarManager(SpringBoardFoundation) sbf_removeObserver:]
	-[UIStatusBarManager(SpringBoardFoundation) sbf_addObserver:]

NSFileWrapper(SBFFileSizeCalculation)
	// instance methods
	-[NSFileWrapper(SBFFileSizeCalculation) sb_fileSize]

(SBFFileCache)
	// class methods
	+[(SBFFileCache) sb_emojiWithoutVS16Set]

	// instance methods
	-[(SBFFileCache) fileCacheStableDataRepresentation]
	-[(SBFFileCache) sb_isEntirelyCharactersInSet:]
	-[(SBFFileCache) _isEntirelyCharactersInScript:]
	-[(SBFFileCache) _isEntirelyCommon]
	-[(SBFFileCache) _adjustedFontForScripts:forFont:]
	-[(SBFFileCache) _adjustedFontForScripts:forFont:withPointAdjustment:]
	-[(SBFFileCache) _adjustedFontForScripts:forFont:ignoringContent:]
	-[(SBFFileCache) _isInScript:useLocaleOnly:]
	-[(SBFFileCache) _adjustedFontForScripts:forFont:withPointAdjustment:ignoringContent:]
	-[(SBFFileCache) sb_containsEmoji]

(SBFFileCache)
	// instance methods
	-[(SBFFileCache) fileCacheStableDataRepresentation]

UIDevice(SpringBoardFoundation)
	// instance methods
	-[UIDevice(SpringBoardFoundation) _deviceInfoForKey:]
	-[UIDevice(SpringBoardFoundation) sbf_homeGrabberGraphicsQuality]
	-[UIDevice(SpringBoardFoundation) sbf_isLowEndForSlideOverMoveGesture]
	-[UIDevice(SpringBoardFoundation) sbf_featherBlurGraphicsQuality]
	-[UIDevice(SpringBoardFoundation) _lowQualityDevicesForFeatherBlur]
	-[UIDevice(SpringBoardFoundation) _mediumQualityDevicesForFeatherBlur]
	-[UIDevice(SpringBoardFoundation) sbf_animatedBlurRadiusGraphicsQuality]
	-[UIDevice(SpringBoardFoundation) _mediumQualityDevicesForAnimatedHomeScreenBlur]
	-[UIDevice(SpringBoardFoundation) sbf_homescreenBlurGraphicsQuality]
	-[UIDevice(SpringBoardFoundation) _lowQualityDevicesForHomeScreenBlur]
	-[UIDevice(SpringBoardFoundation) sbf_homescreenFolderBackgroundGraphicsQuality]
	-[UIDevice(SpringBoardFoundation) _currentProduct]

UIGestureRecognizer(SpringBoardFoundation)
	// instance methods
	-[UIGestureRecognizer(SpringBoardFoundation) sbf_setStylusTouchesAllowed:]

UIImage(SBFSurfaceUtilities)
	// class methods
	+[UIImage(SBFSurfaceUtilities) sbf_imageWithIOSurface:scale:orientation:]
	+[UIImage(SBFSurfaceUtilities) sbf_bytesNeededForSize:scale:withContextType:]
	+[UIImage(SBFSurfaceUtilities) sbf_imageFromContextWithSize:scale:type:pool:drawing:]
	+[UIImage(SBFSurfaceUtilities) sbf_imageFromContextWithSize:scale:type:pool:drawing:encapsulation:]
	+[UIImage(SBFSurfaceUtilities) sbf_imageFromBGRAContextWithSize:scale:colorSpace:withAlpha:pool:drawing:encapsulation:]

	// instance methods
	-[UIImage(SBFSurfaceUtilities) sbf_imageMaskedByColor:]
	-[UIImage(SBFSurfaceUtilities) sbf_cropImageWithRect:outputSize:]
	-[UIImage(SBFSurfaceUtilities) sbf_cropImageWithRect:outputSize:preservingAspectRatio:]
	-[UIImage(SBFSurfaceUtilities) sbf_cropImageWithRect:outputSize:canUseIOSurface:]
	-[UIImage(SBFSurfaceUtilities) sbf_cropImageWithRect:outputSize:preservingAspectRatio:canUseIOSurface:]
	-[UIImage(SBFSurfaceUtilities) sbf_scaleImage:]
	-[UIImage(SBFSurfaceUtilities) sbf_scaleImage:canUseIOSurface:]
	-[UIImage(SBFSurfaceUtilities) sbf_resizeImageToSize:preservingAspectRatio:]
	-[UIImage(SBFSurfaceUtilities) sbf_resizeImageToSize:]
	-[UIImage(SBFSurfaceUtilities) sbf_EXIFOrientation]
	-[UIImage(SBFSurfaceUtilities) sbf_colorSpace]
	-[UIImage(SBFSurfaceUtilities) sbf_imageByManipulatingInDeviceColorSpaceWithBlock:]
	-[UIImage(SBFSurfaceUtilities) sbf_imageUsingContextType:]
	-[UIImage(SBFSurfaceUtilities) sbf_imageByConvertingToColorSpace:type:]
	-[UIImage(SBFSurfaceUtilities) sbf_ATXSafeCGImageBackedImage]
	-[UIImage(SBFSurfaceUtilities) sbf_imageByDrawingIntoContextOfType:]
	-[UIImage(SBFSurfaceUtilities) sbf_downscaledImageByDrawingIntoContextOfType:downscaleFactor:]
	-[UIImage(SBFSurfaceUtilities) sbf_memoryMappedImageWithPool:]
	-[UIImage(SBFSurfaceUtilities) sbf_CGImageBackedImage]
	-[UIImage(SBFSurfaceUtilities) sbf_CGImageBackedImageWithMaximumBitsPerComponent:]
	-[UIImage(SBFSurfaceUtilities) sbf_CGImageBackedImageWithMaximumBitsPerComponent:skipCIF10FitsInSRGBCheck:]
	-[UIImage(SBFSurfaceUtilities) sbf_imageByTilingCenterPixel]
	-[UIImage(SBFSurfaceUtilities) sbf_imageHashData]
	-[UIImage(SBFSurfaceUtilities) sbf_resizedImageForCurrentMagnifyMode]

UIView(SBFFluidBehaviorSettings)
	// class methods
	+[UIView(SBFFluidBehaviorSettings) sb_animateWithSettings:interactive:animations:completion:]
	+[UIView(SBFFluidBehaviorSettings) sb_animateWithSettings:mode:animations:completion:]
	+[UIView(SBFFluidBehaviorSettings) sb_modifyAnimationsWithPreferredFrameRateRange:updateReason:animations:]

	// instance methods
	-[UIView(SBFFluidBehaviorSettings) sbf_setBoundsAndPositionFromFrame:]

UIWebClip(SBAdditions)
	// instance methods
	-[UIWebClip(SBAdditions) sb_iconImageFileProtectionType]
	-[UIWebClip(SBAdditions) sb_markIconImageFileProtectionTypeAsNone]

(SBFCacheInstances)
	// class methods
	+[(SBFCacheInstances) sbf_cachedDecimalNumberFormatter]

(SBHexRepresentation)
	// instance methods
	-[(SBHexRepresentation) sbf_hexadecimalEncodedString]

01 00 0b00 /System/Library/PrivateFrameworks/BacklightServices.framework/BacklightServices: BLSAlwaysOnTimeline 
01 00 0b00 /System/Library/PrivateFrameworks/BacklightServices.framework/BacklightServices: BLSAssertion 
01 00 0b00 /System/Library/PrivateFrameworks/BacklightServices.framework/BacklightServices: BLSBacklight 
01 00 0b00 /System/Library/PrivateFrameworks/BacklightServices.framework/BacklightServices: BLSRequestLiveUpdatingAttribute 
01 00 0b00 /System/Library/PrivateFrameworks/BacklightServices.framework/BacklightServices: BLSRequestUnrestrictedFramerateAttribute 
01 00 0b00 /System/Library/PrivateFrameworks/BacklightServices.framework/BacklightServices: BLSTimeoutDurationAttribute 
01 00 0b00 /System/Library/PrivateFrameworks/BacklightServices.framework/BacklightServices: BLSValidWhenBacklightInactiveAttribute 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSAbstractDefaultDomain 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSAnimationSettings 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSCanonicalOrientationMapResolver 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSDateFormatterCache 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSDescriptionBuilder 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSDispatchQueueAttributes 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSHashBuilder 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSMutableAnimationSettings 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSMutableSpringAnimationSettings 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSPlatform 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSSimpleAssertion 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSSpringAnimationSettings 
01 00 1a00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIAnimationFactory 
01 00 1a00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIMappedImageCache 
01 00 1a00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIScrollView 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABackdropLayer 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayModeCriteria 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMatchMoveAnimation 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CARenderer 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0f00 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMGestureManager 
01 00 0f00 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMMotionAlarmManager 
01 00 0400 /System/Library/Frameworks/EventKitUI.framework/EventKitUI: CalendarPreferences 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBDisplayManager 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSSceneClientIdentity 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSceneWorkspace 
01 00 1200 /System/Library/Frameworks/IOSurface.framework/IOSurface: IOSurface 
01 00 1400 /System/Library/PrivateFrameworks/IntlPreferences.framework/IntlPreferences: IntlUtility 
01 00 1500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 2700 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1300 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 0600 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTMaterialView 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileWrapper 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0700 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperConfiguration 
01 00 0700 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperConfigurationManager 
01 00 0700 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperDefaultsDomain 
01 00 0700 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperGradient 
01 00 0700 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperImage 
01 00 0700 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperOptions 
01 00 0700 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperParallaxSettings 
01 00 0700 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperView 
01 00 2900 /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection: PCPersistentTimer 
01 00 2640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTButtonRow 
01 00 2640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTChoiceRow 
01 00 2640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDomain 
01 00 2640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDrillDownRow 
01 00 2640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTEditFloatRow 
01 00 2640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTModule 
01 00 2640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTRestoreDefaultSettingsRowAction 
01 00 2640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTRow 
01 00 2640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSettings 
01 00 2640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSliderRow 
01 00 2640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSwitchRow 
01 00 1100 /System/Library/PrivateFrameworks/PrototypeToolsUI.framework/PrototypeToolsUI: PTUIRowTableViewCell 
01 00 1700 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSAnalyticsState 
01 00 1700 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutService 
01 00 1700 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSDisplayModeSettings 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIColorEffect 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboard 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UINotificationFeedbackGenerator 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringLoadedInteraction 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBar 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBarManager 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebClip 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: _UINotificationFeedbackGeneratorConfiguration 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: _UIParallaxMotionEffect 
01 00 2500 /System/Library/Frameworks/UIKit.framework/UIKit: _UISettings 
