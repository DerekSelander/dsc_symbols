|| __DATA.__objc_data _OBJC_CLASS_$_VUIEntitiesSortedByDateValueTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_VUIFeatureFlag
|| __DATA.__objc_data _OBJC_CLASS_$_VUILayeredImageContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_VUIModalPresentationConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_VUIModalPresentationNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_VUIModalPresenter
|| __DATA.__objc_data _OBJC_CLASS_$_VUIPathAnimationAction
|| __DATA.__objc_data _OBJC_CLASS_$_VUISortUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_VUIStackedImageView
|| __DATA.__objc_data _OBJC_CLASS_$_VUIURLRequestOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VUIEntitiesSortedByDateValueTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_VUIFeatureFlag
|| __DATA.__objc_data _OBJC_METACLASS_$_VUILayeredImageContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_VUIModalPresentationConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_VUIModalPresentationNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_VUIModalPresenter
|| __DATA.__objc_data _OBJC_METACLASS_$_VUIPathAnimationAction
|| __DATA.__objc_data _OBJC_METACLASS_$_VUISortUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_VUIStackedImageView
|| __DATA.__objc_data _OBJC_METACLASS_$_VUIURLRequestOperation
|| __DATA_CONST.__const _CALayerKeyBoundsSize
|| __DATA_CONST.__const _CALayerKeyShadowPath
|| __DATA_CONST.__const _VUIAccessibilityReduceMotionStatusDidChangeNotification
|| __DATA_CONST.__const _VUIAccessibilityVoiceOverStatusDidChangeNotification
|| __DATA_CONST.__const _VUIApplicationDidBecomeActiveNotification
|| __DATA_CONST.__const _VUIApplicationDidEnterBackgroundNotification
|| __DATA_CONST.__const _VUIApplicationWillEnterForegroundNotification
|| __DATA_CONST.__const _VUIApplicationWillResignActiveNotification
|| __DATA_CONST.__const _VUIApplicationWillTerminateNotification
|| __DATA_CONST.__const _VUIAssetDidWriteNotification
|| __DATA_CONST.__const _VUIAssetDidWriteNotificationAssetPathKey
|| __DATA_CONST.__const _VUIAssetDidWriteNotificationErrorKey
|| __DATA_CONST.__const _VUIDefaultsAvailabilityEndOverrideInSeconds
|| __DATA_CONST.__const _VUIDefaultsCanaryURL
|| __DATA_CONST.__const _VUIDefaultsCoWatchStartsInPlayingStateInsteadOfPaused
|| __DATA_CONST.__const _VUIDefaultsCollectionMaxCacheValueKey
|| __DATA_CONST.__const _VUIDefaultsCollectionRefreshTypeValueKey
|| __DATA_CONST.__const _VUIDefaultsDownloadExpirationOverrideInSeconds
|| __DATA_CONST.__const _VUIDefaultsEnableDebugUI
|| __DATA_CONST.__const _VUIDefaultsEnableDemoMode
|| __DATA_CONST.__const _VUIDefaultsEnableMetricsExpandedClickLogging
|| __DATA_CONST.__const _VUIDefaultsEnableMetricsExpandedLogging
|| __DATA_CONST.__const _VUIDefaultsEnableMetricsLogging
|| __DATA_CONST.__const _VUIDefaultsEnableMetricsPageRenderLogging
|| __DATA_CONST.__const _VUIDefaultsEnableRefreshEventDebug
|| __DATA_CONST.__const _VUIDefaultsForceGDPRFirstTimeFlow
|| __DATA_CONST.__const _VUIDefaultsForceGDPRWhatsNewFlow
|| __DATA_CONST.__const _VUIDefaultsPageMaxCacheValueKey
|| __DATA_CONST.__const _VUIDefaultsPageRefreshTypeValueKey
|| __DATA_CONST.__const _VUIDefaultsUTSBaseURL
|| __DATA_CONST.__const _VUIDefaultsWLKDefaultsDomain
|| __DATA_CONST.__const _VUIDurationValueTransformerName
|| __DATA_CONST.__const _VUIFeatureFlagKeyDefaultsKey
|| __DATA_CONST.__const _VUIFeatureFlagKeyDomain
|| __DATA_CONST.__const _VUIFeatureFlagKeyFeatureDescription
|| __DATA_CONST.__const _VUIFeatureFlagKeyFeatureName
|| __DATA_CONST.__const _VUIFeatureFlagKeyIOSDomain
|| __DATA_CONST.__const _VUIFeatureFlagKeyIsEnabledByDefault
|| __DATA_CONST.__const _VUIFeatureFlagKeyIsIOS
|| __DATA_CONST.__const _VUIFeatureFlagKeyIsTVOS
|| __DATA_CONST.__const _VUIFeatureFlagKeyPlatform
|| __DATA_CONST.__const _VUIFeatureFlagKeyTVOSDomain
|| __DATA_CONST.__const _VUIImageViewImageDidLoadNotification
|| __DATA_CONST.__const _VUIModalPresentationErrorDomain
|| __DATA_CONST.__const _VUIModalPresentationKeyActionStyle
|| __DATA_CONST.__const _VUIModalPresentationKeyActionStyleCancel
|| __DATA_CONST.__const _VUIModalPresentationKeyActionStyleDefault
|| __DATA_CONST.__const _VUIModalPresentationKeyActionStyleDestructive
|| __DATA_CONST.__const _VUIModalPresentationKeyAllowMenuDismissal
|| __DATA_CONST.__const _VUIModalPresentationKeyAllowsModalOverModal
|| __DATA_CONST.__const _VUIModalPresentationKeyBarButtonItem
|| __DATA_CONST.__const _VUIModalPresentationKeyNavigationBarHidden
|| __DATA_CONST.__const _VUIModalPresentationKeySourceRect
|| __DATA_CONST.__const _VUIModalPresentationKeySourceView
|| __DATA_CONST.__const _VUIModalPresentationNavigationControllerDismissedNotification
|| __DATA_CONST.__const _VUIModalPresentationTypeKey
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyActionSheet
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyAlert
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyBlurOverFullScreen
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyCurrentContext
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyCustom
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyFormSheet
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyFullScreen
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyNone
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyOverCurrentContext
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyOverFullScreen
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyPageSheet
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyPlayback
|| __DATA_CONST.__const _VUIModalPresentationTypeKeyPopover
|| __DATA_CONST.__const _VUINetworkReachabilityMonitorNetworkReachabilityDidChangeNotification
|| __DATA_CONST.__const _VUINetworkReachabilityMonitorNetworkReachabilityDidChangeUserInfoKeyNetworkReachable
|| __DATA_CONST.__const _VUIStackedImageViewImageDidUpdateNotification
|| __DATA_CONST.__const _VUIStateMachineContextKey
|| __DATA_CONST.__const _VUIStateMachineNewStateKey
|| __DATA_CONST.__const _VUIStateMachineOldStateKey
|| __DATA_CONST.__const _VUIStateMachineStateChangedNotification
|| __DATA_CONST.__const _VideosUICoreErrorDomain
|| __DATA_CONST.__const _VideosUICoreErrorHTTPStatusKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIAccessibility
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIApplicationNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIAssetLibrary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIAsynchronousOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIAsynchronousWorkToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUICollectionChange
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUICollectionChangeSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUICollectionComparator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIContentRating
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIContentRatingBadgeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUICoreUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIDebugDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIDelayOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIDurationValueTransformer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIFeatureManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIGraphicsImageRenderer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIImageDecorator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIImageFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIImageOutlineDecorator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIImageProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIImageScaleDecorator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUILayeredImageProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIMobileGestaltLookup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUINetworkReachabilityMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIRemoteImageDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIResourceImageDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIRestrictions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUITitleSortDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VUIURLImageLoader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIAccessibility
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIApplicationNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIAssetLibrary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIAsynchronousOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIAsynchronousWorkToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUICollectionChange
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUICollectionChangeSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUICollectionComparator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIContentRating
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIContentRatingBadgeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUICoreUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIDebugDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIDelayOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIDurationValueTransformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIFeatureManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIGraphicsImageRenderer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIImageDecorator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIImageFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIImageOutlineDecorator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIImageProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIImageScaleDecorator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUILayeredImageProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIMobileGestaltLookup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUINetworkReachabilityMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIRemoteImageDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIResourceImageDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIRestrictions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUITitleSortDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VUIURLImageLoader
|| __TEXT.__const _VUICornerRadiiZero
|| __TEXT.__const _VUIStackedImageControlStateFocusedIdle
|| __TEXT.__text _VUIBoolLogString
|| __TEXT.__text _VUICeilSnap
|| __TEXT.__text _VUICeilValue
|| __TEXT.__text _VUICompositeBitmapImageOfSizeForImages
|| __TEXT.__text _VUIError
|| __TEXT.__text _VUIErrorCancelled
|| __TEXT.__text _VUIErrorCancelledWithUnderlyingError
|| __TEXT.__text _VUIErrorIsCancelled
|| __TEXT.__text _VUIErrorIsErrorCode
|| __TEXT.__text _VUIErrorIsErrorDomainAndCode
|| __TEXT.__text _VUIErrorWithDomain
|| __TEXT.__text _VUIFloorSnap
|| __TEXT.__text _VUIFloorValue
|| __TEXT.__text _VUIMakeLargestSizeWithGivenSizeAndAspectRatio
|| __TEXT.__text _VUIRectMakeWithDirectionalOriginRelativeToBoundingRect
|| __TEXT.__text _VUIRectWithFlippedOriginRelativeToBoundingRect
|| __TEXT.__text _VUIRectWithFlippedOriginRelativeToBoundingRectWithCondition
|| __TEXT.__text _VUIRequireKeyedCoder
|| __TEXT.__text _VUIRequireMainThread
|| __TEXT.__text _VUIRoundValue
|| __TEXT.__text _VUISnap
|| __TEXT.__text _VUIUIViewContentModeFromVUIContentMode
|| __TEXT.__text _VUIUserInterfaceStyleFromTheme
|| __TEXT.__text _VUIViewContentModeFromUIContentMode
|| __TEXT.__text _VUIWaitForDebugger
|| __TEXT.__text _VUIWaitForDebuggerUntilDate
__ AVFoundation: _AVMakeRectWithAspectRatioInsideRect
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextGetClipBoundingBox
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetAlphaInfo
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathAddArcToPoint
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathCreateCopy
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPathRetain
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _kUTTagClassMIMEType
__ CoreServices: _kUTTypeJPEG
__ CoreServices: _kUTTypeJPEG2000
__ CoreServices: _kUTTypePNG
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCachedURLResponse
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSValueTransformer
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSSortDescriptor
__ Foundation: _OBJC_METACLASS_$_NSValueTransformer
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateThumbnailAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetType
__ ImageIO: _kCGImagePropertyOrientation
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImageSourceCreateThumbnailFromImageAlways
__ ImageIO: _kCGImageSourceCreateThumbnailWithTransform
__ ImageIO: _kCGImageSourceShouldCache
__ ImageIO: _kCGImageSourceShouldCacheImmediately
__ ImageIO: _kCGImageSourceThumbnailMaxPixelSize
__ ManagedConfiguration: _MCFeatureTVShowingUndownloadedMoviesAllowed
__ ManagedConfiguration: _MCFeatureTVShowingUndownloadedTVShowsAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAFilterMultiplyColor
__ QuartzCore: _kCAMediaTimingFunctionDefault
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIInterpolatingMotionEffect
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UIMotionEffectGroup
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UITabBarController
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIProgressiveBlurPresentationAnimator
__ UIKit: _OBJC_CLASS_$__UIProgressiveBlurPresentationController
__ UIKit: _OBJC_CLASS_$__UIStackedImageConfiguration
__ UIKit: _OBJC_CLASS_$__UIStackedImageContainerLayer
__ UIKit: _OBJC_CLASS_$__UIStackedImageContainerView
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$__UIStackedImageContainerView
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsVoiceOverRunning
__ UIKit: _UIAccessibilityReduceMotionStatusDidChangeNotification
__ UIKit: _UIAccessibilityVoiceOverStatusDidChangeNotification
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIApplicationWillTerminateNotification
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIContentSizeCategoryUnspecified
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIRectFill
__ UIKit: _UIRectFillUsingBlendMode
__ iTunesCloud: _OBJC_CLASS_$_ICEnvironmentMonitor
__ libAccessibility.dylib: __AXSHighContrastFocusIndicatorsEnabled
__ libAccessibility.dylib: _kAXSHighContrastFocusIndicatorsEnabledNotification
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fts_close
__ libSystem.B.dylib: _fts_open
__ libSystem.B.dylib: _fts_read
__ libSystem.B.dylib: _fts_set
__ libSystem.B.dylib: _lstat
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
VUIDebugDefaults : NSObject
 @property  BOOL debugUIEnabled
 @property  BOOL metricsLoggingEnabled
 @property  BOOL metricsExpandedLoggingEnabled
 @property  BOOL metricsLogLocationAndImpressions
 @property  BOOL metricsPageRenderLoggingEnabled
 @property  BOOL enableDemoMode
 @property  BOOL gdprFirstTimeFlowEnabled
 @property  BOOL gdprWhatsNewFlowEnabled
 @property  BOOL debugRefreshEventLogEnabled

  // class methods
  +[VUIDebugDefaults sharedInstance]

  // instance methods
  -[VUIDebugDefaults init]
  -[VUIDebugDefaults gdprWhatsNewFlowEnabled]
  -[VUIDebugDefaults gdprFirstTimeFlowEnabled]
  -[VUIDebugDefaults enableDemoMode]
  -[VUIDebugDefaults metricsPageRenderLoggingEnabled]
  -[VUIDebugDefaults metricsExpandedLoggingEnabled]
  -[VUIDebugDefaults metricsLoggingEnabled]
  -[VUIDebugDefaults debugUIEnabled]
  -[VUIDebugDefaults setDebugUIEnabled:]
  -[VUIDebugDefaults setMetricsLoggingEnabled:]
  -[VUIDebugDefaults setMetricsExpandedLoggingEnabled:]
  -[VUIDebugDefaults metricsLogLocationAndImpressions]
  -[VUIDebugDefaults setMetricsLogLocationAndImpressions:]
  -[VUIDebugDefaults setMetricsPageRenderLoggingEnabled:]
  -[VUIDebugDefaults setEnableDemoMode:]
  -[VUIDebugDefaults setGdprFirstTimeFlowEnabled:]
  -[VUIDebugDefaults setGdprWhatsNewFlowEnabled:]
  -[VUIDebugDefaults debugRefreshEventLogEnabled]
  -[VUIDebugDefaults setDebugRefreshEventLogEnabled:]


VUIAccessibility : NSObject
  // class methods
  +[VUIAccessibility sharedInstance]
  +[VUIAccessibility isFeatureEnabled:]
  +[VUIAccessibility contentSizeCategoryIsAccessibility:]
  +[VUIAccessibility isAXLargeEnabled:]
  +[VUIAccessibility isAXSmallEnabled:]

  // instance methods
  -[VUIAccessibility init]
  -[VUIAccessibility dealloc]
  -[VUIAccessibility _addObserverToAccessibilityNotifications]
  -[VUIAccessibility _didChangeAccessibilityVoiceOverStatus]
  -[VUIAccessibility _didChangeAccessibilityReduceMotionStatus]


VUIContentRatingSystemUtilities : NSObject
  // class methods
  +[VUIContentRatingSystemUtilities _isRatingSystemForMovies:]
  +[VUIContentRatingSystemUtilities _isRatingSystemForTV:]
  +[VUIContentRatingSystemUtilities stringForRatingSystem:]
  +[VUIContentRatingSystemUtilities _isRatingSystemForMusic:]
  +[VUIContentRatingSystemUtilities ratingSystemForString:]
  +[VUIContentRatingSystemUtilities ratingSystemKindForRatingSystem:]
  +[VUIContentRatingSystemUtilities _ratingSystemLookUpDictionary]
  +[VUIContentRatingSystemUtilities _cleanedRatingSystem:]
  +[VUIContentRatingSystemUtilities _ratingSystemStringLookUpDictionary]


VUIAppIconImageLoader : NSObject <VUIImageLoader>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VUIAppIconImageLoader sharedInstance]

  // instance methods
  -[VUIAppIconImageLoader .cxx_destruct]
  -[VUIAppIconImageLoader init]
  -[VUIAppIconImageLoader URLForObject:]
  -[VUIAppIconImageLoader imageKeyForObject:]
  -[VUIAppIconImageLoader cancelLoad:]
  -[VUIAppIconImageLoader loadImageForObject:scaleToSize:cropToFit:imageDirection:requestLoader:completionHandler:]
  -[VUIAppIconImageLoader _createApplicationIconForIdentifier:]


VUIImageView : UIControl
 @property  @? completion
 @property  BOOL imageLoaded
 @property  UIImage *image
 @property  UIImage *placeholderImage
 @property  UIColor *placeholderColor
 @property  BOOL shouldScaleToSize
 @property  double cornerRadius
 @property  BOOL imageContainsShadow
 @property  BOOL animatesShadowChanges
 @property  {_VUICornerRadii=dddd} shadowRadii
 @property  @? shadowPathUpdater
 @property  BOOL imageContainsCornerRadius
 @property  UIColor *borderColor
 @property  double borderWidth
 @property  VUIImageProxy *imageProxy
 @property  @? dynamicProxyProvider
 @property  UIColor *_tintColor
 @property  UIColor *_focusedColor
 @property  BOOL _enableEdgeAntialiasingOnSelected
 @property  UIImageSymbolConfiguration *preferredSymbolConfiguration
 @property  BOOL symbolImage
 @property  BOOL resourceImage
 @property  {CGSize=dd} resourceOrSymbolSize

  // instance methods
  -[VUIImageView setHighlighted:]
  -[VUIImageView _imageView]
  -[VUIImageView placeholderImage]
  -[VUIImageView setPlaceholderColor:]
  -[VUIImageView placeholderColor]
  -[VUIImageView actionForLayer:forKey:]
  -[VUIImageView setBorderWidth:]
  -[VUIImageView setPlaceholderImage:]
  -[VUIImageView completion]
  -[VUIImageView borderWidth]
  -[VUIImageView setCompletion:]
  -[VUIImageView borderColor]
  -[VUIImageView _updateCornerRadius]
  -[VUIImageView traitCollectionDidChange:]
  -[VUIImageView setBorderColor:]
  -[VUIImageView _setImage:]
  -[VUIImageView _cornerRadius]
  -[VUIImageView backgroundColor]
  -[VUIImageView willMoveToWindow:]
  -[VUIImageView image]
  -[VUIImageView _setContinuousCornerRadius:]
  -[VUIImageView .cxx_destruct]
  -[VUIImageView preferredSymbolConfiguration]
  -[VUIImageView _updateImageView]
  -[VUIImageView setFrame:]
  -[VUIImageView layoutSubviews]
  -[VUIImageView _updateTintColor]
  -[VUIImageView _tintColor]
  -[VUIImageView _continuousCornerRadius]
  -[VUIImageView _setCornerRadius:]
  -[VUIImageView isSymbolImage]
  -[VUIImageView setCornerRadius:]
  -[VUIImageView sizeThatFits:]
  -[VUIImageView _setContentRectInPixels:forContentSize:]
  -[VUIImageView isImageLoaded]
  -[VUIImageView setBackgroundColor:]
  -[VUIImageView _setTintColor:]
  -[VUIImageView initWithFrame:]
  -[VUIImageView cornerRadius]
  -[VUIImageView _resetContentRect]
  -[VUIImageView setImage:]
  -[VUIImageView dealloc]
  -[VUIImageView intrinsicContentSize]
  -[VUIImageView setSymbolImage:]
  -[VUIImageView vui_layoutSubviews:computationOnly:]
  -[VUIImageView _setFocusedColor:]
  -[VUIImageView setImageContainsCornerRadius:]
  -[VUIImageView setImageProxy:]
  -[VUIImageView vui_setHighlighted:]
  -[VUIImageView setVuiBackgroundColor:]
  -[VUIImageView vui_willMoveToWindow:]
  -[VUIImageView vui_setSelected:animated:withAnimationCoordinator:]
  -[VUIImageView vuiBackgroundColor]
  -[VUIImageView imageProxy]
  -[VUIImageView vui_traitCollectionDidChange:]
  -[VUIImageView setVuiContentMode:]
  -[VUIImageView vuiIsUserInteractionEnabled]
  -[VUIImageView setVuiUserInteractionEnabled:]
  -[VUIImageView setImageProxy:completion:]
  -[VUIImageView setShouldScaleToSize:]
  -[VUIImageView setImageProxy:clearingExisting:completion:]
  -[VUIImageView vuiContentMode]
  -[VUIImageView resourceOrSymbolSize]
  -[VUIImageView setResourceOrSymbolSize:]
  -[VUIImageView setDynamicProxyProvider:]
  -[VUIImageView _loadImage]
  -[VUIImageView setAnimatesShadowChanges:]
  -[VUIImageView _imageProxyWithSize:]
  -[VUIImageView setImageLoaded:]
  -[VUIImageView _enableEdgeAntialiasingOnSelected]
  -[VUIImageView _updateFlatImageWithImage:]
  -[VUIImageView _reloadImageForLayoutDirectionChange]
  -[VUIImageView _setPreferredSymbolConfiguration:]
  -[VUIImageView imageContainsCornerRadius]
  -[VUIImageView dynamicProxyProvider]
  -[VUIImageView _focusedColor]
  -[VUIImageView _setEnableEdgeAntialiasingOnSelected:]
  -[VUIImageView isResourceImage]
  -[VUIImageView shouldScaleToSize]
  -[VUIImageView shadowPathUpdater]
  -[VUIImageView imageContainsShadow]
  -[VUIImageView setImageContainsShadow:]
  -[VUIImageView animatesShadowChanges]
  -[VUIImageView shadowRadii]
  -[VUIImageView setShadowRadii:]
  -[VUIImageView setShadowPathUpdater:]
  -[VUIImageView setResourceImage:]


VUIFeatureManager : NSObject
 @property  NSDictionary *features

  // class methods
  +[VUIFeatureManager sharedInstance]

  // instance methods
  -[VUIFeatureManager features]
  -[VUIFeatureManager isFeatureEnabled:]
  -[VUIFeatureManager .cxx_destruct]
  -[VUIFeatureManager init]
  -[VUIFeatureManager setFeatures:]
  -[VUIFeatureManager setFeatureValue:forFeature:]
  -[VUIFeatureManager osFeatureFlagsJSON]
  -[VUIFeatureManager _allFeatures]
  -[VUIFeatureManager availableFeatures]


VUIFeatureFlag : NSObject
 @property  NSString *defaultsDomain
 @property  NSString *isEnabledByDefaultKey
 @property  NSString *featureName
 @property  NSString *featureDescription
 @property  NSString *defaultsKey
 @property  BOOL isAvailableForOS
 @property  BOOL isEnabledByDefault
 @property  BOOL enabled

  // instance methods
  -[VUIFeatureFlag defaultsDomain]
  -[VUIFeatureFlag .cxx_destruct]
  -[VUIFeatureFlag enabled]
  -[VUIFeatureFlag isEnabledByDefault]
  -[VUIFeatureFlag featureName]
  -[VUIFeatureFlag setEnabled:]
  -[VUIFeatureFlag featureDescription]
  -[VUIFeatureFlag defaultsKey]
  -[VUIFeatureFlag initWithFeatureDict:]
  -[VUIFeatureFlag isAvailableForOS]
  -[VUIFeatureFlag isEnabledByDefaultKey]
  -[VUIFeatureFlag _enabledFromDefaults]
  -[VUIFeatureFlag setIsEnabledByDefaultKey:]


VUINamedLayerImage : NSObject <UINamedLayerImage>
 @property  NSObject<UINamedLayerImage> *namedLayerImage
 @property  int blendMode
 @property  UIImage *decodedImage
 @property  NSString *name
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  double opacity
 @property  BOOL fixedFrame
 @property  <UINamedLayerContentProvider> *contentProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VUINamedLayerImage namedLayerImageFromNamedLayerImage:]
  +[VUINamedLayerImage decodedNamedLayerImageFromNamedLayerImage:]

  // instance methods
  -[VUINamedLayerImage name]
  -[VUINamedLayerImage opacity]
  -[VUINamedLayerImage fixedFrame]
  -[VUINamedLayerImage .cxx_destruct]
  -[VUINamedLayerImage imageObj]
  -[VUINamedLayerImage init]
  -[VUINamedLayerImage setBlendMode:]
  -[VUINamedLayerImage frame]
  -[VUINamedLayerImage _init]
  -[VUINamedLayerImage blendMode]
  -[VUINamedLayerImage setNamedLayerImage:]
  -[VUINamedLayerImage setDecodedImage:]
  -[VUINamedLayerImage namedLayerImage]
  -[VUINamedLayerImage decodedImage]


VUIModalPresenter : NSObject
 @property  NSArray *presentedViewControllers

  // class methods
  +[VUIModalPresenter sharedInstance]

  // instance methods
  -[VUIModalPresenter animationControllerForPresentedController:presentingController:sourceController:]
  -[VUIModalPresenter animationControllerForDismissedController:]
  -[VUIModalPresenter presentedViewControllers]
  -[VUIModalPresenter .cxx_destruct]
  -[VUIModalPresenter init]
  -[VUIModalPresenter presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]
  -[VUIModalPresenter dismissViewController:animated:completion:]
  -[VUIModalPresenter _presentationControllers]
  -[VUIModalPresenter presentViewController:fromViewController:options:completion:]


VUIModalPresentationConfiguration : NSObject
 @property  long long type
 @property  BOOL allowsModalOverModal
 @property  BOOL menuDismissable
 @property  BOOL navigationBarHidden
 @property  BOOL animated
 @property  UIBarButtonItem *popOverSourceBarButtonItem
 @property  UIView *popOverSourceView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} popOverSourceRect
 @property  unsigned long popOverArrowDirection
 @property  NSArray *alertActions

  // class methods
  +[VUIModalPresentationConfiguration presentationTypeKeyMap]

  // instance methods
  -[VUIModalPresentationConfiguration setAnimated:]
  -[VUIModalPresentationConfiguration isAnimated]
  -[VUIModalPresentationConfiguration setType:]
  -[VUIModalPresentationConfiguration .cxx_destruct]
  -[VUIModalPresentationConfiguration initWithOptions:]
  -[VUIModalPresentationConfiguration init]
  -[VUIModalPresentationConfiguration type]
  -[VUIModalPresentationConfiguration isNavigationBarHidden]
  -[VUIModalPresentationConfiguration setNavigationBarHidden:]
  -[VUIModalPresentationConfiguration alertActions]
  -[VUIModalPresentationConfiguration popOverArrowDirection]
  -[VUIModalPresentationConfiguration setPopOverArrowDirection:]
  -[VUIModalPresentationConfiguration popOverSourceBarButtonItem]
  -[VUIModalPresentationConfiguration setPopOverSourceBarButtonItem:]
  -[VUIModalPresentationConfiguration setAlertActions:]
  -[VUIModalPresentationConfiguration _applyAlertActionsForController:]
  -[VUIModalPresentationConfiguration allowsModalOverModal]
  -[VUIModalPresentationConfiguration setAllowsModalOverModal:]
  -[VUIModalPresentationConfiguration popOverSourceRect]
  -[VUIModalPresentationConfiguration popOverSourceView]
  -[VUIModalPresentationConfiguration setPopOverSourceView:]
  -[VUIModalPresentationConfiguration isMenuDismissable]
  -[VUIModalPresentationConfiguration setMenuDismissable:]
  -[VUIModalPresentationConfiguration setPopOverSourceRect:]


VUIModalPresentationNavigationController : UINavigationController
 @property  VUIModalPresentationConfiguration *configuration
 @property  NSHashTable *presentedViewControllers
 @property  UIAlertController *containingAlertController

  // instance methods
  -[VUIModalPresentationNavigationController configuration]
  -[VUIModalPresentationNavigationController presentedViewControllers]
  -[VUIModalPresentationNavigationController .cxx_destruct]
  -[VUIModalPresentationNavigationController _updateConfiguration]
  -[VUIModalPresentationNavigationController pushViewController:animated:]
  -[VUIModalPresentationNavigationController initWithConfiguration:]
  -[VUIModalPresentationNavigationController popViewControllerAnimated:]
  -[VUIModalPresentationNavigationController didShowViewController:animated:]
  -[VUIModalPresentationNavigationController setConfiguration:]
  -[VUIModalPresentationNavigationController popViewControllerAnimated:completion:]
  -[VUIModalPresentationNavigationController updatePreferredFocusedViewStateForFocus:]
  -[VUIModalPresentationNavigationController containingAlertController]
  -[VUIModalPresentationNavigationController pushViewController:animated:completion:]
  -[VUIModalPresentationNavigationController _dismissForLastViewController:]
  -[VUIModalPresentationNavigationController setContainingAlertController:]


VUICoreUtilities : NSObject
  // class methods
  +[VUICoreUtilities URLForResource:]
  +[VUICoreUtilities uiContentSizeCategoryFor:]
  +[VUICoreUtilities scaleContentSizeValue:forTraitCollection:]
  +[VUICoreUtilities radiiFromRadius:]
  +[VUICoreUtilities vuiContentSizeCategoryFor:]
  +[VUICoreUtilities scaleContentSizeValue:forTraitCollection:maximumContentSizeCategory:]
  +[VUICoreUtilities radiusFromCornerRadii:]
  +[VUICoreUtilities imageForResource:accessibilityDescription:]
  +[VUICoreUtilities randomColor]
  +[VUICoreUtilities VideosUIBundle]
  +[VUICoreUtilities vuiColor:getRed:green:blue:alpha:]
  +[VUICoreUtilities image:didCompleteLoadingForCache:requestRecord:]
  +[VUICoreUtilities canHandleDecodingOnRenderThread]
  +[VUICoreUtilities _URLForResource:inBundle:]
  +[VUICoreUtilities runningAnInternalBuild]
  +[VUICoreUtilities shadowPathWithCornerRadii:andScaledSize:]
  +[VUICoreUtilities centerRect:inRect:]
  +[VUICoreUtilities TVUIKitBundle]
  +[VUICoreUtilities focusedSizeIncreaseForSize:upscaleFactor:]
  +[VUICoreUtilities radiiIsZero:]
  +[VUICoreUtilities createPathForRadii:inRect:isContinuous:]
  +[VUICoreUtilities _getImageFromURLorBundle:]
  +[VUICoreUtilities VideosUICoreBundle]
  +[VUICoreUtilities _imageForResource:]
  +[VUICoreUtilities _vuiCoreResourceMap]
  +[VUICoreUtilities mobileGestaltStringForKey:]
  +[VUICoreUtilities vuiUserInterfaceStyleForInterfaceStyle:]
  +[VUICoreUtilities defaultPlaceholderImageForUserInterfaceStyle:]


VUIAsynchronousOperation : NSOperation
  // instance methods
  -[VUIAsynchronousOperation isAsynchronous]
  -[VUIAsynchronousOperation executionDidBegin]
  -[VUIAsynchronousOperation isFinished]
  -[VUIAsynchronousOperation isExecuting]
  -[VUIAsynchronousOperation start]
  -[VUIAsynchronousOperation finishExecutionIfPossible]


VUIContentRatingTextBadgeView : UIView
 @property  UILayoutGuide *contentGuide
 @property  NSAttributedString *contentRatingAttributedText
 @property  NSString *contentRatingText

  // class methods
  +[VUIContentRatingTextBadgeView _paddingEdgeInsets]
  +[VUIContentRatingTextBadgeView _badgeImageWithAttributedRatingText:andColor:]
  +[VUIContentRatingTextBadgeView _attributedRatingTextForText:color:]
  +[VUIContentRatingTextBadgeView _badgeSizeForAttributedRatingText:]
  +[VUIContentRatingTextBadgeView _drawBadgeWithAttributedRatingText:inContext:rect:color:]

  // instance methods
  -[VUIContentRatingTextBadgeView .cxx_destruct]
  -[VUIContentRatingTextBadgeView contentGuide]
  -[VUIContentRatingTextBadgeView tintColorDidChange]
  -[VUIContentRatingTextBadgeView sizeThatFits:]
  -[VUIContentRatingTextBadgeView lastBaselineAnchor]
  -[VUIContentRatingTextBadgeView initWithFrame:]
  -[VUIContentRatingTextBadgeView firstBaselineAnchor]
  -[VUIContentRatingTextBadgeView _intrinsicContentSize]
  -[VUIContentRatingTextBadgeView drawRect:]
  -[VUIContentRatingTextBadgeView intrinsicContentSize]
  -[VUIContentRatingTextBadgeView contentRatingText]
  -[VUIContentRatingTextBadgeView setContentRatingText:]
  -[VUIContentRatingTextBadgeView _updateContentRatingAttributedText:]
  -[VUIContentRatingTextBadgeView contentRatingAttributedText]
  -[VUIContentRatingTextBadgeView setContentRatingAttributedText:]
  -[VUIContentRatingTextBadgeView initWithBaselineOffsetFromBottom:]
  -[VUIContentRatingTextBadgeView setContentGuide:]


VUIDeflatableNamedLayerImage : VUINamedLayerStack
  // instance methods
  -[VUIDeflatableNamedLayerImage _inflateLayerStack]
  -[VUIDeflatableNamedLayerImage _deflateLayerStack]


VUINamedLayerStack : NSObject <UINamedLayerStack>
 @property  <UINamedLayerStack> *layerStack
 @property  UIImage *cornerRadiusFlatImage
 @property  UIImage *originalImage
 @property  NSArray *replacementLayers
 @property  NSString *name
 @property  NSArray *layers
 @property  {CGSize=dd} size
 @property  double scale
 @property  ^{CGImage=} flattenedImage
 @property  id radiosityImage
 @property  {CGSize=dd} radiosityImageScale
 @property  BOOL flatImageContainsCornerRadius
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VUINamedLayerStack namedLayerStackWithImage:]
  +[VUINamedLayerStack decodedNamedLayerStackWithImage:size:cornerRadius:]

  // instance methods
  -[VUINamedLayerStack layers]
  -[VUINamedLayerStack name]
  -[VUINamedLayerStack flatImageContainsCornerRadius]
  -[VUINamedLayerStack .cxx_destruct]
  -[VUINamedLayerStack layerStack]
  -[VUINamedLayerStack radiosityImage]
  -[VUINamedLayerStack radiosityImageScale]
  -[VUINamedLayerStack setLayerStack:]
  -[VUINamedLayerStack flattenedImage]
  -[VUINamedLayerStack init]
  -[VUINamedLayerStack _init]
  -[VUINamedLayerStack size]
  -[VUINamedLayerStack setOriginalImage:]
  -[VUINamedLayerStack originalImage]
  -[VUINamedLayerStack scale]
  -[VUINamedLayerStack setCornerRadiusFlatImage:]
  -[VUINamedLayerStack setReplacementLayers:]
  -[VUINamedLayerStack replacementLayers]
  -[VUINamedLayerStack cornerRadiusFlatImage]


VUISortUtilities : NSObject
  // class methods
  +[VUISortUtilities titleSortComparatorWithAscending:]
  +[VUISortUtilities ascendingTitleSortComparator]
  +[VUISortUtilities ascendingDateSortComparatorWithBlock:]
  +[VUISortUtilities descendingTitleSortComparator]
  +[VUISortUtilities comparisonResultForObject1:object2:withComparators:]
  +[VUISortUtilities descendingDateSortComparatorWithBlock:]


VUITitleSortDescriptor : NSSortDescriptor
  // class methods
  +[VUITitleSortDescriptor ascendingTitleSortComparatorWithKey:]
  +[VUITitleSortDescriptor descendingTitleSortComparatorWithKey:]

  // instance methods
  -[VUITitleSortDescriptor compareObject:toObject:]


VUICollectionChange : NSObject
 @property  unsigned long changeKind
 @property  NSIndexSet *sourceIndexes
 @property  NSIndexSet *destinationIndexes
 @property  VUICollectionChangeSet *updateChangeSet

  // instance methods
  -[VUICollectionChange .cxx_destruct]
  -[VUICollectionChange init]
  -[VUICollectionChange sourceIndexes]
  -[VUICollectionChange destinationIndexes]
  -[VUICollectionChange initWithChangeKind:sourceIndexes:destinationIndexes:]
  -[VUICollectionChange setUpdateChangeSet:]
  -[VUICollectionChange updateChangeSet]
  -[VUICollectionChange changeKind]


VUIImageFactory : NSObject
  // class methods
  +[VUIImageFactory makeImageViewWithDescriptor:existingView:]
  +[VUIImageFactory makeImageViewWithResourceDescriptor:existingView:]
  +[VUIImageFactory URLFromSource:extension:cropCode:imageSize:centerGrowth:focusSizeIncrease:]
  +[VUIImageFactory makeImageProxyWithDescriptor:]
  +[VUIImageFactory _imageProxyWithURL:]
  +[VUIImageFactory _makeImageViewWithDescriptor:proxy:existingView:]
  +[VUIImageFactory _getResourceImageFromDescriptor:]


VUIImageOutlineDecorator : VUIImageScaleDecorator
 @property  UIColor *outlineColor
 @property  {UIEdgeInsets=dddd} outlineWidths

  // class methods
  +[VUIImageOutlineDecorator decoratorWithOutlineColor:outlineWidths:]

  // instance methods
  -[VUIImageOutlineDecorator .cxx_destruct]
  -[VUIImageOutlineDecorator isEqual:]
  -[VUIImageOutlineDecorator outlineColor]
  -[VUIImageOutlineDecorator decoratorIdentifier]
  -[VUIImageOutlineDecorator drawInContext:imageRect:]
  -[VUIImageOutlineDecorator initWithOutlineColor:outlineWidths:]
  -[VUIImageOutlineDecorator outlineWidths]


VUICollectionChangeSet : NSObject
 @property  BOOL hasChanges
 @property  VUICollectionChange *deleteChange
 @property  VUICollectionChange *insertChange
 @property  NSArray *moveChanges
 @property  NSArray *updateChanges

  // instance methods
  -[VUICollectionChangeSet .cxx_destruct]
  -[VUICollectionChangeSet hasChanges]
  -[VUICollectionChangeSet deleteChange]
  -[VUICollectionChangeSet insertChange]
  -[VUICollectionChangeSet moveChanges]
  -[VUICollectionChangeSet updateChanges]
  -[VUICollectionChangeSet setInsertChange:]
  -[VUICollectionChangeSet setDeleteChange:]
  -[VUICollectionChangeSet setMoveChanges:]
  -[VUICollectionChangeSet setUpdateChanges:]
  -[VUICollectionChangeSet _changesKinds]
  -[VUICollectionChangeSet containsOnlyChangeKind:]


VUIDurationValueTransformer : NSValueTransformer
 @property  NSDateComponentsFormatter *hoursMinutesFormatter
 @property  NSDateComponentsFormatter *secondsFormatter

  // class methods
  +[VUIDurationValueTransformer initialize]
  +[VUIDurationValueTransformer transformedValueClass]
  +[VUIDurationValueTransformer allowsReverseTransformation]

  // instance methods
  -[VUIDurationValueTransformer .cxx_destruct]
  -[VUIDurationValueTransformer init]
  -[VUIDurationValueTransformer transformedValue:]
  -[VUIDurationValueTransformer secondsFormatter]
  -[VUIDurationValueTransformer hoursMinutesFormatter]
  -[VUIDurationValueTransformer setHoursMinutesFormatter:]
  -[VUIDurationValueTransformer setSecondsFormatter:]


VUIImageDecorator : NSObject
 @property  {CGSize=dd} loaderScaleToSize
 @property  BOOL loaderCropToFit
 @property  {CGSize=dd} expectedSize
 @property  NSString *decoratorIdentifier

  // instance methods
  -[VUIImageDecorator expectedSize]
  -[VUIImageDecorator isEqual:]
  -[VUIImageDecorator decoratorIdentifier]
  -[VUIImageDecorator loaderScaleToSize]
  -[VUIImageDecorator loaderCropToFit]
  -[VUIImageDecorator decorate:scaledWithSize:croppedToFit:]


VUIURLRequestOperation : VUIAsynchronousOperation
 @property  NSURLRequest *request
 @property  NSData *data
 @property  NSURLResponse *response
 @property  NSURLSession *session
 @property  NSURLSessionDataTask *task
 @property  unsigned long taskStartTime
 @property  NSError *error
 @property  unsigned long elapsedTimeInMilliseconds

  // instance methods
  -[VUIURLRequestOperation setRequest:]
  -[VUIURLRequestOperation executionDidBegin]
  -[VUIURLRequestOperation initWithRequest:]
  -[VUIURLRequestOperation setTaskStartTime:]
  -[VUIURLRequestOperation .cxx_destruct]
  -[VUIURLRequestOperation data]
  -[VUIURLRequestOperation setSession:]
  -[VUIURLRequestOperation init]
  -[VUIURLRequestOperation request]
  -[VUIURLRequestOperation setTask:]
  -[VUIURLRequestOperation response]
  -[VUIURLRequestOperation cancel]
  -[VUIURLRequestOperation task]
  -[VUIURLRequestOperation setData:]
  -[VUIURLRequestOperation session]
  -[VUIURLRequestOperation setError:]
  -[VUIURLRequestOperation taskStartTime]
  -[VUIURLRequestOperation error]
  -[VUIURLRequestOperation setResponse:]
  -[VUIURLRequestOperation initWithRequest:session:]
  -[VUIURLRequestOperation _handleResponse:responseData:error:]
  -[VUIURLRequestOperation elapsedTimeInMilliseconds]


VUICollisionSafeIdentifier : NSObject <NSCopying>
 @property  NSObject<NSCopying> *rootIdentifier
 @property  unsigned long collisionCount

  // instance methods
  -[VUICollisionSafeIdentifier .cxx_destruct]
  -[VUICollisionSafeIdentifier isEqual:]
  -[VUICollisionSafeIdentifier copyWithZone:]
  -[VUICollisionSafeIdentifier collisionCount]
  -[VUICollisionSafeIdentifier rootIdentifier]
  -[VUICollisionSafeIdentifier initWithRootIdentifier:collisionCount:]
  -[VUICollisionSafeIdentifier setRootIdentifier:]
  -[VUICollisionSafeIdentifier setCollisionCount:]


VUICollectionComparator : NSObject
  // class methods
  +[VUICollectionComparator _identifiersWithObjects:identifierBlock:]
  +[VUICollectionComparator _indexByIdentifierDictionaryWithIdentifiers:]
  +[VUICollectionComparator _movedIdentifiersWithSourceIdentifiers:destinationIdentifiers:]

  // instance methods
  -[VUICollectionComparator changeSetFromObjects:toObjects:identifierBlock:isEqualBlock:]
  -[VUICollectionComparator changeSetFromObjects:toObjects:identifierBlock:updateChangeSetBlock:]
  -[VUICollectionComparator _changeSetWithSourceObjects:destinationObjects:identifierBlock:isEqualBlock:updateChangeSetBlock:]


VUIStackedImageNamedLayerImage : NSObject <UINamedLayerImage>
 @property  ^{CGImage=} image
 @property  NSString *name
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  double opacity
 @property  int blendMode
 @property  BOOL fixedFrame
 @property  UIImage *imageObj
 @property  <UINamedLayerContentProvider> *contentProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VUIStackedImageNamedLayerImage setOpacity:]
  -[VUIStackedImageNamedLayerImage name]
  -[VUIStackedImageNamedLayerImage opacity]
  -[VUIStackedImageNamedLayerImage fixedFrame]
  -[VUIStackedImageNamedLayerImage image]
  -[VUIStackedImageNamedLayerImage setImageObj:]
  -[VUIStackedImageNamedLayerImage .cxx_destruct]
  -[VUIStackedImageNamedLayerImage setFixedFrame:]
  -[VUIStackedImageNamedLayerImage imageObj]
  -[VUIStackedImageNamedLayerImage setFrame:]
  -[VUIStackedImageNamedLayerImage setName:]
  -[VUIStackedImageNamedLayerImage setBlendMode:]
  -[VUIStackedImageNamedLayerImage frame]
  -[VUIStackedImageNamedLayerImage setImage:]
  -[VUIStackedImageNamedLayerImage blendMode]


VUIStackedImageNamedLayerStack : NSObject <UINamedLayerStack, NSCopying>
 @property  NSString *name
 @property  NSArray *layers
 @property  {CGSize=dd} size
 @property  double scale
 @property  ^{CGImage=} flattenedImage
 @property  id radiosityImage
 @property  {CGSize=dd} radiosityImageScale
 @property  BOOL flatImageContainsCornerRadius
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VUIStackedImageNamedLayerStack layers]
  -[VUIStackedImageNamedLayerStack name]
  -[VUIStackedImageNamedLayerStack flatImageContainsCornerRadius]
  -[VUIStackedImageNamedLayerStack .cxx_destruct]
  -[VUIStackedImageNamedLayerStack radiosityImage]
  -[VUIStackedImageNamedLayerStack radiosityImageScale]
  -[VUIStackedImageNamedLayerStack setName:]
  -[VUIStackedImageNamedLayerStack flattenedImage]
  -[VUIStackedImageNamedLayerStack setSize:]
  -[VUIStackedImageNamedLayerStack setScale:]
  -[VUIStackedImageNamedLayerStack size]
  -[VUIStackedImageNamedLayerStack dealloc]
  -[VUIStackedImageNamedLayerStack copyWithZone:]
  -[VUIStackedImageNamedLayerStack scale]
  -[VUIStackedImageNamedLayerStack setLayers:]
  -[VUIStackedImageNamedLayerStack setFlatImageContainsCornerRadius:]
  -[VUIStackedImageNamedLayerStack setFlattenedImage:]
  -[VUIStackedImageNamedLayerStack setRadiosityImage:]
  -[VUIStackedImageNamedLayerStack setRadiosityImageScale:]


VUIStackedImageView : UIView <VUIAuxiliaryViewSelecting>
 @property  BOOL imageLoaded
 @property  VUIImageProxy *imageProxy
 @property  {CGSize=dd} stackSize
 @property  UIImage *image
 @property  UIImage *placeholderImage
 @property  double cornerRadius
 @property  double focusSizeIncrease
 @property  NSShadow *shadow
 @property  BOOL allowsNonOpaqueShadow
 @property  long long selectionStyle
 @property  BOOL overlayComposited
 @property  UIView *overlayView
 @property  UIView *unmaskedOverlayView
 @property  unsigned long controlState
 @property  unsigned long primaryControlState
 @property  BOOL selected
 @property  BOOL pressed
 @property  {CGPoint=dd} focusDirection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VUIStackedImageView layerClass]
  +[VUIStackedImageView _scaledSizeForSize:focusSizeIncrease:selectionStyle:]
  +[VUIStackedImageView _scaledSizeForSize:selectionStyle:]

  // instance methods
  -[VUIStackedImageView placeholderImage]
  -[VUIStackedImageView setPlaceholderImage:]
  -[VUIStackedImageView setStackSize:]
  -[VUIStackedImageView setFocused:]
  -[VUIStackedImageView setSelected:animated:]
  -[VUIStackedImageView overlayView]
  -[VUIStackedImageView willMoveToWindow:]
  -[VUIStackedImageView image]
  -[VUIStackedImageView allowsNonOpaqueShadow]
  -[VUIStackedImageView selectionStyle]
  -[VUIStackedImageView .cxx_destruct]
  -[VUIStackedImageView _applyKeyPathsAndRelativeValues:forMotionEffect:]
  -[VUIStackedImageView _idleModeFocusSizeOffset]
  -[VUIStackedImageView _setFocusDirection:duration:]
  -[VUIStackedImageView setOverlayView:]
  -[VUIStackedImageView setPressed:animated:completion:]
  -[VUIStackedImageView setSelected:animated:focusAnimationCoordinator:]
  -[VUIStackedImageView setControlState:animated:focusAnimationCoordinator:]
  -[VUIStackedImageView setFocusDirection:]
  -[VUIStackedImageView setFocusDirection:animated:]
  -[VUIStackedImageView _layerBelowTitles]
  -[VUIStackedImageView focusDirection]
  -[VUIStackedImageView setShadow:]
  -[VUIStackedImageView setPressed:animated:]
  -[VUIStackedImageView controlState]
  -[VUIStackedImageView _preferredConfigurationForFocusAnimation:inContext:]
  -[VUIStackedImageView setCornerRadius:]
  -[VUIStackedImageView setSelected:]
  -[VUIStackedImageView sizeThatFits:]
  -[VUIStackedImageView isImageLoaded]
  -[VUIStackedImageView shadow]
  -[VUIStackedImageView isSelected]
  -[VUIStackedImageView setSelectionStyle:]
  -[VUIStackedImageView setControlState:]
  -[VUIStackedImageView isPressed]
  -[VUIStackedImageView cornerRadius]
  -[VUIStackedImageView dealloc]
  -[VUIStackedImageView setControlState:animated:]
  -[VUIStackedImageView setPressed:]
  -[VUIStackedImageView stackSize]
  -[VUIStackedImageView setAllowsNonOpaqueShadow:]
  -[VUIStackedImageView _imageConfiguration]
  -[VUIStackedImageView setImageProxy:]
  -[VUIStackedImageView setSelected:animated:withAnimationCoordinator:]
  -[VUIStackedImageView imageProxy]
  -[VUIStackedImageView selectionMarginsForSize:]
  -[VUIStackedImageView animateWithAuxiliarySelectionState:animations:]
  -[VUIStackedImageView setFocusSizeIncrease:]
  -[VUIStackedImageView _loadImage]
  -[VUIStackedImageView _updateStackedImageConfiguration]
  -[VUIStackedImageView _attachMotionEffects]
  -[VUIStackedImageView _detachMotionEffects]
  -[VUIStackedImageView focusSizeIncrease]
  -[VUIStackedImageView _updateLayerStack:withImage:size:]
  -[VUIStackedImageView _commitLayerStack:]
  -[VUIStackedImageView primaryControlState]
  -[VUIStackedImageView setOverlayComposited:]
  -[VUIStackedImageView setUnmaskedOverlayView:]
  -[VUIStackedImageView isOverlayComposited]
  -[VUIStackedImageView unmaskedOverlayView]
  -[VUIStackedImageView setImageLoaded:]
  -[VUIStackedImageView initWithImage:size:]
  -[VUIStackedImageView _setShadowOpacity:]
  -[VUIStackedImageView _setShadowRadius:]
  -[VUIStackedImageView _setShadowVerticalOffset:]
  -[VUIStackedImageView _resetShadowSettings]
  -[VUIStackedImageView _updateImageSamplingOverlays]
  -[VUIStackedImageView _newImageConfiguration]
  -[VUIStackedImageView initWithImageProxy:]
  -[VUIStackedImageView setImage:withSize:]
  -[VUIStackedImageView setPressed:duration:completion:]
  -[VUIStackedImageView _layeredImageContainerLayer]


VUINetworkReachabilityMonitor : NSObject <ICEnvironmentMonitorObserver>
 @property  BOOL networkReachable
 @property  id networkTypeChangedNotificationToken
 @property  id networkReachabilityChangedNotificationToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VUINetworkReachabilityMonitor sharedInstance]
  +[VUINetworkReachabilityMonitor _isNetworkReachable]

  // instance methods
  -[VUINetworkReachabilityMonitor isNetworkReachable]
  -[VUINetworkReachabilityMonitor environmentMonitorDidChangeNetworkType:]
  -[VUINetworkReachabilityMonitor environmentMonitorDidChangeNetworkReachability:]
  -[VUINetworkReachabilityMonitor .cxx_destruct]
  -[VUINetworkReachabilityMonitor setNetworkReachable:]
  -[VUINetworkReachabilityMonitor init]
  -[VUINetworkReachabilityMonitor _init]
  -[VUINetworkReachabilityMonitor _updateNetworkReachability]
  -[VUINetworkReachabilityMonitor networkTypeChangedNotificationToken]
  -[VUINetworkReachabilityMonitor setNetworkTypeChangedNotificationToken:]
  -[VUINetworkReachabilityMonitor networkReachabilityChangedNotificationToken]
  -[VUINetworkReachabilityMonitor setNetworkReachabilityChangedNotificationToken:]


VUIDelayOperation : VUIAsynchronousOperation
 @property  double delay
 @property  double tolerance
 @property  NSDate *fireDate
 @property  BOOL shouldIgnoreTolerance

  // class methods
  +[VUIDelayOperation delayOperationWithDelay:]
  +[VUIDelayOperation delayOperationWithFireDate:]

  // instance methods
  -[VUIDelayOperation _cancelTimer]
  -[VUIDelayOperation tolerance]
  -[VUIDelayOperation executionDidBegin]
  -[VUIDelayOperation delay]
  -[VUIDelayOperation .cxx_destruct]
  -[VUIDelayOperation init]
  -[VUIDelayOperation cancel]
  -[VUIDelayOperation fireDate]
  -[VUIDelayOperation dealloc]
  -[VUIDelayOperation initWithDelay:tolerance:]
  -[VUIDelayOperation initWithFireDate:tolerance:]
  -[VUIDelayOperation setShouldIgnoreTolerance:]
  -[VUIDelayOperation shouldIgnoreTolerance]


VUIStateMachine : NSObject
 @property  NSString *currentState
 @property  NSString *name
 @property  long long mode
 @property  BOOL shouldAcceptEvents
 @property  NSObject<OS_os_log> *logObject
 @property  NSArray *ignorableEvents
 @property  BOOL callsStateChangeHandlerSynchronously

  // class methods
  +[VUIStateMachine initialize]
  +[VUIStateMachine registerStateMachine:]
  +[VUIStateMachine stateMachineWithName:]
  +[VUIStateMachine deregisterStateMachine:]
  +[VUIStateMachine stateMachinesOfType:]

  // instance methods
  -[VUIStateMachine postEvent:]
  -[VUIStateMachine name]
  -[VUIStateMachine .cxx_destruct]
  -[VUIStateMachine currentState]
  -[VUIStateMachine mode]
  -[VUIStateMachine setCurrentState:]
  -[VUIStateMachine logObject]
  -[VUIStateMachine setLogObject:]
  -[VUIStateMachine initWithName:initialState:mode:]
  -[VUIStateMachine setShouldAcceptEvents:]
  -[VUIStateMachine postEvent:withContext:userInfo:]
  -[VUIStateMachine executeBlockAfterCurrentStateTransition:]
  -[VUIStateMachine registerHandlerForEvent:onState:withBlock:]
  -[VUIStateMachine registerHandlerForEvent:onStates:withBlock:]
  -[VUIStateMachine initWithName:initialState:mode:stateChangeHandler:]
  -[VUIStateMachine setCallsStateChangeHandlerSynchronously:]
  -[VUIStateMachine registerDefaultHandlerForEvent:withBlock:]
  -[VUIStateMachine postEvent:withContext:]
  -[VUIStateMachine registerHandlerForEvents:onStates:withBlock:]
  -[VUIStateMachine logUnhandledEvents]
  -[VUIStateMachine _processNextEvent]
  -[VUIStateMachine purgeEventQueue]
  -[VUIStateMachine deregisterHandlers]
  -[VUIStateMachine shouldAcceptEvents]
  -[VUIStateMachine ignorableEvents]
  -[VUIStateMachine registerStateTransitionFromState:onEvent:toState:]
  -[VUIStateMachine setIgnorableEvents:]
  -[VUIStateMachine callsStateChangeHandlerSynchronously]
  -[VUIStateMachine _executePostTransitionBlocks]
  -[VUIStateMachine _processEvent:]
  -[VUIStateMachine _dispatchEvent:]
  -[VUIStateMachine _eventHandlerForEvent:]
  -[VUIStateMachine _transitionToState:withEvent:context:userInfo:]


VUIContentRatingBadgeDescriptor : NSObject
 @property  NSString *resourceName
 @property  BOOL templatedImage

  // instance methods
  -[VUIContentRatingBadgeDescriptor .cxx_destruct]
  -[VUIContentRatingBadgeDescriptor resourceName]
  -[VUIContentRatingBadgeDescriptor initWithResourceName:isTemplatedImage:]
  -[VUIContentRatingBadgeDescriptor isTemplatedImage]


VUIContentRatingBadgeManager : NSObject
 @property  NSCache *imageCache
 @property  NSDictionary *badgeDescriptors
 @property  BOOL cachesImages

  // class methods
  +[VUIContentRatingBadgeManager sharedInstance]
  +[VUIContentRatingBadgeManager _imageLookupKeyWithRatingLabel:inRatingSystem:]
  +[VUIContentRatingBadgeManager _imageForUnknownRatingLabel:]
  +[VUIContentRatingBadgeManager _addImageDescriptorToDictionary:ratingSystem:ratingLabel:resourceName:isTemplatedImage:]
  +[VUIContentRatingBadgeManager _badgeDescriptorLookupKeyWithRatingLabel:inRatingSystem:]
  +[VUIContentRatingBadgeManager _cleanedRatingLabel:]

  // instance methods
  -[VUIContentRatingBadgeManager setImageCache:]
  -[VUIContentRatingBadgeManager imageCache]
  -[VUIContentRatingBadgeManager .cxx_destruct]
  -[VUIContentRatingBadgeManager badgeForContentRating:drawUnknownRatingBadge:]
  -[VUIContentRatingBadgeManager badgeForRatingLabel:inRatingSystem:drawUnknownRatingBadge:]
  -[VUIContentRatingBadgeManager _badgeDescriptorForRatingLabel:inRatingSystem:]
  -[VUIContentRatingBadgeManager _badgeDescriptorForContentRating:]
  -[VUIContentRatingBadgeManager badgeDescriptors]
  -[VUIContentRatingBadgeManager setCachesImages:]
  -[VUIContentRatingBadgeManager isTemplatedBadgeForContentRating:]
  -[VUIContentRatingBadgeManager cachesImages]
  -[VUIContentRatingBadgeManager setBadgeDescriptors:]


VUILayeredImageContainerView : _UIStackedImageContainerView <VUIAuxiliaryViewSelecting>
 @property  BOOL layeredImageLoaded
 @property  UIImage *loadedImage
 @property  UIView *overlayView
 @property  BOOL fixedFrameOverlayView
 @property  VUILayeredImageProxy *layeredImageProxy
 @property  _UIStackedImageContainerLayer *layeredImageContainerLayer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VUILayeredImageContainerView setSelected:animated:]
  -[VUILayeredImageContainerView overlayView]
  -[VUILayeredImageContainerView willMoveToWindow:]
  -[VUILayeredImageContainerView .cxx_destruct]
  -[VUILayeredImageContainerView setOverlayView:]
  -[VUILayeredImageContainerView setPressed:animated:completion:]
  -[VUILayeredImageContainerView setSelected:animated:focusAnimationCoordinator:]
  -[VUILayeredImageContainerView setPressed:animated:]
  -[VUILayeredImageContainerView setSelected:]
  -[VUILayeredImageContainerView initWithFrame:]
  -[VUILayeredImageContainerView setPressed:]
  -[VUILayeredImageContainerView loadedImage]
  -[VUILayeredImageContainerView setLoadedImage:]
  -[VUILayeredImageContainerView setSelected:animated:withAnimationCoordinator:]
  -[VUILayeredImageContainerView selectionMarginsForSize:]
  -[VUILayeredImageContainerView layeredImageContainerLayer]
  -[VUILayeredImageContainerView setOverlayView:masked:]
  -[VUILayeredImageContainerView setLayeredImageLoaded:]
  -[VUILayeredImageContainerView _loadLayeredImage]
  -[VUILayeredImageContainerView isLayeredImageLoaded]
  -[VUILayeredImageContainerView initWithLayeredImageProxy:]
  -[VUILayeredImageContainerView setFixedFrameOverlayView:]
  -[VUILayeredImageContainerView fixedFrameOverlayView]
  -[VUILayeredImageContainerView setLayeredImageProxy:]
  -[VUILayeredImageContainerView layeredImageProxy]


VUIRemoteImageDescriptor : NSObject
 @property  NSString *src
 @property  double aspectRatio
 @property  {CGSize=dd} size
 @property  {CGSize=dd} containerSize
 @property  BOOL loadsImmediately
 @property  BOOL templated
 @property  NSString *extension
 @property  NSString *cropCode
 @property  UIColor *backgroundColor
 @property  UIColor *tintColor
 @property  UIColor *highlightColor
 @property  UIColor *placeholderColor
 @property  NSString *placeholderSrc
 @property  unsigned long decoratorType
 @property  long long scaleMode
 @property  BOOL continuousBorder
 @property  {_VUICornerRadii=dddd} borderRadii
 @property  UIColor *borderColor
 @property  double borderWidth
 @property  NSShadow *shadow
 @property  BOOL animatesShadowChanges
 @property  NSString *accessibilityText
 @property  BOOL optimizedImageRendering

  // instance methods
  -[VUIRemoteImageDescriptor src]
  -[VUIRemoteImageDescriptor setExtension:]
  -[VUIRemoteImageDescriptor tintColor]
  -[VUIRemoteImageDescriptor setPlaceholderColor:]
  -[VUIRemoteImageDescriptor placeholderColor]
  -[VUIRemoteImageDescriptor aspectRatio]
  -[VUIRemoteImageDescriptor setBorderWidth:]
  -[VUIRemoteImageDescriptor borderWidth]
  -[VUIRemoteImageDescriptor borderColor]
  -[VUIRemoteImageDescriptor setBorderColor:]
  -[VUIRemoteImageDescriptor backgroundColor]
  -[VUIRemoteImageDescriptor setHighlightColor:]
  -[VUIRemoteImageDescriptor .cxx_destruct]
  -[VUIRemoteImageDescriptor setShadow:]
  -[VUIRemoteImageDescriptor extension]
  -[VUIRemoteImageDescriptor highlightColor]
  -[VUIRemoteImageDescriptor setTintColor:]
  -[VUIRemoteImageDescriptor setBackgroundColor:]
  -[VUIRemoteImageDescriptor shadow]
  -[VUIRemoteImageDescriptor borderRadii]
  -[VUIRemoteImageDescriptor accessibilityText]
  -[VUIRemoteImageDescriptor size]
  -[VUIRemoteImageDescriptor containerSize]
  -[VUIRemoteImageDescriptor cropCode]
  -[VUIRemoteImageDescriptor setAccessibilityText:]
  -[VUIRemoteImageDescriptor initWithSrc:size:]
  -[VUIRemoteImageDescriptor setPlaceholderSrc:]
  -[VUIRemoteImageDescriptor setBorderRadii:]
  -[VUIRemoteImageDescriptor scaleMode]
  -[VUIRemoteImageDescriptor setScaleMode:]
  -[VUIRemoteImageDescriptor optimizedImageRendering]
  -[VUIRemoteImageDescriptor setOptimizedImageRendering:]
  -[VUIRemoteImageDescriptor isTemplated]
  -[VUIRemoteImageDescriptor setTemplated:]
  -[VUIRemoteImageDescriptor setContinuousBorder:]
  -[VUIRemoteImageDescriptor setLoadsImmediately:]
  -[VUIRemoteImageDescriptor setDecoratorType:]
  -[VUIRemoteImageDescriptor initWithSrc:size:containerSize:]
  -[VUIRemoteImageDescriptor setCropCode:]
  -[VUIRemoteImageDescriptor setAnimatesShadowChanges:]
  -[VUIRemoteImageDescriptor continuousBorder]
  -[VUIRemoteImageDescriptor animatesShadowChanges]
  -[VUIRemoteImageDescriptor decoratorType]
  -[VUIRemoteImageDescriptor placeholderSrc]
  -[VUIRemoteImageDescriptor loadsImmediately]


VUIPagePerformanceController : NSObject
  // class methods
  +[VUIPagePerformanceController postNotificationForImageProxy:withLoadingStatus:]


VUIDevice : NSObject
  // class methods
  +[VUIDevice isPad]
  +[VUIDevice name]
  +[VUIDevice isMac]
  +[VUIDevice systemVersion]
  +[VUIDevice isPhone]
  +[VUIDevice guid]
  +[VUIDevice userInterfaceIdiom]
  +[VUIDevice systemName]
  +[VUIDevice isTV]
  +[VUIDevice model]
  +[VUIDevice supportsDeepColor]
  +[VUIDevice shouldConstrainToPortait]
  +[VUIDevice enablePortraitLock:]


VUIContentRating : NSObject
 @property  long long ratingSystemKind
 @property  long long ratingSystem
 @property  NSString *ratingSystemString
 @property  BOOL explicitContent
 @property  NSString *ratingLabel
 @property  unsigned long rank
 @property  NSString *ratingDescription
 @property  NSString *stringRepresentation

  // class methods
  +[VUIContentRating new]

  // instance methods
  -[VUIContentRating stringRepresentation]
  -[VUIContentRating rank]
  -[VUIContentRating .cxx_destruct]
  -[VUIContentRating init]
  -[VUIContentRating isEqual:]
  -[VUIContentRating ratingSystem]
  -[VUIContentRating ratingDescription]
  -[VUIContentRating ratingLabel]
  -[VUIContentRating isExplicitContent]
  -[VUIContentRating initWithStringRepresentation:]
  -[VUIContentRating initWithRatingSystemString:ratingLabel:rank:ratingDescription:]
  -[VUIContentRating ratingSystemKind]
  -[VUIContentRating initWithRatingSystem:ratingLabel:rank:ratingDescription:]
  -[VUIContentRating initWithRatingSystem:explicitContent:]
  -[VUIContentRating ratingSystemString]


VUIResourceImageDescriptor : NSObject
 @property  NSString *name
 @property  BOOL scaleToSize
 @property  unsigned long type
 @property  UIImageSymbolConfiguration *symbolConfiguration
 @property  {CGSize=dd} size
 @property  {CGSize=dd} containerSize
 @property  double aspectRatio
 @property  BOOL renderAsTemplate
 @property  {_VUICornerRadii=dddd} borderRadii
 @property  UIColor *borderColor
 @property  double borderWidth
 @property  UIColor *tintColor
 @property  UIColor *highlightColor
 @property  long long scaleMode
 @property  NSString *accessibilityText

  // instance methods
  -[VUIResourceImageDescriptor tintColor]
  -[VUIResourceImageDescriptor aspectRatio]
  -[VUIResourceImageDescriptor setBorderWidth:]
  -[VUIResourceImageDescriptor borderWidth]
  -[VUIResourceImageDescriptor borderColor]
  -[VUIResourceImageDescriptor name]
  -[VUIResourceImageDescriptor setBorderColor:]
  -[VUIResourceImageDescriptor setHighlightColor:]
  -[VUIResourceImageDescriptor .cxx_destruct]
  -[VUIResourceImageDescriptor setName:]
  -[VUIResourceImageDescriptor highlightColor]
  -[VUIResourceImageDescriptor setTintColor:]
  -[VUIResourceImageDescriptor borderRadii]
  -[VUIResourceImageDescriptor type]
  -[VUIResourceImageDescriptor symbolConfiguration]
  -[VUIResourceImageDescriptor accessibilityText]
  -[VUIResourceImageDescriptor size]
  -[VUIResourceImageDescriptor containerSize]
  -[VUIResourceImageDescriptor setAccessibilityText:]
  -[VUIResourceImageDescriptor setScaleToSize:]
  -[VUIResourceImageDescriptor setBorderRadii:]
  -[VUIResourceImageDescriptor scaleMode]
  -[VUIResourceImageDescriptor setScaleMode:]
  -[VUIResourceImageDescriptor initWithResource:size:]
  -[VUIResourceImageDescriptor setRenderAsTemplate:]
  -[VUIResourceImageDescriptor scaleToSize]
  -[VUIResourceImageDescriptor initWithSymbol:size:symbolConfiguration:]
  -[VUIResourceImageDescriptor initWithResource:size:containerSize:]
  -[VUIResourceImageDescriptor shouldRenderAsTemplate]


VUIGraphicsImageRenderer : NSObject
  // class methods
  +[VUIGraphicsImageRenderer preferredFormat]
  +[VUIGraphicsImageRenderer imageWithSize:format:actions:]
  +[VUIGraphicsImageRenderer formatWithCGImage:]
  +[VUIGraphicsImageRenderer imageWithSize:format:cgContextActions:]
  +[VUIGraphicsImageRenderer formatWithUIImage:]
  +[VUIGraphicsImageRenderer decodedImage:opaque:]


VUIAssetGroup : NSObject
 @property  long long groupType
 @property  NSString *cachePath
 @property  unsigned long maxCacheSize
 @property  unsigned long currentCacheSize
 @property  NSMutableDictionary *cacheRecords
 @property  NSMutableDictionary *assetKeysByTag
 @property  NSMutableDictionary *manifest
 @property  BOOL manifestDirty
 @property  unsigned long pruneCount

  // class methods
  +[VUIAssetGroup _humanReadableStringForGroupType:]

  // instance methods
  -[VUIAssetGroup .cxx_destruct]
  -[VUIAssetGroup manifest]
  -[VUIAssetGroup cachePath]
  -[VUIAssetGroup setManifest:]
  -[VUIAssetGroup groupType]
  -[VUIAssetGroup setGroupType:]
  -[VUIAssetGroup setCachePath:]
  -[VUIAssetGroup maxCacheSize]
  -[VUIAssetGroup initWithGroupType:baseCachePath:folderName:maxCacheSize:purgeOnLoad:]
  -[VUIAssetGroup assetInfoForKey:queue:]
  -[VUIAssetGroup infoForAllAssetsWithTags:queue:]
  -[VUIAssetGroup removeAssetInfoForKey:queue:]
  -[VUIAssetGroup setAssetInfo:forKey:queue:]
  -[VUIAssetGroup removeAllAssetsWithQueue:]
  -[VUIAssetGroup updateAssetsFromFiles]
  -[VUIAssetGroup infoForAllAssetsWithQueue:]
  -[VUIAssetGroup _removeAssetInfoForKey:removeFile:]
  -[VUIAssetGroup _updateManifestWithChange:]
  -[VUIAssetGroup _removeAssetInfoForKey:]
  -[VUIAssetGroup _manifestFilePath]
  -[VUIAssetGroup isManifestDirty]
  -[VUIAssetGroup setManifestDirty:]
  -[VUIAssetGroup _saveManifest]
  -[VUIAssetGroup setMaxCacheSize:]
  -[VUIAssetGroup pruneCount]
  -[VUIAssetGroup setPruneCount:]
  -[VUIAssetGroup currentCacheSize]
  -[VUIAssetGroup setCurrentCacheSize:]
  -[VUIAssetGroup cacheRecords]
  -[VUIAssetGroup setCacheRecords:]
  -[VUIAssetGroup assetKeysByTag]
  -[VUIAssetGroup setAssetKeysByTag:]


VUIApplicationNotificationManager : NSObject
  // class methods
  +[VUIApplicationNotificationManager sharedInstance]

  // instance methods
  -[VUIApplicationNotificationManager _applicationWillEnterForegroundNotification:]
  -[VUIApplicationNotificationManager _applicationDidEnterBackgroundNotification:]
  -[VUIApplicationNotificationManager _applicationWillResignActiveNotification:]
  -[VUIApplicationNotificationManager dealloc]
  -[VUIApplicationNotificationManager _applicationDidBecomeActiveNotification:]
  -[VUIApplicationNotificationManager _applicationWillTerminateNotification:]
  -[VUIApplicationNotificationManager listenForApplicationNotifications]


VUIRoomBannerImageDecorator : VUIImageScaleDecorator
  // instance methods
  -[VUIRoomBannerImageDecorator decoratorIdentifier]
  -[VUIRoomBannerImageDecorator needsAlphaForImage:]
  -[VUIRoomBannerImageDecorator drawInContext:imageRect:]


VUIURLImageRequest : NSObject
 @property  NSURL *url
 @property  NSDictionary *headers
 @property  NSString *identifier
 @property  <VUIImageDecrypter> *decrypter

  // instance methods
  -[VUIURLImageRequest url]
  -[VUIURLImageRequest .cxx_destruct]
  -[VUIURLImageRequest decrypter]
  -[VUIURLImageRequest setUrl:]
  -[VUIURLImageRequest setHeaders:]
  -[VUIURLImageRequest identifier]
  -[VUIURLImageRequest headers]
  -[VUIURLImageRequest setIdentifier:]
  -[VUIURLImageRequest setDecrypter:]
  -[VUIURLImageRequest initWithURL:headers:identifier:decrypter:]
  -[VUIURLImageRequest initWithURL:headers:decrypter:]


VUIEntitiesSortedByDateValueTransformer : NSValueTransformer
 @property  @? dateForEntityBlock
 @property  unsigned long maxEntities
 @property  NSDate *earliestDate

  // class methods
  +[VUIEntitiesSortedByDateValueTransformer transformedValueClass]
  +[VUIEntitiesSortedByDateValueTransformer allowsReverseTransformation]

  // instance methods
  -[VUIEntitiesSortedByDateValueTransformer .cxx_destruct]
  -[VUIEntitiesSortedByDateValueTransformer init]
  -[VUIEntitiesSortedByDateValueTransformer transformedValue:]
  -[VUIEntitiesSortedByDateValueTransformer earliestDate]
  -[VUIEntitiesSortedByDateValueTransformer setEarliestDate:]
  -[VUIEntitiesSortedByDateValueTransformer initWithDateForEntityBlock:]
  -[VUIEntitiesSortedByDateValueTransformer setMaxEntities:]
  -[VUIEntitiesSortedByDateValueTransformer dateForEntityBlock]
  -[VUIEntitiesSortedByDateValueTransformer maxEntities]
  -[VUIEntitiesSortedByDateValueTransformer setDateForEntityBlock:]


VUIImageScaleDecorator : VUIImageDecorator
 @property  {CGSize=dd} scaleToSize
 @property  long long scaleMode
 @property  BOOL centerGrowth
 @property  double focusedSizeIncrease
 @property  {UIEdgeInsets=dddd} padding
 @property  {_VUICornerRadii=dddd} cornerRadii
 @property  BOOL cornerContinuous
 @property  UIColor *bgColor
 @property  BOOL preservesAlpha
 @property  BOOL cropToFit
 @property  double upscaleAdjustment

  // instance methods
  -[VUIImageScaleDecorator .cxx_destruct]
  -[VUIImageScaleDecorator padding]
  -[VUIImageScaleDecorator expectedSize]
  -[VUIImageScaleDecorator cornerRadii]
  -[VUIImageScaleDecorator init]
  -[VUIImageScaleDecorator isEqual:]
  -[VUIImageScaleDecorator bgColor]
  -[VUIImageScaleDecorator setCornerRadii:]
  -[VUIImageScaleDecorator setPadding:]
  -[VUIImageScaleDecorator focusedSizeIncrease]
  -[VUIImageScaleDecorator setFocusedSizeIncrease:]
  -[VUIImageScaleDecorator setBgColor:]
  -[VUIImageScaleDecorator setScaleToSize:]
  -[VUIImageScaleDecorator scaleMode]
  -[VUIImageScaleDecorator setScaleMode:]
  -[VUIImageScaleDecorator upscaleAdjustment]
  -[VUIImageScaleDecorator setUpscaleAdjustment:]
  -[VUIImageScaleDecorator decoratorIdentifier]
  -[VUIImageScaleDecorator needsAlphaForImage:]
  -[VUIImageScaleDecorator initWithScaleToSize:scaleMode:]
  -[VUIImageScaleDecorator scaleToSize]
  -[VUIImageScaleDecorator cropToFit]
  -[VUIImageScaleDecorator setCropToFit:]
  -[VUIImageScaleDecorator setCenterGrowth:]
  -[VUIImageScaleDecorator loaderScaleToSize]
  -[VUIImageScaleDecorator _scaleToSizeAdjustedForUpscaling]
  -[VUIImageScaleDecorator _paddingAdjustedForUpscaling]
  -[VUIImageScaleDecorator _applyCornerMaskForRect:toContext:]
  -[VUIImageScaleDecorator _imageFixedForRotation:]
  -[VUIImageScaleDecorator centerGrowth]
  -[VUIImageScaleDecorator preservesAlpha]
  -[VUIImageScaleDecorator _focusedSizeIncreaseFactor]
  -[VUIImageScaleDecorator cornerContinuous]
  -[VUIImageScaleDecorator initWithScaleToSize:]
  -[VUIImageScaleDecorator initWithScaleToSize:cropToFit:]
  -[VUIImageScaleDecorator loaderCropToFit]
  -[VUIImageScaleDecorator decorate:scaledWithSize:croppedToFit:]
  -[VUIImageScaleDecorator setCornerContinuous:]
  -[VUIImageScaleDecorator setPreservesAlpha:]


_VUIDecoratorRequest : NSObject
 @property  BOOL statusCancelled

  // instance methods
  -[_VUIDecoratorRequest statusCancelled]
  -[_VUIDecoratorRequest setStatusCancelled:]


VUIImageProxy : NSObject <NSCopying>
 @property  id imageLoader
 @property  long long groupType
 @property  id requestToken
 @property  _VUIDecoratorRequest *decoratorRequestToken
 @property  BOOL isLoading
 @property  id imageDidWriteObserver
 @property  id object
 @property  {CGSize=dd} expectedSize
 @property  BOOL cacheOnLoad
 @property  BOOL allowsSubstitutionForOriginal
 @property  VUIImageDecorator *decorator
 @property  @? completionHandler
 @property  @? writeCompletionHandler
 @property  long long imageDirection
 @property  <VUINetworkRequestLoader> *requestLoader
 @property  BOOL loadSynchronouslyIfCached
 @property  BOOL writeToAssetLibrary
 @property  BOOL optimizedImageRendering

  // class methods
  +[VUIImageProxy _imageDecoratorQueue]

  // instance methods
  -[VUIImageProxy load]
  -[VUIImageProxy isLoading]
  -[VUIImageProxy .cxx_destruct]
  -[VUIImageProxy decorator]
  -[VUIImageProxy expectedSize]
  -[VUIImageProxy requestToken]
  -[VUIImageProxy setRequestToken:]
  -[VUIImageProxy setImageDirection:]
  -[VUIImageProxy setIsLoading:]
  -[VUIImageProxy isEqual:]
  -[VUIImageProxy setCompletionHandler:]
  -[VUIImageProxy groupType]
  -[VUIImageProxy object]
  -[VUIImageProxy cancel]
  -[VUIImageProxy dealloc]
  -[VUIImageProxy completionHandler]
  -[VUIImageProxy copyWithZone:]
  -[VUIImageProxy imageDirection]
  -[VUIImageProxy setGroupType:]
  -[VUIImageProxy initWithObject:imageLoader:groupType:]
  -[VUIImageProxy setDecorator:]
  -[VUIImageProxy setLoadSynchronouslyIfCached:]
  -[VUIImageProxy setCacheOnLoad:]
  -[VUIImageProxy isImageAvailable]
  -[VUIImageProxy requestLoader]
  -[VUIImageProxy setRequestLoader:]
  -[VUIImageProxy optimizedImageRendering]
  -[VUIImageProxy setOptimizedImageRendering:]
  -[VUIImageProxy loadSynchronouslyIfCached]
  -[VUIImageProxy setAllowsSubstitutionForOriginal:]
  -[VUIImageProxy imageLoader]
  -[VUIImageProxy cacheOnLoad]
  -[VUIImageProxy writeToAssetLibrary]
  -[VUIImageProxy setWriteToAssetLibrary:]
  -[VUIImageProxy setDecoratorRequestToken:]
  -[VUIImageProxy _decoratedImageAssetPath]
  -[VUIImageProxy _imageLoaderKey]
  -[VUIImageProxy _originalImageAssetPath]
  -[VUIImageProxy _callCompletionHandlerWithImage:error:finished:]
  -[VUIImageProxy _callWriteCompletionHandlerWithPath:error:finished:]
  -[VUIImageProxy _completeImageLoadWithImage:imagePath:error:assetKey:expiryDate:tags:requestRecord:]
  -[VUIImageProxy _originalImageAssetKey]
  -[VUIImageProxy _decoratedImageAssetKey]
  -[VUIImageProxy _decorateAndWriteImage:imagePath:scaleToSize:cropToFit:scalingResult:assetKey:expiryDate:tags:requestRecord:]
  -[VUIImageProxy writeCompletionHandler]
  -[VUIImageProxy _imageDidWriteHandler:]
  -[VUIImageProxy _assetKeyWithImageLoaderKey:decoratorIdentifier:]
  -[VUIImageProxy allowsSubstitutionForOriginal]
  -[VUIImageProxy _imageAssetPathWithAssetKey:]
  -[VUIImageProxy _decoratorIdentifier]
  -[VUIImageProxy decoratorRequestToken]
  -[VUIImageProxy isOfSameOriginAs:]
  -[VUIImageProxy setImageLoader:]
  -[VUIImageProxy setWriteCompletionHandler:]
  -[VUIImageProxy imageDidWriteObserver]
  -[VUIImageProxy setImageDidWriteObserver:]


_TVURLSessionDownloadTaskWrapper : NSObject
 @property  long long state

  // instance methods
  -[_TVURLSessionDownloadTaskWrapper .cxx_destruct]
  -[_TVURLSessionDownloadTaskWrapper resumeWithCompletionHandler:]
  -[_TVURLSessionDownloadTaskWrapper state]
  -[_TVURLSessionDownloadTaskWrapper cancel]
  -[_TVURLSessionDownloadTaskWrapper initWithURL:]


VUILayeredImageProxy : NSObject
 @property  BOOL cancelled
 @property  NSURL *url
 @property  long long groupType
 @property  NSString *assetKey

  // class methods
  +[VUILayeredImageProxy _loadingQueue]

  // instance methods
  -[VUILayeredImageProxy url]
  -[VUILayeredImageProxy isLoading]
  -[VUILayeredImageProxy .cxx_destruct]
  -[VUILayeredImageProxy assetKey]
  -[VUILayeredImageProxy setCancelled:]
  -[VUILayeredImageProxy isCancelled]
  -[VUILayeredImageProxy isEqual:]
  -[VUILayeredImageProxy groupType]
  -[VUILayeredImageProxy loadWithCompletion:]
  -[VUILayeredImageProxy cancel]
  -[VUILayeredImageProxy dealloc]
  -[VUILayeredImageProxy initWithURL:]
  -[VUILayeredImageProxy isImageAvailable]
  -[VUILayeredImageProxy initWithURL:groupType:]
  -[VUILayeredImageProxy initWithURL:groupType:assetKey:]
  -[VUILayeredImageProxy _assetPathWithAssetKey:]


VUIImage : NSObject
 @property  int orientation
 @property  BOOL rotationEnabled

  // class methods
  +[VUIImage imageWithURL:]
  +[VUIImage imageWithData:]
  +[VUIImage imageWithCGImageRef:preserveAlpha:]
  +[VUIImage imageWithCGImageRef:imageOrientation:preserveAlpha:]
  +[VUIImage imageWithPath:]
  +[VUIImage imageWithURL:cacheImmediately:]
  +[VUIImage imageWithPath:cacheImmediately:]
  +[VUIImage imageWithRotationFromURL:]
  +[VUIImage exifOrientationForImageOrientation:]
  +[VUIImage imageOrientationForExifOrientation:]
  +[VUIImage imageWithRotationFromPath:]

  // instance methods
  -[VUIImage aspectRatio]
  -[VUIImage imageType]
  -[VUIImage image]
  -[VUIImage .cxx_destruct]
  -[VUIImage uiImage]
  -[VUIImage orientation]
  -[VUIImage initWithData:]
  -[VUIImage dealloc]
  -[VUIImage setRotationEnabled:]
  -[VUIImage hasAlpha]
  -[VUIImage rotationEnabled]
  -[VUIImage initWithURL:]
  -[VUIImage initWithCGImageRef:exifOrientation:preserveAlpha:]
  -[VUIImage setEnableCache:]
  -[VUIImage isPowerOfTwo]
  -[VUIImage drawImageInContext:rect:]
  -[VUIImage initWithCGImageRef:imageOrientation:preserveAlpha:]
  -[VUIImage pixelBounds]
  -[VUIImage initWithCGImageRef:preserveAlpha:]
  -[VUIImage initWithURL:cacheImmediately:]
  -[VUIImage _initWithCGImageSourceRotationEnabled:]
  -[VUIImage _uiImageOrientation]
  -[VUIImage _initializeCGImageWithRotation]
  -[VUIImage largestSquareRect]
  -[VUIImage sourceRequiresRotation]
  -[VUIImage enableCache]
  -[VUIImage squareImageFromNearSquareImageWithAspectRatioLimit:]
  -[VUIImage isImageBufferInMemory]


VUIAsynchronousWorkToken : NSObject
 @property  NSOperation *operation

  // instance methods
  -[VUIAsynchronousWorkToken operation]
  -[VUIAsynchronousWorkToken setOperation:]
  -[VUIAsynchronousWorkToken .cxx_destruct]
  -[VUIAsynchronousWorkToken init]
  -[VUIAsynchronousWorkToken initWithOperation:]
  -[VUIAsynchronousWorkToken cancel]


VUIAssetLibrary : NSObject
 @property  NSString *cachePath
 @property  NSMutableArray *registeredGroups

  // class methods
  +[VUIAssetLibrary sharedInstance]
  +[VUIAssetLibrary initializeAssetLibraryWithCachePath:purgeCacheOnLoad:]
  +[VUIAssetLibrary _initializeAssetLibraryWithCachePath:purgeCacheOnLoad:]

  // instance methods
  -[VUIAssetLibrary .cxx_destruct]
  -[VUIAssetLibrary cachePath]
  -[VUIAssetLibrary setCachePath:]
  -[VUIAssetLibrary assetPathForKey:inGroupOfType:]
  -[VUIAssetLibrary setImageAssetFromPath:forKey:inGroupOfType:expiryDate:]
  -[VUIAssetLibrary registerGroup:]
  -[VUIAssetLibrary groupWithGroupType:]
  -[VUIAssetLibrary removeAssetForKey:inGroupOfType:]
  -[VUIAssetLibrary setImageAsset:forKey:inGroupOfType:expiryDate:overWrite:]
  -[VUIAssetLibrary _setImageAsset:forKey:inGroupOfType:expiryDate:overWrite:tags:]
  -[VUIAssetLibrary setImageAssetFromPath:forKey:inGroupOfType:expiryDate:tags:]
  -[VUIAssetLibrary assetForKey:inGroupOfType:]
  -[VUIAssetLibrary assetExpiryDateForKey:inGroupOfType:]
  -[VUIAssetLibrary keyForAssetWithTags:inGroupOfType:]
  -[VUIAssetLibrary setImageAsset:forKey:inGroupOfType:expiryDate:]
  -[VUIAssetLibrary setImageAsset:forKey:inGroupOfType:expiryDate:tags:]
  -[VUIAssetLibrary purgeAssetsInGroupOfType:]
  -[VUIAssetLibrary updateAssetsInGroupOfType:]
  -[VUIAssetLibrary assetPathsForGroupOfType:]
  -[VUIAssetLibrary cachePathForGroupOfType:]
  -[VUIAssetLibrary unRegisterGroup:]
  -[VUIAssetLibrary registeredGroups]
  -[VUIAssetLibrary setRegisteredGroups:]
  -[VUIAssetLibrary initWithCachePath:purgeCacheOnLoad:]


VUIMobileGestaltLookup : NSObject
  // class methods
  +[VUIMobileGestaltLookup boolValueForKey:]
  +[VUIMobileGestaltLookup stringValueForKey:]


VUIPathAnimationAction : NSObject <CAAction>
 @property  CABasicAnimation *animationToRun
 @property  r^{CGPath=} fromPath
 @property  NSString *key

  // instance methods
  -[VUIPathAnimationAction setKey:]
  -[VUIPathAnimationAction .cxx_destruct]
  -[VUIPathAnimationAction runActionForKey:object:arguments:]
  -[VUIPathAnimationAction key]
  -[VUIPathAnimationAction dealloc]
  -[VUIPathAnimationAction setFromPath:]
  -[VUIPathAnimationAction setAnimationToRun:]
  -[VUIPathAnimationAction animationToRun]
  -[VUIPathAnimationAction fromPath]


VUIURLImageLoader : NSObject <NSURLSessionTaskDelegate, NSURLSessionDataDelegate, VUIImageLoader>
 @property  NSURLSession *session
 @property  NSMutableDictionary *loadOptionsByID
 @property  NSMutableDictionary *loadIDsByURL
 @property  NSMutableDictionary *taskOptionsByURL
 @property  NSObject<OS_dispatch_queue> *processingQueue
 @property  BOOL imageRotationEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VUIURLImageLoader sharedInstance]

  // instance methods
  -[VUIURLImageLoader URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[VUIURLImageLoader .cxx_destruct]
  -[VUIURLImageLoader URLSession:dataTask:willCacheResponse:completionHandler:]
  -[VUIURLImageLoader init]
  -[VUIURLImageLoader URLSession:dataTask:didReceiveData:]
  -[VUIURLImageLoader URLSession:task:didCompleteWithError:]
  -[VUIURLImageLoader processingQueue]
  -[VUIURLImageLoader session]
  -[VUIURLImageLoader URLForObject:]
  -[VUIURLImageLoader imageKeyForObject:]
  -[VUIURLImageLoader cancelLoad:]
  -[VUIURLImageLoader loadImageForObject:scaleToSize:cropToFit:imageDirection:requestLoader:completionHandler:]
  -[VUIURLImageLoader loadOptionsByID]
  -[VUIURLImageLoader loadIDsByURL]
  -[VUIURLImageLoader taskOptionsByURL]
  -[VUIURLImageLoader _executeOnProcessingQueue:]
  -[VUIURLImageLoader isImageRotationEnabled]
  -[VUIURLImageLoader setImageRotationEnabled:]


VUIRestrictions : NSObject <VUIRestrictions>
 @property  BOOL allowsShowingUndownloadedTVShows
 @property  BOOL allowsShowingUndownloadedMovies

  // class methods
  +[VUIRestrictions sharedInstance]

  // instance methods
  -[VUIRestrictions allowsShowingUndownloadedMovies]
  -[VUIRestrictions allowsShowingUndownloadedTVShows]


UITabBarController(VideosUICore)
	// instance methods
	-[UITabBarController(VideosUICore) init]
	-[UITabBarController(VideosUICore) vuiSelectedViewController]
	-[UITabBarController(VideosUICore) setVuiDelegate:]
	-[UITabBarController(VideosUICore) vuiSelectedIndex]
	-[UITabBarController(VideosUICore) vuiViewControllers]
	-[UITabBarController(VideosUICore) setVuiViewControllers:]
	-[UITabBarController(VideosUICore) setVuiSelectedIndex:]
	-[UITabBarController(VideosUICore) vuiDelegate]
	-[UITabBarController(VideosUICore) setVuiSelectedViewController:]

UIScrollView(VideosUI)
	// instance methods
	-[UIScrollView(VideosUI) vuiBounds]

UITraitCollection(VideosUICore)
	// class methods
	+[UITraitCollection(VideosUICore) current]

	// instance methods
	-[UITraitCollection(VideosUICore) isAXEnabled]
	-[UITraitCollection(VideosUICore) isAXLargeEnabled]
	-[UITraitCollection(VideosUICore) isAXSmallEnabled]
	-[UITraitCollection(VideosUICore) vuiUserInterfaceStyle]
	-[UITraitCollection(VideosUICore) vuiPreferredContentSizeCategory]

(VideosUICore)
	// instance methods
	-[(VideosUICore) vui_deepCopy]
	-[(VideosUICore) vui_arrayByMappingObjectsUsingBlock:]
	-[(VideosUICore) vui_arrayByApplyingChangeSet:destinationObjects:]
	-[(VideosUICore) vui_arrayByApplyingChangeSet:destinationObjects:updateObjectBlock:]
	-[(VideosUICore) vui_arrayByApplyingChangeSet:destinationObjectsBlock:updateObjectBlock:]
	-[(VideosUICore) vui_arrayByApplyingChangeSet:destinationObjectsBlock:]

NSPredicate(VideosUICore)
	// class methods
	+[NSPredicate(VideosUICore) vui_equalPredicateWithKeyPath:value:]
	+[NSPredicate(VideosUICore) vui_inPredicateWithKeyPath:value:]
	+[NSPredicate(VideosUICore) vui_keyPathBitTestPredicateWithKeyPath:value:]
	+[NSPredicate(VideosUICore) vui_predicateWithSubpredicates:type:]
	+[NSPredicate(VideosUICore) _vui_keyPathsInPredicate:]
	+[NSPredicate(VideosUICore) _vui_keyPathsInCompoundPredicate:]
	+[NSPredicate(VideosUICore) _vui_keyPathsInComparisonPredicate:]
	+[NSPredicate(VideosUICore) vui_notEqualPredicateWithKeyPath:value:]

	// instance methods
	-[NSPredicate(VideosUICore) vui_keyPathsInPredicate]

UIViewController(VideosUICore)
	// instance methods
	-[UIViewController(VideosUICore) vuiView]
	-[UIViewController(VideosUICore) vuiIsRTL]
	-[UIViewController(VideosUICore) vui_presentViewController:animated:completion:]
	-[UIViewController(VideosUICore) vui_addChildViewController:]
	-[UIViewController(VideosUICore) vui_didMoveToParentViewController:]
	-[UIViewController(VideosUICore) vui_addSubview:oldView:]
	-[UIViewController(VideosUICore) setVuiModalPresentationStyle:]
	-[UIViewController(VideosUICore) vuiPresentedViewController]
	-[UIViewController(VideosUICore) vui_dismissViewControllerAnimated:completion:]
	-[UIViewController(VideosUICore) vuiChildViewControllers]
	-[UIViewController(VideosUICore) vuiPresentingViewController]
	-[UIViewController(VideosUICore) vuiTraitCollection]
	-[UIViewController(VideosUICore) vuiUserInterfaceStyle]
	-[UIViewController(VideosUICore) vuiNavigationController]
	-[UIViewController(VideosUICore) vui_loadView]
	-[UIViewController(VideosUICore) vui_viewDidLayoutSubviews]
	-[UIViewController(VideosUICore) vuiPreferredContentSize]
	-[UIViewController(VideosUICore) setVuiPreferredContentSize:]
	-[UIViewController(VideosUICore) vuiIsBeingDismissed]
	-[UIViewController(VideosUICore) vuiViewControllerIdentifier]
	-[UIViewController(VideosUICore) setVuiViewControllerIdentifier:]
	-[UIViewController(VideosUICore) vuiTabBarItem]
	-[UIViewController(VideosUICore) vui_viewDidLoad]
	-[UIViewController(VideosUICore) vui_updateViewConstraints]
	-[UIViewController(VideosUICore) vui_viewWillAppear:]
	-[UIViewController(VideosUICore) vui_viewDidAppear:]
	-[UIViewController(VideosUICore) vui_viewWillDisappear:]
	-[UIViewController(VideosUICore) vui_viewDidDisappear:]
	-[UIViewController(VideosUICore) vui_viewWillLayoutSubviews]
	-[UIViewController(VideosUICore) vui_willMoveToParentViewController:]
	-[UIViewController(VideosUICore) vuiShouldAutomaticallyForwardAppearanceMethods]
	-[UIViewController(VideosUICore) vuiParentViewController]
	-[UIViewController(VideosUICore) vui_removeFromParentViewController]
	-[UIViewController(VideosUICore) setVuiView:]
	-[UIViewController(VideosUICore) vui_setOverrideUserInterfaceStyle:]
	-[UIViewController(VideosUICore) vuiIsMovingFromParentViewController]
	-[UIViewController(VideosUICore) vui_beginAppearanceTransition:animated:]
	-[UIViewController(VideosUICore) vui_endAppearanceTransition]
	-[UIViewController(VideosUICore) vuiIsViewLoaded]
	-[UIViewController(VideosUICore) vuiOverrideUserInterfaceStyle]
	-[UIViewController(VideosUICore) vuiNavigationItem]
	-[UIViewController(VideosUICore) vuiIsNavigationRoot]
	-[UIViewController(VideosUICore) vuiTabBarController]
	-[UIViewController(VideosUICore) vui_setContentScrollView:forEdge:]
	-[UIViewController(VideosUICore) vuiTitle]
	-[UIViewController(VideosUICore) setVuiTitle:]
	-[UIViewController(VideosUICore) vuiIsBeingPresented]
	-[UIViewController(VideosUICore) vuiIsMovingToParentViewController]
	-[UIViewController(VideosUICore) vuiModalPresentationStyle]
	-[UIViewController(VideosUICore) vuiModalPresentationCapturesStatusBarAppearance]
	-[UIViewController(VideosUICore) setVuiModalPresentationCapturesStatusBarAppearance:]
	-[UIViewController(VideosUICore) vuiAutomaticallyAdjustsScrollViewInsets]
	-[UIViewController(VideosUICore) setVuiAutomaticallyAdjustsScrollViewInsets:]
	-[UIViewController(VideosUICore) vuiTransitioningDelegate]
	-[UIViewController(VideosUICore) setVuiTransitioningDelegate:]
	-[UIViewController(VideosUICore) vuiPresentationController]
	-[UIViewController(VideosUICore) vuiIsModalInPresentation]
	-[UIViewController(VideosUICore) setVuiModalInPresentation:]
	-[UIViewController(VideosUICore) setVuiTabBarItem:]
	-[UIViewController(VideosUICore) vuiTabBarObservedScrollView]
	-[UIViewController(VideosUICore) setVuiTabBarObservedScrollView:]
	-[UIViewController(VideosUICore) vuiPPTIsLoading]
	-[UIViewController(VideosUICore) vui_initWithNibName:bundle:]
	-[UIViewController(VideosUICore) vui_initWithCoder:]
	-[UIViewController(VideosUICore) vui_showViewController:sender:]
	-[UIViewController(VideosUICore) vui_setOverrideTraitCollection:forChildViewController:]
	-[UIViewController(VideosUICore) vui_contentScrollViewForEdge:]

NSCompoundPredicate(VideosUICore)
	// instance methods
	-[NSCompoundPredicate(VideosUICore) vui_predicateWithSubpredicateFilterBlock:]

UIView(VideosUICore)
	// class methods
	+[UIView(VideosUICore) vui_transitionWithView:duration:options:animations:completion:]
	+[UIView(VideosUICore) vui_performWithoutAnimation:]
	+[UIView(VideosUICore) vui_animateWithDuration:delay:options:animations:completion:]
	+[UIView(VideosUICore) vui_performByPreventingAdditiveAnimations:]
	+[UIView(VideosUICore) vui_animateWithDuration:animations:completion:]
	+[UIView(VideosUICore) vui_animateWithDuration:animations:]
	+[UIView(VideosUICore) _timingFuctionWithOptions:]

	// instance methods
	-[UIView(VideosUICore) vuiIsRTL]
	-[UIView(VideosUICore) vuiAlpha]
	-[UIView(VideosUICore) vuiLayer]
	-[UIView(VideosUICore) vui_addSubview:oldView:]
	-[UIView(VideosUICore) vui_sizeThatFits:]
	-[UIView(VideosUICore) vui_setNeedsDisplay]
	-[UIView(VideosUICore) vui_setNeedsLayout]
	-[UIView(VideosUICore) vui_insertSubview:aboveSubview:oldView:]
	-[UIView(VideosUICore) vui_layoutSubviews:computationOnly:]
	-[UIView(VideosUICore) vui_sendSubviewToBack:]
	-[UIView(VideosUICore) vuiTraitCollection]
	-[UIView(VideosUICore) vui_setHighlighted:]
	-[UIView(VideosUICore) vui_prepareForReuse]
	-[UIView(VideosUICore) setVuiBackgroundColor:]
	-[UIView(VideosUICore) setVuiCenter:]
	-[UIView(VideosUICore) vui_bringSubviewToFront:]
	-[UIView(VideosUICore) vuiUserInterfaceStyle]
	-[UIView(VideosUICore) vui_willMoveToWindow:]
	-[UIView(VideosUICore) setVuiAlpha:]
	-[UIView(VideosUICore) vui_setSelected:animated:withAnimationCoordinator:]
	-[UIView(VideosUICore) vuiBackgroundColor]
	-[UIView(VideosUICore) vui_alignmentInsetsForExpectedWidth:]
	-[UIView(VideosUICore) setVuiClipsToBounds:]
	-[UIView(VideosUICore) vui_traitCollectionDidChange:]
	-[UIView(VideosUICore) setVuiContentMode:]
	-[UIView(VideosUICore) vui_didMoveToWindow]
	-[UIView(VideosUICore) vuiIsUserInteractionEnabled]
	-[UIView(VideosUICore) setVuiUserInteractionEnabled:]
	-[UIView(VideosUICore) vui_insertSubview:belowSubview:oldView:]
	-[UIView(VideosUICore) vuiAccessibilityIdentifier]
	-[UIView(VideosUICore) setVuiAccessibilityIdentifier:]
	-[UIView(VideosUICore) vui_highlighted]
	-[UIView(VideosUICore) vui_removeFromSuperView]
	-[UIView(VideosUICore) setVuiAutoresizingMask:]
	-[UIView(VideosUICore) vuiTintColor]
	-[UIView(VideosUICore) vui_performAsCurrentTraitCollection:]
	-[UIView(VideosUICore) vui_isInAWindow]
	-[UIView(VideosUICore) setVuiTintColor:]
	-[UIView(VideosUICore) vui_isAccessibilityElement:]
	-[UIView(VideosUICore) vui_layoutIfNeeded]
	-[UIView(VideosUICore) vui_setAccessibilityText:]
	-[UIView(VideosUICore) vui_setOverrideUserInterfaceStyle:]
	-[UIView(VideosUICore) vuiDebugUI]
	-[UIView(VideosUICore) vuiSubviews]
	-[UIView(VideosUICore) vuiOverrideUserInterfaceStyle]
	-[UIView(VideosUICore) vui_applyToolbarSemanticContext]
	-[UIView(VideosUICore) vuiCenter]
	-[UIView(VideosUICore) vuiContentMode]
	-[UIView(VideosUICore) vui_accessibilityText]
	-[UIView(VideosUICore) vui_isDescendantOfView:]
	-[UIView(VideosUICore) vuiAutoresizingMask]
	-[UIView(VideosUICore) vuiClipsToBounds]

UIWindow(VideosUICore)
	// instance methods
	-[UIWindow(VideosUICore) vuiWidth]
	-[UIWindow(VideosUICore) vui_setRootViewController:]
	-[UIWindow(VideosUICore) vui_makeKeyAndVisible]

(VideosUICore)
(VideosUICore)
	// instance methods
	-[(VideosUICore) vui_lowercaseHexString]
	-[(VideosUICore) vui_SHA1Digest]
	-[(VideosUICore) vui_SHA256Digest]

NSExpression(VideosUICore)
	// class methods
	+[NSExpression(VideosUICore) vui_keyPathBitTestExpressionWithKeyPath:value:]

	// instance methods
	-[NSExpression(VideosUICore) vui_isKeyPathBitTestExpression]

(VideosUICore)
	// class methods
	+[(VideosUICore) tvs_hexStringWithBytes:length:lowercase:]
	+[(VideosUICore) vui_lowercaseHexStringWithBytes:length:]

	// instance methods
	-[(VideosUICore) vui_filenameSafeString]
	-[(VideosUICore) vui_SHA256String]

UIImage(VideosUICore)
	// class methods
	+[UIImage(VideosUICore) vuiImageNamed:inBundle:]
	+[UIImage(VideosUICore) vuiImageWithCGImage:]
	+[UIImage(VideosUICore) vuiSystemImageNamed:withConfiguration:accessibilityDescription:]

	// instance methods
	-[UIImage(VideosUICore) vui_imageWithColor:]
	-[UIImage(VideosUICore) vuiTemplateImage]
	-[UIImage(VideosUICore) vuiCGImage]
	-[UIImage(VideosUICore) vuiJPEGRepresentation]
	-[UIImage(VideosUICore) vuiPNGRepresentation]

NSFileManager(VideosUICore)
	// instance methods
	-[NSFileManager(VideosUICore) vui_onDiskSizeOfFileAtPath:status:]
	-[NSFileManager(VideosUICore) vui_onDiskSizeOfDirectoryAtPath:status:]

UIScreen(VideosUICore)
	// class methods
	+[UIScreen(VideosUICore) vui_main]

	// instance methods
	-[UIScreen(VideosUICore) vuiTraitCollection]
	-[UIScreen(VideosUICore) vui_nativeScale]
	-[UIScreen(VideosUICore) vui_scale]
	-[UIScreen(VideosUICore) vui_bounds]

(VideosUICoreAdditions)
	// instance methods
	-[(VideosUICoreAdditions) vuicore_isAppIconURL]
	-[(VideosUICoreAdditions) vuicore_imageURLType]
	-[(VideosUICoreAdditions) vuicore_isResourceURL]
	-[(VideosUICoreAdditions) vuicore_isSymbolURL]
	-[(VideosUICoreAdditions) vuicore_resourceName]
	-[(VideosUICoreAdditions) vuicore_symbolName]

UIImageView(VideosUICore)
	// class methods
	+[UIImageView(VideosUICore) vui_imageViewWithImage:]
	+[UIImageView(VideosUICore) vui_imageViewWithFrame:]

	// instance methods
	-[UIImageView(VideosUICore) vuiTintColor]
	-[UIImageView(VideosUICore) setVuiTintColor:]
	-[UIImageView(VideosUICore) setVuiSymbolConfiguration:]
	-[UIImageView(VideosUICore) vuiSymbolConfiguration]

<DEREK BUG Categories!>(VideosUICore)
	// instance methods
	-[<DEREK BUG Categories!>(VideosUICore) vui_addObjectIfNotNil:]
	-[<DEREK BUG Categories!>(VideosUICore) vui_applyChangeSetIfAvailable:destinationObjects:replaceContentsOnNilChanges:]
	-[<DEREK BUG Categories!>(VideosUICore) vui_applyChangeSet:destinationObjects:]
	-[<DEREK BUG Categories!>(VideosUICore) vui_applyChangeSet:destinationObjectsBlock:updateObjectBlock:]
	-[<DEREK BUG Categories!>(VideosUICore) vui_applyChangeSet:destinationObjects:updateObjectBlock:]
	-[<DEREK BUG Categories!>(VideosUICore) _vui_applyUpdateChanges:destinationObjectsBlock:updateObjectBlock:]
	-[<DEREK BUG Categories!>(VideosUICore) vui_applyChangeSet:destinationObjectsBlock:]
	-[<DEREK BUG Categories!>(VideosUICore) vui_addObjectsFromArrayIfNotNil:]

(VideosUICore)
	// instance methods
	-[(VideosUICore) vui_arrayForKey:]
	-[(VideosUICore) vui_stringForKey:]
	-[(VideosUICore) vui_dictionaryForKey:]
	-[(VideosUICore) vui_numberForKey:]
	-[(VideosUICore) vui_dateForKey:]
	-[(VideosUICore) vui_attrStringForKey:]
	-[(VideosUICore) vui_boolForKey:defaultValue:]
	-[(VideosUICore) vui_URLForKey:]
	-[(VideosUICore) vui_errorForKey:]
	-[(VideosUICore) _vui_lookupValueForKey:expectedClass:]
	-[(VideosUICore) vui_dataForKey:]

<DEREK BUG Categories!>(VideosUICore)
	// instance methods
	-[<DEREK BUG Categories!>(VideosUICore) vui_setObjectIfNotNil:forKey:]
	-[<DEREK BUG Categories!>(VideosUICore) vui_setOrRemoveObject:forKey:]

01 00 0600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 0600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0200 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICEnvironmentMonitor 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0800 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCachedURLResponse 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValueTransformer 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIInterpolatingMotionEffect 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIMotionEffectGroup 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarController 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: _UIProgressiveBlurPresentationAnimator 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: _UIProgressiveBlurPresentationController 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: _UIStackedImageConfiguration 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: _UIStackedImageContainerLayer 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: _UIStackedImageContainerView 
