|| __DATA.__objc_data _OBJC_CLASS_$_MAAbsoluteAssetId
|| __DATA.__objc_data _OBJC_CLASS_$_MAAssetDiff
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAsset
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetControl
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetControlStatistics
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetControlStatisticsByCommand
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetControlStatisticsBySize
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetError
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetInfoControl
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetInfoDesire
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetInfoEnd
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetInfoFound
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetInfoInstance
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetInfoListen
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetInfoStaged
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetInfoStaging
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetLock
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetLockReason
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetLockTracker
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetNotifications
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetProgress
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetPushNotification
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetPushNotificationHistory
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetSelector
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetStatus
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetSummary
|| __DATA.__objc_data _OBJC_CLASS_$_MAAutoAssetUpdatePolicy
|| __DATA.__objc_data _OBJC_CLASS_$_MAProgressNotification
|| __DATA.__objc_data _OBJC_CLASS_$_MAPushNotificationController
|| __DATA.__objc_data _OBJC_CLASS_$_MAPushNotificationInterfaces
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAbsoluteAssetId
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAssetDiff
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetControl
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetControlStatistics
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetControlStatisticsByCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetControlStatisticsBySize
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetError
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetInfoControl
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetInfoDesire
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetInfoEnd
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetInfoFound
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetInfoInstance
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetInfoListen
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetInfoStaged
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetInfoStaging
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetLock
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetLockReason
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetLockTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetNotifications
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetProgress
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetPushNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetPushNotificationHistory
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetSelector
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetSummary
|| __DATA.__objc_data _OBJC_METACLASS_$_MAAutoAssetUpdatePolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_MAPushNotificationController
|| __DATA.__objc_data _OBJC_METACLASS_$_MAPushNotificationInterfaces
|| __DATA_CONST.__const _ASAttributeAutomaticUpdateDisabled
|| __DATA_CONST.__const _ASAttributeCompatibilityVersion
|| __DATA_CONST.__const _ASAttributeContentVersion
|| __DATA_CONST.__const _ASAttributeDownloadSize
|| __DATA_CONST.__const _ASAttributeEventRecordingServiceURL
|| __DATA_CONST.__const _ASAttributeIsZipStreamable
|| __DATA_CONST.__const _ASAttributeMasteredVersion
|| __DATA_CONST.__const _ASAttributeUnarchivedSize
|| __DATA_CONST.__const _ASDownloadOptionAllow2G
|| __DATA_CONST.__const _ASDownloadOptionAllow3G
|| __DATA_CONST.__const _ASDownloadOptionAllow4G
|| __DATA_CONST.__const _ASDownloadOptionAllowBatteryPower
|| __DATA_CONST.__const _ASDownloadOptionAllowRoaming
|| __DATA_CONST.__const _ASDownloadOptionAllowWiFi
|| __DATA_CONST.__const _ASDownloadOptionAssetVersionString
|| __DATA_CONST.__const _ASDownloadOptionPauseBeforeUnarchiving
|| __DATA_CONST.__const _ASDownloadOptionPriority
|| __DATA_CONST.__const _ASDownloadOptionSecondaryIdentifier
|| __DATA_CONST.__const _ASDownloadOptionUseStreamingZip
|| __DATA_CONST.__const _ASDownloadPriorityBackground
|| __DATA_CONST.__const _ASDownloadPriorityHigh
|| __DATA_CONST.__const _ASDownloadPriorityLow
|| __DATA_CONST.__const _ASDownloadPriorityNormal
|| __DATA_CONST.__const _ASErrorDomain
|| __DATA_CONST.__const _ASOperationCompleted
|| __DATA_CONST.__const _ASOperationDownloadPaused
|| __DATA_CONST.__const _ASOperationDownloadQueued
|| __DATA_CONST.__const _ASOperationDownloadingAsset
|| __DATA_CONST.__const _ASOperationStalled
|| __DATA_CONST.__const _ASOperationUnarchivingAsset
|| __DATA_CONST.__const _ASOperationVerifyingAsset
|| __DATA_CONST.__const _ASOperationWaitingToDownload
|| __DATA_CONST.__const _ASQueryAssets
|| __DATA_CONST.__const _ASQueryMetadata
|| __DATA_CONST.__const _ASQueryMetadataReleaseDate
|| __DATA_CONST.__const _ASStateOperation
|| __DATA_CONST.__const _ASStateOperationEstimatedTimeRemaining
|| __DATA_CONST.__const _ASStateOperationProgress
|| __DATA_CONST.__const _ASStatePausedOperation
|| __DATA_CONST.__const _ASStateStallError
|| __DATA_CONST.__const _ASStateStallReason
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASAssetQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MAAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MAAssetQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MADownloadConfig
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MADownloadOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MAMsuDownloadOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MAProgressHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MAXpcConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASAssetQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MAAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MAAssetQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MADownloadConfig
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MADownloadOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MAMsuDownloadOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MAProgressHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MAProgressNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MAXpcConnection
|| __TEXT.__text _ASEnsureDataVault
|| __TEXT.__text _ASNonUserInitiatedDownloadsAllowed
|| __TEXT.__text _ASServerURLForAssetType
|| __TEXT.__text _ASSetAssetServerURL
|| __TEXT.__text _ASSetAssetServerURLForAssetType
|| __TEXT.__text _ASSetDefaultAssetServerURLForAssetType
|| __TEXT.__text _ASSetLogLevel
|| __TEXT.__text _MACleanV1Repository
|| __TEXT.__text _MAEnsureDataVault
|| __TEXT.__text _MAGetPallasAudience
|| __TEXT.__text _MAGetPallasEnabled
|| __TEXT.__text _MAGetServerUrl
|| __TEXT.__text _MAIsCancelDownloadResultFailure
|| __TEXT.__text _MAIsDownloadResultFailure
|| __TEXT.__text _MAIsQueryResultFailure
|| __TEXT.__text _MAIsWellFormedAssetId
|| __TEXT.__text _MAIsWellFormedAssetType
|| __TEXT.__text _MAIsWellFormedPurpose
|| __TEXT.__text _MALogClientWithNSLogOSLog
|| __TEXT.__text _MALogClientWithNSLogOSLogStdOut
|| __TEXT.__text _MAMigrateAssets
|| __TEXT.__text _MANonUserInitiatedDownloadsAllowed
|| __TEXT.__text _MAPurgeAll
|| __TEXT.__text _MAPurgeAllExceptGivenIds
|| __TEXT.__text _MAPurgeAllWithPurpose
|| __TEXT.__text _MAPurgeAllWithPurposeExceptGivenIds
|| __TEXT.__text _MAPurgeCatalogs
|| __TEXT.__text _MAPurgeCatalogsWithPurpose
|| __TEXT.__text _MAPushServiceInterface
|| __TEXT.__text _MAReportingRequest
|| __TEXT.__text _MASendRepairState
|| __TEXT.__text _MAServiceClientInterface
|| __TEXT.__text _MASetDawTokenPath
|| __TEXT.__text _MASetPallasAudience
|| __TEXT.__text _MASetPallasAudienceForType
|| __TEXT.__text _MASetPallasEnabled
|| __TEXT.__text _MASetPallasUrl
|| __TEXT.__text _MASetPallasUrlForType
|| __TEXT.__text _MASetServerUrlFallbackDefault
|| __TEXT.__text _MASetServerUrlOverride
|| __TEXT.__text _MASoftwareLookupCancelDownload
|| __TEXT.__text _MASoftwareLookupQuery
|| __TEXT.__text _MASoftwareLookupQueryVersionsOnly
|| __TEXT.__text _MASoftwareLookupStartDownload
|| __TEXT.__text _MAStringForMAAssetState
|| __TEXT.__text _MAStringForMACancelDownloadResult
|| __TEXT.__text _MAStringForMADownloadResult
|| __TEXT.__text _MAStringForMAOperationResult
|| __TEXT.__text _MAStringForMAPurgeResult
|| __TEXT.__text _MAStringForMAQueryResult
|| __TEXT.__text _MAStringForMAQueryReturnTypes
|| __TEXT.__text _MAStringForMAXpcError
|| __TEXT.__text _MobileAssetQueryCreate
|| __TEXT.__text _MobileAssetQueryCreateArrayOfKnownAssets
|| __TEXT.__text _MobileAssetQueryGetMatchingAsset
|| __TEXT.__text _MobileAssetQueryGetTypeID
|| __TEXT.__text _MobileAssetQueryRefreshAssetsAgainstLocalCache
|| __TEXT.__text _MobileAssetQueryRefreshKnownAssets
|| __TEXT.__text __MABrainGetInfo
|| __TEXT.__text __MABrainUpdate
|| __TEXT.__text __MACleanV1Repository
|| __TEXT.__text __MAClientSendRepairState
|| __TEXT.__text __MAMigrateAssets
|| __TEXT.__text __MASendDataMigrator
|| __TEXT.__text __MASetDawTokenPath
|| __TEXT.__text __MAclientSendCoverageDump
|| __TEXT.__text __MAclientSendDataMigrator
|| __TEXT.__text __MAclientSendEnsureDataVault
|| __TEXT.__text __MAclientSendGetNonUserInitiatedDownloadsAllowed
|| __TEXT.__text __MAclientSendGetServerUrl
|| __TEXT.__text __MAclientSendQueryNSUrlState
|| __TEXT.__text __MAclientSendRepairStateSync
|| __TEXT.__text __MAclientSendServerUrlFallbackDefault
|| __TEXT.__text __MAclientSendServerUrlOverride
|| __TEXT.__text __MAensureExtension
|| __TEXT.__text __MAsendCancelDownload
|| __TEXT.__text __MAsendCancelDownloadMetaData
|| __TEXT.__text __MAsendConfigDownload
|| __TEXT.__text __MAsendDownloadAsset
|| __TEXT.__text __MAsendDownloadMetaData
|| __TEXT.__text __MAsendDumpClientAccess
|| __TEXT.__text __MAsendDumpClientAccessWithPurpose
|| __TEXT.__text __MAsendGarbageCollect
|| __TEXT.__text __MAsendGetPallasAudience
|| __TEXT.__text __MAsendGetPallasEnabled
|| __TEXT.__text __MAsendPurgeAsset
|| __TEXT.__text __MAsendQueryMetaData
|| __TEXT.__text __MAsendSetPallasAudience
|| __TEXT.__text __MAsendSetPallasEnabled
|| __TEXT.__text __MAsendSetPallasUrl
|| __TEXT.__text __MAsendSetPallasUrlForType
|| __TEXT.__text __MAsendUpdateClientAccessGetPathSync
|| __TEXT.__text __MAsendUpdateClientAccessGetPathWithPurposeSync
|| __TEXT.__text __MobileAssetFault
|| __TEXT.__text __MobileAssetLog
|| __TEXT.__text ___ForceMigration
|| __TEXT.__text __getClientCallbackQueue
|| __TEXT.__text _addObjectToMessage
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetCountOfValue
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDateGetAbsoluteTime
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetMaximumSizeForEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFErrorDescriptionKey
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ SoftwareUpdateCoreConnect: _OBJC_CLASS_$_SUCoreConnectClient
__ SoftwareUpdateCoreConnect: _OBJC_CLASS_$_SUCoreConnectClientPolicy
__ SoftwareUpdateCoreConnect: _OBJC_CLASS_$_SUCoreConnectClientProxy
__ SoftwareUpdateCoreConnect: _OBJC_CLASS_$_SUCoreConnectMessage
__ SoftwareUpdateCoreSupport: _OBJC_CLASS_$_SUCore
__ SoftwareUpdateCoreSupport: _OBJC_CLASS_$_SUCoreLog
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_error_termination_imminent
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _xpc_connection_activate
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply_sync
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_data
__ libSystem.B.dylib: _xpc_dictionary_get_double
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_get_type
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
MAAutoAssetPushNotification : NSObject <NSSecureCoding>
 @property  long long pushReason
 @property  NSString *assetType
 @property  NSString *assetSpecifier
 @property  NSString *assetVersion
 @property  MAAutoAssetUpdatePolicy *autoUpdatePolicy
 @property  NSDictionary *additionalPushParameters
 @property  NSDictionary *historyRepresentation

  // class methods
  +[MAAutoAssetPushNotification supportsSecureCoding]
  +[MAAutoAssetPushNotification pushReasonName:]

  // instance methods
  -[MAAutoAssetPushNotification assetType]
  -[MAAutoAssetPushNotification assetVersion]
  -[MAAutoAssetPushNotification encodeWithCoder:]
  -[MAAutoAssetPushNotification .cxx_destruct]
  -[MAAutoAssetPushNotification assetSpecifier]
  -[MAAutoAssetPushNotification summary]
  -[MAAutoAssetPushNotification initWithCoder:]
  -[MAAutoAssetPushNotification initWithPushReason:]
  -[MAAutoAssetPushNotification initWithPushReason:forAssetType:withAssetSpecifier:matchingAssetVersion:]
  -[MAAutoAssetPushNotification initWithPushReason:forAssetType:withAssetSpecifier:matchingAssetVersion:withUpdatePolicy:]
  -[MAAutoAssetPushNotification initWithPushReason:forAssetType:withAssetSpecifier:matchingAssetVersion:withUpdatePolicy:withAdditional:]
  -[MAAutoAssetPushNotification pushReasonName]
  -[MAAutoAssetPushNotification historyRepresentation]
  -[MAAutoAssetPushNotification pushReason]
  -[MAAutoAssetPushNotification setPushReason:]
  -[MAAutoAssetPushNotification autoUpdatePolicy]
  -[MAAutoAssetPushNotification additionalPushParameters]
  -[MAAutoAssetPushNotification setAdditionalPushParameters:]


MAProgressHandler : NSObject
 @property  unsigned long notificationInterval
 @property  NSMutableArray *callBackArray

  // instance methods
  -[MAProgressHandler .cxx_destruct]
  -[MAProgressHandler initWithCallBack:]
  -[MAProgressHandler addCallBack:]
  -[MAProgressHandler notificationInterval]
  -[MAProgressHandler setNotificationInterval:]
  -[MAProgressHandler callBackArray]


MAAbsoluteAssetId : NSObject <NSSecureCoding>
 @property  NSString *assetId
 @property  NSString *assetType

  // class methods
  +[MAAbsoluteAssetId supportsSecureCoding]

  // instance methods
  -[MAAbsoluteAssetId assetType]
  -[MAAbsoluteAssetId assetId]
  -[MAAbsoluteAssetId encodeWithCoder:]
  -[MAAbsoluteAssetId .cxx_destruct]
  -[MAAbsoluteAssetId urlHash]
  -[MAAbsoluteAssetId summary]
  -[MAAbsoluteAssetId encodeAsPlist]
  -[MAAbsoluteAssetId setAssetId:]
  -[MAAbsoluteAssetId initWithPlist:]
  -[MAAbsoluteAssetId policyHash]
  -[MAAbsoluteAssetId setAssetType:]
  -[MAAbsoluteAssetId isEqual:]
  -[MAAbsoluteAssetId initWithCoder:]
  -[MAAbsoluteAssetId contentHash]
  -[MAAbsoluteAssetId allAttributesHash]
  -[MAAbsoluteAssetId nonIdHash]
  -[MAAbsoluteAssetId assetIdHash]
  -[MAAbsoluteAssetId pallasDynamicAssetIdHash]
  -[MAAbsoluteAssetId initWithAssetId:forAssetType:]
  -[MAAbsoluteAssetId initWithAssetId:forAssetType:attributes:]
  -[MAAbsoluteAssetId diffFrom:]
  -[MAAbsoluteAssetId diffFromAsset:]
  -[MAAbsoluteAssetId diffFromAssetId:assetType:attributes:]
  -[MAAbsoluteAssetId hasOnlyAssetTypeAndId]


MAAsset : NSObject
 @property  NSDictionary *attributes
 @property  NSString *assetType
 @property  NSString *assetId
 @property  long long state
 @property  NSString *purpose

  // class methods
  +[MAAsset startCatalogDownload:then:]
  +[MAAsset loadSync:error:]
  +[MAAsset loadSync:allowingDifferences:error:]
  +[MAAsset cancelCatalogDownload:withPurpose:then:]
  +[MAAsset startCatalogDownload:options:then:]
  +[MAAsset loadSync:withPurpose:error:]
  +[MAAsset cancelCatalogDownload:then:]
  +[MAAsset startCatalogDownload:options:completionWithError:]
  +[MAAsset getLoadResultFromMessage:]
  +[MAAsset loadSync:allowingDifferences:withPurpose:error:]

  // instance methods
  -[MAAsset purge:]
  -[MAAsset assetType]
  -[MAAsset attributes]
  -[MAAsset initWithAttributes:]
  -[MAAsset assetId]
  -[MAAsset purpose]
  -[MAAsset state]
  -[MAAsset .cxx_destruct]
  -[MAAsset spaceCheck:]
  -[MAAsset hashToString:]
  -[MAAsset isEqual:]
  -[MAAsset nonUserInitiatedDownloadsAllowed]
  -[MAAsset refreshState]
  -[MAAsset cancelDownload:]
  -[MAAsset attachProgressCallBack:]
  -[MAAsset getLocalFileUrl]
  -[MAAsset startDownload:then:]
  -[MAAsset purgeSync]
  -[MAAsset wasPurgeable]
  -[MAAsset wasLocal]
  -[MAAsset logAsset]
  -[MAAsset getLocalUrl]
  -[MAAsset startDownload:]
  -[MAAsset wasPreinstalled]
  -[MAAsset wasInCatalog]
  -[MAAsset wasDownloadable]
  -[MAAsset assetServerUrl]
  -[MAAsset getLocalFilePath]
  -[MAAsset assetProperty:]
  -[MAAsset absoluteAssetId]
  -[MAAsset startDownloadWithExtractor:completion:]
  -[MAAsset startDownloadWithExtractor:options:completion:]
  -[MAAsset startDownloadWithExtractor:options:completionWithError:]
  -[MAAsset startDownload:completionWithError:]
  -[MAAsset calculateTimeout]
  -[MAAsset _invokeClientDownloadCompletionAlreadyOnQueue:asset:completionBlockWithError:]
  -[MAAsset invokeClientDownloadCompletion:asset:completionBlockWithError:]
  -[MAAsset commonAssetDownload:options:then:]
  -[MAAsset purgeWithError:]
  -[MAAsset cancelDownloadSync]
  -[MAAsset configDownload:completion:]
  -[MAAsset configDownloadSync:]
  -[MAAsset overrideGarbageCollectionThreshold:]


MAAutoAssetInfoDesire : NSObject <NSSecureCoding>
 @property  NSString *updateCategoryDesiredByClient
 @property  MAAutoAssetPolicy *clientAssetPolicy
 @property  long long checkWaitTimeoutSecs
 @property  NSString *desireReason
 @property  long long lockWaitTimeoutSecs
 @property  BOOL downloadProgressDesired

  // class methods
  +[MAAutoAssetInfoDesire supportsSecureCoding]

  // instance methods
  -[MAAutoAssetInfoDesire desireReason]
  -[MAAutoAssetInfoDesire checkWaitTimeoutSecs]
  -[MAAutoAssetInfoDesire encodeWithCoder:]
  -[MAAutoAssetInfoDesire initWithDesiredCategory:forClientAssetPolicy:reasonDesired:withCheckWaitTimeout:withLockWaitTimeout:desiringProgress:]
  -[MAAutoAssetInfoDesire .cxx_destruct]
  -[MAAutoAssetInfoDesire summary]
  -[MAAutoAssetInfoDesire clientAssetPolicy]
  -[MAAutoAssetInfoDesire updateCategoryDesiredByClient]
  -[MAAutoAssetInfoDesire downloadProgressDesired]
  -[MAAutoAssetInfoDesire lockWaitTimeoutSecs]
  -[MAAutoAssetInfoDesire initWithCoder:]


MAAutoAssetMonitor : NSObject <NSSecureCoding>
 @property  @? statusChangeNotificationBlock
 @property  NSObject<OS_dispatch_queue> *notificationDispatchQueue
 @property  NSString *autoAssetClientName
 @property  MAAutoAssetSelector *assetSelector

  // class methods
  +[MAAutoAssetMonitor supportsSecureCoding]
  +[MAAutoAssetMonitor defaultDispatchQueue]

  // instance methods
  -[MAAutoAssetMonitor registerForNotifications:]
  -[MAAutoAssetMonitor encodeWithCoder:]
  -[MAAutoAssetMonitor .cxx_destruct]
  -[MAAutoAssetMonitor summary]
  -[MAAutoAssetMonitor assetSelector]
  -[MAAutoAssetMonitor autoAssetClientName]
  -[MAAutoAssetMonitor initWithCoder:]
  -[MAAutoAssetMonitor registerForNotifications:completion:]
  -[MAAutoAssetMonitor initForClientName:forAssetSelector:error:notifyingStatusChanges:]
  -[MAAutoAssetMonitor initForClientName:forAssetSelector:notifyingFromQueue:error:notifyingStatusChanges:]
  -[MAAutoAssetMonitor registerForNotificationsSync]
  -[MAAutoAssetMonitor registerForNotificationsSync:]
  -[MAAutoAssetMonitor cancelRegistration:]
  -[MAAutoAssetMonitor cancelRegistrationSync]
  -[MAAutoAssetMonitor statusChangeNotificationBlock]
  -[MAAutoAssetMonitor setStatusChangeNotificationBlock:]
  -[MAAutoAssetMonitor notificationDispatchQueue]


MAAssetQuery : NSObject
 @property  NSMutableArray *queryParams
 @property  NSString *assetType
 @property  BOOL doNotBlockBeforeFirstUnlock
 @property  BOOL doNotBlockOnNetworkStatus
 @property  NSArray *results
 @property  long long resultCode
 @property  BOOL isDone
 @property  NSSet *assetIds
 @property  long long returnTypes
 @property  NSDate *lastFetchDate
 @property  NSDate *postedDate
 @property  NSString *purpose

  // instance methods
  -[MAAssetQuery isDone]
  -[MAAssetQuery assetType]
  -[MAAssetQuery setPurpose:]
  -[MAAssetQuery returnTypes:]
  -[MAAssetQuery isCatalogFetchedWithinThePastFewDays:]
  -[MAAssetQuery postedDate]
  -[MAAssetQuery augmentResultsWithState:]
  -[MAAssetQuery queryMetaDataWithError:]
  -[MAAssetQuery queryMetaData:]
  -[MAAssetQuery addKeyValueNull:]
  -[MAAssetQuery purpose]
  -[MAAssetQuery .cxx_destruct]
  -[MAAssetQuery addKeyValuePair:with:]
  -[MAAssetQuery initWithType:]
  -[MAAssetQuery setDoNotBlockOnNetworkStatus:]
  -[MAAssetQuery returnTypes]
  -[MAAssetQuery setDoNotBlockBeforeFirstUnlock:]
  -[MAAssetQuery doNotBlockBeforeFirstUnlock]
  -[MAAssetQuery queryInstalledAssetIds]
  -[MAAssetQuery lastFetchDate]
  -[MAAssetQuery getResultsFromMessage:]
  -[MAAssetQuery isCatalogFetchedFromLiveServer]
  -[MAAssetQuery queryMetaDataSync]
  -[MAAssetQuery resultCode]
  -[MAAssetQuery results]
  -[MAAssetQuery queryParams]
  -[MAAssetQuery addKeyValueArray:with:]
  -[MAAssetQuery doNotBlockOnNetworkStatus]
  -[MAAssetQuery initWithType:andPurpose:]
  -[MAAssetQuery assetIds]


MAAutoAssetError : NSObject
  // class methods
  +[MAAutoAssetError summaryForCode:fromOperation:]
  +[MAAutoAssetError buildError:fromOperation:underlyingError:withDescription:]


MAAutoAssetControlStatisticsByCommand : NSObject <NSSecureCoding>
 @property  long long interestInContent
 @property  long long checkForNewer
 @property  long long determineIfAvailable
 @property  long long currentStatus
 @property  long long lockContent
 @property  long long continueLockUsage
 @property  long long endLockUsage
 @property  long long endPreviousLocks
 @property  long long endAllPreviousLocks
 @property  long long eliminateAllForSelector
 @property  long long eliminateAllForAssetType
 @property  long long eliminatePromotedNeverLockedForSelector
 @property  long long stageDetermineAllAvailable
 @property  long long stageDownloadAll
 @property  long long stagePurgeAll

  // class methods
  +[MAAutoAssetControlStatisticsByCommand supportsSecureCoding]

  // instance methods
  -[MAAutoAssetControlStatisticsByCommand setStageDetermineAllAvailable:]
  -[MAAutoAssetControlStatisticsByCommand stageDownloadAll]
  -[MAAutoAssetControlStatisticsByCommand currentStatus]
  -[MAAutoAssetControlStatisticsByCommand setEndAllPreviousLocks:]
  -[MAAutoAssetControlStatisticsByCommand initWithInitialValue:]
  -[MAAutoAssetControlStatisticsByCommand checkForNewer]
  -[MAAutoAssetControlStatisticsByCommand encodeWithCoder:]
  -[MAAutoAssetControlStatisticsByCommand copy]
  -[MAAutoAssetControlStatisticsByCommand eliminatePromotedNeverLockedForSelector]
  -[MAAutoAssetControlStatisticsByCommand setInterestInContent:]
  -[MAAutoAssetControlStatisticsByCommand setStagePurgeAll:]
  -[MAAutoAssetControlStatisticsByCommand setDetermineIfAvailable:]
  -[MAAutoAssetControlStatisticsByCommand stageDetermineAllAvailable]
  -[MAAutoAssetControlStatisticsByCommand setLockContent:]
  -[MAAutoAssetControlStatisticsByCommand summary]
  -[MAAutoAssetControlStatisticsByCommand determineIfAvailable]
  -[MAAutoAssetControlStatisticsByCommand stagePurgeAll]
  -[MAAutoAssetControlStatisticsByCommand setCurrentStatus:]
  -[MAAutoAssetControlStatisticsByCommand setEliminateAllForAssetType:]
  -[MAAutoAssetControlStatisticsByCommand setEliminateAllForSelector:]
  -[MAAutoAssetControlStatisticsByCommand incrementForClientRequestMessage:]
  -[MAAutoAssetControlStatisticsByCommand setStageDownloadAll:]
  -[MAAutoAssetControlStatisticsByCommand continueLockUsage]
  -[MAAutoAssetControlStatisticsByCommand setEndLockUsage:]
  -[MAAutoAssetControlStatisticsByCommand setCheckForNewer:]
  -[MAAutoAssetControlStatisticsByCommand lockContent]
  -[MAAutoAssetControlStatisticsByCommand setContinueLockUsage:]
  -[MAAutoAssetControlStatisticsByCommand setEndPreviousLocks:]
  -[MAAutoAssetControlStatisticsByCommand endLockUsage]
  -[MAAutoAssetControlStatisticsByCommand interestInContent]
  -[MAAutoAssetControlStatisticsByCommand total]
  -[MAAutoAssetControlStatisticsByCommand setEliminatePromotedNeverLockedForSelector:]
  -[MAAutoAssetControlStatisticsByCommand endPreviousLocks]
  -[MAAutoAssetControlStatisticsByCommand init]
  -[MAAutoAssetControlStatisticsByCommand endAllPreviousLocks]
  -[MAAutoAssetControlStatisticsByCommand eliminateAllForAssetType]
  -[MAAutoAssetControlStatisticsByCommand initWithCoder:]
  -[MAAutoAssetControlStatisticsByCommand eliminateAllForSelector]


MAAutoAssetSummary : NSObject <NSSecureCoding>
 @property  MAAutoAssetSelector *assetSelector
 @property  long long assetRepresentation
 @property  BOOL assetWasPatched
 @property  BOOL assetIsStaged
 @property  MAAutoAssetStatus *jobStatus
 @property  long long scheduledIntervalSecs
 @property  long long scheduledRemainingSecs
 @property  long long pushDelaySecs
 @property  long long activeClientCount
 @property  long long activeMonitorCount
 @property  long long maximumClientCount
 @property  long long totalClientCount

  // class methods
  +[MAAutoAssetSummary supportsSecureCoding]
  +[MAAutoAssetSummary summaryPaddedHeader:]
  +[MAAutoAssetSummary summaryNewMaxColumnStrings]
  +[MAAutoAssetSummary summaryPaddedString:paddingToLenghtOfString:paddingWith:paddingBefore:]
  +[MAAutoAssetSummary summaryPaddedBanner:]

  // instance methods
  -[MAAutoAssetSummary setPushDelaySecs:]
  -[MAAutoAssetSummary encodeWithCoder:]
  -[MAAutoAssetSummary setAssetSelector:]
  -[MAAutoAssetSummary .cxx_destruct]
  -[MAAutoAssetSummary summary]
  -[MAAutoAssetSummary summaryPadded:]
  -[MAAutoAssetSummary summaryBuildMaxColumnStrings:]
  -[MAAutoAssetSummary pushDelaySecs]
  -[MAAutoAssetSummary assetSelector]
  -[MAAutoAssetSummary initWithCoder:]
  -[MAAutoAssetSummary initWithAssetSelector:withAssetRepresentation:withAssetWasPatched:withAssetIsStaged:withJobStatus:withScheduledIntervalSecs:withScheduledRemainingSecs:withPushDelaySecs:withActiveClientCount:withActiveMonitorCount:withMaximumClientCount:withTotalClientCount:]
  -[MAAutoAssetSummary assetRepresentationName]
  -[MAAutoAssetSummary assetRepresentation]
  -[MAAutoAssetSummary setAssetRepresentation:]
  -[MAAutoAssetSummary assetWasPatched]
  -[MAAutoAssetSummary setAssetWasPatched:]
  -[MAAutoAssetSummary assetIsStaged]
  -[MAAutoAssetSummary setAssetIsStaged:]
  -[MAAutoAssetSummary jobStatus]
  -[MAAutoAssetSummary setJobStatus:]
  -[MAAutoAssetSummary scheduledIntervalSecs]
  -[MAAutoAssetSummary setScheduledIntervalSecs:]
  -[MAAutoAssetSummary scheduledRemainingSecs]
  -[MAAutoAssetSummary setScheduledRemainingSecs:]
  -[MAAutoAssetSummary activeClientCount]
  -[MAAutoAssetSummary setActiveClientCount:]
  -[MAAutoAssetSummary activeMonitorCount]
  -[MAAutoAssetSummary setActiveMonitorCount:]
  -[MAAutoAssetSummary maximumClientCount]
  -[MAAutoAssetSummary setMaximumClientCount:]
  -[MAAutoAssetSummary totalClientCount]
  -[MAAutoAssetSummary setTotalClientCount:]


ASAsset : NSObject
 @property  NSString *clientName
 @property  NSDictionary *fullAttributes
 @property  MAAsset *maAsset
 @property  NSString *assetType
 @property  NSDictionary *attributes
 @property  long long state
 @property  NSDate *installDate
 @property  NSURL *localURL
 @property  long long garbageCollectionBehavior
 @property  @? progressHandler
 @property  NSDictionary *downloadOptions
 @property  BOOL userInitiatedDownload

  // class methods
  +[ASAsset nonUserInitiatedDownloadsAllowed]

  // instance methods
  -[ASAsset purge:]
  -[ASAsset assetType]
  -[ASAsset identifier]
  -[ASAsset attributes]
  -[ASAsset setClientName:]
  -[ASAsset progressHandler]
  -[ASAsset state]
  -[ASAsset downloadOptions]
  -[ASAsset .cxx_destruct]
  -[ASAsset setProgressHandler:]
  -[ASAsset clientName]
  -[ASAsset installDate]
  -[ASAsset isEqual:]
  -[ASAsset cancelDownload:]
  -[ASAsset localURL]
  -[ASAsset _getLocalAttribute:]
  -[ASAsset beginDownloadWithOptions:]
  -[ASAsset setUserInitiatedDownload:]
  -[ASAsset assetServerUrl]
  -[ASAsset systemAppServerUrl]
  -[ASAsset assetStateForStateString:]
  -[ASAsset garbageCollectionBehavior]
  -[ASAsset setGarbageCollectionBehavior:]
  -[ASAsset requiredDiskSpaceIsAvailable:error:]
  -[ASAsset requiredDiskSpaceIsAvailableForDownloadOptions:requiredBytes:error:]
  -[ASAsset adjustDownloadOptions:completion:]
  -[ASAsset _downloadWithOptions:shouldFireCallback:]
  -[ASAsset pauseDownload:]
  -[ASAsset pauseDownloadAndReturnError:]
  -[ASAsset resumeDownload:]
  -[ASAsset resumeDownloadAndReturnError:]
  -[ASAsset cancelDownloadAndReturnError:]
  -[ASAsset purgeAndReturnError:]
  -[ASAsset maAsset]
  -[ASAsset setMaAsset:]
  -[ASAsset userInitiatedDownload]
  -[ASAsset initWithAssetType:attributes:]
  -[ASAsset initWithMAAsset:]
  -[ASAsset fullAttributes]
  -[ASAsset isPresentOnDisk]


MAAutoAssetInfoStaged : NSObject <NSSecureCoding>
 @property  long long totalStagedBytes
 @property  unsigned long assetsSuccessfullyStaged

  // class methods
  +[MAAutoAssetInfoStaged supportsSecureCoding]

  // instance methods
  -[MAAutoAssetInfoStaged encodeWithCoder:]
  -[MAAutoAssetInfoStaged summary]
  -[MAAutoAssetInfoStaged initWithCoder:]
  -[MAAutoAssetInfoStaged initWithTotalStagedBytes:withAssetsSuccessfullyStaged:]
  -[MAAutoAssetInfoStaged totalStagedBytes]
  -[MAAutoAssetInfoStaged assetsSuccessfullyStaged]


MAAutoAssetPushNotificationHistory : NSObject
 @property  NSArray *notificationHistory

  // class methods
  +[MAAutoAssetPushNotificationHistory sharedInstance]

  // instance methods
  -[MAAutoAssetPushNotificationHistory .cxx_destruct]
  -[MAAutoAssetPushNotificationHistory init]
  -[MAAutoAssetPushNotificationHistory notificationHistory]
  -[MAAutoAssetPushNotificationHistory _historyURL]
  -[MAAutoAssetPushNotificationHistory _loadHistoryWithError:]
  -[MAAutoAssetPushNotificationHistory addNotificationsToHistory:withError:]
  -[MAAutoAssetPushNotificationHistory clearHistoryWithError:]
  -[MAAutoAssetPushNotificationHistory setNotificationHistory:]


ASAssetQuery : NSObject
 @property  NSString *assetType
 @property  NSString *sessionIdentifier
 @property  NSArray *results
 @property  MAAssetQuery *maQuery
 @property  NSPredicate *predicate
 @property  BOOL queriesLocalAssetInformationOnly
 @property  double networkTimeout

  // class methods
  +[ASAssetQuery queryPredicateForProperties:]

  // instance methods
  -[ASAssetQuery setPredicate:]
  -[ASAssetQuery setSessionIdentifier:]
  -[ASAssetQuery sessionIdentifier]
  -[ASAssetQuery assetType]
  -[ASAssetQuery stopQuery]
  -[ASAssetQuery setQueriesLocalAssetInformationOnly:]
  -[ASAssetQuery setMaQuery:]
  -[ASAssetQuery initWithAssetType:sessionIdentifier:]
  -[ASAssetQuery predicate]
  -[ASAssetQuery runQueryAndReturnError:]
  -[ASAssetQuery runQueryForInfoReturnError:]
  -[ASAssetQuery .cxx_destruct]
  -[ASAssetQuery networkTimeout]
  -[ASAssetQuery maQuery]
  -[ASAssetQuery initWithAssetType:]
  -[ASAssetQuery startQuery:]
  -[ASAssetQuery results]
  -[ASAssetQuery queriesLocalAssetInformationOnly]
  -[ASAssetQuery setResults:]
  -[ASAssetQuery setNetworkTimeout:]
  -[ASAssetQuery setAssetType:]


MAXpcManager : NSObject
  // instance methods
  -[MAXpcManager setClientName:]
  -[MAXpcManager clearConnection:]
  -[MAXpcManager .cxx_destruct]
  -[MAXpcManager sendAsync:clientHandler:taskDescriptor:]
  -[MAXpcManager notifyClientsOfProgress:]
  -[MAXpcManager ensureConnection]
  -[MAXpcManager initWithServiceName:callbackQueue:]
  -[MAXpcManager attachProgressHandler:assetId:callBack:withPurpose:]
  -[MAXpcManager sendSync:gettingResponseCode:codeForXpcError:loggingName:]
  -[MAXpcManager sendAsync:clientHandler:taskDescriptor:withRetry:]
  -[MAXpcManager setClientConnectionHandler]


MAAutoAssetPolicy : NSObject <NSSecureCoding>
 @property  BOOL userInitiated
 @property  long long waitForNewestSecs
 @property  BOOL interestAcrossTermination
 @property  BOOL lockAcrossTermination
 @property  BOOL lockAcrossReboot
 @property  BOOL lockAcrossOTAUpdate
 @property  BOOL lockInhibitsEmergencyRemoval
 @property  long long unlockAfterUsageSecs
 @property  long long preventGarbageCollectionSecs
 @property  NSDictionary *additionalPolicyControl

  // class methods
  +[MAAutoAssetPolicy supportsSecureCoding]

  // instance methods
  -[MAAutoAssetPolicy userInitiated]
  -[MAAutoAssetPolicy setUserInitiated:]
  -[MAAutoAssetPolicy setAdditionalPolicyControl:]
  -[MAAutoAssetPolicy waitForNewestSecs]
  -[MAAutoAssetPolicy setWaitForNewestSecs:]
  -[MAAutoAssetPolicy setLockInhibitsEmergencyRemoval:]
  -[MAAutoAssetPolicy setLockAcrossTermination:]
  -[MAAutoAssetPolicy encodeWithCoder:]
  -[MAAutoAssetPolicy lockInhibitsEmergencyRemoval]
  -[MAAutoAssetPolicy setInterestAcrossTermination:]
  -[MAAutoAssetPolicy additionalPolicyControl]
  -[MAAutoAssetPolicy .cxx_destruct]
  -[MAAutoAssetPolicy lockAcrossReboot]
  -[MAAutoAssetPolicy interestAcrossTermination]
  -[MAAutoAssetPolicy summary]
  -[MAAutoAssetPolicy setPreventGarbageCollectionSecs:]
  -[MAAutoAssetPolicy setLockAcrossOTAUpdate:]
  -[MAAutoAssetPolicy setUnlockAfterUsageSecs:]
  -[MAAutoAssetPolicy unlockAfterUsageSecs]
  -[MAAutoAssetPolicy setLockAcrossReboot:]
  -[MAAutoAssetPolicy lockAcrossTermination]
  -[MAAutoAssetPolicy lockAcrossOTAUpdate]
  -[MAAutoAssetPolicy init]
  -[MAAutoAssetPolicy preventGarbageCollectionSecs]
  -[MAAutoAssetPolicy initWithCoder:]


MAAutoAssetUpdatePolicy : NSObject <NSSecureCoding>
 @property  NSString *updatePolicyName
 @property  NSString *assetType
 @property  NSArray *categoryList
 @property  long long checkForNewerIntervalSecs
 @property  long long checkForNewerTimeoutSecs
 @property  BOOL checkForNewerAsUserInitiated
 @property  BOOL checkForNewerWithoutRampEnabled
 @property  BOOL newerFoundAutoDownloadPostponed
 @property  long long newerFoundAutoDownloadJitterSecs
 @property  long long newerFoundAutoDownloadTimeoutSecs
 @property  long long newerFoundUserInitiatedDownloadTimeoutSecs
 @property  BOOL revokeIgnoredForUnlockedPurge
 @property  BOOL revokeIgnoredForLockedContent
 @property  BOOL revokeTriggersLockedPurge
 @property  BOOL allowInterestAcrossTermination
 @property  BOOL allowLockAcrossTermination
 @property  BOOL allowLockAcrossReboot
 @property  BOOL allowLockAcrossOTAUpdate
 @property  BOOL allowLockOfRevokedContent
 @property  BOOL allowLockWhenFilesystemSpaceCritical
 @property  long long defaultUnlockAfterUsageSecs
 @property  long long maximumUnlockAfterUsageSecs
 @property  long long defaultPreventGarbageCollectionSecs
 @property  long long maximumPreventGarbageCollectionSecs
 @property  NSDictionary *additionalUpdatePolicyControl
 @property  BOOL allowAutoCheckForNewerWhenBatteryLow
 @property  BOOL allowAutoCheckForNewerWhenCPUHigh
 @property  BOOL allowAutoCheckForNewerOverExpensive
 @property  BOOL allowAutoDownloadWhenBatteryLow
 @property  BOOL allowAutoDownloadWhenCPUHigh
 @property  BOOL blockIfBeforeFirstUnlock
 @property  BOOL blockAutoCheckForNewerOverCellular
 @property  BOOL blockAutoDownloadOverCellular
 @property  BOOL blockUserInitiatedDownloadOverCellular
 @property  BOOL blockUserInitiatedDownloadWhenBatteryLow
 @property  BOOL blockUserInitiatedDownloadWhenCPUHigh
 @property  BOOL blockUserInitiatedDownloadOverExpensive
 @property  BOOL downloadWithoutPreferenceForWiFi
 @property  id limitCellularByRestrictedTimePeriods
 @property  id limitWiFiByRestrictedTimePeriods
 @property  id limitCellularByFeeAgreement
 @property  id limitByNetworkType
 @property  NSUUID *assetAudienceUUID

  // class methods
  +[MAAutoAssetUpdatePolicy supportsSecureCoding]
  +[MAAutoAssetUpdatePolicy activityIntervalString:]

  // instance methods
  -[MAAutoAssetUpdatePolicy blockUserInitiatedDownloadWhenBatteryLow]
  -[MAAutoAssetUpdatePolicy assetType]
  -[MAAutoAssetUpdatePolicy revokeIgnoredForLockedContent]
  -[MAAutoAssetUpdatePolicy newerFoundAutoDownloadPostponed]
  -[MAAutoAssetUpdatePolicy setAllowLockAcrossReboot:]
  -[MAAutoAssetUpdatePolicy updatePolicyName]
  -[MAAutoAssetUpdatePolicy allowAutoCheckForNewerWhenCPUHigh]
  -[MAAutoAssetUpdatePolicy blockUserInitiatedDownloadWhenCPUHigh]
  -[MAAutoAssetUpdatePolicy setNewerFoundUserInitiatedDownloadTimeoutSecs:]
  -[MAAutoAssetUpdatePolicy allowLockAcrossReboot]
  -[MAAutoAssetUpdatePolicy checkForNewerIntervalSecs]
  -[MAAutoAssetUpdatePolicy checkForNewerTimeoutSecs]
  -[MAAutoAssetUpdatePolicy allowLockWhenFilesystemSpaceCritical]
  -[MAAutoAssetUpdatePolicy encodeWithCoder:]
  -[MAAutoAssetUpdatePolicy setRevokeIgnoredForLockedContent:]
  -[MAAutoAssetUpdatePolicy setCheckForNewerAsUserInitiated:]
  -[MAAutoAssetUpdatePolicy setDownloadWithoutPreferenceForWiFi:]
  -[MAAutoAssetUpdatePolicy setAllowAutoCheckForNewerOverExpensive:]
  -[MAAutoAssetUpdatePolicy maximumUnlockAfterUsageSecs]
  -[MAAutoAssetUpdatePolicy assetAudienceUUID]
  -[MAAutoAssetUpdatePolicy setNewerFoundAutoDownloadPostponed:]
  -[MAAutoAssetUpdatePolicy allowLockAcrossTermination]
  -[MAAutoAssetUpdatePolicy revokeIgnoredForUnlockedPurge]
  -[MAAutoAssetUpdatePolicy setAllowAutoCheckForNewerWhenCPUHigh:]
  -[MAAutoAssetUpdatePolicy setCheckForNewerWithoutRampEnabled:]
  -[MAAutoAssetUpdatePolicy setAllowAutoCheckForNewerWhenBatteryLow:]
  -[MAAutoAssetUpdatePolicy setNewerFoundAutoDownloadTimeoutSecs:]
  -[MAAutoAssetUpdatePolicy setLimitCellularByFeeAgreement:]
  -[MAAutoAssetUpdatePolicy .cxx_destruct]
  -[MAAutoAssetUpdatePolicy setAdditionalUpdatePolicyControl:]
  -[MAAutoAssetUpdatePolicy allowLockAcrossOTAUpdate]
  -[MAAutoAssetUpdatePolicy allowLockOfRevokedContent]
  -[MAAutoAssetUpdatePolicy allowAutoCheckForNewerWhenBatteryLow]
  -[MAAutoAssetUpdatePolicy allowAutoCheckForNewerOverExpensive]
  -[MAAutoAssetUpdatePolicy summary]
  -[MAAutoAssetUpdatePolicy setCheckForNewerTimeoutSecs:]
  -[MAAutoAssetUpdatePolicy additionalUpdatePolicyControl]
  -[MAAutoAssetUpdatePolicy setLimitByNetworkType:]
  -[MAAutoAssetUpdatePolicy setAssetAudienceUUID:]
  -[MAAutoAssetUpdatePolicy checkForNewerAsUserInitiated]
  -[MAAutoAssetUpdatePolicy setBlockUserInitiatedDownloadOverCellular:]
  -[MAAutoAssetUpdatePolicy setMaximumUnlockAfterUsageSecs:]
  -[MAAutoAssetUpdatePolicy initUpdatePolicy:forAssetType:]
  -[MAAutoAssetUpdatePolicy setRevokeIgnoredForUnlockedPurge:]
  -[MAAutoAssetUpdatePolicy limitCellularByFeeAgreement]
  -[MAAutoAssetUpdatePolicy setLimitWiFiByRestrictedTimePeriods:]
  -[MAAutoAssetUpdatePolicy limitByNetworkType]
  -[MAAutoAssetUpdatePolicy newerFoundAutoDownloadJitterSecs]
  -[MAAutoAssetUpdatePolicy setBlockAutoDownloadOverCellular:]
  -[MAAutoAssetUpdatePolicy newerFoundAutoDownloadTimeoutSecs]
  -[MAAutoAssetUpdatePolicy setNewerFoundAutoDownloadJitterSecs:]
  -[MAAutoAssetUpdatePolicy setBlockAutoCheckForNewerOverCellular:]
  -[MAAutoAssetUpdatePolicy setLimitCellularByRestrictedTimePeriods:]
  -[MAAutoAssetUpdatePolicy setAllowLockOfRevokedContent:]
  -[MAAutoAssetUpdatePolicy setAllowLockWhenFilesystemSpaceCritical:]
  -[MAAutoAssetUpdatePolicy allowAutoDownloadWhenCPUHigh]
  -[MAAutoAssetUpdatePolicy setCheckForNewerIntervalSecs:]
  -[MAAutoAssetUpdatePolicy categoryList]
  -[MAAutoAssetUpdatePolicy blockIfBeforeFirstUnlock]
  -[MAAutoAssetUpdatePolicy setAllowLockAcrossTermination:]
  -[MAAutoAssetUpdatePolicy blockAutoCheckForNewerOverCellular]
  -[MAAutoAssetUpdatePolicy defaultUnlockAfterUsageSecs]
  -[MAAutoAssetUpdatePolicy setAllowInterestAcrossTermination:]
  -[MAAutoAssetUpdatePolicy allowAutoDownloadWhenBatteryLow]
  -[MAAutoAssetUpdatePolicy allowInterestAcrossTermination]
  -[MAAutoAssetUpdatePolicy setBlockUserInitiatedDownloadWhenCPUHigh:]
  -[MAAutoAssetUpdatePolicy blockUserInitiatedDownloadOverExpensive]
  -[MAAutoAssetUpdatePolicy defaultPreventGarbageCollectionSecs]
  -[MAAutoAssetUpdatePolicy setBlockIfBeforeFirstUnlock:]
  -[MAAutoAssetUpdatePolicy checkForNewerWithoutRampEnabled]
  -[MAAutoAssetUpdatePolicy setDefaultPreventGarbageCollectionSecs:]
  -[MAAutoAssetUpdatePolicy newerFoundUserInitiatedDownloadTimeoutSecs]
  -[MAAutoAssetUpdatePolicy setMaximumPreventGarbageCollectionSecs:]
  -[MAAutoAssetUpdatePolicy setAllowLockAcrossOTAUpdate:]
  -[MAAutoAssetUpdatePolicy maximumPreventGarbageCollectionSecs]
  -[MAAutoAssetUpdatePolicy setBlockUserInitiatedDownloadOverExpensive:]
  -[MAAutoAssetUpdatePolicy blockUserInitiatedDownloadOverCellular]
  -[MAAutoAssetUpdatePolicy setAllowAutoDownloadWhenCPUHigh:]
  -[MAAutoAssetUpdatePolicy revokeTriggersLockedPurge]
  -[MAAutoAssetUpdatePolicy blockAutoDownloadOverCellular]
  -[MAAutoAssetUpdatePolicy setBlockUserInitiatedDownloadWhenBatteryLow:]
  -[MAAutoAssetUpdatePolicy limitWiFiByRestrictedTimePeriods]
  -[MAAutoAssetUpdatePolicy downloadWithoutPreferenceForWiFi]
  -[MAAutoAssetUpdatePolicy setDefaultUnlockAfterUsageSecs:]
  -[MAAutoAssetUpdatePolicy setRevokeTriggersLockedPurge:]
  -[MAAutoAssetUpdatePolicy initWithCoder:]
  -[MAAutoAssetUpdatePolicy limitCellularByRestrictedTimePeriods]
  -[MAAutoAssetUpdatePolicy setAllowAutoDownloadWhenBatteryLow:]


MAAutoAssetNotifications : NSObject <NSSecureCoding>
 @property  BOOL newerVersionDiscovered
 @property  BOOL checkForNewerFailure
 @property  BOOL contentAvailableForUse
 @property  BOOL contentVersionRevoked
 @property  BOOL lockUsageCheck
 @property  BOOL filesystemSpaceCritical
 @property  BOOL assetPurged
 @property  BOOL downloadPending
 @property  BOOL downloadProgress
 @property  BOOL downloadAbandoned

  // class methods
  +[MAAutoAssetNotifications supportsSecureCoding]

  // instance methods
  -[MAAutoAssetNotifications downloadProgress]
  -[MAAutoAssetNotifications setDownloadPending:]
  -[MAAutoAssetNotifications setDownloadProgress:]
  -[MAAutoAssetNotifications contentVersionRevoked]
  -[MAAutoAssetNotifications setFilesystemSpaceCritical:]
  -[MAAutoAssetNotifications encodeWithCoder:]
  -[MAAutoAssetNotifications copy]
  -[MAAutoAssetNotifications filesystemSpaceCritical]
  -[MAAutoAssetNotifications newerVersionDiscovered]
  -[MAAutoAssetNotifications downloadAbandoned]
  -[MAAutoAssetNotifications assetPurged]
  -[MAAutoAssetNotifications summary]
  -[MAAutoAssetNotifications setCheckForNewerFailure:]
  -[MAAutoAssetNotifications setDownloadAbandoned:]
  -[MAAutoAssetNotifications setLockUsageCheck:]
  -[MAAutoAssetNotifications setNewerVersionDiscovered:]
  -[MAAutoAssetNotifications contentAvailableForUse]
  -[MAAutoAssetNotifications setContentVersionRevoked:]
  -[MAAutoAssetNotifications setContentAvailableForUse:]
  -[MAAutoAssetNotifications checkForNewerFailure]
  -[MAAutoAssetNotifications setAssetPurged:]
  -[MAAutoAssetNotifications lockUsageCheck]
  -[MAAutoAssetNotifications init]
  -[MAAutoAssetNotifications initWithCoder:]
  -[MAAutoAssetNotifications downloadPending]


MAAutoAssetControlStatisticsBySize : NSObject <NSSecureCoding>
 @property  long long patchedAssets
 @property  long long patchedBytes
 @property  long long fullAssets
 @property  long long fullBytes

  // class methods
  +[MAAutoAssetControlStatisticsBySize supportsSecureCoding]

  // instance methods
  -[MAAutoAssetControlStatisticsBySize initWithInitialValue:]
  -[MAAutoAssetControlStatisticsBySize patchedAssets]
  -[MAAutoAssetControlStatisticsBySize encodeWithCoder:]
  -[MAAutoAssetControlStatisticsBySize copy]
  -[MAAutoAssetControlStatisticsBySize summary]
  -[MAAutoAssetControlStatisticsBySize setFullBytes:]
  -[MAAutoAssetControlStatisticsBySize setFullAssets:]
  -[MAAutoAssetControlStatisticsBySize setPatchedAssets:]
  -[MAAutoAssetControlStatisticsBySize fullBytes]
  -[MAAutoAssetControlStatisticsBySize patchedBytes]
  -[MAAutoAssetControlStatisticsBySize fullAssets]
  -[MAAutoAssetControlStatisticsBySize setPatchedBytes:]
  -[MAAutoAssetControlStatisticsBySize init]
  -[MAAutoAssetControlStatisticsBySize initWithCoder:]


MAAutoAssetInfoControl : NSObject <NSSecureCoding>
 @property  BOOL clearingAfter
 @property  BOOL forceUnlock
 @property  NSArray *limitedToAssetTypes
 @property  NSString *volumeToReclaim
 @property  int cacheDeleteUrgency
 @property  long long targetingPurgeAmount
 @property  long long simulateOperation
 @property  long long simulateEnd

  // class methods
  +[MAAutoAssetInfoControl supportsSecureCoding]
  +[MAAutoAssetInfoControl nameOfSimulateOperation:]
  +[MAAutoAssetInfoControl nameOfSimulateEnd:]

  // instance methods
  -[MAAutoAssetInfoControl encodeWithCoder:]
  -[MAAutoAssetInfoControl .cxx_destruct]
  -[MAAutoAssetInfoControl summary]
  -[MAAutoAssetInfoControl simulateEnd]
  -[MAAutoAssetInfoControl targetingPurgeAmount]
  -[MAAutoAssetInfoControl cacheDeleteUrgency]
  -[MAAutoAssetInfoControl simulateOperation]
  -[MAAutoAssetInfoControl initWithCoder:]
  -[MAAutoAssetInfoControl initClearingAfter:]
  -[MAAutoAssetInfoControl initClearingAfter:limitedToAssetTypes:]
  -[MAAutoAssetInfoControl initForcingUnlock:]
  -[MAAutoAssetInfoControl initWithVolumeToReclaim:withUrgency:targetingPurgeAmount:]
  -[MAAutoAssetInfoControl initForSimulateOperation:withSimulateEnd:]
  -[MAAutoAssetInfoControl initClearingAfter:forcingUnlock:limitedToAssetTypes:withVolumeToReclaim:withUrgency:targetingPurgeAmount:simulateOperation:simulateEnd:]
  -[MAAutoAssetInfoControl clearingAfter]
  -[MAAutoAssetInfoControl forceUnlock]
  -[MAAutoAssetInfoControl limitedToAssetTypes]
  -[MAAutoAssetInfoControl volumeToReclaim]


MAAutoAssetLockTracker : NSObject <NSSecureCoding>
 @property  MAAutoAssetLockReason *clientLockReason
 @property  MAAutoAssetPolicy *lockUsagePolicy
 @property  long long activeLockCount
 @property  long long maximumLockCount
 @property  long long totalLockCount
 @property  long long continueCount
 @property  NSDate *firstLockTimestamp
 @property  NSDate *lastRefreshTimestamp

  // class methods
  +[MAAutoAssetLockTracker supportsSecureCoding]
  +[MAAutoAssetLockTracker summaryPaddedHeader:]
  +[MAAutoAssetLockTracker summaryNewMaxColumnStrings]
  +[MAAutoAssetLockTracker summaryPaddedString:paddingToLenghtOfString:paddingWith:paddingBefore:]
  +[MAAutoAssetLockTracker summaryPaddedBanner:]

  // instance methods
  -[MAAutoAssetLockTracker initForClientLockReason:lockingWithUsagePolicy:]
  -[MAAutoAssetLockTracker firstLockTimestamp]
  -[MAAutoAssetLockTracker encodeWithCoder:]
  -[MAAutoAssetLockTracker copy]
  -[MAAutoAssetLockTracker setContinueCount:]
  -[MAAutoAssetLockTracker setActiveLockCount:]
  -[MAAutoAssetLockTracker setLockUsagePolicy:]
  -[MAAutoAssetLockTracker maximumLockCount]
  -[MAAutoAssetLockTracker .cxx_destruct]
  -[MAAutoAssetLockTracker summary]
  -[MAAutoAssetLockTracker activeLockCount]
  -[MAAutoAssetLockTracker summaryPadded:]
  -[MAAutoAssetLockTracker setLastRefreshTimestamp:]
  -[MAAutoAssetLockTracker setMaximumLockCount:]
  -[MAAutoAssetLockTracker totalLockCount]
  -[MAAutoAssetLockTracker clientLockReason]
  -[MAAutoAssetLockTracker summaryBuildMaxColumnStrings:]
  -[MAAutoAssetLockTracker continueCount]
  -[MAAutoAssetLockTracker lastRefreshTimestamp]
  -[MAAutoAssetLockTracker lockUsagePolicy]
  -[MAAutoAssetLockTracker setFirstLockTimestamp:]
  -[MAAutoAssetLockTracker initWithCoder:]
  -[MAAutoAssetLockTracker setTotalLockCount:]


MAAutoAssetInfoFound : NSObject <NSSecureCoding>
 @property  MAAutoAssetSelector *fullAssetSelector
 @property  NSURL *localContentURL
 @property  NSDictionary *assetAttributes
 @property  MAAutoAssetStatus *currentStatus

  // class methods
  +[MAAutoAssetInfoFound supportsSecureCoding]

  // instance methods
  -[MAAutoAssetInfoFound fullAssetSelector]
  -[MAAutoAssetInfoFound assetAttributes]
  -[MAAutoAssetInfoFound localContentURL]
  -[MAAutoAssetInfoFound currentStatus]
  -[MAAutoAssetInfoFound encodeWithCoder:]
  -[MAAutoAssetInfoFound .cxx_destruct]
  -[MAAutoAssetInfoFound initForSelector:withLocalContentURL:withAssetAttributes:reportingStatus:]
  -[MAAutoAssetInfoFound summary]
  -[MAAutoAssetInfoFound initWithCoder:]


MAAutoAsset : NSObject <SUCoreConnectClientDelegate, NSSecureCoding>
 @property  MAAutoAssetSelector *contentLockedSelector
 @property  NSString *contentLockedReason
 @property  NSURL *localContentURL
 @property  NSDictionary *assetAttributes
 @property  NSObject<OS_dispatch_queue> *completionDispatchQueue
 @property  NSString *clientProcessName
 @property  long long clientProcessID
 @property  SUCoreConnectClient *connectionClient
 @property  int locksOfContent
 @property  NSString *autoAssetClientName
 @property  MAAutoAssetSelector *assetSelector
 @property  NSString *updateCategoryDesiredByClient
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MAAutoAsset supportsSecureCoding]
  +[MAAutoAsset endPreviousLocksOfReasonSync:forAssetSelector:removingLockCount:]
  +[MAAutoAsset eliminatePromotedNeverLockedForSelectorSync:]
  +[MAAutoAsset stagePurgeAllSync]
  +[MAAutoAsset interestInContent:forAssetSelector:withInterestPolicy:completion:]
  +[MAAutoAsset eliminatePromotedNeverLockedForSelector:completion:]
  +[MAAutoAsset interestInContentSync:forAssetSelector:]
  +[MAAutoAsset endAllPreviousLocksOfSelectorSync:]
  +[MAAutoAsset assetSelectorForAssetTargetOSVersion:forTargetBuildVersion:]
  +[MAAutoAsset endAllPreviousLocksOfReason:forClientName:forAssetSelector:completion:]
  +[MAAutoAsset endAllPreviousLocksOfReasonSync:forClientName:forAssetSelector:]
  +[MAAutoAsset frameworkDispatchQueue]
  +[MAAutoAsset frameworkInstanceUUID]
  +[MAAutoAsset endAllPreviousLocksOfSelectorSync:forClientName:]
  +[MAAutoAsset endAllPreviousLocksOfSelector:forClientName:completion:]
  +[MAAutoAsset stageDetermineAllAvailableSync:forTargetBuildVersion:totalExpectedBytes:error:]
  +[MAAutoAsset eliminateAllForAssetType:completion:]
  +[MAAutoAsset stagePurgeAll:]
  +[MAAutoAsset endAllPreviousLocksOfSelector:completion:]
  +[MAAutoAsset determineIfAvailable:forAssetSelector:completion:]
  +[MAAutoAsset stageDownloadAllSync:assetsSuccessfullyStaged:error:reportingProgress:]
  +[MAAutoAsset waitOnSemaphore:withDaemonTriggeredTimeout:]
  +[MAAutoAsset determineIfAvailableSync:forAssetSelector:discoveredAttributes:error:]
  +[MAAutoAsset frameworkInstanceSetLogDomain]
  +[MAAutoAsset stageDetermineAllAvailable:forTargetBuildVersion:completion:]
  +[MAAutoAsset endAllPreviousLocksOfReasonSync:forAssetSelector:]
  +[MAAutoAsset eliminateAllForAssetTypeSync:]
  +[MAAutoAsset interestInContent:forAssetSelector:completion:]
  +[MAAutoAsset eliminateAllForSelectorSync:]
  +[MAAutoAsset eliminateAllForSelector:completion:]
  +[MAAutoAsset endAllPreviousLocksOfReason:forAssetSelector:completion:]
  +[MAAutoAsset endPreviousLocksOfReason:forAssetSelector:removingLockCount:completion:]
  +[MAAutoAsset stageDownloadAll:reportingProgress:completion:]
  +[MAAutoAsset endPreviousLocksOfReasonSync:forClientName:forAssetSelector:removingLockCount:]
  +[MAAutoAsset endPreviousLocksOfReason:forClientName:forAssetSelector:removingLockCount:completion:]
  +[MAAutoAsset interestInContentSync:forAssetSelector:withInterestPolicy:]
  +[MAAutoAsset defaultDispatchQueue]

  // instance methods
  -[MAAutoAsset _failedDetermineIfAvailable:withResponseError:description:completion:]
  -[MAAutoAsset assetAttributes]
  -[MAAutoAsset _endAllPreviousLocksOfReasonSync:]
  -[MAAutoAsset localContentURL]
  -[MAAutoAsset lockContentSync:withTimeout:lockedAssetSelector:newerInProgress:error:]
  -[MAAutoAsset _eliminateAllForSelectorSync]
  -[MAAutoAsset connectionClosed]
  -[MAAutoAsset assetAttribute:]
  -[MAAutoAsset determineIfAvailable:withTimeout:completion:]
  -[MAAutoAsset _eliminatePromotedNeverLockedForSelector:]
  -[MAAutoAsset clientProcessName]
  -[MAAutoAsset connectToServerFrameworkCompletion:]
  -[MAAutoAsset _failedContinueLockUsage:withResponseError:description:completion:]
  -[MAAutoAsset clientProcessID]
  -[MAAutoAsset continueLockUsageSync:]
  -[MAAutoAsset lockContent:withTimeout:reportingProgress:completion:]
  -[MAAutoAsset initForClientName:selectingAsset:usingDesiredPolicyCategory:error:]
  -[MAAutoAsset checkForNewerSync:withUsagePolicy:withTimeout:discoveredAttributes:error:]
  -[MAAutoAsset currentStatusSync:]
  -[MAAutoAsset interestInContentSync:withInterestPolicy:]
  -[MAAutoAsset encodeWithCoder:]
  -[MAAutoAsset _eliminateAllForSelector:]
  -[MAAutoAsset contentLockedReason]
  -[MAAutoAsset completionDispatchQueue]
  -[MAAutoAsset _newProxyObjectForLockProgressBlock:]
  -[MAAutoAsset interestInContent:withInterestPolicy:completion:]
  -[MAAutoAsset _lockContentStatusProgress:lockForUseError:progressBlock:]
  -[MAAutoAsset _successLockContent:dueToDesire:completion:]
  -[MAAutoAsset _successEndLockUsage:completion:]
  -[MAAutoAsset _successInterestInContent:completion:]
  -[MAAutoAsset setContentLockedReason:]
  -[MAAutoAsset checkForNewer:withUsagePolicy:withTimeout:completion:]
  -[MAAutoAsset handleResponse:error:]
  -[MAAutoAsset .cxx_destruct]
  -[MAAutoAsset lockContent:withUsagePolicy:withTimeout:reportingProgress:completion:]
  -[MAAutoAsset lockContent:withUsagePolicy:withTimeout:completion:]
  -[MAAutoAsset _stageDetermineAllAvailable:forTargetBuildVersion:completion:]
  -[MAAutoAsset _failedLockContent:withResponseError:description:completion:]
  -[MAAutoAsset lockContentSync:withTimeout:lockedAssetSelector:newerInProgress:error:reportingProgress:]
  -[MAAutoAsset _successCheckForNewer:completion:]
  -[MAAutoAsset checkForNewerSync:withTimeout:discoveredAttributes:error:]
  -[MAAutoAsset handleMessage:reply:]
  -[MAAutoAsset _stagePurgeAll:]
  -[MAAutoAsset summary]
  -[MAAutoAsset _eliminateAllForAssetTypeSync]
  -[MAAutoAsset setAssetAttributes:]
  -[MAAutoAsset initForClientName:selectingAsset:usingDesiredPolicyCategory:completingFromQueue:error:]
  -[MAAutoAsset _failedStageDownloadAll:withResponseError:description:completion:]
  -[MAAutoAsset _endAllPreviousLocksOfReason:completion:]
  -[MAAutoAsset _successEliminate:]
  -[MAAutoAsset _stagePurgeAllSync]
  -[MAAutoAsset continueLockUsage:completion:]
  -[MAAutoAsset updateCategoryDesiredByClient]
  -[MAAutoAsset _successContinueLockUsage:completion:]
  -[MAAutoAsset _stageDownloadAllSync:assetsSuccessfullyStaged:error:reportingProgress:]
  -[MAAutoAsset _successDetermineIfAvailable:completion:]
  -[MAAutoAsset _failedStageDetermineAllAvailable:withResponseError:description:completion:]
  -[MAAutoAsset _stageDetermineAllAvailableSync:forTargetBuildVersion:totalExpectedBytes:error:]
  -[MAAutoAsset _failedCurrentStatus:withResponseError:description:completion:]
  -[MAAutoAsset currentStatus:]
  -[MAAutoAsset interestInContentSync:]
  -[MAAutoAsset determineIfAvailableSync:withTimeout:discoveredAttributes:error:]
  -[MAAutoAsset _newProxyObjectForStageProgressBlock:]
  -[MAAutoAsset continueLockUsageSync:withUsagePolicy:]
  -[MAAutoAsset lockContentSync:withUsagePolicy:withTimeout:lockedAssetSelector:newerInProgress:error:reportingProgress:]
  -[MAAutoAsset initForClientName:selectingAsset:error:]
  -[MAAutoAsset continueLockUsage:withUsagePolicy:completion:]
  -[MAAutoAsset _eliminateAllForAssetType:]
  -[MAAutoAsset assetSelector]
  -[MAAutoAsset _failedCheckForNewer:withResponseError:description:completion:]
  -[MAAutoAsset setContentLockedSelector:]
  -[MAAutoAsset endLockUsageSync:]
  -[MAAutoAsset _failedEndLockUsage:withResponseError:description:completion:]
  -[MAAutoAsset connectionClient]
  -[MAAutoAsset _successStagePurgeAll:]
  -[MAAutoAsset _failedStagePurgeAll:withResponseError:description:completion:]
  -[MAAutoAsset setLocalContentURL:]
  -[MAAutoAsset setConnectionClient:]
  -[MAAutoAsset locksOfContent]
  -[MAAutoAsset interestInContent:completion:]
  -[MAAutoAsset _successStageDownloadAll:completion:]
  -[MAAutoAsset endLockUsage:completion:]
  -[MAAutoAsset lockContent:withTimeout:completion:]
  -[MAAutoAsset _successCurrentStatus:completion:]
  -[MAAutoAsset lockContentSync:withUsagePolicy:withTimeout:lockedAssetSelector:newerInProgress:error:]
  -[MAAutoAsset _stageDownloadAllStatusProgress:stageProgressError:progressBlock:]
  -[MAAutoAsset _failedInterestInContent:withResponseError:description:completion:]
  -[MAAutoAsset checkForNewer:withTimeout:completion:]
  -[MAAutoAsset _endPreviousLocksOfReasonSync:removingLockCount:]
  -[MAAutoAsset _stageDownloadAll:reportingProgress:completion:]
  -[MAAutoAsset contentLockedSelector]
  -[MAAutoAsset setLocksOfContent:]
  -[MAAutoAsset _eliminatePromotedNeverLockedForSelectorSync]
  -[MAAutoAsset initForClientName:selectingAsset:completingFromQueue:error:]
  -[MAAutoAsset autoAssetClientName]
  -[MAAutoAsset _failedEliminate:withResponseError:description:completion:]
  -[MAAutoAsset initWithCoder:]
  -[MAAutoAsset _successStageDetermineAllAvailable:completion:]
  -[MAAutoAsset _endPreviousLocksOfReason:removingLockCount:completion:]


MAAutoAssetControlStatistics : NSObject <NSSecureCoding>
 @property  MAAutoAssetControlStatisticsByCommand *totalClientRequests
 @property  MAAutoAssetControlStatisticsByCommand *totalClientRepliesSuccess
 @property  MAAutoAssetControlStatisticsByCommand *totalClientRepliesFailure
 @property  MAAutoAssetControlStatisticsByCommand *totalQueuedClientRequests
 @property  MAAutoAssetControlStatisticsByCommand *totalDequeuedClientRequests
 @property  long long totalAutoAssetJobsStarted
 @property  long long totalAutoJobsFinished
 @property  long long totalStagerDetermineJobsStarted
 @property  long long totalStagerDetermineJobsFinished
 @property  long long totalStagerDownloadJobsStarted
 @property  long long totalStagerDownloadJobsFinished
 @property  long long totalResumedInFlightJobs
 @property  long long totalSchedulerTriggeredJobs
 @property  long long totalFailuresToStartJobs
 @property  MAAutoAssetControlStatisticsBySize *previouslyDownloaded
 @property  MAAutoAssetControlStatisticsBySize *totalDownloaded
 @property  MAAutoAssetControlStatisticsBySize *totalStaged
 @property  MAAutoAssetControlStatisticsBySize *totalUnstaged
 @property  MAAutoAssetControlStatisticsBySize *totalPromoted
 @property  MAAutoAssetControlStatisticsBySize *totalRemoved
 @property  BOOL garbageCollectionPerformed
 @property  BOOL garbageCollectionReclaimSpace
 @property  long long garbageCollectionTotalReclaimedSpace
 @property  long long garbageCollectionReclaimedV2AssetCount
 @property  long long garbageCollectionReclaimedV2AssetSpace
 @property  long long garbageCollectionReclaimedUnlockedCount
 @property  long long garbageCollectionReclaimedUnlockedSpace
 @property  long long garbageCollectionReclaimedLockedOverridableCount
 @property  long long garbageCollectionReclaimedLockedOverridableSpace
 @property  long long garbageCollectionReclaimedLockedNeverRemoveCount
 @property  long long garbageCollectionReclaimedLockedNeverRemoveSpace
 @property  long long garbageCollectionReclaimedStagedCount
 @property  long long garbageCollectionReclaimedStagedSpace
 @property  long long garbageCollectionReclaimedMetadataBlockedCount
 @property  long long garbageCollectionReclaimedMetadataBlockedSpace

  // class methods
  +[MAAutoAssetControlStatistics supportsSecureCoding]
  +[MAAutoAssetControlStatistics allocStringForBytes:]

  // instance methods
  -[MAAutoAssetControlStatistics totalDequeuedClientRequests]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimedLockedNeverRemoveSpace]
  -[MAAutoAssetControlStatistics totalClientRequests]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimedMetadataBlockedSpace:]
  -[MAAutoAssetControlStatistics setTotalRemoved:]
  -[MAAutoAssetControlStatistics totalPromoted]
  -[MAAutoAssetControlStatistics setTotalSchedulerTriggeredJobs:]
  -[MAAutoAssetControlStatistics totalSchedulerTriggeredJobs]
  -[MAAutoAssetControlStatistics initWithInitialValue:]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimedLockedOverridableCount:]
  -[MAAutoAssetControlStatistics encodeWithCoder:]
  -[MAAutoAssetControlStatistics copy]
  -[MAAutoAssetControlStatistics setGarbageCollectionPerformed:]
  -[MAAutoAssetControlStatistics setTotalDownloaded:]
  -[MAAutoAssetControlStatistics setTotalClientRepliesFailure:]
  -[MAAutoAssetControlStatistics totalUnstaged]
  -[MAAutoAssetControlStatistics setTotalStagerDetermineJobsFinished:]
  -[MAAutoAssetControlStatistics setTotalClientRequests:]
  -[MAAutoAssetControlStatistics totalRemoved]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimedMetadataBlockedSpace]
  -[MAAutoAssetControlStatistics setTotalStagerDownloadJobsFinished:]
  -[MAAutoAssetControlStatistics totalQueuedClientRequests]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimedUnlockedSpace]
  -[MAAutoAssetControlStatistics setPreviouslyDownloaded:]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimedLockedNeverRemoveCount]
  -[MAAutoAssetControlStatistics .cxx_destruct]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimedLockedOverridableCount]
  -[MAAutoAssetControlStatistics setTotalResumedInFlightJobs:]
  -[MAAutoAssetControlStatistics setTotalFailuresToStartJobs:]
  -[MAAutoAssetControlStatistics summary]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimedStagedSpace]
  -[MAAutoAssetControlStatistics totalStagerDetermineJobsStarted]
  -[MAAutoAssetControlStatistics totalStagerDownloadJobsStarted]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimedMetadataBlockedCount:]
  -[MAAutoAssetControlStatistics totalFailuresToStartJobs]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimedLockedOverridableSpace]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimedUnlockedSpace:]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimedLockedNeverRemoveCount:]
  -[MAAutoAssetControlStatistics totalClientRepliesSuccess]
  -[MAAutoAssetControlStatistics setTotalClientRepliesSuccess:]
  -[MAAutoAssetControlStatistics totalAutoJobsFinished]
  -[MAAutoAssetControlStatistics totalStagerDownloadJobsFinished]
  -[MAAutoAssetControlStatistics totalDownloaded]
  -[MAAutoAssetControlStatistics totalStagerDetermineJobsFinished]
  -[MAAutoAssetControlStatistics totalStaged]
  -[MAAutoAssetControlStatistics setTotalUnstaged:]
  -[MAAutoAssetControlStatistics previouslyDownloaded]
  -[MAAutoAssetControlStatistics setTotalAutoJobsFinished:]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimedStagedCount]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimSpace]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimSpace:]
  -[MAAutoAssetControlStatistics totalResumedInFlightJobs]
  -[MAAutoAssetControlStatistics setTotalAutoAssetJobsStarted:]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimedStagedSpace:]
  -[MAAutoAssetControlStatistics setTotalPromoted:]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimedLockedNeverRemoveSpace:]
  -[MAAutoAssetControlStatistics setTotalStaged:]
  -[MAAutoAssetControlStatistics totalAutoAssetJobsStarted]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimedMetadataBlockedCount]
  -[MAAutoAssetControlStatistics setTotalDequeuedClientRequests:]
  -[MAAutoAssetControlStatistics setTotalStagerDownloadJobsStarted:]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimedStagedCount:]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimedUnlockedCount]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimedV2AssetCount:]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimedV2AssetSpace:]
  -[MAAutoAssetControlStatistics setGarbageCollectionTotalReclaimedSpace:]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimedUnlockedCount:]
  -[MAAutoAssetControlStatistics garbageCollectionPerformed]
  -[MAAutoAssetControlStatistics setGarbageCollectionReclaimedLockedOverridableSpace:]
  -[MAAutoAssetControlStatistics setTotalQueuedClientRequests:]
  -[MAAutoAssetControlStatistics init]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimedV2AssetCount]
  -[MAAutoAssetControlStatistics totalClientRepliesFailure]
  -[MAAutoAssetControlStatistics garbageCollectionTotalReclaimedSpace]
  -[MAAutoAssetControlStatistics initWithCoder:]
  -[MAAutoAssetControlStatistics setTotalStagerDetermineJobsStarted:]
  -[MAAutoAssetControlStatistics garbageCollectionReclaimedV2AssetSpace]


MAAutoAssetControl : NSObject <SUCoreConnectClientDelegate>
 @property  NSString *controlClientName
 @property  NSString *controlClientProcessName
 @property  long long controlClientProcessID
 @property  NSObject<OS_dispatch_queue> *completionDispatchQueue
 @property  SUCoreConnectClient *connectionClient
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MAAutoAssetControl frameworkDispatchQueue]
  +[MAAutoAssetControl frameworkInstanceUUID]
  +[MAAutoAssetControl frameworkInstanceSetLogDomain]
  +[MAAutoAssetControl forceGlobalForget:]
  +[MAAutoAssetControl forceGlobalUnlock:]
  +[MAAutoAssetControl defaultDispatchQueue]
  +[MAAutoAssetControl controlStatistics:error:]
  +[MAAutoAssetControl knownAssetSummary:error:]
  +[MAAutoAssetControl knownAssetSummary:limitedToAssetTypes:error:]
  +[MAAutoAssetControl lockedAssetSummary:error:]
  +[MAAutoAssetControl lockedAssetSummary:limitedToAssetTypes:error:]
  +[MAAutoAssetControl stagedAssetSummary:error:]
  +[MAAutoAssetControl stagedAssetSummary:limitedToAssetTypes:error:]
  +[MAAutoAssetControl activeJobSummary:error:]
  +[MAAutoAssetControl activeJobSummary:limitedToAssetTypes:error:]
  +[MAAutoAssetControl scheduledJobSummary:error:]
  +[MAAutoAssetControl scheduledJobSummary:limitedToAssetTypes:error:]
  +[MAAutoAssetControl forceGlobalPurge:forcingUnlock:]
  +[MAAutoAssetControl forceGlobalAbandon:]
  +[MAAutoAssetControl simulateCacheDeleteDetermineReclaimableSpace:withUrgency:error:]
  +[MAAutoAssetControl simulateCacheDeleteReclaimSpace:withUrgency:targetingPurgeAmount:error:]
  +[MAAutoAssetControl simulateSetJobOperation:withEndEvent:forSelector:]
  +[MAAutoAssetControl autoAssetControl]
  +[MAAutoAssetControl assetSelectorOrAllSelector:]
  +[MAAutoAssetControl pushNotificationHistory:error:]
  +[MAAutoAssetControl waitOnSemaphore:withTimeout:]

  // instance methods
  -[MAAutoAssetControl connectionClosed]
  -[MAAutoAssetControl connectToServerFrameworkCompletion:]
  -[MAAutoAssetControl completionDispatchQueue]
  -[MAAutoAssetControl handleResponse:error:]
  -[MAAutoAssetControl .cxx_destruct]
  -[MAAutoAssetControl handleMessage:reply:]
  -[MAAutoAssetControl connectionClient]
  -[MAAutoAssetControl setConnectionClient:]
  -[MAAutoAssetControl init]
  -[MAAutoAssetControl _controlStatistics:completion:]
  -[MAAutoAssetControl _knownAssetSummary:limitedToAssetTypes:completion:]
  -[MAAutoAssetControl _lockedAssetSummary:limitedToAssetTypes:completion:]
  -[MAAutoAssetControl _stagedAssetSummary:limitedToAssetTypes:completion:]
  -[MAAutoAssetControl _activeJobSummary:limitedToAssetTypes:completion:]
  -[MAAutoAssetControl _scheduledJobSummary:limitedToAssetTypes:completion:]
  -[MAAutoAssetControl _forceGlobalUnlock:completion:]
  -[MAAutoAssetControl _forceGlobalForget:completion:]
  -[MAAutoAssetControl _forceGlobalPurge:forcingUnlock:completion:]
  -[MAAutoAssetControl _forceGlobalAbandon:completion:]
  -[MAAutoAssetControl _simulateCacheDeleteDetermineReclaimableSpace:withUrgency:error:completion:]
  -[MAAutoAssetControl _simulateCacheDeleteReclaimSpace:withUrgency:targetingPurgeAmount:error:completion:]
  -[MAAutoAssetControl _simulateSetJobOperation:withEndEvent:forSelector:completion:]
  -[MAAutoAssetControl _successControlStatistics:withControlStatistics:completion:]
  -[MAAutoAssetControl _failedControlStatistics:withErrorCode:withResponseError:description:completion:]
  -[MAAutoAssetControl _successControl:completion:]
  -[MAAutoAssetControl _failedControl:withErrorCode:withResponseError:description:completion:]
  -[MAAutoAssetControl _successControlSummary:withJobSummaryEntries:completion:]
  -[MAAutoAssetControl _failedControlSummary:withErrorCode:withResponseError:description:completion:]
  -[MAAutoAssetControl _successControlLockSummary:withLockSummaryEntries:completion:]
  -[MAAutoAssetControl _failedControlLockSummary:withErrorCode:withResponseError:description:completion:]
  -[MAAutoAssetControl _successSimulateCacheDeleteOperation:withReclaimableSpace:completion:]
  -[MAAutoAssetControl _failedSimulateCacheDeleteOperation:withErrorCode:withResponseError:description:completion:]
  -[MAAutoAssetControl controlClientName]
  -[MAAutoAssetControl controlClientProcessName]
  -[MAAutoAssetControl controlClientProcessID]


MAAssetDiff : NSObject <NSSecureCoding>
  // class methods
  +[MAAssetDiff supportsSecureCoding]
  +[MAAssetDiff requireSameAssetTypeAndAssetId]
  +[MAAssetDiff requireSameAssetTypeAndDownloadContent]
  +[MAAssetDiff requireSameAssetTypeAndAllAttributes]
  +[MAAssetDiff defaultAllowedDifferences]
  +[MAAssetDiff allowEverythingDifferent]

  // instance methods
  -[MAAssetDiff encodeWithCoder:]
  -[MAAssetDiff category]
  -[MAAssetDiff .cxx_destruct]
  -[MAAssetDiff summary]
  -[MAAssetDiff encodeAsPlist]
  -[MAAssetDiff initWithPlist:]
  -[MAAssetDiff initWithCoder:]
  -[MAAssetDiff initDifferentAssetType:assetId:attributes:assetIdAttributes:dynamicAssetId:nonIdAttributes:content:url:policy:]
  -[MAAssetDiff initFromDiff:]
  -[MAAssetDiff initFromInverseOfCategories:]
  -[MAAssetDiff isAnythingDifferent]
  -[MAAssetDiff isSameAssetType]
  -[MAAssetDiff isSameForAllAttributes]
  -[MAAssetDiff isSameAssetId]
  -[MAAssetDiff isSameForNonAssetIdAttributes]
  -[MAAssetDiff isSameDownloadContent]
  -[MAAssetDiff isSameDownloadUrl]
  -[MAAssetDiff isSameDownloadPolicy]
  -[MAAssetDiff hasOnlyAllowedDifferences:]


MAAutoAssetLock : NSObject <NSSecureCoding>
 @property  MAAutoAssetSelector *fullAssetSelector
 @property  NSURL *localContentURL
 @property  NSDictionary *assetAttributes
 @property  BOOL inhibitedFromEmergencyRemoval
 @property  NSMutableDictionary *lockReasons

  // class methods
  +[MAAutoAssetLock supportsSecureCoding]

  // instance methods
  -[MAAutoAssetLock fullAssetSelector]
  -[MAAutoAssetLock assetAttributes]
  -[MAAutoAssetLock localContentURL]
  -[MAAutoAssetLock encodeWithCoder:]
  -[MAAutoAssetLock inhibitedFromEmergencyRemoval]
  -[MAAutoAssetLock lockReasons]
  -[MAAutoAssetLock .cxx_destruct]
  -[MAAutoAssetLock summary]
  -[MAAutoAssetLock initForSelector:withLocalContentURL:withAssetAttributes:]
  -[MAAutoAssetLock setLockReasons:]
  -[MAAutoAssetLock initWithCoder:]
  -[MAAutoAssetLock setInhibitedFromEmergencyRemoval:]


MAAutoAssetProgress : NSObject <NSSecureCoding>
 @property  long long totalExpectedBytes
 @property  long long totalWrittenBytes
 @property  BOOL isStalled
 @property  double expectedTimeRemainingSecs

  // class methods
  +[MAAutoAssetProgress supportsSecureCoding]

  // instance methods
  -[MAAutoAssetProgress encodeWithCoder:]
  -[MAAutoAssetProgress copy]
  -[MAAutoAssetProgress totalExpectedBytes]
  -[MAAutoAssetProgress summary]
  -[MAAutoAssetProgress isStalled]
  -[MAAutoAssetProgress isEqual:]
  -[MAAutoAssetProgress init]
  -[MAAutoAssetProgress setTotalExpectedBytes:]
  -[MAAutoAssetProgress initWithCoder:]
  -[MAAutoAssetProgress totalWrittenBytes]
  -[MAAutoAssetProgress setTotalWrittenBytes:]
  -[MAAutoAssetProgress setIsStalled:]
  -[MAAutoAssetProgress expectedTimeRemainingSecs]
  -[MAAutoAssetProgress setExpectedTimeRemainingSecs:]


MAAutoAssetSelector : NSObject <NSSecureCoding>
 @property  NSString *assetVersion
 @property  NSString *assetType
 @property  NSString *assetSpecifier
 @property  NSData *downloadDecryptionKey

  // class methods
  +[MAAutoAssetSelector supportsSecureCoding]

  // instance methods
  -[MAAutoAssetSelector assetType]
  -[MAAutoAssetSelector assetVersion]
  -[MAAutoAssetSelector initForAssetType:]
  -[MAAutoAssetSelector encodeWithCoder:]
  -[MAAutoAssetSelector copy]
  -[MAAutoAssetSelector setAssetVersion:]
  -[MAAutoAssetSelector assignAssetVersion:]
  -[MAAutoAssetSelector .cxx_destruct]
  -[MAAutoAssetSelector assetSpecifier]
  -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:]
  -[MAAutoAssetSelector summary]
  -[MAAutoAssetSelector downloadDecryptionKey]
  -[MAAutoAssetSelector persistedEntryID]
  -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:usingDecryptionKey:]
  -[MAAutoAssetSelector isEqual:]
  -[MAAutoAssetSelector copyClearingWriteOnlyFields]
  -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:usingDecryptionKey:]
  -[MAAutoAssetSelector initForAssetType:withAssetSpecifier:matchingAssetVersion:]
  -[MAAutoAssetSelector initWithCoder:]


MAPushNotificationController : NSObject <MAServiceClientProtocol>
 @property  NSXPCConnection *serviceConnection
 @property  NSLock *serviceConnectionLock

  // class methods
  +[MAPushNotificationController sharedInstance]

  // instance methods
  -[MAPushNotificationController unsubscribeToChannelWithIdentifier:]
  -[MAPushNotificationController subscribeToChannelWithIdentifier:]
  -[MAPushNotificationController .cxx_destruct]
  -[MAPushNotificationController serviceConnection]
  -[MAPushNotificationController addSyntheticJobWithType:assetSpecifier:matchingAssetVersion:triggerInterval:]
  -[MAPushNotificationController subscribedChannelIDsWithCompletion:]
  -[MAPushNotificationController synchronousProxy]
  -[MAPushNotificationController _serviceConnection]
  -[MAPushNotificationController unsubscribeFromAllChannels]
  -[MAPushNotificationController init]
  -[MAPushNotificationController setServiceConnection:]
  -[MAPushNotificationController didReceivePushNotificationWithInfo:]
  -[MAPushNotificationController asyncProxy]
  -[MAPushNotificationController asyncSubscribeToChannelWithIdentifier:]
  -[MAPushNotificationController asyncUnsubscribeToChannelWithIdentifier:]
  -[MAPushNotificationController subscribedChannelIDs]
  -[MAPushNotificationController triggerNotificationWithPayload:]
  -[MAPushNotificationController pushJobDescriptions]
  -[MAPushNotificationController serviceConnectionLock]
  -[MAPushNotificationController setServiceConnectionLock:]


MADownloadOptions : NSObject <NSSecureCoding>
 @property  BOOL allowsCellularAccess
 @property  long long timeoutIntervalForResource
 @property  BOOL discretionary
 @property  BOOL allowsExpensiveAccess
 @property  BOOL requiresPowerPluggedIn
 @property  BOOL canUseLocalCacheServer
 @property  BOOL prefersInfraWiFi
 @property  NSString *sessionId
 @property  NSMutableDictionary *additionalServerParams
 @property  NSDictionary *analyticsData
 @property  BOOL liveServerCatalogOnly
 @property  BOOL liveServerCatalogOnlyIsOverridden
 @property  NSString *downloadAuthorizationHeader
 @property  NSData *decryptionKey
 @property  NSString *sourceDirectory

  // class methods
  +[MADownloadOptions supportsSecureCoding]

  // instance methods
  -[MADownloadOptions setAllowsCellularAccess:]
  -[MADownloadOptions setDiscretionary:]
  -[MADownloadOptions setTimeoutIntervalForResource:]
  -[MADownloadOptions allowsExpensiveAccess]
  -[MADownloadOptions allowsCellularAccess]
  -[MADownloadOptions setSessionId:]
  -[MADownloadOptions sessionId]
  -[MADownloadOptions tightSummaryIncludingAdditional:]
  -[MADownloadOptions prefersInfraWiFi]
  -[MADownloadOptions setAnalyticsData:]
  -[MADownloadOptions logOptions]
  -[MADownloadOptions encodeWithCoder:]
  -[MADownloadOptions additionalServerParams]
  -[MADownloadOptions timeoutIntervalForResource]
  -[MADownloadOptions .cxx_destruct]
  -[MADownloadOptions setDecryptionKey:]
  -[MADownloadOptions setDownloadAuthorizationHeader:]
  -[MADownloadOptions decryptionKey]
  -[MADownloadOptions liveServerCatalogOnlyIsOverridden]
  -[MADownloadOptions setLiveServerCatalogOnlyIsOverridden:]
  -[MADownloadOptions setPrefersInfraWiFi:]
  -[MADownloadOptions requiresPowerPluggedIn]
  -[MADownloadOptions canUseLocalCacheServer]
  -[MADownloadOptions encodeAsPlist]
  -[MADownloadOptions analyticsData]
  -[MADownloadOptions setAllowsExpensiveAccess:]
  -[MADownloadOptions setSourceDirectory:]
  -[MADownloadOptions setLiveServerCatalogOnly:]
  -[MADownloadOptions discretionary]
  -[MADownloadOptions sourceDirectory]
  -[MADownloadOptions setCanUseLocalCacheServer:]
  -[MADownloadOptions initWithPlist:]
  -[MADownloadOptions liveServerCatalogOnly]
  -[MADownloadOptions setAdditionalServerParams:]
  -[MADownloadOptions downloadAuthorizationHeader]
  -[MADownloadOptions setRequiresPowerPluggedIn:]
  -[MADownloadOptions init]
  -[MADownloadOptions initWithCoder:]


MAMsuDownloadOptions : MADownloadOptions
 @property  NSString *requestedProductVersion
 @property  long long delayPeriod
 @property  BOOL supervised
 @property  BOOL allowSameVersion
 @property  NSString *prerequisiteBuildVersion
 @property  NSString *prerequisiteProductVersion
 @property  NSString *prerequisiteReleaseType
 @property  BOOL prerequisiteReleaseTypeIsOverridden
 @property  NSString *liveAssetAudienceUUID
 @property  NSString *purpose

  // class methods
  +[MAMsuDownloadOptions supportsSecureCoding]

  // instance methods
  -[MAMsuDownloadOptions setPurpose:]
  -[MAMsuDownloadOptions setLiveAssetAudienceUUID:]
  -[MAMsuDownloadOptions encodeWithCoder:]
  -[MAMsuDownloadOptions purpose]
  -[MAMsuDownloadOptions delayPeriod]
  -[MAMsuDownloadOptions .cxx_destruct]
  -[MAMsuDownloadOptions prerequisiteProductVersion]
  -[MAMsuDownloadOptions liveAssetAudienceUUID]
  -[MAMsuDownloadOptions prerequisiteBuildVersion]
  -[MAMsuDownloadOptions setPrerequisiteProductVersion:]
  -[MAMsuDownloadOptions allowSameVersion]
  -[MAMsuDownloadOptions encodeAsPlist]
  -[MAMsuDownloadOptions setRequestedProductVersion:]
  -[MAMsuDownloadOptions prerequisiteReleaseType]
  -[MAMsuDownloadOptions prerequisiteReleaseTypeIsOverridden]
  -[MAMsuDownloadOptions setSupervised:]
  -[MAMsuDownloadOptions initWithPlist:]
  -[MAMsuDownloadOptions setPrerequisiteBuildVersion:]
  -[MAMsuDownloadOptions setDelayPeriod:]
  -[MAMsuDownloadOptions supervised]
  -[MAMsuDownloadOptions requestedProductVersion]
  -[MAMsuDownloadOptions setPrerequisiteReleaseType:]
  -[MAMsuDownloadOptions setPrerequisiteReleaseTypeIsOverridden:]
  -[MAMsuDownloadOptions init]
  -[MAMsuDownloadOptions setAllowSameVersion:]
  -[MAMsuDownloadOptions initWithCoder:]


MADownloadConfig : NSObject <NSSecureCoding>
 @property  BOOL discretionary

  // class methods
  +[MADownloadConfig supportsSecureCoding]

  // instance methods
  -[MADownloadConfig setDiscretionary:]
  -[MADownloadConfig logConfig]
  -[MADownloadConfig encodeWithCoder:]
  -[MADownloadConfig summary]
  -[MADownloadConfig encodeAsPlist]
  -[MADownloadConfig discretionary]
  -[MADownloadConfig initWithPlist:]
  -[MADownloadConfig init]
  -[MADownloadConfig initWithCoder:]


MAAutoAssetInfoStaging : NSObject <NSSecureCoding>
 @property  NSDictionary *allAvailableForStagingAttributes
 @property  unsigned long totalExpectedBytes

  // class methods
  +[MAAutoAssetInfoStaging supportsSecureCoding]

  // instance methods
  -[MAAutoAssetInfoStaging encodeWithCoder:]
  -[MAAutoAssetInfoStaging .cxx_destruct]
  -[MAAutoAssetInfoStaging totalExpectedBytes]
  -[MAAutoAssetInfoStaging summary]
  -[MAAutoAssetInfoStaging initWithCoder:]
  -[MAAutoAssetInfoStaging initWithAvailableForStaging:withTotalExpectedBytes:]
  -[MAAutoAssetInfoStaging allAvailableForStagingAttributes]


MAAutoAssetInfoListen : NSObject <NSSecureCoding>
 @property  MAAutoAssetNotifications *activeNotifications

  // class methods
  +[MAAutoAssetInfoListen supportsSecureCoding]

  // instance methods
  -[MAAutoAssetInfoListen encodeWithCoder:]
  -[MAAutoAssetInfoListen .cxx_destruct]
  -[MAAutoAssetInfoListen summary]
  -[MAAutoAssetInfoListen initWithCoder:]
  -[MAAutoAssetInfoListen initWithNotifications:]
  -[MAAutoAssetInfoListen activeNotifications]


MAProgressNotification : NSObject
 @property  long long totalExpected
 @property  long long totalWritten
 @property  BOOL isStalled
 @property  double expectedTimeRemaining

  // instance methods
  -[MAProgressNotification isStalled]
  -[MAProgressNotification expectedTimeRemaining]
  -[MAProgressNotification totalWritten]
  -[MAProgressNotification totalExpected]
  -[MAProgressNotification setIsStalled:]
  -[MAProgressNotification setTotalExpected:]
  -[MAProgressNotification setTotalWritten:]
  -[MAProgressNotification setExpectedTimeRemaining:]


MAAutoAssetStatus : NSObject <NSSecureCoding>
 @property  MAAutoAssetSelector *assetSelector
 @property  MAAutoAssetNotifications *notifications
 @property  NSDictionary *availableForUseAttributes
 @property  NSDictionary *newerVersionAttributes
 @property  BOOL neverBeenLocked
 @property  BOOL downloadUserInitiated
 @property  MAAutoAssetProgress *downloadProgress
 @property  long long downloadedNetworkBytes
 @property  long long downloadedFilesystemBytes
 @property  BOOL downloadedAsPatch
 @property  MAAutoAssetSelector *patchedFromBaseSelector
 @property  long long patchedFromBaseFilesystemBytes
 @property  BOOL patchingAttempted
 @property  BOOL stagedPriorToAvailable
 @property  NSString *stagedFromOSVersion
 @property  NSString *stagedFromBuildVersion
 @property  NSDictionary *currentLockUsage
 @property  NSError *availableForUseError
 @property  NSError *patchingAttemptError
 @property  NSError *newerVersionError

  // class methods
  +[MAAutoAssetStatus supportsSecureCoding]

  // instance methods
  -[MAAutoAssetStatus downloadProgress]
  -[MAAutoAssetStatus neverBeenLocked]
  -[MAAutoAssetStatus setDownloadProgress:]
  -[MAAutoAssetStatus newerVersionError]
  -[MAAutoAssetStatus patchedFromBaseFilesystemBytes]
  -[MAAutoAssetStatus setStagedPriorToAvailable:]
  -[MAAutoAssetStatus stagedPriorToAvailable]
  -[MAAutoAssetStatus newerVersionAttributes]
  -[MAAutoAssetStatus downloadedNetworkBytes]
  -[MAAutoAssetStatus setDownloadedNetworkBytes:]
  -[MAAutoAssetStatus setAvailableForUseAttributes:]
  -[MAAutoAssetStatus encodeWithCoder:]
  -[MAAutoAssetStatus setAssetSelector:]
  -[MAAutoAssetStatus copy]
  -[MAAutoAssetStatus stagedFromBuildVersion]
  -[MAAutoAssetStatus setDownloadedFilesystemBytes:]
  -[MAAutoAssetStatus patchingAttempted]
  -[MAAutoAssetStatus .cxx_destruct]
  -[MAAutoAssetStatus setPatchingAttemptError:]
  -[MAAutoAssetStatus initWithAssetSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:withCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]
  -[MAAutoAssetStatus setDownloadUserInitiated:]
  -[MAAutoAssetStatus summary]
  -[MAAutoAssetStatus setNeverBeenLocked:]
  -[MAAutoAssetStatus setPatchingAttempted:]
  -[MAAutoAssetStatus availableForUseAttributes]
  -[MAAutoAssetStatus downloadUserInitiated]
  -[MAAutoAssetStatus setStagedFromBuildVersion:]
  -[MAAutoAssetStatus notifications]
  -[MAAutoAssetStatus setPatchedFromBaseFilesystemBytes:]
  -[MAAutoAssetStatus availableForUseError]
  -[MAAutoAssetStatus setCurrentLockUsage:]
  -[MAAutoAssetStatus setNotifications:]
  -[MAAutoAssetStatus patchedFromBaseSelector]
  -[MAAutoAssetStatus setAvailableForUseError:]
  -[MAAutoAssetStatus setPatchedFromBaseSelector:]
  -[MAAutoAssetStatus initWithAssetSelector:withNotifications:withAvailableForUseAttributes:withNewerVersionAttributes:withNeverBeenLocked:withDownloadUserInitiated:withDownloadProgress:withDownloadedNetworkBytes:withDownloadedFilesystemBytes:withDownloadedAsPatch:withPatchedFromBaseSelector:withPatchedFromBaseFilesystemBytes:withPatchingAttempted:withStagedPriorToAvailable:withStagedFromOSVersion:withStagedFromBuildVersion:withCurrentLockUsage:withAvailableForUseError:withPatchingAttemptError:withNewerVersionError:]
  -[MAAutoAssetStatus assetSelector]
  -[MAAutoAssetStatus setDownloadedAsPatch:]
  -[MAAutoAssetStatus downloadedFilesystemBytes]
  -[MAAutoAssetStatus setStagedFromOSVersion:]
  -[MAAutoAssetStatus setNewerVersionAttributes:]
  -[MAAutoAssetStatus currentLockUsage]
  -[MAAutoAssetStatus patchingAttemptError]
  -[MAAutoAssetStatus setNewerVersionError:]
  -[MAAutoAssetStatus downloadedAsPatch]
  -[MAAutoAssetStatus stagedFromOSVersion]
  -[MAAutoAssetStatus initWithCoder:]


MAAutoAssetLockReason : NSObject <NSSecureCoding>
 @property  NSString *autoAssetClientName
 @property  NSString *lockReason

  // class methods
  +[MAAutoAssetLockReason supportsSecureCoding]

  // instance methods
  -[MAAutoAssetLockReason setAutoAssetClientName:]
  -[MAAutoAssetLockReason lockReason]
  -[MAAutoAssetLockReason encodeWithCoder:]
  -[MAAutoAssetLockReason .cxx_destruct]
  -[MAAutoAssetLockReason summary]
  -[MAAutoAssetLockReason setLockReason:]
  -[MAAutoAssetLockReason copyWithZone:]
  -[MAAutoAssetLockReason initForClientName:forLockReason:]
  -[MAAutoAssetLockReason autoAssetClientName]
  -[MAAutoAssetLockReason initFromClientLockReasonKey:]
  -[MAAutoAssetLockReason initWithCoder:]


MAAutoAssetInfoEnd : NSObject <NSSecureCoding>
 @property  NSString *endLockReason
 @property  long long endLockCount

  // class methods
  +[MAAutoAssetInfoEnd supportsSecureCoding]

  // instance methods
  -[MAAutoAssetInfoEnd encodeWithCoder:]
  -[MAAutoAssetInfoEnd .cxx_destruct]
  -[MAAutoAssetInfoEnd summary]
  -[MAAutoAssetInfoEnd initWithLockReason:endingLockCount:]
  -[MAAutoAssetInfoEnd endLockReason]
  -[MAAutoAssetInfoEnd initWithCoder:]
  -[MAAutoAssetInfoEnd endLockCount]


MAAutoAssetInfoInstance : NSObject <NSSecureCoding>
 @property  NSString *autoAssetClientName
 @property  NSString *clientProcessName
 @property  long long clientProcessID
 @property  MAAutoAssetSelector *clientAssetSelector
 @property  NSUUID *frameworkInstanceUUID

  // class methods
  +[MAAutoAssetInfoInstance supportsSecureCoding]

  // instance methods
  -[MAAutoAssetInfoInstance clientProcessName]
  -[MAAutoAssetInfoInstance clientProcessID]
  -[MAAutoAssetInfoInstance encodeWithCoder:]
  -[MAAutoAssetInfoInstance .cxx_destruct]
  -[MAAutoAssetInfoInstance summary]
  -[MAAutoAssetInfoInstance clientAssetSelector]
  -[MAAutoAssetInfoInstance frameworkInstanceUUID]
  -[MAAutoAssetInfoInstance initForClientName:withProcessName:withProcessID:usingAssetSelector:associatingFrameworkUUID:]
  -[MAAutoAssetInfoInstance autoAssetClientName]
  -[MAAutoAssetInfoInstance initWithCoder:]


MAPushNotificationInterfaces : NSObject

MAXpcConnection : NSObject
 @property  NSObject<OS_xpc_object> *connection
 @property  NSString *connectionId

  // instance methods
  -[MAXpcConnection notValid]
  -[MAXpcConnection connectionId]
  -[MAXpcConnection .cxx_destruct]
  -[MAXpcConnection connection]
  -[MAXpcConnection initWithServiceName:]


01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0200 /System/Library/PrivateFrameworks/SoftwareUpdateCoreSupport.framework/SoftwareUpdateCoreSupport: SUCore 
01 00 0300 /System/Library/PrivateFrameworks/SoftwareUpdateCoreConnect.framework/SoftwareUpdateCoreConnect: SUCoreConnectClient 
01 00 0300 /System/Library/PrivateFrameworks/SoftwareUpdateCoreConnect.framework/SoftwareUpdateCoreConnect: SUCoreConnectClientPolicy 
01 00 0300 /System/Library/PrivateFrameworks/SoftwareUpdateCoreConnect.framework/SoftwareUpdateCoreConnect: SUCoreConnectClientProxy 
01 00 0300 /System/Library/PrivateFrameworks/SoftwareUpdateCoreConnect.framework/SoftwareUpdateCoreConnect: SUCoreConnectMessage 
01 00 0200 /System/Library/PrivateFrameworks/SoftwareUpdateCoreSupport.framework/SoftwareUpdateCoreSupport: SUCoreLog 
