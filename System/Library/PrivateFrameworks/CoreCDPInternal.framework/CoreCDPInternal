|| __DATA.__objc_data _OBJC_CLASS_$_CDPAuthenticationHelper
|| __DATA.__objc_data _OBJC_CLASS_$_CDPBroadcaster
|| __DATA.__objc_data _OBJC_CLASS_$_CDPCABackupRecoveryReporter
|| __DATA.__objc_data _OBJC_CLASS_$_CDPCAEscrowReporter
|| __DATA.__objc_data _OBJC_CLASS_$_CDPCALocalSecretReporter
|| __DATA.__objc_data _OBJC_CLASS_$_CDPCAReporter
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDAccountRecoveryValidator
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDAuthProxyImpl
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDBackupErrorProviderImpl
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDBackupFMIPResultsParser
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDBackupIDMSErrorProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDBackupIDMSResultsParser
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDBackupInfoRecoveryFlowController
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDCircleController
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDCircleJoinResult
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDDeviceSecretValidator
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDKeychainSync
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDLocalDeviceSecretProxyImpl
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDLocalSecretController
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDLocalSecretFollowUpProviderImpl
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDLockAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDNetworkObserver
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDNetworkObserverClient
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDPCSController
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDRecoveryFlowController
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDRecoveryKeyController
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDRecoveryKeyValidatorImpl
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDRecoveryOption
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDRecoveryValidatedJoinFlowController
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDRemoteDeviceSecretValidator
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDRemoteSecretValidationResult
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDSecureBackupContext
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDSecureChannelContext
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDSecureChannelController
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDTermsInfoBackupController
|| __DATA.__objc_data _OBJC_CLASS_$_CDPDataPrivacyAppleAccountProxy
|| __DATA.__objc_data _OBJC_CLASS_$_CDPPiggybackingChannel
|| __DATA.__objc_data _OBJC_CLASS_$_CDPPiggybackingPayloadProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CDPStateHandlerResult
|| __DATA.__objc_data _OBJC_CLASS_$_CDPTTSUChannel
|| __DATA.__objc_data _OBJC_CLASS_$_CDPTTSUPayloadProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPAuthenticationHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPBroadcaster
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPCABackupRecoveryReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPCAEscrowReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPCALocalSecretReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPCAReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDAccountRecoveryValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDBackupErrorProviderImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDBackupFMIPResultsParser
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDBackupIDMSErrorProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDBackupIDMSResultsParser
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDBackupInfoRecoveryFlowController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDCircleController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDCircleJoinResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDDeviceSecretValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDKeychainSync
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDLocalDeviceSecretProxyImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDLocalSecretController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDLocalSecretFollowUpProviderImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDLockAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDNetworkObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDNetworkObserverClient
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDPCSController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDRecoveryFlowController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDRecoveryKeyController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDRecoveryKeyValidatorImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDRecoveryOption
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDRecoveryValidatedJoinFlowController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDRemoteDeviceSecretValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDRemoteSecretValidationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDSecureBackupContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDSecureChannelContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDSecureChannelController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDTermsInfoBackupController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPDataPrivacyAppleAccountProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPInternalDataPrivacyController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPPiggybackingChannel
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPPiggybackingPayloadProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPStateHandlerResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPTTSUChannel
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPTTSUPayloadProvider
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDBackupErrorProviderImpl._context
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDBackupErrorProviderImpl._prevailingSecret
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDBackupErrorProviderImpl._uiProvider
|| __DATA_CONST.__const _CDPBackupMetadataDeviceColorKey
|| __DATA_CONST.__const _CDPBackupMetadataDeviceEnclosureColorKey
|| __DATA_CONST.__const _CDPBackupMetadataDeviceModelClassKey
|| __DATA_CONST.__const _CDPBackupMetadataDeviceModelKey
|| __DATA_CONST.__const _CDPBackupMetadataDeviceModelVersionKey
|| __DATA_CONST.__const _CDPBackupMetadataDeviceNameKey
|| __DATA_CONST.__const _CDPBackupMetadataDevicePlatformKey
|| __DATA_CONST.__const _CDPBackupMetadataMIDKey
|| __DATA_CONST.__const _CDPBackupMetadataPasswordResetKey
|| __DATA_CONST.__const _CDPDConnectionInvalidatedNotification
|| __DATA_CONST.__const _kCDPCABackupRecoveryAttemptBundleID
|| __DATA_CONST.__const _kCDPCABackupRecoveryAttemptedMethods
|| __DATA_CONST.__const _kCDPCABackupRecoveryAvailableMethods
|| __DATA_CONST.__const _kCDPCABackupRecoveryDidCancel
|| __DATA_CONST.__const _kCDPCABackupRecoveryDidFail
|| __DATA_CONST.__const _kCDPCABackupRecoveryDidReset
|| __DATA_CONST.__const _kCDPCABackupRecoveryDidSucceed
|| __DATA_CONST.__const _kCDPCABackupRecoveryDidSucceedWithoutLocalSecret
|| __DATA_CONST.__const _kCDPCABackupRecoveryEscrowDeviceCount
|| __DATA_CONST.__const _kCDPCABackupRecoveryJoinMethod
|| __DATA_CONST.__const _kCDPCABackupRecoveryResult
|| __DATA_CONST.__const _kCDPCADidAttemptEscrowPreRecord
|| __DATA_CONST.__const _kCDPCADidChangeLocalSecret
|| __DATA_CONST.__const _kCDPCADidRemoveLocalSecret
|| __DATA_CONST.__const _kCDPCADuration
|| __DATA_CONST.__const _kCDPCAErrorCode
|| __DATA_CONST.__const _kCDPCAErrorDomain
|| __DATA_CONST.__const _kCDPCAEscrowPreRecordResult
|| __DATA_CONST.__const _kCDPCAEventBackupRecovery
|| __DATA_CONST.__const _kCDPCAEventEscrowPreRecord
|| __DATA_CONST.__const _kCDPCAEventLocalSecret
|| __DATA_CONST.__const _kCDPCALocalSecretResult
|| __DATA_CONST.__const _kCDPCAPreRecordIdentifier
|| __DATA_CONST.__const _kCDPCAWasSuccess
|| __DATA_CONST.__const _kConfirmExistingSecretActionContinue
|| __DATA_CONST.__const _kConfirmExistingSecretIdentifier
|| __DATA_CONST.__const _kDismissFollowup
|| __DATA_CONST.__const _kOfflineLocalSecretChangeActionContinue
|| __DATA_CONST.__const _kOfflineLocalSecretChangeItemIdentifier
|| __DATA_CONST.__const _kRegenerateRecoveryKeyIdentifier
|| __DATA_CONST.__const _kRepairCDPStateActionContinue
|| __DATA_CONST.__const _kRepairCDPStateActionRecoveryKey
|| __DATA_CONST.__const _kRepairCDPStateItemIdentifier
|| __DATA_CONST.__const _kSecureTermsActionContinue
|| __DATA_CONST.__const _kSecureTermsIdentifier
|| __DATA_CONST.__const _kSetupBiometricsFaceIDIdentifier
|| __DATA_CONST.__const _kSetupBiometricsFlowSkipIdentifier
|| __DATA_CONST.__const _kSetupBiometricsIdentifier
|| __DATA_CONST.__const _kSetupBiometricsTouchIDIdentifier
|| __DATA_CONST.__const _kSetupBiometricsURL
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDAuthObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDCircleStateObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDClientHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDFollowUpController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDFollowUpFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDOctagonTrustProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDSecureBackupConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDSecureBackupController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDSecureBackupProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDXPCEventObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDXPCListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPInternalDataPrivacyController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDAuthObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDAuthProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDCircleStateObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDClientHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDFollowUpController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDFollowUpFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDOctagonTrustProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDSecureBackupConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDSecureBackupController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDSecureBackupProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDXPCEventObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDXPCListener
|| __TEXT.__const _CoreCDPInternalVersionNumber
|| __TEXT.__const _CoreCDPInternalVersionString
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kAccountDataclassKeyValue
__ AppleAccount: _AAFollowUpClientIdentifier
__ AppleAccount: _AAFollowUpIdentifierRenewCredentials
__ AppleAccount: _AAFollowUpUserInfoAccountIdentifier
__ AppleAccount: _AAFollowUpUserInfoAltDSID
__ AppleAccount: _OBJC_CLASS_$_AAFollowUpController
__ AppleAccount: _kAAAltDSIDKey
__ AppleAccount: _kAACountryCodeKey
__ AppleAccount: _kAAMetadatanKey
__ AppleAccount: _kAATermsVersionKey
__ AppleAccount: _kAAiCloudVersionKey
__ AuthKit: _AKAppleIDAuthenticationErrorDomain
__ AuthKit: _AKAuthenticationPasswordKey
__ AuthKit: _AKUserInfoChangedAltDSIDKey
__ AuthKit: _AKUserInfoChangedNotification
__ AuthKit: _AKUserInfoChangedSecurityLevelKey
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ AuthKit: _OBJC_CLASS_$_AKAnisetteProvisioningController
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationContext
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ AuthKit: _OBJC_CLASS_$_AKAppleIDSession
__ AuthKit: _OBJC_CLASS_$_AKDevice
__ CloudServices: _OBJC_CLASS_$_SecureBackup
__ CloudServices: _OBJC_CLASS_$_SecureBackupTermsInfo
__ CloudServices: _kCloudServicesErrorDomain
__ CloudServices: _kEscrowServiceErrorDomain
__ CloudServices: _kSecureBackupAlliCDPRecordsKey
__ CloudServices: _kSecureBackupAuthenticationAppleID
__ CloudServices: _kSecureBackupAuthenticationAuthToken
__ CloudServices: _kSecureBackupAuthenticationDSID
__ CloudServices: _kSecureBackupAuthenticationEscrowProxyURL
__ CloudServices: _kSecureBackupAuthenticationPassword
__ CloudServices: _kSecureBackupAuthenticationiCloudEnvironment
__ CloudServices: _kSecureBackupContainsiCDPDataKey
__ CloudServices: _kSecureBackupCoolOffEndKey
__ CloudServices: _kSecureBackupErrorDomain
__ CloudServices: _kSecureBackupFMiPDataKey
__ CloudServices: _kSecureBackupFMiPRecoveryKey
__ CloudServices: _kSecureBackupFMiPUUIDKey
__ CloudServices: _kSecureBackupHSA2CachedPrerecordUUID
__ CloudServices: _kSecureBackupIDMSDataKey
__ CloudServices: _kSecureBackupIDMSRecoveryKey
__ CloudServices: _kSecureBackupMetadataKey
__ CloudServices: _kSecureBackupNumericPassphraseLengthKey
__ CloudServices: _kSecureBackupPassphraseKey
__ CloudServices: _kSecureBackupPeerInfoSerialNumberKey
__ CloudServices: _kSecureBackupRecordIDKey
__ CloudServices: _kSecureBackupRecoveryKeyKey
__ CloudServices: _kSecureBackupRecoveryStatusKey
__ CloudServices: _kSecureBackupRemainingAttemptsKey
__ CloudServices: _kSecureBackupSilentRecoveryAttemptKey
__ CloudServices: _kSecureBackupStingrayMetadataHashKey
__ CloudServices: _kSecureBackupSuppressServerFiltering
__ CloudServices: _kSecureBackupSynchronizeKey
__ CloudServices: _kSecureBackupUseCachedPassphraseKey
__ CloudServices: _kSecureBackupUsesComplexPassphraseKey
__ CloudServices: _kSecureBackupUsesMultipleiCSCKey
__ CloudServices: _kSecureBackupUsesNumericPassphraseKey
__ CloudServices: _kSecureBackupUsesRandomPassphraseKey
__ CloudServices: _kSecureBackupUsesRecoveryKeyKey
__ CloudServices: _kSecureBackupiCDPRecordsKey
__ CloudServices: _kSecureBackupiCloudDataProtectionDeleteAllRecordsKey
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreCDP: _CDPCloudDataProtectionEnabledNotification
__ CoreCDP: _CDPDaemonExportedInterface
__ CoreCDP: _CDPFMIPRecoveryKey
__ CoreCDP: _CDPIDMSPasswordResetKey
__ CoreCDP: _CDPIDMSRecordMIDKey
__ CoreCDP: _CDPLocalizedString
__ CoreCDP: _CDPStateErrorDomain
__ CoreCDP: _CDP_FOLLOWUP_CONFIRM_EXISTING_SECRET
__ CoreCDP: _CDP_FOLLOWUP_OFFLINE_PASSCODE
__ CoreCDP: _CDP_FOLLOWUP_RECOVERY_KEY_REGEN
__ CoreCDP: _CDP_FOLLOWUP_SECURE_TERMS
__ CoreCDP: _CDP_FOLLOWUP_SETUP_BIOMETIRCS
__ CoreCDP: _CDP_FOLLOWUP_STATE_REPAIR
__ CoreCDP: _OBJC_CLASS_$_CDPAccount
__ CoreCDP: _OBJC_CLASS_$_CDPCircleProxyImpl
__ CoreCDP: _OBJC_CLASS_$_CDPContext
__ CoreCDP: _OBJC_CLASS_$_CDPDevice
__ CoreCDP: _OBJC_CLASS_$_CDPFollowUpContext
__ CoreCDP: _OBJC_CLASS_$_CDPInheritanceTrustController
__ CoreCDP: _OBJC_CLASS_$_CDPLocalDevice
__ CoreCDP: _OBJC_CLASS_$_CDPLocalizedStringBuilder
__ CoreCDP: _OBJC_CLASS_$_CDPPCSUtilities
__ CoreCDP: _OBJC_CLASS_$_CDPProtectedCloudStorageProxyImpl
__ CoreCDP: _OBJC_CLASS_$_CDPRecoveryFlowContext
__ CoreCDP: _OBJC_CLASS_$_CDPStateController
__ CoreCDP: _OBJC_CLASS_$_CDPUtilities
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._deviceColor
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._enclosureColor
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._hasNumericSecret
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._isCurrentDevice
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._isUsingMultipleiCSC
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._localizedName
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._machineID
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._model
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._modelClass
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._modelVersion
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._numericSecretLength
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._platform
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._recordDate
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._recordID
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._recordInfo
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._remainingAttempts
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._serialNumber
__ CoreCDP: _OBJC_IVAR_$_CDPDevice._simplePublicKey
__ CoreCDP: __CDPLogSystem
__ CoreCDP: __CDPSignpostCreate
__ CoreCDP: __CDPSignpostGetNanoseconds
__ CoreCDP: __CDPSignpostLogSystem
__ CoreCDP: __CDPStateError
__ CoreCDP: __CDPStateErrorWithUnderlying
__ CoreFollowUp: _FLFollowUpPreferencesBundleIdentifier
__ CoreFollowUp: _FLGroupIdentifierAccount
__ CoreFollowUp: _FLGroupIdentifierDevice
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpAction
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpController
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpItem
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpNotification
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreUtils: _OBJC_CLASS_$_CUMessageSession
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoveryOptionsErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ KeychainCircle: _OBJC_CLASS_$_KCJoiningRequestAccountCircleDelegate
__ KeychainCircle: _OBJC_CLASS_$_KCJoiningRequestCircleSession
__ ManagedConfiguration: _MCFeatureCloudKeychainSyncAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ OctagonTrust: _OBJC_CLASS_$_OTEscrowTranslation
__ ProtectedCloudStorage: _PCSIdentitySetCreate
__ ProtectedCloudStorage: _PCSIdentitySetIsICDP
__ ProtectedCloudStorage: _PCSIdentitySetIsICDPNetwork
__ ProtectedCloudStorage: _kPCSSetupDSID
__ Security: _OBJC_CLASS_$_OTClique
__ Security: _OBJC_CLASS_$_OTConfigurationContext
__ Security: _OTDefaultContext
__ Security: _OTTrustStatusChangeNotification
__ Security: _SOSCCResetToOffering
__ Security: _kSOSCCCircleChangedNotification
__ Security: _kSOSCCViewMembershipChangedNotification
__ Security: _kSOSViewAutofillPasswords
__ Security: _kSOSViewOtherSyncable
__ Security: _kSOSViewSafariCreditCards
__ Security: _kSOSViewWiFi
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilitySetDispatchQueue
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
CDPDTermsInfoBackupController : NSObject
  // instance methods
  -[CDPDTermsInfoBackupController fetchTermsAcceptanceForAccount:completion:]
  -[CDPDTermsInfoBackupController saveTermsAcceptance:completion:]
  -[CDPDTermsInfoBackupController _buildSecureBackupTermsInfo:]


CDPDCircleStateObserver : NSObject <CDPDXPCEventListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDCircleStateObserver _notificationName]
  -[CDPDCircleStateObserver registerListener:]
  -[CDPDCircleStateObserver stopObservingCircleStatusChange]
  -[CDPDCircleStateObserver .cxx_destruct]
  -[CDPDCircleStateObserver eventReceived:eventValue:]
  -[CDPDCircleStateObserver init]
  -[CDPDCircleStateObserver observeChangeToState:circleProxy:handler:]
  -[CDPDCircleStateObserver observeCircleStateWithCircleProxy:changeHandler:]
  -[CDPDCircleStateObserver dealloc]


CDPDAccountRecoveryValidator : NSObject <CDPRecoveryKeyValidatorInternal>
 @property  NSDictionary *recoveredInfo
 @property  NSString *recoveryKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDAccountRecoveryValidator .cxx_destruct]
  -[CDPDAccountRecoveryValidator setRecoveryKey:]
  -[CDPDAccountRecoveryValidator recoveryKey]
  -[CDPDAccountRecoveryValidator setRecoveredInfo:]
  -[CDPDAccountRecoveryValidator _cdpErrorFromAuthKitError:]
  -[CDPDAccountRecoveryValidator confirmRecoveryKey:completion:]
  -[CDPDAccountRecoveryValidator generateRecoveryKey:]
  -[CDPDAccountRecoveryValidator initWithContext:authProvider:]
  -[CDPDAccountRecoveryValidator recoveredInfo]


CDPDRecoveryFlowController : NSObject <CDPDDeviceSecretValidatorDelegate>
 @property  CDPRecoveryFlowContext *recoveryContext
 @property  CDPDCircleController *circleController
 @property  CDPDSecureBackupController *secureBackupController
 @property  <CDPStateUIProviderInternal> *uiProvider
 @property  <CDPRemoteDeviceSecretValidatorProtocol> *validator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDRecoveryFlowController uiProvider]
  -[CDPDRecoveryFlowController setUiProvider:]
  -[CDPDRecoveryFlowController setValidator:]
  -[CDPDRecoveryFlowController .cxx_destruct]
  -[CDPDRecoveryFlowController validator]
  -[CDPDRecoveryFlowController dealloc]
  -[CDPDRecoveryFlowController recoveryValidatorWithDevices:forMultipleICSC:withCompletionHandler:]
  -[CDPDRecoveryFlowController beginInteractiveRecoveryForDevices:isUsingMultipleICSC:usingValidator:]
  -[CDPDRecoveryFlowController retrieveInflatedDevices:]
  -[CDPDRecoveryFlowController _escapeOfferForDevices:]
  -[CDPDRecoveryFlowController recoveryContext]
  -[CDPDRecoveryFlowController secretValidator:recoverSecureBackupWithContext:completion:]
  -[CDPDRecoveryFlowController secretValidator:shouldContinueValidationAfterError:]
  -[CDPDRecoveryFlowController initWithContext:uiProvider:secureBackupController:circleProxy:]
  -[CDPDRecoveryFlowController beginRecovery:]
  -[CDPDRecoveryFlowController setRecoveryContext:]
  -[CDPDRecoveryFlowController circleController]
  -[CDPDRecoveryFlowController setCircleController:]
  -[CDPDRecoveryFlowController secureBackupController]
  -[CDPDRecoveryFlowController setSecureBackupController:]


CDPDXPCListener : NSObject <NSXPCListenerDelegate>
 @property  NSXPCListener *listener
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CDPDXPCListener sharedInstance]

  // instance methods
  -[CDPDXPCListener _clientTypeForConnection:]
  -[CDPDXPCListener .cxx_destruct]
  -[CDPDXPCListener setListener:]
  -[CDPDXPCListener init]
  -[CDPDXPCListener listener]
  -[CDPDXPCListener _connection:hasEntitlement:]
  -[CDPDXPCListener _shouldAcceptNewConnectionWithEntitlements:]
  -[CDPDXPCListener start]
  -[CDPDXPCListener listener:shouldAcceptNewConnection:]


CDPBroadcaster : NSObject
  // class methods
  +[CDPBroadcaster _broadcastNotificationName:userInfo:]


CDPDRemoteSecretValidationResult : NSObject
 @property  unsigned long secretType
 @property  BOOL userDidCancel
 @property  BOOL userDidReset
 @property  CDPDevice *device
 @property  NSString *validSecret
 @property  NSDictionary *recoveredInfo
 @property  OTClique *recoveredClique

  // instance methods
  -[CDPDRemoteSecretValidationResult setDevice:]
  -[CDPDRemoteSecretValidationResult .cxx_destruct]
  -[CDPDRemoteSecretValidationResult secretType]
  -[CDPDRemoteSecretValidationResult device]
  -[CDPDRemoteSecretValidationResult userDidCancel]
  -[CDPDRemoteSecretValidationResult setRecoveredInfo:]
  -[CDPDRemoteSecretValidationResult recoveredInfo]
  -[CDPDRemoteSecretValidationResult setSecretType:]
  -[CDPDRemoteSecretValidationResult setUserDidCancel:]
  -[CDPDRemoteSecretValidationResult userDidReset]
  -[CDPDRemoteSecretValidationResult setUserDidReset:]
  -[CDPDRemoteSecretValidationResult validSecret]
  -[CDPDRemoteSecretValidationResult setValidSecret:]
  -[CDPDRemoteSecretValidationResult recoveredClique]
  -[CDPDRemoteSecretValidationResult setRecoveredClique:]


CDPDBackupIDMSResultsParser : NSObject <CDPDBackupRecoveryResultsParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDBackupIDMSResultsParser resultsDictionaryFromRecoveryResult:error:]


CDPDRecoveryValidatedJoinFlowController : CDPDRecoveryFlowController <CDPDRemoteDeviceSecretValidatorDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDRecoveryValidatedJoinFlowController recoveryValidatorWithDevices:forMultipleICSC:withCompletionHandler:]
  -[CDPDRecoveryValidatedJoinFlowController beginInteractiveRecoveryForDevices:isUsingMultipleICSC:usingValidator:]
  -[CDPDRecoveryValidatedJoinFlowController secretValidator:recoverSecureBackupWithContext:completion:]
  -[CDPDRecoveryValidatedJoinFlowController secretValidatorWillAttemptRecovery]
  -[CDPDRecoveryValidatedJoinFlowController secretValidator:shouldAcceptRecoveryError:]
  -[CDPDRecoveryValidatedJoinFlowController secretValidator:didFailRecovery:withError:completion:]
  -[CDPDRecoveryValidatedJoinFlowController _escapeOfferForDevices:remoteApproval:forMultipleICSC:]
  -[CDPDRecoveryValidatedJoinFlowController _showAccountResetConfirmationWithoutRecovery:]
  -[CDPDRecoveryValidatedJoinFlowController _handleHardLimitErrorForCurrentContextWithDevice:completion:]
  -[CDPDRecoveryValidatedJoinFlowController _handleSoftLimitErrorForCurrentContextWithDevice:completion:]
  -[CDPDRecoveryValidatedJoinFlowController _handleLimit:forDevice:completion:]
  -[CDPDRecoveryValidatedJoinFlowController _userInfoForLimit:withDevice:]
  -[CDPDRecoveryValidatedJoinFlowController _fallbackRecoveryOptionWithCompletion:]
  -[CDPDRecoveryValidatedJoinFlowController _cancelRecoveryOptionWithCompletion:]
  -[CDPDRecoveryValidatedJoinFlowController _populateUserInfo:recoveryIndexHandlers:withRecoveryOption:]
  -[CDPDRecoveryValidatedJoinFlowController _accountResetRecoveryOptionWithCompletion:]
  -[CDPDRecoveryValidatedJoinFlowController _skipSignInRecoveryOptionWithCompletion:]
  -[CDPDRecoveryValidatedJoinFlowController _showEntryLimitError:withRecoveryOptionHandlers:defaultIndex:completion:]
  -[CDPDRecoveryValidatedJoinFlowController _softLimitErrorBodyForDevice:]
  -[CDPDRecoveryValidatedJoinFlowController _entryLimitTitleForDevice:]
  -[CDPDRecoveryValidatedJoinFlowController _infoDictionaryWithTitle:andBody:]
  -[CDPDRecoveryValidatedJoinFlowController _hardLimitErrorBodyWithDevice:]
  -[CDPDRecoveryValidatedJoinFlowController _showAccountResetConfirmationWithCompletion:]
  -[CDPDRecoveryValidatedJoinFlowController _entryLimitRecoveryKeyAvailableBodyForDevice:]
  -[CDPDRecoveryValidatedJoinFlowController _entryLimitResetAvailableBodyForDevice:]
  -[CDPDRecoveryValidatedJoinFlowController _entryLimitSignInBodyForDevice:]
  -[CDPDRecoveryValidatedJoinFlowController _entryLimitNoResetForRepairForDevice:]
  -[CDPDRecoveryValidatedJoinFlowController _resetDataErrorForCurrentContextWithRecoveryIndexMap:]
  -[CDPDRecoveryValidatedJoinFlowController _resetProtectedDataErrorUnrecoverable]
  -[CDPDRecoveryValidatedJoinFlowController remoteSecretValidator:applyToJoinCircleWithJoinHandler:]
  -[CDPDRecoveryValidatedJoinFlowController cancelRemoteSecretValidatorApplicationToJoinCircle:]
  -[CDPDRecoveryValidatedJoinFlowController remoteSecretValidator:attemptCustodianRecoveryWithInfo:completion:]
  -[CDPDRecoveryValidatedJoinFlowController _hardLimitUserInfoForDevice:]


CDPPiggybackingPayloadProvider : NSObject <CDPKeychainCircleProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CDPPiggybackingPayloadProvider proxyWithSession:error:]

  // instance methods
  -[CDPPiggybackingPayloadProvider .cxx_destruct]
  -[CDPPiggybackingPayloadProvider isComplete]
  -[CDPPiggybackingPayloadProvider initiatingPayload:]
  -[CDPPiggybackingPayloadProvider processIncomingPayload:error:]
  -[CDPPiggybackingPayloadProvider supportsInteractiveAuth]
  -[CDPPiggybackingPayloadProvider requiresInitialSync]


CDPDPCSController : NSObject
 @property  <CDPProtectedCloudStorageProxy> *pcsProxy
 @property  CDPContext *context

  // instance methods
  -[CDPDPCSController .cxx_destruct]
  -[CDPDPCSController init]
  -[CDPDPCSController setContext:]
  -[CDPDPCSController context]
  -[CDPDPCSController _contextSetupDictionary]
  -[CDPDPCSController checkiCDPStatusNetwork:withCompletion:]
  -[CDPDPCSController _reauthenticateAndCheckiCDPStatusWithNetwork:completion:]
  -[CDPDPCSController _checkiCDPStatusNetwork:withCompletion:]
  -[CDPDPCSController _getOrSetupIdentitySetRef:]
  -[CDPDPCSController _enableCDPWithCompletion:]
  -[CDPDPCSController _disableCDPWithCompletion:]
  -[CDPDPCSController initWithContext:pcsProxy:]
  -[CDPDPCSController recoverKeysWithCompletion:]
  -[CDPDPCSController recoverAndSynchronizeKeysWithCompletion:]
  -[CDPDPCSController isCloudProtectionEnabledLocally:]
  -[CDPDPCSController isCompanionInKeychainCircle:]
  -[CDPDPCSController enableCDPWithCompletion:]
  -[CDPDPCSController disableCDPWithCompletion:]
  -[CDPDPCSController pcsProxy]
  -[CDPDPCSController setPcsProxy:]


CDPAuthenticationHelper : NSObject
  // class methods
  +[CDPAuthenticationHelper _contextForPrimaryAccount]
  +[CDPAuthenticationHelper silentAuthenticationForContext:withCompletion:]
  +[CDPAuthenticationHelper _contextForPrimaryAccountSilentAuth]
  +[CDPAuthenticationHelper _authWithContext:completion:]
  +[CDPAuthenticationHelper _authContextForContext:]
  +[CDPAuthenticationHelper silentAuthenticationForPrimaryAccountWithCompletion:]


CDPDSecureBackupProxyImpl : NSObject <CDPDSecureBackupProxy>
 @property  CDPContext *cdpContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDSecureBackupProxyImpl cacheRecoveryKey:completionBlock:]
  -[CDPDSecureBackupProxyImpl disableWithInfo:completionBlock:]
  -[CDPDSecureBackupProxyImpl accountInfoWithInfo:error:]
  -[CDPDSecureBackupProxyImpl .cxx_destruct]
  -[CDPDSecureBackupProxyImpl disableWithInfo:error:]
  -[CDPDSecureBackupProxyImpl uncacheAllSecrets]
  -[CDPDSecureBackupProxyImpl enableWithInfo:completionBlock:]
  -[CDPDSecureBackupProxyImpl _secureBackup]
  -[CDPDSecureBackupProxyImpl initWithContext:]
  -[CDPDSecureBackupProxyImpl getAccountInfoWithInfo:completionBlockWithResults:]
  -[CDPDSecureBackupProxyImpl setCdpContext:]
  -[CDPDSecureBackupProxyImpl recoverWithInfo:error:]
  -[CDPDSecureBackupProxyImpl enableWithInfo:error:]
  -[CDPDSecureBackupProxyImpl recoverWithInfo:completionBlockWithResults:]
  -[CDPDSecureBackupProxyImpl cdpContext]


CDPCAEscrowReporter : CDPCAReporter
  // instance methods
  -[CDPCAEscrowReporter initWithPreRecordIdentifier:]
  -[CDPCAEscrowReporter didAttemptEscrowPreRecord]


CDPDOctagonTrustProxyImpl : NSObject <CDPDOctagonTrustProxy>
 @property  CDPContext *cdpContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDOctagonTrustProxyImpl .cxx_destruct]
  -[CDPDOctagonTrustProxyImpl fetchEscrowRecords:forceFetch:error:]
  -[CDPDOctagonTrustProxyImpl initWithContext:]
  -[CDPDOctagonTrustProxyImpl setCdpContext:]
  -[CDPDOctagonTrustProxyImpl cdpContext]
  -[CDPDOctagonTrustProxyImpl fetchAllEscrowRecords:forceFetch:error:]


CDPDAuthProxyImpl : NSObject <CDPDAuthProviderInternal>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDAuthProxyImpl cdpContext:persistMasterKeyVerifier:completion:]
  -[CDPDAuthProxyImpl _authContextFromCDPContext:]
  -[CDPDAuthProxyImpl isPrimaryAppleIDLoggedIn]


CDPDLocalDeviceSecretProxyImpl : NSObject <CDPLocalDeviceSecretProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDLocalDeviceSecretProxyImpl hasLocalSecret]


CDPDRecoveryOption : NSObject
 @property  NSString *localizedRecoveryOption
 @property  @? recoveryHandler
 @property  long long recoveryOptionIndex

  // instance methods
  -[CDPDRecoveryOption .cxx_destruct]
  -[CDPDRecoveryOption localizedRecoveryOption]
  -[CDPDRecoveryOption recoveryHandler]
  -[CDPDRecoveryOption setLocalizedRecoveryOption:]
  -[CDPDRecoveryOption setRecoveryHandler:]
  -[CDPDRecoveryOption recoveryOptionIndex]
  -[CDPDRecoveryOption setRecoveryOptionIndex:]


CDPDCircleJoinResult : NSObject
 @property  BOOL didJoin
 @property  BOOL needsBackupRecovery
 @property  BOOL hasPeersForRemoteApproval
 @property  BOOL hasPeersWithCDPBackupRecords
 @property  BOOL requiresEscrowRecordsFetch
 @property  BOOL requiresInitialSync
 @property  unsigned long remotePeeriCKState
 @property  unsigned long circleStatus

  // instance methods
  -[CDPDCircleJoinResult circleStatus]
  -[CDPDCircleJoinResult didJoin]
  -[CDPDCircleJoinResult setCircleStatus:]
  -[CDPDCircleJoinResult hasPeersForRemoteApproval]
  -[CDPDCircleJoinResult requiresInitialSync]
  -[CDPDCircleJoinResult setDidJoin:]
  -[CDPDCircleJoinResult needsBackupRecovery]
  -[CDPDCircleJoinResult setNeedsBackupRecovery:]
  -[CDPDCircleJoinResult setHasPeersForRemoteApproval:]
  -[CDPDCircleJoinResult hasPeersWithCDPBackupRecords]
  -[CDPDCircleJoinResult setHasPeersWithCDPBackupRecords:]
  -[CDPDCircleJoinResult requiresEscrowRecordsFetch]
  -[CDPDCircleJoinResult setRequiresEscrowRecordsFetch:]
  -[CDPDCircleJoinResult setRequiresInitialSync:]
  -[CDPDCircleJoinResult remotePeeriCKState]
  -[CDPDCircleJoinResult setRemotePeeriCKState:]


CDPCAReporter : NSObject
  // instance methods
  -[CDPCAReporter objectForKeyedSubscript:]
  -[CDPCAReporter .cxx_destruct]
  -[CDPCAReporter setObject:forKeyedSubscript:]
  -[CDPCAReporter initWithEvent:]
  -[CDPCAReporter sendReport]
  -[CDPCAReporter machAbsoluteTimeToTimeInterval:]


CDPTTSUChannel : NSObject <CDPSecureChannelProxy, CDPSecureChannelApprovingProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPTTSUChannel .cxx_destruct]
  -[CDPTTSUChannel initWithContext:]
  -[CDPTTSUChannel sendPayload:completion:]
  -[CDPTTSUChannel approverBackupRecordsExist]
  -[CDPTTSUChannel approveriCloudKeychainState]
  -[CDPTTSUChannel listenForPayloadsWithHandler:]
  -[CDPTTSUChannel setApproverBackupRecordsExist:]
  -[CDPTTSUChannel setApproveriCloudKeychainState:]


CDPDRemoteDeviceSecretValidator : CDPDDeviceSecretValidator
  // instance methods
  -[CDPDRemoteDeviceSecretValidator .cxx_destruct]
  -[CDPDRemoteDeviceSecretValidator setValidSecretHandler:]
  -[CDPDRemoteDeviceSecretValidator resetAccountCDPState]
  -[CDPDRemoteDeviceSecretValidator cancelApproveFromAnotherDevice]
  -[CDPDRemoteDeviceSecretValidator _decoratedDelegate]
  -[CDPDRemoteDeviceSecretValidator approveFromAnotherDeviceWithCompletion:]
  -[CDPDRemoteDeviceSecretValidator validateCustodianRecoveryInfo:withCompletion:]
  -[CDPDRemoteDeviceSecretValidator supportedEscapeOfferMaskCompletion:]


CDPDBackupInfoRecoveryFlowController : CDPDRecoveryFlowController
 @property  NSArray *recoveryRecords
 @property  <CDPDBackupRecoveryResultsParser> *resultParser
 @property  <CDPDBackupRecoveryErrorProvider> *errorProvider

  // instance methods
  -[CDPDBackupInfoRecoveryFlowController .cxx_destruct]
  -[CDPDBackupInfoRecoveryFlowController errorProvider]
  -[CDPDBackupInfoRecoveryFlowController retrieveInflatedDevices:]
  -[CDPDBackupInfoRecoveryFlowController secretValidator:shouldContinueValidationAfterError:]
  -[CDPDBackupInfoRecoveryFlowController secretValidator:didFailRecoveryWithErrors:completion:]
  -[CDPDBackupInfoRecoveryFlowController resultParser]
  -[CDPDBackupInfoRecoveryFlowController _recoveryListFromDevices:]
  -[CDPDBackupInfoRecoveryFlowController setRecoveryRecords:]
  -[CDPDBackupInfoRecoveryFlowController _updateRecordRecoveryStatusForRecordDictionary:]
  -[CDPDBackupInfoRecoveryFlowController beginRecoveryWithCompletion:]
  -[CDPDBackupInfoRecoveryFlowController setResultParser:]
  -[CDPDBackupInfoRecoveryFlowController setErrorProvider:]
  -[CDPDBackupInfoRecoveryFlowController recoveryRecords]


CDPDCircleController : NSObject
 @property  <CDPStateUIProviderInternal> *uiProvider
 @property  NSObject<CDPDCircleDelegate> *delegate
 @property  <CDPDCircleProxy> *circleProxy

  // instance methods
  -[CDPDCircleController uiProvider]
  -[CDPDCircleController peerID]
  -[CDPDCircleController setUiProvider:]
  -[CDPDCircleController circleStatus]
  -[CDPDCircleController .cxx_destruct]
  -[CDPDCircleController setDelegate:]
  -[CDPDCircleController delegate]
  -[CDPDCircleController dealloc]
  -[CDPDCircleController joinCircleWithCompletion:]
  -[CDPDCircleController circleProxy]
  -[CDPDCircleController synchronizeCircleViews]
  -[CDPDCircleController setCircleProxy:]
  -[CDPDCircleController initWithUiProvider:delegate:circleProxy:]
  -[CDPDCircleController useCircleInfoToUpdateNameForDevices:]
  -[CDPDCircleController applyToJoinCircleWithJoinHandler:]
  -[CDPDCircleController cancelApplicationToJoinCircle]
  -[CDPDCircleController prepareCircleStateForRecovery]
  -[CDPDCircleController joinCircleIgnoringBackups:completion:]
  -[CDPDCircleController _joinCircleIgnoringBackups:completion:]
  -[CDPDCircleController _joinCircleFallbackWithResult:ignoreBackups:completion:]
  -[CDPDCircleController promptForCredentials:]
  -[CDPDCircleController _attemptCustodianBackupRecoveryWithInfo:result:ignoreBackups:completion:]
  -[CDPDCircleController canRetryCliqueStatus]
  -[CDPDCircleController nextRetryInterval]
  -[CDPDCircleController _requestToJoinAndWaitForSuccessWithHandler:]
  -[CDPDCircleController _silentReauthWithCompletion:]
  -[CDPDCircleController _peerDeviceNamesByPeerID]
  -[CDPDCircleController _requestToJoinWithObserver:completion:]
  -[CDPDCircleController _requestCircleJoinWithObserver:requestBlock:completion:]
  -[CDPDCircleController _requestToJoinWithRequestBlock:completion:]
  -[CDPDCircleController resetCircleIncludingCloudKitData:cloudKitResetReasonDescription:withCompletion:]
  -[CDPDCircleController _requestToJoinAfterRestoreAndWaitForSuccessWithHandler:]


CDPDLocalSecretController : NSObject <CDPDCircleDelegate, CDPDSecureBackupDelegate>
 @property  CDPContext *context
 @property  CDPDCircleController *circleController
 @property  CDPDSecureBackupController *secureBackupController
 @property  <CDPStateUIProviderInternal> *uiProvider
 @property  <CDPLocalSecretFollowUpProvider> *followUpProvider

  // instance methods
  -[CDPDLocalSecretController uiProvider]
  -[CDPDLocalSecretController setUiProvider:]
  -[CDPDLocalSecretController .cxx_destruct]
  -[CDPDLocalSecretController initWithContext:]
  -[CDPDLocalSecretController attemptToEscrowPreRecord:completion:]
  -[CDPDLocalSecretController setContext:]
  -[CDPDLocalSecretController dealloc]
  -[CDPDLocalSecretController localSecretChangedTo:secretType:completion:]
  -[CDPDLocalSecretController finishOfflineLocalSecretChangeWithCompletion:]
  -[CDPDLocalSecretController context]
  -[CDPDLocalSecretController circleController]
  -[CDPDLocalSecretController setCircleController:]
  -[CDPDLocalSecretController secureBackupController]
  -[CDPDLocalSecretController setSecureBackupController:]
  -[CDPDLocalSecretController contextForController:]
  -[CDPDLocalSecretController secureChannelContextForController:]
  -[CDPDLocalSecretController circleController:secureBackupRecordsArePresentWithCompletion:]
  -[CDPDLocalSecretController _handleCompletionStatus:preRecord:]
  -[CDPDLocalSecretController _attemptToEscrowPreRecord:completion:]
  -[CDPDLocalSecretController _createContextForSecret:withCompletion:]
  -[CDPDLocalSecretController _repairWithStateMachine:completion:]
  -[CDPDLocalSecretController _localSecretChangedTo:secretType:completion:]
  -[CDPDLocalSecretController _cdpStateMachine]
  -[CDPDLocalSecretController _collectLocalSecretWithCompletion:]
  -[CDPDLocalSecretController followUpProvider]
  -[CDPDLocalSecretController _setContextWithAuthResults:]
  -[CDPDLocalSecretController circlePeerIDForSecureBackupController:]
  -[CDPDLocalSecretController synchronizeCircleViewsForSecureBackupContext:]
  -[CDPDLocalSecretController promptForAdoptionOfMultipleICSCWithCompletion:]
  -[CDPDLocalSecretController promptForLocalSecretWithCompletion:]
  -[CDPDLocalSecretController setFollowUpProvider:]


CDPDAuthObserver : NSObject <CDPDXPCEventListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDAuthObserver registerListener:]
  -[CDPDAuthObserver .cxx_destruct]
  -[CDPDAuthObserver init]
  -[CDPDAuthObserver eventReceived:eventInfo:]


CDPDRecoveryKeyController : NSObject <CDPDRecoveryKeyValidatorInternalDelegate, CDPDDeviceSecretValidatorDelegate>
 @property  <CDPStateUIProviderInternal> *uiProvider
 @property  <CDPDCircleProxy> *circleProxy
 @property  <CDPDSecureBackupProxy> *sbProxy
 @property  <CDPDOctagonTrustProxy> *otProxy
 @property  <CDPAuthProviderInternal> *recoveryAuthProvider
 @property  <CDPDAuthProviderInternal> *internalAuthProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDRecoveryKeyController uiProvider]
  -[CDPDRecoveryKeyController setUiProvider:]
  -[CDPDRecoveryKeyController generateNewRecoveryKey:]
  -[CDPDRecoveryKeyController verifyRecoveryKey:]
  -[CDPDRecoveryKeyController .cxx_destruct]
  -[CDPDRecoveryKeyController initWithContext:uiProvider:]
  -[CDPDRecoveryKeyController initWithContext:]
  -[CDPDRecoveryKeyController sbProxy]
  -[CDPDRecoveryKeyController otProxy]
  -[CDPDRecoveryKeyController generateRandomRecoveryKey:]
  -[CDPDRecoveryKeyController dealloc]
  -[CDPDRecoveryKeyController generateRecoveryKeyWithInfo:error:]
  -[CDPDRecoveryKeyController deleteRecoveryKey:]
  -[CDPDRecoveryKeyController circleProxy]
  -[CDPDRecoveryKeyController setCircleProxy:]
  -[CDPDRecoveryKeyController secretValidator:recoverSecureBackupWithContext:completion:]
  -[CDPDRecoveryKeyController secretValidator:shouldContinueValidationAfterError:]
  -[CDPDRecoveryKeyController initWithContext:uiProvider:authProvider:]
  -[CDPDRecoveryKeyController initWithContext:uiProvider:authProvider:circleProxy:secureBackupProxy:octagonTrustProxy:pcsProxy:]
  -[CDPDRecoveryKeyController enableBackupWithRecoveryKey:completion:]
  -[CDPDRecoveryKeyController recoverState:]
  -[CDPDRecoveryKeyController recoverAndSynchronizeStateWithServer:]
  -[CDPDRecoveryKeyController isRecoveryKeyAvailable]
  -[CDPDRecoveryKeyController recoverDataUsingMasterKeyWithCompletion:]
  -[CDPDRecoveryKeyController setSbProxy:]
  -[CDPDRecoveryKeyController setOtProxy:]
  -[CDPDRecoveryKeyController recoveryAuthProvider]
  -[CDPDRecoveryKeyController setRecoveryAuthProvider:]
  -[CDPDRecoveryKeyController internalAuthProvider]
  -[CDPDRecoveryKeyController setInternalAuthProvider:]


CDPDDeviceSecretValidator : NSObject <CDPRemoteDeviceSecretValidatorProtocolInternal>
 @property  BOOL isUsingMultipleICSC
 @property  @? validSecretHandler
 @property  <CDPDDeviceSecretValidatorDelegate> *delegate
 @property  unsigned long supportedEscapeOfferMask
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDDeviceSecretValidator failedAttempts]
  -[CDPDDeviceSecretValidator .cxx_destruct]
  -[CDPDDeviceSecretValidator setDelegate:]
  -[CDPDDeviceSecretValidator init]
  -[CDPDDeviceSecretValidator delegate]
  -[CDPDDeviceSecretValidator cancelValidationWithError:]
  -[CDPDDeviceSecretValidator initWithContext:delegate:]
  -[CDPDDeviceSecretValidator setIsUsingMultipleICSC:]
  -[CDPDDeviceSecretValidator setValidSecretHandler:]
  -[CDPDDeviceSecretValidator setSupportedEscapeOfferMask:]
  -[CDPDDeviceSecretValidator supportedEscapeOfferMask]
  -[CDPDDeviceSecretValidator resetAccountCDPState]
  -[CDPDDeviceSecretValidator cancelApproveFromAnotherDevice]
  -[CDPDDeviceSecretValidator isAttemptingRecovery]
  -[CDPDDeviceSecretValidator validSecretHandler]
  -[CDPDDeviceSecretValidator approveFromAnotherDeviceWithCompletion:]
  -[CDPDDeviceSecretValidator validateCustodianRecoveryInfo:withCompletion:]
  -[CDPDDeviceSecretValidator supportedEscapeOfferMaskCompletion:]
  -[CDPDDeviceSecretValidator _isFailedSecret:forDevice:]
  -[CDPDDeviceSecretValidator _handleMultiCSCRecoveryResults:clique:type:secret:device:completion:]
  -[CDPDDeviceSecretValidator _attemptToRecoverWithRecoveryKey:completion:]
  -[CDPDDeviceSecretValidator isUsingMultipleICSC]
  -[CDPDDeviceSecretValidator _handleMultiCSCRecoveryFailureForDevice:recoveryError:secret:]
  -[CDPDDeviceSecretValidator _handleRecoveryFailureForFinalDevice:completion:]
  -[CDPDDeviceSecretValidator validateSecret:devices:type:withCompletion:]
  -[CDPDDeviceSecretValidator _attemptToRecoverDevice:withSecret:completion:]
  -[CDPDDeviceSecretValidator _performSingleiCSCRecoveryWithSecret:type:completion:]
  -[CDPDDeviceSecretValidator _handleDelegateValidationError:]
  -[CDPDDeviceSecretValidator _isInvalidICSCError:]
  -[CDPDDeviceSecretValidator _failedSecretsForDevice:]
  -[CDPDDeviceSecretValidator _failedSingleICSCs]
  -[CDPDDeviceSecretValidator validateRecoveryKey:withCompletion:]


CDPDataPrivacyAppleAccountProxy : NSObject <CDPAppleAccountProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDataPrivacyAppleAccountProxy custodianAvailableWithCompletion:]


CDPDRecoveryKeyValidatorImpl : NSObject <CDPRecoveryKeyValidatorInternal>
 @property  BOOL recoveryKeyVerified
 @property  NSString *recoveryKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDRecoveryKeyValidatorImpl .cxx_destruct]
  -[CDPDRecoveryKeyValidatorImpl setRecoveryKey:]
  -[CDPDRecoveryKeyValidatorImpl recoveryKey]
  -[CDPDRecoveryKeyValidatorImpl initWithContext:delegate:]
  -[CDPDRecoveryKeyValidatorImpl confirmRecoveryKey:completion:]
  -[CDPDRecoveryKeyValidatorImpl generateRecoveryKey:]
  -[CDPDRecoveryKeyValidatorImpl recoveryKeyVerified]
  -[CDPDRecoveryKeyValidatorImpl setRecoveryKeyVerified:]


CDPDSecureBackupController : NSObject
 @property  NSDictionary *cachedAccountInfo
 @property  BOOL fakeNearlyDepletedRecords
 @property  <CDPDSecureBackupProxy> *secureBackupProxy
 @property  <CDPDOctagonTrustProxy> *octagonTrustProxy
 @property  <CDPDSecureBackupDelegate> *delegate
 @property  CDPDSecureBackupConfiguration *configuration
 @property  CDPContext *context
 @property  <CDPStateUIProviderInternal> *uiProvider

  // class methods
  +[CDPDSecureBackupController _dateWithSecureBackupDateString:]
  +[CDPDSecureBackupController _sanitizedInfoDictionary:]
  +[CDPDSecureBackupController _printableAccountInfo:]

  // instance methods
  -[CDPDSecureBackupController accountInfoWithCompletion:]
  -[CDPDSecureBackupController uiProvider]
  -[CDPDSecureBackupController cachedAccountInfo]
  -[CDPDSecureBackupController upgradeICSCRecordsThenEnableSecureBackupWithContext:completion:]
  -[CDPDSecureBackupController performSilentEscrowRecoveryWithCDPContext:error:]
  -[CDPDSecureBackupController clearAccountInfoCache]
  -[CDPDSecureBackupController _authenticatedEnableSecureBackupWithContext:completion:]
  -[CDPDSecureBackupController _accountInfo:]
  -[CDPDSecureBackupController deleteSingleICSCBackupWithCompletion:]
  -[CDPDSecureBackupController performEscrowRecoveryWithData:error:]
  -[CDPDSecureBackupController _getOctagonEscrowBackupRecordDevicesWithOptionForceFetch:completion:]
  -[CDPDSecureBackupController configuration]
  -[CDPDSecureBackupController _currentAnisetteData]
  -[CDPDSecureBackupController initWithContext:uiProvider:delegate:]
  -[CDPDSecureBackupController .cxx_destruct]
  -[CDPDSecureBackupController _enableSecureBackupWithContext:completion:]
  -[CDPDSecureBackupController _clientMetadataWithSecretType:length:]
  -[CDPDSecureBackupController setFakeNearlyDepletedRecords:]
  -[CDPDSecureBackupController initWithContext:secureBackupProxy:octagonTrustProxy:]
  -[CDPDSecureBackupController octagonTrustProxy]
  -[CDPDSecureBackupController isEligibleForCDPWithCompletion:]
  -[CDPDSecureBackupController performEscrowRecoveryWithRecoveryContext:completion:]
  -[CDPDSecureBackupController setDelegate:]
  -[CDPDSecureBackupController enableSecureBackupWithRecoveryKey:completion:]
  -[CDPDSecureBackupController setOctagonTrustProxy:]
  -[CDPDSecureBackupController fetchAllEscrowRecordsWithOptionForceFetch:completion:]
  -[CDPDSecureBackupController authenticatedEnableSecureBackupWithRecoveryKey:error:]
  -[CDPDSecureBackupController backupRecordsArePresentWithCompletion:]
  -[CDPDSecureBackupController _recoverBackupDictionaryWithContext:error:]
  -[CDPDSecureBackupController handleCDPDevices:]
  -[CDPDSecureBackupController _deleteAllBackupRecordsWithCompletion:]
  -[CDPDSecureBackupController recoverSecureBackupWithContext:completion:]
  -[CDPDSecureBackupController _disableThenEnableWithInfo:error:]
  -[CDPDSecureBackupController getBackupRecordDevicesWithOptionForceFetch:completion:]
  -[CDPDSecureBackupController _disableSecureBackup:]
  -[CDPDSecureBackupController recordIsEmpty:]
  -[CDPDSecureBackupController fetchEscrowRecordsWithOptionForceFetch:completion:]
  -[CDPDSecureBackupController performEscrowRecoveryWithRecoveryContext:error:]
  -[CDPDSecureBackupController fakeNearlyDepletedRecords]
  -[CDPDSecureBackupController delegate]
  -[CDPDSecureBackupController setCachedAccountInfo:]
  -[CDPDSecureBackupController _recoveryInfoDictionaryFromContext:]
  -[CDPDSecureBackupController _getBackupRecordDevicesIncludingUnrecoverableRecords:]
  -[CDPDSecureBackupController secureBackupProxy]
  -[CDPDSecureBackupController setSecureBackupProxy:]
  -[CDPDSecureBackupController _disableRecoveryKey:]
  -[CDPDSecureBackupController disableRecoveryKeyWithCompletion:]
  -[CDPDSecureBackupController synchronizeKeyValueStoreWithCompletion:]
  -[CDPDSecureBackupController deleteAllBackupRecordsWithCompletion:]
  -[CDPDSecureBackupController checkForExistingRecordWithPeerId:completion:]
  -[CDPDSecureBackupController supportsRecoveryKey]
  -[CDPDSecureBackupController checkForExistingRecord:]
  -[CDPDSecureBackupController checkForExistingRecordMatchingPredicate:forceFetch:completion:]
  -[CDPDSecureBackupController _deleteSingleICSCBackupWithCompletion:]
  -[CDPDSecureBackupController checkAndRemoveExistingThenEnableSecureBackupRecordWithContext:completion:]
  -[CDPDSecureBackupController enableSecureBackupWithContext:completion:]
  -[CDPDSecureBackupController context]
  -[CDPDSecureBackupController disableSecureBackupWithCompletion:]
  -[CDPDSecureBackupController setConfiguration:]


CDPDAccount : NSObject
 @property  BOOL hasDisabledKeychainExplicitly

  // instance methods
  -[CDPDAccount isICDPEnabledForDSID:checkWithServer:]
  -[CDPDAccount setHasDisabledKeychainExplicitly:]
  -[CDPDAccount hasDisabledKeychainExplicitly]


CDPDFollowUpFactory : NSObject
  // class methods
  +[CDPDFollowUpFactory contextToIdentifierMap]

  // instance methods
  -[CDPDFollowUpFactory _offlineSecretChangeFollowUpAction]
  -[CDPDFollowUpFactory _isBiometricAuthEnrolled]
  -[CDPDFollowUpFactory _secureTermsFollowUpAction]
  -[CDPDFollowUpFactory _followUpForRepairWithContext:]
  -[CDPDFollowUpFactory _confirmExistingSecretFollowUpAction]
  -[CDPDFollowUpFactory _followUpActionForRepair]
  -[CDPDFollowUpFactory _followUpForRecoveryKeyRepairWithContext:]
  -[CDPDFollowUpFactory _followUpForSettingUpBiometricsWithContext:]
  -[CDPDFollowUpFactory secretType]
  -[CDPDFollowUpFactory _supportsFaceID]
  -[CDPDFollowUpFactory _followUpForOfflineSecretChangeWithContext:]
  -[CDPDFollowUpFactory _baseFollowUpItemWithContext:]
  -[CDPDFollowUpFactory identifierForContext:]
  -[CDPDFollowUpFactory _localizedStringForKey:]
  -[CDPDFollowUpFactory _isBiometricCapable]
  -[CDPDFollowUpFactory _followUpForConfirmExistingSecretWithContext:]
  -[CDPDFollowUpFactory _followUpForSecureTermsWithContext:]
  -[CDPDFollowUpFactory followUpItemWithContext:]
  -[CDPDFollowUpFactory _followUpActionForRecoveryKeyRepair]
  -[CDPDFollowUpFactory _isManateeAvailable]


CDPDXPCEventObserver : NSObject
  // class methods
  +[CDPDXPCEventObserver sharedObserver]

  // instance methods
  -[CDPDXPCEventObserver registerListener:]
  -[CDPDXPCEventObserver _setupDistributedListener]
  -[CDPDXPCEventObserver .cxx_destruct]
  -[CDPDXPCEventObserver start]
  -[CDPDXPCEventObserver _setupDarwinListener]


CDPDBackupFMIPResultsParser : NSObject <CDPDBackupRecoveryResultsParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDBackupFMIPResultsParser resultsDictionaryFromRecoveryResult:error:]


CDPDBackupIDMSErrorProvider : CDPDBackupErrorProviderImpl
  // instance methods
  -[CDPDBackupIDMSErrorProvider recordNotFoundErrorWithUnderlyingError:]
  -[CDPDBackupIDMSErrorProvider supportsErrorPresentation]
  -[CDPDBackupIDMSErrorProvider cooldownErrorWithUnderlyingError:]
  -[CDPDBackupIDMSErrorProvider handleSoftLimitError:completion:]
  -[CDPDBackupIDMSErrorProvider globalHardLimitError]
  -[CDPDBackupIDMSErrorProvider handleHardLimitError:completion:]
  -[CDPDBackupIDMSErrorProvider globalHardLimitErrorWithRecord:]
  -[CDPDBackupIDMSErrorProvider hardLimitErrorForRecord:]


CDPDFollowUpController : NSObject <CDPDAuthListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CDPDFollowUpController sharedInstance]

  // instance methods
  -[CDPDFollowUpController _followUpControllerForContext:]
  -[CDPDFollowUpController .cxx_destruct]
  -[CDPDFollowUpController clearFollowUpWithContext:error:]
  -[CDPDFollowUpController init]
  -[CDPDFollowUpController securityLevelChanged:]
  -[CDPDFollowUpController postFollowUpItemForContext:error:]
  -[CDPDFollowUpController informativeText]
  -[CDPDFollowUpController dealloc]


CDPInternalDataPrivacyController : NSObject
 @property  <CDPDAuthProviderInternal> *authKitInterface
 @property  <CDPAppleAccountProxy> *appleAccountInterface
 @property  <CDPDSecureBackupProxy> *securityInterface

  // instance methods
  -[CDPInternalDataPrivacyController initWithAuthKitInterface:appleAccountInterface:securityInterface:]
  -[CDPInternalDataPrivacyController _deviceCheckForDataPrivacyDidCompleteWithContext:devicesLosingAccountAccess:deviceListFetchError:finalCompletion:]
  -[CDPInternalDataPrivacyController setSecurityInterface:]
  -[CDPInternalDataPrivacyController .cxx_destruct]
  -[CDPInternalDataPrivacyController _shouldContinueAfterRecoveryOptionsCheckWithContext:completion:]
  -[CDPInternalDataPrivacyController updateDataPrivacyWithContext:completion:]
  -[CDPInternalDataPrivacyController enableDataPrivacyWithContext:completion:]
  -[CDPInternalDataPrivacyController appleAccountInterface]
  -[CDPInternalDataPrivacyController statusForDataPrivacyWithCompletion:]
  -[CDPInternalDataPrivacyController _didFinishCheckingForRecoveryOptionsWithContext:completion:]
  -[CDPInternalDataPrivacyController setAppleAccountInterface:]
  -[CDPInternalDataPrivacyController _shouldContinueAfterPrimaryAccountCheckWithContext:completion:]
  -[CDPInternalDataPrivacyController securityInterface]
  -[CDPInternalDataPrivacyController _didEnableDataPrivacyOnAuthKitWithContext:enableError:finalCompletion:]
  -[CDPInternalDataPrivacyController authKitInterface]
  -[CDPInternalDataPrivacyController disableDataPrivacyWithCompletion:]
  -[CDPInternalDataPrivacyController _didEnableDataPrivacyOnSecurityWithContext:enableError:finalCompletion:]
  -[CDPInternalDataPrivacyController setAuthKitInterface:]


CDPDClientHandler : NSObject <CDPDaemonProtocol>
  // instance methods
  -[CDPDClientHandler handleCloudDataProtectionStateWithContext:uiProvider:completion:]
  -[CDPDClientHandler isUserVisibleKeychainSyncEnabledWithCompletion:]
  -[CDPDClientHandler fetchTermsAcceptanceForAccount:completion:]
  -[CDPDClientHandler _performRecoveryWithContext:uiProvider:authProvider:errorProviuder:resultParser:secureBackUpController:completion:]
  -[CDPDClientHandler .cxx_destruct]
  -[CDPDClientHandler attemptToEscrowPreRecord:preRecordUUID:secretType:context:completion:]
  -[CDPDClientHandler generateRandomRecoveryKeyWithContext:completion:]
  -[CDPDClientHandler setUserVisibleKeychainSyncEnabled:withCompletion:]
  -[CDPDClientHandler updateDataPrivacyWithContext:completion:]
  -[CDPDClientHandler localSecretChangedTo:secretType:context:uiProvider:completion:]
  -[CDPDClientHandler shouldPerformRepairForContext:forceFetch:completion:]
  -[CDPDClientHandler startCircleApplicationApprovalServerWithContext:completion:]
  -[CDPDClientHandler deleteRecoveryKeyWithContext:uiProvider:completion:]
  -[CDPDClientHandler postFollowUpWithContext:completion:]
  -[CDPDClientHandler generateNewRecoveryKeyWithContext:uiProvider:completion:]
  -[CDPDClientHandler _removeObserver]
  -[CDPDClientHandler initWithConnection:entitlements:clientType:]
  -[CDPDClientHandler _startObservingConnectionStateForRepairWithStateMachine:]
  -[CDPDClientHandler attemptToEscrowPreRecord:context:completion:]
  -[CDPDClientHandler saveTermsAcceptance:completion:]
  -[CDPDClientHandler hasLocalSecretWithCompletion:]
  -[CDPDClientHandler finishCyrusFlowAfterTermsAgreementWithContext:uiProvider:completion:]
  -[CDPDClientHandler isRecoveryKeyAvailableWithCompletion:]
  -[CDPDClientHandler _allowFollowUps]
  -[CDPDClientHandler statusForDataPrivacyWithCompletion:]
  -[CDPDClientHandler fetchEscrowRecordDevicesWithContext:usingCache:completion:]
  -[CDPDClientHandler _allowRecoveryKey]
  -[CDPDClientHandler dealloc]
  -[CDPDClientHandler performRecoveryWithContext:uiProvider:authProvider:completion:]
  -[CDPDClientHandler _allowStateMachineAccess]
  -[CDPDClientHandler removeNonViewAwarePeersFromCircleWithContext:completion:]
  -[CDPDClientHandler recoverAndSynchronizeSquirrelWithContext:uiProvider:completion:]
  -[CDPDClientHandler isICDPEnabledForDSID:checkWithServer:completion:]
  -[CDPDClientHandler verifyRecoveryKeyWithContext:uiProvider:completion:]
  -[CDPDClientHandler finishOfflineLocalSecretChangeWithContext:uiProvider:completion:]
  -[CDPDClientHandler repairCloudDataProtectionStateWithContext:uiProvider:completion:]
  -[CDPDClientHandler clearFollowUpWithContext:completion:]
  -[CDPDClientHandler _reportCDPJoinMetricsWithContext:didJoin:withError:]
  -[CDPDClientHandler recoverSquirrelWithContext:uiProvider:completion:]
  -[CDPDClientHandler _allowUtilityAccess]
  -[CDPDClientHandler _allowDataRecovery]


CDPDStateMachine : NSObject <CDPDSecureBackupDelegate, CDPDCircleDelegate>
 @property  CDPDSecureBackupController *secureBackupController
 @property  CDPDCircleController *circleController
 @property  CDPDPCSController *pcsController
 @property  CDPContext *context
 @property  <CDPStateUIProviderInternal> *uiProvider
 @property  BOOL attemptedCDPEnable

  // instance methods
  -[CDPDStateMachine uiProvider]
  -[CDPDStateMachine setUiProvider:]
  -[CDPDStateMachine repairCloudDataProtectionStateWithCompletion:]
  -[CDPDStateMachine .cxx_destruct]
  -[CDPDStateMachine initWithContext:uiProvider:]
  -[CDPDStateMachine shouldPerformRepairWithOptionForceFetch:completion:]
  -[CDPDStateMachine handleCloudDataProtectionStateWithCompletion:]
  -[CDPDStateMachine setContext:]
  -[CDPDStateMachine dealloc]
  -[CDPDStateMachine shouldAllowCDPEnrollment]
  -[CDPDStateMachine context]
  -[CDPDStateMachine circleController]
  -[CDPDStateMachine setCircleController:]
  -[CDPDStateMachine secureBackupController]
  -[CDPDStateMachine setSecureBackupController:]
  -[CDPDStateMachine contextForController:]
  -[CDPDStateMachine secureChannelContextForController:]
  -[CDPDStateMachine circleController:secureBackupRecordsArePresentWithCompletion:]
  -[CDPDStateMachine circlePeerIDForSecureBackupController:]
  -[CDPDStateMachine synchronizeCircleViewsForSecureBackupContext:]
  -[CDPDStateMachine promptForAdoptionOfMultipleICSCWithCompletion:]
  -[CDPDStateMachine promptForLocalSecretWithCompletion:]
  -[CDPDStateMachine _isICloudKeychainDisabledByManagementProfile]
  -[CDPDStateMachine _handleCloudDataProtectionStateWithCompletion:]
  -[CDPDStateMachine _handleBeneficiaryTrustWithCompletion:]
  -[CDPDStateMachine _enrollOrDisableCDPAfterEnabledStateVerified:]
  -[CDPDStateMachine _handleiCDPStatusCheckError:completion:]
  -[CDPDStateMachine _attemptCDPEnable:]
  -[CDPDStateMachine _handlePreflightError:completion:]
  -[CDPDStateMachine _preflightAccountStateWithContext:completion:]
  -[CDPDStateMachine _beneficiaryTrustQueue]
  -[CDPDStateMachine _attemptBeneficiaryTrustWithInheritanceKey:retryCount:completion:]
  -[CDPDStateMachine _handleJoinResult:completion:]
  -[CDPDStateMachine _handleRecoveryResetRequestWithCompletion:]
  -[CDPDStateMachine _recoverSecureBackupWithCircleJoinResult:completion:]
  -[CDPDStateMachine _disableCloudDataProtectionWithCompletion:]
  -[CDPDStateMachine _disableRecoveryKeyWithCompletion:]
  -[CDPDStateMachine _enableSecureBackupWithCircleJoinResult:completion:]
  -[CDPDStateMachine _resetAccountCDPStateWithCompletion:]
  -[CDPDStateMachine _predicateForRecordUpgradeCheckIgnoringBottled]
  -[CDPDStateMachine _confirmCDPEligibilityWithCompletion:]
  -[CDPDStateMachine _refreshAndAuthenticateWithContext:]
  -[CDPDStateMachine _authenticatedShouldPerformRepairWithOptionForceFetch:completion:]
  -[CDPDStateMachine _predicateForRepair]
  -[CDPDStateMachine _performSilentlyAuthenticatedRepair:]
  -[CDPDStateMachine _authenticatedRepairCloudDataProtectionStateWithCompletion:]
  -[CDPDStateMachine _performInteractivelyAuthenticatedRepair:]
  -[CDPDStateMachine _enableKVSForAccount:store:completion:]
  -[CDPDStateMachine _attemptBackupRecoveryWithLocalSecret:type:useCachedSecret:circleJoinResult:completion:]
  -[CDPDStateMachine _handleInteractiveRecoveryFlowWithCircleJoinResult:completion:]
  -[CDPDStateMachine _attemptBackupRecoveryByPromptingForRemoteSecretWithLocalSecret:localSecretType:useCachedSecret:circleJoinResult:completion:]
  -[CDPDStateMachine _postRecoveryEnableSecureBackupWithContext:completion:]
  -[CDPDStateMachine _enableCustodianRecoveryIfAvailableForContext:]
  -[CDPDStateMachine _disableAsyncModeRequested]
  -[CDPDStateMachine _predicateForRecordUpgradeCheck]
  -[CDPDStateMachine pcsController]
  -[CDPDStateMachine setPcsController:]
  -[CDPDStateMachine attemptedCDPEnable]
  -[CDPDStateMachine setAttemptedCDPEnable:]


CDPStateHandlerResult : NSObject
 @property  BOOL cloudDataProtectionEnabled
 @property  BOOL shouldCompleteSignIn
 @property  unsigned long peeriCloudKeychainState
 @property  NSError *error

  // class methods
  +[CDPStateHandlerResult resultWithError:]
  +[CDPStateHandlerResult resultWithCloudDataProtectionEnabled:shouldCompleteSignIn:error:]
  +[CDPStateHandlerResult successResult]
  +[CDPStateHandlerResult resultWithCloudDataProtectionEnabled:shouldCompleteSignIn:peeriCloudKeychainState:error:]

  // instance methods
  -[CDPStateHandlerResult .cxx_destruct]
  -[CDPStateHandlerResult setError:]
  -[CDPStateHandlerResult error]
  -[CDPStateHandlerResult shouldCompleteSignIn]
  -[CDPStateHandlerResult cloudDataProtectionEnabled]
  -[CDPStateHandlerResult peeriCloudKeychainState]
  -[CDPStateHandlerResult setCloudDataProtectionEnabled:]
  -[CDPStateHandlerResult setShouldCompleteSignIn:]
  -[CDPStateHandlerResult setPeeriCloudKeychainState:]


CDPDSecureChannelContext : NSObject
 @property  <CDPKeychainCircleProxy> *keychainCircleProxy
 @property  <CDPSecureChannelProxy> *secureChannelProxy
 @property  <CDPDCircleProxy> *circleProxy

  // instance methods
  -[CDPDSecureChannelContext .cxx_destruct]
  -[CDPDSecureChannelContext dealloc]
  -[CDPDSecureChannelContext circleProxy]
  -[CDPDSecureChannelContext setCircleProxy:]
  -[CDPDSecureChannelContext initialize:]
  -[CDPDSecureChannelContext initWithContext:circleProxy:]
  -[CDPDSecureChannelContext initWithChannel:dataProvider:circleProxy:]
  -[CDPDSecureChannelContext keychainCircleProxy]
  -[CDPDSecureChannelContext setKeychainCircleProxy:]
  -[CDPDSecureChannelContext secureChannelProxy]
  -[CDPDSecureChannelContext setSecureChannelProxy:]


CDPCALocalSecretReporter : CDPCAReporter
  // instance methods
  -[CDPCALocalSecretReporter init]
  -[CDPCALocalSecretReporter didChangeLocalSecret]
  -[CDPCALocalSecretReporter didRemoveLocalSecret]


CDPDSecureBackupConfiguration : NSObject
  // class methods
  +[CDPDSecureBackupConfiguration configurationWithContext:andSession:]
  +[CDPDSecureBackupConfiguration _configurationRequestWithURLString:]
  +[CDPDSecureBackupConfiguration configurationWithContext:]

  // instance methods
  -[CDPDSecureBackupConfiguration _escrowProxyURL]
  -[CDPDSecureBackupConfiguration escrowAuthInfo]
  -[CDPDSecureBackupConfiguration _escrowConfigurationBagFull]
  -[CDPDSecureBackupConfiguration _escrowProxyConfigurationURLRequest]
  -[CDPDSecureBackupConfiguration .cxx_destruct]
  -[CDPDSecureBackupConfiguration _fetchEscrowConfigurationBag]
  -[CDPDSecureBackupConfiguration _escrowProxyConfigurationURL]
  -[CDPDSecureBackupConfiguration _configurationInfoURLRequest]
  -[CDPDSecureBackupConfiguration _setupConfigurationURLs]
  -[CDPDSecureBackupConfiguration _fetchConfigurationWithRequest:]
  -[CDPDSecureBackupConfiguration _iCloudEnvironment]
  -[CDPDSecureBackupConfiguration accountInfoFetchSetupDictionary]
  -[CDPDSecureBackupConfiguration _fetchConfigurationDictionary]
  -[CDPDSecureBackupConfiguration _escrowConfigurationBag]


CDPDLockAssertion : NSObject
  // class methods
  +[CDPDLockAssertion lock]
  +[CDPDLockAssertion lockWithError:]

  // instance methods
  -[CDPDLockAssertion unlock]


CDPDKeychainSync : NSObject
  // class methods
  +[CDPDKeychainSync keyChainSync]
  +[CDPDKeychainSync keyChainSyncWithProxy:]
  +[CDPDKeychainSync _defaultUserVisibleViewSet]

  // instance methods
  -[CDPDKeychainSync .cxx_destruct]
  -[CDPDKeychainSync setUserVisibleKeychainSyncEnabled:withCompletion:]
  -[CDPDKeychainSync isUserVisibleKeychainSyncEnabled]
  -[CDPDKeychainSync removeNonViewAwarePeersFromCircleWithCompletion:]
  -[CDPDKeychainSync synchronizeKeychainViewSetWithOtherPeers:]
  -[CDPDKeychainSync matchKeychainViewState:]
  -[CDPDKeychainSync _isThisDeviceInCircle]
  -[CDPDKeychainSync _setKeychainSyncState:]
  -[CDPDKeychainSync _preflightCircleStatusWithCompletion:]
  -[CDPDKeychainSync _processAuthFailure:completion:]


CDPDSecureBackupContext : NSObject
 @property  NSString *localSecret
 @property  unsigned long localSecretType
 @property  CDPDevice *device
 @property  NSString *recoverySecret
 @property  BOOL silentRecovery
 @property  NSString *recoveryKey
 @property  BOOL usePreviouslyCachedRecoveryKey
 @property  BOOL usePreviouslyCachedSecret
 @property  CDPDCircleJoinResult *circleJoinResult
 @property  NSString *preRecordUUID

  // instance methods
  -[CDPDSecureBackupContext setDevice:]
  -[CDPDSecureBackupContext .cxx_destruct]
  -[CDPDSecureBackupContext device]
  -[CDPDSecureBackupContext setRecoverySecret:]
  -[CDPDSecureBackupContext setRecoveryKey:]
  -[CDPDSecureBackupContext setUsePreviouslyCachedRecoveryKey:]
  -[CDPDSecureBackupContext recoverySecret]
  -[CDPDSecureBackupContext recoveryKey]
  -[CDPDSecureBackupContext usePreviouslyCachedRecoveryKey]
  -[CDPDSecureBackupContext localSecretType]
  -[CDPDSecureBackupContext setPreRecordUUID:]
  -[CDPDSecureBackupContext setLocalSecret:]
  -[CDPDSecureBackupContext setLocalSecretType:]
  -[CDPDSecureBackupContext circleJoinResult]
  -[CDPDSecureBackupContext setUsePreviouslyCachedSecret:]
  -[CDPDSecureBackupContext localSecret]
  -[CDPDSecureBackupContext usePreviouslyCachedSecret]
  -[CDPDSecureBackupContext preRecordUUID]
  -[CDPDSecureBackupContext silentRecovery]
  -[CDPDSecureBackupContext setSilentRecovery:]
  -[CDPDSecureBackupContext setCircleJoinResult:]


CDPDBackupErrorProviderImpl : NSObject <CDPDBackupRecoveryErrorProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDBackupErrorProviderImpl .cxx_destruct]
  -[CDPDBackupErrorProviderImpl initWithContext:uiProvider:]
  -[CDPDBackupErrorProviderImpl setPrevailingSecret:]
  -[CDPDBackupErrorProviderImpl recordNotFoundErrorWithUnderlyingError:]
  -[CDPDBackupErrorProviderImpl verficationFailedErrorwithUnderlyingError:]
  -[CDPDBackupErrorProviderImpl supportsErrorPresentation]
  -[CDPDBackupErrorProviderImpl cooldownErrorWithUnderlyingError:]
  -[CDPDBackupErrorProviderImpl handleSoftLimitError:completion:]
  -[CDPDBackupErrorProviderImpl globalHardLimitError]
  -[CDPDBackupErrorProviderImpl handleHardLimitError:completion:]
  -[CDPDBackupErrorProviderImpl globalHardLimitErrorWithRecord:]
  -[CDPDBackupErrorProviderImpl hardLimitErrorForRecord:]


CDPDSecureChannelController : NSObject
  // instance methods
  -[CDPDSecureChannelController .cxx_destruct]
  -[CDPDSecureChannelController startCircleApplicationApprovalServerWithContext:completion:]
  -[CDPDSecureChannelController initWithContext:]
  -[CDPDSecureChannelController joinCircle:]
  -[CDPDSecureChannelController _processAndReplyWithMessage:completion:]
  -[CDPDSecureChannelController _startListeningWithProxy:]


CDPDLocalSecretFollowUpProviderImpl : NSObject <CDPLocalSecretFollowUpProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPDLocalSecretFollowUpProviderImpl deleteConfirmExistingSecretFollowUp]
  -[CDPDLocalSecretFollowUpProviderImpl deleteLocalSecretChangeFollowUp]
  -[CDPDLocalSecretFollowUpProviderImpl postConfirmExistingSecretFollowUp]
  -[CDPDLocalSecretFollowUpProviderImpl postLocalSecretChangeFollowUp]
  -[CDPDLocalSecretFollowUpProviderImpl postRepairFollowUp]


CDPPiggybackingChannel : NSObject <CDPSecureChannelProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPPiggybackingChannel .cxx_destruct]
  -[CDPPiggybackingChannel initWithContext:]
  -[CDPPiggybackingChannel sendPayload:completion:]
  -[CDPPiggybackingChannel approverBackupRecordsExist]
  -[CDPPiggybackingChannel approveriCloudKeychainState]
  -[CDPPiggybackingChannel _replyContextWithPakeData:]


CDPDNetworkObserverClient : NSObject
 @property  @? eventHandler

  // instance methods
  -[CDPDNetworkObserverClient .cxx_destruct]
  -[CDPDNetworkObserverClient eventHandler]
  -[CDPDNetworkObserverClient setEventHandler:]


CDPDNetworkObserver : NSObject
  // class methods
  +[CDPDNetworkObserver sharedInstance]

  // instance methods
  -[CDPDNetworkObserver .cxx_destruct]
  -[CDPDNetworkObserver init]
  -[CDPDNetworkObserver startObservingNetwork]
  -[CDPDNetworkObserver _networkReachabilityDidChangeWithFlags:]
  -[CDPDNetworkObserver addNetworkObserverWithEventHandler:]
  -[CDPDNetworkObserver removeObserverWithToken:]


CDPCABackupRecoveryReporter : CDPCAReporter
 @property  unsigned long joinMethod

  // instance methods
  -[CDPCABackupRecoveryReporter initWithContext:]
  -[CDPCABackupRecoveryReporter backupRecoverySetAttemptedMethod:]
  -[CDPCABackupRecoveryReporter backupRecoveryDidSucceed]
  -[CDPCABackupRecoveryReporter joinMethod]
  -[CDPCABackupRecoveryReporter backupRecoveryDidFailWithError:]
  -[CDPCABackupRecoveryReporter backupRecoveryDidSucceedWithoutLocalSecret]
  -[CDPCABackupRecoveryReporter backupRecoveryDidCancel]
  -[CDPCABackupRecoveryReporter backupRecoveryDidReset]
  -[CDPCABackupRecoveryReporter backupRecoverySetJoinFromBundleID:]


CDPTTSUPayloadProvider : NSObject <CDPKeychainCircleProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPTTSUPayloadProvider .cxx_destruct]
  -[CDPTTSUPayloadProvider isComplete]
  -[CDPTTSUPayloadProvider initiatingPayload:]
  -[CDPTTSUPayloadProvider processIncomingPayload:error:]
  -[CDPTTSUPayloadProvider supportsInteractiveAuth]
  -[CDPTTSUPayloadProvider requiresInitialSync]
  -[CDPTTSUPayloadProvider initWithCircleProxy:]


CDPContext(Daemon)
	// instance methods
	-[CDPContext(Daemon) reauthenticateUserWithCompletion:]

(Authentication)
	// instance methods
	-[(Authentication) isLoginHardLimit]
	-[(Authentication) isLoginSoftLimit]
	-[(Authentication) isAuthenticationError]
	-[(Authentication) isAuthKitUnableToPromptError]
	-[(Authentication) isAuthKitUnableToPromptDueToNetworkError]
	-[(Authentication) isICSCRecoveryHardLimitError]
	-[(Authentication) isICSCInvalidError]
	-[(Authentication) isCoolDownError]
	-[(Authentication) isRecoveryPETHardLimitError]
	-[(Authentication) isRecoveryPETSoftLimitError]
	-[(Authentication) errorByExtendingUserInfoWithDictionary:]

CDPDevice(Daemon)
	// instance methods
	-[CDPDevice(Daemon) initWithSecureBackupMetadataInfo:]
	-[CDPDevice(Daemon) initWithEscrowRecordMetadata:]
	-[CDPDevice(Daemon) initWithSecureBackupRecordInfo:]
	-[CDPDevice(Daemon) initWithEscrowRecord:]

NSXPCConnection(Metadata)
	// instance methods
	-[NSXPCConnection(Metadata) processName]

NSMutableURLRequest(CDP)
	// instance methods
	-[NSMutableURLRequest(CDP) cdp_addAuthHeaderWithContext:]
	-[NSMutableURLRequest(CDP) cdp_addClientInfoHeader]

(Archive)
	// instance methods
	-[(Archive) cdp_unarchivedRoot]

01 00 0400 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AAFollowUpController 
01 00 0a00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAnisetteProvisioningController 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationContext 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDSession 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKDevice 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPAccount 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPCircleProxyImpl 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPContext 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPDevice 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPFollowUpContext 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPInheritanceTrustController 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPLocalDevice 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPLocalizedStringBuilder 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPPCSUtilities 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPProtectedCloudStorageProxyImpl 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPRecoveryFlowContext 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPStateController 
01 00 1200 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPUtilities 
01 00 1300 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUMessageSession 
01 00 0200 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpAction 
01 00 0200 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpController 
01 00 0200 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpItem 
01 00 0200 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpNotification 
01 00 0300 /System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle: KCJoiningRequestAccountCircleDelegate 
01 00 0300 /System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle: KCJoiningRequestCircleSession 
01 00 0d00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0b00 /System/Library/Frameworks/Security.framework/Security: OTClique 
01 00 0b00 /System/Library/Frameworks/Security.framework/Security: OTConfigurationContext 
01 00 0500 /System/Library/PrivateFrameworks/OctagonTrust.framework/OctagonTrust: OTEscrowTranslation 
01 00 1100 /System/Library/PrivateFrameworks/CloudServices.framework/CloudServices: SecureBackup 
01 00 1100 /System/Library/PrivateFrameworks/CloudServices.framework/CloudServices: SecureBackupTermsInfo 
