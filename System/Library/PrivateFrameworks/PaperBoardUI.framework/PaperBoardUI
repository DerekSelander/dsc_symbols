|| __DATA.__data _PBUIHomeScreenLegibilityMaterialRecipeScaleAdjustment
|| __DATA.__data _PBUIWallpaperViewUnknownContrast
|| __DATA.__data _kPBUIImageDestinationMaxPixelCGSizeKey
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIAccessibilityTintView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIBackdropCompositor
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIBakedEffectSnapshotSource
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIBokehColorArbiter
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIBokehImageArbiter
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIBokehWallpaperCircle
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIBokehWallpaperView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUICARenderer
|| __DATA.__objc_data _OBJC_CLASS_$_PBUICARendererImpl
|| __DATA.__objc_data _OBJC_CLASS_$_PBUICachedSnapshotEffectProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIColorStatistics
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIColorWallpaperView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIDefaultSessionReconnectPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIDeferredImageSlot
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIDynamicProviderWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIFakeBlurAsset
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIFakeBlurConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIFakeBlurView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIFixedReplicaSourceProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIGradientView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIGradientWallpaperView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIImageEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIImageOnDiskFormat
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIImageSlot
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIImageSlotRepository
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIImageSlotView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIIrisWallpaperView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUILivePhotoPlayerLivePhotoView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUILivePhotoPlayerLiveWallpaperView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUILivePhotoPlayerView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIMagnifyMode
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIMaterialCompositor
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIMutableWallpaperWindowSceneClientSettings
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIMutableWallpaperWindowSceneSettings
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPathProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPortalReplicaEffectView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPortalReplicaView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPosterActiveVariantImageProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPosterFloatingLayerReplica
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPosterFloatingView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPosterHomeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPosterLockViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPosterPortalImageProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPosterVariantViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPosterViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPosterWallpaperMigrationInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPosterWallpaperRemoteViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPosterWallpaperViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIPosterWallpaperWindowSceneStyleTransitionState
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIRemoteIrisWallpaperPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIReplicaDebugView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIReplicaSourceObserverBox
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIScrollableIrisWallpaperView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIScrollableStaticWallpaperView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUISimpleReplicaPortalSource
|| __DATA.__objc_data _OBJC_CLASS_$_PBUISnapshotReplicaView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIURLBackedSnapshotSource
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperDefaultConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperDidChangeAction
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperDidCompleteWallpaperChangeAction
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperEffectConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperEffectImageRequestAction
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperEffectImageRequestActionIOSurfaceResponse
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperEffectImageRequestActionImageURLResponse
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperEffectImageRequestActionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperEffectViewBase
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperFloatingLayerAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperGradient
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperImageSlotRequestAction
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperLegacyDefaultsDomain
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperPreheatAction
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperRemoteViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperScaleAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperServer
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperService
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperServiceInterfaceSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperSharedDirectoryDataStore
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperStaticBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperStyleInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperUpdateActionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperUpdateAndPrewarmAction
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperWillChangeAction
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperWindowScene
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperWindowSceneBSActionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperWindowSceneClientSettings
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperWindowSceneClientSettingsDiffInspector
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperWindowSceneSettings
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperWindowSceneSettingsDiffAction
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperWindowSceneSettingsDiffInspector
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperWindowSceneSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperWindowSceneStyleTransitionState
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperWindowSceneTwoCurveTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_PBUIWallpaperWindowSceneVariantSettingsDiffAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBFCARendererImageRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$__PBUIImageSlotRepositoryEntry
|| __DATA.__objc_data _OBJC_CLASS_$__PBUIWallpaperRemoteViewControllerSceneModeAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__PBUIWallpaperViewControllerAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__SBMaskingContainerView
|| __DATA.__objc_data _OBJC_CLASS_$__SBTintView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIAccessibilityTintView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIBackdropCompositor
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIBakedEffectSnapshotSource
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIBokehColorArbiter
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIBokehImageArbiter
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIBokehWallpaperCircle
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIBokehWallpaperView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUICARenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUICARendererImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUICachedSnapshotEffectProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIColorStatistics
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIColorWallpaperView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIDefaultSessionReconnectPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIDeferredImageSlot
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIDynamicProviderWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIFakeBlurAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIFakeBlurConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIFakeBlurView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIFixedReplicaSourceProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIGradientView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIGradientWallpaperView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIImageEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIImageOnDiskFormat
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIImageSlot
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIImageSlotRepository
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIImageSlotView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIIrisWallpaperView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUILivePhotoPlayerLivePhotoView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUILivePhotoPlayerLiveWallpaperView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUILivePhotoPlayerView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIMagnifyMode
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIMaterialCompositor
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIMutableWallpaperWindowSceneClientSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIMutableWallpaperWindowSceneSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPathProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPortalReplicaEffectView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPortalReplicaView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPosterActiveVariantImageProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPosterFloatingLayerReplica
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPosterFloatingView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPosterHomeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPosterLockViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPosterPortalImageProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPosterVariantViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPosterViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPosterWallpaperMigrationInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPosterWallpaperRemoteViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPosterWallpaperViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIPosterWallpaperWindowSceneStyleTransitionState
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIRemoteIrisWallpaperPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIReplicaDebugView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIReplicaSourceObserverBox
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIScrollableIrisWallpaperView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIScrollableStaticWallpaperView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUISimpleReplicaPortalSource
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUISnapshotReplicaView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIURLBackedSnapshotSource
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperDefaultConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperDidChangeAction
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperDidCompleteWallpaperChangeAction
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperEffectConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperEffectImageRequestAction
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperEffectImageRequestActionIOSurfaceResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperEffectImageRequestActionImageURLResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperEffectImageRequestActionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperEffectViewBase
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperFloatingLayerAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperGradient
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperImageSlotRequestAction
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperLegacyDefaultsDomain
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperPreheatAction
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperRemoteViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperScaleAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperServer
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperService
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperServiceInterfaceSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperSharedDirectoryDataStore
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperStaticBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperStyleInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperUpdateActionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperUpdateAndPrewarmAction
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperWillChangeAction
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperWindowScene
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperWindowSceneBSActionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperWindowSceneClientSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperWindowSceneClientSettingsDiffInspector
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperWindowSceneSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperWindowSceneSettingsDiffAction
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperWindowSceneSettingsDiffInspector
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperWindowSceneSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperWindowSceneStyleTransitionState
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperWindowSceneTwoCurveTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_PBUIWallpaperWindowSceneVariantSettingsDiffAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFCARendererImageRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$__PBUIImageSlotRepositoryEntry
|| __DATA.__objc_data _OBJC_METACLASS_$__PBUIWallpaperRemoteViewControllerSceneModeAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__PBUIWallpaperViewControllerAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__SBMaskingContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBTintView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PBUIPosterVariantViewController._contentContainer
|| __DATA.__objc_ivar _OBJC_IVAR_$_PBUIPosterVariantViewController._counterpart
|| __DATA.__objc_ivar _OBJC_IVAR_$_PBUIPosterVariantViewController._portalProvider
|| __DATA.__objc_ivar _OBJC_IVAR_$_PBUIPosterVariantViewController._posterColorStatistics
|| __DATA.__objc_ivar _OBJC_IVAR_$_PBUIPosterVariantViewController._presenter
|| __DATA.__objc_ivar _OBJC_IVAR_$_PBUIPosterVariantViewController._scene
|| __DATA.__objc_ivar _OBJC_IVAR_$_PBUIPosterVariantViewController._sceneView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PBUIPosterVariantViewController._snapshotSource
|| __DATA.__objc_ivar _OBJC_IVAR_$_PBUIWallpaperView._wallpaperSettings
|| __DATA_CONST.__const _PBUIErrorDomain
|| __DATA_CONST.__const _PBUIHomeScreenLegibilityMaterialRecipeName
|| __DATA_CONST.__const _PBUIImageEncoderErrorDomain
|| __DATA_CONST.__const _PBUIImagePropertyKeyCreationMechanism
|| __DATA_CONST.__const _PBUIImagePropertyKeySceneID
|| __DATA_CONST.__const _PBUISetWallpaperVariantEntitlement
|| __DATA_CONST.__const _PBUIWallpaperAccessEntitlement
|| __DATA_CONST.__const _PBUIWallpaperBackdropGroupName
|| __DATA_CONST.__const _PBUIWallpaperDidChangeNotification
|| __DATA_CONST.__const _PBUIWallpaperEffectViewIsDarkOrHiddenReason
|| __DATA_CONST.__const _PBUIWallpaperSceneSessionRoleWallpaper
|| __DATA_CONST.__const _PBUIWallpaperViewIsDarkOrHiddenReason
|| __DATA_CONST.__const _PBUIWallpaperWorkspaceIdentifier
|| __DATA_CONST.__const _PaperBoardLoggingSubsystem
|| __DATA_CONST.__const _kPBUIMagicWallpaper360VRSectionKey
|| __DATA_CONST.__const _kPBUIMagicWallpaperBundlePathKey
|| __DATA_CONST.__const _kPBUIMagicWallpaperDynamicSectionKey
|| __DATA_CONST.__const _kPBUIMagicWallpaperIdentifierKey
|| __DATA_CONST.__const _kPBUIMagicWallpaperPanoVRSectionKey
|| __DATA_CONST.__const _kPBUIMagicWallpaperPresetOptionsBokehVariantKey
|| __DATA_CONST.__const _kPBUIMagicWallpaperPresetOptionsKey
|| __DATA_CONST.__const _kPBUIMagicWallpaperSmallThumbnailDataKey
|| __DATA_CONST.__const _kPBUIMagicWallpaperThumbnailNameKey
|| __DATA_CONST.__const _kPBUIMagicWallpaperThumbnailPathKey
|| __DATA_CONST.__const _kPBUIReplicaDebugModeDefaultKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIColorBoxes
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIParallaxSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIStaticWallpaperImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIStaticWallpaperView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperConfigurationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperDefaultsDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperDefaultsWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperDirectoryDataStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperParallaxSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperPrototypeSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperUpdateLocationsAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperUserDefaultsDataStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBUIWallpaperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIColorBoxes
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIParallaxSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIStaticWallpaperImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIStaticWallpaperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperConfigurationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperDefaultsDomain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperDefaultsWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperDirectoryDataStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperDomain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperParallaxSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperPrototypeSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperUpdateLocationsAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperUserDefaultsDataStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBUIWallpaperView
|| __TEXT.__const _PBUIWallpaperStyleInvalid
|| __TEXT.__const _PaperBoardUIVersionNumber
|| __TEXT.__const _PaperBoardUIVersionString
|| __TEXT.__text _BundlePathForWallpaperIdentifier
|| __TEXT.__text _PBUIApplyParallaxSettingsToView
|| __TEXT.__text _PBUIApplyParallaxSettingsToViewWithFactor
|| __TEXT.__text _PBUIAverageColorFromColorBoxes
|| __TEXT.__text _PBUIBackdropInputSettingsForWallpaperBackdropParameters
|| __TEXT.__text _PBUIBackdropOutputSettingsForWallpaperBackdropParameters
|| __TEXT.__text _PBUIBundle
|| __TEXT.__text _PBUICalculateContrastFromColorBoxes
|| __TEXT.__text _PBUICreateIOSurfaceForImage
|| __TEXT.__text _PBUICurrentDeviceWallpaperSizeType
|| __TEXT.__text _PBUICurrentParallaxDeviceType
|| __TEXT.__text _PBUIExtensionIdentifierForPosterWallpaperMigrationProvider
|| __TEXT.__text _PBUIGetProceduralWallpaper
|| __TEXT.__text _PBUIHomeScreenLegibilityMaterialRecipeBundle
|| __TEXT.__text _PBUIHomeScreenLegibilityMaterialShouldAdjustAlphaForWeighting
|| __TEXT.__text _PBUIIOSurfaceFromCGImage
|| __TEXT.__text _PBUIIrisPlayerStateDescription
|| __TEXT.__text _PBUIIrisWallpaperPlaybackStateDescription
|| __TEXT.__text _PBUIIrisWallpaperPlaybackStateForISPlaybackState
|| __TEXT.__text _PBUIIrisWallpaperViewModeDescription
|| __TEXT.__text _PBUILogCommon
|| __TEXT.__text _PBUIMagicWallpaperClassForIdentifier
|| __TEXT.__text _PBUIMagicWallpaperDictionariesForClass
|| __TEXT.__text _PBUIMagicWallpaperDictionary
|| __TEXT.__text _PBUIMagicWallpaperEnumeration
|| __TEXT.__text _PBUIMagicWallpaperOptionsDictionary
|| __TEXT.__text _PBUIMagicWallpaperRepresentativeThumbnailForClass
|| __TEXT.__text _PBUIMagicWallpaperThumbnail
|| __TEXT.__text _PBUIPostExternalWallpaperChangeNotificationAsSystemShell
|| __TEXT.__text _PBUIPosterRequiresMediaResourceReleaseWorkaround
|| __TEXT.__text _PBUIRegisterForExternalWallpaperChangeNotificationWithHandler
|| __TEXT.__text _PBUIRegisterForWallpaperExternalChangeNotification
|| __TEXT.__text _PBUIReplicaDebugModeIsEnabled
|| __TEXT.__text _PBUIStringForPosterWallpaperMigrationProvider
|| __TEXT.__text _PBUIStringForPosterWallpaperPairingType
|| __TEXT.__text _PBUIStringForStyleTransitionState
|| __TEXT.__text _PBUIStringForWallpaperBackdropParameters
|| __TEXT.__text _PBUIStringForWallpaperLocations
|| __TEXT.__text _PBUIStringForWallpaperMaterialStyle
|| __TEXT.__text _PBUIStringForWallpaperMode
|| __TEXT.__text _PBUIStringForWallpaperStylePriority
|| __TEXT.__text _PBUIStringForWallpaperTransformOptions
|| __TEXT.__text _PBUIStringForWallpaperType
|| __TEXT.__text _PBUIStringForWallpaperVariant
|| __TEXT.__text _PBUIThumbnailWidth
|| __TEXT.__text _PBUIWallpaperBackdropParametersMake
|| __TEXT.__text _PBUIWallpaperBackdropParametersMakeIdentity
|| __TEXT.__text _PBUIWallpaperDataForFileURL
|| __TEXT.__text _PBUIWallpaperEnumerateVariantsForLocations
|| __TEXT.__text _PBUIWallpaperImageWithFlatColor
|| __TEXT.__text _PBUIWallpaperImageWithGradient
|| __TEXT.__text _PBUIWallpaperLocationForVariant
|| __TEXT.__text _PBUIWallpaperLocationsForString
|| __TEXT.__text _PBUIWallpaperModeForString
|| __TEXT.__text _PBUIWallpaperStyleDescription
|| __TEXT.__text _PBUIWallpaperStyleIsHidden
|| __TEXT.__text _PBUIWallpaperStyleIsValid
|| __TEXT.__text _PBUIWallpaperStylePriorityIsValid
|| __TEXT.__text _PBUIWallpaperStyleTransitionStateMake
|| __TEXT.__text _PBUIWallpaperTransformOptionsShouldIgnoreLandscapeRotation
|| __TEXT.__text _PBUIWallpaperTransformOptionsShouldIgnoreRotation
|| __TEXT.__text _PBUIWallpaperTransformOptionsShouldIgnoreZoom
|| __TEXT.__text _PBUIWallpaperTypeForString
|| __TEXT.__text _PBUIWallpaperVariantForString
|| __TEXT.__text _PBUIWallpaperVariantIsValid
|| __TEXT.__text __BackdropRenderingHintForWallpaperAverageColor
|| __TEXT.__text __NSStringFromUIUserInterfaceStyle
|| __TEXT.__text __PBUIMagicWallpaperEnsure
|| __TEXT.__text __WallpaperBackdropParametersForStyleAndAverageColor
|| __TEXT.__text __WallpaperMinimumZoomScale
|| __TEXT.__text __WallpaperMinimumZoomScaleForParallax
|| __TEXT.__text __WallpaperStyleByRemovingTintFromStyle
|| __TEXT.__text __WallpaperStyleForBackgroundStyle
|| __TEXT.__text __WallpaperStyleHasBlur
|| __TEXT.__text __WallpaperStyleHasDarkBlur
|| __TEXT.__text __WallpaperStyleHasTint
|| __TEXT.__text __WallpaperStyleUpdatesWithUserInterfaceStyle
|| __TEXT.__text ___hasEnoughFreeSpaceToSetWallpaper
|| __TEXT.__text ___wallpaperImageFilename
|| __TEXT.__text ___wallpaperOriginalImageFilename
|| __TEXT.__text ___wallpaperOriginalVideoFilename
|| __TEXT.__text ___wallpaperThumbnailFilename
|| __TEXT.__text ___wallpaperVideoFilename
__ AVFoundation: _AVAssetExportPresetICPLAuxHD
__ AVFoundation: _AVFileTypeQuickTimeMovie
__ AVFoundation: _AVFoundationErrorDomain
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAssetExportSession
__ AVFoundation: _OBJC_CLASS_$_AVMutableVideoComposition
__ AVFoundation: _OBJC_CLASS_$_AVMutableVideoCompositionInstruction
__ AVFoundation: _OBJC_CLASS_$_AVMutableVideoCompositionLayerInstruction
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AppSupport: _CPBitmapCreateImagesFromData
__ AppSupport: _CPBitmapCreateMappedDataFromPath
__ AppSupport: _CPSharedResourcesDirectory
__ BaseBoard: _BSDeserializeCGFloatFromXPCDictionaryWithKey
__ BaseBoard: _BSDispatchMain
__ BaseBoard: _BSDispatchQueueAssert
__ BaseBoard: _BSDispatchQueueAssertMain
__ BaseBoard: _BSDispatchQueueCreate
__ BaseBoard: _BSDispatchQueueCreateSerialWithQoS
__ BaseBoard: _BSDispatchQueueCreateWithQualityOfService
__ BaseBoard: _BSEqualDictionaries
__ BaseBoard: _BSEqualObjects
__ BaseBoard: _BSEqualStrings
__ BaseBoard: _BSFloatApproximatelyEqualToFloat
__ BaseBoard: _BSFloatEqualToFloat
__ BaseBoard: _BSFloatIsOne
__ BaseBoard: _BSFloatIsZero
__ BaseBoard: _BSFloatLessThanOrEqualToFloat
__ BaseBoard: _BSLogAddStateCaptureBlockWithTitle
__ BaseBoard: _BSRectWithSize
__ BaseBoard: _BSSerializeCGFloatToXPCDictionaryWithKey
__ BaseBoard: _BSSettingFlagForBool
__ BaseBoard: _BSSettingFlagIfYes
__ BaseBoard: _BSSettingFlagIsYes
__ BaseBoard: _BSSizeGreaterThanOrEqualToSize
__ BaseBoard: _BSStringFromCGRect
__ BaseBoard: _BSStringFromCGSize
__ BaseBoard: _BSSystemSharedResourcesDirectoryForIdentifier
__ BaseBoard: _OBJC_CLASS_$_BSAbstractDefaultDomain
__ BaseBoard: _OBJC_CLASS_$_BSAction
__ BaseBoard: _OBJC_CLASS_$_BSActionResponder
__ BaseBoard: _OBJC_CLASS_$_BSActionResponse
__ BaseBoard: _OBJC_CLASS_$_BSAnimationSettings
__ BaseBoard: _OBJC_CLASS_$_BSAtomicFlag
__ BaseBoard: _OBJC_CLASS_$_BSColor
__ BaseBoard: _OBJC_CLASS_$_BSCompoundAssertion
__ BaseBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ BaseBoard: _OBJC_CLASS_$_BSDispatchQueueAttributes
__ BaseBoard: _OBJC_CLASS_$_BSEqualsBuilder
__ BaseBoard: _OBJC_CLASS_$_BSEventQueue
__ BaseBoard: _OBJC_CLASS_$_BSEventQueueEvent
__ BaseBoard: _OBJC_CLASS_$_BSHashBuilder
__ BaseBoard: _OBJC_CLASS_$_BSMutableSettings
__ BaseBoard: _OBJC_CLASS_$_BSObjCProtocol
__ BaseBoard: _OBJC_CLASS_$_BSPathProviderFactory
__ BaseBoard: _OBJC_CLASS_$_BSPlatform
__ BaseBoard: _OBJC_CLASS_$_BSSimpleAssertion
__ BaseBoard: _OBJC_METACLASS_$_BSAbstractDefaultDomain
__ BaseBoard: _OBJC_METACLASS_$_BSAction
__ BaseBoard: _OBJC_METACLASS_$_BSActionResponse
__ BaseBoard: _OBJC_METACLASS_$_BSSimpleAssertion
__ BaseBoard: __BSSafeCast
__ BaseBoard: __bs_set_crash_log_message
__ BaseBoardUI: _BSUISurfaceWithColorSpaceAndDrawBlock
__ BaseBoardUI: _OBJC_CLASS_$_BSUIAnimationFactory
__ BaseBoardUI: _OBJC_CLASS_$_BSUIMappedImageCache
__ BaseBoardUI: _OBJC_CLASS_$_BSUIMappedImageCacheOptions
__ BoardServices: _OBJC_CLASS_$_BSMutableServiceInterface
__ BoardServices: _OBJC_CLASS_$_BSServiceConnection
__ BoardServices: _OBJC_CLASS_$_BSServiceConnectionEndpoint
__ BoardServices: _OBJC_CLASS_$_BSServiceConnectionListener
__ BoardServices: _OBJC_CLASS_$_BSServiceQuality
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFFileSecuritySetMode
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSStreamDataWrittenToMemoryStreamKey
__ CoreFoundation: _NSURLFileContentIdentifierKey
__ CoreFoundation: _NSURLFileProtectionKey
__ CoreFoundation: _NSURLFileProtectionNone
__ CoreFoundation: _NSURLFileSecurityKey
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGBitmapGetAlignedBytesPerRow
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorCreateSRGB
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorSpaceCopyPropertyList
__ CoreGraphics: _CGColorSpaceCreateDeviceCMYK
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceCreateWithPropertyList
__ CoreGraphics: _CGColorSpaceEqualToColorSpace
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceGetNumberOfComponents
__ CoreGraphics: _CGColorSpaceGetType
__ CoreGraphics: _CGColorSpaceIsICCCompatible
__ CoreGraphics: _CGColorSpaceIsWideGamutRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGColorSpaceRetain
__ CoreGraphics: _CGColorSpaceUsesExtendedRange
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGImageBlockGetBytesPerRow
__ CoreGraphics: _CGImageBlockGetData
__ CoreGraphics: _CGImageBlockSetGetImageBlock
__ CoreGraphics: _CGImageBlockSetRelease
__ CoreGraphics: _CGImageBlockSetRetain
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageCreateCopyWithColorSpace
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetImageProvider
__ CoreGraphics: _CGImageGetProperty
__ CoreGraphics: _CGImageGetSizeAfterOrientation
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageProviderCopyIOSurface
__ CoreGraphics: _CGImageProviderCopyImageBlockSetWithOptions
__ CoreGraphics: _CGImageProviderGetCallbackVersion
__ CoreGraphics: _CGImageProviderGetColorSpace
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageSetProperty
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectCreateDictionaryRepresentation
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInfinite
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceExtendedSRGB
__ CoreGraphics: _kCGColorSpaceGenericGrayGamma2_2
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreGraphics: _kCGImageBlockFormatBGRx8
__ CoreGraphics: _kCGImageBlockFormatRequest
__ CoreGraphics: _kCGImageBlockMarkAsReadOnlyRequest
__ CoreGraphics: _kCGImageBlockSingletonRequest
__ CoreGraphics: _kCGImagePropertyIOSurface
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _kCIContextCacheIntermediates
__ CoreImage: _kCIContextIntermediateMemoryTarget
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _kCMTimeZero
__ CoreVideo: _CVPixelBufferCreateWithIOSurface
__ CoreVideo: _CVPixelBufferGetIOSurface
__ CoreVideo: _CVPixelBufferRelease
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFilePosixPermissions
__ Foundation: _NSHomeDirectory
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureErrorKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSProcessInfoPowerStateDidChangeNotification
__ Foundation: _NSProcessInfoThermalStateDidChangeNotification
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRect
__ Foundation: _NSStringFromSelector
__ Foundation: _NSStringFromSize
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: __NSErrorWithFilePathAndErrno
__ FrontBoard: _OBJC_CLASS_$_FBDisplayManager
__ FrontBoard: _OBJC_CLASS_$_FBSMutableSceneClientSettings
__ FrontBoard: _OBJC_CLASS_$_FBSMutableSceneSettings
__ FrontBoard: _OBJC_CLASS_$_FBSSceneClientIdentity
__ FrontBoard: _OBJC_CLASS_$_FBSSceneClientSettings
__ FrontBoard: _OBJC_CLASS_$_FBSSceneClientSettingsDiffInspector
__ FrontBoard: _OBJC_CLASS_$_FBSSceneSettings
__ FrontBoard: _OBJC_CLASS_$_FBSSceneTransitionContext
__ FrontBoard: _OBJC_CLASS_$_FBScene
__ FrontBoard: _OBJC_CLASS_$_FBSceneWorkspace
__ FrontBoard: _OBJC_CLASS_$_FBServiceClientAuthenticator
__ IOMobileFramebuffer: _IOMobileFramebufferGetCanvasSizes
__ IOMobileFramebuffer: _IOMobileFramebufferOpenByName
__ IOSurface: _IOSurfaceCopyValue
__ IOSurface: _IOSurfaceCreate
__ IOSurface: _IOSurfaceCreateXPCObject
__ IOSurface: _IOSurfaceGetHeight
__ IOSurface: _IOSurfaceGetPixelFormat
__ IOSurface: _IOSurfaceGetPropertyMaximum
__ IOSurface: _IOSurfaceGetWidth
__ IOSurface: _IOSurfaceLookupFromXPCObject
__ IOSurface: _IOSurfaceSetValue
__ IOSurface: _IOSurfaceWrapClientImage
__ IOSurface: _OBJC_CLASS_$_IOSurface
__ IOSurface: _kIOSurfaceBytesPerElement
__ IOSurface: _kIOSurfaceCacheMode
__ IOSurface: _kIOSurfaceColorSpace
__ IOSurface: _kIOSurfaceHeight
__ IOSurface: _kIOSurfacePixelFormat
__ IOSurface: _kIOSurfaceWidth
__ ImageIO: _CGImageCopySourceData
__ ImageIO: _CGImageCreateFromIOSurface
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageGetHash
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _CGImageWasCreatedWithIOSurface
__ ImageIO: _kCGImageComponentTypeRequest
__ ImageIO: _kCGImageDestinationImageMaxPixelSize
__ ImageIO: _kCGImagePreferredColorConversionMode
__ ImageIO: _kCGImagePropertyASTCBlockSize
__ ImageIO: _kCGImagePropertyASTCEncoder
__ ImageIO: _kCGImagePropertyASTCPreTwiddle
__ ImageIO: _kCGImagePropertyASTCUseLZFSE
__ ImageIO: _kCGImagePropertyEncoder
__ ImageIO: _kCGImagePropertyPNGBandCount
__ ImageIO: _kCGImagePropertyPNGCompressionFilter
__ ImageIO: _kCGImagePropertyPNGDictionary
__ ImageIO: _kCGImageSkipCIF10SRGBCheck
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ PrototypeTools: _OBJC_CLASS_$_PTButtonRow
__ PrototypeTools: _OBJC_CLASS_$_PTChoiceRow
__ PrototypeTools: _OBJC_CLASS_$_PTDomain
__ PrototypeTools: _OBJC_CLASS_$_PTDrillDownRow
__ PrototypeTools: _OBJC_CLASS_$_PTEditFloatRow
__ PrototypeTools: _OBJC_CLASS_$_PTModule
__ PrototypeTools: _OBJC_CLASS_$_PTRestoreDefaultSettingsRowAction
__ PrototypeTools: _OBJC_CLASS_$_PTSettings
__ PrototypeTools: _OBJC_CLASS_$_PTSliderRow
__ PrototypeTools: _OBJC_CLASS_$_PTSwitchRow
__ PrototypeTools: _OBJC_METACLASS_$_PTDomain
__ PrototypeTools: _OBJC_METACLASS_$_PTSettings
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CAFrameRateRangeMake
__ QuartzCore: _CARenderServerRenderLayer
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _OBJC_CLASS_$_CABackdropLayer
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMatchMoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CARenderer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFilterColorSaturate
__ QuartzCore: _kCAFilterDarkenSourceOver
__ QuartzCore: _kCAFilterLightenBlendMode
__ QuartzCore: _kCAFilterLuminanceMap
__ QuartzCore: _kCAFilterMultiplyBlendMode
__ QuartzCore: _kCAGradientLayerAxial
__ QuartzCore: _kCARendererColorSpace
__ QuartzCore: _kCARendererMetalCommandQueue
__ RunningBoardServices: _OBJC_CLASS_$_RBSDomainAttribute
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentity
__ SoftLinking: __sl_dlopen
__ UIKit: _CGRectFromString
__ UIKit: _NSStringFromCGAffineTransform
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneClientSettings
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneClientSettingsDiffInspector
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneSettings
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneSettingsDiffInspector
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneSpecification
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneTransitionContext
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMutableApplicationSceneClientSettings
__ UIKit: _OBJC_CLASS_$_UIMutableApplicationSceneSettings
__ UIKit: _OBJC_CLASS_$_UIScene
__ UIKit: _OBJC_CLASS_$_UISceneLayerTargetFactory
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIUserInterfaceStyleArbiter
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindowScene
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIBackdropViewSettings
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_CLASS_$__UILegibilitySettingsProvider
__ UIKit: _OBJC_CLASS_$__UIParallaxMotionEffect
__ UIKit: _OBJC_CLASS_$__UIPortalView
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneClientSettings
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneClientSettingsDiffInspector
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneSettings
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneSettingsDiffInspector
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneSpecification
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneTransitionContext
__ UIKit: _OBJC_METACLASS_$_UIImage
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UIMutableApplicationSceneClientSettings
__ UIKit: _OBJC_METACLASS_$_UIMutableApplicationSceneSettings
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindowScene
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityReduceTransparencyStatusDidChangeNotification
__ UIKit: _UIApp
__ UIKit: _UICreateCGImageFromIOSurface
__ UIKit: _UIFontDescriptorSystemDesignMonospaced
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIGraphicsPopContext
__ UIKit: _UIGraphicsPushContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIIntegralTransform
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectCenteredRect
__ UIKit: _UIRectFill
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRectIntegralWithScale
__ UIKit: _UISystemRootDirectory
__ UIKit: __EXIFOrientationForUIImageOrientation
__ UIKit: __UIBackdropViewSettingsStackingLevelDefault
__ UIKit: __UIBackdropViewSettingsStackingLevelHigh
__ UIKit: __UIBackdropViewSettingsStackingLevelLow
__ UIKit: __UIImageGetCGImageRepresentation
__ UIKit: __UIMotionEffectsEnabledDidChangeNotification
__ UIKit: __UISceneSettingsDiffActionPerformChangesWithTransitionContext
__ UniformTypeIdentifiers: _UTTypePNG
__ UniformTypeIdentifiers: _UTTypePropertyList
__ VideoToolbox: _FigCreateIOSurfaceBackedCVPixelBufferWithAttributes
__ VideoToolbox: _VTPixelTransferSessionCreate
__ VideoToolbox: _VTPixelTransferSessionInvalidate
__ VideoToolbox: _VTPixelTransferSessionTransferImage
__ VideoToolbox: _VTSessionSetProperty
__ VideoToolbox: _kVTPixelTransferPropertyKey_AllowLowQualityScaling
__ VideoToolbox: _kVTPixelTransferPropertyKey_SourceCropRectangle
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getxattr
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _setxattr
__ libSystem.B.dylib: _statfs
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: _xpc_array_append_value
__ libSystem.B.dylib: _xpc_array_create_empty
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_get_dictionary
__ libSystem.B.dylib: _xpc_dictionary_create_empty
__ libSystem.B.dylib: _xpc_dictionary_get_array
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
PBUIWallpaperWindowSceneSpecification : UIApplicationSceneSpecification
  // instance methods
  -[PBUIWallpaperWindowSceneSpecification uiSceneMinimumClass]
  -[PBUIWallpaperWindowSceneSpecification uiSceneSessionRole]
  -[PBUIWallpaperWindowSceneSpecification initialSettingsDiffActions]
  -[PBUIWallpaperWindowSceneSpecification initialActionHandlers]
  -[PBUIWallpaperWindowSceneSpecification settingsClass]
  -[PBUIWallpaperWindowSceneSpecification clientSettingsClass]


PBUIIrisWallpaperView : PBUIStaticWallpaperView <PBUILivePhotoPlayerViewDelegate, PBUIIrisWallpaperPlaying>
 @property  long long currentIrisMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PBUIIrisWallpaperPlayerDelegate> *irisDelegate
 @property  long long irisPlaybackState
 @property  BOOL isIrisInteracting
 @property  double stillTimeInVideo
 @property  UIGestureRecognizer *irisGestureRecognizer
 @property  NSURL *videoFileURL

  // instance methods
  -[PBUIIrisWallpaperView _setImage:]
  -[PBUIIrisWallpaperView playerViewIsInteractingDidChange:]
  -[PBUIIrisWallpaperView videoFileURL]
  -[PBUIIrisWallpaperView wallpaperType]
  -[PBUIIrisWallpaperView isIrisInteracting]
  -[PBUIIrisWallpaperView irisPlaybackState]
  -[PBUIIrisWallpaperView initWithFrame:configuration:variant:cacheGroup:delegate:options:]
  -[PBUIIrisWallpaperView setIrisDelegate:]
  -[PBUIIrisWallpaperView playerViewPlaybackStateDidChange:]
  -[PBUIIrisWallpaperView irisGestureRecognizer]
  -[PBUIIrisWallpaperView stillTimeInVideo]
  -[PBUIIrisWallpaperView videoPlayerForPlayerView:]
  -[PBUIIrisWallpaperView dealloc]
  -[PBUIIrisWallpaperView _populateContentView]
  -[PBUIIrisWallpaperView .cxx_destruct]
  -[PBUIIrisWallpaperView _setupContentViewForMode:]
  -[PBUIIrisWallpaperView irisDelegate]
  -[PBUIIrisWallpaperView currentIrisMode]
  -[PBUIIrisWallpaperView _resetPrewiredAVPlayer]
  -[PBUIIrisWallpaperView _setPlayerGestureRecognizer:]
  -[PBUIIrisWallpaperView beginSimulatedTouchWithReason:]
  -[PBUIIrisWallpaperView _setupContentViewWithOptions:]
  -[PBUIIrisWallpaperView endSimulatedTouchWithReason:]
  -[PBUIIrisWallpaperView _playbackReasonForSimulatedTouchReason:]
  -[PBUIIrisWallpaperView switchToIrisMode:]


PBUIPosterFloatingView : UIView <PBUIReplicaPortalSource>
 @property  BOOL floatingLayerHasStandin
 @property  UIView *defaultFloatingLayerStandin
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIView *targetView
 @property  NSString *cacheIdentifier
 @property  BOOL effectsAreBakedIn
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIPosterFloatingView targetView]
  -[PBUIPosterFloatingView descriptionWithMultilinePrefix:]
  -[PBUIPosterFloatingView defaultFloatingLayerStandin]
  -[PBUIPosterFloatingView descriptionBuilderWithMultilinePrefix:]
  -[PBUIPosterFloatingView dealloc]
  -[PBUIPosterFloatingView .cxx_destruct]
  -[PBUIPosterFloatingView effectsAreBakedIn]
  -[PBUIPosterFloatingView setDefaultFloatingLayerStandin:]
  -[PBUIPosterFloatingView succinctDescription]
  -[PBUIPosterFloatingView floatingLayerHasStandin]
  -[PBUIPosterFloatingView setLegibilitySettings:]
  -[PBUIPosterFloatingView acquireSourceUsageAssertionForView:]
  -[PBUIPosterFloatingView succinctDescriptionBuilder]
  -[PBUIPosterFloatingView initWithFrame:]
  -[PBUIPosterFloatingView setFloatingLayerHasStandin:]
  -[PBUIPosterFloatingView legibilitySettings]
  -[PBUIPosterFloatingView cacheIdentifier]
  -[PBUIPosterFloatingView isFloatingLayerStandin]


PBUIPosterLockViewController : PBUIPosterVariantViewController <PBUIPosterReplicaPortalProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIPosterLockViewController scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:]
  -[PBUIPosterLockViewController legibilitySettingsDidChange]
  -[PBUIPosterLockViewController portalSourceForReplicaView:]
  -[PBUIPosterLockViewController initWithScene:cache:]
  -[PBUIPosterLockViewController updatePresentation]
  -[PBUIPosterLockViewController variant]
  -[PBUIPosterLockViewController areSettingsAppropriateForSnapshotting:]
  -[PBUIPosterLockViewController .cxx_destruct]
  -[PBUIPosterLockViewController registerPortalSourceObserver:]
  -[PBUIPosterLockViewController invalidate]
  -[PBUIPosterLockViewController portalProviderForFloatingLayer]
  -[PBUIPosterLockViewController _updateFloatingLayer]


PBUILivePhotoPlayerView : UIView <ISChangeObserver, ISBasePlayerDelegate>
 @property  BOOL interacting
 @property  BOOL _isForcingPlayback
 @property  ISBasePlayerUIView *_playerUIView
 @property  <PBUILivePhotoPlayerViewDelegate> *delegate
 @property  UIGestureRecognizer *gestureRecognizer
 @property  long long playbackState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBUILivePhotoPlayerView playerViewWithRewindPlaybackStyle:]

  // instance methods
  -[PBUILivePhotoPlayerView gestureRecognizer]
  -[PBUILivePhotoPlayerView isInteracting]
  -[PBUILivePhotoPlayerView playbackState]
  -[PBUILivePhotoPlayerView setDelegate:]
  -[PBUILivePhotoPlayerView delegate]
  -[PBUILivePhotoPlayerView observable:didChange:context:]
  -[PBUILivePhotoPlayerView .cxx_destruct]
  -[PBUILivePhotoPlayerView setContentMode:]
  -[PBUILivePhotoPlayerView _handlePlaybackGesture:]
  -[PBUILivePhotoPlayerView videoPlayerForPlayer:]
  -[PBUILivePhotoPlayerView prepareWithPhoto:videoAsset:photoTime:photoEXIFOrientation:]
  -[PBUILivePhotoPlayerView startPlaybackWithReason:]
  -[PBUILivePhotoPlayerView stopPlaybackWithReason:]
  -[PBUILivePhotoPlayerView _isForcingPlayback]
  -[PBUILivePhotoPlayerView _common_configurePlayer:]
  -[PBUILivePhotoPlayerView _common_configurePlayerView:]
  -[PBUILivePhotoPlayerView _subclass_updateForForcingPlayback:]
  -[PBUILivePhotoPlayerView _subclass_updatePlayerItemForUse:]
  -[PBUILivePhotoPlayerView _setInteracting:]
  -[PBUILivePhotoPlayerView _playerUIView]


PBUILivePhotoPlayerLiveWallpaperView : PBUILivePhotoPlayerView
  // instance methods
  -[PBUILivePhotoPlayerLiveWallpaperView gestureRecognizer]
  -[PBUILivePhotoPlayerLiveWallpaperView playbackState]
  -[PBUILivePhotoPlayerLiveWallpaperView .cxx_destruct]
  -[PBUILivePhotoPlayerLiveWallpaperView init]
  -[PBUILivePhotoPlayerLiveWallpaperView _subclass_updateForForcingPlayback:]
  -[PBUILivePhotoPlayerLiveWallpaperView _subclass_updatePlayerItemForUse:]
  -[PBUILivePhotoPlayerLiveWallpaperView _playerUIView]


PBUILivePhotoPlayerLivePhotoView : PBUILivePhotoPlayerView
  // instance methods
  -[PBUILivePhotoPlayerLivePhotoView gestureRecognizer]
  -[PBUILivePhotoPlayerLivePhotoView playbackState]
  -[PBUILivePhotoPlayerLivePhotoView .cxx_destruct]
  -[PBUILivePhotoPlayerLivePhotoView init]
  -[PBUILivePhotoPlayerLivePhotoView _subclass_updateForForcingPlayback:]
  -[PBUILivePhotoPlayerLivePhotoView _subclass_updatePlayerItemForUse:]
  -[PBUILivePhotoPlayerLivePhotoView _playerUIView]


PBUIWallpaperImageSlotRequestAction : BSAction
 @property  long long variant
 @property  long long desiredStyle
 @property  UITraitCollection *traitCollection
 @property  NSString *slotIdentifier

  // instance methods
  -[PBUIWallpaperImageSlotRequestAction variant]
  -[PBUIWallpaperImageSlotRequestAction traitCollection]
  -[PBUIWallpaperImageSlotRequestAction .cxx_destruct]
  -[PBUIWallpaperImageSlotRequestAction valueDescriptionForFlag:object:ofSetting:]
  -[PBUIWallpaperImageSlotRequestAction invalidate]
  -[PBUIWallpaperImageSlotRequestAction keyDescriptionForSetting:]
  -[PBUIWallpaperImageSlotRequestAction slotIdentifier]
  -[PBUIWallpaperImageSlotRequestAction initWithVariant:desiredStyle:traitCollection:slotIdentifier:forResponseOnQueue:withHandler:]
  -[PBUIWallpaperImageSlotRequestAction desiredStyle]


PBUIWallpaperUpdateLocationsAction : BSAction
 @property  long long locations
 @property  long long wallpaperMode

  // instance methods
  -[PBUIWallpaperUpdateLocationsAction wallpaperMode]
  -[PBUIWallpaperUpdateLocationsAction locations]
  -[PBUIWallpaperUpdateLocationsAction valueDescriptionForFlag:object:ofSetting:]
  -[PBUIWallpaperUpdateLocationsAction keyDescriptionForSetting:]
  -[PBUIWallpaperUpdateLocationsAction initWithLocations:wallpaperMode:responder:]


PBUIWallpaperUpdateActionResponse : BSActionResponse
  // instance methods
  -[PBUIWallpaperUpdateActionResponse init]


PBUICARendererImpl : NSObject
  // class methods
  +[PBUICARendererImpl renderTreatedWallpaperImage:needsLuminanceTreatment:needsDimmingTreatment:downsampleFactor:averageColor:]
  +[PBUICARendererImpl renderMaterialImage:recipeName:containingBundle:weighting:downsampleFactor:scaleAdjustment:]
  +[PBUICARendererImpl renderMaterialImage:recipeName:containingBundle:weighting:downsampleFactor:]
  +[PBUICARendererImpl _actuallyRenderImage:requiresBGRA:downsampleFactor:layerCustomizer:]
  +[PBUICARendererImpl luminanceTreatmentFilters]
  +[PBUICARendererImpl renderInactiveAppearanceTreatedWallpaperImage:downsampleFactor:]


PBUIWallpaperWindowSceneTwoCurveTransitionContext : UIApplicationSceneTransitionContext
 @property  BSAnimationSettings *inAnimationSettings
 @property  BSAnimationSettings *outAnimationSettings

  // instance methods
  -[PBUIWallpaperWindowSceneTwoCurveTransitionContext keyDescriptionForSetting:]
  -[PBUIWallpaperWindowSceneTwoCurveTransitionContext inAnimationSettings]
  -[PBUIWallpaperWindowSceneTwoCurveTransitionContext setInAnimationSettings:]
  -[PBUIWallpaperWindowSceneTwoCurveTransitionContext outAnimationSettings]
  -[PBUIWallpaperWindowSceneTwoCurveTransitionContext setOutAnimationSettings:]


PBUIStaticWallpaperView : PBUIWallpaperView
 @property  UIImage *displayedImage
 @property  NSURL *displayedImageURL
 @property  UIImage *sampleImage
 @property  NSData *displayedImageHashData
 @property  NSString *displayedImageHashString
 @property  BOOL needsInactiveAppearanceTreatment
 @property  PBUIColorBoxes *colorBoxes

  // class methods
  +[PBUIStaticWallpaperView allowsParallax]
  +[PBUIStaticWallpaperView _canCacheImages]
  +[PBUIStaticWallpaperView _allowsRasterization]
  +[PBUIStaticWallpaperView _canDownscaleSampleImage]

  // instance methods
  -[PBUIStaticWallpaperView _displayedImage]
  -[PBUIStaticWallpaperView _createColorBoxes]
  -[PBUIStaticWallpaperView wallpaperType]
  -[PBUIStaticWallpaperView setContentsRect:]
  -[PBUIStaticWallpaperView _contrastInContentViewRect:contrastWithinBoxes:contrastBetweenBoxes:]
  -[PBUIStaticWallpaperView preheatImageData]
  -[PBUIStaticWallpaperView initWithFrame:configuration:variant:cacheGroup:delegate:options:]
  -[PBUIStaticWallpaperView cacheUniqueIdentifier]
  -[PBUIStaticWallpaperView setDisplayedImageHashString:]
  -[PBUIStaticWallpaperView displayedImageHashString]
  -[PBUIStaticWallpaperView colorBoxes]
  -[PBUIStaticWallpaperView hasContentOutsideVisibleBounds]
  -[PBUIStaticWallpaperView _displayImage:]
  -[PBUIStaticWallpaperView _setUpStaticImageContentView:]
  -[PBUIStaticWallpaperView setColorBoxes:]
  -[PBUIStaticWallpaperView _imageSize]
  -[PBUIStaticWallpaperView isDisplayingWallpaperWithConfiguration:forVariant:]
  -[PBUIStaticWallpaperView contrastInRect:contrastWithinBoxes:contrastBetweenBoxes:]
  -[PBUIStaticWallpaperView setDisplayedImageHashData:]
  -[PBUIStaticWallpaperView _setDisplayedImage:]
  -[PBUIStaticWallpaperView handlesInactiveAppearanceTreatment]
  -[PBUIStaticWallpaperView _wallpaperImageForAnalysis]
  -[PBUIStaticWallpaperView snapshotImageURL]
  -[PBUIStaticWallpaperView _generateImageForImage:cacheKey:options:downsampleFactor:needsDimmingTreatment:needsInactiveAppearanceTreatment:averageColorProvider:generationHandler:]
  -[PBUIStaticWallpaperView _updateColorBoxesWithKey:image:]
  -[PBUIStaticWallpaperView _setupWallpaperImageFromConfiguration:options:]
  -[PBUIStaticWallpaperView _averageColorInContentViewRect:smudgeRadius:]
  -[PBUIStaticWallpaperView _setSampleImage:]
  -[PBUIStaticWallpaperView setCropRect:zoomScale:]
  -[PBUIStaticWallpaperView cropZoomScale]
  -[PBUIStaticWallpaperView _zoomScale]
  -[PBUIStaticWallpaperView _displayedImageURL]
  -[PBUIStaticWallpaperView wallpaperImage]
  -[PBUIStaticWallpaperView displayedImageHashData]
  -[PBUIStaticWallpaperView _setDisplayedImageURL:]
  -[PBUIStaticWallpaperView needsInactiveAppearanceTreatment]
  -[PBUIStaticWallpaperView setNeedsInactiveAppearanceTreatment:]
  -[PBUIStaticWallpaperView snapshotImage]
  -[PBUIStaticWallpaperView contrast]
  -[PBUIStaticWallpaperView imageRequiresLuminanceTreatment]
  -[PBUIStaticWallpaperView .cxx_destruct]
  -[PBUIStaticWallpaperView _computeAverageColor]
  -[PBUIStaticWallpaperView _setupContentViewWithOptions:]
  -[PBUIStaticWallpaperView _sampleImage]


PBUIStaticWallpaperImageView : UIImageView

PBUIBokehColorArbiter : NSObject

PBUIScrollableIrisWallpaperView : PBUIScrollableStaticWallpaperView <UIGestureRecognizerDelegate, PBUILivePhotoPlayerViewDelegate, PBUIIrisWallpaperPlaying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PBUIIrisWallpaperPlayerDelegate> *irisDelegate
 @property  long long irisPlaybackState
 @property  BOOL isIrisInteracting
 @property  double stillTimeInVideo
 @property  UIGestureRecognizer *irisGestureRecognizer
 @property  NSURL *videoFileURL

  // instance methods
  -[PBUIScrollableIrisWallpaperView playerViewIsInteractingDidChange:]
  -[PBUIScrollableIrisWallpaperView videoFileURL]
  -[PBUIScrollableIrisWallpaperView isIrisInteracting]
  -[PBUIScrollableIrisWallpaperView irisPlaybackState]
  -[PBUIScrollableIrisWallpaperView setIrisDelegate:]
  -[PBUIScrollableIrisWallpaperView playerViewPlaybackStateDidChange:]
  -[PBUIScrollableIrisWallpaperView irisGestureRecognizer]
  -[PBUIScrollableIrisWallpaperView stillTimeInVideo]
  -[PBUIScrollableIrisWallpaperView dealloc]
  -[PBUIScrollableIrisWallpaperView .cxx_destruct]
  -[PBUIScrollableIrisWallpaperView irisDelegate]
  -[PBUIScrollableIrisWallpaperView _newImageView]
  -[PBUIScrollableIrisWallpaperView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PBUIScrollableIrisWallpaperView initWithFrame:configuration:wallpaperVideo:variant:]


PBUIWallpaperService : NSObject
  // class methods
  +[PBUIWallpaperService getWallpaperLegibilitySettingsForVariant:]
  +[PBUIWallpaperService setWallpaperImage:adjustedImage:thumbnailData:imageHashData:wallpaperOptions:forLocations:currentWallpaperMode:]
  +[PBUIWallpaperService setProceduralWallpaperIdentifier:options:locations:]
  +[PBUIWallpaperService removeWallpaperVideo]
  +[PBUIWallpaperService setWallpaperWithVideo:sandboxToken:cropRect:wallpaperMode:]
  +[PBUIWallpaperService restoreDefaultWallpaper]
  +[PBUIWallpaperService setWallpaperColor:darkColor:forLocations:]
  +[PBUIWallpaperService setWallpaperGradient:forLocations:]
  +[PBUIWallpaperService getWallpaperOptionsForVariant:]
  +[PBUIWallpaperService _setupAndActivateServiceClientConnection]
  +[PBUIWallpaperService _remoteTargetForServiceClientConnection:]


PBUIPortalReplicaEffectView : PBUIPortalReplicaView <PBUIFakeBluring>
 @property  double effectWeight
 @property  <PBUIFakeBlurObserver> *observer
 @property  double zoomScale
 @property  unsigned long transformOptions
 @property  BOOL shouldMatchWallpaperPosition
 @property  BOOL fullscreen
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIPortalReplicaEffectView zoomScale]
  -[PBUIPortalReplicaEffectView setTransformOptions:]
  -[PBUIPortalReplicaEffectView setZoomScale:]
  -[PBUIPortalReplicaEffectView transformOptions]
  -[PBUIPortalReplicaEffectView effectiveStyle]
  -[PBUIPortalReplicaEffectView .cxx_destruct]
  -[PBUIPortalReplicaEffectView observer]
  -[PBUIPortalReplicaEffectView requestStyle:]
  -[PBUIPortalReplicaEffectView offsetWallpaperBy:]
  -[PBUIPortalReplicaEffectView initWithFrame:]
  -[PBUIPortalReplicaEffectView setObserver:]
  -[PBUIPortalReplicaEffectView setFullscreen:]
  -[PBUIPortalReplicaEffectView isFullscreen]
  -[PBUIPortalReplicaEffectView setNeedsSourceUpdate]
  -[PBUIPortalReplicaEffectView effectWeight]
  -[PBUIPortalReplicaEffectView setEffectWeight:]
  -[PBUIPortalReplicaEffectView isEffectView]


PBUIPosterFloatingLayerReplica : PBUIPortalReplicaView <PBUIFloatingLayerObserver>
 @property  BOOL floatingLayerStandin
 @property  BOOL isFloatingLayerObserver
 @property  long long effectiveStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIPosterFloatingLayerReplica initWithFrame:]
  -[PBUIPosterFloatingLayerReplica isFloatingLayerStandin]
  -[PBUIPosterFloatingLayerReplica isFloatingLayerObserver]
  -[PBUIPosterFloatingLayerReplica setFloatingLayerStandin:]


SBFCARendererImageRepresentation : NSObject <NSSecureCoding>
 @property  long long representationType
 @property  NSURL *fileURL
 @property  NSData *imageData
 @property  long long imageOrientation
 @property  IOSurface *surface

  // class methods
  +[SBFCARendererImageRepresentation supportsSecureCoding]
  +[SBFCARendererImageRepresentation representationWithImage:]
  +[SBFCARendererImageRepresentation representationWithFileURL:imageOrientation:]
  +[SBFCARendererImageRepresentation representationWithImageData:imageOrientation:]
  +[SBFCARendererImageRepresentation representationWithIOSurface:imageOrientation:]

  // instance methods
  -[SBFCARendererImageRepresentation imageOrientation]
  -[SBFCARendererImageRepresentation fileURL]
  -[SBFCARendererImageRepresentation encodeWithCoder:]
  -[SBFCARendererImageRepresentation .cxx_destruct]
  -[SBFCARendererImageRepresentation surface]
  -[SBFCARendererImageRepresentation imageData]
  -[SBFCARendererImageRepresentation initWithCoder:]
  -[SBFCARendererImageRepresentation createCGImageReturningScale:]
  -[SBFCARendererImageRepresentation representationType]


PBUIImageSlotRepository : NSObject
  // instance methods
  -[PBUIImageSlotRepository initWithWindowScene:]
  -[PBUIImageSlotRepository .cxx_destruct]
  -[PBUIImageSlotRepository urlForIdentifier:]
  -[PBUIImageSlotRepository allocateImageSlotForIdentifier:size:actualStyle:url:lifetimeObject:]
  -[PBUIImageSlotRepository freeImageSlotWithIdentifier:lifetime:]
  -[PBUIImageSlotRepository setImageSlot:forIdentifier:]
  -[PBUIImageSlotRepository hasSlotForIdentifier:]
  -[PBUIImageSlotRepository sizeForIdentifier:]
  -[PBUIImageSlotRepository actualStyleForIdentifier:]
  -[PBUIImageSlotRepository ioSurfaceForIdentifier:]


_PBUIImageSlotRepositoryEntry : NSObject
 @property  NSURL *url
 @property  {CGSize=dd} size
 @property  long long actualStyle
 @property  UIImage *image
 @property  IOSurface *ioSurface

  // instance methods
  -[_PBUIImageSlotRepositoryEntry setUrl:]
  -[_PBUIImageSlotRepositoryEntry dealloc]
  -[_PBUIImageSlotRepositoryEntry ioSurface]
  -[_PBUIImageSlotRepositoryEntry .cxx_destruct]
  -[_PBUIImageSlotRepositoryEntry size]
  -[_PBUIImageSlotRepositoryEntry image]
  -[_PBUIImageSlotRepositoryEntry url]
  -[_PBUIImageSlotRepositoryEntry setSize:]
  -[_PBUIImageSlotRepositoryEntry setImage:]
  -[_PBUIImageSlotRepositoryEntry _setBlockSet:]
  -[_PBUIImageSlotRepositoryEntry actualStyle]
  -[_PBUIImageSlotRepositoryEntry setActualStyle:]


PBUIFakeBlurView : UIView <PBUIFakeBlurImageProviding, PBUIFakeBluring, PBUIWallpaperReachabilityObserving>
 @property  long long variant
 @property  <PBUIFakeBlurImageProviding> *imageProvider
 @property  UIView *providedImageView
 @property  <PBUIFakeBlurViewRegistering> *fakeBlurRegistry
 @property  PBUIWallpaperViewController *wallpaperViewController
 @property  <PBUIWallpaperReachabilityCoordinating> *reachabilityCoordinator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PBUIFakeBlurObserver> *observer
 @property  double zoomScale
 @property  unsigned long transformOptions
 @property  BOOL shouldMatchWallpaperPosition
 @property  BOOL fullscreen

  // class methods
  +[PBUIFakeBlurView _imageForStyle:withSource:overrideTraitCollection:]
  +[PBUIFakeBlurView _imageForStyle:withSource:]
  +[PBUIFakeBlurView _imageForStyle:withSource:overrideTraitCollection:result:]

  // instance methods
  -[PBUIFakeBlurView zoomScale]
  -[PBUIFakeBlurView updateImageWithSource:]
  -[PBUIFakeBlurView rotateToInterfaceOrientation:]
  -[PBUIFakeBlurView setTransformOptions:]
  -[PBUIFakeBlurView updateImageProviderView:withImage:]
  -[PBUIFakeBlurView setZoomScale:]
  -[PBUIFakeBlurView fakeBlurRegistry]
  -[PBUIFakeBlurView transformOptions]
  -[PBUIFakeBlurView variant]
  -[PBUIFakeBlurView zoomFactorForVariant:]
  -[PBUIFakeBlurView effectiveStyle]
  -[PBUIFakeBlurView dealloc]
  -[PBUIFakeBlurView wallpaperViewController]
  -[PBUIFakeBlurView shouldMatchWallpaperPosition]
  -[PBUIFakeBlurView .cxx_destruct]
  -[PBUIFakeBlurView reconfigureFromProvider]
  -[PBUIFakeBlurView observer]
  -[PBUIFakeBlurView parallaxFactorForVariant:]
  -[PBUIFakeBlurView initWithVariant:imageProvider:fakeBlurRegistry:wallpaperViewDelegate:transformOptions:reachabilityCoordinator:]
  -[PBUIFakeBlurView imageForWallpaperStyle:variant:traitCollection:]
  -[PBUIFakeBlurView layoutSubviews]
  -[PBUIFakeBlurView parallaxEnabledForVariant:]
  -[PBUIFakeBlurView handleReachabilityYOffsetDidChange]
  -[PBUIFakeBlurView requestStyle:]
  -[PBUIFakeBlurView offsetWallpaperBy:]
  -[PBUIFakeBlurView imageProvider]
  -[PBUIFakeBlurView reachabilityCoordinator]
  -[PBUIFakeBlurView setShouldMatchWallpaperPosition:]
  -[PBUIFakeBlurView initWithVariant:wallpaperViewController:transformOptions:reachabilityCoordinator:]
  -[PBUIFakeBlurView updateImageFromProviderForWallpaperMode:]
  -[PBUIFakeBlurView reconfigureWithSource:]
  -[PBUIFakeBlurView setObserver:]
  -[PBUIFakeBlurView willMoveToWindow:]
  -[PBUIFakeBlurView setFullscreen:]
  -[PBUIFakeBlurView traitCollectionDidChange:]
  -[PBUIFakeBlurView didMoveToWindow]
  -[PBUIFakeBlurView providedImageView]
  -[PBUIFakeBlurView newImageProviderView]
  -[PBUIFakeBlurView isFullscreen]


PBUIAccessibilityTintView : UIView <PBUIFakeBluring, PBUIWallpaperObserver>
 @property  <PBUIFakeBlurObserver> *observer
 @property  <PBUILegacyWallpaperPresenting> *wallpaperPresenter
 @property  <PBUIWallpaperLegibilityProviding> *wallpaperLegibilityProvider
 @property  double zoomScale
 @property  unsigned long transformOptions
 @property  BOOL shouldMatchWallpaperPosition
 @property  BOOL fullscreen
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIAccessibilityTintView wallpaperDidChangeForVariant:]
  -[PBUIAccessibilityTintView zoomScale]
  -[PBUIAccessibilityTintView setTransformOptions:]
  -[PBUIAccessibilityTintView setZoomScale:]
  -[PBUIAccessibilityTintView transformOptions]
  -[PBUIAccessibilityTintView _updateBackgroundColor]
  -[PBUIAccessibilityTintView effectiveStyle]
  -[PBUIAccessibilityTintView dealloc]
  -[PBUIAccessibilityTintView shouldMatchWallpaperPosition]
  -[PBUIAccessibilityTintView .cxx_destruct]
  -[PBUIAccessibilityTintView didMoveToSuperview]
  -[PBUIAccessibilityTintView observer]
  -[PBUIAccessibilityTintView requestStyle:]
  -[PBUIAccessibilityTintView offsetWallpaperBy:]
  -[PBUIAccessibilityTintView setShouldMatchWallpaperPosition:]
  -[PBUIAccessibilityTintView wallpaperLegibilitySettingsDidChange:forVariant:]
  -[PBUIAccessibilityTintView setObserver:]
  -[PBUIAccessibilityTintView setFullscreen:]
  -[PBUIAccessibilityTintView didMoveToWindow]
  -[PBUIAccessibilityTintView isFullscreen]
  -[PBUIAccessibilityTintView initWithVariant:wallpaperViewController:]
  -[PBUIAccessibilityTintView initWithVariant:wallpaperPresenter:wallpaperLegibilityProvider:]
  -[PBUIAccessibilityTintView wallpaperPresenter]
  -[PBUIAccessibilityTintView wallpaperLegibilityProvider]


PBUIWallpaperStyleInfo : NSObject <BSDescriptionProviding>
 @property  PBUIWallpaperEffectViewBase *wallpaperEffectView
 @property  {?=qqd} styleTransitionState
 @property  long long highestValidPriority
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIWallpaperStyleInfo wallpaperEffectView]
  -[PBUIWallpaperStyleInfo descriptionWithMultilinePrefix:]
  -[PBUIWallpaperStyleInfo descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperStyleInfo .cxx_destruct]
  -[PBUIWallpaperStyleInfo setWallpaperEffectView:]
  -[PBUIWallpaperStyleInfo succinctDescription]
  -[PBUIWallpaperStyleInfo succinctDescriptionBuilder]
  -[PBUIWallpaperStyleInfo init]
  -[PBUIWallpaperStyleInfo priorityInfoForPriority:]
  -[PBUIWallpaperStyleInfo setPriorityInfo:forPriority:]
  -[PBUIWallpaperStyleInfo removePriorityInfoForPriority:]
  -[PBUIWallpaperStyleInfo enumerateValidPrioritiesUsingBlock:]
  -[PBUIWallpaperStyleInfo highestValidPriority]
  -[PBUIWallpaperStyleInfo styleTransitionState]
  -[PBUIWallpaperStyleInfo setStyleTransitionState:]


PBUIWallpaperConfigurationManager : NSObject <BSDescriptionProviding>
 @property  BOOL cachedVariantsShareWallpaperConfiguration
 @property  BOOL cachedVariantsShareWallpaperConfigurationValid
 @property  NSArray *dataStores
 @property  <PBUIWallpaperConfigurationManagerDelegate> *delegate
 @property  {CGSize=dd} wallpaperSize
 @property  {CGSize=dd} wallpaperSizeIncludingParallaxOverhang
 @property  double wallpaperScale
 @property  long long wallpaperMode
 @property  BOOL enableWallpaperDimming
 @property  long long wallpaperSizeType
 @property  long long parallaxDeviceType
 @property  PBUIWallpaperConfiguration *lockScreenWallpaperConfiguration
 @property  PBUIWallpaperConfiguration *homeScreenWallpaperConfiguration
 @property  BOOL variantsShareWallpaperConfiguration
 @property  unsigned long numberOfCachedStaticImages
 @property  <PBUIProceduralWallpaperProvider> *proceduralWallpaperProvider
 @property  PBUIMagnifyMode *magnifyMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBUIWallpaperConfigurationManager initialize]

  // instance methods
  -[PBUIWallpaperConfigurationManager beginChangeBatch]
  -[PBUIWallpaperConfigurationManager setWallpaperOptions:forVariants:]
  -[PBUIWallpaperConfigurationManager wallpaperMode]
  -[PBUIWallpaperConfigurationManager removeVideoForVariants:]
  -[PBUIWallpaperConfigurationManager removeProceduralWallpaperForVariants:]
  -[PBUIWallpaperConfigurationManager removeWallpaperImagesForVariants:variantsShareWallpaperConfiguration:]
  -[PBUIWallpaperConfigurationManager isProceduralWallpaperInfoValid:]
  -[PBUIWallpaperConfigurationManager wallpaperThumbnailImageDataForVariant:wallpaperMode:inDataStore:]
  -[PBUIWallpaperConfigurationManager fallbackWallpaperConfigurationForVarient:]
  -[PBUIWallpaperConfigurationManager cropRectForOldCropRect:portrait:zoomScale:oldParallaxFactor:forImageSize:newZoomScale:]
  -[PBUIWallpaperConfigurationManager setWallpaperThumbnailFromFullsizeImage:forVariant:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager delayNotifyingChangeForVariants:]
  -[PBUIWallpaperConfigurationManager variantsShareWallpaperConfigurationForTypes:]
  -[PBUIWallpaperConfigurationManager isInChangeBatch]
  -[PBUIWallpaperConfigurationManager wallpaperWillChangeForVariants:]
  -[PBUIWallpaperConfigurationManager lockScreenWallpaperConfigurationIncludingValuesForTypes:]
  -[PBUIWallpaperConfigurationManager clearCacheForVariants:]
  -[PBUIWallpaperConfigurationManager normalizeImage:]
  -[PBUIWallpaperConfigurationManager safeMigrateWallpaperImageIfNecessary]
  -[PBUIWallpaperConfigurationManager parallaxDeviceType]
  -[PBUIWallpaperConfigurationManager parallaxFactorForCropRect:portrait:forImageSize:zoomScale:]
  -[PBUIWallpaperConfigurationManager setProceduralWallpaperIdentifier:options:forVariants:]
  -[PBUIWallpaperConfigurationManager setWallpaperColor:forVariants:]
  -[PBUIWallpaperConfigurationManager setDelegate:]
  -[PBUIWallpaperConfigurationManager removeWallpaperImagesForVariants:]
  -[PBUIWallpaperConfigurationManager initWithWallpaperDataStores:wallpaperSize:scale:sizeType:]
  -[PBUIWallpaperConfigurationManager saveCroppedVideo:toURL:cropRect:completionHandler:]
  -[PBUIWallpaperConfigurationManager descriptionWithMultilinePrefix:]
  -[PBUIWallpaperConfigurationManager initWithWallpaperDataStores:]
  -[PBUIWallpaperConfigurationManager _naturalPreferredTransform:forNaturalSize:]
  -[PBUIWallpaperConfigurationManager setWallpaperColorName:forVariants:]
  -[PBUIWallpaperConfigurationManager wallpaperThumbnailImageForFulfillingLookupForConfiguration:]
  -[PBUIWallpaperConfigurationManager cleanedProceduralWallpaperInfo:]
  -[PBUIWallpaperConfigurationManager setMagnifyMode:]
  -[PBUIWallpaperConfigurationManager delegate]
  -[PBUIWallpaperConfigurationManager descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperConfigurationManager wallpaperDidChangeForVariants:shouldNotify:]
  -[PBUIWallpaperConfigurationManager setWallpaperGradient:forVariants:]
  -[PBUIWallpaperConfigurationManager dealloc]
  -[PBUIWallpaperConfigurationManager isVideoSupportedForVariant:]
  -[PBUIWallpaperConfigurationManager wallpaperImageHashDataForVariant:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager clearDelayedChangeNotifications]
  -[PBUIWallpaperConfigurationManager effectiveSharedVariantForVariants:]
  -[PBUIWallpaperConfigurationManager setCachedVariantsShareWallpaperConfigurationValid:]
  -[PBUIWallpaperConfigurationManager wallpaperThumbnailImageDataForVariant:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager .cxx_destruct]
  -[PBUIWallpaperConfigurationManager wallpaperThumbnailImageForVariant:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager regenerateThumbnailsIfNecessary]
  -[PBUIWallpaperConfigurationManager setWallpaperImageHashData:forVariants:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager succinctDescription]
  -[PBUIWallpaperConfigurationManager migrateWallpaperOptionsForImageIfNecessaryForVariant:representingVariants:]
  -[PBUIWallpaperConfigurationManager wallpaperOriginalImageForVariant:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager wallpaperConfigurationForVariant:]
  -[PBUIWallpaperConfigurationManager homeScreenWallpaperConfigurationIncludingValuesForTypes:]
  -[PBUIWallpaperConfigurationManager getWallpaperLegibilitySettingsForVariant:]
  -[PBUIWallpaperConfigurationManager proceduralWallpaperClassForIdentifier:]
  -[PBUIWallpaperConfigurationManager setWallpaperThumbnailData:forVariant:]
  -[PBUIWallpaperConfigurationManager numberOfCachedStaticImages]
  -[PBUIWallpaperConfigurationManager wallpaperThumbnailImageDataForFulfillingLookupForConfiguration:]
  -[PBUIWallpaperConfigurationManager _providerForVariant:lockConfig:homeConfig:]
  -[PBUIWallpaperConfigurationManager restoreDefaultWallpaperForAllVariantsAndNotify:]
  -[PBUIWallpaperConfigurationManager shouldSetWallpaperImageHashData]
  -[PBUIWallpaperConfigurationManager thumbnailWidth]
  -[PBUIWallpaperConfigurationManager wallpaperScale]
  -[PBUIWallpaperConfigurationManager setCachedVariantsShareWallpaperConfiguration:]
  -[PBUIWallpaperConfigurationManager wallpaperOptionsForVariant:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager dataStores]
  -[PBUIWallpaperConfigurationManager setVideoURL:forVariant:shoudCrop:relativeCropRect:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager safeMigrateWallpaperImageIfNecessaryForVariant:representingVariants:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager lockScreenWallpaperConfiguration]
  -[PBUIWallpaperConfigurationManager videoURLForVariant:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager setWallpaperConfigurationFromDefaultWallpaperConfiguration:forVariants:wallpaperMode:name:]
  -[PBUIWallpaperConfigurationManager removeAllDataExceptForTypes:variants:variantsShareWallpaperConfiguration:]
  -[PBUIWallpaperConfigurationManager setProceduralWallpaperProvider:]
  -[PBUIWallpaperConfigurationManager migratedWallpaperOptionsForWallpaperOptions:originalImageSize:]
  -[PBUIWallpaperConfigurationManager setWallpaperImage:wallpaperOptions:forVariants:]
  -[PBUIWallpaperConfigurationManager posterMigrationInfo]
  -[PBUIWallpaperConfigurationManager wallpaperColorForVariant:fromDataStore:colorName:]
  -[PBUIWallpaperConfigurationManager hasWallpaperImageForVariant:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager magnifyMode]
  -[PBUIWallpaperConfigurationManager removeWallpaperColorForVariants:]
  -[PBUIWallpaperConfigurationManager proceduralWallpaperProvider]
  -[PBUIWallpaperConfigurationManager homeScreenWallpaperConfiguration]
  -[PBUIWallpaperConfigurationManager setEnableWallpaperDimming:]
  -[PBUIWallpaperConfigurationManager cachedVariantsShareWallpaperConfiguration]
  -[PBUIWallpaperConfigurationManager removeDataForTypes:variants:variantsShareWallpaperConfiguration:]
  -[PBUIWallpaperConfigurationManager removeWallpaperOptionsForVariants:]
  -[PBUIWallpaperConfigurationManager setWallpaperMode:]
  -[PBUIWallpaperConfigurationManager setWallpaperOptions:forVariants:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager setWallpaperThumbnailData:forVariant:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager thumbnailDataForImage:]
  -[PBUIWallpaperConfigurationManager setWallpaperImage:adjustedImage:thumbnailData:imageHashData:wallpaperOptions:forVariants:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager wallpaperSizeIncludingParallaxOverhang]
  -[PBUIWallpaperConfigurationManager wallpaperSizeType]
  -[PBUIWallpaperConfigurationManager setWallpaperImage:originalImage:forVariants:options:]
  -[PBUIWallpaperConfigurationManager removeWallpaperImageDataTypes:forVariants:]
  -[PBUIWallpaperConfigurationManager proceduralWallpaperInfoForVariant:]
  -[PBUIWallpaperConfigurationManager succinctDescriptionBuilder]
  -[PBUIWallpaperConfigurationManager regenerateThumbnailIfNecessaryForVariant:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager endChangeBatch]
  -[PBUIWallpaperConfigurationManager removeWallpaperImageHashDataForVariants:]
  -[PBUIWallpaperConfigurationManager wallpaperSize]
  -[PBUIWallpaperConfigurationManager regenerateStaticWallpaperThumbnailImages]
  -[PBUIWallpaperConfigurationManager isVideoSupportedByDefaultForVariant:]
  -[PBUIWallpaperConfigurationManager isCachedVariantsShareWallpaperConfigurationValid]
  -[PBUIWallpaperConfigurationManager performMigrationWithFailureHandler:]
  -[PBUIWallpaperConfigurationManager getBestCropRect:zoomScale:forImageSize:portrait:parallaxFactor:]
  -[PBUIWallpaperConfigurationManager setWallpaperImage:originalImage:thumbnailData:imageHashData:wallpaperOptions:forVariants:options:wallpaperMode:isMigrating:]
  -[PBUIWallpaperConfigurationManager enableWallpaperDimming]
  -[PBUIWallpaperConfigurationManager setWallpaperBundle:appearance:]
  -[PBUIWallpaperConfigurationManager removeAllDataExceptForType:variants:variantsShareWallpaperConfiguration:]
  -[PBUIWallpaperConfigurationManager wallpaperTypeForSharedWallpaperConfigurationForTypes:]
  -[PBUIWallpaperConfigurationManager wallpaperConfigurationForVariant:includingValuesForTypes:]
  -[PBUIWallpaperConfigurationManager cropRectForViewPort:portrait:zoomScale:parallaxFactor:forImageSize:contentScaleFactor:]
  -[PBUIWallpaperConfigurationManager wallpaperConfigurationForVariant:includingValuesForTypes:wallpaperMode:]
  -[PBUIWallpaperConfigurationManager notifyDelegateOfChangesToVariants:]
  -[PBUIWallpaperConfigurationManager clearCacheForVariants:memoryOnly:]
  -[PBUIWallpaperConfigurationManager init]
  -[PBUIWallpaperConfigurationManager variantsShareWallpaperConfiguration]
  -[PBUIWallpaperConfigurationManager removeWallpaperGradientForVariants:]
  -[PBUIWallpaperConfigurationManager wallpaperImageForVariant:wallpaperMode:]


PBUIWallpaperEffectImageRequestAction : BSAction
 @property  NSString *slotIdentifier

  // instance methods
  -[PBUIWallpaperEffectImageRequestAction keyDescriptionForSetting:]
  -[PBUIWallpaperEffectImageRequestAction slotIdentifier]
  -[PBUIWallpaperEffectImageRequestAction initWithSlotIdentifier:forResponseOnQueue:withHandler:]


PBUIWallpaperEffectImageRequestActionResponse : BSActionResponse
 @property  long long actualStyle
 @property  {CGSize=dd} size

  // instance methods
  -[PBUIWallpaperEffectImageRequestActionResponse size]
  -[PBUIWallpaperEffectImageRequestActionResponse valueDescriptionForFlag:object:ofSetting:]
  -[PBUIWallpaperEffectImageRequestActionResponse keyDescriptionForSetting:]
  -[PBUIWallpaperEffectImageRequestActionResponse actualStyle]


PBUIWallpaperEffectImageRequestActionImageURLResponse : PBUIWallpaperEffectImageRequestActionResponse
 @property  NSURL *imageURL

  // instance methods
  -[PBUIWallpaperEffectImageRequestActionImageURLResponse imageURL]
  -[PBUIWallpaperEffectImageRequestActionImageURLResponse initWithActualStyle:size:imageURL:]


PBUIWallpaperEffectImageRequestActionIOSurfaceResponse : PBUIWallpaperEffectImageRequestActionResponse
 @property  IOSurface *ioSurface

  // instance methods
  -[PBUIWallpaperEffectImageRequestActionIOSurfaceResponse ioSurface]
  -[PBUIWallpaperEffectImageRequestActionIOSurfaceResponse initWithActualStyle:size:ioSurface:]


PBUIPosterWallpaperWindowSceneStyleTransitionState : NSObject <NSCopying, BSXPCCoding>
 @property  {?=qqd} highestPriorityStyleTransitionState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState initWithXPCDictionary:]
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState descriptionWithMultilinePrefix:]
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState descriptionBuilderWithMultilinePrefix:]
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState succinctDescription]
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState copyWithZone:]
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState succinctDescriptionBuilder]
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState encodeWithXPCDictionary:]
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState isEqual:]
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState init]
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState setWallpaperStyleTransitionState:forPriority:]
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState removeWallpaperStyleTransitionStateForPriority:]
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState diffFromPosterWallpaperWindowSceneStyleTransitionState:updateHandler:removeHandler:]
  -[PBUIPosterWallpaperWindowSceneStyleTransitionState highestPriorityStyleTransitionState]


PBUIWallpaperPreheatAction : BSAction
 @property  long long variant

  // instance methods
  -[PBUIWallpaperPreheatAction variant]
  -[PBUIWallpaperPreheatAction valueDescriptionForFlag:object:ofSetting:]
  -[PBUIWallpaperPreheatAction keyDescriptionForSetting:]
  -[PBUIWallpaperPreheatAction initWithVariant:]


PBUIReplicaDebugView : UIView
 @property  UIColor *color
 @property  NSString *title

  // class methods
  +[PBUIReplicaDebugView requiresConstraintBasedLayout]
  +[PBUIReplicaDebugView debugFont]

  // instance methods
  -[PBUIReplicaDebugView .cxx_destruct]
  -[PBUIReplicaDebugView layoutSubviews]
  -[PBUIReplicaDebugView title]
  -[PBUIReplicaDebugView color]
  -[PBUIReplicaDebugView setColor:]
  -[PBUIReplicaDebugView initWithFrame:]
  -[PBUIReplicaDebugView setTitle:]


PBUIWallpaperDidCompleteWallpaperChangeAction : BSAction
  // instance methods
  -[PBUIWallpaperDidCompleteWallpaperChangeAction init]


PBUICARenderer : NSObject
 @property  BOOL usesXPCService

  // class methods
  +[PBUICARenderer sharedInstance]
  +[PBUICARenderer defaultUsesXPCService]

  // instance methods
  -[PBUICARenderer _createConnection]
  -[PBUICARenderer .cxx_destruct]
  -[PBUICARenderer _remoteObjectProxy]
  -[PBUICARenderer init]
  -[PBUICARenderer applyMaterialRecipe:recipeName:containingBundle:weighting:downsampleFactor:]
  -[PBUICARenderer treatWallpaperImage:needsLuminanceTreatment:needsDimmingTreatment:downsampleFactor:averageColor:]
  -[PBUICARenderer treatWallpaperImageForInactiveAppearance:downsampleFactor:]
  -[PBUICARenderer applyMaterialRecipe:recipeName:containingBundle:weighting:downsampleFactor:scaleAdjustment:]
  -[PBUICARenderer usesXPCService]
  -[PBUICARenderer setUsesXPCService:]


PBUIWallpaperCache : NSObject
 @property  BSUIMappedImageCache *imageCache

  // class methods
  +[PBUIWallpaperCache wallpaperCache]

  // instance methods
  -[PBUIWallpaperCache imageCache]
  -[PBUIWallpaperCache .cxx_destruct]
  -[PBUIWallpaperCache initWithOptions:]
  -[PBUIWallpaperCache imageForKey:generatingIfNecessaryWithBlock:]
  -[PBUIWallpaperCache imageForKey:generatingIfNecessaryWithBlock:completion:]
  -[PBUIWallpaperCache imageURLForKey:]
  -[PBUIWallpaperCache colorBoxesForKey:generatingIfNeceesaryFromImage:]
  -[PBUIWallpaperCache warmupForKey:]
  -[PBUIWallpaperCache removeEverythingWithCompletion:]


PBUIWallpaperDomain : PTDomain
  // class methods
  +[PBUIWallpaperDomain rootSettings]
  +[PBUIWallpaperDomain domainName]
  +[PBUIWallpaperDomain domainGroupName]
  +[PBUIWallpaperDomain rootSettingsClass]


PBUIWallpaperWindowSceneStyleTransitionState : NSObject <NSCopying, BSXPCCoding>
 @property  {?=qqd} highestPriorityStyleTransitionState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIWallpaperWindowSceneStyleTransitionState initWithXPCDictionary:]
  -[PBUIWallpaperWindowSceneStyleTransitionState descriptionWithMultilinePrefix:]
  -[PBUIWallpaperWindowSceneStyleTransitionState descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperWindowSceneStyleTransitionState succinctDescription]
  -[PBUIWallpaperWindowSceneStyleTransitionState copyWithZone:]
  -[PBUIWallpaperWindowSceneStyleTransitionState succinctDescriptionBuilder]
  -[PBUIWallpaperWindowSceneStyleTransitionState encodeWithXPCDictionary:]
  -[PBUIWallpaperWindowSceneStyleTransitionState isEqual:]
  -[PBUIWallpaperWindowSceneStyleTransitionState init]
  -[PBUIWallpaperWindowSceneStyleTransitionState setWallpaperStyleTransitionState:forPriority:]
  -[PBUIWallpaperWindowSceneStyleTransitionState removeWallpaperStyleTransitionStateForPriority:]
  -[PBUIWallpaperWindowSceneStyleTransitionState highestPriorityStyleTransitionState]
  -[PBUIWallpaperWindowSceneStyleTransitionState diffFromWallpaperWindowSceneStyleTransitionState:updateHandler:removeHandler:]


PBUIWallpaperDirectoryDataStore : NSObject <PBUIWallpaperDataStore, BSDescriptionProviding>
 @property  NSDictionary *directoryCreationAttributes
 @property  NSURL *directoryURL
 @property  BOOL supportsWallpaperOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBUIWallpaperDirectoryDataStore defaultDirectoryURL]

  // instance methods
  -[PBUIWallpaperDirectoryDataStore directoryURL]
  -[PBUIWallpaperDirectoryDataStore removeProceduralWallpaperForVariants:]
  -[PBUIWallpaperDirectoryDataStore wallpaperThumbnailDataForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore wallpaperVideoURLForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore setWallpaperColor:forVariants:]
  -[PBUIWallpaperDirectoryDataStore setWallpaperImage:forVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore descriptionWithMultilinePrefix:]
  -[PBUIWallpaperDirectoryDataStore setWallpaperColorName:forVariants:]
  -[PBUIWallpaperDirectoryDataStore descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperDirectoryDataStore setVideoURL:forVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore setWallpaperGradient:forVariants:]
  -[PBUIWallpaperDirectoryDataStore wallpaperOriginalVideoURLForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore wallpaperImageHashDataForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore .cxx_destruct]
  -[PBUIWallpaperDirectoryDataStore unverifiedVideoURLForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore verifiedVideoURLForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore setOriginalVideoURL:forVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore setWallpaperImageHashData:forVariants:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore succinctDescription]
  -[PBUIWallpaperDirectoryDataStore wallpaperOriginalImageForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore wallpaperGradientForVariant:]
  -[PBUIWallpaperDirectoryDataStore initWithDirectoryURL:]
  -[PBUIWallpaperDirectoryDataStore directoryCreationAttributes]
  -[PBUIWallpaperDirectoryDataStore moveWallpaperImageDataTypes:fromVariant:toVariant:]
  -[PBUIWallpaperDirectoryDataStore wallpaperColorForVariant:]
  -[PBUIWallpaperDirectoryDataStore wallpaperOptionsForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore wallpaperOriginalImageURLForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore supportsWallpaperOptions]
  -[PBUIWallpaperDirectoryDataStore supportsWallpaperImageHashDataStorage]
  -[PBUIWallpaperDirectoryDataStore hasWallpaperImageForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore removeWallpaperColorForVariants:]
  -[PBUIWallpaperDirectoryDataStore removeVideoForVariant:]
  -[PBUIWallpaperDirectoryDataStore setWallpaperOriginalImage:forVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore removeWallpaperOptionsForVariants:]
  -[PBUIWallpaperDirectoryDataStore setWallpaperOptions:forVariants:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore setWallpaperThumbnailData:forVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore copyVideoAtURL:toURL:]
  -[PBUIWallpaperDirectoryDataStore removeWallpaperImageDataTypes:forVariants:]
  -[PBUIWallpaperDirectoryDataStore wallpaperOptionsURLForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore proceduralWallpaperInfoForVariant:]
  -[PBUIWallpaperDirectoryDataStore succinctDescriptionBuilder]
  -[PBUIWallpaperDirectoryDataStore setProceduralWallpaperInfo:forVariants:]
  -[PBUIWallpaperDirectoryDataStore removeWallpaperImageHashDataForVariants:]
  -[PBUIWallpaperDirectoryDataStore wallpaperThumbnailURLForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore createDirectory]
  -[PBUIWallpaperDirectoryDataStore verifiedOriginalVideoURLForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore setSupportsWallpaperOptions:]
  -[PBUIWallpaperDirectoryDataStore didWriteFileToURL:]
  -[PBUIWallpaperDirectoryDataStore wallpaperImageURLForVariant:wallpaperMode:]
  -[PBUIWallpaperDirectoryDataStore init]
  -[PBUIWallpaperDirectoryDataStore removeWallpaperGradientForVariants:]
  -[PBUIWallpaperDirectoryDataStore wallpaperColorNameForVariant:]
  -[PBUIWallpaperDirectoryDataStore wallpaperImageForVariant:wallpaperMode:]


PBUIWallpaperSharedDirectoryDataStore : PBUIWallpaperDirectoryDataStore
  // class methods
  +[PBUIWallpaperSharedDirectoryDataStore defaultDirectoryURL]

  // instance methods
  -[PBUIWallpaperSharedDirectoryDataStore initWithDirectoryURL:]
  -[PBUIWallpaperSharedDirectoryDataStore directoryCreationAttributes]
  -[PBUIWallpaperSharedDirectoryDataStore didWriteFileToURL:]


PBUIWallpaperOptions : NSObject <NSCopying, BSDescriptionProviding, NSSecureCoding>
 @property  NSString *name
 @property  BOOL parallaxEnabled
 @property  double parallaxFactor
 @property  BOOL magnifyEnabled
 @property  double zoomScale
 @property  BOOL supportsCropping
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  BOOL supportsRotation
 @property  double rotationAngle
 @property  BOOL portrait
 @property  BOOL hasVideo
 @property  double stillTimeInVideo
 @property  long long wallpaperMode
 @property  long long wallpaperStatus
 @property  NSDictionary *wallpaperKitData
 @property  NSData *persistentDataRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBUIWallpaperOptions supportsSecureCoding]
  +[PBUIWallpaperOptions optionsWithName:parallaxFactor:zoomScale:supportsCropping:cropRect:portrait:hasVideo:stillTimeInVideo:]
  +[PBUIWallpaperOptions optionsWithName:parallaxFactor:zoomScale:supportsCropping:cropRect:portrait:hasVideo:stillTimeInVideo:wallpaperKitData:]
  +[PBUIWallpaperOptions optionsWithName:parallaxFactor:zoomScale:supportsCropping:cropRect:portrait:hasVideo:stillTimeInVideo:wallpaperMode:wallpaperStatus:wallpaperKitData:]
  +[PBUIWallpaperOptions optionsWithName:parallaxFactor:zoomScale:supportsCropping:cropRect:portrait:]
  +[PBUIWallpaperOptions optionsWithName:parallaxFactor:zoomScale:supportsCropping:cropRect:portrait:hasVideo:stillTimeInVideo:wallpaperMode:wallpaperStatus:]
  +[PBUIWallpaperOptions optionsWithName:parallaxFactor:zoomScale:supportsCropping:cropRect:supportsRotation:rotationAngle:portrait:hasVideo:stillTimeInVideo:wallpaperMode:wallpaperStatus:]

  // instance methods
  -[PBUIWallpaperOptions parallaxFactor]
  -[PBUIWallpaperOptions wallpaperMode]
  -[PBUIWallpaperOptions zoomScale]
  -[PBUIWallpaperOptions setParallaxFactor:]
  -[PBUIWallpaperOptions cropRect]
  -[PBUIWallpaperOptions parallaxEnabled]
  -[PBUIWallpaperOptions initWithContentsOfURL:]
  -[PBUIWallpaperOptions setZoomScale:]
  -[PBUIWallpaperOptions initWithStream:]
  -[PBUIWallpaperOptions writeToURL:error:]
  -[PBUIWallpaperOptions descriptionWithMultilinePrefix:]
  -[PBUIWallpaperOptions setRotationAngle:]
  -[PBUIWallpaperOptions encodeWithCoder:]
  -[PBUIWallpaperOptions descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperOptions stillTimeInVideo]
  -[PBUIWallpaperOptions .cxx_destruct]
  -[PBUIWallpaperOptions setMagnifyEnabled:]
  -[PBUIWallpaperOptions hasVideo]
  -[PBUIWallpaperOptions rotationAngle]
  -[PBUIWallpaperOptions succinctDescription]
  -[PBUIWallpaperOptions setHasVideo:]
  -[PBUIWallpaperOptions setName:]
  -[PBUIWallpaperOptions copyWithZone:]
  -[PBUIWallpaperOptions name]
  -[PBUIWallpaperOptions setWallpaperMode:]
  -[PBUIWallpaperOptions setStillTimeInVideo:]
  -[PBUIWallpaperOptions supportsCropping]
  -[PBUIWallpaperOptions succinctDescriptionBuilder]
  -[PBUIWallpaperOptions wallpaperKitData]
  -[PBUIWallpaperOptions setWallpaperKitData:]
  -[PBUIWallpaperOptions setPortrait:]
  -[PBUIWallpaperOptions isEqual:]
  -[PBUIWallpaperOptions init]
  -[PBUIWallpaperOptions isPortrait]
  -[PBUIWallpaperOptions initWithCoder:]
  -[PBUIWallpaperOptions setSupportsCropping:]
  -[PBUIWallpaperOptions setCropRect:]
  -[PBUIWallpaperOptions setWallpaperStatus:]
  -[PBUIWallpaperOptions wallpaperStatus]
  -[PBUIWallpaperOptions bestWallpaperSizeForWallpaperSize:wallpaperScale:deviceType:imageScale:]
  -[PBUIWallpaperOptions initWithName:parallaxFactor:zoomScale:supportsCropping:cropRect:supportsRotation:rotationAngle:portrait:hasVideo:stillTimeInVideo:wallpaperMode:wallpaperStatus:wallpaperKitData:]
  -[PBUIWallpaperOptions initWithPersistentDataRepresentation:]
  -[PBUIWallpaperOptions isLooselyEqualToWallpaperOptions:]
  -[PBUIWallpaperOptions persistentPropertyList]
  -[PBUIWallpaperOptions persistentDataRepresentation]
  -[PBUIWallpaperOptions isMagnifyEnabled]
  -[PBUIWallpaperOptions supportsRotation]
  -[PBUIWallpaperOptions setSupportsRotation:]


PBUIWallpaperWindowScene : UIWindowScene
 @property  long long wallpaperVariant
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} lockscreenWallpaperContentsRect
 @property  double lockscreenWallpaperAlpha
 @property  double homescreenWallpaperAlpha
 @property  double lockscreenOnlyWallpaperAlpha
 @property  BOOL disallowHomescreenRasterization
 @property  BOOL disallowLockscreenRasterization
 @property  BOOL homescreenWallpaperHidden
 @property  BOOL lockscreenWallpaperHidden
 @property  BOOL wallpaperAnimationSuspended
 @property  BOOL wallpaperRequired
 @property  BOOL homescreenStyleChangesDelayed
 @property  NSString *cachingIdentifier
 @property  PBUIWallpaperWindowSceneStyleTransitionState *homescreenStyleTransitionState
 @property  PBUIWallpaperWindowSceneStyleTransitionState *lockscreenStyleTransitionState
 @property  BOOL liveWallpaperTouchActive
 @property  BOOL liveWallpaperInteractive
 @property  double homescreenMinimumWallpaperScale
 @property  double lockscreenMinimumWallpaperScale
 @property  _UILegibilitySettings *homescreenLegibilitySettings
 @property  _UILegibilitySettings *lockscreenLegibilitySettings
 @property  UIColor *homescreenAverageColor
 @property  UIColor *lockscreenAverageColor
 @property  double homescreenContrast
 @property  double lockscreenContrast
 @property  double homescreenParallaxFactor
 @property  double lockscreenParallaxFactor
 @property  BOOL homescreenParallaxEnabled
 @property  BOOL lockscreenParallaxEnabled
 @property  double homescreenZoomFactor
 @property  double lockscreenZoomFactor
 @property  BOOL homescreenContentStatic
 @property  BOOL lockscreenContentStatic
 @property  BOOL lockscreenContentIsLiveWallpaper
 @property  long long liveWallpaperPlaybackState

  // instance methods
  -[PBUIWallpaperWindowScene .cxx_destruct]
  -[PBUIWallpaperWindowScene cachingIdentifier]
  -[PBUIWallpaperWindowScene wallpaperVariant]
  -[PBUIWallpaperWindowScene lockscreenWallpaperContentsRect]
  -[PBUIWallpaperWindowScene lockscreenWallpaperAlpha]
  -[PBUIWallpaperWindowScene homescreenWallpaperAlpha]
  -[PBUIWallpaperWindowScene lockscreenOnlyWallpaperAlpha]
  -[PBUIWallpaperWindowScene disallowHomescreenRasterization]
  -[PBUIWallpaperWindowScene disallowLockscreenRasterization]
  -[PBUIWallpaperWindowScene wallpaperAnimationSuspended]
  -[PBUIWallpaperWindowScene wallpaperRequired]
  -[PBUIWallpaperWindowScene homescreenStyleChangesDelayed]
  -[PBUIWallpaperWindowScene homescreenStyleTransitionState]
  -[PBUIWallpaperWindowScene lockscreenStyleTransitionState]
  -[PBUIWallpaperWindowScene liveWallpaperTouchActive]
  -[PBUIWallpaperWindowScene liveWallpaperInteractive]
  -[PBUIWallpaperWindowScene homescreenMinimumWallpaperScale]
  -[PBUIWallpaperWindowScene setHomescreenMinimumWallpaperScale:]
  -[PBUIWallpaperWindowScene lockscreenMinimumWallpaperScale]
  -[PBUIWallpaperWindowScene setLockscreenMinimumWallpaperScale:]
  -[PBUIWallpaperWindowScene homescreenLegibilitySettings]
  -[PBUIWallpaperWindowScene setHomescreenLegibilitySettings:]
  -[PBUIWallpaperWindowScene lockscreenLegibilitySettings]
  -[PBUIWallpaperWindowScene setLockscreenLegibilitySettings:]
  -[PBUIWallpaperWindowScene homescreenAverageColor]
  -[PBUIWallpaperWindowScene setHomescreenAverageColor:]
  -[PBUIWallpaperWindowScene lockscreenAverageColor]
  -[PBUIWallpaperWindowScene setLockscreenAverageColor:]
  -[PBUIWallpaperWindowScene homescreenContrast]
  -[PBUIWallpaperWindowScene setHomescreenContrast:]
  -[PBUIWallpaperWindowScene lockscreenContrast]
  -[PBUIWallpaperWindowScene setLockscreenContrast:]
  -[PBUIWallpaperWindowScene homescreenParallaxFactor]
  -[PBUIWallpaperWindowScene setHomescreenParallaxFactor:]
  -[PBUIWallpaperWindowScene lockscreenParallaxFactor]
  -[PBUIWallpaperWindowScene setLockscreenParallaxFactor:]
  -[PBUIWallpaperWindowScene homescreenParallaxEnabled]
  -[PBUIWallpaperWindowScene setHomescreenParallaxEnabled:]
  -[PBUIWallpaperWindowScene lockscreenParallaxEnabled]
  -[PBUIWallpaperWindowScene setLockscreenParallaxEnabled:]
  -[PBUIWallpaperWindowScene homescreenZoomFactor]
  -[PBUIWallpaperWindowScene setHomescreenZoomFactor:]
  -[PBUIWallpaperWindowScene lockscreenZoomFactor]
  -[PBUIWallpaperWindowScene setLockscreenZoomFactor:]
  -[PBUIWallpaperWindowScene isHomescreenContentStatic]
  -[PBUIWallpaperWindowScene setHomescreenContentStatic:]
  -[PBUIWallpaperWindowScene isLockscreenContentStatic]
  -[PBUIWallpaperWindowScene setLockscreenContentStatic:]
  -[PBUIWallpaperWindowScene isLockscreenContentLiveWallpaper]
  -[PBUIWallpaperWindowScene setLockscreenContentIsLiveWallpaper:]
  -[PBUIWallpaperWindowScene liveWallpaperPlaybackState]
  -[PBUIWallpaperWindowScene setLiveWallpaperPlaybackState:]
  -[PBUIWallpaperWindowScene noteWallpaperWillChangeForVariant:]
  -[PBUIWallpaperWindowScene noteWallpaperDidChangeForVariant:]
  -[PBUIWallpaperWindowScene noteWallpaperDidCompleteWallpaperChange]
  -[PBUIWallpaperWindowScene _wallpaperSceneSettings]
  -[PBUIWallpaperWindowScene _wallpaperSceneClientSettings]
  -[PBUIWallpaperWindowScene _updateWallpaperSceneClientSettingsWithBlock:]
  -[PBUIWallpaperWindowScene _updateWallpaperVariant:inAnimationSettings:outAnimationSettings:]
  -[PBUIWallpaperWindowScene _updateLockscreenWallpaperContentsRect:]
  -[PBUIWallpaperWindowScene _updateLockscreenWallpaperAlpha:]
  -[PBUIWallpaperWindowScene _updateHomescreenWallpaperAlpha:]
  -[PBUIWallpaperWindowScene _updateLockscreenOnlyWallpaperAlpha:]
  -[PBUIWallpaperWindowScene _updateDisallowRasterizationForHomescreen:lockscreen:]
  -[PBUIWallpaperWindowScene _updateWallpaperHiddenForHomescreen:lockscreen:]
  -[PBUIWallpaperWindowScene _updateWallpaperAnimationSuspended:]
  -[PBUIWallpaperWindowScene _updateWallpaperRequired:]
  -[PBUIWallpaperWindowScene _updateHomescreenStyleChangesDelayed:]
  -[PBUIWallpaperWindowScene _updateHomescreenStyleTransitionStateTo:from:]
  -[PBUIWallpaperWindowScene _updateLockscreenStyleTransitionStateTo:from:]
  -[PBUIWallpaperWindowScene _updateLiveWallpaperTouchActive:]
  -[PBUIWallpaperWindowScene _updateLiveWallpaperInteractive:]
  -[PBUIWallpaperWindowScene _handleImageSlotRequestAction:]
  -[PBUIWallpaperWindowScene _handleWallpaperEffectImageRequestAction:]
  -[PBUIWallpaperWindowScene _handlePreheatAction:]
  -[PBUIWallpaperWindowScene _handleUpdateAndPrewarmAction:]
  -[PBUIWallpaperWindowScene _handleUpdateLocationsAction:]
  -[PBUIWallpaperWindowScene homescreenWallpaperHidden]
  -[PBUIWallpaperWindowScene lockscreenWallpaperHidden]


PBUIWallpaperWindowSceneVariantSettingsDiffAction : NSObject <_UISceneSettingsDiffAction>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIWallpaperWindowSceneVariantSettingsDiffAction .cxx_destruct]
  -[PBUIWallpaperWindowSceneVariantSettingsDiffAction _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:]
  -[PBUIWallpaperWindowSceneVariantSettingsDiffAction _wallpaperVariantSceneSettingsDiffInspector]


PBUISimpleReplicaPortalSource : NSObject <PBUIReplicaPortalSource>
 @property  NSString *cacheIdentifier
 @property  _UILegibilitySettings *legibilitySettings
 @property  BOOL effectsAreBakedIn
 @property  UIView *targetView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUISimpleReplicaPortalSource targetView]
  -[PBUISimpleReplicaPortalSource .cxx_destruct]
  -[PBUISimpleReplicaPortalSource effectsAreBakedIn]
  -[PBUISimpleReplicaPortalSource setTargetView:]
  -[PBUISimpleReplicaPortalSource setLegibilitySettings:]
  -[PBUISimpleReplicaPortalSource setCacheIdentifier:]
  -[PBUISimpleReplicaPortalSource legibilitySettings]
  -[PBUISimpleReplicaPortalSource cacheIdentifier]
  -[PBUISimpleReplicaPortalSource initWithTargetView:cacheIdentifier:legibilitySettings:effectsAreBakedIn:]
  -[PBUISimpleReplicaPortalSource setEffectsAreBakedIn:]


PBUIPortalReplicaView : UIView <PBUIPosterReplicaView, PBUIWallpaperPositioning>
 @property  BOOL subscribed
 @property  <PBUIPosterReplicaPortalProviding> *provider
 @property  <PBUIReplicaPortalSource> *source
 @property  NSString *reason
 @property  PBUIReplicaDebugView *debugView
 @property  long long effectiveStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL shouldMatchWallpaperPosition
 @property  BOOL fullscreen

  // instance methods
  -[PBUIPortalReplicaView source]
  -[PBUIPortalReplicaView debugView]
  -[PBUIPortalReplicaView effectiveStyle]
  -[PBUIPortalReplicaView dealloc]
  -[PBUIPortalReplicaView shouldMatchWallpaperPosition]
  -[PBUIPortalReplicaView .cxx_destruct]
  -[PBUIPortalReplicaView provider]
  -[PBUIPortalReplicaView reason]
  -[PBUIPortalReplicaView layoutSubviews]
  -[PBUIPortalReplicaView setSubscribed:]
  -[PBUIPortalReplicaView setShouldMatchWallpaperPosition:]
  -[PBUIPortalReplicaView invalidate]
  -[PBUIPortalReplicaView initWithFrame:]
  -[PBUIPortalReplicaView willMoveToWindow:]
  -[PBUIPortalReplicaView setProvider:]
  -[PBUIPortalReplicaView setFullscreen:]
  -[PBUIPortalReplicaView isSubscribed]
  -[PBUIPortalReplicaView setReason:]
  -[PBUIPortalReplicaView didMoveToWindow]
  -[PBUIPortalReplicaView isFullscreen]
  -[PBUIPortalReplicaView setNeedsSourceUpdate]
  -[PBUIPortalReplicaView setNeedsProviderUpdate]


PBUIWallpaperDidChangeAction : BSAction
 @property  long long variant

  // instance methods
  -[PBUIWallpaperDidChangeAction variant]
  -[PBUIWallpaperDidChangeAction valueDescriptionForFlag:object:ofSetting:]
  -[PBUIWallpaperDidChangeAction keyDescriptionForSetting:]
  -[PBUIWallpaperDidChangeAction initWithVariant:]


PBUIWallpaperRemoteViewController : UIViewController <BSDescriptionProviding, FBSceneDelegate, FBSceneLayerManagerObserver, PBUIWallpaperConfigurationManagerDelegate, PBUIWallpaperViewDelegate, PBUIFakeBlurImageProviding, PBUIFakeBlurViewRegistering, PBUIRemoteIrisWallpaperPlayerDelegate, PBUIWallpaperPresenting, PBUIWallpaperLegibilityProviding>
 @property  NSString *cachingIdentifier
 @property  PBUIWallpaperConfigurationManager *wallpaperConfigurationManager
 @property  <PBUIWallpaperReachabilityCoordinating> *reachabilityCoordinator
 @property  long long variant
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PBUIWallpaperPresentingDelegate> *wallpaperPresentingDelegate
 @property  {?=qqd} currentHomescreenStyleTransitionState
 @property  long long activeVariant
 @property  double minimumHomescreenWallpaperScale
 @property  double homescreenWallpaperScale
 @property  double minimumLockscreenWallpaperScale
 @property  double lockscreenWallpaperScale

  // instance methods
  -[PBUIWallpaperRemoteViewController requireWallpaperWithReason:]
  -[PBUIWallpaperRemoteViewController requireWallpaperRasterizationWithReason:]
  -[PBUIWallpaperRemoteViewController averageColorForVariant:]
  -[PBUIWallpaperRemoteViewController _addStateCaptureHandlers]
  -[PBUIWallpaperRemoteViewController lockscreenWallpaperScale]
  -[PBUIWallpaperRemoteViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PBUIWallpaperRemoteViewController setActiveVariant:]
  -[PBUIWallpaperRemoteViewController activeVariant]
  -[PBUIWallpaperRemoteViewController legibilitySettingsForVariant:]
  -[PBUIWallpaperRemoteViewController scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:]
  -[PBUIWallpaperRemoteViewController irisWallpaperPlayer]
  -[PBUIWallpaperRemoteViewController averageColorInRect:forVariant:]
  -[PBUIWallpaperRemoteViewController _canShowWhileLocked]
  -[PBUIWallpaperRemoteViewController setActiveVariant:withOutAnimationFactory:inAnimationFactory:completion:]
  -[PBUIWallpaperRemoteViewController updateImageProviderView:withImage:]
  -[PBUIWallpaperRemoteViewController setWallpaperConfigurationManager:]
  -[PBUIWallpaperRemoteViewController cancelInProcessAnimations]
  -[PBUIWallpaperRemoteViewController noteWillAnimateToInterfaceOrientation:duration:]
  -[PBUIWallpaperRemoteViewController preheatWallpaperForVariant:]
  -[PBUIWallpaperRemoteViewController sceneDidDeactivate:withError:]
  -[PBUIWallpaperRemoteViewController setWallpaperStyle:forPriority:forVariant:withAnimationFactory:]
  -[PBUIWallpaperRemoteViewController suspendWallpaperAnimationForReason:]
  -[PBUIWallpaperRemoteViewController variant]
  -[PBUIWallpaperRemoteViewController _wallpaperScaleForVariant:]
  -[PBUIWallpaperRemoteViewController _sceneSettings]
  -[PBUIWallpaperRemoteViewController descriptionWithMultilinePrefix:]
  -[PBUIWallpaperRemoteViewController setReachabilityCoordinator:]
  -[PBUIWallpaperRemoteViewController zoomFactorForVariant:]
  -[PBUIWallpaperRemoteViewController averageColorInRect:forVariant:withSmudgeRadius:]
  -[PBUIWallpaperRemoteViewController descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperRemoteViewController initWithNibName:bundle:]
  -[PBUIWallpaperRemoteViewController updateWallpaperForLocations:wallpaperMode:withCompletion:]
  -[PBUIWallpaperRemoteViewController viewWillLayoutSubviews]
  -[PBUIWallpaperRemoteViewController setHomescreenWallpaperScale:withAnimationFactory:]
  -[PBUIWallpaperRemoteViewController removeObserver:forVariant:]
  -[PBUIWallpaperRemoteViewController dealloc]
  -[PBUIWallpaperRemoteViewController _updateFallbackView]
  -[PBUIWallpaperRemoteViewController setVariant:]
  -[PBUIWallpaperRemoteViewController noteDidRotateFromInterfaceOrientation:]
  -[PBUIWallpaperRemoteViewController .cxx_destruct]
  -[PBUIWallpaperRemoteViewController updateIrisWallpaperForStaticMode]
  -[PBUIWallpaperRemoteViewController viewDidLoad]
  -[PBUIWallpaperRemoteViewController setWallpaperHidden:variant:reason:]
  -[PBUIWallpaperRemoteViewController viewWillAppear:]
  -[PBUIWallpaperRemoteViewController _updateWallpaperScaleWithAnimationFactory:]
  -[PBUIWallpaperRemoteViewController contrastForVariant:]
  -[PBUIWallpaperRemoteViewController succinctDescription]
  -[PBUIWallpaperRemoteViewController parallaxFactorForVariant:]
  -[PBUIWallpaperRemoteViewController imageForWallpaperStyle:variant:traitCollection:]
  -[PBUIWallpaperRemoteViewController removeWallpaperStyleForPriority:forVariant:withAnimationFactory:]
  -[PBUIWallpaperRemoteViewController homescreenWallpaperScale]
  -[PBUIWallpaperRemoteViewController shouldAutorotate]
  -[PBUIWallpaperRemoteViewController _registerFakeBlurView:]
  -[PBUIWallpaperRemoteViewController wallpaperConfigurationManager:didChangeWallpaperConfigurationForVariants:]
  -[PBUIWallpaperRemoteViewController parallaxEnabledForVariant:]
  -[PBUIWallpaperRemoteViewController updateWallpaperForLocations:withCompletion:]
  -[PBUIWallpaperRemoteViewController currentHomescreenStyleTransitionState]
  -[PBUIWallpaperRemoteViewController addObserver:forVariant:]
  -[PBUIWallpaperRemoteViewController wallpaperPresentingDelegate]
  -[PBUIWallpaperRemoteViewController reachabilityCoordinator]
  -[PBUIWallpaperRemoteViewController setWallpaperPresentingDelegate:]
  -[PBUIWallpaperRemoteViewController supportedInterfaceOrientations]
  -[PBUIWallpaperRemoteViewController updateIrisWallpaperForInteractiveMode]
  -[PBUIWallpaperRemoteViewController _wallpaperScaleAssertionForVariant:scale:]
  -[PBUIWallpaperRemoteViewController scene:didReceiveActions:]
  -[PBUIWallpaperRemoteViewController viewDidDisappear:]
  -[PBUIWallpaperRemoteViewController setWallpaperStyleTransitionState:forPriority:forVariant:withAnimationFactory:]
  -[PBUIWallpaperRemoteViewController wallpaperView:wallpaperConfigurationIncludingValueTypes:]
  -[PBUIWallpaperRemoteViewController setLockscreenWallpaperScale:withAnimationFactory:]
  -[PBUIWallpaperRemoteViewController succinctDescriptionBuilder]
  -[PBUIWallpaperRemoteViewController contrastInRect:forVariant:]
  -[PBUIWallpaperRemoteViewController cachingIdentifier]
  -[PBUIWallpaperRemoteViewController minimumLockscreenWallpaperScale]
  -[PBUIWallpaperRemoteViewController wallpaperConfigurationManager]
  -[PBUIWallpaperRemoteViewController traitCollectionDidChange:]
  -[PBUIWallpaperRemoteViewController newFakeBlurViewForVariant:style:transformOptions:]
  -[PBUIWallpaperRemoteViewController _unregisterFakeBlurView:]
  -[PBUIWallpaperRemoteViewController newImageProviderView]
  -[PBUIWallpaperRemoteViewController minimumHomescreenWallpaperScale]
  -[PBUIWallpaperRemoteViewController setLockscreenOnlyWallpaperAlpha:]
  -[PBUIWallpaperRemoteViewController _setupScene]
  -[PBUIWallpaperRemoteViewController remoteIrisWallpaperPlayer:touchActiveChanged:]
  -[PBUIWallpaperRemoteViewController setCachingIdentifier:]
  -[PBUIWallpaperRemoteViewController beginRequiringWithReason:]
  -[PBUIWallpaperRemoteViewController setAlpha:forWallpaperVariant:]
  -[PBUIWallpaperRemoteViewController setLockscreenWallpaperContentsRect:]
  -[PBUIWallpaperRemoteViewController setLockscreenWallpaperScale:]
  -[PBUIWallpaperRemoteViewController setDisallowsRasterization:forVariant:withReason:]
  -[PBUIWallpaperRemoteViewController beginDelayingHomescreenStyleChangesForReason:]
  -[PBUIWallpaperRemoteViewController endDelayingHomescreenStyleChangesForReason:animationFactory:]
  -[PBUIWallpaperRemoteViewController _performWithLiveScene:]
  -[PBUIWallpaperRemoteViewController _updateWallpaperSceneSettingsWithTransitionBlock:]
  -[PBUIWallpaperRemoteViewController _updateWallpaperSceneSettingsWithBlock:]
  -[PBUIWallpaperRemoteViewController _updateWallpaperSceneSettingsWithBlock:postUpdateBlock:]
  -[PBUIWallpaperRemoteViewController _setupSceneWithCompletion:]
  -[PBUIWallpaperRemoteViewController _sceneClientSettings]
  -[PBUIWallpaperRemoteViewController _notifyAllObserversOfNewWallpaperScene]
  -[PBUIWallpaperRemoteViewController _observersForVariant:]
  -[PBUIWallpaperRemoteViewController _disallowRasterizationReasonsForVariant:]
  -[PBUIWallpaperRemoteViewController _hideWallpaperReasonsForVariant:]
  -[PBUIWallpaperRemoteViewController _simpleAssertionWithReasonsSet:identifier:reason:updater:]
  -[PBUIWallpaperRemoteViewController _blurViewsForVariant:]
  -[PBUIWallpaperRemoteViewController _reconfigureBlurViewsForVariant:]
  -[PBUIWallpaperRemoteViewController _updateBlurViewsForVariant:]
  -[PBUIWallpaperRemoteViewController _cacheBlurImageForVariant:requestedStyle:actualStyle:traitCollection:image:imageURL:]
  -[PBUIWallpaperRemoteViewController _cachedBlurAssetForVariant:requestedStyle:traitCollection:]
  -[PBUIWallpaperRemoteViewController _invalidateBlurCacheForVariant:]
  -[PBUIWallpaperRemoteViewController _blurImageFromURL:]
  -[PBUIWallpaperRemoteViewController _effectiveSceneMode]
  -[PBUIWallpaperRemoteViewController _modifySceneSettings:forSceneMode:]
  -[PBUIWallpaperRemoteViewController _scheduleSceneDeactivation]
  -[PBUIWallpaperRemoteViewController _cancelSceneDeactivation]
  -[PBUIWallpaperRemoteViewController _updateSceneMode]
  -[PBUIWallpaperRemoteViewController _updateSceneModeWithCompletion:]
  -[PBUIWallpaperRemoteViewController _acquireSceneModeAssertionForReason:sceneMode:]
  -[PBUIWallpaperRemoteViewController _acquireSceneModeAssertionForReason:sceneMode:completion:]


_PBUIWallpaperRemoteViewControllerSceneModeAssertion : BSSimpleAssertion
 @property  long long sceneMode

  // instance methods
  -[_PBUIWallpaperRemoteViewControllerSceneModeAssertion descriptionBuilderWithMultilinePrefix:]
  -[_PBUIWallpaperRemoteViewControllerSceneModeAssertion initWithIdentifier:forReason:sceneMode:invalidationBlock:]
  -[_PBUIWallpaperRemoteViewControllerSceneModeAssertion sceneMode]


PBUIFakeBlurConfiguration : NSObject <BSDescriptionProviding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIFakeBlurConfiguration descriptionWithMultilinePrefix:]
  -[PBUIFakeBlurConfiguration descriptionBuilderWithMultilinePrefix:]
  -[PBUIFakeBlurConfiguration .cxx_destruct]
  -[PBUIFakeBlurConfiguration succinctDescription]
  -[PBUIFakeBlurConfiguration copyWithZone:]
  -[PBUIFakeBlurConfiguration succinctDescriptionBuilder]
  -[PBUIFakeBlurConfiguration isEqual:]


PBUIFakeBlurAsset : NSObject <BSDescriptionProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIFakeBlurAsset descriptionWithMultilinePrefix:]
  -[PBUIFakeBlurAsset descriptionBuilderWithMultilinePrefix:]
  -[PBUIFakeBlurAsset .cxx_destruct]
  -[PBUIFakeBlurAsset succinctDescription]
  -[PBUIFakeBlurAsset succinctDescriptionBuilder]


PBUIParallaxSettings : PTSettings
 @property  BOOL slideEnabled
 @property  long long slideDirectionX
 @property  long long slideDirectionY
 @property  double slidePixelsX
 @property  double slidePixelsY
 @property  BOOL tiltEnabled
 @property  long long tiltDirectionX
 @property  long long tiltDirectionY
 @property  double tiltDegreesX
 @property  double tiltDegreesY
 @property  long long distanceFromScreen
 @property  BOOL increaseEnabled
 @property  double slideIncreaseX
 @property  double slideIncreaseY

  // class methods
  +[PBUIParallaxSettings settingsControllerModule]

  // instance methods
  -[PBUIParallaxSettings setDefaultValues]
  -[PBUIParallaxSettings setTiltEnabled:]
  -[PBUIParallaxSettings slideEnabled]
  -[PBUIParallaxSettings setSlideEnabled:]
  -[PBUIParallaxSettings slideDirectionX]
  -[PBUIParallaxSettings setSlideDirectionX:]
  -[PBUIParallaxSettings slideDirectionY]
  -[PBUIParallaxSettings setSlideDirectionY:]
  -[PBUIParallaxSettings slidePixelsX]
  -[PBUIParallaxSettings setSlidePixelsX:]
  -[PBUIParallaxSettings slidePixelsY]
  -[PBUIParallaxSettings setSlidePixelsY:]
  -[PBUIParallaxSettings tiltEnabled]
  -[PBUIParallaxSettings tiltDirectionX]
  -[PBUIParallaxSettings setTiltDirectionX:]
  -[PBUIParallaxSettings tiltDirectionY]
  -[PBUIParallaxSettings setTiltDirectionY:]
  -[PBUIParallaxSettings tiltDegreesX]
  -[PBUIParallaxSettings setTiltDegreesX:]
  -[PBUIParallaxSettings tiltDegreesY]
  -[PBUIParallaxSettings setTiltDegreesY:]
  -[PBUIParallaxSettings distanceFromScreen]
  -[PBUIParallaxSettings setDistanceFromScreen:]
  -[PBUIParallaxSettings increaseEnabled]
  -[PBUIParallaxSettings setIncreaseEnabled:]
  -[PBUIParallaxSettings slideIncreaseX]
  -[PBUIParallaxSettings setSlideIncreaseX:]
  -[PBUIParallaxSettings slideIncreaseY]
  -[PBUIParallaxSettings setSlideIncreaseY:]


PBUIWallpaperParallaxSettings : PBUIParallaxSettings
 @property  double overhangX
 @property  double overhangY
 @property  double perspectiveTransform

  // class methods
  +[PBUIWallpaperParallaxSettings settingsControllerModule]
  +[PBUIWallpaperParallaxSettings _currentDeviceType]
  +[PBUIWallpaperParallaxSettings _requiredOverhangSizeForCurrentDevice]
  +[PBUIWallpaperParallaxSettings _requiredOverhangSizeForDeviceType:]
  +[PBUIWallpaperParallaxSettings bestWallpaperSizeForParallaxFactor:]
  +[PBUIWallpaperParallaxSettings bestWallpaperSizeForParallaxFactor:portrait:]
  +[PBUIWallpaperParallaxSettings bestWallpaperSizeForWallpaperSize:deviceType:parallaxFactor:portrait:]
  +[PBUIWallpaperParallaxSettings minimumWallpaperSizeForCurrentDevice]
  +[PBUIWallpaperParallaxSettings minimumWallpaperSizeForWallpaperSize:deviceType:]
  +[PBUIWallpaperParallaxSettings overhangSizeForCurrentDevice]
  +[PBUIWallpaperParallaxSettings overhangSizeForDeviceType:]
  +[PBUIWallpaperParallaxSettings minimumZoomScaleForWallpaperSize:parallaxFactor:deviceType:]
  +[PBUIWallpaperParallaxSettings minimumZoomScaleForCurrentDeviceForWallpaperSize:parallaxFactor:]

  // instance methods
  -[PBUIWallpaperParallaxSettings overhangY]
  -[PBUIWallpaperParallaxSettings setOverhangY:]
  -[PBUIWallpaperParallaxSettings setPerspectiveTransform:]
  -[PBUIWallpaperParallaxSettings setDefaultValues]
  -[PBUIWallpaperParallaxSettings overhangX]
  -[PBUIWallpaperParallaxSettings perspectiveTransform]
  -[PBUIWallpaperParallaxSettings setOverhangX:]


PBUIPosterWallpaperMigrationInfo : NSObject
 @property  BOOL pairingType
 @property  BOOL lockProvider
 @property  BOOL homeProvider

  // instance methods
  -[PBUIPosterWallpaperMigrationInfo pairingType]
  -[PBUIPosterWallpaperMigrationInfo _initWithPairingType:lockProvider:homeProvider:]
  -[PBUIPosterWallpaperMigrationInfo lockProvider]
  -[PBUIPosterWallpaperMigrationInfo homeProvider]


PBUIWallpaperEffectConfiguration : NSObject <NSCopying, BSDescriptionProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIWallpaperEffectConfiguration descriptionWithMultilinePrefix:]
  -[PBUIWallpaperEffectConfiguration descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperEffectConfiguration succinctDescription]
  -[PBUIWallpaperEffectConfiguration copyWithZone:]
  -[PBUIWallpaperEffectConfiguration succinctDescriptionBuilder]
  -[PBUIWallpaperEffectConfiguration isEqual:]


PBUIMaterialCompositor : NSObject <PBUIWallpaperEffectCompositor>
 @property  PBUICARenderer *renderer
 @property  double downsampleFactor

  // instance methods
  -[PBUIMaterialCompositor .cxx_destruct]
  -[PBUIMaterialCompositor renderer]
  -[PBUIMaterialCompositor setRenderer:]
  -[PBUIMaterialCompositor init]
  -[PBUIMaterialCompositor applyEffect:toImage:]
  -[PBUIMaterialCompositor downsampleFactor]
  -[PBUIMaterialCompositor setDownsampleFactor:]


PBUIBackdropCompositor : NSObject <PBUIWallpaperEffectCompositor>
  // instance methods
  -[PBUIBackdropCompositor init]
  -[PBUIBackdropCompositor applyEffect:toImage:]


PBUIWallpaperWindowSceneClientSettingsDiffInspector : UIApplicationSceneClientSettingsDiffInspector
  // instance methods
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector _observeOtherSetting:withBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeLiveWallpaperPlaybackStateWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenContentStaticWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenContrastWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenParallaxFactorWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenContentLiveWallpaperWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenParallaxEnabledWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenMinimumWallpaperScaleWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenParallaxFactorWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenLegibilitySettingsWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenContentStaticWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenParallaxEnabledWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenZoomFactorWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenLegibilitySettingsWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenMinimumWallpaperScaleWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenZoomFactorWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenContrastWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenAverageColorWithBlock:]
  -[PBUIWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenAverageColorWithBlock:]


PBUIImageEncoder : NSObject
 @property  NSURL *url
 @property  PBUIImageOnDiskFormat *format

  // instance methods
  -[PBUIImageEncoder createUIImageWithError:]
  -[PBUIImageEncoder saveImage:error:]
  -[PBUIImageEncoder setUrl:]
  -[PBUIImageEncoder writeThenReadBackImage:error:]
  -[PBUIImageEncoder .cxx_destruct]
  -[PBUIImageEncoder _transformOptions:forImageSize:]
  -[PBUIImageEncoder saveUIImage:error:]
  -[PBUIImageEncoder setFormat:]
  -[PBUIImageEncoder format]
  -[PBUIImageEncoder url]
  -[PBUIImageEncoder initWithURL:format:]


PBUIImageOnDiskFormat : NSObject <NSCopying>
 @property  NSString *filenameExtension
 @property  NSString *typeIdentifier
 @property  NSDictionary *destinationOptions
 @property  NSDictionary *addImageOptions

  // class methods
  +[PBUIImageOnDiskFormat atxWithBlockSize:]
  +[PBUIImageOnDiskFormat png]
  +[PBUIImageOnDiskFormat defaultATX]

  // instance methods
  -[PBUIImageOnDiskFormat typeIdentifier]
  -[PBUIImageOnDiskFormat initWithTypeIdentifier:filenameExtension:destinationOptions:addImageOptions:]
  -[PBUIImageOnDiskFormat .cxx_destruct]
  -[PBUIImageOnDiskFormat addImageOptions]
  -[PBUIImageOnDiskFormat copyWithZone:]
  -[PBUIImageOnDiskFormat destinationOptions]
  -[PBUIImageOnDiskFormat filenameExtension]
  -[PBUIImageOnDiskFormat formatByAppendingDestinationOptions:addImageOptions:]


PBUIBakedEffectSnapshotSource : NSObject <PBUIReplicaSnapshotSource, NSCopying, BSDescriptionProviding>
 @property  NSString *cacheIdentifier
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIImage *snapshot
 @property  PBUIWallpaperEffectConfiguration *effectConfiguration
 @property  BOOL effectsAreBakedIn
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIBakedEffectSnapshotSource descriptionWithMultilinePrefix:]
  -[PBUIBakedEffectSnapshotSource descriptionBuilderWithMultilinePrefix:]
  -[PBUIBakedEffectSnapshotSource setSnapshot:]
  -[PBUIBakedEffectSnapshotSource snapshot]
  -[PBUIBakedEffectSnapshotSource .cxx_destruct]
  -[PBUIBakedEffectSnapshotSource effectsAreBakedIn]
  -[PBUIBakedEffectSnapshotSource succinctDescription]
  -[PBUIBakedEffectSnapshotSource setLegibilitySettings:]
  -[PBUIBakedEffectSnapshotSource setCacheIdentifier:]
  -[PBUIBakedEffectSnapshotSource copyWithZone:]
  -[PBUIBakedEffectSnapshotSource succinctDescriptionBuilder]
  -[PBUIBakedEffectSnapshotSource legibilitySettings]
  -[PBUIBakedEffectSnapshotSource cacheIdentifier]
  -[PBUIBakedEffectSnapshotSource initWithSnapshotSource:]
  -[PBUIBakedEffectSnapshotSource effectConfiguration]
  -[PBUIBakedEffectSnapshotSource setEffectConfiguration:]


PBUICachedSnapshotEffectProvider : NSObject <PBUIPosterReplicaSourceObserver, PBUIPosterReplicaSnapshotProviding, BSInvalidatable>
 @property  long long effectiveStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUICachedSnapshotEffectProvider effectiveStyle]
  -[PBUICachedSnapshotEffectProvider dealloc]
  -[PBUICachedSnapshotEffectProvider .cxx_destruct]
  -[PBUICachedSnapshotEffectProvider invalidate]
  -[PBUICachedSnapshotEffectProvider setNeedsSourceUpdate]
  -[PBUICachedSnapshotEffectProvider registerSnapshotSourceObserver:]
  -[PBUICachedSnapshotEffectProvider snapshotSourceForObserver:]
  -[PBUICachedSnapshotEffectProvider initForSnapshotProvider:cache:]
  -[PBUICachedSnapshotEffectProvider initForSnapshotProvider:cacheIdentifier:]


PBUIWallpaperImage : UIImage
 @property  NSURL *wallpaperFileURL

  // class methods
  +[PBUIWallpaperImage supportsSecureCoding]

  // instance methods
  -[PBUIWallpaperImage encodeWithCoder:]
  -[PBUIWallpaperImage .cxx_destruct]
  -[PBUIWallpaperImage isEqual:]
  -[PBUIWallpaperImage initWithCoder:]
  -[PBUIWallpaperImage initWithFlatColor:]
  -[PBUIWallpaperImage initWithCGImage:scale:orientation:wallpaperFileURL:]
  -[PBUIWallpaperImage initWithFlatColor:size:scale:]
  -[PBUIWallpaperImage wallpaperFileURL]


PBUIWallpaperWindowSceneSettingsDiffAction : NSObject <_UISceneSettingsDiffAction>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIWallpaperWindowSceneSettingsDiffAction .cxx_destruct]
  -[PBUIWallpaperWindowSceneSettingsDiffAction _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:]
  -[PBUIWallpaperWindowSceneSettingsDiffAction _wallpaperSceneSettingsDiffInspector]


PBUIWallpaperDefaultsWrapper : NSObject
 @property  double parallaxFactor
 @property  double zoomScale
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  BOOL supportsCropping
 @property  BOOL magnifyEnabled
 @property  BOOL portrait
 @property  NSString *wallpaperName
 @property  NSData *imageHashData
 @property  long long wallpaperMode
 @property  NSDictionary *wallpaperKitData
 @property  BOOL hasVideo
 @property  double stillTimeInVideo
 @property  NSString *wallpaperIdentifier
 @property  NSDictionary *wallpaperOptions
 @property  BOOL wallpaperWasUserSet
 @property  NSData *colorData
 @property  NSString *colorName
 @property  NSData *gradientData

  // class methods
  +[PBUIWallpaperDefaultsWrapper lockScreenWrapperForLegacyDefaults:]
  +[PBUIWallpaperDefaultsWrapper homeScreenWrapperForLegacyDefaults:]

  // instance methods
  -[PBUIWallpaperDefaultsWrapper parallaxFactor]
  -[PBUIWallpaperDefaultsWrapper wallpaperMode]
  -[PBUIWallpaperDefaultsWrapper zoomScale]
  -[PBUIWallpaperDefaultsWrapper setParallaxFactor:]
  -[PBUIWallpaperDefaultsWrapper cropRect]
  -[PBUIWallpaperDefaultsWrapper wallpaperName]
  -[PBUIWallpaperDefaultsWrapper setWallpaperOptions:]
  -[PBUIWallpaperDefaultsWrapper setZoomScale:]
  -[PBUIWallpaperDefaultsWrapper imageHashData]
  -[PBUIWallpaperDefaultsWrapper stillTimeInVideo]
  -[PBUIWallpaperDefaultsWrapper portrait]
  -[PBUIWallpaperDefaultsWrapper wallpaperWasUserSet]
  -[PBUIWallpaperDefaultsWrapper colorData]
  -[PBUIWallpaperDefaultsWrapper setImageHashData:]
  -[PBUIWallpaperDefaultsWrapper .cxx_destruct]
  -[PBUIWallpaperDefaultsWrapper setMagnifyEnabled:]
  -[PBUIWallpaperDefaultsWrapper hasVideo]
  -[PBUIWallpaperDefaultsWrapper setWallpaperWasUserSet:]
  -[PBUIWallpaperDefaultsWrapper wallpaperIdentifier]
  -[PBUIWallpaperDefaultsWrapper setColorData:]
  -[PBUIWallpaperDefaultsWrapper setHasVideo:]
  -[PBUIWallpaperDefaultsWrapper setWallpaperName:]
  -[PBUIWallpaperDefaultsWrapper wallpaperDefaultsDict]
  -[PBUIWallpaperDefaultsWrapper setWallpaperIdentifier:]
  -[PBUIWallpaperDefaultsWrapper initWithWallpaperDefaultsDict:]
  -[PBUIWallpaperDefaultsWrapper gradientData]
  -[PBUIWallpaperDefaultsWrapper setWallpaperMode:]
  -[PBUIWallpaperDefaultsWrapper setStillTimeInVideo:]
  -[PBUIWallpaperDefaultsWrapper supportsCropping]
  -[PBUIWallpaperDefaultsWrapper magnifyEnabled]
  -[PBUIWallpaperDefaultsWrapper colorName]
  -[PBUIWallpaperDefaultsWrapper wallpaperKitData]
  -[PBUIWallpaperDefaultsWrapper setWallpaperKitData:]
  -[PBUIWallpaperDefaultsWrapper wallpaperOptions]
  -[PBUIWallpaperDefaultsWrapper setPortrait:]
  -[PBUIWallpaperDefaultsWrapper setColorName:]
  -[PBUIWallpaperDefaultsWrapper setGradientData:]
  -[PBUIWallpaperDefaultsWrapper setSupportsCropping:]
  -[PBUIWallpaperDefaultsWrapper setCropRect:]


PBUIWallpaperGradient : NSObject <NSCopying, NSSecureCoding, BSDescriptionProviding>
 @property  NSArray *colors
 @property  NSArray *locations
 @property  {CGPoint=dd} startPoint
 @property  {CGPoint=dd} endPoint
 @property  NSString *type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBUIWallpaperGradient supportsSecureCoding]

  // instance methods
  -[PBUIWallpaperGradient setEndPoint:]
  -[PBUIWallpaperGradient colors]
  -[PBUIWallpaperGradient locations]
  -[PBUIWallpaperGradient setColors:]
  -[PBUIWallpaperGradient startPoint]
  -[PBUIWallpaperGradient descriptionWithMultilinePrefix:]
  -[PBUIWallpaperGradient encodeWithCoder:]
  -[PBUIWallpaperGradient setStartPoint:]
  -[PBUIWallpaperGradient type]
  -[PBUIWallpaperGradient descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperGradient setLocations:]
  -[PBUIWallpaperGradient .cxx_destruct]
  -[PBUIWallpaperGradient succinctDescription]
  -[PBUIWallpaperGradient setType:]
  -[PBUIWallpaperGradient copyWithZone:]
  -[PBUIWallpaperGradient succinctDescriptionBuilder]
  -[PBUIWallpaperGradient isEqual:]
  -[PBUIWallpaperGradient init]
  -[PBUIWallpaperGradient initWithCoder:]
  -[PBUIWallpaperGradient endPoint]
  -[PBUIWallpaperGradient configureLayer:]
  -[PBUIWallpaperGradient cgColors]
  -[PBUIWallpaperGradient copyCGGradient]


PBUIWallpaperView : UIView <PTSettingsKeyObserver, PBUILegibilitySettingsProvider>
 @property  UIImage *untreatedWallpaperImage
 @property  NSString *cacheGroup
 @property  NSString *variantCacheIdentifier
 @property  NSString *cacheUniqueIdentifier
 @property  <PBUIWallpaperViewInternalObserver> *internalObserver
 @property  BOOL needsImmediateLayoutBeforeRotation
 @property  UIView *contentView
 @property  long long variant
 @property  long long wallpaperType
 @property  long long wallpaperMode
 @property  BOOL needsWallpaperDimmingTreatment
 @property  <PBUIWallpaperViewDelegate> *wallpaperDelegate
 @property  UIImage *wallpaperImage
 @property  double zoomFactor
 @property  BOOL parallaxEnabled
 @property  double parallaxFactor
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  double cropZoomScale
 @property  BOOL supportsCropping
 @property  BOOL continuousColorSamplingEnabled
 @property  BOOL wallpaperAnimationEnabled
 @property  BOOL rotating
 @property  NSString *wallpaperName
 @property  BOOL hasVideo
 @property  BOOL contentStatic
 @property  BOOL handlesInactiveAppearanceTreatment
 @property  BOOL sharesContentsAcrossVariants
 @property  BOOL hasContentOutsideVisibleBounds
 @property  unsigned long transformOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UILegibilitySettings *legibilitySettings
 @property  <PBUILegibilitySettingsProviderDelegate> *delegate

  // class methods
  +[PBUIWallpaperView allowsParallax]
  +[PBUIWallpaperView _shouldScaleForParallax]
  +[PBUIWallpaperView wallpaperViewClassForConfiguration:]
  +[PBUIWallpaperView _allowsRasterization]
  +[PBUIWallpaperView wallpaperViewClassForWallpaperType:]

  // instance methods
  -[PBUIWallpaperView wallpaperDelegate]
  -[PBUIWallpaperView parallaxFactor]
  -[PBUIWallpaperView untreatedWallpaperImage]
  -[PBUIWallpaperView _endDisallowRasterizationBlock]
  -[PBUIWallpaperView _displayedImage]
  -[PBUIWallpaperView blurredImage]
  -[PBUIWallpaperView _isParallaxActive]
  -[PBUIWallpaperView _beginDisallowRasterizationBlock]
  -[PBUIWallpaperView wallpaperMode]
  -[PBUIWallpaperView _isVisible]
  -[PBUIWallpaperView _stopGeneratingBlurredImages]
  -[PBUIWallpaperView _handleVisibilityChange]
  -[PBUIWallpaperView _updateContentViewScale]
  -[PBUIWallpaperView setSharesContentsAcrossVariants:]
  -[PBUIWallpaperView contentView]
  -[PBUIWallpaperView _fallbackImageWithOriginalSize:]
  -[PBUIWallpaperView _blurredImageURL]
  -[PBUIWallpaperView variantCacheIdentifier]
  -[PBUIWallpaperView wallpaperType]
  -[PBUIWallpaperView prepareToDisappear]
  -[PBUIWallpaperView setContentsRect:]
  -[PBUIWallpaperView setInternalObserver:]
  -[PBUIWallpaperView setParallaxFactor:]
  -[PBUIWallpaperView cacheGroup]
  -[PBUIWallpaperView _contrastInContentViewRect:contrastWithinBoxes:contrastBetweenBoxes:]
  -[PBUIWallpaperView setParallaxEnabled:]
  -[PBUIWallpaperView blurredImageURL]
  -[PBUIWallpaperView setUntreatedWallpaperImage:]
  -[PBUIWallpaperView _updateScaleFactor]
  -[PBUIWallpaperView preheatImageData]
  -[PBUIWallpaperView initWithFrame:configuration:variant:cacheGroup:delegate:options:]
  -[PBUIWallpaperView _updateRasterizationState]
  -[PBUIWallpaperView setTransformOptions:]
  -[PBUIWallpaperView cacheUniqueIdentifier]
  -[PBUIWallpaperView _generateImageFromImage:forBackdropParameters:includeTint:traitCollection:]
  -[PBUIWallpaperView averageColorInRect:withSmudgeRadius:]
  -[PBUIWallpaperView wallpaperAnimationEnabled]
  -[PBUIWallpaperView _needsFallbackImageForBackdropGeneratedImage:]
  -[PBUIWallpaperView prepareToAppear]
  -[PBUIWallpaperView setWallpaperAnimationEnabled:]
  -[PBUIWallpaperView isContentStatic]
  -[PBUIWallpaperView imageURLForBackdropParameters:includeTint:overrideTraitCollection:]
  -[PBUIWallpaperView setWallpaperDelegate:]
  -[PBUIWallpaperView hasContentOutsideVisibleBounds]
  -[PBUIWallpaperView updateLegibilitySettingsForAverageColor:]
  -[PBUIWallpaperView cropRect]
  -[PBUIWallpaperView isDisplayingWallpaperWithConfiguration:forVariant:]
  -[PBUIWallpaperView _notifyBlursInvalidated]
  -[PBUIWallpaperView contrastInRect:contrastWithinBoxes:contrastBetweenBoxes:]
  -[PBUIWallpaperView handlesInactiveAppearanceTreatment]
  -[PBUIWallpaperView _isParallaxMotionEnabled]
  -[PBUIWallpaperView snapshotImageURL]
  -[PBUIWallpaperView wallpaperName]
  -[PBUIWallpaperView settings:changedValueForKey:]
  -[PBUIWallpaperView parallaxEnabled]
  -[PBUIWallpaperView needsImmediateLayoutBeforeRotation]
  -[PBUIWallpaperView _averageColorInContentViewRect:smudgeRadius:]
  -[PBUIWallpaperView _updateLegibilitySettingsForAverageColor:force:notify:]
  -[PBUIWallpaperView legibilitySettingsDidChange]
  -[PBUIWallpaperView sharesContentsAcrossVariants]
  -[PBUIWallpaperView setZoomFactor:withAnimationFactory:]
  -[PBUIWallpaperView setGeneratesBlurredImages:]
  -[PBUIWallpaperView setCropRect:zoomScale:]
  -[PBUIWallpaperView _imageURLForBackdropParameters:includeTint:overrideTraitCollection:]
  -[PBUIWallpaperView cropZoomScale]
  -[PBUIWallpaperView resetLegibilitySettingsForAverageColor:]
  -[PBUIWallpaperView continuousColorSamplingEnabled]
  -[PBUIWallpaperView setVariant:withAnimationFactory:]
  -[PBUIWallpaperView wallpaperImage]
  -[PBUIWallpaperView contentScaleFactor]
  -[PBUIWallpaperView _removeParallax]
  -[PBUIWallpaperView internalObserver]
  -[PBUIWallpaperView _addParallax]
  -[PBUIWallpaperView _dontUseShadow]
  -[PBUIWallpaperView _blurredImage]
  -[PBUIWallpaperView _startGeneratingBlurredImages]
  -[PBUIWallpaperView transformOptions]
  -[PBUIWallpaperView contrastInRect:]
  -[PBUIWallpaperView _handleVariantChange]
  -[PBUIWallpaperView _setLegibilitySettings:notify:]
  -[PBUIWallpaperView _updateParallax]
  -[PBUIWallpaperView setDelegate:]
  -[PBUIWallpaperView zoomFactor]
  -[PBUIWallpaperView variant]
  -[PBUIWallpaperView _material_generateImageFromImage:forBackdropParameters:traitCollection:]
  -[PBUIWallpaperView setContinuousColorSamplingEnabled:]
  -[PBUIWallpaperView setZoomFactor:]
  -[PBUIWallpaperView imageForBackdropParameters:includeTint:overrideTraitCollection:]
  -[PBUIWallpaperView _primaryColorOverride]
  -[PBUIWallpaperView delegate]
  -[PBUIWallpaperView snapshotImage]
  -[PBUIWallpaperView _applyParallaxSettings]
  -[PBUIWallpaperView contrast]
  -[PBUIWallpaperView dealloc]
  -[PBUIWallpaperView setVariant:]
  -[PBUIWallpaperView .cxx_destruct]
  -[PBUIWallpaperView hasVideo]
  -[PBUIWallpaperView _isParallaxEnabled]
  -[PBUIWallpaperView layoutSubviews]
  -[PBUIWallpaperView _cacheKeyForParameters:includingTint:downsampleFactor:traitCollection:]
  -[PBUIWallpaperView setRotating:]
  -[PBUIWallpaperView setLegibilitySettings:]
  -[PBUIWallpaperView _computeAverageColor]
  -[PBUIWallpaperView invalidate]
  -[PBUIWallpaperView setHidden:]
  -[PBUIWallpaperView supportsCropping]
  -[PBUIWallpaperView setContentView:]
  -[PBUIWallpaperView _imageForBackdropParameters:includeTint:overrideTraitCollection:]
  -[PBUIWallpaperView needsWallpaperDimmingTreatment]
  -[PBUIWallpaperView isRotating]
  -[PBUIWallpaperView _updateGeneratingBlurs]
  -[PBUIWallpaperView _backdrop_generateImageFromImage:forBackdropParameters:includeTint:traitCollection:]
  -[PBUIWallpaperView didMoveToWindow]
  -[PBUIWallpaperView legibilitySettings]
  -[PBUIWallpaperView wantsRasterization]


PBUIGradientWallpaperView : PBUIWallpaperView
 @property  PBUIWallpaperGradient *wallpaperGradient

  // class methods
  +[PBUIGradientWallpaperView layerClass]

  // instance methods
  -[PBUIGradientWallpaperView wallpaperType]
  -[PBUIGradientWallpaperView initWithFrame:configuration:variant:cacheGroup:delegate:options:]
  -[PBUIGradientWallpaperView averageColorInRect:withSmudgeRadius:]
  -[PBUIGradientWallpaperView isDisplayingWallpaperWithConfiguration:forVariant:]
  -[PBUIGradientWallpaperView contrastInRect:contrastWithinBoxes:contrastBetweenBoxes:]
  -[PBUIGradientWallpaperView wallpaperGradient]
  -[PBUIGradientWallpaperView .cxx_destruct]
  -[PBUIGradientWallpaperView _computeAverageColor]


PBUIWallpaperEffectViewBase : UIView <PBUIFakeBlurObserver, PBUIWallpaperObserver, PBUIWallpaperPositioning>
 @property  UIView<PBUIFakeBluring> *blurView
 @property  UIView *grayscaleTintView
 @property  UIView *colorTintView
 @property  UIView<PBUIFakeBluring> *transitionBlurView
 @property  UIView *transitionGrayscaleTintView
 @property  UIView *transitionColorTintView
 @property  UIImageView *maskImageView
 @property  UIView *blurMaskingContainer
 @property  UIView *tintMaskingContainer
 @property  <PBUIWallpaperPresenting><PBUIWallpaperLegibilityProviding> *wallpaperPresenter
 @property  double zoomScale
 @property  BOOL forcesOpaque
 @property  unsigned long transformOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL shouldMatchWallpaperPosition
 @property  BOOL fullscreen

  // instance methods
  -[PBUIWallpaperEffectViewBase setWallpaperStyle:]
  -[PBUIWallpaperEffectViewBase setBlurView:]
  -[PBUIWallpaperEffectViewBase setTranslucent:]
  -[PBUIWallpaperEffectViewBase blurView]
  -[PBUIWallpaperEffectViewBase wallpaperDidChangeForVariant:]
  -[PBUIWallpaperEffectViewBase zoomScale]
  -[PBUIWallpaperEffectViewBase setTransformOptions:]
  -[PBUIWallpaperEffectViewBase appearanceStorage]
  -[PBUIWallpaperEffectViewBase setZoomScale:]
  -[PBUIWallpaperEffectViewBase transformOptions]
  -[PBUIWallpaperEffectViewBase maskImageView]
  -[PBUIWallpaperEffectViewBase dealloc]
  -[PBUIWallpaperEffectViewBase colorTintView]
  -[PBUIWallpaperEffectViewBase shouldMatchWallpaperPosition]
  -[PBUIWallpaperEffectViewBase .cxx_destruct]
  -[PBUIWallpaperEffectViewBase setColorTintView:]
  -[PBUIWallpaperEffectViewBase setBarStyle:]
  -[PBUIWallpaperEffectViewBase layoutSubviews]
  -[PBUIWallpaperEffectViewBase setGrayscaleTintView:]
  -[PBUIWallpaperEffectViewBase offsetWallpaperBy:]
  -[PBUIWallpaperEffectViewBase grayscaleTintView]
  -[PBUIWallpaperEffectViewBase setShouldMatchWallpaperPosition:]
  -[PBUIWallpaperEffectViewBase setHidden:]
  -[PBUIWallpaperEffectViewBase wallpaperLegibilitySettingsDidChange:forVariant:]
  -[PBUIWallpaperEffectViewBase setTransitionState:]
  -[PBUIWallpaperEffectViewBase initWithFrame:]
  -[PBUIWallpaperEffectViewBase willMoveToWindow:]
  -[PBUIWallpaperEffectViewBase setStyle:]
  -[PBUIWallpaperEffectViewBase setFullscreen:]
  -[PBUIWallpaperEffectViewBase setBarTintColor:]
  -[PBUIWallpaperEffectViewBase wallpaperStyle]
  -[PBUIWallpaperEffectViewBase isFullscreen]
  -[PBUIWallpaperEffectViewBase initWithCoder:]
  -[PBUIWallpaperEffectViewBase _configureViews]
  -[PBUIWallpaperEffectViewBase wallpaperPresenter]
  -[PBUIWallpaperEffectViewBase _accessibilityReduceTransparencyChanged:]
  -[PBUIWallpaperEffectViewBase fakeBlurView:didChangeStyle:]
  -[PBUIWallpaperEffectViewBase initWithWallpaperPresenter:variant:transformOptions:]
  -[PBUIWallpaperEffectViewBase setForcesOpaque:]
  -[PBUIWallpaperEffectViewBase prepareToAnimateToTransitionState:]
  -[PBUIWallpaperEffectViewBase currentTransitionStateIsOpaque]
  -[PBUIWallpaperEffectViewBase setMaskImage:masksBlur:masksTint:]
  -[PBUIWallpaperEffectViewBase _updateWallpaperAverageColor:]
  -[PBUIWallpaperEffectViewBase _setTransitionFraction:]
  -[PBUIWallpaperEffectViewBase _needsBlurViewForStyle:]
  -[PBUIWallpaperEffectViewBase _configureFromScratch]
  -[PBUIWallpaperEffectViewBase _configureForCurrentBlurStyle]
  -[PBUIWallpaperEffectViewBase _shouldEffectivelyMatchWallpaperPosition]
  -[PBUIWallpaperEffectViewBase _configureViewsPositioning]
  -[PBUIWallpaperEffectViewBase _configureGrayscaleAndColorTintViewForStartStyle:]
  -[PBUIWallpaperEffectViewBase setBarWantsAdaptiveBackdrop:]
  -[PBUIWallpaperEffectViewBase setAppearanceStorage:]
  -[PBUIWallpaperEffectViewBase updateBackgroundImage]
  -[PBUIWallpaperEffectViewBase _setIsContainedInPopover:]
  -[PBUIWallpaperEffectViewBase _setFrame:forceUpdateBackgroundImage:]
  -[PBUIWallpaperEffectViewBase forcesOpaque]
  -[PBUIWallpaperEffectViewBase transitionBlurView]
  -[PBUIWallpaperEffectViewBase setTransitionBlurView:]
  -[PBUIWallpaperEffectViewBase transitionGrayscaleTintView]
  -[PBUIWallpaperEffectViewBase setTransitionGrayscaleTintView:]
  -[PBUIWallpaperEffectViewBase transitionColorTintView]
  -[PBUIWallpaperEffectViewBase setTransitionColorTintView:]
  -[PBUIWallpaperEffectViewBase setMaskImageView:]
  -[PBUIWallpaperEffectViewBase blurMaskingContainer]
  -[PBUIWallpaperEffectViewBase setBlurMaskingContainer:]
  -[PBUIWallpaperEffectViewBase tintMaskingContainer]
  -[PBUIWallpaperEffectViewBase setTintMaskingContainer:]


_SBMaskingContainerView : UIView
  // instance methods
  -[_SBMaskingContainerView initWithFrame:]


_SBTintView : UIView
  // instance methods
  -[_SBTintView initWithFrame:]


PBUIWallpaperLegacyDefaultsDomain : BSAbstractDefaultDomain
 @property  NSString *homeScreenWallpaperIdentifier
 @property  NSDictionary *homeScreenWallpaperOptions
 @property  BOOL homeScreenWallpaperWasUserSet
 @property  NSString *lockScreenWallpaperIdentifier
 @property  NSDictionary *lockScreenWallpaperOptions
 @property  BOOL lockScreenWallpaperWasUserSet
 @property  double homeScreenParallaxFactor
 @property  double homeScreenZoomScale
 @property  NSString *homeScreenCropRectString
 @property  BOOL homeScreenSupportsCropping
 @property  BOOL homeScreenMagnifyEnabled
 @property  BOOL homeScreenPortrait
 @property  NSString *homeScreenWallpaperName
 @property  NSDictionary *homeScreenWallpaperKitData
 @property  double lockScreenParallaxFactor
 @property  double lockScreenZoomScale
 @property  NSString *lockScreenCropRectString
 @property  BOOL lockScreenSupportsCropping
 @property  BOOL lockScreenMagnifyEnabled
 @property  BOOL lockScreenPortrait
 @property  BOOL lockScreenHasVideo
 @property  double lockScreenStillTimeInVideo
 @property  NSString *lockScreenWallpaperName
 @property  NSDictionary *lockScreenWallpaperKitData
 @property  NSData *lockScreenColorData
 @property  NSData *homeScreenColorData
 @property  NSString *lockScreenColorName
 @property  NSString *homeScreenColorName
 @property  NSData *lockScreenImageHashData
 @property  NSData *homeScreenImageHashData
 @property  NSData *lockScreenGradientData
 @property  NSData *homeScreenGradientData

  // instance methods
  -[PBUIWallpaperLegacyDefaultsDomain init]
  -[PBUIWallpaperLegacyDefaultsDomain _bindAndRegisterDefaults]


PBUIPosterWallpaperViewController : UIViewController <PBUIPosterComponentDelegate, BSDescriptionProviding, PBUIPosterComponent>
 @property  long long activeVariant
 @property  double unlockProgress
 @property  BOOL wakeSourceIsSwipeToUnlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PBUIPosterComponentDelegate> *delegate
 @property  long long variant
 @property  UIColor *averageColor
 @property  double averageContrast
 @property  _UILegibilitySettings *legibilitySettings

  // instance methods
  -[PBUIPosterWallpaperViewController requireWallpaperWithReason:]
  -[PBUIPosterWallpaperViewController requireWallpaperRasterizationWithReason:]
  -[PBUIPosterWallpaperViewController posterComponent:didUpdateLegibilitySettings:]
  -[PBUIPosterWallpaperViewController triggerSceneUpdate]
  -[PBUIPosterWallpaperViewController posterHandlesWakeAnimation]
  -[PBUIPosterWallpaperViewController averageColorForVariant:]
  -[PBUIPosterWallpaperViewController setWakeSourceIsSwipeToUnlock:]
  -[PBUIPosterWallpaperViewController setActiveVariant:]
  -[PBUIPosterWallpaperViewController activeVariant]
  -[PBUIPosterWallpaperViewController legibilitySettingsForVariant:]
  -[PBUIPosterWallpaperViewController finishUnlockWithAnimationParameters:]
  -[PBUIPosterWallpaperViewController snapshotSourceProviderForActiveVariant]
  -[PBUIPosterWallpaperViewController scenesForBacklightSession]
  -[PBUIPosterWallpaperViewController averageContrast]
  -[PBUIPosterWallpaperViewController _canShowWhileLocked]
  -[PBUIPosterWallpaperViewController setDelegate:]
  -[PBUIPosterWallpaperViewController variant]
  -[PBUIPosterWallpaperViewController descriptionWithMultilinePrefix:]
  -[PBUIPosterWallpaperViewController delegate]
  -[PBUIPosterWallpaperViewController averageColor]
  -[PBUIPosterWallpaperViewController descriptionBuilderWithMultilinePrefix:]
  -[PBUIPosterWallpaperViewController portalSourceProviderForVariant:]
  -[PBUIPosterWallpaperViewController _updateStyle]
  -[PBUIPosterWallpaperViewController _posterControllerDidChange]
  -[PBUIPosterWallpaperViewController .cxx_destruct]
  -[PBUIPosterWallpaperViewController unlockProgress]
  -[PBUIPosterWallpaperViewController viewDidLoad]
  -[PBUIPosterWallpaperViewController updateAssociatedPosterConfiguration:withAnimationSettings:]
  -[PBUIPosterWallpaperViewController updateConfiguration:withAnimationSettings:]
  -[PBUIPosterWallpaperViewController setUnlockProgress:]
  -[PBUIPosterWallpaperViewController succinctDescription]
  -[PBUIPosterWallpaperViewController replicaProviderForVariant:]
  -[PBUIPosterWallpaperViewController updateLegacyPoster]
  -[PBUIPosterWallpaperViewController snapshotSourceProviderForVariant:]
  -[PBUIPosterWallpaperViewController averageContrastForVariant:]
  -[PBUIPosterWallpaperViewController setWallpaperStyle:forPriority:forVariant:]
  -[PBUIPosterWallpaperViewController noteUserTapOccurred]
  -[PBUIPosterWallpaperViewController invalidate]
  -[PBUIPosterWallpaperViewController _posterConfigsDidChange:withTransition:]
  -[PBUIPosterWallpaperViewController portalSourceProviderForActiveVariant]
  -[PBUIPosterWallpaperViewController portalProviderForFloatingLayer]
  -[PBUIPosterWallpaperViewController succinctDescriptionBuilder]
  -[PBUIPosterWallpaperViewController rotateToInterfaceOrientation:duration:]
  -[PBUIPosterWallpaperViewController removeWallpaperStyleForPriority:forVariant:]
  -[PBUIPosterWallpaperViewController wakeSourceIsSwipeToUnlock]
  -[PBUIPosterWallpaperViewController legibilitySettings]
  -[PBUIPosterWallpaperViewController init]
  -[PBUIPosterWallpaperViewController homeScreenReflectsLockScreen]


PBUIMagnifyMode : NSObject <NSCopying, BSDescriptionProviding>
 @property  {CGSize=dd} size
 @property  NSString *name
 @property  float zoomFactor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBUIMagnifyMode currentMagnifyMode]
  +[PBUIMagnifyMode magnifyModeWithSize:name:]

  // instance methods
  -[PBUIMagnifyMode zoomFactor]
  -[PBUIMagnifyMode descriptionWithMultilinePrefix:]
  -[PBUIMagnifyMode setZoomFactor:]
  -[PBUIMagnifyMode descriptionBuilderWithMultilinePrefix:]
  -[PBUIMagnifyMode .cxx_destruct]
  -[PBUIMagnifyMode succinctDescription]
  -[PBUIMagnifyMode size]
  -[PBUIMagnifyMode setName:]
  -[PBUIMagnifyMode copyWithZone:]
  -[PBUIMagnifyMode name]
  -[PBUIMagnifyMode succinctDescriptionBuilder]
  -[PBUIMagnifyMode setSize:]
  -[PBUIMagnifyMode isEqual:]
  -[PBUIMagnifyMode init]


PBUIGradientView : UIView
 @property  PBUIWallpaperGradient *gradient

  // class methods
  +[PBUIGradientView layerClass]

  // instance methods
  -[PBUIGradientView gradient]
  -[PBUIGradientView setGradient:]
  -[PBUIGradientView .cxx_destruct]


PBUIPosterHomeViewController : PBUIPosterVariantViewController
 @property  BOOL isBlurred

  // instance methods
  -[PBUIPosterHomeViewController setCounterpart:]
  -[PBUIPosterHomeViewController homeScreenConfiguration]
  -[PBUIPosterHomeViewController averageContrast]
  -[PBUIPosterHomeViewController reflectsLock]
  -[PBUIPosterHomeViewController contentColorStatistics]
  -[PBUIPosterHomeViewController isBlurred]
  -[PBUIPosterHomeViewController performSnapshotOnQueue:completion:]
  -[PBUIPosterHomeViewController updatePresentation]
  -[PBUIPosterHomeViewController variant]
  -[PBUIPosterHomeViewController averageColor]
  -[PBUIPosterHomeViewController areSettingsAppropriateForSnapshotting:]
  -[PBUIPosterHomeViewController evaluateSnapshotPreconditions]
  -[PBUIPosterHomeViewController setFixedAverageColor:]
  -[PBUIPosterHomeViewController .cxx_destruct]
  -[PBUIPosterHomeViewController weightingForEffectView]
  -[PBUIPosterHomeViewController isSettledPosition]
  -[PBUIPosterHomeViewController updateGradientViewWithGradient:]
  -[PBUIPosterHomeViewController legibilitySettings]


PBUIWallpaperDefaultConfiguration : NSObject <NSCopying, BSDescriptionProviding, NSSecureCoding>
 @property  long long wallpaperType
 @property  NSURL *staticImageURL
 @property  NSURL *videoURL
 @property  NSString *proceduralWallpaperIdentifier
 @property  NSDictionary *proceduralWallpaperOptions
 @property  UIColor *wallpaperColor
 @property  NSString *wallpaperColorName
 @property  PBUIWallpaperGradient *wallpaperGradient
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBUIWallpaperDefaultConfiguration supportsSecureCoding]

  // instance methods
  -[PBUIWallpaperDefaultConfiguration wallpaperType]
  -[PBUIWallpaperDefaultConfiguration wallpaperColor]
  -[PBUIWallpaperDefaultConfiguration videoURL]
  -[PBUIWallpaperDefaultConfiguration wallpaperColorName]
  -[PBUIWallpaperDefaultConfiguration descriptionWithMultilinePrefix:]
  -[PBUIWallpaperDefaultConfiguration encodeWithCoder:]
  -[PBUIWallpaperDefaultConfiguration wallpaperGradient]
  -[PBUIWallpaperDefaultConfiguration descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperDefaultConfiguration .cxx_destruct]
  -[PBUIWallpaperDefaultConfiguration succinctDescription]
  -[PBUIWallpaperDefaultConfiguration proceduralWallpaperIdentifier]
  -[PBUIWallpaperDefaultConfiguration copyWithZone:]
  -[PBUIWallpaperDefaultConfiguration proceduralWallpaperOptions]
  -[PBUIWallpaperDefaultConfiguration succinctDescriptionBuilder]
  -[PBUIWallpaperDefaultConfiguration isEqual:]
  -[PBUIWallpaperDefaultConfiguration init]
  -[PBUIWallpaperDefaultConfiguration initWithCoder:]
  -[PBUIWallpaperDefaultConfiguration initStaticWithImageURL:]
  -[PBUIWallpaperDefaultConfiguration initVideoWithStaticImageURL:videoURL:]
  -[PBUIWallpaperDefaultConfiguration initProceduralWithIdentifier:options:]
  -[PBUIWallpaperDefaultConfiguration initColorWithColor:]
  -[PBUIWallpaperDefaultConfiguration initColorWithColorName:]
  -[PBUIWallpaperDefaultConfiguration initGradientWithGradient:]
  -[PBUIWallpaperDefaultConfiguration staticImageURL]


PBUIWallpaperViewController : UIViewController <PBUIWallpaperConfigurationManagerDelegate, PBUILegibilitySettingsProviderDelegate, PBUIWallpaperViewInternalObserver, PTSettingsKeyObserver, BSDescriptionProviding, PBUIWallpaperViewDelegate, PBUILegacyWallpaperPresenting, PBUIWallpaperLegibilityProviding>
 @property  PBUIWallpaperView *lockscreenWallpaperView
 @property  PBUIWallpaperView *homescreenWallpaperView
 @property  PBUIWallpaperView *sharedWallpaperView
 @property  PBUIWallpaperStyleInfo *homescreenStyleInfo
 @property  PBUIWallpaperStyleInfo *lockscreenStyleInfo
 @property  <BSInvalidatable> *wallpaperStyleAnimationAssertion
 @property  UITraitCollection *fakeBlurViewOverrideTraitCollection
 @property  PBUIWallpaperConfigurationManager *wallpaperConfigurationManager
 @property  NSString *cachingIdentifier
 @property  <PBUIWallpaperReachabilityCoordinating> *reachabilityCoordinator
 @property  BOOL fixedOrientation
 @property  BOOL colorSamplingDisabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PBUIIrisWallpaperPlaying> *irisWallpaperPlayer
 @property  <PBUIWallpaperPresentingDelegate> *wallpaperPresentingDelegate
 @property  {?=qqd} currentHomescreenStyleTransitionState
 @property  long long activeVariant
 @property  double minimumHomescreenWallpaperScale
 @property  double homescreenWallpaperScale
 @property  double minimumLockscreenWallpaperScale
 @property  double lockscreenWallpaperScale

  // class methods
  +[PBUIWallpaperViewController substitutionFlatColorForWallpaperName:]

  // instance methods
  -[PBUIWallpaperViewController requireWallpaperWithReason:]
  -[PBUIWallpaperViewController requireWallpaperRasterizationWithReason:]
  -[PBUIWallpaperViewController averageColorForVariant:]
  -[PBUIWallpaperViewController _endDisallowRasterizationBlock]
  -[PBUIWallpaperViewController lockscreenWallpaperScale]
  -[PBUIWallpaperViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PBUIWallpaperViewController setActiveVariant:]
  -[PBUIWallpaperViewController activeVariant]
  -[PBUIWallpaperViewController legibilitySettingsForVariant:]
  -[PBUIWallpaperViewController _beginDisallowRasterizationBlock]
  -[PBUIWallpaperViewController wallpaperStyleAnimationAssertion]
  -[PBUIWallpaperViewController _updateRasterizationState]
  -[PBUIWallpaperViewController irisWallpaperPlayer]
  -[PBUIWallpaperViewController averageColorInRect:forVariant:]
  -[PBUIWallpaperViewController _canShowWhileLocked]
  -[PBUIWallpaperViewController setActiveVariant:withOutAnimationFactory:inAnimationFactory:completion:]
  -[PBUIWallpaperViewController settings:changedValueForKey:]
  -[PBUIWallpaperViewController setWallpaperConfigurationManager:]
  -[PBUIWallpaperViewController cancelInProcessAnimations]
  -[PBUIWallpaperViewController preheatWallpaperForVariant:]
  -[PBUIWallpaperViewController setWallpaperStyle:forPriority:forVariant:withAnimationFactory:]
  -[PBUIWallpaperViewController suspendWallpaperAnimationForReason:]
  -[PBUIWallpaperViewController _wallpaperScaleForVariant:]
  -[PBUIWallpaperViewController descriptionWithMultilinePrefix:]
  -[PBUIWallpaperViewController setReachabilityCoordinator:]
  -[PBUIWallpaperViewController averageColorInRect:forVariant:withSmudgeRadius:]
  -[PBUIWallpaperViewController homeScreenPosterMirrorsLock]
  -[PBUIWallpaperViewController descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperViewController initWithNibName:bundle:]
  -[PBUIWallpaperViewController updateWallpaperForLocations:wallpaperMode:withCompletion:]
  -[PBUIWallpaperViewController setHomescreenWallpaperScale:withAnimationFactory:]
  -[PBUIWallpaperViewController removeObserver:forVariant:]
  -[PBUIWallpaperViewController dealloc]
  -[PBUIWallpaperViewController noteDidRotateFromInterfaceOrientation:]
  -[PBUIWallpaperViewController .cxx_destruct]
  -[PBUIWallpaperViewController updateIrisWallpaperForStaticMode]
  -[PBUIWallpaperViewController viewDidLoad]
  -[PBUIWallpaperViewController fakeBlurViewOverrideTraitCollection]
  -[PBUIWallpaperViewController setWallpaperHidden:variant:reason:]
  -[PBUIWallpaperViewController setWallpaperStyleAnimationAssertion:]
  -[PBUIWallpaperViewController _updateWallpaperScaleWithAnimationFactory:]
  -[PBUIWallpaperViewController contrastForVariant:]
  -[PBUIWallpaperViewController succinctDescription]
  -[PBUIWallpaperViewController removeWallpaperStyleForPriority:forVariant:withAnimationFactory:]
  -[PBUIWallpaperViewController homescreenWallpaperScale]
  -[PBUIWallpaperViewController shouldAutorotate]
  -[PBUIWallpaperViewController _registerFakeBlurView:]
  -[PBUIWallpaperViewController wallpaperConfigurationManager:didChangeWallpaperConfigurationForVariants:]
  -[PBUIWallpaperViewController updateWallpaperForLocations:withCompletion:]
  -[PBUIWallpaperViewController currentHomescreenStyleTransitionState]
  -[PBUIWallpaperViewController addObserver:forVariant:]
  -[PBUIWallpaperViewController wallpaperPresentingDelegate]
  -[PBUIWallpaperViewController reachabilityCoordinator]
  -[PBUIWallpaperViewController setWallpaperPresentingDelegate:]
  -[PBUIWallpaperViewController supportedInterfaceOrientations]
  -[PBUIWallpaperViewController updateIrisWallpaperForInteractiveMode]
  -[PBUIWallpaperViewController _wallpaperScaleAssertionForVariant:scale:]
  -[PBUIWallpaperViewController setWallpaperStyleTransitionState:forPriority:forVariant:withAnimationFactory:]
  -[PBUIWallpaperViewController wallpaperView:wallpaperConfigurationIncludingValueTypes:]
  -[PBUIWallpaperViewController setFakeBlurViewOverrideTraitCollection:]
  -[PBUIWallpaperViewController providerLegibilitySettingsChanged:]
  -[PBUIWallpaperViewController setLockscreenWallpaperScale:withAnimationFactory:]
  -[PBUIWallpaperViewController succinctDescriptionBuilder]
  -[PBUIWallpaperViewController contrastInRect:forVariant:]
  -[PBUIWallpaperViewController _updateWallpaperForLocations:options:wallpaperMode:withCompletion:]
  -[PBUIWallpaperViewController cachingIdentifier]
  -[PBUIWallpaperViewController minimumLockscreenWallpaperScale]
  -[PBUIWallpaperViewController wallpaperConfigurationManager]
  -[PBUIWallpaperViewController traitCollectionDidChange:]
  -[PBUIWallpaperViewController wallpaperConfigurationForVariant:includingValuesForTypes:wallpaperMode:]
  -[PBUIWallpaperViewController newFakeBlurViewForVariant:style:transformOptions:]
  -[PBUIWallpaperViewController _unregisterFakeBlurView:]
  -[PBUIWallpaperViewController minimumHomescreenWallpaperScale]
  -[PBUIWallpaperViewController setLockscreenOnlyWallpaperAlpha:]
  -[PBUIWallpaperViewController wallpaperConfigurationManager:legibilitySettingsForVariant:]
  -[PBUIWallpaperViewController noteWillAnimateToInterfaceOrientation:]
  -[PBUIWallpaperViewController setCachingIdentifier:]
  -[PBUIWallpaperViewController setAlpha:forWallpaperVariant:]
  -[PBUIWallpaperViewController setLockscreenWallpaperContentsRect:]
  -[PBUIWallpaperViewController setDisallowsRasterization:forVariant:withReason:]
  -[PBUIWallpaperViewController beginDelayingHomescreenStyleChangesForReason:]
  -[PBUIWallpaperViewController endDelayingHomescreenStyleChangesForReason:animationFactory:]
  -[PBUIWallpaperViewController _observersForVariant:]
  -[PBUIWallpaperViewController _blurViewsForVariant:]
  -[PBUIWallpaperViewController _reconfigureBlurViewsForVariant:]
  -[PBUIWallpaperViewController _accessibilityReduceTransparencyChanged:]
  -[PBUIWallpaperViewController wallpaperViewDidInvalidateBlurs:]
  -[PBUIWallpaperViewController wallpaperView:didChangeZoomFactor:]
  -[PBUIWallpaperViewController wallpaperViewDidChangeWantsRasterization:]
  -[PBUIWallpaperViewController noteWallpapersDidUpdate]
  -[PBUIWallpaperViewController wallpaperEffectImageForStyle:variant:traitCollection:result:]
  -[PBUIWallpaperViewController beginSimulatedLiveWallpaperTouchWithReason:]
  -[PBUIWallpaperViewController endSimulatedLiveWallpaperTouchWithReason:]
  -[PBUIWallpaperViewController minimumWallpaperScaleForVariant:]
  -[PBUIWallpaperViewController setColorSamplingDisabled:]
  -[PBUIWallpaperViewController suspendColorSamplingForReason:]
  -[PBUIWallpaperViewController _isRasterizationDisallowedForCurrentVariant]
  -[PBUIWallpaperViewController _setDisallowRasterization:withReason:reasons:]
  -[PBUIWallpaperViewController wallpaperViewForVariant:]
  -[PBUIWallpaperViewController _activeWallpaperView]
  -[PBUIWallpaperViewController _suspendOrResumeColorSampling]
  -[PBUIWallpaperViewController _suspendOrResumeWallpaperAnimation]
  -[PBUIWallpaperViewController _invalidateWallpaperAssertion:]
  -[PBUIWallpaperViewController _removeColorSamplingAssertion:]
  -[PBUIWallpaperViewController _removeWallpaperAnimationAssertion:]
  -[PBUIWallpaperViewController wallpaperStyleInfoForVariant:]
  -[PBUIWallpaperViewController _setWallpaperHidden:variant:reason:]
  -[PBUIWallpaperViewController _isWallpaperHiddenForVariant:]
  -[PBUIWallpaperViewController _updateWallpaperHidden]
  -[PBUIWallpaperViewController removeWallpaperRequiredAssertion:]
  -[PBUIWallpaperViewController _updateWallpaperParallax]
  -[PBUIWallpaperViewController substitutionWallpaperConfigurationForWallpaperConfiguration:]
  -[PBUIWallpaperViewController _isWallpaperView:displayingWallpaperWithConfiguration:forVariant:]
  -[PBUIWallpaperViewController _updateSharedWallpaperWithOptions:wallpaperMode:]
  -[PBUIWallpaperViewController _precacheStyles:usingTraitCollection:]
  -[PBUIWallpaperViewController _updateSeparateWallpaperForVariants:options:wallpaperMode:]
  -[PBUIWallpaperViewController shouldDelayHomescreenStyleUpdates]
  -[PBUIWallpaperViewController _beginSuspendingMotionEffectsForStyleIfNeeded]
  -[PBUIWallpaperViewController _endSuspendingMotionEffectsForStyleIfNeeded]
  -[PBUIWallpaperViewController _shouldSuspendMotionEffectsForStyle:]
  -[PBUIWallpaperViewController _shouldSuspendMotionEffectsForState:]
  -[PBUIWallpaperViewController _updateMotionEffectsForState:]
  -[PBUIWallpaperViewController _updateEffectViewForVariant:oldState:newState:oldEffectView:newEffectView:]
  -[PBUIWallpaperViewController _updateEffectViewForVariant:withFactory:]
  -[PBUIWallpaperViewController _handleWallpaperChangedForVariant:]
  -[PBUIWallpaperViewController variantsShareWallpaper]
  -[PBUIWallpaperViewController wallpaperDataTypesToRequestForUpdatingWallpaperViews]
  -[PBUIWallpaperViewController wallpaperConfigurationForUpdatingWallpaperViewsForVariant:wallpaperMode:]
  -[PBUIWallpaperViewController _sourceForFakeBlurView:]
  -[PBUIWallpaperViewController _updateBlurGeneration]
  -[PBUIWallpaperViewController _bestWallpaperViewInitializationOptionsForVariant:shared:wallpaperOptions:options:]
  -[PBUIWallpaperViewController _wallpaperViewClassForType:]
  -[PBUIWallpaperViewController _vendWallpaperViewForConfiguration:forVariant:shared:options:]
  -[PBUIWallpaperViewController cleanupOldSharedWallpaper:lockSreenWallpaper:homeScreenWallpaper:]
  -[PBUIWallpaperViewController _makeWallpaperViewWithConfiguration:forVariant:shared:options:]
  -[PBUIWallpaperViewController _clearWallpaperView:]
  -[PBUIWallpaperViewController _clearWallpaperEffectView:]
  -[PBUIWallpaperViewController _newWallpaperEffectViewForVariant:transitionState:]
  -[PBUIWallpaperViewController _handleWallpaperLegibilitySettingsChanged:forVariant:]
  -[PBUIWallpaperViewController _updateBlurImagesForVariant:]
  -[PBUIWallpaperViewController _updateWallpaperForWallpaperMode:]
  -[PBUIWallpaperViewController _updateWallpaperForWallpaperDimming:]
  -[PBUIWallpaperViewController _updateAndPrewarmWallpapers]
  -[PBUIWallpaperViewController fixedOrientation]
  -[PBUIWallpaperViewController setFixedOrientation:]
  -[PBUIWallpaperViewController colorSamplingDisabled]
  -[PBUIWallpaperViewController lockscreenWallpaperView]
  -[PBUIWallpaperViewController setLockscreenWallpaperView:]
  -[PBUIWallpaperViewController homescreenWallpaperView]
  -[PBUIWallpaperViewController setHomescreenWallpaperView:]
  -[PBUIWallpaperViewController sharedWallpaperView]
  -[PBUIWallpaperViewController setSharedWallpaperView:]
  -[PBUIWallpaperViewController homescreenStyleInfo]
  -[PBUIWallpaperViewController lockscreenStyleInfo]


_PBUIWallpaperViewControllerAssertion : NSObject <BSInvalidatable, BSDescriptionProviding>
 @property  BOOL invalidated
 @property  PBUIWallpaperViewController *wallpaperViewController
 @property  long long type
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_PBUIWallpaperViewControllerAssertion setInvalidated:]
  -[_PBUIWallpaperViewControllerAssertion isInvalidated]
  -[_PBUIWallpaperViewControllerAssertion descriptionWithMultilinePrefix:]
  -[_PBUIWallpaperViewControllerAssertion type]
  -[_PBUIWallpaperViewControllerAssertion descriptionBuilderWithMultilinePrefix:]
  -[_PBUIWallpaperViewControllerAssertion dealloc]
  -[_PBUIWallpaperViewControllerAssertion wallpaperViewController]
  -[_PBUIWallpaperViewControllerAssertion .cxx_destruct]
  -[_PBUIWallpaperViewControllerAssertion succinctDescription]
  -[_PBUIWallpaperViewControllerAssertion reason]
  -[_PBUIWallpaperViewControllerAssertion invalidate]
  -[_PBUIWallpaperViewControllerAssertion succinctDescriptionBuilder]
  -[_PBUIWallpaperViewControllerAssertion initWithWallpaperViewController:type:reason:]


PBUIWallpaperScaleAssertion : BSSimpleAssertion <PBUIWallpaperAnimatedInvalidating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIWallpaperScaleAssertion descriptionWithMultilinePrefix:]
  -[PBUIWallpaperScaleAssertion descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperScaleAssertion dealloc]
  -[PBUIWallpaperScaleAssertion .cxx_destruct]
  -[PBUIWallpaperScaleAssertion succinctDescription]
  -[PBUIWallpaperScaleAssertion invalidateWithAnimationFactory:]
  -[PBUIWallpaperScaleAssertion invalidate]
  -[PBUIWallpaperScaleAssertion succinctDescriptionBuilder]


PBUIBokehWallpaperCircle : CALayer <CAAnimationDelegate>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} superviewBounds
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBUIBokehWallpaperCircle _newFadeAnimation]
  +[PBUIBokehWallpaperCircle _newFlickerAnimation]
  +[PBUIBokehWallpaperCircle _newScaleAnimation]

  // instance methods
  -[PBUIBokehWallpaperCircle animationDidStop:finished:]
  -[PBUIBokehWallpaperCircle setColor:]
  -[PBUIBokehWallpaperCircle setAnimationsEnabled:]
  -[PBUIBokehWallpaperCircle initWithSuperviewBounds:color:]
  -[PBUIBokehWallpaperCircle randomize]
  -[PBUIBokehWallpaperCircle updatePositionWithTime:dx:dy:lockScreen:]
  -[PBUIBokehWallpaperCircle configureAnimationsWithPhase:]
  -[PBUIBokehWallpaperCircle _pauseAnimations]
  -[PBUIBokehWallpaperCircle _resumeAnimations]
  -[PBUIBokehWallpaperCircle superviewBounds]
  -[PBUIBokehWallpaperCircle setSuperviewBounds:]


PBUIScrollableStaticWallpaperView : PBUIStaticWallpaperView <UIScrollViewDelegate>
 @property  BOOL automaticallyEnablesParallax
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBUIScrollableStaticWallpaperView _shouldScaleForParallax]
  +[PBUIScrollableStaticWallpaperView _canCacheImages]
  +[PBUIScrollableStaticWallpaperView _canDownscaleSampleImage]

  // instance methods
  -[PBUIScrollableStaticWallpaperView parallaxFactor]
  -[PBUIScrollableStaticWallpaperView _parallaxFactorWithZoomScale:contentOffset:]
  -[PBUIScrollableStaticWallpaperView setParallaxEnabled:]
  -[PBUIScrollableStaticWallpaperView _scrollView]
  -[PBUIScrollableStaticWallpaperView initWithFrame:configuration:variant:cacheGroup:delegate:options:]
  -[PBUIScrollableStaticWallpaperView scrollViewDidEndZooming:withView:atScale:]
  -[PBUIScrollableStaticWallpaperView cropRect]
  -[PBUIScrollableStaticWallpaperView _imageSize]
  -[PBUIScrollableStaticWallpaperView automaticallyEnablesParallax]
  -[PBUIScrollableStaticWallpaperView _resetColorBoxes]
  -[PBUIScrollableStaticWallpaperView _wallpaperImageForAnalysis]
  -[PBUIScrollableStaticWallpaperView _setupScrollView]
  -[PBUIScrollableStaticWallpaperView setCropRect:zoomScale:]
  -[PBUIScrollableStaticWallpaperView cropZoomScale]
  -[PBUIScrollableStaticWallpaperView viewForZoomingInScrollView:]
  -[PBUIScrollableStaticWallpaperView _boundedContentOffsetForOverhang]
  -[PBUIScrollableStaticWallpaperView _updateScrollViewZoomScales]
  -[PBUIScrollableStaticWallpaperView dealloc]
  -[PBUIScrollableStaticWallpaperView scrollViewDidEndDecelerating:]
  -[PBUIScrollableStaticWallpaperView .cxx_destruct]
  -[PBUIScrollableStaticWallpaperView _minimumContentOffsetForOverhang]
  -[PBUIScrollableStaticWallpaperView _cancelThrottle]
  -[PBUIScrollableStaticWallpaperView layoutSubviews]
  -[PBUIScrollableStaticWallpaperView _scrollViewParallaxFactor]
  -[PBUIScrollableStaticWallpaperView _newImageView]
  -[PBUIScrollableStaticWallpaperView _scrollViewDidUpdate]
  -[PBUIScrollableStaticWallpaperView _maximumContentOffsetForOverhang]
  -[PBUIScrollableStaticWallpaperView _setupContentViewWithOptions:]
  -[PBUIScrollableStaticWallpaperView _throttleDuration]
  -[PBUIScrollableStaticWallpaperView _cropRect]
  -[PBUIScrollableStaticWallpaperView supportsCropping]
  -[PBUIScrollableStaticWallpaperView setContentView:]
  -[PBUIScrollableStaticWallpaperView setAutomaticallyEnablesParallax:]
  -[PBUIScrollableStaticWallpaperView _updateParallaxForScroll]
  -[PBUIScrollableStaticWallpaperView scrollViewDidEndDragging:willDecelerate:]
  -[PBUIScrollableStaticWallpaperView didMoveToWindow]
  -[PBUIScrollableStaticWallpaperView scrollViewDidChangeAdjustedContentInset:]


PBUIPathProvider : NSObject <BSPathProviding>
 @property  NSURL *defaultPath
 @property  NSURL *libraryPath
 @property  NSURL *cachesPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBUIPathProvider providerFromProvider:]

  // instance methods
  -[PBUIPathProvider defaultPath]
  -[PBUIPathProvider .cxx_destruct]
  -[PBUIPathProvider libraryPath]
  -[PBUIPathProvider cachesPath]
  -[PBUIPathProvider setDefaultPath:]
  -[PBUIPathProvider setLibraryPath:]
  -[PBUIPathProvider initFromProvider:]
  -[PBUIPathProvider setCachesPath:]


PBUIPosterWallpaperRemoteViewController : UIViewController <BSDescriptionProviding, PBUIWallpaperConfigurationManagerDelegate, PBUIPosterComponentDelegate, PBUIFakeBlurImageProviding, PBUIFakeBlurViewRegistering, PBUIWallpaperPresenting, PBUIWallpaperLegibilityProviding>
 @property  PBUIWallpaperConfigurationManager *wallpaperConfigurationManager
 @property  <PBUIWallpaperReachabilityCoordinating> *reachabilityCoordinator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PBUIWallpaperPresentingDelegate> *wallpaperPresentingDelegate
 @property  {?=qqd} currentHomescreenStyleTransitionState
 @property  long long activeVariant
 @property  double minimumHomescreenWallpaperScale
 @property  double homescreenWallpaperScale
 @property  double minimumLockscreenWallpaperScale
 @property  double lockscreenWallpaperScale

  // class methods
  +[PBUIPosterWallpaperRemoteViewController supportsLandscapeWallpaperContents]

  // instance methods
  -[PBUIPosterWallpaperRemoteViewController _observers]
  -[PBUIPosterWallpaperRemoteViewController requireWallpaperWithReason:]
  -[PBUIPosterWallpaperRemoteViewController requireWallpaperRasterizationWithReason:]
  -[PBUIPosterWallpaperRemoteViewController posterComponent:didUpdateLegibilitySettings:]
  -[PBUIPosterWallpaperRemoteViewController triggerSceneUpdate]
  -[PBUIPosterWallpaperRemoteViewController posterHandlesWakeAnimation]
  -[PBUIPosterWallpaperRemoteViewController averageColorForVariant:]
  -[PBUIPosterWallpaperRemoteViewController _addStateCaptureHandlers]
  -[PBUIPosterWallpaperRemoteViewController lockscreenWallpaperScale]
  -[PBUIPosterWallpaperRemoteViewController setActiveVariant:]
  -[PBUIPosterWallpaperRemoteViewController activeVariant]
  -[PBUIPosterWallpaperRemoteViewController legibilitySettingsForVariant:]
  -[PBUIPosterWallpaperRemoteViewController scenesForInactiveEnvironmentSession]
  -[PBUIPosterWallpaperRemoteViewController scenesForBacklightSession]
  -[PBUIPosterWallpaperRemoteViewController averageColorInRect:forVariant:]
  -[PBUIPosterWallpaperRemoteViewController _canShowWhileLocked]
  -[PBUIPosterWallpaperRemoteViewController setAssociatedPosterConfiguration:withAnimationSettings:]
  -[PBUIPosterWallpaperRemoteViewController setActiveVariant:withOutAnimationFactory:inAnimationFactory:completion:]
  -[PBUIPosterWallpaperRemoteViewController updateImageProviderView:withImage:]
  -[PBUIPosterWallpaperRemoteViewController triggerPosterSignificantEvent]
  -[PBUIPosterWallpaperRemoteViewController setWallpaperConfigurationManager:]
  -[PBUIPosterWallpaperRemoteViewController cancelInProcessAnimations]
  -[PBUIPosterWallpaperRemoteViewController noteWillAnimateToInterfaceOrientation:duration:]
  -[PBUIPosterWallpaperRemoteViewController setWallpaperStyle:forPriority:forVariant:withAnimationFactory:]
  -[PBUIPosterWallpaperRemoteViewController suspendWallpaperAnimationForReason:]
  -[PBUIPosterWallpaperRemoteViewController _wallpaperScaleForVariant:]
  -[PBUIPosterWallpaperRemoteViewController descriptionWithMultilinePrefix:]
  -[PBUIPosterWallpaperRemoteViewController setReachabilityCoordinator:]
  -[PBUIPosterWallpaperRemoteViewController zoomFactorForVariant:]
  -[PBUIPosterWallpaperRemoteViewController averageColorInRect:forVariant:withSmudgeRadius:]
  -[PBUIPosterWallpaperRemoteViewController homeScreenPosterMirrorsLock]
  -[PBUIPosterWallpaperRemoteViewController addObserver:]
  -[PBUIPosterWallpaperRemoteViewController descriptionBuilderWithMultilinePrefix:]
  -[PBUIPosterWallpaperRemoteViewController setConfiguration:withAnimationSettings:]
  -[PBUIPosterWallpaperRemoteViewController initWithNibName:bundle:]
  -[PBUIPosterWallpaperRemoteViewController viewWillLayoutSubviews]
  -[PBUIPosterWallpaperRemoteViewController viewDidAppear:]
  -[PBUIPosterWallpaperRemoteViewController setHomescreenWallpaperScale:withAnimationFactory:]
  -[PBUIPosterWallpaperRemoteViewController removeObserver:forVariant:]
  -[PBUIPosterWallpaperRemoteViewController dealloc]
  -[PBUIPosterWallpaperRemoteViewController _updateFallbackView]
  -[PBUIPosterWallpaperRemoteViewController noteDidRotateFromInterfaceOrientation:]
  -[PBUIPosterWallpaperRemoteViewController .cxx_destruct]
  -[PBUIPosterWallpaperRemoteViewController viewDidLoad]
  -[PBUIPosterWallpaperRemoteViewController updateWallpaperAnimationWithIconFlyInTension:friction:]
  -[PBUIPosterWallpaperRemoteViewController viewWillAppear:]
  -[PBUIPosterWallpaperRemoteViewController _updateWallpaperScaleWithAnimationFactory:]
  -[PBUIPosterWallpaperRemoteViewController contrastForVariant:]
  -[PBUIPosterWallpaperRemoteViewController succinctDescription]
  -[PBUIPosterWallpaperRemoteViewController parallaxFactorForVariant:]
  -[PBUIPosterWallpaperRemoteViewController _updateAnimationSuspended]
  -[PBUIPosterWallpaperRemoteViewController imageForWallpaperStyle:variant:traitCollection:]
  -[PBUIPosterWallpaperRemoteViewController removeWallpaperStyleForPriority:forVariant:withAnimationFactory:]
  -[PBUIPosterWallpaperRemoteViewController homescreenWallpaperScale]
  -[PBUIPosterWallpaperRemoteViewController shouldAutorotate]
  -[PBUIPosterWallpaperRemoteViewController _registerFakeBlurView:]
  -[PBUIPosterWallpaperRemoteViewController wallpaperConfigurationManager:didChangeWallpaperConfigurationForVariants:]
  -[PBUIPosterWallpaperRemoteViewController parallaxEnabledForVariant:]
  -[PBUIPosterWallpaperRemoteViewController currentHomescreenStyleTransitionState]
  -[PBUIPosterWallpaperRemoteViewController addObserver:forVariant:]
  -[PBUIPosterWallpaperRemoteViewController wallpaperPresentingDelegate]
  -[PBUIPosterWallpaperRemoteViewController reachabilityCoordinator]
  -[PBUIPosterWallpaperRemoteViewController setWallpaperPresentingDelegate:]
  -[PBUIPosterWallpaperRemoteViewController supportedInterfaceOrientations]
  -[PBUIPosterWallpaperRemoteViewController shouldAutomaticallyForwardAppearanceMethods]
  -[PBUIPosterWallpaperRemoteViewController _wallpaperScaleAssertionForVariant:scale:]
  -[PBUIPosterWallpaperRemoteViewController viewDidDisappear:]
  -[PBUIPosterWallpaperRemoteViewController setWallpaperStyleTransitionState:forPriority:forVariant:withAnimationFactory:]
  -[PBUIPosterWallpaperRemoteViewController viewWillDisappear:]
  -[PBUIPosterWallpaperRemoteViewController setLockscreenWallpaperScale:withAnimationFactory:]
  -[PBUIPosterWallpaperRemoteViewController createWallpaperFloatingViewForReason:ignoreReplica:]
  -[PBUIPosterWallpaperRemoteViewController updateWallpaperAnimationWithWakeSourceIsSwipeToUnlock:]
  -[PBUIPosterWallpaperRemoteViewController succinctDescriptionBuilder]
  -[PBUIPosterWallpaperRemoteViewController contrastInRect:forVariant:]
  -[PBUIPosterWallpaperRemoteViewController removeObserver:]
  -[PBUIPosterWallpaperRemoteViewController minimumLockscreenWallpaperScale]
  -[PBUIPosterWallpaperRemoteViewController wallpaperConfigurationManager]
  -[PBUIPosterWallpaperRemoteViewController updateWallpaperAnimationWithProgress:]
  -[PBUIPosterWallpaperRemoteViewController newFakeBlurViewForVariant:style:transformOptions:]
  -[PBUIPosterWallpaperRemoteViewController _unregisterFakeBlurView:]
  -[PBUIPosterWallpaperRemoteViewController setWallpaperFloatingLayerContainerView:forReason:withAnimationFactory:]
  -[PBUIPosterWallpaperRemoteViewController newImageProviderView]
  -[PBUIPosterWallpaperRemoteViewController minimumHomescreenWallpaperScale]


PBUIPosterPortalImageProvider : NSObject <PBUIFakeBlurImageProviding>
 @property  PBUIPosterWallpaperViewController *rootObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIPosterPortalImageProvider updateImageProviderView:withImage:]
  -[PBUIPosterPortalImageProvider zoomFactorForVariant:]
  -[PBUIPosterPortalImageProvider .cxx_destruct]
  -[PBUIPosterPortalImageProvider parallaxFactorForVariant:]
  -[PBUIPosterPortalImageProvider imageForWallpaperStyle:variant:traitCollection:]
  -[PBUIPosterPortalImageProvider rootObject]
  -[PBUIPosterPortalImageProvider parallaxEnabledForVariant:]
  -[PBUIPosterPortalImageProvider newImageProviderView]
  -[PBUIPosterPortalImageProvider initWithRootObject:]


PBUIPosterActiveVariantImageProvider : NSObject <PBUIFakeBlurImageProviding>
 @property  PBUIPosterWallpaperViewController *rootObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIPosterActiveVariantImageProvider updateImageProviderView:withImage:]
  -[PBUIPosterActiveVariantImageProvider zoomFactorForVariant:]
  -[PBUIPosterActiveVariantImageProvider .cxx_destruct]
  -[PBUIPosterActiveVariantImageProvider parallaxFactorForVariant:]
  -[PBUIPosterActiveVariantImageProvider imageForWallpaperStyle:variant:traitCollection:]
  -[PBUIPosterActiveVariantImageProvider rootObject]
  -[PBUIPosterActiveVariantImageProvider parallaxEnabledForVariant:]
  -[PBUIPosterActiveVariantImageProvider newImageProviderView]
  -[PBUIPosterActiveVariantImageProvider initWithRootObject:]


PBUIWallpaperWindowSceneSettings : UIApplicationSceneSettings
 @property  long long wallpaperVariant
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} lockscreenWallpaperContentsRect
 @property  double lockscreenWallpaperAlpha
 @property  double homescreenWallpaperAlpha
 @property  double lockscreenOnlyWallpaperAlpha
 @property  BOOL disallowHomescreenRasterization
 @property  BOOL disallowLockscreenRasterization
 @property  BOOL homescreenWallpaperHidden
 @property  BOOL lockscreenWallpaperHidden
 @property  BOOL wallpaperAnimationSuspended
 @property  BOOL wallpaperRequired
 @property  BOOL homescreenStyleChangesDelayed
 @property  NSString *cachingIdentifier
 @property  PBUIWallpaperWindowSceneStyleTransitionState *homescreenStyleTransitionState
 @property  PBUIWallpaperWindowSceneStyleTransitionState *lockscreenStyleTransitionState
 @property  BOOL liveWallpaperTouchActive
 @property  BOOL liveWallpaperInteractive

  // instance methods
  -[PBUIWallpaperWindowSceneSettings valueDescriptionForFlag:object:ofSetting:]
  -[PBUIWallpaperWindowSceneSettings keyDescriptionForSetting:]
  -[PBUIWallpaperWindowSceneSettings mutableCopyWithZone:]
  -[PBUIWallpaperWindowSceneSettings cachingIdentifier]
  -[PBUIWallpaperWindowSceneSettings wallpaperVariant]
  -[PBUIWallpaperWindowSceneSettings lockscreenWallpaperContentsRect]
  -[PBUIWallpaperWindowSceneSettings lockscreenWallpaperAlpha]
  -[PBUIWallpaperWindowSceneSettings homescreenWallpaperAlpha]
  -[PBUIWallpaperWindowSceneSettings lockscreenOnlyWallpaperAlpha]
  -[PBUIWallpaperWindowSceneSettings disallowHomescreenRasterization]
  -[PBUIWallpaperWindowSceneSettings disallowLockscreenRasterization]
  -[PBUIWallpaperWindowSceneSettings wallpaperAnimationSuspended]
  -[PBUIWallpaperWindowSceneSettings wallpaperRequired]
  -[PBUIWallpaperWindowSceneSettings homescreenStyleChangesDelayed]
  -[PBUIWallpaperWindowSceneSettings homescreenStyleTransitionState]
  -[PBUIWallpaperWindowSceneSettings lockscreenStyleTransitionState]
  -[PBUIWallpaperWindowSceneSettings liveWallpaperTouchActive]
  -[PBUIWallpaperWindowSceneSettings liveWallpaperInteractive]
  -[PBUIWallpaperWindowSceneSettings homescreenWallpaperHidden]
  -[PBUIWallpaperWindowSceneSettings lockscreenWallpaperHidden]


PBUIMutableWallpaperWindowSceneSettings : UIMutableApplicationSceneSettings
 @property  long long wallpaperVariant
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} lockscreenWallpaperContentsRect
 @property  double lockscreenWallpaperAlpha
 @property  double homescreenWallpaperAlpha
 @property  double lockscreenOnlyWallpaperAlpha
 @property  BOOL disallowHomescreenRasterization
 @property  BOOL disallowLockscreenRasterization
 @property  BOOL homescreenWallpaperHidden
 @property  BOOL lockscreenWallpaperHidden
 @property  BOOL wallpaperAnimationSuspended
 @property  BOOL wallpaperRequired
 @property  BOOL homescreenStyleChangesDelayed
 @property  NSString *cachingIdentifier
 @property  PBUIWallpaperWindowSceneStyleTransitionState *homescreenStyleTransitionState
 @property  PBUIWallpaperWindowSceneStyleTransitionState *lockscreenStyleTransitionState
 @property  BOOL liveWallpaperTouchActive
 @property  BOOL liveWallpaperInteractive

  // instance methods
  -[PBUIMutableWallpaperWindowSceneSettings valueDescriptionForFlag:object:ofSetting:]
  -[PBUIMutableWallpaperWindowSceneSettings copyWithZone:]
  -[PBUIMutableWallpaperWindowSceneSettings keyDescriptionForSetting:]
  -[PBUIMutableWallpaperWindowSceneSettings cachingIdentifier]
  -[PBUIMutableWallpaperWindowSceneSettings setLockscreenOnlyWallpaperAlpha:]
  -[PBUIMutableWallpaperWindowSceneSettings wallpaperVariant]
  -[PBUIMutableWallpaperWindowSceneSettings lockscreenWallpaperContentsRect]
  -[PBUIMutableWallpaperWindowSceneSettings lockscreenWallpaperAlpha]
  -[PBUIMutableWallpaperWindowSceneSettings homescreenWallpaperAlpha]
  -[PBUIMutableWallpaperWindowSceneSettings lockscreenOnlyWallpaperAlpha]
  -[PBUIMutableWallpaperWindowSceneSettings disallowHomescreenRasterization]
  -[PBUIMutableWallpaperWindowSceneSettings disallowLockscreenRasterization]
  -[PBUIMutableWallpaperWindowSceneSettings wallpaperAnimationSuspended]
  -[PBUIMutableWallpaperWindowSceneSettings wallpaperRequired]
  -[PBUIMutableWallpaperWindowSceneSettings homescreenStyleChangesDelayed]
  -[PBUIMutableWallpaperWindowSceneSettings homescreenStyleTransitionState]
  -[PBUIMutableWallpaperWindowSceneSettings lockscreenStyleTransitionState]
  -[PBUIMutableWallpaperWindowSceneSettings liveWallpaperTouchActive]
  -[PBUIMutableWallpaperWindowSceneSettings liveWallpaperInteractive]
  -[PBUIMutableWallpaperWindowSceneSettings homescreenWallpaperHidden]
  -[PBUIMutableWallpaperWindowSceneSettings lockscreenWallpaperHidden]
  -[PBUIMutableWallpaperWindowSceneSettings setCachingIdentifier:]
  -[PBUIMutableWallpaperWindowSceneSettings setLockscreenWallpaperContentsRect:]
  -[PBUIMutableWallpaperWindowSceneSettings setWallpaperVariant:]
  -[PBUIMutableWallpaperWindowSceneSettings setLockscreenWallpaperAlpha:]
  -[PBUIMutableWallpaperWindowSceneSettings setHomescreenWallpaperAlpha:]
  -[PBUIMutableWallpaperWindowSceneSettings setDisallowHomescreenRasterization:]
  -[PBUIMutableWallpaperWindowSceneSettings setDisallowLockscreenRasterization:]
  -[PBUIMutableWallpaperWindowSceneSettings setHomescreenWallpaperHidden:]
  -[PBUIMutableWallpaperWindowSceneSettings setLockscreenWallpaperHidden:]
  -[PBUIMutableWallpaperWindowSceneSettings setWallpaperAnimationSuspended:]
  -[PBUIMutableWallpaperWindowSceneSettings setWallpaperRequired:]
  -[PBUIMutableWallpaperWindowSceneSettings setHomescreenStyleChangesDelayed:]
  -[PBUIMutableWallpaperWindowSceneSettings setHomescreenStyleTransitionState:]
  -[PBUIMutableWallpaperWindowSceneSettings setLockscreenStyleTransitionState:]
  -[PBUIMutableWallpaperWindowSceneSettings setLiveWallpaperTouchActive:]
  -[PBUIMutableWallpaperWindowSceneSettings setLiveWallpaperInteractive:]


PBUIWallpaperDefaultsDomain : BSAbstractDefaultDomain
 @property  NSDictionary *homeScreenWallpapers
 @property  NSDictionary *lockScreenWallpapers
 @property  BOOL enableWallpaperDimming
 @property  NSDate *dateWallpaperLastChanged
 @property  NSDate *dateIrisWallpaperLastPlayed
 @property  unsigned long irisWallpaperPlayCount
 @property  BOOL legacyUsesUniqueHomeScreenWallpaper

  // instance methods
  -[PBUIWallpaperDefaultsDomain init]
  -[PBUIWallpaperDefaultsDomain _bindAndRegisterDefaults]
  -[PBUIWallpaperDefaultsDomain clearLegacyDefaults]


PBUIWallpaperFloatingLayerAssertion : BSSimpleAssertion <PBUIWallpaperAnimatedInvalidating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIWallpaperFloatingLayerAssertion descriptionWithMultilinePrefix:]
  -[PBUIWallpaperFloatingLayerAssertion descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperFloatingLayerAssertion dealloc]
  -[PBUIWallpaperFloatingLayerAssertion .cxx_destruct]
  -[PBUIWallpaperFloatingLayerAssertion succinctDescription]
  -[PBUIWallpaperFloatingLayerAssertion invalidateWithAnimationFactory:]
  -[PBUIWallpaperFloatingLayerAssertion invalidate]
  -[PBUIWallpaperFloatingLayerAssertion succinctDescriptionBuilder]


PBUIBokehWallpaperView : PBUIWallpaperView
 @property  CAGradientLayer *layer

  // class methods
  +[PBUIBokehWallpaperView layerClass]
  +[PBUIBokehWallpaperView allowsParallax]

  // instance methods
  -[PBUIBokehWallpaperView _wallpaperDidChange:]
  -[PBUIBokehWallpaperView wallpaperType]
  -[PBUIBokehWallpaperView cacheGroup]
  -[PBUIBokehWallpaperView initWithFrame:configuration:variant:cacheGroup:delegate:options:]
  -[PBUIBokehWallpaperView _generateImageFromImage:forBackdropParameters:includeTint:traitCollection:]
  -[PBUIBokehWallpaperView _needsFallbackImageForBackdropGeneratedImage:]
  -[PBUIBokehWallpaperView setWallpaperAnimationEnabled:]
  -[PBUIBokehWallpaperView isContentStatic]
  -[PBUIBokehWallpaperView layer]
  -[PBUIBokehWallpaperView isDisplayingWallpaperWithConfiguration:forVariant:]
  -[PBUIBokehWallpaperView _destroyDisplayLink]
  -[PBUIBokehWallpaperView _handleVariantChange]
  -[PBUIBokehWallpaperView snapshotImage]
  -[PBUIBokehWallpaperView _layerIsOutOfBounds:]
  -[PBUIBokehWallpaperView dealloc]
  -[PBUIBokehWallpaperView _createSnapshotBuffer]
  -[PBUIBokehWallpaperView _screenUndimmed:]
  -[PBUIBokehWallpaperView .cxx_destruct]
  -[PBUIBokehWallpaperView _styleModeChanged:]
  -[PBUIBokehWallpaperView _addBokehCircles:inBounds:]
  -[PBUIBokehWallpaperView _updateVariantStatus]
  -[PBUIBokehWallpaperView _toggleCircleAnimations:]
  -[PBUIBokehWallpaperView _updateOrientationIfNeeded]
  -[PBUIBokehWallpaperView _correctGyroValues:y:]
  -[PBUIBokehWallpaperView _screenDidUpdate:]
  -[PBUIBokehWallpaperView _computeAverageColor]
  -[PBUIBokehWallpaperView invalidate]
  -[PBUIBokehWallpaperView userInterfaceStyle]
  -[PBUIBokehWallpaperView _screenDimmed:]
  -[PBUIBokehWallpaperView _thermalStateIsCritical]
  -[PBUIBokehWallpaperView _thermalStateDidChange:]
  -[PBUIBokehWallpaperView _updateGradientAndFillColor]
  -[PBUIBokehWallpaperView _initDisplayLink]
  -[PBUIBokehWallpaperView didMoveToWindow]
  -[PBUIBokehWallpaperView _lowPowerModeIsEnabled]


PBUIWallpaperServer : NSObject <BSServiceConnectionListenerDelegate, PBUIWallpaperClientToServerInterface>
 @property  <PBUIWallpaperServerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIWallpaperServer activate]
  -[PBUIWallpaperServer setDelegate:]
  -[PBUIWallpaperServer delegate]
  -[PBUIWallpaperServer .cxx_destruct]
  -[PBUIWallpaperServer getWallpaperLegibilitySettingsForVariant:]
  -[PBUIWallpaperServer _queue_addConnection:]
  -[PBUIWallpaperServer invalidate]
  -[PBUIWallpaperServer _queue_removeConnection:]
  -[PBUIWallpaperServer init]
  -[PBUIWallpaperServer listener:didReceiveConnection:withContext:]
  -[PBUIWallpaperServer setWallpaperImage:adjustedImage:thumbnailData:imageHashData:wallpaperOptions:forLocations:currentWallpaperMode:]
  -[PBUIWallpaperServer setProceduralWallpaperIdentifier:options:locations:]
  -[PBUIWallpaperServer removeWallpaperVideo]
  -[PBUIWallpaperServer setWallpaperWithVideo:sandboxToken:cropRect:wallpaperMode:]
  -[PBUIWallpaperServer restoreDefaultWallpaper]
  -[PBUIWallpaperServer setWallpaperColor:darkColor:forLocations:]
  -[PBUIWallpaperServer setWallpaperGradient:forLocations:]
  -[PBUIWallpaperServer getWallpaperOptionsForVariant:]


PBUIFixedReplicaSourceProvider : NSObject <PBUIPosterReplicaPortalProviding, PBUIPosterReplicaSnapshotProviding, BSInvalidatable>
 @property  NSString *identifier
 @property  <PBUIReplicaPortalSource> *portalSource
 @property  <PBUIReplicaSnapshotSource> *snapshotSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIFixedReplicaSourceProvider identifier]
  -[PBUIFixedReplicaSourceProvider portalSourceForReplicaView:]
  -[PBUIFixedReplicaSourceProvider dealloc]
  -[PBUIFixedReplicaSourceProvider .cxx_destruct]
  -[PBUIFixedReplicaSourceProvider registerPortalSourceObserver:]
  -[PBUIFixedReplicaSourceProvider setIdentifier:]
  -[PBUIFixedReplicaSourceProvider invalidate]
  -[PBUIFixedReplicaSourceProvider init]
  -[PBUIFixedReplicaSourceProvider registerSnapshotSourceObserver:]
  -[PBUIFixedReplicaSourceProvider snapshotSourceForObserver:]
  -[PBUIFixedReplicaSourceProvider setPortalSource:]
  -[PBUIFixedReplicaSourceProvider setSnapshotSource:]
  -[PBUIFixedReplicaSourceProvider portalSource]
  -[PBUIFixedReplicaSourceProvider snapshotSource]


PBUIDynamicProviderWrapper : NSObject <PBUIPosterReplicaPortalProviding, PBUIPosterReplicaSnapshotProviding, BSInvalidatable>
 @property  NSString *identifier
 @property  id rootObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIDynamicProviderWrapper identifier]
  -[PBUIDynamicProviderWrapper portalSourceForReplicaView:]
  -[PBUIDynamicProviderWrapper dealloc]
  -[PBUIDynamicProviderWrapper .cxx_destruct]
  -[PBUIDynamicProviderWrapper registerPortalSourceObserver:]
  -[PBUIDynamicProviderWrapper rootObject]
  -[PBUIDynamicProviderWrapper setIdentifier:]
  -[PBUIDynamicProviderWrapper invalidate]
  -[PBUIDynamicProviderWrapper setRootObject:]
  -[PBUIDynamicProviderWrapper _snapshotProvider]
  -[PBUIDynamicProviderWrapper registerSnapshotSourceObserver:]
  -[PBUIDynamicProviderWrapper snapshotSourceForObserver:]
  -[PBUIDynamicProviderWrapper initWithRootObject:portalProvider:snapshotProvider:]
  -[PBUIDynamicProviderWrapper _portalProvider]


PBUISnapshotReplicaView : UIView <PBUIPosterReplicaView, PBUIFakeBluring, PBUIWallpaperPositioning>
 @property  BOOL subscribed
 @property  long long effectiveStyle
 @property  <PBUIPosterReplicaSnapshotProviding> *provider
 @property  <PBUIReplicaSnapshotSource> *source
 @property  NSString *reason
 @property  PBUIReplicaDebugView *debugView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PBUIFakeBlurObserver> *observer
 @property  double zoomScale
 @property  unsigned long transformOptions
 @property  BOOL shouldMatchWallpaperPosition
 @property  BOOL fullscreen

  // instance methods
  -[PBUISnapshotReplicaView source]
  -[PBUISnapshotReplicaView zoomScale]
  -[PBUISnapshotReplicaView setTransformOptions:]
  -[PBUISnapshotReplicaView willMoveToSuperview:]
  -[PBUISnapshotReplicaView setZoomScale:]
  -[PBUISnapshotReplicaView transformOptions]
  -[PBUISnapshotReplicaView debugView]
  -[PBUISnapshotReplicaView effectiveStyle]
  -[PBUISnapshotReplicaView dealloc]
  -[PBUISnapshotReplicaView shouldMatchWallpaperPosition]
  -[PBUISnapshotReplicaView .cxx_destruct]
  -[PBUISnapshotReplicaView provider]
  -[PBUISnapshotReplicaView didMoveToSuperview]
  -[PBUISnapshotReplicaView observer]
  -[PBUISnapshotReplicaView reason]
  -[PBUISnapshotReplicaView layoutSubviews]
  -[PBUISnapshotReplicaView setSubscribed:]
  -[PBUISnapshotReplicaView requestStyle:]
  -[PBUISnapshotReplicaView offsetWallpaperBy:]
  -[PBUISnapshotReplicaView setShouldMatchWallpaperPosition:]
  -[PBUISnapshotReplicaView invalidate]
  -[PBUISnapshotReplicaView initWithFrame:]
  -[PBUISnapshotReplicaView setObserver:]
  -[PBUISnapshotReplicaView willMoveToWindow:]
  -[PBUISnapshotReplicaView setProvider:]
  -[PBUISnapshotReplicaView setFullscreen:]
  -[PBUISnapshotReplicaView isSubscribed]
  -[PBUISnapshotReplicaView setReason:]
  -[PBUISnapshotReplicaView didMoveToWindow]
  -[PBUISnapshotReplicaView isFullscreen]
  -[PBUISnapshotReplicaView setNeedsSourceUpdate]
  -[PBUISnapshotReplicaView setNeedsProviderUpdate]
  -[PBUISnapshotReplicaView setEffectiveStyle:]


PBUIWallpaperConfiguration : NSObject <NSCopying, BSDescriptionProviding, NSSecureCoding>
 @property  long long variant
 @property  BOOL needsWallpaperDimmingTreatment
 @property  BOOL needsInactiveAppearanceTreatment
 @property  PBUIWallpaperImage *wallpaperImage
 @property  UIImage *wallpaperOriginalImage
 @property  UIImage *wallpaperThumbnailImage
 @property  NSData *wallpaperThumbnailImageData
 @property  NSData *wallpaperImageHashData
 @property  NSDictionary *proceduralWallpaperInfo
 @property  NSURL *videoURL
 @property  NSURL *originalVideoURL
 @property  PBUIWallpaperOptions *wallpaperOptions
 @property  UIColor *wallpaperColor
 @property  NSString *wallpaperColorName
 @property  PBUIWallpaperGradient *wallpaperGradient
 @property  long long wallpaperType
 @property  NSString *proceduralWallpaperIdentifier
 @property  NSDictionary *proceduralWallpaperOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBUIWallpaperConfiguration supportsSecureCoding]

  // instance methods
  -[PBUIWallpaperConfiguration wallpaperType]
  -[PBUIWallpaperConfiguration setVideoURL:]
  -[PBUIWallpaperConfiguration wallpaperColor]
  -[PBUIWallpaperConfiguration videoURL]
  -[PBUIWallpaperConfiguration wallpaperColorName]
  -[PBUIWallpaperConfiguration wallpaperImageHashData]
  -[PBUIWallpaperConfiguration setWallpaperOptions:]
  -[PBUIWallpaperConfiguration wallpaperImage]
  -[PBUIWallpaperConfiguration needsInactiveAppearanceTreatment]
  -[PBUIWallpaperConfiguration setNeedsInactiveAppearanceTreatment:]
  -[PBUIWallpaperConfiguration setWallpaperThumbnailImageData:]
  -[PBUIWallpaperConfiguration variant]
  -[PBUIWallpaperConfiguration descriptionWithMultilinePrefix:]
  -[PBUIWallpaperConfiguration encodeWithCoder:]
  -[PBUIWallpaperConfiguration initWithVariant:type:]
  -[PBUIWallpaperConfiguration wallpaperGradient]
  -[PBUIWallpaperConfiguration descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperConfiguration setWallpaperOriginalImage:]
  -[PBUIWallpaperConfiguration setNeedsWallpaperDimmingTreatment:]
  -[PBUIWallpaperConfiguration setWallpaperImageHashData:]
  -[PBUIWallpaperConfiguration .cxx_destruct]
  -[PBUIWallpaperConfiguration proceduralWallpaperInfo]
  -[PBUIWallpaperConfiguration setWallpaperGradient:]
  -[PBUIWallpaperConfiguration wallpaperThumbnailImageData]
  -[PBUIWallpaperConfiguration succinctDescription]
  -[PBUIWallpaperConfiguration wallpaperOriginalImage]
  -[PBUIWallpaperConfiguration setOriginalVideoURL:]
  -[PBUIWallpaperConfiguration proceduralWallpaperIdentifier]
  -[PBUIWallpaperConfiguration copyWithZone:]
  -[PBUIWallpaperConfiguration setProceduralWallpaperInfo:]
  -[PBUIWallpaperConfiguration setWallpaperThumbnailImage:]
  -[PBUIWallpaperConfiguration proceduralWallpaperOptions]
  -[PBUIWallpaperConfiguration succinctDescriptionBuilder]
  -[PBUIWallpaperConfiguration setWallpaperColor:]
  -[PBUIWallpaperConfiguration originalVideoURL]
  -[PBUIWallpaperConfiguration wallpaperThumbnailImage]
  -[PBUIWallpaperConfiguration needsWallpaperDimmingTreatment]
  -[PBUIWallpaperConfiguration setWallpaperColorName:]
  -[PBUIWallpaperConfiguration wallpaperOptions]
  -[PBUIWallpaperConfiguration setWallpaperImage:]
  -[PBUIWallpaperConfiguration isEqual:]
  -[PBUIWallpaperConfiguration init]
  -[PBUIWallpaperConfiguration initWithCoder:]


PBUIPosterVariantViewController : UIViewController <BSDescriptionProviding, FBSceneLayerManagerObserver, PBUIURLSourceDelegate, FBSceneObserver, PBUIColorStatisticsDelegate, PBUIPosterComponent>
 @property  <UIScenePresenter> *presenter
 @property  BSUIMappedImageCache *cache
 @property  PBUIColorStatistics *contentColorStatistics
 @property  PBUIPosterVariantViewController *counterpart
 @property  long long variant
 @property  FBScene *scene
 @property  UIColor *averageColor
 @property  double averageContrast
 @property  UIImage *snapshot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PBUIPosterComponentDelegate> *delegate
 @property  _UILegibilitySettings *legibilitySettings

  // class methods
  +[PBUIPosterVariantViewController snapshotFormat]

  // instance methods
  -[PBUIPosterVariantViewController snapshotIfNeeded]
  -[PBUIPosterVariantViewController snapshotSourceProvider]
  -[PBUIPosterVariantViewController setCounterpart:]
  -[PBUIPosterVariantViewController scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:]
  -[PBUIPosterVariantViewController snapshotSource:failedToReadSnapshotAtURL:error:]
  -[PBUIPosterVariantViewController initWithScene:storagePath:]
  -[PBUIPosterVariantViewController _updatePresentation]
  -[PBUIPosterVariantViewController setNeedsNewSnapshot]
  -[PBUIPosterVariantViewController averageContrast]
  -[PBUIPosterVariantViewController setBlurEnabled:]
  -[PBUIPosterVariantViewController _monitorScene:]
  -[PBUIPosterVariantViewController _canShowWhileLocked]
  -[PBUIPosterVariantViewController scene:clientDidConnect:]
  -[PBUIPosterVariantViewController invalidateSnapshotPreconditions]
  -[PBUIPosterVariantViewController sceneDidActivate:]
  -[PBUIPosterVariantViewController contentColorStatistics]
  -[PBUIPosterVariantViewController snapshotVersionForURL:]
  -[PBUIPosterVariantViewController legibilitySettingsDidChange]
  -[PBUIPosterVariantViewController sceneContentStateDidChange:]
  -[PBUIPosterVariantViewController _snapshotMetadataURL]
  -[PBUIPosterVariantViewController performSnapshotOnQueue:completion:]
  -[PBUIPosterVariantViewController initWithScene:cache:]
  -[PBUIPosterVariantViewController _snapshotURL]
  -[PBUIPosterVariantViewController _scheduleSnapshotIfNeeded]
  -[PBUIPosterVariantViewController _updateParallax]
  -[PBUIPosterVariantViewController setDelegate:]
  -[PBUIPosterVariantViewController portalSourceProvider]
  -[PBUIPosterVariantViewController updatePresentation]
  -[PBUIPosterVariantViewController snapshotContentDirectory]
  -[PBUIPosterVariantViewController _snapshot]
  -[PBUIPosterVariantViewController colorStatisticsDidChange:]
  -[PBUIPosterVariantViewController variant]
  -[PBUIPosterVariantViewController _posterInstanceURL]
  -[PBUIPosterVariantViewController descriptionWithMultilinePrefix:]
  -[PBUIPosterVariantViewController setSnapshotVersionForURL:]
  -[PBUIPosterVariantViewController postprocessNewSnapshot:colorStatistics:error:]
  -[PBUIPosterVariantViewController counterpart]
  -[PBUIPosterVariantViewController sceneWillDeactivate:withError:]
  -[PBUIPosterVariantViewController snapshotSource:failedToReadColorStatisticsAtURL:error:]
  -[PBUIPosterVariantViewController sceneLayerManagerDidUpdateLayers:]
  -[PBUIPosterVariantViewController delegate]
  -[PBUIPosterVariantViewController averageColor]
  -[PBUIPosterVariantViewController descriptionBuilderWithMultilinePrefix:]
  -[PBUIPosterVariantViewController areSettingsAppropriateForSnapshotting:]
  -[PBUIPosterVariantViewController scene:didApplyUpdateWithContext:]
  -[PBUIPosterVariantViewController initWithNibName:bundle:]
  -[PBUIPosterVariantViewController evaluateSnapshotPreconditions]
  -[PBUIPosterVariantViewController scene:didCompleteUpdateWithContext:error:]
  -[PBUIPosterVariantViewController makePortalSourceWithLegibilitySettings:]
  -[PBUIPosterVariantViewController setPosterAverageColor:]
  -[PBUIPosterVariantViewController snapshot]
  -[PBUIPosterVariantViewController cache]
  -[PBUIPosterVariantViewController .cxx_destruct]
  -[PBUIPosterVariantViewController viewDidLoad]
  -[PBUIPosterVariantViewController succinctDescription]
  -[PBUIPosterVariantViewController presenter]
  -[PBUIPosterVariantViewController invalidate]
  -[PBUIPosterVariantViewController succinctDescriptionBuilder]
  -[PBUIPosterVariantViewController scene]
  -[PBUIPosterVariantViewController legibilitySettings]
  -[PBUIPosterVariantViewController initWithCoder:]


PBUIURLBackedSnapshotSource : NSObject <PBUIColorStatisticsDelegate, PBUIReplicaSnapshotSource, PBUIPosterReplicaSnapshotProviding>
 @property  UIImage *snapshot
 @property  NSString *cacheIdentifier
 @property  BOOL valid
 @property  <PBUIURLSourceDelegate> *delegate
 @property  PBUIColorStatistics *contentColorStatistics
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSURL *url
 @property  NSURL *metadataURL
 @property  PBUIImageOnDiskFormat *format
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL effectsAreBakedIn

  // instance methods
  -[PBUIURLBackedSnapshotSource performBatchUpdates:]
  -[PBUIURLBackedSnapshotSource contentColorStatistics]
  -[PBUIURLBackedSnapshotSource setDelegate:]
  -[PBUIURLBackedSnapshotSource colorStatisticsDidChange:]
  -[PBUIURLBackedSnapshotSource descriptionWithMultilinePrefix:]
  -[PBUIURLBackedSnapshotSource metadataURL]
  -[PBUIURLBackedSnapshotSource delegate]
  -[PBUIURLBackedSnapshotSource descriptionBuilderWithMultilinePrefix:]
  -[PBUIURLBackedSnapshotSource setSnapshot:]
  -[PBUIURLBackedSnapshotSource setURL:]
  -[PBUIURLBackedSnapshotSource snapshot]
  -[PBUIURLBackedSnapshotSource isValid]
  -[PBUIURLBackedSnapshotSource .cxx_destruct]
  -[PBUIURLBackedSnapshotSource effectsAreBakedIn]
  -[PBUIURLBackedSnapshotSource notifyObservers]
  -[PBUIURLBackedSnapshotSource succinctDescription]
  -[PBUIURLBackedSnapshotSource setLegibilitySettings:]
  -[PBUIURLBackedSnapshotSource setCacheIdentifier:]
  -[PBUIURLBackedSnapshotSource format]
  -[PBUIURLBackedSnapshotSource url]
  -[PBUIURLBackedSnapshotSource succinctDescriptionBuilder]
  -[PBUIURLBackedSnapshotSource isEqual:]
  -[PBUIURLBackedSnapshotSource legibilitySettings]
  -[PBUIURLBackedSnapshotSource cacheIdentifier]
  -[PBUIURLBackedSnapshotSource setMetadataURL:]
  -[PBUIURLBackedSnapshotSource registerSnapshotSourceObserver:]
  -[PBUIURLBackedSnapshotSource snapshotSourceForObserver:]
  -[PBUIURLBackedSnapshotSource initWithURL:format:metadataURL:delegate:]
  -[PBUIURLBackedSnapshotSource updateWithImage:contentColorStatistics:error:]
  -[PBUIURLBackedSnapshotSource updateColorStatisticsWith:]
  -[PBUIURLBackedSnapshotSource updateFromDisk]
  -[PBUIURLBackedSnapshotSource readFromDiskWithError:]
  -[PBUIURLBackedSnapshotSource saveColorStatistics]
  -[PBUIURLBackedSnapshotSource readColorStatisticsFromDisk]
  -[PBUIURLBackedSnapshotSource notifyObserversIfNeeded]
  -[PBUIURLBackedSnapshotSource buildCacheIdentifier]
  -[PBUIURLBackedSnapshotSource encoderForSnapshot]


PBUIColorWallpaperView : PBUIWallpaperView
 @property  UIImage *cachedSnapshotImage
 @property  UIColor *wallpaperColor

  // instance methods
  -[PBUIColorWallpaperView wallpaperType]
  -[PBUIColorWallpaperView initWithFrame:configuration:variant:cacheGroup:delegate:options:]
  -[PBUIColorWallpaperView averageColorInRect:withSmudgeRadius:]
  -[PBUIColorWallpaperView wallpaperColor]
  -[PBUIColorWallpaperView isDisplayingWallpaperWithConfiguration:forVariant:]
  -[PBUIColorWallpaperView contrastInRect:contrastWithinBoxes:contrastBetweenBoxes:]
  -[PBUIColorWallpaperView cachedSnapshotImage]
  -[PBUIColorWallpaperView snapshotImage]
  -[PBUIColorWallpaperView setCachedSnapshotImage:]
  -[PBUIColorWallpaperView .cxx_destruct]
  -[PBUIColorWallpaperView _computeAverageColor]


PBUIReplicaSourceObserverBox : NSObject <NSFastEnumeration, PBUIPosterReplicaSourceObserver, BSInvalidatable>
 @property  long long effectiveStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIReplicaSourceObserverBox countByEnumeratingWithState:objects:count:]
  -[PBUIReplicaSourceObserverBox effectiveStyle]
  -[PBUIReplicaSourceObserverBox dealloc]
  -[PBUIReplicaSourceObserverBox .cxx_destruct]
  -[PBUIReplicaSourceObserverBox initWithIdentifier:]
  -[PBUIReplicaSourceObserverBox invalidate]
  -[PBUIReplicaSourceObserverBox init]
  -[PBUIReplicaSourceObserverBox setNeedsSourceUpdate]
  -[PBUIReplicaSourceObserverBox initWithIdentifier:activeStateDidChangeHandler:]
  -[PBUIReplicaSourceObserverBox registerSourceObserver:]


PBUIColorStatistics : NSObject <NSCopying, NSSecureCoding>
  // class methods
  +[PBUIColorStatistics supportsSecureCoding]

  // instance methods
  -[PBUIColorStatistics encodeWithCoder:]
  -[PBUIColorStatistics .cxx_destruct]
  -[PBUIColorStatistics copyWithZone:]
  -[PBUIColorStatistics initWithCoder:]


PBUIBokehImageArbiter : NSObject

PBUIRemoteIrisWallpaperPlayer : NSObject <UIGestureRecognizerDelegate, PBUIIrisWallpaperPlaying>
 @property  BOOL touchActive
 @property  <PBUIRemoteIrisWallpaperPlayerDelegate> *delegate
 @property  long long irisPlaybackState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PBUIIrisWallpaperPlayerDelegate> *irisDelegate
 @property  BOOL isIrisInteracting
 @property  double stillTimeInVideo
 @property  UIGestureRecognizer *irisGestureRecognizer
 @property  NSURL *videoFileURL

  // instance methods
  -[PBUIRemoteIrisWallpaperPlayer videoFileURL]
  -[PBUIRemoteIrisWallpaperPlayer isIrisInteracting]
  -[PBUIRemoteIrisWallpaperPlayer irisPlaybackState]
  -[PBUIRemoteIrisWallpaperPlayer setIrisDelegate:]
  -[PBUIRemoteIrisWallpaperPlayer setDelegate:]
  -[PBUIRemoteIrisWallpaperPlayer irisGestureRecognizer]
  -[PBUIRemoteIrisWallpaperPlayer delegate]
  -[PBUIRemoteIrisWallpaperPlayer stillTimeInVideo]
  -[PBUIRemoteIrisWallpaperPlayer .cxx_destruct]
  -[PBUIRemoteIrisWallpaperPlayer irisDelegate]
  -[PBUIRemoteIrisWallpaperPlayer init]
  -[PBUIRemoteIrisWallpaperPlayer _wallpaperGestureChanged:]
  -[PBUIRemoteIrisWallpaperPlayer _setIrisPlaybackState:]
  -[PBUIRemoteIrisWallpaperPlayer _handleWallpaperGestureBegan]
  -[PBUIRemoteIrisWallpaperPlayer _handleWallpaperGestureChanged]
  -[PBUIRemoteIrisWallpaperPlayer _handleWallpaperGestureEnded]
  -[PBUIRemoteIrisWallpaperPlayer _setTouchActive:]
  -[PBUIRemoteIrisWallpaperPlayer isTouchActive]


PBUIColorBoxes : NSObject <NSSecureCoding>
  // class methods
  +[PBUIColorBoxes supportsSecureCoding]

  // instance methods
  -[PBUIColorBoxes encodeWithCoder:]
  -[PBUIColorBoxes dealloc]
  -[PBUIColorBoxes initWithCoder:]


PBUIPosterViewController : UIViewController <FBSceneDelegate, BSDescriptionProviding, PBUIPosterUpdating, PBUIPosterComponent>
 @property  long long activeVariant
 @property  long long activeOrientation
 @property  BOOL activelyRequired
 @property  long long activeStyle
 @property  double unlockProgress
 @property  BOOL landscapeBlurEnabled
 @property  PRSPosterConfiguration *activeConfiguration
 @property  PRSPosterConfiguration *associatedConfiguration
 @property  <BSPathProviding> *storagePath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL wakeSourceIsSwipeToUnlock
 @property  <PBUIPosterComponentDelegate> *delegate
 @property  long long variant
 @property  UIColor *averageColor
 @property  double averageContrast
 @property  _UILegibilitySettings *legibilitySettings

  // instance methods
  -[PBUIPosterViewController requireWallpaperRasterizationWithReason:]
  -[PBUIPosterViewController updateConfiguration:]
  -[PBUIPosterViewController posterComponent:didUpdateLegibilitySettings:]
  -[PBUIPosterViewController averageColorForVariant:]
  -[PBUIPosterViewController setWakeSourceIsSwipeToUnlock:]
  -[PBUIPosterViewController setActiveVariant:]
  -[PBUIPosterViewController activeVariant]
  -[PBUIPosterViewController legibilitySettingsForVariant:]
  -[PBUIPosterViewController finishUnlockWithAnimationParameters:]
  -[PBUIPosterViewController snapshotSourceProviderForActiveVariant]
  -[PBUIPosterViewController scenesForBacklightSession]
  -[PBUIPosterViewController setLandscapeBlurEnabled:]
  -[PBUIPosterViewController averageContrast]
  -[PBUIPosterViewController _canShowWhileLocked]
  -[PBUIPosterViewController scene:clientDidConnect:]
  -[PBUIPosterViewController activeStyle]
  -[PBUIPosterViewController makeImageCacheForVariant:]
  -[PBUIPosterViewController landscapeBlurEnabled]
  -[PBUIPosterViewController activateWithCompletion:]
  -[PBUIPosterViewController sceneDidDeactivate:withError:]
  -[PBUIPosterViewController setDelegate:]
  -[PBUIPosterViewController activeOrientation]
  -[PBUIPosterViewController variant]
  -[PBUIPosterViewController descriptionWithMultilinePrefix:]
  -[PBUIPosterViewController setActivelyRequired:]
  -[PBUIPosterViewController setActiveOrientation:]
  -[PBUIPosterViewController _updateRasterization]
  -[PBUIPosterViewController delegate]
  -[PBUIPosterViewController _updatePosterScenesWithCompletion:]
  -[PBUIPosterViewController averageColor]
  -[PBUIPosterViewController descriptionBuilderWithMultilinePrefix:]
  -[PBUIPosterViewController _viewControllerForVariant:]
  -[PBUIPosterViewController viewWillLayoutSubviews]
  -[PBUIPosterViewController portalSourceProviderForVariant:]
  -[PBUIPosterViewController .cxx_destruct]
  -[PBUIPosterViewController unlockProgress]
  -[PBUIPosterViewController viewDidLoad]
  -[PBUIPosterViewController updateHomeScene]
  -[PBUIPosterViewController setUnlockProgress:]
  -[PBUIPosterViewController activeConfiguration]
  -[PBUIPosterViewController succinctDescription]
  -[PBUIPosterViewController storagePath]
  -[PBUIPosterViewController _replicaProviderForVariant:]
  -[PBUIPosterViewController updateLegacyPoster]
  -[PBUIPosterViewController _updateLegibilitySettings:]
  -[PBUIPosterViewController snapshotSourceProviderForVariant:]
  -[PBUIPosterViewController scene:willUpdateSettings:withTransitionContext:]
  -[PBUIPosterViewController handlesWakeAnimation]
  -[PBUIPosterViewController averageContrastForVariant:]
  -[PBUIPosterViewController _updateForActiveVariant]
  -[PBUIPosterViewController noteUserTapOccurred]
  -[PBUIPosterViewController _activeViewController]
  -[PBUIPosterViewController activelyRequired]
  -[PBUIPosterViewController scene:didReceiveActions:]
  -[PBUIPosterViewController posterProviderBundleID]
  -[PBUIPosterViewController invalidate]
  -[PBUIPosterViewController portalSourceProviderForActiveVariant]
  -[PBUIPosterViewController _updateLandscapeBlur]
  -[PBUIPosterViewController portalProviderForFloatingLayer]
  -[PBUIPosterViewController setActiveStyle:]
  -[PBUIPosterViewController succinctDescriptionBuilder]
  -[PBUIPosterViewController updateAssociatedPosterConfiguration:]
  -[PBUIPosterViewController associatedConfiguration]
  -[PBUIPosterViewController traitCollectionDidChange:]
  -[PBUIPosterViewController wakeSourceIsSwipeToUnlock]
  -[PBUIPosterViewController legibilitySettings]
  -[PBUIPosterViewController _createHomeViewControllerIfNeeded]
  -[PBUIPosterViewController init]
  -[PBUIPosterViewController defaultStoragePath]
  -[PBUIPosterViewController homeScreenReflectsLockScreen]
  -[PBUIPosterViewController updatePoster:]


PBUIWallpaperDefaults : NSObject
 @property  PBUIWallpaperDefaultsDomain *defaultsDomain

  // class methods
  +[PBUIWallpaperDefaults defaults]

  // instance methods
  -[PBUIWallpaperDefaults resetDefaults]
  -[PBUIWallpaperDefaults resetParallaxFactorDefaults]
  -[PBUIWallpaperDefaults setZoomScale:forLocations:wallpaperMode:]
  -[PBUIWallpaperDefaults magnifyEnabledForVariant:wallpaperMode:]
  -[PBUIWallpaperDefaults parallaxFactorForVariant:wallpaperMode:]
  -[PBUIWallpaperDefaults supportsCroppingForVariant:wallpaperMode:]
  -[PBUIWallpaperDefaults wallpaperKitDataForVariant:wallpaperMode:]
  -[PBUIWallpaperDefaults resetHasVideoDefaults]
  -[PBUIWallpaperDefaults proceduralOptionsForVariant:]
  -[PBUIWallpaperDefaults imageHashForVariant:wallpaperMode:]
  -[PBUIWallpaperDefaults _setDefaultsWithDictionary:variant:wallpaperMode:]
  -[PBUIWallpaperDefaults cropRectForVariant:wallpaperMode:]
  -[PBUIWallpaperDefaults setName:forLocations:wallpaperMode:]
  -[PBUIWallpaperDefaults defaultsDomain]
  -[PBUIWallpaperDefaults stillTimeInVideo]
  -[PBUIWallpaperDefaults isPortraitForVariant:wallpaperMode:]
  -[PBUIWallpaperDefaults setImageHash:forLocations:wallpaperMode:]
  -[PBUIWallpaperDefaults setParallaxFactor:forLocations:wallpaperMode:]
  -[PBUIWallpaperDefaults .cxx_destruct]
  -[PBUIWallpaperDefaults nameForVariant:wallpaperMode:]
  -[PBUIWallpaperDefaults hasVideo]
  -[PBUIWallpaperDefaults resetNameDefaults]
  -[PBUIWallpaperDefaults initWithdefaultsDomain:]
  -[PBUIWallpaperDefaults setProceduralUserSet:forLocations:]
  -[PBUIWallpaperDefaults setColorName:forLocations:]
  -[PBUIWallpaperDefaults resetZoomScaleDefaults]
  -[PBUIWallpaperDefaults setHasVideo:]
  -[PBUIWallpaperDefaults setSupportsCropping:forLocations:wallpaperMode:]
  -[PBUIWallpaperDefaults resetStillTimeInVideoDefaults]
  -[PBUIWallpaperDefaults hasVideoForVariant:]
  -[PBUIWallpaperDefaults resetImageHashDefaults]
  -[PBUIWallpaperDefaults wallpaperOptionsForVariant:wallpaperMode:]
  -[PBUIWallpaperDefaults setProceduralOptions:forLocations:]
  -[PBUIWallpaperDefaults wallpaperColorDataForVariant:]
  -[PBUIWallpaperDefaults resetPortraitDefaults]
  -[PBUIWallpaperDefaults setWallpaperKitData:forLocations:wallpaperMode:]
  -[PBUIWallpaperDefaults updateDefaultsForLocations:updater:]
  -[PBUIWallpaperDefaults setPortrait:forLocations:wallpaperMode:]
  -[PBUIWallpaperDefaults _defaultsWrapperForVariant:wallpaperMode:]
  -[PBUIWallpaperDefaults resetCroppingDefaults]
  -[PBUIWallpaperDefaults setCropRect:forLocations:wallpaperMode:]
  -[PBUIWallpaperDefaults resetWallpaperKitDataDefaults]
  -[PBUIWallpaperDefaults setWallpaperOptions:forLocations:wallpaperMode:]
  -[PBUIWallpaperDefaults setStillTimeInVideo:]
  -[PBUIWallpaperDefaults stillTimeInVideoForVariant:]
  -[PBUIWallpaperDefaults proceduralUserSetForVariant:]
  -[PBUIWallpaperDefaults _updateDefaultsForVariant:wallpaperMode:updater:]
  -[PBUIWallpaperDefaults setColorData:forLocations:]
  -[PBUIWallpaperDefaults wallpaperGradientDataForVariant:]
  -[PBUIWallpaperDefaults resetMagnifyDefaults]
  -[PBUIWallpaperDefaults setMagnifyEnabled:forLocations:wallpaperMode:]
  -[PBUIWallpaperDefaults _keyForWallpaperMode:]
  -[PBUIWallpaperDefaults setGradientData:forLocations:]
  -[PBUIWallpaperDefaults setProceduralIdentifier:forLocations:]
  -[PBUIWallpaperDefaults init]
  -[PBUIWallpaperDefaults zoomScaleForVariant:wallpaperMode:]
  -[PBUIWallpaperDefaults proceduralIdentifierForVariant:]
  -[PBUIWallpaperDefaults wallpaperColorNameForVariant:]


PBUIWallpaperWindowSceneBSActionHandler : NSObject <_UISceneBSActionHandler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIWallpaperWindowSceneBSActionHandler _respondToActions:forFBSScene:inUIScene:fromTransitionContext:]


PBUIWallpaperUpdateAndPrewarmAction : BSAction
  // instance methods
  -[PBUIWallpaperUpdateAndPrewarmAction initWithResponder:]


PBUIWallpaperWindowSceneSettingsDiffInspector : UIApplicationSceneSettingsDiffInspector
  // instance methods
  -[PBUIWallpaperWindowSceneSettingsDiffInspector _observeOtherSetting:withBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeLockscreenOnlyWallpaperAlphaWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeHomescreenStyleTransitionStateWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeWallpaperAnimationSuspendedWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeLockscreenStyleTransitionStateWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeLockscreenWallpaperAlphaWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeDisallowLockscreenRasterizationWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeCachingIdentifierWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeLockscreenWallpaperContentsRectWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeLockscreenWallpaperHiddenWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeHomescreenWallpaperAlphaWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeHomescreenStyleChangesDelayedWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeWallpaperRequiredWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeHomescreenWallpaperHiddenWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeDisallowHomescreenRasterizationWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeWallpaperVariantWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeLiveWallpaperTouchActiveWithBlock:]
  -[PBUIWallpaperWindowSceneSettingsDiffInspector observeLiveWallpaperInteractiveWithBlock:]


PBUIWallpaperPrototypeSettings : PTSettings
 @property  PTOutlet *resetWallpaperOutlet
 @property  PBUIWallpaperParallaxSettings *homeScreenParallaxSettings
 @property  PBUIWallpaperParallaxSettings *lockScreenParallaxSettings

  // class methods
  +[PBUIWallpaperPrototypeSettings settingsControllerModule]

  // instance methods
  -[PBUIWallpaperPrototypeSettings lockScreenParallaxSettings]
  -[PBUIWallpaperPrototypeSettings setHomeScreenParallaxSettings:]
  -[PBUIWallpaperPrototypeSettings setDefaultValues]
  -[PBUIWallpaperPrototypeSettings setResetWallpaperOutlet:]
  -[PBUIWallpaperPrototypeSettings .cxx_destruct]
  -[PBUIWallpaperPrototypeSettings parallaxSettingsForVariant:]
  -[PBUIWallpaperPrototypeSettings homeScreenParallaxSettings]
  -[PBUIWallpaperPrototypeSettings resetWallpaperOutlet]
  -[PBUIWallpaperPrototypeSettings setLockScreenParallaxSettings:]


PBUIWallpaperUserDefaultsDataStore : NSObject <PBUIWallpaperDataStore, BSDescriptionProviding>
 @property  PBUIWallpaperDefaults *wallpaperDefaults
 @property  PBUIWallpaperDefaultsDomain *defaultsDomain
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIWallpaperUserDefaultsDataStore removeProceduralWallpaperForVariants:]
  -[PBUIWallpaperUserDefaultsDataStore wallpaperThumbnailDataForVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore setWallpaperColor:forVariants:]
  -[PBUIWallpaperUserDefaultsDataStore setWallpaperImage:forVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore descriptionWithMultilinePrefix:]
  -[PBUIWallpaperUserDefaultsDataStore setWallpaperColorName:forVariants:]
  -[PBUIWallpaperUserDefaultsDataStore descriptionBuilderWithMultilinePrefix:]
  -[PBUIWallpaperUserDefaultsDataStore setVideoURL:forVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore defaultsDomain]
  -[PBUIWallpaperUserDefaultsDataStore setWallpaperGradient:forVariants:]
  -[PBUIWallpaperUserDefaultsDataStore wallpaperImageHashDataForVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore updateProceduralWallpaperDefaultsWithIdentifier:options:forVariant:]
  -[PBUIWallpaperUserDefaultsDataStore .cxx_destruct]
  -[PBUIWallpaperUserDefaultsDataStore initWithUserdefaultsDomain:]
  -[PBUIWallpaperUserDefaultsDataStore unverifiedVideoURLForVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore verifiedVideoURLForVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore setOriginalVideoURL:forVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore setWallpaperImageHashData:forVariants:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore succinctDescription]
  -[PBUIWallpaperUserDefaultsDataStore wallpaperOriginalImageForVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore wallpaperGradientForVariant:]
  -[PBUIWallpaperUserDefaultsDataStore moveWallpaperImageDataTypes:fromVariant:toVariant:]
  -[PBUIWallpaperUserDefaultsDataStore wallpaperColorForVariant:]
  -[PBUIWallpaperUserDefaultsDataStore wallpaperOptionsForVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore supportsWallpaperImageHashDataStorage]
  -[PBUIWallpaperUserDefaultsDataStore hasWallpaperImageForVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore removeWallpaperColorForVariants:]
  -[PBUIWallpaperUserDefaultsDataStore removeVideoForVariant:]
  -[PBUIWallpaperUserDefaultsDataStore setWallpaperOriginalImage:forVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore removeWallpaperOptionsForVariants:]
  -[PBUIWallpaperUserDefaultsDataStore setWallpaperOptions:forVariants:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore setWallpaperThumbnailData:forVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore removeWallpaperImageDataTypes:forVariants:]
  -[PBUIWallpaperUserDefaultsDataStore proceduralWallpaperInfoForVariant:]
  -[PBUIWallpaperUserDefaultsDataStore succinctDescriptionBuilder]
  -[PBUIWallpaperUserDefaultsDataStore setProceduralWallpaperInfo:forVariants:]
  -[PBUIWallpaperUserDefaultsDataStore removeWallpaperImageHashDataForVariants:]
  -[PBUIWallpaperUserDefaultsDataStore verifiedOriginalVideoURLForVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore init]
  -[PBUIWallpaperUserDefaultsDataStore removeWallpaperGradientForVariants:]
  -[PBUIWallpaperUserDefaultsDataStore wallpaperColorNameForVariant:]
  -[PBUIWallpaperUserDefaultsDataStore wallpaperImageForVariant:wallpaperMode:]
  -[PBUIWallpaperUserDefaultsDataStore wallpaperDefaults]


PBUIDefaultSessionReconnectPolicy : NSObject <PBUISessionReconnectPolicy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIDefaultSessionReconnectPolicy .cxx_destruct]
  -[PBUIDefaultSessionReconnectPolicy init]
  -[PBUIDefaultSessionReconnectPolicy sessionDidDisconnect]
  -[PBUIDefaultSessionReconnectPolicy sessionReconnectDelay]


PBUIWallpaperServiceInterfaceSpecification : NSObject
  // class methods
  +[PBUIWallpaperServiceInterfaceSpecification interface]
  +[PBUIWallpaperServiceInterfaceSpecification identifier]
  +[PBUIWallpaperServiceInterfaceSpecification serviceQuality]


PBUIWallpaperWindowSceneClientSettings : UIApplicationSceneClientSettings
 @property  double homescreenMinimumWallpaperScale
 @property  double lockscreenMinimumWallpaperScale
 @property  _UILegibilitySettings *homescreenLegibilitySettings
 @property  _UILegibilitySettings *lockscreenLegibilitySettings
 @property  UIColor *homescreenAverageColor
 @property  UIColor *lockscreenAverageColor
 @property  double homescreenContrast
 @property  double lockscreenContrast
 @property  double homescreenParallaxFactor
 @property  double lockscreenParallaxFactor
 @property  BOOL homescreenParallaxEnabled
 @property  BOOL lockscreenParallaxEnabled
 @property  double homescreenZoomFactor
 @property  double lockscreenZoomFactor
 @property  BOOL homescreenContentStatic
 @property  BOOL lockscreenContentStatic
 @property  BOOL lockscreenContentLiveWallpaper
 @property  long long liveWallpaperPlaybackState

  // instance methods
  -[PBUIWallpaperWindowSceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[PBUIWallpaperWindowSceneClientSettings keyDescriptionForSetting:]
  -[PBUIWallpaperWindowSceneClientSettings mutableCopyWithZone:]
  -[PBUIWallpaperWindowSceneClientSettings homescreenMinimumWallpaperScale]
  -[PBUIWallpaperWindowSceneClientSettings lockscreenMinimumWallpaperScale]
  -[PBUIWallpaperWindowSceneClientSettings homescreenLegibilitySettings]
  -[PBUIWallpaperWindowSceneClientSettings lockscreenLegibilitySettings]
  -[PBUIWallpaperWindowSceneClientSettings homescreenAverageColor]
  -[PBUIWallpaperWindowSceneClientSettings lockscreenAverageColor]
  -[PBUIWallpaperWindowSceneClientSettings homescreenContrast]
  -[PBUIWallpaperWindowSceneClientSettings lockscreenContrast]
  -[PBUIWallpaperWindowSceneClientSettings homescreenParallaxFactor]
  -[PBUIWallpaperWindowSceneClientSettings lockscreenParallaxFactor]
  -[PBUIWallpaperWindowSceneClientSettings homescreenParallaxEnabled]
  -[PBUIWallpaperWindowSceneClientSettings lockscreenParallaxEnabled]
  -[PBUIWallpaperWindowSceneClientSettings homescreenZoomFactor]
  -[PBUIWallpaperWindowSceneClientSettings lockscreenZoomFactor]
  -[PBUIWallpaperWindowSceneClientSettings isHomescreenContentStatic]
  -[PBUIWallpaperWindowSceneClientSettings isLockscreenContentStatic]
  -[PBUIWallpaperWindowSceneClientSettings isLockscreenContentLiveWallpaper]
  -[PBUIWallpaperWindowSceneClientSettings liveWallpaperPlaybackState]


PBUIMutableWallpaperWindowSceneClientSettings : UIMutableApplicationSceneClientSettings
 @property  double homescreenMinimumWallpaperScale
 @property  double lockscreenMinimumWallpaperScale
 @property  _UILegibilitySettings *homescreenLegibilitySettings
 @property  _UILegibilitySettings *lockscreenLegibilitySettings
 @property  UIColor *homescreenAverageColor
 @property  UIColor *lockscreenAverageColor
 @property  double homescreenContrast
 @property  double lockscreenContrast
 @property  double homescreenParallaxFactor
 @property  double lockscreenParallaxFactor
 @property  BOOL homescreenParallaxEnabled
 @property  BOOL lockscreenParallaxEnabled
 @property  double homescreenZoomFactor
 @property  double lockscreenZoomFactor
 @property  BOOL homescreenContentStatic
 @property  BOOL lockscreenContentStatic
 @property  BOOL lockscreenContentLiveWallpaper
 @property  long long liveWallpaperPlaybackState

  // instance methods
  -[PBUIMutableWallpaperWindowSceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[PBUIMutableWallpaperWindowSceneClientSettings copyWithZone:]
  -[PBUIMutableWallpaperWindowSceneClientSettings keyDescriptionForSetting:]
  -[PBUIMutableWallpaperWindowSceneClientSettings homescreenMinimumWallpaperScale]
  -[PBUIMutableWallpaperWindowSceneClientSettings setHomescreenMinimumWallpaperScale:]
  -[PBUIMutableWallpaperWindowSceneClientSettings lockscreenMinimumWallpaperScale]
  -[PBUIMutableWallpaperWindowSceneClientSettings setLockscreenMinimumWallpaperScale:]
  -[PBUIMutableWallpaperWindowSceneClientSettings homescreenLegibilitySettings]
  -[PBUIMutableWallpaperWindowSceneClientSettings setHomescreenLegibilitySettings:]
  -[PBUIMutableWallpaperWindowSceneClientSettings lockscreenLegibilitySettings]
  -[PBUIMutableWallpaperWindowSceneClientSettings setLockscreenLegibilitySettings:]
  -[PBUIMutableWallpaperWindowSceneClientSettings homescreenAverageColor]
  -[PBUIMutableWallpaperWindowSceneClientSettings setHomescreenAverageColor:]
  -[PBUIMutableWallpaperWindowSceneClientSettings lockscreenAverageColor]
  -[PBUIMutableWallpaperWindowSceneClientSettings setLockscreenAverageColor:]
  -[PBUIMutableWallpaperWindowSceneClientSettings homescreenContrast]
  -[PBUIMutableWallpaperWindowSceneClientSettings setHomescreenContrast:]
  -[PBUIMutableWallpaperWindowSceneClientSettings lockscreenContrast]
  -[PBUIMutableWallpaperWindowSceneClientSettings setLockscreenContrast:]
  -[PBUIMutableWallpaperWindowSceneClientSettings homescreenParallaxFactor]
  -[PBUIMutableWallpaperWindowSceneClientSettings setHomescreenParallaxFactor:]
  -[PBUIMutableWallpaperWindowSceneClientSettings lockscreenParallaxFactor]
  -[PBUIMutableWallpaperWindowSceneClientSettings setLockscreenParallaxFactor:]
  -[PBUIMutableWallpaperWindowSceneClientSettings homescreenParallaxEnabled]
  -[PBUIMutableWallpaperWindowSceneClientSettings setHomescreenParallaxEnabled:]
  -[PBUIMutableWallpaperWindowSceneClientSettings lockscreenParallaxEnabled]
  -[PBUIMutableWallpaperWindowSceneClientSettings setLockscreenParallaxEnabled:]
  -[PBUIMutableWallpaperWindowSceneClientSettings homescreenZoomFactor]
  -[PBUIMutableWallpaperWindowSceneClientSettings setHomescreenZoomFactor:]
  -[PBUIMutableWallpaperWindowSceneClientSettings lockscreenZoomFactor]
  -[PBUIMutableWallpaperWindowSceneClientSettings setLockscreenZoomFactor:]
  -[PBUIMutableWallpaperWindowSceneClientSettings isHomescreenContentStatic]
  -[PBUIMutableWallpaperWindowSceneClientSettings setHomescreenContentStatic:]
  -[PBUIMutableWallpaperWindowSceneClientSettings isLockscreenContentStatic]
  -[PBUIMutableWallpaperWindowSceneClientSettings setLockscreenContentStatic:]
  -[PBUIMutableWallpaperWindowSceneClientSettings isLockscreenContentLiveWallpaper]
  -[PBUIMutableWallpaperWindowSceneClientSettings liveWallpaperPlaybackState]
  -[PBUIMutableWallpaperWindowSceneClientSettings setLiveWallpaperPlaybackState:]
  -[PBUIMutableWallpaperWindowSceneClientSettings setLockscreenContentLiveWallpaper:]


PBUIWallpaperStaticBackgroundView : UIView
 @property  <BSInvalidatable> *wallpaperStyleAnimationAssertion
 @property  long long variant

  // instance methods
  -[PBUIWallpaperStaticBackgroundView wallpaperStyleAnimationAssertion]
  -[PBUIWallpaperStaticBackgroundView variant]
  -[PBUIWallpaperStaticBackgroundView dealloc]
  -[PBUIWallpaperStaticBackgroundView setVariant:]
  -[PBUIWallpaperStaticBackgroundView .cxx_destruct]
  -[PBUIWallpaperStaticBackgroundView setWallpaperStyleAnimationAssertion:]
  -[PBUIWallpaperStaticBackgroundView _beginSuspendingMotionEffectsForStyleIfNeeded]
  -[PBUIWallpaperStaticBackgroundView _endSuspendingMotionEffectsForStyleIfNeeded]
  -[PBUIWallpaperStaticBackgroundView _shouldSuspendMotionEffectsForStyle:]
  -[PBUIWallpaperStaticBackgroundView _shouldSuspendMotionEffectsForState:]
  -[PBUIWallpaperStaticBackgroundView _updateMotionEffectsForState:]
  -[PBUIWallpaperStaticBackgroundView initWithWallpaperPresenter:]
  -[PBUIWallpaperStaticBackgroundView setVariant:withOutAnimationFactory:inAnimationFactory:completion:]
  -[PBUIWallpaperStaticBackgroundView setWallpaperStyleTransitionState:forVariant:withAnimationFactory:]
  -[PBUIWallpaperStaticBackgroundView _effectViewForVariant:]
  -[PBUIWallpaperStaticBackgroundView _setEffectView:forVariant:]
  -[PBUIWallpaperStaticBackgroundView _newEffectViewForVariant:transitionState:]


PBUIImageSlot : NSObject
 @property  UIImage *image
 @property  <BSInvalidatable> *lifetimeToken

  // instance methods
  -[PBUIImageSlot _setImage:]
  -[PBUIImageSlot dealloc]
  -[PBUIImageSlot .cxx_destruct]
  -[PBUIImageSlot image]
  -[PBUIImageSlot initWithImage:lifetimeToken:]
  -[PBUIImageSlot _initWithImage:lifetimeToken:]
  -[PBUIImageSlot _deferredImageSlot]
  -[PBUIImageSlot lifetimeToken]


PBUIDeferredImageSlot : PBUIImageSlot
 @property  UIColor *fallbackColor

  // instance methods
  -[PBUIDeferredImageSlot .cxx_destruct]
  -[PBUIDeferredImageSlot fallbackColor]
  -[PBUIDeferredImageSlot updateWithImage:]
  -[PBUIDeferredImageSlot setFallbackColor:]
  -[PBUIDeferredImageSlot _deferredImageSlot]
  -[PBUIDeferredImageSlot initWithLifetimeToken:]
  -[PBUIDeferredImageSlot addImageSlotObserver:]
  -[PBUIDeferredImageSlot removeImageSlotObserver:]


PBUIImageSlotView : UIView <PBUIDeferredImageSlotObserving>
 @property  PBUIImageSlot *imageSlot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBUIImageSlotView .cxx_destruct]
  -[PBUIImageSlotView layoutSubviews]
  -[PBUIImageSlotView sizeThatFits:]
  -[PBUIImageSlotView intrinsicContentSize]
  -[PBUIImageSlotView _pointSize]
  -[PBUIImageSlotView imageSlot]
  -[PBUIImageSlotView setImageSlot:]
  -[PBUIImageSlotView deferredImageSlot:didUpdateImage:]
  -[PBUIImageSlotView _updateWithImage:]


PBUIWallpaperWillChangeAction : BSAction
 @property  long long variant

  // instance methods
  -[PBUIWallpaperWillChangeAction variant]
  -[PBUIWallpaperWillChangeAction valueDescriptionForFlag:object:ofSetting:]
  -[PBUIWallpaperWillChangeAction keyDescriptionForSetting:]
  -[PBUIWallpaperWillChangeAction initWithVariant:]


UIImage(PaperBoardUtilities)
	// class methods
	+[UIImage(PaperBoardUtilities) pbui_thumbnailImageForImage:]
	+[UIImage(PaperBoardUtilities) pbui_imageWithIOSurface:scale:orientation:]
	+[UIImage(PaperBoardUtilities) pbui_imageSnapshotFromLayer:buffer:]
	+[UIImage(PaperBoardUtilities) pbui_imageFromSceneSnapshot:]

	// instance methods
	-[UIImage(PaperBoardUtilities) pbui_CGImageBackedImage]
	-[UIImage(PaperBoardUtilities) wrappedIOSurface]
	-[UIImage(PaperBoardUtilities) pbui_CGImageBackedImageWithMaximumBitsPerComponent:]
	-[UIImage(PaperBoardUtilities) pbui_CGImageBackedImageWithMaximumBitsPerComponent:skipCIF10FitsInSRGBCheck:]
	-[UIImage(PaperBoardUtilities) pbui_cropImageWithRect:outputSize:]
	-[UIImage(PaperBoardUtilities) pbui_cropImageWithRect:outputSize:preservingAspectRatio:]
	-[UIImage(PaperBoardUtilities) pbui_cropImageWithRect:outputSize:canUseIOSurface:]
	-[UIImage(PaperBoardUtilities) pbui_cropImageWithRect:outputSize:preservingAspectRatio:canUseIOSurface:]
	-[UIImage(PaperBoardUtilities) pbui_scaleImage:]
	-[UIImage(PaperBoardUtilities) pbui_scaleImage:canUseIOSurface:]
	-[UIImage(PaperBoardUtilities) pbui_resizeImageToSize:preservingAspectRatio:]
	-[UIImage(PaperBoardUtilities) pbui_resizeImageToSize:]
	-[UIImage(PaperBoardUtilities) pbui_colorSpace]
	-[UIImage(PaperBoardUtilities) pbui_imageByManipulatingInDeviceColorSpaceWithBlock:]
	-[UIImage(PaperBoardUtilities) pbui_resizedImageForCurrentMagnifyMode]
	-[UIImage(PaperBoardUtilities) pbui_imageHashData]
	-[UIImage(PaperBoardUtilities) pbui_EXIFOrientation]

NSError(PBUIWallpaper)
	// instance methods
	-[NSError(PBUIWallpaper) pbui_isFileNotFoundError]

FBSSceneSettings(PaperBoard)
	// instance methods
	-[FBSSceneSettings(PaperBoard) pb_activeVariant]
	-[FBSSceneSettings(PaperBoard) pb_significantEventsCounter]
	-[FBSSceneSettings(PaperBoard) pb_animationSuspended]

UIScene(PaperBoard)
	// instance methods
	-[UIScene(PaperBoard) pb_activeVariant]
	-[UIScene(PaperBoard) pb_significantEventsCounter]
	-[UIScene(PaperBoard) pb_animationSuspended]
	-[UIScene(PaperBoard) pb_performUpdate:]

FBSSceneClientSettings(PaperBoard)
FBSMutableSceneSettings(PaperBoard)
	// instance methods
	-[FBSMutableSceneSettings(PaperBoard) pb_setActiveVariant:]
	-[FBSMutableSceneSettings(PaperBoard) pb_setAnimationSuspended:]
	-[FBSMutableSceneSettings(PaperBoard) pb_setSignificantEventsCounter:]
	-[FBSMutableSceneSettings(PaperBoard) pb_applyLegacySettings]

FBSMutableSceneClientSettings(PaperBoard)
FBSSceneTransitionContext(PosterBoard)
	// instance methods
	-[FBSSceneTransitionContext(PosterBoard) pb_homeAppearanceChanged]
	-[FBSSceneTransitionContext(PosterBoard) pb_setHomeAppearanceChanged:]

FBScene(PaperBoard)
	// instance methods
	-[FBScene(PaperBoard) pb_activate:]
	-[FBScene(PaperBoard) pb_activate:withCompletion:]
	-[FBScene(PaperBoard) pb_update:]
	-[FBScene(PaperBoard) pb_update:withCompletion:]

RBSProcessHandle(PaperBoard)
	// instance methods
	-[RBSProcessHandle(PaperBoard) pb_shortDesc]

(PaperBoardUI)
	// instance methods
	-[(PaperBoardUI) pbui_hexadecimalEncodedString]

NSFileManager(PBUITransientDirectory)
	// instance methods
	-[NSFileManager(PBUITransientDirectory) pbui_createTransientDirectoryAtURL:error:]

UIColor(PaperBoardUI)
	// class methods
	+[UIColor(PaperBoardUI) pbui_wallpaperColorForName:]

01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetExportSession 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableVideoComposition 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableVideoCompositionInstruction 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableVideoCompositionLayerInstruction 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAbstractDefaultDomain 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAction 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSActionResponder 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSActionResponse 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAnimationSettings 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAtomicFlag 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSColor 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSCompoundAssertion 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDescriptionBuilder 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDispatchQueueAttributes 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSEqualsBuilder 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSEventQueue 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSEventQueueEvent 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSHashBuilder 
01 00 0700 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSMutableServiceInterface 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSMutableSettings 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSObjCProtocol 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSPathProviderFactory 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSPlatform 
01 00 0700 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceConnection 
01 00 0700 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceConnectionEndpoint 
01 00 0700 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceConnectionListener 
01 00 0700 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceQuality 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSSimpleAssertion 
01 00 0600 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIAnimationFactory 
01 00 0600 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIMappedImageCache 
01 00 0600 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIMappedImageCacheOptions 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABackdropLayer 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMatchMoveAnimation 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CARenderer 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0200 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 0200 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBDisplayManager 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSMutableSceneClientSettings 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSMutableSceneSettings 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSSceneClientIdentity 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSSceneClientSettings 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSSceneClientSettingsDiffInspector 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSSceneSettings 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSSceneTransitionContext 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBScene 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSceneWorkspace 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBServiceClientAuthenticator 
01 00 0e00 /System/Library/Frameworks/IOSurface.framework/IOSurface: IOSurface 
01 00 1000 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1100 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTButtonRow 
01 00 1200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTChoiceRow 
01 00 1200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDomain 
01 00 1200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDrillDownRow 
01 00 1200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTEditFloatRow 
01 00 1200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTModule 
01 00 1200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTRestoreDefaultSettingsRowAction 
01 00 1200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSettings 
01 00 1200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSliderRow 
01 00 1200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSwitchRow 
01 00 1400 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSDomainAttribute 
01 00 1400 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 1400 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentity 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneClientSettings 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneClientSettingsDiffInspector 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneSettings 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneSettingsDiffInspector 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneSpecification 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneTransitionContext 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIMutableApplicationSceneClientSettings 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIMutableApplicationSceneSettings 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIScene 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UISceneLayerTargetFactory 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIUserInterfaceStyleArbiter 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowScene 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropViewSettings 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettingsProvider 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: _UIParallaxMotionEffect 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: _UIPortalView 
