|| __DATA.__objc_data _OBJC_CLASS_$_ACXApplication
|| __DATA.__objc_data _OBJC_CLASS_$_ACXApplicationStatus
|| __DATA.__objc_data _OBJC_CLASS_$_ACXDeviceConnectionDelegateProtocolInterface
|| __DATA.__objc_data _OBJC_CLASS_$_ACXDeviceConnectionProtocolInterface
|| __DATA.__objc_data _OBJC_CLASS_$_ACXRemoteApplication
|| __DATA.__objc_data _OBJC_CLASS_$_ACXSyncedApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_ACXApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_ACXApplicationStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_ACXDeviceConnectionDelegateProtocolInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_ACXDeviceConnectionProtocolInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_ACXRemoteApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_ACXSyncedApplication
|| __DATA_CONST.__const _ACXAppShipsWithOS
|| __DATA_CONST.__const _ACXApplicationBundleIdentiferKey
|| __DATA_CONST.__const _ACXApplicationNameKey
|| __DATA_CONST.__const _ACXApplicationTeamID
|| __DATA_CONST.__const _ACXApplicationUniqueID
|| __DATA_CONST.__const _ACXApplicationsUpdatedDarwinNotification
|| __DATA_CONST.__const _ACXArchitectureCompatibilityKey
|| __DATA_CONST.__const _ACXBetaAppKey
|| __DATA_CONST.__const _ACXClockfaceExtensionPaths
|| __DATA_CONST.__const _ACXComplicationsPrincipalClass
|| __DATA_CONST.__const _ACXContainerAppBundleIdKey
|| __DATA_CONST.__const _ACXErrorDomain
|| __DATA_CONST.__const _ACXFunctionNameErrorKey
|| __DATA_CONST.__const _ACXIntentsRestrictedWhileLockedAggregateKey
|| __DATA_CONST.__const _ACXIntentsSupportedAggregateKey
|| __DATA_CONST.__const _ACXPluginBundleIdKey
|| __DATA_CONST.__const _ACXRemoteApplicationBundleIDsNotificationPayloadKey
|| __DATA_CONST.__const _ACXRemoteApplicationDatabaseResyncedDistributedNotification
|| __DATA_CONST.__const _ACXRemoteApplicationDevicePairingIDNotificationPayloadKey
|| __DATA_CONST.__const _ACXRemoteApplicationsInstalledDistributedNotification
|| __DATA_CONST.__const _ACXRemoteApplicationsUninstalledDistributedNotification
|| __DATA_CONST.__const _ACXRemoteApplicationsUpdatedDistributedNotification
|| __DATA_CONST.__const _ACXRemoveApplicationDataErrorDictionaryKey
|| __DATA_CONST.__const _ACXSDKVersionKey
|| __DATA_CONST.__const _ACXServerStatusKey
|| __DATA_CONST.__const _ACXShowAppOnWatchKey
|| __DATA_CONST.__const _ACXSourceFileLineErrorKey
|| __DATA_CONST.__const _ACXSupportedComplicationFamilies
|| __DATA_CONST.__const _ACXSupportsAlwaysOnDisplayKey
|| __DATA_CONST.__const _ACXUnlocalizedValueKey
|| __DATA_CONST.__const _ACXUserActivityTypesKey
|| __DATA_CONST.__const _ACXUserPresentableErrorDomain
|| __DATA_CONST.__const _ACXWatchAppBundleURLKey
|| __DATA_CONST.__const _ACXWatchKitCompatibilityKey
|| __DATA_CONST.__const _ACXWatchKitVersion
|| __DATA_CONST.__const _kACXSourceAppWatchApplicationStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACXDeviceConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACXDeviceConnection
__ CoreFoundation: _CFBundleCopyBundleLocalizations
__ CoreFoundation: _CFBundleCopyLocalizationsForPreferences
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFCopyTypeIDDescription
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFUserNotificationDisplayAlert
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFBundleCreateFilteredInfoPlist
__ CoreFoundation: __CFBundleCreateFilteredLocalizedInfoPlist
__ CoreFoundation: __CFBundleCreateUnique
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: __kCFBundleShortVersionStringKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBundleExecutableKey
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFBundleNameKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreServices: _LSSystemApplicationType
__ CoreServices: _LSUserApplicationType
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ MobileInstallation: _MobileInstallationCopyAppMetadata
__ MobileInstallation: _OBJC_CLASS_$_MIStoreMetadata
__ MobileSystemServices: _MOLogEnableDiskLogging
__ MobileSystemServices: _MOLogOpen
__ MobileSystemServices: _MOLogWrite
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoRegistry: _NRDevicePropertyPairingID
__ NanoRegistry: _NRPairedDeviceRegistryDevice
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidBecomeActive
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidPairNotification
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_crash
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dyld_get_image_versions
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _lseek
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _mkdtemp
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _pread
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _swap_fat_arch
__ libSystem.B.dylib: _swap_fat_header
__ libSystem.B.dylib: _swap_mach_header
__ libSystem.B.dylib: _swap_mach_header_64
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _syslog
__ libmis.dylib: _MISCopyErrorStringForErrorCode
__ libmis.dylib: _MISValidateSignature
__ libmis.dylib: _kMISValidationOptionRespectUppTrustAndAuthorization
__ libmis.dylib: _kMISValidationOptionValidateSignatureOnly
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
ACXApplicationStatus : NSObject <NSSecureCoding, NSCopying>
 @property  unsigned long installStatus
 @property  NSError *lastInstallationError
 @property  NSString *uniqueInstallID
 @property  long long watchKitCompatibility
 @property  unsigned long architectureCompatibility

  // class methods
  +[ACXApplicationStatus supportsSecureCoding]

  // instance methods
  -[ACXApplicationStatus initWithCoder:]
  -[ACXApplicationStatus .cxx_destruct]
  -[ACXApplicationStatus copyWithZone:]
  -[ACXApplicationStatus installStatus]
  -[ACXApplicationStatus setInstallStatus:]
  -[ACXApplicationStatus encodeWithCoder:]
  -[ACXApplicationStatus lastInstallationError]
  -[ACXApplicationStatus uniqueInstallID]
  -[ACXApplicationStatus watchKitCompatibility]
  -[ACXApplicationStatus architectureCompatibility]
  -[ACXApplicationStatus setInstallStatusWithGizmoStatus:]
  -[ACXApplicationStatus setLastInstallationError:]
  -[ACXApplicationStatus setUniqueInstallID:]
  -[ACXApplicationStatus setWatchKitCompatibility:]
  -[ACXApplicationStatus setArchitectureCompatibility:]


ACXApplication : ACXRemoteApplication <NSSecureCoding, NSCopying>
 @property  ACXApplicationStatus *deviceStatus
 @property  unsigned long autoInstallOverride
 @property  BOOL isTrusted
 @property  NSURL *watchAppURL
 @property  unsigned long lsSequenceNumber
 @property  NSArray *clockFaceExtensionPaths
 @property  NSURL *companionAppURL
 @property  NSString *companionAppName
 @property  NSString *sourceAppIdentifier
 @property  BOOL isPurchasedReDownload
 @property  BOOL isEmbeddedPlaceholder

  // class methods
  +[ACXApplication supportsSecureCoding]
  +[ACXApplication _systemTrustsApplicationWithBundleURL:]
  +[ACXApplication _isIndeterminateMISError:]
  +[ACXApplication gizmoApplicationsFromCompanionAppRecord:databaseUUID:startingSequenceNumber:]

  // instance methods
  -[ACXApplication isPurchasedReDownload]
  -[ACXApplication sourceAppIdentifier]
  -[ACXApplication initWithCoder:]
  -[ACXApplication initForTesting]
  -[ACXApplication .cxx_destruct]
  -[ACXApplication init]
  -[ACXApplication isTrusted]
  -[ACXApplication isLocallyAvailable]
  -[ACXApplication serialize]
  -[ACXApplication copyWithZone:]
  -[ACXApplication encodeWithCoder:]
  -[ACXApplication autoInstallOverride]
  -[ACXApplication deviceStatus]
  -[ACXApplication _URLOfFirstItemWithExtension:inDirectory:]
  -[ACXApplication initWithBundleID:databaseUUID:sequenceNumber:]
  -[ACXApplication initWithSerializedDictionary:reevaluatingTrust:]
  -[ACXApplication initWithSerializedDictionary:]
  -[ACXApplication _evaluateTrustInfoForReevaluation:]
  -[ACXApplication watchAppURL]
  -[ACXApplication lsSequenceNumber]
  -[ACXApplication clockFaceExtensionPaths]
  -[ACXApplication companionAppURL]
  -[ACXApplication companionAppName]
  -[ACXApplication isEmbeddedPlaceholder]
  -[ACXApplication _storeMetadataWithError:]
  -[ACXApplication initWithApplicationRecord:gizmoBundleIdentifier:databaseUUID:sequenceNumber:]
  -[ACXApplication initWithApplicationRecord:databaseUUID:sequenceNumber:]
  -[ACXApplication setIsTrusted:]
  -[ACXApplication _mostCurrentWKAppURLInCompanionAppRecord:isPlaceholder:]
  -[ACXApplication _URLsOfExtensionsInBundleURL:mayNotExist:]
  -[ACXApplication _infoPlistForPluginBundle:]
  -[ACXApplication _watchKitApplicationNameFromWKAppInfoPlist:containerRecord:]
  -[ACXApplication _parseArchitectureSlicesForWatchKitAppExecutableURL:]
  -[ACXApplication _populateStoreMetadata]
  -[ACXApplication serializeAsRemoteApplication]
  -[ACXApplication appWithReevaluatedTrust]
  -[ACXApplication setDeviceStatus:]


ACXSyncedApplication : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *bundleIdentifier
 @property  NSString *applicationName
 @property  NSUUID *databaseUUID
 @property  unsigned long sequenceNumber
 @property  NSArray *counterpartIdentifiers
 @property  unsigned long applicationType
 @property  BOOL isDeletable
 @property  NSDictionary *localizedInfoPlistStrings
 @property  NSNumber *externalVersionIdentifier
 @property  NSString *_rawApplicationName
 @property  BOOL isSystemApp

  // class methods
  +[ACXSyncedApplication supportsSecureCoding]
  +[ACXSyncedApplication localizedAppNameFromRecord:]
  +[ACXSyncedApplication buildLocalizedInfoPlistStringsDictForAppBundleURL:watchKitExtensionURL:]
  +[ACXSyncedApplication localizedInfoPlistKeysLoadAppOnly]
  +[ACXSyncedApplication localizedInfoPlistKeysLoadAnywhere]

  // instance methods
  -[ACXSyncedApplication setApplicationName:]
  -[ACXSyncedApplication applicationName]
  -[ACXSyncedApplication isDeletable]
  -[ACXSyncedApplication initWithCoder:]
  -[ACXSyncedApplication bundleIdentifier]
  -[ACXSyncedApplication setSequenceNumber:]
  -[ACXSyncedApplication initForTesting]
  -[ACXSyncedApplication counterpartIdentifiers]
  -[ACXSyncedApplication .cxx_destruct]
  -[ACXSyncedApplication setBundleIdentifier:]
  -[ACXSyncedApplication init]
  -[ACXSyncedApplication setExternalVersionIdentifier:]
  -[ACXSyncedApplication externalVersionIdentifier]
  -[ACXSyncedApplication applicationType]
  -[ACXSyncedApplication setApplicationType:]
  -[ACXSyncedApplication isSystemApp]
  -[ACXSyncedApplication serialize]
  -[ACXSyncedApplication setCounterpartIdentifiers:]
  -[ACXSyncedApplication setIsDeletable:]
  -[ACXSyncedApplication sequenceNumber]
  -[ACXSyncedApplication copyWithZone:]
  -[ACXSyncedApplication encodeWithCoder:]
  -[ACXSyncedApplication localizedInfoPlistStringsForKeys:fetchingFirstMatchingLocalizationInList:]
  -[ACXSyncedApplication databaseUUID]
  -[ACXSyncedApplication setDatabaseUUID:]
  -[ACXSyncedApplication initWithBundleID:databaseUUID:sequenceNumber:]
  -[ACXSyncedApplication initWithSerializedDictionary:]
  -[ACXSyncedApplication initWithApplicationRecord:databaseUUID:sequenceNumber:]
  -[ACXSyncedApplication setLocalizedInfoPlistStrings:]
  -[ACXSyncedApplication serializeAsRemoteApplication]
  -[ACXSyncedApplication localizedInfoPlistStrings]
  -[ACXSyncedApplication _rawApplicationName]


ACXDeviceConnectionProtocolInterface : NSObject
  // class methods
  +[ACXDeviceConnectionProtocolInterface new]
  +[ACXDeviceConnectionProtocolInterface interfaceProtocol]
  +[ACXDeviceConnectionProtocolInterface interface]
  +[ACXDeviceConnectionProtocolInterface configureInterface:]

  // instance methods
  -[ACXDeviceConnectionProtocolInterface init]


ACXDeviceConnectionDelegateProtocolInterface : NSObject
  // class methods
  +[ACXDeviceConnectionDelegateProtocolInterface new]
  +[ACXDeviceConnectionDelegateProtocolInterface interfaceProtocol]
  +[ACXDeviceConnectionDelegateProtocolInterface interface]
  +[ACXDeviceConnectionDelegateProtocolInterface configureInterface:]

  // instance methods
  -[ACXDeviceConnectionDelegateProtocolInterface init]


ACXRemoteApplication : ACXSyncedApplication <NSSecureCoding, NSCopying>
 @property  unsigned long applicationMode
 @property  NSString *bundleVersion
 @property  NSString *bundleShortVersion
 @property  NSString *minimumOSVersion
 @property  NSDictionary *requiredCapabilities
 @property  NSString *watchKitVersion
 @property  NSString *companionAppBundleID
 @property  NSString *watchKitAppExecutableHash
 @property  NSString *watchKitAppExtensionBundleID
 @property  BOOL isBetaApp
 @property  BOOL isProfileValidated
 @property  NSString *teamID
 @property  NSString *complicationPrincipalClass
 @property  NSArray *supportedComplicationFamilies
 @property  NSArray *intentsRestrictedWhileLocked
 @property  NSArray *intentsSupported
 @property  NSArray *userActivityTypes
 @property  BOOL hasClockfaces
 @property  MIStoreMetadata *storeMetadata
 @property  NSString *sdkVersion
 @property  BOOL supportsAlwaysOnDisplay
 @property  NSArray *architectureSlices
 @property  BOOL isLocallyAvailable
 @property  NSString *applicationName
 @property  BOOL hasComplication
 @property  NSDictionary *localizedInfoPlistStrings

  // class methods
  +[ACXRemoteApplication supportsSecureCoding]
  +[ACXRemoteApplication localizedInfoPlistKeysLoadAppOnly]
  +[ACXRemoteApplication localizedInfoPlistKeysLoadAnywhere]

  // instance methods
  -[ACXRemoteApplication bundleVersion]
  -[ACXRemoteApplication bundleShortVersion]
  -[ACXRemoteApplication setBundleVersion:]
  -[ACXRemoteApplication teamID]
  -[ACXRemoteApplication watchKitVersion]
  -[ACXRemoteApplication hasComplication]
  -[ACXRemoteApplication userActivityTypes]
  -[ACXRemoteApplication supportedComplicationFamilies]
  -[ACXRemoteApplication complicationPrincipalClass]
  -[ACXRemoteApplication initWithCoder:]
  -[ACXRemoteApplication isProfileValidated]
  -[ACXRemoteApplication initForTesting]
  -[ACXRemoteApplication counterpartIdentifiers]
  -[ACXRemoteApplication setSdkVersion:]
  -[ACXRemoteApplication .cxx_destruct]
  -[ACXRemoteApplication setBundleShortVersion:]
  -[ACXRemoteApplication setRequiredCapabilities:]
  -[ACXRemoteApplication init]
  -[ACXRemoteApplication setStoreMetadata:]
  -[ACXRemoteApplication storeMetadata]
  -[ACXRemoteApplication intentsRestrictedWhileLocked]
  -[ACXRemoteApplication minimumOSVersion]
  -[ACXRemoteApplication requiredCapabilities]
  -[ACXRemoteApplication isSystemApp]
  -[ACXRemoteApplication sdkVersion]
  -[ACXRemoteApplication isLocallyAvailable]
  -[ACXRemoteApplication serialize]
  -[ACXRemoteApplication setMinimumOSVersion:]
  -[ACXRemoteApplication copyWithZone:]
  -[ACXRemoteApplication setIsLocallyAvailable:]
  -[ACXRemoteApplication encodeWithCoder:]
  -[ACXRemoteApplication setTeamID:]
  -[ACXRemoteApplication isBetaApp]
  -[ACXRemoteApplication intentsSupported]
  -[ACXRemoteApplication setIsBetaApp:]
  -[ACXRemoteApplication watchKitAppExecutableHash]
  -[ACXRemoteApplication setWatchKitAppExecutableHash:]
  -[ACXRemoteApplication companionAppBundleID]
  -[ACXRemoteApplication watchKitAppExtensionBundleID]
  -[ACXRemoteApplication initWithBundleID:databaseUUID:sequenceNumber:]
  -[ACXRemoteApplication initWithSerializedDictionary:]
  -[ACXRemoteApplication initWithApplicationRecord:databaseUUID:sequenceNumber:]
  -[ACXRemoteApplication setIsProfileValidated:]
  -[ACXRemoteApplication setCompanionAppBundleID:]
  -[ACXRemoteApplication setWatchKitAppExtensionBundleID:]
  -[ACXRemoteApplication setWatchKitVersion:]
  -[ACXRemoteApplication setApplicationMode:]
  -[ACXRemoteApplication setArchitectureSlices:]
  -[ACXRemoteApplication setUserActivityTypes:]
  -[ACXRemoteApplication setComplicationPrincipalClass:]
  -[ACXRemoteApplication setSupportedComplicationFamilies:]
  -[ACXRemoteApplication setIntentsSupported:]
  -[ACXRemoteApplication setIntentsRestrictedWhileLocked:]
  -[ACXRemoteApplication setHasClockfaces:]
  -[ACXRemoteApplication serializeAsRemoteApplication]
  -[ACXRemoteApplication applicationMode]
  -[ACXRemoteApplication architectureSlices]
  -[ACXRemoteApplication supportsAlwaysOnDisplay]
  -[ACXRemoteApplication isCompatibleWithOSVersion:]
  -[ACXRemoteApplication isRuntimeCompatibleWithOSVersion:]
  -[ACXRemoteApplication isCompatibleWithCPUType:subtype:]
  -[ACXRemoteApplication isTheSameAppAs:]
  -[ACXRemoteApplication hasClockfaces]
  -[ACXRemoteApplication setSupportsAlwaysOnDisplay:]


ACXDeviceConnection : NSObject <ACXDeviceConnectionDelegateProtocol>
 @property  NSXPCConnection *xpcConnection
 @property  BOOL observersEnabled
 @property  NSHashTable *observers
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *observerQueue
 @property  NSObject<OS_dispatch_source> *observerReEstablishTimer
 @property  BOOL monitoringForDeviceChanges
 @property  <ACXDeviceConnectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ACXDeviceConnection _removeFilesAtURL:]
  +[ACXDeviceConnection sharedDeviceConnection]
  +[ACXDeviceConnection enableTestMode]
  +[ACXDeviceConnection performUninstallationCleanup]
  +[ACXDeviceConnection disableTestMode]

  // instance methods
  -[ACXDeviceConnection setXpcConnection:]
  -[ACXDeviceConnection removeApplication:completion:]
  -[ACXDeviceConnection xpcConnection]
  -[ACXDeviceConnection locallyAvailableApplicationWithContainingApplicationBundleID:forDeviceWithPairingID:error:]
  -[ACXDeviceConnection fetchInstalledApplicationsForPairedDevice:completion:]
  -[ACXDeviceConnection enumerateInstallableSystemAppsOnPairedDevice:withBlock:]
  -[ACXDeviceConnection fetchInstalledComplicationsForPairedDevice:completion:]
  -[ACXDeviceConnection setUpdatePendingForCompanionApp:error:]
  -[ACXDeviceConnection killDaemonForTestingWithError:]
  -[ACXDeviceConnection fetchApplicationDatabaseSyncInformationForDeviceWithPairingID:returningDatabaseUUID:lastSequenceNumber:error:]
  -[ACXDeviceConnection fetchApplicationWithContainingApplicationBundleID:completion:]
  -[ACXDeviceConnection installApplicationAtURL:onDeviceWithPairingID:installOptions:size:installationStatus:error:]
  -[ACXDeviceConnection installApplication:onPairedDevice:installationStatus:error:]
  -[ACXDeviceConnection fetchInstalledApplicationsWithErrorCompletion:]
  -[ACXDeviceConnection removeApplication:fromPairedDevice:removalStatus:error:]
  -[ACXDeviceConnection getApplicationIsInstalled:withBundleID:onDeviceWithPairingID:error:]
  -[ACXDeviceConnection installRequestFailedForApp:onDeviceWithPairingID:failureReason:wasUserInitiated:error:]
  -[ACXDeviceConnection locallyAvailableApplicationWithContainingApplicationBundleID:forPairedDevice:error:]
  -[ACXDeviceConnection applicationsUninstalled:onDeviceWithPairingID:]
  -[ACXDeviceConnection installApplicationAtURL:onPairedDevice:installOptions:size:completion:]
  -[ACXDeviceConnection _onQueue_beginMonitoringNanoRegistryDeviceState]
  -[ACXDeviceConnection setAlwaysInstall:]
  -[ACXDeviceConnection fetchLocallyAvailableApplicationWithBundleID:forDeviceWithPairingID:completion:]
  -[ACXDeviceConnection updatedInstallStateForApplicationsWithInfo:]
  -[ACXDeviceConnection getApplicationIsInstalled:onAnyPairedDeviceWithCompanionBundleID:error:]
  -[ACXDeviceConnection getApplicationIsInstalled:onAnyPairedDeviceWithBundleID:error:]
  -[ACXDeviceConnection getAlwaysInstall:forPairedDevice:error:]
  -[ACXDeviceConnection removeProvisioningProfileWithID:completion:]
  -[ACXDeviceConnection getAlwaysInstallWithCompletion:]
  -[ACXDeviceConnection copyLocalizedValuesFromAllDevicesForInfoPlistKeys:forAppWithBundleID:fetchingFirstMatchingLocalizationInList:error:]
  -[ACXDeviceConnection .cxx_destruct]
  -[ACXDeviceConnection _synchronousProxyWithErrorHandler:]
  -[ACXDeviceConnection fetchProvisioningProfilesWithCompletion:]
  -[ACXDeviceConnection watchAppBundleIDForCompanionAppBundleID:error:]
  -[ACXDeviceConnection applicationsUpdated:onDeviceWithPairingID:]
  -[ACXDeviceConnection applicationOnPairedDevice:withBundleID:error:]
  -[ACXDeviceConnection installApplication:withProvisioningProfiles:completionWithError:]
  -[ACXDeviceConnection fetchInstalledComplicationsWithErrorCompletion:]
  -[ACXDeviceConnection _fetchLocallyAvailableApplicationWithBundleID:forDeviceWithPairingID:options:completion:]
  -[ACXDeviceConnection getAlwaysInstallForPairedDevice:completion:]
  -[ACXDeviceConnection installableSystemAppWithBundleID:onDeviceWithPairingID:error:]
  -[ACXDeviceConnection setDelegate:]
  -[ACXDeviceConnection systemAppIsInstallableOnDeviceWithPairingID:withBundleID:completion:]
  -[ACXDeviceConnection installApplication:onPairedDevice:completion:]
  -[ACXDeviceConnection installProvisioningProfileWithURL:completion:]
  -[ACXDeviceConnection fetchInfoForApplicationWithBundleID:completion:]
  -[ACXDeviceConnection installProvisioningProfileWithURL:onPairedDevice:completion:]
  -[ACXDeviceConnection cancelPendingInstallations]
  -[ACXDeviceConnection installApplicationAtURL:onDeviceWithPairingID:installOptions:size:completion:]
  -[ACXDeviceConnection _onQueue_endMonitoringNanoRegistryDeviceState]
  -[ACXDeviceConnection fetchLocallyAvailableApplicationWithContainingApplicationBundleID:forPairedDevice:completion:]
  -[ACXDeviceConnection fetchApplicationOnPairedDevice:withBundleID:completion:]
  -[ACXDeviceConnection init]
  -[ACXDeviceConnection observerRegistrationSuccessful]
  -[ACXDeviceConnection fetchInstalledCompatibleApplicationsWithDevice:withErrorCompletion:]
  -[ACXDeviceConnection fetchInfoForApplicationWithBundleID:forPairedDevice:completion:]
  -[ACXDeviceConnection installApplicationAtURL:onPairedDevice:installOptions:size:installationStatus:error:]
  -[ACXDeviceConnection fetchProvisioningProfilesForPairedDevice:completion:]
  -[ACXDeviceConnection setObserversEnabled:]
  -[ACXDeviceConnection applicationDatabaseResyncedForDeviceWithPairingID:]
  -[ACXDeviceConnection monitoringForDeviceChanges]
  -[ACXDeviceConnection applicationOnDeviceWithPairingID:withBundleID:error:]
  -[ACXDeviceConnection _onQueue_reEstablishObserverConnectionIfNeeded]
  -[ACXDeviceConnection installAllApplications]
  -[ACXDeviceConnection enumerateInstalledApplicationsOnPairedDevice:withBlock:]
  -[ACXDeviceConnection applicationIsInstalledOnAnyPairedDeviceWithBundleID:completion:]
  -[ACXDeviceConnection provisioningProfilesForPairedDevice:error:]
  -[ACXDeviceConnection cancelUpdatePendingForCompanionApp:completion:]
  -[ACXDeviceConnection retryPendingAppInstallationsForPairedDevice:]
  -[ACXDeviceConnection enumerateLocallyAvailableApplicationsForPairedDevice:options:withBlock:]
  -[ACXDeviceConnection setMonitoringForDeviceChanges:]
  -[ACXDeviceConnection fetchWatchAppBundleURLWithinCompanionAppWithWatchAppIdentifier:completion:]
  -[ACXDeviceConnection watchAppBundleURLWithinCompanionAppWithWatchAppIdentifier:error:]
  -[ACXDeviceConnection fetchLocallyAvailableApplicationWithContainingApplicationBundleID:forDeviceWithPairingID:completion:]
  -[ACXDeviceConnection installApplication:withProvisioningProfiles:onPairedDevice:completion:]
  -[ACXDeviceConnection installableSystemAppWithBundleID:onPairedDevice:error:]
  -[ACXDeviceConnection fetchProvisioningProfilesForApplicationWithBundleID:completion:]
  -[ACXDeviceConnection applicationIsInstalledOnDeviceWithPairingID:withBundleID:completion:]
  -[ACXDeviceConnection setAllExistingAppsShouldBeInstalled:forNewDevice:]
  -[ACXDeviceConnection addObserver:]
  -[ACXDeviceConnection getApplicationIsInstalled:withBundleID:onPairedDevice:error:]
  -[ACXDeviceConnection _deviceDidPairNotification:]
  -[ACXDeviceConnection _deviceDidBecomeActiveNotification:]
  -[ACXDeviceConnection applicationIsInstalledOnAnyPairedDeviceWithCompanionBundleID:completion:]
  -[ACXDeviceConnection systemAppIsInstallableOnPairedDevice:withBundleID:completion:]
  -[ACXDeviceConnection getApplicationIsInstalled:onPairedDevice:withCompanionBundleID:error:]
  -[ACXDeviceConnection _proxyWithErrorHandler:]
  -[ACXDeviceConnection applicationIsInstalledOnPairedDevice:withCompanionBundleID:completion:]
  -[ACXDeviceConnection updatePreferencesForApplicationWithIdentifier:preferences:forPairedDevice:completion:]
  -[ACXDeviceConnection installApplication:withProvisioningProfiles:onPairedDevice:installationStatus:error:]
  -[ACXDeviceConnection setUpdatePendingForCompanionApp:completion:]
  -[ACXDeviceConnection enumerateInstallableSystemAppsOnDeviceWithPairingID:withBlock:]
  -[ACXDeviceConnection updatePreferencesForApplicationWithIdentifier:preferences:completion:]
  -[ACXDeviceConnection internalQueue]
  -[ACXDeviceConnection fetchLocallyAvailableApplicationWithBundleID:forPairedDevice:completion:]
  -[ACXDeviceConnection installProvisioningProfileWithURL:onPairedDevice:error:]
  -[ACXDeviceConnection getSystemAppInstallability:onPairedDevice:withBundleID:error:]
  -[ACXDeviceConnection observersEnabled]
  -[ACXDeviceConnection observerQueue]
  -[ACXDeviceConnection delegate]
  -[ACXDeviceConnection updatePreferencesForApplicationWithIdentifier:preferences:writingToPreferencesLocation:forPairedDevice:options:completion:]
  -[ACXDeviceConnection fetchApplicationDatabaseSyncInformationForPairedDevice:returningDatabaseUUID:lastSequenceNumber:error:]
  -[ACXDeviceConnection activeComplicationsWithErrorCompletion:]
  -[ACXDeviceConnection enumerateLocallyAvailableApplicationsForDeviceWithPairingID:options:withBlock:]
  -[ACXDeviceConnection observers]
  -[ACXDeviceConnection observerReEstablishTimer]
  -[ACXDeviceConnection updatePreferencesForApplicationWithIdentifier:preferences:writingToPreferencesLocation:forPairedDevice:options:error:]
  -[ACXDeviceConnection fetchProvisioningProfilesForApplicationWithBundleID:forPairedDevice:completion:]
  -[ACXDeviceConnection applicationIsInstalledOnDeviceWithPairingID:withCompanionBundleID:completion:]
  -[ACXDeviceConnection fetchInstallableSystemAppWithBundleID:onPairedDevice:completion:]
  -[ACXDeviceConnection getSystemAppInstallability:onDeviceWithPairingID:withBundleID:error:]
  -[ACXDeviceConnection removeProvisioningProfileWithID:fromPairedDevice:error:]
  -[ACXDeviceConnection locallyAvailableApplicationWithBundleID:forPairedDevice:error:]
  -[ACXDeviceConnection fetchApplicationOnDeviceWithPairingID:withBundleID:completion:]
  -[ACXDeviceConnection setObserverReEstablishTimer:]
  -[ACXDeviceConnection fetchInstallableSystemAppWithBundleID:onDeviceWithPairingID:completion:]
  -[ACXDeviceConnection _onQueue_createXPCConnectionIfNecessary:]
  -[ACXDeviceConnection removeApplication:fromPairedDevice:completion:]
  -[ACXDeviceConnection _onQueue_enableObserversIfNeededForAValidXPCConnection]
  -[ACXDeviceConnection removeProvisioningProfileWithID:fromPairedDevice:completion:]
  -[ACXDeviceConnection removeApplication:fromPairedDevice:completionWithError:]
  -[ACXDeviceConnection removeObserver:]
  -[ACXDeviceConnection applicationsInstalled:onDeviceWithPairingID:]
  -[ACXDeviceConnection setAlwaysInstall:forDevice:]
  -[ACXDeviceConnection acknowledgeTestFlightInstallBegunForApp:onDeviceWithPairingID:error:]
  -[ACXDeviceConnection cancelUpdatePendingForCompanionApp:error:]
  -[ACXDeviceConnection _validateAndExtractProfiles:error:]
  -[ACXDeviceConnection installApplication:completionWithError:]
  -[ACXDeviceConnection enumerateInstalledApplicationsOnDeviceWithPairingID:withBlock:]
  -[ACXDeviceConnection _locallyAvailableApplicationWithBundleID:forDeviceWithPairingID:options:error:]
  -[ACXDeviceConnection getApplicationIsInstalled:onDeviceWithPairingID:withCompanionBundleID:error:]
  -[ACXDeviceConnection locallyAvailableApplicationWithBundleID:forDeviceWithPairingID:error:]
  -[ACXDeviceConnection fetchWatchAppBundleIDForCompanionAppBundleID:completion:]
  -[ACXDeviceConnection provisioningProfilesForApplicationWithBundleID:forPairedDevice:error:]
  -[ACXDeviceConnection activeComplicationsForPairedDevice:completion:]
  -[ACXDeviceConnection _invalidateXPCConnection]
  -[ACXDeviceConnection applicationIsInstalledOnPairedDevice:withBundleID:completion:]
  -[ACXDeviceConnection updateInstallProgressForApplication:progress:phase:]


LSApplicationRecord(AppConduitAdditions)
	// instance methods
	-[LSApplicationRecord(AppConduitAdditions) cacheGUID]
	-[LSApplicationRecord(AppConduitAdditions) isHidden]
	-[LSApplicationRecord(AppConduitAdditions) sequenceNumber]
	-[LSApplicationRecord(AppConduitAdditions) isBuiltIn]
	-[LSApplicationRecord(AppConduitAdditions) watchKitExtension]
	-[LSApplicationRecord(AppConduitAdditions) watchKitAppExtensionBundleID]
	-[LSApplicationRecord(AppConduitAdditions) shouldBeTrackedByAppConduit]
	-[LSApplicationRecord(AppConduitAdditions) ACX_externalVersionIdentifier]
	-[LSApplicationRecord(AppConduitAdditions) supportsAlwaysOnDisplay]
	-[LSApplicationRecord(AppConduitAdditions) shouldBeTrackedByLaunchServicesWatcher]
	-[LSApplicationRecord(AppConduitAdditions) wkTeamID]

01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0400 /System/Library/PrivateFrameworks/MobileInstallation.framework/MobileInstallation: MIStoreMetadata 
01 00 0200 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 0300 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
