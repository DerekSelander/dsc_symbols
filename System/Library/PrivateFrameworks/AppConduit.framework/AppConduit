|| __DATA.__common _gLogHandle
|| __DATA_CONST.__const _ACXAppShipsWithOS
|| __DATA_CONST.__const _ACXApplicationBundleIdentiferKey
|| __DATA_CONST.__const _ACXApplicationNameKey
|| __DATA_CONST.__const _ACXApplicationTeamID
|| __DATA_CONST.__const _ACXApplicationUniqueID
|| __DATA_CONST.__const _ACXApplicationsUpdatedDarwinNotification
|| __DATA_CONST.__const _ACXArchitectureCompatibilityKey
|| __DATA_CONST.__const _ACXBetaAppKey
|| __DATA_CONST.__const _ACXClockfaceExtensionPaths
|| __DATA_CONST.__const _ACXComplicationsPrincipalClass
|| __DATA_CONST.__const _ACXConnectionCreationDateErrorKey
|| __DATA_CONST.__const _ACXConnectionIdentifierErrorKey
|| __DATA_CONST.__const _ACXConnectionWifiAssertedKey
|| __DATA_CONST.__const _ACXContainerAppBundleIdKey
|| __DATA_CONST.__const _ACXErrorDomain
|| __DATA_CONST.__const _ACXFunctionNameErrorKey
|| __DATA_CONST.__const _ACXIDSMessageIDKey
|| __DATA_CONST.__const _ACXIntentsRestrictedWhileLockedAggregateKey
|| __DATA_CONST.__const _ACXIntentsSupportedAggregateKey
|| __DATA_CONST.__const _ACXPluginBundleIdKey
|| __DATA_CONST.__const _ACXRemoteApplicationBundleIDsNotificationPayloadKey
|| __DATA_CONST.__const _ACXRemoteApplicationDatabaseResyncedDistributedNotification
|| __DATA_CONST.__const _ACXRemoteApplicationDevicePairingIDNotificationPayloadKey
|| __DATA_CONST.__const _ACXRemoteApplicationsInstalledDistributedNotification
|| __DATA_CONST.__const _ACXRemoteApplicationsUninstalledDistributedNotification
|| __DATA_CONST.__const _ACXRemoteApplicationsUpdatedDistributedNotification
|| __DATA_CONST.__const _ACXRemoveApplicationDataErrorDictionaryKey
|| __DATA_CONST.__const _ACXServerStatusKey
|| __DATA_CONST.__const _ACXShowAppOnWatchKey
|| __DATA_CONST.__const _ACXSourceFileLineErrorKey
|| __DATA_CONST.__const _ACXSupportedComplicationFamilies
|| __DATA_CONST.__const _ACXUnlocalizedValueKey
|| __DATA_CONST.__const _ACXUserActivityTypesKey
|| __DATA_CONST.__const _ACXWatchAppBundleURLKey
|| __DATA_CONST.__const _ACXWatchKitCompatibilityKey
|| __DATA_CONST.__const _ACXWatchKitVersion
|| __DATA_CONST.__const _kACXSourceAppWatchApplicationStore
|| __DATA_CONST.__const _kAlwaysInstallKey
|| __DATA_CONST.__const _kAppIsDeletable
|| __DATA_CONST.__const _kApplicationIsLocallyAvailable
|| __DATA_CONST.__const _kApplicationMode
|| __DATA_CONST.__const _kApplicationStateVersion
|| __DATA_CONST.__const _kApplicationStates
|| __DATA_CONST.__const _kApplicationType
|| __DATA_CONST.__const _kAutoInstallOverride
|| __DATA_CONST.__const _kCompanionAppName
|| __DATA_CONST.__const _kCompanionAppURL
|| __DATA_CONST.__const _kCompletedInitialPairedSync
|| __DATA_CONST.__const _kCounterpartIdentifiers
|| __DATA_CONST.__const _kDBUUID
|| __DATA_CONST.__const _kInitiallyInstallAllExistingApps
|| __DATA_CONST.__const _kIsEmbeddedPlaceholder
|| __DATA_CONST.__const _kIsPurchaseReDownload
|| __DATA_CONST.__const _kIsTrustedApp
|| __DATA_CONST.__const _kLastLSSequenceNumber
|| __DATA_CONST.__const _kLocalizedInfoPlistStrings
|| __DATA_CONST.__const _kMinimumOSVersion
|| __DATA_CONST.__const _kNPSDomainName
|| __DATA_CONST.__const _kNSUserActivityTypes
|| __DATA_CONST.__const _kNeedsReunionSync
|| __DATA_CONST.__const _kOldApplicationState
|| __DATA_CONST.__const _kPendingAppUpdateStates
|| __DATA_CONST.__const _kSequenceNumber
|| __DATA_CONST.__const _kSourceAppIdentifier
|| __DATA_CONST.__const _kStoreMetadata
|| __DATA_CONST.__const _kUIRequiredDeviceCapabilities
|| __DATA_CONST.__const _kValidatedByProfile
|| __DATA_CONST.__const _kWKCompanionAppBundleIdentifier
|| __DATA_CONST.__const _kWKPluginBundleIdKey
|| __DATA_CONST.__const _kWKRunsIndependently
|| __DATA_CONST.__const _kWKWatchOnly
|| __DATA_CONST.__const _kWatchAppURL
|| __DATA_CONST.__const _kWatchKitAppExecutableHash
|| __DATA_CONST.__const _kWatchKitAppSlices
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACXApplication
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACXApplicationStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACXDeviceConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACXDeviceConnectionDelegateProtocolInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACXDeviceConnectionProtocolInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACXRemoteApplication
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACXApplication
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACXApplicationStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACXDeviceConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACXDeviceConnectionDelegateProtocolInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACXDeviceConnectionProtocolInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACXRemoteApplication
|| __TEXT.__const _AppConduitVersionNumber
|| __TEXT.__const _AppConduitVersionString
|| __TEXT.__text _ACXArrayContainsOnlyClass
|| __TEXT.__text _ACXArrayifyThing
|| __TEXT.__text _ACXAsyncTransaction
|| __TEXT.__text _ACXBooleanValue
|| __TEXT.__text _ACXCopyDataDirectory
|| __TEXT.__text _ACXCopyLogDirectory
|| __TEXT.__text _ACXCopyPairingStoreSubdirectoryInBase
|| __TEXT.__text _ACXCopyStagingDirectory
|| __TEXT.__text _ACXCopyStagingDirectoryPath
|| __TEXT.__text _ACXDictionaryContainsOnlyClasses
|| __TEXT.__text _ACXGetPOSIXError
|| __TEXT.__text _ACXInitializeDiskLogging
|| __TEXT.__text _ACXIsInternalBuild
|| __TEXT.__text _ACXLoadInfoPlist
|| __TEXT.__text _ACXObjectsAreDifferentOrDifferentNullness
|| __TEXT.__text _ACXObjectsAreTheSameOrSameNullness
|| __TEXT.__text _ACXRandomDirWithTemplateURL
|| __TEXT.__text _ACXShowAppBlacklistedNotice
|| __TEXT.__text _ACXShowArchitectureNotSupportedNotice
|| __TEXT.__text _ACXShowCapabilitiesMismatchNotice
|| __TEXT.__text _ACXShowInstallationUnavailableNotice
|| __TEXT.__text _ACXShowLowDiskSpaceNotice
|| __TEXT.__text _ACXShowRuntimeNotSupportedNotice
|| __TEXT.__text _ACXShowUntrustedAppNotice
|| __TEXT.__text _ACXShowUserNoticeWithTapToRadarButton
|| __TEXT.__text _ACXStringifyObject
|| __TEXT.__text _ACXWatchKitAppExecutableHash
|| __TEXT.__text _ACXYOrN
|| __TEXT.__text __CreateAndLogError
|| __TEXT.__text __CreateAndLogErrorV
|| __TEXT.__text __CreateError
__ CoreFoundation: _CFBundleCopyBundleLocalizations
__ CoreFoundation: _CFBundleCopyLocalizationsForPreferences
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFCopyTypeIDDescription
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFUserNotificationDisplayAlert
__ CoreFoundation: _CFUserNotificationDisplayNotice
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFBundleCreateFilteredInfoPlist
__ CoreFoundation: __CFBundleCreateFilteredLocalizedInfoPlist
__ CoreFoundation: __CFBundleCreateUnique
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: __kCFBundleShortVersionStringKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBundleExecutableKey
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFBundleNameKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreServices: _LSSystemApplicationType
__ CoreServices: _LSUserApplicationType
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ MobileInstallation: _MobileInstallationCopyAppMetadata
__ MobileInstallation: _OBJC_CLASS_$_MIStoreMetadata
__ MobileSystemServices: _MOLogEnableDiskLogging
__ MobileSystemServices: _MOLogOpen
__ MobileSystemServices: _MOLogWrite
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoRegistry: _NRDevicePropertyPairingID
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_crash
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dyld_get_sdk_version
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _mkdtemp
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _pread
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _swap_fat_arch
__ libSystem.B.dylib: _swap_fat_header
__ libSystem.B.dylib: _syslog
__ libSystem.B.dylib: _xpc_transaction_begin
__ libSystem.B.dylib: _xpc_transaction_end
__ libSystem.B.dylib: dyld_stub_binder
__ libmis.dylib: _MISValidateSignature
__ libmis.dylib: _kMISValidationOptionRespectUppTrustAndAuthorization
__ libmis.dylib: _kMISValidationOptionValidateSignatureOnly
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
ACXApplicationStatus : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  unsigned long installStatus
 @property  NSError *lastInstallationError
 @property  NSString *uniqueInstallID
 @property  long long watchKitCompatibility
 @property  unsigned long architectureCompatibility

  // class methods
  +[ACXApplicationStatus supportsSecureCoding]

  // instance methods
  -[ACXApplicationStatus copyWithZone:]
  -[ACXApplicationStatus encodeWithCoder:]
  -[ACXApplicationStatus initWithCoder:]
  -[ACXApplicationStatus .cxx_destruct]
  -[ACXApplicationStatus installStatus]
  -[ACXApplicationStatus setInstallStatus:]
  -[ACXApplicationStatus lastInstallationError]
  -[ACXApplicationStatus uniqueInstallID]
  -[ACXApplicationStatus watchKitCompatibility]
  -[ACXApplicationStatus architectureCompatibility]
  -[ACXApplicationStatus setInstallStatusWithGizmoStatus:]
  -[ACXApplicationStatus setLastInstallationError:]
  -[ACXApplicationStatus setUniqueInstallID:]
  -[ACXApplicationStatus setWatchKitCompatibility:]
  -[ACXApplicationStatus setArchitectureCompatibility:]


ACXApplication : ACXRemoteApplication <ACXSyncedApp, NSSecureCoding, NSCopying>
 @property  ACXApplicationStatus *deviceStatus
 @property  unsigned long autoInstallOverride
 @property  NSURL *watchAppURL
 @property  unsigned long lsSequenceNumber
 @property  NSArray *clockFaceExtensionPaths
 @property  BOOL isTrusted
 @property  NSURL *companionAppURL
 @property  NSString *companionAppName
 @property  NSString *sourceAppIdentifier
 @property  BOOL isPurchasedReDownload
 @property  BOOL isEmbeddedPlaceholder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *bundleIdentifier
 @property  NSUUID *databaseUUID
 @property  unsigned long sequenceNumber
 @property  NSArray *counterpartIdentifiers
 @property  unsigned long applicationType
 @property  BOOL isSystemApp
 @property  BOOL isDeletable

  // class methods
  +[ACXApplication supportsSecureCoding]
  +[ACXApplication gizmoApplicationsFromCompanionAppProxy:databaseUUID:startingSequenceNumber:]

  // instance methods
  -[ACXApplication init]
  -[ACXApplication copyWithZone:]
  -[ACXApplication encodeWithCoder:]
  -[ACXApplication initWithCoder:]
  -[ACXApplication .cxx_destruct]
  -[ACXApplication isPurchasedReDownload]
  -[ACXApplication sourceAppIdentifier]
  -[ACXApplication serialize]
  -[ACXApplication isTrusted]
  -[ACXApplication autoInstallOverride]
  -[ACXApplication initWithBundleID:databaseUUID:sequenceNumber:]
  -[ACXApplication initWithSerializedDictionary:]
  -[ACXApplication watchAppURL]
  -[ACXApplication lsSequenceNumber]
  -[ACXApplication clockFaceExtensionPaths]
  -[ACXApplication companionAppURL]
  -[ACXApplication companionAppName]
  -[ACXApplication isEmbeddedPlaceholder]
  -[ACXApplication deviceStatus]
  -[ACXApplication _storeMetadataWithError:]
  -[ACXApplication initWithApplicationProxy:gizmoBundleIdentifier:databaseUUID:sequenceNumber:]
  -[ACXApplication initWithApplicationProxy:databaseUUID:sequenceNumber:]
  -[ACXApplication _localizedAppNameFromProxy:]
  -[ACXApplication _mostCurrentWKAppURLInCompanionAppProxy:versionFound:isPlaceholder:]
  -[ACXApplication _URLsOfExtensionsInBundleURL:mayNotExist:]
  -[ACXApplication _infoPlistForPluginBundle:]
  -[ACXApplication _watchKitApplicationNameFromWKAppInfoPlist:containerProxy:]
  -[ACXApplication _systemTrustsApplicationWithBundleURL:]
  -[ACXApplication _parseArchitectureSlicesForWatchKitAppBundleURL:executableName:]
  -[ACXApplication _buildLocalizedInfoPlistStringsDictForAppBundleURL:watchKitExtensionURL:]
  -[ACXApplication _populateStoreMetadata]
  -[ACXApplication _URLOfFirstItemWithExtension:inDirectory:]
  -[ACXApplication serializeAsRemoteApplication]
  -[ACXApplication appWithReEvaluatedTrust]
  -[ACXApplication setDeviceStatus:]


ACXDeviceConnectionProtocolInterface : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACXDeviceConnectionProtocolInterface new]
  +[ACXDeviceConnectionProtocolInterface interface]
  +[ACXDeviceConnectionProtocolInterface interfaceProtocol]
  +[ACXDeviceConnectionProtocolInterface configureInterface:]

  // instance methods
  -[ACXDeviceConnectionProtocolInterface init]


ACXDeviceConnectionDelegateProtocolInterface : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACXDeviceConnectionDelegateProtocolInterface new]
  +[ACXDeviceConnectionDelegateProtocolInterface interface]
  +[ACXDeviceConnectionDelegateProtocolInterface interfaceProtocol]
  +[ACXDeviceConnectionDelegateProtocolInterface configureInterface:]

  // instance methods
  -[ACXDeviceConnectionDelegateProtocolInterface init]


ACXRemoteApplication : NSObject /usr/lib/libSystem.B.dylib <ACXSyncedApp, NSSecureCoding, NSCopying>
 @property  NSString *bundleIdentifier
 @property  NSString *applicationName
 @property  unsigned long applicationType
 @property  unsigned long applicationMode
 @property  BOOL isDeletable
 @property  NSString *bundleVersion
 @property  NSString *bundleShortVersion
 @property  NSString *minimumOSVersion
 @property  NSDictionary *requiredCapabilities
 @property  NSString *watchKitVersion
 @property  NSString *companionAppBundleID
 @property  NSArray *counterpartIdentifiers
 @property  NSString *watchKitAppExecutableHash
 @property  NSString *watchKitAppExtensionBundleID
 @property  BOOL isBetaApp
 @property  BOOL isProfileValidated
 @property  NSString *teamID
 @property  NSString *complicationPrincipalClass
 @property  NSArray *supportedComplicationFamilies
 @property  NSArray *intentsRestrictedWhileLocked
 @property  NSArray *intentsSupported
 @property  NSArray *userActivityTypes
 @property  BOOL hasClockfaces
 @property  NSUUID *databaseUUID
 @property  unsigned long sequenceNumber
 @property  NSDictionary *localizedInfoPlistStrings
 @property  MIStoreMetadata *storeMetadata
 @property  NSArray *architectureSlices
 @property  BOOL isLocallyAvailable
 @property  BOOL isSystemApp
 @property  BOOL hasComplication
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ACXRemoteApplication supportsSecureCoding]

  // instance methods
  -[ACXRemoteApplication init]
  -[ACXRemoteApplication copyWithZone:]
  -[ACXRemoteApplication encodeWithCoder:]
  -[ACXRemoteApplication initWithCoder:]
  -[ACXRemoteApplication .cxx_destruct]
  -[ACXRemoteApplication bundleIdentifier]
  -[ACXRemoteApplication teamID]
  -[ACXRemoteApplication setSequenceNumber:]
  -[ACXRemoteApplication sequenceNumber]
  -[ACXRemoteApplication bundleVersion]
  -[ACXRemoteApplication isBetaApp]
  -[ACXRemoteApplication applicationType]
  -[ACXRemoteApplication isDeletable]
  -[ACXRemoteApplication supportedComplicationFamilies]
  -[ACXRemoteApplication complicationPrincipalClass]
  -[ACXRemoteApplication hasComplication]
  -[ACXRemoteApplication counterpartIdentifiers]
  -[ACXRemoteApplication watchKitVersion]
  -[ACXRemoteApplication setBundleIdentifier:]
  -[ACXRemoteApplication serialize]
  -[ACXRemoteApplication setApplicationName:]
  -[ACXRemoteApplication databaseUUID]
  -[ACXRemoteApplication setDatabaseUUID:]
  -[ACXRemoteApplication setStoreMetadata:]
  -[ACXRemoteApplication storeMetadata]
  -[ACXRemoteApplication requiredCapabilities]
  -[ACXRemoteApplication setBundleVersion:]
  -[ACXRemoteApplication setRequiredCapabilities:]
  -[ACXRemoteApplication isLocallyAvailable]
  -[ACXRemoteApplication setIsLocallyAvailable:]
  -[ACXRemoteApplication setIsDeletable:]
  -[ACXRemoteApplication setTeamID:]
  -[ACXRemoteApplication applicationName]
  -[ACXRemoteApplication isProfileValidated]
  -[ACXRemoteApplication minimumOSVersion]
  -[ACXRemoteApplication setMinimumOSVersion:]
  -[ACXRemoteApplication setIsBetaApp:]
  -[ACXRemoteApplication isSystemApp]
  -[ACXRemoteApplication watchKitAppExecutableHash]
  -[ACXRemoteApplication setWatchKitAppExecutableHash:]
  -[ACXRemoteApplication bundleShortVersion]
  -[ACXRemoteApplication setBundleShortVersion:]
  -[ACXRemoteApplication initWithBundleID:databaseUUID:sequenceNumber:]
  -[ACXRemoteApplication initWithSerializedDictionary:]
  -[ACXRemoteApplication initWithApplicationProxy:databaseUUID:sequenceNumber:]
  -[ACXRemoteApplication setApplicationType:]
  -[ACXRemoteApplication setIsProfileValidated:]
  -[ACXRemoteApplication setCompanionAppBundleID:]
  -[ACXRemoteApplication watchKitAppExtensionBundleID]
  -[ACXRemoteApplication setWatchKitAppExtensionBundleID:]
  -[ACXRemoteApplication setWatchKitVersion:]
  -[ACXRemoteApplication setApplicationMode:]
  -[ACXRemoteApplication setArchitectureSlices:]
  -[ACXRemoteApplication setUserActivityTypes:]
  -[ACXRemoteApplication setComplicationPrincipalClass:]
  -[ACXRemoteApplication setSupportedComplicationFamilies:]
  -[ACXRemoteApplication intentsSupported]
  -[ACXRemoteApplication setIntentsSupported:]
  -[ACXRemoteApplication intentsRestrictedWhileLocked]
  -[ACXRemoteApplication setIntentsRestrictedWhileLocked:]
  -[ACXRemoteApplication setHasClockfaces:]
  -[ACXRemoteApplication setLocalizedInfoPlistStrings:]
  -[ACXRemoteApplication companionAppBundleID]
  -[ACXRemoteApplication serializeAsRemoteApplication]
  -[ACXRemoteApplication applicationMode]
  -[ACXRemoteApplication architectureSlices]
  -[ACXRemoteApplication userActivityTypes]
  -[ACXRemoteApplication localizedInfoPlistStrings]
  -[ACXRemoteApplication isCompatibleWithOSVersion:]
  -[ACXRemoteApplication isRuntimeCompatibleWithOSVersion:]
  -[ACXRemoteApplication isCompatibleWithCPUType:subtype:]
  -[ACXRemoteApplication localizedInfoPlistStringsForKeys:fetchingFirstMatchingLocalizationInList:]
  -[ACXRemoteApplication isTheSameAppAs:]
  -[ACXRemoteApplication hasClockfaces]
  -[ACXRemoteApplication setCounterpartIdentifiers:]


ACXDeviceConnection : NSObject /usr/lib/libSystem.B.dylib <ACXDeviceConnectionDelegateProtocol>
 @property  NSXPCConnection *xpcConnection
 @property  NSHashTable *observers
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *observerQueue
 @property  NSObject<OS_dispatch_source> *observerReEstablishTimer
 @property  <ACXDeviceConnectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ACXDeviceConnection sharedDeviceConnection]
  +[ACXDeviceConnection _removeFilesAtURL:]
  +[ACXDeviceConnection performUninstallationCleanup]

  // instance methods
  -[ACXDeviceConnection init]
  -[ACXDeviceConnection delegate]
  -[ACXDeviceConnection setDelegate:]
  -[ACXDeviceConnection .cxx_destruct]
  -[ACXDeviceConnection addObserver:]
  -[ACXDeviceConnection removeObserver:]
  -[ACXDeviceConnection xpcConnection]
  -[ACXDeviceConnection setXpcConnection:]
  -[ACXDeviceConnection observers]
  -[ACXDeviceConnection internalQueue]
  -[ACXDeviceConnection fetchInstalledApplicationsForPairedDevice:completion:]
  -[ACXDeviceConnection fetchInstalledApplicationsWithErrorCompletion:]
  -[ACXDeviceConnection fetchInstalledCompatibleApplicationsWithDevice:withErrorCompletion:]
  -[ACXDeviceConnection fetchInstalledComplicationsWithErrorCompletion:]
  -[ACXDeviceConnection fetchInstalledComplicationsForPairedDevice:completion:]
  -[ACXDeviceConnection activeComplicationsWithErrorCompletion:]
  -[ACXDeviceConnection activeComplicationsForPairedDevice:completion:]
  -[ACXDeviceConnection installAllApplications]
  -[ACXDeviceConnection cancelPendingInstallations]
  -[ACXDeviceConnection installApplication:onPairedDevice:completion:]
  -[ACXDeviceConnection removeApplication:fromPairedDevice:completion:]
  -[ACXDeviceConnection fetchApplicationWithContainingApplicationBundleID:completion:]
  -[ACXDeviceConnection fetchInfoForApplicationWithBundleID:forPairedDevice:completion:]
  -[ACXDeviceConnection fetchWatchAppBundleURLWithinCompanionAppWithWatchAppIdentifier:completion:]
  -[ACXDeviceConnection fetchWatchAppBundleIDForCompanionAppBundleID:completion:]
  -[ACXDeviceConnection setAlwaysInstall:]
  -[ACXDeviceConnection setAlwaysInstall:forDevice:]
  -[ACXDeviceConnection getAlwaysInstallForPairedDevice:completion:]
  -[ACXDeviceConnection installApplication:withProvisioningProfiles:onPairedDevice:completion:]
  -[ACXDeviceConnection installProvisioningProfileWithURL:onPairedDevice:completion:]
  -[ACXDeviceConnection removeProvisioningProfileWithID:fromPairedDevice:completion:]
  -[ACXDeviceConnection fetchProvisioningProfilesForPairedDevice:completion:]
  -[ACXDeviceConnection fetchProvisioningProfilesForApplicationWithBundleID:forPairedDevice:completion:]
  -[ACXDeviceConnection updatePreferencesForApplicationWithIdentifier:preferences:forPairedDevice:completion:]
  -[ACXDeviceConnection installApplication:completionWithError:]
  -[ACXDeviceConnection removeApplication:completion:]
  -[ACXDeviceConnection fetchInfoForApplicationWithBundleID:completion:]
  -[ACXDeviceConnection getAlwaysInstallWithCompletion:]
  -[ACXDeviceConnection installApplication:withProvisioningProfiles:completionWithError:]
  -[ACXDeviceConnection installProvisioningProfileWithURL:completion:]
  -[ACXDeviceConnection removeProvisioningProfileWithID:completion:]
  -[ACXDeviceConnection fetchProvisioningProfilesWithCompletion:]
  -[ACXDeviceConnection fetchProvisioningProfilesForApplicationWithBundleID:completion:]
  -[ACXDeviceConnection updatePreferencesForApplicationWithIdentifier:preferences:completion:]
  -[ACXDeviceConnection _proxyWithErrorHandler:]
  -[ACXDeviceConnection _synchronousProxyWithErrorHandler:]
  -[ACXDeviceConnection observerQueue]
  -[ACXDeviceConnection copyLocalizedValuesFromAllDevicesForInfoPlistKeys:forAppWithBundleID:fetchingFirstMatchingLocalizationInList:error:]
  -[ACXDeviceConnection _onQueue_createXPCConnectionIfNecessary]
  -[ACXDeviceConnection installApplicationAtURL:onDeviceWithPairingID:installOptions:size:completion:]
  -[ACXDeviceConnection setUpdatePendingForCompanionApp:completion:]
  -[ACXDeviceConnection cancelUpdatePendingForCompanionApp:completion:]
  -[ACXDeviceConnection fetchLocallyAvailableApplicationWithContainingApplicationBundleID:forDeviceWithPairingID:completion:]
  -[ACXDeviceConnection applicationIsInstalledOnDeviceWithPairingID:withBundleID:completion:]
  -[ACXDeviceConnection applicationIsInstalledOnDeviceWithPairingID:withCompanionBundleID:completion:]
  -[ACXDeviceConnection applicationIsInstalledOnAnyPairedDeviceWithBundleID:completion:]
  -[ACXDeviceConnection applicationIsInstalledOnAnyPairedDeviceWithCompanionBundleID:completion:]
  -[ACXDeviceConnection systemAppIsInstallableOnDeviceWithPairingID:withBundleID:completion:]
  -[ACXDeviceConnection updatedInstallStateForApplicationsWithInfo:]
  -[ACXDeviceConnection updateInstallProgressForApplication:progress:phase:]
  -[ACXDeviceConnection applicationsInstalled:onDeviceWithPairingID:]
  -[ACXDeviceConnection applicationsUpdated:onDeviceWithPairingID:]
  -[ACXDeviceConnection applicationsUninstalled:onDeviceWithPairingID:]
  -[ACXDeviceConnection applicationDatabaseResyncedForDeviceWithPairingID:]
  -[ACXDeviceConnection _onQueue_reEstablishObserverConnectionIfNeeded]
  -[ACXDeviceConnection _invalidateXPCConnection]
  -[ACXDeviceConnection observerReEstablishTimer]
  -[ACXDeviceConnection setObserverReEstablishTimer:]
  -[ACXDeviceConnection updatePreferencesForApplicationWithIdentifier:preferences:writingToPreferencesLocation:forPairedDevice:options:completion:]
  -[ACXDeviceConnection enumerateInstalledApplicationsOnDeviceWithPairingID:withBlock:]
  -[ACXDeviceConnection fetchApplicationOnDeviceWithPairingID:withBundleID:completion:]
  -[ACXDeviceConnection enumerateLocallyAvailableApplicationsForDeviceWithPairingID:options:withBlock:]
  -[ACXDeviceConnection _fetchLocallyAvailableApplicationWithBundleID:forDeviceWithPairingID:options:completion:]
  -[ACXDeviceConnection fetchApplicationDatabaseSyncInformationForDeviceWithPairingID:returningDatabaseUUID:lastSequenceNumber:error:]
  -[ACXDeviceConnection enumerateInstallableSystemAppsOnDeviceWithPairingID:withBlock:]
  -[ACXDeviceConnection fetchInstallableSystemAppWithBundleID:onDeviceWithPairingID:completion:]
  -[ACXDeviceConnection retryPendingAppInstallationsForPairedDevice:]
  -[ACXDeviceConnection installApplicationAtURL:onPairedDevice:installOptions:size:completion:]
  -[ACXDeviceConnection setAllExistingAppsShouldBeInstalled:forNewDevice:]
  -[ACXDeviceConnection enumerateInstalledApplicationsOnPairedDevice:withBlock:]
  -[ACXDeviceConnection enumerateLocallyAvailableApplicationsForPairedDevice:options:withBlock:]
  -[ACXDeviceConnection fetchApplicationOnPairedDevice:withBundleID:completion:]
  -[ACXDeviceConnection fetchLocallyAvailableApplicationWithBundleID:forDeviceWithPairingID:completion:]
  -[ACXDeviceConnection fetchLocallyAvailableApplicationWithBundleID:forPairedDevice:completion:]
  -[ACXDeviceConnection fetchLocallyAvailableApplicationWithContainingApplicationBundleID:forPairedDevice:completion:]
  -[ACXDeviceConnection applicationIsInstalledOnPairedDevice:withBundleID:completion:]
  -[ACXDeviceConnection applicationIsInstalledOnPairedDevice:withCompanionBundleID:completion:]
  -[ACXDeviceConnection fetchApplicationDatabaseSyncInformationForPairedDevice:returningDatabaseUUID:lastSequenceNumber:error:]
  -[ACXDeviceConnection enumerateInstallableSystemAppsOnPairedDevice:withBlock:]
  -[ACXDeviceConnection fetchInstallableSystemAppWithBundleID:onPairedDevice:completion:]
  -[ACXDeviceConnection systemAppIsInstallableOnPairedDevice:withBundleID:completion:]
  -[ACXDeviceConnection installRequestFailedForApp:onDeviceWithPairingID:failureReason:wasUserInitiated:error:]
  -[ACXDeviceConnection acknowledgeTestFlightInstallBegunForApp:onDeviceWithPairingID:error:]


01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0400 /System/Library/PrivateFrameworks/MobileInstallation.framework/MobileInstallation: MIStoreMetadata 
01 00 0200 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 0300 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
