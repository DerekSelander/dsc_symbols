|| __DATA.__data _GEOConfigMSPClientRegistrationFetchPeriod
|| __DATA.__data _GEOConfigMSPClientRegistrationUpdatePeriod
|| __DATA.__data _GEOConfigMSPCloudSynchronizerDefaultDelayAfterError
|| __DATA.__data _GEOConfigMSPCloudSynchronizerDelayAfterServiceOutage
|| __DATA.__data _GEOConfigMSPCloudSynchronizerMaxDelayAfterError
|| __DATA.__data _GEOConfigMSPDefaultArrivingSoonInterval
|| __DATA.__data _GEOConfigMSPDefaultMaxNumberOfNotifications
|| __DATA.__data _GEOConfigMSPDefaultMinimumNotificationInterval
|| __DATA.__data _GEOConfigMSPDefaultTripAbandonExpiryInterval
|| __DATA.__data _GEOConfigMSPDefaultTripClosedExpiryInterval
|| __DATA.__data _GEOConfigMSPDefaultTripExpirationCheckupInterval
|| __DATA.__data _GEOConfigMSPForceLiveStrategy
|| __DATA.__data _GEOConfigMSPInitialMinimumETADifference
|| __DATA.__data _GEOConfigMSPMaximumNumberNotificationsMessageStrategy
|| __DATA.__data _GEOConfigMSPMinimumETADifferenceIncrement
|| __DATA.__data _GEOConfigMSPRemoteModelAccessForceNotificationsForAllChanges
|| __DATA.__data _GEOConfigMSPSenderLiveStrategyETAUpdateIntervalThrottle
|| __DATA.__data _GEOConfigMSPSenderMinimalStrategyETANearArrivalInterval
|| __DATA.__data _GEOConfigMSPSenderMinimalStrategyETAUpdateIntervalThrottle
|| __DATA.__data _GEOConfigMSPSenderMinimalStrategyETAUpdateNearArrivalIntervalThrottle
|| __DATA.__data _GEOConfigMSPShareETAUserEnabled
|| __DATA.__data _GEOConfigMSPSharedETASenderIdentifier
|| __DATA.__data _GEOConfigMSPSharedTripServerEnabled
|| __DATA.__data _GEOConfigMSPUpNextMaximumAllowableHorizontalAccuracyInMeters
|| __DATA.__data _GEOConfigMSPUpNextMinimumAllowableDistanceToEntryInMeters
|| __DATA.__data _GEOConfigMapsSyncCloudPushBatchSize
|| __DATA.__data _GEOConfigMapsSyncForceRunCollectionsMigrator
|| __DATA.__data _GEOConfigMapsSyncMaxMergeDuration
|| __DATA.__data _GEOConfigMapsSyncRequireDeviceToDeviceEncryption
|| __DATA.__data _GEOConfigMapsSyncTimerDelayForLocalChange
|| __DATA.__data _GEOConfigMapsSyncTimerDelayForRefresh
|| __DATA.__data _GEOConfigMapsSyncTimerDelayForRemoteChange
|| __DATA.__data _GEOConfigMapsSyncTimerDelayForRetryMax
|| __DATA.__data _GEOConfigMapsSyncTimerDelayForRetryMin
|| __DATA.__data _MSPBookmarksVersion_Fall2014toFall2016
|| __DATA.__data _MSPHistoryVersion_Fall2014toFall2016
|| __DATA.__data _MSPSharedTripServerStartDarwinNotification
|| __DATA.__data _MapsSupportConfig_ClimateShowAirQualityIndex
|| __DATA.__data _MapsSupportConfig_ClimateShowWeatherConditions
|| __DATA.__data _MapsSupportConfig_MapsSyncPolicyMinimumDeleteRatioForDataLoss
|| __DATA.__data _MapsSupportConfig_MapsSyncPolicyMinimumDeletesForDataLoss
|| __DATA.__objc_data _OBJC_CLASS_$_MSPCloudClientRegistrationRecord
|| __DATA.__objc_data _OBJC_CLASS_$_MSPCloudContainerChangeSet
|| __DATA.__objc_data _OBJC_CLASS_$_MSPCollectionItem
|| __DATA.__objc_data _OBJC_CLASS_$_MSPCollectionsFileContainerPersister
|| __DATA.__objc_data _OBJC_CLASS_$_MSPCollectionsReplicaRecordFromCloudKit
|| __DATA.__objc_data _OBJC_CLASS_$_MSPCompanionSyncedItem
|| __DATA.__objc_data _OBJC_CLASS_$_MSPContainerArrayStateSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_MSPContainerPolicyObserver
|| __DATA.__objc_data _OBJC_CLASS_$_MSPEncryptedCloudRecord
|| __DATA.__objc_data _OBJC_CLASS_$_MSPFavoriteTransitLinesQuery
|| __DATA.__objc_data _OBJC_CLASS_$_MSPFavoritesCollection
|| __DATA.__objc_data _OBJC_CLASS_$_MSPFavoritesReplicaMergeOptions
|| __DATA.__objc_data _OBJC_CLASS_$_MSPFavoritesReplicaReapTombstonesMergeOptions
|| __DATA.__objc_data _OBJC_CLASS_$_MSPFavoritesReplicaRecordFromCloudKit
|| __DATA.__objc_data _OBJC_CLASS_$_MSPGroupSessionStorage
|| __DATA.__objc_data _OBJC_CLASS_$_MSPHistoryFileContainerPersister
|| __DATA.__objc_data _OBJC_CLASS_$_MSPHistoryQuery
|| __DATA.__objc_data _OBJC_CLASS_$_MSPHistoryReplicaEditDeleteTombstone
|| __DATA.__objc_data _OBJC_CLASS_$_MSPHistoryReplicaEditUpdateModificationDate
|| __DATA.__objc_data _OBJC_CLASS_$_MSPHistoryReplicaMergeOptions
|| __DATA.__objc_data _OBJC_CLASS_$_MSPHistoryReplicaReapTombstonesMergeOptions
|| __DATA.__objc_data _OBJC_CLASS_$_MSPHistoryReplicaRecordFromCloudKit
|| __DATA.__objc_data _OBJC_CLASS_$_MSPMutableFavoriteRegion
|| __DATA.__objc_data _OBJC_CLASS_$_MSPMutableFavoriteRoute
|| __DATA.__objc_data _OBJC_CLASS_$_MSPMutableFavoriteTransitLine
|| __DATA.__objc_data _OBJC_CLASS_$_MSPMutableHistoryEntryTransitLineItem
|| __DATA.__objc_data _OBJC_CLASS_$_MSPOrderedReplicaEditUpdatePosition
|| __DATA.__objc_data _OBJC_CLASS_$_MSPOrderedReplicaRecordFromCloudKit
|| __DATA.__objc_data _OBJC_CLASS_$_MSPPin
|| __DATA.__objc_data _OBJC_CLASS_$_MSPPinStorage
|| __DATA.__objc_data _OBJC_CLASS_$_MSPPinnedPlaceContactStorage
|| __DATA.__objc_data _OBJC_CLASS_$_MSPPinnedPlacesFileContainerPersister
|| __DATA.__objc_data _OBJC_CLASS_$_MSPPinnedPlacesReplicaRecordFromCloudKit
|| __DATA.__objc_data _OBJC_CLASS_$_MSPReadOnlyCloudContainer
|| __DATA.__objc_data _OBJC_CLASS_$_MSPRegionBookmark
|| __DATA.__objc_data _OBJC_CLASS_$_MSPReplicaEdit
|| __DATA.__objc_data _OBJC_CLASS_$_MSPReplicaEditInsertRecord
|| __DATA.__objc_data _OBJC_CLASS_$_MSPReplicaEditRemoveTombstone
|| __DATA.__objc_data _OBJC_CLASS_$_MSPReplicaMergeOptionsReapTombstones
|| __DATA.__objc_data _OBJC_CLASS_$_MSPReplicaRecordFromCloudKit
|| __DATA.__objc_data _OBJC_CLASS_$_MSPRidesharingInformationSource
|| __DATA.__objc_data _OBJC_CLASS_$_MSPRidesharingTrip
|| __DATA.__objc_data _OBJC_CLASS_$_MSPRouteBookmark
|| __DATA.__objc_data _OBJC_CLASS_$_MSPSerializer
|| __DATA.__objc_data _OBJC_CLASS_$_MSPSyncManager
|| __DATA.__objc_data _OBJC_CLASS_$_MSPTransitLineBookmark
|| __DATA.__objc_data _OBJC_CLASS_$_MSPTransitStorageArtwork
|| __DATA.__objc_data _OBJC_CLASS_$_MSPTransitStorageAttribution
|| __DATA.__objc_data _OBJC_CLASS_$_MSPTransitStorageIcon
|| __DATA.__objc_data _OBJC_CLASS_$_MSPTransitStorageIncident
|| __DATA.__objc_data _OBJC_CLASS_$_MSPTransitStorageIncidentEntity
|| __DATA.__objc_data _OBJC_CLASS_$_MSPTransitStorageLine
|| __DATA.__objc_data _OBJC_CLASS_$_MSPTransitStorageLineItem
|| __DATA.__objc_data _OBJC_CLASS_$_MSPTransitStorageShield
|| __DATA.__objc_data _OBJC_CLASS_$_MSPTransitStorageSystem
|| __DATA.__objc_data _OBJC_CLASS_$__MSPReplicaTombstoneRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPCloudClientRegistrationRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPCloudContainerChangeSet
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPCollectionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPCollectionsFileContainerPersister
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPCollectionsReplicaRecordFromCloudKit
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPCompanionSyncedItem
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPContainerArrayStateSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPContainerPolicyObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPEncryptedCloudRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPFavoriteTransitLinesQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPFavoritesCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPFavoritesReplicaMergeOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPFavoritesReplicaReapTombstonesMergeOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPFavoritesReplicaRecordFromCloudKit
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPGroupSessionStorage
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPHistoryFileContainerPersister
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPHistoryQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPHistoryReplicaEditDeleteTombstone
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPHistoryReplicaEditUpdateModificationDate
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPHistoryReplicaReapTombstonesMergeOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPHistoryReplicaRecordFromCloudKit
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPMutableFavoriteRegion
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPMutableFavoriteRoute
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPMutableFavoriteTransitLine
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPMutableHistoryEntryTransitLineItem
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPOrderedReplicaEditUpdatePosition
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPOrderedReplicaRecordFromCloudKit
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPPin
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPPinStorage
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPPinnedPlaceContactStorage
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPPinnedPlacesFileContainerPersister
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPPinnedPlacesReplicaRecordFromCloudKit
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPReadOnlyCloudContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPRegionBookmark
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPReplicaEdit
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPReplicaEditInsertRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPReplicaEditRemoveTombstone
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPReplicaEditUpdateContents
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPReplicaMergeOptionsReapTombstones
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPReplicaRecordFromCloudKit
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPRidesharingInformationSource
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPRidesharingTrip
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPRouteBookmark
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPSerializer
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPSyncManager
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPTransitLineBookmark
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPTransitStorageArtwork
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPTransitStorageAttribution
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPTransitStorageIcon
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPTransitStorageIncident
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPTransitStorageIncidentEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPTransitStorageLine
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPTransitStorageLineItem
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPTransitStorageShield
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPTransitStorageSystem
|| __DATA.__objc_data _OBJC_METACLASS_$__MSPReplicaTombstoneRecord
|| __DATA_CONST.__const _MSPBookmarksKey
|| __DATA_CONST.__const _MSPBookmarksVersionKey
|| __DATA_CONST.__const _MSPCollectionsKey
|| __DATA_CONST.__const _MSPCollectionsVersionKey
|| __DATA_CONST.__const _MSPErrorDomain
|| __DATA_CONST.__const _MSPHistoryKey
|| __DATA_CONST.__const _MSPHistoryVersionKey
|| __DATA_CONST.__const _MSPMapsPathsAppContainerURLWasInvalidatedNotification
|| __DATA_CONST.__const _MSPMutableObjectContentDidUpdateNotification
|| __DATA_CONST.__const _MSPPinnedPlacesKey
|| __DATA_CONST.__const _MSPPinnedPlacesVersionKey
|| __DATA_CONST.__const _MSPSyncErrorDomain
|| __DATA_CONST.__const _kMSPBookmarksDataKey
|| __DATA_CONST.__const _kMSPContainerErrorDomain
|| __DATA_CONST.__const _kMSPContainerErrorUnkownStorageIdentifierKey
|| __DATA_CONST.__const _kMSPContainerUnavailableKeysKey
|| __DATA_CONST.__const _kMSPContainerUntransferableObjectKey
|| __DATA_CONST.__const _kMSPDuplicateStorageIdentifierObjectsKey
|| __DATA_CONST.__const _kMSPSearchResultHistoryItemDataKey
|| __DATA_CONST.__const _kMSPUnderlyingErrorsKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPBookmarkStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCloudClientRegistration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCloudContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCloudContainerCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCloudKitAccountAccess
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCloudSynchronizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCloudSynchronizerRunConditions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCollectionItemRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCollectionItemReplica
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCollectionItemReplicaStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCollectionItemStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCollectionStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCollectionsContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCollectionsQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCollectionsReplica
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPCollectionsReplicaSimpleRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPDirectionsSearch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPDroppedPin
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPEditableQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPFavoritePlacesQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPFavoritesContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPFavoritesFileContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPFavoritesQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPFavoritesReplica
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPFavoritesReplicaSimpleRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPFileContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPHistoryContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPHistoryEntryStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPHistoryReplica
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPHistoryReplicaSimpleRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPJournal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPLowFuelDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPMapsPaths
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPMapsPushDaemonRemoteProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPMutableFavorite
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPMutableFavoritePlace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPMutableHistoryEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPMutableHistoryEntryPlaceDisplay
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPMutableHistoryEntryRoute
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPMutableHistoryEntrySearch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPOrderedReplica
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPPathComponent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPPinnedPlace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPPinnedPlaceStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPPinnedPlacesContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPPinnedPlacesQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPPinnedPlacesReplica
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPPinnedPlacesReplicaRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPPlaceBookmark
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPPlaceDisplay
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPPosition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPQuerySearch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPQuerySource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPRemoteCollectionsContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPRemoteFavoritesContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPRemoteHistoryContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPRemotePinnedPlacesContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPReplica
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPReplicaEditUpdateContents
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPSharedTripServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPSharedTripService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPSynchronizedContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPUserRoutingPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPVectorTimestamp
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NewMSPQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPBookmarkStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCloudClientRegistration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCloudContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCloudContainerCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCloudKitAccountAccess
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCloudSynchronizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCloudSynchronizerRunConditions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCollectionItemRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCollectionItemReplica
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCollectionItemReplicaStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCollectionItemStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCollectionStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCollectionsContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCollectionsQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCollectionsReplica
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPCollectionsReplicaSimpleRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPDirectionsSearch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPDroppedPin
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPEditableQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPFavoritePlacesQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPFavoritesContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPFavoritesFileContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPFavoritesQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPFavoritesReplica
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPFavoritesReplicaSimpleRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPFileContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPHistoryContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPHistoryEntryStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPHistoryReplica
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPHistoryReplicaMergeOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPHistoryReplicaSimpleRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPJournal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPLowFuelDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPMapsPaths
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPMapsPushDaemonRemoteProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPMutableFavorite
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPMutableFavoritePlace
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPMutableHistoryEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPMutableHistoryEntryPlaceDisplay
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPMutableHistoryEntryRoute
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPMutableHistoryEntrySearch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPOrderedReplica
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPPathComponent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPPinnedPlace
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPPinnedPlaceStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPPinnedPlacesContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPPinnedPlacesQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPPinnedPlacesReplica
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPPinnedPlacesReplicaRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPPlaceBookmark
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPPlaceDisplay
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPPosition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPQuerySearch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPQuerySource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPRemoteCollectionsContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPRemoteFavoritesContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPRemoteHistoryContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPRemotePinnedPlacesContainerPersister
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPReplica
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPSharedTripServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPSharedTripService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPSynchronizedContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPUserRoutingPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPVectorTimestamp
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NewMSPQuery
|| __TEXT.__text _GEOConfigMSPGetConfigStoreStringKeysForWatchSync
|| __TEXT.__text _GEOConfigMSPGetUserDefaultStringKeysForWatchSync
|| __TEXT.__text _MSPBookmarkStorageArrayFromPropertyList
|| __TEXT.__text _MSPBookmarkStorageReadFrom
|| __TEXT.__text _MSPBundle
|| __TEXT.__text _MSPCollectionItemReplicaStorageReadFrom
|| __TEXT.__text _MSPCollectionItemStorageReadFrom
|| __TEXT.__text _MSPCollectionStorageReadFrom
|| __TEXT.__text _MSPCompanionSyncedItemReadFrom
|| __TEXT.__text _MSPDirectionsSearchReadFrom
|| __TEXT.__text _MSPDroppedPinReadFrom
|| __TEXT.__text _MSPExcludePathFromBackup
|| __TEXT.__text _MSPFavoriteGetAbridgedBookmarkStorageForSpotlightStorage
|| __TEXT.__text _MSPFavoriteGetBookmarkStorage
|| __TEXT.__text _MSPFavoriteMakeFromBookmarkStorage
|| __TEXT.__text _MSPFavoritesArrayMakeFromSerializedRepresentation
|| __TEXT.__text _MSPGroupSessionStorageReadFrom
|| __TEXT.__text _MSPHistoryEntriesArrayMakeFromSerializedRepresentation
|| __TEXT.__text _MSPHistoryEntryGetStorage
|| __TEXT.__text _MSPHistoryEntryMakeFromStorage
|| __TEXT.__text _MSPHistoryEntryStorageArrayFromPropertyList
|| __TEXT.__text _MSPHistoryEntryStorageReadFrom
|| __TEXT.__text _MSPIncludePathInBackup
|| __TEXT.__text _MSPIsExcludedFromBackup
|| __TEXT.__text _MSPPinReadFrom
|| __TEXT.__text _MSPPinStorageReadFrom
|| __TEXT.__text _MSPPinnedPlaceContactStorageReadFrom
|| __TEXT.__text _MSPPinnedPlaceStorageReadFrom
|| __TEXT.__text _MSPPlaceBookmarkReadFrom
|| __TEXT.__text _MSPPlaceDisplayReadFrom
|| __TEXT.__text _MSPPropertyListFromBookmarkStorageArray
|| __TEXT.__text _MSPPropertyListFromHistoryEntryStorageArray
|| __TEXT.__text _MSPQuerySearchReadFrom
|| __TEXT.__text _MSPRegionBookmarkReadFrom
|| __TEXT.__text _MSPReplicaEditsGetAddedDeletedOrUpdatedIdentifiers
|| __TEXT.__text _MSPRidesharingTripReadFrom
|| __TEXT.__text _MSPRouteBookmarkReadFrom
|| __TEXT.__text _MSPSerializedRepresentationForFavoritesArray
|| __TEXT.__text _MSPSerializedRepresentationForHistoryEntriesArray
|| __TEXT.__text _MSPSharedTripAvailable
|| __TEXT.__text _MSPSharedTripEnabled
|| __TEXT.__text _MSPSharedTripNetworkEnabled
|| __TEXT.__text _MSPTransitLineBookmarkReadFrom
|| __TEXT.__text _MSPTransitStorageArtworkReadFrom
|| __TEXT.__text _MSPTransitStorageAttributionReadFrom
|| __TEXT.__text _MSPTransitStorageIconReadFrom
|| __TEXT.__text _MSPTransitStorageIncidentEntityReadFrom
|| __TEXT.__text _MSPTransitStorageIncidentReadFrom
|| __TEXT.__text _MSPTransitStorageLineItemReadFrom
|| __TEXT.__text _MSPTransitStorageLineReadFrom
|| __TEXT.__text _MSPTransitStorageShieldReadFrom
|| __TEXT.__text _MSPTransitStorageSystemReadFrom
__ CloudKit: _CKAccountChangedNotification
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKErrorRetryAfterKey
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _CKRecordChangedErrorServerRecordKey
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKContainerID
__ CloudKit: _OBJC_CLASS_$_CKContainerOptions
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesConfiguration
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifySubscriptionsOperation
__ CloudKit: _OBJC_CLASS_$_CKNotification
__ CloudKit: _OBJC_CLASS_$_CKNotificationInfo
__ CloudKit: _OBJC_CLASS_$_CKOperationConfiguration
__ CloudKit: _OBJC_CLASS_$_CKOperationGroup
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneNotification
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneSubscription
__ CloudKit: _OBJC_CLASS_$_CKServerChangeToken
__ CloudKit: _kCKCloudServicesEntitlementKey
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDistributedCenter
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: __kCFURLIsExcludedFromCloudBackupKey
__ CoreFoundation: __kCFURLIsExcludedFromUnencryptedBackupKey
__ CoreFoundation: _kCFErrorDebugDescriptionKey
__ CoreLocation: _CLLocationCoordinate2DIsValid
__ CoreLocation: _kCLLocationCoordinate2DInvalid
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileSize
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUbiquitousKeyValueStoreChangedKeysKey
__ Foundation: _NSUbiquitousKeyValueStoreDidChangeExternallyNotification
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUbiquitousKeyValueStore
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSProxy
__ GeoServices: _DefaultLoggingSubsystem
__ GeoServices: _GEOBZ2Compress
__ GeoServices: _GEOBZ2Uncompress
__ GeoServices: _GEOConfigGetBOOL
__ GeoServices: _GEOConfigGetDouble
__ GeoServices: _GEOConfigGetUInteger
__ GeoServices: _GEOConfigGetUint64
__ GeoServices: _GEOFindOrCreateLog
__ GeoServices: _GEOMapItemIsEqualToMapItemForPurpose
__ GeoServices: _GEOPolylineCoordinateCompare
__ GeoServices: _GEOPolylineCoordinateInvalid
__ GeoServices: _MapsAppBundleId
__ GeoServices: _OBJC_CLASS_$_GEOAnalyticsPipelinePortal
__ GeoServices: _OBJC_CLASS_$_GEOAnnouncement
__ GeoServices: _OBJC_CLASS_$_GEOComposedRoute
__ GeoServices: _OBJC_CLASS_$_GEOComposedRouteTraffic
__ GeoServices: _OBJC_CLASS_$_GEOComposedWaypoint
__ GeoServices: _OBJC_CLASS_$_GEOLatLng
__ GeoServices: _OBJC_CLASS_$_GEOLocation
__ GeoServices: _OBJC_CLASS_$_GEOLocationShifter
__ GeoServices: _OBJC_CLASS_$_GEOMapItemIdentifier
__ GeoServices: _OBJC_CLASS_$_GEOMapItemStorage
__ GeoServices: _OBJC_CLASS_$_GEOMapRegion
__ GeoServices: _OBJC_CLASS_$_GEONetworkObserver
__ GeoServices: _OBJC_CLASS_$_GEOObserverHashTable
__ GeoServices: _OBJC_CLASS_$_GEOPlatform
__ GeoServices: _OBJC_CLASS_$_GEORoute
__ GeoServices: _OBJC_CLASS_$_GEORouteInitializerData
__ GeoServices: _OBJC_CLASS_$_GEOSharedNavETAInfo
__ GeoServices: _OBJC_CLASS_$_GEOSharedNavRouteInfo
__ GeoServices: _OBJC_CLASS_$_GEOSharedNavSenderInfo
__ GeoServices: _OBJC_CLASS_$_GEOSharedNavState
__ GeoServices: _OBJC_CLASS_$_GEOStep
__ GeoServices: _OBJC_CLASS_$_GEOStorageRouteRequestStorage
__ GeoServices: _OBJC_CLASS_$_GEOUserPreferences
__ IDS: _IDSCopyIDForEmailAddress
__ IDS: _IDSCopyIDForPhoneNumber
__ IDS: _IDSSendMessageOptionAlwaysSkipSelfKey
__ IDS: _IDSSendMessageOptionFromIDKey
__ IDS: _OBJC_CLASS_$_IDSService
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ Navigation: _MNDisplayETAAndRemainingMinutes
__ Navigation: _MNNavigationServiceStateAsString
__ Navigation: _MNNavigationServiceStateChangedFromNavigatingToStopped
__ Navigation: _MNNavigationServiceStateChangedToNavigating
__ Navigation: _MNNavigationServiceStateIsNavigating
__ Navigation: _OBJC_CLASS_$_MNNavigationService
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBDataWriter
__ ProtocolBuffer: _OBJC_CLASS_$_PBUnknownFields
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedUInt64Add
__ ProtocolBuffer: _PBRepeatedUInt64Clear
__ ProtocolBuffer: _PBRepeatedUInt64Copy
__ ProtocolBuffer: _PBRepeatedUInt64Hash
__ ProtocolBuffer: _PBRepeatedUInt64IsEqual
__ ProtocolBuffer: _PBRepeatedUInt64NSArray
__ ProtocolBuffer: _PBRepeatedUInt64Set
__ ProtocolBuffer: _PBUnknownFieldAdd
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _uuid_compare
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
MSPSharedTripNotificationRules : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned long maxPostedNotifications
 @property  unsigned long postedNotifcations
 @property  double minimumETADifference
 @property  double minimumNotificationInterval
 @property  NSDate *lastPostedETADate
 @property  NSDate *lastPostedNotificationDate
 @property  NSDate *lastUpdatedDate
 @property  NSDate *currentETADate
 @property  BOOL hasMadeFinalPush
 @property  unsigned long currentlyNecessaryNotificationType

  // class methods
  +[MSPSharedTripNotificationRules supportsSecureCoding]
  +[MSPSharedTripNotificationRules unarchivingObjectsSet]

  // instance methods
  -[MSPSharedTripNotificationRules init]
  -[MSPSharedTripNotificationRules encodeWithCoder:]
  -[MSPSharedTripNotificationRules initWithCoder:]
  -[MSPSharedTripNotificationRules .cxx_destruct]
  -[MSPSharedTripNotificationRules lastUpdatedDate]
  -[MSPSharedTripNotificationRules setLastUpdatedDate:]
  -[MSPSharedTripNotificationRules maxPostedNotifications]
  -[MSPSharedTripNotificationRules postedNotifcations]
  -[MSPSharedTripNotificationRules minimumETADifference]
  -[MSPSharedTripNotificationRules minimumNotificationInterval]
  -[MSPSharedTripNotificationRules lastPostedETADate]
  -[MSPSharedTripNotificationRules lastPostedNotificationDate]
  -[MSPSharedTripNotificationRules hasMadeFinalPush]
  -[MSPSharedTripNotificationRules initWithMaximumNumberOfNotifications:minimumNotificationInterval:]
  -[MSPSharedTripNotificationRules currentETADate]
  -[MSPSharedTripNotificationRules setLastPostedETADate:]
  -[MSPSharedTripNotificationRules setLastPostedNotificationDate:]
  -[MSPSharedTripNotificationRules setPostedNotifcations:]
  -[MSPSharedTripNotificationRules incrementMinimumETADiffernce]
  -[MSPSharedTripNotificationRules setHasMadeFinalPush:]
  -[MSPSharedTripNotificationRules setCurrentETADate:]
  -[MSPSharedTripNotificationRules setMinimumETADifference:]
  -[MSPSharedTripNotificationRules initWithMaximumNumberOfNotifications:]
  -[MSPSharedTripNotificationRules didPostNotification]
  -[MSPSharedTripNotificationRules currentlyNecessaryNotificationType]
  -[MSPSharedTripNotificationRules didReceiveUpdateWithETA:lastUpdated:]
  -[MSPSharedTripNotificationRules minimumETADifferenceIncrement]
  -[MSPSharedTripNotificationRules setMaxPostedNotifications:]
  -[MSPSharedTripNotificationRules setMinimumNotificationInterval:]


MSPFavoritesFileContainerPersister : MSPFileContainerPersister
  // instance methods
  -[MSPFavoritesFileContainerPersister getSnapshot:data:forNewContents:edits:appliedToOldContents:error:]
  -[MSPFavoritesFileContainerPersister getSnapshot:data:mergingCurrentState:withState:mergeOptions:error:]
  -[MSPFavoritesFileContainerPersister stateSnapshotFromData:]


MSPSerializer : NSObject /usr/lib/libSystem.B.dylib <SYChangeSerializer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPSerializer dataFromChange:]
  -[MSPSerializer changeFromData:ofType:]


MSPContainerPolicyObserver : NSObject /usr/lib/libSystem.B.dylib <MSPContainerObserver>
 @property  BOOL keepMetrics
 @property  unsigned long dataLossPolicyOffenses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPContainerPolicyObserver init]
  -[MSPContainerPolicyObserver .cxx_destruct]
  -[MSPContainerPolicyObserver keepMetrics]
  -[MSPContainerPolicyObserver dataLossPolicyOffenses]
  -[MSPContainerPolicyObserver setDataLossPolicyOffenses:]
  -[MSPContainerPolicyObserver container:didEditWithNewContents:orderedEdits:cause:context:]
  -[MSPContainerPolicyObserver observationQueueForContainer:]
  -[MSPContainerPolicyObserver containerWillEraseContents:]
  -[MSPContainerPolicyObserver setContainerItemCount:]
  -[MSPContainerPolicyObserver setKeepMetrics:]


MSPSharedTripServer : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, MSPReceiverETAControllerDelegate, MSPSenderETAControllerDelegate, MSPSharedTripAvailabiltyDelegate, MSPSharedTripXPCServer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPSharedTripServer init]
  -[MSPSharedTripServer dealloc]
  -[MSPSharedTripServer .cxx_destruct]
  -[MSPSharedTripServer listener:shouldAcceptNewConnection:]
  -[MSPSharedTripServer connections]
  -[MSPSharedTripServer checkin]
  -[MSPSharedTripServer createXPCListener]
  -[MSPSharedTripServer createControllers]
  -[MSPSharedTripServer cleanConnections]
  -[MSPSharedTripServer fetchAccountValidWithCompletion:]
  -[MSPSharedTripServer fetchSendingIdentityWithCompletion:]
  -[MSPSharedTripServer startSharingTripWithContacts:]
  -[MSPSharedTripServer stopSharingTripWithContacts:]
  -[MSPSharedTripServer startSharingTripWithMessagesContacts:]
  -[MSPSharedTripServer stopSharingTripWithMessagesContacts:]
  -[MSPSharedTripServer startSharingTripWithMessagesGroup:]
  -[MSPSharedTripServer stopSharingTripWithMessagesGroup:]
  -[MSPSharedTripServer stopSharingTrip]
  -[MSPSharedTripServer fetchActiveHandlesWithCompletion:]
  -[MSPSharedTripServer subscribeToSharedTripUpdatesWithIdentifier:]
  -[MSPSharedTripServer unsubscribeFromSharedTripUpdatesWithIdentifier:]
  -[MSPSharedTripServer fetchSharedTripsWithCompletion:]
  -[MSPSharedTripServer blockSharedTrip:]
  -[MSPSharedTripServer _setNotificationCenter:]
  -[MSPSharedTripServer etaController:sharedTripDidBecomeAvailable:]
  -[MSPSharedTripServer etaController:didUpdateDestinationForSharedTrip:]
  -[MSPSharedTripServer etaController:didUpdateETAForSharedTrip:]
  -[MSPSharedTripServer etaController:didUpdateRouteForSharedTrip:]
  -[MSPSharedTripServer etaController:didUpdateReachedDestinationForSharedTrip:]
  -[MSPSharedTripServer etaController:sharedTripDidClose:]
  -[MSPSharedTripServer etaController:sharedTripDidBecomeUnavailable:]
  -[MSPSharedTripServer senderController:didInvalidateSharedTripWithError:]
  -[MSPSharedTripServer invalidateActiveHandlesForSenderController:]
  -[MSPSharedTripServer senderController:sendMessage:toParticipant:]
  -[MSPSharedTripServer senderController:sendMessage:toGroup:]
  -[MSPSharedTripServer relay:accountStatusChanged:]


MSPCloudContainer : NSObject /usr/lib/libSystem.B.dylib <MSPCloudNotificationReceiver>
 @property  MSPCloudKitAccountAccess *access
 @property  MSPCloudContainerCache *cache
 @property  NSObject<OS_dispatch_queue> *observerQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  BOOL hasActiveSubscription
 @property  MSPJournal *journal
 @property  NSMutableDictionary *pendingOperations
 @property  BOOL canceled
 @property  NSError *cancelError
 @property  NSHashTable *observers
 @property  CKContainer *ckContainer
 @property  BOOL useSecureContainer
 @property  unsigned long operationBatchSize
 @property  MSPContainer *container

  // instance methods
  -[MSPCloudContainer container]
  -[MSPCloudContainer setContainer:]
  -[MSPCloudContainer .cxx_destruct]
  -[MSPCloudContainer addObserver:]
  -[MSPCloudContainer removeObserver:]
  -[MSPCloudContainer callbackQueue]
  -[MSPCloudContainer canceled]
  -[MSPCloudContainer setCanceled:]
  -[MSPCloudContainer access]
  -[MSPCloudContainer zoneID]
  -[MSPCloudContainer zoneName]
  -[MSPCloudContainer setCache:]
  -[MSPCloudContainer cache]
  -[MSPCloudContainer setCallbackQueue:]
  -[MSPCloudContainer setObservers:]
  -[MSPCloudContainer observers]
  -[MSPCloudContainer isCanceled]
  -[MSPCloudContainer useZoneWidePCS]
  -[MSPCloudContainer cancelError]
  -[MSPCloudContainer setCancelError:]
  -[MSPCloudContainer pendingOperations]
  -[MSPCloudContainer journal]
  -[MSPCloudContainer setJournal:]
  -[MSPCloudContainer observerQueue]
  -[MSPCloudContainer setAccess:]
  -[MSPCloudContainer initWithContainer:cache:access:]
  -[MSPCloudContainer initWithContainer:cache:]
  -[MSPCloudContainer ckContainer]
  -[MSPCloudContainer _forEachObserver:]
  -[MSPCloudContainer configureCKOperation:withGroup:]
  -[MSPCloudContainer removePendingOperationWithID:]
  -[MSPCloudContainer addCKOperation:]
  -[MSPCloudContainer hasActiveSubscription]
  -[MSPCloudContainer setHasActiveSubscription:]
  -[MSPCloudContainer zoneSubscriptionName]
  -[MSPCloudContainer replicaRecordClass]
  -[MSPCloudContainer _modifyRecordsOperationWithRecordsToSave:toDelete:group:modifyRecordsCompletion:]
  -[MSPCloudContainer batchedOperationsFromRecords:toDelete:group:batchSize:modifyRecordsCompletionBlock:]
  -[MSPCloudContainer handleMergeError:completion:]
  -[MSPCloudContainer mergeRemoteChanges:withGroup:completion:]
  -[MSPCloudContainer fetchChangesWithGroup:completion:]
  -[MSPCloudContainer mergeOptionsForEarliestKnownSyncDate:]
  -[MSPCloudContainer mergeLocalChangesFromReplica:withAppliedRemoteChanges:group:completion:]
  -[MSPCloudContainer pushChanges:withGroup:completion:]
  -[MSPCloudContainer cancelPendingOperationsWithError:]
  -[MSPCloudContainer didReceiveRemoteNotification:]
  -[MSPCloudContainer initWithContainer:accountID:]
  -[MSPCloudContainer setUseSecureContainer:]
  -[MSPCloudContainer setupCloudContainerWithGroup:completion:]
  -[MSPCloudContainer removeCloudContainerWithGroup:completion:]
  -[MSPCloudContainer subscribeToChangesWithCompletion:]
  -[MSPCloudContainer mergeWithGroup:completion:]
  -[MSPCloudContainer cancelMergeWithError:]
  -[MSPCloudContainer containerDidEraseContents]
  -[MSPCloudContainer setObserverQueue:]
  -[MSPCloudContainer setPendingOperations:]
  -[MSPCloudContainer useSecureContainer]
  -[MSPCloudContainer operationBatchSize]
  -[MSPCloudContainer setOperationBatchSize:]


MSPReadOnlyCloudContainer : MSPCloudContainer
  // instance methods
  -[MSPReadOnlyCloudContainer pushChanges:withGroup:completion:]


MSPUserRoutingPreferences : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDate *timestamp
 @property  BOOL avoidTolls
 @property  BOOL avoidHighways
 @property  long long defaultDisabledTransitModes

  // class methods
  +[MSPUserRoutingPreferences supportsSecureCoding]

  // instance methods
  -[MSPUserRoutingPreferences copy]
  -[MSPUserRoutingPreferences encodeWithCoder:]
  -[MSPUserRoutingPreferences initWithCoder:]
  -[MSPUserRoutingPreferences .cxx_destruct]
  -[MSPUserRoutingPreferences timestamp]
  -[MSPUserRoutingPreferences avoidTolls]
  -[MSPUserRoutingPreferences avoidHighways]
  -[MSPUserRoutingPreferences defaultDisabledTransitModes]
  -[MSPUserRoutingPreferences initWithAvoidTolls:avoidHighways:defaultDisabledTransitModes:]
  -[MSPUserRoutingPreferences createUserPreferences]


NewMSPQuery : NSObject /usr/lib/libSystem.B.dylib <MSPContainerObserver, MSPQueryDelegate>
 @property  NSArray *cachedContents
 @property  @? filterBlock
 @property  NewMSPQuery *parentQuery
 @property  NSLock *lock
 @property  <MSPQueryDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSObject<OS_dispatch_queue> *processingQueue
 @property  BOOL isReady
 @property  MSPContainer *container
 @property  NSArray *contents
 @property  unsigned long contentVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NewMSPQuery container]
  -[NewMSPQuery delegate]
  -[NewMSPQuery setDelegate:]
  -[NewMSPQuery lock]
  -[NewMSPQuery .cxx_destruct]
  -[NewMSPQuery contents]
  -[NewMSPQuery isReady]
  -[NewMSPQuery callbackQueue]
  -[NewMSPQuery filterBlock]
  -[NewMSPQuery setCallbackQueue:]
  -[NewMSPQuery setLock:]
  -[NewMSPQuery setIsReady:]
  -[NewMSPQuery processingQueue]
  -[NewMSPQuery contentVersion]
  -[NewMSPQuery setProcessingQueue:]
  -[NewMSPQuery _notifyDelegate:]
  -[NewMSPQuery container:didEditWithNewContents:orderedEdits:cause:context:]
  -[NewMSPQuery containerDidEraseContents:fromStorageTypes:]
  -[NewMSPQuery initWithContainer:delegate:filteredWithBlock:]
  -[NewMSPQuery initWithParentQuery:container:delegate:filteredWithBlock:]
  -[NewMSPQuery processContents]
  -[NewMSPQuery processContentsWithCompletion:]
  -[NewMSPQuery setCachedContents:]
  -[NewMSPQuery processContentsUsingBlock:completion:]
  -[NewMSPQuery parentQuery]
  -[NewMSPQuery queryContentsDidLoad:contentsVersion:]
  -[NewMSPQuery queryContentsDidChange:contentsVersion:]
  -[NewMSPQuery addOrUpdateObjects:completion:]
  -[NewMSPQuery isObject:equalTo:]
  -[NewMSPQuery removeObjects:completion:]
  -[NewMSPQuery moveObject:toIndex:completion:]
  -[NewMSPQuery initWithContainer:delegate:]
  -[NewMSPQuery subQueryFilteredWithBlock:]
  -[NewMSPQuery fetchContentsWithHandler:]
  -[NewMSPQuery setContents:completion:]
  -[NewMSPQuery addOrUpdateObject:completion:]
  -[NewMSPQuery removeObject:completion:]
  -[NewMSPQuery moveObject:beforeObject:completion:]
  -[NewMSPQuery moveObject:afterObject:completion:]
  -[NewMSPQuery moveObjectToFront:completion:]
  -[NewMSPQuery moveObjectToBack:completion:]
  -[NewMSPQuery cachedContents]
  -[NewMSPQuery setFilterBlock:]
  -[NewMSPQuery setParentQuery:]


MSPHistoryQuery : NewMSPQuery
 @property  NSArray *contents

  // instance methods
  -[MSPHistoryQuery contents]


MSPFavoritesQuery : NewMSPQuery
 @property  NSArray *contents

  // instance methods
  -[MSPFavoritesQuery contents]
  -[MSPFavoritesQuery isObject:equalTo:]
  -[MSPFavoritesQuery favoriteForFavorite:]


MSPFavoritePlacesQuery : MSPFavoritesQuery
 @property  NSArray *contents

  // instance methods
  -[MSPFavoritePlacesQuery contents]
  -[MSPFavoritePlacesQuery initWithContainer:delegate:filteredWithBlock:]


MSPFavoriteTransitLinesQuery : MSPFavoritesQuery
 @property  NSArray *contents

  // instance methods
  -[MSPFavoriteTransitLinesQuery contents]
  -[MSPFavoriteTransitLinesQuery initWithContainer:delegate:filteredWithBlock:]


MSPCollectionsQuery : NewMSPQuery
 @property  NSArray *contents
 @property  MSPFavoritesContainer *itemContainer
 @property  NewMSPQuery *itemQuery

  // instance methods
  -[MSPCollectionsQuery .cxx_destruct]
  -[MSPCollectionsQuery contents]
  -[MSPCollectionsQuery itemContainer]
  -[MSPCollectionsQuery setItemContainer:]
  -[MSPCollectionsQuery setCachedContents:]
  -[MSPCollectionsQuery processContentsUsingBlock:completion:]
  -[MSPCollectionsQuery queryContentsDidChange:contentsVersion:]
  -[MSPCollectionsQuery addOrUpdateObjects:completion:]
  -[MSPCollectionsQuery removeObjects:completion:]
  -[MSPCollectionsQuery subQueryFilteredWithBlock:]
  -[MSPCollectionsQuery addOrUpdateObject:completion:]
  -[MSPCollectionsQuery removeObject:completion:]
  -[MSPCollectionsQuery initWithCollectionsContainer:itemContainer:delegate:filteredWithBlock:]
  -[MSPCollectionsQuery itemQuery]
  -[MSPCollectionsQuery initWithCollectionsContainer:itemContainer:delegate:]
  -[MSPCollectionsQuery setItemQuery:]


MSPPinnedPlacesQuery : NewMSPQuery
 @property  NSArray *contents

  // instance methods
  -[MSPPinnedPlacesQuery contents]


MSPPlaceDisplay : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasPlaceMapItemStorage
 @property  GEOMapItemStorage *placeMapItemStorage
 @property  BOOL hasSupersededSearchIdentifier
 @property  NSString *supersededSearchIdentifier
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPPlaceDisplay isEqual:]
  -[MSPPlaceDisplay copyWithZone:]
  -[MSPPlaceDisplay .cxx_destruct]
  -[MSPPlaceDisplay dictionaryRepresentation]
  -[MSPPlaceDisplay writeTo:]
  -[MSPPlaceDisplay mergeFrom:]
  -[MSPPlaceDisplay readFrom:]
  -[MSPPlaceDisplay copyTo:]
  -[MSPPlaceDisplay unknownFields]
  -[MSPPlaceDisplay setPlaceMapItemStorage:]
  -[MSPPlaceDisplay setSupersededSearchIdentifier:]
  -[MSPPlaceDisplay hasPlaceMapItemStorage]
  -[MSPPlaceDisplay hasSupersededSearchIdentifier]
  -[MSPPlaceDisplay placeMapItemStorage]
  -[MSPPlaceDisplay supersededSearchIdentifier]


MSPReceiverETAController : NSObject /usr/lib/libSystem.B.dylib <MSPSharedTripStorageDelegate, MSPSharedTripRelayDelegate>
 @property  NSArray *allTrips
 @property  <MSPReceiverETAControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPReceiverETAController dealloc]
  -[MSPReceiverETAController delegate]
  -[MSPReceiverETAController setDelegate:]
  -[MSPReceiverETAController .cxx_destruct]
  -[MSPReceiverETAController cleanTimer]
  -[MSPReceiverETAController blockSharedTrip:]
  -[MSPReceiverETAController initWithRelay:]
  -[MSPReceiverETAController _setNotificationCenter:]
  -[MSPReceiverETAController subscribeToUpdatesToSharedTrip:]
  -[MSPReceiverETAController unsubscribeFromUpdatesToSharedTrip:]
  -[MSPReceiverETAController allTrips]
  -[MSPReceiverETAController updateContacts]
  -[MSPReceiverETAController _cleanGroup:]
  -[MSPReceiverETAController _resolveContactIfNeeded:fromId:completion:]
  -[MSPReceiverETAController _allowMessageWithState:forGroup:fromID:]
  -[MSPReceiverETAController _cleanUpNecessaryForGroup:]
  -[MSPReceiverETAController _cleanupIfNecessary]
  -[MSPReceiverETAController _updateDelegateWithUpdateState:to:freshAvailable:]
  -[MSPReceiverETAController _showOrUpdateNotificationIfNeeded:]
  -[MSPReceiverETAController _updateData:forGroup:fromID:]
  -[MSPReceiverETAController storageController:updatedSharedTripGroupStorage:]
  -[MSPReceiverETAController relay:receiveData:info:fromID:]
  -[MSPReceiverETAController relay:sharingClosed:]
  -[MSPReceiverETAController groupSession:participantDidJoin:]
  -[MSPReceiverETAController groupSession:participantDidLeave:]
  -[MSPReceiverETAController groupSessionEnded:]


MSPCloudClientRegistration : NSObject /usr/lib/libSystem.B.dylib
 @property  MSPCloudClientRegistrationRecord *clientRecord
 @property  NSArray *otherClientRecords
 @property  unsigned long maxEarliestCompatibleEpoch
 @property  CKContainer *ckContainer
 @property  NSDate *lastRegistrationUpdate
 @property  NSDate *lastRegistrationFetch
 @property  NSString *accountIdentifier
 @property  NSUUID *clientIdentifier

  // class methods
  +[MSPCloudClientRegistration zoneID]

  // instance methods
  -[MSPCloudClientRegistration .cxx_destruct]
  -[MSPCloudClientRegistration accountIdentifier]
  -[MSPCloudClientRegistration setAccountIdentifier:]
  -[MSPCloudClientRegistration setClientIdentifier:]
  -[MSPCloudClientRegistration clientIdentifier]
  -[MSPCloudClientRegistration ckContainer]
  -[MSPCloudClientRegistration setupCloudContainerWithGroup:completion:]
  -[MSPCloudClientRegistration lastRegistrationUpdate]
  -[MSPCloudClientRegistration clientRecord]
  -[MSPCloudClientRegistration setClientRecord:]
  -[MSPCloudClientRegistration setLastRegistrationUpdate:]
  -[MSPCloudClientRegistration pushClientRegistrationRecord:group:completion:]
  -[MSPCloudClientRegistration lastRegistrationFetch]
  -[MSPCloudClientRegistration setLastRegistrationFetch:]
  -[MSPCloudClientRegistration fetchClientRegistrationRecordsCreatingZoneIfNecessaryWithGroup:completion:]
  -[MSPCloudClientRegistration fetchAccountIdentifierWithCompletion:]
  -[MSPCloudClientRegistration fetchClientRegistrationRecordsWithGroup:completion:]
  -[MSPCloudClientRegistration otherClientRecords]
  -[MSPCloudClientRegistration initWithAccountIdentifier:clientIdentifier:]
  -[MSPCloudClientRegistration updateClientRegistrationRecordWithGroup:completion:]
  -[MSPCloudClientRegistration checkClientCompatibilityWithGroup:completion:]
  -[MSPCloudClientRegistration removeCloudRegistrationContainerWithGroup:completion:]
  -[MSPCloudClientRegistration setOtherClientRecords:]
  -[MSPCloudClientRegistration maxEarliestCompatibleEpoch]
  -[MSPCloudClientRegistration setMaxEarliestCompatibleEpoch:]


MSPCloudClientRegistrationRecord : NSObject /usr/lib/libSystem.B.dylib
 @property  NSUUID *clientIdentifier
 @property  unsigned long desiredEpoch
 @property  unsigned long earliestCompatibleEpoch
 @property  BOOL isChanged
 @property  NSDate *lastRegistrationDate

  // instance methods
  -[MSPCloudClientRegistrationRecord .cxx_destruct]
  -[MSPCloudClientRegistrationRecord setClientIdentifier:]
  -[MSPCloudClientRegistrationRecord initWithRecord:]
  -[MSPCloudClientRegistrationRecord clientIdentifier]
  -[MSPCloudClientRegistrationRecord initWithClientIdentifier:]
  -[MSPCloudClientRegistrationRecord recordRepresentation]
  -[MSPCloudClientRegistrationRecord earliestCompatibleEpoch]
  -[MSPCloudClientRegistrationRecord setEarliestCompatibleEpoch:]
  -[MSPCloudClientRegistrationRecord setDesiredEpoch:]
  -[MSPCloudClientRegistrationRecord setLastRegistrationDate:]
  -[MSPCloudClientRegistrationRecord lastRegistrationDate]
  -[MSPCloudClientRegistrationRecord desiredEpoch]
  -[MSPCloudClientRegistrationRecord isChanged]


MSPSenderStrategy : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *destinationSentStates
 @property  NSMutableDictionary *etaSentStates
 @property  NSMutableDictionary *lastEtaUpdateDates
 @property  NSMutableDictionary *routeSentStates
 @property  NSMutableDictionary *trafficSentStates
 @property  NSMutableSet *participants
 @property  GEOSharedNavState *state

  // instance methods
  -[MSPSenderStrategy .cxx_destruct]
  -[MSPSenderStrategy state]
  -[MSPSenderStrategy setState:]
  -[MSPSenderStrategy participants]
  -[MSPSenderStrategy removeParticipant:]
  -[MSPSenderStrategy setParticipants:]
  -[MSPSenderStrategy addParticipants:]
  -[MSPSenderStrategy sessionStopped:]
  -[MSPSenderStrategy _sendDestinationReachedUpdate:to:]
  -[MSPSenderStrategy _sendStoppedUpdate:to:]
  -[MSPSenderStrategy initWithGroupSession:]
  -[MSPSenderStrategy restoreState:]
  -[MSPSenderStrategy removeParticipants:]
  -[MSPSenderStrategy _sendDestinationUpdate:to:]
  -[MSPSenderStrategy _sendETAUpdate:to:]
  -[MSPSenderStrategy _sendRouteUpdate:to:]
  -[MSPSenderStrategy _sendTrafficUpdate:to:]
  -[MSPSenderStrategy etaUpdated:]
  -[MSPSenderStrategy destinationUpdated:]
  -[MSPSenderStrategy routeUpdated:]
  -[MSPSenderStrategy trafficUpdated:]
  -[MSPSenderStrategy stateUpdated:]
  -[MSPSenderStrategy destinationReached:]
  -[MSPSenderStrategy destinationSentStates]
  -[MSPSenderStrategy setDestinationSentStates:]
  -[MSPSenderStrategy etaSentStates]
  -[MSPSenderStrategy setEtaSentStates:]
  -[MSPSenderStrategy lastEtaUpdateDates]
  -[MSPSenderStrategy setLastEtaUpdateDates:]
  -[MSPSenderStrategy routeSentStates]
  -[MSPSenderStrategy setRouteSentStates:]
  -[MSPSenderStrategy trafficSentStates]
  -[MSPSenderStrategy setTrafficSentStates:]


MSPSenderMinimalStrategy : MSPSenderStrategy
  // instance methods
  -[MSPSenderMinimalStrategy addParticipants:]
  -[MSPSenderMinimalStrategy etaUpdated:]
  -[MSPSenderMinimalStrategy destinationUpdated:]
  -[MSPSenderMinimalStrategy _validDestinationState:]
  -[MSPSenderMinimalStrategy _sendDestinationIfNeeded]
  -[MSPSenderMinimalStrategy _needToSendEtaRefreshFor:state:]


MSPSenderLiveStrategy : MSPSenderStrategy
  // instance methods
  -[MSPSenderLiveStrategy setState:]
  -[MSPSenderLiveStrategy addParticipants:]
  -[MSPSenderLiveStrategy etaUpdated:]
  -[MSPSenderLiveStrategy destinationUpdated:]
  -[MSPSenderLiveStrategy routeUpdated:]
  -[MSPSenderLiveStrategy trafficUpdated:]
  -[MSPSenderLiveStrategy _needToSendEtaRefreshFor:]


MSPSenderMessageStrategy : MSPSenderStrategy
 @property  NSMutableSet *messagesParticipants
 @property  <MSPSenderMessageStrategyDelegate> *delegate

  // instance methods
  -[MSPSenderMessageStrategy delegate]
  -[MSPSenderMessageStrategy setDelegate:]
  -[MSPSenderMessageStrategy .cxx_destruct]
  -[MSPSenderMessageStrategy setState:]
  -[MSPSenderMessageStrategy participants]
  -[MSPSenderMessageStrategy addParticipants:]
  -[MSPSenderMessageStrategy removeParticipants:]
  -[MSPSenderMessageStrategy sendMessageIfNeeded]
  -[MSPSenderMessageStrategy _addMessagesParticipants:]
  -[MSPSenderMessageStrategy _removeMessagesParticipants:]
  -[MSPSenderMessageStrategy messagesParticipants]
  -[MSPSenderMessageStrategy setMessagesParticipants:]


MSPCollectionsContainer : MSPContainer
 @property  MSPContainer *itemContainer

  // class methods
  +[MSPCollectionsContainer sharedLocalContainer]
  +[MSPCollectionsContainer sharedRemoteContainer]

  // instance methods
  -[MSPCollectionsContainer .cxx_destruct]
  -[MSPCollectionsContainer itemContainer]
  -[MSPCollectionsContainer setItemContainer:]
  -[MSPCollectionsContainer initWithPersister:itemContainer:]
  -[MSPCollectionsContainer queryWithDelegate:]


MSPTransitStorageLineItem : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <GEOTransitLineItem, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long muid
 @property  NSString *name
 @property  GEOMapItemIdentifier *identifier
 @property  <GEOTransitSystem> *system
 @property  unsigned long departureTimeDisplayStyle
 @property  BOOL departuresAreVehicleSpecific
 @property  BOOL isBus
 @property  <GEOTransitArtworkDataSource> *artwork
 @property  <GEOTransitArtworkDataSource> *modeArtwork
 @property  <GEOTransitArtworkDataSource> *alternateArtwork
 @property  BOOL hasLineColorString
 @property  NSString *lineColorString
 @property  BOOL showVehicleNumber
 @property  NSArray *operatingHours
 @property  NSArray *labelItems
 @property  <GEOTransitAttribution> *attribution
 @property  GEOMapRegion *mapRegion
 @property  NSArray *incidents
 @property  BOOL isIncidentsTTLExpired
 @property  BOOL hasIncidentComponent
 @property  BOOL hasEncyclopedicInfo
 @property  <GEOEncyclopedicInfo> *encyclopedicInfo
 @property  BOOL hasLine
 @property  MSPTransitStorageLine *line
 @property  BOOL hasStoredMapRegion
 @property  GEOMapRegion *storedMapRegion
 @property  BOOL hasTransitAttribution
 @property  MSPTransitStorageAttribution *transitAttribution
 @property  NSMutableArray *incidents
 @property  PBUnknownFields *unknownFields

  // class methods
  +[MSPTransitStorageLineItem incidentsType]

  // instance methods
  -[MSPTransitStorageLineItem isEqual:]
  -[MSPTransitStorageLineItem name]
  -[MSPTransitStorageLineItem copyWithZone:]
  -[MSPTransitStorageLineItem .cxx_destruct]
  -[MSPTransitStorageLineItem identifier]
  -[MSPTransitStorageLineItem dictionaryRepresentation]
  -[MSPTransitStorageLineItem writeTo:]
  -[MSPTransitStorageLineItem mergeFrom:]
  -[MSPTransitStorageLineItem readFrom:]
  -[MSPTransitStorageLineItem copyTo:]
  -[MSPTransitStorageLineItem system]
  -[MSPTransitStorageLineItem line]
  -[MSPTransitStorageLineItem setLine:]
  -[MSPTransitStorageLineItem unknownFields]
  -[MSPTransitStorageLineItem muid]
  -[MSPTransitStorageLineItem mapRegion]
  -[MSPTransitStorageLineItem artwork]
  -[MSPTransitStorageLineItem attribution]
  -[MSPTransitStorageLineItem hasLine]
  -[MSPTransitStorageLineItem operatingHours]
  -[MSPTransitStorageLineItem modeArtwork]
  -[MSPTransitStorageLineItem alternateArtwork]
  -[MSPTransitStorageLineItem transitAttribution]
  -[MSPTransitStorageLineItem incidentsCount]
  -[MSPTransitStorageLineItem clearIncidents]
  -[MSPTransitStorageLineItem incidentsAtIndex:]
  -[MSPTransitStorageLineItem addIncidents:]
  -[MSPTransitStorageLineItem incidents]
  -[MSPTransitStorageLineItem setIncidents:]
  -[MSPTransitStorageLineItem hasTransitAttribution]
  -[MSPTransitStorageLineItem setTransitAttribution:]
  -[MSPTransitStorageLineItem lineColorString]
  -[MSPTransitStorageLineItem showVehicleNumber]
  -[MSPTransitStorageLineItem labelItems]
  -[MSPTransitStorageLineItem departuresAreVehicleSpecific]
  -[MSPTransitStorageLineItem departureTimeDisplayStyle]
  -[MSPTransitStorageLineItem isBus]
  -[MSPTransitStorageLineItem hasLineColorString]
  -[MSPTransitStorageLineItem isIncidentsTTLExpired]
  -[MSPTransitStorageLineItem hasIncidentComponent]
  -[MSPTransitStorageLineItem hasEncyclopedicInfo]
  -[MSPTransitStorageLineItem encyclopedicInfo]
  -[MSPTransitStorageLineItem initWithLineItem:]
  -[MSPTransitStorageLineItem setStoredMapRegion:]
  -[MSPTransitStorageLineItem storedMapRegion]
  -[MSPTransitStorageLineItem hasStoredMapRegion]


MSPCollectionItemStorage : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasStorageIdentifier
 @property  NSData *storageIdentifier
 @property  BOOL hasContents
 @property  NSData *contents
 @property  BOOL hasContentsTimestamp
 @property  NSData *contentsTimestamp
 @property  BOOL hasPosition
 @property  NSData *position
 @property  BOOL hasPositionTimestamp
 @property  NSData *positionTimestamp
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPCollectionItemStorage isEqual:]
  -[MSPCollectionItemStorage copyWithZone:]
  -[MSPCollectionItemStorage .cxx_destruct]
  -[MSPCollectionItemStorage contents]
  -[MSPCollectionItemStorage dictionaryRepresentation]
  -[MSPCollectionItemStorage position]
  -[MSPCollectionItemStorage writeTo:]
  -[MSPCollectionItemStorage mergeFrom:]
  -[MSPCollectionItemStorage readFrom:]
  -[MSPCollectionItemStorage copyTo:]
  -[MSPCollectionItemStorage setPosition:]
  -[MSPCollectionItemStorage setContents:]
  -[MSPCollectionItemStorage hasContents]
  -[MSPCollectionItemStorage unknownFields]
  -[MSPCollectionItemStorage hasPosition]
  -[MSPCollectionItemStorage storageIdentifier]
  -[MSPCollectionItemStorage contentsTimestamp]
  -[MSPCollectionItemStorage setStorageIdentifier:]
  -[MSPCollectionItemStorage setContentsTimestamp:]
  -[MSPCollectionItemStorage setPositionTimestamp:]
  -[MSPCollectionItemStorage hasStorageIdentifier]
  -[MSPCollectionItemStorage hasContentsTimestamp]
  -[MSPCollectionItemStorage hasPositionTimestamp]
  -[MSPCollectionItemStorage positionTimestamp]


MSPCloudContainerChangeSet : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *changedRecords
 @property  NSArray *deletedRecords
 @property  NSDictionary *allChangesById
 @property  BOOL hasChanges

  // instance methods
  -[MSPCloudContainerChangeSet init]
  -[MSPCloudContainerChangeSet .cxx_destruct]
  -[MSPCloudContainerChangeSet hasChanges]
  -[MSPCloudContainerChangeSet addRecord:]
  -[MSPCloudContainerChangeSet deletedRecords]
  -[MSPCloudContainerChangeSet changedRecords]
  -[MSPCloudContainerChangeSet allChangesById]
  -[MSPCloudContainerChangeSet threadSafeArrayFromSet:]
  -[MSPCloudContainerChangeSet threadSafeAddReplicaRecord:toSet:]
  -[MSPCloudContainerChangeSet addDeletedRecord:]
  -[MSPCloudContainerChangeSet addChangedRecord:]


MSPOrderedReplica : MSPReplica
  // class methods
  +[MSPOrderedReplica allowedEditClasses]
  +[MSPOrderedReplica _switchForEdit:caseIsInsertRecord:caseIsEditContents:caseIsEditPosition:caseIsRemoveTombstone:]

  // instance methods
  -[MSPOrderedReplica orderedReplicaByApplyingContainerEdits:toOldContents:forNewContents:recordCreationHandler:replicaEditApplier:error:]
  -[MSPOrderedReplica _mergeSelfRecord:withRecordFromOtherReplica:identifier:options:edits:]
  -[MSPOrderedReplica _containerSerializationRequiresTrackingPositionEdits]


MSPOrderedReplicaEditUpdatePosition : MSPReplicaEdit
 @property  MSPPosition *position
 @property  MSPVectorTimestamp *positionTimestamp

  // instance methods
  -[MSPOrderedReplicaEditUpdatePosition isEqual:]
  -[MSPOrderedReplicaEditUpdatePosition .cxx_destruct]
  -[MSPOrderedReplicaEditUpdatePosition position]
  -[MSPOrderedReplicaEditUpdatePosition positionTimestamp]
  -[MSPOrderedReplicaEditUpdatePosition _initToMoveRecordWithIdentifier:toPosition:positionTimestamp:]
  -[MSPOrderedReplicaEditUpdatePosition _initWithIdentifierOfAffectedRecord:]


MSPRemoteHistoryContainerPersister : MSPContainerPersister <MSPMapsPushDaemonProxyObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPRemoteHistoryContainerPersister init]
  -[MSPRemoteHistoryContainerPersister dealloc]
  -[MSPRemoteHistoryContainerPersister .cxx_destruct]
  -[MSPRemoteHistoryContainerPersister eraseWithCompletion:]
  -[MSPRemoteHistoryContainerPersister _reportErrorIfAny:purpose:]
  -[MSPRemoteHistoryContainerPersister fetchStateSnapshotWithCompletion:]
  -[MSPRemoteHistoryContainerPersister favoritesDidChange]
  -[MSPRemoteHistoryContainerPersister historyDidChange]
  -[MSPRemoteHistoryContainerPersister pushDaemonProxyReceivedNotificationData:forType:recordIdentifier:]
  -[MSPRemoteHistoryContainerPersister commitEditWithNewContents:edits:appliedToOldContents:completion:]
  -[MSPRemoteHistoryContainerPersister commitByMergingWithStateSnapshot:mergeOptions:completion:]
  -[MSPRemoteHistoryContainerPersister fetchContentsWithCompletion:]


MSPTransitStorageIcon : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <GEOTransitIconDataSource, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int iconType
 @property  unsigned int cartoID
 @property  unsigned int defaultTransitType
 @property  unsigned int iconAttributeKey
 @property  unsigned int iconAttributeValue
 @property  BOOL hasIconType
 @property  int iconType
 @property  BOOL hasCartoID
 @property  unsigned int cartoID
 @property  BOOL hasDefaultTransitType
 @property  unsigned int defaultTransitType
 @property  BOOL hasIconAttributeKey
 @property  unsigned int iconAttributeKey
 @property  BOOL hasIconAttributeValue
 @property  unsigned int iconAttributeValue
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPTransitStorageIcon isEqual:]
  -[MSPTransitStorageIcon copyWithZone:]
  -[MSPTransitStorageIcon .cxx_destruct]
  -[MSPTransitStorageIcon dictionaryRepresentation]
  -[MSPTransitStorageIcon writeTo:]
  -[MSPTransitStorageIcon mergeFrom:]
  -[MSPTransitStorageIcon readFrom:]
  -[MSPTransitStorageIcon copyTo:]
  -[MSPTransitStorageIcon unknownFields]
  -[MSPTransitStorageIcon iconType]
  -[MSPTransitStorageIcon cartoID]
  -[MSPTransitStorageIcon defaultTransitType]
  -[MSPTransitStorageIcon iconAttributeKey]
  -[MSPTransitStorageIcon iconAttributeValue]
  -[MSPTransitStorageIcon hasIconType]
  -[MSPTransitStorageIcon setIconType:]
  -[MSPTransitStorageIcon setHasIconType:]
  -[MSPTransitStorageIcon iconTypeAsString:]
  -[MSPTransitStorageIcon StringAsIconType:]
  -[MSPTransitStorageIcon initWithIcon:]
  -[MSPTransitStorageIcon setCartoID:]
  -[MSPTransitStorageIcon setDefaultTransitType:]
  -[MSPTransitStorageIcon setIconAttributeKey:]
  -[MSPTransitStorageIcon setIconAttributeValue:]
  -[MSPTransitStorageIcon setHasCartoID:]
  -[MSPTransitStorageIcon hasCartoID]
  -[MSPTransitStorageIcon setHasDefaultTransitType:]
  -[MSPTransitStorageIcon hasDefaultTransitType]
  -[MSPTransitStorageIcon setHasIconAttributeKey:]
  -[MSPTransitStorageIcon hasIconAttributeKey]
  -[MSPTransitStorageIcon setHasIconAttributeValue:]
  -[MSPTransitStorageIcon hasIconAttributeValue]


MSPCollectionItemReplica : MSPOrderedReplica <MSPContainerStateSnapshot, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *contents

  // class methods
  +[MSPCollectionItemReplica itemReplicaWithData:]

  // instance methods
  -[MSPCollectionItemReplica isEqual:]
  -[MSPCollectionItemReplica copyWithZone:]
  -[MSPCollectionItemReplica data]
  -[MSPCollectionItemReplica contents]
  -[MSPCollectionItemReplica replicaByMergingWithReplica:mergeOptions:userVisibleEffectiveContentsChanged:]


MSPCollectionsReplica : MSPOrderedReplica <MSPCloudReplica, MSPContainerStateSnapshot, MSPPropertyListReplicaDataSerialization, MSPPropertyListReplicaSerialization>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *contents
 @property  NSData *propertyListDataRepresentation
 @property  id propertyListRepresentation

  // instance methods
  -[MSPCollectionsReplica encodeWithCoder:]
  -[MSPCollectionsReplica initWithCoder:]
  -[MSPCollectionsReplica contents]
  -[MSPCollectionsReplica propertyListRepresentation]
  -[MSPCollectionsReplica editsToMergeWithReplica:mergeOptions:]
  -[MSPCollectionsReplica initWithPropertyListRepresentation:recordCreationHandler:]
  -[MSPCollectionsReplica replicaRecordClass]
  -[MSPCollectionsReplica changesMergingCloudChanges:withReplica:lastSyncDate:]
  -[MSPCollectionsReplica _mergeSelfRecord:withRecordFromOtherReplica:identifier:options:edits:]
  -[MSPCollectionsReplica replicaByMergingWithReplica:mergeOptions:userVisibleEffectiveContentsChanged:]
  -[MSPCollectionsReplica propertyListRepresentationDecoratingRecordsWithBlock:]
  -[MSPCollectionsReplica propertyListDataRepresentation]
  -[MSPCollectionsReplica mergeOptionsWithLastSyncDate:]


MSPCollectionItemRecord : NSObject /usr/lib/libSystem.B.dylib <MSPOrderedReplicaRecord, NSSecureCoding>
 @property  NSString *value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *contents
 @property  MSPVectorTimestamp *contentsTimestamp
 @property  MSPPosition *position
 @property  MSPVectorTimestamp *positionTimestamp

  // class methods
  +[MSPCollectionItemRecord supportsSecureCoding]
  +[MSPCollectionItemRecord recordsByApplyingEdits:toArbitraryRecords:]
  +[MSPCollectionItemRecord recordWithContentsOfRecord:]
  +[MSPCollectionItemRecord tombstoneRecord]

  // instance methods
  -[MSPCollectionItemRecord init]
  -[MSPCollectionItemRecord encodeWithCoder:]
  -[MSPCollectionItemRecord initWithCoder:]
  -[MSPCollectionItemRecord .cxx_destruct]
  -[MSPCollectionItemRecord contents]
  -[MSPCollectionItemRecord value]
  -[MSPCollectionItemRecord setValue:]
  -[MSPCollectionItemRecord position]
  -[MSPCollectionItemRecord initWithContents:contentsTimestamp:position:positionTimestamp:]
  -[MSPCollectionItemRecord contentsTimestamp]
  -[MSPCollectionItemRecord positionTimestamp]
  -[MSPCollectionItemRecord derivedRecordWithContents:contentsTimestamp:]
  -[MSPCollectionItemRecord derivedRecordWithPosition:positionTimestamp:]
  -[MSPCollectionItemRecord initWithValue:contentsTimestamp:position:positionTimestamp:]


MSPCollectionsReplicaSimpleRecord : NSObject /usr/lib/libSystem.B.dylib <MSPOrderedReplicaRecord>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *contents
 @property  MSPVectorTimestamp *contentsTimestamp
 @property  MSPPosition *position
 @property  MSPVectorTimestamp *positionTimestamp

  // class methods
  +[MSPCollectionsReplicaSimpleRecord recordsByApplyingEdits:toArbitraryRecords:]
  +[MSPCollectionsReplicaSimpleRecord recordWithContentsOfRecord:]

  // instance methods
  -[MSPCollectionsReplicaSimpleRecord init]
  -[MSPCollectionsReplicaSimpleRecord .cxx_destruct]
  -[MSPCollectionsReplicaSimpleRecord contents]
  -[MSPCollectionsReplicaSimpleRecord position]
  -[MSPCollectionsReplicaSimpleRecord initWithContents:contentsTimestamp:position:positionTimestamp:]
  -[MSPCollectionsReplicaSimpleRecord contentsTimestamp]
  -[MSPCollectionsReplicaSimpleRecord positionTimestamp]
  -[MSPCollectionsReplicaSimpleRecord derivedRecordWithContents:contentsTimestamp:]
  -[MSPCollectionsReplicaSimpleRecord derivedRecordWithPosition:positionTimestamp:]


MSPCollectionItem : NSObject /usr/lib/libSystem.B.dylib <MSPMutableObject, MSPImmutableObject>
 @property  NSString *itemIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSPCollectionItem mutableObjectClass]
  +[MSPCollectionItem mutableObjectProtocol]
  +[MSPCollectionItem immutableObjectClass]
  +[MSPCollectionItem immutableObjectProtocol]

  // instance methods
  -[MSPCollectionItem isEqual:]
  -[MSPCollectionItem copyWithZone:]
  -[MSPCollectionItem mutableCopyWithZone:]
  -[MSPCollectionItem .cxx_destruct]
  -[MSPCollectionItem itemIdentifier]
  -[MSPCollectionItem setItemIdentifier:]
  -[MSPCollectionItem storageIdentifier]
  -[MSPCollectionItem transferToImmutableIfValidWithError:]
  -[MSPCollectionItem copyIfValidWithError:]


MSPCollection : MSPCollectionStorage <MSPMutableObject, MSPImmutableObject>
 @property  MSPCollectionItemReplica *itemReplica
 @property  NSArray *itemIdentifiers
 @property  NSArray *items
 @property  BOOL isFavoritesCollection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSPCollection mutableObjectClass]
  +[MSPCollection mutableObjectProtocol]
  +[MSPCollection immutableObjectClass]
  +[MSPCollection immutableObjectProtocol]

  // instance methods
  -[MSPCollection init]
  -[MSPCollection isEqual:]
  -[MSPCollection copyWithZone:]
  -[MSPCollection mutableCopyWithZone:]
  -[MSPCollection initWithData:]
  -[MSPCollection .cxx_destruct]
  -[MSPCollection removeItem:]
  -[MSPCollection setTitle:]
  -[MSPCollection setImage:]
  -[MSPCollection items]
  -[MSPCollection setItems:]
  -[MSPCollection addItem:]
  -[MSPCollection itemIdentifiers]
  -[MSPCollection addItems:]
  -[MSPCollection setImageURL:]
  -[MSPCollection removeItems:]
  -[MSPCollection setItemIdentifiers:]
  -[MSPCollection storageIdentifier]
  -[MSPCollection initWithData:storageIdentifier:]
  -[MSPCollection mergeFromCollection:isUserVisibleChange:]
  -[MSPCollection transferToImmutableIfValidWithError:]
  -[MSPCollection copyIfValidWithError:]
  -[MSPCollection _noteWillMutate]
  -[MSPCollection setItemReplica:]
  -[MSPCollection setCollectionDescription:]
  -[MSPCollection itemReplica]
  -[MSPCollection isFavoritesCollection]


MSPFavoritesCollection : MSPCollection
  // class methods
  +[MSPFavoritesCollection storageIdentifier]

  // instance methods
  -[MSPFavoritesCollection init]
  -[MSPFavoritesCollection storageIdentifier]


MSPPosition : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying, MSPPositionSignpost>
 @property  NSData *serializedRepresentation
 @property  NSArray *pathComponents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSPPosition supportsSecureCoding]
  +[MSPPosition initialSignpostWithClientIdentifier:]
  +[MSPPosition finalSignpostWithClientIdentifier:]
  +[MSPPosition positionBetweenSignpost:andSignpost:clientIdentifier:]
  +[MSPPosition initialPositionWithClientIdentifier:]
  +[MSPPosition finalPositionWithClientIdentifier:]
  +[MSPPosition _randBoolForStrategy:]
  +[MSPPosition _hasSpaceForInsertionAtDepth:betweenEarlierPosition:andLaterPosition:clientIdentifier:]
  +[MSPPosition _strategyForAllocationAtDepth:]
  +[MSPPosition _pathComponentsForSignpost:]
  +[MSPPosition positionBetweenPosition:andPosition:clientIdentifier:]

  // instance methods
  -[MSPPosition isEqual:]
  -[MSPPosition copyWithZone:]
  -[MSPPosition compare:]
  -[MSPPosition encodeWithCoder:]
  -[MSPPosition initWithCoder:]
  -[MSPPosition .cxx_destruct]
  -[MSPPosition serializedRepresentation]
  -[MSPPosition initWithSerializedRepresentation:]
  -[MSPPosition _isFinal]
  -[MSPPosition _pathComponents]
  -[MSPPosition _initWithPathComponents:]
  -[MSPPosition _positionByTruncatingOrExtendingToDepth:clientIdentifier:]
  -[MSPPosition _addingDistanceAtEqualDepth:clientIdentifier:]
  -[MSPPosition _isInitial]
  -[MSPPosition _initWithIndexes:originIdentifier:]


MSPPathComponent : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSUUID *originIdentifier
 @property  unsigned short index

  // instance methods
  -[MSPPathComponent isEqual:]
  -[MSPPathComponent copyWithZone:]
  -[MSPPathComponent compare:]
  -[MSPPathComponent .cxx_destruct]
  -[MSPPathComponent index]
  -[MSPPathComponent originIdentifier]
  -[MSPPathComponent initWithIndex:originIdentifier:]


MSPSharedTripBlacklist : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MSPSharedTripBlacklist init]
  -[MSPSharedTripBlacklist .cxx_destruct]
  -[MSPSharedTripBlacklist containsIdentifier:]
  -[MSPSharedTripBlacklist _storeIdentifiers]
  -[MSPSharedTripBlacklist blockIdentifier:]
  -[MSPSharedTripBlacklist _loadIdentifiers]
  -[MSPSharedTripBlacklist updateBlockedListFromStore:]
  -[MSPSharedTripBlacklist containsAnyIdentifiersInArray:]
  -[MSPSharedTripBlacklist unblockIdentifiers:]
  -[MSPSharedTripBlacklist clearList]


MSPFavoritesReplica : MSPOrderedReplica <NSSecureCoding, MSPPropertyListReplicaDataSerialization, MSPPropertyListReplicaSerialization, MSPContainerStateSnapshot, MSPCloudReplica>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *propertyListDataRepresentation
 @property  id propertyListRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *contents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSPFavoritesReplica supportsSecureCoding]
  +[MSPFavoritesReplica switchForEdit:caseIsInsertRecord:caseIsEditContents:caseIsEditPosition:caseIsRemoveTombstone:]

  // instance methods
  -[MSPFavoritesReplica encodeWithCoder:]
  -[MSPFavoritesReplica initWithCoder:]
  -[MSPFavoritesReplica contents]
  -[MSPFavoritesReplica propertyListRepresentation]
  -[MSPFavoritesReplica editsToMergeWithReplica:mergeOptions:]
  -[MSPFavoritesReplica initWithPropertyListRepresentation:recordCreationHandler:]
  -[MSPFavoritesReplica replicaRecordClass]
  -[MSPFavoritesReplica changesMergingCloudChanges:withReplica:lastSyncDate:]
  -[MSPFavoritesReplica replicaByMergingWithReplica:mergeOptions:userVisibleEffectiveContentsChanged:]
  -[MSPFavoritesReplica propertyListRepresentationDecoratingRecordsWithBlock:]
  -[MSPFavoritesReplica propertyListDataRepresentation]
  -[MSPFavoritesReplica mergeOptionsWithLastSyncDate:]


MSPFavoritesReplicaSimpleRecord : NSObject /usr/lib/libSystem.B.dylib <MSPFavoritesReplicaRecord>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *contents
 @property  MSPVectorTimestamp *contentsTimestamp
 @property  MSPPosition *position
 @property  MSPVectorTimestamp *positionTimestamp

  // class methods
  +[MSPFavoritesReplicaSimpleRecord recordsByApplyingEdits:toArbitraryRecords:]
  +[MSPFavoritesReplicaSimpleRecord recordWithContentsOfRecord:]

  // instance methods
  -[MSPFavoritesReplicaSimpleRecord init]
  -[MSPFavoritesReplicaSimpleRecord .cxx_destruct]
  -[MSPFavoritesReplicaSimpleRecord contents]
  -[MSPFavoritesReplicaSimpleRecord position]
  -[MSPFavoritesReplicaSimpleRecord initWithContents:contentsTimestamp:position:positionTimestamp:]
  -[MSPFavoritesReplicaSimpleRecord contentsTimestamp]
  -[MSPFavoritesReplicaSimpleRecord positionTimestamp]
  -[MSPFavoritesReplicaSimpleRecord derivedRecordWithContents:contentsTimestamp:]
  -[MSPFavoritesReplicaSimpleRecord derivedRecordWithPosition:positionTimestamp:]


MSPFavoritesReplicaMergeOptions : NSObject /usr/lib/libSystem.B.dylib <MSPFavoritesReplicaMergeOptions>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deserializationAllowed

  // instance methods
  -[MSPFavoritesReplicaMergeOptions isDeserializationAllowed]
  -[MSPFavoritesReplicaMergeOptions initWithDeserializationAllowed:]


MSPFavoritesReplicaReapTombstonesMergeOptions : MSPReplicaMergeOptionsReapTombstones <MSPFavoritesReplicaMergeOptions>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deserializationAllowed

  // instance methods
  -[MSPFavoritesReplicaReapTombstonesMergeOptions isDeserializationAllowed]
  -[MSPFavoritesReplicaReapTombstonesMergeOptions initWithDeserializationAllowed:]


MSPRidesharingTrip : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasStartWaypoint
 @property  GEOComposedWaypoint *startWaypoint
 @property  BOOL hasEndWaypoint
 @property  GEOComposedWaypoint *endWaypoint
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPRidesharingTrip isEqual:]
  -[MSPRidesharingTrip copyWithZone:]
  -[MSPRidesharingTrip .cxx_destruct]
  -[MSPRidesharingTrip dictionaryRepresentation]
  -[MSPRidesharingTrip writeTo:]
  -[MSPRidesharingTrip mergeFrom:]
  -[MSPRidesharingTrip readFrom:]
  -[MSPRidesharingTrip copyTo:]
  -[MSPRidesharingTrip unknownFields]
  -[MSPRidesharingTrip startWaypoint]
  -[MSPRidesharingTrip endWaypoint]
  -[MSPRidesharingTrip setStartWaypoint:]
  -[MSPRidesharingTrip setEndWaypoint:]
  -[MSPRidesharingTrip hasStartWaypoint]
  -[MSPRidesharingTrip hasEndWaypoint]


MSPTransitStorageAttribution : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <GEOTransitAttribution, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *providerNames
 @property  NSMutableArray *providerNames
 @property  PBUnknownFields *unknownFields

  // class methods
  +[MSPTransitStorageAttribution providerNamesType]

  // instance methods
  -[MSPTransitStorageAttribution isEqual:]
  -[MSPTransitStorageAttribution copyWithZone:]
  -[MSPTransitStorageAttribution .cxx_destruct]
  -[MSPTransitStorageAttribution dictionaryRepresentation]
  -[MSPTransitStorageAttribution writeTo:]
  -[MSPTransitStorageAttribution mergeFrom:]
  -[MSPTransitStorageAttribution readFrom:]
  -[MSPTransitStorageAttribution copyTo:]
  -[MSPTransitStorageAttribution unknownFields]
  -[MSPTransitStorageAttribution providerNames]
  -[MSPTransitStorageAttribution providerNamesCount]
  -[MSPTransitStorageAttribution clearProviderNames]
  -[MSPTransitStorageAttribution setProviderNames:]
  -[MSPTransitStorageAttribution _providerNames]
  -[MSPTransitStorageAttribution initWithAttribution:]
  -[MSPTransitStorageAttribution addProviderNames:]
  -[MSPTransitStorageAttribution providerNamesAtIndex:]


MSPDroppedPin : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasLatLng
 @property  GEOLatLng *latLng
 @property  BOOL hasMapRegion
 @property  GEOMapRegion *mapRegion
 @property  BOOL hasTimestamp
 @property  double timestamp
 @property  BOOL hasFloorOrdinal
 @property  int floorOrdinal
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPDroppedPin isEqual:]
  -[MSPDroppedPin copyWithZone:]
  -[MSPDroppedPin .cxx_destruct]
  -[MSPDroppedPin dictionaryRepresentation]
  -[MSPDroppedPin timestamp]
  -[MSPDroppedPin hasTimestamp]
  -[MSPDroppedPin setTimestamp:]
  -[MSPDroppedPin writeTo:]
  -[MSPDroppedPin mergeFrom:]
  -[MSPDroppedPin readFrom:]
  -[MSPDroppedPin copyTo:]
  -[MSPDroppedPin setMapRegion:]
  -[MSPDroppedPin setHasTimestamp:]
  -[MSPDroppedPin unknownFields]
  -[MSPDroppedPin latLng]
  -[MSPDroppedPin mapRegion]
  -[MSPDroppedPin hasMapRegion]
  -[MSPDroppedPin setLatLng:]
  -[MSPDroppedPin hasLatLng]
  -[MSPDroppedPin setFloorOrdinal:]
  -[MSPDroppedPin setHasFloorOrdinal:]
  -[MSPDroppedPin hasFloorOrdinal]
  -[MSPDroppedPin floorOrdinal]


MSPPinnedPlaceStorage : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasCustomName
 @property  NSString *customName
 @property  BOOL hasMapItemStorage
 @property  GEOMapItemStorage *mapItemStorage
 @property  NSMutableArray *contactStorages
 @property  BOOL hasHidden
 @property  BOOL hidden
 @property  BOOL hasOriginatingAddressString
 @property  NSString *originatingAddressString
 @property  PBUnknownFields *unknownFields

  // class methods
  +[MSPPinnedPlaceStorage contactStorageType]

  // instance methods
  -[MSPPinnedPlaceStorage isEqual:]
  -[MSPPinnedPlaceStorage copyWithZone:]
  -[MSPPinnedPlaceStorage type]
  -[MSPPinnedPlaceStorage setType:]
  -[MSPPinnedPlaceStorage .cxx_destruct]
  -[MSPPinnedPlaceStorage identifier]
  -[MSPPinnedPlaceStorage setIdentifier:]
  -[MSPPinnedPlaceStorage dictionaryRepresentation]
  -[MSPPinnedPlaceStorage writeTo:]
  -[MSPPinnedPlaceStorage mergeFrom:]
  -[MSPPinnedPlaceStorage readFrom:]
  -[MSPPinnedPlaceStorage copyTo:]
  -[MSPPinnedPlaceStorage typeAsString:]
  -[MSPPinnedPlaceStorage StringAsType:]
  -[MSPPinnedPlaceStorage setHidden:]
  -[MSPPinnedPlaceStorage hidden]
  -[MSPPinnedPlaceStorage setHasType:]
  -[MSPPinnedPlaceStorage hasType]
  -[MSPPinnedPlaceStorage unknownFields]
  -[MSPPinnedPlaceStorage setHasHidden:]
  -[MSPPinnedPlaceStorage hasHidden]
  -[MSPPinnedPlaceStorage hasIdentifier]
  -[MSPPinnedPlaceStorage hasMapItemStorage]
  -[MSPPinnedPlaceStorage mapItemStorage]
  -[MSPPinnedPlaceStorage setMapItemStorage:]
  -[MSPPinnedPlaceStorage addContactStorage:]
  -[MSPPinnedPlaceStorage setCustomName:]
  -[MSPPinnedPlaceStorage contactStoragesCount]
  -[MSPPinnedPlaceStorage clearContactStorages]
  -[MSPPinnedPlaceStorage contactStorageAtIndex:]
  -[MSPPinnedPlaceStorage setOriginatingAddressString:]
  -[MSPPinnedPlaceStorage hasCustomName]
  -[MSPPinnedPlaceStorage hasOriginatingAddressString]
  -[MSPPinnedPlaceStorage customName]
  -[MSPPinnedPlaceStorage contactStorages]
  -[MSPPinnedPlaceStorage setContactStorages:]
  -[MSPPinnedPlaceStorage originatingAddressString]


MSPSharedTripStorageController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *sharedTripGroupSessionInfo
 @property  NSMutableDictionary *receiverRules
 @property  NSMutableDictionary *senderRules
 @property  <MSPSharedTripStorageDelegate> *delegate
 @property  MSPGroupSessionStorage *senderSession

  // instance methods
  -[MSPSharedTripStorageController init]
  -[MSPSharedTripStorageController dealloc]
  -[MSPSharedTripStorageController delegate]
  -[MSPSharedTripStorageController setDelegate:]
  -[MSPSharedTripStorageController .cxx_destruct]
  -[MSPSharedTripStorageController removeSession:]
  -[MSPSharedTripStorageController groupSessionInfoForKey:]
  -[MSPSharedTripStorageController receivingRulesForIdentifier:]
  -[MSPSharedTripStorageController receivingRulesTouched]
  -[MSPSharedTripStorageController updateGroupSessionStorageWithState:]
  -[MSPSharedTripStorageController _loadSenderSession]
  -[MSPSharedTripStorageController _loadStoredSessions]
  -[MSPSharedTripStorageController setSenderRules:]
  -[MSPSharedTripStorageController _saveSenderSession]
  -[MSPSharedTripStorageController _saveStoredSessions]
  -[MSPSharedTripStorageController receiverRules]
  -[MSPSharedTripStorageController _saveReceivingRules]
  -[MSPSharedTripStorageController _saveSendingRules]
  -[MSPSharedTripStorageController _storingPath]
  -[MSPSharedTripStorageController _rulesPath]
  -[MSPSharedTripStorageController setReceiverRules:]
  -[MSPSharedTripStorageController _senderRulesPath]
  -[MSPSharedTripStorageController senderRules]
  -[MSPSharedTripStorageController _storingSenderPath]
  -[MSPSharedTripStorageController setSenderSession:]
  -[MSPSharedTripStorageController addNewSession:originator:receivingHandle:receivingAccountIdentifier:]
  -[MSPSharedTripStorageController sendingRulesForIdentifier:]
  -[MSPSharedTripStorageController sendingRulesTouched]
  -[MSPSharedTripStorageController senderSession]
  -[MSPSharedTripStorageController sharedTripGroupSessionInfo]
  -[MSPSharedTripStorageController setSharedTripGroupSessionInfo:]


MSPTransitStorageShield : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <GEOTransitShieldDataSource, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long shieldType
 @property  NSString *shieldText
 @property  NSString *shieldColorString
 @property  BOOL hasShieldText
 @property  NSString *shieldText
 @property  BOOL hasShieldType
 @property  long long shieldType
 @property  BOOL hasShieldColorString
 @property  NSString *shieldColorString
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPTransitStorageShield isEqual:]
  -[MSPTransitStorageShield copyWithZone:]
  -[MSPTransitStorageShield .cxx_destruct]
  -[MSPTransitStorageShield dictionaryRepresentation]
  -[MSPTransitStorageShield writeTo:]
  -[MSPTransitStorageShield mergeFrom:]
  -[MSPTransitStorageShield readFrom:]
  -[MSPTransitStorageShield copyTo:]
  -[MSPTransitStorageShield unknownFields]
  -[MSPTransitStorageShield shieldText]
  -[MSPTransitStorageShield setShieldText:]
  -[MSPTransitStorageShield hasShieldText]
  -[MSPTransitStorageShield shieldType]
  -[MSPTransitStorageShield shieldColorString]
  -[MSPTransitStorageShield hasShieldType]
  -[MSPTransitStorageShield setShieldType:]
  -[MSPTransitStorageShield setHasShieldType:]
  -[MSPTransitStorageShield initWithShield:]
  -[MSPTransitStorageShield setShieldColorString:]
  -[MSPTransitStorageShield hasShieldColorString]


MSPMapsPaths : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *homeDirectory
 @property  NSString *mapsDirectory
 @property  NSString *cacheDirectory
 @property  NSString *groupDirectory
 @property  NSString *nanoDirectory
 @property  NSString *geoPinnedPlacesSettingsPath
 @property  NSString *geoCollectionsSettingsPath
 @property  NSString *bookmarksSettingsPath
 @property  NSString *geoBookmarksSettingsPath
 @property  NSString *directionsSettingsPath
 @property  NSString *historySettingsPath
 @property  NSString *geoHistorySettingsPath
 @property  NSString *nanoHistorySettingsPath
 @property  NSString *failedSearchesSettingsPath
 @property  NSString *failedGeoSearchesSettingsPath
 @property  NSString *failedGeoDirectionsSettingsPath
 @property  NSString *failedDirectionsSettingsPath
 @property  NSString *transitAppRankerPath
 @property  NSString *pinsSettingsPath
 @property  NSString *directionsCachePath
 @property  NSString *reportAProblemDirectionsRecordingsPath
 @property  NSString *reportAProblemSearchRecordingsPath
 @property  NSString *reportAProblemNotificationsPath
 @property  NSString *favoritesSyncedMarkerFile
 @property  BOOL shouldSyncMergeFavoritesAfterCheckingOrCreatingMarkerFile
 @property  NSString *historySyncedMarkerFile
 @property  BOOL shouldSyncMergeHistoryAfterCheckingOrCreatingMarkerFile

  // class methods
  +[MSPMapsPaths cacheDirectory]
  +[MSPMapsPaths pathsAtLocation:]
  +[MSPMapsPaths geoCollectionsSettingsPath]
  +[MSPMapsPaths mapsApplicationContainerPaths]
  +[MSPMapsPaths groupDirectory]
  +[MSPMapsPaths currentMapsApplicationContainerURL]
  +[MSPMapsPaths currentMapsGroupContainerURL]
  +[MSPMapsPaths mapsApplicationContainerPathsWithInvalidationHandler:]
  +[MSPMapsPaths mapsDirectory]
  +[MSPMapsPaths nanoDirectory]
  +[MSPMapsPaths geoPinnedPlacesSettingsPath]
  +[MSPMapsPaths bookmarksSettingsPath]
  +[MSPMapsPaths geoBookmarksSettingsPath]
  +[MSPMapsPaths directionsSettingsPath]
  +[MSPMapsPaths historySettingsPath]
  +[MSPMapsPaths geoHistorySettingsPath]
  +[MSPMapsPaths nanoHistorySettingsPath]
  +[MSPMapsPaths failedSearchesSettingsPath]
  +[MSPMapsPaths failedGeoSearchesSettingsPath]
  +[MSPMapsPaths failedDirectionsSettingsPath]
  +[MSPMapsPaths failedGeoDirectionsSettingsPath]
  +[MSPMapsPaths transitAppRankerPath]
  +[MSPMapsPaths directionsCachePath]
  +[MSPMapsPaths pinsSettingsPath]
  +[MSPMapsPaths reportAProblemDirectionsRecordingsPath]
  +[MSPMapsPaths reportAProblemSearchRecordingsPath]
  +[MSPMapsPaths reportAProblemNotificationsPath]
  +[MSPMapsPaths favoritesSyncedMarkerFile]
  +[MSPMapsPaths historySyncedMarkerFile]

  // instance methods
  -[MSPMapsPaths _invalidate]
  -[MSPMapsPaths .cxx_destruct]
  -[MSPMapsPaths homeDirectory]
  -[MSPMapsPaths cacheDirectory]
  -[MSPMapsPaths geoCollectionsSettingsPath]
  -[MSPMapsPaths groupDirectory]
  -[MSPMapsPaths initWithLibraryDirectoryURL:groupLibraryURL:invalidationHandler:]
  -[MSPMapsPaths mapsDirectory]
  -[MSPMapsPaths nanoDirectory]
  -[MSPMapsPaths geoPinnedPlacesSettingsPath]
  -[MSPMapsPaths bookmarksSettingsPath]
  -[MSPMapsPaths geoBookmarksSettingsPath]
  -[MSPMapsPaths directionsSettingsPath]
  -[MSPMapsPaths historySettingsPath]
  -[MSPMapsPaths geoHistorySettingsPath]
  -[MSPMapsPaths nanoHistorySettingsPath]
  -[MSPMapsPaths failedSearchesSettingsPath]
  -[MSPMapsPaths failedGeoSearchesSettingsPath]
  -[MSPMapsPaths failedDirectionsSettingsPath]
  -[MSPMapsPaths failedGeoDirectionsSettingsPath]
  -[MSPMapsPaths transitAppRankerPath]
  -[MSPMapsPaths directionsCachePath]
  -[MSPMapsPaths pinsSettingsPath]
  -[MSPMapsPaths reportAProblemDirectionsRecordingsPath]
  -[MSPMapsPaths reportAProblemSearchRecordingsPath]
  -[MSPMapsPaths reportAProblemNotificationsPath]
  -[MSPMapsPaths favoritesSyncedMarkerFile]
  -[MSPMapsPaths historySyncedMarkerFile]
  -[MSPMapsPaths _shouldSyncMergeAfterCheckingOrCreatingMarkerFileAtPath:]
  -[MSPMapsPaths _deleteSyncedFileAtPath:]
  -[MSPMapsPaths shouldSyncMergeFavoritesAfterCheckingOrCreatingMarkerFile]
  -[MSPMapsPaths deleteFavoritesSyncedMarkerFile]
  -[MSPMapsPaths shouldSyncMergeHistoryAfterCheckingOrCreatingMarkerFile]
  -[MSPMapsPaths deleteHistorySyncedMarkerFile]


MSPCloudSynchronizerRunConditions : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSDate *lastErrorDate
 @property  double lastRetryDelayInSeconds
 @property  GEONetworkObserver *networkObserver
 @property  BOOL hasiCloudAccount
 @property  BOOL isNetworkReachable
 @property  BOOL isDeviceToDeviceEncryptionReady
 @property  <MSPCloudSynchronizerRunConditionsDelegate> *delegate
 @property  BOOL shouldRun

  // instance methods
  -[MSPCloudSynchronizerRunConditions init]
  -[MSPCloudSynchronizerRunConditions delegate]
  -[MSPCloudSynchronizerRunConditions setDelegate:]
  -[MSPCloudSynchronizerRunConditions .cxx_destruct]
  -[MSPCloudSynchronizerRunConditions setDelegateQueue:]
  -[MSPCloudSynchronizerRunConditions isNetworkReachable]
  -[MSPCloudSynchronizerRunConditions initWithDelegate:]
  -[MSPCloudSynchronizerRunConditions delegateQueue]
  -[MSPCloudSynchronizerRunConditions hasiCloudAccount]
  -[MSPCloudSynchronizerRunConditions setHasiCloudAccount:]
  -[MSPCloudSynchronizerRunConditions shouldRetryAfterError:]
  -[MSPCloudSynchronizerRunConditions accountChanged:]
  -[MSPCloudSynchronizerRunConditions setIsNetworkReachable:]
  -[MSPCloudSynchronizerRunConditions subscribeToNetworkChangeNotifications]
  -[MSPCloudSynchronizerRunConditions subscribeToAccountChangeNotifications]
  -[MSPCloudSynchronizerRunConditions refreshAccountStatus]
  -[MSPCloudSynchronizerRunConditions isDeviceToDeviceEncryptionReady]
  -[MSPCloudSynchronizerRunConditions setLastErrorDate:]
  -[MSPCloudSynchronizerRunConditions setLastRetryDelayInSeconds:]
  -[MSPCloudSynchronizerRunConditions announceRunConditionsChanged]
  -[MSPCloudSynchronizerRunConditions currentRetryDelay]
  -[MSPCloudSynchronizerRunConditions lastErrorDate]
  -[MSPCloudSynchronizerRunConditions lastRetryDelayInSeconds]
  -[MSPCloudSynchronizerRunConditions networkObserver]
  -[MSPCloudSynchronizerRunConditions networkConditionsChanged]
  -[MSPCloudSynchronizerRunConditions setIsDeviceToDeviceEncryptionReady:]
  -[MSPCloudSynchronizerRunConditions shouldRun]
  -[MSPCloudSynchronizerRunConditions delayRetryingAfterError:]
  -[MSPCloudSynchronizerRunConditions setNetworkObserver:]


MSPTransitStorageArtwork : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <GEOTransitArtworkDataSource, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int artworkSourceType
 @property  int artworkUseType
 @property  <GEOTransitShieldDataSource> *shieldDataSource
 @property  <GEOTransitIconDataSource> *iconDataSource
 @property  <GEOTransitShieldDataSource> *iconFallbackShieldDataSource
 @property  <GEOTransitTextDataSource> *textDataSource
 @property  BOOL hasRoutingIncidentBadge
 @property  NSString *accessibilityText
 @property  BOOL hasArtworkSourceType
 @property  int artworkSourceType
 @property  BOOL hasArtworkUseType
 @property  int artworkUseType
 @property  BOOL hasShield
 @property  MSPTransitStorageShield *shield
 @property  BOOL hasIcon
 @property  MSPTransitStorageIcon *icon
 @property  BOOL hasIconFallbackShield
 @property  MSPTransitStorageShield *iconFallbackShield
 @property  BOOL hasHasRoutingIncidentBadge
 @property  BOOL hasRoutingIncidentBadge
 @property  BOOL hasAccessibilityText
 @property  NSString *accessibilityText
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPTransitStorageArtwork isEqual:]
  -[MSPTransitStorageArtwork copyWithZone:]
  -[MSPTransitStorageArtwork .cxx_destruct]
  -[MSPTransitStorageArtwork dictionaryRepresentation]
  -[MSPTransitStorageArtwork writeTo:]
  -[MSPTransitStorageArtwork mergeFrom:]
  -[MSPTransitStorageArtwork readFrom:]
  -[MSPTransitStorageArtwork copyTo:]
  -[MSPTransitStorageArtwork icon]
  -[MSPTransitStorageArtwork setIcon:]
  -[MSPTransitStorageArtwork unknownFields]
  -[MSPTransitStorageArtwork shield]
  -[MSPTransitStorageArtwork iconFallbackShield]
  -[MSPTransitStorageArtwork setShield:]
  -[MSPTransitStorageArtwork setIconFallbackShield:]
  -[MSPTransitStorageArtwork hasShield]
  -[MSPTransitStorageArtwork hasIcon]
  -[MSPTransitStorageArtwork hasIconFallbackShield]
  -[MSPTransitStorageArtwork artworkSourceType]
  -[MSPTransitStorageArtwork artworkUseType]
  -[MSPTransitStorageArtwork shieldDataSource]
  -[MSPTransitStorageArtwork iconDataSource]
  -[MSPTransitStorageArtwork iconFallbackShieldDataSource]
  -[MSPTransitStorageArtwork textDataSource]
  -[MSPTransitStorageArtwork hasRoutingIncidentBadge]
  -[MSPTransitStorageArtwork accessibilityText]
  -[MSPTransitStorageArtwork setAccessibilityText:]
  -[MSPTransitStorageArtwork initWithArtwork:]
  -[MSPTransitStorageArtwork setArtworkSourceType:]
  -[MSPTransitStorageArtwork setArtworkUseType:]
  -[MSPTransitStorageArtwork setHasRoutingIncidentBadge:]
  -[MSPTransitStorageArtwork setHasArtworkSourceType:]
  -[MSPTransitStorageArtwork hasArtworkSourceType]
  -[MSPTransitStorageArtwork artworkSourceTypeAsString:]
  -[MSPTransitStorageArtwork StringAsArtworkSourceType:]
  -[MSPTransitStorageArtwork setHasArtworkUseType:]
  -[MSPTransitStorageArtwork hasArtworkUseType]
  -[MSPTransitStorageArtwork artworkUseTypeAsString:]
  -[MSPTransitStorageArtwork StringAsArtworkUseType:]
  -[MSPTransitStorageArtwork setHasHasRoutingIncidentBadge:]
  -[MSPTransitStorageArtwork hasHasRoutingIncidentBadge]
  -[MSPTransitStorageArtwork hasAccessibilityText]


MSPHistoryReplica : MSPReplica <MSPContainerStateSnapshot, NSSecureCoding, MSPPropertyListReplicaDataSerialization, MSPPropertyListReplicaSerialization, MSPCloudReplica>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *contents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *propertyListDataRepresentation
 @property  id propertyListRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSPHistoryReplica supportsSecureCoding]
  +[MSPHistoryReplica allowedEditClasses]
  +[MSPHistoryReplica switchForEdit:caseIsInsertRecord:caseIsEditContents:caseIsEditModificationDate:caseIsDeleteTombstone:]

  // instance methods
  -[MSPHistoryReplica encodeWithCoder:]
  -[MSPHistoryReplica initWithCoder:]
  -[MSPHistoryReplica contents]
  -[MSPHistoryReplica propertyListRepresentation]
  -[MSPHistoryReplica editsToMergeWithReplica:mergeOptions:]
  -[MSPHistoryReplica initWithPropertyListRepresentation:recordCreationHandler:]
  -[MSPHistoryReplica replicaRecordClass]
  -[MSPHistoryReplica changesMergingCloudChanges:withReplica:lastSyncDate:]
  -[MSPHistoryReplica _mergeSelfRecord:withRecordFromOtherReplica:identifier:options:edits:]
  -[MSPHistoryReplica replicaByMergingWithReplica:mergeOptions:userVisibleEffectiveContentsChanged:]
  -[MSPHistoryReplica propertyListRepresentationDecoratingRecordsWithBlock:]
  -[MSPHistoryReplica propertyListDataRepresentation]
  -[MSPHistoryReplica _sortedHistoryEntriesByApplyingEdits:invalidEntryIdentifiers:]
  -[MSPHistoryReplica editsToMergeWithReplica:knownSyncDateForLeastRecentlySyncedClientIfAny:]
  -[MSPHistoryReplica editsToMergeWithReplica:]
  -[MSPHistoryReplica mergeOptionsWithLastSyncDate:]


MSPHistoryReplicaEditDeleteTombstone : MSPReplicaEdit
  // instance methods


MSPHistoryReplicaEditUpdateModificationDate : MSPReplicaEditRemoveTombstone
 @property  NSDate *modificationDate

  // instance methods
  -[MSPHistoryReplicaEditUpdateModificationDate isEqual:]
  -[MSPHistoryReplicaEditUpdateModificationDate .cxx_destruct]
  -[MSPHistoryReplicaEditUpdateModificationDate modificationDate]
  -[MSPHistoryReplicaEditUpdateModificationDate _initWithIdentifierOfAffectedRecord:]
  -[MSPHistoryReplicaEditUpdateModificationDate _initToMoveRecordWithIdentifier:toModificationDate:]


MSPHistoryReplicaSimpleRecord : NSObject /usr/lib/libSystem.B.dylib <MSPHistoryReplicaRecord>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *contents
 @property  MSPVectorTimestamp *contentsTimestamp
 @property  NSDate *modificationDate

  // class methods
  +[MSPHistoryReplicaSimpleRecord recordsByApplyingEdits:toArbitraryRecords:]
  +[MSPHistoryReplicaSimpleRecord recordWithContentsOfRecord:]

  // instance methods
  -[MSPHistoryReplicaSimpleRecord init]
  -[MSPHistoryReplicaSimpleRecord .cxx_destruct]
  -[MSPHistoryReplicaSimpleRecord contents]
  -[MSPHistoryReplicaSimpleRecord modificationDate]
  -[MSPHistoryReplicaSimpleRecord contentsTimestamp]
  -[MSPHistoryReplicaSimpleRecord initWithContents:contentsTimestamp:modificationDate:]
  -[MSPHistoryReplicaSimpleRecord derivedRecordWithContents:contentsTimestamp:]
  -[MSPHistoryReplicaSimpleRecord derivedRecordWithModificationDate:]


MSPHistoryReplicaMergeOptions : NSObject /usr/lib/libSystem.B.dylib <MSPHistoryReplicaMergeOptions>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *earliestKnownSyncDate
 @property  long long modificationDatePolicy

  // instance methods
  -[MSPHistoryReplicaMergeOptions .cxx_destruct]
  -[MSPHistoryReplicaMergeOptions initWithEarliestKnownSyncDate:modificationDatePolicy:]
  -[MSPHistoryReplicaMergeOptions earliestKnownSyncDate]
  -[MSPHistoryReplicaMergeOptions modificationDatePolicy]


MSPHistoryReplicaReapTombstonesMergeOptions : MSPReplicaMergeOptionsReapTombstones <MSPHistoryReplicaMergeOptions>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *earliestKnownSyncDate
 @property  long long modificationDatePolicy

  // instance methods
  -[MSPHistoryReplicaReapTombstonesMergeOptions .cxx_destruct]
  -[MSPHistoryReplicaReapTombstonesMergeOptions initWithEarliestKnownSyncDate:modificationDatePolicy:]
  -[MSPHistoryReplicaReapTombstonesMergeOptions earliestKnownSyncDate]
  -[MSPHistoryReplicaReapTombstonesMergeOptions modificationDatePolicy]


MSPCloudContainerCache : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *cacheName
 @property  NSString *accountIdentifier
 @property  long long accountEnvironment
 @property  NSMutableDictionary *stagedRecords
 @property  NSMutableSet *stagedTombstones
 @property  NSDictionary *cachedRecords
 @property  NSSet *cachedTombstoneRecords
 @property  CKServerChangeToken *serverToken

  // class methods
  +[MSPCloudContainerCache supportsSecureCoding]

  // instance methods
  -[MSPCloudContainerCache load]
  -[MSPCloudContainerCache encodeWithCoder:]
  -[MSPCloudContainerCache initWithCoder:]
  -[MSPCloudContainerCache .cxx_destruct]
  -[MSPCloudContainerCache reset]
  -[MSPCloudContainerCache save]
  -[MSPCloudContainerCache accountIdentifier]
  -[MSPCloudContainerCache setAccountIdentifier:]
  -[MSPCloudContainerCache cacheName]
  -[MSPCloudContainerCache cacheURL]
  -[MSPCloudContainerCache initWithName:accountIdentifier:]
  -[MSPCloudContainerCache serverToken]
  -[MSPCloudContainerCache setServerToken:]
  -[MSPCloudContainerCache addRecordsFromChangeSet:]
  -[MSPCloudContainerCache addRecord:withIdentifier:]
  -[MSPCloudContainerCache hasRecord:withIdentifier:]
  -[MSPCloudContainerCache cachedRecordForRecord:]
  -[MSPCloudContainerCache initWithName:accountIdentifier:accountEnvironment:]
  -[MSPCloudContainerCache cachedRecords]
  -[MSPCloudContainerCache cachedTombstoneRecords]
  -[MSPCloudContainerCache stagedTombstones]
  -[MSPCloudContainerCache stagedRecords]
  -[MSPCloudContainerCache setCachedRecords:]
  -[MSPCloudContainerCache setCachedTombstoneRecords:]
  -[MSPCloudContainerCache merge]
  -[MSPCloudContainerCache accountEnvironment]
  -[MSPCloudContainerCache cachedRecordForIdentifier:]
  -[MSPCloudContainerCache setCacheName:]
  -[MSPCloudContainerCache setAccountEnvironment:]
  -[MSPCloudContainerCache setStagedRecords:]
  -[MSPCloudContainerCache setStagedTombstones:]


MSPCloudContainerCachedRecord : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  CKRecord *record
 @property  NSData *contentsHash
 @property  NSData *positionHash

  // class methods
  +[MSPCloudContainerCachedRecord supportsSecureCoding]

  // instance methods
  -[MSPCloudContainerCachedRecord encodeWithCoder:]
  -[MSPCloudContainerCachedRecord initWithCoder:]
  -[MSPCloudContainerCachedRecord .cxx_destruct]
  -[MSPCloudContainerCachedRecord record]
  -[MSPCloudContainerCachedRecord initWithRecord:]
  -[MSPCloudContainerCachedRecord setRecord:]
  -[MSPCloudContainerCachedRecord isEqualToCloudRecord:]
  -[MSPCloudContainerCachedRecord setPositionHash:]
  -[MSPCloudContainerCachedRecord setContentsHash:]
  -[MSPCloudContainerCachedRecord contentsHash]
  -[MSPCloudContainerCachedRecord positionHash]


MSPTransitStorageIncident : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <GEOTransitIncident, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long muid
 @property  NSString *title
 @property  NSString *summary
 @property  NSString *fullDescription
 @property  NSString *messageForRoutePlanning
 @property  NSString *messageForRouteStepping
 @property  NSString *messageForNonRoutable
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  int iconType
 @property  NSDate *creationDate
 @property  NSDate *lastUpdated
 @property  BOOL blockingIncident
 @property  NSArray *affectedEntities
 @property  BOOL hasMuid
 @property  unsigned long muid
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasSummary
 @property  NSString *summary
 @property  BOOL hasFullDescription
 @property  NSString *fullDescription
 @property  BOOL hasMessageForRoutePlanning
 @property  NSString *messageForRoutePlanning
 @property  BOOL hasMessageForRouteStepping
 @property  NSString *messageForRouteStepping
 @property  BOOL hasMessageForNonRoutable
 @property  NSString *messageForNonRoutable
 @property  BOOL hasStartDatetime
 @property  unsigned int startDatetime
 @property  BOOL hasEndDatetime
 @property  unsigned int endDatetime
 @property  BOOL hasIconType
 @property  int iconType
 @property  BOOL hasCreationDatetime
 @property  unsigned int creationDatetime
 @property  BOOL hasLastUpdatedDatetime
 @property  unsigned int lastUpdatedDatetime
 @property  BOOL hasBlockingIncident
 @property  BOOL blockingIncident
 @property  NSMutableArray *affectedEntities
 @property  PBUnknownFields *unknownFields

  // class methods
  +[MSPTransitStorageIncident affectedEntitiesType]

  // instance methods
  -[MSPTransitStorageIncident isEqual:]
  -[MSPTransitStorageIncident copyWithZone:]
  -[MSPTransitStorageIncident .cxx_destruct]
  -[MSPTransitStorageIncident startDate]
  -[MSPTransitStorageIncident endDate]
  -[MSPTransitStorageIncident dictionaryRepresentation]
  -[MSPTransitStorageIncident title]
  -[MSPTransitStorageIncident setTitle:]
  -[MSPTransitStorageIncident creationDate]
  -[MSPTransitStorageIncident writeTo:]
  -[MSPTransitStorageIncident mergeFrom:]
  -[MSPTransitStorageIncident readFrom:]
  -[MSPTransitStorageIncident copyTo:]
  -[MSPTransitStorageIncident fullDescription]
  -[MSPTransitStorageIncident hasTitle]
  -[MSPTransitStorageIncident unknownFields]
  -[MSPTransitStorageIncident hasMuid]
  -[MSPTransitStorageIncident muid]
  -[MSPTransitStorageIncident setMuid:]
  -[MSPTransitStorageIncident setHasMuid:]
  -[MSPTransitStorageIncident iconType]
  -[MSPTransitStorageIncident initWithIncident:]
  -[MSPTransitStorageIncident hasIconType]
  -[MSPTransitStorageIncident summary]
  -[MSPTransitStorageIncident hasStartDatetime]
  -[MSPTransitStorageIncident startDatetime]
  -[MSPTransitStorageIncident hasEndDatetime]
  -[MSPTransitStorageIncident endDatetime]
  -[MSPTransitStorageIncident hasCreationDatetime]
  -[MSPTransitStorageIncident creationDatetime]
  -[MSPTransitStorageIncident messageForRoutePlanning]
  -[MSPTransitStorageIncident messageForRouteStepping]
  -[MSPTransitStorageIncident messageForNonRoutable]
  -[MSPTransitStorageIncident lastUpdated]
  -[MSPTransitStorageIncident isBlockingIncident]
  -[MSPTransitStorageIncident affectedEntities]
  -[MSPTransitStorageIncident setStartDatetime:]
  -[MSPTransitStorageIncident setCreationDatetime:]
  -[MSPTransitStorageIncident setEndDatetime:]
  -[MSPTransitStorageIncident setIconType:]
  -[MSPTransitStorageIncident setHasIconType:]
  -[MSPTransitStorageIncident iconTypeAsString:]
  -[MSPTransitStorageIncident StringAsIconType:]
  -[MSPTransitStorageIncident setHasStartDatetime:]
  -[MSPTransitStorageIncident setHasEndDatetime:]
  -[MSPTransitStorageIncident setHasCreationDatetime:]
  -[MSPTransitStorageIncident setSummary:]
  -[MSPTransitStorageIncident hasSummary]
  -[MSPTransitStorageIncident setFullDescription:]
  -[MSPTransitStorageIncident setMessageForRoutePlanning:]
  -[MSPTransitStorageIncident setMessageForRouteStepping:]
  -[MSPTransitStorageIncident setMessageForNonRoutable:]
  -[MSPTransitStorageIncident setLastUpdatedDatetime:]
  -[MSPTransitStorageIncident setBlockingIncident:]
  -[MSPTransitStorageIncident addAffectedEntities:]
  -[MSPTransitStorageIncident hasLastUpdatedDatetime]
  -[MSPTransitStorageIncident lastUpdatedDatetime]
  -[MSPTransitStorageIncident blockingIncident]
  -[MSPTransitStorageIncident affectedEntitiesCount]
  -[MSPTransitStorageIncident clearAffectedEntities]
  -[MSPTransitStorageIncident affectedEntitiesAtIndex:]
  -[MSPTransitStorageIncident hasFullDescription]
  -[MSPTransitStorageIncident hasMessageForRoutePlanning]
  -[MSPTransitStorageIncident hasMessageForRouteStepping]
  -[MSPTransitStorageIncident hasMessageForNonRoutable]
  -[MSPTransitStorageIncident setHasLastUpdatedDatetime:]
  -[MSPTransitStorageIncident setHasBlockingIncident:]
  -[MSPTransitStorageIncident hasBlockingIncident]
  -[MSPTransitStorageIncident setAffectedEntities:]


MSPPinnedPlacesFileContainerPersister : MSPFileContainerPersister
  // instance methods
  -[MSPPinnedPlacesFileContainerPersister getSnapshot:data:forNewContents:edits:appliedToOldContents:error:]
  -[MSPPinnedPlacesFileContainerPersister getSnapshot:data:mergingCurrentState:withState:mergeOptions:error:]
  -[MSPPinnedPlacesFileContainerPersister stateSnapshotFromData:]


MSPRemotePinnedPlacesContainerPersister : MSPContainerPersister <MSPMapsPushDaemonProxyObserver>
 @property  BOOL hasRemoteProxy
 @property  NSUUID *lastOperationIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPRemotePinnedPlacesContainerPersister init]
  -[MSPRemotePinnedPlacesContainerPersister dealloc]
  -[MSPRemotePinnedPlacesContainerPersister .cxx_destruct]
  -[MSPRemotePinnedPlacesContainerPersister eraseWithCompletion:]
  -[MSPRemotePinnedPlacesContainerPersister fetchStateSnapshotWithCompletion:]
  -[MSPRemotePinnedPlacesContainerPersister favoritesDidChange]
  -[MSPRemotePinnedPlacesContainerPersister historyDidChange]
  -[MSPRemotePinnedPlacesContainerPersister pushDaemonProxyReceivedNotificationData:forType:recordIdentifier:]
  -[MSPRemotePinnedPlacesContainerPersister commitEditWithNewContents:edits:appliedToOldContents:completion:]
  -[MSPRemotePinnedPlacesContainerPersister commitByMergingWithStateSnapshot:mergeOptions:completion:]
  -[MSPRemotePinnedPlacesContainerPersister hasRemoteProxy]
  -[MSPRemotePinnedPlacesContainerPersister setHasRemoteProxy:]
  -[MSPRemotePinnedPlacesContainerPersister lastOperationIdentifier]
  -[MSPRemotePinnedPlacesContainerPersister setLastOperationIdentifier:]


MSPMapsPushDaemonRemoteProxy : NSObject /usr/lib/libSystem.B.dylib <MSPMapsPushDaemonProxyObserver, MSPMapsPushDaemonProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSPMapsPushDaemonRemoteProxy sharedInstance]

  // instance methods
  -[MSPMapsPushDaemonRemoteProxy init]
  -[MSPMapsPushDaemonRemoteProxy _connection]
  -[MSPMapsPushDaemonRemoteProxy .cxx_destruct]
  -[MSPMapsPushDaemonRemoteProxy addObserver:]
  -[MSPMapsPushDaemonRemoteProxy removeObserver:]
  -[MSPMapsPushDaemonRemoteProxy checkin]
  -[MSPMapsPushDaemonRemoteProxy openConnection]
  -[MSPMapsPushDaemonRemoteProxy closeConnection]
  -[MSPMapsPushDaemonRemoteProxy _connectToDaemonIfNeeded]
  -[MSPMapsPushDaemonRemoteProxy _remoteObjectProxy]
  -[MSPMapsPushDaemonRemoteProxy _clearConnection]
  -[MSPMapsPushDaemonRemoteProxy fetchHistorySerializedRepresentationWithCompletion:]
  -[MSPMapsPushDaemonRemoteProxy commitHistorySerializedRepresentation:reapingTombstones:earliestKnownSyncDate:operationIdentifier:completion:]
  -[MSPMapsPushDaemonRemoteProxy eraseHistorySerializedRepresentationWithCompletion:]
  -[MSPMapsPushDaemonRemoteProxy fetchLastKnownHistoryOperationIdentifier:]
  -[MSPMapsPushDaemonRemoteProxy favoritesDidChange]
  -[MSPMapsPushDaemonRemoteProxy historyDidChange]
  -[MSPMapsPushDaemonRemoteProxy pushDaemonProxyReceivedNotificationData:forType:recordIdentifier:]
  -[MSPMapsPushDaemonRemoteProxy fetchPinnedPlacesSerializedRepresentationWithCompletion:]
  -[MSPMapsPushDaemonRemoteProxy commitPinnedPlacesSerializedRepresentation:operationIdentifier:completion:]
  -[MSPMapsPushDaemonRemoteProxy erasePinnedPlacesSerializedRepresentationWithCompletion:]
  -[MSPMapsPushDaemonRemoteProxy fetchLastKnownPinnedPlacesOperationIdentifier:]
  -[MSPMapsPushDaemonRemoteProxy fetchCollectionsSerializedRepresentationWithCompletion:]
  -[MSPMapsPushDaemonRemoteProxy commitCollectionsSerializedRepresentation:operationIdentifier:completion:]
  -[MSPMapsPushDaemonRemoteProxy fetchLastKnownCollectionsOperationIdentifier:]
  -[MSPMapsPushDaemonRemoteProxy eraseCollectionsSerializedRepresentationWithCompletion:]
  -[MSPMapsPushDaemonRemoteProxy fetchFavoritesSerializedRepresentationWithCompletion:]
  -[MSPMapsPushDaemonRemoteProxy commitFavoritesSerializedRepresentation:reapingTombstones:operationIdentifier:completion:]
  -[MSPMapsPushDaemonRemoteProxy fetchLastKnownFavoritesOperationIdentifier:]
  -[MSPMapsPushDaemonRemoteProxy eraseFavoritesSerializedRepresentationWithCompletion:]
  -[MSPMapsPushDaemonRemoteProxy testByNotingHistoryChangedOnDisk]
  -[MSPMapsPushDaemonRemoteProxy noteMapstoolChangedHistoryOnDisk]
  -[MSPMapsPushDaemonRemoteProxy noteMapstoolChangedFavoritesOnDisk]
  -[MSPMapsPushDaemonRemoteProxy registerForTopic]
  -[MSPMapsPushDaemonRemoteProxy simulateProblemResolution]
  -[MSPMapsPushDaemonRemoteProxy fetchProblemStatus]
  -[MSPMapsPushDaemonRemoteProxy shouldUseDevAPNS:]
  -[MSPMapsPushDaemonRemoteProxy setShouldUseDevAPNS:]
  -[MSPMapsPushDaemonRemoteProxy fetchDevicePushToken:]
  -[MSPMapsPushDaemonRemoteProxy fetchDownloadedAnnouncements:]
  -[MSPMapsPushDaemonRemoteProxy fetchAnnouncementsFilePath:]
  -[MSPMapsPushDaemonRemoteProxy fetchAnnouncementsURLPath:]
  -[MSPMapsPushDaemonRemoteProxy updateAnnouncements:]
  -[MSPMapsPushDaemonRemoteProxy updateActiveAnnouncement]
  -[MSPMapsPushDaemonRemoteProxy simulateAnnouncement:afterDelay:]
  -[MSPMapsPushDaemonRemoteProxy clearCurrentAnnouncement]
  -[MSPMapsPushDaemonRemoteProxy clearShownAnnouncements]
  -[MSPMapsPushDaemonRemoteProxy resetAnnouncements]
  -[MSPMapsPushDaemonRemoteProxy fetchCurrentAnnouncement:]
  -[MSPMapsPushDaemonRemoteProxy fetchShownAnnouncements:]
  -[MSPMapsPushDaemonRemoteProxy clearBulletinWithRecordID:]
  -[MSPMapsPushDaemonRemoteProxy problemStatusResponseWithNotificationID:completion:]
  -[MSPMapsPushDaemonRemoteProxy removeProblemStatusResponseWithNotificationID:]
  -[MSPMapsPushDaemonRemoteProxy showTrafficConditionsBulletinWithTitle:message:actionURL:]
  -[MSPMapsPushDaemonRemoteProxy clearTrafficConditionsBulletin]
  -[MSPMapsPushDaemonRemoteProxy showMapsSuggestionsBulletinWithTitle:message:actionURL:]
  -[MSPMapsPushDaemonRemoteProxy clearMapsSuggestionsBulletin]
  -[MSPMapsPushDaemonRemoteProxy showTrafficIncidentAlertWithID:withReroute:title:description:]
  -[MSPMapsPushDaemonRemoteProxy clearTrafficIncidentBulletinWithAlertID:]
  -[MSPMapsPushDaemonRemoteProxy clearTrafficIncidentsBulletin]
  -[MSPMapsPushDaemonRemoteProxy showPredictedRouteTrafficIncidentBulletinForCommuteDetails:]
  -[MSPMapsPushDaemonRemoteProxy showPredictedRouteTrafficIncidentBulletinForCommuteDetails:afterDelay:]
  -[MSPMapsPushDaemonRemoteProxy clearPredictedRouteTrafficIncidentBulletin]
  -[MSPMapsPushDaemonRemoteProxy showLowFuelAlertBulletinForLowFuelDetails:]
  -[MSPMapsPushDaemonRemoteProxy clearLowFuelAlertBulletin]
  -[MSPMapsPushDaemonRemoteProxy showParkedCarBulletinForEvent:]
  -[MSPMapsPushDaemonRemoteProxy showParkedCarBulletinForEvent:afterDelay:]
  -[MSPMapsPushDaemonRemoteProxy showParkedCarReplacementBulletinForEvent:replacingEvent:]
  -[MSPMapsPushDaemonRemoteProxy showParkedCarReplacementBulletinForEvent:replacingEvent:afterDelay:]
  -[MSPMapsPushDaemonRemoteProxy clearParkedCarBulletin]
  -[MSPMapsPushDaemonRemoteProxy updateMapsModelBackupAttributesIfNeeded]
  -[MSPMapsPushDaemonRemoteProxy eraseRAPData]
  -[MSPMapsPushDaemonRemoteProxy handleMapsApplicationRemoval:]
  -[MSPMapsPushDaemonRemoteProxy fetchUserRoutingPreferencesWithCompletion:]
  -[MSPMapsPushDaemonRemoteProxy userRoutingPrefrencesFromSettingsWithFreshness:]
  -[MSPMapsPushDaemonRemoteProxy clearCachedUserRoutingPreferences]


MSPTransitStorageSystem : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <GEOTransitSystem, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long muid
 @property  NSString *name
 @property  <GEOTransitArtworkDataSource> *artwork
 @property  BOOL hasMuid
 @property  unsigned long muid
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasArtwork
 @property  MSPTransitStorageArtwork *artwork
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPTransitStorageSystem isEqual:]
  -[MSPTransitStorageSystem name]
  -[MSPTransitStorageSystem copyWithZone:]
  -[MSPTransitStorageSystem .cxx_destruct]
  -[MSPTransitStorageSystem setName:]
  -[MSPTransitStorageSystem dictionaryRepresentation]
  -[MSPTransitStorageSystem writeTo:]
  -[MSPTransitStorageSystem mergeFrom:]
  -[MSPTransitStorageSystem readFrom:]
  -[MSPTransitStorageSystem copyTo:]
  -[MSPTransitStorageSystem hasName]
  -[MSPTransitStorageSystem unknownFields]
  -[MSPTransitStorageSystem hasMuid]
  -[MSPTransitStorageSystem muid]
  -[MSPTransitStorageSystem setMuid:]
  -[MSPTransitStorageSystem setHasMuid:]
  -[MSPTransitStorageSystem artwork]
  -[MSPTransitStorageSystem setArtwork:]
  -[MSPTransitStorageSystem hasArtwork]
  -[MSPTransitStorageSystem initWithSystem:]


MSPCollectionItemReplicaStorage : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasClientIdentifier
 @property  NSString *clientIdentifier
 @property  NSMutableArray *records
 @property  PBUnknownFields *unknownFields

  // class methods
  +[MSPCollectionItemReplicaStorage recordsType]

  // instance methods
  -[MSPCollectionItemReplicaStorage isEqual:]
  -[MSPCollectionItemReplicaStorage copyWithZone:]
  -[MSPCollectionItemReplicaStorage .cxx_destruct]
  -[MSPCollectionItemReplicaStorage dictionaryRepresentation]
  -[MSPCollectionItemReplicaStorage writeTo:]
  -[MSPCollectionItemReplicaStorage mergeFrom:]
  -[MSPCollectionItemReplicaStorage readFrom:]
  -[MSPCollectionItemReplicaStorage copyTo:]
  -[MSPCollectionItemReplicaStorage records]
  -[MSPCollectionItemReplicaStorage setClientIdentifier:]
  -[MSPCollectionItemReplicaStorage clientIdentifier]
  -[MSPCollectionItemReplicaStorage hasClientIdentifier]
  -[MSPCollectionItemReplicaStorage unknownFields]
  -[MSPCollectionItemReplicaStorage setRecords:]
  -[MSPCollectionItemReplicaStorage addRecords:]
  -[MSPCollectionItemReplicaStorage recordsCount]
  -[MSPCollectionItemReplicaStorage clearRecords]
  -[MSPCollectionItemReplicaStorage recordsAtIndex:]


MSPCompanionSyncedItem : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <SYObject, SYChange, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long syChangeType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *objectIdentifier
 @property  NSString *sequencer
 @property  long long changeType
 @property  BOOL hasSyncId
 @property  NSString *syncId
 @property  BOOL hasChangeType
 @property  int changeType
 @property  BOOL hasBookmark
 @property  MSPBookmarkStorage *bookmark
 @property  BOOL hasPin
 @property  MSPPinStorage *pin
 @property  BOOL hasSearchRequest
 @property  MSPHistoryEntryStorage *searchRequest
 @property  PBUnknownFields *unknownFields

  // class methods
  +[MSPCompanionSyncedItem syncIdWithPrefix:identifier:]

  // instance methods
  -[MSPCompanionSyncedItem isEqual:]
  -[MSPCompanionSyncedItem copyWithZone:]
  -[MSPCompanionSyncedItem .cxx_destruct]
  -[MSPCompanionSyncedItem changeType]
  -[MSPCompanionSyncedItem dictionaryRepresentation]
  -[MSPCompanionSyncedItem writeTo:]
  -[MSPCompanionSyncedItem mergeFrom:]
  -[MSPCompanionSyncedItem readFrom:]
  -[MSPCompanionSyncedItem copyTo:]
  -[MSPCompanionSyncedItem bookmark]
  -[MSPCompanionSyncedItem setBookmark:]
  -[MSPCompanionSyncedItem setChangeType:]
  -[MSPCompanionSyncedItem unknownFields]
  -[MSPCompanionSyncedItem objectIdentifier]
  -[MSPCompanionSyncedItem setPin:]
  -[MSPCompanionSyncedItem pin]
  -[MSPCompanionSyncedItem setSyChangeType:]
  -[MSPCompanionSyncedItem setSyncId:]
  -[MSPCompanionSyncedItem setSearchRequest:]
  -[MSPCompanionSyncedItem hasSyncId]
  -[MSPCompanionSyncedItem setHasChangeType:]
  -[MSPCompanionSyncedItem hasChangeType]
  -[MSPCompanionSyncedItem changeTypeAsString:]
  -[MSPCompanionSyncedItem StringAsChangeType:]
  -[MSPCompanionSyncedItem hasBookmark]
  -[MSPCompanionSyncedItem hasPin]
  -[MSPCompanionSyncedItem hasSearchRequest]
  -[MSPCompanionSyncedItem syncId]
  -[MSPCompanionSyncedItem searchRequest]
  -[MSPCompanionSyncedItem sequencer]
  -[MSPCompanionSyncedItem syChangeType]


MSPHistoryFileContainerPersister : MSPFileContainerPersister
  // instance methods
  -[MSPHistoryFileContainerPersister getSnapshot:data:forNewContents:edits:appliedToOldContents:error:]
  -[MSPHistoryFileContainerPersister getSnapshot:data:mergingCurrentState:withState:mergeOptions:error:]
  -[MSPHistoryFileContainerPersister stateSnapshotFromData:]


MSPJournal : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  NSString *path
 @property  <MSPJournaling> *delegate

  // instance methods
  -[MSPJournal dealloc]
  -[MSPJournal name]
  -[MSPJournal delegate]
  -[MSPJournal setDelegate:]
  -[MSPJournal .cxx_destruct]
  -[MSPJournal initWithName:]
  -[MSPJournal path]
  -[MSPJournal filename]
  -[MSPJournal initWithName:options:]
  -[MSPJournal noteChangeWithState:error:]
  -[MSPJournal noteChangeWithState:]
  -[MSPJournal noteChangeWithState:affectedObject:]
  -[MSPJournal rotateLogIfNeeded]
  -[MSPJournal rotatedPath]
  -[MSPJournal appendToLog:format:]
  -[MSPJournal appendToJournal:format:]
  -[MSPJournal sendTelemetryForState:affectedObject:]
  -[MSPJournal noteChangeWithState:payload:]
  -[MSPJournal noteChangeWithState:format:]


MSPRemoteCollectionsContainerPersister : MSPContainerPersister <MSPMapsPushDaemonProxyObserver>
 @property  BOOL hasRemoteProxy
 @property  NSUUID *lastOperationIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPRemoteCollectionsContainerPersister init]
  -[MSPRemoteCollectionsContainerPersister dealloc]
  -[MSPRemoteCollectionsContainerPersister .cxx_destruct]
  -[MSPRemoteCollectionsContainerPersister eraseWithCompletion:]
  -[MSPRemoteCollectionsContainerPersister fetchStateSnapshotWithCompletion:]
  -[MSPRemoteCollectionsContainerPersister favoritesDidChange]
  -[MSPRemoteCollectionsContainerPersister historyDidChange]
  -[MSPRemoteCollectionsContainerPersister pushDaemonProxyReceivedNotificationData:forType:recordIdentifier:]
  -[MSPRemoteCollectionsContainerPersister commitEditWithNewContents:edits:appliedToOldContents:completion:]
  -[MSPRemoteCollectionsContainerPersister commitByMergingWithStateSnapshot:mergeOptions:completion:]
  -[MSPRemoteCollectionsContainerPersister hasRemoteProxy]
  -[MSPRemoteCollectionsContainerPersister setHasRemoteProxy:]
  -[MSPRemoteCollectionsContainerPersister lastOperationIdentifier]
  -[MSPRemoteCollectionsContainerPersister setLastOperationIdentifier:]


MSPDirectionsSearch : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasRouteRequestStorage
 @property  GEOStorageRouteRequestStorage *routeRequestStorage
 @property  BOOL hasNavigationInterrupted
 @property  BOOL navigationInterrupted
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPDirectionsSearch isEqual:]
  -[MSPDirectionsSearch copyWithZone:]
  -[MSPDirectionsSearch .cxx_destruct]
  -[MSPDirectionsSearch dictionaryRepresentation]
  -[MSPDirectionsSearch writeTo:]
  -[MSPDirectionsSearch mergeFrom:]
  -[MSPDirectionsSearch readFrom:]
  -[MSPDirectionsSearch copyTo:]
  -[MSPDirectionsSearch unknownFields]
  -[MSPDirectionsSearch setRouteRequestStorage:]
  -[MSPDirectionsSearch hasRouteRequestStorage]
  -[MSPDirectionsSearch setNavigationInterrupted:]
  -[MSPDirectionsSearch setHasNavigationInterrupted:]
  -[MSPDirectionsSearch hasNavigationInterrupted]
  -[MSPDirectionsSearch routeRequestStorage]
  -[MSPDirectionsSearch navigationInterrupted]


MSPPinStorage : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasPosition
 @property  double position
 @property  BOOL hasTimestamp
 @property  double timestamp
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasDroppedPin
 @property  MSPDroppedPin *droppedPin
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPPinStorage isEqual:]
  -[MSPPinStorage copyWithZone:]
  -[MSPPinStorage type]
  -[MSPPinStorage setType:]
  -[MSPPinStorage .cxx_destruct]
  -[MSPPinStorage identifier]
  -[MSPPinStorage setIdentifier:]
  -[MSPPinStorage dictionaryRepresentation]
  -[MSPPinStorage timestamp]
  -[MSPPinStorage position]
  -[MSPPinStorage hasTimestamp]
  -[MSPPinStorage setTimestamp:]
  -[MSPPinStorage writeTo:]
  -[MSPPinStorage mergeFrom:]
  -[MSPPinStorage readFrom:]
  -[MSPPinStorage copyTo:]
  -[MSPPinStorage typeAsString:]
  -[MSPPinStorage StringAsType:]
  -[MSPPinStorage setPosition:]
  -[MSPPinStorage setHasType:]
  -[MSPPinStorage hasType]
  -[MSPPinStorage setHasTimestamp:]
  -[MSPPinStorage unknownFields]
  -[MSPPinStorage hasIdentifier]
  -[MSPPinStorage hasPosition]
  -[MSPPinStorage setDroppedPin:]
  -[MSPPinStorage setHasPosition:]
  -[MSPPinStorage hasDroppedPin]
  -[MSPPinStorage droppedPin]


MSPReplica : NSObject /usr/lib/libSystem.B.dylib <MSPCloudReplica>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *clientIdentifier
 @property  NSDictionary *records

  // class methods
  +[MSPReplica allowedEditClasses]
  +[MSPReplica _switchForEdit:caseIsInsertRecord:caseIsEditContents:]

  // instance methods
  -[MSPReplica init]
  -[MSPReplica .cxx_destruct]
  -[MSPReplica records]
  -[MSPReplica clientIdentifier]
  -[MSPReplica editsToMergeWithReplica:mergeOptions:]
  -[MSPReplica initWithRecords:clientIdentifier:]
  -[MSPReplica replicaRecordClass]
  -[MSPReplica changesMergingCloudChanges:withReplica:lastSyncDate:]
  -[MSPReplica _mergeSelfRecord:withRecordFromOtherReplica:identifier:options:edits:]
  -[MSPReplica replicaByApplyingContainerEdits:toOldContents:forNewContents:recordCreationHandler:replicaEditApplier:error:]
  -[MSPReplica editsToMergeWithReplica:]
  -[MSPReplica _containerSerializationRequiresTrackingPositionEdits]
  -[MSPReplica editsToInsertOrUpdateRecords:]
  -[MSPReplica editsToRemoveRecordsWithIdentifiers:]
  -[MSPReplica _replicaByApplyingContainerEdits:toOldContents:forNewContents:recordCreationHandler:replicaEditApplier:error:]
  -[MSPReplica tombstoneRecordForRecord:]
  -[MSPReplica mergeOptionsWithLastSyncDate:]


_MSPReplicaTombstoneRecord : NSProxy /usr/lib/libobjc.A.dylib
  // instance methods
  -[_MSPReplicaTombstoneRecord respondsToSelector:]
  -[_MSPReplicaTombstoneRecord methodSignatureForSelector:]
  -[_MSPReplicaTombstoneRecord forwardInvocation:]
  -[_MSPReplicaTombstoneRecord .cxx_destruct]
  -[_MSPReplicaTombstoneRecord contents]
  -[_MSPReplicaTombstoneRecord contentsTimestamp]
  -[_MSPReplicaTombstoneRecord _initWithRecord:]


MSPReplicaMergeOptionsReapTombstones : NSObject /usr/lib/libSystem.B.dylib <MSPReplicaMergeOptions>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription


MSPReplicaEdit : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSUUID *identifierOfAffectedRecord

  // instance methods
  -[MSPReplicaEdit init]
  -[MSPReplicaEdit isEqual:]
  -[MSPReplicaEdit copyWithZone:]
  -[MSPReplicaEdit .cxx_destruct]
  -[MSPReplicaEdit _initWithIdentifierOfAffectedRecord:]
  -[MSPReplicaEdit identifierOfAffectedRecord]


MSPReplicaEditInsertRecord : MSPReplicaEdit
 @property  <MSPReplicaRecord> *recordWithInformationToInsert

  // instance methods
  -[MSPReplicaEditInsertRecord isEqual:]
  -[MSPReplicaEditInsertRecord .cxx_destruct]
  -[MSPReplicaEditInsertRecord _initWithIdentifierOfAffectedRecord:]
  -[MSPReplicaEditInsertRecord recordWithInformationToInsert]
  -[MSPReplicaEditInsertRecord _initWithRecordToInsert:identifier:]


MSPReplicaEditUpdateContents : MSPReplicaEdit
 @property  NSData *contents
 @property  MSPVectorTimestamp *contentsTimestamp

  // instance methods
  -[MSPReplicaEditUpdateContents isEqual:]
  -[MSPReplicaEditUpdateContents .cxx_destruct]
  -[MSPReplicaEditUpdateContents contents]
  -[MSPReplicaEditUpdateContents contentsTimestamp]
  -[MSPReplicaEditUpdateContents _initWithIdentifierOfAffectedRecord:]
  -[MSPReplicaEditUpdateContents _initToTurnIntoTombstoneRecordWithIdentifier:]
  -[MSPReplicaEditUpdateContents _initToMoveRecordWithIdentifier:toContents:contentsTimestamp:]


MSPReplicaEditRemoveTombstone : MSPReplicaEdit
  // instance methods


MSPContact : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MSPContact properties]
  +[MSPContact contactWithAccountIdentifier:completion:]
  +[MSPContact shortName:]


MSPSharedTripService : NSObject /usr/lib/libSystem.B.dylib <MSPSharedTripXPCClient, MSPSharedTripXPCServer>
 @property  NSArray *receivedTrips
 @property  BOOL hasValidSharingAccount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSPSharedTripService sharedInstance]

  // instance methods
  -[MSPSharedTripService init]
  -[MSPSharedTripService .cxx_destruct]
  -[MSPSharedTripService checkin]
  -[MSPSharedTripService _remoteObjectProxy]
  -[MSPSharedTripService fetchAccountValidWithCompletion:]
  -[MSPSharedTripService fetchSendingIdentityWithCompletion:]
  -[MSPSharedTripService startSharingTripWithContacts:]
  -[MSPSharedTripService stopSharingTripWithContacts:]
  -[MSPSharedTripService startSharingTripWithMessagesContacts:]
  -[MSPSharedTripService stopSharingTripWithMessagesContacts:]
  -[MSPSharedTripService startSharingTripWithMessagesGroup:]
  -[MSPSharedTripService stopSharingTripWithMessagesGroup:]
  -[MSPSharedTripService stopSharingTrip]
  -[MSPSharedTripService fetchActiveHandlesWithCompletion:]
  -[MSPSharedTripService subscribeToSharedTripUpdatesWithIdentifier:]
  -[MSPSharedTripService unsubscribeFromSharedTripUpdatesWithIdentifier:]
  -[MSPSharedTripService fetchSharedTripsWithCompletion:]
  -[MSPSharedTripService blockSharedTrip:]
  -[MSPSharedTripService accountAvailabilityDidChange:]
  -[MSPSharedTripService sharedTripInvalidatedWithError:]
  -[MSPSharedTripService invalidateActiveHandles]
  -[MSPSharedTripService sendMessage:toParticipant:]
  -[MSPSharedTripService sendMessage:toGroup:]
  -[MSPSharedTripService sharedTripDidBecomeAvailable:]
  -[MSPSharedTripService sharedTripDidBecomeUnavailable:]
  -[MSPSharedTripService sharedTripDidClose:]
  -[MSPSharedTripService destinationDidUpdateForSharedTrip:]
  -[MSPSharedTripService etaDidUpdateForSharedTrip:]
  -[MSPSharedTripService routeDidUpdateForSharedTrip:]
  -[MSPSharedTripService destinationReachedDidUpdateForSharedTrip:]
  -[MSPSharedTripService initializeTrips]
  -[MSPSharedTripService initializeAccountAvailability]
  -[MSPSharedTripService _fetchSharedTripsOnQueue:withCompletion:]
  -[MSPSharedTripService _fetchAccountValidWithCompletion:]
  -[MSPSharedTripService _checkin]
  -[MSPSharedTripService _fetchSendingIdentityWithCompletion:]
  -[MSPSharedTripService _startSharingTripWithContacts:]
  -[MSPSharedTripService _stopSharingTripWithContacts:]
  -[MSPSharedTripService _startSharingTripWithMessagesContacts:]
  -[MSPSharedTripService _stopSharingTripWithMessagesContacts:]
  -[MSPSharedTripService _startSharingTripWithMessagesGroup:]
  -[MSPSharedTripService _stopSharingTripWithMessagesGroup:]
  -[MSPSharedTripService _stopSharingTrip]
  -[MSPSharedTripService _fetchActiveHandlesWithCompletion:]
  -[MSPSharedTripService _fetchActiveHandlesOnQueue:withCompletion:]
  -[MSPSharedTripService _fetchSharedTripsWithCompletion:]
  -[MSPSharedTripService _subscribeToSharedTripUpdatesWithIdentifier:]
  -[MSPSharedTripService _unsubscribeFromSharedTripUpdatesWithIdentifier:]
  -[MSPSharedTripService _blockSharedTrip:]
  -[MSPSharedTripService _insertOrUpdateTrip:]
  -[MSPSharedTripService _openConnectionIfNeeded]
  -[MSPSharedTripService receivedTrips]
  -[MSPSharedTripService hasValidSharingAccount]
  -[MSPSharedTripService addReceivingObserver:]
  -[MSPSharedTripService removeReceivingObserver:]
  -[MSPSharedTripService addSendingObserver:]
  -[MSPSharedTripService removeSendingObserver:]


MSPPinnedPlaceContactStorage : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasContactIdentifier
 @property  NSString *contactIdentifier
 @property  BOOL hasLabeledValueIdentifier
 @property  NSString *labeledValueIdentifier
 @property  BOOL hasHandleValue
 @property  NSString *handleValue
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPPinnedPlaceContactStorage isEqual:]
  -[MSPPinnedPlaceContactStorage copyWithZone:]
  -[MSPPinnedPlaceContactStorage .cxx_destruct]
  -[MSPPinnedPlaceContactStorage dictionaryRepresentation]
  -[MSPPinnedPlaceContactStorage writeTo:]
  -[MSPPinnedPlaceContactStorage contactIdentifier]
  -[MSPPinnedPlaceContactStorage mergeFrom:]
  -[MSPPinnedPlaceContactStorage readFrom:]
  -[MSPPinnedPlaceContactStorage copyTo:]
  -[MSPPinnedPlaceContactStorage unknownFields]
  -[MSPPinnedPlaceContactStorage setContactIdentifier:]
  -[MSPPinnedPlaceContactStorage setLabeledValueIdentifier:]
  -[MSPPinnedPlaceContactStorage labeledValueIdentifier]
  -[MSPPinnedPlaceContactStorage setHandleValue:]
  -[MSPPinnedPlaceContactStorage hasContactIdentifier]
  -[MSPPinnedPlaceContactStorage hasLabeledValueIdentifier]
  -[MSPPinnedPlaceContactStorage hasHandleValue]
  -[MSPPinnedPlaceContactStorage handleValue]


MSPHistoryContainer : MSPContainer
  // class methods
  +[MSPHistoryContainer sharedLocalContainer]
  +[MSPHistoryContainer sharedRemoteContainer]

  // instance methods
  -[MSPHistoryContainer .cxx_destruct]
  -[MSPHistoryContainer addDependent:]
  -[MSPHistoryContainer removeDependent:]
  -[MSPHistoryContainer queryWithDelegate:]
  -[MSPHistoryContainer _processNewEditedContents:]
  -[MSPHistoryContainer _processNewLoadedContents:]
  -[MSPHistoryContainer _commitEditWithFinalContents:context:completion:]


MSPMutableHistoryEntry : NSObject /usr/lib/libSystem.B.dylib <MSPHistoryEntry, MSPMutableObject>
 @property  BOOL immutable
 @property  MSPHistoryEntryStorage *storage
 @property  NSDate *usageDate
 @property  BOOL tracksRAPReportingOnly
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSPMutableHistoryEntry mutableObjectClass]
  +[MSPMutableHistoryEntry mutableObjectProtocol]
  +[MSPMutableHistoryEntry immutableObjectClass]
  +[MSPMutableHistoryEntry immutableObjectProtocol]
  +[MSPMutableHistoryEntry mutableHistoryEntryForStorage:]

  // instance methods
  -[MSPMutableHistoryEntry init]
  -[MSPMutableHistoryEntry mutableCopyWithZone:]
  -[MSPMutableHistoryEntry storage]
  -[MSPMutableHistoryEntry .cxx_destruct]
  -[MSPMutableHistoryEntry initWithStorage:]
  -[MSPMutableHistoryEntry isFailed]
  -[MSPMutableHistoryEntry debugTitle]
  -[MSPMutableHistoryEntry usageDate]
  -[MSPMutableHistoryEntry storageIdentifier]
  -[MSPMutableHistoryEntry ifSearch:ifRoute:ifPlaceDisplay:ifTransitLineItem:]
  -[MSPMutableHistoryEntry isUserVisibleDuplicateOfEntry:]
  -[MSPMutableHistoryEntry tracksRAPReportingOnly]
  -[MSPMutableHistoryEntry transferToImmutableIfValidWithError:]
  -[MSPMutableHistoryEntry copyIfValidWithError:]
  -[MSPMutableHistoryEntry _noteWillMutate]
  -[MSPMutableHistoryEntry ifMutableSearch:ifMutableRoute:ifMutablePlaceDisplay:ifMutableTransitLineItem:]
  -[MSPMutableHistoryEntry _isUserVisibleDuplicateOfSameClassObject:]
  -[MSPMutableHistoryEntry setUsageDate:]
  -[MSPMutableHistoryEntry setTracksRAPReportingOnly:]
  -[MSPMutableHistoryEntry _markImmutable]
  -[MSPMutableHistoryEntry _isImmutable]


MSPMutableHistoryEntrySearch : MSPMutableHistoryEntry <MSPHistoryEntrySearch>
 @property  NSString *query
 @property  NSString *locationDisplayString
 @property  NSString *languageCode
 @property  GEOMapRegion *mapRegion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *usageDate
 @property  BOOL tracksRAPReportingOnly

  // class methods
  +[MSPMutableHistoryEntrySearch mutableObjectClass]
  +[MSPMutableHistoryEntrySearch mutableObjectProtocol]
  +[MSPMutableHistoryEntrySearch immutableObjectClass]
  +[MSPMutableHistoryEntrySearch immutableObjectProtocol]

  // instance methods
  -[MSPMutableHistoryEntrySearch query]
  -[MSPMutableHistoryEntrySearch languageCode]
  -[MSPMutableHistoryEntrySearch setQuery:]
  -[MSPMutableHistoryEntrySearch initWithStorage:]
  -[MSPMutableHistoryEntrySearch setMapRegion:]
  -[MSPMutableHistoryEntrySearch setLanguageCode:]
  -[MSPMutableHistoryEntrySearch mapRegion]
  -[MSPMutableHistoryEntrySearch transferToImmutableIfValidWithError:]
  -[MSPMutableHistoryEntrySearch _isUserVisibleDuplicateOfSameClassObject:]
  -[MSPMutableHistoryEntrySearch locationDisplayString]
  -[MSPMutableHistoryEntrySearch setLocationDisplayString:]


MSPMutableHistoryEntryRoute : MSPMutableHistoryEntry <MSPHistoryEntryRoute>
 @property  <MSPRouteInformationSource> *routeInformationSource
 @property  BOOL navigationInterrupted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *usageDate
 @property  BOOL tracksRAPReportingOnly
 @property  long long transportType
 @property  GEOComposedWaypoint *startWaypoint
 @property  GEOComposedWaypoint *endWaypoint
 @property  GEOURLRouteHandle *routeHandle
 @property  BOOL navigationWasInterrupted

  // class methods
  +[MSPMutableHistoryEntryRoute mutableObjectClass]
  +[MSPMutableHistoryEntryRoute mutableObjectProtocol]
  +[MSPMutableHistoryEntryRoute immutableObjectClass]
  +[MSPMutableHistoryEntryRoute immutableObjectProtocol]

  // instance methods
  -[MSPMutableHistoryEntryRoute .cxx_destruct]
  -[MSPMutableHistoryEntryRoute transportType]
  -[MSPMutableHistoryEntryRoute initWithStorage:]
  -[MSPMutableHistoryEntryRoute routeHandle]
  -[MSPMutableHistoryEntryRoute startWaypoint]
  -[MSPMutableHistoryEntryRoute endWaypoint]
  -[MSPMutableHistoryEntryRoute navigationWasInterrupted]
  -[MSPMutableHistoryEntryRoute transferToImmutableIfValidWithError:]
  -[MSPMutableHistoryEntryRoute setNavigationInterrupted:]
  -[MSPMutableHistoryEntryRoute _routeRequestStorage]
  -[MSPMutableHistoryEntryRoute _isUserVisibleDuplicateOfSameClassObject:]
  -[MSPMutableHistoryEntryRoute routeInformationSource]
  -[MSPMutableHistoryEntryRoute setRouteInformationSource:]


MSPMutableHistoryEntryPlaceDisplay : MSPMutableHistoryEntry <MSPHistoryEntryPlaceDisplay>
 @property  <GEOMapItem> *geoMapItem
 @property  NSUUID *supersededSearchStorageIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *usageDate
 @property  BOOL tracksRAPReportingOnly

  // class methods
  +[MSPMutableHistoryEntryPlaceDisplay mutableObjectClass]
  +[MSPMutableHistoryEntryPlaceDisplay mutableObjectProtocol]
  +[MSPMutableHistoryEntryPlaceDisplay immutableObjectClass]
  +[MSPMutableHistoryEntryPlaceDisplay immutableObjectProtocol]

  // instance methods
  -[MSPMutableHistoryEntryPlaceDisplay initWithStorage:]
  -[MSPMutableHistoryEntryPlaceDisplay geoMapItem]
  -[MSPMutableHistoryEntryPlaceDisplay transferToImmutableIfValidWithError:]
  -[MSPMutableHistoryEntryPlaceDisplay _isUserVisibleDuplicateOfSameClassObject:]
  -[MSPMutableHistoryEntryPlaceDisplay supersededSearchStorageIdentifier]
  -[MSPMutableHistoryEntryPlaceDisplay setGeoMapItem:]
  -[MSPMutableHistoryEntryPlaceDisplay setSupersededSearchStorageIdentifier:]


MSPMutableHistoryEntryTransitLineItem : MSPMutableHistoryEntry <MSPHistoryEntryTransitLineItem>
 @property  <GEOTransitLineItem> *lineItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *usageDate
 @property  BOOL tracksRAPReportingOnly

  // class methods
  +[MSPMutableHistoryEntryTransitLineItem mutableObjectClass]
  +[MSPMutableHistoryEntryTransitLineItem mutableObjectProtocol]
  +[MSPMutableHistoryEntryTransitLineItem immutableObjectClass]
  +[MSPMutableHistoryEntryTransitLineItem immutableObjectProtocol]

  // instance methods
  -[MSPMutableHistoryEntryTransitLineItem initWithStorage:]
  -[MSPMutableHistoryEntryTransitLineItem setLineItem:]
  -[MSPMutableHistoryEntryTransitLineItem lineItem]
  -[MSPMutableHistoryEntryTransitLineItem transferToImmutableIfValidWithError:]
  -[MSPMutableHistoryEntryTransitLineItem _isUserVisibleDuplicateOfSameClassObject:]


MSPRidesharingInformationSource : NSObject /usr/lib/libSystem.B.dylib <MSPRouteInformationSource>
 @property  GEOComposedWaypoint *startWaypoint
 @property  GEOComposedWaypoint *endWaypoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPRidesharingInformationSource .cxx_destruct]
  -[MSPRidesharingInformationSource _endWaypoint]
  -[MSPRidesharingInformationSource _startWaypoint]
  -[MSPRidesharingInformationSource ifRidesharingInformationSource]
  -[MSPRidesharingInformationSource ifGEOStorageRouteRequestStorage]
  -[MSPRidesharingInformationSource initWithStartWaypoint:endWaypoint:]


MSPTransitLineBookmark : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasTransitLineStorage
 @property  MSPTransitStorageLine *transitLineStorage
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPTransitLineBookmark isEqual:]
  -[MSPTransitLineBookmark copyWithZone:]
  -[MSPTransitLineBookmark .cxx_destruct]
  -[MSPTransitLineBookmark dictionaryRepresentation]
  -[MSPTransitLineBookmark writeTo:]
  -[MSPTransitLineBookmark mergeFrom:]
  -[MSPTransitLineBookmark readFrom:]
  -[MSPTransitLineBookmark copyTo:]
  -[MSPTransitLineBookmark unknownFields]
  -[MSPTransitLineBookmark setTransitLineStorage:]
  -[MSPTransitLineBookmark hasTransitLineStorage]
  -[MSPTransitLineBookmark transitLineStorage]


MSPPinnedPlacesContainer : MSPContainer
  // class methods
  +[MSPPinnedPlacesContainer sharedLocalContainer]
  +[MSPPinnedPlacesContainer sharedRemoteContainer]

  // instance methods
  -[MSPPinnedPlacesContainer queryWithDelegate:]


MSPSharedTripGroupSession : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL inLiveMode
 @property  NSString *identifier
 @property  NSString *initiatorIdentifier
 @property  NSString *initiatorDisplayName
 @property  NSArray *accountIdentifiers
 @property  <MSPSharedTripGroupSessionDelegate> *delegate

  // instance methods
  -[MSPSharedTripGroupSession dealloc]
  -[MSPSharedTripGroupSession delegate]
  -[MSPSharedTripGroupSession setDelegate:]
  -[MSPSharedTripGroupSession .cxx_destruct]
  -[MSPSharedTripGroupSession identifier]
  -[MSPSharedTripGroupSession accountIdentifiers]
  -[MSPSharedTripGroupSession joinLiveModeFromHandle:fromAccountID:]
  -[MSPSharedTripGroupSession leaveLiveModeIfNeeded]
  -[MSPSharedTripGroupSession inLiveMode]
  -[MSPSharedTripGroupSession initiatorIdentifier]
  -[MSPSharedTripGroupSession initiatorDisplayName]
  -[MSPSharedTripGroupSession sendChunkedMessage:to:]
  -[MSPSharedTripGroupSession _joinLiveModeFromHandle:fromAccountID:]
  -[MSPSharedTripGroupSession leaveLiveModeForced]
  -[MSPSharedTripGroupSession _leaveLivemode]
  -[MSPSharedTripGroupSession _sharingEnded]
  -[MSPSharedTripGroupSession sendCommand:fromHandle:fromAccountID:]
  -[MSPSharedTripGroupSession _sharingEndedWithError:]
  -[MSPSharedTripGroupSession _sendChunkMessage:to:packet:]
  -[MSPSharedTripGroupSession _validParticipant:]
  -[MSPSharedTripGroupSession initWithService:groupID:initiator:initiatorIdentifier:]
  -[MSPSharedTripGroupSession addSharingWith:]
  -[MSPSharedTripGroupSession sessionIsAliveAfterRemovingSharingIdentifiers:]
  -[MSPSharedTripGroupSession _currentRoutePath]
  -[MSPSharedTripGroupSession participantDidJoin:]
  -[MSPSharedTripGroupSession participantDidLeave:]
  -[MSPSharedTripGroupSession setInitiatorDisplayName:]


MSPQuerySource : NSObject /usr/lib/libSystem.B.dylib <MSPContainerObserver, MSPQuerySourceObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPQuerySource .cxx_destruct]
  -[MSPQuerySource _container]
  -[MSPQuerySource _removeObserver:]
  -[MSPQuerySource _addObserver:]
  -[MSPQuerySource container:didEditWithNewContents:orderedEdits:cause:context:]
  -[MSPQuerySource _didReceiveContainerContents:context:]
  -[MSPQuerySource _didChangeSourceWithNewState:context:inContainer:]
  -[MSPQuerySource _initWithParentSource:preprocessingBlock:mappingBlock:]
  -[MSPQuerySource _initWithOwningContainer:]
  -[MSPQuerySource sourceByMappingContentsUsingBlock:]
  -[MSPQuerySource sourceByMappingContentsUsingPreprocessingBlock:mappingBlock:]
  -[MSPQuerySource newQuery]
  -[MSPQuerySource newEditableQuery]


MSPQuery : NSObject /usr/lib/libSystem.B.dylib <MSPQuerySourceObserver>
 @property  _MSPQueryState *lastState
 @property  _MSPQueryState *visibleState
 @property  NSArray *contents
 @property  @? changeHandler
 @property  NSObject<OS_dispatch_queue> *changeHandlerQueue
 @property  NSArray *unmappedContents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPQuery .cxx_destruct]
  -[MSPQuery contents]
  -[MSPQuery changeHandler]
  -[MSPQuery _setLastState:]
  -[MSPQuery _lastState]
  -[MSPQuery _initWithSource:]
  -[MSPQuery _didChangeSourceWithNewState:context:inContainer:]
  -[MSPQuery _visibleState]
  -[MSPQuery originalIdentifierForObject:]
  -[MSPQuery originalIdentifierForObjectAtIndex:]
  -[MSPQuery setChangeHandler:queue:]
  -[MSPQuery changeHandlerQueue]
  -[MSPQuery unmappedContents]


MSPEditableQuery : MSPQuery
  // instance methods
  -[MSPEditableQuery .cxx_destruct]
  -[MSPEditableQuery _initWithSource:]
  -[MSPEditableQuery _didChangeSourceWithNewState:context:inContainer:]
  -[MSPEditableQuery _visibleState]
  -[MSPEditableQuery _performEditWithStateTransformation:containerEdit:]
  -[MSPEditableQuery deleteContentsObjectAtIndexes:]
  -[MSPEditableQuery deleteContentsObjectAtIndex:]
  -[MSPEditableQuery moveContentsObjectAtIndex:toIndex:]


_MSPQueryState : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *contents
 @property  NSArray *identifiers

  // instance methods
  -[_MSPQueryState .cxx_destruct]
  -[_MSPQueryState contents]
  -[_MSPQueryState identifiers]
  -[_MSPQueryState initWithContainerContents:]
  -[_MSPQueryState stateByInvokingPreprocessingBlock:mappingBlock:]
  -[_MSPQueryState stateByDeletingObjectsAtIndexes:]
  -[_MSPQueryState stateByDeletingObjectAtIndex:]
  -[_MSPQueryState stateByMovingObjectAtIndex:toIndex:]
  -[_MSPQueryState initWithContents:identifiers:]


_MSPHistoryReplicaPlaceholderRecord : NSObject /usr/lib/libSystem.B.dylib <MSPHistoryReplicaRecord, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *contents
 @property  MSPVectorTimestamp *contentsTimestamp
 @property  NSDate *modificationDate

  // class methods
  +[_MSPHistoryReplicaPlaceholderRecord supportsSecureCoding]

  // instance methods
  -[_MSPHistoryReplicaPlaceholderRecord init]
  -[_MSPHistoryReplicaPlaceholderRecord encodeWithCoder:]
  -[_MSPHistoryReplicaPlaceholderRecord initWithCoder:]
  -[_MSPHistoryReplicaPlaceholderRecord .cxx_destruct]
  -[_MSPHistoryReplicaPlaceholderRecord contents]
  -[_MSPHistoryReplicaPlaceholderRecord modificationDate]
  -[_MSPHistoryReplicaPlaceholderRecord contentsTimestamp]
  -[_MSPHistoryReplicaPlaceholderRecord initWithContents:contentsTimestamp:modificationDate:]


_MSPFavoritesReplicaPlaceholderRecord : NSObject /usr/lib/libSystem.B.dylib <MSPFavoritesReplicaRecord, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *contents
 @property  MSPVectorTimestamp *contentsTimestamp
 @property  MSPPosition *position
 @property  MSPVectorTimestamp *positionTimestamp

  // class methods
  +[_MSPFavoritesReplicaPlaceholderRecord supportsSecureCoding]

  // instance methods
  -[_MSPFavoritesReplicaPlaceholderRecord init]
  -[_MSPFavoritesReplicaPlaceholderRecord encodeWithCoder:]
  -[_MSPFavoritesReplicaPlaceholderRecord initWithCoder:]
  -[_MSPFavoritesReplicaPlaceholderRecord .cxx_destruct]
  -[_MSPFavoritesReplicaPlaceholderRecord contents]
  -[_MSPFavoritesReplicaPlaceholderRecord position]
  -[_MSPFavoritesReplicaPlaceholderRecord initWithContents:contentsTimestamp:position:positionTimestamp:]
  -[_MSPFavoritesReplicaPlaceholderRecord contentsTimestamp]
  -[_MSPFavoritesReplicaPlaceholderRecord positionTimestamp]


MSPPin : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasDroppedPin
 @property  MSPDroppedPin *droppedPin

  // instance methods
  -[MSPPin isEqual:]
  -[MSPPin copyWithZone:]
  -[MSPPin .cxx_destruct]
  -[MSPPin dictionaryRepresentation]
  -[MSPPin writeTo:]
  -[MSPPin readFrom:]
  -[MSPPin copyTo:]
  -[MSPPin setDroppedPin:]
  -[MSPPin hasDroppedPin]
  -[MSPPin droppedPin]


MSPRemoteFavoritesContainerPersister : MSPContainerPersister <MSPMapsPushDaemonProxyObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPRemoteFavoritesContainerPersister init]
  -[MSPRemoteFavoritesContainerPersister dealloc]
  -[MSPRemoteFavoritesContainerPersister .cxx_destruct]
  -[MSPRemoteFavoritesContainerPersister eraseWithCompletion:]
  -[MSPRemoteFavoritesContainerPersister _reportErrorIfAny:purpose:]
  -[MSPRemoteFavoritesContainerPersister fetchStateSnapshotWithCompletion:]
  -[MSPRemoteFavoritesContainerPersister favoritesDidChange]
  -[MSPRemoteFavoritesContainerPersister historyDidChange]
  -[MSPRemoteFavoritesContainerPersister pushDaemonProxyReceivedNotificationData:forType:recordIdentifier:]
  -[MSPRemoteFavoritesContainerPersister commitEditWithNewContents:edits:appliedToOldContents:completion:]
  -[MSPRemoteFavoritesContainerPersister commitByMergingWithStateSnapshot:mergeOptions:completion:]
  -[MSPRemoteFavoritesContainerPersister fetchContentsWithCompletion:]


MSPLongLivedCKOpCache : NSObject /usr/lib/libSystem.B.dylib
 @property  NSUserDefaults *defaults
 @property  NSMutableSet *currentOpIDs

  // class methods
  +[MSPLongLivedCKOpCache sharedCache]

  // instance methods
  -[MSPLongLivedCKOpCache init]
  -[MSPLongLivedCKOpCache .cxx_destruct]
  -[MSPLongLivedCKOpCache defaults]
  -[MSPLongLivedCKOpCache setDefaults:]
  -[MSPLongLivedCKOpCache setCurrentOpIDs:]
  -[MSPLongLivedCKOpCache _operationIDsByType]
  -[MSPLongLivedCKOpCache _operationIDsForType:]
  -[MSPLongLivedCKOpCache _setOperationIDs:forType:]
  -[MSPLongLivedCKOpCache currentOpIDs]
  -[MSPLongLivedCKOpCache addOperation:forType:]
  -[MSPLongLivedCKOpCache removeOperation:forType:]
  -[MSPLongLivedCKOpCache pruneOperationsToIDs:]
  -[MSPLongLivedCKOpCache hasOperationID:forType:]
  -[MSPLongLivedCKOpCache isAwareOfOperationID:]
  -[MSPLongLivedCKOpCache isCurrentOperationID:]


MSPLongLivedCKOpScopedCache : NSObject /usr/lib/libSystem.B.dylib
 @property  MSPLongLivedCKOpCache *cache
 @property  NSString *typeName

  // instance methods
  -[MSPLongLivedCKOpScopedCache addOperation:]
  -[MSPLongLivedCKOpScopedCache .cxx_destruct]
  -[MSPLongLivedCKOpScopedCache initWithType:]
  -[MSPLongLivedCKOpScopedCache setCache:]
  -[MSPLongLivedCKOpScopedCache cache]
  -[MSPLongLivedCKOpScopedCache typeName]
  -[MSPLongLivedCKOpScopedCache pruneOperationsToIDs:]
  -[MSPLongLivedCKOpScopedCache isAwareOfOperationID:]
  -[MSPLongLivedCKOpScopedCache isCurrentOperationID:]
  -[MSPLongLivedCKOpScopedCache initWithType:cache:]
  -[MSPLongLivedCKOpScopedCache removeOperation:]
  -[MSPLongLivedCKOpScopedCache hasOperationID:]


MSPRouteBookmark : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasRouteRequestStorage
 @property  GEOStorageRouteRequestStorage *routeRequestStorage
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPRouteBookmark isEqual:]
  -[MSPRouteBookmark copyWithZone:]
  -[MSPRouteBookmark .cxx_destruct]
  -[MSPRouteBookmark dictionaryRepresentation]
  -[MSPRouteBookmark writeTo:]
  -[MSPRouteBookmark mergeFrom:]
  -[MSPRouteBookmark readFrom:]
  -[MSPRouteBookmark copyTo:]
  -[MSPRouteBookmark unknownFields]
  -[MSPRouteBookmark setRouteRequestStorage:]
  -[MSPRouteBookmark hasRouteRequestStorage]
  -[MSPRouteBookmark routeRequestStorage]


MSPQuerySearch : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasQuery
 @property  NSString *query
 @property  BOOL hasLocationDisplayString
 @property  NSString *locationDisplayString
 @property  BOOL hasLanguage
 @property  NSString *language
 @property  BOOL hasMapRegion
 @property  GEOMapRegion *mapRegion
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPQuerySearch isEqual:]
  -[MSPQuerySearch copyWithZone:]
  -[MSPQuerySearch query]
  -[MSPQuerySearch .cxx_destruct]
  -[MSPQuerySearch dictionaryRepresentation]
  -[MSPQuerySearch setQuery:]
  -[MSPQuerySearch writeTo:]
  -[MSPQuerySearch mergeFrom:]
  -[MSPQuerySearch readFrom:]
  -[MSPQuerySearch copyTo:]
  -[MSPQuerySearch language]
  -[MSPQuerySearch setLanguage:]
  -[MSPQuerySearch setMapRegion:]
  -[MSPQuerySearch unknownFields]
  -[MSPQuerySearch mapRegion]
  -[MSPQuerySearch hasMapRegion]
  -[MSPQuerySearch hasQuery]
  -[MSPQuerySearch hasLanguage]
  -[MSPQuerySearch locationDisplayString]
  -[MSPQuerySearch setLocationDisplayString:]
  -[MSPQuerySearch hasLocationDisplayString]


MSPHistoryEntryStorage : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasSearchType
 @property  int searchType
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasTimestamp
 @property  double timestamp
 @property  BOOL hasPosition
 @property  double position
 @property  BOOL hasQuerySearch
 @property  MSPQuerySearch *querySearch
 @property  BOOL hasDirectionsSearch
 @property  MSPDirectionsSearch *directionsSearch
 @property  BOOL hasPlaceDisplay
 @property  MSPPlaceDisplay *placeDisplay
 @property  BOOL hasTransitLineItem
 @property  MSPTransitStorageLineItem *transitLineItem
 @property  BOOL hasRidesharingTrip
 @property  MSPRidesharingTrip *ridesharingTrip
 @property  BOOL hasTracksRAPRecordingOnly
 @property  BOOL tracksRAPRecordingOnly
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPHistoryEntryStorage isEqual:]
  -[MSPHistoryEntryStorage copyWithZone:]
  -[MSPHistoryEntryStorage .cxx_destruct]
  -[MSPHistoryEntryStorage identifier]
  -[MSPHistoryEntryStorage setIdentifier:]
  -[MSPHistoryEntryStorage dictionaryRepresentation]
  -[MSPHistoryEntryStorage timestamp]
  -[MSPHistoryEntryStorage position]
  -[MSPHistoryEntryStorage hasTimestamp]
  -[MSPHistoryEntryStorage setTimestamp:]
  -[MSPHistoryEntryStorage writeTo:]
  -[MSPHistoryEntryStorage mergeFrom:]
  -[MSPHistoryEntryStorage readFrom:]
  -[MSPHistoryEntryStorage copyTo:]
  -[MSPHistoryEntryStorage setPosition:]
  -[MSPHistoryEntryStorage setHasTimestamp:]
  -[MSPHistoryEntryStorage unknownFields]
  -[MSPHistoryEntryStorage searchType]
  -[MSPHistoryEntryStorage setSearchType:]
  -[MSPHistoryEntryStorage setHasSearchType:]
  -[MSPHistoryEntryStorage hasSearchType]
  -[MSPHistoryEntryStorage searchTypeAsString:]
  -[MSPHistoryEntryStorage StringAsSearchType:]
  -[MSPHistoryEntryStorage hasIdentifier]
  -[MSPHistoryEntryStorage hasPosition]
  -[MSPHistoryEntryStorage setTransitLineItem:]
  -[MSPHistoryEntryStorage transitLineItem]
  -[MSPHistoryEntryStorage setHasPosition:]
  -[MSPHistoryEntryStorage tracksRAPRecordingOnly]
  -[MSPHistoryEntryStorage setTracksRAPRecordingOnly:]
  -[MSPHistoryEntryStorage setQuerySearch:]
  -[MSPHistoryEntryStorage querySearch]
  -[MSPHistoryEntryStorage setDirectionsSearch:]
  -[MSPHistoryEntryStorage directionsSearch]
  -[MSPHistoryEntryStorage ridesharingTrip]
  -[MSPHistoryEntryStorage setRidesharingTrip:]
  -[MSPHistoryEntryStorage setPlaceDisplay:]
  -[MSPHistoryEntryStorage placeDisplay]
  -[MSPHistoryEntryStorage hasQuerySearch]
  -[MSPHistoryEntryStorage hasDirectionsSearch]
  -[MSPHistoryEntryStorage hasPlaceDisplay]
  -[MSPHistoryEntryStorage hasTransitLineItem]
  -[MSPHistoryEntryStorage hasRidesharingTrip]
  -[MSPHistoryEntryStorage setHasTracksRAPRecordingOnly:]
  -[MSPHistoryEntryStorage hasTracksRAPRecordingOnly]


MSPCloudSynchronizer : NSObject /usr/lib/libSystem.B.dylib <MSPCloudSynchronizerRunConditionsDelegate, MSPCloudNotificationReceiver>
 @property  NSString *accountID
 @property  BOOL isRunning
 @property  MSPCloudSynchronizerRunConditions *runConditions
 @property  NSObject<OS_dispatch_source> *mergeTimer
 @property  NSUUID *clientIdentifier
 @property  MSPCloudClientRegistration *clientRegistration
 @property  MSPJournal *journal
 @property  NSObject<OS_dispatch_queue> *mergeQueue
 @property  MSPCloudMigrator *migrator
 @property  BOOL hasMigratedPreSync
 @property  BOOL hasMigrated
 @property  unsigned long lastRetryInterval
 @property  NSArray *containers
 @property  <MSPCloudSynchronizerDelegate> *delegate
 @property  MSPCloudKitAccountAccess *cloudAccess
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPCloudSynchronizer dealloc]
  -[MSPCloudSynchronizer delegate]
  -[MSPCloudSynchronizer setDelegate:]
  -[MSPCloudSynchronizer .cxx_destruct]
  -[MSPCloudSynchronizer stop]
  -[MSPCloudSynchronizer start]
  -[MSPCloudSynchronizer isRunning]
  -[MSPCloudSynchronizer hasMigrated]
  -[MSPCloudSynchronizer setClientIdentifier:]
  -[MSPCloudSynchronizer accountID]
  -[MSPCloudSynchronizer setAccountID:]
  -[MSPCloudSynchronizer clientIdentifier]
  -[MSPCloudSynchronizer setIsRunning:]
  -[MSPCloudSynchronizer containers]
  -[MSPCloudSynchronizer setContainers:]
  -[MSPCloudSynchronizer journal]
  -[MSPCloudSynchronizer setJournal:]
  -[MSPCloudSynchronizer migrator]
  -[MSPCloudSynchronizer setMigrator:]
  -[MSPCloudSynchronizer isCurrentlyRunning]
  -[MSPCloudSynchronizer didReceiveRemoteNotification:]
  -[MSPCloudSynchronizer runConditionsChanged:]
  -[MSPCloudSynchronizer merge]
  -[MSPCloudSynchronizer initWithContainers:]
  -[MSPCloudSynchronizer initWithCloudContainers:clientRegistration:runConditions:cloudAccess:]
  -[MSPCloudSynchronizer runConditions]
  -[MSPCloudSynchronizer performPreSyncMigrations:]
  -[MSPCloudSynchronizer mergeTimer]
  -[MSPCloudSynchronizer setMergeTimer:]
  -[MSPCloudSynchronizer requestMergeWithReason:]
  -[MSPCloudSynchronizer requestMergeWithReason:afterDelay:]
  -[MSPCloudSynchronizer lastRetryInterval]
  -[MSPCloudSynchronizer setHasMigratedPreSync:]
  -[MSPCloudSynchronizer setHasMigrated:]
  -[MSPCloudSynchronizer clientRegistration]
  -[MSPCloudSynchronizer handleAccountChangeWithError:completion:]
  -[MSPCloudSynchronizer hasMigratedPreSync]
  -[MSPCloudSynchronizer performMigrationsWithCompletion:]
  -[MSPCloudSynchronizer mergeQueue]
  -[MSPCloudSynchronizer _merge]
  -[MSPCloudSynchronizer prepareForMergeWithGroup:completion:]
  -[MSPCloudSynchronizer requestMerge]
  -[MSPCloudSynchronizer retryIntervalForError:]
  -[MSPCloudSynchronizer setLastRetryInterval:]
  -[MSPCloudSynchronizer cloudAccess]
  -[MSPCloudSynchronizer initWithDefaultRemoteContainers]
  -[MSPCloudSynchronizer initWithDefaultLocalContainers]
  -[MSPCloudSynchronizer setRunConditions:]
  -[MSPCloudSynchronizer setClientRegistration:]
  -[MSPCloudSynchronizer setMergeQueue:]
  -[MSPCloudSynchronizer setCloudAccess:]


MSPLowFuelDetails : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSNumber *engineType
 @property  NSData *iconData
 @property  NSData *iconDataCarPlay

  // class methods
  +[MSPLowFuelDetails supportsSecureCoding]

  // instance methods
  -[MSPLowFuelDetails encodeWithCoder:]
  -[MSPLowFuelDetails initWithCoder:]
  -[MSPLowFuelDetails .cxx_destruct]
  -[MSPLowFuelDetails title]
  -[MSPLowFuelDetails setTitle:]
  -[MSPLowFuelDetails subtitle]
  -[MSPLowFuelDetails iconData]
  -[MSPLowFuelDetails setSubtitle:]
  -[MSPLowFuelDetails setIconData:]
  -[MSPLowFuelDetails initWithTitle:subtitle:engineType:]
  -[MSPLowFuelDetails engineType]
  -[MSPLowFuelDetails setEngineType:]
  -[MSPLowFuelDetails iconDataCarPlay]
  -[MSPLowFuelDetails setIconDataCarPlay:]


MSPSyncManager : NSObject /usr/lib/libSystem.B.dylib <SYServiceDelegate, SYSessionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSPSyncManager _bookmarkIsDisplayable:]

  // instance methods
  -[MSPSyncManager init]
  -[MSPSyncManager .cxx_destruct]
  -[MSPSyncManager history]
  -[MSPSyncManager bookmarks]
  -[MSPSyncManager pins]
  -[MSPSyncManager _notifyObservers]
  -[MSPSyncManager setDroppedPin:]
  -[MSPSyncManager _updateFromDisk]
  -[MSPSyncManager _resumeSyncService]
  -[MSPSyncManager _wrapBookmark:changeType:]
  -[MSPSyncManager _wrapPin:changeType:]
  -[MSPSyncManager _wrapHistoryItem:changeType:]
  -[MSPSyncManager completedPreparingSync]
  -[MSPSyncManager _applyAddItem:]
  -[MSPSyncManager _applyUpdateItem:]
  -[MSPSyncManager _applyDeleteItem:]
  -[MSPSyncManager completedSync]
  -[MSPSyncManager _clearAllNanoPersistableData]
  -[MSPSyncManager _addBookmark:]
  -[MSPSyncManager _addPin:]
  -[MSPSyncManager _addHistoryItem:]
  -[MSPSyncManager _updateBookmark:]
  -[MSPSyncManager _updatePin:]
  -[MSPSyncManager _updateHistoryItem:]
  -[MSPSyncManager _removeBookmark:]
  -[MSPSyncManager _removePin:]
  -[MSPSyncManager _removeHistoryItem:]
  -[MSPSyncManager writeBookmarks:]
  -[MSPSyncManager writePins:]
  -[MSPSyncManager writeHistory:]
  -[MSPSyncManager notifyObservers]
  -[MSPSyncManager readBookmarks]
  -[MSPSyncManager _findDisplayableBookmarks]
  -[MSPSyncManager readPins]
  -[MSPSyncManager readHistory]
  -[MSPSyncManager _setHasChangesAvailable]
  -[MSPSyncManager service:startSession:error:]
  -[MSPSyncManager service:didSwitchFromPairingID:toPairingID:]
  -[MSPSyncManager syncSession:enqueueChanges:error:]
  -[MSPSyncManager syncSession:applyChanges:completion:]
  -[MSPSyncManager syncSession:didEndWithError:]
  -[MSPSyncManager syncSession:resetDataStoreWithError:]
  -[MSPSyncManager setNeedsFullSync]
  -[MSPSyncManager displayableBookmarks]
  -[MSPSyncManager updateHistoryItem:]


MSPFavoritesContainer : MSPContainer
  // class methods
  +[MSPFavoritesContainer sharedLocalContainer]
  +[MSPFavoritesContainer sharedRemoteContainer]

  // instance methods
  -[MSPFavoritesContainer placesQueryWithDelegate:]
  -[MSPFavoritesContainer queryWithDelegate:]
  -[MSPFavoritesContainer moveFavoriteWithIdentifier:belowFavoriteWithIdentifier:context:completionQueue:completion:]
  -[MSPFavoritesContainer moveFavorite:belowFavorite:context:completionQueue:completion:]
  -[MSPFavoritesContainer transiteLinesQueryWithDelegate:]
  -[MSPFavoritesContainer deDuplicateFavoritesWithCompletion:]


MSPMutableFavorite : NSObject /usr/lib/libSystem.B.dylib <MSPFavorite, MSPMutableObject, MSPIdentifiableFavorite>
 @property  BOOL immutable
 @property  MSPBookmarkStorage *bookmarkStorage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *storageIdentifier

  // class methods
  +[MSPMutableFavorite mutableObjectClass]
  +[MSPMutableFavorite mutableObjectProtocol]
  +[MSPMutableFavorite immutableObjectClass]
  +[MSPMutableFavorite immutableObjectProtocol]
  +[MSPMutableFavorite mutableFavoriteForBookmarkStorage:]

  // instance methods
  -[MSPMutableFavorite init]
  -[MSPMutableFavorite mutableCopyWithZone:]
  -[MSPMutableFavorite .cxx_destruct]
  -[MSPMutableFavorite debugTitle]
  -[MSPMutableFavorite storageIdentifier]
  -[MSPMutableFavorite isUserVisibleDuplicateOfFavorite:]
  -[MSPMutableFavorite ifPlace:ifRoute:ifRegion:ifTransitLine:]
  -[MSPMutableFavorite transferToImmutableIfValidWithError:]
  -[MSPMutableFavorite copyIfValidWithError:]
  -[MSPMutableFavorite _noteWillMutate]
  -[MSPMutableFavorite _markImmutable]
  -[MSPMutableFavorite _isImmutable]
  -[MSPMutableFavorite bookmarkStorage]
  -[MSPMutableFavorite abridgedBookmarkStorageForSpotlightStorage]
  -[MSPMutableFavorite initWithBookmarkStorage:]
  -[MSPMutableFavorite ifMutablePlace:ifMutableRoute:ifMutableRegion:ifMutableTransitLine:]
  -[MSPMutableFavorite persisterOnlyBookmarkStorage]


MSPMutableFavoritePlace : MSPMutableFavorite <MSPFavoritePlace>
 @property  NSString *title
 @property  <GEOMapItem> *geoMapItem
 @property  {CLLocationCoordinate2D=dd} coordinateOfDroppedPin
 @property  int floorOrdinalOfDroppedPin
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *storageIdentifier

  // class methods
  +[MSPMutableFavoritePlace mutableObjectClass]
  +[MSPMutableFavoritePlace mutableObjectProtocol]
  +[MSPMutableFavoritePlace immutableObjectClass]
  +[MSPMutableFavoritePlace immutableObjectProtocol]

  // instance methods
  -[MSPMutableFavoritePlace title]
  -[MSPMutableFavoritePlace setTitle:]
  -[MSPMutableFavoritePlace geoMapItem]
  -[MSPMutableFavoritePlace isUserVisibleDuplicateOfFavorite:]
  -[MSPMutableFavoritePlace coordinateOfDroppedPin]
  -[MSPMutableFavoritePlace floorOrdinalOfDroppedPin]
  -[MSPMutableFavoritePlace transferToImmutableIfValidWithError:]
  -[MSPMutableFavoritePlace setGeoMapItem:]
  -[MSPMutableFavoritePlace initWithBookmarkStorage:]
  -[MSPMutableFavoritePlace setCoordinateOfDroppedPin:]
  -[MSPMutableFavoritePlace setFloorOrdinalOfDroppedPin:]


MSPMutableFavoriteRoute : MSPMutableFavorite <MSPFavoriteRoute>
 @property  GEOStorageRouteRequestStorage *routeRequestStorage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *storageIdentifier
 @property  GEOComposedWaypoint *startWaypoint
 @property  GEOComposedWaypoint *endWaypoint
 @property  int transportType

  // class methods
  +[MSPMutableFavoriteRoute mutableObjectClass]
  +[MSPMutableFavoriteRoute mutableObjectProtocol]
  +[MSPMutableFavoriteRoute immutableObjectClass]
  +[MSPMutableFavoriteRoute immutableObjectProtocol]

  // instance methods
  -[MSPMutableFavoriteRoute transportType]
  -[MSPMutableFavoriteRoute startWaypoint]
  -[MSPMutableFavoriteRoute endWaypoint]
  -[MSPMutableFavoriteRoute transferToImmutableIfValidWithError:]
  -[MSPMutableFavoriteRoute setRouteRequestStorage:]
  -[MSPMutableFavoriteRoute routeRequestStorage]
  -[MSPMutableFavoriteRoute initWithBookmarkStorage:]


MSPMutableFavoriteRegion : MSPMutableFavorite <MSPFavoriteRegion>
 @property  NSString *title
 @property  GEOMapRegion *geoMapRegion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *storageIdentifier

  // class methods
  +[MSPMutableFavoriteRegion mutableObjectClass]
  +[MSPMutableFavoriteRegion mutableObjectProtocol]
  +[MSPMutableFavoriteRegion immutableObjectClass]
  +[MSPMutableFavoriteRegion immutableObjectProtocol]

  // instance methods
  -[MSPMutableFavoriteRegion title]
  -[MSPMutableFavoriteRegion setTitle:]
  -[MSPMutableFavoriteRegion transferToImmutableIfValidWithError:]
  -[MSPMutableFavoriteRegion initWithBookmarkStorage:]
  -[MSPMutableFavoriteRegion geoMapRegion]
  -[MSPMutableFavoriteRegion setGeoMapRegion:]


MSPMutableFavoriteTransitLine : MSPMutableFavorite <MSPFavoriteTransitLine>
 @property  MSPTransitLineBookmark *transitLineBookmark
 @property  <GEOTransitLine> *transitLine
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *storageIdentifier

  // class methods
  +[MSPMutableFavoriteTransitLine mutableObjectClass]
  +[MSPMutableFavoriteTransitLine mutableObjectProtocol]
  +[MSPMutableFavoriteTransitLine immutableObjectClass]
  +[MSPMutableFavoriteTransitLine immutableObjectProtocol]

  // instance methods
  -[MSPMutableFavoriteTransitLine transitLine]
  -[MSPMutableFavoriteTransitLine isUserVisibleDuplicateOfFavorite:]
  -[MSPMutableFavoriteTransitLine transferToImmutableIfValidWithError:]
  -[MSPMutableFavoriteTransitLine initWithBookmarkStorage:]
  -[MSPMutableFavoriteTransitLine transitLineBookmark]
  -[MSPMutableFavoriteTransitLine setTransitLine:]


MSPCollectionStorage : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasImage
 @property  NSData *image
 @property  BOOL hasImageURL
 @property  NSString *imageURL
 @property  BOOL hasCollectionDescription
 @property  NSString *collectionDescription
 @property  BOOL hasItemData
 @property  NSData *itemData
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPCollectionStorage isEqual:]
  -[MSPCollectionStorage copyWithZone:]
  -[MSPCollectionStorage .cxx_destruct]
  -[MSPCollectionStorage dictionaryRepresentation]
  -[MSPCollectionStorage title]
  -[MSPCollectionStorage setTitle:]
  -[MSPCollectionStorage writeTo:]
  -[MSPCollectionStorage image]
  -[MSPCollectionStorage setImage:]
  -[MSPCollectionStorage mergeFrom:]
  -[MSPCollectionStorage readFrom:]
  -[MSPCollectionStorage copyTo:]
  -[MSPCollectionStorage hasTitle]
  -[MSPCollectionStorage hasImage]
  -[MSPCollectionStorage imageURL]
  -[MSPCollectionStorage unknownFields]
  -[MSPCollectionStorage setImageURL:]
  -[MSPCollectionStorage itemData]
  -[MSPCollectionStorage setItemData:]
  -[MSPCollectionStorage setCollectionDescription:]
  -[MSPCollectionStorage collectionDescription]
  -[MSPCollectionStorage hasImageURL]
  -[MSPCollectionStorage hasCollectionDescription]
  -[MSPCollectionStorage hasItemData]


MSPTransitStorageLine : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <GEOTransitLine, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long muid
 @property  NSString *name
 @property  GEOMapItemIdentifier *identifier
 @property  <GEOTransitSystem> *system
 @property  unsigned long departureTimeDisplayStyle
 @property  BOOL departuresAreVehicleSpecific
 @property  BOOL isBus
 @property  <GEOTransitArtworkDataSource> *artwork
 @property  <GEOTransitArtworkDataSource> *modeArtwork
 @property  <GEOTransitArtworkDataSource> *alternateArtwork
 @property  BOOL hasLineColorString
 @property  NSString *lineColorString
 @property  BOOL showVehicleNumber
 @property  NSArray *operatingHours
 @property  BOOL hasMuid
 @property  unsigned long muid
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasLineColorString
 @property  NSString *lineColorString
 @property  BOOL hasArtwork
 @property  MSPTransitStorageArtwork *artwork
 @property  BOOL hasModeArtwork
 @property  MSPTransitStorageArtwork *modeArtwork
 @property  BOOL hasSystem
 @property  MSPTransitStorageSystem *system
 @property  BOOL hasAlternateArtwork
 @property  MSPTransitStorageArtwork *alternateArtwork
 @property  BOOL hasLocationHint
 @property  GEOLatLng *locationHint
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPTransitStorageLine isEqual:]
  -[MSPTransitStorageLine name]
  -[MSPTransitStorageLine copyWithZone:]
  -[MSPTransitStorageLine .cxx_destruct]
  -[MSPTransitStorageLine setName:]
  -[MSPTransitStorageLine identifier]
  -[MSPTransitStorageLine dictionaryRepresentation]
  -[MSPTransitStorageLine writeTo:]
  -[MSPTransitStorageLine mergeFrom:]
  -[MSPTransitStorageLine readFrom:]
  -[MSPTransitStorageLine copyTo:]
  -[MSPTransitStorageLine hasName]
  -[MSPTransitStorageLine system]
  -[MSPTransitStorageLine setSystem:]
  -[MSPTransitStorageLine unknownFields]
  -[MSPTransitStorageLine hasMuid]
  -[MSPTransitStorageLine muid]
  -[MSPTransitStorageLine setMuid:]
  -[MSPTransitStorageLine setHasMuid:]
  -[MSPTransitStorageLine artwork]
  -[MSPTransitStorageLine setArtwork:]
  -[MSPTransitStorageLine hasArtwork]
  -[MSPTransitStorageLine operatingHours]
  -[MSPTransitStorageLine modeArtwork]
  -[MSPTransitStorageLine alternateArtwork]
  -[MSPTransitStorageLine setModeArtwork:]
  -[MSPTransitStorageLine setAlternateArtwork:]
  -[MSPTransitStorageLine hasModeArtwork]
  -[MSPTransitStorageLine hasAlternateArtwork]
  -[MSPTransitStorageLine locationHint]
  -[MSPTransitStorageLine setLocationHint:]
  -[MSPTransitStorageLine hasLocationHint]
  -[MSPTransitStorageLine lineColorString]
  -[MSPTransitStorageLine showVehicleNumber]
  -[MSPTransitStorageLine departuresAreVehicleSpecific]
  -[MSPTransitStorageLine departureTimeDisplayStyle]
  -[MSPTransitStorageLine isBus]
  -[MSPTransitStorageLine hasLineColorString]
  -[MSPTransitStorageLine setLineColorString:]
  -[MSPTransitStorageLine initWithLine:]
  -[MSPTransitStorageLine hasSystem]


MSPContainer : NSObject /usr/lib/libSystem.B.dylib <MSPContainerPersisterDelegate>
 @property  MSPQuerySource *entireContentsQuerySource
 @property  MSPContainerPersister *persister
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  BOOL _preventsAssertionsForDuplicateStorageIdentifiers
 @property  BOOL simulatesClearingDiscardableDataAfterOperations
 @property  BOOL containerHasLoadedContents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSPContainer _disableLogging]
  +[MSPContainer mutableObjectContentDidUpdate:]
  +[MSPContainer _preventAssertionsForDuplicateStorageIdentifiersInContainersCreatedPerfomingBlock:]
  +[MSPContainer clearDiscardableDataFromAllContainers]
  +[MSPContainer _deletes:mayRepresentDataLossIfAppliedTo:]

  // instance methods
  -[MSPContainer init]
  -[MSPContainer dealloc]
  -[MSPContainer .cxx_destruct]
  -[MSPContainer addObserver:]
  -[MSPContainer removeObserver:]
  -[MSPContainer _accessQueue]
  -[MSPContainer _forEachObserver:]
  -[MSPContainer editByMergingStateSnapshot:mergeOptions:context:completionQueue:completion:]
  -[MSPContainer accessStateSnapshotUsingConcurrentBlock:]
  -[MSPContainer accessContentsUsingConcurrentBlock:]
  -[MSPContainer editContentsUsingBarrierBlock:completionQueue:completion:]
  -[MSPContainer initWithPersister:]
  -[MSPContainer persisterContentsDidChangeExternally:]
  -[MSPContainer _processNewEditedContents:]
  -[MSPContainer _processNewLoadedContents:]
  -[MSPContainer _commitEditWithFinalContents:context:completion:]
  -[MSPContainer editContentsUsingBarrierBlock:context:completionQueue:completion:]
  -[MSPContainer entireContentsQuerySource]
  -[MSPContainer eraseFromStorageTypes:withCompletionQueue:completion:]
  -[MSPContainer _clearObjectCacheIfNeeded]
  -[MSPContainer _performInitialLoadNotifyingObservers:kickOffSynchronously:completion:]
  -[MSPContainer _processedContentsForPersisterContents:]
  -[MSPContainer _objectsWithDuplicateStorageIdentifiersFromArray:]
  -[MSPContainer _checkAndAddCoalescedEditForContext:identifiers:enqueuedBlock:completionQueue:completion:]
  -[MSPContainer _simulatesClearingDiscardableDataAfterOperations]
  -[MSPContainer editObjectsWithIdentifiers:usingBarrierBlock:context:completionQueue:completion:]
  -[MSPContainer _commitPendingCoalescedEditsIfAny]
  -[MSPContainer beginCoalescingEditsWithContext:]
  -[MSPContainer containerHasLoadedContents]
  -[MSPContainer eraseWithCompletionQueue:completion:]
  -[MSPContainer editObjectsWithIdentifiers:usingBarrierBlock:completionQueue:completion:]
  -[MSPContainer _endCoalescingEditsForContext:]
  -[MSPContainer coalesceEditsForContext:inBlock:]
  -[MSPContainer persister]
  -[MSPContainer _preventsAssertionsForDuplicateStorageIdentifiers]
  -[MSPContainer _setSimulatesClearingDiscardableDataAfterOperations:]


MSPContainerCoalescingToken : NSObject /usr/lib/libSystem.B.dylib <MSPContainerCoalescingToken>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPContainerCoalescingToken init]
  -[MSPContainerCoalescingToken dealloc]
  -[MSPContainerCoalescingToken .cxx_destruct]
  -[MSPContainerCoalescingToken initWithContainerOwner:context:]
  -[MSPContainerCoalescingToken endCoalescingEdits]


MSPSynchronizedContainer : NSObject /usr/lib/libSystem.B.dylib <MSPContainerObserver, MSPCloudContainerObserver>
 @property  MSPCloudSynchronizer *synchronizer
 @property  MSPContainer *container
 @property  MSPCloudContainer *cloudContainer
 @property  BOOL requiresMerge
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPSynchronizedContainer container]
  -[MSPSynchronizedContainer setContainer:]
  -[MSPSynchronizedContainer .cxx_destruct]
  -[MSPSynchronizedContainer container:didEditWithNewContents:orderedEdits:cause:context:]
  -[MSPSynchronizedContainer containerDidEraseContents:fromStorageTypes:]
  -[MSPSynchronizedContainer cloudContainerDidChange:]
  -[MSPSynchronizedContainer mergeWithGroup:completion:]
  -[MSPSynchronizedContainer cancelMergeWithError:]
  -[MSPSynchronizedContainer initWithContainer:synchronizer:]
  -[MSPSynchronizedContainer setSynchronizer:]
  -[MSPSynchronizedContainer setRequiresMerge:]
  -[MSPSynchronizedContainer cloudContainer]
  -[MSPSynchronizedContainer requiresMerge]
  -[MSPSynchronizedContainer synchronizer]
  -[MSPSynchronizedContainer setRequiresMerge:withReason:]
  -[MSPSynchronizedContainer prepareCloudWithGroup:completion:]
  -[MSPSynchronizedContainer setCloudContainer:]


MSPPlaceBookmark : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasMapItemStorage
 @property  GEOMapItemStorage *mapItemStorage
 @property  BOOL hasOrigin
 @property  int origin
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasDroppedPinCoordinate
 @property  GEOLatLng *droppedPinCoordinate
 @property  BOOL hasDroppedPinFloorOrdinal
 @property  int droppedPinFloorOrdinal
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPPlaceBookmark isEqual:]
  -[MSPPlaceBookmark copyWithZone:]
  -[MSPPlaceBookmark .cxx_destruct]
  -[MSPPlaceBookmark dictionaryRepresentation]
  -[MSPPlaceBookmark title]
  -[MSPPlaceBookmark setTitle:]
  -[MSPPlaceBookmark writeTo:]
  -[MSPPlaceBookmark origin]
  -[MSPPlaceBookmark mergeFrom:]
  -[MSPPlaceBookmark readFrom:]
  -[MSPPlaceBookmark copyTo:]
  -[MSPPlaceBookmark hasTitle]
  -[MSPPlaceBookmark setOrigin:]
  -[MSPPlaceBookmark unknownFields]
  -[MSPPlaceBookmark hasMapItemStorage]
  -[MSPPlaceBookmark hasOrigin]
  -[MSPPlaceBookmark setHasOrigin:]
  -[MSPPlaceBookmark originAsString:]
  -[MSPPlaceBookmark StringAsOrigin:]
  -[MSPPlaceBookmark mapItemStorage]
  -[MSPPlaceBookmark setMapItemStorage:]
  -[MSPPlaceBookmark hasDroppedPinCoordinate]
  -[MSPPlaceBookmark droppedPinCoordinate]
  -[MSPPlaceBookmark setDroppedPinCoordinate:]
  -[MSPPlaceBookmark hasDroppedPinFloorOrdinal]
  -[MSPPlaceBookmark droppedPinFloorOrdinal]
  -[MSPPlaceBookmark setHasDroppedPinFloorOrdinal:]
  -[MSPPlaceBookmark setDroppedPinFloorOrdinal:]


MSPNavigationListener : NSObject /usr/lib/libSystem.B.dylib <MNNavigationServiceObserver>
 @property  GEOSharedNavState *currentState
 @property  <MSPNavigationListenerDelegate> *delegate
 @property  BOOL isInNavigatingState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPNavigationListener init]
  -[MSPNavigationListener dealloc]
  -[MSPNavigationListener delegate]
  -[MSPNavigationListener setDelegate:]
  -[MSPNavigationListener .cxx_destruct]
  -[MSPNavigationListener currentState]
  -[MSPNavigationListener setCurrentState:]
  -[MSPNavigationListener _updateLocation:]
  -[MSPNavigationListener _updateRoute:]
  -[MSPNavigationListener _updateTraffic:]
  -[MSPNavigationListener _updateETA:distance:]
  -[MSPNavigationListener _referenceFrameForDestination:]
  -[MSPNavigationListener isInNavigatingState]
  -[MSPNavigationListener _initState]
  -[MSPNavigationListener navigationService:didChangeFromState:toState:]
  -[MSPNavigationListener navigationService:didFailWithError:]
  -[MSPNavigationListener navigationService:didUpdateMatchedLocation:]
  -[MSPNavigationListener navigationServiceDidArrive:]
  -[MSPNavigationListener navigationService:didUpdateRemainingTime:remainingDistance:]
  -[MSPNavigationListener navigationService:didUpdateTraffic:]
  -[MSPNavigationListener navigationService:didReroute:traffic:]


MSPCollectionsFileContainerPersister : MSPFileContainerPersister
  // instance methods
  -[MSPCollectionsFileContainerPersister getSnapshot:data:forNewContents:edits:appliedToOldContents:error:]
  -[MSPCollectionsFileContainerPersister getSnapshot:data:mergingCurrentState:withState:mergeOptions:error:]
  -[MSPCollectionsFileContainerPersister stateSnapshotFromData:]


MSPCloudKitAccountAccess : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL useSecureContainer
 @property  NSString *accountIdentifier
 @property  BOOL disableDeviceToDeviceEncryption

  // class methods
  +[MSPCloudKitAccountAccess defaultEnvironment]
  +[MSPCloudKitAccountAccess sharedAccess]
  +[MSPCloudKitAccountAccess hasCloudKitEntitlement]
  +[MSPCloudKitAccountAccess fetchDeviceToDeviceEncryptionStatus:]
  +[MSPCloudKitAccountAccess containerEnvironmentForAccessEnvironment:]
  +[MSPCloudKitAccountAccess useLongLivedOperations]

  // instance methods
  -[MSPCloudKitAccountAccess .cxx_destruct]
  -[MSPCloudKitAccountAccess accountIdentifier]
  -[MSPCloudKitAccountAccess setAccountIdentifier:]
  -[MSPCloudKitAccountAccess initWithEnvironment:]
  -[MSPCloudKitAccountAccess setDisableDeviceToDeviceEncryption:]
  -[MSPCloudKitAccountAccess containerWithZoneWidePCS:]
  -[MSPCloudKitAccountAccess setUseSecureContainer:]
  -[MSPCloudKitAccountAccess useSecureContainer]
  -[MSPCloudKitAccountAccess fetchAccountIdentifierWithCompletion:]
  -[MSPCloudKitAccountAccess fetchDeviceToDeviceEncryptionStatus:]
  -[MSPCloudKitAccountAccess initWithEnvironment:createContainers:]
  -[MSPCloudKitAccountAccess disableDeviceToDeviceEncryption]
  -[MSPCloudKitAccountAccess containerForAccount]
  -[MSPCloudKitAccountAccess fetchAccountStatus:]


MSPEncryptedCloudRecord : NSObject /usr/lib/libSystem.B.dylib <MSPCloudRecord>
 @property  CKRecord *record
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *cloudRecordName
 @property  NSDate *cloudRecordModificationDate

  // class methods
  +[MSPEncryptedCloudRecord arrayOfCKRecordsFromArray:]
  +[MSPEncryptedCloudRecord arrayOfEncryptedRecordsFromArray:]

  // instance methods
  -[MSPEncryptedCloudRecord objectForKeyedSubscript:]
  -[MSPEncryptedCloudRecord .cxx_destruct]
  -[MSPEncryptedCloudRecord setObject:forKeyedSubscript:]
  -[MSPEncryptedCloudRecord record]
  -[MSPEncryptedCloudRecord initWithCKRecord:isNewlyCreatedRecord:]
  -[MSPEncryptedCloudRecord cloudRecordName]
  -[MSPEncryptedCloudRecord cloudRecordModificationDate]


MSPCloudMigrator : NSObject /usr/lib/libSystem.B.dylib <MSPCloudContainerObserver>
 @property  MSPJournal *journal
 @property  NSArray *containers
 @property  NSOrderedSet *migratedFavoriteIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPCloudMigrator .cxx_destruct]
  -[MSPCloudMigrator containers]
  -[MSPCloudMigrator setContainers:]
  -[MSPCloudMigrator journal]
  -[MSPCloudMigrator setJournal:]
  -[MSPCloudMigrator cloudContainerDidChange:]
  -[MSPCloudMigrator cloudContainer:didFetchChanges:]
  -[MSPCloudMigrator initWithContainers:]
  -[MSPCloudMigrator initWithCloudContainers:]
  -[MSPCloudMigrator performPreSyncMigrationsWithCompletion:]
  -[MSPCloudMigrator performMigrationsWithCompletion:]
  -[MSPCloudMigrator _performPreSyncMigrationsForCollectionsContainerWithCompletion:]
  -[MSPCloudMigrator _performMigrationsForPinnedPlacesContainerWithCompletion:]
  -[MSPCloudMigrator _performMigrationsForCollectionsContainerWithCompletion:]
  -[MSPCloudMigrator _performMigrationsForFavoritesContainerWithCompletion:]
  -[MSPCloudMigrator migratedFavoriteIdentifiers]
  -[MSPCloudMigrator setMigratedFavoriteIdentifiers:]
  -[MSPCloudMigrator _performPreSyncMigrationsForFavoritesContainerWithCompletion:]
  -[MSPCloudMigrator _performPreSyncMigrationsForHistoryContainerWithCompletion:]
  -[MSPCloudMigrator _performMigrationsForHistoryContainerWithCompletion:]


MSPReplicaRecordFromCloudKit : NSObject /usr/lib/libSystem.B.dylib <MSPReplicaRecordFromCloud>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *contents
 @property  MSPVectorTimestamp *contentsTimestamp
 @property  CKRecord *record
 @property  BOOL tombstoneRepresentedByCloudRecord
 @property  NSUUID *recordIdentifier

  // class methods
  +[MSPReplicaRecordFromCloudKit recordType]
  +[MSPReplicaRecordFromCloudKit tombstoneWithRecordIdentifier:]
  +[MSPReplicaRecordFromCloudKit recordFromInsertEdit:]

  // instance methods
  -[MSPReplicaRecordFromCloudKit .cxx_destruct]
  -[MSPReplicaRecordFromCloudKit contents]
  -[MSPReplicaRecordFromCloudKit recordIdentifier]
  -[MSPReplicaRecordFromCloudKit record]
  -[MSPReplicaRecordFromCloudKit setRecord:]
  -[MSPReplicaRecordFromCloudKit initWithCKRecord:]
  -[MSPReplicaRecordFromCloudKit tombstoneRecordRepresentation]
  -[MSPReplicaRecordFromCloudKit recordRepresentation]
  -[MSPReplicaRecordFromCloudKit initWithReplicaRecord:recordID:]
  -[MSPReplicaRecordFromCloudKit contentsTimestamp]
  -[MSPReplicaRecordFromCloudKit applyUpdateEdit:]
  -[MSPReplicaRecordFromCloudKit isTombstoneRepresentedByCloudRecord]
  -[MSPReplicaRecordFromCloudKit recordZoneName]
  -[MSPReplicaRecordFromCloudKit recordRepresentationWithType:recordZoneID:]
  -[MSPReplicaRecordFromCloudKit initWithContents:contentsTimestamp:identifier:]


MSPHistoryReplicaRecordFromCloudKit : MSPReplicaRecordFromCloudKit <MSPHistoryReplicaRecord, MSPHistoryReplicaRecordFromCloud>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *contents
 @property  MSPVectorTimestamp *contentsTimestamp
 @property  NSDate *modificationDate
 @property  CKRecord *record
 @property  BOOL tombstoneRepresentedByCloudRecord
 @property  NSUUID *recordIdentifier

  // class methods
  +[MSPHistoryReplicaRecordFromCloudKit tombstoneWithRecordIdentifier:]
  +[MSPHistoryReplicaRecordFromCloudKit recordFromInsertEdit:]

  // instance methods
  -[MSPHistoryReplicaRecordFromCloudKit .cxx_destruct]
  -[MSPHistoryReplicaRecordFromCloudKit modificationDate]
  -[MSPHistoryReplicaRecordFromCloudKit initWithCKRecord:]
  -[MSPHistoryReplicaRecordFromCloudKit initWithReplicaRecord:recordID:]
  -[MSPHistoryReplicaRecordFromCloudKit applyUpdateEdit:]
  -[MSPHistoryReplicaRecordFromCloudKit applyUpdateModificationDateEdit:]
  -[MSPHistoryReplicaRecordFromCloudKit applyDeleteTombstoneEdit:]


MSPOrderedReplicaRecordFromCloudKit : MSPReplicaRecordFromCloudKit <MSPOrderedReplicaRecord, MSPOrderedReplicaRecordFromCloud>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *contents
 @property  MSPVectorTimestamp *contentsTimestamp
 @property  MSPPosition *position
 @property  MSPVectorTimestamp *positionTimestamp
 @property  CKRecord *record
 @property  BOOL tombstoneRepresentedByCloudRecord
 @property  NSUUID *recordIdentifier

  // class methods
  +[MSPOrderedReplicaRecordFromCloudKit recordType]
  +[MSPOrderedReplicaRecordFromCloudKit recordFromInsertEdit:]

  // instance methods
  -[MSPOrderedReplicaRecordFromCloudKit .cxx_destruct]
  -[MSPOrderedReplicaRecordFromCloudKit position]
  -[MSPOrderedReplicaRecordFromCloudKit initWithCKRecord:]
  -[MSPOrderedReplicaRecordFromCloudKit recordRepresentation]
  -[MSPOrderedReplicaRecordFromCloudKit initWithReplicaRecord:recordID:]
  -[MSPOrderedReplicaRecordFromCloudKit positionTimestamp]
  -[MSPOrderedReplicaRecordFromCloudKit applyUpdatePositionEdit:]
  -[MSPOrderedReplicaRecordFromCloudKit recordZoneName]
  -[MSPOrderedReplicaRecordFromCloudKit initWithContents:contentsTimestamp:position:positionTimestamp:identifier:]


MSPFavoritesReplicaRecordFromCloudKit : MSPOrderedReplicaRecordFromCloudKit
  // class methods
  +[MSPFavoritesReplicaRecordFromCloudKit recordType]

  // instance methods
  -[MSPFavoritesReplicaRecordFromCloudKit recordZoneName]


MSPCollectionsReplicaRecordFromCloudKit : MSPOrderedReplicaRecordFromCloudKit
  // class methods
  +[MSPCollectionsReplicaRecordFromCloudKit recordType]

  // instance methods
  -[MSPCollectionsReplicaRecordFromCloudKit recordZoneName]


MSPPinnedPlacesReplicaRecordFromCloudKit : MSPOrderedReplicaRecordFromCloudKit
  // class methods
  +[MSPPinnedPlacesReplicaRecordFromCloudKit recordType]

  // instance methods
  -[MSPPinnedPlacesReplicaRecordFromCloudKit recordZoneName]


MSPTransitStorageIncidentEntity : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <GEOTransitIncidentEntity, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long muid
 @property  BOOL hasNextStopIDs
 @property  NSSet *nextStopIDs
 @property  BOOL hasMuid
 @property  unsigned long muid
 @property  unsigned long nextStopsMuidsCount
 @property  ^Q nextStopsMuids
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPTransitStorageIncidentEntity dealloc]
  -[MSPTransitStorageIncidentEntity isEqual:]
  -[MSPTransitStorageIncidentEntity copyWithZone:]
  -[MSPTransitStorageIncidentEntity .cxx_destruct]
  -[MSPTransitStorageIncidentEntity dictionaryRepresentation]
  -[MSPTransitStorageIncidentEntity writeTo:]
  -[MSPTransitStorageIncidentEntity mergeFrom:]
  -[MSPTransitStorageIncidentEntity readFrom:]
  -[MSPTransitStorageIncidentEntity copyTo:]
  -[MSPTransitStorageIncidentEntity unknownFields]
  -[MSPTransitStorageIncidentEntity hasMuid]
  -[MSPTransitStorageIncidentEntity muid]
  -[MSPTransitStorageIncidentEntity setMuid:]
  -[MSPTransitStorageIncidentEntity setHasMuid:]
  -[MSPTransitStorageIncidentEntity nextStopIDs]
  -[MSPTransitStorageIncidentEntity hasNextStopIDs]
  -[MSPTransitStorageIncidentEntity initWithIncidentEntity:]
  -[MSPTransitStorageIncidentEntity addNextStopsMuids:]
  -[MSPTransitStorageIncidentEntity nextStopsMuidsCount]
  -[MSPTransitStorageIncidentEntity nextStopsMuidsAtIndex:]
  -[MSPTransitStorageIncidentEntity clearNextStopsMuids]
  -[MSPTransitStorageIncidentEntity nextStopsMuids]
  -[MSPTransitStorageIncidentEntity setNextStopsMuids:count:]


MSPSenderETAController : NSObject /usr/lib/libSystem.B.dylib <MSPNavigationListenerDelegate, MSPSharedTripGroupSessionDelegate, MSPSenderMessageStrategyDelegate>
 @property  NSArray *activeHandles
 @property  NSObject<MSPSenderETAControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPSenderETAController dealloc]
  -[MSPSenderETAController delegate]
  -[MSPSenderETAController setDelegate:]
  -[MSPSenderETAController .cxx_destruct]
  -[MSPSenderETAController sendMessage:toParticipant:]
  -[MSPSenderETAController initWithRelay:]
  -[MSPSenderETAController startSharingWith:]
  -[MSPSenderETAController stopSharingWith:]
  -[MSPSenderETAController startSharingWithMessages:]
  -[MSPSenderETAController stopSharingWithMessages:]
  -[MSPSenderETAController startSharingWithGroup:]
  -[MSPSenderETAController stopSharingWithGroup:]
  -[MSPSenderETAController stopSharing]
  -[MSPSenderETAController activeHandles]
  -[MSPSenderETAController groupSession:participantDidJoin:]
  -[MSPSenderETAController groupSession:participantDidLeave:]
  -[MSPSenderETAController rulesForParticipant:]
  -[MSPSenderETAController touchedRules]
  -[MSPSenderETAController groupSessionEnded:withError:]
  -[MSPSenderETAController navigationListenerIsReady:]
  -[MSPSenderETAController navigationListener:didFailWithError:]
  -[MSPSenderETAController navigationListenerStopped:]
  -[MSPSenderETAController navigationListenerETAUpdated:]
  -[MSPSenderETAController navigationListenerDestinationUpdated:]
  -[MSPSenderETAController navigationListenerRouteUpdated:]
  -[MSPSenderETAController navigationListenerTrafficUpdated:]
  -[MSPSenderETAController navigationListenerArrived:]
  -[MSPSenderETAController _restoreLastSession]
  -[MSPSenderETAController _createGroupSessionIfNeededWithIdentifier:]
  -[MSPSenderETAController _invalidateActiveHandles]
  -[MSPSenderETAController _startNavigationListener]
  -[MSPSenderETAController _startingGroupSession]
  -[MSPSenderETAController _updateStorage]
  -[MSPSenderETAController _sendfinishedToIdentifiers:]
  -[MSPSenderETAController _cleanObjects]
  -[MSPSenderETAController _stopNavigationListener]
  -[MSPSenderETAController _invalidateSharedTripWithError:]


MSPRegionBookmark : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasRegion
 @property  GEOMapRegion *region
 @property  BOOL hasTitle
 @property  NSString *title
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPRegionBookmark isEqual:]
  -[MSPRegionBookmark copyWithZone:]
  -[MSPRegionBookmark .cxx_destruct]
  -[MSPRegionBookmark dictionaryRepresentation]
  -[MSPRegionBookmark title]
  -[MSPRegionBookmark setTitle:]
  -[MSPRegionBookmark writeTo:]
  -[MSPRegionBookmark region]
  -[MSPRegionBookmark mergeFrom:]
  -[MSPRegionBookmark readFrom:]
  -[MSPRegionBookmark copyTo:]
  -[MSPRegionBookmark hasTitle]
  -[MSPRegionBookmark setRegion:]
  -[MSPRegionBookmark unknownFields]
  -[MSPRegionBookmark hasRegion]


_MSPContainerEditsRecorder : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *recordableMutableArray
 @property  NSArray *orderedEdits

  // instance methods
  -[_MSPContainerEditsRecorder .cxx_destruct]
  -[_MSPContainerEditsRecorder initWithMutableArray:]
  -[_MSPContainerEditsRecorder recordableMutableArray]
  -[_MSPContainerEditsRecorder useImmutableObjectsForEditsFromMap:intermediateMutableObjectTransferBlock:]
  -[_MSPContainerEditsRecorder orderedEdits]
  -[_MSPContainerEditsRecorder _mutableObjectContentDidUpdate:]
  -[_MSPContainerEditsRecorder _editDetectorDidDetectUpdateForObject:]
  -[_MSPContainerEditsRecorder countOfEditableObjects]
  -[_MSPContainerEditsRecorder objectInEditableObjectsAtIndex:]
  -[_MSPContainerEditsRecorder editableObjectsAtIndexes:]
  -[_MSPContainerEditsRecorder getEditableObjects:range:]
  -[_MSPContainerEditsRecorder insertObject:inEditableObjectsAtIndex:]
  -[_MSPContainerEditsRecorder removeObjectFromEditableObjectsAtIndex:]
  -[_MSPContainerEditsRecorder replaceObjectInEditableObjectsAtIndex:withObject:]
  -[_MSPContainerEditsRecorder insertEditableObjects:atIndexes:]
  -[_MSPContainerEditsRecorder removeEditableObjectsAtIndexes:]
  -[_MSPContainerEditsRecorder replaceEditableObjectsAtIndexes:withEditableObjects:]


_MSPContainerEdit : NSObject /usr/lib/libSystem.B.dylib <MSPContainerEdit>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MSPContainerEdit ifAddition:ifRemoval:ifReplacement:ifContentUpdate:ifReplacedEntirely:]
  -[_MSPContainerEdit useImmutableObjectsFromMap:intermediateMutableObjectTransferBlock:]


_MSPContainerEditAddition : _MSPContainerEdit <MSPContainerEditAddition>
 @property  NSArray *objects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *addedImmutableObjects
 @property  NSIndexSet *indexesOfAddedObjects

  // instance methods
  -[_MSPContainerEditAddition .cxx_destruct]
  -[_MSPContainerEditAddition objects]
  -[_MSPContainerEditAddition addedImmutableObjects]
  -[_MSPContainerEditAddition initWithObjects:indexes:identifiersAtop:]
  -[_MSPContainerEditAddition useImmutableObjectsFromMap:intermediateMutableObjectTransferBlock:]
  -[_MSPContainerEditAddition indexesOfAddedObjects]
  -[_MSPContainerEditAddition identifierForObjectAtopAddedImmutableObject:]


_MSPContainerEditRemoval : _MSPContainerEdit <MSPContainerEditRemoval>
 @property  NSArray *originalObjects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *removedImmutableObjects
 @property  NSIndexSet *indexesOfRemovedObjects

  // instance methods
  -[_MSPContainerEditRemoval .cxx_destruct]
  -[_MSPContainerEditRemoval removedImmutableObjects]
  -[_MSPContainerEditRemoval initWithRemovedObjects:indexes:]
  -[_MSPContainerEditRemoval useImmutableObjectsFromMap:intermediateMutableObjectTransferBlock:]
  -[_MSPContainerEditRemoval indexesOfRemovedObjects]
  -[_MSPContainerEditRemoval originalObjects]


_MSPContainerEditReplacement : _MSPContainerEdit <MSPContainerEditReplacement>
 @property  NSArray *originalObjects
 @property  NSArray *replacementObjects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *originalImmutableObjects
 @property  NSArray *replacementImmutableObjects
 @property  NSIndexSet *indexesOfReplacedObjects

  // instance methods
  -[_MSPContainerEditReplacement .cxx_destruct]
  -[_MSPContainerEditReplacement originalImmutableObjects]
  -[_MSPContainerEditReplacement replacementImmutableObjects]
  -[_MSPContainerEditReplacement initWithOriginalObjects:replacementObjects:indexes:]
  -[_MSPContainerEditReplacement useImmutableObjectsFromMap:intermediateMutableObjectTransferBlock:]
  -[_MSPContainerEditReplacement originalObjects]
  -[_MSPContainerEditReplacement indexesOfReplacedObjects]
  -[_MSPContainerEditReplacement replacementObjects]


_MSPContainerEditContentUpdate : _MSPContainerEdit <MSPContainerEditContentUpdate>
 @property  <MSPMutableObject> *updatedObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <MSPImmutableObject> *updatedImmutableObject

  // instance methods
  -[_MSPContainerEditContentUpdate .cxx_destruct]
  -[_MSPContainerEditContentUpdate updatedImmutableObject]
  -[_MSPContainerEditContentUpdate initWithUpdatedObject:]
  -[_MSPContainerEditContentUpdate useImmutableObjectsFromMap:intermediateMutableObjectTransferBlock:]
  -[_MSPContainerEditContentUpdate updatedObject]
  -[_MSPContainerEditContentUpdate initWithUpdatedImmutableObject:]


_MSPContainerEditReplacedEntirely : _MSPContainerEdit <MSPContainerEditReplacedEntirely>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_MSPContainerEditReplacedEntirely sharedInstance]

  // instance methods


MSPPinnedPlacesReplica : MSPOrderedReplica <MSPCloudReplica, MSPContainerStateSnapshot, MSPPropertyListReplicaDataSerialization, MSPPropertyListReplicaSerialization>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *contents
 @property  NSData *propertyListDataRepresentation
 @property  id propertyListRepresentation

  // instance methods
  -[MSPPinnedPlacesReplica encodeWithCoder:]
  -[MSPPinnedPlacesReplica initWithCoder:]
  -[MSPPinnedPlacesReplica contents]
  -[MSPPinnedPlacesReplica propertyListRepresentation]
  -[MSPPinnedPlacesReplica editsToMergeWithReplica:mergeOptions:]
  -[MSPPinnedPlacesReplica initWithPropertyListRepresentation:recordCreationHandler:]
  -[MSPPinnedPlacesReplica replicaRecordClass]
  -[MSPPinnedPlacesReplica changesMergingCloudChanges:withReplica:lastSyncDate:]
  -[MSPPinnedPlacesReplica replicaByMergingWithReplica:mergeOptions:userVisibleEffectiveContentsChanged:]
  -[MSPPinnedPlacesReplica propertyListRepresentationDecoratingRecordsWithBlock:]
  -[MSPPinnedPlacesReplica propertyListDataRepresentation]
  -[MSPPinnedPlacesReplica mergeOptionsWithLastSyncDate:]


MSPPinnedPlacesReplicaRecord : NSObject /usr/lib/libSystem.B.dylib <MSPOrderedReplicaRecord>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *contents
 @property  MSPVectorTimestamp *contentsTimestamp
 @property  MSPPosition *position
 @property  MSPVectorTimestamp *positionTimestamp

  // class methods
  +[MSPPinnedPlacesReplicaRecord recordsByApplyingEdits:toArbitraryRecords:]
  +[MSPPinnedPlacesReplicaRecord recordWithContentsOfRecord:]

  // instance methods
  -[MSPPinnedPlacesReplicaRecord init]
  -[MSPPinnedPlacesReplicaRecord .cxx_destruct]
  -[MSPPinnedPlacesReplicaRecord contents]
  -[MSPPinnedPlacesReplicaRecord position]
  -[MSPPinnedPlacesReplicaRecord initWithContents:contentsTimestamp:position:positionTimestamp:]
  -[MSPPinnedPlacesReplicaRecord contentsTimestamp]
  -[MSPPinnedPlacesReplicaRecord positionTimestamp]
  -[MSPPinnedPlacesReplicaRecord derivedRecordWithContents:contentsTimestamp:]
  -[MSPPinnedPlacesReplicaRecord derivedRecordWithPosition:positionTimestamp:]


MSPPinnedPlace : MSPPinnedPlaceStorage <MSPMutableObject, MSPImmutableObject>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSPPinnedPlace mutableObjectClass]
  +[MSPPinnedPlace mutableObjectProtocol]
  +[MSPPinnedPlace immutableObjectClass]
  +[MSPPinnedPlace immutableObjectProtocol]
  +[MSPPinnedPlace uuidForIdentifier:]

  // instance methods
  -[MSPPinnedPlace init]
  -[MSPPinnedPlace copyWithZone:]
  -[MSPPinnedPlace mutableCopyWithZone:]
  -[MSPPinnedPlace initWithData:]
  -[MSPPinnedPlace .cxx_destruct]
  -[MSPPinnedPlace storageIdentifier]
  -[MSPPinnedPlace initWithData:storageIdentifier:]
  -[MSPPinnedPlace transferToImmutableIfValidWithError:]
  -[MSPPinnedPlace copyIfValidWithError:]
  -[MSPPinnedPlace initWithStorageIdentifier:]


MSPVectorTimestamp : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSData *serializedRepresentation
 @property  NSDictionary *timestampValues

  // class methods
  +[MSPVectorTimestamp supportsSecureCoding]
  +[MSPVectorTimestamp timestampAfterTimestamps:increasingClientIdentifier:]

  // instance methods
  -[MSPVectorTimestamp init]
  -[MSPVectorTimestamp isEqual:]
  -[MSPVectorTimestamp copyWithZone:]
  -[MSPVectorTimestamp encodeWithCoder:]
  -[MSPVectorTimestamp initWithCoder:]
  -[MSPVectorTimestamp .cxx_destruct]
  -[MSPVectorTimestamp serializedRepresentation]
  -[MSPVectorTimestamp initWithSerializedRepresentation:]
  -[MSPVectorTimestamp _timestampValues]
  -[MSPVectorTimestamp compare:comparisonResult:]
  -[MSPVectorTimestamp compare:isComparable:]
  -[MSPVectorTimestamp timestampIncreasingClientIdentifier:]
  -[MSPVectorTimestamp initInitialTimestampWithClientIdentifier:]
  -[MSPVectorTimestamp _initWithTimestampValues:]
  -[MSPVectorTimestamp _compare:comparisonResult:isOppositeCheck:]


MSPBookmarkStorage : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasPosition
 @property  double position
 @property  BOOL hasTimestamp
 @property  double timestamp
 @property  BOOL hasPlaceBookmark
 @property  MSPPlaceBookmark *placeBookmark
 @property  BOOL hasRouteBookmark
 @property  MSPRouteBookmark *routeBookmark
 @property  BOOL hasRegionBookmark
 @property  MSPRegionBookmark *regionBookmark
 @property  BOOL hasTransitLineBookmark
 @property  MSPTransitLineBookmark *transitLineBookmark
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[MSPBookmarkStorage isEqual:]
  -[MSPBookmarkStorage copyWithZone:]
  -[MSPBookmarkStorage type]
  -[MSPBookmarkStorage setType:]
  -[MSPBookmarkStorage .cxx_destruct]
  -[MSPBookmarkStorage identifier]
  -[MSPBookmarkStorage setIdentifier:]
  -[MSPBookmarkStorage dictionaryRepresentation]
  -[MSPBookmarkStorage timestamp]
  -[MSPBookmarkStorage position]
  -[MSPBookmarkStorage hasTimestamp]
  -[MSPBookmarkStorage setTimestamp:]
  -[MSPBookmarkStorage writeTo:]
  -[MSPBookmarkStorage mergeFrom:]
  -[MSPBookmarkStorage readFrom:]
  -[MSPBookmarkStorage copyTo:]
  -[MSPBookmarkStorage typeAsString:]
  -[MSPBookmarkStorage StringAsType:]
  -[MSPBookmarkStorage setPosition:]
  -[MSPBookmarkStorage setHasType:]
  -[MSPBookmarkStorage hasType]
  -[MSPBookmarkStorage setHasTimestamp:]
  -[MSPBookmarkStorage unknownFields]
  -[MSPBookmarkStorage hasIdentifier]
  -[MSPBookmarkStorage hasPosition]
  -[MSPBookmarkStorage setHasPosition:]
  -[MSPBookmarkStorage hasPlaceBookmark]
  -[MSPBookmarkStorage setPlaceBookmark:]
  -[MSPBookmarkStorage placeBookmark]
  -[MSPBookmarkStorage setRouteBookmark:]
  -[MSPBookmarkStorage routeBookmark]
  -[MSPBookmarkStorage setRegionBookmark:]
  -[MSPBookmarkStorage regionBookmark]
  -[MSPBookmarkStorage setTransitLineBookmark:]
  -[MSPBookmarkStorage transitLineBookmark]
  -[MSPBookmarkStorage hasRouteBookmark]
  -[MSPBookmarkStorage hasRegionBookmark]
  -[MSPBookmarkStorage hasTransitLineBookmark]


MSPGroupSessionStorage : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasGroupIdentifier
 @property  NSString *groupIdentifier
 @property  BOOL hasOriginatorIdentifier
 @property  NSString *originatorIdentifier
 @property  BOOL hasState
 @property  GEOSharedNavState *state
 @property  BOOL hasLastUpdateTimestamp
 @property  double lastUpdateTimestamp
 @property  BOOL hasFromID
 @property  NSString *fromID
 @property  NSMutableArray *minimalStrategyIdentifiers
 @property  NSMutableArray *liveStrategyIdentifiers
 @property  NSMutableArray *messageStrategyIdentifiers
 @property  BOOL hasReceivingHandle
 @property  NSString *receivingHandle
 @property  BOOL hasReceivingAccountIdentifier
 @property  NSString *receivingAccountIdentifier
 @property  PBUnknownFields *unknownFields

  // class methods
  +[MSPGroupSessionStorage groupStorageWithIdentifier:originator:receivingHandle:receivingAccountIdentifier:]
  +[MSPGroupSessionStorage minimalStrategyIdentifierType]
  +[MSPGroupSessionStorage liveStrategyIdentifierType]
  +[MSPGroupSessionStorage messageStrategyIdentifierType]

  // instance methods
  -[MSPGroupSessionStorage isEqual:]
  -[MSPGroupSessionStorage copyWithZone:]
  -[MSPGroupSessionStorage .cxx_destruct]
  -[MSPGroupSessionStorage dictionaryRepresentation]
  -[MSPGroupSessionStorage state]
  -[MSPGroupSessionStorage groupIdentifier]
  -[MSPGroupSessionStorage setGroupIdentifier:]
  -[MSPGroupSessionStorage setState:]
  -[MSPGroupSessionStorage writeTo:]
  -[MSPGroupSessionStorage mergeFrom:]
  -[MSPGroupSessionStorage readFrom:]
  -[MSPGroupSessionStorage copyTo:]
  -[MSPGroupSessionStorage unknownFields]
  -[MSPGroupSessionStorage hasGroupIdentifier]
  -[MSPGroupSessionStorage setFromID:]
  -[MSPGroupSessionStorage fromID]
  -[MSPGroupSessionStorage hasState]
  -[MSPGroupSessionStorage receivingHandle]
  -[MSPGroupSessionStorage receivingAccountIdentifier]
  -[MSPGroupSessionStorage updateWithState:]
  -[MSPGroupSessionStorage setOriginatorIdentifier:]
  -[MSPGroupSessionStorage setReceivingHandle:]
  -[MSPGroupSessionStorage setReceivingAccountIdentifier:]
  -[MSPGroupSessionStorage setLastUpdateTimestamp:]
  -[MSPGroupSessionStorage setMinimalStrategyIdentifiers:]
  -[MSPGroupSessionStorage setLiveStrategyIdentifiers:]
  -[MSPGroupSessionStorage setMessageStrategyIdentifiers:]
  -[MSPGroupSessionStorage minimalStrategyIdentifiersCount]
  -[MSPGroupSessionStorage minimalStrategyIdentifiers]
  -[MSPGroupSessionStorage liveStrategyIdentifiersCount]
  -[MSPGroupSessionStorage liveStrategyIdentifiers]
  -[MSPGroupSessionStorage messageStrategyIdentifiersCount]
  -[MSPGroupSessionStorage messageStrategyIdentifiers]
  -[MSPGroupSessionStorage addMinimalStrategyIdentifier:]
  -[MSPGroupSessionStorage addLiveStrategyIdentifier:]
  -[MSPGroupSessionStorage addMessageStrategyIdentifier:]
  -[MSPGroupSessionStorage clearMinimalStrategyIdentifiers]
  -[MSPGroupSessionStorage minimalStrategyIdentifierAtIndex:]
  -[MSPGroupSessionStorage clearLiveStrategyIdentifiers]
  -[MSPGroupSessionStorage liveStrategyIdentifierAtIndex:]
  -[MSPGroupSessionStorage clearMessageStrategyIdentifiers]
  -[MSPGroupSessionStorage messageStrategyIdentifierAtIndex:]
  -[MSPGroupSessionStorage hasOriginatorIdentifier]
  -[MSPGroupSessionStorage setHasLastUpdateTimestamp:]
  -[MSPGroupSessionStorage hasLastUpdateTimestamp]
  -[MSPGroupSessionStorage hasFromID]
  -[MSPGroupSessionStorage hasReceivingHandle]
  -[MSPGroupSessionStorage hasReceivingAccountIdentifier]
  -[MSPGroupSessionStorage originatorIdentifier]
  -[MSPGroupSessionStorage lastUpdateTimestamp]


MSPSharedTripRelay : NSObject /usr/lib/libSystem.B.dylib <IDSServiceDelegate>
 @property  MSPSharedTripStorageController *storageController
 @property  NSString *sharingName
 @property  NSString *sharingHandle
 @property  <MSPSharedTripRelayDelegate> *delegate
 @property  <MSPSharedTripAvailabiltyDelegate> *availabilityDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPSharedTripRelay init]
  -[MSPSharedTripRelay dealloc]
  -[MSPSharedTripRelay delegate]
  -[MSPSharedTripRelay setDelegate:]
  -[MSPSharedTripRelay .cxx_destruct]
  -[MSPSharedTripRelay service:account:incomingMessage:fromID:context:]
  -[MSPSharedTripRelay service:account:incomingData:fromID:context:]
  -[MSPSharedTripRelay service:account:incomingResourceAtURL:metadata:fromID:context:]
  -[MSPSharedTripRelay service:activeAccountsChanged:]
  -[MSPSharedTripRelay service:account:identifier:didSendWithSuccess:error:context:]
  -[MSPSharedTripRelay service:account:identifier:fromID:hasBeenDeliveredWithContext:]
  -[MSPSharedTripRelay service:account:receivedGroupSessionParticipantUpdate:]
  -[MSPSharedTripRelay setAvailabilityDelegate:]
  -[MSPSharedTripRelay sharingName]
  -[MSPSharedTripRelay sharingHandle]
  -[MSPSharedTripRelay stopSharing]
  -[MSPSharedTripRelay _hasValidIDSAccount]
  -[MSPSharedTripRelay storageController]
  -[MSPSharedTripRelay groupSessionForIdentifier:]
  -[MSPSharedTripRelay startSharingGroupSessionWithTripIdentifer:]
  -[MSPSharedTripRelay removeSharingWith:]
  -[MSPSharedTripRelay _startService]
  -[MSPSharedTripRelay _fetchDisplayName]
  -[MSPSharedTripRelay _removeFinishedSession:]
  -[MSPSharedTripRelay _handleCommand:fromID:]
  -[MSPSharedTripRelay _handleIncomingMessage:info:fromID:receivingHandle:receivingAccountIdentifier:]
  -[MSPSharedTripRelay _handleChunk:fromID:receivingHandle:receivingAccountIdentifier:]
  -[MSPSharedTripRelay availabilityDelegate]
  -[MSPSharedTripRelay setStorageController:]


MSPContainerPersister : NSObject /usr/lib/libSystem.B.dylib
 @property  <MSPContainerPersisterDelegate> *delegate
 @property  long long duplicatesPolicy

  // instance methods
  -[MSPContainerPersister delegate]
  -[MSPContainerPersister setDelegate:]
  -[MSPContainerPersister .cxx_destruct]
  -[MSPContainerPersister eraseWithCompletion:]
  -[MSPContainerPersister fetchStateSnapshotWithCompletion:]
  -[MSPContainerPersister commitEditWithNewContents:edits:appliedToOldContents:completion:]
  -[MSPContainerPersister commitByMergingWithStateSnapshot:mergeOptions:completion:]
  -[MSPContainerPersister duplicatesPolicy]


MSPFileContainerPersister : MSPContainerPersister
 @property  NSURL *persistenceFileURL

  // class methods
  +[MSPFileContainerPersister initialize]

  // instance methods
  -[MSPFileContainerPersister init]
  -[MSPFileContainerPersister .cxx_destruct]
  -[MSPFileContainerPersister eraseWithCompletion:]
  -[MSPFileContainerPersister newStateSnapshot]
  -[MSPFileContainerPersister getSnapshot:data:forNewContents:edits:appliedToOldContents:error:]
  -[MSPFileContainerPersister getSnapshot:data:mergingCurrentState:withState:mergeOptions:error:]
  -[MSPFileContainerPersister stateSnapshotFromData:]
  -[MSPFileContainerPersister initWithPersistenceFileAtURL:]
  -[MSPFileContainerPersister fetchStateSnapshotWithCompletion:]
  -[MSPFileContainerPersister commitEditWithNewContents:edits:appliedToOldContents:completion:]
  -[MSPFileContainerPersister commitByMergingWithStateSnapshot:mergeOptions:completion:]
  -[MSPFileContainerPersister commitByCreatingStateSnapshotAndDataWithCreationHandler:error:]
  -[MSPFileContainerPersister persistenceFileURL]


MSPContainerArrayStateSnapshot : NSObject /usr/lib/libSystem.B.dylib <MSPContainerStateSnapshot>
 @property  NSUUID *clientIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *contents

  // instance methods
  -[MSPContainerArrayStateSnapshot init]
  -[MSPContainerArrayStateSnapshot .cxx_destruct]
  -[MSPContainerArrayStateSnapshot contents]
  -[MSPContainerArrayStateSnapshot setClientIdentifier:]
  -[MSPContainerArrayStateSnapshot clientIdentifier]
  -[MSPContainerArrayStateSnapshot initWithContents:]
  -[MSPContainerArrayStateSnapshot initWithContents:clientIdentifier:]


NSUUID(MSPAdditions)
	// class methods
	+[NSUUID(MSPAdditions) _maps_zeroUUID]
	+[NSUUID(MSPAdditions) _maps_UUIDWithUUIDString:]

	// instance methods
	-[NSUUID(MSPAdditions) _maps_compare:]

NSFileHandle(MSPAdditions)
	// instance methods
	-[NSFileHandle(MSPAdditions) _maps_writeData:error:]

GEOSharedNavETAInfo(MSPExtras)
	// instance methods
	-[GEOSharedNavETAInfo(MSPExtras) mspDescription]

GEOSharedNavState(MSPExtras)
	// instance methods
	-[GEOSharedNavState(MSPExtras) merge:]
	-[GEOSharedNavState(MSPExtras) destinationName]
	-[GEOSharedNavState(MSPExtras) composedRoute]
	-[GEOSharedNavState(MSPExtras) senderName]
	-[GEOSharedNavState(MSPExtras) mspDescription]
	-[GEOSharedNavState(MSPExtras) stripArrivedOrClosedTrip]
	-[GEOSharedNavState(MSPExtras) truncatePointDataForPrivacy]
	-[GEOSharedNavState(MSPExtras) composedRouteTraffic]
	-[GEOSharedNavState(MSPExtras) equalityTest]

NSData(MSPReplica)
	// instance methods
	-[NSData(MSPReplica) _maps_compareLexicographicallyToData:]

GEOStorageRouteRequestStorage(MSPRouteInformationSource)
	// instance methods
	-[GEOStorageRouteRequestStorage(MSPRouteInformationSource) ifRidesharingInformationSource]
	-[GEOStorageRouteRequestStorage(MSPRouteInformationSource) ifGEOStorageRouteRequestStorage]

IDSService(MSPExtras)
	// class methods
	+[IDSService(MSPExtras) _msp_IDSIdentifierFor:]
	+[IDSService(MSPExtras) _msp_IDSIdentifiersFor:]

	// instance methods
	-[IDSService(MSPExtras) _msp_currentAccount]
	-[IDSService(MSPExtras) _msp_removeSelfFrom:]
	-[IDSService(MSPExtras) _msp_accountFromIdentifier:]
	-[IDSService(MSPExtras) _msp_hasValidIDSAccount]
	-[IDSService(MSPExtras) _msp_currentAccountIdentifier]

NSArray(MSPContainerAdditions)
	// instance methods
	-[NSArray(MSPContainerAdditions) _maps_indexesOfObjectsCorrespondingToIdentifiableObjects:]
	-[NSArray(MSPContainerAdditions) _maps_indexOfObjectCorrespondingToIdentifiableObject:]
	-[NSArray(MSPContainerAdditions) _maps_arrayWithObjectsConformingToProtocols:]

NSError(MSPAdditions)
	// class methods
	+[NSError(MSPAdditions) MSPSyncErrorWithCode:description:]

	// instance methods
	-[NSError(MSPAdditions) _maps_isCloudKitErrorWithCode:partialErrorsPolicy:]
	-[NSError(MSPAdditions) _maps_isFoundationWriteError]
	-[NSError(MSPAdditions) _maps_isFileNotFoundError]
	-[NSError(MSPAdditions) MSPJournalDescription]
	-[NSError(MSPAdditions) isMSPSyncErrorWithCode:]
	-[NSError(MSPAdditions) _maps_isCloudKitErrorContainingNotFoundMarkersOnly]
	-[NSError(MSPAdditions) _maps_isCloudKitTokenExpirationError]

01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerID 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerOptions 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesConfiguration 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesOperation 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordZonesOperation 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifySubscriptionsOperation 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotification 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotificationInfo 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationConfiguration 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationGroup 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneNotification 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneSubscription 
01 00 0800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKServerChangeToken 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOAnalyticsPipelinePortal 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOAnnouncement 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOComposedRoute 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOComposedRouteTraffic 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOComposedWaypoint 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOLatLng 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOLocation 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOLocationShifter 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOMapItemIdentifier 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOMapItemStorage 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOMapRegion 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEONetworkObserver 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOObserverHashTable 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOPlatform 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEORoute 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEORouteInitializerData 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOSharedNavETAInfo 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOSharedNavRouteInfo 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOSharedNavSenderInfo 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOSharedNavState 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOStep 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOStorageRouteRequestStorage 
01 00 0300 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOUserPreferences 
01 00 0600 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 0500 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0700 /System/Library/PrivateFrameworks/Navigation.framework/Navigation: MNNavigationService 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponentsFormatter 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUbiquitousKeyValueStore 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0200 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0200 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBDataWriter 
01 00 0200 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBUnknownFields 
