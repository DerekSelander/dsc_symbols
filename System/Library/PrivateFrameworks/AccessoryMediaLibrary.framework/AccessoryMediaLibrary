|| __DATA.__objc_data _OBJC_CLASS_$_ACCMediaLibraryAccessory
|| __DATA.__objc_data _OBJC_CLASS_$_ACCMediaLibraryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_ACCMediaLibraryProvider
|| __DATA.__objc_data _OBJC_CLASS_$_ACCMediaLibraryUpdateItem
|| __DATA.__objc_data _OBJC_CLASS_$_ACCMediaLibraryUpdateLibraryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_ACCMediaLibraryUpdatePlaylist
|| __DATA.__objc_data _OBJC_CLASS_$_ACCMediaLibraryUpdatePlaylistContent
|| __DATA.__objc_data _OBJC_CLASS_$_ACCMediaLibraryUpdatePlaylistContentItem
|| __DATA.__objc_data _OBJC_CLASS_$__ACCMediaLibraryAccessoryPendingUpdateItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCMediaLibraryAccessory
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCMediaLibraryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCMediaLibraryProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCMediaLibraryUpdateItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCMediaLibraryUpdateLibraryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCMediaLibraryUpdatePlaylist
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCMediaLibraryUpdatePlaylistContent
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCMediaLibraryUpdatePlaylistContentItem
|| __DATA.__objc_data _OBJC_METACLASS_$__ACCMediaLibraryAccessoryPendingUpdateItem
|| __DATA_CONST.__const _ACCMediaLibraryFullUpdateKey
|| __DATA_CONST.__const _ACCMediaLibraryNameKey
|| __DATA_CONST.__const _ACCMediaLibraryPlaylistItemAlbumArtist
|| __DATA_CONST.__const _ACCMediaLibraryPlaylistItemAlbumTitle
|| __DATA_CONST.__const _ACCMediaLibraryPlaylistItemArtist
|| __DATA_CONST.__const _ACCMediaLibraryPlaylistItemComposer
|| __DATA_CONST.__const _ACCMediaLibraryPlaylistItemGenre
|| __DATA_CONST.__const _ACCMediaLibraryPlaylistItemPersistentID
|| __DATA_CONST.__const _ACCMediaLibraryPlaylistItemTitle
|| __DATA_CONST.__const _ACCMediaLibraryTypeKey
|| __DATA_CONST.__const _ACCMediaLibraryUIDKey
|| __DATA_CONST.__const _ACCMediaLibraryUpdateEntryKey
|| __DATA_CONST.__const _ACCMediaLibraryUpdateHidingRemoteItems
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemAlbumArtist
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemAlbumArtistPersistentID
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemAlbumDiscCount
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemAlbumDiscNumber
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemAlbumPersistentID
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemAlbumTitle
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemAlbumTrackCount
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemAlbumTrackNumber
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemArtist
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemArtistPersistentID
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemChapterCount
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemComposer
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemComposerPersistentID
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemDeletePersistentID
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemDictionary
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemGenre
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemGenrePersistentID
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemIsLocal
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemIsPartOfCompilation
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemPersistentID
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemPlaybackDurationInMilliseconds
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemRating
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemTitle
|| __DATA_CONST.__const _ACCMediaLibraryUpdateItemType
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlayAllSongsCapable
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistContentStyle
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistDeletePersistentID
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistDictionary
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistIsFolder
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistIsGeniusMix
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistIsRadioStation
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistIsSmartPlaylist
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistItemDictionary
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistItemList
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistName
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistParentPersistentID
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistPersistentID
|| __DATA_CONST.__const _ACCMediaLibraryUpdatePlaylistRadioStationOrdering
|| __DATA_CONST.__const _ACCMediaLibraryUpdateProgressKey
|| __DATA_CONST.__const _ACCMediaLibraryUpdateRevisionKey
|| __DATA_CONST.__const _ACCMediaLibraryUpdateTypeKey
|| __TEXT.__const _AccessoryMediaLibraryVersionNumber
|| __TEXT.__const _AccessoryMediaLibraryVersionString
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: ___CFConstantStringClassReference
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
ACCMediaLibraryUpdatePlaylist : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *mediaLibraryUID
 @property  NSString *revision
 @property  unsigned long persistentID
 @property  unsigned long validMask
 @property  NSString *name
 @property  unsigned long parentPersistentID
 @property  BOOL folder
 @property  BOOL geniusMix
 @property  BOOL radioStation
 @property  BOOL smartPlaylist
 @property  unsigned short radioStationOrdering
 @property  int contentStyle
 @property  ACCMediaLibraryUpdatePlaylistContent *content

  // instance methods
  -[ACCMediaLibraryUpdatePlaylist name]
  -[ACCMediaLibraryUpdatePlaylist .cxx_destruct]
  -[ACCMediaLibraryUpdatePlaylist setName:]
  -[ACCMediaLibraryUpdatePlaylist setRevision:]
  -[ACCMediaLibraryUpdatePlaylist persistentID]
  -[ACCMediaLibraryUpdatePlaylist setPersistentID:]
  -[ACCMediaLibraryUpdatePlaylist revision]
  -[ACCMediaLibraryUpdatePlaylist content]
  -[ACCMediaLibraryUpdatePlaylist setContent:]
  -[ACCMediaLibraryUpdatePlaylist folder]
  -[ACCMediaLibraryUpdatePlaylist setFolder:]
  -[ACCMediaLibraryUpdatePlaylist setRadioStation:]
  -[ACCMediaLibraryUpdatePlaylist radioStation]
  -[ACCMediaLibraryUpdatePlaylist geniusMix]
  -[ACCMediaLibraryUpdatePlaylist contentStyle]
  -[ACCMediaLibraryUpdatePlaylist setContentStyle:]
  -[ACCMediaLibraryUpdatePlaylist copyDict]
  -[ACCMediaLibraryUpdatePlaylist initWithMediaLibrary:persistentID:revision:]
  -[ACCMediaLibraryUpdatePlaylist initWithMediaLibrary:dict:]
  -[ACCMediaLibraryUpdatePlaylist fillStruct:]
  -[ACCMediaLibraryUpdatePlaylist setMediaLibraryUID:]
  -[ACCMediaLibraryUpdatePlaylist setParentPersistentID:]
  -[ACCMediaLibraryUpdatePlaylist setGeniusMix:]
  -[ACCMediaLibraryUpdatePlaylist setSmartPlaylist:]
  -[ACCMediaLibraryUpdatePlaylist setRadioStationOrdering:]
  -[ACCMediaLibraryUpdatePlaylist mediaLibraryUID]
  -[ACCMediaLibraryUpdatePlaylist validMask]
  -[ACCMediaLibraryUpdatePlaylist parentPersistentID]
  -[ACCMediaLibraryUpdatePlaylist smartPlaylist]
  -[ACCMediaLibraryUpdatePlaylist radioStationOrdering]


ACCMediaLibraryUpdateItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *mediaLibraryUID
 @property  NSString *revision
 @property  unsigned long persistentID
 @property  unsigned long validMask
 @property  NSString *title
 @property  int type
 @property  int rating
 @property  unsigned int duration
 @property  unsigned long albumPersistentID
 @property  NSString *albumTitle
 @property  unsigned short albumTrackNumber
 @property  unsigned short albumTrackCount
 @property  unsigned short albumDiscNumber
 @property  unsigned short albumDiscCount
 @property  unsigned long artistPersistentID
 @property  NSString *artist
 @property  unsigned long albumArtistPersistentID
 @property  NSString *albumArtist
 @property  unsigned long genrePersistentID
 @property  NSString *genre
 @property  unsigned long composerPersistentID
 @property  NSString *composer
 @property  BOOL partOfCompilation
 @property  BOOL local
 @property  unsigned short chapterCount

  // instance methods
  -[ACCMediaLibraryUpdateItem type]
  -[ACCMediaLibraryUpdateItem setType:]
  -[ACCMediaLibraryUpdateItem .cxx_destruct]
  -[ACCMediaLibraryUpdateItem title]
  -[ACCMediaLibraryUpdateItem setTitle:]
  -[ACCMediaLibraryUpdateItem duration]
  -[ACCMediaLibraryUpdateItem genre]
  -[ACCMediaLibraryUpdateItem setRevision:]
  -[ACCMediaLibraryUpdateItem artist]
  -[ACCMediaLibraryUpdateItem persistentID]
  -[ACCMediaLibraryUpdateItem setPersistentID:]
  -[ACCMediaLibraryUpdateItem revision]
  -[ACCMediaLibraryUpdateItem setDuration:]
  -[ACCMediaLibraryUpdateItem composer]
  -[ACCMediaLibraryUpdateItem setComposer:]
  -[ACCMediaLibraryUpdateItem local]
  -[ACCMediaLibraryUpdateItem setLocal:]
  -[ACCMediaLibraryUpdateItem rating]
  -[ACCMediaLibraryUpdateItem setRating:]
  -[ACCMediaLibraryUpdateItem setArtist:]
  -[ACCMediaLibraryUpdateItem albumArtist]
  -[ACCMediaLibraryUpdateItem setAlbumArtist:]
  -[ACCMediaLibraryUpdateItem albumTrackNumber]
  -[ACCMediaLibraryUpdateItem albumTrackCount]
  -[ACCMediaLibraryUpdateItem albumPersistentID]
  -[ACCMediaLibraryUpdateItem albumArtistPersistentID]
  -[ACCMediaLibraryUpdateItem artistPersistentID]
  -[ACCMediaLibraryUpdateItem genrePersistentID]
  -[ACCMediaLibraryUpdateItem composerPersistentID]
  -[ACCMediaLibraryUpdateItem albumTitle]
  -[ACCMediaLibraryUpdateItem setGenre:]
  -[ACCMediaLibraryUpdateItem setAlbumPersistentID:]
  -[ACCMediaLibraryUpdateItem setAlbumTitle:]
  -[ACCMediaLibraryUpdateItem setChapterCount:]
  -[ACCMediaLibraryUpdateItem chapterCount]
  -[ACCMediaLibraryUpdateItem setAlbumDiscCount:]
  -[ACCMediaLibraryUpdateItem setAlbumTrackCount:]
  -[ACCMediaLibraryUpdateItem albumDiscCount]
  -[ACCMediaLibraryUpdateItem copyDict]
  -[ACCMediaLibraryUpdateItem initWithMediaLibrary:persistentID:revision:]
  -[ACCMediaLibraryUpdateItem initWithMediaLibrary:dict:]
  -[ACCMediaLibraryUpdateItem fillStruct:]
  -[ACCMediaLibraryUpdateItem setMediaLibraryUID:]
  -[ACCMediaLibraryUpdateItem mediaLibraryUID]
  -[ACCMediaLibraryUpdateItem validMask]
  -[ACCMediaLibraryUpdateItem setAlbumTrackNumber:]
  -[ACCMediaLibraryUpdateItem setAlbumDiscNumber:]
  -[ACCMediaLibraryUpdateItem setArtistPersistentID:]
  -[ACCMediaLibraryUpdateItem setAlbumArtistPersistentID:]
  -[ACCMediaLibraryUpdateItem setGenrePersistentID:]
  -[ACCMediaLibraryUpdateItem setComposerPersistentID:]
  -[ACCMediaLibraryUpdateItem setPartOfCompilation:]
  -[ACCMediaLibraryUpdateItem albumDiscNumber]
  -[ACCMediaLibraryUpdateItem partOfCompilation]


ACCMediaLibraryUpdatePlaylistContentItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *mediaLibraryUID
 @property  unsigned long playlistPersistentID
 @property  unsigned long validMask
 @property  unsigned long persistentID
 @property  NSString *title
 @property  NSString *albumTitle
 @property  NSString *artist
 @property  NSString *albumArtist
 @property  NSString *genre
 @property  NSString *composer

  // instance methods
  -[ACCMediaLibraryUpdatePlaylistContentItem .cxx_destruct]
  -[ACCMediaLibraryUpdatePlaylistContentItem title]
  -[ACCMediaLibraryUpdatePlaylistContentItem setTitle:]
  -[ACCMediaLibraryUpdatePlaylistContentItem genre]
  -[ACCMediaLibraryUpdatePlaylistContentItem artist]
  -[ACCMediaLibraryUpdatePlaylistContentItem persistentID]
  -[ACCMediaLibraryUpdatePlaylistContentItem setPersistentID:]
  -[ACCMediaLibraryUpdatePlaylistContentItem composer]
  -[ACCMediaLibraryUpdatePlaylistContentItem setComposer:]
  -[ACCMediaLibraryUpdatePlaylistContentItem setArtist:]
  -[ACCMediaLibraryUpdatePlaylistContentItem albumArtist]
  -[ACCMediaLibraryUpdatePlaylistContentItem setAlbumArtist:]
  -[ACCMediaLibraryUpdatePlaylistContentItem albumTitle]
  -[ACCMediaLibraryUpdatePlaylistContentItem setGenre:]
  -[ACCMediaLibraryUpdatePlaylistContentItem setAlbumTitle:]
  -[ACCMediaLibraryUpdatePlaylistContentItem fillStruct:]
  -[ACCMediaLibraryUpdatePlaylistContentItem setMediaLibraryUID:]
  -[ACCMediaLibraryUpdatePlaylistContentItem mediaLibraryUID]
  -[ACCMediaLibraryUpdatePlaylistContentItem validMask]
  -[ACCMediaLibraryUpdatePlaylistContentItem copyNSRepresentation:]
  -[ACCMediaLibraryUpdatePlaylistContentItem initWithMediaLibrary:persistentID:playlistPersistentID:]
  -[ACCMediaLibraryUpdatePlaylistContentItem initWithMediaLibrary:playlistPersistentID:dict:]
  -[ACCMediaLibraryUpdatePlaylistContentItem setPlaylistPersistentID:]
  -[ACCMediaLibraryUpdatePlaylistContentItem playlistPersistentID]


ACCMediaLibraryUpdateLibraryInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *mediaLibraryUID
 @property  NSString *name
 @property  int type

  // instance methods
  -[ACCMediaLibraryUpdateLibraryInfo name]
  -[ACCMediaLibraryUpdateLibraryInfo type]
  -[ACCMediaLibraryUpdateLibraryInfo setType:]
  -[ACCMediaLibraryUpdateLibraryInfo supportsSecureCoding]
  -[ACCMediaLibraryUpdateLibraryInfo .cxx_destruct]
  -[ACCMediaLibraryUpdateLibraryInfo setName:]
  -[ACCMediaLibraryUpdateLibraryInfo initWithDict:]
  -[ACCMediaLibraryUpdateLibraryInfo copyDict]
  -[ACCMediaLibraryUpdateLibraryInfo initWithMediaLibrary:dict:]
  -[ACCMediaLibraryUpdateLibraryInfo fillStruct:]
  -[ACCMediaLibraryUpdateLibraryInfo setMediaLibraryUID:]
  -[ACCMediaLibraryUpdateLibraryInfo mediaLibraryUID]
  -[ACCMediaLibraryUpdateLibraryInfo initWithMediaLibrary:name:type:]


ACCMediaLibraryInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *libraryUID
 @property  ACCMediaLibraryUpdateLibraryInfo *info

  // instance methods
  -[ACCMediaLibraryInfo .cxx_destruct]
  -[ACCMediaLibraryInfo info]
  -[ACCMediaLibraryInfo initWithInfo:]
  -[ACCMediaLibraryInfo libraryUID]
  -[ACCMediaLibraryInfo getState:]
  -[ACCMediaLibraryInfo setState:value:]


_ACCMediaLibraryAccessoryPendingUpdateItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *libraryUID
 @property  NSString *revision
 @property  int type
 @property  id item

  // instance methods
  -[_ACCMediaLibraryAccessoryPendingUpdateItem dealloc]
  -[_ACCMediaLibraryAccessoryPendingUpdateItem isEqual:]
  -[_ACCMediaLibraryAccessoryPendingUpdateItem type]
  -[_ACCMediaLibraryAccessoryPendingUpdateItem .cxx_destruct]
  -[_ACCMediaLibraryAccessoryPendingUpdateItem item]
  -[_ACCMediaLibraryAccessoryPendingUpdateItem revision]
  -[_ACCMediaLibraryAccessoryPendingUpdateItem libraryUID]
  -[_ACCMediaLibraryAccessoryPendingUpdateItem initWithLibrary:revision:type:item:]


ACCMediaLibraryAccessory : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *libraries
 @property  NSMutableDictionary *pendingUpdates
 @property  NSMutableDictionary *waitingConfirm
 @property  NSMutableDictionary *pendingPlaylistContentUpdates
 @property  NSMutableDictionary *confirmedRevisionList
 @property  NSObject<OS_dispatch_queue> *listQueue
 @property  NSString *accessoryUID
 @property  ACCMediaLibraryProvider *provider
 @property  unsigned int windowPerLibrary

  // instance methods
  -[ACCMediaLibraryAccessory dealloc]
  -[ACCMediaLibraryAccessory .cxx_destruct]
  -[ACCMediaLibraryAccessory provider]
  -[ACCMediaLibraryAccessory setPendingUpdates:]
  -[ACCMediaLibraryAccessory pendingUpdates]
  -[ACCMediaLibraryAccessory accessoryUID]
  -[ACCMediaLibraryAccessory listQueue]
  -[ACCMediaLibraryAccessory _pendingUpdatesForLibrary:createIfNotExist:]
  -[ACCMediaLibraryAccessory _pendingAndWaitingConfirmUpdatesCountForLibrary:]
  -[ACCMediaLibraryAccessory _pendingPlaylistContentUpdatesForLibrary:createIfNotExist:]
  -[ACCMediaLibraryAccessory _pendingPlaylistContentUpdatesCountForLibrary:]
  -[ACCMediaLibraryAccessory _pendingUpdatesAndWaitingConfirmFullForLibrary:]
  -[ACCMediaLibraryAccessory _waitingUpdatesForLibrary:createIfNotExist:]
  -[ACCMediaLibraryAccessory _confirmedRevisionListForLibrary:createIfNotExist:]
  -[ACCMediaLibraryAccessory _addToWaitlistForLibrary:list:]
  -[ACCMediaLibraryAccessory _pendingUpdatesRemoveLibraryIfEmpty:]
  -[ACCMediaLibraryAccessory _pendingPlaylistContentUpdatesRemoveLibraryIfEmpty:]
  -[ACCMediaLibraryAccessory _confirmedRevisionListRemoveLibraryIfEmpty:]
  -[ACCMediaLibraryAccessory pendingUpdatesAndWaitingConfirmFullForLibrary:]
  -[ACCMediaLibraryAccessory pendingAndWaitingConfirmUpdatesCountForLibrary:]
  -[ACCMediaLibraryAccessory _waitingUpdatesRemoveLibraryIfEmpty:]
  -[ACCMediaLibraryAccessory _addConfirmedRevisionForLibrary:revisionsToAdd:]
  -[ACCMediaLibraryAccessory pendingPlaylistContentUpdatesCountForLibrary:]
  -[ACCMediaLibraryAccessory initWithUID:windowPerLibrary:provider:]
  -[ACCMediaLibraryAccessory addLibraryInfo:]
  -[ACCMediaLibraryAccessory _addToWaitlistForLibrary:item:]
  -[ACCMediaLibraryAccessory _addConfirmedRevisionForLibrary:revision:]
  -[ACCMediaLibraryAccessory copyPendingNonContentUpdatesToSendForLibrary:]
  -[ACCMediaLibraryAccessory copyPendingPlaylistContentUpdatesToSendForLibrary:]
  -[ACCMediaLibraryAccessory addUpdate:library:]
  -[ACCMediaLibraryAccessory addPlaylistContentUpdate:library:]
  -[ACCMediaLibraryAccessory confirmUpdates:revision:count:]
  -[ACCMediaLibraryAccessory confirmPlaylistContentUpdates:revision:]
  -[ACCMediaLibraryAccessory clearAllUpdates]
  -[ACCMediaLibraryAccessory windowPerLibrary]
  -[ACCMediaLibraryAccessory setWindowPerLibrary:]
  -[ACCMediaLibraryAccessory libraries]
  -[ACCMediaLibraryAccessory waitingConfirm]
  -[ACCMediaLibraryAccessory setWaitingConfirm:]
  -[ACCMediaLibraryAccessory pendingPlaylistContentUpdates]
  -[ACCMediaLibraryAccessory setPendingPlaylistContentUpdates:]
  -[ACCMediaLibraryAccessory confirmedRevisionList]
  -[ACCMediaLibraryAccessory setConfirmedRevisionList:]


ACCMediaLibraryProvider : NSObject /usr/lib/libSystem.B.dylib
 @property  <ACCMediaLibraryProviderDelegateProtocol> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQ
 @property  NSXPCConnection *serverConnection
 @property  <ACCMediaLibraryXPCServerProtocol> *remoteObject
 @property  NSMutableDictionary *accessories
 @property  NSMutableDictionary *libraries
 @property  int lastUpdateType
 @property  NSObject<OS_dispatch_queue> *processingQueue
 @property  NSString *providerUID

  // instance methods
  -[ACCMediaLibraryProvider dealloc]
  -[ACCMediaLibraryProvider delegate]
  -[ACCMediaLibraryProvider setDelegate:]
  -[ACCMediaLibraryProvider .cxx_destruct]
  -[ACCMediaLibraryProvider remoteObject]
  -[ACCMediaLibraryProvider processingQueue]
  -[ACCMediaLibraryProvider initWithDelegate:queue:]
  -[ACCMediaLibraryProvider accessories]
  -[ACCMediaLibraryProvider setRemoteObject:]
  -[ACCMediaLibraryProvider setProcessingQueue:]
  -[ACCMediaLibraryProvider serverConnection]
  -[ACCMediaLibraryProvider setServerConnection:]
  -[ACCMediaLibraryProvider connectToServer]
  -[ACCMediaLibraryProvider setAccessories:]
  -[ACCMediaLibraryProvider providerUID]
  -[ACCMediaLibraryProvider setProviderUID:]
  -[ACCMediaLibraryProvider libraries]
  -[ACCMediaLibraryProvider notify:stateChange:enabled:]
  -[ACCMediaLibraryProvider update:revision:content:accessory:]
  -[ACCMediaLibraryProvider resetUpdate:accessory:]
  -[ACCMediaLibraryProvider accessoryMediaLibraryAttached:windowPerLibrary:]
  -[ACCMediaLibraryProvider accessoryMediaLibraryDetached:]
  -[ACCMediaLibraryProvider accessoryMediaLibraryUpdate:windowPerLibrary:]
  -[ACCMediaLibraryProvider startMediaLibraryUpdate:library:lastRevision:mediaItemProperties:playlistProperties:playlistContentStyle:playlistContentProperties:reqOptions:]
  -[ACCMediaLibraryProvider stopMediaLibraryUpdate:library:]
  -[ACCMediaLibraryProvider stopAllMediaLibraryUpdate:]
  -[ACCMediaLibraryProvider confirmUpdate:library:lastRevision:updateCount:]
  -[ACCMediaLibraryProvider confirmPlaylistContentUpdate:library:lastRevision:]
  -[ACCMediaLibraryProvider playCurrentSelection:library:]
  -[ACCMediaLibraryProvider playItems:library:itemList:startIndex:]
  -[ACCMediaLibraryProvider playCollection:library:collection:type:startItem:]
  -[ACCMediaLibraryProvider playCollection:library:collection:type:startIndex:]
  -[ACCMediaLibraryProvider playAllSongs:library:startItem:]
  -[ACCMediaLibraryProvider accessoryMediaLibraryAllDetached]
  -[ACCMediaLibraryProvider _notifyRemoteOfAvailableLibraries]
  -[ACCMediaLibraryProvider delegateQ]
  -[ACCMediaLibraryProvider _checkPlaylistContentToSend:accessory:]
  -[ACCMediaLibraryProvider flushUpdates:accessory:]
  -[ACCMediaLibraryProvider update:revision:persistentID:type:updateInfo:progress:accessory:]
  -[ACCMediaLibraryProvider notifyAvailableLibraries:]
  -[ACCMediaLibraryProvider update:revision:item:progress:accessory:]
  -[ACCMediaLibraryProvider update:revision:playlist:progress:accessory:]
  -[ACCMediaLibraryProvider update:revision:deleteItem:progress:accessory:]
  -[ACCMediaLibraryProvider update:revision:deletePlaylist:progress:accessory:]
  -[ACCMediaLibraryProvider update:revision:progress:accessory:]
  -[ACCMediaLibraryProvider setDelegateQ:]
  -[ACCMediaLibraryProvider setLibraries:]
  -[ACCMediaLibraryProvider lastUpdateType]
  -[ACCMediaLibraryProvider setLastUpdateType:]


ACCMediaLibraryUpdatePlaylistContent : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *contentList
 @property  NSString *mediaLibraryUID
 @property  NSString *revision
 @property  unsigned long persistentID
 @property  int contentStyle

  // instance methods
  -[ACCMediaLibraryUpdatePlaylistContent .cxx_destruct]
  -[ACCMediaLibraryUpdatePlaylistContent setRevision:]
  -[ACCMediaLibraryUpdatePlaylistContent persistentID]
  -[ACCMediaLibraryUpdatePlaylistContent setPersistentID:]
  -[ACCMediaLibraryUpdatePlaylistContent revision]
  -[ACCMediaLibraryUpdatePlaylistContent addContentItem:]
  -[ACCMediaLibraryUpdatePlaylistContent contentList]
  -[ACCMediaLibraryUpdatePlaylistContent contentStyle]
  -[ACCMediaLibraryUpdatePlaylistContent setContentStyle:]
  -[ACCMediaLibraryUpdatePlaylistContent copyDict]
  -[ACCMediaLibraryUpdatePlaylistContent initWithMediaLibrary:persistentID:revision:]
  -[ACCMediaLibraryUpdatePlaylistContent setMediaLibraryUID:]
  -[ACCMediaLibraryUpdatePlaylistContent mediaLibraryUID]
  -[ACCMediaLibraryUpdatePlaylistContent contentListCount]
  -[ACCMediaLibraryUpdatePlaylistContent copyContentDictList]
  -[ACCMediaLibraryUpdatePlaylistContent initWithMediaLibrary:revision:dict:]
  -[ACCMediaLibraryUpdatePlaylistContent copyContentList]
  -[ACCMediaLibraryUpdatePlaylistContent replaceContentList:]
  -[ACCMediaLibraryUpdatePlaylistContent addContentPersistentID:]
  -[ACCMediaLibraryUpdatePlaylistContent replaceContentItem:atIndex:]
  -[ACCMediaLibraryUpdatePlaylistContent replaceContentPersistentID:atIndex:]
  -[ACCMediaLibraryUpdatePlaylistContent getContentItemAtIndex:]
  -[ACCMediaLibraryUpdatePlaylistContent iterateContentItems:]
  -[ACCMediaLibraryUpdatePlaylistContent iterateContentPersistentIDs:]
  -[ACCMediaLibraryUpdatePlaylistContent setContentList:]


01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
