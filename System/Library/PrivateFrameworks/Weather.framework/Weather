|| __DATA.__common _MoonMap
|| __DATA.__common _maxMoonPhaseIndex
|| __DATA.__data _CityMaxWindChillTemperature
|| __DATA.__data _CityMinHeatIndexTemperature
|| __DATA.__data _CityMinimumContainmentDistance
|| __DATA.__data _CityMinimumContainmentDistanceMatchingNames
|| __DATA.__data _FilledSymbolGlyphs
|| __DATA.__data _SecondsFromGMTUnset
|| __DATA.__data _SymbolGlyphs
|| __DATA.__data _UnknownConditionCode
|| __DATA.__data _WeatherDescription
|| __DATA.__data _WeatherDescriptionGlance
|| __DATA.__data _WeatherDescriptionShort
|| __DATA.__data _blizzardDay
|| __DATA.__data _blowingSnowDay
|| __DATA.__data _clearDay
|| __DATA.__data _clearNight
|| __DATA.__data _cloudyDay
|| __DATA.__data _cloudyNight
|| __DATA.__data _drizzleDay
|| __DATA.__data _drizzleNight
|| __DATA.__data _dustDay
|| __DATA.__data _dustNight
|| __DATA.__data _flurriesDay
|| __DATA.__data _flurriesNight
|| __DATA.__data _fogDay
|| __DATA.__data _fogNight
|| __DATA.__data _frigidDay
|| __DATA.__data _hailDay
|| __DATA.__data _hazeDay
|| __DATA.__data _hazeNight
|| __DATA.__data _heavyRainDay
|| __DATA.__data _hotDay
|| __DATA.__data _hurricaneDay
|| __DATA.__data _hurricaneNight
|| __DATA.__data _inclementDay
|| __DATA.__data _inclementNight
|| __DATA.__data _mostlyClearNight
|| __DATA.__data _mostlyCloudyDay
|| __DATA.__data _mostlyCloudyNight
|| __DATA.__data _partlyCloudyDay
|| __DATA.__data _partlyCloudyNight
|| __DATA.__data _rainDay
|| __DATA.__data _rainSleetDay
|| __DATA.__data _rainSnowDay
|| __DATA.__data _scatteredShowersDay
|| __DATA.__data _scatteredSnowDay
|| __DATA.__data _scatteredThunderstormDay
|| __DATA.__data _showerDay
|| __DATA.__data _sleetDay
|| __DATA.__data _smallWeatherIcons
|| __DATA.__data _smokeDay
|| __DATA.__data _smokeNight
|| __DATA.__data _snowDay
|| __DATA.__data _stormDay
|| __DATA.__data _stormNight
|| __DATA.__data _sunnyDay
|| __DATA.__data _sunset
|| __DATA.__data _thunderstormsNight
|| __DATA.__data _tornadoDay
|| __DATA.__data _tornadoNight
|| __DATA.__data _tropicalStormDay
|| __DATA.__data _windyDay
|| __DATA.__data _winteryMixDayMini
|| __DATA.__objc_data _OBJC_CLASS_$_WAGreetingView
|| __DATA.__objc_data _OBJC_CLASS_$_WALockscreenWidgetViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WAProviderAttributionManager
|| __DATA.__objc_data _OBJC_CLASS_$_WATodayAutoupdatingLocationModel
|| __DATA.__objc_data _OBJC_CLASS_$_WATodayModel
|| __DATA.__objc_data _OBJC_CLASS_$_WATodayPadViewStyle
|| __DATA.__objc_data _OBJC_METACLASS_$_WAGreetingView
|| __DATA.__objc_data _OBJC_METACLASS_$_WALockscreenWidgetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WAProviderAttributionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WATodayAutoupdatingLocationModel
|| __DATA.__objc_data _OBJC_METACLASS_$_WATodayModel
|| __DATA.__objc_data _OBJC_METACLASS_$_WATodayPadViewStyle
|| __DATA.__objc_ivar _OBJC_IVAR_$_ProgressController._hideSpinnerTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_ProgressController._loadingCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_ProgressController._progressShowing
|| __DATA.__objc_ivar _OBJC_IVAR_$_WeatherView._city
|| __DATA.__objc_ivar _OBJC_IVAR_$_WeatherView._showWind
|| __DATA.__objc_ivar _OBJC_IVAR_$_WeatherView._showingDay
|| __DATA.__objc_ivar _OBJC_IVAR_$_WeatherView._windView
|| __DATA_CONST.__const _ActiveCityKey
|| __DATA_CONST.__const _CelsiusKey
|| __DATA_CONST.__const _CitiesKey
|| __DATA_CONST.__const _DetailedLoggingKey
|| __DATA_CONST.__const _ForcedCityAQIAvailability
|| __DATA_CONST.__const _ForcedCityAQICategory
|| __DATA_CONST.__const _ForcedCityAQIIndex
|| __DATA_CONST.__const _ForcedCityAQISignificance
|| __DATA_CONST.__const _ForcedCityCondition
|| __DATA_CONST.__const _ForcedCityDay
|| __DATA_CONST.__const _ForcedCityEnabled
|| __DATA_CONST.__const _ForcedCityName
|| __DATA_CONST.__const _LastLocationUpdateTimeKey
|| __DATA_CONST.__const _NanoPrefsdIdentifier
|| __DATA_CONST.__const _NilTemperatureString
|| __DATA_CONST.__const _PrefsGroupId
|| __DATA_CONST.__const _WAAirQualityProviderAttributionErrorDomain
|| __DATA_CONST.__const _WAForecastOperationUnitTestingTag
|| __DATA_CONST.__const _WALockscreenWidgetDidAppearNotification
|| __DATA_CONST.__const _WALockscreenWidgetDidDisappearNotification
|| __DATA_CONST.__const _WALockscreenWidgetWillAppearNotification
|| __DATA_CONST.__const _WALockscreenWidgetWillDisappearNotification
|| __DATA_CONST.__const _WAUserTemperatureUnitDidUpdateNotification
|| __DATA_CONST.__const _WAUserTemperatureUnitNotificatonUserInfoKey
|| __DATA_CONST.__const _WeatheIntentsIdentifier
|| __DATA_CONST.__const _WeatherAppIdentifier
|| __DATA_CONST.__const _WeatherChannelBaseURLKey
|| __DATA_CONST.__const _WeatherCityIndexKey
|| __DATA_CONST.__const _WeatherCityIsLocalURLKey
|| __DATA_CONST.__const _WeatherCityNameURLKey
|| __DATA_CONST.__const _WeatherCityShowingHourlyURLKey
|| __DATA_CONST.__const _WeatherCloudCitiesKey
|| __DATA_CONST.__const _WeatherCloudLegacyCitiesKey
|| __DATA_CONST.__const _WeatherCloudStoreChangedExternally
|| __DATA_CONST.__const _WeatherCloudStoreIsInitialSyncKey
|| __DATA_CONST.__const _WeatherLatitudeURLKey
|| __DATA_CONST.__const _WeatherLocalCitiesKey
|| __DATA_CONST.__const _WeatherLocalGeolocatedCityKey
|| __DATA_CONST.__const _WeatherLocalGeolocationEnabledKey
|| __DATA_CONST.__const _WeatherLocalLastUpdatedKey
|| __DATA_CONST.__const _WeatherLocalPrefsVersionKey
|| __DATA_CONST.__const _WeatherLongitudeSiriURLKey
|| __DATA_CONST.__const _WeatherLongitudeURLKey
|| __DATA_CONST.__const _WeatherServiceDefaultTrafficParameter
|| __DATA_CONST.__const _WeatherServiceTodayURLString
|| __DATA_CONST.__const _WeatherSimulationEnabledKey
|| __DATA_CONST.__const _WeatherSimulationHorizontalAccuracyKey
|| __DATA_CONST.__const _WeatherSimulationLatitudeKey
|| __DATA_CONST.__const _WeatherSimulationLongitudeKey
|| __DATA_CONST.__const _WeatherURLScheme
|| __DATA_CONST.__const _WeatherYQLEnvStoreKey
|| __DATA_CONST.__const _app_celsius_queue
|| __DATA_CONST.__const _cityDetailView
|| __DATA_CONST.__const _cityGlanceView
|| __DATA_CONST.__const _cityLatitude
|| __DATA_CONST.__const _cityListView
|| __DATA_CONST.__const _cityLongitude
|| __DATA_CONST.__const _cityNameKey
|| __DATA_CONST.__const _destViewKey
|| __DATA_CONST.__const _kActiveCityIndexKey
|| __DATA_CONST.__const _kActiveCityNameKey
|| __DATA_CONST.__const _kActiveLocalCityKey
|| __DATA_CONST.__const _kBeganDataRequestNotification
|| __DATA_CONST.__const _kBeganTrackingLocationNotification
|| __DATA_CONST.__const _kCityNamesKey
|| __DATA_CONST.__const _kCityNotificationNameDidUpdate
|| __DATA_CONST.__const _kDefaultActiveCityIndexKey
|| __DATA_CONST.__const _kDefaultActiveCityNameKey
|| __DATA_CONST.__const _kDefaultActiveLocalCityKey
|| __DATA_CONST.__const _kDefaultSelectedCityKey
|| __DATA_CONST.__const _kFakePadWeather
|| __DATA_CONST.__const _kFakePadWeatherCondition
|| __DATA_CONST.__const _kFakePadWeatherConditionDescription
|| __DATA_CONST.__const _kFakePadWeatherConditionTemperature
|| __DATA_CONST.__const _kFakePadWeatherDisplayName
|| __DATA_CONST.__const _kFakePadWeatherLatitude
|| __DATA_CONST.__const _kFakePadWeatherLongitude
|| __DATA_CONST.__const _kLastLocationParseTime
|| __DATA_CONST.__const _kLocalWeatherCityID
|| __DATA_CONST.__const _kRestStateNotification
|| __DATA_CONST.__const _kShowingCardListKey
|| __DATA_CONST.__const _kUserSelectedCityIDKey
|| __DATA_CONST.__const _kUserSelectedCityIndexKey
|| __DATA_CONST.__const _kUserSelectedCityNameKey
|| __DATA_CONST.__const _kUserSelectedLocalCityKey
|| __DATA_CONST.__const _kWAUpdateErrorCityKey
|| __DATA_CONST.__const _kWeatherAirQualityAllowUseDefaultScaleIfCacheEmpty
|| __DATA_CONST.__const _kWeatherAirQualityAvailabilityForCountryOverride
|| __DATA_CONST.__const _kWeatherAirQualityCategoryOverride
|| __DATA_CONST.__const _kWeatherAirQualityClearAQIScaleCacheOnNextLaunch
|| __DATA_CONST.__const _kWeatherAirQualityDataOriginationOverride
|| __DATA_CONST.__const _kWeatherAirQualityDataProviderOverride
|| __DATA_CONST.__const _kWeatherAirQualityDemoModeEnabled
|| __DATA_CONST.__const _kWeatherAirQualityIndexOverride
|| __DATA_CONST.__const _kWeatherAirQualityOverridesEnabled
|| __DATA_CONST.__const _kWeatherAirQualityRecommendationEnabled
|| __DATA_CONST.__const _kWeatherAirQualityScaleAscendingOverride
|| __DATA_CONST.__const _kWeatherAirQualityScaleNumericalOverride
|| __DATA_CONST.__const _kWeatherAirQualityScaleOverridesEnabled
|| __DATA_CONST.__const _kWeatherAirQualitySignificanceOverride
|| __DATA_CONST.__const _kWeatherAirQualityUseDefaultAttribution
|| __DATA_CONST.__const _kWeatherEffectiveBundleId
|| __DATA_CONST.__const _kWeatherErrorDomain
|| __DATA_CONST.__const _kWeatherMapCloudPaddingKey
|| __DATA_CONST.__const _kWeatherMapColorsKey
|| __DATA_CONST.__const _kWeatherMigrationDeviceInactivityThreshold
|| __DATA_CONST.__const _kWeatherPrefAppToPrefsDidUpdate
|| __DATA_CONST.__const _kWeatherPrefGroupPrefsDidUpdate
|| __DATA_CONST.__const _kWeatherPrefPrefsToAppDidUpdate
|| __DATA_CONST.__const _localCity
|| __DATA_CONST.__const _locationIDKey
|| __DATA_CONST.__const _weatherInternalPrefsDomain
|| __DATA_CONST.__const _weatherInternalPrefsDomainPath
|| __DATA_CONST.__const _weatherInternalPrefsDomainRootPath
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_City
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ProgressController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TWCCityUpdater
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TWCLocationUpdater
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAAQIAttributionStringBuilder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAAQICategory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAAQIGradient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAAQIGradientStop
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAAQIScale
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAAQIScaleView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAAQIView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAAQIViewStyler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WACurrentForecast
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WADayForecast
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAForecastModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAForecastModelController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAForecastOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAGradientProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAHourlyForecast
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAHourlyForecastParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WASevereWeatherStringBuilder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WATodayHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WATodayHourlyForecastView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WATodayPadView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WAWeatherPlatterViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherAQIAttribution
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherCloudMigrator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherCloudPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherDeviceLookup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherImageLoader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherInternalPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherLocationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherOpenURLHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherPrecipitationFormatter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherPressureFormatter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherVisibilityFormatter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherWindSpeedFormatter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_City
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ProgressController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TWCCityUpdater
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TWCLocationUpdater
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAAQIAttributionStringBuilder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAAQICategory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAAQIGradient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAAQIGradientStop
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAAQIScale
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAAQIScaleView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAAQIView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAAQIViewStyler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WACurrentForecast
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WADayForecast
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAForecastModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAForecastModelController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAForecastOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAGradientProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAHourlyForecast
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAHourlyForecastParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WASevereWeatherStringBuilder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WATodayHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WATodayHourlyForecastView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WATodayPadView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WAWeatherPlatterViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherAQIAttribution
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherCloudMigrator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherCloudPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherDeviceLookup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherImageLoader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherInternalPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherLocationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherOpenURLHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherPrecipitationFormatter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherPressureFormatter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherVisibilityFormatter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherWindSpeedFormatter
|| __TEXT.__const _CityUnsetValue
|| __TEXT.__const _MaxAllowedDistance
|| __TEXT.__const _MaxIconIndex
|| __TEXT.__const _MoonIconIndex
|| __TEXT.__const _MoonWithCloudsIndex
|| __TEXT.__const _PrecipitationUnsetFlag
|| __TEXT.__const _WAAirQualityProviderAttributionErrorNoAQIStationCode
|| __TEXT.__const _WALockscreenWidgetViewControllerDefaultUpdateInterval
|| __TEXT.__const _WAUpdateIntervalMinutes
|| __TEXT.__const _WeatherDegreeChar
|| __TEXT.__const __WAWeatherIconCacheVersion
|| __TEXT.__const _kMaxAllowedCitiesCount
|| __TEXT.__const _kWATodayHourlyForecastViewWidth
|| __TEXT.__text _CardinalDirectionFromAngle
|| __TEXT.__text _CardinalDirectionStringForIndex
|| __TEXT.__text _ChanceOfRainWithHourlyForecasts
|| __TEXT.__text _CityTimeDigitForTimeZone
|| __TEXT.__text _ClearNumberRTL
|| __TEXT.__text _DateByAddingOneDay
|| __TEXT.__text _DateIsTodayInTimezone
|| __TEXT.__text _DateIsYesterdayInTimezone
|| __TEXT.__text _DatesAreNotWithinSameHour
|| __TEXT.__text _FirstValidTWCLinkFromLinks
|| __TEXT.__text _FormatShortTime
|| __TEXT.__text _GetDeviceHeight
|| __TEXT.__text _GetDeviceWidth
|| __TEXT.__text _IsAllCapsMeridiemIndicatorRegion
|| __TEXT.__text _IsDynamicTypeLargeOrSmaller
|| __TEXT.__text _IsInternalInstall
|| __TEXT.__text _IsLoDPI
|| __TEXT.__text _IsNumberRTL
|| __TEXT.__text _IsPad
|| __TEXT.__text _IsPrecipitationCondition
|| __TEXT.__text _IsSunsetCondition
|| __TEXT.__text _IsTallDevice
|| __TEXT.__text _IsUIRTL
|| __TEXT.__text _LocalizedDecimalString
|| __TEXT.__text _LocalizedPercentageSign
|| __TEXT.__text _LocalizedPercentageString
|| __TEXT.__text _LocalizedWeatherDescription
|| __TEXT.__text _NSStringFromWAUpdateErrorCode
|| __TEXT.__text _NSStringFromWAUpdateStatus
|| __TEXT.__text _NSStringFromWAWeatherDataAge
|| __TEXT.__text _NSStringFromWAWeatherPressureState
|| __TEXT.__text _NSStringFromWeatherConditionCode
|| __TEXT.__text _OpenTWCLinkForCity
|| __TEXT.__text _OpenTWCLinksInOrder
|| __TEXT.__text _PrecipitationDescription
|| __TEXT.__text _RemapSmallIconForDayOrNight
|| __TEXT.__text _RemapStringIndexForDayOrNight
|| __TEXT.__text _SelectTWCLinkForCity
|| __TEXT.__text _ShouldUseLargeiPadLayout
|| __TEXT.__text _ShouldUseLargeiPadLayoutForSize
|| __TEXT.__text _SpecialTemperatureForCity
|| __TEXT.__text _SupportsLandscapeWeather
|| __TEXT.__text _TWCAttributionURLForTrafficParameter
|| __TEXT.__text _TWCFallbackURL
|| __TEXT.__text _TemperatureDegreeSign
|| __TEXT.__text _TemperatureDegreeSignShort
|| __TEXT.__text _Time24StringToInt
|| __TEXT.__text _TimeInRegionFormatFromFourDigitTime
|| __TEXT.__text _TimeStringToIntValue
|| __TEXT.__text _TruncateValueToDecimalAccuracy
|| __TEXT.__text _WAAirQualityCategoryFromConditions
|| __TEXT.__text _WAAirQualityDescriptionForCategory
|| __TEXT.__text _WAAirQualityIsSignificantForCategory
|| __TEXT.__text _WAAirQualityLongDescriptionForCategory
|| __TEXT.__text _WAAttributionString
|| __TEXT.__text _WACityFromForecastModel
|| __TEXT.__text _WACondensedTimeInRegionFormat
|| __TEXT.__text _WAConditionsLine2StringFromHourlyForecasts
|| __TEXT.__text _WAConditionsLineStringFromConditionCode
|| __TEXT.__text _WAConditionsLineStringFromCurrentForecasts
|| __TEXT.__text _WAContentColor
|| __TEXT.__text _WADetailColor
|| __TEXT.__text _WADividerLineColor
|| __TEXT.__text _WADoubleIsEqual
|| __TEXT.__text _WAErrorWithCode
|| __TEXT.__text _WAFloatIsEqual
|| __TEXT.__text _WAG2FontWithSize
|| __TEXT.__text _WAHexStringFromColor
|| __TEXT.__text _WAHourlyConditionsTemperatureLabelAttributesDictionary
|| __TEXT.__text _WAHourlyConditionsTimeLabelFont
|| __TEXT.__text _WAImageForConditionCode
|| __TEXT.__text _WAImageForConditionNamed
|| __TEXT.__text _WAImageForLegacyConditionCode
|| __TEXT.__text _WAImageForSunrise
|| __TEXT.__text _WAImageForSunset
|| __TEXT.__text _WAIsChinaSKUAndSimplifiedChinese
|| __TEXT.__text _WAIsPadAndChinaSKU
|| __TEXT.__text _WAIsShortDevice
|| __TEXT.__text _WALogForCategory
|| __TEXT.__text _WAMapsImageForLegacyConditionCode
|| __TEXT.__text _WAMapsImageWithinBundle
|| __TEXT.__text _WAMonospacedFont
|| __TEXT.__text _WANumberFormatterForDisplayingAQI
|| __TEXT.__text _WAObjectIsEqual
|| __TEXT.__text _WAPresentFirstUsageDialogIfNeeded
|| __TEXT.__text _WASetupVibrancyOnView
|| __TEXT.__text _WASmallWeatherIconsMap
|| __TEXT.__text _WASymbolGlyphColorsFromConditionCode
|| __TEXT.__text _WASymbolGlyphFromConditionCode
|| __TEXT.__text _WASymbolGlyphHexColorsFromConditionCode
|| __TEXT.__text _WATemperatureString
|| __TEXT.__text _WATemperatureStringForOutputUnit
|| __TEXT.__text _WATemperatureStringFromString
|| __TEXT.__text _WATimeInRegionFormat
|| __TEXT.__text _WATimeInRegionFormatFromFourDigitTime
|| __TEXT.__text _WATodayHeaderViewDegreeAttributedStringWithTemperatureObject
|| __TEXT.__text _WATodayLoadSavedFirstCityFromPreferences
|| __TEXT.__text _WATodayLoadSavedLastForecastModelFromPreferences
|| __TEXT.__text _WATodayPadViewFormatForSize
|| __TEXT.__text _WAUIFormattedTimeString
|| __TEXT.__text _WAUserTemperatureUnit
|| __TEXT.__text _WAWeatherUtilityResetForTimeChange
|| __TEXT.__text _WFTemperatureUnitFromIsCelsiusValue
|| __TEXT.__text _WeatherChannelBaseURL
|| __TEXT.__text _WeatherFrameworkBundle
|| __TEXT.__text _WeatherRowDegreeOffset
|| __TEXT.__text _WeatherUtilityFunctionsLocaleChanged
|| __TEXT.__text _WoeidFromLocationID
|| __TEXT.__text __WebServiceConfigClearCachedObjects
|| __TEXT.__text _haversineDistance
|| __TEXT.__text _shortWeekdayNameForDayOfWeek
|| __TEXT.__text _toRadians
|| __TEXT.__text _weatherWeekdayFormatter
|| __TEXT.__text _weekdayNameForDate
|| __TEXT.__text _weekdayNameForDayOfWeek
|| __TEXT.__text _weekdayNameForDayOfWeekHelper
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppSupport: _CPGetDeviceRegionCode
__ AppSupport: _OBJC_CLASS_$_ALCity
__ AppSupport: _OBJC_CLASS_$_ALCityManager
__ AppSupport: _OBJC_CLASS_$_CPBitmapStore
__ AuthKit: _AKServiceNameiCloud
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ AuthKit: _OBJC_CLASS_$_AKDeviceListRequestContext
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterCreateStringWithDate
__ CoreFoundation: _CFLocaleCopyCurrent
__ CoreFoundation: _CFLocaleGetValue
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSCalendarIdentifierISO8601
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSDateFormatterPatternCharacterKey
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSLocaleTemperatureUnitCelsius
__ CoreFoundation: _NSLocaleTemperatureUnitFahrenheit
__ CoreFoundation: _NSLocaleUsesMetricSystem
__ CoreFoundation: _NSMallocException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_METACLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFLocaleCountryCode
__ CoreFoundation: _kCFLocaleIdentifier
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginTransparencyLayerWithRect
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextDrawPDFPage
__ CoreGraphics: _CGContextEndTransparencyLayer
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetShadowWithColor
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPDFPageGetBoxRect
__ CoreGraphics: _CGPathCreateWithEllipseInRect
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreLocation: _CLLocationCoordinate2DIsValid
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLGeocoder
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _kCLErrorDomain
__ CoreLocation: _kCLLocationAccuracyHundredMeters
__ CoreLocation: _kCLLocationAccuracyKilometer
__ CoreLocation: _kCLLocationCoordinate2DInvalid
__ CoreText: _kCTFontDescriptorTextStyleAttribute
__ CoreText: _kCTFontDescriptorTextStyleThinAlways
__ CoreText: _kCTFontGradeTrait
__ CoreText: _kCTFontSizeAttribute
__ CoreText: _kCTFontTraitsAttribute
__ Foundation: _NSClassFromString
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUbiquitousKeyValueStoreChangeReasonKey
__ Foundation: _NSUbiquitousKeyValueStoreDidChangeExternallyNotification
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFormatter
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSLengthFormatter
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUbiquitousKeyValueStore
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_METACLASS_$_NSFormatter
__ Foundation: _OBJC_METACLASS_$_NSLengthFormatter
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: __NSDictionaryOfVariableBindings
__ MapKit: _OBJC_CLASS_$_MKMapItem
__ MapKit: _OBJC_CLASS_$_MKPlacemark
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ NetAppsUtilitiesUI: _OBJC_CLASS_$_NAUIContentSizeLayoutConstraint
__ NetAppsUtilitiesUI: _OBJC_CLASS_$_NAUIDeviceUtilities
__ UIKit: _NSBaselineOffsetAttributeName
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSLinkAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSUnderlineStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UIVibrancyEffect
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_CLASS_$__UILegibilityView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIAccessibilityDarkerSystemColorsEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIApp
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleHeadline1
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightLight
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UILayoutFittingCompressedSize
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: __UIGraphicsDrawIntoImageContextWithOptions
__ UIKit: __UILegibilityStrengthAutomatic
__ WeatherFoundation: _CloudCityLatitudeKey
__ WeatherFoundation: _CloudCityLongitudeKey
__ WeatherFoundation: _CloudCityNameKey
__ WeatherFoundation: _CloudCitySearchSubtitleKey
__ WeatherFoundation: _CloudCitySearchTitleKey
__ WeatherFoundation: _NSStringFromWFTemperatureUnit
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleATMO
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleCAQI
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleCacheManager
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleCategory
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleCategoryATMO
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleCategoryCAQI
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleCategoryDAQI
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleCategoryEPA
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleCategoryHJ6332012
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleCategoryIMECA
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleCategoryNAQI
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleCategoryUBA
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleDAQI
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleEPA
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleHJ6332012
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleIMECA
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleNAQI
__ WeatherFoundation: _OBJC_CLASS_$_WFAQIScaleUBA
__ WeatherFoundation: _OBJC_CLASS_$_WFAggregateCommonRequest
__ WeatherFoundation: _OBJC_CLASS_$_WFAirQualityConditions
__ WeatherFoundation: _OBJC_CLASS_$_WFAirQualityProviderAttributionManager
__ WeatherFoundation: _OBJC_CLASS_$_WFGeocodeRequest
__ WeatherFoundation: _OBJC_CLASS_$_WFLocation
__ WeatherFoundation: _OBJC_CLASS_$_WFNextHourPrecipitation
__ WeatherFoundation: _OBJC_CLASS_$_WFNextHourPrecipitationCondition
__ WeatherFoundation: _OBJC_CLASS_$_WFNextHourPrecipitationDescription
__ WeatherFoundation: _OBJC_CLASS_$_WFNextHourPrecipitationMinute
__ WeatherFoundation: _OBJC_CLASS_$_WFServiceConnection
__ WeatherFoundation: _OBJC_CLASS_$_WFSettingsManager
__ WeatherFoundation: _OBJC_CLASS_$_WFSevereWeatherEvent
__ WeatherFoundation: _OBJC_CLASS_$_WFTemperature
__ WeatherFoundation: _OBJC_CLASS_$_WFTemperatureFormatter
__ WeatherFoundation: _OBJC_CLASS_$_WFTemperatureUnitChangeRequest
__ WeatherFoundation: _OBJC_CLASS_$_WFTemperatureUnitObserver
__ WeatherFoundation: _OBJC_CLASS_$_WFURLComponents
__ WeatherFoundation: _OBJC_CLASS_$_WFWeatherStoreService
__ WeatherFoundation: _OBJC_CLASS_$_WeatherService
__ WeatherFoundation: _WFWeatherDataProviderName
__ WeatherFoundation: _WFWeatherDewpointComponent
__ WeatherFoundation: _WFWeatherFeelsLikeTemperatureComponent
__ WeatherFoundation: _WFWeatherForecastTimeComponent
__ WeatherFoundation: _WFWeatherHighTemperatureComponent
__ WeatherFoundation: _WFWeatherHumidityComponent
__ WeatherFoundation: _WFWeatherIOSLinkComponent
__ WeatherFoundation: _WFWeatherLowTemperatureComponent
__ WeatherFoundation: _WFWeatherMobileLinkComponent
__ WeatherFoundation: _WFWeatherPrecipitationAmountComponent
__ WeatherFoundation: _WFWeatherPrecipitationChanceComponent
__ WeatherFoundation: _WFWeatherPressureComponent
__ WeatherFoundation: _WFWeatherPressureTrendComponent
__ WeatherFoundation: _WFWeatherSunriseTimeComponent
__ WeatherFoundation: _WFWeatherSunsetTimeComponent
__ WeatherFoundation: _WFWeatherTemperatureComponent
__ WeatherFoundation: _WFWeatherUVIndexComponent
__ WeatherFoundation: _WFWeatherVisibilityComponent
__ WeatherFoundation: _WFWeatherWebLinkComponent
__ WeatherFoundation: _WFWeatherWindDirectionComponent
__ WeatherFoundation: _WFWeatherWindSpeedComponent
__ WeatherFoundation: ___WFWeatherLegacyConditionComponent
__ WeatherFoundation: ___WFWeatherSeriesIndexComponent
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logger_create
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logger_destroy
__ libCTGreenTeaLogger.dylib: _getCTGreenTeaOsLogHandle
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _cosf
__ libSystem.B.dylib: _dispatch_apply
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _sinf
__ libcupolicy.dylib: _network_usage_policy_create_client
__ libcupolicy.dylib: _network_usage_policy_destroy_client
__ libcupolicy.dylib: _perform_first_network_use_flow
__ libicucore.A.dylib: _u_strToUTF8
__ libicucore.A.dylib: _uameasfmt_close
__ libicucore.A.dylib: _uameasfmt_format
__ libicucore.A.dylib: _uameasfmt_open
__ libicucore.A.dylib: _unum_clone
__ libicucore.A.dylib: _unum_close
__ libicucore.A.dylib: _unum_open
__ libicucore.A.dylib: _unum_setAttribute
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
WATodayModel : NSObject
 @property  WFServiceConnection *connection
 @property  ^{ct_green_tea_logger_s=} greenTeaLogger
 @property  BOOL hasPendingUpdates
 @property  WAForecastModel *forecastModel
 @property  NSDate *lastUpdateDate

  // class methods
  +[WATodayModel autoupdatingLocationModelWithPreferences:effectiveBundleIdentifier:]
  +[WATodayModel currentLocationModel]
  +[WATodayModel modelWithLocation:]

  // instance methods
  -[WATodayModel initWithLocation:]
  -[WATodayModel lastUpdateDate]
  -[WATodayModel .cxx_destruct]
  -[WATodayModel setConnection:]
  -[WATodayModel hasPendingUpdates]
  -[WATodayModel init]
  -[WATodayModel connection]
  -[WATodayModel addObserver:]
  -[WATodayModel location]
  -[WATodayModel greenTeaLogger]
  -[WATodayModel dealloc]
  -[WATodayModel removeObserver:]
  -[WATodayModel setLastUpdateDate:]
  -[WATodayModel setGreenTeaLogger:]
  -[WATodayModel setHasPendingUpdates:]
  -[WATodayModel forecastModel]
  -[WATodayModel _locationUpdateCompleted:error:completion:]
  -[WATodayModel _executeLocationUpdateWithCompletion:]
  -[WATodayModel _forecastUpdateCompleted:forecastModel:error:completion:]
  -[WATodayModel _executeForecastRetrievalForLocation:completion:]
  -[WATodayModel setForecastModel:]
  -[WATodayModel _willDeliverForecastModel:]
  -[WATodayModel _fireTodayModelForecastWasUpdated:]
  -[WATodayModel _persistStateWithModel:]
  -[WATodayModel performDelayedUpdatesForObserver:]
  -[WATodayModel executeModelUpdateWithCompletion:]
  -[WATodayModel checkIfNeedsToUpdate]
  -[WATodayModel hasCrossedHourlyBoundary]
  -[WATodayModel clearLocationUpdateState]
  -[WATodayModel _fireTodayModelWantsUpdate]


WATodayAutoupdatingLocationModel : WATodayModel <CLLocationManagerDelegate, SynchronizedDefaultsDelegate>
 @property  WFGeocodeRequest *geocodeRequest
 @property  BOOL isLocationTrackingEnabled
 @property  unsigned long citySource
 @property  unsigned long fallbackCitySource
 @property  WeatherLocationManager *locationManager
 @property  BOOL stopUpdateIfNeeded
 @property  double minTimeBetweenUpdates
 @property  double minDistanceChangeInMeters
 @property  NSDate *lastLocationUpdateDate
 @property  WeatherPreferences *preferences
 @property  @? WeatherLocationManagerGenerator
 @property  BOOL locationServicesActive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WATodayAutoupdatingLocationModel setPreferences:]
  -[WATodayAutoupdatingLocationModel preferences]
  -[WATodayAutoupdatingLocationModel .cxx_destruct]
  -[WATodayAutoupdatingLocationModel locationManager]
  -[WATodayAutoupdatingLocationModel locationManager:didChangeAuthorizationStatus:]
  -[WATodayAutoupdatingLocationModel init]
  -[WATodayAutoupdatingLocationModel locationManager:didUpdateLocations:]
  -[WATodayAutoupdatingLocationModel dealloc]
  -[WATodayAutoupdatingLocationModel setLocationManager:]
  -[WATodayAutoupdatingLocationModel initWithPreferences:effectiveBundleIdentifier:]
  -[WATodayAutoupdatingLocationModel configureWithLocationServicesActive:]
  -[WATodayAutoupdatingLocationModel forecastModel]
  -[WATodayAutoupdatingLocationModel _executeLocationUpdateWithCompletion:]
  -[WATodayAutoupdatingLocationModel _willDeliverForecastModel:]
  -[WATodayAutoupdatingLocationModel _persistStateWithModel:]
  -[WATodayAutoupdatingLocationModel checkIfNeedsToUpdate]
  -[WATodayAutoupdatingLocationModel clearLocationUpdateState]
  -[WATodayAutoupdatingLocationModel weatherPreferencesWereSynchronized]
  -[WATodayAutoupdatingLocationModel setWeatherLocationManagerGenerator:]
  -[WATodayAutoupdatingLocationModel setStopUpdateIfNeeded:]
  -[WATodayAutoupdatingLocationModel configureWithInitialCitySource:locationServicesActive:]
  -[WATodayAutoupdatingLocationModel setFallbackCitySource:]
  -[WATodayAutoupdatingLocationModel fallbackCitySource]
  -[WATodayAutoupdatingLocationModel setCitySource:fireNotification:]
  -[WATodayAutoupdatingLocationModel setLocationServicesActive:]
  -[WATodayAutoupdatingLocationModel _teardownLocationManager]
  -[WATodayAutoupdatingLocationModel _reloadForecastData:]
  -[WATodayAutoupdatingLocationModel _kickstartLocationManager]
  -[WATodayAutoupdatingLocationModel setIsLocationTrackingEnabled:]
  -[WATodayAutoupdatingLocationModel setCitySource:]
  -[WATodayAutoupdatingLocationModel WeatherLocationManagerGenerator]
  -[WATodayAutoupdatingLocationModel minTimeBetweenUpdates]
  -[WATodayAutoupdatingLocationModel updateLocationTrackingStatus]
  -[WATodayAutoupdatingLocationModel isLocationTrackingEnabled]
  -[WATodayAutoupdatingLocationModel citySource]
  -[WATodayAutoupdatingLocationModel _executeLocationUpdateForLocalWeatherCityWithCompletion:]
  -[WATodayAutoupdatingLocationModel _executeLocationUpdateForFirstWeatherCityWithCompletion:]
  -[WATodayAutoupdatingLocationModel lastLocationUpdateDate]
  -[WATodayAutoupdatingLocationModel minDistanceChangeInMeters]
  -[WATodayAutoupdatingLocationModel setLastLocationUpdateDate:]
  -[WATodayAutoupdatingLocationModel shouldUseNewLocation:oldLocation:]
  -[WATodayAutoupdatingLocationModel stopUpdateIfNeeded]
  -[WATodayAutoupdatingLocationModel geocodeRequest]
  -[WATodayAutoupdatingLocationModel setGeocodeRequest:]
  -[WATodayAutoupdatingLocationModel ubiquitousDefaultsDidChange:]
  -[WATodayAutoupdatingLocationModel syncLastUpdateTime]
  -[WATodayAutoupdatingLocationModel shouldNotUseUpdatedLocation]
  -[WATodayAutoupdatingLocationModel locationServicesActive]


WAAQIScaleView : UIView
 @property  double aqiPercentageInRange
 @property  WAAQIScale *scale
 @property  unsigned long AQI

  // instance methods
  -[WAAQIScaleView AQI]
  -[WAAQIScaleView .cxx_destruct]
  -[WAAQIScaleView trackRectForBounds:]
  -[WAAQIScaleView initWithFrame:]
  -[WAAQIScaleView setAQI:]
  -[WAAQIScaleView setScale:]
  -[WAAQIScaleView scale]
  -[WAAQIScaleView drawRect:]
  -[WAAQIScaleView intrinsicContentSize]
  -[WAAQIScaleView sanitizedAQI:]
  -[WAAQIScaleView thumbRectForBounds:trackRect:]
  -[WAAQIScaleView aqiPercentageInRange]
  -[WAAQIScaleView setAqiPercentageInRange:]


WAAQIGradient : NSObject
 @property  NSMutableArray *internalStops
 @property  NSMutableIndexSet *locationStops
 @property  NSMutableDictionary *colorsByLocation
 @property  {_NSRange=QQ} range
 @property  NSArray *stops

  // instance methods
  -[WAAQIGradient range]
  -[WAAQIGradient stops]
  -[WAAQIGradient initWithRange:]
  -[WAAQIGradient .cxx_destruct]
  -[WAAQIGradient addGradientStop:]
  -[WAAQIGradient gradientStopForLocation:]
  -[WAAQIGradient internalStops]
  -[WAAQIGradient setInternalStops:]
  -[WAAQIGradient locationStops]
  -[WAAQIGradient colorsByLocation]


WeatherWindSpeedFormatter : NSFormatter
 @property  NSLocale *locale
 @property  NSDictionary *directionSubstringAttributes

  // class methods
  +[WeatherWindSpeedFormatter convenienceFormatter]

  // instance methods
  -[WeatherWindSpeedFormatter stringForObjectValue:]
  -[WeatherWindSpeedFormatter setLocale:]
  -[WeatherWindSpeedFormatter .cxx_destruct]
  -[WeatherWindSpeedFormatter init]
  -[WeatherWindSpeedFormatter locale]
  -[WeatherWindSpeedFormatter getObjectValue:forString:errorDescription:]
  -[WeatherWindSpeedFormatter formattedStringForSpeed:direction:]
  -[WeatherWindSpeedFormatter formattedStringForSpeed:direction:shortDescription:]
  -[WeatherWindSpeedFormatter speedByConvertingToUserUnit:]
  -[WeatherWindSpeedFormatter templateStringForSpeed:direction:]
  -[WeatherWindSpeedFormatter stringForWindDirection:shortDescription:]
  -[WeatherWindSpeedFormatter directionSubstringAttributes]
  -[WeatherWindSpeedFormatter stringForWindSpeed:]
  -[WeatherWindSpeedFormatter fallbackStringForWindSpeed:]
  -[WeatherWindSpeedFormatter windSpeedUnit]
  -[WeatherWindSpeedFormatter fallbackUnitString]
  -[WeatherWindSpeedFormatter attributedFormattedStringForSpeed:direction:]
  -[WeatherWindSpeedFormatter speedStringByConvertingToUserUnits:]
  -[WeatherWindSpeedFormatter setDirectionSubstringAttributes:]


WeatherCloudMigrator : NSObject
 @property  WeatherDeviceLookup *deviceLookup

  // instance methods
  -[WeatherCloudMigrator .cxx_destruct]
  -[WeatherCloudMigrator init]
  -[WeatherCloudMigrator storeRequiresMigration:]
  -[WeatherCloudMigrator eraseStoreIfNeeded:]
  -[WeatherCloudMigrator deviceLookup]
  -[WeatherCloudMigrator migrateStore:toStore:completionBlock:]


WeatherView : UIView <CityUpdateObserver>
 @property  City *city
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WeatherView bundle]
  -[WeatherView .cxx_destruct]
  -[WeatherView initWithFrame:]
  -[WeatherView dealloc]
  -[WeatherView city]
  -[WeatherView resetLocale:]
  -[WeatherView cleanupWindView]
  -[WeatherView showCity:]
  -[WeatherView updateWeatherDisplayForCity:]
  -[WeatherView _setCity:associateAsDelegate:]
  -[WeatherView cityDidStartWeatherUpdate:]
  -[WeatherView cityDidFinishWeatherUpdate:]
  -[WeatherView refreshLocalization]


WeatherUserDefaults : NSObject <WeatherPreferencesPersistence>
 @property  NSUserDefaults *userDefaults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WeatherUserDefaults setUserDefaults:]
  -[WeatherUserDefaults initWithUserDefaults:]
  -[WeatherUserDefaults objectForKey:]
  -[WeatherUserDefaults synchronizeWithCompletionHandler:]
  -[WeatherUserDefaults setObject:forKey:]
  -[WeatherUserDefaults setBool:forKey:]
  -[WeatherUserDefaults .cxx_destruct]
  -[WeatherUserDefaults boolForKey:]
  -[WeatherUserDefaults removeObjectForKey:]
  -[WeatherUserDefaults synchronize]
  -[WeatherUserDefaults stringForKey:]
  -[WeatherUserDefaults arrayForKey:]
  -[WeatherUserDefaults userDefaults]
  -[WeatherUserDefaults dictionaryForKey:]


WeatherPrecipitationFormatter : NSLengthFormatter
 @property  NSLocale *locale

  // class methods
  +[WeatherPrecipitationFormatter convenienceFormatter]

  // instance methods
  -[WeatherPrecipitationFormatter stringForObjectValue:]
  -[WeatherPrecipitationFormatter setLocale:]
  -[WeatherPrecipitationFormatter .cxx_destruct]
  -[WeatherPrecipitationFormatter init]
  -[WeatherPrecipitationFormatter locale]
  -[WeatherPrecipitationFormatter stringFromDistance:isDataMetric:]
  -[WeatherPrecipitationFormatter precipitationUnit]
  -[WeatherPrecipitationFormatter convertDistanceInMetric:to:]
  -[WeatherPrecipitationFormatter convertDistanceInImperial:to:]
  -[WeatherPrecipitationFormatter stringFromCentimeters:]
  -[WeatherPrecipitationFormatter stringFromInches:]


WATodayHourlyForecastView : UIView
 @property  UIVisualEffectView *temperatureLabelVisualEffectView
 @property  UIVisualEffectView *timeLabelVisualEffectView
 @property  UILabel *temperatureLabel
 @property  UILabel *timeLabel
 @property  UIImageView *conditionsImageView
 @property  NSArray *constraints
 @property  UIImage *conditionsImage
 @property  NSAttributedString *temperature
 @property  NSAttributedString *time

  // instance methods
  -[WATodayHourlyForecastView temperature]
  -[WATodayHourlyForecastView setTime:]
  -[WATodayHourlyForecastView constraints]
  -[WATodayHourlyForecastView .cxx_destruct]
  -[WATodayHourlyForecastView setConstraints:]
  -[WATodayHourlyForecastView setTimeLabel:]
  -[WATodayHourlyForecastView time]
  -[WATodayHourlyForecastView _setupConstraints]
  -[WATodayHourlyForecastView timeLabel]
  -[WATodayHourlyForecastView initWithFrame:]
  -[WATodayHourlyForecastView setTemperature:]
  -[WATodayHourlyForecastView setTemperatureLabel:]
  -[WATodayHourlyForecastView temperatureLabel]
  -[WATodayHourlyForecastView setTemperatureLabelVisualEffectView:]
  -[WATodayHourlyForecastView temperatureLabelVisualEffectView]
  -[WATodayHourlyForecastView setTimeLabelVisualEffectView:]
  -[WATodayHourlyForecastView timeLabelVisualEffectView]
  -[WATodayHourlyForecastView setConditionsImageView:]
  -[WATodayHourlyForecastView conditionsImageView]
  -[WATodayHourlyForecastView setConditionsImage:]
  -[WATodayHourlyForecastView conditionsImage]
  -[WATodayHourlyForecastView applyVibrancyToTimeWithEffect:]


WALockscreenWidgetViewController : UIViewController <WATodayModelObserver>
 @property  WATodayModel *todayModel
 @property  WATodayPadView *todayView
 @property  WAForecastModel *currentForecastModel
 @property  NSTimer *updateTimer
 @property  NSDate *updateLastCompletionDate
 @property  BOOL locationServicesActive
 @property  double updateInterval
 @property  <WAWidgetDelegate> *delegate
 @property  BOOL todayViewIsVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WALockscreenWidgetViewController sharedInstanceIfExists]

  // instance methods
  -[WALockscreenWidgetViewController _temperature]
  -[WALockscreenWidgetViewController setUpdateTimer:]
  -[WALockscreenWidgetViewController .cxx_destruct]
  -[WALockscreenWidgetViewController viewDidLoad]
  -[WALockscreenWidgetViewController todayView]
  -[WALockscreenWidgetViewController setDelegate:]
  -[WALockscreenWidgetViewController viewDidAppear:]
  -[WALockscreenWidgetViewController init]
  -[WALockscreenWidgetViewController setTodayView:]
  -[WALockscreenWidgetViewController updateForChangedSettings:]
  -[WALockscreenWidgetViewController _updateTimerFired:]
  -[WALockscreenWidgetViewController viewWillAppear:]
  -[WALockscreenWidgetViewController delegate]
  -[WALockscreenWidgetViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[WALockscreenWidgetViewController setUpdateInterval:]
  -[WALockscreenWidgetViewController updateInterval]
  -[WALockscreenWidgetViewController updateTimer]
  -[WALockscreenWidgetViewController _locationName]
  -[WALockscreenWidgetViewController viewDidDisappear:]
  -[WALockscreenWidgetViewController todayModelWantsUpdate:]
  -[WALockscreenWidgetViewController todayModel:forecastWasUpdated:]
  -[WALockscreenWidgetViewController setLocationServicesActive:]
  -[WALockscreenWidgetViewController locationServicesActive]
  -[WALockscreenWidgetViewController _updateTodayView]
  -[WALockscreenWidgetViewController _updateWithReason:]
  -[WALockscreenWidgetViewController _teardownWeatherModel]
  -[WALockscreenWidgetViewController _setTodayViewHidden:]
  -[WALockscreenWidgetViewController _teardownTimer]
  -[WALockscreenWidgetViewController todayModel]
  -[WALockscreenWidgetViewController _scheduleNewTimer]
  -[WALockscreenWidgetViewController _setupWeatherModel]
  -[WALockscreenWidgetViewController _delegateShouldUpdateForecast]
  -[WALockscreenWidgetViewController _delegateWillUpdate]
  -[WALockscreenWidgetViewController setUpdateLastCompletionDate:]
  -[WALockscreenWidgetViewController _delegateUpdateDidFailWithError:]
  -[WALockscreenWidgetViewController setCurrentForecastModel:]
  -[WALockscreenWidgetViewController currentForecastModel]
  -[WALockscreenWidgetViewController shouldFakeWeather]
  -[WALockscreenWidgetViewController _conditionsLine]
  -[WALockscreenWidgetViewController _conditionsImage]
  -[WALockscreenWidgetViewController getLocationServicesAuthorizationStatus:]
  -[WALockscreenWidgetViewController setTodayModel:]
  -[WALockscreenWidgetViewController updateWeather]
  -[WALockscreenWidgetViewController todayViewIsVisible]
  -[WALockscreenWidgetViewController _delegateDidUpdate]
  -[WALockscreenWidgetViewController updateLastCompletionDate]


WeatherImageLoader : NSObject
 @property  CPBitmapStore *store
 @property  NSCache *conditionImagesCache

  // class methods
  +[WeatherImageLoader preloadImages]
  +[WeatherImageLoader conditionImageNamed:style:]
  +[WeatherImageLoader conditionImageNameWithConditionIndex:]
  +[WeatherImageLoader conditionImageWithConditionIndex:]
  +[WeatherImageLoader sharedImageLoader]
  +[WeatherImageLoader conditionImageBundle]
  +[WeatherImageLoader conditionImageNamed:size:cloudAligned:stroke:strokeAlpha:lighterColors:]
  +[WeatherImageLoader colorForImageColor:lighter:]
  +[WeatherImageLoader cacheImageIfNecessary:]
  +[WeatherImageLoader conditionImageWithConditionIndex:style:]
  +[WeatherImageLoader cachedImageNamed:completion:]

  // instance methods
  -[WeatherImageLoader .cxx_destruct]
  -[WeatherImageLoader setStore:]
  -[WeatherImageLoader init]
  -[WeatherImageLoader setImage:forKey:]
  -[WeatherImageLoader store]
  -[WeatherImageLoader conditionImagesCache]
  -[WeatherImageLoader cachedImageForKey:]
  -[WeatherImageLoader setConditionImagesCache:]


WeatherLocationManager : NSObject <CLLocationManagerDelegate>
 @property  NSString *effectiveBundleIdentifier
 @property  CLLocationManager *locationManager
 @property  int authorizationStatus
 @property  BOOL locationUpdatesEnabled
 @property  BOOL locationTrackingIsReady
 @property  unsigned long updateInterval
 @property  double oldestAllowedUpdateTime
 @property  NSTimer *delayedUpdateTimer
 @property  NSTimer *accuracyFallbackTimer
 @property  WeatherPreferences *preferences
 @property  {CLLocationCoordinate2D=dd} lastLocationCoord
 @property  NSDate *lastLocationTimeStamp
 @property  float lastLocationAccuracy
 @property  double lastLocationUpdateTime
 @property  double nextPlannedUpdate
 @property  BOOL isInternalBuild
 @property  <CLLocationManagerDelegate> *delegate
 @property  double distanceFilter
 @property  BOOL limitsPrecision
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WeatherLocationManager locationManagerAuthorizationWithEffectiveBundleId:]
  +[WeatherLocationManager sharedWeatherLocationManager]
  +[WeatherLocationManager clearSharedLocationManager]

  // instance methods
  -[WeatherLocationManager effectiveBundleIdentifier]
  -[WeatherLocationManager distanceFilter]
  -[WeatherLocationManager setPreferences:]
  -[WeatherLocationManager preferences]
  -[WeatherLocationManager setAuthorizationStatus:]
  -[WeatherLocationManager authorizationStatus]
  -[WeatherLocationManager .cxx_destruct]
  -[WeatherLocationManager locationManager]
  -[WeatherLocationManager locationManager:didChangeAuthorizationStatus:]
  -[WeatherLocationManager locationManager:didFailWithError:]
  -[WeatherLocationManager setDelegate:]
  -[WeatherLocationManager init]
  -[WeatherLocationManager isInternalBuild]
  -[WeatherLocationManager location]
  -[WeatherLocationManager updateLocation:]
  -[WeatherLocationManager locationManager:didUpdateLocations:]
  -[WeatherLocationManager initWithPreferences:]
  -[WeatherLocationManager delegate]
  -[WeatherLocationManager setUpdateInterval:]
  -[WeatherLocationManager dealloc]
  -[WeatherLocationManager updateInterval]
  -[WeatherLocationManager limitsPrecision]
  -[WeatherLocationManager setIsInternalBuild:]
  -[WeatherLocationManager setLocationManager:]
  -[WeatherLocationManager initWithPreferences:effectiveBundleIdentifier:]
  -[WeatherLocationManager stopLocationUpdate]
  -[WeatherLocationManager setLocationTrackingReady:activelyTracking:watchKitExtension:]
  -[WeatherLocationManager clearLocalWeatherUpdateState]
  -[WeatherLocationManager locationTrackingIsReady]
  -[WeatherLocationManager setLocationTrackingActive:]
  -[WeatherLocationManager askForLocationManagerAuthorization]
  -[WeatherLocationManager localWeatherAuthorized]
  -[WeatherLocationManager isLocalStaleOrOutOfDate]
  -[WeatherLocationManager isCacheOutOfDate]
  -[WeatherLocationManager forceLocationUpdate]
  -[WeatherLocationManager updateLocationWithNoConditionCheck]
  -[WeatherLocationManager cancelAccuracyFallbackTimer]
  -[WeatherLocationManager cancelDelayedUpdateTimer]
  -[WeatherLocationManager forceLoadingAuthorizationStatus]
  -[WeatherLocationManager setLocationTrackingReady:activelyTracking:watchKitExtension:shouldRequestAuthorization:]
  -[WeatherLocationManager clearLastLocationUpdateTime]
  -[WeatherLocationManager setLocationUpdatesEnabled:]
  -[WeatherLocationManager setLocationTrackingIsReady:]
  -[WeatherLocationManager setLastLocationUpdateTime:]
  -[WeatherLocationManager lastLocationUpdateTime]
  -[WeatherLocationManager locationUpdatesEnabled]
  -[WeatherLocationManager oldestAllowedUpdateTime]
  -[WeatherLocationManager setOldestAllowedUpdateTime:]
  -[WeatherLocationManager scheduleDelayedUpdate:]
  -[WeatherLocationManager lastLocationTimeStamp]
  -[WeatherLocationManager setLastLocationTimeStamp:]
  -[WeatherLocationManager lastLocationAccuracy]
  -[WeatherLocationManager lastLocationCoord]
  -[WeatherLocationManager delayedUpdateTimer]
  -[WeatherLocationManager setNextPlannedUpdate:]
  -[WeatherLocationManager delayedUpdateTimerDidFire:]
  -[WeatherLocationManager setDelayedUpdateTimer:]
  -[WeatherLocationManager accuracyFallbackTimerDidFire:]
  -[WeatherLocationManager setAccuracyFallbackTimer:]
  -[WeatherLocationManager setLastLocationCoord:]
  -[WeatherLocationManager setLastLocationAccuracy:]
  -[WeatherLocationManager accuracyFallbackTimer]
  -[WeatherLocationManager forceLocationManagerAuthorization]
  -[WeatherLocationManager monitorLocationAuthorization]
  -[WeatherLocationManager hasCrossedHourBoundary]
  -[WeatherLocationManager isLocationWithInRange:]
  -[WeatherLocationManager nextPlannedUpdate]


WATodayHeaderView : UIView
 @property  UIVisualEffectView *weatherInformationVisualEffectView
 @property  UILabel *locationLabel
 @property  UILabel *conditionsLabel1
 @property  UILabel *conditionsLabel2
 @property  UIImageView *conditionsImageView
 @property  UILabel *temperatureLabel
 @property  UILabel *temperatureHighLowLabel
 @property  double pageFontSize
 @property  double pageDegreeFontSize
 @property  double pageBaselineOffset
 @property  NSString *conditionsLine1
 @property  NSString *conditionsLine2
 @property  UIImage *conditionsImage
 @property  NSString *temperature
 @property  NSString *temperatureHigh
 @property  NSString *temperatureLow
 @property  NSString *locationName

  // class methods
  +[WATodayHeaderView requiresConstraintBasedLayout]

  // instance methods
  -[WATodayHeaderView temperature]
  -[WATodayHeaderView _updateContent]
  -[WATodayHeaderView locationLabel]
  -[WATodayHeaderView .cxx_destruct]
  -[WATodayHeaderView setLocationLabel:]
  -[WATodayHeaderView locationName]
  -[WATodayHeaderView setLocationName:]
  -[WATodayHeaderView init]
  -[WATodayHeaderView _setupConstraints]
  -[WATodayHeaderView _setupSubviews]
  -[WATodayHeaderView setTemperature:]
  -[WATodayHeaderView setTemperatureLabel:]
  -[WATodayHeaderView temperatureLabel]
  -[WATodayHeaderView setConditionsImageView:]
  -[WATodayHeaderView conditionsImageView]
  -[WATodayHeaderView setConditionsImage:]
  -[WATodayHeaderView conditionsImage]
  -[WATodayHeaderView temperatureHigh]
  -[WATodayHeaderView temperatureLow]
  -[WATodayHeaderView temperatureHighLowLabel]
  -[WATodayHeaderView conditionsLine1]
  -[WATodayHeaderView conditionsLabel1]
  -[WATodayHeaderView conditionsLine2]
  -[WATodayHeaderView conditionsLabel2]
  -[WATodayHeaderView setWeatherInformationVisualEffectView:]
  -[WATodayHeaderView weatherInformationVisualEffectView]
  -[WATodayHeaderView setConditionsLabel1:]
  -[WATodayHeaderView setConditionsLabel2:]
  -[WATodayHeaderView setTemperatureHighLowLabel:]
  -[WATodayHeaderView setConditionsLine1:]
  -[WATodayHeaderView setConditionsLine2:]
  -[WATodayHeaderView setTemperatureLow:]
  -[WATodayHeaderView setTemperatureHigh:]
  -[WATodayHeaderView pageFontSize]
  -[WATodayHeaderView setPageFontSize:]
  -[WATodayHeaderView pageDegreeFontSize]
  -[WATodayHeaderView setPageDegreeFontSize:]
  -[WATodayHeaderView pageBaselineOffset]
  -[WATodayHeaderView setPageBaselineOffset:]


WATodayPadViewStyle : NSObject <NSCopying>
 @property  long long orientation
 @property  unsigned long format
 @property  UIFont *locationFont
 @property  UIFont *temperatureFont
 @property  UIFont *conditionsFont
 @property  double labelLeadingMargin
 @property  double conditionsImageLeadingMargin
 @property  double temperatureLabelBaselineToConditionsImageViewBottom
 @property  double locationLabelBaselineToTemperatureLabelBaseline
 @property  double conditionsLabelBaselineToLocationLabelBaseline
 @property  double conditionsLabelBaselineToBottom

  // class methods
  +[WATodayPadViewStyle styleForScreenWithSize:orientation:]

  // instance methods
  -[WATodayPadViewStyle setOrientation:]
  -[WATodayPadViewStyle .cxx_destruct]
  -[WATodayPadViewStyle setFormat:]
  -[WATodayPadViewStyle init]
  -[WATodayPadViewStyle format]
  -[WATodayPadViewStyle orientation]
  -[WATodayPadViewStyle copyWithZone:]
  -[WATodayPadViewStyle initWithFormat:orientation:]
  -[WATodayPadViewStyle _setupForDefaultWithOrientation:]
  -[WATodayPadViewStyle _setupForGigantorWithOrientation:]
  -[WATodayPadViewStyle setTemperatureFont:]
  -[WATodayPadViewStyle setLocationFont:]
  -[WATodayPadViewStyle setConditionsFont:]
  -[WATodayPadViewStyle setLabelLeadingMargin:]
  -[WATodayPadViewStyle setConditionsImageLeadingMargin:]
  -[WATodayPadViewStyle setTemperatureLabelBaselineToConditionsImageViewBottom:]
  -[WATodayPadViewStyle setLocationLabelBaselineToTemperatureLabelBaseline:]
  -[WATodayPadViewStyle setConditionsLabelBaselineToLocationLabelBaseline:]
  -[WATodayPadViewStyle setConditionsLabelBaselineToBottom:]
  -[WATodayPadViewStyle temperatureFont]
  -[WATodayPadViewStyle locationFont]
  -[WATodayPadViewStyle conditionsFont]
  -[WATodayPadViewStyle labelLeadingMargin]
  -[WATodayPadViewStyle conditionsImageLeadingMargin]
  -[WATodayPadViewStyle temperatureLabelBaselineToConditionsImageViewBottom]
  -[WATodayPadViewStyle locationLabelBaselineToTemperatureLabelBaseline]
  -[WATodayPadViewStyle conditionsLabelBaselineToLocationLabelBaseline]
  -[WATodayPadViewStyle conditionsLabelBaselineToBottom]


ProgressController : NSObject
  // class methods
  +[ProgressController sharedProgressController]

  // instance methods
  -[ProgressController suspend]
  -[ProgressController .cxx_destruct]
  -[ProgressController _showSpinner]
  -[ProgressController _hideSpinner]
  -[ProgressController _setHideSpinnerTimer:]
  -[ProgressController userScrolled]
  -[ProgressController setLoadingData:]


WAAQICategory : NSObject
 @property  {_NSRange=QQ} range
 @property  UIColor *color

  // instance methods
  -[WAAQICategory range]
  -[WAAQICategory color]
  -[WAAQICategory .cxx_destruct]
  -[WAAQICategory initWithRange:color:]


WeatherAQIAttribution : NSObject
 @property  NSString *name
 @property  long long dataOrigination
 @property  NSString *stationLocationName
 @property  WFGeocodeRequest *geocodeRequest
 @property  NSObject<OS_dispatch_queue> *reverseGeocodingQueue
 @property  UIImage *cachedLogoImage
 @property  NSDate *stationLastReadDate
 @property  CLLocation *stationLocation
 @property  BOOL isValid

  // instance methods
  -[WeatherAQIAttribution name]
  -[WeatherAQIAttribution isValid]
  -[WeatherAQIAttribution .cxx_destruct]
  -[WeatherAQIAttribution setName:]
  -[WeatherAQIAttribution cachedLogoImage]
  -[WeatherAQIAttribution dataOrigination]
  -[WeatherAQIAttribution setDataOrigination:]
  -[WeatherAQIAttribution geocodeRequest]
  -[WeatherAQIAttribution setGeocodeRequest:]
  -[WeatherAQIAttribution reverseGeocodeStationLocation:]
  -[WeatherAQIAttribution stationLocation]
  -[WeatherAQIAttribution reverseGeocodingQueue]
  -[WeatherAQIAttribution setStationLocationName:]
  -[WeatherAQIAttribution initWithFoundationAttribution:]
  -[WeatherAQIAttribution stationLastReadDate]
  -[WeatherAQIAttribution stationLocationName]
  -[WeatherAQIAttribution setReverseGeocodingQueue:]


City : NSObject <WAIdentifiable>
 @property  NSDictionary *urlComponents
 @property  WFLocation *wfLocation
 @property  NSTimeZone *timeZone
 @property  NSError *lastUpdateError
 @property  unsigned long lastUpdateStatus
 @property  BOOL isUpdating
 @property  BOOL isRequestedByFrameworkClient
 @property  BOOL lockedForDemoMode
 @property  long long updateInterval
 @property  NSTimer *autoUpdateTimer
 @property  WFGeocodeRequest *activeGeocodeRequest
 @property  NSString *updateTimeString
 @property  NSHashTable *cityUpdateObservers
 @property  BOOL timeZoneIsFresh
 @property  NSString *fullName
 @property  unsigned long aqiDataAvailabilityStatusOverride
 @property  NSNumber *airQualityIdxOverride
 @property  NSNumber *airQualityCategoryOverride
 @property  unsigned long airQualitySignificanceOverride
 @property  NSString *weatherDisplayName
 @property  NSString *weatherLocationName
 @property  NSString *weatherLocationCitationName
 @property  BOOL isLocalWeatherCity
 @property  BOOL transient
 @property  NSString *woeid
 @property  NSString *name
 @property  NSString *locationID
 @property  NSString *state
 @property  NSString *countryCode
 @property  NSString *ISO3166CountryAbbreviation
 @property  WFTemperature *temperature
 @property  WFTemperature *feelsLike
 @property  long long conditionCode
 @property  unsigned long observationTime
 @property  unsigned long sunsetTime
 @property  unsigned long sunriseTime
 @property  unsigned long moonPhase
 @property  unsigned long uvIndex
 @property  double precipitationPast24Hours
 @property  NSURL *link
 @property  NSURL *deeplink
 @property  CLLocation *location
 @property  double longitude
 @property  double latitude
 @property  NSString *searchTitle
 @property  NSString *searchSubtitle
 @property  NSDate *timeZoneUpdateDate
 @property  NSDate *updateTime
 @property  float windChill
 @property  float windDirection
 @property  float windSpeed
 @property  float humidity
 @property  float visibility
 @property  float pressure
 @property  unsigned long pressureRising
 @property  float dewPoint
 @property  float heatIndex
 @property  BOOL isDay
 @property  BOOL autoUpdate
 @property  NSArray *hourlyForecasts
 @property  NSArray *dayForecasts
 @property  NSArray *severeWeatherEvents
 @property  WFNextHourPrecipitation *nextHourPrecipitation
 @property  NSURL *severeWeatherEventLearnMoreURL
 @property  unsigned long aqiDataAvailabilityStatus
 @property  NSNumber *airQualityIdx
 @property  NSNumber *airQualityCategory
 @property  NSString *airQualityScaleIdentifier
 @property  WFAQIScaleCategory *airQualityScaleCategory
 @property  unsigned long airQualitySignificance
 @property  NSString *airQualityRecommendation
 @property  BOOL airQualityTemporarilyUnavailable
 @property  BOOL airQualityForceHideRecommendation
 @property  WeatherAQIAttribution *airQualityAttribution
 @property  NSURL *airQualityLearnMoreURL
 @property  WFAQIScale *airQualityScale
 @property  WFAQIScaleCategory *airQualityCurrentScaleCategory
 @property  BOOL airQualityScaleIsAscending
 @property  BOOL airQualityScaleIsNumerical
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[City cityContainingLocation:expectedName:fromCities:]
  +[City _ISO8601Calendar]

  // instance methods
  -[City setTransient:]
  -[City pressure]
  -[City _isUpdating]
  -[City temperature]
  -[City setLatitude:]
  -[City setTimeZone:]
  -[City detailedDescription]
  -[City displayName]
  -[City setLongitude:]
  -[City fullName]
  -[City timeZone]
  -[City latitude]
  -[City name]
  -[City setCoordinate:]
  -[City setWeatherDisplayName:]
  -[City setIsUpdating:]
  -[City visibility]
  -[City severeWeatherEvents]
  -[City initWithDictionaryRepresentation:]
  -[City countryCode]
  -[City longitude]
  -[City coordinate]
  -[City setHourlyForecasts:]
  -[City weatherDisplayName]
  -[City updateTimeString]
  -[City setUpdateTime:]
  -[City .cxx_destruct]
  -[City woeid]
  -[City link]
  -[City setWeatherLocationName:]
  -[City setVisibility:]
  -[City isTransient]
  -[City dictionaryRepresentation]
  -[City update]
  -[City setLocation:]
  -[City setLink:]
  -[City setName:]
  -[City setFullName:]
  -[City setState:]
  -[City init]
  -[City hourlyForecasts]
  -[City isEqual:]
  -[City locationID]
  -[City nextHourPrecipitation]
  -[City identifier]
  -[City uvIndex]
  -[City setSevereWeatherEvents:]
  -[City location]
  -[City state]
  -[City isUpdating]
  -[City getName]
  -[City setPressure:]
  -[City setNextHourPrecipitation:]
  -[City setUpdateInterval:]
  -[City dewPoint]
  -[City dealloc]
  -[City updateInterval]
  -[City updateTime]
  -[City weatherLocationName]
  -[City setTemperature:]
  -[City isDay]
  -[City deeplink]
  -[City setAirQualityScale:]
  -[City setIsLocalWeatherCity:]
  -[City isLocalWeatherCity]
  -[City airQualityScale]
  -[City conditionCode]
  -[City setConditionCode:]
  -[City setDewPoint:]
  -[City heatIndex]
  -[City setHeatIndex:]
  -[City moonPhase]
  -[City setMoonPhase:]
  -[City windChill]
  -[City setWindChill:]
  -[City windSpeed]
  -[City setWindSpeed:]
  -[City windDirection]
  -[City setWindDirection:]
  -[City searchTitle]
  -[City setSearchTitle:]
  -[City _updateTimeZone]
  -[City setSunsetTime:]
  -[City sunsetTime]
  -[City ISO3166CountryAbbreviation]
  -[City feelsLike]
  -[City setFeelsLike:]
  -[City humidity]
  -[City setHumidity:]
  -[City pressureRising]
  -[City setPressureRising:]
  -[City setUVIndex:]
  -[City precipitationPast24Hours]
  -[City setPrecipitationPast24Hours:]
  -[City observationTime]
  -[City setObservationTime:]
  -[City airQualityIdx]
  -[City airQualityScaleCategory]
  -[City airQualityCategory]
  -[City dayForecasts]
  -[City updateCityForModel:]
  -[City removeUpdateObserver:]
  -[City addUpdateObserver:]
  -[City precipitationForecast]
  -[City _clearAutoUpdateTimer]
  -[City sunriseTime]
  -[City cityUpdateObservers]
  -[City setCityUpdateObservers:]
  -[City setAutoUpdateTimer:]
  -[City lockedForDemoMode]
  -[City weatherDataAge]
  -[City timeDigit]
  -[City _dataIsValid]
  -[City _notifyDidStartWeatherUpdate]
  -[City timeZoneUpdateDate]
  -[City timeZoneIsFresh]
  -[City updateTimeZoneWithCompletionBlock:]
  -[City activeGeocodeRequest]
  -[City setWfLocation:]
  -[City setActiveGeocodeRequest:]
  -[City setDayForecasts:]
  -[City setAirQualityIdx:]
  -[City setAirQualityScaleCategory:]
  -[City setAirQualityCategory:]
  -[City setLastUpdateStatus:]
  -[City setLastUpdateError:]
  -[City discardDataIfNeeded]
  -[City setTimeZoneUpdateDate:]
  -[City setISO3166CountryAbbreviation:]
  -[City setDeeplink:]
  -[City setSunriseTime:]
  -[City lastUpdateStatus]
  -[City distanceToLatitude:longitude:]
  -[City distanceToLocation:]
  -[City naturalLanguageDescriptionWithDescribedCondition:]
  -[City windDirectionAsString:]
  -[City primaryConditionForRange:]
  -[City locationOfTime:]
  -[City clearForecasts]
  -[City setAirQualityScaleIdentifier:]
  -[City setAirQualitySignificance:]
  -[City setAirQualityTemporarilyUnavailable:]
  -[City setAirQualityCurrentScaleCategory:]
  -[City setAirQualityRecommendation:]
  -[City setAirQualityAttribution:]
  -[City setAirQualityLearnMoreURL:]
  -[City airQualityCanUseDefaultAttribution]
  -[City updateCityForSevereWeatherEvents:]
  -[City _isValidLearnMoreURLForSevereEvent:]
  -[City setSevereWeatherEventLearnMoreURL:]
  -[City wfLocation]
  -[City aqiDataAvailabilityStatusOverride]
  -[City aqiDataAvailabilityStatusFromAppConfig]
  -[City airQualityTemporarilyUnavailable]
  -[City airQualityCategoryOverride]
  -[City airQualityIdxOverride]
  -[City airQualitySignificanceOverride]
  -[City setAutoUpdate:]
  -[City setIsDay:]
  -[City localWeatherDidBeginUpdate]
  -[City cityDidFinishUpdatingWithError:]
  -[City isUpdatingOrNoData]
  -[City cityAndState]
  -[City weatherLocationCitationName]
  -[City populateWithDataFromCity:]
  -[City containsLatitude:longitude:]
  -[City isDuplicateOfCity:]
  -[City naturalLanguageDescription]
  -[City _generateLocalizableStrings]
  -[City aqiDataAvailabilityStatus]
  -[City airQualitySignificance]
  -[City airQualityForceHideRecommendation]
  -[City airQualityScaleIsAscending]
  -[City airQualityScaleIsNumerical]
  -[City setUpdateTimeString:]
  -[City setWoeid:]
  -[City searchSubtitle]
  -[City setSearchSubtitle:]
  -[City lastUpdateError]
  -[City autoUpdate]
  -[City severeWeatherEventLearnMoreURL]
  -[City airQualityScaleIdentifier]
  -[City airQualityRecommendation]
  -[City airQualityAttribution]
  -[City airQualityLearnMoreURL]
  -[City airQualityCurrentScaleCategory]
  -[City isRequestedByFrameworkClient]
  -[City setIsRequestedByFrameworkClient:]
  -[City setLockedForDemoMode:]
  -[City autoUpdateTimer]
  -[City setAqiDataAvailabilityStatusOverride:]
  -[City setAirQualityIdxOverride:]
  -[City setAirQualityCategoryOverride:]
  -[City setAirQualitySignificanceOverride:]
  -[City urlComponents]


WeatherCloudPersistence : NSObject <WeatherPreferencesPersistence>
 @property  WeatherCloudMigrator *migrator
 @property  NSUbiquitousKeyValueStore *activeCloudStore
 @property  NSUbiquitousKeyValueStore *nonEncryptedStore
 @property  NSUbiquitousKeyValueStore *encryptedStore
 @property  <WeatherCloudPersistenceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WeatherCloudPersistence processIsWhitelistedForSync]
  +[WeatherCloudPersistence cloudPersistenceWithDelegate:]

  // instance methods
  -[WeatherCloudPersistence migrator]
  -[WeatherCloudPersistence objectForKey:]
  -[WeatherCloudPersistence synchronizeWithCompletionHandler:]
  -[WeatherCloudPersistence setObject:forKey:]
  -[WeatherCloudPersistence setBool:forKey:]
  -[WeatherCloudPersistence .cxx_destruct]
  -[WeatherCloudPersistence boolForKey:]
  -[WeatherCloudPersistence removeObjectForKey:]
  -[WeatherCloudPersistence synchronize]
  -[WeatherCloudPersistence setDelegate:]
  -[WeatherCloudPersistence init]
  -[WeatherCloudPersistence stringForKey:]
  -[WeatherCloudPersistence encryptedStore]
  -[WeatherCloudPersistence arrayForKey:]
  -[WeatherCloudPersistence encryptedStoreChanged:]
  -[WeatherCloudPersistence initWithDelegate:]
  -[WeatherCloudPersistence delegate]
  -[WeatherCloudPersistence dictionaryForKey:]
  -[WeatherCloudPersistence cloudCitiesChangedExternally:]
  -[WeatherCloudPersistence nonEncryptedStore]
  -[WeatherCloudPersistence setActiveCloudStore:]
  -[WeatherCloudPersistence activeCloudStore]
  -[WeatherCloudPersistence isInitialSyncNotification:]
  -[WeatherCloudPersistence setNonEncryptedStore:]
  -[WeatherCloudPersistence setEncryptedStore:]


WAGreetingView : UIView <WATodayModelObserver>
 @property  WATodayAutoupdatingLocationModel *todayModel
 @property  UILabel *natualLanguageDescriptionLabel
 @property  UIImageView *conditionImageView
 @property  UILabel *temperatureLabel
 @property  NSMutableArray *constraints
 @property  BOOL isViewCreated
 @property  UIColor *labelColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WAGreetingView updateView]
  -[WAGreetingView _temperature]
  -[WAGreetingView labelColor]
  -[WAGreetingView constraints]
  -[WAGreetingView updateConstraints]
  -[WAGreetingView .cxx_destruct]
  -[WAGreetingView setConstraints:]
  -[WAGreetingView startService]
  -[WAGreetingView init]
  -[WAGreetingView initWithFrame:]
  -[WAGreetingView setupConstraints]
  -[WAGreetingView dealloc]
  -[WAGreetingView initWithColor:]
  -[WAGreetingView setLabelColor:]
  -[WAGreetingView createViews]
  -[WAGreetingView todayModelWantsUpdate:]
  -[WAGreetingView todayModel:forecastWasUpdated:]
  -[WAGreetingView setTemperatureLabel:]
  -[WAGreetingView temperatureLabel]
  -[WAGreetingView _teardownWeatherModel]
  -[WAGreetingView todayModel]
  -[WAGreetingView _setupWeatherModel]
  -[WAGreetingView _conditionsImage]
  -[WAGreetingView setTodayModel:]
  -[WAGreetingView setIsViewCreated:]
  -[WAGreetingView updateLabelColors]
  -[WAGreetingView natualLanguageDescriptionLabel]
  -[WAGreetingView conditionImageView]
  -[WAGreetingView setNatualLanguageDescriptionLabel:]
  -[WAGreetingView setConditionImageView:]
  -[WAGreetingView isViewCreated]


WAAQIGradientStop : NSObject
 @property  UIColor *color
 @property  float location

  // class methods
  +[WAAQIGradientStop gradientStopWithColor:location:]

  // instance methods
  -[WAAQIGradientStop color]
  -[WAAQIGradientStop .cxx_destruct]
  -[WAAQIGradientStop location]
  -[WAAQIGradientStop initWithColor:location:]


WAAQIView : UIView
 @property  UILabel *aqiLabel
 @property  UILabel *aqiIndexLabel
 @property  UILabel *aqiAgencyLabel
 @property  UILabel *dash
 @property  WAAQIScaleView *aqiScaleView
 @property  UILabel *aqiCategoryLabel
 @property  UILabel *airQualityMetadataGradeLabel
 @property  UILabel *airQualityRecommendationLabel
 @property  UILabel *aqiCitationLabel
 @property  WAAQIViewStyler *styler
 @property  City *city
 @property  WAAQIAttributionStringBuilder *attributionStringBuilder
 @property  BOOL hideCitationString
 @property  BOOL hideRecommendationString
 @property  BOOL forceHideThisEntireView
 @property  unsigned long layoutMode
 @property  BOOL initialized
 @property  <WAAQIViewDelegate> *delegate

  // class methods
  +[WAAQIView createWeatherLabelWithLightColor:]

  // instance methods
  -[WAAQIView initialize]
  -[WAAQIView dash]
  -[WAAQIView setLayoutMode:]
  -[WAAQIView .cxx_destruct]
  -[WAAQIView accessibilityLabel]
  -[WAAQIView layoutSubviews]
  -[WAAQIView setCity:]
  -[WAAQIView setDelegate:]
  -[WAAQIView styler]
  -[WAAQIView initialized]
  -[WAAQIView sizeThatFits:]
  -[WAAQIView prepareForReuse]
  -[WAAQIView setInitialized:]
  -[WAAQIView accessibilityValue]
  -[WAAQIView isAccessibilityElement]
  -[WAAQIView accessibilityElementsHidden]
  -[WAAQIView delegate]
  -[WAAQIView city]
  -[WAAQIView layoutMode]
  -[WAAQIView handleTapGesture:]
  -[WAAQIView setStyler:]
  -[WAAQIView setupForLayoutTemporarilyUnavailable]
  -[WAAQIView setupForLayoutCompactScaleViewOneLinePlatterView:]
  -[WAAQIView setupForLayoutExtendedScaleView]
  -[WAAQIView setupForLayoutExtendedNoScaleView]
  -[WAAQIView aqiCitationLabel]
  -[WAAQIView aqiIndexLabel]
  -[WAAQIView aqiLabel]
  -[WAAQIView aqiAgencyLabel]
  -[WAAQIView aqiCategoryLabel]
  -[WAAQIView airQualityMetadataGradeLabel]
  -[WAAQIView airQualityRecommendationLabel]
  -[WAAQIView setHideCitationString:]
  -[WAAQIView setForceHideThisEntireView:]
  -[WAAQIView metadataLabelForCity:]
  -[WAAQIView scaleDisplayNameForCity:]
  -[WAAQIView drawableScaleForCity:]
  -[WAAQIView aqiScaleView]
  -[WAAQIView currentScaleCategoryLabelForCity:]
  -[WAAQIView setHideRecommendationString:]
  -[WAAQIView attributionStringBuilder]
  -[WAAQIView shouldInsertGlyphImage:]
  -[WAAQIView sizeForAQITemporarilyUnavailableThatFits:]
  -[WAAQIView sizeForAQIAvailableThatFits:]
  -[WAAQIView sizeForCompactOneLineLayoutWithScaleViewThatFits:platterView:]
  -[WAAQIView sizeForExtendedLayoutWithScaleViewThatFits:]
  -[WAAQIView sizeForLayoutWithoutScaleViewThatFits:]
  -[WAAQIView forceHideThisEntireView]
  -[WAAQIView sizeForTwoLineLayoutWithScaleViewTheFits:platterView:]
  -[WAAQIView setupForLayoutCompactScaleViewTwoLinesPlatterView:]
  -[WAAQIView hideRecommendationString]
  -[WAAQIView hideCitationString]
  -[WAAQIView hideEverything]
  -[WAAQIView layoutForCompactModeWithScaleInPlatterView:]
  -[WAAQIView layoutForExtendedModeWithScale]
  -[WAAQIView layoutForModeWithoutScale]
  -[WAAQIView layoutForModeAQITemporarilyUnavailable]
  -[WAAQIView adjustedFrame:basedOnFont:desiredBaseline:]
  -[WAAQIView rtlAdjustFrame:inBounds:]
  -[WAAQIView layoutForTwoLinesLayoutWithScaleInPlatterView:]
  -[WAAQIView updateWithCity:layoutMode:]
  -[WAAQIView contentMarginFromTop]
  -[WAAQIView setAqiLabel:]
  -[WAAQIView setAqiIndexLabel:]
  -[WAAQIView setAqiAgencyLabel:]
  -[WAAQIView setDash:]
  -[WAAQIView setAqiScaleView:]
  -[WAAQIView setAqiCategoryLabel:]
  -[WAAQIView setAirQualityMetadataGradeLabel:]
  -[WAAQIView setAirQualityRecommendationLabel:]
  -[WAAQIView setAqiCitationLabel:]
  -[WAAQIView setAttributionStringBuilder:]


WACurrentForecast : NSObject <NSCopying>
 @property  WFTemperature *temperature
 @property  WFTemperature *feelsLike
 @property  float windSpeed
 @property  float windDirection
 @property  float humidity
 @property  float dewPoint
 @property  float visibility
 @property  float pressure
 @property  unsigned long pressureRising
 @property  unsigned long UVIndex
 @property  float precipitationPast24Hours
 @property  long long conditionCode
 @property  unsigned long observationTime
 @property  NSString *providerName

  // class methods
  +[WACurrentForecast currentForecastForLocation:conditions:]

  // instance methods
  -[WACurrentForecast pressure]
  -[WACurrentForecast temperature]
  -[WACurrentForecast visibility]
  -[WACurrentForecast providerName]
  -[WACurrentForecast .cxx_destruct]
  -[WACurrentForecast setVisibility:]
  -[WACurrentForecast isEqual:]
  -[WACurrentForecast UVIndex]
  -[WACurrentForecast setProviderName:]
  -[WACurrentForecast setPressure:]
  -[WACurrentForecast dewPoint]
  -[WACurrentForecast copyWithZone:]
  -[WACurrentForecast setTemperature:]
  -[WACurrentForecast conditionCode]
  -[WACurrentForecast setConditionCode:]
  -[WACurrentForecast setDewPoint:]
  -[WACurrentForecast windSpeed]
  -[WACurrentForecast setWindSpeed:]
  -[WACurrentForecast windDirection]
  -[WACurrentForecast setWindDirection:]
  -[WACurrentForecast feelsLike]
  -[WACurrentForecast setFeelsLike:]
  -[WACurrentForecast humidity]
  -[WACurrentForecast setHumidity:]
  -[WACurrentForecast pressureRising]
  -[WACurrentForecast setPressureRising:]
  -[WACurrentForecast setUVIndex:]
  -[WACurrentForecast precipitationPast24Hours]
  -[WACurrentForecast setPrecipitationPast24Hours:]
  -[WACurrentForecast observationTime]
  -[WACurrentForecast setObservationTime:]


WeatherInMemoryDefaults : NSObject <WeatherPreferencesPersistence>
 @property  NSMutableDictionary *inMemoryStore
 @property  BOOL synchronizeWasCalled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WeatherInMemoryDefaults objectForKey:]
  -[WeatherInMemoryDefaults synchronizeWithCompletionHandler:]
  -[WeatherInMemoryDefaults setObject:forKey:]
  -[WeatherInMemoryDefaults setBool:forKey:]
  -[WeatherInMemoryDefaults .cxx_destruct]
  -[WeatherInMemoryDefaults boolForKey:]
  -[WeatherInMemoryDefaults removeObjectForKey:]
  -[WeatherInMemoryDefaults synchronize]
  -[WeatherInMemoryDefaults init]
  -[WeatherInMemoryDefaults stringForKey:]
  -[WeatherInMemoryDefaults arrayForKey:]
  -[WeatherInMemoryDefaults dictionaryForKey:]
  -[WeatherInMemoryDefaults inMemoryStore]
  -[WeatherInMemoryDefaults setInMemoryStore:]
  -[WeatherInMemoryDefaults synchronizeWasCalled]


WeatherCloudPreferences : NSObject <WeatherCloudPersistenceDelegate>
 @property  <WeatherPreferencesPersistence> *cloudStore
 @property  WeatherPreferences *localPreferences
 @property  <SynchronizedDefaultsDelegate> *syncDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WeatherCloudPreferences .cxx_destruct]
  -[WeatherCloudPreferences _synchronize:]
  -[WeatherCloudPreferences forceSync]
  -[WeatherCloudPreferences cloudStore]
  -[WeatherCloudPreferences setSyncDelegate:]
  -[WeatherCloudPreferences cloudCitiesChangedExternally:]
  -[WeatherCloudPreferences cloudPersistenceDidSynchronize:]
  -[WeatherCloudPreferences initWithLocalPreferences:persistence:]
  -[WeatherCloudPreferences setLocalPreferences:]
  -[WeatherCloudPreferences setCloudStore:]
  -[WeatherCloudPreferences purgeLegacyCloudCities]
  -[WeatherCloudPreferences localPreferences]
  -[WeatherCloudPreferences reconcileCloudCities:withLocal:isInitialSync:]
  -[WeatherCloudPreferences areCloudCities:equalToLocalCities:]
  -[WeatherCloudPreferences updateLocalStoreWithRemoteChanges:]
  -[WeatherCloudPreferences saveCitiesToCloud:]
  -[WeatherCloudPreferences syncDelegate]
  -[WeatherCloudPreferences citiesByEnforcingSizeLimitOnResults:]
  -[WeatherCloudPreferences prepareLocalCitiesForReconciliation:isInitialSync:]
  -[WeatherCloudPreferences cloudRepresentationFromCities:]
  -[WeatherCloudPreferences shouldWriteCitiesToCloud:]
  -[WeatherCloudPreferences setCloudStoreCities:]
  -[WeatherCloudPreferences initWithLocalPreferences:]


WAForecastOperation : NSOperation
 @property  WFWeatherConditions *currentWeatherConditions
 @property  WACurrentForecast *currentConditions
 @property  WFAirQualityConditions *airQualityConditions
 @property  NSArray *dailyForecastConditions
 @property  NSArray *hourlyForecastConditions
 @property  NSArray *hourlyForecasts
 @property  NSArray *dailyForecasts
 @property  NSError *error
 @property  NSDate *sunset
 @property  NSDate *sunrise
 @property  WFLocation *location
 @property  NSDictionary *links
 @property  NSArray *severeWeatherEvents
 @property  NSArray *changeForecasts
 @property  WFNextHourPrecipitation *nextHourPrecipitation
 @property  WFAggregateCommonRequest *aggregateRequest
 @property  BOOL isDay
 @property  NSCalendar *calendar
 @property  NSLocale *locale
 @property  NSString *trackingParameter
 @property  BOOL shouldAttachRawAPIData
 @property  NSData *rawAPIData
 @property  City *city
 @property  int units
 @property  WFRequestOptions *requestOptions
 @property  WFServiceConnection *connection
 @property  BOOL canGeocode
 @property  BOOL isLocationInGeocodeSample
 @property  WAForecastModel *forecastModel

  // instance methods
  -[WAForecastOperation rawAPIData]
  -[WAForecastOperation setLocale:]
  -[WAForecastOperation dailyForecasts]
  -[WAForecastOperation severeWeatherEvents]
  -[WAForecastOperation main]
  -[WAForecastOperation setRequestOptions:]
  -[WAForecastOperation setHourlyForecasts:]
  -[WAForecastOperation .cxx_destruct]
  -[WAForecastOperation links]
  -[WAForecastOperation setTrackingParameter:]
  -[WAForecastOperation calendar]
  -[WAForecastOperation setLocation:]
  -[WAForecastOperation sunset]
  -[WAForecastOperation setConnection:]
  -[WAForecastOperation setCity:]
  -[WAForecastOperation changeForecasts]
  -[WAForecastOperation currentConditions]
  -[WAForecastOperation hourlyForecasts]
  -[WAForecastOperation setRawAPIData:]
  -[WAForecastOperation connection]
  -[WAForecastOperation locale]
  -[WAForecastOperation nextHourPrecipitation]
  -[WAForecastOperation setChangeForecasts:]
  -[WAForecastOperation setSevereWeatherEvents:]
  -[WAForecastOperation location]
  -[WAForecastOperation units]
  -[WAForecastOperation setUnits:]
  -[WAForecastOperation cancel]
  -[WAForecastOperation sunrise]
  -[WAForecastOperation _failWithError:]
  -[WAForecastOperation setNextHourPrecipitation:]
  -[WAForecastOperation requestOptions]
  -[WAForecastOperation setLinks:]
  -[WAForecastOperation setCurrentConditions:]
  -[WAForecastOperation city]
  -[WAForecastOperation setCalendar:]
  -[WAForecastOperation setDailyForecasts:]
  -[WAForecastOperation setError:]
  -[WAForecastOperation error]
  -[WAForecastOperation isDay]
  -[WAForecastOperation trackingParameter]
  -[WAForecastOperation airQualityConditions]
  -[WAForecastOperation setAirQualityConditions:]
  -[WAForecastOperation setSunrise:]
  -[WAForecastOperation setSunset:]
  -[WAForecastOperation forecastModel]
  -[WAForecastOperation initWithLocation:onConnection:]
  -[WAForecastOperation setIsDay:]
  -[WAForecastOperation initWithCity:withUnits:onConnection:]
  -[WAForecastOperation initWithCity:withUnits:canGeocode:onConnection:]
  -[WAForecastOperation initWithCity:withUnits:requestOptions:canGeocode:onConnection:]
  -[WAForecastOperation isLocationInGeocodeSample]
  -[WAForecastOperation _needsGeolocation]
  -[WAForecastOperation shouldRequestChangeInConditions]
  -[WAForecastOperation setCurrentWeatherConditions:]
  -[WAForecastOperation setDailyForecastConditions:]
  -[WAForecastOperation setHourlyForecastConditions:]
  -[WAForecastOperation currentWeatherConditions]
  -[WAForecastOperation shouldAttachRawAPIData]
  -[WAForecastOperation setAggregateRequest:]
  -[WAForecastOperation aggregateRequest]
  -[WAForecastOperation _determineSunriseAndSunset]
  -[WAForecastOperation _mapReferralLinks]
  -[WAForecastOperation dailyForecastConditions]
  -[WAForecastOperation hourlyForecastConditions]
  -[WAForecastOperation initWithCity:onConnection:]
  -[WAForecastOperation setShouldAttachRawAPIData:]
  -[WAForecastOperation canGeocode]
  -[WAForecastOperation setCanGeocode:]
  -[WAForecastOperation setIsLocationInGeocodeSample:]


CityPersistenceConversions : NSObject
  // class methods
  +[CityPersistenceConversions cityFromDictionary:]
  +[CityPersistenceConversions dictionaryRepresentationOfCity:]
  +[CityPersistenceConversions cloudDictionaryRepresentationOfCity:]
  +[CityPersistenceConversions cityFromCloudDictionary:]
  +[CityPersistenceConversions temperatureFromDictionaryRepresentation:]
  +[CityPersistenceConversions populateCity:withDayForecastDictionaries:]
  +[CityPersistenceConversions populateCity:withHourlyForecastDictionaries:]
  +[CityPersistenceConversions scaleCategoryFromDictionaryRepresentation:]
  +[CityPersistenceConversions isCityValid:]
  +[CityPersistenceConversions weatherDetailsDictionaryFromCity:]
  +[CityPersistenceConversions dayForecastDictionariesFromCity:]
  +[CityPersistenceConversions hourlyForecastDictionariesFromCity:]
  +[CityPersistenceConversions dictionaryRepresentationOfTemperature:]
  +[CityPersistenceConversions dictionaryRepresentationOfScaleCategory:]
  +[CityPersistenceConversions cityDictionaryHasValidCoordinates:]
  +[CityPersistenceConversions cityFromALCity:]
  +[CityPersistenceConversions cloudDictionaryRepresentationOfALCity:]


WeatherInternalPreferences : NSUserDefaults
 @property  <WeatherPreferencesPersistence> *persistence
 @property  BOOL isInternalInstall
 @property  unsigned long deviceInactivityThreshold
 @property  BOOL isV3Enabled
 @property  BOOL shouldShowUpdateTimestamp

  // class methods
  +[WeatherInternalPreferences sharedInternalPreferences]

  // instance methods
  -[WeatherInternalPreferences isInternalInstall]
  -[WeatherInternalPreferences setPersistence:]
  -[WeatherInternalPreferences persistence]
  -[WeatherInternalPreferences .cxx_destruct]
  -[WeatherInternalPreferences deviceInactivityThreshold]
  -[WeatherInternalPreferences isV3Enabled]
  -[WeatherInternalPreferences shouldShowUpdateTimestamp]


WeatherVisibilityFormatter : NSLengthFormatter
 @property  NSLocale *locale

  // class methods
  +[WeatherVisibilityFormatter convenienceFormatter]

  // instance methods
  -[WeatherVisibilityFormatter setLocale:]
  -[WeatherVisibilityFormatter .cxx_destruct]
  -[WeatherVisibilityFormatter init]
  -[WeatherVisibilityFormatter locale]
  -[WeatherVisibilityFormatter stringFromDistance:isDataMetric:]
  -[WeatherVisibilityFormatter stringFromKilometers:]
  -[WeatherVisibilityFormatter stringFromMiles:]


TWCCityUpdater : NSObject
 @property  WALocationPrivacySampler *locationGeocodingSampler
 @property  WAForecastModelController *forecastModelController
 @property  <WeatherUpdaterDelegate> *delegate
 @property  NSLocale *locale
 @property  NSString *trackingParameter

  // class methods
  +[TWCCityUpdater sharedCityUpdater]

  // instance methods
  -[TWCCityUpdater setLocale:]
  -[TWCCityUpdater .cxx_destruct]
  -[TWCCityUpdater setTrackingParameter:]
  -[TWCCityUpdater setDelegate:]
  -[TWCCityUpdater init]
  -[TWCCityUpdater locale]
  -[TWCCityUpdater cancel]
  -[TWCCityUpdater delegate]
  -[TWCCityUpdater trackingParameter]
  -[TWCCityUpdater isUpdatingCity:]
  -[TWCCityUpdater updateWeatherForCity:]
  -[TWCCityUpdater setForecastModelController:]
  -[TWCCityUpdater forecastModelController]
  -[TWCCityUpdater updateWeatherForCities:withCompletionHandler:]
  -[TWCCityUpdater configureWithLocationGeocodingSampler:]
  -[TWCCityUpdater updateWeatherForCities:]
  -[TWCCityUpdater locationGeocodingSampler]


WASevereWeatherStringBuilder : NSObject
  // class methods
  +[WASevereWeatherStringBuilder headlineForEvents:shouldUppercase:]
  +[WASevereWeatherStringBuilder descriptionForEvents:includeLearnMore:useSentenceCase:]
  +[WASevereWeatherStringBuilder _displayDescriptionForEvent:useSentenceCase:isFirstEvent:]
  +[WASevereWeatherStringBuilder _hasImportantEvent:]
  +[WASevereWeatherStringBuilder atttributedHeadlineForEvents:]
  +[WASevereWeatherStringBuilder headlineForEvents:]
  +[WASevereWeatherStringBuilder atttributedDescriptionForEvents:includeLearnMore:useSentenceCase:]
  +[WASevereWeatherStringBuilder _capitalizeFirstWordOfString:]
  +[WASevereWeatherStringBuilder descriptionForEvents:includeLearnMore:]
  +[WASevereWeatherStringBuilder attributedImportantHeadlineForEvents:]
  +[WASevereWeatherStringBuilder importantHeadlineForEvents:]
  +[WASevereWeatherStringBuilder atttributedDescriptionForEvents:includeLearnMore:]


WeatherPreferences : NSObject <WFTemperatureUnitObserver, NSURLConnectionDelegate>
 @property  BOOL userGroupPrefsLockedWhenInit
 @property  int userTemperatureUnit
 @property  WeatherCloudPreferences *cloudPreferences
 @property  <SynchronizedDefaultsDelegate> *syncDelegate
 @property  BOOL isLocalWeatherEnabled
 @property  City *localWeatherCity
 @property  NSDate *lastUpdated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WeatherPreferences preferencesWithPersistence:]
  +[WeatherPreferences performUpgradeOfPersistence:fileManager:error:]
  +[WeatherPreferences serviceDebuggingPath]
  +[WeatherPreferences userDefaultsPersistence]
  +[WeatherPreferences sharedPreferences]
  +[WeatherPreferences readInternalDefaultValueForKey:]

  // instance methods
  -[WeatherPreferences UUID]
  -[WeatherPreferences initWithPersistence:]
  -[WeatherPreferences setCelsius:]
  -[WeatherPreferences userTemperatureUnit]
  -[WeatherPreferences serviceDebugging]
  -[WeatherPreferences .cxx_destruct]
  -[WeatherPreferences init]
  -[WeatherPreferences lastUpdated]
  -[WeatherPreferences _cacheDirectoryPath]
  -[WeatherPreferences readInternalDefaultValueForKey:]
  -[WeatherPreferences resetLocale]
  -[WeatherPreferences setDefaultCities:]
  -[WeatherPreferences temperatureUnitObserver:didChangeTemperatureUnitTo:]
  -[WeatherPreferences isCelsius]
  -[WeatherPreferences localWeatherCity]
  -[WeatherPreferences loadSavedCities]
  -[WeatherPreferences readDefaultValueForKey:]
  -[WeatherPreferences setSyncDelegate:]
  -[WeatherPreferences setLocalWeatherEnabled:]
  -[WeatherPreferences writeDefaultValue:forKey:]
  -[WeatherPreferences synchronizeStateToDisk]
  -[WeatherPreferences saveToDiskWithLocalWeatherCity:]
  -[WeatherPreferences saveToDiskWithCities:]
  -[WeatherPreferences saveToDiskWithCities:activeCity:]
  -[WeatherPreferences syncDelegate]
  -[WeatherPreferences _defaultCities]
  -[WeatherPreferences areCitiesDefault:]
  -[WeatherPreferences setupUbiquitousStoreIfNeeded]
  -[WeatherPreferences cloudPreferences]
  -[WeatherPreferences setCloudPreferences:]
  -[WeatherPreferences setDefaultSelectedCityID:]
  -[WeatherPreferences synchronizeStateToDiskDoNotify:]
  -[WeatherPreferences isLocalWeatherEnabled]
  -[WeatherPreferences _defaultsCurrent]
  -[WeatherPreferences cityFromPreferencesDictionary:]
  -[WeatherPreferences preferencesDictionaryForCity:]
  -[WeatherPreferences _defaultsAreValid]
  -[WeatherPreferences citiesByConsolidatingDuplicates:originalOrder:]
  -[WeatherPreferences loadActiveCity]
  -[WeatherPreferences setActiveCity:]
  -[WeatherPreferences citiesByConsolidatingDuplicatesInBucket:]
  -[WeatherPreferences saveToUbiquitousStore]
  -[WeatherPreferences ensureValidSelectedCityID]
  -[WeatherPreferences adjustPrefsForLocalWeatherEnabled:]
  -[WeatherPreferences registerTemperatureUnits]
  -[WeatherPreferences readTemperatureUnits]
  -[WeatherPreferences saveToDiskWithCity:forActiveIndex:]
  -[WeatherPreferences loadDefaultSelectedCity]
  -[WeatherPreferences loadDefaultSelectedCityID]
  -[WeatherPreferences setDefaultSelectedCity:]
  -[WeatherPreferences forceSyncCloudPreferences]
  -[WeatherPreferences twcLogoURL]
  -[WeatherPreferences twcLogoURL:]
  -[WeatherPreferences _clearCachedObjects]
  -[WeatherPreferences userGroupPrefsLockedWhenInit]
  -[WeatherPreferences setUserGroupPrefsLockedWhenInit:]


WAWeatherPlatterViewController : UIViewController <WFTemperatureUnitObserver>
 @property  WFURLComponents *URLComponents
 @property  WATodayModel *model
 @property  long long status
 @property  UIView *backgroundView
 @property  WATodayHeaderView *headerView
 @property  UIView *afterHeaderDividerLineView
 @property  WAAQIView *aqiView
 @property  UIView *afterAQIDividerLineView
 @property  NSArray *hourlyForecastViews
 @property  UIStackView *hourlyBeltView
 @property  NSMutableArray *constraints
 @property  NSURL *commitURL
 @property  City *city
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} lastBounds
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WAWeatherPlatterViewController defaultViewHeight]

  // instance methods
  -[WAWeatherPlatterViewController updateViewConstraints]
  -[WAWeatherPlatterViewController initWithLocation:]
  -[WAWeatherPlatterViewController setURLComponents:]
  -[WAWeatherPlatterViewController initWithURLComponents:]
  -[WAWeatherPlatterViewController constraints]
  -[WAWeatherPlatterViewController .cxx_destruct]
  -[WAWeatherPlatterViewController viewDidLoad]
  -[WAWeatherPlatterViewController setConstraints:]
  -[WAWeatherPlatterViewController setCity:]
  -[WAWeatherPlatterViewController setHeaderView:]
  -[WAWeatherPlatterViewController init]
  -[WAWeatherPlatterViewController URLComponents]
  -[WAWeatherPlatterViewController viewDidLayoutSubviews]
  -[WAWeatherPlatterViewController model]
  -[WAWeatherPlatterViewController headerView]
  -[WAWeatherPlatterViewController status]
  -[WAWeatherPlatterViewController setBackgroundView:]
  -[WAWeatherPlatterViewController aqiView]
  -[WAWeatherPlatterViewController setStatus:]
  -[WAWeatherPlatterViewController setModel:]
  -[WAWeatherPlatterViewController setupConstraints]
  -[WAWeatherPlatterViewController _updateStatus:]
  -[WAWeatherPlatterViewController city]
  -[WAWeatherPlatterViewController backgroundView]
  -[WAWeatherPlatterViewController _canShowWhileLocked]
  -[WAWeatherPlatterViewController initWithURL:]
  -[WAWeatherPlatterViewController temperatureUnitObserver:didChangeTemperatureUnitTo:]
  -[WAWeatherPlatterViewController setupHeaderView]
  -[WAWeatherPlatterViewController _updateViewContent]
  -[WAWeatherPlatterViewController setLastBounds:]
  -[WAWeatherPlatterViewController preferredContentWidth]
  -[WAWeatherPlatterViewController _kickoffLoadingWithLocation:orPerhapsALocationString:]
  -[WAWeatherPlatterViewController _contentSizeDidUpdate:]
  -[WAWeatherPlatterViewController setupBackgroundView]
  -[WAWeatherPlatterViewController setupAfterHeaderDividerView]
  -[WAWeatherPlatterViewController setupAQIView]
  -[WAWeatherPlatterViewController setupAfterAQIDividerView]
  -[WAWeatherPlatterViewController setupHourlyForecast]
  -[WAWeatherPlatterViewController lastBounds]
  -[WAWeatherPlatterViewController afterHeaderDividerLineView]
  -[WAWeatherPlatterViewController setAfterHeaderDividerLineView:]
  -[WAWeatherPlatterViewController setAqiView:]
  -[WAWeatherPlatterViewController afterAQIDividerLineView]
  -[WAWeatherPlatterViewController setAfterAQIDividerLineView:]
  -[WAWeatherPlatterViewController hourlyBeltView]
  -[WAWeatherPlatterViewController setHourlyBeltView:]
  -[WAWeatherPlatterViewController setHourlyForecastViews:]
  -[WAWeatherPlatterViewController hourlyForecastViews]
  -[WAWeatherPlatterViewController _showingAQIViewForCity:]
  -[WAWeatherPlatterViewController _buildModelForLocation:]
  -[WAWeatherPlatterViewController _loadAQIDataForLocation:]
  -[WAWeatherPlatterViewController setCommitURL:]
  -[WAWeatherPlatterViewController _updateViewWithAQIFromCity:]
  -[WAWeatherPlatterViewController initWithLocationString:]
  -[WAWeatherPlatterViewController commitURL]


WAGradientProvider : NSObject
  // instance methods
  -[WAGradientProvider mixedGradientForSunheight:hourAngle:condition:latitude:]
  -[WAGradientProvider mixedColorsForIndex:solarHeight:condition:latitude:]
  -[WAGradientProvider gradientForConditionCode:isDay:]
  -[WAGradientProvider getTopColor:middleColor:bottomColor:gradientStopPoint:forCity:date:]


WAForecastModel : NSObject <NSCopying>
 @property  City *city
 @property  int unit
 @property  WFLocation *location
 @property  WACurrentForecast *currentConditions
 @property  WFAirQualityConditions *airQualityConditions
 @property  NSArray *hourlyForecasts
 @property  NSArray *dailyForecasts
 @property  NSDate *sunrise
 @property  NSDate *sunset
 @property  NSURL *deepLink
 @property  NSURL *link
 @property  NSArray *severeWeatherEvents
 @property  NSArray *changeForecasts
 @property  WFNextHourPrecipitation *nextHourPrecipitation
 @property  WFWeatherConditions *underlyingCurrentConditions
 @property  NSArray *underlyingHourlyConditions
 @property  NSArray *underlyingDailyConditions
 @property  BOOL isPopulated

  // instance methods
  -[WAForecastModel unit]
  -[WAForecastModel dailyForecasts]
  -[WAForecastModel severeWeatherEvents]
  -[WAForecastModel setHourlyForecasts:]
  -[WAForecastModel .cxx_destruct]
  -[WAForecastModel link]
  -[WAForecastModel setLocation:]
  -[WAForecastModel setLink:]
  -[WAForecastModel sunset]
  -[WAForecastModel setCity:]
  -[WAForecastModel deepLink]
  -[WAForecastModel changeForecasts]
  -[WAForecastModel currentConditions]
  -[WAForecastModel hourlyForecasts]
  -[WAForecastModel isEqual:]
  -[WAForecastModel nextHourPrecipitation]
  -[WAForecastModel setChangeForecasts:]
  -[WAForecastModel setSevereWeatherEvents:]
  -[WAForecastModel location]
  -[WAForecastModel sunrise]
  -[WAForecastModel setNextHourPrecipitation:]
  -[WAForecastModel setDeepLink:]
  -[WAForecastModel setCurrentConditions:]
  -[WAForecastModel city]
  -[WAForecastModel copyWithZone:]
  -[WAForecastModel setDailyForecasts:]
  -[WAForecastModel setUnit:]
  -[WAForecastModel airQualityConditions]
  -[WAForecastModel setAirQualityConditions:]
  -[WAForecastModel setSunrise:]
  -[WAForecastModel setSunset:]
  -[WAForecastModel isPopulated]
  -[WAForecastModel setUnderlyingCurrentConditions:]
  -[WAForecastModel setUnderlyingHourlyConditions:]
  -[WAForecastModel setUnderlyingDailyConditions:]
  -[WAForecastModel underlyingCurrentConditions]
  -[WAForecastModel underlyingHourlyConditions]
  -[WAForecastModel underlyingDailyConditions]


WALegibilityLabel : UIView
 @property  double strength
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSAttributedString *attributedText
 @property  NSString *text
 @property  UIColor *textColor
 @property  UIFont *font
 @property  long long numberOfLines
 @property  BOOL adjustsFontSizeToFitWidth
 @property  double minimumScaleFactor
 @property  double firstBaselineOffsetFromBottom
 @property  double lastBaselineOffsetFromBottom
 @property  double baselineOffset

  // instance methods
  -[WALegibilityLabel viewForFirstBaselineLayout]
  -[WALegibilityLabel setAttributedText:]
  -[WALegibilityLabel attributedText]
  -[WALegibilityLabel _markOurselfDirty]
  -[WALegibilityLabel setText:]
  -[WALegibilityLabel initWithCoder:]
  -[WALegibilityLabel minimumScaleFactor]
  -[WALegibilityLabel baselineOffset]
  -[WALegibilityLabel viewForLastBaselineLayout]
  -[WALegibilityLabel setFont:]
  -[WALegibilityLabel initWithSettings:strength:]
  -[WALegibilityLabel updateConstraints]
  -[WALegibilityLabel numberOfLines]
  -[WALegibilityLabel setOptions:]
  -[WALegibilityLabel .cxx_destruct]
  -[WALegibilityLabel textColor]
  -[WALegibilityLabel setFrame:]
  -[WALegibilityLabel layoutSubviews]
  -[WALegibilityLabel setAdjustsFontSizeToFitWidth:]
  -[WALegibilityLabel setLegibilitySettings:]
  -[WALegibilityLabel setMinimumScaleFactor:]
  -[WALegibilityLabel updateForChangedSettings:]
  -[WALegibilityLabel adjustsFontSizeToFitWidth]
  -[WALegibilityLabel firstBaselineOffsetFromBottom]
  -[WALegibilityLabel sizeThatFits:]
  -[WALegibilityLabel setTextColor:]
  -[WALegibilityLabel font]
  -[WALegibilityLabel setNumberOfLines:]
  -[WALegibilityLabel _updateLabelForLegibilitySettings]
  -[WALegibilityLabel initWithFrame:]
  -[WALegibilityLabel strength]
  -[WALegibilityLabel setStrength:]
  -[WALegibilityLabel lastBaselineOffsetFromBottom]
  -[WALegibilityLabel setBounds:]
  -[WALegibilityLabel _updateLegibilityView]
  -[WALegibilityLabel text]
  -[WALegibilityLabel legibilitySettings]
  -[WALegibilityLabel initWithSettings:strength:text:font:options:]
  -[WALegibilityLabel initWithSettings:strength:text:font:]
  -[WALegibilityLabel _layoutGuideOffsetFromBottom:]


WeatherOpenURLHelper : NSObject
  // class methods
  +[WeatherOpenURLHelper URLForWeatherCityComponents:]
  +[WeatherOpenURLHelper cityFromURLComponents:listedCities:]
  +[WeatherOpenURLHelper handleOpenURL:withContainerViewController:completion:]
  +[WeatherOpenURLHelper cityFromURL:withContainerViewController:]
  +[WeatherOpenURLHelper displayCity:usingController:completion:]
  +[WeatherOpenURLHelper presentAddTransientCityDialog:usingController:]
  +[WeatherOpenURLHelper transientCityFromURLComponents:]
  +[WeatherOpenURLHelper URLForCity:]
  +[WeatherOpenURLHelper handleOpenURL:withContainerViewController:]


WAAQIViewStyler : NSObject
  // class methods
  +[WAAQIViewStyler shadowColor]
  +[WAAQIViewStyler textColorWithLightLabel:]

  // instance methods
  -[WAAQIViewStyler styledAQIMetadataSourceText:]
  -[WAAQIViewStyler styledAQIMetadataGradeText:]
  -[WAAQIViewStyler styledAQIMetadataCitationText:attribution:shouldInsertGlyph:]
  -[WAAQIViewStyler styledAQIText:mode:]
  -[WAAQIViewStyler styledAQILocalizedIndexText:mode:]
  -[WAAQIViewStyler styledAQICategoryText:mode:]
  -[WAAQIViewStyler styledDashWithLabelColor:]
  -[WAAQIViewStyler styledAQIMetadataRecommendationText:]
  -[WAAQIViewStyler stringWithLogoImageFromText:attribution:attr:]


WAForecastModelController : NSObject
 @property  NSOperationQueue *forecastOperationQueue
 @property  NSObject<OS_dispatch_queue> *incomingRequestQueue
 @property  NSObject<OS_dispatch_queue> *completionHandlerQueue
 @property  NSMutableSet *updatingCities
 @property  NSMutableDictionary *completionHandlersForCity
 @property  WFServiceConnection *connection
 @property  ^{ct_green_tea_logger_s=} greenTeaLogger
 @property  NSOperationQueue *priorityForecastOperationQueue
 @property  NSMutableSet *priorityUpdatingCities
 @property  NSMutableDictionary *priorityCompletionHandlersForCity
 @property  NSString *trackingParameter
 @property  WFWeatherStoreService *store
 @property  WALocationPrivacySampler *locationGeocodingSampler

  // instance methods
  -[WAForecastModelController setIncomingRequestQueue:]
  -[WAForecastModelController .cxx_destruct]
  -[WAForecastModelController setTrackingParameter:]
  -[WAForecastModelController setConnection:]
  -[WAForecastModelController incomingRequestQueue]
  -[WAForecastModelController init]
  -[WAForecastModelController connection]
  -[WAForecastModelController store]
  -[WAForecastModelController greenTeaLogger]
  -[WAForecastModelController dealloc]
  -[WAForecastModelController trackingParameter]
  -[WAForecastModelController setGreenTeaLogger:]
  -[WAForecastModelController completionHandlerQueue]
  -[WAForecastModelController setLocationGeocodingSampler:]
  -[WAForecastModelController isCityBeingUpdated:]
  -[WAForecastModelController cancelAllFetchRequests]
  -[WAForecastModelController fetchForecastForCity:completion:]
  -[WAForecastModelController fetchForecastForCities:completion:]
  -[WAForecastModelController locationGeocodingSampler]
  -[WAForecastModelController setForecastOperationQueue:]
  -[WAForecastModelController forecastOperationQueue]
  -[WAForecastModelController setCompletionHandlerQueue:]
  -[WAForecastModelController setUpdatingCities:]
  -[WAForecastModelController setCompletionHandlersForCity:]
  -[WAForecastModelController isPriorityForecastOperationsEnabled]
  -[WAForecastModelController setPriorityForecastOperationQueue:]
  -[WAForecastModelController priorityForecastOperationQueue]
  -[WAForecastModelController setPriorityUpdatingCities:]
  -[WAForecastModelController setPriorityCompletionHandlersForCity:]
  -[WAForecastModelController updatingCities]
  -[WAForecastModelController isPriorityCity:]
  -[WAForecastModelController isPriorityCityBeingUpdated:]
  -[WAForecastModelController priorityUpdatingCities]
  -[WAForecastModelController fetchForecastForCity:withUnits:completion:]
  -[WAForecastModelController fetchForecastForCity:withUnits:requestOptions:completion:]
  -[WAForecastModelController _queue_executeFetchForCity:withUnits:requestOptions:completion:]
  -[WAForecastModelController _queue_executeFetchForCity:completion:]
  -[WAForecastModelController priorityCompletionHandlersForCity]
  -[WAForecastModelController _queue_executeFetchForCity:withUnits:requestOptions:completion:completionHandlersForCity:updatingCities:]
  -[WAForecastModelController completionHandlersForCity]
  -[WAForecastModelController _commaSeparatedNamesForUpdatingCities:]
  -[WAForecastModelController _handleForecastOperationCompletion:]
  -[WAForecastModelController _commaSeparatedPriorityUpdatingCitiesNames]
  -[WAForecastModelController _commaSeparatedUpdatingCitiesNames]


WAAQIAttributionStringBuilder : NSObject
  // instance methods
  -[WAAQIAttributionStringBuilder buildAttributionStringFromCity:]
  -[WAAQIAttributionStringBuilder stationStringWithTimeElapsedFromCity:]


WAHourlyForecast : NSObject <NSCopying>
 @property  unsigned long eventType
 @property  NSString *time
 @property  long long hourIndex
 @property  WFTemperature *temperature
 @property  NSString *forecastDetail
 @property  long long conditionCode
 @property  double percentPrecipitation

  // class methods
  +[WAHourlyForecast TimeValueFromString:]
  +[WAHourlyForecast hourlyForecastForLocation:conditions:sunriseDateComponents:sunsetDateComponents:]

  // instance methods
  -[WAHourlyForecast temperature]
  -[WAHourlyForecast setTime:]
  -[WAHourlyForecast .cxx_destruct]
  -[WAHourlyForecast isEqual:]
  -[WAHourlyForecast time]
  -[WAHourlyForecast eventType]
  -[WAHourlyForecast copyWithZone:]
  -[WAHourlyForecast setEventType:]
  -[WAHourlyForecast setTemperature:]
  -[WAHourlyForecast conditionCode]
  -[WAHourlyForecast setConditionCode:]
  -[WAHourlyForecast percentPrecipitation]
  -[WAHourlyForecast setPercentPrecipitation:]
  -[WAHourlyForecast forecastDetail]
  -[WAHourlyForecast setHourIndex:]
  -[WAHourlyForecast hourIndex]
  -[WAHourlyForecast setForecastDetail:]


WAHourlyForecastParser : NSObject
  // class methods
  +[WAHourlyForecastParser parseForecasts:temperature:currentTime:condition:sunrise:sunset:]
  +[WAHourlyForecastParser addSunEventIntoForecasts:eventType:forecastDetail:eventTime:currentTime:]
  +[WAHourlyForecastParser parseForecasts:temperature:hour:condition:sunrise:sunset:]


WAProviderAttributionManager : NSObject
 @property  NSUserDefaults *weatherUserDefaults
 @property  NSString *providerName

  // class methods
  +[WAProviderAttributionManager sharedManager]

  // instance methods
  -[WAProviderAttributionManager providerName]
  -[WAProviderAttributionManager .cxx_destruct]
  -[WAProviderAttributionManager init]
  -[WAProviderAttributionManager weatherUserDefaults]


WATodayPadView : UIView
 @property  NSArray *constraints
 @property  UIImageView *conditionsImageView
 @property  WALegibilityLabel *temperatureLabel
 @property  WALegibilityLabel *locationLabel
 @property  WALegibilityLabel *conditionsLabel
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSString *conditionsLine
 @property  UIImage *conditionsImage
 @property  NSString *temperature
 @property  NSString *locationName
 @property  WATodayPadViewStyle *style

  // class methods
  +[WATodayPadView requiresConstraintBasedLayout]

  // instance methods
  -[WATodayPadView temperature]
  -[WATodayPadView locationLabel]
  -[WATodayPadView constraints]
  -[WATodayPadView willMoveToWindow:]
  -[WATodayPadView .cxx_destruct]
  -[WATodayPadView setLocationLabel:]
  -[WATodayPadView setStyle:]
  -[WATodayPadView sizeToFit]
  -[WATodayPadView setConstraints:]
  -[WATodayPadView locationName]
  -[WATodayPadView setLegibilitySettings:]
  -[WATodayPadView setLocationName:]
  -[WATodayPadView updateForChangedSettings:]
  -[WATodayPadView initWithFrame:]
  -[WATodayPadView style]
  -[WATodayPadView setTemperature:]
  -[WATodayPadView legibilitySettings]
  -[WATodayPadView setTemperatureLabel:]
  -[WATodayPadView temperatureLabel]
  -[WATodayPadView setConditionsImageView:]
  -[WATodayPadView conditionsImageView]
  -[WATodayPadView setConditionsImage:]
  -[WATodayPadView conditionsImage]
  -[WATodayPadView setConditionsLine:]
  -[WATodayPadView setConditionsLabel:]
  -[WATodayPadView conditionsLabel]
  -[WATodayPadView conditionsLine]
  -[WATodayPadView _setupConstraintsForViews]


WADayForecast : NSObject <NSCopying>
 @property  WFTemperature *high
 @property  WFTemperature *low
 @property  double percentPrecipitation
 @property  unsigned long icon
 @property  unsigned long dayOfWeek
 @property  unsigned long dayNumber
 @property  BOOL isYesterday

  // class methods
  +[WADayForecast dayForecastForLocation:conditions:]

  // instance methods
  -[WADayForecast setDayOfWeek:]
  -[WADayForecast dayOfWeek]
  -[WADayForecast icon]
  -[WADayForecast .cxx_destruct]
  -[WADayForecast setHigh:]
  -[WADayForecast isEqual:]
  -[WADayForecast setIcon:]
  -[WADayForecast low]
  -[WADayForecast isYesterday]
  -[WADayForecast setLow:]
  -[WADayForecast copyWithZone:]
  -[WADayForecast high]
  -[WADayForecast setDayNumber:]
  -[WADayForecast dayNumber]
  -[WADayForecast percentPrecipitation]
  -[WADayForecast compareDayNumberToDayForecast:]
  -[WADayForecast setPercentPrecipitation:]
  -[WADayForecast setIsYesterday:]


WeatherDeviceLookup : NSObject
 @property  ACAccountStore *accountStore

  // instance methods
  -[WeatherDeviceLookup accountStore]
  -[WeatherDeviceLookup checkAllDevicesRunningMinimumiOSVersion:macOSVersion:orInactiveForTimeInterval:completionHandler:]
  -[WeatherDeviceLookup .cxx_destruct]
  -[WeatherDeviceLookup init]


TWCLocationUpdater : TWCCityUpdater
 @property  CLGeocoder *reverseGeocoder
 @property  ^{ct_green_tea_logger_s=} greenTeaLogger
 @property  City *currentCity

  // class methods
  +[TWCLocationUpdater sharedLocationUpdater]

  // instance methods
  -[TWCLocationUpdater setReverseGeocoder:]
  -[TWCLocationUpdater .cxx_destruct]
  -[TWCLocationUpdater init]
  -[TWCLocationUpdater greenTeaLogger]
  -[TWCLocationUpdater dealloc]
  -[TWCLocationUpdater reverseGeocoder]
  -[TWCLocationUpdater setGreenTeaLogger:]
  -[TWCLocationUpdater updateWeatherForCity:]
  -[TWCLocationUpdater updateWeatherForCities:withCompletionHandler:]
  -[TWCLocationUpdater updateWeatherForLocation:city:]
  -[TWCLocationUpdater _updateWeatherForLocation:city:completionHandler:]
  -[TWCLocationUpdater setCurrentCity:]
  -[TWCLocationUpdater _geocodeLocation:currentCity:completionHandler:]
  -[TWCLocationUpdater _completeReverseGeocodeForLocation:currentCity:geocodeError:completionHandler:]
  -[TWCLocationUpdater parsedResultCity:]
  -[TWCLocationUpdater enableProgressIndicator:]
  -[TWCLocationUpdater updateWeatherForLocation:city:isFromFrameworkClient:withCompletionHandler:]
  -[TWCLocationUpdater currentCity]


WeatherPressureFormatter : NSFormatter
 @property  NSLocale *locale

  // class methods
  +[WeatherPressureFormatter convenienceFormatter]

  // instance methods
  -[WeatherPressureFormatter stringForObjectValue:]
  -[WeatherPressureFormatter setLocale:]
  -[WeatherPressureFormatter .cxx_destruct]
  -[WeatherPressureFormatter init]
  -[WeatherPressureFormatter locale]
  -[WeatherPressureFormatter dealloc]
  -[WeatherPressureFormatter getObjectValue:forString:errorDescription:]
  -[WeatherPressureFormatter stringFromMillibars:]
  -[WeatherPressureFormatter createNumberFormatter]
  -[WeatherPressureFormatter resetFormatter]
  -[WeatherPressureFormatter stringFromInchesHG:]
  -[WeatherPressureFormatter pressureUnit]
  -[WeatherPressureFormatter convertMBarPressure:toUnit:]
  -[WeatherPressureFormatter formatStringForPressure:inUnit:]
  -[WeatherPressureFormatter fallbackStringForPressure:]
  -[WeatherPressureFormatter convertInchesHGPressure:toUnit:]
  -[WeatherPressureFormatter stringFromPressure:isDataMetric:]


WAAQIScale : NSObject
 @property  NSMutableArray *categories
 @property  {_NSRange=QQ} range
 @property  WAAQIGradient *gradient

  // class methods
  +[WAAQIScale scaleFromFoundationScale:]

  // instance methods
  -[WAAQIScale categories]
  -[WAAQIScale range]
  -[WAAQIScale gradient]
  -[WAAQIScale setCategories:]
  -[WAAQIScale initWithRange:]
  -[WAAQIScale .cxx_destruct]
  -[WAAQIScale addCategory:]


UIFont(Weather)
	// instance methods
	-[UIFont(Weather) wa_bold]

(WAAccessibility)
	// class methods
	+[(WAAccessibility) waaxArrayByIgnoringNilElementsWithCount:]

	// instance methods
	-[(WAAccessibility) wa_allObjectsPassTest:]

WFSevereWeatherEvent(WeatherAdditions)
	// instance methods
	-[WFSevereWeatherEvent(WeatherAdditions) dictionaryRepresentation]
	-[WFSevereWeatherEvent(WeatherAdditions) initWithDictionary:]

(WeatherStringAdditions)
	// class methods
	+[(WeatherStringAdditions) stringWithFormat:andArguments:]

	// instance methods
	-[(WeatherStringAdditions) drawAtPoint:forWidth:withFont:fontColor:shadowColor:]
	-[(WeatherStringAdditions) drawWithDegreeAtPoint:font:degreeFont:degreeOffset:]
	-[(WeatherStringAdditions) sizeWithDegreeWithFont:degreeFont:degreeOffset:]

WFNextHourPrecipitationMinute(WeatherAdditions)
	// instance methods
	-[WFNextHourPrecipitationMinute(WeatherAdditions) dictionaryRepresentation]
	-[WFNextHourPrecipitationMinute(WeatherAdditions) initWithDictionary:]

UIColor(Weather)
	// class methods
	+[UIColor(Weather) wa_colorFromHexString:]

(isEqualToLocaleForWeather)
	// instance methods
	-[(isEqualToLocaleForWeather) isEqualToLocaleForWeather:]

UIImage(WAImageExtensions)
	// instance methods
	-[UIImage(WAImageExtensions) WAImageLoaderPreCacheImage]
	-[UIImage(WAImageExtensions) drawPDFInRect:]
	-[UIImage(WAImageExtensions) wa_imageWithSize:]

WFNextHourPrecipitationDescription(WeatherAdditions)
	// instance methods
	-[WFNextHourPrecipitationDescription(WeatherAdditions) dictionaryRepresentation]
	-[WFNextHourPrecipitationDescription(WeatherAdditions) initWithDictionary:]

WFNextHourPrecipitationCondition(WeatherAdditions)
	// instance methods
	-[WFNextHourPrecipitationCondition(WeatherAdditions) dictionaryRepresentation]
	-[WFNextHourPrecipitationCondition(WeatherAdditions) initWithDictionary:]
	-[WFNextHourPrecipitationCondition(WeatherAdditions) stringForType:]

(Weather)
	// instance methods
	-[(Weather) wa_font]

(Weather)
	// instance methods
	-[(Weather) wa_timeIntervalUntilNow]

WFNextHourPrecipitation(WeatherAdditions)
	// instance methods
	-[WFNextHourPrecipitation(WeatherAdditions) dictionaryRepresentation]
	-[WFNextHourPrecipitation(WeatherAdditions) initWithDictionary:]

WFAQIScaleCategory(Localized)
	// instance methods
	-[WFAQIScaleCategory(Localized) longDescription]
	-[WFAQIScaleCategory(Localized) warningLevel]
	-[WFAQIScaleCategory(Localized) scaleClassName]

WFAQIScaleCategoryATMO(Localized)
	// instance methods
	-[WFAQIScaleCategoryATMO(Localized) description]
	-[WFAQIScaleCategoryATMO(Localized) warningLevel]
	-[WFAQIScaleCategoryATMO(Localized) scaleClassName]

WFAQIScaleCategoryCAQI(Localized)
	// instance methods
	-[WFAQIScaleCategoryCAQI(Localized) description]
	-[WFAQIScaleCategoryCAQI(Localized) warningLevel]
	-[WFAQIScaleCategoryCAQI(Localized) scaleClassName]

WFAQIScaleCategoryDAQI(Localized)
	// instance methods
	-[WFAQIScaleCategoryDAQI(Localized) description]
	-[WFAQIScaleCategoryDAQI(Localized) warningLevel]
	-[WFAQIScaleCategoryDAQI(Localized) scaleClassName]

WFAQIScaleCategoryEPA(Localized)
	// instance methods
	-[WFAQIScaleCategoryEPA(Localized) longDescription]
	-[WFAQIScaleCategoryEPA(Localized) description]
	-[WFAQIScaleCategoryEPA(Localized) warningLevel]
	-[WFAQIScaleCategoryEPA(Localized) scaleClassName]

WFAQIScaleCategoryHJ6332012(Localized)
	// instance methods
	-[WFAQIScaleCategoryHJ6332012(Localized) description]
	-[WFAQIScaleCategoryHJ6332012(Localized) warningLevel]
	-[WFAQIScaleCategoryHJ6332012(Localized) scaleClassName]

WFAQIScaleCategoryIMECA(Localized)
	// instance methods
	-[WFAQIScaleCategoryIMECA(Localized) description]
	-[WFAQIScaleCategoryIMECA(Localized) warningLevel]
	-[WFAQIScaleCategoryIMECA(Localized) scaleClassName]

WFAQIScaleCategoryNAQI(Localized)
	// instance methods
	-[WFAQIScaleCategoryNAQI(Localized) description]
	-[WFAQIScaleCategoryNAQI(Localized) warningLevel]
	-[WFAQIScaleCategoryNAQI(Localized) scaleClassName]

WFAQIScaleCategoryUBA(Localized)
	// instance methods
	-[WFAQIScaleCategoryUBA(Localized) description]
	-[WFAQIScaleCategoryUBA(Localized) warningLevel]
	-[WFAQIScaleCategoryUBA(Localized) scaleClassName]

CPBitmapStore(WeatherAppDataProtection)
	// instance methods
	-[CPBitmapStore(WeatherAppDataProtection) setVersion:withOptions:]

01 00 0500 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0400 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 0400 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKDeviceListRequestContext 
01 00 0b00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: ALCity 
01 00 0b00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: ALCityManager 
01 00 1c00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLGeocoder 
01 00 1c00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 1c00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0b00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPBitmapStore 
01 00 0900 /System/Library/Frameworks/MapKit.framework/MapKit: MKMapItem 
01 00 0900 /System/Library/Frameworks/MapKit.framework/MapKit: MKPlacemark 
01 00 0d00 /System/Library/PrivateFrameworks/NetAppsUtilitiesUI.framework/NetAppsUtilitiesUI: NAUIContentSizeLayoutConstraint 
01 00 0d00 /System/Library/PrivateFrameworks/NetAppsUtilitiesUI.framework/NetAppsUtilitiesUI: NAUIDeviceUtilities 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSFormatter 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSLengthFormatter 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUbiquitousKeyValueStore 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIVibrancyEffect 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleATMO 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleCAQI 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleCacheManager 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleCategory 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleCategoryATMO 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleCategoryCAQI 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleCategoryDAQI 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleCategoryEPA 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleCategoryHJ6332012 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleCategoryIMECA 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleCategoryNAQI 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleCategoryUBA 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleDAQI 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleEPA 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleHJ6332012 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleIMECA 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleNAQI 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAQIScaleUBA 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAggregateCommonRequest 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAirQualityConditions 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFAirQualityProviderAttributionManager 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFGeocodeRequest 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFLocation 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFNextHourPrecipitation 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFNextHourPrecipitationCondition 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFNextHourPrecipitationDescription 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFNextHourPrecipitationMinute 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFServiceConnection 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFSettingsManager 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFSevereWeatherEvent 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFTemperature 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFTemperatureFormatter 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFTemperatureUnitChangeRequest 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFTemperatureUnitObserver 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFURLComponents 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WFWeatherStoreService 
01 00 0c00 /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation: WeatherService 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityView 
