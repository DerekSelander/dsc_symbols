|| __DATA.__objc_data _OBJC_CLASS_$_MIStoreMetadataSubGenre
|| __DATA.__objc_data _OBJC_METACLASS_$_MIStoreMetadataSubGenre
|| __DATA_CONST.__const _MIFunctionNameErrorKey
|| __DATA_CONST.__const _MIInstallerErrorDomain
|| __DATA_CONST.__const _MILibMISErrorNumberKey
|| __DATA_CONST.__const _MIPathArgumentErrorKey
|| __DATA_CONST.__const _MISourceFileLineErrorKey
|| __DATA_CONST.__const _kMICallbackPercentCompleteKey
|| __DATA_CONST.__const _kMIDemotionCompleteErrorOccurredKey
|| __DATA_CONST.__const _kMIDemotionCompleteNotificationName
|| __DATA_CONST.__const _kMIInstallResultInstalledAppInfoArrayKey
|| __DATA_CONST.__const _kMIUninstallParallelPlaceholderKey
|| __DATA_CONST.__const _kMIUninstallResultRemovedAppInfoArrayKey
|| __DATA_CONST.__const _kMIWatchKitSnapshotInfoDiskUsageBytes
|| __DATA_CONST.__const _kMIWatchKitSnapshotOptionCreatePlaceholder
|| __DATA_CONST.__const _kMIWatchKitSnapshotOptionMaxWKAppVersion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AITransactionLog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MIBundleMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MIFileManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MIGlobalConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MIInstallOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MIStoreMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AITransactionLog
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MIBundleMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MIFileManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MIGlobalConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MIInstallOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MIStoreMetadata
|| __TEXT.__text _MIRemoveSinf
|| __TEXT.__text _MIReplicateRootSinf
|| __TEXT.__text _MIUpdateSinfWithData
|| __TEXT.__text _MobileInstallationAppLaunchEnabled
|| __TEXT.__text _MobileInstallationCheckCapabilitiesMatch
|| __TEXT.__text _MobileInstallationClearUninstalled
|| __TEXT.__text _MobileInstallationCopyAppMetadata
|| __TEXT.__text _MobileInstallationCopyContainerizedAppInfoForLaunchServices
|| __TEXT.__text _MobileInstallationCopyDiskUsageForLaunchServices
|| __TEXT.__text _MobileInstallationCopyFrameworkInfoForLaunchServices
|| __TEXT.__text _MobileInstallationCopyInstalledDeveloperAppsForLaunchServices
|| __TEXT.__text _MobileInstallationCopySafeHarbors
|| __TEXT.__text _MobileInstallationCopySafeHarborsForContainerType
|| __TEXT.__text _MobileInstallationEndTestMode
|| __TEXT.__text _MobileInstallationEnumerateAllInstalledItemDictionaries
|| __TEXT.__text _MobileInstallationGetHelperServicePid
|| __TEXT.__text _MobileInstallationGetInstalldPid
|| __TEXT.__text _MobileInstallationGetSystemAppMigrationStatus
|| __TEXT.__text _MobileInstallationGetTestModeEnabled
|| __TEXT.__text _MobileInstallationInstallForLaunchServices
|| __TEXT.__text _MobileInstallationInstallForLaunchServicesWithError
|| __TEXT.__text _MobileInstallationKillHelperService
|| __TEXT.__text _MobileInstallationKillInstalld
|| __TEXT.__text _MobileInstallationLookupSystemAppState
|| __TEXT.__text _MobileInstallationLookupUninstalled
|| __TEXT.__text _MobileInstallationProcessRestoredContainer
|| __TEXT.__text _MobileInstallationProcessRestoredContainerWithIdentifierOfType
|| __TEXT.__text _MobileInstallationRegisterSafeHarbor
|| __TEXT.__text _MobileInstallationRegisterSafeHarborForContainerType
|| __TEXT.__text _MobileInstallationRemoveSafeHarbor
|| __TEXT.__text _MobileInstallationRemoveSafeHarborForContainerType
|| __TEXT.__text _MobileInstallationSetAppLaunchState
|| __TEXT.__text _MobileInstallationSetSystemAppMigrationComplete
|| __TEXT.__text _MobileInstallationSetTestMode
|| __TEXT.__text _MobileInstallationUninstallForLaunchServices
|| __TEXT.__text _MobileInstallationUninstallForLaunchServicesWithError
|| __TEXT.__text _MobileInstallationUpdatePlaceholderMetadata
|| __TEXT.__text _MobileInstallationUpdateSinfForLaunchServices
|| __TEXT.__text _MobileInstallationUpdateSystemAppState
|| __TEXT.__text _MobileInstallationUpdateiTunesMetadataForLaunchServices
|| __TEXT.__text _MobileInstallationWaitForSystemAppMigrationToComplete
|| __TEXT.__text _MobileInstallationWaitForSystemAppMigrationWithCompletion
|| __TEXT.__text _MobileInstallationWatchKitInstallerSnapshotWKApp
|| __TEXT.__text __MILogTransactionStep
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFCopyTypeIDDescription
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCreateFilteredInfoPlist
__ CoreFoundation: __CFBundleCreateUnique
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFBundleVersionKey
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSHashGet
__ Foundation: _NSHashInsertKnownAbsent
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ MobileSystemServices: _MOLogWrite
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __os_crash_fmt
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_log_pack_fill
__ libSystem.B.dylib: __os_log_pack_size
__ libSystem.B.dylib: _acl_copy_ext_native
__ libSystem.B.dylib: _acl_free
__ libSystem.B.dylib: _acl_get_file
__ libSystem.B.dylib: _acl_init
__ libSystem.B.dylib: _acl_set_fd
__ libSystem.B.dylib: _acl_size
__ libSystem.B.dylib: _acl_to_text
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _clonefile
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _closedir
__ libSystem.B.dylib: _copyfile
__ libSystem.B.dylib: _dirfd
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _ffsctl
__ libSystem.B.dylib: _fgetattrlist
__ libSystem.B.dylib: _fgetxattr
__ libSystem.B.dylib: _flistxattr
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fremovexattr
__ libSystem.B.dylib: _fsetattrlist
__ libSystem.B.dylib: _fsetxattr
__ libSystem.B.dylib: _futimes
__ libSystem.B.dylib: _getattrlistbulk
__ libSystem.B.dylib: _geteuid
__ libSystem.B.dylib: _getpwnam_r
__ libSystem.B.dylib: _getxattr
__ libSystem.B.dylib: _lchmod
__ libSystem.B.dylib: _lchown
__ libSystem.B.dylib: _link
__ libSystem.B.dylib: _lstat
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _mkdtemp
__ libSystem.B.dylib: _mkpath_np
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _opendir
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _pthread_cond_destroy
__ libSystem.B.dylib: _pthread_cond_init
__ libSystem.B.dylib: _pthread_cond_signal
__ libSystem.B.dylib: _pthread_cond_wait
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _readlink
__ libSystem.B.dylib: _realpath$DARWIN_EXTSN
__ libSystem.B.dylib: _removefile
__ libSystem.B.dylib: _removefile_state_alloc
__ libSystem.B.dylib: _removefile_state_free
__ libSystem.B.dylib: _removefile_state_get
__ libSystem.B.dylib: _removefile_state_set
__ libSystem.B.dylib: _removexattr
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _rmdir
__ libSystem.B.dylib: _setattrlist
__ libSystem.B.dylib: _setxattr
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _symlink
__ libSystem.B.dylib: _sysconf
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
MIGlobalConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *installdPath
 @property  NSURL *mobilePath
 @property  NSURL *rootPath
 @property  BOOL allowDeletableSystemApps
 @property  NSURL *stagingRoot
 @property  NSURL *logDirectory
 @property  NSURL *coreServicesDirectory
 @property  NSURL *systemAppsDirectory
 @property  NSURL *systemAppPlaceholdersDirectory
 @property  NSURL *systemAppDetachedSignaturesDirectory
 @property  NSURL *internalAppsDirectory
 @property  NSURL *developerAppsDirectory
 @property  NSURL *stagedSystemAppsDirectory
 @property  NSURL *factoryMountDirectory
 @property  NSURL *systemFrameworksRootDirectory
 @property  NSURL *internalFrameworksRootDirectory
 @property  NSURL *developerFrameworksRootDirectory
 @property  NSSet *allFrameworksDirectories
 @property  NSURL *dataDirectory
 @property  NSURL *cachesDirectory
 @property  NSURL *backedUpStateDirectory
 @property  NSArray *appBundleMetadataItemNames
 @property  NSArray *appUserDataItemNames
 @property  NSSet *installationBlacklist
 @property  NSSet *builtInApplicationBundleIDs
 @property  NSSet *builtInFrameworkBundleIDs
 @property  NSSet *systemAppPlaceholderBundleIDs
 @property  NSSet *systemAppPlaceholderPluginBundleIDs
 @property  NSSet *systemAppPlaceholderXPCServiceBundleIDs
 @property  NSDictionary *systemAppBundleIDToInfoMap
 @property  NSDictionary *stagedSystemAppBundleIDToInfoMap
 @property  NSDictionary *systemAppPlaceholderBundleIDToInfoMap
 @property  NSDictionary *coreServicesAppBundleIDToInfoMap
 @property  NSDictionary *internalAppBundleIDToInfoMap
 @property  NSDictionary *diskImageAppBundleIDToInfoMap
 @property  unsigned int uid
 @property  unsigned int gid
 @property  NSURL *oldDataDirectoryPath
 @property  NSURL *oldLoggingPath
 @property  NSURL *oldArchiveDirectory
 @property  NSURL *roleUserMigrationMarkerFilePath
 @property  NSURL *systemAppInstallStateFilePath
 @property  NSURL *backupSystemAppInstallStateFilePath
 @property  NSString *alternateThinningModelIdentifier
 @property  NSURL *migrationPlistURL
 @property  NSURL *lastBuildInfoFileURL

  // class methods
  +[MIGlobalConfiguration sharedInstance]

  // instance methods
  -[MIGlobalConfiguration init]
  -[MIGlobalConfiguration .cxx_destruct]
  -[MIGlobalConfiguration dataDirectory]
  -[MIGlobalConfiguration rootPath]
  -[MIGlobalConfiguration cachesDirectory]
  -[MIGlobalConfiguration uid]
  -[MIGlobalConfiguration gid]
  -[MIGlobalConfiguration disableSystemAppDeletionCanaryFile]
  -[MIGlobalConfiguration mobilePath]
  -[MIGlobalConfiguration backedUpStateDirectory]
  -[MIGlobalConfiguration installdPath]
  -[MIGlobalConfiguration systemFrameworksRootDirectory]
  -[MIGlobalConfiguration internalFrameworksRootDirectory]
  -[MIGlobalConfiguration _bundleIDMapForBundlesInDirectory:withExtension:loadingAdditionalKeys:]
  -[MIGlobalConfiguration _bundleIDMapForAppsInDirectory:loadingAdditionalKeys:]
  -[MIGlobalConfiguration systemAppBundleIDToInfoMap]
  -[MIGlobalConfiguration internalAppBundleIDToInfoMap]
  -[MIGlobalConfiguration diskImageAppBundleIDToInfoMap]
  -[MIGlobalConfiguration coreServicesDirectory]
  -[MIGlobalConfiguration _bundleIDMapForAppsInDirectory:]
  -[MIGlobalConfiguration systemAppsDirectory]
  -[MIGlobalConfiguration stagedSystemAppsDirectory]
  -[MIGlobalConfiguration systemAppPlaceholdersDirectory]
  -[MIGlobalConfiguration internalAppsDirectory]
  -[MIGlobalConfiguration allFrameworksDirectories]
  -[MIGlobalConfiguration _bundleIDMapForBundlesInDirectory:withExtension:]
  -[MIGlobalConfiguration systemAppPlaceholderBundleIDToInfoMap]
  -[MIGlobalConfiguration _useInternalDiagnostics]
  -[MIGlobalConfiguration _testModeSentinelURL]
  -[MIGlobalConfiguration logDirectory]
  -[MIGlobalConfiguration allowDeletableSystemApps]
  -[MIGlobalConfiguration oldDataDirectoryPath]
  -[MIGlobalConfiguration oldLoggingPath]
  -[MIGlobalConfiguration oldArchiveDirectory]
  -[MIGlobalConfiguration roleUserMigrationMarkerFilePath]
  -[MIGlobalConfiguration systemAppInstallStateFilePath]
  -[MIGlobalConfiguration backupSystemAppInstallStateFilePath]
  -[MIGlobalConfiguration stagingRoot]
  -[MIGlobalConfiguration systemAppDetachedSignaturesDirectory]
  -[MIGlobalConfiguration developerAppsDirectory]
  -[MIGlobalConfiguration factoryMountDirectory]
  -[MIGlobalConfiguration developerFrameworksRootDirectory]
  -[MIGlobalConfiguration appBundleMetadataItemNames]
  -[MIGlobalConfiguration reScanSystemApps]
  -[MIGlobalConfiguration appUserDataItemNames]
  -[MIGlobalConfiguration installationBlacklist]
  -[MIGlobalConfiguration builtInApplicationBundleIDs]
  -[MIGlobalConfiguration coreServicesAppBundleIDToInfoMap]
  -[MIGlobalConfiguration stagedSystemAppBundleIDToInfoMap]
  -[MIGlobalConfiguration builtInFrameworkBundleIDs]
  -[MIGlobalConfiguration systemAppPlaceholderBundleIDs]
  -[MIGlobalConfiguration systemAppPlaceholderPluginBundleIDs]
  -[MIGlobalConfiguration systemAppPlaceholderXPCServiceBundleIDs]
  -[MIGlobalConfiguration reScanCoreServicesApps]
  -[MIGlobalConfiguration reScanInternalApps]
  -[MIGlobalConfiguration alternateThinningModelIdentifier]
  -[MIGlobalConfiguration migrationPlistURL]
  -[MIGlobalConfiguration lastBuildInfoFileURL]
  -[MIGlobalConfiguration isRunningInTestMode:outError:]
  -[MIGlobalConfiguration setIsRunningInTestMode:]
  -[MIGlobalConfiguration clearIsRunningInTestMode:]


MIStoreMetadataSubGenre : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *genre
 @property  NSNumber *genreID
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[MIStoreMetadataSubGenre supportsSecureCoding]

  // instance methods
  -[MIStoreMetadataSubGenre genreID]
  -[MIStoreMetadataSubGenre copyWithZone:]
  -[MIStoreMetadataSubGenre genre]
  -[MIStoreMetadataSubGenre .cxx_destruct]
  -[MIStoreMetadataSubGenre encodeWithCoder:]
  -[MIStoreMetadataSubGenre setGenreID:]
  -[MIStoreMetadataSubGenre isEqual:]
  -[MIStoreMetadataSubGenre dictionaryRepresentation]
  -[MIStoreMetadataSubGenre setGenre:]
  -[MIStoreMetadataSubGenre initWithCoder:]
  -[MIStoreMetadataSubGenre initWithGenre:genreID:]


MIStoreMetadata : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *iAdAttribution
 @property  NSString *iAdConversionDate
 @property  NSString *iAdImpressionDate
 @property  NSString *artistName
 @property  NSNumber *betaExternalVersionIdentifier
 @property  NSString *bundleVersion
 @property  NSString *bundleShortVersionString
 @property  NSString *purchaseDate
 @property  NSString *appleID
 @property  NSNumber *DSPersonID
 @property  NSNumber *downloaderID
 @property  NSNumber *familyID
 @property  NSNumber *purchaserID
 @property  NSString *altDSID
 @property  BOOL hasMessagesExtension
 @property  NSNumber *initialODRSize
 @property  BOOL purchasedRedownload
 @property  NSNumber *itemID
 @property  NSString *itemName
 @property  NSString *kind
 @property  NSString *label
 @property  BOOL launchProhibited
 @property  NSString *ratingLabel
 @property  NSNumber *ratingRank
 @property  NSString *releaseDate
 @property  NSString *assetToken
 @property  NSString *softwareVersionBundleID
 @property  NSNumber *softwareVersionExternalIdentifier
 @property  NSString *sourceApp
 @property  NSString *storeCohort
 @property  NSNumber *storefront
 @property  NSString *variantID
 @property  NSString *genre
 @property  NSNumber *genreID
 @property  NSArray *subGenres
 @property  NSArray *categories
 @property  BOOL gameCenterEnabled
 @property  BOOL gameCenterEverEnabled
 @property  BOOL isAutoDownload
 @property  NSString *referrerURL
 @property  NSString *referrerApp
 @property  BOOL sideLoadedDeviceBasedVPP
 @property  BOOL deviceBasedVPP
 @property  NSString *enterpriseInstallURL
 @property  NSString *redownloadParams
 @property  NSDictionary *nameTranscriptions
 @property  BOOL factoryInstall
 @property  NSString *md5

  // class methods
  +[MIStoreMetadata supportsSecureCoding]
  +[MIStoreMetadata metadataFromPlistData:error:]
  +[MIStoreMetadata metadataFromPlistAtURL:error:]
  +[MIStoreMetadata metadataFromDictionary:]

  // instance methods
  -[MIStoreMetadata storeCohort]
  -[MIStoreMetadata referrerURL]
  -[MIStoreMetadata genreID]
  -[MIStoreMetadata releaseDate]
  -[MIStoreMetadata md5]
  -[MIStoreMetadata copyWithZone:]
  -[MIStoreMetadata artistName]
  -[MIStoreMetadata setBundleVersion:]
  -[MIStoreMetadata altDSID]
  -[MIStoreMetadata storefront]
  -[MIStoreMetadata isGameCenterEnabled]
  -[MIStoreMetadata setAltDSID:]
  -[MIStoreMetadata gameCenterEverEnabled]
  -[MIStoreMetadata betaExternalVersionIdentifier]
  -[MIStoreMetadata setStorefront:]
  -[MIStoreMetadata setMd5:]
  -[MIStoreMetadata familyID]
  -[MIStoreMetadata appleID]
  -[MIStoreMetadata sourceApp]
  -[MIStoreMetadata deviceBasedVPP]
  -[MIStoreMetadata setAppleID:]
  -[MIStoreMetadata bundleVersion]
  -[MIStoreMetadata genre]
  -[MIStoreMetadata setRatingRank:]
  -[MIStoreMetadata iAdAttribution]
  -[MIStoreMetadata setIAdAttribution:]
  -[MIStoreMetadata iAdConversionDate]
  -[MIStoreMetadata setIAdConversionDate:]
  -[MIStoreMetadata iAdImpressionDate]
  -[MIStoreMetadata setIAdImpressionDate:]
  -[MIStoreMetadata .cxx_destruct]
  -[MIStoreMetadata setVariantID:]
  -[MIStoreMetadata ratingRank]
  -[MIStoreMetadata setCategories:]
  -[MIStoreMetadata label]
  -[MIStoreMetadata setPurchaseDate:]
  -[MIStoreMetadata kind]
  -[MIStoreMetadata setStoreCohort:]
  -[MIStoreMetadata variantID]
  -[MIStoreMetadata setRatingLabel:]
  -[MIStoreMetadata redownloadParams]
  -[MIStoreMetadata encodeWithCoder:]
  -[MIStoreMetadata setKind:]
  -[MIStoreMetadata categories]
  -[MIStoreMetadata initWithDictionary:]
  -[MIStoreMetadata setBetaExternalVersionIdentifier:]
  -[MIStoreMetadata setHasMessagesExtension:]
  -[MIStoreMetadata setDeviceBasedVPP:]
  -[MIStoreMetadata setLaunchProhibited:]
  -[MIStoreMetadata setItemName:]
  -[MIStoreMetadata itemID]
  -[MIStoreMetadata setItemID:]
  -[MIStoreMetadata hasMessagesExtension]
  -[MIStoreMetadata isLaunchProhibited]
  -[MIStoreMetadata ratingLabel]
  -[MIStoreMetadata setInitialODRSize:]
  -[MIStoreMetadata setGenreID:]
  -[MIStoreMetadata isEqual:]
  -[MIStoreMetadata setLabel:]
  -[MIStoreMetadata setSoftwareVersionExternalIdentifier:]
  -[MIStoreMetadata purchaseDate]
  -[MIStoreMetadata downloaderID]
  -[MIStoreMetadata purchaserID]
  -[MIStoreMetadata setDownloaderID:]
  -[MIStoreMetadata setPurchaserID:]
  -[MIStoreMetadata setRedownloadParams:]
  -[MIStoreMetadata setFamilyID:]
  -[MIStoreMetadata dictionaryRepresentation]
  -[MIStoreMetadata subGenres]
  -[MIStoreMetadata isPurchasedRedownload]
  -[MIStoreMetadata setArtistName:]
  -[MIStoreMetadata setGenre:]
  -[MIStoreMetadata setReferrerURL:]
  -[MIStoreMetadata initialODRSize]
  -[MIStoreMetadata setReleaseDate:]
  -[MIStoreMetadata itemName]
  -[MIStoreMetadata initWithCoder:]
  -[MIStoreMetadata setBundleShortVersionString:]
  -[MIStoreMetadata setDSPersonID:]
  -[MIStoreMetadata setPurchasedRedownload:]
  -[MIStoreMetadata setSoftwareVersionBundleID:]
  -[MIStoreMetadata setSourceApp:]
  -[MIStoreMetadata setAssetToken:]
  -[MIStoreMetadata setSubGenres:]
  -[MIStoreMetadata softwareVersionBundleID]
  -[MIStoreMetadata softwareVersionExternalIdentifier]
  -[MIStoreMetadata setGameCenterEnabled:]
  -[MIStoreMetadata setGameCenterEverEnabled:]
  -[MIStoreMetadata setIsAutoDownload:]
  -[MIStoreMetadata setReferrerApp:]
  -[MIStoreMetadata setSideLoadedDeviceBasedVPP:]
  -[MIStoreMetadata setEnterpriseInstallURL:]
  -[MIStoreMetadata setFactoryInstall:]
  -[MIStoreMetadata setNameTranscriptions:]
  -[MIStoreMetadata bundleShortVersionString]
  -[MIStoreMetadata DSPersonID]
  -[MIStoreMetadata assetToken]
  -[MIStoreMetadata isAutoDownload]
  -[MIStoreMetadata referrerApp]
  -[MIStoreMetadata sideLoadedDeviceBasedVPP]
  -[MIStoreMetadata enterpriseInstallURL]
  -[MIStoreMetadata nameTranscriptions]
  -[MIStoreMetadata isFactoryInstall]


MIHelperServiceFrameworkClient : NSObject /usr/lib/libSystem.B.dylib
 @property  NSXPCConnection *xpcConnection

  // class methods
  +[MIHelperServiceFrameworkClient sharedInstance]

  // instance methods
  -[MIHelperServiceFrameworkClient setXpcConnection:]
  -[MIHelperServiceFrameworkClient _invalidateObject]
  -[MIHelperServiceFrameworkClient purgeInstallCoordinationPromiseStagingDirectoryForUUID:keepStagingDirectory:error:]
  -[MIHelperServiceFrameworkClient createWrappedAppForInstalledBundleIdentifier:inTargetDirectory:installationInfo:onBehalfOf:error:]
  -[MIHelperServiceFrameworkClient xpcConnection]
  -[MIHelperServiceFrameworkClient updateWrappedAppAt:forInstalledBundleIdentifier:installationInfo:onBehalfOf:error:]
  -[MIHelperServiceFrameworkClient removeWrappedAppWithBundleID:atURL:error:]
  -[MIHelperServiceFrameworkClient _sharedConnection]
  -[MIHelperServiceFrameworkClient dealloc]
  -[MIHelperServiceFrameworkClient .cxx_destruct]
  -[MIHelperServiceFrameworkClient _remoteObjectProxyWithErrorHandler:]
  -[MIHelperServiceFrameworkClient _synchronousRemoteObjectProxyWithErrorHandler:]


MIInstallOptions : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  unsigned long installTargetType
 @property  NSString *bundleIdentifier
 @property  BOOL developerInstall
 @property  BOOL systemAppInstall
 @property  BOOL userInitiated
 @property  BOOL waitForDeletion
 @property  unsigned long lsInstallType
 @property  MIStoreMetadata *iTunesMetadata
 @property  NSData *sinfData
 @property  NSData *iTunesArtworkData
 @property  NSData *geoJSONData
 @property  NSArray *provisioningProfiles
 @property  BOOL skipWatchAppInstall
 @property  BOOL skipBlacklist
 @property  BOOL installForMigrator
 @property  BOOL allowLocalProvisioned
 @property  BOOL performAPFSClone
 @property  unsigned long autoInstallOverride
 @property  NSDictionary *legacyOptionsDictionary

  // class methods
  +[MIInstallOptions supportsSecureCoding]

  // instance methods
  -[MIInstallOptions copyWithZone:]
  -[MIInstallOptions iTunesMetadata]
  -[MIInstallOptions installTargetType]
  -[MIInstallOptions isSystemAppInstall]
  -[MIInstallOptions waitForDeletion]
  -[MIInstallOptions lsInstallType]
  -[MIInstallOptions iTunesArtworkData]
  -[MIInstallOptions geoJSONData]
  -[MIInstallOptions skipWatchAppInstall]
  -[MIInstallOptions allowLocalProvisioned]
  -[MIInstallOptions performAPFSClone]
  -[MIInstallOptions autoInstallOverride]
  -[MIInstallOptions setInstallTargetType:]
  -[MIInstallOptions setDeveloperInstall:]
  -[MIInstallOptions setSystemAppInstall:]
  -[MIInstallOptions setSinfData:]
  -[MIInstallOptions setWaitForDeletion:]
  -[MIInstallOptions setLsInstallType:]
  -[MIInstallOptions setITunesMetadata:]
  -[MIInstallOptions setITunesArtworkData:]
  -[MIInstallOptions setGeoJSONData:]
  -[MIInstallOptions setSkipWatchAppInstall:]
  -[MIInstallOptions setAutoInstallOverride:]
  -[MIInstallOptions setAllowLocalProvisioned:]
  -[MIInstallOptions setPerformAPFSClone:]
  -[MIInstallOptions legacyOptionsDictionary]
  -[MIInstallOptions initWithLegacyOptionsDictionary:]
  -[MIInstallOptions skipBlacklist]
  -[MIInstallOptions setSkipBlacklist:]
  -[MIInstallOptions installForMigrator]
  -[MIInstallOptions setInstallForMigrator:]
  -[MIInstallOptions isDeveloperInstall]
  -[MIInstallOptions .cxx_destruct]
  -[MIInstallOptions isUserInitiated]
  -[MIInstallOptions sinfData]
  -[MIInstallOptions encodeWithCoder:]
  -[MIInstallOptions setUserInitiated:]
  -[MIInstallOptions setBundleIdentifier:]
  -[MIInstallOptions isEqual:]
  -[MIInstallOptions setProvisioningProfiles:]
  -[MIInstallOptions bundleIdentifier]
  -[MIInstallOptions initWithCoder:]
  -[MIInstallOptions provisioningProfiles]


MIInstallerClient : NSObject /usr/lib/libSystem.B.dylib <MobileInstallerDelegateProtocol>
 @property  NSXPCConnection *connection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? progressBlock
 @property  @? appDictionaryEnumBlock
 @property  BOOL delegatesComplete
 @property  NSError *delegatesCompleteError

  // class methods
  +[MIInstallerClient installerWithProgressBlock:]
  +[MIInstallerClient installerWithAppDictionaryEnumerator:]

  // instance methods
  -[MIInstallerClient setTestMode:]
  -[MIInstallerClient setProgressBlock:]
  -[MIInstallerClient _invalidateObject]
  -[MIInstallerClient dieForTesting]
  -[MIInstallerClient init]
  -[MIInstallerClient delegateMessageDeliveryCompleteWithError:]
  -[MIInstallerClient pidForTesting]
  -[MIInstallerClient setAppDictionaryEnumBlock:]
  -[MIInstallerClient installURL:withOptions:completion:]
  -[MIInstallerClient uninstallIdentifiers:withOptions:completion:]
  -[MIInstallerClient lookupUninstalledWithOptions:completion:]
  -[MIInstallerClient clearUninstalledIdentifiers:withOptions:completion:]
  -[MIInstallerClient lookupSystemAppStateWithOptions:completion:]
  -[MIInstallerClient updateSystemAppStateForIdentifier:appState:completion:]
  -[MIInstallerClient enumerateInstalledAppsWithOptions:completion:]
  -[MIInstallerClient fetchInstalledDeveloperAppsWithMountPath:completion:]
  -[MIInstallerClient fetchDiskUsageForIdentifiers:withOptions:completion:]
  -[MIInstallerClient processRestoredContainerWithIdentifier:ofType:options:completion:]
  -[MIInstallerClient registerSafeHarborAtPath:forIdentifier:ofType:withOptions:completion:]
  -[MIInstallerClient removeSafeHarborForIdentifier:ofType:withOptions:completion:]
  -[MIInstallerClient listSafeHarborsOfType:withOptions:completion:]
  -[MIInstallerClient checkCapabilities:withOptions:completion:]
  -[MIInstallerClient fetchInfoForFrameworkAtURL:options:completion:]
  -[MIInstallerClient fetchInfoForContainerizedAppWithBundleID:options:completion:]
  -[MIInstallerClient updateSinfForLSWithIdentifier:withOptions:sinfData:completion:]
  -[MIInstallerClient updateiTunesMetadataForLSWithIdentifier:options:plistData:completion:]
  -[MIInstallerClient getAppMetadataForApp:completion:]
  -[MIInstallerClient setSystemAppMigrationComplete:]
  -[MIInstallerClient updatePlaceholderMetadataForApp:installType:failureReason:underlyingError:failureSource:completion:]
  -[MIInstallerClient snapshotWKAppInCompanionAppID:toURL:options:completion:]
  -[MIInstallerClient waitForSystemAppMigratorToComplete:]
  -[MIInstallerClient systemAppMigratorHasCompleted:]
  -[MIInstallerClient enumerateAppDictionary:error:]
  -[MIInstallerClient endTestMode:]
  -[MIInstallerClient dealloc]
  -[MIInstallerClient setDelegatesComplete:]
  -[MIInstallerClient appDictionaryEnumBlock]
  -[MIInstallerClient delegatesComplete]
  -[MIInstallerClient setDelegatesCompleteError:]
  -[MIInstallerClient delegatesCompleteError]
  -[MIInstallerClient _waitForPendingDelegateMessages]
  -[MIInstallerClient waitForSystemAppMigratorWithCompletion:]
  -[MIInstallerClient getTestModeEnabled:outError:]
  -[MIInstallerClient .cxx_destruct]
  -[MIInstallerClient setConnection:]
  -[MIInstallerClient setQueue:]
  -[MIInstallerClient queue]
  -[MIInstallerClient progressBlock]
  -[MIInstallerClient reportProgress:]
  -[MIInstallerClient connection]


AITransactionLog : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[AITransactionLog logStep:byParty:phase:success:forBundleID:description:]
  +[AITransactionLog _defaultLog]
  +[AITransactionLog initializeWithLog:]
  +[AITransactionLog logScenario:step:success:forBundleID:description:]

  // instance methods
  -[AITransactionLog .cxx_destruct]
  -[AITransactionLog _initWithLog:]
  -[AITransactionLog _logScenario:step:success:forBundleID:description:]


MIFileManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MIFileManager defaultManager]

  // instance methods
  -[MIFileManager removeItemAtURL:error:]
  -[MIFileManager createSymbolicLinkAtURL:withDestinationURL:error:]
  -[MIFileManager realPathForURL:ifChildOfURL:]
  -[MIFileManager createDirectoryAtURL:withIntermediateDirectories:mode:error:]
  -[MIFileManager setOwnerOfURL:toUID:gid:error:]
  -[MIFileManager itemIsFileAtURL:error:]
  -[MIFileManager removeItemAtURL:keepParent:error:]
  -[MIFileManager createDirectoryAtURL:withIntermediateDirectories:mode:class:error:]
  -[MIFileManager _copyItemAtURL:toURL:failIfSrcMissing:alwaysClone:error:]
  -[MIFileManager _moveItemAtURL:toURL:failIfSrcMissing:error:]
  -[MIFileManager _bulkSetPropertiesForPath:existingFD:UID:GID:mode:flags:dataProtectionClass:removeACL:error:]
  -[MIFileManager bulkSetPropertiesForPath:UID:GID:mode:flags:dataProtectionClass:removeACL:error:]
  -[MIFileManager _stageURLByMoving:toItemName:inStagingDir:settingUID:gid:hasSymlink:error:]
  -[MIFileManager itemExistsAtURL:error:]
  -[MIFileManager _realPathWhatExistsInPath:]
  -[MIFileManager _stageURLByCopying:toItemName:inStagingDir:stagingMode:settingUID:gid:hasSymlink:error:]
  -[MIFileManager copyItemIfExistsAtURL:toURL:error:]
  -[MIFileManager moveItemIfExistsAtURL:toURL:error:]
  -[MIFileManager _realPathForURL:allowNonExistentPathComponents:]
  -[MIFileManager _validateSymlink:withStartingDepth:andEndingDepth:]
  -[MIFileManager _markEAFlag:forAppIdentifier:insecurelyCachedOnBundle:error:]
  -[MIFileManager _removeACLAtPath:isDir:error:]
  -[MIFileManager _insecureCachedAppIdentifierIfMarkedWithEAFlag:bundleURL:allowPlaceholders:error:]
  -[MIFileManager _setData:forExtendedAttributeNamed:onURL:orFD:error:]
  -[MIFileManager _dataForExtendedAttributeNamed:length:onURL:orFD:error:]
  -[MIFileManager copyItemAtURL:toURL:alwaysClone:error:]
  -[MIFileManager createTemporaryDirectoryInDirectoryURL:error:]
  -[MIFileManager validateSymlinksInURLDoNotEscapeURL:error:]
  -[MIFileManager itemDoesNotExistAtURL:]
  -[MIFileManager bulkSetPropertiesForPath:withOpenFD:UID:GID:mode:flags:dataProtectionClass:removeACL:error:]
  -[MIFileManager stageURL:toItemName:inStagingDir:stagingMode:settingUID:gid:hasSymlink:error:]
  -[MIFileManager standardizeOwnershipAtURL:toUID:GID:removeACLs:setProtectionClass:foundSymlink:error:]
  -[MIFileManager traverseDirectoryAtURL:withBlock:]
  -[MIFileManager urlsForItemsInDirectoryAtURL:ignoringSymlinks:error:]
  -[MIFileManager destinationOfSymbolicLinkAtURL:error:]
  -[MIFileManager upToFirstFourBytesFromURL:error:]
  -[MIFileManager aclTextFromURL:error:]
  -[MIFileManager extendedAttributesFromURL:error:]
  -[MIFileManager dataProtectionClassOfItemAtURL:class:error:]
  -[MIFileManager setDataProtectionClassOfItemAtURL:toClass:ifPredicate:error:]
  -[MIFileManager setPermissionsForURL:toMode:error:]
  -[MIFileManager captureStoreDataFromDirectory:toDirectory:doCopy:failureIsFatal:withError:]
  -[MIFileManager markBundleAsPlaceholder:withError:]
  -[MIFileManager bundleAtURLIsPlaceholder:]
  -[MIFileManager clearPlaceholderStatusForBundle:withError:]
  -[MIFileManager setAppClipAppIdentifier:insecurelyCachedOnBundle:error:]
  -[MIFileManager insecureCachedAppIdentifierIfAppClipForBundle:error:]
  -[MIFileManager setValidatedByFreeProfileAppIdentifier:insecurelyCachedOnBundle:error:]
  -[MIFileManager setInstallType:onBundle:error:]
  -[MIFileManager installTypeForBundle:error:]
  -[MIFileManager insecureCachedAppIdentifierIfValidatedByFreeProfileForBundle:error:]
  -[MIFileManager setData:forExtendedAttributeNamed:onURL:error:]
  -[MIFileManager setData:forExtendedAttributeNamed:onFD:fdLocation:error:]
  -[MIFileManager dataForExtendedAttributeNamed:length:fromURL:error:]
  -[MIFileManager dataForExtendedAttributeNamed:length:fromFD:fdLocation:error:]
  -[MIFileManager diskUsageForURL:]
  -[MIFileManager setModificationDateToNowForURL:error:]
  -[MIFileManager modificationDateForURL:error:]
  -[MIFileManager moveItemAtURL:toURL:error:]
  -[MIFileManager copyItemAtURL:toURL:error:]
  -[MIFileManager itemExistsAtURL:]
  -[MIFileManager enumerateURLsForItemsInDirectoryAtURL:ignoreSymlinks:withBlock:]


MIBundleMetadata : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSDate *installDate
 @property  NSString *installBuildVersion
 @property  unsigned long installType
 @property  unsigned long placeholderFailureReason
 @property  NSError *placeholderFailureUnderlyingError
 @property  unsigned long placeholderFailureUnderlyingErrorSource
 @property  NSString *watchKitAppExecutableHash
 @property  unsigned long autoInstallOverride

  // class methods
  +[MIBundleMetadata supportsSecureCoding]
  +[MIBundleMetadata metadataFromURL:error:]

  // instance methods
  -[MIBundleMetadata copyWithZone:]
  -[MIBundleMetadata installType]
  -[MIBundleMetadata placeholderFailureReason]
  -[MIBundleMetadata setInstallType:]
  -[MIBundleMetadata autoInstallOverride]
  -[MIBundleMetadata setAutoInstallOverride:]
  -[MIBundleMetadata .cxx_destruct]
  -[MIBundleMetadata installBuildVersion]
  -[MIBundleMetadata setInstallBuildVersion:]
  -[MIBundleMetadata setPlaceholderFailureReason:]
  -[MIBundleMetadata placeholderFailureUnderlyingError]
  -[MIBundleMetadata setPlaceholderFailureUnderlyingError:]
  -[MIBundleMetadata placeholderFailureUnderlyingErrorSource]
  -[MIBundleMetadata setPlaceholderFailureUnderlyingErrorSource:]
  -[MIBundleMetadata watchKitAppExecutableHash]
  -[MIBundleMetadata setWatchKitAppExecutableHash:]
  -[MIBundleMetadata encodeWithCoder:]
  -[MIBundleMetadata installDate]
  -[MIBundleMetadata isEqual:]
  -[MIBundleMetadata serializeToURL:error:]
  -[MIBundleMetadata initWithCoder:]
  -[MIBundleMetadata setInstallDate:]


(MobileInstallationAdditions)
	// class methods
	+[(MobileInstallationAdditions) stringWithFileSystemRepresentation:length:]
	+[(MobileInstallationAdditions) stringWithFileSystemRepresentation:]

	// instance methods
	-[(MobileInstallationAdditions) containsDotDotPathComponents]

(MobileInstallationAdditions)
	// class methods
	+[(MobileInstallationAdditions) MI_dictionaryWithContentsOfURL:options:error:]

	// instance methods
	-[(MobileInstallationAdditions) MI_writeToURL:format:options:error:]

01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0400 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
