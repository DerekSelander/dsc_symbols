|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixAnalytics
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixAnalyticsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixAssetMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixAssetPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixClassifier
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixClassifierConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixDeviceLockMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixDisplayStatusMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixEventMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixGestureDetector
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixMitigator
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixMitigatorConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AXPhoenixWakeGestureMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_AccelerometerBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_AccelerometerData
|| __DATA.__objc_data _OBJC_CLASS_$_Prediction
|| __DATA.__objc_data _OBJC_CLASS_$_PredictionsBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixAnalytics
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixAnalyticsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixAssetMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixAssetPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixClassifier
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixClassifierConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixDeviceLockMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixDisplayStatusMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixEventMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixGestureDetector
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixMitigator
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixMitigatorConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPhoenixWakeGestureMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_AccelerometerBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_AccelerometerData
|| __DATA.__objc_data _OBJC_METACLASS_$_Prediction
|| __DATA.__objc_data _OBJC_METACLASS_$_PredictionsBuffer
|| __TEXT.__const _PhoenixVersionNumber
|| __TEXT.__const _PhoenixVersionString
__ AXAssetLoader: _OBJC_CLASS_$_AXAssetController
__ AXAssetLoader: _OBJC_CLASS_$_AXAssetPolicy
__ AXAssetLoader: _OBJC_METACLASS_$_AXAssetPolicy
__ AXCoreUtilities: _AXLogBackTap
__ AccessibilityUtilities: _AXSystemGetAccessibilityPrivateFrameworksPath
__ AccessibilityUtilities: _OBJC_CLASS_$_AXEventProcessor
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreML: _MLModelCreatorDefinedKey
__ CoreML: _MLModelDescriptionKey
__ CoreML: _MLModelVersionStringKey
__ CoreML: _OBJC_CLASS_$_MLArrayBatchProvider
__ CoreML: _OBJC_CLASS_$_MLDictionaryFeatureProvider
__ CoreML: _OBJC_CLASS_$_MLFeatureValue
__ CoreML: _OBJC_CLASS_$_MLModel
__ CoreML: _OBJC_CLASS_$_MLModelConfiguration
__ CoreML: _OBJC_CLASS_$_MLMultiArray
__ CoreML: _OBJC_CLASS_$_MLPredictionOptions
__ CoreMotion: _OBJC_CLASS_$_CMMotionManager
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSString
__ MobileKeyBag: _MKBGetDeviceLockState
__ SoftLinking: __sl_dlopen_audited
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
AXPhoenixEventMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSHashTable *observers
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[AXPhoenixEventMonitor init]
  -[AXPhoenixEventMonitor _stopMonitoring]
  -[AXPhoenixEventMonitor setObservers:]
  -[AXPhoenixEventMonitor dealloc]
  -[AXPhoenixEventMonitor .cxx_destruct]
  -[AXPhoenixEventMonitor _startMonitoringWithQueue:]
  -[AXPhoenixEventMonitor observers]
  -[AXPhoenixEventMonitor setQueue:]
  -[AXPhoenixEventMonitor notifyObserver:]
  -[AXPhoenixEventMonitor queue]
  -[AXPhoenixEventMonitor removeObserver:]
  -[AXPhoenixEventMonitor enumerateObservers:]
  -[AXPhoenixEventMonitor addObserver:]
  -[AXPhoenixEventMonitor enumerateObserversInQueue:]


AXPhoenixMitigator : NSObject /usr/lib/libSystem.B.dylib <AXPhoenixEventMonitorObserver, AXPhoenixDeviceLockMonitorObserver, AXPhoenixWakeGestureMonitorObserver, AXPhoenixDisplayStatusMonitorObserver>
 @property  BOOL isHandHeld
 @property  double lastWakeGestureTimestamp
 @property  double lastDismissalTimestamp
 @property  BOOL touchOn
 @property  double lastTouchInteractionGainTimestamp
 @property  double lastTouchInteractionLossTimestamp
 @property  BOOL displayOn
 @property  double lastDisplayOnTimestamp
 @property  double lastDisplayOffTimestamp
 @property  BOOL deviceLocked
 @property  double lastDeviceLockedTimestamp
 @property  double lastDeviceUnlockedTimestamp
 @property  int policyOption
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXPhoenixMitigator displayOn]
  -[AXPhoenixMitigator setDisplayOn:]
  -[AXPhoenixMitigator startWithCompletion:]
  -[AXPhoenixMitigator dealloc]
  -[AXPhoenixMitigator .cxx_destruct]
  -[AXPhoenixMitigator _subscribeEventMonitors]
  -[AXPhoenixMitigator initWithDelegate:configuration:]
  -[AXPhoenixMitigator stop]
  -[AXPhoenixMitigator configuration]
  -[AXPhoenixMitigator isRunning]
  -[AXPhoenixMitigator touchOn]
  -[AXPhoenixMitigator deviceLocked]
  -[AXPhoenixMitigator phoenixEventMonitorDidReceiveEvent:]
  -[AXPhoenixMitigator setTouchOn:timestamp:]
  -[AXPhoenixMitigator _unsubscribeEventMonitors]
  -[AXPhoenixMitigator _shouldTriggerEventWithTapData:isDoubleTap:completion:]
  -[AXPhoenixMitigator _contextInfo:]
  -[AXPhoenixMitigator _subscribeEventMonitor:]
  -[AXPhoenixMitigator setLastTouchInteractionGainTimestamp:]
  -[AXPhoenixMitigator setLastTouchInteractionLossTimestamp:]
  -[AXPhoenixMitigator setTouchOn:]
  -[AXPhoenixMitigator setLastDeviceLockedTimestamp:]
  -[AXPhoenixMitigator setLastDeviceUnlockedTimestamp:]
  -[AXPhoenixMitigator setDeviceLocked:]
  -[AXPhoenixMitigator setLastDisplayOnTimestamp:]
  -[AXPhoenixMitigator setLastDisplayOffTimestamp:]
  -[AXPhoenixMitigator setLastWakeGestureTimestamp:]
  -[AXPhoenixMitigator setIsHandHeld:]
  -[AXPhoenixMitigator setLastDismissalTimestamp:]
  -[AXPhoenixMitigator phoenixDeviceLockMonitor:didReceiveDeviceLockStateChanged:timestamp:]
  -[AXPhoenixMitigator gestureMonitorDidReceiveWakeGesture:timestamp:]
  -[AXPhoenixMitigator gestureMonitorDidReceiveSleepGesture:timestamp:]
  -[AXPhoenixMitigator phoenixDisplayStatusMonitor:didReceiveDisplayStateChanged:timestamp:]
  -[AXPhoenixMitigator shouldTriggerDoubleTapEventWithTapData:completion:]
  -[AXPhoenixMitigator shouldTriggerTripleTapEventWithTapData:completion:]
  -[AXPhoenixMitigator policyOption]
  -[AXPhoenixMitigator setPolicyOption:]
  -[AXPhoenixMitigator isHandHeld]
  -[AXPhoenixMitigator lastWakeGestureTimestamp]
  -[AXPhoenixMitigator lastDismissalTimestamp]
  -[AXPhoenixMitigator lastTouchInteractionGainTimestamp]
  -[AXPhoenixMitigator lastTouchInteractionLossTimestamp]
  -[AXPhoenixMitigator lastDisplayOnTimestamp]
  -[AXPhoenixMitigator lastDisplayOffTimestamp]
  -[AXPhoenixMitigator lastDeviceLockedTimestamp]
  -[AXPhoenixMitigator lastDeviceUnlockedTimestamp]


AXPhoenixWakeGestureMonitor : AXPhoenixEventMonitor <CMWakeGestureDelegate>
 @property  double wakeGestureTimestamp
 @property  double dismissalTimestamp
 @property  CMWakeGestureManager *gestureManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXPhoenixWakeGestureMonitor sharedInstance]

  // instance methods
  -[AXPhoenixWakeGestureMonitor init]
  -[AXPhoenixWakeGestureMonitor _stopMonitoring]
  -[AXPhoenixWakeGestureMonitor .cxx_destruct]
  -[AXPhoenixWakeGestureMonitor _startMonitoringWithQueue:]
  -[AXPhoenixWakeGestureMonitor wakeGestureManager:didUpdateWakeGesture:]
  -[AXPhoenixWakeGestureMonitor setGestureManager:]
  -[AXPhoenixWakeGestureMonitor gestureManager]
  -[AXPhoenixWakeGestureMonitor wakeGestureTimestamp]
  -[AXPhoenixWakeGestureMonitor dismissalTimestamp]
  -[AXPhoenixWakeGestureMonitor setWakeGestureTimestamp:]
  -[AXPhoenixWakeGestureMonitor setDismissalTimestamp:]
  -[AXPhoenixWakeGestureMonitor _didReceiveWakeGesture]
  -[AXPhoenixWakeGestureMonitor _didReceiveSleepGesture]
  -[AXPhoenixWakeGestureMonitor isDeviceHandheld]


AXPhoenixAnalytics : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[AXPhoenixAnalytics init]
  -[AXPhoenixAnalytics .cxx_destruct]
  -[AXPhoenixAnalytics setQueue:]
  -[AXPhoenixAnalytics queue]
  -[AXPhoenixAnalytics _descriptionForEventType:]
  -[AXPhoenixAnalytics _sendEvent:completion:]
  -[AXPhoenixAnalytics initWithConfiguration:modelVersion:assetVersion:]
  -[AXPhoenixAnalytics logEventWithType:machAbsoluteTime:context:completion:]


AXPhoenixGestureDetector : NSObject /usr/lib/libSystem.B.dylib <AXPhoenixClassifierDelegate, AXPhoenixMitigatorDelegate, AXPhoenixAssetMonitorDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXPhoenixGestureDetector urlOfModelInThisBundle]

  // instance methods
  -[AXPhoenixGestureDetector initWithDelegate:]
  -[AXPhoenixGestureDetector startWithCompletion:]
  -[AXPhoenixGestureDetector .cxx_destruct]
  -[AXPhoenixGestureDetector stopWithCompletion:]
  -[AXPhoenixGestureDetector _startWithCompletion:]
  -[AXPhoenixGestureDetector phoenixMitigator:displayOnDidChange:]
  -[AXPhoenixGestureDetector phoenixMitigator:touchOnDidChange:]
  -[AXPhoenixGestureDetector _initializeAssetDrivenComponentsWithLocalURL:assetVersion:]
  -[AXPhoenixGestureDetector _resetAssetDrivenComponents]
  -[AXPhoenixGestureDetector _createConfiguration]
  -[AXPhoenixGestureDetector _createClassifierModelURL]
  -[AXPhoenixGestureDetector setTapSpeed:]
  -[AXPhoenixGestureDetector _startClassifierWithCompletion:]
  -[AXPhoenixGestureDetector _stopWithCompletion:]
  -[AXPhoenixGestureDetector _stopClassifier]
  -[AXPhoenixGestureDetector _setPolicyOption:]
  -[AXPhoenixGestureDetector _mobileAssetPathForConfigOrNil]
  -[AXPhoenixGestureDetector _mobileAssetURLForModelOrNil]
  -[AXPhoenixGestureDetector needsToUpdateModelToVersion:]
  -[AXPhoenixGestureDetector phoenixClassifierDidDetectDoubleTap:data:context:]
  -[AXPhoenixGestureDetector phoenixClassifierDidDetectTripleTap:data:context:]
  -[AXPhoenixGestureDetector phoenixClassifier:failedWithError:]
  -[AXPhoenixGestureDetector phoenixMitigator:didFailWithError:]
  -[AXPhoenixGestureDetector modelDidUpdate:assetVersion:]
  -[AXPhoenixGestureDetector setDoubleTapPolicy]
  -[AXPhoenixGestureDetector setTripleTapPolicy]
  -[AXPhoenixGestureDetector setGeneralPolicy]


AXPhoenixClassifierConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *dataKey
 @property  NSString *accelerometerSampleRateInHzKey
 @property  NSString *maxAccelerationBufferSizeKey
 @property  unsigned long accelerometerSampleRateInHz
 @property  unsigned long maxAccelerationBufferSize
 @property  NSString *policyKey
 @property  NSString *modelPredictionRateInHzKey
 @property  NSString *predictionConfidenceThresholdKey
 @property  NSString *minDurationBetweenTriggersInSecondsKey
 @property  NSString *maxPredictionBufferSizeKey
 @property  unsigned long modelPredictionRateInHz
 @property  double predictionConfidenceThreshold
 @property  unsigned long minDurationBetweenTriggersInSeconds
 @property  unsigned long maxPredictionBufferSize
 @property  NSString *predictionCountThresholdsKey
 @property  NSString *doubleTapPolicyKey
 @property  NSString *tripleTapPolicyKey
 @property  NSString *generalPolicyKey
 @property  NSString *predictionClassNoneKey
 @property  NSString *predictionClassDoubleTapKey
 @property  NSString *predictionClassTripleTapKey
 @property  NSArray *doubleTapPolicyThresholds
 @property  NSArray *tripleTapPolicyThresholds
 @property  NSArray *generalPolicyThresholds

  // instance methods
  -[AXPhoenixClassifierConfiguration init]
  -[AXPhoenixClassifierConfiguration toDictionary]
  -[AXPhoenixClassifierConfiguration .cxx_destruct]
  -[AXPhoenixClassifierConfiguration dataKey]
  -[AXPhoenixClassifierConfiguration policyKey]
  -[AXPhoenixClassifierConfiguration accelerometerSampleRateInHz]
  -[AXPhoenixClassifierConfiguration _initializeKeys]
  -[AXPhoenixClassifierConfiguration _setDefaultConfiguration]
  -[AXPhoenixClassifierConfiguration _parseFromDictionary:missingKeys:]
  -[AXPhoenixClassifierConfiguration setDataKey:]
  -[AXPhoenixClassifierConfiguration setAccelerometerSampleRateInHzKey:]
  -[AXPhoenixClassifierConfiguration setMaxAccelerationBufferSizeKey:]
  -[AXPhoenixClassifierConfiguration setPolicyKey:]
  -[AXPhoenixClassifierConfiguration setPredictionConfidenceThresholdKey:]
  -[AXPhoenixClassifierConfiguration setMinDurationBetweenTriggersInSecondsKey:]
  -[AXPhoenixClassifierConfiguration setMaxPredictionBufferSizeKey:]
  -[AXPhoenixClassifierConfiguration setModelPredictionRateInHzKey:]
  -[AXPhoenixClassifierConfiguration setPredictionCountThresholdsKey:]
  -[AXPhoenixClassifierConfiguration setDoubleTapPolicyKey:]
  -[AXPhoenixClassifierConfiguration setTripleTapPolicyKey:]
  -[AXPhoenixClassifierConfiguration setGeneralPolicyKey:]
  -[AXPhoenixClassifierConfiguration setPredictionClassNoneKey:]
  -[AXPhoenixClassifierConfiguration setPredictionClassDoubleTapKey:]
  -[AXPhoenixClassifierConfiguration setPredictionClassTripleTapKey:]
  -[AXPhoenixClassifierConfiguration setAccelerometerSampleRateInHz:]
  -[AXPhoenixClassifierConfiguration setMaxAccelerationBufferSize:]
  -[AXPhoenixClassifierConfiguration setGeneralPolicyThresholds:]
  -[AXPhoenixClassifierConfiguration setDoubleTapPolicyThresholds:]
  -[AXPhoenixClassifierConfiguration setTripleTapPolicyThresholds:]
  -[AXPhoenixClassifierConfiguration setPredictionConfidenceThreshold:]
  -[AXPhoenixClassifierConfiguration setMinDurationBetweenTriggersInSeconds:]
  -[AXPhoenixClassifierConfiguration setMaxPredictionBufferSize:]
  -[AXPhoenixClassifierConfiguration setModelPredictionRateInHz:]
  -[AXPhoenixClassifierConfiguration accelerometerSampleRateInHzKey]
  -[AXPhoenixClassifierConfiguration maxAccelerationBufferSizeKey]
  -[AXPhoenixClassifierConfiguration modelPredictionRateInHzKey]
  -[AXPhoenixClassifierConfiguration maxPredictionBufferSizeKey]
  -[AXPhoenixClassifierConfiguration minDurationBetweenTriggersInSecondsKey]
  -[AXPhoenixClassifierConfiguration predictionConfidenceThresholdKey]
  -[AXPhoenixClassifierConfiguration predictionCountThresholdsKey]
  -[AXPhoenixClassifierConfiguration doubleTapPolicyKey]
  -[AXPhoenixClassifierConfiguration doubleTapPolicyThresholds]
  -[AXPhoenixClassifierConfiguration predictionClassNoneKey]
  -[AXPhoenixClassifierConfiguration predictionClassDoubleTapKey]
  -[AXPhoenixClassifierConfiguration tripleTapPolicyKey]
  -[AXPhoenixClassifierConfiguration tripleTapPolicyThresholds]
  -[AXPhoenixClassifierConfiguration predictionClassTripleTapKey]
  -[AXPhoenixClassifierConfiguration generalPolicyKey]
  -[AXPhoenixClassifierConfiguration generalPolicyThresholds]
  -[AXPhoenixClassifierConfiguration maxAccelerationBufferSize]
  -[AXPhoenixClassifierConfiguration modelPredictionRateInHz]
  -[AXPhoenixClassifierConfiguration maxPredictionBufferSize]
  -[AXPhoenixClassifierConfiguration minDurationBetweenTriggersInSeconds]
  -[AXPhoenixClassifierConfiguration predictionConfidenceThreshold]
  -[AXPhoenixClassifierConfiguration initWithDictionary:missingKeys:]


AXPhoenixDeviceLockMonitor : AXPhoenixEventMonitor
 @property  BOOL deviceLocked

  // class methods
  +[AXPhoenixDeviceLockMonitor sharedInstance]

  // instance methods
  -[AXPhoenixDeviceLockMonitor init]
  -[AXPhoenixDeviceLockMonitor _stopMonitoring]
  -[AXPhoenixDeviceLockMonitor _startMonitoringWithQueue:]
  -[AXPhoenixDeviceLockMonitor isDeviceLocked]
  -[AXPhoenixDeviceLockMonitor setDeviceLocked:]
  -[AXPhoenixDeviceLockMonitor deviceLockStateChanged:]
  -[AXPhoenixDeviceLockMonitor _queryIsDeviceLocked]
  -[AXPhoenixDeviceLockMonitor _notifyObserver:isDeviceLocked:timestamp:]


AccelerometerData : NSObject /usr/lib/libSystem.B.dylib
 @property  double timestamp
 @property  double x
 @property  double y
 @property  double z

  // instance methods
  -[AccelerometerData setZ:]
  -[AccelerometerData z]
  -[AccelerometerData x]
  -[AccelerometerData setY:]
  -[AccelerometerData timestamp]
  -[AccelerometerData setX:]
  -[AccelerometerData setTimestamp:]
  -[AccelerometerData y]
  -[AccelerometerData initWithData:timestamp:]


AccelerometerBuffer : NSObject /usr/lib/libSystem.B.dylib
 @property  double localMinBelowAverage
 @property  double localMaxAboveAverage
 @property  double localMin
 @property  double localMax

  // instance methods
  -[AccelerometerBuffer .cxx_destruct]
  -[AccelerometerBuffer initWithCapacity:]
  -[AccelerometerBuffer data]
  -[AccelerometerBuffer reset]
  -[AccelerometerBuffer logBuffer]
  -[AccelerometerBuffer localMaxAboveAverage]
  -[AccelerometerBuffer setLocalMaxAboveAverage:]
  -[AccelerometerBuffer localMinBelowAverage]
  -[AccelerometerBuffer setLocalMinBelowAverage:]
  -[AccelerometerBuffer localMax]
  -[AccelerometerBuffer setLocalMax:]
  -[AccelerometerBuffer localMin]
  -[AccelerometerBuffer setLocalMin:]
  -[AccelerometerBuffer resetMovingSum]
  -[AccelerometerBuffer bufferWithMovingSum:]
  -[AccelerometerBuffer addData:timestamp:]


Prediction : NSObject /usr/lib/libSystem.B.dylib
 @property  double noneScore
 @property  double doubleTapScore
 @property  double tripleTapScore
 @property  double maxConfidence
 @property  unsigned long predictedClass

  // instance methods
  -[Prediction maxConfidence]
  -[Prediction predictedClass]
  -[Prediction initWithModelOutput:]
  -[Prediction noneScore]
  -[Prediction setNoneScore:]
  -[Prediction doubleTapScore]
  -[Prediction tripleTapScore]
  -[Prediction setPredictedClass:]


PredictionsBuffer : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[PredictionsBuffer .cxx_destruct]
  -[PredictionsBuffer reset]
  -[PredictionsBuffer initWithConfiguration:]
  -[PredictionsBuffer logBuffer]
  -[PredictionsBuffer predictionCounts]
  -[PredictionsBuffer addPrediction:]
  -[PredictionsBuffer bestPredictionUsingPolicyOption:]


AXPhoenixClassifier : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[AXPhoenixClassifier dealloc]
  -[AXPhoenixClassifier .cxx_destruct]
  -[AXPhoenixClassifier reset]
  -[AXPhoenixClassifier configuration]
  -[AXPhoenixClassifier version]
  -[AXPhoenixClassifier setPolicyOption:]
  -[AXPhoenixClassifier initWithDelegate:modelURL:configuration:]
  -[AXPhoenixClassifier setTapSpeed:]
  -[AXPhoenixClassifier handleAccelerometerData:withTimestamp:]
  -[AXPhoenixClassifier setShouldResetBuffer]
  -[AXPhoenixClassifier _initializeModelFromURL:outError:]
  -[AXPhoenixClassifier _computeFrameLength]
  -[AXPhoenixClassifier _handleAccelerometerData:withTimestamp:]
  -[AXPhoenixClassifier _multiArrayInputForClassifierWithError:]
  -[AXPhoenixClassifier _clippedDataShowsPrediction:]
  -[AXPhoenixClassifier _countThresholdForGesturePrediction:]
  -[AXPhoenixClassifier _windowData:]
  -[AXPhoenixClassifier _clippedMultiArrayInputWithError:beforeTime:]
  -[AXPhoenixClassifier _createMultiArrayWithError:]


AXPhoenixAssetMonitor : NSObject /usr/lib/libSystem.B.dylib <AXAssetControllerObserver>
 @property  AXAssetController *assetController
 @property  AXPhoenixAssetPolicy *assetPolicy
 @property  AXAsset *latestAsset
 @property  <AXPhoenixAssetMonitorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXPhoenixAssetMonitor initWithDelegate:]
  -[AXPhoenixAssetMonitor assetPolicy]
  -[AXPhoenixAssetMonitor .cxx_destruct]
  -[AXPhoenixAssetMonitor setDelegate:]
  -[AXPhoenixAssetMonitor delegate]
  -[AXPhoenixAssetMonitor assetController:didFinishRefreshingAssets:wasSuccessful:error:]
  -[AXPhoenixAssetMonitor assetController:didFinishDownloadingAsset:wasSuccessful:error:hasRemainingDownloads:]
  -[AXPhoenixAssetMonitor assetController]
  -[AXPhoenixAssetMonitor setAssetController:]
  -[AXPhoenixAssetMonitor setAssetPolicy:]
  -[AXPhoenixAssetMonitor setLatestAsset:]
  -[AXPhoenixAssetMonitor assetDidUpdate]
  -[AXPhoenixAssetMonitor latestAsset]


AXPhoenixAnalyticsEvent : NSObject /usr/lib/libSystem.B.dylib
 @property  long long eventType
 @property  NSDictionary *eventInfo

  // class methods
  +[AXPhoenixAnalyticsEvent supportsSecureCoding]

  // instance methods
  -[AXPhoenixAnalyticsEvent copyWithZone:]
  -[AXPhoenixAnalyticsEvent setEventType:]
  -[AXPhoenixAnalyticsEvent init]
  -[AXPhoenixAnalyticsEvent .cxx_destruct]
  -[AXPhoenixAnalyticsEvent eventType]
  -[AXPhoenixAnalyticsEvent setEventInfo:]
  -[AXPhoenixAnalyticsEvent encodeWithCoder:]
  -[AXPhoenixAnalyticsEvent initWithCoder:]
  -[AXPhoenixAnalyticsEvent eventInfo]
  -[AXPhoenixAnalyticsEvent initWithEventType:eventInfo:]
  -[AXPhoenixAnalyticsEvent _jsonData]


AXPhoenixDisplayStatusMonitor : AXPhoenixEventMonitor
 @property  BOOL displayOn
 @property  int notifyToken
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[AXPhoenixDisplayStatusMonitor sharedInstance]

  // instance methods
  -[AXPhoenixDisplayStatusMonitor setDisplayOn:]
  -[AXPhoenixDisplayStatusMonitor setNotifyToken:]
  -[AXPhoenixDisplayStatusMonitor init]
  -[AXPhoenixDisplayStatusMonitor _stopMonitoring]
  -[AXPhoenixDisplayStatusMonitor isDisplayOn]
  -[AXPhoenixDisplayStatusMonitor .cxx_destruct]
  -[AXPhoenixDisplayStatusMonitor _startMonitoringWithQueue:]
  -[AXPhoenixDisplayStatusMonitor setQueue:]
  -[AXPhoenixDisplayStatusMonitor queue]
  -[AXPhoenixDisplayStatusMonitor notifyToken]
  -[AXPhoenixDisplayStatusMonitor _registerForSpringboardNotificationsWithQueue:]
  -[AXPhoenixDisplayStatusMonitor _queryIsDisplayOn]
  -[AXPhoenixDisplayStatusMonitor _displayStateChanged:]
  -[AXPhoenixDisplayStatusMonitor _unregisterForSpringboardNotifications]
  -[AXPhoenixDisplayStatusMonitor _notifyObserver:isDisplayOn:timestamp:]


AXPhoenixMitigatorConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *disableWhenDisplayOffConfigurationKey
 @property  NSString *disableWhenDeviceLockedConfigurationKey
 @property  BOOL disableWhenDisplayOff
 @property  BOOL disableWhenDeviceLocked

  // instance methods
  -[AXPhoenixMitigatorConfiguration init]
  -[AXPhoenixMitigatorConfiguration toDictionary]
  -[AXPhoenixMitigatorConfiguration .cxx_destruct]
  -[AXPhoenixMitigatorConfiguration disableWhenDisplayOff]
  -[AXPhoenixMitigatorConfiguration disableWhenDeviceLocked]
  -[AXPhoenixMitigatorConfiguration _initializeKeys]
  -[AXPhoenixMitigatorConfiguration _setDefaultConfiguration]
  -[AXPhoenixMitigatorConfiguration _parseFromDictionary:missingKeys:]
  -[AXPhoenixMitigatorConfiguration initWithDictionary:missingKeys:]
  -[AXPhoenixMitigatorConfiguration setDisableWhenDisplayOffConfigurationKey:]
  -[AXPhoenixMitigatorConfiguration setDisableWhenDeviceLockedConfigurationKey:]
  -[AXPhoenixMitigatorConfiguration setDisableWhenDisplayOff:]
  -[AXPhoenixMitigatorConfiguration setDisableWhenDeviceLocked:]
  -[AXPhoenixMitigatorConfiguration disableWhenDisplayOffConfigurationKey]
  -[AXPhoenixMitigatorConfiguration disableWhenDeviceLockedConfigurationKey]


AXPhoenixConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *majorVersionKey
 @property  NSString *minorVersionKey
 @property  NSString *classifierConfigurationKey
 @property  NSString *mitigatorConfigurationKey
 @property  unsigned long assetVersion
 @property  NSString *majorVersion
 @property  NSString *minorVersion
 @property  AXPhoenixClassifierConfiguration *classifierConfiguration
 @property  AXPhoenixMitigatorConfiguration *mitigatorConfiguration

  // instance methods
  -[AXPhoenixConfiguration assetVersion]
  -[AXPhoenixConfiguration setMajorVersion:]
  -[AXPhoenixConfiguration setMinorVersion:]
  -[AXPhoenixConfiguration init]
  -[AXPhoenixConfiguration majorVersion]
  -[AXPhoenixConfiguration .cxx_destruct]
  -[AXPhoenixConfiguration setAssetVersion:]
  -[AXPhoenixConfiguration minorVersion]
  -[AXPhoenixConfiguration classifierConfiguration]
  -[AXPhoenixConfiguration mitigatorConfiguration]
  -[AXPhoenixConfiguration toStringifiedJSON]
  -[AXPhoenixConfiguration initWithContentsOfFileAtPath:]
  -[AXPhoenixConfiguration setConfigurationAssetVersion:]
  -[AXPhoenixConfiguration _initializeKeys]
  -[AXPhoenixConfiguration _setDefaultConfiguration]
  -[AXPhoenixConfiguration _updateConfigWithContentsOfDictionary:]
  -[AXPhoenixConfiguration setMajorVersionKey:]
  -[AXPhoenixConfiguration setMinorVersionKey:]
  -[AXPhoenixConfiguration setClassifierConfigurationKey:]
  -[AXPhoenixConfiguration setMitigatorConfigurationKey:]
  -[AXPhoenixConfiguration setClassifierConfiguration:]
  -[AXPhoenixConfiguration setMitigatorConfiguration:]
  -[AXPhoenixConfiguration majorVersionKey]
  -[AXPhoenixConfiguration minorVersionKey]
  -[AXPhoenixConfiguration classifierConfigurationKey]
  -[AXPhoenixConfiguration mitigatorConfigurationKey]


AXPhoenixAssetPolicy : AXAssetPolicy /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities
  // instance methods
  -[AXPhoenixAssetPolicy assetType]
  -[AXPhoenixAssetPolicy launchActivityIdentifier]
  -[AXPhoenixAssetPolicy shouldCopyLocally]


backtapInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  MLMultiArray *model_input
 @property  NSSet *featureNames

  // instance methods
  -[backtapInput featureNames]
  -[backtapInput featureValueForName:]
  -[backtapInput .cxx_destruct]
  -[backtapInput initWithModel_input:]
  -[backtapInput model_input]
  -[backtapInput setModel_input:]


backtapOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  MLMultiArray *model_output
 @property  NSSet *featureNames

  // instance methods
  -[backtapOutput featureNames]
  -[backtapOutput featureValueForName:]
  -[backtapOutput .cxx_destruct]
  -[backtapOutput initWithModel_output:]
  -[backtapOutput model_output]
  -[backtapOutput setModel_output:]


backtap : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[backtap URLOfModelInThisBundle]
  +[backtap loadContentsOfURL:configuration:completionHandler:]
  +[backtap loadWithConfiguration:completionHandler:]

  // instance methods
  -[backtap predictionFromFeatures:options:error:]
  -[backtap init]
  -[backtap predictionsFromInputs:options:error:]
  -[backtap .cxx_destruct]
  -[backtap initWithContentsOfURL:error:]
  -[backtap predictionFromFeatures:error:]
  -[backtap initWithMLModel:]
  -[backtap initWithContentsOfURL:configuration:error:]
  -[backtap model]
  -[backtap initWithConfiguration:error:]
  -[backtap predictionFromModel_input:error:]


01 00 0600 /System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader: AXAssetController 
01 00 0600 /System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader: AXAssetPolicy 
01 00 0800 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXEventProcessor 
01 00 0400 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMMotionManager 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLArrayBatchProvider 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLDictionaryFeatureProvider 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLFeatureValue 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLModel 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLModelConfiguration 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLMultiArray 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLPredictionOptions 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
