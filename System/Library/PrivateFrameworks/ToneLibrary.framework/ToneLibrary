|| __DATA.__common _kSystemSoundID_NoneTone
|| __DATA.__data _kSystemSoundID_InvalidTone
|| __DATA.__objc_data _OBJC_CLASS_$_TLAlertPlaybackPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_TLAlertPlaybackPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_TLSilentModeController
|| __DATA_CONST.__const _TLAlertErrorDomain
|| __DATA_CONST.__const _TLAlertTopicActivityFriendsGoalAttained
|| __DATA_CONST.__const _TLAlertTopicActivityGoalAttained
|| __DATA_CONST.__const _TLAlertTopicActivityGoalBehind
|| __DATA_CONST.__const _TLAlertTopicAlarmGoToSleep
|| __DATA_CONST.__const _TLAlertTopicAlarmNightstand
|| __DATA_CONST.__const _TLAlertTopicAlarmWakeUp
|| __DATA_CONST.__const _TLAlertTopicAppNotificationCriticalAlert
|| __DATA_CONST.__const _TLAlertTopicIncomingCallFaceTimeGroupInvitation
|| __DATA_CONST.__const _TLAlertTopicIncomingCallFaceTimeParticipantJoined
|| __DATA_CONST.__const _TLAlertTopicNewMailThreaded
|| __DATA_CONST.__const _TLAlertTopicNewMailVIP
|| __DATA_CONST.__const _TLAlertTopicPassbookGeofence
|| __DATA_CONST.__const _TLAlertTopicPassbookNFCScanComplete
|| __DATA_CONST.__const _TLAlertTopicPhotosNotificationMemory
|| __DATA_CONST.__const _TLAlertTopicPhotosNotificationSharingPost
|| __DATA_CONST.__const _TLAlertTopicSOSButtonChordingTimeout
|| __DATA_CONST.__const _TLAlertTopicSOSCountdownPreannounce
|| __DATA_CONST.__const _TLAlertTopicSOSCountdownTick
|| __DATA_CONST.__const _TLAlertTopicSOSDialStart
|| __DATA_CONST.__const _TLAlertTopicSystemNotificationFindMyDevice
|| __DATA_CONST.__const _TLAlertTopicSystemNotificationGeneric
|| __DATA_CONST.__const _TLAlertTopicTextMessageAcknowledgmentExclamation
|| __DATA_CONST.__const _TLAlertTopicTextMessageAcknowledgmentHaHa
|| __DATA_CONST.__const _TLAlertTopicTextMessageAcknowledgmentHeart
|| __DATA_CONST.__const _TLAlertTopicTextMessageAcknowledgmentQuestionMark
|| __DATA_CONST.__const _TLAlertTopicTextMessageAcknowledgmentThumbsDown
|| __DATA_CONST.__const _TLAlertTopicTextMessageAcknowledgmentThumbsUp
|| __DATA_CONST.__const _TLAlertTopicTextMessageInConversation
|| __DATA_CONST.__const _TLAlertTopicWalkieTalkieActiveEnd
|| __DATA_CONST.__const _TLAlertTopicWalkieTalkieActiveStart
|| __DATA_CONST.__const _TLServiceAgentIdentifier
|| __DATA_CONST.__const _TLServiceAgentPreferencesDomain
|| __DATA_CONST.__const _TLServiceCommunicationErrorDomain
|| __DATA_CONST.__const _TLServicePersistenceErrorDomain
|| __DATA_CONST.__const _TLServiceValidationErrorDomain
|| __DATA_CONST.__const _TLToneIdentifierNone
|| __DATA_CONST.__const _TLVibrationIdentifierNone
|| __DATA_CONST.__const _TLVibrationManagerUserGeneratedVibrationsDidChangeNotification
|| __DATA_CONST.__const _TLVibrationUserGeneratedVibrationPatternIdentifierPrefix
|| __DATA_CONST.__const _TLVibrationUserGeneratedVibrationPatternsDictionaryKeyName
|| __DATA_CONST.__const _TLVibrationUserGeneratedVibrationPatternsDictionaryKeyPattern
|| __DATA_CONST.__const __TLAlertOverridePolicyDidChangeNotification
|| __DATA_CONST.__const __TLAlertTopicIncomingCallDeemphasized
|| __DATA_CONST.__const __TLAlertWatchPrefersSalientToneAndVibrationDidChangeNotification
|| __DATA_CONST.__const __TLToneManagerContentsChangedNotification
|| __DATA_CONST.__const __TLVibrationPatternAtomsKey
|| __DATA_CONST.__const __TLVibrationPatternIntensityKey
|| __DATA_CONST.__const __TLVibrationPatternLoopedKey
|| __DATA_CONST.__const __TLVibrationPatternOffDurationKey
|| __DATA_CONST.__const __TLVibrationPatternOnDurationKey
|| __DATA_CONST.__const __TLVibrationPatternVibePatternKey
|| __DATA_CONST.__const __TLVibrationSynchronizedVibrationPatternIdentifierPrefix
|| __DATA_CONST.__const _kToneAlbumKey
|| __DATA_CONST.__const _kToneArtistKey
|| __DATA_CONST.__const _kToneArtworkFileKey
|| __DATA_CONST.__const _kToneDurationKey
|| __DATA_CONST.__const _kToneFileExtensionKey
|| __DATA_CONST.__const _kToneGenreKey
|| __DATA_CONST.__const _kToneGloballyUniqueIdentifierKey
|| __DATA_CONST.__const _kToneMediaKindAlertTone
|| __DATA_CONST.__const _kToneMediaKindKey
|| __DATA_CONST.__const _kToneMediaKindRingtone
|| __DATA_CONST.__const _kTonePrivateKey
|| __DATA_CONST.__const _kToneProtectedContentKey
|| __DATA_CONST.__const _kTonePurchasedKey
|| __DATA_CONST.__const _kToneStoreFrontIdentifierKey
|| __DATA_CONST.__const _kToneStoreItemIdentifierKey
|| __DATA_CONST.__const _kToneSyncIdentifierKey
|| __DATA_CONST.__const _kToneTitleKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAccessQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlert
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertActivationAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertPlaybackCompletionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertQueuePlayerController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertStoppingOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertSystemSoundContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertSystemSoundController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertTone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAttentionAwarenessEffectAudioTapContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAttentionAwarenessEffectCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAttentionAwarenessEffectProcessor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAttentionAwarenessObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLBacklight
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLCapabilitiesManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLContentProtectionStateObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLITunesTone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLPreferencesUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLSilentModeController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLSystemApplication
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLSystemSound
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLToneImportResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLToneManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLToneStoreDownload
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLToneStoreDownloadStoreServicesController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLVibrationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLVibrationPattern
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLVibrationPersistenceUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAccessQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlert
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertActivationAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertPlaybackCompletionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertQueuePlayerController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertStoppingOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertSystemSoundContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertSystemSoundController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertTone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAttentionAwarenessEffectAudioTapContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAttentionAwarenessEffectCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAttentionAwarenessEffectProcessor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAttentionAwarenessObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLBacklight
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLCapabilitiesManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLContentProtectionStateObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLITunesTone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLPreferencesUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLSystemApplication
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLSystemSound
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLToneImportResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLToneManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLToneStoreDownload
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLToneStoreDownloadStoreServicesController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLVibrationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLVibrationPattern
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLVibrationPersistenceUtilities
|| __TEXT.__text _NSStringFromTLAlertOverridePolicy
|| __TEXT.__text _NSStringFromTLAlertPlaybackCompletionType
|| __TEXT.__text _NSStringFromTLAlertType
|| __TEXT.__text _NSStringFromTLToneImportStatusCode
|| __TEXT.__text _NSStringFromTLWatchAlertPolicy
|| __TEXT.__text _TLAlertOverridePolicyFromString
|| __TEXT.__text _TLAlertPlaybackCompletionTypeFromString
|| __TEXT.__text _TLAlertTypeFromString
|| __TEXT.__text _TLAttentionAwarenessEffectParametersMake
|| __TEXT.__text _TLLocalizedString
|| __TEXT.__text _TLLogGeneral
|| __TEXT.__text _TLLogPlayback
|| __TEXT.__text _TLLogToneManagement
|| __TEXT.__text _TLLogVibrationManagement
|| __TEXT.__text _TLToneImportStatusCodeFromString
|| __TEXT.__text _TLWatchAlertPolicyFromString
|| __TEXT.__text __TLAlertTypeGetHumanReadableDescription
|| __TEXT.__text __TLAlertTypeValidateConsistencyOfEnumeration
|| __TEXT.__text __TLAssertShouldAbort
__ AVFoundation: _AVAudioSessionCategoryAlarm
__ AVFoundation: _AVAudioSessionCategoryEmergencyAlert
__ AVFoundation: _AVAudioSessionCategoryEmergencyAlert_CanBeMuted
__ AVFoundation: _AVAudioSessionCategoryFindMyPhone
__ AVFoundation: _AVAudioSessionCategoryRingtone
__ AVFoundation: _AVAudioSessionCategoryRingtonePreview
__ AVFoundation: _AVAudioSessionInterruptionNotification
__ AVFoundation: _AVAudioSessionInterruptionOptionKey
__ AVFoundation: _AVAudioSessionInterruptionTypeKey
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeHaptic
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAudioConnectionPoint
__ AVFoundation: _OBJC_CLASS_$_AVAudioEngine
__ AVFoundation: _OBJC_CLASS_$_AVAudioFormat
__ AVFoundation: _OBJC_CLASS_$_AVAudioPCMBuffer
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _OBJC_CLASS_$_AVAudioUnitEQ
__ AVFoundation: _OBJC_CLASS_$_AVAudioUnitReverb
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMix
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMixInputParameters
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVQueuePlayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AppSupport: _CPCopySharedResourcesPreferencesDomainForDomain
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _CPSystemRootDirectory
__ AudioToolbox: _AudioServicesCreateSystemSoundIDWithOptions
__ AudioToolbox: _AudioServicesDisposeSystemSoundID
__ AudioToolbox: _AudioServicesPlaySystemSoundWithOptions
__ AudioToolbox: _AudioServicesStopSystemSound
__ AudioToolbox: _kAudioServicesCreateSystemSoundIDOptionAudioFileURLKey
__ AudioToolbox: _kAudioServicesCreateSystemSoundIDOptionLongFormMediaKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionBehaviorKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionFlagsKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionIgnoreRingerSwitchKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionLoopKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionVibrationPatternKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionVolumeKey
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyMultiple
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ Foundation: _NSFileSize
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ libAudioStatistics.dylib: _OBJC_CLASS_$_CAReporter
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _flock
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _lround
__ libSystem.B.dylib: _lroundf
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _statfs
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
TLToneManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *_rootDirectory
 @property  NSString *_deviceITunesRingtoneDirectory
 @property  NSString *_deviceITunesRingtoneInformationPlist
 @property  NSString *_iTunesRingtoneDirectory
 @property  NSString *_iTunesRingtoneInformationPlist
 @property  NSString *_systemRingtoneDirectory

  // class methods
  +[TLToneManager sharedToneManager]
  +[TLToneManager _systemWideTonePreferenceKeyForAlertType:]
  +[TLToneManager _defaultToneIdentifierForAlertType:topic:]
  +[TLToneManager _ensureTCCAccessPreflightAndCheckForFileExistenceAtPath:]
  +[TLToneManager _currentOverridePolicyPreferenceKeyForAlertType:]
  +[TLToneManager _migrateLegacyToneSettings]

  // instance methods
  -[TLToneManager init]
  -[TLToneManager dealloc]
  -[TLToneManager .cxx_destruct]
  -[TLToneManager currentToneIdentifierForAlertType:]
  -[TLToneManager toneWithIdentifierIsValid:]
  -[TLToneManager nameForToneIdentifier:]
  -[TLToneManager _setCurrentToneWatchAlertPolicy:forAlertType:]
  -[TLToneManager _currentToneWatchAlertPolicyForAlertType:]
  -[TLToneManager _wasAffectedByAccidentalToneDeletion]
  -[TLToneManager setCurrentToneIdentifier:forAlertType:topic:]
  -[TLToneManager defaultToneIdentifierForAlertType:]
  -[TLToneManager initWithITunesRingtonePlistAtPath:]
  -[TLToneManager _loadITunesRingtoneInfoPlistAtPath:]
  -[TLToneManager _loadAlertToneInfo]
  -[TLToneManager _loadToneIdentifierAliasMap]
  -[TLToneManager _performBlockInAccessQueue:]
  -[TLToneManager _handleProtectionContentUnlockedEvent]
  -[TLToneManager _rootDirectory]
  -[TLToneManager _iTunesRingtoneDirectory]
  -[TLToneManager _tonesFromManifestPath:mediaDirectoryPath:]
  -[TLToneManager _iTunesRingtoneInformationPlist]
  -[TLToneManager _deviceITunesRingtoneInformationPlist]
  -[TLToneManager _deviceITunesRingtoneDirectory]
  -[TLToneManager _reloadTonesAfterExternalChange]
  -[TLToneManager _installedTones]
  -[TLToneManager _addToneEntries:toManifestAtPath:mediaDirectory:shouldSkipReload:]
  -[TLToneManager _ensureDirectoryExistsAtPath:]
  -[TLToneManager _lockManifestAtPath:]
  -[TLToneManager _reloadTones]
  -[TLToneManager _removeToneWithIdentifier:orSyncIdentifier:]
  -[TLToneManager _removeTonesFromManifestAtPath:fileNames:shouldSkipReload:alreadyLockedManifest:removedEntries:]
  -[TLToneManager _systemEmbeddedSoundDirectory]
  -[TLToneManager _baseDirectoryForAlertToneSoundFiles]
  -[TLToneManager _systemSoundDirectory]
  -[TLToneManager _systemNewSoundDirectory]
  -[TLToneManager _systemWatchSoundDirectory]
  -[TLToneManager _systemEmbeddedModernSoundDirectory]
  -[TLToneManager defaultRingtoneIdentifier]
  -[TLToneManager _toneWithIdentifierIsSystemAlertTone:]
  -[TLToneManager _aliasForToneIdentifier:]
  -[TLToneManager _newServiceConnection]
  -[TLToneManager currentToneIdentifierForAlertType:topic:]
  -[TLToneManager _tonePreferencesFromService]
  -[TLToneManager _currentToneIdentifierForAlertType:topic:]
  -[TLToneManager _defaultPreferablyNonSilentToneIdentifierForAlertType:topic:]
  -[TLToneManager defaultToneIdentifierForAlertType:topic:]
  -[TLToneManager _setToneIdentifierUsingService:keyedByTopic:forPreferenceKey:]
  -[TLToneManager _didSetTonePreferenceSuccessfullyWithKey:inDomain:usingPreferencesOfKind:]
  -[TLToneManager currentToneSoundIDForAlertType:topic:]
  -[TLToneManager _soundForToneIdentifier:]
  -[TLToneManager filePathForToneIdentifier:]
  -[TLToneManager _toneWithIdentifierIsITunesRingtone:]
  -[TLToneManager _toneWithIdentifierIsNonDefaultSystemRingtone:]
  -[TLToneManager _toneWithIdentifierIsDefaultRingtone:]
  -[TLToneManager _toneWithIdentifierIsAlarmWakeUp:]
  -[TLToneManager _filePathForToneIdentifier:isValid:]
  -[TLToneManager _fileNameFromToneIdentifier:withPrefix:]
  -[TLToneManager _systemRingtoneDirectory]
  -[TLToneManager _alarmWakeUpRingtoneDirectory]
  -[TLToneManager _defaultRingtonePath]
  -[TLToneManager _nameForToneIdentifier:isValid:]
  -[TLToneManager _localizedNameOfToneWithIdentifier:]
  -[TLToneManager _defaultRingtoneName]
  -[TLToneManager _toneWithIdentifierIsValid:]
  -[TLToneManager _addToneToManifestAtPath:metadata:fileName:mediaDirectory:]
  -[TLToneManager _toneWithIdentifier:]
  -[TLToneManager _removeToneWithIdentifier:]
  -[TLToneManager _evaluateOrphanEntriesCleanupStatusForcingReevaluationIfPreviouslyDone:returningFilePathsForFoundOrphans:wasAffectedByAccidentalToneDeletion:]
  -[TLToneManager _removeOrphanedPlistEntriesInManifestAtPath:mediaDirectory:]
  -[TLToneManager _currentToneWatchAlertPolicyForAlertType:topic:]
  -[TLToneManager _currentToneWatchAlertPolicyForAlertType:topic:didFindPersistedWatchAlertPolicy:]
  -[TLToneManager _currentToneWatchAlertPolicyPreferenceKeyForAlertType:topic:]
  -[TLToneManager _setCurrentToneWatchAlertPolicy:forAlertType:topic:]
  -[TLToneManager _handleWatchPrefersSalientNotificationDidChange]
  -[TLToneManager _watchPrefersSalientNotifications]
  -[TLToneManager _currentOverridePolicyForAlertType:didFindAlertOverridePolicy:]
  -[TLToneManager _handleTonePreferencesChangedNotificationForPreferencesKinds:]
  -[TLToneManager _installedTonesSize]
  -[TLToneManager _removeToneFromManifestAtPath:fileName:]
  -[TLToneManager _removeAllTones]
  -[TLToneManager setCurrentToneIdentifier:forAlertType:]
  -[TLToneManager currentToneNameForAlertType:]
  -[TLToneManager currentToneSoundIDForAlertType:]
  -[TLToneManager hasSpecificDefaultToneIdentifierForAlertType:topic:]
  -[TLToneManager _previewSoundForToneIdentifier:]
  -[TLToneManager _toneIdentifierForFileAtPath:isValid:]
  -[TLToneManager importTone:metadata:completionBlock:]
  -[TLToneManager removeImportedToneWithIdentifier:]
  -[TLToneManager _importPurchasedToneWithMetadata:fileName:]
  -[TLToneManager _transferPurchasedToITunes:]
  -[TLToneManager _allSyncedTones]
  -[TLToneManager _toneForSyncIdentifier:]
  -[TLToneManager _importSyncedToneWithMetadata:fileName:]
  -[TLToneManager _removeToneWithSyncIdentifier:]
  -[TLToneManager _removeAllSyncedData]
  -[TLToneManager _removeOrphanedManifestEntriesReturningFilePathsForFoundOrphans:]
  -[TLToneManager _registerDidRequestResetSyncPostAccidentalToneDeletion]
  -[TLToneManager _setWatchPrefersSalientNotifications:]
  -[TLToneManager _currentOverridePolicyForAlertType:]
  -[TLToneManager _setCurrentOverridePolicy:forAlertType:]
  -[TLToneManager _handleDeviceRingtonesChangedNotification]
  -[TLToneManager currentToneIdentifierForAlertType:accountIdentifier:]
  -[TLToneManager setCurrentToneIdentifier:forAlertType:accountIdentifier:]
  -[TLToneManager _currentToneWatchAlertPolicyForAlertType:accountIdentifier:]
  -[TLToneManager _setCurrentToneWatchAlertPolicy:forAlertType:accountIdentifier:]


TLSystemApplication : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *bundleIdentifier
 @property  NSString *name

  // class methods
  +[TLSystemApplication defaultSystemApplication]

  // instance methods
  -[TLSystemApplication name]
  -[TLSystemApplication .cxx_destruct]
  -[TLSystemApplication bundleIdentifier]
  -[TLSystemApplication initWithBundleIdentifier:name:]


TLAlertPlaybackPolicy : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[TLAlertPlaybackPolicy shouldRepeatVibrationForAlert:]


TLAttentionAwarenessEffectCoordinator : NSObject /usr/lib/libc++.1.dylib
 @property  {?=Bff} effectParameters

  // instance methods
  -[TLAttentionAwarenessEffectCoordinator dealloc]
  -[TLAttentionAwarenessEffectCoordinator .cxx_destruct]
  -[TLAttentionAwarenessEffectCoordinator effectParameters]
  -[TLAttentionAwarenessEffectCoordinator setEffectParameters:]
  -[TLAttentionAwarenessEffectCoordinator setEffectParameters:effectMixFadeDuration:]
  -[TLAttentionAwarenessEffectCoordinator initWithEffectParameters:]
  -[TLAttentionAwarenessEffectCoordinator audioMixForAsset:]
  -[TLAttentionAwarenessEffectCoordinator isAttentionAwarenessAudioMix:]
  -[TLAttentionAwarenessEffectCoordinator _prepareAudioProcessingWithEffectAudioTapContext:maximumNumberOfFrames:processingFormat:]
  -[TLAttentionAwarenessEffectCoordinator _unprepareAudioProcessingWithEffectAudioTapContext:]
  -[TLAttentionAwarenessEffectCoordinator _finalizeAudioProcessingWithEffectAudioTapContext:]
  -[TLAttentionAwarenessEffectCoordinator _processAudioWithEffectAudioTapContext:bufferList:numberOfFramesRequested:numberOfFramesToProcess:]


TLPreferencesUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[TLPreferencesUtilities copySharedResourcesPreferencesDomain]
  +[TLPreferencesUtilities perWatchPreferencesDomain]
  +[TLPreferencesUtilities preferencesDomain]
  +[TLPreferencesUtilities copySharedResourcesPreferencesDomainForDomain:]
  +[TLPreferencesUtilities migratePerTopicPreferencesInDomain:withRegularPreferenceKeys:regularPreferenceKeysCount:intoSinglePerTopicPreferenceWithSuffix:usingPreferencesScope:]
  +[TLPreferencesUtilities _existingPerTopicPreferenceKeyPrefixesWithRegularPreferenceKeys:regularPreferenceKeysCount:]
  +[TLPreferencesUtilities _setValue:forKey:inDomain:usingPreferencesScope:]
  +[TLPreferencesUtilities _enumerateKeysAndValuesWithEligibleKeyPrefixes:inDomain:usingPreferencesScope:withBlock:]
  +[TLPreferencesUtilities _synchronizeDomain:usingPreferencesScope:]
  +[TLPreferencesUtilities _copyAllKeysAndValuesFromDomain:usingPreferencesScope:]


TLVibrationPersistenceUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[TLVibrationPersistenceUtilities _validateObjectWithError:validationBlock:]
  +[TLVibrationPersistenceUtilities _objectIsValidUserGeneratedVibrationPattern:error:]
  +[TLVibrationPersistenceUtilities objectIsValidUserGeneratedVibrationPatternsDictionary:error:]
  +[TLVibrationPersistenceUtilities userGeneratedVibrationStoreFileURL]


TLAlertConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  BOOL _hasCustomAudioVolume
 @property  double _audioPlaybackInitiationDelay
 @property  double _audioVolumeRampingDuration
 @property  long long type
 @property  NSString *topic
 @property  NSString *toneIdentifier
 @property  NSString *vibrationIdentifier
 @property  NSURL *externalToneFileURL
 @property  unsigned long externalToneMediaLibraryItemIdentifier
 @property  NSDictionary *externalVibrationPattern
 @property  NSURL *externalVibrationPatternFileURL
 @property  NSString *audioCategory
 @property  float audioVolume
 @property  BOOL forPreview
 @property  double maximumDuration
 @property  BOOL shouldRepeat
 @property  BOOL shouldIgnoreRingerSwitch
 @property  BOOL shouldForcePlayingAtUserSelectedAudioVolume

  // class methods
  +[TLAlertConfiguration supportsSecureCoding]

  // instance methods
  -[TLAlertConfiguration isEqual:]
  -[TLAlertConfiguration copyWithZone:]
  -[TLAlertConfiguration type]
  -[TLAlertConfiguration encodeWithCoder:]
  -[TLAlertConfiguration initWithCoder:]
  -[TLAlertConfiguration .cxx_destruct]
  -[TLAlertConfiguration initWithType:]
  -[TLAlertConfiguration topic]
  -[TLAlertConfiguration _freeze]
  -[TLAlertConfiguration setTopic:]
  -[TLAlertConfiguration maximumDuration]
  -[TLAlertConfiguration setMaximumDuration:]
  -[TLAlertConfiguration setToneIdentifier:]
  -[TLAlertConfiguration audioCategory]
  -[TLAlertConfiguration audioVolume]
  -[TLAlertConfiguration shouldIgnoreRingerSwitch]
  -[TLAlertConfiguration shouldRepeat]
  -[TLAlertConfiguration toneIdentifier]
  -[TLAlertConfiguration vibrationIdentifier]
  -[TLAlertConfiguration setAudioCategory:]
  -[TLAlertConfiguration setAudioVolume:]
  -[TLAlertConfiguration setShouldIgnoreRingerSwitch:]
  -[TLAlertConfiguration setShouldRepeat:]
  -[TLAlertConfiguration setVibrationIdentifier:]
  -[TLAlertConfiguration setForPreview:]
  -[TLAlertConfiguration _throwForFrozenInstance]
  -[TLAlertConfiguration setExternalToneFileURL:]
  -[TLAlertConfiguration setExternalToneMediaLibraryItemIdentifier:]
  -[TLAlertConfiguration setExternalVibrationPattern:]
  -[TLAlertConfiguration setExternalVibrationPatternFileURL:]
  -[TLAlertConfiguration setShouldForcePlayingAtUserSelectedAudioVolume:]
  -[TLAlertConfiguration _setAudioPlaybackInitiationDelay:]
  -[TLAlertConfiguration _setAudioVolumeRampingDuration:]
  -[TLAlertConfiguration _hasCustomAudioVolume]
  -[TLAlertConfiguration _audioPlaybackInitiationDelay]
  -[TLAlertConfiguration _audioVolumeRampingDuration]
  -[TLAlertConfiguration externalToneFileURL]
  -[TLAlertConfiguration externalToneMediaLibraryItemIdentifier]
  -[TLAlertConfiguration externalVibrationPattern]
  -[TLAlertConfiguration externalVibrationPatternFileURL]
  -[TLAlertConfiguration isForPreview]
  -[TLAlertConfiguration shouldForcePlayingAtUserSelectedAudioVolume]


TLITunesTone : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *identifier
 @property  NSString *name
 @property  NSString *albumTitle
 @property  NSString *artistName
 @property  NSString *genreName
 @property  NSString *filePath
 @property  NSNumber *syncIdentifier
 @property  unsigned long storeItemIdentifier
 @property  NSString *storeFrontIdentifier
 @property  BOOL purchased
 @property  BOOL ringtone
 @property  NSString *artworkFile
 @property  double duration
 @property  BOOL protectedContent
 @property  BOOL privateTone
 @property  NSNumber *fadeInDurationNumber
 @property  NSNumber *fadeOutDurationNumber

  // class methods
  +[TLITunesTone _identifierForPropertyListRepresentation:]

  // instance methods
  -[TLITunesTone isEqual:]
  -[TLITunesTone name]
  -[TLITunesTone .cxx_destruct]
  -[TLITunesTone identifier]
  -[TLITunesTone duration]
  -[TLITunesTone filePath]
  -[TLITunesTone artistName]
  -[TLITunesTone storeFrontIdentifier]
  -[TLITunesTone albumTitle]
  -[TLITunesTone genreName]
  -[TLITunesTone storeItemIdentifier]
  -[TLITunesTone syncIdentifier]
  -[TLITunesTone initWithPropertyListRepresentation:filePath:]
  -[TLITunesTone isDuplicateOfTone:]
  -[TLITunesTone isRingtone]
  -[TLITunesTone initWithToneStoreDownload:]
  -[TLITunesTone isPurchased]
  -[TLITunesTone artworkFile]
  -[TLITunesTone isProtectedContent]
  -[TLITunesTone isPrivateTone]
  -[TLITunesTone fadeInDurationNumber]
  -[TLITunesTone fadeOutDurationNumber]


TLSystemSound : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *soundFileURL
 @property  unsigned int soundID
 @property  BOOL requiresLongFormPlayback

  // instance methods
  -[TLSystemSound dealloc]
  -[TLSystemSound .cxx_destruct]
  -[TLSystemSound soundFileURL]
  -[TLSystemSound soundID]
  -[TLSystemSound initWithSoundFileURL:soundID:requiresLongFormPlayback:]
  -[TLSystemSound requiresLongFormPlayback]


TLAlertTone : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *soundFileURL
 @property  TLSystemSound *actualSound
 @property  TLSystemSound *previewSound
 @property  BOOL requiresLongFormPlayback

  // instance methods
  -[TLAlertTone .cxx_destruct]
  -[TLAlertTone soundFileURL]
  -[TLAlertTone initWithSoundFileURL:actualSoundID:previewSoundID:requiresLongFormPlayback:]
  -[TLAlertTone actualSound]
  -[TLAlertTone previewSound]
  -[TLAlertTone requiresLongFormPlayback]


TLToneStoreDownloadStoreServicesController : NSObject /usr/lib/libc++.1.dylib <SSDownloadManagerObserver, SSPurchaseManagerDelegate, TLToneStoreDownloadController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeAccountName

  // instance methods
  -[TLToneStoreDownloadStoreServicesController init]
  -[TLToneStoreDownloadStoreServicesController dealloc]
  -[TLToneStoreDownloadStoreServicesController .cxx_destruct]
  -[TLToneStoreDownloadStoreServicesController addObserver:]
  -[TLToneStoreDownloadStoreServicesController removeObserver:]
  -[TLToneStoreDownloadStoreServicesController downloadManager:downloadStatesDidChange:]
  -[TLToneStoreDownloadStoreServicesController purchaseManager:didFinishPurchasesWithResponses:]
  -[TLToneStoreDownloadStoreServicesController _handleAccountStoreDidChangeNotification:]
  -[TLToneStoreDownloadStoreServicesController storeAccountName]
  -[TLToneStoreDownloadStoreServicesController _updateStoreAccountName]
  -[TLToneStoreDownloadStoreServicesController _performBlockOnAccessQueue:]
  -[TLToneStoreDownloadStoreServicesController _handleToneManagerContentsDidChangeNotification:]
  -[TLToneStoreDownloadStoreServicesController _assertRunningOnAccessQueue]
  -[TLToneStoreDownloadStoreServicesController _notifyObserversOfUpdatedStoreAccountName:]
  -[TLToneStoreDownloadStoreServicesController _openToneStoreWithStoreItemKind:]
  -[TLToneStoreDownloadStoreServicesController _notifyObserversOfStartedToneStoreDownloads:progressedToneStoreDownload:finishedToneStoreDownloads:]
  -[TLToneStoreDownloadStoreServicesController _notifyObserversOfCheckingForDownloadsFinishedWithoutNeedToIssueAnyDownload]
  -[TLToneStoreDownloadStoreServicesController openAlertToneStore]
  -[TLToneStoreDownloadStoreServicesController openRingtoneStore]
  -[TLToneStoreDownloadStoreServicesController redownloadAllTones]


TLVibrationManager : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL needsRefresh
 @property  BOOL allowsAutoRefresh
 @property  BOOL shouldVibrateForCurrentRingerSwitchState
 @property  BOOL shouldVibrateOnRing
 @property  BOOL shouldVibrateOnSilent

  // class methods
  +[TLVibrationManager sharedVibrationManager]
  +[TLVibrationManager _handleVibrationPreferencesDidChangeNotificationForPreferencesKinds:atInitiativeOfVibrationManager:]
  +[TLVibrationManager _handleVibrateOnRingOrSilentDidChangeNotification]

  // instance methods
  -[TLVibrationManager init]
  -[TLVibrationManager dealloc]
  -[TLVibrationManager .cxx_destruct]
  -[TLVibrationManager refresh]
  -[TLVibrationManager vibrationWithIdentifierIsValid:]
  -[TLVibrationManager nameOfVibrationWithIdentifier:]
  -[TLVibrationManager _setCurrentVibrationWatchAlertPolicy:forAlertType:]
  -[TLVibrationManager _currentVibrationWatchAlertPolicyForAlertType:]
  -[TLVibrationManager defaultVibrationIdentifierForAlertType:]
  -[TLVibrationManager setCurrentVibrationIdentifier:forAlertType:topic:]
  -[TLVibrationManager _performBlockInAccessQueue:]
  -[TLVibrationManager _newServiceConnection]
  -[TLVibrationManager _initWithSpecialBehaviors:]
  -[TLVibrationManager _isUnitTestingModeEnabled]
  -[TLVibrationManager _userGeneratedVibrationPatterns]
  -[TLVibrationManager currentVibrationIdentifierForAlertType:topic:]
  -[TLVibrationManager _systemWideVibrationPatternPreferenceKeyForAlertType:]
  -[TLVibrationManager _defaultVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:]
  -[TLVibrationManager _currentVibrationIdentifierForAlertType:topic:]
  -[TLVibrationManager _defaultPreferablyNonSilentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:]
  -[TLVibrationManager _currentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:allowsNoneDefaultToAnyActualVibrationSubstitution:]
  -[TLVibrationManager _sanitizeVibrationIdentifier:forAlertType:topic:correspondingToneIdentifier:useDefaultVibrationAsFallback:allowsNoneDefaultToAnyActualVibrationSubstitution:didFallback:]
  -[TLVibrationManager _currentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:]
  -[TLVibrationManager _didSetVibrationPreferenceSuccessfullyWithKey:inDomain:usingPreferencesOfKind:]
  -[TLVibrationManager currentVibrationIdentifierForAlertType:]
  -[TLVibrationManager patternForVibrationWithIdentifier:repeating:]
  -[TLVibrationManager defaultVibrationIdentifierForAlertType:topic:]
  -[TLVibrationManager _areSynchronizedVibrationsAllowedForAlertType:]
  -[TLVibrationManager _synchronizedVibrationIdentifierForToneIdentifier:]
  -[TLVibrationManager _patternForSystemVibrationWithIdentifier:shouldLogAssetPath:]
  -[TLVibrationManager _systemVibrationIdentifiersForSubdirectory:]
  -[TLVibrationManager noneVibrationPattern]
  -[TLVibrationManager _completeSystemVibrationsSubdirectoryForSubdirectory:]
  -[TLVibrationManager _localizedNameForVibrationWithIdentifier:]
  -[TLVibrationManager patternForVibrationWithIdentifier:]
  -[TLVibrationManager _nameOfVibrationWithIdentifier:]
  -[TLVibrationManager _retrieveUserGeneratedVibrationPatternsUsingService]
  -[TLVibrationManager _handleUserGeneratedVibrationsDidChangeNotification]
  -[TLVibrationManager _setUserGeneratedVibrationPatternsUsingService:error:]
  -[TLVibrationManager _didChangeUserGeneratedVibrationPatterns]
  -[TLVibrationManager _saveUserGeneratedVibrationPatterns:error:]
  -[TLVibrationManager _removeAllUserGeneratedVibrationPatternsUsingServiceWithError:]
  -[TLVibrationManager shouldVibrateOnSilent]
  -[TLVibrationManager shouldVibrateOnRing]
  -[TLVibrationManager _booleanPreferenceForKey:defaultValue:]
  -[TLVibrationManager _storedSystemVibrationDataMigrationVersion]
  -[TLVibrationManager setCurrentVibrationIdentifier:forAlertType:]
  -[TLVibrationManager _makeSystemVibrationDataMigrationVersionCurrentIfNecessary]
  -[TLVibrationManager _currentVibrationWatchAlertPolicyForAlertType:topic:]
  -[TLVibrationManager _currentVibrationWatchAlertPolicyForAlertType:topic:didFindPersistedWatchAlertPolicy:]
  -[TLVibrationManager _currentVibrationWatchAlertPolicyPreferenceKeyForAlertType:topic:]
  -[TLVibrationManager _setCurrentVibrationWatchAlertPolicy:forAlertType:topic:]
  -[TLVibrationManager setAllowsAutoRefresh:]
  -[TLVibrationManager currentVibrationNameForAlertType:]
  -[TLVibrationManager currentVibrationPatternForAlertType:]
  -[TLVibrationManager defaultVibrationNameForAlertType:]
  -[TLVibrationManager defaultVibrationPatternForAlertType:]
  -[TLVibrationManager hasSpecificDefaultVibrationIdentifierForAlertType:topic:]
  -[TLVibrationManager noneVibrationName]
  -[TLVibrationManager allUserSelectableSystemVibrationIdentifiers]
  -[TLVibrationManager allUserGeneratedVibrationIdentifiers]
  -[TLVibrationManager _vibrationIsSettableForAlertType:]
  -[TLVibrationManager _sanitizeVibrationIdentifier:forAlertType:topic:correspondingToneIdentifier:didFallbackToCurrentVibrationIdentifier:]
  -[TLVibrationManager addUserGeneratedVibrationPattern:name:error:]
  -[TLVibrationManager setName:forUserGeneratedVibrationWithIdentifier:error:]
  -[TLVibrationManager deleteUserGeneratedVibrationPatternWithIdentifier:error:]
  -[TLVibrationManager _numberOfUserGeneratedVibrations]
  -[TLVibrationManager _removeAllUserGeneratedVibrationsWithError:]
  -[TLVibrationManager shouldVibrateForCurrentRingerSwitchState]
  -[TLVibrationManager _migrateLegacySettings]
  -[TLVibrationManager needsRefresh]
  -[TLVibrationManager allowsAutoRefresh]
  -[TLVibrationManager currentVibrationIdentifierForAlertType:accountIdentifier:]
  -[TLVibrationManager setCurrentVibrationIdentifier:forAlertType:accountIdentifier:]
  -[TLVibrationManager _currentVibrationWatchAlertPolicyForAlertType:accountIdentifier:]
  -[TLVibrationManager _setCurrentVibrationWatchAlertPolicy:forAlertType:accountIdentifier:]


TLAlertStoppingOptions : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  double fadeOutDuration
 @property  BOOL shouldWaitUntilEndOfCurrentRepetition

  // instance methods
  -[TLAlertStoppingOptions init]
  -[TLAlertStoppingOptions isEqual:]
  -[TLAlertStoppingOptions copyWithZone:]
  -[TLAlertStoppingOptions setFadeOutDuration:]
  -[TLAlertStoppingOptions fadeOutDuration]
  -[TLAlertStoppingOptions shouldWaitUntilEndOfCurrentRepetition]
  -[TLAlertStoppingOptions setShouldWaitUntilEndOfCurrentRepetition:]


TLAttentionAwarenessEffectProcessor : NSObject /usr/lib/libc++.1.dylib
 @property  {?=Bff} effectParameters

  // instance methods
  -[TLAttentionAwarenessEffectProcessor dealloc]
  -[TLAttentionAwarenessEffectProcessor .cxx_destruct]
  -[TLAttentionAwarenessEffectProcessor stop]
  -[TLAttentionAwarenessEffectProcessor start]
  -[TLAttentionAwarenessEffectProcessor effectParameters]
  -[TLAttentionAwarenessEffectProcessor setEffectParameters:]
  -[TLAttentionAwarenessEffectProcessor setEffectParameters:effectMixFadeDuration:]
  -[TLAttentionAwarenessEffectProcessor initWithProcessingFormat:framesPerRender:effectParameters:]
  -[TLAttentionAwarenessEffectProcessor render:numberOfFrames:]
  -[TLAttentionAwarenessEffectProcessor _assertRunningOnAccessQueue]
  -[TLAttentionAwarenessEffectProcessor _applyEffectParameters:includingEffectMix:]
  -[TLAttentionAwarenessEffectProcessor _sanitizeEffectMix:]
  -[TLAttentionAwarenessEffectProcessor _applyEffectMix:]
  -[TLAttentionAwarenessEffectProcessor _currentEffectMix]
  -[TLAttentionAwarenessEffectProcessor _assertNotRunningOnAccessQueue]


TLAlertContext : NSObject /usr/lib/libc++.1.dylib
 @property  long long playbackBackEnd
 @property  NSObject<OS_dispatch_source> *timeoutTimerSource
 @property  BOOL beingInterrupted

  // instance methods
  -[TLAlertContext .cxx_destruct]
  -[TLAlertContext playbackBackEnd]
  -[TLAlertContext setPlaybackBackEnd:]
  -[TLAlertContext timeoutTimerSource]
  -[TLAlertContext setTimeoutTimerSource:]
  -[TLAlertContext isBeingInterrupted]
  -[TLAlertContext setBeingInterrupted:]


TLVibrationPattern : NSObject /usr/lib/libc++.1.dylib
 @property  id _artificiallyRepeatingPropertyListRepresentation
 @property  id propertyListRepresentation
 @property  id contextObject

  // class methods
  +[TLVibrationPattern isValidVibrationPatternPropertyListRepresentation:]
  +[TLVibrationPattern noneVibrationPattern]
  +[TLVibrationPattern simpleVibrationPatternWithVibrationDuration:pauseDuration:]
  +[TLVibrationPattern complexVibrationPatternWithDurationsForVibrationsAndPauses:]

  // instance methods
  -[TLVibrationPattern init]
  -[TLVibrationPattern .cxx_destruct]
  -[TLVibrationPattern propertyListRepresentation]
  -[TLVibrationPattern initWithPropertyListRepresentation:]
  -[TLVibrationPattern _artificiallyRepeatingPropertyListRepresentation]
  -[TLVibrationPattern _initWithPropertyListRepresentation:skipValidation:]
  -[TLVibrationPattern _computedDuration]
  -[TLVibrationPattern appendVibrationComponentWithDuration:isPause:]
  -[TLVibrationPattern contextObject]
  -[TLVibrationPattern setContextObject:]


TLAccessQueue : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *label

  // instance methods
  -[TLAccessQueue .cxx_destruct]
  -[TLAccessQueue label]
  -[TLAccessQueue initWithLabel:appendUUIDToLabel:]
  -[TLAccessQueue performSynchronousBlock:]
  -[TLAccessQueue assertNotRunningInAccessQueue]
  -[TLAccessQueue _performSynchronousBlockInSerialQueue:]
  -[TLAccessQueue performAsynchronousBlock:]


TLAlertSystemSoundController : NSObject /usr/lib/libc++.1.dylib <TLBacklightObserver, TLAlertPlaybackBackEndController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TLAlertSystemSoundController _toneIdentifierForDeemphasizingAlert:]
  +[TLAlertSystemSoundController _soundForAlert:toneIdentifierForDeemphasizingAlert:]
  +[TLAlertSystemSoundController _reportPlaybackFailureWithPlaybackCompletionContext:]
  +[TLAlertSystemSoundController _optionsForSystemSoundAlert:withSound:]
  +[TLAlertSystemSoundController _soundBehaviorForAlert:withSound:]
  +[TLAlertSystemSoundController _componentSuppressionFlagsForAlert:]
  +[TLAlertSystemSoundController _descriptionForAlertComponentsSuppressionFlags:]
  +[TLAlertSystemSoundController _vibrationPatternForAlert:]

  // instance methods
  -[TLAlertSystemSoundController init]
  -[TLAlertSystemSoundController dealloc]
  -[TLAlertSystemSoundController .cxx_destruct]
  -[TLAlertSystemSoundController _performBlockOnAccessQueue:]
  -[TLAlertSystemSoundController _assertRunningOnAccessQueue]
  -[TLAlertSystemSoundController _prepareForDealloc]
  -[TLAlertSystemSoundController _stopPlayingAlerts:withOptions:playbackCompletionType:willStopAlertsHandler:completionHandler:]
  -[TLAlertSystemSoundController _playAlert:withCompletionHandler:]
  -[TLAlertSystemSoundController _beginRequiringBacklightObservation]
  -[TLAlertSystemSoundController _notifyOfPlaybackCompletionWithContext:]
  -[TLAlertSystemSoundController _willBeginPlayingAlert:withSound:]
  -[TLAlertSystemSoundController _playAlert:withSound:]
  -[TLAlertSystemSoundController _didCompletePlaybackForAlert:]
  -[TLAlertSystemSoundController _endRequiringBacklightObservation]
  -[TLAlertSystemSoundController backlightStatusDidChange:]
  -[TLAlertSystemSoundController playAlert:withCompletionHandler:]
  -[TLAlertSystemSoundController stopPlayingAlerts:withOptions:playbackCompletionType:willStopAlertsHandler:completionHandler:]


TLAlertPlaybackCompletionContext : NSObject /usr/lib/libc++.1.dylib
 @property  @? completionHandler
 @property  long long playbackCompletionType
 @property  NSError *error

  // instance methods
  -[TLAlertPlaybackCompletionContext .cxx_destruct]
  -[TLAlertPlaybackCompletionContext error]
  -[TLAlertPlaybackCompletionContext setError:]
  -[TLAlertPlaybackCompletionContext completionHandler]
  -[TLAlertPlaybackCompletionContext setCompletionHandler:]
  -[TLAlertPlaybackCompletionContext setPlaybackCompletionType:]
  -[TLAlertPlaybackCompletionContext playbackCompletionType]


TLToneStoreDownload : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *name
 @property  NSString *albumTitle
 @property  NSString *artistName
 @property  double duration
 @property  NSString *genreName
 @property  BOOL ringtone
 @property  unsigned long storeItemIdentifier
 @property  float downloadProgress
 @property  NSString *toneIdentifier
 @property  NSString *identifier

  // instance methods
  -[TLToneStoreDownload init]
  -[TLToneStoreDownload dealloc]
  -[TLToneStoreDownload isEqual:]
  -[TLToneStoreDownload name]
  -[TLToneStoreDownload .cxx_destruct]
  -[TLToneStoreDownload identifier]
  -[TLToneStoreDownload duration]
  -[TLToneStoreDownload _setDuration:]
  -[TLToneStoreDownload _setName:]
  -[TLToneStoreDownload toneIdentifier]
  -[TLToneStoreDownload artistName]
  -[TLToneStoreDownload albumTitle]
  -[TLToneStoreDownload downloadProgress]
  -[TLToneStoreDownload genreName]
  -[TLToneStoreDownload storeItemIdentifier]
  -[TLToneStoreDownload _setArtistName:]
  -[TLToneStoreDownload _setStoreItemIdentifier:]
  -[TLToneStoreDownload isRingtone]
  -[TLToneStoreDownload _setDownloadProgress:]
  -[TLToneStoreDownload _setAlbumTitle:]
  -[TLToneStoreDownload _setGenreName:]
  -[TLToneStoreDownload _setRingtone:]
  -[TLToneStoreDownload _setToneIdentifier:]


TLAttentionAwarenessEffectAudioTapContext : NSObject /usr/lib/libc++.1.dylib
 @property  TLAttentionAwarenessEffectCoordinator *effectCoordinator
 @property  TLAttentionAwarenessEffectProcessor *effectProcessor
 @property  NSUUID *identifier

  // instance methods
  -[TLAttentionAwarenessEffectAudioTapContext init]
  -[TLAttentionAwarenessEffectAudioTapContext isEqual:]
  -[TLAttentionAwarenessEffectAudioTapContext .cxx_destruct]
  -[TLAttentionAwarenessEffectAudioTapContext identifier]
  -[TLAttentionAwarenessEffectAudioTapContext setEffectCoordinator:]
  -[TLAttentionAwarenessEffectAudioTapContext effectProcessor]
  -[TLAttentionAwarenessEffectAudioTapContext setEffectProcessor:]
  -[TLAttentionAwarenessEffectAudioTapContext effectCoordinator]


TLCapabilitiesManager : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL ringtoneStoreAvailable
 @property  BOOL alertToneStoreAvailable
 @property  BOOL wantsModernDefaultRingtone
 @property  BOOL hasVibratorCapability
 @property  BOOL hasSynchronizedVibrationsCapability
 @property  BOOL hasSynchronizedEmbeddedVibrationsCapability
 @property  BOOL hasUserGeneratedVibrationsCapability
 @property  NSString *deviceCodeName
 @property  NSString *simplifiedDeviceCodeName
 @property  BOOL homePod

  // class methods
  +[TLCapabilitiesManager sharedCapabilitiesManager]

  // instance methods
  -[TLCapabilitiesManager init]
  -[TLCapabilitiesManager dealloc]
  -[TLCapabilitiesManager .cxx_destruct]
  -[TLCapabilitiesManager isHomePod]
  -[TLCapabilitiesManager hasVibratorCapability]
  -[TLCapabilitiesManager _hasTelephonyCapability]
  -[TLCapabilitiesManager wantsModernDefaultRingtone]
  -[TLCapabilitiesManager deviceCodeName]
  -[TLCapabilitiesManager simplifiedDeviceCodeName]
  -[TLCapabilitiesManager hasSynchronizedVibrationsCapability]
  -[TLCapabilitiesManager hasSynchronizedEmbeddedVibrationsCapability]
  -[TLCapabilitiesManager _handleStoreAvailableItemKindsChangedNotification:]
  -[TLCapabilitiesManager _checkRingtoneStoreAvailability]
  -[TLCapabilitiesManager _updateRingtoneStoreAvailabilityWithAvailableKinds:error:]
  -[TLCapabilitiesManager isRingtoneStoreAvailable]
  -[TLCapabilitiesManager isAlertToneStoreAvailable]
  -[TLCapabilitiesManager hasUserGeneratedVibrationsCapability]


TLAttentionAwarenessObserver : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[TLAttentionAwarenessObserver sharedAttentionAwarenessObserver]
  +[TLAttentionAwarenessObserver supportsAttenuatingTonesForAttentionDetected]

  // instance methods
  -[TLAttentionAwarenessObserver init]
  -[TLAttentionAwarenessObserver dealloc]
  -[TLAttentionAwarenessObserver .cxx_destruct]
  -[TLAttentionAwarenessObserver _assertRunningOnAccessQueue]
  -[TLAttentionAwarenessObserver _assertNotRunningOnAccessQueue]
  -[TLAttentionAwarenessObserver _didCompleteInitialization]
  -[TLAttentionAwarenessObserver _endPollingForAttention]
  -[TLAttentionAwarenessObserver _invokePollingForAttentionEventHandlers:eventType:]
  -[TLAttentionAwarenessObserver _beginPollingForAttention]
  -[TLAttentionAwarenessObserver _didReceiveAttentionPollingEventOfType:attentionEvent:]
  -[TLAttentionAwarenessObserver pollForAttentionWithEventHandler:]
  -[TLAttentionAwarenessObserver cancelPollForAttentionWithToken:]


TLContentProtectionStateObserver : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[TLContentProtectionStateObserver sharedContentProtectionStateObserver]

  // instance methods
  -[TLContentProtectionStateObserver init]
  -[TLContentProtectionStateObserver dealloc]
  -[TLContentProtectionStateObserver .cxx_destruct]
  -[TLContentProtectionStateObserver performBlockAfterProtectedContentUnlocked:]
  -[TLContentProtectionStateObserver cancelBlockScheduledForProtectedContentUnlockedEventWithToken:]
  -[TLContentProtectionStateObserver _assertRunningOnAccessQueue]
  -[TLContentProtectionStateObserver _assertNotRunningOnAccessQueue]
  -[TLContentProtectionStateObserver _cancelFirstUnlockNotifyToken]
  -[TLContentProtectionStateObserver _performBlockAfterProtectedContentUnlocked:]
  -[TLContentProtectionStateObserver _loadContentProtectionStatusIfNeeded]
  -[TLContentProtectionStateObserver _loadUnlockedSinceBootStatusIfNeeded]
  -[TLContentProtectionStateObserver _cancelBlockScheduledForProtectedContentUnlockedEventWithToken:]
  -[TLContentProtectionStateObserver _handleFirstUnlockNotification]
  -[TLContentProtectionStateObserver _updateUnlockedSinceBootStatus]
  -[TLContentProtectionStateObserver _queryCurrentUnlockedSinceBootStatus]
  -[TLContentProtectionStateObserver _registerFirstUnlockNotifyToken]


TLAlertSystemSoundContext : NSObject /usr/lib/libc++.1.dylib
 @property  TLSystemSound *sound
 @property  TLAlertPlaybackCompletionContext *playbackCompletionContext
 @property  <TLAlertPlaybackObserver> *playbackObserver
 @property  BOOL hasPlaybackStarted
 @property  BOOL beingInterrupted
 @property  NSString *toneIdentifierForDeemphasizingAlert
 @property  BOOL beingDeemphasized
 @property  BOOL deemphasized

  // instance methods
  -[TLAlertSystemSoundContext .cxx_destruct]
  -[TLAlertSystemSoundContext setSound:]
  -[TLAlertSystemSoundContext sound]
  -[TLAlertSystemSoundContext isBeingInterrupted]
  -[TLAlertSystemSoundContext setBeingInterrupted:]
  -[TLAlertSystemSoundContext playbackObserver]
  -[TLAlertSystemSoundContext setToneIdentifierForDeemphasizingAlert:]
  -[TLAlertSystemSoundContext setPlaybackCompletionContext:]
  -[TLAlertSystemSoundContext setPlaybackObserver:]
  -[TLAlertSystemSoundContext setDeemphasized:]
  -[TLAlertSystemSoundContext hasPlaybackStarted]
  -[TLAlertSystemSoundContext setHasPlaybackStarted:]
  -[TLAlertSystemSoundContext isBeingDeemphasized]
  -[TLAlertSystemSoundContext setBeingDeemphasized:]
  -[TLAlertSystemSoundContext playbackCompletionContext]
  -[TLAlertSystemSoundContext toneIdentifierForDeemphasizingAlert]
  -[TLAlertSystemSoundContext isDeemphasized]


TLSilentModeController : NSObject /usr/lib/libc++.1.dylib
 @property  long long silentModeStatus

  // class methods
  +[TLSilentModeController sharedSilentModeController]

  // instance methods
  -[TLSilentModeController init]
  -[TLSilentModeController dealloc]
  -[TLSilentModeController .cxx_destruct]
  -[TLSilentModeController _performBlockOnAccessQueue:]
  -[TLSilentModeController _assertRunningOnAccessQueue]
  -[TLSilentModeController silentModeStatus]
  -[TLSilentModeController _assertNotRunningOnAccessQueue]
  -[TLSilentModeController _registerRingerSwitchChangedNotifyToken]
  -[TLSilentModeController _silentModeStatusForRingerSwitchChangedNotifyToken:]
  -[TLSilentModeController _cancelRingerSwitchChangedNotifyToken]
  -[TLSilentModeController _updateSilentModeStatusUsingRingerSwitchChangedNotifyToken:]
  -[TLSilentModeController _setSilentModeStatus:]


TLAlertActivationAssertion : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[TLAlertActivationAssertion dealloc]
  -[TLAlertActivationAssertion .cxx_destruct]
  -[TLAlertActivationAssertion acquire]
  -[TLAlertActivationAssertion relinquish]
  -[TLAlertActivationAssertion _acquire]
  -[TLAlertActivationAssertion _relinquish]
  -[TLAlertActivationAssertion initWithAlert:]


TLToneImportResponse : NSObject /usr/lib/libc++.1.dylib
 @property  long long statusCode
 @property  NSString *toneIdentifier

  // instance methods
  -[TLToneImportResponse .cxx_destruct]
  -[TLToneImportResponse statusCode]
  -[TLToneImportResponse toneIdentifier]
  -[TLToneImportResponse initWithStatusCode:toneIdentifier:]


TLBacklight : NSObject /usr/lib/libc++.1.dylib
 @property  long long backlightStatus

  // class methods
  +[TLBacklight sharedBacklight]

  // instance methods
  -[TLBacklight init]
  -[TLBacklight dealloc]
  -[TLBacklight .cxx_destruct]
  -[TLBacklight addObserver:]
  -[TLBacklight removeObserver:]
  -[TLBacklight _performBlockOnAccessQueue:]
  -[TLBacklight _assertRunningOnAccessQueue]
  -[TLBacklight _assertNotRunningOnAccessQueue]
  -[TLBacklight _notifyObservers:ofUpdatedBacklightStatus:]
  -[TLBacklight _setObservingBacklight:]
  -[TLBacklight backlightStatus]
  -[TLBacklight _setBacklightStatus:]


TLAlert : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL _hasSynchronizedVibrationUnmatchedWithTone
 @property  <TLAlertPlaybackObserver> *playbackObserver
 @property  TLAlertConfiguration *configuration
 @property  long long type
 @property  NSString *toneIdentifier
 @property  NSString *vibrationIdentifier

  // class methods
  +[TLAlert alertWithConfiguration:]
  +[TLAlert _currentOverridePolicyForType:]
  +[TLAlert _setCurrentOverridePolicy:forType:]
  +[TLAlert playAlertForType:]
  +[TLAlert playToneAndVibrationForType:]
  +[TLAlert _watchPrefersSalientToneAndVibration]
  +[TLAlert _setWatchPrefersSalientToneAndVibration:]
  +[TLAlert _stopAllAlerts]

  // instance methods
  -[TLAlert type]
  -[TLAlert .cxx_destruct]
  -[TLAlert stop]
  -[TLAlert initWithType:]
  -[TLAlert configuration]
  -[TLAlert play]
  -[TLAlert playWithCompletionHandler:]
  -[TLAlert toneIdentifier]
  -[TLAlert vibrationIdentifier]
  -[TLAlert _descriptionForDebugging:]
  -[TLAlert initWithType:toneIdentifier:vibrationIdentifier:]
  -[TLAlert playWithCompletionHandler:targetQueue:]
  -[TLAlert _updateAudioVolumeDynamicallyToValue:]
  -[TLAlert initWithType:accountIdentifier:]
  -[TLAlert playbackObserver]
  -[TLAlert setPlaybackObserver:]
  -[TLAlert _initWithConfiguration:toneIdentifier:vibrationIdentifier:hasSynchronizedVibrationUnmatchedWithTone:]
  -[TLAlert stopWithOptions:]
  -[TLAlert _hasSynchronizedVibrationUnmatchedWithTone]


TLAlertController : NSObject /usr/lib/libc++.1.dylib <TLAlertPlaybackBackEndController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TLAlertController sharedAlertController]
  +[TLAlertController _playbackBackEndForAlert:]
  +[TLAlertController _shouldStopAlertForUserInterruption:]

  // instance methods
  -[TLAlertController init]
  -[TLAlertController dealloc]
  -[TLAlertController .cxx_destruct]
  -[TLAlertController _performBlockOnAccessQueue:]
  -[TLAlertController _assertRunningOnAccessQueue]
  -[TLAlertController _stopPlayingAlerts:withOptions:playbackCompletionType:willStopAlertsHandler:completionHandler:]
  -[TLAlertController playAlert:withCompletionHandler:]
  -[TLAlertController stopPlayingAlerts:withOptions:playbackCompletionType:willStopAlertsHandler:completionHandler:]
  -[TLAlertController handleActivationAssertionStatusChangeForAlert:updatedStatus:]
  -[TLAlertController updateAudioVolumeDynamicallyForAlert:toValue:]
  -[TLAlertController stopAllAlerts]
  -[TLAlertController _stopAllAlertsInCurrentProcess]
  -[TLAlertController _prepareForPlayingAlert:]
  -[TLAlertController _didCompletePlaybackOfAlert:]
  -[TLAlertController _controllerForPlaybackBackEnd:]
  -[TLAlertController _didReachTimeoutForAlert:]
  -[TLAlertController _queuePlayerController]
  -[TLAlertController _systemSoundController]


TLAlertQueuePlayerController : NSObject /usr/lib/libc++.1.dylib <TLAlertPlaybackBackEndController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TLAlertQueuePlayerController _audioCategoryForAlert:]
  +[TLAlertQueuePlayerController _propertyKeysOfInterestForToneAssets]
  +[TLAlertQueuePlayerController _shouldVibrateForAlert:]
  +[TLAlertQueuePlayerController _shouldBypassRingerSwitchPolicyForAlert:]
  +[TLAlertQueuePlayerController _celestialAudioCategoryForAudioSessionCategory:]
  +[TLAlertQueuePlayerController _shouldApplyAttentionAwarenessEffectsForAlert:]
  +[TLAlertQueuePlayerController _clientNameForAlert:]
  +[TLAlertQueuePlayerController _clientPriorityForAlert:]
  +[TLAlertQueuePlayerController _shouldHandleAudioSessionActivationForAlert:]

  // instance methods
  -[TLAlertQueuePlayerController init]
  -[TLAlertQueuePlayerController dealloc]
  -[TLAlertQueuePlayerController .cxx_destruct]
  -[TLAlertQueuePlayerController observeValueForKeyPath:ofObject:change:context:]
  -[TLAlertQueuePlayerController _stopPlayingAlerts:withOptions:playbackCompletionType:willStopAlertsHandler:completionHandler:]
  -[TLAlertQueuePlayerController _playAlert:withCompletionHandler:]
  -[TLAlertQueuePlayerController playAlert:withCompletionHandler:]
  -[TLAlertQueuePlayerController stopPlayingAlerts:withOptions:playbackCompletionType:willStopAlertsHandler:completionHandler:]
  -[TLAlertQueuePlayerController handleActivationAssertionStatusChangeForAlert:updatedStatus:]
  -[TLAlertQueuePlayerController updateAudioVolumeDynamicallyForAlert:toValue:]
  -[TLAlertQueuePlayerController _destroyQueuePlayer]
  -[TLAlertQueuePlayerController _performBlockOnAudioEventQueue:]
  -[TLAlertQueuePlayerController _updateAudioVolumeDynamicallyForAlert:toValue:]
  -[TLAlertQueuePlayerController _handleActivationAssertionStatusChangeForAlert:updatedStatus:]
  -[TLAlertQueuePlayerController _assertRunningOnAudioEventQueue]
  -[TLAlertQueuePlayerController _beginPreventingAudioSessionDeactivation]
  -[TLAlertQueuePlayerController _stopPlayback]
  -[TLAlertQueuePlayerController _didCompletePlaybackWithCompletionType:error:]
  -[TLAlertQueuePlayerController _reloadPlaybackForPlayingAlertWithToneIdentifier:]
  -[TLAlertQueuePlayerController _endPreventingAudioSessionDeactivation]
  -[TLAlertQueuePlayerController _stopPlaybackWithOptions:playerWasAlreadyPausedExternally:]
  -[TLAlertQueuePlayerController _restoreAudioEnvironment]
  -[TLAlertQueuePlayerController _prepareAudioEnvironment]
  -[TLAlertQueuePlayerController _createQueuePlayerIfNecessary]
  -[TLAlertQueuePlayerController _startPlaybackForAssetWithLoadedProperties:alert:]
  -[TLAlertQueuePlayerController _fallbackToneIdentifierForPlayingAlert]
  -[TLAlertQueuePlayerController _canPlayToneAsset:]
  -[TLAlertQueuePlayerController _startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:]
  -[TLAlertQueuePlayerController _stopObservingQueuePlayer]
  -[TLAlertQueuePlayerController _willBeginPlayingAlert]
  -[TLAlertQueuePlayerController _startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:hasAlreadyDetectedUserAttention:]
  -[TLAlertQueuePlayerController _audioMixForVolumeRampingWithDuration:toneAsset:toneAssetDuration:itemIndex:]
  -[TLAlertQueuePlayerController _startObservingQueuePlayer]
  -[TLAlertQueuePlayerController _performDelayedAudioPlaybackInitiationForAlert:]
  -[TLAlertQueuePlayerController _didEndPlayingAlert]
  -[TLAlertQueuePlayerController _audioVolumeForAlert:audioCategory:]
  -[TLAlertQueuePlayerController _activateAudioSessionIfNeeded]
  -[TLAlertQueuePlayerController _didReceiveAttentionPollingEventOfType:alertForAudioEnvironmentSetup:]
  -[TLAlertQueuePlayerController _deactivateAudioSessionIfNeeded]
  -[TLAlertQueuePlayerController _resetClientPriority]
  -[TLAlertQueuePlayerController _queuePlayer:currentItemWasUpdatedFromValue:]
  -[TLAlertQueuePlayerController _queuePlayer:currentItemStatusWasUpdatedToValue:]
  -[TLAlertQueuePlayerController _startObservingAudioSessionInterruptionNotifications]
  -[TLAlertQueuePlayerController _stopObservingAudioSessionInterruptionNotifications]
  -[TLAlertQueuePlayerController _handleAudioSessionInterruptionNotification:]
  -[TLAlertQueuePlayerController _handleAudioSessionInterruptionOfType:withOptions:]
  -[TLAlertQueuePlayerController _adjustAudioVolumeForOptimalRampingPerception:]


AVPlayerItem(TLExtensions)
	// instance methods
	-[AVPlayerItem(TLExtensions) tl_hapticPlayerItemTrack]

NSError(TLExtensions)
	// class methods
	+[NSError(TLExtensions) tl_errorWithDomain:description:]

	// instance methods
	-[NSError(TLExtensions) tl_nonRedundantDescription]

01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioConnectionPoint 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioEngine 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioFormat 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioPCMBuffer 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioUnitEQ 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioUnitReverb 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMix 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMixInputParameters 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVQueuePlayer 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0100 /usr/lib/libAudioStatistics.dylib: CAReporter 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
