|| __DATA.__common _kSystemSoundID_NoneTone
|| __DATA.__data _kSystemSoundID_InvalidTone
|| __DATA.__objc_data _OBJC_CLASS_$_TLAlertActivationAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_TLAlertStoppingOptions
|| __DATA.__objc_data _OBJC_CLASS_$_TLAttentionAwarenessEffectAudioTapContext
|| __DATA.__objc_data _OBJC_CLASS_$_TLAttentionAwarenessEffectCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_TLAttentionAwarenessEffectProcessor
|| __DATA.__objc_data _OBJC_CLASS_$_TLBacklight
|| __DATA.__objc_data _OBJC_CLASS_$_TLDeemphasizableAlertSystemSoundBeginPlayingContext
|| __DATA.__objc_data _OBJC_CLASS_$_TLITunesTone
|| __DATA.__objc_data _OBJC_CLASS_$_TLToneImportResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TLToneStoreDownload
|| __DATA.__objc_data _OBJC_CLASS_$_TLToneStoreDownloadStoreServicesController
|| __DATA.__objc_data _OBJC_CLASS_$_TLVibrationPersistenceUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_TLAlertActivationAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_TLAlertStoppingOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_TLAttentionAwarenessEffectAudioTapContext
|| __DATA.__objc_data _OBJC_METACLASS_$_TLAttentionAwarenessEffectCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_TLAttentionAwarenessEffectProcessor
|| __DATA.__objc_data _OBJC_METACLASS_$_TLBacklight
|| __DATA.__objc_data _OBJC_METACLASS_$_TLDeemphasizableAlertSystemSoundBeginPlayingContext
|| __DATA.__objc_data _OBJC_METACLASS_$_TLITunesTone
|| __DATA.__objc_data _OBJC_METACLASS_$_TLToneImportResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TLToneStoreDownload
|| __DATA.__objc_data _OBJC_METACLASS_$_TLToneStoreDownloadStoreServicesController
|| __DATA.__objc_data _OBJC_METACLASS_$_TLVibrationPersistenceUtilities
|| __DATA_CONST.__const _TLAlertErrorDomain
|| __DATA_CONST.__const _TLAlertTopicActivityFriendsGoalAttained
|| __DATA_CONST.__const _TLAlertTopicActivityGoalAttained
|| __DATA_CONST.__const _TLAlertTopicActivityGoalBehind
|| __DATA_CONST.__const _TLAlertTopicAlarmGoToSleep
|| __DATA_CONST.__const _TLAlertTopicAlarmNightstand
|| __DATA_CONST.__const _TLAlertTopicAlarmWakeUp
|| __DATA_CONST.__const _TLAlertTopicAppNotificationCriticalAlert
|| __DATA_CONST.__const _TLAlertTopicAppNotificationFirstParty
|| __DATA_CONST.__const _TLAlertTopicEmergencyNonInterrupting
|| __DATA_CONST.__const _TLAlertTopicHandwashingReminder
|| __DATA_CONST.__const _TLAlertTopicHandwashingSessionEnd
|| __DATA_CONST.__const _TLAlertTopicHandwashingSessionProgressTapHaptics
|| __DATA_CONST.__const _TLAlertTopicHandwashingSessionProgressVibeHaptics
|| __DATA_CONST.__const _TLAlertTopicHandwashingSessionStart
|| __DATA_CONST.__const _TLAlertTopicHealthUrgent
|| __DATA_CONST.__const _TLAlertTopicIncomingCallAppNotification
|| __DATA_CONST.__const _TLAlertTopicIncomingCallFaceTimeGroupInvitation
|| __DATA_CONST.__const _TLAlertTopicIncomingCallFaceTimeParticipantJoined
|| __DATA_CONST.__const _TLAlertTopicNewMailThreaded
|| __DATA_CONST.__const _TLAlertTopicNewMailVIP
|| __DATA_CONST.__const _TLAlertTopicPassbookGeofence
|| __DATA_CONST.__const _TLAlertTopicPassbookNFCScanComplete
|| __DATA_CONST.__const _TLAlertTopicPhotosNotificationMemory
|| __DATA_CONST.__const _TLAlertTopicPhotosNotificationSharingPost
|| __DATA_CONST.__const _TLAlertTopicSOSButtonChordingTimeout
|| __DATA_CONST.__const _TLAlertTopicSOSCountdownPreannounce
|| __DATA_CONST.__const _TLAlertTopicSOSCountdownTick
|| __DATA_CONST.__const _TLAlertTopicSOSDialStart
|| __DATA_CONST.__const _TLAlertTopicSleepWakeDetection
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionApplianceNoise
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionBabyCrying
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionCarHorn
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionCatMeow
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionCough
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionDogBark
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionDoorBell
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionDoorKnock
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionFireAlarm
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionPersonShouting
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionSirenAlarm
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionSmokeAlarm
|| __DATA_CONST.__const _TLAlertTopicSoundRecognitionWaterRunning
|| __DATA_CONST.__const _TLAlertTopicSystemNotificationBackgroundMicUsage
|| __DATA_CONST.__const _TLAlertTopicSystemNotificationDoorbell
|| __DATA_CONST.__const _TLAlertTopicSystemNotificationFindMyDevice
|| __DATA_CONST.__const _TLAlertTopicSystemNotificationGeneric
|| __DATA_CONST.__const _TLAlertTopicSystemNotificationHeadphoneAudioExposure
|| __DATA_CONST.__const _TLAlertTopicTextMessageAcknowledgmentExclamation
|| __DATA_CONST.__const _TLAlertTopicTextMessageAcknowledgmentHaHa
|| __DATA_CONST.__const _TLAlertTopicTextMessageAcknowledgmentHeart
|| __DATA_CONST.__const _TLAlertTopicTextMessageAcknowledgmentQuestionMark
|| __DATA_CONST.__const _TLAlertTopicTextMessageAcknowledgmentThumbsDown
|| __DATA_CONST.__const _TLAlertTopicTextMessageAcknowledgmentThumbsUp
|| __DATA_CONST.__const _TLAlertTopicTextMessageInConversation
|| __DATA_CONST.__const _TLAlertTopicWalkieTalkieActiveEnd
|| __DATA_CONST.__const _TLAlertTopicWalkieTalkieActiveStart
|| __DATA_CONST.__const _TLServiceAgentIdentifier
|| __DATA_CONST.__const _TLServiceAgentPreferencesDomain
|| __DATA_CONST.__const _TLServiceCommunicationErrorDomain
|| __DATA_CONST.__const _TLServicePersistenceErrorDomain
|| __DATA_CONST.__const _TLServiceValidationErrorDomain
|| __DATA_CONST.__const _TLToneIdentifierNone
|| __DATA_CONST.__const _TLVibrationIdentifierNone
|| __DATA_CONST.__const _TLVibrationManagerUserGeneratedVibrationsDidChangeNotification
|| __DATA_CONST.__const _TLVibrationUserGeneratedVibrationPatternIdentifierPrefix
|| __DATA_CONST.__const _TLVibrationUserGeneratedVibrationPatternsDictionaryKeyName
|| __DATA_CONST.__const _TLVibrationUserGeneratedVibrationPatternsDictionaryKeyPattern
|| __DATA_CONST.__const __TLAlertOverridePolicyDidChangeNotification
|| __DATA_CONST.__const __TLAlertTopicClassroomDeemphasized
|| __DATA_CONST.__const __TLAlertTopicIncomingCallDeemphasized
|| __DATA_CONST.__const __TLAlertWatchPrefersSalientToneAndVibrationDidChangeNotification
|| __DATA_CONST.__const __TLToneManagerContentsChangedNotification
|| __DATA_CONST.__const __TLVibrationPatternAtomsKey
|| __DATA_CONST.__const __TLVibrationPatternIntensityKey
|| __DATA_CONST.__const __TLVibrationPatternLoopedKey
|| __DATA_CONST.__const __TLVibrationPatternOffDurationKey
|| __DATA_CONST.__const __TLVibrationPatternOnDurationKey
|| __DATA_CONST.__const __TLVibrationPatternVibePatternKey
|| __DATA_CONST.__const __TLVibrationSynchronizedVibrationPatternIdentifierPrefix
|| __DATA_CONST.__const _kToneAlbumKey
|| __DATA_CONST.__const _kToneArtistKey
|| __DATA_CONST.__const _kToneArtworkFileKey
|| __DATA_CONST.__const _kToneDurationKey
|| __DATA_CONST.__const _kToneFileExtensionKey
|| __DATA_CONST.__const _kToneGenreKey
|| __DATA_CONST.__const _kToneGloballyUniqueIdentifierKey
|| __DATA_CONST.__const _kToneMediaKindAlertTone
|| __DATA_CONST.__const _kToneMediaKindKey
|| __DATA_CONST.__const _kToneMediaKindRingtone
|| __DATA_CONST.__const _kTonePrivateKey
|| __DATA_CONST.__const _kToneProtectedContentKey
|| __DATA_CONST.__const _kTonePurchasedKey
|| __DATA_CONST.__const _kToneStoreFrontIdentifierKey
|| __DATA_CONST.__const _kToneStoreItemIdentifierKey
|| __DATA_CONST.__const _kToneSyncIdentifierKey
|| __DATA_CONST.__const _kToneTitleKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAccessQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlert
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertPlaybackCompletionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertPlaybackPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertQueuePlayerController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertQueuePlayerStateDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertSystemSoundContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertSystemSoundController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertSystemSoundPlayTaskDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertSystemSoundStopTasksDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAlertTone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAttentionAwarenessObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLAudioQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLCapabilitiesManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLContentProtectionStateObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLPreferencesUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLSilentModeController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLSystemApplication
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLSystemSound
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLToneManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLVibrationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TLVibrationPattern
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAccessQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlert
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertPlaybackCompletionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertPlaybackPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertQueuePlayerController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertQueuePlayerStateDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertSystemSoundContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertSystemSoundController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertSystemSoundPlayTaskDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertSystemSoundStopTasksDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAlertTone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAttentionAwarenessObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLAudioQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLCapabilitiesManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLContentProtectionStateObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLPreferencesUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLSilentModeController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLSystemApplication
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLSystemSound
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLToneManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLVibrationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TLVibrationPattern
|| __TEXT.__text _NSStringFromTLAlertOverridePolicy
|| __TEXT.__text _NSStringFromTLAlertPlaybackCompletionType
|| __TEXT.__text _NSStringFromTLAlertType
|| __TEXT.__text _NSStringFromTLToneImportStatusCode
|| __TEXT.__text _NSStringFromTLWatchAlertPolicy
|| __TEXT.__text _TLAlertOverridePolicyFromString
|| __TEXT.__text _TLAlertPlaybackCompletionTypeFromString
|| __TEXT.__text _TLAlertTypeFromString
|| __TEXT.__text _TLAttentionAwarenessEffectParametersMake
|| __TEXT.__text _TLLocalizedFormatString
|| __TEXT.__text _TLLocalizedString
|| __TEXT.__text _TLLogGeneral
|| __TEXT.__text _TLLogPlayback
|| __TEXT.__text _TLLogToneManagement
|| __TEXT.__text _TLLogVibrationManagement
|| __TEXT.__text _TLToneImportStatusCodeFromString
|| __TEXT.__text _TLWatchAlertPolicyFromString
|| __TEXT.__text __TLAlertTypeGetHumanReadableDescription
|| __TEXT.__text __TLAlertTypeValidateConsistencyOfEnumeration
__ AVFAudio: _AVAudioSessionCategoryAlarm
__ AVFAudio: _AVAudioSessionCategoryEmergencyAlert
__ AVFAudio: _AVAudioSessionCategoryEmergencyAlert_CanBeMuted
__ AVFAudio: _AVAudioSessionCategoryFindMyPhone
__ AVFAudio: _AVAudioSessionCategoryPlayback
__ AVFAudio: _AVAudioSessionCategoryRingtone
__ AVFAudio: _AVAudioSessionCategoryRingtonePreview
__ AVFAudio: _AVAudioSessionInterruptionNotification
__ AVFAudio: _AVAudioSessionInterruptionOptionKey
__ AVFAudio: _AVAudioSessionInterruptionTypeKey
__ AVFAudio: _AVAudioSessionModeEmergencyAlert
__ AVFAudio: _OBJC_CLASS_$_AVAudioConnectionPoint
__ AVFAudio: _OBJC_CLASS_$_AVAudioEngine
__ AVFAudio: _OBJC_CLASS_$_AVAudioFormat
__ AVFAudio: _OBJC_CLASS_$_AVAudioPCMBuffer
__ AVFAudio: _OBJC_CLASS_$_AVAudioSession
__ AVFAudio: _OBJC_CLASS_$_AVAudioUnitEQ
__ AVFAudio: _OBJC_CLASS_$_AVAudioUnitReverb
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeHaptic
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMix
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMixInputParameters
__ AVFoundation: _OBJC_CLASS_$_AVOutputContext
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVQueuePlayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AppSupport: _CPCopySharedResourcesPreferencesDomainForDomain
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _CPSystemRootDirectory
__ AudioToolbox: _AudioServicesCreateSystemSoundIDWithOptions
__ AudioToolbox: _AudioServicesDisposeSystemSoundID
__ AudioToolbox: _AudioServicesPlaySystemSoundWithOptions
__ AudioToolbox: _AudioServicesStopSystemSound
__ AudioToolbox: _kAudioServicesCreateSystemSoundIDOptionAudioFileURLKey
__ AudioToolbox: _kAudioServicesCreateSystemSoundIDOptionLongFormMediaKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionBehaviorKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionFlagsKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionIgnoreRingerSwitchKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionLoopKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionUnduckTimeKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionVibrationPatternKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionVolumeKey
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyMultiple
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ Foundation: _NSFileSize
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ MediaExperience: _AVSystemController_CallIsActive
__ MediaExperience: _OBJC_CLASS_$_AVSystemController
__ MediaExperience: _kMXSessionProperty_PrefersToPlayDuringWombat
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ SoftLinking: __sl_dlopen
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _flock
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_assert_not_owner
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _statfs
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strtoull
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
TLToneManager : NSObject
 @property  NSString *_rootDirectory
 @property  NSString *_deviceITunesRingtoneDirectory
 @property  NSString *_deviceITunesRingtoneInformationPlist
 @property  NSString *_iTunesRingtoneDirectory
 @property  NSString *_iTunesRingtoneInformationPlist
 @property  NSString *_systemRingtoneDirectory

  // class methods
  +[TLToneManager _systemWideTonePreferenceKeyForAlertType:]
  +[TLToneManager sharedToneManager]
  +[TLToneManager _abbreviatedDescriptionOfToneIdentifierWithUnderlyingMediaPlaybackArchiveForLogging:]
  +[TLToneManager _currentOverridePolicyPreferenceKeyForAlertType:]
  +[TLToneManager _defaultToneIdentifierForAlertType:topic:]
  +[TLToneManager _abbreviatedDescriptionOfMediaPlaybackArchive:]
  +[TLToneManager _migrateLegacyToneSettings]
  +[TLToneManager _ensureTCCAccessPreflightAndCheckForFileExistenceAtPath:]

  // instance methods
  -[TLToneManager dealloc]
  -[TLToneManager .cxx_destruct]
  -[TLToneManager init]
  -[TLToneManager toneWithIdentifierIsValid:]
  -[TLToneManager nameForToneIdentifier:]
  -[TLToneManager currentToneIdentifierForAlertType:]
  -[TLToneManager defaultToneIdentifierForAlertType:]
  -[TLToneManager setCurrentToneIdentifier:forAlertType:topic:]
  -[TLToneManager _rootDirectory]
  -[TLToneManager defaultToneIdentifierForAlertType:topic:]
  -[TLToneManager _toneIdentifierWithUnderlyingPlaybackArchive:]
  -[TLToneManager _underlyingPlaybackArchiveForToneIdentifier:]
  -[TLToneManager filePathForToneIdentifier:]
  -[TLToneManager initWithITunesRingtonePlistAtPath:]
  -[TLToneManager _deviceITunesRingtoneDirectory]
  -[TLToneManager _deviceITunesRingtoneInformationPlist]
  -[TLToneManager _iTunesRingtoneDirectory]
  -[TLToneManager _iTunesRingtoneInformationPlist]
  -[TLToneManager _systemRingtoneDirectory]
  -[TLToneManager _loadITunesRingtoneInfoPlistAtPath:]
  -[TLToneManager _tonesFromManifestPath:mediaDirectoryPath:]
  -[TLToneManager _reloadTonesAfterExternalChange]
  -[TLToneManager _reloadTones]
  -[TLToneManager _toneWithIdentifier:]
  -[TLToneManager _installedTones]
  -[TLToneManager _installedTonesSize]
  -[TLToneManager _addToneToManifestAtPath:metadata:fileName:mediaDirectory:]
  -[TLToneManager _addToneEntries:toManifestAtPath:mediaDirectory:shouldSkipReload:]
  -[TLToneManager _removeToneWithIdentifier:]
  -[TLToneManager _removeToneWithIdentifier:orSyncIdentifier:]
  -[TLToneManager _removeToneFromManifestAtPath:fileName:]
  -[TLToneManager _removeTonesFromManifestAtPath:fileNames:shouldSkipReload:alreadyLockedManifest:removedEntries:]
  -[TLToneManager _lockManifestAtPath:]
  -[TLToneManager _removeAllTones]
  -[TLToneManager _alarmWakeUpRingtoneDirectory]
  -[TLToneManager _baseDirectoryForAlertToneSoundFiles]
  -[TLToneManager _systemEmbeddedSoundDirectory]
  -[TLToneManager _systemEmbeddedModernSoundDirectory]
  -[TLToneManager _systemSoundDirectory]
  -[TLToneManager _systemNewSoundDirectory]
  -[TLToneManager _systemWatchSoundDirectory]
  -[TLToneManager _loadAlertToneInfo]
  -[TLToneManager _loadToneIdentifierAliasMap]
  -[TLToneManager _aliasForToneIdentifier:]
  -[TLToneManager _toneWithIdentifierIsDefaultRingtone:]
  -[TLToneManager _toneWithIdentifierIsNonDefaultSystemRingtone:]
  -[TLToneManager _toneWithIdentifierIsITunesRingtone:]
  -[TLToneManager _toneWithIdentifierIsSystemAlertTone:]
  -[TLToneManager _toneWithIdentifierIsAlarmWakeUp:]
  -[TLToneManager _toneWithIdentifierIsMediaPlaybackArchive:]
  -[TLToneManager _newServiceConnection]
  -[TLToneManager _tonePreferencesFromService]
  -[TLToneManager _setToneIdentifierUsingService:keyedByTopic:forPreferenceKey:]
  -[TLToneManager setCurrentToneIdentifier:forAlertType:]
  -[TLToneManager _currentToneIdentifierForAlertType:topic:]
  -[TLToneManager currentToneIdentifierForAlertType:topic:]
  -[TLToneManager currentToneNameForAlertType:]
  -[TLToneManager currentToneSoundIDForAlertType:]
  -[TLToneManager currentToneSoundIDForAlertType:topic:]
  -[TLToneManager defaultRingtoneIdentifier]
  -[TLToneManager _defaultRingtoneName]
  -[TLToneManager _defaultRingtonePath]
  -[TLToneManager _defaultPreferablyNonSilentToneIdentifierForAlertType:topic:]
  -[TLToneManager hasSpecificDefaultToneIdentifierForAlertType:topic:]
  -[TLToneManager _soundForToneIdentifier:]
  -[TLToneManager _filePathForToneIdentifier:isValid:]
  -[TLToneManager _previewSoundForToneIdentifier:]
  -[TLToneManager _nameForToneIdentifier:isValid:]
  -[TLToneManager subtitleForToneIdentifier:]
  -[TLToneManager _toneIdentifierForFileAtPath:isValid:]
  -[TLToneManager _toneWithIdentifierIsValid:]
  -[TLToneManager _unduckTimeForToneIdentifier:]
  -[TLToneManager importTone:metadata:completionBlock:]
  -[TLToneManager removeImportedToneWithIdentifier:]
  -[TLToneManager _importPurchasedToneWithMetadata:fileName:]
  -[TLToneManager _transferPurchasedToITunes:]
  -[TLToneManager _wasAffectedByAccidentalToneDeletion]
  -[TLToneManager _allSyncedTones]
  -[TLToneManager _toneForSyncIdentifier:]
  -[TLToneManager _importSyncedToneWithMetadata:fileName:]
  -[TLToneManager _removeToneWithSyncIdentifier:]
  -[TLToneManager _removeAllSyncedData]
  -[TLToneManager _removeOrphanedPlistEntriesInManifestAtPath:mediaDirectory:]
  -[TLToneManager _evaluateOrphanEntriesCleanupStatusForcingReevaluationIfPreviouslyDone:returningFilePathsForFoundOrphans:wasAffectedByAccidentalToneDeletion:]
  -[TLToneManager _removeOrphanedManifestEntriesReturningFilePathsForFoundOrphans:]
  -[TLToneManager _registerDidRequestResetSyncPostAccidentalToneDeletion]
  -[TLToneManager _currentToneWatchAlertPolicyPreferenceKeyForAlertType:topic:]
  -[TLToneManager _currentToneWatchAlertPolicyForAlertType:]
  -[TLToneManager _currentToneWatchAlertPolicyForAlertType:topic:]
  -[TLToneManager _currentToneWatchAlertPolicyForAlertType:topic:didFindPersistedWatchAlertPolicy:]
  -[TLToneManager _setCurrentToneWatchAlertPolicy:forAlertType:]
  -[TLToneManager _setCurrentToneWatchAlertPolicy:forAlertType:topic:]
  -[TLToneManager _watchPrefersSalientNotifications]
  -[TLToneManager _setWatchPrefersSalientNotifications:]
  -[TLToneManager _handleWatchPrefersSalientNotificationDidChange]
  -[TLToneManager _currentOverridePolicyForAlertType:]
  -[TLToneManager _currentOverridePolicyForAlertType:didFindAlertOverridePolicy:]
  -[TLToneManager _setCurrentOverridePolicy:forAlertType:]
  -[TLToneManager _hasUnderlyingPlaybackArchiveForToneIdentifier:]
  -[TLToneManager _performBlockInAccessQueue:]
  -[TLToneManager _fileNameFromToneIdentifier:withPrefix:]
  -[TLToneManager _localizedNameOfToneWithIdentifier:]
  -[TLToneManager _ensureDirectoryExistsAtPath:]
  -[TLToneManager _didSetTonePreferenceSuccessfullyWithKey:inDomain:usingPreferencesOfKind:]
  -[TLToneManager _handleTonePreferencesChangedNotificationForPreferencesKinds:]
  -[TLToneManager _handleDeviceRingtonesChangedNotification]
  -[TLToneManager _handleProtectionContentUnlockedEvent]
  -[TLToneManager currentToneIdentifierForAlertType:accountIdentifier:]
  -[TLToneManager setCurrentToneIdentifier:forAlertType:accountIdentifier:]
  -[TLToneManager _currentToneWatchAlertPolicyForAlertType:accountIdentifier:]
  -[TLToneManager _setCurrentToneWatchAlertPolicy:forAlertType:accountIdentifier:]


TLSystemApplication : NSObject
 @property  NSString *bundleIdentifier
 @property  NSString *name

  // class methods
  +[TLSystemApplication defaultSystemApplication]

  // instance methods
  -[TLSystemApplication initWithBundleIdentifier:name:]
  -[TLSystemApplication .cxx_destruct]
  -[TLSystemApplication bundleIdentifier]
  -[TLSystemApplication name]


TLAlertPlaybackPolicy : NSObject
  // class methods
  +[TLAlertPlaybackPolicy shouldRepeatVibrationForAlert:]


TLAttentionAwarenessEffectCoordinator : NSObject
 @property  AVAudioSession *audioSession
 @property  {?=Bff} effectParameters

  // instance methods
  -[TLAttentionAwarenessEffectCoordinator dealloc]
  -[TLAttentionAwarenessEffectCoordinator .cxx_destruct]
  -[TLAttentionAwarenessEffectCoordinator audioSession]
  -[TLAttentionAwarenessEffectCoordinator effectParameters]
  -[TLAttentionAwarenessEffectCoordinator setEffectParameters:]
  -[TLAttentionAwarenessEffectCoordinator initWithEffectParameters:audioSession:]
  -[TLAttentionAwarenessEffectCoordinator audioMixForAsset:]
  -[TLAttentionAwarenessEffectCoordinator setEffectParameters:effectMixFadeDuration:]
  -[TLAttentionAwarenessEffectCoordinator _prepareAudioProcessingWithEffectAudioTapContext:maximumNumberOfFrames:processingFormat:]
  -[TLAttentionAwarenessEffectCoordinator _unprepareAudioProcessingWithEffectAudioTapContext:]
  -[TLAttentionAwarenessEffectCoordinator _finalizeAudioProcessingWithEffectAudioTapContext:]
  -[TLAttentionAwarenessEffectCoordinator _processAudioWithEffectAudioTapContext:bufferList:numberOfFramesRequested:numberOfFramesToProcess:]


TLPreferencesUtilities : NSObject
  // class methods
  +[TLPreferencesUtilities copySharedResourcesPreferencesDomainForDomain:]
  +[TLPreferencesUtilities _synchronizeDomain:usingPreferencesScope:]
  +[TLPreferencesUtilities _enumerateKeysAndValuesWithEligibleKeyPrefixes:inDomain:usingPreferencesScope:withBlock:]
  +[TLPreferencesUtilities canAccessNanoRegistry]
  +[TLPreferencesUtilities _valueForEntitlement:task:]
  +[TLPreferencesUtilities copySharedResourcesPreferencesDomain]
  +[TLPreferencesUtilities perWatchPreferencesDomain]
  +[TLPreferencesUtilities _setValue:forKey:inDomain:usingPreferencesScope:]
  +[TLPreferencesUtilities _copyAllKeysAndValuesFromDomain:usingPreferencesScope:]
  +[TLPreferencesUtilities migratePerTopicPreferencesInDomain:withRegularPreferenceKeys:regularPreferenceKeysCount:intoSinglePerTopicPreferenceWithSuffix:usingPreferencesScope:]
  +[TLPreferencesUtilities preferencesDomain]
  +[TLPreferencesUtilities _existingPerTopicPreferenceKeyPrefixesWithRegularPreferenceKeys:regularPreferenceKeysCount:]


TLVibrationPersistenceUtilities : NSObject
  // class methods
  +[TLVibrationPersistenceUtilities _validateObjectWithError:validationBlock:]
  +[TLVibrationPersistenceUtilities _objectIsValidUserGeneratedVibrationPattern:error:]
  +[TLVibrationPersistenceUtilities objectIsValidUserGeneratedVibrationPatternsDictionary:error:]
  +[TLVibrationPersistenceUtilities userGeneratedVibrationStoreFileURL]


TLAlertConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL _hasCustomAudioVolume
 @property  double _audioPlaybackInitiationDelay
 @property  double _audioVolumeRampingDuration
 @property  long long type
 @property  NSString *topic
 @property  NSString *toneIdentifier
 @property  NSString *vibrationIdentifier
 @property  NSURL *externalToneFileURL
 @property  unsigned long externalToneMediaLibraryItemIdentifier
 @property  NSDictionary *externalVibrationPattern
 @property  NSURL *externalVibrationPatternFileURL
 @property  NSString *audioCategory
 @property  float audioVolume
 @property  BOOL forPreview
 @property  double maximumDuration
 @property  BOOL shouldRepeat
 @property  BOOL shouldIgnoreRingerSwitch
 @property  BOOL shouldForcePlayingAtUserSelectedAudioVolume
 @property  BOOL shouldIgnoreAccessibilityDisabledVibrationSetting

  // class methods
  +[TLAlertConfiguration supportsSecureCoding]

  // instance methods
  -[TLAlertConfiguration shouldIgnoreRingerSwitch]
  -[TLAlertConfiguration toneIdentifier]
  -[TLAlertConfiguration audioVolume]
  -[TLAlertConfiguration encodeWithCoder:]
  -[TLAlertConfiguration type]
  -[TLAlertConfiguration setShouldIgnoreAccessibilityDisabledVibrationSetting:]
  -[TLAlertConfiguration setVibrationIdentifier:]
  -[TLAlertConfiguration topic]
  -[TLAlertConfiguration .cxx_destruct]
  -[TLAlertConfiguration setAudioVolume:]
  -[TLAlertConfiguration initWithType:]
  -[TLAlertConfiguration setToneIdentifier:]
  -[TLAlertConfiguration setTopic:]
  -[TLAlertConfiguration audioCategory]
  -[TLAlertConfiguration vibrationIdentifier]
  -[TLAlertConfiguration maximumDuration]
  -[TLAlertConfiguration copyWithZone:]
  -[TLAlertConfiguration setMaximumDuration:]
  -[TLAlertConfiguration shouldIgnoreAccessibilityDisabledVibrationSetting]
  -[TLAlertConfiguration setAudioCategory:]
  -[TLAlertConfiguration isForPreview]
  -[TLAlertConfiguration setShouldIgnoreRingerSwitch:]
  -[TLAlertConfiguration isEqual:]
  -[TLAlertConfiguration initWithCoder:]
  -[TLAlertConfiguration setShouldRepeat:]
  -[TLAlertConfiguration shouldRepeat]
  -[TLAlertConfiguration setForPreview:]
  -[TLAlertConfiguration _freeze]
  -[TLAlertConfiguration setExternalToneFileURL:]
  -[TLAlertConfiguration setExternalVibrationPattern:]
  -[TLAlertConfiguration _throwForFrozenInstance]
  -[TLAlertConfiguration setExternalToneMediaLibraryItemIdentifier:]
  -[TLAlertConfiguration setExternalVibrationPatternFileURL:]
  -[TLAlertConfiguration setShouldForcePlayingAtUserSelectedAudioVolume:]
  -[TLAlertConfiguration _setAudioPlaybackInitiationDelay:]
  -[TLAlertConfiguration _setAudioVolumeRampingDuration:]
  -[TLAlertConfiguration _hasCustomAudioVolume]
  -[TLAlertConfiguration _audioPlaybackInitiationDelay]
  -[TLAlertConfiguration _audioVolumeRampingDuration]
  -[TLAlertConfiguration externalToneFileURL]
  -[TLAlertConfiguration externalToneMediaLibraryItemIdentifier]
  -[TLAlertConfiguration externalVibrationPattern]
  -[TLAlertConfiguration externalVibrationPatternFileURL]
  -[TLAlertConfiguration shouldForcePlayingAtUserSelectedAudioVolume]


TLITunesTone : NSObject
 @property  NSString *identifier
 @property  NSString *name
 @property  NSString *albumTitle
 @property  NSString *artistName
 @property  NSString *genreName
 @property  NSString *filePath
 @property  NSNumber *syncIdentifier
 @property  unsigned long storeItemIdentifier
 @property  NSString *storeFrontIdentifier
 @property  BOOL purchased
 @property  BOOL ringtone
 @property  NSString *artworkFile
 @property  double duration
 @property  BOOL protectedContent
 @property  BOOL privateTone
 @property  NSNumber *fadeInDurationNumber
 @property  NSNumber *fadeOutDurationNumber

  // class methods
  +[TLITunesTone _identifierForPropertyListRepresentation:]

  // instance methods
  -[TLITunesTone artistName]
  -[TLITunesTone identifier]
  -[TLITunesTone storeItemIdentifier]
  -[TLITunesTone filePath]
  -[TLITunesTone .cxx_destruct]
  -[TLITunesTone duration]
  -[TLITunesTone name]
  -[TLITunesTone isEqual:]
  -[TLITunesTone storeFrontIdentifier]
  -[TLITunesTone albumTitle]
  -[TLITunesTone genreName]
  -[TLITunesTone syncIdentifier]
  -[TLITunesTone initWithPropertyListRepresentation:filePath:]
  -[TLITunesTone initWithToneStoreDownload:]
  -[TLITunesTone isDuplicateOfTone:]
  -[TLITunesTone isPurchased]
  -[TLITunesTone isRingtone]
  -[TLITunesTone artworkFile]
  -[TLITunesTone isProtectedContent]
  -[TLITunesTone isPrivateTone]
  -[TLITunesTone fadeInDurationNumber]
  -[TLITunesTone fadeOutDurationNumber]


TLSystemSound : NSObject
 @property  NSURL *soundFileURL
 @property  unsigned int soundID
 @property  BOOL requiresLongFormPlayback
 @property  BOOL valid

  // instance methods
  -[TLSystemSound _description]
  -[TLSystemSound dealloc]
  -[TLSystemSound isValid]
  -[TLSystemSound .cxx_destruct]
  -[TLSystemSound soundFileURL]
  -[TLSystemSound requiresLongFormPlayback]
  -[TLSystemSound soundID]
  -[TLSystemSound initWithSoundFileURL:soundID:requiresLongFormPlayback:]
  -[TLSystemSound _prepareForDealloc]
  -[TLSystemSound beginRequiringUnderlyingSoundLoaded]
  -[TLSystemSound endRequiringUnderlyingSoundLoaded]
  -[TLSystemSound _ensureUnderlyingSoundCreated]


TLAlertTone : NSObject
 @property  NSURL *soundFileURL
 @property  TLSystemSound *actualSound
 @property  TLSystemSound *previewSound
 @property  BOOL requiresLongFormPlayback

  // instance methods
  -[TLAlertTone previewSound]
  -[TLAlertTone .cxx_destruct]
  -[TLAlertTone actualSound]
  -[TLAlertTone soundFileURL]
  -[TLAlertTone requiresLongFormPlayback]
  -[TLAlertTone initWithSoundFileURL:actualSoundID:previewSoundID:requiresLongFormPlayback:]


TLToneStoreDownloadStoreServicesController : NSObject <SSDownloadManagerObserver, SSPurchaseManagerDelegate, TLToneStoreDownloadController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeAccountName

  // instance methods
  -[TLToneStoreDownloadStoreServicesController downloadManager:downloadStatesDidChange:]
  -[TLToneStoreDownloadStoreServicesController storeAccountName]
  -[TLToneStoreDownloadStoreServicesController addObserver:]
  -[TLToneStoreDownloadStoreServicesController dealloc]
  -[TLToneStoreDownloadStoreServicesController _assertRunningOnAccessQueue]
  -[TLToneStoreDownloadStoreServicesController .cxx_destruct]
  -[TLToneStoreDownloadStoreServicesController _performBlockOnAccessQueue:]
  -[TLToneStoreDownloadStoreServicesController _handleAccountStoreDidChangeNotification:]
  -[TLToneStoreDownloadStoreServicesController purchaseManager:didFinishPurchasesWithResponses:]
  -[TLToneStoreDownloadStoreServicesController removeObserver:]
  -[TLToneStoreDownloadStoreServicesController init]
  -[TLToneStoreDownloadStoreServicesController _handleToneManagerContentsDidChangeNotification:]
  -[TLToneStoreDownloadStoreServicesController openAlertToneStore]
  -[TLToneStoreDownloadStoreServicesController openRingtoneStore]
  -[TLToneStoreDownloadStoreServicesController redownloadAllTones]
  -[TLToneStoreDownloadStoreServicesController _updateStoreAccountName]
  -[TLToneStoreDownloadStoreServicesController _notifyObserversOfUpdatedStoreAccountName:]
  -[TLToneStoreDownloadStoreServicesController _notifyObserversOfCheckingForDownloadsFinishedWithoutNeedToIssueAnyDownload]
  -[TLToneStoreDownloadStoreServicesController _notifyObserversOfStartedToneStoreDownloads:progressedToneStoreDownload:finishedToneStoreDownloads:]
  -[TLToneStoreDownloadStoreServicesController _openToneStoreWithStoreItemKind:]


TLVibrationManager : NSObject
 @property  BOOL needsRefresh
 @property  BOOL allowsAutoRefresh
 @property  BOOL shouldVibrateForCurrentRingerSwitchState
 @property  BOOL shouldVibrateOnRing
 @property  BOOL shouldVibrateOnSilent

  // class methods
  +[TLVibrationManager _handleVibrateOnRingOrSilentDidChangeNotification]
  +[TLVibrationManager _handleVibrationPreferencesDidChangeNotificationForPreferencesKinds:atInitiativeOfVibrationManager:]
  +[TLVibrationManager sharedVibrationManager]

  // instance methods
  -[TLVibrationManager refresh]
  -[TLVibrationManager dealloc]
  -[TLVibrationManager needsRefresh]
  -[TLVibrationManager .cxx_destruct]
  -[TLVibrationManager init]
  -[TLVibrationManager vibrationWithIdentifierIsValid:]
  -[TLVibrationManager nameOfVibrationWithIdentifier:]
  -[TLVibrationManager defaultVibrationIdentifierForAlertType:]
  -[TLVibrationManager setCurrentVibrationIdentifier:forAlertType:topic:]
  -[TLVibrationManager _newServiceConnection]
  -[TLVibrationManager _performBlockInAccessQueue:]
  -[TLVibrationManager _initWithSpecialBehaviors:]
  -[TLVibrationManager setAllowsAutoRefresh:]
  -[TLVibrationManager currentVibrationIdentifierForAlertType:]
  -[TLVibrationManager setCurrentVibrationIdentifier:forAlertType:]
  -[TLVibrationManager _currentVibrationIdentifierForAlertType:topic:]
  -[TLVibrationManager _currentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:]
  -[TLVibrationManager _currentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:allowsNoneDefaultToAnyActualVibrationSubstitution:]
  -[TLVibrationManager currentVibrationIdentifierForAlertType:topic:]
  -[TLVibrationManager currentVibrationNameForAlertType:]
  -[TLVibrationManager currentVibrationPatternForAlertType:]
  -[TLVibrationManager defaultVibrationIdentifierForAlertType:topic:]
  -[TLVibrationManager _defaultVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:]
  -[TLVibrationManager defaultVibrationNameForAlertType:]
  -[TLVibrationManager defaultVibrationPatternForAlertType:]
  -[TLVibrationManager _defaultPreferablyNonSilentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:]
  -[TLVibrationManager hasSpecificDefaultVibrationIdentifierForAlertType:topic:]
  -[TLVibrationManager noneVibrationName]
  -[TLVibrationManager noneVibrationPattern]
  -[TLVibrationManager _isUnitTestingModeEnabled]
  -[TLVibrationManager _completeSystemVibrationsSubdirectoryForSubdirectory:]
  -[TLVibrationManager _systemVibrationIdentifiersForSubdirectory:]
  -[TLVibrationManager _patternForSystemVibrationWithIdentifier:shouldLogAssetPath:]
  -[TLVibrationManager _localizedNameForVibrationWithIdentifier:]
  -[TLVibrationManager _nameOfVibrationWithIdentifier:]
  -[TLVibrationManager patternForVibrationWithIdentifier:]
  -[TLVibrationManager patternForVibrationWithIdentifier:repeating:]
  -[TLVibrationManager allUserSelectableSystemVibrationIdentifiers]
  -[TLVibrationManager allUserGeneratedVibrationIdentifiers]
  -[TLVibrationManager _systemWideVibrationPatternPreferenceKeyForAlertType:]
  -[TLVibrationManager _vibrationIsSettableForAlertType:]
  -[TLVibrationManager _didSetVibrationPreferenceSuccessfullyWithKey:inDomain:usingPreferencesOfKind:]
  -[TLVibrationManager _areSynchronizedVibrationsAllowedForAlertType:topic:]
  -[TLVibrationManager _synchronizedVibrationIdentifierForToneIdentifier:]
  -[TLVibrationManager _sanitizeVibrationIdentifier:forAlertType:topic:correspondingToneIdentifier:didFallbackToCurrentVibrationIdentifier:]
  -[TLVibrationManager _sanitizeVibrationIdentifier:forAlertType:topic:correspondingToneIdentifier:useDefaultVibrationAsFallback:allowsNoneDefaultToAnyActualVibrationSubstitution:didFallback:]
  -[TLVibrationManager _handleUserGeneratedVibrationsDidChangeNotification]
  -[TLVibrationManager _userGeneratedVibrationPatterns]
  -[TLVibrationManager _didChangeUserGeneratedVibrationPatterns]
  -[TLVibrationManager _saveUserGeneratedVibrationPatterns:error:]
  -[TLVibrationManager addUserGeneratedVibrationPattern:name:error:]
  -[TLVibrationManager setName:forUserGeneratedVibrationWithIdentifier:error:]
  -[TLVibrationManager deleteUserGeneratedVibrationPatternWithIdentifier:error:]
  -[TLVibrationManager _numberOfUserGeneratedVibrations]
  -[TLVibrationManager _removeAllUserGeneratedVibrationsWithError:]
  -[TLVibrationManager _retrieveUserGeneratedVibrationPatternsUsingService]
  -[TLVibrationManager _setUserGeneratedVibrationPatternsUsingService:error:]
  -[TLVibrationManager _removeAllUserGeneratedVibrationPatternsUsingServiceWithError:]
  -[TLVibrationManager _booleanPreferenceForKey:defaultValue:]
  -[TLVibrationManager shouldVibrateForCurrentRingerSwitchState]
  -[TLVibrationManager shouldVibrateOnRing]
  -[TLVibrationManager shouldVibrateOnSilent]
  -[TLVibrationManager _migrateLegacySettings]
  -[TLVibrationManager _storedSystemVibrationDataMigrationVersion]
  -[TLVibrationManager _makeSystemVibrationDataMigrationVersionCurrentIfNecessary]
  -[TLVibrationManager _currentVibrationWatchAlertPolicyPreferenceKeyForAlertType:topic:]
  -[TLVibrationManager _currentVibrationWatchAlertPolicyForAlertType:]
  -[TLVibrationManager _currentVibrationWatchAlertPolicyForAlertType:topic:]
  -[TLVibrationManager _currentVibrationWatchAlertPolicyForAlertType:topic:didFindPersistedWatchAlertPolicy:]
  -[TLVibrationManager _setCurrentVibrationWatchAlertPolicy:forAlertType:]
  -[TLVibrationManager _setCurrentVibrationWatchAlertPolicy:forAlertType:topic:]
  -[TLVibrationManager allowsAutoRefresh]
  -[TLVibrationManager currentVibrationIdentifierForAlertType:accountIdentifier:]
  -[TLVibrationManager setCurrentVibrationIdentifier:forAlertType:accountIdentifier:]
  -[TLVibrationManager _currentVibrationWatchAlertPolicyForAlertType:accountIdentifier:]
  -[TLVibrationManager _setCurrentVibrationWatchAlertPolicy:forAlertType:accountIdentifier:]


TLAlertStoppingOptions : NSObject <NSCopying>
 @property  double fadeOutDuration
 @property  BOOL shouldWaitUntilEndOfCurrentRepetition

  // instance methods
  -[TLAlertStoppingOptions setFadeOutDuration:]
  -[TLAlertStoppingOptions copyWithZone:]
  -[TLAlertStoppingOptions fadeOutDuration]
  -[TLAlertStoppingOptions isEqual:]
  -[TLAlertStoppingOptions init]
  -[TLAlertStoppingOptions shouldWaitUntilEndOfCurrentRepetition]
  -[TLAlertStoppingOptions setShouldWaitUntilEndOfCurrentRepetition:]


TLAttentionAwarenessEffectProcessor : NSObject
 @property  {?=Bff} effectParameters

  // instance methods
  -[TLAttentionAwarenessEffectProcessor dealloc]
  -[TLAttentionAwarenessEffectProcessor _assertRunningOnAccessQueue]
  -[TLAttentionAwarenessEffectProcessor .cxx_destruct]
  -[TLAttentionAwarenessEffectProcessor stop]
  -[TLAttentionAwarenessEffectProcessor _assertNotRunningOnAccessQueue]
  -[TLAttentionAwarenessEffectProcessor start]
  -[TLAttentionAwarenessEffectProcessor effectParameters]
  -[TLAttentionAwarenessEffectProcessor setEffectParameters:]
  -[TLAttentionAwarenessEffectProcessor setEffectParameters:effectMixFadeDuration:]
  -[TLAttentionAwarenessEffectProcessor initWithProcessingFormat:framesPerRender:audioSession:effectParameters:]
  -[TLAttentionAwarenessEffectProcessor render:numberOfFrames:]
  -[TLAttentionAwarenessEffectProcessor _applyEffectMix:]
  -[TLAttentionAwarenessEffectProcessor _currentEffectMix]
  -[TLAttentionAwarenessEffectProcessor _sanitizeEffectMix:]
  -[TLAttentionAwarenessEffectProcessor _applyEffectParameters:includingEffectMix:]


TLAlertContext : NSObject
 @property  long long playbackBackEnd
 @property  NSObject<OS_dispatch_source> *timeoutTimerSource
 @property  BOOL beingInterrupted

  // instance methods
  -[TLAlertContext .cxx_destruct]
  -[TLAlertContext playbackBackEnd]
  -[TLAlertContext setPlaybackBackEnd:]
  -[TLAlertContext timeoutTimerSource]
  -[TLAlertContext setTimeoutTimerSource:]
  -[TLAlertContext isBeingInterrupted]
  -[TLAlertContext setBeingInterrupted:]


TLVibrationPattern : NSObject
 @property  id _artificiallyRepeatingPropertyListRepresentation
 @property  id propertyListRepresentation
 @property  id contextObject

  // class methods
  +[TLVibrationPattern noneVibrationPattern]
  +[TLVibrationPattern isValidVibrationPatternPropertyListRepresentation:]
  +[TLVibrationPattern simpleVibrationPatternWithVibrationDuration:pauseDuration:]
  +[TLVibrationPattern complexVibrationPatternWithDurationsForVibrationsAndPauses:]

  // instance methods
  -[TLVibrationPattern propertyListRepresentation]
  -[TLVibrationPattern initWithPropertyListRepresentation:]
  -[TLVibrationPattern .cxx_destruct]
  -[TLVibrationPattern init]
  -[TLVibrationPattern _initWithPropertyListRepresentation:skipValidation:]
  -[TLVibrationPattern _artificiallyRepeatingPropertyListRepresentation]
  -[TLVibrationPattern _computedDuration]
  -[TLVibrationPattern appendVibrationComponentWithDuration:isPause:]
  -[TLVibrationPattern contextObject]
  -[TLVibrationPattern setContextObject:]


TLAccessQueue : NSObject
 @property  NSString *label

  // instance methods
  -[TLAccessQueue initWithLabel:appendUUIDToLabel:]
  -[TLAccessQueue _performSynchronousBlockInSerialQueue:]
  -[TLAccessQueue performAsynchronousBlock:]
  -[TLAccessQueue .cxx_destruct]
  -[TLAccessQueue assertNotRunningInAccessQueue]
  -[TLAccessQueue label]
  -[TLAccessQueue performSynchronousBlock:]


TLAlertSystemSoundController : NSObject <TLBacklightObserver, TLAlertPlaybackBackEndController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TLAlertSystemSoundController _soundForAlert:toneIdentifierForDeemphasizingAlert:]
  +[TLAlertSystemSoundController _toneIdentifierForDeemphasizingAlert:]
  +[TLAlertSystemSoundController _soundBehaviorForAlert:withSound:]
  +[TLAlertSystemSoundController _vibrationPatternForAlert:withSound:]
  +[TLAlertSystemSoundController _componentSuppressionFlagsForAlert:]
  +[TLAlertSystemSoundController _descriptionForAlertComponentsSuppressionFlags:]
  +[TLAlertSystemSoundController _optionsForSystemSoundAlert:withSound:]

  // instance methods
  -[TLAlertSystemSoundController stopPlayingAlerts:withOptions:playbackCompletionType:]
  -[TLAlertSystemSoundController playAlert:withCompletionHandler:]
  -[TLAlertSystemSoundController dealloc]
  -[TLAlertSystemSoundController .cxx_destruct]
  -[TLAlertSystemSoundController preheatForAlert:completionHandler:]
  -[TLAlertSystemSoundController init]
  -[TLAlertSystemSoundController backlightStatusDidChange:]
  -[TLAlertSystemSoundController _playAlert:alertSystemSoundContext:toneIdentifierForDeemphasizingAlert:backlightStatusResolutionDeferralContext:]
  -[TLAlertSystemSoundController _considerDeferringPlayingAlertForBacklightStatusResolution:alertSystemSoundContext:]
  -[TLAlertSystemSoundController _playTaskDescriptorForAlert:withSound:alertSystemSoundContext:]
  -[TLAlertSystemSoundController _processPlayTaskDescriptors:]
  -[TLAlertSystemSoundController _prepareForStoppingAlerts:withOptions:playbackCompletionType:]
  -[TLAlertSystemSoundController _processStopTasksDescriptor:]
  -[TLAlertSystemSoundController _prepareForPreemptingAlertsBeforeBeginningPlaybackOfAlert:withSound:playbackCompletionType:]
  -[TLAlertSystemSoundController _preheatForAlert:backlightStatus:completionHandler:]
  -[TLAlertSystemSoundController _didCompletePlaybackForAlert:]
  -[TLAlertSystemSoundController _processPlaybackCompletionContexts:]
  -[TLAlertSystemSoundController _removeAlert:alertSystemSoundContext:didFailToPrepareSound:appendingPlaybackCompletionContextToArray:]
  -[TLAlertSystemSoundController _beginRequiringBacklightObservationForAlert:alertSystemSoundContext:]
  -[TLAlertSystemSoundController _endRequiringBacklightObservationForAlert:alertSystemSoundContext:]
  -[TLAlertSystemSoundController _processDeemphasizableAlertChangesForBackglightStatus:stopTasksDescriptorForDeemphasizedAlerts:deemphasizableAlertBeginPlayingContexts:]


TLAlertPlaybackCompletionContext : NSObject
 @property  @? completionHandler
 @property  long long playbackCompletionType
 @property  NSError *error

  // instance methods
  -[TLAlertPlaybackCompletionContext error]
  -[TLAlertPlaybackCompletionContext .cxx_destruct]
  -[TLAlertPlaybackCompletionContext setError:]
  -[TLAlertPlaybackCompletionContext setCompletionHandler:]
  -[TLAlertPlaybackCompletionContext completionHandler]
  -[TLAlertPlaybackCompletionContext playbackCompletionType]
  -[TLAlertPlaybackCompletionContext setPlaybackCompletionType:]


TLToneStoreDownload : NSObject
 @property  NSString *name
 @property  NSString *albumTitle
 @property  NSString *artistName
 @property  double duration
 @property  NSString *genreName
 @property  BOOL ringtone
 @property  unsigned long storeItemIdentifier
 @property  float downloadProgress
 @property  NSString *toneIdentifier
 @property  NSString *identifier

  // instance methods
  -[TLToneStoreDownload downloadProgress]
  -[TLToneStoreDownload artistName]
  -[TLToneStoreDownload identifier]
  -[TLToneStoreDownload toneIdentifier]
  -[TLToneStoreDownload _setDuration:]
  -[TLToneStoreDownload storeItemIdentifier]
  -[TLToneStoreDownload dealloc]
  -[TLToneStoreDownload .cxx_destruct]
  -[TLToneStoreDownload duration]
  -[TLToneStoreDownload name]
  -[TLToneStoreDownload isEqual:]
  -[TLToneStoreDownload init]
  -[TLToneStoreDownload _setName:]
  -[TLToneStoreDownload albumTitle]
  -[TLToneStoreDownload genreName]
  -[TLToneStoreDownload _setArtistName:]
  -[TLToneStoreDownload _setStoreItemIdentifier:]
  -[TLToneStoreDownload isRingtone]
  -[TLToneStoreDownload _setAlbumTitle:]
  -[TLToneStoreDownload _setGenreName:]
  -[TLToneStoreDownload _setRingtone:]
  -[TLToneStoreDownload _setDownloadProgress:]
  -[TLToneStoreDownload _setToneIdentifier:]


TLAudioQueue : NSObject
 @property  NSObject<OS_dispatch_queue> *_underlyingSerialQueue

  // class methods
  +[TLAudioQueue sharedAudioQueue]

  // instance methods
  -[TLAudioQueue .cxx_destruct]
  -[TLAudioQueue _init]
  -[TLAudioQueue performTaskWithBlock:]
  -[TLAudioQueue performSynchronousTaskWithBlock:]
  -[TLAudioQueue performSynchronousTaskWithOptions:block:]
  -[TLAudioQueue assertRunningOnAudioQueue]
  -[TLAudioQueue assertNotRunningOnAudioQueue]
  -[TLAudioQueue _underlyingSerialQueue]
  -[TLAudioQueue _shouldAssumeRunningOnAudioQueue]


TLAttentionAwarenessEffectAudioTapContext : NSObject
 @property  TLAttentionAwarenessEffectCoordinator *effectCoordinator
 @property  TLAttentionAwarenessEffectProcessor *effectProcessor
 @property  NSUUID *identifier

  // instance methods
  -[TLAttentionAwarenessEffectAudioTapContext identifier]
  -[TLAttentionAwarenessEffectAudioTapContext .cxx_destruct]
  -[TLAttentionAwarenessEffectAudioTapContext isEqual:]
  -[TLAttentionAwarenessEffectAudioTapContext init]
  -[TLAttentionAwarenessEffectAudioTapContext effectCoordinator]
  -[TLAttentionAwarenessEffectAudioTapContext setEffectCoordinator:]
  -[TLAttentionAwarenessEffectAudioTapContext effectProcessor]
  -[TLAttentionAwarenessEffectAudioTapContext setEffectProcessor:]


TLAlertSystemSoundPlayTaskDescriptor : NSObject
 @property  TLAlert *alert
 @property  TLSystemSound *sound
 @property  TLAlertSystemSoundContext *alertSystemSoundContext

  // instance methods
  -[TLAlertSystemSoundPlayTaskDescriptor sound]
  -[TLAlertSystemSoundPlayTaskDescriptor alert]
  -[TLAlertSystemSoundPlayTaskDescriptor .cxx_destruct]
  -[TLAlertSystemSoundPlayTaskDescriptor initWithAlert:sound:alertSystemSoundContext:]
  -[TLAlertSystemSoundPlayTaskDescriptor alertSystemSoundContext]


TLDeemphasizableAlertSystemSoundBeginPlayingContext : NSObject
 @property  TLAlert *alert
 @property  TLAlertSystemSoundContext *alertSystemSoundContext
 @property  NSString *toneIdentifierForDeemphasizingAlert
 @property  TLSystemSound *sound

  // instance methods
  -[TLDeemphasizableAlertSystemSoundBeginPlayingContext sound]
  -[TLDeemphasizableAlertSystemSoundBeginPlayingContext alert]
  -[TLDeemphasizableAlertSystemSoundBeginPlayingContext .cxx_destruct]
  -[TLDeemphasizableAlertSystemSoundBeginPlayingContext setSound:]
  -[TLDeemphasizableAlertSystemSoundBeginPlayingContext setAlert:]
  -[TLDeemphasizableAlertSystemSoundBeginPlayingContext alertSystemSoundContext]
  -[TLDeemphasizableAlertSystemSoundBeginPlayingContext setAlertSystemSoundContext:]
  -[TLDeemphasizableAlertSystemSoundBeginPlayingContext toneIdentifierForDeemphasizingAlert]
  -[TLDeemphasizableAlertSystemSoundBeginPlayingContext setToneIdentifierForDeemphasizingAlert:]


TLCapabilitiesManager : NSObject
 @property  BOOL ringtoneStoreAvailable
 @property  BOOL alertToneStoreAvailable
 @property  BOOL wantsModernDefaultRingtone
 @property  BOOL hasVibratorCapability
 @property  BOOL hasSynchronizedVibrationsCapability
 @property  BOOL hasSynchronizedEmbeddedVibrationsCapability
 @property  BOOL hasUserGeneratedVibrationsCapability
 @property  NSString *deviceCodeName
 @property  NSString *simplifiedDeviceCodeName
 @property  BOOL homePod

  // class methods
  +[TLCapabilitiesManager sharedCapabilitiesManager]

  // instance methods
  -[TLCapabilitiesManager dealloc]
  -[TLCapabilitiesManager .cxx_destruct]
  -[TLCapabilitiesManager _checkRingtoneStoreAvailability]
  -[TLCapabilitiesManager isRingtoneStoreAvailable]
  -[TLCapabilitiesManager hasVibratorCapability]
  -[TLCapabilitiesManager _handleStoreAvailableItemKindsChangedNotification:]
  -[TLCapabilitiesManager simplifiedDeviceCodeName]
  -[TLCapabilitiesManager hasUserGeneratedVibrationsCapability]
  -[TLCapabilitiesManager wantsModernDefaultRingtone]
  -[TLCapabilitiesManager isHomePod]
  -[TLCapabilitiesManager hasSynchronizedVibrationsCapability]
  -[TLCapabilitiesManager _updateRingtoneStoreAvailabilityWithAvailableKinds:error:]
  -[TLCapabilitiesManager deviceCodeName]
  -[TLCapabilitiesManager _hasTelephonyCapability]
  -[TLCapabilitiesManager init]
  -[TLCapabilitiesManager hasSynchronizedEmbeddedVibrationsCapability]
  -[TLCapabilitiesManager isAlertToneStoreAvailable]


TLAttentionAwarenessObserver : NSObject
  // class methods
  +[TLAttentionAwarenessObserver sharedAttentionAwarenessObserver]
  +[TLAttentionAwarenessObserver supportsAttenuatingTonesForAttentionDetected]

  // instance methods
  -[TLAttentionAwarenessObserver dealloc]
  -[TLAttentionAwarenessObserver _assertRunningOnAccessQueue]
  -[TLAttentionAwarenessObserver .cxx_destruct]
  -[TLAttentionAwarenessObserver _assertNotRunningOnAccessQueue]
  -[TLAttentionAwarenessObserver init]
  -[TLAttentionAwarenessObserver pollForAttentionWithEventHandler:]
  -[TLAttentionAwarenessObserver cancelPollForAttentionWithToken:]
  -[TLAttentionAwarenessObserver _beginPollingForAttention]
  -[TLAttentionAwarenessObserver _endPollingForAttention]
  -[TLAttentionAwarenessObserver _didReceiveAttentionPollingEventOfType:attentionEvent:]
  -[TLAttentionAwarenessObserver _didCompleteInitialization]
  -[TLAttentionAwarenessObserver _invokePollingForAttentionEventHandlers:eventType:]


TLAlertSystemSoundStopTasksDescriptor : NSObject
 @property  NSMapTable *interruptedAlertsToSound
 @property  NSArray *playbackCompletionContextsToProcess
 @property  TLAlertStoppingOptions *options
 @property  long long playbackCompletionType

  // instance methods
  -[TLAlertSystemSoundStopTasksDescriptor .cxx_destruct]
  -[TLAlertSystemSoundStopTasksDescriptor options]
  -[TLAlertSystemSoundStopTasksDescriptor setOptions:]
  -[TLAlertSystemSoundStopTasksDescriptor playbackCompletionType]
  -[TLAlertSystemSoundStopTasksDescriptor setPlaybackCompletionType:]
  -[TLAlertSystemSoundStopTasksDescriptor interruptedAlertsToSound]
  -[TLAlertSystemSoundStopTasksDescriptor setInterruptedAlertsToSound:]
  -[TLAlertSystemSoundStopTasksDescriptor playbackCompletionContextsToProcess]
  -[TLAlertSystemSoundStopTasksDescriptor setPlaybackCompletionContextsToProcess:]


TLContentProtectionStateObserver : NSObject
  // class methods
  +[TLContentProtectionStateObserver sharedContentProtectionStateObserver]

  // instance methods
  -[TLContentProtectionStateObserver performBlockAfterProtectedContentUnlocked:]
  -[TLContentProtectionStateObserver _loadUnlockedSinceBootStatusIfNeeded]
  -[TLContentProtectionStateObserver dealloc]
  -[TLContentProtectionStateObserver _assertRunningOnAccessQueue]
  -[TLContentProtectionStateObserver _updateUnlockedSinceBootStatus]
  -[TLContentProtectionStateObserver .cxx_destruct]
  -[TLContentProtectionStateObserver cancelBlockScheduledForProtectedContentUnlockedEventWithToken:]
  -[TLContentProtectionStateObserver _handleFirstUnlockNotification]
  -[TLContentProtectionStateObserver _performBlockAfterProtectedContentUnlocked:]
  -[TLContentProtectionStateObserver _registerFirstUnlockNotifyToken]
  -[TLContentProtectionStateObserver _cancelBlockScheduledForProtectedContentUnlockedEventWithToken:]
  -[TLContentProtectionStateObserver _assertNotRunningOnAccessQueue]
  -[TLContentProtectionStateObserver _loadContentProtectionStatusIfNeeded]
  -[TLContentProtectionStateObserver _cancelFirstUnlockNotifyToken]
  -[TLContentProtectionStateObserver _queryCurrentUnlockedSinceBootStatus]
  -[TLContentProtectionStateObserver init]


TLAlertSystemSoundContext : NSObject
 @property  TLSystemSound *sound
 @property  TLAlertPlaybackCompletionContext *playbackCompletionContext
 @property  <TLAlertPlaybackObserver> *playbackObserver
 @property  BOOL requiringBacklightObservation
 @property  BOOL loadingSound
 @property  BOOL hasPlaybackStarted
 @property  BOOL beingInterrupted
 @property  NSString *toneIdentifierForDeemphasizingAlert
 @property  BOOL beingDeemphasized
 @property  BOOL deemphasized
 @property  BOOL hasDeemphasizedPlaybackStarted
 @property  BOOL shouldBeInterruptedAfterDeemphasizedPlaybackStarts
 @property  TLAlertStoppingOptions *stoppingOptionsForDeferredInterruption

  // instance methods
  -[TLAlertSystemSoundContext sound]
  -[TLAlertSystemSoundContext .cxx_destruct]
  -[TLAlertSystemSoundContext setSound:]
  -[TLAlertSystemSoundContext isBeingInterrupted]
  -[TLAlertSystemSoundContext setBeingInterrupted:]
  -[TLAlertSystemSoundContext toneIdentifierForDeemphasizingAlert]
  -[TLAlertSystemSoundContext setToneIdentifierForDeemphasizingAlert:]
  -[TLAlertSystemSoundContext playbackCompletionContext]
  -[TLAlertSystemSoundContext setPlaybackCompletionContext:]
  -[TLAlertSystemSoundContext playbackObserver]
  -[TLAlertSystemSoundContext setPlaybackObserver:]
  -[TLAlertSystemSoundContext isRequiringBacklightObservation]
  -[TLAlertSystemSoundContext setRequiringBacklightObservation:]
  -[TLAlertSystemSoundContext isLoadingSound]
  -[TLAlertSystemSoundContext setLoadingSound:]
  -[TLAlertSystemSoundContext hasPlaybackStarted]
  -[TLAlertSystemSoundContext setHasPlaybackStarted:]
  -[TLAlertSystemSoundContext isBeingDeemphasized]
  -[TLAlertSystemSoundContext setBeingDeemphasized:]
  -[TLAlertSystemSoundContext isDeemphasized]
  -[TLAlertSystemSoundContext setDeemphasized:]
  -[TLAlertSystemSoundContext hasDeemphasizedPlaybackStarted]
  -[TLAlertSystemSoundContext setHasDeemphasizedPlaybackStarted:]
  -[TLAlertSystemSoundContext shouldBeInterruptedAfterDeemphasizedPlaybackStarts]
  -[TLAlertSystemSoundContext setShouldBeInterruptedAfterDeemphasizedPlaybackStarts:]
  -[TLAlertSystemSoundContext stoppingOptionsForDeferredInterruption]
  -[TLAlertSystemSoundContext setStoppingOptionsForDeferredInterruption:]


TLSilentModeController : NSObject
 @property  long long silentModeStatus

  // class methods
  +[TLSilentModeController sharedSilentModeController]

  // instance methods
  -[TLSilentModeController dealloc]
  -[TLSilentModeController _assertRunningOnAccessQueue]
  -[TLSilentModeController .cxx_destruct]
  -[TLSilentModeController _performBlockOnAccessQueue:]
  -[TLSilentModeController _assertNotRunningOnAccessQueue]
  -[TLSilentModeController init]
  -[TLSilentModeController silentModeStatus]
  -[TLSilentModeController _setSilentModeStatus:]
  -[TLSilentModeController _cancelRingerSwitchChangedNotifyToken]
  -[TLSilentModeController _registerRingerSwitchChangedNotifyToken]
  -[TLSilentModeController _silentModeStatusForRingerSwitchChangedNotifyToken:]
  -[TLSilentModeController _updateSilentModeStatusUsingRingerSwitchChangedNotifyToken:]


TLAlertActivationAssertion : NSObject
  // instance methods
  -[TLAlertActivationAssertion dealloc]
  -[TLAlertActivationAssertion .cxx_destruct]
  -[TLAlertActivationAssertion acquire]
  -[TLAlertActivationAssertion relinquish]
  -[TLAlertActivationAssertion _acquire]
  -[TLAlertActivationAssertion initWithAlert:]
  -[TLAlertActivationAssertion _relinquish]


TLToneImportResponse : NSObject
 @property  long long statusCode
 @property  NSString *toneIdentifier

  // instance methods
  -[TLToneImportResponse statusCode]
  -[TLToneImportResponse toneIdentifier]
  -[TLToneImportResponse .cxx_destruct]
  -[TLToneImportResponse initWithStatusCode:toneIdentifier:]


TLBacklight : NSObject
 @property  long long backlightStatus

  // class methods
  +[TLBacklight sharedBacklight]

  // instance methods
  -[TLBacklight backlightStatus]
  -[TLBacklight addObserver:]
  -[TLBacklight dealloc]
  -[TLBacklight _assertRunningOnAccessQueue]
  -[TLBacklight .cxx_destruct]
  -[TLBacklight _performBlockOnAccessQueue:]
  -[TLBacklight _assertNotRunningOnAccessQueue]
  -[TLBacklight removeObserver:]
  -[TLBacklight init]
  -[TLBacklight _setBacklightStatus:]
  -[TLBacklight _setObservingBacklight:]
  -[TLBacklight _notifyObservers:ofUpdatedBacklightStatus:]


TLAlert : NSObject
 @property  BOOL _hasSynchronizedVibrationUnmatchedWithTone
 @property  <TLAlertPlaybackObserver> *playbackObserver
 @property  TLAlertConfiguration *configuration
 @property  long long type
 @property  NSString *toneIdentifier
 @property  NSString *vibrationIdentifier

  // class methods
  +[TLAlert alertWithConfiguration:]
  +[TLAlert _stopAllAlerts]
  +[TLAlert playToneAndVibrationForType:]
  +[TLAlert playAlertForType:]
  +[TLAlert _watchPrefersSalientToneAndVibration]
  +[TLAlert _setWatchPrefersSalientToneAndVibration:]
  +[TLAlert _currentOverridePolicyForType:]
  +[TLAlert _setCurrentOverridePolicy:forType:]

  // instance methods
  -[TLAlert toneIdentifier]
  -[TLAlert type]
  -[TLAlert configuration]
  -[TLAlert .cxx_destruct]
  -[TLAlert initWithType:]
  -[TLAlert stop]
  -[TLAlert vibrationIdentifier]
  -[TLAlert play]
  -[TLAlert playWithCompletionHandler:]
  -[TLAlert preheatWithCompletionHandler:]
  -[TLAlert _updateAudioVolumeDynamicallyToValue:]
  -[TLAlert _descriptionForDebugging:]
  -[TLAlert initWithType:accountIdentifier:]
  -[TLAlert initWithType:toneIdentifier:vibrationIdentifier:]
  -[TLAlert playWithCompletionHandler:targetQueue:]
  -[TLAlert playbackObserver]
  -[TLAlert setPlaybackObserver:]
  -[TLAlert _initWithConfiguration:toneIdentifier:vibrationIdentifier:hasSynchronizedVibrationUnmatchedWithTone:]
  -[TLAlert stopWithOptions:]
  -[TLAlert _hasSynchronizedVibrationUnmatchedWithTone]


TLAlertController : NSObject <TLAlertPlaybackBackEndController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TLAlertController _playbackBackEndForAlertType:topic:]
  +[TLAlertController _shouldStopAlertForUserInterruption:]
  +[TLAlertController sharedAlertController]
  +[TLAlertController _playbackBackEndForAlert:]

  // instance methods
  -[TLAlertController stopPlayingAlerts:withOptions:playbackCompletionType:]
  -[TLAlertController playAlert:withCompletionHandler:]
  -[TLAlertController stopAllAlerts]
  -[TLAlertController _stopPlayingAlerts:withOptions:playbackCompletionType:]
  -[TLAlertController updateAudioVolumeDynamicallyForAlert:toValue:]
  -[TLAlertController dealloc]
  -[TLAlertController _stopAllAlertsInCurrentProcess]
  -[TLAlertController _prepareForPlayingAlert:]
  -[TLAlertController _assertRunningOnAccessQueue]
  -[TLAlertController .cxx_destruct]
  -[TLAlertController _queuePlayerController]
  -[TLAlertController _didCompletePlaybackOfAlert:]
  -[TLAlertController _performBlockOnAccessQueue:]
  -[TLAlertController handleActivationAssertionStatusChangeForAlert:updatedStatus:]
  -[TLAlertController _controllerForPlaybackBackEnd:]
  -[TLAlertController _systemSoundController]
  -[TLAlertController _didReachTimeoutForAlert:]
  -[TLAlertController preheatForAlert:completionHandler:]
  -[TLAlertController init]


TLAlertQueuePlayerController : NSObject <TLAlertPlaybackBackEndController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TLAlertQueuePlayerController _propertyKeysOfInterestForToneAssets]
  +[TLAlertQueuePlayerController _clientNameForAlert:]
  +[TLAlertQueuePlayerController _clientPriorityForAlert:]
  +[TLAlertQueuePlayerController _shouldEnsureActiveAudioSessionWhenStartingPlaybackForAlert:]
  +[TLAlertQueuePlayerController _audioCategoryForAlert:externalEnvironmentValues:]
  +[TLAlertQueuePlayerController _audioCategoryOptionsForAlert:externalEnvironmentValues:]
  +[TLAlertQueuePlayerController _audioModeForAlert:audioCategory:]
  +[TLAlertQueuePlayerController _mediaExperienceAudioCategoryForAudioSessionCategory:]
  +[TLAlertQueuePlayerController _shouldBypassRingerSwitchPolicyForAlert:]
  +[TLAlertQueuePlayerController _prefersToPlayDuringWombatForAlert:]
  +[TLAlertQueuePlayerController _shouldUseAuxiliaryAudioSessionForAlert:]
  +[TLAlertQueuePlayerController _shouldHandleAudioSessionActivationForAlert:]
  +[TLAlertQueuePlayerController _shouldVibrateForAlert:]
  +[TLAlertQueuePlayerController _shouldRepeatVibrationForAlert:externalEnvironmentValues:]
  +[TLAlertQueuePlayerController _shouldApplyAttentionAwarenessEffectsForAlert:]
  +[TLAlertQueuePlayerController _audioVolumeApplicationPolicyForAlert:externalEnvironmentValues:]
  +[TLAlertQueuePlayerController _audioPlaybackInitiationDelayForAlert:externalEnvironmentValues:]
  +[TLAlertQueuePlayerController _audioVolumeRampingDurationForAlert:externalEnvironmentValues:toneAssetDuration:]
  +[TLAlertQueuePlayerController _shouldApplyStandardDelayAndAudioVolumeRampForAlert:externalEnvironmentValues:]
  +[TLAlertQueuePlayerController _externalEnvironmentValuesForAlert:]

  // instance methods
  -[TLAlertQueuePlayerController stopPlayingAlerts:withOptions:playbackCompletionType:]
  -[TLAlertQueuePlayerController playAlert:withCompletionHandler:]
  -[TLAlertQueuePlayerController updateAudioVolumeDynamicallyForAlert:toValue:]
  -[TLAlertQueuePlayerController dealloc]
  -[TLAlertQueuePlayerController .cxx_destruct]
  -[TLAlertQueuePlayerController handleActivationAssertionStatusChangeForAlert:updatedStatus:]
  -[TLAlertQueuePlayerController observeValueForKeyPath:ofObject:change:context:]
  -[TLAlertQueuePlayerController init]
  -[TLAlertQueuePlayerController _handleAudioSessionInterruptionNotification:]
  -[TLAlertQueuePlayerController _playAlertForStateDescriptor:previousStateDescriptor:]
  -[TLAlertQueuePlayerController _stopPlayingAlertForStateDescriptor:withOptions:playbackCompletionType:]
  -[TLAlertQueuePlayerController _handleActivationAssertionStatusChangeForAlert:updatedStatus:previousStateDescriptor:updatedStateDescriptor:]
  -[TLAlertQueuePlayerController _canPlayToneAsset:]
  -[TLAlertQueuePlayerController _reloadPlaybackForStateDescriptor:withToneIdentifier:]
  -[TLAlertQueuePlayerController _startPlaybackForStateDescriptor:usingAssetWithLoadedProperties:shouldConfirmAlertStillPlaying:]
  -[TLAlertQueuePlayerController _startPlaybackForStateDescriptor:usingConfirmedPlayableAsset:]
  -[TLAlertQueuePlayerController _startPlaybackForStateDescriptor:usingConfirmedPlayableAsset:hasAlreadyDetectedUserAttention:]
  -[TLAlertQueuePlayerController _initiateAudioPlaybackForStateDescriptor:audioVolumeRampingDuration:]
  -[TLAlertQueuePlayerController _performDelayedAudioPlaybackInitiationForStateDescriptor:audioVolumeRampingDuration:]
  -[TLAlertQueuePlayerController _stopPlaybackForStateDescriptor:]
  -[TLAlertQueuePlayerController _stopPlaybackForStateDescriptor:withOptions:playerWasAlreadyPausedExternally:]
  -[TLAlertQueuePlayerController _willBeginPlayingAlertForStateDescriptor:]
  -[TLAlertQueuePlayerController _didEndPlayingAlertForStateDescriptor:]
  -[TLAlertQueuePlayerController _prepareAudioEnvironmentForStateDescriptor:]
  -[TLAlertQueuePlayerController _restoreAudioEnvironmentForStateDescriptor:]
  -[TLAlertQueuePlayerController _resetClientPriorityForStateDescriptor:]
  -[TLAlertQueuePlayerController _resetFlagsForSwitchingAuxiliaryAudioSession]
  -[TLAlertQueuePlayerController _applyAudioVolume:forAlert:]
  -[TLAlertQueuePlayerController _didReceiveAttentionPollingEventOfType:stateDescriptor:]
  -[TLAlertQueuePlayerController _createQueuePlayerIfNecessaryForStateDescriptor:]
  -[TLAlertQueuePlayerController _destroyQueuePlayerForStateDescriptor:]
  -[TLAlertQueuePlayerController _startObservingQueuePlayer]
  -[TLAlertQueuePlayerController _stopObservingQueuePlayer]
  -[TLAlertQueuePlayerController _queuePlayer:currentItemWasUpdatedFromValue:]
  -[TLAlertQueuePlayerController _queuePlayer:currentItemStatusWasUpdatedToValue:]
  -[TLAlertQueuePlayerController _audioVolumeForAlert:audioCategory:]
  -[TLAlertQueuePlayerController _activateAudioSessionIfNeededForStateDescriptor:]
  -[TLAlertQueuePlayerController _deactivateAudioSessionIfNeededForStateDescriptor:]
  -[TLAlertQueuePlayerController _startObservingAudioSessionInterruptionNotificationsForStateDescriptor:]
  -[TLAlertQueuePlayerController _stopObservingAudioSessionInterruptionNotificationsForStateDescriptor:]
  -[TLAlertQueuePlayerController _handleAudioSessionInterruptionOfType:withOptions:]
  -[TLAlertQueuePlayerController _isPreventingAudioSessionDeactivation]
  -[TLAlertQueuePlayerController _beginPreventingAudioSessionDeactivation]
  -[TLAlertQueuePlayerController _endPreventingAudioSessionDeactivationForStateDescriptor:]
  -[TLAlertQueuePlayerController _fallbackToneIdentifierForStateDescriptor:]


TLAlertQueuePlayerStateDescriptor : NSObject
 @property  TLAlert *playingAlert
 @property  @? playingAlertCompletionHandler
 @property  BOOL alertActivationAssertionAcquired
 @property  TLAlert *alertForAudioEnvironmentSetup

  // instance methods
  -[TLAlertQueuePlayerStateDescriptor .cxx_destruct]
  -[TLAlertQueuePlayerStateDescriptor _descriptionForDebugging:]
  -[TLAlertQueuePlayerStateDescriptor initWithPlayingAlert:completionHandler:previousStateDescriptor:]
  -[TLAlertQueuePlayerStateDescriptor stateDescriptorForCompletedPlayback]
  -[TLAlertQueuePlayerStateDescriptor initForAcquiringActivationAssertionWithAlertForAudioEnvironmentSetup:previousStateDescriptor:]
  -[TLAlertQueuePlayerStateDescriptor stateDescriptorByRelinquishingActivationAssertion]
  -[TLAlertQueuePlayerStateDescriptor _initForRelinquishingActivationAssertionWithAlertForAudioEnvironmentSetup:previousStateDescriptor:]
  -[TLAlertQueuePlayerStateDescriptor _transferPlayingAlertAndCompletionHandlerFromPreviousStateDescriptor:]
  -[TLAlertQueuePlayerStateDescriptor invokePlayingAlertCompletionHandlerWithPlaybackCompletionType:error:]
  -[TLAlertQueuePlayerStateDescriptor isAlertActivationAssertionAcquired]
  -[TLAlertQueuePlayerStateDescriptor setAlertActivationAssertionAcquired:]
  -[TLAlertQueuePlayerStateDescriptor playingAlert]
  -[TLAlertQueuePlayerStateDescriptor playingAlertCompletionHandler]
  -[TLAlertQueuePlayerStateDescriptor alertForAudioEnvironmentSetup]
  -[TLAlertQueuePlayerStateDescriptor setAlertForAudioEnvironmentSetup:]


AVPlayerItem(TLExtensions)
	// instance methods
	-[AVPlayerItem(TLExtensions) tl_hapticPlayerItemTrack]

NSError(TLExtensions)
	// class methods
	+[NSError(TLExtensions) tl_errorWithDomain:description:]

	// instance methods
	-[NSError(TLExtensions) tl_nonRedundantDescription]

01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 0c00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioConnectionPoint 
01 00 0c00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioEngine 
01 00 0c00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioFormat 
01 00 0c00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioPCMBuffer 
01 00 0c00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSession 
01 00 0c00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioUnitEQ 
01 00 0c00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioUnitReverb 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMix 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMixInputParameters 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVOutputContext 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVQueuePlayer 
01 00 0500 /System/Library/PrivateFrameworks/MediaExperience.framework/MediaExperience: AVSystemController 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
