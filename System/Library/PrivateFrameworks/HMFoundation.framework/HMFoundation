|| __DATA.__data _HMFMemoryMonitorMemoryStateDidChangeNotification
|| __DATA.__data _HMFProductInfoBlowfishOSVersion
|| __DATA.__data _HMFProductInfoBondiOSVersion
|| __DATA.__data _HMFProductInfoBugleOSVersion
|| __DATA.__data _HMFProductInfoButlerOSVersion
|| __DATA.__data _HMFProductInfoCatamaranOSVersion
|| __DATA.__data _HMFProductInfoCinarOSVersion
|| __DATA.__data _HMFProductInfoCoralOSVersion
|| __DATA.__data _HMFProductInfoCoyoteOSVersion
|| __DATA.__data _HMFProductInfoDaytonaOSVersion
|| __DATA.__data _HMFProductInfoDonnerTideOSVersion
|| __DATA.__data _HMFProductInfoEagleOSVersion
|| __DATA.__data _HMFProductInfoEatonOSVersion
|| __DATA.__data _HMFProductInfoElectricOSVersion
|| __DATA.__data _HMFProductInfoEmeraldOSVersion
|| __DATA.__data _HMFProductInfoEmetOSVersion
|| __DATA.__data _HMFProductInfoEmperorOSVersion
|| __DATA.__data _HMFProductInfoErieOSVersion
|| __DATA.__data _HMFProductInfoFatsaOSVersion
|| __DATA.__data _HMFProductInfoFerryOSVersion
|| __DATA.__data _HMFProductInfoFortuneOSVersion
|| __DATA.__data _HMFProductInfoFrancisOSVersion
|| __DATA.__data _HMFProductInfoGloryBOSVersion
|| __DATA.__data _HMFProductInfoGloryCOSVersion
|| __DATA.__data _HMFProductInfoGloryGOSVersion
|| __DATA.__data _HMFProductInfoGloryOSVersion
|| __DATA.__data _HMFProductInfoGraceBOSVersion
|| __DATA.__data _HMFProductInfoGraceOSVersion
|| __DATA.__data _HMFProductInfoHopeBOSVersion
|| __DATA.__data _HMFProductInfoHopeCOSVersion
|| __DATA.__data _HMFProductInfoHopeGOSVersion
|| __DATA.__data _HMFProductInfoHopeOSVersion
|| __DATA.__data _HMFProductInfoJazzBOSVersion
|| __DATA.__data _HMFProductInfoJazzOSVersion
|| __DATA.__data _HMFProductInfoLibertyBOSVersion
|| __DATA.__data _HMFProductInfoLibertyCOSVersion
|| __DATA.__data _HMFProductInfoLibertyGOSVersion
|| __DATA.__data _HMFProductInfoLibertyOSVersion
|| __DATA.__data _HMFProductInfoMonarchOSVersion
|| __DATA.__data _HMFProductInfoPeaceBOSVersion
|| __DATA.__data _HMFProductInfoPeaceCOSVersion
|| __DATA.__data _HMFProductInfoPeaceGOSVersion
|| __DATA.__data _HMFProductInfoPeaceOSVersion
|| __DATA.__data _HMFProductInfoTigrisOSVersion
|| __DATA.__data _HMFProductInfoTildenOSVersion
|| __DATA.__data _HMFProductInfoTopazOSVersion
|| __DATA.__data _HMFProductInfoUnionOSVersion
|| __DATA.__data _HMFProductInfoWhitetailOSVersion
|| __DATA.__data _HMFProductInfoYagerBOSVersion
|| __DATA.__data _HMFProductInfoYagerOSVersion
|| __DATA.__data _HMFProductInfoYukonBOSVersion
|| __DATA.__data _HMFProductInfoYukonOSVersion
|| __DATA.__data _HMFProductInfoYukonPreOSVersion
|| __DATA.__data _HMFWiFiManagerCurrentNetworkDidChangeNotification
|| __DATA.__objc_data _OBJC_CLASS_$_HMFAttributeDescription
|| __DATA.__objc_data _OBJC_CLASS_$_HMFBlockOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMFBoolean
|| __DATA.__objc_data _OBJC_CLASS_$_HMFCache
|| __DATA.__objc_data _OBJC_CLASS_$_HMFDigest
|| __DATA.__objc_data _OBJC_CLASS_$_HMFDumpCategory
|| __DATA.__objc_data _OBJC_CLASS_$_HMFExponentialBackoffTimer
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPClient
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPClientConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPClientConnection
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPRequestHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPServer
|| __DATA.__objc_data _OBJC_CLASS_$_HMFKey
|| __DATA.__objc_data _OBJC_CLASS_$_HMFLocationAuthorization
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMemoryMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMessageFilter
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMessagePolicy
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMutableHTTPRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMutableHTTPResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMutableMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMutableNetService
|| __DATA.__objc_data _OBJC_CLASS_$_HMFNetAddress
|| __DATA.__objc_data _OBJC_CLASS_$_HMFNetManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMFNetMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HMFNetService
|| __DATA.__objc_data _OBJC_CLASS_$_HMFNetServiceBrowser
|| __DATA.__objc_data _OBJC_CLASS_$_HMFOSTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_HMFObjectObserver
|| __DATA.__objc_data _OBJC_CLASS_$_HMFOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMFOperationBudget
|| __DATA.__objc_data _OBJC_CLASS_$_HMFPairingIdentity
|| __DATA.__objc_data _OBJC_CLASS_$_HMFPowerAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_HMFPowerLogger
|| __DATA.__objc_data _OBJC_CLASS_$_HMFPowerManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMFPrivateObjectFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_HMFProcessInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMFScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_HMFStringIndentation
|| __DATA.__objc_data _OBJC_CLASS_$_HMFTimer
|| __DATA.__objc_data _OBJC_CLASS_$_HMFWiFiManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMFWiFiManagerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HMFWiFiNetworkInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMUIndent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFAttributeDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFBlockOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFBoolean
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFCache
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFDigest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFDumpCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFExponentialBackoffTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPClientConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPClientConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPRequestHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPServer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFKey
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFLocationAuthorization
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMemoryMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMessageFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMessagePolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMutableHTTPRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMutableHTTPResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMutableMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMutableNetService
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFNetAddress
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFNetManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFNetMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFNetService
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFNetServiceBrowser
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFOSTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFObjectObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFOperationBudget
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFPairingIdentity
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFPowerAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFPowerLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFPowerManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFPrivateObjectFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFProcessInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFStringIndentation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFWiFiManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFWiFiManagerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFWiFiNetworkInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUIndent
|| __DATA_CONST.__const _HMFErrorDomain
|| __DATA_CONST.__const _HMFHTTPContentLengthHeaderField
|| __DATA_CONST.__const _HMFHTTPContentTypeHeaderField
|| __DATA_CONST.__const _HMFHTTPDateHeaderField
|| __DATA_CONST.__const _HMFHTTPHostHeaderField
|| __DATA_CONST.__const _HMFHTTPTransferEncodingHeaderField
|| __DATA_CONST.__const _HMFHomeKitLoggingSubsystem
|| __DATA_CONST.__const _HMFKeyTypeIRK
|| __DATA_CONST.__const _HMFLocationAuthorizationUpdatedNotification
|| __DATA_CONST.__const _HMFLogCategoryDefault
|| __DATA_CONST.__const _HMFLogCategoryDumpState
|| __DATA_CONST.__const _HMFLoggingSubsystem
|| __DATA_CONST.__const _HMFMessageActivityPrefix
|| __DATA_CONST.__const _HMFPowerManagerBatteryLevelDidChangeNotification
|| __DATA_CONST.__const _HMFPowerManagerBatteryStateDidChangeNotification
|| __DATA_CONST.__const _HMFPreferenceUpdatedNotification
|| __DATA_CONST.__const _HMFSystemInfoMigratingUpdatedNotification
|| __DATA_CONST.__const _HMFSystemInfoNameNotificationKey
|| __DATA_CONST.__const _HMFSystemInfoNameUpdatedNotification
|| __DATA_CONST.__const _kDumpStateAccessoryCategoryKey
|| __DATA_CONST.__const _kDumpStateAccessoryKey
|| __DATA_CONST.__const _kDumpStateAccessoryProfileKey
|| __DATA_CONST.__const _kDumpStateAccessorySetupHashKey
|| __DATA_CONST.__const _kDumpStateAccessoryTransportKey
|| __DATA_CONST.__const _kDumpStateActionSetKey
|| __DATA_CONST.__const _kDumpStateApplicationDataKey
|| __DATA_CONST.__const _kDumpStateBridgeAccessoryKey
|| __DATA_CONST.__const _kDumpStateBridgedAccessoryKey
|| __DATA_CONST.__const _kDumpStateBulletinNotificationGroupCamerasKey
|| __DATA_CONST.__const _kDumpStateBulletinNotificationGroupKey
|| __DATA_CONST.__const _kDumpStateBulletinNotificationGroupServicesKey
|| __DATA_CONST.__const _kDumpStateBulletinNotificationKey
|| __DATA_CONST.__const _kDumpStateCharacteristicKey
|| __DATA_CONST.__const _kDumpStateCurrentUser
|| __DATA_CONST.__const _kDumpStateEventKey
|| __DATA_CONST.__const _kDumpStateExecuteOnceKey
|| __DATA_CONST.__const _kDumpStateExecuteSessionKey
|| __DATA_CONST.__const _kDumpStateHomeDaemonVersionKey
|| __DATA_CONST.__const _kDumpStateHomeKey
|| __DATA_CONST.__const _kDumpStateHomeManagerKey
|| __DATA_CONST.__const _kDumpStateHomeNotificationRegistrationsKey
|| __DATA_CONST.__const _kDumpStateIncomingInvitesKey
|| __DATA_CONST.__const _kDumpStateInvitesKey
|| __DATA_CONST.__const _kDumpStateKeychainItemKey
|| __DATA_CONST.__const _kDumpStateKeychainKey
|| __DATA_CONST.__const _kDumpStateLocationKey
|| __DATA_CONST.__const _kDumpStateMediaActionKey
|| __DATA_CONST.__const _kDumpStateMeshKey
|| __DATA_CONST.__const _kDumpStateMetadataKey
|| __DATA_CONST.__const _kDumpStateOutgoingInvitesKey
|| __DATA_CONST.__const _kDumpStatePendingResponses
|| __DATA_CONST.__const _kDumpStatePredicateKey
|| __DATA_CONST.__const _kDumpStateRecurrenceKey
|| __DATA_CONST.__const _kDumpStateRemovedUserKey
|| __DATA_CONST.__const _kDumpStateResidentKey
|| __DATA_CONST.__const _kDumpStateRoomKey
|| __DATA_CONST.__const _kDumpStateSecondaryAccessoryKey
|| __DATA_CONST.__const _kDumpStateServiceGroupKey
|| __DATA_CONST.__const _kDumpStateServiceKey
|| __DATA_CONST.__const _kDumpStateSharedHomeSourceVersion
|| __DATA_CONST.__const _kDumpStateSharedHomeUpdateHandler
|| __DATA_CONST.__const _kDumpStateSharedHomeUpdateSession
|| __DATA_CONST.__const _kDumpStateStateKey
|| __DATA_CONST.__const _kDumpStateSyncManagerKey
|| __DATA_CONST.__const _kDumpStateTimerTriggerKey
|| __DATA_CONST.__const _kDumpStateTriggerKey
|| __DATA_CONST.__const _kDumpStateUserAccessTokenKey
|| __DATA_CONST.__const _kDumpStateUserKey
|| __DATA_CONST.__const _kDumpStateWriteActionKey
|| __DATA_CONST.__const _kDumpStateZoneKey
|| __DATA_CONST.__const _kIndentLevel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFClassRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFHardwareAddress
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFLogCategory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMACAddress
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMemoryAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMessageDestination
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMessageDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMessageInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFPairingKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFPreference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFProductInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFSoftwareVersion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFSystemInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFSystemPreference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFUnfairLock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFVersion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFWeakObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFClassRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFHardwareAddress
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFLogCategory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMACAddress
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMemoryAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMessageDestination
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMessageDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMessageInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFPairingKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFPreference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFProductInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFSoftwareVersion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFSystemInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFSystemPreference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFUnfairLock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFVersion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFWeakObject
|| __TEXT.__const _HMFHTTPServerDefaultConnectionIdleTimeout
|| __TEXT.__const _HMFHardwareAddressMaxLength
|| __TEXT.__const _HMFKeySizeDefault
|| __TEXT.__const _HMFKeySizeIRK128
|| __TEXT.__const _HMFMACAddressLength
|| __TEXT.__const _HMFPairingKeyLength
|| __TEXT.__const _HMFoundationVersionNumber
|| __TEXT.__const _HMFoundationVersionString
|| __TEXT.__const _kSetupHashLength
|| __TEXT.__text _HMFAreStringsEqualIgnoringCase
|| __TEXT.__text _HMFBooleanToString
|| __TEXT.__text _HMFDataIsReversed
|| __TEXT.__text _HMFDigestAlgorithmFromString
|| __TEXT.__text _HMFDigestAlgorithmToString
|| __TEXT.__text _HMFDispatchQueueName
|| __TEXT.__text _HMFEnabledStatusToString
|| __TEXT.__text _HMFEqualObjects
|| __TEXT.__text _HMFGetActivityIdentifier
|| __TEXT.__text _HMFGetLogCategory
|| __TEXT.__text _HMFGetLogIdentifier
|| __TEXT.__text _HMFMethodDescription
|| __TEXT.__text _HMFObjectDescription
|| __TEXT.__text _HMFOperatingSystemVersionCompare
|| __TEXT.__text _HMFProductClassFromString
|| __TEXT.__text _HMFProductClassToString
|| __TEXT.__text _HMFProductPlatformToString
|| __TEXT.__text _HMFProductVariantToString
|| __TEXT.__text _HMFQOSClassFromQualityOfService
|| __TEXT.__text _HMFQualityOfServiceCompare
|| __TEXT.__text _HMFQualityOfServiceToString
|| __TEXT.__text _HMFSignpostTagFromUUID
|| __TEXT.__text _HMFTimeIntervalDescription
|| __TEXT.__text _NSOperatingSystemVersionToString
|| __TEXT.__text _checkMatchingSetupHash
|| __TEXT.__text _isEqualToObject
|| __TEXT.__text _randomDataWithLength
|| __TEXT.__text _randomUInt32
__ CFNetwork: _CFHTTPMessageCopyAllHeaderFields
__ CFNetwork: _CFHTTPMessageCopyBody
__ CFNetwork: _CFHTTPMessageCopyHeaderFieldValue
__ CFNetwork: _CFHTTPMessageCreateRequest
__ CFNetwork: _CFHTTPMessageCreateResponse
__ CFNetwork: _CFHTTPMessageSetBody
__ CFNetwork: _CFHTTPMessageSetHeaderFieldValue
__ CFNetwork: _NSNetServicesErrorCode
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSNetService
__ CFNetwork: _OBJC_CLASS_$_NSNetServiceBrowser
__ CFNetwork: _OBJC_CLASS_$_NSURLCredential
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: __CFHTTPServerConnectionCopyProperty
__ CFNetwork: __CFHTTPServerConnectionInvalidate
__ CFNetwork: __CFHTTPServerConnectionIsValid
__ CFNetwork: __CFHTTPServerConnectionSetClient
__ CFNetwork: __CFHTTPServerConnectionSetDispatchQueue
__ CFNetwork: __CFHTTPServerCopyProperty
__ CFNetwork: __CFHTTPServerCreateService
__ CFNetwork: __CFHTTPServerInvalidate
__ CFNetwork: __CFHTTPServerIsValid
__ CFNetwork: __CFHTTPServerRequestCopyBodyStream
__ CFNetwork: __CFHTTPServerRequestCopyProperty
__ CFNetwork: __CFHTTPServerRequestCreateResponseMessage
__ CFNetwork: __CFHTTPServerResponseCreateWithData
__ CFNetwork: __CFHTTPServerResponseEnqueue
__ CFNetwork: __CFHTTPServerResponseSetClient
__ CFNetwork: __CFHTTPServerSetDispatchQueue
__ CFNetwork: __CFHTTPServerSetProperty
__ CFNetwork: __kCFHTTPServerAllowAnonymousServer
__ CFNetwork: __kCFHTTPServerConnectionPeer
__ CFNetwork: __kCFHTTPServerIdleTimeout
__ CFNetwork: __kCFHTTPServerRequestHeaderValuesKey
__ CFNetwork: __kCFHTTPServerRequestHeaders
__ CFNetwork: __kCFHTTPServerRequestMethod
__ CFNetwork: __kCFHTTPServerRequestURL
__ CFNetwork: __kCFHTTPServerRequireClientCertificate
__ CFNetwork: __kCFHTTPServerSSLSettings
__ CFNetwork: __kCFHTTPServerServicePort
__ CFNetwork: __kCFHTTPServerWatchdogTimeout
__ CFNetwork: _kCFHTTPVersion1_0
__ CFNetwork: _kCFHTTPVersion1_1
__ CFNetwork: _kCFHTTPVersion2_0
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFHash
__ CoreFoundation: _CFHashBytes
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFReadStreamClose
__ CoreFoundation: _CFReadStreamGetStatus
__ CoreFoundation: _CFReadStreamHasBytesAvailable
__ CoreFoundation: _CFReadStreamOpen
__ CoreFoundation: _CFReadStreamRead
__ CoreFoundation: _CFReadStreamSetClient
__ CoreFoundation: _CFReadStreamSetDispatchQueue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreUtils: _HardwareAddressToCString
__ CoreUtils: _TextToHardwareAddress
__ CoreUtils: _cced25519_make_key_pair_compat
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSHomeDirectory
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFormatter
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSInvocationOperation
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_METACLASS_$_NSFormatter
__ Foundation: _OBJC_METACLASS_$_NSNumber
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: __NSFullMethodName
__ IOKit: _IOIteratorNext
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortGetRunLoopSource
__ IOKit: _IOObjectRelease
__ IOKit: _IOPMAssertionCreateWithDescription
__ IOKit: _IOPMAssertionRelease
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IOServiceAddInterestNotification
__ IOKit: _IOServiceAddMatchingNotification
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMasterPortDefault
__ MobileWiFi: _WiFiDeviceClientCopyCurrentNetwork
__ MobileWiFi: _WiFiDeviceClientRegisterExtendedLinkCallback
__ MobileWiFi: _WiFiManagerClientCopyDevices
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientGetWoWState
__ MobileWiFi: _WiFiManagerClientRegisterDeviceAttachmentCallback
__ MobileWiFi: _WiFiManagerClientRegisterWowStateChangedCallback
__ MobileWiFi: _WiFiManagerClientScheduleWithRunLoop
__ MobileWiFi: _WiFiManagerClientSetWoWState
__ MobileWiFi: _WiFiNetworkGetSSID
__ PowerLog: _PLLogRegisteredEvent
__ Security: _SecRandomCopyBytes
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTaskCreateWithAuditToken
__ Security: _kSecRandomDefault
__ SystemConfiguration: _SCDynamicStoreCopyLocalHostName
__ SystemConfiguration: _SCDynamicStoreCreate
__ SystemConfiguration: _SCDynamicStoreKeyCreateHostNames
__ SystemConfiguration: _SCDynamicStoreSetDispatchQueue
__ SystemConfiguration: _SCDynamicStoreSetNotificationKeys
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilitySetDispatchQueue
__ libMobileGestalt.dylib: _MGCancelNotifications
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGCopyMultipleAnswers
__ libMobileGestalt.dylib: _MGRegisterForUpdates
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: _CC_SHA512
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_activity_none
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _cc_clear
__ libSystem.B.dylib: _csops_audittoken
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_block_create_with_voucher
__ libSystem.B.dylib: _dispatch_block_create_with_voucher_and_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _inet_ntoa
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _os_activity_apply
__ libSystem.B.dylib: _os_activity_get_identifier
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_transaction_needs_more_time
__ libSystem.B.dylib: _os_unfair_lock_assert_not_owner
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_unfair_recursive_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_recursive_lock_unlock
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _voucher_adopt
__ libSystem.B.dylib: _voucher_copy
__ libSystem.B.dylib: _voucher_copy_without_importance
__ libSystem.B.dylib: dyld_stub_binder
__ libbsm.0.dylib: _audit_token_to_pid
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_isEqual
__HMFLocationAuthorizationMarkOperation : __HMFLocationManagerOperation <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[__HMFLocationAuthorizationMarkOperation logCategory]

  // instance methods
  -[__HMFLocationAuthorizationMarkOperation main]


HMFOSTransaction : HMFObject
 @property  NSObject<OS_os_transaction> *transaction
 @property  double creationTime

  // instance methods
  -[HMFOSTransaction init]
  -[HMFOSTransaction dealloc]
  -[HMFOSTransaction .cxx_destruct]
  -[HMFOSTransaction initWithName:]
  -[HMFOSTransaction transaction]
  -[HMFOSTransaction creationTime]


HMFMemoryAssertion : HMFAssertion
 @property  NSObject<OS_os_transaction> *internal

  // instance methods
  -[HMFMemoryAssertion invalidate]
  -[HMFMemoryAssertion .cxx_destruct]
  -[HMFMemoryAssertion initWithName:]
  -[HMFMemoryAssertion internal]
  -[HMFMemoryAssertion setInternal:]
  -[HMFMemoryAssertion mark]


HMFTimer : HMFObject
 @property  NSObject<OS_dispatch_source> *timer
 @property  unsigned long options
 @property  BOOL running
 @property  <HMFTimerDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  double timeInterval
 @property  unsigned long leeway
 @property  NSDate *fireDate

  // class methods
  +[HMFTimer shortDescription]

  // instance methods
  -[HMFTimer init]
  -[HMFTimer dealloc]
  -[HMFTimer options]
  -[HMFTimer timeInterval]
  -[HMFTimer fireDate]
  -[HMFTimer setFireDate:]
  -[HMFTimer fire]
  -[HMFTimer delegate]
  -[HMFTimer setDelegate:]
  -[HMFTimer .cxx_destruct]
  -[HMFTimer resume]
  -[HMFTimer isRunning]
  -[HMFTimer suspend]
  -[HMFTimer timer]
  -[HMFTimer setDelegateQueue:]
  -[HMFTimer delegateQueue]
  -[HMFTimer setRunning:]
  -[HMFTimer leeway]
  -[HMFTimer __fire]
  -[HMFTimer initWithTimeInterval:options:]
  -[HMFTimer attributeDescriptions]
  -[HMFTimer kick]
  -[HMFTimer __handleExpiration]


HMFExponentialBackoffTimer : HMFTimer
 @property  BOOL increasing
 @property  double minimumTimeInterval
 @property  double maximumTimeInterval
 @property  long long exponentialFactor

  // instance methods
  -[HMFExponentialBackoffTimer timeInterval]
  -[HMFExponentialBackoffTimer reset]
  -[HMFExponentialBackoffTimer __fire]
  -[HMFExponentialBackoffTimer initWithTimeInterval:options:]
  -[HMFExponentialBackoffTimer initWithMinimumTimeInterval:maximumTimeInterval:exponentialFactor:options:]
  -[HMFExponentialBackoffTimer isIncreasing]
  -[HMFExponentialBackoffTimer exponentialFactor]
  -[HMFExponentialBackoffTimer maximumTimeInterval]
  -[HMFExponentialBackoffTimer minimumTimeInterval]


HMFMessagePolicy : HMFObject <NSCopying>
  // instance methods
  -[HMFMessagePolicy copyWithZone:]


HMFPrivateObjectFormatter : NSFormatter /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <HMFPrivateDescriptionFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFPrivateObjectFormatter defaultFormatter]

  // instance methods
  -[HMFPrivateObjectFormatter stringForObjectValue:]
  -[HMFPrivateObjectFormatter privateStringForObjectValue:]


HMFPairingIdentity : HMFObject <NSSecureCoding, NSCopying>
 @property  NSString *identifier
 @property  HMFPairingKey *publicKey
 @property  HMFPairingKey *privateKey
 @property  HMFPairingIdentity *publicPairingIdentity

  // class methods
  +[HMFPairingIdentity supportsSecureCoding]
  +[HMFPairingIdentity pairingIdentity]

  // instance methods
  -[HMFPairingIdentity init]
  -[HMFPairingIdentity isEqual:]
  -[HMFPairingIdentity copyWithZone:]
  -[HMFPairingIdentity encodeWithCoder:]
  -[HMFPairingIdentity initWithCoder:]
  -[HMFPairingIdentity .cxx_destruct]
  -[HMFPairingIdentity identifier]
  -[HMFPairingIdentity publicKey]
  -[HMFPairingIdentity shortDescription]
  -[HMFPairingIdentity privateKey]
  -[HMFPairingIdentity attributeDescriptions]
  -[HMFPairingIdentity initWithIdentifier:publicKey:privateKey:]
  -[HMFPairingIdentity publicPairingIdentity]


HMFPairingKey : HMFObject <NSSecureCoding, NSCopying>
 @property  NSData *data

  // class methods
  +[HMFPairingKey load]
  +[HMFPairingKey supportsSecureCoding]

  // instance methods
  -[HMFPairingKey init]
  -[HMFPairingKey isEqual:]
  -[HMFPairingKey copyWithZone:]
  -[HMFPairingKey encodeWithCoder:]
  -[HMFPairingKey initWithCoder:]
  -[HMFPairingKey .cxx_destruct]
  -[HMFPairingKey data]
  -[HMFPairingKey attributeDescriptions]
  -[HMFPairingKey initWithPairingKeyData:]


_HMFCFHTTPMessage : HMFObject
 @property  ^{__CFHTTPMessage=} message
 @property  NSDictionary *headerFields
 @property  NSData *body

  // class methods
  +[_HMFCFHTTPMessage dateFormatter]
  +[_HMFCFHTTPMessage requestWithMethod:url:protocolVersion:]
  +[_HMFCFHTTPMessage responseWithStatusCode:statusDescription:protocolVersion:]

  // instance methods
  -[_HMFCFHTTPMessage init]
  -[_HMFCFHTTPMessage dealloc]
  -[_HMFCFHTTPMessage date]
  -[_HMFCFHTTPMessage contentType]
  -[_HMFCFHTTPMessage setContentType:]
  -[_HMFCFHTTPMessage message]
  -[_HMFCFHTTPMessage setDate:]
  -[_HMFCFHTTPMessage setBody:]
  -[_HMFCFHTTPMessage body]
  -[_HMFCFHTTPMessage headerFields]
  -[_HMFCFHTTPMessage contentLength]
  -[_HMFCFHTTPMessage initWithMessageRef:]
  -[_HMFCFHTTPMessage valueForHeaderField:]
  -[_HMFCFHTTPMessage setValue:forHeaderField:]
  -[_HMFCFHTTPMessage setContentLength:]


HMFHTTPRequestHandler : HMFObject
 @property  NSPredicate *methodPredicate
 @property  NSPredicate *URLPredicate
 @property  @? matchBlock
 @property  @? requestBlock

  // class methods
  +[HMFHTTPRequestHandler _isValidMethodPrediate:]
  +[HMFHTTPRequestHandler _isValidURLPredicate:]

  // instance methods
  -[HMFHTTPRequestHandler init]
  -[HMFHTTPRequestHandler .cxx_destruct]
  -[HMFHTTPRequestHandler initWithMethodPredicate:URLPredicate:matchBlock:]
  -[HMFHTTPRequestHandler methodPredicate]
  -[HMFHTTPRequestHandler URLPredicate]
  -[HMFHTTPRequestHandler matchBlock]
  -[HMFHTTPRequestHandler requestBlock]
  -[HMFHTTPRequestHandler setRequestBlock:]


__HMFSoftwareVersionDataSource : HMFObject <HMFSystemInfoSoftwareVersionDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMFSoftwareVersion *softwareVersion

  // instance methods
  -[__HMFSoftwareVersionDataSource softwareVersion]


HMFNetMonitor : HMFObject <HMFLogging>
 @property  BOOL reachable
 @property  <HMFNetMonitorDelegate> *delegate
 @property  HMFNetAddress *netAddress
 @property  unsigned long reachabilityPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFNetMonitor logCategory]

  // instance methods
  -[HMFNetMonitor init]
  -[HMFNetMonitor delegate]
  -[HMFNetMonitor setDelegate:]
  -[HMFNetMonitor .cxx_destruct]
  -[HMFNetMonitor initWithNetAddress:]
  -[HMFNetMonitor initWithNetService:]
  -[HMFNetMonitor isReachable]
  -[HMFNetMonitor setReachable:]
  -[HMFNetMonitor reachabilityPath]
  -[HMFNetMonitor netAddress]


_HMFObjectObserverInternal : HMFObject
 @property  @? deallocationBlock

  // instance methods
  -[_HMFObjectObserverInternal dealloc]
  -[_HMFObjectObserverInternal .cxx_destruct]
  -[_HMFObjectObserverInternal setDeallocationBlock:]
  -[_HMFObjectObserverInternal deallocationBlock]


HMFObjectObserver : HMFObject
 @property  NSUUID *identifier
 @property  unsigned long cachedHash
 @property  id observedObject
 @property  @? deallocationBlock

  // instance methods
  -[HMFObjectObserver init]
  -[HMFObjectObserver dealloc]
  -[HMFObjectObserver isEqual:]
  -[HMFObjectObserver .cxx_destruct]
  -[HMFObjectObserver identifier]
  -[HMFObjectObserver setDeallocationBlock:]
  -[HMFObjectObserver deallocationBlock]
  -[HMFObjectObserver _stopObserving]
  -[HMFObjectObserver _startObserving]
  -[HMFObjectObserver cachedHash]
  -[HMFObjectObserver observedObject]
  -[HMFObjectObserver observerKey]
  -[HMFObjectObserver initWithObservedObject:]


HMFDumpCategory : NSObject /usr/lib/libSystem.B.dylib <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFDumpCategory logCategory]


HMFWiFiManager : HMFObject <HMFWiFiManagerDataSourceDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMFWiFiManagerDataSource> *dataSource
 @property  BOOL shouldAssertWoW
 @property  NSString *currentNetworkSSID
 @property  HMFMACAddress *MACAddress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFWiFiManager sharedManager]

  // instance methods
  -[HMFWiFiManager init]
  -[HMFWiFiManager .cxx_destruct]
  -[HMFWiFiManager workQueue]
  -[HMFWiFiManager dataSource]
  -[HMFWiFiManager initWithWorkQueue:dataSource:]
  -[HMFWiFiManager currentNetworkDidChangeForDataSource:]
  -[HMFWiFiManager shouldAssertWoW]
  -[HMFWiFiManager setShouldAssertWoW:]
  -[HMFWiFiManager currentNetworkSSID]
  -[HMFWiFiManager setCurrentNetworkSSID:]
  -[HMFWiFiManager dataSource:didChangeWoWState:]
  -[HMFWiFiManager dataSource:didChangeLinkAvailability:]
  -[HMFWiFiManager takeWoWAssertion]
  -[HMFWiFiManager releaseWoWAssertion]
  -[HMFWiFiManager MACAddress]


HMFLocationAuthorization : HMFObject <CLLocationManagerDelegate, HMFLogging>
 @property  NSString *bundleIdentifier
 @property  NSBundle *bundle
 @property  CLLocationManager *internal
 @property  int status
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL authorized
 @property  BOOL monitoring
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFLocationAuthorization initialize]
  +[HMFLocationAuthorization automaticallyNotifiesObserversForKey:]
  +[HMFLocationAuthorization logCategory]
  +[HMFLocationAuthorization sharedAuthorization]

  // instance methods
  -[HMFLocationAuthorization init]
  -[HMFLocationAuthorization dealloc]
  -[HMFLocationAuthorization setQueue:]
  -[HMFLocationAuthorization queue]
  -[HMFLocationAuthorization .cxx_destruct]
  -[HMFLocationAuthorization bundleIdentifier]
  -[HMFLocationAuthorization status]
  -[HMFLocationAuthorization initWithBundle:]
  -[HMFLocationAuthorization bundle]
  -[HMFLocationAuthorization initWithBundleIdentifier:]
  -[HMFLocationAuthorization internal]
  -[HMFLocationAuthorization locationManager:didChangeAuthorizationStatus:]
  -[HMFLocationAuthorization isMonitoring]
  -[HMFLocationAuthorization logIdentifier]
  -[HMFLocationAuthorization mark]
  -[HMFLocationAuthorization attributeDescriptions]
  -[HMFLocationAuthorization isAuthorized]
  -[HMFLocationAuthorization registerObserver:]
  -[HMFLocationAuthorization unregisterObserver:]
  -[HMFLocationAuthorization requestAuthorization:completionHandler:]


__HMFIOKitDataSource : HMFObject <HMFSystemInfoSerialNumberDataSource, HMFSystemInfoProductInfoDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *serialNumber
 @property  long long productPlatform
 @property  long long productClass
 @property  long long productVariant
 @property  NSString *modelIdentifier

  // instance methods
  -[__HMFIOKitDataSource modelIdentifier]
  -[__HMFIOKitDataSource serialNumber]
  -[__HMFIOKitDataSource productClass]
  -[__HMFIOKitDataSource productPlatform]
  -[__HMFIOKitDataSource productVariant]


HMFOperationBudget : HMFObject <HMFLogging, HMFTimerDelegate>
 @property  unsigned long limit
 @property  {_HMFRate=Qd} rate
 @property  unsigned long value
 @property  BOOL full
 @property  BOOL empty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFOperationBudget automaticallyNotifiesObserversForKey:]
  +[HMFOperationBudget logCategory]

  // instance methods
  -[HMFOperationBudget init]
  -[HMFOperationBudget isEmpty]
  -[HMFOperationBudget .cxx_destruct]
  -[HMFOperationBudget value]
  -[HMFOperationBudget reset]
  -[HMFOperationBudget decrement]
  -[HMFOperationBudget limit]
  -[HMFOperationBudget rate]
  -[HMFOperationBudget timerDidFire:]
  -[HMFOperationBudget decrementByCount:]
  -[HMFOperationBudget isFull]
  -[HMFOperationBudget initWithLimit:rate:]


HMFVersion : HMFObject <HMFLocalizable, NSCopying, NSSecureCoding>
 @property  unsigned long majorVersion
 @property  unsigned long minorVersion
 @property  unsigned long updateVersion
 @property  NSString *versionString
 @property  NSString *localizedDescription

  // class methods
  +[HMFVersion supportsSecureCoding]

  // instance methods
  -[HMFVersion init]
  -[HMFVersion isEqual:]
  -[HMFVersion copyWithZone:]
  -[HMFVersion localizedDescription]
  -[HMFVersion compare:]
  -[HMFVersion encodeWithCoder:]
  -[HMFVersion initWithCoder:]
  -[HMFVersion versionString]
  -[HMFVersion majorVersion]
  -[HMFVersion minorVersion]
  -[HMFVersion updateVersion]
  -[HMFVersion initWithMajorVersion:minorVersion:updateVersion:]
  -[HMFVersion isEqualToVersion:]
  -[HMFVersion initWithVersionString:]
  -[HMFVersion isAtLeastVersion:]
  -[HMFVersion isGreaterThanVersion:]


HMFSoftwareVersion : HMFVersion
 @property  NSString *buildVersion

  // class methods
  +[HMFSoftwareVersion supportsSecureCoding]
  +[HMFSoftwareVersion versionFromOperatingSystemVersion:]

  // instance methods
  -[HMFSoftwareVersion localizedDescription]
  -[HMFSoftwareVersion compare:]
  -[HMFSoftwareVersion encodeWithCoder:]
  -[HMFSoftwareVersion initWithCoder:]
  -[HMFSoftwareVersion .cxx_destruct]
  -[HMFSoftwareVersion operatingSystemVersion]
  -[HMFSoftwareVersion versionString]
  -[HMFSoftwareVersion buildVersion]
  -[HMFSoftwareVersion initWithMajorVersion:minorVersion:updateVersion:buildVersion:]
  -[HMFSoftwareVersion initWithMajorVersion:minorVersion:updateVersion:]
  -[HMFSoftwareVersion initWithVersionString:]


HMFPowerAssertion : HMFAssertion
 @property  unsigned int identifier

  // instance methods
  -[HMFPowerAssertion dealloc]
  -[HMFPowerAssertion invalidate]
  -[HMFPowerAssertion initWithName:]
  -[HMFPowerAssertion identifier]
  -[HMFPowerAssertion setIdentifier:]


HMFHardwareAddress : HMFObject <HMFObject, NSCopying, NSSecureCoding>
 @property  unsigned long length
 @property  NSData *data
 @property  NSString *formattedString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMFHardwareAddress supportsSecureCoding]

  // instance methods
  -[HMFHardwareAddress length]
  -[HMFHardwareAddress isEqual:]
  -[HMFHardwareAddress copyWithZone:]
  -[HMFHardwareAddress encodeWithCoder:]
  -[HMFHardwareAddress initWithCoder:]
  -[HMFHardwareAddress .cxx_destruct]
  -[HMFHardwareAddress data]
  -[HMFHardwareAddress propertyDescription]
  -[HMFHardwareAddress formattedString]
  -[HMFHardwareAddress initWithAddressData:]
  -[HMFHardwareAddress isEqualToAddress:]
  -[HMFHardwareAddress initWithAddressString:length:]


HMFMACAddress : HMFHardwareAddress <NSCopying, NSSecureCoding>
  // instance methods
  -[HMFMACAddress initWithMACAddressString:]
  -[HMFMACAddress initWithAddressData:]
  -[HMFMACAddress initWithAddressString:length:]


HMFMessageTransport : HMFObject
 @property  <HMFMessageTransportDelegate> *delegate

  // instance methods
  -[HMFMessageTransport delegate]
  -[HMFMessageTransport setDelegate:]
  -[HMFMessageTransport .cxx_destruct]
  -[HMFMessageTransport sendMessage:completionHandler:]


HMFNetServiceBrowser : HMFObject <NSNetServiceBrowserDelegate>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSNetServiceBrowser *internal
 @property  BOOL browsing
 @property  @? browseBlock
 @property  <HMFNetServiceBrowserDelegate> *delegate
 @property  NSString *domain
 @property  NSString *serviceType
 @property  BOOL shouldCache
 @property  NSArray *cachedNetServices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFNetServiceBrowser shortDescription]
  +[HMFNetServiceBrowser logCategory]

  // instance methods
  -[HMFNetServiceBrowser init]
  -[HMFNetServiceBrowser dealloc]
  -[HMFNetServiceBrowser domain]
  -[HMFNetServiceBrowser delegate]
  -[HMFNetServiceBrowser setDelegate:]
  -[HMFNetServiceBrowser .cxx_destruct]
  -[HMFNetServiceBrowser serviceType]
  -[HMFNetServiceBrowser internal]
  -[HMFNetServiceBrowser shortDescription]
  -[HMFNetServiceBrowser netServiceBrowser:didNotSearch:]
  -[HMFNetServiceBrowser netServiceBrowserDidStopSearch:]
  -[HMFNetServiceBrowser netServiceBrowser:didRemoveService:moreComing:]
  -[HMFNetServiceBrowser netServiceBrowser:didRemoveDomain:moreComing:]
  -[HMFNetServiceBrowser netServiceBrowser:didFindService:moreComing:]
  -[HMFNetServiceBrowser netServiceBrowserWillSearch:]
  -[HMFNetServiceBrowser shouldCache]
  -[HMFNetServiceBrowser clientQueue]
  -[HMFNetServiceBrowser isBrowsing]
  -[HMFNetServiceBrowser setBrowsing:]
  -[HMFNetServiceBrowser logIdentifier]
  -[HMFNetServiceBrowser descriptionWithPointer:]
  -[HMFNetServiceBrowser setBrowseBlock:]
  -[HMFNetServiceBrowser _stopBrowsingWithError:]
  -[HMFNetServiceBrowser browseBlock]
  -[HMFNetServiceBrowser addNetServiceToCache:]
  -[HMFNetServiceBrowser initWithDomain:serviceType:]
  -[HMFNetServiceBrowser setShouldCache:]
  -[HMFNetServiceBrowser cachedNetServices]
  -[HMFNetServiceBrowser startBrowsingWithCompletionHandler:]
  -[HMFNetServiceBrowser stopBrowsing]


HMFPowerLogger : HMFObject
  // class methods
  +[HMFPowerLogger sharedPowerLogger]

  // instance methods
  -[HMFPowerLogger linkTypeDescription:]
  -[HMFPowerLogger reportConnection:linkType:]
  -[HMFPowerLogger reportIncomingAdvertisementChange:]
  -[HMFPowerLogger reportIncomingIPEvent:]
  -[HMFPowerLogger reportIncomingCloudPush:]
  -[HMFPowerLogger reportIncomingIDSPush:fromToken:]
  -[HMFPowerLogger reportIncomingLoxyMessage:]


HMFMemoryMonitor : HMFObject
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSObject<OS_dispatch_source> *memoryPressure
 @property  BOOL monitoring
 @property  long long memoryState

  // class methods
  +[HMFMemoryMonitor memoryMonitor]

  // instance methods
  -[HMFMemoryMonitor init]
  -[HMFMemoryMonitor dealloc]
  -[HMFMemoryMonitor .cxx_destruct]
  -[HMFMemoryMonitor stop]
  -[HMFMemoryMonitor start]
  -[HMFMemoryMonitor clientQueue]
  -[HMFMemoryMonitor isMonitoring]
  -[HMFMemoryMonitor memoryPressure]
  -[HMFMemoryMonitor setMonitoring:]
  -[HMFMemoryMonitor memoryState]


_HMFCFHTTPServer : HMFObject <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  ^{_CFHTTPServer=} internal
 @property  NSMutableArray *connections
 @property  <_HMFCFHTTPServerDelegate> *delegate
 @property  unsigned long port
 @property  double connectionIdleTimeout
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HMFCFHTTPServer logCategory]

  // instance methods
  -[_HMFCFHTTPServer init]
  -[_HMFCFHTTPServer dealloc]
  -[_HMFCFHTTPServer invalidate]
  -[_HMFCFHTTPServer isValid]
  -[_HMFCFHTTPServer delegate]
  -[_HMFCFHTTPServer setDelegate:]
  -[_HMFCFHTTPServer port]
  -[_HMFCFHTTPServer .cxx_destruct]
  -[_HMFCFHTTPServer internal]
  -[_HMFCFHTTPServer watchdogTimeout]
  -[_HMFCFHTTPServer clientQueue]
  -[_HMFCFHTTPServer connections]
  -[_HMFCFHTTPServer logIdentifier]
  -[_HMFCFHTTPServer initWithPort:options:]
  -[_HMFCFHTTPServer connectionIdleTimeout]
  -[_HMFCFHTTPServer setConnectionIdleTimeout:]
  -[_HMFCFHTTPServer setWatchdogTimeout:]


HMFStringIndentation : HMFObject
 @property  unsigned long width
 @property  unsigned long level

  // class methods
  +[HMFStringIndentation indentation]
  +[HMFStringIndentation indentationWithWidth:]

  // instance methods
  -[HMFStringIndentation init]
  -[HMFStringIndentation level]
  -[HMFStringIndentation initWithWidth:]
  -[HMFStringIndentation width]
  -[HMFStringIndentation indentationByLevels:]


HMUIndent : HMFStringIndentation
  // class methods
  +[HMUIndent level]
  +[HMUIndent indentWithLevel:]

  // instance methods
  -[HMUIndent indentByFactor:]


__HMFActivityManager : HMFObject
  // instance methods
  -[__HMFActivityManager init]
  -[__HMFActivityManager .cxx_destruct]


HMFActivity : HMFObject <HMFLogging, HMFObject>
 @property  NSArray *internalAssertions
 @property  NSDate *startDate
 @property  NSUUID *identifier
 @property  HMFActivity *parent
 @property  NSString *name
 @property  unsigned long assertions
 @property  unsigned long options
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMFActivity initialize]
  +[HMFActivity bundleIdentifier]
  +[HMFActivity currentActivity]
  +[HMFActivity shortDescription]
  +[HMFActivity logCategory]
  +[HMFActivity activityWithName:parent:options:block:]
  +[HMFActivity activityWithName:block:]
  +[HMFActivity activityWithName:parent:block:]
  +[HMFActivity activityWithName:parent:assertions:block:]

  // instance methods
  -[HMFActivity init]
  -[HMFActivity dealloc]
  -[HMFActivity name]
  -[HMFActivity invalidate]
  -[HMFActivity parent]
  -[HMFActivity options]
  -[HMFActivity isValid]
  -[HMFActivity .cxx_destruct]
  -[HMFActivity initWithName:]
  -[HMFActivity identifier]
  -[HMFActivity startDate]
  -[HMFActivity performBlock:]
  -[HMFActivity end]
  -[HMFActivity begin]
  -[HMFActivity shortDescription]
  -[HMFActivity assertions]
  -[HMFActivity initWithName:parent:]
  -[HMFActivity logIdentifier]
  -[HMFActivity mark]
  -[HMFActivity attributeDescriptions]
  -[HMFActivity initWithName:parent:options:]
  -[HMFActivity markWithFormat:]
  -[HMFActivity markWithReason:]
  -[HMFActivity internalAssertions]
  -[HMFActivity blockWithBlock:]
  -[HMFActivity initWithName:parent:assertions:]
  -[HMFActivity blockWithQualityOfService:block:]


__HMFThreadContext : HMFObject
 @property  NSThread *thread
 @property  unsigned long count
 @property  NSObject<OS_voucher> *voucher
 @property  BOOL shouldRestoreVoucher

  // class methods
  +[__HMFThreadContext currentContext]

  // instance methods
  -[__HMFThreadContext init]
  -[__HMFThreadContext isEqual:]
  -[__HMFThreadContext count]
  -[__HMFThreadContext .cxx_destruct]
  -[__HMFThreadContext setCount:]
  -[__HMFThreadContext voucher]
  -[__HMFThreadContext setVoucher:]
  -[__HMFThreadContext thread]
  -[__HMFThreadContext __init]
  -[__HMFThreadContext shouldRestoreVoucher]
  -[__HMFThreadContext setShouldRestoreVoucher:]


HMFHTTPResponseInternal : HMFObject <NSCopying>
 @property  long long statusCode
 @property  NSDictionary *headerFields
 @property  NSData *body
 @property  HMFActivity *activity

  // instance methods
  -[HMFHTTPResponseInternal init]
  -[HMFHTTPResponseInternal copyWithZone:]
  -[HMFHTTPResponseInternal .cxx_destruct]
  -[HMFHTTPResponseInternal statusCode]
  -[HMFHTTPResponseInternal activity]
  -[HMFHTTPResponseInternal setActivity:]
  -[HMFHTTPResponseInternal setBody:]
  -[HMFHTTPResponseInternal body]
  -[HMFHTTPResponseInternal headerFields]
  -[HMFHTTPResponseInternal initWithStatusCode:headerFields:body:]
  -[HMFHTTPResponseInternal setHeaderValue:forHeaderKey:]
  -[HMFHTTPResponseInternal setHeaderFields:]


HMFHTTPResponse : HMFObject <NSCopying, NSMutableCopying>
 @property  HMFHTTPResponseInternal *internal
 @property  HMFHTTPRequest *request
 @property  long long statusCode
 @property  NSDictionary *headerFields
 @property  NSData *body

  // instance methods
  -[HMFHTTPResponse init]
  -[HMFHTTPResponse copyWithZone:]
  -[HMFHTTPResponse mutableCopyWithZone:]
  -[HMFHTTPResponse .cxx_destruct]
  -[HMFHTTPResponse statusCode]
  -[HMFHTTPResponse request]
  -[HMFHTTPResponse internal]
  -[HMFHTTPResponse body]
  -[HMFHTTPResponse headerFields]
  -[HMFHTTPResponse attributeDescriptions]
  -[HMFHTTPResponse initWithRequest:internalResponse:]


HMFMutableHTTPResponse : HMFHTTPResponse
 @property  NSData *body

  // instance methods
  -[HMFMutableHTTPResponse copyWithZone:]
  -[HMFMutableHTTPResponse setBody:]
  -[HMFMutableHTTPResponse setHeaderValue:forHeaderKey:]


__HMFLocationAuthorizationRequest : __HMFLocationManagerOperation <HMFLogging>
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[__HMFLocationAuthorizationRequest logCategory]

  // instance methods
  -[__HMFLocationAuthorizationRequest dealloc]
  -[__HMFLocationAuthorizationRequest type]
  -[__HMFLocationAuthorizationRequest main]
  -[__HMFLocationAuthorizationRequest observeValueForKeyPath:ofObject:change:context:]
  -[__HMFLocationAuthorizationRequest initWithType:]
  -[__HMFLocationAuthorizationRequest initWithTimeout:]
  -[__HMFLocationAuthorizationRequest initWithType:authorization:]
  -[__HMFLocationAuthorizationRequest initWithAuthorization:]


HMFAssertion : HMFObject <HMFLogging>
 @property  BOOL valid
 @property  NSString *name
 @property  NSString *uniqueDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFAssertion bundleIdentifier]
  +[HMFAssertion logCategory]

  // instance methods
  -[HMFAssertion init]
  -[HMFAssertion dealloc]
  -[HMFAssertion name]
  -[HMFAssertion invalidate]
  -[HMFAssertion isValid]
  -[HMFAssertion .cxx_destruct]
  -[HMFAssertion initWithName:]
  -[HMFAssertion setValid:]
  -[HMFAssertion logIdentifier]
  -[HMFAssertion uniqueDescription]
  -[HMFAssertion mark]


HMFMessageDispatcher : HMFObject <HMFLogging, HMFTimerDelegate, HMFMessageTransportDelegate>
 @property  NSMutableDictionary *destinationHandlerIndexes
 @property  NSMutableDictionary *nameHandlerIndexes
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageTransport *transport
 @property  NSSet *filterClasses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFMessageDispatcher logCategory]

  // instance methods
  -[HMFMessageDispatcher init]
  -[HMFMessageDispatcher .cxx_destruct]
  -[HMFMessageDispatcher sendMessage:]
  -[HMFMessageDispatcher workQueue]
  -[HMFMessageDispatcher transport]
  -[HMFMessageDispatcher sendMessage:completionHandler:]
  -[HMFMessageDispatcher timerDidFire:]
  -[HMFMessageDispatcher registerForMessage:receiver:policies:selector:]
  -[HMFMessageDispatcher registerForMessage:receiver:policies:messageHandler:]
  -[HMFMessageDispatcher handlersForMessage:]
  -[HMFMessageDispatcher dispatchMessage:]
  -[HMFMessageDispatcher messageTransport:didReceiveMessage:]
  -[HMFMessageDispatcher initWithTransport:]
  -[HMFMessageDispatcher filterClasses]
  -[HMFMessageDispatcher setFilterClasses:]
  -[HMFMessageDispatcher registerForMessage:receiver:selector:]
  -[HMFMessageDispatcher registerForMessage:receiver:messageHandler:]
  -[HMFMessageDispatcher deregisterForMessage:receiver:]
  -[HMFMessageDispatcher deregisterReceiver:]
  -[HMFMessageDispatcher destinationHandlerIndexes]
  -[HMFMessageDispatcher nameHandlerIndexes]
  -[HMFMessageDispatcher sendMessage:target:responseQueue:responseHandler:completionHandler:]
  -[HMFMessageDispatcher dispatchMessage:target:]
  -[HMFMessageDispatcher sendMessage:target:]
  -[HMFMessageDispatcher sendMessage:target:responseQueue:responseHandler:]
  -[HMFMessageDispatcher sendMessage:target:andInvokeCompletionHandler:]


_HMFCFHTTPServerConnection : HMFObject <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSMutableArray *pendingRequests
 @property  NSMutableArray *pendingRespones
 @property  ^{_CFHTTPServerConnection=} internal
 @property  <_HMFCFHTTPServerConnectionDelegate> *delegate
 @property  BOOL valid
 @property  HMFNetAddress *address
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HMFCFHTTPServerConnection logCategory]

  // instance methods
  -[_HMFCFHTTPServerConnection init]
  -[_HMFCFHTTPServerConnection dealloc]
  -[_HMFCFHTTPServerConnection isEqual:]
  -[_HMFCFHTTPServerConnection invalidate]
  -[_HMFCFHTTPServerConnection isValid]
  -[_HMFCFHTTPServerConnection open]
  -[_HMFCFHTTPServerConnection close]
  -[_HMFCFHTTPServerConnection delegate]
  -[_HMFCFHTTPServerConnection setDelegate:]
  -[_HMFCFHTTPServerConnection .cxx_destruct]
  -[_HMFCFHTTPServerConnection address]
  -[_HMFCFHTTPServerConnection internal]
  -[_HMFCFHTTPServerConnection sendResponse:]
  -[_HMFCFHTTPServerConnection clientQueue]
  -[_HMFCFHTTPServerConnection pendingRequests]
  -[_HMFCFHTTPServerConnection logIdentifier]
  -[_HMFCFHTTPServerConnection initWithConnectionRef:]
  -[_HMFCFHTTPServerConnection _handleCompletedReceivedRequest:error:]
  -[_HMFCFHTTPServerConnection handleRequest:bodyReadStream:eventType:]
  -[_HMFCFHTTPServerConnection _stopReadBody:]
  -[_HMFCFHTTPServerConnection _sendStatusCode:forRequest:]
  -[_HMFCFHTTPServerConnection _sendStatusCode:forRequest:bodyData:]
  -[_HMFCFHTTPServerConnection pendingRespones]
  -[_HMFCFHTTPServerConnection _handleReceivedRequestRef:]
  -[_HMFCFHTTPServerConnection _handleCompletedResponse:error:]


HMFPowerManager : HMFObject
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  BOOL running
 @property  ^{IONotificationPort=} notificationPort
 @property  unsigned int interestNotification
 @property  BOOL hasBattery
 @property  long long batteryState
 @property  float batteryLevel

  // class methods
  +[HMFPowerManager sharedManager]

  // instance methods
  -[HMFPowerManager init]
  -[HMFPowerManager dealloc]
  -[HMFPowerManager .cxx_destruct]
  -[HMFPowerManager stop]
  -[HMFPowerManager start]
  -[HMFPowerManager isRunning]
  -[HMFPowerManager batteryState]
  -[HMFPowerManager batteryLevel]
  -[HMFPowerManager setRunning:]
  -[HMFPowerManager clientQueue]
  -[HMFPowerManager _deregisterForPowerSourceNotifications:]
  -[HMFPowerManager _registerForPowerSourceNotifications]
  -[HMFPowerManager notificationPort]
  -[HMFPowerManager interestNotification]
  -[HMFPowerManager updateBatteryState:]
  -[HMFPowerManager hasBattery]


_HMFNetManagerWoWAssertion : HMFObject
  // instance methods
  -[_HMFNetManagerWoWAssertion init]
  -[_HMFNetManagerWoWAssertion dealloc]


HMFNetManager : HMFObject
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  _HMFNetManagerWoWAssertion *wowAssertion

  // class methods
  +[HMFNetManager initialize]
  +[HMFNetManager sharedManager]

  // instance methods
  -[HMFNetManager init]
  -[HMFNetManager .cxx_destruct]
  -[HMFNetManager clientQueue]
  -[HMFNetManager deregisterWoWAssertionForObject:]
  -[HMFNetManager wowAssertion]
  -[HMFNetManager setWowAssertion:]
  -[HMFNetManager deregisterObject:]
  -[HMFNetManager registerWoWAssertionForObject:]


__HMFMobileGesaltDataSource : HMFObject <HMFSystemInfoNameDataSource, HMFSystemInfoMarketingInformationDataSource, HMFSystemInfoSerialNumberDataSource, HMFSystemInfoProductInfoDataSource, HMFSystemInfoSoftwareVersionDataSource, HMFSystemInfoWiFiDataSource, HMFSystemInfoBluetoothLEDataSource>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  ^{MGNotificationTokenStruct=} notificationToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HMFSystemInfoNameDataSourceDelegate> *delegate
 @property  NSString *name
 @property  NSString *model
 @property  NSString *regionInfo
 @property  NSString *serialNumber
 @property  long long productPlatform
 @property  long long productClass
 @property  long long productVariant
 @property  NSString *modelIdentifier
 @property  HMFSoftwareVersion *softwareVersion
 @property  HMFMACAddress *WiFiInterfaceMACAddress
 @property  BOOL supportsBLE

  // instance methods
  -[__HMFMobileGesaltDataSource init]
  -[__HMFMobileGesaltDataSource dealloc]
  -[__HMFMobileGesaltDataSource name]
  -[__HMFMobileGesaltDataSource queue]
  -[__HMFMobileGesaltDataSource delegate]
  -[__HMFMobileGesaltDataSource setDelegate:]
  -[__HMFMobileGesaltDataSource .cxx_destruct]
  -[__HMFMobileGesaltDataSource model]
  -[__HMFMobileGesaltDataSource modelIdentifier]
  -[__HMFMobileGesaltDataSource serialNumber]
  -[__HMFMobileGesaltDataSource notificationToken]
  -[__HMFMobileGesaltDataSource productClass]
  -[__HMFMobileGesaltDataSource regionInfo]
  -[__HMFMobileGesaltDataSource softwareVersion]
  -[__HMFMobileGesaltDataSource productPlatform]
  -[__HMFMobileGesaltDataSource productVariant]
  -[__HMFMobileGesaltDataSource WiFiInterfaceMACAddress]
  -[__HMFMobileGesaltDataSource supportsBLE]


HMFWiFiNetworkInfo : HMFObject <HMFObject, NSCopying, NSSecureCoding>
 @property  HMFMACAddress *MACAddress
 @property  NSString *SSID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMFWiFiNetworkInfo supportsSecureCoding]

  // instance methods
  -[HMFWiFiNetworkInfo isEqual:]
  -[HMFWiFiNetworkInfo copyWithZone:]
  -[HMFWiFiNetworkInfo encodeWithCoder:]
  -[HMFWiFiNetworkInfo initWithCoder:]
  -[HMFWiFiNetworkInfo .cxx_destruct]
  -[HMFWiFiNetworkInfo propertyDescription]
  -[HMFWiFiNetworkInfo MACAddress]
  -[HMFWiFiNetworkInfo SSID]
  -[HMFWiFiNetworkInfo isEqualToNetworkInfo:]
  -[HMFWiFiNetworkInfo initWithMACAddress:SSID:]


HMFKey : HMFObject <NSSecureCoding, NSCopying>
 @property  unsigned long size
 @property  NSString *type
 @property  NSData *data

  // class methods
  +[HMFKey supportsSecureCoding]

  // instance methods
  -[HMFKey init]
  -[HMFKey isEqual:]
  -[HMFKey copyWithZone:]
  -[HMFKey type]
  -[HMFKey encodeWithCoder:]
  -[HMFKey initWithCoder:]
  -[HMFKey .cxx_destruct]
  -[HMFKey data]
  -[HMFKey size]
  -[HMFKey isEqualToData:]
  -[HMFKey shortDescription]
  -[HMFKey initWithType:size:data:]


HMFPreferences : HMFObject <HMFObject>
 @property  HMFUnfairLock *lock
 @property  HMFClassRegistry *classRegistry
 @property  NSArray *preferences
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMFPreferences sharedPreferences]
  +[HMFPreferences classRegistry]
  +[HMFPreferences defaultValues]
  +[HMFPreferences preferenceClassForPreferenceKey:]
  +[HMFPreferences defaultValueForPreferenceKey:]
  +[HMFPreferences setPreferenceClass:forPreferenceKey:]
  +[HMFPreferences setDefaultValue:forPreferenceKey:]

  // instance methods
  -[HMFPreferences init]
  -[HMFPreferences lock]
  -[HMFPreferences .cxx_destruct]
  -[HMFPreferences preferences]
  -[HMFPreferences propertyDescription]
  -[HMFPreferences classRegistry]
  -[HMFPreferences preferenceClassForPreferenceKey:]
  -[HMFPreferences setPreferenceClass:forPreferenceKey:]
  -[HMFPreferences preferenceForKey:]


HMFPreference : HMFObject
 @property  NSString *key
 @property  unsigned long options
 @property  <NSObject> *value
 @property  HMFPreference *parent
 @property  BOOL boolValue
 @property  NSNumber *numberValue
 @property  NSString *stringValue
 @property  NSData *dataValue

  // class methods
  +[HMFPreference shortDescription]

  // instance methods
  -[HMFPreference init]
  -[HMFPreference parent]
  -[HMFPreference key]
  -[HMFPreference options]
  -[HMFPreference boolValue]
  -[HMFPreference stringValue]
  -[HMFPreference .cxx_destruct]
  -[HMFPreference value]
  -[HMFPreference setValue:]
  -[HMFPreference shortDescription]
  -[HMFPreference dataValue]
  -[HMFPreference initWithKey:options:defaultValue:]
  -[HMFPreference initWithKey:options:defaultValue:parent:]
  -[HMFPreference numberValue]


HMFSystemPreference : HMFPreference <HMFObject>
 @property  NSString *domain
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // instance methods
  -[HMFSystemPreference domain]
  -[HMFSystemPreference .cxx_destruct]
  -[HMFSystemPreference propertyDescription]
  -[HMFSystemPreference initWithKey:options:defaultValue:parent:]
  -[HMFSystemPreference initWithKey:options:domain:defaultValue:parent:]
  -[HMFSystemPreference initWithKey:options:domain:defaultValue:]


HMFProcessInfo : HMFObject <HMFLogging>
 @property  NSString *applicationIdentifier
 @property  HMFBoolean *codeSigned
 @property  HMFBoolean *platformBinary
 @property  int identifier
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFProcessInfo processInfo]
  +[HMFProcessInfo logCategory]
  +[HMFProcessInfo processInfoForXPCConnection:]

  // instance methods
  -[HMFProcessInfo init]
  -[HMFProcessInfo dealloc]
  -[HMFProcessInfo isEqual:]
  -[HMFProcessInfo name]
  -[HMFProcessInfo .cxx_destruct]
  -[HMFProcessInfo identifier]
  -[HMFProcessInfo initWithIdentifier:]
  -[HMFProcessInfo valueForEntitlement:]
  -[HMFProcessInfo applicationIdentifier]
  -[HMFProcessInfo shortDescription]
  -[HMFProcessInfo initWithAuditToken:]
  -[HMFProcessInfo attributeDescriptions]
  -[HMFProcessInfo getAuditToken:]
  -[HMFProcessInfo isCodeSigned]
  -[HMFProcessInfo isPlatformBinary]


HMFHTTPClientConfiguration : HMFObject <NSCopying>
 @property  BOOL requiresEncryption
 @property  BOOL allowsAnonymousConnection
 @property  BOOL allowsCellularAccess
 @property  BOOL supportsWakeOnLAN
 @property  BOOL monitorsReachability

  // class methods
  +[HMFHTTPClientConfiguration defaultConfiguration]

  // instance methods
  -[HMFHTTPClientConfiguration init]
  -[HMFHTTPClientConfiguration copyWithZone:]
  -[HMFHTTPClientConfiguration setAllowsCellularAccess:]
  -[HMFHTTPClientConfiguration allowsCellularAccess]
  -[HMFHTTPClientConfiguration requiresEncryption]
  -[HMFHTTPClientConfiguration allowsAnonymousConnection]
  -[HMFHTTPClientConfiguration supportsWakeOnLAN]
  -[HMFHTTPClientConfiguration monitorsReachability]
  -[HMFHTTPClientConfiguration setRequiresEncryption:]
  -[HMFHTTPClientConfiguration setAllowsAnonymousConnection:]
  -[HMFHTTPClientConfiguration setSupportsWakeOnLAN:]
  -[HMFHTTPClientConfiguration setMonitorsReachability:]


HMFHTTPClient : HMFObject <HMFLogging, HMFNetMonitorDelegate, HMFTimerDelegate, NSURLSessionDelegate>
 @property  NSURLSession *session
 @property  BOOL active
 @property  HMFNetMonitor *reachabilityMonitor
 @property  NSOperationQueue *reachabilityProbeQueue
 @property  HMFExponentialBackoffTimer *delegatedPingTimer
 @property  BOOL pinging
 @property  BOOL reachable
 @property  <HMFHTTPClientDelegate> *delegate
 @property  NSURL *baseURL
 @property  HMFNetService *netService
 @property  unsigned long options
 @property  BOOL allowAnonymousConnection
 @property  HMFHTTPClientConfiguration *configuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFHTTPClient logCategory]
  +[HMFHTTPClient baseURLWithScheme:hostAddress:port:]

  // instance methods
  -[HMFHTTPClient init]
  -[HMFHTTPClient dealloc]
  -[HMFHTTPClient invalidate]
  -[HMFHTTPClient options]
  -[HMFHTTPClient delegate]
  -[HMFHTTPClient setDelegate:]
  -[HMFHTTPClient baseURL]
  -[HMFHTTPClient .cxx_destruct]
  -[HMFHTTPClient isActive]
  -[HMFHTTPClient setActive:]
  -[HMFHTTPClient session]
  -[HMFHTTPClient configuration]
  -[HMFHTTPClient URLSession:didBecomeInvalidWithError:]
  -[HMFHTTPClient URLSession:didReceiveChallenge:completionHandler:]
  -[HMFHTTPClient logIdentifier]
  -[HMFHTTPClient timerDidFire:]
  -[HMFHTTPClient attributeDescriptions]
  -[HMFHTTPClient networkMonitorIsReachable:]
  -[HMFHTTPClient networkMonitorIsUnreachable:]
  -[HMFHTTPClient isReachable]
  -[HMFHTTPClient setReachable:]
  -[HMFHTTPClient initWithBaseURL:configuration:]
  -[HMFHTTPClient __initializeWithConfiguration:]
  -[HMFHTTPClient initWithService:configuration:]
  -[HMFHTTPClient resolveWithCompletionHandler:]
  -[HMFHTTPClient reachabilityProbeQueue]
  -[HMFHTTPClient requestClientReachabilityPingWithRetry:]
  -[HMFHTTPClient isPinging]
  -[HMFHTTPClient setPinging:]
  -[HMFHTTPClient startDelegatedPingTimer]
  -[HMFHTTPClient stopDelegatedPingTimer]
  -[HMFHTTPClient delegatedPingTimer]
  -[HMFHTTPClient setDelegatedPingTimer:]
  -[HMFHTTPClient startReachabilityProbe]
  -[HMFHTTPClient allowAnonymousConnection]
  -[HMFHTTPClient initWithBaseURL:options:]
  -[HMFHTTPClient initWithNetService:options:]
  -[HMFHTTPClient sendRequest:completionHandler:]
  -[HMFHTTPClient cancelPendingRequests]
  -[HMFHTTPClient netService]
  -[HMFHTTPClient setAllowAnonymousConnection:]
  -[HMFHTTPClient reachabilityMonitor]


HMFSystemInfo : HMFObject <HMFSystemInfoNameDataSourceDelegate, HMFSystemInfoMigrationDataSourceDelegate>
 @property  <HMFSystemInfoNameDataSource> *nameDataSource
 @property  <HMFSystemInfoMarketingInformationDataSource> *marketingDataSource
 @property  <HMFSystemInfoSerialNumberDataSource> *serialNumberDataSource
 @property  <HMFSystemInfoProductInfoDataSource> *productInfoDataSource
 @property  <HMFSystemInfoSoftwareVersionDataSource> *softwareVersionDataSource
 @property  <HMFSystemInfoMigrationDataSource> *migrationDataSource
 @property  <HMFSystemInfoWiFiDataSource> *WiFiDataSource
 @property  <HMFSystemInfoBluetoothLEDataSource> *bluetoothLEDataSource
 @property  NSString *name
 @property  NSString *modelIdentifier
 @property  NSString *model
 @property  NSString *regionInfo
 @property  NSString *serialNumber
 @property  long long productPlatform
 @property  long long productClass
 @property  long long productVariant
 @property  HMFSoftwareVersion *softwareVersion
 @property  BOOL migrating
 @property  HMFMACAddress *WiFiInterfaceMACAddress
 @property  BOOL supportsBLE
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFSystemInfo allocWithZone:]
  +[HMFSystemInfo systemInfo]

  // instance methods
  -[HMFSystemInfo name]
  -[HMFSystemInfo .cxx_destruct]
  -[HMFSystemInfo model]
  -[HMFSystemInfo modelIdentifier]
  -[HMFSystemInfo serialNumber]
  -[HMFSystemInfo productClass]
  -[HMFSystemInfo regionInfo]
  -[HMFSystemInfo softwareVersion]
  -[HMFSystemInfo productPlatform]
  -[HMFSystemInfo productVariant]
  -[HMFSystemInfo WiFiInterfaceMACAddress]
  -[HMFSystemInfo supportsBLE]
  -[HMFSystemInfo dataSource:didUpdateName:]
  -[HMFSystemInfo nameDataSource]
  -[HMFSystemInfo marketingDataSource]
  -[HMFSystemInfo serialNumberDataSource]
  -[HMFSystemInfo productInfoDataSource]
  -[HMFSystemInfo softwareVersionDataSource]
  -[HMFSystemInfo migrationDataSource]
  -[HMFSystemInfo isMigrating]
  -[HMFSystemInfo WiFiDataSource]
  -[HMFSystemInfo bluetoothLEDataSource]
  -[HMFSystemInfo dataSource:didUpdateMigrating:]


HMFProductInfo : HMFObject <NSCopying, NSSecureCoding>
 @property  long long productPlatform
 @property  long long productClass
 @property  long long productVariant
 @property  HMFSoftwareVersion *softwareVersion

  // class methods
  +[HMFProductInfo supportsSecureCoding]
  +[HMFProductInfo shortDescription]
  +[HMFProductInfo productInfo]
  +[HMFProductInfo decodeSoftwareVersionWithCoder:]
  +[HMFProductInfo encodeSoftwareVersion:withCoder:]

  // instance methods
  -[HMFProductInfo init]
  -[HMFProductInfo isEqual:]
  -[HMFProductInfo copyWithZone:]
  -[HMFProductInfo encodeWithCoder:]
  -[HMFProductInfo initWithCoder:]
  -[HMFProductInfo .cxx_destruct]
  -[HMFProductInfo shortDescription]
  -[HMFProductInfo productClass]
  -[HMFProductInfo softwareVersion]
  -[HMFProductInfo productPlatform]
  -[HMFProductInfo productVariant]
  -[HMFProductInfo descriptionWithPointer:]
  -[HMFProductInfo initWithPlatform:class:variant:softwareVersion:]
  -[HMFProductInfo initWithPlatform:class:softwareVersion:]


HMFLogCategory : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *loggingSubsystem
 @property  NSObject<OS_os_log> *internal
 @property  NSString *loggingCategory

  // class methods
  +[HMFLogCategory initialize]
  +[HMFLogCategory categoryWithName:inSubsystem:]
  +[HMFLogCategory categoryWithName:]
  +[HMFLogCategory defaultCategory]

  // instance methods
  -[HMFLogCategory .cxx_destruct]
  -[HMFLogCategory internal]
  -[HMFLogCategory initCategory:inSubsystem:]
  -[HMFLogCategory loggingCategory]
  -[HMFLogCategory loggingSubsystem]


_HMFCFHTTPServerRequest : HMFHTTPRequestInternal
 @property  NSMutableData *bodyData
 @property  ^{_CFHTTPServerRequest=} requestRef
 @property  ^{__CFReadStream=} bodyStream
 @property  _HMFCFHTTPServerConnection *connection

  // instance methods
  -[_HMFCFHTTPServerRequest init]
  -[_HMFCFHTTPServerRequest dealloc]
  -[_HMFCFHTTPServerRequest .cxx_destruct]
  -[_HMFCFHTTPServerRequest method]
  -[_HMFCFHTTPServerRequest setURL:]
  -[_HMFCFHTTPServerRequest URL]
  -[_HMFCFHTTPServerRequest connection]
  -[_HMFCFHTTPServerRequest setMethod:]
  -[_HMFCFHTTPServerRequest bodyData]
  -[_HMFCFHTTPServerRequest setBody:]
  -[_HMFCFHTTPServerRequest body]
  -[_HMFCFHTTPServerRequest headerFields]
  -[_HMFCFHTTPServerRequest initWithConnection:requestRef:]
  -[_HMFCFHTTPServerRequest bodyStream]
  -[_HMFCFHTTPServerRequest appendBodyData:]
  -[_HMFCFHTTPServerRequest responseWithStatusCode:]
  -[_HMFCFHTTPServerRequest requestRef]
  -[_HMFCFHTTPServerRequest setHeaders:]


HMFCache : HMFObject
 @property  NSURL *URL
 @property  BOOL exists

  // class methods
  +[HMFCache defaultCache]

  // instance methods
  -[HMFCache init]
  -[HMFCache .cxx_destruct]
  -[HMFCache initWithName:]
  -[HMFCache URL]
  -[HMFCache isExists]


HMFMessageInternal : HMFObject <NSCopying>
 @property  NSUUID *identifier
 @property  NSString *name
 @property  double timeout
 @property  long long qualityOfService
 @property  HMFMessageDestination *destination
 @property  HMFMessageTransport *transport
 @property  HMFActivity *activity
 @property  NSDictionary *userInfo
 @property  NSDictionary *headers
 @property  NSDictionary *messagePayload
 @property  @? responseHandler

  // instance methods
  -[HMFMessageInternal init]
  -[HMFMessageInternal name]
  -[HMFMessageInternal copyWithZone:]
  -[HMFMessageInternal userInfo]
  -[HMFMessageInternal .cxx_destruct]
  -[HMFMessageInternal setName:]
  -[HMFMessageInternal identifier]
  -[HMFMessageInternal setIdentifier:]
  -[HMFMessageInternal activity]
  -[HMFMessageInternal setActivity:]
  -[HMFMessageInternal qualityOfService]
  -[HMFMessageInternal setQualityOfService:]
  -[HMFMessageInternal setUserInfo:]
  -[HMFMessageInternal timeout]
  -[HMFMessageInternal setTimeout:]
  -[HMFMessageInternal destination]
  -[HMFMessageInternal setDestination:]
  -[HMFMessageInternal setResponseHandler:]
  -[HMFMessageInternal responseHandler]
  -[HMFMessageInternal transport]
  -[HMFMessageInternal setTransport:]
  -[HMFMessageInternal setHeaders:]
  -[HMFMessageInternal headers]
  -[HMFMessageInternal messagePayload]
  -[HMFMessageInternal setMessagePayload:]


HMFMessage : HMFObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  HMFMessageInternal *internal
 @property  NSUUID *identifier
 @property  HMFMessageDestination *destination
 @property  NSDictionary *messagePayload
 @property  @? responseHandler
 @property  NSString *name
 @property  double timeout
 @property  long long qualityOfService
 @property  HMFMessageTransport *transport
 @property  HMFActivity *activity
 @property  NSDictionary *userInfo
 @property  NSDictionary *headers

  // class methods
  +[HMFMessage supportsSecureCoding]
  +[HMFMessage shortDescription]
  +[HMFMessage supportedClasses]
  +[HMFMessage activityNameWithMessageName:]
  +[HMFMessage messageWithName:destination:payload:]
  +[HMFMessage messageWithName:qualityOfService:destination:payload:]
  +[HMFMessage messageWithName:messagePayload:]
  +[HMFMessage messageWithName:messagePayload:responseHandler:]
  +[HMFMessage messageWithName:identifier:messagePayload:]
  +[HMFMessage messageWithMessage:messagePayload:]
  +[HMFMessage messageWithMessage:messagePayload:responseHandler:]

  // instance methods
  -[HMFMessage init]
  -[HMFMessage name]
  -[HMFMessage copyWithZone:]
  -[HMFMessage mutableCopyWithZone:]
  -[HMFMessage userInfo]
  -[HMFMessage encodeWithCoder:]
  -[HMFMessage initWithCoder:]
  -[HMFMessage .cxx_destruct]
  -[HMFMessage identifier]
  -[HMFMessage boolForKey:]
  -[HMFMessage setIdentifier:]
  -[HMFMessage activity]
  -[HMFMessage qualityOfService]
  -[HMFMessage stringForKey:]
  -[HMFMessage arrayForKey:]
  -[HMFMessage dictionaryForKey:]
  -[HMFMessage dataForKey:]
  -[HMFMessage numberForKey:]
  -[HMFMessage timeout]
  -[HMFMessage destination]
  -[HMFMessage setDestination:]
  -[HMFMessage dateForKey:]
  -[HMFMessage setResponseHandler:]
  -[HMFMessage responseHandler]
  -[HMFMessage transport]
  -[HMFMessage internal]
  -[HMFMessage shortDescription]
  -[HMFMessage errorForKey:]
  -[HMFMessage uuidForKey:]
  -[HMFMessage boolForKey:keyPresent:]
  -[HMFMessage timeZoneForKey:]
  -[HMFMessage dateComponentsForKey:]
  -[HMFMessage calendarForKey:]
  -[HMFMessage nullForKey:]
  -[HMFMessage descriptionWithPointer:]
  -[HMFMessage headers]
  -[HMFMessage messagePayload]
  -[HMFMessage setMessagePayload:]
  -[HMFMessage initWithName:destination:payload:]
  -[HMFMessage initWithName:qualityOfService:destination:payload:]
  -[HMFMessage initWithName:qualityOfService:destination:userInfo:headers:payload:]
  -[HMFMessage __initWithInternalMessage:]
  -[HMFMessage initWithInternalMessage:]
  -[HMFMessage respondWithPayload:]
  -[HMFMessage respondWithError:]
  -[HMFMessage respondWithPayload:error:]
  -[HMFMessage initWithName:identifier:messagePayload:responseHandler:]
  -[HMFMessage predicateForKey:]
  -[HMFMessage arrayOfDateComponentsForKey:]


HMFMutableMessage : HMFMessage
 @property  NSUUID *identifier
 @property  NSString *name
 @property  double timeout
 @property  long long qualityOfService
 @property  HMFMessageDestination *destination
 @property  HMFMessageTransport *transport
 @property  HMFActivity *activity
 @property  NSDictionary *userInfo
 @property  NSDictionary *headers
 @property  NSDictionary *messagePayload
 @property  @? responseHandler

  // instance methods
  -[HMFMutableMessage copyWithZone:]
  -[HMFMutableMessage mutableCopyWithZone:]
  -[HMFMutableMessage setName:]
  -[HMFMutableMessage setActivity:]
  -[HMFMutableMessage setQualityOfService:]
  -[HMFMutableMessage setUserInfo:]
  -[HMFMutableMessage setTimeout:]
  -[HMFMutableMessage setTransport:]
  -[HMFMutableMessage setHeaders:]
  -[HMFMutableMessage setUserInfoValue:forKey:]
  -[HMFMutableMessage setHeaderValue:forKey:]


__HMFSystemConfigurationDataSource : HMFObject <HMFSystemInfoNameDataSource>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  ^{__SCDynamicStore=} store
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HMFSystemInfoNameDataSourceDelegate> *delegate
 @property  NSString *name

  // instance methods
  -[__HMFSystemConfigurationDataSource init]
  -[__HMFSystemConfigurationDataSource dealloc]
  -[__HMFSystemConfigurationDataSource name]
  -[__HMFSystemConfigurationDataSource queue]
  -[__HMFSystemConfigurationDataSource delegate]
  -[__HMFSystemConfigurationDataSource setDelegate:]
  -[__HMFSystemConfigurationDataSource .cxx_destruct]
  -[__HMFSystemConfigurationDataSource store]


HMFHTTPClientConnection : HMFObject <_HMFCFHTTPServerConnectionDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSMutableArray *pendingRespones
 @property  _HMFCFHTTPServerConnection *internal
 @property  HMFNetAddress *peerAddress
 @property  <HMFHTTPClientConnectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFHTTPClientConnection logCategory]

  // instance methods
  -[HMFHTTPClientConnection dealloc]
  -[HMFHTTPClientConnection close]
  -[HMFHTTPClientConnection delegate]
  -[HMFHTTPClientConnection setDelegate:]
  -[HMFHTTPClientConnection .cxx_destruct]
  -[HMFHTTPClientConnection initWithConnection:]
  -[HMFHTTPClientConnection openWithCompletionHandler:]
  -[HMFHTTPClientConnection internal]
  -[HMFHTTPClientConnection shortDescription]
  -[HMFHTTPClientConnection clientQueue]
  -[HMFHTTPClientConnection peerAddress]
  -[HMFHTTPClientConnection logIdentifier]
  -[HMFHTTPClientConnection attributeDescriptions]
  -[HMFHTTPClientConnection connection:didReceiveRequest:]
  -[HMFHTTPClientConnection pendingRespones]
  -[HMFHTTPClientConnection sendResponse:completionHandler:]


__HMFMessageHandler : HMFObject <HMFLogging, HMFObject>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <HMFMessageReceiver> *receiver
 @property  NSString *name
 @property  HMFMessageDestination *destination
 @property  NSArray *policies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[__HMFMessageHandler logCategory]
  +[__HMFMessageHandler handlerWithReceiver:name:policies:selector:]
  +[__HMFMessageHandler handlerWithReceiver:name:policies:handler:]

  // instance methods
  -[__HMFMessageHandler isEqual:]
  -[__HMFMessageHandler name]
  -[__HMFMessageHandler queue]
  -[__HMFMessageHandler .cxx_destruct]
  -[__HMFMessageHandler destination]
  -[__HMFMessageHandler policies]
  -[__HMFMessageHandler shortDescription]
  -[__HMFMessageHandler receiver]
  -[__HMFMessageHandler logIdentifier]
  -[__HMFMessageHandler attributeDescriptions]
  -[__HMFMessageHandler invokeWithMessage:]
  -[__HMFMessageHandler initWithReceiver:name:policies:]


__HMFBlockMessageHandler : __HMFMessageHandler
 @property  @? handler

  // instance methods
  -[__HMFBlockMessageHandler handler]
  -[__HMFBlockMessageHandler .cxx_destruct]
  -[__HMFBlockMessageHandler invokeWithMessage:]


__HMFSelectorMessageHandler : __HMFMessageHandler
 @property  SEL selector

  // instance methods
  -[__HMFSelectorMessageHandler isEqual:]
  -[__HMFSelectorMessageHandler selector]
  -[__HMFSelectorMessageHandler invokeWithMessage:]


__HMFEmbeddedSystemInfo : HMFSystemInfo
  // instance methods
  -[__HMFEmbeddedSystemInfo init]


HMFNetAddressInternal : HMFObject
 @property  unsigned long addressFamily
 @property  NSString *addressString

  // instance methods
  -[HMFNetAddressInternal .cxx_destruct]
  -[HMFNetAddressInternal dataUsingEncoding:]
  -[HMFNetAddressInternal addressString]
  -[HMFNetAddressInternal addressFamily]


_HMFNetAddressIPV4 : HMFNetAddressInternal
 @property  ^{sockaddr_in=CCS{in_addr=I}[8c]} internal

  // instance methods
  -[_HMFNetAddressIPV4 init]
  -[_HMFNetAddressIPV4 dealloc]
  -[_HMFNetAddressIPV4 isEqual:]
  -[_HMFNetAddressIPV4 dataUsingEncoding:]
  -[_HMFNetAddressIPV4 internal]
  -[_HMFNetAddressIPV4 addressString]
  -[_HMFNetAddressIPV4 addressFamily]
  -[_HMFNetAddressIPV4 initWithSocketAddress:]


_HMFNetAddressIPV6 : HMFNetAddressInternal
 @property  ^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I} internal

  // instance methods
  -[_HMFNetAddressIPV6 init]
  -[_HMFNetAddressIPV6 dealloc]
  -[_HMFNetAddressIPV6 isEqual:]
  -[_HMFNetAddressIPV6 dataUsingEncoding:]
  -[_HMFNetAddressIPV6 internal]
  -[_HMFNetAddressIPV6 addressString]
  -[_HMFNetAddressIPV6 addressFamily]
  -[_HMFNetAddressIPV6 initWithSocketAddress:]


_HMFNetAddressHostname : HMFNetAddressInternal
 @property  NSString *hostname

  // class methods
  +[_HMFNetAddressHostname normalizedHostname:]

  // instance methods
  -[_HMFNetAddressHostname init]
  -[_HMFNetAddressHostname isEqual:]
  -[_HMFNetAddressHostname .cxx_destruct]
  -[_HMFNetAddressHostname initWithHostname:]
  -[_HMFNetAddressHostname hostname]
  -[_HMFNetAddressHostname addressString]


HMFNetAddress : HMFObject
 @property  HMFNetAddressInternal *internal
 @property  unsigned long addressFamily
 @property  NSString *addressString

  // class methods
  +[HMFNetAddress localAddress]

  // instance methods
  -[HMFNetAddress init]
  -[HMFNetAddress isEqual:]
  -[HMFNetAddress .cxx_destruct]
  -[HMFNetAddress dataUsingEncoding:]
  -[HMFNetAddress internal]
  -[HMFNetAddress initWithHostname:]
  -[HMFNetAddress addressString]
  -[HMFNetAddress addressFamily]
  -[HMFNetAddress attributeDescriptions]
  -[HMFNetAddress initWithSocketAddress:]


__HMFSetupAssistantDataSource : HMFObject <HMFSystemInfoMigrationDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HMFSystemInfoMigrationDataSourceDelegate> *delegate
 @property  BOOL migrating

  // instance methods
  -[__HMFSetupAssistantDataSource init]
  -[__HMFSetupAssistantDataSource dealloc]
  -[__HMFSetupAssistantDataSource delegate]
  -[__HMFSetupAssistantDataSource setDelegate:]
  -[__HMFSetupAssistantDataSource .cxx_destruct]
  -[__HMFSetupAssistantDataSource isMigrating]


__HMFNetServiceMonitor : HMFNetMonitor
 @property  HMFNetService *service

  // instance methods
  -[__HMFNetServiceMonitor dealloc]
  -[__HMFNetServiceMonitor .cxx_destruct]
  -[__HMFNetServiceMonitor observeValueForKeyPath:ofObject:change:context:]
  -[__HMFNetServiceMonitor service]
  -[__HMFNetServiceMonitor logIdentifier]
  -[__HMFNetServiceMonitor initWithNetAddress:]
  -[__HMFNetServiceMonitor initWithNetService:]
  -[__HMFNetServiceMonitor reachabilityPath]
  -[__HMFNetServiceMonitor netAddress]


HMFDigest : HMFObject <HMFObject, NSCopying, NSSecureCoding>
 @property  long long algorithm
 @property  NSData *value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMFDigest supportsSecureCoding]

  // instance methods
  -[HMFDigest init]
  -[HMFDigest isEqual:]
  -[HMFDigest copyWithZone:]
  -[HMFDigest encodeWithCoder:]
  -[HMFDigest initWithCoder:]
  -[HMFDigest .cxx_destruct]
  -[HMFDigest value]
  -[HMFDigest algorithm]
  -[HMFDigest propertyDescription]
  -[HMFDigest initWithAlgorithm:value:]


HMFOperation : NSOperation /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <HMFLogging, HMFTimerDelegate>
 @property  NSUUID *identifier
 @property  HMFTimer *timer
 @property  NSObject<OS_dispatch_queue> *underlyingQueue
 @property  HMFActivity *activity
 @property  NSDate *timeoutDate
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFOperation automaticallyNotifiesObserversForKey:]
  +[HMFOperation logCategory]

  // instance methods
  -[HMFOperation init]
  -[HMFOperation .cxx_destruct]
  -[HMFOperation identifier]
  -[HMFOperation error]
  -[HMFOperation cancel]
  -[HMFOperation start]
  -[HMFOperation main]
  -[HMFOperation activity]
  -[HMFOperation setActivity:]
  -[HMFOperation setQualityOfService:]
  -[HMFOperation isFinished]
  -[HMFOperation isExecuting]
  -[HMFOperation isAsynchronous]
  -[HMFOperation underlyingQueue]
  -[HMFOperation finish]
  -[HMFOperation timer]
  -[HMFOperation setTimer:]
  -[HMFOperation cancelWithError:]
  -[HMFOperation initWithTimeout:]
  -[HMFOperation logIdentifier]
  -[HMFOperation timerDidFire:]
  -[HMFOperation timeoutDate]


HMFBlockOperation : HMFOperation
 @property  NSArray *executionBlocks

  // class methods
  +[HMFBlockOperation blockOperationWithBlock:]

  // instance methods
  -[HMFBlockOperation addExecutionBlock:]
  -[HMFBlockOperation .cxx_destruct]
  -[HMFBlockOperation main]
  -[HMFBlockOperation executionBlocks]
  -[HMFBlockOperation initWithTimeout:]


HMFWeakObject : HMFObject
 @property  unsigned long objectHash
 @property  id object

  // instance methods
  -[HMFWeakObject init]
  -[HMFWeakObject isEqual:]
  -[HMFWeakObject object]
  -[HMFWeakObject .cxx_destruct]
  -[HMFWeakObject initWithWeakObject:]
  -[HMFWeakObject objectHash]


HMFWiFiManagerDataSource : HMFObject <HMFWiFiManagerDataSource>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  ^{__WiFiManagerClient=} wifiClientReference
 @property  ^{__WiFiDeviceClient=} wifiDeviceReference
 @property  ^{__WiFiNetwork=} currentNetwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HMFWiFiManagerDataSourceDelegate> *delegate
 @property  BOOL wowAsserted
 @property  NSString *currentNetworkSSID

  // class methods
  +[HMFWiFiManagerDataSource MACAddressString]

  // instance methods
  -[HMFWiFiManagerDataSource dealloc]
  -[HMFWiFiManagerDataSource delegate]
  -[HMFWiFiManagerDataSource setDelegate:]
  -[HMFWiFiManagerDataSource .cxx_destruct]
  -[HMFWiFiManagerDataSource workQueue]
  -[HMFWiFiManagerDataSource setCurrentNetwork:]
  -[HMFWiFiManagerDataSource _setCurrentNetwork:]
  -[HMFWiFiManagerDataSource currentNetwork]
  -[HMFWiFiManagerDataSource initWithWorkQueue:]
  -[HMFWiFiManagerDataSource setWoWAsserted:]
  -[HMFWiFiManagerDataSource performBlockAfterWoWReassertionDelay:]
  -[HMFWiFiManagerDataSource currentNetworkSSID]
  -[HMFWiFiManagerDataSource startWithWiFiDevice:]
  -[HMFWiFiManagerDataSource wifiClientReference]
  -[HMFWiFiManagerDataSource wifiDeviceReference]
  -[HMFWiFiManagerDataSource setWifiDeviceReference:]
  -[HMFWiFiManagerDataSource isWoWAsserted]
  -[HMFWiFiManagerDataSource handleWiFiLinkChangedWithEventDictionary:]


HMFMessageDestination : HMFObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *target
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMFMessageDestination supportsSecureCoding]
  +[HMFMessageDestination allMessageDestinations]

  // instance methods
  -[HMFMessageDestination init]
  -[HMFMessageDestination isEqual:]
  -[HMFMessageDestination copyWithZone:]
  -[HMFMessageDestination encodeWithCoder:]
  -[HMFMessageDestination initWithCoder:]
  -[HMFMessageDestination .cxx_destruct]
  -[HMFMessageDestination target]
  -[HMFMessageDestination initWithTarget:]
  -[HMFMessageDestination shortDescription]
  -[HMFMessageDestination attributeDescriptions]


HMFHTTPRequestInternal : HMFObject
 @property  NSURL *URL
 @property  NSString *method
 @property  NSDictionary *headerFields
 @property  NSData *body
 @property  HMFActivity *activity

  // instance methods
  -[HMFHTTPRequestInternal init]
  -[HMFHTTPRequestInternal .cxx_destruct]
  -[HMFHTTPRequestInternal method]
  -[HMFHTTPRequestInternal activity]
  -[HMFHTTPRequestInternal setURL:]
  -[HMFHTTPRequestInternal URL]
  -[HMFHTTPRequestInternal setMethod:]
  -[HMFHTTPRequestInternal setBody:]
  -[HMFHTTPRequestInternal body]
  -[HMFHTTPRequestInternal headerFields]
  -[HMFHTTPRequestInternal setHeaderValue:forHeaderKey:]
  -[HMFHTTPRequestInternal setHeaderFields:]
  -[HMFHTTPRequestInternal responseWithStatusCode:]


HMFHTTPRequest : HMFObject
 @property  double timeoutInterval
 @property  HMFHTTPRequestInternal *internal
 @property  NSURL *URL
 @property  NSString *method
 @property  NSDictionary *headerFields
 @property  NSData *body
 @property  NSURLRequest *urlRequest

  // instance methods
  -[HMFHTTPRequest init]
  -[HMFHTTPRequest .cxx_destruct]
  -[HMFHTTPRequest method]
  -[HMFHTTPRequest URL]
  -[HMFHTTPRequest internal]
  -[HMFHTTPRequest setTimeoutInterval:]
  -[HMFHTTPRequest timeoutInterval]
  -[HMFHTTPRequest body]
  -[HMFHTTPRequest headerFields]
  -[HMFHTTPRequest urlRequest]
  -[HMFHTTPRequest attributeDescriptions]
  -[HMFHTTPRequest responseWithStatusCode:]
  -[HMFHTTPRequest initWithInternalRequest:]


HMFMutableHTTPRequest : HMFHTTPRequest
 @property  double timeoutInterval
 @property  NSData *body
 @property  NSDictionary *headerFields

  // instance methods
  -[HMFMutableHTTPRequest setBody:]
  -[HMFMutableHTTPRequest setHeaderValue:forHeaderKey:]
  -[HMFMutableHTTPRequest responseWithStatusCode:]
  -[HMFMutableHTTPRequest initWithInternalRequest:]
  -[HMFMutableHTTPRequest initWithURL:method:body:timeoutInterval:]


HMFMessageFilter : HMFObject <HMFLogging, HMFObject>
 @property  HMFMessage *message
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMFMessageFilter logCategory]
  +[HMFMessageFilter canInitWithMessage:]
  +[HMFMessageFilter policyClasses]

  // instance methods
  -[HMFMessageFilter init]
  -[HMFMessageFilter .cxx_destruct]
  -[HMFMessageFilter message]
  -[HMFMessageFilter initWithMessage:]
  -[HMFMessageFilter logIdentifier]
  -[HMFMessageFilter attributeDescriptions]
  -[HMFMessageFilter acceptWithPolicies:error:]


HMFObject : NSObject /usr/lib/libSystem.B.dylib <HMFObject>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMFObject shortDescription]

  // instance methods
  -[HMFObject shortDescription]
  -[HMFObject privateDescription]


HMFAttributeDescription : NSObject /usr/lib/libSystem.B.dylib <HMFObject>
 @property  NSString *name
 @property  <NSObject> *value
 @property  unsigned long options
 @property  NSFormatter *formatter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMFAttributeDescription shortDescription]

  // instance methods
  -[HMFAttributeDescription init]
  -[HMFAttributeDescription isEqual:]
  -[HMFAttributeDescription name]
  -[HMFAttributeDescription options]
  -[HMFAttributeDescription .cxx_destruct]
  -[HMFAttributeDescription value]
  -[HMFAttributeDescription formatter]
  -[HMFAttributeDescription initWithName:value:]
  -[HMFAttributeDescription shortDescription]
  -[HMFAttributeDescription privateDescription]
  -[HMFAttributeDescription initWithName:value:options:formatter:]


HMFClassRegistry : HMFObject
 @property  Class defaultClass

  // instance methods
  -[HMFClassRegistry init]
  -[HMFClassRegistry .cxx_destruct]
  -[HMFClassRegistry initWithDefaultClass:]
  -[HMFClassRegistry classForKey:]
  -[HMFClassRegistry setClass:forKey:]
  -[HMFClassRegistry defaultClass]


_HMFCFHTTPServerResponse : HMFHTTPResponseInternal
 @property  _HMFCFHTTPMessage *response
 @property  _HMFCFHTTPServerRequest *request
 @property  ^{_CFHTTPServerResponse=} responseRef
 @property  @? completionHandler

  // instance methods
  -[_HMFCFHTTPServerResponse dealloc]
  -[_HMFCFHTTPServerResponse copyWithZone:]
  -[_HMFCFHTTPServerResponse .cxx_destruct]
  -[_HMFCFHTTPServerResponse request]
  -[_HMFCFHTTPServerResponse response]
  -[_HMFCFHTTPServerResponse completionHandler]
  -[_HMFCFHTTPServerResponse setCompletionHandler:]
  -[_HMFCFHTTPServerResponse setBody:]
  -[_HMFCFHTTPServerResponse body]
  -[_HMFCFHTTPServerResponse headerFields]
  -[_HMFCFHTTPServerResponse setHeaderValue:forHeaderKey:]
  -[_HMFCFHTTPServerResponse initWithRequest:statusCode:]
  -[_HMFCFHTTPServerResponse responseRef]


__HMFLocationManagerOperation : HMFOperation <HMFLogging>
 @property  HMFLocationAuthorization *authorization
 @property  CLLocationManager *manager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[__HMFLocationManagerOperation initialize]
  +[__HMFLocationManagerOperation automaticallyNotifiesObserversForKey:]
  +[__HMFLocationManagerOperation logCategory]

  // instance methods
  -[__HMFLocationManagerOperation dealloc]
  -[__HMFLocationManagerOperation .cxx_destruct]
  -[__HMFLocationManagerOperation main]
  -[__HMFLocationManagerOperation observeValueForKeyPath:ofObject:change:context:]
  -[__HMFLocationManagerOperation isReady]
  -[__HMFLocationManagerOperation manager]
  -[__HMFLocationManagerOperation initWithTimeout:]
  -[__HMFLocationManagerOperation initWithAuthorization:]
  -[__HMFLocationManagerOperation authorization]


HMFHTTPServer : HMFObject <_HMFCFHTTPServerDelegate, HMFHTTPClientConnectionDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  _HMFCFHTTPServer *internal
 @property  <HMFHTTPServerDelegate> *delegate
 @property  NSString *serviceType
 @property  NSString *name
 @property  unsigned long port
 @property  unsigned long options
 @property  double connectionIdleTimeout
 @property  HMFMutableNetService *netService
 @property  NSArray *connections
 @property  NSArray *requestHandlers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFHTTPServer logCategory]

  // instance methods
  -[HMFHTTPServer init]
  -[HMFHTTPServer dealloc]
  -[HMFHTTPServer name]
  -[HMFHTTPServer options]
  -[HMFHTTPServer delegate]
  -[HMFHTTPServer setDelegate:]
  -[HMFHTTPServer port]
  -[HMFHTTPServer .cxx_destruct]
  -[HMFHTTPServer stop]
  -[HMFHTTPServer serviceType]
  -[HMFHTTPServer internal]
  -[HMFHTTPServer setInternal:]
  -[HMFHTTPServer shortDescription]
  -[HMFHTTPServer startWithCompletionHandler:]
  -[HMFHTTPServer clientQueue]
  -[HMFHTTPServer connections]
  -[HMFHTTPServer logIdentifier]
  -[HMFHTTPServer attributeDescriptions]
  -[HMFHTTPServer connectionIdleTimeout]
  -[HMFHTTPServer setConnectionIdleTimeout:]
  -[HMFHTTPServer serverDidInvalidate:]
  -[HMFHTTPServer server:didOpenConnection:]
  -[HMFHTTPServer server:didCloseConnection:]
  -[HMFHTTPServer connection:didReceiveRequest:]
  -[HMFHTTPServer netService]
  -[HMFHTTPServer stopWithError:]
  -[HMFHTTPServer _stopWithError:]
  -[HMFHTTPServer requestHandlers]
  -[HMFHTTPServer addConnection:]
  -[HMFHTTPServer removeConnection:]
  -[HMFHTTPServer _handleOpenedConnection:]
  -[HMFHTTPServer _handleClosedConnection:]
  -[HMFHTTPServer _handleReceivedRequest:connection:]
  -[HMFHTTPServer initWithServiceType:name:port:options:]
  -[HMFHTTPServer registerRequestHandler:]
  -[HMFHTTPServer unregisterRequestHandler:]


HMFBoolean : NSNumber /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
  // class methods
  +[HMFBoolean allocWithZone:]
  +[HMFBoolean supportsSecureCoding]
  +[HMFBoolean numberWithFloat:]
  +[HMFBoolean numberWithUnsignedInteger:]
  +[HMFBoolean numberWithInteger:]
  +[HMFBoolean numberWithInt:]
  +[HMFBoolean numberWithDouble:]
  +[HMFBoolean numberWithUnsignedLong:]
  +[HMFBoolean numberWithBool:]
  +[HMFBoolean numberWithUnsignedLongLong:]
  +[HMFBoolean numberWithLongLong:]
  +[HMFBoolean numberWithChar:]
  +[HMFBoolean numberWithUnsignedChar:]
  +[HMFBoolean numberWithShort:]
  +[HMFBoolean numberWithUnsignedShort:]
  +[HMFBoolean numberWithUnsignedInt:]
  +[HMFBoolean numberWithLong:]
  +[HMFBoolean booleanWithBool:]

  // instance methods
  -[HMFBoolean objCType]
  -[HMFBoolean charValue]
  -[HMFBoolean copyWithZone:]
  -[HMFBoolean boolValue]
  -[HMFBoolean compare:]
  -[HMFBoolean encodeWithCoder:]
  -[HMFBoolean classForCoder]
  -[HMFBoolean getValue:]
  -[HMFBoolean initWithBool:]
  -[HMFBoolean getValue:size:]


__HMFBoolean : HMFBoolean
  // instance methods
  -[__HMFBoolean initWithChar:]
  -[__HMFBoolean initWithUnsignedChar:]
  -[__HMFBoolean initWithShort:]
  -[__HMFBoolean initWithUnsignedShort:]
  -[__HMFBoolean initWithInt:]
  -[__HMFBoolean initWithUnsignedInt:]
  -[__HMFBoolean initWithLong:]
  -[__HMFBoolean initWithLongLong:]
  -[__HMFBoolean initWithUnsignedLongLong:]
  -[__HMFBoolean initWithDouble:]
  -[__HMFBoolean boolValue]
  -[__HMFBoolean initWithCoder:]
  -[__HMFBoolean initWithBool:]
  -[__HMFBoolean initWithFloat:]
  -[__HMFBoolean initWithUnsignedLong:]
  -[__HMFBoolean initWithInteger:]
  -[__HMFBoolean initWithUnsignedInteger:]


__HMFBooleanTrue : HMFBoolean
  // class methods
  +[__HMFBooleanTrue new]

  // instance methods
  -[__HMFBooleanTrue boolValue]


__HMFBooleanFalse : HMFBoolean
  // class methods
  +[__HMFBooleanFalse new]

  // instance methods
  -[__HMFBooleanFalse boolValue]


__HMFNetAddressMonitor : HMFNetMonitor
 @property  ^{__SCNetworkReachability=} networkReachabilityRef
 @property  unsigned int currentNetworkFlags

  // instance methods
  -[__HMFNetAddressMonitor init]
  -[__HMFNetAddressMonitor dealloc]
  -[__HMFNetAddressMonitor .cxx_destruct]
  -[__HMFNetAddressMonitor shortDescription]
  -[__HMFNetAddressMonitor logIdentifier]
  -[__HMFNetAddressMonitor attributeDescriptions]
  -[__HMFNetAddressMonitor initWithNetAddress:]
  -[__HMFNetAddressMonitor initWithNetService:]
  -[__HMFNetAddressMonitor reachabilityPath]
  -[__HMFNetAddressMonitor netAddress]
  -[__HMFNetAddressMonitor currentNetworkFlags]
  -[__HMFNetAddressMonitor setCurrentNetworkFlags:]
  -[__HMFNetAddressMonitor handleNetworkReachabilityChange:]
  -[__HMFNetAddressMonitor networkReachabilityRef]


HMFUnfairLock : HMFObject <HMFLocking>
 @property  unsigned long options

  // class methods
  +[HMFUnfairLock lock]
  +[HMFUnfairLock lockWithOptions:]

  // instance methods
  -[HMFUnfairLock init]
  -[HMFUnfairLock options]
  -[HMFUnfairLock initWithOptions:]
  -[HMFUnfairLock lock]
  -[HMFUnfairLock unlock]
  -[HMFUnfairLock performBlock:]
  -[HMFUnfairLock assertOwner]
  -[HMFUnfairLock assertNotOwner]


__HMFOSUnfairLock : HMFUnfairLock
  // instance methods
  -[__HMFOSUnfairLock initWithOptions:]
  -[__HMFOSUnfairLock lock]
  -[__HMFOSUnfairLock unlock]
  -[__HMFOSUnfairLock performBlock:]
  -[__HMFOSUnfairLock assertOwner]
  -[__HMFOSUnfairLock assertNotOwner]


__HMFOSUnfairRecursiveLock : HMFUnfairLock
  // instance methods
  -[__HMFOSUnfairRecursiveLock initWithOptions:]
  -[__HMFOSUnfairRecursiveLock lock]
  -[__HMFOSUnfairRecursiveLock unlock]
  -[__HMFOSUnfairRecursiveLock performBlock:]
  -[__HMFOSUnfairRecursiveLock assertOwner]
  -[__HMFOSUnfairRecursiveLock assertNotOwner]


HMFScheduler : HMFObject
  // class methods
  +[HMFScheduler defaultScheduler]
  +[HMFScheduler mainScheduler]

  // instance methods
  -[HMFScheduler init]
  -[HMFScheduler .cxx_destruct]
  -[HMFScheduler initWithQueue:]
  -[HMFScheduler performBlock:]
  -[HMFScheduler performOperation:]
  -[HMFScheduler performWithQualityOfService:block:]
  -[HMFScheduler performSelector:target:argument:]
  -[HMFScheduler performSelector:target:argument:qualityOfService:]


HMFNetService : HMFObject <HMFLogging, NSNetServiceDelegate>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSMutableArray *resolveBlocks
 @property  long long state
 @property  NSNetService *internal
 @property  BOOL publishing
 @property  <HMFNetServiceDelegate> *delegate
 @property  NSString *type
 @property  NSString *name
 @property  unsigned long port
 @property  BOOL resolved
 @property  HMFNetAddress *hostName
 @property  NSArray *addresses
 @property  NSString *domain
 @property  NSDictionary *TXTRecord
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFNetService automaticallyNotifiesObserversForKey:]
  +[HMFNetService shortDescription]
  +[HMFNetService logCategory]
  +[HMFNetService errorFromNetServiceErrorDict:]

  // instance methods
  -[HMFNetService init]
  -[HMFNetService dealloc]
  -[HMFNetService isEqual:]
  -[HMFNetService name]
  -[HMFNetService domain]
  -[HMFNetService type]
  -[HMFNetService delegate]
  -[HMFNetService setDelegate:]
  -[HMFNetService port]
  -[HMFNetService .cxx_destruct]
  -[HMFNetService state]
  -[HMFNetService hostName]
  -[HMFNetService setResolved:]
  -[HMFNetService isResolved]
  -[HMFNetService setState:]
  -[HMFNetService internal]
  -[HMFNetService shortDescription]
  -[HMFNetService setHostname:]
  -[HMFNetService addresses]
  -[HMFNetService initWithDomain:type:name:]
  -[HMFNetService startMonitoring]
  -[HMFNetService netServiceWillResolve:]
  -[HMFNetService netService:didNotResolve:]
  -[HMFNetService netServiceDidStop:]
  -[HMFNetService netServiceDidResolveAddress:]
  -[HMFNetService netService:didUpdateTXTRecordData:]
  -[HMFNetService clientQueue]
  -[HMFNetService logIdentifier]
  -[HMFNetService initWithNetService:]
  -[HMFNetService descriptionWithPointer:]
  -[HMFNetService isPublishing]
  -[HMFNetService setPublishing:]
  -[HMFNetService confirmWithTimeout:completionHandler:]
  -[HMFNetService resolveWithTimeout:completionHandler:]
  -[HMFNetService updateTXTRecordWithData:]
  -[HMFNetService notifyUpdatedAddresses:]
  -[HMFNetService setTXTRecord:]
  -[HMFNetService removeAllTXTRecordObjects]
  -[HMFNetService bestAddress]
  -[HMFNetService _reallyResolveWithTimeout:completionHandler:]
  -[HMFNetService resolveBlocks]
  -[HMFNetService setAddresses:]
  -[HMFNetService TXTRecord]


HMFMutableNetService : HMFNetService
 @property  @? publishBlock
 @property  unsigned long port
 @property  NSDictionary *TXTRecord

  // instance methods
  -[HMFMutableNetService .cxx_destruct]
  -[HMFMutableNetService setPort:]
  -[HMFMutableNetService internal]
  -[HMFMutableNetService setInternal:]
  -[HMFMutableNetService initWithDomain:type:name:port:]
  -[HMFMutableNetService netService:didNotPublish:]
  -[HMFMutableNetService netServiceDidStop:]
  -[HMFMutableNetService netServiceWillPublish:]
  -[HMFMutableNetService netServiceDidPublish:]
  -[HMFMutableNetService initWithNetService:]
  -[HMFMutableNetService stopPublishing]
  -[HMFMutableNetService startPublishingWithCompletionHandler:]
  -[HMFMutableNetService updateTXTRecordWithData:]
  -[HMFMutableNetService setTXTRecord:]
  -[HMFMutableNetService updateTXTRecord]
  -[HMFMutableNetService setPublishBlock:]
  -[HMFMutableNetService publishBlock]
  -[HMFMutableNetService setTXTRecordValue:forKey:]
  -[HMFMutableNetService removeTXTRecordValueForKey:]


NSKeyedUnarchiver(HMFoundation)
	// class methods
	+[NSKeyedUnarchiver(HMFoundation) hmf_unarchivedObjectOfClass:fromClassName:fromData:error:]
	+[NSKeyedUnarchiver(HMFoundation) deserializeObjectWithData:allowedClasses:]
	+[NSKeyedUnarchiver(HMFoundation) deserializeObjectWithData:allowedClass:frameworkClasses:]

NSCalendar(HMFoundation)
	// class methods
	+[NSCalendar(HMFoundation) hmf_unarchiveFromData:error:]

NSDateComponents(HMFoundation)
	// class methods
	+[NSDateComponents(HMFoundation) hmf_unarchiveFromData:error:]

	// instance methods
	-[NSDateComponents(HMFoundation) hmf_localTimeDescription]
	-[NSDateComponents(HMFoundation) localTimeDescription]

NSData(HMFCalendarCreation)
	// class methods
	+[NSData(HMFCalendarCreation) shortDescription]

	// instance methods
	-[NSData(HMFCalendarCreation) shortDescription]
	-[NSData(HMFCalendarCreation) privateDescription]
	-[NSData(HMFCalendarCreation) decodeDateComponents]
	-[NSData(HMFCalendarCreation) decodeArrayOfDateComponents]
	-[NSData(HMFCalendarCreation) decodeCalendar]
	-[NSData(HMFCalendarCreation) hmf_zeroingCopy]
	-[NSData(HMFCalendarCreation) hmf_hexadecimalStringWithOptions:]
	-[NSData(HMFCalendarCreation) hmf_initWithHexadecimalString:options:]
	-[NSData(HMFCalendarCreation) hmf_isZeroed]
	-[NSData(HMFCalendarCreation) hmf_hexadecimalRepresentation]
	-[NSData(HMFCalendarCreation) decodeTimeZone]

NSArray(KeyPathLookup)
	// class methods
	+[NSArray(KeyPathLookup) shortDescription]

	// instance methods
	-[NSArray(KeyPathLookup) shortDescription]
	-[NSArray(KeyPathLookup) privateDescription]
	-[NSArray(KeyPathLookup) hmf_firstObjectWithValue:forKeyPath:]
	-[NSArray(KeyPathLookup) hmf_firstObjectWithName:]
	-[NSArray(KeyPathLookup) hmf_firstObjectWithUUID:]
	-[NSArray(KeyPathLookup) hmf_firstObjectWithZoneID:]
	-[NSArray(KeyPathLookup) hmf_firstObjectWithUniqueIdentifier:]
	-[NSArray(KeyPathLookup) hmf_firstObjectWithSPIUniqueIdentifier:]
	-[NSArray(KeyPathLookup) hmf_firstObjectWithInstanceID:]
	-[NSArray(KeyPathLookup) hmf_firstObjectWithCharacteristicType:]
	-[NSArray(KeyPathLookup) hmf_isEmpty]
	-[NSArray(KeyPathLookup) secureDescriptionWithIndent:newLine:blacklistedKeys:]
	-[NSArray(KeyPathLookup) secureDescriptionWithBlacklistKeys:]
	-[NSArray(KeyPathLookup) hmf_objectsAreKindOfClass:]
	-[NSArray(KeyPathLookup) hmf_objectPassingTest:]
	-[NSArray(KeyPathLookup) hmf_objectWithOptions:passingTest:]
	-[NSArray(KeyPathLookup) hmf_objectsWithOptions:passingTest:]
	-[NSArray(KeyPathLookup) hmf_objectsPassingTest:]
	-[NSArray(KeyPathLookup) describeElements:]

NSError(HMFError)
	// class methods
	+[NSError(HMFError) shortDescription]
	+[NSError(HMFError) hmfErrorWithCode:description:reason:suggestion:]
	+[NSError(HMFError) hmf_errorWithException:]
	+[NSError(HMFError) hmfErrorWithCode:reason:suggestion:underlyingError:]
	+[NSError(HMFError) hmf_unarchiveFromData:error:]
	+[NSError(HMFError) hmfErrorWithCode:userInfo:]
	+[NSError(HMFError) hmfErrorWithCode:description:reason:suggestion:underlyingError:]
	+[NSError(HMFError) hmfErrorWithCode:reason:suggestion:]
	+[NSError(HMFError) hmfErrorWithCode:]

	// instance methods
	-[NSError(HMFError) shortDescription]
	-[NSError(HMFError) privateDescription]
	-[NSError(HMFError) isHMFError]

NSSet(HMFMerging)
	// class methods
	+[NSSet(HMFMerging) shortDescription]

	// instance methods
	-[NSSet(HMFMerging) shortDescription]
	-[NSSet(HMFMerging) privateDescription]
	-[NSSet(HMFMerging) hmf_isEmpty]
	-[NSSet(HMFMerging) hmf_addedObjectsFromSet:]
	-[NSSet(HMFMerging) hmf_removedObjectsFromSet:]
	-[NSSet(HMFMerging) hmf_commonObjectsFromSet:]

NSMutableSet(HMFMerging)
	// instance methods
	-[NSMutableSet(HMFMerging) mergeObject:]
	-[NSMutableSet(HMFMerging) shouldMergeObject:]

NSDictionary(HMFoundation)
	// class methods
	+[NSDictionary(HMFoundation) shortDescription]

	// instance methods
	-[NSDictionary(HMFoundation) boolForKey:]
	-[NSDictionary(HMFoundation) stringForKey:]
	-[NSDictionary(HMFoundation) arrayForKey:]
	-[NSDictionary(HMFoundation) dictionaryForKey:]
	-[NSDictionary(HMFoundation) dataForKey:]
	-[NSDictionary(HMFoundation) numberForKey:]
	-[NSDictionary(HMFoundation) dateForKey:]
	-[NSDictionary(HMFoundation) shortDescription]
	-[NSDictionary(HMFoundation) privateDescription]
	-[NSDictionary(HMFoundation) errorForKey:]
	-[NSDictionary(HMFoundation) secureDescriptionWithIndent:newLine:blacklistedKeys:]
	-[NSDictionary(HMFoundation) hmf_stringForKey:]
	-[NSDictionary(HMFoundation) hmf_boolForKey:isPresent:]
	-[NSDictionary(HMFoundation) hmf_numberForKey:]
	-[NSDictionary(HMFoundation) hmf_arrayForKey:]
	-[NSDictionary(HMFoundation) hmf_mutableArrayForKey:]
	-[NSDictionary(HMFoundation) hmf_base64EncodedDataForKey:]
	-[NSDictionary(HMFoundation) hmf_boolForKey:]
	-[NSDictionary(HMFoundation) hmf_calendarForKey:]
	-[NSDictionary(HMFoundation) hmf_dataForKey:]
	-[NSDictionary(HMFoundation) hmf_dateForKey:]
	-[NSDictionary(HMFoundation) hmf_dateComponentsForKey:]
	-[NSDictionary(HMFoundation) hmf_dictionaryForKey:]
	-[NSDictionary(HMFoundation) hmf_mutableDictionaryForKey:]
	-[NSDictionary(HMFoundation) hmf_errorForKey:]
	-[NSDictionary(HMFoundation) hmf_nullForKey:]
	-[NSDictionary(HMFoundation) hmf_setForKey:]
	-[NSDictionary(HMFoundation) hmf_mutableSetForKey:]
	-[NSDictionary(HMFoundation) hmf_timeZoneForKey:]
	-[NSDictionary(HMFoundation) hmf_URLForKey:]
	-[NSDictionary(HMFoundation) hmf_UUIDForKey:]
	-[NSDictionary(HMFoundation) hmf_valueForKey:]
	-[NSDictionary(HMFoundation) dateComponentsFromDataForKey:]
	-[NSDictionary(HMFoundation) secureDescriptionWithBlacklistKeys:]
	-[NSDictionary(HMFoundation) uuidForKey:]
	-[NSDictionary(HMFoundation) uuidFromStringForKey:]
	-[NSDictionary(HMFoundation) boolForKey:keyPresent:]
	-[NSDictionary(HMFoundation) mutableDictionaryForKey:]
	-[NSDictionary(HMFoundation) mutableArrayForKey:]
	-[NSDictionary(HMFoundation) mutableSetForKey:]
	-[NSDictionary(HMFoundation) setForKey:]
	-[NSDictionary(HMFoundation) base64EncodedDataForKey:]
	-[NSDictionary(HMFoundation) timeZoneForKey:]
	-[NSDictionary(HMFoundation) timeZoneFromDataForKey:]
	-[NSDictionary(HMFoundation) dateComponentsForKey:]
	-[NSDictionary(HMFoundation) errorFromDataForKey:]
	-[NSDictionary(HMFoundation) calendarForKey:]
	-[NSDictionary(HMFoundation) calendarFromDataForKey:]
	-[NSDictionary(HMFoundation) predicateFromDataForKey:]
	-[NSDictionary(HMFoundation) nullForKey:]
	-[NSDictionary(HMFoundation) nsValueForKey:]
	-[NSDictionary(HMFoundation) urlForKey:]
	-[NSDictionary(HMFoundation) arrayOfDateComponentsFromDataForKey:]

NSTimeZone(HMFoundation)
	// class methods
	+[NSTimeZone(HMFoundation) hmf_unarchiveFromData:error:]

NSUUID(HMFoundation)
	// class methods
	+[NSUUID(HMFoundation) shortDescription]
	+[NSUUID(HMFoundation) hmf_zeroUUID]
	+[NSUUID(HMFoundation) zeroUUID]
	+[NSUUID(HMFoundation) hmf_UUIDWithNamespace:data:]

	// instance methods
	-[NSUUID(HMFoundation) shortDescription]
	-[NSUUID(HMFoundation) privateDescription]
	-[NSUUID(HMFoundation) hmf_isEqualToUUID:]
	-[NSUUID(HMFoundation) hmf_isEqualToUUIDString:]
	-[NSUUID(HMFoundation) initWithNamespace:data:]

NSDate(HMFoundation)
	// class methods
	+[NSDate(HMFoundation) shortDescription]
	+[NSDate(HMFoundation) timeIntervalDescription:]
	+[NSDate(HMFoundation) dateFromFileNameDescription:]

	// instance methods
	-[NSDate(HMFoundation) shortDescription]
	-[NSDate(HMFoundation) dateComponents]
	-[NSDate(HMFoundation) privateDescription]
	-[NSDate(HMFoundation) hmf_localTimeDescription]
	-[NSDate(HMFoundation) localTimeDescription]
	-[NSDate(HMFoundation) hmf_dateComponents]
	-[NSDate(HMFoundation) iso8601Description]
	-[NSDate(HMFoundation) fileNameDescription]

NSString(HMFoundation)
	// instance methods
	-[NSString(HMFoundation) hmf_isInteger]
	-[NSString(HMFoundation) hmf_isNumeric]

NSOperationQueue(HMFOperation)
	// instance methods
	-[NSOperationQueue(HMFOperation) cancelAllOperationsWithError:]

NSPointerArray(HMFoundation)
	// instance methods
	-[NSPointerArray(HMFoundation) hmf_removePointer:]
	-[NSPointerArray(HMFoundation) hmf_removeObject:]
	-[NSPointerArray(HMFoundation) hmf_addObject:]

NSLock(HMFLock)
	// instance methods
	-[NSLock(HMFLock) performBlock:]

NSRecursiveLock(HMFLock)
	// instance methods
	-[NSRecursiveLock(HMFLock) performBlock:]

NSMutableArray(HMFoundation)
	// instance methods
	-[NSMutableArray(HMFoundation) hmf_removeFirstObject]
	-[NSMutableArray(HMFoundation) hmf_dequeue]
	-[NSMutableArray(HMFoundation) hmf_maybeDequeue]
	-[NSMutableArray(HMFoundation) hmf_enqueue:]
	-[NSMutableArray(HMFoundation) hmf_enqueueMultiple:]

01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFormatter 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSInvocationOperation 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetService 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetServiceBrowser 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredential 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
