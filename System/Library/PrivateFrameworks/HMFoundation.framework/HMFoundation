|| __DATA.__data _HMFMemoryMonitorProcessMemoryPressureNotification
|| __DATA.__data _HMFMemoryMonitorSystemMemoryStateDidChangeNotification
|| __DATA.__data _HMFProductInfoArcherBOSVersion
|| __DATA.__data _HMFProductInfoArcherEOSVersion
|| __DATA.__data _HMFProductInfoArcherGOSVersion
|| __DATA.__data _HMFProductInfoArcherHWOSVersion
|| __DATA.__data _HMFProductInfoArcherOSVersion
|| __DATA.__data _HMFProductInfoAzulBOSVersion
|| __DATA.__data _HMFProductInfoAzulEOSVersion
|| __DATA.__data _HMFProductInfoAzulGOSVersion
|| __DATA.__data _HMFProductInfoAzulHWOSVersion
|| __DATA.__data _HMFProductInfoAzulOSVersion
|| __DATA.__data _HMFProductInfoBlowfishOSVersion
|| __DATA.__data _HMFProductInfoBondiOSVersion
|| __DATA.__data _HMFProductInfoBugleOSVersion
|| __DATA.__data _HMFProductInfoButlerOSVersion
|| __DATA.__data _HMFProductInfoCatamaranOSVersion
|| __DATA.__data _HMFProductInfoCinarOSVersion
|| __DATA.__data _HMFProductInfoCoralOSVersion
|| __DATA.__data _HMFProductInfoCoyoteOSVersion
|| __DATA.__data _HMFProductInfoDaytonaOSVersion
|| __DATA.__data _HMFProductInfoDonnerTideOSVersion
|| __DATA.__data _HMFProductInfoEagleOSVersion
|| __DATA.__data _HMFProductInfoEatonOSVersion
|| __DATA.__data _HMFProductInfoElectricOSVersion
|| __DATA.__data _HMFProductInfoEmeraldOSVersion
|| __DATA.__data _HMFProductInfoEmetOSVersion
|| __DATA.__data _HMFProductInfoEmperorOSVersion
|| __DATA.__data _HMFProductInfoErieOSVersion
|| __DATA.__data _HMFProductInfoFatsaOSVersion
|| __DATA.__data _HMFProductInfoFerryOSVersion
|| __DATA.__data _HMFProductInfoFortuneOSVersion
|| __DATA.__data _HMFProductInfoFrancisOSVersion
|| __DATA.__data _HMFProductInfoGloryBOSVersion
|| __DATA.__data _HMFProductInfoGloryCOSVersion
|| __DATA.__data _HMFProductInfoGloryGOSVersion
|| __DATA.__data _HMFProductInfoGloryOSVersion
|| __DATA.__data _HMFProductInfoGoldenGateEOSVersion
|| __DATA.__data _HMFProductInfoGoldenGateGOSVersion
|| __DATA.__data _HMFProductInfoGoldenGateOSVersion
|| __DATA.__data _HMFProductInfoGoldenOSVersion
|| __DATA.__data _HMFProductInfoGraceBOSVersion
|| __DATA.__data _HMFProductInfoGraceFOSVersion
|| __DATA.__data _HMFProductInfoGraceOSVersion
|| __DATA.__data _HMFProductInfoHopeBOSVersion
|| __DATA.__data _HMFProductInfoHopeCOSVersion
|| __DATA.__data _HMFProductInfoHopeGOSVersion
|| __DATA.__data _HMFProductInfoHopeOSVersion
|| __DATA.__data _HMFProductInfoHunterBOSVersion
|| __DATA.__data _HMFProductInfoHunterEOSVersion
|| __DATA.__data _HMFProductInfoHunterGOSVersion
|| __DATA.__data _HMFProductInfoHunterOSVersion
|| __DATA.__data _HMFProductInfoJazzBOSVersion
|| __DATA.__data _HMFProductInfoJazzFOSVersion
|| __DATA.__data _HMFProductInfoJazzOSVersion
|| __DATA.__data _HMFProductInfoJupiterBOSVersion
|| __DATA.__data _HMFProductInfoJupiterCOSVersion
|| __DATA.__data _HMFProductInfoJupiterEOSVersion
|| __DATA.__data _HMFProductInfoJupiterFOSVersion
|| __DATA.__data _HMFProductInfoJupiterOSVersion
|| __DATA.__data _HMFProductInfoLibertyBOSVersion
|| __DATA.__data _HMFProductInfoLibertyCOSVersion
|| __DATA.__data _HMFProductInfoLibertyGOSVersion
|| __DATA.__data _HMFProductInfoLibertyOSVersion
|| __DATA.__data _HMFProductInfoMonarchOSVersion
|| __DATA.__data _HMFProductInfoParisOSVersion
|| __DATA.__data _HMFProductInfoPeaceBOSVersion
|| __DATA.__data _HMFProductInfoPeaceCOSVersion
|| __DATA.__data _HMFProductInfoPeaceGOSVersion
|| __DATA.__data _HMFProductInfoPeaceOSVersion
|| __DATA.__data _HMFProductInfoSatelliteBOSVersion
|| __DATA.__data _HMFProductInfoSatelliteCOSVersion
|| __DATA.__data _HMFProductInfoSatelliteEOSVersion
|| __DATA.__data _HMFProductInfoSatelliteFOSVersion
|| __DATA.__data _HMFProductInfoSatelliteOSVersion
|| __DATA.__data _HMFProductInfoSkyBOSVersion
|| __DATA.__data _HMFProductInfoSkyCOSVersion
|| __DATA.__data _HMFProductInfoSkyEchoOSVersion
|| __DATA.__data _HMFProductInfoSkyFOSVersion
|| __DATA.__data _HMFProductInfoSkyOSVersion
|| __DATA.__data _HMFProductInfoStarBravoOSVersion
|| __DATA.__data _HMFProductInfoStarCOSVersion
|| __DATA.__data _HMFProductInfoStarEOSVersion
|| __DATA.__data _HMFProductInfoStarFOSVersion
|| __DATA.__data _HMFProductInfoStarOSVersion
|| __DATA.__data _HMFProductInfoTigrisOSVersion
|| __DATA.__data _HMFProductInfoTildenOSVersion
|| __DATA.__data _HMFProductInfoTopazOSVersion
|| __DATA.__data _HMFProductInfoUnionOSVersion
|| __DATA.__data _HMFProductInfoWhitetailOSVersion
|| __DATA.__data _HMFProductInfoYagerBOSVersion
|| __DATA.__data _HMFProductInfoYagerFOSVersion
|| __DATA.__data _HMFProductInfoYagerOSVersion
|| __DATA.__data _HMFProductInfoYukonBOSVersion
|| __DATA.__data _HMFProductInfoYukonFOSVersion
|| __DATA.__data _HMFProductInfoYukonOSVersion
|| __DATA.__data _HMFProductInfoYukonPreOSVersion
|| __DATA.__data _HMFWiFiManagerCurrentNetworkDidChangeNotification
|| __DATA.__objc_data _OBJC_CLASS_$_HMFBlockOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMFBoolean
|| __DATA.__objc_data _OBJC_CLASS_$_HMFCache
|| __DATA.__objc_data _OBJC_CLASS_$_HMFCancellationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMFDigest
|| __DATA.__objc_data _OBJC_CLASS_$_HMFDispatchContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMFDumpCategory
|| __DATA.__objc_data _OBJC_CLASS_$_HMFExponentialBackoffTimer
|| __DATA.__objc_data _OBJC_CLASS_$_HMFFuture
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPClient
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPClientConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPClientConnection
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPRequestHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMFHTTPServer
|| __DATA.__objc_data _OBJC_CLASS_$_HMFKey
|| __DATA.__objc_data _OBJC_CLASS_$_HMFKeyValueBlockObserver
|| __DATA.__objc_data _OBJC_CLASS_$_HMFLogBackendSessionManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMFLogEventSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMFLogEventSessionFactory
|| __DATA.__objc_data _OBJC_CLASS_$_HMFLogEventSessionVoucher
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMemoryMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMessageFilter
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMessagePolicy
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMutableHTTPRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMutableHTTPResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMutableNetService
|| __DATA.__objc_data _OBJC_CLASS_$_HMFMutableOrderedDictionary
|| __DATA.__objc_data _OBJC_CLASS_$_HMFNetAddress
|| __DATA.__objc_data _OBJC_CLASS_$_HMFNetManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMFNetMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HMFNetService
|| __DATA.__objc_data _OBJC_CLASS_$_HMFNetServiceBrowser
|| __DATA.__objc_data _OBJC_CLASS_$_HMFOSTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_HMFOperationBudget
|| __DATA.__objc_data _OBJC_CLASS_$_HMFOrderedDictionary
|| __DATA.__objc_data _OBJC_CLASS_$_HMFPairingIdentity
|| __DATA.__objc_data _OBJC_CLASS_$_HMFPowerAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_HMFPowerLogger
|| __DATA.__objc_data _OBJC_CLASS_$_HMFPowerManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMFPrivateObjectFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_HMFPromise
|| __DATA.__objc_data _OBJC_CLASS_$_HMFRingBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_HMFStagedValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMFStringIndentation
|| __DATA.__objc_data _OBJC_CLASS_$_HMFWeakObject
|| __DATA.__objc_data _OBJC_CLASS_$_HMFWiFiManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMFWiFiManagerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HMFWiFiNetworkInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMUIndent
|| __DATA.__objc_data _OBJC_CLASS_$__HMFCFHTTPServer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFBlockOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFBoolean
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFCache
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFCancellationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFDigest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFDispatchContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFDumpCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFExponentialBackoffTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFFuture
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPClientConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPClientConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPRequestHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFHTTPServer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFKey
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFKeyValueBlockObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFLogBackendSessionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFLogEventSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFLogEventSessionFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFLogEventSessionVoucher
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMemoryMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMessageFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMessagePolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMutableHTTPRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMutableHTTPResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMutableNetService
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFMutableOrderedDictionary
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFNetAddress
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFNetManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFNetMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFNetService
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFNetServiceBrowser
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFOSTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFOperationBudget
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFOrderedDictionary
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFPairingIdentity
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFPowerAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFPowerLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFPowerManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFPrivateObjectFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFPromise
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFRingBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFStagedValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFStringIndentation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFWeakObject
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFWiFiManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFWiFiManagerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFWiFiNetworkInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUIndent
|| __DATA.__objc_data _OBJC_METACLASS_$__HMFCFHTTPServer
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMFAssertion._valid
|| __DATA_CONST.__const _HMFDetailedErrorsKey
|| __DATA_CONST.__const _HMFErrorDomain
|| __DATA_CONST.__const _HMFEventNameKey
|| __DATA_CONST.__const _HMFHTTPContentLengthHeaderField
|| __DATA_CONST.__const _HMFHTTPContentTypeHeaderField
|| __DATA_CONST.__const _HMFHTTPDateHeaderField
|| __DATA_CONST.__const _HMFHTTPHostHeaderField
|| __DATA_CONST.__const _HMFHTTPTransferEncodingHeaderField
|| __DATA_CONST.__const _HMFHomeKitLoggingSubsystem
|| __DATA_CONST.__const _HMFIntrinsicComparator
|| __DATA_CONST.__const _HMFKeyTypeIRK
|| __DATA_CONST.__const _HMFLocationAuthorizationUpdatedNotification
|| __DATA_CONST.__const _HMFLogCategoryDefault
|| __DATA_CONST.__const _HMFLogCategoryDumpState
|| __DATA_CONST.__const _HMFLoggingSubsystem
|| __DATA_CONST.__const _HMFMessageActivityPrefix
|| __DATA_CONST.__const _HMFMetaEventNameKey
|| __DATA_CONST.__const _HMFMetaEventServiceName
|| __DATA_CONST.__const _HMFPowerLogEventTypeKey
|| __DATA_CONST.__const _HMFPowerLogHomeKitCameraConfigurationTable
|| __DATA_CONST.__const _HMFPowerLogHomeKitHomeConfigurationTable
|| __DATA_CONST.__const _HMFPowerLogHomeKitRegistrationEventTable
|| __DATA_CONST.__const _HMFPowerLogHomeKitStandardEventTable
|| __DATA_CONST.__const _HMFPowerManagerBatteryLevelDidChangeNotification
|| __DATA_CONST.__const _HMFPowerManagerBatteryStateDidChangeNotification
|| __DATA_CONST.__const _HMFPreferenceUpdatedNotification
|| __DATA_CONST.__const _HMFProcessMemoryStateUpdateKey
|| __DATA_CONST.__const _HMFReverseIntrinsicComparator
|| __DATA_CONST.__const _HMFSessionIdentifierKey
|| __DATA_CONST.__const _HMFSystemInfoMigratingUpdatedNotification
|| __DATA_CONST.__const _HMFSystemInfoNameNotificationKey
|| __DATA_CONST.__const _HMFSystemInfoNameUpdatedNotification
|| __DATA_CONST.__const _HMFSystemMemoryStateUpdateKey
|| __DATA_CONST.__const _HMFTimestampKey
|| __DATA_CONST.__const _kDumpStateAccessoryCategoryKey
|| __DATA_CONST.__const _kDumpStateAccessoryKey
|| __DATA_CONST.__const _kDumpStateAccessoryProfileKey
|| __DATA_CONST.__const _kDumpStateAccessorySetupHashKey
|| __DATA_CONST.__const _kDumpStateAccessoryTransportKey
|| __DATA_CONST.__const _kDumpStateActionSetKey
|| __DATA_CONST.__const _kDumpStateApplicationDataKey
|| __DATA_CONST.__const _kDumpStateBridgeAccessoryKey
|| __DATA_CONST.__const _kDumpStateBridgedAccessoryKey
|| __DATA_CONST.__const _kDumpStateBulletinNotificationGroupCamerasKey
|| __DATA_CONST.__const _kDumpStateBulletinNotificationGroupKey
|| __DATA_CONST.__const _kDumpStateBulletinNotificationGroupServicesKey
|| __DATA_CONST.__const _kDumpStateBulletinNotificationKey
|| __DATA_CONST.__const _kDumpStateCharacteristicKey
|| __DATA_CONST.__const _kDumpStateCurrentUser
|| __DATA_CONST.__const _kDumpStateEventKey
|| __DATA_CONST.__const _kDumpStateExecuteOnceKey
|| __DATA_CONST.__const _kDumpStateExecuteSessionKey
|| __DATA_CONST.__const _kDumpStateHomeDaemonVersionKey
|| __DATA_CONST.__const _kDumpStateHomeKey
|| __DATA_CONST.__const _kDumpStateHomeManagerKey
|| __DATA_CONST.__const _kDumpStateHomeNotificationRegistrationsKey
|| __DATA_CONST.__const _kDumpStateIdentityKey
|| __DATA_CONST.__const _kDumpStateIncomingInvitesKey
|| __DATA_CONST.__const _kDumpStateInvitesKey
|| __DATA_CONST.__const _kDumpStateKeychainItemKey
|| __DATA_CONST.__const _kDumpStateKeychainKey
|| __DATA_CONST.__const _kDumpStateLocationKey
|| __DATA_CONST.__const _kDumpStateMediaActionKey
|| __DATA_CONST.__const _kDumpStateMeshKey
|| __DATA_CONST.__const _kDumpStateMetadataKey
|| __DATA_CONST.__const _kDumpStateNetServiceKey
|| __DATA_CONST.__const _kDumpStateOutgoingInvitesKey
|| __DATA_CONST.__const _kDumpStatePendingResponses
|| __DATA_CONST.__const _kDumpStatePredicateKey
|| __DATA_CONST.__const _kDumpStateRecurrenceKey
|| __DATA_CONST.__const _kDumpStateRemovedUserKey
|| __DATA_CONST.__const _kDumpStateResidentKey
|| __DATA_CONST.__const _kDumpStateRoomKey
|| __DATA_CONST.__const _kDumpStateSecondaryAccessoryKey
|| __DATA_CONST.__const _kDumpStateServiceGroupKey
|| __DATA_CONST.__const _kDumpStateServiceKey
|| __DATA_CONST.__const _kDumpStateSharedHomeSourceVersion
|| __DATA_CONST.__const _kDumpStateSharedHomeUpdateHandler
|| __DATA_CONST.__const _kDumpStateSharedHomeUpdateSession
|| __DATA_CONST.__const _kDumpStateStateKey
|| __DATA_CONST.__const _kDumpStateSyncManagerKey
|| __DATA_CONST.__const _kDumpStateTimerTriggerKey
|| __DATA_CONST.__const _kDumpStateTriggerKey
|| __DATA_CONST.__const _kDumpStateUserAccessTokenKey
|| __DATA_CONST.__const _kDumpStateUserKey
|| __DATA_CONST.__const _kDumpStateWriteActionKey
|| __DATA_CONST.__const _kDumpStateZoneKey
|| __DATA_CONST.__const _kIndentLevel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFAttributeDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFClassRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFHardwareAddress
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFLocationAuthorization
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMACAddress
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMemoryAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMessageDestination
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMessageDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMessageInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMutableMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFMutableThreadSafeDictionary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFNotificationCenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFObjectCacheNSString
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFObjectCacheNSUUID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFObjectObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFPairingKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFPreference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFProcessInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFProductInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFSoftwareVersion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFSystemInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFSystemPreference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFTimer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFUnfairLock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFVersion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$___HMFMessageHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFAttributeDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFClassRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFHardwareAddress
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFLocationAuthorization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMACAddress
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMemoryAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMessageDestination
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMessageDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMessageInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMutableMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFMutableThreadSafeDictionary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFNotificationCenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFObjectCacheNSString
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFObjectCacheNSUUID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFObjectObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFPairingKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFPreference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFProcessInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFProductInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFSoftwareVersion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFSystemInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFSystemPreference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFUnfairLock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFVersion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$___HMFMessageHandler
|| __TEXT.__const _HMFHTTPServerDefaultConnectionIdleTimeout
|| __TEXT.__const _HMFHardwareAddressMaxLength
|| __TEXT.__const _HMFKeySizeDefault
|| __TEXT.__const _HMFKeySizeIRK128
|| __TEXT.__const _HMFMACAddressLength
|| __TEXT.__const _HMFPairingKeyLength
|| __TEXT.__const _HMFoundationVersionNumber
|| __TEXT.__const _HMFoundationVersionString
|| __TEXT.__text _HMFAreStringsEqualIgnoringCase
|| __TEXT.__text _HMFBooleanToString
|| __TEXT.__text _HMFCreateOsLogHandle
|| __TEXT.__text _HMFCurrentAsyncContext
|| __TEXT.__text _HMFDataIsReversed
|| __TEXT.__text _HMFDescribeCollection
|| __TEXT.__text _HMFDigestAlgorithmFromString
|| __TEXT.__text _HMFDigestAlgorithmToString
|| __TEXT.__text _HMFDispatchQueueName
|| __TEXT.__text _HMFEnabledStatusToString
|| __TEXT.__text _HMFEqualObjects
|| __TEXT.__text _HMFEventDictionaryFromFormat
|| __TEXT.__text _HMFEventDictionaryFromFormatWithSession
|| __TEXT.__text _HMFEventDictionaryFromFormatWithUUID
|| __TEXT.__text _HMFGetActivityIdentifier
|| __TEXT.__text _HMFGetDefaultOSLogHandle
|| __TEXT.__text _HMFGetLogIdentifier
|| __TEXT.__text _HMFGetOsLogHandle
|| __TEXT.__text _HMFMainThreadAsyncContext
|| __TEXT.__text _HMFMethodDescription
|| __TEXT.__text _HMFObjectDescription
|| __TEXT.__text _HMFOperatingSystemVersionCompare
|| __TEXT.__text _HMFProcessMemoryStateToString
|| __TEXT.__text _HMFProductClassFromString
|| __TEXT.__text _HMFProductClassToString
|| __TEXT.__text _HMFProductColorToString
|| __TEXT.__text _HMFProductPlatformFromString
|| __TEXT.__text _HMFProductPlatformToString
|| __TEXT.__text _HMFProductVariantToString
|| __TEXT.__text _HMFQOSClassFromQualityOfService
|| __TEXT.__text _HMFQualityOfServiceCompare
|| __TEXT.__text _HMFQualityOfServiceToString
|| __TEXT.__text _HMFRequireCurrentAsyncContext
|| __TEXT.__text _HMFSecondsFromMachTime
|| __TEXT.__text _HMFSystemMemoryStateToString
|| __TEXT.__text _HMFTimeIntervalDescription
|| __TEXT.__text _NSOperatingSystemVersionToString
|| __TEXT.__text __HMFHashWithSalt
|| __TEXT.__text __HMFLogFormatDelimit
|| __TEXT.__text __HMFPreconditionFailure
|| __TEXT.__text __HMFPreconditionFailureWithFormat
|| __TEXT.__text __HMFThreadLocalAsyncContextPop
|| __TEXT.__text __HMFThreadLocalAsyncContextPush
|| __TEXT.__text __HMFValidateMessagePayload
|| __TEXT.__text ___HMFActivityScopeLeave
|| __TEXT.__text _isEqualToObject
|| __TEXT.__text _randomDataWithLength
|| __TEXT.__text _randomUInt32
__ CFNetwork: _CFHTTPMessageCopyAllHeaderFields
__ CFNetwork: _CFHTTPMessageCopyBody
__ CFNetwork: _CFHTTPMessageCopyHeaderFieldValue
__ CFNetwork: _CFHTTPMessageCreateRequest
__ CFNetwork: _CFHTTPMessageCreateResponse
__ CFNetwork: _CFHTTPMessageSetBody
__ CFNetwork: _CFHTTPMessageSetHeaderFieldValue
__ CFNetwork: _NSNetServicesErrorCode
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSNetService
__ CFNetwork: _OBJC_CLASS_$_NSNetServiceBrowser
__ CFNetwork: _OBJC_CLASS_$_NSURLCredential
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: __CFHTTPServerConnectionCopyProperty
__ CFNetwork: __CFHTTPServerConnectionInvalidate
__ CFNetwork: __CFHTTPServerConnectionIsValid
__ CFNetwork: __CFHTTPServerConnectionSetClient
__ CFNetwork: __CFHTTPServerConnectionSetDispatchQueue
__ CFNetwork: __CFHTTPServerCopyProperty
__ CFNetwork: __CFHTTPServerCreateService
__ CFNetwork: __CFHTTPServerInvalidate
__ CFNetwork: __CFHTTPServerIsValid
__ CFNetwork: __CFHTTPServerRequestCopyBodyStream
__ CFNetwork: __CFHTTPServerRequestCopyProperty
__ CFNetwork: __CFHTTPServerRequestCreateResponseMessage
__ CFNetwork: __CFHTTPServerResponseCreateWithData
__ CFNetwork: __CFHTTPServerResponseEnqueue
__ CFNetwork: __CFHTTPServerResponseSetClient
__ CFNetwork: __CFHTTPServerSetDispatchQueue
__ CFNetwork: __CFHTTPServerSetProperty
__ CFNetwork: __kCFHTTPServerAllowAnonymousServer
__ CFNetwork: __kCFHTTPServerConnectionPeer
__ CFNetwork: __kCFHTTPServerIdleTimeout
__ CFNetwork: __kCFHTTPServerRequestHeaderValuesKey
__ CFNetwork: __kCFHTTPServerRequestHeaders
__ CFNetwork: __kCFHTTPServerRequestMethod
__ CFNetwork: __kCFHTTPServerRequestURL
__ CFNetwork: __kCFHTTPServerRequireClientCertificate
__ CFNetwork: __kCFHTTPServerSSLSettings
__ CFNetwork: __kCFHTTPServerServicePort
__ CFNetwork: __kCFHTTPServerWatchdogTimeout
__ CFNetwork: _kCFHTTPVersion1_0
__ CFNetwork: _kCFHTTPVersion1_1
__ CFNetwork: _kCFHTTPVersion2_0
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFHash
__ CoreFoundation: _CFHashBytes
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFReadStreamClose
__ CoreFoundation: _CFReadStreamOpen
__ CoreFoundation: _CFReadStreamRead
__ CoreFoundation: _CFReadStreamSetClient
__ CoreFoundation: _CFReadStreamSetDispatchQueue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFSetGetTypeID
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreUtils: _CFDictionaryGetInt64
__ CoreUtils: _HardwareAddressToCString
__ CoreUtils: _TextToHardwareAddress
__ CoreUtils: _WiFiCopyCurrentNetworkInfo
__ CoreUtils: _cced25519_make_key_pair_compat
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSHomeDirectory
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFormatter
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSInvocationOperation
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_METACLASS_$_NSFormatter
__ Foundation: _OBJC_METACLASS_$_NSNumber
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: __NSFullMethodName
__ IOKit: _IOIteratorNext
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortGetRunLoopSource
__ IOKit: _IOObjectRelease
__ IOKit: _IOPMAssertionCreateWithDescription
__ IOKit: _IOPMAssertionRelease
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IOServiceAddInterestNotification
__ IOKit: _IOServiceAddMatchingNotification
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMainPortDefault
__ MobileWiFi: _WiFiDeviceClientCopyCurrentNetwork
__ MobileWiFi: _WiFiDeviceClientRegisterExtendedLinkCallback
__ MobileWiFi: _WiFiManagerClientCopyDevices
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientGetType
__ MobileWiFi: _WiFiManagerClientGetWoWState
__ MobileWiFi: _WiFiManagerClientRegisterDeviceAttachmentCallback
__ MobileWiFi: _WiFiManagerClientRegisterWowStateChangedCallback
__ MobileWiFi: _WiFiManagerClientScheduleWithRunLoop
__ MobileWiFi: _WiFiManagerClientSetType
__ MobileWiFi: _WiFiManagerClientSetWoWState
__ MobileWiFi: _WiFiNetworkGetSSID
__ PowerLog: _PLLogRegisteredEvent
__ RTCReporting: _OBJC_CLASS_$_RTCReporting
__ RTCReporting: _kRTCReportingMessageParametersCategory
__ RTCReporting: _kRTCReportingMessageParametersFlag
__ RTCReporting: _kRTCReportingMessageParametersPayload
__ RTCReporting: _kRTCReportingMessageParametersType
__ RTCReporting: _kRTCReportingSessionInfoBatchEvent
__ RTCReporting: _kRTCReportingSessionInfoClientType
__ RTCReporting: _kRTCReportingSessionInfoClientVersion
__ RTCReporting: _kRTCReportingSessionInfoContainsRealtimeEvents
__ RTCReporting: _kRTCReportingSessionInfoHierarchyToken
__ RTCReporting: _kRTCReportingSessionInfoSamplingUUIID
__ RTCReporting: _kRTCReportingSessionInfoSessionID
__ RTCReporting: _kRTCReportingUserInfoClientName
__ RTCReporting: _kRTCReportingUserInfoServiceName
__ Security: _SecRandomCopyBytes
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTaskCreateWithAuditToken
__ Security: _kSecRandomDefault
__ SoftLinking: __sl_dlopen
__ SystemConfiguration: _SCDynamicStoreAddWatchedKey
__ SystemConfiguration: _SCDynamicStoreCopyLocalHostName
__ SystemConfiguration: _SCDynamicStoreCreate
__ SystemConfiguration: _SCDynamicStoreKeyCreateHostNames
__ SystemConfiguration: _SCDynamicStoreRemoveWatchedKey
__ SystemConfiguration: _SCDynamicStoreSetDispatchQueue
__ SystemConfiguration: _SCDynamicStoreSetNotificationKeys
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilitySetDispatchQueue
__ libMobileGestalt.dylib: _MGCancelNotifications
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGCopyMultipleAnswers
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGRegisterForUpdates
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_activity_none
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __tlv_bootstrap
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _cc_clear
__ libSystem.B.dylib: _csops_audittoken
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_block_create_with_voucher
__ libSystem.B.dylib: _dispatch_block_create_with_voucher_and_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_specific
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _if_indextoname
__ libSystem.B.dylib: _inet_ntoa
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_activity_apply
__ libSystem.B.dylib: _os_activity_get_identifier
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_transaction_needs_more_time
__ libSystem.B.dylib: _os_unfair_lock_assert_not_owner
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_unfair_recursive_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_recursive_lock_unlock
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _strchr
__ libSystem.B.dylib: _strcspn
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strspn
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _voucher_adopt
__ libSystem.B.dylib: _voucher_copy
__ libSystem.B.dylib: _voucher_copy_without_importance
__ libSystem.B.dylib: _wcslen
__ libbsm.0.dylib: _audit_token_to_pid
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getMethodImplementation
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_isEqual
__HMFLocationAuthorizationMarkOperation : __HMFLocationManagerOperation <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[__HMFLocationAuthorizationMarkOperation logCategory]

  // instance methods
  -[__HMFLocationAuthorizationMarkOperation main]


HMFOSTransaction : HMFObject
 @property  NSObject<OS_os_transaction> *transaction
 @property  double creationTime

  // instance methods
  -[HMFOSTransaction creationTime]
  -[HMFOSTransaction transaction]
  -[HMFOSTransaction .cxx_destruct]
  -[HMFOSTransaction initWithName:]
  -[HMFOSTransaction init]
  -[HMFOSTransaction dealloc]


HMFMemoryAssertion : HMFAssertion
 @property  NSObject<OS_os_transaction> *internal

  // instance methods
  -[HMFMemoryAssertion internal]
  -[HMFMemoryAssertion mark]
  -[HMFMemoryAssertion .cxx_destruct]
  -[HMFMemoryAssertion initWithName:]
  -[HMFMemoryAssertion setInternal:]
  -[HMFMemoryAssertion invalidate]


HMFStagedValue : NSObject <HMFLogging, HMFTimerDelegate>
 @property  id committedValue
 @property  HMFTimer *timer
 @property  @? timerFactory
 @property  id value
 @property  BOOL staged
 @property  <HMFStagedValueDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFStagedValue logCategory]

  // instance methods
  -[HMFStagedValue timerDidFire:]
  -[HMFStagedValue .cxx_destruct]
  -[HMFStagedValue setDelegate:]
  -[HMFStagedValue _commitValue:]
  -[HMFStagedValue timer]
  -[HMFStagedValue initWithValue:]
  -[HMFStagedValue setTimer:]
  -[HMFStagedValue value]
  -[HMFStagedValue delegate]
  -[HMFStagedValue isStaged]
  -[HMFStagedValue timerFactory]
  -[HMFStagedValue stageValue:]
  -[HMFStagedValue stageValue:withTimeout:]
  -[HMFStagedValue commitValue:]
  -[HMFStagedValue setTimerFactory:]
  -[HMFStagedValue committedValue]
  -[HMFStagedValue _stageValue:withTimer:]
  -[HMFStagedValue _unstageValue]
  -[HMFStagedValue setCommittedValue:]


HMFTimer : HMFObject
 @property  NSObject<OS_dispatch_source> *timer
 @property  unsigned long options
 @property  <HMFTimerDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  double timeInterval
 @property  unsigned long leeway
 @property  BOOL running
 @property  NSDate *fireDate

  // class methods
  +[HMFTimer shortDescription]

  // instance methods
  -[HMFTimer leeway]
  -[HMFTimer __fire]
  -[HMFTimer kick]
  -[HMFTimer setFireDate:]
  -[HMFTimer timeInterval]
  -[HMFTimer fire]
  -[HMFTimer delegateQueue]
  -[HMFTimer suspend]
  -[HMFTimer setDelegateQueue:]
  -[HMFTimer options]
  -[HMFTimer .cxx_destruct]
  -[HMFTimer isRunning]
  -[HMFTimer setDelegate:]
  -[HMFTimer attributeDescriptions]
  -[HMFTimer init]
  -[HMFTimer initWithTimeInterval:options:]
  -[HMFTimer timer]
  -[HMFTimer __handleExpiration]
  -[HMFTimer delegate]
  -[HMFTimer fireDate]
  -[HMFTimer resume]
  -[HMFTimer dealloc]


HMFExponentialBackoffTimer : HMFTimer
 @property  BOOL increasing
 @property  double minimumTimeInterval
 @property  double maximumTimeInterval
 @property  long long exponentialFactor

  // instance methods
  -[HMFExponentialBackoffTimer __fire]
  -[HMFExponentialBackoffTimer timeInterval]
  -[HMFExponentialBackoffTimer minimumTimeInterval]
  -[HMFExponentialBackoffTimer exponentialFactor]
  -[HMFExponentialBackoffTimer initWithTimeInterval:options:]
  -[HMFExponentialBackoffTimer reset]
  -[HMFExponentialBackoffTimer isIncreasing]
  -[HMFExponentialBackoffTimer maximumTimeInterval]
  -[HMFExponentialBackoffTimer initWithMinimumTimeInterval:maximumTimeInterval:exponentialFactor:options:]


HMFMessagePolicy : HMFObject <NSCopying>
  // instance methods
  -[HMFMessagePolicy copyWithZone:]


HMFPrivateObjectFormatter : NSFormatter <HMFPrivateDescriptionFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFPrivateObjectFormatter defaultFormatter]

  // instance methods
  -[HMFPrivateObjectFormatter stringForObjectValue:]
  -[HMFPrivateObjectFormatter privateStringForObjectValue:]


HMFFuture : NSObject
 @property  {_HMFFutureBlockOutcome=q@} outcomeIfSettled
 @property  BOOL pending

  // class methods
  +[HMFFuture any:]
  +[HMFFuture all:]
  +[HMFFuture futureWithError:]
  +[HMFFuture futureWithNoValue]
  +[HMFFuture futureWithPromise:]
  +[HMFFuture allSettled:]
  +[HMFFuture futureWithValue:]
  +[HMFFuture inContext:perform:]
  +[HMFFuture futureForOperation:]
  +[HMFFuture anySettled:]
  +[HMFFuture futureWithDelay:]

  // instance methods
  -[HMFFuture then:]
  -[HMFFuture recover:]
  -[HMFFuture isPending]
  -[HMFFuture ignoreErrors]
  -[HMFFuture timeout:]
  -[HMFFuture waitForResult:orError:withTimeout:]
  -[HMFFuture finally:]
  -[HMFFuture inContext:then:]
  -[HMFFuture ignoreOutcome]
  -[HMFFuture then:orRecover:]
  -[HMFFuture inContext:then:orRecover:]
  -[HMFFuture ignoreResult]
  -[HMFFuture getResultWithCompletion:]
  -[HMFFuture outcomeIfSettled]
  -[HMFFuture inContext:recover:]
  -[HMFFuture inContext:finally:]


HMFFulfilledFuture : HMFFuture
  // instance methods
  -[HMFFulfilledFuture then:]
  -[HMFFulfilledFuture recover:]
  -[HMFFulfilledFuture .cxx_destruct]
  -[HMFFulfilledFuture isPending]
  -[HMFFulfilledFuture inContext:then:]
  -[HMFFulfilledFuture then:orRecover:]
  -[HMFFulfilledFuture inContext:then:orRecover:]
  -[HMFFulfilledFuture getResultWithCompletion:]
  -[HMFFulfilledFuture outcomeIfSettled]
  -[HMFFulfilledFuture inContext:recover:]


HMFRejectedFuture : HMFFuture
  // instance methods
  -[HMFRejectedFuture then:]
  -[HMFRejectedFuture recover:]
  -[HMFRejectedFuture .cxx_destruct]
  -[HMFRejectedFuture isPending]
  -[HMFRejectedFuture inContext:then:]
  -[HMFRejectedFuture then:orRecover:]
  -[HMFRejectedFuture inContext:then:orRecover:]
  -[HMFRejectedFuture getResultWithCompletion:]
  -[HMFRejectedFuture outcomeIfSettled]
  -[HMFRejectedFuture inContext:recover:]


HMFAsyncFuture : HMFFuture
  // instance methods
  -[HMFAsyncFuture then:]
  -[HMFAsyncFuture recover:]
  -[HMFAsyncFuture .cxx_destruct]
  -[HMFAsyncFuture isPending]
  -[HMFAsyncFuture inContext:then:]
  -[HMFAsyncFuture then:orRecover:]
  -[HMFAsyncFuture inContext:then:orRecover:]
  -[HMFAsyncFuture getResultWithCompletion:]
  -[HMFAsyncFuture outcomeIfSettled]
  -[HMFAsyncFuture inContext:recover:]


HMFPromise : NSObject
 @property  @? resolverBlock
 @property  @? errorOnlyResolverBlock
 @property  @? voidResolverBlock

  // instance methods
  -[HMFPromise .cxx_destruct]
  -[HMFPromise rejectWithError:]
  -[HMFPromise fulfillWithValue:]
  -[HMFPromise dealloc]
  -[HMFPromise errorOnlyResolverBlock]
  -[HMFPromise resolveWithFuture:]
  -[HMFPromise resolverBlock]
  -[HMFPromise voidResolverBlock]


HMFPairingIdentity : HMFObject <NSSecureCoding, NSCopying>
 @property  NSString *identifier
 @property  HMFPairingKey *publicKey
 @property  HMFPairingKey *privateKey
 @property  HMFPairingIdentity *publicPairingIdentity

  // class methods
  +[HMFPairingIdentity pairingIdentity]
  +[HMFPairingIdentity supportsSecureCoding]

  // instance methods
  -[HMFPairingIdentity publicKey]
  -[HMFPairingIdentity initWithCoder:]
  -[HMFPairingIdentity privateKey]
  -[HMFPairingIdentity .cxx_destruct]
  -[HMFPairingIdentity initWithIdentifier:publicKey:privateKey:]
  -[HMFPairingIdentity attributeDescriptions]
  -[HMFPairingIdentity init]
  -[HMFPairingIdentity isEqual:]
  -[HMFPairingIdentity identifier]
  -[HMFPairingIdentity shortDescription]
  -[HMFPairingIdentity copyWithZone:]
  -[HMFPairingIdentity encodeWithCoder:]
  -[HMFPairingIdentity publicPairingIdentity]


HMFPairingKey : HMFObject <NSSecureCoding, NSCopying>
 @property  NSData *data

  // class methods
  +[HMFPairingKey load]
  +[HMFPairingKey supportsSecureCoding]

  // instance methods
  -[HMFPairingKey initWithCoder:]
  -[HMFPairingKey .cxx_destruct]
  -[HMFPairingKey attributeDescriptions]
  -[HMFPairingKey data]
  -[HMFPairingKey init]
  -[HMFPairingKey isEqual:]
  -[HMFPairingKey initWithPairingKeyData:]
  -[HMFPairingKey copyWithZone:]
  -[HMFPairingKey encodeWithCoder:]


_HMFCFHTTPMessage : HMFObject
 @property  ^{__CFHTTPMessage=} message
 @property  NSDictionary *headerFields
 @property  NSData *body

  // class methods
  +[_HMFCFHTTPMessage dateFormatter]
  +[_HMFCFHTTPMessage requestWithMethod:url:protocolVersion:]
  +[_HMFCFHTTPMessage responseWithStatusCode:statusDescription:protocolVersion:]

  // instance methods
  -[_HMFCFHTTPMessage contentLength]
  -[_HMFCFHTTPMessage body]
  -[_HMFCFHTTPMessage headerFields]
  -[_HMFCFHTTPMessage setContentLength:]
  -[_HMFCFHTTPMessage setContentType:]
  -[_HMFCFHTTPMessage init]
  -[_HMFCFHTTPMessage contentType]
  -[_HMFCFHTTPMessage message]
  -[_HMFCFHTTPMessage setDate:]
  -[_HMFCFHTTPMessage setBody:]
  -[_HMFCFHTTPMessage dealloc]
  -[_HMFCFHTTPMessage date]
  -[_HMFCFHTTPMessage initWithMessageRef:]
  -[_HMFCFHTTPMessage valueForHeaderField:]
  -[_HMFCFHTTPMessage setValue:forHeaderField:]


HMFHTTPRequestHandler : HMFObject
 @property  NSPredicate *methodPredicate
 @property  NSPredicate *URLPredicate
 @property  @? matchBlock
 @property  @? requestBlock

  // class methods
  +[HMFHTTPRequestHandler _isValidMethodPrediate:]
  +[HMFHTTPRequestHandler _isValidURLPredicate:]

  // instance methods
  -[HMFHTTPRequestHandler matchBlock]
  -[HMFHTTPRequestHandler .cxx_destruct]
  -[HMFHTTPRequestHandler init]
  -[HMFHTTPRequestHandler requestBlock]
  -[HMFHTTPRequestHandler initWithMethodPredicate:URLPredicate:matchBlock:]
  -[HMFHTTPRequestHandler setRequestBlock:]
  -[HMFHTTPRequestHandler methodPredicate]
  -[HMFHTTPRequestHandler URLPredicate]


__HMFSoftwareVersionDataSource : HMFObject <HMFSystemInfoSoftwareVersionDataSource>
 @property  HMFSoftwareVersion *softwareVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__HMFSoftwareVersionDataSource softwareVersion]


HMFNetMonitor : HMFObject <HMFLogging>
 @property  BOOL reachable
 @property  <HMFNetMonitorDelegate> *delegate
 @property  HMFNetAddress *netAddress
 @property  unsigned long reachabilityPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFNetMonitor logCategory]

  // instance methods
  -[HMFNetMonitor reachabilityPath]
  -[HMFNetMonitor netAddress]
  -[HMFNetMonitor .cxx_destruct]
  -[HMFNetMonitor setDelegate:]
  -[HMFNetMonitor init]
  -[HMFNetMonitor isReachable]
  -[HMFNetMonitor initWithNetAddress:]
  -[HMFNetMonitor delegate]
  -[HMFNetMonitor setReachable:]
  -[HMFNetMonitor initWithNetService:]


_HMFObjectObserverInternal : HMFObject
 @property  @? deallocationBlock

  // instance methods
  -[_HMFObjectObserverInternal .cxx_destruct]
  -[_HMFObjectObserverInternal setDeallocationBlock:]
  -[_HMFObjectObserverInternal dealloc]
  -[_HMFObjectObserverInternal deallocationBlock]


HMFObjectObserver : HMFObject
 @property  unsigned long cachedHash
 @property  id observedObject
 @property  @? deallocationBlock

  // instance methods
  -[HMFObjectObserver cachedHash]
  -[HMFObjectObserver .cxx_destruct]
  -[HMFObjectObserver _startObserving]
  -[HMFObjectObserver init]
  -[HMFObjectObserver observedObject]
  -[HMFObjectObserver isEqual:]
  -[HMFObjectObserver setDeallocationBlock:]
  -[HMFObjectObserver initWithObservedObject:]
  -[HMFObjectObserver dealloc]
  -[HMFObjectObserver deallocationBlock]
  -[HMFObjectObserver _stopObserving]


HMFDumpCategory : NSObject <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFDumpCategory logCategory]


__HMFWiFiAssertion : HMFAssertion
 @property  HMFWiFiManager *manager
 @property  unsigned long options

  // instance methods
  -[__HMFWiFiAssertion options]
  -[__HMFWiFiAssertion .cxx_destruct]
  -[__HMFWiFiAssertion initWithOptions:manager:reason:]
  -[__HMFWiFiAssertion initWithName:]
  -[__HMFWiFiAssertion manager]
  -[__HMFWiFiAssertion invalidate]
  -[__HMFWiFiAssertion acquire:]


HMFWiFiManager : HMFObject <HMFLogging, HMFWiFiManagerDataSourceDelegate>
 @property  HMFMACAddress *MACAddress
 @property  NSString *currentNetworkSSID
 @property  BOOL active
 @property  BOOL captive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFWiFiManager sharedManager]
  +[HMFWiFiManager logCategory]

  // instance methods
  -[HMFWiFiManager MACAddress]
  -[HMFWiFiManager isActive]
  -[HMFWiFiManager .cxx_destruct]
  -[HMFWiFiManager init]
  -[HMFWiFiManager isCaptive]
  -[HMFWiFiManager beginActiveAssertionWithOptions:reason:]
  -[HMFWiFiManager endActiveAssertion:]
  -[HMFWiFiManager currentNetworkSSID]
  -[HMFWiFiManager initWithWorkQueue:dataSource:]
  -[HMFWiFiManager currentNetworkDidChangeForDataSource:]
  -[HMFWiFiManager dataSource:didChangeWoWState:]
  -[HMFWiFiManager dataSource:didChangeLinkAvailability:]
  -[HMFWiFiManager takeWoWAssertion]
  -[HMFWiFiManager releaseWoWAssertion]


HMFLocationAuthorization : HMFObject <CLLocationManagerDelegate, HMFLogging>
 @property  NSString *bundleIdentifier
 @property  NSBundle *bundle
 @property  CLLocationManager *internal
 @property  int status
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL authorized
 @property  BOOL monitoring
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFLocationAuthorization initialize]
  +[HMFLocationAuthorization automaticallyNotifiesObserversForKey:]
  +[HMFLocationAuthorization sharedAuthorization]
  +[HMFLocationAuthorization logCategory]

  // instance methods
  -[HMFLocationAuthorization internal]
  -[HMFLocationAuthorization unregisterObserver:]
  -[HMFLocationAuthorization requestAuthorization:completionHandler:]
  -[HMFLocationAuthorization bundle]
  -[HMFLocationAuthorization isAuthorized]
  -[HMFLocationAuthorization isMonitoring]
  -[HMFLocationAuthorization mark]
  -[HMFLocationAuthorization registerObserver:]
  -[HMFLocationAuthorization bundleIdentifier]
  -[HMFLocationAuthorization .cxx_destruct]
  -[HMFLocationAuthorization attributeDescriptions]
  -[HMFLocationAuthorization init]
  -[HMFLocationAuthorization setQueue:]
  -[HMFLocationAuthorization locationManagerDidChangeAuthorization:]
  -[HMFLocationAuthorization initWithBundle:]
  -[HMFLocationAuthorization initWithBundleIdentifier:]
  -[HMFLocationAuthorization status]
  -[HMFLocationAuthorization queue]
  -[HMFLocationAuthorization dealloc]
  -[HMFLocationAuthorization logIdentifier]


__HMFRTCSessionFactory : NSObject <HMFRTCSessionFactory>
  // instance methods
  -[__HMFRTCSessionFactory sessionWithServiceName:samplingUUID:containsRealtime:]


_HMFLogBackendSession : NSObject <HMFLogBackendSession, HMFLogging>
 @property  NSUUID *samplingUUID
 @property  BOOL isRealtime
 @property  <_HMFLogBackendSessionDelegate> *delegate
 @property  NSString *serviceName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HMFLogBackendSession logCategory]

  // instance methods
  -[_HMFLogBackendSession serviceName]
  -[_HMFLogBackendSession .cxx_destruct]
  -[_HMFLogBackendSession sendMessage:]
  -[_HMFLogBackendSession setDelegate:]
  -[_HMFLogBackendSession delegate]
  -[_HMFLogBackendSession dealloc]
  -[_HMFLogBackendSession _sendMessagePayload:]
  -[_HMFLogBackendSession _flushQueuedEvents]
  -[_HMFLogBackendSession initWithSession:serviceName:samplingUUID:isRealtime:delegate:]
  -[_HMFLogBackendSession activateWithSession:]
  -[_HMFLogBackendSession samplingUUID]
  -[_HMFLogBackendSession isRealtime]


HMFLogBackendSessionManager : NSObject <_HMFLogBackendSessionDelegate, HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFLogBackendSessionManager logCategory]
  +[HMFLogBackendSessionManager sharedSessionManager]

  // instance methods
  -[HMFLogBackendSessionManager .cxx_destruct]
  -[HMFLogBackendSessionManager init]
  -[HMFLogBackendSessionManager initWithFactory:]
  -[HMFLogBackendSessionManager didCompleteActiveSession]
  -[HMFLogBackendSessionManager __sendMetaEventWithName:correspondingServiceName:]
  -[HMFLogBackendSessionManager logBackendSessionWithServiceName:samplingUUID:isRealtime:]


__HMFIOKitDataSource : HMFObject <HMFSystemInfoSerialNumberDataSource, HMFSystemInfoProductInfoDataSource>
 @property  NSString *serialNumber
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long productPlatform
 @property  long long productClass
 @property  long long productVariant
 @property  NSString *modelIdentifier

  // instance methods
  -[__HMFIOKitDataSource modelIdentifier]
  -[__HMFIOKitDataSource serialNumber]
  -[__HMFIOKitDataSource productPlatform]
  -[__HMFIOKitDataSource productVariant]
  -[__HMFIOKitDataSource productClass]


HMFOperationBudget : HMFObject <HMFLogging, HMFTimerDelegate>
 @property  unsigned long limit
 @property  {_HMFRate=Qd} rate
 @property  unsigned long value
 @property  BOOL full
 @property  BOOL empty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFOperationBudget automaticallyNotifiesObserversForKey:]
  +[HMFOperationBudget logCategory]

  // instance methods
  -[HMFOperationBudget decrement]
  -[HMFOperationBudget isFull]
  -[HMFOperationBudget timerDidFire:]
  -[HMFOperationBudget rate]
  -[HMFOperationBudget isEmpty]
  -[HMFOperationBudget .cxx_destruct]
  -[HMFOperationBudget decrementByCount:]
  -[HMFOperationBudget init]
  -[HMFOperationBudget initWithLimit:rate:]
  -[HMFOperationBudget reset]
  -[HMFOperationBudget value]
  -[HMFOperationBudget limit]


HMFVersion : HMFObject <HMFLocalizable, NSCopying, NSSecureCoding>
 @property  unsigned long majorVersion
 @property  unsigned long minorVersion
 @property  unsigned long updateVersion
 @property  NSString *versionString
 @property  NSString *localizedDescription

  // class methods
  +[HMFVersion supportsSecureCoding]

  // instance methods
  -[HMFVersion localizedDescription]
  -[HMFVersion initWithCoder:]
  -[HMFVersion init]
  -[HMFVersion isEqual:]
  -[HMFVersion compare:]
  -[HMFVersion majorVersion]
  -[HMFVersion initWithVersionString:]
  -[HMFVersion isEqualToVersion:]
  -[HMFVersion minorVersion]
  -[HMFVersion versionString]
  -[HMFVersion copyWithZone:]
  -[HMFVersion updateVersion]
  -[HMFVersion encodeWithCoder:]
  -[HMFVersion isAtLeastVersion:]
  -[HMFVersion initWithMajorVersion:minorVersion:updateVersion:]
  -[HMFVersion isGreaterThanVersion:]


HMFSoftwareVersion : HMFVersion
 @property  NSString *buildVersion
 @property  NSString *shortVersionString

  // class methods
  +[HMFSoftwareVersion supportsSecureCoding]
  +[HMFSoftwareVersion versionFromOperatingSystemVersion:]

  // instance methods
  -[HMFSoftwareVersion buildVersion]
  -[HMFSoftwareVersion operatingSystemVersion]
  -[HMFSoftwareVersion shortVersionString]
  -[HMFSoftwareVersion localizedDescription]
  -[HMFSoftwareVersion initWithCoder:]
  -[HMFSoftwareVersion .cxx_destruct]
  -[HMFSoftwareVersion compare:]
  -[HMFSoftwareVersion initWithVersionString:]
  -[HMFSoftwareVersion versionString]
  -[HMFSoftwareVersion encodeWithCoder:]
  -[HMFSoftwareVersion initWithMajorVersion:minorVersion:updateVersion:]
  -[HMFSoftwareVersion initWithMajorVersion:minorVersion:updateVersion:buildVersion:]


HMFPowerAssertion : HMFAssertion
 @property  unsigned int identifier

  // instance methods
  -[HMFPowerAssertion _cleanUpPowerAssertion]
  -[HMFPowerAssertion initWithName:]
  -[HMFPowerAssertion identifier]
  -[HMFPowerAssertion initWithName:timeout:]
  -[HMFPowerAssertion setIdentifier:]
  -[HMFPowerAssertion invalidate]


HMFLogEventSessionVoucher : NSObject <NSSecureCoding>
 @property  NSString *serviceName
 @property  NSUUID *uuid

  // class methods
  +[HMFLogEventSessionVoucher supportsSecureCoding]

  // instance methods
  -[HMFLogEventSessionVoucher initWithServiceName:]
  -[HMFLogEventSessionVoucher serviceName]
  -[HMFLogEventSessionVoucher initWithCoder:]
  -[HMFLogEventSessionVoucher .cxx_destruct]
  -[HMFLogEventSessionVoucher uuid]
  -[HMFLogEventSessionVoucher encodeWithCoder:]
  -[HMFLogEventSessionVoucher initWithUUID:serviceName:]


HMFLogEventSession : NSObject <HMFLogging>
 @property  <HMFLogBackendSession> *backend
 @property  HMFLogEventSessionVoucher *voucher
 @property  unsigned long signpostId
 @property  NSUUID *uuid
 @property  NSUUID *rootUUID
 @property  NSString *serviceName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFLogEventSession logCategory]
  +[HMFLogEventSession submitEventWithName:serviceName:uploadImmediately:payload:]
  +[HMFLogEventSession backendWithServiceName:samplingUUID:uploadImmediately:]
  +[HMFLogEventSession submitEventWithName:serviceName:payload:]

  // instance methods
  -[HMFLogEventSession serviceName]
  -[HMFLogEventSession .cxx_destruct]
  -[HMFLogEventSession voucher]
  -[HMFLogEventSession backend]
  -[HMFLogEventSession rootUUID]
  -[HMFLogEventSession uuid]
  -[HMFLogEventSession dealloc]
  -[HMFLogEventSession signpostId]
  -[HMFLogEventSession submitEventWithName:payload:]
  -[HMFLogEventSession initWithUUID:backend:]
  -[HMFLogEventSession initWithUUID:serviceName:uploadImmediately:]


HMFLogEventSessionFactory : NSObject
  // class methods
  +[HMFLogEventSessionFactory logCategory]
  +[HMFLogEventSessionFactory backendWithServiceName:samplingUUID:]
  +[HMFLogEventSessionFactory sessionWithUUID:serviceName:parent:]
  +[HMFLogEventSessionFactory sessionWithUUID:serviceName:rootUUID:]


HMFHardwareAddress : HMFObject <HMFObject, NSCopying, NSSecureCoding>
 @property  unsigned long length
 @property  NSData *data
 @property  NSString *formattedString
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFHardwareAddress supportsSecureCoding]

  // instance methods
  -[HMFHardwareAddress formattedString]
  -[HMFHardwareAddress propertyDescription]
  -[HMFHardwareAddress isEqualToAddress:]
  -[HMFHardwareAddress initWithCoder:]
  -[HMFHardwareAddress .cxx_destruct]
  -[HMFHardwareAddress data]
  -[HMFHardwareAddress initWithAddressData:]
  -[HMFHardwareAddress initWithAddressString:length:]
  -[HMFHardwareAddress length]
  -[HMFHardwareAddress isEqual:]
  -[HMFHardwareAddress copyWithZone:]
  -[HMFHardwareAddress encodeWithCoder:]


HMFMACAddress : HMFHardwareAddress <NSCopying, NSSecureCoding>
  // instance methods
  -[HMFMACAddress initWithMACAddressString:]
  -[HMFMACAddress initWithAddressData:]
  -[HMFMACAddress initWithAddressString:length:]


HMFMutableThreadSafeDictionary : NSObject <HMFMutableAssociativeCollection, NSCopying>
 @property  NSDictionary *rawDictionarySnapshot
 @property  unsigned long count
 @property  NSArray *allKeys
 @property  NSArray *allValues

  // class methods
  +[HMFMutableThreadSafeDictionary threadSafeDictionary]

  // instance methods
  -[HMFMutableThreadSafeDictionary objectForKey:]
  -[HMFMutableThreadSafeDictionary objectsForKeys:notFoundMarker:]
  -[HMFMutableThreadSafeDictionary setObject:forKey:]
  -[HMFMutableThreadSafeDictionary objectForKeyedSubscript:]
  -[HMFMutableThreadSafeDictionary allValues]
  -[HMFMutableThreadSafeDictionary .cxx_destruct]
  -[HMFMutableThreadSafeDictionary enumerateKeysAndObjectsWithOptions:usingBlock:]
  -[HMFMutableThreadSafeDictionary count]
  -[HMFMutableThreadSafeDictionary removeObjectForKey:]
  -[HMFMutableThreadSafeDictionary enumerateKeysAndObjectsUsingBlock:]
  -[HMFMutableThreadSafeDictionary removeObjectsForKeys:]
  -[HMFMutableThreadSafeDictionary allKeys]
  -[HMFMutableThreadSafeDictionary setObject:forKeyedSubscript:]
  -[HMFMutableThreadSafeDictionary init]
  -[HMFMutableThreadSafeDictionary keyEnumerator]
  -[HMFMutableThreadSafeDictionary initWithDictionary:]
  -[HMFMutableThreadSafeDictionary copyWithZone:]
  -[HMFMutableThreadSafeDictionary objectEnumerator]
  -[HMFMutableThreadSafeDictionary rawDictionarySnapshot]


HMFMessageTransport : HMFObject
 @property  <HMFMessageTransportDelegate> *delegate

  // instance methods
  -[HMFMessageTransport sendMessage:completionHandler:]
  -[HMFMessageTransport .cxx_destruct]
  -[HMFMessageTransport setDelegate:]
  -[HMFMessageTransport delegate]


HMFNetServiceBrowser : HMFObject <NSNetServiceBrowserDelegate>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSNetServiceBrowser *internal
 @property  BOOL browsing
 @property  @? browseBlock
 @property  <HMFNetServiceBrowserDelegate> *delegate
 @property  NSString *domain
 @property  NSString *serviceType
 @property  BOOL shouldCache
 @property  NSArray *cachedNetServices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFNetServiceBrowser logCategory]
  +[HMFNetServiceBrowser shortDescription]

  // instance methods
  -[HMFNetServiceBrowser internal]
  -[HMFNetServiceBrowser clientQueue]
  -[HMFNetServiceBrowser startBrowsingWithCompletionHandler:]
  -[HMFNetServiceBrowser setBrowsing:]
  -[HMFNetServiceBrowser initWithDomain:serviceType:]
  -[HMFNetServiceBrowser browseBlock]
  -[HMFNetServiceBrowser .cxx_destruct]
  -[HMFNetServiceBrowser netServiceBrowser:didFindService:moreComing:]
  -[HMFNetServiceBrowser isBrowsing]
  -[HMFNetServiceBrowser shouldCache]
  -[HMFNetServiceBrowser domain]
  -[HMFNetServiceBrowser setDelegate:]
  -[HMFNetServiceBrowser descriptionWithPointer:]
  -[HMFNetServiceBrowser init]
  -[HMFNetServiceBrowser stopBrowsing]
  -[HMFNetServiceBrowser netServiceBrowser:didRemoveService:moreComing:]
  -[HMFNetServiceBrowser _stopBrowsingWithError:]
  -[HMFNetServiceBrowser cachedNetServices]
  -[HMFNetServiceBrowser netServiceBrowserWillSearch:]
  -[HMFNetServiceBrowser netServiceBrowser:didNotSearch:]
  -[HMFNetServiceBrowser delegate]
  -[HMFNetServiceBrowser shortDescription]
  -[HMFNetServiceBrowser dealloc]
  -[HMFNetServiceBrowser logIdentifier]
  -[HMFNetServiceBrowser setBrowseBlock:]
  -[HMFNetServiceBrowser netServiceBrowser:didRemoveDomain:moreComing:]
  -[HMFNetServiceBrowser netServiceBrowserDidStopSearch:]
  -[HMFNetServiceBrowser addNetServiceToCache:]
  -[HMFNetServiceBrowser setShouldCache:]
  -[HMFNetServiceBrowser serviceType]


HMFPowerLogger : HMFObject
  // class methods
  +[HMFPowerLogger sharedPowerLogger]

  // instance methods
  -[HMFPowerLogger reportIncomingCloudPush:]
  -[HMFPowerLogger reportRemoteReachabilityRegistrationEvent:clientIdentifier:]
  -[HMFPowerLogger reportIncomingIPEvent:accessoryCategory:]
  -[HMFPowerLogger reportIncomingAdvertisementChange:accessoryCategory:]
  -[HMFPowerLogger linkTypeDescription:]
  -[HMFPowerLogger reportConnection:linkType:]
  -[HMFPowerLogger reportCharacteristicNotificationRegistrationEvent:clientIdentifier:]
  -[HMFPowerLogger reportConnection:linkType:accessoryCategory:]
  -[HMFPowerLogger reportIncomingLoxyMessage:]
  -[HMFPowerLogger reportToPowerLogDestinationTable:withEventDictionary:]
  -[HMFPowerLogger reportIncomingIDSPush:fromToken:]
  -[HMFPowerLogger reportIncomingIPEvent:]
  -[HMFPowerLogger reportIncomingAdvertisementChange:]


HMFMemoryMonitor : HMFObject
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSObject<OS_dispatch_source> *memoryPressureSource
 @property  BOOL monitoring
 @property  long long systemMemoryState

  // class methods
  +[HMFMemoryMonitor memoryMonitor]

  // instance methods
  -[HMFMemoryMonitor isMonitoring]
  -[HMFMemoryMonitor clientQueue]
  -[HMFMemoryMonitor setSystemMemoryState:]
  -[HMFMemoryMonitor setMonitoring:]
  -[HMFMemoryMonitor memoryPressureSource]
  -[HMFMemoryMonitor .cxx_destruct]
  -[HMFMemoryMonitor stop]
  -[HMFMemoryMonitor init]
  -[HMFMemoryMonitor start]
  -[HMFMemoryMonitor dealloc]
  -[HMFMemoryMonitor systemMemoryState]


HMFRingBuffer : HMFObject
 @property  unsigned long capacity
 @property  NSMutableArray *buffer

  // instance methods
  -[HMFRingBuffer containsObject:]
  -[HMFRingBuffer capacity]
  -[HMFRingBuffer initWithCapacity:]
  -[HMFRingBuffer addObject:]
  -[HMFRingBuffer .cxx_destruct]
  -[HMFRingBuffer buffer]


_HMFCFHTTPServer : HMFObject <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  ^{_CFHTTPServer=} internal
 @property  NSMutableArray *connections
 @property  <_HMFCFHTTPServerDelegate> *delegate
 @property  unsigned long port
 @property  double connectionIdleTimeout
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HMFCFHTTPServer logCategory]

  // instance methods
  -[_HMFCFHTTPServer internal]
  -[_HMFCFHTTPServer clientQueue]
  -[_HMFCFHTTPServer port]
  -[_HMFCFHTTPServer isValid]
  -[_HMFCFHTTPServer .cxx_destruct]
  -[_HMFCFHTTPServer connectionIdleTimeout]
  -[_HMFCFHTTPServer setDelegate:]
  -[_HMFCFHTTPServer init]
  -[_HMFCFHTTPServer connections]
  -[_HMFCFHTTPServer setConnectionIdleTimeout:]
  -[_HMFCFHTTPServer delegate]
  -[_HMFCFHTTPServer dealloc]
  -[_HMFCFHTTPServer watchdogTimeout]
  -[_HMFCFHTTPServer invalidate]
  -[_HMFCFHTTPServer logIdentifier]
  -[_HMFCFHTTPServer initWithPort:options:]
  -[_HMFCFHTTPServer setWatchdogTimeout:]


HMFStringIndentation : HMFObject
 @property  unsigned long width
 @property  unsigned long level

  // class methods
  +[HMFStringIndentation indentation]
  +[HMFStringIndentation indentationWithWidth:]

  // instance methods
  -[HMFStringIndentation width]
  -[HMFStringIndentation level]
  -[HMFStringIndentation init]
  -[HMFStringIndentation indentationByLevels:]
  -[HMFStringIndentation initWithWidth:]


HMUIndent : HMFStringIndentation
  // class methods
  +[HMUIndent level]
  +[HMUIndent indentWithLevel:]

  // instance methods
  -[HMUIndent indentByFactor:]


__HMFActivityManager : HMFObject
  // instance methods
  -[__HMFActivityManager .cxx_destruct]
  -[__HMFActivityManager init]


HMFActivity : HMFObject <HMFLogging, HMFObject, HMFActivityMarking>
 @property  NSUUID *identifier
 @property  HMFActivity *parent
 @property  NSString *name
 @property  NSString *clientMetricIdentifier
 @property  unsigned long assertions
 @property  unsigned long options
 @property  BOOL valid
 @property  BOOL started
 @property  BOOL eventReportingEnabled
 @property  HMFLogEventSession *logSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMFActivity initialize]
  +[HMFActivity bundleIdentifier]
  +[HMFActivity activityWithName:block:]
  +[HMFActivity markCurrentActivityWithFormat:]
  +[HMFActivity currentActivityForMarking]
  +[HMFActivity currentActivity]
  +[HMFActivity markCurrentActivity]
  +[HMFActivity activityWithName:parent:block:]
  +[HMFActivity activityWithName:parent:assertions:block:]
  +[HMFActivity logCategory]
  +[HMFActivity shortDescription]
  +[HMFActivity markCurrentActivityWithReason:]
  +[HMFActivity activityWithName:parent:options:block:]

  // instance methods
  -[HMFActivity begin]
  -[HMFActivity mark]
  -[HMFActivity name]
  -[HMFActivity performBlock:]
  -[HMFActivity isValid]
  -[HMFActivity options]
  -[HMFActivity .cxx_destruct]
  -[HMFActivity end]
  -[HMFActivity attributeDescriptions]
  -[HMFActivity initWithName:]
  -[HMFActivity init]
  -[HMFActivity identifier]
  -[HMFActivity assertions]
  -[HMFActivity parent]
  -[HMFActivity hasStarted]
  -[HMFActivity shortDescription]
  -[HMFActivity dealloc]
  -[HMFActivity invalidate]
  -[HMFActivity blockWithBlock:]
  -[HMFActivity logIdentifier]
  -[HMFActivity initWithName:parent:]
  -[HMFActivity enableReportingWithServiceName:]
  -[HMFActivity isEventReportingEnabled]
  -[HMFActivity clientMetricIdentifier]
  -[HMFActivity logSession]
  -[HMFActivity markWithReason:]
  -[HMFActivity setClientMetricIdentifier:]
  -[HMFActivity initWithName:parent:options:]
  -[HMFActivity markWithFormat:]
  -[HMFActivity initWithIdentifier:name:parent:options:]
  -[HMFActivity enableReportingWithServiceName:rootUUID:]
  -[HMFActivity enableReportingWithServiceName:uuid:]
  -[HMFActivity initWithName:parent:assertions:]
  -[HMFActivity initWithIdentifier:name:parent:assertions:]
  -[HMFActivity blockWithQualityOfService:block:]


__HMFThreadContext : HMFObject
 @property  NSThread *thread
 @property  unsigned long count
 @property  NSObject<OS_voucher> *voucher
 @property  BOOL shouldRestoreVoucher

  // class methods
  +[__HMFThreadContext currentContext]

  // instance methods
  -[__HMFThreadContext thread]
  -[__HMFThreadContext .cxx_destruct]
  -[__HMFThreadContext count]
  -[__HMFThreadContext init]
  -[__HMFThreadContext shouldRestoreVoucher]
  -[__HMFThreadContext setShouldRestoreVoucher:]
  -[__HMFThreadContext isEqual:]
  -[__HMFThreadContext voucher]
  -[__HMFThreadContext setVoucher:]
  -[__HMFThreadContext setCount:]
  -[__HMFThreadContext __init]


HMFHTTPResponseInternal : HMFObject <NSCopying>
 @property  long long statusCode
 @property  NSDictionary *headerFields
 @property  NSData *body
 @property  HMFActivity *activity

  // instance methods
  -[HMFHTTPResponseInternal setActivity:]
  -[HMFHTTPResponseInternal body]
  -[HMFHTTPResponseInternal headerFields]
  -[HMFHTTPResponseInternal .cxx_destruct]
  -[HMFHTTPResponseInternal init]
  -[HMFHTTPResponseInternal activity]
  -[HMFHTTPResponseInternal setBody:]
  -[HMFHTTPResponseInternal statusCode]
  -[HMFHTTPResponseInternal copyWithZone:]
  -[HMFHTTPResponseInternal setHeaderFields:]
  -[HMFHTTPResponseInternal setHeaderValue:forHeaderKey:]
  -[HMFHTTPResponseInternal initWithStatusCode:headerFields:body:]


HMFHTTPResponse : HMFObject <NSCopying, NSMutableCopying>
 @property  HMFHTTPResponseInternal *internal
 @property  HMFHTTPRequest *request
 @property  long long statusCode
 @property  NSDictionary *headerFields
 @property  NSData *body

  // instance methods
  -[HMFHTTPResponse internal]
  -[HMFHTTPResponse body]
  -[HMFHTTPResponse headerFields]
  -[HMFHTTPResponse .cxx_destruct]
  -[HMFHTTPResponse attributeDescriptions]
  -[HMFHTTPResponse init]
  -[HMFHTTPResponse request]
  -[HMFHTTPResponse mutableCopyWithZone:]
  -[HMFHTTPResponse statusCode]
  -[HMFHTTPResponse copyWithZone:]
  -[HMFHTTPResponse initWithRequest:internalResponse:]


HMFMutableHTTPResponse : HMFHTTPResponse
 @property  NSData *body

  // instance methods
  -[HMFMutableHTTPResponse setBody:]
  -[HMFMutableHTTPResponse copyWithZone:]
  -[HMFMutableHTTPResponse setHeaderValue:forHeaderKey:]


__HMFLocationAuthorizationRequest : __HMFLocationManagerOperation <HMFLogging>
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[__HMFLocationAuthorizationRequest logCategory]

  // instance methods
  -[__HMFLocationAuthorizationRequest initWithType:]
  -[__HMFLocationAuthorizationRequest main]
  -[__HMFLocationAuthorizationRequest initWithAuthorization:]
  -[__HMFLocationAuthorizationRequest initWithTimeout:]
  -[__HMFLocationAuthorizationRequest type]
  -[__HMFLocationAuthorizationRequest dealloc]
  -[__HMFLocationAuthorizationRequest observeValueForKeyPath:ofObject:change:context:]
  -[__HMFLocationAuthorizationRequest initWithType:authorization:]


HMFAssertion : HMFObject <HMFLogging>
 @property  NSString *name
 @property  NSString *uniqueDescription
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFAssertion bundleIdentifier]
  +[HMFAssertion logCategory]

  // instance methods
  -[HMFAssertion mark]
  -[HMFAssertion name]
  -[HMFAssertion isValid]
  -[HMFAssertion .cxx_destruct]
  -[HMFAssertion initWithName:]
  -[HMFAssertion init]
  -[HMFAssertion dealloc]
  -[HMFAssertion invalidate]
  -[HMFAssertion acquire:]
  -[HMFAssertion logIdentifier]
  -[HMFAssertion uniqueDescription]


HMFObjectCacheNSUUID : NSObject
  // class methods
  +[HMFObjectCacheNSUUID hmf_cachedInstanceForNSString:]
  +[HMFObjectCacheNSUUID hmf_cachedInstanceForNSUUID:]


HMFMessageDispatcher : HMFObject <HMFLogging, HMFTimerDelegate, HMFMessageTransportDelegate>
 @property  BOOL indexed
 @property  BOOL shouldAutomaticallyIndex
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageTransport *transport
 @property  NSSet *filterClasses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFMessageDispatcher allMessagesForMessageNameTarget]
  +[HMFMessageDispatcher logCategory]

  // instance methods
  -[HMFMessageDispatcher isIndexed]
  -[HMFMessageDispatcher sendMessage:completionHandler:]
  -[HMFMessageDispatcher transport]
  -[HMFMessageDispatcher registerForMessage:receiver:selector:]
  -[HMFMessageDispatcher timerDidFire:]
  -[HMFMessageDispatcher dispatchMessage:]
  -[HMFMessageDispatcher messageTransport:didReceiveMessage:]
  -[HMFMessageDispatcher .cxx_destruct]
  -[HMFMessageDispatcher sendMessage:]
  -[HMFMessageDispatcher sendMessage:target:responseQueue:responseHandler:]
  -[HMFMessageDispatcher sendMessageExpectingResponse:]
  -[HMFMessageDispatcher filterClasses]
  -[HMFMessageDispatcher registerForMessage:receiver:policies:messageHandler:]
  -[HMFMessageDispatcher init]
  -[HMFMessageDispatcher dispatchMessage:target:]
  -[HMFMessageDispatcher initWithTransport:]
  -[HMFMessageDispatcher handlersForMessage:]
  -[HMFMessageDispatcher setFilterClasses:]
  -[HMFMessageDispatcher sendMessage:target:andInvokeCompletionHandler:]
  -[HMFMessageDispatcher deregisterReceiver:]
  -[HMFMessageDispatcher workQueue]
  -[HMFMessageDispatcher registerForMessage:receiver:messageHandler:]
  -[HMFMessageDispatcher index]
  -[HMFMessageDispatcher registerForMessage:targetUUID:receiver:policies:selector:]
  -[HMFMessageDispatcher sendMessage:target:]
  -[HMFMessageDispatcher shouldAutomaticallyIndex]
  -[HMFMessageDispatcher sendMessage:target:responseQueue:responseHandler:completionHandler:]
  -[HMFMessageDispatcher setShouldAutomaticallyIndex:]
  -[HMFMessageDispatcher deregisterForMessage:receiver:]
  -[HMFMessageDispatcher registerForMessage:receiver:policies:selector:]


_HMFCFHTTPServerConnection : HMFObject <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSMutableArray *pendingRequests
 @property  NSMutableArray *pendingRespones
 @property  ^{_CFHTTPServerConnection=} internal
 @property  <_HMFCFHTTPServerConnectionDelegate> *delegate
 @property  BOOL valid
 @property  HMFNetAddress *address
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HMFCFHTTPServerConnection logCategory]

  // instance methods
  -[_HMFCFHTTPServerConnection internal]
  -[_HMFCFHTTPServerConnection clientQueue]
  -[_HMFCFHTTPServerConnection pendingRequests]
  -[_HMFCFHTTPServerConnection isValid]
  -[_HMFCFHTTPServerConnection .cxx_destruct]
  -[_HMFCFHTTPServerConnection address]
  -[_HMFCFHTTPServerConnection sendResponse:]
  -[_HMFCFHTTPServerConnection setDelegate:]
  -[_HMFCFHTTPServerConnection init]
  -[_HMFCFHTTPServerConnection isEqual:]
  -[_HMFCFHTTPServerConnection delegate]
  -[_HMFCFHTTPServerConnection close]
  -[_HMFCFHTTPServerConnection dealloc]
  -[_HMFCFHTTPServerConnection invalidate]
  -[_HMFCFHTTPServerConnection logIdentifier]
  -[_HMFCFHTTPServerConnection open]
  -[_HMFCFHTTPServerConnection initWithConnectionRef:]
  -[_HMFCFHTTPServerConnection _handleCompletedReceivedRequest:error:]
  -[_HMFCFHTTPServerConnection _stopReadBody:]
  -[_HMFCFHTTPServerConnection _sendStatusCode:forRequest:]
  -[_HMFCFHTTPServerConnection _sendStatusCode:forRequest:bodyData:]
  -[_HMFCFHTTPServerConnection pendingRespones]
  -[_HMFCFHTTPServerConnection _handleReceivedRequestRef:]
  -[_HMFCFHTTPServerConnection handleRequest:bodyReadStream:eventType:]
  -[_HMFCFHTTPServerConnection _handleCompletedResponse:error:]


HMFPowerManager : HMFObject
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  BOOL running
 @property  ^{IONotificationPort=} notificationPort
 @property  unsigned int interestNotification
 @property  BOOL hasBattery
 @property  long long batteryState
 @property  float batteryLevel

  // class methods
  +[HMFPowerManager sharedManager]

  // instance methods
  -[HMFPowerManager batteryLevel]
  -[HMFPowerManager setRunning:]
  -[HMFPowerManager clientQueue]
  -[HMFPowerManager .cxx_destruct]
  -[HMFPowerManager isRunning]
  -[HMFPowerManager stop]
  -[HMFPowerManager hasBattery]
  -[HMFPowerManager init]
  -[HMFPowerManager updateBatteryState:]
  -[HMFPowerManager batteryState]
  -[HMFPowerManager start]
  -[HMFPowerManager dealloc]
  -[HMFPowerManager _deregisterForPowerSourceNotifications:]
  -[HMFPowerManager _registerForPowerSourceNotifications]
  -[HMFPowerManager notificationPort]
  -[HMFPowerManager interestNotification]


_HMFNetManagerWoWAssertion : HMFObject
  // instance methods
  -[_HMFNetManagerWoWAssertion init]
  -[_HMFNetManagerWoWAssertion dealloc]


HMFNetManager : HMFObject
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  _HMFNetManagerWoWAssertion *wowAssertion

  // class methods
  +[HMFNetManager initialize]
  +[HMFNetManager sharedManager]

  // instance methods
  -[HMFNetManager clientQueue]
  -[HMFNetManager registerWoWAssertionForObject:]
  -[HMFNetManager .cxx_destruct]
  -[HMFNetManager wowAssertion]
  -[HMFNetManager deregisterObject:]
  -[HMFNetManager init]
  -[HMFNetManager setWowAssertion:]
  -[HMFNetManager deregisterWoWAssertionForObject:]


__HMFMobileGesaltDataSource : HMFObject <HMFSystemInfoNameDataSource, HMFSystemInfoMarketingInformationDataSource, HMFSystemInfoSerialNumberDataSource, HMFSystemInfoProductInfoDataSource, HMFSystemInfoSoftwareVersionDataSource, HMFSystemInfoWiFiDataSource, HMFSystemInfoBluetoothLEDataSource, HMFSystemInfoProductColorDataSource>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  ^{MGNotificationTokenStruct=} notificationToken
 @property  <HMFSystemInfoNameDataSourceDelegate> *delegate
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *model
 @property  NSString *regionInfo
 @property  NSString *serialNumber
 @property  long long productPlatform
 @property  long long productClass
 @property  long long productVariant
 @property  NSString *modelIdentifier
 @property  HMFSoftwareVersion *softwareVersion
 @property  HMFMACAddress *WiFiInterfaceMACAddress
 @property  BOOL supportsBLE
 @property  long long productColor

  // instance methods
  -[__HMFMobileGesaltDataSource modelIdentifier]
  -[__HMFMobileGesaltDataSource serialNumber]
  -[__HMFMobileGesaltDataSource supportsBLE]
  -[__HMFMobileGesaltDataSource softwareVersion]
  -[__HMFMobileGesaltDataSource productColor]
  -[__HMFMobileGesaltDataSource WiFiInterfaceMACAddress]
  -[__HMFMobileGesaltDataSource name]
  -[__HMFMobileGesaltDataSource productPlatform]
  -[__HMFMobileGesaltDataSource .cxx_destruct]
  -[__HMFMobileGesaltDataSource setDelegate:]
  -[__HMFMobileGesaltDataSource init]
  -[__HMFMobileGesaltDataSource productVariant]
  -[__HMFMobileGesaltDataSource model]
  -[__HMFMobileGesaltDataSource regionInfo]
  -[__HMFMobileGesaltDataSource delegate]
  -[__HMFMobileGesaltDataSource queue]
  -[__HMFMobileGesaltDataSource dealloc]
  -[__HMFMobileGesaltDataSource productClass]
  -[__HMFMobileGesaltDataSource notificationToken]


HMFWiFiNetworkInfo : HMFObject <HMFObject, NSCopying, NSSecureCoding>
 @property  HMFMACAddress *MACAddress
 @property  NSString *SSID
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFWiFiNetworkInfo supportsSecureCoding]

  // instance methods
  -[HMFWiFiNetworkInfo MACAddress]
  -[HMFWiFiNetworkInfo propertyDescription]
  -[HMFWiFiNetworkInfo initWithCoder:]
  -[HMFWiFiNetworkInfo .cxx_destruct]
  -[HMFWiFiNetworkInfo isEqual:]
  -[HMFWiFiNetworkInfo SSID]
  -[HMFWiFiNetworkInfo copyWithZone:]
  -[HMFWiFiNetworkInfo encodeWithCoder:]
  -[HMFWiFiNetworkInfo initWithMACAddress:SSID:]
  -[HMFWiFiNetworkInfo isEqualToNetworkInfo:]


HMFKey : HMFObject <NSSecureCoding, NSCopying>
 @property  unsigned long size
 @property  NSString *type
 @property  NSData *data

  // class methods
  +[HMFKey supportsSecureCoding]

  // instance methods
  -[HMFKey initWithCoder:]
  -[HMFKey .cxx_destruct]
  -[HMFKey data]
  -[HMFKey init]
  -[HMFKey isEqual:]
  -[HMFKey isEqualToData:]
  -[HMFKey type]
  -[HMFKey initWithType:size:data:]
  -[HMFKey shortDescription]
  -[HMFKey size]
  -[HMFKey copyWithZone:]
  -[HMFKey encodeWithCoder:]


HMFPreferences : HMFObject <HMFObject>
 @property  HMFClassRegistry *classRegistry
 @property  NSArray *preferences
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFPreferences preferenceClassForPreferenceKey:]
  +[HMFPreferences defaultValues]
  +[HMFPreferences setPreferenceClass:forPreferenceKey:]
  +[HMFPreferences classRegistry]
  +[HMFPreferences sharedPreferences]
  +[HMFPreferences setDefaultValue:forPreferenceKey:]
  +[HMFPreferences defaultValueForPreferenceKey:]

  // instance methods
  -[HMFPreferences propertyDescription]
  -[HMFPreferences preferenceClassForPreferenceKey:]
  -[HMFPreferences preferences]
  -[HMFPreferences .cxx_destruct]
  -[HMFPreferences init]
  -[HMFPreferences setPreferenceClass:forPreferenceKey:]
  -[HMFPreferences preferenceForKey:]
  -[HMFPreferences classRegistry]


HMFPreference : HMFObject
 @property  NSString *key
 @property  unsigned long options
 @property  <NSObject> *value
 @property  HMFPreference *parent
 @property  BOOL boolValue
 @property  NSNumber *numberValue
 @property  NSString *stringValue
 @property  NSData *dataValue

  // class methods
  +[HMFPreference shortDescription]

  // instance methods
  -[HMFPreference stringValue]
  -[HMFPreference options]
  -[HMFPreference .cxx_destruct]
  -[HMFPreference numberValue]
  -[HMFPreference init]
  -[HMFPreference boolValue]
  -[HMFPreference setValue:]
  -[HMFPreference parent]
  -[HMFPreference value]
  -[HMFPreference shortDescription]
  -[HMFPreference key]
  -[HMFPreference dataValue]
  -[HMFPreference initWithKey:options:defaultValue:parent:]
  -[HMFPreference initWithKey:options:defaultValue:]


HMFSystemPreference : HMFPreference <HMFObject>
 @property  NSString *domain
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMFSystemPreference propertyDescription]
  -[HMFSystemPreference .cxx_destruct]
  -[HMFSystemPreference domain]
  -[HMFSystemPreference initWithKey:options:domain:defaultValue:parent:]
  -[HMFSystemPreference initWithKey:options:domain:defaultValue:]
  -[HMFSystemPreference initWithKey:options:defaultValue:parent:]


HMFProcessInfo : HMFObject <HMFLogging>
 @property  NSString *applicationIdentifier
 @property  HMFBoolean *codeSigned
 @property  HMFBoolean *platformBinary
 @property  int identifier
 @property  NSString *name
 @property  NSURL *executableURL
 @property  NSURL *mainBundleURL
 @property  NSBundle *mainBundle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFProcessInfo processInfo]
  +[HMFProcessInfo processInfoForXPCConnection:]
  +[HMFProcessInfo logCategory]

  // instance methods
  -[HMFProcessInfo applicationIdentifier]
  -[HMFProcessInfo executableURL]
  -[HMFProcessInfo name]
  -[HMFProcessInfo isPlatformBinary]
  -[HMFProcessInfo initWithIdentifier:]
  -[HMFProcessInfo .cxx_destruct]
  -[HMFProcessInfo getAuditToken:]
  -[HMFProcessInfo attributeDescriptions]
  -[HMFProcessInfo isCodeSigned]
  -[HMFProcessInfo init]
  -[HMFProcessInfo mainBundle]
  -[HMFProcessInfo isEqual:]
  -[HMFProcessInfo valueForEntitlement:]
  -[HMFProcessInfo initWithAuditToken:]
  -[HMFProcessInfo identifier]
  -[HMFProcessInfo mainBundleURL]
  -[HMFProcessInfo shortDescription]
  -[HMFProcessInfo dealloc]
  -[HMFProcessInfo logIdentifier]


HMFDispatchContext : NSObject <HMFAsyncContext>
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[HMFDispatchContext blessWithImplicitContext:]

  // instance methods
  -[HMFDispatchContext performBlock:]
  -[HMFDispatchContext .cxx_destruct]
  -[HMFDispatchContext initWithQueue:]
  -[HMFDispatchContext queue]
  -[HMFDispatchContext dealloc]
  -[HMFDispatchContext assertIsExecuting]
  -[HMFDispatchContext initWithQueue:alwaysDispatch:]


HMFHTTPClientConfiguration : HMFObject <NSCopying>
 @property  BOOL requiresEncryption
 @property  BOOL allowsAnonymousConnection
 @property  BOOL allowsCellularAccess
 @property  BOOL supportsWakeOnLAN
 @property  BOOL monitorsReachability

  // class methods
  +[HMFHTTPClientConfiguration defaultConfiguration]

  // instance methods
  -[HMFHTTPClientConfiguration allowsCellularAccess]
  -[HMFHTTPClientConfiguration setAllowsCellularAccess:]
  -[HMFHTTPClientConfiguration init]
  -[HMFHTTPClientConfiguration copyWithZone:]
  -[HMFHTTPClientConfiguration requiresEncryption]
  -[HMFHTTPClientConfiguration supportsWakeOnLAN]
  -[HMFHTTPClientConfiguration setSupportsWakeOnLAN:]
  -[HMFHTTPClientConfiguration setRequiresEncryption:]
  -[HMFHTTPClientConfiguration setAllowsAnonymousConnection:]
  -[HMFHTTPClientConfiguration setMonitorsReachability:]
  -[HMFHTTPClientConfiguration allowsAnonymousConnection]
  -[HMFHTTPClientConfiguration monitorsReachability]


HMFHTTPClient : HMFObject <HMFLogging, HMFNetMonitorDelegate, HMFTimerDelegate, NSURLSessionDelegate>
 @property  NSURLSession *session
 @property  BOOL active
 @property  HMFNetMonitor *reachabilityMonitor
 @property  NSOperationQueue *reachabilityProbeQueue
 @property  HMFNetManager *netManager
 @property  HMFTimer *delegatedPingTimer
 @property  BOOL pinging
 @property  BOOL reachable
 @property  @? timerFactory
 @property  <HMFHTTPClientDelegate> *delegate
 @property  NSURL *baseURL
 @property  HMFNetService *netService
 @property  unsigned long options
 @property  BOOL allowAnonymousConnection
 @property  HMFHTTPClientConfiguration *configuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFHTTPClient logCategory]
  +[HMFHTTPClient baseURLWithScheme:hostAddress:port:]

  // instance methods
  -[HMFHTTPClient timerDidFire:]
  -[HMFHTTPClient URLSession:didReceiveChallenge:completionHandler:]
  -[HMFHTTPClient isActive]
  -[HMFHTTPClient configuration]
  -[HMFHTTPClient options]
  -[HMFHTTPClient .cxx_destruct]
  -[HMFHTTPClient URLSession:didBecomeInvalidWithError:]
  -[HMFHTTPClient networkMonitorIsUnreachable:]
  -[HMFHTTPClient setDelegate:]
  -[HMFHTTPClient attributeDescriptions]
  -[HMFHTTPClient init]
  -[HMFHTTPClient sendRequest:completionHandler:]
  -[HMFHTTPClient isReachable]
  -[HMFHTTPClient baseURL]
  -[HMFHTTPClient setActive:]
  -[HMFHTTPClient delegate]
  -[HMFHTTPClient setReachable:]
  -[HMFHTTPClient netService]
  -[HMFHTTPClient dealloc]
  -[HMFHTTPClient invalidate]
  -[HMFHTTPClient logIdentifier]
  -[HMFHTTPClient networkMonitorIsReachable:]
  -[HMFHTTPClient session]
  -[HMFHTTPClient timerFactory]
  -[HMFHTTPClient resolveWithCompletionHandler:]
  -[HMFHTTPClient setTimerFactory:]
  -[HMFHTTPClient reachabilityMonitor]
  -[HMFHTTPClient initWithService:configuration:]
  -[HMFHTTPClient cancelPendingRequests]
  -[HMFHTTPClient initWithBaseURL:configuration:]
  -[HMFHTTPClient createNSURLSession:]
  -[HMFHTTPClient initWithBaseURL:configuration:session:reachabilityMonitor:netManager:]
  -[HMFHTTPClient finishCommonInitialization]
  -[HMFHTTPClient initWithService:configuration:session:reachabilityMonitor:netManager:]
  -[HMFHTTPClient isPinging]
  -[HMFHTTPClient reachabilityProbeQueue]
  -[HMFHTTPClient delegatedPingTimer]
  -[HMFHTTPClient requestClientReachabilityPingWithRetry:]
  -[HMFHTTPClient setPinging:]
  -[HMFHTTPClient startDelegatedPingTimer]
  -[HMFHTTPClient stopDelegatedPingTimer]
  -[HMFHTTPClient setDelegatedPingTimer:]
  -[HMFHTTPClient startReachabilityProbe]
  -[HMFHTTPClient _sendRequest:baseURL:completionHandler:]
  -[HMFHTTPClient allowAnonymousConnection]
  -[HMFHTTPClient initWithBaseURL:options:]
  -[HMFHTTPClient initWithNetService:options:]
  -[HMFHTTPClient setAllowAnonymousConnection:]
  -[HMFHTTPClient netManager]


HMFSystemInfo : HMFObject <HMFSystemInfoNameDataSourceDelegate, HMFSystemInfoMigrationDataSourceDelegate>
 @property  <HMFSystemInfoNameDataSource> *nameDataSource
 @property  <HMFSystemInfoMarketingInformationDataSource> *marketingDataSource
 @property  <HMFSystemInfoSerialNumberDataSource> *serialNumberDataSource
 @property  <HMFSystemInfoProductInfoDataSource> *productInfoDataSource
 @property  <HMFSystemInfoSoftwareVersionDataSource> *softwareVersionDataSource
 @property  <HMFSystemInfoMigrationDataSource> *migrationDataSource
 @property  <HMFSystemInfoWiFiDataSource> *WiFiDataSource
 @property  <HMFSystemInfoBluetoothLEDataSource> *bluetoothLEDataSource
 @property  <HMFSystemInfoProductColorDataSource> *productColorDataSource
 @property  NSString *name
 @property  NSString *modelIdentifier
 @property  NSString *model
 @property  NSString *regionInfo
 @property  NSString *serialNumber
 @property  long long productPlatform
 @property  long long productClass
 @property  long long productVariant
 @property  HMFSoftwareVersion *softwareVersion
 @property  BOOL migrating
 @property  HMFMACAddress *WiFiInterfaceMACAddress
 @property  BOOL supportsBLE
 @property  long long productColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFSystemInfo allocWithZone:]
  +[HMFSystemInfo systemInfo]

  // instance methods
  -[HMFSystemInfo modelIdentifier]
  -[HMFSystemInfo serialNumber]
  -[HMFSystemInfo supportsBLE]
  -[HMFSystemInfo softwareVersion]
  -[HMFSystemInfo productColor]
  -[HMFSystemInfo WiFiInterfaceMACAddress]
  -[HMFSystemInfo name]
  -[HMFSystemInfo dataSource:didUpdateName:]
  -[HMFSystemInfo productPlatform]
  -[HMFSystemInfo serialNumberDataSource]
  -[HMFSystemInfo softwareVersionDataSource]
  -[HMFSystemInfo .cxx_destruct]
  -[HMFSystemInfo isMigrating]
  -[HMFSystemInfo bluetoothLEDataSource]
  -[HMFSystemInfo productVariant]
  -[HMFSystemInfo productColorDataSource]
  -[HMFSystemInfo productInfoDataSource]
  -[HMFSystemInfo WiFiDataSource]
  -[HMFSystemInfo nameDataSource]
  -[HMFSystemInfo model]
  -[HMFSystemInfo regionInfo]
  -[HMFSystemInfo migrationDataSource]
  -[HMFSystemInfo marketingDataSource]
  -[HMFSystemInfo productClass]
  -[HMFSystemInfo dataSource:didUpdateMigrating:]


HMFProductInfo : HMFObject <NSCopying, NSSecureCoding>
 @property  long long productPlatform
 @property  long long productClass
 @property  long long productVariant
 @property  HMFSoftwareVersion *softwareVersion
 @property  long long productColor

  // class methods
  +[HMFProductInfo supportsSecureCoding]
  +[HMFProductInfo shortDescription]
  +[HMFProductInfo productInfo]
  +[HMFProductInfo decodeSoftwareVersionWithCoder:]
  +[HMFProductInfo encodeSoftwareVersion:withCoder:]

  // instance methods
  -[HMFProductInfo softwareVersion]
  -[HMFProductInfo productColor]
  -[HMFProductInfo initWithCoder:]
  -[HMFProductInfo productPlatform]
  -[HMFProductInfo .cxx_destruct]
  -[HMFProductInfo descriptionWithPointer:]
  -[HMFProductInfo init]
  -[HMFProductInfo productVariant]
  -[HMFProductInfo isEqual:]
  -[HMFProductInfo shortDescription]
  -[HMFProductInfo copyWithZone:]
  -[HMFProductInfo productClass]
  -[HMFProductInfo encodeWithCoder:]
  -[HMFProductInfo initWithPlatform:class:softwareVersion:]
  -[HMFProductInfo initWithPlatform:class:variant:softwareVersion:color:]
  -[HMFProductInfo initWithPlatform:class:variant:softwareVersion:]


_HMFCFHTTPServerRequest : HMFHTTPRequestInternal
 @property  NSMutableData *bodyData
 @property  ^{_CFHTTPServerRequest=} requestRef
 @property  ^{__CFReadStream=} bodyStream
 @property  _HMFCFHTTPServerConnection *connection

  // instance methods
  -[_HMFCFHTTPServerRequest bodyData]
  -[_HMFCFHTTPServerRequest method]
  -[_HMFCFHTTPServerRequest body]
  -[_HMFCFHTTPServerRequest headerFields]
  -[_HMFCFHTTPServerRequest setURL:]
  -[_HMFCFHTTPServerRequest .cxx_destruct]
  -[_HMFCFHTTPServerRequest attributeDescriptions]
  -[_HMFCFHTTPServerRequest init]
  -[_HMFCFHTTPServerRequest connection]
  -[_HMFCFHTTPServerRequest setHeaders:]
  -[_HMFCFHTTPServerRequest setMethod:]
  -[_HMFCFHTTPServerRequest URL]
  -[_HMFCFHTTPServerRequest setBody:]
  -[_HMFCFHTTPServerRequest dealloc]
  -[_HMFCFHTTPServerRequest responseWithStatusCode:]
  -[_HMFCFHTTPServerRequest initWithConnection:requestRef:]
  -[_HMFCFHTTPServerRequest bodyStream]
  -[_HMFCFHTTPServerRequest appendBodyData:]
  -[_HMFCFHTTPServerRequest requestRef]


HMFCache : HMFObject
 @property  NSURL *URL
 @property  BOOL exists

  // class methods
  +[HMFCache defaultCache]

  // instance methods
  -[HMFCache .cxx_destruct]
  -[HMFCache initWithName:]
  -[HMFCache init]
  -[HMFCache URL]
  -[HMFCache isExists]


HMFMessageInternal : HMFObject <NSCopying>
 @property  NSUUID *identifier
 @property  NSString *name
 @property  double timeout
 @property  long long qualityOfService
 @property  HMFMessageDestination *destination
 @property  HMFMessageTransport *transport
 @property  HMFActivity *activity
 @property  NSDictionary *userInfo
 @property  NSDictionary *headers
 @property  NSDictionary *messagePayload
 @property  HMFLogEventSession *logEventSession
 @property  @? responseHandler

  // instance methods
  -[HMFMessageInternal setTransport:]
  -[HMFMessageInternal transport]
  -[HMFMessageInternal setActivity:]
  -[HMFMessageInternal setUserInfo:]
  -[HMFMessageInternal messagePayload]
  -[HMFMessageInternal name]
  -[HMFMessageInternal setDestination:]
  -[HMFMessageInternal qualityOfService]
  -[HMFMessageInternal .cxx_destruct]
  -[HMFMessageInternal responseHandler]
  -[HMFMessageInternal setName:]
  -[HMFMessageInternal destination]
  -[HMFMessageInternal setMessagePayload:]
  -[HMFMessageInternal setTimeout:]
  -[HMFMessageInternal setQualityOfService:]
  -[HMFMessageInternal setResponseHandler:]
  -[HMFMessageInternal init]
  -[HMFMessageInternal activity]
  -[HMFMessageInternal setHeaders:]
  -[HMFMessageInternal identifier]
  -[HMFMessageInternal timeout]
  -[HMFMessageInternal headers]
  -[HMFMessageInternal setIdentifier:]
  -[HMFMessageInternal userInfo]
  -[HMFMessageInternal copyWithZone:]
  -[HMFMessageInternal logEventSession]
  -[HMFMessageInternal setLogEventSession:]


HMFMessage : HMFObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  HMFMessageInternal *internal
 @property  NSUUID *identifier
 @property  HMFMessageDestination *destination
 @property  NSDictionary *messagePayload
 @property  @? responseHandler
 @property  NSString *name
 @property  double timeout
 @property  long long qualityOfService
 @property  HMFMessageTransport *transport
 @property  HMFActivity *activity
 @property  NSDictionary *userInfo
 @property  NSDictionary *headers
 @property  HMFLogEventSession *logEventSession

  // class methods
  +[HMFMessage messageWithMessage:messagePayload:responseHandler:]
  +[HMFMessage activityNameWithMessageName:]
  +[HMFMessage supportsSecureCoding]
  +[HMFMessage allowedClassesForXPC]
  +[HMFMessage messageWithName:messagePayload:]
  +[HMFMessage messageWithMessage:messagePayload:]
  +[HMFMessage messageWithName:messagePayload:responseHandler:]
  +[HMFMessage messageWithName:qualityOfService:destination:payload:]
  +[HMFMessage shortDescription]
  +[HMFMessage messageWithName:destination:payload:]
  +[HMFMessage messageWithName:identifier:messagePayload:]

  // instance methods
  -[HMFMessage internal]
  -[HMFMessage numberForKey:]
  -[HMFMessage transport]
  -[HMFMessage dateForKey:]
  -[HMFMessage messagePayload]
  -[HMFMessage name]
  -[HMFMessage initWithCoder:]
  -[HMFMessage predicateForKey:]
  -[HMFMessage dataForKey:]
  -[HMFMessage setDestination:]
  -[HMFMessage qualityOfService]
  -[HMFMessage .cxx_destruct]
  -[HMFMessage boolForKey:]
  -[HMFMessage responseHandler]
  -[HMFMessage destination]
  -[HMFMessage setMessagePayload:]
  -[HMFMessage descriptionWithPointer:]
  -[HMFMessage errorForKey:]
  -[HMFMessage setResponseHandler:]
  -[HMFMessage init]
  -[HMFMessage stringForKey:]
  -[HMFMessage activity]
  -[HMFMessage identifier]
  -[HMFMessage arrayForKey:]
  -[HMFMessage URLForKey:]
  -[HMFMessage timeout]
  -[HMFMessage setForKey:]
  -[HMFMessage headers]
  -[HMFMessage setIdentifier:]
  -[HMFMessage mutableCopyWithZone:]
  -[HMFMessage userInfo]
  -[HMFMessage shortDescription]
  -[HMFMessage respondWithError:]
  -[HMFMessage copyWithZone:]
  -[HMFMessage logEventSession]
  -[HMFMessage setLogEventSession:]
  -[HMFMessage encodeWithCoder:]
  -[HMFMessage dictionaryForKey:]
  -[HMFMessage unarchivedObjectForKey:ofClasses:]
  -[HMFMessage respondWithPayload:]
  -[HMFMessage initWithName:destination:payload:]
  -[HMFMessage initWithName:qualityOfService:destination:payload:]
  -[HMFMessage respondWithSuccess]
  -[HMFMessage nullForKey:]
  -[HMFMessage uuidForKey:]
  -[HMFMessage dateComponentsForKey:]
  -[HMFMessage boolForKey:keyPresent:]
  -[HMFMessage timeZoneForKey:]
  -[HMFMessage respondWithPayload:error:]
  -[HMFMessage arrayOfDateComponentsForKey:]
  -[HMFMessage initWithName:qualityOfService:destination:userInfo:headers:payload:]
  -[HMFMessage respondWithOutcomeOf:]
  -[HMFMessage calendarForKey:]
  -[HMFMessage __initWithInternalMessage:]
  -[HMFMessage initWithInternalMessage:]
  -[HMFMessage initWithName:identifier:messagePayload:responseHandler:]
  -[HMFMessage fileHandleForKey:]


HMFMutableMessage : HMFMessage
 @property  NSUUID *identifier
 @property  NSString *name
 @property  double timeout
 @property  long long qualityOfService
 @property  HMFMessageDestination *destination
 @property  HMFMessageTransport *transport
 @property  HMFActivity *activity
 @property  NSDictionary *userInfo
 @property  NSDictionary *headers
 @property  NSDictionary *messagePayload
 @property  HMFLogEventSession *logEventSession
 @property  @? responseHandler

  // instance methods
  -[HMFMutableMessage setTransport:]
  -[HMFMutableMessage setActivity:]
  -[HMFMutableMessage setUserInfo:]
  -[HMFMutableMessage setName:]
  -[HMFMutableMessage setTimeout:]
  -[HMFMutableMessage setQualityOfService:]
  -[HMFMutableMessage setHeaders:]
  -[HMFMutableMessage setUserInfoValue:forKey:]
  -[HMFMutableMessage setHeaderValue:forKey:]
  -[HMFMutableMessage mutableCopyWithZone:]
  -[HMFMutableMessage copyWithZone:]


HMFObjectCacheNSString : NSObject
  // class methods
  +[HMFObjectCacheNSString hmf_setOfCachedInstancesForStrings:]
  +[HMFObjectCacheNSString hmf_cachedInstanceForString:]


HMFOrderedDictionary : NSObject <HMFAssociativeCollection, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  unsigned long count
 @property  NSArray *allKeys
 @property  NSArray *allValues

  // class methods
  +[HMFOrderedDictionary supportsSecureCoding]
  +[HMFOrderedDictionary orderedDictionary]
  +[HMFOrderedDictionary orderedDictionaryWithObject:forKey:]

  // instance methods
  -[HMFOrderedDictionary objectForKey:]
  -[HMFOrderedDictionary initWithObjects:forKeys:]
  -[HMFOrderedDictionary objectsForKeys:notFoundMarker:]
  -[HMFOrderedDictionary initWithObject:forKey:]
  -[HMFOrderedDictionary initWithCoder:]
  -[HMFOrderedDictionary objectForKeyedSubscript:]
  -[HMFOrderedDictionary allValues]
  -[HMFOrderedDictionary .cxx_destruct]
  -[HMFOrderedDictionary enumerateKeysAndObjectsWithOptions:usingBlock:]
  -[HMFOrderedDictionary count]
  -[HMFOrderedDictionary enumerateKeysAndObjectsUsingBlock:]
  -[HMFOrderedDictionary allKeys]
  -[HMFOrderedDictionary init]
  -[HMFOrderedDictionary isEqual:]
  -[HMFOrderedDictionary keyEnumerator]
  -[HMFOrderedDictionary mutableCopyWithZone:]
  -[HMFOrderedDictionary copyWithZone:]
  -[HMFOrderedDictionary objectEnumerator]
  -[HMFOrderedDictionary encodeWithCoder:]
  -[HMFOrderedDictionary initWithObjects:orderedKeySet:]
  -[HMFOrderedDictionary initWithObjects:forKeys:copyObjects:copyKeys:]
  -[HMFOrderedDictionary initBySortingDictionary:copyItems:keyComparator:]
  -[HMFOrderedDictionary initBySortingDictionary:]
  -[HMFOrderedDictionary unorderedCopy]
  -[HMFOrderedDictionary mutableUnorderedCopy]


HMFMutableOrderedDictionary : HMFOrderedDictionary <HMFMutableAssociativeCollection>
 @property  unsigned long count
 @property  NSArray *allKeys
 @property  NSArray *allValues

  // instance methods
  -[HMFMutableOrderedDictionary setObject:forKey:]
  -[HMFMutableOrderedDictionary initWithCapacity:]
  -[HMFMutableOrderedDictionary allValues]
  -[HMFMutableOrderedDictionary removeObjectForKey:]
  -[HMFMutableOrderedDictionary removeObjectsForKeys:]
  -[HMFMutableOrderedDictionary allKeys]
  -[HMFMutableOrderedDictionary setObject:forKeyedSubscript:]
  -[HMFMutableOrderedDictionary setOrderedDictionary:]
  -[HMFMutableOrderedDictionary copyWithZone:]
  -[HMFMutableOrderedDictionary initWithObjects:orderedKeySet:]
  -[HMFMutableOrderedDictionary initWithObjects:forKeys:copyObjects:copyKeys:]
  -[HMFMutableOrderedDictionary setBySortingDictionary:keyComparator:]
  -[HMFMutableOrderedDictionary setBySortingDictionary:]


__HMFSystemConfigurationDataSource : HMFObject <HMFSystemInfoNameDataSource>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  ^{__SCDynamicStore=} store
 @property  <HMFSystemInfoNameDataSourceDelegate> *delegate
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__HMFSystemConfigurationDataSource name]
  -[__HMFSystemConfigurationDataSource .cxx_destruct]
  -[__HMFSystemConfigurationDataSource setDelegate:]
  -[__HMFSystemConfigurationDataSource init]
  -[__HMFSystemConfigurationDataSource store]
  -[__HMFSystemConfigurationDataSource delegate]
  -[__HMFSystemConfigurationDataSource queue]
  -[__HMFSystemConfigurationDataSource dealloc]


HMFOperationFutureAdapter : NSObject
  // instance methods
  -[HMFOperationFutureAdapter .cxx_destruct]
  -[HMFOperationFutureAdapter observeValueForKeyPath:ofObject:change:context:]


HMFHTTPClientConnection : HMFObject <_HMFCFHTTPServerConnectionDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSMutableArray *pendingRespones
 @property  _HMFCFHTTPServerConnection *internal
 @property  HMFNetAddress *peerAddress
 @property  <HMFHTTPClientConnectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFHTTPClientConnection logCategory]

  // instance methods
  -[HMFHTTPClientConnection internal]
  -[HMFHTTPClientConnection openWithCompletionHandler:]
  -[HMFHTTPClientConnection peerAddress]
  -[HMFHTTPClientConnection clientQueue]
  -[HMFHTTPClientConnection .cxx_destruct]
  -[HMFHTTPClientConnection setDelegate:]
  -[HMFHTTPClientConnection attributeDescriptions]
  -[HMFHTTPClientConnection initWithConnection:]
  -[HMFHTTPClientConnection delegate]
  -[HMFHTTPClientConnection shortDescription]
  -[HMFHTTPClientConnection close]
  -[HMFHTTPClientConnection dealloc]
  -[HMFHTTPClientConnection logIdentifier]
  -[HMFHTTPClientConnection sendResponse:completionHandler:]
  -[HMFHTTPClientConnection connection:didReceiveRequest:]
  -[HMFHTTPClientConnection pendingRespones]


__HMFMessageHandler : HMFObject <HMFLogging, HMFObject>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <HMFMessageReceiver> *receiver
 @property  NSString *name
 @property  NSUUID *target
 @property  NSArray *policies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[__HMFMessageHandler logCategory]
  +[__HMFMessageHandler handlerWithReceiver:targetUUID:name:policies:selector:]
  +[__HMFMessageHandler handlerWithReceiver:name:policies:handler:]

  // instance methods
  -[__HMFMessageHandler name]
  -[__HMFMessageHandler invokeWithMessage:]
  -[__HMFMessageHandler .cxx_destruct]
  -[__HMFMessageHandler attributeDescriptions]
  -[__HMFMessageHandler isEqual:]
  -[__HMFMessageHandler hasReceiver:]
  -[__HMFMessageHandler target]
  -[__HMFMessageHandler queue]
  -[__HMFMessageHandler shortDescription]
  -[__HMFMessageHandler initWithReceiver:targetUUID:name:policies:]
  -[__HMFMessageHandler logIdentifier]
  -[__HMFMessageHandler receiver]
  -[__HMFMessageHandler policies]


__HMFBlockMessageHandler : __HMFMessageHandler
 @property  @? handler

  // instance methods
  -[__HMFBlockMessageHandler invokeWithMessage:]
  -[__HMFBlockMessageHandler .cxx_destruct]
  -[__HMFBlockMessageHandler handler]


__HMFSelectorMessageHandler : __HMFMessageHandler
 @property  SEL selector

  // instance methods
  -[__HMFSelectorMessageHandler selector]
  -[__HMFSelectorMessageHandler invokeWithMessage:]
  -[__HMFSelectorMessageHandler isEqual:]


__HMFDispatchExecutorMessageHandler : __HMFMessageHandler
 @property  SEL selector

  // instance methods
  -[__HMFDispatchExecutorMessageHandler selector]
  -[__HMFDispatchExecutorMessageHandler invokeWithMessage:]
  -[__HMFDispatchExecutorMessageHandler isEqual:]


HMFNotificationCenter : NSObject
  // class methods
  +[HMFNotificationCenter defaultCenter]

  // instance methods
  -[HMFNotificationCenter removeObserver:name:object:]
  -[HMFNotificationCenter addObserver:selector:name:object:]
  -[HMFNotificationCenter postNotification:]
  -[HMFNotificationCenter removeObserver:]
  -[HMFNotificationCenter postNotificationName:object:userInfo:]
  -[HMFNotificationCenter postNotificationName:object:]


__HMFEmbeddedSystemInfo : HMFSystemInfo
  // instance methods
  -[__HMFEmbeddedSystemInfo init]


HMFNetAddressInternal : HMFObject
 @property  unsigned long addressFamily
 @property  NSString *addressString

  // instance methods
  -[HMFNetAddressInternal dataUsingEncoding:]
  -[HMFNetAddressInternal .cxx_destruct]
  -[HMFNetAddressInternal addressString]
  -[HMFNetAddressInternal addressFamily]


_HMFNetAddressIPV4 : HMFNetAddressInternal
  // instance methods
  -[_HMFNetAddressIPV4 dataUsingEncoding:]
  -[_HMFNetAddressIPV4 init]
  -[_HMFNetAddressIPV4 addressString]
  -[_HMFNetAddressIPV4 isEqual:]
  -[_HMFNetAddressIPV4 addressFamily]
  -[_HMFNetAddressIPV4 initWithSocketAddress:]


_HMFNetAddressIPV6 : HMFNetAddressInternal
  // instance methods
  -[_HMFNetAddressIPV6 dataUsingEncoding:]
  -[_HMFNetAddressIPV6 init]
  -[_HMFNetAddressIPV6 addressString]
  -[_HMFNetAddressIPV6 isEqual:]
  -[_HMFNetAddressIPV6 addressFamily]
  -[_HMFNetAddressIPV6 initWithSocketAddress:]


_HMFNetAddressHostname : HMFNetAddressInternal
 @property  NSString *hostname

  // class methods
  +[_HMFNetAddressHostname normalizedHostname:]

  // instance methods
  -[_HMFNetAddressHostname hostname]
  -[_HMFNetAddressHostname .cxx_destruct]
  -[_HMFNetAddressHostname init]
  -[_HMFNetAddressHostname addressString]
  -[_HMFNetAddressHostname isEqual:]
  -[_HMFNetAddressHostname initWithHostname:]


HMFNetAddress : HMFObject
 @property  HMFNetAddressInternal *internal
 @property  unsigned long addressFamily
 @property  NSString *addressString

  // class methods
  +[HMFNetAddress localAddress]

  // instance methods
  -[HMFNetAddress internal]
  -[HMFNetAddress dataUsingEncoding:]
  -[HMFNetAddress .cxx_destruct]
  -[HMFNetAddress attributeDescriptions]
  -[HMFNetAddress init]
  -[HMFNetAddress addressString]
  -[HMFNetAddress isEqual:]
  -[HMFNetAddress initWithHostname:]
  -[HMFNetAddress addressFamily]
  -[HMFNetAddress initWithSocketAddress:]


__HMFSetupAssistantDataSource : HMFObject <HMFSystemInfoMigrationDataSource>
 @property  <HMFSystemInfoMigrationDataSourceDelegate> *delegate
 @property  BOOL migrating
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__HMFSetupAssistantDataSource .cxx_destruct]
  -[__HMFSetupAssistantDataSource setDelegate:]
  -[__HMFSetupAssistantDataSource isMigrating]
  -[__HMFSetupAssistantDataSource init]
  -[__HMFSetupAssistantDataSource delegate]
  -[__HMFSetupAssistantDataSource dealloc]


__HMFNetServiceMonitor : HMFNetMonitor
 @property  HMFNetService *service

  // instance methods
  -[__HMFNetServiceMonitor reachabilityPath]
  -[__HMFNetServiceMonitor netAddress]
  -[__HMFNetServiceMonitor .cxx_destruct]
  -[__HMFNetServiceMonitor initWithNetAddress:]
  -[__HMFNetServiceMonitor service]
  -[__HMFNetServiceMonitor dealloc]
  -[__HMFNetServiceMonitor logIdentifier]
  -[__HMFNetServiceMonitor initWithNetService:]
  -[__HMFNetServiceMonitor observeValueForKeyPath:ofObject:change:context:]


HMFDigest : HMFObject <HMFObject, NSCopying, NSSecureCoding>
 @property  long long algorithm
 @property  NSData *value
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFDigest supportsSecureCoding]

  // instance methods
  -[HMFDigest propertyDescription]
  -[HMFDigest algorithm]
  -[HMFDigest initWithCoder:]
  -[HMFDigest .cxx_destruct]
  -[HMFDigest init]
  -[HMFDigest isEqual:]
  -[HMFDigest value]
  -[HMFDigest copyWithZone:]
  -[HMFDigest encodeWithCoder:]
  -[HMFDigest initWithAlgorithm:value:]


HMFOperation : NSOperation <HMFLogging, HMFTimerDelegate>
 @property  NSUUID *identifier
 @property  HMFTimer *timer
 @property  NSObject<OS_dispatch_queue> *underlyingQueue
 @property  HMFActivity *activity
 @property  NSDate *timeoutDate
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFOperation automaticallyNotifiesObserversForKey:]
  +[HMFOperation logCategory]

  // instance methods
  -[HMFOperation isAsynchronous]
  -[HMFOperation setActivity:]
  -[HMFOperation timerDidFire:]
  -[HMFOperation isFinished]
  -[HMFOperation main]
  -[HMFOperation .cxx_destruct]
  -[HMFOperation initWithTimeout:]
  -[HMFOperation isExecuting]
  -[HMFOperation setQualityOfService:]
  -[HMFOperation init]
  -[HMFOperation timer]
  -[HMFOperation activity]
  -[HMFOperation identifier]
  -[HMFOperation cancel]
  -[HMFOperation finish]
  -[HMFOperation start]
  -[HMFOperation cancelWithError:]
  -[HMFOperation logIdentifier]
  -[HMFOperation error]
  -[HMFOperation underlyingQueue]
  -[HMFOperation timeoutDate]


HMFBlockOperation : HMFOperation
 @property  NSArray *executionBlocks

  // class methods
  +[HMFBlockOperation blockOperationWithBlock:]

  // instance methods
  -[HMFBlockOperation main]
  -[HMFBlockOperation executionBlocks]
  -[HMFBlockOperation .cxx_destruct]
  -[HMFBlockOperation initWithTimeout:]
  -[HMFBlockOperation addExecutionBlock:]


HMFWeakObject : HMFObject
 @property  unsigned long objectHash
 @property  id object

  // instance methods
  -[HMFWeakObject .cxx_destruct]
  -[HMFWeakObject objectHash]
  -[HMFWeakObject init]
  -[HMFWeakObject isEqual:]
  -[HMFWeakObject object]
  -[HMFWeakObject initWithWeakObject:]


_HMFMainThreadAsyncContext : NSObject <HMFAsyncContext>
  // instance methods
  -[_HMFMainThreadAsyncContext performBlock:]
  -[_HMFMainThreadAsyncContext assertIsExecuting]


_HMFCallerAsyncContext : NSObject <HMFAsyncContext>
  // instance methods
  -[_HMFCallerAsyncContext performBlock:]
  -[_HMFCallerAsyncContext assertIsExecuting]


HMFWiFiManagerDataSource : HMFObject <HMFWiFiManagerDataSource>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  ^{__WiFiManagerClient=} wifiClientReference
 @property  ^{__WiFiDeviceClient=} wifiDeviceReference
 @property  ^{__WiFiNetwork=} currentNetwork
 @property  r^{__SCDynamicStore=} scStore
 @property  int captiveCached
 @property  NSLock *captiveCachedLock
 @property  <HMFWiFiManagerDataSourceDelegate> *delegate
 @property  BOOL assertionActive
 @property  unsigned long assertionOptions
 @property  BOOL wowAsserted
 @property  NSString *currentNetworkSSID
 @property  BOOL captive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFWiFiManagerDataSource MACAddressString]

  // instance methods
  -[HMFWiFiManagerDataSource currentNetwork]
  -[HMFWiFiManagerDataSource .cxx_destruct]
  -[HMFWiFiManagerDataSource setCurrentNetwork:]
  -[HMFWiFiManagerDataSource setDelegate:]
  -[HMFWiFiManagerDataSource activateWithOptions:]
  -[HMFWiFiManagerDataSource _setCurrentNetwork:]
  -[HMFWiFiManagerDataSource workQueue]
  -[HMFWiFiManagerDataSource delegate]
  -[HMFWiFiManagerDataSource deactivate]
  -[HMFWiFiManagerDataSource dealloc]
  -[HMFWiFiManagerDataSource scStore]
  -[HMFWiFiManagerDataSource isCaptive]
  -[HMFWiFiManagerDataSource initWithWorkQueue:]
  -[HMFWiFiManagerDataSource currentNetworkSSID]
  -[HMFWiFiManagerDataSource isAssertionActive]
  -[HMFWiFiManagerDataSource assertionOptions]
  -[HMFWiFiManagerDataSource setWoWAsserted:]
  -[HMFWiFiManagerDataSource performBlockAfterWoWReassertionDelay:]
  -[HMFWiFiManagerDataSource startWithWiFiDevice:]
  -[HMFWiFiManagerDataSource _registerForCaptiveStateChanges]
  -[HMFWiFiManagerDataSource wifiClientReference]
  -[HMFWiFiManagerDataSource wifiDeviceReference]
  -[HMFWiFiManagerDataSource setCaptiveCached:]
  -[HMFWiFiManagerDataSource setWifiDeviceReference:]
  -[HMFWiFiManagerDataSource _invalidateCaptiveState]
  -[HMFWiFiManagerDataSource isWoWAsserted]
  -[HMFWiFiManagerDataSource handleWiFiLinkChangedWithEventDictionary:]
  -[HMFWiFiManagerDataSource setScStore:]
  -[HMFWiFiManagerDataSource captiveCached]
  -[HMFWiFiManagerDataSource captiveCachedLock]
  -[HMFWiFiManagerDataSource setCaptiveCachedLock:]


HMFMessageDestination : HMFObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *target
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFMessageDestination allMessageDestinations]
  +[HMFMessageDestination supportsSecureCoding]
  +[HMFMessageDestination allMessageTargets]

  // instance methods
  -[HMFMessageDestination initWithCoder:]
  -[HMFMessageDestination initWithTarget:]
  -[HMFMessageDestination .cxx_destruct]
  -[HMFMessageDestination attributeDescriptions]
  -[HMFMessageDestination init]
  -[HMFMessageDestination isEqual:]
  -[HMFMessageDestination target]
  -[HMFMessageDestination shortDescription]
  -[HMFMessageDestination copyWithZone:]
  -[HMFMessageDestination encodeWithCoder:]


HMFHTTPRequestInternal : HMFObject
 @property  NSURL *URL
 @property  NSString *method
 @property  NSDictionary *headerFields
 @property  NSData *body
 @property  HMFActivity *activity

  // instance methods
  -[HMFHTTPRequestInternal method]
  -[HMFHTTPRequestInternal body]
  -[HMFHTTPRequestInternal headerFields]
  -[HMFHTTPRequestInternal setURL:]
  -[HMFHTTPRequestInternal .cxx_destruct]
  -[HMFHTTPRequestInternal init]
  -[HMFHTTPRequestInternal activity]
  -[HMFHTTPRequestInternal setMethod:]
  -[HMFHTTPRequestInternal URL]
  -[HMFHTTPRequestInternal setBody:]
  -[HMFHTTPRequestInternal setHeaderFields:]
  -[HMFHTTPRequestInternal responseWithStatusCode:]
  -[HMFHTTPRequestInternal setHeaderValue:forHeaderKey:]


HMFHTTPRequest : HMFObject
 @property  double timeoutInterval
 @property  HMFHTTPRequestInternal *internal
 @property  NSURL *URL
 @property  NSString *method
 @property  NSDictionary *headerFields
 @property  NSData *body
 @property  NSURLRequest *urlRequest

  // instance methods
  -[HMFHTTPRequest internal]
  -[HMFHTTPRequest urlRequest]
  -[HMFHTTPRequest method]
  -[HMFHTTPRequest body]
  -[HMFHTTPRequest headerFields]
  -[HMFHTTPRequest .cxx_destruct]
  -[HMFHTTPRequest attributeDescriptions]
  -[HMFHTTPRequest init]
  -[HMFHTTPRequest timeoutInterval]
  -[HMFHTTPRequest URL]
  -[HMFHTTPRequest setTimeoutInterval:]
  -[HMFHTTPRequest responseWithStatusCode:]
  -[HMFHTTPRequest initWithInternalRequest:]


HMFMutableHTTPRequest : HMFHTTPRequest
 @property  double timeoutInterval
 @property  NSData *body
 @property  NSDictionary *headerFields

  // instance methods
  -[HMFMutableHTTPRequest setBody:]
  -[HMFMutableHTTPRequest responseWithStatusCode:]
  -[HMFMutableHTTPRequest setHeaderValue:forHeaderKey:]
  -[HMFMutableHTTPRequest initWithURL:method:body:timeoutInterval:]
  -[HMFMutableHTTPRequest initWithInternalRequest:]


HMFMessageFilter : HMFObject <HMFLogging, HMFObject>
 @property  HMFMessage *message
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMFMessageFilter logCategory]
  +[HMFMessageFilter policyClasses]
  +[HMFMessageFilter canInitWithMessage:]

  // instance methods
  -[HMFMessageFilter .cxx_destruct]
  -[HMFMessageFilter initWithMessage:]
  -[HMFMessageFilter attributeDescriptions]
  -[HMFMessageFilter init]
  -[HMFMessageFilter message]
  -[HMFMessageFilter logIdentifier]
  -[HMFMessageFilter acceptWithPolicies:error:]


HMFObject : NSObject <HMFObject>
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFObject shortDescription]

  // instance methods
  -[HMFObject redactedDescription]
  -[HMFObject privateDescription]
  -[HMFObject shortDescription]


HMFAttributeDescription : NSObject <HMFObject>
 @property  NSString *name
 @property  <NSObject> *value
 @property  unsigned long options
 @property  NSFormatter *formatter
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFAttributeDescription shortDescription]

  // instance methods
  -[HMFAttributeDescription initWithName:value:]
  -[HMFAttributeDescription formatter]
  -[HMFAttributeDescription name]
  -[HMFAttributeDescription privateDescription]
  -[HMFAttributeDescription options]
  -[HMFAttributeDescription .cxx_destruct]
  -[HMFAttributeDescription init]
  -[HMFAttributeDescription isEqual:]
  -[HMFAttributeDescription value]
  -[HMFAttributeDescription shortDescription]
  -[HMFAttributeDescription initWithName:value:options:formatter:]


HMFClassRegistry : HMFObject
 @property  Class defaultClass

  // instance methods
  -[HMFClassRegistry .cxx_destruct]
  -[HMFClassRegistry defaultClass]
  -[HMFClassRegistry init]
  -[HMFClassRegistry classForKey:]
  -[HMFClassRegistry initWithDefaultClass:]
  -[HMFClassRegistry setClass:forKey:]


_HMFCFHTTPServerResponse : HMFHTTPResponseInternal
 @property  _HMFCFHTTPMessage *response
 @property  _HMFCFHTTPServerRequest *request
 @property  ^{_CFHTTPServerResponse=} responseRef
 @property  @? completionHandler

  // instance methods
  -[_HMFCFHTTPServerResponse body]
  -[_HMFCFHTTPServerResponse headerFields]
  -[_HMFCFHTTPServerResponse .cxx_destruct]
  -[_HMFCFHTTPServerResponse attributeDescriptions]
  -[_HMFCFHTTPServerResponse request]
  -[_HMFCFHTTPServerResponse setCompletionHandler:]
  -[_HMFCFHTTPServerResponse response]
  -[_HMFCFHTTPServerResponse setBody:]
  -[_HMFCFHTTPServerResponse dealloc]
  -[_HMFCFHTTPServerResponse completionHandler]
  -[_HMFCFHTTPServerResponse copyWithZone:]
  -[_HMFCFHTTPServerResponse setHeaderValue:forHeaderKey:]
  -[_HMFCFHTTPServerResponse initWithRequest:statusCode:]
  -[_HMFCFHTTPServerResponse responseRef]


__HMFLocationManagerOperation : HMFOperation <HMFLogging>
 @property  HMFLocationAuthorization *authorization
 @property  CLLocationManager *manager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[__HMFLocationManagerOperation initialize]
  +[__HMFLocationManagerOperation automaticallyNotifiesObserversForKey:]
  +[__HMFLocationManagerOperation logCategory]

  // instance methods
  -[__HMFLocationManagerOperation main]
  -[__HMFLocationManagerOperation initWithAuthorization:]
  -[__HMFLocationManagerOperation .cxx_destruct]
  -[__HMFLocationManagerOperation isReady]
  -[__HMFLocationManagerOperation initWithTimeout:]
  -[__HMFLocationManagerOperation authorization]
  -[__HMFLocationManagerOperation manager]
  -[__HMFLocationManagerOperation dealloc]
  -[__HMFLocationManagerOperation observeValueForKeyPath:ofObject:change:context:]


HMFCancellationHandler : HMFObject <HMFCancellable>
  // instance methods
  -[HMFCancellationHandler .cxx_destruct]
  -[HMFCancellationHandler initWithBlock:]
  -[HMFCancellationHandler cancel]


HMFHTTPServer : HMFObject <_HMFCFHTTPServerDelegate, HMFHTTPClientConnectionDelegate, HMFLogging, HMFDumpState>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  _HMFCFHTTPServer *internal
 @property  <HMFHTTPServerDelegate> *delegate
 @property  NSString *serviceType
 @property  NSString *name
 @property  unsigned long port
 @property  unsigned long options
 @property  double connectionIdleTimeout
 @property  HMFMutableNetService *netService
 @property  NSArray *connections
 @property  NSArray *requestHandlers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFHTTPServer logCategory]

  // instance methods
  -[HMFHTTPServer internal]
  -[HMFHTTPServer addConnection:]
  -[HMFHTTPServer removeConnection:]
  -[HMFHTTPServer clientQueue]
  -[HMFHTTPServer name]
  -[HMFHTTPServer port]
  -[HMFHTTPServer options]
  -[HMFHTTPServer .cxx_destruct]
  -[HMFHTTPServer connectionIdleTimeout]
  -[HMFHTTPServer stop]
  -[HMFHTTPServer setDelegate:]
  -[HMFHTTPServer attributeDescriptions]
  -[HMFHTTPServer init]
  -[HMFHTTPServer connections]
  -[HMFHTTPServer setConnectionIdleTimeout:]
  -[HMFHTTPServer startWithCompletionHandler:]
  -[HMFHTTPServer dumpState]
  -[HMFHTTPServer setInternal:]
  -[HMFHTTPServer delegate]
  -[HMFHTTPServer netService]
  -[HMFHTTPServer stopWithError:]
  -[HMFHTTPServer shortDescription]
  -[HMFHTTPServer dealloc]
  -[HMFHTTPServer requestHandlers]
  -[HMFHTTPServer logIdentifier]
  -[HMFHTTPServer serviceType]
  -[HMFHTTPServer registerRequestHandler:]
  -[HMFHTTPServer _stopWithError:]
  -[HMFHTTPServer initWithServiceType:name:port:options:]
  -[HMFHTTPServer server:didOpenConnection:]
  -[HMFHTTPServer server:didCloseConnection:]
  -[HMFHTTPServer serverDidInvalidate:]
  -[HMFHTTPServer connection:didReceiveRequest:]
  -[HMFHTTPServer _handleOpenedConnection:]
  -[HMFHTTPServer _handleClosedConnection:]
  -[HMFHTTPServer _handleReceivedRequest:connection:]
  -[HMFHTTPServer unregisterRequestHandler:]


HMFBoolean : NSNumber
  // class methods
  +[HMFBoolean numberWithInt:]
  +[HMFBoolean numberWithBool:]
  +[HMFBoolean numberWithUnsignedLongLong:]
  +[HMFBoolean numberWithUnsignedInt:]
  +[HMFBoolean numberWithUnsignedChar:]
  +[HMFBoolean numberWithFloat:]
  +[HMFBoolean numberWithDouble:]
  +[HMFBoolean numberWithInteger:]
  +[HMFBoolean numberWithUnsignedInteger:]
  +[HMFBoolean numberWithUnsignedShort:]
  +[HMFBoolean numberWithLongLong:]
  +[HMFBoolean numberWithUnsignedLong:]
  +[HMFBoolean allocWithZone:]
  +[HMFBoolean numberWithLong:]
  +[HMFBoolean supportsSecureCoding]
  +[HMFBoolean numberWithChar:]
  +[HMFBoolean numberWithShort:]
  +[HMFBoolean booleanWithBool:]

  // instance methods
  -[HMFBoolean initWithBool:]
  -[HMFBoolean objCType]
  -[HMFBoolean classForCoder]
  -[HMFBoolean getValue:]
  -[HMFBoolean getValue:size:]
  -[HMFBoolean boolValue]
  -[HMFBoolean compare:]
  -[HMFBoolean copyWithZone:]
  -[HMFBoolean encodeWithCoder:]
  -[HMFBoolean charValue]


__HMFBoolean : HMFBoolean
  // instance methods
  -[__HMFBoolean initWithBool:]
  -[__HMFBoolean initWithLongLong:]
  -[__HMFBoolean initWithInt:]
  -[__HMFBoolean initWithUnsignedLong:]
  -[__HMFBoolean initWithDouble:]
  -[__HMFBoolean initWithUnsignedLongLong:]
  -[__HMFBoolean initWithFloat:]
  -[__HMFBoolean initWithChar:]
  -[__HMFBoolean initWithUnsignedShort:]
  -[__HMFBoolean initWithUnsignedInt:]
  -[__HMFBoolean initWithUnsignedChar:]
  -[__HMFBoolean initWithShort:]
  -[__HMFBoolean initWithUnsignedInteger:]
  -[__HMFBoolean initWithCoder:]
  -[__HMFBoolean boolValue]
  -[__HMFBoolean initWithLong:]
  -[__HMFBoolean initWithInteger:]


__HMFBooleanTrue : HMFBoolean
  // class methods
  +[__HMFBooleanTrue new]

  // instance methods
  -[__HMFBooleanTrue boolValue]


__HMFBooleanFalse : HMFBoolean
  // class methods
  +[__HMFBooleanFalse new]

  // instance methods
  -[__HMFBooleanFalse boolValue]


__HMFNetAddressMonitor : HMFNetMonitor
 @property  ^{__SCNetworkReachability=} networkReachabilityRef
 @property  unsigned int currentNetworkFlags

  // instance methods
  -[__HMFNetAddressMonitor reachabilityPath]
  -[__HMFNetAddressMonitor netAddress]
  -[__HMFNetAddressMonitor currentNetworkFlags]
  -[__HMFNetAddressMonitor .cxx_destruct]
  -[__HMFNetAddressMonitor attributeDescriptions]
  -[__HMFNetAddressMonitor networkReachabilityRef]
  -[__HMFNetAddressMonitor init]
  -[__HMFNetAddressMonitor handleNetworkReachabilityChange:]
  -[__HMFNetAddressMonitor initWithNetAddress:]
  -[__HMFNetAddressMonitor setCurrentNetworkFlags:]
  -[__HMFNetAddressMonitor shortDescription]
  -[__HMFNetAddressMonitor dealloc]
  -[__HMFNetAddressMonitor logIdentifier]
  -[__HMFNetAddressMonitor initWithNetService:]


HMFKeyValueBlockObserver : HMFObject <HMFLogging>
 @property  NSString *keyPath
 @property  id observedObject
 @property  unsigned long options
 @property  @? handler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFKeyValueBlockObserver logCategory]

  // instance methods
  -[HMFKeyValueBlockObserver options]
  -[HMFKeyValueBlockObserver .cxx_destruct]
  -[HMFKeyValueBlockObserver init]
  -[HMFKeyValueBlockObserver observedObject]
  -[HMFKeyValueBlockObserver keyPath]
  -[HMFKeyValueBlockObserver __invalidate]
  -[HMFKeyValueBlockObserver dealloc]
  -[HMFKeyValueBlockObserver setHandler:]
  -[HMFKeyValueBlockObserver invalidate]
  -[HMFKeyValueBlockObserver logIdentifier]
  -[HMFKeyValueBlockObserver observeValueForKeyPath:ofObject:change:context:]
  -[HMFKeyValueBlockObserver handler]
  -[HMFKeyValueBlockObserver initWithKeyPath:object:options:]
  -[HMFKeyValueBlockObserver initWithKeyPath:object:]


HMFUnfairLock : HMFObject <HMFLocking>
 @property  unsigned long options

  // class methods
  +[HMFUnfairLock lockWithOptions:]
  +[HMFUnfairLock lock]

  // instance methods
  -[HMFUnfairLock unlock]
  -[HMFUnfairLock performBlock:]
  -[HMFUnfairLock options]
  -[HMFUnfairLock initWithOptions:]
  -[HMFUnfairLock init]
  -[HMFUnfairLock assertOwner]
  -[HMFUnfairLock lock]
  -[HMFUnfairLock assertNotOwner]


__HMFOSUnfairLock : HMFUnfairLock
  // instance methods
  -[__HMFOSUnfairLock unlock]
  -[__HMFOSUnfairLock performBlock:]
  -[__HMFOSUnfairLock initWithOptions:]
  -[__HMFOSUnfairLock assertOwner]
  -[__HMFOSUnfairLock lock]
  -[__HMFOSUnfairLock assertNotOwner]


__HMFOSUnfairRecursiveLock : HMFUnfairLock
  // instance methods
  -[__HMFOSUnfairRecursiveLock unlock]
  -[__HMFOSUnfairRecursiveLock performBlock:]
  -[__HMFOSUnfairRecursiveLock initWithOptions:]
  -[__HMFOSUnfairRecursiveLock assertOwner]
  -[__HMFOSUnfairRecursiveLock lock]
  -[__HMFOSUnfairRecursiveLock assertNotOwner]


HMFScheduler : HMFObject
  // class methods
  +[HMFScheduler mainScheduler]
  +[HMFScheduler defaultScheduler]

  // instance methods
  -[HMFScheduler performBlock:]
  -[HMFScheduler performOperation:]
  -[HMFScheduler .cxx_destruct]
  -[HMFScheduler performSelector:target:argument:qualityOfService:]
  -[HMFScheduler init]
  -[HMFScheduler initWithQueue:]
  -[HMFScheduler performWithQualityOfService:block:]
  -[HMFScheduler performSelector:target:argument:]


HMFNetService : HMFObject <HMFLogging, NSNetServiceDelegate>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSMutableArray *resolveBlocks
 @property  long long resolveState
 @property  long long resolveRunningState
 @property  NSNetService *internal
 @property  BOOL publishing
 @property  <HMFNetServiceDelegate> *delegate
 @property  NSString *type
 @property  NSString *name
 @property  unsigned long port
 @property  BOOL resolved
 @property  HMFNetAddress *hostName
 @property  NSArray *addresses
 @property  NSString *domain
 @property  NSDictionary *TXTRecord
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFNetService automaticallyNotifiesObserversForKey:]
  +[HMFNetService logCategory]
  +[HMFNetService shortDescription]
  +[HMFNetService errorFromNetServiceErrorDict:]

  // instance methods
  -[HMFNetService internal]
  -[HMFNetService startMonitoring]
  -[HMFNetService clientQueue]
  -[HMFNetService isResolved]
  -[HMFNetService addresses]
  -[HMFNetService name]
  -[HMFNetService netService:didNotResolve:]
  -[HMFNetService hostName]
  -[HMFNetService netService:didUpdateTXTRecordData:]
  -[HMFNetService setAddresses:]
  -[HMFNetService port]
  -[HMFNetService netServiceDidStop:]
  -[HMFNetService .cxx_destruct]
  -[HMFNetService netServiceWillResolve:]
  -[HMFNetService netServiceDidResolveAddress:]
  -[HMFNetService setResolved:]
  -[HMFNetService domain]
  -[HMFNetService setDelegate:]
  -[HMFNetService descriptionWithPointer:]
  -[HMFNetService initWithDomain:type:name:]
  -[HMFNetService init]
  -[HMFNetService isEqual:]
  -[HMFNetService type]
  -[HMFNetService setHostname:]
  -[HMFNetService delegate]
  -[HMFNetService shortDescription]
  -[HMFNetService dealloc]
  -[HMFNetService logIdentifier]
  -[HMFNetService initWithNetService:]
  -[HMFNetService isPublishing]
  -[HMFNetService confirmWithTimeout:completionHandler:]
  -[HMFNetService TXTRecord]
  -[HMFNetService resolveBlocks]
  -[HMFNetService resolveWithTimeout:completionHandler:]
  -[HMFNetService setPublishing:]
  -[HMFNetService updateTXTRecordWithData:]
  -[HMFNetService notifyUpdatedAddresses:]
  -[HMFNetService setTXTRecord:]
  -[HMFNetService removeAllTXTRecordObjects]
  -[HMFNetService resolveState]
  -[HMFNetService bestAddress]
  -[HMFNetService _reallyResolveWithTimeout:completionHandler:]
  -[HMFNetService resolveRunningState]
  -[HMFNetService setResolveRunningState:]
  -[HMFNetService setResolveState:]


HMFMutableNetService : HMFNetService
 @property  @? publishBlock
 @property  unsigned long port
 @property  NSDictionary *TXTRecord

  // instance methods
  -[HMFMutableNetService internal]
  -[HMFMutableNetService initWithDomain:type:name:port:]
  -[HMFMutableNetService netServiceDidStop:]
  -[HMFMutableNetService netServiceDidPublish:]
  -[HMFMutableNetService .cxx_destruct]
  -[HMFMutableNetService netServiceWillPublish:]
  -[HMFMutableNetService netService:didNotPublish:]
  -[HMFMutableNetService setInternal:]
  -[HMFMutableNetService setPort:]
  -[HMFMutableNetService initWithNetService:]
  -[HMFMutableNetService setTXTRecordValue:forKey:]
  -[HMFMutableNetService removeTXTRecordValueForKey:]
  -[HMFMutableNetService stopPublishing]
  -[HMFMutableNetService startPublishingWithCompletionHandler:]
  -[HMFMutableNetService updateTXTRecordWithData:]
  -[HMFMutableNetService setTXTRecord:]
  -[HMFMutableNetService updateTXTRecord]
  -[HMFMutableNetService setPublishBlock:]
  -[HMFMutableNetService publishBlock]


NSKeyedUnarchiver(HMFoundation)
	// class methods
	+[NSKeyedUnarchiver(HMFoundation) deserializeObjectWithData:allowedClass:frameworkClasses:]
	+[NSKeyedUnarchiver(HMFoundation) deserializeObjectWithData:allowedClasses:]
	+[NSKeyedUnarchiver(HMFoundation) hmf_unarchivedObjectOfClass:fromClassName:fromData:error:]

(HMFoundation)
	// class methods
	+[(HMFoundation) hmf_unarchiveFromData:error:]

NSDateComponents(HMFoundation)
	// class methods
	+[NSDateComponents(HMFoundation) hmf_unarchiveFromData:error:]

	// instance methods
	-[NSDateComponents(HMFoundation) hmf_localTimeDescription]
	-[NSDateComponents(HMFoundation) localTimeDescription]

(HMFCalendarCreation)
	// class methods
	+[(HMFCalendarCreation) shortDescription]

	// instance methods
	-[(HMFCalendarCreation) privateDescription]
	-[(HMFCalendarCreation) shortDescription]
	-[(HMFCalendarCreation) hmf_hexadecimalRepresentation]
	-[(HMFCalendarCreation) hmf_initWithHexadecimalString:options:]
	-[(HMFCalendarCreation) decodeDateComponents]
	-[(HMFCalendarCreation) hmf_hexadecimalStringWithOptions:]
	-[(HMFCalendarCreation) decodeTimeZone]
	-[(HMFCalendarCreation) decodeArrayOfDateComponents]
	-[(HMFCalendarCreation) hmf_isZeroed]
	-[(HMFCalendarCreation) decodeCalendar]
	-[(HMFCalendarCreation) hmf_zeroingCopy]

(KeyPathLookup)
	// class methods
	+[(KeyPathLookup) shortDescription]

	// instance methods
	-[(KeyPathLookup) privateDescription]
	-[(KeyPathLookup) shortDescription]
	-[(KeyPathLookup) hmf_firstObjectWithUUID:]
	-[(KeyPathLookup) hmf_firstObjectWithValue:forKeyPath:]
	-[(KeyPathLookup) hmf_firstObjectWithUniqueIdentifier:]
	-[(KeyPathLookup) hmf_isEmpty]
	-[(KeyPathLookup) hmf_firstObjectWithInstanceID:]
	-[(KeyPathLookup) hmf_objectsAreKindOfClass:]
	-[(KeyPathLookup) hmf_firstObjectWithName:]
	-[(KeyPathLookup) hmf_firstObjectWithSPIUniqueIdentifier:]
	-[(KeyPathLookup) hmf_objectPassingTest:]
	-[(KeyPathLookup) hmf_objectsPassingTest:]
	-[(KeyPathLookup) hmf_firstObjectWithCharacteristicType:]
	-[(KeyPathLookup) describeElements:]
	-[(KeyPathLookup) secureDescriptionWithBlacklistKeys:]
	-[(KeyPathLookup) hmf_firstObjectWithZoneID:]
	-[(KeyPathLookup) secureDescriptionWithIndent:newLine:blacklistedKeys:]
	-[(KeyPathLookup) hmf_objectWithOptions:passingTest:]
	-[(KeyPathLookup) hmf_objectsWithOptions:passingTest:]

(HMFError)
	// class methods
	+[(HMFError) shortDescription]
	+[(HMFError) hmfErrorWithCode:]
	+[(HMFError) hmf_unarchiveFromData:error:]
	+[(HMFError) hmfErrorWithCode:reason:suggestion:]
	+[(HMFError) hmfErrorWithCode:description:reason:suggestion:]
	+[(HMFError) hmfErrorWithCode:userInfo:]
	+[(HMFError) hmfUnspecifiedError]
	+[(HMFError) hmf_errorWithException:]
	+[(HMFError) hmfErrorWithCode:reason:suggestion:underlyingError:]
	+[(HMFError) hmfErrorWithCode:description:reason:suggestion:underlyingError:]

	// instance methods
	-[(HMFError) privateDescription]
	-[(HMFError) shortDescription]
	-[(HMFError) isHMFError]

(HMFMerging)
	// class methods
	+[(HMFMerging) shortDescription]

	// instance methods
	-[(HMFMerging) privateDescription]
	-[(HMFMerging) shortDescription]
	-[(HMFMerging) hmf_isEmpty]
	-[(HMFMerging) hmf_removedObjectsFromSet:]
	-[(HMFMerging) hmf_addedObjectsFromSet:]
	-[(HMFMerging) hmf_commonObjectsFromSet:]

<DEREK BUG Categories!>(HMFMerging)
	// instance methods
	-[<DEREK BUG Categories!>(HMFMerging) mergeObject:]
	-[<DEREK BUG Categories!>(HMFMerging) shouldMergeObject:]

(HMFoundation)
	// class methods
	+[(HMFoundation) shortDescription]

	// instance methods
	-[(HMFoundation) numberForKey:]
	-[(HMFoundation) dateForKey:]
	-[(HMFoundation) privateDescription]
	-[(HMFoundation) dataForKey:]
	-[(HMFoundation) boolForKey:]
	-[(HMFoundation) errorForKey:]
	-[(HMFoundation) stringForKey:]
	-[(HMFoundation) arrayForKey:]
	-[(HMFoundation) setForKey:]
	-[(HMFoundation) shortDescription]
	-[(HMFoundation) urlForKey:]
	-[(HMFoundation) mutableSetForKey:]
	-[(HMFoundation) dictionaryForKey:]
	-[(HMFoundation) hmf_unarchivedObjectForKey:ofClasses:]
	-[(HMFoundation) hmf_dateForKey:]
	-[(HMFoundation) hmf_dataForKey:]
	-[(HMFoundation) hmf_arrayForKey:]
	-[(HMFoundation) hmf_dictionaryForKey:]
	-[(HMFoundation) hmf_boolForKey:error:]
	-[(HMFoundation) hmf_stringForKey:]
	-[(HMFoundation) uuidFromStringForKey:]
	-[(HMFoundation) hmf_numberForKey:]
	-[(HMFoundation) hmf_integerForKey:error:]
	-[(HMFoundation) hmf_arrayForKey:ofClasses:]
	-[(HMFoundation) hmf_boolForKey:isPresent:]
	-[(HMFoundation) hmf_boolForKey:]
	-[(HMFoundation) hmf_UUIDForKey:]
	-[(HMFoundation) hmf_fileHandleForKey:]
	-[(HMFoundation) predicateFromDataForKey:]
	-[(HMFoundation) arrayOfDateComponentsFromDataForKey:]
	-[(HMFoundation) nullForKey:]
	-[(HMFoundation) uuidForKey:]
	-[(HMFoundation) dateComponentsForKey:]
	-[(HMFoundation) hmf_dateComponentsForKey:]
	-[(HMFoundation) dateComponentsFromDataForKey:]
	-[(HMFoundation) hmf_timeZoneForKey:]
	-[(HMFoundation) boolForKey:keyPresent:]
	-[(HMFoundation) hmf_mutableDictionaryForKey:]
	-[(HMFoundation) hmf_mutableArrayForKey:]
	-[(HMFoundation) errorFromDataForKey:]
	-[(HMFoundation) timeZoneForKey:]
	-[(HMFoundation) hmf_mutableSetForKey:]
	-[(HMFoundation) hmf_setForKey:]
	-[(HMFoundation) secureDescriptionWithBlacklistKeys:]
	-[(HMFoundation) hmf_errorForKey:]
	-[(HMFoundation) secureDescriptionWithIndent:newLine:blacklistedKeys:]
	-[(HMFoundation) hmf_base64EncodedDataForKey:]
	-[(HMFoundation) hmf_calendarForKey:]
	-[(HMFoundation) hmf_nullForKey:]
	-[(HMFoundation) hmf_URLForKey:]
	-[(HMFoundation) hmf_valueForKey:]
	-[(HMFoundation) mutableDictionaryForKey:]
	-[(HMFoundation) mutableArrayForKey:]
	-[(HMFoundation) base64EncodedDataForKey:]
	-[(HMFoundation) timeZoneFromDataForKey:]
	-[(HMFoundation) calendarForKey:]
	-[(HMFoundation) calendarFromDataForKey:]
	-[(HMFoundation) nsValueForKey:]

(HMFoundation)
	// class methods
	+[(HMFoundation) hmf_unarchiveFromData:error:]

NSUUID(HMFoundation)
	// class methods
	+[NSUUID(HMFoundation) shortDescription]
	+[NSUUID(HMFoundation) hmf_UUIDWithNamespace:data:]
	+[NSUUID(HMFoundation) hmf_zeroUUID]
	+[NSUUID(HMFoundation) zeroUUID]
	+[NSUUID(HMFoundation) hmf_UUIDWithBytesAsData:]

	// instance methods
	-[NSUUID(HMFoundation) privateDescription]
	-[NSUUID(HMFoundation) shortDescription]
	-[NSUUID(HMFoundation) hmf_isEqualToUUID:]
	-[NSUUID(HMFoundation) initWithNamespace:data:]
	-[NSUUID(HMFoundation) hmf_isEqualToUUIDString:]
	-[NSUUID(HMFoundation) hmf_bytesAsData]

(HMFoundation)
	// class methods
	+[(HMFoundation) shortDescription]
	+[(HMFoundation) timeIntervalDescription:]
	+[(HMFoundation) dateFromFileNameDescription:]

	// instance methods
	-[(HMFoundation) dateComponents]
	-[(HMFoundation) privateDescription]
	-[(HMFoundation) shortDescription]
	-[(HMFoundation) hmf_dateComponents]
	-[(HMFoundation) hmf_dateComponentsUsingTimeZone:]
	-[(HMFoundation) hmf_localTimeDescription]
	-[(HMFoundation) localTimeDescription]
	-[(HMFoundation) iso8601Description]
	-[(HMFoundation) fileNameDescription]

(HMFoundation)
	// instance methods
	-[(HMFoundation) hmf_isNumeric]
	-[(HMFoundation) hmf_isInteger]

NSOperationQueue(HMFOperation)
	// instance methods
	-[NSOperationQueue(HMFOperation) cancelAllOperationsWithError:]

NSPointerArray(HMFoundation)
	// instance methods
	-[NSPointerArray(HMFoundation) hmf_addObject:]
	-[NSPointerArray(HMFoundation) hmf_removePointer:]
	-[NSPointerArray(HMFoundation) hmf_removeObject:]

(HMFKeyValueObserving)
	// instance methods
	-[(HMFKeyValueObserving) hmf_registerObserverForKeyPath:options:handler:]

NSLock(HMFLock)
	// instance methods
	-[NSLock(HMFLock) performBlock:]

NSRecursiveLock(HMFLock)
	// instance methods
	-[NSRecursiveLock(HMFLock) performBlock:]

<DEREK BUG Categories!>(HMFoundation)
	// instance methods
	-[<DEREK BUG Categories!>(HMFoundation) hmf_dequeue]
	-[<DEREK BUG Categories!>(HMFoundation) hmf_removeFirstObject]
	-[<DEREK BUG Categories!>(HMFoundation) hmf_maybeDequeue]
	-[<DEREK BUG Categories!>(HMFoundation) hmf_enqueue:]
	-[<DEREK BUG Categories!>(HMFoundation) hmf_enqueueMultiple:]

01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFormatter 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSInvocationOperation 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetService 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetServiceBrowser 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredential 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0a00 /System/Library/PrivateFrameworks/RTCReporting.framework/RTCReporting: RTCReporting 
