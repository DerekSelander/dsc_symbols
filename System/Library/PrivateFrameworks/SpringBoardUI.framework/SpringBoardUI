|| __DATA.__data _SBUIFlashlightLevelDefault
|| __DATA.__objc_data _OBJC_CLASS_$_SBAwayViewPluginController
|| __DATA.__objc_data _OBJC_CLASS_$_SBExternalIndigoDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenElementOverride
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenLegibilitySettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenModalViewFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenPluginAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenPluginAppearanceContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenPluginApplicationAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenPluginCallAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenPluginContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenPluginEmergencyDialerAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenPluginInCallAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenPluginMutableAppearanceContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenPluginPresentation
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockScreenTimerDialView
|| __DATA.__objc_data _OBJC_CLASS_$_SBMutableLockScreenPluginPresentation
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIActionKeylineView
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIActionViewLabel
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIBannerAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIBannerContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBUICarPlayMappedImageCache
|| __DATA.__objc_data _OBJC_CLASS_$_SBUICoronaAnimationController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPluginActivationContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPluginAppearanceContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPluginController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIStarkBannerViewButton
|| __DATA.__objc_data _OBJC_CLASS_$__SBAlertItemHeaderViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBAwayViewPluginController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBExternalIndigoDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenElementOverride
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenLegibilitySettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenModalViewFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenPluginAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenPluginAppearanceContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenPluginApplicationAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenPluginCallAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenPluginContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenPluginEmergencyDialerAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenPluginInCallAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenPluginMutableAppearanceContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenPluginPresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockScreenTimerDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBMutableLockScreenPluginPresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIActionKeylineView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIActionViewLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIBannerAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIBannerContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUICarPlayMappedImageCache
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUICoronaAnimationController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPluginActivationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPluginAppearanceContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPluginController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIStarkBannerViewButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIViewFloatSpringProperty
|| __DATA.__objc_data _OBJC_METACLASS_$__SBAlertItemHeaderViewController
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBUIPluginController._host
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBUIPluginController._isVisible
|| __DATA_CONST.__const _SBActiveCallStateChangedNotification
|| __DATA_CONST.__const _SBAirplaneModeControllerAirplaneModeDidChangeNotification
|| __DATA_CONST.__const _SBAirplaneModeControllerDidProcessAirplaneModeChangeNotification
|| __DATA_CONST.__const _SBAirplaneModeControllerWillProcessAirplaneModeChangeNotification
|| __DATA_CONST.__const _SBAlertItemDidPrepareNewAlertControllerNotification
|| __DATA_CONST.__const _SBApplicationNetworkFlagsChangedNotification
|| __DATA_CONST.__const _SBAwayViewPluginActivatingForRemoteEvent
|| __DATA_CONST.__const _SBAwayViewPluginActivationReasonKey
|| __DATA_CONST.__const _SBBacklightAboutToUndimNotification
|| __DATA_CONST.__const _SBBacklightChangeSourceKey
|| __DATA_CONST.__const _SBBacklightFadeFinishedNotification
|| __DATA_CONST.__const _SBBacklightLevelChangedNotification
|| __DATA_CONST.__const _SBBacklightNewFactorKey
|| __DATA_CONST.__const _SBBacklightOldFactorKey
|| __DATA_CONST.__const _SBBacklightResetLockScreenIdleTimerNotification
|| __DATA_CONST.__const _SBBacklightWillTurnOnWhileUILockedNotification
|| __DATA_CONST.__const _SBBannerWillAnimateDismissalNotification
|| __DATA_CONST.__const _SBBannerWillAnimateRevealNotification
|| __DATA_CONST.__const _SBCallCountChangedNotification
|| __DATA_CONST.__const _SBDeviceLockStateChangedNotification
|| __DATA_CONST.__const _SBFeaturesShouldBeLockedForRemoteLockNotification
|| __DATA_CONST.__const _SBHeadsetButtonUpNotification
|| __DATA_CONST.__const _SBHomescreenIconsDidAppearNotification
|| __DATA_CONST.__const _SBHomescreenIconsWillAppearNotification
|| __DATA_CONST.__const _SBIncomingCallPendingNotification
|| __DATA_CONST.__const _SBLockButtonPressedNotification
|| __DATA_CONST.__const _SBMenuButtonPressedNotification
|| __DATA_CONST.__const _SBNetworkTetheringStateChangedNotification
|| __DATA_CONST.__const _SBOrientationLockChangedNotification
|| __DATA_CONST.__const _SBProximityDidChangeNotification
|| __DATA_CONST.__const _SBRingerChangedNotification
|| __DATA_CONST.__const _SBTelephonyDaemonRestartNotification
|| __DATA_CONST.__const _SBTelephonyManagerAirplaneModeDidChangeNotification
|| __DATA_CONST.__const _SBTelephonyManagerDidProcessAirplaneModeChangeNotification
|| __DATA_CONST.__const _SBTelephonyManagerWillProcessAirplaneModeChangeNotification
|| __DATA_CONST.__const _SBTestingConfigureNextAssistantRecognitionStrings
|| __DATA_CONST.__const _SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
|| __DATA_CONST.__const _SBUILaunchOptionKeyAllowUnlock
|| __DATA_CONST.__const _SBUILaunchOptionKeyPNGLess
|| __DATA_CONST.__const _SBUIPluginActivationSettingsDidChangeNotification
|| __DATA_CONST.__const _SBUIPluginContextOptionBundleId
|| __DATA_CONST.__const _SBUIPluginContextOptionSupportsCarFullScreen
|| __DATA_CONST.__const _SBUIPluginVisibilityDidChangeNotification
|| __DATA_CONST.__const _SBUIRingerSwitchBehaviorDidChangeNotification
|| __DATA_CONST.__const _SBUserEventOccurredNotification
|| __DATA_CONST.__const _SBVolumeChangedNotification
|| __DATA_CONST.__const _SBWiFiDeviceAttachedNotification
|| __DATA_CONST.__const _SBWifiManagerCurrentDeviceDidChangeNotification
|| __DATA_CONST.__const _SBWifiManagerDevicePresenceDidChangeNotification
|| __DATA_CONST.__const _SBWifiManagerPowerStateDidChangeNotification
|| __DATA_CONST.__const _kSBNotificationKeyAnimationDuration
|| __DATA_CONST.__const _kSBNotificationKeyBundleIdentifier
|| __DATA_CONST.__const _kSBNotificationKeyDeviceLockState
|| __DATA_CONST.__const _kSBNotificationKeyDisplayIdentifier
|| __DATA_CONST.__const _kSBNotificationKeyFrame
|| __DATA_CONST.__const _kSBNotificationKeyHeadsetButtonLongPress
|| __DATA_CONST.__const _kSBNotificationKeyLocalNotification
|| __DATA_CONST.__const _kSBNotificationKeyPreferenceChangedKey
|| __DATA_CONST.__const _kSBNotificationKeyState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBAlertItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBCrossfadeView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBOrientationTransformWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSceneHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSceneHandleBlockObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSceneView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIActionPlatterViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIActionView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIBannerItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIBannerTargetManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIBannerTargetProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIChevronView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIFlashlightController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUILockScreenDisableAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUISearchUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUISound
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIViewFloatSpringProperty
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SpringBoardUI
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBAlertController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBOrientationTransformedContentView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBSceneHandleObserverBehavior
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBSceneHandleObserverToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBAlertItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBCrossfadeView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBOrientationTransformWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSceneHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSceneHandleBlockObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSceneView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIActionPlatterViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIActionView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIBannerItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIBannerTargetManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIBannerTargetProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIChevronView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIFlashlightController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUILockScreenDisableAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUISearchUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUISound
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SpringBoardUI
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBAlertController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBOrientationTransformedContentView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBSceneHandleObserverBehavior
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBSceneHandleObserverToken
|| __TEXT.__const _SBUIStarkBannerViewButtonCornerRadius
|| __TEXT.__const _kSBUIBannerDefaultPriority
|| __TEXT.__text _ConvertSBSApplicationShortcutSystemIconTypeToUIApplicationShortcutIconType
|| __TEXT.__text _NSStringFromLockScreenCapabilities
|| __TEXT.__text _NSStringFromLockScreenElement
|| __TEXT.__text _NSStringFromLockScreenEvent
|| __TEXT.__text _NSStringFromLockScreenPluginBackgroundStyle
|| __TEXT.__text _NSStringFromLockScreenPluginNotificationBehavior
|| __TEXT.__text _NSStringFromLockScreenPluginPresentationStyle
|| __TEXT.__text _NSStringFromLockSource
|| __TEXT.__text _NSStringFromSBAlertItemPresentationState
|| __TEXT.__text _NSStringFromSBSceneViewDisplayMode
|| __TEXT.__text _NSStringFromSBUIBackgroundStyle
|| __TEXT.__text _NSStringFromUnlockIntent
|| __TEXT.__text _NSStringFromUnlockSource
|| __TEXT.__text _SBAlertItemIsUserDeactivate
|| __TEXT.__text _SBLockScreenCapabilityAllExcept
|| __TEXT.__text _SBLogAppIconForceTouch
|| __TEXT.__text _SBStringFromAlertItemDeactivateReason
|| __TEXT.__text _SBUIBannerTargetDequeueContextFromSourcesWithCheck
|| __TEXT.__text _SBUIBannerViewHeightForTargetIdiom
|| __TEXT.__text _SBUIConvertLockSourceToBacklightChangeSource
|| __TEXT.__text _SBUIConvertUnlockSourceToBacklightChangeSource
|| __TEXT.__text _SBUIFrameworkBundleID
|| __TEXT.__text _SBUIGetBackdropSettingsForBackgroundStyle
|| __TEXT.__text _SBUIGetUserAgent
|| __TEXT.__text _SBUIHasBlurForBackgroundStyle
|| __TEXT.__text _SBUIHasHIDRingerSwitch
|| __TEXT.__text _SBUIPluginStringForActivationEvent
|| __TEXT.__text _SBUIUnlockSourceIsUserAction
|| __TEXT.__text _SBUIUseHIDRingerAsOrientationLock
|| __TEXT.__text _SpringBoardUIBundle
__ AVFoundation: _OBJC_CLASS_$_AVFlashlight
__ BaseBoardUI: _OBJC_CLASS_$_BSUIAnimationFactory
__ BaseBoardUI: _OBJC_CLASS_$_BSUIBackdropView
__ BaseBoardUI: _OBJC_CLASS_$_BSUIMappedImageCache
__ BaseBoardUI: _OBJC_METACLASS_$_BSUIMappedImageCache
__ BulletinBoard: _OBJC_CLASS_$_BBBulletin
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNMutableContact
__ ContactsUI: _OBJC_CLASS_$_CNMonogrammer
__ CoreEmoji: _CEMEnumerateEmojiTokensInStringWithBlock
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathCreateWithEllipseInRect
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ Foundation: _NSClassFromString
__ Foundation: _NSRangeFromString
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ FrontBoard: _BSInterfaceOrientationDescription
__ FrontBoard: _BSInterfaceOrientationIsValid
__ FrontBoard: _BSIntervalValueForFraction
__ FrontBoard: _BSPathExistsOnSystemPartition
__ FrontBoard: _BSRectWithSize
__ FrontBoard: _BSSelfTaskHasEntitlement
__ FrontBoard: _FBSProcessPrettyDescription
__ FrontBoard: _OBJC_CLASS_$_BSAbstractDefaultDomain
__ FrontBoard: _OBJC_CLASS_$_BSAction
__ FrontBoard: _OBJC_CLASS_$_BSActionResponse
__ FrontBoard: _OBJC_CLASS_$_BSAnimationSettings
__ FrontBoard: _OBJC_CLASS_$_BSBlockSentinel
__ FrontBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ FrontBoard: _OBJC_CLASS_$_BSPlatform
__ FrontBoard: _OBJC_CLASS_$_BSSimpleAssertion
__ FrontBoard: _OBJC_CLASS_$_FBSceneMonitor
__ FrontBoard: _OBJC_METACLASS_$_BSAbstractDefaultDomain
__ MaterialKit: _OBJC_CLASS_$_MTMaterialView
__ MobileIcons: _LICreateIconFromCachedBitmap
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFilterDarkenSourceOver
__ QuartzCore: _kCAFilterLightenSourceOver
__ QuartzCore: _kCAFilterSourceOver
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFMappedImageCache
__ SpringBoardFoundation: _OBJC_CLASS_$_SBHardwareDefaults
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutContactIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutCustomImageIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutItem
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutSystemIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutSystemPrivateIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutTemplateIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSLockScreenPluginService
__ SpringBoardServices: _SBLogCFUserNotifications
__ SpringBoardServices: _SBLogCommon
__ SpringBoardServices: _SBLoggingSubsystem
__ SpringBoardServices: ___sb__mainScreenReferenceBounds
__ SpringBoardServices: ___sb__runningInSpringBoard
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUILegibilityView
__ SpringBoardUIServices: _SBTransformFromOrientationToOrientation
__ TelephonyUtilities: _OBJC_CLASS_$_TUDialRequest
__ ToneLibrary: _OBJC_CLASS_$_TLAlert
__ ToneLibrary: _OBJC_CLASS_$_TLAlertConfiguration
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UICubicTimingParameters
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageAsset
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UISelectionFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewFloatAnimatableProperty
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIAssetManager
__ UIKit: _OBJC_CLASS_$__UIBackdropViewSettings
__ UIKit: _OBJC_CLASS_$__UIDirectionalRotationView
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_CLASS_$__UISelectionFeedbackGeneratorConfiguration
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIViewFloatAnimatableProperty
__ UIKit: _OBJC_METACLASS_$__UIDirectionalRotationView
__ UIKit: _OBJC_METACLASS_$__UILegibilitySettings
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityReduceTransparencyStatusDidChangeNotification
__ UIKit: _UIApp
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectIntegralWithScale
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: __UIWindowConvertPointFromOrientationToOrientation
__ UIKit: __UIWindowConvertRectFromOrientationToOrientation
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SBUIBackgroundView : UIView /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard <SBUIBackgroundStyleTransitioning, SBUIWallpaperOverlay>
 @property  NSString *groupName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long backgroundStyle
 @property  BOOL transitioningBackgroundStyle

  // instance methods
  -[SBUIBackgroundView .cxx_destruct]
  -[SBUIBackgroundView groupName]
  -[SBUIBackgroundView setGroupName:]
  -[SBUIBackgroundView initWithFrame:]
  -[SBUIBackgroundView layoutSubviews]
  -[SBUIBackgroundView _setContinuousCornerRadius:]
  -[SBUIBackgroundView backdropView]
  -[SBUIBackgroundView setBackgroundStyle:]
  -[SBUIBackgroundView backgroundStyle]
  -[SBUIBackgroundView setReduceTransparencyBackingColor:]
  -[SBUIBackgroundView _reduceTransparencyEnabledStateDidChange:]
  -[SBUIBackgroundView modifyAllViewsWithChanges:]
  -[SBUIBackgroundView beginTransitionToBackgroundStyle:]
  -[SBUIBackgroundView completeTransitionToBackgroundStyle:]
  -[SBUIBackgroundView _updateAppearanceForBackgroundStyle:transitionToSettings:]
  -[SBUIBackgroundView _updateReduceTransparencyTintingWithProgressWeighting:]
  -[SBUIBackgroundView _updateAppearanceForTransitionFromStyle:toStyle:withProgress:]
  -[SBUIBackgroundView _shouldApplyReducedTransparencyTintForBackgroundStyle:]
  -[SBUIBackgroundView _reducedTransparencyValueForBackgroundStyle:]
  -[SBUIBackgroundView _darkenValueForBackgroundStyle:]
  -[SBUIBackgroundView _darkenWithProgress:]
  -[SBUIBackgroundView _tintValueForBackgroundStyle:]
  -[SBUIBackgroundView _tintColorAlphaForBackgroundStyle:]
  -[SBUIBackgroundView _tintWithProgress:backgroundColorAlpha:]
  -[SBUIBackgroundView _reduceTransparencyWithProgress:]
  -[SBUIBackgroundView _updateReduceTransparencyTinting]
  -[SBUIBackgroundView _luminanceValueForBackgroundStyle:]
  -[SBUIBackgroundView _luminanceWithProgress:]
  -[SBUIBackgroundView _lightenSourceOverValueForBackgroundStyle:]
  -[SBUIBackgroundView _lightenSourceOverWithProgress:]
  -[SBUIBackgroundView _valueFromStart:toEnd:withFraction:]
  -[SBUIBackgroundView _backgroundColorForDarkenAlpha:andProgress:]
  -[SBUIBackgroundView updateBackgroundStyleTransitionProgress:]
  -[SBUIBackgroundView isTransitioningBackgroundStyle]


SBUIPluginAppearanceContext : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL hideOtherWindowsDuringAppearance

  // instance methods
  -[SBUIPluginAppearanceContext hideOtherWindowsDuringAppearance]
  -[SBUIPluginAppearanceContext setHideOtherWindowsDuringAppearance:]


_SBSceneHandleObserverToken : NSObject /usr/lib/libSystem.B.dylib <SBSceneHandleObserverToken>
 @property  NSMutableDictionary *owner
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBSceneHandleObserverToken copyWithZone:]
  -[_SBSceneHandleObserverToken .cxx_destruct]
  -[_SBSceneHandleObserverToken initWithOwner:]
  -[_SBSceneHandleObserverToken owner]


SBSceneHandleBlockObserver : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable, SBSceneHandleObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSceneHandleBlockObserver dealloc]
  -[SBSceneHandleBlockObserver invalidate]
  -[SBSceneHandleBlockObserver .cxx_destruct]
  -[SBSceneHandleBlockObserver removeObserverForToken:]
  -[SBSceneHandleBlockObserver sceneHandle:didCreateScene:]
  -[SBSceneHandleBlockObserver sceneHandle:didDestroyScene:]
  -[SBSceneHandleBlockObserver sceneHandle:didUpdateContentState:]
  -[SBSceneHandleBlockObserver sceneHandle:didUpdateSettingsWithDiff:previousSettings:]
  -[SBSceneHandleBlockObserver sceneHandle:didUpdateClientSettingsWithDiff:transitionContext:]
  -[SBSceneHandleBlockObserver sceneHandle:didUpdatePairingStatusForExternalSceneIdentifiers:]
  -[SBSceneHandleBlockObserver observeCreate:]
  -[SBSceneHandleBlockObserver observeDestroy:]
  -[SBSceneHandleBlockObserver observeDidUpdateContentState:]
  -[SBSceneHandleBlockObserver observeDidUpdateSettings:]
  -[SBSceneHandleBlockObserver observeDidUpdateClientSettings:]
  -[SBSceneHandleBlockObserver observeDidUpdatePairingStatusForExternalIdentifiers:]


SBLockScreenPluginCallAction : SBLockScreenPluginAction
 @property  NSURL *url

  // instance methods
  -[SBLockScreenPluginCallAction initWithURL:]
  -[SBLockScreenPluginCallAction .cxx_destruct]
  -[SBLockScreenPluginCallAction url]
  -[SBLockScreenPluginCallAction isCallAction]


SBLockScreenElementOverride : NSObject /usr/lib/libSystem.B.dylib
 @property  long long element
 @property  BOOL hidden
 @property  NSString *text

  // class methods
  +[SBLockScreenElementOverride overrideForElement:]
  +[SBLockScreenElementOverride overrideForHiddenElement:]

  // instance methods
  -[SBLockScreenElementOverride element]
  -[SBLockScreenElementOverride .cxx_destruct]
  -[SBLockScreenElementOverride isHidden]
  -[SBLockScreenElementOverride text]
  -[SBLockScreenElementOverride setText:]
  -[SBLockScreenElementOverride succinctDescription]
  -[SBLockScreenElementOverride descriptionWithMultilinePrefix:]
  -[SBLockScreenElementOverride succinctDescriptionBuilder]
  -[SBLockScreenElementOverride descriptionBuilderWithMultilinePrefix:]
  -[SBLockScreenElementOverride setHidden:]
  -[SBLockScreenElementOverride setElement:]


SBSceneView : UIView /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard <SBSceneHandleObserver, SBScenePlaceholderContentViewProviderDelegate, BSInvalidatable>
 @property  <UIScenePresenter> *presenter
 @property  SBSceneHandle *sceneHandle
 @property  {CGSize=dd} referenceSize
 @property  long long orientation
 @property  <SBScenePlaceholderContentViewProvider> *placeholderContentProvider
 @property  <SBScenePlaceholderContentContext> *placeholderContentContext
 @property  BOOL placeholderContentEnabled
 @property  long long displayMode
 @property  long long effectiveDisplayMode
 @property  BOOL shouldRasterizeHostView
 @property  NSString *hostViewMinificationFilter
 @property  long long preferredStatusBarStyle
 @property  <SBSceneViewDelegate> *delegate
 @property  UIView *backgroundView
 @property  UIView *customContentView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBSceneView defaultDisplayModeAnimationFactory]

  // instance methods
  -[SBSceneView dealloc]
  -[SBSceneView invalidate]
  -[SBSceneView delegate]
  -[SBSceneView setDelegate:]
  -[SBSceneView .cxx_destruct]
  -[SBSceneView orientation]
  -[SBSceneView backgroundView]
  -[SBSceneView sizeThatFits:]
  -[SBSceneView layoutSubviews]
  -[SBSceneView customContentView]
  -[SBSceneView didMoveToWindow]
  -[SBSceneView _shouldAnimatePropertyWithKey:]
  -[SBSceneView setBackgroundView:]
  -[SBSceneView preferredStatusBarStyle]
  -[SBSceneView displayMode]
  -[SBSceneView presenter]
  -[SBSceneView newSnapshot]
  -[SBSceneView _refresh]
  -[SBSceneView referenceSize]
  -[SBSceneView sceneHandle:didCreateScene:]
  -[SBSceneView sceneHandle:didDestroyScene:]
  -[SBSceneView sceneHandle:didUpdateContentState:]
  -[SBSceneView initWithSceneHandle:referenceSize:orientation:hostRequester:]
  -[SBSceneView _invalidateHostPresenter]
  -[SBSceneView effectiveDisplayMode]
  -[SBSceneView _transitionFromDisplayMode:showingView:toDisplayMode:showingView:withAnimationFactory:completion:]
  -[SBSceneView _reloadPlaceholderContentIfNecessary]
  -[SBSceneView _updateLiveContentRasterization]
  -[SBSceneView _evaluateEffectiveDisplayModeWithAnimationFactory:completion:]
  -[SBSceneView sceneHandle]
  -[SBSceneView _configureSceneSnapshotContext:]
  -[SBSceneView _clearSnapshotViews]
  -[SBSceneView _layoutLiveHostView:]
  -[SBSceneView _hotSwapPlaceholderContentView]
  -[SBSceneView _hotSwapLiveSnapshotView]
  -[SBSceneView _setOrientation:]
  -[SBSceneView _enableHostingIfPossible]
  -[SBSceneView _shouldObserveSceneHostContentState]
  -[SBSceneView _recheckLiveContentDependencies]
  -[SBSceneView _invalidateSceneLiveHostView:]
  -[SBSceneView _configureViewForEffectiveDisplayMode:]
  -[SBSceneView _viewForDisplayMode:]
  -[SBSceneView _bestDisplayModeLessThanMode:]
  -[SBSceneView _transitionViewForHostView]
  -[SBSceneView _addContentLikeViewToHierarchyForTransitionIfPossible:]
  -[SBSceneView _shouldViewBeInHierarchyForTransition:]
  -[SBSceneView _configurePlaceholderContentView]
  -[SBSceneView _configureLiveSnapshotView]
  -[SBSceneView _configureHostView]
  -[SBSceneView _placeholderVisibilityChanged]
  -[SBSceneView _configureBackgroundColorForLiveSnapshot:]
  -[SBSceneView _configureSceneLiveHostView:]
  -[SBSceneView placeholderContentViewProviderContentDidUpdate:]
  -[SBSceneView initWithSceneHandle:referenceSize:orientation:]
  -[SBSceneView setCustomContentView:]
  -[SBSceneView setPlaceholderContentProvider:]
  -[SBSceneView setPlaceholderContentContext:]
  -[SBSceneView setPlaceholderContentEnabled:]
  -[SBSceneView setShouldRasterizeHostView:]
  -[SBSceneView setHostViewMinificationFilter:]
  -[SBSceneView setDisplayMode:animationFactory:completion:]
  -[SBSceneView acquireLiveContentDisableAssertionForReason:]
  -[SBSceneView _representsTranslucentContent]
  -[SBSceneView _updateReferenceSize:andOrientation:]
  -[SBSceneView _containerContentWrapperInterfaceOrientationChangedTo:]
  -[SBSceneView placeholderContentProvider]
  -[SBSceneView placeholderContentContext]
  -[SBSceneView placeholderContentEnabled]
  -[SBSceneView shouldRasterizeHostView]
  -[SBSceneView hostViewMinificationFilter]


SBAlertItem : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  unsigned long _presentationState
 @property  BOOL presented
 @property  UIImage *_headerImage
 @property  UIImage *_attachmentImage
 @property  BOOL _ignoresQuietMode
 @property  UIImage *iconImage
 @property  NSString *iconImagePath
 @property  BOOL ignoreIfAlreadyDisplaying
 @property  BOOL allowInSetup
 @property  BOOL pendInSetupIfNotAllowed
 @property  BOOL pendWhileKeyBagLocked
 @property  NSArray *allowedBundleIDs
 @property  BOOL suppressForKeynote
 @property  BOOL allowInCar
 @property  BOOL allowMessageInCar
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBAlertItem _alertItemsController]
  +[SBAlertItem activateAlertItem:]

  // instance methods
  -[SBAlertItem init]
  -[SBAlertItem .cxx_destruct]
  -[SBAlertItem dismissOnLock]
  -[SBAlertItem succinctDescription]
  -[SBAlertItem descriptionWithMultilinePrefix:]
  -[SBAlertItem succinctDescriptionBuilder]
  -[SBAlertItem descriptionBuilderWithMultilinePrefix:]
  -[SBAlertItem _alertController]
  -[SBAlertItem _isPresented]
  -[SBAlertItem alertController]
  -[SBAlertItem dismiss]
  -[SBAlertItem deactivate]
  -[SBAlertItem _setPresentationState:]
  -[SBAlertItem _presentationState]
  -[SBAlertItem _setPresented:]
  -[SBAlertItem sound]
  -[SBAlertItem iconImage]
  -[SBAlertItem setIconImage:]
  -[SBAlertItem allowedBundleIDs]
  -[SBAlertItem setAllowedBundleIDs:]
  -[SBAlertItem willActivate]
  -[SBAlertItem dismiss:]
  -[SBAlertItem _setHeaderImage:]
  -[SBAlertItem _headerImage]
  -[SBAlertItem lockLabel]
  -[SBAlertItem shortLockLabel]
  -[SBAlertItem allowInCar]
  -[SBAlertItem setAllowInCar:]
  -[SBAlertItem _ignoresQuietMode]
  -[SBAlertItem undimsScreen]
  -[SBAlertItem unlocksScreen]
  -[SBAlertItem didPlayPresentationSound]
  -[SBAlertItem deactivateForReason:]
  -[SBAlertItem presentationStateDidChangeFromState:toState:]
  -[SBAlertItem _clearAlertController]
  -[SBAlertItem hideOnClonedDisplay]
  -[SBAlertItem configure:requirePasscodeForActions:]
  -[SBAlertItem alertItemDidAppear]
  -[SBAlertItem alertItemDidDisappear]
  -[SBAlertItem deactivateForButton]
  -[SBAlertItem performUnlockAction]
  -[SBAlertItem allowMenuButtonDismissal]
  -[SBAlertItem allowLockScreenDismissal]
  -[SBAlertItem shouldShowInLockScreen]
  -[SBAlertItem shouldShowInEmergencyCall]
  -[SBAlertItem wakeDisplay]
  -[SBAlertItem reappearsAfterLock]
  -[SBAlertItem reappearsAfterUnlock]
  -[SBAlertItem playPresentationSound]
  -[SBAlertItem didFailToActivate]
  -[SBAlertItem didActivate]
  -[SBAlertItem willRelockForButtonPress:]
  -[SBAlertItem willDeactivateForReason:]
  -[SBAlertItem didDeactivateForReason:]
  -[SBAlertItem setIconImagePath:]
  -[SBAlertItem forcesModalAlertAppearance]
  -[SBAlertItem behavesSuperModally]
  -[SBAlertItem allowInLoginWindow]
  -[SBAlertItem alertPriority]
  -[SBAlertItem dismissesOverlaysOnLockScreen]
  -[SBAlertItem doCleanupAfterDeactivationAnimation]
  -[SBAlertItem _deactivationCompleted]
  -[SBAlertItem _prepareNewAlertControllerWithLockedState:requirePasscodeForActions:]
  -[SBAlertItem _noteVolumeOrLockPressed]
  -[SBAlertItem _hasActiveKeyboardOnScreen]
  -[SBAlertItem _didEverActivate]
  -[SBAlertItem _displayActionButtonOnLockScreen]
  -[SBAlertItem _publicDescription]
  -[SBAlertItem buttonDismissed]
  -[SBAlertItem ignoreIfAlreadyDisplaying]
  -[SBAlertItem setIgnoreIfAlreadyDisplaying:]
  -[SBAlertItem allowInSetup]
  -[SBAlertItem setAllowInSetup:]
  -[SBAlertItem suppressForKeynote]
  -[SBAlertItem setSuppressForKeynote:]
  -[SBAlertItem pendInSetupIfNotAllowed]
  -[SBAlertItem setPendInSetupIfNotAllowed:]
  -[SBAlertItem pendWhileKeyBagLocked]
  -[SBAlertItem setPendWhileKeyBagLocked:]
  -[SBAlertItem allowMessageInCar]
  -[SBAlertItem setAllowMessageInCar:]
  -[SBAlertItem _setIgnoresQuietMode:]
  -[SBAlertItem _iconImagePath]
  -[SBAlertItem _attachmentImage]
  -[SBAlertItem _setAttachmentImage:]


_SBAlertItemHeaderViewController : UIViewController /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
 @property  UIImage *image

  // instance methods
  -[_SBAlertItemHeaderViewController .cxx_destruct]
  -[_SBAlertItemHeaderViewController image]
  -[_SBAlertItemHeaderViewController initWithImage:]
  -[_SBAlertItemHeaderViewController loadView]
  -[_SBAlertItemHeaderViewController _expectedSize]
  -[_SBAlertItemHeaderViewController _topMarginOffset]
  -[_SBAlertItemHeaderViewController _bottomMarginOffset]


_SBSceneHandleObserverBehavior : NSObject /usr/lib/libSystem.B.dylib
 @property  <SBSceneHandleObserver> *observer
 @property  BOOL didCreateScene
 @property  BOOL didDestroyScene
 @property  BOOL didUpdateContentState
 @property  BOOL didUpdateSettingsWithDiff
 @property  BOOL didUpdateClientSettingsWithDiff
 @property  BOOL didUpdatePairingStatusForExternalSceneIdentifiers

  // class methods
  +[_SBSceneHandleObserverBehavior behaviorFromObserver:]

  // instance methods
  -[_SBSceneHandleObserverBehavior observer]
  -[_SBSceneHandleObserverBehavior .cxx_destruct]
  -[_SBSceneHandleObserverBehavior initWithObserver:]
  -[_SBSceneHandleObserverBehavior didCreateScene]
  -[_SBSceneHandleObserverBehavior setDidCreateScene:]
  -[_SBSceneHandleObserverBehavior didDestroyScene]
  -[_SBSceneHandleObserverBehavior setDidDestroyScene:]
  -[_SBSceneHandleObserverBehavior didUpdateContentState]
  -[_SBSceneHandleObserverBehavior setDidUpdateContentState:]
  -[_SBSceneHandleObserverBehavior didUpdateSettingsWithDiff]
  -[_SBSceneHandleObserverBehavior setDidUpdateSettingsWithDiff:]
  -[_SBSceneHandleObserverBehavior didUpdateClientSettingsWithDiff]
  -[_SBSceneHandleObserverBehavior setDidUpdateClientSettingsWithDiff:]
  -[_SBSceneHandleObserverBehavior didUpdatePairingStatusForExternalSceneIdentifiers]
  -[_SBSceneHandleObserverBehavior setDidUpdatePairingStatusForExternalSceneIdentifiers:]


SBSceneHandle : NSObject /usr/lib/libSystem.B.dylib <FBSceneMonitorDelegate, FBSceneObserver, BSDescriptionProviding>
 @property  FBSceneMonitor *sceneMonitor
 @property  FBSSceneDefinition *definition
 @property  FBSDisplayIdentity *displayIdentity
 @property  BOOL manuallyControlsLifecycle
 @property  NSString *sceneIdentifier
 @property  FBScene *scene
 @property  FBScene *sceneIfExists
 @property  long long contentState
 @property  BOOL contentReady
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSceneHandle init]
  -[SBSceneHandle dealloc]
  -[SBSceneHandle isEqual:]
  -[SBSceneHandle .cxx_destruct]
  -[SBSceneHandle addObserver:]
  -[SBSceneHandle removeObserver:]
  -[SBSceneHandle succinctDescription]
  -[SBSceneHandle descriptionWithMultilinePrefix:]
  -[SBSceneHandle succinctDescriptionBuilder]
  -[SBSceneHandle descriptionBuilderWithMultilinePrefix:]
  -[SBSceneHandle _definition]
  -[SBSceneHandle _enumerateObserversWithBlock:]
  -[SBSceneHandle _commonInit]
  -[SBSceneHandle scene]
  -[SBSceneHandle _setScene:]
  -[SBSceneHandle displayIdentity]
  -[SBSceneHandle sceneIdentifier]
  -[SBSceneHandle sceneContentStateDidChange:]
  -[SBSceneHandle contentState]
  -[SBSceneHandle _createMonitor]
  -[SBSceneHandle sceneMonitor:sceneSettingsDidChangeWithDiff:previousSettings:]
  -[SBSceneHandle sceneMonitor:pairingStatusDidChangeForExternalSceneIDs:]
  -[SBSceneHandle sceneMonitor:sceneClientSettingsDidChangeWithDiff:transitionContext:]
  -[SBSceneHandle sceneMonitor:sceneWasCreated:]
  -[SBSceneHandle sceneMonitor:sceneWasDestroyed:]
  -[SBSceneHandle sceneIfExists]
  -[SBSceneHandle isContentReady]
  -[SBSceneHandle _initWithDefinition:scene:displayIdentity:]
  -[SBSceneHandle _didUpdateSettingsWithDiff:previousSettings:]
  -[SBSceneHandle _didUpdateClientSettingsWithDiff:transitionContext:]
  -[SBSceneHandle _didUpdatePairingStatusForExternalSceneIdentifiers:]
  -[SBSceneHandle _didUpdateContentState:]
  -[SBSceneHandle _didCreateScene:]
  -[SBSceneHandle _didDestroyScene:]
  -[SBSceneHandle _initWithScene:displayIdentity:]
  -[SBSceneHandle _initWithDefinition:displayIdentity:]
  -[SBSceneHandle isPairedWithExternalSceneWithIdentifier:]
  -[SBSceneHandle _setSceneMonitor:]
  -[SBSceneHandle _noteSceneCreated:]
  -[SBSceneHandle _noteSceneDestroyed:]
  -[SBSceneHandle _setDisplayIdentity:]
  -[SBSceneHandle _sceneMonitor]
  -[SBSceneHandle _manuallyControlsLifecycle]
  -[SBSceneHandle _setManuallyControlsLifecycle:]


SBUISearchUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBUISearchUtilities idealSearchPlatterWidth]

  // instance methods
  -[SBUISearchUtilities init]


_SBAlertController : UIAlertController /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard <BSDescriptionProviding>
 @property  SBAlertItem *alertItem
 @property  <_SBAlertControllerDelegate> *alertControllerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBAlertController .cxx_destruct]
  -[_SBAlertController succinctDescription]
  -[_SBAlertController descriptionWithMultilinePrefix:]
  -[_SBAlertController succinctDescriptionBuilder]
  -[_SBAlertController descriptionBuilderWithMultilinePrefix:]
  -[_SBAlertController viewDidDisappear:]
  -[_SBAlertController _canShowWhileLocked]
  -[_SBAlertController alertItem]
  -[_SBAlertController setAlertItem:]
  -[_SBAlertController setHiddenOnClonedDisplay:]
  -[_SBAlertController alertControllerDelegate]
  -[_SBAlertController setAlertControllerDelegate:]


SBUIActionPlatterViewController : UIViewController /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard <UIGestureRecognizerDelegate>
 @property  NSArray *actions
 @property  unsigned long systemInteractionStartIndex
 @property  UILongPressGestureRecognizer *gestureRecognizer
 @property  BOOL reversesActions
 @property  long long imagePosition
 @property  <SBUIActionPlatterViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUIActionPlatterViewController initWithCoder:]
  -[SBUIActionPlatterViewController delegate]
  -[SBUIActionPlatterViewController setDelegate:]
  -[SBUIActionPlatterViewController .cxx_destruct]
  -[SBUIActionPlatterViewController loadView]
  -[SBUIActionPlatterViewController gestureRecognizerShouldBegin:]
  -[SBUIActionPlatterViewController initWithNibName:bundle:]
  -[SBUIActionPlatterViewController actions]
  -[SBUIActionPlatterViewController viewWillDisappear:]
  -[SBUIActionPlatterViewController viewDidAppear:]
  -[SBUIActionPlatterViewController gestureRecognizer]
  -[SBUIActionPlatterViewController imagePosition]
  -[SBUIActionPlatterViewController setImagePosition:]
  -[SBUIActionPlatterViewController initWithActions:gestureRecognizer:]
  -[SBUIActionPlatterViewController reversesActions]
  -[SBUIActionPlatterViewController _updateKeylineViews]
  -[SBUIActionPlatterViewController _handleLongPressGestureRecognizer:]
  -[SBUIActionPlatterViewController setSystemInteractionStartIndex:]
  -[SBUIActionPlatterViewController setReversesActions:]
  -[SBUIActionPlatterViewController systemInteractionStartIndex]


SBLockScreenPluginInCallAction : SBLockScreenPluginAction
  // instance methods
  -[SBLockScreenPluginInCallAction isInCallAction]


SBUIPluginActivationContext : NSObject /usr/lib/libSystem.B.dylib
 @property  UIScreen *screen
 @property  int activationEvent

  // instance methods
  -[SBUIPluginActivationContext .cxx_destruct]
  -[SBUIPluginActivationContext screen]
  -[SBUIPluginActivationContext setScreen:]
  -[SBUIPluginActivationContext activationEvent]
  -[SBUIPluginActivationContext setActivationEvent:]


SBUIAction : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *title
 @property  NSString *subtitle
 @property  UIImage *image
 @property  NSString *systemImageName
 @property  UIView *badgeView
 @property  @? handler

  // instance methods
  -[SBUIAction init]
  -[SBUIAction handler]
  -[SBUIAction .cxx_destruct]
  -[SBUIAction title]
  -[SBUIAction image]
  -[SBUIAction subtitle]
  -[SBUIAction badgeView]
  -[SBUIAction systemImageName]
  -[SBUIAction initWithTitle:handler:]
  -[SBUIAction initWithTitle:subtitle:image:badgeView:handler:]
  -[SBUIAction initWithTitle:subtitle:systemImageName:badgeView:handler:]
  -[SBUIAction initWithTitle:subtitle:image:handler:]
  -[SBUIAction initWithTitle:subtitle:handler:]


SBUIFlashlightController : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL available
 @property  BOOL overheated
 @property  unsigned long level

  // class methods
  +[SBUIFlashlightController sharedInstance]

  // instance methods
  -[SBUIFlashlightController init]
  -[SBUIFlashlightController .cxx_destruct]
  -[SBUIFlashlightController level]
  -[SBUIFlashlightController addObserver:]
  -[SBUIFlashlightController observeValueForKeyPath:ofObject:change:context:]
  -[SBUIFlashlightController removeObserver:]
  -[SBUIFlashlightController isAvailable]
  -[SBUIFlashlightController setLevel:]
  -[SBUIFlashlightController warmUp]
  -[SBUIFlashlightController removeAllObservers]
  -[SBUIFlashlightController isOverheated]
  -[SBUIFlashlightController _loadFlashlightLevel]
  -[SBUIFlashlightController _postLevelChangeNotification:]
  -[SBUIFlashlightController _storeFlashlightLevel:]
  -[SBUIFlashlightController _setFlashlightLevel:]
  -[SBUIFlashlightController _turnPowerOn]
  -[SBUIFlashlightController _turnPowerOff]
  -[SBUIFlashlightController _updateStateWithAvailable:level:overheated:]
  -[SBUIFlashlightController _postOverheatedChangeNotification:]
  -[SBUIFlashlightController _postAvailabilityChangeNotification:]
  -[SBUIFlashlightController turnFlashlightOnForReason:]
  -[SBUIFlashlightController turnFlashlightOffForReason:]
  -[SBUIFlashlightController coolDown]


SBLockScreenLegibilitySettings : _UILegibilitySettings /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
 @property  UIColor *backgroundColorHint
 @property  BOOL vibrancyDisabled

  // class methods
  +[SBLockScreenLegibilitySettings defaultSettings]

  // instance methods
  -[SBLockScreenLegibilitySettings .cxx_destruct]
  -[SBLockScreenLegibilitySettings backgroundColorHint]
  -[SBLockScreenLegibilitySettings setBackgroundColorHint:]
  -[SBLockScreenLegibilitySettings vibrancyDisabled]
  -[SBLockScreenLegibilitySettings setVibrancyDisabled:]


SBLockScreenPluginAction : NSObject /usr/lib/libSystem.B.dylib
 @property  @? completion
 @property  NSString *label
 @property  long long authenticationPolicy

  // class methods
  +[SBLockScreenPluginAction action]
  +[SBLockScreenPluginAction actionWithCompletion:]

  // instance methods
  -[SBLockScreenPluginAction init]
  -[SBLockScreenPluginAction .cxx_destruct]
  -[SBLockScreenPluginAction setLabel:]
  -[SBLockScreenPluginAction label]
  -[SBLockScreenPluginAction completion]
  -[SBLockScreenPluginAction initWithCompletion:]
  -[SBLockScreenPluginAction authenticationPolicy]
  -[SBLockScreenPluginAction setAuthenticationPolicy:]
  -[SBLockScreenPluginAction isCallAction]
  -[SBLockScreenPluginAction isInCallAction]
  -[SBLockScreenPluginAction sendResponseWithSuccess:]
  -[SBLockScreenPluginAction isApplicationAction]
  -[SBLockScreenPluginAction isEmergencyDialerAction]


SBUIActionViewLabel : UIView /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
 @property  NSString *text
 @property  UIFont *font
 @property  UIColor *textColor
 @property  long long textAlignment
 @property  long long lineBreakMode
 @property  long long numberOfLines

  // instance methods
  -[SBUIActionViewLabel .cxx_destruct]
  -[SBUIActionViewLabel lineBreakMode]
  -[SBUIActionViewLabel setLineBreakMode:]
  -[SBUIActionViewLabel text]
  -[SBUIActionViewLabel setText:]
  -[SBUIActionViewLabel initWithFrame:]
  -[SBUIActionViewLabel setTextColor:]
  -[SBUIActionViewLabel setFont:]
  -[SBUIActionViewLabel setNumberOfLines:]
  -[SBUIActionViewLabel setTextAlignment:]
  -[SBUIActionViewLabel font]
  -[SBUIActionViewLabel alignmentRectInsets]
  -[SBUIActionViewLabel viewForFirstBaselineLayout]
  -[SBUIActionViewLabel viewForLastBaselineLayout]
  -[SBUIActionViewLabel numberOfLines]
  -[SBUIActionViewLabel textColor]
  -[SBUIActionViewLabel textAlignment]
  -[SBUIActionViewLabel mt_removeAllVisualStyling]
  -[SBUIActionViewLabel _mt_applyVisualStyling:]


SBUIViewFloatSpringProperty : UIViewFloatAnimatableProperty /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard <UIViewSpringAnimationBehaviorDescribing>
 @property  double input
 @property  double output
 @property  BOOL tracking

  // class methods
  +[SBUIViewFloatSpringProperty _withoutAnimation:]

  // instance methods
  -[SBUIViewFloatSpringProperty init]
  -[SBUIViewFloatSpringProperty input]
  -[SBUIViewFloatSpringProperty setInput:]
  -[SBUIViewFloatSpringProperty setDampingRatio:response:]
  -[SBUIViewFloatSpringProperty setTracking:]
  -[SBUIViewFloatSpringProperty parametersForTransitionFromState:toState:]
  -[SBUIViewFloatSpringProperty output]
  -[SBUIViewFloatSpringProperty setOutput:]
  -[SBUIViewFloatSpringProperty tracking]
  -[SBUIViewFloatSpringProperty setDampingRatio:response:impulse:]
  -[SBUIViewFloatSpringProperty setTrackingDampingRatio:response:]
  -[SBUIViewFloatSpringProperty setTrackingDampingRatio:response:impulse:]
  -[SBUIViewFloatSpringProperty projectForDeceleration:]
  -[SBUIViewFloatSpringProperty projectForTime:]


SBOrientationTransformWrapperView : UIView /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
 @property  long long contentOrientation
 @property  long long containerOrientation
 @property  NSArray *contentViews

  // instance methods
  -[SBOrientationTransformWrapperView .cxx_destruct]
  -[SBOrientationTransformWrapperView setBounds:]
  -[SBOrientationTransformWrapperView setCenter:]
  -[SBOrientationTransformWrapperView setFrame:]
  -[SBOrientationTransformWrapperView initWithFrame:]
  -[SBOrientationTransformWrapperView sizeThatFits:]
  -[SBOrientationTransformWrapperView layoutSubviews]
  -[SBOrientationTransformWrapperView hitTest:withEvent:]
  -[SBOrientationTransformWrapperView setContainerOrientation:]
  -[SBOrientationTransformWrapperView setContentOrientation:]
  -[SBOrientationTransformWrapperView _updateGeometry]
  -[SBOrientationTransformWrapperView containerOrientation]
  -[SBOrientationTransformWrapperView _referenceContainerSize]
  -[SBOrientationTransformWrapperView contentOrientation]
  -[SBOrientationTransformWrapperView contentViews]
  -[SBOrientationTransformWrapperView addContentView:]
  -[SBOrientationTransformWrapperView addHitTestView:]
  -[SBOrientationTransformWrapperView addGestureRecognizerToTransformedView:]
  -[SBOrientationTransformWrapperView removeGestureRecognizerFromTransformedView:]
  -[SBOrientationTransformWrapperView bringContentSubviewToFront:]
  -[SBOrientationTransformWrapperView convertPointFromContainerInterfaceOrientationToContentInterfaceOrientation:]
  -[SBOrientationTransformWrapperView convertRectFromContainerInterfaceOrientationToContentInterfaceOrientation:]
  -[SBOrientationTransformWrapperView convertTransformFromContainerInterfaceOrientationToContentInterfaceOrientation:]
  -[SBOrientationTransformWrapperView convertPointFromContentInterfaceOrientationToContainerInterfaceOrientation:]
  -[SBOrientationTransformWrapperView convertRectFromContentInterfaceOrientationToContainerInterfaceOrientation:]
  -[SBOrientationTransformWrapperView convertTransformFromContentInterfaceOrientationToContainerInterfaceOrientation:]


_SBOrientationTransformedContentView : _UIDirectionalRotationView /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
 @property  long long contentOrientation

  // instance methods
  -[_SBOrientationTransformedContentView initWithFrame:]
  -[_SBOrientationTransformedContentView setContentOrientation:]
  -[_SBOrientationTransformedContentView contentOrientation]


SBUIChevronView : UIView /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard <_SBFVibrantView>
 @property  double animationDuration
 @property  long long state
 @property  UIColor *color
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _SBFVibrantSettings *vibrantSettings

  // instance methods
  -[SBUIChevronView .cxx_destruct]
  -[SBUIChevronView state]
  -[SBUIChevronView setState:]
  -[SBUIChevronView color]
  -[SBUIChevronView setColor:]
  -[SBUIChevronView initWithColor:]
  -[SBUIChevronView _setState:]
  -[SBUIChevronView initWithFrame:]
  -[SBUIChevronView sizeThatFits:]
  -[SBUIChevronView layoutSubviews]
  -[SBUIChevronView animationDuration]
  -[SBUIChevronView setAnimationDuration:]
  -[SBUIChevronView setBackgroundView:]
  -[SBUIChevronView vibrantSettings]
  -[SBUIChevronView setVibrantSettings:]
  -[SBUIChevronView setState:animated:]
  -[SBUIChevronView _setUnified:]
  -[SBUIChevronView _layoutGrabberView:forState:]
  -[SBUIChevronView _frameForGrabberView:forState:unified:]
  -[SBUIChevronView _transformForGrabberView:forState:]
  -[SBUIChevronView configureForLightStyle]


SpringBoardUI : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SpringBoardUI load]


SBLockScreenPluginPresentation : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  {UIEdgeInsets=dddd} suggestedContentInsets
 @property  _UILegibilitySettings *legibilitySettings

  // instance methods
  -[SBLockScreenPluginPresentation copyWithZone:]
  -[SBLockScreenPluginPresentation .cxx_destruct]
  -[SBLockScreenPluginPresentation succinctDescription]
  -[SBLockScreenPluginPresentation descriptionWithMultilinePrefix:]
  -[SBLockScreenPluginPresentation succinctDescriptionBuilder]
  -[SBLockScreenPluginPresentation descriptionBuilderWithMultilinePrefix:]
  -[SBLockScreenPluginPresentation legibilitySettings]
  -[SBLockScreenPluginPresentation setLegibilitySettings:]
  -[SBLockScreenPluginPresentation suggestedContentInsets]
  -[SBLockScreenPluginPresentation setSuggestedContentInsets:]


SBMutableLockScreenPluginPresentation : SBLockScreenPluginPresentation
 @property  {UIEdgeInsets=dddd} suggestedContentInsets
 @property  _UILegibilitySettings *legibilitySettings

  // instance methods
  -[SBMutableLockScreenPluginPresentation copyWithZone:]


SBUIActionView : UIView /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
 @property  SBUIAction *action
 @property  long long imagePosition
 @property  BOOL highlighted
 @property  double leadingContentMargin
 @property  double trailingContentMargin

  // instance methods
  -[SBUIActionView initWithCoder:]
  -[SBUIActionView .cxx_destruct]
  -[SBUIActionView action]
  -[SBUIActionView initWithFrame:]
  -[SBUIActionView layoutSubviews]
  -[SBUIActionView isHighlighted]
  -[SBUIActionView setHighlighted:]
  -[SBUIActionView initWithAction:]
  -[SBUIActionView willMoveToSuperview:]
  -[SBUIActionView _setupSubviews]
  -[SBUIActionView imagePosition]
  -[SBUIActionView setImagePosition:]
  -[SBUIActionView leadingContentMargin]
  -[SBUIActionView setHighlighted:withFeedbackRetargetBehavior:]
  -[SBUIActionView _updateVisualStylingIfNecessary]
  -[SBUIActionView _invalidateVisualStyling]
  -[SBUIActionView _updateImageViewLayoutConstraints]
  -[SBUIActionView trailingContentMargin]


SBUIBannerAction : NSObject /usr/lib/libSystem.B.dylib
 @property  @? actionBlock
 @property  NSString *remoteViewControllerClassName
 @property  NSString *remoteServiceBundleIdentifier
 @property  unsigned long behavior
 @property  NSString *identifier
 @property  NSDictionary *parameters
 @property  unsigned long activationMode

  // class methods
  +[SBUIBannerAction actionWithBlock:]

  // instance methods
  -[SBUIBannerAction .cxx_destruct]
  -[SBUIBannerAction identifier]
  -[SBUIBannerAction setIdentifier:]
  -[SBUIBannerAction parameters]
  -[SBUIBannerAction setParameters:]
  -[SBUIBannerAction activationMode]
  -[SBUIBannerAction behavior]
  -[SBUIBannerAction setBehavior:]
  -[SBUIBannerAction actionBlock]
  -[SBUIBannerAction setActionBlock:]
  -[SBUIBannerAction remoteServiceBundleIdentifier]
  -[SBUIBannerAction remoteViewControllerClassName]
  -[SBUIBannerAction setRemoteViewControllerClassName:]
  -[SBUIBannerAction setRemoteServiceBundleIdentifier:]
  -[SBUIBannerAction initWithActionBlock:remoteViewControllerClassName:remoteServiceBundleIdentifier:actionIdentifier:activationMode:behavior:parameters:]


SBLockScreenPluginApplicationAction : SBLockScreenPluginAction
 @property  NSString *bundleID
 @property  NSURL *url
 @property  unsigned long transitionStyle

  // class methods
  +[SBLockScreenPluginApplicationAction actionWithURL:]
  +[SBLockScreenPluginApplicationAction actionWithBundleID:]

  // instance methods
  -[SBLockScreenPluginApplicationAction .cxx_destruct]
  -[SBLockScreenPluginApplicationAction url]
  -[SBLockScreenPluginApplicationAction setURL:]
  -[SBLockScreenPluginApplicationAction bundleID]
  -[SBLockScreenPluginApplicationAction setBundleID:]
  -[SBLockScreenPluginApplicationAction succinctDescription]
  -[SBLockScreenPluginApplicationAction descriptionWithMultilinePrefix:]
  -[SBLockScreenPluginApplicationAction succinctDescriptionBuilder]
  -[SBLockScreenPluginApplicationAction descriptionBuilderWithMultilinePrefix:]
  -[SBLockScreenPluginApplicationAction setTransitionStyle:]
  -[SBLockScreenPluginApplicationAction transitionStyle]
  -[SBLockScreenPluginApplicationAction isApplicationAction]


SBLockScreenModalViewFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBLockScreenModalViewFactory newLockScreenModalView]


SBUIPluginController : NSObject /usr/lib/libSystem.B.dylib <SBPluginBundleController>
 @property  BOOL visible
 @property  <SBUIPluginControllerHost> *host
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUIPluginController host]
  -[SBUIPluginController .cxx_destruct]
  -[SBUIPluginController setHost:]
  -[SBUIPluginController setVisible:]
  -[SBUIPluginController isVisible]
  -[SBUIPluginController registeredWithHost]
  -[SBUIPluginController supportedAndEnabled]
  -[SBUIPluginController wantsActivationEvent:eventSource:interval:]
  -[SBUIPluginController prepareForActivationEvent:eventSource:afterInterval:]
  -[SBUIPluginController cancelPendingActivationEvent:]
  -[SBUIPluginController handleActivationEvent:eventSource:context:]
  -[SBUIPluginController handledPasscodeUnlockWithCompletion:]
  -[SBUIPluginController handledButtonDownEventFromSource:]
  -[SBUIPluginController handledButtonUpEventFromSource:]
  -[SBUIPluginController handledButtonTapFromSource:]
  -[SBUIPluginController viewControllerForActivationContext:]


SBUIBannerItem : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[SBUIBannerItem title]
  -[SBUIBannerItem priority]
  -[SBUIBannerItem action]
  -[SBUIBannerItem message]
  -[SBUIBannerItem sound]
  -[SBUIBannerItem sortDate]
  -[SBUIBannerItem isSticky]
  -[SBUIBannerItem subActions]
  -[SBUIBannerItem actionWithIdentifier:]
  -[SBUIBannerItem shouldPlayLightsAndSirens]
  -[SBUIBannerItem canShowInAssistant]
  -[SBUIBannerItem canShowWhileLocked]
  -[SBUIBannerItem shouldShowModalSubActions]
  -[SBUIBannerItem subActionLabels]
  -[SBUIBannerItem hasSubActions]
  -[SBUIBannerItem defaultActionWithContext:]
  -[SBUIBannerItem lockScreenActionContextWithContext:]


SBUISound : NSObject /usr/lib/libSystem.B.dylib
 @property  long long soundType
 @property  unsigned int systemSoundID
 @property  unsigned int _resolvedSystemSoundID
 @property  unsigned long soundBehavior
 @property  NSDictionary *vibrationPattern
 @property  TLAlert *toneAlert
 @property  NSString *songPath
 @property  long long eventType

  // class methods
  +[SBUISound soundWithFeedbackEventType:]

  // instance methods
  -[SBUISound .cxx_destruct]
  -[SBUISound stop]
  -[SBUISound eventType]
  -[SBUISound _completionBlock]
  -[SBUISound isPlaying]
  -[SBUISound systemSoundID]
  -[SBUISound setEventType:]
  -[SBUISound vibrationPattern]
  -[SBUISound setVibrationPattern:]
  -[SBUISound soundType]
  -[SBUISound setSoundType:]
  -[SBUISound _setCompletionBlock:]
  -[SBUISound initWithToneAlertConfiguration:]
  -[SBUISound soundBehavior]
  -[SBUISound setSoundBehavior:]
  -[SBUISound setSystemSoundID:]
  -[SBUISound initWithToneAlert:]
  -[SBUISound songPath]
  -[SBUISound setSongPath:]
  -[SBUISound playInEvironments:completion:]
  -[SBUISound setToneAlert:]
  -[SBUISound initWithFeedbackEventType:]
  -[SBUISound toneAlert]
  -[SBUISound initWithSystemSoundID:behavior:vibrationPattern:]
  -[SBUISound initWithSystemSoundPath:behavior:vibrationPattern:]
  -[SBUISound initWithToneAlert:accountIdentifier:toneIdentifier:vibrationIdentifier:]
  -[SBUISound _resolvedSystemSoundID]
  -[SBUISound _setResolvedSoundID:]


SBUIActionKeylineView : UIView /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
 @property  double height

  // instance methods
  -[SBUIActionKeylineView init]
  -[SBUIActionKeylineView .cxx_destruct]
  -[SBUIActionKeylineView height]
  -[SBUIActionKeylineView setHeight:]
  -[SBUIActionKeylineView intrinsicContentSize]
  -[SBUIActionKeylineView layoutSubviews]
  -[SBUIActionKeylineView willMoveToSuperview:]
  -[SBUIActionKeylineView _updateVisualStylingIfNecessary]
  -[SBUIActionKeylineView _invalidateVisualStyling]
  -[SBUIActionKeylineView _updateCornerMask]
  -[SBUIActionKeylineView heightInPixels]


SBLockScreenPluginAppearanceContext : NSObject /usr/lib/libSystem.B.dylib <SBLockScreenPluginMutableAppearance, SBLockScreenPluginAppearance, NSCopying, NSMutableCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hidden
 @property  unsigned long restrictedCapabilities
 @property  long long backgroundStyle
 @property  long long presentationStyle
 @property  long long notificationBehavior
 @property  NSArray *elementOverrides
 @property  SBLockScreenLegibilitySettings *legibilitySettings
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} presentationRegion

  // instance methods
  -[SBLockScreenPluginAppearanceContext copyWithZone:]
  -[SBLockScreenPluginAppearanceContext mutableCopyWithZone:]
  -[SBLockScreenPluginAppearanceContext .cxx_destruct]
  -[SBLockScreenPluginAppearanceContext isHidden]
  -[SBLockScreenPluginAppearanceContext succinctDescription]
  -[SBLockScreenPluginAppearanceContext descriptionWithMultilinePrefix:]
  -[SBLockScreenPluginAppearanceContext succinctDescriptionBuilder]
  -[SBLockScreenPluginAppearanceContext descriptionBuilderWithMultilinePrefix:]
  -[SBLockScreenPluginAppearanceContext setHidden:]
  -[SBLockScreenPluginAppearanceContext setPresentationStyle:]
  -[SBLockScreenPluginAppearanceContext presentationStyle]
  -[SBLockScreenPluginAppearanceContext setBackgroundStyle:]
  -[SBLockScreenPluginAppearanceContext legibilitySettings]
  -[SBLockScreenPluginAppearanceContext setLegibilitySettings:]
  -[SBLockScreenPluginAppearanceContext backgroundStyle]
  -[SBLockScreenPluginAppearanceContext restrictedCapabilities]
  -[SBLockScreenPluginAppearanceContext setRestrictedCapabilities:]
  -[SBLockScreenPluginAppearanceContext notificationBehavior]
  -[SBLockScreenPluginAppearanceContext setNotificationBehavior:]
  -[SBLockScreenPluginAppearanceContext elementOverrides]
  -[SBLockScreenPluginAppearanceContext setElementOverrides:]
  -[SBLockScreenPluginAppearanceContext presentationRegion]
  -[SBLockScreenPluginAppearanceContext setPresentationRegion:]
  -[SBLockScreenPluginAppearanceContext initWithAppearance:]


SBLockScreenPluginMutableAppearanceContext : SBLockScreenPluginAppearanceContext <SBLockScreenPluginMutableAppearance>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hidden
 @property  unsigned long restrictedCapabilities
 @property  long long backgroundStyle
 @property  long long presentationStyle
 @property  long long notificationBehavior
 @property  NSArray *elementOverrides
 @property  SBLockScreenLegibilitySettings *legibilitySettings
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} presentationRegion

  // instance methods
  -[SBLockScreenPluginMutableAppearanceContext copyWithZone:]


SBUILockScreenDisableAssertion : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBUILockScreenDisableAssertion setLockScreenDisableAssertionClass:]
  +[SBUILockScreenDisableAssertion lockScreenDisableAssertionWithIdentifier:]

  // instance methods
  -[SBUILockScreenDisableAssertion initWithIdentifier:]


SBUIStarkBannerViewButton : UIControl /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
 @property  NSString *text
 @property  UILabel *textLabel
 @property  UIColor *unselectedTextColor
 @property  UIColor *selectedTextColor
 @property  UIImage *unselectedImage
 @property  UIImage *selectedImage
 @property  UIColor *highlightColor

  // class methods
  +[SBUIStarkBannerViewButton buttonWithOK]
  +[SBUIStarkBannerViewButton buttonWithText:]
  +[SBUIStarkBannerViewButton buttonWithChevronImageForTraitCollection:]
  +[SBUIStarkBannerViewButton _chevronImageForTraitCollection:selected:]
  +[SBUIStarkBannerViewButton _chevronImageForTraitCollection:]
  +[SBUIStarkBannerViewButton buttonWithOKAndHighlightColor:]
  +[SBUIStarkBannerViewButton buttonWithText:highlightColor:]
  +[SBUIStarkBannerViewButton buttonWithChevronImageForTraitCollection:highlightColor:]
  +[SBUIStarkBannerViewButton highlightColorForNightTime:]

  // instance methods
  -[SBUIStarkBannerViewButton .cxx_destruct]
  -[SBUIStarkBannerViewButton text]
  -[SBUIStarkBannerViewButton setText:]
  -[SBUIStarkBannerViewButton initWithFrame:]
  -[SBUIStarkBannerViewButton traitCollectionDidChange:]
  -[SBUIStarkBannerViewButton layoutSubviews]
  -[SBUIStarkBannerViewButton textLabel]
  -[SBUIStarkBannerViewButton setSelectedImage:]
  -[SBUIStarkBannerViewButton unselectedImage]
  -[SBUIStarkBannerViewButton selectedImage]
  -[SBUIStarkBannerViewButton setUnselectedImage:]
  -[SBUIStarkBannerViewButton highlightColor]
  -[SBUIStarkBannerViewButton setHighlightColor:]
  -[SBUIStarkBannerViewButton setTextLabel:]
  -[SBUIStarkBannerViewButton setSelectedTextColor:]
  -[SBUIStarkBannerViewButton selectedTextColor]
  -[SBUIStarkBannerViewButton setUnselectedTextColor:]
  -[SBUIStarkBannerViewButton unselectedTextColor]


SBUICarPlayMappedImageCache : BSUIMappedImageCache /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[SBUICarPlayMappedImageCache sharedCache]


SBCrossfadeView : UIView /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
 @property  BSUIAnimationFactory *animationFactory
 @property  BOOL allowsGroupOpacityDuringCrossfade
 @property  BOOL adaptsAnimationFactoryTimingFunction

  // class methods
  +[SBCrossfadeView crossfadeViewWithStartView:endView:translucent:]

  // instance methods
  -[SBCrossfadeView .cxx_destruct]
  -[SBCrossfadeView layoutSubviews]
  -[SBCrossfadeView _shouldAnimatePropertyWithKey:]
  -[SBCrossfadeView animationFactory]
  -[SBCrossfadeView setAnimationFactory:]
  -[SBCrossfadeView crossfadeWithCompletion:]
  -[SBCrossfadeView _initWithStartView:endView:translucent:]
  -[SBCrossfadeView allowsGroupOpacityDuringCrossfade]
  -[SBCrossfadeView adaptsAnimationFactoryTimingFunction]
  -[SBCrossfadeView setAllowsGroupOpacityDuringCrossfade:]
  -[SBCrossfadeView setAdaptsAnimationFactoryTimingFunction:]


SBUICoronaAnimationController : NSObject /usr/lib/libSystem.B.dylib
 @property  UIViewPropertyAnimator *propertyAnimator

  // class methods
  +[SBUICoronaAnimationController animationSettingsForTransitionToStyle:]

  // instance methods
  -[SBUICoronaAnimationController .cxx_destruct]
  -[SBUICoronaAnimationController _propertyAnimator]
  -[SBUICoronaAnimationController addParticipant:]
  -[SBUICoronaAnimationController removeParticipant:]
  -[SBUICoronaAnimationController _setPropertyAnimator:]
  -[SBUICoronaAnimationController _configurePropertyAnimatorIfNecessaryForChangeToUserInterfaceStyle:]
  -[SBUICoronaAnimationController coronaDidChange:]


SBLockScreenTimerDialView : UIView /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard <SBUILegibility>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UILegibilitySettings *legibilitySettings
 @property  double strength

  // instance methods
  -[SBLockScreenTimerDialView .cxx_destruct]
  -[SBLockScreenTimerDialView initWithFrame:]
  -[SBLockScreenTimerDialView sizeThatFits:]
  -[SBLockScreenTimerDialView legibilitySettings]
  -[SBLockScreenTimerDialView setLegibilitySettings:]
  -[SBLockScreenTimerDialView setStrength:]
  -[SBLockScreenTimerDialView strength]
  -[SBLockScreenTimerDialView _imageNameForCurrentContentSize:]
  -[SBLockScreenTimerDialView _newDialViewForSettings:]


SBUIBannerTargetProxy : NSObject /usr/lib/libSystem.B.dylib <SBUIBannerTarget>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  ^v bannerTargetIdentifier
 @property  long long bannerTargetIdiom

  // instance methods
  -[SBUIBannerTargetProxy invalidate]
  -[SBUIBannerTargetProxy .cxx_destruct]
  -[SBUIBannerTargetProxy bannerTargetIdentifier]
  -[SBUIBannerTargetProxy bannerTargetIdiom]
  -[SBUIBannerTargetProxy registerSource:]
  -[SBUIBannerTargetProxy unregisterSource:]
  -[SBUIBannerTargetProxy modallyPresentBannerWithContext:]
  -[SBUIBannerTargetProxy isShowingModalBanner]
  -[SBUIBannerTargetProxy signalSource:]
  -[SBUIBannerTargetProxy currentBannerContextForSource:]
  -[SBUIBannerTargetProxy dismissCurrentBannerContextForSource:]
  -[SBUIBannerTargetProxy cacheBannerForContext:withCompletion:]
  -[SBUIBannerTargetProxy removeCachedBannerForContext:]
  -[SBUIBannerTargetProxy initWithTargetImplementation:]


SBUIBannerTargetManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *targets

  // class methods
  +[SBUIBannerTargetManager sharedInstance]

  // instance methods
  -[SBUIBannerTargetManager init]
  -[SBUIBannerTargetManager .cxx_destruct]
  -[SBUIBannerTargetManager addObserver:]
  -[SBUIBannerTargetManager removeObserver:]
  -[SBUIBannerTargetManager targets]
  -[SBUIBannerTargetManager _notifyObservers:]
  -[SBUIBannerTargetManager _registerTargetImplementation:]
  -[SBUIBannerTargetManager _unregisterTargetImplementation:]
  -[SBUIBannerTargetManager _proxyForTargetImplementation:]


SBAwayViewPluginController : UIViewController /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard <SBLockScreenPluginViewController, SBLockScreenPluginController>
 @property  long long orientation
 @property  BOOL viewCanBeDisplayed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UILegibilitySettings *legibilitySettings
 @property  <SBLockScreenPluginAgent> *pluginAgent
 @property  long long pluginPriority
 @property  UIViewController<SBLockScreenPluginViewController> *pluginViewController
 @property  <SBLockScreenPluginAppearance> *pluginAppearance
 @property  SBLockScreenPluginAction *pluginUnlockAction

  // class methods
  +[SBAwayViewPluginController enableBundleNamed:activationContext:]
  +[SBAwayViewPluginController disableBundleNamed:deactivationContext:]
  +[SBAwayViewPluginController enableBundleNamed:]
  +[SBAwayViewPluginController disableBundleNamed:]

  // instance methods
  -[SBAwayViewPluginController init]
  -[SBAwayViewPluginController .cxx_destruct]
  -[SBAwayViewPluginController orientation]
  -[SBAwayViewPluginController setOrientation:]
  -[SBAwayViewPluginController disable]
  -[SBAwayViewPluginController presentationStyle]
  -[SBAwayViewPluginController _legibilitySettings]
  -[SBAwayViewPluginController legibilitySettings]
  -[SBAwayViewPluginController customHeaderView]
  -[SBAwayViewPluginController setFullscreen:animated:]
  -[SBAwayViewPluginController pluginViewController]
  -[SBAwayViewPluginController handleLockButtonPressed]
  -[SBAwayViewPluginController handleVolumeUpButtonPressed]
  -[SBAwayViewPluginController handleVolumeDownButtonPressed]
  -[SBAwayViewPluginController handleHeadsetButtonPressed:]
  -[SBAwayViewPluginController overlayStyle]
  -[SBAwayViewPluginController notificationBehavior]
  -[SBAwayViewPluginController viewCanBeDisplayed]
  -[SBAwayViewPluginController showStatusBar]
  -[SBAwayViewPluginController showDateView]
  -[SBAwayViewPluginController hasCustomSubtitle]
  -[SBAwayViewPluginController customSubtitleText]
  -[SBAwayViewPluginController showDate]
  -[SBAwayViewPluginController allowsSiri]
  -[SBAwayViewPluginController allowsLockScreenCamera]
  -[SBAwayViewPluginController allowsUnlocking]
  -[SBAwayViewPluginController allowsLogout]
  -[SBAwayViewPluginController wantsMesaAutoUnlock]
  -[SBAwayViewPluginController allowsLockScreenMediaControls]
  -[SBAwayViewPluginController allowsControlCenter]
  -[SBAwayViewPluginController allowsScreenshots]
  -[SBAwayViewPluginController legibilitySettingsOverridesVibrancy]
  -[SBAwayViewPluginController isContentViewWhiteUnderSlideToUnlockText]
  -[SBAwayViewPluginController _updateAppearanceAndNotify:]
  -[SBAwayViewPluginController setActivationContext:]
  -[SBAwayViewPluginController setDeactivationContext:]
  -[SBAwayViewPluginController purgeView]
  -[SBAwayViewPluginController setPluginAgent:]
  -[SBAwayViewPluginController slideToUnlockText]
  -[SBAwayViewPluginController bundleIDForUnlock]
  -[SBAwayViewPluginController unlockAnimationStyleForDestinationApp:]
  -[SBAwayViewPluginController shouldDisableOnUnlock]
  -[SBAwayViewPluginController shouldDisableOnRelock]
  -[SBAwayViewPluginController handleMenuButtonTap]
  -[SBAwayViewPluginController enableTransitionBlock]
  -[SBAwayViewPluginController viewWantsOverlayLayout]
  -[SBAwayViewPluginController disablesAwayItemsCompletely]
  -[SBAwayViewPluginController shouldAutoHideNotifications]
  -[SBAwayViewPluginController pluginAnimatesAppearanceTransition:]
  -[SBAwayViewPluginController pluginAnimateAppearanceTransition:withCompletion:]
  -[SBAwayViewPluginController pluginAgent]
  -[SBAwayViewPluginController pluginPriority]
  -[SBAwayViewPluginController pluginAppearance]
  -[SBAwayViewPluginController pluginWillActivateWithContext:]
  -[SBAwayViewPluginController pluginDidDeactivateWithContext:]
  -[SBAwayViewPluginController pluginHandleEvent:]
  -[SBAwayViewPluginController pluginUnlockAction]
  -[SBAwayViewPluginController setViewCanBeDisplayed:]
  -[SBAwayViewPluginController setFullscreen:duration:]
  -[SBAwayViewPluginController shouldShowLockStatusBarTime]
  -[SBAwayViewPluginController allowsTimer]
  -[SBAwayViewPluginController allowsLockScreenHint]
  -[SBAwayViewPluginController animateResumingToApplicationWithIdentifier:]
  -[SBAwayViewPluginController showBatteryChargingText]
  -[SBAwayViewPluginController customSubtitleColor]
  -[SBAwayViewPluginController allowsPhotoSlideshow]
  -[SBAwayViewPluginController handleMenuButtonDoubleTap]
  -[SBAwayViewPluginController wantsMenuButtonHeldEvent]
  -[SBAwayViewPluginController handleMenuButtonHeld]
  -[SBAwayViewPluginController setNeedsLegibilityAppearanceUpdate]


SBUIBannerContext : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL valid
 @property  SBUIBannerItem *item
 @property  <SBUIBannerSource> *source
 @property  <SBUIBannerTarget> *target

  // instance methods
  -[SBUIBannerContext invalidate]
  -[SBUIBannerContext isValid]
  -[SBUIBannerContext .cxx_destruct]
  -[SBUIBannerContext target]
  -[SBUIBannerContext source]
  -[SBUIBannerContext item]
  -[SBUIBannerContext initWithItem:source:target:]


SBLockScreenPluginEmergencyDialerAction : SBLockScreenPluginAction
  // instance methods
  -[SBLockScreenPluginEmergencyDialerAction isEmergencyDialerAction]


SBExternalIndigoDefaults : BSAbstractDefaultDomain /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
 @property  long long indigoConfigurationFlagsBitmask

  // class methods
  +[SBExternalIndigoDefaults defaults]

  // instance methods
  -[SBExternalIndigoDefaults init]
  -[SBExternalIndigoDefaults _bindAndRegisterDefaults]
  -[SBExternalIndigoDefaults indigoConfigurationFlagOne]
  -[SBExternalIndigoDefaults indigoConfigurationFlagTwo]
  -[SBExternalIndigoDefaults indigoConfigurationFlagThree]


SBLockScreenPluginContext : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, NSCopying>
 @property  FBProcess<FBSProcess> *process
 @property  NSString *name
 @property  NSDictionary *userInfo
 @property  <SBLockScreenPluginLifecycleObserver> *observer
 @property  @? auxiliaryAnimation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBLockScreenPluginContext contextWithName:]

  // instance methods
  -[SBLockScreenPluginContext name]
  -[SBLockScreenPluginContext copyWithZone:]
  -[SBLockScreenPluginContext observer]
  -[SBLockScreenPluginContext userInfo]
  -[SBLockScreenPluginContext .cxx_destruct]
  -[SBLockScreenPluginContext setName:]
  -[SBLockScreenPluginContext setUserInfo:]
  -[SBLockScreenPluginContext setObserver:]
  -[SBLockScreenPluginContext process]
  -[SBLockScreenPluginContext succinctDescription]
  -[SBLockScreenPluginContext descriptionWithMultilinePrefix:]
  -[SBLockScreenPluginContext succinctDescriptionBuilder]
  -[SBLockScreenPluginContext descriptionBuilderWithMultilinePrefix:]
  -[SBLockScreenPluginContext setProcess:]
  -[SBLockScreenPluginContext setAuxiliaryAnimation:]
  -[SBLockScreenPluginContext auxiliaryAnimation]


SBSApplicationShortcutItem(SBUIAdditions)
	// instance methods
	-[SBSApplicationShortcutItem(SBUIAdditions) badgeView]
	-[SBSApplicationShortcutItem(SBUIAdditions) _assetManager]
	-[SBSApplicationShortcutItem(SBUIAdditions) setBadgeView:]
	-[SBSApplicationShortcutItem(SBUIAdditions) _monogrammerForKey:style:]
	-[SBSApplicationShortcutItem(SBUIAdditions) _setupAssetManagerWithApplicationBundleURL:]
	-[SBSApplicationShortcutItem(SBUIAdditions) _lightMonogrammer]
	-[SBSApplicationShortcutItem(SBUIAdditions) _darkMonogrammer]
	-[SBSApplicationShortcutItem(SBUIAdditions) sb_buildIconImageWithApplicationBundleURL:image:systemImageName:]

NSString(SBUIEmojiAdditions)
	// instance methods
	-[NSString(SBUIEmojiAdditions) sbui_rangesOfEmojiTokens:]

UIView(SBUIAdditions)
	// instance methods
	-[UIView(SBUIAdditions) sbui_drawEagerly]

BBBulletin(SBUIUtilities)
	// instance methods
	-[BBBulletin(SBUIUtilities) playSound]
	-[BBBulletin(SBUIUtilities) killSound]
	-[BBBulletin(SBUIUtilities) actionBlockForButton:]

SBSApplicationShortcutSystemIcon(SBUIAdditions)
	// class methods
	+[SBSApplicationShortcutSystemIcon(SBUIAdditions) sbui_defaultImage]

	// instance methods
	-[SBSApplicationShortcutSystemIcon(SBUIAdditions) sbui_image]
	-[SBSApplicationShortcutSystemIcon(SBUIAdditions) sbui_systemImage]

SBSApplicationShortcutSystemPrivateIcon(SBUIAdditions)
	// class methods
	+[SBSApplicationShortcutSystemPrivateIcon(SBUIAdditions) sbui_defaultImage]

	// instance methods
	-[SBSApplicationShortcutSystemPrivateIcon(SBUIAdditions) sbui_image]
	-[SBSApplicationShortcutSystemPrivateIcon(SBUIAdditions) sbui_systemImage]

UITraitCollection(SBUIAdditions)
	// class methods
	+[UITraitCollection(SBUIAdditions) traitCollectionWithUserInterfaceStyleCompatibleWithLegibilitySettings:]

UIWindow(SBUICoronaAnimationControllerAdditions)
	// instance methods
	-[UIWindow(SBUICoronaAnimationControllerAdditions) sb_coronaAnimationController]

01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVFlashlight 
01 00 1a00 /System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard: BBBulletin 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSAbstractDefaultDomain 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSAction 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSActionResponse 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSAnimationSettings 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSBlockSentinel 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSDescriptionBuilder 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSPlatform 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSSimpleAssertion 
01 00 0b00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIAnimationFactory 
01 00 0b00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIBackdropView 
01 00 0b00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIMappedImageCache 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0100 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNMonogrammer 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutableContact 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSceneMonitor 
01 00 0300 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTMaterialView 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFMappedImageCache 
01 00 0e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBHardwareDefaults 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutContactIcon 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutCustomImageIcon 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutItem 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutSystemIcon 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutSystemPrivateIcon 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutTemplateIcon 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSLockScreenPluginService 
01 00 0f00 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUILegibilityView 
01 00 1b00 /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary: TLAlert 
01 00 1b00 /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary: TLAlertConfiguration 
01 00 0600 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUDialRequest 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICubicTimingParameters 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageAsset 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISelectionFeedbackGenerator 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewFloatAnimatableProperty 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIAssetManager 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropViewSettings 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDirectionalRotationView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISelectionFeedbackGeneratorConfiguration 
