|| __DATA.__data _PIPerspectiveErrorConfidenceTooLow
|| __DATA.__data _PIPerspectiveErrorCorrectedAreaIsSmall
|| __DATA.__data _PIPerspectiveErrorFacesTooLarge
|| __DATA.__data _PIPerspectiveErrorLessThanMinimumCorrection
|| __DATA.__data _PIPerspectiveErrorLimitExceeded
|| __DATA.__data _PIPerspectiveErrorNoBuildingDetected
|| __DATA.__data _PIPerspectiveErrorNone
|| __DATA.__data _PIPerspectiveErrorNotEnoughLines
|| __DATA.__data _PIPerspectiveErrorPanoAndFFCNotSupported
|| __DATA.__data _PIPerspectiveErrorUnexpectedRuntimeError
|| __DATA.__data _kRepairModeClone
|| __DATA.__data _kRepairModeRepair
|| __DATA.__data _kRepairModeRepairML
|| __DATA.__objc_data _OBJC_CLASS_$_GUBWBilateralConvolution
|| __DATA.__objc_data _OBJC_CLASS_$_GUBilateralConvolution
|| __DATA.__objc_data _OBJC_CLASS_$_PIApertureRedEyeAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PIApertureRedEyeFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PIApertureRedEyeProcessorKernel
|| __DATA.__objc_data _OBJC_CLASS_$_PIAutoCalculatorUtils
|| __DATA.__objc_data _OBJC_CLASS_$_PIAutoLoopAnalysisClient
|| __DATA.__objc_data _OBJC_CLASS_$_PIAutoLoopAnalysisJob
|| __DATA.__objc_data _OBJC_CLASS_$_PIAutoLoopAnalysisRequest
|| __DATA.__objc_data _OBJC_CLASS_$_PIAutoLoopAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PIAutoLoopExportClient
|| __DATA.__objc_data _OBJC_CLASS_$_PIBilateralFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PICaptureDebugUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_PICinematicVideoUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_PIColorNormalizationAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PICompositionExportDataResult
|| __DATA.__objc_data _OBJC_CLASS_$_PICompositionExporterDefaultMetadataConverter
|| __DATA.__objc_data _OBJC_CLASS_$_PICompositionFinalizer
|| __DATA.__objc_data _OBJC_CLASS_$_PICompositionFinalizerResult
|| __DATA.__objc_data _OBJC_CLASS_$_PICurveControlPoint
|| __DATA.__objc_data _OBJC_CLASS_$_PICurvesAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PICurvesFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PICurvesFilterHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PICurvesLUTFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PICurvesLuminanceAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PICurvesRGBAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PIDebugAdjustmentController
|| __DATA.__objc_data _OBJC_CLASS_$_PIDefinitionFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PIDisparitySampleJob
|| __DATA.__objc_data _OBJC_CLASS_$_PIDisparitySampleRequest
|| __DATA.__objc_data _OBJC_CLASS_$_PIFakeBoost
|| __DATA.__objc_data _OBJC_CLASS_$_PIFalseColorHDRDebug
|| __DATA.__objc_data _OBJC_CLASS_$_PIForwardFakeBoost
|| __DATA.__objc_data _OBJC_CLASS_$_PIHighKeyHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIHighResFusionAdjustmentController
|| __DATA.__objc_data _OBJC_CLASS_$_PIImageIO
|| __DATA.__objc_data _OBJC_CLASS_$_PIInverseFakeBoost
|| __DATA.__objc_data _OBJC_CLASS_$_PIJSRenderPipeline
|| __DATA.__objc_data _OBJC_CLASS_$_PILevelsAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PILevelsFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PILevelsFilterHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PILevelsLuminanceAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PILevelsRGBAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PILivePhotoKeyFrameAdjustmentController
|| __DATA.__objc_data _OBJC_CLASS_$_PILocalContrastHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PILocalLightFilterHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PILocalLightMapPrepareHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PILongExposureFusion
|| __DATA.__objc_data _OBJC_CLASS_$_PILongExposureFusionAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PILongExposureRegistrationJob
|| __DATA.__objc_data _OBJC_CLASS_$_PILongExposureRegistrationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_PIMakerNoteUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_PIManualRedEyeAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PIMsgImageBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_PINeutralGrayWhiteBalanceFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffect3DBlackAndWhiteHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffect3DDramaticCoolHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffect3DDramaticHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffect3DDramaticWarmHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffect3DHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffect3DNoirHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffect3DSilverplateHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffect3DVividCoolHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffect3DVividHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffect3DVividWarmHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffectBlackAndWhiteHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffectChromeHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffectFadeHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffectHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffectInstantHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffectMonoHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffectNoirHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffectProcessHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffectStageMonoHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffectTonalHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoEffectTransferHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotoGrainHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PIPhotosPipelineHDRFilters
|| __DATA.__objc_data _OBJC_CLASS_$_PIPortraitVideoDebugDetectionsRenderNode
|| __DATA.__objc_data _OBJC_CLASS_$_PIPortraitVideoFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PIPortraitVideoMetadataSample
|| __DATA.__objc_data _OBJC_CLASS_$_PIPortraitVideoProcessor
|| __DATA.__objc_data _OBJC_CLASS_$_PIPortraitVideoRenderNode
|| __DATA.__objc_data _OBJC_CLASS_$_PIPortraitVideoRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_PIRAWFaceBalance
|| __DATA.__objc_data _OBJC_CLASS_$_PIRAWTempTintSampler
|| __DATA.__objc_data _OBJC_CLASS_$_PIRawAdjustmentController
|| __DATA.__objc_data _OBJC_CLASS_$_PIRedEye
|| __DATA.__objc_data _OBJC_CLASS_$_PIReframeKeyframe
|| __DATA.__objc_data _OBJC_CLASS_$_PIReframeKeyframeSequence
|| __DATA.__objc_data _OBJC_CLASS_$_PIReframeRules
|| __DATA.__objc_data _OBJC_CLASS_$_PIReframeSubject
|| __DATA.__objc_data _OBJC_CLASS_$_PIScalarKeyframe
|| __DATA.__objc_data _OBJC_CLASS_$_PISelectiveColorFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PISmartBlackAndWhiteAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PISmartBlackAndWhiteHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PISmartColorFilterHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PISmartToneFilterHDR
|| __DATA.__objc_data _OBJC_CLASS_$_PISourceSampler
|| __DATA.__objc_data _OBJC_CLASS_$_PITapToTrackRenderJob
|| __DATA.__objc_data _OBJC_CLASS_$_PITapToTrackRequest
|| __DATA.__objc_data _OBJC_CLASS_$_PITimeVaryingPipelineStateSetting
|| __DATA.__objc_data _OBJC_CLASS_$_PIVideoCrossfadeLoopAdjustmentController
|| __DATA.__objc_data _OBJC_CLASS_$_PIVideoCrossfadeLoopNode
|| __DATA.__objc_data _OBJC_CLASS_$_PIVideoPosterFrameAdjustmentController
|| __DATA.__objc_data _OBJC_CLASS_$_PIVideoReframeMetadataExtractor
|| __DATA.__objc_data _OBJC_CLASS_$_PIVideoReframeNode
|| __DATA.__objc_data _OBJC_CLASS_$_PIVideoReframeTimedMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_PIVideoStabilizeAdjustmentController
|| __DATA.__objc_data _OBJC_CLASS_$_PIVideoStabilizeRenderJob
|| __DATA.__objc_data _OBJC_CLASS_$_PIVideoStabilizeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_PIWhiteBalanceAutoCalculator
|| __DATA.__objc_data _OBJC_CLASS_$__PIAutoLoopAnalysisResult
|| __DATA.__objc_data _OBJC_CLASS_$__PIDisparitySampleResult
|| __DATA.__objc_data _OBJC_CLASS_$__PILongExposureRegistrationResult
|| __DATA.__objc_data _OBJC_CLASS_$__PITapToTrackRenderResult
|| __DATA.__objc_data _OBJC_CLASS_$__PIVideoStabilizeFlowControl
|| __DATA.__objc_data _OBJC_CLASS_$__PIVideoStabilizeResult
|| __DATA.__objc_data _OBJC_CLASS_$__PIWhiteColorCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_GUBWBilateralConvolution
|| __DATA.__objc_data _OBJC_METACLASS_$_GUBilateralConvolution
|| __DATA.__objc_data _OBJC_METACLASS_$_PIApertureRedEyeAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PIApertureRedEyeFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PIApertureRedEyeProcessorKernel
|| __DATA.__objc_data _OBJC_METACLASS_$_PIAutoCalculatorUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_PIAutoLoopAnalysisClient
|| __DATA.__objc_data _OBJC_METACLASS_$_PIAutoLoopAnalysisJob
|| __DATA.__objc_data _OBJC_METACLASS_$_PIAutoLoopAnalysisRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_PIAutoLoopAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PIAutoLoopExportClient
|| __DATA.__objc_data _OBJC_METACLASS_$_PIBilateralFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PICaptureDebugUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_PICinematicVideoUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_PIColorNormalizationAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PICompositionExportDataResult
|| __DATA.__objc_data _OBJC_METACLASS_$_PICompositionExporterDefaultMetadataConverter
|| __DATA.__objc_data _OBJC_METACLASS_$_PICompositionFinalizer
|| __DATA.__objc_data _OBJC_METACLASS_$_PICompositionFinalizerResult
|| __DATA.__objc_data _OBJC_METACLASS_$_PICurveControlPoint
|| __DATA.__objc_data _OBJC_METACLASS_$_PICurvesAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PICurvesFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PICurvesFilterHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PICurvesLUTFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PICurvesLuminanceAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PICurvesRGBAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PIDebugAdjustmentController
|| __DATA.__objc_data _OBJC_METACLASS_$_PIDefinitionFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PIDisparitySampleJob
|| __DATA.__objc_data _OBJC_METACLASS_$_PIDisparitySampleRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_PIFakeBoost
|| __DATA.__objc_data _OBJC_METACLASS_$_PIFalseColorHDRDebug
|| __DATA.__objc_data _OBJC_METACLASS_$_PIForwardFakeBoost
|| __DATA.__objc_data _OBJC_METACLASS_$_PIHighKeyHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIHighResFusionAdjustmentController
|| __DATA.__objc_data _OBJC_METACLASS_$_PIImageIO
|| __DATA.__objc_data _OBJC_METACLASS_$_PIInverseFakeBoost
|| __DATA.__objc_data _OBJC_METACLASS_$_PIJSRenderPipeline
|| __DATA.__objc_data _OBJC_METACLASS_$_PILevelsAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PILevelsFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PILevelsFilterHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PILevelsLuminanceAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PILevelsRGBAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PILivePhotoKeyFrameAdjustmentController
|| __DATA.__objc_data _OBJC_METACLASS_$_PILocalContrastHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PILocalLightFilterHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PILocalLightMapPrepareHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PILongExposureFusion
|| __DATA.__objc_data _OBJC_METACLASS_$_PILongExposureFusionAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PILongExposureRegistrationJob
|| __DATA.__objc_data _OBJC_METACLASS_$_PILongExposureRegistrationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_PIMakerNoteUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_PIManualRedEyeAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PIMsgImageBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_PINeutralGrayWhiteBalanceFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffect3DBlackAndWhiteHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffect3DDramaticCoolHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffect3DDramaticHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffect3DDramaticWarmHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffect3DHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffect3DNoirHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffect3DSilverplateHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffect3DVividCoolHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffect3DVividHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffect3DVividWarmHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffectBlackAndWhiteHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffectChromeHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffectFadeHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffectHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffectInstantHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffectMonoHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffectNoirHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffectProcessHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffectStageMonoHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffectTonalHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoEffectTransferHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotoGrainHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPhotosPipelineHDRFilters
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPortraitVideoDebugDetectionsRenderNode
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPortraitVideoFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPortraitVideoMetadataSample
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPortraitVideoProcessor
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPortraitVideoRenderNode
|| __DATA.__objc_data _OBJC_METACLASS_$_PIPortraitVideoRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_PIRAWFaceBalance
|| __DATA.__objc_data _OBJC_METACLASS_$_PIRAWTempTintSampler
|| __DATA.__objc_data _OBJC_METACLASS_$_PIRawAdjustmentController
|| __DATA.__objc_data _OBJC_METACLASS_$_PIRedEye
|| __DATA.__objc_data _OBJC_METACLASS_$_PIReframeKeyframe
|| __DATA.__objc_data _OBJC_METACLASS_$_PIReframeKeyframeSequence
|| __DATA.__objc_data _OBJC_METACLASS_$_PIReframeRules
|| __DATA.__objc_data _OBJC_METACLASS_$_PIReframeSubject
|| __DATA.__objc_data _OBJC_METACLASS_$_PIScalarKeyframe
|| __DATA.__objc_data _OBJC_METACLASS_$_PISelectiveColorFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PISmartBlackAndWhiteAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PISmartBlackAndWhiteHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PISmartColorFilterHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PISmartToneFilterHDR
|| __DATA.__objc_data _OBJC_METACLASS_$_PISourceSampler
|| __DATA.__objc_data _OBJC_METACLASS_$_PITapToTrackRenderJob
|| __DATA.__objc_data _OBJC_METACLASS_$_PITapToTrackRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_PITimeVaryingPipelineStateSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_PIVideoCrossfadeLoopAdjustmentController
|| __DATA.__objc_data _OBJC_METACLASS_$_PIVideoCrossfadeLoopNode
|| __DATA.__objc_data _OBJC_METACLASS_$_PIVideoPosterFrameAdjustmentController
|| __DATA.__objc_data _OBJC_METACLASS_$_PIVideoReframeMetadataExtractor
|| __DATA.__objc_data _OBJC_METACLASS_$_PIVideoReframeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_PIVideoReframeTimedMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_PIVideoStabilizeAdjustmentController
|| __DATA.__objc_data _OBJC_METACLASS_$_PIVideoStabilizeRenderJob
|| __DATA.__objc_data _OBJC_METACLASS_$_PIVideoStabilizeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_PIWhiteBalanceAutoCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$__PIAutoLoopAnalysisResult
|| __DATA.__objc_data _OBJC_METACLASS_$__PIDisparitySampleResult
|| __DATA.__objc_data _OBJC_METACLASS_$__PILongExposureRegistrationResult
|| __DATA.__objc_data _OBJC_METACLASS_$__PITapToTrackRenderResult
|| __DATA.__objc_data _OBJC_METACLASS_$__PIVideoStabilizeFlowControl
|| __DATA.__objc_data _OBJC_METACLASS_$__PIVideoStabilizeResult
|| __DATA.__objc_data _OBJC_METACLASS_$__PIWhiteColorCalculator
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIApertureRedEyeFilter.inputImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIApertureRedEyeFilter.inputSpots
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIHighKey.inputImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIHighKey.inputStrength
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIHighKeyHDR.inputImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIHighKeyHDR.inputStrength
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalContrastHDR.inputImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalContrastHDR.inputScale
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalContrastHDR.inputStrength
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalLightFilterHDR.inputGuideImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalLightFilterHDR.inputImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalLightFilterHDR.inputLightMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalLightFilterHDR.inputLightMapHeight
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalLightFilterHDR.inputLightMapImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalLightFilterHDR.inputLightMapWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalLightFilterHDR.inputLocalLight
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalLightFilterHDR.inputSmartShadows
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalLightMapPrepareHDR.inputGuideImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalLightMapPrepareHDR.inputLightMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalLightMapPrepareHDR.inputLightMapHeight
|| __DATA.__objc_ivar _OBJC_IVAR_$_PILocalLightMapPrepareHDR.inputLightMapWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIMsgImageBuffer.bufferColorspace
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIMsgImageBuffer.elementByteSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIMsgImageBuffer.format
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIMsgImageBuffer.height
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIMsgImageBuffer.rowElements
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIMsgImageBuffer.width
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIPhotoGrainHDR.inputAmount
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIPhotoGrainHDR.inputISO
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIPhotoGrainHDR.inputImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PIPhotoGrainHDR.inputSeed
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartBlackAndWhiteHDR.inputGrain
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartBlackAndWhiteHDR.inputHue
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartBlackAndWhiteHDR.inputImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartBlackAndWhiteHDR.inputNeutralGamma
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartBlackAndWhiteHDR.inputScaleFactor
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartBlackAndWhiteHDR.inputSeed
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartBlackAndWhiteHDR.inputStrength
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartBlackAndWhiteHDR.inputTone
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartColorFilterHDR.inputCast
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartColorFilterHDR.inputContrast
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartColorFilterHDR.inputImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartColorFilterHDR.inputVibrancy
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartToneFilterHDR.inputBlack
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartToneFilterHDR.inputBrightness
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartToneFilterHDR.inputContrast
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartToneFilterHDR.inputExposure
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartToneFilterHDR.inputHighlights
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartToneFilterHDR.inputImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartToneFilterHDR.inputRawHighlights
|| __DATA.__objc_ivar _OBJC_IVAR_$_PISmartToneFilterHDR.inputShadows
|| __DATA_CONST.__const _PIAdjustment_AutoEnhance_Identifier
|| __DATA_CONST.__const _PIAdjustment_AutoLoop_Identifier
|| __DATA_CONST.__const _PIAdjustment_Crop_Identifier
|| __DATA_CONST.__const _PIAdjustment_DepthEffect_Identifier
|| __DATA_CONST.__const _PIAdjustment_Effect3D_Identifier
|| __DATA_CONST.__const _PIAdjustment_Effect_Identifier
|| __DATA_CONST.__const _PIAdjustment_Grain_Identifier
|| __DATA_CONST.__const _PIAdjustment_HighResolutionFusion_Identifier
|| __DATA_CONST.__const _PIAdjustment_LivePhotoKeyFrame_Identifier
|| __DATA_CONST.__const _PIAdjustment_Mute_Identifier
|| __DATA_CONST.__const _PIAdjustment_PortraitEffect_Identifier
|| __DATA_CONST.__const _PIAdjustment_PortraitVideo_Identifier
|| __DATA_CONST.__const _PIAdjustment_RedEyeBB_Identifier
|| __DATA_CONST.__const _PIAdjustment_SelectiveColor_Identifier
|| __DATA_CONST.__const _PIAdjustment_SemanticEnhance_Identifier
|| __DATA_CONST.__const _PIAdjustment_SlowMotion_Identifier
|| __DATA_CONST.__const _PIAdjustment_SmartBlackAndWhite_Identifier
|| __DATA_CONST.__const _PIAdjustment_SmartColor_Identifier
|| __DATA_CONST.__const _PIAdjustment_SmartTone_Identifier
|| __DATA_CONST.__const _PIAdjustment_SourceSelect_Identifier
|| __DATA_CONST.__const _PIAdjustment_Trim_Identifier
|| __DATA_CONST.__const _PIAdjustment_VideoCrossfadeLoop_Identifier
|| __DATA_CONST.__const _PIAdjustment_VideoPosterFrame_Identifier
|| __DATA_CONST.__const _PIAdjustment_VideoReframe_Identifier
|| __DATA_CONST.__const _PIAdjustment_VideoStabilize_Identifier
|| __DATA_CONST.__const _PIAdjustment_WhiteBalance_Identifier
|| __DATA_CONST.__const _PIApertureRedEyeAdjustmentKey
|| __DATA_CONST.__const _PIAssetAdjustmentsDataBlobKey
|| __DATA_CONST.__const _PIAssetAdjustmentsFormatIdentifierKey
|| __DATA_CONST.__const _PIAssetAdjustmentsFormatVersionKey
|| __DATA_CONST.__const _PIAutoEnhanceAdjustmentKey
|| __DATA_CONST.__const _PIAutoLoopAdjustmentKey
|| __DATA_CONST.__const _PIAutoLoopFlavorValueAutoLoop
|| __DATA_CONST.__const _PIAutoLoopFlavorValueLongExposure
|| __DATA_CONST.__const _PIAutoLoopFlavorValueMirror
|| __DATA_CONST.__const _PICapturedPortraitMajorVersionKey
|| __DATA_CONST.__const _PICapturedPortraitMinorVersionKey
|| __DATA_CONST.__const _PIColorNormalizationKeyAdjustments
|| __DATA_CONST.__const _PIColorNormalizationKeyScore
|| __DATA_CONST.__const _PIColorNormalizationKeyVersion
|| __DATA_CONST.__const _PICompositionSerializerFormatIdentifier
|| __DATA_CONST.__const _PICropAdjustmentKey
|| __DATA_CONST.__const _PICurvePointsBKey
|| __DATA_CONST.__const _PICurvePointsGKey
|| __DATA_CONST.__const _PICurvePointsLKey
|| __DATA_CONST.__const _PICurvePointsRKey
|| __DATA_CONST.__const _PICurvesAdjustmentKey
|| __DATA_CONST.__const _PIDebugAdjustmentKey
|| __DATA_CONST.__const _PIDefinitionAdjustmentKey
|| __DATA_CONST.__const _PIDepthAdjustmentKey
|| __DATA_CONST.__const _PIDepthApertureKey
|| __DATA_CONST.__const _PIDepthGlassesMatteAllowedKey
|| __DATA_CONST.__const _PIDepthInfoKey
|| __DATA_CONST.__const _PIEffect3DAdjustmentKey
|| __DATA_CONST.__const _PIEffectAdjustmentKey
|| __DATA_CONST.__const _PIGrainAdjustmentKey
|| __DATA_CONST.__const _PIHighResFusionAdjustmentKey
|| __DATA_CONST.__const _PILevelsAdjustmentKey
|| __DATA_CONST.__const _PILivePhotoKeyFrameAdjustmentKey
|| __DATA_CONST.__const _PIMuteAdjustmentKey
|| __DATA_CONST.__const _PINoiseReductionAdjustmentKey
|| __DATA_CONST.__const _PIOrientationAdjustmentKey
|| __DATA_CONST.__const _PIOvercaptureSourceAdjustmentKey
|| __DATA_CONST.__const _PIPhotoEditFormatIdentifierLivePhoto
|| __DATA_CONST.__const _PIPhotoEditFormatIdentifierPhoto
|| __DATA_CONST.__const _PIPhotoEditFormatIdentifierVideo
|| __DATA_CONST.__const _PIPhotoEditFormatIdentifierVideoSloMo
|| __DATA_CONST.__const _PIPortraitAdjustmentKey
|| __DATA_CONST.__const _PIPortraitDisableStageKey
|| __DATA_CONST.__const _PIPortraitInfoKey
|| __DATA_CONST.__const _PIPortraitSpillMatteAllowedKey
|| __DATA_CONST.__const _PIPortraitStrengthKey
|| __DATA_CONST.__const _PIPortraitVideoAdjustmentKey
|| __DATA_CONST.__const _PIRawAdjustmentKey
|| __DATA_CONST.__const _PIRawNoiseReductionAdjustmentKey
|| __DATA_CONST.__const _PIRedEyeAdjustmentKey
|| __DATA_CONST.__const _PIRetouchAdjustmentKey
|| __DATA_CONST.__const _PISelectiveColorAdjustmentKey
|| __DATA_CONST.__const _PISemanticEnhanceAdjustmentKey
|| __DATA_CONST.__const _PISharpenAdjustmentKey
|| __DATA_CONST.__const _PISlomoAdjustmentKey
|| __DATA_CONST.__const _PISmartBWAdjustmentKey
|| __DATA_CONST.__const _PISmartColorAdjustmentKey
|| __DATA_CONST.__const _PISmartToneAdjustmentKey
|| __DATA_CONST.__const _PISourceAdjustmentKey
|| __DATA_CONST.__const _PISourceSelectAdjustmentKey
|| __DATA_CONST.__const _PITrimAdjustmentKey
|| __DATA_CONST.__const _PIVideoCrossfadeLoopAdjustmentKey
|| __DATA_CONST.__const _PIVideoPosterFrameAdjustmentKey
|| __DATA_CONST.__const _PIVideoReframeAdjustmentKey
|| __DATA_CONST.__const _PIVideoStabilizeAdjustmentKey
|| __DATA_CONST.__const _PIVignetteAdjustmentKey
|| __DATA_CONST.__const _PIWhiteBalanceAdjustmentKey
|| __DATA_CONST.__const _PIWhiteBalanceColorTypeFaceBalance
|| __DATA_CONST.__const _PIWhiteBalanceColorTypeNeutralGray
|| __DATA_CONST.__const _PIWhiteBalanceColorTypeTempTint
|| __DATA_CONST.__const _PIWhiteBalanceColorTypeWarmTint
|| __DATA_CONST.__const _PIWhiteBalanceTypeFaceBalance
|| __DATA_CONST.__const _PIWhiteBalanceTypeNeutralGray
|| __DATA_CONST.__const _PIWhiteBalanceTypeTempTint
|| __DATA_CONST.__const _PIWhiteBalanceTypeWarmTint
|| __DATA_CONST.__const _kPIAutoNameKey
|| __DATA_CONST.__const _kPICompositionNameKey
|| __DATA_CONST.__const _kPICustomCompositionNameKey
|| __DATA_CONST.__const _kPICustomIdentifierNameKey
|| __DATA_CONST.__const _kPICustomPostSerializeSetupKey
|| __DATA_CONST.__const _kPICustomPostSetupKey
|| __DATA_CONST.__const _kPIIdentifierNameKey
|| __DATA_CONST.__const _kPIPostSerializationAutoValueInfoKey
|| __DATA_CONST.__const _kPIRequiresEnabledKey
|| __DATA_CONST.__const _kPISupportedKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIAdjustmentConstants
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIAutoLoopAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIAutoLoopCacheNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIAutoLoopExportJob
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIAutoLoopExportRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIAutoLoopFrameNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIAutoLoopKernels
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIAutoLoopMirrorVideoNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIAutoLoopStabVideoNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIAutoLoopVideoNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIColorBalanceFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIColorNormalizationFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionExportAuxiliaryResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionExportImagePrepareResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionExportResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionExporter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionExporterAuxiliaryOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionExporterImageOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionExporterOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionExporterVideoOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionNoOpRemoval
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionSerializationResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionSerializer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionSerializerConstants
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionSerializerFormatVersion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICompositionSerializerMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICropAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PICropAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIDefinitionAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIDepthAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIDepthEffectApertureAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIEffectAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIFaceBalanceAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIFaceObservationCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIGlobalSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIHighKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PILongExposureAccumulator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PILongExposureCacheNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIModernPhotosPipeline
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PINoiseReductionAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIOrientationAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIPerspectiveAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIPhotoEditAdjustmentsVersion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIPhotoEditHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIPipelineFilters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIPortraitAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIPortraitAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIPortraitVideoAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIRawNoiseReductionAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIRedEyeAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIRedEyeAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PISchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PISemanticEnhanceAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PISharpenAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PISlomoAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PISmartBlackAndWhiteAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PISmartColorAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PISmartColorAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PISmartToneAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PISmartToneAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PISourceSelectAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PITempTintFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PITrimAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIValuesAtCapture
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIVideoReframeAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIVignetteAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PIWhiteBalanceAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIAdjustmentConstants
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIAutoLoopAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIAutoLoopCacheNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIAutoLoopExportJob
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIAutoLoopExportRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIAutoLoopFrameNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIAutoLoopKernels
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIAutoLoopMirrorVideoNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIAutoLoopStabVideoNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIAutoLoopVideoNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIColorBalanceFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIColorNormalizationFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionExportAuxiliaryResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionExportImagePrepareResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionExportResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionExporter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionExporterAuxiliaryOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionExporterImageOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionExporterOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionExporterVideoOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionNoOpRemoval
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionSerializationResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionSerializer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionSerializerConstants
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionSerializerFormatVersion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICompositionSerializerMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICropAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PICropAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIDefinitionAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIDepthAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIDepthEffectApertureAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIEffectAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIFaceBalanceAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIFaceObservationCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIGlobalSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIHighKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PILongExposureAccumulator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PILongExposureCacheNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIModernPhotosPipeline
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PINoiseReductionAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIOrientationAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIPerspectiveAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIPhotoEditAdjustmentsVersion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIPhotoEditHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIPipelineFilters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIPortraitAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIPortraitAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIPortraitVideoAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIRawNoiseReductionAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIRedEyeAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIRedEyeAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PISchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PISemanticEnhanceAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PISharpenAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PISlomoAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PISmartBlackAndWhiteAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PISmartColorAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PISmartColorAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PISmartToneAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PISmartToneAutoCalculator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PISourceSelectAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PITempTintFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PITrimAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIValuesAtCapture
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIVideoReframeAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIVignetteAdjustmentController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PIWhiteBalanceAdjustmentController
|| __TEXT.__const _PICompositionSerializerAdjustmentFormatVersion
|| __TEXT.__const _PICurveMaximumValue
|| __TEXT.__const _PhotoImagingVersionNumber
|| __TEXT.__const _PhotoImagingVersionString
|| __TEXT.__text _GUInvertMatrix
|| __TEXT.__text _GUMatrixVector
|| __TEXT.__text _PIAutoLoopFlavorFromString
|| __TEXT.__text _PIAutoLoopFlavorProducesOnlyVideo
|| __TEXT.__text _PIAutoLoopFlavorToString
|| __TEXT.__text _PIAutoLoopRecipeForFlavor
|| __TEXT.__text _PIAutoLoopRecipeFrameTransformGetHomography
|| __TEXT.__text _PIAutoLoopRecipeFrameTransformGetTime
|| __TEXT.__text _PIAutoLoopRecipeGetCropRect
|| __TEXT.__text _PIAutoLoopRecipeGetCropRectDictionary
|| __TEXT.__text _PIAutoLoopRecipeGetFlavorParameters
|| __TEXT.__text _PIAutoLoopRecipeGetFrameDuration
|| __TEXT.__text _PIAutoLoopRecipeGetInstructionAtTime
|| __TEXT.__text _PIAutoLoopRecipeGetTimeRangeForFlavor
|| __TEXT.__text _PIAutoLoopRecipeHasGoodStabilization
|| __TEXT.__text _PIAutoLoopRecipeIsValid
|| __TEXT.__text _PIReframeSubjectTypeFromVNObservation
|| __TEXT.__text _PIRetouchModeFromString
|| __TEXT.__text _PIRetouchModeToString
|| __TEXT.__text _PIVideoStabilizeResultFromHomographies
|| __TEXT.__text _XXH32
|| __TEXT.__text _XXH32_createState
|| __TEXT.__text _XXH32_digest
|| __TEXT.__text _XXH32_freeState
|| __TEXT.__text _XXH32_reset
|| __TEXT.__text _XXH32_update
|| __TEXT.__text _XXH64
|| __TEXT.__text _XXH64_createState
|| __TEXT.__text _XXH64_digest
|| __TEXT.__text _XXH64_freeState
|| __TEXT.__text _XXH64_reset
|| __TEXT.__text _XXH64_update
|| __TEXT.__text _YIQFromRGB
|| __TEXT.__text __Z24isLivePhotoMetadataTrackP12AVAssetTrack
|| __TEXT.__text _apertureValue
|| __TEXT.__text _arealight_coeffs_from_stats
|| __TEXT.__text _average_light_coeffs_from_stats
|| __TEXT.__text _fixRedeye
|| __TEXT.__text _flashFired
|| __TEXT.__text _isoValue
|| __TEXT.__text _shutterSpeedValue
|| __TEXT.__text _smart_color_adjustments_from_stats
|| __TEXT.__text _smart_tone_stats_from_histogram
__ AVFoundation: _AVAppleMakerNote_AssetIdentifier
__ AVFoundation: _AVAppleMakerNote_LuminanceNoiseAmplitude
__ AVFoundation: _AVAppleMakerNote_PhotoProcessingFlags
__ AVFoundation: _AVAppleMakerNote_PhotosAppFeatureFlags
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMetadataIdentifierQuickTimeMetadataContentIdentifier
__ AVFoundation: _AVVideoAllowFrameReorderingKey
__ AVFoundation: _AVVideoAverageBitRateKey
__ AVFoundation: _AVVideoCodecKey
__ AVFoundation: _AVVideoCodecTypeH264
__ AVFoundation: _AVVideoCodecTypeHEVC
__ AVFoundation: _AVVideoColorPropertiesKey
__ AVFoundation: _AVVideoCompressionPropertiesKey
__ AVFoundation: _AVVideoExpectedSourceFrameRateKey
__ AVFoundation: _AVVideoMaxKeyFrameIntervalKey
__ AVFoundation: _AVVideoTransferFunctionKey
__ AVFoundation: _AVVideoTransferFunction_ITU_R_2100_HLG
__ AVFoundation: _AVVideoTransferFunction_ITU_R_709_2
__ AVFoundation: _OBJC_CLASS_$_AVAssetReader
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderOutputMetadataAdaptor
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderTrackOutput
__ AVFoundation: _OBJC_CLASS_$_AVMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMix
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMixInputParameters
__ AVFoundation: _OBJC_CLASS_$_AVMutableComposition
__ AVFoundation: _OBJC_CLASS_$_AVMutableMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMutableVideoComposition
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ Accelerate: _dgels_
__ Accelerate: _vImageConvert_16UToF
__ Accelerate: _vImageConvert_16Uto16F
__ Accelerate: _vImageConvert_FTo16U
__ Accelerate: _vImageConvert_Planar16FtoPlanarF
__ Accelerate: _vImageConvert_PlanarFtoARGBFFFF
__ Accelerate: _vImageConvert_PlanarFtoPlanar16F
__ AutoLoop: _AUTOLOOP_LAR_KEY_NORMSTABILIZE
__ AutoLoop: _AUTOLOOP_LAR_KEY_NORMSTAB_FRAMEDUR
__ AutoLoop: _AUTOLOOP_LAR_KEY_NORMSTAB_STABCROP
__ AutoLoop: _AUTOLOOP_LAR_KEY_NORMSTAB_STABRESULT
__ AutoLoop: _AUTOLOOP_LAR_KEY_PARAMS
__ AutoLoop: _AUTOLOOP_LAR_KEY_PARAM_FADE
__ AutoLoop: _AUTOLOOP_LAR_KEY_PARAM_PERIOD
__ AutoLoop: _AUTOLOOP_LAR_KEY_PARAM_START
__ AutoLoop: _AUTOLOOP_LA_FLAVOR_AUTOLOOP
__ AutoLoop: _AUTOLOOP_LA_FLAVOR_BOUNCE
__ AutoLoop: _AUTOLOOP_LA_FLAVOR_LONGEXP
__ AutoLoop: _alLoopRecipeDestroy
__ AutoLoop: _alLoopRecipeToDict
__ AutoLoop: _autoloopErrorCodeToString
__ AutoLoop: _autoloopSettingsDestroy
__ AutoLoop: _createAutoLoopSettingsForAsset
__ AutoLoop: _liveAnalysisResultCopyRecipe
__ AutoLoop: _liveAnalysisResultDestroy
__ AutoLoop: _liveAnalysisResultFromDictionary
__ AutoLoop: _liveAnalysisResultToDictionary
__ AutoLoop: _runLiveAnalysisPipeline
__ AutoLoop: _validateLiveAnalysisDictionaryVersion
__ CMCapture: _FigLivePhotoMetadataComputeDeserializationSize
__ CMCapture: _FigLivePhotoMetadataDeserializeIntoBuffer
__ CMCapture: _kFigCaptureStreamMetadata_ConversionGain
__ CMCapture: _kFigCaptureStreamMetadata_FocalLenIn35mmFilm
__ CMCapture: _kFigCaptureStreamMetadata_RawSensorHeight
__ CMCapture: _kFigCaptureStreamMetadata_RawSensorWidth
__ CMCapture: _kFigCaptureStreamMetadata_ReadNoise_1x
__ CMCapture: _kFigCaptureStreamMetadata_ReadNoise_8x
__ CMCapture: _kFigCaptureStreamMetadata_TotalSensorCropRect
__ CMCapture: _kFigMetadataDataType_QuickTimeMetadataLivePhotoInfo
__ CMCapture: _kFigMetadataIdentifier_QuickTimeMetadataLivePhotoInfo
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSURLContentModificationDateKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithICCData
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGColorSpaceRetain
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextDrawPath
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetRGBFillColor
__ CoreGraphics: _CGContextSetRGBStrokeColor
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathCreateWithEllipseInRect
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInfinite
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectMakeWithDictionaryRepresentation
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeCreateDictionaryRepresentation
__ CoreGraphics: _kCGColorSpaceExtendedDisplayP3
__ CoreGraphics: _kCGColorSpaceGenericGrayGamma2_2
__ CoreGraphics: _kCGColorSpaceGenericRGBLinear
__ CoreGraphics: _kCGColorSpaceLinearSRGB
__ CoreImage: _OBJC_CLASS_$_CIBlendKernel
__ CoreImage: _OBJC_CLASS_$_CIColor
__ CoreImage: _OBJC_CLASS_$_CIColorKernel
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIFilter
__ CoreImage: _OBJC_CLASS_$_CIFilterShape
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _OBJC_CLASS_$_CIImageProcessorKernel
__ CoreImage: _OBJC_CLASS_$_CIKernel
__ CoreImage: _OBJC_CLASS_$_CIRenderDestination
__ CoreImage: _OBJC_CLASS_$_CISampler
__ CoreImage: _OBJC_CLASS_$_CIVector
__ CoreImage: _OBJC_CLASS_$_CIWarpKernel
__ CoreImage: _OBJC_METACLASS_$_CIFilter
__ CoreImage: _OBJC_METACLASS_$_CIImageProcessorKernel
__ CoreImage: _kCIAttributeClass
__ CoreImage: _kCIAttributeDefault
__ CoreImage: _kCIAttributeFilterCategories
__ CoreImage: _kCIAttributeIdentity
__ CoreImage: _kCIAttributeMax
__ CoreImage: _kCIAttributeMin
__ CoreImage: _kCIAttributeSliderMax
__ CoreImage: _kCIAttributeSliderMin
__ CoreImage: _kCIAttributeType
__ CoreImage: _kCIAttributeTypeDistance
__ CoreImage: _kCIAttributeTypeScalar
__ CoreImage: _kCICategoryApplePrivate
__ CoreImage: _kCICategoryBuiltIn
__ CoreImage: _kCICategoryColorAdjustment
__ CoreImage: _kCICategoryColorEffect
__ CoreImage: _kCICategoryInterlaced
__ CoreImage: _kCICategoryNonSquarePixels
__ CoreImage: _kCICategoryStillImage
__ CoreImage: _kCICategoryStylize
__ CoreImage: _kCICategoryVideo
__ CoreImage: _kCIContextAllowLowPower
__ CoreImage: _kCIContextCacheIntermediates
__ CoreImage: _kCIContextName
__ CoreImage: _kCIContextWorkingColorSpace
__ CoreImage: _kCIContextWorkingFormat
__ CoreImage: _kCIFormatA8
__ CoreImage: _kCIFormatBGRA8
__ CoreImage: _kCIFormatL8
__ CoreImage: _kCIFormatRG8
__ CoreImage: _kCIFormatRGBA8
__ CoreImage: _kCIFormatRGBAf
__ CoreImage: _kCIFormatRGBAh
__ CoreImage: _kCIFormatRh
__ CoreImage: _kCIImageAlphaOne
__ CoreImage: _kCIImageAutoAdjustCrop
__ CoreImage: _kCIImageAutoAdjustFeatures
__ CoreImage: _kCIImageAutoAdjustLevel
__ CoreImage: _kCIImageAutoAdjustLevel_DominantAngleDiffThreshold
__ CoreImage: _kCIImageAutoAdjustLevel_UseVerticalDetector
__ CoreImage: _kCIImageAutoAdjustLevel_VerticalAngleThreshold
__ CoreImage: _kCIImageCacheHint
__ CoreImage: _kCIImageClampToEdge
__ CoreImage: _kCIImageColorSpace
__ CoreImage: _kCIImageFlipped
__ CoreImage: _kCIImageNearestSampling
__ CoreImage: _kCIImageProviderContentDigest
__ CoreImage: _kCIImageProviderName
__ CoreImage: _kCIInputCenterKey
__ CoreImage: _kCIInputContrastKey
__ CoreImage: _kCIInputDisparityImageKey
__ CoreImage: _kCIInputImageKey
__ CoreImage: _kCIInputRadiusKey
__ CoreImage: _kCIInputTargetImageKey
__ CoreImage: _kCIInputTimeKey
__ CoreImage: _kCIInputVersionKey
__ CoreImage: _kCIOutputImageKey
__ CoreImage: _kCISamplerWrapClamp
__ CoreImage: _kCISamplerWrapMode
__ CoreMedia: _CMMetadataFormatDescriptionGetIdentifiers
__ CoreMedia: _CMSampleBufferGetImageBuffer
__ CoreMedia: _CMTimeAdd
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeConvertScale
__ CoreMedia: _CMTimeCopyAsDictionary
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeMakeFromDictionary
__ CoreMedia: _CMTimeMinimum
__ CoreMedia: _CMTimeMultiply
__ CoreMedia: _CMTimeMultiplyByRatio
__ CoreMedia: _CMTimeRangeContainsTime
__ CoreMedia: _CMTimeRangeCopyAsDictionary
__ CoreMedia: _CMTimeRangeFromTimeToTime
__ CoreMedia: _CMTimeRangeGetEnd
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _CMTimeRangeMakeFromDictionary
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimeRangeInvalid
__ CoreMedia: _kCMTimeZero
__ CoreVideo: _CVPixelBufferGetPixelFormatType
__ CoreVideo: _kCVImageBufferTransferFunction_Linear
__ CoreVideo: _kCVImageBufferTransferFunction_UseGamma
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRect
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageMetadataCopyStringValueWithPath
__ ImageIO: _kCGImageAuxiliaryDataInfoMetadata
__ ImageIO: _kCGImageAuxiliaryDataTypeDisparity
__ ImageIO: _kCGImageDestinationLossyCompressionQuality
__ ImageIO: _kCGImageDestinationOptimizeColorForSharing
__ ImageIO: _kCGImagePropertyColorModel
__ ImageIO: _kCGImagePropertyColorModelRGB
__ ImageIO: _kCGImagePropertyDepth
__ ImageIO: _kCGImagePropertyExifAuxDictionary
__ ImageIO: _kCGImagePropertyExifAuxROIRegionFocusType
__ ImageIO: _kCGImagePropertyExifAuxROIRegionHeight
__ ImageIO: _kCGImagePropertyExifAuxROIRegionList
__ ImageIO: _kCGImagePropertyExifAuxROIRegionType
__ ImageIO: _kCGImagePropertyExifAuxROIRegionWidth
__ ImageIO: _kCGImagePropertyExifAuxROIRegionX
__ ImageIO: _kCGImagePropertyExifAuxROIRegionY
__ ImageIO: _kCGImagePropertyExifCustomRendered
__ ImageIO: _kCGImagePropertyExifDictionary
__ ImageIO: _kCGImagePropertyExifFlash
__ ImageIO: _kCGImagePropertyExifLensMake
__ ImageIO: _kCGImagePropertyExifLensModel
__ ImageIO: _kCGImagePropertyHasAlpha
__ ImageIO: _kCGImagePropertyIsFloat
__ ImageIO: _kCGImagePropertyMakerAppleDictionary
__ ImageIO: _kCGImagePropertyOrientation
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImagePropertyTIFFDictionary
__ ImageIO: _kCGImagePropertyTIFFMake
__ ImageIO: _kCGImagePropertyTIFFOrientation
__ ImageIO: _kCGImagePropertyTIFFSoftware
__ InertiaCam: _ICAnalyzeInputMotion
__ InertiaCam: _ICCalcCinematicL1Corrections
__ InertiaCam: _ICDestroyResult
__ InertiaCam: _ICGetResultHomographies
__ InertiaCam: _ICSynthesizeAnalysis
__ InertiaCam: _IC_A_FRAMEINSTRUCTIONS
__ InertiaCam: _IC_A_FRAMETRANSFORM_HOMOGRAPHY
__ InertiaCam: _IC_A_FRAMETRANSFORM_RAWTIME
__ InertiaCam: _IC_A_HOMOGRAPHIES_INVERTED
__ InertiaCam: _IC_A_HOMOGRAPHIES_MAP_TO_REFERENCE
__ InertiaCam: _IC_A_SOURCE_SIZE
__ InertiaCam: _IC_C_CROP_FRACTION
__ InertiaCam: _IC_C_L1_WINDOW_LENGTH
__ InertiaCam: _IC_C_L1_WINDOW_STRIDE
__ Metal: _MTLCreateSystemDefaultDevice
__ NeutrinoCore: _NSStringFromNUPixelRect
__ NeutrinoCore: _NSStringFromNUPixelSize
__ NeutrinoCore: _NUAbsoluteTime
__ NeutrinoCore: _NUAuxiliaryImageTypeFromCoreGraphicsString
__ NeutrinoCore: _NUCGRectConvertFromRectToRect
__ NeutrinoCore: _NUCurrentlyExecutingJobNameKey
__ NeutrinoCore: _NUDegreeToRadian
__ NeutrinoCore: _NUEqualWeightLuminanceColorMatrix
__ NeutrinoCore: _NUFileTypeFromExtension
__ NeutrinoCore: _NUHeight
__ NeutrinoCore: _NUIsAppleInternal
__ NeutrinoCore: _NUIsRoughlyEqual
__ NeutrinoCore: _NUIsRoughlyLessThan
__ NeutrinoCore: _NUMakeDictionary1
__ NeutrinoCore: _NUMakeDictionary2
__ NeutrinoCore: _NUMakeDictionary3
__ NeutrinoCore: _NUMakeDictionary4
__ NeutrinoCore: _NUMakeDictionary5
__ NeutrinoCore: _NUMakeDictionary6
__ NeutrinoCore: _NUMakeDictionary7
__ NeutrinoCore: _NUMaxY
__ NeutrinoCore: _NUMinX
__ NeutrinoCore: _NUMinY
__ NeutrinoCore: _NUOrientationConcat
__ NeutrinoCore: _NUOrientationHasFlip
__ NeutrinoCore: _NUOrientationInverse
__ NeutrinoCore: _NUOrientationIsValid
__ NeutrinoCore: _NUOrientationMakeTransformWithSize
__ NeutrinoCore: _NUOrientationName
__ NeutrinoCore: _NUOrientationTransformImageRect
__ NeutrinoCore: _NUOrientationTransformImageSize
__ NeutrinoCore: _NUOrientationTransformPoint
__ NeutrinoCore: _NUPixelPointZero
__ NeutrinoCore: _NUPixelRectEqualToRect
__ NeutrinoCore: _NUPixelRectFlipYOrigin
__ NeutrinoCore: _NUPixelRectFromArray
__ NeutrinoCore: _NUPixelRectFromCGRect
__ NeutrinoCore: _NUPixelRectInset
__ NeutrinoCore: _NUPixelRectIntersection
__ NeutrinoCore: _NUPixelRectIsEmpty
__ NeutrinoCore: _NUPixelRectIsNull
__ NeutrinoCore: _NUPixelRectMaxCenteredInRect
__ NeutrinoCore: _NUPixelRectNull
__ NeutrinoCore: _NUPixelRectScale
__ NeutrinoCore: _NUPixelRectScaleRational
__ NeutrinoCore: _NUPixelRectSetOrigin
__ NeutrinoCore: _NUPixelRectToCGRect
__ NeutrinoCore: _NUPixelRectZero
__ NeutrinoCore: _NUPixelSizeEqualToSize
__ NeutrinoCore: _NUPixelSizeFromCGSize
__ NeutrinoCore: _NUPixelSizeIsEmpty
__ NeutrinoCore: _NUPixelSizeToCGSize
__ NeutrinoCore: _NUPixelSizeZero
__ NeutrinoCore: _NUScaleCompare
__ NeutrinoCore: _NUScaleDivide
__ NeutrinoCore: _NUScaleEqual
__ NeutrinoCore: _NUScaleFromValue
__ NeutrinoCore: _NUScaleInvert
__ NeutrinoCore: _NUScaleIsValid
__ NeutrinoCore: _NUScaleMake
__ NeutrinoCore: _NUScaleOne
__ NeutrinoCore: _NUScaleRect
__ NeutrinoCore: _NUScaleToDouble
__ NeutrinoCore: _NUScaleToString
__ NeutrinoCore: _NUScaleToValue
__ NeutrinoCore: _NUStringFromTime
__ NeutrinoCore: _NUStringFromTimeRange
__ NeutrinoCore: _NUWidth
__ NeutrinoCore: _OBJC_CLASS_$_NUAdjustment
__ NeutrinoCore: _OBJC_CLASS_$_NUAutoCalculator
__ NeutrinoCore: _OBJC_CLASS_$_NUAuxiliaryImageRenderRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUAuxiliaryPropertiesRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUBufferAdapter
__ NeutrinoCore: _OBJC_CLASS_$_NUBufferImageAdapter
__ NeutrinoCore: _OBJC_CLASS_$_NUBufferRenderClient
__ NeutrinoCore: _OBJC_CLASS_$_NUBufferRenderRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUCGAffineTransform
__ NeutrinoCore: _OBJC_CLASS_$_NUCGImageSourceNode
__ NeutrinoCore: _OBJC_CLASS_$_NUCIImageSourceDefinition
__ NeutrinoCore: _OBJC_CLASS_$_NUCVPixelBuffer
__ NeutrinoCore: _OBJC_CLASS_$_NUCacheNode
__ NeutrinoCore: _OBJC_CLASS_$_NUClampNode
__ NeutrinoCore: _OBJC_CLASS_$_NUClassifyPipelineImageCorrectionRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUColorSampler
__ NeutrinoCore: _OBJC_CLASS_$_NUColorSpace
__ NeutrinoCore: _OBJC_CLASS_$_NUCompositionUtilities
__ NeutrinoCore: _OBJC_CLASS_$_NUCropModel
__ NeutrinoCore: _OBJC_CLASS_$_NUDebugFilterNode
__ NeutrinoCore: _OBJC_CLASS_$_NUDigest
__ NeutrinoCore: _OBJC_CLASS_$_NUEnumSetting
__ NeutrinoCore: _OBJC_CLASS_$_NUError
__ NeutrinoCore: _OBJC_CLASS_$_NUFaceDetectionRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUFactory
__ NeutrinoCore: _OBJC_CLASS_$_NUFileSourceDefinition
__ NeutrinoCore: _OBJC_CLASS_$_NUFillScalePolicy
__ NeutrinoCore: _OBJC_CLASS_$_NUFilterNode
__ NeutrinoCore: _OBJC_CLASS_$_NUFitScalePolicy
__ NeutrinoCore: _OBJC_CLASS_$_NUFixedRegionPolicy
__ NeutrinoCore: _OBJC_CLASS_$_NUFixedScalePolicy
__ NeutrinoCore: _OBJC_CLASS_$_NUFullExtentRegionPolicy
__ NeutrinoCore: _OBJC_CLASS_$_NUGenericAdjustment
__ NeutrinoCore: _OBJC_CLASS_$_NUGenericComposition
__ NeutrinoCore: _OBJC_CLASS_$_NUGeometryRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUGlobalSettings
__ NeutrinoCore: _OBJC_CLASS_$_NUHistogramParameters
__ NeutrinoCore: _OBJC_CLASS_$_NUHistogramRenderRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUIdentifier
__ NeutrinoCore: _OBJC_CLASS_$_NUImageDataClient
__ NeutrinoCore: _OBJC_CLASS_$_NUImageDataRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUImageExportFormat
__ NeutrinoCore: _OBJC_CLASS_$_NUImageExportFormatHEIF
__ NeutrinoCore: _OBJC_CLASS_$_NUImageExportFormatJPEG
__ NeutrinoCore: _OBJC_CLASS_$_NUImageExportRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUImageFactory
__ NeutrinoCore: _OBJC_CLASS_$_NUImageGeometry
__ NeutrinoCore: _OBJC_CLASS_$_NUImagePropertiesRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUImageTransformAffine
__ NeutrinoCore: _OBJC_CLASS_$_NUImageUtilities
__ NeutrinoCore: _OBJC_CLASS_$_NUJSContext
__ NeutrinoCore: _OBJC_CLASS_$_NUJSRenderNode
__ NeutrinoCore: _OBJC_CLASS_$_NUJSRenderPipeline
__ NeutrinoCore: _OBJC_CLASS_$_NUKeyframeSequenceMatrixFloat33
__ NeutrinoCore: _OBJC_CLASS_$_NULivePhotoSourceDefinition
__ NeutrinoCore: _OBJC_CLASS_$_NUMetalRenderer
__ NeutrinoCore: _OBJC_CLASS_$_NUMultipleSourceDefinition
__ NeutrinoCore: _OBJC_CLASS_$_NUMutableBufferAdapter
__ NeutrinoCore: _OBJC_CLASS_$_NUMutableBufferImageAdapter
__ NeutrinoCore: _OBJC_CLASS_$_NUMutablePixelBuffer
__ NeutrinoCore: _OBJC_CLASS_$_NUMutableRegion
__ NeutrinoCore: _OBJC_CLASS_$_NUMuteAudioNode
__ NeutrinoCore: _OBJC_CLASS_$_NUNumberSetting
__ NeutrinoCore: _OBJC_CLASS_$_NUOrientationNode
__ NeutrinoCore: _OBJC_CLASS_$_NUPipelineStateNode
__ NeutrinoCore: _OBJC_CLASS_$_NUPixelCountScalePolicy
__ NeutrinoCore: _OBJC_CLASS_$_NUPixelFormat
__ NeutrinoCore: _OBJC_CLASS_$_NUPlatform
__ NeutrinoCore: _OBJC_CLASS_$_NUPriority
__ NeutrinoCore: _OBJC_CLASS_$_NURedEyeDetectionRequest
__ NeutrinoCore: _OBJC_CLASS_$_NURegion
__ NeutrinoCore: _OBJC_CLASS_$_NURenderClient
__ NeutrinoCore: _OBJC_CLASS_$_NURenderJob
__ NeutrinoCore: _OBJC_CLASS_$_NURenderNode
__ NeutrinoCore: _OBJC_CLASS_$_NURenderPipeline
__ NeutrinoCore: _OBJC_CLASS_$_NURenderPipelineFilter
__ NeutrinoCore: _OBJC_CLASS_$_NURenderPipelineFunction
__ NeutrinoCore: _OBJC_CLASS_$_NURenderPipelineHelper
__ NeutrinoCore: _OBJC_CLASS_$_NURenderPipelineRegistry
__ NeutrinoCore: _OBJC_CLASS_$_NURenderRequest
__ NeutrinoCore: _OBJC_CLASS_$_NURenderTransaction
__ NeutrinoCore: _OBJC_CLASS_$_NUResetScaleNode
__ NeutrinoCore: _OBJC_CLASS_$_NUResolvedSource
__ NeutrinoCore: _OBJC_CLASS_$_NUResponse
__ NeutrinoCore: _OBJC_CLASS_$_NURule
__ NeutrinoCore: _OBJC_CLASS_$_NURuleSystem
__ NeutrinoCore: _OBJC_CLASS_$_NUScaleNode
__ NeutrinoCore: _OBJC_CLASS_$_NUSchema
__ NeutrinoCore: _OBJC_CLASS_$_NUSchemaRegistry
__ NeutrinoCore: _OBJC_CLASS_$_NUScript
__ NeutrinoCore: _OBJC_CLASS_$_NUSoftwareVersion
__ NeutrinoCore: _OBJC_CLASS_$_NUSquareExtentPolicy
__ NeutrinoCore: _OBJC_CLASS_$_NUTagColorSampler
__ NeutrinoCore: _OBJC_CLASS_$_NUTransformNode
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoCacheNode
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoCompositionInstruction
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoExportJob
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoExportRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoFrameSourceNode
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoPropertiesRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoRenderRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoRotationExportRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoSourceNode
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoUtilities
__ NeutrinoCore: _OBJC_CLASS_$_NUVisionDetectionRequest
__ NeutrinoCore: _OBJC_CLASS_$__NURenderResult
__ NeutrinoCore: _OBJC_CLASS_$__NUVideoProperties
__ NeutrinoCore: _OBJC_METACLASS_$_NUAutoCalculator
__ NeutrinoCore: _OBJC_METACLASS_$_NUCacheNode
__ NeutrinoCore: _OBJC_METACLASS_$_NUColorSampler
__ NeutrinoCore: _OBJC_METACLASS_$_NUJSRenderPipeline
__ NeutrinoCore: _OBJC_METACLASS_$_NURenderClient
__ NeutrinoCore: _OBJC_METACLASS_$_NURenderJob
__ NeutrinoCore: _OBJC_METACLASS_$_NURenderNode
__ NeutrinoCore: _OBJC_METACLASS_$_NURenderPipeline
__ NeutrinoCore: _OBJC_METACLASS_$_NURenderRequest
__ NeutrinoCore: _OBJC_METACLASS_$_NURuleSystem
__ NeutrinoCore: _OBJC_METACLASS_$_NUTagColorSampler
__ NeutrinoCore: _OBJC_METACLASS_$_NUVideoCacheNode
__ NeutrinoCore: _OBJC_METACLASS_$_NUVideoExportJob
__ NeutrinoCore: _OBJC_METACLASS_$_NUVideoExportRequest
__ NeutrinoCore: _OBJC_METACLASS_$__NURenderResult
__ NeutrinoCore: __NUAssertContinueHandler
__ NeutrinoCore: __NUAssertFailHandler
__ NeutrinoCore: __NUAssertLogger
__ NeutrinoCore: __NULogInit
__ NeutrinoCore: __NULogOnceToken
__ NeutrinoCore: __NULogger
__ NeutrinoCore: __NURenderLogger
__ NeutrinoCore: _kNUCropModelAngleDegreeTolerance
__ NeutrinoCore: _kNUCropModelSpatialTolerance
__ NeutrinoCore: _nu_rgb_to_tempTint
__ NeutrinoCore: _nu_xy_to_tempTint
__ PhotosFormats: _OBJC_CLASS_$_PFImageMetadata
__ PhotosFormats: _OBJC_CLASS_$_PFMediaCapabilities
__ PhotosFormats: _OBJC_CLASS_$_PFStoryRecipeDisplayAssetNormalization
__ PhotosFormats: _OBJC_CLASS_$_PFUniformTypeUtilities
__ PhotosFormats: _OBJC_CLASS_$_PFVideoMetadata
__ PhotosFormats: _OBJC_CLASS_$_PFZlibDataCompression
__ PhotosFormats: _PFStoryRecipeDisplayAssetNormalizationDataFromMediaAnalysisDictionaryAndRevision
__ Portrait: _OBJC_CLASS_$_PTAssetReader
__ Portrait: _OBJC_CLASS_$_PTCinematographyScript
__ Portrait: _OBJC_CLASS_$_PTGlobalRenderingMetadata
__ Portrait: _OBJC_CLASS_$_PTGlobalVideoMetadata
__ Portrait: _OBJC_CLASS_$_PTRenderPipeline
__ Portrait: _OBJC_CLASS_$_PTRenderPipelineDescriptor
__ Portrait: _OBJC_CLASS_$_PTRenderRequest
__ Portrait: _OBJC_CLASS_$_PTTapToTrack
__ Portrait: _OBJC_CLASS_$_PTTexture
__ Portrait: _OBJC_CLASS_$_PTTimedRenderingMetadata
__ Portrait: _PTDisparityInNormalizedRectFromPixelBuffer
__ Portrait: _PTGroupIDIsValid
__ Portrait: _PTImageBufferTransferFunction_Linear_1_6
__ Portrait: _PTTrackIDIsValid
__ Portrait: _kPTCinematicVideoGlobal_mdta
__ SoftLinking: __sl_dlopen
__ UniformTypeIdentifiers: _OBJC_CLASS_$_UTType
__ UniformTypeIdentifiers: _UTTypeJPEG
__ UniformTypeIdentifiers: _UTTypeMovie
__ UniformTypeIdentifiers: _UTTypeRAWImage
__ UniformTypeIdentifiers: _UTTypeVideo
__ UniformTypeIdentifiers: __UTTypeHEIFStandard
__ Vision: _OBJC_CLASS_$_VN1JC7R3k4455fKQz0dY1VhQ
__ Vision: _OBJC_CLASS_$_VNDetectFaceRectanglesRequest
__ Vision: _OBJC_CLASS_$_VNDetectedObjectObservation
__ Vision: _OBJC_CLASS_$_VNFaceObservation
__ Vision: _OBJC_CLASS_$_VNHomographicImageRegistrationRequest
__ Vision: _OBJC_CLASS_$_VNImageRequestHandler
__ Vision: _OBJC_CLASS_$_VNRecognizedObjectObservation
__ Vision: _OBJC_CLASS_$_VNSession
__ Vision: _VNAnimalIdentifierCat
__ Vision: _VNAnimalIdentifierDog
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___invert_f3
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _acos
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _cosf
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _exp2f
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log10f
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _matrix_identity_float3x3
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _powf
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
PICinematicVideoUtilities : NSObject
  // class methods
  +[PICinematicVideoUtilities assetIsCinematicVideo:]
  +[PICinematicVideoUtilities currentSystemCanRenderAsset:]
  +[PICinematicVideoUtilities cinematicMetadataFromAsset:]
  +[PICinematicVideoUtilities renderingVersionFromAsset:error:]
  +[PICinematicVideoUtilities currentSystemRenderingVersion]


_PITapToTrackRenderResult : _NURenderResult <PITapToTrackResult>
 @property  PTCinematographyTrack *completedTrack
 @property  <NURenderStatistics> *statistics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_PITapToTrackRenderResult .cxx_destruct]
  -[_PITapToTrackRenderResult completedTrack]
  -[_PITapToTrackRenderResult initWithCompletedTrack:]


PITapToTrackRenderJob : NURenderJob
 @property  {?=qiIq} startTime
 @property  {CGPoint=dd} normalizedImagePoint
 @property  @? progressHandler
 @property  PTCinematographyTrack *completedTrack
 @property  BOOL clientRequestedStop

  // instance methods
  -[PITapToTrackRenderJob setStartTime:]
  -[PITapToTrackRenderJob .cxx_destruct]
  -[PITapToTrackRenderJob setProgressHandler:]
  -[PITapToTrackRenderJob result]
  -[PITapToTrackRenderJob startTime]
  -[PITapToTrackRenderJob progressHandler]
  -[PITapToTrackRenderJob prepare:]
  -[PITapToTrackRenderJob completedTrack]
  -[PITapToTrackRenderJob wantsRenderStage]
  -[PITapToTrackRenderJob wantsCompleteStage]
  -[PITapToTrackRenderJob scalePolicy]
  -[PITapToTrackRenderJob wantsOutputVideo]
  -[PITapToTrackRenderJob normalizedImagePoint]
  -[PITapToTrackRenderJob _reportProgressAtTime:rect:confidence:]
  -[PITapToTrackRenderJob clientRequestedStop]
  -[PITapToTrackRenderJob setCompletedTrack:]
  -[PITapToTrackRenderJob setClientRequestedStop:]
  -[PITapToTrackRenderJob setNormalizedImagePoint:]


PITapToTrackRequest : NURenderRequest
 @property  {?=qiIq} startTime
 @property  {CGPoint=dd} normalizedImagePoint
 @property  @? progressHandler

  // instance methods
  -[PITapToTrackRequest submit:]
  -[PITapToTrackRequest setStartTime:]
  -[PITapToTrackRequest .cxx_destruct]
  -[PITapToTrackRequest setProgressHandler:]
  -[PITapToTrackRequest startTime]
  -[PITapToTrackRequest progressHandler]
  -[PITapToTrackRequest copyWithZone:]
  -[PITapToTrackRequest initWithComposition:startTime:pointToTrack:]
  -[PITapToTrackRequest newRenderJob]
  -[PITapToTrackRequest mediaComponentType]
  -[PITapToTrackRequest normalizedImagePoint]
  -[PITapToTrackRequest setNormalizedImagePoint:]


PIPhotoEffectHDR : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[PIPhotoEffectHDR kernel]

  // instance methods
  -[PIPhotoEffectHDR .cxx_destruct]
  -[PIPhotoEffectHDR setInputImage:]
  -[PIPhotoEffectHDR inputImage]
  -[PIPhotoEffectHDR outputImage]
  -[PIPhotoEffectHDR photoEffectName]


PIPhotoEffectBlackAndWhiteHDR : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[PIPhotoEffectBlackAndWhiteHDR kernelBlackAndWhite]

  // instance methods
  -[PIPhotoEffectBlackAndWhiteHDR .cxx_destruct]
  -[PIPhotoEffectBlackAndWhiteHDR setInputImage:]
  -[PIPhotoEffectBlackAndWhiteHDR inputImage]
  -[PIPhotoEffectBlackAndWhiteHDR outputImage]
  -[PIPhotoEffectBlackAndWhiteHDR photoEffectName]


PIPhotoEffectNoirHDR : PIPhotoEffectBlackAndWhiteHDR

PIPhotoEffectChromeHDR : PIPhotoEffectHDR

PIPhotoEffectFadeHDR : PIPhotoEffectHDR

PIPhotoEffectInstantHDR : PIPhotoEffectHDR

PIPhotoEffectMonoHDR : PIPhotoEffectBlackAndWhiteHDR

PIPhotoEffectProcessHDR : PIPhotoEffectHDR

PIPhotoEffectTonalHDR : PIPhotoEffectBlackAndWhiteHDR

PIPhotoEffectTransferHDR : PIPhotoEffectHDR

PIPhotoEffectStageMonoHDR : PIPhotoEffectBlackAndWhiteHDR

PIPhotoEffect3DHDR : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputDepthMap
 @property  float inputThreshold

  // class methods
  +[PIPhotoEffect3DHDR kernel]

  // instance methods
  -[PIPhotoEffect3DHDR .cxx_destruct]
  -[PIPhotoEffect3DHDR setInputImage:]
  -[PIPhotoEffect3DHDR inputImage]
  -[PIPhotoEffect3DHDR inputDepthMap]
  -[PIPhotoEffect3DHDR setInputDepthMap:]
  -[PIPhotoEffect3DHDR inputThreshold]
  -[PIPhotoEffect3DHDR setInputThreshold:]
  -[PIPhotoEffect3DHDR outputImage]
  -[PIPhotoEffect3DHDR photoEffectName]


PIPhotoEffect3DBlackAndWhiteHDR : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputDepthMap
 @property  float inputThreshold

  // class methods
  +[PIPhotoEffect3DBlackAndWhiteHDR kernelBlackAndWhite]

  // instance methods
  -[PIPhotoEffect3DBlackAndWhiteHDR .cxx_destruct]
  -[PIPhotoEffect3DBlackAndWhiteHDR setInputImage:]
  -[PIPhotoEffect3DBlackAndWhiteHDR inputImage]
  -[PIPhotoEffect3DBlackAndWhiteHDR inputDepthMap]
  -[PIPhotoEffect3DBlackAndWhiteHDR setInputDepthMap:]
  -[PIPhotoEffect3DBlackAndWhiteHDR inputThreshold]
  -[PIPhotoEffect3DBlackAndWhiteHDR setInputThreshold:]
  -[PIPhotoEffect3DBlackAndWhiteHDR outputImage]
  -[PIPhotoEffect3DBlackAndWhiteHDR photoEffectName]


PIPhotoEffect3DVividHDR : PIPhotoEffect3DHDR

PIPhotoEffect3DVividWarmHDR : PIPhotoEffect3DHDR

PIPhotoEffect3DVividCoolHDR : PIPhotoEffect3DHDR

PIPhotoEffect3DDramaticHDR : PIPhotoEffect3DHDR

PIPhotoEffect3DDramaticCoolHDR : PIPhotoEffect3DHDR

PIPhotoEffect3DDramaticWarmHDR : PIPhotoEffect3DHDR

PIPhotoEffect3DSilverplateHDR : PIPhotoEffect3DBlackAndWhiteHDR

PIPhotoEffect3DNoirHDR : PIPhotoEffect3DBlackAndWhiteHDR

PIColorNormalizationFilter : CIFilter
 @property  CIImage *inputImage
 @property  PFStoryRecipeDisplayAssetNormalization *inputNormalization
 @property  PFStoryRecipeDisplayAssetNormalization *outputNormalization

  // class methods
  +[PIColorNormalizationFilter logger]
  +[PIColorNormalizationFilter colorCubeForNormalization:dimension:targetColorSpace:]
  +[PIColorNormalizationFilter isAnalysisAvailable]

  // instance methods
  -[PIColorNormalizationFilter .cxx_destruct]
  -[PIColorNormalizationFilter setInputImage:]
  -[PIColorNormalizationFilter isEqual:]
  -[PIColorNormalizationFilter inputImage]
  -[PIColorNormalizationFilter outputImage]
  -[PIColorNormalizationFilter setInputNormalization:]
  -[PIColorNormalizationFilter inputNormalization]
  -[PIColorNormalizationFilter outputNormalization]


PIReframeRules : NURuleSystem
 @property  BOOL isCandidateForReframe
 @property  BOOL isCandidateForPerspective
 @property  BOOL isCandidateForHorizon

  // class methods
  +[PIReframeRules factCandidateForReframe]
  +[PIReframeRules factCandidateForStill]
  +[PIReframeRules factCandidateForVideo]
  +[PIReframeRules factCandidateForPerspective]
  +[PIReframeRules factCandidateForHorizon]
  +[PIReframeRules sharedPregateRules]
  +[PIReframeRules pregateRulesSystemWithConstants:]

  // instance methods
  -[PIReframeRules isCandidateForReframe]
  -[PIReframeRules isCandidateForPerspective]
  -[PIReframeRules isCandidateForHorizon]


PISemanticEnhanceAdjustmentController : PIAdjustmentController
 @property  double intensity
 @property  long long scene
 @property  double sceneConfidence
 @property  NSArray *boundingBoxes

  // class methods
  +[PISemanticEnhanceAdjustmentController intensityKey]
  +[PISemanticEnhanceAdjustmentController sceneLabelKey]
  +[PISemanticEnhanceAdjustmentController boundingBoxesKey]
  +[PISemanticEnhanceAdjustmentController platedFoodSceneLabel]
  +[PISemanticEnhanceAdjustmentController sunriseSunsetSceneLabel]
  +[PISemanticEnhanceAdjustmentController genericLandscapeSceneLabel]
  +[PISemanticEnhanceAdjustmentController sceneConfidenceKey]
  +[PISemanticEnhanceAdjustmentController faceBoundingBoxesKey]

  // instance methods
  -[PISemanticEnhanceAdjustmentController scene]
  -[PISemanticEnhanceAdjustmentController setIntensity:]
  -[PISemanticEnhanceAdjustmentController setScene:confidence:]
  -[PISemanticEnhanceAdjustmentController setBoundingBoxesFromObservations:orientation:]
  -[PISemanticEnhanceAdjustmentController setFaceBoundingBoxesFromObservations:orientation:]
  -[PISemanticEnhanceAdjustmentController intensity]
  -[PISemanticEnhanceAdjustmentController boundingBoxes]
  -[PISemanticEnhanceAdjustmentController isSettingEqual:forKey:]
  -[PISemanticEnhanceAdjustmentController sceneConfidence]


_PIDisparitySampleResult : _NURenderResult <PIDisparitySampleResult>
 @property  float sampledDisparityValue
 @property  <NURenderStatistics> *statistics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_PIDisparitySampleResult sampledDisparityValue]
  -[_PIDisparitySampleResult initWithDisparityValue:]


PIDisparitySampleJob : NURenderJob
 @property  {?=qiIq} sampleTime
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sampleRect
 @property  float sampledDisparityValue

  // instance methods
  -[PIDisparitySampleJob render:]
  -[PIDisparitySampleJob setSampleRect:]
  -[PIDisparitySampleJob result]
  -[PIDisparitySampleJob sampleTime]
  -[PIDisparitySampleJob sampleRect]
  -[PIDisparitySampleJob sampledDisparityValue]
  -[PIDisparitySampleJob wantsRenderStage]
  -[PIDisparitySampleJob wantsCompleteStage]
  -[PIDisparitySampleJob scalePolicy]
  -[PIDisparitySampleJob wantsOutputVideo]
  -[PIDisparitySampleJob setSampleTime:]
  -[PIDisparitySampleJob setSampledDisparityValue:]


PIDisparitySampleRequest : NURenderRequest
 @property  {?=qiIq} sampleTime
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sampleRect

  // instance methods
  -[PIDisparitySampleRequest submit:]
  -[PIDisparitySampleRequest setSampleRect:]
  -[PIDisparitySampleRequest sampleTime]
  -[PIDisparitySampleRequest sampleRect]
  -[PIDisparitySampleRequest copyWithZone:]
  -[PIDisparitySampleRequest initWithComposition:time:sampleRect:]
  -[PIDisparitySampleRequest newRenderJob]
  -[PIDisparitySampleRequest mediaComponentType]
  -[PIDisparitySampleRequest setSampleTime:]


PILocalContrastHDR : CIFilter
  // class methods
  +[PILocalContrastHDR customAttributes]

  // instance methods
  -[PILocalContrastHDR .cxx_destruct]
  -[PILocalContrastHDR _kernelLocalContrast]
  -[PILocalContrastHDR outputImage]


PIHighKey : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputStrength

  // class methods
  +[PIHighKey kernel]

  // instance methods
  -[PIHighKey .cxx_destruct]
  -[PIHighKey setInputImage:]
  -[PIHighKey inputImage]
  -[PIHighKey inputStrength]
  -[PIHighKey setInputStrength:]
  -[PIHighKey outputImage]


PICompositionController : NSObject <NSCopying>
 @property  PIAdjustmentConstants *adjustmentConstants
 @property  NUComposition *composition
 @property  <PICompositionControllerDelegate> *changeDelegate
 @property  long long mediaType
 @property  long long imageOrientation
 @property  long long sourceSelection

  // class methods
  +[PICompositionController photosSchema]
  +[PICompositionController adjustmentControllerClassForKey:]
  +[PICompositionController settingForAdjustmentKey:settingKey:]
  +[PICompositionController _keyToIdentifierMap]
  +[PICompositionController schemaForKey:]

  // instance methods
  -[PICompositionController imageOrientation]
  -[PICompositionController setMediaType:]
  -[PICompositionController setImageOrientation:]
  -[PICompositionController availableKeys]
  -[PICompositionController composition]
  -[PICompositionController initWithComposition:]
  -[PICompositionController .cxx_destruct]
  -[PICompositionController userOrientation]
  -[PICompositionController adjustmentConstants]
  -[PICompositionController adjustmentControllerForKey:]
  -[PICompositionController depthAdjustmentController]
  -[PICompositionController modifyAdjustmentWithKey:modificationBlock:]
  -[PICompositionController portraitAdjustmentController]
  -[PICompositionController setSource:mediaType:]
  -[PICompositionController setOvercaptureSource:]
  -[PICompositionController orientationAdjustmentController]
  -[PICompositionController isEqual:forKeys:visualChangesOnly:]
  -[PICompositionController mediaType]
  -[PICompositionController smartToneAdjustmentController]
  -[PICompositionController smartColorAdjustmentController]
  -[PICompositionController rawNoiseReductionAdjustmentController]
  -[PICompositionController smartBWAdjustmentController]
  -[PICompositionController sharpenAdjustmentController]
  -[PICompositionController whiteBalanceAdjustmentController]
  -[PICompositionController noiseReductionAdjustmentController]
  -[PICompositionController definitionAdjustmentController]
  -[PICompositionController effect3DAdjustmentController]
  -[PICompositionController effectAdjustmentController]
  -[PICompositionController isEqual:forKeys:comparisonBlock:]
  -[PICompositionController sourceSelection]
  -[PICompositionController removeAdjustmentWithKey:]
  -[PICompositionController applyChangesFromCompositionController:]
  -[PICompositionController sourceSelectAdjustmentController]
  -[PICompositionController cropAdjustmentController]
  -[PICompositionController videoReframeAdjustmentController]
  -[PICompositionController setSourceSelection:]
  -[PICompositionController autoLoopAdjustmentController]
  -[PICompositionController copyWithZone:]
  -[PICompositionController source]
  -[PICompositionController trimAdjustmentController]
  -[PICompositionController cropAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController orientationAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController isEqual:visualChangesOnly:]
  -[PICompositionController redEyeAdjustmentController]
  -[PICompositionController slomoAdjustmentController]
  -[PICompositionController compositionKeys]
  -[PICompositionController videoStabilizeAdjustmentController]
  -[PICompositionController portraitVideoAdjustmentController]
  -[PICompositionController setChangeDelegate:]
  -[PICompositionController overcaptureSource]
  -[PICompositionController smartToneAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController livePhotoKeyFrameAdjustmentController]
  -[PICompositionController videoPosterFrameAdjustmentController]
  -[PICompositionController changeDelegate]
  -[PICompositionController adjustmentKeys]
  -[PICompositionController _adjustmentControllerClassForKey:]
  -[PICompositionController differingAdjustmentsWithComposition:]
  -[PICompositionController addAdjustmentWithKey:]
  -[PICompositionController replaceAdjustment:withKey:]
  -[PICompositionController semanticEnhanceAdjustmentController]
  -[PICompositionController _adjustmentControllerForKey:creatingIfNecessary:expectedClass:]
  -[PICompositionController smartColorAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController smartBWAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController redEyeAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController livePhotoKeyFrameAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController videoPosterFrameAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController depthAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController trimAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController slomoAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController effectAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController effect3DAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController portraitAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController autoLoopAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController highResFusionAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController rawAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController rawNoiseReductionAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController sharpenAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController whiteBalanceAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController noiseReductionAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController definitionAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController vignetteAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController videoReframeAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController sourceSelectAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController videoStabilizeAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController videoCrossfadeLoopAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController semanticEnhanceAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController portraitVideoAdjustmentControllerCreatingIfNecessary:]
  -[PICompositionController highResFusionAdjustmentController]
  -[PICompositionController rawAdjustmentController]
  -[PICompositionController vignetteAdjustmentController]
  -[PICompositionController videoCrossfadeLoopAdjustmentController]


PICompositionSerializer : NSObject
  // class methods
  +[PICompositionSerializer initialize]
  +[PICompositionSerializer canInterpretDataWithFormatIdentifier:formatVersion:]
  +[PICompositionSerializer serializeDictionary:error:]
  +[PICompositionSerializer deserializeCompositionFromAdjustments:metadata:formatIdentifier:formatVersion:error:]
  +[PICompositionSerializer deserializeCompositionFromData:formatIdentifier:formatVersion:error:]
  +[PICompositionSerializer serializeComposition:versionInfo:serializerMetadata:error:]
  +[PICompositionSerializer deserializeDictionaryFromData:error:]
  +[PICompositionSerializer disableApertureEffects:]
  +[PICompositionSerializer adjustmentInformationForComposition:error:]
  +[PICompositionSerializer validateAdjustmentsEnvelope:error:]
  +[PICompositionSerializer _sanitizeComposition:]
  +[PICompositionSerializer validateCompositionWithMissingSource:error:]
  +[PICompositionSerializer _validateValueTypesForKeys:requiredKeys:inDictionary:error:]
  +[PICompositionSerializer serializeComposition:versionInfo:error:]


PICompositionSerializationResult : NSObject
 @property  NSData *data
 @property  NSString *formatIdentifier
 @property  NSString *formatVersion

  // instance methods
  -[PICompositionSerializationResult setFormatIdentifier:]
  -[PICompositionSerializationResult setFormatVersion:]
  -[PICompositionSerializationResult .cxx_destruct]
  -[PICompositionSerializationResult formatIdentifier]
  -[PICompositionSerializationResult data]
  -[PICompositionSerializationResult setData:]
  -[PICompositionSerializationResult formatVersion]


PICompositionSerializerMetadata : NSObject
 @property  long long width
 @property  long long height
 @property  long long orientation

  // instance methods
  -[PICompositionSerializerMetadata width]
  -[PICompositionSerializerMetadata setOrientation:]
  -[PICompositionSerializerMetadata setWidth:]
  -[PICompositionSerializerMetadata setHeight:]
  -[PICompositionSerializerMetadata height]
  -[PICompositionSerializerMetadata orientation]


PILevelsFilterHDR : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputBlackSrcRGB
 @property  NSNumber *inputBlackDstRGB
 @property  NSNumber *inputShadowSrcRGB
 @property  NSNumber *inputShadowDstRGB
 @property  NSNumber *inputMidSrcRGB
 @property  NSNumber *inputMidDstRGB
 @property  NSNumber *inputHilightSrcRGB
 @property  NSNumber *inputHilightDstRGB
 @property  NSNumber *inputWhiteSrcRGB
 @property  NSNumber *inputWhiteDstRGB
 @property  NSNumber *inputBlackSrcRed
 @property  NSNumber *inputBlackDstRed
 @property  NSNumber *inputShadowSrcRed
 @property  NSNumber *inputShadowDstRed
 @property  NSNumber *inputMidSrcRed
 @property  NSNumber *inputMidDstRed
 @property  NSNumber *inputHilightSrcRed
 @property  NSNumber *inputHilightDstRed
 @property  NSNumber *inputWhiteSrcRed
 @property  NSNumber *inputWhiteDstRed
 @property  NSNumber *inputBlackSrcGreen
 @property  NSNumber *inputBlackDstGreen
 @property  NSNumber *inputShadowSrcGreen
 @property  NSNumber *inputShadowDstGreen
 @property  NSNumber *inputMidSrcGreen
 @property  NSNumber *inputMidDstGreen
 @property  NSNumber *inputHilightSrcGreen
 @property  NSNumber *inputHilightDstGreen
 @property  NSNumber *inputWhiteSrcGreen
 @property  NSNumber *inputWhiteDstGreen
 @property  NSNumber *inputBlackSrcBlue
 @property  NSNumber *inputBlackDstBlue
 @property  NSNumber *inputShadowSrcBlue
 @property  NSNumber *inputShadowDstBlue
 @property  NSNumber *inputMidSrcBlue
 @property  NSNumber *inputMidDstBlue
 @property  NSNumber *inputHilightSrcBlue
 @property  NSNumber *inputHilightDstBlue
 @property  NSNumber *inputWhiteSrcBlue
 @property  NSNumber *inputWhiteDstBlue
 @property  NSString *inputColorSpace

  // class methods
  +[PILevelsFilterHDR defaultValueForKey:]
  +[PILevelsFilterHDR customAttributes]
  +[PILevelsFilterHDR _customAttributesForKey:]

  // instance methods
  -[PILevelsFilterHDR .cxx_destruct]
  -[PILevelsFilterHDR setDefaults]
  -[PILevelsFilterHDR setInputImage:]
  -[PILevelsFilterHDR inputImage]
  -[PILevelsFilterHDR inputColorSpace]
  -[PILevelsFilterHDR setInputColorSpace:]
  -[PILevelsFilterHDR outputImage]
  -[PILevelsFilterHDR floatValueForKey:defaultValue:clearIfNotDefault:]
  -[PILevelsFilterHDR _LUTImage]
  -[PILevelsFilterHDR P3KernelHDR]
  -[PILevelsFilterHDR inputBlackSrcRGB]
  -[PILevelsFilterHDR setInputBlackSrcRGB:]
  -[PILevelsFilterHDR inputBlackDstRGB]
  -[PILevelsFilterHDR setInputBlackDstRGB:]
  -[PILevelsFilterHDR inputShadowSrcRGB]
  -[PILevelsFilterHDR setInputShadowSrcRGB:]
  -[PILevelsFilterHDR inputShadowDstRGB]
  -[PILevelsFilterHDR setInputShadowDstRGB:]
  -[PILevelsFilterHDR inputMidSrcRGB]
  -[PILevelsFilterHDR setInputMidSrcRGB:]
  -[PILevelsFilterHDR inputMidDstRGB]
  -[PILevelsFilterHDR setInputMidDstRGB:]
  -[PILevelsFilterHDR inputHilightSrcRGB]
  -[PILevelsFilterHDR setInputHilightSrcRGB:]
  -[PILevelsFilterHDR inputHilightDstRGB]
  -[PILevelsFilterHDR setInputHilightDstRGB:]
  -[PILevelsFilterHDR inputWhiteSrcRGB]
  -[PILevelsFilterHDR setInputWhiteSrcRGB:]
  -[PILevelsFilterHDR inputWhiteDstRGB]
  -[PILevelsFilterHDR setInputWhiteDstRGB:]
  -[PILevelsFilterHDR inputBlackSrcRed]
  -[PILevelsFilterHDR setInputBlackSrcRed:]
  -[PILevelsFilterHDR inputBlackDstRed]
  -[PILevelsFilterHDR setInputBlackDstRed:]
  -[PILevelsFilterHDR inputShadowSrcRed]
  -[PILevelsFilterHDR setInputShadowSrcRed:]
  -[PILevelsFilterHDR inputShadowDstRed]
  -[PILevelsFilterHDR setInputShadowDstRed:]
  -[PILevelsFilterHDR inputMidSrcRed]
  -[PILevelsFilterHDR setInputMidSrcRed:]
  -[PILevelsFilterHDR inputMidDstRed]
  -[PILevelsFilterHDR setInputMidDstRed:]
  -[PILevelsFilterHDR inputHilightSrcRed]
  -[PILevelsFilterHDR setInputHilightSrcRed:]
  -[PILevelsFilterHDR inputHilightDstRed]
  -[PILevelsFilterHDR setInputHilightDstRed:]
  -[PILevelsFilterHDR inputWhiteSrcRed]
  -[PILevelsFilterHDR setInputWhiteSrcRed:]
  -[PILevelsFilterHDR inputWhiteDstRed]
  -[PILevelsFilterHDR setInputWhiteDstRed:]
  -[PILevelsFilterHDR inputBlackSrcGreen]
  -[PILevelsFilterHDR setInputBlackSrcGreen:]
  -[PILevelsFilterHDR inputBlackDstGreen]
  -[PILevelsFilterHDR setInputBlackDstGreen:]
  -[PILevelsFilterHDR inputShadowSrcGreen]
  -[PILevelsFilterHDR setInputShadowSrcGreen:]
  -[PILevelsFilterHDR inputShadowDstGreen]
  -[PILevelsFilterHDR setInputShadowDstGreen:]
  -[PILevelsFilterHDR inputMidSrcGreen]
  -[PILevelsFilterHDR setInputMidSrcGreen:]
  -[PILevelsFilterHDR inputMidDstGreen]
  -[PILevelsFilterHDR setInputMidDstGreen:]
  -[PILevelsFilterHDR inputHilightSrcGreen]
  -[PILevelsFilterHDR setInputHilightSrcGreen:]
  -[PILevelsFilterHDR inputHilightDstGreen]
  -[PILevelsFilterHDR setInputHilightDstGreen:]
  -[PILevelsFilterHDR inputWhiteSrcGreen]
  -[PILevelsFilterHDR setInputWhiteSrcGreen:]
  -[PILevelsFilterHDR inputWhiteDstGreen]
  -[PILevelsFilterHDR setInputWhiteDstGreen:]
  -[PILevelsFilterHDR inputBlackSrcBlue]
  -[PILevelsFilterHDR setInputBlackSrcBlue:]
  -[PILevelsFilterHDR inputBlackDstBlue]
  -[PILevelsFilterHDR setInputBlackDstBlue:]
  -[PILevelsFilterHDR inputShadowSrcBlue]
  -[PILevelsFilterHDR setInputShadowSrcBlue:]
  -[PILevelsFilterHDR inputShadowDstBlue]
  -[PILevelsFilterHDR setInputShadowDstBlue:]
  -[PILevelsFilterHDR inputMidSrcBlue]
  -[PILevelsFilterHDR setInputMidSrcBlue:]
  -[PILevelsFilterHDR inputMidDstBlue]
  -[PILevelsFilterHDR setInputMidDstBlue:]
  -[PILevelsFilterHDR inputHilightSrcBlue]
  -[PILevelsFilterHDR setInputHilightSrcBlue:]
  -[PILevelsFilterHDR inputHilightDstBlue]
  -[PILevelsFilterHDR setInputHilightDstBlue:]
  -[PILevelsFilterHDR inputWhiteSrcBlue]
  -[PILevelsFilterHDR setInputWhiteSrcBlue:]
  -[PILevelsFilterHDR inputWhiteDstBlue]
  -[PILevelsFilterHDR setInputWhiteDstBlue:]


PIColorNormalizationAutoCalculator : NUAutoCalculator <NUTimeBased>
 @property  {?=qiIq} time
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PIColorNormalizationAutoCalculator isAvailable]
  +[PIColorNormalizationAutoCalculator autoCalculatorWithImageData:orientation:]

  // instance methods
  -[PIColorNormalizationAutoCalculator setTime:]
  -[PIColorNormalizationAutoCalculator submit:]
  -[PIColorNormalizationAutoCalculator initWithComposition:]
  -[PIColorNormalizationAutoCalculator time]


PIFalseColorHDRDebug : CIFilter
 @property  double inputCutoff
 @property  CIImage *inputImage

  // class methods
  +[PIFalseColorHDRDebug kernel]

  // instance methods
  -[PIFalseColorHDRDebug .cxx_destruct]
  -[PIFalseColorHDRDebug setInputImage:]
  -[PIFalseColorHDRDebug inputImage]
  -[PIFalseColorHDRDebug outputImage]
  -[PIFalseColorHDRDebug inputCutoff]
  -[PIFalseColorHDRDebug setInputCutoff:]


PIAutoCalculatorUtils : NSObject
  // class methods
  +[PIAutoCalculatorUtils convertFacePoint:toImagePointWithFaceRect:orientation:]
  +[PIAutoCalculatorUtils averagePoints:pointCount:]
  +[PIAutoCalculatorUtils averageCGPoints:pointCount:]


PIAutoLoopExportRequest : NUVideoExportRequest
 @property  NSString *destinationUTI
 @property  NSURL *destinationLongExposureURL
 @property  NSURL *destinationMaskURL
 @property  NUColorSpace *outputColorSpace

  // instance methods
  -[PIAutoLoopExportRequest submit:]
  -[PIAutoLoopExportRequest initWithRequest:]
  -[PIAutoLoopExportRequest .cxx_destruct]
  -[PIAutoLoopExportRequest copyWithZone:]
  -[PIAutoLoopExportRequest newRenderJob]
  -[PIAutoLoopExportRequest mediaComponentType]
  -[PIAutoLoopExportRequest initWithComposition:destinationURL:]
  -[PIAutoLoopExportRequest outputColorSpace]
  -[PIAutoLoopExportRequest initWithComposition:stabilizedVideoURL:longExposureDestinationURL:maskDestinationURL:destinationUTI:]
  -[PIAutoLoopExportRequest destinationUTI]
  -[PIAutoLoopExportRequest destinationLongExposureURL]
  -[PIAutoLoopExportRequest destinationMaskURL]


PIAutoLoopExportClient : NURenderClient
  // instance methods
  -[PIAutoLoopExportClient submitRequest:]
  -[PIAutoLoopExportClient setCompletionBlock:]


PIAutoLoopAnalysisRequest : NURenderRequest
 @property  long long flavor

  // instance methods
  -[PIAutoLoopAnalysisRequest submit:]
  -[PIAutoLoopAnalysisRequest flavor]
  -[PIAutoLoopAnalysisRequest copyWithZone:]
  -[PIAutoLoopAnalysisRequest setFlavor:]
  -[PIAutoLoopAnalysisRequest newRenderJob]
  -[PIAutoLoopAnalysisRequest mediaComponentType]


PIAutoLoopAnalysisClient : NURenderClient
  // instance methods
  -[PIAutoLoopAnalysisClient submitRequest:]
  -[PIAutoLoopAnalysisClient setCompletionBlock:]


PILongExposureRegistrationRequest : NURenderRequest
 @property  NSDictionary *recipe
 @property  {?={?=qq}{?=qq}} cleanAperture

  // instance methods
  -[PILongExposureRegistrationRequest setRecipe:]
  -[PILongExposureRegistrationRequest recipe]
  -[PILongExposureRegistrationRequest submit:]
  -[PILongExposureRegistrationRequest .cxx_destruct]
  -[PILongExposureRegistrationRequest copyWithZone:]
  -[PILongExposureRegistrationRequest newRenderJob]
  -[PILongExposureRegistrationRequest mediaComponentType]
  -[PILongExposureRegistrationRequest cleanAperture]
  -[PILongExposureRegistrationRequest setCleanAperture:]


PIPortraitVideoProcessor : CIImageProcessorKernel
  // class methods
  +[PIPortraitVideoProcessor outputFormat]
  +[PIPortraitVideoProcessor synchronizeInputs]
  +[PIPortraitVideoProcessor roiForInput:arguments:outputRect:]
  +[PIPortraitVideoProcessor processWithInputs:arguments:output:error:]
  +[PIPortraitVideoProcessor formatForInputAtIndex:]
  +[PIPortraitVideoProcessor outputIsOpaque]
  +[PIPortraitVideoProcessor allowPartialOutputRegion]
  +[PIPortraitVideoProcessor _updateRenderState:withLegacyCameraInfo:]
  +[PIPortraitVideoProcessor applyWithInputImage:disparityImage:globalMetadata:timedMetadata:aperture:focusedDisparity:quality:debugMode:isHDR:error:]


PIPortraitVideoFilter : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputDisparityImage
 @property  NSNumber *inputRenderQuality
 @property  NSNumber *inputRenderDebugMode
 @property  BOOL inputIsHDR
 @property  AVMetadataItem *inputGlobalRenderingMetadata
 @property  AVTimedMetadataGroup *inputTimedRenderingMetadata
 @property  NSNumber *inputAperture
 @property  NSNumber *inputFocusedDisparity

  // instance methods
  -[PIPortraitVideoFilter .cxx_destruct]
  -[PIPortraitVideoFilter setInputImage:]
  -[PIPortraitVideoFilter inputImage]
  -[PIPortraitVideoFilter inputAperture]
  -[PIPortraitVideoFilter setInputAperture:]
  -[PIPortraitVideoFilter inputDisparityImage]
  -[PIPortraitVideoFilter setInputDisparityImage:]
  -[PIPortraitVideoFilter outputImage]
  -[PIPortraitVideoFilter inputGlobalRenderingMetadata]
  -[PIPortraitVideoFilter inputTimedRenderingMetadata]
  -[PIPortraitVideoFilter inputFocusedDisparity]
  -[PIPortraitVideoFilter inputRenderQuality]
  -[PIPortraitVideoFilter inputRenderDebugMode]
  -[PIPortraitVideoFilter inputIsHDR]
  -[PIPortraitVideoFilter setInputRenderQuality:]
  -[PIPortraitVideoFilter setInputRenderDebugMode:]
  -[PIPortraitVideoFilter setInputIsHDR:]
  -[PIPortraitVideoFilter setInputGlobalRenderingMetadata:]
  -[PIPortraitVideoFilter setInputTimedRenderingMetadata:]
  -[PIPortraitVideoFilter setInputFocusedDisparity:]


PIAutoLoopAdjustmentController : PIAdjustmentController
 @property  NSDictionary *recipe
 @property  NSString *flavor
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} stabilizedCropRect

  // class methods
  +[PIAutoLoopAdjustmentController recipeKey]
  +[PIAutoLoopAdjustmentController flavorKey]

  // instance methods
  -[PIAutoLoopAdjustmentController setRecipe:]
  -[PIAutoLoopAdjustmentController recipe]
  -[PIAutoLoopAdjustmentController flavor]
  -[PIAutoLoopAdjustmentController setFlavor:]
  -[PIAutoLoopAdjustmentController stabilizedCropRect]


PIVideoCrossfadeLoopNode : NURenderNode
 @property  {?=qiIq} startTime
 @property  {?={?=qiIq}{?=qiIq}} loopTimeRange
 @property  {?=qiIq} crossfadeDuration

  // instance methods
  -[PIVideoCrossfadeLoopNode input]
  -[PIVideoCrossfadeLoopNode startTime]
  -[PIVideoCrossfadeLoopNode loopTimeRange]
  -[PIVideoCrossfadeLoopNode crossfadeDuration]
  -[PIVideoCrossfadeLoopNode resolvedNodeWithCachedInputs:settings:pipelineState:error:]
  -[PIVideoCrossfadeLoopNode nodeByReplayingAgainstCache:pipelineState:error:]
  -[PIVideoCrossfadeLoopNode shouldCacheNodeForPipelineState:]
  -[PIVideoCrossfadeLoopNode _evaluateVideo:]
  -[PIVideoCrossfadeLoopNode requiresVideoComposition]
  -[PIVideoCrossfadeLoopNode requiresAudioMix]
  -[PIVideoCrossfadeLoopNode initWithSettings:inputs:]
  -[PIVideoCrossfadeLoopNode _evaluateVideoComposition:]
  -[PIVideoCrossfadeLoopNode _evaluateAudioMix:]
  -[PIVideoCrossfadeLoopNode initWithInput:timeRange:crossfadeDuration:startTime:]


PILivePhotoKeyFrameAdjustmentController : PIAdjustmentController
 @property  {?=qiIq} keyFrameTime

  // class methods
  +[PILivePhotoKeyFrameAdjustmentController timeKey]
  +[PILivePhotoKeyFrameAdjustmentController scaleKey]

  // instance methods
  -[PILivePhotoKeyFrameAdjustmentController keyFrameTime]
  -[PILivePhotoKeyFrameAdjustmentController setKeyFrameTime:]
  -[PILivePhotoKeyFrameAdjustmentController initWithAdjustment:]


PIVignetteAdjustmentController : PIAdjustmentController
 @property  double intensity
 @property  double radius
 @property  double falloff

  // class methods
  +[PIVignetteAdjustmentController intensityKey]
  +[PIVignetteAdjustmentController radiusKey]
  +[PIVignetteAdjustmentController falloffKey]

  // instance methods
  -[PIVignetteAdjustmentController falloff]
  -[PIVignetteAdjustmentController radius]
  -[PIVignetteAdjustmentController setRadius:]
  -[PIVignetteAdjustmentController setIntensity:]
  -[PIVignetteAdjustmentController setFalloff:]
  -[PIVignetteAdjustmentController intensity]


PIAdjustmentController : NSObject
 @property  NSDictionary *settings
 @property  BOOL enabled
 @property  NUIdentifier *identifier
 @property  NSString *displayName
 @property  NUAdjustment *adjustment
 @property  NSArray *inputKeys
 @property  NSArray *displayInputKeys
 @property  BOOL canBeEnabled

  // class methods
  +[PIAdjustmentController enabledKey]
  +[PIAdjustmentController autoKey]

  // instance methods
  -[PIAdjustmentController setValue:forUndefinedKey:]
  -[PIAdjustmentController displayName]
  -[PIAdjustmentController valueForUndefinedKey:]
  -[PIAdjustmentController isAuto]
  -[PIAdjustmentController inputKeys]
  -[PIAdjustmentController objectForKeyedSubscript:]
  -[PIAdjustmentController .cxx_destruct]
  -[PIAdjustmentController enabled]
  -[PIAdjustmentController setObject:forKeyedSubscript:]
  -[PIAdjustmentController isEqual:]
  -[PIAdjustmentController identifier]
  -[PIAdjustmentController setIdentifier:]
  -[PIAdjustmentController isEqual:forKeys:]
  -[PIAdjustmentController adjustment]
  -[PIAdjustmentController setEnabled:]
  -[PIAdjustmentController settingForKey:]
  -[PIAdjustmentController settings]
  -[PIAdjustmentController _isDefault]
  -[PIAdjustmentController canBeEnabled]
  -[PIAdjustmentController canHaveAuto]
  -[PIAdjustmentController setIsAuto:]
  -[PIAdjustmentController isEqual:visualChangesOnly:]
  -[PIAdjustmentController setFromAdjustment:]
  -[PIAdjustmentController initWithAdjustment:]
  -[PIAdjustmentController isSettingEqual:forKey:]
  -[PIAdjustmentController hasInputKey:]
  -[PIAdjustmentController hasAutoKeyInSchema]
  -[PIAdjustmentController _setPrimitiveValue:forKey:]
  -[PIAdjustmentController _primitiveValueForKey:]
  -[PIAdjustmentController isEqualToAdjustmentController:]
  -[PIAdjustmentController visualInputKeys]
  -[PIAdjustmentController displayInputKeys]
  -[PIAdjustmentController valuesForArrayInputKey:]
  -[PIAdjustmentController interpolateFromStart:toEnd:progress:]
  -[PIAdjustmentController timeFromInputKey:timescaleKey:]


PIPortraitVideoRenderNode : NURenderNode
 @property  NSArray *disparityKeyframes
 @property  NSArray *apertureKeyframes
 @property  {?=qiIq} renderTime
 @property  int renderQuality
 @property  long long debugMode
 @property  AVTimedMetadataGroup *timedMetadata
 @property  AVMetadataItem *globalMetadata

  // instance methods
  -[PIPortraitVideoRenderNode renderQuality]
  -[PIPortraitVideoRenderNode debugMode]
  -[PIPortraitVideoRenderNode timedMetadata]
  -[PIPortraitVideoRenderNode globalMetadata]
  -[PIPortraitVideoRenderNode resolvedNodeWithCachedInputs:settings:pipelineState:error:]
  -[PIPortraitVideoRenderNode nodeByReplayingAgainstCache:pipelineState:error:]
  -[PIPortraitVideoRenderNode shouldCacheNodeForPipelineState:]
  -[PIPortraitVideoRenderNode requiresVideoComposition]
  -[PIPortraitVideoRenderNode _evaluateImage:]
  -[PIPortraitVideoRenderNode uniqueInputNode]
  -[PIPortraitVideoRenderNode renderTime]
  -[PIPortraitVideoRenderNode _prewarmPortraitRendererWithPipelineState:error:]
  -[PIPortraitVideoRenderNode _targetScaleForScale:]
  -[PIPortraitVideoRenderNode _portraitQualityForRenderScale:]
  -[PIPortraitVideoRenderNode sourceTransferFunction]
  -[PIPortraitVideoRenderNode disparityKeyframes]
  -[PIPortraitVideoRenderNode apertureKeyframes]
  -[PIPortraitVideoRenderNode initWithInput:disparityInput:disparityKeyframes:apertureKeyframes:debugMode:]


PIFaceObservationCache : NSObject
  // class methods
  +[PIFaceObservationCache faceRequestWithRequest:]

  // instance methods
  -[PIFaceObservationCache .cxx_destruct]
  -[PIFaceObservationCache init]
  -[PIFaceObservationCache submit:response:]
  -[PIFaceObservationCache submitSynchronous:error:]


PISourceSelectAdjustmentController : PIAdjustmentController
 @property  long long sourceSelection

  // class methods
  +[PISourceSelectAdjustmentController sourceSelectionKey]
  +[PISourceSelectAdjustmentController sourceSelectionForString:]
  +[PISourceSelectAdjustmentController stringForSourceSelection:]

  // instance methods
  -[PISourceSelectAdjustmentController sourceSelection]
  -[PISourceSelectAdjustmentController setSourceSelection:]


PIScalarKeyframe : NSObject <PIDictionaryRepresentable>
 @property  NSDictionary *dictionaryRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PIScalarKeyframe keyframeInArray:closestToTime:]

  // instance methods
  -[PIScalarKeyframe initWithDictionaryRepresentation:]
  -[PIScalarKeyframe dictionaryRepresentation]
  -[PIScalarKeyframe initWithTime:value:]
  -[PIScalarKeyframe nu_updateDigest:]


PIReframeSubject : NSObject <NSCopying, NSSecureCoding>
 @property  long long type
 @property  long long identifier
 @property  double confidence
 @property  long long source
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} expandedBounds
 @property  long long edgeBleed
 @property  BOOL isHuman
 @property  BOOL isAnimal

  // class methods
  +[PIReframeSubject supportsSecureCoding]

  // instance methods
  -[PIReframeSubject initWithCoder:]
  -[PIReframeSubject confidence]
  -[PIReframeSubject identifier]
  -[PIReframeSubject type]
  -[PIReframeSubject copyWithZone:]
  -[PIReframeSubject setBounds:]
  -[PIReframeSubject bounds]
  -[PIReframeSubject source]
  -[PIReframeSubject encodeWithCoder:]
  -[PIReframeSubject initWithType:source:identifier:confidence:]
  -[PIReframeSubject expandedBounds]
  -[PIReframeSubject isHuman]
  -[PIReframeSubject isAnimal]
  -[PIReframeSubject setExpandedBounds:]
  -[PIReframeSubject edgeBleed]
  -[PIReframeSubject setEdgeBleed:]


PIPortraitVideoAdjustmentController : PIAdjustmentController
 @property  NSArray *disparityKeyframes
 @property  NSNumber *aperture
 @property  NSDictionary *cinematographyState
 @property  long long debugMode

  // instance methods
  -[PIPortraitVideoAdjustmentController setAperture:]
  -[PIPortraitVideoAdjustmentController debugMode]
  -[PIPortraitVideoAdjustmentController aperture]
  -[PIPortraitVideoAdjustmentController setDebugMode:]
  -[PIPortraitVideoAdjustmentController trimToTimeRange:usingScript:]
  -[PIPortraitVideoAdjustmentController cinematographyState]
  -[PIPortraitVideoAdjustmentController setDisparityKeyframes:]
  -[PIPortraitVideoAdjustmentController setCinematographyState:]
  -[PIPortraitVideoAdjustmentController visualInputKeys]
  -[PIPortraitVideoAdjustmentController disparityKeyframes]
  -[PIPortraitVideoAdjustmentController _keyframesForKey:class:]
  -[PIPortraitVideoAdjustmentController _setKeyframes:forKey:]


PIReframeKeyframe : NSObject
 @property  {?=qiIq} time
 @property  {?=[3]} homography
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[PIReframeKeyframe keyframesFromDictionaryRepresentations:]

  // instance methods
  -[PIReframeKeyframe initWithDictionaryRepresentation:]
  -[PIReframeKeyframe dictionaryRepresentation]
  -[PIReframeKeyframe time]
  -[PIReframeKeyframe homography]
  -[PIReframeKeyframe initWithTime:homography:]


PIReframeKeyframeSequence : NSObject
 @property  unsigned long count

  // instance methods
  -[PIReframeKeyframeSequence .cxx_destruct]
  -[PIReframeKeyframeSequence count]
  -[PIReframeKeyframeSequence interpolation]
  -[PIReframeKeyframeSequence sparseSequence]
  -[PIReframeKeyframeSequence initWithKeyframeArray:]
  -[PIReframeKeyframeSequence homographyAtTime:]


PILongExposureFusionAutoCalculator : NUAutoCalculator
  // instance methods
  -[PILongExposureFusionAutoCalculator submit:]
  -[PILongExposureFusionAutoCalculator _computeCleanAperture:]


PIEffectAdjustmentController : PIAdjustmentController
 @property  NSString *kind
 @property  long long version
 @property  double intensity

  // class methods
  +[PIEffectAdjustmentController intensityKey]
  +[PIEffectAdjustmentController versionKey]
  +[PIEffectAdjustmentController kindKey]

  // instance methods
  -[PIEffectAdjustmentController setKind:]
  -[PIEffectAdjustmentController setVersion:]
  -[PIEffectAdjustmentController setIntensity:]
  -[PIEffectAdjustmentController kind]
  -[PIEffectAdjustmentController version]
  -[PIEffectAdjustmentController intensity]
  -[PIEffectAdjustmentController isSettingEqual:forKey:]


PIAutoLoopAutoCalculator : NUAutoCalculator
 @property  long long flavor

  // instance methods
  -[PIAutoLoopAutoCalculator submit:]
  -[PIAutoLoopAutoCalculator initWithComposition:]
  -[PIAutoLoopAutoCalculator flavor]
  -[PIAutoLoopAutoCalculator setFlavor:]


PIMakerNoteUtilities : NSObject
  // class methods
  +[PIMakerNoteUtilities removeAssetIdentifierFromMetadataArray:]
  +[PIMakerNoteUtilities addAssetIdentifier:toMetadataDictionary:]
  +[PIMakerNoteUtilities addAssetIdentifier:toMetadataArray:]


PITempTintFilter : CIFilter
 @property  CIImage *inputImage
 @property  double temperature
 @property  double tint

  // instance methods
  -[PITempTintFilter temperature]
  -[PITempTintFilter setTint:]
  -[PITempTintFilter .cxx_destruct]
  -[PITempTintFilter setInputImage:]
  -[PITempTintFilter inputImage]
  -[PITempTintFilter outputImage]
  -[PITempTintFilter tint]
  -[PITempTintFilter setTemperature:]
  -[PITempTintFilter setInputVectorsForFilter:]


PITimeVaryingPipelineStateSetting : NSObject
 @property  {?=qiIq} time
 @property  {?=qiIq} rawTime
 @property  long long sampleMode

  // instance methods
  -[PITimeVaryingPipelineStateSetting setTime:]
  -[PITimeVaryingPipelineStateSetting time]
  -[PITimeVaryingPipelineStateSetting rawTime]
  -[PITimeVaryingPipelineStateSetting setSampleMode:]
  -[PITimeVaryingPipelineStateSetting sampleMode]
  -[PITimeVaryingPipelineStateSetting setRawTime:]
  -[PITimeVaryingPipelineStateSetting nu_evaluateWithPipelineState:error:]


_PIAutoLoopAnalysisResult : _NURenderResult <PIAutoLoopAnalysisResult>
 @property  NSDictionary *recipe
 @property  <NURenderStatistics> *statistics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_PIAutoLoopAnalysisResult setRecipe:]
  -[_PIAutoLoopAnalysisResult recipe]
  -[_PIAutoLoopAnalysisResult .cxx_destruct]


PIAutoLoopAnalysisJob : NURenderJob
 @property  AVAsset *videoSource
 @property  NSDictionary *recipe

  // instance methods
  -[PIAutoLoopAnalysisJob setRecipe:]
  -[PIAutoLoopAnalysisJob recipe]
  -[PIAutoLoopAnalysisJob cacheKey]
  -[PIAutoLoopAnalysisJob .cxx_destruct]
  -[PIAutoLoopAnalysisJob render:]
  -[PIAutoLoopAnalysisJob result]
  -[PIAutoLoopAnalysisJob prepare:]
  -[PIAutoLoopAnalysisJob wantsOutputGeometry]
  -[PIAutoLoopAnalysisJob wantsCompleteStage]
  -[PIAutoLoopAnalysisJob scalePolicy]
  -[PIAutoLoopAnalysisJob wantsOutputVideo]
  -[PIAutoLoopAnalysisJob videoSource]
  -[PIAutoLoopAnalysisJob setVideoSource:]
  -[PIAutoLoopAnalysisJob analysisRequest]


_PIVideoStabilizeFlowControl : NSObject <ICFlowControl>
 @property  @? progressHandler
 @property  double rangeMin
 @property  double rangeMax
 @property  @? shouldCancelHandler

  // instance methods
  -[_PIVideoStabilizeFlowControl .cxx_destruct]
  -[_PIVideoStabilizeFlowControl setProgressHandler:]
  -[_PIVideoStabilizeFlowControl progressHandler]
  -[_PIVideoStabilizeFlowControl rangeMin]
  -[_PIVideoStabilizeFlowControl rangeMax]
  -[_PIVideoStabilizeFlowControl ICShouldBeCanceled]
  -[_PIVideoStabilizeFlowControl ICReportProgress:]
  -[_PIVideoStabilizeFlowControl shouldCancelHandler]
  -[_PIVideoStabilizeFlowControl setRangeMin:]
  -[_PIVideoStabilizeFlowControl setRangeMax:]
  -[_PIVideoStabilizeFlowControl setShouldCancelHandler:]


_PIVideoStabilizeResult : _NURenderResult <PIVideoStabilizeResult>
 @property  NSArray *keyframes
 @property  {?={?=qq}{?=qq}} stabCropRect
 @property  unsigned long analysisType
 @property  NSDictionary *rawHomographies
 @property  <NURenderStatistics> *statistics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_PIVideoStabilizeResult .cxx_destruct]
  -[_PIVideoStabilizeResult analysisType]
  -[_PIVideoStabilizeResult keyframes]
  -[_PIVideoStabilizeResult stabCropRect]
  -[_PIVideoStabilizeResult rawHomographies]
  -[_PIVideoStabilizeResult initWithKeyframes:stabCropRect:analysisType:rawHomographies:]


PIVideoStabilizeRenderJob : NURenderJob
 @property  NSArray *keyframes
 @property  {?={?=qq}{?=qq}} stabCropRect
 @property  unsigned long allowedAnalysisTypes
 @property  unsigned long analysisType
 @property  double allowedCropFraction
 @property  @? progressHandler
 @property  NSDictionary *rawHomographies

  // instance methods
  -[PIVideoStabilizeRenderJob allowedCropFraction]
  -[PIVideoStabilizeRenderJob setAllowedCropFraction:]
  -[PIVideoStabilizeRenderJob .cxx_destruct]
  -[PIVideoStabilizeRenderJob setProgressHandler:]
  -[PIVideoStabilizeRenderJob result]
  -[PIVideoStabilizeRenderJob progressHandler]
  -[PIVideoStabilizeRenderJob analysisType]
  -[PIVideoStabilizeRenderJob prepare:]
  -[PIVideoStabilizeRenderJob keyframes]
  -[PIVideoStabilizeRenderJob allowedAnalysisTypes]
  -[PIVideoStabilizeRenderJob stabCropRect]
  -[PIVideoStabilizeRenderJob setAllowedAnalysisTypes:]
  -[PIVideoStabilizeRenderJob rawHomographies]
  -[PIVideoStabilizeRenderJob wantsRenderStage]
  -[PIVideoStabilizeRenderJob wantsCompleteStage]
  -[PIVideoStabilizeRenderJob scalePolicy]
  -[PIVideoStabilizeRenderJob wantsOutputVideo]


PIVideoStabilizeRequest : NURenderRequest
 @property  double allowedCropFraction
 @property  @? progressHandler
 @property  unsigned long allowedAnalysisTypes

  // class methods
  +[PIVideoStabilizeRequest canPerformGyroBasedStabilizationForAsset:]

  // instance methods
  -[PIVideoStabilizeRequest allowedCropFraction]
  -[PIVideoStabilizeRequest submit:]
  -[PIVideoStabilizeRequest initWithComposition:]
  -[PIVideoStabilizeRequest setAllowedCropFraction:]
  -[PIVideoStabilizeRequest .cxx_destruct]
  -[PIVideoStabilizeRequest setProgressHandler:]
  -[PIVideoStabilizeRequest progressHandler]
  -[PIVideoStabilizeRequest copyWithZone:]
  -[PIVideoStabilizeRequest allowedAnalysisTypes]
  -[PIVideoStabilizeRequest setAllowedAnalysisTypes:]
  -[PIVideoStabilizeRequest newRenderJob]
  -[PIVideoStabilizeRequest mediaComponentType]


PIFaceBalanceAutoCalculator : NUAutoCalculator <NUTimeBased>
 @property  long long rawState
 @property  {?=qiIq} time
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PIFaceBalanceAutoCalculator calculateWithRequest:completion:]
  +[PIFaceBalanceAutoCalculator calculateRAWWithRequest:completion:]
  +[PIFaceBalanceAutoCalculator faceBalanceResultFromFaceObservations:request:error:]
  +[PIFaceBalanceAutoCalculator faceRectFromNormalizedFaceRet:forImageExtent:scaleX:scaleY:]
  +[PIFaceBalanceAutoCalculator faceBalanceFromFaceImage:forFaceRect:]

  // instance methods
  -[PIFaceBalanceAutoCalculator submit:]
  -[PIFaceBalanceAutoCalculator rawState]
  -[PIFaceBalanceAutoCalculator initWithRequest:isRAW:]


PIWhiteBalanceAutoCalculator : NUAutoCalculator <NUTimeBased>
 @property  {?=qiIq} time
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PIWhiteBalanceAutoCalculator submit:]
  -[PIWhiteBalanceAutoCalculator _chooseNeutralGrayForNonSushi:]
  -[PIWhiteBalanceAutoCalculator _chooseTempTintForSushi:RAWProperties:brightness:]
  -[PIWhiteBalanceAutoCalculator _correctedRGBResultFromResult:]
  -[PIWhiteBalanceAutoCalculator _useTempTint:]


_PIWhiteColorCalculator : NSObject
  // instance methods
  -[_PIWhiteColorCalculator .cxx_destruct]
  -[_PIWhiteColorCalculator initWithComposition:useSushi:]
  -[_PIWhiteColorCalculator calculateColorWithProperties:completion:]
  -[_PIWhiteColorCalculator _brightnessMultiplierFromImageProperties:]
  -[_PIWhiteColorCalculator _computeGreenPercentage:]
  -[_PIWhiteColorCalculator _submitGERenderRequest:]
  -[_PIWhiteColorCalculator _submitGWRenderRequest:]
  -[_PIWhiteColorCalculator _whitePointColorFromGrayEdgesImage:grayWorldImage:greenChannelPercentage:RAWCameraSpaceProperties:]
  -[_PIWhiteColorCalculator _computeWhitePointColorWithGrayEdgesBuffer:grayWorldBuffer:greenChannelPercentage:RAWCameraSpaceProperties:]
  -[_PIWhiteColorCalculator readBufferFromImage:withRGBAfBufferBlock:]
  -[_PIWhiteColorCalculator _configureRequest:]


PIDefinitionFilter : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputBlurImage
 @property  NSNumber *inputIntensity

  // class methods
  +[PIDefinitionFilter definitionKernel]

  // instance methods
  -[PIDefinitionFilter .cxx_destruct]
  -[PIDefinitionFilter setInputImage:]
  -[PIDefinitionFilter inputImage]
  -[PIDefinitionFilter inputIntensity]
  -[PIDefinitionFilter setInputIntensity:]
  -[PIDefinitionFilter inputBlurImage]
  -[PIDefinitionFilter setInputBlurImage:]
  -[PIDefinitionFilter outputImage]


PISmartBlackAndWhiteAdjustmentController : PIAdjustmentController
 @property  double strength
 @property  double neutral
 @property  double tone
 @property  double grain
 @property  double hue

  // class methods
  +[PISmartBlackAndWhiteAdjustmentController hueKey]
  +[PISmartBlackAndWhiteAdjustmentController toneKey]
  +[PISmartBlackAndWhiteAdjustmentController grainKey]
  +[PISmartBlackAndWhiteAdjustmentController neutralKey]
  +[PISmartBlackAndWhiteAdjustmentController attributeStrengthKey]
  +[PISmartBlackAndWhiteAdjustmentController strengthKey]
  +[PISmartBlackAndWhiteAdjustmentController attributeNeutralGammaKey]
  +[PISmartBlackAndWhiteAdjustmentController attributeToneKey]
  +[PISmartBlackAndWhiteAdjustmentController attributeHueKey]
  +[PISmartBlackAndWhiteAdjustmentController attributeGrainKey]
  +[PISmartBlackAndWhiteAdjustmentController inputStrengthKey]
  +[PISmartBlackAndWhiteAdjustmentController inputNeutralGammaKey]
  +[PISmartBlackAndWhiteAdjustmentController inputToneKey]
  +[PISmartBlackAndWhiteAdjustmentController inputHueKey]
  +[PISmartBlackAndWhiteAdjustmentController inputGrainKey]
  +[PISmartBlackAndWhiteAdjustmentController inputSeedKey]

  // instance methods
  -[PISmartBlackAndWhiteAdjustmentController tone]
  -[PISmartBlackAndWhiteAdjustmentController neutral]
  -[PISmartBlackAndWhiteAdjustmentController grain]
  -[PISmartBlackAndWhiteAdjustmentController strength]
  -[PISmartBlackAndWhiteAdjustmentController setStrength:]
  -[PISmartBlackAndWhiteAdjustmentController setNeutral:]
  -[PISmartBlackAndWhiteAdjustmentController hue]
  -[PISmartBlackAndWhiteAdjustmentController setHue:]
  -[PISmartBlackAndWhiteAdjustmentController setTone:]
  -[PISmartBlackAndWhiteAdjustmentController setGrain:]


PICompositionExporterDefaultMetadataConverter : NSObject <PICompositionExporterMetadataConverter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PICompositionExporterDefaultMetadataConverter videoMetadataForVariation:error:]
  -[PICompositionExporterDefaultMetadataConverter setImageVariation:properties:error:]
  -[PICompositionExporterDefaultMetadataConverter photoProcessingFlagsFromProperties:error:]
  -[PICompositionExporterDefaultMetadataConverter setPhotoProcessingFlags:properties:error:]
  -[PICompositionExporterDefaultMetadataConverter photoFeatureFlags:error:]
  -[PICompositionExporterDefaultMetadataConverter setPhotoFeatureFlags:properties:error:]


PICompositionExportImagePrepareResult : NSObject
 @property  NUImageExportRequest *request
 @property  {?=qq} inputSize

  // instance methods
  -[PICompositionExportImagePrepareResult setRequest:]
  -[PICompositionExportImagePrepareResult .cxx_destruct]
  -[PICompositionExportImagePrepareResult inputSize]
  -[PICompositionExportImagePrepareResult request]
  -[PICompositionExportImagePrepareResult setInputSize:]


PICompositionExportAuxiliaryResult : PICompositionExportResult
 @property  NSDictionary *auxiliaryImages
 @property  BOOL canPropagateOriginalAuxiliaryData
 @property  NSDictionary *properties
 @property  {?=qq} inputSize
 @property  NSData *companionImageData
 @property  NSURL *companionVideoURL

  // instance methods
  -[PICompositionExportAuxiliaryResult .cxx_destruct]
  -[PICompositionExportAuxiliaryResult properties]
  -[PICompositionExportAuxiliaryResult setProperties:]
  -[PICompositionExportAuxiliaryResult companionImageData]
  -[PICompositionExportAuxiliaryResult companionVideoURL]
  -[PICompositionExportAuxiliaryResult canPropagateOriginalAuxiliaryData]
  -[PICompositionExportAuxiliaryResult setCanPropagateOriginalAuxiliaryData:]
  -[PICompositionExportAuxiliaryResult setCompanionImageData:]
  -[PICompositionExportAuxiliaryResult setCompanionVideoURL:]
  -[PICompositionExportAuxiliaryResult auxiliaryImages]
  -[PICompositionExportAuxiliaryResult setAuxiliaryImages:]


PICompositionExportResult : NSObject
 @property  NUImageGeometry *geometry
 @property  {?=qq} inputSize

  // instance methods
  -[PICompositionExportResult setGeometry:]
  -[PICompositionExportResult geometry]
  -[PICompositionExportResult .cxx_destruct]
  -[PICompositionExportResult inputSize]
  -[PICompositionExportResult setInputSize:]


PICompositionExportDataResult : PICompositionExportResult
 @property  NSData *data

  // instance methods
  -[PICompositionExportDataResult .cxx_destruct]
  -[PICompositionExportDataResult data]
  -[PICompositionExportDataResult setData:]


PICompositionExporterOptions : NSObject
 @property  NUPriority *priority
 @property  NUColorSpace *colorSpace
 @property  NSString *pairingIdentifier
 @property  <NUScalePolicy> *scalePolicy

  // instance methods
  -[PICompositionExporterOptions setColorSpace:]
  -[PICompositionExporterOptions colorSpace]
  -[PICompositionExporterOptions .cxx_destruct]
  -[PICompositionExporterOptions setPairingIdentifier:]
  -[PICompositionExporterOptions setPriority:]
  -[PICompositionExporterOptions init]
  -[PICompositionExporterOptions pairingIdentifier]
  -[PICompositionExporterOptions priority]
  -[PICompositionExporterOptions setScalePolicy:]
  -[PICompositionExporterOptions scalePolicy]


PICompositionExporterVideoOptions : PICompositionExporterOptions
 @property  @? metadataProcessor
 @property  BOOL increaseBitRateIfNecessary
 @property  NSString *videoCodecType
 @property  BOOL preserveSourceColorSpace
 @property  BOOL bypassOutputSettingsIfNoComposition
 @property  BOOL applyVideoOrientationAsMetadata
 @property  BOOL requireHardwareEncoder
 @property  BOOL includeCinematicVideoTracks

  // instance methods
  -[PICompositionExporterVideoOptions applyVideoOrientationAsMetadata]
  -[PICompositionExporterVideoOptions .cxx_destruct]
  -[PICompositionExporterVideoOptions videoCodecType]
  -[PICompositionExporterVideoOptions init]
  -[PICompositionExporterVideoOptions setApplyVideoOrientationAsMetadata:]
  -[PICompositionExporterVideoOptions setBypassOutputSettingsIfNoComposition:]
  -[PICompositionExporterVideoOptions setIncludeCinematicVideoTracks:]
  -[PICompositionExporterVideoOptions setVideoCodecType:]
  -[PICompositionExporterVideoOptions includeCinematicVideoTracks]
  -[PICompositionExporterVideoOptions bypassOutputSettingsIfNoComposition]
  -[PICompositionExporterVideoOptions requireHardwareEncoder]
  -[PICompositionExporterVideoOptions setRequireHardwareEncoder:]
  -[PICompositionExporterVideoOptions metadataProcessor]
  -[PICompositionExporterVideoOptions setMetadataProcessor:]
  -[PICompositionExporterVideoOptions increaseBitRateIfNecessary]
  -[PICompositionExporterVideoOptions setIncreaseBitRateIfNecessary:]
  -[PICompositionExporterVideoOptions preserveSourceColorSpace]
  -[PICompositionExporterVideoOptions setPreserveSourceColorSpace:]


PICompositionExporterImageOptions : PICompositionExporterOptions
 @property  NUImageExportFormat *imageExportFormat
 @property  double JPEGCompressionQuality
 @property  @? metadataProcessor
 @property  BOOL optimizeForSharing
 @property  BOOL applyImageOrientationAsMetadata

  // instance methods
  -[PICompositionExporterImageOptions .cxx_destruct]
  -[PICompositionExporterImageOptions init]
  -[PICompositionExporterImageOptions setJPEGCompressionQuality:]
  -[PICompositionExporterImageOptions metadataProcessor]
  -[PICompositionExporterImageOptions setMetadataProcessor:]
  -[PICompositionExporterImageOptions JPEGCompressionQuality]
  -[PICompositionExporterImageOptions imageExportFormatForURL:]
  -[PICompositionExporterImageOptions imageExportFormat]
  -[PICompositionExporterImageOptions setImageExportFormat:]
  -[PICompositionExporterImageOptions optimizeForSharing]
  -[PICompositionExporterImageOptions setOptimizeForSharing:]
  -[PICompositionExporterImageOptions applyImageOrientationAsMetadata]
  -[PICompositionExporterImageOptions setApplyImageOrientationAsMetadata:]


PICompositionExporterAuxiliaryOptions : PICompositionExporterOptions
 @property  NSURL *primaryURL
 @property  NSURL *videoComplementURL
 @property  NSURL *videoPosterFrameURL
 @property  NSString *videoCodecType
 @property  NUImageExportFormat *imageExportFormat
 @property  BOOL renderCompanionResources
 @property  NUAdjustment *reframeCropAdjustment
 @property  NUAdjustment *reframeVideoAdjustment
 @property  BOOL applyImageOrientationAsMetadata
 @property  BOOL applyVideoOrientationAsMetadata

  // instance methods
  -[PICompositionExporterAuxiliaryOptions applyVideoOrientationAsMetadata]
  -[PICompositionExporterAuxiliaryOptions .cxx_destruct]
  -[PICompositionExporterAuxiliaryOptions setVideoComplementURL:]
  -[PICompositionExporterAuxiliaryOptions videoCodecType]
  -[PICompositionExporterAuxiliaryOptions setApplyVideoOrientationAsMetadata:]
  -[PICompositionExporterAuxiliaryOptions videoComplementURL]
  -[PICompositionExporterAuxiliaryOptions setPrimaryURL:]
  -[PICompositionExporterAuxiliaryOptions setVideoPosterFrameURL:]
  -[PICompositionExporterAuxiliaryOptions setRenderCompanionResources:]
  -[PICompositionExporterAuxiliaryOptions setReframeCropAdjustment:]
  -[PICompositionExporterAuxiliaryOptions setReframeVideoAdjustment:]
  -[PICompositionExporterAuxiliaryOptions renderCompanionResources]
  -[PICompositionExporterAuxiliaryOptions setVideoCodecType:]
  -[PICompositionExporterAuxiliaryOptions primaryURL]
  -[PICompositionExporterAuxiliaryOptions imageExportFormat]
  -[PICompositionExporterAuxiliaryOptions setImageExportFormat:]
  -[PICompositionExporterAuxiliaryOptions applyImageOrientationAsMetadata]
  -[PICompositionExporterAuxiliaryOptions setApplyImageOrientationAsMetadata:]
  -[PICompositionExporterAuxiliaryOptions videoPosterFrameURL]
  -[PICompositionExporterAuxiliaryOptions reframeCropAdjustment]
  -[PICompositionExporterAuxiliaryOptions reframeVideoAdjustment]


PICompositionExporter : NSObject
  // class methods
  +[PICompositionExporter setMetadataConverter:]
  +[PICompositionExporter resetImageProperties:preserveRegions:]
  +[PICompositionExporter metadataConverter]

  // instance methods
  -[PICompositionExporter init]
  -[PICompositionExporter exportVideoToURL:composition:options:completion:]
  -[PICompositionExporter exportImageToDataWithComposition:options:completion:]
  -[PICompositionExporter exportImageToURL:composition:options:completion:]
  -[PICompositionExporter exportComposition:options:completionQueue:completion:]
  -[PICompositionExporter prepareImageExportRequest:options:completion:]
  -[PICompositionExporter addVideoProperties:composition:options:error:]
  -[PICompositionExporter _exportVideoToURL:composition:options:properties:progress:completion:]
  -[PICompositionExporter addImageProperties:composition:options:error:]
  -[PICompositionExporter prepareAuxiliaryImagesFetchProperties:options:completion:]
  -[PICompositionExporter variationForFlavor:]
  -[PICompositionExporter shouldTryVideoRotationFastPath:options:]
  -[PICompositionExporter _exportVideoToURLFull:composition:options:properties:progress:completion:]
  -[PICompositionExporter exportComposition:toPrimaryURL:videoComplementURL:videoPosterFrameURL:priority:completionQueue:completion:]


GUBilateralConvolution : CIFilter
 @property  CIImage *inputImage
 @property  NSArray *inputPoints
 @property  NSArray *inputWeights
 @property  NSNumber *inputEdgeDetail
 @property  NSNumber *inputVersion

  // class methods
  +[GUBilateralConvolution bilateralKernels]
  +[GUBilateralConvolution RGBToLabKernels]
  +[GUBilateralConvolution bilateralAdd1Kernel]
  +[GUBilateralConvolution bilateralAdd2Kernel]
  +[GUBilateralConvolution bilateralAdd3Kernel]
  +[GUBilateralConvolution bilateralAdd4Kernel]
  +[GUBilateralConvolution bilateralAdd5Kernel]
  +[GUBilateralConvolution bilateralAdd6Kernel]
  +[GUBilateralConvolution bilateralAdd7Kernel]
  +[GUBilateralConvolution bilateralAdd8Kernel]
  +[GUBilateralConvolution bilateralAdd9Kernel]
  +[GUBilateralConvolution RGBToLabKernel]
  +[GUBilateralConvolution bilateralFinalizeKernel]
  +[GUBilateralConvolution LabToRGBKernel]

  // instance methods
  -[GUBilateralConvolution .cxx_destruct]
  -[GUBilateralConvolution setInputImage:]
  -[GUBilateralConvolution inputImage]
  -[GUBilateralConvolution inputVersion]
  -[GUBilateralConvolution inputWeights]
  -[GUBilateralConvolution setInputWeights:]
  -[GUBilateralConvolution inputPoints]
  -[GUBilateralConvolution samplesPerPass]
  -[GUBilateralConvolution outputImage]
  -[GUBilateralConvolution setInputPoints:]
  -[GUBilateralConvolution boundsForPointArray:]
  -[GUBilateralConvolution enlargedBounds:withPoints:]
  -[GUBilateralConvolution bilateralAddROI:destRect:userInfo:]
  -[GUBilateralConvolution doBilateralPass:points:weights:sums:slope:]
  -[GUBilateralConvolution inputEdgeDetail]
  -[GUBilateralConvolution setInputEdgeDetail:]
  -[GUBilateralConvolution setInputVersion:]


GUBWBilateralConvolution : CIFilter
 @property  CIImage *inputImage
 @property  NSArray *inputPoints
 @property  NSArray *inputWeights
 @property  NSNumber *inputEdgeDetail
 @property  NSNumber *inputBorder

  // class methods
  +[GUBWBilateralConvolution BWBilateralKernels]
  +[GUBWBilateralConvolution bilateralLoop2Kernel]
  +[GUBWBilateralConvolution bilateralLoop5Kernel]
  +[GUBWBilateralConvolution bilateralLoop11Kernel]

  // instance methods
  -[GUBWBilateralConvolution .cxx_destruct]
  -[GUBWBilateralConvolution setInputImage:]
  -[GUBWBilateralConvolution inputImage]
  -[GUBWBilateralConvolution inputWeights]
  -[GUBWBilateralConvolution setInputWeights:]
  -[GUBWBilateralConvolution inputPoints]
  -[GUBWBilateralConvolution outputImage]
  -[GUBWBilateralConvolution setInputPoints:]
  -[GUBWBilateralConvolution inputEdgeDetail]
  -[GUBWBilateralConvolution setInputEdgeDetail:]
  -[GUBWBilateralConvolution bilateralROI:destRect:userInfo:]
  -[GUBWBilateralConvolution doBilateralLoop:points:weights:slope:]
  -[GUBWBilateralConvolution inputBorder]
  -[GUBWBilateralConvolution setInputBorder:]


PIBilateralFilter : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputRadius
 @property  NSNumber *inputEdgeDetail

  // class methods
  +[PIBilateralFilter customAttributes]

  // instance methods
  -[PIBilateralFilter .cxx_destruct]
  -[PIBilateralFilter setInputImage:]
  -[PIBilateralFilter inputImage]
  -[PIBilateralFilter inputRadius]
  -[PIBilateralFilter setInputRadius:]
  -[PIBilateralFilter outputImage]
  -[PIBilateralFilter inputEdgeDetail]
  -[PIBilateralFilter setInputEdgeDetail:]


PIPhotoEditAdjustmentsVersion : NSObject
 @property  NSString *string
 @property  unsigned long majorVersion
 @property  unsigned long minorVersion
 @property  unsigned long subMinorVersion
 @property  NSString *platform

  // class methods
  +[PIPhotoEditAdjustmentsVersion versionFromString:]
  +[PIPhotoEditAdjustmentsVersion versionWithMajor:minor:subMinor:platform:]

  // instance methods
  -[PIPhotoEditAdjustmentsVersion platform]
  -[PIPhotoEditAdjustmentsVersion .cxx_destruct]
  -[PIPhotoEditAdjustmentsVersion init]
  -[PIPhotoEditAdjustmentsVersion isEqual:]
  -[PIPhotoEditAdjustmentsVersion string]
  -[PIPhotoEditAdjustmentsVersion compare:]
  -[PIPhotoEditAdjustmentsVersion majorVersion]
  -[PIPhotoEditAdjustmentsVersion minorVersion]
  -[PIPhotoEditAdjustmentsVersion initWithMajor:minor:subMinor:]
  -[PIPhotoEditAdjustmentsVersion initWithMajor:minor:subMinor:platform:]
  -[PIPhotoEditAdjustmentsVersion asOrderedInteger]
  -[PIPhotoEditAdjustmentsVersion isEqualToAdjustmentVersion:]
  -[PIPhotoEditAdjustmentsVersion subMinorVersion]


PINoiseReductionAdjustmentController : PIAdjustmentController
  // class methods
  +[PINoiseReductionAdjustmentController amountKey]


PISmartColorFilterHDR : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputVibrancy
 @property  NSNumber *inputContrast
 @property  NSNumber *inputCast

  // class methods
  +[PISmartColorFilterHDR customAttributes]

  // instance methods
  -[PISmartColorFilterHDR .cxx_destruct]
  -[PISmartColorFilterHDR setInputImage:]
  -[PISmartColorFilterHDR inputImage]
  -[PISmartColorFilterHDR inputContrast]
  -[PISmartColorFilterHDR setInputContrast:]
  -[PISmartColorFilterHDR inputCast]
  -[PISmartColorFilterHDR _kernelV_gt1]
  -[PISmartColorFilterHDR _kernelV_lt1]
  -[PISmartColorFilterHDR _kernelCPos]
  -[PISmartColorFilterHDR _kernelCNeg]
  -[PISmartColorFilterHDR _kernelCast]
  -[PISmartColorFilterHDR inputVibrancy]
  -[PISmartColorFilterHDR setInputVibrancy:]
  -[PISmartColorFilterHDR setInputCast:]
  -[PISmartColorFilterHDR outputImage]
  -[PISmartColorFilterHDR _isIdentity]


PIAutoLoopCacheNode : NUVideoCacheNode
  // class methods
  +[PIAutoLoopCacheNode nodeWithInput:settings:pipelineState:error:]

  // instance methods
  -[PIAutoLoopCacheNode persistentURL]
  -[PIAutoLoopCacheNode resolvedNodeWithCachedInputs:settings:pipelineState:error:]
  -[PIAutoLoopCacheNode subsampleFactorForScale:]
  -[PIAutoLoopCacheNode newRenderRequestWithOriginalRequest:error:]
  -[PIAutoLoopCacheNode descriptionSubClassHook]
  -[PIAutoLoopCacheNode outputSettings:]
  -[PIAutoLoopCacheNode persistentLongExposureURL]
  -[PIAutoLoopCacheNode persistentMaskURL]


PILongExposureCacheNode : NUCacheNode
  // instance methods
  -[PILongExposureCacheNode persistentURL]
  -[PILongExposureCacheNode _evaluateImageGeometry:]
  -[PILongExposureCacheNode nodeByReplayingAgainstCache:pipelineState:error:]
  -[PILongExposureCacheNode tryLoadPersistentURL:error:]
  -[PILongExposureCacheNode resolvedSourceNode:]
  -[PILongExposureCacheNode evaluateRenderDependenciesWithRequest:error:]
  -[PILongExposureCacheNode initWithAutoLoopCacheNode:urlKey:]
  -[PILongExposureCacheNode autoLoopCacheNode]


PIVideoCrossfadeLoopAdjustmentController : PIAdjustmentController
 @property  {?=qiIq} crossfadeDuration
 @property  {?=qiIq} startTime
 @property  {?={?=qiIq}{?=qiIq}} loopTimeRange

  // class methods
  +[PIVideoCrossfadeLoopAdjustmentController crossfadeDurationValueKey]
  +[PIVideoCrossfadeLoopAdjustmentController crossfadeDurationTimescaleKey]
  +[PIVideoCrossfadeLoopAdjustmentController startTimeValueKey]
  +[PIVideoCrossfadeLoopAdjustmentController startTimeTimescaleKey]
  +[PIVideoCrossfadeLoopAdjustmentController loopTimeRangeStartValueKey]
  +[PIVideoCrossfadeLoopAdjustmentController loopTimeRangeStartTimescaleKey]
  +[PIVideoCrossfadeLoopAdjustmentController loopTimeRangeDurationValueKey]
  +[PIVideoCrossfadeLoopAdjustmentController loopTimeRangeDurationTimescaleKey]

  // instance methods
  -[PIVideoCrossfadeLoopAdjustmentController setStartTime:]
  -[PIVideoCrossfadeLoopAdjustmentController setLoopTimeRange:]
  -[PIVideoCrossfadeLoopAdjustmentController startTime]
  -[PIVideoCrossfadeLoopAdjustmentController loopTimeRange]
  -[PIVideoCrossfadeLoopAdjustmentController setCrossfadeDuration:]
  -[PIVideoCrossfadeLoopAdjustmentController crossfadeDuration]


PIPortraitAdjustmentController : PIAdjustmentController
 @property  NSDictionary *portraitInfo
 @property  NSString *kind
 @property  long long version
 @property  double strength
 @property  NSNumber *spillMatteAllowed

  // class methods
  +[PIPortraitAdjustmentController strengthKey]
  +[PIPortraitAdjustmentController kindKey]
  +[PIPortraitAdjustmentController portraitInfoKey]
  +[PIPortraitAdjustmentController spillMatteAllowedKey]

  // instance methods
  -[PIPortraitAdjustmentController setKind:]
  -[PIPortraitAdjustmentController setVersion:]
  -[PIPortraitAdjustmentController portraitInfo]
  -[PIPortraitAdjustmentController strength]
  -[PIPortraitAdjustmentController kind]
  -[PIPortraitAdjustmentController version]
  -[PIPortraitAdjustmentController setStrength:]
  -[PIPortraitAdjustmentController setPortraitInfo:]
  -[PIPortraitAdjustmentController setSpillMatteAllowed:]
  -[PIPortraitAdjustmentController canRenderPortraitEffect]
  -[PIPortraitAdjustmentController spillMatteAllowed]
  -[PIPortraitAdjustmentController initWithAdjustment:]
  -[PIPortraitAdjustmentController isSettingEqual:forKey:]


PICompositionNoOpRemoval : NSObject
  // class methods
  +[PICompositionNoOpRemoval copyOfCompositionRemovingNoOps:]
  +[PICompositionNoOpRemoval _noOpRemovalFunctions]
  +[PICompositionNoOpRemoval noOpRemovalFunctions]
  +[PICompositionNoOpRemoval copyOfAdjustmentRemovingNoOps:identifier:]


PIOrientationAdjustmentController : PIAdjustmentController
 @property  long long orientation

  // class methods
  +[PIOrientationAdjustmentController valueKey]

  // instance methods
  -[PIOrientationAdjustmentController setOrientation:]
  -[PIOrientationAdjustmentController orientation]


PIPortraitVideoMetadataSample : NSObject
 @property  PTTimedRenderingMetadata *timedMetadata
 @property  double focusedDisparity
 @property  double aperture
 @property  NSDictionary *cameraInfo

  // instance methods
  -[PIPortraitVideoMetadataSample .cxx_destruct]
  -[PIPortraitVideoMetadataSample setTimedMetadata:]
  -[PIPortraitVideoMetadataSample timedMetadata]
  -[PIPortraitVideoMetadataSample aperture]
  -[PIPortraitVideoMetadataSample cameraInfo]
  -[PIPortraitVideoMetadataSample initWithMetadataGroup:majorVersion:minorVersion:error:]
  -[PIPortraitVideoMetadataSample applyToRenderRequest:]
  -[PIPortraitVideoMetadataSample valueWithIdentifier:inGroup:ofClass:]
  -[PIPortraitVideoMetadataSample _cameraInfoFromMetadataGroup:]
  -[PIPortraitVideoMetadataSample focusedDisparity]


PIPortraitVideoRenderer : NSObject
 @property  BOOL inUse
 @property  NSDate *lastUseTime
 @property  <MTLDevice> *device
 @property  {?=qq} colorSize
 @property  {?=qq} disparitySize
 @property  int quality
 @property  long long debugMode

  // class methods
  +[PIPortraitVideoRenderer renderOnDevice:colorSize:disparitySize:quality:debugMode:usingBlock:]
  +[PIPortraitVideoRenderer prewarmRendererForDevice:colorSize:disparitySize:quality:debugMode:]

  // instance methods
  -[PIPortraitVideoRenderer .cxx_destruct]
  -[PIPortraitVideoRenderer debugMode]
  -[PIPortraitVideoRenderer quality]
  -[PIPortraitVideoRenderer isInUse]
  -[PIPortraitVideoRenderer setInUse:]
  -[PIPortraitVideoRenderer device]
  -[PIPortraitVideoRenderer colorSize]
  -[PIPortraitVideoRenderer disparitySize]
  -[PIPortraitVideoRenderer initWithDevice:colorSize:disparitySize:quality:debugMode:]
  -[PIPortraitVideoRenderer renderUsingBlock:]
  -[PIPortraitVideoRenderer setLastUseTime:]
  -[PIPortraitVideoRenderer lastUseTime]


PIDefinitionAdjustmentController : PIAdjustmentController
  // class methods
  +[PIDefinitionAdjustmentController intensityKey]


PIHighKeyHDR : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputStrength

  // class methods
  +[PIHighKeyHDR customAttributes]

  // instance methods
  -[PIHighKeyHDR .cxx_destruct]
  -[PIHighKeyHDR setInputImage:]
  -[PIHighKeyHDR inputImage]
  -[PIHighKeyHDR inputStrength]
  -[PIHighKeyHDR setInputStrength:]
  -[PIHighKeyHDR outputImage]
  -[PIHighKeyHDR _highKeyHDR]


PIPerspectiveAutoCalculator : NUAutoCalculator <NUTimeBased, PIFaceObservingAutoCalculator>
 @property  CIImage *debugLineDetectionImage
 @property  NSNumber *maxAutoYaw
 @property  NSNumber *maxAutoPitch
 @property  NSNumber *maxAutoAngle
 @property  double minimumPitchCorrection
 @property  double minimumYawCorrection
 @property  double minimumAngleCorrection
 @property  double minimumConfidence
 @property  double maxFaceSize
 @property  double minimumPitchCorrectionArea
 @property  double minimumYawCorrectionArea
 @property  BOOL disableOnPanos
 @property  BOOL disableOnFrontFacingCameraImages
 @property  BOOL shouldRunBuildingCheck
 @property  double angleSeedDegreesCCW
 @property  BOOL debugFilesEnabled
 @property  NSString *debugFilesPrefix
 @property  NSMutableDictionary *debugDiagnostics
 @property  {?=qiIq} time
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PIFaceObservationCache *faceObservationCache

  // class methods
  +[PIPerspectiveAutoCalculator requestVisionCleanUp]
  +[PIPerspectiveAutoCalculator undoOrientation:forPitch:yaw:angle:]

  // instance methods
  -[PIPerspectiveAutoCalculator submit:]
  -[PIPerspectiveAutoCalculator initWithComposition:]
  -[PIPerspectiveAutoCalculator .cxx_destruct]
  -[PIPerspectiveAutoCalculator setMinimumConfidence:]
  -[PIPerspectiveAutoCalculator minimumConfidence]
  -[PIPerspectiveAutoCalculator setFaceObservationCache:]
  -[PIPerspectiveAutoCalculator setMaxAutoYaw:]
  -[PIPerspectiveAutoCalculator setMaxAutoPitch:]
  -[PIPerspectiveAutoCalculator setMaxAutoAngle:]
  -[PIPerspectiveAutoCalculator setDisableOnPanos:]
  -[PIPerspectiveAutoCalculator setDisableOnFrontFacingCameraImages:]
  -[PIPerspectiveAutoCalculator setMaxFaceSize:]
  -[PIPerspectiveAutoCalculator setShouldRunBuildingCheck:]
  -[PIPerspectiveAutoCalculator setDebugFilesEnabled:]
  -[PIPerspectiveAutoCalculator setDebugFilesPrefix:]
  -[PIPerspectiveAutoCalculator debugDiagnostics]
  -[PIPerspectiveAutoCalculator debugFilesEnabled]
  -[PIPerspectiveAutoCalculator debugFilesPrefix]
  -[PIPerspectiveAutoCalculator debugLineDetectionImage]
  -[PIPerspectiveAutoCalculator faceObservationCache]
  -[PIPerspectiveAutoCalculator wrapAsUnexpectedError:]
  -[PIPerspectiveAutoCalculator getSizeOfAllFaces:]
  -[PIPerspectiveAutoCalculator maxFaceSize]
  -[PIPerspectiveAutoCalculator addMethodDiagnostics:details:]
  -[PIPerspectiveAutoCalculator hasFrontFacingCameraDimentions:]
  -[PIPerspectiveAutoCalculator disableOnPanos]
  -[PIPerspectiveAutoCalculator disableOnFrontFacingCameraImages]
  -[PIPerspectiveAutoCalculator isFrontFacingCameraImage:pixelSize:]
  -[PIPerspectiveAutoCalculator passesImagePropertiesCheck:]
  -[PIPerspectiveAutoCalculator addMethodResultToDiagnostics:error:setYawPitchError:]
  -[PIPerspectiveAutoCalculator passesFaceCheck:]
  -[PIPerspectiveAutoCalculator shouldRunBuildingCheck]
  -[PIPerspectiveAutoCalculator passesBuildingCheck:]
  -[PIPerspectiveAutoCalculator submitVerified:]
  -[PIPerspectiveAutoCalculator writeDebugDiagnosticsToDisk]
  -[PIPerspectiveAutoCalculator primaryImageProperties:]
  -[PIPerspectiveAutoCalculator overcaptureImageProperties:]
  -[PIPerspectiveAutoCalculator angleSeedDegreesCCW]
  -[PIPerspectiveAutoCalculator minimumPitchCorrection]
  -[PIPerspectiveAutoCalculator minimumYawCorrection]
  -[PIPerspectiveAutoCalculator minimumAngleCorrection]
  -[PIPerspectiveAutoCalculator canGenerateNewCropRect:]
  -[PIPerspectiveAutoCalculator maxAutoPitch]
  -[PIPerspectiveAutoCalculator maxAutoYaw]
  -[PIPerspectiveAutoCalculator maxAutoAngle]
  -[PIPerspectiveAutoCalculator minimumPitchCorrectionArea]
  -[PIPerspectiveAutoCalculator minimumYawCorrectionArea]
  -[PIPerspectiveAutoCalculator passesConfidenceCheck:error:]
  -[PIPerspectiveAutoCalculator passesMinimumCorrectionCheck:error:]
  -[PIPerspectiveAutoCalculator setDebugLineDetectionImage:]
  -[PIPerspectiveAutoCalculator perspectiveErrorFromCoreImage:]
  -[PIPerspectiveAutoCalculator setMinimumPitchCorrection:]
  -[PIPerspectiveAutoCalculator setMinimumYawCorrection:]
  -[PIPerspectiveAutoCalculator setMinimumAngleCorrection:]
  -[PIPerspectiveAutoCalculator setMinimumPitchCorrectionArea:]
  -[PIPerspectiveAutoCalculator setMinimumYawCorrectionArea:]
  -[PIPerspectiveAutoCalculator setAngleSeedDegreesCCW:]


PIRawNoiseReductionAdjustmentController : PIAdjustmentController
  // class methods
  +[PIRawNoiseReductionAdjustmentController luminanceKey]


PICropAdjustmentController : PIAdjustmentController
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  long long constraintWidth
 @property  long long constraintHeight
 @property  double angle
 @property  double angleRadians
 @property  double pitch
 @property  double pitchRadians
 @property  double yaw
 @property  double yawRadians
 @property  BOOL autoCropped
 @property  BOOL smart
 @property  BOOL originalCrop

  // class methods
  +[PICropAdjustmentController yawKey]
  +[PICropAdjustmentController angleKey]
  +[PICropAdjustmentController pitchKey]
  +[PICropAdjustmentController xOriginKey]
  +[PICropAdjustmentController yOriginKey]
  +[PICropAdjustmentController widthKey]
  +[PICropAdjustmentController heightKey]
  +[PICropAdjustmentController constraintWidthKey]
  +[PICropAdjustmentController constraintHeightKey]
  +[PICropAdjustmentController smartKey]
  +[PICropAdjustmentController originalCropKey]

  // instance methods
  -[PICropAdjustmentController angle]
  -[PICropAdjustmentController cropRect]
  -[PICropAdjustmentController setYaw:]
  -[PICropAdjustmentController setPitch:]
  -[PICropAdjustmentController setAngle:]
  -[PICropAdjustmentController isSmart]
  -[PICropAdjustmentController yaw]
  -[PICropAdjustmentController pitch]
  -[PICropAdjustmentController setConstraintWidth:]
  -[PICropAdjustmentController setConstraintHeight:]
  -[PICropAdjustmentController setOriginalCrop:]
  -[PICropAdjustmentController setCropRect:]
  -[PICropAdjustmentController setSmart:]
  -[PICropAdjustmentController isOriginalCrop]
  -[PICropAdjustmentController isCropIdentityForImageSize:]
  -[PICropAdjustmentController yawRadians]
  -[PICropAdjustmentController setYawRadians:]
  -[PICropAdjustmentController pitchRadians]
  -[PICropAdjustmentController setPitchRadians:]
  -[PICropAdjustmentController angleRadians]
  -[PICropAdjustmentController setAngleRadians:]
  -[PICropAdjustmentController constraintWidth]
  -[PICropAdjustmentController constraintHeight]
  -[PICropAdjustmentController autoCropped]
  -[PICropAdjustmentController setAutoCropped:]
  -[PICropAdjustmentController initWithAdjustment:]
  -[PICropAdjustmentController isSettingEqual:forKey:]
  -[PICropAdjustmentController visualInputKeys]
  -[PICropAdjustmentController isCropConstrained]
  -[PICropAdjustmentController isGeometryIdentityForImageSize:]


PIAutoLoopFrameNode : NURenderNode
  // instance methods
  -[PIAutoLoopFrameNode videoScale]
  -[PIAutoLoopFrameNode _evaluateImageGeometry:]
  -[PIAutoLoopFrameNode _evaluateImage:]
  -[PIAutoLoopFrameNode _processImage:cleanRect:cropRect:transform:geometry:]


PIRawAdjustmentController : PIAdjustmentController
 @property  NSString *inputDecoderVersion

  // instance methods
  -[PIRawAdjustmentController setInputDecoderVersion:]
  -[PIRawAdjustmentController inputDecoderVersion]


PISmartToneAdjustmentController : PIAdjustmentController
 @property  double inputLight
 @property  double offsetBlack
 @property  double offsetBrightness
 @property  double offsetContrast
 @property  double offsetExposure
 @property  double offsetHighlights
 @property  double offsetLocalLight
 @property  double offsetShadows
 @property  NSDictionary *statistics
 @property  long long sourceSelection
 @property  NSDictionary *overcaptureStatistics

  // class methods
  +[PISmartToneAdjustmentController inputExposureKey]
  +[PISmartToneAdjustmentController attributeBrightnessKey]
  +[PISmartToneAdjustmentController offsetBrightnessKey]
  +[PISmartToneAdjustmentController attributeExposureKey]
  +[PISmartToneAdjustmentController offsetExposureKey]
  +[PISmartToneAdjustmentController attributeHighlightsKey]
  +[PISmartToneAdjustmentController offsetHighlightsKey]
  +[PISmartToneAdjustmentController attributeShadowsKey]
  +[PISmartToneAdjustmentController offsetShadowsKey]
  +[PISmartToneAdjustmentController attributeBlackPointKey]
  +[PISmartToneAdjustmentController offsetBlackKey]
  +[PISmartToneAdjustmentController attributeLocalLightKey]
  +[PISmartToneAdjustmentController offsetLocalLightKey]
  +[PISmartToneAdjustmentController attributeContrastKey]
  +[PISmartToneAdjustmentController offsetContrastKey]
  +[PISmartToneAdjustmentController inputLightKey]
  +[PISmartToneAdjustmentController sourceSelectionKey]
  +[PISmartToneAdjustmentController inputContrastKey]
  +[PISmartToneAdjustmentController inputBrightnessKey]
  +[PISmartToneAdjustmentController inputShadowsKey]
  +[PISmartToneAdjustmentController inputHighlightsKey]
  +[PISmartToneAdjustmentController inputBlackKey]
  +[PISmartToneAdjustmentController inputLocalLightKey]
  +[PISmartToneAdjustmentController inputRawHighlightsKey]
  +[PISmartToneAdjustmentController statisticsKey]
  +[PISmartToneAdjustmentController overcaptureStatisticsKey]
  +[PISmartToneAdjustmentController attributeLightMapKey]
  +[PISmartToneAdjustmentController attributeLightMapWidthKey]
  +[PISmartToneAdjustmentController attributeLightMapHeightKey]

  // instance methods
  -[PISmartToneAdjustmentController setStatistics:]
  -[PISmartToneAdjustmentController inputLocalLight]
  -[PISmartToneAdjustmentController inputBrightness]
  -[PISmartToneAdjustmentController setInputBrightness:]
  -[PISmartToneAdjustmentController inputContrast]
  -[PISmartToneAdjustmentController setInputContrast:]
  -[PISmartToneAdjustmentController inputExposure]
  -[PISmartToneAdjustmentController setInputExposure:]
  -[PISmartToneAdjustmentController inputShadows]
  -[PISmartToneAdjustmentController setInputShadows:]
  -[PISmartToneAdjustmentController inputHighlights]
  -[PISmartToneAdjustmentController setInputHighlights:]
  -[PISmartToneAdjustmentController setInputBlack:]
  -[PISmartToneAdjustmentController inputRawHighlights]
  -[PISmartToneAdjustmentController setInputRawHighlights:]
  -[PISmartToneAdjustmentController setInputLocalLight:]
  -[PISmartToneAdjustmentController sourceSelection]
  -[PISmartToneAdjustmentController setSourceSelection:]
  -[PISmartToneAdjustmentController inputLight]
  -[PISmartToneAdjustmentController statistics]
  -[PISmartToneAdjustmentController inputBlack]
  -[PISmartToneAdjustmentController setInputLight:]
  -[PISmartToneAdjustmentController overcaptureStatistics]
  -[PISmartToneAdjustmentController setOvercaptureStatistics:]
  -[PISmartToneAdjustmentController initWithAdjustment:]
  -[PISmartToneAdjustmentController _updateSettingsWithInputLight:]
  -[PISmartToneAdjustmentController computedSettings]
  -[PISmartToneAdjustmentController offsetBlack]
  -[PISmartToneAdjustmentController setOffsetBlack:]
  -[PISmartToneAdjustmentController offsetBrightness]
  -[PISmartToneAdjustmentController setOffsetBrightness:]
  -[PISmartToneAdjustmentController offsetContrast]
  -[PISmartToneAdjustmentController setOffsetContrast:]
  -[PISmartToneAdjustmentController offsetExposure]
  -[PISmartToneAdjustmentController setOffsetExposure:]
  -[PISmartToneAdjustmentController offsetHighlights]
  -[PISmartToneAdjustmentController setOffsetHighlights:]
  -[PISmartToneAdjustmentController offsetLocalLight]
  -[PISmartToneAdjustmentController setOffsetLocalLight:]
  -[PISmartToneAdjustmentController offsetShadows]
  -[PISmartToneAdjustmentController setOffsetShadows:]


PIAutoLoopKernels : NSObject
  // class methods
  +[PIAutoLoopKernels alphaCompositingKernel]
  +[PIAutoLoopKernels longExposureFusionKernels]
  +[PIAutoLoopKernels dynamismMapKernel]
  +[PIAutoLoopKernels dynamismMapRefineKernel]
  +[PIAutoLoopKernels rgbToLumaKernel]
  +[PIAutoLoopKernels homographyKernel]
  +[PIAutoLoopKernels nccKernel]
  +[PIAutoLoopKernels nccCoarseKernel]
  +[PIAutoLoopKernels blur7x7Kernel]
  +[PIAutoLoopKernels blur5x5Kernel]
  +[PIAutoLoopKernels blur3x3Kernel]
  +[PIAutoLoopKernels fusionKernel]


PIPhotoEditHelper : NSObject
  // class methods
  +[PIPhotoEditHelper initialize]
  +[PIPhotoEditHelper adjustmentConstants]
  +[PIPhotoEditHelper validatedCompositionCopyForComposition:mediaType:]
  +[PIPhotoEditHelper photosSchema]
  +[PIPhotoEditHelper newComposition]
  +[PIPhotoEditHelper newCompositionControllerWithComposition:]
  +[PIPhotoEditHelper newImageRenderClientWithName:]
  +[PIPhotoEditHelper canInterpretDataWithFormatIdentifier:formatVersion:]
  +[PIPhotoEditHelper videoPropertiesRequestWithComposition:]
  +[PIPhotoEditHelper pipelineFiltersForCropping]
  +[PIPhotoEditHelper imageRenderRequestWithComposition:fitInSize:wideGamut:]
  +[PIPhotoEditHelper imageRenderRequestWithComposition:fillInSize:wideGamut:]
  +[PIPhotoEditHelper newCGImageFromBufferImage:]
  +[PIPhotoEditHelper videoRenderRequestWithComposition:fitInSize:]
  +[PIPhotoEditHelper is3DEffect:]
  +[PIPhotoEditHelper geometryRequestWithComposition:]
  +[PIPhotoEditHelper pipelineFiltersForOriginalGeometry]
  +[PIPhotoEditHelper effectNameForFilterName:]
  +[PIPhotoEditHelper videoSourceWithURL:]
  +[PIPhotoEditHelper imageSourceWithURL:type:proxyImage:orientation:useEmbeddedPreview:]
  +[PIPhotoEditHelper imageSourceWithCIImage:orientation:]
  +[PIPhotoEditHelper imageSourceWithURL:type:useEmbeddedPreview:]
  +[PIPhotoEditHelper livePhotoSourceWithPhotoSource:videoSource:]
  +[PIPhotoEditHelper isAVAssetEditable:]
  +[PIPhotoEditHelper imagePropertiesRequestWithComposition:]
  +[PIPhotoEditHelper rawAdjustmentWithRawImageProperties:]
  +[PIPhotoEditHelper preheatEditDependencies]
  +[PIPhotoEditHelper pipelineFiltersForRAWShowingOriginalWithGeometry]
  +[PIPhotoEditHelper pipelineFiltersForShowingOriginalWithGeometry]
  +[PIPhotoEditHelper updateCropAdjustmentController:after:error:]
  +[PIPhotoEditHelper newAdjustmentWithName:]
  +[PIPhotoEditHelper assetIdentifierForURL:type:useEmbeddedPreview:]
  +[PIPhotoEditHelper _imageRenderRequestWithComposition:wideGamut:]
  +[PIPhotoEditHelper areCPVAssetsEditable]
  +[PIPhotoEditHelper isPortraitEffect:]
  +[PIPhotoEditHelper newAdjustmentWithIdentifier:]
  +[PIPhotoEditHelper handlePIGlobalSettings:]
  +[PIPhotoEditHelper knownFormatsVersionsMap]
  +[PIPhotoEditHelper compositionByRemovingVideoAndLivePhotoAdjustments:]
  +[PIPhotoEditHelper priorityWithLevel:]
  +[PIPhotoEditHelper isPortraitStageEffect:]
  +[PIPhotoEditHelper filterNameForEffectName:]
  +[PIPhotoEditHelper pipelineFiltersForShowingOriginal]


PIAdjustmentConstants : NSObject
 @property  NSString *PISmartToneAdjustmentKey
 @property  NSString *PISmartColorAdjustmentKey
 @property  NSString *PISmartBWAdjustmentKey
 @property  NSString *PIGrainAdjustmentKey
 @property  NSString *PIAutoEnhanceAdjustmentKey
 @property  NSString *PIWhiteBalanceAdjustmentKey
 @property  NSString *PIRedEyeAdjustmentKey
 @property  NSString *PIApertureRedEyeAdjustmentKey
 @property  NSString *PIRetouchAdjustmentKey
 @property  NSString *PIVignetteAdjustmentKey
 @property  NSString *PISharpenAdjustmentKey
 @property  NSString *PINoiseReductionAdjustmentKey
 @property  NSString *PIDefinitionAdjustmentKey
 @property  NSString *PICurvesAdjustmentKey
 @property  NSString *PILevelsAdjustmentKey
 @property  NSString *PISelectiveColorAdjustmentKey
 @property  NSString *PIEffectAdjustmentKey
 @property  NSString *PIEffect3DAdjustmentKey
 @property  NSString *PICropAdjustmentKey
 @property  NSString *PITrimAdjustmentKey
 @property  NSString *PISlomoAdjustmentKey
 @property  NSString *PILivePhotoKeyFrameAdjustmentKey
 @property  NSString *PIVideoPosterFrameAdjustmentKey
 @property  NSString *PIAutoLoopAdjustmentKey
 @property  NSString *PIHighResFusionAdjustmentKey
 @property  NSString *PIMuteAdjustmentKey
 @property  NSString *PIDepthAdjustmentKey
 @property  NSString *PIPortraitAdjustmentKey
 @property  NSString *PIOrientationAdjustmentKey
 @property  NSString *PIRawAdjustmentKey
 @property  NSString *PIRawNoiseReductionAdjustmentKey
 @property  NSString *PISemanticEnhanceAdjustmentKey
 @property  NSString *PIVideoReframeAdjustmentKey
 @property  NSString *PISourceSelectAdjustmentKey
 @property  NSString *PIVideoStabilizeAdjustmentKey
 @property  NSString *PIVideoCrossfadeLoopAdjustmentKey
 @property  NSString *PIPortraitVideoAdjustmentKey
 @property  NSString *PISourceAdjustmentKey
 @property  NSString *PIOvercaptureSourceAdjustmentKey
 @property  NSArray *allAdjustmentTypes
 @property  NSArray *nonVisualAdjustmentTypes

  // instance methods
  -[PIAdjustmentConstants .cxx_destruct]
  -[PIAdjustmentConstants init]
  -[PIAdjustmentConstants PISemanticEnhanceAdjustmentKey]
  -[PIAdjustmentConstants PIDepthAdjustmentKey]
  -[PIAdjustmentConstants PIPortraitAdjustmentKey]
  -[PIAdjustmentConstants PIPortraitVideoAdjustmentKey]
  -[PIAdjustmentConstants PICropAdjustmentKey]
  -[PIAdjustmentConstants PISmartToneAdjustmentKey]
  -[PIAdjustmentConstants PIOrientationAdjustmentKey]
  -[PIAdjustmentConstants PISlomoAdjustmentKey]
  -[PIAdjustmentConstants PISmartColorAdjustmentKey]
  -[PIAdjustmentConstants PIEffectAdjustmentKey]
  -[PIAdjustmentConstants PIEffect3DAdjustmentKey]
  -[PIAdjustmentConstants PIVideoReframeAdjustmentKey]
  -[PIAdjustmentConstants PISmartBWAdjustmentKey]
  -[PIAdjustmentConstants PIRedEyeAdjustmentKey]
  -[PIAdjustmentConstants PIWhiteBalanceAdjustmentKey]
  -[PIAdjustmentConstants allAdjustmentTypes]
  -[PIAdjustmentConstants PIAutoEnhanceAdjustmentKey]
  -[PIAdjustmentConstants nonVisualAdjustmentTypes]
  -[PIAdjustmentConstants PIVideoStabilizeAdjustmentKey]
  -[PIAdjustmentConstants PISourceSelectAdjustmentKey]
  -[PIAdjustmentConstants PIRawAdjustmentKey]
  -[PIAdjustmentConstants PIAutoLoopAdjustmentKey]
  -[PIAdjustmentConstants PILivePhotoKeyFrameAdjustmentKey]
  -[PIAdjustmentConstants PITrimAdjustmentKey]
  -[PIAdjustmentConstants PIHighResFusionAdjustmentKey]
  -[PIAdjustmentConstants PIVideoPosterFrameAdjustmentKey]
  -[PIAdjustmentConstants PISourceAdjustmentKey]
  -[PIAdjustmentConstants PIMuteAdjustmentKey]
  -[PIAdjustmentConstants PIVideoCrossfadeLoopAdjustmentKey]
  -[PIAdjustmentConstants PIGrainAdjustmentKey]
  -[PIAdjustmentConstants PIApertureRedEyeAdjustmentKey]
  -[PIAdjustmentConstants PIRetouchAdjustmentKey]
  -[PIAdjustmentConstants PIVignetteAdjustmentKey]
  -[PIAdjustmentConstants PISharpenAdjustmentKey]
  -[PIAdjustmentConstants PINoiseReductionAdjustmentKey]
  -[PIAdjustmentConstants PIDefinitionAdjustmentKey]
  -[PIAdjustmentConstants PICurvesAdjustmentKey]
  -[PIAdjustmentConstants PILevelsAdjustmentKey]
  -[PIAdjustmentConstants PISelectiveColorAdjustmentKey]
  -[PIAdjustmentConstants PIRawNoiseReductionAdjustmentKey]
  -[PIAdjustmentConstants PIOvercaptureSourceAdjustmentKey]


PIFakeBoost : CIFilter
 @property  CIImage *inputImage
 @property  double inputBoost
 @property  NSString *inputVersion
 @property  NSArray *inputParams

  // class methods
  +[PIFakeBoost currentVersion]
  +[PIFakeBoost boostParametersFromRawProperties:]
  +[PIFakeBoost kernelFB0]
  +[PIFakeBoost kernelFB3]

  // instance methods
  -[PIFakeBoost .cxx_destruct]
  -[PIFakeBoost setInputImage:]
  -[PIFakeBoost inputImage]
  -[PIFakeBoost setInputBoost:]
  -[PIFakeBoost inputVersion]
  -[PIFakeBoost outputImage]
  -[PIFakeBoost inputBoost]
  -[PIFakeBoost setInputVersion:]
  -[PIFakeBoost outputImageFB3]
  -[PIFakeBoost outputImageFB0]
  -[PIFakeBoost inputParams]
  -[PIFakeBoost setInputParams:]


PIForwardFakeBoost : PIFakeBoost
  // class methods
  +[PIForwardFakeBoost kernelFB0]
  +[PIForwardFakeBoost kernelFB3]


PIInverseFakeBoost : PIFakeBoost
  // class methods
  +[PIInverseFakeBoost kernelFB0]
  +[PIInverseFakeBoost kernelFB3]


PICompositionSerializerConstants : NSObject
  // class methods
  +[PICompositionSerializerConstants conversionMap]
  +[PICompositionSerializerConstants mapForSerialization]


PICurvesFilterHDR : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputTableImage

  // instance methods
  -[PICurvesFilterHDR .cxx_destruct]
  -[PICurvesFilterHDR setInputImage:]
  -[PICurvesFilterHDR inputImage]
  -[PICurvesFilterHDR outputImage]
  -[PICurvesFilterHDR inputTableImage]
  -[PICurvesFilterHDR curvesKernel]
  -[PICurvesFilterHDR setInputTableImage:]


PIAutoLoopStabVideoNode : NURenderNode
 @property  NSDictionary *bakedRecipe

  // class methods
  +[PIAutoLoopStabVideoNode nodeWithInput:recipe:error:]

  // instance methods
  -[PIAutoLoopStabVideoNode .cxx_destruct]
  -[PIAutoLoopStabVideoNode resolvedNodeWithCachedInputs:settings:pipelineState:error:]
  -[PIAutoLoopStabVideoNode _evaluateImageGeometry:]
  -[PIAutoLoopStabVideoNode nodeByReplayingAgainstCache:pipelineState:error:]
  -[PIAutoLoopStabVideoNode shouldCacheNodeForPipelineState:]
  -[PIAutoLoopStabVideoNode _evaluateVideo:]
  -[PIAutoLoopStabVideoNode requiresVideoComposition]
  -[PIAutoLoopStabVideoNode requiresAudioMix]
  -[PIAutoLoopStabVideoNode initWithSettings:inputs:]
  -[PIAutoLoopStabVideoNode _evaluateVideoProperties:]
  -[PIAutoLoopStabVideoNode _evaluateVideoComposition:]
  -[PIAutoLoopStabVideoNode initWithInput:settings:bakedRecipe:]
  -[PIAutoLoopStabVideoNode bakedRecipe]


PILongExposureAccumulator : NSObject
 @property  NSError *_accumError
 @property  BOOL isReadyForMoreData

  // instance methods
  -[PILongExposureAccumulator start:]
  -[PILongExposureAccumulator waitUntilDone]
  -[PILongExposureAccumulator markAsFinished]
  -[PILongExposureAccumulator .cxx_destruct]
  -[PILongExposureAccumulator _start]
  -[PILongExposureAccumulator _markAsFinished]
  -[PILongExposureAccumulator cancel]
  -[PILongExposureAccumulator workingColorSpace]
  -[PILongExposureAccumulator dealloc]
  -[PILongExposureAccumulator set_accumError:]
  -[PILongExposureAccumulator _isReadyForMoreData]
  -[PILongExposureAccumulator _accumError]
  -[PILongExposureAccumulator _appendInputFrame:]
  -[PILongExposureAccumulator _nextInputFrame]
  -[PILongExposureAccumulator _initializeAccumulation]
  -[PILongExposureAccumulator nextInputFrame]
  -[PILongExposureAccumulator _accumulate:]
  -[PILongExposureAccumulator _initializeAccumulation:]
  -[PILongExposureAccumulator _initializeStorage:image:error:]
  -[PILongExposureAccumulator _accumulate:error:]
  -[PILongExposureAccumulator _exportOutputImage:format:colorSpace:toURL:uti:error:]
  -[PILongExposureAccumulator _dynamismMapWithMinImage:maxImage:extent:]
  -[PILongExposureAccumulator initWithSize:renderer:jobNumber:]
  -[PILongExposureAccumulator isReadyForMoreData]
  -[PILongExposureAccumulator accumulate:error:]
  -[PILongExposureAccumulator writeLongExposureImage:UTI:colorSpace:error:]
  -[PILongExposureAccumulator writeMaskImage:UTI:error:]


_PILongExposureRegistrationResult : _NURenderResult <PILongExposureRegistrationResult>
 @property  VNImageHomographicAlignmentObservation *observation
 @property  {?={?=qq}{?=qq}} extent
 @property  <NURenderStatistics> *statistics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_PILongExposureRegistrationResult .cxx_destruct]
  -[_PILongExposureRegistrationResult setObservation:]
  -[_PILongExposureRegistrationResult setExtent:]
  -[_PILongExposureRegistrationResult extent]
  -[_PILongExposureRegistrationResult observation]


PILongExposureRegistrationJob : NURenderJob
 @property  {?={?=qq}{?=qq}} guideExtent
 @property  CIImage *stillImage
 @property  VNImageHomographicAlignmentObservation *observation

  // instance methods
  -[PILongExposureRegistrationJob .cxx_destruct]
  -[PILongExposureRegistrationJob setObservation:]
  -[PILongExposureRegistrationJob render:]
  -[PILongExposureRegistrationJob result]
  -[PILongExposureRegistrationJob prepare:]
  -[PILongExposureRegistrationJob observation]
  -[PILongExposureRegistrationJob wantsOutputGeometry]
  -[PILongExposureRegistrationJob wantsCompleteStage]
  -[PILongExposureRegistrationJob newRenderPipelineStateForEvaluationMode:]
  -[PILongExposureRegistrationJob wantsOutputImage]
  -[PILongExposureRegistrationJob wantsRenderScaleClampedToNativeScale]
  -[PILongExposureRegistrationJob scalePolicy]
  -[PILongExposureRegistrationJob stillImage]
  -[PILongExposureRegistrationJob setStillImage:]
  -[PILongExposureRegistrationJob registrationRequest]
  -[PILongExposureRegistrationJob setGuideExtent:]
  -[PILongExposureRegistrationJob guideExtent]


PIRAWTempTintSampler : NUTagColorSampler <PITagColorSampler>
 @property  NSString *tag

  // instance methods
  -[PIRAWTempTintSampler tag]
  -[PIRAWTempTintSampler _pipelineFilters]
  -[PIRAWTempTintSampler initWithComposition:responseQueue:]


PIRedEye : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputDestinationImage
 @property  NSArray *inputCorrectionInfo
 @property  NSString *inputCameraModel

  // instance methods
  -[PIRedEye .cxx_destruct]
  -[PIRedEye setInputImage:]
  -[PIRedEye inputImage]
  -[PIRedEye inputCameraModel]
  -[PIRedEye setInputCameraModel:]
  -[PIRedEye inputCorrectionInfo]
  -[PIRedEye setInputCorrectionInfo:]
  -[PIRedEye outputImage]
  -[PIRedEye inputDestinationImage]
  -[PIRedEye setInputDestinationImage:]


PIVideoPosterFrameAdjustmentController : PIAdjustmentController
 @property  {?=qiIq} posterFrameTime

  // class methods
  +[PIVideoPosterFrameAdjustmentController timeKey]
  +[PIVideoPosterFrameAdjustmentController scaleKey]

  // instance methods
  -[PIVideoPosterFrameAdjustmentController posterFrameTime]
  -[PIVideoPosterFrameAdjustmentController setPosterFrameTime:]
  -[PIVideoPosterFrameAdjustmentController initWithAdjustment:]


PICompositionSerializerFormatVersion : NSObject
  // class methods
  +[PICompositionSerializerFormatVersion locallySupportedFormatVersions]
  +[PICompositionSerializerFormatVersion currentFormatVersion]
  +[PICompositionSerializerFormatVersion adjustmentDataFormatVersionForComposition:]
  +[PICompositionSerializerFormatVersion adjustmentHasPerspective:settings:]
  +[PICompositionSerializerFormatVersion adjustmentHasCTM:settings:]
  +[PICompositionSerializerFormatVersion _versionRules]
  +[PICompositionSerializerFormatVersion versionRules]
  +[PICompositionSerializerFormatVersion formatVersionForAdjustment:identifier:]


PICaptureDebugUtilities : NSObject
  // class methods
  +[PICaptureDebugUtilities captureDebugDirectoryForComposition:]


PISlomoAdjustmentController : PIAdjustmentController
 @property  {?=qiIq} startTime
 @property  {?=qiIq} endTime
 @property  double rate

  // class methods
  +[PISlomoAdjustmentController endKey]
  +[PISlomoAdjustmentController startKey]
  +[PISlomoAdjustmentController startScaleKey]
  +[PISlomoAdjustmentController endScaleKey]
  +[PISlomoAdjustmentController rateKey]

  // instance methods
  -[PISlomoAdjustmentController rate]
  -[PISlomoAdjustmentController endTime]
  -[PISlomoAdjustmentController setStartTime:]
  -[PISlomoAdjustmentController setEndTime:]
  -[PISlomoAdjustmentController startTime]
  -[PISlomoAdjustmentController setRate:]


PIPortraitVideoDebugDetectionsRenderNode : NURenderNode
 @property  PTCinematographyScript *cinematographyScript
 @property  {?=qiIq} renderTime
 @property  NSCache *labelImageCache

  // instance methods
  -[PIPortraitVideoDebugDetectionsRenderNode .cxx_destruct]
  -[PIPortraitVideoDebugDetectionsRenderNode cinematographyScript]
  -[PIPortraitVideoDebugDetectionsRenderNode setCinematographyScript:]
  -[PIPortraitVideoDebugDetectionsRenderNode resolvedNodeWithCachedInputs:settings:pipelineState:error:]
  -[PIPortraitVideoDebugDetectionsRenderNode shouldCacheNodeForPipelineState:]
  -[PIPortraitVideoDebugDetectionsRenderNode requiresVideoComposition]
  -[PIPortraitVideoDebugDetectionsRenderNode _evaluateImage:]
  -[PIPortraitVideoDebugDetectionsRenderNode renderTime]
  -[PIPortraitVideoDebugDetectionsRenderNode setRenderTime:]
  -[PIPortraitVideoDebugDetectionsRenderNode labelImageCache]
  -[PIPortraitVideoDebugDetectionsRenderNode setLabelImageCache:]
  -[PIPortraitVideoDebugDetectionsRenderNode _imageByAddingDetection:toImage:isPrimary:canvasSize:inverseOrientation:]
  -[PIPortraitVideoDebugDetectionsRenderNode initWithInput:assetURL:cinematographyState:monochrome:]


PIDebugAdjustmentController : PIAdjustmentController
  // class methods
  +[PIDebugAdjustmentController inputExposureKey]
  +[PIDebugAdjustmentController outputExposureKey]
  +[PIDebugAdjustmentController falseColorHDRKey]
  +[PIDebugAdjustmentController inputRAWGamutMapMaxKey]


PIRAWFaceBalance : CIFilter
 @property  CIImage *inputImage
 @property  double inputOrigI
 @property  double inputOrigQ
 @property  double inputStrength
 @property  double inputWarmth

  // class methods
  +[PIRAWFaceBalance newLinearWideGamutColorSpace]
  +[PIRAWFaceBalance linearWideGamutColorSpace]
  +[PIRAWFaceBalance faceBalanceKernels]

  // instance methods
  -[PIRAWFaceBalance setInputOrigI:]
  -[PIRAWFaceBalance setInputOrigQ:]
  -[PIRAWFaceBalance .cxx_destruct]
  -[PIRAWFaceBalance setInputImage:]
  -[PIRAWFaceBalance inputImage]
  -[PIRAWFaceBalance inputWarmth]
  -[PIRAWFaceBalance inputStrength]
  -[PIRAWFaceBalance setInputStrength:]
  -[PIRAWFaceBalance setInputWarmth:]
  -[PIRAWFaceBalance outputImage]
  -[PIRAWFaceBalance inputOrigI]
  -[PIRAWFaceBalance inputOrigQ]


PICurvesLUTFilter : CIFilter
 @property  NSArray *inputPointsR
 @property  NSArray *inputPointsG
 @property  NSArray *inputPointsB
 @property  NSArray *inputPointsL

  // class methods
  +[PICurvesLUTFilter curvePointsFromDictionaries:]
  +[PICurvesLUTFilter calculateCurveTable:]
  +[PICurvesLUTFilter tableImageFromRed:green:blue:luminance:]

  // instance methods
  -[PICurvesLUTFilter .cxx_destruct]
  -[PICurvesLUTFilter outputImage]
  -[PICurvesLUTFilter inputPointsR]
  -[PICurvesLUTFilter inputPointsG]
  -[PICurvesLUTFilter inputPointsB]
  -[PICurvesLUTFilter inputPointsL]
  -[PICurvesLUTFilter setInputPointsR:]
  -[PICurvesLUTFilter setInputPointsG:]
  -[PICurvesLUTFilter setInputPointsB:]
  -[PICurvesLUTFilter setInputPointsL:]


PICurvesFilter : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputTableImage

  // class methods
  +[PICurvesFilter curvesKernel]

  // instance methods
  -[PICurvesFilter .cxx_destruct]
  -[PICurvesFilter setInputImage:]
  -[PICurvesFilter inputImage]
  -[PICurvesFilter outputImage]
  -[PICurvesFilter inputTableImage]
  -[PICurvesFilter setInputTableImage:]


PIColorBalanceFilter : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputWarmTemp
 @property  NSNumber *inputWarmTint
 @property  NSNumber *inputStrength
 @property  NSNumber *inputHasFace
 @property  NSNumber *inputIsRaw

  // class methods
  +[PIColorBalanceFilter customAttributes]
  +[PIColorBalanceFilter colorBalanceKernels]
  +[PIColorBalanceFilter gHDRtoPPKernel]
  +[PIColorBalanceFilter PPtogHDRKernel]
  +[PIColorBalanceFilter colorBalanceKernel]

  // instance methods
  -[PIColorBalanceFilter .cxx_destruct]
  -[PIColorBalanceFilter setInputImage:]
  -[PIColorBalanceFilter inputImage]
  -[PIColorBalanceFilter inputStrength]
  -[PIColorBalanceFilter setInputStrength:]
  -[PIColorBalanceFilter outputImage]
  -[PIColorBalanceFilter applyInputConversion:]
  -[PIColorBalanceFilter applyOutputConversion:]
  -[PIColorBalanceFilter inputWarmTemp]
  -[PIColorBalanceFilter setInputWarmTemp:]
  -[PIColorBalanceFilter inputWarmTint]
  -[PIColorBalanceFilter setInputWarmTint:]
  -[PIColorBalanceFilter inputHasFace]
  -[PIColorBalanceFilter setInputHasFace:]
  -[PIColorBalanceFilter inputIsRaw]
  -[PIColorBalanceFilter setInputIsRaw:]


PIPhotosPipelineHDRFilters : NSObject
  // class methods
  +[PIPhotosPipelineHDRFilters _map]
  +[PIPhotosPipelineHDRFilters getMap]
  +[PIPhotosPipelineHDRFilters HDRFilterForSDRFilter:]


PIHighResFusionAdjustmentController : PIAdjustmentController
 @property  NSDictionary *alignment

  // class methods
  +[PIHighResFusionAdjustmentController alignmentKey]

  // instance methods
  -[PIHighResFusionAdjustmentController setAlignment:]
  -[PIHighResFusionAdjustmentController alignment]
  -[PIHighResFusionAdjustmentController initWithAdjustment:]


PIGlobalSettings : NSObject
 @property  BOOL forceGlassesMatteOff
 @property  BOOL forceSpillMatteOff
 @property  BOOL allowSpillMatteOnOlderPortraitV2Captures

  // class methods
  +[PIGlobalSettings globalSettings]
  +[PIGlobalSettings editSettings]
  +[PIGlobalSettings PUEditSettings]
  +[PIGlobalSettings IPXEditSettings]
  +[PIGlobalSettings falseColorHDR]
  +[PIGlobalSettings setFalseColorHDR:]

  // instance methods
  -[PIGlobalSettings forceSpillMatteOff]
  -[PIGlobalSettings setForceSpillMatteOff:]
  -[PIGlobalSettings setAllowSpillMatteOnOlderPortraitV2Captures:]
  -[PIGlobalSettings .cxx_destruct]
  -[PIGlobalSettings forceGlassesMatteOff]
  -[PIGlobalSettings allowSpillMatteOnOlderPortraitV2Captures]
  -[PIGlobalSettings init]
  -[PIGlobalSettings setForceGlassesMatteOff:]
  -[PIGlobalSettings decoratorRenderFiltersForImages]
  -[PIGlobalSettings decoratorRenderFiltersForVideos]


PIAutoLoopExportJob : NUVideoExportJob
  // class methods
  +[PIAutoLoopExportJob metalRenderer]
  +[PIAutoLoopExportJob shouldUseMetalRenderer]

  // instance methods
  -[PIAutoLoopExportJob renderer:]
  -[PIAutoLoopExportJob writeVideoFrom:toWriter:stillImageTime:createCustomMetadata:geometryTransform:inputSize:outputSize:error:]
  -[PIAutoLoopExportJob initWithVideoExportRequest:]
  -[PIAutoLoopExportJob initWithAutoLoopExportRequest:]
  -[PIAutoLoopExportJob autoLoopExportRequest]


PIJSRenderPipeline : NUJSRenderPipeline
  // instance methods
  -[PIJSRenderPipeline setUpContext:]


PIApertureRedEyeAutoCalculator : NUAutoCalculator
  // instance methods
  -[PIApertureRedEyeAutoCalculator submit:]
  -[PIApertureRedEyeAutoCalculator .cxx_destruct]
  -[PIApertureRedEyeAutoCalculator cancel]
  -[PIApertureRedEyeAutoCalculator apertureRedEyeResultFromFaceObservations:imageSize:]


PILocalLightMapPrepareHDR : CIFilter
  // class methods
  +[PILocalLightMapPrepareHDR customAttributes]

  // instance methods
  -[PILocalLightMapPrepareHDR .cxx_destruct]
  -[PILocalLightMapPrepareHDR outputImage]


PILocalLightFilterHDR : CIFilter
  // class methods
  +[PILocalLightFilterHDR customAttributes]

  // instance methods
  -[PILocalLightFilterHDR .cxx_destruct]
  -[PILocalLightFilterHDR outputImage]
  -[PILocalLightFilterHDR _polyKernelHDR]
  -[PILocalLightFilterHDR _shadowKernelHDR]


PIMsgImageBuffer : NSObject
 @property  NSMutableData *data
 @property  unsigned long elementByteSize
 @property  unsigned long rowElements
 @property  unsigned long width
 @property  unsigned long height
 @property  int format

  // instance methods
  -[PIMsgImageBuffer width]
  -[PIMsgImageBuffer bytes]
  -[PIMsgImageBuffer image]
  -[PIMsgImageBuffer .cxx_destruct]
  -[PIMsgImageBuffer data]
  -[PIMsgImageBuffer height]
  -[PIMsgImageBuffer format]
  -[PIMsgImageBuffer setData:]
  -[PIMsgImageBuffer dealloc]
  -[PIMsgImageBuffer initWithData:width:height:bytesPerRow:bytesPerComponent:format:colorspace:]
  -[PIMsgImageBuffer initWithBytes:width:height:bytesPerRow:bytesPerComponent:format:colorspace:]
  -[PIMsgImageBuffer elementByteSize]
  -[PIMsgImageBuffer rowElements]


PISmartBlackAndWhiteAutoCalculator : NUAutoCalculator <NUTimeBased>
 @property  {?=qiIq} time
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PISmartBlackAndWhiteAutoCalculator submit:]
  -[PISmartBlackAndWhiteAutoCalculator _calculateBlackAndWhiteSettingsFromBufferImage:]


PISmartBlackAndWhiteHDR : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputStrength
 @property  NSNumber *inputNeutralGamma
 @property  NSNumber *inputTone
 @property  NSNumber *inputHue
 @property  NSNumber *inputGrain
 @property  NSNumber *inputSeed
 @property  NSNumber *inputScaleFactor

  // class methods
  +[PISmartBlackAndWhiteHDR customAttributes]

  // instance methods
  -[PISmartBlackAndWhiteHDR .cxx_destruct]
  -[PISmartBlackAndWhiteHDR setInputImage:]
  -[PISmartBlackAndWhiteHDR inputImage]
  -[PISmartBlackAndWhiteHDR inputHue]
  -[PISmartBlackAndWhiteHDR setInputSeed:]
  -[PISmartBlackAndWhiteHDR setInputScaleFactor:]
  -[PISmartBlackAndWhiteHDR inputScaleFactor]
  -[PISmartBlackAndWhiteHDR inputStrength]
  -[PISmartBlackAndWhiteHDR setInputStrength:]
  -[PISmartBlackAndWhiteHDR inputSeed]
  -[PISmartBlackAndWhiteHDR inputTone]
  -[PISmartBlackAndWhiteHDR getNonNormalizedSettings:]
  -[PISmartBlackAndWhiteHDR createHueArray]
  -[PISmartBlackAndWhiteHDR hueArrayImage:]
  -[PISmartBlackAndWhiteHDR inputNeutralGamma]
  -[PISmartBlackAndWhiteHDR setInputNeutralGamma:]
  -[PISmartBlackAndWhiteHDR setInputTone:]
  -[PISmartBlackAndWhiteHDR setInputHue:]
  -[PISmartBlackAndWhiteHDR setInputGrain:]
  -[PISmartBlackAndWhiteHDR outputImage]
  -[PISmartBlackAndWhiteHDR inputGrain]
  -[PISmartBlackAndWhiteHDR smartBlackWhiteKernel]


PITrimAdjustmentController : PIAdjustmentController
 @property  {?=qiIq} startTime
 @property  {?=qiIq} endTime

  // class methods
  +[PITrimAdjustmentController endKey]
  +[PITrimAdjustmentController startKey]
  +[PITrimAdjustmentController startScaleKey]
  +[PITrimAdjustmentController endScaleKey]

  // instance methods
  -[PITrimAdjustmentController endTime]
  -[PITrimAdjustmentController setStartTime:]
  -[PITrimAdjustmentController setEndTime:]
  -[PITrimAdjustmentController startTime]


PIRedEyeAdjustmentController : PIAdjustmentController
 @property  NSArray *inputCorrectionInfo

  // class methods
  +[PIRedEyeAdjustmentController inputCorrectionInfoKey]

  // instance methods
  -[PIRedEyeAdjustmentController hasCorrections]
  -[PIRedEyeAdjustmentController inputCorrectionInfo]
  -[PIRedEyeAdjustmentController setInputCorrectionInfo:]


PILevelsAutoCalculator : NUAutoCalculator <NUTimeBased>
 @property  {?=qiIq} time
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PILevelsAutoCalculator submit:]
  -[PILevelsAutoCalculator calculateSettingsForImageHistogram:]
  -[PILevelsAutoCalculator calculateSettingsForSingleChannelHistogram:suffix:]


PILevelsLuminanceAutoCalculator : PILevelsAutoCalculator
  // instance methods
  -[PILevelsLuminanceAutoCalculator calculateSettingsForImageHistogram:]


PILevelsRGBAutoCalculator : PILevelsAutoCalculator
  // instance methods
  -[PILevelsRGBAutoCalculator calculateSettingsForImageHistogram:]


PICurveControlPoint : NSObject <NSCopying>
 @property  double x
 @property  double y
 @property  BOOL editable

  // instance methods
  -[PICurveControlPoint y]
  -[PICurveControlPoint x]
  -[PICurveControlPoint isEditable]
  -[PICurveControlPoint dictionaryRepresentation]
  -[PICurveControlPoint isEqual:]
  -[PICurveControlPoint initWithDictionary:]
  -[PICurveControlPoint copyWithZone:]
  -[PICurveControlPoint initWithX:y:editable:]


PISmartToneFilterHDR : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputExposure
 @property  NSNumber *inputContrast
 @property  NSNumber *inputBrightness
 @property  NSNumber *inputShadows
 @property  NSNumber *inputHighlights
 @property  NSNumber *inputBlack
 @property  NSNumber *inputRawHighlights

  // class methods
  +[PISmartToneFilterHDR customAttributes]

  // instance methods
  -[PISmartToneFilterHDR .cxx_destruct]
  -[PISmartToneFilterHDR setInputImage:]
  -[PISmartToneFilterHDR _kernelH]
  -[PISmartToneFilterHDR inputImage]
  -[PISmartToneFilterHDR _kernelC]
  -[PISmartToneFilterHDR _kernelRH]
  -[PISmartToneFilterHDR inputBrightness]
  -[PISmartToneFilterHDR setInputBrightness:]
  -[PISmartToneFilterHDR inputContrast]
  -[PISmartToneFilterHDR setInputContrast:]
  -[PISmartToneFilterHDR _kernelBneg]
  -[PISmartToneFilterHDR _kernelBpos]
  -[PISmartToneFilterHDR inputExposure]
  -[PISmartToneFilterHDR setInputExposure:]
  -[PISmartToneFilterHDR inputShadows]
  -[PISmartToneFilterHDR setInputShadows:]
  -[PISmartToneFilterHDR inputHighlights]
  -[PISmartToneFilterHDR setInputHighlights:]
  -[PISmartToneFilterHDR setInputBlack:]
  -[PISmartToneFilterHDR inputRawHighlights]
  -[PISmartToneFilterHDR setInputRawHighlights:]
  -[PISmartToneFilterHDR outputImage]
  -[PISmartToneFilterHDR _isIdentity]
  -[PISmartToneFilterHDR inputBlack]
  -[PISmartToneFilterHDR _kernelC_hdr]


PILongExposureFusion : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputStillImage
 @property  CIImage *inputMaskImage
 @property  NSNumber *inputRenderScale
 @property  NSNumber *inputVideoScale
 @property  CIVector *inputAlignmentExtent
 @property  CIVector *inputAlignmentTransform

  // class methods
  +[PILongExposureFusion initialize]
  +[PILongExposureFusion loadFusionTuningParameters]
  +[PILongExposureFusion _debugDumpIntermediateImages]
  +[PILongExposureFusion debugDumpIntermediateImages]

  // instance methods
  -[PILongExposureFusion inputMaskImage]
  -[PILongExposureFusion setInputMaskImage:]
  -[PILongExposureFusion .cxx_destruct]
  -[PILongExposureFusion setInputImage:]
  -[PILongExposureFusion inputImage]
  -[PILongExposureFusion outputImage]
  -[PILongExposureFusion inputStillImage]
  -[PILongExposureFusion inputRenderScale]
  -[PILongExposureFusion inputVideoScale]
  -[PILongExposureFusion inputAlignmentExtent]
  -[PILongExposureFusion inputAlignmentTransform]
  -[PILongExposureFusion alignImage:transform:extent:]
  -[PILongExposureFusion _computeNCCMapFromImage:toImage:scale:]
  -[PILongExposureFusion _refineMaskImage:guideImage:scale:]
  -[PILongExposureFusion _fuseImage:withGuideImage:weightImage:maskImage:]
  -[PILongExposureFusion setInputStillImage:]
  -[PILongExposureFusion setInputRenderScale:]
  -[PILongExposureFusion setInputVideoScale:]
  -[PILongExposureFusion setInputAlignmentExtent:]
  -[PILongExposureFusion setInputAlignmentTransform:]


PIModernPhotosPipeline : NURenderPipeline
  // instance methods
  -[PIModernPhotosPipeline _processedRenderNodeForComposition:input:pipelineState:error:]
  -[PIModernPhotosPipeline evaluate:input:pipelineState:error:]


PILevelsFilter : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputBlackSrcRGB
 @property  NSNumber *inputBlackDstRGB
 @property  NSNumber *inputShadowSrcRGB
 @property  NSNumber *inputShadowDstRGB
 @property  NSNumber *inputMidSrcRGB
 @property  NSNumber *inputMidDstRGB
 @property  NSNumber *inputHilightSrcRGB
 @property  NSNumber *inputHilightDstRGB
 @property  NSNumber *inputWhiteSrcRGB
 @property  NSNumber *inputWhiteDstRGB
 @property  NSNumber *inputBlackSrcRed
 @property  NSNumber *inputBlackDstRed
 @property  NSNumber *inputShadowSrcRed
 @property  NSNumber *inputShadowDstRed
 @property  NSNumber *inputMidSrcRed
 @property  NSNumber *inputMidDstRed
 @property  NSNumber *inputHilightSrcRed
 @property  NSNumber *inputHilightDstRed
 @property  NSNumber *inputWhiteSrcRed
 @property  NSNumber *inputWhiteDstRed
 @property  NSNumber *inputBlackSrcGreen
 @property  NSNumber *inputBlackDstGreen
 @property  NSNumber *inputShadowSrcGreen
 @property  NSNumber *inputShadowDstGreen
 @property  NSNumber *inputMidSrcGreen
 @property  NSNumber *inputMidDstGreen
 @property  NSNumber *inputHilightSrcGreen
 @property  NSNumber *inputHilightDstGreen
 @property  NSNumber *inputWhiteSrcGreen
 @property  NSNumber *inputWhiteDstGreen
 @property  NSNumber *inputBlackSrcBlue
 @property  NSNumber *inputBlackDstBlue
 @property  NSNumber *inputShadowSrcBlue
 @property  NSNumber *inputShadowDstBlue
 @property  NSNumber *inputMidSrcBlue
 @property  NSNumber *inputMidDstBlue
 @property  NSNumber *inputHilightSrcBlue
 @property  NSNumber *inputHilightDstBlue
 @property  NSNumber *inputWhiteSrcBlue
 @property  NSNumber *inputWhiteDstBlue
 @property  NSString *inputColorSpace

  // class methods
  +[PILevelsFilter defaultValueForKey:]
  +[PILevelsFilter customAttributes]
  +[PILevelsFilter _customAttributesForKey:]
  +[PILevelsFilter P3Kernel]

  // instance methods
  -[PILevelsFilter .cxx_destruct]
  -[PILevelsFilter setDefaults]
  -[PILevelsFilter setInputImage:]
  -[PILevelsFilter inputImage]
  -[PILevelsFilter inputColorSpace]
  -[PILevelsFilter setInputColorSpace:]
  -[PILevelsFilter outputImage]
  -[PILevelsFilter floatValueForKey:defaultValue:clearIfNotDefault:]
  -[PILevelsFilter _LUTImage]
  -[PILevelsFilter inputBlackSrcRGB]
  -[PILevelsFilter setInputBlackSrcRGB:]
  -[PILevelsFilter inputBlackDstRGB]
  -[PILevelsFilter setInputBlackDstRGB:]
  -[PILevelsFilter inputShadowSrcRGB]
  -[PILevelsFilter setInputShadowSrcRGB:]
  -[PILevelsFilter inputShadowDstRGB]
  -[PILevelsFilter setInputShadowDstRGB:]
  -[PILevelsFilter inputMidSrcRGB]
  -[PILevelsFilter setInputMidSrcRGB:]
  -[PILevelsFilter inputMidDstRGB]
  -[PILevelsFilter setInputMidDstRGB:]
  -[PILevelsFilter inputHilightSrcRGB]
  -[PILevelsFilter setInputHilightSrcRGB:]
  -[PILevelsFilter inputHilightDstRGB]
  -[PILevelsFilter setInputHilightDstRGB:]
  -[PILevelsFilter inputWhiteSrcRGB]
  -[PILevelsFilter setInputWhiteSrcRGB:]
  -[PILevelsFilter inputWhiteDstRGB]
  -[PILevelsFilter setInputWhiteDstRGB:]
  -[PILevelsFilter inputBlackSrcRed]
  -[PILevelsFilter setInputBlackSrcRed:]
  -[PILevelsFilter inputBlackDstRed]
  -[PILevelsFilter setInputBlackDstRed:]
  -[PILevelsFilter inputShadowSrcRed]
  -[PILevelsFilter setInputShadowSrcRed:]
  -[PILevelsFilter inputShadowDstRed]
  -[PILevelsFilter setInputShadowDstRed:]
  -[PILevelsFilter inputMidSrcRed]
  -[PILevelsFilter setInputMidSrcRed:]
  -[PILevelsFilter inputMidDstRed]
  -[PILevelsFilter setInputMidDstRed:]
  -[PILevelsFilter inputHilightSrcRed]
  -[PILevelsFilter setInputHilightSrcRed:]
  -[PILevelsFilter inputHilightDstRed]
  -[PILevelsFilter setInputHilightDstRed:]
  -[PILevelsFilter inputWhiteSrcRed]
  -[PILevelsFilter setInputWhiteSrcRed:]
  -[PILevelsFilter inputWhiteDstRed]
  -[PILevelsFilter setInputWhiteDstRed:]
  -[PILevelsFilter inputBlackSrcGreen]
  -[PILevelsFilter setInputBlackSrcGreen:]
  -[PILevelsFilter inputBlackDstGreen]
  -[PILevelsFilter setInputBlackDstGreen:]
  -[PILevelsFilter inputShadowSrcGreen]
  -[PILevelsFilter setInputShadowSrcGreen:]
  -[PILevelsFilter inputShadowDstGreen]
  -[PILevelsFilter setInputShadowDstGreen:]
  -[PILevelsFilter inputMidSrcGreen]
  -[PILevelsFilter setInputMidSrcGreen:]
  -[PILevelsFilter inputMidDstGreen]
  -[PILevelsFilter setInputMidDstGreen:]
  -[PILevelsFilter inputHilightSrcGreen]
  -[PILevelsFilter setInputHilightSrcGreen:]
  -[PILevelsFilter inputHilightDstGreen]
  -[PILevelsFilter setInputHilightDstGreen:]
  -[PILevelsFilter inputWhiteSrcGreen]
  -[PILevelsFilter setInputWhiteSrcGreen:]
  -[PILevelsFilter inputWhiteDstGreen]
  -[PILevelsFilter setInputWhiteDstGreen:]
  -[PILevelsFilter inputBlackSrcBlue]
  -[PILevelsFilter setInputBlackSrcBlue:]
  -[PILevelsFilter inputBlackDstBlue]
  -[PILevelsFilter setInputBlackDstBlue:]
  -[PILevelsFilter inputShadowSrcBlue]
  -[PILevelsFilter setInputShadowSrcBlue:]
  -[PILevelsFilter inputShadowDstBlue]
  -[PILevelsFilter setInputShadowDstBlue:]
  -[PILevelsFilter inputMidSrcBlue]
  -[PILevelsFilter setInputMidSrcBlue:]
  -[PILevelsFilter inputMidDstBlue]
  -[PILevelsFilter setInputMidDstBlue:]
  -[PILevelsFilter inputHilightSrcBlue]
  -[PILevelsFilter setInputHilightSrcBlue:]
  -[PILevelsFilter inputHilightDstBlue]
  -[PILevelsFilter setInputHilightDstBlue:]
  -[PILevelsFilter inputWhiteSrcBlue]
  -[PILevelsFilter setInputWhiteSrcBlue:]
  -[PILevelsFilter inputWhiteDstBlue]
  -[PILevelsFilter setInputWhiteDstBlue:]


PISchema : NSObject
  // class methods
  +[PISchema identifier]
  +[PISchema photosSchema]
  +[PISchema registeredPhotosSchemaIdentifier]
  +[PISchema sourceSelectSchema]
  +[PISchema photosCompositionSchema]
  +[PISchema rawSchema]
  +[PISchema rawNoiseReductionSchema]
  +[PISchema retouchSchema]
  +[PISchema smartToneSchema]
  +[PISchema smartColorSchema]
  +[PISchema whiteBalanceSchema]
  +[PISchema cropSchema]
  +[PISchema trimSchema]
  +[PISchema slomoSchema]
  +[PISchema livePhotoKeyFrameSchema]
  +[PISchema muteSchema]
  +[PISchema videoPosterFrameSchema]
  +[PISchema autoLoopSchema]
  +[PISchema orientationSchema]
  +[PISchema effectSchema]
  +[PISchema redEyeSchema]
  +[PISchema apertureRedEyeSchema]
  +[PISchema smartBlackAndWhiteSchema]
  +[PISchema grainSchema]
  +[PISchema sharpenSchema]
  +[PISchema definitionSchema]
  +[PISchema noiseReductionSchema]
  +[PISchema vignetteSchema]
  +[PISchema levelsSchema]
  +[PISchema curvesSchema]
  +[PISchema selectiveColorSchema]
  +[PISchema depthEffectSchema]
  +[PISchema effect3DSchema]
  +[PISchema portraitEffectSchema]
  +[PISchema highResFusionSchema]
  +[PISchema videoReframeSchema]
  +[PISchema videoStabilizeSchema]
  +[PISchema videoCrossfadeLoopSchema]
  +[PISchema debugSchema]
  +[PISchema semanticEnhance]
  +[PISchema portraitVideoSchema]
  +[PISchema registerPhotosSchema]


PICompositionFinalizer : NURenderRequest
 @property  NSError *finalizerError
 @property  unsigned long performedActions
 @property  double rollAngleDegrees
 @property  double pitchAngleDegrees
 @property  double yawAngleDegrees
 @property  BOOL shouldAllowPerspectiveCorrection
 @property  unsigned long candidacy

  // class methods
  +[PICompositionFinalizer descriptionForCandidacy:]

  // instance methods
  -[PICompositionFinalizer submit:]
  -[PICompositionFinalizer initWithComposition:]
  -[PICompositionFinalizer .cxx_destruct]
  -[PICompositionFinalizer candidacy]
  -[PICompositionFinalizer setCandidacy:]
  -[PICompositionFinalizer shouldAllowPerspectiveCorrection]
  -[PICompositionFinalizer finalizerError]
  -[PICompositionFinalizer rollAngleDegrees]
  -[PICompositionFinalizer pitchAngleDegrees]
  -[PICompositionFinalizer yawAngleDegrees]
  -[PICompositionFinalizer performNextActionWithCompletion:]
  -[PICompositionFinalizer shouldPerformAction:]
  -[PICompositionFinalizer markActionAsPerformed:]
  -[PICompositionFinalizer processHorizonResult:]
  -[PICompositionFinalizer setFinalizerError:]
  -[PICompositionFinalizer performHorizonCorrectionWithCompletion:]
  -[PICompositionFinalizer processPerspectiveResult:]
  -[PICompositionFinalizer performPerspectiveCorrectionWithCompletion:]
  -[PICompositionFinalizer hasPerformedAction:]
  -[PICompositionFinalizer performedActions]
  -[PICompositionFinalizer setPerformedActions:]
  -[PICompositionFinalizer setRollAngleDegrees:]
  -[PICompositionFinalizer setPitchAngleDegrees:]
  -[PICompositionFinalizer setYawAngleDegrees:]


PICompositionFinalizerResult : NSObject
 @property  long long disposition
 @property  NUComposition *composition

  // instance methods
  -[PICompositionFinalizerResult composition]
  -[PICompositionFinalizerResult disposition]
  -[PICompositionFinalizerResult .cxx_destruct]
  -[PICompositionFinalizerResult initWithDisposition:composition:]


PIVideoStabilizeAdjustmentController : PIVideoReframeAdjustmentController
 @property  double cropFraction
 @property  unsigned long analysisType

  // instance methods
  -[PIVideoStabilizeAdjustmentController analysisType]
  -[PIVideoStabilizeAdjustmentController setCropFraction:]
  -[PIVideoStabilizeAdjustmentController setAnalysisType:]
  -[PIVideoStabilizeAdjustmentController cropFraction]


PICropAutoCalculator : NUAutoCalculator <NUTimeBased, PIFaceObservingAutoCalculator>
 @property  BOOL shouldPerformAutoCrop
 @property  BOOL shouldPerformAutoStraighten
 @property  BOOL shouldUseAutoStraightenVerticalDetector
 @property  NSNumber *autoStraightenVerticalAngleThreshold
 @property  NSNumber *autoStraightenDominantAngleDiffThreshold
 @property  double maxAutoStraighten
 @property  double minAutoStraighten
 @property  BOOL debugFilesEnabled
 @property  NSString *debugFilesPrefix
 @property  {?=qiIq} time
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PIFaceObservationCache *faceObservationCache

  // class methods
  +[PICropAutoCalculator stitchedOvercaptureRect:primaryRect:forComposition:error:]
  +[PICropAutoCalculator updateCropAdjustment:after:error:]
  +[PICropAutoCalculator overcaptureRectForStitchedOvercaptureSize:overcaptureVideoComplementSize:primarySize:autoLoopStabilizedCropRect:]

  // instance methods
  -[PICropAutoCalculator submit:]
  -[PICropAutoCalculator initWithComposition:]
  -[PICropAutoCalculator .cxx_destruct]
  -[PICropAutoCalculator setFaceObservationCache:]
  -[PICropAutoCalculator setMaxAutoStraighten:]
  -[PICropAutoCalculator setDebugFilesEnabled:]
  -[PICropAutoCalculator setDebugFilesPrefix:]
  -[PICropAutoCalculator imageProperties:]
  -[PICropAutoCalculator debugFilesEnabled]
  -[PICropAutoCalculator debugFilesPrefix]
  -[PICropAutoCalculator faceObservationCache]
  -[PICropAutoCalculator setShouldPerformAutoCrop:]
  -[PICropAutoCalculator setShouldPerformAutoStraighten:]
  -[PICropAutoCalculator setShouldUseAutoStraightenVerticalDetector:]
  -[PICropAutoCalculator setMinAutoStraighten:]
  -[PICropAutoCalculator setAutoStraightenDominantAngleDiffThreshold:]
  -[PICropAutoCalculator setAutoStraightenVerticalAngleThreshold:]
  -[PICropAutoCalculator shouldPerformAutoStraighten]
  -[PICropAutoCalculator shouldPerformAutoCrop]
  -[PICropAutoCalculator shouldUseAutoStraightenVerticalDetector]
  -[PICropAutoCalculator maxAutoStraighten]
  -[PICropAutoCalculator minAutoStraighten]
  -[PICropAutoCalculator undoExifOrientation:error:]
  -[PICropAutoCalculator autoStraightenVerticalAngleThreshold]
  -[PICropAutoCalculator autoStraightenDominantAngleDiffThreshold]


PISmartColorAdjustmentController : PIAdjustmentController
 @property  double inputColor
 @property  double offsetSaturation
 @property  double offsetContrast
 @property  double offsetCast
 @property  NSDictionary *statistics

  // class methods
  +[PISmartColorAdjustmentController attributeContrastKey]
  +[PISmartColorAdjustmentController offsetContrastKey]
  +[PISmartColorAdjustmentController attributeVibrancyKey]
  +[PISmartColorAdjustmentController offsetSaturationKey]
  +[PISmartColorAdjustmentController attributeCastKey]
  +[PISmartColorAdjustmentController offsetCastKey]
  +[PISmartColorAdjustmentController inputColorKey]
  +[PISmartColorAdjustmentController inputContrastKey]
  +[PISmartColorAdjustmentController statisticsKey]
  +[PISmartColorAdjustmentController inputSaturationKey]
  +[PISmartColorAdjustmentController inputCastKey]

  // instance methods
  -[PISmartColorAdjustmentController setStatistics:]
  -[PISmartColorAdjustmentController inputColor]
  -[PISmartColorAdjustmentController inputSaturation]
  -[PISmartColorAdjustmentController setInputSaturation:]
  -[PISmartColorAdjustmentController inputContrast]
  -[PISmartColorAdjustmentController setInputContrast:]
  -[PISmartColorAdjustmentController inputCast]
  -[PISmartColorAdjustmentController setInputCast:]
  -[PISmartColorAdjustmentController setInputColor:]
  -[PISmartColorAdjustmentController statistics]
  -[PISmartColorAdjustmentController initWithAdjustment:]
  -[PISmartColorAdjustmentController computedSettings]
  -[PISmartColorAdjustmentController offsetContrast]
  -[PISmartColorAdjustmentController setOffsetContrast:]
  -[PISmartColorAdjustmentController _updateSettingsWithInputColor:]
  -[PISmartColorAdjustmentController setOffsetCast:]
  -[PISmartColorAdjustmentController offsetCast]
  -[PISmartColorAdjustmentController setOffsetSaturation:]
  -[PISmartColorAdjustmentController offsetSaturation]


PISelectiveColorFilter : CIFilter
 @property  CIImage *inputImage
 @property  NSArray *inputCorrections

  // class methods
  +[PISelectiveColorFilter iptFromLinearInto:fromRed:green:blue:]
  +[PISelectiveColorFilter hueAngleFrom:]
  +[PISelectiveColorFilter selectiveColorKernels]
  +[PISelectiveColorFilter iptHueAngleFromRed:green:blue:]
  +[PISelectiveColorFilter convertToIPT:]
  +[PISelectiveColorFilter convertFromIPT:]

  // instance methods
  -[PISelectiveColorFilter .cxx_destruct]
  -[PISelectiveColorFilter setInputImage:]
  -[PISelectiveColorFilter inputImage]
  -[PISelectiveColorFilter outputImage]
  -[PISelectiveColorFilter hueSatLumTable]
  -[PISelectiveColorFilter inputCorrections]
  -[PISelectiveColorFilter setInputCorrections:]


PIVideoReframeNode : NURenderNode
 @property  PIReframeKeyframeSequence *keyframeSequence
 @property  {?={?=qq}{?=qq}} stabCropRect
 @property  <NUVideoProperties> *inputVideoProperties
 @property  {?=qiIq} frameDuration
 @property  BOOL shouldApplyWatermark

  // instance methods
  -[PIVideoReframeNode frameDuration]
  -[PIVideoReframeNode .cxx_destruct]
  -[PIVideoReframeNode setFrameDuration:]
  -[PIVideoReframeNode stabCropRect]
  -[PIVideoReframeNode setStabCropRect:]
  -[PIVideoReframeNode resolvedNodeWithCachedInputs:settings:pipelineState:error:]
  -[PIVideoReframeNode _evaluateImageGeometry:]
  -[PIVideoReframeNode shouldCacheNodeForPipelineState:]
  -[PIVideoReframeNode requiresVideoComposition]
  -[PIVideoReframeNode initWithSettings:inputs:]
  -[PIVideoReframeNode _evaluateVideoProperties:]
  -[PIVideoReframeNode _evaluateImage:]
  -[PIVideoReframeNode canPropagateOriginalLivePhotoMetadataTrack]
  -[PIVideoReframeNode initWithKeyframes:stabCropRect:input:]
  -[PIVideoReframeNode setKeyframeSequence:]
  -[PIVideoReframeNode setShouldApplyWatermark:]
  -[PIVideoReframeNode setInputVideoProperties:]
  -[PIVideoReframeNode inputVideoProperties]
  -[PIVideoReframeNode keyframeSequence]
  -[PIVideoReframeNode _stabilizeImage:cleanRect:cropRect:transform:geometry:]
  -[PIVideoReframeNode shouldApplyWatermark]


PIVideoReframeTimedMetadata : NSObject
 @property  {?=qiIq} time
 @property  NSArray *subjects
 @property  {CGVector=dd} estimatedCenterMotion
 @property  {CGVector=dd} estimatedMotionBlur
 @property  {?=[3]} trajectoryHomography

  // instance methods
  -[PIVideoReframeTimedMetadata setTime:]
  -[PIVideoReframeTimedMetadata .cxx_destruct]
  -[PIVideoReframeTimedMetadata time]
  -[PIVideoReframeTimedMetadata setEstimatedMotionBlur:]
  -[PIVideoReframeTimedMetadata trajectoryHomography]
  -[PIVideoReframeTimedMetadata setSubjects:]
  -[PIVideoReframeTimedMetadata setEstimatedCenterMotion:]
  -[PIVideoReframeTimedMetadata setTrajectoryHomography:]
  -[PIVideoReframeTimedMetadata subjects]
  -[PIVideoReframeTimedMetadata estimatedCenterMotion]
  -[PIVideoReframeTimedMetadata estimatedMotionBlur]


PIVideoReframeMetadataExtractor : NSObject
 @property  NSArray *timedMetadataArray

  // class methods
  +[PIVideoReframeMetadataExtractor canProvideMetadataForAVAsset:]

  // instance methods
  -[PIVideoReframeMetadataExtractor .cxx_destruct]
  -[PIVideoReframeMetadataExtractor init]
  -[PIVideoReframeMetadataExtractor extractMetadata]
  -[PIVideoReframeMetadataExtractor initWithAVAsset:]
  -[PIVideoReframeMetadataExtractor timedMetadataArray]
  -[PIVideoReframeMetadataExtractor subjectsFromMetadata:]
  -[PIVideoReframeMetadataExtractor centerMotionVectorFromMetadata:]
  -[PIVideoReframeMetadataExtractor motionBlurVectorFromMetadata:]
  -[PIVideoReframeMetadataExtractor trajectoryeHomographyFromMetadata:containsV3Metadata:]
  -[PIVideoReframeMetadataExtractor overwriteTrackingMetadataWithPlist:]


PINeutralGrayWhiteBalanceFilter : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *strength
 @property  NSNumber *warmth
 @property  NSNumber *y
 @property  NSNumber *i
 @property  NSNumber *q

  // class methods
  +[PINeutralGrayWhiteBalanceFilter customAttributes]
  +[PINeutralGrayWhiteBalanceFilter colorBalanceKernels]
  +[PINeutralGrayWhiteBalanceFilter gHDRtoPPKernel]
  +[PINeutralGrayWhiteBalanceFilter PPtogHDRKernel]
  +[PINeutralGrayWhiteBalanceFilter RGBToYIQKernel]
  +[PINeutralGrayWhiteBalanceFilter YIQToRGBKernel]
  +[PINeutralGrayWhiteBalanceFilter whiteBalanceKernel]

  // instance methods
  -[PINeutralGrayWhiteBalanceFilter i]
  -[PINeutralGrayWhiteBalanceFilter q]
  -[PINeutralGrayWhiteBalanceFilter y]
  -[PINeutralGrayWhiteBalanceFilter setY:]
  -[PINeutralGrayWhiteBalanceFilter setI:]
  -[PINeutralGrayWhiteBalanceFilter .cxx_destruct]
  -[PINeutralGrayWhiteBalanceFilter setInputImage:]
  -[PINeutralGrayWhiteBalanceFilter setQ:]
  -[PINeutralGrayWhiteBalanceFilter inputImage]
  -[PINeutralGrayWhiteBalanceFilter strength]
  -[PINeutralGrayWhiteBalanceFilter setStrength:]
  -[PINeutralGrayWhiteBalanceFilter outputImage]
  -[PINeutralGrayWhiteBalanceFilter warmth]
  -[PINeutralGrayWhiteBalanceFilter applyInputConversion:]
  -[PINeutralGrayWhiteBalanceFilter applyOutputConversion:]
  -[PINeutralGrayWhiteBalanceFilter isDefaultWarmth:]
  -[PINeutralGrayWhiteBalanceFilter setWarmth:]


PISmartToneAutoCalculator : NUAutoCalculator <NUTimeBased>
 @property  {?=qiIq} time
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PISmartToneAutoCalculator submit:]
  -[PISmartToneAutoCalculator submitSynchronous:]


PISmartColorAutoCalculator : NUAutoCalculator <NUTimeBased>
 @property  {?=qiIq} time
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PISmartColorAutoCalculator submit:]
  -[PISmartColorAutoCalculator submitSynchronous:]


PIRedEyeAutoCalculator : NUAutoCalculator
 @property  BOOL force

  // instance methods
  -[PIRedEyeAutoCalculator force]
  -[PIRedEyeAutoCalculator setForce:]
  -[PIRedEyeAutoCalculator _options]
  -[PIRedEyeAutoCalculator submit:]
  -[PIRedEyeAutoCalculator _configureRequest:]


PIManualRedEyeAutoCalculator : PIRedEyeAutoCalculator
  // instance methods
  -[PIManualRedEyeAutoCalculator _options]
  -[PIManualRedEyeAutoCalculator initWithComposition:location:touchDiameter:]
  -[PIManualRedEyeAutoCalculator _configureRequest:]


PISourceSampler : NUColorSampler <PITagColorSampler>
 @property  NSString *tag

  // instance methods
  -[PISourceSampler tag]
  -[PISourceSampler _pipelineFilters]


PIPhotoGrainHDR : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputISO
 @property  NSNumber *inputAmount
 @property  NSNumber *inputSeed

  // class methods
  +[PIPhotoGrainHDR customAttributes]

  // instance methods
  -[PIPhotoGrainHDR .cxx_destruct]
  -[PIPhotoGrainHDR setInputImage:]
  -[PIPhotoGrainHDR inputISO]
  -[PIPhotoGrainHDR inputImage]
  -[PIPhotoGrainHDR _interpolateGrainKernel]
  -[PIPhotoGrainHDR _paddedTileKernel]
  -[PIPhotoGrainHDR _grainBlendAndMixKernel]
  -[PIPhotoGrainHDR setInputISO:]
  -[PIPhotoGrainHDR setInputSeed:]
  -[PIPhotoGrainHDR inputAmount]
  -[PIPhotoGrainHDR setInputAmount:]
  -[PIPhotoGrainHDR inputSeed]
  -[PIPhotoGrainHDR outputImage]


PIImageIO : NSObject
  // class methods
  +[PIImageIO writeCGImage:fileURL:options:]
  +[PIImageIO writeImage:toDirectoryAtPath:withBasename:]
  +[PIImageIO writeImage:fileURL:]
  +[PIImageIO writeCGImage:fileURL:]
  +[PIImageIO writeImage:toTemporaryDirectoryWithBasename:]


PISharpenAdjustmentController : PIAdjustmentController
  // class methods
  +[PISharpenAdjustmentController intensityKey]
  +[PISharpenAdjustmentController falloffKey]
  +[PISharpenAdjustmentController edgesKey]


PIApertureRedEyeProcessorKernel : CIImageProcessorKernel
  // class methods
  +[PIApertureRedEyeProcessorKernel outputFormat]
  +[PIApertureRedEyeProcessorKernel roiForInput:arguments:outputRect:]
  +[PIApertureRedEyeProcessorKernel processWithInputs:arguments:output:error:]
  +[PIApertureRedEyeProcessorKernel formatForInputAtIndex:]
  +[PIApertureRedEyeProcessorKernel convertFloat:toFixed16:count:]
  +[PIApertureRedEyeProcessorKernel convertFixed16:toFloat:count:]
  +[PIApertureRedEyeProcessorKernel ROIForCenterPoint:radius:]


PIApertureRedEyeFilter : CIFilter
  // instance methods
  -[PIApertureRedEyeFilter .cxx_destruct]
  -[PIApertureRedEyeFilter outputImage]


PIValuesAtCapture : NSObject
 @property  float aperture
 @property  float portraitStrength
 @property  NSNumber *minimumAperture
 @property  NSNumber *maximumAperture
 @property  unsigned long SDOFRenderingVersion
 @property  unsigned long portraitMajorVersion
 @property  unsigned long portraitMinorVersion
 @property  {?=ii} depthVersionInfo

  // class methods
  +[PIValuesAtCapture valuesAtCaptureFromImageProperties:error:]

  // instance methods
  -[PIValuesAtCapture .cxx_destruct]
  -[PIValuesAtCapture setAperture:]
  -[PIValuesAtCapture aperture]
  -[PIValuesAtCapture SDOFRenderingVersion]
  -[PIValuesAtCapture setSDOFRenderingVersion:]
  -[PIValuesAtCapture initFromMinAperture:maxAperture:aperture:portraitStrength:SDOFRenderingVerion:depthVersionInfo:]
  -[PIValuesAtCapture minimumAperture]
  -[PIValuesAtCapture maximumAperture]
  -[PIValuesAtCapture portraitStrength]
  -[PIValuesAtCapture portraitMajorVersion]
  -[PIValuesAtCapture portraitMinorVersion]
  -[PIValuesAtCapture setPortraitStrength:]
  -[PIValuesAtCapture setMinimumAperture:]
  -[PIValuesAtCapture setMaximumAperture:]
  -[PIValuesAtCapture setPortraitMajorVersion:]
  -[PIValuesAtCapture setPortraitMinorVersion:]
  -[PIValuesAtCapture depthVersionInfo]
  -[PIValuesAtCapture setDepthVersionInfo:]


PIPortraitAutoCalculator : NUAutoCalculator <PIFaceObservingAutoCalculator>
 @property  PIFaceObservationCache *faceObservationCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PIPortraitAutoCalculator portraitInfoDictionaryFromCameraMetadata:]
  +[PIPortraitAutoCalculator focusRectDictionaryFromRect:]
  +[PIPortraitAutoCalculator isStillImageDisparity:]
  +[PIPortraitAutoCalculator portraitInfoDictionaryFromFaceObservations:metadata:orientation:valuesAtCapture:]
  +[PIPortraitAutoCalculator canApplyPortraitEffectsWithMetadata:]
  +[PIPortraitAutoCalculator portraitEffectInfoDictionaryFromFaceObservations:orientation:valuesAtCapture:]
  +[PIPortraitAutoCalculator depthEffectInfoDictionaryFromFaceObservations:metadata:orientation:valuesAtCapture:]
  +[PIPortraitAutoCalculator focusRectDictionaryFromMetadata:]
  +[PIPortraitAutoCalculator depthEffectInfoDictionaryFromFaceObservations:focus:valuesAtCapture:lumaNoiseScale:orientation:]

  // instance methods
  -[PIPortraitAutoCalculator submit:]
  -[PIPortraitAutoCalculator .cxx_destruct]
  -[PIPortraitAutoCalculator setFaceObservationCache:]
  -[PIPortraitAutoCalculator faceObservationCache]
  -[PIPortraitAutoCalculator _calculateWithImageProperties:valuesAtCapture:completion:]


PIDepthEffectApertureAutoCalculator : NUAutoCalculator
  // instance methods
  -[PIDepthEffectApertureAutoCalculator submit:]


PIPipelineFilters : NSObject
  // class methods
  +[PIPipelineFilters preGeometryFilter]
  +[PIPipelineFilters autoloopStabilizedVideoFilter]
  +[PIPipelineFilters stripAllTimeAdjustmentsFilter]
  +[PIPipelineFilters overcaptureSourceFilter]
  +[PIPipelineFilters sourceFilterNoOrientation]
  +[PIPipelineFilters noMuteFilter]
  +[PIPipelineFilters noTrimFilter]
  +[PIPipelineFilters stopAtTagIncludeOrientationFilter:]
  +[PIPipelineFilters applyOrientationFilter]
  +[PIPipelineFilters rawFaceBalanceFilter]
  +[PIPipelineFilters rawSourceFilterIncludingOrientation]
  +[PIPipelineFilters sushiLevel1Filter]
  +[PIPipelineFilters oneShotPortraitV2ExportFilter]
  +[PIPipelineFilters orientationAsMetaDataFilter]
  +[PIPipelineFilters noCropFilter]
  +[PIPipelineFilters primarySourceFilter]
  +[PIPipelineFilters exifOrientationAndCropStraightenOnly]
  +[PIPipelineFilters iosCropToolFilter]
  +[PIPipelineFilters socPseudoColorFilter]
  +[PIPipelineFilters stopAtTagIncludeGeometryFilter:]
  +[PIPipelineFilters histogramOptimizationFilter]
  +[PIPipelineFilters autoCropFilter]
  +[PIPipelineFilters noGeometryFilter]
  +[PIPipelineFilters inputToCropFilter]
  +[PIPipelineFilters noRedEyeFilter]
  +[PIPipelineFilters noOrientationFilter]
  +[PIPipelineFilters perspectiveStraightenWithoutCropFilter]
  +[PIPipelineFilters postGeometryFilter]
  +[PIPipelineFilters spatialOvercaptureVideoSourceFilter]


PIWhiteBalanceAdjustmentController : PIAdjustmentController
 @property  long long colorType
 @property  double faceStrength
 @property  double faceWarmth
 @property  double faceI
 @property  double faceQ
 @property  double grayStrength
 @property  double grayWarmth
 @property  double grayY
 @property  double grayI
 @property  double grayQ
 @property  double temperature
 @property  double tint
 @property  double warmTemp
 @property  double warmTint
 @property  BOOL warmFace

  // class methods
  +[PIWhiteBalanceAdjustmentController colorTypeForString:]
  +[PIWhiteBalanceAdjustmentController warmTempKey]
  +[PIWhiteBalanceAdjustmentController warmTintKey]
  +[PIWhiteBalanceAdjustmentController stringForColorType:]
  +[PIWhiteBalanceAdjustmentController colorTypeKey]
  +[PIWhiteBalanceAdjustmentController faceStrengthKey]
  +[PIWhiteBalanceAdjustmentController faceWarmthKey]
  +[PIWhiteBalanceAdjustmentController faceIKey]
  +[PIWhiteBalanceAdjustmentController faceQKey]
  +[PIWhiteBalanceAdjustmentController grayStrengthKey]
  +[PIWhiteBalanceAdjustmentController grayWarmthKey]
  +[PIWhiteBalanceAdjustmentController grayYKey]
  +[PIWhiteBalanceAdjustmentController grayIKey]
  +[PIWhiteBalanceAdjustmentController grayQKey]
  +[PIWhiteBalanceAdjustmentController temperatureKey]
  +[PIWhiteBalanceAdjustmentController tintKey]
  +[PIWhiteBalanceAdjustmentController warmFaceKey]

  // instance methods
  -[PIWhiteBalanceAdjustmentController temperature]
  -[PIWhiteBalanceAdjustmentController setColorType:]
  -[PIWhiteBalanceAdjustmentController faceI]
  -[PIWhiteBalanceAdjustmentController faceQ]
  -[PIWhiteBalanceAdjustmentController grayY]
  -[PIWhiteBalanceAdjustmentController grayI]
  -[PIWhiteBalanceAdjustmentController grayQ]
  -[PIWhiteBalanceAdjustmentController setTint:]
  -[PIWhiteBalanceAdjustmentController warmFace]
  -[PIWhiteBalanceAdjustmentController warmTemp]
  -[PIWhiteBalanceAdjustmentController warmTint]
  -[PIWhiteBalanceAdjustmentController setFaceI:]
  -[PIWhiteBalanceAdjustmentController setFaceQ:]
  -[PIWhiteBalanceAdjustmentController colorType]
  -[PIWhiteBalanceAdjustmentController setGrayY:]
  -[PIWhiteBalanceAdjustmentController setGrayI:]
  -[PIWhiteBalanceAdjustmentController setGrayQ:]
  -[PIWhiteBalanceAdjustmentController tint]
  -[PIWhiteBalanceAdjustmentController setTemperature:]
  -[PIWhiteBalanceAdjustmentController canHaveAuto]
  -[PIWhiteBalanceAdjustmentController setFaceStrength:]
  -[PIWhiteBalanceAdjustmentController setFaceWarmth:]
  -[PIWhiteBalanceAdjustmentController setWarmTemp:]
  -[PIWhiteBalanceAdjustmentController setWarmTint:]
  -[PIWhiteBalanceAdjustmentController setWarmFace:]
  -[PIWhiteBalanceAdjustmentController faceStrength]
  -[PIWhiteBalanceAdjustmentController faceWarmth]
  -[PIWhiteBalanceAdjustmentController grayStrength]
  -[PIWhiteBalanceAdjustmentController setGrayStrength:]
  -[PIWhiteBalanceAdjustmentController grayWarmth]
  -[PIWhiteBalanceAdjustmentController setGrayWarmth:]


PIAutoLoopVideoNode : NURenderNode
 @property  NURenderNode *input
 @property  int loopStart
 @property  int loopPeriod
 @property  int fadeLength
 @property  {?=qiIq} frameDuration
 @property  {?=qiIq} startTime
 @property  {?=qiIq} loopDuration
 @property  {?=qiIq} fadeDuration
 @property  {?=qiIq} fadeStartTime

  // class methods
  +[PIAutoLoopVideoNode loopParamsForTrimRange:frameDuration:]
  +[PIAutoLoopVideoNode loopStartForTrimRange:frameDuration:]
  +[PIAutoLoopVideoNode loopPeriodForTrimRange:frameDuration:]
  +[PIAutoLoopVideoNode fadeLengthForTrimRange:frameDuration:]

  // instance methods
  -[PIAutoLoopVideoNode input]
  -[PIAutoLoopVideoNode frameDuration]
  -[PIAutoLoopVideoNode startTime]
  -[PIAutoLoopVideoNode fadeDuration]
  -[PIAutoLoopVideoNode resolvedNodeWithCachedInputs:settings:pipelineState:error:]
  -[PIAutoLoopVideoNode nodeByReplayingAgainstCache:pipelineState:error:]
  -[PIAutoLoopVideoNode shouldCacheNodeForPipelineState:]
  -[PIAutoLoopVideoNode _evaluateVideo:]
  -[PIAutoLoopVideoNode requiresVideoComposition]
  -[PIAutoLoopVideoNode requiresAudioMix]
  -[PIAutoLoopVideoNode initWithSettings:inputs:]
  -[PIAutoLoopVideoNode _evaluateVideoProperties:]
  -[PIAutoLoopVideoNode _evaluateVideoComposition:]
  -[PIAutoLoopVideoNode _evaluateAudioMix:]
  -[PIAutoLoopVideoNode initWithInput:frameDuration:trimRange:settings:]
  -[PIAutoLoopVideoNode loopPeriod]
  -[PIAutoLoopVideoNode loopStart]
  -[PIAutoLoopVideoNode fadeLength]
  -[PIAutoLoopVideoNode loopDuration]
  -[PIAutoLoopVideoNode fadeStartTime]


PIAutoLoopMirrorVideoNode : PIAutoLoopVideoNode
  // class methods
  +[PIAutoLoopMirrorVideoNode fadeLengthForTrimRange:frameDuration:]

  // instance methods
  -[PIAutoLoopMirrorVideoNode resolvedNodeWithCachedInputs:settings:pipelineState:error:]
  -[PIAutoLoopMirrorVideoNode nodeByReplayingAgainstCache:pipelineState:error:]
  -[PIAutoLoopMirrorVideoNode _evaluateVideo:]
  -[PIAutoLoopMirrorVideoNode requiresVideoComposition]
  -[PIAutoLoopMirrorVideoNode requiresAudioMix]
  -[PIAutoLoopMirrorVideoNode _evaluateVideoComposition:]
  -[PIAutoLoopMirrorVideoNode _evaluateAudioMix:]
  -[PIAutoLoopMirrorVideoNode _conformTime:]


PIDepthAdjustmentController : PIAdjustmentController
 @property  NSDictionary *depthInfo
 @property  double aperture
 @property  NSNumber *glassesMatteAllowed

  // class methods
  +[PIDepthAdjustmentController depthInfoKey]
  +[PIDepthAdjustmentController apertureKey]
  +[PIDepthAdjustmentController glassesMatteAllowedKey]

  // instance methods
  -[PIDepthAdjustmentController setAperture:]
  -[PIDepthAdjustmentController aperture]
  -[PIDepthAdjustmentController setDepthInfo:]
  -[PIDepthAdjustmentController setGlassesMatteAllowed:]
  -[PIDepthAdjustmentController depthInfo]
  -[PIDepthAdjustmentController canRenderDepth]
  -[PIDepthAdjustmentController glassesMatteAllowed]
  -[PIDepthAdjustmentController capturedAperture]
  -[PIDepthAdjustmentController initWithAdjustment:]


PIVideoReframeAdjustmentController : PIAdjustmentController
 @property  NSArray *keyframes
 @property  {?={?=qq}{?=qq}} stabCropRect

  // class methods
  +[PIVideoReframeAdjustmentController keyframesKey]
  +[PIVideoReframeAdjustmentController stabCropRectKey]

  // instance methods
  -[PIVideoReframeAdjustmentController isEqual:forKeys:]
  -[PIVideoReframeAdjustmentController keyframes]
  -[PIVideoReframeAdjustmentController setKeyframes:]
  -[PIVideoReframeAdjustmentController stabCropRect]
  -[PIVideoReframeAdjustmentController setStabCropRect:]
  -[PIVideoReframeAdjustmentController copyKeyframesTrimmingToTimeRange:]


PICurvesAutoCalculator : NUAutoCalculator <NUTimeBased>
 @property  {?=qiIq} time
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PICurvesAutoCalculator _defaultCurveArray]
  +[PICurvesAutoCalculator dictionariesFromPoints:]
  +[PICurvesAutoCalculator autoValuesForBlackPoint:whitePoint:]

  // instance methods
  -[PICurvesAutoCalculator submit:]
  -[PICurvesAutoCalculator computeCurvesForImageHistogram:]


PICurvesLuminanceAutoCalculator : PICurvesAutoCalculator
  // instance methods
  -[PICurvesLuminanceAutoCalculator computeCurvesForImageHistogram:]
  -[PICurvesLuminanceAutoCalculator curvePointAtIndex:blackPoint:whitePoint:histogram:]


PICurvesRGBAutoCalculator : PICurvesAutoCalculator
  // instance methods
  -[PICurvesRGBAutoCalculator computeCurvesForImageHistogram:]


(GrayColorResult)
	// class methods
	+[(GrayColorResult) pi_valueWithGrayColorResult:]
	+[(GrayColorResult) valueWithRGBResult:]

	// instance methods
	-[(GrayColorResult) pi_grayColorResultValue]
	-[(GrayColorResult) RGBResultValue]

CIImage(PrivateSmartColorHDR)
	// instance methods
	-[CIImage(PrivateSmartColorHDR) smartBlackAndWhiteStatistics]
	-[CIImage(PrivateSmartColorHDR) smartBlackAndWhiteAdjustmentsForValue:andStatistics:]
	-[CIImage(PrivateSmartColorHDR) smartToneHDRStatistics]
	-[CIImage(PrivateSmartColorHDR) localLightHDRStatisticsNoProxy]
	-[CIImage(PrivateSmartColorHDR) smartColorHDRStatistics]
	-[CIImage(PrivateSmartColorHDR) pi_imageByApplyingStabilizationWatermark]

CIKernel(PICoreImageUtilities)
	// class methods
	+[CIKernel(PICoreImageUtilities) kernelsDictionaryWithString:]

CIContext(PICoreImageUtilities)
	// instance methods
	-[CIContext(PICoreImageUtilities) pi_createColorCubeDataForFilters:dimension:colorSpace:]

NUJSRenderPipeline(PhotosPipeline)
	// class methods
	+[NUJSRenderPipeline(PhotosPipeline) newPhotosPipelineAtSourceURL:error:]
	+[NUJSRenderPipeline(PhotosPipeline) newPhotosPipeline:]

NUAdjustment(PIModernPhotosPipeline)
	// instance methods
	-[NUAdjustment(PIModernPhotosPipeline) isEnabled]

NURenderPipelineHelper(PI)
	// instance methods
	-[NURenderPipelineHelper(PI) performLongExposureFusionForComposition:longExposureImage:useHDRFilter:error:]
	-[NURenderPipelineHelper(PI) overcaptureRectForAutoCrop:overcaptureVideoComplementSize:primarySize:CGRect:]
	-[NURenderPipelineHelper(PI) nodeByApplyingFilterWithName:useHDRFilter:settingsAndInputs:]
	-[NURenderPipelineHelper(PI) performApertureRedeyeOnImage:useHDRFilter:redEyeAdjustment:]
	-[NURenderPipelineHelper(PI) performRedeyeOnImage:useHDRFilter:redEyeAdjustment:]
	-[NURenderPipelineHelper(PI) versionForPortraitEffect:]
	-[NURenderPipelineHelper(PI) remapPortraitV2Strength:portraitEffectKind:]
	-[NURenderPipelineHelper(PI) portraitVideo:disparityInput:disparityKeyframes:apertureKeyframes:debugMode:error:]
	-[NURenderPipelineHelper(PI) portraitVideoDebugDetectedObjects:source:cinematographyState:monochrome:error:]
	-[NURenderPipelineHelper(PI) videoReframe:reframes:error:]
	-[NURenderPipelineHelper(PI) videoCrossfadeLoop:crossfadeAdjustment:error:]
	-[NURenderPipelineHelper(PI) debugNodeByApplyingFilterWithName:useHDRFilter:settingsAndInputs:]

01 00 0d00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReader 
01 00 0d00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderOutputMetadataAdaptor 
01 00 0d00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderTrackOutput 
01 00 0d00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataItem 
01 00 0d00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMix 
01 00 0d00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMixInputParameters 
01 00 0d00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableComposition 
01 00 0d00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableMetadataItem 
01 00 0d00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableVideoComposition 
01 00 0d00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIBlendKernel 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIColor 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIColorKernel 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIFilter 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIFilterShape 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImageProcessorKernel 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIKernel 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIRenderDestination 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CISampler 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIVector 
01 00 1000 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIWarpKernel 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1400 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUAdjustment 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUAutoCalculator 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUAuxiliaryImageRenderRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUAuxiliaryPropertiesRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUBufferAdapter 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUBufferImageAdapter 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUBufferRenderClient 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUBufferRenderRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUCGAffineTransform 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUCGImageSourceNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUCIImageSourceDefinition 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUCVPixelBuffer 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUCacheNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUClampNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUClassifyPipelineImageCorrectionRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUColorSampler 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUColorSpace 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUCompositionUtilities 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUCropModel 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUDebugFilterNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUDigest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUEnumSetting 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUError 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFaceDetectionRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFactory 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFileSourceDefinition 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFillScalePolicy 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFilterNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFitScalePolicy 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFixedRegionPolicy 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFixedScalePolicy 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFullExtentRegionPolicy 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUGenericAdjustment 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUGenericComposition 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUGeometryRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUGlobalSettings 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUHistogramParameters 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUHistogramRenderRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUIdentifier 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImageDataClient 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImageDataRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImageExportFormat 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImageExportFormatHEIF 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImageExportFormatJPEG 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImageExportRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImageFactory 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImageGeometry 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImagePropertiesRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImageTransformAffine 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImageUtilities 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUJSContext 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUJSRenderNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUJSRenderPipeline 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUKeyframeSequenceMatrixFloat33 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NULivePhotoSourceDefinition 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUMetalRenderer 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUMultipleSourceDefinition 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUMutableBufferAdapter 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUMutableBufferImageAdapter 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUMutablePixelBuffer 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUMutableRegion 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUMuteAudioNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUNumberSetting 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUOrientationNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUPipelineStateNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUPixelCountScalePolicy 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUPixelFormat 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUPlatform 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUPriority 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURedEyeDetectionRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURegion 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderClient 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderJob 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderPipeline 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderPipelineFilter 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderPipelineFunction 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderPipelineHelper 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderPipelineRegistry 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderTransaction 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUResetScaleNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUResolvedSource 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUResponse 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURule 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURuleSystem 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUScaleNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUSchema 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUSchemaRegistry 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUScript 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUSoftwareVersion 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUSquareExtentPolicy 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUTagColorSampler 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUTransformNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoCacheNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoCompositionInstruction 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoExportJob 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoExportRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoFrameSourceNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoPropertiesRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoRenderRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoRotationExportRequest 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoSourceNode 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoUtilities 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVisionDetectionRequest 
01 00 0300 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFImageMetadata 
01 00 0300 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFMediaCapabilities 
01 00 0300 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFStoryRecipeDisplayAssetNormalization 
01 00 0300 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFUniformTypeUtilities 
01 00 0300 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFVideoMetadata 
01 00 0300 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFZlibDataCompression 
01 00 0600 /System/Library/PrivateFrameworks/Portrait.framework/Portrait: PTAssetReader 
01 00 0600 /System/Library/PrivateFrameworks/Portrait.framework/Portrait: PTCinematographyScript 
01 00 0600 /System/Library/PrivateFrameworks/Portrait.framework/Portrait: PTGlobalRenderingMetadata 
01 00 0600 /System/Library/PrivateFrameworks/Portrait.framework/Portrait: PTGlobalVideoMetadata 
01 00 0600 /System/Library/PrivateFrameworks/Portrait.framework/Portrait: PTRenderPipeline 
01 00 0600 /System/Library/PrivateFrameworks/Portrait.framework/Portrait: PTRenderPipelineDescriptor 
01 00 0600 /System/Library/PrivateFrameworks/Portrait.framework/Portrait: PTRenderRequest 
01 00 0600 /System/Library/PrivateFrameworks/Portrait.framework/Portrait: PTTapToTrack 
01 00 0600 /System/Library/PrivateFrameworks/Portrait.framework/Portrait: PTTexture 
01 00 0600 /System/Library/PrivateFrameworks/Portrait.framework/Portrait: PTTimedRenderingMetadata 
01 00 0700 /System/Library/Frameworks/UniformTypeIdentifiers.framework/UniformTypeIdentifiers: UTType 
01 00 0100 /System/Library/Frameworks/Vision.framework/Vision: VN1JC7R3k4455fKQz0dY1VhQ 
01 00 0100 /System/Library/Frameworks/Vision.framework/Vision: VNDetectFaceRectanglesRequest 
01 00 0100 /System/Library/Frameworks/Vision.framework/Vision: VNDetectedObjectObservation 
01 00 0100 /System/Library/Frameworks/Vision.framework/Vision: VNFaceObservation 
01 00 0100 /System/Library/Frameworks/Vision.framework/Vision: VNHomographicImageRegistrationRequest 
01 00 0100 /System/Library/Frameworks/Vision.framework/Vision: VNImageRequestHandler 
01 00 0100 /System/Library/Frameworks/Vision.framework/Vision: VNRecognizedObjectObservation 
01 00 0100 /System/Library/Frameworks/Vision.framework/Vision: VNSession 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: _NURenderResult 
01 00 1200 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: _NUVideoProperties 
