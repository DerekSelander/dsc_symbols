|| __DATA.__data _SSAVAssetDownloadTokenDownloadComplete
|| __DATA.__data _SSDatabaseCacheEntryDataBlob
|| __DATA.__data _SSDatabaseCacheEntryDataBlobSize
|| __DATA.__data _SSDatabaseCacheEntryDateExpired
|| __DATA.__data _SSDatabaseCacheEntryDateInserted
|| __DATA.__data _SSDatabaseCacheEntryDateRetired
|| __DATA.__data _SSDatabaseCacheEntryLookupKey
|| __DATA.__data _SSDatabaseCacheEntryPID
|| __DATA.__data _SSDatabaseCacheEntryUserInfo
|| __DATA.__data _SSEventDownloadClassAutomaticDownload
|| __DATA.__data _SSEventDownloadClassAutomaticUpdate
|| __DATA.__data _SSEventDownloadClassRestore
|| __DATA.__data _SSEventDownloadClassUserInitiated
|| __DATA.__data _SSPurchasableItemAccountUniqueIdentifier
|| __DATA.__data _SSPurchasableItemDatePurchased
|| __DATA.__data _SSPurchasableItemIsHidden
|| __DATA.__data _SSPurchasableItemPID
|| __DATA.__data _SSPurchasableItemStoreID
|| __DATA.__data _SSVerifyCredentialsAccountScope
|| __DATA.__data __SSVMediaContentTasteControllerItemsDidChangeGlobalNotificationName
|| __DATA.__data _kSSOperationDefaultSnapshotInterval
|| __DATA.__data _kSSVNotificationSubscriptionEntitlementsChanged
|| __DATA.__objc_data _OBJC_CLASS_$_ISPurchaseReceipt
|| __DATA.__objc_data _OBJC_CLASS_$_SSAppPurchaseHistoryAccount
|| __DATA.__objc_data _OBJC_CLASS_$_SSAppPurchaseHistoryEntry
|| __DATA.__objc_data _OBJC_CLASS_$_SSAppPurchaseHistoryTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_SSAppWakeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSApplicationUtil
|| __DATA.__objc_data _OBJC_CLASS_$_SSApplicationVersionCondition
|| __DATA.__objc_data _OBJC_CLASS_$_SSAskPermissionActionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSAuthenticateResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSAuthenticationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSAuthorizationMetricsController
|| __DATA.__objc_data _OBJC_CLASS_$_SSAuthorizationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSBag
|| __DATA.__objc_data _OBJC_CLASS_$_SSBagProfileConfig
|| __DATA.__objc_data _OBJC_CLASS_$_SSBinaryPromise
|| __DATA.__objc_data _OBJC_CLASS_$_SSBiometrics
|| __DATA.__objc_data _OBJC_CLASS_$_SSBookDownload
|| __DATA.__objc_data _OBJC_CLASS_$_SSCacheObjectStore
|| __DATA.__objc_data _OBJC_CLASS_$_SSCapabilityCondition
|| __DATA.__objc_data _OBJC_CLASS_$_SSConsolidatedDialog
|| __DATA.__objc_data _OBJC_CLASS_$_SSDialog
|| __DATA.__objc_data _OBJC_CLASS_$_SSDialogButton
|| __DATA.__objc_data _OBJC_CLASS_$_SSDistributedNotificationCenter
|| __DATA.__objc_data _OBJC_CLASS_$_SSDivertedDownload
|| __DATA.__objc_data _OBJC_CLASS_$_SSDocumentCondition
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadAsset
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadAuthenticationChallengeSender
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadAuthenticationSession
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadFileManifest
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadHandlerSession
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadManifestRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadManifestResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadMonitorItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadPhase
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadQueue
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadSession
|| __DATA.__objc_data _OBJC_CLASS_$_SSDownloadStatus
|| __DATA.__objc_data _OBJC_CLASS_$_SSErrorHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SSErrorHandlerSession
|| __DATA.__objc_data _OBJC_CLASS_$_SSFamilyCircle
|| __DATA.__objc_data _OBJC_CLASS_$_SSFamilyCircleRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSFamilyCircleResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSFamilyMember
|| __DATA.__objc_data _OBJC_CLASS_$_SSFeatureEnablerMigrator
|| __DATA.__objc_data _OBJC_CLASS_$_SSFollowUpController
|| __DATA.__objc_data _OBJC_CLASS_$_SSGzipOutputStream
|| __DATA.__objc_data _OBJC_CLASS_$_SSHTTPServer
|| __DATA.__objc_data _OBJC_CLASS_$_SSHTTPServerRequestHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SSHTTPServerResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSHasAccountCondition
|| __DATA.__objc_data _OBJC_CLASS_$_SSImportDownloadToIPodLibraryRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSInstallAttributionParamsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSInstallAttributionPingbackRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSItemArtworkImage
|| __DATA.__objc_data _OBJC_CLASS_$_SSItemAvailableCondition
|| __DATA.__objc_data _OBJC_CLASS_$_SSItemContentRating
|| __DATA.__objc_data _OBJC_CLASS_$_SSItemImageCollection
|| __DATA.__objc_data _OBJC_CLASS_$_SSItemLookupRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSItemMedia
|| __DATA.__objc_data _OBJC_CLASS_$_SSItemOffer
|| __DATA.__objc_data _OBJC_CLASS_$_SSItemOfferDevice
|| __DATA.__objc_data _OBJC_CLASS_$_SSItemOfferDeviceError
|| __DATA.__objc_data _OBJC_CLASS_$_SSKeyValueStoreTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_SSKeybagRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSKeychain
|| __DATA.__objc_data _OBJC_CLASS_$_SSLazyPromise
|| __DATA.__objc_data _OBJC_CLASS_$_SSLookupItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSLookupItemArtwork
|| __DATA.__objc_data _OBJC_CLASS_$_SSLookupItemOffer
|| __DATA.__objc_data _OBJC_CLASS_$_SSLookupProperties
|| __DATA.__objc_data _OBJC_CLASS_$_SSLookupRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSLookupResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsAccountEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsAppInstallEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsClickEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsCustomEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsDialogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsEnterEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsEventLocation
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsEventReportingSession
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsEventTableEntity
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsExitEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsImpressionsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsMediaEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsPurchaseEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetricsSearchEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSMigrator
|| __DATA.__objc_data _OBJC_CLASS_$_SSMutableBagProfileConfig
|| __DATA.__objc_data _OBJC_CLASS_$_SSMutableSoftwareUpdatesContext
|| __DATA.__objc_data _OBJC_CLASS_$_SSNetworkConstraints
|| __DATA.__objc_data _OBJC_CLASS_$_SSNetworkQualityInquiry
|| __DATA.__objc_data _OBJC_CLASS_$_SSObservable
|| __DATA.__objc_data _OBJC_CLASS_$_SSObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SSOperationProgress
|| __DATA.__objc_data _OBJC_CLASS_$_SSPaymentSheet
|| __DATA.__objc_data _OBJC_CLASS_$_SSPaymentSheetPriceSectionItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSPaymentSheetRatingImage
|| __DATA.__objc_data _OBJC_CLASS_$_SSPersonalizeOffersRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSPersonalizeOffersResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSPlatformCondition
|| __DATA.__objc_data _OBJC_CLASS_$_SSPlayInfoRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSPlayInfoRequestContext
|| __DATA.__objc_data _OBJC_CLASS_$_SSPlayInfoResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSPlistCacheObject
|| __DATA.__objc_data _OBJC_CLASS_$_SSPlistCacheObjectFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SSPreorder
|| __DATA.__objc_data _OBJC_CLASS_$_SSPreorderManager
|| __DATA.__objc_data _OBJC_CLASS_$_SSPrivacyMetricsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSProtocolCondition
|| __DATA.__objc_data _OBJC_CLASS_$_SSPurchasableAppItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSPurchasableItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSPurchase
|| __DATA.__objc_data _OBJC_CLASS_$_SSPurchaseHistoryItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSPurchaseIntentActionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSPurchaseReceipt
|| __DATA.__objc_data _OBJC_CLASS_$_SSPurchaseRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSPushNotificationTokenRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSRedeemCodesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSRedeemCodesResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSRemoteNotification
|| __DATA.__objc_data _OBJC_CLASS_$_SSRemoteNotificationClient
|| __DATA.__objc_data _OBJC_CLASS_$_SSRemoteWebViewRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSRentalCheckinRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSRentalCheckoutRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSRentalInformationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSRentalSyncRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSResponseAction
|| __DATA.__objc_data _OBJC_CLASS_$_SSRestoreContentItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSRestrictionCondition
|| __DATA.__objc_data _OBJC_CLASS_$_SSRingtonePurchase
|| __DATA.__objc_data _OBJC_CLASS_$_SSSQLiteNullPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_SSScriptURLHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SSSilentEnrollment
|| __DATA.__objc_data _OBJC_CLASS_$_SSSilentEnrollmentContext
|| __DATA.__objc_data _OBJC_CLASS_$_SSSilentEnrollmentPaymentSession
|| __DATA.__objc_data _OBJC_CLASS_$_SSSilentEnrollmentVerification
|| __DATA.__objc_data _OBJC_CLASS_$_SSSimulatedCrash
|| __DATA.__objc_data _OBJC_CLASS_$_SSSoftwareLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_SSSoftwareLibraryItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSSoftwareUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_SSSoftwareUpdatesContext
|| __DATA.__objc_data _OBJC_CLASS_$_SSSoftwareUpdatesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSSoftwareUpdatesResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSSoftwareUpdatesStore
|| __DATA.__objc_data _OBJC_CLASS_$_SSSpringBoardUtility
|| __DATA.__objc_data _OBJC_CLASS_$_SSStackShot
|| __DATA.__objc_data _OBJC_CLASS_$_SSSystemVersionCondition
|| __DATA.__objc_data _OBJC_CLASS_$_SSTermsAndConditions
|| __DATA.__objc_data _OBJC_CLASS_$_SSTonePurchase
|| __DATA.__objc_data _OBJC_CLASS_$_SSURLConnectionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSURLDataCollection
|| __DATA.__objc_data _OBJC_CLASS_$_SSUniqueExecutionQueue
|| __DATA.__objc_data _OBJC_CLASS_$_SSUnitTests
|| __DATA.__objc_data _OBJC_CLASS_$_SSUpdatableAsset
|| __DATA.__objc_data _OBJC_CLASS_$_SSUpdatableAssetCacheManager
|| __DATA.__objc_data _OBJC_CLASS_$_SSUpdatableAssetController
|| __DATA.__objc_data _OBJC_CLASS_$_SSUpdatableAssetManifest
|| __DATA.__objc_data _OBJC_CLASS_$_SSUpdatableAssetManifestJSONParser
|| __DATA.__objc_data _OBJC_CLASS_$_SSUpdateAccountResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSVAccountLessPlaybackOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SSVApplicationCapabilitiesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVClaimApplicationsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVCloudServiceAPITokenRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVCloudServiceAPITokenResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSVCloudServiceCapabilitiesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVCloudServiceCapabilitiesResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSVComplexOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SSVContentLink
|| __DATA.__objc_data _OBJC_CLASS_$_SSVDialogResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSVDirectUpload
|| __DATA.__objc_data _OBJC_CLASS_$_SSVDirectUploadQueue
|| __DATA.__objc_data _OBJC_CLASS_$_SSVDisableSubscriptionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVDownloadQueueRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVEnableSubscriptionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVFairPlaySAPContext
|| __DATA.__objc_data _OBJC_CLASS_$_SSVFairPlaySubscriptionStatus
|| __DATA.__objc_data _OBJC_CLASS_$_SSVFamilyAccountPair
|| __DATA.__objc_data _OBJC_CLASS_$_SSVFamilyContentDeletionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSVGratisApplication
|| __DATA.__objc_data _OBJC_CLASS_$_SSVGratisRequestBody
|| __DATA.__objc_data _OBJC_CLASS_$_SSVInstallManagedApplicationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVKeybagSyncRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVLeaseCertificateRequestOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SSVLeaseRequestOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SSVLoadDownloadQueueOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SSVLoadNearbyAppsOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaContentTasteController
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaContentTasteItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaContentTasteItemUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaContentTasteUpdateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaContentTasteUpdateResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaSocialAdminStatusOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaSocialPostArtist
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaSocialPostAttachment
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaSocialPostDescription
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaSocialPostExternalDestination
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaSocialPostItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaSocialPostRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMediaSocialShareExtension
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMutableMediaContentTasteItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMutablePlayActivityEnqueuerProperties
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMutablePlayActivityEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMutablePlayActivityEventContainerIDs
|| __DATA.__objc_data _OBJC_CLASS_$_SSVMutablePlayActivityEventItemIDs
|| __DATA.__objc_data _OBJC_CLASS_$_SSVOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlatformContext
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlatformRequestOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlayActivityController
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlayActivityDebugLogOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlayActivityEnqueuerProperties
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlayActivityEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlayActivityEventContainerIDs
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlayActivityEventItemIDs
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlayActivityFeedSerialization
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlayActivityTable
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlaybackAsset
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlaybackItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlaybackKDLeaseRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlaybackLease
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlaybackLeaseAsset
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlaybackLeaseCallback
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlaybackLeaseConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlaybackLeaseItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlaybackLeaseRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlaybackLeaseResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlaybackResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSVPlaybackSubscriptionLeaseRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVRedeemCodeItem
|| __DATA.__objc_data _OBJC_CLASS_$_SSVRedeemCodeMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_SSVRefreshStoreQueueDownloadOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SSVRefreshSubscriptionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVRepairApplicationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVSAPSignatureDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_SSVSecureKeyDeliveryRequestOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SSVServerAuthenticateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVServerAuthenticateResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSVShowDialogRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSVStoreDownload
|| __DATA.__objc_data _OBJC_CLASS_$_SSVStoreDownloadQueueResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSVSubscriptionEntitlements
|| __DATA.__objc_data _OBJC_CLASS_$_SSVSubscriptionEntitlementsCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SSVSubscriptionEntitlementsSubscription
|| __DATA.__objc_data _OBJC_CLASS_$_SSVSubscriptionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SSVURLCache
|| __DATA.__objc_data _OBJC_CLASS_$_SSVURLCacheConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SSVURLConnectionConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_SSVURLJSONDataConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_SSVURLLookupResponseConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_SSWatchMetricsConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SSWatchMetricsController
|| __DATA.__objc_data _OBJC_CLASS_$_SSWatchMetricsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SSWatchMetricsEventTable
|| __DATA.__objc_data _OBJC_CLASS_$_SSWatchMetricsEventTableEntity
|| __DATA.__objc_data _OBJC_CLASS_$_SSWishlist
|| __DATA.__objc_data _OBJC_CLASS_$_SSWishlistAddItemsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSWishlistDatabaseSchema
|| __DATA.__objc_data _OBJC_CLASS_$_SSWishlistItemEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_ISPurchaseReceipt
|| __DATA.__objc_data _OBJC_METACLASS_$_SSAppPurchaseHistoryAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_SSAppPurchaseHistoryEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_SSAppPurchaseHistoryTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_SSAppWakeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSApplicationUtil
|| __DATA.__objc_data _OBJC_METACLASS_$_SSApplicationVersionCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_SSAskPermissionActionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSAuthenticateResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSAuthenticationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSAuthorizationMetricsController
|| __DATA.__objc_data _OBJC_METACLASS_$_SSAuthorizationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSBag
|| __DATA.__objc_data _OBJC_METACLASS_$_SSBagProfileConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_SSBinaryPromise
|| __DATA.__objc_data _OBJC_METACLASS_$_SSBiometrics
|| __DATA.__objc_data _OBJC_METACLASS_$_SSBookDownload
|| __DATA.__objc_data _OBJC_METACLASS_$_SSCacheObjectStore
|| __DATA.__objc_data _OBJC_METACLASS_$_SSCapabilityCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_SSConsolidatedDialog
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDialog
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDialogButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDistributedNotificationCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDivertedDownload
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDocumentCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadAuthenticationChallengeSender
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadAuthenticationSession
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadFileManifest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadHandlerSession
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadManifestRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadManifestResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadMonitorItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadPhase
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadSession
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDownloadStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_SSErrorHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SSErrorHandlerSession
|| __DATA.__objc_data _OBJC_METACLASS_$_SSFamilyCircle
|| __DATA.__objc_data _OBJC_METACLASS_$_SSFamilyCircleRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSFamilyCircleResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSFamilyMember
|| __DATA.__objc_data _OBJC_METACLASS_$_SSFeatureEnablerMigrator
|| __DATA.__objc_data _OBJC_METACLASS_$_SSFollowUpController
|| __DATA.__objc_data _OBJC_METACLASS_$_SSGzipOutputStream
|| __DATA.__objc_data _OBJC_METACLASS_$_SSHTTPServer
|| __DATA.__objc_data _OBJC_METACLASS_$_SSHTTPServerRequestHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SSHTTPServerResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSHasAccountCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_SSImportDownloadToIPodLibraryRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSInstallAttributionParamsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSInstallAttributionPingbackRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSItemArtworkImage
|| __DATA.__objc_data _OBJC_METACLASS_$_SSItemAvailableCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_SSItemContentRating
|| __DATA.__objc_data _OBJC_METACLASS_$_SSItemImageCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_SSItemLookupRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSItemMedia
|| __DATA.__objc_data _OBJC_METACLASS_$_SSItemOffer
|| __DATA.__objc_data _OBJC_METACLASS_$_SSItemOfferDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_SSItemOfferDeviceError
|| __DATA.__objc_data _OBJC_METACLASS_$_SSKeyValueStoreTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_SSKeybagRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSKeychain
|| __DATA.__objc_data _OBJC_METACLASS_$_SSLazyPromise
|| __DATA.__objc_data _OBJC_METACLASS_$_SSLookupItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSLookupItemArtwork
|| __DATA.__objc_data _OBJC_METACLASS_$_SSLookupItemOffer
|| __DATA.__objc_data _OBJC_METACLASS_$_SSLookupProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_SSLookupRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSLookupResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsAccountEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsAppInstallEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsClickEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsCustomEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsDialogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsEnterEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsEventLocation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsEventReportingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsEventTableEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsExitEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsImpressionsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsMediaEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsPurchaseEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetricsSearchEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMigrator
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMutableBagProfileConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMutableSoftwareUpdatesContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SSNetworkConstraints
|| __DATA.__objc_data _OBJC_METACLASS_$_SSNetworkQualityInquiry
|| __DATA.__objc_data _OBJC_METACLASS_$_SSObservable
|| __DATA.__objc_data _OBJC_METACLASS_$_SSObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SSOperationProgress
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPaymentSheet
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPaymentSheetPriceSectionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPaymentSheetRatingImage
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPersonalizeOffersRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPersonalizeOffersResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPlatformCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPlayInfoRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPlayInfoRequestContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPlayInfoResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPlistCacheObject
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPlistCacheObjectFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPreorder
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPreorderManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPrivacyMetricsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSProtocolCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPurchasableAppItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPurchasableItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPurchase
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPurchaseHistoryItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPurchaseIntentActionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPurchaseReceipt
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPurchaseRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPushNotificationTokenRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRedeemCodesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRedeemCodesResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRemoteNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRemoteNotificationClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRemoteWebViewRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRentalCheckinRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRentalCheckoutRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRentalInformationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRentalSyncRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSResponseAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRestoreContentItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRestrictionCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRingtonePurchase
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSQLiteNullPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_SSScriptURLHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSilentEnrollment
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSilentEnrollmentContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSilentEnrollmentPaymentSession
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSilentEnrollmentVerification
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSimulatedCrash
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSoftwareLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSoftwareLibraryItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSoftwareUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSoftwareUpdatesContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSoftwareUpdatesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSoftwareUpdatesResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSoftwareUpdatesStore
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSpringBoardUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_SSStackShot
|| __DATA.__objc_data _OBJC_METACLASS_$_SSSystemVersionCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_SSTermsAndConditions
|| __DATA.__objc_data _OBJC_METACLASS_$_SSTonePurchase
|| __DATA.__objc_data _OBJC_METACLASS_$_SSURLConnectionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSURLDataCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUniqueExecutionQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUnitTests
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUpdatableAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUpdatableAssetCacheManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUpdatableAssetController
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUpdatableAssetManifest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUpdatableAssetManifestJSONParser
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUpdateAccountResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVAccountLessPlaybackOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVApplicationCapabilitiesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVClaimApplicationsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVCloudServiceAPITokenRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVCloudServiceAPITokenResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVCloudServiceCapabilitiesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVCloudServiceCapabilitiesResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVComplexOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVContentLink
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVDialogResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVDirectUpload
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVDirectUploadQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVDisableSubscriptionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVDownloadQueueRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVEnableSubscriptionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVFairPlaySAPContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVFairPlaySubscriptionStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVFamilyAccountPair
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVFamilyContentDeletionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVGratisApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVGratisRequestBody
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVInstallManagedApplicationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVKeybagSyncRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVLeaseCertificateRequestOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVLeaseRequestOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVLoadDownloadQueueOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVLoadNearbyAppsOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaContentTasteController
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaContentTasteItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaContentTasteItemUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaContentTasteUpdateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaContentTasteUpdateResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaSocialAdminStatusOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaSocialPostArtist
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaSocialPostAttachment
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaSocialPostDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaSocialPostExternalDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaSocialPostItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaSocialPostRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMediaSocialShareExtension
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMutableMediaContentTasteItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMutablePlayActivityEnqueuerProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMutablePlayActivityEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMutablePlayActivityEventContainerIDs
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVMutablePlayActivityEventItemIDs
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlatformContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlatformRequestOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlayActivityController
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlayActivityDebugLogOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlayActivityEnqueuerProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlayActivityEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlayActivityEventContainerIDs
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlayActivityEventItemIDs
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlayActivityFeedSerialization
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlayActivityTable
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlaybackAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlaybackItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlaybackKDLeaseRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlaybackLease
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlaybackLeaseAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlaybackLeaseCallback
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlaybackLeaseConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlaybackLeaseItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlaybackLeaseRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlaybackLeaseResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlaybackResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVPlaybackSubscriptionLeaseRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVRedeemCodeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVRedeemCodeMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVRefreshStoreQueueDownloadOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVRefreshSubscriptionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVRepairApplicationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVSAPSignatureDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVSecureKeyDeliveryRequestOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVServerAuthenticateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVServerAuthenticateResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVShowDialogRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVStoreDownload
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVStoreDownloadQueueResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVSubscriptionEntitlements
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVSubscriptionEntitlementsCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVSubscriptionEntitlementsSubscription
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVSubscriptionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVURLCache
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVURLCacheConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVURLConnectionConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVURLJSONDataConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_SSVURLLookupResponseConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_SSWatchMetricsConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SSWatchMetricsController
|| __DATA.__objc_data _OBJC_METACLASS_$_SSWatchMetricsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SSWatchMetricsEventTable
|| __DATA.__objc_data _OBJC_METACLASS_$_SSWatchMetricsEventTableEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_SSWishlist
|| __DATA.__objc_data _OBJC_METACLASS_$_SSWishlistAddItemsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSWishlistDatabaseSchema
|| __DATA.__objc_data _OBJC_METACLASS_$_SSWishlistItemEntity
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSDownloadAuthenticationChallengeSender._dispatchQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSDownloadAuthenticationChallengeSender._session
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSEventMonitor._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSEventMonitor._delegateQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSEventMonitor._dispatchQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSEventMonitor._eventConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSEventsTableBase._database
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSLogFileOptions._directoryPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSLogFileOptions._fileName
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSLogFileOptions._maxNumberOfLogFiles
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSLogFileOptions._maxSizeInBytes
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSPurchaseHistoryItem._properties
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSRollableLog._dispatchQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSRollableLog._fileHandle
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSRollableLog._fileObserverSource
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSRollableLog._lastFileStatTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSRollableLog._options
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSSQLiteComparisonPredicate._comparisonType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSSQLiteComparisonPredicate._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSSQLiteCompoundPredicate._combinationOperation
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSSQLiteCompoundPredicate._predicates
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSSQLiteContainsPredicate._negative
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSSQLiteContainsPredicate._query
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSSQLiteContainsPredicate._queryProperty
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSSQLiteContainsPredicate._values
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSSQLiteNullPredicate._matchesNull
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSSQLitePropertyPredicate._property
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVLoadDownloadQueueOperation._accountIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVLoadDownloadQueueOperation._downloads
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVLoadDownloadQueueOperation._mdSyncState
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVLoadDownloadQueueOperation._needsAuthentication
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVLoadDownloadQueueOperation._rangesToLoad
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVLoadDownloadQueueOperation._reason
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVLoadDownloadQueueOperation._requestIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVLoadDownloadQueueOperation._requestProperties
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVMediaContentTasteItem._contentType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVMediaContentTasteItem._playlistGlobalID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVMediaContentTasteItem._storeAdamID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVMediaContentTasteItem._tasteType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEnqueuerProperties._SBEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEnqueuerProperties._buildVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEnqueuerProperties._deviceGUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEnqueuerProperties._deviceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEnqueuerProperties._privateListeningEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEnqueuerProperties._storeAccountID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEnqueuerProperties._storeFrontID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEnqueuerProperties._systemReleaseType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEnqueuerProperties._timeZone
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._SBEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._buildVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._containerID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._containerIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._containerType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._deviceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._displayType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._endReasonType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._enqueuerProperties
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._eventDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._eventTimeZone
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._eventType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._externalID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._featureName
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._householdID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._itemDuration
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._itemEndTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._itemIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._itemStartTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._itemType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._lyricsDisplayedCharacterCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._lyricsLanguage
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._mediaType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._offline
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._persistentID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._personalizedContainerID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._privateListeningEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._reasonHintType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._recommendationData
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._requestingBundleIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._requestingBundleVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._siriInitiated
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._sourceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._storeAccountID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._storeFrontID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._storeID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._systemReleaseType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._timedMetadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._trackInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEvent._version
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventContainerIDs._adamID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventContainerIDs._cloudAlbumID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventContainerIDs._cloudPlaylistID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventContainerIDs._globalPlaylistID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventContainerIDs._playlistVersionHash
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventContainerIDs._stationHash
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventContainerIDs._stationID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventContainerIDs._stationStringID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventItemIDs._cloudID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventItemIDs._equivalencySourceAdamID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventItemIDs._lyricsID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventItemIDs._purchasedAdamID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventItemIDs._radioAdamID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventItemIDs._subscriptionAdamID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventItemIDs._tvShowPurchasedAdamID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SSVPlayActivityEventItemIDs._tvShowSubscriptionAdamID
|| __DATA_CONST.__const _ProcessAssertionReasonBackgroundDownload
|| __DATA_CONST.__const _ProcessAssertionReasonTaskCompletion
|| __DATA_CONST.__const _SSAccountDemoAccountBackingIdentifier
|| __DATA_CONST.__const _SSAccountErrorDomain
|| __DATA_CONST.__const _SSAccountLocalAccountBackingIdentifier
|| __DATA_CONST.__const _SSAccountPasswordSettingServerValueAlways
|| __DATA_CONST.__const _SSAccountPasswordSettingServerValueNever
|| __DATA_CONST.__const _SSAccountPasswordSettingServerValueSometimes
|| __DATA_CONST.__const _SSAccountPropertyAccountCreditsKey
|| __DATA_CONST.__const _SSAccountPropertyAccountSourceKey
|| __DATA_CONST.__const _SSAccountPropertyAltDSIDKey
|| __DATA_CONST.__const _SSAccountPropertyAutomaticDownloadKinds
|| __DATA_CONST.__const _SSAccountPropertyAvailableServiceTypesKey
|| __DATA_CONST.__const _SSAccountPropertyDSIDKey
|| __DATA_CONST.__const _SSAccountPropertyDemoAccountRawPasswordKey
|| __DATA_CONST.__const _SSAccountPropertyEligibleServicesKey
|| __DATA_CONST.__const _SSAccountPropertyEnabledServiceTypesKey
|| __DATA_CONST.__const _SSAccountPropertyFirstNameKey
|| __DATA_CONST.__const _SSAccountPropertyFreeDownloadsPasswordSettingKey
|| __DATA_CONST.__const _SSAccountPropertyIsActiveLockerAccountKey
|| __DATA_CONST.__const _SSAccountPropertyIsDemoAccountKey
|| __DATA_CONST.__const _SSAccountPropertyIsManagedAppleIDKey
|| __DATA_CONST.__const _SSAccountPropertyIsNewCustomerKey
|| __DATA_CONST.__const _SSAccountPropertyKindKey
|| __DATA_CONST.__const _SSAccountPropertyLastNameKey
|| __DATA_CONST.__const _SSAccountPropertyMergedPrivacyAcknowledgement
|| __DATA_CONST.__const _SSAccountPropertyPaidPurchasesPasswordSettingKey
|| __DATA_CONST.__const _SSAccountPropertyPrivacyAcknowledgement
|| __DATA_CONST.__const _SSAccountPropertyScopeKey
|| __DATA_CONST.__const _SSAccountPropertyStorefrontIDKey
|| __DATA_CONST.__const _SSAccountPropertyiTunesPassSerialNumberKey
|| __DATA_CONST.__const _SSAccountStoreActiveAccountChangedNotification
|| __DATA_CONST.__const _SSAccountStoreAuthKitAllowSilentAuth
|| __DATA_CONST.__const _SSAccountStoreAuthKitAllowSilentPasswordAuth
|| __DATA_CONST.__const _SSAccountStoreAuthKitCanCreateNewAccountKey
|| __DATA_CONST.__const _SSAccountStoreAuthKitCanSetActiveAccountKey
|| __DATA_CONST.__const _SSAccountStoreAuthKitCreateAccountDSIDKey
|| __DATA_CONST.__const _SSAccountStoreAuthKitCreateAccountQueryParamsKey
|| __DATA_CONST.__const _SSAccountStoreAuthKitCreateAccountTargetIdentifierKey
|| __DATA_CONST.__const _SSAccountStoreAuthKitCredentialSource
|| __DATA_CONST.__const _SSAccountStoreAuthKitHTTPHeadersKey
|| __DATA_CONST.__const _SSAccountStoreAuthKitLogUUIDKey
|| __DATA_CONST.__const _SSAccountStoreAuthKitOKButtonLabel
|| __DATA_CONST.__const _SSAccountStoreAuthKitPresentingViewController
|| __DATA_CONST.__const _SSAccountStoreAuthKitPreventPrompt
|| __DATA_CONST.__const _SSAccountStoreAuthKitPreventSecondaryAccountPETLookup
|| __DATA_CONST.__const _SSAccountStoreAuthKitPromptTitle
|| __DATA_CONST.__const _SSAccountStoreAuthKitProxiedAppBundleIDKey
|| __DATA_CONST.__const _SSAccountStoreAuthKitProxiedAppNameKey
|| __DATA_CONST.__const _SSAccountStoreAuthKitReasonKey
|| __DATA_CONST.__const _SSAccountStoreAuthKitSkipAuthKitKey
|| __DATA_CONST.__const _SSAccountStoreAuthKitSuppressServerDialogs
|| __DATA_CONST.__const _SSAccountStoreAuthKitUserAgentKey
|| __DATA_CONST.__const _SSAccountStoreAuthKitUserAgentSuffixesKey
|| __DATA_CONST.__const _SSAccountStoreAuthenticationActivityNotification
|| __DATA_CONST.__const _SSAccountStoreChangedNotification
|| __DATA_CONST.__const _SSActionURLScheme
|| __DATA_CONST.__const _SSAppPurchaseHistoryAccountLocalRevision
|| __DATA_CONST.__const _SSAppPurchaseHistoryAccountUniqueIdentifier
|| __DATA_CONST.__const _SSAppPurchaseHistoryDatabaseLocalRevisionDidChange
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryAccountUniqueIdentifier
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryBundleID
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryCategory
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryCompanyTitle
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryContentRatingFlags
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryDatePurchased
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryDateUpdated
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryDownloadSize
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryFlavors
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryHasMessageExtension
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryIconTitle
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryIconToken
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryIconURL
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryIs32BitOnly
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryIsFamilyShareable
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryIsFirstParty
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryIsHidden
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryIsHiddenFromSpringBoard
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryIsNewsstand
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryIsPreorder
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryIsPreorderSafe
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryLongTitle
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryMinimumOS
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryOvalIconToken
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryOvalIconURL
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryPID
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryPurchasedToken
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryRedownloadParams
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryRequiredCapabilities
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryStoreID
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntrySupportsIPad
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntrySupportsIPhone
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryVPPIsLicensed
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryVersionHumanReadable
|| __DATA_CONST.__const _SSAppPurchaseHistoryEntryVersionITunes
|| __DATA_CONST.__const _SSApplicationLaunchOptionsHasRemoteNotificationsKey
|| __DATA_CONST.__const _SSAuthorizationMetricsKeyBiometricMatchState
|| __DATA_CONST.__const _SSAuthorizationMetricsKeyBuyParams
|| __DATA_CONST.__const _SSAuthorizationMetricsKeyDialogID
|| __DATA_CONST.__const _SSAuthorizationMetricsKeyDualAction
|| __DATA_CONST.__const _SSAuthorizationMetricsKeyError
|| __DATA_CONST.__const _SSAuthorizationMetricsKeyEventType
|| __DATA_CONST.__const _SSAuthorizationMetricsKeyMessage
|| __DATA_CONST.__const _SSAuthorizationMetricsKeyResult
|| __DATA_CONST.__const _SSAuthorizationMetricsKeyTopicName
|| __DATA_CONST.__const _SSAuthorizationMetricsKeyUserAgent
|| __DATA_CONST.__const _SSAutoPlayVideoSettingOff
|| __DATA_CONST.__const _SSAutoPlayVideoSettingOn
|| __DATA_CONST.__const _SSAutoPlayVideoSettingWIFIOnly
|| __DATA_CONST.__const _SSBagChangedNotification
|| __DATA_CONST.__const _SSBagKeyTrustedDomains
|| __DATA_CONST.__const _SSBagProfileAppStore
|| __DATA_CONST.__const _SSBagProfileAppStoreDaemon
|| __DATA_CONST.__const _SSBagProfileBagConfig
|| __DATA_CONST.__const _SSBagProfileVersion0001
|| __DATA_CONST.__const _SSBagProfileVersion0002
|| __DATA_CONST.__const _SSBagProfileVersion0003
|| __DATA_CONST.__const _SSBagProfileVersion0004
|| __DATA_CONST.__const _SSBagProfileVersion0005
|| __DATA_CONST.__const _SSBagProfileVersion0006
|| __DATA_CONST.__const _SSBagProfileVersion0007
|| __DATA_CONST.__const _SSBagProfileVersion0008
|| __DATA_CONST.__const _SSBagProfileVersion0009
|| __DATA_CONST.__const _SSBagProfileVersion0010
|| __DATA_CONST.__const _SSDeviceAutomaticDownloadKindsChangedNotification
|| __DATA_CONST.__const _SSDeviceAvailableItemKindsChangedNotification
|| __DATA_CONST.__const _SSDeviceBatteryLevelChangedNotification
|| __DATA_CONST.__const _SSDeviceCellularNetworkingAllowedChangedNotification
|| __DATA_CONST.__const _SSDevicePluggedInStateChangedNotification
|| __DATA_CONST.__const _SSDevicePromptIdentifierAutomaticDownloadsAvailable
|| __DATA_CONST.__const _SSDeviceSoftwareLibraryIdentifierChangedNotification
|| __DATA_CONST.__const _SSDeviceStoreFrontChangedNotification
|| __DATA_CONST.__const _SSDialogButtonActionDismissCurrentPage
|| __DATA_CONST.__const _SSDialogButtonActionOpenExternalURL
|| __DATA_CONST.__const _SSDialogButtonActionOpenITunesStoreURL
|| __DATA_CONST.__const _SSDialogButtonActionPurchase
|| __DATA_CONST.__const _SSDialogButtonActionRetryRestoreDownloads
|| __DATA_CONST.__const _SSDialogButtonURLTargetAccount
|| __DATA_CONST.__const _SSDialogButtonURLTargetBackground
|| __DATA_CONST.__const _SSDialogErrorKeyRecoveryButtonAction
|| __DATA_CONST.__const _SSDialogErrorKeyRecoveryButtonParameter
|| __DATA_CONST.__const _SSDialogErrorKeyRecoveryTitle
|| __DATA_CONST.__const _SSDialogKindAuthentication
|| __DATA_CONST.__const _SSDownloadAssetExternalPropertyBytesDownloaded
|| __DATA_CONST.__const _SSDownloadAssetExternalPropertyBytesUploadTotal
|| __DATA_CONST.__const _SSDownloadAssetExternalPropertyBytesUploaded
|| __DATA_CONST.__const _SSDownloadAssetExternalPropertySINFs
|| __DATA_CONST.__const _SSDownloadAssetPropertyAllowedRetryCount
|| __DATA_CONST.__const _SSDownloadAssetPropertyBytesTotal
|| __DATA_CONST.__const _SSDownloadAssetPropertyDPInfo
|| __DATA_CONST.__const _SSDownloadAssetPropertyDestinationURL
|| __DATA_CONST.__const _SSDownloadAssetPropertyDownloadToken
|| __DATA_CONST.__const _SSDownloadAssetPropertyExpectedDiskSpace
|| __DATA_CONST.__const _SSDownloadAssetPropertyFileProtectionType
|| __DATA_CONST.__const _SSDownloadAssetPropertyHTTPBodyData
|| __DATA_CONST.__const _SSDownloadAssetPropertyHTTPBodyDataFilePath
|| __DATA_CONST.__const _SSDownloadAssetPropertyHTTPHeaderData
|| __DATA_CONST.__const _SSDownloadAssetPropertyHTTPMethod
|| __DATA_CONST.__const _SSDownloadAssetPropertyHashType
|| __DATA_CONST.__const _SSDownloadAssetPropertyHashes
|| __DATA_CONST.__const _SSDownloadAssetPropertyInitialODRSize
|| __DATA_CONST.__const _SSDownloadAssetPropertyIsDRMFree
|| __DATA_CONST.__const _SSDownloadAssetPropertyIsDiscretionary
|| __DATA_CONST.__const _SSDownloadAssetPropertyIsExternal
|| __DATA_CONST.__const _SSDownloadAssetPropertyIsHLS
|| __DATA_CONST.__const _SSDownloadAssetPropertyIsLocalCacheServer
|| __DATA_CONST.__const _SSDownloadAssetPropertyIsZipStreamable
|| __DATA_CONST.__const _SSDownloadAssetPropertyLocalPath
|| __DATA_CONST.__const _SSDownloadAssetPropertyMD5Hashes
|| __DATA_CONST.__const _SSDownloadAssetPropertyNumberOfBytesToHash
|| __DATA_CONST.__const _SSDownloadAssetPropertyPathExtension
|| __DATA_CONST.__const _SSDownloadAssetPropertyProcessingTypes
|| __DATA_CONST.__const _SSDownloadAssetPropertyRequestParameterData
|| __DATA_CONST.__const _SSDownloadAssetPropertyRequiresDevicePluggedIn
|| __DATA_CONST.__const _SSDownloadAssetPropertySINFData
|| __DATA_CONST.__const _SSDownloadAssetPropertyStoreFlavor
|| __DATA_CONST.__const _SSDownloadAssetPropertyTimeoutInterval
|| __DATA_CONST.__const _SSDownloadAssetPropertyType
|| __DATA_CONST.__const _SSDownloadAssetPropertyURL
|| __DATA_CONST.__const _SSDownloadAssetPropertyVideoDimensions
|| __DATA_CONST.__const _SSDownloadAssetTypeArtwork
|| __DATA_CONST.__const _SSDownloadAssetTypeDeltaPackage
|| __DATA_CONST.__const _SSDownloadAssetTypeMedia
|| __DATA_CONST.__const _SSDownloadAssetTypeNewsstandArtwork
|| __DATA_CONST.__const _SSDownloadAssetTypeODRManifest
|| __DATA_CONST.__const _SSDownloadAssetTypeTransitMapsData
|| __DATA_CONST.__const _SSDownloadAssetTypeXMLFeed
|| __DATA_CONST.__const _SSDownloadErrorKeyJADownloadQueueToken
|| __DATA_CONST.__const _SSDownloadErrorKeyRetryInterval
|| __DATA_CONST.__const _SSDownloadExternalPropertyBytesDownloaded
|| __DATA_CONST.__const _SSDownloadExternalPropertyBytesTotal
|| __DATA_CONST.__const _SSDownloadExternalPropertyBytesUploadTotal
|| __DATA_CONST.__const _SSDownloadExternalPropertyBytesUploaded
|| __DATA_CONST.__const _SSDownloadExternalPropertyEstimatedTimeRemaining
|| __DATA_CONST.__const _SSDownloadExternalPropertyNetworkConstraints
|| __DATA_CONST.__const _SSDownloadExternalPropertyPercentComplete
|| __DATA_CONST.__const _SSDownloadExternalPropertyPolicy
|| __DATA_CONST.__const _SSDownloadExternalPropertyPolicySizeLimit
|| __DATA_CONST.__const _SSDownloadExternalPropertyRentalInformation
|| __DATA_CONST.__const _SSDownloadExternalPropertyStatusDescription
|| __DATA_CONST.__const _SSDownloadHandlerPropertyDownloadPhasesToIgnore
|| __DATA_CONST.__const _SSDownloadHandlerPropertySessionsNeedPowerAssertion
|| __DATA_CONST.__const _SSDownloadHandlerPropertySessionsShouldBlockOtherDownloads
|| __DATA_CONST.__const _SSDownloadKindAudiobook
|| __DATA_CONST.__const _SSDownloadKindCoachedAudio
|| __DATA_CONST.__const _SSDownloadKindDocument
|| __DATA_CONST.__const _SSDownloadKindEBook
|| __DATA_CONST.__const _SSDownloadKindInAppContent
|| __DATA_CONST.__const _SSDownloadKindMovie
|| __DATA_CONST.__const _SSDownloadKindMusic
|| __DATA_CONST.__const _SSDownloadKindMusicVideo
|| __DATA_CONST.__const _SSDownloadKindNSURLSession
|| __DATA_CONST.__const _SSDownloadKindNewsstandContent
|| __DATA_CONST.__const _SSDownloadKindOSUpdate
|| __DATA_CONST.__const _SSDownloadKindOther
|| __DATA_CONST.__const _SSDownloadKindPodcast
|| __DATA_CONST.__const _SSDownloadKindRingtone
|| __DATA_CONST.__const _SSDownloadKindSoftwareApplication
|| __DATA_CONST.__const _SSDownloadKindTelevisionEpisode
|| __DATA_CONST.__const _SSDownloadKindTone
|| __DATA_CONST.__const _SSDownloadKindVPNPlugin
|| __DATA_CONST.__const _SSDownloadKindVideoPodcast
|| __DATA_CONST.__const _SSDownloadMetadataKeyAccountInfo
|| __DATA_CONST.__const _SSDownloadMetadataKeyAdditionalInfo
|| __DATA_CONST.__const _SSDownloadMetadataKeyAppReceiptData
|| __DATA_CONST.__const _SSDownloadMetadataKeyArtworkFileName
|| __DATA_CONST.__const _SSDownloadMetadataKeyArtworkTemplateName
|| __DATA_CONST.__const _SSDownloadMetadataKeyAssetFileSize
|| __DATA_CONST.__const _SSDownloadMetadataKeyAssetFlavor
|| __DATA_CONST.__const _SSDownloadMetadataKeyAssetInfo
|| __DATA_CONST.__const _SSDownloadMetadataKeyAssets
|| __DATA_CONST.__const _SSDownloadMetadataKeyBetaExternalVersionIdentifier
|| __DATA_CONST.__const _SSDownloadMetadataKeyBundleVersion
|| __DATA_CONST.__const _SSDownloadMetadataKeyCancelIfDuplicate
|| __DATA_CONST.__const _SSDownloadMetadataKeyDeltaPackages
|| __DATA_CONST.__const _SSDownloadMetadataKeyDownloadKey
|| __DATA_CONST.__const _SSDownloadMetadataKeyETags
|| __DATA_CONST.__const _SSDownloadMetadataKeyFileExtension
|| __DATA_CONST.__const _SSDownloadMetadataKeyFileExtensionMoviePackage
|| __DATA_CONST.__const _SSDownloadMetadataKeyHLSPlaylistURL
|| __DATA_CONST.__const _SSDownloadMetadataKeyHas4K
|| __DATA_CONST.__const _SSDownloadMetadataKeyHasDolbyVision
|| __DATA_CONST.__const _SSDownloadMetadataKeyHasHDR
|| __DATA_CONST.__const _SSDownloadMetadataKeyHashChunkHashes
|| __DATA_CONST.__const _SSDownloadMetadataKeyHashChunkSize
|| __DATA_CONST.__const _SSDownloadMetadataKeyHashChunks
|| __DATA_CONST.__const _SSDownloadMetadataKeyHumanReadablePublicationVersion
|| __DATA_CONST.__const _SSDownloadMetadataKeyIAdAttribution
|| __DATA_CONST.__const _SSDownloadMetadataKeyIAdConversionDate
|| __DATA_CONST.__const _SSDownloadMetadataKeyIAdImpressionDate
|| __DATA_CONST.__const _SSDownloadMetadataKeyInitialODRSize
|| __DATA_CONST.__const _SSDownloadMetadataKeyIsHLS
|| __DATA_CONST.__const _SSDownloadMetadataKeyIsInStoreQueue
|| __DATA_CONST.__const _SSDownloadMetadataKeyIsMatchedRedownload
|| __DATA_CONST.__const _SSDownloadMetadataKeyIsPremium
|| __DATA_CONST.__const _SSDownloadMetadataKeyIsPurchaseRedownload
|| __DATA_CONST.__const _SSDownloadMetadataKeyIsZipStreamable
|| __DATA_CONST.__const _SSDownloadMetadataKeyLanguages
|| __DATA_CONST.__const _SSDownloadMetadataKeyMD5
|| __DATA_CONST.__const _SSDownloadMetadataKeyMediaFileName
|| __DATA_CONST.__const _SSDownloadMetadataKeyNetworkConstraints
|| __DATA_CONST.__const _SSDownloadMetadataKeyPageProgression
|| __DATA_CONST.__const _SSDownloadMetadataKeyPreferredAssetFlavor
|| __DATA_CONST.__const _SSDownloadMetadataKeyPriorVersionExternalIdentifier
|| __DATA_CONST.__const _SSDownloadMetadataKeyPublicationVersion
|| __DATA_CONST.__const _SSDownloadMetadataKeyPurchaseDate
|| __DATA_CONST.__const _SSDownloadMetadataKeyRating
|| __DATA_CONST.__const _SSDownloadMetadataKeyReferrerAppName
|| __DATA_CONST.__const _SSDownloadMetadataKeyReferrerURL
|| __DATA_CONST.__const _SSDownloadMetadataKeyRentalIdentifier
|| __DATA_CONST.__const _SSDownloadMetadataKeyRequestPersistentID
|| __DATA_CONST.__const _SSDownloadMetadataKeyRequiresPluggedIn
|| __DATA_CONST.__const _SSDownloadMetadataKeyRingtoneGUID
|| __DATA_CONST.__const _SSDownloadMetadataKeySINFs
|| __DATA_CONST.__const _SSDownloadMetadataKeyShowComposer
|| __DATA_CONST.__const _SSDownloadMetadataKeySoftwareExternalVersionID
|| __DATA_CONST.__const _SSDownloadMetadataKeySoftwareType
|| __DATA_CONST.__const _SSDownloadMetadataKeyStoreCohort
|| __DATA_CONST.__const _SSDownloadMetadataKeyStoreFrontID
|| __DATA_CONST.__const _SSDownloadMetadataKeyThinnedApp
|| __DATA_CONST.__const _SSDownloadMetadataKeyTrackPersistentID
|| __DATA_CONST.__const _SSDownloadMetadataKeyTransitDataURL
|| __DATA_CONST.__const _SSDownloadMetadataKeyURL
|| __DATA_CONST.__const _SSDownloadMetadataKeyURL2
|| __DATA_CONST.__const _SSDownloadMetadataKeyUncompressedSize
|| __DATA_CONST.__const _SSDownloadMetadataKeyVariantIdentifier
|| __DATA_CONST.__const _SSDownloadMetadataKeyWorkName
|| __DATA_CONST.__const _SSDownloadMetadataKeyXID
|| __DATA_CONST.__const _SSDownloadMetadataKeyXMLFeedFileName
|| __DATA_CONST.__const _SSDownloadPhaseCanceled
|| __DATA_CONST.__const _SSDownloadPhaseDataRestore
|| __DATA_CONST.__const _SSDownloadPhaseDownloading
|| __DATA_CONST.__const _SSDownloadPhaseFailed
|| __DATA_CONST.__const _SSDownloadPhaseFinished
|| __DATA_CONST.__const _SSDownloadPhaseInstalling
|| __DATA_CONST.__const _SSDownloadPhasePaused
|| __DATA_CONST.__const _SSDownloadPhasePreflight
|| __DATA_CONST.__const _SSDownloadPhaseProcessing
|| __DATA_CONST.__const _SSDownloadPhaseUploading
|| __DATA_CONST.__const _SSDownloadPhaseWaiting
|| __DATA_CONST.__const _SSDownloadPodcastTypeITunesU
|| __DATA_CONST.__const _SSDownloadPropertyAirPlayContentType
|| __DATA_CONST.__const _SSDownloadPropertyArtistName
|| __DATA_CONST.__const _SSDownloadPropertyArtworkIsPrerendered
|| __DATA_CONST.__const _SSDownloadPropertyArtworkTemplateName
|| __DATA_CONST.__const _SSDownloadPropertyAutoUpdateTime
|| __DATA_CONST.__const _SSDownloadPropertyAutomaticType
|| __DATA_CONST.__const _SSDownloadPropertyBetaExternalVersionIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyBundleIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyBundleVersion
|| __DATA_CONST.__const _SSDownloadPropertyCanCancel
|| __DATA_CONST.__const _SSDownloadPropertyCanPause
|| __DATA_CONST.__const _SSDownloadPropertyCanPrioritize
|| __DATA_CONST.__const _SSDownloadPropertyClientAuditTokenData
|| __DATA_CONST.__const _SSDownloadPropertyClientBundleIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyCollectionArtistName
|| __DATA_CONST.__const _SSDownloadPropertyCollectionName
|| __DATA_CONST.__const _SSDownloadPropertyComposerName
|| __DATA_CONST.__const _SSDownloadPropertyDivertedJobID
|| __DATA_CONST.__const _SSDownloadPropertyDocumentTargetIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyDownloadPermalink
|| __DATA_CONST.__const _SSDownloadPropertyDownloadPhase
|| __DATA_CONST.__const _SSDownloadPropertyDuetTransferType
|| __DATA_CONST.__const _SSDownloadPropertyDurationInMilliseconds
|| __DATA_CONST.__const _SSDownloadPropertyEnableExtensions
|| __DATA_CONST.__const _SSDownloadPropertyEncodedErrorData
|| __DATA_CONST.__const _SSDownloadPropertyEpisodeIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyEpisodeSortIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyGenre
|| __DATA_CONST.__const _SSDownloadPropertyHLSPlaylistURL
|| __DATA_CONST.__const _SSDownloadPropertyHandlerID
|| __DATA_CONST.__const _SSDownloadPropertyHas4K
|| __DATA_CONST.__const _SSDownloadPropertyHasDolbyVision
|| __DATA_CONST.__const _SSDownloadPropertyHasHDR
|| __DATA_CONST.__const _SSDownloadPropertyHasMessagesExtension
|| __DATA_CONST.__const _SSDownloadPropertyIndexInCollection
|| __DATA_CONST.__const _SSDownloadPropertyIndexInCollectionGroup
|| __DATA_CONST.__const _SSDownloadPropertyIsAutomaticDownload
|| __DATA_CONST.__const _SSDownloadPropertyIsCellularRestricted
|| __DATA_CONST.__const _SSDownloadPropertyIsCompilation
|| __DATA_CONST.__const _SSDownloadPropertyIsContentRestricted
|| __DATA_CONST.__const _SSDownloadPropertyIsDeviceBasedVPP
|| __DATA_CONST.__const _SSDownloadPropertyIsDiverted
|| __DATA_CONST.__const _SSDownloadPropertyIsExplicit
|| __DATA_CONST.__const _SSDownloadPropertyIsHLS
|| __DATA_CONST.__const _SSDownloadPropertyIsHighDefinition
|| __DATA_CONST.__const _SSDownloadPropertyIsInStoreQueue
|| __DATA_CONST.__const _SSDownloadPropertyIsMusicShow
|| __DATA_CONST.__const _SSDownloadPropertyIsPremium
|| __DATA_CONST.__const _SSDownloadPropertyIsPrivate
|| __DATA_CONST.__const _SSDownloadPropertyIsPurchase
|| __DATA_CONST.__const _SSDownloadPropertyIsRedownload
|| __DATA_CONST.__const _SSDownloadPropertyIsRental
|| __DATA_CONST.__const _SSDownloadPropertyIsRestore
|| __DATA_CONST.__const _SSDownloadPropertyIsSample
|| __DATA_CONST.__const _SSDownloadPropertyIsSharedResource
|| __DATA_CONST.__const _SSDownloadPropertyIsStoreDownload
|| __DATA_CONST.__const _SSDownloadPropertyIsTVTemplate
|| __DATA_CONST.__const _SSDownloadPropertyKind
|| __DATA_CONST.__const _SSDownloadPropertyLaunchProhibited
|| __DATA_CONST.__const _SSDownloadPropertyLibraryItemIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyLoadingPriority
|| __DATA_CONST.__const _SSDownloadPropertyLongDescription
|| __DATA_CONST.__const _SSDownloadPropertyLongSeasonDescription
|| __DATA_CONST.__const _SSDownloadPropertyMessagesArtworkURL
|| __DATA_CONST.__const _SSDownloadPropertyNetworkName
|| __DATA_CONST.__const _SSDownloadPropertyNumberOfCollectionsInGroup
|| __DATA_CONST.__const _SSDownloadPropertyNumberOfItemsInCollection
|| __DATA_CONST.__const _SSDownloadPropertyPageProgressionDirection
|| __DATA_CONST.__const _SSDownloadPropertyPodcastEpisodeGUID
|| __DATA_CONST.__const _SSDownloadPropertyPodcastFeedURL
|| __DATA_CONST.__const _SSDownloadPropertyPodcastType
|| __DATA_CONST.__const _SSDownloadPropertyPreferredAssetFlavor
|| __DATA_CONST.__const _SSDownloadPropertyPriority
|| __DATA_CONST.__const _SSDownloadPropertyPurchaseDate
|| __DATA_CONST.__const _SSDownloadPropertyRateLimit
|| __DATA_CONST.__const _SSDownloadPropertyReason
|| __DATA_CONST.__const _SSDownloadPropertyReferrerAppName
|| __DATA_CONST.__const _SSDownloadPropertyReferrerURL
|| __DATA_CONST.__const _SSDownloadPropertyReleaseDate
|| __DATA_CONST.__const _SSDownloadPropertyReleaseYear
|| __DATA_CONST.__const _SSDownloadPropertyRentalID
|| __DATA_CONST.__const _SSDownloadPropertyResourceTimeoutInterval
|| __DATA_CONST.__const _SSDownloadPropertySeasonNumber
|| __DATA_CONST.__const _SSDownloadPropertySeriesName
|| __DATA_CONST.__const _SSDownloadPropertyShortDescription
|| __DATA_CONST.__const _SSDownloadPropertyShouldCancelIfDuplicate
|| __DATA_CONST.__const _SSDownloadPropertyShouldCancelOnFailure
|| __DATA_CONST.__const _SSDownloadPropertyShouldSuppressErrorDialogs
|| __DATA_CONST.__const _SSDownloadPropertyShowComposer
|| __DATA_CONST.__const _SSDownloadPropertySoftwareType
|| __DATA_CONST.__const _SSDownloadPropertyStoreAccountAppleID
|| __DATA_CONST.__const _SSDownloadPropertyStoreAccountIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyStoreArtistIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyStoreCancelURL
|| __DATA_CONST.__const _SSDownloadPropertyStoreCohort
|| __DATA_CONST.__const _SSDownloadPropertyStoreCollectionIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyStoreComposerIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyStoreDownloadKey
|| __DATA_CONST.__const _SSDownloadPropertyStoreFrontIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyStoreGenreIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyStoreItemIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyStoreMatchStatus
|| __DATA_CONST.__const _SSDownloadPropertyStorePreorderIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyStorePublicationVersion
|| __DATA_CONST.__const _SSDownloadPropertyStoreRedownloadParameters
|| __DATA_CONST.__const _SSDownloadPropertyStoreRedownloadStatus
|| __DATA_CONST.__const _SSDownloadPropertyStoreSagaIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyStoreSoftwareVersionIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyStoreTransactionIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyStoreURL
|| __DATA_CONST.__const _SSDownloadPropertyStoreXID
|| __DATA_CONST.__const _SSDownloadPropertyThumbnailImageNewsstandBindingEdge
|| __DATA_CONST.__const _SSDownloadPropertyThumbnailImageNewsstandBindingType
|| __DATA_CONST.__const _SSDownloadPropertyThumbnailImageURL
|| __DATA_CONST.__const _SSDownloadPropertyTimeoutInterval
|| __DATA_CONST.__const _SSDownloadPropertyTitle
|| __DATA_CONST.__const _SSDownloadPropertyTransactionIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyVariantIdentifier
|| __DATA_CONST.__const _SSDownloadPropertyWorkName
|| __DATA_CONST.__const _SSDownloadSoftwareTypeNewsstand
|| __DATA_CONST.__const _SSDownloadThumbnailAvailableNotification
|| __DATA_CONST.__const _SSErrorAllowBioAuthenticationKey
|| __DATA_CONST.__const _SSErrorAllowRetryKey
|| __DATA_CONST.__const _SSErrorAskPermissionRequestIdentifier
|| __DATA_CONST.__const _SSErrorBiometricStatusCodeKey
|| __DATA_CONST.__const _SSErrorDomain
|| __DATA_CONST.__const _SSErrorHTTPStatusCodeKey
|| __DATA_CONST.__const _SSErrorInstallErrorNameKey
|| __DATA_CONST.__const _SSErrorKeychainStatusCodeKey
|| __DATA_CONST.__const _SSErrorMinimumNetworkTypeKey
|| __DATA_CONST.__const _SSErrorNetworkSizeLimitBytesKey
|| __DATA_CONST.__const _SSErrorNetworkSizeLimitKey
|| __DATA_CONST.__const _SSErrorSessionPropertyCustomerMessage
|| __DATA_CONST.__const _SSErrorSessionPropertyCustomerMessageTitle
|| __DATA_CONST.__const _SSErrorSessionPropertyFailureClientInfo
|| __DATA_CONST.__const _SSErrorSessionPropertyFailureType
|| __DATA_CONST.__const _SSErrorSessionPropertyNextActionURL
|| __DATA_CONST.__const _SSEventKeyClientIdentifier
|| __DATA_CONST.__const _SSEventKeyDownloadAssetIdentifier
|| __DATA_CONST.__const _SSEventKeyDownloadClass
|| __DATA_CONST.__const _SSEventKeyDownloadIdentifier
|| __DATA_CONST.__const _SSEventKeyDownloadKind
|| __DATA_CONST.__const _SSEventKeyItemCount
|| __DATA_CONST.__const _SSEventKeySizeInBytes
|| __DATA_CONST.__const _SSEventKeyURLString
|| __DATA_CONST.__const _SSEventNameAppUpdatesPollStart
|| __DATA_CONST.__const _SSEventNameAppUpdatesPollStop
|| __DATA_CONST.__const _SSEventNameDownloadStart
|| __DATA_CONST.__const _SSEventNameDownloadStop
|| __DATA_CONST.__const _SSEventNamePurchaseSucceeded
|| __DATA_CONST.__const _SSFollowUpClientIdentifier
|| __DATA_CONST.__const _SSFollowUpIdentifierRenewCredentials
|| __DATA_CONST.__const _SSHTTPArchiveShouldSaveToDiskDecompressedNotification
|| __DATA_CONST.__const _SSHTTPArchiveShouldSaveToDiskNotification
|| __DATA_CONST.__const _SSHTTPHeaderAppleGUID
|| __DATA_CONST.__const _SSHTTPHeaderAppleSerialNumber
|| __DATA_CONST.__const _SSHTTPHeaderGUID
|| __DATA_CONST.__const _SSHTTPHeaderICloudDSID
|| __DATA_CONST.__const _SSHTTPHeaderIfModifiedSince
|| __DATA_CONST.__const _SSHTTPHeaderLastModified
|| __DATA_CONST.__const _SSHTTPHeaderUserAgent
|| __DATA_CONST.__const _SSHTTPHeaderXAppleADSID
|| __DATA_CONST.__const _SSHTTPHeaderXAppleAMD
|| __DATA_CONST.__const _SSHTTPHeaderXAppleAMDAction
|| __DATA_CONST.__const _SSHTTPHeaderXAppleAMDData
|| __DATA_CONST.__const _SSHTTPHeaderXAppleAMDM
|| __DATA_CONST.__const _SSHTTPHeaderXAppleAMDS
|| __DATA_CONST.__const _SSHTTPHeaderXAppleAPSDeliveryType
|| __DATA_CONST.__const _SSHTTPHeaderXAppleActionSignature
|| __DATA_CONST.__const _SSHTTPHeaderXAppleAllowAuthTypes
|| __DATA_CONST.__const _SSHTTPHeaderXAppleAllowLiteAccountConversion
|| __DATA_CONST.__const _SSHTTPHeaderXAppleClientIdentifier
|| __DATA_CONST.__const _SSHTTPHeaderXAppleConnectionType
|| __DATA_CONST.__const _SSHTTPHeaderXAppleDSID
|| __DATA_CONST.__const _SSHTTPHeaderXAppleGSToken
|| __DATA_CONST.__const _SSHTTPHeaderXAppleJingleCorrelationKey
|| __DATA_CONST.__const _SSHTTPHeaderXAppleMD
|| __DATA_CONST.__const _SSHTTPHeaderXAppleMDAction
|| __DATA_CONST.__const _SSHTTPHeaderXAppleMDData
|| __DATA_CONST.__const _SSHTTPHeaderXAppleMDM
|| __DATA_CONST.__const _SSHTTPHeaderXAppleMDS
|| __DATA_CONST.__const _SSHTTPHeaderXAppleMMeClientInfo
|| __DATA_CONST.__const _SSHTTPHeaderXAppleMMeDeviceID
|| __DATA_CONST.__const _SSHTTPHeaderXAppleMMeMultiUser
|| __DATA_CONST.__const _SSHTTPHeaderXAppleRequestStoreFront
|| __DATA_CONST.__const _SSHTTPHeaderXAppleRequestingBundleID
|| __DATA_CONST.__const _SSHTTPHeaderXAppleRequestingBundleVersion
|| __DATA_CONST.__const _SSHTTPHeaderXAppleSoftwareCUID
|| __DATA_CONST.__const _SSHTTPHeaderXAppleStoreFront
|| __DATA_CONST.__const _SSHTTPHeaderXAppleTADevice
|| __DATA_CONST.__const _SSHTTPHeaderXAppleTouchIDAction
|| __DATA_CONST.__const _SSHTTPHeaderXAppleTouchIDChallenge
|| __DATA_CONST.__const _SSHTTPHeaderXAppleTouchIDPublicKey
|| __DATA_CONST.__const _SSHTTPHeaderXAppleTouchIDPublicKeyIdentifier
|| __DATA_CONST.__const _SSHTTPHeaderXAppleTouchIDSignature
|| __DATA_CONST.__const _SSHTTPHeaderXAppleTouchIDSignatureVersion
|| __DATA_CONST.__const _SSHTTPHeaderXAppleTouchIDState
|| __DATA_CONST.__const _SSHTTPHeaderXSetAppleStoreFront
|| __DATA_CONST.__const _SSHTTPHeaderXToken
|| __DATA_CONST.__const _SSHTTPHeaderXTokenType
|| __DATA_CONST.__const _SSItemArtworKindSoftwareIcon
|| __DATA_CONST.__const _SSItemArtworKindSoftwareScreenshot
|| __DATA_CONST.__const _SSItemArtworKindTabBarItem
|| __DATA_CONST.__const _SSItemArtworKindTabBarItemMoreList
|| __DATA_CONST.__const _SSItemArtworKindTabBarItemMoreListSelected
|| __DATA_CONST.__const _SSItemArtworKindTabBarItemSelected
|| __DATA_CONST.__const _SSItemArtworkKeyNewsstandBindingEdge
|| __DATA_CONST.__const _SSItemArtworkKeyNewsstandBindingType
|| __DATA_CONST.__const _SSItemArtworkKindDownloadQueueThumbnail
|| __DATA_CONST.__const _SSItemArtworkKindNewsstandIcon
|| __DATA_CONST.__const _SSItemArtworkKindSoftwareIcon
|| __DATA_CONST.__const _SSItemArtworkKindSoftwareScreenshot
|| __DATA_CONST.__const _SSItemArtworkKindSoftwareScreenshotThumbnail
|| __DATA_CONST.__const _SSItemKindAlbum
|| __DATA_CONST.__const _SSItemKindArtist
|| __DATA_CONST.__const _SSItemKindAudioBook
|| __DATA_CONST.__const _SSItemKindCourse
|| __DATA_CONST.__const _SSItemKindDocument
|| __DATA_CONST.__const _SSItemKindEBook
|| __DATA_CONST.__const _SSItemKindITunesU
|| __DATA_CONST.__const _SSItemKindLink
|| __DATA_CONST.__const _SSItemKindMix
|| __DATA_CONST.__const _SSItemKindMovie
|| __DATA_CONST.__const _SSItemKindMusicVideo
|| __DATA_CONST.__const _SSItemKindNewsstand
|| __DATA_CONST.__const _SSItemKindNowPlaying
|| __DATA_CONST.__const _SSItemKindOSUpdate
|| __DATA_CONST.__const _SSItemKindPDF
|| __DATA_CONST.__const _SSItemKindPodcast
|| __DATA_CONST.__const _SSItemKindPodcastEpisode
|| __DATA_CONST.__const _SSItemKindRingtone
|| __DATA_CONST.__const _SSItemKindSoftware
|| __DATA_CONST.__const _SSItemKindSoftwareUpdate
|| __DATA_CONST.__const _SSItemKindSong
|| __DATA_CONST.__const _SSItemKindTVEpisode
|| __DATA_CONST.__const _SSItemKindTVSeason
|| __DATA_CONST.__const _SSItemKindTone
|| __DATA_CONST.__const _SSItemKindWemix
|| __DATA_CONST.__const _SSItemLookupParameterITunesStoreIdentifier
|| __DATA_CONST.__const _SSItemLookupParameterPersistentIdentifier
|| __DATA_CONST.__const _SSItemMediaKindAudio
|| __DATA_CONST.__const _SSItemMediaKindDocument
|| __DATA_CONST.__const _SSItemMediaKindSoftware
|| __DATA_CONST.__const _SSItemMediaKindUnknown
|| __DATA_CONST.__const _SSItemMediaKindVideo
|| __DATA_CONST.__const _SSItemOfferActionTypeBuy
|| __DATA_CONST.__const _SSItemOfferActionTypeLink
|| __DATA_CONST.__const _SSItemOfferIdentifierAudioPodcast
|| __DATA_CONST.__const _SSItemOfferIdentifierDocument
|| __DATA_CONST.__const _SSItemOfferIdentifierHDVideo
|| __DATA_CONST.__const _SSItemOfferIdentifierHDVideoPreorder
|| __DATA_CONST.__const _SSItemOfferIdentifierHDVideoRedownload
|| __DATA_CONST.__const _SSItemOfferIdentifierHDVideoRental
|| __DATA_CONST.__const _SSItemOfferIdentifierITunesPlus
|| __DATA_CONST.__const _SSItemOfferIdentifierITunesPlusPreorder
|| __DATA_CONST.__const _SSItemOfferIdentifierITunesPlusRedownload
|| __DATA_CONST.__const _SSItemOfferIdentifierLCVideoRental
|| __DATA_CONST.__const _SSItemOfferIdentifierSDVideoRental
|| __DATA_CONST.__const _SSItemOfferIdentifierSoftwareUpdate
|| __DATA_CONST.__const _SSItemOfferIdentifierStandard
|| __DATA_CONST.__const _SSItemOfferIdentifierStandardPreorder
|| __DATA_CONST.__const _SSItemOfferIdentifierStandardRedownload
|| __DATA_CONST.__const _SSItemOfferIdentifierVideoPodcast
|| __DATA_CONST.__const _SSItemOfferPropertyExitAfterPurchase
|| __DATA_CONST.__const _SSItemOfferProtocolKeyIsPreOrder
|| __DATA_CONST.__const _SSItemProtocolKeyStoreOffers
|| __DATA_CONST.__const _SSItemRelationTypeCustomersAlsoBought
|| __DATA_CONST.__const _SSItemToneStyleRingtone
|| __DATA_CONST.__const _SSItemToneStyleTextTone
|| __DATA_CONST.__const _SSKeyValueStoreKeyDefaultAccountName
|| __DATA_CONST.__const _SSLogSubsystemStoreServices
|| __DATA_CONST.__const _SSLookupItemOfferSubscriptionTypePodcast
|| __DATA_CONST.__const _SSLookupItemOfferTextTypeDownloaded
|| __DATA_CONST.__const _SSLookupItemOfferTextTypeDownloading
|| __DATA_CONST.__const _SSLookupItemOfferTextTypeLong
|| __DATA_CONST.__const _SSLookupItemOfferTextTypeMedium
|| __DATA_CONST.__const _SSLookupItemOfferTextTypeShort
|| __DATA_CONST.__const _SSLookupKeyProfileLockup
|| __DATA_CONST.__const _SSLookupKeyProfilePlay
|| __DATA_CONST.__const _SSLookupKeyProfilePlaylistProduct
|| __DATA_CONST.__const _SSLookupKeyProfileProduct
|| __DATA_CONST.__const _SSLookupKeyProfileProductDirectView
|| __DATA_CONST.__const _SSLookupKeyProfileURL
|| __DATA_CONST.__const _SSLookupParameterBundleIdentifiers
|| __DATA_CONST.__const _SSLookupParameterCaller
|| __DATA_CONST.__const _SSLookupParameterImageProfile
|| __DATA_CONST.__const _SSLookupParameterItemIdentifiers
|| __DATA_CONST.__const _SSLookupParameterKeyProfile
|| __DATA_CONST.__const _SSLookupParameterPointOfInterestIdentifier
|| __DATA_CONST.__const _SSLookupParameterPointOfInterestProviderIdentifier
|| __DATA_CONST.__const _SSLookupParameterPointOfInterestProviderURLString
|| __DATA_CONST.__const _SSLookupParameterProtocolVersion
|| __DATA_CONST.__const _SSLookupPropertyAdvisories
|| __DATA_CONST.__const _SSLookupPropertyArtistName
|| __DATA_CONST.__const _SSLookupPropertyArtistURL
|| __DATA_CONST.__const _SSLookupPropertyArtwork
|| __DATA_CONST.__const _SSLookupPropertyBundleIdentifier
|| __DATA_CONST.__const _SSLookupPropertyContentRating
|| __DATA_CONST.__const _SSLookupPropertyContentRatingName
|| __DATA_CONST.__const _SSLookupPropertyCopyright
|| __DATA_CONST.__const _SSLookupPropertyDescription
|| __DATA_CONST.__const _SSLookupPropertyDescriptionStandard
|| __DATA_CONST.__const _SSLookupPropertyDisplayName
|| __DATA_CONST.__const _SSLookupPropertyGenreNames
|| __DATA_CONST.__const _SSLookupPropertyHasInAppPurchases
|| __DATA_CONST.__const _SSLookupPropertyIsAuthenticated
|| __DATA_CONST.__const _SSLookupPropertyIsGameCenter
|| __DATA_CONST.__const _SSLookupPropertyIsPOIBased
|| __DATA_CONST.__const _SSLookupPropertyItemIdentifier
|| __DATA_CONST.__const _SSLookupPropertyKind
|| __DATA_CONST.__const _SSLookupPropertyLicenseAgreementURL
|| __DATA_CONST.__const _SSLookupPropertyName
|| __DATA_CONST.__const _SSLookupPropertyNewsstandArtwork
|| __DATA_CONST.__const _SSLookupPropertyOffers
|| __DATA_CONST.__const _SSLookupPropertyPrivacyPolicyURL
|| __DATA_CONST.__const _SSLookupPropertyProductURL
|| __DATA_CONST.__const _SSLookupPropertyReleaseDate
|| __DATA_CONST.__const _SSLookupPropertyRequiredCapabilities
|| __DATA_CONST.__const _SSLookupPropertyRequirementsDescription
|| __DATA_CONST.__const _SSLookupPropertyResults
|| __DATA_CONST.__const _SSLookupPropertyScreenshotTypeIPad
|| __DATA_CONST.__const _SSLookupPropertyScreenshotTypeIPhone
|| __DATA_CONST.__const _SSLookupPropertyScreenshotTypeIPhone5
|| __DATA_CONST.__const _SSLookupPropertyScreenshots
|| __DATA_CONST.__const _SSLookupPropertyShortProductURL
|| __DATA_CONST.__const _SSLookupPropertySoftwareInfo
|| __DATA_CONST.__const _SSLookupPropertyStandardNotes
|| __DATA_CONST.__const _SSLookupPropertyStatus
|| __DATA_CONST.__const _SSLookupPropertyStoreNotes
|| __DATA_CONST.__const _SSLookupPropertySupportURL
|| __DATA_CONST.__const _SSLookupPropertyUserRatingCount
|| __DATA_CONST.__const _SSLookupPropertyUserRatingCountCurrentVersion
|| __DATA_CONST.__const _SSLookupPropertyUserRatingInfo
|| __DATA_CONST.__const _SSLookupPropertyUserRatingValue
|| __DATA_CONST.__const _SSLookupPropertyUserRatingValueCurrentVersion
|| __DATA_CONST.__const _SSMetricsActionTypeActivate
|| __DATA_CONST.__const _SSMetricsActionTypeAdd
|| __DATA_CONST.__const _SSMetricsActionTypeBack
|| __DATA_CONST.__const _SSMetricsActionTypeBuy
|| __DATA_CONST.__const _SSMetricsActionTypeCancel
|| __DATA_CONST.__const _SSMetricsActionTypeClear
|| __DATA_CONST.__const _SSMetricsActionTypeDelete
|| __DATA_CONST.__const _SSMetricsActionTypeDialog
|| __DATA_CONST.__const _SSMetricsActionTypeDismiss
|| __DATA_CONST.__const _SSMetricsActionTypeDownload
|| __DATA_CONST.__const _SSMetricsActionTypeFocus
|| __DATA_CONST.__const _SSMetricsActionTypeLaunchApp
|| __DATA_CONST.__const _SSMetricsActionTypeNavigate
|| __DATA_CONST.__const _SSMetricsActionTypeSearch
|| __DATA_CONST.__const _SSMetricsActionTypeSelect
|| __DATA_CONST.__const _SSMetricsActionTypeSheet
|| __DATA_CONST.__const _SSMetricsActionTypeSort
|| __DATA_CONST.__const _SSMetricsActionTypeStop
|| __DATA_CONST.__const _SSMetricsDialogEventActionTypeAuthenticate
|| __DATA_CONST.__const _SSMetricsDialogEventActionTypeBiometricAnalyze
|| __DATA_CONST.__const _SSMetricsDialogEventActionTypeCancel
|| __DATA_CONST.__const _SSMetricsDialogEventActionTypeCancelHomeButton
|| __DATA_CONST.__const _SSMetricsDialogEventActionTypeEnterPassword
|| __DATA_CONST.__const _SSMetricsDialogEventActionTypeEnterPasswordCancelled
|| __DATA_CONST.__const _SSMetricsDialogEventActionTypeEnterPasswordPressed
|| __DATA_CONST.__const _SSMetricsDialogEventActionTypeNavigate
|| __DATA_CONST.__const _SSMetricsDialogEventActionTypeOK
|| __DATA_CONST.__const _SSMetricsDialogEventActionTypeOpen
|| __DATA_CONST.__const _SSMetricsDialogEventIdBiometricsPrompt
|| __DATA_CONST.__const _SSMetricsDialogEventIdEnableTouchIdPurchases
|| __DATA_CONST.__const _SSMetricsDialogEventIdExistingOrCreate
|| __DATA_CONST.__const _SSMetricsDialogEventIdPassword
|| __DATA_CONST.__const _SSMetricsDialogEventIdPaymentSheet
|| __DATA_CONST.__const _SSMetricsDialogEventIdUserNamePassword
|| __DATA_CONST.__const _SSMetricsDialogEventReasonError
|| __DATA_CONST.__const _SSMetricsDialogEventReasonInvalidCredentials
|| __DATA_CONST.__const _SSMetricsDialogEventReasonPaymentSheetPresentationFailure
|| __DATA_CONST.__const _SSMetricsDialogEventReasonPaymentSheetTimeout
|| __DATA_CONST.__const _SSMetricsDialogEventResultFailure
|| __DATA_CONST.__const _SSMetricsDialogEventResultSuccess
|| __DATA_CONST.__const _SSMetricsDialogEventResultUnknown
|| __DATA_CONST.__const _SSMetricsDialogEventTargetIdBiometrics
|| __DATA_CONST.__const _SSMetricsDialogEventTargetIdCancel
|| __DATA_CONST.__const _SSMetricsDialogEventTargetIdCreateNewAccount
|| __DATA_CONST.__const _SSMetricsDialogEventTargetIdEnterPassword
|| __DATA_CONST.__const _SSMetricsDialogEventTargetIdIForgot
|| __DATA_CONST.__const _SSMetricsDialogEventTargetIdNotNow
|| __DATA_CONST.__const _SSMetricsDialogEventTargetIdOK
|| __DATA_CONST.__const _SSMetricsDialogEventTargetIdOpen
|| __DATA_CONST.__const _SSMetricsDialogEventTargetIdUseExisting
|| __DATA_CONST.__const _SSMetricsDialogEventTypeOKCancel
|| __DATA_CONST.__const _SSMetricsDialogEventTypeSignIn
|| __DATA_CONST.__const _SSMetricsEventCanaryKey
|| __DATA_CONST.__const _SSMetricsEventTableEntityEventBody
|| __DATA_CONST.__const _SSMetricsEventTableEntityPID
|| __DATA_CONST.__const _SSMetricsEventTableEntityReportURL
|| __DATA_CONST.__const _SSMetricsEventTableEntitySuppressDsid
|| __DATA_CONST.__const _SSMetricsEventTableEntityTimestampInserted
|| __DATA_CONST.__const _SSMetricsEventTableEntityTimestampReported
|| __DATA_CONST.__const _SSMetricsEventTypeAccount
|| __DATA_CONST.__const _SSMetricsEventTypeAppInstall
|| __DATA_CONST.__const _SSMetricsEventTypeClick
|| __DATA_CONST.__const _SSMetricsEventTypeDialog
|| __DATA_CONST.__const _SSMetricsEventTypeEnter
|| __DATA_CONST.__const _SSMetricsEventTypeExit
|| __DATA_CONST.__const _SSMetricsEventTypeImpressions
|| __DATA_CONST.__const _SSMetricsEventTypeLoadURL
|| __DATA_CONST.__const _SSMetricsEventTypeLog
|| __DATA_CONST.__const _SSMetricsEventTypeMedia
|| __DATA_CONST.__const _SSMetricsEventTypePage
|| __DATA_CONST.__const _SSMetricsEventTypePurchase
|| __DATA_CONST.__const _SSMetricsEventTypeSearch
|| __DATA_CONST.__const _SSMetricsFieldNameAdamID
|| __DATA_CONST.__const _SSMetricsFieldNameFeaturedContentKind
|| __DATA_CONST.__const _SSMetricsFieldNameLongName
|| __DATA_CONST.__const _SSMetricsFieldNameShortName
|| __DATA_CONST.__const _SSMetricsFieldNameType
|| __DATA_CONST.__const _SSMetricsMediaEventTypeEnd
|| __DATA_CONST.__const _SSMetricsMediaEventTypePaused
|| __DATA_CONST.__const _SSMetricsMediaEventTypePlay
|| __DATA_CONST.__const _SSMetricsMediaEventTypeStop
|| __DATA_CONST.__const _SSMetricsNavigationTypeBack
|| __DATA_CONST.__const _SSMetricsNavigationTypeForward
|| __DATA_CONST.__const _SSMetricsTargetTypeBrick
|| __DATA_CONST.__const _SSMetricsTargetTypeButton
|| __DATA_CONST.__const _SSMetricsTargetTypeEditorial
|| __DATA_CONST.__const _SSMetricsTargetTypeFlowcaseItem
|| __DATA_CONST.__const _SSMetricsTargetTypeLink
|| __DATA_CONST.__const _SSMetricsTargetTypeList
|| __DATA_CONST.__const _SSMetricsTargetTypeListItem
|| __DATA_CONST.__const _SSMetricsTargetTypeLockup
|| __DATA_CONST.__const _SSMetricsTargetTypePreview
|| __DATA_CONST.__const _SSMetricsTargetTypeSearchRelated
|| __DATA_CONST.__const _SSMetricsTargetTypeTab
|| __DATA_CONST.__const _SSMetricsTargetTypeTabItem
|| __DATA_CONST.__const _SSMetricsTargetTypeTextField
|| __DATA_CONST.__const _SSMetricsURLBagKey
|| __DATA_CONST.__const _SSNotificationTriggerDownloads
|| __DATA_CONST.__const _SSPaymentSheetAppleIDReplacementPattern
|| __DATA_CONST.__const _SSPaymentSheetAppleIDUppercaseReplacementPattern
|| __DATA_CONST.__const _SSPrivacyIdentifierAppStore
|| __DATA_CONST.__const _SSPrivacyIdentifierMusicStore
|| __DATA_CONST.__const _SSPrivacyIdentifierPodcastsStore
|| __DATA_CONST.__const _SSPrivacyIdentifierTVApp
|| __DATA_CONST.__const _SSPrivacyIdentifierVideoStore
|| __DATA_CONST.__const _SSPrivacyIdentifieriBooksStore
|| __DATA_CONST.__const _SSPrivacyIdentifieriTunesStore
|| __DATA_CONST.__const _SSPrivacyIdentifieriTunesU
|| __DATA_CONST.__const _SSProtocolConditionPlatformIPad
|| __DATA_CONST.__const _SSProtocolConditionPlatformIPhone
|| __DATA_CONST.__const _SSProtocolConditionPlatformIPod
|| __DATA_CONST.__const _SSPurchaseErrorKeyShouldCancelPurchaseBatch
|| __DATA_CONST.__const _SSPurchaseHistoryPropertyBundleIdentifier
|| __DATA_CONST.__const _SSRemoteNotificationButtonKeyClientActionDeepLink
|| __DATA_CONST.__const _SSRemoteNotificationButtonKeyMetrics
|| __DATA_CONST.__const _SSRemoteNotificationButtonKeyServerAction
|| __DATA_CONST.__const _SSRemoteNotificationButtonKeyServerActionBody
|| __DATA_CONST.__const _SSRemoteNotificationButtonKeyServerActionHeaders
|| __DATA_CONST.__const _SSRemoteNotificationButtonKeyServerActionMethod
|| __DATA_CONST.__const _SSRemoteNotificationButtonKeyServerActionUrl
|| __DATA_CONST.__const _SSRemoteNotificationButtonKeyTitle
|| __DATA_CONST.__const _SSRemoteNotificationButtonKeyType
|| __DATA_CONST.__const _SSRemoteNotificationClientDidReceiveNotifications
|| __DATA_CONST.__const _SSRemoteNotificationKeyAPS
|| __DATA_CONST.__const _SSRemoteNotificationKeyAccountCredit
|| __DATA_CONST.__const _SSRemoteNotificationKeyAccountIdentifier
|| __DATA_CONST.__const _SSRemoteNotificationKeyActionType
|| __DATA_CONST.__const _SSRemoteNotificationKeyAlertType
|| __DATA_CONST.__const _SSRemoteNotificationKeyBuyParams
|| __DATA_CONST.__const _SSRemoteNotificationKeyClientIdentifier
|| __DATA_CONST.__const _SSRemoteNotificationKeyDelayedGotoIdentifier
|| __DATA_CONST.__const _SSRemoteNotificationKeyDownloadKinds
|| __DATA_CONST.__const _SSRemoteNotificationKeyFamilyIdentifier
|| __DATA_CONST.__const _SSRemoteNotificationKeyNotificationClass
|| __DATA_CONST.__const _SSRemoteNotificationKeyRemovedAccountIdentifier
|| __DATA_CONST.__const _SSRemoteNotificationKeyURLString
|| __DATA_CONST.__const _SSResponseActionTypeCheckDownloadQueues
|| __DATA_CONST.__const _SSResponseActionTypeCheckInAppPurchaseQueue
|| __DATA_CONST.__const _SSResponseActionTypeDismissCurrentPage
|| __DATA_CONST.__const _SSResponseActionTypeGotoURL
|| __DATA_CONST.__const _SSResponseActionTypeInvalidateURLBags
|| __DATA_CONST.__const _SSResponseActionTypeOpenURL
|| __DATA_CONST.__const _SSResponseActionTypeRefreshSubscriptionStatus
|| __DATA_CONST.__const _SSResponseActionTypeRetryRestoreDownloads
|| __DATA_CONST.__const _SSResponseActionTypeSelectFooterSection
|| __DATA_CONST.__const _SSResponseActionTypeSetAccountCredits
|| __DATA_CONST.__const _SSResponseActionTypeSetActiveAccount
|| __DATA_CONST.__const _SSResponseActionTypeShowDialog
|| __DATA_CONST.__const _SSResponseActionTypeShowTouchIDDialog
|| __DATA_CONST.__const _SSRestrictionsExplicitUUID
|| __DATA_CONST.__const _SSSQLEntityPropertyPersistentID
|| __DATA_CONST.__const _SSSQLiteOrderAscending
|| __DATA_CONST.__const _SSSQLiteOrderDescending
|| __DATA_CONST.__const _SSScriptSafariViewControllerDataUpdateNotification
|| __DATA_CONST.__const _SSScriptURLSafariDataUpdate
|| __DATA_CONST.__const _SSServerErrorDomain
|| __DATA_CONST.__const _SSServerPromptIdentifierAutomaticDownloadsAvailable
|| __DATA_CONST.__const _SSSoftwareLibraryItemBundleIdentifier
|| __DATA_CONST.__const _SSSoftwareLibraryItemBundleVersion
|| __DATA_CONST.__const _SSSoftwareLibraryItemPropertyCompany
|| __DATA_CONST.__const _SSSoftwareLibraryItemPropertyFamilyAccountIdentifier
|| __DATA_CONST.__const _SSSoftwareLibraryItemPropertyITunesAccountIdentifier
|| __DATA_CONST.__const _SSSoftwareLibraryItemPropertyITunesItemIdentifier
|| __DATA_CONST.__const _SSSoftwareLibraryItemPropertyITunesVersionIdentifier
|| __DATA_CONST.__const _SSSoftwareLibraryItemPropertyReferrerAppName
|| __DATA_CONST.__const _SSSoftwareLibraryItemPropertyReferrerURL
|| __DATA_CONST.__const _SSSoftwareLibraryItemPropertyTitle
|| __DATA_CONST.__const _SSSoftwareLibraryItemPropertyTransitDataURL
|| __DATA_CONST.__const _SSSoftwareLibraryRestoreOptionIsBackground
|| __DATA_CONST.__const _SSSoftwareUpdateSoftwareTypeNewsstand
|| __DATA_CONST.__const _SSSoftwareUpdateSoftwareTypeRegular
|| __DATA_CONST.__const _SSSoftwareUpdatesStoreDidChangeNotification
|| __DATA_CONST.__const _SSURLBagKeyGetShareIdentifiers
|| __DATA_CONST.__const _SSURLBagKeyIForgot
|| __DATA_CONST.__const _SSUpdatableAssetCacheManagerErrorDomain
|| __DATA_CONST.__const _SSUpdatableAssetControllerAssetsDidUpdateNotification
|| __DATA_CONST.__const _SSUpdatableAssetControllerErrorDomain
|| __DATA_CONST.__const _SSUpdatableAssetManifestJSONParserErrorDomain
|| __DATA_CONST.__const _SSUserNotificationKeyAccountName
|| __DATA_CONST.__const _SSUserNotificationKeyAttemptNumber
|| __DATA_CONST.__const _SSVCookieStorageSharedCookiesDidChangeNotification
|| __DATA_CONST.__const _SSVDeviceCarrierBundlingStatusDidChangeNotification
|| __DATA_CONST.__const _SSVDirectUploadKindFuse
|| __DATA_CONST.__const _SSVFairPlayErrorDomain
|| __DATA_CONST.__const _SSVFairPlaySubscriptionControllerSubscriptionStatusDidChangeNotification
|| __DATA_CONST.__const _SSVFamilyContentDeletionNotification
|| __DATA_CONST.__const _SSVLookupItemArtworkColorKindBackground
|| __DATA_CONST.__const _SSVLookupItemArtworkColorKindText1
|| __DATA_CONST.__const _SSVLookupItemArtworkColorKindText2
|| __DATA_CONST.__const _SSVLookupItemArtworkColorKindText3
|| __DATA_CONST.__const _SSVLookupItemArtworkColorKindText4
|| __DATA_CONST.__const _SSVLookupItemArtworkCropStyleBoundedBox
|| __DATA_CONST.__const _SSVLookupItemArtworkCropStyleConstrainedHeight
|| __DATA_CONST.__const _SSVLookupItemArtworkCropStyleConstrainedWidth
|| __DATA_CONST.__const _SSVLookupItemArtworkCropStyleFCCrop270
|| __DATA_CONST.__const _SSVLookupItemArtworkCropStyleFCCrop44
|| __DATA_CONST.__const _SSVLookupItemArtworkCropStyleSourceSize
|| __DATA_CONST.__const _SSVLookupItemArtworkCropStyleSpecificRectangle
|| __DATA_CONST.__const _SSVLookupItemArtworkCropStyleSquareCenterCrop
|| __DATA_CONST.__const _SSVLookupItemArtworkFormatJPG
|| __DATA_CONST.__const _SSVLookupItemArtworkFormatPNG
|| __DATA_CONST.__const _SSVMediaContentTasteControllerItemsDidChangeNotification
|| __DATA_CONST.__const _SSVMediaSocialAdminPermissionsOptionIgnoreCache
|| __DATA_CONST.__const _SSVMediaSocialPostAttachmentRelationshipCoverImage
|| __DATA_CONST.__const _SSVMediaSocialPostAuthorTypeArtist
|| __DATA_CONST.__const _SSVMediaSocialPostAuthorTypeBrand
|| __DATA_CONST.__const _SSVMediaSocialPostAuthorTypeITunesBrand
|| __DATA_CONST.__const _SSVMediaSocialPostAuthorTypeUser
|| __DATA_CONST.__const _SSVMediaSocialPostExternalServiceFacebook
|| __DATA_CONST.__const _SSVMediaSocialPostExternalServiceTwitter
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeActivity
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeActivityCurator
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeAlbum
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeArtist
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeBrand
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeComment
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeITunesBrand
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeInterview
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeMusicVideo
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypePlaylist
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeRadio
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeTrack
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeUnknown
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeUploadedAudio
|| __DATA_CONST.__const _SSVMediaSocialPostItemTypeUploadedVideo
|| __DATA_CONST.__const _SSVMetricsConfigurationInternalSettingsChangedNotification
|| __DATA_CONST.__const _SSVMetricsInternalSettingReportingFrequency
|| __DATA_CONST.__const _SSVNetworkingDidStartNotification
|| __DATA_CONST.__const _SSVNetworkingDidStopNotification
|| __DATA_CONST.__const _SSVPlayActivityControllerDidRecordPlayActivityEventsNotification
|| __DATA_CONST.__const _SSVPlayActivityControllerEndpointIdentifierJingle
|| __DATA_CONST.__const _SSVPlayActivityControllerEndpointIdentifierPairedDevice
|| __DATA_CONST.__const _SSVPlayActivityControllerEndpointRevisionInformationDidChangeNotification
|| __DATA_CONST.__const _SSVPlayActivityControllerUserInfoKeyEndRevision
|| __DATA_CONST.__const _SSVPlayActivityControllerUserInfoKeyEndpointIdentifier
|| __DATA_CONST.__const _SSVPlayActivityControllerUserInfoKeyStartRevision
|| __DATA_CONST.__const _SSVPlayActivityFeedSerializationPlayEventsDictionaryKeyEvents
|| __DATA_CONST.__const _SSVPlayActivityFeedSerializationPlayEventsDictionaryKeyOverrideHeaders
|| __DATA_CONST.__const _SSVPlayInfoPlaybackTypeSubscriptionLeaseRenew
|| __DATA_CONST.__const _SSVPlayInfoPlaybackTypeSubscriptionLeaseStart
|| __DATA_CONST.__const _SSVPlaybackAssetFlavor1080P
|| __DATA_CONST.__const _SSVPlaybackAssetFlavor480P
|| __DATA_CONST.__const _SSVPlaybackAssetFlavor720P
|| __DATA_CONST.__const _SSVPlaybackAssetFlavorHDMV
|| __DATA_CONST.__const _SSVPlaybackAssetFlavorHQ
|| __DATA_CONST.__const _SSVPlaybackAssetFlavorLW
|| __DATA_CONST.__const _SSVPlaybackAssetFlavorLWHQ
|| __DATA_CONST.__const _SSVPlaybackAssetFlavorSDMV
|| __DATA_CONST.__const _SSVPlaybackAssetFlavorSLW
|| __DATA_CONST.__const _SSVPlaybackLeaseAssetFlavorHQ
|| __DATA_CONST.__const _SSVPlaybackLeaseAssetFlavorLW
|| __DATA_CONST.__const _SSVPlaybackLeaseAssetFlavorLWHQ
|| __DATA_CONST.__const _SSVPlaybackLeaseAssetFlavorSLW
|| __DATA_CONST.__const _SSVPlaybackLeaseRequestParameterAdamIdentifier
|| __DATA_CONST.__const _SSVPlaybackLeaseRequestParameterAssetSourceStoreFrontIdentifier
|| __DATA_CONST.__const _SSVPlaybackLeaseURLBagKeyCertificateURL
|| __DATA_CONST.__const _SSVPlaybackResponseErrorUserInfoKeyDialogDictionary
|| __DATA_CONST.__const _SSVPushNotificationTypeBookkeeper
|| __DATA_CONST.__const _SSVPushNotificationTypePurchase
|| __DATA_CONST.__const _SSVRedeemCodeMetadataQueryParameterRedeemCode
|| __DATA_CONST.__const _SSVRedeemCodeMetadataURLBagKey
|| __DATA_CONST.__const _SSVRedeemCodeTypeFreeProduct
|| __DATA_CONST.__const _SSVRedeemCodeTypeGiftCertificate
|| __DATA_CONST.__const _SSVSecureKeyDeliveryErrorDomain
|| __DATA_CONST.__const _SSVSecureKeyDeliveryErrorUserInfoKeyDialogDictionary
|| __DATA_CONST.__const _SSVSecureKeyDeliveryErrorUserInfoKeyResponseStatus
|| __DATA_CONST.__const _SSVSecureKeyDeliveryErrorUserInfoKeyResponseVersion
|| __DATA_CONST.__const _SSVSecureKeyDeliveryErrorUserInfoKeyServerError
|| __DATA_CONST.__const _SSVSubscriptionAccountPermissionAdministrator
|| __DATA_CONST.__const _SSVSubscriptionAccountPermissionSocialPost
|| __DATA_CONST.__const _SSVSubscriptionStatusAccessPolicyDidChangeNotification
|| __DATA_CONST.__const _SSVSubscriptionStatusDidChangeNotification
|| __DATA_CONST.__const _SSVSubscriptionStatusOptionAllowsExpiredStatuses
|| __DATA_CONST.__const _SSVSubscriptionStatusOptionAuthenticatesIfNecessary
|| __DATA_CONST.__const _SSVSubscriptionStatusOptionIgnoreCache
|| __DATA_CONST.__const _SSVSubscriptionStatusOptionLocalizedAuthenticationReason
|| __DATA_CONST.__const _SSVSubscriptionStatusOptionReason
|| __DATA_CONST.__const _SSVSubscriptionStatusRequestReasonDeepLink
|| __DATA_CONST.__const _SSVSubscriptionStatusRequestReasonDefault
|| __DATA_CONST.__const _SSVTelephonyOperatorNameDidChangeNotification
|| __DATA_CONST.__const _SSVTelephonyPhoneNumberDidChangeNotification
|| __DATA_CONST.__const _SSVTelephonyRegistrationDidChangeNotification
|| __DATA_CONST.__const _SSVURLBagKeyAMDDomains
|| __DATA_CONST.__const _SSVURLBagKeyMescalCertificateURL
|| __DATA_CONST.__const _SSVURLBagKeyMescalPrimingURL
|| __DATA_CONST.__const _SSVURLBagKeyMescalSetupURL
|| __DATA_CONST.__const _SSVURLBagKeyMescalSignedActions
|| __DATA_CONST.__const _SSVURLBagKeyMescalSignedRequests
|| __DATA_CONST.__const _SSVURLBagKeyMescalSignedResponses
|| __DATA_CONST.__const _SSVURLBagKeyMusicAdminStatus
|| __DATA_CONST.__const _SSVURLBagKeyMusicCommon
|| __DATA_CONST.__const _SSVURLBagKeyMusicConnect
|| __DATA_CONST.__const _SSVURLBagKeyMusicSubscription
|| __DATA_CONST.__const _SSVURLBagKeyPastisCertificateURL
|| __DATA_CONST.__const _SSVURLBagKeyPastisKeyServerURL
|| __DATA_CONST.__const _SSVURLBagKeyStoreFrontSuffix
|| __DATA_CONST.__const _SSWatchMetricsEventKeyAdamId
|| __DATA_CONST.__const _SSWatchMetricsEventKeyAppExtensionVersion
|| __DATA_CONST.__const _SSWatchMetricsEventKeyAppExternalVersionID
|| __DATA_CONST.__const _SSWatchMetricsEventKeyBundleIdentifier
|| __DATA_CONST.__const _SSWatchMetricsEventKeyCohortID
|| __DATA_CONST.__const _SSWatchMetricsEventKeyDownloadVarietyID
|| __DATA_CONST.__const _SSWatchMetricsEventKeyEventType
|| __DATA_CONST.__const _SSWatchMetricsEventKeyInstallType
|| __DATA_CONST.__const _SSWatchMetricsEventKeyModel
|| __DATA_CONST.__const _SSWatchMetricsEventKeyOSVersion
|| __DATA_CONST.__const _SSWatchMetricsEventKeyPurchaserDSID
|| __DATA_CONST.__const _SSWatchMetricsEventKeyTimestamp
|| __DATA_CONST.__const _SSWatchMetricsEventKeyUserDSID
|| __DATA_CONST.__const _SSWatchMetricsEventKeyVersionString
|| __DATA_CONST.__const _SSWatchMetricsEventKeyWatchGUID
|| __DATA_CONST.__const _SSWatchMetricsEventKeyWatchSerial
|| __DATA_CONST.__const _SSWatchMetricsEventKeyWatchSize
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityAdamID
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityAppExtensionVersion
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityAppExternalVersionID
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityBundleIdentifier
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityCohortID
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityDownloadVarietyID
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityEventType
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityGuid
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityInstallType
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityModel
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityOsVersion
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityPid
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityPurchaserDSID
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityRetryCount
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityTimestampInserted
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityTimestampInstalled
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityTimestampReported
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityUserDSID
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityVersionString
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityWatchGuid
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityWatchSerial
|| __DATA_CONST.__const _SSWatchMetricsEventTableEntityWatchSize
|| __DATA_CONST.__const _SSWishlistErrorDomain
|| __DATA_CONST.__const _SSWishlistItemPropertyItemData
|| __DATA_CONST.__const _SSWishlistItemPropertyItemIdentifier
|| __DATA_CONST.__const _SSWishlistItemPropertyItemKind
|| __DATA_CONST.__const _SSWishlistItemPropertySortOrder
|| __DATA_CONST.__const _SSWishlistItemPropertyState
|| __DATA_CONST.__const _SSXPCInAppReviewSandboxToken
|| __DATA_CONST.__const _SSXPCPrivateServiceName
|| __DATA_CONST.__const __SSDownloadExternalPropertyDuetBudget
|| __DATA_CONST.__const _kCacheTimestampKey
|| __DATA_CONST.__const _kSSAppStoreUserDefaultsIdentifier
|| __DATA_CONST.__const _kSSBiometricsStateChangedNotification
|| __DATA_CONST.__const _kSSDaemonLaunchedNotification
|| __DATA_CONST.__const _kSSITunesStoreEntitlementAccounts
|| __DATA_CONST.__const _kSSITunesStoreEntitlementAskPermission
|| __DATA_CONST.__const _kSSITunesStoreEntitlementBiometrics
|| __DATA_CONST.__const _kSSITunesStoreEntitlementClaimApps
|| __DATA_CONST.__const _kSSITunesStoreEntitlementDownloadMonitor
|| __DATA_CONST.__const _kSSITunesStoreEntitlementDownloads
|| __DATA_CONST.__const _kSSITunesStoreEntitlementKBSync
|| __DATA_CONST.__const _kSSITunesStoreEntitlementKeyValueStore
|| __DATA_CONST.__const _kSSITunesStoreEntitlementLookup
|| __DATA_CONST.__const _kSSITunesStoreEntitlementMetrics
|| __DATA_CONST.__const _kSSITunesStoreEntitlementPurchase
|| __DATA_CONST.__const _kSSITunesStoreEntitlementPushNotifications
|| __DATA_CONST.__const _kSSITunesStoreEntitlementSoftwareLibrary
|| __DATA_CONST.__const _kSSITunesStoreEntitlementUpdates
|| __DATA_CONST.__const _kSSITunesStoreEntitlementUploads
|| __DATA_CONST.__const _kSSITunesStorePrivateEntitlement
|| __DATA_CONST.__const _kSSLockdownDomainITunesStore
|| __DATA_CONST.__const _kSSLockdownDomainITunesStoreDaemon
|| __DATA_CONST.__const _kSSLockdownKeyAccountAltDSID
|| __DATA_CONST.__const _kSSLockdownKeyAccountAvailableServiceTypes
|| __DATA_CONST.__const _kSSLockdownKeyAccountBagType
|| __DATA_CONST.__const _kSSLockdownKeyAccountCreditsString
|| __DATA_CONST.__const _kSSLockdownKeyAccountDSPersonID
|| __DATA_CONST.__const _kSSLockdownKeyAccountDidFallbackToPassword
|| __DATA_CONST.__const _kSSLockdownKeyAccountEnabledServiceTypes
|| __DATA_CONST.__const _kSSLockdownKeyAccountFirstName
|| __DATA_CONST.__const _kSSLockdownKeyAccountFreeDownloadsPasswordSetting
|| __DATA_CONST.__const _kSSLockdownKeyAccountID
|| __DATA_CONST.__const _kSSLockdownKeyAccountITunesPassSerialNumber
|| __DATA_CONST.__const _kSSLockdownKeyAccountIsManagedAppledId
|| __DATA_CONST.__const _kSSLockdownKeyAccountIsNewCustomer
|| __DATA_CONST.__const _kSSLockdownKeyAccountIsSocialEnabled
|| __DATA_CONST.__const _kSSLockdownKeyAccountKind
|| __DATA_CONST.__const _kSSLockdownKeyAccountLastName
|| __DATA_CONST.__const _kSSLockdownKeyAccountPaidPurchasesPasswordSetting
|| __DATA_CONST.__const _kSSLockdownKeyAccountSource
|| __DATA_CONST.__const _kSSLockdownKeyAccountStoreFrontID
|| __DATA_CONST.__const _kSSLockdownKeyAccountUserName
|| __DATA_CONST.__const _kSSLockdownKeyActiveLockerAccountID
|| __DATA_CONST.__const _kSSLockdownKeyCloudMediaCUID
|| __DATA_CONST.__const _kSSLockdownKeyDownloadedApps
|| __DATA_CONST.__const _kSSLockdownKeyKnownAccounts
|| __DATA_CONST.__const _kSSLockdownKeyLastCheckForPurchases
|| __DATA_CONST.__const _kSSLockdownKeyMediaCUID
|| __DATA_CONST.__const _kSSLockdownKeyPendingPurchaseTypes
|| __DATA_CONST.__const _kSSLockdownKeySoftwareCUID
|| __DATA_CONST.__const _kSSLockdownKeyStorefront
|| __DATA_CONST.__const _kSSLockdownKeyTransientStorefront
|| __DATA_CONST.__const _kSSNotificationAccountsChanged
|| __DATA_CONST.__const _kSSNotificationActiveAccountChanged
|| __DATA_CONST.__const _kSSNotificationApplicationInstalled
|| __DATA_CONST.__const _kSSNotificationAssetsUpdated
|| __DATA_CONST.__const _kSSNotificationAuthenticateBegan
|| __DATA_CONST.__const _kSSNotificationAuthenticateFailed
|| __DATA_CONST.__const _kSSNotificationAuthenticateFinished
|| __DATA_CONST.__const _kSSNotificationAuthenticateSubmitted
|| __DATA_CONST.__const _kSSNotificationAutomaticDownloadKindsChanged
|| __DATA_CONST.__const _kSSNotificationAutomaticDownloadSettingsChanged
|| __DATA_CONST.__const _kSSNotificationDownloadFinished
|| __DATA_CONST.__const _kSSNotificationDownloadMonitorChanged
|| __DATA_CONST.__const _kSSNotificationInvalidateURLBags
|| __DATA_CONST.__const _kSSNotificationNetworkTypeOverrideChanged
|| __DATA_CONST.__const _kSSNotificationReceivedPushNotification
|| __DATA_CONST.__const _kSSNotificationStorefrontChangedNotification
|| __DATA_CONST.__const _kSSNotificationTriggerDownloads
|| __DATA_CONST.__const _kSSNotificationUpdateQueueChanged
|| __DATA_CONST.__const _kSSNotificationUpdatesStoreChanged
|| __DATA_CONST.__const _kSSPurchaseRequestSucceededNotification
|| __DATA_CONST.__const _kSSRedeemRequestSucceededNotification
|| __DATA_CONST.__const _kSSStoreKitEntitlementClientOverride
|| __DATA_CONST.__const _kSSStoreKitEntitlementCloudServiceExemptedFromTCCAccess
|| __DATA_CONST.__const _kSSStoreKitEntitlementDeveloperRequestData
|| __DATA_CONST.__const _kSSStoreKitEntitlementRequestData
|| __DATA_CONST.__const _kSSUserDefaultsIdentifier
|| __DATA_CONST.__const _kSSUserDefaultsKeyAutoPlayVideoSetting
|| __DATA_CONST.__const _kSSUserDefaultsKeyAutoUpdatesEnabled
|| __DATA_CONST.__const _kSSUserDefaultsKeyInAppReviewEnabled
|| __DATA_CONST.__const _kSSUserDefaultsKeyLastLowPowerModeValue
|| __DATA_CONST.__const _kSSUserDefaultsKeyLastMotionAutoPlayVideoValue
|| __DATA_CONST.__const _kSSUserDefaultsKeyLastReduceMotionValue
|| __DATA_CONST.__const _kSSUserDefaultsKeyLastUserSetAutoPlayVideoValue
|| __DATA_CONST.__const _kSSUserDefaultsKeyLowPowerModeSetLastAutoPlayVideoValue
|| __DATA_CONST.__const _kSSUserDefaultsKeyMotionAutoPlayVideoSetLastAutoPlayVideoValue
|| __DATA_CONST.__const _kSSUserDefaultsKeyReduceMotionSetLastAutoPlayVideoValue
|| __DATA_CONST.__const _kSSUserDefaultsKeyUserSetAutoPlayVideoSetting
|| __DATA_CONST.__const _kSSVLoadMoreEndIDParameter
|| __DATA_CONST.__const _kSSVLoadMoreStartIDParameter
|| __DATA_CONST.__const _kSSVNotificationSubscriptionStatusCoordinatorChanged
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSAppIconDatabaseCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSAppImageDatabaseCacheEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSAppPurchaseHistoryCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSAppPurchaseHistoryDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSAppPurchaseHistoryDatabaseSchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSAuthenticateRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSAuthenticationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSBiometricAuthenticationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSCircularBuffer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDatabaseCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDatabaseCacheEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDictionaryResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDoubleLinkedList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDoubleLinkedListNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDownload
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDownloadManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDownloadManagerAppShim
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDownloadManagerBookShim2
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDownloadManagerOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDownloadPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDownloadPolicyApplicationState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDownloadPolicyRule
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDownloadPolicyUserDefaultState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSEntity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSEventMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSEventsTableBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSHTTPArchive
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSKeyValueStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSKeyValueStoreDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSKeyValueStoreSchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSKeyValueStoreSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSKeyValueStoreValueEntity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSLRUCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSLRUCacheItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSLockdown
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSLogConfig
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSLogFileOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMachineDataRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMemoryEntity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMetricsBaseEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMetricsConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMetricsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMetricsEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMetricsEventController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMetricsEventTable
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMetricsLoadURLEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMetricsMutableEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMetricsPageEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMetricsTimingDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMutableAuthenticationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMutableLogConfig
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSMutableURLRequestProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSPersistentCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSPrivacyController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSProtocolConditionalContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSProtocolConditionalEvaluator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSPurchaseManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSPurchaseResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSRestrictions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSRollableLog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSSQLiteComparisonPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSSQLiteCompoundPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSSQLiteContainsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSSQLiteDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSSQLiteEntity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSSQLitePredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSSQLitePropertyPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSSQLiteQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSSQLiteQueryDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSURLBag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSURLBagContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSURLConnectionResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSURLRequestProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSURLSessionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVAppleAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVCookieStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVFairPlaySAPSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVFairPlaySubscriptionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVLoadURLOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVMediaSocialAdminPermissionsCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVPushNotificationParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVPushNotificationRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVSAPSignatureComponent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVSAPSignaturePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVSubscriptionStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVSubscriptionStatusCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVSubscriptionStatusRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVTelephonyController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVURLBagInterpreter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVURLDataConsumer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVURLProtocolConsumer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSWatchMetricsEventsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSWeakReference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSXPCServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSAppIconDatabaseCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSAppImageDatabaseCacheEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSAppPurchaseHistoryCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSAppPurchaseHistoryDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSAppPurchaseHistoryDatabaseSchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSAuthenticateRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSAuthenticationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSBiometricAuthenticationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSCircularBuffer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDatabaseCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDatabaseCacheEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDictionaryResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDoubleLinkedList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDoubleLinkedListNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDownload
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDownloadManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDownloadManagerAppShim
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDownloadManagerBookShim2
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDownloadManagerOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDownloadPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDownloadPolicyApplicationState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDownloadPolicyRule
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDownloadPolicyUserDefaultState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSEntity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSEventMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSEventsTableBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSHTTPArchive
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSKeyValueStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSKeyValueStoreDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSKeyValueStoreSchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSKeyValueStoreSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSKeyValueStoreValueEntity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSLRUCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSLRUCacheItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSLockdown
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSLogConfig
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSLogFileOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMachineDataRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMemoryEntity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMetricsBaseEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMetricsConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMetricsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMetricsEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMetricsEventController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMetricsEventTable
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMetricsLoadURLEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMetricsMutableEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMetricsPageEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMetricsTimingDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMutableAuthenticationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMutableLogConfig
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSMutableURLRequestProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSPersistentCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSPrivacyController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSProtocolConditionalContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSProtocolConditionalEvaluator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSPurchaseManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSPurchaseResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSRestrictions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSRollableLog
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSSQLiteComparisonPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSSQLiteCompoundPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSSQLiteContainsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSSQLiteDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSSQLiteEntity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSSQLitePredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSSQLitePropertyPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSSQLiteQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSSQLiteQueryDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSURLBag
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSURLBagContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSURLConnectionResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSURLRequestProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSURLSessionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVAppleAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVCookieStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVFairPlaySAPSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVFairPlaySubscriptionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVLoadURLOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVMediaSocialAdminPermissionsCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVPushNotificationParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVPushNotificationRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVSAPSignatureComponent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVSAPSignaturePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVSubscriptionStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVSubscriptionStatusCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVSubscriptionStatusRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVTelephonyController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVURLBagInterpreter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVURLDataConsumer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVURLProtocolConsumer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSWatchMetricsEventsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSWeakReference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSXPCServer
|| __TEXT.__const _SSDownloadSizeLimitDisabled
|| __TEXT.__const _SSDownloadSizeLimitNoLimit
|| __TEXT.__const _SSRestrictionsMaxRank
|| __TEXT.__const _SSSoftwareUpdateHistoryInterval
|| __TEXT.__const _kSSItemContentRatingExplicitRank
|| __TEXT.__const _kSSSQLiteQueryNoLimit
|| __TEXT.__const _kSSVPlatformMaximumBatchSize
|| __TEXT.__text _SSAccountGetUniqueIdentifierFromValue
|| __TEXT.__text _SSAccountScopeForString
|| __TEXT.__text _SSAccountScopeForURLBagType
|| __TEXT.__text _SSAccountScopeStringForType
|| __TEXT.__text _SSAccountSourceForString
|| __TEXT.__text _SSAccountSourceStringForSource
|| __TEXT.__text _SSAccountsUserDefaultLastAuthTimeKeyForTokenType
|| __TEXT.__text _SSActiveAccountIsManagedAppleID
|| __TEXT.__text _SSAssetTypeForDownloadKind
|| __TEXT.__text _SSAssetTypeIsMediaType
|| __TEXT.__text _SSAssetTypeIsPrimaryType
|| __TEXT.__text _SSCheckInAppPurchaseQueue
|| __TEXT.__text _SSClientIdentifierForDownloadKind
|| __TEXT.__text _SSCodingCreateArchivableData
|| __TEXT.__text _SSCodingCreateNSSecureCodingObjectForXPCObject
|| __TEXT.__text _SSCodingCreateObjectWithArchivedData
|| __TEXT.__text _SSCodingCreateXPCObjectForNSSecureCodingObject
|| __TEXT.__text _SSCompareProductVersions
|| __TEXT.__text _SSDebugAlwaysSendGUID
|| __TEXT.__text _SSDebugBagOverrideCardEnrollmentManual
|| __TEXT.__text _SSDebugFileLevel
|| __TEXT.__text _SSDebugLevel
|| __TEXT.__text _SSDebugLog
|| __TEXT.__text _SSDebugSetFileLoggingOptions
|| __TEXT.__text _SSDebugShouldAllowDuplicateAccounts
|| __TEXT.__text _SSDebugShouldBackgroundRefreshReceipts
|| __TEXT.__text _SSDebugShouldDisableGDPR
|| __TEXT.__text _SSDebugShouldDisableInstallAttributionPingbackDelay
|| __TEXT.__text _SSDebugShouldDisableNetworkLogging
|| __TEXT.__text _SSDebugShouldDisableServerPrompts
|| __TEXT.__text _SSDebugShouldIgnoreExtendedValidation
|| __TEXT.__text _SSDebugShouldIncludeFullResponseBodiesInNetworkLogs
|| __TEXT.__text _SSDebugShouldLogAppInstallMetrics
|| __TEXT.__text _SSDebugShouldLogFullMetricsRequest
|| __TEXT.__text _SSDebugShouldLogIncomingHeaders
|| __TEXT.__text _SSDebugShouldLogNetworkTimingMetrics
|| __TEXT.__text _SSDebugShouldLogOutgoingHeaders
|| __TEXT.__text _SSDebugShouldLogResponseBodies
|| __TEXT.__text _SSDebugShouldScoreDevice
|| __TEXT.__text _SSDebugShouldSendCacheBuster
|| __TEXT.__text _SSDebugShouldTrackPerformance
|| __TEXT.__text _SSDebugShouldUseAppstored
|| __TEXT.__text _SSDebugShouldUseAppstoredUpdates
|| __TEXT.__text _SSDebugShouldUseAttestationPipeline
|| __TEXT.__text _SSDebugShouldUseFileBasedPaymentSheetProxy
|| __TEXT.__text _SSDebugShouldUseNewBag
|| __TEXT.__text _SSDeviceCachedStorefrontID
|| __TEXT.__text _SSDeviceIsAppleTV
|| __TEXT.__text _SSDeviceIsAppleWatch
|| __TEXT.__text _SSDeviceIsHDRCapable
|| __TEXT.__text _SSDeviceSupportsHDRDownload
|| __TEXT.__text _SSDeviceTypeIsAnyIPad
|| __TEXT.__text _SSDeviceTypeIsAnyIPhone
|| __TEXT.__text _SSDeviceTypeIsAnyIPod
|| __TEXT.__text _SSDialogGetDaemonDialogState
|| __TEXT.__text _SSDownloadAssetTypeIsMediaType
|| __TEXT.__text _SSDownloadKindForAssetType
|| __TEXT.__text _SSDownloadKindForItemKind
|| __TEXT.__text _SSDownloadKindIsBackgroundDownload
|| __TEXT.__text _SSDownloadKindIsBackgroundUpload
|| __TEXT.__text _SSDownloadKindIsBookToShimKind
|| __TEXT.__text _SSDownloadKindIsEBookKind
|| __TEXT.__text _SSDownloadKindIsMediaKind
|| __TEXT.__text _SSDownloadKindIsPodcastKind
|| __TEXT.__text _SSDownloadKindIsSoftwareKind
|| __TEXT.__text _SSDownloadKindIsThirdPartyKind
|| __TEXT.__text _SSDownloadKindIsToneKind
|| __TEXT.__text _SSDownloadKindIsVideoKind
|| __TEXT.__text _SSDownloadKindIsVideosAppKind
|| __TEXT.__text _SSDownloadKindsContainsBookToShimKind
|| __TEXT.__text _SSDownloadPhaseIsFinishedPhase
|| __TEXT.__text _SSDownloadPhaseIsInactivePhase
|| __TEXT.__text _SSDownloadPhaseIsPausable
|| __TEXT.__text _SSDownloadPhaseIsUnsuccessful
|| __TEXT.__text _SSError
|| __TEXT.__text _SSErrorBySettingUserInfoValue
|| __TEXT.__text _SSErrorIsNetworkError
|| __TEXT.__text _SSErrorWithUnderlyingError
|| __TEXT.__text _SSErrorWithUnderlyingErrorAndInfo
|| __TEXT.__text _SSFileIsLocalReadable
|| __TEXT.__text _SSFileIsLocalWritable
|| __TEXT.__text _SSFileLog
|| __TEXT.__text _SSGenerateLogCorrelationString
|| __TEXT.__text _SSGetAssetTypeForLegacyAssetType
|| __TEXT.__text _SSGetAssetTypeForPersistentString
|| __TEXT.__text _SSGetDownloadDirectoryForAssetType
|| __TEXT.__text _SSGetFinalizedDirectoryForAssetType
|| __TEXT.__text _SSGetItemIdentifierFromValue
|| __TEXT.__text _SSGetNetworkTypeForString
|| __TEXT.__text _SSGetNotEnoughDiskSpaceErrorWithCount
|| __TEXT.__text _SSGetNotEnoughDiskSpaceErrorWithName
|| __TEXT.__text _SSGetPersistentStringForAssetType
|| __TEXT.__text _SSGetStringForNetworkType
|| __TEXT.__text _SSGetStringForURLBagType
|| __TEXT.__text _SSGetUnsignedLongLongFromValue
|| __TEXT.__text _SSHashIfNeeded
|| __TEXT.__text _SSIsAppStoreDaemon
|| __TEXT.__text _SSIsDaemon
|| __TEXT.__text _SSIsInternalBuild
|| __TEXT.__text _SSIsInternalOrSeedBuild
|| __TEXT.__text _SSIsSeedBuild
|| __TEXT.__text _SSIsiPad
|| __TEXT.__text _SSIsiPhone
|| __TEXT.__text _SSIsiPhoneWithExpandedScreen
|| __TEXT.__text _SSIsiPod
|| __TEXT.__text _SSItemImageSizeEqualToSize
|| __TEXT.__text _SSItemMediaKindForItemKind
|| __TEXT.__text _SSItemStoreFrontURLForItemKind
|| __TEXT.__text _SSNetworkTooSlowError
|| __TEXT.__text _SSNetworkTypeApplyBlock
|| __TEXT.__text _SSNetworkTypeIsBluetooth
|| __TEXT.__text _SSNetworkTypeIsCellularType
|| __TEXT.__text _SSObservableLogConfig
|| __TEXT.__text _SSPaymentSheetImagePlaceholderCountTags
|| __TEXT.__text _SSPaymentSheetImagePlaceholderRemoveAllTags
|| __TEXT.__text _SSPaymentSheetImagePlaceholderReplaceTagWithImageData
|| __TEXT.__text _SSPaymentSheetImagePlaceholderReplaceTagWithImageDataAndTint
|| __TEXT.__text _SSPromiseLogConfig
|| __TEXT.__text _SSRestrictionsCopyRankForMediaType
|| __TEXT.__text _SSRestrictionsIsOnDeviceAppAnalyticsAllowed
|| __TEXT.__text _SSRestrictionsIsOnDeviceAppInstallationAllowed
|| __TEXT.__text _SSRestrictionsIsOnDeviceAutomaticAppDownloadsAllowed
|| __TEXT.__text _SSRestrictionsIsOnDeviceDiagnosticsAllowed
|| __TEXT.__text _SSRestrictionsIsTrustExtendedValidation
|| __TEXT.__text _SSRestrictionsShouldRequirePasswordImmediately
|| __TEXT.__text _SSRestrictionsShouldRestrictAccountModification
|| __TEXT.__text _SSRestrictionsShouldRestrictEroticBooks
|| __TEXT.__text _SSRestrictionsShouldRestrictExplicitContent
|| __TEXT.__text _SSSQLiteBindFoundationValueToStatement
|| __TEXT.__text _SSSQLiteCopyFoundationValueForStatementColumn
|| __TEXT.__text _SSSafeCast
|| __TEXT.__text _SSSetIsDaemon
|| __TEXT.__text _SSSoftwareUpdatesReloadStaleUpdatesTimer
|| __TEXT.__text _SSSoftwareUpdatesResetStaleUpdatesTimer
|| __TEXT.__text _SSURLBagTypeForAccountScope
|| __TEXT.__text _SSURLBagTypeForString
|| __TEXT.__text _SSURLResponseCacheControlMaxAge
|| __TEXT.__text _SSURLResponseExpirationInterval
|| __TEXT.__text _SSVAVFoundationFramework
|| __TEXT.__text _SSVAccountsFramework
|| __TEXT.__text _SSVAddMediaSocialHeadersToURLRequest
|| __TEXT.__text _SSVAddMediaSocialHeadersToURLRequestProperties
|| __TEXT.__text _SSVAnisetteAddHeadersToURLRequest
|| __TEXT.__text _SSVAnisetteOTPRequest
|| __TEXT.__text _SSVAnisetteProvisioningEnd
|| __TEXT.__text _SSVAnisetteProvisioningErase
|| __TEXT.__text _SSVAnisetteProvisioningSessionDestroy
|| __TEXT.__text _SSVAnisetteProvisioningStart
|| __TEXT.__text _SSVAnisetteStorageDispose
|| __TEXT.__text _SSVAnisetteSynchronize
|| __TEXT.__text _SSVAppleAccountFramework
|| __TEXT.__text _SSVApplicationIsPlayable
|| __TEXT.__text _SSVAppstoreDaemonFramework
|| __TEXT.__text _SSVAssetResourceLoadingRequestContainsSecureKeyDeliveryRequest
|| __TEXT.__text _SSVAuthKitFramework
|| __TEXT.__text _SSVAuthKitUIFramework
|| __TEXT.__text _SSVBookAssetDaemonFramework
|| __TEXT.__text _SSVCopyLoadMoreRangesFromArray
|| __TEXT.__text _SSVCoreTelephonyFramework
|| __TEXT.__text _SSVCoreText
|| __TEXT.__text _SSVCreateDataWithADIBytes
|| __TEXT.__text _SSVCreateDataWithFairPlayBytes
|| __TEXT.__text _SSVDefaultUserAgent
|| __TEXT.__text _SSVFTServicesFramework
|| __TEXT.__text _SSVFairPlayContextIdentifier
|| __TEXT.__text _SSVFairPlayCopyKeyBagSyncData
|| __TEXT.__text _SSVFairPlayGetHardwareInfo
|| __TEXT.__text _SSVFairPlayImportKeybagData
|| __TEXT.__text _SSVFrontBoardServicesFramework
|| __TEXT.__text _SSVGetMetricsPageDescriptionWithPlatformDictionary
|| __TEXT.__text _SSVIMSharedUtilities
|| __TEXT.__text _SSVLegacyUserAgent
|| __TEXT.__text _SSVLocalAuthenticationFramework
|| __TEXT.__text _SSVLockdownAccountServiceEligibilityKey
|| __TEXT.__text _SSVMediaSocialAttachmentTypeForTypeIdentifier
|| __TEXT.__text _SSVMediaSocialPostItemTypeForStorePlatformKind
|| __TEXT.__text _SSVMobileInstallationFramework
|| __TEXT.__text _SSVNanoRegistryFramework
|| __TEXT.__text _SSVPassKitFramework
|| __TEXT.__text _SSVPreferencesFramework
|| __TEXT.__text _SSVProtocolRedirectURLForResponse
|| __TEXT.__text _SSVQuartzCoreFramework
|| __TEXT.__text _SSVSQLiteResetDatabaseAtPath
|| __TEXT.__text _SSVStoreFrontIdentifierForAccount
|| __TEXT.__text _SSVSubscriptionBagForDictionary
|| __TEXT.__text _SSVSymptomPresentationFeed
|| __TEXT.__text _SSVUIKitFramework
|| __TEXT.__text _SSVURLBagGetSignaturePolicyDictionaryForURL
|| __TEXT.__text _SSVURLBagShouldSendAMDForURL
|| __TEXT.__text _SSVURLPathMatchesActionDictionary
|| __TEXT.__text _SSVUpdateDeferredInAppPurchase
|| __TEXT.__text _SSVUserDefaultsIsReadable
|| __TEXT.__text _SSVUserDefaultsIsWritable
|| __TEXT.__text _SSVWeakLinkedClassForString
|| __TEXT.__text _SSVWeakLinkedStringConstantForString
|| __TEXT.__text _SSVWeakLinkedSymbolForString
|| __TEXT.__text _SSVXPCDictionaryCopyPlayActivityEventsArray
|| __TEXT.__text _SSVXPCDictionarySetPlayActivityEventsArray
|| __TEXT.__text _SSViCloudNotificationFramework
|| __TEXT.__text _SSViTunesStoreFramework
|| __TEXT.__text _SSXPCArraySetCFObject
|| __TEXT.__text _SSXPCConnectionCopyClientIdentifier
|| __TEXT.__text _SSXPCConnectionCopyExecutablePath
|| __TEXT.__text _SSXPCConnectionCopyValueForEntitlement
|| __TEXT.__text _SSXPCConnectionHasEntitlement
|| __TEXT.__text _SSXPCCreateCFObjectFromXPCObject
|| __TEXT.__text _SSXPCCreateMessageDictionary
|| __TEXT.__text _SSXPCCreateNSArrayFromCFTypeArray
|| __TEXT.__text _SSXPCCreateNSArrayFromXPCEncodedArray
|| __TEXT.__text _SSXPCCreateXPCObjectFromCFObject
|| __TEXT.__text _SSXPCDictionaryCopyCFObject
|| __TEXT.__text _SSXPCDictionaryCopyCFObjectWithClass
|| __TEXT.__text _SSXPCDictionaryCopyObjectWithClass
|| __TEXT.__text _SSXPCDictionarySetCFObject
|| __TEXT.__text _SSXPCDictionarySetObject
|| __TEXT.__text _get_mac_address
|| __TEXT.__text _stringForHTTPHeaderDate
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifierAppleIDAuthentication
__ Accounts: _ACAccountTypeIdentifierIDMS
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _ACAccountTypeIdentifieriTunesStoreSandbox
__ Accounts: _ACErrorDomain
__ Accounts: _ACPasswordKey
__ Accounts: _ACRawPasswordKey
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountCredential
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kACRenewCredentialsServicesKey
__ Accounts: _kACVerifyCredentialsShouldSaveKey
__ AppSupport: _CPCopyBundleIdentifierFromAuditToken
__ AppSupport: _CPCopySharedResourcesPreferencesDomainForDomain
__ AppSupport: _CPFSSizeStringsWithStyle
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _CPSqliteDatabaseDelete
__ AppSupport: _CPSystemRootDirectory
__ AppleMediaServices: _AMSAccountMediaTypeAppStore
__ AppleMediaServices: _AMSAccountMediaTypeAppStoreSandbox
__ AppleMediaServices: _AMSAuthenticateErrorDialogKey
__ AppleMediaServices: _AMSBagChangedNotification
__ AppleMediaServices: _AMSGenerateLogCorrelationKey
__ AppleMediaServices: _AMSHashIfNeeded
__ AppleMediaServices: _AMSLogableError
__ AppleMediaServices: _AMSServerErrorDomain
__ AppleMediaServices: _AMSSetLogKeyIfNeeded
__ AppleMediaServices: _OBJC_CLASS_$_AMSBag
__ AppleMediaServices: _OBJC_CLASS_$_AMSBagKeySet
__ AppleMediaServices: _OBJC_CLASS_$_AMSDefaults
__ AppleMediaServices: _OBJC_CLASS_$_AMSDevice
__ AppleMediaServices: _OBJC_CLASS_$_AMSDialogRequest
__ AppleMediaServices: _OBJC_CLASS_$_AMSHandleDialogResultTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSLogConfig
__ AppleMediaServices: _OBJC_CLASS_$_AMSMetricsLoadURLContext
__ AppleMediaServices: _OBJC_CLASS_$_AMSMetricsLoadURLEvent
__ AppleMediaServices: _OBJC_CLASS_$_AMSMutableBagKeySet
__ AppleMediaServices: _OBJC_CLASS_$_AMSProcessInfo
__ AppleMediaServices: _OBJC_CLASS_$_AMSSystemAlertDialogTask
__ AssertionServices: _BKSApplicationStateDisplayIDKey
__ AssertionServices: _BKSApplicationStateKey
__ AssertionServices: _BKSApplicationStateProcessIDKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ AuthKit: _AKAuthenticationAlternateDSIDKey
__ AuthKit: _AKAuthenticationDSIDKey
__ AuthKit: _AKAuthenticationPasswordKey
__ AuthKit: _AKAuthenticationRawPasswordKey
__ AuthKit: _AKAuthenticationUsernameKey
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationContext
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ AuthKit: _OBJC_CLASS_$_AKDevice
__ AuthKit: _OBJC_CLASS_$_AKUsernameFormatter
__ CFNetwork: _CFCachedURLResponseCopyReceiverDataArray
__ CFNetwork: _CFHTTPMessageAppendBytes
__ CFNetwork: _CFHTTPMessageCopyAllHeaderFields
__ CFNetwork: _CFHTTPMessageCopyBody
__ CFNetwork: _CFHTTPMessageCopyRequestMethod
__ CFNetwork: _CFHTTPMessageCopyRequestURL
__ CFNetwork: _CFHTTPMessageCopyResponseStatusLine
__ CFNetwork: _CFHTTPMessageCopySerializedMessage
__ CFNetwork: _CFHTTPMessageCreateEmpty
__ CFNetwork: _CFHTTPMessageCreateResponse
__ CFNetwork: _CFHTTPMessageIsHeaderComplete
__ CFNetwork: _CFHTTPMessageSetBody
__ CFNetwork: _CFHTTPMessageSetHeaderFieldValue
__ CFNetwork: _CFURLCacheAddCachedResponseForRequest
__ CFNetwork: _CFURLCacheCopyResponseForRequest
__ CFNetwork: _CFURLCacheRemoveAllCachedResponses
__ CFNetwork: _CFURLCacheSetMemoryCapacity
__ CFNetwork: _CFURLRequestSetShouldStartSynchronously
__ CFNetwork: _CFURLResponseCopyPeerAddress
__ CFNetwork: _CFURLResponseGetHTTPResponse
__ CFNetwork: _CFURLResponseSetExpectedContentLength
__ CFNetwork: _CFURLResponseSetMIMEType
__ CFNetwork: __CFURLCacheLoadMemoryFromDiskNow
__ CFNetwork: __CFURLCachePersistMemoryToDiskNow
__ CFNetwork: __CFURLRequestSetProtocolProperty
__ CFNetwork: __CFURLRequestSetStorageSession
__ CFNetwork: __CFURLStorageSessionCopyCache
__ CFNetwork: __CFURLStorageSessionCreate
__ CFNetwork: __kCFURLStorageSessionProcessSharing
__ CFNetwork: _kCFHTTPVersion1_1
__ CFNetwork: _kCFURLRequestDoNotDecodeData
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAllocatorCreate
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetFirstIndexOfValue
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateWithBytesNoCopy
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDateCreate
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterCreateStringWithAbsoluteTime
__ CoreFoundation: _CFDateFormatterCreateStringWithDate
__ CoreFoundation: _CFDateFormatterSetFormat
__ CoreFoundation: _CFDateGetAbsoluteTime
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFGregorianDateGetAbsoluteTime
__ CoreFoundation: _CFLocaleCopyCurrent
__ CoreFoundation: _CFMakeCollectable
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetDistributedCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNullGetTypeID
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFReadStreamSetProperty
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopStop
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetApplyFunction
__ CoreFoundation: _CFSetCreateCopy
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetRemoveValue
__ CoreFoundation: _CFSocketCreate
__ CoreFoundation: _CFSocketCreateRunLoopSource
__ CoreFoundation: _CFSocketGetNative
__ CoreFoundation: _CFSocketInvalidate
__ CoreFoundation: _CFSocketSetAddress
__ CoreFoundation: _CFStreamCreatePairWithSocket
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringConvertEncodingToNSStringEncoding
__ CoreFoundation: _CFStringConvertIANACharSetNameToEncoding
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateExternalRepresentation
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetMaximumSizeForEncoding
__ CoreFoundation: _CFStringGetSystemEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFURLCopyAbsoluteURL
__ CoreFoundation: _CFURLGetString
__ CoreFoundation: _CFURLGetTypeID
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateFromString
__ CoreFoundation: _CFUUIDCreateFromUUIDBytes
__ CoreFoundation: _CFUUIDGetTypeID
__ CoreFoundation: _CFUUIDGetUUIDBytes
__ CoreFoundation: _CFWriteStreamSetProperty
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSData
__ CoreFoundation: _OBJC_METACLASS_$_NSOutputStream
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleShortVersionStringKey
__ CoreFoundation: __kCFSystemVersionProductVersionKey
__ CoreFoundation: _kCFAbsoluteTimeIntervalSince1970
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleExecutableKey
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFNull
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFStreamPropertyShouldCloseNativeSocket
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _kUTTypeAudio
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypeMovie
__ CoreServices: _kUTTypeVideo
__ CoreSymbolication: _CSArchitectureIs64Bit
__ CoreSymbolication: _CSIsNull
__ CoreSymbolication: _CSSourceInfoGetFilename
__ CoreSymbolication: _CSSourceInfoGetLineNumber
__ CoreSymbolication: _CSSymbolGetName
__ CoreSymbolication: _CSSymbolGetRange
__ CoreSymbolication: _CSSymbolOwnerGetName
__ CoreSymbolication: _CSSymbolOwnerGetSourceInfoWithAddress
__ CoreSymbolication: _CSSymbolicatorCreateWithTaskFlagsAndNotification
__ CoreSymbolication: _CSSymbolicatorGetArchitecture
__ CoreSymbolication: _CSSymbolicatorGetSymbolOwnerWithAddressAtTime
__ CoreSymbolication: _CSSymbolicatorGetSymbolWithAddressAtTime
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CTMessageCenter
__ CoreTelephony: _OBJC_CLASS_$_CTPhoneNumber
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: _kCTDataConnectionServiceTypeInternet
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileGroupOwnerAccountName
__ Foundation: _NSFileHandleOperationException
__ Foundation: _NSFileOwnerAccountID
__ Foundation: _NSFileOwnerAccountName
__ Foundation: _NSFileProtectionComplete
__ Foundation: _NSFileProtectionCompleteUnlessOpen
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSFileType
__ Foundation: _NSFileTypeRegular
__ Foundation: _NSHTTPCookieDiscard
__ Foundation: _NSHTTPCookieDomain
__ Foundation: _NSHTTPCookieExpires
__ Foundation: _NSHTTPCookieName
__ Foundation: _NSHTTPCookiePath
__ Foundation: _NSHTTPCookieSecure
__ Foundation: _NSHTTPCookieValue
__ Foundation: _NSHTTPCookieVersion
__ Foundation: _NSHomeDirectory
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSLogv
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLAuthenticationMethodServerTrust
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCachedURLResponse
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConditionLock
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPCookie
__ Foundation: _OBJC_CLASS_$_NSHTTPCookieStorage
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLAuthenticationChallenge
__ Foundation: _OBJC_CLASS_$_NSURLCache
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLCredential
__ Foundation: _OBJC_CLASS_$_NSURLProtocol
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLResponse
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSOperationQueue
__ GraphicsServices: _GSMainScreenScaleFactor
__ IOKit: _IOConnectCallStructMethod
__ IOKit: _IOIteratorNext
__ IOKit: _IOMasterPort
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IORegistryEntryGetParentEntry
__ IOKit: _IOServiceAddInterestNotification
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceGetMatchingServices
__ IOKit: _IOServiceMatching
__ IOKit: _IOServiceOpen
__ IOKit: _kIOMasterPortDefault
__ ManagedConfiguration: _MCFeatureAccountModificationAllowed
__ ManagedConfiguration: _MCFeatureAppInstallationAllowed
__ ManagedConfiguration: _MCFeatureBookstoreEroticaAllowed
__ ManagedConfiguration: _MCFeatureExplicitContentAllowed
__ ManagedConfiguration: _MCFeatureITunesStorePasswordEntryForced
__ ManagedConfiguration: _MCFeatureMaximumAppsRating
__ ManagedConfiguration: _MCFeatureMaximumMoviesRating
__ ManagedConfiguration: _MCFeatureMaximumTVShowsRating
__ ManagedConfiguration: _MCFeatureUIAppInstallationAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaToolbox: _MTShouldPlayHDRVideo
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ Security: _SecCertificateCopyProperties
__ Security: _SecCertificateCopySubjectPublicKeyInfoSHA256Digest
__ Security: _SecCertificateCreateWithData
__ Security: _SecCmsContentInfoGetContent
__ Security: _SecCmsContentInfoGetContentTypeTag
__ Security: _SecCmsDecoderCreate
__ Security: _SecCmsDecoderDestroy
__ Security: _SecCmsDecoderFinish
__ Security: _SecCmsDecoderUpdate
__ Security: _SecCmsMessageContentLevel
__ Security: _SecCmsMessageContentLevelCount
__ Security: _SecCmsMessageDestroy
__ Security: _SecCmsMessageGetContent
__ Security: _SecCmsSignedDataGetCertificateList
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemUpdate
__ Security: _SecPolicyCreateWithProperties
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTaskCreateWithAuditToken
__ Security: _SecTrustCopyInfo
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustEvaluate
__ Security: _SecTrustSetAnchorCertificates
__ Security: _SecTrustSetAnchorCertificatesOnly
__ Security: _SecTrustSetPolicies
__ Security: _SecTrustSetVerifyDate
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly
__ Security: _kSecAttrAccount
__ Security: _kSecAttrService
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecPolicyAppleRevocation
__ Security: _kSecPolicyAppleX509Basic
__ Security: _kSecPolicyMacAppStoreReceipt
__ Security: _kSecPolicyRevocationFlags
__ Security: _kSecPropertyKeyLabel
__ Security: _kSecPropertyKeyValue
__ Security: _kSecReturnData
__ Security: _kSecTrustInfoExtendedValidationKey
__ Security: _kSecValueData
__ SoftLinking: __sl_dlopen_audited
__ SpringBoardServices: _SBSCopyDisplayIdentifiers
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGCopyMultipleAnswers
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetFloat32Answer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _kMGQDiskUsageTotalDiskCapacity
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA512
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___vsnprintf_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_data_or
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dispatch_source_type_vnode
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_type_array
__ libSystem.B.dylib: __xpc_type_bool
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_data
__ libSystem.B.dylib: __xpc_type_date
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_double
__ libSystem.B.dylib: __xpc_type_int64
__ libSystem.B.dylib: __xpc_type_null
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: __xpc_type_uuid
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _asprintf
__ libSystem.B.dylib: _atexit
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _drand48
__ libSystem.B.dylib: _dup
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeifaddrs
__ libSystem.B.dylib: _getifaddrs
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _inet_ntoa
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _mktime
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_check
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_rwlock_wrlock
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _setsockopt
__ libSystem.B.dylib: _srand48
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strtoll
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _vm_allocate
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libSystem.B.dylib: _xpc_array_append_value
__ libSystem.B.dylib: _xpc_array_apply
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_get_int64
__ libSystem.B.dylib: _xpc_array_get_value
__ libSystem.B.dylib: _xpc_array_set_data
__ libSystem.B.dylib: _xpc_array_set_int64
__ libSystem.B.dylib: _xpc_array_set_value
__ libSystem.B.dylib: _xpc_bool_create
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_connection_create
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_audit_token
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_legacy
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_data_create
__ libSystem.B.dylib: _xpc_data_get_bytes_ptr
__ libSystem.B.dylib: _xpc_data_get_length
__ libSystem.B.dylib: _xpc_date_create
__ libSystem.B.dylib: _xpc_date_get_value
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_count
__ libSystem.B.dylib: _xpc_dictionary_get_dictionary
__ libSystem.B.dylib: _xpc_dictionary_get_double
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_double_create
__ libSystem.B.dylib: _xpc_double_get_value
__ libSystem.B.dylib: _xpc_endpoint_create
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_int64_create
__ libSystem.B.dylib: _xpc_int64_get_value
__ libSystem.B.dylib: _xpc_null_create
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: _xpc_retain
__ libSystem.B.dylib: _xpc_string_create
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: _xpc_uuid_create
__ libSystem.B.dylib: _xpc_uuid_get_bytes
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_isEqual
__ libresolv.9.dylib: _res_9_getservers
__ libresolv.9.dylib: _res_9_ndestroy
__ libresolv.9.dylib: _res_9_ninit
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_busy_timeout
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_db_handle
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_errstr
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_free
__ libsqlite3.dylib: _sqlite3_next_stmt
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_sql
__ libsqlite3.dylib: _sqlite3_step
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
SSKeychain : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSKeychain init]
  -[SSKeychain .cxx_destruct]
  -[SSKeychain createAttestationDataForAccountIdentifier:purpose:completionBlock:]
  -[SSKeychain _sendMessage:completionBlock:]
  -[SSKeychain getPublicKeyDataForAccountIdentifier:purpose:completionBlock:]
  -[SSKeychain createAttestationDataForAccountIdentifier:completionBlock:]
  -[SSKeychain createX509CertChainDataForAccountIdentifier:purpose:completionBlock:]
  -[SSKeychain keyCountForAccountIdentifier:completionBlock:]
  -[SSKeychain deleteKeychainTokensForAccountIdentifier:completionBlock:]
  -[SSKeychain getPublicKeyDataForAccountIdentifier:completionBlock:]
  -[SSKeychain signData:context:completionBlock:]
  -[SSKeychain signData:reason:fallback:cancel:forAccountIdentifier:completionBlock:]
  -[SSKeychain x509CertChainDataForAccountIdentifier:purpose:regenerateCerts:completionBlock:]


SSHTTPServer : NSObject /usr/lib/libc++.1.dylib <SSHTTPServerRequestHandlerDelegate>
 @property  BOOL allowsSecure
 @property  int downloadSpeed
 @property  short port
 @property  long long responsesDelivered
 @property  int state
 @property  BOOL verbose

  // class methods
  +[SSHTTPServer _isPortOccupied:]
  +[SSHTTPServer sharedServer]

  // instance methods
  -[SSHTTPServer setPort:]
  -[SSHTTPServer init]
  -[SSHTTPServer dealloc]
  -[SSHTTPServer .cxx_destruct]
  -[SSHTTPServer port]
  -[SSHTTPServer downloadSpeed]
  -[SSHTTPServer setVerbose:]
  -[SSHTTPServer setDownloadSpeed:]
  -[SSHTTPServer allowsSecure]
  -[SSHTTPServer responseBlockForPath:]
  -[SSHTTPServer responsesDelivered]
  -[SSHTTPServer serverLocalhostURL]
  -[SSHTTPServer setResponseForPath:handler:]
  -[SSHTTPServer _handleConnectWithType:handle:]
  -[SSHTTPServer verbose]
  -[SSHTTPServer stop]
  -[SSHTTPServer requestDidFinish:]
  -[SSHTTPServer serverURL]
  -[SSHTTPServer state]
  -[SSHTTPServer _ipAddress]
  -[SSHTTPServer start]


SSHTTPServerResponse : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *body
 @property  NSDictionary *headers
 @property  short statusCode

  // instance methods
  -[SSHTTPServerResponse .cxx_destruct]
  -[SSHTTPServerResponse setStatusCode:]
  -[SSHTTPServerResponse statusCode]
  -[SSHTTPServerResponse setBody:]
  -[SSHTTPServerResponse initWithStatusCode:]
  -[SSHTTPServerResponse setBodyWithBag:]
  -[SSHTTPServerResponse bagFromBody]
  -[SSHTTPServerResponse copyHTTPMessage]
  -[SSHTTPServerResponse body]
  -[SSHTTPServerResponse headers]
  -[SSHTTPServerResponse setHeaders:]


SSMetricsDialogEvent : SSMetricsBaseEvent <SSXPCCoding>
 @property  NSString *actionType
 @property  NSString *actionURL
 @property  NSDictionary *details
 @property  NSString *dialogId
 @property  NSString *dialogType
 @property  NSString *dualAction
 @property  NSString *message
 @property  NSString *result
 @property  NSString *targetId
 @property  NSArray *userActions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSMetricsDialogEvent details]
  -[SSMetricsDialogEvent actionType]
  -[SSMetricsDialogEvent result]
  -[SSMetricsDialogEvent message]
  -[SSMetricsDialogEvent initWithXPCEncoding:]
  -[SSMetricsDialogEvent userActions]
  -[SSMetricsDialogEvent init]
  -[SSMetricsDialogEvent copyXPCEncoding]
  -[SSMetricsDialogEvent targetId]
  -[SSMetricsDialogEvent setTargetId:]
  -[SSMetricsDialogEvent setDialogId:]
  -[SSMetricsDialogEvent setMessage:]
  -[SSMetricsDialogEvent dialogType]
  -[SSMetricsDialogEvent dualAction]
  -[SSMetricsDialogEvent setActionURL:]
  -[SSMetricsDialogEvent setDialogType:]
  -[SSMetricsDialogEvent dialogId]
  -[SSMetricsDialogEvent actionURL]
  -[SSMetricsDialogEvent setResult:]
  -[SSMetricsDialogEvent setDetails:]
  -[SSMetricsDialogEvent setActionType:]
  -[SSMetricsDialogEvent setDualAction:]
  -[SSMetricsDialogEvent setUserActions:]


SSPrivacyController : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSPrivacyController _translateIdentifierToPrivacyAcknowledgement:withVersion:]
  +[SSPrivacyController syncPrivacyAcknowledgementOnAccount:URL:]
  +[SSPrivacyController _syncPrivacyAcknowledgementOnAccount:URL:]
  +[SSPrivacyController acknowledgePrivacyLinkWithIdentifier:]
  +[SSPrivacyController _appendPrivacyAcknowledgementToActiveAccount:withURL:]
  +[SSPrivacyController acknowledgePrivacyLinkWithIdentifier:URL:]
  +[SSPrivacyController _currentPrivacyContentVersionForIdentifier:]
  +[SSPrivacyController appStorePrivacyIdentifiers]
  +[SSPrivacyController storePrivacyIdentifiers]
  +[SSPrivacyController _appendPrivacyAcknowledgement:toAccount:]
  +[SSPrivacyController shouldDisplayPrivacyLinkWithIdentifier:]
  +[SSPrivacyController viewControllerForPrivacySplashWithIdentifier:URL:]
  +[SSPrivacyController _appendPrivacyAcknowledgementToLocalAccount:]


SSApplicationUtil : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSApplicationUtil _connection]
  -[SSApplicationUtil init]
  -[SSApplicationUtil .cxx_destruct]
  -[SSApplicationUtil restartApplication:]


SSVPlaybackAsset : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *assetDictionary
 @property  NSString *downloadKey
 @property  NSString *flavor
 @property  NSString *URLString
 @property  NSArray *sinfs

  // instance methods
  -[SSVPlaybackAsset URLString]
  -[SSVPlaybackAsset sinfs]
  -[SSVPlaybackAsset .cxx_destruct]
  -[SSVPlaybackAsset initWithAssetDictionary:]
  -[SSVPlaybackAsset flavor]
  -[SSVPlaybackAsset isEqual:]
  -[SSVPlaybackAsset assetDictionary]
  -[SSVPlaybackAsset downloadKey]


SSMetricsCustomEvent : SSMetricsMutableEvent
  // instance methods
  -[SSMetricsCustomEvent isFieldBlacklistEnabled]


SSVFamilyContentDeletionEvent : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *deletedAccounts

  // class methods
  +[SSVFamilyContentDeletionEvent postDistributedNotificationWithAccountPairs:]
  +[SSVFamilyContentDeletionEvent notificationPayloadWithAccountPairs:]

  // instance methods
  -[SSVFamilyContentDeletionEvent .cxx_destruct]
  -[SSVFamilyContentDeletionEvent initWithNotificationUserInfo:]
  -[SSVFamilyContentDeletionEvent initWithXPCEventStreamEvent:]
  -[SSVFamilyContentDeletionEvent deletedAccounts]


SSVFamilyAccountPair : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long downloaderAccountIdentifier
 @property  unsigned long familyIdentifier
 @property  unsigned long purchaserAccountIdentifier

  // instance methods
  -[SSVFamilyAccountPair downloaderAccountIdentifier]
  -[SSVFamilyAccountPair initWithDownloaderAccountIdentifier:purchaserAccountIdentifier:familyIdentifier:]
  -[SSVFamilyAccountPair purchaserAccountIdentifier]
  -[SSVFamilyAccountPair familyIdentifier]


SSDownloadQueue : NSObject /usr/lib/libc++.1.dylib <SSDownloadManagerObserverPrivate>
 @property  NSArray *placeholderDownloads
 @property  NSArray *preorders
 @property  NSSet *downloadKinds
 @property  SSDownloadManager *downloadManager
 @property  NSArray *downloads
 @property  BOOL shouldAutomaticallyFinishDownloads
 @property  BOOL usingNetwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSDownloadQueue mediaDownloadKinds]
  +[SSDownloadQueue softwareApplicationDownloadKinds]

  // instance methods
  -[SSDownloadQueue canCancelDownload:]
  -[SSDownloadQueue isUsingNetwork]
  -[SSDownloadQueue initWithDownloadKinds:]
  -[SSDownloadQueue getDownloadsUsingBlock:]
  -[SSDownloadQueue downloads]
  -[SSDownloadQueue _handleDownloadsRemoved:]
  -[SSDownloadQueue reloadFromServer]
  -[SSDownloadQueue init]
  -[SSDownloadQueue downloadManagerDownloadsDidChange:]
  -[SSDownloadQueue downloadManager:downloadStatesDidChange:]
  -[SSDownloadQueue downloadManagerNetworkUsageDidChange:]
  -[SSDownloadQueue dealloc]
  -[SSDownloadQueue downloadManager]
  -[SSDownloadQueue _handleDownloadsDidChange:]
  -[SSDownloadQueue addDownload:]
  -[SSDownloadQueue _initWithDownloadManagerOptions:]
  -[SSDownloadQueue _sendDownloadStatusChangedAtIndex:]
  -[SSDownloadQueue _sendQueueNetworkUsageChanged]
  -[SSDownloadQueue _messageObserversWithFunction:context:]
  -[SSDownloadQueue _sendQueueChangedWithRemovals:]
  -[SSDownloadQueue downloadManager:downloadsDidChange:]
  -[SSDownloadQueue initWithDownloadManagerOptions:]
  -[SSDownloadQueue addPlaceholderDownloads:]
  -[SSDownloadQueue downloadForItemIdentifier:]
  -[SSDownloadQueue placeholderDownloads]
  -[SSDownloadQueue removePlaceholderDownload:]
  -[SSDownloadQueue startPreOrderDownload:]
  -[SSDownloadQueue _sendQueuePreOrdersChanged]
  -[SSDownloadQueue shouldAutomaticallyFinishDownloads]
  -[SSDownloadQueue setShouldAutomaticallyFinishDownloads:]
  -[SSDownloadQueue cancelDownload:]
  -[SSDownloadQueue downloadKinds]
  -[SSDownloadQueue removeObserver:]
  -[SSDownloadQueue addObserver:]
  -[SSDownloadQueue preorders]


SSVMediaSocialPostDescription : NSObject /usr/lib/libc++.1.dylib <NSCopying, SSXPCCoding>
 @property  NSNumber *accountIdentifier
 @property  NSArray *attachments
 @property  BOOL attributed
 @property  NSString *authorIdentifier
 @property  NSString *authorType
 @property  NSArray *contentItems
 @property  NSArray *externalServiceDestinations
 @property  NSString *sourceApplicationIdentifier
 @property  NSString *text
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVMediaSocialPostDescription copyWithZone:]
  -[SSVMediaSocialPostDescription initWithXPCEncoding:]
  -[SSVMediaSocialPostDescription copyXPCEncoding]
  -[SSVMediaSocialPostDescription attachments]
  -[SSVMediaSocialPostDescription accountIdentifier]
  -[SSVMediaSocialPostDescription text]
  -[SSVMediaSocialPostDescription setAttachments:]
  -[SSVMediaSocialPostDescription .cxx_destruct]
  -[SSVMediaSocialPostDescription authorType]
  -[SSVMediaSocialPostDescription setAttributed:]
  -[SSVMediaSocialPostDescription setAuthorIdentifier:]
  -[SSVMediaSocialPostDescription setAuthorType:]
  -[SSVMediaSocialPostDescription setExternalServiceDestinations:]
  -[SSVMediaSocialPostDescription setSourceApplicationIdentifier:]
  -[SSVMediaSocialPostDescription authorIdentifier]
  -[SSVMediaSocialPostDescription externalServiceDestinations]
  -[SSVMediaSocialPostDescription sourceApplicationIdentifier]
  -[SSVMediaSocialPostDescription isAttributed]
  -[SSVMediaSocialPostDescription setContentItems:]
  -[SSVMediaSocialPostDescription setAccountIdentifier:]
  -[SSVMediaSocialPostDescription setText:]
  -[SSVMediaSocialPostDescription contentItems]


SSDownload : SSEntity <SSXPCCoding>
 @property  NSDictionary *_localAssets
 @property  SSXPCConnection *_XPCConnection
 @property  BOOL external
 @property  id downloadIdentifier
 @property  NSArray *assets
 @property  SSDownloadMetadata *metadata
 @property  SSDownloadStatus *status
 @property  long long persistentIdentifier
 @property  BOOL cancelable
 @property  SSDownloadPolicy *downloadPolicy
 @property  long long downloadSizeLimit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSDownload _existsMessage]
  +[SSDownload _getExternalValuesMessage]
  +[SSDownload _getValueMessage]
  +[SSDownload _setExternalValuesMessage]
  +[SSDownload _setValuesMessage]

  // instance methods
  -[SSDownload _XPCConnection]
  -[SSDownload restart]
  -[SSDownload isCancelable]
  -[SSDownload assets]
  -[SSDownload failureError]
  -[SSDownload setMetadata:]
  -[SSDownload bytesTotal]
  -[SSDownload initWithPersistentIdentifier:]
  -[SSDownload pause]
  -[SSDownload copyXPCEncoding]
  -[SSDownload resume]
  -[SSDownload setDownloadHandler:completionBlock:]
  -[SSDownload downloadIdentifier]
  -[SSDownload assetsForType:]
  -[SSDownload dealloc]
  -[SSDownload downloadPhaseIdentifier]
  -[SSDownload addAsset:forType:]
  -[SSDownload _errorWithData:]
  -[SSDownload isEligibleForRestore:]
  -[SSDownload _errorWithXPCReply:]
  -[SSDownload _applyPhase:toStatus:]
  -[SSDownload _resetLocalIVars]
  -[SSDownload setValuesWithStoreDownloadMetadata:]
  -[SSDownload _newAssetWithURL:assetType:]
  -[SSDownload _initWithLocalPropertyValues:]
  -[SSDownload backgroundNetworkingJobGroupName]
  -[SSDownload removeAsset:]
  -[SSDownload estimatedSecondsRemaining]
  -[SSDownload networkConstraints]
  -[SSDownload setBackgroundNetworkingJobGroupName:]
  -[SSDownload setNetworkConstraints:]
  -[SSDownload _addCachedExternalValues:]
  -[SSDownload _addCachedPropertyValues:]
  -[SSDownload _localAssets]
  -[SSDownload persistentIdentifier]
  -[SSDownload handleWithDownloadHandler:completionBlock:]
  -[SSDownload isBackgroundNetworkingUserInitiated]
  -[SSDownload setBackgroundNetworkingUserInitiated:]
  -[SSDownload _resetStatus]
  -[SSDownload bytesDownloaded]
  -[SSDownload downloadSizeLimit]
  -[SSDownload setAssets:]
  -[SSDownload setDownloadPolicy:]
  -[SSDownload downloadPolicy]
  -[SSDownload initWithDownloadMetadata:]
  -[SSDownload prioritizeAboveDownload:completionBlock:]
  -[SSDownload isExternal]
  -[SSDownload setStatus:]
  -[SSDownload metadata]
  -[SSDownload percentComplete]
  -[SSDownload status]


SSVContentLink : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *categoryName
 @property  NSNumber *itemIdentifier
 @property  NSString *itemTitle
 @property  NSString *providerName
 @property  NSString *searchTerm
 @property  long long contentKind
 @property  long long targetApplication
 @property  NSURL *URL

  // instance methods
  -[SSVContentLink searchTerm]
  -[SSVContentLink setSearchTerm:]
  -[SSVContentLink setProviderName:]
  -[SSVContentLink itemIdentifier]
  -[SSVContentLink categoryName]
  -[SSVContentLink setCategoryName:]
  -[SSVContentLink .cxx_destruct]
  -[SSVContentLink targetApplication]
  -[SSVContentLink contentKind]
  -[SSVContentLink _targetApplicationWithContentKind:]
  -[SSVContentLink _URLSchemeWithApplication:]
  -[SSVContentLink _stringForContentKind:]
  -[SSVContentLink setContentKind:]
  -[SSVContentLink setItemTitle:]
  -[SSVContentLink setTargetApplication:]
  -[SSVContentLink itemTitle]
  -[SSVContentLink providerName]
  -[SSVContentLink URL]
  -[SSVContentLink setItemIdentifier:]


SSDownloadMetadata : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSSecureCoding, NSCopying>
 @property  NSDictionary *primaryAssetDictionary
 @property  long long keyStyle
 @property  NSData *appReceiptData
 @property  BOOL automaticDownload
 @property  NSURL *cancelDownloadURL
 @property  NSString *copyright
 @property  BOOL deviceBasedVPP
 @property  NSDictionary *dictionary
 @property  NSString *downloadKey
 @property  NSNumber *downloaderAccountIdentifier
 @property  NSData *epubRightsData
 @property  NSString *fileExtension
 @property  NSURL *hlsPlaylistURL
 @property  BOOL HDR
 @property  BOOL HLS
 @property  BOOL tvTemplate
 @property  NSURL *launchExtrasUrl
 @property  NSArray *MD5HashStrings
 @property  NSNumber *numberOfBytesToHash
 @property  NSString *pageProgressionDirection
 @property  unsigned long preOrderIdentifier
 @property  BOOL premium
 @property  NSURL *primaryAssetURL
 @property  NSString *preferredAssetFlavor
 @property  NSURL *transitMapDataURL
 @property  NSString *redownloadActionParameters
 @property  BOOL redownloadDownload
 @property  NSString *releaseDateString
 @property  NSNumber *rentalID
 @property  NSNumber *requestPersistentID
 @property  id requiredDeviceCapabilities
 @property  BOOL contentRestricted
 @property  BOOL shouldDownloadAutomatically
 @property  NSString *sortArtistName
 @property  NSString *sortCollectionName
 @property  NSString *sortTitle
 @property  NSArray *sinfs
 @property  BOOL softwareKind
 @property  BOOL videosKind
 @property  unsigned long artistIdentifier
 @property  NSString *artistName
 @property  NSURL *fullSizeImageURL
 @property  NSString *genre
 @property  unsigned long genreIdentifier
 @property  unsigned long itemIdentifier
 @property  NSString *kind
 @property  NSString *longDescription
 @property  NSDate *releaseDate
 @property  NSNumber *releaseYear
 @property  NSString *shortDescription
 @property  NSString *subtitle
 @property  NSString *title
 @property  NSString *transactionIdentifier
 @property  SSItemImageCollection *thumbnailImageCollection
 @property  NSString *thumbnailNewsstandBindingEdge
 @property  NSString *thumbnailNewsstandBindingType
 @property  NSURL *thumbnailImageURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSDownloadMetadata supportsSecureCoding]
  +[SSDownloadMetadata _addPlaybackTypeToHLSPlaylistURLString:]

  // instance methods
  -[SSDownloadMetadata seasonNumber]
  -[SSDownloadMetadata composerName]
  -[SSDownloadMetadata seriesName]
  -[SSDownloadMetadata setCollectionIdentifier:]
  -[SSDownloadMetadata releaseDate]
  -[SSDownloadMetadata setSeasonNumber:]
  -[SSDownloadMetadata copyWithZone:]
  -[SSDownloadMetadata artistName]
  -[SSDownloadMetadata setSubtitle:]
  -[SSDownloadMetadata hasHDR]
  -[SSDownloadMetadata itemIdentifier]
  -[SSDownloadMetadata betaExternalVersionIdentifier]
  -[SSDownloadMetadata applicationIdentifier]
  -[SSDownloadMetadata initWithXPCEncoding:]
  -[SSDownloadMetadata sinfs]
  -[SSDownloadMetadata collectionName]
  -[SSDownloadMetadata networkName]
  -[SSDownloadMetadata init]
  -[SSDownloadMetadata setCopyright:]
  -[SSDownloadMetadata copyXPCEncoding]
  -[SSDownloadMetadata isHLS]
  -[SSDownloadMetadata genre]
  -[SSDownloadMetadata isRental]
  -[SSDownloadMetadata isExplicitContent]
  -[SSDownloadMetadata movementCount]
  -[SSDownloadMetadata setSinfs:]
  -[SSDownloadMetadata setLongDescription:]
  -[SSDownloadMetadata setContentRating:]
  -[SSDownloadMetadata contentRating]
  -[SSDownloadMetadata setTransactionIdentifier:]
  -[SSDownloadMetadata isPremium]
  -[SSDownloadMetadata dealloc]
  -[SSDownloadMetadata setSeriesName:]
  -[SSDownloadMetadata setFileExtension:]
  -[SSDownloadMetadata genreIdentifier]
  -[SSDownloadMetadata setDictionary:]
  -[SSDownloadMetadata initWithKind:]
  -[SSDownloadMetadata longDescription]
  -[SSDownloadMetadata setPurchaseDate:]
  -[SSDownloadMetadata transactionIdentifier]
  -[SSDownloadMetadata kind]
  -[SSDownloadMetadata dictionary]
  -[SSDownloadMetadata setTitle:]
  -[SSDownloadMetadata _assetDictionary]
  -[SSDownloadMetadata downloaderAccountIdentifier]
  -[SSDownloadMetadata encodeWithCoder:]
  -[SSDownloadMetadata setKind:]
  -[SSDownloadMetadata podcastFeedURL]
  -[SSDownloadMetadata newDownloadProperties]
  -[SSDownloadMetadata primaryAssetURL]
  -[SSDownloadMetadata fullSizeImageURL]
  -[SSDownloadMetadata setValuesFromDownload:]
  -[SSDownloadMetadata sortTitle]
  -[SSDownloadMetadata isDeviceBasedVPP]
  -[SSDownloadMetadata title]
  -[SSDownloadMetadata initWithItem:offer:]
  -[SSDownloadMetadata preOrderIdentifier]
  -[SSDownloadMetadata setPreOrderIdentifier:]
  -[SSDownloadMetadata artistIdentifier]
  -[SSDownloadMetadata setArtistIdentifier:]
  -[SSDownloadMetadata collectionArtistName]
  -[SSDownloadMetadata setCollectionArtistName:]
  -[SSDownloadMetadata collectionIndexInCollectionGroup]
  -[SSDownloadMetadata setCollectionIndexInCollectionGroup:]
  -[SSDownloadMetadata setCollectionName:]
  -[SSDownloadMetadata episodeIdentifier]
  -[SSDownloadMetadata setEpisodeIdentifier:]
  -[SSDownloadMetadata initWithDictionary:]
  -[SSDownloadMetadata episodeSortIdentifier]
  -[SSDownloadMetadata setEpisodeSortIdentifier:]
  -[SSDownloadMetadata setGenreIdentifier:]
  -[SSDownloadMetadata indexInCollection]
  -[SSDownloadMetadata setIndexInCollection:]
  -[SSDownloadMetadata setNetworkName:]
  -[SSDownloadMetadata numberOfCollectionsInCollectionGroup]
  -[SSDownloadMetadata podcastEpisodeGUID]
  -[SSDownloadMetadata setNumberOfCollectionsInCollectionGroup:]
  -[SSDownloadMetadata numberOfItemsInCollection]
  -[SSDownloadMetadata setNumberOfItemsInCollection:]
  -[SSDownloadMetadata setPodcastEpisodeGUID:]
  -[SSDownloadMetadata setShortDescription:]
  -[SSDownloadMetadata podcastType]
  -[SSDownloadMetadata setVideoDetailsDictionary:]
  -[SSDownloadMetadata setValue:forMetadataKey:]
  -[SSDownloadMetadata isHighDefinition]
  -[SSDownloadMetadata setHighDefinition:]
  -[SSDownloadMetadata setDurationInMilliseconds:]
  -[SSDownloadMetadata setFullSizeImageURL:]
  -[SSDownloadMetadata setArtworkIsPrerendered:]
  -[SSDownloadMetadata setThumbnailImageURL:]
  -[SSDownloadMetadata setThumbnailNewsstandBindingEdge:]
  -[SSDownloadMetadata setThumbnailNewsstandBindingType:]
  -[SSDownloadMetadata setRental:]
  -[SSDownloadMetadata fileExtension]
  -[SSDownloadMetadata setReleaseYear:]
  -[SSDownloadMetadata setPodcastType:]
  -[SSDownloadMetadata setPodcastFeedURL:]
  -[SSDownloadMetadata setPrimaryAssetURL:]
  -[SSDownloadMetadata setDownloadKey:]
  -[SSDownloadMetadata valueForFirstAvailableKey:]
  -[SSDownloadMetadata valueForMetadataKey:]
  -[SSDownloadMetadata _stringValueForValue:]
  -[SSDownloadMetadata hlsPlaylistURL]
  -[SSDownloadMetadata _urlValueForValue:]
  -[SSDownloadMetadata _dateValueForValue:]
  -[SSDownloadMetadata _releaseDateValue]
  -[SSDownloadMetadata _setValueCopy:forMetadataKey:]
  -[SSDownloadMetadata downloadPermalink]
  -[SSDownloadMetadata _newImageCollectionWithURLString:]
  -[SSDownloadMetadata _thumbnailArtworkImage]
  -[SSDownloadMetadata documentTargetIdentifier]
  -[SSDownloadMetadata durationInMilliseconds]
  -[SSDownloadMetadata enableExtensions]
  -[SSDownloadMetadata longSeasonDescription]
  -[SSDownloadMetadata messagesArtworkURL]
  -[SSDownloadMetadata releaseYear]
  -[SSDownloadMetadata pageProgressionDirection]
  -[SSDownloadMetadata publicationVersion]
  -[SSDownloadMetadata cancelDownloadURL]
  -[SSDownloadMetadata thumbnailImageURL]
  -[SSDownloadMetadata redownloadActionParameters]
  -[SSDownloadMetadata thumbnailNewsstandBindingEdge]
  -[SSDownloadMetadata thumbnailNewsstandBindingType]
  -[SSDownloadMetadata isTvTemplate]
  -[SSDownloadMetadata viewStoreItemURL]
  -[SSDownloadMetadata artworkIsPrerendered]
  -[SSDownloadMetadata isSharedResource]
  -[SSDownloadMetadata launchProhibited]
  -[SSDownloadMetadata isMusicShow]
  -[SSDownloadMetadata composerIdentifier]
  -[SSDownloadMetadata _valueForFirstAvailableTopLevelKey:]
  -[SSDownloadMetadata _newDateFormatter]
  -[SSDownloadMetadata setDownloadPermalink:]
  -[SSDownloadMetadata _setValue:forTopLevelKey:]
  -[SSDownloadMetadata setBetaExternalVersionIdentifier:]
  -[SSDownloadMetadata setCancelDownloadURL:]
  -[SSDownloadMetadata setDocumentTargetIdentifier:]
  -[SSDownloadMetadata setEnableExtensions:]
  -[SSDownloadMetadata setLongSeasonDescription:]
  -[SSDownloadMetadata setViewStoreItemURL:]
  -[SSDownloadMetadata setMessagesArtworkURL:]
  -[SSDownloadMetadata setPageProgressionDirection:]
  -[SSDownloadMetadata setPublicationVersion:]
  -[SSDownloadMetadata setRedownloadActionParameters:]
  -[SSDownloadMetadata setComposerIdentifier:]
  -[SSDownloadMetadata setAutomaticDownload:]
  -[SSDownloadMetadata setHasMessagesExtension:]
  -[SSDownloadMetadata setDeviceBasedVPP:]
  -[SSDownloadMetadata setSharedResource:]
  -[SSDownloadMetadata setTvTemplate:]
  -[SSDownloadMetadata setLaunchProhibited:]
  -[SSDownloadMetadata setPreferredAssetFlavor:]
  -[SSDownloadMetadata thumbnailImageCollection]
  -[SSDownloadMetadata is32BitOnly]
  -[SSDownloadMetadata launchExtrasUrl]
  -[SSDownloadMetadata primaryAssetDictionary]
  -[SSDownloadMetadata sagaIdentifier]
  -[SSDownloadMetadata setHlsPlaylistURL:]
  -[SSDownloadMetadata setLaunchExtrasUrl:]
  -[SSDownloadMetadata setRentalID:]
  -[SSDownloadMetadata setSagaIdentifier:]
  -[SSDownloadMetadata setSortTitle:]
  -[SSDownloadMetadata setSortArtistName:]
  -[SSDownloadMetadata setSortCollectionName:]
  -[SSDownloadMetadata sortArtistName]
  -[SSDownloadMetadata sortCollectionName]
  -[SSDownloadMetadata videoDetailsDictionary]
  -[SSDownloadMetadata appReceiptData]
  -[SSDownloadMetadata copyWritableMetadata]
  -[SSDownloadMetadata epubRightsData]
  -[SSDownloadMetadata isAutomaticDownload]
  -[SSDownloadMetadata setBundleIdentifier:]
  -[SSDownloadMetadata isContentRestricted]
  -[SSDownloadMetadata isRedownloadDownload]
  -[SSDownloadMetadata isSoftwareKind]
  -[SSDownloadMetadata isVideosKind]
  -[SSDownloadMetadata MD5HashStrings]
  -[SSDownloadMetadata numberOfBytesToHash]
  -[SSDownloadMetadata preferredAssetFlavor]
  -[SSDownloadMetadata releaseDateString]
  -[SSDownloadMetadata requestPersistentID]
  -[SSDownloadMetadata setKeyStyle:]
  -[SSDownloadMetadata setEpubRightsData:]
  -[SSDownloadMetadata setMD5HashStrings:numberOfBytesToHash:]
  -[SSDownloadMetadata setRedownloadDownload:]
  -[SSDownloadMetadata setReleaseDateString:]
  -[SSDownloadMetadata setRequestPersistentID:]
  -[SSDownloadMetadata setRequiredDeviceCapabilities:]
  -[SSDownloadMetadata setTransitMapDataURL:]
  -[SSDownloadMetadata setShouldDownloadAutomatically:]
  -[SSDownloadMetadata shouldDownloadAutomatically]
  -[SSDownloadMetadata transitMapDataURL]
  -[SSDownloadMetadata shortDescription]
  -[SSDownloadMetadata movementNumber]
  -[SSDownloadMetadata setDownloadPolicy:]
  -[SSDownloadMetadata downloadPolicy]
  -[SSDownloadMetadata hasMessagesExtension]
  -[SSDownloadMetadata requiredDeviceCapabilities]
  -[SSDownloadMetadata keyStyle]
  -[SSDownloadMetadata isSample]
  -[SSDownloadMetadata rentalID]
  -[SSDownloadMetadata showComposer]
  -[SSDownloadMetadata isCompilation]
  -[SSDownloadMetadata cloudIdentifier]
  -[SSDownloadMetadata purchaseDate]
  -[SSDownloadMetadata copyright]
  -[SSDownloadMetadata setSample:]
  -[SSDownloadMetadata subtitle]
  -[SSDownloadMetadata initWithItem:]
  -[SSDownloadMetadata movementName]
  -[SSDownloadMetadata bundleIdentifier]
  -[SSDownloadMetadata downloadKey]
  -[SSDownloadMetadata variantIdentifier]
  -[SSDownloadMetadata setVariantIdentifier:]
  -[SSDownloadMetadata setItemIdentifier:]
  -[SSDownloadMetadata setArtistName:]
  -[SSDownloadMetadata setMusicShow:]
  -[SSDownloadMetadata setGenre:]
  -[SSDownloadMetadata setReleaseDate:]
  -[SSDownloadMetadata initWithCoder:]
  -[SSDownloadMetadata setCompilation:]
  -[SSDownloadMetadata setExplicitContent:]
  -[SSDownloadMetadata setComposerName:]
  -[SSDownloadMetadata setCloudIdentifier:]
  -[SSDownloadMetadata collectionIdentifier]
  -[SSDownloadMetadata workName]


SSVCloudServiceCapabilitiesResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  SSVSubscriptionStatus *subscriptionStatus
 @property  BOOL supportsMusicCatalogPlayback
 @property  BOOL supportsAddToCloudMusicLibrary
 @property  BOOL canSubscribeToMusicCatalog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVCloudServiceCapabilitiesResponse copyWithZone:]
  -[SSVCloudServiceCapabilitiesResponse initWithXPCEncoding:]
  -[SSVCloudServiceCapabilitiesResponse copyXPCEncoding]
  -[SSVCloudServiceCapabilitiesResponse subscriptionStatus]
  -[SSVCloudServiceCapabilitiesResponse .cxx_destruct]
  -[SSVCloudServiceCapabilitiesResponse _descriptionWithSubscriptionStatusDescriptorBlock:]
  -[SSVCloudServiceCapabilitiesResponse supportsMusicCatalogPlayback]
  -[SSVCloudServiceCapabilitiesResponse setSupportsMusicCatalogPlayback:]
  -[SSVCloudServiceCapabilitiesResponse supportsAddToCloudMusicLibrary]
  -[SSVCloudServiceCapabilitiesResponse setSupportsAddToCloudMusicLibrary:]
  -[SSVCloudServiceCapabilitiesResponse canSubscribeToMusicCatalog]
  -[SSVCloudServiceCapabilitiesResponse setCanSubscribeToMusicCatalog:]
  -[SSVCloudServiceCapabilitiesResponse setSubscriptionStatus:]


SSVSubscriptionStatusCoordinator : NSObject /usr/lib/libc++.1.dylib
 @property  SSVSubscriptionStatus *lastKnownStatus

  // class methods
  +[SSVSubscriptionStatusCoordinator sharedCoordinator]
  +[SSVSubscriptionStatusCoordinator removeUserDefaultsForAccountIdentifier:]
  +[SSVSubscriptionStatusCoordinator _sendChangeNotification]
  +[SSVSubscriptionStatusCoordinator sendChangeNotification]
  +[SSVSubscriptionStatusCoordinator updateUserDefaultsWithStatus:]
  +[SSVSubscriptionStatusCoordinator _existingSharedCoordinator]
  +[SSVSubscriptionStatusCoordinator beginSuspendingSubscriptionStatusChangeNotifications]
  +[SSVSubscriptionStatusCoordinator _changeNotificationSuspensionAccessQueue]
  +[SSVSubscriptionStatusCoordinator copyStatusFromUserDefaults]
  +[SSVSubscriptionStatusCoordinator endSuspendingSubscriptionStatusChangeNotifications]
  +[SSVSubscriptionStatusCoordinator updateWithResponseDictionary:accountIdentifier:]

  // instance methods
  -[SSVSubscriptionStatusCoordinator lastKnownStatus]
  -[SSVSubscriptionStatusCoordinator init]
  -[SSVSubscriptionStatusCoordinator _handleRequestResponseWithStatus:isFinal:error:]
  -[SSVSubscriptionStatusCoordinator dealloc]
  -[SSVSubscriptionStatusCoordinator _validateLastKnownStatus]
  -[SSVSubscriptionStatusCoordinator _accountStoreChangedNotification]
  -[SSVSubscriptionStatusCoordinator .cxx_destruct]
  -[SSVSubscriptionStatusCoordinator getStatusWithOptions:statusBlock:]
  -[SSVSubscriptionStatusCoordinator _externalChangeNotification]
  -[SSVSubscriptionStatusCoordinator modifyLastKnownStatusUsingBlock:]
  -[SSVSubscriptionStatusCoordinator _copyValidStatusForStatus:]
  -[SSVSubscriptionStatusCoordinator reset]
  -[SSVSubscriptionStatusCoordinator _invalidateLastKnownStatus]
  -[SSVSubscriptionStatusCoordinator _updateSubscriptionStatusAccessPolicyAllowingNotification:]
  -[SSVSubscriptionStatusCoordinator _fireStatusBlocksWithStatus:isFinal:error:]
  -[SSVSubscriptionStatusCoordinator _copyStatusDateFromUserDefaults]
  -[SSVSubscriptionStatusCoordinator _deviceStoreFrontChangedNotification]
  -[SSVSubscriptionStatusCoordinator _copyStatusFromUserDefaults]


SSVDownloadQueueRequest : SSRequest
 @property  long long queueType

  // instance methods
  -[SSVDownloadQueueRequest initWithXPCEncoding:]
  -[SSVDownloadQueueRequest queueType]
  -[SSVDownloadQueueRequest copyXPCEncoding]
  -[SSVDownloadQueueRequest initWithQueueType:]
  -[SSVDownloadQueueRequest startWithResponseBlock:]


SSVSecureKeyDeliveryRequestOperation : NSOperation /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSData *persistentContentKeyContext
 @property  long long leaseAction
 @property  BOOL offline
 @property  double expirationTime
 @property  double playbackStartTime
 @property  <SSVSecureKeyDeliveryRequestOperationDelegate> *serverPlaybackContextDataDelegate
 @property  NSData *serverPlaybackContextData
 @property  NSURL *certificateURL
 @property  NSURL *keyServerURL
 @property  AVAssetResourceLoadingRequest *resourceLoadingRequest
 @property  NSNumber *rentalId
 @property  BOOL skippedRentalCheckout
 @property  BOOL ITunesStoreRequest
 @property  BOOL shouldIncludeGUID
 @property  @? responseBlock

  // instance methods
  -[SSVSecureKeyDeliveryRequestOperation init]
  -[SSVSecureKeyDeliveryRequestOperation main]
  -[SSVSecureKeyDeliveryRequestOperation keyServerURL]
  -[SSVSecureKeyDeliveryRequestOperation setITunesStoreRequest:]
  -[SSVSecureKeyDeliveryRequestOperation responseBlock]
  -[SSVSecureKeyDeliveryRequestOperation .cxx_destruct]
  -[SSVSecureKeyDeliveryRequestOperation expirationTime]
  -[SSVSecureKeyDeliveryRequestOperation offline]
  -[SSVSecureKeyDeliveryRequestOperation setOffline:]
  -[SSVSecureKeyDeliveryRequestOperation setRentalId:]
  -[SSVSecureKeyDeliveryRequestOperation _sendResponseBlockWithError:]
  -[SSVSecureKeyDeliveryRequestOperation configureWithURLBagDictionary:]
  -[SSVSecureKeyDeliveryRequestOperation setServerPlaybackContextData:]
  -[SSVSecureKeyDeliveryRequestOperation serverPlaybackContextDataDelegate]
  -[SSVSecureKeyDeliveryRequestOperation skippedRentalCheckout]
  -[SSVSecureKeyDeliveryRequestOperation _streamingKeyDictionaryForID:URI:serverPlaybackContextData:]
  -[SSVSecureKeyDeliveryRequestOperation shouldIncludeGUID]
  -[SSVSecureKeyDeliveryRequestOperation certificateURL]
  -[SSVSecureKeyDeliveryRequestOperation setKeyServerURL:]
  -[SSVSecureKeyDeliveryRequestOperation _streamingRequestDictionaryWithStreamingKeyDictionaries:]
  -[SSVSecureKeyDeliveryRequestOperation _contentKeyContextForStreamingKeyID:streamingKeyDictionaries:renewAfter:error:]
  -[SSVSecureKeyDeliveryRequestOperation setPersistentContentKeyContext:]
  -[SSVSecureKeyDeliveryRequestOperation leaseAction]
  -[SSVSecureKeyDeliveryRequestOperation _expirationTimeForStreamingKeyID:streamingKeyDictionaries:]
  -[SSVSecureKeyDeliveryRequestOperation _playbackStartTimeForStreamingKeyID:streamingKeyDictionaries:]
  -[SSVSecureKeyDeliveryRequestOperation persistentContentKeyContext]
  -[SSVSecureKeyDeliveryRequestOperation resourceLoadingRequest]
  -[SSVSecureKeyDeliveryRequestOperation _timeIntervalForStreamingKeyID:responseKey:streamingKeyDictionaries:]
  -[SSVSecureKeyDeliveryRequestOperation serverPlaybackContextData]
  -[SSVSecureKeyDeliveryRequestOperation setCertificateURL:]
  -[SSVSecureKeyDeliveryRequestOperation setResourceLoadingRequest:]
  -[SSVSecureKeyDeliveryRequestOperation setResponseBlock:]
  -[SSVSecureKeyDeliveryRequestOperation isITunesStoreRequest]
  -[SSVSecureKeyDeliveryRequestOperation setShouldIncludeGUID:]
  -[SSVSecureKeyDeliveryRequestOperation setSkippedRentalCheckout:]
  -[SSVSecureKeyDeliveryRequestOperation setLeaseAction:]
  -[SSVSecureKeyDeliveryRequestOperation playbackStartTime]
  -[SSVSecureKeyDeliveryRequestOperation setServerPlaybackContextDataDelegate:]
  -[SSVSecureKeyDeliveryRequestOperation rentalId]
  -[SSVSecureKeyDeliveryRequestOperation start]


SSVMediaContentTasteItemUpdate : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSSecureCoding>
 @property  SSVMediaContentTasteItem *item
 @property  NSDate *updateDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSVMediaContentTasteItemUpdate supportsSecureCoding]

  // instance methods
  -[SSVMediaContentTasteItemUpdate item]
  -[SSVMediaContentTasteItemUpdate initWithXPCEncoding:]
  -[SSVMediaContentTasteItemUpdate copyXPCEncoding]
  -[SSVMediaContentTasteItemUpdate .cxx_destruct]
  -[SSVMediaContentTasteItemUpdate setItem:]
  -[SSVMediaContentTasteItemUpdate encodeWithCoder:]
  -[SSVMediaContentTasteItemUpdate updateDate]
  -[SSVMediaContentTasteItemUpdate setUpdateDate:]
  -[SSVMediaContentTasteItemUpdate initWithCoder:]


SSDownloadStatus : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  NSError *error
 @property  BOOL contentRestricted
 @property  BOOL failed
 @property  BOOL pausable
 @property  BOOL paused
 @property  BOOL failedTransient
 @property  SSDownloadPhase *activePhase
 @property  float percentComplete
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSDownloadStatus isPausable]
  -[SSDownloadStatus copyWithZone:]
  -[SSDownloadStatus setPausable:]
  -[SSDownloadStatus initWithXPCEncoding:]
  -[SSDownloadStatus copyXPCEncoding]
  -[SSDownloadStatus isFailed]
  -[SSDownloadStatus dealloc]
  -[SSDownloadStatus setError:]
  -[SSDownloadStatus setContentRestricted:]
  -[SSDownloadStatus setOperationProgress:]
  -[SSDownloadStatus setPaused:]
  -[SSDownloadStatus isContentRestricted]
  -[SSDownloadStatus error]
  -[SSDownloadStatus isPaused]
  -[SSDownloadStatus isFailedTransient]
  -[SSDownloadStatus activePhase]
  -[SSDownloadStatus setPercentComplete:]
  -[SSDownloadStatus setFailed:]
  -[SSDownloadStatus percentComplete]
  -[SSDownloadStatus setOperationType:]


SSDownloadPhase : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  SSOperationProgress *operationProgress
 @property  long long phaseType
 @property  long long progressValue
 @property  long long totalProgressValue
 @property  long long progressUnits
 @property  double estimatedSecondsRemaining
 @property  float progressChangeRate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSDownloadPhase copyWithZone:]
  -[SSDownloadPhase initWithXPCEncoding:]
  -[SSDownloadPhase init]
  -[SSDownloadPhase copyXPCEncoding]
  -[SSDownloadPhase dealloc]
  -[SSDownloadPhase estimatedSecondsRemaining]
  -[SSDownloadPhase operationProgress]
  -[SSDownloadPhase initWithOperationProgress:]
  -[SSDownloadPhase progressUnits]
  -[SSDownloadPhase progressChangeRate]
  -[SSDownloadPhase progressValue]
  -[SSDownloadPhase totalProgressValue]
  -[SSDownloadPhase phaseType]


SSVRefreshSubscriptionRequest : SSRequest <SSXPCCoding>
 @property  BOOL requestingOfflineSlot
 @property  SSAuthenticationContext *authenticationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVRefreshSubscriptionRequest initWithXPCEncoding:]
  -[SSVRefreshSubscriptionRequest copyXPCEncoding]
  -[SSVRefreshSubscriptionRequest authenticationContext]
  -[SSVRefreshSubscriptionRequest .cxx_destruct]
  -[SSVRefreshSubscriptionRequest startWithCompletionBlock:]
  -[SSVRefreshSubscriptionRequest isRequestingOfflineSlot]
  -[SSVRefreshSubscriptionRequest setRequestingOfflineSlot:]
  -[SSVRefreshSubscriptionRequest setAuthenticationContext:]
  -[SSVRefreshSubscriptionRequest startWithResponseBlock:]


SSDownloadAsset : SSEntity
 @property  long long fileSize
 @property  NSString *downloadFileName
 @property  NSString *downloadPath
 @property  NSString *finalizedPath
 @property  BOOL external
 @property  SSURLRequestProperties *URLRequestProperties
 @property  SSURLRequestProperties *_localProperties
 @property  NSURLRequest *URLRequest
 @property  NSArray *sinfs

  // class methods
  +[SSDownloadAsset _existsMessage]
  +[SSDownloadAsset _getExternalValuesMessage]
  +[SSDownloadAsset _getValueMessage]
  +[SSDownloadAsset _setValuesMessage]
  +[SSDownloadAsset assetWithURL:type:]

  // instance methods
  -[SSDownloadAsset assetType]
  -[SSDownloadAsset sinfs]
  -[SSDownloadAsset copyXPCEncoding]
  -[SSDownloadAsset dealloc]
  -[SSDownloadAsset initWithURLRequest:]
  -[SSDownloadAsset bytesUploaded]
  -[SSDownloadAsset fileSize]
  -[SSDownloadAsset _legacyAssetType]
  -[SSDownloadAsset _resetLocalIVars]
  -[SSDownloadAsset initWithURLRequestProperties:]
  -[SSDownloadAsset bytesDownloaded]
  -[SSDownloadAsset _copyURLRequestProperties]
  -[SSDownloadAsset bytesUploadTotal]
  -[SSDownloadAsset URLRequestProperties]
  -[SSDownloadAsset _localProperties]
  -[SSDownloadAsset initWithURLRequest:type:]
  -[SSDownloadAsset downloadFileName]
  -[SSDownloadAsset downloadPath]
  -[SSDownloadAsset finalizedPath]
  -[SSDownloadAsset isExternal]
  -[SSDownloadAsset URLRequest]


SSOperationProgress : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  BOOL canPause
 @property  long long operationType
 @property  double changeRate
 @property  long long currentValue
 @property  double estimatedTimeRemaining
 @property  long long maxValue
 @property  long long units
 @property  long long normalizedCurrentValue
 @property  long long normalizedMaxValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSOperationProgress copyWithZone:]
  -[SSOperationProgress units]
  -[SSOperationProgress initWithXPCEncoding:]
  -[SSOperationProgress init]
  -[SSOperationProgress copyXPCEncoding]
  -[SSOperationProgress maxValue]
  -[SSOperationProgress estimatedTimeRemaining]
  -[SSOperationProgress dealloc]
  -[SSOperationProgress setCanPause:]
  -[SSOperationProgress setNormalizedCurrentValue:]
  -[SSOperationProgress setNormalizedMaxValue:]
  -[SSOperationProgress snapshot]
  -[SSOperationProgress setCurrentValue:]
  -[SSOperationProgress canPause]
  -[SSOperationProgress normalizedCurrentValue]
  -[SSOperationProgress normalizedMaxValue]
  -[SSOperationProgress changeRate]
  -[SSOperationProgress _updateStatisticsFromSnapshots]
  -[SSOperationProgress resetSnapshots]
  -[SSOperationProgress setChangeRate:]
  -[SSOperationProgress currentValue]
  -[SSOperationProgress operationType]
  -[SSOperationProgress setUnits:]
  -[SSOperationProgress setEstimatedTimeRemaining:]
  -[SSOperationProgress setMaxValue:]
  -[SSOperationProgress setOperationType:]


SSLogFileOptions : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *logDirectoryPath
 @property  NSString *logFileBaseName
 @property  unsigned long maxLogFileSize
 @property  long long maxNumberOfLogFiles

  // instance methods
  -[SSLogFileOptions copyWithZone:]
  -[SSLogFileOptions init]
  -[SSLogFileOptions setMaxLogFileSize:]
  -[SSLogFileOptions dealloc]
  -[SSLogFileOptions logDirectoryPath]
  -[SSLogFileOptions maxLogFileSize]
  -[SSLogFileOptions setMaxNumberOfLogFiles:]
  -[SSLogFileOptions maxNumberOfLogFiles]
  -[SSLogFileOptions logFileBaseName]
  -[SSLogFileOptions setLogDirectoryPath:]
  -[SSLogFileOptions setLogFileBaseName:]


SSVPlaybackResponse : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSURL *fallbackStreamingKeyServerURL
 @property  NSURL *fallbackStreamingKeyCertificateURL
 @property  NSDictionary *responseDictionary
 @property  NSHTTPURLResponse *URLResponse
 @property  NSArray *items

  // instance methods
  -[SSVPlaybackResponse copyWithZone:]
  -[SSVPlaybackResponse responseDictionary]
  -[SSVPlaybackResponse items]
  -[SSVPlaybackResponse .cxx_destruct]
  -[SSVPlaybackResponse _enumerateItemsUsingBlock:]
  -[SSVPlaybackResponse URLResponse]
  -[SSVPlaybackResponse initWithDictionary:URLResponse:]
  -[SSVPlaybackResponse itemForItemIdentifier:]
  -[SSVPlaybackResponse fallbackStreamingKeyServerURL]
  -[SSVPlaybackResponse setFallbackStreamingKeyServerURL:]
  -[SSVPlaybackResponse fallbackStreamingKeyCertificateURL]
  -[SSVPlaybackResponse setFallbackStreamingKeyCertificateURL:]


SSDownloadManifestRequest : SSRequest <SSXPCCoding>
 @property  long long manifestFormat
 @property  <SSDownloadManifestRequestDelegate> *delegate
 @property  NSURLRequest *URLRequest
 @property  BOOL shouldHideUserPrompts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSDownloadManifestRequest initWithXPCEncoding:]
  -[SSDownloadManifestRequest init]
  -[SSDownloadManifestRequest copyXPCEncoding]
  -[SSDownloadManifestRequest dealloc]
  -[SSDownloadManifestRequest initWithURLRequest:]
  -[SSDownloadManifestRequest startWithCompletionBlock:]
  -[SSDownloadManifestRequest manifestFormat]
  -[SSDownloadManifestRequest startWithManifestResponseBlock:]
  -[SSDownloadManifestRequest setShouldHideUserPrompts:]
  -[SSDownloadManifestRequest shouldHideUserPrompts]
  -[SSDownloadManifestRequest setManifestFormat:]
  -[SSDownloadManifestRequest URLRequest]
  -[SSDownloadManifestRequest start]


SSVURLCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSVURLCache init]
  -[SSVURLCache storeCachedResponse:forRequest:]
  -[SSVURLCache removeAllCachedResponses]
  -[SSVURLCache dealloc]
  -[SSVURLCache .cxx_destruct]
  -[SSVURLCache configureRequest:]
  -[SSVURLCache cachedConnectionResponseForRequestProperties:cachedResponse:]
  -[SSVURLCache storeConnectionResponse:forRequestProperties:userInfo:]
  -[SSVURLCache loadMemoryCacheFromDisk]
  -[SSVURLCache cachedConnectionResponseForRequestProperties:]
  -[SSVURLCache saveMemoryCacheToDisk]
  -[SSVURLCache storeConnectionResponse:forRequestProperties:]
  -[SSVURLCache initWithConfiguration:]
  -[SSVURLCache cachedResponseForRequest:]


SSVURLCacheConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *sessionIdentifier
 @property  BOOL supportsProcessSharing

  // instance methods
  -[SSVURLCacheConfiguration .cxx_destruct]
  -[SSVURLCacheConfiguration sessionIdentifier]
  -[SSVURLCacheConfiguration setSessionIdentifier:]
  -[SSVURLCacheConfiguration supportsProcessSharing]
  -[SSVURLCacheConfiguration setSupportsProcessSharing:]


SSDownloadManifestResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSSecureCoding>
 @property  NSArray *validDownloads
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSDownloadManifestResponse supportsSecureCoding]

  // instance methods
  -[SSDownloadManifestResponse initWithXPCEncoding:]
  -[SSDownloadManifestResponse copyXPCEncoding]
  -[SSDownloadManifestResponse dealloc]
  -[SSDownloadManifestResponse encodeWithCoder:]
  -[SSDownloadManifestResponse setValidDownloads:]
  -[SSDownloadManifestResponse validDownloads]
  -[SSDownloadManifestResponse initWithCoder:]


SSRequest : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  BOOL shouldCancelAfterTaskExpiration
 @property  <SSRequestDelegate> *delegate
 @property  BOOL usesTaskCompletionAssertions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSRequest _allowMultipleCallbacks]

  // instance methods
  -[SSRequest disconnect]
  -[SSRequest init]
  -[SSRequest dealloc]
  -[SSRequest .cxx_destruct]
  -[SSRequest cancel]
  -[SSRequest _expireBackgroundTask]
  -[SSRequest startWithCompletionBlock:]
  -[SSRequest _shutdownRequest]
  -[SSRequest _startWithMessageID:messageBlock:]
  -[SSRequest _initSSRequest]
  -[SSRequest _shutdownRequestWithMessageID:]
  -[SSRequest __beginBackgroundTask]
  -[SSRequest __endBackgroundTask]
  -[SSRequest _cancelBackgroundTaskExpirationTimer]
  -[SSRequest setShouldCancelAfterTaskExpiration:]
  -[SSRequest shouldCancelAfterTaskExpiration]
  -[SSRequest _beginBackgroundTask]
  -[SSRequest usesTaskCompletionAssertions]
  -[SSRequest setUsesTaskCompletionAssertions:]
  -[SSRequest setDelegate:]
  -[SSRequest _endBackgroundTask]
  -[SSRequest delegate]
  -[SSRequest start]


SSUniqueExecutionQueue : NSObject /usr/lib/libc++.1.dylib
 @property  @? block
 @property  NSObject<OS_dispatch_queue> *callBlockQueue
 @property  NSObject<OS_dispatch_queue> *executeBlockQueue
 @property  SSPromise *promise
 @property  NSObject<OS_dispatch_queue> *promiseAccessQueue

  // instance methods
  -[SSUniqueExecutionQueue promise]
  -[SSUniqueExecutionQueue setPromise:]
  -[SSUniqueExecutionQueue initWithBlock:]
  -[SSUniqueExecutionQueue .cxx_destruct]
  -[SSUniqueExecutionQueue block]
  -[SSUniqueExecutionQueue setBlock:]
  -[SSUniqueExecutionQueue addCompletionBlock:]
  -[SSUniqueExecutionQueue callBlockQueue]
  -[SSUniqueExecutionQueue setCallBlockQueue:]
  -[SSUniqueExecutionQueue promiseAccessQueue]
  -[SSUniqueExecutionQueue executeBlockQueue]
  -[SSUniqueExecutionQueue setExecuteBlockQueue:]


SSVSubscriptionEntitlementsSubscription : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumber *appAdamId
 @property  NSNumber *appVersion
 @property  NSString *chargeCountryCode
 @property  NSString *chargeCurrencyCode
 @property  NSNumber *chargeStoreFrontIdentifier
 @property  NSDate *expireDate
 @property  NSNumber *familyId
 @property  NSNumber *inAppAdamId
 @property  NSString *inAppVersion
 @property  BOOL newsAppPurchase
 @property  NSString *offerIdentifier
 @property  NSNumber *originalPurchaseDownloadId
 @property  NSNumber *purchasabilityType
 @property  NSNumber *purchaseDownloadId
 @property  NSNumber *quantity
 @property  NSString *vendorIdentifier

  // instance methods
  -[SSVSubscriptionEntitlementsSubscription setAppVersion:]
  -[SSVSubscriptionEntitlementsSubscription copyWithZone:]
  -[SSVSubscriptionEntitlementsSubscription appVersion]
  -[SSVSubscriptionEntitlementsSubscription initWithXPCEncoding:]
  -[SSVSubscriptionEntitlementsSubscription setQuantity:]
  -[SSVSubscriptionEntitlementsSubscription copyXPCEncoding]
  -[SSVSubscriptionEntitlementsSubscription isNewsAppPurchase]
  -[SSVSubscriptionEntitlementsSubscription chargeCurrencyCode]
  -[SSVSubscriptionEntitlementsSubscription offerIdentifier]
  -[SSVSubscriptionEntitlementsSubscription .cxx_destruct]
  -[SSVSubscriptionEntitlementsSubscription setOfferIdentifier:]
  -[SSVSubscriptionEntitlementsSubscription setExpireDate:]
  -[SSVSubscriptionEntitlementsSubscription quantity]
  -[SSVSubscriptionEntitlementsSubscription vendorIdentifier]
  -[SSVSubscriptionEntitlementsSubscription appAdamId]
  -[SSVSubscriptionEntitlementsSubscription familyId]
  -[SSVSubscriptionEntitlementsSubscription chargeCountryCode]
  -[SSVSubscriptionEntitlementsSubscription setFamilyId:]
  -[SSVSubscriptionEntitlementsSubscription setChargeCountryCode:]
  -[SSVSubscriptionEntitlementsSubscription setChargeCurrencyCode:]
  -[SSVSubscriptionEntitlementsSubscription chargeStoreFrontIdentifier]
  -[SSVSubscriptionEntitlementsSubscription setChargeStoreFrontIdentifier:]
  -[SSVSubscriptionEntitlementsSubscription setNewsAppPurchase:]
  -[SSVSubscriptionEntitlementsSubscription originalPurchaseDownloadId]
  -[SSVSubscriptionEntitlementsSubscription purchasabilityType]
  -[SSVSubscriptionEntitlementsSubscription setOriginalPurchaseDownloadId:]
  -[SSVSubscriptionEntitlementsSubscription setPurchasabilityType:]
  -[SSVSubscriptionEntitlementsSubscription purchaseDownloadId]
  -[SSVSubscriptionEntitlementsSubscription setPurchaseDownloadId:]
  -[SSVSubscriptionEntitlementsSubscription expireDate]
  -[SSVSubscriptionEntitlementsSubscription inAppVersion]
  -[SSVSubscriptionEntitlementsSubscription setInAppAdamId:]
  -[SSVSubscriptionEntitlementsSubscription setInAppVersion:]
  -[SSVSubscriptionEntitlementsSubscription setAppAdamId:]
  -[SSVSubscriptionEntitlementsSubscription setVendorIdentifier:]
  -[SSVSubscriptionEntitlementsSubscription inAppAdamId]


SSVMediaContentTasteController : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSVMediaContentTasteController defaultMediaTasteController]

  // instance methods
  -[SSVMediaContentTasteController init]
  -[SSVMediaContentTasteController dealloc]
  -[SSVMediaContentTasteController .cxx_destruct]
  -[SSVMediaContentTasteController _refreshContentTasteItems]
  -[SSVMediaContentTasteController _contentTasteForItemUpdate:finishedWithError:]
  -[SSVMediaContentTasteController _sendUpdateWithItemUpdates:completionHandler:]
  -[SSVMediaContentTasteController _handleContentTasteItemsUpdateResponse:allowNotifications:]
  -[SSVMediaContentTasteController _isRetryableError:]
  -[SSVMediaContentTasteController _scheduleContentTasteUpdateOperationForFailedItems]
  -[SSVMediaContentTasteController _retryOperationForItemUpdates:finishedWithError:]
  -[SSVMediaContentTasteController contentTasteTypeForPlaylistGlobalID:]
  -[SSVMediaContentTasteController contentTasteTypeForStoreAdamID:]
  -[SSVMediaContentTasteController setContentTasteType:forPlaylistGlobalID:withCompletionHandler:]
  -[SSVMediaContentTasteController setContentTasteType:forStoreAdamID:withContentType:completionHandler:]


SSVURLDataConsumer : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSVURLDataConsumer consumer]

  // instance methods
  -[SSVURLDataConsumer objectForData:response:error:]


SSVPBPlayActivityEnqueuerProperties : PBCodable /usr/lib/libobjc.A.dylib <NSCopying>
 @property  BOOL hasBuildVersion
 @property  NSString *buildVersion
 @property  BOOL hasDeviceGUID
 @property  NSString *deviceGUID
 @property  BOOL hasDeviceName
 @property  NSString *deviceName
 @property  BOOL hasTimeZoneName
 @property  NSString *timeZoneName
 @property  BOOL hasSystemReleaseType
 @property  int systemReleaseType
 @property  BOOL hasSBEnabled
 @property  BOOL sBEnabled
 @property  BOOL hasStoreAccountID
 @property  unsigned long storeAccountID
 @property  BOOL hasStoreFrontID
 @property  NSString *storeFrontID
 @property  BOOL hasPrivateListeningEnabled
 @property  BOOL privateListeningEnabled

  // instance methods
  -[SSVPBPlayActivityEnqueuerProperties copyWithZone:]
  -[SSVPBPlayActivityEnqueuerProperties setPrivateListeningEnabled:]
  -[SSVPBPlayActivityEnqueuerProperties setBuildVersion:]
  -[SSVPBPlayActivityEnqueuerProperties deviceName]
  -[SSVPBPlayActivityEnqueuerProperties timeZoneName]
  -[SSVPBPlayActivityEnqueuerProperties setTimeZoneName:]
  -[SSVPBPlayActivityEnqueuerProperties hasDeviceName]
  -[SSVPBPlayActivityEnqueuerProperties setStoreAccountID:]
  -[SSVPBPlayActivityEnqueuerProperties buildVersion]
  -[SSVPBPlayActivityEnqueuerProperties .cxx_destruct]
  -[SSVPBPlayActivityEnqueuerProperties storeFrontID]
  -[SSVPBPlayActivityEnqueuerProperties hasTimeZoneName]
  -[SSVPBPlayActivityEnqueuerProperties storeAccountID]
  -[SSVPBPlayActivityEnqueuerProperties setDeviceName:]
  -[SSVPBPlayActivityEnqueuerProperties readFrom:]
  -[SSVPBPlayActivityEnqueuerProperties writeTo:]
  -[SSVPBPlayActivityEnqueuerProperties isEqual:]
  -[SSVPBPlayActivityEnqueuerProperties setSBEnabled:]
  -[SSVPBPlayActivityEnqueuerProperties hasDeviceGUID]
  -[SSVPBPlayActivityEnqueuerProperties sBEnabled]
  -[SSVPBPlayActivityEnqueuerProperties setDeviceGUID:]
  -[SSVPBPlayActivityEnqueuerProperties hasSBEnabled]
  -[SSVPBPlayActivityEnqueuerProperties hasBuildVersion]
  -[SSVPBPlayActivityEnqueuerProperties systemReleaseType]
  -[SSVPBPlayActivityEnqueuerProperties setSystemReleaseType:]
  -[SSVPBPlayActivityEnqueuerProperties setHasSystemReleaseType:]
  -[SSVPBPlayActivityEnqueuerProperties hasSystemReleaseType]
  -[SSVPBPlayActivityEnqueuerProperties systemReleaseTypeAsString:]
  -[SSVPBPlayActivityEnqueuerProperties setHasSBEnabled:]
  -[SSVPBPlayActivityEnqueuerProperties StringAsSystemReleaseType:]
  -[SSVPBPlayActivityEnqueuerProperties setHasStoreAccountID:]
  -[SSVPBPlayActivityEnqueuerProperties hasStoreAccountID]
  -[SSVPBPlayActivityEnqueuerProperties hasStoreFrontID]
  -[SSVPBPlayActivityEnqueuerProperties setHasPrivateListeningEnabled:]
  -[SSVPBPlayActivityEnqueuerProperties hasPrivateListeningEnabled]
  -[SSVPBPlayActivityEnqueuerProperties copyTo:]
  -[SSVPBPlayActivityEnqueuerProperties dictionaryRepresentation]
  -[SSVPBPlayActivityEnqueuerProperties setStoreFrontID:]
  -[SSVPBPlayActivityEnqueuerProperties deviceGUID]
  -[SSVPBPlayActivityEnqueuerProperties mergeFrom:]
  -[SSVPBPlayActivityEnqueuerProperties privateListeningEnabled]


SSInstallAttributionParamsRequest : SSRequest <SSXPCCoding>
 @property  NSNumber *appAdamId
 @property  NSString *adNetworkId
 @property  NSNumber *campaignId
 @property  NSString *impressionId
 @property  NSNumber *timestamp
 @property  NSString *attributionSignature
 @property  NSString *originatingBundleId
 @property  BOOL overrideCampaignLimit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSInstallAttributionParamsRequest campaignId]
  -[SSInstallAttributionParamsRequest initWithXPCEncoding:]
  -[SSInstallAttributionParamsRequest copyXPCEncoding]
  -[SSInstallAttributionParamsRequest originatingBundleId]
  -[SSInstallAttributionParamsRequest .cxx_destruct]
  -[SSInstallAttributionParamsRequest timestamp]
  -[SSInstallAttributionParamsRequest startWithCompletionBlock:]
  -[SSInstallAttributionParamsRequest appAdamId]
  -[SSInstallAttributionParamsRequest adNetworkId]
  -[SSInstallAttributionParamsRequest initWithAppAdamId:adNetworkId:campaignId:impressionId:timestamp:attributionSignature:originatingBundleId:overrideCampaignLimit:]
  -[SSInstallAttributionParamsRequest impressionId]
  -[SSInstallAttributionParamsRequest initWithAppAdamId:adNetworkId:campaignId:impressionId:timestamp:attributionSignature:]
  -[SSInstallAttributionParamsRequest initWithAppAdamId:adNetworkId:campaignId:impressionId:timestamp:attributionSignature:originatingBundleId:]
  -[SSInstallAttributionParamsRequest attributionSignature]
  -[SSInstallAttributionParamsRequest overrideCampaignLimit]


SSPurchaseRequest : SSRequest <SSPurchaseManagerDelegate, SSXPCCoding>
 @property  BOOL createsDownloads
 @property  BOOL createsJobs
 @property  BOOL playbackRequest
 @property  BOOL shouldValidatePurchases
 @property  <SSPurchaseRequestDelegate> *delegate
 @property  NSArray *purchases
 @property  BOOL backgroundRequest
 @property  BOOL needsAuthentication
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSPurchaseRequest initWithXPCEncoding:]
  -[SSPurchaseRequest init]
  -[SSPurchaseRequest copyXPCEncoding]
  -[SSPurchaseRequest dealloc]
  -[SSPurchaseRequest setNeedsAuthentication:]
  -[SSPurchaseRequest cancel]
  -[SSPurchaseRequest startWithCompletionBlock:]
  -[SSPurchaseRequest purchaseManager:didFinishPurchasesWithResponses:]
  -[SSPurchaseRequest purchases]
  -[SSPurchaseRequest needsAuthentication]
  -[SSPurchaseRequest initWithPurchases:]
  -[SSPurchaseRequest _addPurchasesToManager]
  -[SSPurchaseRequest _finishPurchasesWithResponses:]
  -[SSPurchaseRequest setCreatesDownloads:]
  -[SSPurchaseRequest setCreatesJobs:]
  -[SSPurchaseRequest _purchaseForUniqueIdentifier:]
  -[SSPurchaseRequest startWithPurchaseBlock:completionBlock:]
  -[SSPurchaseRequest startWithPurchaseResponseBlock:completionBlock:]
  -[SSPurchaseRequest createsDownloads]
  -[SSPurchaseRequest isBackgroundRequest]
  -[SSPurchaseRequest setBackgroundRequest:]
  -[SSPurchaseRequest isPlaybackRequest]
  -[SSPurchaseRequest shouldValidatePurchases]
  -[SSPurchaseRequest setShouldValidatePurchases:]
  -[SSPurchaseRequest createsJobs]
  -[SSPurchaseRequest setPlaybackRequest:]
  -[SSPurchaseRequest start]


SSVURLBagInterpreter : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSArray *AMDDomains
 @property  NSURL *mescalCertificateURL
 @property  NSURL *mescalSetupURL
 @property  NSURL *mescalPrimingURL
 @property  NSDictionary *mescalSignedActions
 @property  NSDictionary *mescalSignedRequests
 @property  NSDictionary *mescalSignedResponses
 @property  NSURL *pastisCertificateURL
 @property  NSURL *pastisKeyServerURL
 @property  NSString *storeFrontSuffix

  // instance methods
  -[SSVURLBagInterpreter copyWithZone:]
  -[SSVURLBagInterpreter mescalSignedActions]
  -[SSVURLBagInterpreter valueForURLBagKey:]
  -[SSVURLBagInterpreter initWithURLBag:]
  -[SSVURLBagInterpreter storeFrontSuffix]
  -[SSVURLBagInterpreter initWithURLBagDictionary:]
  -[SSVURLBagInterpreter mescalSignaturePolicyForRequestURL:]
  -[SSVURLBagInterpreter .cxx_destruct]
  -[SSVURLBagInterpreter mescalSetupURL]
  -[SSVURLBagInterpreter shouldSendAnonymousMachineIdentifierForURL:]
  -[SSVURLBagInterpreter pastisKeyServerURL]
  -[SSVURLBagInterpreter _valueForKey:withClass:]
  -[SSVURLBagInterpreter initWithSSBag:]
  -[SSVURLBagInterpreter mescalCertificateURL]
  -[SSVURLBagInterpreter URLForURLBagKey:]
  -[SSVURLBagInterpreter pastisCertificateURL]
  -[SSVURLBagInterpreter mescalSignedResponses]
  -[SSVURLBagInterpreter cachedValueFromBag:key:withType:updateCache:]
  -[SSVURLBagInterpreter AMDDomains]
  -[SSVURLBagInterpreter mescalSignedRequests]
  -[SSVURLBagInterpreter mescalPrimingURL]
  -[SSVURLBagInterpreter mescalSignaturePolicyForResponseURL:]


SSVLoadURLOperation : NSOperation /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <SSURLSessionManagerDelegate>
 @property  long long machineDataStyle
 @property  SSVFairPlaySAPSession *SAPSession
 @property  SSVSAPSignaturePolicy *SAPSignaturePolicy
 @property  <SSVLoadURLOperationDelegate> *delegate
 @property  NSURL *URL
 @property  NSURLRequest *URLRequest
 @property  NSCachedURLResponse *cachedURLResponse
 @property  SSVURLDataConsumer *dataConsumer
 @property  BOOL ITunesStoreRequest
 @property  SSMetricsPageEvent *metricsPageEvent
 @property  SSBag *bag
 @property  BOOL recordsMetrics
 @property  NSString *referrerApplicationName
 @property  NSString *referrerURLString
 @property  NSString *storeFrontSuffix
 @property  NSHTTPURLResponse *URLResponse
 @property  @? expiredOutputBlock
 @property  @? outputBlock
 @property  @? prepareRequestBlock
 @property  BOOL shouldSuppressCookies
 @property  BOOL shouldSuppressUserInfo
 @property  NSNumber *metricsLoadURLSessionDuration
 @property  NSNumber *metricsLoadURLSamplingPercentage
 @property  NSNumber *metricsLoadURLSamplingPercentageCachedResponses
 @property  BOOL isURLBagRequest
 @property  NSData *rawResponseData
 @property  SSURLRequestProperties *requestProperties
 @property  BOOL shouldDisableCellular
 @property  BOOL shouldRequireCellular
 @property  BOOL shouldSetCookies
 @property  NSData *sourceAppAuditTokenData
 @property  NSString *sourceAppBundleID
 @property  NSURLCache *URLCache
 @property  NSString *URLCacheID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSVLoadURLOperation currentAcceptLanguage]

  // instance methods
  -[SSVLoadURLOperation dispatchSync:]
  -[SSVLoadURLOperation URLSession:dataTask:didReceiveData:]
  -[SSVLoadURLOperation init]
  -[SSVLoadURLOperation storeFrontSuffix]
  -[SSVLoadURLOperation main]
  -[SSVLoadURLOperation setITunesStoreRequest:]
  -[SSVLoadURLOperation initWithURL:]
  -[SSVLoadURLOperation shouldSuppressUserInfo]
  -[SSVLoadURLOperation SAPSession]
  -[SSVLoadURLOperation initWithURLRequest:]
  -[SSVLoadURLOperation .cxx_destruct]
  -[SSVLoadURLOperation URLSession:task:didReceiveChallenge:completionHandler:]
  -[SSVLoadURLOperation URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[SSVLoadURLOperation initWithURLRequestProperties:]
  -[SSVLoadURLOperation URLResponse]
  -[SSVLoadURLOperation metricsPageEvent]
  -[SSVLoadURLOperation setBag:]
  -[SSVLoadURLOperation bag]
  -[SSVLoadURLOperation setSAPSession:]
  -[SSVLoadURLOperation URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[SSVLoadURLOperation cancel]
  -[SSVLoadURLOperation setOutputBlock:]
  -[SSVLoadURLOperation configureWithURLBagDictionary:]
  -[SSVLoadURLOperation setStoreFrontSuffix:]
  -[SSVLoadURLOperation setSAPSignaturePolicy:]
  -[SSVLoadURLOperation setDataConsumer:]
  -[SSVLoadURLOperation isITunesStoreRequest]
  -[SSVLoadURLOperation dataConsumer]
  -[SSVLoadURLOperation _runOnce]
  -[SSVLoadURLOperation dispatchAsync:]
  -[SSVLoadURLOperation setDelegate:]
  -[SSVLoadURLOperation URL]
  -[SSVLoadURLOperation URLRequest]
  -[SSVLoadURLOperation _initSSVLoadURLOperation]
  -[SSVLoadURLOperation shouldSuppressCookies]
  -[SSVLoadURLOperation recordsMetrics]
  -[SSVLoadURLOperation _newURLRequestWithRedirectURL:]
  -[SSVLoadURLOperation _stopRunLoop]
  -[SSVLoadURLOperation _finishWithData:]
  -[SSVLoadURLOperation _createAuthKitSession]
  -[SSVLoadURLOperation outputBlock]
  -[SSVLoadURLOperation setShouldSuppressUserInfo:]
  -[SSVLoadURLOperation setPrepareRequestBlock:]
  -[SSVLoadURLOperation metricsLoadURLSessionDuration]
  -[SSVLoadURLOperation metricsLoadURLSamplingPercentage]
  -[SSVLoadURLOperation metricsLoadURLSamplingPercentageCachedResponses]
  -[SSVLoadURLOperation _finishWithOutput:error:]
  -[SSVLoadURLOperation prepareRequestBlock]
  -[SSVLoadURLOperation _shouldRetryAfterMachineDataRequest:]
  -[SSVLoadURLOperation _applyResponseToMetrics:]
  -[SSVLoadURLOperation _outputForData:error:]
  -[SSVLoadURLOperation _releaseOutputBlocks]
  -[SSVLoadURLOperation _stopIfCancelled]
  -[SSVLoadURLOperation _configureWithURLBagInterpreter:]
  -[SSVLoadURLOperation _addMachineDataHeadersToRequest:withAccountIdentifier:]
  -[SSVLoadURLOperation _addSAPSignatureToRequest:]
  -[SSVLoadURLOperation _loadURLBagInterpreter]
  -[SSVLoadURLOperation setMachineDataStyle:]
  -[SSVLoadURLOperation _runRunLoopUntilStopped]
  -[SSVLoadURLOperation _keepAliveTimer:]
  -[SSVLoadURLOperation URLSession:task:didCompleteWithEvent:error:]
  -[SSVLoadURLOperation rawResponseData]
  -[SSVLoadURLOperation requestProperties]
  -[SSVLoadURLOperation initWithData:fromOperation:]
  -[SSVLoadURLOperation cachedURLResponse]
  -[SSVLoadURLOperation configureWithURLBag:]
  -[SSVLoadURLOperation expiredOutputBlock]
  -[SSVLoadURLOperation referrerApplicationName]
  -[SSVLoadURLOperation referrerURLString]
  -[SSVLoadURLOperation SAPSignaturePolicy]
  -[SSVLoadURLOperation setExpiredOutputBlock:]
  -[SSVLoadURLOperation setRecordsMetrics:]
  -[SSVLoadURLOperation setReferrerApplicationName:]
  -[SSVLoadURLOperation setReferrerURLString:]
  -[SSVLoadURLOperation _dataForCachedResponse:]
  -[SSVLoadURLOperation setShouldSuppressCookies:]
  -[SSVLoadURLOperation delegate]
  -[SSVLoadURLOperation machineDataStyle]


SSObserver : NSObject /usr/lib/libc++.1.dylib
 @property  @? completionBlock
 @property  @? failureBlock
 @property  @? resultBlock

  // class methods
  +[SSObserver observerWithResultBlock:]
  +[SSObserver observerWithResultBlock:completionBlock:failureBlock:]

  // instance methods
  -[SSObserver _sendCompletionUsingQueue:]
  -[SSObserver .cxx_destruct]
  -[SSObserver resultBlock]
  -[SSObserver setCompletionBlock:]
  -[SSObserver completionBlock]
  -[SSObserver setResultBlock:]
  -[SSObserver _sendFailure:usingQueue:]
  -[SSObserver _sendResult:usingQueue:]
  -[SSObserver failureBlock]
  -[SSObserver setFailureBlock:]


SSPurchase : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSSecureCoding, NSCopying>
 @property  long long batchIdentifier
 @property  NSNumber *enabledServiceType
 @property  long long expectedDownloadFileSize
 @property  NSArray *gratisIdentifiers
 @property  BOOL gratisSoftwareClaim
 @property  long long placeholderDownloadIdentifier
 @property  BOOL playbackRequest
 @property  id requiredDeviceCapabilities
 @property  NSDictionary *tidHeaders
 @property  long long uniqueIdentifier
 @property  BOOL usesLocalRedownloadParametersIfPossible
 @property  BOOL preauthenticated
 @property  NSData *databaseEncoding
 @property  NSNumber *accountIdentifier
 @property  NSString *affiliateIdentifier
 @property  NSString *buyParameters
 @property  BOOL createsDownloads
 @property  NSArray *filteredAssetTypes
 @property  BOOL backgroundPurchase
 @property  SSURLRequestProperties *requestProperties
 @property  NSDictionary *downloadProperties
 @property  BOOL displaysOnLockScreen
 @property  SSDownloadPolicy *downloadPolicy
 @property  BOOL ignoresForcedPasswordRestriction
 @property  SSNetworkConstraints *networkConstraints
 @property  BOOL createsJobs
 @property  BOOL createsInstallJobs
 @property  NSNumber *ownerAccountDSID
 @property  BOOL skipSoftwareAccountPreflight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSPurchase supportsSecureCoding]
  +[SSPurchase newPurchaseWithXPCEncoding:]
  +[SSPurchase purchaseWithBuyParameters:]
  +[SSPurchase newPurchaseWithDatabaseEncoding:]

  // instance methods
  -[SSPurchase setUniqueIdentifier:]
  -[SSPurchase item]
  -[SSPurchase copyWithZone:]
  -[SSPurchase initWithXPCEncoding:]
  -[SSPurchase init]
  -[SSPurchase copyXPCEncoding]
  -[SSPurchase accountIdentifier]
  -[SSPurchase .cxx_destruct]
  -[SSPurchase initWithDatabaseEncoding:]
  -[SSPurchase encodeWithCoder:]
  -[SSPurchase uniqueIdentifier]
  -[SSPurchase networkConstraints]
  -[SSPurchase setNetworkConstraints:]
  -[SSPurchase initWithItem:offer:]
  -[SSPurchase setRequiredDeviceCapabilities:]
  -[SSPurchase setRequestProperties:]
  -[SSPurchase valueForDownloadProperty:]
  -[SSPurchase placeholderDownloadIdentifier]
  -[SSPurchase setValue:forDownloadProperty:]
  -[SSPurchase setBackgroundPurchase:]
  -[SSPurchase setDownloadPolicy:]
  -[SSPurchase downloadPolicy]
  -[SSPurchase setIgnoresForcedPasswordRestriction:]
  -[SSPurchase setBuyParameters:]
  -[SSPurchase requiredDeviceCapabilities]
  -[SSPurchase isEqual:]
  -[SSPurchase databaseEncoding]
  -[SSPurchase setCreatesDownloads:]
  -[SSPurchase setCreatesJobs:]
  -[SSPurchase tidHeaders]
  -[SSPurchase setTidHeaders:]
  -[SSPurchase createsDownloads]
  -[SSPurchase isPlaybackRequest]
  -[SSPurchase createsJobs]
  -[SSPurchase itemOffer]
  -[SSPurchase initWithItem:]
  -[SSPurchase setDisplaysOnLockScreen:]
  -[SSPurchase requestProperties]
  -[SSPurchase _initSSPurchase]
  -[SSPurchase _buyParametersValueForKey:fromBuyParams:]
  -[SSPurchase _setValuesUsingDatabaseEncoding:]
  -[SSPurchase _addEntriesToDatabaseEncoding:]
  -[SSPurchase _createsDownloadsWithOverride]
  -[SSPurchase _createsJobsWithOverride]
  -[SSPurchase _createsInstallJobsWithOverride]
  -[SSPurchase affiliateIdentifier]
  -[SSPurchase createsInstallJobs]
  -[SSPurchase setPlaybackRequest:]
  -[SSPurchase setAccountIdentifier:]
  -[SSPurchase displaysOnLockScreen]
  -[SSPurchase downloadProperties]
  -[SSPurchase filteredAssetTypes]
  -[SSPurchase ignoresForcedPasswordRestriction]
  -[SSPurchase isBackgroundPurchase]
  -[SSPurchase ownerAccountDSID]
  -[SSPurchase setAffiliateIdentifier:]
  -[SSPurchase setCreatesInstallJobs:]
  -[SSPurchase setDownloadProperties:]
  -[SSPurchase setFilteredAssetTypes:]
  -[SSPurchase setOwnerAccountDSID:]
  -[SSPurchase setSkipSoftwareAccountPreflight:]
  -[SSPurchase batchIdentifier]
  -[SSPurchase buyParametersValueForKey:]
  -[SSPurchase enabledServiceType]
  -[SSPurchase gratisIdentifiers]
  -[SSPurchase expectedDownloadFileSize]
  -[SSPurchase isGratisSoftwareClaim]
  -[SSPurchase isPreauthenticated]
  -[SSPurchase setBatchIdentifier:]
  -[SSPurchase setDefaultUserAgent:]
  -[SSPurchase setEnabledServiceType:]
  -[SSPurchase setExpectedDownloadFileSize:]
  -[SSPurchase setPreauthenticated:]
  -[SSPurchase initWithCoder:]
  -[SSPurchase setGratisIdentifiers:]
  -[SSPurchase setPlaceholderDownloadIdentifier:]
  -[SSPurchase setUsesLocalRedownloadParametersIfPossible:]
  -[SSPurchase usesLocalRedownloadParametersIfPossible]
  -[SSPurchase downloadMetadata]
  -[SSPurchase setDownloadMetadata:]
  -[SSPurchase skipSoftwareAccountPreflight]
  -[SSPurchase buyParameters]


SSTonePurchase : SSPurchase <SSXPCCoding, NSSecureCoding, NSCopying>
 @property  NSArray *allowedToneStyles
 @property  NSNumber *assigneeIdentifier
 @property  NSString *assigneeContactIdentifier
 @property  NSString *assigneeToneStyle
 @property  BOOL shouldMakeDefaultRingtone
 @property  BOOL shouldMakeDefaultTextTone
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSTonePurchase supportsSecureCoding]

  // instance methods
  -[SSTonePurchase copyWithZone:]
  -[SSTonePurchase initWithXPCEncoding:]
  -[SSTonePurchase copyXPCEncoding]
  -[SSTonePurchase .cxx_destruct]
  -[SSTonePurchase encodeWithCoder:]
  -[SSTonePurchase initWithItem:offer:]
  -[SSTonePurchase _setValuesUsingDatabaseEncoding:]
  -[SSTonePurchase _addEntriesToDatabaseEncoding:]
  -[SSTonePurchase initWithCoder:]
  -[SSTonePurchase allowedToneStyles]
  -[SSTonePurchase setAllowedToneStyles:]
  -[SSTonePurchase setAssigneeIdentifier:]
  -[SSTonePurchase setAssigneeContactIdentifier:]
  -[SSTonePurchase setAssigneeToneStyle:]
  -[SSTonePurchase assigneeIdentifier]
  -[SSTonePurchase setShouldMakeDefaultRingtone:]
  -[SSTonePurchase setShouldMakeDefaultTextTone:]
  -[SSTonePurchase assigneeContactIdentifier]
  -[SSTonePurchase assigneeToneStyle]
  -[SSTonePurchase shouldMakeDefaultRingtone]
  -[SSTonePurchase shouldMakeDefaultTextTone]


SSRingtonePurchase : SSTonePurchase

SSVRefreshStoreQueueDownloadOperation : SSVLoadDownloadQueueOperation
 @property  NSNumber *accountID
 @property  NSString *downloadTransactionID

  // instance methods
  -[SSVRefreshStoreQueueDownloadOperation _refreshDownloadWithTransactionID:accountID:bagKey:error:]
  -[SSVRefreshStoreQueueDownloadOperation initWithDownloadTransactionIdentifier:accountID:]
  -[SSVRefreshStoreQueueDownloadOperation isDownloadTransactionID]
  -[SSVRefreshStoreQueueDownloadOperation downloadTransactionID]
  -[SSVRefreshStoreQueueDownloadOperation main]
  -[SSVRefreshStoreQueueDownloadOperation .cxx_destruct]
  -[SSVRefreshStoreQueueDownloadOperation accountID]


SSURLConnectionRequest : SSRequest <SSXPCCoding>
 @property  SSAuthenticationContext *authenticationContext
 @property  SSVURLDataConsumer *dataConsumer
 @property  BOOL runsInProcess
 @property  BOOL sendsResponseForHTTPFailures
 @property  SSVFairPlaySAPSession *SAPSession
 @property  SSVSAPSignaturePolicy *SAPSignaturePolicy
 @property  <SSURLConnectionRequestDelegate> *delegate
 @property  NSURLRequest *URLRequest
 @property  SSURLRequestProperties *requestProperties
 @property  NSURL *destinationFileURL
 @property  BOOL shouldMescalSign
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSURLConnectionRequest initWithXPCEncoding:]
  -[SSURLConnectionRequest startWithConnectionResponseBlock:]
  -[SSURLConnectionRequest runsInProcess]
  -[SSURLConnectionRequest destinationFileURL]
  -[SSURLConnectionRequest sendsResponseForHTTPFailures]
  -[SSURLConnectionRequest shouldMescalSign]
  -[SSURLConnectionRequest setSendsResponseForHTTPFailures:]
  -[SSURLConnectionRequest setShouldMescalSign:]
  -[SSURLConnectionRequest setDestinationFileURL:]
  -[SSURLConnectionRequest setRunsInProcess:]
  -[SSURLConnectionRequest init]
  -[SSURLConnectionRequest copyXPCEncoding]
  -[SSURLConnectionRequest authenticationContext]
  -[SSURLConnectionRequest SAPSession]
  -[SSURLConnectionRequest dealloc]
  -[SSURLConnectionRequest initWithURLRequest:]
  -[SSURLConnectionRequest setSAPSession:]
  -[SSURLConnectionRequest startWithCompletionBlock:]
  -[SSURLConnectionRequest configureWithURLBagDictionary:]
  -[SSURLConnectionRequest setSAPSignaturePolicy:]
  -[SSURLConnectionRequest setDataConsumer:]
  -[SSURLConnectionRequest dataConsumer]
  -[SSURLConnectionRequest setAuthenticationContext:]
  -[SSURLConnectionRequest URLRequest]
  -[SSURLConnectionRequest requestProperties]
  -[SSURLConnectionRequest configureWithURLBag:]
  -[SSURLConnectionRequest SAPSignaturePolicy]
  -[SSURLConnectionRequest _canRunInProcess]
  -[SSURLConnectionRequest start]
  -[SSURLConnectionRequest initWithRequestProperties:]


SSItemLookupRequest : SSRequest <SSXPCCoding>
 @property  NSDictionary *parameters
 @property  <SSItemLookupRequestDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSItemLookupRequest parameters]
  -[SSItemLookupRequest initWithXPCEncoding:]
  -[SSItemLookupRequest _convertedValueForValue:]
  -[SSItemLookupRequest _errorForStatusCode:]
  -[SSItemLookupRequest _copyItemsFromResponse:expirationDate:]
  -[SSItemLookupRequest startWithItemLookupBlock:]
  -[SSItemLookupRequest copyQueryStringParameters]
  -[SSItemLookupRequest init]
  -[SSItemLookupRequest copyXPCEncoding]
  -[SSItemLookupRequest dealloc]
  -[SSItemLookupRequest valueForParameter:]
  -[SSItemLookupRequest setValue:forParameter:]
  -[SSItemLookupRequest startWithCompletionBlock:]
  -[SSItemLookupRequest start]


SSVAppleAccountStore : NSObject /usr/lib/libc++.1.dylib
 @property  ACAccount *primaryAppleAccount

  // class methods
  +[SSVAppleAccountStore sharedAccountStore]

  // instance methods
  -[SSVAppleAccountStore _accountStoreDidChangeNotification:]
  -[SSVAppleAccountStore init]
  -[SSVAppleAccountStore .cxx_destruct]
  -[SSVAppleAccountStore primaryAppleAccount]


SSItem : NSObject /usr/lib/libc++.1.dylib <SSURLConnectionRequestDelegate>
 @property  NSNumber *ITunesStoreIdentifier
 @property  NSArray *allItemOffers
 @property  SSItemOffer *defaultItemOffer
 @property  NSString *artistName
 @property  NSDate *expirationDate
 @property  NSString *itemTitle
 @property  NSString *itemKind
 @property  BOOL restricted
 @property  BOOL highDefinition
 @property  BOOL gameCenterEnabled
 @property  NSURL *viewItemURL
 @property  float averageUserRating
 @property  long long numberOfUserRatings
 @property  SSItemImageCollection *imageCollection
 @property  NSArray *thumbnailImages
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSItem seasonNumber]
  -[SSItem composerName]
  -[SSItem seriesName]
  -[SSItem releaseDate]
  -[SSItem artistName]
  -[SSItem isGameCenterEnabled]
  -[SSItem isRestricted]
  -[SSItem urlConnectionRequest:didReceiveResponse:]
  -[SSItem tellAFriendBody]
  -[SSItem _tellAFriendDictionary]
  -[SSItem priceDisplay]
  -[SSItem allItemOffers]
  -[SSItem collectionName]
  -[SSItem networkName]
  -[SSItem _finishTellAFriendLoadWithError:]
  -[SSItem averageUserRating]
  -[SSItem loadTellAFriendMessageWithCompletionHandler:]
  -[SSItem numberOfPrintedPages]
  -[SSItem tellAFriendBodyMIMEType]
  -[SSItem relatedItemsForRelationType:]
  -[SSItem tellAFriendBodyURL]
  -[SSItem tellAFriendSubject]
  -[SSItem thumbnailImages]
  -[SSItem tweetInitialText]
  -[SSItem viewItemURL]
  -[SSItem sendGiftURL]
  -[SSItem viewReviewsURL]
  -[SSItem bundleVersion]
  -[SSItem valueForProperty:]
  -[SSItem contentRating]
  -[SSItem dealloc]
  -[SSItem genreIdentifier]
  -[SSItem longDescription]
  -[SSItem _setExpirationDate:]
  -[SSItem podcastFeedURL]
  -[SSItem itemKind]
  -[SSItem mediaKind]
  -[SSItem defaultItemOffer]
  -[SSItem ITunesStoreIdentifier]
  -[SSItem preOrderIdentifier]
  -[SSItem artistIdentifier]
  -[SSItem collectionArtistName]
  -[SSItem collectionIndexInCollectionGroup]
  -[SSItem episodeIdentifier]
  -[SSItem itemTitle]
  -[SSItem episodeSortIdentifier]
  -[SSItem indexInCollection]
  -[SSItem numberOfCollectionsInCollectionGroup]
  -[SSItem podcastEpisodeGUID]
  -[SSItem numberOfItemsInCollection]
  -[SSItem videoDetails]
  -[SSItem softwareType]
  -[SSItem isHighDefinition]
  -[SSItem playableMedia]
  -[SSItem imageCollection]
  -[SSItem releaseDateString]
  -[SSItem numberOfUserRatings]
  -[SSItem shortDescription]
  -[SSItem requestDidFinish:]
  -[SSItem initWithItemDictionary:]
  -[SSItem tweetURL]
  -[SSItem isCompilation]
  -[SSItem expirationDate]
  -[SSItem _offers]
  -[SSItem bundleIdentifier]
  -[SSItem request:didFailWithError:]
  -[SSItem rawItemDictionary]
  -[SSItem itemOfferForIdentifier:]
  -[SSItem genreName]
  -[SSItem buyParameters]
  -[SSItem collectionIdentifier]


SSItemMedia : NSObject /usr/lib/libc++.1.dylib
 @property  long long fullDurationInMilliseconds
 @property  long long mediaFileSize
 @property  NSString *mediaKind
 @property  long long durationInMilliseconds
 @property  BOOL protectedMedia
 @property  NSURL *URL

  // instance methods
  -[SSItemMedia init]
  -[SSItemMedia initWithStoreOfferDictionary:]
  -[SSItemMedia mediaFileSize]
  -[SSItemMedia isProtectedMedia]
  -[SSItemMedia dealloc]
  -[SSItemMedia setMediaKind:]
  -[SSItemMedia mediaKind]
  -[SSItemMedia fullDurationInMilliseconds]
  -[SSItemMedia durationInMilliseconds]
  -[SSItemMedia isEqual:]
  -[SSItemMedia URL]


SSWatchMetricsEvent : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSDate *timestamp
 @property  NSNumber *adamId
 @property  NSString *cohortID
 @property  NSNumber *pid
 @property  NSNumber *appExternalVersionID
 @property  NSNumber *purchaserDsid
 @property  NSNumber *userDsid
 @property  NSString *appExtensionVersion
 @property  NSString *bundleIdentifier
 @property  NSString *downloadVarietyID
 @property  unsigned long eventType
 @property  unsigned long installType
 @property  NSString *model
 @property  NSString *osVersion
 @property  NSString *versionString
 @property  NSString *watchGuid
 @property  NSString *watchSerial
 @property  NSString *watchSize

  // instance methods
  -[SSWatchMetricsEvent versionString]
  -[SSWatchMetricsEvent copyWithZone:]
  -[SSWatchMetricsEvent installType]
  -[SSWatchMetricsEvent setOsVersion:]
  -[SSWatchMetricsEvent osVersion]
  -[SSWatchMetricsEvent setEventType:]
  -[SSWatchMetricsEvent init]
  -[SSWatchMetricsEvent setAppExternalVersionID:]
  -[SSWatchMetricsEvent setAppExtensionVersion:]
  -[SSWatchMetricsEvent setCohortID:]
  -[SSWatchMetricsEvent setDownloadVarietyID:]
  -[SSWatchMetricsEvent setInstallType:]
  -[SSWatchMetricsEvent setPurchaserDsid:]
  -[SSWatchMetricsEvent setWatchGuid:]
  -[SSWatchMetricsEvent setWatchSerial:]
  -[SSWatchMetricsEvent appExtensionVersion]
  -[SSWatchMetricsEvent watchSerial]
  -[SSWatchMetricsEvent appExternalVersionID]
  -[SSWatchMetricsEvent downloadVarietyID]
  -[SSWatchMetricsEvent purchaserDsid]
  -[SSWatchMetricsEvent _appCohortID:]
  -[SSWatchMetricsEvent financeDictionaryRepresentation]
  -[SSWatchMetricsEvent setVersionString:]
  -[SSWatchMetricsEvent .cxx_destruct]
  -[SSWatchMetricsEvent setPid:]
  -[SSWatchMetricsEvent timestamp]
  -[SSWatchMetricsEvent setModel:]
  -[SSWatchMetricsEvent eventType]
  -[SSWatchMetricsEvent setTimestamp:]
  -[SSWatchMetricsEvent userDsid]
  -[SSWatchMetricsEvent initWithDictionary:]
  -[SSWatchMetricsEvent pid]
  -[SSWatchMetricsEvent setAdamId:]
  -[SSWatchMetricsEvent adamId]
  -[SSWatchMetricsEvent setBundleIdentifier:]
  -[SSWatchMetricsEvent watchSize]
  -[SSWatchMetricsEvent cohortID]
  -[SSWatchMetricsEvent setUserDsid:]
  -[SSWatchMetricsEvent dictionaryRepresentation]
  -[SSWatchMetricsEvent model]
  -[SSWatchMetricsEvent bundleIdentifier]
  -[SSWatchMetricsEvent watchGuid]
  -[SSWatchMetricsEvent setWatchSize:]


SSAppWakeRequest : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *appIdentifier
 @property  NSDictionary *launchOptions
 @property  BOOL shouldLaunchApp
 @property  NSString *processAssertionIdentifier
 @property  double processAssertionInterval
 @property  NSString *processAssertionReason

  // class methods
  +[SSAppWakeRequest newsstandFinishRequestWithAppIdentifier:issueIdentifiers:]
  +[SSAppWakeRequest familyContentRemovalRequestWithAppIdentifier:accountPairs:]

  // instance methods
  -[SSAppWakeRequest copyWithZone:]
  -[SSAppWakeRequest setAppIdentifier:]
  -[SSAppWakeRequest appIdentifier]
  -[SSAppWakeRequest launchOptions]
  -[SSAppWakeRequest setLaunchOptions:]
  -[SSAppWakeRequest setShouldLaunchApp:]
  -[SSAppWakeRequest setProcessAssertionIdentifier:]
  -[SSAppWakeRequest setProcessAssertionInterval:]
  -[SSAppWakeRequest setProcessAssertionReason:]
  -[SSAppWakeRequest processAssertionIdentifier]
  -[SSAppWakeRequest processAssertionInterval]
  -[SSAppWakeRequest processAssertionReason]
  -[SSAppWakeRequest shouldLaunchApp]
  -[SSAppWakeRequest .cxx_destruct]


SSRentalCheckoutRequest : SSRequest <SSXPCCoding>
 @property  NSArray *sinfs
 @property  NSNumber *accountIdentifier
 @property  NSNumber *rentalKeyIdentifier
 @property  long long downloadIdentifier
 @property  BOOL shouldValidateRentalInfo
 @property  BOOL checkoutWithPlay
 @property  unsigned long checkoutType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSRentalCheckoutRequest initWithXPCEncoding:]
  -[SSRentalCheckoutRequest startWithConnectionResponseBlock:]
  -[SSRentalCheckoutRequest sinfs]
  -[SSRentalCheckoutRequest init]
  -[SSRentalCheckoutRequest initWithAccountIdentifier:rentalKeyIdentifier:]
  -[SSRentalCheckoutRequest copyXPCEncoding]
  -[SSRentalCheckoutRequest initWithSinfs:]
  -[SSRentalCheckoutRequest initWithDownloadIdentifier:]
  -[SSRentalCheckoutRequest rentalKeyIdentifier]
  -[SSRentalCheckoutRequest shouldValidateRentalInfo]
  -[SSRentalCheckoutRequest setShouldValidateRentalInfo:]
  -[SSRentalCheckoutRequest shouldCheckoutWithPlay]
  -[SSRentalCheckoutRequest setCheckoutWithPlay:]
  -[SSRentalCheckoutRequest checkoutType]
  -[SSRentalCheckoutRequest setCheckoutType:]
  -[SSRentalCheckoutRequest accountIdentifier]
  -[SSRentalCheckoutRequest downloadIdentifier]
  -[SSRentalCheckoutRequest dealloc]
  -[SSRentalCheckoutRequest startWithCompletionBlock:]


SSAccount : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  NSObject<OS_dispatch_queue> *backingAccountAccessQueue
 @property  long long accountSource
 @property  NSArray *automaticDownloadKinds
 @property  ACAccount *backingAccount
 @property  BOOL demoAccount
 @property  NSString *demoAccountRawPassword
 @property  BOOL dirty
 @property  BOOL hasBrokenDSID
 @property  BOOL localAccount
 @property  NSString *secureToken
 @property  BOOL didFallbackToPassword
 @property  BOOL active
 @property  BOOL activeLockerAccount
 @property  NSString *ITunesPassSerialNumber
 @property  BOOL newCustomer
 @property  BOOL managedAppleID
 @property  NSString *passwordEquivalentToken
 @property  NSString *rawPassword
 @property  long long accountKind
 @property  NSString *accountName
 @property  long long accountScope
 @property  NSString *altDSID
 @property  BOOL authenticated
 @property  NSString *creditsString
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSDictionary *privacyAcknowledgement
 @property  BOOL socialEnabled
 @property  NSString *storeFrontIdentifier
 @property  NSNumber *uniqueIdentifier
 @property  long long availableServiceTypes
 @property  long long enabledServiceTypes
 @property  long long freeDownloadsPasswordSetting
 @property  long long paidPurchasesPasswordSetting
 @property  NSString *localizedName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSAccount accountKindFromAuthenticationResponseDictionary:]
  +[SSAccount backingAccountIsLocalAccount:]
  +[SSAccount _countryCodeFromStorefrontIdentifier:]
  +[SSAccount isNewCustomerFromAuthenticationResponseDictionary:]
  +[SSAccount lastNameFromAuthenticationResponseDictionary:]
  +[SSAccount accountNameFromAuthenticationResponseDictionary:]
  +[SSAccount storeFrontIdentifierFromURLResponse:]
  +[SSAccount _valueForFirstAvailableKeyPath:inDictionary:]
  +[SSAccount serverValueForAccountPasswordSettingValue:]
  +[SSAccount _displayedServerPromptKeyWithIdentifier:]
  +[SSAccount altDSIDFromAuthenticationResponseDictionary:]
  +[SSAccount creditsStringFromAuthenticationResponseDictionary:]
  +[SSAccount DSIDFromAuthenticationResponseDictionary:]
  +[SSAccount secureTokenForIdentifier:]
  +[SSAccount isManagedAppleIDFromAuthenticationResponseDictionary:]
  +[SSAccount _lastAttemptForServerPromptKeyWithIdentifier:]
  +[SSAccount firstNameFromAuthenticationResponseDictionary:]
  +[SSAccount backingAccountIsDemoAccount:]

  // instance methods
  -[SSAccount lastName]
  -[SSAccount isAuthenticated]
  -[SSAccount setUniqueIdentifier:]
  -[SSAccount copyWithZone:]
  -[SSAccount accountName]
  -[SSAccount setLastAttemptDate:forServerPromptWithIdentifier:]
  -[SSAccount altDSID]
  -[SSAccount setLastName:]
  -[SSAccount addEnabledServiceTypes:]
  -[SSAccount enabledServiceTypes]
  -[SSAccount setAccountScope:]
  -[SSAccount isSocialEnabled]
  -[SSAccount secureToken]
  -[SSAccount setAltDSID:]
  -[SSAccount setAccountKind:]
  -[SSAccount initWithXPCEncoding:]
  -[SSAccount removeAvailableServiceTypes:]
  -[SSAccount init]
  -[SSAccount setStoreFrontIdentifier:]
  -[SSAccount lastAttemptDateForServerPromptWithIdentifier:]
  -[SSAccount copyXPCEncoding]
  -[SSAccount setAccountSource:]
  -[SSAccount acceptTermsAndConditions:withCompletionBlock:]
  -[SSAccount backingAccount]
  -[SSAccount ITunesPassSerialNumber]
  -[SSAccount copyLockdownRepresentation]
  -[SSAccount setCreditsString:]
  -[SSAccount setPaidPurchasesPasswordSetting:]
  -[SSAccount getDownloadKindsEligibleForContentRestoreWithBlock:]
  -[SSAccount addAvailableServiceTypes:]
  -[SSAccount setPrivacyAcknowledgement:]
  -[SSAccount setFirstName:]
  -[SSAccount _setBackingAccount:]
  -[SSAccount firstName]
  -[SSAccount .cxx_destruct]
  -[SSAccount setEnabledServiceTypes:]
  -[SSAccount _removeAccountPropertyBitmask:forKey:]
  -[SSAccount initWithBackingAccount:]
  -[SSAccount storeFrontIdentifier]
  -[SSAccount freeDownloadsPasswordSetting]
  -[SSAccount setSocialEnabled:]
  -[SSAccount setITunesPassSerialNumber:]
  -[SSAccount localizedName]
  -[SSAccount _sendMessage:withReply:]
  -[SSAccount isNewCustomer]
  -[SSAccount updateAccountPasswordSettingsWithRequestProperties:completionBlock:]
  -[SSAccount hasBrokenDSID]
  -[SSAccount uniqueIdentifier]
  -[SSAccount setManagedAppleID:]
  -[SSAccount accountPropertyForKey:]
  -[SSAccount getTermsAndConditionsWithBlock:]
  -[SSAccount accountSource]
  -[SSAccount setDisplayedServerPrompt:withIdentifier:]
  -[SSAccount automaticDownloadKinds]
  -[SSAccount eligibilityForService:]
  -[SSAccount didFallbackToPassword]
  -[SSAccount getPurchasedItemsForItems:completionBlock:]
  -[SSAccount setActive:]
  -[SSAccount creditsString]
  -[SSAccount setSecureToken:]
  -[SSAccount isActive]
  -[SSAccount setAuthenticated:]
  -[SSAccount rawPassword]
  -[SSAccount removeEnabledServiceTypes:]
  -[SSAccount setNewCustomer:]
  -[SSAccount setLockdownDictionary:]
  -[SSAccount setBiometricToken:]
  -[SSAccount setEligibility:forServiceType:]
  -[SSAccount _backingAccount]
  -[SSAccount backingAccountAccessQueue]
  -[SSAccount isDirty]
  -[SSAccount passwordEquivalentToken]
  -[SSAccount getEligibilityForService:completionBlock:]
  -[SSAccount getITunesMatchStatusWithCompletionBlock:]
  -[SSAccount isManagedAppleID]
  -[SSAccount accountKind]
  -[SSAccount setPasswordEquivalentToken:]
  -[SSAccount accountScope]
  -[SSAccount isActiveLockerAccount]
  -[SSAccount isEqual:]
  -[SSAccount resetTransientData]
  -[SSAccount demoAccountRawPassword]
  -[SSAccount setStoreFrontIdentifier:forRequest:response:]
  -[SSAccount mergeValuesFromAccount:]
  -[SSAccount popBiometricToken]
  -[SSAccount displayedServerPromptWithIdentifier:]
  -[SSAccount privacyAcknowledgement]
  -[SSAccount setDidFallbackToPassword:]
  -[SSAccount getKeybagSyncDataWithType:completionHandler:]
  -[SSAccount setDemoAccountRawPassword:]
  -[SSAccount setAutomaticDownloadKinds:]
  -[SSAccount paidPurchasesPasswordSetting]
  -[SSAccount setRawPassword:]
  -[SSAccount isDuplicate:]
  -[SSAccount setBackingAccountAccessQueue:]
  -[SSAccount updateAccountPasswordSettings:]
  -[SSAccount isLocalAccount]
  -[SSAccount availableServiceTypes]
  -[SSAccount _setAccountProperty:forKey:]
  -[SSAccount setFreeDownloadsPasswordSetting:]
  -[SSAccount _sendBlockingXPCMessage:]
  -[SSAccount hashedDescription]
  -[SSAccount setAccountName:]
  -[SSAccount setActiveLockerAccount:]
  -[SSAccount _addAccountPropertyBitmask:forKey:]
  -[SSAccount isDemoAccount]
  -[SSAccount setAvailableServiceTypes:]


SSRemoteWebViewRequest : SSRequest
 @property  NSString *referrer
 @property  NSString *URLString

  // instance methods
  -[SSRemoteWebViewRequest URLString]
  -[SSRemoteWebViewRequest initWithXPCEncoding:]
  -[SSRemoteWebViewRequest setURLString:]
  -[SSRemoteWebViewRequest copyXPCEncoding]
  -[SSRemoteWebViewRequest setReferrer:]
  -[SSRemoteWebViewRequest .cxx_destruct]
  -[SSRemoteWebViewRequest startWithCompletionBlock:]
  -[SSRemoteWebViewRequest referrer]


SSVLeaseCertificateRequestOperation : SSVComplexOperation
 @property  NSString *certificateURLBagKey
 @property  @? outputBlock

  // instance methods
  -[SSVLeaseCertificateRequestOperation initWithURLBag:]
  -[SSVLeaseCertificateRequestOperation main]
  -[SSVLeaseCertificateRequestOperation _resolveCertificateURLReturningError:]
  -[SSVLeaseCertificateRequestOperation certificateURLBagKey]
  -[SSVLeaseCertificateRequestOperation setCertificateURLBagKey:]
  -[SSVLeaseCertificateRequestOperation .cxx_destruct]
  -[SSVLeaseCertificateRequestOperation cancel]
  -[SSVLeaseCertificateRequestOperation setOutputBlock:]
  -[SSVLeaseCertificateRequestOperation initWithConfiguration:]
  -[SSVLeaseCertificateRequestOperation outputBlock]


SSVURLConnectionConsumer : SSVURLDataConsumer
  // instance methods
  -[SSVURLConnectionConsumer objectForData:response:error:]


SSAuthenticateRequest : SSRequest <SSXPCCoding>
 @property  SSLogConfig *logConfig
 @property  NSString *logUUID
 @property  UIViewController *_parentViewController
 @property  <SSAuthenticateRequestDelegate> *delegate
 @property  SSAuthenticationContext *authenticationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSAuthenticateRequest _accountToAuthenticateWithAuthenticationContext:]
  +[SSAuthenticateRequest _isAuthkitEntitled]
  +[SSAuthenticateRequest localAuthenticationAvailable]

  // instance methods
  -[SSAuthenticateRequest run]
  -[SSAuthenticateRequest initWithXPCEncoding:]
  -[SSAuthenticateRequest init]
  -[SSAuthenticateRequest copyXPCEncoding]
  -[SSAuthenticateRequest logUUID]
  -[SSAuthenticateRequest initWithAuthenticationContext:]
  -[SSAuthenticateRequest startWithAuthenticateResponseBlock:]
  -[SSAuthenticateRequest _performRemoteAuthenticationWithCompletion:]
  -[SSAuthenticateRequest _shouldRunAuthenticationForAccount:]
  -[SSAuthenticateRequest _responseTypeForError:]
  -[SSAuthenticateRequest authenticationContext]
  -[SSAuthenticateRequest _verifyCredentialsOptionsFromUpdateAccountResponse:skipAuthKit:]
  -[SSAuthenticateRequest set_parentViewController:]
  -[SSAuthenticateRequest logConfig]
  -[SSAuthenticateRequest .cxx_destruct]
  -[SSAuthenticateRequest setLogConfig:]
  -[SSAuthenticateRequest startWithCompletionBlock:]
  -[SSAuthenticateRequest initWithAccount:]
  -[SSAuthenticateRequest _parentViewController]
  -[SSAuthenticateRequest _handleDialogFromError:]
  -[SSAuthenticateRequest start]


SSVRepairApplicationRequest : SSRequest <SSXPCCoding>
 @property  NSString *bundleID
 @property  NSNumber *accountDSID
 @property  long long claimStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVRepairApplicationRequest initWithXPCEncoding:]
  -[SSVRepairApplicationRequest copyXPCEncoding]
  -[SSVRepairApplicationRequest initWithBundleID:accountIdentifier:claimStyle:]
  -[SSVRepairApplicationRequest claimStyle]
  -[SSVRepairApplicationRequest .cxx_destruct]
  -[SSVRepairApplicationRequest accountDSID]
  -[SSVRepairApplicationRequest startWithResponseBlock:]
  -[SSVRepairApplicationRequest bundleID]


SSAuthenticationContext : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying, NSMutableCopying>
 @property  BOOL allowsBioAuthentication
 @property  BOOL allowsBootstrapCellularData
 @property  NSString *cancelButtonLabel
 @property  NSString *clientIdentifierHeader
 @property  BOOL displaysOnLockScreen
 @property  BOOL demoAccount
 @property  NSString *logUUID
 @property  NSString *okButtonLabel
 @property  BOOL persistsAcrossDeviceLock
 @property  NSString *promptTitle
 @property  NSString *reasonDescription
 @property  BOOL shouldIgnoreProtocol
 @property  long long tokenType
 @property  SSURLBagContext *URLBagContext
 @property  BOOL forceDaemonAuthentication
 @property  BOOL shouldPersonalizeResponseActions
 @property  NSString *accountName
 @property  long long accountScope
 @property  BOOL accountNameEditable
 @property  BOOL allowsRetry
 @property  BOOL allowsSilentAuthentication
 @property  NSString *altDSID
 @property  BOOL canCreateNewAccount
 @property  BOOL canSetActiveAccount
 @property  NSDictionary *HTTPHeaders
 @property  NSString *password
 @property  NSString *passwordEquivalentToken
 @property  NSString *initialPassword
 @property  BOOL persistsPasswordFallback
 @property  NSString *preferredITunesStoreClient
 @property  long long promptStyle
 @property  NSDictionary *requestParameters
 @property  NSNumber *requiredUniqueIdentifier
 @property  BOOL shouldCreateNewSession
 @property  BOOL shouldFollowAccountButtons
 @property  BOOL shouldSuppressDialogs
 @property  NSDictionary *signupRequestParameters
 @property  NSString *touchIDContinueToken
 @property  NSArray *userAgentComponents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSAuthenticationContext contextForSignIn]

  // instance methods
  -[SSAuthenticationContext URLBagContext]
  -[SSAuthenticationContext copyWithZone:]
  -[SSAuthenticationContext accountName]
  -[SSAuthenticationContext altDSID]
  -[SSAuthenticationContext allowsBootstrapCellularData]
  -[SSAuthenticationContext promptTitle]
  -[SSAuthenticationContext password]
  -[SSAuthenticationContext initWithXPCEncoding:]
  -[SSAuthenticationContext init]
  -[SSAuthenticationContext copyXPCEncoding]
  -[SSAuthenticationContext logUUID]
  -[SSAuthenticationContext forceDaemonAuthentication]
  -[SSAuthenticationContext accountStoreOptions]
  -[SSAuthenticationContext requiredUniqueIdentifier]
  -[SSAuthenticationContext _allowCreateAccount]
  -[SSAuthenticationContext _initSSAuthenticationContext]
  -[SSAuthenticationContext okButtonLabel]
  -[SSAuthenticationContext allowsSilentAuthentication]
  -[SSAuthenticationContext canCreateNewAccount]
  -[SSAuthenticationContext canSetActiveAccount]
  -[SSAuthenticationContext shouldSuppressDialogs]
  -[SSAuthenticationContext signupRequestParameters]
  -[SSAuthenticationContext preferredITunesStoreClient]
  -[SSAuthenticationContext userAgentComponents]
  -[SSAuthenticationContext allowsRetry]
  -[SSAuthenticationContext _copyIvarsToCopy:withZone:]
  -[SSAuthenticationContext cancelButtonLabel]
  -[SSAuthenticationContext clientIdentifierHeader]
  -[SSAuthenticationContext isAccountNameEditable]
  -[SSAuthenticationContext persistsAcrossDeviceLock]
  -[SSAuthenticationContext persistsPasswordFallback]
  -[SSAuthenticationContext shouldCreateNewSession]
  -[SSAuthenticationContext shouldFollowAccountButtons]
  -[SSAuthenticationContext shouldIgnoreProtocol]
  -[SSAuthenticationContext touchIDContinueToken]
  -[SSAuthenticationContext initialPassword]
  -[SSAuthenticationContext allowsBioAuthentication]
  -[SSAuthenticationContext shouldPersonalizeResponseActions]
  -[SSAuthenticationContext .cxx_destruct]
  -[SSAuthenticationContext tokenType]
  -[SSAuthenticationContext passwordEquivalentToken]
  -[SSAuthenticationContext promptStyle]
  -[SSAuthenticationContext initWithAccount:]
  -[SSAuthenticationContext accountScope]
  -[SSAuthenticationContext reasonDescription]
  -[SSAuthenticationContext mutableCopyWithZone:]
  -[SSAuthenticationContext HTTPHeaders]
  -[SSAuthenticationContext requestParameters]
  -[SSAuthenticationContext displaysOnLockScreen]
  -[SSAuthenticationContext isDemoAccount]
  -[SSAuthenticationContext initWithAccountIdentifier:]


SSMutableAuthenticationContext : SSAuthenticationContext <SSXPCCoding, NSCopying, NSMutableCopying>
 @property  BOOL allowsBioAuthentication
 @property  BOOL allowsBootstrapCellularData
 @property  NSString *cancelButtonLabel
 @property  NSString *clientIdentifierHeader
 @property  BOOL demoAccount
 @property  BOOL displaysOnLockScreen
 @property  BOOL forceDaemonAuthentication
 @property  NSString *logUUID
 @property  NSString *okButtonLabel
 @property  BOOL persistsAcrossDeviceLock
 @property  NSString *promptTitle
 @property  NSString *reasonDescription
 @property  BOOL shouldIgnoreProtocol
 @property  BOOL shouldPersonalizeResponseActions
 @property  long long tokenType
 @property  NSString *accountName
 @property  long long accountScope
 @property  BOOL accountNameEditable
 @property  BOOL allowsRetry
 @property  BOOL allowsSilentAuthentication
 @property  NSString *altDSID
 @property  BOOL canCreateNewAccount
 @property  BOOL canSetActiveAccount
 @property  NSString *initialPassword
 @property  NSString *password
 @property  NSString *passwordEquivalentToken
 @property  BOOL persistsPasswordFallback
 @property  NSString *preferredITunesStoreClient
 @property  long long promptStyle
 @property  NSDictionary *requestParameters
 @property  NSNumber *requiredUniqueIdentifier
 @property  BOOL shouldCreateNewSession
 @property  BOOL shouldFollowAccountButtons
 @property  BOOL shouldSuppressDialogs
 @property  NSDictionary *signupRequestParameters
 @property  NSString *touchIDContinueToken
 @property  NSArray *userAgentComponents
 @property  NSDictionary *HTTPHeaders
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSMutableAuthenticationContext setRequestParameters:]
  -[SSMutableAuthenticationContext copyWithZone:]
  -[SSMutableAuthenticationContext setReasonDescription:]
  -[SSMutableAuthenticationContext setAccountScope:]
  -[SSMutableAuthenticationContext setPromptTitle:]
  -[SSMutableAuthenticationContext setAltDSID:]
  -[SSMutableAuthenticationContext setAllowsBootstrapCellularData:]
  -[SSMutableAuthenticationContext setClientIdentifierHeader:]
  -[SSMutableAuthenticationContext setValue:forHTTPHeaderField:]
  -[SSMutableAuthenticationContext setOkButtonLabel:]
  -[SSMutableAuthenticationContext setShouldPersonalizeResponseActions:]
  -[SSMutableAuthenticationContext setHTTPHeaders:]
  -[SSMutableAuthenticationContext setPassword:]
  -[SSMutableAuthenticationContext setForceDaemonAuthentication:]
  -[SSMutableAuthenticationContext setLogUUID:]
  -[SSMutableAuthenticationContext setShouldIgnoreProtocol:]
  -[SSMutableAuthenticationContext setInitialPassword:]
  -[SSMutableAuthenticationContext setShouldCreateNewSession:]
  -[SSMutableAuthenticationContext setCancelButtonLabel:]
  -[SSMutableAuthenticationContext setAllowsSilentAuthentication:]
  -[SSMutableAuthenticationContext setCanSetActiveAccount:]
  -[SSMutableAuthenticationContext setPersistsPasswordFallback:]
  -[SSMutableAuthenticationContext setAllowsRetry:]
  -[SSMutableAuthenticationContext setShouldSuppressDialogs:]
  -[SSMutableAuthenticationContext setValuesWithAccount:]
  -[SSMutableAuthenticationContext setPasswordEquivalentToken:]
  -[SSMutableAuthenticationContext setRequiredUniqueIdentifier:]
  -[SSMutableAuthenticationContext setTokenType:]
  -[SSMutableAuthenticationContext setSignupRequestParameters:]
  -[SSMutableAuthenticationContext setPreferredITunesStoreClient:]
  -[SSMutableAuthenticationContext setDemoAccount:]
  -[SSMutableAuthenticationContext setAccountNameEditable:]
  -[SSMutableAuthenticationContext setCanCreateNewAccount:]
  -[SSMutableAuthenticationContext mutableCopyWithZone:]
  -[SSMutableAuthenticationContext setDisplaysOnLockScreen:]
  -[SSMutableAuthenticationContext setUserAgentComponents:]
  -[SSMutableAuthenticationContext setAccountName:]
  -[SSMutableAuthenticationContext setTouchIDContinueToken:]
  -[SSMutableAuthenticationContext setAllowsBioAuthentication:]
  -[SSMutableAuthenticationContext setShouldFollowAccountButtons:]
  -[SSMutableAuthenticationContext setPromptStyle:]
  -[SSMutableAuthenticationContext setPersistsAcrossDeviceLock:]


SSPaymentSheetRatingImage : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long ratingType
 @property  BOOL tint
 @property  NSString *urlString
 @property  NSString *value

  // instance methods
  -[SSPaymentSheetRatingImage copyWithZone:]
  -[SSPaymentSheetRatingImage initWithXPCEncoding:]
  -[SSPaymentSheetRatingImage copyXPCEncoding]
  -[SSPaymentSheetRatingImage tint]
  -[SSPaymentSheetRatingImage .cxx_destruct]
  -[SSPaymentSheetRatingImage urlString]
  -[SSPaymentSheetRatingImage initWithDictionary:]
  -[SSPaymentSheetRatingImage initWithURLString:]
  -[SSPaymentSheetRatingImage ratingType]
  -[SSPaymentSheetRatingImage _ratingTypeForType:]
  -[SSPaymentSheetRatingImage isServerSupplied]
  -[SSPaymentSheetRatingImage localAssetName]
  -[SSPaymentSheetRatingImage value]


SSSpringBoardUtility : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSSpringBoardUtility _dispatchQueue]
  +[SSSpringBoardUtility _dispatchQueueSpringBoard]
  +[SSSpringBoardUtility launchApplicationWithIdentifier:options:error:]
  +[SSSpringBoardUtility _stateCache]
  +[SSSpringBoardUtility _getProcessID:forApplicationIdentifier:]
  +[SSSpringBoardUtility _setApplicationState:forClientID:]
  +[SSSpringBoardUtility _getApplicationInfoForIdentifier:key:]
  +[SSSpringBoardUtility _dispatchQueueNotifications]
  +[SSSpringBoardUtility _applicationStateMonitor]
  +[SSSpringBoardUtility wakeAppUsingRequest:]


SSMetricsConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *fieldsMap
 @property  SSMetricsConfiguration *childConfiguration
 @property  BOOL disableEventDecoration

  // class methods
  +[SSMetricsConfiguration _reportingFrequencyOverride]
  +[SSMetricsConfiguration getReportingFrequencyOverrideWithCompletionBlock:]
  +[SSMetricsConfiguration setReportingFrequencyOverride:]

  // instance methods
  -[SSMetricsConfiguration isDisabled]
  -[SSMetricsConfiguration fieldsMap]
  -[SSMetricsConfiguration _initSSMetricsEventConfiguration]
  -[SSMetricsConfiguration isEventTypeBlacklisted:]
  -[SSMetricsConfiguration _setReportingFrequencyOverride:]
  -[SSMetricsConfiguration pingURLs]
  -[SSMetricsConfiguration dealloc]
  -[SSMetricsConfiguration reportingFrequency]
  -[SSMetricsConfiguration .cxx_destruct]
  -[SSMetricsConfiguration blacklistedEventFields]
  -[SSMetricsConfiguration isSendDisabled]
  -[SSMetricsConfiguration tokenStringWithElements:]
  -[SSMetricsConfiguration eventFields]
  -[SSMetricsConfiguration reportingURLString]
  -[SSMetricsConfiguration valueForConfigurationKey:]
  -[SSMetricsConfiguration disableEventDecoration]
  -[SSMetricsConfiguration cookieFields]
  -[SSMetricsConfiguration setChildConfiguration:]
  -[SSMetricsConfiguration initWithGlobalConfiguration:]
  -[SSMetricsConfiguration _decorateITMLEvents]
  -[SSMetricsConfiguration _configBooleanForKey:defaultValue:]
  -[SSMetricsConfiguration compoundStringWithElements:]
  -[SSMetricsConfiguration childConfiguration]
  -[SSMetricsConfiguration initWithStorePlatformData:]
  -[SSMetricsConfiguration setDisableEventDecoration:]


SSPromiseResult : NSObject /usr/lib/libc++.1.dylib
 @property  NSError *error
 @property  id result

  // instance methods
  -[SSPromiseResult result]
  -[SSPromiseResult .cxx_destruct]
  -[SSPromiseResult error]
  -[SSPromiseResult initWithResult:error:]


SSVMediaSocialPostItem : NSObject /usr/lib/libc++.1.dylib <NSCopying, SSXPCCoding>
 @property  NSString *identifier
 @property  NSString *type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVMediaSocialPostItem copyWithZone:]
  -[SSVMediaSocialPostItem initWithXPCEncoding:]
  -[SSVMediaSocialPostItem copyXPCEncoding]
  -[SSVMediaSocialPostItem setType:]
  -[SSVMediaSocialPostItem .cxx_destruct]
  -[SSVMediaSocialPostItem setIdentifier:]
  -[SSVMediaSocialPostItem identifier]
  -[SSVMediaSocialPostItem type]
  -[SSVMediaSocialPostItem isEqual:]


SSVMediaContentTasteUpdateResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSSecureCoding>
 @property  NSArray *contentTasteItems
 @property  NSDate *expirationDate
 @property  unsigned long responseRevisionID
 @property  BOOL cachedResponse
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSVMediaContentTasteUpdateResponse supportsSecureCoding]

  // instance methods
  -[SSVMediaContentTasteUpdateResponse initWithXPCEncoding:]
  -[SSVMediaContentTasteUpdateResponse copyXPCEncoding]
  -[SSVMediaContentTasteUpdateResponse setContentTasteItems:]
  -[SSVMediaContentTasteUpdateResponse setResponseRevisionID:]
  -[SSVMediaContentTasteUpdateResponse setExpirationDate:]
  -[SSVMediaContentTasteUpdateResponse .cxx_destruct]
  -[SSVMediaContentTasteUpdateResponse encodeWithCoder:]
  -[SSVMediaContentTasteUpdateResponse expirationDate]
  -[SSVMediaContentTasteUpdateResponse responseRevisionID]
  -[SSVMediaContentTasteUpdateResponse contentTasteItems]
  -[SSVMediaContentTasteUpdateResponse isCachedResponse]
  -[SSVMediaContentTasteUpdateResponse setCachedResponse:]
  -[SSVMediaContentTasteUpdateResponse initWithCoder:]


SSAccountStore : NSObject /usr/lib/libc++.1.dylib <AKAppleIDAuthenticationDelegate>
 @property  NSArray *accountsCache
 @property  NSObject<OS_dispatch_queue> *accountsCacheAccessQueue
 @property  NSObject<OS_dispatch_queue> *fetchAccountsQueue
 @property  BOOL inProcessCacheDisabled
 @property  SSKeyValueStore *keyValueStore
 @property  NSObject<OS_dispatch_queue> *metricsQueue
 @property  NSObject<OS_dispatch_queue> *notificationQueue
 @property  SSPromise *accountsPromise
 @property  BOOL authenticationActive
 @property  ACAccountStore *backingAccountStore
 @property  SSAccount *demoAccount
 @property  SSPromise *localAccount
 @property  SSAccount *activeAccount
 @property  SSAccount *activeSandboxAccount
 @property  SSAccount *activeLockerAccount
 @property  NSArray *accounts
 @property  SSAccount *localiTunesAccount
 @property  BOOL expired
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSAccountStore resetExpirationForTokenType:]
  +[SSAccountStore _createUpdatedAccount:withAuthenticationResults:options:]
  +[SSAccountStore _migrateAccountDictionary:fromKeyValueStore:originalActiveDSID:originalActiveLockerDSID:logKey:error:]
  +[SSAccountStore _backingAccountForAccount:]
  +[SSAccountStore _removeAccountDictionary:fromKeyValueStore:]
  +[SSAccountStore URLResponseAllowsSilentAuthentication:]
  +[SSAccountStore _unitTestAccountsAccessQueue]
  +[SSAccountStore _postAccountsChangedInternalDarwinNotification]
  +[SSAccountStore unitTestModeEnabled]
  +[SSAccountStore tokenExpirationInterval]
  +[SSAccountStore _copyKVSDatabaseWithError:]
  +[SSAccountStore migrateToAccountsFramework]
  +[SSAccountStore isExpired]
  +[SSAccountStore _createAuthenticationContextForAccount:silentAuthentication:options:]
  +[SSAccountStore resetExpiration]
  +[SSAccountStore setAuthenticationStartedDate:]
  +[SSAccountStore _refreshAccount:]
  +[SSAccountStore defaultStore]
  +[SSAccountStore isExpiredForTokenType:]
  +[SSAccountStore _accountDictionaryRepresentsActiveLockerAccount:inKeyValueStore:]
  +[SSAccountStore _accountDictionaryRepresentsActiveAccount:inKeyValueStore:]
  +[SSAccountStore _postAccountsChangedDarwinNotification]
  +[SSAccountStore _cleanupActiveAccountsAfterMigrationWithActiveDSID:activeLockerDSID:]
  +[SSAccountStore _shouldRemoveAccountDictionaryWithoutMigration:reason:]
  +[SSAccountStore _createAuthenticationController]
  +[SSAccountStore existingDefaultStore]
  +[SSAccountStore _disableAccountStoreChangedNotifications]
  +[SSAccountStore areAccountStoreChangedNotificationsDisabled]
  +[SSAccountStore _currentProcessLinksUIKit]
  +[SSAccountStore _isBuddyRunning]
  +[SSAccountStore _setActiveAccountIsManagedAppleIDPreference:]
  +[SSAccountStore _enableAccountStoreChangedNotifications]
  +[SSAccountStore _allowSilentPasswordAuthForAccount:withOptions:]
  +[SSAccountStore setUnitTestModeEnabled:]
  +[SSAccountStore _hashedDescriptionFromAccountDictionary:]
  +[SSAccountStore performCookieStorageMigration]
  +[SSAccountStore _addAccountToUnitTestStore:]
  +[SSAccountStore _removeAccountFromUnitTestStore:]

  // instance methods
  -[SSAccountStore keyValueStore]
  -[SSAccountStore addAccount:]
  -[SSAccountStore backingAccountStore]
  -[SSAccountStore resetExpirationForTokenType:]
  -[SSAccountStore notificationQueue]
  -[SSAccountStore accounts]
  -[SSAccountStore accountsCacheAccessQueue]
  -[SSAccountStore accountWithAltDSID:uniqueIdentifier:accountName:]
  -[SSAccountStore setAccountCredits:forAccountWithUniqueIdentifier:]
  -[SSAccountStore accountsPromise]
  -[SSAccountStore metricsQueue]
  -[SSAccountStore init]
  -[SSAccountStore _saveAccountInUnitTestMode:ignoreValidationErrors:]
  -[SSAccountStore saveAccount:completion:]
  -[SSAccountStore accountWithAccountName:]
  -[SSAccountStore removeCookiesForAccount:logKey:]
  -[SSAccountStore saveAccount:verifyCredentials:error:]
  -[SSAccountStore accountWithAltDSID:]
  -[SSAccountStore accountWithUniqueIdentifier:scope:]
  -[SSAccountStore accountWithUniqueIdentifier:reloadIfNecessary:]
  -[SSAccountStore dealloc]
  -[SSAccountStore _saveAccount:verifyCredentials:]
  -[SSAccountStore _updateAccountWithAuthKitViaSilentAuth:options:]
  -[SSAccountStore _updateAccountWithAuthKitViaSilentPETAuth:options:]
  -[SSAccountStore .cxx_destruct]
  -[SSAccountStore setDefaultAccountName:completionBlock:]
  -[SSAccountStore iTunesStoreAccountTypePromise]
  -[SSAccountStore resetLocalAccount]
  -[SSAccountStore activeAccount]
  -[SSAccountStore _passwordEquivalentTokenFromAlternateAccountWithAltDSID:DSID:username:]
  -[SSAccountStore saveAccount:verifyCredentials:completion:]
  -[SSAccountStore setMetricsQueue:]
  -[SSAccountStore setAccountsCacheAccessQueue:]
  -[SSAccountStore getDefaultAccountNameUsingBlock:]
  -[SSAccountStore demoAccount]
  -[SSAccountStore isExpired]
  -[SSAccountStore clearCachedAccounts]
  -[SSAccountStore updateAccountWithAuthKit:store:options:]
  -[SSAccountStore _optionsForProxiedAuthenticationWithVerifyCredentialsOptions:]
  -[SSAccountStore isAuthenticationActive]
  -[SSAccountStore accountWithAltDSID:uniqueIdentifier:accountName:scope:]
  -[SSAccountStore setKeyValueStore:]
  -[SSAccountStore _convertPasswordToPET:forAccount:options:]
  -[SSAccountStore activeLockerAccount]
  -[SSAccountStore resetExpiration]
  -[SSAccountStore signOutAccount:completion:]
  -[SSAccountStore removeAccount:error:]
  -[SSAccountStore signOutAllAccounts]
  -[SSAccountStore setNotificationQueue:]
  -[SSAccountStore _postAccountStoreChangeNotification]
  -[SSAccountStore localAccount]
  -[SSAccountStore setAccountsCache:]
  -[SSAccountStore isExpiredForTokenType:]
  -[SSAccountStore authenticationController:shouldContinueWithAuthenticationResults:error:forContext:]
  -[SSAccountStore _postAuthenticationActivityNotification]
  -[SSAccountStore accountWithUniqueIdentifier:]
  -[SSAccountStore accountWithAccountName:scope:]
  -[SSAccountStore setFetchAccountsQueue:]
  -[SSAccountStore _recordAnalyticsForMetricsDialogEvent:withTopic:]
  -[SSAccountStore removeAccount:completion:]
  -[SSAccountStore _shouldCreateNewAccountForAccount:options:]
  -[SSAccountStore _updateAccountWithAuthKitViaSilentPasswordAuth:options:]
  -[SSAccountStore signOutAllAccountsWithCompletionBlock:]
  -[SSAccountStore accountWithAltDSID:scope:]
  -[SSAccountStore iTunesStoreAccountType]
  -[SSAccountStore reloadAccounts]
  -[SSAccountStore _postActiveAccountChangedNotification]
  -[SSAccountStore fetchAccountsQueue]
  -[SSAccountStore _updateAccountWithAuthKitViaPromptAuth:store:options:]
  -[SSAccountStore removeAllAccountsWithCompletion:]
  -[SSAccountStore setActiveLockerAccount:]
  -[SSAccountStore localiTunesAccount]
  -[SSAccountStore signOutAccount:]
  -[SSAccountStore isInProcessCacheDisabled]
  -[SSAccountStore setInProcessCacheDisabled:]
  -[SSAccountStore saveAccount:error:]
  -[SSAccountStore activeSandboxAccount]
  -[SSAccountStore _setCachedAccounts:]
  -[SSAccountStore _buyParamsForBuyParamsString:]
  -[SSAccountStore _cachedAccounts]
  -[SSAccountStore setActiveAccount:]
  -[SSAccountStore repairAccountWithBrokenDSID:]
  -[SSAccountStore accountsCache]


SSAuthenticateResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  SSAccount *authenticatedAccount
 @property  long long authenticateResponseType
 @property  unsigned long credentialSource
 @property  NSError *error
 @property  NSDictionary *responseDictionary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSAuthenticateResponse _setError:]
  -[SSAuthenticateResponse responseDictionary]
  -[SSAuthenticateResponse initWithXPCEncoding:]
  -[SSAuthenticateResponse copyXPCEncoding]
  -[SSAuthenticateResponse setAuthenticatedAccount:]
  -[SSAuthenticateResponse setAuthenticateResponseType:]
  -[SSAuthenticateResponse authenticatedAccount]
  -[SSAuthenticateResponse authenticateResponseType]
  -[SSAuthenticateResponse setError:]
  -[SSAuthenticateResponse .cxx_destruct]
  -[SSAuthenticateResponse credentialSource]
  -[SSAuthenticateResponse error]
  -[SSAuthenticateResponse setResponseDictionary:]
  -[SSAuthenticateResponse setCredentialSource:]


SSWatchMetricsEventsController : NSObject /usr/lib/libc++.1.dylib
 @property  SSWatchMetricsEventTable *table
 @property  NSObject<OS_dispatch_queue> *serialQueue

  // class methods
  +[SSWatchMetricsEventsController _numberFormatter]

  // instance methods
  -[SSWatchMetricsEventsController table]
  -[SSWatchMetricsEventsController serialQueue]
  -[SSWatchMetricsEventsController markAsCompleted:]
  -[SSWatchMetricsEventsController markAsFailed:]
  -[SSWatchMetricsEventsController .cxx_destruct]
  -[SSWatchMetricsEventsController insertWatchMetricEvent:error:]
  -[SSWatchMetricsEventsController unreportedEventsSinceTimestamp:]
  -[SSWatchMetricsEventsController discardUnreportableEvents]


SSRestrictions : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSRestrictions isRestrictionsPasscodeSet:]
  +[SSRestrictions _isExplicitContentDisallowedInCurrentStoreFront]
  +[SSRestrictions _calculateIsRestrictionsPasscodeSet]
  +[SSRestrictions isActiveAccountAllowedToUpdateRestrictions]
  +[SSRestrictions isExplicitContentDisallowedInCurrentStoreFront:]
  +[SSRestrictions _isExplicitContentRestrictedByDefaultInCurrentStoreFront]
  +[SSRestrictions isExplicitContentRestrictedByDefaultInCurrentStoreFront:]
  +[SSRestrictions setAllowExplicitContent]
  +[SSRestrictions didDisplayExplicitRestrictionAlertOfType:]
  +[SSRestrictions shouldDisplayExplicitRestrictionAlertOfType:completionBlock:]
  +[SSRestrictions setOfActiveRestrictionUUIDs]


SSSoftwareUpdatesContext : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying, NSMutableCopying>
 @property  NSString *clientIdentifierHeader
 @property  BOOL forced
 @property  NSArray *softwareTypes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSSoftwareUpdatesContext copyWithZone:]
  -[SSSoftwareUpdatesContext initWithXPCEncoding:]
  -[SSSoftwareUpdatesContext copyXPCEncoding]
  -[SSSoftwareUpdatesContext clientIdentifierHeader]
  -[SSSoftwareUpdatesContext dealloc]
  -[SSSoftwareUpdatesContext softwareTypes]
  -[SSSoftwareUpdatesContext isForced]
  -[SSSoftwareUpdatesContext mutableCopyWithZone:]


SSMutableSoftwareUpdatesContext : SSSoftwareUpdatesContext <SSXPCCoding>
 @property  NSString *clientIdentifierHeader
 @property  BOOL forced
 @property  NSArray *softwareTypes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSMutableSoftwareUpdatesContext setClientIdentifierHeader:]
  -[SSMutableSoftwareUpdatesContext initWithXPCEncoding:]
  -[SSMutableSoftwareUpdatesContext copyXPCEncoding]
  -[SSMutableSoftwareUpdatesContext setForced:]
  -[SSMutableSoftwareUpdatesContext setSoftwareTypes:]


SSSoftwareUpdatesRequest : SSRequest
 @property  <SSSoftwareUpdatesRequestDelegate> *delegate
 @property  SSSoftwareUpdatesContext *updateQueueContext

  // instance methods
  -[SSSoftwareUpdatesRequest initWithXPCEncoding:]
  -[SSSoftwareUpdatesRequest copyXPCEncoding]
  -[SSSoftwareUpdatesRequest dealloc]
  -[SSSoftwareUpdatesRequest startWithUpdatesResponseBlock:]
  -[SSSoftwareUpdatesRequest initWithUpdateQueueContext:]
  -[SSSoftwareUpdatesRequest updateQueueContext]
  -[SSSoftwareUpdatesRequest startWithCompletionBlock:]
  -[SSSoftwareUpdatesRequest start]


SSSoftwareUpdatesResponse : NSObject /usr/lib/libc++.1.dylib
 @property  NSError *error
 @property  BOOL failed
 @property  NSArray *updateItems

  // instance methods
  -[SSSoftwareUpdatesResponse initWithXPCEncoding:]
  -[SSSoftwareUpdatesResponse copyXPCEncoding]
  -[SSSoftwareUpdatesResponse isFailed]
  -[SSSoftwareUpdatesResponse dealloc]
  -[SSSoftwareUpdatesResponse copyUpdateItemDictionaries]
  -[SSSoftwareUpdatesResponse setUpdateItemsWithItemDictionaries:]
  -[SSSoftwareUpdatesResponse error]
  -[SSSoftwareUpdatesResponse initWithError:]
  -[SSSoftwareUpdatesResponse updateItems]


SSMetricsController : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL flushTimerEnabled

  // instance methods
  -[SSMetricsController _connection]
  -[SSMetricsController isDisabled]
  -[SSMetricsController flushUnreportedEventsWithCompletionHandler:]
  -[SSMetricsController init]
  -[SSMetricsController serialQueue]
  -[SSMetricsController pingURLs]
  -[SSMetricsController dealloc]
  -[SSMetricsController recordAnalyticsForMetricsDialogEvent:withTopic:]
  -[SSMetricsController .cxx_destruct]
  -[SSMetricsController _setupFlushTimer]
  -[SSMetricsController _cookieValuesForConfiguration:]
  -[SSMetricsController _flushUnreportedEventsIfEnabled]
  -[SSMetricsController _handleFlushTimer]
  -[SSMetricsController insertEvents:withCompletionHandler:]
  -[SSMetricsController _enumerateFieldValuesWithMap:fieldData:block:]
  -[SSMetricsController _valueForField:withFieldData:]
  -[SSMetricsController insertEvent:withCompletionHandler:]
  -[SSMetricsController locationWithPosition:type:fieldData:]
  -[SSMetricsController setPageConfiguration:]
  -[SSMetricsController isFlushTimerEnabled]
  -[SSMetricsController _serialQueueInsertEvents:withCompletionHandler:]
  -[SSMetricsController _userType]
  -[SSMetricsController _applicationWillEnterForeground]
  -[SSMetricsController setGlobalConfiguration:]
  -[SSMetricsController configuration]
  -[SSMetricsController setFlushTimerEnabled:]


SSBag : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  BOOL expired
 @property  NSDate *expirationDate
 @property  SSBagProfileConfig *profileConfig

  // class methods
  +[SSBag cache]
  +[SSBag _AMSBagValueTypeFromSSBagValueType:]
  +[SSBag bagWithProfileConfig:]
  +[SSBag removeAllDebugBackingDictionaries]
  +[SSBag setDebugBackingDictionary:forProfileConfig:]

  // instance methods
  -[SSBag stringForKey:error:]
  -[SSBag dealloc]
  -[SSBag _bagChanged:]
  -[SSBag .cxx_destruct]
  -[SSBag _initWithProfile:profileVersion:]
  -[SSBag arrayForKey:withCompletion:]
  -[SSBag boolPromiseForKey:]
  -[SSBag boolForKey:withCompletion:]
  -[SSBag dictionaryForKey:withCompletion:]
  -[SSBag doubleForKey:withCompletion:]
  -[SSBag integerForKey:withCompletion:]
  -[SSBag stringForKey:withCompletion:]
  -[SSBag URLForKey:withCompletion:]
  -[SSBag profileVersion]
  -[SSBag arrayPromiseForKey:]
  -[SSBag dictionaryPromiseForKey:]
  -[SSBag doublePromiseForKey:]
  -[SSBag integerPromiseForKey:]
  -[SSBag stringPromiseForKey:]
  -[SSBag URLPromiseForKey:]
  -[SSBag profileConfig]
  -[SSBag URLIsTrusted:]
  -[SSBag canHandleTrustedDomains]
  -[SSBag _AMSBag]
  -[SSBag isExpired]
  -[SSBag resetCaches]
  -[SSBag expirationDate]
  -[SSBag profile]
  -[SSBag arrayForKey:error:]
  -[SSBag boolForKey:error:]
  -[SSBag setProfileVersion:]
  -[SSBag setProfile:]
  -[SSBag doubleForKey:error:]
  -[SSBag integerForKey:error:]
  -[SSBag URLForKey:error:]
  -[SSBag dictionaryForKey:error:]


SSEventsTableBase : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSEventsTableBase databasePath]

  // instance methods
  -[SSEventsTableBase init]
  -[SSEventsTableBase .cxx_destruct]
  -[SSEventsTableBase initWithDatabase:]
  -[SSEventsTableBase _setupDatabase]
  -[SSEventsTableBase performTransactionWithBlock:]


SSVCloudServiceAPITokenResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  NSString *apiToken
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVCloudServiceAPITokenResponse initWithXPCEncoding:]
  -[SSVCloudServiceAPITokenResponse copyXPCEncoding]
  -[SSVCloudServiceAPITokenResponse setError:]
  -[SSVCloudServiceAPITokenResponse .cxx_destruct]
  -[SSVCloudServiceAPITokenResponse initWithToken:error:]
  -[SSVCloudServiceAPITokenResponse setApiToken:]
  -[SSVCloudServiceAPITokenResponse error]
  -[SSVCloudServiceAPITokenResponse apiToken]


SSLazyPromise : SSPromise
 @property  @? block
 @property  NSLock *executeBlockLock
 @property  BOOL executedBlock

  // instance methods
  -[SSLazyPromise resultBeforeDate:error:]
  -[SSLazyPromise addErrorBlock:]
  -[SSLazyPromise resultWithError:]
  -[SSLazyPromise addSuccessBlock:]
  -[SSLazyPromise resultWithTimeout:error:]
  -[SSLazyPromise initWithBlock:]
  -[SSLazyPromise setExecuteBlockLock:]
  -[SSLazyPromise .cxx_destruct]
  -[SSLazyPromise block]
  -[SSLazyPromise setBlock:]
  -[SSLazyPromise executedBlock]
  -[SSLazyPromise _runBlock]
  -[SSLazyPromise setExecutedBlock:]
  -[SSLazyPromise executeBlockLock]


SSBagProfileConfig : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSDictionary *bagKeysDictionary
 @property  double bagLoadTimeout
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  NSArray *bagKeys

  // instance methods
  -[SSBagProfileConfig copyWithZone:]
  -[SSBagProfileConfig init]
  -[SSBagProfileConfig .cxx_destruct]
  -[SSBagProfileConfig bagKeys]
  -[SSBagProfileConfig bagKeyForStringRepresentation:]
  -[SSBagProfileConfig profileVersion]
  -[SSBagProfileConfig bagKeysDictionary]
  -[SSBagProfileConfig bagLoadTimeout]
  -[SSBagProfileConfig setBagLoadTimeout:]
  -[SSBagProfileConfig setBagKeysDictionary:]
  -[SSBagProfileConfig isEqual:]
  -[SSBagProfileConfig profile]
  -[SSBagProfileConfig setProfileVersion:]
  -[SSBagProfileConfig setProfile:]


SSMutableBagProfileConfig : SSBagProfileConfig
 @property  NSMutableDictionary *mutableBagKeysDictionary
 @property  double bagLoadTimeout
 @property  NSString *profile
 @property  NSString *profileVersion

  // instance methods
  -[SSMutableBagProfileConfig init]
  -[SSMutableBagProfileConfig .cxx_destruct]
  -[SSMutableBagProfileConfig bagKeysDictionary]
  -[SSMutableBagProfileConfig mutableBagKeysDictionary]
  -[SSMutableBagProfileConfig registerBagKey:valueType:defaultValue:]
  -[SSMutableBagProfileConfig registerBagKey:valueType:]
  -[SSMutableBagProfileConfig setMutableBagKeysDictionary:]


SSBinaryPromise : NSObject /usr/lib/libc++.1.dylib
 @property  SSPromise *backingPromise

  // class methods
  +[SSBinaryPromise promiseWithError:]
  +[SSBinaryPromise promiseWithPromise:]
  +[SSBinaryPromise _globalPromiseStorage]
  +[SSBinaryPromise _globalPromiseStorageAccessQueue]
  +[SSBinaryPromise promiseWithSuccess]

  // instance methods
  -[SSBinaryPromise addErrorBlock:]
  -[SSBinaryPromise resultWithError:]
  -[SSBinaryPromise addSuccessBlock:]
  -[SSBinaryPromise waitUntilFinished]
  -[SSBinaryPromise resultWithTimeout:error:]
  -[SSBinaryPromise finishWithError:]
  -[SSBinaryPromise waitUntilFinishedWithTimeout:]
  -[SSBinaryPromise addFinishBlock:]
  -[SSBinaryPromise completionHandlerAdapter]
  -[SSBinaryPromise backingPromise]
  -[SSBinaryPromise init]
  -[SSBinaryPromise .cxx_destruct]
  -[SSBinaryPromise _removeFromGlobalPromiseStorage]
  -[SSBinaryPromise promiseAdapter]
  -[SSBinaryPromise setBackingPromise:]
  -[SSBinaryPromise finishWithSuccess]


SSTransactionStore : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSTransactionStore defaultStore]

  // instance methods
  -[SSTransactionStore init]
  -[SSTransactionStore takeKeepAliveWithTransactionID:]
  -[SSTransactionStore releaseKeepAliveWithTransactionID:]
  -[SSTransactionStore .cxx_destruct]


SSItemOffer : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  SSItem *_offerItem
 @property  NSSet *accountIdentifiers
 @property  NSString *actionType
 @property  long long estimatedDiskSpaceNeeded
 @property  id requiredSoftwareCapabilities
 @property  BOOL shouldShowPlusIcon
 @property  NSString *offerIdentifier
 @property  NSString *buyParameters
 @property  NSString *priceDisplay
 @property  NSString *actionDisplayName
 @property  BOOL oneTapOffer
 @property  BOOL preorder
 @property  SSItemMedia *offerMedia
 @property  SSDialog *confirmationDialog
 @property  SSDialog *successDialog
 @property  NSArray *supportedDevices
 @property  SSNetworkConstraints *networkConstraints

  // class methods
  +[SSItemOffer _preferredOfferIdentifiers]

  // instance methods
  -[SSItemOffer copyWithZone:]
  -[SSItemOffer actionType]
  -[SSItemOffer _setOfferItem:]
  -[SSItemOffer priceDisplay]
  -[SSItemOffer initWithOfferIdentifier:dictionary:]
  -[SSItemOffer init]
  -[SSItemOffer valueForProperty:]
  -[SSItemOffer offerIdentifier]
  -[SSItemOffer dealloc]
  -[SSItemOffer accountIdentifiers]
  -[SSItemOffer offerMedia]
  -[SSItemOffer actionDisplayName]
  -[SSItemOffer confirmationDialog]
  -[SSItemOffer documentCannotOpenDialog]
  -[SSItemOffer documentRequiredHandlers]
  -[SSItemOffer documentUTI]
  -[SSItemOffer isOneTapOffer]
  -[SSItemOffer successDialog]
  -[SSItemOffer _offerItem]
  -[SSItemOffer isPreorder]
  -[SSItemOffer supportedDevices]
  -[SSItemOffer estimatedDiskSpaceNeeded]
  -[SSItemOffer requiredSoftwareCapabilities]
  -[SSItemOffer setActionDisplayName:]
  -[SSItemOffer setOneTapOffer:]
  -[SSItemOffer setPriceDisplay:]
  -[SSItemOffer shouldShowPlusIcon]
  -[SSItemOffer networkConstraints]
  -[SSItemOffer playableMedia]
  -[SSItemOffer setBuyParameters:]
  -[SSItemOffer buyParameters]
  -[SSItemOffer allowedToneStyles]


SSVPushNotificationRequest : SSRequest <SSXPCCoding>
 @property  SSVPushNotificationParameters *pushNotificationParameters
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVPushNotificationRequest initWithXPCEncoding:]
  -[SSVPushNotificationRequest copyXPCEncoding]
  -[SSVPushNotificationRequest .cxx_destruct]
  -[SSVPushNotificationRequest initWithPushNotificationParameters:]
  -[SSVPushNotificationRequest pushNotificationParameters]
  -[SSVPushNotificationRequest setPushNotificationParameters:]
  -[SSVPushNotificationRequest startWithCompletionBlock:]
  -[SSVPushNotificationRequest startWithResponseBlock:]
  -[SSVPushNotificationRequest start]


SSItemOfferDevice : NSObject /usr/lib/libc++.1.dylib
 @property  long long deviceIdentifier
 @property  NSString *minimumProductVersion
 @property  SSItemOfferDeviceError *incompatibleDeviceError
 @property  SSItemOfferDeviceError *incompatibleSystemError

  // instance methods
  -[SSItemOfferDevice init]
  -[SSItemOfferDevice deviceIdentifier]
  -[SSItemOfferDevice dealloc]
  -[SSItemOfferDevice initWithOfferDeviceDicitionary:]
  -[SSItemOfferDevice initWithDeviceIdentifier:]
  -[SSItemOfferDevice incompatibleDeviceError]
  -[SSItemOfferDevice incompatibleSystemError]
  -[SSItemOfferDevice minimumProductVersion]


SSItemOfferDeviceError : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *localizedMessage
 @property  NSString *localizedTitle
 @property  NSString *localizedURLTitle
 @property  NSURL *URL

  // instance methods
  -[SSItemOfferDeviceError dealloc]
  -[SSItemOfferDeviceError localizedTitle]
  -[SSItemOfferDeviceError localizedURLTitle]
  -[SSItemOfferDeviceError _initWithMessage:title:URLTitle:URL:]
  -[SSItemOfferDeviceError URL]
  -[SSItemOfferDeviceError localizedMessage]


SSDownloadManagerBookShim2 : SSDownloadManager
  // instance methods
  -[SSDownloadManagerBookShim2 moveDownload:beforeDownload:completionBlock:]
  -[SSDownloadManagerBookShim2 _copyDownloadsForMessage:downloadIDs:]
  -[SSDownloadManagerBookShim2 initWithManagerOptions:]
  -[SSDownloadManagerBookShim2 restartDownloads:completionBlock:]
  -[SSDownloadManagerBookShim2 resumeDownloads:completionBlock:]
  -[SSDownloadManagerBookShim2 _pauseDownloads:forced:completionBlock:]
  -[SSDownloadManagerBookShim2 cancelDownloads:completionBlock:]
  -[SSDownloadManagerBookShim2 __book_resumeDownloads:completionBlock:]
  -[SSDownloadManagerBookShim2 .cxx_destruct]
  -[SSDownloadManagerBookShim2 downloadQueue:downloadStatesDidChange:]
  -[SSDownloadManagerBookShim2 __book_cancelDownloads:completionBlock:]
  -[SSDownloadManagerBookShim2 __book_sendDownloadsChanged:filterBooks:]
  -[SSDownloadManagerBookShim2 __book_dispatchBlock:withError:]
  -[SSDownloadManagerBookShim2 _sendDownloadsChanged:]
  -[SSDownloadManagerBookShim2 __book_filterDownloads:withResult:]
  -[SSDownloadManagerBookShim2 downloadQueue:downloadStates:didCompleteWithError:]
  -[SSDownloadManagerBookShim2 __book_pauseDownloads:completionBlock:]
  -[SSDownloadManagerBookShim2 __book_getAllDownloads]
  -[SSDownloadManagerBookShim2 bookDownloads]
  -[SSDownloadManagerBookShim2 moveDownload:afterDownload:completionBlock:]
  -[SSDownloadManagerBookShim2 __book_downloadsForStati:overrideFinished:overrideFailed:]


SSNetworkConstraints : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, SSXPCCoding, NSCopying>
 @property  BOOL anyNetworkTypeEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSNetworkConstraints supportsSecureCoding]
  +[SSNetworkConstraints _newModernNetworkConstraintsWithArray:]
  +[SSNetworkConstraints newNetworkConstraintsByDownloadKindFromURLBag:]
  +[SSNetworkConstraints _addNetworkConstraintsToDictionary:forNetworkType:legacyDictionary:]
  +[SSNetworkConstraints networkConstraintsForDownloadKind:fromBag:]
  +[SSNetworkConstraints _newLegacyNetworkConstraintsWithDictionary:]

  // instance methods
  -[SSNetworkConstraints copyWithZone:]
  -[SSNetworkConstraints setSizeLimitsWithStoreConstraintDictionary:]
  -[SSNetworkConstraints initWithXPCEncoding:]
  -[SSNetworkConstraints init]
  -[SSNetworkConstraints copyXPCEncoding]
  -[SSNetworkConstraints dealloc]
  -[SSNetworkConstraints _copySizeLimits]
  -[SSNetworkConstraints encodeWithCoder:]
  -[SSNetworkConstraints isAnyNetworkTypeEnabled]
  -[SSNetworkConstraints hasSizeLimitForNetworkType:]
  -[SSNetworkConstraints isEqual:]
  -[SSNetworkConstraints disableCellularNetworkTypes]
  -[SSNetworkConstraints _sizeLimitForNetworkType:]
  -[SSNetworkConstraints setSizeLimit:forNetworkType:]
  -[SSNetworkConstraints _setSizeLimit:forNetworkType:]
  -[SSNetworkConstraints _disableAllNetworkTypes]
  -[SSNetworkConstraints initWithCoder:]
  -[SSNetworkConstraints setAllNetworkTypesDisabled]
  -[SSNetworkConstraints sizeLimitForNetworkType:]


SSProtocolCondition : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSProtocolCondition newConditionWithDictionary:]

  // instance methods
  -[SSProtocolCondition dealloc]
  -[SSProtocolCondition evaluateWithContext:]
  -[SSProtocolCondition initWithDictionary:]


SSApplicationVersionCondition : SSProtocolCondition
  // instance methods
  -[SSApplicationVersionCondition dealloc]
  -[SSApplicationVersionCondition evaluateWithContext:]
  -[SSApplicationVersionCondition initWithDictionary:]


SSCapabilityCondition : SSProtocolCondition
  // instance methods
  -[SSCapabilityCondition evaluateWithContext:]


SSDocumentCondition : SSProtocolCondition
  // instance methods
  -[SSDocumentCondition evaluateWithContext:]


SSHasAccountCondition : SSProtocolCondition
  // instance methods
  -[SSHasAccountCondition evaluateWithContext:]


SSItemAvailableCondition : SSProtocolCondition
  // instance methods
  -[SSItemAvailableCondition evaluateWithContext:]


SSPlatformCondition : SSProtocolCondition
  // instance methods
  -[SSPlatformCondition evaluateWithContext:]


SSRestrictionCondition : SSProtocolCondition
  // instance methods
  -[SSRestrictionCondition dealloc]
  -[SSRestrictionCondition evaluateWithContext:]
  -[SSRestrictionCondition initWithDictionary:]


SSSystemVersionCondition : SSProtocolCondition
  // instance methods
  -[SSSystemVersionCondition evaluateWithContext:]


SSProtocolConditionalEvaluator : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSProtocolConditionalEvaluator defaultConditionalContext]
  +[SSProtocolConditionalEvaluator setDefaultConditionalContext:]

  // instance methods
  -[SSProtocolConditionalEvaluator initWithDictionary:conditionalContext:]
  -[SSProtocolConditionalEvaluator init]
  -[SSProtocolConditionalEvaluator _dictionaryByEvaluatingDictionary:withForcedValue:]
  -[SSProtocolConditionalEvaluator dealloc]
  -[SSProtocolConditionalEvaluator _arrayByEvaluatingChildrenOfArray:withForcedValue:]
  -[SSProtocolConditionalEvaluator _dictionaryByEvaluatingChildrenOfDictionary:withForcedValue:]
  -[SSProtocolConditionalEvaluator initWithDictionary:]
  -[SSProtocolConditionalEvaluator dictionaryByEvaluatingConditions]
  -[SSProtocolConditionalEvaluator dictionaryByRemovingConditions]
  -[SSProtocolConditionalEvaluator _checkConditions:withOperator:]
  -[SSProtocolConditionalEvaluator _dictionaryByEvaluatingWithForcedValue:]
  -[SSProtocolConditionalEvaluator _logicalOperatorForString:]


SSProtocolConditionalContext : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  @? itemLookupBlock
 @property  NSString *platformName
 @property  NSString *systemVersion

  // instance methods
  -[SSProtocolConditionalContext copyWithZone:]
  -[SSProtocolConditionalContext dealloc]
  -[SSProtocolConditionalContext systemVersion]
  -[SSProtocolConditionalContext itemLookupBlock]
  -[SSProtocolConditionalContext setItemLookupBlock:]
  -[SSProtocolConditionalContext setPlatformName:]
  -[SSProtocolConditionalContext platformName]
  -[SSProtocolConditionalContext setSystemVersion:]


SSDevice : NSObject /usr/lib/libc++.1.dylib <SSRequestDelegate>
 @property  NSString *compatibleProductType
 @property  long long deviceType
 @property  unsigned int deviceTypeIdentifier
 @property  NSString *phoneNumber
 @property  NSString *productType
 @property  NSString *productVersion
 @property  float screenScale
 @property  NSString *serialNumber
 @property  SSPromise *storeFrontIdentifierPromise
 @property  NSString *thinnedApplicationVariantIdentifier
 @property  NSString *uniqueDeviceIdentifier
 @property  BOOL pluggedIn
 @property  double batteryLevel
 @property  NSString *cloudMediaLibraryIdentifier
 @property  NSString *mediaLibraryIdentifier
 @property  NSString *softwareLibraryIdentifier
 @property  NSString *clientVersion
 @property  NSString *clientName
 @property  NSString *storeFrontIdentifier
 @property  NSString *legacyUserAgent
 @property  NSString *userAgent
 @property  NSSet *automaticDownloadKinds
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSDevice promptNeedsDisplay:]
  +[SSDevice deviceIsiPod]
  +[SSDevice copyCachedAvailableItemKinds]
  +[SSDevice deviceIsSeedBuild]
  +[SSDevice deviceIsiPad]
  +[SSDevice deviceIsInternalBuild]
  +[SSDevice deviceIsiPhone]
  +[SSDevice deviceIsAppleWatch]
  +[SSDevice setCachedAvailableItemKinds:]
  +[SSDevice deviceIsAudioAccessory]
  +[SSDevice deviceIsAppleTV]
  +[SSDevice currentDevice]
  +[SSDevice setLastPromptAttemptDate:forPromptWithIdentifier:]
  +[SSDevice setPromptWithIdentifier:needsDisplay:]

  // instance methods
  -[SSDevice _getDeviceType:error:]
  -[SSDevice screenScale]
  -[SSDevice productVersion]
  -[SSDevice uniqueDeviceIdentifier]
  -[SSDevice userAgent]
  -[SSDevice productType]
  -[SSDevice minusAutomaticDownloadKinds:withCompletionBlock:]
  -[SSDevice setStoreFrontIdentifier:isTransient:]
  -[SSDevice getCellularNetworkingAllowedWithBlock:]
  -[SSDevice serialNumber]
  -[SSDevice supportsDeviceCapability:]
  -[SSDevice userAgentWithClientName:version:]
  -[SSDevice softwareLibraryIdentifier]
  -[SSDevice _is1080pCapable]
  -[SSDevice init]
  -[SSDevice setStoreFrontIdentifier:]
  -[SSDevice getAvailableItemKindsWithBlock:]
  -[SSDevice clientName]
  -[SSDevice phoneNumber]
  -[SSDevice _updateAutomaticDownloadKinds:withValue:completionBlock:]
  -[SSDevice setStoreFrontIdentifier:account:isTransient:]
  -[SSDevice deviceType]
  -[SSDevice _productVersion]
  -[SSDevice _updateBatteryLevelFromService:]
  -[SSDevice sdk_loadStoreFrontIdentifier:]
  -[SSDevice dealloc]
  -[SSDevice batteryLevel]
  -[SSDevice thinnedApplicationVariantIdentifier]
  -[SSDevice _invalidatePhoneNumber]
  -[SSDevice compatibleProductType]
  -[SSDevice mediaLibraryIdentifier]
  -[SSDevice storeFrontIdentifier]
  -[SSDevice carrierBundleStatusForService:]
  -[SSDevice setSoftwareLibraryIdentifier:]
  -[SSDevice copyStoreFrontRequestHeaders]
  -[SSDevice userAgentWithBundleIdentifier:version:]
  -[SSDevice _invalidateSoftwareCUID]
  -[SSDevice _userAgentClientNameForInfoPlist:]
  -[SSDevice _userAgentClientVersionForInfoPlist:clientName:]
  -[SSDevice _userAgentClientNameForBundleID:]
  -[SSDevice _deviceClass]
  -[SSDevice clientVersion]
  -[SSDevice setCellularNetworkingAllowed:]
  -[SSDevice _deviceType]
  -[SSDevice automaticDownloadKinds]
  -[SSDevice _copyKeyValueStoreValueForDomain:key:]
  -[SSDevice _screenClass]
  -[SSDevice storeFrontIdentifierPromise]
  -[SSDevice enableAllAutomaticDownloadKindsWithCompletionBlock:]
  -[SSDevice setStoreFrontWithResponseHeaders:]
  -[SSDevice reloadStoreFrontIdentifier]
  -[SSDevice loadStoreFrontWithCompletionHandler:]
  -[SSDevice unionAutomaticDownloadKinds:withCompletionBlock:]
  -[SSDevice cloudMediaLibraryIdentifier]
  -[SSDevice setStoreFrontIdentifier:accountIdentifier:]
  -[SSDevice setAutomaticDownloadKinds:withCompletionBlock:]
  -[SSDevice _deviceTypeForProductType:]
  -[SSDevice showPromptWithIdentifier:completionHandler:]
  -[SSDevice legacyUserAgent]
  -[SSDevice startPowerMonitoring]
  -[SSDevice _postStoreFrontDidChangeNotification]
  -[SSDevice _diskCapacityString]
  -[SSDevice _userAgentClientNameForAppleTVBundleID:]
  -[SSDevice _appleTVProductVersion]
  -[SSDevice stopPowerMonitoring]
  -[SSDevice isStoreFrontIdentifierTransient]
  -[SSDevice userAgentWithBundleRef:isCachable:]
  -[SSDevice synchronizeAutomaticDownloadKinds]
  -[SSDevice _deviceTypeForUnknownIPod:]
  -[SSDevice getMachineIdentifier:otp:forAccountIdentifier:]
  -[SSDevice _is720pCapable]
  -[SSDevice sdk_loadStorefrontCountryCode:]
  -[SSDevice getCarrierBundleStatusForService:completionHandler:]
  -[SSDevice setStoreFrontIdentifier:forRequest:response:account:]
  -[SSDevice _deviceTypeForUnknownIPhone:]
  -[SSDevice _deviceTypeForUnknownIPad:]
  -[SSDevice _copyProductType]
  -[SSDevice deviceTypeIdentifier]
  -[SSDevice setStoreFrontIdentifier:accountIdentifier:isTransient:]
  -[SSDevice setCloudMediaLibraryIdentifier:]
  -[SSDevice setStoreFrontIdentifier:account:]
  -[SSDevice _cacheKeyValueStoreValues]
  -[SSDevice isPluggedIn]
  -[SSDevice _reloadPluggedInState]
  -[SSDevice _invalidateAutomaticDownloadKinds]
  -[SSDevice _deviceTypeForUnknownAppleTV:]
  -[SSDevice _fairPlayDeviceTypeString]
  -[SSDevice setMediaLibraryIdentifier:]
  -[SSDevice _newLegacyUserAgent:]
  -[SSDevice _newModernUserAgentWithClientName:version:isCachable:]
  -[SSDevice synchedStoreFrontIdentifier]
  -[SSDevice _copyCarrierBundleEligibilityWithStatus:]


SSLockdown : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSLockdown sharedInstance]

  // instance methods
  -[SSLockdown copyDeviceGUID]


SSVCloudServiceAPITokenRequest : SSRequest <SSXPCCoding>
 @property  NSString *clientToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVCloudServiceAPITokenRequest initWithXPCEncoding:]
  -[SSVCloudServiceAPITokenRequest copyXPCEncoding]
  -[SSVCloudServiceAPITokenRequest clientToken]
  -[SSVCloudServiceAPITokenRequest .cxx_destruct]
  -[SSVCloudServiceAPITokenRequest initWithClientToken:]
  -[SSVCloudServiceAPITokenRequest startWithResponseBlock:]


SSDownloadPolicyUserDefaultState : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, SSXPCCoding, NSCopying>
 @property  NSString *domain
 @property  NSNumber *fallbackNumberValue
 @property  NSString *key
 @property  BOOL shouldInvertBoolValue
 @property  BOOL currentBoolValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSDownloadPolicyUserDefaultState supportsSecureCoding]

  // instance methods
  -[SSDownloadPolicyUserDefaultState copyWithZone:]
  -[SSDownloadPolicyUserDefaultState initWithXPCEncoding:]
  -[SSDownloadPolicyUserDefaultState copyXPCEncoding]
  -[SSDownloadPolicyUserDefaultState domain]
  -[SSDownloadPolicyUserDefaultState .cxx_destruct]
  -[SSDownloadPolicyUserDefaultState setDomain:]
  -[SSDownloadPolicyUserDefaultState setKey:]
  -[SSDownloadPolicyUserDefaultState currentBoolValue]
  -[SSDownloadPolicyUserDefaultState fallbackNumberValue]
  -[SSDownloadPolicyUserDefaultState shouldInvertBoolValue]
  -[SSDownloadPolicyUserDefaultState encodeWithCoder:]
  -[SSDownloadPolicyUserDefaultState key]
  -[SSDownloadPolicyUserDefaultState setShouldInvertBoolValue:]
  -[SSDownloadPolicyUserDefaultState setFallbackNumberValue:]
  -[SSDownloadPolicyUserDefaultState isEqual:]
  -[SSDownloadPolicyUserDefaultState initWithCoder:]


SSVLoadNearbyAppsOperation : NSOperation /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  CLLocation *location
 @property  NSString *pointOfInterestIdentifier
 @property  NSString *pointOfInterestProviderIdentifier
 @property  NSString *pointOfInterestProviderURL
 @property  @? responseBlock
 @property  NSString *storeFrontSuffix
 @property  NSString *userAgent

  // instance methods
  -[SSVLoadNearbyAppsOperation setUserAgent:]
  -[SSVLoadNearbyAppsOperation userAgent]
  -[SSVLoadNearbyAppsOperation storeFrontSuffix]
  -[SSVLoadNearbyAppsOperation main]
  -[SSVLoadNearbyAppsOperation responseBlock]
  -[SSVLoadNearbyAppsOperation .cxx_destruct]
  -[SSVLoadNearbyAppsOperation _lookupWithRequest:error:]
  -[SSVLoadNearbyAppsOperation initWithBaseURL:location:]
  -[SSVLoadNearbyAppsOperation pointOfInterestIdentifier]
  -[SSVLoadNearbyAppsOperation pointOfInterestProviderIdentifier]
  -[SSVLoadNearbyAppsOperation pointOfInterestProviderURL]
  -[SSVLoadNearbyAppsOperation setPointOfInterestIdentifier:]
  -[SSVLoadNearbyAppsOperation setPointOfInterestProviderIdentifier:]
  -[SSVLoadNearbyAppsOperation setPointOfInterestProviderURL:]
  -[SSVLoadNearbyAppsOperation setStoreFrontSuffix:]
  -[SSVLoadNearbyAppsOperation setResponseBlock:]
  -[SSVLoadNearbyAppsOperation location]
  -[SSVLoadNearbyAppsOperation _storeFrontSuffix]


SSVGratisApplication : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *bundleIdentifier
 @property  NSString *bundleVersion
 @property  NSNumber *externalVersionIdentifier
 @property  NSString *itemIdentifier
 @property  NSDictionary *dictionaryRepresentation

  // instance methods
  -[SSVGratisApplication copyWithZone:]
  -[SSVGratisApplication setBundleVersion:]
  -[SSVGratisApplication itemIdentifier]
  -[SSVGratisApplication externalVersionIdentifier]
  -[SSVGratisApplication bundleVersion]
  -[SSVGratisApplication .cxx_destruct]
  -[SSVGratisApplication setExternalVersionIdentifier:]
  -[SSVGratisApplication setBundleIdentifier:]
  -[SSVGratisApplication dictionaryRepresentation]
  -[SSVGratisApplication bundleIdentifier]
  -[SSVGratisApplication setItemIdentifier:]


SSURLRequestProperties : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSSecureCoding, NSCopying, NSMutableCopying>
 @property  NSDictionary *additionalMetrics
 @property  BOOL allowsBootstrapCellularData
 @property  BOOL canBeResolved
 @property  NSString *clientAuditBundleIdentifier
 @property  NSData *clientAuditTokenData
 @property  NSString *clientBundleIdentifier
 @property  NSInputStream *HTTPBodyStream
 @property  long long KBSyncType
 @property  BOOL largeDownload
 @property  BOOL requiresCellularDataNetwork
 @property  BOOL requiresExtendedValidationCertificates
 @property  BOOL requiresExternal
 @property  BOOL requiresHTTPS
 @property  BOOL shouldAddKBSyncData
 @property  BOOL shouldDecodeResponse
 @property  BOOL shouldDisableCellularFallback
 @property  BOOL shouldDisableCellular
 @property  BOOL shouldDisableReversePush
 @property  BOOL shouldDisableReversePushSampling
 @property  BOOL shouldProcessProtocol
 @property  BOOL shouldSendSecureToken
 @property  BOOL shouldSetCookies
 @property  long long URLBagType
 @property  @? URLBagURLBlock
 @property  NSArray *URLs
 @property  long long allowedRetryCount
 @property  NSString *clientIdentifier
 @property  unsigned long cachePolicy
 @property  long long expectedContentLength
 @property  NSData *HTTPBody
 @property  NSDictionary *HTTPHeaders
 @property  NSString *HTTPMethod
 @property  BOOL ITunesStoreRequest
 @property  long long machineDataStyle
 @property  unsigned long networkServiceType
 @property  NSDictionary *requestParameters
 @property  double timeoutInterval
 @property  NSString *URLBagKey
 @property  NSURL *URL
 @property  NSArray *userAgentComponents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSURLRequestProperties supportsSecureCoding]

  // instance methods
  -[SSURLRequestProperties HTTPBody]
  -[SSURLRequestProperties _initCommon]
  -[SSURLRequestProperties copyWithZone:]
  -[SSURLRequestProperties allowsBootstrapCellularData]
  -[SSURLRequestProperties initWithXPCEncoding:]
  -[SSURLRequestProperties init]
  -[SSURLRequestProperties HTTPBodyStream]
  -[SSURLRequestProperties copyXPCEncoding]
  -[SSURLRequestProperties clientIdentifier]
  -[SSURLRequestProperties URLs]
  -[SSURLRequestProperties initWithURL:]
  -[SSURLRequestProperties userAgentComponents]
  -[SSURLRequestProperties networkServiceType]
  -[SSURLRequestProperties clientBundleIdentifier]
  -[SSURLRequestProperties initWithURLRequest:]
  -[SSURLRequestProperties .cxx_destruct]
  -[SSURLRequestProperties URLBagKey]
  -[SSURLRequestProperties canBeResolved]
  -[SSURLRequestProperties URLBagType]
  -[SSURLRequestProperties isLargeDownload]
  -[SSURLRequestProperties clientAuditBundleIdentifier]
  -[SSURLRequestProperties shouldProcessProtocol]
  -[SSURLRequestProperties shouldSendSecureToken]
  -[SSURLRequestProperties KBSyncType]
  -[SSURLRequestProperties requiresCellularDataNetwork]
  -[SSURLRequestProperties encodeWithCoder:]
  -[SSURLRequestProperties requiresExtendedValidationCertificates]
  -[SSURLRequestProperties requiresExternal]
  -[SSURLRequestProperties requiresHTTPS]
  -[SSURLRequestProperties shouldAddKBSyncData]
  -[SSURLRequestProperties shouldDisableCellularFallback]
  -[SSURLRequestProperties shouldDisableReversePush]
  -[SSURLRequestProperties shouldDisableReversePushSampling]
  -[SSURLRequestProperties URLBagURLBlock]
  -[SSURLRequestProperties isITunesStoreRequest]
  -[SSURLRequestProperties cachePolicy]
  -[SSURLRequestProperties copyURLRequest]
  -[SSURLRequestProperties isEqual:]
  -[SSURLRequestProperties HTTPMethod]
  -[SSURLRequestProperties expectedContentLength]
  -[SSURLRequestProperties timeoutInterval]
  -[SSURLRequestProperties allowedRetryCount]
  -[SSURLRequestProperties clientAuditTokenData]
  -[SSURLRequestProperties URL]
  -[SSURLRequestProperties shouldDecodeResponse]
  -[SSURLRequestProperties mutableCopyWithZone:]
  -[SSURLRequestProperties shouldDisableCellular]
  -[SSURLRequestProperties shouldSetCookies]
  -[SSURLRequestProperties HTTPHeaders]
  -[SSURLRequestProperties requestParameters]
  -[SSURLRequestProperties initWithCoder:]
  -[SSURLRequestProperties additionalMetrics]
  -[SSURLRequestProperties machineDataStyle]


SSMutableURLRequestProperties : SSURLRequestProperties
 @property  NSDictionary *additionalMetrics
 @property  BOOL allowsBootstrapCellularData
 @property  NSString *clientAuditBundleIdentifier
 @property  NSData *clientAuditTokenData
 @property  NSInputStream *HTTPBodyStream
 @property  long long KBSyncType
 @property  BOOL largeDownload
 @property  BOOL requiresCellularDataNetwork
 @property  BOOL requiresExtendedValidationCertificates
 @property  BOOL requiresExternal
 @property  BOOL requiresHTTPS
 @property  BOOL shouldAddKBSyncData
 @property  BOOL shouldDecodeResponse
 @property  BOOL shouldDisableCellular
 @property  BOOL shouldDisableCellularFallback
 @property  BOOL shouldDisableReversePush
 @property  BOOL shouldDisableReversePushSampling
 @property  BOOL shouldProcessProtocol
 @property  BOOL shouldSendSecureToken
 @property  BOOL shouldSetCookies
 @property  long long URLBagType
 @property  @? URLBagURLBlock
 @property  NSArray *URLs
 @property  long long allowedRetryCount
 @property  unsigned long cachePolicy
 @property  NSString *clientIdentifier
 @property  long long expectedContentLength
 @property  NSData *HTTPBody
 @property  NSString *HTTPMethod
 @property  BOOL ITunesStoreRequest
 @property  long long machineDataStyle
 @property  unsigned long networkServiceType
 @property  double timeoutInterval
 @property  NSString *URLBagKey
 @property  NSURL *URL
 @property  NSArray *userAgentComponents
 @property  NSDictionary *HTTPHeaders
 @property  NSDictionary *requestParameters

  // instance methods
  -[SSMutableURLRequestProperties setCachePolicy:]
  -[SSMutableURLRequestProperties setAdditionalMetrics:]
  -[SSMutableURLRequestProperties setRequestParameters:]
  -[SSMutableURLRequestProperties setHTTPBody:]
  -[SSMutableURLRequestProperties copyWithZone:]
  -[SSMutableURLRequestProperties setAllowedRetryCount:]
  -[SSMutableURLRequestProperties setClientAuditTokenData:]
  -[SSMutableURLRequestProperties setAllowsBootstrapCellularData:]
  -[SSMutableURLRequestProperties setValue:forHTTPHeaderField:]
  -[SSMutableURLRequestProperties setShouldDisableReversePushSampling:]
  -[SSMutableURLRequestProperties setHTTPHeaders:]
  -[SSMutableURLRequestProperties setURLBagKey:]
  -[SSMutableURLRequestProperties setURLBagType:]
  -[SSMutableURLRequestProperties setITunesStoreRequest:]
  -[SSMutableURLRequestProperties setShouldDisableCellular:]
  -[SSMutableURLRequestProperties setHTTPBodyStream:]
  -[SSMutableURLRequestProperties setShouldDisableCellularFallback:]
  -[SSMutableURLRequestProperties setShouldProcessProtocol:]
  -[SSMutableURLRequestProperties setRequiresCellularDataNetwork:]
  -[SSMutableURLRequestProperties setLargeDownload:]
  -[SSMutableURLRequestProperties setExpectedContentLength:]
  -[SSMutableURLRequestProperties setShouldDisableReversePush:]
  -[SSMutableURLRequestProperties setURLs:]
  -[SSMutableURLRequestProperties setTimeoutInterval:]
  -[SSMutableURLRequestProperties setClientAuditBundleIdentifier:]
  -[SSMutableURLRequestProperties setMultiPartFormDataWithDictionary:]
  -[SSMutableURLRequestProperties setRequiresExternal:]
  -[SSMutableURLRequestProperties setKBSyncType:]
  -[SSMutableURLRequestProperties setShouldAddKBSyncData:]
  -[SSMutableURLRequestProperties setRequiresHTTPS:]
  -[SSMutableURLRequestProperties setURLBagURLBlock:]
  -[SSMutableURLRequestProperties setURL:]
  -[SSMutableURLRequestProperties setClientIdentifier:]
  -[SSMutableURLRequestProperties setHTTPMethod:]
  -[SSMutableURLRequestProperties setMachineDataStyle:]
  -[SSMutableURLRequestProperties setUserAgentComponents:]
  -[SSMutableURLRequestProperties setShouldSetCookies:]
  -[SSMutableURLRequestProperties setShouldSendSecureToken:]
  -[SSMutableURLRequestProperties setNetworkServiceType:]
  -[SSMutableURLRequestProperties setShouldDecodeResponse:]
  -[SSMutableURLRequestProperties setValue:forRequestParameter:]
  -[SSMutableURLRequestProperties setRequiresExtendedValidationCertificates:]


SSVSubscriptionResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVSubscriptionResponse copyWithZone:]
  -[SSVSubscriptionResponse initWithXPCEncoding:]
  -[SSVSubscriptionResponse copyXPCEncoding]
  -[SSVSubscriptionResponse .cxx_destruct]
  -[SSVSubscriptionResponse setSubscriptionStatus:forAccountUniqueIdentifier:]
  -[SSVSubscriptionResponse subscriptionStatusForAccountUniqueIdentifier:]


SSDivertedDownload : SSDownload

SSURLConnectionResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  BOOL ssv_isExpiredResponse
 @property  NSData *databaseEncoding
 @property  SSMetricsPageEvent *metricsPageEvent
 @property  NSString *storeCorrelationID
 @property  NSHTTPURLResponse *URLResponse
 @property  NSData *bodyData
 @property  long long expectedContentLength
 @property  NSString *MIMEType
 @property  NSString *suggestedFilename
 @property  NSString *textEncodingName
 @property  NSURL *URL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSURLConnectionResponse initWithXPCEncoding:]
  -[SSURLConnectionResponse bodyData]
  -[SSURLConnectionResponse copyXPCEncoding]
  -[SSURLConnectionResponse ssv_isExpiredResponse]
  -[SSURLConnectionResponse dealloc]
  -[SSURLConnectionResponse textEncodingName]
  -[SSURLConnectionResponse initWithDatabaseEncoding:]
  -[SSURLConnectionResponse statusCode]
  -[SSURLConnectionResponse URLResponse]
  -[SSURLConnectionResponse metricsPageEvent]
  -[SSURLConnectionResponse setMetricsPageEvent:]
  -[SSURLConnectionResponse storeCorrelationID]
  -[SSURLConnectionResponse initWithURLResponse:bodyData:]
  -[SSURLConnectionResponse MIMEType]
  -[SSURLConnectionResponse databaseEncoding]
  -[SSURLConnectionResponse expectedContentLength]
  -[SSURLConnectionResponse URL]
  -[SSURLConnectionResponse allHeaderFields]
  -[SSURLConnectionResponse suggestedFilename]


SSPlayInfoRequest : SSRequest <SSXPCCoding>
 @property  <SSPlayInfoRequestDelegate> *delegate
 @property  SSPlayInfoRequestContext *playInfoContext
 @property  SSPlayInfoResponse *playInfoResponse
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSPlayInfoRequest initWithXPCEncoding:]
  -[SSPlayInfoRequest init]
  -[SSPlayInfoRequest copyXPCEncoding]
  -[SSPlayInfoRequest dealloc]
  -[SSPlayInfoRequest playInfoContext]
  -[SSPlayInfoRequest playInfoResponse]
  -[SSPlayInfoRequest startWithPlayInfoResponseBlock:]
  -[SSPlayInfoRequest initWithPlayInfoContext:]
  -[SSPlayInfoRequest startWithCompletionBlock:]
  -[SSPlayInfoRequest start]


SSPlayInfoRequestContext : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  NSString *playerGUID
 @property  NSData *SICData
 @property  NSArray *sinfs
 @property  NSNumber *accountIdentifier
 @property  NSNumber *contentIdentifier
 @property  NSString *playbackType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSPlayInfoRequestContext setContentIdentifier:]
  -[SSPlayInfoRequestContext contentIdentifier]
  -[SSPlayInfoRequestContext playbackType]
  -[SSPlayInfoRequestContext copyWithZone:]
  -[SSPlayInfoRequestContext initWithXPCEncoding:]
  -[SSPlayInfoRequestContext sinfs]
  -[SSPlayInfoRequestContext copyXPCEncoding]
  -[SSPlayInfoRequestContext accountIdentifier]
  -[SSPlayInfoRequestContext setSinfs:]
  -[SSPlayInfoRequestContext dealloc]
  -[SSPlayInfoRequestContext SICData]
  -[SSPlayInfoRequestContext playerGUID]
  -[SSPlayInfoRequestContext setPlaybackType:]
  -[SSPlayInfoRequestContext setPlayerGUID:]
  -[SSPlayInfoRequestContext setSICData:]
  -[SSPlayInfoRequestContext setAccountIdentifier:]


SSPlayInfoResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  NSError *error
 @property  NSData *playInfoData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSPlayInfoResponse copyWithZone:]
  -[SSPlayInfoResponse initWithXPCEncoding:]
  -[SSPlayInfoResponse copyXPCEncoding]
  -[SSPlayInfoResponse dealloc]
  -[SSPlayInfoResponse initWithPlayInfoData:error:]
  -[SSPlayInfoResponse playInfoData]
  -[SSPlayInfoResponse error]


SSVPlaybackLeaseItem : SSVPlaybackItem
  // instance methods
  -[SSVPlaybackLeaseItem assetForFlavor:]


SSMigrator : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSMigrator init]
  -[SSMigrator .cxx_destruct]
  -[SSMigrator performMigration:completionBlock:]


SSNetworkQualityInquiry : NSObject /usr/lib/libc++.1.dylib <NWNetworkOfInterestManagerDelegate>
 @property  NWNetworkOfInterestManager *manager
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableSet *knownNetworks
 @property  NSMutableArray *knownNetworksReadyHandlers

  // class methods
  +[SSNetworkQualityInquiry sharedInstance]
  +[SSNetworkQualityInquiry isEntitled]

  // instance methods
  -[SSNetworkQualityInquiry init]
  -[SSNetworkQualityInquiry dealloc]
  -[SSNetworkQualityInquiry knownNetworksReadyHandlers]
  -[SSNetworkQualityInquiry .cxx_destruct]
  -[SSNetworkQualityInquiry drainKnownNetworksReadyHandlers]
  -[SSNetworkQualityInquiry manager]
  -[SSNetworkQualityInquiry performWhenKnownNetworksReady:]
  -[SSNetworkQualityInquiry queue]
  -[SSNetworkQualityInquiry areKnownNetworksReady]
  -[SSNetworkQualityInquiry knownNetworks]
  -[SSNetworkQualityInquiry investigateNetworks]
  -[SSNetworkQualityInquiry didStopTrackingAllNOIs:]
  -[SSNetworkQualityInquiry didStartTrackingNOI:]
  -[SSNetworkQualityInquiry didStopTrackingNOI:]
  -[SSNetworkQualityInquiry setKnownNetworksReadyHandlers:]


SSDialog : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *dialogDictionary
 @property  NSString *dialogKind
 @property  NSString *message
 @property  NSString *title
 @property  NSArray *buttons
 @property  SSDialogButton *defaultButton

  // instance methods
  -[SSDialog message]
  -[SSDialog init]
  -[SSDialog buttons]
  -[SSDialog setButtons:]
  -[SSDialog valueForProperty:]
  -[SSDialog setMessage:]
  -[SSDialog dealloc]
  -[SSDialog initWithDialogDictionary:]
  -[SSDialog _setValue:forProperty:]
  -[SSDialog setTitle:]
  -[SSDialog dialogDictionary]
  -[SSDialog defaultButton]
  -[SSDialog setDefaultButton:]
  -[SSDialog title]
  -[SSDialog dialogKind]


SSDialogButton : NSObject /usr/lib/libc++.1.dylib
 @property  id actionParameter
 @property  NSString *buttonAction
 @property  NSString *URLTarget
 @property  NSString *buttonTitle

  // class methods
  +[SSDialogButton buttonWithTitle:]

  // instance methods
  -[SSDialogButton init]
  -[SSDialogButton dealloc]
  -[SSDialogButton initWithTitle:actionDictionary:]
  -[SSDialogButton valueForActionProperty:]
  -[SSDialogButton actionParameter]
  -[SSDialogButton buttonAction]
  -[SSDialogButton buttonTitle]
  -[SSDialogButton URLTarget]


SSPurchaseReceipt : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL isValid
 @property  BOOL isVPPLicensed
 @property  BOOL isRevoked
 @property  NSDate *expirationDate

  // class methods
  +[SSPurchaseReceipt receiptPathForProxy:]
  +[SSPurchaseReceipt getReceiptPathWithCompletionBlock:]
  +[SSPurchaseReceipt vppStateFlagsWithProxy:]

  // instance methods
  -[SSPurchaseReceipt initWithContentsOfFile:]
  -[SSPurchaseReceipt .cxx_destruct]
  -[SSPurchaseReceipt isRevoked]
  -[SSPurchaseReceipt isVPPLicensed]
  -[SSPurchaseReceipt receiptExpired]
  -[SSPurchaseReceipt initWithContainerPath:]
  -[SSPurchaseReceipt isValid]
  -[SSPurchaseReceipt expirationDate]


SSAuthorizationRequest : SSRequest <SSXPCCoding>
 @property  <SSAuthorizationRequestDelegate> *delegate
 @property  NSNumber *accountIdentifier
 @property  BOOL allowSilentAuthentication
 @property  id authorizationToken
 @property  NSString *clientIdentifierHeader
 @property  NSNumber *familyAccountIdentifier
 @property  NSString *keybagPath
 @property  NSString *reason
 @property  BOOL shouldAddKeysToKeyBag
 @property  BOOL shouldPromptForCredentials
 @property  NSString *userAgent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSAuthorizationRequest setUserAgent:]
  -[SSAuthorizationRequest userAgent]
  -[SSAuthorizationRequest setClientIdentifierHeader:]
  -[SSAuthorizationRequest initWithXPCEncoding:]
  -[SSAuthorizationRequest setReason:]
  -[SSAuthorizationRequest init]
  -[SSAuthorizationRequest copyXPCEncoding]
  -[SSAuthorizationRequest initWithAuthorizationToken:accountIdentifier:]
  -[SSAuthorizationRequest keybagPath]
  -[SSAuthorizationRequest accountIdentifier]
  -[SSAuthorizationRequest clientIdentifierHeader]
  -[SSAuthorizationRequest .cxx_destruct]
  -[SSAuthorizationRequest _init]
  -[SSAuthorizationRequest startWithAuthorizationResponseBlock:]
  -[SSAuthorizationRequest allowSilentAuthentication]
  -[SSAuthorizationRequest setAllowSilentAuthentication:]
  -[SSAuthorizationRequest familyAccountIdentifier]
  -[SSAuthorizationRequest setFamilyAccountIdentifier:]
  -[SSAuthorizationRequest shouldAddKeysToKeyBag]
  -[SSAuthorizationRequest setShouldAddKeysToKeyBag:]
  -[SSAuthorizationRequest shouldPromptForCredentials]
  -[SSAuthorizationRequest setShouldPromptForCredentials:]
  -[SSAuthorizationRequest startWithCompletionBlock:]
  -[SSAuthorizationRequest authorizationToken]
  -[SSAuthorizationRequest reason]
  -[SSAuthorizationRequest setAccountIdentifier:]
  -[SSAuthorizationRequest setKeybagPath:]
  -[SSAuthorizationRequest start]


SSItemArtworkImage : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  {CGSize=dd} imageSize
 @property  NSString *imageKind
 @property  NSURL *URL
 @property  NSString *URLString
 @property  long long height
 @property  long long width
 @property  long long imageOrientation
 @property  double imageScale
 @property  BOOL prerendered
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSItemArtworkImage copyWithZone:]
  -[SSItemArtworkImage URLString]
  -[SSItemArtworkImage imageScale]
  -[SSItemArtworkImage initWithXPCEncoding:]
  -[SSItemArtworkImage copyXPCEncoding]
  -[SSItemArtworkImage imageSize]
  -[SSItemArtworkImage _setValue:forKey:]
  -[SSItemArtworkImage valueForProperty:]
  -[SSItemArtworkImage dealloc]
  -[SSItemArtworkImage width]
  -[SSItemArtworkImage isPrerendered]
  -[SSItemArtworkImage setImageKindWithTypeName:variantName:]
  -[SSItemArtworkImage setImageKind:]
  -[SSItemArtworkImage initWithArtworkDictionary:]
  -[SSItemArtworkImage height]
  -[SSItemArtworkImage isEqual:]
  -[SSItemArtworkImage imageOrientation]
  -[SSItemArtworkImage URL]
  -[SSItemArtworkImage setURL:]
  -[SSItemArtworkImage setValue:forProperty:]
  -[SSItemArtworkImage imageKind]


SSVSAPSignaturePolicy : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long policyType
 @property  NSArray *signatureComponents

  // instance methods
  -[SSVSAPSignaturePolicy copyWithZone:]
  -[SSVSAPSignaturePolicy dataToSignWithURLRequest:]
  -[SSVSAPSignaturePolicy initWithPolicyType:signatureComponents:]
  -[SSVSAPSignaturePolicy .cxx_destruct]
  -[SSVSAPSignaturePolicy initWithSignedActionsDictionary:]
  -[SSVSAPSignaturePolicy dataToSignWithURLResponse:responseData:]
  -[SSVSAPSignaturePolicy _dataToSignWithDataSource:]
  -[SSVSAPSignaturePolicy dataToSignWithRequestProperties:]
  -[SSVSAPSignaturePolicy policyType]
  -[SSVSAPSignaturePolicy signatureComponents]
  -[SSVSAPSignaturePolicy initWithPolicyType:]


SSVSAPSignatureComponent : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long componentType
 @property  NSString *key

  // instance methods
  -[SSVSAPSignatureComponent copyWithZone:]
  -[SSVSAPSignatureComponent dataToSignWithURLRequest:]
  -[SSVSAPSignatureComponent .cxx_destruct]
  -[SSVSAPSignatureComponent dataToSignWithURLResponse:responseData:]
  -[SSVSAPSignatureComponent _dataToSignWithDataSource:]
  -[SSVSAPSignatureComponent key]
  -[SSVSAPSignatureComponent initWithComponentType:key:]
  -[SSVSAPSignatureComponent componentType]
  -[SSVSAPSignatureComponent dataToSignWithRequestProperties:]


SSItemImageCollection : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSArray *itemImages

  // instance methods
  -[SSItemImageCollection copyWithZone:]
  -[SSItemImageCollection initWithXPCEncoding:]
  -[SSItemImageCollection itemImages]
  -[SSItemImageCollection copyXPCEncoding]
  -[SSItemImageCollection dealloc]
  -[SSItemImageCollection _newImagesForDictionary:]
  -[SSItemImageCollection imagesForSize:]
  -[SSItemImageCollection _imagesForSize:scale:]
  -[SSItemImageCollection bestImageForSize:]
  -[SSItemImageCollection imagesForKind:]
  -[SSItemImageCollection initWithImageCollection:]
  -[SSItemImageCollection initWithItemImages:]


SSSilentEnrollmentPaymentSession : SSSilentEnrollment
  // instance methods
  -[SSSilentEnrollmentPaymentSession startWithCompletion:]


SSRemoteNotificationClient : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSRemoteNotificationClient sharedClient]

  // instance methods
  -[SSRemoteNotificationClient init]
  -[SSRemoteNotificationClient unregisterForRemoteNotifications]
  -[SSRemoteNotificationClient dealloc]
  -[SSRemoteNotificationClient popQueuedNotifications]
  -[SSRemoteNotificationClient registerForRemoteNotifications]


SSRemoteNotification : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  NSDictionary *notificationUserInfo
 @property  long long actionType
 @property  NSString *alertBodyString
 @property  NSString *alertCancelString
 @property  NSString *alertOKString
 @property  NSString *alertTitleString
 @property  id badgeValue
 @property  NSString *soundFileName
 @property  BOOL explicitContent
 @property  NSString *artworkUrl
 @property  NSArray *buttons
 @property  NSString *category
 @property  NSDate *expirationDate
 @property  NSDictionary *metrics
 @property  NSString *tapUrl
 @property  long long version
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSRemoteNotification metrics]
  -[SSRemoteNotification badgeValue]
  -[SSRemoteNotification actionType]
  -[SSRemoteNotification category]
  -[SSRemoteNotification initWithXPCEncoding:]
  -[SSRemoteNotification copyXPCEncoding]
  -[SSRemoteNotification buttons]
  -[SSRemoteNotification tapUrl]
  -[SSRemoteNotification dealloc]
  -[SSRemoteNotification initWithNotificationUserInfo:]
  -[SSRemoteNotification _valueForAlertKey:]
  -[SSRemoteNotification _valueForAPSKey:]
  -[SSRemoteNotification alertBodyString]
  -[SSRemoteNotification alertCancelString]
  -[SSRemoteNotification alertOKString]
  -[SSRemoteNotification alertTitleString]
  -[SSRemoteNotification soundFileName]
  -[SSRemoteNotification notificationUserInfo]
  -[SSRemoteNotification valueForKey:]
  -[SSRemoteNotification expirationDate]
  -[SSRemoteNotification version]
  -[SSRemoteNotification artworkUrl]
  -[SSRemoteNotification explicitContent]


SSURLDataCollection : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSURLDataCollection collectURLSessionDataWithBlock:]


SSAppPurchaseHistoryAccount : SSSQLiteEntity
  // class methods
  +[SSAppPurchaseHistoryAccount databaseTable]


SSURLBagContext : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  BOOL allowsBootstrapCellularData
 @property  BOOL allowsExpiredBags
 @property  NSData *clientAuditTokenData
 @property  NSString *clientBundleIdentifier
 @property  BOOL usesCachedBagsOnly
 @property  long long allowedRetryCount
 @property  long long bagType
 @property  NSString *cacheKey
 @property  BOOL ignoresCaches
 @property  NSNumber *userIdentifier
 @property  NSDictionary *allHTTPHeaders
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSURLBagContext contextWithBagType:]

  // instance methods
  -[SSURLBagContext copyWithZone:]
  -[SSURLBagContext setAllowedRetryCount:]
  -[SSURLBagContext cacheKey]
  -[SSURLBagContext allowsBootstrapCellularData]
  -[SSURLBagContext setClientAuditTokenData:]
  -[SSURLBagContext bagType]
  -[SSURLBagContext setAllowsBootstrapCellularData:]
  -[SSURLBagContext userIdentifier]
  -[SSURLBagContext setValue:forHTTPHeaderField:]
  -[SSURLBagContext initWithXPCEncoding:]
  -[SSURLBagContext init]
  -[SSURLBagContext copyXPCEncoding]
  -[SSURLBagContext clientBundleIdentifier]
  -[SSURLBagContext dealloc]
  -[SSURLBagContext setUsesCachedBagsOnly:]
  -[SSURLBagContext setAllowsExpiredBags:]
  -[SSURLBagContext allHTTPHeaders]
  -[SSURLBagContext _init]
  -[SSURLBagContext usesCachedBagsOnly]
  -[SSURLBagContext ignoresCaches]
  -[SSURLBagContext isEqual:]
  -[SSURLBagContext setBagType:]
  -[SSURLBagContext setUserIdentifier:]
  -[SSURLBagContext setIgnoresCaches:]
  -[SSURLBagContext allowedRetryCount]
  -[SSURLBagContext setAllHTTPHeaders:]
  -[SSURLBagContext clientAuditTokenData]
  -[SSURLBagContext valueForHTTPHeaderField:]
  -[SSURLBagContext allowsExpiredBags]


SSAskPermissionActionRequest : SSRequest <SSXPCCoding>
 @property  NSURL *URL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSAskPermissionActionRequest initWithXPCEncoding:]
  -[SSAskPermissionActionRequest copyXPCEncoding]
  -[SSAskPermissionActionRequest initWithURL:]
  -[SSAskPermissionActionRequest startWithCompletionBlock:]
  -[SSAskPermissionActionRequest URL]


SSUpdatableAssetManifest : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *assets
 @property  SSUpdatableAsset *bootstrapAsset
 @property  NSURL *cacheURL
 @property  NSDictionary *extraInfo
 @property  double lastModifiedTimestamp
 @property  NSString *name
 @property  double pollInterval
 @property  long long reloadUrgencyType
 @property  NSURL *serverURL
 @property  NSString *version

  // class methods
  +[SSUpdatableAssetManifest _osVersionString]

  // instance methods
  -[SSUpdatableAssetManifest _setName:]
  -[SSUpdatableAssetManifest assets]
  -[SSUpdatableAssetManifest _setVersion:]
  -[SSUpdatableAssetManifest .cxx_destruct]
  -[SSUpdatableAssetManifest name]
  -[SSUpdatableAssetManifest assetWithName:]
  -[SSUpdatableAssetManifest _setAssets:]
  -[SSUpdatableAssetManifest bootstrapAsset]
  -[SSUpdatableAssetManifest _setBootstrapAsset:]
  -[SSUpdatableAssetManifest _setCacheURL:]
  -[SSUpdatableAssetManifest _setExtraInfo:]
  -[SSUpdatableAssetManifest _setLastModifiedTimestamp:]
  -[SSUpdatableAssetManifest pollInterval]
  -[SSUpdatableAssetManifest _setPollInterval:]
  -[SSUpdatableAssetManifest reloadUrgencyType]
  -[SSUpdatableAssetManifest _setReloadUrgencyType:]
  -[SSUpdatableAssetManifest _setServerURL:]
  -[SSUpdatableAssetManifest serverURL]
  -[SSUpdatableAssetManifest cacheURL]
  -[SSUpdatableAssetManifest lastModifiedTimestamp]
  -[SSUpdatableAssetManifest version]
  -[SSUpdatableAssetManifest extraInfo]


SSItemContentRating : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  NSDictionary *contentRatingDictionary
 @property  SSItemArtworkImage *ratingSystemLogo
 @property  BOOL explicitContent
 @property  long long rank
 @property  NSString *ratingDescription
 @property  NSString *ratingLabel
 @property  long long ratingSystem
 @property  BOOL restricted
 @property  BOOL shouldHideWhenRestricted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSItemContentRating ratingSystemFromString:]
  +[SSItemContentRating stringForRatingSystem:]

  // instance methods
  -[SSItemContentRating copyWithZone:]
  -[SSItemContentRating isRestricted]
  -[SSItemContentRating initWithXPCEncoding:]
  -[SSItemContentRating init]
  -[SSItemContentRating copyXPCEncoding]
  -[SSItemContentRating rank]
  -[SSItemContentRating isExplicitContent]
  -[SSItemContentRating setRank:]
  -[SSItemContentRating valueForProperty:]
  -[SSItemContentRating dealloc]
  -[SSItemContentRating _setValue:forProperty:]
  -[SSItemContentRating _isRatingSystemForApps:]
  -[SSItemContentRating _isRatingSystemForMovies:]
  -[SSItemContentRating _isRatingSystemForMusic:]
  -[SSItemContentRating _isRatingSystemForTV:]
  -[SSItemContentRating ratingDescription]
  -[SSItemContentRating setRatingDescription:]
  -[SSItemContentRating setRatingLabel:]
  -[SSItemContentRating ratingSystem]
  -[SSItemContentRating setRatingSystem:]
  -[SSItemContentRating initWithDictionary:]
  -[SSItemContentRating _setValueCopy:forProperty:]
  -[SSItemContentRating setShouldHideWhenRestricted:]
  -[SSItemContentRating shouldHideWhenRestricted]
  -[SSItemContentRating ratingSystemLogo]
  -[SSItemContentRating contentRatingDictionary]
  -[SSItemContentRating ratingLabel]


SSUpdateAccountResponse : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long credentialSource
 @property  SSAccount *updatedAccount

  // instance methods
  -[SSUpdateAccountResponse updatedAccount]
  -[SSUpdateAccountResponse initWithUpdatedAccount:credentialSource:]
  -[SSUpdateAccountResponse .cxx_destruct]
  -[SSUpdateAccountResponse credentialSource]


SSVPlayActivityFeedSerialization : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *currentStoreFrontID

  // class methods
  +[SSVPlayActivityFeedSerialization defaultOverrideHTTPHeaderFields]

  // instance methods
  -[SSVPlayActivityFeedSerialization currentStoreFrontID]
  -[SSVPlayActivityFeedSerialization .cxx_destruct]
  -[SSVPlayActivityFeedSerialization propertyListObjectWithPlayActivityEvent:]
  -[SSVPlayActivityFeedSerialization setCurrentStoreFrontID:]


SSRentalCheckinRequest : SSRequest
 @property  NSArray *sinfs
 @property  NSNumber *accountIdentifier
 @property  NSNumber *rentalKeyIdentifier

  // instance methods
  -[SSRentalCheckinRequest initWithXPCEncoding:]
  -[SSRentalCheckinRequest startWithConnectionResponseBlock:]
  -[SSRentalCheckinRequest sinfs]
  -[SSRentalCheckinRequest init]
  -[SSRentalCheckinRequest initWithAccountIdentifier:rentalKeyIdentifier:]
  -[SSRentalCheckinRequest copyXPCEncoding]
  -[SSRentalCheckinRequest initWithSinfs:]
  -[SSRentalCheckinRequest rentalKeyIdentifier]
  -[SSRentalCheckinRequest accountIdentifier]
  -[SSRentalCheckinRequest dealloc]
  -[SSRentalCheckinRequest startWithCompletionBlock:]


SSBiometricAuthenticationContext : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  NSNumber *accountIdentifier
 @property  NSString *accountName
 @property  long long biometricAuthorizationAttempts
 @property  NSString *challenge
 @property  BOOL touchIDDelayEnabled
 @property  SSConsolidatedDialog *consolidatedDialog
 @property  NSString *dialogId
 @property  BOOL didAuthenticate
 @property  BOOL didBuyParamsChange
 @property  BOOL didFallbackToPassword
 @property  NSString *fpanID
 @property  BOOL isExtendedAction
 @property  BOOL isIdentityMapInvalid
 @property  BOOL isPayment
 @property  NSString *passwordEquivalentToken
 @property  SSPaymentSheet *paymentSheet
 @property  NSData *paymentTokenData
 @property  NSURL *redirectURL
 @property  BOOL shouldContinueTouchIDSession
 @property  BOOL shouldSendFallbackHeader
 @property  NSString *signature
 @property  NSString *userAgent
 @property  NSString *xAppleAMDHeader
 @property  NSString *xAppleAMDMHeader
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSBiometricAuthenticationContext setUserAgent:]
  -[SSBiometricAuthenticationContext challenge]
  -[SSBiometricAuthenticationContext copyWithZone:]
  -[SSBiometricAuthenticationContext signature]
  -[SSBiometricAuthenticationContext accountName]
  -[SSBiometricAuthenticationContext setIsIdentityMapInvalid:]
  -[SSBiometricAuthenticationContext userAgent]
  -[SSBiometricAuthenticationContext shouldSendFallbackHeader]
  -[SSBiometricAuthenticationContext setRedirectURL:]
  -[SSBiometricAuthenticationContext initWithXPCEncoding:]
  -[SSBiometricAuthenticationContext setShouldSendFallbackHeader:]
  -[SSBiometricAuthenticationContext consolidatedDialog]
  -[SSBiometricAuthenticationContext init]
  -[SSBiometricAuthenticationContext shouldContinueTouchIDSession]
  -[SSBiometricAuthenticationContext copyXPCEncoding]
  -[SSBiometricAuthenticationContext xAppleAMDHeader]
  -[SSBiometricAuthenticationContext accountIdentifier]
  -[SSBiometricAuthenticationContext setDialogId:]
  -[SSBiometricAuthenticationContext setPaymentSheet:]
  -[SSBiometricAuthenticationContext .cxx_destruct]
  -[SSBiometricAuthenticationContext setDidBuyParamsChange:]
  -[SSBiometricAuthenticationContext setChallenge:]
  -[SSBiometricAuthenticationContext setFpanID:]
  -[SSBiometricAuthenticationContext setIsExtendedAction:]
  -[SSBiometricAuthenticationContext setBiometricAuthorizationAttempts:]
  -[SSBiometricAuthenticationContext biometricAuthorizationAttempts]
  -[SSBiometricAuthenticationContext didFallbackToPassword]
  -[SSBiometricAuthenticationContext setIsPayment:]
  -[SSBiometricAuthenticationContext fpanID]
  -[SSBiometricAuthenticationContext isIdentityMapInvalid]
  -[SSBiometricAuthenticationContext dialogId]
  -[SSBiometricAuthenticationContext didAuthenticate]
  -[SSBiometricAuthenticationContext xAppleAMDMHeader]
  -[SSBiometricAuthenticationContext passwordEquivalentToken]
  -[SSBiometricAuthenticationContext setPasswordEquivalentToken:]
  -[SSBiometricAuthenticationContext setDidAuthenticate:]
  -[SSBiometricAuthenticationContext setPaymentTokenData:]
  -[SSBiometricAuthenticationContext setSignature:]
  -[SSBiometricAuthenticationContext setDidFallbackToPassword:]
  -[SSBiometricAuthenticationContext redirectURL]
  -[SSBiometricAuthenticationContext isExtendedAction]
  -[SSBiometricAuthenticationContext setTouchIDDelayEnabled:]
  -[SSBiometricAuthenticationContext paymentTokenData]
  -[SSBiometricAuthenticationContext setAccountName:]
  -[SSBiometricAuthenticationContext touchIDDelayEnabled]
  -[SSBiometricAuthenticationContext setXAppleAMDMHeader:]
  -[SSBiometricAuthenticationContext didBuyParamsChange]
  -[SSBiometricAuthenticationContext isPayment]
  -[SSBiometricAuthenticationContext setAccountIdentifier:]
  -[SSBiometricAuthenticationContext paymentSheet]
  -[SSBiometricAuthenticationContext setConsolidatedDialog:]
  -[SSBiometricAuthenticationContext setShouldContinueTouchIDSession:]
  -[SSBiometricAuthenticationContext setXAppleAMDHeader:]


SSVPlaybackItem : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *fallbackStreamingKeyServerURL
 @property  NSURL *fallbackStreamingKeyCertificateURL
 @property  NSDictionary *itemDictionary
 @property  id itemIdentifier
 @property  NSArray *assets
 @property  NSURL *HLSPlaylistURL
 @property  NSURL *HLSKeyCertificateURL
 @property  NSURL *HLSKeyServerURL
 @property  BOOL iTunesStoreStream

  // instance methods
  -[SSVPlaybackItem assets]
  -[SSVPlaybackItem itemIdentifier]
  -[SSVPlaybackItem HLSPlaylistURL]
  -[SSVPlaybackItem HLSKeyCertificateURL]
  -[SSVPlaybackItem HLSKeyServerURL]
  -[SSVPlaybackItem isiTunesStoreStream]
  -[SSVPlaybackItem assetForFlavor:]
  -[SSVPlaybackItem .cxx_destruct]
  -[SSVPlaybackItem _enumerateAssetsUsingBlock:]
  -[SSVPlaybackItem itemDictionary]
  -[SSVPlaybackItem initWithItemDictionary:]
  -[SSVPlaybackItem isEqual:]
  -[SSVPlaybackItem fallbackStreamingKeyServerURL]
  -[SSVPlaybackItem setFallbackStreamingKeyServerURL:]
  -[SSVPlaybackItem fallbackStreamingKeyCertificateURL]
  -[SSVPlaybackItem setFallbackStreamingKeyCertificateURL:]


SSXPCConnection : NSObject /usr/lib/libc++.1.dylib
 @property  @? disconnectBlock
 @property  @? messageBlock

  // instance methods
  -[SSXPCConnection setReplyQueue:]
  -[SSXPCConnection initWithXPCConnection:]
  -[SSXPCConnection sendMessage:]
  -[SSXPCConnection initWithServiceName:]
  -[SSXPCConnection init]
  -[SSXPCConnection sendMessage:withReply:]
  -[SSXPCConnection _initSSXPCConnection]
  -[SSXPCConnection disconnectBlock]
  -[SSXPCConnection dealloc]
  -[SSXPCConnection setMessageBlock:]
  -[SSXPCConnection copyReplyQueue]
  -[SSXPCConnection createXPCEndpoint]
  -[SSXPCConnection _reloadEventHandler]
  -[SSXPCConnection messageBlock]
  -[SSXPCConnection sendSynchronousMessage:withReply:]
  -[SSXPCConnection setDisconnectBlock:]


SSDownloadManager : NSObject /usr/lib/libc++.1.dylib
 @property  SSDownloadManagerOptions *managerOptions
 @property  NSArray *activeDownloads
 @property  NSArray *downloads
 @property  BOOL usingNetwork

  // class methods
  +[SSDownloadManager _sendGlobalHandler:]
  +[SSDownloadManager EBookDownloadKinds]
  +[SSDownloadManager softwareDownloadKinds]
  +[SSDownloadManager retryAllRestoreDownloads]
  +[SSDownloadManager reconnectToLSApplicationWorkspace]
  +[SSDownloadManager removePersistenceIdentifier:]
  +[SSDownloadManager setDownloadHandler:]
  +[SSDownloadManager _triggerDownloads]
  +[SSDownloadManager EBookDownloadManager]
  +[SSDownloadManager IPodDownloadManager]
  +[SSDownloadManager softwareDownloadManager]
  +[SSDownloadManager allStoreDownloadKinds]
  +[SSDownloadManager ITunesDownloadKinds]
  +[SSDownloadManager reevaluateBackgroundDownloadsForBundleIdentifiers:]
  +[SSDownloadManager IPodDownloadKinds]

  // instance methods
  -[SSDownloadManager _connectAsObserver]
  -[SSDownloadManager canCancelDownload:]
  -[SSDownloadManager insertDownloads:beforeDownload:completionBlock:]
  -[SSDownloadManager _willFinishDownloads:]
  -[SSDownloadManager isUsingNetwork]
  -[SSDownloadManager initWithDownloadKinds:]
  -[SSDownloadManager _XPCConnection]
  -[SSDownloadManager _finishDownloads:]
  -[SSDownloadManager _reloadIsUsingNetworkWithDownloadKinds:]
  -[SSDownloadManager _initSSDownloadManagerWithOptions:]
  -[SSDownloadManager getDownloadsUsingBlock:]
  -[SSDownloadManager setDownloads:completionBlock:]
  -[SSDownloadManager moveDownload:beforeDownload:completionBlock:]
  -[SSDownloadManager downloads]
  -[SSDownloadManager _handleDownloadsRemoved:]
  -[SSDownloadManager _copyDownloadsForMessage:downloadIDs:]
  -[SSDownloadManager _handleReply:forDownloads:message:isRetry:block:]
  -[SSDownloadManager _supportsSoftwareKind]
  -[SSDownloadManager initWithManagerOptions:]
  -[SSDownloadManager addDownloads:completionBlock:]
  -[SSDownloadManager _handleDownloadsChanged:]
  -[SSDownloadManager pauseDownloads:completionBlock:]
  -[SSDownloadManager reloadFromServer]
  -[SSDownloadManager restartDownloads:completionBlock:]
  -[SSDownloadManager activeDownloads]
  -[SSDownloadManager _loadDownloadKindsUsingNetwork]
  -[SSDownloadManager resumeDownloads:completionBlock:]
  -[SSDownloadManager _resetAllDownloads]
  -[SSDownloadManager _pauseDownloads:completionBlock:]
  -[SSDownloadManager insertDownloads:afterDownload:completionBlock:]
  -[SSDownloadManager _sendObserverConnection]
  -[SSDownloadManager _insertDownloads:before:after:completionBlock:]
  -[SSDownloadManager setDownloads:forKinds:completionBlock:]
  -[SSDownloadManager _pauseDownloads:forced:completionBlock:]
  -[SSDownloadManager _copyDownloadKindsUsingNetwork]
  -[SSDownloadManager managerOptions]
  -[SSDownloadManager finishDownloads:]
  -[SSDownloadManager _copyDownloads]
  -[SSDownloadManager _handleMessage:fromServerConnection:]
  -[SSDownloadManager _handleDownloadKindsUsingNetworkChanged:]
  -[SSDownloadManager _newOptionsDictionary]
  -[SSDownloadManager _sendMessageToObservers:]
  -[SSDownloadManager _handleDownloadStatesChanged:]
  -[SSDownloadManager _sendMessage:withCompletionBlock:]
  -[SSDownloadManager cancelDownloads:completionBlock:]
  -[SSDownloadManager dealloc]
  -[SSDownloadManager .cxx_destruct]
  -[SSDownloadManager _connectAfterDaemonLaunch]
  -[SSDownloadManager _sendDownloadsChanged:]
  -[SSDownloadManager _moveDownload:before:after:completionBlock:]
  -[SSDownloadManager cancelAllDownloadsWithCompletionBlock:]
  -[SSDownloadManager removeObserver:]
  -[SSDownloadManager moveDownload:afterDownload:completionBlock:]
  -[SSDownloadManager addObserver:]


SSDownloadManagerOptions : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSArray *prefetchedDownloadExternalProperties
 @property  BOOL ignoreDivertedDownloads
 @property  NSArray *downloadKinds
 @property  NSString *persistenceIdentifier
 @property  NSArray *prefetchedDownloadProperties
 @property  BOOL shouldFilterExternalOriginatedDownloads

  // instance methods
  -[SSDownloadManagerOptions persistenceIdentifier]
  -[SSDownloadManagerOptions copyWithZone:]
  -[SSDownloadManagerOptions shouldFilterExternalOriginatedDownloads]
  -[SSDownloadManagerOptions prefetchedDownloadProperties]
  -[SSDownloadManagerOptions .cxx_destruct]
  -[SSDownloadManagerOptions ignoreDivertedDownloads]
  -[SSDownloadManagerOptions setDownloadKinds:]
  -[SSDownloadManagerOptions downloadKinds]
  -[SSDownloadManagerOptions setPrefetchedDownloadExternalProperties:]
  -[SSDownloadManagerOptions isEqual:]
  -[SSDownloadManagerOptions setShouldFilterExternalOriginatedDownloads:]
  -[SSDownloadManagerOptions prefetchedDownloadExternalProperties]
  -[SSDownloadManagerOptions setPersistenceIdentifier:]
  -[SSDownloadManagerOptions setIgnoreDivertedDownloads:]
  -[SSDownloadManagerOptions setPrefetchedDownloadProperties:]


SSSilentEnrollmentContext : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  NSNumber *accountIdentifier
 @property  NSString *headerADSID
 @property  NSString *headerGSToken
 @property  NSString *headerGuid
 @property  NSString *headerMMeClientInfo
 @property  NSString *headerMMeDeviceId
 @property  NSData *parameters
 @property  NSString *URLString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSSilentEnrollmentContext parameters]
  -[SSSilentEnrollmentContext URLString]
  -[SSSilentEnrollmentContext setParameters:]
  -[SSSilentEnrollmentContext setHeaderGSToken:]
  -[SSSilentEnrollmentContext setHeaderMMeClientInfo:]
  -[SSSilentEnrollmentContext setURLString:]
  -[SSSilentEnrollmentContext setHeaderMMeDeviceId:]
  -[SSSilentEnrollmentContext accountIdentifier]
  -[SSSilentEnrollmentContext .cxx_destruct]
  -[SSSilentEnrollmentContext headerADSID]
  -[SSSilentEnrollmentContext headerGSToken]
  -[SSSilentEnrollmentContext headerGuid]
  -[SSSilentEnrollmentContext headerMMeClientInfo]
  -[SSSilentEnrollmentContext headerMMeDeviceId]
  -[SSSilentEnrollmentContext setAccountIdentifier:]
  -[SSSilentEnrollmentContext setHeaderADSID:]
  -[SSSilentEnrollmentContext setHeaderGuid:]


SSSilentEnrollment : SSRequest <SSXPCCoding>
 @property  SSSilentEnrollmentContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSSilentEnrollment context]
  -[SSSilentEnrollment initWithXPCEncoding:]
  -[SSSilentEnrollment copyXPCEncoding]
  -[SSSilentEnrollment initWithSilentEnrollmentContext:]
  -[SSSilentEnrollment .cxx_destruct]
  -[SSSilentEnrollment setContext:]


SSVTelephonyController : NSObject /usr/lib/libc++.1.dylib <CoreTelephonyClientSuppServicesDelegate, CoreTelephonyClientDelegate, CoreTelephonyClientRegistrationDelegate>
 @property  NSString *phoneNumber
 @property  NSString *operatorName
 @property  NSString *providerName
 @property  NSString *mobileSubscriberCountryCode
 @property  NSString *mobileSubscriberNetworkCode
 @property  NSString *registrationStatus
 @property  NSString *IMEI
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSVTelephonyController sharedController]
  +[SSVTelephonyController _hasRequiredTelephonyEntitlement]

  // instance methods
  -[SSVTelephonyController phoneNumberAvailable:]
  -[SSVTelephonyController operatorNameChanged:name:]
  -[SSVTelephonyController sendSMSWithText:toPhoneNumber:countryCode:error:]
  -[SSVTelephonyController _ensureTelephonyHandlesAreReady]
  -[SSVTelephonyController phoneNumber]
  -[SSVTelephonyController _telephonyClient]
  -[SSVTelephonyController _updateRegistrationStatus]
  -[SSVTelephonyController dealloc]
  -[SSVTelephonyController mobileSubscriberCountryCode]
  -[SSVTelephonyController registrationStatus]
  -[SSVTelephonyController .cxx_destruct]
  -[SSVTelephonyController IMEI]
  -[SSVTelephonyController _operatorName]
  -[SSVTelephonyController displayStatusChanged:status:]
  -[SSVTelephonyController operatorName]
  -[SSVTelephonyController _updateOperatorName]
  -[SSVTelephonyController _updatePhoneNumber]
  -[SSVTelephonyController _init]
  -[SSVTelephonyController providerName]
  -[SSVTelephonyController _phoneNumber]
  -[SSVTelephonyController activeSubscriptionsDidChange]
  -[SSVTelephonyController _telephonySubscriptionContext]
  -[SSVTelephonyController mobileSubscriberNetworkCode]
  -[SSVTelephonyController _registrationStatus]
  -[SSVTelephonyController phoneNumberChanged:]


SSConsolidatedDialog : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  NSString *cancelLabel
 @property  NSString *reason
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSConsolidatedDialog copyWithZone:]
  -[SSConsolidatedDialog initWithXPCEncoding:]
  -[SSConsolidatedDialog setReason:]
  -[SSConsolidatedDialog copyXPCEncoding]
  -[SSConsolidatedDialog .cxx_destruct]
  -[SSConsolidatedDialog setTitle:]
  -[SSConsolidatedDialog title]
  -[SSConsolidatedDialog cancelLabel]
  -[SSConsolidatedDialog setCancelLabel:]
  -[SSConsolidatedDialog reason]


SSEntity : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  long long _persistentIdentifier
 @property  NSDictionary *_localExternalValues
 @property  NSDictionary *_localValues
 @property  BOOL _managed
 @property  BOOL exists
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSEntity _existsMessage]
  +[SSEntity _getExternalValuesMessage]
  +[SSEntity _getValueMessage]
  +[SSEntity _setExternalValuesMessage]
  +[SSEntity _setValuesMessage]

  // instance methods
  -[SSEntity init]
  -[SSEntity copyXPCEncoding]
  -[SSEntity valueForProperty:]
  -[SSEntity dealloc]
  -[SSEntity exists]
  -[SSEntity _initWithPersistentIdentifier:]
  -[SSEntity _becomeManagedOnConnection:]
  -[SSEntity _resetLocalIVars]
  -[SSEntity _addCachedExternalValues:]
  -[SSEntity _addCachedPropertyValues:]
  -[SSEntity _localExternalValues]
  -[SSEntity _setLocalExternalValues:]
  -[SSEntity _localValues]
  -[SSEntity _setLocalValues:]
  -[SSEntity _setDirtyCachedExternalProperties:]
  -[SSEntity _setDirtyCachedProperties:]
  -[SSEntity _getValues:forProperties:count:message:]
  -[SSEntity __addCachedExternalValues:]
  -[SSEntity getValues:forExternalProperties:count:]
  -[SSEntity __addCachedPropertyValues:]
  -[SSEntity resetCachedProperties:count:]
  -[SSEntity resetCachedExternalProperties:count:]
  -[SSEntity isEqual:]
  -[SSEntity getValues:forProperties:count:]
  -[SSEntity _isManaged]
  -[SSEntity setValuesWithDictionary:]
  -[SSEntity setExternalValuesWithDictionary:]
  -[SSEntity valueForExternalProperty:]
  -[SSEntity setValue:forProperty:]
  -[SSEntity _persistentIdentifier]


SSDownloadHandler : NSObject /usr/lib/libc++.1.dylib
 @property  long long handlerIdentifier
 @property  <SSDownloadHandlerDelegate> *delegate
 @property  NSArray *downloadPhasesToIgnore
 @property  BOOL sessionsNeedPowerAssertion
 @property  BOOL sessionsShouldBlockOtherDownloads

  // instance methods
  -[SSDownloadHandler _connectToDaemon]
  -[SSDownloadHandler _handleMessage:fromServerConnection:]
  -[SSDownloadHandler init]
  -[SSDownloadHandler dealloc]
  -[SSDownloadHandler setDownloadPhasesToIgnore:]
  -[SSDownloadHandler _setValue:forProperty:]
  -[SSDownloadHandler _sendDisconnectMessage]
  -[SSDownloadHandler _sendAuthenticationSessionWithMessage:]
  -[SSDownloadHandler _sendSessionHandleWithMessage:]
  -[SSDownloadHandler _sendSessionCancelWithMessage:]
  -[SSDownloadHandler _sendSessionPauseWithMessage:]
  -[SSDownloadHandler _controlConnection]
  -[SSDownloadHandler _newSessionWithMessage:]
  -[SSDownloadHandler downloadPhasesToIgnore]
  -[SSDownloadHandler resetDisavowedSessions]
  -[SSDownloadHandler sessionsNeedPowerAssertion]
  -[SSDownloadHandler sessionsShouldBlockOtherDownloads]
  -[SSDownloadHandler setDelegate:]
  -[SSDownloadHandler handlerIdentifier]
  -[SSDownloadHandler setSessionsShouldBlockOtherDownloads:]
  -[SSDownloadHandler setSessionsNeedPowerAssertion:]
  -[SSDownloadHandler delegate]


SSScriptURLHandler : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSScriptURLHandler shouldHandleSafariScriptURL:]


SSVInstallManagedApplicationRequest : SSRequest <SSXPCCoding>
 @property  NSString *bundleIdentifier
 @property  NSString *bundleVersion
 @property  NSNumber *externalVersionIdentifier
 @property  NSString *itemIdentifier
 @property  BOOL skipDownloads
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVInstallManagedApplicationRequest setBundleVersion:]
  -[SSVInstallManagedApplicationRequest itemIdentifier]
  -[SSVInstallManagedApplicationRequest initWithXPCEncoding:]
  -[SSVInstallManagedApplicationRequest externalVersionIdentifier]
  -[SSVInstallManagedApplicationRequest copyXPCEncoding]
  -[SSVInstallManagedApplicationRequest bundleVersion]
  -[SSVInstallManagedApplicationRequest .cxx_destruct]
  -[SSVInstallManagedApplicationRequest setExternalVersionIdentifier:]
  -[SSVInstallManagedApplicationRequest setBundleIdentifier:]
  -[SSVInstallManagedApplicationRequest skipDownloads]
  -[SSVInstallManagedApplicationRequest initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:]
  -[SSVInstallManagedApplicationRequest initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:]
  -[SSVInstallManagedApplicationRequest startWithDetailedResponseBlock:]
  -[SSVInstallManagedApplicationRequest startWithMetadataResponseBlock:]
  -[SSVInstallManagedApplicationRequest setSkipDownloads:]
  -[SSVInstallManagedApplicationRequest bundleIdentifier]
  -[SSVInstallManagedApplicationRequest setItemIdentifier:]
  -[SSVInstallManagedApplicationRequest startWithResponseBlock:]


SSDictionaryResponse : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSDictionary *responseDictionary
 @property  NSArray *actions
 @property  NSNumber *failureType
 @property  NSArray *pingURLs
 @property  BOOL supportedProtocolVersion
 @property  NSURL *versionMismatchURL

  // instance methods
  -[SSDictionaryResponse copyWithZone:]
  -[SSDictionaryResponse actions]
  -[SSDictionaryResponse responseDictionary]
  -[SSDictionaryResponse versionMismatchURL]
  -[SSDictionaryResponse init]
  -[SSDictionaryResponse pingURLs]
  -[SSDictionaryResponse .cxx_destruct]
  -[SSDictionaryResponse initWithResponseDictionary:]
  -[SSDictionaryResponse _valueForProtocolKey:]
  -[SSDictionaryResponse _copyAccount]
  -[SSDictionaryResponse actionsWithActionType:]
  -[SSDictionaryResponse failureType]
  -[SSDictionaryResponse isSupportedProtocolVersion]


SSResponseAction : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *actionType
 @property  SSAccount *account
 @property  NSString *clientIdentifier
 @property  NSString *creditsString
 @property  SSDialog *dialog
 @property  NSString *footerSection
 @property  NSURL *URL
 @property  long long URLBagType

  // class methods
  +[SSResponseAction _dialogActionWithDialog:]
  +[SSResponseAction _dialogActionWithTouchIDDialog:]
  +[SSResponseAction _invalidateURLBagsAction]
  +[SSResponseAction _setActiveAccountActionWithAccount:]
  +[SSResponseAction _actionWithActionType:]
  +[SSResponseAction _setCreditsActionWithCredits:account:]
  +[SSResponseAction _urlActionWithType:URL:]
  +[SSResponseAction _selectFooterActionWithSection:]
  +[SSResponseAction _checkInAppQueueActionWithClientID:environment:]

  // instance methods
  -[SSResponseAction copyWithZone:]
  -[SSResponseAction actionType]
  -[SSResponseAction dialog]
  -[SSResponseAction clientIdentifier]
  -[SSResponseAction account]
  -[SSResponseAction .cxx_destruct]
  -[SSResponseAction URLBagType]
  -[SSResponseAction creditsString]
  -[SSResponseAction footerSection]
  -[SSResponseAction URL]


SSVURLLookupResponseConsumer : SSVURLDataConsumer
  // instance methods
  -[SSVURLLookupResponseConsumer objectForData:response:error:]


SSVPlaybackLeaseRequest : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *_actionParameterValue
 @property  NSString *_URLBagKey
 @property  long long _actionType
 @property  long long _leaseType
 @property  unsigned long _KDMovieIdentifier
 @property  NSData *_certificateData
 @property  NSURL *_URL
 @property  unsigned long KDChannelIdentifier
 @property  NSDictionary *parameterValues
 @property  NSDictionary *HTTPHeaderFields
 @property  BOOL startsLeaseSession

  // class methods
  +[SSVPlaybackLeaseRequest _requestWithType:]

  // instance methods
  -[SSVPlaybackLeaseRequest _URL]
  -[SSVPlaybackLeaseRequest copyWithZone:]
  -[SSVPlaybackLeaseRequest setValue:forHTTPHeaderField:]
  -[SSVPlaybackLeaseRequest .cxx_destruct]
  -[SSVPlaybackLeaseRequest valueForParameter:]
  -[SSVPlaybackLeaseRequest setValue:forParameter:]
  -[SSVPlaybackLeaseRequest _setURL:]
  -[SSVPlaybackLeaseRequest _certificateData]
  -[SSVPlaybackLeaseRequest _applyValuesToCopy:]
  -[SSVPlaybackLeaseRequest _actionParameterValue]
  -[SSVPlaybackLeaseRequest setKDChannelIdentifier:]
  -[SSVPlaybackLeaseRequest _setKDMovieIdentifier:]
  -[SSVPlaybackLeaseRequest setParameterValues:]
  -[SSVPlaybackLeaseRequest setStartsLeaseSession:]
  -[SSVPlaybackLeaseRequest _URLBagKey]
  -[SSVPlaybackLeaseRequest setHTTPHeaderFields:]
  -[SSVPlaybackLeaseRequest _setActionType:]
  -[SSVPlaybackLeaseRequest _setCertificateData:]
  -[SSVPlaybackLeaseRequest _copyWithLeaseType:]
  -[SSVPlaybackLeaseRequest _copyBodyDictionaryWithFairPlaySession:]
  -[SSVPlaybackLeaseRequest KDChannelIdentifier]
  -[SSVPlaybackLeaseRequest parameterValues]
  -[SSVPlaybackLeaseRequest HTTPHeaderFields]
  -[SSVPlaybackLeaseRequest startsLeaseSession]
  -[SSVPlaybackLeaseRequest _leaseType]
  -[SSVPlaybackLeaseRequest _KDMovieIdentifier]
  -[SSVPlaybackLeaseRequest valueForHTTPHeaderField:]
  -[SSVPlaybackLeaseRequest _actionType]


SSAuthenticationResponse : NSObject /usr/lib/libc++.1.dylib
 @property  long long URLBagType
 @property  NSDictionary *responseDictionary
 @property  NSHTTPURLResponse *URLResponse
 @property  NSString *accountName
 @property  long long accountKind
 @property  NSNumber *accountUniqueIdentifier
 @property  long long availableServiceTypes
 @property  NSString *creditsString
 @property  long long enabledServiceTypes
 @property  BOOL managedStudent
 @property  BOOL newCustomer
 @property  NSString *storeFrontIdentifier
 @property  NSString *token
 @property  NSNumber *failureType
 @property  long long responseType
 @property  NSString *userMessage

  // instance methods
  -[SSAuthenticationResponse accountName]
  -[SSAuthenticationResponse altDSID]
  -[SSAuthenticationResponse enabledServiceTypes]
  -[SSAuthenticationResponse responseDictionary]
  -[SSAuthenticationResponse setURLBagType:]
  -[SSAuthenticationResponse userMessage]
  -[SSAuthenticationResponse .cxx_destruct]
  -[SSAuthenticationResponse storeFrontIdentifier]
  -[SSAuthenticationResponse isNewCustomer]
  -[SSAuthenticationResponse URLBagType]
  -[SSAuthenticationResponse URLResponse]
  -[SSAuthenticationResponse token]
  -[SSAuthenticationResponse creditsString]
  -[SSAuthenticationResponse newAccount]
  -[SSAuthenticationResponse initWithURLResponse:dictionary:]
  -[SSAuthenticationResponse failureType]
  -[SSAuthenticationResponse _valueForFirstAvailableKey:]
  -[SSAuthenticationResponse accountUniqueIdentifier]
  -[SSAuthenticationResponse isManagedStudent]
  -[SSAuthenticationResponse _responseTypeForFailureType:]
  -[SSAuthenticationResponse _responseTypeForErrorNumber:]
  -[SSAuthenticationResponse _responseTypeForStatusValue:]
  -[SSAuthenticationResponse accountKind]
  -[SSAuthenticationResponse availableServiceTypes]
  -[SSAuthenticationResponse responseType]


SSURLBag : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *existingBagDictionary
 @property  NSString *storeFrontIdentifier
 @property  SSURLBagContext *URLBagContext

  // class methods
  +[SSURLBag setURLBag:forContext:]
  +[SSURLBag URLBagForContext:]

  // instance methods
  -[SSURLBag dispatchSync:]
  -[SSURLBag URLBagContext]
  -[SSURLBag _connection]
  -[SSURLBag initWithURLBagContext:]
  -[SSURLBag init]
  -[SSURLBag valueForKey:error:]
  -[SSURLBag _drainPendingLookupsWithError:]
  -[SSURLBag dealloc]
  -[SSURLBag storeFrontIdentifier]
  -[SSURLBag loadValueForKey:completionBlock:]
  -[SSURLBag _loadWithCompletionBlock:]
  -[SSURLBag getTrustForURL:completionBlock:]
  -[SSURLBag loadWithCompletionBlock:]
  -[SSURLBag existingBagDictionary]
  -[SSURLBag dispatchAsync:]
  -[SSURLBag _loadURLBag]
  -[SSURLBag invalidate]


SSDownloadSession : NSObject /usr/lib/libc++.1.dylib
 @property  SSDownload *download
 @property  SSDownloadAsset *downloadAsset

  // instance methods
  -[SSDownloadSession download]
  -[SSDownloadSession init]
  -[SSDownloadSession dealloc]
  -[SSDownloadSession _initWithMessage:controlConnection:]
  -[SSDownloadSession _initSSDownloadSession]
  -[SSDownloadSession _copySessionPropertyWithKey:]
  -[SSDownloadSession isEqual:]
  -[SSDownloadSession downloadAsset]


SSDownloadHandlerSession : SSDownloadSession
 @property  NSString *downloadPhase
 @property  NSNumber *duetTimeoutInterval
 @property  BOOL blocksOtherDownloads
 @property  BOOL canBePaused
 @property  BOOL needsPowerAssertion

  // instance methods
  -[SSDownloadHandlerSession dealloc]
  -[SSDownloadHandlerSession _initWithMessage:controlConnection:]
  -[SSDownloadHandlerSession _finishWithType:error:]
  -[SSDownloadHandlerSession _setBool:forSessionProperty:]
  -[SSDownloadHandlerSession blocksOtherDownloads]
  -[SSDownloadHandlerSession canBePaused]
  -[SSDownloadHandlerSession disavowSessionWithError:]
  -[SSDownloadHandlerSession finishSessionWithSuccess:error:]
  -[SSDownloadHandlerSession needsPowerAssertion]
  -[SSDownloadHandlerSession setBlocksOtherDownloads:]
  -[SSDownloadHandlerSession setNeedsPowerAssertion:]
  -[SSDownloadHandlerSession duetTimeoutInterval]
  -[SSDownloadHandlerSession setPercentComplete:]
  -[SSDownloadHandlerSession releaseSessionControl]
  -[SSDownloadHandlerSession setStatusDescription:]
  -[SSDownloadHandlerSession setCanBePaused:]
  -[SSDownloadHandlerSession downloadPhase]


SSDownloadAuthenticationSession : SSDownloadSession
 @property  NSURLAuthenticationChallenge *authenticationChallenge

  // instance methods
  -[SSDownloadAuthenticationSession authenticationChallenge]
  -[SSDownloadAuthenticationSession _finishWithType:credential:]


SSDownloadAuthenticationChallengeSender : NSObject /usr/lib/libc++.1.dylib <NSURLAuthenticationChallengeSender>
 @property  SSDownloadAuthenticationSession *authenticationSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSDownloadAuthenticationChallengeSender useCredential:forAuthenticationChallenge:]
  -[SSDownloadAuthenticationChallengeSender dealloc]
  -[SSDownloadAuthenticationChallengeSender continueWithoutCredentialForAuthenticationChallenge:]
  -[SSDownloadAuthenticationChallengeSender cancelAuthenticationChallenge:]
  -[SSDownloadAuthenticationChallengeSender rejectProtectionSpaceAndContinueWithChallenge:]
  -[SSDownloadAuthenticationChallengeSender initWithAuthenticationSession:]
  -[SSDownloadAuthenticationChallengeSender authenticationSession]
  -[SSDownloadAuthenticationChallengeSender performDefaultHandlingForAuthenticationChallenge:]


SSFollowUpController : NSObject /usr/lib/libc++.1.dylib
 @property  FLFollowUpController *followUpController

  // class methods
  +[SSFollowUpController sharedController]

  // instance methods
  -[SSFollowUpController followUpController]
  -[SSFollowUpController init]
  -[SSFollowUpController .cxx_destruct]
  -[SSFollowUpController dismissFollowUpWithIdentifier:account:]
  -[SSFollowUpController pendingFollowUpWithIdentifier:]
  -[SSFollowUpController _dismissFollowUpWithIdentifier:]
  -[SSFollowUpController _postFollowUpWithIdentifier:userInfo:]
  -[SSFollowUpController postFollowUpWithIdentifier:account:userInfo:]
  -[SSFollowUpController _createFollowUpItemForRenewCredentialsWithUserInfo:]
  -[SSFollowUpController _createFollowUpItemForIdentifier:userInfo:]
  -[SSFollowUpController dismissFollowUpWithIdentifier:]
  -[SSFollowUpController postFollowUpWithIdentifier:userInfo:]
  -[SSFollowUpController setFollowUpController:]


SSPersonalizeOffersRequest : SSRequest <SSXPCCoding>
 @property  <SSPersonalizeOffersDelegate> *delegate
 @property  NSArray *items
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSPersonalizeOffersRequest initWithItems:]
  -[SSPersonalizeOffersRequest initWithXPCEncoding:]
  -[SSPersonalizeOffersRequest copyXPCEncoding]
  -[SSPersonalizeOffersRequest items]
  -[SSPersonalizeOffersRequest dealloc]
  -[SSPersonalizeOffersRequest startWithCompletionBlock:]
  -[SSPersonalizeOffersRequest startWithPersonalizedResponseBlock:]
  -[SSPersonalizeOffersRequest start]


SSPersonalizeOffersResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  NSArray *personalizedItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSPersonalizeOffersResponse initWithXPCEncoding:]
  -[SSPersonalizeOffersResponse copyXPCEncoding]
  -[SSPersonalizeOffersResponse dealloc]
  -[SSPersonalizeOffersResponse priceDisplayForItemType:]
  -[SSPersonalizeOffersResponse actionParametersForItemIdentifier:]
  -[SSPersonalizeOffersResponse actionDisplayNameForItemType:]
  -[SSPersonalizeOffersResponse _setPersonalizedItems:]
  -[SSPersonalizeOffersResponse personalizedItems]
  -[SSPersonalizeOffersResponse setActionDisplayNameString:forItemType:]
  -[SSPersonalizeOffersResponse setActionParameters:forItemIdentifier:]
  -[SSPersonalizeOffersResponse setPriceDisplayString:forItemType:]


SSPreorder : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  NSString *artistName
 @property  SSItemImageCollection *imageCollection
 @property  NSString *itemKind
 @property  long long persistentIdentifier
 @property  NSDate *releaseDate
 @property  NSString *releaseDateString
 @property  NSNumber *storeAccountIdentifier
 @property  unsigned long storeItemIdentifier
 @property  unsigned long storePreorderIdentifier
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSPreorder releaseDate]
  -[SSPreorder artistName]
  -[SSPreorder _setTitle:]
  -[SSPreorder initWithXPCEncoding:]
  -[SSPreorder copyXPCEncoding]
  -[SSPreorder dealloc]
  -[SSPreorder storeAccountIdentifier]
  -[SSPreorder _initWithPersistentIdentifier:]
  -[SSPreorder itemKind]
  -[SSPreorder title]
  -[SSPreorder persistentIdentifier]
  -[SSPreorder imageCollection]
  -[SSPreorder releaseDateString]
  -[SSPreorder copyReleaseDateStringWithStyle:]
  -[SSPreorder _setArtistName:]
  -[SSPreorder _setImageCollection:]
  -[SSPreorder _setItemKind:]
  -[SSPreorder _setReleaseDate:]
  -[SSPreorder _setReleaseDateString:]
  -[SSPreorder _setStoreAccountIdentifier:]
  -[SSPreorder _setStoreItemIdentifier:]
  -[SSPreorder _setStorePreorderIdentifier:]
  -[SSPreorder storePreorderIdentifier]
  -[SSPreorder isEqual:]
  -[SSPreorder storeItemIdentifier]


SSPreorderManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *itemKinds
 @property  NSArray *preorders

  // class methods
  +[SSPreorderManager bookStoreItemKinds]
  +[SSPreorderManager musicStoreItemKinds]

  // instance methods
  -[SSPreorderManager _connectAsObserver]
  -[SSPreorderManager reloadFromServer]
  -[SSPreorderManager _handleMessage:fromServerConnection:]
  -[SSPreorderManager _sendMessageToObservers:]
  -[SSPreorderManager init]
  -[SSPreorderManager dealloc]
  -[SSPreorderManager itemKinds]
  -[SSPreorderManager initWithItemKinds:]
  -[SSPreorderManager _registerAsObserver]
  -[SSPreorderManager cancelPreorders:withCompletionBlock:]
  -[SSPreorderManager removeObserver:]
  -[SSPreorderManager addObserver:]
  -[SSPreorderManager preorders]


SSRestoreContentItem : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *bundleID
 @property  NSNumber *cloudItemID
 @property  NSNumber *cloudMatchStatus
 @property  NSString *downloadKind
 @property  NSString *podcastEpisodeGUID
 @property  NSString *storeAccountAppleID
 @property  NSNumber *storeAccountID
 @property  NSNumber *storeOriginalPurchaserAccountID
 @property  NSString *storeFrontID
 @property  NSNumber *storeItemID
 @property  NSString *storeSoftwareVersionID
 @property  NSString *title
 @property  BOOL DRMFree
 @property  NSString *storeFlavor
 @property  NSString *videoDimensions

  // instance methods
  -[SSRestoreContentItem setBundleID:]
  -[SSRestoreContentItem init]
  -[SSRestoreContentItem setStoreAccountID:]
  -[SSRestoreContentItem dealloc]
  -[SSRestoreContentItem storeFrontID]
  -[SSRestoreContentItem setStoreItemID:]
  -[SSRestoreContentItem _setValue:forProperty:]
  -[SSRestoreContentItem setTitle:]
  -[SSRestoreContentItem initWithRestoreDownload:]
  -[SSRestoreContentItem isEligibleForRestore:]
  -[SSRestoreContentItem title]
  -[SSRestoreContentItem podcastEpisodeGUID]
  -[SSRestoreContentItem setPodcastEpisodeGUID:]
  -[SSRestoreContentItem storeAccountID]
  -[SSRestoreContentItem isDRMFree]
  -[SSRestoreContentItem setValue:forDownloadProperty:]
  -[SSRestoreContentItem _initSSRestoreContentItem]
  -[SSRestoreContentItem setValue:forAssetProperty:]
  -[SSRestoreContentItem _restoreKeyForAssetProperty:]
  -[SSRestoreContentItem _restoreKeyForDownloadProperty:]
  -[SSRestoreContentItem setStoreAccountAppleID:]
  -[SSRestoreContentItem setCloudMatchStatus:]
  -[SSRestoreContentItem cloudItemID]
  -[SSRestoreContentItem cloudMatchStatus]
  -[SSRestoreContentItem copyRestoreDictionary]
  -[SSRestoreContentItem downloadKind]
  -[SSRestoreContentItem setCloudItemID:]
  -[SSRestoreContentItem setDownloadKind:]
  -[SSRestoreContentItem setDRMFree:]
  -[SSRestoreContentItem setStoreOriginalPurchaserAccountID:]
  -[SSRestoreContentItem setStoreFlavor:]
  -[SSRestoreContentItem setStoreSoftwareVersionID:]
  -[SSRestoreContentItem storeAccountAppleID]
  -[SSRestoreContentItem storeFlavor]
  -[SSRestoreContentItem storeOriginalPurchaserAccountID]
  -[SSRestoreContentItem storeSoftwareVersionID]
  -[SSRestoreContentItem storeItemID]
  -[SSRestoreContentItem setStoreFrontID:]
  -[SSRestoreContentItem bundleID]
  -[SSRestoreContentItem videoDimensions]
  -[SSRestoreContentItem setVideoDimensions:]


SSPurchaseHistoryItem : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSPurchaseHistoryItem copyWithZone:]
  -[SSPurchaseHistoryItem initWithXPCEncoding:]
  -[SSPurchaseHistoryItem copyXPCEncoding]
  -[SSPurchaseHistoryItem valueForProperty:]
  -[SSPurchaseHistoryItem dealloc]
  -[SSPurchaseHistoryItem isEqual:]
  -[SSPurchaseHistoryItem setValue:forProperty:]


SSXPCServer : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSXPCServer mainServer]

  // instance methods
  -[SSXPCServer initWithServiceName:]
  -[SSXPCServer init]
  -[SSXPCServer dealloc]
  -[SSXPCServer addObserver:selector:forMessage:]
  -[SSXPCServer removeObserver:selector:forMessage:]
  -[SSXPCServer _dispatchMessage:connection:]
  -[SSXPCServer initWithServiceName:entitlement:queue:]
  -[SSXPCServer start]


SSXPCServerObserver : NSObject /usr/lib/libc++.1.dylib
 @property  id observer
 @property  SEL selector

  // instance methods
  -[SSXPCServerObserver setSelector:]
  -[SSXPCServerObserver selector]
  -[SSXPCServerObserver setObserver:]
  -[SSXPCServerObserver isEqual:]
  -[SSXPCServerObserver observer]


SSDistributedNotificationCenter : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *namedPort

  // instance methods
  -[SSDistributedNotificationCenter init]
  -[SSDistributedNotificationCenter dealloc]
  -[SSDistributedNotificationCenter namedPort]
  -[SSDistributedNotificationCenter initWithNamedPort:]
  -[SSDistributedNotificationCenter _distributedNotificationMessage:connection:]
  -[SSDistributedNotificationCenter _sendRegistrationMessage:name:]
  -[SSDistributedNotificationCenter addObserverForName:queue:usingBlock:]
  -[SSDistributedNotificationCenter removeObserver:]


SSDistributedNotificationCenterObserver : NSObject /usr/lib/libc++.1.dylib
 @property  @? block
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  NSString *name

  // instance methods
  -[SSDistributedNotificationCenterObserver dealloc]
  -[SSDistributedNotificationCenterObserver name]
  -[SSDistributedNotificationCenterObserver block]
  -[SSDistributedNotificationCenterObserver dispatchQueue]
  -[SSDistributedNotificationCenterObserver initWithName:queue:block:]


SSRollableLog : NSObject /usr/lib/libc++.1.dylib
 @property  SSLogFileOptions *logOptions

  // instance methods
  -[SSRollableLog dealloc]
  -[SSRollableLog initWithLogOptions:]
  -[SSRollableLog _closeLogFile]
  -[SSRollableLog _openLogFile]
  -[SSRollableLog _checkLogFileSize]
  -[SSRollableLog _logFilePathWithIndex:]
  -[SSRollableLog writeString:]
  -[SSRollableLog logOptions]
  -[SSRollableLog _activeLogFilePath]
  -[SSRollableLog _rollLogFiles]


SSVFairPlaySAPContext : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL complete

  // instance methods
  -[SSVFairPlaySAPContext signData:error:]
  -[SSVFairPlaySAPContext isComplete]
  -[SSVFairPlaySAPContext dealloc]
  -[SSVFairPlaySAPContext verifyPrimeSignature:error:]
  -[SSVFairPlaySAPContext _teardownSession]
  -[SSVFairPlaySAPContext verifySignature:forData:error:]
  -[SSVFairPlaySAPContext primingSignatureForData:error:]
  -[SSVFairPlaySAPContext exchangeData:error:]
  -[SSVFairPlaySAPContext initWithSAPVersion:]


SSRentalInformationRequest : SSRequest <SSXPCCoding>
 @property  NSNumber *accountIdentifier
 @property  NSNumber *rentalKeyIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSRentalInformationRequest initWithXPCEncoding:]
  -[SSRentalInformationRequest initWithAccountIdentifier:rentalKeyIdentifier:]
  -[SSRentalInformationRequest copyXPCEncoding]
  -[SSRentalInformationRequest rentalKeyIdentifier]
  -[SSRentalInformationRequest accountIdentifier]
  -[SSRentalInformationRequest .cxx_destruct]
  -[SSRentalInformationRequest startWithResponseBlock:]


SSVOperation : NSOperation /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  BOOL success
 @property  NSError *error

  // instance methods
  -[SSVOperation dispatchSync:]
  -[SSVOperation success]
  -[SSVOperation runChildOperation:]
  -[SSVOperation init]
  -[SSVOperation setError:]
  -[SSVOperation .cxx_destruct]
  -[SSVOperation cancel]
  -[SSVOperation error]
  -[SSVOperation addChildRequest:]
  -[SSVOperation removeChildRequest:]
  -[SSVOperation dispatchAsync:]
  -[SSVOperation setSuccess:]


SSVDisableSubscriptionRequest : SSRequest <SSXPCCoding>
 @property  SSAuthenticationContext *authenticationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVDisableSubscriptionRequest initWithXPCEncoding:]
  -[SSVDisableSubscriptionRequest copyXPCEncoding]
  -[SSVDisableSubscriptionRequest authenticationContext]
  -[SSVDisableSubscriptionRequest .cxx_destruct]
  -[SSVDisableSubscriptionRequest startWithCompletionBlock:]
  -[SSVDisableSubscriptionRequest setAuthenticationContext:]


SSDownloadFileManifest : NSObject /usr/lib/libc++.1.dylib
 @property  long long manifestType

  // instance methods
  -[SSDownloadFileManifest init]
  -[SSDownloadFileManifest dealloc]
  -[SSDownloadFileManifest initWithManifestType:]
  -[SSDownloadFileManifest _removeItemsWithAssetPaths:completionBlock:]
  -[SSDownloadFileManifest getPathsForFilesWithClass:completionBlock:]
  -[SSDownloadFileManifest manifestType]
  -[SSDownloadFileManifest rebuildManifestWithCompletionBlock:]
  -[SSDownloadFileManifest removeItemWithAssetPath:completionBlock:]
  -[SSDownloadFileManifest removeItemsWithAssetPaths:completionBlock:]


SSVMediaContentTasteUpdateRequest : SSRequest <SSXPCCoding>
 @property  NSArray *contentTasteItemUpdates
 @property  BOOL shouldInvalidateLocalCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVMediaContentTasteUpdateRequest initWithXPCEncoding:]
  -[SSVMediaContentTasteUpdateRequest copyXPCEncoding]
  -[SSVMediaContentTasteUpdateRequest .cxx_destruct]
  -[SSVMediaContentTasteUpdateRequest startWithCompletionBlock:]
  -[SSVMediaContentTasteUpdateRequest contentTasteItemUpdates]
  -[SSVMediaContentTasteUpdateRequest shouldInvalidateLocalCache]
  -[SSVMediaContentTasteUpdateRequest setShouldInvalidateLocalCache:]
  -[SSVMediaContentTasteUpdateRequest setContentTasteItemUpdates:]
  -[SSVMediaContentTasteUpdateRequest startWithResponseBlock:]


SSEventMonitor : NSObject /usr/lib/libc++.1.dylib
 @property  <SSEventMonitorDelegate> *delegate

  // instance methods
  -[SSEventMonitor _handleMessage:fromServerConnection:]
  -[SSEventMonitor init]
  -[SSEventMonitor dealloc]
  -[SSEventMonitor _connectEventConnection]
  -[SSEventMonitor setDelegate:]
  -[SSEventMonitor delegate]


SSVMediaContentTasteItem : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  unsigned long contentType
 @property  NSString *playlistGlobalID
 @property  long long storeAdamID
 @property  unsigned long tasteType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSVMediaContentTasteItem supportsSecureCoding]

  // instance methods
  -[SSVMediaContentTasteItem copyWithZone:]
  -[SSVMediaContentTasteItem initWithXPCEncoding:]
  -[SSVMediaContentTasteItem copyXPCEncoding]
  -[SSVMediaContentTasteItem playlistGlobalID]
  -[SSVMediaContentTasteItem contentType]
  -[SSVMediaContentTasteItem tasteType]
  -[SSVMediaContentTasteItem .cxx_destruct]
  -[SSVMediaContentTasteItem encodeWithCoder:]
  -[SSVMediaContentTasteItem _copyWithMediaContentTasteItemClass:]
  -[SSVMediaContentTasteItem mutableCopyWithZone:]
  -[SSVMediaContentTasteItem initWithCoder:]
  -[SSVMediaContentTasteItem storeAdamID]


SSVMutableMediaContentTasteItem : SSVMediaContentTasteItem
 @property  unsigned long contentType
 @property  NSString *playlistGlobalID
 @property  long long storeAdamID
 @property  unsigned long tasteType

  // instance methods
  -[SSVMutableMediaContentTasteItem setContentType:]
  -[SSVMutableMediaContentTasteItem copyWithZone:]
  -[SSVMutableMediaContentTasteItem setStoreAdamID:]
  -[SSVMutableMediaContentTasteItem setPlaylistGlobalID:]
  -[SSVMutableMediaContentTasteItem setTasteType:]


SSVCookieKey : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSNumber *identifier
 @property  long long scope

  // class methods
  +[SSVCookieKey keyWithIdentifier:scope:]

  // instance methods
  -[SSVCookieKey copyWithZone:]
  -[SSVCookieKey scope]
  -[SSVCookieKey setScope:]
  -[SSVCookieKey .cxx_destruct]
  -[SSVCookieKey setIdentifier:]
  -[SSVCookieKey identifier]


SSVCookieStorage : NSObject /usr/lib/libc++.1.dylib
 @property  SSSQLiteDatabase *_database
 @property  BOOL performingMigration
 @property  NSURL *storageLocation

  // class methods
  +[SSVCookieStorage sharedInstance]
  +[SSVCookieStorage _currentProcessShouldUseRescuedStorageLocationForLocation:]
  +[SSVCookieStorage _rescuedStorageLocationForLocation:]
  +[SSVCookieStorage _fileURLRepresentsSharedStorageLocation:]
  +[SSVCookieStorage _sharedStorageLocationPath]
  +[SSVCookieStorage _bindStatement:withValues:]
  +[SSVCookieStorage _getUserSetCookiesForResponse:]
  +[SSVCookieStorage _getGlobalSetCookiesForResponse:]
  +[SSVCookieStorage _setupCookieDatabase:forCookieStorage:]
  +[SSVCookieStorage _migrateToVersion1WithDatabase:]
  +[SSVCookieStorage _fileIsOwnedByRoot:]
  +[SSVCookieStorage _migrateToVersion2WithDatabase:]
  +[SSVCookieStorage _currentProcessIsRoot]
  +[SSVCookieStorage responseHasSetCookies:]
  +[SSVCookieStorage _getSetCookiesForResponse:]
  +[SSVCookieStorage sharedStorage]

  // instance methods
  -[SSVCookieStorage init]
  -[SSVCookieStorage dealloc]
  -[SSVCookieStorage removeAllCookies]
  -[SSVCookieStorage removeCookiesWithProperties:]
  -[SSVCookieStorage removeCookiesWithAccount:]
  -[SSVCookieStorage allCookiesForAccount:]
  -[SSVCookieStorage .cxx_destruct]
  -[SSVCookieStorage performingMigration]
  -[SSVCookieStorage _database]
  -[SSVCookieStorage initWithStorageLocation:]
  -[SSVCookieStorage _copyCookiesWithKey:]
  -[SSVCookieStorage allCookiesForUserIdentifier:scope:]
  -[SSVCookieStorage cookieArrayBySettingFeatureEnablerWithArray:key:]
  -[SSVCookieStorage _shouldAddITFECookieToURL:]
  -[SSVCookieStorage cookieHeadersForURL:userIdentifier:scope:]
  -[SSVCookieStorage _copyCookieDictionaryForURL:key:]
  -[SSVCookieStorage setFeatureEnablerInDictionary:key:]
  -[SSVCookieStorage cookiesForURL:userIdentifier:scope:]
  -[SSVCookieStorage _copyCookieObjectsForURL:key:]
  -[SSVCookieStorage _cookieDatabaseDidChange]
  -[SSVCookieStorage _columnNameForCookieProperty:]
  -[SSVCookieStorage removeCookiesWithUserIdentifier:scope:]
  -[SSVCookieStorage _accountForKey:]
  -[SSVCookieStorage _setCookies:forKey:]
  -[SSVCookieStorage setCookiesForHTTPResponse:userIdentifier:scope:]
  -[SSVCookieStorage _allCookieKeys]
  -[SSVCookieStorage _insertCookies:forKey:]
  -[SSVCookieStorage fetchDefaults]
  -[SSVCookieStorage _stopIncludingLocalCookies]
  -[SSVCookieStorage setPerformingMigration:]
  -[SSVCookieStorage synchronizeFeatureEnablerCookieWithCookieValue:key:result:]
  -[SSVCookieStorage _copyPrivateCookiesForURL:key:]
  -[SSVCookieStorage _copyPrivateCookieObjectsForURL:key:]
  -[SSVCookieStorage _copyCookiesForPreparedSQLStatement:]
  -[SSVCookieStorage _filterCookies:forURL:]
  -[SSVCookieStorage _bindInsertStatement:forCookie:key:]
  -[SSVCookieStorage allCookiesForUserIdentifier:]
  -[SSVCookieStorage cookieHeadersForURL:userIdentifier:]
  -[SSVCookieStorage cookiesForURL:account:]
  -[SSVCookieStorage storageLocation]
  -[SSVCookieStorage cookiesForURL:userIdentifier:]
  -[SSVCookieStorage removeCookiesWithUserIdentifier:]
  -[SSVCookieStorage setCookies:forAccount:]
  -[SSVCookieStorage setCookies:forUserIdentifier:]
  -[SSVCookieStorage setCookiesForHTTPResponse:userIdentifier:]
  -[SSVCookieStorage synchronizeCookies]
  -[SSVCookieStorage setCookiesFromCookieStorage:]
  -[SSVCookieStorage _handleSharedCookieDatabaseDidChangeDarwinNotification]
  -[SSVCookieStorage setCookiesForHTTPResponse:account:]
  -[SSVCookieStorage cookieHeadersForURL:account:]


SSWeakReference : NSObject /usr/lib/libc++.1.dylib
 @property  id object

  // class methods
  +[SSWeakReference weakReferenceWithObject:]

  // instance methods
  -[SSWeakReference object]
  -[SSWeakReference dealloc]
  -[SSWeakReference isEqual:]


SSVComplexOperation : SSVOperation
 @property  NSDictionary *URLBagDictionary
 @property  SSVFairPlaySAPSession *SAPSession

  // instance methods
  -[SSVComplexOperation SAPSession]
  -[SSVComplexOperation .cxx_destruct]
  -[SSVComplexOperation setSAPSession:]
  -[SSVComplexOperation URLBagDictionary]
  -[SSVComplexOperation configureWithURLBagDictionary:]
  -[SSVComplexOperation newLoadURLOperationWithRequest:]
  -[SSVComplexOperation configureWithURLBag:]


SSLookupProperties : NSObject /usr/lib/libc++.1.dylib <NSCopying, SSXPCCoding>
 @property  NSString *keyProfile
 @property  long long localizationStyle
 @property  CLLocation *location
 @property  NSNumber *timeoutInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSLookupProperties copyWithZone:]
  -[SSLookupProperties initWithXPCEncoding:]
  -[SSLookupProperties copyXPCEncoding]
  -[SSLookupProperties keyProfile]
  -[SSLookupProperties dealloc]
  -[SSLookupProperties setKeyProfile:]
  -[SSLookupProperties setLocation:]
  -[SSLookupProperties setTimeoutInterval:]
  -[SSLookupProperties valueForRequestParameter:]
  -[SSLookupProperties copyRequestParameters]
  -[SSLookupProperties localizationStyle]
  -[SSLookupProperties setLocalizationStyle:]
  -[SSLookupProperties location]
  -[SSLookupProperties timeoutInterval]
  -[SSLookupProperties setValue:forRequestParameter:]


SSLookupRequest : SSRequest <SSXPCCoding>
 @property  SSLookupProperties *_lookupProperties
 @property  NSString *keyProfile
 @property  long long localizationStyle
 @property  SSAuthenticationContext *authenticationContext
 @property  BOOL authenticatesIfNeeded
 @property  long long personalizationStyle
 @property  long long resultFilters
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSLookupRequest initWithXPCEncoding:]
  -[SSLookupRequest init]
  -[SSLookupRequest copyXPCEncoding]
  -[SSLookupRequest keyProfile]
  -[SSLookupRequest authenticationContext]
  -[SSLookupRequest dealloc]
  -[SSLookupRequest setKeyProfile:]
  -[SSLookupRequest personalizationStyle]
  -[SSLookupRequest initWithLocation:]
  -[SSLookupRequest startWithCompletionBlock:]
  -[SSLookupRequest setAuthenticationContext:]
  -[SSLookupRequest valueForRequestParameter:]
  -[SSLookupRequest localizationStyle]
  -[SSLookupRequest setLocalizationStyle:]
  -[SSLookupRequest authenticatesIfNeeded]
  -[SSLookupRequest startWithLookupBlock:]
  -[SSLookupRequest setAuthenticatesIfNeeded:]
  -[SSLookupRequest _lookupProperties]
  -[SSLookupRequest _setTimeoutInterval:]
  -[SSLookupRequest resultFilters]
  -[SSLookupRequest setResultFilters:]
  -[SSLookupRequest setValue:forRequestParameter:]
  -[SSLookupRequest setPersonalizationStyle:]
  -[SSLookupRequest start]


SSLookupResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  NSDictionary *responseDictionary
 @property  NSDate *expirationDate
 @property  SSMetricsPageEvent *metricsPageEvent
 @property  NSArray *allItems
 @property  SSMetricsConfiguration *metricsConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSLookupResponse responseDictionary]
  -[SSLookupResponse initWithXPCEncoding:]
  -[SSLookupResponse allItems]
  -[SSLookupResponse copyXPCEncoding]
  -[SSLookupResponse _enumerateItemsWithBlock:]
  -[SSLookupResponse valueForProperty:]
  -[SSLookupResponse dealloc]
  -[SSLookupResponse setExpirationDate:]
  -[SSLookupResponse initWithResponseDictionary:]
  -[SSLookupResponse _setMetricsPageEvent:]
  -[SSLookupResponse itemForKey:]
  -[SSLookupResponse metricsPageEvent]
  -[SSLookupResponse initWithLocationResponseDictionary:]
  -[SSLookupResponse metricsConfiguration]
  -[SSLookupResponse expirationDate]
  -[SSLookupResponse appStoreURLWithReason:initialIndex:]


SSLogConfig : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSMutableCopying>
 @property  SSLogFileOptions *backingLogFileOptions
 @property  NSObject<OS_os_log> *backingOSLogObject
 @property  NSObject<OS_dispatch_queue> *propertyAccessQueue
 @property  NSString *category
 @property  unsigned long environment
 @property  NSString *outputDirectory
 @property  NSString *outputFilename
 @property  NSString *subsystem
 @property  BOOL writeToDisk
 @property  BOOL debugLogsEnabled
 @property  SSLogFileOptions *logFileOptions
 @property  NSObject<OS_os_log> *OSLogObject
 @property  BOOL shouldLog
 @property  BOOL shouldLogToDisk

  // class methods
  +[SSLogConfig sharedBagConfig]
  +[SSLogConfig sharedPrivacyConfig]
  +[SSLogConfig sharedConfig]
  +[SSLogConfig _debugLogsEnabled:]
  +[SSLogConfig _logFilenameForSubsystem:category:]
  +[SSLogConfig sharedAccountsMigrationConfig]
  +[SSLogConfig sharedWriteToDiskConfig]
  +[SSLogConfig sharedAccountsMigrationConfigOversize]
  +[SSLogConfig sharedDaemonConfig]
  +[SSLogConfig _createLogConfigWithSubsystem:category:]
  +[SSLogConfig sharedAccountsLogoutConfig]
  +[SSLogConfig sharedDaemonConfigOversize]
  +[SSLogConfig sharedAccountsCookiesConfig]
  +[SSLogConfig sharedFairPlayAnisetteConfig]
  +[SSLogConfig sharedAskPermissionExtensionConfig]
  +[SSLogConfig sharedAccountsConfig]
  +[SSLogConfig _deviceIsRunningSeedBuild]
  +[SSLogConfig sharedAccountsStorefrontConfig]
  +[SSLogConfig sharediTunesStoreConfigOversize]
  +[SSLogConfig sharedStoreServicesConfig]
  +[SSLogConfig _createLogConfigWithBaseConfig:subystem:category:]
  +[SSLogConfig sharedStoreServicesConfigOversize]
  +[SSLogConfig sharedBagCacheConfig]
  +[SSLogConfig _deviceIsRunningInternalOrSeedBuild]
  +[SSLogConfig sharediTunesStoreConfig]
  +[SSLogConfig sharedFollowUpConfig]
  +[SSLogConfig sharedAccountsAuthenticationConfig]
  +[SSLogConfig sharedPushNotificationConfig]
  +[SSLogConfig _deviceIsRunningInternalBuild]
  +[SSLogConfig sharedFeatureEnablerMigrationConfig]
  +[SSLogConfig _logFileDirectoryPathForSubsystem:category:]

  // instance methods
  -[SSLogConfig setBackingOSLogObject:]
  -[SSLogConfig subsystem]
  -[SSLogConfig copyWithZone:]
  -[SSLogConfig setPropertyAccessQueue:]
  -[SSLogConfig logFileOptions]
  -[SSLogConfig category]
  -[SSLogConfig outputDirectory]
  -[SSLogConfig init]
  -[SSLogConfig setEnvironment:]
  -[SSLogConfig OSLogObject]
  -[SSLogConfig .cxx_destruct]
  -[SSLogConfig setBackingLogFileOptions:]
  -[SSLogConfig setOutputDirectory:]
  -[SSLogConfig backingOSLogObject]
  -[SSLogConfig setWriteToDisk:]
  -[SSLogConfig setSubsystem:]
  -[SSLogConfig writeToDisk]
  -[SSLogConfig shouldLog]
  -[SSLogConfig isEqual:]
  -[SSLogConfig propertyAccessQueue]
  -[SSLogConfig debugLogsEnabled]
  -[SSLogConfig shouldLogToDisk]
  -[SSLogConfig setOutputFilename:]
  -[SSLogConfig environment]
  -[SSLogConfig setCategory:]
  -[SSLogConfig mutableCopyWithZone:]
  -[SSLogConfig outputFilename]
  -[SSLogConfig backingLogFileOptions]


SSMutableLogConfig : SSLogConfig <NSCopying>
 @property  NSString *category
 @property  unsigned long environment
 @property  NSString *outputDirectory
 @property  NSString *outputFilename
 @property  NSString *subsystem
 @property  BOOL writeToDisk


SSDownloadPolicyApplicationState : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, SSXPCCoding, NSCopying>
 @property  NSString *applicationIdentifier
 @property  NSSet *applicationStates
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSDownloadPolicyApplicationState supportsSecureCoding]

  // instance methods
  -[SSDownloadPolicyApplicationState copyWithZone:]
  -[SSDownloadPolicyApplicationState applicationIdentifier]
  -[SSDownloadPolicyApplicationState initWithXPCEncoding:]
  -[SSDownloadPolicyApplicationState copyXPCEncoding]
  -[SSDownloadPolicyApplicationState setApplicationIdentifier:]
  -[SSDownloadPolicyApplicationState dealloc]
  -[SSDownloadPolicyApplicationState initWithApplicationIdentifier:]
  -[SSDownloadPolicyApplicationState encodeWithCoder:]
  -[SSDownloadPolicyApplicationState isEqual:]
  -[SSDownloadPolicyApplicationState applicationStates]
  -[SSDownloadPolicyApplicationState addApplicationState:]
  -[SSDownloadPolicyApplicationState setApplicationStates:]
  -[SSDownloadPolicyApplicationState setNotRunningApplicationStates]
  -[SSDownloadPolicyApplicationState initWithCoder:]


SSFamilyCircle : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  NSArray *familyMembers
 @property  NSArray *iTunesAccountNames
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSFamilyCircle initWithXPCEncoding:]
  -[SSFamilyCircle copyXPCEncoding]
  -[SSFamilyCircle .cxx_destruct]
  -[SSFamilyCircle setFamilyMembers:]
  -[SSFamilyCircle initWithCacheRepresentation:]
  -[SSFamilyCircle newCacheRepresentation]
  -[SSFamilyCircle allITunesIdentifiers]
  -[SSFamilyCircle allITunesAccountNames]
  -[SSFamilyCircle iTunesAccountNames]
  -[SSFamilyCircle setITunesAccountNames:]
  -[SSFamilyCircle familyMembers]


SSFamilyMember : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  NSNumber *iTunesIdentifier
 @property  NSNumber *iCloudIdentifier
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *iCloudAccountName
 @property  BOOL me
 @property  BOOL sharingPurchases
 @property  BOOL askToBuy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSFamilyMember lastName]
  -[SSFamilyMember isMe]
  -[SSFamilyMember setLastName:]
  -[SSFamilyMember initWithXPCEncoding:]
  -[SSFamilyMember copyXPCEncoding]
  -[SSFamilyMember iTunesIdentifier]
  -[SSFamilyMember setITunesIdentifier:]
  -[SSFamilyMember setFirstName:]
  -[SSFamilyMember firstName]
  -[SSFamilyMember .cxx_destruct]
  -[SSFamilyMember isSharingPurchases]
  -[SSFamilyMember askToBuy]
  -[SSFamilyMember initWithCacheRepresentation:]
  -[SSFamilyMember newCacheRepresentation]
  -[SSFamilyMember iCloudIdentifier]
  -[SSFamilyMember iCloudAccountName]
  -[SSFamilyMember setICloudAccountName:]
  -[SSFamilyMember setICloudIdentifier:]
  -[SSFamilyMember setSharingPurchases:]
  -[SSFamilyMember setMe:]


SSDownloadPolicyRule : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, SSXPCCoding, NSCopying>
 @property  long long downloadSizeLimit
 @property  NSSet *applicationStates
 @property  NSSet *networkTypes
 @property  NSSet *userDefaultStates
 @property  BOOL cellularAllowed
 @property  BOOL wiFiAllowed
 @property  float batteryLevel
 @property  long long cellularDataStates
 @property  long long powerStates
 @property  long long registrationStates
 @property  long long timeLimitStates
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSDownloadPolicyRule supportsSecureCoding]

  // instance methods
  -[SSDownloadPolicyRule copyWithZone:]
  -[SSDownloadPolicyRule initWithXPCEncoding:]
  -[SSDownloadPolicyRule init]
  -[SSDownloadPolicyRule copyXPCEncoding]
  -[SSDownloadPolicyRule dealloc]
  -[SSDownloadPolicyRule batteryLevel]
  -[SSDownloadPolicyRule encodeWithCoder:]
  -[SSDownloadPolicyRule networkTypes]
  -[SSDownloadPolicyRule setBatteryLevel:]
  -[SSDownloadPolicyRule downloadSizeLimit]
  -[SSDownloadPolicyRule addUserDefaultState:]
  -[SSDownloadPolicyRule setDownloadSizeLimit:]
  -[SSDownloadPolicyRule setNetworkTypes:]
  -[SSDownloadPolicyRule setCellularDataStates:]
  -[SSDownloadPolicyRule isEqual:]
  -[SSDownloadPolicyRule applicationStates]
  -[SSDownloadPolicyRule addApplicationState:]
  -[SSDownloadPolicyRule setApplicationStates:]
  -[SSDownloadPolicyRule cellularDataStates]
  -[SSDownloadPolicyRule powerStates]
  -[SSDownloadPolicyRule registrationStates]
  -[SSDownloadPolicyRule timeLimitStates]
  -[SSDownloadPolicyRule userDefaultStates]
  -[SSDownloadPolicyRule addNetworkType:]
  -[SSDownloadPolicyRule isCellularAllowed]
  -[SSDownloadPolicyRule isWiFiAllowed]
  -[SSDownloadPolicyRule unionPolicyRule:]
  -[SSDownloadPolicyRule setPowerStates:]
  -[SSDownloadPolicyRule setRegistrationStates:]
  -[SSDownloadPolicyRule setTimeLimitStates:]
  -[SSDownloadPolicyRule setUserDefaultStates:]
  -[SSDownloadPolicyRule initWithCoder:]


SSDownloadPolicy : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, SSXPCCoding, NSCopying>
 @property  NSString *downloadKind
 @property  long long URLBagType
 @property  NSArray *policyRules
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSDownloadPolicy supportsSecureCoding]

  // instance methods
  -[SSDownloadPolicy copyWithZone:]
  -[SSDownloadPolicy initWithXPCEncoding:]
  -[SSDownloadPolicy copyXPCEncoding]
  -[SSDownloadPolicy dealloc]
  -[SSDownloadPolicy URLBagType]
  -[SSDownloadPolicy encodeWithCoder:]
  -[SSDownloadPolicy initWithNetworkConstraints:]
  -[SSDownloadPolicy policyRules]
  -[SSDownloadPolicy setPolicyRules:]
  -[SSDownloadPolicy initWithDownloadKind:URLBagType:]
  -[SSDownloadPolicy downloadKind]
  -[SSDownloadPolicy isEqual:]
  -[SSDownloadPolicy unionPolicyRule:]
  -[SSDownloadPolicy setPolicyRule:]
  -[SSDownloadPolicy unionNetworkConstraints:]
  -[SSDownloadPolicy _policyRuleForSizeLimit:]
  -[SSDownloadPolicy initWithCoder:]


SSPaymentSheet : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *accountHeader
 @property  NSString *accountName
 @property  NSString *buyParams
 @property  long long confirmationTitleType
 @property  NSString *countryCode
 @property  NSString *currencyCode
 @property  NSString *dialogId
 @property  NSString *displayPrice
 @property  NSAttributedString *displayPriceLabel
 @property  NSString *explanation
 @property  NSArray *flexList
 @property  NSArray *inlineImages
 @property  BOOL applePayClassic
 @property  NSDictionary *merchantSession
 @property  NSString *message
 @property  long long payeeType
 @property  NSString *paymentSummary
 @property  NSNumber *price
 @property  NSArray *priceSectionItems
 @property  NSString *ratingHeader
 @property  NSString *ratingValue
 @property  long long salableIconType
 @property  NSURL *salableIconURL
 @property  NSString *salableIconURLString
 @property  NSArray *salableInfo
 @property  NSAttributedString *salableInfoLabel
 @property  BOOL shouldShowCardPicker
 @property  BOOL shouldSuppressPrice
 @property  BOOL shouldUppercaseText
 @property  NSString *storeName
 @property  NSString *title
 @property  long long titleType

  // class methods
  +[SSPaymentSheet stringWithFormattedUsernameForString:username:]

  // instance methods
  -[SSPaymentSheet explanation]
  -[SSPaymentSheet currencyCode]
  -[SSPaymentSheet copyWithZone:]
  -[SSPaymentSheet accountName]
  -[SSPaymentSheet price]
  -[SSPaymentSheet _unlock]
  -[SSPaymentSheet message]
  -[SSPaymentSheet initWithXPCEncoding:]
  -[SSPaymentSheet _replaceMarkupForMutableAttributedString:markupType:]
  -[SSPaymentSheet _replaceBreakingSpaceMarkupForMutableAttributedString:]
  -[SSPaymentSheet init]
  -[SSPaymentSheet copyXPCEncoding]
  -[SSPaymentSheet setStoreName:]
  -[SSPaymentSheet setApplePayClassic:]
  -[SSPaymentSheet setDialogId:]
  -[SSPaymentSheet setMessage:]
  -[SSPaymentSheet .cxx_destruct]
  -[SSPaymentSheet setTitle:]
  -[SSPaymentSheet titleType]
  -[SSPaymentSheet displayPrice]
  -[SSPaymentSheet ratingHeader]
  -[SSPaymentSheet countryCode]
  -[SSPaymentSheet setShouldUppercaseText:]
  -[SSPaymentSheet setAccountHeader:]
  -[SSPaymentSheet accountHeader]
  -[SSPaymentSheet setDisplayPrice:]
  -[SSPaymentSheet shouldUppercaseText]
  -[SSPaymentSheet setPriceSectionItems:]
  -[SSPaymentSheet setRatingHeader:]
  -[SSPaymentSheet setRatingValue:]
  -[SSPaymentSheet flexList]
  -[SSPaymentSheet setPaymentSummary:]
  -[SSPaymentSheet paymentSummary]
  -[SSPaymentSheet setSalableInfo:]
  -[SSPaymentSheet _init]
  -[SSPaymentSheet _greyAttributedStringForAttributedString:range:]
  -[SSPaymentSheet setPrice:]
  -[SSPaymentSheet title]
  -[SSPaymentSheet buyParams]
  -[SSPaymentSheet initWithServerResponse:]
  -[SSPaymentSheet setCurrencyCode:]
  -[SSPaymentSheet dialogId]
  -[SSPaymentSheet inlineImages]
  -[SSPaymentSheet priceSectionItems]
  -[SSPaymentSheet salableInfoLabel]
  -[SSPaymentSheet salableIconURL]
  -[SSPaymentSheet merchantSession]
  -[SSPaymentSheet isApplePayClassic]
  -[SSPaymentSheet setCountryCode:]
  -[SSPaymentSheet _parseResponse:]
  -[SSPaymentSheet _inferSalableIconTypeWithBuyParams:]
  -[SSPaymentSheet setSalableIconType:]
  -[SSPaymentSheet _salableInfoItemsToUppercase]
  -[SSPaymentSheet _displayPriceLabelForDisplayPrice:]
  -[SSPaymentSheet _attributedStringForSalableInfoStringArray:]
  -[SSPaymentSheet _attributedStringForString:]
  -[SSPaymentSheet _salableIconTypeForString:]
  -[SSPaymentSheet _payeeTypeForRequestorValue:]
  -[SSPaymentSheet _payeeTypeInferredFromEnumeratedTitle]
  -[SSPaymentSheet _confirmationTitleTypeForStringValue:]
  -[SSPaymentSheet _attributedStringForStringArray:useGrey:]
  -[SSPaymentSheet _stringValuesToUppercase]
  -[SSPaymentSheet payeeType]
  -[SSPaymentSheet defaultAuthKitAuthenticationContext]
  -[SSPaymentSheet initWithServerResponse:buyParams:]
  -[SSPaymentSheet displayPriceLabel]
  -[SSPaymentSheet salableIconURLString]
  -[SSPaymentSheet setSalableIconURLString:]
  -[SSPaymentSheet shouldShowCardPicker]
  -[SSPaymentSheet setShouldShowCardPicker:]
  -[SSPaymentSheet confirmationTitleType]
  -[SSPaymentSheet setConfirmationTitleType:]
  -[SSPaymentSheet setPayeeType:]
  -[SSPaymentSheet salableIconType]
  -[SSPaymentSheet shouldSuppressPrice]
  -[SSPaymentSheet setShouldSuppressPrice:]
  -[SSPaymentSheet setAccountName:]
  -[SSPaymentSheet setTitleType:]
  -[SSPaymentSheet ratingValue]
  -[SSPaymentSheet salableInfo]
  -[SSPaymentSheet setMerchantSession:]
  -[SSPaymentSheet storeName]
  -[SSPaymentSheet setExplanation:]
  -[SSPaymentSheet _lock]


SSKeybagRequest : SSRequest <SSXPCCoding>
 @property  NSNumber *accountID
 @property  id contentIdentifier
 @property  long long keybagOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSKeybagRequest setContentIdentifier:]
  -[SSKeybagRequest contentIdentifier]
  -[SSKeybagRequest initWithXPCEncoding:]
  -[SSKeybagRequest copyXPCEncoding]
  -[SSKeybagRequest accountIdentifier]
  -[SSKeybagRequest dealloc]
  -[SSKeybagRequest startWithCompletionBlock:]
  -[SSKeybagRequest keybagOptions]
  -[SSKeybagRequest setKeybagOptions:]
  -[SSKeybagRequest accountID]
  -[SSKeybagRequest initWithAccountIdentifier:]


SSSoftwareLibraryItem : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  BOOL beta
 @property  BOOL launchProhibited
 @property  BOOL placeholder
 @property  BOOL profileValidated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSSoftwareLibraryItem isBeta]
  -[SSSoftwareLibraryItem isProfileValidated]
  -[SSSoftwareLibraryItem initWithXPCEncoding:]
  -[SSSoftwareLibraryItem copyXPCEncoding]
  -[SSSoftwareLibraryItem valueForProperty:]
  -[SSSoftwareLibraryItem dealloc]
  -[SSSoftwareLibraryItem _setValue:forProperty:]
  -[SSSoftwareLibraryItem isPlaceholder]
  -[SSSoftwareLibraryItem setPlaceholder:]
  -[SSSoftwareLibraryItem setLaunchProhibited:]
  -[SSSoftwareLibraryItem setBeta:]
  -[SSSoftwareLibraryItem isLaunchProhibited]
  -[SSSoftwareLibraryItem ETagForAssetType:]
  -[SSSoftwareLibraryItem setETag:forAssetType:error:]
  -[SSSoftwareLibraryItem _initWithITunesMetadata:]
  -[SSSoftwareLibraryItem setProfileValidated:]


SSSoftwareLibrary : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSSoftwareLibrary init]
  -[SSSoftwareLibrary .cxx_destruct]
  -[SSSoftwareLibrary getLibraryItemForBundleIdentifiers:completionBlock:]
  -[SSSoftwareLibrary _sendDemotionMessage:completionBlock:]
  -[SSSoftwareLibrary _getItemsWithMessage:completionBlock:]
  -[SSSoftwareLibrary hasDemotedApplicationsWithCompletionBlock:]
  -[SSSoftwareLibrary demoteApplicationWithBundleIdentifier:completionBlock:]
  -[SSSoftwareLibrary getLibraryItemsForITunesStoreItemIdentifiers:completionBlock:]
  -[SSSoftwareLibrary getRemovableSytemApplicationsWithCompletionBlock:]
  -[SSSoftwareLibrary isInstalledApplicationWithBundleIdentifier:completionBlock:]
  -[SSSoftwareLibrary isRemovedSystemApplicationWithBundleIdentifier:completionBlock:]
  -[SSSoftwareLibrary refreshReceiptsWithCompletionBlock:]
  -[SSSoftwareLibrary playableApplicationsWithBundleIdentifiers:completionBlock:]
  -[SSSoftwareLibrary restoreAllDemotedApplicationsWithOptions:completionBlock:]
  -[SSSoftwareLibrary restoreDemotedApplicationWithBundleIdentifier:options:completionBlock:]
  -[SSSoftwareLibrary restoreRemovedSystemApplicationWithBundleIdentifier:completionBlock:]


SSRedeemCodesRequest : SSRequest <SSXPCCoding>
 @property  NSArray *redeemCodes
 @property  SSAuthenticationContext *authenticationContext
 @property  BOOL headless
 @property  BOOL cameraRecognized
 @property  NSString *logCorrelationKey
 @property  NSDictionary *params
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSRedeemCodesRequest params]
  -[SSRedeemCodesRequest initWithXPCEncoding:]
  -[SSRedeemCodesRequest copyXPCEncoding]
  -[SSRedeemCodesRequest authenticationContext]
  -[SSRedeemCodesRequest dealloc]
  -[SSRedeemCodesRequest setParams:]
  -[SSRedeemCodesRequest startWithCompletionBlock:]
  -[SSRedeemCodesRequest headless]
  -[SSRedeemCodesRequest setAuthenticationContext:]
  -[SSRedeemCodesRequest redeemCodes]
  -[SSRedeemCodesRequest logCorrelationKey]
  -[SSRedeemCodesRequest startWithRedeemResponseBlock:]
  -[SSRedeemCodesRequest initWithRedeemCodes:]
  -[SSRedeemCodesRequest setHeadless:]
  -[SSRedeemCodesRequest setLogCorrelationKey:]
  -[SSRedeemCodesRequest cameraRecognized]
  -[SSRedeemCodesRequest setCameraRecognized:]


SSVMediaSocialShareExtension : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *extensionIdentifier

  // instance methods
  -[SSVMediaSocialShareExtension init]
  -[SSVMediaSocialShareExtension .cxx_destruct]
  -[SSVMediaSocialShareExtension extensionIdentifier]
  -[SSVMediaSocialShareExtension getVisibilityWithCompletionBlock:]


SSVPlaybackLeaseCallback : NSObject /usr/lib/libc++.1.dylib
 @property  @? block
 @property  SSVPlaybackLeaseResponse *response
 @property  NSError *error

  // instance methods
  -[SSVPlaybackLeaseCallback setError:]
  -[SSVPlaybackLeaseCallback .cxx_destruct]
  -[SSVPlaybackLeaseCallback block]
  -[SSVPlaybackLeaseCallback setBlock:]
  -[SSVPlaybackLeaseCallback error]
  -[SSVPlaybackLeaseCallback setResponse:]
  -[SSVPlaybackLeaseCallback response]


SSVPlaybackLease : NSObject /usr/lib/libc++.1.dylib
 @property  <SSVPlaybackLeaseDelegate> *delegate
 @property  BOOL refreshesAutomatically
 @property  NSData *certificateData
 @property  NSString *certificateURLBagKey

  // instance methods
  -[SSVPlaybackLease initWithURLBag:]
  -[SSVPlaybackLease init]
  -[SSVPlaybackLease certificateURLBagKey]
  -[SSVPlaybackLease setCertificateURLBagKey:]
  -[SSVPlaybackLease setCertificateData:]
  -[SSVPlaybackLease dealloc]
  -[SSVPlaybackLease .cxx_destruct]
  -[SSVPlaybackLease certificateData]
  -[SSVPlaybackLease endLease]
  -[SSVPlaybackLease refreshLeaseWithRequest:completionBlock:]
  -[SSVPlaybackLease _initSSVPlaybackLease]
  -[SSVPlaybackLease setDelegate:]
  -[SSVPlaybackLease initWithURLBag:leaseType:]
  -[SSVPlaybackLease _addOperationWithRequest:configurationURL:completionBlock:]
  -[SSVPlaybackLease getCertificateDataWithCompletionBlock:]
  -[SSVPlaybackLease _cancelRefreshTimer]
  -[SSVPlaybackLease _startRefreshTimerIfNecessary]
  -[SSVPlaybackLease _updateWithLeaseResponseError:]
  -[SSVPlaybackLease _updateForLeaseResponse:error:]
  -[SSVPlaybackLease _fireRefreshTimer]
  -[SSVPlaybackLease _shouldEndLeaseForError:returningEndReasonType:]
  -[SSVPlaybackLease _sendLeaseDidEndWithEndReasonType:]
  -[SSVPlaybackLease initWithLeaseConfiguration:]
  -[SSVPlaybackLease beginLeaseWithRequest:completionBlock:]
  -[SSVPlaybackLease cancelAllAssetRequests]
  -[SSVPlaybackLease getAssetWithRequest:completionBlock:]
  -[SSVPlaybackLease preheatLeaseRequestsWithCompletionBlock:]
  -[SSVPlaybackLease refreshesAutomatically]
  -[SSVPlaybackLease setRefreshesAutomatically:]
  -[SSVPlaybackLease updateWithExternalLeaseResponseError:]
  -[SSVPlaybackLease delegate]
  -[SSVPlaybackLease _endLease]


asn1Token : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned char tokenClass
 @property  unsigned long identifier
 @property  unsigned long length
 @property  r* content

  // class methods
  +[asn1Token readTokenFromBuffer:opaque:]
  +[asn1Token readTokenFromBuffer:]
  +[asn1Token readOpaqueTokenFromBuffer:]

  // instance methods
  -[asn1Token length]
  -[asn1Token content]
  -[asn1Token identifier]
  -[asn1Token tokenClass]
  -[asn1Token _initWithID:class:length:content:opaque:]


asn1SetToken : asn1Token
  // instance methods
  -[asn1SetToken reset]
  -[asn1SetToken _initWithID:class:length:content:opaque:]
  -[asn1SetToken nextToken]


asn1SequenceToken : asn1Token
  // instance methods
  -[asn1SequenceToken reset]
  -[asn1SequenceToken _initWithID:class:length:content:opaque:]
  -[asn1SequenceToken nextToken]


asn1IntegerToken : asn1Token
 @property  unsigned long value

  // instance methods
  -[asn1IntegerToken value]
  -[asn1IntegerToken _initWithID:class:length:content:opaque:]


asn1OSToken : asn1Token
 @property  asn1Token *value

  // instance methods
  -[asn1OSToken dealloc]
  -[asn1OSToken value]
  -[asn1OSToken _initWithID:class:length:content:opaque:]
  -[asn1OSToken stringValue]


SSRedeemCodesResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  NSArray *codeResponses
 @property  NSArray *failedCodes
 @property  NSArray *redeemedCodes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSRedeemCodesResponse initWithXPCEncoding:]
  -[SSRedeemCodesResponse copyXPCEncoding]
  -[SSRedeemCodesResponse dealloc]
  -[SSRedeemCodesResponse errorForCode:]
  -[SSRedeemCodesResponse codeResponses]
  -[SSRedeemCodesResponse dictionaryForCode:]
  -[SSRedeemCodesResponse failedCodes]
  -[SSRedeemCodesResponse redeemedCodes]
  -[SSRedeemCodesResponse responseDictionaryForCode:]
  -[SSRedeemCodesResponse setCodeResponses:]
  -[SSRedeemCodesResponse setFailedCodes:]
  -[SSRedeemCodesResponse setRedeemedCodes:]


SSKeyValueStore : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL localReadable
 @property  BOOL localWritable

  // class methods
  +[SSKeyValueStore isLocalReadable]

  // instance methods
  -[SSKeyValueStore accountDictionaries]
  -[SSKeyValueStore setValuesWithDictionary:forDomain:]
  -[SSKeyValueStore isLocalReadable]
  -[SSKeyValueStore removeAllValuesForDomain:]
  -[SSKeyValueStore init]
  -[SSKeyValueStore setValue:forDomain:key:]
  -[SSKeyValueStore modifyUsingTransactionBlock:]
  -[SSKeyValueStore removeAllValuesForDomain:completionBlock:]
  -[SSKeyValueStore dealloc]
  -[SSKeyValueStore removeAllValuesWithCompletionBlock:]
  -[SSKeyValueStore copyAccounts]
  -[SSKeyValueStore _loadDatabaseIfNecessary]
  -[SSKeyValueStore readUsingSessionBlock:]
  -[SSKeyValueStore getValueForDomain:key:usingBlock:]
  -[SSKeyValueStore iTunesValueForKey:usedDomain:]
  -[SSKeyValueStore isLocalWritable]
  -[SSKeyValueStore setValue:forDomain:key:completionBlock:]
  -[SSKeyValueStore removeAccountFromDomain:]
  -[SSKeyValueStore removeAccountDictionaries]
  -[SSKeyValueStore getValuesForDomain:keys:count:usingBlock:]
  -[SSKeyValueStore setValuesWithDictionary:forDomain:completionBlock:]


SSLRUCache : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  NSMutableDictionary *backingDictionary
 @property  SSDoubleLinkedList *backingList
 @property  SSLogConfig *logConfig
 @property  unsigned long count
 @property  unsigned long maxSize

  // instance methods
  -[SSLRUCache accessQueue]
  -[SSLRUCache setAccessQueue:]
  -[SSLRUCache _count]
  -[SSLRUCache init]
  -[SSLRUCache maxSize]
  -[SSLRUCache logConfig]
  -[SSLRUCache _addObject:forKey:]
  -[SSLRUCache .cxx_destruct]
  -[SSLRUCache removeAllObjects]
  -[SSLRUCache setLogConfig:]
  -[SSLRUCache backingList]
  -[SSLRUCache setObject:forKey:]
  -[SSLRUCache objectForKey:]
  -[SSLRUCache _removeObjectForKey:]
  -[SSLRUCache setBackingList:]
  -[SSLRUCache allObjectsAndKeys]
  -[SSLRUCache setBackingDictionary:]
  -[SSLRUCache count]
  -[SSLRUCache backingDictionary]
  -[SSLRUCache initWithMaxSize:]


SSLRUCacheItem : SSDoubleLinkedListNode
 @property  <NSCopying> *key

  // instance methods
  -[SSLRUCacheItem .cxx_destruct]
  -[SSLRUCacheItem setKey:]
  -[SSLRUCacheItem key]
  -[SSLRUCacheItem initWithKey:object:]


SSVPlayActivityDebugLogOperation : NSOperation /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSArray *playActivityEvents

  // instance methods
  -[SSVPlayActivityDebugLogOperation main]
  -[SSVPlayActivityDebugLogOperation .cxx_destruct]
  -[SSVPlayActivityDebugLogOperation playActivityEvents]
  -[SSVPlayActivityDebugLogOperation setPlayActivityEvents:]


SSCircularBuffer : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  unsigned long currentIndex
 @property  NSMutableArray *buffer
 @property  unsigned long count
 @property  unsigned long maxSize

  // class methods
  +[SSCircularBuffer _rearrangeObjects:forCurrentIndex:]

  // instance methods
  -[SSCircularBuffer _flush]
  -[SSCircularBuffer accessQueue]
  -[SSCircularBuffer setCurrentIndex:]
  -[SSCircularBuffer currentIndex]
  -[SSCircularBuffer setAccessQueue:]
  -[SSCircularBuffer setBuffer:]
  -[SSCircularBuffer init]
  -[SSCircularBuffer buffer]
  -[SSCircularBuffer maxSize]
  -[SSCircularBuffer flush]
  -[SSCircularBuffer .cxx_destruct]
  -[SSCircularBuffer setMaxSize:]
  -[SSCircularBuffer allObjects]
  -[SSCircularBuffer count]
  -[SSCircularBuffer addObject:]
  -[SSCircularBuffer initWithMaxSize:]


SSErrorHandler : NSObject /usr/lib/libc++.1.dylib
 @property  <SSErrorHandlerDelegate> *delegate
 @property  NSArray *failureTypes

  // instance methods
  -[SSErrorHandler _handleMessage:fromServerConnection:]
  -[SSErrorHandler init]
  -[SSErrorHandler dealloc]
  -[SSErrorHandler startWithCompletionBlock:]
  -[SSErrorHandler _sendDisconnectMessage]
  -[SSErrorHandler setDelegate:]
  -[SSErrorHandler _tearDownConnections]
  -[SSErrorHandler _reconnectToDaemonWithCompletionBlock:]
  -[SSErrorHandler _openSessionWithMessage:]
  -[SSErrorHandler _dispatchToDelegate:]
  -[SSErrorHandler failureTypes]
  -[SSErrorHandler setFailureTypes:]
  -[SSErrorHandler stopWithCompletionBlock:]
  -[SSErrorHandler delegate]


SSVKeybagSyncRequest : SSRequest <SSXPCCoding>
 @property  NSNumber *accountIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVKeybagSyncRequest initWithXPCEncoding:]
  -[SSVKeybagSyncRequest copyXPCEncoding]
  -[SSVKeybagSyncRequest accountIdentifier]
  -[SSVKeybagSyncRequest .cxx_destruct]
  -[SSVKeybagSyncRequest startWithCompletionBlock:]
  -[SSVKeybagSyncRequest initWithAccountIdentifier:]


ISPurchaseReceipt : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *expirationDate
 @property  BOOL isVPPLicensed
 @property  BOOL isRevoked

  // class methods
  +[ISPurchaseReceipt receiptWithContentsOfFile:]

  // instance methods
  -[ISPurchaseReceipt initWithContentsOfFile:]
  -[ISPurchaseReceipt .cxx_destruct]
  -[ISPurchaseReceipt isRevoked]
  -[ISPurchaseReceipt isVPPLicensed]
  -[ISPurchaseReceipt expirationDate]
  -[ISPurchaseReceipt _decodeReceiptData:toDecodedMessage:]
  -[ISPurchaseReceipt _parseReceiptFromMessage:]
  -[ISPurchaseReceipt _extractSignedDataFromMessage:]
  -[ISPurchaseReceipt _parseTokens:]
  -[ISPurchaseReceipt _verifySignatureForSignedData:onDate:]
  -[ISPurchaseReceipt _checkIfCertificate:containsOID:]
  -[ISPurchaseReceipt _copyCertificatesFromSignedData:]
  -[ISPurchaseReceipt _checkArray:containsCertificateWithOID:]
  -[ISPurchaseReceipt _setPoliciesForTrust:]
  -[ISPurchaseReceipt _anchorTrust:toRootCertificateIn:]


SSFeatureEnablerMigrator : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSFeatureEnablerMigrator migrate]


SSHTTPArchive : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *backingJSONData
 @property  BOOL compressed
 @property  NSData *JSONData
 @property  NSDictionary *JSONObject
 @property  NSString *JSONString

  // class methods
  +[SSHTTPArchive _JSONObjectForEntries:]
  +[SSHTTPArchive _generateCommentsForTaskMetrics:]
  +[SSHTTPArchive removeLogsWithLogConfig:olderThanDate:]
  +[SSHTTPArchive sendWriteAllLogsToDiskDecompressedNotification]
  +[SSHTTPArchive _headersArrayForHTTPHeaders:]
  +[SSHTTPArchive outputDirectoryForLogConfig:]
  +[SSHTTPArchive _creatorDictionary]
  +[SSHTTPArchive _localIPAddress]
  +[SSHTTPArchive _entriesArrayForTaskMetrics:requestData:responseData:]
  +[SSHTTPArchive _entryDictionaryForTaskMetrics:requestData:responseData:]
  +[SSHTTPArchive _responseDictionaryForTaskMetrics:responseData:]
  +[SSHTTPArchive _requestDictionaryForTaskTransactionMetrics:requestData:]
  +[SSHTTPArchive _dateFormatterForTimeZone:]
  +[SSHTTPArchive merge:withEstimatedFileSizeLimit:]
  +[SSHTTPArchive _timeIntervalFromFilename:]
  +[SSHTTPArchive merge:]
  +[SSHTTPArchive _stringFromDate:]
  +[SSHTTPArchive _JSONObjectForTaskMetrics:requestData:responseData:]
  +[SSHTTPArchive sendWriteAllLogsToDiskNotification]
  +[SSHTTPArchive _contentDictionaryForResponse:responseData:]

  // instance methods
  -[SSHTTPArchive compressed]
  -[SSHTTPArchive writeToDiskWithLogConfig:compressed:error:]
  -[SSHTTPArchive backingJSONData]
  -[SSHTTPArchive .cxx_destruct]
  -[SSHTTPArchive initWithTaskMetrics:requestData:responseData:]
  -[SSHTTPArchive JSONString]
  -[SSHTTPArchive JSONObject]
  -[SSHTTPArchive setCompressed:]
  -[SSHTTPArchive initWithJSONObject:]
  -[SSHTTPArchive writeToDiskError:]
  -[SSHTTPArchive JSONData]
  -[SSHTTPArchive setBackingJSONData:]


SSErrorHandlerSession : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSErrorHandlerSession retry]
  -[SSErrorHandlerSession init]
  -[SSErrorHandlerSession valueForProperty:]
  -[SSErrorHandlerSession dealloc]
  -[SSErrorHandlerSession _setControlConnection:]
  -[SSErrorHandlerSession _setSessionID:]
  -[SSErrorHandlerSession _setErrorProperties:]
  -[SSErrorHandlerSession performDefaultHandling]
  -[SSErrorHandlerSession redirectToURL:]


SSVLeaseRequestOperation : SSVOperation
 @property  NSString *certificateURLBagKey
 @property  SSVPlaybackLeaseRequest *leaseRequest
 @property  @? outputBlock

  // instance methods
  -[SSVLeaseRequestOperation main]
  -[SSVLeaseRequestOperation certificateURLBagKey]
  -[SSVLeaseRequestOperation setCertificateURLBagKey:]
  -[SSVLeaseRequestOperation .cxx_destruct]
  -[SSVLeaseRequestOperation cancel]
  -[SSVLeaseRequestOperation setOutputBlock:]
  -[SSVLeaseRequestOperation initWithLeaseRequest:configuration:]
  -[SSVLeaseRequestOperation initWithLeaseRequest:URLBag:]
  -[SSVLeaseRequestOperation outputBlock]
  -[SSVLeaseRequestOperation _resolveConfigurationAndURLReturningError:]
  -[SSVLeaseRequestOperation _loadCertificateDataIfNecessary:]
  -[SSVLeaseRequestOperation _shouldRetryForError:]
  -[SSVLeaseRequestOperation leaseRequest]


SSKeyValueStoreDatabase : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSKeyValueStoreDatabase init]
  -[SSKeyValueStoreDatabase modifyUsingTransactionBlock:]
  -[SSKeyValueStoreDatabase dealloc]
  -[SSKeyValueStoreDatabase readUsingSessionBlock:]
  -[SSKeyValueStoreDatabase modifyAsyncUsingTransactionBlock:]
  -[SSKeyValueStoreDatabase initReadOnly]
  -[SSKeyValueStoreDatabase _initReadOnly:]
  -[SSKeyValueStoreDatabase _dispatchBlockAsync:]
  -[SSKeyValueStoreDatabase readAsyncUsingSessionBlock:]


SSKeyValueStoreSchema : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSKeyValueStoreSchema databasePath]
  +[SSKeyValueStoreSchema createSchemaInDatabase:]


SSKeyValueStoreSession : NSObject /usr/lib/libc++.1.dylib
 @property  SSSQLiteDatabase *database

  // instance methods
  -[SSKeyValueStoreSession dealloc]
  -[SSKeyValueStoreSession database]
  -[SSKeyValueStoreSession iTunesValueForKey:usedDomain:]
  -[SSKeyValueStoreSession initWithDatabase:]
  -[SSKeyValueStoreSession copyValueForDomain:key:]
  -[SSKeyValueStoreSession copyAccountDictionaryForDomain:]
  -[SSKeyValueStoreSession copyDataForDomain:key:]
  -[SSKeyValueStoreSession existingEntityForDomain:key:]


SSUpdatableAsset : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *cacheURL
 @property  NSString *md5
 @property  NSString *name
 @property  NSURL *serverURL
 @property  NSString *version

  // instance methods
  -[SSUpdatableAsset md5]
  -[SSUpdatableAsset _setName:]
  -[SSUpdatableAsset _setVersion:]
  -[SSUpdatableAsset .cxx_destruct]
  -[SSUpdatableAsset name]
  -[SSUpdatableAsset _setCacheURL:]
  -[SSUpdatableAsset _setServerURL:]
  -[SSUpdatableAsset serverURL]
  -[SSUpdatableAsset cacheURL]
  -[SSUpdatableAsset _setMD5:]
  -[SSUpdatableAsset version]


SSMetricsTimingDefaults : NSObject /usr/lib/libc++.1.dylib
 @property  SSCoalescingQueue *updateQueue
 @property  NSDictionary *cachedValues
 @property  BOOL runningTests
 @property  NSDictionary *values
 @property  double sessionDurationLoadURL
 @property  double samplingPercentageUsersLoadURL
 @property  double samplingPercentageCachedResponsesLoadURL
 @property  double sessionDurationPageRender
 @property  double samplingPercentageUsersPageRender

  // class methods
  +[SSMetricsTimingDefaults sharedInstance]
  +[SSMetricsTimingDefaults sharedInstanceWithSessionDelegate:]

  // instance methods
  -[SSMetricsTimingDefaults update]
  -[SSMetricsTimingDefaults initWithSessionDelegate:]
  -[SSMetricsTimingDefaults setRunningTests:]
  -[SSMetricsTimingDefaults setCachedValues:]
  -[SSMetricsTimingDefaults values]
  -[SSMetricsTimingDefaults updateQueue]
  -[SSMetricsTimingDefaults .cxx_destruct]
  -[SSMetricsTimingDefaults samplingPercentageCachedResponsesLoadURL]
  -[SSMetricsTimingDefaults samplingPercentageUsersPageRender]
  -[SSMetricsTimingDefaults cachedValues]
  -[SSMetricsTimingDefaults isRunningTests]
  -[SSMetricsTimingDefaults setUpdateQueue:]
  -[SSMetricsTimingDefaults sessionDurationPageRender]
  -[SSMetricsTimingDefaults samplingPercentageUsersLoadURL]
  -[SSMetricsTimingDefaults sessionDurationLoadURL]


SSVMediaSocialPostExternalDestination : NSObject /usr/lib/libc++.1.dylib <NSCopying, SSXPCCoding>
 @property  NSString *pageAccessToken
 @property  NSString *pageIdentifier
 @property  NSString *accessToken
 @property  NSString *serviceIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVMediaSocialPostExternalDestination copyWithZone:]
  -[SSVMediaSocialPostExternalDestination initWithXPCEncoding:]
  -[SSVMediaSocialPostExternalDestination serviceIdentifier]
  -[SSVMediaSocialPostExternalDestination setAccessToken:]
  -[SSVMediaSocialPostExternalDestination copyXPCEncoding]
  -[SSVMediaSocialPostExternalDestination setServiceIdentifier:]
  -[SSVMediaSocialPostExternalDestination .cxx_destruct]
  -[SSVMediaSocialPostExternalDestination accessToken]
  -[SSVMediaSocialPostExternalDestination setPageAccessToken:]
  -[SSVMediaSocialPostExternalDestination setPageIdentifier:]
  -[SSVMediaSocialPostExternalDestination pageAccessToken]
  -[SSVMediaSocialPostExternalDestination pageIdentifier]


SSKeyValueStoreTransaction : SSKeyValueStoreSession
  // instance methods
  -[SSKeyValueStoreTransaction setValue:forDomain:key:]
  -[SSKeyValueStoreTransaction removeAccountFromDomain:]
  -[SSKeyValueStoreTransaction setData:forDomain:key:]


SSBookDownload : SSDownload
 @property  NSString *downloadPhaseIdentifierOverride
 @property  <SSBookDownloadStatus> *downloadStatus
 @property  NSString *downloadID

  // instance methods
  -[SSBookDownload restart]
  -[SSBookDownload isCancelable]
  -[SSBookDownload setMetadata:]
  -[SSBookDownload bytesTotal]
  -[SSBookDownload pause]
  -[SSBookDownload resume]
  -[SSBookDownload setDownloadHandler:completionBlock:]
  -[SSBookDownload assetsForType:]
  -[SSBookDownload valueForProperty:]
  -[SSBookDownload downloadPhaseIdentifier]
  -[SSBookDownload .cxx_destruct]
  -[SSBookDownload addAsset:forType:]
  -[SSBookDownload downloadID]
  -[SSBookDownload initWithDownloadStatus:]
  -[SSBookDownload setDownloadPhaseIdentifierOverride:]
  -[SSBookDownload _becomeManagedOnConnection:]
  -[SSBookDownload isEligibleForRestore:]
  -[SSBookDownload setValuesWithStoreDownloadMetadata:]
  -[SSBookDownload backgroundNetworkingJobGroupName]
  -[SSBookDownload removeAsset:]
  -[SSBookDownload estimatedSecondsRemaining]
  -[SSBookDownload networkConstraints]
  -[SSBookDownload setBackgroundNetworkingJobGroupName:]
  -[SSBookDownload setNetworkConstraints:]
  -[SSBookDownload persistentIdentifier]
  -[SSBookDownload isBackgroundNetworkingUserInitiated]
  -[SSBookDownload setBackgroundNetworkingUserInitiated:]
  -[SSBookDownload bytesDownloaded]
  -[SSBookDownload downloadSizeLimit]
  -[SSBookDownload setDownloadPolicy:]
  -[SSBookDownload downloadPolicy]
  -[SSBookDownload prioritizeAboveDownload:completionBlock:]
  -[SSBookDownload setStatus:]
  -[SSBookDownload metadata]
  -[SSBookDownload percentComplete]
  -[SSBookDownload downloadPhaseIdentifierOverride]
  -[SSBookDownload downloadStatus]
  -[SSBookDownload status]


SSVSubscriptionStatusRequest : SSRequest <SSXPCCoding>
 @property  BOOL authenticatesIfNecessary
 @property  NSString *localizedAuthenticationReason
 @property  SSAuthenticationContext *authenticationContext
 @property  long long carrierBundleProvisioningStyle
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSVSubscriptionStatusRequest _allowMultipleCallbacks]
  +[SSVSubscriptionStatusRequest requestMessage]

  // instance methods
  -[SSVSubscriptionStatusRequest initWithXPCEncoding:]
  -[SSVSubscriptionStatusRequest setCarrierBundleProvisioningStyle:]
  -[SSVSubscriptionStatusRequest setReason:]
  -[SSVSubscriptionStatusRequest copyXPCEncoding]
  -[SSVSubscriptionStatusRequest carrierBundleProvisioningStyle]
  -[SSVSubscriptionStatusRequest authenticationContext]
  -[SSVSubscriptionStatusRequest .cxx_destruct]
  -[SSVSubscriptionStatusRequest startWithCompletionBlock:]
  -[SSVSubscriptionStatusRequest setAuthenticatesIfNecessary:]
  -[SSVSubscriptionStatusRequest setLocalizedAuthenticationReason:]
  -[SSVSubscriptionStatusRequest startWithStatusResponseBlock:]
  -[SSVSubscriptionStatusRequest setAuthenticationContext:]
  -[SSVSubscriptionStatusRequest reason]
  -[SSVSubscriptionStatusRequest authenticatesIfNecessary]
  -[SSVSubscriptionStatusRequest localizedAuthenticationReason]


SSKeyValueStoreValueEntity : SSSQLiteEntity
  // class methods
  +[SSKeyValueStoreValueEntity databaseTable]


SSUnitTests : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSUnitTests isRunningUnitTests]


SSSQLiteDatabase : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL takesTaskCompletionAssertions
 @property  @? setupBlock

  // class methods
  +[SSSQLiteDatabase statementDidFinishAfterStepping:]
  +[SSSQLiteDatabase _setTakesTaskCompletionAssertions:]
  +[SSSQLiteDatabase statementHasRowAfterStepping:]
  +[SSSQLiteDatabase _stepStatement:hasRow:didFinish:isCorrupt:]

  // instance methods
  -[SSSQLiteDatabase userVersion]
  -[SSSQLiteDatabase setUserVersion:]
  -[SSSQLiteDatabase executeSQL:]
  -[SSSQLiteDatabase _openDatabase]
  -[SSSQLiteDatabase setUserVersion:forDatabase:]
  -[SSSQLiteDatabase initWithDatabaseURL:]
  -[SSSQLiteDatabase endTaskCompletionAssertion]
  -[SSSQLiteDatabase statementDidFinishAfterStepping:]
  -[SSSQLiteDatabase _accessDatabaseUsingBlock:]
  -[SSSQLiteDatabase userVersionForDatabase:]
  -[SSSQLiteDatabase dispatchAfter:block:]
  -[SSSQLiteDatabase prepareStatementForSQL:cache:usingBlock:]
  -[SSSQLiteDatabase dealloc]
  -[SSSQLiteDatabase beginTaskCompletionAssertion]
  -[SSSQLiteDatabase initWithDatabaseURL:readOnly:protectionType:]
  -[SSSQLiteDatabase dispatchBlockSync:]
  -[SSSQLiteDatabase dispatchBlockAsync:]
  -[SSSQLiteDatabase _statementForSQL:cache:]
  -[SSSQLiteDatabase accessDatabaseUsingBlock:]
  -[SSSQLiteDatabase expireBackgroundTask]
  -[SSSQLiteDatabase _endTaskCompletionAssertion]
  -[SSSQLiteDatabase _expireBackgroundTask]
  -[SSSQLiteDatabase _resetAndReopenDatabaseWithPath:]
  -[SSSQLiteDatabase setTakesTaskCompletionAssertions:]
  -[SSSQLiteDatabase _openFlags]
  -[SSSQLiteDatabase statementHasRowAfterStepping:]
  -[SSSQLiteDatabase setSetupBlock:]
  -[SSSQLiteDatabase _resetCorruptDatabase]
  -[SSSQLiteDatabase takesTaskCompletionAssertions]
  -[SSSQLiteDatabase _closeDatabase]
  -[SSSQLiteDatabase countChanges]
  -[SSSQLiteDatabase newDispatchSourceWithType:]
  -[SSSQLiteDatabase setupBlock]
  -[SSSQLiteDatabase initWithDatabaseURL:readOnly:]
  -[SSSQLiteDatabase performTransactionWithBlock:]
  -[SSSQLiteDatabase _resetDatabaseWithPath:]
  -[SSSQLiteDatabase _beginTaskCompletionAssertion]
  -[SSSQLiteDatabase columnName:existsInTable:]


SSVPlayActivityEvent : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  long long version
 @property  NSString *buildVersion
 @property  SSVPlayActivityEventContainerIDs *containerIDs
 @property  unsigned long containerType
 @property  NSData *dataRepresentation
 @property  NSString *deviceName
 @property  unsigned long displayType
 @property  unsigned long endReasonType
 @property  SSVPlayActivityEnqueuerProperties *enqueuerProperties
 @property  NSDate *eventDate
 @property  unsigned long eventType
 @property  NSTimeZone *eventTimeZone
 @property  NSString *featureName
 @property  NSString *householdID
 @property  SSVPlayActivityEventItemIDs *itemIDs
 @property  double itemDuration
 @property  double itemEndTime
 @property  double itemStartTime
 @property  unsigned long itemType
 @property  unsigned long lyricsDisplayedCharacterCount
 @property  NSString *lyricsLanguage
 @property  unsigned long mediaType
 @property  BOOL offline
 @property  long long persistentID
 @property  NSNumber *privateListeningEnabled
 @property  unsigned long reasonHintType
 @property  NSData *recommendationData
 @property  NSString *requestingBundleIdentifier
 @property  NSString *requestingBundleVersion
 @property  BOOL SBEnabled
 @property  NSNumber *siriInitiated
 @property  unsigned long sourceType
 @property  unsigned long storeAccountID
 @property  NSString *storeFrontID
 @property  long long systemReleaseType
 @property  NSData *timedMetadata
 @property  NSData *trackInfo
 @property  NSString *containerID
 @property  NSString *externalID
 @property  BOOL internalBuild
 @property  NSString *personalizedContainerID
 @property  NSString *storeID

  // class methods
  +[SSVPlayActivityEvent supportsSecureCoding]

  // instance methods
  -[SSVPlayActivityEvent isOffline]
  -[SSVPlayActivityEvent storeID]
  -[SSVPlayActivityEvent isPrivateListeningEnabled]
  -[SSVPlayActivityEvent copyWithZone:]
  -[SSVPlayActivityEvent mediaType]
  -[SSVPlayActivityEvent containerType]
  -[SSVPlayActivityEvent deviceName]
  -[SSVPlayActivityEvent eventDate]
  -[SSVPlayActivityEvent containerID]
  -[SSVPlayActivityEvent itemType]
  -[SSVPlayActivityEvent requestingBundleIdentifier]
  -[SSVPlayActivityEvent init]
  -[SSVPlayActivityEvent sourceType]
  -[SSVPlayActivityEvent requestingBundleVersion]
  -[SSVPlayActivityEvent buildVersion]
  -[SSVPlayActivityEvent .cxx_destruct]
  -[SSVPlayActivityEvent storeFrontID]
  -[SSVPlayActivityEvent eventType]
  -[SSVPlayActivityEvent initWithDataRepresentation:]
  -[SSVPlayActivityEvent itemIDs]
  -[SSVPlayActivityEvent encodeWithCoder:]
  -[SSVPlayActivityEvent isSBEnabled]
  -[SSVPlayActivityEvent enqueuerProperties]
  -[SSVPlayActivityEvent eventTimeZone]
  -[SSVPlayActivityEvent itemEndTime]
  -[SSVPlayActivityEvent lyricsDisplayedCharacterCount]
  -[SSVPlayActivityEvent lyricsLanguage]
  -[SSVPlayActivityEvent itemDuration]
  -[SSVPlayActivityEvent recommendationData]
  -[SSVPlayActivityEvent itemStartTime]
  -[SSVPlayActivityEvent householdID]
  -[SSVPlayActivityEvent isSiriInitiated]
  -[SSVPlayActivityEvent personalizedContainerID]
  -[SSVPlayActivityEvent reasonHintType]
  -[SSVPlayActivityEvent storeAccountID]
  -[SSVPlayActivityEvent timedMetadata]
  -[SSVPlayActivityEvent displayType]
  -[SSVPlayActivityEvent isEqual:]
  -[SSVPlayActivityEvent persistentID]
  -[SSVPlayActivityEvent version]
  -[SSVPlayActivityEvent externalID]
  -[SSVPlayActivityEvent systemReleaseType]
  -[SSVPlayActivityEvent dataRepresentation]
  -[SSVPlayActivityEvent isInternalBuild]
  -[SSVPlayActivityEvent mutableCopyWithZone:]
  -[SSVPlayActivityEvent featureName]
  -[SSVPlayActivityEvent initWithCoder:]
  -[SSVPlayActivityEvent endReasonType]
  -[SSVPlayActivityEvent _mutableCopyClass]
  -[SSVPlayActivityEvent trackInfo]
  -[SSVPlayActivityEvent containerIDs]


SSVMutablePlayActivityEvent : SSVPlayActivityEvent
 @property  long long persistentID
 @property  long long version
 @property  NSString *buildVersion
 @property  SSVPlayActivityEventContainerIDs *containerIDs
 @property  unsigned long containerType
 @property  NSString *deviceName
 @property  unsigned long endReasonType
 @property  SSVPlayActivityEnqueuerProperties *enqueuerProperties
 @property  NSDate *eventDate
 @property  NSTimeZone *eventTimeZone
 @property  unsigned long eventType
 @property  NSString *featureName
 @property  NSString *householdID
 @property  SSVPlayActivityEventItemIDs *itemIDs
 @property  double itemDuration
 @property  double itemEndTime
 @property  double itemStartTime
 @property  unsigned long itemType
 @property  unsigned long mediaType
 @property  BOOL offline
 @property  NSNumber *privateListeningEnabled
 @property  unsigned long reasonHintType
 @property  NSData *recommendationData
 @property  NSString *requestingBundleIdentifier
 @property  NSString *requestingBundleVersion
 @property  BOOL SBEnabled
 @property  NSNumber *siriInitiated
 @property  unsigned long sourceType
 @property  unsigned long storeAccountID
 @property  NSString *storeFrontID
 @property  long long systemReleaseType
 @property  NSData *timedMetadata
 @property  NSData *trackInfo
 @property  unsigned long displayType
 @property  unsigned long lyricsDisplayedCharacterCount
 @property  NSString *lyricsLanguage
 @property  NSString *containerID
 @property  NSString *externalID
 @property  BOOL internalBuild
 @property  NSString *personalizedContainerID
 @property  NSString *storeID

  // instance methods
  -[SSVMutablePlayActivityEvent copyWithZone:]
  -[SSVMutablePlayActivityEvent setPrivateListeningEnabled:]
  -[SSVMutablePlayActivityEvent setMediaType:]
  -[SSVMutablePlayActivityEvent setDisplayType:]
  -[SSVMutablePlayActivityEvent setContainerID:]
  -[SSVMutablePlayActivityEvent setBuildVersion:]
  -[SSVMutablePlayActivityEvent setEventType:]
  -[SSVMutablePlayActivityEvent setContainerType:]
  -[SSVMutablePlayActivityEvent setRequestingBundleIdentifier:]
  -[SSVMutablePlayActivityEvent setInternalBuild:]
  -[SSVMutablePlayActivityEvent setPersistentID:]
  -[SSVMutablePlayActivityEvent setStoreAccountID:]
  -[SSVMutablePlayActivityEvent setExternalID:]
  -[SSVMutablePlayActivityEvent setRequestingBundleVersion:]
  -[SSVMutablePlayActivityEvent setContainerIDs:]
  -[SSVMutablePlayActivityEvent setEventDate:]
  -[SSVMutablePlayActivityEvent setVersion:]
  -[SSVMutablePlayActivityEvent setOffline:]
  -[SSVMutablePlayActivityEvent setItemType:]
  -[SSVMutablePlayActivityEvent setSourceType:]
  -[SSVMutablePlayActivityEvent setDeviceName:]
  -[SSVMutablePlayActivityEvent setStoreID:]
  -[SSVMutablePlayActivityEvent setSBEnabled:]
  -[SSVMutablePlayActivityEvent setSystemReleaseType:]
  -[SSVMutablePlayActivityEvent setStoreFrontID:]
  -[SSVMutablePlayActivityEvent setEventTimeZone:]
  -[SSVMutablePlayActivityEvent setEndReasonType:]
  -[SSVMutablePlayActivityEvent _mutableCopyClass]
  -[SSVMutablePlayActivityEvent setFeatureName:]
  -[SSVMutablePlayActivityEvent setItemDuration:]
  -[SSVMutablePlayActivityEvent setItemEndTime:]
  -[SSVMutablePlayActivityEvent setItemStartTime:]
  -[SSVMutablePlayActivityEvent setRecommendationData:]
  -[SSVMutablePlayActivityEvent setTimedMetadata:]
  -[SSVMutablePlayActivityEvent setTrackInfo:]
  -[SSVMutablePlayActivityEvent setEnqueuerProperties:]
  -[SSVMutablePlayActivityEvent setHouseholdID:]
  -[SSVMutablePlayActivityEvent setSiriInitiated:]
  -[SSVMutablePlayActivityEvent setPersonalizedContainerID:]
  -[SSVMutablePlayActivityEvent setReasonHintType:]
  -[SSVMutablePlayActivityEvent setItemIDs:]
  -[SSVMutablePlayActivityEvent setLyricsDisplayedCharacterCount:]
  -[SSVMutablePlayActivityEvent setLyricsLanguage:]


SSSQLiteEntity : NSObject /usr/lib/libc++.1.dylib <SSSQLiteEntity>
 @property  SSSQLiteDatabase *database
 @property  long long persistentID
 @property  BOOL existsInDatabase
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSSQLiteEntity databaseTable]
  +[SSSQLiteEntity disambiguatedSQLForProperty:]
  +[SSSQLiteEntity memoryEntityClass]
  +[SSSQLiteEntity joinClauseForProperty:]
  +[SSSQLiteEntity foreignDatabaseTablesToDelete]
  +[SSSQLiteEntity foreignKeyColumnForTable:]
  +[SSSQLiteEntity foreignDatabaseTableForProperty:]
  +[SSSQLiteEntity foreignDatabaseColumnForProperty:]
  +[SSSQLiteEntity queryWithDatabase:predicate:]
  +[SSSQLiteEntity anyInDatabase:predicate:]
  +[SSSQLiteEntity _insertValues:intoTable:withPersistentID:database:]
  +[SSSQLiteEntity databasePropertyToSetClientProperty:]
  +[SSSQLiteEntity databaseValueForProperty:clientValue:]
  +[SSSQLiteEntity databasePropertyToGetClientProperty:]
  +[SSSQLiteEntity copyDatabaseDictionaryToSetClientDictionary:]
  +[SSSQLiteEntity _aggregateValueForProperty:function:predicate:database:]
  +[SSSQLiteEntity queryWithDatabase:predicate:orderingProperties:]
  +[SSSQLiteEntity countForProperty:predicate:database:]
  +[SSSQLiteEntity maxValueForProperty:predicate:database:]
  +[SSSQLiteEntity minValueForProperty:predicate:database:]

  // instance methods
  -[SSSQLiteEntity valueForProperty:]
  -[SSSQLiteEntity database]
  -[SSSQLiteEntity getValues:forProperties:count:]
  -[SSSQLiteEntity persistentID]
  -[SSSQLiteEntity _copyTableClusteredValuesWithValues:]
  -[SSSQLiteEntity _deleteRowFromTable:usingColumn:]
  -[SSSQLiteEntity setValuesWithDictionary:]
  -[SSSQLiteEntity deleteFromDatabase]
  -[SSSQLiteEntity existsInDatabase]
  -[SSSQLiteEntity setValue:forProperty:]
  -[SSSQLiteEntity initWithPropertyValues:inDatabase:]
  -[SSSQLiteEntity initWithPersistentID:inDatabase:]
  -[SSSQLiteEntity copyValuesForClientProperties:]
  -[SSSQLiteEntity copyXPCEncodedValuesForClientProperties:]


SSSQLitePredicate : NSObject /usr/lib/libc++.1.dylib <NSCopying>
  // instance methods
  -[SSSQLitePredicate copyWithZone:]
  -[SSSQLitePredicate SQLJoinClausesForEntityClass:]
  -[SSSQLitePredicate SQLForEntityClass:]
  -[SSSQLitePredicate bindToStatement:bindingIndex:]
  -[SSSQLitePredicate isEqual:]


SSSQLitePropertyPredicate : SSSQLitePredicate <NSCopying>
 @property  NSString *property

  // instance methods
  -[SSSQLitePropertyPredicate copyWithZone:]
  -[SSSQLitePropertyPredicate dealloc]
  -[SSSQLitePropertyPredicate SQLJoinClausesForEntityClass:]
  -[SSSQLitePropertyPredicate property]
  -[SSSQLitePropertyPredicate isEqual:]


SSSQLiteComparisonPredicate : SSSQLitePropertyPredicate <NSCopying>
 @property  long long comparisonType
 @property  id value

  // class methods
  +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]
  +[SSSQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]
  +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]

  // instance methods
  -[SSSQLiteComparisonPredicate copyWithZone:]
  -[SSSQLiteComparisonPredicate dealloc]
  -[SSSQLiteComparisonPredicate comparisonType]
  -[SSSQLiteComparisonPredicate SQLForEntityClass:]
  -[SSSQLiteComparisonPredicate _comparisonTypeString]
  -[SSSQLiteComparisonPredicate bindToStatement:bindingIndex:]
  -[SSSQLiteComparisonPredicate isEqual:]
  -[SSSQLiteComparisonPredicate value]


SSSQLiteContainsPredicate : SSSQLitePropertyPredicate <NSCopying>
 @property  BOOL negative
 @property  SSSQLiteQuery *query
 @property  NSString *queryProperty
 @property  NSArray *values

  // class methods
  +[SSSQLiteContainsPredicate containsPredicateWithProperty:query:queryProperty:]
  +[SSSQLiteContainsPredicate containsPredicateWithProperty:values:]
  +[SSSQLiteContainsPredicate doesNotContainPredicateWithProperty:values:]

  // instance methods
  -[SSSQLiteContainsPredicate copyWithZone:]
  -[SSSQLiteContainsPredicate values]
  -[SSSQLiteContainsPredicate isNegative]
  -[SSSQLiteContainsPredicate queryProperty]
  -[SSSQLiteContainsPredicate dealloc]
  -[SSSQLiteContainsPredicate query]
  -[SSSQLiteContainsPredicate SQLForEntityClass:]
  -[SSSQLiteContainsPredicate bindToStatement:bindingIndex:]
  -[SSSQLiteContainsPredicate isEqual:]


SSSQLiteNullPredicate : SSSQLitePropertyPredicate <NSCopying>
 @property  BOOL matchesNull

  // class methods
  +[SSSQLiteNullPredicate isNotNullPredicateWithProperty:]
  +[SSSQLiteNullPredicate isNullPredicateWithProperty:]

  // instance methods
  -[SSSQLiteNullPredicate copyWithZone:]
  -[SSSQLiteNullPredicate matchesNull]
  -[SSSQLiteNullPredicate SQLForEntityClass:]
  -[SSSQLiteNullPredicate isEqual:]


SSSQLiteCompoundPredicate : SSSQLitePredicate <NSCopying>
 @property  NSArray *predicates

  // class methods
  +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:]
  +[SSSQLiteCompoundPredicate predicateWithProperty:values:comparisonType:]
  +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:]

  // instance methods
  -[SSSQLiteCompoundPredicate copyWithZone:]
  -[SSSQLiteCompoundPredicate dealloc]
  -[SSSQLiteCompoundPredicate SQLJoinClausesForEntityClass:]
  -[SSSQLiteCompoundPredicate SQLForEntityClass:]
  -[SSSQLiteCompoundPredicate predicates]
  -[SSSQLiteCompoundPredicate bindToStatement:bindingIndex:]
  -[SSSQLiteCompoundPredicate isEqual:]


SSSQLiteQuery : NSObject /usr/lib/libc++.1.dylib
 @property  SSSQLiteDatabase *database
 @property  SSSQLiteQueryDescriptor *queryDescriptor
 @property  long long countOfEntities

  // instance methods
  -[SSSQLiteQuery enumeratePersistentIDsUsingBlock:]
  -[SSSQLiteQuery countOfEntities]
  -[SSSQLiteQuery queryDescriptor]
  -[SSSQLiteQuery dealloc]
  -[SSSQLiteQuery database]
  -[SSSQLiteQuery initWithDatabase:descriptor:]
  -[SSSQLiteQuery bindToSelectStatement:bindingIndex:]
  -[SSSQLiteQuery enumerateMemoryEntitiesWithProperties:usingBlock:]
  -[SSSQLiteQuery copyEntityIdentifiers]
  -[SSSQLiteQuery deleteAllEntities]
  -[SSSQLiteQuery enumerateMemoryEntitiesUsingBlock:]
  -[SSSQLiteQuery enumeratePersistentIDsAndProperties:count:usingBlock:]
  -[SSSQLiteQuery copySelectSQLWithProperties:count:]
  -[SSSQLiteQuery _newSelectSQLWithProperties:count:]
  -[SSSQLiteQuery createTemporaryTableWithName:properties:count:]


SSSQLiteQueryDescriptor : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  Class entityClass
 @property  Class memoryEntityClass
 @property  long long limitCount
 @property  NSString *orderingClause
 @property  NSArray *orderingDirections
 @property  NSArray *orderingProperties
 @property  BOOL returnsDistinctEntities
 @property  SSSQLitePredicate *predicate

  // instance methods
  -[SSSQLiteQueryDescriptor limitCount]
  -[SSSQLiteQueryDescriptor copyWithZone:]
  -[SSSQLiteQueryDescriptor entityClass]
  -[SSSQLiteQueryDescriptor setOrderingClause:]
  -[SSSQLiteQueryDescriptor setMemoryEntityClass:]
  -[SSSQLiteQueryDescriptor dealloc]
  -[SSSQLiteQueryDescriptor orderingProperties]
  -[SSSQLiteQueryDescriptor predicate]
  -[SSSQLiteQueryDescriptor returnsDistinctEntities]
  -[SSSQLiteQueryDescriptor setOrderingDirections:]
  -[SSSQLiteQueryDescriptor setPredicate:]
  -[SSSQLiteQueryDescriptor setLimitCount:]
  -[SSSQLiteQueryDescriptor orderingClause]
  -[SSSQLiteQueryDescriptor memoryEntityClass]
  -[SSSQLiteQueryDescriptor setEntityClass:]
  -[SSSQLiteQueryDescriptor setOrderingProperties:]
  -[SSSQLiteQueryDescriptor setReturnsDistinctEntities:]
  -[SSSQLiteQueryDescriptor _newSelectSQLWithProperties:count:columns:]
  -[SSSQLiteQueryDescriptor orderingDirections]


SSPromise : NSObject /usr/lib/libc++.1.dylib
 @property  SSPromiseCompletionBlocks *completionBlocks
 @property  SSPromiseResult *promiseResult
 @property  NSConditionLock *stateLock
 @property  BOOL cancelled
 @property  BOOL finished

  // class methods
  +[SSPromise promiseWithError:]
  +[SSPromise _errorIsCanceledError:]
  +[SSPromise promiseWithResult:]
  +[SSPromise _globalPromiseStorage]
  +[SSPromise promiseWithAll:]
  +[SSPromise _configureAllPromise:withResults:promises:currentPromiseIndex:]
  +[SSPromise promiseWithAny:]
  +[SSPromise _finishPromise:withPromise:]
  +[SSPromise _configureAnyPromise:withPomises:currentPromiseIndex:]
  +[SSPromise _globalPromiseStorageAccessQueue]

  // instance methods
  -[SSPromise setPromiseResult:]
  -[SSPromise resultBeforeDate:error:]
  -[SSPromise addErrorBlock:]
  -[SSPromise boolCompletionHandlerAdapter]
  -[SSPromise finishWithResult:]
  -[SSPromise errorOnlyCompletionHandlerAdapter]
  -[SSPromise finishWithResult:error:]
  -[SSPromise isCancelled]
  -[SSPromise nilValueCompletionHandlerAdapter]
  -[SSPromise _addBlock:orCallWithResult:]
  -[SSPromise resultWithError:]
  -[SSPromise catchWithBlock:]
  -[SSPromise addSuccessBlock:]
  -[SSPromise waitUntilFinished]
  -[SSPromise resultWithTimeout:error:]
  -[SSPromise finishWithError:]
  -[SSPromise setCompletionBlocks:]
  -[SSPromise waitUntilFinishedWithTimeout:]
  -[SSPromise addFinishBlock:]
  -[SSPromise completionHandlerAdapter]
  -[SSPromise promiseResult]
  -[SSPromise _isFinished]
  -[SSPromise stateLock]
  -[SSPromise completionBlocks]
  -[SSPromise setStateLock:]
  -[SSPromise init]
  -[SSPromise .cxx_destruct]
  -[SSPromise isFinished]
  -[SSPromise cancel]
  -[SSPromise thenWithBlock:]


SSVEnableSubscriptionRequest : SSRequest <SSXPCCoding>
 @property  SSAuthenticationContext *authenticationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVEnableSubscriptionRequest initWithXPCEncoding:]
  -[SSVEnableSubscriptionRequest copyXPCEncoding]
  -[SSVEnableSubscriptionRequest authenticationContext]
  -[SSVEnableSubscriptionRequest .cxx_destruct]
  -[SSVEnableSubscriptionRequest startWithCompletionBlock:]
  -[SSVEnableSubscriptionRequest setAuthenticationContext:]


SSMemoryEntity : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long databaseID
 @property  NSDictionary *propertyValues
 @property  NSDictionary *externalPropertyValues

  // class methods
  +[SSMemoryEntity databaseEntityClass]
  +[SSMemoryEntity defaultProperties]
  +[SSMemoryEntity queryWithDatabase:predicate:]
  +[SSMemoryEntity anyInDatabase:predicate:]
  +[SSMemoryEntity queryWithDatabase:predicate:orderingProperties:]

  // instance methods
  -[SSMemoryEntity databaseID]
  -[SSMemoryEntity setDatabaseID:]
  -[SSMemoryEntity copyWithZone:]
  -[SSMemoryEntity init]
  -[SSMemoryEntity valueForProperty:]
  -[SSMemoryEntity dealloc]
  -[SSMemoryEntity isEqual:]
  -[SSMemoryEntity setValuesWithDictionary:]
  -[SSMemoryEntity reloadFromDatabaseEntity:properties:]
  -[SSMemoryEntity setValues:forProperties:count:]
  -[SSMemoryEntity setValues:forExternalProperties:count:]
  -[SSMemoryEntity propertyValues]
  -[SSMemoryEntity externalPropertyValues]
  -[SSMemoryEntity initWithDatabaseEntity:properties:]
  -[SSMemoryEntity setExternalValuesWithDictionary:]
  -[SSMemoryEntity setValue:forExternalProperty:]
  -[SSMemoryEntity valueForExternalProperty:]
  -[SSMemoryEntity setValue:forProperty:]


SSPurchaseResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSSecureCoding>
 @property  BOOL cancelsPurchaseBatch
 @property  NSError *error
 @property  SSPurchase *purchase
 @property  SSURLConnectionResponse *URLResponse
 @property  NSArray *downloadIdentifiers
 @property  double requestStartTime
 @property  double responseEndTime
 @property  double responseStartTime
 @property  NSDictionary *tidHeaders
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSPurchaseResponse supportsSecureCoding]

  // instance methods
  -[SSPurchaseResponse initWithXPCEncoding:]
  -[SSPurchaseResponse copyXPCEncoding]
  -[SSPurchaseResponse setResponseStartTime:]
  -[SSPurchaseResponse setError:]
  -[SSPurchaseResponse responseEndTime]
  -[SSPurchaseResponse setRequestStartTime:]
  -[SSPurchaseResponse .cxx_destruct]
  -[SSPurchaseResponse purchase]
  -[SSPurchaseResponse encodeWithCoder:]
  -[SSPurchaseResponse URLResponse]
  -[SSPurchaseResponse responseStartTime]
  -[SSPurchaseResponse error]
  -[SSPurchaseResponse requestStartTime]
  -[SSPurchaseResponse setPurchase:]
  -[SSPurchaseResponse tidHeaders]
  -[SSPurchaseResponse setTidHeaders:]
  -[SSPurchaseResponse setResponseEndTime:]
  -[SSPurchaseResponse initWithCoder:]
  -[SSPurchaseResponse downloadsMetadata]
  -[SSPurchaseResponse responseMetrics]
  -[SSPurchaseResponse downloadMetadataForItemIdentifier:]
  -[SSPurchaseResponse transactionIdentifierForItemIdentifier:]
  -[SSPurchaseResponse cancelsPurchaseBatch]
  -[SSPurchaseResponse setCancelsPurchaseBatch:]
  -[SSPurchaseResponse downloadIdentifiers]
  -[SSPurchaseResponse setDownloadIdentifiers:]
  -[SSPurchaseResponse setURLResponse:]


SSVServerAuthenticateRequest : SSRequest <SSXPCCoding>
 @property  NSObject<OS_xpc_object> *encodedDialog
 @property  SSAuthenticationContext *authenticationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVServerAuthenticateRequest initWithXPCEncoding:]
  -[SSVServerAuthenticateRequest copyXPCEncoding]
  -[SSVServerAuthenticateRequest authenticationContext]
  -[SSVServerAuthenticateRequest .cxx_destruct]
  -[SSVServerAuthenticateRequest setAuthenticationContext:]
  -[SSVServerAuthenticateRequest initWithEncodedDialog:]
  -[SSVServerAuthenticateRequest startWithAuthenticateResponse:]
  -[SSVServerAuthenticateRequest encodedDialog]


SSVServerAuthenticateResponse : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  NSNumber *authenticatedAccountIdentifier
 @property  long long performedButtonIndex
 @property  NSURL *redirectURL
 @property  long long selectedButtonIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVServerAuthenticateResponse setRedirectURL:]
  -[SSVServerAuthenticateResponse initWithXPCEncoding:]
  -[SSVServerAuthenticateResponse copyXPCEncoding]
  -[SSVServerAuthenticateResponse .cxx_destruct]
  -[SSVServerAuthenticateResponse selectedButtonIndex]
  -[SSVServerAuthenticateResponse setSelectedButtonIndex:]
  -[SSVServerAuthenticateResponse redirectURL]
  -[SSVServerAuthenticateResponse authenticatedAccountIdentifier]
  -[SSVServerAuthenticateResponse setAuthenticatedAccountIdentifier:]
  -[SSVServerAuthenticateResponse performedButtonIndex]
  -[SSVServerAuthenticateResponse setPerformedButtonIndex:]


SSHTTPServerRequestHandler : NSObject /usr/lib/libc++.1.dylib <NSStreamDelegate>
 @property  <SSHTTPServerRequestHandlerDelegate> *delegate
 @property  int downloadSpeed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSHTTPServerRequestHandler _close]
  -[SSHTTPServerRequestHandler dealloc]
  -[SSHTTPServerRequestHandler .cxx_destruct]
  -[SSHTTPServerRequestHandler close]
  -[SSHTTPServerRequestHandler downloadSpeed]
  -[SSHTTPServerRequestHandler setDownloadSpeed:]
  -[SSHTTPServerRequestHandler initWithReadStream:writeStream:runLoop:]
  -[SSHTTPServerRequestHandler setDelegate:]
  -[SSHTTPServerRequestHandler delegate]
  -[SSHTTPServerRequestHandler stream:handleEvent:]
  -[SSHTTPServerRequestHandler _handleReceivedDataWithError:]
  -[SSHTTPServerRequestHandler _respondWithRequest:error:]
  -[SSHTTPServerRequestHandler _errorResponseDataWithStatus:message:]
  -[SSHTTPServerRequestHandler _writeResponseData:error:]
  -[SSHTTPServerRequestHandler _throttledWriteSpeed]
  -[SSHTTPServerRequestHandler _shouldKeepRunning]


SSVURLJSONDataConsumer : SSVURLDataConsumer
  // instance methods
  -[SSVURLJSONDataConsumer objectForData:response:error:]


SSVPlayActivityController : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long writingStyle

  // class methods
  +[SSVPlayActivityController _requiredEndpointIdentifiers]

  // instance methods
  -[SSVPlayActivityController init]
  -[SSVPlayActivityController _daemonPlayActivityControllerConnection]
  -[SSVPlayActivityController getRevisionInformationWithCompletionHandler:]
  -[SSVPlayActivityController flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:]
  -[SSVPlayActivityController completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:]
  -[SSVPlayActivityController getPlayActivityEventsFromRevision:toRevision:withCompletionHandler:]
  -[SSVPlayActivityController _sessionInformationForSessionToken:]
  -[SSVPlayActivityController dealloc]
  -[SSVPlayActivityController _table]
  -[SSVPlayActivityController .cxx_destruct]
  -[SSVPlayActivityController completePendingPlayActivityEventPersistentIDs:forSessionToken:withResult:completionHandler:]
  -[SSVPlayActivityController _loadEndpointIdentifierInformationIfNeeded]
  -[SSVPlayActivityController removeFlushedPlayActivityEventsWithCompletionHandler:]
  -[SSVPlayActivityController acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:]
  -[SSVPlayActivityController _setEndpointRevisionInformation:forEndpointIdentifier:]
  -[SSVPlayActivityController _revisionsIndexSetForPlayActivityEventPersistentIDs:]
  -[SSVPlayActivityController _acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:shouldFilterStoreAccountID:completionHandler:]
  -[SSVPlayActivityController recordPlayActivityEvents:withCompletionHandler:]
  -[SSVPlayActivityController initWithWritingStyle:]
  -[SSVPlayActivityController writingStyle]
  -[SSVPlayActivityController getHasPendingPlayEventsForEndpointIdentifier:withCompletionHandler:]
  -[SSVPlayActivityController _completePendingPlayEventsWithRevisionIndexSet:forSessionToken:withResult:completionHandler:]
  -[SSVPlayActivityController acquirePendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:]
  -[SSVPlayActivityController removePlayActivityEventsUpToRevision:withCompletionHandler:]
  -[SSVPlayActivityController _copyEndpointRevisionInformationForEndpointIdentifier:]
  -[SSVPlayActivityController setCurrentRevision:revisionVersionToken:forEndpointIdentifier:withCompletionHandler:]
  -[SSVPlayActivityController _setupNotifyTokenIfNeeded]
  -[SSVPlayActivityController _getFlushSessionInformationForEndpointIdentifier:shouldAcquire:storeAccountID:shouldFilterStoreAccountID:withCompletionHandler:]
  -[SSVPlayActivityController _revisionsIndexSetForPlayActivityEvents:]


_SSVPlayActivityEndpointRevisionInformation : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSIndexSet *additionalPendingRevisionsIndexSet
 @property  unsigned long currentRevision
 @property  NSString *revisionVersionToken

  // class methods
  +[_SSVPlayActivityEndpointRevisionInformation supportsSecureCoding]

  // instance methods
  -[_SSVPlayActivityEndpointRevisionInformation copyWithZone:]
  -[_SSVPlayActivityEndpointRevisionInformation additionalPendingRevisionsIndexSet]
  -[_SSVPlayActivityEndpointRevisionInformation setCurrentRevision:]
  -[_SSVPlayActivityEndpointRevisionInformation revisionVersionToken]
  -[_SSVPlayActivityEndpointRevisionInformation setRevisionVersionToken:]
  -[_SSVPlayActivityEndpointRevisionInformation setAdditionalPendingRevisionsIndexSet:]
  -[_SSVPlayActivityEndpointRevisionInformation .cxx_destruct]
  -[_SSVPlayActivityEndpointRevisionInformation encodeWithCoder:]
  -[_SSVPlayActivityEndpointRevisionInformation isEqual:]
  -[_SSVPlayActivityEndpointRevisionInformation currentRevision]
  -[_SSVPlayActivityEndpointRevisionInformation initWithCoder:]


_SSVPlayActivityFlushSessionInformation : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *endpointIdentifier
 @property  NSIndexSet *revisionsIndexSet
 @property  NSString *revisionVersionToken
 @property  unsigned long sessionToken

  // instance methods
  -[_SSVPlayActivityFlushSessionInformation revisionsIndexSet]
  -[_SSVPlayActivityFlushSessionInformation revisionVersionToken]
  -[_SSVPlayActivityFlushSessionInformation setRevisionVersionToken:]
  -[_SSVPlayActivityFlushSessionInformation setRevisionsIndexSet:]
  -[_SSVPlayActivityFlushSessionInformation setEndpointIdentifier:]
  -[_SSVPlayActivityFlushSessionInformation endpointIdentifier]
  -[_SSVPlayActivityFlushSessionInformation .cxx_destruct]
  -[_SSVPlayActivityFlushSessionInformation setSessionToken:]
  -[_SSVPlayActivityFlushSessionInformation sessionToken]


SSInstallAttributionPingbackRequest : SSRequest <SSXPCCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSInstallAttributionPingbackRequest initWithXPCEncoding:]
  -[SSInstallAttributionPingbackRequest copyXPCEncoding]
  -[SSInstallAttributionPingbackRequest startWithCompletionBlock:]


SSPurchaseManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *managerIdentifier
 @property  <SSPurchaseManagerDelegate> *delegate

  // instance methods
  -[SSPurchaseManager _connectToDaemon]
  -[SSPurchaseManager _handlePurchasesFinished:fromConnection:]
  -[SSPurchaseManager getPurchasesUsingBlock:]
  -[SSPurchaseManager init]
  -[SSPurchaseManager _newEncodedArrayWithPurchases:]
  -[SSPurchaseManager _requestConnection]
  -[SSPurchaseManager _resultForReply:error:]
  -[SSPurchaseManager dealloc]
  -[SSPurchaseManager _responseConnection]
  -[SSPurchaseManager _handleMessage:fromConnection:]
  -[SSPurchaseManager initWithManagerIdentifier:]
  -[SSPurchaseManager movePurchases:afterPurchase:withCompletionBlock:]
  -[SSPurchaseManager _sendMessage:withPurchases:afterPurchase:completionBlock:]
  -[SSPurchaseManager _handleAuthenticateRequest:fromConnection:]
  -[SSPurchaseManager _sendMessage:withPurchaseIdentifiers:afterPurchase:completionBlock:]
  -[SSPurchaseManager _newEncodedArrayWithPurchaseIdentifiers:]
  -[SSPurchaseManager addPurchases:withCompletionBlock:]
  -[SSPurchaseManager managerIdentifier]
  -[SSPurchaseManager _sendCompletionBlock:forGetPurchasesReply:]
  -[SSPurchaseManager insertPurchases:afterPurchase:withCompletionBlock:]
  -[SSPurchaseManager _reconnectForDaemonLaunch]
  -[SSPurchaseManager setDelegate:]
  -[SSPurchaseManager _shouldInvalidateSubscriptionStatusForPurchaseResponse:]
  -[SSPurchaseManager cancelPurchases:withCompletionBlock:]
  -[SSPurchaseManager _sendCompletionBlock:forStandardReply:]
  -[SSPurchaseManager delegate]


SSMachineDataRequest : SSRequest <SSXPCCoding>
 @property  NSNumber *accountIdentifier
 @property  NSData *actionData
 @property  NSString *actionName
 @property  BOOL allowsBootstrapCellularData
 @property  long long protocolVersion
 @property  NSString *userAgent
 @property  BOOL waitsForPurchaseOperations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSMachineDataRequest setUserAgent:]
  -[SSMachineDataRequest allowsBootstrapCellularData]
  -[SSMachineDataRequest userAgent]
  -[SSMachineDataRequest setAllowsBootstrapCellularData:]
  -[SSMachineDataRequest initWithURLResponse:]
  -[SSMachineDataRequest initWithXPCEncoding:]
  -[SSMachineDataRequest copyXPCEncoding]
  -[SSMachineDataRequest protocolVersion]
  -[SSMachineDataRequest accountIdentifier]
  -[SSMachineDataRequest setProtocolVersion:]
  -[SSMachineDataRequest setActionName:]
  -[SSMachineDataRequest .cxx_destruct]
  -[SSMachineDataRequest setWaitsForPurchaseOperations:]
  -[SSMachineDataRequest startWithDetailedCompletionBlock:]
  -[SSMachineDataRequest startWithCompletionBlock:]
  -[SSMachineDataRequest actionName]
  -[SSMachineDataRequest waitsForPurchaseOperations]
  -[SSMachineDataRequest actionData]
  -[SSMachineDataRequest setAccountIdentifier:]
  -[SSMachineDataRequest setActionData:]


SSPrivacyMetricsEvent : SSMetricsMutableEvent
 @property  NSString *acknowledgmentIdentifier
 @property  NSNumber *acknowledgmentVersion
 @property  BOOL acknowledged
 @property  NSString *bundleIdentifier
 @property  BOOL displayed

  // instance methods
  -[SSPrivacyMetricsEvent init]
  -[SSPrivacyMetricsEvent acknowledged]
  -[SSPrivacyMetricsEvent setAcknowledged:]
  -[SSPrivacyMetricsEvent acknowledgmentIdentifier]
  -[SSPrivacyMetricsEvent acknowledgmentVersion]
  -[SSPrivacyMetricsEvent setAcknowledgmentIdentifier:]
  -[SSPrivacyMetricsEvent setAcknowledgmentVersion:]
  -[SSPrivacyMetricsEvent setBundleIdentifier:]
  -[SSPrivacyMetricsEvent setDisplayed:]
  -[SSPrivacyMetricsEvent displayed]
  -[SSPrivacyMetricsEvent bundleIdentifier]


SSMetricsEventLocation : NSObject /usr/lib/libc++.1.dylib
 @property  long long locationPosition
 @property  NSString *locationType
 @property  NSDictionary *reportingDictionary

  // instance methods
  -[SSMetricsEventLocation reportingDictionary]
  -[SSMetricsEventLocation valueForLocationKey:]
  -[SSMetricsEventLocation locationPosition]
  -[SSMetricsEventLocation setLocationType:]
  -[SSMetricsEventLocation locationType]
  -[SSMetricsEventLocation .cxx_destruct]
  -[SSMetricsEventLocation setLocationPosition:]
  -[SSMetricsEventLocation setValue:forLocationKey:]


SSVSubscriptionEntitlements : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *cachedTimestamp
 @property  NSNumber *accountIdentifier
 @property  NSNumber *accountStoreFrontIdentifier
 @property  NSString *accountISO3Country
 @property  NSArray *entitledSubscriptions

  // class methods
  +[SSVSubscriptionEntitlements _valueForKey:fromDictionary:ofType:]
  +[SSVSubscriptionEntitlements _parseJSONDictionary:]

  // instance methods
  -[SSVSubscriptionEntitlements copyWithZone:]
  -[SSVSubscriptionEntitlements initWithXPCEncoding:]
  -[SSVSubscriptionEntitlements copyXPCEncoding]
  -[SSVSubscriptionEntitlements accountISO3Country]
  -[SSVSubscriptionEntitlements setAccountISO3Country:]
  -[SSVSubscriptionEntitlements setAccountStoreFrontIdentifier:]
  -[SSVSubscriptionEntitlements setCachedTimestamp:]
  -[SSVSubscriptionEntitlements setEntitledSubscriptions:]
  -[SSVSubscriptionEntitlements accountStoreFrontIdentifier]
  -[SSVSubscriptionEntitlements cachedTimestamp]
  -[SSVSubscriptionEntitlements entitledSubscriptions]
  -[SSVSubscriptionEntitlements accountIdentifier]
  -[SSVSubscriptionEntitlements .cxx_destruct]
  -[SSVSubscriptionEntitlements setAccountIdentifier:]


SSTermsAndConditions : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  BOOL userAccepted
 @property  NSString *currentText
 @property  long long currentVersionIdentifier
 @property  BOOL requiresAuthentication

  // instance methods
  -[SSTermsAndConditions copyWithZone:]
  -[SSTermsAndConditions requiresAuthentication]
  -[SSTermsAndConditions currentVersionIdentifier]
  -[SSTermsAndConditions initWithResponseData:error:]
  -[SSTermsAndConditions isUserAccepted]
  -[SSTermsAndConditions setCurrentVersionIdentifier:]
  -[SSTermsAndConditions setUserAccepted:]
  -[SSTermsAndConditions dealloc]
  -[SSTermsAndConditions currentText]
  -[SSTermsAndConditions setCurrentText:]


SSVMediaSocialPostAttachment : NSObject /usr/lib/libc++.1.dylib <NSCopying, SSXPCCoding>
 @property  NSArray *artists
 @property  NSString *albumIdentifier
 @property  NSString *attachmentDescription
 @property  NSString *categoryName
 @property  BOOL explicitContent
 @property  NSString *subtitle
 @property  NSString *title
 @property  NSData *assetData
 @property  NSURL *assetURL
 @property  long long attachmentType
 @property  NSString *UTI
 @property  BOOL deletesAssetWhenFinished
 @property  double previewFrameTimestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVMediaSocialPostAttachment copyWithZone:]
  -[SSVMediaSocialPostAttachment setSubtitle:]
  -[SSVMediaSocialPostAttachment artists]
  -[SSVMediaSocialPostAttachment initWithXPCEncoding:]
  -[SSVMediaSocialPostAttachment categoryName]
  -[SSVMediaSocialPostAttachment setCategoryName:]
  -[SSVMediaSocialPostAttachment copyXPCEncoding]
  -[SSVMediaSocialPostAttachment setAlbumIdentifier:]
  -[SSVMediaSocialPostAttachment setArtists:]
  -[SSVMediaSocialPostAttachment setAssetData:]
  -[SSVMediaSocialPostAttachment setDeletesAssetWhenFinished:]
  -[SSVMediaSocialPostAttachment setPreviewFrameTimestamp:]
  -[SSVMediaSocialPostAttachment attachmentType]
  -[SSVMediaSocialPostAttachment childAttachmentForRelationship:]
  -[SSVMediaSocialPostAttachment enumerateChildAttachmentsUsingBlock:]
  -[SSVMediaSocialPostAttachment albumIdentifier]
  -[SSVMediaSocialPostAttachment isExplicitContent]
  -[SSVMediaSocialPostAttachment setChildAttachment:forRelationship:]
  -[SSVMediaSocialPostAttachment previewFrameTimestamp]
  -[SSVMediaSocialPostAttachment deletesAssetWhenFinished]
  -[SSVMediaSocialPostAttachment .cxx_destruct]
  -[SSVMediaSocialPostAttachment setTitle:]
  -[SSVMediaSocialPostAttachment setUTI:]
  -[SSVMediaSocialPostAttachment UTI]
  -[SSVMediaSocialPostAttachment title]
  -[SSVMediaSocialPostAttachment attachmentDescription]
  -[SSVMediaSocialPostAttachment setAttachmentDescription:]
  -[SSVMediaSocialPostAttachment assetURL]
  -[SSVMediaSocialPostAttachment subtitle]
  -[SSVMediaSocialPostAttachment assetData]
  -[SSVMediaSocialPostAttachment setExplicitContent:]
  -[SSVMediaSocialPostAttachment setAssetURL:]


SSLookupItem : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *artistName
 @property  NSArray *artwork
 @property  NSString *bundleIdentifier
 @property  NSArray *categoryNames
 @property  NSString *displayName
 @property  NSString *itemKind
 @property  NSNumber *ITunesStoreIdentifier
 @property  NSArray *offers
 @property  BOOL POIBased
 @property  NSURL *productPageURL
 @property  long long numberOfUserRatings
 @property  float userRating
 @property  long long numberOfUserRatingsForCurrentVersion
 @property  float userRatingForCurrentVersion
 @property  NSDictionary *lookupDictionary

  // class methods
  +[SSLookupItem supportsSecureCoding]

  // instance methods
  -[SSLookupItem copyWithZone:]
  -[SSLookupItem artistName]
  -[SSLookupItem artwork]
  -[SSLookupItem dealloc]
  -[SSLookupItem offers]
  -[SSLookupItem initWithLookupDictionary:]
  -[SSLookupItem encodeWithCoder:]
  -[SSLookupItem itemKind]
  -[SSLookupItem isPOIBased]
  -[SSLookupItem ITunesStoreIdentifier]
  -[SSLookupItem userRating]
  -[SSLookupItem categoryNames]
  -[SSLookupItem numberOfUserRatings]
  -[SSLookupItem productPageURL]
  -[SSLookupItem numberOfUserRatingsForCurrentVersion]
  -[SSLookupItem userRatingForCurrentVersion]
  -[SSLookupItem bundleIdentifier]
  -[SSLookupItem displayName]
  -[SSLookupItem lookupDictionary]
  -[SSLookupItem initWithCoder:]


SSVSubscriptionStatus : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  NSNumber *accountIdentifier
 @property  NSArray *accountPermissions
 @property  long long accountStatus
 @property  unsigned long acceptedStoreTermsVersion
 @property  long long carrierBundlingStatus
 @property  long long carrierBundlingErrorCode
 @property  NSString *cellularOperatorName
 @property  BOOL discoveryModeEligible
 @property  BOOL familyOrganizer
 @property  BOOL familySubscription
 @property  BOOL freeTrialIneligible
 @property  BOOL hasFamily
 @property  BOOL hasFamilyMembers
 @property  BOOL hasOfflineSlots
 @property  unsigned long latestStoreTermsVersion
 @property  NSString *phoneNumber
 @property  NSDictionary *rawResponseData
 @property  NSString *sessionIdentifier
 @property  BOOL subscribed
 @property  NSDate *subscriptionExpirationDate
 @property  BOOL subscriptionPurchaser
 @property  BOOL hasOfflineSlot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVSubscriptionStatus accountStatus]
  -[SSVSubscriptionStatus copyWithZone:]
  -[SSVSubscriptionStatus hasOfflineSlots]
  -[SSVSubscriptionStatus initWithXPCEncoding:]
  -[SSVSubscriptionStatus setCarrierBundlingErrorCode:]
  -[SSVSubscriptionStatus hasFamily]
  -[SSVSubscriptionStatus isEqualToStatus:]
  -[SSVSubscriptionStatus copyXPCEncoding]
  -[SSVSubscriptionStatus phoneNumber]
  -[SSVSubscriptionStatus setDiscoveryModeEligible:]
  -[SSVSubscriptionStatus setAccountStatus:]
  -[SSVSubscriptionStatus accountIdentifier]
  -[SSVSubscriptionStatus setPhoneNumber:]
  -[SSVSubscriptionStatus setAcceptedStoreTermsVersion:]
  -[SSVSubscriptionStatus setCarrierBundlingStatus:]
  -[SSVSubscriptionStatus setSubscriptionExpirationDate:]
  -[SSVSubscriptionStatus setFamilyOrganizer:]
  -[SSVSubscriptionStatus setFreeTrialIneligible:]
  -[SSVSubscriptionStatus setHasFamilyMembers:]
  -[SSVSubscriptionStatus setLatestStoreTermsVersion:]
  -[SSVSubscriptionStatus setSubscriptionPurchaser:]
  -[SSVSubscriptionStatus _setSubscribed:]
  -[SSVSubscriptionStatus setAccountPermissions:]
  -[SSVSubscriptionStatus setRawResponseData:]
  -[SSVSubscriptionStatus accountPermissions]
  -[SSVSubscriptionStatus acceptedStoreTermsVersion]
  -[SSVSubscriptionStatus isFamilyOrganizer]
  -[SSVSubscriptionStatus isFamilySubscription]
  -[SSVSubscriptionStatus isFreeTrialIneligible]
  -[SSVSubscriptionStatus hasFamilyMembers]
  -[SSVSubscriptionStatus latestStoreTermsVersion]
  -[SSVSubscriptionStatus isSubscriptionPurchaser]
  -[SSVSubscriptionStatus setValuesUsingStatusDictionary:]
  -[SSVSubscriptionStatus hasOfflineSlot]
  -[SSVSubscriptionStatus .cxx_destruct]
  -[SSVSubscriptionStatus isDiscoveryModeEligible]
  -[SSVSubscriptionStatus carrierBundlingErrorCode]
  -[SSVSubscriptionStatus cellularOperatorName]
  -[SSVSubscriptionStatus sessionIdentifier]
  -[SSVSubscriptionStatus setSessionIdentifier:]
  -[SSVSubscriptionStatus carrierBundlingStatus]
  -[SSVSubscriptionStatus initWithUserDefaultsRepresentation:]
  -[SSVSubscriptionStatus subscriptionExpirationDate]
  -[SSVSubscriptionStatus copyUserDefaultsRepresentation]
  -[SSVSubscriptionStatus resetAccountBasedProperties]
  -[SSVSubscriptionStatus resetCarrierBundlingProperties]
  -[SSVSubscriptionStatus setHasOfflineSlots:]
  -[SSVSubscriptionStatus isSubscribed]
  -[SSVSubscriptionStatus setHasFamily:]
  -[SSVSubscriptionStatus setSubscribed:]
  -[SSVSubscriptionStatus setFamilySubscription:]
  -[SSVSubscriptionStatus setCellularOperatorName:]
  -[SSVSubscriptionStatus rawResponseData]
  -[SSVSubscriptionStatus setAccountIdentifier:]


SSUpdatableAssetManifestJSONParser : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSUpdatableAssetManifestJSONParser parseJSONData:error:]


SSPaymentSheetPriceSectionItem : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *label
 @property  NSString *price

  // instance methods
  -[SSPaymentSheetPriceSectionItem copyWithZone:]
  -[SSPaymentSheetPriceSectionItem price]
  -[SSPaymentSheetPriceSectionItem initWithXPCEncoding:]
  -[SSPaymentSheetPriceSectionItem copyXPCEncoding]
  -[SSPaymentSheetPriceSectionItem _parseDictionary:withCaseControl:]
  -[SSPaymentSheetPriceSectionItem .cxx_destruct]
  -[SSPaymentSheetPriceSectionItem label]
  -[SSPaymentSheetPriceSectionItem setPrice:]
  -[SSPaymentSheetPriceSectionItem initWithDictionary:]
  -[SSPaymentSheetPriceSectionItem setLabel:]


SSLookupItemArtwork : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *lookupDictionary
 @property  long long height
 @property  long long width
 @property  NSURL *URL

  // instance methods
  -[SSLookupItemArtwork URLWithHeight:width:format:]
  -[SSLookupItemArtwork getRed:green:blue:alpha:forColorKind:]
  -[SSLookupItemArtwork URLWithHeight:width:]
  -[SSLookupItemArtwork dealloc]
  -[SSLookupItemArtwork width]
  -[SSLookupItemArtwork initWithLookupDictionary:]
  -[SSLookupItemArtwork URLWithHeight:width:cropStyle:format:]
  -[SSLookupItemArtwork height]
  -[SSLookupItemArtwork URL]
  -[SSLookupItemArtwork lookupDictionary]


SSURLSessionManager : NSObject /usr/lib/libc++.1.dylib <NSCacheDelegate, NSURLSessionDataDelegate>
 @property  NSObject<OS_dispatch_queue> *eventQueue
 @property  SSCircularBuffer *httpArchiveBuffer
 @property  SSMetricsController *metricsController
 @property  NSMutableDictionary *requestData
 @property  NSObject<OS_dispatch_queue> *requestDataQueue
 @property  NSMutableDictionary *taskMetrics
 @property  NSObject<OS_dispatch_queue> *taskMetricsQueue
 @property  NSMutableDictionary *responseData
 @property  NSObject<OS_dispatch_queue> *responseDataQueue
 @property  NSMutableDictionary *recordResponseMap
 @property  NSObject<OS_dispatch_queue> *recordResponseQueue
 @property  NSMutableDictionary *sendTimingDataMap
 @property  NSObject<OS_dispatch_queue> *sendTimingDataQueue
 @property  NSMutableDictionary *sessions
 @property  NSObject<OS_dispatch_queue> *sessionsQueue
 @property  NSMapTable *taskDelegates
 @property  NSObject<OS_dispatch_queue> *taskDelegatesQueue
 @property  unsigned long httpArchiveBufferSize
 @property  NSArray *customURLProtocols
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSURLSessionManager eventFromTimingData:delegate:task:error:]
  +[SSURLSessionManager _resolvedIPAddressFromTask:]
  +[SSURLSessionManager _localTimeIntervalToServerTimeInterval:]
  +[SSURLSessionManager _randomDouble]
  +[SSURLSessionManager _bagPerformanceValuesWithDelegate:]
  +[SSURLSessionManager _responseDateFromTask:delegate:]
  +[SSURLSessionManager eventFromTimingData:delegate:session:task:error:]
  +[SSURLSessionManager _timingDataMetricToServerTimeInterval:]
  +[SSURLSessionManager _fetchNetworkQualityReports]
  +[SSURLSessionManager eventFromTimingData:requestProperties:task:error:]
  +[SSURLSessionManager _shouldCreateLocalCache]
  +[SSURLSessionManager bagValueForKey:delegate:type:]
  +[SSURLSessionManager _fetchedFromCache:]
  +[SSURLSessionManager sharedManager]
  +[SSURLSessionManager _metricsDictionaryWithDelegate:]
  +[SSURLSessionManager _messageSizeFromTask:isRequest:delegate:]
  +[SSURLSessionManager eventFromTimingData:task:error:]
  +[SSURLSessionManager _tidStateForTask:delegate:]
  +[SSURLSessionManager _legacyBagValueForKey:]
  +[SSURLSessionManager _shouldCollectNetworkLogs]
  +[SSURLSessionManager eventFromTimingData:task:]
  +[SSURLSessionManager _DNSServerIPAddresses]

  // instance methods
  -[SSURLSessionManager taskMetrics]
  -[SSURLSessionManager _shouldDisableCellularForDelegate:]
  -[SSURLSessionManager eventQueue]
  -[SSURLSessionManager setTaskDelegates:]
  -[SSURLSessionManager URLSession:dataTask:didReceiveData:]
  -[SSURLSessionManager _setDelegate:forTask:]
  -[SSURLSessionManager responseData]
  -[SSURLSessionManager URLSession:task:didFinishCollectingMetrics:]
  -[SSURLSessionManager requestDataQueue]
  -[SSURLSessionManager init]
  -[SSURLSessionManager taskDelegates]
  -[SSURLSessionManager sendTimingDataMap]
  -[SSURLSessionManager setMetricsController:]
  -[SSURLSessionManager taskMetricsQueue]
  -[SSURLSessionManager _listenForLowMemoryWarning]
  -[SSURLSessionManager setHttpArchiveBufferSize:]
  -[SSURLSessionManager _setSendTimingData:forSessionTask:]
  -[SSURLSessionManager setSendTimingDataMap:]
  -[SSURLSessionManager _taskMetricsForSessionTask:]
  -[SSURLSessionManager dealloc]
  -[SSURLSessionManager setCustomURLProtocols:]
  -[SSURLSessionManager setTaskMetrics:]
  -[SSURLSessionManager _saveHTTPArchiveBufferToDiskDecompressed:]
  -[SSURLSessionManager _setAPSTopicWithTask:]
  -[SSURLSessionManager sendTimingDataQueue]
  -[SSURLSessionManager _shouldRequireCelluarForDelegate:]
  -[SSURLSessionManager .cxx_destruct]
  -[SSURLSessionManager _logAPSResultsWithTask:]
  -[SSURLSessionManager URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[SSURLSessionManager _removeResponseDataForSessionTask:]
  -[SSURLSessionManager URLSession:task:didReceiveChallenge:completionHandler:]
  -[SSURLSessionManager _PIDFromAuditTokenData:]
  -[SSURLSessionManager setRequestData:]
  -[SSURLSessionManager URLSession:task:needNewBodyStream:]
  -[SSURLSessionManager sessions]
  -[SSURLSessionManager URLSession:task:didCompleteWithError:]
  -[SSURLSessionManager _shouldRecordResponseBodyForDataTask:]
  -[SSURLSessionManager URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[SSURLSessionManager _sendTimingDataForSessionTask:]
  -[SSURLSessionManager _URLCacheForDelegate:]
  -[SSURLSessionManager _insertEventIntoDatabase:delegate:]
  -[SSURLSessionManager setResponseData:]
  -[SSURLSessionManager httpArchiveBufferSize]
  -[SSURLSessionManager URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[SSURLSessionManager setResponseDataQueue:]
  -[SSURLSessionManager flushHTTPArchiveBuffer]
  -[SSURLSessionManager _shouldSetCookiesForDelegate:]
  -[SSURLSessionManager dataTaskWithRequest:delegate:]
  -[SSURLSessionManager metricsController]
  -[SSURLSessionManager _removeDelegateForTask:]
  -[SSURLSessionManager _requestDataForSessionTask:]
  -[SSURLSessionManager requestData]
  -[SSURLSessionManager _setTaskMetrics:forSessionTask:]
  -[SSURLSessionManager _responseDataForSessionTask:]
  -[SSURLSessionManager taskDelegatesQueue]
  -[SSURLSessionManager setTaskMetricsQueue:]
  -[SSURLSessionManager sessionsQueue]
  -[SSURLSessionManager recordResponseQueue]
  -[SSURLSessionManager setSessions:]
  -[SSURLSessionManager _shouldEnableAPSRWithTask:]
  -[SSURLSessionManager setHttpArchiveBuffer:]
  -[SSURLSessionManager _logCacheHitForTask:metrics:]
  -[SSURLSessionManager setRequestDataQueue:]
  -[SSURLSessionManager setTaskDelegatesQueue:]
  -[SSURLSessionManager setEventQueue:]
  -[SSURLSessionManager _delegateForTask:]
  -[SSURLSessionManager responseDataQueue]
  -[SSURLSessionManager customURLProtocols]
  -[SSURLSessionManager setSendTimingDataQueue:]
  -[SSURLSessionManager _removeRecordResponseDataForSessionTask:]
  -[SSURLSessionManager _sessionConfigurationWithDelegate:collectTimingData:allowsTLSSessionTickets:]
  -[SSURLSessionManager _sessionIDWithDelegate:collectTimingData:allowsTLSSessionTickets:]
  -[SSURLSessionManager httpArchiveBuffer]
  -[SSURLSessionManager _appendResponseData:forSessionTask:]
  -[SSURLSessionManager setRecordResponseMap:]
  -[SSURLSessionManager _URLCacheIDForDelegate:]
  -[SSURLSessionManager _shouldEnableTLSSessionForDelegate:]
  -[SSURLSessionManager _sessionWithDelegate:collectTimingData:]
  -[SSURLSessionManager setSessionsQueue:]
  -[SSURLSessionManager setRecordResponseQueue:]
  -[SSURLSessionManager _setRequestData:forSessionTask:]
  -[SSURLSessionManager recordResponseMap]


SSVFairPlaySubscriptionStatus : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  BOOL hasSubscriptionLease
 @property  BOOL hasSubscriptionSlot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVFairPlaySubscriptionStatus initWithXPCEncoding:]
  -[SSVFairPlaySubscriptionStatus copyXPCEncoding]
  -[SSVFairPlaySubscriptionStatus hasSubscriptionLease]
  -[SSVFairPlaySubscriptionStatus setHasSubscriptionLease:]
  -[SSVFairPlaySubscriptionStatus hasSubscriptionSlot]
  -[SSVFairPlaySubscriptionStatus setHasSubscriptionSlot:]
  -[SSVFairPlaySubscriptionStatus isEqual:]


SSMetricsLoadURLEvent : SSMetricsMutableEvent
 @property  NSString *appleTimingApp
 @property  BOOL apsRelayAttempted
 @property  BOOL apsRelayDidFallback
 @property  BOOL apsRelayRequested
 @property  BOOL apsRelaySucceeded
 @property  NSString *clientCorrelationKey
 @property  NSString *clientError
 @property  double connectionEndTime
 @property  NSString *connectionInterface
 @property  BOOL connectionReused
 @property  unsigned long connectionStartNStatRXBytes
 @property  unsigned long connectionStartNStatTXBytes
 @property  unsigned long connectionStopNStatRXBytes
 @property  unsigned long connectionStopNStatTXBytes
 @property  double connectionStartTime
 @property  NSString *connectionType
 @property  double domainLookupEndTime
 @property  double domainLookupStartTime
 @property  NSString *DNSServers
 @property  NSString *edgeNodeCacheStatus
 @property  double fetchStartTime
 @property  BOOL cachedResponse
 @property  NSArray *networkQualityReports
 @property  NSString *originalApp
 @property  unsigned long redirectCount
 @property  double redirectEndTime
 @property  unsigned long requestMessageSize
 @property  double redirectStartTime
 @property  double requestStartTime
 @property  NSString *requestURL
 @property  NSString *resolvedIPAddress
 @property  NSString *responseDate
 @property  double responseEndTime
 @property  unsigned long responseMessageSize
 @property  double responseStartTime
 @property  double secureConnectionStartTime
 @property  long long statusCode
 @property  NSString *TIDState
 @property  BOOL TLSSessionTickets
 @property  double xpSessionDuration
 @property  BOOL xpSamplingForced
 @property  double xpSamplingPercentageUsers
 @property  double xpSamplingPercentageCachedResponses

  // class methods
  +[SSMetricsLoadURLEvent shouldLogTimingMetrics]
  +[SSMetricsLoadURLEvent _randomDouble]
  +[SSMetricsLoadURLEvent shouldCollectTimingDataWithSessionDuration:samplingPercentage:]
  +[SSMetricsLoadURLEvent shouldCollectTimingData]
  +[SSMetricsLoadURLEvent _timingMetricsWindowStartTime]
  +[SSMetricsLoadURLEvent _setTimingMetricsWindowStartTime:]
  +[SSMetricsLoadURLEvent shouldCollectTimingDataWithSessionDelegate:]
  +[SSMetricsLoadURLEvent shouldReportCachedEvent]
  +[SSMetricsLoadURLEvent shouldReportCachedEventWithSamplingPercentage:]

  // instance methods
  -[SSMetricsLoadURLEvent connectionEndTime]
  -[SSMetricsLoadURLEvent setConnectionStartTime:]
  -[SSMetricsLoadURLEvent clientError]
  -[SSMetricsLoadURLEvent setClientError:]
  -[SSMetricsLoadURLEvent setRedirectEndTime:]
  -[SSMetricsLoadURLEvent setXPSamplingPercentageUsers:]
  -[SSMetricsLoadURLEvent connectionReused]
  -[SSMetricsLoadURLEvent init]
  -[SSMetricsLoadURLEvent connectionType]
  -[SSMetricsLoadURLEvent xpSamplingForced]
  -[SSMetricsLoadURLEvent apsRelaySucceeded]
  -[SSMetricsLoadURLEvent edgeNodeCacheStatus]
  -[SSMetricsLoadURLEvent setConnectionType:]
  -[SSMetricsLoadURLEvent connectionStopNStatRXBytes]
  -[SSMetricsLoadURLEvent xpSessionDuration]
  -[SSMetricsLoadURLEvent setApsRelayDidFallback:]
  -[SSMetricsLoadURLEvent apsRelayDidFallback]
  -[SSMetricsLoadURLEvent setDNSServers:]
  -[SSMetricsLoadURLEvent setResponseDate:]
  -[SSMetricsLoadURLEvent setResponseStartTime:]
  -[SSMetricsLoadURLEvent xpSamplingPercentageUsers]
  -[SSMetricsLoadURLEvent connectionStartTime]
  -[SSMetricsLoadURLEvent originalApp]
  -[SSMetricsLoadURLEvent responseEndTime]
  -[SSMetricsLoadURLEvent setRequestStartTime:]
  -[SSMetricsLoadURLEvent setApsRelayAttempted:]
  -[SSMetricsLoadURLEvent apsRelayRequested]
  -[SSMetricsLoadURLEvent setApsRelayRequested:]
  -[SSMetricsLoadURLEvent responseMessageSize]
  -[SSMetricsLoadURLEvent setXPSamplingPercentageCachedResponses:]
  -[SSMetricsLoadURLEvent setResolvedIPAddress:]
  -[SSMetricsLoadURLEvent setXPSamplingForced:]
  -[SSMetricsLoadURLEvent DNSServers]
  -[SSMetricsLoadURLEvent setConnectionInterface:]
  -[SSMetricsLoadURLEvent setSecureConnectionStartTime:]
  -[SSMetricsLoadURLEvent setStatusCode:]
  -[SSMetricsLoadURLEvent setTIDState:]
  -[SSMetricsLoadURLEvent statusCode]
  -[SSMetricsLoadURLEvent setConnectionReused:]
  -[SSMetricsLoadURLEvent secureConnectionStartTime]
  -[SSMetricsLoadURLEvent networkQualityReports]
  -[SSMetricsLoadURLEvent setResponseMessageSize:]
  -[SSMetricsLoadURLEvent setConnectionStopNStatRXBytes:]
  -[SSMetricsLoadURLEvent TIDState]
  -[SSMetricsLoadURLEvent setRequestMessageSize:]
  -[SSMetricsLoadURLEvent setClientCorrelationKey:]
  -[SSMetricsLoadURLEvent setTLSSessionTickets:]
  -[SSMetricsLoadURLEvent responseStartTime]
  -[SSMetricsLoadURLEvent setDomainLookupEndTime:]
  -[SSMetricsLoadURLEvent domainLookupStartTime]
  -[SSMetricsLoadURLEvent redirectEndTime]
  -[SSMetricsLoadURLEvent setDomainLookupStartTime:]
  -[SSMetricsLoadURLEvent setOriginalApp:]
  -[SSMetricsLoadURLEvent setRedirectStartTime:]
  -[SSMetricsLoadURLEvent setNetworkQualityReports:]
  -[SSMetricsLoadURLEvent setRequestURL:]
  -[SSMetricsLoadURLEvent TLSSessionTickets]
  -[SSMetricsLoadURLEvent domainLookupEndTime]
  -[SSMetricsLoadURLEvent redirectStartTime]
  -[SSMetricsLoadURLEvent connectionStopNStatTXBytes]
  -[SSMetricsLoadURLEvent requestMessageSize]
  -[SSMetricsLoadURLEvent connectionStartNStatRXBytes]
  -[SSMetricsLoadURLEvent cachedResponse]
  -[SSMetricsLoadURLEvent setXPSessionDuration:]
  -[SSMetricsLoadURLEvent xpSamplingPercentageCachedResponses]
  -[SSMetricsLoadURLEvent setFetchStartTime:]
  -[SSMetricsLoadURLEvent redirectCount]
  -[SSMetricsLoadURLEvent setEdgeNodeCacheStatus:]
  -[SSMetricsLoadURLEvent responseDate]
  -[SSMetricsLoadURLEvent requestStartTime]
  -[SSMetricsLoadURLEvent setRedirectCount:]
  -[SSMetricsLoadURLEvent connectionStartNStatTXBytes]
  -[SSMetricsLoadURLEvent resolvedIPAddress]
  -[SSMetricsLoadURLEvent appleTimingApp]
  -[SSMetricsLoadURLEvent setConnectionEndTime:]
  -[SSMetricsLoadURLEvent setAppleTimingApp:]
  -[SSMetricsLoadURLEvent connectionInterface]
  -[SSMetricsLoadURLEvent fetchStartTime]
  -[SSMetricsLoadURLEvent clientCorrelationKey]
  -[SSMetricsLoadURLEvent setConnectionStartNStatRXBytes:]
  -[SSMetricsLoadURLEvent setCachedResponse:]
  -[SSMetricsLoadURLEvent setResponseEndTime:]
  -[SSMetricsLoadURLEvent apsRelayAttempted]
  -[SSMetricsLoadURLEvent setConnectionStartNStatTXBytes:]
  -[SSMetricsLoadURLEvent setApsRelaySucceeded:]
  -[SSMetricsLoadURLEvent setConnectionStopNStatTXBytes:]
  -[SSMetricsLoadURLEvent requestURL]


SSLookupItemOffer : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *lookupDictionary
 @property  NSString *buyParameters
 @property  NSString *formattedPrice
 @property  NSString *offerType
 @property  NSNumber *price
 @property  NSString *subscriptionType

  // instance methods
  -[SSLookupItemOffer price]
  -[SSLookupItemOffer subscriptionType]
  -[SSLookupItemOffer dealloc]
  -[SSLookupItemOffer initWithLookupDictionary:]
  -[SSLookupItemOffer formattedPrice]
  -[SSLookupItemOffer offerType]
  -[SSLookupItemOffer actionTextForType:]
  -[SSLookupItemOffer lookupDictionary]
  -[SSLookupItemOffer buyParameters]


SSVMediaSocialAdminPermissionsCoordinator : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL isCurrentUserAdmin
 @property  double refreshPeriod

  // class methods
  +[SSVMediaSocialAdminPermissionsCoordinator sharedCoordinator]

  // instance methods
  -[SSVMediaSocialAdminPermissionsCoordinator init]
  -[SSVMediaSocialAdminPermissionsCoordinator getAdminStatusWithOptions:resultBlock:]
  -[SSVMediaSocialAdminPermissionsCoordinator refreshPeriod]
  -[SSVMediaSocialAdminPermissionsCoordinator _statusIsFresh:]
  -[SSVMediaSocialAdminPermissionsCoordinator .cxx_destruct]
  -[SSVMediaSocialAdminPermissionsCoordinator isCurrentUserAdmin]
  -[SSVMediaSocialAdminPermissionsCoordinator reset]
  -[SSVMediaSocialAdminPermissionsCoordinator getAdminStatusAndWaitWithOptions:resultBlock:]
  -[SSVMediaSocialAdminPermissionsCoordinator _setAdminStatus:forAccountID:]
  -[SSVMediaSocialAdminPermissionsCoordinator setRefreshPeriod:]
  -[SSVMediaSocialAdminPermissionsCoordinator _adminStatusForAccountID:]


SSVPBPlayActivityEvent : PBCodable /usr/lib/libobjc.A.dylib <NSCopying>
 @property  BOOL hasEventType
 @property  int eventType
 @property  BOOL hasReasonHintType
 @property  int reasonHintType
 @property  BOOL hasSubscriptionAdamID
 @property  long long subscriptionAdamID
 @property  BOOL hasPurchasedAdamID
 @property  long long purchasedAdamID
 @property  BOOL hasRadioAdamID
 @property  long long radioAdamID
 @property  BOOL hasItemCloudID
 @property  unsigned long itemCloudID
 @property  BOOL hasLyricsID
 @property  NSString *lyricsID
 @property  BOOL hasEquivalencySourceAdamID
 @property  long long equivalencySourceAdamID
 @property  BOOL hasContainerAdamID
 @property  long long containerAdamID
 @property  BOOL hasGlobalPlaylistID
 @property  NSString *globalPlaylistID
 @property  BOOL hasStationHash
 @property  NSString *stationHash
 @property  BOOL hasStationStringID
 @property  NSString *stationStringID
 @property  BOOL hasStationID
 @property  long long stationID
 @property  BOOL hasCloudAlbumID
 @property  NSString *cloudAlbumID
 @property  BOOL hasCloudPlaylistID
 @property  unsigned long cloudPlaylistID
 @property  BOOL hasPlaylistVersionHash
 @property  NSString *playlistVersionHash
 @property  BOOL hasContainerType
 @property  int containerType
 @property  BOOL hasDeviceName
 @property  NSString *deviceName
 @property  BOOL hasEndReasonType
 @property  int endReasonType
 @property  BOOL hasEventDateTimestamp
 @property  double eventDateTimestamp
 @property  BOOL hasFeatureName
 @property  NSString *featureName
 @property  BOOL hasItemDuration
 @property  double itemDuration
 @property  BOOL hasItemEndTime
 @property  double itemEndTime
 @property  BOOL hasItemStartTime
 @property  double itemStartTime
 @property  BOOL hasItemType
 @property  int itemType
 @property  BOOL hasMediaType
 @property  int mediaType
 @property  BOOL hasOffline
 @property  BOOL offline
 @property  BOOL hasPersistentID
 @property  long long persistentID
 @property  BOOL hasSBEnabled
 @property  BOOL sBEnabled
 @property  BOOL hasSourceType
 @property  int sourceType
 @property  BOOL hasStoreAccountID
 @property  unsigned long storeAccountID
 @property  BOOL hasTimedMetadata
 @property  NSData *timedMetadata
 @property  BOOL hasTrackInfo
 @property  NSData *trackInfo
 @property  BOOL hasRecommendationData
 @property  NSData *recommendationData
 @property  BOOL hasStoreFrontID
 @property  NSString *storeFrontID
 @property  BOOL hasBuildVersion
 @property  NSString *buildVersion
 @property  BOOL hasRequestingBundleIdentifier
 @property  NSString *requestingBundleIdentifier
 @property  BOOL hasRequestingBundleVersion
 @property  NSString *requestingBundleVersion
 @property  BOOL hasEnqueuerProperties
 @property  SSVPBPlayActivityEnqueuerProperties *enqueuerProperties
 @property  BOOL hasHouseholdID
 @property  NSString *householdID
 @property  BOOL hasPrivateListeningEnabled
 @property  BOOL privateListeningEnabled
 @property  BOOL hasSiriInitiated
 @property  BOOL siriInitiated
 @property  BOOL hasSystemReleaseType
 @property  int systemReleaseType
 @property  BOOL hasEventTimeZoneName
 @property  NSString *eventTimeZoneName
 @property  BOOL hasDisplayType
 @property  int displayType
 @property  BOOL hasCharacterDisplayedCount
 @property  long long characterDisplayedCount
 @property  BOOL hasLyricLanguage
 @property  NSString *lyricLanguage
 @property  BOOL hasContainerID
 @property  NSString *containerID
 @property  BOOL hasPersonalizedContainerID
 @property  NSString *personalizedContainerID
 @property  BOOL hasStoreID
 @property  NSString *storeID
 @property  BOOL hasExternalID
 @property  NSString *externalID
 @property  BOOL hasTvShowPurchasedAdamID
 @property  long long tvShowPurchasedAdamID
 @property  BOOL hasTvShowSubscriptionAdamID
 @property  long long tvShowSubscriptionAdamID
 @property  BOOL hasInternalBuild
 @property  BOOL internalBuild
 @property  BOOL hasEventSecondsFromGMT
 @property  double eventSecondsFromGMT

  // instance methods
  -[SSVPBPlayActivityEvent storeID]
  -[SSVPBPlayActivityEvent internalBuild]
  -[SSVPBPlayActivityEvent copyWithZone:]
  -[SSVPBPlayActivityEvent setPrivateListeningEnabled:]
  -[SSVPBPlayActivityEvent setMediaType:]
  -[SSVPBPlayActivityEvent setDisplayType:]
  -[SSVPBPlayActivityEvent setContainerID:]
  -[SSVPBPlayActivityEvent mediaType]
  -[SSVPBPlayActivityEvent StringAsEventType:]
  -[SSVPBPlayActivityEvent setBuildVersion:]
  -[SSVPBPlayActivityEvent containerType]
  -[SSVPBPlayActivityEvent deviceName]
  -[SSVPBPlayActivityEvent setEventType:]
  -[SSVPBPlayActivityEvent containerID]
  -[SSVPBPlayActivityEvent itemType]
  -[SSVPBPlayActivityEvent requestingBundleIdentifier]
  -[SSVPBPlayActivityEvent hasEventType]
  -[SSVPBPlayActivityEvent eventTypeAsString:]
  -[SSVPBPlayActivityEvent setHasEventType:]
  -[SSVPBPlayActivityEvent setContainerType:]
  -[SSVPBPlayActivityEvent setRequestingBundleIdentifier:]
  -[SSVPBPlayActivityEvent sourceType]
  -[SSVPBPlayActivityEvent setInternalBuild:]
  -[SSVPBPlayActivityEvent hasDeviceName]
  -[SSVPBPlayActivityEvent requestingBundleVersion]
  -[SSVPBPlayActivityEvent setPersistentID:]
  -[SSVPBPlayActivityEvent setStoreAccountID:]
  -[SSVPBPlayActivityEvent setExternalID:]
  -[SSVPBPlayActivityEvent hasDisplayType]
  -[SSVPBPlayActivityEvent setHasDisplayType:]
  -[SSVPBPlayActivityEvent displayTypeAsString:]
  -[SSVPBPlayActivityEvent setRequestingBundleVersion:]
  -[SSVPBPlayActivityEvent StringAsDisplayType:]
  -[SSVPBPlayActivityEvent buildVersion]
  -[SSVPBPlayActivityEvent .cxx_destruct]
  -[SSVPBPlayActivityEvent setHasReasonHintType:]
  -[SSVPBPlayActivityEvent reasonHintTypeAsString:]
  -[SSVPBPlayActivityEvent StringAsReasonHintType:]
  -[SSVPBPlayActivityEvent setHasSubscriptionAdamID:]
  -[SSVPBPlayActivityEvent setHasPurchasedAdamID:]
  -[SSVPBPlayActivityEvent setHasRadioAdamID:]
  -[SSVPBPlayActivityEvent setHasItemCloudID:]
  -[SSVPBPlayActivityEvent setHasEquivalencySourceAdamID:]
  -[SSVPBPlayActivityEvent setHasContainerAdamID:]
  -[SSVPBPlayActivityEvent setHasStationID:]
  -[SSVPBPlayActivityEvent setHasCloudPlaylistID:]
  -[SSVPBPlayActivityEvent setHasContainerType:]
  -[SSVPBPlayActivityEvent containerTypeAsString:]
  -[SSVPBPlayActivityEvent StringAsContainerType:]
  -[SSVPBPlayActivityEvent setHasEndReasonType:]
  -[SSVPBPlayActivityEvent endReasonTypeAsString:]
  -[SSVPBPlayActivityEvent StringAsEndReasonType:]
  -[SSVPBPlayActivityEvent setHasEventDateTimestamp:]
  -[SSVPBPlayActivityEvent setHasItemDuration:]
  -[SSVPBPlayActivityEvent setHasItemEndTime:]
  -[SSVPBPlayActivityEvent setHasItemStartTime:]
  -[SSVPBPlayActivityEvent setHasOffline:]
  -[SSVPBPlayActivityEvent setHasSiriInitiated:]
  -[SSVPBPlayActivityEvent setHasCharacterDisplayedCount:]
  -[SSVPBPlayActivityEvent setTvShowPurchasedAdamID:]
  -[SSVPBPlayActivityEvent setHasTvShowPurchasedAdamID:]
  -[SSVPBPlayActivityEvent hasTvShowPurchasedAdamID]
  -[SSVPBPlayActivityEvent storeFrontID]
  -[SSVPBPlayActivityEvent hasMediaType]
  -[SSVPBPlayActivityEvent setTvShowSubscriptionAdamID:]
  -[SSVPBPlayActivityEvent setHasTvShowSubscriptionAdamID:]
  -[SSVPBPlayActivityEvent hasTvShowSubscriptionAdamID]
  -[SSVPBPlayActivityEvent setHasInternalBuild:]
  -[SSVPBPlayActivityEvent setEventSecondsFromGMT:]
  -[SSVPBPlayActivityEvent setHasEventSecondsFromGMT:]
  -[SSVPBPlayActivityEvent tvShowPurchasedAdamID]
  -[SSVPBPlayActivityEvent tvShowSubscriptionAdamID]
  -[SSVPBPlayActivityEvent eventType]
  -[SSVPBPlayActivityEvent globalPlaylistID]
  -[SSVPBPlayActivityEvent setGlobalPlaylistID:]
  -[SSVPBPlayActivityEvent itemTypeAsString:]
  -[SSVPBPlayActivityEvent StringAsItemType:]
  -[SSVPBPlayActivityEvent hasItemType]
  -[SSVPBPlayActivityEvent setHasItemType:]
  -[SSVPBPlayActivityEvent offline]
  -[SSVPBPlayActivityEvent setStationStringID:]
  -[SSVPBPlayActivityEvent lyricsID]
  -[SSVPBPlayActivityEvent setOffline:]
  -[SSVPBPlayActivityEvent setItemType:]
  -[SSVPBPlayActivityEvent sourceTypeAsString:]
  -[SSVPBPlayActivityEvent StringAsSourceType:]
  -[SSVPBPlayActivityEvent hasSourceType]
  -[SSVPBPlayActivityEvent setHasSourceType:]
  -[SSVPBPlayActivityEvent enqueuerProperties]
  -[SSVPBPlayActivityEvent itemEndTime]
  -[SSVPBPlayActivityEvent itemDuration]
  -[SSVPBPlayActivityEvent recommendationData]
  -[SSVPBPlayActivityEvent itemStartTime]
  -[SSVPBPlayActivityEvent householdID]
  -[SSVPBPlayActivityEvent personalizedContainerID]
  -[SSVPBPlayActivityEvent reasonHintType]
  -[SSVPBPlayActivityEvent radioAdamID]
  -[SSVPBPlayActivityEvent playlistVersionHash]
  -[SSVPBPlayActivityEvent cloudPlaylistID]
  -[SSVPBPlayActivityEvent storeAccountID]
  -[SSVPBPlayActivityEvent setSourceType:]
  -[SSVPBPlayActivityEvent timedMetadata]
  -[SSVPBPlayActivityEvent displayType]
  -[SSVPBPlayActivityEvent setDeviceName:]
  -[SSVPBPlayActivityEvent setStoreID:]
  -[SSVPBPlayActivityEvent readFrom:]
  -[SSVPBPlayActivityEvent setLyricsID:]
  -[SSVPBPlayActivityEvent setStationHash:]
  -[SSVPBPlayActivityEvent setStationID:]
  -[SSVPBPlayActivityEvent setPurchasedAdamID:]
  -[SSVPBPlayActivityEvent setSubscriptionAdamID:]
  -[SSVPBPlayActivityEvent setCloudAlbumID:]
  -[SSVPBPlayActivityEvent setHasMediaType:]
  -[SSVPBPlayActivityEvent stationHash]
  -[SSVPBPlayActivityEvent stationStringID]
  -[SSVPBPlayActivityEvent cloudAlbumID]
  -[SSVPBPlayActivityEvent writeTo:]
  -[SSVPBPlayActivityEvent isEqual:]
  -[SSVPBPlayActivityEvent purchasedAdamID]
  -[SSVPBPlayActivityEvent subscriptionAdamID]
  -[SSVPBPlayActivityEvent stationID]
  -[SSVPBPlayActivityEvent setSBEnabled:]
  -[SSVPBPlayActivityEvent persistentID]
  -[SSVPBPlayActivityEvent sBEnabled]
  -[SSVPBPlayActivityEvent hasSBEnabled]
  -[SSVPBPlayActivityEvent externalID]
  -[SSVPBPlayActivityEvent hasBuildVersion]
  -[SSVPBPlayActivityEvent systemReleaseType]
  -[SSVPBPlayActivityEvent setSystemReleaseType:]
  -[SSVPBPlayActivityEvent setHasSystemReleaseType:]
  -[SSVPBPlayActivityEvent hasSystemReleaseType]
  -[SSVPBPlayActivityEvent systemReleaseTypeAsString:]
  -[SSVPBPlayActivityEvent setHasSBEnabled:]
  -[SSVPBPlayActivityEvent StringAsSystemReleaseType:]
  -[SSVPBPlayActivityEvent setHasStoreAccountID:]
  -[SSVPBPlayActivityEvent hasStoreAccountID]
  -[SSVPBPlayActivityEvent hasStoreFrontID]
  -[SSVPBPlayActivityEvent setHasPrivateListeningEnabled:]
  -[SSVPBPlayActivityEvent hasPrivateListeningEnabled]
  -[SSVPBPlayActivityEvent copyTo:]
  -[SSVPBPlayActivityEvent dictionaryRepresentation]
  -[SSVPBPlayActivityEvent setStoreFrontID:]
  -[SSVPBPlayActivityEvent equivalencySourceAdamID]
  -[SSVPBPlayActivityEvent setEquivalencySourceAdamID:]
  -[SSVPBPlayActivityEvent mergeFrom:]
  -[SSVPBPlayActivityEvent featureName]
  -[SSVPBPlayActivityEvent privateListeningEnabled]
  -[SSVPBPlayActivityEvent hasContainerType]
  -[SSVPBPlayActivityEvent hasOffline]
  -[SSVPBPlayActivityEvent hasEndReasonType]
  -[SSVPBPlayActivityEvent hasEventDateTimestamp]
  -[SSVPBPlayActivityEvent eventDateTimestamp]
  -[SSVPBPlayActivityEvent hasEventTimeZoneName]
  -[SSVPBPlayActivityEvent eventTimeZoneName]
  -[SSVPBPlayActivityEvent hasEventSecondsFromGMT]
  -[SSVPBPlayActivityEvent eventSecondsFromGMT]
  -[SSVPBPlayActivityEvent hasFeatureName]
  -[SSVPBPlayActivityEvent hasItemDuration]
  -[SSVPBPlayActivityEvent hasItemEndTime]
  -[SSVPBPlayActivityEvent hasItemStartTime]
  -[SSVPBPlayActivityEvent hasCharacterDisplayedCount]
  -[SSVPBPlayActivityEvent characterDisplayedCount]
  -[SSVPBPlayActivityEvent hasLyricLanguage]
  -[SSVPBPlayActivityEvent lyricLanguage]
  -[SSVPBPlayActivityEvent hasRecommendationData]
  -[SSVPBPlayActivityEvent hasTimedMetadata]
  -[SSVPBPlayActivityEvent hasTrackInfo]
  -[SSVPBPlayActivityEvent hasHouseholdID]
  -[SSVPBPlayActivityEvent setHasPersistentID:]
  -[SSVPBPlayActivityEvent hasPersistentID]
  -[SSVPBPlayActivityEvent hasReasonHintType]
  -[SSVPBPlayActivityEvent hasRequestingBundleVersion]
  -[SSVPBPlayActivityEvent hasRequestingBundleIdentifier]
  -[SSVPBPlayActivityEvent hasInternalBuild]
  -[SSVPBPlayActivityEvent hasEnqueuerProperties]
  -[SSVPBPlayActivityEvent hasSiriInitiated]
  -[SSVPBPlayActivityEvent siriInitiated]
  -[SSVPBPlayActivityEvent hasContainerID]
  -[SSVPBPlayActivityEvent hasExternalID]
  -[SSVPBPlayActivityEvent hasPersonalizedContainerID]
  -[SSVPBPlayActivityEvent hasStoreID]
  -[SSVPBPlayActivityEvent hasContainerAdamID]
  -[SSVPBPlayActivityEvent containerAdamID]
  -[SSVPBPlayActivityEvent hasGlobalPlaylistID]
  -[SSVPBPlayActivityEvent hasPlaylistVersionHash]
  -[SSVPBPlayActivityEvent setPlaylistVersionHash:]
  -[SSVPBPlayActivityEvent hasStationHash]
  -[SSVPBPlayActivityEvent hasStationStringID]
  -[SSVPBPlayActivityEvent hasStationID]
  -[SSVPBPlayActivityEvent hasCloudAlbumID]
  -[SSVPBPlayActivityEvent hasCloudPlaylistID]
  -[SSVPBPlayActivityEvent setCloudPlaylistID:]
  -[SSVPBPlayActivityEvent hasSubscriptionAdamID]
  -[SSVPBPlayActivityEvent hasPurchasedAdamID]
  -[SSVPBPlayActivityEvent hasRadioAdamID]
  -[SSVPBPlayActivityEvent setRadioAdamID:]
  -[SSVPBPlayActivityEvent hasItemCloudID]
  -[SSVPBPlayActivityEvent itemCloudID]
  -[SSVPBPlayActivityEvent hasLyricsID]
  -[SSVPBPlayActivityEvent endReasonType]
  -[SSVPBPlayActivityEvent setEndReasonType:]
  -[SSVPBPlayActivityEvent hasEquivalencySourceAdamID]
  -[SSVPBPlayActivityEvent setEventDateTimestamp:]
  -[SSVPBPlayActivityEvent setEventTimeZoneName:]
  -[SSVPBPlayActivityEvent setFeatureName:]
  -[SSVPBPlayActivityEvent setItemDuration:]
  -[SSVPBPlayActivityEvent setItemEndTime:]
  -[SSVPBPlayActivityEvent setItemStartTime:]
  -[SSVPBPlayActivityEvent setLyricLanguage:]
  -[SSVPBPlayActivityEvent setCharacterDisplayedCount:]
  -[SSVPBPlayActivityEvent setRecommendationData:]
  -[SSVPBPlayActivityEvent setTimedMetadata:]
  -[SSVPBPlayActivityEvent setTrackInfo:]
  -[SSVPBPlayActivityEvent setEnqueuerProperties:]
  -[SSVPBPlayActivityEvent setHouseholdID:]
  -[SSVPBPlayActivityEvent setSiriInitiated:]
  -[SSVPBPlayActivityEvent setPersonalizedContainerID:]
  -[SSVPBPlayActivityEvent setReasonHintType:]
  -[SSVPBPlayActivityEvent setContainerAdamID:]
  -[SSVPBPlayActivityEvent setItemCloudID:]
  -[SSVPBPlayActivityEvent trackInfo]
  -[SSVPBPlayActivityEvent mediaTypeAsString:]
  -[SSVPBPlayActivityEvent StringAsMediaType:]


SSVBarrierOperationQueue : NSOperationQueue /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
  // instance methods
  -[SSVBarrierOperationQueue addOperations:waitUntilFinished:]
  -[SSVBarrierOperationQueue addOperation:]
  -[SSVBarrierOperationQueue addBarrierOperation:]
  -[SSVBarrierOperationQueue addOperationWithBlock:]


SSSoftwareUpdatesStore : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSSoftwareUpdatesStore init]
  -[SSSoftwareUpdatesStore dealloc]
  -[SSSoftwareUpdatesStore .cxx_destruct]
  -[SSSoftwareUpdatesStore clearExpiredUpdateHistoryWithCompletionBlock:]
  -[SSSoftwareUpdatesStore getUpdatesWithCompletionBlock:]
  -[SSSoftwareUpdatesStore removeUpdateBulletins]
  -[SSSoftwareUpdatesStore hideApplicationBadgeForPendingUpdates]
  -[SSSoftwareUpdatesStore showApplicationBadgeForPendingUpdates]
  -[SSSoftwareUpdatesStore reloadFromServerWithCompletionBlock:]


SSVPlaybackLeaseConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long leaseType
 @property  NSURL *beginLeaseURL
 @property  NSURL *certificateURL
 @property  NSURL *getAssetURL
 @property  NSURL *refreshLeaseURL
 @property  NSURL *pastisCertificateURL
 @property  NSURL *pastisKeyServerURL
 @property  NSURL *provisionMachineURL
 @property  NSURL *syncMachineURL
 @property  NSString *storeFrontSuffix

  // instance methods
  -[SSVPlaybackLeaseConfiguration copyWithZone:]
  -[SSVPlaybackLeaseConfiguration storeFrontSuffix]
  -[SSVPlaybackLeaseConfiguration initWithURLBagDictionary:]
  -[SSVPlaybackLeaseConfiguration .cxx_destruct]
  -[SSVPlaybackLeaseConfiguration setGetAssetURL:]
  -[SSVPlaybackLeaseConfiguration setProvisionMachineURL:]
  -[SSVPlaybackLeaseConfiguration setRefreshLeaseURL:]
  -[SSVPlaybackLeaseConfiguration initWithCertificateURL:leaseType:leaseURL:pastisKeyServerURL:provisionMachineURL:storeFrontSuffix:syncMachineURL:]
  -[SSVPlaybackLeaseConfiguration initWithURLBagDictionary:leaseType:]
  -[SSVPlaybackLeaseConfiguration setBeginLeaseURL:]
  -[SSVPlaybackLeaseConfiguration setSyncMachineURL:]
  -[SSVPlaybackLeaseConfiguration setPastisKeyServerURL:]
  -[SSVPlaybackLeaseConfiguration setPastisCertificateURL:]
  -[SSVPlaybackLeaseConfiguration initWithCertificateURL:leaseURL:pastisKeyServerURL:provisionMachineURL:storeFrontSuffix:syncMachineURL:]
  -[SSVPlaybackLeaseConfiguration provisionMachineURL]
  -[SSVPlaybackLeaseConfiguration pastisKeyServerURL]
  -[SSVPlaybackLeaseConfiguration syncMachineURL]
  -[SSVPlaybackLeaseConfiguration setStoreFrontSuffix:]
  -[SSVPlaybackLeaseConfiguration certificateURL]
  -[SSVPlaybackLeaseConfiguration setCertificateURL:]
  -[SSVPlaybackLeaseConfiguration pastisCertificateURL]
  -[SSVPlaybackLeaseConfiguration getAssetURL]
  -[SSVPlaybackLeaseConfiguration beginLeaseURL]
  -[SSVPlaybackLeaseConfiguration refreshLeaseURL]
  -[SSVPlaybackLeaseConfiguration leaseType]


SSFamilyCircleRequest : SSRequest <SSXPCCoding>
 @property  long long authenticationPromptStyle
 @property  BOOL fetchITunesAccountNames
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSFamilyCircleRequest setAuthenticationPromptStyle:]
  -[SSFamilyCircleRequest initWithXPCEncoding:]
  -[SSFamilyCircleRequest copyXPCEncoding]
  -[SSFamilyCircleRequest authenticationPromptStyle]
  -[SSFamilyCircleRequest fetchITunesAccountNames]
  -[SSFamilyCircleRequest setFetchITunesAccountNames:]
  -[SSFamilyCircleRequest startWithCompletionBlock:]
  -[SSFamilyCircleRequest startWithResponseBlock:]


SSFamilyCircleResponse : NSObject /usr/lib/libc++.1.dylib
 @property  SSFamilyCircle *familyCircle

  // instance methods
  -[SSFamilyCircleResponse .cxx_destruct]
  -[SSFamilyCircleResponse familyCircle]
  -[SSFamilyCircleResponse setFamilyCircle:]


SSVPushNotificationParameters : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding, NSCopying>
 @property  NSNumber *accountIdentifier
 @property  NSString *environmentName
 @property  NSArray *mediaKinds
 @property  NSString *notificationType
 @property  NSDictionary *putParameters
 @property  long long requestType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVPushNotificationParameters copyWithZone:]
  -[SSVPushNotificationParameters setRequestType:]
  -[SSVPushNotificationParameters initWithXPCEncoding:]
  -[SSVPushNotificationParameters notificationType]
  -[SSVPushNotificationParameters init]
  -[SSVPushNotificationParameters copyXPCEncoding]
  -[SSVPushNotificationParameters accountIdentifier]
  -[SSVPushNotificationParameters setNotificationType:]
  -[SSVPushNotificationParameters requestType]
  -[SSVPushNotificationParameters .cxx_destruct]
  -[SSVPushNotificationParameters valueForParameter:]
  -[SSVPushNotificationParameters mediaKinds]
  -[SSVPushNotificationParameters setPutParameters:]
  -[SSVPushNotificationParameters setEnvironmentName:]
  -[SSVPushNotificationParameters setValue:forParameter:]
  -[SSVPushNotificationParameters putParameters]
  -[SSVPushNotificationParameters environmentName]
  -[SSVPushNotificationParameters _copyParametersDictionary]
  -[SSVPushNotificationParameters setAccountIdentifier:]
  -[SSVPushNotificationParameters setMediaKinds:]


SSRentalSyncRequest : SSRequest <SSXPCCoding>
 @property  NSArray *sinfs
 @property  NSNumber *accountIdentifier
 @property  NSNumber *rentalKeyIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSRentalSyncRequest initWithXPCEncoding:]
  -[SSRentalSyncRequest startWithConnectionResponseBlock:]
  -[SSRentalSyncRequest sinfs]
  -[SSRentalSyncRequest initWithAccountIdentifier:rentalKeyIdentifier:]
  -[SSRentalSyncRequest copyXPCEncoding]
  -[SSRentalSyncRequest initWithSinfs:]
  -[SSRentalSyncRequest rentalKeyIdentifier]
  -[SSRentalSyncRequest accountIdentifier]
  -[SSRentalSyncRequest .cxx_destruct]
  -[SSRentalSyncRequest initWithAccountIdentifier:]


SSVPlayActivityEnqueuerProperties : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *buildVersion
 @property  NSNumber *privateListeningEnabled
 @property  NSString *deviceGUID
 @property  NSString *deviceName
 @property  NSTimeZone *timeZone
 @property  long long systemReleaseType
 @property  BOOL SBEnabled
 @property  unsigned long storeAccountID
 @property  NSString *storeFrontID

  // class methods
  +[SSVPlayActivityEnqueuerProperties supportsSecureCoding]

  // instance methods
  -[SSVPlayActivityEnqueuerProperties isPrivateListeningEnabled]
  -[SSVPlayActivityEnqueuerProperties copyWithZone:]
  -[SSVPlayActivityEnqueuerProperties timeZone]
  -[SSVPlayActivityEnqueuerProperties deviceName]
  -[SSVPlayActivityEnqueuerProperties buildVersion]
  -[SSVPlayActivityEnqueuerProperties .cxx_destruct]
  -[SSVPlayActivityEnqueuerProperties storeFrontID]
  -[SSVPlayActivityEnqueuerProperties encodeWithCoder:]
  -[SSVPlayActivityEnqueuerProperties isSBEnabled]
  -[SSVPlayActivityEnqueuerProperties _copyWithClass:zone:]
  -[SSVPlayActivityEnqueuerProperties storeAccountID]
  -[SSVPlayActivityEnqueuerProperties systemReleaseType]
  -[SSVPlayActivityEnqueuerProperties deviceGUID]
  -[SSVPlayActivityEnqueuerProperties mutableCopyWithZone:]
  -[SSVPlayActivityEnqueuerProperties initWithCoder:]


SSVMutablePlayActivityEnqueuerProperties : SSVPlayActivityEnqueuerProperties
 @property  NSString *buildVersion
 @property  NSString *deviceGUID
 @property  NSString *deviceName
 @property  NSNumber *privateListeningEnabled
 @property  NSTimeZone *timeZone
 @property  long long systemReleaseType
 @property  BOOL SBEnabled
 @property  unsigned long storeAccountID
 @property  NSString *storeFrontID

  // instance methods
  -[SSVMutablePlayActivityEnqueuerProperties copyWithZone:]
  -[SSVMutablePlayActivityEnqueuerProperties setPrivateListeningEnabled:]
  -[SSVMutablePlayActivityEnqueuerProperties setBuildVersion:]
  -[SSVMutablePlayActivityEnqueuerProperties setStoreAccountID:]
  -[SSVMutablePlayActivityEnqueuerProperties setTimeZone:]
  -[SSVMutablePlayActivityEnqueuerProperties setDeviceName:]
  -[SSVMutablePlayActivityEnqueuerProperties setSBEnabled:]
  -[SSVMutablePlayActivityEnqueuerProperties setDeviceGUID:]
  -[SSVMutablePlayActivityEnqueuerProperties setSystemReleaseType:]
  -[SSVMutablePlayActivityEnqueuerProperties setStoreFrontID:]
  -[SSVMutablePlayActivityEnqueuerProperties mutableCopyWithZone:]


SSVDirectUploadQueue : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *uploadKinds

  // instance methods
  -[SSVDirectUploadQueue init]
  -[SSVDirectUploadQueue dealloc]
  -[SSVDirectUploadQueue .cxx_destruct]
  -[SSVDirectUploadQueue uploadKinds]
  -[SSVDirectUploadQueue initWithUploadKinds:]
  -[SSVDirectUploadQueue _establishInboundConnection]
  -[SSVDirectUploadQueue _sendSimpleMessage:completionBlock:]
  -[SSVDirectUploadQueue _outboundConnection]
  -[SSVDirectUploadQueue _handleInboundMessage:connection:]
  -[SSVDirectUploadQueue _sendObserversUploadsDidChange]
  -[SSVDirectUploadQueue _handleAddUploadsMessage:]
  -[SSVDirectUploadQueue addUploadObserver:]
  -[SSVDirectUploadQueue _handleChangeUploadsMessage:]
  -[SSVDirectUploadQueue _handleRemoveUploadsMessage:]
  -[SSVDirectUploadQueue cancelAllUploadsWithCompletionBlock:]
  -[SSVDirectUploadQueue cancelUploads:completionBlock:]
  -[SSVDirectUploadQueue removeUploadObserver:]
  -[SSVDirectUploadQueue getUploadsWithCompletionBlock:]
  -[SSVDirectUploadQueue pauseAllUploadsWithCompletionBlock:]
  -[SSVDirectUploadQueue pauseUploads:completionBlock:]
  -[SSVDirectUploadQueue resumeAllUploadsWithCompletionBlock:]
  -[SSVDirectUploadQueue resumeUploads:completionBlock:]


SSSoftwareUpdate : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *updateDictionary
 @property  NSString *bundleIdentifier
 @property  NSDate *installDate
 @property  long long parentalControlsRank
 @property  long long storeItemIdentifier
 @property  long long updateState

  // instance methods
  -[SSSoftwareUpdate dealloc]
  -[SSSoftwareUpdate updateState]
  -[SSSoftwareUpdate updateDictionary]
  -[SSSoftwareUpdate initWithUpdateDictionary:]
  -[SSSoftwareUpdate parentalControlsRank]
  -[SSSoftwareUpdate setUpdateState:]
  -[SSSoftwareUpdate installDate]
  -[SSSoftwareUpdate bundleIdentifier]
  -[SSSoftwareUpdate storeItemIdentifier]
  -[SSSoftwareUpdate setInstallDate:]


SSXPCData : NSData /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSObject<OS_xpc_object> *xpcData

  // instance methods
  -[SSXPCData copyWithZone:]
  -[SSXPCData bytes]
  -[SSXPCData length]
  -[SSXPCData dealloc]
  -[SSXPCData xpcData]
  -[SSXPCData initWithXPCData:]


SSVPlayActivityEventContainerIDs : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  long long adamID
 @property  NSString *cloudAlbumID
 @property  unsigned long cloudPlaylistID
 @property  NSString *globalPlaylistID
 @property  NSString *playlistVersionHash
 @property  NSString *stationHash
 @property  NSString *stationStringID
 @property  long long stationID

  // class methods
  +[SSVPlayActivityEventContainerIDs supportsSecureCoding]

  // instance methods
  -[SSVPlayActivityEventContainerIDs copyWithZone:]
  -[SSVPlayActivityEventContainerIDs .cxx_destruct]
  -[SSVPlayActivityEventContainerIDs globalPlaylistID]
  -[SSVPlayActivityEventContainerIDs _copyWithClass:]
  -[SSVPlayActivityEventContainerIDs encodeWithCoder:]
  -[SSVPlayActivityEventContainerIDs playlistVersionHash]
  -[SSVPlayActivityEventContainerIDs cloudPlaylistID]
  -[SSVPlayActivityEventContainerIDs stationHash]
  -[SSVPlayActivityEventContainerIDs stationStringID]
  -[SSVPlayActivityEventContainerIDs cloudAlbumID]
  -[SSVPlayActivityEventContainerIDs stationID]
  -[SSVPlayActivityEventContainerIDs adamID]
  -[SSVPlayActivityEventContainerIDs mutableCopyWithZone:]
  -[SSVPlayActivityEventContainerIDs initWithCoder:]


SSVMutablePlayActivityEventContainerIDs : SSVPlayActivityEventContainerIDs
 @property  long long adamID
 @property  NSString *cloudAlbumID
 @property  unsigned long cloudPlaylistID
 @property  NSString *globalPlaylistID
 @property  NSString *playlistVersionHash
 @property  NSString *stationHash
 @property  NSString *stationStringID
 @property  long long stationID

  // instance methods
  -[SSVMutablePlayActivityEventContainerIDs copyWithZone:]
  -[SSVMutablePlayActivityEventContainerIDs setGlobalPlaylistID:]
  -[SSVMutablePlayActivityEventContainerIDs setStationStringID:]
  -[SSVMutablePlayActivityEventContainerIDs setAdamID:]
  -[SSVMutablePlayActivityEventContainerIDs setStationHash:]
  -[SSVMutablePlayActivityEventContainerIDs setStationID:]
  -[SSVMutablePlayActivityEventContainerIDs setCloudAlbumID:]
  -[SSVMutablePlayActivityEventContainerIDs setPlaylistVersionHash:]
  -[SSVMutablePlayActivityEventContainerIDs setCloudPlaylistID:]


SSVFairPlaySubscriptionController : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSVFairPlaySubscriptionController init]
  -[SSVFairPlaySubscriptionController dealloc]
  -[SSVFairPlaySubscriptionController .cxx_destruct]
  -[SSVFairPlaySubscriptionController _subscriptionStatusForFPSubscriptionInfo:]
  -[SSVFairPlaySubscriptionController _enumerateSubscriptionInfoUsingBlock:]
  -[SSVFairPlaySubscriptionController _accountUniqueIdentifierToSubscriptionStatusWithFPSubscriptionInfoList:subscriptionInfoListLength:]
  -[SSVFairPlaySubscriptionController _notifySubscriptionStatusDidChange]
  -[SSVFairPlaySubscriptionController enumerateAccountSubscriptionStatusUsingBlock:]
  -[SSVFairPlaySubscriptionController generateSubscriptionBagRequestWithAccountUniqueIdentifier:transactionType:machineIDData:returningSubscriptionBagData:error:]
  -[SSVFairPlaySubscriptionController importSubscriptionKeyBagData:returningError:]
  -[SSVFairPlaySubscriptionController generateSubscriptionLeaseRequestWithAccountUniqueID:transactionType:certificateData:assetIDData:returningLeaseData:subscriptionBagData:error:]
  -[SSVFairPlaySubscriptionController subscriptionStatusForAccountUniqueIdentifier:]
  -[SSVFairPlaySubscriptionController stopSubscriptionLease:]
  -[SSVFairPlaySubscriptionController importSubscriptionKeyBagData:leaseInfoData:returningError:]


SSAppPurchaseHistoryDatabase : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSAppPurchaseHistoryDatabase _createDatabaseDirectory]
  +[SSAppPurchaseHistoryDatabase _setupDatabase:]
  +[SSAppPurchaseHistoryDatabase newDefaultInstance]
  +[SSAppPurchaseHistoryDatabase accountUniqueIdentifierKey]

  // instance methods
  -[SSAppPurchaseHistoryDatabase init]
  -[SSAppPurchaseHistoryDatabase dealloc]
  -[SSAppPurchaseHistoryDatabase readUsingTransactionBlock:]
  -[SSAppPurchaseHistoryDatabase database]
  -[SSAppPurchaseHistoryDatabase setLocalRevision:forAccountUniqueIdentifier:]
  -[SSAppPurchaseHistoryDatabase modifyUsingAppPurchaseHistoryTransactionBlock:]
  -[SSAppPurchaseHistoryDatabase setValue:forDatabaseProperty:]
  -[SSAppPurchaseHistoryDatabase valueForDatabaseProperty:]
  -[SSAppPurchaseHistoryDatabase setCurrentAccountUniqueIdentifier:]
  -[SSAppPurchaseHistoryDatabase readAsyncUsingTransactionBlock:]
  -[SSAppPurchaseHistoryDatabase resetCacheForNewAccountID:]
  -[SSAppPurchaseHistoryDatabase allProperties:accountID:includingHidden:]
  -[SSAppPurchaseHistoryDatabase removeValueForDatabaseProperty:]
  -[SSAppPurchaseHistoryDatabase initWithDatabaseURL:readOnly:]
  -[SSAppPurchaseHistoryDatabase currentAccountUniqueIdentifier]
  -[SSAppPurchaseHistoryDatabase localRevisionForAccountUniqueIdentifier:]


SSVCloudServiceCapabilitiesRequest : SSRequest <SSXPCCoding>
 @property  BOOL allowsPromptingForPrivacyAcknowledgement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVCloudServiceCapabilitiesRequest initWithXPCEncoding:]
  -[SSVCloudServiceCapabilitiesRequest copyXPCEncoding]
  -[SSVCloudServiceCapabilitiesRequest allowsPromptingForPrivacyAcknowledgement]
  -[SSVCloudServiceCapabilitiesRequest setAllowsPromptingForPrivacyAcknowledgement:]
  -[SSVCloudServiceCapabilitiesRequest startWithCompletionBlock:]
  -[SSVCloudServiceCapabilitiesRequest startWithResponseBlock:]


SSVAccountLessPlaybackOperation : SSVComplexOperation
 @property  NSDictionary *HTTPHeaderFields
 @property  NSString *assetStoreFrontIdentifier
 @property  NSString *itemIdentifier
 @property  @? responseBlock

  // instance methods
  -[SSVAccountLessPlaybackOperation itemIdentifier]
  -[SSVAccountLessPlaybackOperation setValue:forHTTPHeaderField:]
  -[SSVAccountLessPlaybackOperation main]
  -[SSVAccountLessPlaybackOperation _requestBodyData]
  -[SSVAccountLessPlaybackOperation responseBlock]
  -[SSVAccountLessPlaybackOperation .cxx_destruct]
  -[SSVAccountLessPlaybackOperation assetStoreFrontIdentifier]
  -[SSVAccountLessPlaybackOperation setAssetStoreFrontIdentifier:]
  -[SSVAccountLessPlaybackOperation setResponseBlock:]
  -[SSVAccountLessPlaybackOperation setHTTPHeaderFields:]
  -[SSVAccountLessPlaybackOperation HTTPHeaderFields]
  -[SSVAccountLessPlaybackOperation setItemIdentifier:]
  -[SSVAccountLessPlaybackOperation valueForHTTPHeaderField:]


SSAppPurchaseHistoryDatabaseSchema : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSAppPurchaseHistoryDatabaseSchema databasePath]
  +[SSAppPurchaseHistoryDatabaseSchema createSchemaInDatabase:]


SSVMediaSocialAdminStatusOperation : SSVComplexOperation
 @property  @? outputBlock

  // instance methods
  -[SSVMediaSocialAdminStatusOperation init]
  -[SSVMediaSocialAdminStatusOperation main]
  -[SSVMediaSocialAdminStatusOperation .cxx_destruct]
  -[SSVMediaSocialAdminStatusOperation setOutputBlock:]
  -[SSVMediaSocialAdminStatusOperation outputBlock]


SSVPlatformContext : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSDictionary *bagDictionary
 @property  NSString *lookupURLString
 @property  NSString *unpersonalizedLookupURLString
 @property  NSArray *signedHeaders
 @property  NSArray *signedQueryParameters
 @property  <SSVSAPContext> *SAPContext

  // instance methods
  -[SSVPlatformContext copyWithZone:]
  -[SSVPlatformContext SAPContext]
  -[SSVPlatformContext .cxx_destruct]
  -[SSVPlatformContext bagDictionary]
  -[SSVPlatformContext initWithBagDictionary:]
  -[SSVPlatformContext setSAPContext:]
  -[SSVPlatformContext initWithLookupURL:unpersonalizedLookupURL:signedHeaders:signedQueryParameters:]
  -[SSVPlatformContext lookupURLString]
  -[SSVPlatformContext signedHeaders]
  -[SSVPlatformContext signedQueryParameters]
  -[SSVPlatformContext unpersonalizedLookupURLString]


SSAppPurchaseHistoryEntry : SSSQLiteEntity
  // class methods
  +[SSAppPurchaseHistoryEntry databaseTable]
  +[SSAppPurchaseHistoryEntry predicateForAccountIdentifier:]
  +[SSAppPurchaseHistoryEntry predicateForNotHidden]
  +[SSAppPurchaseHistoryEntry supportsPlatformPredicate:]
  +[SSAppPurchaseHistoryEntry predicateForNotFirstParty]
  +[SSAppPurchaseHistoryEntry predicateForHasMessagesExtension]
  +[SSAppPurchaseHistoryEntry predicateForIs32BitOnly:]
  +[SSAppPurchaseHistoryEntry disambiguatedSQLForProperty:]


SSAppPurchaseHistoryTransaction : NSObject /usr/lib/libc++.1.dylib
 @property  SSSQLiteDatabase *database

  // instance methods
  -[SSAppPurchaseHistoryTransaction dealloc]
  -[SSAppPurchaseHistoryTransaction database]
  -[SSAppPurchaseHistoryTransaction initWithDatabase:]


SSWatchMetricsEventTableEntity : SSSQLiteEntity
  // class methods
  +[SSWatchMetricsEventTableEntity databaseTable]
  +[SSWatchMetricsEventTableEntity insertValuesForWatchMetricsEvent:]


SSPurchasableItem : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSPurchasableItem databaseTable]
  +[SSPurchasableItem sortByDatePurchasedKey]
  +[SSPurchasableItem allPropertyKeys]

  // instance methods
  -[SSPurchasableItem storeID]
  -[SSPurchasableItem dealloc]
  -[SSPurchasableItem initWithPropertyValues:]
  -[SSPurchasableItem datePurchased]
  -[SSPurchasableItem pid]
  -[SSPurchasableItem accountUniqueIdentifier]
  -[SSPurchasableItem propertyValues]
  -[SSPurchasableItem isHidden]


SSVRedeemCodeMetadata : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  BOOL allowsAutoSubmission
 @property  NSDictionary *redeemCodeDictionary
 @property  NSString *code
 @property  NSString *codeType
 @property  NSString *inputCode
 @property  NSArray *items

  // instance methods
  -[SSVRedeemCodeMetadata copyWithZone:]
  -[SSVRedeemCodeMetadata inputCode]
  -[SSVRedeemCodeMetadata items]
  -[SSVRedeemCodeMetadata .cxx_destruct]
  -[SSVRedeemCodeMetadata code]
  -[SSVRedeemCodeMetadata initWithRedeemCodeDictionary:]
  -[SSVRedeemCodeMetadata allowsAutoSubmission]
  -[SSVRedeemCodeMetadata setInputCode:]
  -[SSVRedeemCodeMetadata redeemCodeDictionary]
  -[SSVRedeemCodeMetadata codeType]


SSVRedeemCodeItem : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *redeemCodeDictionary
 @property  long long itemIdentifier

  // instance methods
  -[SSVRedeemCodeItem itemIdentifier]
  -[SSVRedeemCodeItem .cxx_destruct]
  -[SSVRedeemCodeItem initWithRedeemCodeDictionary:]
  -[SSVRedeemCodeItem initWithLookupItem:]
  -[SSVRedeemCodeItem redeemCodeDictionary]


SSPurchasableAppItem : SSPurchasableItem
  // class methods
  +[SSPurchasableAppItem databaseTable]
  +[SSPurchasableAppItem allPropertyKeys]
  +[SSPurchasableAppItem sortByNameKey]
  +[SSPurchasableAppItem itemsFromDatabase:forAccount:matching:sortedBy:sortAscending:]
  +[SSPurchasableAppItem allItemsFromDatabase:forAccount:sortedBy:sortAscending:]

  // instance methods
  -[SSPurchasableAppItem category]
  -[SSPurchasableAppItem accountIdentifier]
  -[SSPurchasableAppItem companyName]
  -[SSPurchasableAppItem iconTitle]
  -[SSPurchasableAppItem isPreorder]
  -[SSPurchasableAppItem supportsIPad]
  -[SSPurchasableAppItem contentRatingFlags]
  -[SSPurchasableAppItem isHiddenFromSpringBoard]
  -[SSPurchasableAppItem ovalIconURLString]
  -[SSPurchasableAppItem supportsIPhone]
  -[SSPurchasableAppItem redownloadParams]
  -[SSPurchasableAppItem humanReadableVersion]
  -[SSPurchasableAppItem iTunesVersion]
  -[SSPurchasableAppItem requiredCapabilitiesString]
  -[SSPurchasableAppItem is32BitOnly]
  -[SSPurchasableAppItem hasMessagesExtension]
  -[SSPurchasableAppItem isNewsstand]
  -[SSPurchasableAppItem isFamilyShareable]
  -[SSPurchasableAppItem longTitle]
  -[SSPurchasableAppItem iconURL]
  -[SSPurchasableAppItem bundleID]
  -[SSPurchasableAppItem minimumOS]


SSDatabaseCache : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long maximumInlineBlobSize

  // instance methods
  -[SSDatabaseCache statistics]
  -[SSDatabaseCache clear]
  -[SSDatabaseCache clearRetiredData]
  -[SSDatabaseCache initWithIdentifier:cacheName:database:cacheEntryClass:]
  -[SSDatabaseCache clearCacheForLookupKey:]
  -[SSDatabaseCache dealloc]
  -[SSDatabaseCache cacheEntryForLookupKey:]
  -[SSDatabaseCache maximumInlineBlobSize]
  -[SSDatabaseCache initWithIdentifier:cacheName:]
  -[SSDatabaseCache cacheEntryProperties:forLookupKeys:]
  -[SSDatabaseCache _setupDatabase]
  -[SSDatabaseCache setData:expiring:retiring:lookupKey:userInfo:]
  -[SSDatabaseCache setMaximumInlineBlobSize:]


SSVClaimApplicationsRequest : SSRequest <SSXPCCoding>
 @property  long long claimStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVClaimApplicationsRequest initWithXPCEncoding:]
  -[SSVClaimApplicationsRequest copyXPCEncoding]
  -[SSVClaimApplicationsRequest claimStyle]
  -[SSVClaimApplicationsRequest initWithClaimStyle:]
  -[SSVClaimApplicationsRequest startWithResponseBlock:]


SSDownloadManagerBookShim : SSDownloadManagerAppShim
  // instance methods
  -[SSDownloadManagerBookShim moveDownload:beforeDownload:completionBlock:]
  -[SSDownloadManagerBookShim _copyDownloadsForMessage:downloadIDs:]
  -[SSDownloadManagerBookShim initWithManagerOptions:]
  -[SSDownloadManagerBookShim restartDownloads:completionBlock:]
  -[SSDownloadManagerBookShim resumeDownloads:completionBlock:]
  -[SSDownloadManagerBookShim _pauseDownloads:forced:completionBlock:]
  -[SSDownloadManagerBookShim cancelDownloads:completionBlock:]
  -[SSDownloadManagerBookShim __book_resumeDownloads:completionBlock:]
  -[SSDownloadManagerBookShim .cxx_destruct]
  -[SSDownloadManagerBookShim downloadQueue:downloadStatesDidChange:]
  -[SSDownloadManagerBookShim __book_cancelDownloads:completionBlock:]
  -[SSDownloadManagerBookShim __book_sendDownloadsChanged:filterBooks:]
  -[SSDownloadManagerBookShim __book_dispatchBlock:withError:]
  -[SSDownloadManagerBookShim _sendDownloadsChanged:]
  -[SSDownloadManagerBookShim __book_filterDownloads:withResult:]
  -[SSDownloadManagerBookShim downloadQueue:downloadStates:didCompleteWithError:]
  -[SSDownloadManagerBookShim __book_pauseDownloads:completionBlock:]
  -[SSDownloadManagerBookShim __book_getAllDownloads]
  -[SSDownloadManagerBookShim bookDownloads]
  -[SSDownloadManagerBookShim moveDownload:afterDownload:completionBlock:]
  -[SSDownloadManagerBookShim __book_downloadsForStati:overrideFinished:overrideFailed:]


SSDatabaseCacheEntry : SSSQLiteEntity
  // class methods
  +[SSDatabaseCacheEntry databaseTable]
  +[SSDatabaseCacheEntry allPropertyKeys]
  +[SSDatabaseCacheEntry _fetchPersistentID:inDatabase:]

  // instance methods
  -[SSDatabaseCacheEntry dealloc]
  -[SSDatabaseCacheEntry initWithLookupKey:inDatabase:]
  -[SSDatabaseCacheEntry setPersistentCache:]
  -[SSDatabaseCacheEntry dataBlob:]


SSObservable : NSObject /usr/lib/libc++.1.dylib
 @property  NSError *failureError
 @property  NSString *logKey
 @property  NSMutableArray *observers
 @property  NSMutableArray *queuedResults
 @property  NSObject<OS_dispatch_queue> *sendMessageQueue
 @property  NSConditionLock *stateLock
 @property  BOOL cancelled
 @property  BOOL complete

  // class methods
  +[SSObservable observableWithObserver:]
  +[SSObservable observableWithObservers:]
  +[SSObservable _errorIsCanceledError:]

  // instance methods
  -[SSObservable isCancelled]
  -[SSObservable queuedResults]
  -[SSObservable stateLock]
  -[SSObservable sendCompletion]
  -[SSObservable isComplete]
  -[SSObservable failureError]
  -[SSObservable setStateLock:]
  -[SSObservable subscribe:]
  -[SSObservable sendResult:]
  -[SSObservable setLogKey:]
  -[SSObservable init]
  -[SSObservable setObservers:]
  -[SSObservable logKey]
  -[SSObservable .cxx_destruct]
  -[SSObservable sendMessageQueue]
  -[SSObservable observers]
  -[SSObservable cancel]
  -[SSObservable _isComplete]
  -[SSObservable setSendMessageQueue:]
  -[SSObservable setQueuedResults:]
  -[SSObservable sendFailure:]
  -[SSObservable setFailureError:]


SSPersistentCache : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSPersistentCache safeKeyForKey:]

  // instance methods
  -[SSPersistentCache clear]
  -[SSPersistentCache dataForKey:]
  -[SSPersistentCache setData:forKey:]
  -[SSPersistentCache dealloc]
  -[SSPersistentCache removeDataForKey:]
  -[SSPersistentCache initWithIdentifier:cacheName:]
  -[SSPersistentCache _isFileNotFound:]
  -[SSPersistentCache _pathForKey:]
  -[SSPersistentCache setFilenameSafeKeys:]


SSBiometrics : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSBiometrics _sendMessage:withCompletionBlock:]
  -[SSBiometrics init]
  -[SSBiometrics .cxx_destruct]
  -[SSBiometrics resetWithCompletionBlock:]
  -[SSBiometrics setEnabled:withAuthToken:completionBlock:]
  -[SSBiometrics getAllCachedBiometricHTTPHeadersWithToken:accountID:evict:completionBlock:]
  -[SSBiometrics getConstraintsDictionaryForPurpose:completion:]
  -[SSBiometrics getCachedBiometricAuthenticationContextWithToken:evict:completionBlock:]
  -[SSBiometrics getCachedBiometricHTTPHeadersWithToken:accountID:evict:completionBlock:]
  -[SSBiometrics getCurrentACLVersionWithCompletion:]
  -[SSBiometrics getStateWithCompletionBlock:]
  -[SSBiometrics renewPurchaseTokenWithAuthToken:completionBlock:]
  -[SSBiometrics resetAccount:withCompletionBlock:]
  -[SSBiometrics setEnabled:withCompletionBlock:]
  -[SSBiometrics setAllowed:completionBlock:]
  -[SSBiometrics tokenUpdateDidFinishWithLogKey:completion:]
  -[SSBiometrics tokenUpdateShouldStartWithLogKey:completion:]
  -[SSBiometrics tokenUpdateStateWithCompletionBlock:]
  -[SSBiometrics getIdentityMapCountWithCompletionBlock:]
  -[SSBiometrics isIdentityMapValidForAccountIdentifier:completionBlock:]
  -[SSBiometrics saveIdentityMapForAccountIdentifier:completionBlock:]


SSAppPurchaseHistoryCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSAppPurchaseHistoryCache init]
  -[SSAppPurchaseHistoryCache purge:]
  -[SSAppPurchaseHistoryCache purgeableSpace]
  -[SSAppPurchaseHistoryCache .cxx_destruct]
  -[SSAppPurchaseHistoryCache imageDataForAdamID:]
  -[SSAppPurchaseHistoryCache allUncachedImages]
  -[SSAppPurchaseHistoryCache setImageData:forAdamID:imageToken:]
  -[SSAppPurchaseHistoryCache initWithAccount:]
  -[SSAppPurchaseHistoryCache clearCacheForAdamID:]
  -[SSAppPurchaseHistoryCache allUncachedImages:]


SSAppImageDatabaseCacheEntry : SSDatabaseCacheEntry
  // class methods
  +[SSAppImageDatabaseCacheEntry databaseTable]


SSUpdatableAssetCacheManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSUpdatableAssetCacheManager .cxx_destruct]
  -[SSUpdatableAssetCacheManager assetFileName:]
  -[SSUpdatableAssetCacheManager cacheRoot]
  -[SSUpdatableAssetCacheManager manifestsDirectoryURL]
  -[SSUpdatableAssetCacheManager currentManifestFileURL]
  -[SSUpdatableAssetCacheManager setCacheURLsOnManifestAndAssets:error:]
  -[SSUpdatableAssetCacheManager assetsDirectoryURL]
  -[SSUpdatableAssetCacheManager manifestFileName:]
  -[SSUpdatableAssetCacheManager manifestFileURL:]
  -[SSUpdatableAssetCacheManager validatePath:]
  -[SSUpdatableAssetCacheManager assetFileURL:]
  -[SSUpdatableAssetCacheManager allCachedManifests]
  -[SSUpdatableAssetCacheManager loadCurrentCachedManifest]
  -[SSUpdatableAssetCacheManager initWithClientIdentifier:]


SSMetricsAppInstallEvent : SSMetricsMutableEvent
 @property  NSString *buildVersion
 @property  NSString *bundleID
 @property  NSString *hardwareType
 @property  NSString *installError
 @property  unsigned long installStatus
 @property  unsigned long installType
 @property  long long jobID

  // class methods
  +[SSMetricsAppInstallEvent _installStatusForString:]
  +[SSMetricsAppInstallEvent _installTypeForString:]
  +[SSMetricsAppInstallEvent _stringForInstallStatus:]
  +[SSMetricsAppInstallEvent _stringForInstallType:]

  // instance methods
  -[SSMetricsAppInstallEvent hardwareType]
  -[SSMetricsAppInstallEvent installType]
  -[SSMetricsAppInstallEvent setHardwareType:]
  -[SSMetricsAppInstallEvent setBundleID:]
  -[SSMetricsAppInstallEvent setBuildVersion:]
  -[SSMetricsAppInstallEvent jobID]
  -[SSMetricsAppInstallEvent init]
  -[SSMetricsAppInstallEvent setInstallType:]
  -[SSMetricsAppInstallEvent installError]
  -[SSMetricsAppInstallEvent buildVersion]
  -[SSMetricsAppInstallEvent requiresDiagnosticSendingPermission]
  -[SSMetricsAppInstallEvent installStatus]
  -[SSMetricsAppInstallEvent setInstallStatus:]
  -[SSMetricsAppInstallEvent setInstallError:]
  -[SSMetricsAppInstallEvent bundleID]
  -[SSMetricsAppInstallEvent setJobID:]


SSVSAPSignatureDataSource : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *HTTPBody
 @property  NSString *HTTPMethod

  // instance methods
  -[SSVSAPSignatureDataSource HTTPBody]
  -[SSVSAPSignatureDataSource initWithURLRequest:]
  -[SSVSAPSignatureDataSource .cxx_destruct]
  -[SSVSAPSignatureDataSource initWithURLRequestProperties:]
  -[SSVSAPSignatureDataSource valueForHTTPHeader:]
  -[SSVSAPSignatureDataSource valueForQueryParameter:]
  -[SSVSAPSignatureDataSource initWithURLResponse:bodyData:]
  -[SSVSAPSignatureDataSource HTTPMethod]


SSVMediaSocialAdminStatus : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDate *dateUpdated
 @property  BOOL admin

  // class methods
  +[SSVMediaSocialAdminStatus supportsSecureCoding]

  // instance methods
  -[SSVMediaSocialAdminStatus isAdmin]
  -[SSVMediaSocialAdminStatus dateUpdated]
  -[SSVMediaSocialAdminStatus .cxx_destruct]
  -[SSVMediaSocialAdminStatus initWithAdminStatus:dateUpdated:]
  -[SSVMediaSocialAdminStatus encodeWithCoder:]
  -[SSVMediaSocialAdminStatus initWithCoder:]


SSAppIconDatabaseCache : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSAppIconDatabaseCache newDefaultDatabaseCache]


SSCacheObjectStore : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSCacheObjectStore dealloc]
  -[SSCacheObjectStore _factoryForTypeIdentifier:]
  -[SSCacheObjectStore addObject:withItemIdentifier:]
  -[SSCacheObjectStore removeObjectWithItemIdentifier:]
  -[SSCacheObjectStore cacheObjectWithItemIdentifier:]
  -[SSCacheObjectStore addCacheObjectFactory:]
  -[SSCacheObjectStore removeCacheObjectFactory:]
  -[SSCacheObjectStore initWithSessionIdentifier:]
  -[SSCacheObjectStore clearSession]


SSPlistCacheObjectFactory : NSObject /usr/lib/libc++.1.dylib <SSCacheObjectFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSPlistCacheObjectFactory supportsTypeIdentifier:]
  -[SSPlistCacheObjectFactory cachedObjectWithDataRepresentation:typeIdentifier:]


SSPlistCacheObject : NSObject /usr/lib/libc++.1.dylib <SSCacheObject>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSPlistCacheObject cacheObjectTypeIdentifier]

  // instance methods
  -[SSPlistCacheObject plist]
  -[SSPlistCacheObject dealloc]
  -[SSPlistCacheObject cacheObjectDataRepresentation]
  -[SSPlistCacheObject cacheObjectTypeIdentifier]
  -[SSPlistCacheObject initWithCacheObjectDataRepresentation:]
  -[SSPlistCacheObject setPlist:]


SSVMediaSocialPostRequest : SSRequest <SSXPCCoding>
 @property  SSVMediaSocialPostDescription *postDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVMediaSocialPostRequest initWithXPCEncoding:]
  -[SSVMediaSocialPostRequest copyXPCEncoding]
  -[SSVMediaSocialPostRequest .cxx_destruct]
  -[SSVMediaSocialPostRequest initWithPostDescription:]
  -[SSVMediaSocialPostRequest postDescription]
  -[SSVMediaSocialPostRequest startWithCompletionBlock:]


SSVURLProtocolConsumer : SSVURLDataConsumer
  // instance methods
  -[SSVURLProtocolConsumer objectForData:response:error:]


SSVPlatformRequestOperation : NSOperation /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSArray *itemIdentifiers
 @property  NSArray *bundleIdentifiers
 @property  NSString *imageProfile
 @property  NSString *keyProfile
 @property  long long personalizationStyle
 @property  NSString *storeFrontSuffix
 @property  NSNumber *timeoutInterval
 @property  BOOL shouldSuppressCookies
 @property  BOOL shouldSuppressUserInfo
 @property  @? responseBlock
 @property  SSBag *bag

  // instance methods
  -[SSVPlatformRequestOperation itemIdentifiers]
  -[SSVPlatformRequestOperation setValue:forHTTPHeaderField:]
  -[SSVPlatformRequestOperation init]
  -[SSVPlatformRequestOperation storeFrontSuffix]
  -[SSVPlatformRequestOperation main]
  -[SSVPlatformRequestOperation keyProfile]
  -[SSVPlatformRequestOperation bundleIdentifiers]
  -[SSVPlatformRequestOperation shouldSuppressUserInfo]
  -[SSVPlatformRequestOperation responseBlock]
  -[SSVPlatformRequestOperation setItemIdentifiers:]
  -[SSVPlatformRequestOperation .cxx_destruct]
  -[SSVPlatformRequestOperation setKeyProfile:]
  -[SSVPlatformRequestOperation _lookupWithRequest:error:]
  -[SSVPlatformRequestOperation personalizationStyle]
  -[SSVPlatformRequestOperation setBag:]
  -[SSVPlatformRequestOperation bag]
  -[SSVPlatformRequestOperation initWithPlatformContext:]
  -[SSVPlatformRequestOperation _makeLocalMescalRequest]
  -[SSVPlatformRequestOperation _makeLocalJSSignRequest]
  -[SSVPlatformRequestOperation _makeLookupRequestWithPersonalizationStyle:]
  -[SSVPlatformRequestOperation _callerValue]
  -[SSVPlatformRequestOperation _URLBagContext]
  -[SSVPlatformRequestOperation _enumerateQueryParametersUsingBlock:]
  -[SSVPlatformRequestOperation _setCaller:]
  -[SSVPlatformRequestOperation _setUserAgent:]
  -[SSVPlatformRequestOperation setTimeoutInterval:]
  -[SSVPlatformRequestOperation setBundleIdentifiers:]
  -[SSVPlatformRequestOperation setStoreFrontSuffix:]
  -[SSVPlatformRequestOperation setResponseBlock:]
  -[SSVPlatformRequestOperation valueForRequestParameter:]
  -[SSVPlatformRequestOperation timeoutInterval]
  -[SSVPlatformRequestOperation setImageProfile:]
  -[SSVPlatformRequestOperation shouldSuppressCookies]
  -[SSVPlatformRequestOperation imageProfile]
  -[SSVPlatformRequestOperation setShouldSuppressUserInfo:]
  -[SSVPlatformRequestOperation valueForHTTPHeaderField:]
  -[SSVPlatformRequestOperation setShouldSuppressCookies:]
  -[SSVPlatformRequestOperation setValue:forRequestParameter:]
  -[SSVPlatformRequestOperation setPersonalizationStyle:]


SSVPlaybackLeaseAsset : SSVPlaybackAsset

SSWishlistAddItemsRequest : SSRequest
 @property  NSArray *items
 @property  NSString *caller
 @property  NSString *version

  // instance methods
  -[SSWishlistAddItemsRequest initWithXPCEncoding:]
  -[SSWishlistAddItemsRequest _convertedValueForValue:]
  -[SSWishlistAddItemsRequest copyQueryStringParameters]
  -[SSWishlistAddItemsRequest init]
  -[SSWishlistAddItemsRequest copyXPCEncoding]
  -[SSWishlistAddItemsRequest items]
  -[SSWishlistAddItemsRequest .cxx_destruct]
  -[SSWishlistAddItemsRequest caller]
  -[SSWishlistAddItemsRequest initWithItems:caller:version:]
  -[SSWishlistAddItemsRequest startWithAddItemsResponseBlock:]
  -[SSWishlistAddItemsRequest version]


SSWishlist : NSObject /usr/lib/libc++.1.dylib
 @property  long long accountIdentifier
 @property  NSNumber *lastSyncTime

  // class methods
  +[SSWishlist existsForAccountIdentifier:]

  // instance methods
  -[SSWishlist accountIdentifier]
  -[SSWishlist dealloc]
  -[SSWishlist deleteBackingStore]
  -[SSWishlist lastSyncTime]
  -[SSWishlist setLastSyncTime:]
  -[SSWishlist performTransactionWithBlock:]
  -[SSWishlist initWithAccountIdentifier:]


SSVShowDialogRequest : SSRequest <SSXPCCoding>
 @property  NSObject<OS_xpc_object> *encodedDialog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVShowDialogRequest initWithXPCEncoding:]
  -[SSVShowDialogRequest copyXPCEncoding]
  -[SSVShowDialogRequest .cxx_destruct]
  -[SSVShowDialogRequest startWithDialogResponseBlock:]
  -[SSVShowDialogRequest initWithEncodedDialog:]
  -[SSVShowDialogRequest encodedDialog]


SSVDialogResponse : NSObject /usr/lib/libc++.1.dylib <NSCopying, SSXPCCoding>
 @property  long long selectedButtonIndex
 @property  NSArray *textFieldValues
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVDialogResponse copyWithZone:]
  -[SSVDialogResponse initWithXPCEncoding:]
  -[SSVDialogResponse copyXPCEncoding]
  -[SSVDialogResponse .cxx_destruct]
  -[SSVDialogResponse selectedButtonIndex]
  -[SSVDialogResponse setSelectedButtonIndex:]
  -[SSVDialogResponse setTextFieldValues:]
  -[SSVDialogResponse textFieldValues]


SSVPlayActivityEventItemIDs : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  unsigned long cloudID
 @property  NSString *lyricsID
 @property  long long purchasedAdamID
 @property  long long radioAdamID
 @property  long long equivalencySourceAdamID
 @property  long long subscriptionAdamID
 @property  long long tvShowPurchasedAdamID
 @property  long long tvShowSubscriptionAdamID

  // class methods
  +[SSVPlayActivityEventItemIDs supportsSecureCoding]

  // instance methods
  -[SSVPlayActivityEventItemIDs copyWithZone:]
  -[SSVPlayActivityEventItemIDs .cxx_destruct]
  -[SSVPlayActivityEventItemIDs tvShowPurchasedAdamID]
  -[SSVPlayActivityEventItemIDs tvShowSubscriptionAdamID]
  -[SSVPlayActivityEventItemIDs _copyWithClass:]
  -[SSVPlayActivityEventItemIDs encodeWithCoder:]
  -[SSVPlayActivityEventItemIDs lyricsID]
  -[SSVPlayActivityEventItemIDs radioAdamID]
  -[SSVPlayActivityEventItemIDs purchasedAdamID]
  -[SSVPlayActivityEventItemIDs subscriptionAdamID]
  -[SSVPlayActivityEventItemIDs cloudID]
  -[SSVPlayActivityEventItemIDs equivalencySourceAdamID]
  -[SSVPlayActivityEventItemIDs mutableCopyWithZone:]
  -[SSVPlayActivityEventItemIDs initWithCoder:]


SSVMutablePlayActivityEventItemIDs : SSVPlayActivityEventItemIDs
 @property  unsigned long cloudID
 @property  NSString *lyricsID
 @property  long long purchasedAdamID
 @property  long long radioAdamID
 @property  long long equivalencySourceAdamID
 @property  long long subscriptionAdamID
 @property  long long tvShowPurchasedAdamID
 @property  long long tvShowSubscriptionAdamID

  // instance methods
  -[SSVMutablePlayActivityEventItemIDs copyWithZone:]
  -[SSVMutablePlayActivityEventItemIDs setTvShowPurchasedAdamID:]
  -[SSVMutablePlayActivityEventItemIDs setTvShowSubscriptionAdamID:]
  -[SSVMutablePlayActivityEventItemIDs setLyricsID:]
  -[SSVMutablePlayActivityEventItemIDs setPurchasedAdamID:]
  -[SSVMutablePlayActivityEventItemIDs setSubscriptionAdamID:]
  -[SSVMutablePlayActivityEventItemIDs setCloudID:]
  -[SSVMutablePlayActivityEventItemIDs setEquivalencySourceAdamID:]
  -[SSVMutablePlayActivityEventItemIDs setRadioAdamID:]


SSWishlistDatabaseSchema : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSWishlistDatabaseSchema databasePathWithAccountIdentifier:]
  +[SSWishlistDatabaseSchema _migrate7000to7001InDatabase:]
  +[SSWishlistDatabaseSchema _migrate7001to7002InDatabase:]
  +[SSWishlistDatabaseSchema createSchemaInDatabase:]


asn1ReceiptToken : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long type
 @property  unsigned long typeVersion
 @property  asn1Token *contentToken
 @property  NSString *stringValue
 @property  unsigned long integerValue

  // class methods
  +[asn1ReceiptToken readFromBuffer:]

  // instance methods
  -[asn1ReceiptToken integerValue]
  -[asn1ReceiptToken dealloc]
  -[asn1ReceiptToken typeVersion]
  -[asn1ReceiptToken type]
  -[asn1ReceiptToken _initWithType:typeVersion:contentToken:]
  -[asn1ReceiptToken contentToken]
  -[asn1ReceiptToken stringValue]


SSPushNotificationTokenRequest : SSRequest <SSXPCCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSPushNotificationTokenRequest initWithXPCEncoding:]
  -[SSPushNotificationTokenRequest copyXPCEncoding]
  -[SSPushNotificationTokenRequest startWithCompletion:]


SSSimulatedCrash : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSSimulatedCrash simulateCrashWithString:]
  +[SSSimulatedCrash simulateCrashWithFormat:]


SSVApplicationCapabilitiesRequest : SSRequest <SSXPCCoding>
 @property  NSString *bundleID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVApplicationCapabilitiesRequest setBundleID:]
  -[SSVApplicationCapabilitiesRequest initWithXPCEncoding:]
  -[SSVApplicationCapabilitiesRequest copyXPCEncoding]
  -[SSVApplicationCapabilitiesRequest .cxx_destruct]
  -[SSVApplicationCapabilitiesRequest startWithCapabilitiesResponseBlock:]
  -[SSVApplicationCapabilitiesRequest startWithCompletionBlock:]
  -[SSVApplicationCapabilitiesRequest bundleID]


SSSilentEnrollmentVerification : SSSilentEnrollment
  // instance methods
  -[SSSilentEnrollmentVerification startWithCompletion:]


SSWishlistItemEntity : SSSQLiteEntity
  // class methods
  +[SSWishlistItemEntity databaseTable]


SSMetricsEvent : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *eventType
 @property  BOOL shouldSuppressUserInfo
 @property  BOOL shouldSuppressDSIDHeader

  // class methods
  +[SSMetricsEvent _globalCanaryLock]
  +[SSMetricsEvent globalEventCanary]
  +[SSMetricsEvent setGlobalEventCanary:]

  // instance methods
  -[SSMetricsEvent shouldSuppressUserInfo]
  -[SSMetricsEvent timeIntervalFromMilliseconds:]
  -[SSMetricsEvent millisecondsFromTimeInterval:]
  -[SSMetricsEvent .cxx_destruct]
  -[SSMetricsEvent isBlacklistedByConfiguration:]
  -[SSMetricsEvent allTableEntityPropertiesPermittedByConfiguration:externalValues:]
  -[SSMetricsEvent decorateReportingURL:]
  -[SSMetricsEvent requiresDiagnosticSendingPermission]
  -[SSMetricsEvent eventType]
  -[SSMetricsEvent isFieldBlacklistEnabled]
  -[SSMetricsEvent _dictionaryRepresentationOfBody]
  -[SSMetricsEvent appendPropertiesToBody:]
  -[SSMetricsEvent allTableEntityPropertiesPermittedByConfiguration:]
  -[SSMetricsEvent shouldSuppressDSIDHeader]


SSBagKey : NSObject /usr/lib/libc++.1.dylib
 @property  <NSObject> *defaultValue
 @property  NSArray *stringRepresentation
 @property  unsigned long valueType

  // instance methods
  -[SSBagKey defaultValue]
  -[SSBagKey valueType]
  -[SSBagKey stringRepresentation]
  -[SSBagKey .cxx_destruct]
  -[SSBagKey initWithStringRepresentation:valueType:defaultValue:]
  -[SSBagKey initWithStringRepresentation:valueType:]
  -[SSBagKey valueFromDictionary:]


SSMetricsMutableEvent : SSMetricsEvent <NSMutableCopying>
 @property  NSDictionary *bodyDictionary
 @property  NSNumber *accountIdentifier
 @property  NSString *connection
 @property  NSString *eventType
 @property  double originalTime
 @property  NSString *topic
 @property  NSNumber *baseVersion
 @property  NSNumber *eventVersion
 @property  NSString *applicationIdentifier
 @property  NSNumber *clientVersion
 @property  NSString *hostApplicationIdentifier
 @property  NSNumber *previousClientVersion
 @property  NSString *userAgent
 @property  BOOL shouldSuppressUserInfo
 @property  BOOL shouldSuppressDSIDHeader
 @property  NSString *canaryIdentifier

  // instance methods
  -[SSMetricsMutableEvent setUserAgent:]
  -[SSMetricsMutableEvent userAgent]
  -[SSMetricsMutableEvent topic]
  -[SSMetricsMutableEvent setEventType:]
  -[SSMetricsMutableEvent applicationIdentifier]
  -[SSMetricsMutableEvent init]
  -[SSMetricsMutableEvent setTopic:]
  -[SSMetricsMutableEvent setApplicationIdentifier:]
  -[SSMetricsMutableEvent accountIdentifier]
  -[SSMetricsMutableEvent shouldSuppressUserInfo]
  -[SSMetricsMutableEvent .cxx_destruct]
  -[SSMetricsMutableEvent setCanaryIdentifier:]
  -[SSMetricsMutableEvent decorateReportingURL:]
  -[SSMetricsMutableEvent eventType]
  -[SSMetricsMutableEvent setBaseVersion:]
  -[SSMetricsMutableEvent setClientVersion:]
  -[SSMetricsMutableEvent setConnection:]
  -[SSMetricsMutableEvent clientVersion]
  -[SSMetricsMutableEvent addPropertiesWithDictionary:]
  -[SSMetricsMutableEvent appendPropertiesToBody:]
  -[SSMetricsMutableEvent shouldSuppressDSIDHeader]
  -[SSMetricsMutableEvent setOriginalTimeUsingDate:]
  -[SSMetricsMutableEvent originalTime]
  -[SSMetricsMutableEvent setOriginalTime:]
  -[SSMetricsMutableEvent previousClientVersion]
  -[SSMetricsMutableEvent setPreviousClientVersion:]
  -[SSMetricsMutableEvent setShouldSuppressDSIDHeader:]
  -[SSMetricsMutableEvent propertyForBodyKey:]
  -[SSMetricsMutableEvent eventVersion]
  -[SSMetricsMutableEvent setEventVersion:]
  -[SSMetricsMutableEvent bodyDictionary]
  -[SSMetricsMutableEvent setHostApplicationIdentifier:]
  -[SSMetricsMutableEvent initWithBodyDictionary:]
  -[SSMetricsMutableEvent hostApplicationIdentifier]
  -[SSMetricsMutableEvent connection]
  -[SSMetricsMutableEvent setShouldSuppressUserInfo:]
  -[SSMetricsMutableEvent mutableCopyWithZone:]
  -[SSMetricsMutableEvent canaryIdentifier]
  -[SSMetricsMutableEvent setProperty:forBodyKey:]
  -[SSMetricsMutableEvent setAccountIdentifier:]
  -[SSMetricsMutableEvent baseVersion]


SSMetricsBaseEvent : SSMetricsMutableEvent
 @property  NSNumber *pixelRatio
 @property  NSNumber *screenHeight
 @property  NSNumber *screenWidth
 @property  NSNumber *windowHeight
 @property  NSString *windowOrientation
 @property  NSNumber *windowWidth
 @property  NSString *pageContext
 @property  NSString *pageDescription
 @property  unsigned long pageID
 @property  NSString *pageType
 @property  NSString *pageURL

  // instance methods
  -[SSMetricsBaseEvent init]
  -[SSMetricsBaseEvent pageURL]
  -[SSMetricsBaseEvent windowOrientation]
  -[SSMetricsBaseEvent pageID]
  -[SSMetricsBaseEvent screenWidth]
  -[SSMetricsBaseEvent isBlacklistedByConfiguration:]
  -[SSMetricsBaseEvent setScreenHeight:]
  -[SSMetricsBaseEvent setPageURL:]
  -[SSMetricsBaseEvent pixelRatio]
  -[SSMetricsBaseEvent setPageID:]
  -[SSMetricsBaseEvent pageContext]
  -[SSMetricsBaseEvent pageDescription]
  -[SSMetricsBaseEvent setPageContext:]
  -[SSMetricsBaseEvent setPageDescription:]
  -[SSMetricsBaseEvent setPageType:]
  -[SSMetricsBaseEvent setPixelRatio:]
  -[SSMetricsBaseEvent setWindowHeight:]
  -[SSMetricsBaseEvent setWindowWidth:]
  -[SSMetricsBaseEvent setWindowOrientation:]
  -[SSMetricsBaseEvent windowHeight]
  -[SSMetricsBaseEvent windowWidth]
  -[SSMetricsBaseEvent screenHeight]
  -[SSMetricsBaseEvent pageType]
  -[SSMetricsBaseEvent setScreenWidth:]


SSPurchaseIntentActionRequest : SSRequest <SSXPCCoding>
 @property  NSString *appBundleId
 @property  unsigned long action
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSPurchaseIntentActionRequest initWithXPCEncoding:]
  -[SSPurchaseIntentActionRequest copyXPCEncoding]
  -[SSPurchaseIntentActionRequest setAction:]
  -[SSPurchaseIntentActionRequest .cxx_destruct]
  -[SSPurchaseIntentActionRequest action]
  -[SSPurchaseIntentActionRequest appBundleId]
  -[SSPurchaseIntentActionRequest setAppBundleId:]
  -[SSPurchaseIntentActionRequest startWithCompletionBlock:]


SSVFairPlaySAPSession : NSObject /usr/lib/libc++.1.dylib <SSVSAPContext>
 @property  long long version
 @property  SSVURLBagInterpreter *urlBagInterpreter
 @property  BOOL useSharedBagInterpreter
 @property  BOOL primed
 @property  NSData *certificateData
 @property  long long SAPVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVFairPlaySAPSession initWithURLBag:]
  -[SSVFairPlaySAPSession init]
  -[SSVFairPlaySAPSession initWithURLBagDictionary:]
  -[SSVFairPlaySAPSession primeSessionWithCompletionBlock:]
  -[SSVFairPlaySAPSession setCertificateData:]
  -[SSVFairPlaySAPSession _postExchangeData:]
  -[SSVFairPlaySAPSession primed]
  -[SSVFairPlaySAPSession .cxx_destruct]
  -[SSVFairPlaySAPSession _signData:error:]
  -[SSVFairPlaySAPSession _establishContext]
  -[SSVFairPlaySAPSession signatureWithData:error:]
  -[SSVFairPlaySAPSession _shouldRetrySAPOperationForError:]
  -[SSVFairPlaySAPSession _verifyPrimeResponse:]
  -[SSVFairPlaySAPSession certificateData]
  -[SSVFairPlaySAPSession _initWithURLBagInterpreter:SAPVersion:]
  -[SSVFairPlaySAPSession initWithURLBagDictionary:SAPVersion:]
  -[SSVFairPlaySAPSession urlBagInterpreter]
  -[SSVFairPlaySAPSession signData:completionBlock:]
  -[SSVFairPlaySAPSession version]
  -[SSVFairPlaySAPSession initWithURLBag:SAPVersion:]
  -[SSVFairPlaySAPSession _urlBagInterpreter]
  -[SSVFairPlaySAPSession setUseSharedBagInterpreter:]
  -[SSVFairPlaySAPSession _primeTheConnection]
  -[SSVFairPlaySAPSession _verifySignature:forData:error:]
  -[SSVFairPlaySAPSession verifySignature:forData:completionBlock:]
  -[SSVFairPlaySAPSession useSharedBagInterpreter]
  -[SSVFairPlaySAPSession initWithSSBag:SAPVersion:]
  -[SSVFairPlaySAPSession establishSessionWithCompletionBlock:]
  -[SSVFairPlaySAPSession SAPVersion]
  -[SSVFairPlaySAPSession initWithSAPVersion:]
  -[SSVFairPlaySAPSession verifyData:withSignature:error:]
  -[SSVFairPlaySAPSession _loadCertificateData]
  -[SSVFairPlaySAPSession _initSSVFairPlaySAPSession]


SSMetricsPageEvent : SSMetricsBaseEvent
 @property  NSString *pageHistoryDescription
 @property  BOOL cachedResponse
 @property  NSString *clientCorrelationKey
 @property  double connectionEndTime
 @property  BOOL connectionReused
 @property  double connectionStartTime
 @property  unsigned long connectionStartNStatRXBytes
 @property  unsigned long connectionStartNStatTXBytes
 @property  unsigned long connectionStopNStatRXBytes
 @property  unsigned long connectionStopNStatTXBytes
 @property  double domainLookupEndTime
 @property  double domainLookupStartTime
 @property  double fetchStartTime
 @property  NSString *navigationType
 @property  double pageRenderTime
 @property  unsigned long redirectCount
 @property  double redirectEndTime
 @property  double redirectStartTime
 @property  NSString *referringAppName
 @property  NSString *referringURL
 @property  double requestEndTime
 @property  double requestStartTime
 @property  double responseEndTime
 @property  double responseStartTime
 @property  NSString *searchTerm
 @property  double secureConnectionStartTime
 @property  NSString *serverApplicationInstance
 @property  NSString *serverTiming
 @property  BOOL ubered
 @property  double xpSessionDuration
 @property  BOOL xpSamplingForced
 @property  double xpSamplingPercentageUsers
 @property  double xpSamplingPercentageCachedResponses

  // instance methods
  -[SSMetricsPageEvent searchTerm]
  -[SSMetricsPageEvent setSearchTerm:]
  -[SSMetricsPageEvent connectionEndTime]
  -[SSMetricsPageEvent setConnectionStartTime:]
  -[SSMetricsPageEvent setRedirectEndTime:]
  -[SSMetricsPageEvent setXPSamplingPercentageUsers:]
  -[SSMetricsPageEvent connectionReused]
  -[SSMetricsPageEvent setReferringAppName:]
  -[SSMetricsPageEvent init]
  -[SSMetricsPageEvent xpSamplingForced]
  -[SSMetricsPageEvent connectionStopNStatRXBytes]
  -[SSMetricsPageEvent xpSessionDuration]
  -[SSMetricsPageEvent requestEndTime]
  -[SSMetricsPageEvent setResponseStartTime:]
  -[SSMetricsPageEvent xpSamplingPercentageUsers]
  -[SSMetricsPageEvent connectionStartTime]
  -[SSMetricsPageEvent responseEndTime]
  -[SSMetricsPageEvent setRequestStartTime:]
  -[SSMetricsPageEvent setPageRenderTime:]
  -[SSMetricsPageEvent setXPSamplingPercentageCachedResponses:]
  -[SSMetricsPageEvent isUbered]
  -[SSMetricsPageEvent setXPSamplingForced:]
  -[SSMetricsPageEvent setSecureConnectionStartTime:]
  -[SSMetricsPageEvent setConnectionReused:]
  -[SSMetricsPageEvent secureConnectionStartTime]
  -[SSMetricsPageEvent setConnectionStopNStatRXBytes:]
  -[SSMetricsPageEvent setClientCorrelationKey:]
  -[SSMetricsPageEvent navigationType]
  -[SSMetricsPageEvent setPageHistoryDescription:]
  -[SSMetricsPageEvent setServerTiming:]
  -[SSMetricsPageEvent setServerApplicationInstance:]
  -[SSMetricsPageEvent responseStartTime]
  -[SSMetricsPageEvent setDomainLookupEndTime:]
  -[SSMetricsPageEvent domainLookupStartTime]
  -[SSMetricsPageEvent redirectEndTime]
  -[SSMetricsPageEvent setDomainLookupStartTime:]
  -[SSMetricsPageEvent pageRenderTime]
  -[SSMetricsPageEvent setRedirectStartTime:]
  -[SSMetricsPageEvent referringURL]
  -[SSMetricsPageEvent domainLookupEndTime]
  -[SSMetricsPageEvent redirectStartTime]
  -[SSMetricsPageEvent connectionStopNStatTXBytes]
  -[SSMetricsPageEvent setReferringURL:]
  -[SSMetricsPageEvent connectionStartNStatRXBytes]
  -[SSMetricsPageEvent serverApplicationInstance]
  -[SSMetricsPageEvent setXPSessionDuration:]
  -[SSMetricsPageEvent xpSamplingPercentageCachedResponses]
  -[SSMetricsPageEvent setFetchStartTime:]
  -[SSMetricsPageEvent setNavigationType:]
  -[SSMetricsPageEvent redirectCount]
  -[SSMetricsPageEvent requestStartTime]
  -[SSMetricsPageEvent setRedirectCount:]
  -[SSMetricsPageEvent connectionStartNStatTXBytes]
  -[SSMetricsPageEvent setRequestEndTime:]
  -[SSMetricsPageEvent setConnectionEndTime:]
  -[SSMetricsPageEvent serverTiming]
  -[SSMetricsPageEvent pageHistoryDescription]
  -[SSMetricsPageEvent fetchStartTime]
  -[SSMetricsPageEvent clientCorrelationKey]
  -[SSMetricsPageEvent isCachedResponse]
  -[SSMetricsPageEvent referringAppName]
  -[SSMetricsPageEvent setConnectionStartNStatRXBytes:]
  -[SSMetricsPageEvent setCachedResponse:]
  -[SSMetricsPageEvent setResponseEndTime:]
  -[SSMetricsPageEvent setConnectionStartNStatTXBytes:]
  -[SSMetricsPageEvent setUbered:]
  -[SSMetricsPageEvent setPageHistoryDescriptionWithIdentifiers:]
  -[SSMetricsPageEvent setConnectionStopNStatTXBytes:]


SSVStoreDownloadQueueResponse : NSObject /usr/lib/libc++.1.dylib
 @property  NSOrderedSet *downloads
 @property  NSString *storeCorrelationID
 @property  NSError *error
 @property  NSData *keybag
 @property  NSArray *rangesToLoad
 @property  BOOL shouldCancelPurchaseBatch
 @property  BOOL triggeredQueueCheck
 @property  NSNumber *userIdentifier
 @property  NSString *clientIdentifier

  // instance methods
  -[SSVStoreDownloadQueueResponse downloads]
  -[SSVStoreDownloadQueueResponse userIdentifier]
  -[SSVStoreDownloadQueueResponse init]
  -[SSVStoreDownloadQueueResponse clientIdentifier]
  -[SSVStoreDownloadQueueResponse setError:]
  -[SSVStoreDownloadQueueResponse .cxx_destruct]
  -[SSVStoreDownloadQueueResponse error]
  -[SSVStoreDownloadQueueResponse _initStoreDownloadQueueResponse]
  -[SSVStoreDownloadQueueResponse _errorWithFailureType:customerMessage:]
  -[SSVStoreDownloadQueueResponse initWithDictionary:userIdentifier:preferredAssetFlavor:]
  -[SSVStoreDownloadQueueResponse initWithDictionary:userIdentifier:]
  -[SSVStoreDownloadQueueResponse initWithError:userIdentifier:]
  -[SSVStoreDownloadQueueResponse errorForItemIdentifier:]
  -[SSVStoreDownloadQueueResponse rangesToLoad]
  -[SSVStoreDownloadQueueResponse setTriggeredQueueCheck:]
  -[SSVStoreDownloadQueueResponse setShouldCancelPurchaseBatch:]
  -[SSVStoreDownloadQueueResponse shouldCancelPurchaseBatch]
  -[SSVStoreDownloadQueueResponse triggeredQueueCheck]
  -[SSVStoreDownloadQueueResponse setStoreCorrelationID:]
  -[SSVStoreDownloadQueueResponse storeCorrelationID]
  -[SSVStoreDownloadQueueResponse keybag]
  -[SSVStoreDownloadQueueResponse setClientIdentifier:]


SSMetricsEventTable : SSEventsTableBase
  // class methods
  +[SSMetricsEventTable databasePath]
  +[SSMetricsEventTable _eventsTableName]

  // instance methods
  -[SSMetricsEventTable _migrateToVersion3]
  -[SSMetricsEventTable _migrateToVersion1]
  -[SSMetricsEventTable _migrateToVersion2]
  -[SSMetricsEventTable _setupDatabase]
  -[SSMetricsEventTable _pragmaValueForName:]
  -[SSMetricsEventTable performTransactionWithBlock:]


SSMetricsEventController : SSMetricsController
  // instance methods
  -[SSMetricsEventController flushUnreportedEventsWithCompletionHandler:]
  -[SSMetricsEventController init]
  -[SSMetricsEventController unreportedEventURLsSince:]
  -[SSMetricsEventController .cxx_destruct]
  -[SSMetricsEventController _maximumUnreportedToSelect]
  -[SSMetricsEventController _serialQueueInsertEvents:withCompletionHandler:]
  -[SSMetricsEventController insertEventSummaries:error:]
  -[SSMetricsEventController deleteEventsInsertedBefore:]
  -[SSMetricsEventController unreportedEventsForURL:since:suppressUserInfo:]
  -[SSMetricsEventController _collectUnreportedPIDsFromDatabase:matchingReportURLString:since:suppressUserInfo:]
  -[SSMetricsEventController markEventsAsReported:]
  -[SSMetricsEventController countUnreportedEventsBefore:]
  -[SSMetricsEventController deleteReportedEvents]
  -[SSMetricsEventController unreportedEventsForURL:since:suppressDSID:]


SSMetricsEventTableEntity : SSSQLiteEntity
  // class methods
  +[SSMetricsEventTableEntity databaseTable]

  // instance methods
  -[SSMetricsEventTableEntity reportingDictionary]
  -[SSMetricsEventTableEntity dealloc]
  -[SSMetricsEventTableEntity .cxx_destruct]
  -[SSMetricsEventTableEntity reportingCanaryIdentifier]
  -[SSMetricsEventTableEntity reportingJSON]


SSVGratisRequestBody : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long requestStyle
 @property  NSNumber *accountIdentifier
 @property  NSArray *applications
 @property  BOOL backgroundRequest
 @property  NSArray *bundleIdentifiers
 @property  NSArray *itemIdentifiers
 @property  NSMutableDictionary *bodyDictionary
 @property  NSData *JSONBodyData
 @property  NSData *propertyListBodyData

  // instance methods
  -[SSVGratisRequestBody copyWithZone:]
  -[SSVGratisRequestBody itemIdentifiers]
  -[SSVGratisRequestBody requestStyle]
  -[SSVGratisRequestBody accountIdentifier]
  -[SSVGratisRequestBody bundleIdentifiers]
  -[SSVGratisRequestBody setItemIdentifiers:]
  -[SSVGratisRequestBody .cxx_destruct]
  -[SSVGratisRequestBody setApplications:]
  -[SSVGratisRequestBody initWithRequestStyle:]
  -[SSVGratisRequestBody JSONBodyData]
  -[SSVGratisRequestBody propertyListBodyData]
  -[SSVGratisRequestBody setValue:forBodyParameter:]
  -[SSVGratisRequestBody setBundleIdentifiers:]
  -[SSVGratisRequestBody applications]
  -[SSVGratisRequestBody bodyDictionary]
  -[SSVGratisRequestBody isBackgroundRequest]
  -[SSVGratisRequestBody setBackgroundRequest:]
  -[SSVGratisRequestBody setAccountIdentifier:]


SSPromiseCompletionBlocks : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSPromiseCompletionBlocks addErrorBlock:]
  -[SSPromiseCompletionBlocks addSuccessBlock:]
  -[SSPromiseCompletionBlocks callSuccessBlock:withPromiseResult:]
  -[SSPromiseCompletionBlocks init]
  -[SSPromiseCompletionBlocks .cxx_destruct]
  -[SSPromiseCompletionBlocks callErrorBlock:withPromiseResult:]
  -[SSPromiseCompletionBlocks flushCompletionBlocksWithPromiseResult:]
  -[SSPromiseCompletionBlocks addCompletionBlock:]
  -[SSPromiseCompletionBlocks callCompletionBlock:withPromiseResult:]


SSWatchMetricsController : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  SSWatchMetricsConfiguration *metricsConfiguration

  // instance methods
  -[SSWatchMetricsController _connection]
  -[SSWatchMetricsController init]
  -[SSWatchMetricsController serialQueue]
  -[SSWatchMetricsController setSerialQueue:]
  -[SSWatchMetricsController .cxx_destruct]
  -[SSWatchMetricsController insertEvent:withCompletionHandler:]
  -[SSWatchMetricsController isEnabled]
  -[SSWatchMetricsController setMetricsConfiguration:]
  -[SSWatchMetricsController metricsConfiguration]


SSWatchMetricsConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  BOOL enabled

  // instance methods
  -[SSWatchMetricsConfiguration copyWithZone:]
  -[SSWatchMetricsConfiguration init]
  -[SSWatchMetricsConfiguration isEnabled]
  -[SSWatchMetricsConfiguration setEnabled:]


SSMetricsEventReportingSession : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SSMetricsEventReportingSession .cxx_destruct]
  -[SSMetricsEventReportingSession initWithReportingURL:insertTimestamp:eventController:]
  -[SSMetricsEventReportingSession _unreportedEvents]
  -[SSMetricsEventReportingSession writeEventsToStream:uncompressedMaxSize:]
  -[SSMetricsEventReportingSession initWithReportingURL:insertTimestamp:suppressUserInfo:eventController:]
  -[SSMetricsEventReportingSession sessionCanaryIdentifier]
  -[SSMetricsEventReportingSession _estimateSizeOfJsonObject:]
  -[SSMetricsEventReportingSession anyUnreportedEvents]
  -[SSMetricsEventReportingSession markEventsAsReported]
  -[SSMetricsEventReportingSession initWithReportingURL:insertTimestamp:suppressDSID:eventController:]
  -[SSMetricsEventReportingSession writeEventsToStream:]
  -[SSMetricsEventReportingSession _writeString:toData:]


SSGzipOutputStream : NSOutputStream /System/Library/Frameworks/CoreServices.framework/CoreServices
  // instance methods
  -[SSGzipOutputStream write:maxLength:]
  -[SSGzipOutputStream setProperty:forKey:]
  -[SSGzipOutputStream propertyForKey:]
  -[SSGzipOutputStream dealloc]
  -[SSGzipOutputStream .cxx_destruct]
  -[SSGzipOutputStream close]
  -[SSGzipOutputStream streamStatus]
  -[SSGzipOutputStream open]
  -[SSGzipOutputStream streamError]
  -[SSGzipOutputStream initToFileAtPath:append:]
  -[SSGzipOutputStream _initializeOutputStream]
  -[SSGzipOutputStream _setStreamError:context:]
  -[SSGzipOutputStream _consumeStreamOutput:]
  -[SSGzipOutputStream streamContentLength]
  -[SSGzipOutputStream hasSpaceAvailable]
  -[SSGzipOutputStream initToMemory]


SSVPlaybackSubscriptionLeaseRequest : SSVPlaybackLeaseRequest
  // instance methods
  -[SSVPlaybackSubscriptionLeaseRequest _actionParameterValue]
  -[SSVPlaybackSubscriptionLeaseRequest _URLBagKey]
  -[SSVPlaybackSubscriptionLeaseRequest _copyBodyDictionaryWithFairPlaySession:]
  -[SSVPlaybackSubscriptionLeaseRequest _transactionType]


SSImportDownloadToIPodLibraryRequest : SSRequest
 @property  SSDownloadMetadata *downloadMetadata
 @property  SSPurchaseResponse *purchaseResponse

  // instance methods
  -[SSImportDownloadToIPodLibraryRequest initWithXPCEncoding:]
  -[SSImportDownloadToIPodLibraryRequest copyXPCEncoding]
  -[SSImportDownloadToIPodLibraryRequest .cxx_destruct]
  -[SSImportDownloadToIPodLibraryRequest purchaseResponse]
  -[SSImportDownloadToIPodLibraryRequest initWithDownloadMetadata:]
  -[SSImportDownloadToIPodLibraryRequest initWithPurchase:]
  -[SSImportDownloadToIPodLibraryRequest startWithResponseBlock:]
  -[SSImportDownloadToIPodLibraryRequest downloadMetadata]


SSCoalescingQueue : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_source> *source

  // instance methods
  -[SSCoalescingQueue executeBlock]
  -[SSCoalescingQueue setSource:]
  -[SSCoalescingQueue initWithBlock:]
  -[SSCoalescingQueue source]
  -[SSCoalescingQueue .cxx_destruct]
  -[SSCoalescingQueue setQueue:]
  -[SSCoalescingQueue queue]


SSDownloadMonitorItem : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  NSString *clientIdentifier
 @property  long long itemState
 @property  NSString *representativeTitle
 @property  NSString *statusString
 @property  long long totalNumberOfItems
 @property  unsigned long transferTypes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSDownloadMonitorItem initWithXPCEncoding:]
  -[SSDownloadMonitorItem copyXPCEncoding]
  -[SSDownloadMonitorItem clientIdentifier]
  -[SSDownloadMonitorItem dealloc]
  -[SSDownloadMonitorItem setStatusString:]
  -[SSDownloadMonitorItem itemState]
  -[SSDownloadMonitorItem representativeTitle]
  -[SSDownloadMonitorItem setRepresentativeTitle:]
  -[SSDownloadMonitorItem totalNumberOfItems]
  -[SSDownloadMonitorItem setTotalNumberOfItems:]
  -[SSDownloadMonitorItem transferTypes]
  -[SSDownloadMonitorItem setTransferTypes:]
  -[SSDownloadMonitorItem statusString]
  -[SSDownloadMonitorItem setClientIdentifier:]
  -[SSDownloadMonitorItem setItemState:]


SSDownloadMonitor : NSObject /usr/lib/libc++.1.dylib
 @property  <SSDownloadMonitorDelegate> *delegate

  // instance methods
  -[SSDownloadMonitor _connection]
  -[SSDownloadMonitor init]
  -[SSDownloadMonitor dealloc]
  -[SSDownloadMonitor _copyItemsWithReply:error:]
  -[SSDownloadMonitor getMonitorItemsWithCompletionBlock:]
  -[SSDownloadMonitor pauseMonitorItem:completionBlock:]
  -[SSDownloadMonitor prioritizeMonitorItem:completionBlock:]
  -[SSDownloadMonitor resumeMonitorItem:completionBlock:]
  -[SSDownloadMonitor _reloadForChangeNotification]
  -[SSDownloadMonitor setDelegate:]
  -[SSDownloadMonitor delegate]


SSVStoreDownload : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *properties
 @property  NSString *preferredAssetFlavor

  // instance methods
  -[SSVStoreDownload .cxx_destruct]
  -[SSVStoreDownload initWithDictionary:]
  -[SSVStoreDownload setPreferredAssetFlavor:]
  -[SSVStoreDownload preferredAssetFlavor]
  -[SSVStoreDownload properties]


SSWatchMetricsEventTable : SSEventsTableBase
  // class methods
  +[SSWatchMetricsEventTable databasePath]

  // instance methods
  -[SSWatchMetricsEventTable _migrateToVersion3]
  -[SSWatchMetricsEventTable _migrateToVersion1]
  -[SSWatchMetricsEventTable _migrateToVersion2]
  -[SSWatchMetricsEventTable _migrateToVersion4]
  -[SSWatchMetricsEventTable _migrateToVersion5]
  -[SSWatchMetricsEventTable _migrateToVersion6]
  -[SSWatchMetricsEventTable _migrateToVersion7]
  -[SSWatchMetricsEventTable _setupDatabase]


SSMetricsAccountEvent : SSMetricsBaseEvent
 @property  NSString *accountEventType

  // instance methods
  -[SSMetricsAccountEvent init]
  -[SSMetricsAccountEvent setAccountEventType:]
  -[SSMetricsAccountEvent accountEventType]
  -[SSMetricsAccountEvent setAccountEventTypeWithEventIdentifier:]


SSVSubscriptionEntitlementsCoordinator : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSVSubscriptionEntitlementsCoordinator sharedCoordinator]

  // instance methods
  -[SSVSubscriptionEntitlementsCoordinator _connection]
  -[SSVSubscriptionEntitlementsCoordinator init]
  -[SSVSubscriptionEntitlementsCoordinator dealloc]
  -[SSVSubscriptionEntitlementsCoordinator .cxx_destruct]
  -[SSVSubscriptionEntitlementsCoordinator _cachedSubscriptionEntitlements]
  -[SSVSubscriptionEntitlementsCoordinator getSubscriptionEntitlementsIgnoreCaches:entitlementsBlock:]
  -[SSVSubscriptionEntitlementsCoordinator _loadSubscriptionEntitlementsIgnoreCaches:error:]
  -[SSVSubscriptionEntitlementsCoordinator _setCachedSubscriptionEntitlements:]
  -[SSVSubscriptionEntitlementsCoordinator getSubscriptionEntitlements:]


SSMetricsLogEvent : SSMetricsMutableEvent
 @property  unsigned long logLevel
 @property  NSString *logSubsystem
 @property  NSString *message

  // class methods
  +[SSMetricsLogEvent _logLevelFromString:]
  +[SSMetricsLogEvent _stringFromLogLevel:]

  // instance methods
  -[SSMetricsLogEvent message]
  -[SSMetricsLogEvent init]
  -[SSMetricsLogEvent setMessage:]
  -[SSMetricsLogEvent setLogLevel:]
  -[SSMetricsLogEvent logSubsystem]
  -[SSMetricsLogEvent setLogSubsystem:]
  -[SSMetricsLogEvent logLevel]


SSUpdatableAssetController : NSObject /usr/lib/libc++.1.dylib
 @property  SSUpdatableAssetManifest *currentManifest
 @property  SSUpdatableAssetManifest *newestCachedManifest
 @property  NSURL *bundledManifestURL
 @property  NSURL *manifestURL

  // instance methods
  -[SSUpdatableAssetController _connection]
  -[SSUpdatableAssetController dealloc]
  -[SSUpdatableAssetController .cxx_destruct]
  -[SSUpdatableAssetController manifestURL]
  -[SSUpdatableAssetController initWithBundledManifestURL:clientIdentifier:]
  -[SSUpdatableAssetController newestCachedManifest]
  -[SSUpdatableAssetController _bundledManifestVersion]
  -[SSUpdatableAssetController clearCache:]
  -[SSUpdatableAssetController _bundledManifest]
  -[SSUpdatableAssetController initWithBundledManifestURL:]
  -[SSUpdatableAssetController currentManifest]
  -[SSUpdatableAssetController refreshCachedManifest:]
  -[SSUpdatableAssetController bundledManifestURL]
  -[SSUpdatableAssetController setManifestURL:]


SSMetricsPurchaseEvent : SSMetricsBaseEvent
 @property  double requestStartTime
 @property  double responseEndTime
 @property  double responseStartTime
 @property  NSString *transactionIdentifier

  // instance methods
  -[SSMetricsPurchaseEvent init]
  -[SSMetricsPurchaseEvent setTransactionIdentifier:]
  -[SSMetricsPurchaseEvent setResponseStartTime:]
  -[SSMetricsPurchaseEvent responseEndTime]
  -[SSMetricsPurchaseEvent setRequestStartTime:]
  -[SSMetricsPurchaseEvent transactionIdentifier]
  -[SSMetricsPurchaseEvent responseStartTime]
  -[SSMetricsPurchaseEvent addFieldsFromPurchaseResponse:]
  -[SSMetricsPurchaseEvent requestStartTime]
  -[SSMetricsPurchaseEvent setResponseEndTime:]


SSVLoadDownloadQueueOperation : SSVComplexOperation
 @property  SSURLRequestProperties *requestProperties
 @property  NSNumber *accountIdentifier
 @property  BOOL needsAuthentication
 @property  long long reason
 @property  NSString *requestIdentifier
 @property  NSURL *requestURL
 @property  NSMutableOrderedSet *downloads
 @property  NSString *powerAssertionIdentifier
 @property  NSString *storeCorrelationID

  // class methods
  +[SSVLoadDownloadQueueOperation newLoadAutomaticDownloadQueueOperation]

  // instance methods
  -[SSVLoadDownloadQueueOperation downloads]
  -[SSVLoadDownloadQueueOperation setRequestIdentifier:]
  -[SSVLoadDownloadQueueOperation requestIdentifier]
  -[SSVLoadDownloadQueueOperation setReason:]
  -[SSVLoadDownloadQueueOperation init]
  -[SSVLoadDownloadQueueOperation main]
  -[SSVLoadDownloadQueueOperation accountIdentifier]
  -[SSVLoadDownloadQueueOperation .cxx_destruct]
  -[SSVLoadDownloadQueueOperation lock]
  -[SSVLoadDownloadQueueOperation setNeedsAuthentication:]
  -[SSVLoadDownloadQueueOperation gzipData:]
  -[SSVLoadDownloadQueueOperation unlock]
  -[SSVLoadDownloadQueueOperation setRequestURL:]
  -[SSVLoadDownloadQueueOperation setStoreCorrelationID:]
  -[SSVLoadDownloadQueueOperation setPowerAssertionIdentifier:]
  -[SSVLoadDownloadQueueOperation resolveBagURLForKey:bagContext:error:]
  -[SSVLoadDownloadQueueOperation _loadDownloadsFromStart:toEnd:url:]
  -[SSVLoadDownloadQueueOperation importKeybagSync:]
  -[SSVLoadDownloadQueueOperation _handleResponse:]
  -[SSVLoadDownloadQueueOperation _newURLOperationWithStartIdentifier:endIdentifier:url:]
  -[SSVLoadDownloadQueueOperation addGUIDToBody:]
  -[SSVLoadDownloadQueueOperation addKeybagSyncToBody:]
  -[SSVLoadDownloadQueueOperation featureEnabledForBagKey:bagContext:error:]
  -[SSVLoadDownloadQueueOperation setDownloadsMetadata:]
  -[SSVLoadDownloadQueueOperation powerAssertionIdentifier]
  -[SSVLoadDownloadQueueOperation storeCorrelationID]
  -[SSVLoadDownloadQueueOperation needsAuthentication]
  -[SSVLoadDownloadQueueOperation requestProperties]
  -[SSVLoadDownloadQueueOperation reason]
  -[SSVLoadDownloadQueueOperation setAccountIdentifier:]
  -[SSVLoadDownloadQueueOperation _account]
  -[SSVLoadDownloadQueueOperation requestURL]
  -[SSVLoadDownloadQueueOperation initWithRequestProperties:]


SSVPlaybackKDLeaseRequest : SSVPlaybackLeaseRequest
  // instance methods
  -[SSVPlaybackKDLeaseRequest _actionParameterValue]
  -[SSVPlaybackKDLeaseRequest _URLBagKey]
  -[SSVPlaybackKDLeaseRequest _copyBodyDictionaryWithFairPlaySession:]


SSMetricsClickEvent : SSMetricsBaseEvent
 @property  id actionDetails
 @property  NSString *actionType
 @property  id impressions
 @property  NSString *locationDescription
 @property  NSNumber *positionX
 @property  NSNumber *positionY
 @property  NSString *targetIdentifier
 @property  NSString *targetType
 @property  NSString *targetURL

  // instance methods
  -[SSMetricsClickEvent actionType]
  -[SSMetricsClickEvent init]
  -[SSMetricsClickEvent setTargetType:]
  -[SSMetricsClickEvent positionX]
  -[SSMetricsClickEvent actionDetails]
  -[SSMetricsClickEvent locationDescription]
  -[SSMetricsClickEvent setActionDetails:]
  -[SSMetricsClickEvent setLocationDescription:]
  -[SSMetricsClickEvent setLocationWithEventLocations:]
  -[SSMetricsClickEvent setPositionX:]
  -[SSMetricsClickEvent setPositionY:]
  -[SSMetricsClickEvent setTargetURL:]
  -[SSMetricsClickEvent targetIdentifier]
  -[SSMetricsClickEvent setImpressions:]
  -[SSMetricsClickEvent targetURL]
  -[SSMetricsClickEvent targetType]
  -[SSMetricsClickEvent setActionType:]
  -[SSMetricsClickEvent setTargetIdentifier:]
  -[SSMetricsClickEvent positionY]
  -[SSMetricsClickEvent impressions]


SSStackShot : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSStackShot generateSymbolicatedStackShot]
  +[SSStackShot generateSymbolicatedStackShotPromise]


SSVMediaSocialPostArtist : NSObject /usr/lib/libc++.1.dylib <NSCopying, SSXPCCoding>
 @property  NSString *identifier
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVMediaSocialPostArtist copyWithZone:]
  -[SSVMediaSocialPostArtist initWithXPCEncoding:]
  -[SSVMediaSocialPostArtist copyXPCEncoding]
  -[SSVMediaSocialPostArtist .cxx_destruct]
  -[SSVMediaSocialPostArtist name]
  -[SSVMediaSocialPostArtist setIdentifier:]
  -[SSVMediaSocialPostArtist identifier]
  -[SSVMediaSocialPostArtist setName:]


SSAuthorizationMetricsController : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSAuthorizationMetricsController _dialogEventForPasswordAuthorizationWithDialogId:buyParams:topicName:userAgent:]
  +[SSAuthorizationMetricsController _clientIdForMetrics]
  +[SSAuthorizationMetricsController _mtTopicForBuyParams:]
  +[SSAuthorizationMetricsController _dialogEventForBiometricAuthorizationWithDialogId:buyParams:matchState:topicName:userAgent:]
  +[SSAuthorizationMetricsController _dialogEventForBiometricOptInWithResult:message:topicName:userAgent:error:]
  +[SSAuthorizationMetricsController _dialogEventForPaymentSheetPresentationErrorWithBuyParams:error:]
  +[SSAuthorizationMetricsController _clientIDForAccount:orUserID:]
  +[SSAuthorizationMetricsController authorizationDialogEventForParameters:]
  +[SSAuthorizationMetricsController dialogIdForMetricsDictionary:]
  +[SSAuthorizationMetricsController userActionDictionaryForBiometricMatchState:didBiometricsLockout:]
  +[SSAuthorizationMetricsController userActionDictionaryForUserAction:didBiometricsLockout:]


SSVDirectUpload : NSObject /usr/lib/libc++.1.dylib <SSXPCCoding>
 @property  NSString *categoryName
 @property  long long countOfBytesExpectedToSend
 @property  long long countOfBytesSent
 @property  NSError *error
 @property  BOOL explicitContent
 @property  long long persistentIdentifier
 @property  long long state
 @property  NSString *subtitle
 @property  NSURL *thumbnailImageURL
 @property  NSString *title
 @property  NSString *UTI
 @property  NSString *_uploadKind
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSVDirectUpload setSubtitle:]
  -[SSVDirectUpload initWithXPCEncoding:]
  -[SSVDirectUpload categoryName]
  -[SSVDirectUpload setCategoryName:]
  -[SSVDirectUpload copyXPCEncoding]
  -[SSVDirectUpload setCountOfBytesExpectedToSend:]
  -[SSVDirectUpload isExplicitContent]
  -[SSVDirectUpload setCountOfBytesSent:]
  -[SSVDirectUpload setError:]
  -[SSVDirectUpload setState:]
  -[SSVDirectUpload setPersistentIdentifier:]
  -[SSVDirectUpload .cxx_destruct]
  -[SSVDirectUpload _adoptStatusFromUpload:]
  -[SSVDirectUpload setTitle:]
  -[SSVDirectUpload setUTI:]
  -[SSVDirectUpload UTI]
  -[SSVDirectUpload title]
  -[SSVDirectUpload persistentIdentifier]
  -[SSVDirectUpload countOfBytesSent]
  -[SSVDirectUpload setThumbnailImageURL:]
  -[SSVDirectUpload thumbnailImageURL]
  -[SSVDirectUpload error]
  -[SSVDirectUpload _uploadKind]
  -[SSVDirectUpload _setUploadKind:]
  -[SSVDirectUpload isEqual:]
  -[SSVDirectUpload countOfBytesExpectedToSend]
  -[SSVDirectUpload subtitle]
  -[SSVDirectUpload state]
  -[SSVDirectUpload setExplicitContent:]


SSMetricsEnterEvent : SSMetricsBaseEvent
 @property  NSString *enterType
 @property  NSString *referringAppName
 @property  NSString *referringURL

  // instance methods
  -[SSMetricsEnterEvent setReferringAppName:]
  -[SSMetricsEnterEvent init]
  -[SSMetricsEnterEvent referringURL]
  -[SSMetricsEnterEvent setReferringURL:]
  -[SSMetricsEnterEvent setEnterType:]
  -[SSMetricsEnterEvent setEnterTypeWithLaunchReason:]
  -[SSMetricsEnterEvent referringAppName]
  -[SSMetricsEnterEvent enterType]


SSMetricsExitEvent : SSMetricsBaseEvent
 @property  NSString *exitType
 @property  NSString *exitURL

  // instance methods
  -[SSMetricsExitEvent init]
  -[SSMetricsExitEvent exitType]
  -[SSMetricsExitEvent exitURL]
  -[SSMetricsExitEvent setExitURL:]
  -[SSMetricsExitEvent setExitType:]
  -[SSMetricsExitEvent setExitTypeWithSuspendReason:]


SSDownloadManagerAppShim : SSDownloadManager <ASDJobManagerObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSDownloadManagerAppShim moveDownload:beforeDownload:completionBlock:]
  -[SSDownloadManagerAppShim _copyDownloadsForMessage:downloadIDs:]
  -[SSDownloadManagerAppShim initWithManagerOptions:]
  -[SSDownloadManagerAppShim restartDownloads:completionBlock:]
  -[SSDownloadManagerAppShim resumeDownloads:completionBlock:]
  -[SSDownloadManagerAppShim _insertDownloads:before:after:completionBlock:]
  -[SSDownloadManagerAppShim setDownloads:forKinds:completionBlock:]
  -[SSDownloadManagerAppShim _pauseDownloads:forced:completionBlock:]
  -[SSDownloadManagerAppShim finishDownloads:]
  -[SSDownloadManagerAppShim cancelDownloads:completionBlock:]
  -[SSDownloadManagerAppShim __app_sendDownloadsChanged:filterSoftware:]
  -[SSDownloadManagerAppShim .cxx_destruct]
  -[SSDownloadManagerAppShim __app_setPropertiesForActivity:withDownload:]
  -[SSDownloadManagerAppShim __app_resumeDownloads:completionBlock:]
  -[SSDownloadManagerAppShim __app_extractJobIDsFromSoftwareDownloads:]
  -[SSDownloadManagerAppShim jobManager:changedJobs:]
  -[SSDownloadManagerAppShim __app_getAllDownloads]
  -[SSDownloadManagerAppShim __app_insertDownloads:before:after:completionBlock:]
  -[SSDownloadManagerAppShim _sendDownloadsChanged:]
  -[SSDownloadManagerAppShim __app_installManifest:completionBlock:]
  -[SSDownloadManagerAppShim __app_convertOptions:]
  -[SSDownloadManagerAppShim __app_pauseDownloads:completionBlock:]
  -[SSDownloadManagerAppShim __app_newAssetWithDownloadAsset:assetType:]
  -[SSDownloadManagerAppShim __app_filterDownloads:withResult:]
  -[SSDownloadManagerAppShim cancelAllDownloadsWithCompletionBlock:]
  -[SSDownloadManagerAppShim __app_newManifestWithType:]
  -[SSDownloadManagerAppShim __app_downloadsForJobs:]
  -[SSDownloadManagerAppShim jobManager:updatedProgressOfJobs:]
  -[SSDownloadManagerAppShim moveDownload:afterDownload:completionBlock:]
  -[SSDownloadManagerAppShim __app_newActivityWithDownload:]
  -[SSDownloadManagerAppShim __app_dispatchBlock:withError:]
  -[SSDownloadManagerAppShim __app_finishDownloads:]
  -[SSDownloadManagerAppShim jobManager:updatedStateOfJobs:]
  -[SSDownloadManagerAppShim __app_cancelDownloads:completionBlock:]


SSDoubleLinkedList : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *listIdentifier
 @property  NSArray *allNodes
 @property  unsigned long count
 @property  SSDoubleLinkedListNode *head
 @property  SSDoubleLinkedListNode *tail

  // instance methods
  -[SSDoubleLinkedList setHead:]
  -[SSDoubleLinkedList head]
  -[SSDoubleLinkedList setListIdentifier:]
  -[SSDoubleLinkedList tail]
  -[SSDoubleLinkedList setTail:]
  -[SSDoubleLinkedList listIdentifier]
  -[SSDoubleLinkedList init]
  -[SSDoubleLinkedList appendObject:]
  -[SSDoubleLinkedList .cxx_destruct]
  -[SSDoubleLinkedList insertNode:]
  -[SSDoubleLinkedList removeAllNodes]
  -[SSDoubleLinkedList appendNode:]
  -[SSDoubleLinkedList insertObject:]
  -[SSDoubleLinkedList count]
  -[SSDoubleLinkedList removeNode:]
  -[SSDoubleLinkedList allNodes]


SSDoubleLinkedListNode : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *listIdentifier
 @property  SSDoubleLinkedListNode *previous
 @property  id object
 @property  SSDoubleLinkedListNode *next

  // instance methods
  -[SSDoubleLinkedListNode setListIdentifier:]
  -[SSDoubleLinkedListNode object]
  -[SSDoubleLinkedListNode listIdentifier]
  -[SSDoubleLinkedListNode next]
  -[SSDoubleLinkedListNode initWithObject:]
  -[SSDoubleLinkedListNode previous]
  -[SSDoubleLinkedListNode init]
  -[SSDoubleLinkedListNode .cxx_destruct]
  -[SSDoubleLinkedListNode setPrevious:]
  -[SSDoubleLinkedListNode setObject:]
  -[SSDoubleLinkedListNode setNext:]


SSMetricsImpressionsEvent : SSMetricsBaseEvent
 @property  NSArray *impressionIdentifiers

  // instance methods
  -[SSMetricsImpressionsEvent init]
  -[SSMetricsImpressionsEvent impressionIdentifiers]
  -[SSMetricsImpressionsEvent setImpressionIdentifiers:]


SSSoftwareDownload : SSDownload
 @property  ASDJob *job

  // instance methods
  -[SSSoftwareDownload restart]
  -[SSSoftwareDownload isCancelable]
  -[SSSoftwareDownload failureError]
  -[SSSoftwareDownload setMetadata:]
  -[SSSoftwareDownload bytesTotal]
  -[SSSoftwareDownload initWithPersistentIdentifier:]
  -[SSSoftwareDownload pause]
  -[SSSoftwareDownload resume]
  -[SSSoftwareDownload setDownloadHandler:completionBlock:]
  -[SSSoftwareDownload assetsForType:]
  -[SSSoftwareDownload valueForProperty:]
  -[SSSoftwareDownload downloadPhaseIdentifier]
  -[SSSoftwareDownload .cxx_destruct]
  -[SSSoftwareDownload addAsset:forType:]
  -[SSSoftwareDownload _becomeManagedOnConnection:]
  -[SSSoftwareDownload isEligibleForRestore:]
  -[SSSoftwareDownload setValuesWithStoreDownloadMetadata:]
  -[SSSoftwareDownload backgroundNetworkingJobGroupName]
  -[SSSoftwareDownload removeAsset:]
  -[SSSoftwareDownload estimatedSecondsRemaining]
  -[SSSoftwareDownload networkConstraints]
  -[SSSoftwareDownload setBackgroundNetworkingJobGroupName:]
  -[SSSoftwareDownload setNetworkConstraints:]
  -[SSSoftwareDownload isBackgroundNetworkingUserInitiated]
  -[SSSoftwareDownload setBackgroundNetworkingUserInitiated:]
  -[SSSoftwareDownload job]
  -[SSSoftwareDownload bytesDownloaded]
  -[SSSoftwareDownload downloadSizeLimit]
  -[SSSoftwareDownload setDownloadPolicy:]
  -[SSSoftwareDownload downloadPolicy]
  -[SSSoftwareDownload prioritizeAboveDownload:completionBlock:]
  -[SSSoftwareDownload initWithJob:]
  -[SSSoftwareDownload setStatus:]
  -[SSSoftwareDownload metadata]
  -[SSSoftwareDownload percentComplete]
  -[SSSoftwareDownload status]


SSMetricsMediaEvent : SSMetricsBaseEvent
 @property  NSNumber *itemIdentifier
 @property  NSString *locationDescription
 @property  NSString *mediaEventType
 @property  NSString *mediaURL

  // instance methods
  -[SSMetricsMediaEvent itemIdentifier]
  -[SSMetricsMediaEvent init]
  -[SSMetricsMediaEvent locationDescription]
  -[SSMetricsMediaEvent setLocationDescription:]
  -[SSMetricsMediaEvent setLocationWithEventLocations:]
  -[SSMetricsMediaEvent mediaEventType]
  -[SSMetricsMediaEvent setMediaEventType:]
  -[SSMetricsMediaEvent setMediaURL:]
  -[SSMetricsMediaEvent mediaURL]
  -[SSMetricsMediaEvent setItemIdentifier:]


SSVPlayActivityTable : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long currentEventsRevision
 @property  NSString *eventsRevisionVersionToken

  // class methods
  +[SSVPlayActivityTable databasePath]
  +[SSVPlayActivityTable _setupDatabase:]
  +[SSVPlayActivityTable _eventsDatabaseTableName]
  +[SSVPlayActivityTable _propertiesDatabaseTableName]

  // instance methods
  -[SSVPlayActivityTable currentEventsRevision]
  -[SSVPlayActivityTable eventsRevisionVersionToken]
  -[SSVPlayActivityTable insertPlayActivityEvent:withRevision:returningError:]
  -[SSVPlayActivityTable getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:]
  -[SSVPlayActivityTable setCurrentEventsRevision:]
  -[SSVPlayActivityTable removePlayActivityEventsUpToRevision:returningError:]
  -[SSVPlayActivityTable revisionsIndexSetForPlayActivityEvents:]
  -[SSVPlayActivityTable init]
  -[SSVPlayActivityTable getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:]
  -[SSVPlayActivityTable revisionsIndexSetForPlayActivityEventPersistentIDs:]
  -[SSVPlayActivityTable .cxx_destruct]
  -[SSVPlayActivityTable _removeDatabaseReturningError:]
  -[SSVPlayActivityTable _valueForDatabasePropertyKey:]
  -[SSVPlayActivityTable _setValue:forDatabasePropertyKey:]
  -[SSVPlayActivityTable _revisionsIndexSetUsingPersisentIDGenerationBlock:count:]
  -[SSVPlayActivityTable _getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:shouldFilterStoreAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:]
  -[SSVPlayActivityTable performTransactionWithBlock:]


SSVPlaybackLeaseResponse : SSVPlaybackResponse <NSCopying>
 @property  BOOL offlineSlotAvailable
 @property  NSData *leaseInfoData
 @property  NSData *subscriptionKeyBagData
 @property  NSData *certificateData
 @property  unsigned long KDMovieIdentifier
 @property  double leaseDuration

  // instance methods
  -[SSVPlaybackLeaseResponse copyWithZone:]
  -[SSVPlaybackLeaseResponse setCertificateData:]
  -[SSVPlaybackLeaseResponse .cxx_destruct]
  -[SSVPlaybackLeaseResponse certificateData]
  -[SSVPlaybackLeaseResponse itemForItemIdentifier:]
  -[SSVPlaybackLeaseResponse KDMovieIdentifier]
  -[SSVPlaybackLeaseResponse leaseDuration]
  -[SSVPlaybackLeaseResponse isOfflineSlotAvailable]
  -[SSVPlaybackLeaseResponse leaseInfoData]
  -[SSVPlaybackLeaseResponse subscriptionKeyBagData]
  -[SSVPlaybackLeaseResponse setKDMovieIdentifier:]


SSMetricsSearchEvent : SSMetricsBaseEvent
 @property  NSString *searchTerm
 @property  NSString *actionType
 @property  id actionDetails
 @property  NSString *targetIdentifier
 @property  NSString *targetType
 @property  NSString *targetURL

  // instance methods
  -[SSMetricsSearchEvent searchTerm]
  -[SSMetricsSearchEvent setSearchTerm:]
  -[SSMetricsSearchEvent actionType]
  -[SSMetricsSearchEvent init]
  -[SSMetricsSearchEvent setTargetType:]
  -[SSMetricsSearchEvent actionDetails]
  -[SSMetricsSearchEvent setActionDetails:]
  -[SSMetricsSearchEvent setLocationWithEventLocations:]
  -[SSMetricsSearchEvent setTargetURL:]
  -[SSMetricsSearchEvent targetIdentifier]
  -[SSMetricsSearchEvent targetURL]
  -[SSMetricsSearchEvent targetType]
  -[SSMetricsSearchEvent setActionType:]
  -[SSMetricsSearchEvent setTargetIdentifier:]


(SSAdditions)
	// class methods
	+[(SSAdditions) numberWithItemIdentifier:]

	// instance methods
	-[(SSAdditions) itemIdentifierValue]
	-[(SSAdditions) initWithItemIdentifier:]

(SSExtensions)
	// class methods
	+[(SSExtensions) _ss_unescapedStringForString:]
	+[(SSExtensions) _ss_copyDictionaryForQueryString:unescapedValues:]

	// instance methods
	-[(SSExtensions) initWithXPCEncoding:]
	-[(SSExtensions) isStoreServicesURL]
	-[(SSExtensions) copyXPCEncoding]
	-[(SSExtensions) _ss_URLByRemovingQueryParameter:]
	-[(SSExtensions) _ss_hasQueryParameter:]
	-[(SSExtensions) _ss_valueForQueryParameter:]

NSURLResponse(SSVURLCacheAdditions)
	// instance methods
	-[NSURLResponse(SSVURLCacheAdditions) initWithXPCEncoding:]
	-[NSURLResponse(SSVURLCacheAdditions) copyXPCEncoding]
	-[NSURLResponse(SSVURLCacheAdditions) ssv_isExpiredResponse]

(SSXPCCoding)
	// instance methods
	-[(SSXPCCoding) initWithXPCEncoding:]
	-[(SSXPCCoding) copyXPCEncoding]

(SSXPCCoding)
	// instance methods
	-[(SSXPCCoding) initWithXPCEncoding:]
	-[(SSXPCCoding) copyXPCEncoding]

NSIndexSet(SSXPCCoding)
	// instance methods
	-[NSIndexSet(SSXPCCoding) initWithXPCEncoding:]
	-[NSIndexSet(SSXPCCoding) copyXPCEncoding]

NSURLRequest(SSXPCCoding)
	// instance methods
	-[NSURLRequest(SSXPCCoding) initWithXPCEncoding:]
	-[NSURLRequest(SSXPCCoding) copyXPCEncoding]

ACAccountStore(SSExtensions)
	// class methods
	+[ACAccountStore(SSExtensions) _accountTypesCache]

	// instance methods
	-[ACAccountStore(SSExtensions) _ss_accountTypeWithIdentifier:error:]
	-[ACAccountStore(SSExtensions) _ss_IDMSAccountForAccount:error:]
	-[ACAccountStore(SSExtensions) _ss_iCloudAccountForAccount:error:]
	-[ACAccountStore(SSExtensions) _ss_appleAuthenticationAccountForAccount:error:]
	-[ACAccountStore(SSExtensions) _correspondingAccountWithAccountTypeIdentifier:forAccount:error:]
	-[ACAccountStore(SSExtensions) _ss_iTunesAccountForAccount:error:]

(SSExtensions)
(SSExtensions)
	// instance methods
	-[(SSExtensions) _ss_map:]
	-[(SSExtensions) _ss_arrayByRemovingObjectsPassingTest:]
	-[(SSExtensions) _ss_firstObjectPassingTest:]
	-[(SSExtensions) _ss_any:]
	-[(SSExtensions) _ss_filterUsingTest:]
	-[(SSExtensions) _ss_index:]

(HexUtil)
	// instance methods
	-[(HexUtil) numberFromHexDigits]

ACAccount(SSExtensions)
	// instance methods
	-[ACAccount(SSExtensions) _ss_isiCloudAccount]
	-[ACAccount(SSExtensions) _ss_isiTunesAccount]
	-[ACAccount(SSExtensions) _ss_isIDMSAccount]
	-[ACAccount(SSExtensions) _ss_isLocalAccount]
	-[ACAccount(SSExtensions) _ss_isAppleAuthenticationAccount]
	-[ACAccount(SSExtensions) _ss_secureToken]
	-[ACAccount(SSExtensions) _ss_setSecureToken:]
	-[ACAccount(SSExtensions) _ss_isDuplicate:]
	-[ACAccount(SSExtensions) _ss_altDSID]
	-[ACAccount(SSExtensions) _ss_hashedDescription]
	-[ACAccount(SSExtensions) _ss_DSID]

01 00 0600 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0600 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountCredential 
01 00 0600 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0a00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 0a00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationContext 
01 00 0a00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 0a00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKDevice 
01 00 0a00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKUsernameFormatter 
01 00 0700 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBag 
01 00 0700 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBagKeySet 
01 00 0700 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSDefaults 
01 00 0700 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSDevice 
01 00 0700 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSDialogRequest 
01 00 0700 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSHandleDialogResultTask 
01 00 0700 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLogConfig 
01 00 0700 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMetricsLoadURLContext 
01 00 0700 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMetricsLoadURLEvent 
01 00 0700 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMutableBagKeySet 
01 00 0700 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSProcessInfo 
01 00 0700 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSSystemAlertDialogTask 
01 00 0900 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 0900 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 0d00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 0d00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTMessageCenter 
01 00 0d00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTPhoneNumber 
01 00 0d00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 1a00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1300 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCachedURLResponse 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConditionLock 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPCookie 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPCookieStorage 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponentsFormatter 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLAuthenticationChallenge 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCache 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCredential 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLProtocol 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLResponse 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1540 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
