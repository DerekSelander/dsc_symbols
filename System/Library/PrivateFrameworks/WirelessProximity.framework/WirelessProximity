|| __DATA.__objc_data _OBJC_CLASS_$_WPAdvertising
|| __DATA.__objc_data _OBJC_CLASS_$_WPDataTransfer
|| __DATA.__objc_data _OBJC_CLASS_$_WPMagicSwitch
|| __DATA.__objc_data _OBJC_CLASS_$_WPTest
|| __DATA.__objc_data _OBJC_METACLASS_$_WPAdvertising
|| __DATA.__objc_data _OBJC_METACLASS_$_WPDataTransfer
|| __DATA.__objc_data _OBJC_METACLASS_$_WPMagicSwitch
|| __DATA.__objc_data _OBJC_METACLASS_$_WPTest
|| __DATA_CONST.__const _WPAirPlaySoloAdvertisingMode
|| __DATA_CONST.__const _WPAirPlaySoloKeyDeviceAddress
|| __DATA_CONST.__const _WPAirPlaySoloKeyDeviceTime
|| __DATA_CONST.__const _WPBeaconAdvInterval
|| __DATA_CONST.__const _WPBeaconTX
|| __DATA_CONST.__const _WPBeaconType
|| __DATA_CONST.__const _WPBeaconTypeATVSetup
|| __DATA_CONST.__const _WPBeaconTypeAirPlayTargetPresence
|| __DATA_CONST.__const _WPBeaconTypeAirPlayTargetPresencePayload
|| __DATA_CONST.__const _WPBeaconTypeCompany
|| __DATA_CONST.__const _WPBeaconTypeCompanyConfig
|| __DATA_CONST.__const _WPBeaconTypeCompanyMajor
|| __DATA_CONST.__const _WPBeaconTypeCompanyMinor
|| __DATA_CONST.__const _WPBeaconTypeCompanyUUID
|| __DATA_CONST.__const _WPErrorDomain
|| __DATA_CONST.__const _WPHeySiriAdvertisingData
|| __DATA_CONST.__const _WPHeySiriKeyDeviceAddress
|| __DATA_CONST.__const _WPHeySiriKeyDeviceTime
|| __DATA_CONST.__const _WPHeySiriKeyDeviceUUID
|| __DATA_CONST.__const _WPHeySiriKeyManufacturerData
|| __DATA_CONST.__const _WPHomeKitScanBlobData
|| __DATA_CONST.__const _WPHomeKitScanDutyCycle
|| __DATA_CONST.__const _WPHomeKitScanMaskData
|| __DATA_CONST.__const _WPHomeKitTypes
|| __DATA_CONST.__const _WPMagicSwitchAdvertiseTypeInterval
|| __DATA_CONST.__const _WPMagicSwitchAdvertisingData
|| __DATA_CONST.__const _WPMagicSwitchScanBlobData
|| __DATA_CONST.__const _WPMagicSwitchScanDutyCycle
|| __DATA_CONST.__const _WPMagicSwitchScanMaskData
|| __DATA_CONST.__const _WPMagicSwitchScanPeers
|| __DATA_CONST.__const _WPNearbyKeyConnectLatencyCritical
|| __DATA_CONST.__const _WPNearbyKeyDeviceAddress
|| __DATA_CONST.__const _WPNearbyKeyDeviceTime
|| __DATA_CONST.__const _WPNearbyKeyManufacturerData
|| __DATA_CONST.__const _WPNearbyKeyPaired
|| __DATA_CONST.__const _WPNearbyKeyRSSI
|| __DATA_CONST.__const _WPNearbyLEPipeCapable
|| __DATA_CONST.__const _WPObjectDiscoveryKeyAddress
|| __DATA_CONST.__const _WPObjectDiscoveryKeyData
|| __DATA_CONST.__const _WPObjectDiscoveryKeyOptional
|| __DATA_CONST.__const _WPObjectDiscoveryKeyRSSI
|| __DATA_CONST.__const _WPObjectDiscoveryKeyStatus
|| __DATA_CONST.__const _WPObjectDiscoveryKeyTime
|| __DATA_CONST.__const _WPPairingKeyAdvertisingChannel
|| __DATA_CONST.__const _WPPairingKeyDeviceTime
|| __DATA_CONST.__const _WPPairingKeyName
|| __DATA_CONST.__const _WPPairingKeyPaired
|| __DATA_CONST.__const _WPPairingKeyRSSI
|| __DATA_CONST.__const _WPPuckType
|| __DATA_CONST.__const _WPPuckTypeAirPlaySoloAdvertisingChannel
|| __DATA_CONST.__const _WPPuckTypeAirPlaySoloAdvertisingData
|| __DATA_CONST.__const _WPPuckTypeAirPlaySoloRSSI
|| __DATA_CONST.__const _WPPuckTypeAirPlaySoloSourcePresence
|| __DATA_CONST.__const _WPPuckTypeAirPlaySoloTargetPresence
|| __DATA_CONST.__const _WPZoneTrackerKeyMajor
|| __DATA_CONST.__const _WPZoneTrackerKeyMinor
|| __DATA_CONST.__const _WPZoneTrackerKeyZone
|| __DATA_CONST.__const _WiproxBTPairingLaunchNotification
|| __DATA_CONST.__const _kSPAdvertisementData
|| __DATA_CONST.__const _kSPDeviceAddress
|| __DATA_CONST.__const _kSPOptional
|| __DATA_CONST.__const _kSPScanDate
|| __DATA_CONST.__const _kSPStatus
|| __DATA_CONST.__const _kSPrssi
|| __DATA_DIRTY.__common _WPLogInitOnce
|| __DATA_DIRTY.__common _WiProxLog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPAWDL
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPAdvertisingRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPAirPlaySolo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPContinuity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPDObjectDiscoveryData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPDeviceScanner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPHeySiri
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPHomeKit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPNearby
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPObjectDiscovery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPPairing
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPPeerTrackingRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPRanging
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPScanRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPTransfer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPZoneTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WPZoneTrackingRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPAWDL
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPAdvertisingRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPAirPlaySolo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPContinuity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPDObjectDiscoveryData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPDeviceScanner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPHeySiri
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPHomeKit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPNearby
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPObjectDiscovery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPPairing
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPPeerTrackingRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPRanging
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPScanRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPTransfer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPZoneTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WPZoneTrackingRequest
|| __TEXT.__text _WPLoggingInit
__ CoreBluetooth: _CBAdvertisementDataSaturated
__ CoreBluetooth: _CBAdvertisementDataWlanOn
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
WPHomeKit : WPClient
 @property  <WPHomeKitDelegate> *delegate

  // instance methods
  -[WPHomeKit invalidate]
  -[WPHomeKit delegate]
  -[WPHomeKit setDelegate:]
  -[WPHomeKit .cxx_destruct]
  -[WPHomeKit initWithDelegate:queue:]
  -[WPHomeKit stopScanningForType:]
  -[WPHomeKit stateDidChange:]
  -[WPHomeKit dutyCycleToScanningRates:]
  -[WPHomeKit clientTypeFromHomeKitType:]
  -[WPHomeKit homeKitTypeFromClientType:]
  -[WPHomeKit clientAsString]
  -[WPHomeKit startScanningWithData:forType:]
  -[WPHomeKit checkAllowDuplicate]
  -[WPHomeKit deviceDiscovered:]
  -[WPHomeKit scanningStartedOfType:]
  -[WPHomeKit scanningStoppedOfType:]
  -[WPHomeKit scanningFailedToStart:ofType:]


WPAWDL : WPClient
 @property  <WPAWDLDelegate> *delegate
 @property  BOOL useSmallerAirDrop

  // class methods
  +[WPAWDL hashEmail:]
  +[WPAWDL generateDataFromEmails:]

  // instance methods
  -[WPAWDL invalidate]
  -[WPAWDL delegate]
  -[WPAWDL setDelegate:]
  -[WPAWDL .cxx_destruct]
  -[WPAWDL initWithDelegate:]
  -[WPAWDL initWithDelegate:queue:]
  -[WPAWDL stopConnectionlessAWDLServiceScanning]
  -[WPAWDL startConnectionlessAWDLServiceScanning]
  -[WPAWDL stateDidChange:]
  -[WPAWDL clientAsString]
  -[WPAWDL deviceDiscovered:]
  -[WPAWDL scanningStartedOfType:]
  -[WPAWDL scanningStoppedOfType:]
  -[WPAWDL scanningFailedToStart:ofType:]
  -[WPAWDL initWithDelegate:queue:machName:]
  -[WPAWDL advertisingFailedToStart:ofType:]
  -[WPAWDL useSmallerAirDrop]
  -[WPAWDL startConnectionlessAWDLServiceAdvertisingWithData:]
  -[WPAWDL updateAdvertisingRequest:withUpdate:]
  -[WPAWDL stopConnectionlessAWDLServiceAdvertising]
  -[WPAWDL advertisingStartedOfType:]
  -[WPAWDL advertisingStoppedOfType:withError:]
  -[WPAWDL advertisingPendingOfType:]
  -[WPAWDL setUseSmallerAirDrop:]


WPDataTransfer : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableData *currentReceivedData
 @property  unsigned short currentDataSize
 @property  BOOL receivedFirstPacket
 @property  NSUUID *peerUUID

  // instance methods
  -[WPDataTransfer .cxx_destruct]
  -[WPDataTransfer setCurrentReceivedData:]
  -[WPDataTransfer setReceivedFirstPacket:]
  -[WPDataTransfer receivedFirstPacket]
  -[WPDataTransfer setCurrentDataSize:]
  -[WPDataTransfer currentDataSize]
  -[WPDataTransfer peerUUID]
  -[WPDataTransfer currentReceivedData]
  -[WPDataTransfer initDataTransferForPeer:]
  -[WPDataTransfer resetTransfer]
  -[WPDataTransfer addNewData:]
  -[WPDataTransfer setPeerUUID:]


WPRanging : WPClient
 @property  <WPRangingDelegate> *delegate

  // instance methods
  -[WPRanging invalidate]
  -[WPRanging delegate]
  -[WPRanging setDelegate:]
  -[WPRanging .cxx_destruct]
  -[WPRanging initWithDelegate:queue:]
  -[WPRanging stateDidChange:]
  -[WPRanging clientAsString]
  -[WPRanging rangingEnabled:withError:]
  -[WPRanging enableRanging:reply:]
  -[WPRanging isRangingEnabledReply:]
  -[WPRanging enableRanging:]


WPZoneTrackingRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned char clientType
 @property  {?=qqq} scanningRates
 @property  BOOL scanWhenScreenOff
 @property  NSMutableSet *zones

  // class methods
  +[WPZoneTrackingRequest supportsSecureCoding]

  // instance methods
  -[WPZoneTrackingRequest init]
  -[WPZoneTrackingRequest encodeWithCoder:]
  -[WPZoneTrackingRequest initWithCoder:]
  -[WPZoneTrackingRequest .cxx_destruct]
  -[WPZoneTrackingRequest zones]
  -[WPZoneTrackingRequest clientType]
  -[WPZoneTrackingRequest setClientType:]
  -[WPZoneTrackingRequest setScanningRates:]
  -[WPZoneTrackingRequest scanningRates]
  -[WPZoneTrackingRequest scanWhenScreenOff]
  -[WPZoneTrackingRequest setScanWhenScreenOff:]
  -[WPZoneTrackingRequest setZones:]


WPAdvertising : WPClient
 @property  <WPAdvertisingDelegate> *delegate

  // class methods
  +[WPAdvertising puckStringToType:]
  +[WPAdvertising puckTypeToString:]

  // instance methods
  -[WPAdvertising invalidate]
  -[WPAdvertising delegate]
  -[WPAdvertising setDelegate:]
  -[WPAdvertising .cxx_destruct]
  -[WPAdvertising initWithDelegate:queue:]
  -[WPAdvertising stateDidChange:]
  -[WPAdvertising registerService:]
  -[WPAdvertising clientAsString]
  -[WPAdvertising advertisingFailedToStart:ofType:]
  -[WPAdvertising advertisingStartedOfType:]
  -[WPAdvertising advertisingStoppedOfType:withError:]
  -[WPAdvertising advertisingPendingOfType:]
  -[WPAdvertising parseCompanyData:]
  -[WPAdvertising deregisterService:]


WPAdvertisingRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  unsigned char clientType
 @property  long long priorityValue
 @property  NSData *advertisingData
 @property  long long advertisingRate
 @property  double updateTime
 @property  BOOL connectable
 @property  NSDictionary *advertisingOptions
 @property  BOOL stopOnAdvertisingAddressChange

  // class methods
  +[WPAdvertisingRequest supportsSecureCoding]
  +[WPAdvertisingRequest requestForClientType:]

  // instance methods
  -[WPAdvertisingRequest init]
  -[WPAdvertisingRequest copyWithZone:]
  -[WPAdvertisingRequest compare:]
  -[WPAdvertisingRequest encodeWithCoder:]
  -[WPAdvertisingRequest initWithCoder:]
  -[WPAdvertisingRequest .cxx_destruct]
  -[WPAdvertisingRequest updateTime]
  -[WPAdvertisingRequest setUpdateTime:]
  -[WPAdvertisingRequest clientType]
  -[WPAdvertisingRequest setClientType:]
  -[WPAdvertisingRequest connectable]
  -[WPAdvertisingRequest setConnectable:]
  -[WPAdvertisingRequest setAdvertisingRate:]
  -[WPAdvertisingRequest setAdvertisingData:]
  -[WPAdvertisingRequest advertisingData]
  -[WPAdvertisingRequest advertisingRate]
  -[WPAdvertisingRequest priorityValue]
  -[WPAdvertisingRequest setPriorityValue:]
  -[WPAdvertisingRequest advertisingOptions]
  -[WPAdvertisingRequest setAdvertisingOptions:]
  -[WPAdvertisingRequest stopOnAdvertisingAddressChange]
  -[WPAdvertisingRequest setStopOnAdvertisingAddressChange:]
  -[WPAdvertisingRequest changePriorityValue:]


WPPairing : WPClient
 @property  <WPPairingDelegate> *delegate
 @property  NSMutableSet *ignoredDevices
 @property  BOOL allowScreenOffScanning

  // instance methods
  -[WPPairing invalidate]
  -[WPPairing delegate]
  -[WPPairing setDelegate:]
  -[WPPairing .cxx_destruct]
  -[WPPairing initWithDelegate:]
  -[WPPairing initWithDelegate:queue:]
  -[WPPairing stopProximityPairingServiceScanning]
  -[WPPairing startProximityPairingServiceScanningWithRSSI:duplicates:scanMode:]
  -[WPPairing stateDidChange:]
  -[WPPairing clientAsString]
  -[WPPairing deviceDiscovered:]
  -[WPPairing scanningStartedOfType:]
  -[WPPairing scanningStoppedOfType:]
  -[WPPairing scanningFailedToStart:ofType:]
  -[WPPairing initWithDelegate:queue:machName:]
  -[WPPairing startProximityPairingServiceScanningWithRSSI:duplicates:]
  -[WPPairing startProximityPairingServiceScanning]
  -[WPPairing ignoreDeviceUntilNextUnlock:ignoreDevice:]
  -[WPPairing ignoredDevices]
  -[WPPairing setIgnoredDevices:]
  -[WPPairing allowScreenOffScanning]
  -[WPPairing setAllowScreenOffScanning:]


WPCharacteristic : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSUUID *uuid
 @property  unsigned long properties
 @property  unsigned long permissions
 @property  NSData *data
 @property  long long writeType

  // class methods
  +[WPCharacteristic supportsSecureCoding]

  // instance methods
  -[WPCharacteristic encodeWithCoder:]
  -[WPCharacteristic initWithCoder:]
  -[WPCharacteristic .cxx_destruct]
  -[WPCharacteristic data]
  -[WPCharacteristic setData:]
  -[WPCharacteristic uuid]
  -[WPCharacteristic setUuid:]
  -[WPCharacteristic properties]
  -[WPCharacteristic setProperties:]
  -[WPCharacteristic permissions]
  -[WPCharacteristic setPermissions:]
  -[WPCharacteristic writeType]
  -[WPCharacteristic setWriteType:]


WPAirPlaySolo : WPClient
 @property  <WPAirPlaySoloDelegate> *delegate

  // class methods
  +[WPAirPlaySolo puckStringToType:]
  +[WPAirPlaySolo puckTypeToString:]

  // instance methods
  -[WPAirPlaySolo init]
  -[WPAirPlaySolo invalidate]
  -[WPAirPlaySolo delegate]
  -[WPAirPlaySolo setDelegate:]
  -[WPAirPlaySolo .cxx_destruct]
  -[WPAirPlaySolo initWithDelegate:queue:]
  -[WPAirPlaySolo stateDidChange:]
  -[WPAirPlaySolo clientAsString]
  -[WPAirPlaySolo deviceDiscovered:]
  -[WPAirPlaySolo scanningStartedOfType:]
  -[WPAirPlaySolo scanningStoppedOfType:]
  -[WPAirPlaySolo scanningFailedToStart:ofType:]
  -[WPAirPlaySolo advertisingFailedToStart:ofType:]
  -[WPAirPlaySolo advertisingStartedOfType:]
  -[WPAirPlaySolo advertisingStoppedOfType:withError:]
  -[WPAirPlaySolo advertisingPendingOfType:]
  -[WPAirPlaySolo peerTrackingFull]
  -[WPAirPlaySolo peerTrackingAvailable]
  -[WPAirPlaySolo startConnectionlessAdvertisingWithData:]
  -[WPAirPlaySolo stopConnectionlessAdvertising]
  -[WPAirPlaySolo stopConnectionlessAdvertising:]
  -[WPAirPlaySolo startConnectionlessScanningWithData:]
  -[WPAirPlaySolo stopConnectionlessScanningWithData:]
  -[WPAirPlaySolo startTrackingPeer:withData:]
  -[WPAirPlaySolo stopTrackingPeer:withData:]
  -[WPAirPlaySolo startedTrackingPeer:ofType:]
  -[WPAirPlaySolo stoppedTrackingPeer:ofType:]
  -[WPAirPlaySolo failedToStartTrackingPeer:error:]
  -[WPAirPlaySolo foundPeer:ofType:]
  -[WPAirPlaySolo lostPeer:ofType:]


WPTest : WPClient
 @property  <WPTestDelegate> *delegate
 @property  NSMutableDictionary *transfers

  // class methods
  +[WPTest holdVoucherForConnections]

  // instance methods
  -[WPTest init]
  -[WPTest invalidate]
  -[WPTest delegate]
  -[WPTest setDelegate:]
  -[WPTest .cxx_destruct]
  -[WPTest transfers]
  -[WPTest initWithDelegate:queue:]
  -[WPTest stopAdvertisingOfType:]
  -[WPTest stopScanningForType:]
  -[WPTest disconnectFromPeer:]
  -[WPTest startAdvertisingOfType:data:priority:mode:options:]
  -[WPTest connectToPeer:withOptions:]
  -[WPTest sendData:toPeer:]
  -[WPTest startScanningForType:data:mask:peers:scanMode:rssi:duplicates:scanCache:]
  -[WPTest stateDidChange:]
  -[WPTest setTransfers:]
  -[WPTest clientAsString]
  -[WPTest deviceDiscovered:]
  -[WPTest scanningStartedOfType:]
  -[WPTest scanningStoppedOfType:]
  -[WPTest scanningFailedToStart:ofType:]
  -[WPTest advertisingFailedToStart:ofType:]
  -[WPTest advertisingStartedOfType:]
  -[WPTest advertisingStoppedOfType:withError:]
  -[WPTest advertisingPendingOfType:]
  -[WPTest receivedData:forCharacteristic:inService:forPeripheral:]
  -[WPTest disconnectedDevice:withError:]
  -[WPTest connectedDevice:withError:shouldDiscover:]
  -[WPTest connectedDeviceOverLEPipe:]
  -[WPTest sentData:toEndpoint:forPeripheral:withError:]
  -[WPTest receivedData:fromEndpoint:forPeripheral:]
  -[WPTest central:subscribed:toCharacteristic:inService:]
  -[WPTest disconnectedDeviceOverLEPipe:withError:]


WPDObjectDiscoveryData : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableData *address
 @property  NSMutableData *payload
 @property  long long length

  // class methods
  +[WPDObjectDiscoveryData applyMaskToAddress:]
  +[WPDObjectDiscoveryData addressFromNearbyToken:]
  +[WPDObjectDiscoveryData objectDiscoveryReportFromAdvReport:]
  +[WPDObjectDiscoveryData addressesFromNearbyTokens:]

  // instance methods
  -[WPDObjectDiscoveryData init]
  -[WPDObjectDiscoveryData length]
  -[WPDObjectDiscoveryData setLength:]
  -[WPDObjectDiscoveryData .cxx_destruct]
  -[WPDObjectDiscoveryData address]
  -[WPDObjectDiscoveryData setPayload:]
  -[WPDObjectDiscoveryData payload]
  -[WPDObjectDiscoveryData setAddress:]
  -[WPDObjectDiscoveryData wipeout]
  -[WPDObjectDiscoveryData updateWithKey:Status:Reserved:]


WPContinuity : WPClient
 @property  <WPContinuityDelegate> *delegate
 @property  long long btBandwidthState
 @property  NSMutableDictionary *transfers

  // class methods
  +[WPContinuity clientTypeFromContinuityType:]
  +[WPContinuity continuityTypeFromClientType:]

  // instance methods
  -[WPContinuity init]
  -[WPContinuity invalidate]
  -[WPContinuity delegate]
  -[WPContinuity setDelegate:]
  -[WPContinuity .cxx_destruct]
  -[WPContinuity transfers]
  -[WPContinuity initWithDelegate:queue:]
  -[WPContinuity stopAdvertisingOfType:]
  -[WPContinuity startScanningForType:withData:mask:peers:]
  -[WPContinuity startScanningForType:withData:mask:peers:boostedScan:duplicates:]
  -[WPContinuity stopScanningForType:]
  -[WPContinuity connectToPeer:]
  -[WPContinuity disconnectFromPeer:]
  -[WPContinuity startTrackingPeer:forType:]
  -[WPContinuity stopTrackingPeer:forType:]
  -[WPContinuity sendData:toPeer:]
  -[WPContinuity btBandwidthState]
  -[WPContinuity stateDidChange:]
  -[WPContinuity setTransfers:]
  -[WPContinuity clientAsString]
  -[WPContinuity deviceDiscovered:]
  -[WPContinuity scanningStartedOfType:]
  -[WPContinuity scanningStoppedOfType:]
  -[WPContinuity scanningFailedToStart:ofType:]
  -[WPContinuity advertisingFailedToStart:ofType:]
  -[WPContinuity updateAdvertisingRequest:withUpdate:]
  -[WPContinuity advertisingStartedOfType:]
  -[WPContinuity advertisingStoppedOfType:withError:]
  -[WPContinuity advertisingPendingOfType:]
  -[WPContinuity peerTrackingFull]
  -[WPContinuity peerTrackingAvailable]
  -[WPContinuity startedTrackingPeer:ofType:]
  -[WPContinuity stoppedTrackingPeer:ofType:]
  -[WPContinuity failedToStartTrackingPeer:error:]
  -[WPContinuity foundPeer:ofType:]
  -[WPContinuity lostPeer:ofType:]
  -[WPContinuity receivedData:forCharacteristic:inService:forPeripheral:]
  -[WPContinuity disconnectedDevice:withError:]
  -[WPContinuity connectedDevice:withError:shouldDiscover:]
  -[WPContinuity connectedDeviceOverLEPipe:]
  -[WPContinuity sentData:toEndpoint:forPeripheral:withError:]
  -[WPContinuity receivedData:fromEndpoint:forPeripheral:]
  -[WPContinuity central:subscribed:toCharacteristic:inService:]
  -[WPContinuity disconnectedDeviceOverLEPipe:withError:]
  -[WPContinuity startScanningForType:withData:mask:peers:boostedScan:]
  -[WPContinuity setBtBandwidthState:]
  -[WPContinuity populateClientGATT:]
  -[WPContinuity startAdvertisingOfType:withData:]
  -[WPContinuity startScanningForType:withData:]
  -[WPContinuity startScanningForType:withData:peers:]
  -[WPContinuity updateScanningRequest:withUpdate:]
  -[WPContinuity discoveredCharacteristicsAndServices:forPeripheral:]
  -[WPContinuity updatedNotificationState:forCharacteristic:inService:withPeripheral:]
  -[WPContinuity sentData:forCharacteristic:inService:forPeripheral:withError:]
  -[WPContinuity bandwidthStateUpdated:]


WPNearby : WPClient
 @property  <WPNearbyDelegate> *delegate
 @property  long long btBandwidthState
 @property  NSMutableDictionary *transfers
 @property  NSArray *leCapablePeers

  // class methods
  +[WPNearby holdVoucherForConnections]
  +[WPNearby clientTypeFromNearbyType:]
  +[WPNearby nearbyTypeFromClientType:]

  // instance methods
  -[WPNearby init]
  -[WPNearby invalidate]
  -[WPNearby delegate]
  -[WPNearby setDelegate:]
  -[WPNearby .cxx_destruct]
  -[WPNearby transfers]
  -[WPNearby initWithDelegate:queue:]
  -[WPNearby stopAdvertisingOfType:]
  -[WPNearby stopScanningForType:]
  -[WPNearby connectToPeer:]
  -[WPNearby disconnectFromPeer:]
  -[WPNearby startTrackingPeer:forType:]
  -[WPNearby stopTrackingPeer:forType:]
  -[WPNearby startAdvertisingOfType:data:priority:mode:options:]
  -[WPNearby startAdvertisingOfType:data:priority:mode:]
  -[WPNearby connectToPeer:withOptions:]
  -[WPNearby sendData:toPeer:]
  -[WPNearby btBandwidthState]
  -[WPNearby startScanningForType:data:mask:peers:scanMode:rssi:duplicates:scanCache:]
  -[WPNearby stateDidChange:]
  -[WPNearby setTransfers:]
  -[WPNearby clientAsString]
  -[WPNearby deviceDiscovered:]
  -[WPNearby scanningStartedOfType:]
  -[WPNearby scanningStoppedOfType:]
  -[WPNearby scanningFailedToStart:ofType:]
  -[WPNearby advertisingFailedToStart:ofType:]
  -[WPNearby updateAdvertisingRequest:withUpdate:]
  -[WPNearby advertisingStartedOfType:]
  -[WPNearby advertisingStoppedOfType:withError:]
  -[WPNearby advertisingPendingOfType:]
  -[WPNearby startedTrackingPeer:ofType:]
  -[WPNearby stoppedTrackingPeer:ofType:]
  -[WPNearby failedToStartTrackingPeer:error:]
  -[WPNearby foundPeer:ofType:]
  -[WPNearby lostPeer:ofType:]
  -[WPNearby receivedData:forCharacteristic:inService:forPeripheral:]
  -[WPNearby disconnectedDevice:withError:]
  -[WPNearby connectedDevice:withError:shouldDiscover:]
  -[WPNearby connectedDeviceOverLEPipe:]
  -[WPNearby sentData:toEndpoint:forPeripheral:withError:]
  -[WPNearby receivedData:fromEndpoint:forPeripheral:]
  -[WPNearby central:subscribed:toCharacteristic:inService:]
  -[WPNearby disconnectedDeviceOverLEPipe:withError:]
  -[WPNearby setBtBandwidthState:]
  -[WPNearby populateClientGATT:]
  -[WPNearby startAdvertisingOfType:withData:]
  -[WPNearby discoveredCharacteristicsAndServices:forPeripheral:]
  -[WPNearby updatedNotificationState:forCharacteristic:inService:withPeripheral:]
  -[WPNearby sentData:forCharacteristic:inService:forPeripheral:withError:]
  -[WPNearby bandwidthStateUpdated:]
  -[WPNearby startAdvertisingOfType:withData:priority:]
  -[WPNearby startScanningForType:data:mask:peers:scanMode:rssi:duplicates:]
  -[WPNearby startScanningForType:data:mask:peers:scanMode:]
  -[WPNearby leCapablePeers]
  -[WPNearby setLeCapablePeers:]


WPScanRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned char clientType
 @property  {?=qqq} scanningRates
 @property  BOOL allowDuplicates
 @property  BOOL scanWhenLocked
 @property  BOOL activeScanning
 @property  BOOL scanCache
 @property  NSNumber *rssiThreshold
 @property  NSData *blobValue
 @property  NSData *maskValue
 @property  NSDictionary *options
 @property  NSArray *peers
 @property  double updateTime
 @property  long long nearbyScanMode
 @property  BOOL advBuffer
 @property  long long advBufferMode

  // class methods
  +[WPScanRequest supportsSecureCoding]

  // instance methods
  -[WPScanRequest init]
  -[WPScanRequest copyWithZone:]
  -[WPScanRequest options]
  -[WPScanRequest encodeWithCoder:]
  -[WPScanRequest initWithCoder:]
  -[WPScanRequest .cxx_destruct]
  -[WPScanRequest setOptions:]
  -[WPScanRequest setBlobValue:]
  -[WPScanRequest blobValue]
  -[WPScanRequest updateTime]
  -[WPScanRequest setUpdateTime:]
  -[WPScanRequest peers]
  -[WPScanRequest rssiThreshold]
  -[WPScanRequest setRssiThreshold:]
  -[WPScanRequest setPeers:]
  -[WPScanRequest setScanCache:]
  -[WPScanRequest scanCache]
  -[WPScanRequest allowDuplicates]
  -[WPScanRequest setAllowDuplicates:]
  -[WPScanRequest clientType]
  -[WPScanRequest setClientType:]
  -[WPScanRequest setScanningRates:]
  -[WPScanRequest setActiveScanning:]
  -[WPScanRequest setMaskValue:]
  -[WPScanRequest scanningRates]
  -[WPScanRequest setNearbyScanMode:]
  -[WPScanRequest scanWhenLocked]
  -[WPScanRequest setScanWhenLocked:]
  -[WPScanRequest activeScanning]
  -[WPScanRequest maskValue]
  -[WPScanRequest nearbyScanMode]
  -[WPScanRequest advBuffer]
  -[WPScanRequest setAdvBuffer:]
  -[WPScanRequest advBufferMode]
  -[WPScanRequest setAdvBufferMode:]


WPTransfer : WPClient
 @property  <WPTransferDelegate> *delegate
 @property  BOOL advertising
 @property  BOOL scanning
 @property  BOOL connectedToPeripheral
 @property  BOOL unsubscribeComing
 @property  BOOL advertiserConnected
 @property  BOOL sentEOM
 @property  NSUUID *currentPeripheralUUID
 @property  NSMutableSet *ignoredDevices
 @property  NSMutableData *notificationData
 @property  NSUUID *currentlySubscribedCentral
 @property  long long lockScanTimer
 @property  BOOL sendingTransferComplete

  // instance methods
  -[WPTransfer dealloc]
  -[WPTransfer invalidate]
  -[WPTransfer delegate]
  -[WPTransfer setDelegate:]
  -[WPTransfer .cxx_destruct]
  -[WPTransfer stopAdvertising]
  -[WPTransfer initWithDelegate:queue:]
  -[WPTransfer stopScan]
  -[WPTransfer receivedData:]
  -[WPTransfer stateDidChange:]
  -[WPTransfer clientAsString]
  -[WPTransfer deviceDiscovered:]
  -[WPTransfer scanningStartedOfType:]
  -[WPTransfer scanningStoppedOfType:]
  -[WPTransfer scanningFailedToStart:ofType:]
  -[WPTransfer initWithDelegate:queue:machName:]
  -[WPTransfer advertisingFailedToStart:ofType:]
  -[WPTransfer advertisingStartedOfType:]
  -[WPTransfer advertisingStoppedOfType:withError:]
  -[WPTransfer advertisingPendingOfType:]
  -[WPTransfer ignoredDevices]
  -[WPTransfer setIgnoredDevices:]
  -[WPTransfer receivedData:forCharacteristic:inService:forPeripheral:]
  -[WPTransfer disconnectedDevice:withError:]
  -[WPTransfer connectedDevice:withError:shouldDiscover:]
  -[WPTransfer sentData:toEndpoint:forPeripheral:withError:]
  -[WPTransfer central:subscribed:toCharacteristic:inService:]
  -[WPTransfer populateClientGATT:]
  -[WPTransfer discoveredCharacteristicsAndServices:forPeripheral:]
  -[WPTransfer updatedNotificationState:forCharacteristic:inService:withPeripheral:]
  -[WPTransfer sentData:forCharacteristic:inService:forPeripheral:withError:]
  -[WPTransfer initWithDelegate:queue:machName:options:]
  -[WPTransfer advertising]
  -[WPTransfer setScanning:]
  -[WPTransfer setAdvertising:]
  -[WPTransfer currentPeripheralUUID]
  -[WPTransfer setCurrentPeripheralUUID:]
  -[WPTransfer setConnectedToPeripheral:]
  -[WPTransfer notificationData]
  -[WPTransfer scanning]
  -[WPTransfer setUnsubscribeComing:]
  -[WPTransfer transferFailed:]
  -[WPTransfer setSentEOM:]
  -[WPTransfer currentlySubscribedCentral]
  -[WPTransfer advertiserConnected]
  -[WPTransfer connectedToPeripheral]
  -[WPTransfer setSendingTransferComplete:]
  -[WPTransfer sendingTransferComplete]
  -[WPTransfer sentEOM]
  -[WPTransfer setCurrentlySubscribedCentral:]
  -[WPTransfer setAdvertiserConnected:]
  -[WPTransfer startAdvertising]
  -[WPTransfer unsubscribeComing]
  -[WPTransfer startScan]
  -[WPTransfer ignoreDevice]
  -[WPTransfer setNotificationData:]
  -[WPTransfer lockScanTimer]
  -[WPTransfer setLockScanTimer:]


WPPeerTrackingRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned char clientType
 @property  NSUUID *peerUUID
 @property  NSDictionary *peerTrackingDictionary

  // class methods
  +[WPPeerTrackingRequest supportsSecureCoding]

  // instance methods
  -[WPPeerTrackingRequest init]
  -[WPPeerTrackingRequest isEqual:]
  -[WPPeerTrackingRequest encodeWithCoder:]
  -[WPPeerTrackingRequest initWithCoder:]
  -[WPPeerTrackingRequest .cxx_destruct]
  -[WPPeerTrackingRequest clientType]
  -[WPPeerTrackingRequest setClientType:]
  -[WPPeerTrackingRequest peerUUID]
  -[WPPeerTrackingRequest setPeerUUID:]
  -[WPPeerTrackingRequest peerTrackingDictionary]
  -[WPPeerTrackingRequest setPeerTrackingDictionary:]


WPMagicSwitch : WPClient
 @property  <WPMagicSwitchDelegate> *delegate

  // instance methods
  -[WPMagicSwitch invalidate]
  -[WPMagicSwitch delegate]
  -[WPMagicSwitch setDelegate:]
  -[WPMagicSwitch .cxx_destruct]
  -[WPMagicSwitch stopAdvertising]
  -[WPMagicSwitch initWithDelegate:queue:]
  -[WPMagicSwitch stopScanning]
  -[WPMagicSwitch stateDidChange:]
  -[WPMagicSwitch dutyCycleToScanningRates:]
  -[WPMagicSwitch clientAsString]
  -[WPMagicSwitch deviceDiscovered:]
  -[WPMagicSwitch scanningStartedOfType:]
  -[WPMagicSwitch scanningStoppedOfType:]
  -[WPMagicSwitch scanningFailedToStart:ofType:]
  -[WPMagicSwitch advertisingFailedToStart:ofType:]
  -[WPMagicSwitch advertisingStartedOfType:]
  -[WPMagicSwitch advertisingStoppedOfType:withError:]
  -[WPMagicSwitch advertisingPendingOfType:]
  -[WPMagicSwitch startScanningWithData:]
  -[WPMagicSwitch startAdvertisingWithData:]


WPDeviceScanner : WPClient
 @property  <WPDeviceScannerDelegate> *delegate
 @property  NSMutableArray *liveDevices
 @property  NSMutableDictionary *activeScans
 @property  BOOL anyScanResultsRequested

  // instance methods
  -[WPDeviceScanner invalidate]
  -[WPDeviceScanner delegate]
  -[WPDeviceScanner setDelegate:]
  -[WPDeviceScanner .cxx_destruct]
  -[WPDeviceScanner initWithDelegate:]
  -[WPDeviceScanner initWithDelegate:queue:]
  -[WPDeviceScanner stateDidChange:]
  -[WPDeviceScanner clientAsString]
  -[WPDeviceScanner deviceDiscovered:]
  -[WPDeviceScanner scanningStartedOfType:]
  -[WPDeviceScanner scanningStoppedOfType:]
  -[WPDeviceScanner scanningFailedToStart:ofType:]
  -[WPDeviceScanner liveDevices]
  -[WPDeviceScanner activeScans]
  -[WPDeviceScanner anyScanResultsRequested]
  -[WPDeviceScanner registerForAnyScanResults:]
  -[WPDeviceScanner timerFinished:]
  -[WPDeviceScanner unregisterForDevices:]
  -[WPDeviceScanner parseType:atOffset:withSize:intoDictionary:]
  -[WPDeviceScanner postDevice:]
  -[WPDeviceScanner parseCompanyData:forSize:intoDictionary:]
  -[WPDeviceScanner parseAirPrint:forSize:intoDictionary:]
  -[WPDeviceScanner addPuckType:toDictionary:]
  -[WPDeviceScanner postDevices:]
  -[WPDeviceScanner registerForDevicesMatching:options:]
  -[WPDeviceScanner unregisterAllDeviceChanges]
  -[WPDeviceScanner anyDiscoveredDevice:]
  -[WPDeviceScanner setLiveDevices:]
  -[WPDeviceScanner setActiveScans:]
  -[WPDeviceScanner setAnyScanResultsRequested:]


WPObjectDiscovery : WPClient
 @property  <WPObjectDiscoveryDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[WPObjectDiscovery init]
  -[WPObjectDiscovery setQueue:]
  -[WPObjectDiscovery invalidate]
  -[WPObjectDiscovery queue]
  -[WPObjectDiscovery delegate]
  -[WPObjectDiscovery setDelegate:]
  -[WPObjectDiscovery .cxx_destruct]
  -[WPObjectDiscovery initWithDelegate:queue:]
  -[WPObjectDiscovery startTest]
  -[WPObjectDiscovery startScanning]
  -[WPObjectDiscovery stopScanning]
  -[WPObjectDiscovery stateDidChange:]
  -[WPObjectDiscovery clientAsString]
  -[WPObjectDiscovery deviceDiscovered:]
  -[WPObjectDiscovery scanningStartedOfType:]
  -[WPObjectDiscovery scanningStoppedOfType:]
  -[WPObjectDiscovery scanningFailedToStart:ofType:]
  -[WPObjectDiscovery updateScanningRequest:withUpdate:]
  -[WPObjectDiscovery startScanningWithMode:]
  -[WPObjectDiscovery startScanningWithMode:Timeout:]
  -[WPObjectDiscovery scanRequestFromScanMode:UpdateTime:]
  -[WPObjectDiscovery devicesDiscovered:]
  -[WPObjectDiscovery receivedTestResponse:]
  -[WPObjectDiscovery stopTest]
  -[WPObjectDiscovery updateBeaconingState:]
  -[WPObjectDiscovery updateBeaconingKeys:]
  -[WPObjectDiscovery updateBeaconingStatus:]
  -[WPObjectDiscovery updateBeaconingExtended:]
  -[WPObjectDiscovery updateNearOwnerTokens:]


WPClient : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, WPXPCClientProtocol, WPXPCDaemonProtocol>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSObject<OS_dispatch_queue> *daemonDeliveryQueue
 @property  NSObject<OS_dispatch_semaphore> *daemonRegisteredSemaphore
 @property  NSString *machName
 @property  long long state
 @property  long long advertiserState
 @property  long long scannerState
 @property  NSXPCConnection *xpcConnection
 @property  unsigned char type
 @property  BOOL peerTrackingSlotsAvailable
 @property  BOOL needsToRegister
 @property  BOOL registering
 @property  BOOL servicesAdded
 @property  NSXPCListener *xpcListener
 @property  BOOL isTestClient
 @property  BOOL isBubbleTestClient
 @property  long long pipeState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WPClient initialize]
  +[WPClient isHomePod]
  +[WPClient stateAsString:]
  +[WPClient holdVoucherForConnections]

  // instance methods
  -[WPClient dealloc]
  -[WPClient invalidate]
  -[WPClient type]
  -[WPClient setType:]
  -[WPClient .cxx_destruct]
  -[WPClient listener:shouldAcceptNewConnection:]
  -[WPClient state]
  -[WPClient connection]
  -[WPClient xpcConnection]
  -[WPClient establishConnection]
  -[WPClient setState:]
  -[WPClient setXpcConnection:]
  -[WPClient setXpcListener:]
  -[WPClient xpcListener]
  -[WPClient clientQueue]
  -[WPClient machName]
  -[WPClient startAdvertising:]
  -[WPClient unregisterEndpoint:]
  -[WPClient connectToPeer:]
  -[WPClient disconnectFromPeer:]
  -[WPClient sendTestRequest:]
  -[WPClient connectToPeer:withOptions:]
  -[WPClient initWithQueue:machName:]
  -[WPClient disableScanning]
  -[WPClient setMachName:]
  -[WPClient stateDidChange:]
  -[WPClient setClientQueue:]
  -[WPClient enableTestMode]
  -[WPClient servicesAdded]
  -[WPClient setServicesAdded:]
  -[WPClient startScanning:]
  -[WPClient stopScanning:]
  -[WPClient checkAllowDuplicates:]
  -[WPClient clientAsString]
  -[WPClient stopAdvertising:]
  -[WPClient enableRanging:reply:]
  -[WPClient isRangingEnabledReply:]
  -[WPClient isBubbleTestClient]
  -[WPClient startTrackingPeerWithRequest:]
  -[WPClient stopTrackingPeerWithRequest:]
  -[WPClient peerTrackingFull]
  -[WPClient peerTrackingAvailable]
  -[WPClient sendDataToCharacteristic:inService:forPeer:]
  -[WPClient registerEndpoint:requireAck:requireEncryption:]
  -[WPClient listenToBandwidthNotifications]
  -[WPClient discoverCharacteristicsAndServices:forPeripheral:]
  -[WPClient shouldSubscribe:toPeer:withCharacteristic:inService:]
  -[WPClient populateClientGATT:]
  -[WPClient updateScanningRequest:withUpdate:]
  -[WPClient registerForAnyScanResults:]
  -[WPClient isTestClient]
  -[WPClient receivedTestResponse:]
  -[WPClient setupMachXPCService]
  -[WPClient destroyConnection]
  -[WPClient daemonRegisteredSemaphore]
  -[WPClient setDaemonRegisteredSemaphore:]
  -[WPClient daemonDeliveryQueue]
  -[WPClient setRegistering:]
  -[WPClient whitelistConnectionMethods:]
  -[WPClient setNeedsToRegister:]
  -[WPClient needsToRegister]
  -[WPClient registering]
  -[WPClient registeredWithDaemonAndContinuingSession:]
  -[WPClient startTrackingZone:]
  -[WPClient stopTrackingZones:]
  -[WPClient stopTrackingAllZones]
  -[WPClient getAllTrackedZones]
  -[WPClient getPowerLogStats:]
  -[WPClient dumpDaemonState]
  -[WPClient enableBubbleTestMode]
  -[WPClient sendDatatoLePipe:forPeer:]
  -[WPClient setPeerTrackingSlotsAvailable:]
  -[WPClient advertiserState]
  -[WPClient setAdvertiserState:]
  -[WPClient addServices]
  -[WPClient setScannerState:]
  -[WPClient setIsTestClient:]
  -[WPClient setIsBubbleTestClient:]
  -[WPClient startScanning:andAdvertising:]
  -[WPClient scannerState]
  -[WPClient pipeState]
  -[WPClient setDaemonDeliveryQueue:]
  -[WPClient peerTrackingSlotsAvailable]


WPZoneTracker : WPClient
 @property  <WPZoneTrackerDelegate> *delegate
 @property  BOOL wantEntry
 @property  BOOL wantExit

  // instance methods
  -[WPZoneTracker invalidate]
  -[WPZoneTracker delegate]
  -[WPZoneTracker setDelegate:]
  -[WPZoneTracker .cxx_destruct]
  -[WPZoneTracker initWithDelegate:]
  -[WPZoneTracker initWithDelegate:queue:]
  -[WPZoneTracker stateDidChange:]
  -[WPZoneTracker clientAsString]
  -[WPZoneTracker failedToRegisterZones:withError:]
  -[WPZoneTracker enteredZone:manufacturerData:]
  -[WPZoneTracker exitedZone:]
  -[WPZoneTracker fetchedCurrentlyTrackedZones:]
  -[WPZoneTracker wantExit]
  -[WPZoneTracker setWantEntry:]
  -[WPZoneTracker setWantExit:]
  -[WPZoneTracker wantEntry]
  -[WPZoneTracker registerForZoneChangesMatching:]
  -[WPZoneTracker unregisterForZoneChanges:]
  -[WPZoneTracker unregisterAllZoneChanges]
  -[WPZoneTracker getCurrentTrackedZones]


WPHeySiri : WPClient
 @property  <WPHeySiriProtocol> *delegate
 @property  BOOL isScanning

  // instance methods
  -[WPHeySiri invalidate]
  -[WPHeySiri delegate]
  -[WPHeySiri setDelegate:]
  -[WPHeySiri .cxx_destruct]
  -[WPHeySiri stopAdvertising]
  -[WPHeySiri initWithDelegate:queue:]
  -[WPHeySiri stopScanningAndAdvertising]
  -[WPHeySiri startScanning]
  -[WPHeySiri stopScanning]
  -[WPHeySiri startScanningAndAdvertisingWithData:]
  -[WPHeySiri stateDidChange:]
  -[WPHeySiri setIsScanning:]
  -[WPHeySiri isScanning]
  -[WPHeySiri clientAsString]
  -[WPHeySiri deviceDiscovered:]
  -[WPHeySiri scanningStartedOfType:]
  -[WPHeySiri scanningStoppedOfType:]
  -[WPHeySiri scanningFailedToStart:ofType:]
  -[WPHeySiri advertisingFailedToStart:ofType:]
  -[WPHeySiri updateAdvertisingRequest:withUpdate:]
  -[WPHeySiri advertisingStartedOfType:]
  -[WPHeySiri advertisingStoppedOfType:withError:]
  -[WPHeySiri advertisingPendingOfType:]
  -[WPHeySiri updateScanningRequest:withUpdate:]
  -[WPHeySiri startAdvertisingWithData:]


01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
