|| __DATA.__data _OBJC_METACLASS_$_AddSpeakerDestinationsResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_AddSpeakerIntent
|| __DATA.__data _OBJC_METACLASS_$_AddSpeakerIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_AddSpeakerSourceResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_Device
|| __DATA.__data _OBJC_METACLASS_$_DeviceContext
|| __DATA.__data _OBJC_METACLASS_$_DeviceContextResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_DeviceGroup
|| __DATA.__data _OBJC_METACLASS_$_DeviceGroupResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_DeviceProximityResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_DeviceQuery
|| __DATA.__data _OBJC_METACLASS_$_DeviceQueryResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_DeviceResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_DirectionResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_GetVolumeLevelDeviceResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_GetVolumeLevelIntent
|| __DATA.__data _OBJC_METACLASS_$_GetVolumeLevelIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_GroupTypeResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_LanguageOption
|| __DATA.__data _OBJC_METACLASS_$_LanguageOptionResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_MediaStream
|| __DATA.__data _OBJC_METACLASS_$_MediaStreamResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_MoveSpeakerDestinationsResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_MoveSpeakerIntent
|| __DATA.__data _OBJC_METACLASS_$_MoveSpeakerIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_MoveSpeakerSourceResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_NLMediaTypeResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_NowPlayingMediaTypeResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_NowPlayingStateResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_PauseMediaDevicesResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_PauseMediaIntent
|| __DATA.__data _OBJC_METACLASS_$_PauseMediaIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_RepeatStateResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_ResumeMediaIntent
|| __DATA.__data _OBJC_METACLASS_$_ResumeMediaIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_SeekTimeIntent
|| __DATA.__data _OBJC_METACLASS_$_SeekTimeIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_SeekTimePlayheadPositionResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_SetAudioLanguageDeviceResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_SetAudioLanguageIntent
|| __DATA.__data _OBJC_METACLASS_$_SetAudioLanguageIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_SetAudioLanguageLanguageResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_SetRepeatStateIntent
|| __DATA.__data _OBJC_METACLASS_$_SetRepeatStateIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_SetShuffleStateIntent
|| __DATA.__data _OBJC_METACLASS_$_SetShuffleStateIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_SetSubtitleStateDeviceResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_SetSubtitleStateIntent
|| __DATA.__data _OBJC_METACLASS_$_SetSubtitleStateIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_SetSubtitleStateLanguageResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_SetVolumeLevelDevicesResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_SetVolumeLevelIntent
|| __DATA.__data _OBJC_METACLASS_$_SetVolumeLevelIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_SetVolumeLevelVolumeLevelResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_ShuffleStateResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_SignedDuration
|| __DATA.__data _OBJC_METACLASS_$_SignedDurationResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_SkipContentIntent
|| __DATA.__data _OBJC_METACLASS_$_SkipContentIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_SkipTimeIntent
|| __DATA.__data _OBJC_METACLASS_$_SkipTimeIntentResponse
|| __DATA.__data _OBJC_METACLASS_$_SubtitleStateResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_SubtitleTypeResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_VolumeLevel
|| __DATA.__data _OBJC_METACLASS_$_VolumeLevelResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_VolumeSettingAttributeResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_VolumeSettingQualifierResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_VolumeSettingStateResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_VolumeSettingTypeResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_VolumeSettingUnitResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_WhatDidTheySayDeviceResolutionResult
|| __DATA.__data _OBJC_METACLASS_$_WhatDidTheySayIntent
|| __DATA.__data _OBJC_METACLASS_$_WhatDidTheySayIntentResponse
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents21SeekTimeIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents21SkipTimeIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents23AddSpeakerIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents23PauseMediaIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents24MoveSpeakerIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents24ResumeMediaIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents24SkipContentIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents27GetVolumeLevelIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents27SetRepeatStateIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents27SetVolumeLevelIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents27WhatDidTheySayIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents28SetShuffleStateIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents29SetAudioLanguageIntentHandler
|| __DATA.__data _OBJC_METACLASS_$__TtC26SiriPlaybackControlIntents29SetSubtitleStateIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$_AddSpeakerDestinationsResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_AddSpeakerIntent
|| __DATA.__objc_data _OBJC_CLASS_$_AddSpeakerIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AddSpeakerSourceResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_Device
|| __DATA.__objc_data _OBJC_CLASS_$_DeviceContext
|| __DATA.__objc_data _OBJC_CLASS_$_DeviceContextResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_DeviceGroup
|| __DATA.__objc_data _OBJC_CLASS_$_DeviceGroupResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_DeviceProximityResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_DeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$_DeviceQueryResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_DeviceResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_DirectionResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_GetVolumeLevelDeviceResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_GetVolumeLevelIntent
|| __DATA.__objc_data _OBJC_CLASS_$_GetVolumeLevelIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_GroupTypeResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_LanguageOption
|| __DATA.__objc_data _OBJC_CLASS_$_LanguageOptionResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_MediaStream
|| __DATA.__objc_data _OBJC_CLASS_$_MediaStreamResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_MoveSpeakerDestinationsResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_MoveSpeakerIntent
|| __DATA.__objc_data _OBJC_CLASS_$_MoveSpeakerIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_MoveSpeakerSourceResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_NLMediaTypeResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_NowPlayingMediaTypeResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_NowPlayingStateResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_PauseMediaDevicesResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_PauseMediaIntent
|| __DATA.__objc_data _OBJC_CLASS_$_PauseMediaIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_RepeatStateResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_ResumeMediaIntent
|| __DATA.__objc_data _OBJC_CLASS_$_ResumeMediaIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SeekTimeIntent
|| __DATA.__objc_data _OBJC_CLASS_$_SeekTimeIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SeekTimePlayheadPositionResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_SetAudioLanguageDeviceResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_SetAudioLanguageIntent
|| __DATA.__objc_data _OBJC_CLASS_$_SetAudioLanguageIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SetAudioLanguageLanguageResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_SetRepeatStateIntent
|| __DATA.__objc_data _OBJC_CLASS_$_SetRepeatStateIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SetShuffleStateIntent
|| __DATA.__objc_data _OBJC_CLASS_$_SetShuffleStateIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SetSubtitleStateDeviceResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_SetSubtitleStateIntent
|| __DATA.__objc_data _OBJC_CLASS_$_SetSubtitleStateIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SetSubtitleStateLanguageResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_SetVolumeLevelDevicesResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_SetVolumeLevelIntent
|| __DATA.__objc_data _OBJC_CLASS_$_SetVolumeLevelIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SetVolumeLevelVolumeLevelResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_ShuffleStateResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_SignedDuration
|| __DATA.__objc_data _OBJC_CLASS_$_SignedDurationResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_SkipContentIntent
|| __DATA.__objc_data _OBJC_CLASS_$_SkipContentIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SkipTimeIntent
|| __DATA.__objc_data _OBJC_CLASS_$_SkipTimeIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SubtitleStateResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_SubtitleTypeResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_VolumeLevel
|| __DATA.__objc_data _OBJC_CLASS_$_VolumeLevelResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_VolumeSettingAttributeResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_VolumeSettingQualifierResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_VolumeSettingStateResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_VolumeSettingTypeResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_VolumeSettingUnitResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_WhatDidTheySayDeviceResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_WhatDidTheySayIntent
|| __DATA.__objc_data _OBJC_CLASS_$_WhatDidTheySayIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents21SeekTimeIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents21SkipTimeIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents23AddSpeakerIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents23PauseMediaIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents24MoveSpeakerIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents24ResumeMediaIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents24SkipContentIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents27GetVolumeLevelIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents27SetRepeatStateIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents27SetVolumeLevelIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents27WhatDidTheySayIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents28SetShuffleStateIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents29SetAudioLanguageIntentHandler
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26SiriPlaybackControlIntents29SetSubtitleStateIntentHandler
|| __TEXT.__const _SiriPlaybackControlIntentsVersionNumber
|| __TEXT.__const _SiriPlaybackControlIntentsVersionString
__ AVFAudio: _AVAudioSessionPortAirPlay
__ AVFAudio: _AVAudioSessionPortBluetoothA2DP
__ AVFAudio: _AVAudioSessionPortBluetoothHFP
__ AVFAudio: _AVAudioSessionPortBluetoothLE
__ AVFAudio: _AVAudioSessionPortHeadphones
__ AVFAudio: _OBJC_CLASS_$_AVAudioSession
__ AVFAudio: _OBJC_CLASS_$_AVAudioSessionPortDescription
__ AssistantServices: _AFAnalyticsContextCreateForCrossDeviceCommandHandledWithServiceDeviceContexts
__ AssistantServices: _AFAnalyticsEventTypeGetName
__ AssistantServices: _AFDeviceContextKeyAlarm
__ AssistantServices: _AFDeviceContextKeyHomeAnnouncement
__ AssistantServices: _AFDeviceContextKeyPlaybackState
__ AssistantServices: _AFDeviceContextKeySiriClientState
__ AssistantServices: _AFDeviceContextKeyTimer
__ AssistantServices: _OBJC_CLASS_$_AFAnalytics
__ AssistantServices: _OBJC_CLASS_$_AFClockAlarmSnapshot
__ AssistantServices: _OBJC_CLASS_$_AFClockTimer
__ AssistantServices: _OBJC_CLASS_$_AFClockTimerSnapshot
__ AssistantServices: _OBJC_CLASS_$_AFCoreAnalyticsCrossDeviceEvent
__ AssistantServices: _OBJC_CLASS_$_AFCoreAnalyticsLoggingService
__ AssistantServices: _OBJC_CLASS_$_AFHomeAnnouncementSnapshot
__ AssistantServices: _OBJC_CLASS_$_AFMediaPlaybackStateSnapshot
__ AssistantServices: _OBJC_CLASS_$_AFServiceDeviceContext
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Intents: _INTypedObjectWithCustomObject
__ Intents: _OBJC_CLASS_$_INCustomObject
__ Intents: _OBJC_CLASS_$_INEnumResolutionResult
__ Intents: _OBJC_CLASS_$_INIntent
__ Intents: _OBJC_CLASS_$_INIntentResponse
__ Intents: _OBJC_CLASS_$_INObject
__ Intents: _OBJC_CLASS_$_INObjectResolutionResult
__ Intents: _OBJC_CLASS_$_INPlayMediaIntent
__ Intents: _OBJC_CLASS_$_INTimeIntervalResolutionResult
__ Intents: _OBJC_METACLASS_$_INEnumResolutionResult
__ Intents: _OBJC_METACLASS_$_INIntent
__ Intents: _OBJC_METACLASS_$_INIntentResponse
__ Intents: _OBJC_METACLASS_$_INObject
__ Intents: _OBJC_METACLASS_$_INObjectResolutionResult
__ Intents: _OBJC_METACLASS_$_INTimeIntervalResolutionResult
__ RunningBoardServices: _OBJC_CLASS_$_RBSAssertion
__ RunningBoardServices: _OBJC_CLASS_$_RBSAttribute
__ RunningBoardServices: _OBJC_CLASS_$_RBSDomainAttribute
__ RunningBoardServices: _OBJC_CLASS_$_RBSTarget
__ SAObjects: _OBJC_CLASS_$_SABaseCommand
__ SAObjects: _OBJC_CLASS_$_SACardSnippet
__ SAObjects: _OBJC_CLASS_$_SASTButtonItem
__ SAObjects: _OBJC_CLASS_$_SASTCommandTemplateAction
__ SAObjects: _OBJC_CLASS_$_SASTItemGroup
__ SAObjects: _OBJC_CLASS_$_SASendCommands
__ SAObjects: _OBJC_CLASS_$_SAStartRequest
__ SAObjects: _OBJC_CLASS_$_SAUIButton
__ SAObjects: _OBJC_CLASS_$_SAUICloseAssistant
__ SAObjects: _OBJC_CLASS_$_SAUIConfirmationOption
__ SAObjects: _OBJC_CLASS_$_SAUIConfirmationView
__ SAObjects: _OBJC_CLASS_$_SAUIDecoratedText
__ SAObjects: _OBJC_CLASS_$_SAUIDisambiguationList
__ SAObjects: _OBJC_CLASS_$_SAUIHideSiriOverlay
__ SAObjects: _OBJC_CLASS_$_SAUIListItem
__ SAObjects: _OBJC_CLASS_$_SAUISash
__ SAObjects: _SAUIConfirmationOptionConfirmationOptionTypeCONFIRMValue
__ SAObjects: _SAUIConfirmationOptionConfirmationOptionTypeDENYValue
__ SAObjects: _SAUIConfirmationOptionIconTypeCancelValue
__ SAObjects: _SAUIConfirmationViewCancelTriggerDenyValue
__ SearchFoundation: _OBJC_CLASS_$_SFMediaRemoteControlCardSection
__ SiriInstrumentation: _OBJC_CLASS_$_FLOWSchemaFLOWDomainContext
__ SiriInstrumentation: _OBJC_CLASS_$_FLOWSchemaFLOWMediaPlayerContext
__ SiriInstrumentation: _OBJC_CLASS_$_FLOWSchemaFLOWholeHouseAudioDestinationContext
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaUUFRCompletion
__ SiriKitInvocation: _OBJC_CLASS_$_SKIDirectInvocation
__ SiriKitInvocation: _OBJC_CLASS_$_SKIDirectInvocationPayload
__ SiriOntology: _OBJC_CLASS_$_SIRINLUSystemGaveOptions
__ SiriOntology: _OBJC_CLASS_$_SIRINLUSystemOffered
__ SiriOntology: _OBJC_CLASS_$_SIRINLUSystemPrompted
__ SiriOntology: _OBJC_CLASS_$_SIRINLUUserStatedTask
__ SiriOntology: _OBJC_CLASS_$_SIRINLUUserWantedToProceed
__ SiriOntology: _OBJC_CLASS_$_USOSerializedGraph
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_queue
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_source
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_os_log
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libswiftAVFoundation.dylib: __swift_FORCE_LOAD_$_swiftAVFoundation
__ libswiftAccelerate.dylib: __swift_FORCE_LOAD_$_swiftAccelerate
__ libswiftCloudKit.dylib: __swift_FORCE_LOAD_$_swiftCloudKit
__ libswiftContacts.dylib: __swift_FORCE_LOAD_$_swiftContacts
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swiftEmptySetSingleton
__ libswiftCore.dylib: __swift_stdlib_strtod_clocale
__ libswiftCore.dylib: _swift_allocBox
__ libswiftCore.dylib: _swift_allocError
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_allocateGenericClassMetadata
__ libswiftCore.dylib: _swift_arrayAssignWithTake
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_arrayInitWithTakeBackToFront
__ libswiftCore.dylib: _swift_arrayInitWithTakeFrontToBack
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_checkMetadataState
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deallocPartialClassInstance
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastClass
__ libswiftCore.dylib: _swift_dynamicCastMetatype
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_errorRetain
__ libswiftCore.dylib: _swift_getEnumCaseMultiPayload
__ libswiftCore.dylib: _swift_getEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_getErrorValue
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getGenericMetadata
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initClassMetadata2
__ libswiftCore.dylib: _swift_initEnumMetadataMultiPayload
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_initStaticObject
__ libswiftCore.dylib: _swift_initStructMetadata
__ libswiftCore.dylib: _swift_isEscapingClosureAtFileLocation
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_bridgeObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_makeBoxUnique
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_release_n
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_retain_n
__ libswiftCore.dylib: _swift_setDeallocating
__ libswiftCore.dylib: _swift_slowAlloc
__ libswiftCore.dylib: _swift_slowDealloc
__ libswiftCore.dylib: _swift_storeEnumTagMultiPayload
__ libswiftCore.dylib: _swift_storeEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRelease_n
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_unknownObjectRetain_n
__ libswiftCore.dylib: _swift_willThrow
__ libswiftCoreAudio.dylib: __swift_FORCE_LOAD_$_swiftCoreAudio
__ libswiftCoreData.dylib: __swift_FORCE_LOAD_$_swiftCoreData
__ libswiftCoreFoundation.dylib: __swift_FORCE_LOAD_$_swiftCoreFoundation
__ libswiftCoreGraphics.dylib: __swift_FORCE_LOAD_$_swiftCoreGraphics
__ libswiftCoreImage.dylib: __swift_FORCE_LOAD_$_swiftCoreImage
__ libswiftCoreLocation.dylib: __swift_FORCE_LOAD_$_swiftCoreLocation
__ libswiftCoreMIDI.dylib: __swift_FORCE_LOAD_$_swiftCoreMIDI
__ libswiftCoreML.dylib: __swift_FORCE_LOAD_$_swiftCoreML
__ libswiftCoreMedia.dylib: __swift_FORCE_LOAD_$_swiftCoreMedia
__ libswiftDarwin.dylib: __swift_FORCE_LOAD_$_swiftDarwin
__ libswiftDataDetection.dylib: __swift_FORCE_LOAD_$_swiftDataDetection
__ libswiftDispatch.dylib: __swift_FORCE_LOAD_$_swiftDispatch
__ libswiftFileProvider.dylib: __swift_FORCE_LOAD_$_swiftFileProvider
__ libswiftFoundation.dylib: __swift_FORCE_LOAD_$_swiftFoundation
__ libswiftHomeKit.dylib: __swift_FORCE_LOAD_$_swiftHomeKit
__ libswiftIntents.dylib: __swift_FORCE_LOAD_$_swiftIntents
__ libswiftMapKit.dylib: __swift_FORCE_LOAD_$_swiftMapKit
__ libswiftMediaPlayer.dylib: __swift_FORCE_LOAD_$_swiftMediaPlayer
__ libswiftMetal.dylib: __swift_FORCE_LOAD_$_swiftMetal
__ libswiftNetwork.dylib: __swift_FORCE_LOAD_$_swiftNetwork
__ libswiftObjectiveC.dylib: __swift_FORCE_LOAD_$_swiftObjectiveC
__ libswiftPrivate_BiomePubSub.dylib: __swift_FORCE_LOAD_$_swiftPrivate_BiomePubSub
__ libswiftPrivate_BiomeStreams.dylib: __swift_FORCE_LOAD_$_swiftPrivate_BiomeStreams
__ libswiftQuartzCore.dylib: __swift_FORCE_LOAD_$_swiftQuartzCore
__ libswiftUIKit.dylib: __swift_FORCE_LOAD_$_swiftUIKit
__ libswiftUniformTypeIdentifiers.dylib: __swift_FORCE_LOAD_$_swiftUniformTypeIdentifiers
__ libswift_Concurrency.dylib: _swift_task_alloc
__ libswift_Concurrency.dylib: _swift_task_dealloc
__ libswiftos.dylib: __swift_FORCE_LOAD_$_swiftos
__ libswiftsimd.dylib: __swift_FORCE_LOAD_$_swiftsimd
_TtC26SiriPlaybackControlIntents20SkipTimeFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents39ResumeMediaDeviceDisambiguationStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents19DeviceSelectingUtil : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents30PauseMediaHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents25QuickStopLocalStoppedFlow : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents38PauseMediaDeviceDisambiguationStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents27SetVolumeLevelIntentHandler : NSObject <SetVolumeLevelIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents27SetVolumeLevelIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents27SetVolumeLevelIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents27SetVolumeLevelIntentHandler handleSetVolumeLevel:completion:]
  -[_TtC26SiriPlaybackControlIntents27SetVolumeLevelIntentHandler confirmSetVolumeLevel:completion:]
  -[_TtC26SiriPlaybackControlIntents27SetVolumeLevelIntentHandler resolveDevicesForSetVolumeLevel:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents27SetVolumeLevelIntentHandler resolveVolumeLevelForSetVolumeLevel:withCompletion:]


_TtC26SiriPlaybackControlIntents18ServerFallbackFlow : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents20AnalyticsServiceImpl : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents29VolumeLevelNeedsValueStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents24SkipContentIntentHandler : NSObject <SkipContentIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents24SkipContentIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents24SkipContentIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents24SkipContentIntentHandler handleSkipContent:completion:]
  -[_TtC26SiriPlaybackControlIntents24SkipContentIntentHandler resolveDevicesForSkipContent:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents24SkipContentIntentHandler confirmSkipContent:completion:]


_TtC26SiriPlaybackControlIntents27SetRepeatStateIntentHandler : NSObject <SetRepeatStateIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents27SetRepeatStateIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents27SetRepeatStateIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents27SetRepeatStateIntentHandler handleSetRepeatState:completion:]
  -[_TtC26SiriPlaybackControlIntents27SetRepeatStateIntentHandler resolveDevicesForSetRepeatState:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents27SetRepeatStateIntentHandler confirmSetRepeatState:completion:]


_TtC26SiriPlaybackControlIntents23ResumeMediaFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents34SetVolumeLevelHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents36VolumeLevelNeedsConfirmationStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents36SkipTimeDeviceDisambiguationStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents40SetSubtitleStateUnsupportedValueStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents38SetVolumeLevelUnsupportedValueStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents21SkipTimeIntentHandler : NSObject <SkipTimeIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents21SkipTimeIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents21SkipTimeIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents21SkipTimeIntentHandler handleSkipTime:completion:]
  -[_TtC26SiriPlaybackControlIntents21SkipTimeIntentHandler resolveDurationForSkipTime:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents21SkipTimeIntentHandler resolveDevicesForSkipTime:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents21SkipTimeIntentHandler confirmSkipTime:completion:]


_TtC26SiriPlaybackControlIntents23MoveSpeakerFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents23AddSpeakerIntentHandler : NSObject <AddSpeakerIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents23AddSpeakerIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents23AddSpeakerIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents23AddSpeakerIntentHandler handleAddSpeaker:completion:]
  -[_TtC26SiriPlaybackControlIntents23AddSpeakerIntentHandler resolveSourceForAddSpeaker:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents23AddSpeakerIntentHandler resolveDestinationsForAddSpeaker:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents23AddSpeakerIntentHandler confirmAddSpeaker:completion:]


_TtC26SiriPlaybackControlIntents30AddSpeakerHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents35MoveSpeakerUnsupportedValueStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents26GetVolumeLevelFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents39SkipContentDeviceDisambiguationStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents31ResumeMediaHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents32ResumeMediaConfirmIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents18BaseDialogProvider : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents24ResumeMediaIntentHandler : NSObject <ResumeMediaIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents24ResumeMediaIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents24ResumeMediaIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents24ResumeMediaIntentHandler handleResumeMedia:completion:]
  -[_TtC26SiriPlaybackControlIntents24ResumeMediaIntentHandler resolveDevicesForResumeMedia:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents24ResumeMediaIntentHandler confirmResumeMedia:completion:]


_TtC26SiriPlaybackControlIntents35SetRepeatStateConfirmIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents29SetAudioLanguageIntentHandler : NSObject <SetAudioLanguageIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents29SetAudioLanguageIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents29SetAudioLanguageIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents29SetAudioLanguageIntentHandler handleSetAudioLanguage:completion:]
  -[_TtC26SiriPlaybackControlIntents29SetAudioLanguageIntentHandler resolveDeviceForSetAudioLanguage:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents29SetAudioLanguageIntentHandler resolveLanguageForSetAudioLanguage:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents29SetAudioLanguageIntentHandler confirmSetAudioLanguage:completion:]


_TtC26SiriPlaybackControlIntents36SetAudioLanguageHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents34WhatDidTheySayHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents27GetVolumeLevelIntentHandler : NSObject <GetVolumeLevelIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents27GetVolumeLevelIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents27GetVolumeLevelIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents27GetVolumeLevelIntentHandler handleGetVolumeLevel:completion:]
  -[_TtC26SiriPlaybackControlIntents27GetVolumeLevelIntentHandler resolveDeviceForGetVolumeLevel:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents27GetVolumeLevelIntentHandler confirmGetVolumeLevel:completion:]


_TtC26SiriPlaybackControlIntents22PauseMediaFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents28SetShuffleStateIntentHandler : NSObject <SetShuffleStateIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents28SetShuffleStateIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents28SetShuffleStateIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents28SetShuffleStateIntentHandler handleSetShuffleState:completion:]
  -[_TtC26SiriPlaybackControlIntents28SetShuffleStateIntentHandler resolveDevicesForSetShuffleState:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents28SetShuffleStateIntentHandler confirmSetShuffleState:completion:]


_TtC26SiriPlaybackControlIntents37SetAudioLanguageConfirmIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents38GetVolumeLevelUnsupportedValueStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents12GroupingUtil : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents42SetRepeatStateDeviceDisambiguationStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents28SkipTimeHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents27SetShuffleStateFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents27WhatDidTheySayIntentHandler : NSObject <WhatDidTheySayIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents27WhatDidTheySayIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents27WhatDidTheySayIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents27WhatDidTheySayIntentHandler resolveDeviceForWhatDidTheySay:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents27WhatDidTheySayIntentHandler handleWhatDidTheySay:completion:]
  -[_TtC26SiriPlaybackControlIntents27WhatDidTheySayIntentHandler confirmWhatDidTheySay:completion:]


_TtC26SiriPlaybackControlIntents20SeekTimeFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents28SeekTimeHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents16AceServiceHelper : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents20AudioSessionProvider : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents29SkipTimeConfirmIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents26SetVolumeLevelFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents34GetVolumeLevelHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents26WhatDidTheySayFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents23SkipContentFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents22AddSpeakerFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents42WhatDidTheySayDeviceDisambiguationStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents32SeekTimeUnsupportedValueStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents36SetSubtitleStateHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents31MoveSpeakerHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents28SetSubtitleStateFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents31PauseMediaConfirmIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents34AddSpeakerUnsupportedValueStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents34PauseMediaUnsupportedValueStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents44SetSubtitleStateDeviceDisambiguationStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents29SetSubtitleStateIntentHandler : NSObject <SetSubtitleStateIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents29SetSubtitleStateIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents29SetSubtitleStateIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents29SetSubtitleStateIntentHandler handleSetSubtitleState:completion:]
  -[_TtC26SiriPlaybackControlIntents29SetSubtitleStateIntentHandler resolveDeviceForSetSubtitleState:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents29SetSubtitleStateIntentHandler resolveLanguageForSetSubtitleState:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents29SetSubtitleStateIntentHandler confirmSetSubtitleState:completion:]


_TtC26SiriPlaybackControlIntents35SetShuffleStateHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents37SetSubtitleStateConfirmIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents13QuickStopUtil : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents40SetAudioLanguageUnsupportedValueStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents43SetShuffleStateDeviceDisambiguationStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents34SetRepeatStateHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents38WhatDidTheySayUnsupportedValueStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents26QuickStopNothingToStopFlow : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents28SetAudioLanguageFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents26SetRepeatStateFlowStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents36SeekTimeDeviceDisambiguationStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents24MoveSpeakerIntentHandler : NSObject <MoveSpeakerIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents24MoveSpeakerIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents24MoveSpeakerIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents24MoveSpeakerIntentHandler handleMoveSpeaker:completion:]
  -[_TtC26SiriPlaybackControlIntents24MoveSpeakerIntentHandler resolveSourceForMoveSpeaker:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents24MoveSpeakerIntentHandler resolveDestinationsForMoveSpeaker:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents24MoveSpeakerIntentHandler confirmMoveSpeaker:completion:]


_TtC26SiriPlaybackControlIntents29SeekTimeConfirmIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents35WhatDidTheySayConfirmIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents14DialogProvider : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents36SetShuffleStateConfirmIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents32SkipContentConfirmIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents22AnalyticsServiceLogger : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents11ContextUtil : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents44SetAudioLanguageDeviceDisambiguationStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents31SkipContentHandleIntentStrategy : Swift._SwiftObject

_TtC26SiriPlaybackControlIntents23PauseMediaIntentHandler : NSObject <PauseMediaIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents23PauseMediaIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents23PauseMediaIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents23PauseMediaIntentHandler handlePauseMedia:completion:]
  -[_TtC26SiriPlaybackControlIntents23PauseMediaIntentHandler resolveDevicesForPauseMedia:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents23PauseMediaIntentHandler confirmPauseMedia:completion:]


_TtC26SiriPlaybackControlIntents21SeekTimeIntentHandler : NSObject <SeekTimeIntentHandling>
  // instance methods
  -[_TtC26SiriPlaybackControlIntents21SeekTimeIntentHandler .cxx_destruct]
  -[_TtC26SiriPlaybackControlIntents21SeekTimeIntentHandler init]
  -[_TtC26SiriPlaybackControlIntents21SeekTimeIntentHandler handleSeekTime:completion:]
  -[_TtC26SiriPlaybackControlIntents21SeekTimeIntentHandler resolveDevicesForSeekTime:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents21SeekTimeIntentHandler resolvePlayheadPositionForSeekTime:withCompletion:]
  -[_TtC26SiriPlaybackControlIntents21SeekTimeIntentHandler confirmSeekTime:completion:]


PauseMediaIntent : INIntent
 @property  NSArray *devices
 @property  NSArray *deviceContext
 @property  NSNumber *isDirectInvocation
 @property  long long mediaType
 @property  NSArray *deviceQueries

  // instance methods
  -[PauseMediaIntent initWithCoder:]
  -[PauseMediaIntent init]
  -[PauseMediaIntent initWithIdentifier:backingStore:]
  -[PauseMediaIntent initWithDomain:verb:parametersByName:]


PauseMediaIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[PauseMediaIntentResponse setCode:]
  -[PauseMediaIntentResponse initWithPropertiesByName:]
  -[PauseMediaIntentResponse initWithCoder:]
  -[PauseMediaIntentResponse initWithCode:userActivity:]
  -[PauseMediaIntentResponse code]
  -[PauseMediaIntentResponse init]
  -[PauseMediaIntentResponse initWithBackingStore:]


PauseMediaDevicesResolutionResult : DeviceResolutionResult
  // class methods
  +[PauseMediaDevicesResolutionResult unsupportedForReason:]

  // instance methods
  -[PauseMediaDevicesResolutionResult initWithJSONDictionary:forIntent:]


ResumeMediaIntent : INIntent
 @property  NSArray *devices
 @property  NSArray *deviceContext
 @property  long long mediaType
 @property  NSString *targetBundleIdentifier
 @property  NSArray *deviceQueries

  // instance methods
  -[ResumeMediaIntent initWithCoder:]
  -[ResumeMediaIntent init]
  -[ResumeMediaIntent initWithIdentifier:backingStore:]
  -[ResumeMediaIntent initWithDomain:verb:parametersByName:]


ResumeMediaIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[ResumeMediaIntentResponse setCode:]
  -[ResumeMediaIntentResponse initWithPropertiesByName:]
  -[ResumeMediaIntentResponse initWithCoder:]
  -[ResumeMediaIntentResponse initWithCode:userActivity:]
  -[ResumeMediaIntentResponse code]
  -[ResumeMediaIntentResponse init]
  -[ResumeMediaIntentResponse initWithBackingStore:]


SkipTimeIntent : INIntent
 @property  NSArray *devices
 @property  SignedDuration *duration
 @property  NSArray *deviceContext
 @property  long long mediaType
 @property  NSArray *deviceQueries

  // instance methods
  -[SkipTimeIntent initWithCoder:]
  -[SkipTimeIntent init]
  -[SkipTimeIntent initWithIdentifier:backingStore:]
  -[SkipTimeIntent initWithDomain:verb:parametersByName:]


SkipTimeIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[SkipTimeIntentResponse setCode:]
  -[SkipTimeIntentResponse initWithPropertiesByName:]
  -[SkipTimeIntentResponse initWithCoder:]
  -[SkipTimeIntentResponse initWithCode:userActivity:]
  -[SkipTimeIntentResponse code]
  -[SkipTimeIntentResponse init]
  -[SkipTimeIntentResponse initWithBackingStore:]


SkipContentIntent : INIntent
 @property  NSArray *devices
 @property  long long direction
 @property  NSArray *deviceContext
 @property  long long mediaType
 @property  NSArray *deviceQueries

  // instance methods
  -[SkipContentIntent initWithCoder:]
  -[SkipContentIntent init]
  -[SkipContentIntent initWithIdentifier:backingStore:]
  -[SkipContentIntent initWithDomain:verb:parametersByName:]


SkipContentIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[SkipContentIntentResponse setCode:]
  -[SkipContentIntentResponse initWithPropertiesByName:]
  -[SkipContentIntentResponse initWithCoder:]
  -[SkipContentIntentResponse initWithCode:userActivity:]
  -[SkipContentIntentResponse code]
  -[SkipContentIntentResponse init]
  -[SkipContentIntentResponse initWithBackingStore:]


SetSubtitleStateIntent : INIntent
 @property  Device *device
 @property  long long enable
 @property  LanguageOption *language
 @property  NSArray *deviceContext
 @property  long long type
 @property  NSArray *deviceQueries

  // instance methods
  -[SetSubtitleStateIntent initWithCoder:]
  -[SetSubtitleStateIntent init]
  -[SetSubtitleStateIntent initWithIdentifier:backingStore:]
  -[SetSubtitleStateIntent initWithDomain:verb:parametersByName:]


SetSubtitleStateIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[SetSubtitleStateIntentResponse setCode:]
  -[SetSubtitleStateIntentResponse initWithPropertiesByName:]
  -[SetSubtitleStateIntentResponse initWithCoder:]
  -[SetSubtitleStateIntentResponse initWithCode:userActivity:]
  -[SetSubtitleStateIntentResponse code]
  -[SetSubtitleStateIntentResponse init]
  -[SetSubtitleStateIntentResponse initWithBackingStore:]


SetSubtitleStateDeviceResolutionResult : DeviceResolutionResult
  // class methods
  +[SetSubtitleStateDeviceResolutionResult unsupportedForReason:]

  // instance methods
  -[SetSubtitleStateDeviceResolutionResult initWithJSONDictionary:forIntent:]


SetSubtitleStateLanguageResolutionResult : LanguageOptionResolutionResult
  // class methods
  +[SetSubtitleStateLanguageResolutionResult unsupportedForReason:]

  // instance methods
  -[SetSubtitleStateLanguageResolutionResult initWithJSONDictionary:forIntent:]


SetAudioLanguageIntent : INIntent
 @property  Device *device
 @property  LanguageOption *language
 @property  NSArray *deviceContext
 @property  NSArray *deviceQueries

  // instance methods
  -[SetAudioLanguageIntent initWithCoder:]
  -[SetAudioLanguageIntent init]
  -[SetAudioLanguageIntent initWithIdentifier:backingStore:]
  -[SetAudioLanguageIntent initWithDomain:verb:parametersByName:]


SetAudioLanguageIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[SetAudioLanguageIntentResponse setCode:]
  -[SetAudioLanguageIntentResponse initWithPropertiesByName:]
  -[SetAudioLanguageIntentResponse initWithCoder:]
  -[SetAudioLanguageIntentResponse initWithCode:userActivity:]
  -[SetAudioLanguageIntentResponse code]
  -[SetAudioLanguageIntentResponse init]
  -[SetAudioLanguageIntentResponse initWithBackingStore:]


SetAudioLanguageDeviceResolutionResult : DeviceResolutionResult
  // class methods
  +[SetAudioLanguageDeviceResolutionResult unsupportedForReason:]

  // instance methods
  -[SetAudioLanguageDeviceResolutionResult initWithJSONDictionary:forIntent:]


SetAudioLanguageLanguageResolutionResult : LanguageOptionResolutionResult
  // class methods
  +[SetAudioLanguageLanguageResolutionResult unsupportedForReason:]

  // instance methods
  -[SetAudioLanguageLanguageResolutionResult initWithJSONDictionary:forIntent:]


WhatDidTheySayIntent : INIntent
 @property  Device *device
 @property  NSArray *deviceContext
 @property  NSDate *startTime

  // instance methods
  -[WhatDidTheySayIntent initWithCoder:]
  -[WhatDidTheySayIntent init]
  -[WhatDidTheySayIntent initWithIdentifier:backingStore:]
  -[WhatDidTheySayIntent initWithDomain:verb:parametersByName:]


WhatDidTheySayIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[WhatDidTheySayIntentResponse setCode:]
  -[WhatDidTheySayIntentResponse initWithPropertiesByName:]
  -[WhatDidTheySayIntentResponse initWithCoder:]
  -[WhatDidTheySayIntentResponse initWithCode:userActivity:]
  -[WhatDidTheySayIntentResponse code]
  -[WhatDidTheySayIntentResponse init]
  -[WhatDidTheySayIntentResponse initWithBackingStore:]


WhatDidTheySayDeviceResolutionResult : DeviceResolutionResult
  // class methods
  +[WhatDidTheySayDeviceResolutionResult unsupportedForReason:]

  // instance methods
  -[WhatDidTheySayDeviceResolutionResult initWithJSONDictionary:forIntent:]


SeekTimeIntent : INIntent
 @property  NSArray *devices
 @property  NSNumber *playheadPosition
 @property  NSNumber *shouldStartPlaybackAfterSeek
 @property  NSArray *deviceContext
 @property  NSNumber *isSkipToEnd
 @property  long long mediaType
 @property  NSArray *deviceQueries

  // instance methods
  -[SeekTimeIntent initWithCoder:]
  -[SeekTimeIntent init]
  -[SeekTimeIntent initWithIdentifier:backingStore:]
  -[SeekTimeIntent initWithDomain:verb:parametersByName:]


SeekTimeIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[SeekTimeIntentResponse setCode:]
  -[SeekTimeIntentResponse initWithPropertiesByName:]
  -[SeekTimeIntentResponse initWithCoder:]
  -[SeekTimeIntentResponse initWithCode:userActivity:]
  -[SeekTimeIntentResponse code]
  -[SeekTimeIntentResponse init]
  -[SeekTimeIntentResponse initWithBackingStore:]


SeekTimePlayheadPositionResolutionResult : INTimeIntervalResolutionResult
  // class methods
  +[SeekTimePlayheadPositionResolutionResult unsupportedForReason:]

  // instance methods
  -[SeekTimePlayheadPositionResolutionResult initWithJSONDictionary:forIntent:]


SetShuffleStateIntent : INIntent
 @property  NSArray *devices
 @property  long long shuffleState
 @property  NSArray *deviceContext
 @property  long long mediaType
 @property  NSArray *deviceQueries

  // instance methods
  -[SetShuffleStateIntent initWithCoder:]
  -[SetShuffleStateIntent init]
  -[SetShuffleStateIntent initWithIdentifier:backingStore:]
  -[SetShuffleStateIntent initWithDomain:verb:parametersByName:]


SetShuffleStateIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[SetShuffleStateIntentResponse setCode:]
  -[SetShuffleStateIntentResponse initWithPropertiesByName:]
  -[SetShuffleStateIntentResponse initWithCoder:]
  -[SetShuffleStateIntentResponse initWithCode:userActivity:]
  -[SetShuffleStateIntentResponse code]
  -[SetShuffleStateIntentResponse init]
  -[SetShuffleStateIntentResponse initWithBackingStore:]


SetRepeatStateIntent : INIntent
 @property  NSArray *devices
 @property  long long repeatState
 @property  NSArray *deviceContext
 @property  long long mediaType
 @property  NSArray *deviceQueries

  // instance methods
  -[SetRepeatStateIntent initWithCoder:]
  -[SetRepeatStateIntent init]
  -[SetRepeatStateIntent initWithIdentifier:backingStore:]
  -[SetRepeatStateIntent initWithDomain:verb:parametersByName:]


SetRepeatStateIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[SetRepeatStateIntentResponse setCode:]
  -[SetRepeatStateIntentResponse initWithPropertiesByName:]
  -[SetRepeatStateIntentResponse initWithCoder:]
  -[SetRepeatStateIntentResponse initWithCode:userActivity:]
  -[SetRepeatStateIntentResponse code]
  -[SetRepeatStateIntentResponse init]
  -[SetRepeatStateIntentResponse initWithBackingStore:]


GetVolumeLevelIntent : INIntent
 @property  Device *device
 @property  NSArray *deviceContext
 @property  NSArray *deviceQueries

  // instance methods
  -[GetVolumeLevelIntent initWithCoder:]
  -[GetVolumeLevelIntent init]
  -[GetVolumeLevelIntent initWithIdentifier:backingStore:]
  -[GetVolumeLevelIntent initWithDomain:verb:parametersByName:]


GetVolumeLevelIntentResponse : INIntentResponse
 @property  NSNumber *currentVolumeLevel
 @property  long long code

  // instance methods
  -[GetVolumeLevelIntentResponse setCode:]
  -[GetVolumeLevelIntentResponse initWithPropertiesByName:]
  -[GetVolumeLevelIntentResponse initWithCoder:]
  -[GetVolumeLevelIntentResponse initWithCode:userActivity:]
  -[GetVolumeLevelIntentResponse code]
  -[GetVolumeLevelIntentResponse init]
  -[GetVolumeLevelIntentResponse initWithBackingStore:]


GetVolumeLevelDeviceResolutionResult : DeviceResolutionResult
  // class methods
  +[GetVolumeLevelDeviceResolutionResult unsupportedForReason:]

  // instance methods
  -[GetVolumeLevelDeviceResolutionResult initWithJSONDictionary:forIntent:]


SetVolumeLevelIntent : INIntent
 @property  NSArray *devices
 @property  NSArray *deviceContext
 @property  VolumeLevel *volumeLevel
 @property  long long settingAttribute
 @property  NSArray *deviceQueries

  // instance methods
  -[SetVolumeLevelIntent initWithCoder:]
  -[SetVolumeLevelIntent init]
  -[SetVolumeLevelIntent initWithIdentifier:backingStore:]
  -[SetVolumeLevelIntent initWithDomain:verb:parametersByName:]


SetVolumeLevelIntentResponse : INIntentResponse
 @property  NSNumber *volumeLevel
 @property  long long code

  // instance methods
  -[SetVolumeLevelIntentResponse setCode:]
  -[SetVolumeLevelIntentResponse initWithPropertiesByName:]
  -[SetVolumeLevelIntentResponse initWithCoder:]
  -[SetVolumeLevelIntentResponse initWithCode:userActivity:]
  -[SetVolumeLevelIntentResponse code]
  -[SetVolumeLevelIntentResponse init]
  -[SetVolumeLevelIntentResponse initWithBackingStore:]


SetVolumeLevelDevicesResolutionResult : DeviceResolutionResult
  // class methods
  +[SetVolumeLevelDevicesResolutionResult unsupportedForReason:]

  // instance methods
  -[SetVolumeLevelDevicesResolutionResult initWithJSONDictionary:forIntent:]


SetVolumeLevelVolumeLevelResolutionResult : VolumeLevelResolutionResult
  // class methods
  +[SetVolumeLevelVolumeLevelResolutionResult unsupportedForReason:]

  // instance methods
  -[SetVolumeLevelVolumeLevelResolutionResult initWithJSONDictionary:forIntent:]


AddSpeakerIntent : INIntent
 @property  NSArray *deviceQueries
 @property  NSArray *deviceContext
 @property  long long mediaType
 @property  MediaStream *source
 @property  NSArray *destinations

  // instance methods
  -[AddSpeakerIntent initWithCoder:]
  -[AddSpeakerIntent init]
  -[AddSpeakerIntent initWithIdentifier:backingStore:]
  -[AddSpeakerIntent initWithDomain:verb:parametersByName:]


AddSpeakerIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[AddSpeakerIntentResponse setCode:]
  -[AddSpeakerIntentResponse initWithPropertiesByName:]
  -[AddSpeakerIntentResponse initWithCoder:]
  -[AddSpeakerIntentResponse initWithCode:userActivity:]
  -[AddSpeakerIntentResponse code]
  -[AddSpeakerIntentResponse init]
  -[AddSpeakerIntentResponse initWithBackingStore:]


AddSpeakerSourceResolutionResult : MediaStreamResolutionResult
  // class methods
  +[AddSpeakerSourceResolutionResult unsupportedForReason:]

  // instance methods
  -[AddSpeakerSourceResolutionResult initWithJSONDictionary:forIntent:]


AddSpeakerDestinationsResolutionResult : DeviceGroupResolutionResult
  // class methods
  +[AddSpeakerDestinationsResolutionResult unsupportedForReason:]

  // instance methods
  -[AddSpeakerDestinationsResolutionResult initWithJSONDictionary:forIntent:]


MoveSpeakerIntent : INIntent
 @property  NSArray *deviceQueries
 @property  NSArray *deviceContext
 @property  long long mediaType
 @property  MediaStream *source
 @property  NSArray *destinations

  // instance methods
  -[MoveSpeakerIntent initWithCoder:]
  -[MoveSpeakerIntent init]
  -[MoveSpeakerIntent initWithIdentifier:backingStore:]
  -[MoveSpeakerIntent initWithDomain:verb:parametersByName:]


MoveSpeakerIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[MoveSpeakerIntentResponse setCode:]
  -[MoveSpeakerIntentResponse initWithPropertiesByName:]
  -[MoveSpeakerIntentResponse initWithCoder:]
  -[MoveSpeakerIntentResponse initWithCode:userActivity:]
  -[MoveSpeakerIntentResponse code]
  -[MoveSpeakerIntentResponse init]
  -[MoveSpeakerIntentResponse initWithBackingStore:]


MoveSpeakerSourceResolutionResult : MediaStreamResolutionResult
  // class methods
  +[MoveSpeakerSourceResolutionResult unsupportedForReason:]

  // instance methods
  -[MoveSpeakerSourceResolutionResult initWithJSONDictionary:forIntent:]


MoveSpeakerDestinationsResolutionResult : DeviceGroupResolutionResult
  // class methods
  +[MoveSpeakerDestinationsResolutionResult unsupportedForReason:]

  // instance methods
  -[MoveSpeakerDestinationsResolutionResult initWithJSONDictionary:forIntent:]


DirectionResolutionResult : INEnumResolutionResult
  // class methods
  +[DirectionResolutionResult successWithResolvedDirection:]
  +[DirectionResolutionResult confirmationRequiredWithDirectionToConfirm:]

  // instance methods
  -[DirectionResolutionResult initWithJSONDictionary:forIntent:]


RepeatStateResolutionResult : INEnumResolutionResult
  // class methods
  +[RepeatStateResolutionResult successWithResolvedRepeatState:]
  +[RepeatStateResolutionResult confirmationRequiredWithRepeatStateToConfirm:]

  // instance methods
  -[RepeatStateResolutionResult initWithJSONDictionary:forIntent:]


ShuffleStateResolutionResult : INEnumResolutionResult
  // class methods
  +[ShuffleStateResolutionResult successWithResolvedShuffleState:]
  +[ShuffleStateResolutionResult confirmationRequiredWithShuffleStateToConfirm:]

  // instance methods
  -[ShuffleStateResolutionResult initWithJSONDictionary:forIntent:]


SubtitleStateResolutionResult : INEnumResolutionResult
  // class methods
  +[SubtitleStateResolutionResult successWithResolvedSubtitleState:]
  +[SubtitleStateResolutionResult confirmationRequiredWithSubtitleStateToConfirm:]

  // instance methods
  -[SubtitleStateResolutionResult initWithJSONDictionary:forIntent:]


DeviceProximityResolutionResult : INEnumResolutionResult
  // class methods
  +[DeviceProximityResolutionResult successWithResolvedDeviceProximity:]
  +[DeviceProximityResolutionResult confirmationRequiredWithDeviceProximityToConfirm:]

  // instance methods
  -[DeviceProximityResolutionResult initWithJSONDictionary:forIntent:]


NowPlayingStateResolutionResult : INEnumResolutionResult
  // class methods
  +[NowPlayingStateResolutionResult successWithResolvedNowPlayingState:]
  +[NowPlayingStateResolutionResult confirmationRequiredWithNowPlayingStateToConfirm:]

  // instance methods
  -[NowPlayingStateResolutionResult initWithJSONDictionary:forIntent:]


SubtitleTypeResolutionResult : INEnumResolutionResult
  // class methods
  +[SubtitleTypeResolutionResult successWithResolvedSubtitleType:]
  +[SubtitleTypeResolutionResult confirmationRequiredWithSubtitleTypeToConfirm:]

  // instance methods
  -[SubtitleTypeResolutionResult initWithJSONDictionary:forIntent:]


NowPlayingMediaTypeResolutionResult : INEnumResolutionResult
  // class methods
  +[NowPlayingMediaTypeResolutionResult successWithResolvedNowPlayingMediaType:]
  +[NowPlayingMediaTypeResolutionResult confirmationRequiredWithNowPlayingMediaTypeToConfirm:]

  // instance methods
  -[NowPlayingMediaTypeResolutionResult initWithJSONDictionary:forIntent:]


NLMediaTypeResolutionResult : INEnumResolutionResult
  // class methods
  +[NLMediaTypeResolutionResult successWithResolvedNLMediaType:]
  +[NLMediaTypeResolutionResult confirmationRequiredWithNLMediaTypeToConfirm:]

  // instance methods
  -[NLMediaTypeResolutionResult initWithJSONDictionary:forIntent:]


VolumeSettingStateResolutionResult : INEnumResolutionResult
  // class methods
  +[VolumeSettingStateResolutionResult successWithResolvedVolumeSettingState:]
  +[VolumeSettingStateResolutionResult confirmationRequiredWithVolumeSettingStateToConfirm:]

  // instance methods
  -[VolumeSettingStateResolutionResult initWithJSONDictionary:forIntent:]


VolumeSettingUnitResolutionResult : INEnumResolutionResult
  // class methods
  +[VolumeSettingUnitResolutionResult successWithResolvedVolumeSettingUnit:]
  +[VolumeSettingUnitResolutionResult confirmationRequiredWithVolumeSettingUnitToConfirm:]

  // instance methods
  -[VolumeSettingUnitResolutionResult initWithJSONDictionary:forIntent:]


VolumeSettingAttributeResolutionResult : INEnumResolutionResult
  // class methods
  +[VolumeSettingAttributeResolutionResult successWithResolvedVolumeSettingAttribute:]
  +[VolumeSettingAttributeResolutionResult confirmationRequiredWithVolumeSettingAttributeToConfirm:]

  // instance methods
  -[VolumeSettingAttributeResolutionResult initWithJSONDictionary:forIntent:]


VolumeSettingQualifierResolutionResult : INEnumResolutionResult
  // class methods
  +[VolumeSettingQualifierResolutionResult successWithResolvedVolumeSettingQualifier:]
  +[VolumeSettingQualifierResolutionResult confirmationRequiredWithVolumeSettingQualifierToConfirm:]

  // instance methods
  -[VolumeSettingQualifierResolutionResult initWithJSONDictionary:forIntent:]


VolumeSettingTypeResolutionResult : INEnumResolutionResult
  // class methods
  +[VolumeSettingTypeResolutionResult successWithResolvedVolumeSettingType:]
  +[VolumeSettingTypeResolutionResult confirmationRequiredWithVolumeSettingTypeToConfirm:]

  // instance methods
  -[VolumeSettingTypeResolutionResult initWithJSONDictionary:forIntent:]


GroupTypeResolutionResult : INEnumResolutionResult
  // class methods
  +[GroupTypeResolutionResult successWithResolvedGroupType:]
  +[GroupTypeResolutionResult confirmationRequiredWithGroupTypeToConfirm:]

  // instance methods
  -[GroupTypeResolutionResult initWithJSONDictionary:forIntent:]


Device : INObject
 @property  NSString *description
 @property  NSString *name
 @property  NSString *roomName
 @property  NSArray *zoneNames
 @property  NSString *type
 @property  NSString *routeId
 @property  NSNumber *currentHome
 @property  NSNumber *currentRoom
 @property  NSNumber *numberOfAffectedRooms
 @property  NSNumber *isDeviceSelectedUsingContext
 @property  DeviceContext *context
 @property  NSNumber *disambiguated
 @property  NSNumber *confirmed
 @property  NSNumber *skipConfirmation
 @property  NSString *mediaSystemId
 @property  NSNumber *isEndpoint

  // instance methods
  -[Device initWithCoder:]
  -[Device initWithIdentifier:displayString:pronunciationHint:]


DeviceResolutionResult : INObjectResolutionResult
  // class methods
  +[DeviceResolutionResult successWithResolvedObject:]
  +[DeviceResolutionResult disambiguationWithObjectsToDisambiguate:]
  +[DeviceResolutionResult confirmationRequiredWithObjectToConfirm:]
  +[DeviceResolutionResult successWithResolvedDevice:]
  +[DeviceResolutionResult disambiguationWithDevicesToDisambiguate:]
  +[DeviceResolutionResult confirmationRequiredWithDeviceToConfirm:]

  // instance methods
  -[DeviceResolutionResult initWithJSONDictionary:forIntent:]


SignedDuration : INObject
 @property  NSNumber *duration
 @property  long long direction

  // instance methods
  -[SignedDuration initWithCoder:]
  -[SignedDuration initWithIdentifier:displayString:pronunciationHint:]


SignedDurationResolutionResult : INObjectResolutionResult
  // class methods
  +[SignedDurationResolutionResult successWithResolvedObject:]
  +[SignedDurationResolutionResult disambiguationWithObjectsToDisambiguate:]
  +[SignedDurationResolutionResult confirmationRequiredWithObjectToConfirm:]
  +[SignedDurationResolutionResult successWithResolvedSignedDuration:]
  +[SignedDurationResolutionResult disambiguationWithSignedDurationsToDisambiguate:]
  +[SignedDurationResolutionResult confirmationRequiredWithSignedDurationToConfirm:]

  // instance methods
  -[SignedDurationResolutionResult initWithJSONDictionary:forIntent:]


DeviceContext : INObject
 @property  NSString *description
 @property  NSString *routeId
 @property  long long proximity
 @property  long long nowPlayingState
 @property  NSDate *nowPlayingTimestamp
 @property  long long nowPlayingMediaType
 @property  NSString *groupId
 @property  NSNumber *silentPrimary

  // instance methods
  -[DeviceContext initWithCoder:]
  -[DeviceContext initWithIdentifier:displayString:pronunciationHint:]
  -[DeviceContext isEqual:]


DeviceContextResolutionResult : INObjectResolutionResult
  // class methods
  +[DeviceContextResolutionResult successWithResolvedObject:]
  +[DeviceContextResolutionResult disambiguationWithObjectsToDisambiguate:]
  +[DeviceContextResolutionResult confirmationRequiredWithObjectToConfirm:]
  +[DeviceContextResolutionResult successWithResolvedDeviceContext:]
  +[DeviceContextResolutionResult disambiguationWithDeviceContextsToDisambiguate:]
  +[DeviceContextResolutionResult confirmationRequiredWithDeviceContextToConfirm:]

  // instance methods
  -[DeviceContextResolutionResult initWithJSONDictionary:forIntent:]


LanguageOption : INObject
 @property  NSString *description
 @property  NSString *languageIdentifier
 @property  NSString *languageTag
 @property  NSString *name
 @property  NSNumber *isActive

  // instance methods
  -[LanguageOption initWithCoder:]
  -[LanguageOption initWithIdentifier:displayString:pronunciationHint:]


LanguageOptionResolutionResult : INObjectResolutionResult
  // class methods
  +[LanguageOptionResolutionResult successWithResolvedObject:]
  +[LanguageOptionResolutionResult disambiguationWithObjectsToDisambiguate:]
  +[LanguageOptionResolutionResult confirmationRequiredWithObjectToConfirm:]
  +[LanguageOptionResolutionResult successWithResolvedLanguageOption:]
  +[LanguageOptionResolutionResult disambiguationWithLanguageOptionsToDisambiguate:]
  +[LanguageOptionResolutionResult confirmationRequiredWithLanguageOptionToConfirm:]

  // instance methods
  -[LanguageOptionResolutionResult initWithJSONDictionary:forIntent:]


DeviceQuery : INObject
 @property  NSString *accessoryName
 @property  NSString *roomName
 @property  NSString *zoneName
 @property  NSString *placeHintString
 @property  NSString *deviceQuantifierString
 @property  NSString *serviceName
 @property  NSString *serviceGroup
 @property  NSString *deviceTypeString
 @property  NSString *referenceString
 @property  NSNumber *fromEntity

  // instance methods
  -[DeviceQuery initWithCoder:]
  -[DeviceQuery initWithIdentifier:displayString:pronunciationHint:]


DeviceQueryResolutionResult : INObjectResolutionResult
  // class methods
  +[DeviceQueryResolutionResult successWithResolvedObject:]
  +[DeviceQueryResolutionResult disambiguationWithObjectsToDisambiguate:]
  +[DeviceQueryResolutionResult confirmationRequiredWithObjectToConfirm:]
  +[DeviceQueryResolutionResult successWithResolvedDeviceQuery:]
  +[DeviceQueryResolutionResult disambiguationWithDeviceQuerysToDisambiguate:]
  +[DeviceQueryResolutionResult confirmationRequiredWithDeviceQueryToConfirm:]

  // instance methods
  -[DeviceQueryResolutionResult initWithJSONDictionary:forIntent:]


VolumeLevel : INObject
 @property  NSNumber *volumeSettingValue
 @property  long long volumeSettingState
 @property  long long volumeSettingUnit
 @property  long long volumeSettingQualifier
 @property  NSNumber *resolvedVolumeOutput
 @property  NSNumber *currentVolumeOutput
 @property  long long volumeSettingType

  // instance methods
  -[VolumeLevel initWithCoder:]
  -[VolumeLevel initWithIdentifier:displayString:pronunciationHint:]


VolumeLevelResolutionResult : INObjectResolutionResult
  // class methods
  +[VolumeLevelResolutionResult successWithResolvedObject:]
  +[VolumeLevelResolutionResult disambiguationWithObjectsToDisambiguate:]
  +[VolumeLevelResolutionResult confirmationRequiredWithObjectToConfirm:]
  +[VolumeLevelResolutionResult successWithResolvedVolumeLevel:]
  +[VolumeLevelResolutionResult disambiguationWithVolumeLevelsToDisambiguate:]
  +[VolumeLevelResolutionResult confirmationRequiredWithVolumeLevelToConfirm:]

  // instance methods
  -[VolumeLevelResolutionResult initWithJSONDictionary:forIntent:]


DeviceGroup : INObject
 @property  NSString *description
 @property  NSString *groupName
 @property  NSArray *streams
 @property  long long type
 @property  NSNumber *includesTVs
 @property  NSNumber *excludeGroup

  // instance methods
  -[DeviceGroup initWithCoder:]
  -[DeviceGroup initWithIdentifier:displayString:pronunciationHint:]


DeviceGroupResolutionResult : INObjectResolutionResult
  // class methods
  +[DeviceGroupResolutionResult successWithResolvedObject:]
  +[DeviceGroupResolutionResult disambiguationWithObjectsToDisambiguate:]
  +[DeviceGroupResolutionResult confirmationRequiredWithObjectToConfirm:]
  +[DeviceGroupResolutionResult successWithResolvedDeviceGroup:]
  +[DeviceGroupResolutionResult disambiguationWithDeviceGroupsToDisambiguate:]
  +[DeviceGroupResolutionResult confirmationRequiredWithDeviceGroupToConfirm:]

  // instance methods
  -[DeviceGroupResolutionResult initWithJSONDictionary:forIntent:]


MediaStream : INObject
 @property  NSString *description
 @property  NSArray *devices
 @property  Device *groupLeader

  // instance methods
  -[MediaStream initWithCoder:]
  -[MediaStream initWithIdentifier:displayString:pronunciationHint:]


MediaStreamResolutionResult : INObjectResolutionResult
  // class methods
  +[MediaStreamResolutionResult successWithResolvedObject:]
  +[MediaStreamResolutionResult disambiguationWithObjectsToDisambiguate:]
  +[MediaStreamResolutionResult confirmationRequiredWithObjectToConfirm:]
  +[MediaStreamResolutionResult successWithResolvedMediaStream:]
  +[MediaStreamResolutionResult disambiguationWithMediaStreamsToDisambiguate:]
  +[MediaStreamResolutionResult confirmationRequiredWithMediaStreamToConfirm:]

  // instance methods
  -[MediaStreamResolutionResult initWithJSONDictionary:forIntent:]


Device(SiriPlaybackControlIntents1)
	// class methods
	+[Device(SiriPlaybackControlIntents1) supportsSecureCoding]

SignedDuration(SiriPlaybackControlIntents)
	// class methods
	+[SignedDuration(SiriPlaybackControlIntents) supportsSecureCoding]

DeviceContext(SiriPlaybackControlIntents1)
	// class methods
	+[DeviceContext(SiriPlaybackControlIntents1) supportsSecureCoding]

LanguageOption(SiriPlaybackControlIntents1)
	// class methods
	+[LanguageOption(SiriPlaybackControlIntents1) supportsSecureCoding]

DeviceQuery(SiriPlaybackControlIntents)
	// class methods
	+[DeviceQuery(SiriPlaybackControlIntents) supportsSecureCoding]

VolumeLevel(SiriPlaybackControlIntents)
	// class methods
	+[VolumeLevel(SiriPlaybackControlIntents) supportsSecureCoding]

DeviceGroup(SiriPlaybackControlIntents1)
	// class methods
	+[DeviceGroup(SiriPlaybackControlIntents1) supportsSecureCoding]

MediaStream(SiriPlaybackControlIntents1)
	// class methods
	+[MediaStream(SiriPlaybackControlIntents1) supportsSecureCoding]

01 00 0900 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFAnalytics 
01 00 0900 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFClockAlarmSnapshot 
01 00 0900 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFClockTimer 
01 00 0900 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFClockTimerSnapshot 
01 00 0900 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFCoreAnalyticsCrossDeviceEvent 
01 00 0900 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFCoreAnalyticsLoggingService 
01 00 0900 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFHomeAnnouncementSnapshot 
01 00 0900 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFMediaPlaybackStateSnapshot 
01 00 0900 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFServiceDeviceContext 
01 00 0d00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSession 
01 00 0d00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSessionPortDescription 
01 00 1500 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: FLOWSchemaFLOWDomainContext 
01 00 1500 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: FLOWSchemaFLOWMediaPlayerContext 
01 00 1500 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: FLOWSchemaFLOWholeHouseAudioDestinationContext 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INCustomObject 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INEnumResolutionResult 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INIntent 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INIntentResponse 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INObject 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INObjectResolutionResult 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INPlayMediaIntent 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INTimeIntervalResolutionResult 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0c00 /usr/lib/libSystem.B.dylib: OS_dispatch_queue 
01 00 0c00 /usr/lib/libSystem.B.dylib: OS_dispatch_source 
01 00 0c00 /usr/lib/libSystem.B.dylib: OS_os_log 
01 00 0500 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSAssertion 
01 00 0500 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSAttribute 
01 00 0500 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSDomainAttribute 
01 00 0500 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSTarget 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SABaseCommand 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACardSnippet 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASTButtonItem 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASTCommandTemplateAction 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASTItemGroup 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASendCommands 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAStartRequest 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIButton 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUICloseAssistant 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIConfirmationOption 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIConfirmationView 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIDecoratedText 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIDisambiguationList 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIHideSiriOverlay 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIListItem 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUISash 
01 00 1200 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFMediaRemoteControlCardSection 
01 00 0100 /System/Library/PrivateFrameworks/SiriOntology.framework/SiriOntology: SIRINLUSystemGaveOptions 
01 00 0100 /System/Library/PrivateFrameworks/SiriOntology.framework/SiriOntology: SIRINLUSystemOffered 
01 00 0100 /System/Library/PrivateFrameworks/SiriOntology.framework/SiriOntology: SIRINLUSystemPrompted 
01 00 0100 /System/Library/PrivateFrameworks/SiriOntology.framework/SiriOntology: SIRINLUUserStatedTask 
01 00 0100 /System/Library/PrivateFrameworks/SiriOntology.framework/SiriOntology: SIRINLUUserWantedToProceed 
01 00 1500 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaUUFRCompletion 
01 00 1600 /System/Library/PrivateFrameworks/SiriKitInvocation.framework/SiriKitInvocation: SKIDirectInvocation 
01 00 1600 /System/Library/PrivateFrameworks/SiriKitInvocation.framework/SiriKitInvocation: SKIDirectInvocationPayload 
01 00 0100 /System/Library/PrivateFrameworks/SiriOntology.framework/SiriOntology: USOSerializedGraph 
01 00 1d00 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
