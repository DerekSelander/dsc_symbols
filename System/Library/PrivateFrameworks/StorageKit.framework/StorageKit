|| __DATA.__data _SKAPFSVolumeRoleBackup
|| __DATA.__data _SKAPFSVolumeRoleData
|| __DATA.__data _SKAPFSVolumeRoleHardware
|| __DATA.__data _SKAPFSVolumeRoleInstaller
|| __DATA.__data _SKAPFSVolumeRoleNone
|| __DATA.__data _SKAPFSVolumeRolePreboot
|| __DATA.__data _SKAPFSVolumeRoleRecovery
|| __DATA.__data _SKAPFSVolumeRoleSystem
|| __DATA.__data _SKAPFSVolumeRoleUpdate
|| __DATA.__data _SKAPFSVolumeRoleUser
|| __DATA.__data _SKAPFSVolumeRoleVM
|| __DATA.__data _SKAPFSVolumeRoleXART
|| __DATA.__data _SKErrorDomain
|| __DATA.__data _kSKAPFSDiskMountIgnoreGroup
|| __DATA.__data _kSKAPFSDiskUnmountDoNotLock
|| __DATA.__data _kSKAPFSDiskUnmountForce
|| __DATA.__data _kSKAPFSDiskUnmountIgnoreGroup
|| __DATA.__data _kSKDiskDisableRepairKextCache
|| __DATA.__data _kSKDiskFileSystem3rdPartyPrefix
|| __DATA.__data _kSKDiskFileSystemACFS
|| __DATA.__data _kSKDiskFileSystemAPFS
|| __DATA.__data _kSKDiskFileSystemExFAT
|| __DATA.__data _kSKDiskFileSystemFAT
|| __DATA.__data _kSKDiskFileSystemHFS
|| __DATA.__data _kSKDiskFileSystemNTFS
|| __DATA.__data _kSKDiskFileSystemUndefined
|| __DATA.__data _kSKDiskMountOptionForce
|| __DATA.__data _kSKDiskMountOptionMountPoint
|| __DATA.__data _kSKDiskMountOptionRecursive
|| __DATA.__data _kSKDiskMountOptionToolOptions
|| __DATA.__data _kSKDiskPartitionMapAPM
|| __DATA.__data _kSKDiskPartitionMapGPT
|| __DATA.__data _kSKDiskPartitionMapMBR
|| __DATA.__data _kSKDiskRepairESPForWholeDisk
|| __DATA.__data _kSKDiskRepairESPRecreateIfNecessary
|| __DATA.__data _kSKDiskRoleBooter
|| __DATA.__data _kSKDiskRoleDigitalCameraData
|| __DATA.__data _kSKDiskRoleExternalMedia
|| __DATA.__data _kSKDiskRoleInstaller
|| __DATA.__data _kSKDiskRoleLegacyMacData
|| __DATA.__data _kSKDiskRoleLegacyMacSystem
|| __DATA.__data _kSKDiskRoleMacApplicationData
|| __DATA.__data _kSKDiskRoleMacData
|| __DATA.__data _kSKDiskRoleMacSystem
|| __DATA.__data _kSKDiskRoleMacSystemData
|| __DATA.__data _kSKDiskRoleMacUserData
|| __DATA.__data _kSKDiskRoleNoRole
|| __DATA.__data _kSKDiskRolePhysicalDisk
|| __DATA.__data _kSKDiskRoleRecovery
|| __DATA.__data _kSKDiskRoleSnapshot
|| __DATA.__data _kSKDiskRoleStorageImplementation
|| __DATA.__data _kSKDiskRoleUnknown
|| __DATA.__data _kSKDiskRoleVirtualMemory
|| __DATA.__data _kSKDiskRoleWindowsData
|| __DATA.__data _kSKDiskRoleWindowsSystem
|| __DATA.__data _kSKDiskRoleXSanData
|| __DATA.__data _kSKDiskType3rdPartyFilesystem
|| __DATA.__data _kSKDiskTypeAPFSContainer
|| __DATA.__data _kSKDiskTypeAPFSLV
|| __DATA.__data _kSKDiskTypeAPFSPS
|| __DATA.__data _kSKDiskTypeAPMWholeDisk
|| __DATA.__data _kSKDiskTypeAppleBoot
|| __DATA.__data _kSKDiskTypeAppleCoreDump
|| __DATA.__data _kSKDiskTypeCSLV
|| __DATA.__data _kSKDiskTypeCSLVG
|| __DATA.__data _kSKDiskTypeCSPV
|| __DATA.__data _kSKDiskTypeDamaged
|| __DATA.__data _kSKDiskTypeEFI
|| __DATA.__data _kSKDiskTypeExFAT
|| __DATA.__data _kSKDiskTypeFAT
|| __DATA.__data _kSKDiskTypeGPTWholeDisk
|| __DATA.__data _kSKDiskTypeHFS
|| __DATA.__data _kSKDiskTypeISOOpticalWholeDisk
|| __DATA.__data _kSKDiskTypeMBRWholeDisk
|| __DATA.__data _kSKDiskTypeNTFS
|| __DATA.__data _kSKDiskTypeOtherRecognizable
|| __DATA.__data _kSKDiskTypeOtherUnrecognized
|| __DATA.__data _kSKDiskTypeRAID
|| __DATA.__data _kSKDiskTypeUninitalized
|| __DATA.__data _kSKDiskTypeXSanLV
|| __DATA.__data _kSKFDEAPFSUserIsAdmin
|| __DATA.__data _kSKFDEAPFSUserIsOwner
|| __DATA.__data _kSKFDEODRecordKey
|| __DATA.__data _kSKFDEPCSetKey
|| __DATA.__data _kSKFDEPasswordKey
|| __DATA.__data _kSKFDEUserIconDataKey
|| __DATA.__data _kSKFDEUserNameKey
|| __DATA.__data _kSKFDEUserNameShortNameKey
|| __DATA.__data _kSKFDEUserNamesDataArrayKey
|| __DATA.__data _kSKFDEUserPassphraseHint
|| __DATA.__data _kSKFDEUserTypeKey
|| __DATA.__data _kSKFDEUserUUIDKey
|| __DATA.__data _kSKFDEiCloudUserNameKey
|| __DATA.__data _kSKIFDEAKSPasshandle
|| __DATA.__data _kSKIFDEFullUserName
|| __DATA.__data _kSKIFDEPassword
|| __DATA.__data _kSKIFDEUserUUID
|| __DATA.__data _kSKRAIDDiskMemberTypeMember
|| __DATA.__data _kSKRAIDDiskMemberTypeSpare
|| __DATA.__data _kSKRAIDDiskTypeJBOD
|| __DATA.__data _kSKRAIDDiskTypeMirrored
|| __DATA.__data _kSKRAIDDiskTypeStriped
|| __DATA.__objc_data _OBJC_CLASS_$_SKDiskImage
|| __DATA.__objc_data _OBJC_CLASS_$_SKDiskImageAttachParams
|| __DATA.__objc_data _OBJC_CLASS_$_SKHelperClient
|| __DATA.__objc_data _OBJC_CLASS_$_SKIdleWaiter
|| __DATA.__objc_data _OBJC_CLASS_$_SKManager
|| __DATA.__objc_data _OBJC_CLASS_$_SKMediaKit
|| __DATA.__objc_data _OBJC_CLASS_$_SKMountParams
|| __DATA.__objc_data _OBJC_CLASS_$_SKSyncCommand
|| __DATA.__objc_data _OBJC_CLASS_$_SKWaitingForDiskElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKDiskImage
|| __DATA.__objc_data _OBJC_METACLASS_$_SKDiskImageAttachParams
|| __DATA.__objc_data _OBJC_METACLASS_$_SKHelperClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SKIdleWaiter
|| __DATA.__objc_data _OBJC_METACLASS_$_SKManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SKMediaKit
|| __DATA.__objc_data _OBJC_METACLASS_$_SKMountParams
|| __DATA.__objc_data _OBJC_METACLASS_$_SKSyncCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_SKWaitingForDiskElement
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKDisk._daDiskRef
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKDisk._sortedChildren
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKHelperClient._callbackQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKHelperClient._completionBlockDictionary
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKHelperClient._connection
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKHelperClient._errorBlockDictionary
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKHelperClient._isInvalidated
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKHelperClient._progressBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKHelperClient._progressBlockDictionary
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKManager._connection
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKManager._diskNotificationQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKManager._diskOperationMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKManager._filesystems
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKManager._listeners
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKManager._listenersAppearedDisks
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKManager._shouldBeBindingsSafe
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKManager._waitingForDiskQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKManager._waitingForDiskSet
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKManager.allDisks
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKManager.diskQueueStuck
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKManager.visibleRoles
|| __DATA_CONST.__const _READONLY_KEY_TO_SYNC
|| __DATA_CONST.__const _SKAPFSFDERecipieICloudRecoveryPCSKey
|| __DATA_CONST.__const _SKAPFSFDERecipieICloudRecoveryUserKey
|| __DATA_CONST.__const _SKAPFSFDERecipiePersonalRecoveryKey
|| __DATA_CONST.__const _SKAPFSFDERecipieUsersKey
|| __DATA_CONST.__const _kSKErrorDiskArbErrorCodeKey
|| __DATA_CONST.__const _kSKErrorDiskArbErrorStringKey
|| __DATA_CONST.__const _kSKErrorDissenterPIDKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKAPFSContainerDisk
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKAPFSDisk
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKAPFSSnapshotDisk
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKAPFSStoreDisk
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKBaseManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKDisk
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKError
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKFilesystem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKAPFSContainerDisk
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKAPFSDisk
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKAPFSSnapshotDisk
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKAPFSStoreDisk
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKBaseManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKDisk
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKError
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKFilesystem
|| __TEXT.__text _NSNumberToBool
|| __TEXT.__text _NSNumberToULongLong
|| __TEXT.__text _NSStringOrEmpty
|| __TEXT.__text _SKGetOSLog
|| __TEXT.__text _SKHelperClientInterface
|| __TEXT.__text _SKHelperConnectionInterface
|| __TEXT.__text _SKLogArrayRedacted
|| __TEXT.__text _SKLogSetLogsToConsole
|| __TEXT.__text _SKLogSetLogsToStd
|| __TEXT.__text _SKLogSetLogsToSys
|| __TEXT.__text _SKLogSetRedacted
|| __TEXT.__text _commaSeparatedDiskListFromArray
|| __TEXT.__text _isValidNSDictionary
|| __TEXT.__text _isValidNSNumber
|| __TEXT.__text _isValidNSString
__ CoreFoundation: _CFBundleCreateBundlesFromDirectory
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFBundleGetValueForInfoDictionaryKey
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _CFUUIDGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFCopyServerVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBundleNameKey
__ DiskArbitration: _DADiskCopyDescription
__ DiskArbitration: _DADiskCreateFromBSDName
__ DiskArbitration: _DASessionCreate
__ DiskArbitration: _kDADiskDescriptionVolumeUUIDKey
__ DiskImages2: _OBJC_CLASS_$_DIAttachParams
__ DiskImages2: _OBJC_CLASS_$_DiskImages2
__ Foundation: _NSClassFromString
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ MediaKit: _MKCFCreateFSInfo
__ MediaKit: _MKMediaCreateWithPath
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fstatfs
__ libSystem.B.dylib: _getattrlist
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _syslog
__ libSystem.B.dylib: _uuid_parse
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
SKBaseManager : NSObject
 @property  BOOL supportsCocoa

  // class methods
  +[SKBaseManager sharedManager]
  +[SKBaseManager defaultVisibleRoles]

  // instance methods
  -[SKBaseManager init]
  -[SKBaseManager allDisks]
  -[SKBaseManager supportsCocoa]


SKManager : SKBaseManager <SKManagerListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKManager sharedManager]
  +[SKManager defaultVisibleRoles]
  +[SKManager sharedManagerWithBindingsSafety:]
  +[SKManager syncSharedManager]
  +[SKManager isMountPointWithPath:]

  // instance methods
  -[SKManager isBusy]
  -[SKManager addListener:]
  -[SKManager removeListener:]
  -[SKManager .cxx_destruct]
  -[SKManager allDisks]
  -[SKManager initialPopulateComplete]
  -[SKManager disksAppeared:]
  -[SKManager disksDisappeared:]
  -[SKManager disksChanged:]
  -[SKManager managerStalled]
  -[SKManager managerResumed]
  -[SKManager initWithBindingSafety:]
  -[SKManager allDisksSet]
  -[SKManager syncAllDisks]
  -[SKManager setVisibleRoles:]
  -[SKManager visibleRoles]
  -[SKManager visibleDisks]
  -[SKManager diskForBSDname:]
  -[SKManager diskForUUID:]
  -[SKManager diskForVolumeName:]
  -[SKManager _diskForString:]
  -[SKManager diskForString:]
  -[SKManager _diskForPath:]
  -[SKManager diskForPath:]
  -[SKManager wholeDiskForDisk:]
  -[SKManager childDisksForWholeDisk:]
  -[SKManager filesystems]
  -[SKManager formatableFileSystems]
  -[SKManager filesystemWithSKType:isCaseSensitive:isEncrypted:]
  -[SKManager physicalStoresForAPFSVolume:]
  -[SKManager volumesForAPFSPS:]
  -[SKManager knownDisksForDictionaries:]
  -[SKManager knownDisksForDictionaries:waitingForDaemon:]
  -[SKManager knownDisksForDictionaries:waitingForDaemon:fromSet:]
  -[SKManager knownDiskForDictionary:notify:onQueue:]
  -[SKManager knownDiskForDictionary:]
  -[SKManager knownDiskForDictionary:waitingForDaemon:]
  -[SKManager knownDiskForDictionary:waitingForDaemon:fromSet:]
  -[SKManager newDiskWithDictionary:]
  -[SKManager _initialPopulateCompleteForListener:]
  -[SKManager _disksAppeared:toListener:]


SKSyncCommand : NSObject
 @property  NSObject<OS_dispatch_semaphore> *semaphore
 @property  NSError *error

  // instance methods
  -[SKSyncCommand error]
  -[SKSyncCommand .cxx_destruct]
  -[SKSyncCommand setError:]
  -[SKSyncCommand setSemaphore:]
  -[SKSyncCommand semaphore]
  -[SKSyncCommand init]
  -[SKSyncCommand onCallbackWithError:]
  -[SKSyncCommand waitAndReturnWithError:]


SKIdleWaiter : NSObject <SKManagerListener>
 @property  NSObject<OS_dispatch_semaphore> *semaphore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKIdleWaiter .cxx_destruct]
  -[SKIdleWaiter setSemaphore:]
  -[SKIdleWaiter waitForIdle]
  -[SKIdleWaiter semaphore]
  -[SKIdleWaiter init]
  -[SKIdleWaiter initialPopulateComplete]


SKMountParams : NSObject <NSCopying>
 @property  BOOL recursive
 @property  BOOL force
 @property  BOOL readOnly
 @property  BOOL noBrowse
 @property  NSURL *mountPoint
 @property  NSSet *allParams

  // instance methods
  -[SKMountParams setReadOnly:]
  -[SKMountParams recursive]
  -[SKMountParams force]
  -[SKMountParams setForce:]
  -[SKMountParams setRecursive:]
  -[SKMountParams .cxx_destruct]
  -[SKMountParams readOnly]
  -[SKMountParams dictionaryRepresentation]
  -[SKMountParams copyWithZone:]
  -[SKMountParams initWithParams:]
  -[SKMountParams init]
  -[SKMountParams mountPoint]
  -[SKMountParams setMountPoint:]
  -[SKMountParams noBrowse]
  -[SKMountParams setNoBrowse:]
  -[SKMountParams allParams]
  -[SKMountParams setAllParams:]


SKFilesystem : NSObject
 @property  NSString *localizedName
 @property  NSString *localizedKey
 @property  NSString *type
 @property  NSString *majorType
 @property  NSString *dmPersonality
 @property  BOOL isEncrypted
 @property  BOOL defaultEffaceable
 @property  BOOL isCaseSensitive
 @property  BOOL isJournaled
 @property  BOOL shouldShow
 @property  unsigned long minimumSize
 @property  NSString *contentMask
 @property  int sortPriority
 @property  NSString *unlocalizedName
 @property  NSString *unlocalizedEncryptedName

  // class methods
  +[SKFilesystem addFilesystemsWithType:filesystemPersonality:personalityDict:userVisibleName:caseSensitive:outFilesystems:]
  +[SKFilesystem buildSpecialFilesystems]
  +[SKFilesystem buildFilesystems]
  +[SKFilesystem _skfilesystemTypeWithPersonality:]
  +[SKFilesystem _shouldShowFilesystemWithType:key:personality:]

  // instance methods
  -[SKFilesystem setLocalizedName:]
  -[SKFilesystem minimumSize]
  -[SKFilesystem setLocalizedKey:]
  -[SKFilesystem type]
  -[SKFilesystem isEncrypted]
  -[SKFilesystem setMinimumSize:]
  -[SKFilesystem .cxx_destruct]
  -[SKFilesystem setIsEncrypted:]
  -[SKFilesystem initWithDictionaryRepresentation:]
  -[SKFilesystem supportsJournaling]
  -[SKFilesystem unlocalizedName]
  -[SKFilesystem localizedName]
  -[SKFilesystem setType:]
  -[SKFilesystem isCaseSensitive]
  -[SKFilesystem setUnlocalizedName:]
  -[SKFilesystem localizedKey]
  -[SKFilesystem isEqual:]
  -[SKFilesystem shouldShow]
  -[SKFilesystem sortPriority]
  -[SKFilesystem setSortPriority:]
  -[SKFilesystem setShouldShow:]
  -[SKFilesystem isJournaled]
  -[SKFilesystem dicationaryRepresentation]
  -[SKFilesystem majorType]
  -[SKFilesystem setMajorType:]
  -[SKFilesystem dmPersonality]
  -[SKFilesystem setDmPersonality:]
  -[SKFilesystem defaultEffaceable]
  -[SKFilesystem setDefaultEffaceable:]
  -[SKFilesystem setIsCaseSensitive:]
  -[SKFilesystem setIsJournaled:]
  -[SKFilesystem contentMask]
  -[SKFilesystem setContentMask:]
  -[SKFilesystem unlocalizedEncryptedName]
  -[SKFilesystem setUnlocalizedEncryptedName:]
  -[SKFilesystem initWithSpecialFilesystem:majorType:localizedName:]
  -[SKFilesystem initWithSKFilesystem:personality:majorType:localizedName:localizedKey:caseSensitive:encrypted:shouldShow:personalityKey:sortPriority:]
  -[SKFilesystem initEncryptedFSWithUnencryptedFS:localizedName:sortPriority:]


SKDisk : NSObject
 @property  NSNumber *diskObjectID
 @property  BOOL isVirtualDiskType
 @property  NSString *role
 @property  NSString *type
 @property  NSString *filesystemType
 @property  BOOL isValid
 @property  NSString *volumeName
 @property  NSString *volumeUUID
 @property  NSString *mediaUUID
 @property  NSString *mountPoint
 @property  unsigned long totalSpace
 @property  NSString *diskIdentifier
 @property  BOOL isDiskImage
 @property  BOOL isInternal
 @property  BOOL isWholeDisk
 @property  BOOL isPhysicalDisk
 @property  BOOL isLocked
 @property  BOOL supportsRepair
 @property  BOOL supportsVerify
 @property  BOOL isCaseSensitive
 @property  BOOL supportsJournaling
 @property  BOOL isJournaled
 @property  NSString *ioContent
 @property  unsigned long unformattedSize
 @property  unsigned long childCount
 @property  unsigned long startLocation
 @property  SKFilesystem *filesystem
 @property  BOOL isOSInternal
 @property  BOOL isPartitionDisk
 @property  SKDiskPrivateCache *privateCache
 @property  NSString *contentDiskIdentifier

  // class methods
  +[SKDisk sortWithDisks:]

  // instance methods
  -[SKDisk setIsValid:]
  -[SKDisk children]
  -[SKDisk isLocked]
  -[SKDisk updateWithDictionary:]
  -[SKDisk isInternal]
  -[SKDisk role]
  -[SKDisk setIsLocked:]
  -[SKDisk type]
  -[SKDisk setVolumeUUID:]
  -[SKDisk volumeUUID]
  -[SKDisk setChildCount:]
  -[SKDisk initWithDictionary:]
  -[SKDisk childCount]
  -[SKDisk isValid]
  -[SKDisk .cxx_destruct]
  -[SKDisk supportsJournaling]
  -[SKDisk setType:]
  -[SKDisk setRole:]
  -[SKDisk isCaseSensitive]
  -[SKDisk dictionaryRepresentation]
  -[SKDisk setIsInternal:]
  -[SKDisk redactedDescription]
  -[SKDisk isEqual:]
  -[SKDisk mountPoint]
  -[SKDisk startLocation]
  -[SKDisk setStartLocation:]
  -[SKDisk volumeName]
  -[SKDisk mediaUUID]
  -[SKDisk diskIdentifier]
  -[SKDisk supportsRepair]
  -[SKDisk setSupportsRepair:]
  -[SKDisk setMountPoint:]
  -[SKDisk unmountWithOptions:error:]
  -[SKDisk isJournaled]
  -[SKDisk setIsCaseSensitive:]
  -[SKDisk setIsJournaled:]
  -[SKDisk minimalDictionaryRepresentation]
  -[SKDisk matchesDictionary:]
  -[SKDisk supportedFilesystems]
  -[SKDisk canResize]
  -[SKDisk expireCacheWithOptions:completionBlock:]
  -[SKDisk expireCacheWithCompletionBlock:]
  -[SKDisk expireCache]
  -[SKDisk recacheWithOptions:]
  -[SKDisk contentDiskIdentifier]
  -[SKDisk canBoot]
  -[SKDisk canBeErasedToRole:]
  -[SKDisk innerDescription]
  -[SKDisk _DAVolumeUUIDForDiskIdentifier:]
  -[SKDisk _DAVolumeUUIDForDisk:]
  -[SKDisk cachedWholeDiskByIdentifier]
  -[SKDisk isVirtualDiskType]
  -[SKDisk rename:withCompletionBlock:]
  -[SKDisk unmountWithCompletionBlock:]
  -[SKDisk unmountWithOptions:completionBlock:]
  -[SKDisk mountWithCompletionBlock:]
  -[SKDisk mountWithOptions:withCompletionBlock:]
  -[SKDisk mountWithOptionsDictionary:withCompletionBlock:]
  -[SKDisk mountWithOptionsDictionary:error:]
  -[SKDisk mountWithParams:error:]
  -[SKDisk ejectWithCompletionBlock:]
  -[SKDisk ejectWithError:]
  -[SKDisk filesystemType]
  -[SKDisk setFilesystemType:]
  -[SKDisk setVolumeName:]
  -[SKDisk setMediaUUID:]
  -[SKDisk totalSpace]
  -[SKDisk setTotalSpace:]
  -[SKDisk setDiskIdentifier:]
  -[SKDisk isDiskImage]
  -[SKDisk setIsDiskImage:]
  -[SKDisk isWholeDisk]
  -[SKDisk setIsWholeDisk:]
  -[SKDisk isPhysicalDisk]
  -[SKDisk setIsPhysicalDisk:]
  -[SKDisk setSupportsJournaling:]
  -[SKDisk ioContent]
  -[SKDisk setIoContent:]
  -[SKDisk supportsVerify]
  -[SKDisk setSupportsVerify:]
  -[SKDisk unformattedSize]
  -[SKDisk setUnformattedSize:]
  -[SKDisk filesystem]
  -[SKDisk setFilesystem:]
  -[SKDisk isOSInternal]
  -[SKDisk setIsOSInternal:]
  -[SKDisk isPartitionDisk]
  -[SKDisk setIsPartitionDisk:]
  -[SKDisk diskObjectID]
  -[SKDisk setDiskObjectID:]
  -[SKDisk privateCache]
  -[SKDisk setPrivateCache:]


SKDiskImage : NSObject
 @property  NSURL *imageURL

  // instance methods
  -[SKDiskImage initWithURL:error:]
  -[SKDiskImage .cxx_destruct]
  -[SKDiskImage imageURL]
  -[SKDiskImage attachWithError:]
  -[SKDiskImage attachWithParams:error:]
  -[SKDiskImage diskImagesAttachWith:error:]
  -[SKDiskImage deduceDiskFrom:error:]
  -[SKDiskImage mount:params:outError:]


SKAPFSSnapshotDisk : SKAPFSDisk
 @property  NSString *snapshotName
 @property  long long sealStatus
 @property  NSString *apfsUUID
 @property  NSString *snapshotUUID

  // instance methods
  -[SKAPFSSnapshotDisk updateWithDictionary:]
  -[SKAPFSSnapshotDisk .cxx_destruct]
  -[SKAPFSSnapshotDisk dictionaryRepresentation]
  -[SKAPFSSnapshotDisk snapshotUUID]
  -[SKAPFSSnapshotDisk minimalDictionaryRepresentation]
  -[SKAPFSSnapshotDisk innerDescription]
  -[SKAPFSSnapshotDisk apfsUUID]
  -[SKAPFSSnapshotDisk setApfsUUID:]
  -[SKAPFSSnapshotDisk snapshotName]
  -[SKAPFSSnapshotDisk setSnapshotName:]
  -[SKAPFSSnapshotDisk sealStatus]
  -[SKAPFSSnapshotDisk setSealStatus:]


SKDiskImageAttachParams : NSObject
 @property  BOOL is4KBlockSize
 @property  long long policy
 @property  SKMountParams *mountParams
 @property  BOOL readOnly
 @property  BOOL stdinPassPhrase

  // instance methods
  -[SKDiskImageAttachParams setReadOnly:]
  -[SKDiskImageAttachParams .cxx_destruct]
  -[SKDiskImageAttachParams readOnly]
  -[SKDiskImageAttachParams observeValueForKeyPath:ofObject:change:context:]
  -[SKDiskImageAttachParams setPolicy:]
  -[SKDiskImageAttachParams initWithParams:]
  -[SKDiskImageAttachParams policy]
  -[SKDiskImageAttachParams init]
  -[SKDiskImageAttachParams setMountParams:]
  -[SKDiskImageAttachParams diAttachParamsWithURL:error:]
  -[SKDiskImageAttachParams mountParams]
  -[SKDiskImageAttachParams stdinPassPhrase]
  -[SKDiskImageAttachParams setStdinPassPhrase:]
  -[SKDiskImageAttachParams is4KBlockSize]
  -[SKDiskImageAttachParams setIs4KBlockSize:]


SKAPFSDisk : SKDisk <SKEncryptedDiskProtocol>
 @property  unsigned long reserveSpace
 @property  unsigned long quotaSpace
 @property  unsigned long usedSpace
 @property  BOOL isEncrypted
 @property  BOOL defaultEffaceable
 @property  NSString *apfsRole
 @property  NSString *apfsVolumeGroupUUID
 @property  NSString *apfsUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKAPFSDisk updateWithDictionary:]
  -[SKAPFSDisk isEncrypted]
  -[SKAPFSDisk .cxx_destruct]
  -[SKAPFSDisk setIsEncrypted:]
  -[SKAPFSDisk container]
  -[SKAPFSDisk dictionaryRepresentation]
  -[SKAPFSDisk defaultEffaceable]
  -[SKAPFSDisk setDefaultEffaceable:]
  -[SKAPFSDisk innerDescription]
  -[SKAPFSDisk apfsUUID]
  -[SKAPFSDisk getAPFSVolumeRole]
  -[SKAPFSDisk usedSpace]
  -[SKAPFSDisk setUsedSpace:]
  -[SKAPFSDisk reserveSpace]
  -[SKAPFSDisk setReserveSpace:]
  -[SKAPFSDisk quotaSpace]
  -[SKAPFSDisk setQuotaSpace:]
  -[SKAPFSDisk apfsVolumeGroupUUID]
  -[SKAPFSDisk setApfsVolumeGroupUUID:]
  -[SKAPFSDisk apfsRole]
  -[SKAPFSDisk setApfsRole:]


SKWaitingForDiskElement : NSObject
 @property  NSDictionary *diskDictionary
 @property  @? block

  // instance methods
  -[SKWaitingForDiskElement .cxx_destruct]
  -[SKWaitingForDiskElement setBlock:]
  -[SKWaitingForDiskElement block]
  -[SKWaitingForDiskElement diskDictionary]
  -[SKWaitingForDiskElement setDiskDictionary:]


SKAPFSContainerDisk : SKDisk
 @property  NSString *designatedPSUUID
 @property  NSString *apfsUUID

  // instance methods
  -[SKAPFSContainerDisk updateWithDictionary:]
  -[SKAPFSContainerDisk .cxx_destruct]
  -[SKAPFSContainerDisk volumes]
  -[SKAPFSContainerDisk dictionaryRepresentation]
  -[SKAPFSContainerDisk physicalStores]
  -[SKAPFSContainerDisk minimalDictionaryRepresentation]
  -[SKAPFSContainerDisk innerDescription]
  -[SKAPFSContainerDisk isVirtualDiskType]
  -[SKAPFSContainerDisk apfsUUID]
  -[SKAPFSContainerDisk copyVolumesWithIncludeSnapshots:]
  -[SKAPFSContainerDisk volumesExcludingSnapshots]
  -[SKAPFSContainerDisk designatedPhysicalStore]
  -[SKAPFSContainerDisk designatedPSUUID]
  -[SKAPFSContainerDisk setDesignatedPSUUID:]


SKMediaKit : NSObject
  // class methods
  +[SKMediaKit getMediaKitFilesystemType:]


SKAPFSStoreDisk : SKDisk
 @property  NSString *apfsContainerUUID
 @property  NSString *apfsContainerIdentifier
 @property  NSString *apfsUUID

  // instance methods
  -[SKAPFSStoreDisk updateWithDictionary:]
  -[SKAPFSStoreDisk .cxx_destruct]
  -[SKAPFSStoreDisk container]
  -[SKAPFSStoreDisk isEqual:]
  -[SKAPFSStoreDisk minimalDictionaryRepresentation]
  -[SKAPFSStoreDisk canResize]
  -[SKAPFSStoreDisk innerDescription]
  -[SKAPFSStoreDisk apfsUUID]
  -[SKAPFSStoreDisk isOurContainerWithDisk:]
  -[SKAPFSStoreDisk apfsContainerUUID]
  -[SKAPFSStoreDisk setApfsContainerUUID:]
  -[SKAPFSStoreDisk apfsContainerIdentifier]
  -[SKAPFSStoreDisk setApfsContainerIdentifier:]


SKError : NSObject
  // class methods
  +[SKError errorWithCode:underlyingError:]
  +[SKError errorWithCode:userInfo:]
  +[SKError frameworkBundle]
  +[SKError localizedDescriptionForCode:]
  +[SKError errorWithCode:disks:userInfo:]


SKHelperClient : NSObject <SKHelperClientProtocol, SKDaemonProtocol>
 @property  NSMutableDictionary *recacheAbuseLimiterInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKHelperClient sharedClient]

  // instance methods
  -[SKHelperClient _xpcConnection]
  -[SKHelperClient .cxx_destruct]
  -[SKHelperClient init]
  -[SKHelperClient initialPopulateComplete]
  -[SKHelperClient disksAppeared:]
  -[SKHelperClient disksDisappeared:]
  -[SKHelperClient disksChanged:]
  -[SKHelperClient managerStalled]
  -[SKHelperClient managerResumed]
  -[SKHelperClient updateUUID:progress:message:]
  -[SKHelperClient requestWithUUID:didCompleteWithResult:]
  -[SKHelperClient syncAllDisksWithCompletionBlock:]
  -[SKHelperClient setDaemonLanguage:withCompletionBlock:]
  -[SKHelperClient recacheDisk:options:callbackBlock:]
  -[SKHelperClient diskForPath:withCallbackBlock:]
  -[SKHelperClient isBusy:]
  -[SKHelperClient wholeDiskForDisk:withCallbackBlock:]
  -[SKHelperClient childDisksForWholeDisk:withCallbackBlock:]
  -[SKHelperClient filesystemsWithCallbackBlock:]
  -[SKHelperClient physicalStoresForAPFSVolume:completionBlock:]
  -[SKHelperClient volumesForAPFSPS:completionBlock:]
  -[SKHelperClient renameDisk:to:withCompletionBlock:]
  -[SKHelperClient unmountDisk:withCompletionBlock:]
  -[SKHelperClient unmountDisk:options:withCompletionBlock:]
  -[SKHelperClient mountDisk:options:withCompletionBlock:]
  -[SKHelperClient ejectDisk:withCompletionBlock:]
  -[SKHelperClient diskNotificationQueue]
  -[SKHelperClient remoteObjectWithUUID:errorHandler:]
  -[SKHelperClient synchronousRemoteObjecUUID:tWithErrorHandler:]
  -[SKHelperClient _markConnectionInvalidAndCallAllCallbacks]
  -[SKHelperClient _setProgressHandler:forUUID:]
  -[SKHelperClient _scheduleCompletionUUID:forFunction:withBlock:]
  -[SKHelperClient _parameters:valueAtIndex:]
  -[SKHelperClient _isRecachingDiskAbuse:]
  -[SKHelperClient recacheAbuseLimiterInfo]
  -[SKHelperClient setRecacheAbuseLimiterInfo:]


01 00 0200 /System/Library/PrivateFrameworks/DiskImages2.framework/DiskImages2: DIAttachParams 
01 00 0200 /System/Library/PrivateFrameworks/DiskImages2.framework/DiskImages2: DiskImages2 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
