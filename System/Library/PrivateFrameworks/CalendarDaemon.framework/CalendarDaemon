|| __DATA.__objc_data _OBJC_CLASS_$_CADIdleChangeTrackingCleanupInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CADSyntheticRouteHypothesizerCache
|| __DATA.__objc_data _OBJC_CLASS_$_EKAlarmOccurrence
|| __DATA.__objc_data _OBJC_METACLASS_$_CADIdleChangeTrackingCleanupInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CADSyntheticRouteHypothesizerCache
|| __DATA.__objc_data _OBJC_METACLASS_$_EKAlarmOccurrence
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKPredicate._timeZone
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKPredicate._uuid
|| __DATA_CONST.__const _CADDatabaseStorageUsageAttachmentsKey
|| __DATA_CONST.__const _CADDatabaseStorageUsageEventsKey
|| __DATA_CONST.__const _CADTTLLocationAuthorizationStatusChangedNotification
|| __DATA_CONST.__const __CADDaemonStartedNotification
|| __DATA_DIRTY.__common _CADLogHandle
|| __DATA_DIRTY.__common _CADMCLogHandle
|| __DATA_DIRTY.__common _CADNotificationLogHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADBlacklistedDelegateAccountAccessHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADCalendarItemsWithExternalIdentifierPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADChangeTrackingClientId
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADCompoundFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADContactEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADDatabaseInitializationOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADDefaultPermissionValidator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADEntityWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADEventCreatedFromSuggestionPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADEventEntityWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADEventPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADEventTimeWindowPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADEventsForAssistantSearchPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADGroupedAccountAccessHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADMCAccountAccessHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADMutableCalStoreInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADNaturalLanguageSuggestedEventsSearchPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADNotifiableEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADNotificationCenterVisibleEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADPropertyFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADPropertySearchPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADRespondedEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADRouteHypothesis
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADTravelEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADUnacknowledgedEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADUnalertedEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADUpNextEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADUpcomingEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADXPCProxyHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKMasterEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKReminderPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKScheduledReminderPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADBlacklistedDelegateAccountAccessHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADCalendarItemsWithExternalIdentifierPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADChangeTrackingClientId
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADCompoundFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADContactEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADDatabaseInitializationOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADDefaultPermissionValidator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADEntityWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADEventCreatedFromSuggestionPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADEventEntityWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADEventPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADEventTimeWindowPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADEventsForAssistantSearchPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADGroupedAccountAccessHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADMCAccountAccessHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADMutableCalStoreInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADNaturalLanguageSuggestedEventsSearchPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADNotifiableEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADNotificationCenterVisibleEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADPropertyFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADPropertySearchPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADRespondedEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADRouteHypothesis
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADTravelEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADUnacknowledgedEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADUnalertedEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADUpNextEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADUpcomingEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADXPCProxyHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKMasterEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKReminderPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKScheduledReminderPredicate
|| __TEXT.__const _CADExitStatusCode_Normal
|| __TEXT.__const _CADExitStatusCode_UnexpectedCompletionOfMainFunction
|| __TEXT.__text _CADAccountActionDescription
|| __TEXT.__text _CADAccountManagementFromSource
|| __TEXT.__text _CADAccountManagementFromTarget
|| __TEXT.__text _CADCopyEntity
|| __TEXT.__text _CADDeleteEntity
|| __TEXT.__text _CADEKPersistentEventDefaultPropertiesToLoad
|| __TEXT.__text _CADEKPersistentEventMinimumDefaultPropertiesToLoad
|| __TEXT.__text _CADEntityCopyObjectID
|| __TEXT.__text _CADEntityCopyObjectIDUnlocked
|| __TEXT.__text _CADEntityExistsAndIsAccessible
|| __TEXT.__text _CADEntityIsInManagedStore
|| __TEXT.__text _CADEntityIsInRestrictedStore
|| __TEXT.__text _CADLogInitIfNeeded
|| __TEXT.__text _CADRegisterStatsCollectionCallback
|| __TEXT.__text _CADSourceFromAccountManagement
|| __TEXT.__text _CADStatsCollectSignificantEvents
|| __TEXT.__text _CADTargetFromAccountManagement
|| __TEXT.__text _CalEntityCopyProperty
|| __TEXT.__text _CalEntityCopyPropertyValues
|| __TEXT.__text _CalEntitySetProperty
|| __TEXT.__text _GetSharedXPCInterfaceForCADClientInterface
|| __TEXT.__text _GetSharedXPCInterfaceForCADInterface
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppSupport: _CPRecordCopyProperty
__ AppSupport: _CPRecordGetID
__ AppSupport: _CPRecordGetProperty
__ AppSupport: _CPRecordGetPropertyDescriptor
__ AppSupport: _CPRecordGetTypeID
__ AppSupport: _CPRecordSetProperty
__ CalendarDatabase: _CalAlarmCopyExternalID
__ CalendarDatabase: _CalAlarmCopyOwningEntity
__ CalendarDatabase: _CalAlarmGetAcknowledgedDate
__ CalendarDatabase: _CalAlarmGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalAlarmGetProximity
__ CalendarDatabase: _CalAlarmGetUID
__ CalendarDatabase: _CalAlarmIsDefaultAlarm
__ CalendarDatabase: _CalAlarmOccurrenceGetAlarm
__ CalendarDatabase: _CalAlarmOccurrenceGetEventOccurrence
__ CalendarDatabase: _CalAlarmOccurrenceGetFireDate
__ CalendarDatabase: _CalAlertInviteeDeclines
__ CalendarDatabase: _CalAttachmentCopyAttachmentContainerForStore
__ CalendarDatabase: _CalAttachmentCopyLocalURL
__ CalendarDatabase: _CalAttachmentCopyOwner
__ CalendarDatabase: _CalAttachmentGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalAttendeeCopyDisplayName
__ CalendarDatabase: _CalAttendeeCopyEmailAddress
__ CalendarDatabase: _CalAttendeeCopyFirstName
__ CalendarDatabase: _CalAttendeeCopyLastName
__ CalendarDatabase: _CalAttendeeCopyOwningEvent
__ CalendarDatabase: _CalAttendeeCopyResponseComment
__ CalendarDatabase: _CalAttendeeGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalAttendeeGetProposedStartDate
__ CalendarDatabase: _CalAttendeeGetProposedStartDateStatus
__ CalendarDatabase: _CalAttendeeGetStatus
__ CalendarDatabase: _CalAttendeeGetUseDeletedByOrganizerStatusInStore
__ CalendarDatabase: _CalAttendeeIsStatusKnownForInvitedEventsInStore
__ CalendarDatabase: _CalAttendeeIsStatusKnownForOrganizedEventsInStore
__ CalendarDatabase: _CalAttendeeRequireSearchInSingleAccountInStore
__ CalendarDatabase: _CalCalendarAddEvent
__ CalendarDatabase: _CalCalendarCanContainEntityType
__ CalendarDatabase: _CalCalendarCanContainEntityTypeAndStoreAllowsIt
__ CalendarDatabase: _CalCalendarCopyEvents
__ CalendarDatabase: _CalCalendarCopySharees
__ CalendarDatabase: _CalCalendarCopyStore
__ CalendarDatabase: _CalCalendarCopyURI
__ CalendarDatabase: _CalCalendarCopyUUID
__ CalendarDatabase: _CalCalendarGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalCalendarGetSharingStatus
__ CalendarDatabase: _CalCalendarGetUID
__ CalendarDatabase: _CalCalendarHasEvents
__ CalendarDatabase: _CalCalendarHasTasks
__ CalendarDatabase: _CalCalendarInsertBirthdayCalendar
__ CalendarDatabase: _CalCalendarIsFoundInMailCalendar
__ CalendarDatabase: _CalCalendarIsIgnoringEventAlerts
__ CalendarDatabase: _CalCalendarIsIgnoringSharedCalendarNotifications
__ CalendarDatabase: _CalCalendarIsNotificationsCollection
__ CalendarDatabase: _CalCalendarItemAddContact
__ CalendarDatabase: _CalCalendarItemCopyAction
__ CalendarDatabase: _CalCalendarItemCopyAlarms
__ CalendarDatabase: _CalCalendarItemCopyAppLink
__ CalendarDatabase: _CalCalendarItemCopyCalendar
__ CalendarDatabase: _CalCalendarItemCopyContacts
__ CalendarDatabase: _CalCalendarItemCopyDescription
__ CalendarDatabase: _CalCalendarItemCopyOrganizer
__ CalendarDatabase: _CalCalendarItemCopyPreferredLocation
__ CalendarDatabase: _CalCalendarItemCopyRecurrences
__ CalendarDatabase: _CalCalendarItemCopySummary
__ CalendarDatabase: _CalCalendarItemGetAvailabilitySupportedByStore
__ CalendarDatabase: _CalCalendarItemGetEntityType
__ CalendarDatabase: _CalCalendarItemGetPriority
__ CalendarDatabase: _CalCalendarItemGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalCalendarItemGetRowID
__ CalendarDatabase: _CalCalendarItemGetStatus
__ CalendarDatabase: _CalCalendarItemHasAttendees
__ CalendarDatabase: _CalCalendarItemHasClientLocation
__ CalendarDatabase: _CalCalendarItemHasRecurrenceRules
__ CalendarDatabase: _CalCalendarItemIsAllDay
__ CalendarDatabase: _CalCalendarItemIsFloating
__ CalendarDatabase: _CalCalendarItemRemoveContact
__ CalendarDatabase: _CalCalendarSetAlerted
__ CalendarDatabase: _CalCalendarSetInvitationStatus
__ CalendarDatabase: _CalCategoryGetEntityType
__ CalendarDatabase: _CalCategoryLinkCopyCalendarItem
__ CalendarDatabase: _CalCategoryRemove
__ CalendarDatabase: _CalContactCopyContactIdentifier
__ CalendarDatabase: _CalContactCopyObjectIDsOfContactsWithIdentifier
__ CalendarDatabase: _CalContactCopyOwner
__ CalendarDatabase: _CalContactCountOfContactsWithIdentifier
__ CalendarDatabase: _CalContactGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalContactSetContactIdentifier
__ CalendarDatabase: _CalCreateiCalendarDataFromCalEntitiesWithOptions
__ CalendarDatabase: _CalCreateiCalendarDataFromCalendarWithOptions
__ CalendarDatabase: _CalDatabaseCleanUpOrphanedLocalAttachments
__ CalendarDatabase: _CalDatabaseCleanupDanglers
__ CalendarDatabase: _CalDatabaseCleanupNaturalLanguageCalendar
__ CalendarDatabase: _CalDatabaseClearChangedObjectIDsUpToSequenceNumberForClient
__ CalendarDatabase: _CalDatabaseClearIndividualChangeRowIDsForClient
__ CalendarDatabase: _CalDatabaseCopyAlarmOccurrencesInDateRange
__ CalendarDatabase: _CalDatabaseCopyAlarmWithUID
__ CalendarDatabase: _CalDatabaseCopyAlarmWithUUID
__ CalendarDatabase: _CalDatabaseCopyAllEntitiesWithPropertyInCalendarOrStore
__ CalendarDatabase: _CalDatabaseCopyAllEventsWithUniqueIdentifierInStore
__ CalendarDatabase: _CalDatabaseCopyAllNaturalLanguageSuggestedEventsMatchingSummary
__ CalendarDatabase: _CalDatabaseCopyAttachmentWithUID
__ CalendarDatabase: _CalDatabaseCopyAttendeeWithUID
__ CalendarDatabase: _CalDatabaseCopyBirthdayCalendar
__ CalendarDatabase: _CalDatabaseCopyCalendarItemUUIDs
__ CalendarDatabase: _CalDatabaseCopyCalendarItemWithRowID
__ CalendarDatabase: _CalDatabaseCopyCalendarItemWithUUID
__ CalendarDatabase: _CalDatabaseCopyCalendarItemsWithCalendarFilter
__ CalendarDatabase: _CalDatabaseCopyCalendarItemsWithUniqueIdentifier
__ CalendarDatabase: _CalDatabaseCopyCalendarWithExternalIDInStore
__ CalendarDatabase: _CalDatabaseCopyCalendarWithUID
__ CalendarDatabase: _CalDatabaseCopyCategoryWithUID
__ CalendarDatabase: _CalDatabaseCopyChangedEntityIdsSinceTimestamp
__ CalendarDatabase: _CalDatabaseCopyChangesSinceSequenceNumber
__ CalendarDatabase: _CalDatabaseCopyContactWithUID
__ CalendarDatabase: _CalDatabaseCopyCountOfTasks
__ CalendarDatabase: _CalDatabaseCopyDefaultCalendarForNewTasks
__ CalendarDatabase: _CalDatabaseCopyDefaultLocalCalendar
__ CalendarDatabase: _CalDatabaseCopyDefaultOrAnyReadWriteCalendarForNewEvents
__ CalendarDatabase: _CalDatabaseCopyDirectoryPath
__ CalendarDatabase: _CalDatabaseCopyEntitiesWhere
__ CalendarDatabase: _CalDatabaseCopyEventActionWithUID
__ CalendarDatabase: _CalDatabaseCopyEventIDsOfEventsMatching
__ CalendarDatabase: _CalDatabaseCopyEventOccurrenceCache
__ CalendarDatabase: _CalDatabaseCopyEventOccurrenceNearestToDate
__ CalendarDatabase: _CalDatabaseCopyEventOccurrenceNearestToDatePreferringForwardSearch
__ CalendarDatabase: _CalDatabaseCopyEventOccurrencesInDateRangeEx
__ CalendarDatabase: _CalDatabaseCopyEventOccurrencesInDateRangeWithEventFilter
__ CalendarDatabase: _CalDatabaseCopyEventWithPublicID
__ CalendarDatabase: _CalDatabaseCopyEventWithUniqueIdentifierInStore
__ CalendarDatabase: _CalDatabaseCopyExceptionDateWithUID
__ CalendarDatabase: _CalDatabaseCopyFirstNaturalLanguageSuggestedEventMatchingSummary
__ CalendarDatabase: _CalDatabaseCopyInviteReplyNotificationWithUID
__ CalendarDatabase: _CalDatabaseCopyLocalStore
__ CalendarDatabase: _CalDatabaseCopyLocationBasedAlarmsForIncompleteTasks
__ CalendarDatabase: _CalDatabaseCopyLocationWithUID
__ CalendarDatabase: _CalDatabaseCopyNaturalLanguageSuggestionsCalendar
__ CalendarDatabase: _CalDatabaseCopyNextAssignableColor
__ CalendarDatabase: _CalDatabaseCopyNotificationWithUID
__ CalendarDatabase: _CalDatabaseCopyOfAllCalendarsInStore
__ CalendarDatabase: _CalDatabaseCopyOfAllCalendarsInStoreWithOptions
__ CalendarDatabase: _CalDatabaseCopyOfAllEventsCreatedFromSuggestionsInStore
__ CalendarDatabase: _CalDatabaseCopyOfAllEventsCreatedFromSuggestionsWithExtractionGroupIdentifierInStore
__ CalendarDatabase: _CalDatabaseCopyOfAllNotifiableEventsInStore
__ CalendarDatabase: _CalDatabaseCopyOfAllNotifications
__ CalendarDatabase: _CalDatabaseCopyOfAllRepliedEventsInStore
__ CalendarDatabase: _CalDatabaseCopyOfAllStores
__ CalendarDatabase: _CalDatabaseCopyOfAllUnacknowledgedEventsInStore
__ CalendarDatabase: _CalDatabaseCopyOfAllUnalertedEventsInStore
__ CalendarDatabase: _CalDatabaseCopyOrCreateDefaultCalendarForNewEvents
__ CalendarDatabase: _CalDatabaseCopyOrganizerWithUID
__ CalendarDatabase: _CalDatabaseCopyRecurrenceWithUID
__ CalendarDatabase: _CalDatabaseCopyResourceChangeNotificationWithUID
__ CalendarDatabase: _CalDatabaseCopyResourceChangeWithUID
__ CalendarDatabase: _CalDatabaseCopyScheduledTaskCache
__ CalendarDatabase: _CalDatabaseCopyShareeWithUID
__ CalendarDatabase: _CalDatabaseCopyStoreWithUID
__ CalendarDatabase: _CalDatabaseCopyStoresWithExternalID
__ CalendarDatabase: _CalDatabaseCopySuggestedEventInfoWithUID
__ CalendarDatabase: _CalDatabaseCopySuggestionNotificationWithUID
__ CalendarDatabase: _CalDatabaseCopySuggestionsCalendar
__ CalendarDatabase: _CalDatabaseCopyTasks
__ CalendarDatabase: _CalDatabaseCopyUniqueIdentifier
__ CalendarDatabase: _CalDatabaseCopyVehicleTriggerAlarmsForIncompleteTasks
__ CalendarDatabase: _CalDatabaseCreateAlarm
__ CalendarDatabase: _CalDatabaseCreateAttachment
__ CalendarDatabase: _CalDatabaseCreateAttendee
__ CalendarDatabase: _CalDatabaseCreateCalendar
__ CalendarDatabase: _CalDatabaseCreateCategory
__ CalendarDatabase: _CalDatabaseCreateContact
__ CalendarDatabase: _CalDatabaseCreateEvent
__ CalendarDatabase: _CalDatabaseCreateEventAction
__ CalendarDatabase: _CalDatabaseCreateExceptionDate
__ CalendarDatabase: _CalDatabaseCreateInviteReplyNotification
__ CalendarDatabase: _CalDatabaseCreateLocation
__ CalendarDatabase: _CalDatabaseCreateNotification
__ CalendarDatabase: _CalDatabaseCreateOrganizer
__ CalendarDatabase: _CalDatabaseCreateRecurrence
__ CalendarDatabase: _CalDatabaseCreateResourceChangeNotification
__ CalendarDatabase: _CalDatabaseCreateResourceChangeOfType
__ CalendarDatabase: _CalDatabaseCreateSharee
__ CalendarDatabase: _CalDatabaseCreateStore
__ CalendarDatabase: _CalDatabaseCreateSuggestedEventInfo
__ CalendarDatabase: _CalDatabaseCreateSuggestionNotification
__ CalendarDatabase: _CalDatabaseCreateTask
__ CalendarDatabase: _CalDatabaseCreateWithOptions
__ CalendarDatabase: _CalDatabaseCreateWithOptionsAndDatabaseDirectory
__ CalendarDatabase: _CalDatabaseGetChangedEKObjectsForClient
__ CalendarDatabase: _CalDatabaseGetChangedObjectIDsSinceSequenceNumberForClient
__ CalendarDatabase: _CalDatabaseGetCountOfCalendarItemsInStore
__ CalendarDatabase: _CalDatabaseGetCountOfNotifiableEventsInStore
__ CalendarDatabase: _CalDatabaseGetCountOfUnacknowledgedEventsInStore
__ CalendarDatabase: _CalDatabaseGetSequenceNumber
__ CalendarDatabase: _CalDatabaseInsertNaturalLanguageSuggestionsCalendar
__ CalendarDatabase: _CalDatabaseInsertSuggestionsCalendar
__ CalendarDatabase: _CalDatabasePerformMigrationIfNeeded
__ CalendarDatabase: _CalDatabasePurgeIdlePersistentChangeTrackingClients
__ CalendarDatabase: _CalDatabaseRebuildOccurrenceCache
__ CalendarDatabase: _CalDatabaseRegisterClientForPersistentChangeTracking
__ CalendarDatabase: _CalDatabaseRegisterClientForPersistentChangeTrackingInStore
__ CalendarDatabase: _CalDatabaseRemoveNaturalLanguageSuggestionsCalendar
__ CalendarDatabase: _CalDatabaseRemoveSuggestionsCalendar
__ CalendarDatabase: _CalDatabaseReset
__ CalendarDatabase: _CalDatabaseRevert
__ CalendarDatabase: _CalDatabaseSave
__ CalendarDatabase: _CalDatabaseSaveWithCounts
__ CalendarDatabase: _CalDatabaseSetClientIdentifier
__ CalendarDatabase: _CalDatabaseSetClientName
__ CalendarDatabase: _CalDatabaseSetDefaultCalendarForNewEventsInStore
__ CalendarDatabase: _CalDatabaseSetDefaultCalendarForNewTasks
__ CalendarDatabase: _CalDatabaseSetIsUnitTesting
__ CalendarDatabase: _CalDatabaseSetPropertyModificationLoggingEnabled
__ CalendarDatabase: _CalDatabaseSetStatementCacheLimit
__ CalendarDatabase: _CalEntityCopyRecordID
__ CalendarDatabase: _CalEntityGetDebugDescription
__ CalendarDatabase: _CalEntityGetID
__ CalendarDatabase: _CalEntityGetType
__ CalendarDatabase: _CalEntityIsDeleted
__ CalendarDatabase: _CalEntityIsOfType
__ CalendarDatabase: _CalEntityTypeGetName
__ CalendarDatabase: _CalEventActionCopyOwningEvent
__ CalendarDatabase: _CalEventActionGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalEventActionRemove
__ CalendarDatabase: _CalEventCancelDeletedEventsInStore
__ CalendarDatabase: _CalEventCopyAlarms
__ CalendarDatabase: _CalEventCopyAttendees
__ CalendarDatabase: _CalEventCopyCalendar
__ CalendarDatabase: _CalEventCopyDescription
__ CalendarDatabase: _CalEventCopyLocation_Deprecated
__ CalendarDatabase: _CalEventCopyOrganizer
__ CalendarDatabase: _CalEventCopyStartTimeZone
__ CalendarDatabase: _CalEventCopyStore
__ CalendarDatabase: _CalEventCopySummary
__ CalendarDatabase: _CalEventCopyURI
__ CalendarDatabase: _CalEventCopyURL
__ CalendarDatabase: _CalEventCopyUniqueIdentifier
__ CalendarDatabase: _CalEventDeclineDeletedInvitationsInStore
__ CalendarDatabase: _CalEventDurationConstrainedToRecurrenceIntervalInStore
__ CalendarDatabase: _CalEventGetDeliverySourceOrExternalIDRequiredForResponseInStore
__ CalendarDatabase: _CalEventGetDuration
__ CalendarDatabase: _CalEventGetEndDate
__ CalendarDatabase: _CalEventGetFutureStartDateLimitedToOccurrenceCacheBoundsInStore
__ CalendarDatabase: _CalEventGetInvitationChangedProperties
__ CalendarDatabase: _CalEventGetJunkStatus
__ CalendarDatabase: _CalEventGetOccurrencesMustOccurOnSeparateDaysInStore
__ CalendarDatabase: _CalEventGetParticipationStatus
__ CalendarDatabase: _CalEventGetParticipationStatusModifiedDate
__ CalendarDatabase: _CalEventGetProposedStatusRequiredForResponseInStore
__ CalendarDatabase: _CalEventGetRejectedStatusChangeRequiresNoExternalStatusInStore
__ CalendarDatabase: _CalEventGetStartDate
__ CalendarDatabase: _CalEventGetStatus
__ CalendarDatabase: _CalEventGetStatusIsAccurateInStore
__ CalendarDatabase: _CalEventGetTravelAdvisoryBehavior
__ CalendarDatabase: _CalEventGetUID
__ CalendarDatabase: _CalEventHasPredictedLocation
__ CalendarDatabase: _CalEventIsAllDay
__ CalendarDatabase: _CalEventIsCandidateForTravelAdvisories
__ CalendarDatabase: _CalEventIsDetached
__ CalendarDatabase: _CalEventIsImmediatelyEligibleForTravelAdvisories
__ CalendarDatabase: _CalEventIsProposed
__ CalendarDatabase: _CalEventOccurrenceCacheCopyAllDaysAndOccurrenceCounts
__ CalendarDatabase: _CalEventOccurrenceCacheCopyBoundsForTimeZone
__ CalendarDatabase: _CalEventOccurrenceCacheCopyEventOccurrencesAfterDate
__ CalendarDatabase: _CalEventOccurrenceCacheCopyEventOccurrencesInDateRange
__ CalendarDatabase: _CalEventOccurrenceCacheCopyEventOccurrencesWithIDsAfterDate
__ CalendarDatabase: _CalEventOccurrenceCacheCopyOccurrencesOnDay
__ CalendarDatabase: _CalEventOccurrenceCacheCopyTimeZone
__ CalendarDatabase: _CalEventOccurrenceCacheDoEventsHaveOccurrencesAfterDate
__ CalendarDatabase: _CalEventOccurrenceCacheIsProcessing
__ CalendarDatabase: _CalEventOccurrenceCacheTrimAndExtend
__ CalendarDatabase: _CalEventOccurrenceCacheUpdateIfNeededForTimeZoneChange
__ CalendarDatabase: _CalEventOccurrenceCreateForInitialOccurrence
__ CalendarDatabase: _CalEventOccurrenceGetDate
__ CalendarDatabase: _CalEventOccurrenceGetEvent
__ CalendarDatabase: _CalEventOccurrenceGetTypeID
__ CalendarDatabase: _CalEventOccurrencesExistForEventInDateRange
__ CalendarDatabase: _CalEventPreferredLocationIsAConferenceRoom
__ CalendarDatabase: _CalEventRequiresOutgoingInvitationsInDefaultCalendarInStore
__ CalendarDatabase: _CalEventResponseCommentsSupportedInStore
__ CalendarDatabase: _CalEventSetAlerted
__ CalendarDatabase: _CalEventSetInvitationChangedProperties
__ CalendarDatabase: _CalEventSetInvitationStatus
__ CalendarDatabase: _CalEventSetNeedsNotification
__ CalendarDatabase: _CalEventURLFieldSupportedInStore
__ CalendarDatabase: _CalExceptionDateCopyOwner
__ CalendarDatabase: _CalExceptionDateGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalFilterCreateWithDatabaseFilteringCalendars
__ CalendarDatabase: _CalFilterCreateWithDatabaseFilteringCalendarsWithUIDs
__ CalendarDatabase: _CalFilterCreateWithDatabaseShowingAll
__ CalendarDatabase: _CalFilterCreateWithDatabaseShowingCalendars
__ CalendarDatabase: _CalFilterCreateWithDatabaseShowingCalendarsWithUIDs
__ CalendarDatabase: _CalFilterCreateWithDatabaseShowingCalendarsWithUIDsAndEntityType
__ CalendarDatabase: _CalFilterGetSearchTerm
__ CalendarDatabase: _CalFilterSetSearchTerm
__ CalendarDatabase: _CalGetRecordLock
__ CalendarDatabase: _CalHasCurrentUserInvitedAttendeeWithEmail
__ CalendarDatabase: _CalHasCurrentUserInvitedAttendeeWithPhoneNumber
__ CalendarDatabase: _CalHasCurrentUserRepondedPositivelyToInvitationsWithAttendeeWithEmail
__ CalendarDatabase: _CalHasCurrentUserRepondedPositivelyToInvitationsWithAttendeeWithPhoneNumber
__ CalendarDatabase: _CalHasCurrentUserRespondedPositivelyToInvitationsFromOrganizerWithEmail
__ CalendarDatabase: _CalHasCurrentUserRespondedPositivelyToInvitationsFromOrganizerWithPhoneNumber
__ CalendarDatabase: _CalIdentityGarbageCollectOrphans
__ CalendarDatabase: _CalInviteReplyNotificationCopyHostURL
__ CalendarDatabase: _CalInviteReplyNotificationCopyInviteReplyCalendar
__ CalendarDatabase: _CalInviteReplyNotificationCopyOwner
__ CalendarDatabase: _CalInviteReplyNotificationSetAlerted
__ CalendarDatabase: _CalItemsUpdateFromiCalendarDataWithOptionsIncludingPhantomMaster
__ CalendarDatabase: _CalLocationCopyOwner
__ CalendarDatabase: _CalLocationGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalLocationHasKnownSpatialData
__ CalendarDatabase: _CalNotificationCopyOwner
__ CalendarDatabase: _CalNotificationGetCreationDate
__ CalendarDatabase: _CalNotificationGetEntityType
__ CalendarDatabase: _CalNotificationGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalNotificationGetUID
__ CalendarDatabase: _CalOrganizerCopyOwner
__ CalendarDatabase: _CalOrganizerGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalOrganizerIsSelf
__ CalendarDatabase: _CalParticipantCopyOwner
__ CalendarDatabase: _CalParticipantGetProposedStartDateChanged
__ CalendarDatabase: _CalParticipantGetStatusChanged
__ CalendarDatabase: _CalParticipantSetProposedStartDateChanged
__ CalendarDatabase: _CalRecordIDCreate
__ CalendarDatabase: _CalRecordIDGetEntityType
__ CalendarDatabase: _CalRecordIDGetRowID
__ CalendarDatabase: _CalRecurrenceCopyOwner
__ CalendarDatabase: _CalRecurrenceGetEffectiveEndDate
__ CalendarDatabase: _CalRecurrenceGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalRelationGetRelatedObject
__ CalendarDatabase: _CalRelationGetTypeID
__ CalendarDatabase: _CalRelationSetRelatedObject
__ CalendarDatabase: _CalRemoveAlarm
__ CalendarDatabase: _CalRemoveAttachment
__ CalendarDatabase: _CalRemoveAttendee
__ CalendarDatabase: _CalRemoveCalendar
__ CalendarDatabase: _CalRemoveClientForPersistentChangeTracking
__ CalendarDatabase: _CalRemoveContact
__ CalendarDatabase: _CalRemoveEvent
__ CalendarDatabase: _CalRemoveExceptionDate
__ CalendarDatabase: _CalRemoveLocation
__ CalendarDatabase: _CalRemoveNotification
__ CalendarDatabase: _CalRemoveOrganizer
__ CalendarDatabase: _CalRemoveRecurrence
__ CalendarDatabase: _CalRemoveResourceChange
__ CalendarDatabase: _CalRemoveSharee
__ CalendarDatabase: _CalRemoveStore
__ CalendarDatabase: _CalRemoveSuggestedEventInfo
__ CalendarDatabase: _CalRemoveTask
__ CalendarDatabase: _CalResourceChangeCopyCalendar
__ CalendarDatabase: _CalResourceChangeCopyCalendarItem
__ CalendarDatabase: _CalResourceChangeCopyNotification
__ CalendarDatabase: _CalResourceChangeGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalResourceChangeGetPublicStatus
__ CalendarDatabase: _CalResourceChangeGetType
__ CalendarDatabase: _CalResourceChangeGetUID
__ CalendarDatabase: _CalResourceChangeNotificationCopyChanges
__ CalendarDatabase: _CalResourceChangeNotificationCopyOwner
__ CalendarDatabase: _CalResourceChangeSetAlerted
__ CalendarDatabase: _CalSchedueldTaskCacheGetLastSavedDate
__ CalendarDatabase: _CalScheduledTaskCacheCopyAllDaysAndTaskCounts
__ CalendarDatabase: _CalScheduledTaskCacheCopyTaskRowIDsOnDay
__ CalendarDatabase: _CalScheduledTaskCacheTrimAndExtendAndUpdateOverdue
__ CalendarDatabase: _CalScheduledTaskCacheUpdateIfNeededForTimeZoneChange
__ CalendarDatabase: _CalSetShowDeclinedEvents
__ CalendarDatabase: _CalShareeCopyOwner
__ CalendarDatabase: _CalShareeGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalStoreAllowsCalendarAddDeleteModify
__ CalendarDatabase: _CalStoreAllowsEvents
__ CalendarDatabase: _CalStoreAllowsProposeNewTime
__ CalendarDatabase: _CalStoreAllowsTasks
__ CalendarDatabase: _CalStoreAreRecurrencesPinnedToMonthDays
__ CalendarDatabase: _CalStoreCopyAccountPersistentID
__ CalendarDatabase: _CalStoreCopyCalendars
__ CalendarDatabase: _CalStoreCopyDelegatedAccountOwnerStoreID
__ CalendarDatabase: _CalStoreCopyExternalID
__ CalendarDatabase: _CalStoreCopyName
__ CalendarDatabase: _CalStoreGetMaxAlarmsSupported
__ CalendarDatabase: _CalStoreGetMaxRecurrencesSupported
__ CalendarDatabase: _CalStoreGetProhibitsICSImport
__ CalendarDatabase: _CalStoreGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalStoreGetSupportsIncomingInvitations
__ CalendarDatabase: _CalStoreGetSupportsInvitationModifications
__ CalendarDatabase: _CalStoreGetSupportsJunkReporting
__ CalendarDatabase: _CalStoreGetSupportsOutgoingInvitations
__ CalendarDatabase: _CalStoreGetSupportsPhoneNumbers
__ CalendarDatabase: _CalStoreGetType
__ CalendarDatabase: _CalStoreGetUID
__ CalendarDatabase: _CalStoreIsAlarmTriggerIntervalConstrainedToRecurrenceInterval
__ CalendarDatabase: _CalStoreIsEnabled
__ CalendarDatabase: _CalStoreIsFacebook
__ CalendarDatabase: _CalStoreIsWritable
__ CalendarDatabase: _CalStoreMustAcknowledgeMasterEvent
__ CalendarDatabase: _CalStoreProhibitsDetachmentOnCommentChange
__ CalendarDatabase: _CalStoreProhibitsMultipleDaysInMonthlyRecurrence
__ CalendarDatabase: _CalStoreProhibitsMultipleMonthsInYearlyRecurrence
__ CalendarDatabase: _CalStoreProhibitsPrivateEventsWithAttendees
__ CalendarDatabase: _CalStoreProhibitsSlicingEventsWithAttendees
__ CalendarDatabase: _CalStoreProhibitsUsingEventOrganizerEmailWhenComposingMail
__ CalendarDatabase: _CalStoreProhibitsYearlyRecurrenceInterval
__ CalendarDatabase: _CalStoreRecurrenceSeriesMustIncludeMoreThanFirstOccurrence
__ CalendarDatabase: _CalStoreRemoveItemsOfTypeOlderThanDateInStore
__ CalendarDatabase: _CalStoreRequiresMSFormattedUIDKey
__ CalendarDatabase: _CalStoreRequiresOccurrencesConformToRecurrenceRule
__ CalendarDatabase: _CalStoreRequiresOpeningAttachmentAsLink
__ CalendarDatabase: _CalStoreRequiresSamePrivacyLevelAcrossRecurrenceSeries
__ CalendarDatabase: _CalStoreSetExternalID
__ CalendarDatabase: _CalStoreSetName
__ CalendarDatabase: _CalStoreSetType
__ CalendarDatabase: _CalStoreShouldUseDeleteAndAddInsteadOfMoveBetweenCalendars
__ CalendarDatabase: _CalStoreShowsNotifications
__ CalendarDatabase: _CalStoreSnoozeAlarmRequiresDetach
__ CalendarDatabase: _CalStoreSupportsAlarmProximity
__ CalendarDatabase: _CalStoreSupportsAlarmTriggerDates
__ CalendarDatabase: _CalStoreSupportsAlarmTriggerIntervals
__ CalendarDatabase: _CalStoreSupportsAlarmsTriggeringAfterStartDate
__ CalendarDatabase: _CalStoreSupportsAttachments
__ CalendarDatabase: _CalStoreSupportsAutoGeocodingStructuredLocations
__ CalendarDatabase: _CalStoreSupportsAvailabilityRequests
__ CalendarDatabase: _CalStoreSupportsDelegateEnumeration
__ CalendarDatabase: _CalStoreSupportsDelegation
__ CalendarDatabase: _CalStoreSupportsEventForwarding
__ CalendarDatabase: _CalStoreSupportsFloatingTimeZone
__ CalendarDatabase: _CalStoreSupportsIgnoringEventsInAvailabilityRequests
__ CalendarDatabase: _CalStoreSupportsInboxAvailability
__ CalendarDatabase: _CalStoreSupportsLocationDirectorySearches
__ CalendarDatabase: _CalStoreSupportsPrivateEvents
__ CalendarDatabase: _CalStoreSupportsRecurrenceSplit
__ CalendarDatabase: _CalStoreSupportsRecurrencesOnDetachedEvents
__ CalendarDatabase: _CalStoreSupportsReminderActions
__ CalendarDatabase: _CalStoreSupportsReminderLocations
__ CalendarDatabase: _CalStoreSupportsSharedCalendars
__ CalendarDatabase: _CalStoreSupportsStructuredLocations
__ CalendarDatabase: _CalStoreSupportsSubscriptionCalendars
__ CalendarDatabase: _CalSuggestedEventInfoCopyOwner
__ CalendarDatabase: _CalSuggestedEventInfoGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalSuggestionNotificationCopyOwner
__ CalendarDatabase: _CalTaskAllDayDueDatesSupportedInStore
__ CalendarDatabase: _CalTaskCopyCompletionDate
__ CalendarDatabase: _CalTaskCopyDueDate
__ CalendarDatabase: _CalTaskCopyDueDateTimeZone
__ CalendarDatabase: _CalTaskCopyFirstAlertDate
__ CalendarDatabase: _CalTaskCopyURI
__ CalendarDatabase: _CalToManyRelationCopyObjects
__ CalendarDatabase: _CalToManyRelationGetTypeID
__ CalendarDatabase: _EKCalendarItemProperty_calendar
__ CalendarDatabase: _EKCalendarItemProperty_clientLocation
__ CalendarDatabase: _EKCalendarItemProperty_endTimeZoneName
__ CalendarDatabase: _EKCalendarItemProperty_hasAttendees
__ CalendarDatabase: _EKCalendarItemProperty_hasNotes
__ CalendarDatabase: _EKCalendarItemProperty_hasRecurrences
__ CalendarDatabase: _EKCalendarItemProperty_isAllDay
__ CalendarDatabase: _EKCalendarItemProperty_organizer
__ CalendarDatabase: _EKCalendarItemProperty_selfAttendee
__ CalendarDatabase: _EKCalendarItemProperty_selfParticipantStatusRaw
__ CalendarDatabase: _EKCalendarItemProperty_startDateRaw
__ CalendarDatabase: _EKCalendarItemProperty_startTimeZoneName
__ CalendarDatabase: _EKCalendarItemProperty_structuredLocationWithoutPrediction
__ CalendarDatabase: _EKCalendarItemProperty_title
__ CalendarDatabase: _EKCalendarItemProperty_travelStartLocation
__ CalendarDatabase: _EKEventProperty_birthdayContactIdentifier
__ CalendarDatabase: _EKEventProperty_birthdayContactName
__ CalendarDatabase: _EKEventProperty_endDateRaw
__ CalendarDatabase: _EKEventProperty_locationPredictionState
__ CalendarDatabase: _EKEventProperty_privacyLevel
__ CalendarDatabase: _EKEventProperty_proposedStartDate
__ CalendarDatabase: _EKEventProperty_status
__ CalendarDatabase: _EKEventProperty_travelTime
__ CalendarDatabase: _EKObjectProperty_UUID
__ CalendarDatabase: _OBJC_CLASS_$_CADObjectChangeID
__ CalendarDatabase: _OBJC_CLASS_$_CADObjectChangeIDHelper
__ CalendarDatabase: _OBJC_CLASS_$_CADObjectID
__ CalendarDatabase: _OBJC_CLASS_$_CDBDataProtectionObserver
__ CalendarDatabase: _OBJC_CLASS_$_CDBPreferences
__ CalendarDatabase: _OBJC_CLASS_$_CDBSpotlightUtilities
__ CalendarDatabase: _OBJC_CLASS_$_CalSearch
__ CalendarDatabase: __CalCalendarItemGetSelfAttendee
__ CalendarDatabase: __CalDatabaseAddChangeset
__ CalendarDatabase: __CalDatabaseClearAllChangesets
__ CalendarDatabase: __CalDatabaseInvalidateOccurrenceCache
__ CalendarDatabase: __CalDatabasePostDBOrSyncStatusChangeNotificationAsync
__ CalendarDatabase: __CalEntityGetType
__ CalendarDatabase: __CalEntityIsDeleted
__ CalendarDatabase: __CalEventGetJunkStatusWhileLocked
__ CalendarDatabase: ___CalDatabaseChangedNotification
__ CalendarDatabase: _kCalCalendarPreventLineFolding
__ CalendarDatabase: _kCalCalendarSupportCompression
__ CalendarDatabase: _kCalDefaultCalendarChangedNotification
__ CalendarDatabase: _kCalEventClass
__ CalendarDatabase: _kCalEventOccurrenceCacheChangedNotification
__ CalendarDatabase: _kCalExportDefaultOptions
__ CalendarDatabase: _kCalRelationMethods
__ CalendarFoundation: _CalAbsoluteTimeGetAbsoluteTimeInTimeZone
__ CalendarFoundation: _CalAbsoluteTimeGetGregorianDate
__ CalendarFoundation: _CalAbsoluteTimeGetGregorianDateWithFallbackToDefaultTimeZone
__ CalendarFoundation: _CalAnalyticsSendEvent
__ CalendarFoundation: _CalAnalyticsSendEventLazy
__ CalendarFoundation: _CalAnalyticsTimeIntervalFromMachTimes
__ CalendarFoundation: _CalBooleanAsString
__ CalendarFoundation: _CalCopyTimeZone
__ CalendarFoundation: _CalEqualStrings
__ CalendarFoundation: _CalGenerateQualifiedIdentifierWithClassAndSubdomain
__ CalendarFoundation: _CalLocationAuthorizationChangedNotification
__ CalendarFoundation: _CalLogInitialize
__ CalendarFoundation: _EKWeakLinkClass
__ CalendarFoundation: _OBJC_CLASS_$_CalDescriptionBuilder
__ CalendarFoundation: _OBJC_CLASS_$_CalDeviceLockObserver
__ CalendarFoundation: _OBJC_CLASS_$_CalGrantedDelegate
__ CalendarFoundation: _OBJC_CLASS_$_CalLocationAuthorization
__ CalendarFoundation: _OBJC_CLASS_$_CalSignalSensor
__ CalendarFoundation: _OBJC_CLASS_$_CalStopwatch
__ CalendarFoundation: _OBJC_CLASS_$_CalWidgetUtils
__ CalendarFoundation: _OBJC_CLASS_$_EKCalendarDate
__ CalendarFoundation: _OBJC_CLASS_$_EKFoundInAppsEventTracker
__ CalendarFoundation: __CalTimeZoneForceUpdate
__ CalendarFoundation: _kAlarmStream
__ CalendarFoundation: _kCalBirthdayDefaultAlarmChangedNote
__ CalendarFoundation: _kCalDateDistantFuture
__ CalendarFoundation: _kCalDateDistantPast
__ CalendarFoundation: _kCalDateInvalid
__ CalendarFoundation: _kCalSignificantTimeChangeNotification
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFDateGetAbsoluteTime
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetContainsValue
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetGetCount
__ CoreFoundation: _CFSetGetTypeID
__ CoreFoundation: _CFSetGetValues
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFTimeZoneCreateWithName
__ CoreFoundation: _CFURLCopyPath
__ CoreFoundation: _CFURLGetString
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _NSURLTotalFileAllocatedSizeKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSMakeSpecialForwardingCaptureBlock
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFTypeArrayCallBacks
__ DataAccessExpress: _OBJC_CLASS_$_DADConnection
__ DataAccessExpress: _OBJC_CLASS_$_DAEGrantedDelegate
__ DataMigration: _DMIsMigrationNeeded
__ DataMigration: _DMPerformMigrationReturningAfterPlugin
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLog
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUserActivityTypeBrowsingWeb
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSecurityScopedURLWrapper
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUserActivity
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSPredicate
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ PersistentConnection: _PCSettingsGetStyle
__ TCC: _TCCAccessCheckAuditToken
__ TCC: _kTCCServiceCalendar
__ TCC: _kTCCServiceReminders
__ iCalendar: _OBJC_CLASS_$_ICSEvent
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_signature
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_get_uint64
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_suspend
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_double
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libSystem.B.dylib: dyld_stub_binder
__ libbsm.0.dylib: _audit_token_to_au32
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_respondsToSelector
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_getMethodDescription
CADEventPredicate : EKPredicate <EKDefaultPropertiesLoading, NSSecureCoding>
 @property  NSString *eventUUID
 @property  NSTimeZone *timeZone
 @property  BOOL shouldLoadProposedTimesInRange
 @property  BOOL shouldLoadDefaultProperties
 @property  BOOL excludeAllDayEvents
 @property  BOOL excludeTimedEvents
 @property  BOOL excludeDeclined
 @property  BOOL excludeProposed
 @property  BOOL excludeDeclinedUnlessProposed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADEventPredicate supportsSecureCoding]
  +[CADEventPredicate predicateWithStartDate:endDate:timeZone:calendars:]
  +[CADEventPredicate predicateWithStartDate:title:calendars:]
  +[CADEventPredicate predicateWithStartDate:endDate:timeZone:calendars:loadDefaultProperties:]
  +[CADEventPredicate predicateWithStartDate:endDate:timeZone:eventUUID:calendars:]

  // instance methods
  -[CADEventPredicate copyWithZone:]
  -[CADEventPredicate timeZone]
  -[CADEventPredicate eventUUID]
  -[CADEventPredicate excludeTimedEvents]
  -[CADEventPredicate excludeAllDayEvents]
  -[CADEventPredicate excludeDeclined]
  -[CADEventPredicate excludeProposed]
  -[CADEventPredicate excludeDeclinedUnlessProposed]
  -[CADEventPredicate encodeWithCoder:]
  -[CADEventPredicate defaultPropertiesToLoad]
  -[CADEventPredicate predicateFormat]
  -[CADEventPredicate shouldLoadDefaultProperties]
  -[CADEventPredicate isEqual:]
  -[CADEventPredicate copyMatchingItemsWithDatabase:]
  -[CADEventPredicate setExcludeTimedEvents:]
  -[CADEventPredicate setExcludeAllDayEvents:]
  -[CADEventPredicate setExcludeDeclined:]
  -[CADEventPredicate setExcludeProposed:]
  -[CADEventPredicate setExcludeDeclinedUnlessProposed:]
  -[CADEventPredicate initWithCoder:]
  -[CADEventPredicate initWithStartDate:endDate:timeZone:calendars:]
  -[CADEventPredicate initWithStartDate:endDate:timeZone:calendars:loadDefaultProperties:]
  -[CADEventPredicate initWithStartDate:endDate:timeZone:eventUUID:calendars:]
  -[CADEventPredicate initWithStartDate:title:calendars:]
  -[CADEventPredicate shouldLoadProposedTimesInRange]


EKAlarmOccurrence : NSObject /usr/lib/libSystem.B.dylib
 @property  CADObjectID *alarmID
 @property  CADObjectID *ownerID
 @property  NSDate *ownerDate
 @property  NSTimeZone *ownerTimeZone
 @property  NSURL *ownerURI
 @property  NSDate *fireDate
 @property  NSString *externalID
 @property  NSDate *acknowledgedDate

  // class methods
  +[EKAlarmOccurrence alarmOccurrenceWithAlarmID:ownerID:ownerDate:ownerTimeZone:ownerURI:fireDate:externalID:acknowledgedDate:]

  // instance methods
  -[EKAlarmOccurrence initWithDictionaryRepresentation:]
  -[EKAlarmOccurrence .cxx_destruct]
  -[EKAlarmOccurrence fireDate]
  -[EKAlarmOccurrence ownerID]
  -[EKAlarmOccurrence alarmID]
  -[EKAlarmOccurrence encodeWithCoder:]
  -[EKAlarmOccurrence externalID]
  -[EKAlarmOccurrence dictionaryRepresentation]
  -[EKAlarmOccurrence initWithCoder:]
  -[EKAlarmOccurrence acknowledgedDate]
  -[EKAlarmOccurrence ownerDate]
  -[EKAlarmOccurrence ownerURI]
  -[EKAlarmOccurrence ownerTimeZone]
  -[EKAlarmOccurrence initWithAlarmID:ownerID:ownerDate:ownerTimeZone:ownerURI:fireDate:externalID:acknowledgedDate:]


CADPredicate : NSPredicate /usr/lib/libbsm.0.dylib <NSSecureCoding>
  // class methods
  +[CADPredicate setValidator:]

  // instance methods
  -[CADPredicate evaluateWithObject:]


CADNotifiableEventsPredicate : CADPredicate <EKDefaultPropertiesLoading, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADNotifiableEventsPredicate supportsSecureCoding]
  +[CADNotifiableEventsPredicate predicate]

  // instance methods
  -[CADNotifiableEventsPredicate copyWithZone:]
  -[CADNotifiableEventsPredicate defaultPropertiesToLoad]
  -[CADNotifiableEventsPredicate predicateFormat]
  -[CADNotifiableEventsPredicate shouldLoadDefaultProperties]
  -[CADNotifiableEventsPredicate copyMatchingItemsWithDatabase:]


CADMutableCalStoreInfo : NSObject /usr/lib/libSystem.B.dylib <CADCalStoreInfo>
 @property  int rowID
 @property  BOOL isLocalStore
 @property  BOOL isEnabled
 @property  NSString *storeName
 @property  NSString *accountIdentifier
 @property  NSString *delegatedAccountOwnerAccountIdentifier

  // instance methods
  -[CADMutableCalStoreInfo setIsEnabled:]
  -[CADMutableCalStoreInfo setStoreName:]
  -[CADMutableCalStoreInfo accountIdentifier]
  -[CADMutableCalStoreInfo setDelegatedAccountOwnerAccountIdentifier:]
  -[CADMutableCalStoreInfo .cxx_destruct]
  -[CADMutableCalStoreInfo isLocalStore]
  -[CADMutableCalStoreInfo delegatedAccountOwnerAccountIdentifier]
  -[CADMutableCalStoreInfo isEnabled]
  -[CADMutableCalStoreInfo setIsLocalStore:]
  -[CADMutableCalStoreInfo rowID]
  -[CADMutableCalStoreInfo setRowID:]
  -[CADMutableCalStoreInfo setAccountIdentifier:]
  -[CADMutableCalStoreInfo storeName]


CADFilter : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
  // class methods
  +[CADFilter supportsSecureCoding]

  // instance methods
  -[CADFilter validate]
  -[CADFilter encodeWithCoder:]
  -[CADFilter initWithCoder:]
  -[CADFilter applicableToEntityType:]
  -[CADFilter extendWhereClause:usingOperation:withValues:andTypes:]


CADAlarmEngineOperationGroup : CADOperationGroup <CADAlarmEngineInterface>
  // class methods
  +[CADAlarmEngineOperationGroup whitelistedBundles]
  +[CADAlarmEngineOperationGroup requiresEventOrReminderAccess]
  +[CADAlarmEngineOperationGroup requiresReminderAccess]
  +[CADAlarmEngineOperationGroup requiresEventAccess]

  // instance methods
  -[CADAlarmEngineOperationGroup CADDatabaseGetVehicleTriggerAlarmsWithReply:]
  -[CADAlarmEngineOperationGroup CADDatabaseGetAlarmWithUUID:reply:]
  -[CADAlarmEngineOperationGroup _hasAccessToAlarmsOnCalendar:]
  -[CADAlarmEngineOperationGroup CADDatabaseGetAlarmOccurrencesInRangeFromStart:toEnd:inCalendars:reply:]
  -[CADAlarmEngineOperationGroup CADDatabaseGetLocationBasedAlarmsWithReply:]


CADDatabaseInitializationOptions : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  int databaseInitOptions
 @property  CADChangeTrackingClientId *changeTrackingClientId
 @property  BOOL enablePropertyModificationLogging
 @property  int management
 @property  NSString *managementBundleIdentifier
 @property  NSString *databasePath
 @property  BOOL unitTesting
 @property  BOOL allowDelegateSources

  // class methods
  +[CADDatabaseInitializationOptions supportsSecureCoding]

  // instance methods
  -[CADDatabaseInitializationOptions setUnitTesting:]
  -[CADDatabaseInitializationOptions databasePath]
  -[CADDatabaseInitializationOptions unitTesting]
  -[CADDatabaseInitializationOptions init]
  -[CADDatabaseInitializationOptions changeTrackingClientId]
  -[CADDatabaseInitializationOptions .cxx_destruct]
  -[CADDatabaseInitializationOptions enablePropertyModificationLogging]
  -[CADDatabaseInitializationOptions allowDelegateSources]
  -[CADDatabaseInitializationOptions setDatabasePath:]
  -[CADDatabaseInitializationOptions encodeWithCoder:]
  -[CADDatabaseInitializationOptions databaseInitOptions]
  -[CADDatabaseInitializationOptions isEqualToOptions:]
  -[CADDatabaseInitializationOptions setDatabaseInitOptions:]
  -[CADDatabaseInitializationOptions management]
  -[CADDatabaseInitializationOptions setManagementBundleIdentifier:]
  -[CADDatabaseInitializationOptions setChangeTrackingClientId:]
  -[CADDatabaseInitializationOptions setEnablePropertyModificationLogging:]
  -[CADDatabaseInitializationOptions validOptionsForConnection:]
  -[CADDatabaseInitializationOptions setAllowDelegateSources:]
  -[CADDatabaseInitializationOptions managementBundleIdentifier]
  -[CADDatabaseInitializationOptions setManagement:]
  -[CADDatabaseInitializationOptions initWithCoder:]


CADObjectOperationGroup : CADOperationGroup <CADObjectInterface>
  // class methods
  +[CADObjectOperationGroup requiresEventOrReminderAccess]
  +[CADObjectOperationGroup requiresReminderAccess]
  +[CADObjectOperationGroup requiresEventAccess]

  // instance methods
  -[CADObjectOperationGroup CADObjectExists:reply:]
  -[CADObjectOperationGroup CADDatabaseInsertObjectsWithTempObjectIDs:reply:]
  -[CADObjectOperationGroup CADDatabaseDeleteObjectsWithObjectIDs:reply:]
  -[CADObjectOperationGroup CADObject:setAttributes:andRelations:reply:]
  -[CADObjectOperationGroup CADObject:getNumberPropertyWithName:reply:]
  -[CADObjectOperationGroup CADObject:getStringPropertyWithName:reply:]
  -[CADObjectOperationGroup CADObject:getDatePropertyWithName:reply:]
  -[CADObjectOperationGroup CADObjectIsManaged:reply:]
  -[CADObjectOperationGroup CADObject:getDataPropertyWithName:reply:]
  -[CADObjectOperationGroup CADObject:getPropertiesWithNames:reply:]
  -[CADObjectOperationGroup CADObject:getPropertyWithName:reply:]
  -[CADObjectOperationGroup CADObjectsExist:reply:]
  -[CADObjectOperationGroup CADObject:getRelatedObjectWithRelationName:reply:]
  -[CADObjectOperationGroup CADObject:getRelatedObjectsWithRelationName:reply:]


CADNotificationMonitorOperationGroup : CADOperationGroup <CADNotificationMonitorInterface>
  // class methods
  +[CADNotificationMonitorOperationGroup whitelistedBundles]
  +[CADNotificationMonitorOperationGroup requiresEventOrReminderAccess]
  +[CADNotificationMonitorOperationGroup requiresReminderAccess]
  +[CADNotificationMonitorOperationGroup requiresEventAccess]

  // instance methods
  -[CADNotificationMonitorOperationGroup CADDatabaseGetInviteReplyNotifications:]
  -[CADNotificationMonitorOperationGroup CADEvent:setAlertedWithError:]
  -[CADNotificationMonitorOperationGroup CADCalendar:setAlertedWithError:]
  -[CADNotificationMonitorOperationGroup CADCalendarSetClearedFromNotificationCenter:error:]
  -[CADNotificationMonitorOperationGroup CADResourceChange:setAlertedWithError:]
  -[CADNotificationMonitorOperationGroup CADDatabaseGetEventNotificationItemsFilteredByShowsNotificationsFlag:calculateEarliestExpirationDate:reply:]
  -[CADNotificationMonitorOperationGroup CADDatabaseGetInboxRepliedSectionItems:]
  -[CADNotificationMonitorOperationGroup CADDatabaseGetSharedCalendarInvitationsWithReply:]
  -[CADNotificationMonitorOperationGroup CADEventSetInvitationStatus:forEvent:error:]
  -[CADNotificationMonitorOperationGroup CADDatabaseGetResourceChanges:]
  -[CADNotificationMonitorOperationGroup CADDatabaseGetNotificationCountForSourceWithExternalIdentifier:excludingDelegateSources:filteredByShowsNotificationsFlag:reply:]
  -[CADNotificationMonitorOperationGroup CADInviteReplyNotification:setAlertedWithError:]


CADWhitelistedAccountAccessHandler : NSObject /usr/lib/libSystem.B.dylib <CADAccountAccessHandler>
 @property  <CADACAccountsProvider> *accountsProvider

  // instance methods
  -[CADWhitelistedAccountAccessHandler accountsProvider]
  -[CADWhitelistedAccountAccessHandler isActionAllowed:forAccountIdentifier:]
  -[CADWhitelistedAccountAccessHandler .cxx_destruct]
  -[CADWhitelistedAccountAccessHandler isAccountManaged:]
  -[CADWhitelistedAccountAccessHandler reset]
  -[CADWhitelistedAccountAccessHandler initWithAccountsProvider:]
  -[CADWhitelistedAccountAccessHandler restrictedCalendarRowIDsForAction:]


CADUpNextEventsPredicate : EKPredicate
 @property  double startDateRestrictionThreshold

  // class methods
  +[CADUpNextEventsPredicate supportsSecureCoding]
  +[CADUpNextEventsPredicate _descriptionForOccurrence:ofEvent:]
  +[CADUpNextEventsPredicate _occurrencePassesFilter:event:]

  // instance methods
  -[CADUpNextEventsPredicate copyWithZone:]
  -[CADUpNextEventsPredicate encodeWithCoder:]
  -[CADUpNextEventsPredicate defaultPropertiesToLoad]
  -[CADUpNextEventsPredicate predicateFormat]
  -[CADUpNextEventsPredicate isEqual:]
  -[CADUpNextEventsPredicate copyMatchingItemsWithDatabase:]
  -[CADUpNextEventsPredicate initWithCalendarIDs:startDate:endDate:]
  -[CADUpNextEventsPredicate setStartDateRestrictionThreshold:]
  -[CADUpNextEventsPredicate initWithCoder:]
  -[CADUpNextEventsPredicate startDateRestrictionThreshold]


CADContactEventsPredicate : EKPredicate
 @property  NSSet *contactEmailAddresses
 @property  NSSet *contactNameComponents

  // class methods
  +[CADContactEventsPredicate supportsSecureCoding]

  // instance methods
  -[CADContactEventsPredicate copyWithZone:]
  -[CADContactEventsPredicate .cxx_destruct]
  -[CADContactEventsPredicate encodeWithCoder:]
  -[CADContactEventsPredicate defaultPropertiesToLoad]
  -[CADContactEventsPredicate predicateFormat]
  -[CADContactEventsPredicate isEqual:]
  -[CADContactEventsPredicate copyMatchingItemsWithDatabase:]
  -[CADContactEventsPredicate initWithCalendarIDs:startDate:endDate:contacts:]
  -[CADContactEventsPredicate initWithCoder:]
  -[CADContactEventsPredicate setContactEmailAddresses:]
  -[CADContactEventsPredicate setContactNameComponents:]
  -[CADContactEventsPredicate contactEmailAddresses]
  -[CADContactEventsPredicate contactNameComponents]
  -[CADContactEventsPredicate _isCandidate:allowAllDayEvent:]


CADOperationGroup : NSObject /usr/lib/libSystem.B.dylib
 @property  ClientConnection *conn

  // class methods
  +[CADOperationGroup whitelistedBundles]
  +[CADOperationGroup requiresEventOrReminderAccess]
  +[CADOperationGroup requiresReminderAccess]
  +[CADOperationGroup requiresEventAccess]

  // instance methods
  -[CADOperationGroup conn]
  -[CADOperationGroup initWithClientConnection:]
  -[CADOperationGroup .cxx_destruct]
  -[CADOperationGroup accessGrantedToPerformSelector:]


CADGroupedAccountAccessHandler : NSObject /usr/lib/libSystem.B.dylib <CADAccountAccessHandler>
 @property  NSMutableArray *accessHandlers

  // instance methods
  -[CADGroupedAccountAccessHandler init]
  -[CADGroupedAccountAccessHandler isActionAllowed:forAccountIdentifier:]
  -[CADGroupedAccountAccessHandler .cxx_destruct]
  -[CADGroupedAccountAccessHandler isAccountManaged:]
  -[CADGroupedAccountAccessHandler reset]
  -[CADGroupedAccountAccessHandler restrictedCalendarRowIDsForAction:]
  -[CADGroupedAccountAccessHandler accessHandlers]
  -[CADGroupedAccountAccessHandler addAccountAccessHandler:]


CADTravelEventsPredicate : EKPredicate
  // class methods
  +[CADTravelEventsPredicate supportsSecureCoding]

  // instance methods
  -[CADTravelEventsPredicate copyWithZone:]
  -[CADTravelEventsPredicate encodeWithCoder:]
  -[CADTravelEventsPredicate defaultPropertiesToLoad]
  -[CADTravelEventsPredicate predicateFormat]
  -[CADTravelEventsPredicate isEqual:]
  -[CADTravelEventsPredicate copyMatchingItemsWithDatabase:]
  -[CADTravelEventsPredicate initWithCalendarIDs:startDate:endDate:]
  -[CADTravelEventsPredicate initWithCoder:]
  -[CADTravelEventsPredicate _fetchTravelEventsWithDatabase:]


EKMasterEventsPredicate : EKPredicate
  // class methods
  +[EKMasterEventsPredicate supportsSecureCoding]
  +[EKMasterEventsPredicate predicateWithCalendarIDs:]

  // instance methods
  -[EKMasterEventsPredicate predicateFormat]
  -[EKMasterEventsPredicate copyMatchingItemsWithDatabase:]


CADDatabaseOperationGroup : CADOperationGroup <CADDatabaseInterface>
  // class methods
  +[CADDatabaseOperationGroup requiresEventOrReminderAccess]
  +[CADDatabaseOperationGroup requiresReminderAccess]
  +[CADDatabaseOperationGroup requiresEventAccess]

  // instance methods
  -[CADDatabaseOperationGroup CADDatabaseUnregisterForDetailedChangeTracking:]
  -[CADDatabaseOperationGroup CADDatabaseSetShowsDeclinedEvents:reply:]
  -[CADDatabaseOperationGroup CADDatabaseExportICSDataForCalendarItems:options:reply:]
  -[CADDatabaseOperationGroup CADDatabaseMarkChangedObjectIDsConsumedUpToSequenceNumber:reply:]
  -[CADDatabaseOperationGroup _CADDatabaseCanModifyCalendarDatabase]
  -[CADDatabaseOperationGroup CADDatabaseLastConfirmedSplashScreenVersion:]
  -[CADDatabaseOperationGroup _copyToIntCFSetRef:]
  -[CADDatabaseOperationGroup CADDatabaseCommitWithReply:]
  -[CADDatabaseOperationGroup CADDatabaseRollbackWithReply:]
  -[CADDatabaseOperationGroup CADDatabaseRebuildOccurrenceCacheWithReply:]
  -[CADDatabaseOperationGroup CADDatabaseGetChangesSinceSequenceNumber:reply:]
  -[CADDatabaseOperationGroup CADDatabaseGetChangedEntityIDsSinceTimestamp:reply:]
  -[CADDatabaseOperationGroup CADDatabaseCanModifyCalendarDatabase:]
  -[CADDatabaseOperationGroup CADDatabaseGetUUID:]
  -[CADDatabaseOperationGroup CADDatabaseGetSequenceNumber:]
  -[CADDatabaseOperationGroup _copyToIntCFArrayRef:]
  -[CADDatabaseOperationGroup CADDatabaseGetNextAssignableColorWithReply:]
  -[CADDatabaseOperationGroup CADDatabaseExportICSDataForCalendar:options:reply:]
  -[CADDatabaseOperationGroup CADDatabaseSaveWithReply:]
  -[CADDatabaseOperationGroup CADDatabaseRegisterForDetailedChangeTrackingInSource:reply:]
  -[CADDatabaseOperationGroup _importEvents:data:intoCalendarWithID:optionsMask:batchSize:outError:]
  -[CADDatabaseOperationGroup CADDatabaseImportEvents:fromICSData:intoCalendarsWithIDs:optionsMask:batchSize:reply:]
  -[CADDatabaseOperationGroup CADDatabaseFetchChangedObjectIDsSinceSequenceNumber:reply:]
  -[CADDatabaseOperationGroup CADDatabaseMarkIndividualChangesConsumed:reply:]
  -[CADDatabaseOperationGroup CADDatabaseFetchObjectChangesForEntityTypes:insideObject:reply:]


ClientIdentity : NSObject /usr/lib/libSystem.B.dylib
 @property  {?=[8I]} auditToken
 @property  NSString *bundleIdentifier
 @property  NSString *clientName
 @property  NSString *codeSigningIdentity
 @property  int pid

  // instance methods
  -[ClientIdentity auditToken]
  -[ClientIdentity initWithAuditToken:]
  -[ClientIdentity clientName]
  -[ClientIdentity .cxx_destruct]
  -[ClientIdentity pid]
  -[ClientIdentity bundleIdentifier]
  -[ClientIdentity codeSigningIdentity]


CADRouteHypothesis : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  int transportType
 @property  NSDate *conservativeDepartureDate
 @property  double conservativeTravelTime
 @property  NSDate *suggestedDepartureDate
 @property  double estimatedTravelTime
 @property  NSDate *aggressiveDepartureDate
 @property  double aggressiveTravelTime
 @property  NSString *routeName
 @property  BOOL supportsLiveTraffic
 @property  unsigned long currentTrafficDensity
 @property  NSString *trafficDensityDescription
 @property  long long travelState

  // class methods
  +[CADRouteHypothesis supportsSecureCoding]

  // instance methods
  -[CADRouteHypothesis estimatedTravelTime]
  -[CADRouteHypothesis aggressiveDepartureDate]
  -[CADRouteHypothesis travelState]
  -[CADRouteHypothesis aggressiveTravelTime]
  -[CADRouteHypothesis routeName]
  -[CADRouteHypothesis conservativeDepartureDate]
  -[CADRouteHypothesis .cxx_destruct]
  -[CADRouteHypothesis encodeWithCoder:]
  -[CADRouteHypothesis initWithTransportType:conservativeDepartureDate:conservativeTravelTime:suggestedDepartureDate:estimatedTravelTime:aggressiveDepartureDate:aggressiveTravelTime:routeName:supportsLiveTraffic:currentTrafficDensity:trafficDensityDescription:travelState:]
  -[CADRouteHypothesis transportType]
  -[CADRouteHypothesis conservativeTravelTime]
  -[CADRouteHypothesis trafficDensityDescription]
  -[CADRouteHypothesis currentTrafficDensity]
  -[CADRouteHypothesis suggestedDepartureDate]
  -[CADRouteHypothesis initWithCoder:]
  -[CADRouteHypothesis supportsLiveTraffic]


CADDatabaseStorageManagementOperationGroup : CADOperationGroup <CADDatabaseStorageManagementInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADDatabaseStorageManagementOperationGroup requiresEventOrReminderAccess]
  +[CADDatabaseStorageManagementOperationGroup requiresReminderAccess]
  +[CADDatabaseStorageManagementOperationGroup requiresEventAccess]

  // instance methods
  -[CADDatabaseStorageManagementOperationGroup accessGrantedToPerformSelector:]
  -[CADDatabaseStorageManagementOperationGroup CADDatabaseGetStorageUsage:]
  -[CADDatabaseStorageManagementOperationGroup storageManagementAccessGranted]
  -[CADDatabaseStorageManagementOperationGroup sizeCalendarDirectory]
  -[CADDatabaseStorageManagementOperationGroup sizeAttachments]
  -[CADDatabaseStorageManagementOperationGroup sizeDirectoryAtPath:]


CADCalendarItemOperationGroup : CADOperationGroup <CADCalendarItemInterface>
  // class methods
  +[CADCalendarItemOperationGroup requiresEventOrReminderAccess]
  +[CADCalendarItemOperationGroup requiresReminderAccess]
  +[CADCalendarItemOperationGroup requiresEventAccess]

  // instance methods
  -[CADCalendarItemOperationGroup CADDatabaseAddContactWithIdentifier:forCalendarItem:withReply:]
  -[CADCalendarItemOperationGroup _resultsFilteredForTCCAccess:]
  -[CADCalendarItemOperationGroup CADDatabaseGetContactIdentifierForCalendarItem:reply:]
  -[CADCalendarItemOperationGroup _resultsFilteredForJunkEvents:]
  -[CADCalendarItemOperationGroup CADDatabaseCountEntitiesOfType:withContactIdentifier:withReply:]
  -[CADCalendarItemOperationGroup CADDatabaseGetCalendarItemWithUUID:reply:]
  -[CADCalendarItemOperationGroup CADDatabaseExportCalendarItemAsICS:withOptions:reply:]
  -[CADCalendarItemOperationGroup CADDatabaseGetCalendarItemsWithUniqueIdentifier:inCalendar:reply:]
  -[CADCalendarItemOperationGroup CADDatabaseRemoveContactIdentifier:forCalendarItem:withReply:]
  -[CADCalendarItemOperationGroup CADDatabaseFetchCalendarItemsWithPredicate:entityType:fetchIdentifier:reply:]
  -[CADCalendarItemOperationGroup CADDatabaseFetchEntitiesOfType:withContactIdentifier:withReply:]
  -[CADCalendarItemOperationGroup CADDatabaseCancelFetchRequestWithIdentifier:]


_CADFetchCalendarItemsWithPredicateOperation : NSOperation /usr/lib/libbsm.0.dylib
 @property  int fetchIdentifier

  // instance methods
  -[_CADFetchCalendarItemsWithPredicateOperation main]
  -[_CADFetchCalendarItemsWithPredicateOperation dealloc]
  -[_CADFetchCalendarItemsWithPredicateOperation .cxx_destruct]
  -[_CADFetchCalendarItemsWithPredicateOperation initWithPredicate:entityType:database:fetchIdentifier:completionHandler:]
  -[_CADFetchCalendarItemsWithPredicateOperation fetchIdentifier]
  -[_CADFetchCalendarItemsWithPredicateOperation cancel]


CADSyncOperationGroup : CADOperationGroup <CADSyncInterface>
  // class methods
  +[CADSyncOperationGroup requiresEventOrReminderAccess]
  +[CADSyncOperationGroup requiresReminderAccess]
  +[CADSyncOperationGroup requiresEventAccess]

  // instance methods
  -[CADSyncOperationGroup accessGrantedToPerformSelector:]
  -[CADSyncOperationGroup CADDatabaseGetDeletableCalendars:]
  -[CADSyncOperationGroup CADDatabaseGetDeletableSources:]


CADCalendarItemsWithExternalIdentifierPredicate : CADEventPredicate <NSSecureCoding>
 @property  NSString *externalIdentifier
 @property  int entityType

  // class methods
  +[CADCalendarItemsWithExternalIdentifierPredicate supportsSecureCoding]

  // instance methods
  -[CADCalendarItemsWithExternalIdentifierPredicate copyWithZone:]
  -[CADCalendarItemsWithExternalIdentifierPredicate entityType]
  -[CADCalendarItemsWithExternalIdentifierPredicate .cxx_destruct]
  -[CADCalendarItemsWithExternalIdentifierPredicate encodeWithCoder:]
  -[CADCalendarItemsWithExternalIdentifierPredicate predicateFormat]
  -[CADCalendarItemsWithExternalIdentifierPredicate copyMatchingItemsWithDatabase:]
  -[CADCalendarItemsWithExternalIdentifierPredicate initWithExternalIdentifier:entityType:]
  -[CADCalendarItemsWithExternalIdentifierPredicate externalIdentifier]
  -[CADCalendarItemsWithExternalIdentifierPredicate initWithCoder:]
  -[CADCalendarItemsWithExternalIdentifierPredicate initWithExternalIdentifier:]


CADFeatureSet : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CADFeatureSet isSuggestionsEnabled]


CADUnalertedEventsPredicate : CADPredicate <NSSecureCoding>
  // class methods
  +[CADUnalertedEventsPredicate supportsSecureCoding]
  +[CADUnalertedEventsPredicate predicate]

  // instance methods
  -[CADUnalertedEventsPredicate copyWithZone:]
  -[CADUnalertedEventsPredicate predicateFormat]
  -[CADUnalertedEventsPredicate copyMatchingItemsWithDatabase:]


CADEventTimeWindowPredicate : CADPredicate <NSSecureCoding, EKDefaultPropertiesLoading>
 @property  CADPredicate *wrappedPredicate
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  BOOL mustStartInInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADEventTimeWindowPredicate supportsSecureCoding]

  // instance methods
  -[CADEventTimeWindowPredicate startDate]
  -[CADEventTimeWindowPredicate wrappedPredicate]
  -[CADEventTimeWindowPredicate mustStartInInterval]
  -[CADEventTimeWindowPredicate .cxx_destruct]
  -[CADEventTimeWindowPredicate encodeWithCoder:]
  -[CADEventTimeWindowPredicate defaultPropertiesToLoad]
  -[CADEventTimeWindowPredicate endDate]
  -[CADEventTimeWindowPredicate predicateFormat]
  -[CADEventTimeWindowPredicate shouldLoadDefaultProperties]
  -[CADEventTimeWindowPredicate copyMatchingItemsWithDatabase:]
  -[CADEventTimeWindowPredicate initWithPredicate:limitWithStartDate:endDate:mustStartInInterval:]
  -[CADEventTimeWindowPredicate initWithCoder:]


CADXPCInvocationContextHolder : NSObject /usr/lib/libSystem.B.dylib
 @property  id proxy

  // instance methods
  -[CADXPCInvocationContextHolder clear]
  -[CADXPCInvocationContextHolder retainProxy:andArgumentsInInvocation:]
  -[CADXPCInvocationContextHolder proxy]
  -[CADXPCInvocationContextHolder .cxx_destruct]


CADXPCProxyHelper : NSObject /usr/lib/libSystem.B.dylib
 @property  CADDatabaseInitializationOptions *initializationOptions

  // instance methods
  -[CADXPCProxyHelper forwardInvocation:]
  -[CADXPCProxyHelper methodSignatureForSelector:]
  -[CADXPCProxyHelper .cxx_destruct]
  -[CADXPCProxyHelper replyBlockArgumentIndex:]
  -[CADXPCProxyHelper initializationOptions]
  -[CADXPCProxyHelper _shouldResendInitializationOptionsForInvocation:]
  -[CADXPCProxyHelper setInitializationOptions:]
  -[CADXPCProxyHelper initWithXPCConnection:protocol:synchronous:]
  -[CADXPCProxyHelper _getReplyBlockFromInvocation:]
  -[CADXPCProxyHelper _callReplyHandler:ofInvocation:withErrorCode:]
  -[CADXPCProxyHelper _replaceReplyBlockInInvocation:retryingAfterInitializationWithContextHolder:]


CADCalLocationSearchOperation : CADCalSearchOperation
  // instance methods
  -[CADCalLocationSearchOperation initWithConnection:filter:replyID:]


CADMigrationOperationGroup : CADOperationGroup <CADMigrationInterface>
  // class methods
  +[CADMigrationOperationGroup requiresEventOrReminderAccess]
  +[CADMigrationOperationGroup requiresReminderAccess]
  +[CADMigrationOperationGroup requiresEventAccess]

  // instance methods
  -[CADMigrationOperationGroup accessGrantedToPerformSelector:]
  -[CADMigrationOperationGroup CADMigrateDatabaseIfNeeded:]


CADNotificationCenterVisibleEventsPredicate : CADPredicate <NSSecureCoding>
  // class methods
  +[CADNotificationCenterVisibleEventsPredicate supportsSecureCoding]
  +[CADNotificationCenterVisibleEventsPredicate predicate]

  // instance methods
  -[CADNotificationCenterVisibleEventsPredicate copyWithZone:]
  -[CADNotificationCenterVisibleEventsPredicate predicateFormat]
  -[CADNotificationCenterVisibleEventsPredicate copyMatchingItemsWithDatabase:]


CADAnonymousOperationProxy : CADOperationProxy
  // class methods
  +[CADAnonymousOperationProxy allOperationGroupClasses]


CADTestingOperationProxy : CADOperationProxy
  // class methods
  +[CADTestingOperationProxy allOperationGroupClasses]


CADEventOnlyOperationProxy : CADOperationProxy
  // class methods
  +[CADEventOnlyOperationProxy allOperationGroupClasses]


CADReminderOnlyOperationProxy : CADOperationProxy
  // class methods
  +[CADReminderOnlyOperationProxy allOperationGroupClasses]


CADEventAndReminderOperationProxy : CADOperationProxy
  // class methods
  +[CADEventAndReminderOperationProxy allOperationGroupClasses]


CADSpringBoardOperationProxy : CADEventAndReminderOperationProxy
  // class methods
  +[CADSpringBoardOperationProxy allOperationGroupClasses]


CADMobileCalOperationProxy : CADEventOnlyOperationProxy
  // class methods
  +[CADMobileCalOperationProxy allOperationGroupClasses]


CADRemindersOperationProxy : CADReminderOnlyOperationProxy
  // class methods
  +[CADRemindersOperationProxy allOperationGroupClasses]


CADMigrationOperationProxy : CADOperationProxy
  // class methods
  +[CADMigrationOperationProxy allOperationGroupClasses]


CADEventKitSyncOperationProxy : CADOperationProxy
  // class methods
  +[CADEventKitSyncOperationProxy allOperationGroupClasses]


CADCalendarToolOperationProxy : CADOperationProxy
  // class methods
  +[CADCalendarToolOperationProxy allOperationGroupClasses]


CADNotificationCountOperationProxy : CADOperationProxy
  // class methods
  +[CADNotificationCountOperationProxy allOperationGroupClasses]


CADOperationProxy : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CADOperationProxy allOperationGroupClasses]
  +[CADOperationProxy _operationGroupClassFromSelector:]
  +[CADOperationProxy operationProxyClassForClientWithConnection:]

  // instance methods
  -[CADOperationProxy initWithClientConnection:]
  -[CADOperationProxy forwardInvocation:]
  -[CADOperationProxy methodSignatureForSelector:]
  -[CADOperationProxy forwardingTargetForSelector:]
  -[CADOperationProxy dealloc]
  -[CADOperationProxy _operationGroupForClass:]
  -[CADOperationProxy _emptyMethod]
  -[CADOperationProxy _copyReplyBlockFromInvocation:]
  -[CADOperationProxy _callReplyHandler:ofInvocation:withError:]


EKScheduledReminderPredicate : EKPredicate
 @property  NSDate *day
 @property  unsigned long maxResults

  // class methods
  +[EKScheduledReminderPredicate supportsSecureCoding]
  +[EKScheduledReminderPredicate predicateForScheduledRemindersInCalendars:onDay:]

  // instance methods
  -[EKScheduledReminderPredicate copyWithZone:]
  -[EKScheduledReminderPredicate day]
  -[EKScheduledReminderPredicate setDay:]
  -[EKScheduledReminderPredicate .cxx_destruct]
  -[EKScheduledReminderPredicate encodeWithCoder:]
  -[EKScheduledReminderPredicate maxResults]
  -[EKScheduledReminderPredicate setMaxResults:]
  -[EKScheduledReminderPredicate copyMatchingItemsWithDatabase:]
  -[EKScheduledReminderPredicate initWithCoder:]


ClientConnection : NSObject /usr/lib/libSystem.B.dylib <CADDatabaseProvider>
 @property  <CADAccountAccessHandler> *accountAccessHandler
 @property  <ClientConnectionDelegate> *delegate
 @property  ^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@B} database
 @property  ClientIdentity *identity
 @property  CADOperationProxy *cadOperationProxy
 @property  NSXPCConnection *xpcConnection
 @property  NSString *changeTrackingID
 @property  CADDatabaseInitializationOptions *databaseInitializationOptions
 @property  BOOL initializationOptionsSet

  // instance methods
  -[ClientConnection setXpcConnection:]
  -[ClientConnection initWithXPCConnection:]
  -[ClientConnection operations]
  -[ClientConnection setDatabase:]
  -[ClientConnection closeDatabase]
  -[ClientConnection _createManagedConfigAccountAccessHandlerWithValidator:]
  -[ClientConnection isCalendarManaged:]
  -[ClientConnection addOperation:]
  -[ClientConnection databaseInitializationOptions]
  -[ClientConnection xpcConnection]
  -[ClientConnection identity]
  -[ClientConnection clearInsertedObjects]
  -[ClientConnection handleDatabaseChanged]
  -[ClientConnection hasTCCAccessToEntityWithObjectID:]
  -[ClientConnection eventAccessGranted]
  -[ClientConnection dealloc]
  -[ClientConnection _initAccountAccessHandler]
  -[ClientConnection .cxx_destruct]
  -[ClientConnection accountAccessHandler]
  -[ClientConnection isNotificationRestricted:forAction:]
  -[ClientConnection isStoreRestricted:forAction:strict:]
  -[ClientConnection clearCachedAuthorizationStatus]
  -[ClientConnection strictAccountAccessHandler]
  -[ClientConnection objectForKey:]
  -[ClientConnection isObjectWithObjectIDAJunkEvent:]
  -[ClientConnection database]
  -[ClientConnection isStoreRestricted:forAction:]
  -[ClientConnection isCalendarItemRestricted:forAction:]
  -[ClientConnection reminderAccessGranted]
  -[ClientConnection cadOperationProxy]
  -[ClientConnection isStoreManaged:]
  -[ClientConnection changeTrackingID]
  -[ClientConnection insertObject:key:]
  -[ClientConnection insertedObjects]
  -[ClientConnection _loadAccessPermissionsIfNeeded]
  -[ClientConnection isCalendarItemManaged:]
  -[ClientConnection initializationOptionsSet]
  -[ClientConnection _hasTCCAccessToEntityWithObjectIDUsingDeepInspection:]
  -[ClientConnection setDelegate:]
  -[ClientConnection restrictedCalendarRowIDsForAction:]
  -[ClientConnection isCalendarRestricted:forAction:]
  -[ClientConnection dumpState]
  -[ClientConnection setDatabaseInitializationOptions:]
  -[ClientConnection delegate]


CADCompoundFilter : CADFilter
 @property  NSArray *filters
 @property  long long operation

  // class methods
  +[CADCompoundFilter supportsSecureCoding]

  // instance methods
  -[CADCompoundFilter validate]
  -[CADCompoundFilter operation]
  -[CADCompoundFilter .cxx_destruct]
  -[CADCompoundFilter filters]
  -[CADCompoundFilter encodeWithCoder:]
  -[CADCompoundFilter initWithFilters:operation:]
  -[CADCompoundFilter initWithCoder:]
  -[CADCompoundFilter applicableToEntityType:]
  -[CADCompoundFilter extendWhereClause:usingOperation:withValues:andTypes:]


CADMCProfileConnectionManagedConfigurationHandler : NSObject /usr/lib/libSystem.B.dylib <CADManagedConfigurationHandler>
 @property  MCProfileConnection *connection

  // instance methods
  -[CADMCProfileConnectionManagedConfigurationHandler filteredOpenInAccounts:originatingAppBundleID:sourceAccountManagement:]
  -[CADMCProfileConnectionManagedConfigurationHandler filteredOpenInOriginatingAccounts:targetAppBundleID:targetAccountManagement:]
  -[CADMCProfileConnectionManagedConfigurationHandler .cxx_destruct]
  -[CADMCProfileConnectionManagedConfigurationHandler initWithMCProfileConnection:]
  -[CADMCProfileConnectionManagedConfigurationHandler mayShowLocalAccountsForBundleID:sourceAccountManagement:]
  -[CADMCProfileConnectionManagedConfigurationHandler isOpenInRestrictionInEffect]
  -[CADMCProfileConnectionManagedConfigurationHandler mayShowLocalAccountsForTargetBundleID:targetAccountManagement:]
  -[CADMCProfileConnectionManagedConfigurationHandler connection]


CADNotificationUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CADNotificationUtilities _gatherSharedCalendarInvitationsWithContext:]
  +[CADNotificationUtilities _logNotificationCountsForNotificationTypes:]
  +[CADNotificationUtilities _gatherSharedCalendarInviteReplyNotification:withContext:]
  +[CADNotificationUtilities storeIsReadOnlyDelegate:]
  +[CADNotificationUtilities _gatherSuggestionResourceChangeNotification:withContext:]
  +[CADNotificationUtilities CADDatabaseGetEventNotificationItemsWithDatabase:forSourceWithExternalIdentifier:excludingDelegateSources:filteredByShowsNotificationsFlag:earliestExpirationDate:notificationTypes:rowIDs:occurrenceDates:]
  +[CADNotificationUtilities _gatherSharedCalendarResourceChangeNotification:withContext:]
  +[CADNotificationUtilities _storeIsDelegate:]
  +[CADNotificationUtilities _gatherEventInvitationsAndRepliesWithContext:]
  +[CADNotificationUtilities _stringForNotificationType:]
  +[CADNotificationUtilities _gatherSharedCalendarResponsesAndResourceChangesWithContext:]


CADNotificationGatheringContext : NSObject /usr/lib/libSystem.B.dylib
 @property  ^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@B} database
 @property  NSArray *notificationTypes
 @property  NSArray *rowIDs
 @property  NSArray *occurrenceDates
 @property  double now
 @property  NSDate *earliestExpiringNotification

  // instance methods
  -[CADNotificationGatheringContext now]
  -[CADNotificationGatheringContext .cxx_destruct]
  -[CADNotificationGatheringContext database]
  -[CADNotificationGatheringContext rowIDs]
  -[CADNotificationGatheringContext initWithDatabase:forSourceWithExternalIdentifier:excludingDelegateSources:filteredByShowsNotificationsFlag:]
  -[CADNotificationGatheringContext notificationTypes]
  -[CADNotificationGatheringContext earliestExpiringNotification]
  -[CADNotificationGatheringContext occurrenceDates]
  -[CADNotificationGatheringContext shouldSkipNotificationForStore:]
  -[CADNotificationGatheringContext expirationTimestampForEvent:withInitialOccurrenceDate:]
  -[CADNotificationGatheringContext addNotificationWithType:rowID:occurrenceDate:expirationDate:]
  -[CADNotificationGatheringContext addNotificationWithType:rowID:expirationDate:]
  -[CADNotificationGatheringContext expirationTimestampForEvent:]
  -[CADNotificationGatheringContext expirationTimestampForRecurrence:event:]
  -[CADNotificationGatheringContext endDateOfLastOccurrenceInCacheForEvent:]


CADSpotlightOperationGroup : CADOperationGroup
  // class methods
  +[CADSpotlightOperationGroup whitelistedBundles]
  +[CADSpotlightOperationGroup requiresEventOrReminderAccess]
  +[CADSpotlightOperationGroup requiresReminderAccess]
  +[CADSpotlightOperationGroup requiresEventAccess]

  // instance methods
  -[CADSpotlightOperationGroup accessGrantedToPerformSelector:]
  -[CADSpotlightOperationGroup CADPushItemsToSpotlight:reply:]
  -[CADSpotlightOperationGroup _gatherAllCalendarItemUUIDs]


CADCalendarDatabaseCalCalendarInfoProvider : NSObject /usr/lib/libSystem.B.dylib <CADCalCalendarInfoProvider>
 @property  <CADDatabaseProvider> *databaseProvider

  // instance methods
  -[CADCalendarDatabaseCalCalendarInfoProvider databaseProvider]
  -[CADCalendarDatabaseCalCalendarInfoProvider calendarRowIDsInStoreWithRowID:]
  -[CADCalendarDatabaseCalCalendarInfoProvider naturalLanguageSuggestionsCalendarRowID]
  -[CADCalendarDatabaseCalCalendarInfoProvider .cxx_destruct]
  -[CADCalendarDatabaseCalCalendarInfoProvider suggestionsCalendarRowID]
  -[CADCalendarDatabaseCalCalendarInfoProvider initWithDatabaseProvider:]


CADEventsForAssistantSearchPredicate : EKPredicate <EKDefaultPropertiesLoading, NSSecureCoding>
 @property  NSString *location
 @property  NSString *notes
 @property  NSArray *participants
 @property  long long limit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADEventsForAssistantSearchPredicate supportsSecureCoding]

  // instance methods
  -[CADEventsForAssistantSearchPredicate copyWithZone:]
  -[CADEventsForAssistantSearchPredicate setLimit:]
  -[CADEventsForAssistantSearchPredicate limit]
  -[CADEventsForAssistantSearchPredicate .cxx_destruct]
  -[CADEventsForAssistantSearchPredicate setParticipants:]
  -[CADEventsForAssistantSearchPredicate setNotes:]
  -[CADEventsForAssistantSearchPredicate setLocation:]
  -[CADEventsForAssistantSearchPredicate encodeWithCoder:]
  -[CADEventsForAssistantSearchPredicate defaultPropertiesToLoad]
  -[CADEventsForAssistantSearchPredicate predicateFormat]
  -[CADEventsForAssistantSearchPredicate participants]
  -[CADEventsForAssistantSearchPredicate notes]
  -[CADEventsForAssistantSearchPredicate shouldLoadDefaultProperties]
  -[CADEventsForAssistantSearchPredicate copyMatchingItemsWithDatabase:]
  -[CADEventsForAssistantSearchPredicate location]
  -[CADEventsForAssistantSearchPredicate initWithTimeZone:startDate:endDate:title:location:notes:participants:limit:]
  -[CADEventsForAssistantSearchPredicate initWithCoder:]


CADEventCreatedFromSuggestionPredicate : EKPredicate <EKDefaultPropertiesLoading>
 @property  NSString *opaqueKey
 @property  NSString *extractionGroupIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADEventCreatedFromSuggestionPredicate supportsSecureCoding]
  +[CADEventCreatedFromSuggestionPredicate predicateForAllSuggestedEvents]

  // instance methods
  -[CADEventCreatedFromSuggestionPredicate .cxx_destruct]
  -[CADEventCreatedFromSuggestionPredicate encodeWithCoder:]
  -[CADEventCreatedFromSuggestionPredicate defaultPropertiesToLoad]
  -[CADEventCreatedFromSuggestionPredicate predicateFormat]
  -[CADEventCreatedFromSuggestionPredicate shouldLoadDefaultProperties]
  -[CADEventCreatedFromSuggestionPredicate isEqual:]
  -[CADEventCreatedFromSuggestionPredicate copyMatchingItemsWithDatabase:]
  -[CADEventCreatedFromSuggestionPredicate opaqueKey]
  -[CADEventCreatedFromSuggestionPredicate initWithOpaqueKey:]
  -[CADEventCreatedFromSuggestionPredicate initWithExtractionGroupIdentifier:]
  -[CADEventCreatedFromSuggestionPredicate extractionGroupIdentifier]
  -[CADEventCreatedFromSuggestionPredicate initWithCoder:]
  -[CADEventCreatedFromSuggestionPredicate initWithOpaqueKey:extractionGroupIdentifier:]


CADReminderOperationGroup : CADOperationGroup <CADReminderInterface>
  // class methods
  +[CADReminderOperationGroup requiresEventOrReminderAccess]
  +[CADReminderOperationGroup requiresReminderAccess]
  +[CADReminderOperationGroup requiresEventAccess]

  // instance methods
  -[CADReminderOperationGroup CADDatabaseGetDefaultCalendarForNewRemindersWithReply:]
  -[CADReminderOperationGroup CADDatabaseSetDefaultCalendarForNewReminders:]
  -[CADReminderOperationGroup CADDatabaseGetProperties:forReminders:reply:]
  -[CADReminderOperationGroup CADScheduledTaskCacheGetDaysAndTaskCounts:]
  -[CADReminderOperationGroup CADDatabaseGetCountOfRemindersWithPredicate:reply:]


CADNotificationCountOperationGroup : CADOperationGroup <CADNotificationCountInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADNotificationCountOperationGroup requiresEventOrReminderAccess]
  +[CADNotificationCountOperationGroup requiresReminderAccess]
  +[CADNotificationCountOperationGroup requiresEventAccess]

  // instance methods
  -[CADNotificationCountOperationGroup CADDatabaseGetNotificationCount:]


EKReminderPredicate : EKPredicate <EKDefaultPropertiesLoading>
 @property  NSString *listTitle
 @property  BOOL limitToCompletedOrIncomplete
 @property  BOOL completed
 @property  NSDate *dueAfter
 @property  NSDate *dueBefore
 @property  BOOL useCompletionDateAsAlternate
 @property  BOOL useDueDateAsCompletionDate
 @property  NSString *searchTerm
 @property  int sortOrder
 @property  unsigned long maxResults
 @property  BOOL shouldLoadDefaultProperties
 @property  NSArray *defaultPropertiesToLoad
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EKReminderPredicate supportsSecureCoding]
  +[EKReminderPredicate predicateWithCalendars:]

  // instance methods
  -[EKReminderPredicate searchTerm]
  -[EKReminderPredicate setSearchTerm:]
  -[EKReminderPredicate copyWithZone:]
  -[EKReminderPredicate sortOrder]
  -[EKReminderPredicate dueBefore]
  -[EKReminderPredicate dueAfter]
  -[EKReminderPredicate setSortOrder:]
  -[EKReminderPredicate .cxx_destruct]
  -[EKReminderPredicate setCompleted:]
  -[EKReminderPredicate encodeWithCoder:]
  -[EKReminderPredicate defaultPropertiesToLoad]
  -[EKReminderPredicate completed]
  -[EKReminderPredicate maxResults]
  -[EKReminderPredicate setMaxResults:]
  -[EKReminderPredicate shouldLoadDefaultProperties]
  -[EKReminderPredicate isEqual:]
  -[EKReminderPredicate copyMatchingItemsWithDatabase:]
  -[EKReminderPredicate setDueAfter:]
  -[EKReminderPredicate setDueBefore:]
  -[EKReminderPredicate setShouldLoadDefaultProperties:]
  -[EKReminderPredicate setDefaultPropertiesToLoad:]
  -[EKReminderPredicate setListTitle:]
  -[EKReminderPredicate setUseCompletionDateAsAlternate:]
  -[EKReminderPredicate setLimitToCompletedOrIncomplete:]
  -[EKReminderPredicate initWithCalendars:]
  -[EKReminderPredicate initWithCoder:]
  -[EKReminderPredicate limitToCompletedOrIncomplete]
  -[EKReminderPredicate useCompletionDateAsAlternate]
  -[EKReminderPredicate useDueDateAsCompletionDate]
  -[EKReminderPredicate listTitle]
  -[EKReminderPredicate setUseDueDateAsCompletionDate:]


EKPredicate : CADPredicate <NSSecureCoding>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSArray *calendars
 @property  NSString *title
 @property  NSSet *restrictedCalendarRowIDs

  // class methods
  +[EKPredicate supportsSecureCoding]

  // instance methods
  -[EKPredicate setEndDate:]
  -[EKPredicate startDate]
  -[EKPredicate .cxx_destruct]
  -[EKPredicate setTitle:]
  -[EKPredicate encodeWithCoder:]
  -[EKPredicate endDate]
  -[EKPredicate predicateFormat]
  -[EKPredicate title]
  -[EKPredicate calendars]
  -[EKPredicate setCalendars:]
  -[EKPredicate initWithCalendars:]
  -[EKPredicate setStartDate:]
  -[EKPredicate initWithCoder:]
  -[EKPredicate restrictedCalendarRowIDs]
  -[EKPredicate setRestrictedCalendarRowIDs:]


CADUpcomingEventsPredicate : CADPredicate <NSSecureCoding>
 @property  int limit

  // class methods
  +[CADUpcomingEventsPredicate supportsSecureCoding]
  +[CADUpcomingEventsPredicate predicateWithLimit:]

  // instance methods
  -[CADUpcomingEventsPredicate copyWithZone:]
  -[CADUpcomingEventsPredicate limit]
  -[CADUpcomingEventsPredicate encodeWithCoder:]
  -[CADUpcomingEventsPredicate predicateFormat]
  -[CADUpcomingEventsPredicate initWithLimit:]
  -[CADUpcomingEventsPredicate copyMatchingItemsWithDatabase:]
  -[CADUpcomingEventsPredicate initWithCoder:]


CADUnacknowledgedEventsPredicate : CADPredicate <NSSecureCoding>
  // class methods
  +[CADUnacknowledgedEventsPredicate supportsSecureCoding]
  +[CADUnacknowledgedEventsPredicate predicate]

  // instance methods
  -[CADUnacknowledgedEventsPredicate copyWithZone:]
  -[CADUnacknowledgedEventsPredicate predicateFormat]
  -[CADUnacknowledgedEventsPredicate copyMatchingItemsWithDatabase:]


CADServer : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, ClientConnectionDelegate, DatabaseChangeHandling, CalActivatable>
 @property  NSArray *modules
 @property  BOOL active
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *alarmQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CADServer _registerForNotifications]
  -[CADServer _dumpState]
  -[CADServer setWorkQueue:]
  -[CADServer init]
  -[CADServer activate]
  -[CADServer _registerForDatabaseCleanup]
  -[CADServer _deactivateAndExitWithStatus:]
  -[CADServer _exitWithStatus:]
  -[CADServer modules]
  -[CADServer setModules:]
  -[CADServer dealloc]
  -[CADServer alarmQueue]
  -[CADServer _finishInitializationWithDataAvailable]
  -[CADServer .cxx_destruct]
  -[CADServer workQueue]
  -[CADServer cleanupDatabase:]
  -[CADServer _handleDatabaseChanged]
  -[CADServer _registerForChangeTableCleanup]
  -[CADServer _enableICloudBackups]
  -[CADServer deactivate]
  -[CADServer _protectedDataDidBecomeAvailable]
  -[CADServer listener:shouldAcceptNewConnection:]
  -[CADServer _setUpSignalHandlers]
  -[CADServer setActive:]
  -[CADServer isActive]
  -[CADServer _registerActivityWithIdentifier:block:]
  -[CADServer _trimAndExtendOccurrenceCache]
  -[CADServer initWithModules:]
  -[CADServer _tearDownSignalHandlers]
  -[CADServer clientConnectionDied:]
  -[CADServer _registerForAnalyticsCollection]
  -[CADServer _registerForAlarmEvents]
  -[CADServer _registerForAttachmentCleanup]
  -[CADServer _handleXPCConnection:]
  -[CADServer _cleanupChangeTablesInDatabase:]
  -[CADServer _updateOccurrenceCacheTimeZone]
  -[CADServer _registerMaintenanceActivities]


CADPropertySearchPredicate : CADPredicate <EKCustomPropertiesLoading>
 @property  int entityType
 @property  NSArray *filters
 @property  NSArray *calendarRowIDs
 @property  CADObjectID *sourceID
 @property  NSArray *defaultPropertiesToLoad
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADPropertySearchPredicate supportsSecureCoding]

  // instance methods
  -[CADPropertySearchPredicate validate]
  -[CADPropertySearchPredicate entityType]
  -[CADPropertySearchPredicate .cxx_destruct]
  -[CADPropertySearchPredicate filters]
  -[CADPropertySearchPredicate encodeWithCoder:]
  -[CADPropertySearchPredicate defaultPropertiesToLoad]
  -[CADPropertySearchPredicate predicateFormat]
  -[CADPropertySearchPredicate shouldLoadDefaultProperties]
  -[CADPropertySearchPredicate copyMatchingItemsWithDatabase:]
  -[CADPropertySearchPredicate sourceID]
  -[CADPropertySearchPredicate setDefaultPropertiesToLoad:]
  -[CADPropertySearchPredicate initWithEntityType:filters:calendar:]
  -[CADPropertySearchPredicate initWithEntityType:filters:source:]
  -[CADPropertySearchPredicate initWithEntityType:filters:calendars:]
  -[CADPropertySearchPredicate initWithCoder:]
  -[CADPropertySearchPredicate calendarRowIDs]
  -[CADPropertySearchPredicate initWithEntityType:filters:calendars:source:]
  -[CADPropertySearchPredicate extendWhereClauseWithEntityTypeLimitation:withValues:andTypes:]
  -[CADPropertySearchPredicate extendWhereClauseWithCalendarOrSourceLimitation:withValues:andTypes:]
  -[CADPropertySearchPredicate buildWhereClauseWithValues:andTypes:]


CADPropertyFilter : CADFilter
 @property  long long property
 @property  long long comparison
 @property  NSString *stringValue
 @property  long long integerValue
 @property  NSDate *dateValue
 @property  BOOL isString
 @property  BOOL isInteger
 @property  BOOL isDate

  // class methods
  +[CADPropertyFilter supportsSecureCoding]

  // instance methods
  -[CADPropertyFilter validate]
  -[CADPropertyFilter integerValue]
  -[CADPropertyFilter .cxx_destruct]
  -[CADPropertyFilter dateValue]
  -[CADPropertyFilter comparison]
  -[CADPropertyFilter property]
  -[CADPropertyFilter encodeWithCoder:]
  -[CADPropertyFilter isInteger]
  -[CADPropertyFilter initWithProperty:comparison:integerValue:]
  -[CADPropertyFilter initWithProperty:comparison:stringValue:]
  -[CADPropertyFilter initWithProperty:comparison:dateValue:]
  -[CADPropertyFilter isString]
  -[CADPropertyFilter isDate]
  -[CADPropertyFilter initWithCoder:]
  -[CADPropertyFilter stringValue]
  -[CADPropertyFilter applicableToEntityType:]
  -[CADPropertyFilter extendWhereClause:usingOperation:withValues:andTypes:]
  -[CADPropertyFilter validateWithRequiredPropertyType:]


CADAccessOperationGroup : CADOperationGroup <CADAccessInterface>
  // class methods
  +[CADAccessOperationGroup requiresEventOrReminderAccess]
  +[CADAccessOperationGroup requiresReminderAccess]
  +[CADAccessOperationGroup requiresEventAccess]

  // instance methods
  -[CADAccessOperationGroup CADDatabaseResetWithReply:]
  -[CADAccessOperationGroup CADDatabaseGetAccess:]
  -[CADAccessOperationGroup CADDatabaseSetInitializationOptions:reply:]


LocalAttachmentCleanUpSupport : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[LocalAttachmentCleanUpSupport cleanUpOrphanedFiles]


CADCalendarOperationGroup : CADOperationGroup <CADCalendarInterface>
  // class methods
  +[CADCalendarOperationGroup requiresEventOrReminderAccess]
  +[CADCalendarOperationGroup requiresReminderAccess]
  +[CADCalendarOperationGroup requiresEventAccess]

  // instance methods
  -[CADCalendarOperationGroup CADCalendar:hasEvents:]
  -[CADCalendarOperationGroup CADDatabaseGetCalendarsWithFaultedProperties:reply:]
  -[CADCalendarOperationGroup CADCalendar:hasReminders:]
  -[CADCalendarOperationGroup _tryPerformBlockWithCalendarID:forAction:withBlock:]


CADBirthdayListener : NSObject /usr/lib/libSystem.B.dylib
 @property  <CalBirthdayListener> *ekBirthdayListener
 @property  Class listenerClass

  // class methods
  +[CADBirthdayListener sharedListener]
  +[CADBirthdayListener setBirthdayCalendarEnabled:]
  +[CADBirthdayListener birthdayCalendarEnabled]
  +[CADBirthdayListener start]

  // instance methods
  -[CADBirthdayListener init]
  -[CADBirthdayListener .cxx_destruct]
  -[CADBirthdayListener ekBirthdayListener]
  -[CADBirthdayListener setBirthdayCalendarEnabled:]
  -[CADBirthdayListener birthdayCalendarEnabled]
  -[CADBirthdayListener setEkBirthdayListener:]
  -[CADBirthdayListener setListenerClass:]
  -[CADBirthdayListener listenerClass]


CADSourceOperationGroup : CADOperationGroup <CADSourceInterface>
  // class methods
  +[CADSourceOperationGroup requiresEventOrReminderAccess]
  +[CADSourceOperationGroup requiresReminderAccess]
  +[CADSourceOperationGroup requiresEventAccess]

  // instance methods
  -[CADSourceOperationGroup _tryPerformBlockWithSourceID:forAction:withBlock:]
  -[CADSourceOperationGroup CADRemoveCalendarItemsOlderThanDate:ofType:inSource:reply:]
  -[CADSourceOperationGroup CADSourceRefresh:isUserRequested:reply:]
  -[CADSourceOperationGroup CADSourceGetGrantedDelegatesList:reply:]
  -[CADSourceOperationGroup CADSourceGetManagedConfigurationAccountAccess:reply:]
  -[CADSourceOperationGroup CADDatabaseGetLocalSource:]
  -[CADSourceOperationGroup CADSourceGetNotificationCollection:reply:]
  -[CADSourceOperationGroup CADSourceGetConstraints:reply:]
  -[CADSourceOperationGroup _tryPerformBlockWithSourceID:forAction:entityType:withBlock:]
  -[CADSourceOperationGroup CADCountCalendarItemsOfType:inSource:reply:]
  -[CADSourceOperationGroup CADSourceUpdateGrantedDelegatePermission:sourceID:reply:]
  -[CADSourceOperationGroup CADDatabaseGetLocalBirthdaySource:]
  -[CADSourceOperationGroup CADDatabaseGetSourcesWithFaultedProperties:reply:]


CADACAccountStoreAccountsProvider : NSObject /usr/lib/libSystem.B.dylib <CADACAccountsProvider>
 @property  ACAccountStore *accountStore

  // instance methods
  -[CADACAccountStoreAccountsProvider initWithAccountStore:]
  -[CADACAccountStoreAccountsProvider accounts]
  -[CADACAccountStoreAccountsProvider accountWithIdentifier:]
  -[CADACAccountStoreAccountsProvider .cxx_destruct]
  -[CADACAccountStoreAccountsProvider accountStore]


CADEntityWrapper : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  BOOL deleted

  // class methods
  +[CADEntityWrapper supportsSecureCoding]

  // instance methods
  -[CADEntityWrapper deleted]
  -[CADEntityWrapper loadedValues]
  -[CADEntityWrapper .cxx_destruct]
  -[CADEntityWrapper encodeWithCoder:]
  -[CADEntityWrapper initWithCalEntity:propertiesToLoad:]
  -[CADEntityWrapper objectID]
  -[CADEntityWrapper initWithCalEntity:]
  -[CADEntityWrapper initWithCoder:]


CADEventEntityWrapper : CADEntityWrapper
  // class methods
  +[CADEventEntityWrapper supportsSecureCoding]

  // instance methods
  -[CADEventEntityWrapper initWithCalEntity:propertiesToLoad:occurrenceDate:]
  -[CADEventEntityWrapper encodeWithCoder:]
  -[CADEventEntityWrapper occurrenceDate]
  -[CADEventEntityWrapper initWithCoder:]


CADNaturalLanguageSuggestedEventsSearchPredicate : EKPredicate <EKDefaultPropertiesLoading, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADNaturalLanguageSuggestedEventsSearchPredicate supportsSecureCoding]

  // instance methods
  -[CADNaturalLanguageSuggestedEventsSearchPredicate copyWithZone:]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate .cxx_destruct]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate initWithSearchString:allNLEvents:]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate encodeWithCoder:]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate defaultPropertiesToLoad]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate predicateFormat]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate shouldLoadDefaultProperties]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate copyMatchingItemsWithDatabase:]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate initWithSearchString:]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate initWithCoder:]


CADIdleChangeTrackingCleanupInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  double languishPeriod
 @property  int numberOfChanges

  // class methods
  +[CADIdleChangeTrackingCleanupInfo serverIdleChangeTrackingCleanupInfo]

  // instance methods
  -[CADIdleChangeTrackingCleanupInfo isEqual:]
  -[CADIdleChangeTrackingCleanupInfo numberOfChanges]
  -[CADIdleChangeTrackingCleanupInfo setNumberOfChanges:]
  -[CADIdleChangeTrackingCleanupInfo languishPeriod]
  -[CADIdleChangeTrackingCleanupInfo setLanguishPeriod:]
  -[CADIdleChangeTrackingCleanupInfo initWithLanguishPeriod:numberOfChanges:]
  -[CADIdleChangeTrackingCleanupInfo isEqualToInfo:]


CADCalSearchOperation : NSOperation /usr/lib/libbsm.0.dylib <CalSearchDataSink>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADCalSearchOperation operationWithConnection:filter:replyID:]

  // instance methods
  -[CADCalSearchOperation search]
  -[CADCalSearchOperation _completeOperation]
  -[CADCalSearchOperation main]
  -[CADCalSearchOperation dealloc]
  -[CADCalSearchOperation .cxx_destruct]
  -[CADCalSearchOperation cancel]
  -[CADCalSearchOperation calSearchShouldStopSearching:]
  -[CADCalSearchOperation calSearchComplete:]
  -[CADCalSearchOperation calSearch:foundOccurrences:cachedDays:cachedDaysIndexes:]
  -[CADCalSearchOperation calSearch:showResultsStartingOnDate:]
  -[CADCalSearchOperation replyID]
  -[CADCalSearchOperation initWithConnection:filter:replyID:]


CADInternalOperationGroup : CADOperationGroup <CADInternalInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADInternalOperationGroup requiresEventOrReminderAccess]
  +[CADInternalOperationGroup requiresReminderAccess]
  +[CADInternalOperationGroup requiresEventAccess]

  // instance methods
  -[CADInternalOperationGroup _internalAccessGranted]
  -[CADInternalOperationGroup CADInternalForceStatCollection:]
  -[CADInternalOperationGroup accessGrantedToPerformSelector:]


CADRespondedEventsPredicate : CADPredicate <EKDefaultPropertiesLoading, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADRespondedEventsPredicate supportsSecureCoding]
  +[CADRespondedEventsPredicate predicate]

  // instance methods
  -[CADRespondedEventsPredicate copyWithZone:]
  -[CADRespondedEventsPredicate defaultPropertiesToLoad]
  -[CADRespondedEventsPredicate predicateFormat]
  -[CADRespondedEventsPredicate shouldLoadDefaultProperties]


CADTestingOperationGroup : CADOperationGroup <CADTestingInterface>
  // class methods
  +[CADTestingOperationGroup requiresEventOrReminderAccess]
  +[CADTestingOperationGroup requiresReminderAccess]
  +[CADTestingOperationGroup requiresEventAccess]

  // instance methods
  -[CADTestingOperationGroup accessGrantedToPerformSelector:]
  -[CADTestingOperationGroup CADTestingSimulateDaemonCrash]
  -[CADTestingOperationGroup CADTestingCloseDatabase:]


CADChangeTrackingClientId : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *suffix
 @property  NSString *customClientId
 @property  BOOL hasCustomClientId

  // class methods
  +[CADChangeTrackingClientId supportsSecureCoding]

  // instance methods
  -[CADChangeTrackingClientId suffix]
  -[CADChangeTrackingClientId initWithSuffix:]
  -[CADChangeTrackingClientId clientId]
  -[CADChangeTrackingClientId initWithCustomClientId:]
  -[CADChangeTrackingClientId .cxx_destruct]
  -[CADChangeTrackingClientId hasCustomClientId]
  -[CADChangeTrackingClientId encodeWithCoder:]
  -[CADChangeTrackingClientId isEqual:]
  -[CADChangeTrackingClientId clientIdWithBundleId:]
  -[CADChangeTrackingClientId customClientId]
  -[CADChangeTrackingClientId isEqualToChangeTrackingClientId:]
  -[CADChangeTrackingClientId initWithCoder:]


CADDefaultPermissionValidator : NSObject /usr/lib/libSystem.B.dylib <CADPermissionValidator>
 @property  ClientConnection *connection
 @property  BOOL isFirstPartyCalendarApp
 @property  BOOL isCalendarDaemon
 @property  BOOL canModifySuggestedEventCalendar
 @property  BOOL canMakeSpotlightChanges
 @property  BOOL canModifyBirthdayCalendar
 @property  BOOL canModifyCalendarDatabase
 @property  BOOL testingAccessLevelGranted
 @property  BOOL internalAccessLevelGranted
 @property  BOOL storageManagementAccessGranted
 @property  BOOL hasContactsUIEntitlement
 @property  BOOL hasMigrationEntitlement
 @property  BOOL hasSyncClientEntitlement
 @property  BOOL hasCalendarToolEntitlement
 @property  BOOL hasChangeIdTrackingOverrideEntitlement
 @property  BOOL hasNotificationCountEntitlement
 @property  BOOL hasManagedConfigurationBundleIDOverrideEntitlement
 @property  BOOL shouldTrustClientEnforcedManagedConfigurationAccess
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CADDefaultPermissionValidator initWithClientConnection:]
  -[CADDefaultPermissionValidator hasContactsUIEntitlement]
  -[CADDefaultPermissionValidator hasChangeIdTrackingOverrideEntitlement]
  -[CADDefaultPermissionValidator .cxx_destruct]
  -[CADDefaultPermissionValidator _valueForBooleanEntitlement:defaultValue:]
  -[CADDefaultPermissionValidator internalAccessLevelGranted]
  -[CADDefaultPermissionValidator testingAccessLevelGranted]
  -[CADDefaultPermissionValidator isCalendarDaemon]
  -[CADDefaultPermissionValidator shouldTrustClientEnforcedManagedConfigurationAccess]
  -[CADDefaultPermissionValidator canModifySuggestedEventCalendar]
  -[CADDefaultPermissionValidator canModifyCalendarDatabase]
  -[CADDefaultPermissionValidator hasSyncClientEntitlement]
  -[CADDefaultPermissionValidator hasCalendarToolEntitlement]
  -[CADDefaultPermissionValidator hasManagedConfigurationBundleIDOverrideEntitlement]
  -[CADDefaultPermissionValidator isFirstPartyCalendarApp]
  -[CADDefaultPermissionValidator canModifyBirthdayCalendar]
  -[CADDefaultPermissionValidator storageManagementAccessGranted]
  -[CADDefaultPermissionValidator hasMigrationEntitlement]
  -[CADDefaultPermissionValidator connection]
  -[CADDefaultPermissionValidator canMakeSpotlightChanges]
  -[CADDefaultPermissionValidator hasNotificationCountEntitlement]


CADSyntheticRouteHypothesizerCache : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableDictionary *eventExternalURLToSyntheticRouteHypothesizerMap

  // class methods
  +[CADSyntheticRouteHypothesizerCache sharedInstance]

  // instance methods
  -[CADSyntheticRouteHypothesizerCache .cxx_destruct]
  -[CADSyntheticRouteHypothesizerCache workQueue]
  -[CADSyntheticRouteHypothesizerCache _init]
  -[CADSyntheticRouteHypothesizerCache addSyntheticRouteHypothesizer:forEventExternalURL:]
  -[CADSyntheticRouteHypothesizerCache removeSyntheticRouteHypothesizerForEventExternalURL:]
  -[CADSyntheticRouteHypothesizerCache eventExternalURLToSyntheticRouteHypothesizerMap]
  -[CADSyntheticRouteHypothesizerCache syntheticRouteHypothesizerForEventExternalURL:]


CADCalendarToolOperationGroup : CADOperationGroup <CADCalendarToolInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADCalendarToolOperationGroup requiresEventOrReminderAccess]
  +[CADCalendarToolOperationGroup requiresReminderAccess]
  +[CADCalendarToolOperationGroup requiresEventAccess]

  // instance methods
  -[CADCalendarToolOperationGroup accessGrantedToPerformSelector:]
  -[CADCalendarToolOperationGroup CADPurgeChangeTrackingReply:]
  -[CADCalendarToolOperationGroup CADPostSyntheticRouteHypothesis:forEventWithExternalURL:reply:]


CADMCAccountAccessHandler : NSObject /usr/lib/libSystem.B.dylib <CADAccountAccessHandler>
 @property  NSString *bundleIdentifier
 @property  <CADACAccountsProvider> *accountsProvider
 @property  <CADManagedConfigurationHandler> *managedConfigHandler
 @property  unsigned long accountManagement
 @property  <CADCalStoreInfoProvider> *calStoreInfoProvider
 @property  <CADCalCalendarInfoProvider> *calCalendarInfoProvider
 @property  <CADPermissionValidator> *permissionValidator
 @property  NSObject<OS_dispatch_queue> *cacheQueue
 @property  NSMutableDictionary *cachedRestrictedStoreInfos
 @property  NSArray *cachedAccounts

  // instance methods
  -[CADMCAccountAccessHandler _validateAction:]
  -[CADMCAccountAccessHandler accountsProvider]
  -[CADMCAccountAccessHandler _restrictedCalStoreInfosForAction:]
  -[CADMCAccountAccessHandler _filteredAccountsForAction:withUnfilteredAccounts:]
  -[CADMCAccountAccessHandler setCachedRestrictedStoreInfos:]
  -[CADMCAccountAccessHandler isActionAllowed:forAccountIdentifier:]
  -[CADMCAccountAccessHandler _restrictedCalendarRowIDsForAction:]
  -[CADMCAccountAccessHandler .cxx_destruct]
  -[CADMCAccountAccessHandler accountManagement]
  -[CADMCAccountAccessHandler cachedAccounts]
  -[CADMCAccountAccessHandler cacheQueue]
  -[CADMCAccountAccessHandler _isDisabledForAction:]
  -[CADMCAccountAccessHandler cachedRestrictedStoreInfos]
  -[CADMCAccountAccessHandler isAccountManaged:]
  -[CADMCAccountAccessHandler initWithCalStoreInfoProvider:calendarInfoProvider:accountsProvider:permissionValidator:managedConfigHandler:accountManagement:bundleIdentifier:]
  -[CADMCAccountAccessHandler setCachedAccounts:]
  -[CADMCAccountAccessHandler _existingCalStoreMapsToAccountIdentifier:]
  -[CADMCAccountAccessHandler reset]
  -[CADMCAccountAccessHandler _mayShowLocalAccountsForAction:]
  -[CADMCAccountAccessHandler restrictedCalendarRowIDsForAction:]
  -[CADMCAccountAccessHandler bundleIdentifier]
  -[CADMCAccountAccessHandler permissionValidator]
  -[CADMCAccountAccessHandler managedConfigHandler]
  -[CADMCAccountAccessHandler calStoreInfoProvider]
  -[CADMCAccountAccessHandler calCalendarInfoProvider]
  -[CADMCAccountAccessHandler _cachedAccounts]


CADEventOperationGroup : CADOperationGroup <CADEventInterface>
  // class methods
  +[CADEventOperationGroup monitorLocationAuthorizationStatusChanges:]
  +[CADEventOperationGroup requiresEventOrReminderAccess]
  +[CADEventOperationGroup requiresReminderAccess]
  +[CADEventOperationGroup requiresEventAccess]

  // instance methods
  -[CADEventOperationGroup CADDatabaseInsertSuggestedEventCalendarWithReply:]
  -[CADEventOperationGroup CADDatabaseGetDefaultCalendarForNewEventsInDelegateSource:withReply:]
  -[CADEventOperationGroup CADDatabaseGetEventWithUniqueID:reply:]
  -[CADEventOperationGroup CADDatabaseShouldWhitelistOrganizerPhoneNumberFromJunkChecks:reply:]
  -[CADEventOperationGroup CADDatabaseGetCountOfNotifiableEvents:]
  -[CADEventOperationGroup CADDatabaseGetOrCreateBirthdayCalendar:]
  -[CADEventOperationGroup CADDatabaseGetAllEventsWithUniqueID:reply:]
  -[CADEventOperationGroup CADOccurrenceCacheAreOccurrencesBeingGenerated:]
  -[CADEventOperationGroup CADOccurrenceCacheGetOccurrenceForCalendars:onDay:reply:]
  -[CADEventOperationGroup CADDatabaseGetCountOfUnacknowledgedEvents:]
  -[CADEventOperationGroup CADDatabaseActOnSuggestedEvent:action:validator:reply:]
  -[CADEventOperationGroup CADDatabaseSetShowsDeclinedEvents:]
  -[CADEventOperationGroup CADDatabaseGetOrCreateSubscribedCalendarsSource:]
  -[CADEventOperationGroup CADDatabaseGetEventWithEventIdentifier:reply:]
  -[CADEventOperationGroup CADDatabaseShouldWhitelistOrganizerEmailFromJunkChecks:reply:]
  -[CADEventOperationGroup CADDatabaseActOnSuggestedEvent:action:reply:]
  -[CADEventOperationGroup CADOccurrenceCacheGetOccurrenceCountsForCalendars:reply:]
  -[CADEventOperationGroup CADOccurrenceCacheSearchLocationsWithTerm:inCalendars:responseToken:reply:]
  -[CADEventOperationGroup CADDatabaseGetSuggestedEventCalendarWithReply:]
  -[CADEventOperationGroup _chooseRealSubscribedCalendarStoreFromStoresAndDeleteTheOtherOnes:withDatabase:]
  -[CADEventOperationGroup _getDefaultCalendarIDForNewEventsInStoreWithID:]
  -[CADEventOperationGroup CADDatabaseCanModifySuggestedEventCalendar:]
  -[CADEventOperationGroup CADOccurrenceCacheGetOccurrenceDateOfEventWithRowID:nearestDate:prefersForwardSearch:reply:]
  -[CADEventOperationGroup CADOccurrenceCacheSearchWithTerm:inCalendars:responseToken:reply:]
  -[CADEventOperationGroup CADDatabaseGetSecurityScopedLocalURLWrapperForAttachment:reply:]
  -[CADEventOperationGroup CADDatabaseSetBirthdayCalendarEnabled:withReply:]
  -[CADEventOperationGroup CADDatabaseGetDefaultLocalCalendarWithReply:]
  -[CADEventOperationGroup CADOccurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:reply:]
  -[CADEventOperationGroup CADDatabaseGetBirthdayCalendarEnabledWithReply:]
  -[CADEventOperationGroup CADDatabaseSetDefaultCalendarForNewEvents:delegateSource:]
  -[CADEventOperationGroup _CADDatabaseCanModifySuggestedEventCalendar]
  -[CADEventOperationGroup CADDatabaseGetTTLLocationAuthorizationStatus:]
  -[CADEventOperationGroup CADOccurrenceCacheDoEvents:haveOccurrencesAfterDate:reply:]
  -[CADEventOperationGroup CADDatabaseRemoveSuggestedEventCalendarWithReply:]
  -[CADEventOperationGroup CADOccurrenceCacheCancelSearchWithReplyID:]
  -[CADEventOperationGroup CADDatabaseGetNaturalLanguageSuggestedEventCalendarWithReply:]


CADBlacklistedDelegateAccountAccessHandler : NSObject /usr/lib/libSystem.B.dylib <CADAccountAccessHandler>
 @property  <CADCalStoreInfoProvider> *calStoreInfoProvider
 @property  <CADCalCalendarInfoProvider> *calCalendarInfoProvider
 @property  NSObject<OS_dispatch_queue> *cacheQueue
 @property  NSSet *cachedDelegateCalStoreInfos

  // instance methods
  -[CADBlacklistedDelegateAccountAccessHandler _delegateCalStoreInfos]
  -[CADBlacklistedDelegateAccountAccessHandler isActionAllowed:forAccountIdentifier:]
  -[CADBlacklistedDelegateAccountAccessHandler .cxx_destruct]
  -[CADBlacklistedDelegateAccountAccessHandler setCachedDelegateCalStoreInfos:]
  -[CADBlacklistedDelegateAccountAccessHandler initWithCalStoreInfoProvider:calendarInfoProvider:]
  -[CADBlacklistedDelegateAccountAccessHandler cacheQueue]
  -[CADBlacklistedDelegateAccountAccessHandler isAccountManaged:]
  -[CADBlacklistedDelegateAccountAccessHandler reset]
  -[CADBlacklistedDelegateAccountAccessHandler cachedDelegateCalStoreInfos]
  -[CADBlacklistedDelegateAccountAccessHandler restrictedCalendarRowIDsForAction:]
  -[CADBlacklistedDelegateAccountAccessHandler calStoreInfoProvider]
  -[CADBlacklistedDelegateAccountAccessHandler calCalendarInfoProvider]


CADCalendarDatabaseCalStoreInfoProvider : NSObject /usr/lib/libSystem.B.dylib <CADCalStoreInfoProvider>
 @property  <CADDatabaseProvider> *databaseProvider

  // instance methods
  -[CADCalendarDatabaseCalStoreInfoProvider databaseProvider]
  -[CADCalendarDatabaseCalStoreInfoProvider .cxx_destruct]
  -[CADCalendarDatabaseCalStoreInfoProvider initWithDatabaseProvider:]
  -[CADCalendarDatabaseCalStoreInfoProvider storeInfoList]


01 00 0600 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0800 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CADObjectChangeID 
01 00 0800 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CADObjectChangeIDHelper 
01 00 0800 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CADObjectID 
01 00 0800 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CDBDataProtectionObserver 
01 00 0800 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CDBPreferences 
01 00 0800 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CDBSpotlightUtilities 
01 00 0900 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalDescriptionBuilder 
01 00 0900 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalDeviceLockObserver 
01 00 0900 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalGrantedDelegate 
01 00 0900 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalLocationAuthorization 
01 00 0800 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CalSearch 
01 00 0900 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalSignalSensor 
01 00 0900 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalStopwatch 
01 00 0900 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalWidgetUtils 
01 00 0500 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DADConnection 
01 00 0500 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAEGrantedDelegate 
01 00 0900 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: EKCalendarDate 
01 00 0900 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: EKFoundInAppsEventTracker 
01 00 0400 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSEvent 
01 00 0200 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1100 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSecurityScopedURLWrapper 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUserActivity 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
