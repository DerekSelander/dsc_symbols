|| __DATA.__data _CADPredicateSignpostsHandle
|| __DATA.__objc_data _OBJC_CLASS_$_CADAccountAccessHandler
|| __DATA.__objc_data _OBJC_CLASS_$_CADCalendarDatabaseRedactor
|| __DATA.__objc_data _OBJC_CLASS_$_CADCompoundFilter
|| __DATA.__objc_data _OBJC_CLASS_$_CADEventsForConferenceURLPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_CADExcludeDelegatesAccountAccessHandler
|| __DATA.__objc_data _OBJC_CLASS_$_CADFilter
|| __DATA.__objc_data _OBJC_CLASS_$_CADIdleChangeTrackingCleanupInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CADNonRecurringEventsPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_CADPropertyFilter
|| __DATA.__objc_data _OBJC_CLASS_$_CADStatCollectionContext
|| __DATA.__objc_data _OBJC_CLASS_$_CADStatCollector
|| __DATA.__objc_data _OBJC_CLASS_$_CADStatsCalendars
|| __DATA.__objc_data _OBJC_CLASS_$_CADStatsEvents
|| __DATA.__objc_data _OBJC_CLASS_$_CADStatsGeneralCollection
|| __DATA.__objc_data _OBJC_CLASS_$_CADStatsOccurrences
|| __DATA.__objc_data _OBJC_CLASS_$_CADStatsStores
|| __DATA.__objc_data _OBJC_CLASS_$_CADSubscribedCalendarEventsPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_CADSyntheticRouteHypothesizerCache
|| __DATA.__objc_data _OBJC_CLASS_$_CalDAVLogScrubber
|| __DATA.__objc_data _OBJC_CLASS_$_EKAlarmOccurrence
|| __DATA.__objc_data _OBJC_METACLASS_$_CADAccountAccessHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_CADCalendarDatabaseRedactor
|| __DATA.__objc_data _OBJC_METACLASS_$_CADCompoundFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_CADEventsForConferenceURLPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_CADExcludeDelegatesAccountAccessHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_CADFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_CADIdleChangeTrackingCleanupInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CADNonRecurringEventsPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_CADPropertyFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_CADStatCollectionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CADStatCollector
|| __DATA.__objc_data _OBJC_METACLASS_$_CADStatsCalendars
|| __DATA.__objc_data _OBJC_METACLASS_$_CADStatsEvents
|| __DATA.__objc_data _OBJC_METACLASS_$_CADStatsGeneralCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_CADStatsOccurrences
|| __DATA.__objc_data _OBJC_METACLASS_$_CADStatsStores
|| __DATA.__objc_data _OBJC_METACLASS_$_CADSubscribedCalendarEventsPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_CADSyntheticRouteHypothesizerCache
|| __DATA.__objc_data _OBJC_METACLASS_$_CalDAVLogScrubber
|| __DATA.__objc_data _OBJC_METACLASS_$_EKAlarmOccurrence
|| __DATA.__objc_ivar _OBJC_IVAR_$_CADOperationGroup._conn
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKPredicate._timeZone
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKPredicate._uuid
|| __DATA_CONST.__const _CADDatabaseStorageUsageAttachmentsKey
|| __DATA_CONST.__const _CADDatabaseStorageUsageEventsKey
|| __DATA_CONST.__const _CADStatsCalendarEventName
|| __DATA_CONST.__const _CADStatsCollectionEventName
|| __DATA_CONST.__const _CADStatsEventEventName
|| __DATA_CONST.__const _CADStatsOccurrenceEventName
|| __DATA_CONST.__const _CADStatsStoreEventName
|| __DATA_CONST.__const _CADTTLLocationAuthorizationStatusChangedNotification
|| __DATA_CONST.__const __CADDaemonStartedNotification
|| __DATA_DIRTY.__common _CADLogHandle
|| __DATA_DIRTY.__common _CADMCLogHandle
|| __DATA_DIRTY.__common _CADNotificationLogHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADCalendarItemsWithExternalIdentifierPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADChangeTrackingClientId
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADContactEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADDatabaseInitializationOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADDefaultPermissionValidator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADEntityWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADEventCreatedFromSuggestionPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADEventEntityWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADEventPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADEventTimeWindowPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADEventsForAssistantSearchPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADGenerationStampedObjectID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADGroupedAccountAccessHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADInMemoryChangeTimestamp
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADMCAccountAccessHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADNaturalLanguageSuggestedEventsSearchPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADNotifiableEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADNotificationCenterVisibleEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADOperationGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADOperationProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADPropertySearchPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADRespondedEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADRouteHypothesis
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADSequenceToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADTravelEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADUnacknowledgedEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADUnalertedEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADUpNextEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADUpcomingEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CADXPCProxyHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKMasterEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKScheduleAgentClientEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADCalendarItemsWithExternalIdentifierPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADChangeTrackingClientId
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADContactEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADDatabaseInitializationOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADDefaultPermissionValidator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADEntityWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADEventCreatedFromSuggestionPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADEventEntityWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADEventPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADEventTimeWindowPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADEventsForAssistantSearchPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADGenerationStampedObjectID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADGroupedAccountAccessHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADInMemoryChangeTimestamp
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADMCAccountAccessHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADNaturalLanguageSuggestedEventsSearchPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADNotifiableEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADNotificationCenterVisibleEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADOperationGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADOperationProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADPropertySearchPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADRespondedEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADRouteHypothesis
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADSequenceToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADTravelEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADUnacknowledgedEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADUnalertedEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADUpNextEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADUpcomingEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CADXPCProxyHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKMasterEventsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKScheduleAgentClientEventsPredicate
|| __TEXT.__text _CADAccountActionDescription
|| __TEXT.__text _CADAccountManagementFromSource
|| __TEXT.__text _CADAccountManagementFromTarget
|| __TEXT.__text _CADCopyEntityInDatabase
|| __TEXT.__text _CADEKPersistentEventDefaultPropertiesToLoad
|| __TEXT.__text _CADEKPersistentEventMinimumDefaultPropertiesToLoad
|| __TEXT.__text _CADEntityCopyObjectID
|| __TEXT.__text _CADEntityCopyObjectIDUnlocked
|| __TEXT.__text _CADEntityExistsInDatabaseAndIsAccessible
|| __TEXT.__text _CADEntityIsInManagedStore
|| __TEXT.__text _CADEntityIsInRestrictedStore
|| __TEXT.__text _CADLogInitIfNeeded
|| __TEXT.__text _CADOwningEntity
|| __TEXT.__text _CADRegisterStatsCollectionCallback
|| __TEXT.__text _CADSourceFromAccountManagement
|| __TEXT.__text _CADStatsCollectWithAllStatCollectorsAndContext
|| __TEXT.__text _CADStatsCollectWithStatCollectorsAndContext
|| __TEXT.__text _CADTargetFromAccountManagement
|| __TEXT.__text _CalEntityCopyProperty
|| __TEXT.__text _CalEntityCopyPropertyValues
|| __TEXT.__text _CalFetchedObjectDictionary
|| __TEXT.__text _CalGetEntityIDFromFetchedObjectDictonary
|| __TEXT.__text _CalGetValuesFromFetchedObjectDictionary
|| __TEXT.__text _GetSharedXPCInterfaceForCADClientInterface
|| __TEXT.__text _GetSharedXPCInterfaceForCADInterface
|| __TEXT.__text __CADDeleteEntity
|| __TEXT.__text __CADGetEntity
|| __TEXT.__text __CalEntitySetProperty
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppSupport: _CPFileCompressionZDeflate
__ AppSupport: _CPRecordCopyProperty
__ AppSupport: _CPRecordGetID
__ AppSupport: _CPRecordGetProperty
__ AppSupport: _CPRecordGetPropertyDescriptor
__ AppSupport: _CPRecordGetStore
__ AppSupport: _CPRecordGetTypeID
__ AppSupport: _CPRecordSetProperty
__ AppSupport: _CPRecordStoreGetContext
__ CalendarDatabase: _CDBLockingAssertionsEnabled
__ CalendarDatabase: _CalAlarmCopyDefaultAllDayAlarmOffset
__ CalendarDatabase: _CalAlarmCopyDefaultTimedAlarmOffset
__ CalendarDatabase: _CalAlarmCopyOwningEntity
__ CalendarDatabase: _CalAlarmCopyUUID
__ CalendarDatabase: _CalAlarmGetAcknowledgedDate
__ CalendarDatabase: _CalAlarmGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalAlarmGetUID
__ CalendarDatabase: _CalAlarmIsDefaultAlarm
__ CalendarDatabase: _CalAlarmOccurrenceGetAlarm
__ CalendarDatabase: _CalAlarmOccurrenceGetEventOccurrence
__ CalendarDatabase: _CalAlarmOccurrenceGetFireDate
__ CalendarDatabase: _CalAlertInviteeDeclines
__ CalendarDatabase: _CalAttachmentCopyOwner
__ CalendarDatabase: _CalAttachmentFileCopyAttachmentContainerForStore
__ CalendarDatabase: _CalAttachmentFileCopyStore
__ CalendarDatabase: _CalAttachmentFileCopyUUID
__ CalendarDatabase: _CalAttachmentGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalAttendeeCopyDisplayName
__ CalendarDatabase: _CalAttendeeCopyEmailAddress
__ CalendarDatabase: _CalAttendeeCopyFirstName
__ CalendarDatabase: _CalAttendeeCopyLastName
__ CalendarDatabase: _CalAttendeeCopyOwningEvent
__ CalendarDatabase: _CalAttendeeCopyResponseComment
__ CalendarDatabase: _CalAttendeeGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalAttendeeGetProposedStartDate
__ CalendarDatabase: _CalAttendeeGetProposedStartDateStatus
__ CalendarDatabase: _CalAttendeeGetStatus
__ CalendarDatabase: _CalAttendeeGetUID
__ CalendarDatabase: _CalAttendeeGetUseDeletedByOrganizerStatusInStore
__ CalendarDatabase: _CalAttendeeIsStatusKnownForInvitedEventsInStore
__ CalendarDatabase: _CalAttendeeIsStatusKnownForOrganizedEventsInStore
__ CalendarDatabase: _CalAttendeeRequireSearchInSingleAccountInStore
__ CalendarDatabase: _CalAuxDatabaseAccountCopyAccountID
__ CalendarDatabase: _CalAuxDatabaseAccountSetAccountID
__ CalendarDatabase: _CalAuxDatabaseAddAccount
__ CalendarDatabase: _CalAuxDatabaseCopyAccounts
__ CalendarDatabase: _CalAuxDatabaseGetUID
__ CalendarDatabase: _CalAuxDatabaseRemoveAccount
__ CalendarDatabase: _CalCalendarCanContainEntityType
__ CalendarDatabase: _CalCalendarCanContainEntityTypeAndStoreAllowsIt
__ CalendarDatabase: _CalCalendarCopyColorString
__ CalendarDatabase: _CalCalendarCopySharees
__ CalendarDatabase: _CalCalendarCopyStore
__ CalendarDatabase: _CalCalendarCopySubCalAccountID
__ CalendarDatabase: _CalCalendarCopySubscriptionURL
__ CalendarDatabase: _CalCalendarCopyTitle
__ CalendarDatabase: _CalCalendarCopyType
__ CalendarDatabase: _CalCalendarCopyURI
__ CalendarDatabase: _CalCalendarCopyUUID
__ CalendarDatabase: _CalCalendarGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalCalendarGetSharingStatus
__ CalendarDatabase: _CalCalendarGetUID
__ CalendarDatabase: _CalCalendarHasEvents
__ CalendarDatabase: _CalCalendarInsertBirthdayCalendar
__ CalendarDatabase: _CalCalendarIsBirthdayCalendar
__ CalendarDatabase: _CalCalendarIsFacebookBirthdayCalendar
__ CalendarDatabase: _CalCalendarIsFamilyCalendar
__ CalendarDatabase: _CalCalendarIsFoundInMailCalendar
__ CalendarDatabase: _CalCalendarIsHidden
__ CalendarDatabase: _CalCalendarIsHolidaySubscribedCalendar
__ CalendarDatabase: _CalCalendarIsIgnoringEventAlerts
__ CalendarDatabase: _CalCalendarIsIgnoringSharedCalendarNotifications
__ CalendarDatabase: _CalCalendarIsNaturalLanguageSuggestedEventsCalendar
__ CalendarDatabase: _CalCalendarIsNotificationsCollection
__ CalendarDatabase: _CalCalendarIsSubscribed
__ CalendarDatabase: _CalCalendarItemCopyCalendar
__ CalendarDatabase: _CalCalendarItemCopyDescription
__ CalendarDatabase: _CalCalendarItemCopyLocation
__ CalendarDatabase: _CalCalendarItemCopyOrganizer
__ CalendarDatabase: _CalCalendarItemCopyPreferredLocation
__ CalendarDatabase: _CalCalendarItemCopyRecurrences
__ CalendarDatabase: _CalCalendarItemCopySelfAttendee
__ CalendarDatabase: _CalCalendarItemCopySummary
__ CalendarDatabase: _CalCalendarItemCopyURL
__ CalendarDatabase: _CalCalendarItemGetAvailabilitySupportedByStore
__ CalendarDatabase: _CalCalendarItemGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalCalendarItemGetRowID
__ CalendarDatabase: _CalCalendarItemGetStatus
__ CalendarDatabase: _CalCalendarItemHasAttendees
__ CalendarDatabase: _CalCalendarItemHasClientLocation
__ CalendarDatabase: _CalCalendarItemHasRecurrenceRules
__ CalendarDatabase: _CalCalendarItemIsAllDay
__ CalendarDatabase: _CalCalendarItemIsFloating
__ CalendarDatabase: _CalCalendarMigrateSubscribedCalendarToStore
__ CalendarDatabase: _CalCalendarSetInvitationStatus
__ CalendarDatabase: _CalConferenceCopyOwner
__ CalendarDatabase: _CalConferenceGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalContactCopyOwner
__ CalendarDatabase: _CalContactGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalCreateiCalendarDataFromCalEntitiesWithOptions
__ CalendarDatabase: _CalCreateiCalendarDataFromCalendarWithOptions
__ CalendarDatabase: _CalDatabaseBackupDatabaseFile
__ CalendarDatabase: _CalDatabaseBackupDatabaseFileAndAttachments
__ CalendarDatabase: _CalDatabaseBackupToICBU
__ CalendarDatabase: _CalDatabaseCleanUpDeclinedEvents
__ CalendarDatabase: _CalDatabaseCleanUpOrphanedLocalAttachments
__ CalendarDatabase: _CalDatabaseCleanupDanglers
__ CalendarDatabase: _CalDatabaseClearChangedObjectIDsUpToSequenceNumberForClient
__ CalendarDatabase: _CalDatabaseClearIndividualChangeRowIDsForClient
__ CalendarDatabase: _CalDatabaseClearRestoreGenerationChangedDelegate
__ CalendarDatabase: _CalDatabaseCopyAlarmOccurrencesInDateRange
__ CalendarDatabase: _CalDatabaseCopyAlarmWithExternalIDInStore
__ CalendarDatabase: _CalDatabaseCopyAlarmWithUUID
__ CalendarDatabase: _CalDatabaseCopyAllAuxDatabases
__ CalendarDatabase: _CalDatabaseCopyAllEntitiesWithPropertyInCalendarOrStore
__ CalendarDatabase: _CalDatabaseCopyAllErrors
__ CalendarDatabase: _CalDatabaseCopyAllEventsWithUniqueIdentifierInStore
__ CalendarDatabase: _CalDatabaseCopyAllNaturalLanguageSuggestedEventsMatchingSummary
__ CalendarDatabase: _CalDatabaseCopyAttachmentFileWithExternalIDInStore
__ CalendarDatabase: _CalDatabaseCopyAttachmentWithUUID
__ CalendarDatabase: _CalDatabaseCopyAuxDatabaseAccountForAccountID
__ CalendarDatabase: _CalDatabaseCopyAuxDatabaseForPersonaID
__ CalendarDatabase: _CalDatabaseCopyAuxDatabaseWithUID
__ CalendarDatabase: _CalDatabaseCopyBirthdayCalendar
__ CalendarDatabase: _CalDatabaseCopyCalendarItemUUIDs
__ CalendarDatabase: _CalDatabaseCopyCalendarItemWithUUID
__ CalendarDatabase: _CalDatabaseCopyCalendarItemsWithCalendarFilter
__ CalendarDatabase: _CalDatabaseCopyCalendarItemsWithUUIDs
__ CalendarDatabase: _CalDatabaseCopyCalendarItemsWithUniqueIdentifier
__ CalendarDatabase: _CalDatabaseCopyCalendarWithExternalIDInStore
__ CalendarDatabase: _CalDatabaseCopyCalendarWithUID
__ CalendarDatabase: _CalDatabaseCopyChangesSinceSequenceNumber
__ CalendarDatabase: _CalDatabaseCopyDefaultLocalCalendar
__ CalendarDatabase: _CalDatabaseCopyDefaultOrAnyReadWriteCalendarForNewEvents
__ CalendarDatabase: _CalDatabaseCopyDirectoryPath
__ CalendarDatabase: _CalDatabaseCopyDirectoryPathForDatabase
__ CalendarDatabase: _CalDatabaseCopyEntitiesWhere
__ CalendarDatabase: _CalDatabaseCopyEventIDsOfEventsMatching
__ CalendarDatabase: _CalDatabaseCopyEventOccurrenceCache
__ CalendarDatabase: _CalDatabaseCopyEventOccurrenceNearestToDate
__ CalendarDatabase: _CalDatabaseCopyEventOccurrenceNearestToDatePreferringForwardSearch
__ CalendarDatabase: _CalDatabaseCopyEventOccurrencesInDateRangeEx
__ CalendarDatabase: _CalDatabaseCopyEventOccurrencesInDateRangeWithEventFilter
__ CalendarDatabase: _CalDatabaseCopyEventWithPublicID
__ CalendarDatabase: _CalDatabaseCopyEventWithUID
__ CalendarDatabase: _CalDatabaseCopyEventWithUUID
__ CalendarDatabase: _CalDatabaseCopyEventWithUniqueIdentifierInStore
__ CalendarDatabase: _CalDatabaseCopyFirstNaturalLanguageSuggestedEventMatchingSummary
__ CalendarDatabase: _CalDatabaseCopyLocalStore
__ CalendarDatabase: _CalDatabaseCopyNaturalLanguageSuggestionsCalendar
__ CalendarDatabase: _CalDatabaseCopyOfAllCalendarsInStore
__ CalendarDatabase: _CalDatabaseCopyOfAllCalendarsInStoreWithOptions
__ CalendarDatabase: _CalDatabaseCopyOfAllEventsCreatedFromSuggestionsInStore
__ CalendarDatabase: _CalDatabaseCopyOfAllEventsCreatedFromSuggestionsWithExtractionGroupIdentifierInStore
__ CalendarDatabase: _CalDatabaseCopyOfAllEventsWithScheduleAgentClientAndCalendarUID
__ CalendarDatabase: _CalDatabaseCopyOfAllNotifiableEventsInStore
__ CalendarDatabase: _CalDatabaseCopyOfAllNotifications
__ CalendarDatabase: _CalDatabaseCopyOfAllRepliedEventsInStore
__ CalendarDatabase: _CalDatabaseCopyOfAllStores
__ CalendarDatabase: _CalDatabaseCopyOfAllUnacknowledgedEventsInStore
__ CalendarDatabase: _CalDatabaseCopyOfAllUnalertedEventsInStore
__ CalendarDatabase: _CalDatabaseCopyOrCreateDefaultCalendarForNewEvents
__ CalendarDatabase: _CalDatabaseCopyProperty
__ CalendarDatabase: _CalDatabaseCopyResourceChangeWithUID
__ CalendarDatabase: _CalDatabaseCopyStoreWithUID
__ CalendarDatabase: _CalDatabaseCopyStoreWithUUID
__ CalendarDatabase: _CalDatabaseCopySubscribedCalendarStoreCreateIfNeeded
__ CalendarDatabase: _CalDatabaseCopySuggestionsCalendar
__ CalendarDatabase: _CalDatabaseCopyUniqueIdentifier
__ CalendarDatabase: _CalDatabaseCreateAuxDatabaseAccount
__ CalendarDatabase: _CalDatabaseCreateWithAuxDatabaseRef
__ CalendarDatabase: _CalDatabaseCreateWithConfiguration
__ CalendarDatabase: _CalDatabaseCreateWithConfigurationForAccountID
__ CalendarDatabase: _CalDatabaseCreateWithOptions
__ CalendarDatabase: _CalDatabaseEnumerateDatabases
__ CalendarDatabase: _CalDatabaseGetAuxDatabaseChangesSequence
__ CalendarDatabase: _CalDatabaseGetAuxilliaryDatabaseID
__ CalendarDatabase: _CalDatabaseGetCalendarDataContainerProvider
__ CalendarDatabase: _CalDatabaseGetChangedEKObjectsForClient
__ CalendarDatabase: _CalDatabaseGetChangedObjectIDsSinceSequenceNumberForClient
__ CalendarDatabase: _CalDatabaseGetCountOfCalendarItemsInStore
__ CalendarDatabase: _CalDatabaseGetIDOfOneEventWithAnErrorPerSource
__ CalendarDatabase: _CalDatabaseGetPreferences
__ CalendarDatabase: _CalDatabaseGetSequenceNumber
__ CalendarDatabase: _CalDatabaseGetStoreForPersistentChangeTrackingClientIdentifier
__ CalendarDatabase: _CalDatabaseInsertNaturalLanguageSuggestionsCalendar
__ CalendarDatabase: _CalDatabaseInsertSuggestionsCalendar
__ CalendarDatabase: _CalDatabaseMultiLock
__ CalendarDatabase: _CalDatabasePerformMigrationIfNeeded
__ CalendarDatabase: _CalDatabaseProcessEventsWithCalendarFilter
__ CalendarDatabase: _CalDatabasePurgeIdlePersistentChangeTrackingClients
__ CalendarDatabase: _CalDatabaseRebuildOccurrenceCache
__ CalendarDatabase: _CalDatabaseRegisterClientForPersistentChangeTracking
__ CalendarDatabase: _CalDatabaseRegisterClientForPersistentChangeTrackingInStore
__ CalendarDatabase: _CalDatabaseReindexSpotlightIfAllowed
__ CalendarDatabase: _CalDatabaseRemoveNaturalLanguageSuggestionsCalendar
__ CalendarDatabase: _CalDatabaseRemoveProperty
__ CalendarDatabase: _CalDatabaseRemoveSuggestionsCalendar
__ CalendarDatabase: _CalDatabaseRequestApplicationSnapshotUpdateWithRateLimiter
__ CalendarDatabase: _CalDatabaseRequestWidgetRefreshWithRateLimiter
__ CalendarDatabase: _CalDatabaseReset
__ CalendarDatabase: _CalDatabaseRestoreFromBackupDatabaseFile
__ CalendarDatabase: _CalDatabaseRestoreFromBackupDatabaseFileAndAttachments
__ CalendarDatabase: _CalDatabaseRestoreFromICBU
__ CalendarDatabase: _CalDatabaseRevert
__ CalendarDatabase: _CalDatabaseSave
__ CalendarDatabase: _CalDatabaseSaveWithOptions
__ CalendarDatabase: _CalDatabaseSetChangeLoggingEnabled
__ CalendarDatabase: _CalDatabaseSetClientIdentifier
__ CalendarDatabase: _CalDatabaseSetClientName
__ CalendarDatabase: _CalDatabaseSetDefaultCalendarForNewEvents
__ CalendarDatabase: _CalDatabaseSetDefaultCalendarForNewEventsInStore
__ CalendarDatabase: _CalDatabaseSetIntegrityErrorReportingDelegate
__ CalendarDatabase: _CalDatabaseSetIsSpotlightTesting
__ CalendarDatabase: _CalDatabaseSetIsUnitTesting
__ CalendarDatabase: _CalDatabaseSetProperty
__ CalendarDatabase: _CalDatabaseSetPropertyModificationLoggingEnabled
__ CalendarDatabase: _CalDatabaseSetRestoreGenerationChangedDelegate
__ CalendarDatabase: _CalDatabaseSetStatementCacheLimit
__ CalendarDatabase: _CalDatabaseWaitForSpotlight
__ CalendarDatabase: _CalEntityGetID
__ CalendarDatabase: _CalEntityGetType
__ CalendarDatabase: _CalEntityIsDeleted
__ CalendarDatabase: _CalEntityIsNew
__ CalendarDatabase: _CalEntityIsOfType
__ CalendarDatabase: _CalErrorCopyOwner
__ CalendarDatabase: _CalErrorGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalEventActionCopyOwningEvent
__ CalendarDatabase: _CalEventActionGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalEventCancelDeletedEventsInStore
__ CalendarDatabase: _CalEventCopyAlarms
__ CalendarDatabase: _CalEventCopyAttendees
__ CalendarDatabase: _CalEventCopyCalendar
__ CalendarDatabase: _CalEventCopyDescription
__ CalendarDatabase: _CalEventCopyLocation_Deprecated
__ CalendarDatabase: _CalEventCopyOrganizer
__ CalendarDatabase: _CalEventCopyStartTimeZone
__ CalendarDatabase: _CalEventCopyStore
__ CalendarDatabase: _CalEventCopySummary
__ CalendarDatabase: _CalEventCopyURI
__ CalendarDatabase: _CalEventCopyURL
__ CalendarDatabase: _CalEventCopyUniqueIdentifier
__ CalendarDatabase: _CalEventDeclineDeletedInvitationsInStore
__ CalendarDatabase: _CalEventDurationConstrainedToRecurrenceIntervalInStore
__ CalendarDatabase: _CalEventGetDeliverySourceOrExternalIDRequiredForResponseInStore
__ CalendarDatabase: _CalEventGetDuration
__ CalendarDatabase: _CalEventGetEndDate
__ CalendarDatabase: _CalEventGetFutureStartDateLimitedToOccurrenceCacheBoundsInStore
__ CalendarDatabase: _CalEventGetInvitationChangedProperties
__ CalendarDatabase: _CalEventGetJunkStatus
__ CalendarDatabase: _CalEventGetOccurrenceOrderEnforcedAfterDetachmentInStore
__ CalendarDatabase: _CalEventGetOccurrencesMustOccurOnSeparateDaysInStore
__ CalendarDatabase: _CalEventGetParticipationStatus
__ CalendarDatabase: _CalEventGetParticipationStatusModifiedDate
__ CalendarDatabase: _CalEventGetProposedStatusRequiredForResponseInStore
__ CalendarDatabase: _CalEventGetRejectedStatusChangeRequiresNoExternalStatusInStore
__ CalendarDatabase: _CalEventGetStartDate
__ CalendarDatabase: _CalEventGetStartDateOfEarliestOccurrenceEndingAfterDate
__ CalendarDatabase: _CalEventGetStatus
__ CalendarDatabase: _CalEventGetStatusIsAccurateInStore
__ CalendarDatabase: _CalEventGetTravelAdvisoryBehavior
__ CalendarDatabase: _CalEventGetUID
__ CalendarDatabase: _CalEventHasPredictedLocation
__ CalendarDatabase: _CalEventIsAllDay
__ CalendarDatabase: _CalEventIsCandidateForTravelAdvisories
__ CalendarDatabase: _CalEventIsDetached
__ CalendarDatabase: _CalEventIsImmediatelyEligibleForTravelAdvisories
__ CalendarDatabase: _CalEventIsProposed
__ CalendarDatabase: _CalEventIsRecurring
__ CalendarDatabase: _CalEventOccurrenceCacheCopyAllDaysAndOccurrenceCounts
__ CalendarDatabase: _CalEventOccurrenceCacheCopyEventOccurrencesAfterDate
__ CalendarDatabase: _CalEventOccurrenceCacheCopyEventOccurrencesInDateRange
__ CalendarDatabase: _CalEventOccurrenceCacheCopyEventOccurrencesWithIDsAfterDate
__ CalendarDatabase: _CalEventOccurrenceCacheCopyOccurrencesOnDay
__ CalendarDatabase: _CalEventOccurrenceCacheCopyTimeZone
__ CalendarDatabase: _CalEventOccurrenceCacheDoEventsHaveOccurrencesAfterDate
__ CalendarDatabase: _CalEventOccurrenceCacheProcessEventOccurrencesInDateRange
__ CalendarDatabase: _CalEventOccurrenceCacheTrimExtendAndUpdate
__ CalendarDatabase: _CalEventOccurrenceCreateForInitialOccurrence
__ CalendarDatabase: _CalEventOccurrenceCreateForInitialOccurrenceWithTimeZone
__ CalendarDatabase: _CalEventOccurrenceGetDate
__ CalendarDatabase: _CalEventOccurrenceGetEvent
__ CalendarDatabase: _CalEventOccurrenceGetTypeID
__ CalendarDatabase: _CalEventOccurrencesExistForEventInDateRange
__ CalendarDatabase: _CalEventPreferredLocationIsAConferenceRoom
__ CalendarDatabase: _CalEventRequiresOutgoingInvitationsInDefaultCalendarInStore
__ CalendarDatabase: _CalEventResponseCommentsSupportedInStore
__ CalendarDatabase: _CalEventSetInvitationChangedProperties
__ CalendarDatabase: _CalEventSetNeedsNotification
__ CalendarDatabase: _CalEventURLFieldSupportedInStore
__ CalendarDatabase: _CalExceptionDateCopyOwner
__ CalendarDatabase: _CalExceptionDateGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalFilterCreateWithDatabaseFilteringCalendars
__ CalendarDatabase: _CalFilterCreateWithDatabaseFilteringCalendarsWithUIDs
__ CalendarDatabase: _CalFilterCreateWithDatabaseShowingAll
__ CalendarDatabase: _CalFilterCreateWithDatabaseShowingCalendarsWithUIDs
__ CalendarDatabase: _CalFilterCreateWithDatabaseShowingCalendarsWithUIDsAndEntityType
__ CalendarDatabase: _CalFilterSetSearchTerm
__ CalendarDatabase: _CalGetDatabaseForRecord
__ CalendarDatabase: _CalGetRecordLock
__ CalendarDatabase: _CalHasCurrentUserInvitedAttendeeWithEmail
__ CalendarDatabase: _CalHasCurrentUserInvitedAttendeeWithPhoneNumber
__ CalendarDatabase: _CalHasCurrentUserRepondedPositivelyToInvitationsWithAttendeeWithEmail
__ CalendarDatabase: _CalHasCurrentUserRepondedPositivelyToInvitationsWithAttendeeWithPhoneNumber
__ CalendarDatabase: _CalHasCurrentUserRespondedPositivelyToInvitationsFromOrganizerWithEmail
__ CalendarDatabase: _CalHasCurrentUserRespondedPositivelyToInvitationsFromOrganizerWithPhoneNumber
__ CalendarDatabase: _CalIdentityGarbageCollectOrphans
__ CalendarDatabase: _CalInviteReplyNotificationCopyHostURL
__ CalendarDatabase: _CalInviteReplyNotificationCopyInviteReplyCalendar
__ CalendarDatabase: _CalInviteReplyNotificationCopyOwner
__ CalendarDatabase: _CalItemsUpdateFromiCalendarDataWithOptionsIncludingPhantomMaster
__ CalendarDatabase: _CalLocationCopyOwner
__ CalendarDatabase: _CalLocationCopyTitle
__ CalendarDatabase: _CalLocationGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalLocationHasKnownSpatialData
__ CalendarDatabase: _CalNotificationCopyOwner
__ CalendarDatabase: _CalNotificationGetCreationDate
__ CalendarDatabase: _CalNotificationGetEntityType
__ CalendarDatabase: _CalNotificationGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalNotificationGetUID
__ CalendarDatabase: _CalOrganizerCopyOwner
__ CalendarDatabase: _CalOrganizerGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalOrganizerIsSelf
__ CalendarDatabase: _CalParticipantCopyOwner
__ CalendarDatabase: _CalParticipantGetProposedStartDateChanged
__ CalendarDatabase: _CalParticipantGetStatusChanged
__ CalendarDatabase: _CalParticipantSetProposedStartDateChanged
__ CalendarDatabase: _CalRecordIDCreate
__ CalendarDatabase: _CalRecurrenceCopyOwner
__ CalendarDatabase: _CalRecurrenceGetEffectiveEndDate
__ CalendarDatabase: _CalRecurrenceGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalRelationGetRelatedObject
__ CalendarDatabase: _CalRelationGetTypeID
__ CalendarDatabase: _CalRelationSetRelatedObject
__ CalendarDatabase: _CalRemoveAuxDatabase
__ CalendarDatabase: _CalRemoveClientForPersistentChangeTracking
__ CalendarDatabase: _CalRemoveNotification
__ CalendarDatabase: _CalRemoveResourceChange
__ CalendarDatabase: _CalResourceChangeCopyCalendar
__ CalendarDatabase: _CalResourceChangeCopyCalendarItem
__ CalendarDatabase: _CalResourceChangeCopyNotification
__ CalendarDatabase: _CalResourceChangeGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalResourceChangeGetPublicStatus
__ CalendarDatabase: _CalResourceChangeGetType
__ CalendarDatabase: _CalResourceChangeGetUID
__ CalendarDatabase: _CalResourceChangeNotificationCopyChanges
__ CalendarDatabase: _CalResourceChangeNotificationCopyOwner
__ CalendarDatabase: _CalResourceChangeSetAlerted
__ CalendarDatabase: _CalSetShowDeclinedEvents
__ CalendarDatabase: _CalShareeCopyOwner
__ CalendarDatabase: _CalShareeGetAccessLevel
__ CalendarDatabase: _CalShareeGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalShowDeclinedEvents
__ CalendarDatabase: _CalStoreAllowsCalendarAddDeleteModify
__ CalendarDatabase: _CalStoreAllowsEvents
__ CalendarDatabase: _CalStoreAllowsPrivateEventAccessByDelegate
__ CalendarDatabase: _CalStoreAllowsProposeNewTime
__ CalendarDatabase: _CalStoreAllowsTasks
__ CalendarDatabase: _CalStoreAreRecurrencesPinnedToMonthDays
__ CalendarDatabase: _CalStoreCopyCalendars
__ CalendarDatabase: _CalStoreCopyDelegatedAccountOwnerStoreID
__ CalendarDatabase: _CalStoreCopyExternalID
__ CalendarDatabase: _CalStoreCopyName
__ CalendarDatabase: _CalStoreCopyUUID
__ CalendarDatabase: _CalStoreGetMaxAlarmsSupported
__ CalendarDatabase: _CalStoreGetMaxRecurrencesSupported
__ CalendarDatabase: _CalStoreGetProhibitsICSImport
__ CalendarDatabase: _CalStoreGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalStoreGetSupportsIncomingInvitations
__ CalendarDatabase: _CalStoreGetSupportsInvitationModifications
__ CalendarDatabase: _CalStoreGetSupportsJunkReporting
__ CalendarDatabase: _CalStoreGetSupportsOutgoingInvitations
__ CalendarDatabase: _CalStoreGetSupportsPhoneNumbers
__ CalendarDatabase: _CalStoreGetType
__ CalendarDatabase: _CalStoreGetUID
__ CalendarDatabase: _CalStoreIsDelegate
__ CalendarDatabase: _CalStoreIsEnabled
__ CalendarDatabase: _CalStoreIsFacebook
__ CalendarDatabase: _CalStoreIsWritable
__ CalendarDatabase: _CalStoreMustAcknowledgeMasterEvent
__ CalendarDatabase: _CalStoreProhibitsDetachmentOnCommentChange
__ CalendarDatabase: _CalStoreProhibitsMultipleDaysInMonthlyRecurrence
__ CalendarDatabase: _CalStoreProhibitsMultipleMonthsInYearlyRecurrence
__ CalendarDatabase: _CalStoreProhibitsPrivateEventsWithAttendees
__ CalendarDatabase: _CalStoreProhibitsSlicingEventsWithAttendees
__ CalendarDatabase: _CalStoreProhibitsUsingEventOrganizerEmailWhenComposingMail
__ CalendarDatabase: _CalStoreProhibitsYearlyRecurrenceInterval
__ CalendarDatabase: _CalStoreRecurrenceSeriesMustIncludeMoreThanFirstOccurrence
__ CalendarDatabase: _CalStoreRemoveItemsOfTypeOlderThanDateInStore
__ CalendarDatabase: _CalStoreRepairDefaultLocalStore
__ CalendarDatabase: _CalStoreRequiresMSFormattedUIDKey
__ CalendarDatabase: _CalStoreRequiresOccurrencesConformToRecurrenceRule
__ CalendarDatabase: _CalStoreRequiresOpeningAttachmentAsLink
__ CalendarDatabase: _CalStoreRequiresSamePrivacyLevelAcrossRecurrenceSeries
__ CalendarDatabase: _CalStoreRequiresSeparateFilesForAllAttachments
__ CalendarDatabase: _CalStoreSetEnabled
__ CalendarDatabase: _CalStoreShouldUseDeleteAndAddInsteadOfMoveBetweenCalendars
__ CalendarDatabase: _CalStoreShowsNotifications
__ CalendarDatabase: _CalStoreSnoozeAlarmRequiresDetach
__ CalendarDatabase: _CalStoreSupportsAlarmProximity
__ CalendarDatabase: _CalStoreSupportsAlarmTriggerDates
__ CalendarDatabase: _CalStoreSupportsAlarmTriggerIntervals
__ CalendarDatabase: _CalStoreSupportsAlarmsTriggeringAfterStartDate
__ CalendarDatabase: _CalStoreSupportsAttachments
__ CalendarDatabase: _CalStoreSupportsAutoGeocodingStructuredLocations
__ CalendarDatabase: _CalStoreSupportsAvailabilityRequests
__ CalendarDatabase: _CalStoreSupportsDelegateEnumeration
__ CalendarDatabase: _CalStoreSupportsDelegation
__ CalendarDatabase: _CalStoreSupportsEventForwarding
__ CalendarDatabase: _CalStoreSupportsFloatingTimeZone
__ CalendarDatabase: _CalStoreSupportsIgnoringEventsInAvailabilityRequests
__ CalendarDatabase: _CalStoreSupportsInboxAvailability
__ CalendarDatabase: _CalStoreSupportsInvitationModificationsWithoutNotification
__ CalendarDatabase: _CalStoreSupportsLocationDirectorySearches
__ CalendarDatabase: _CalStoreSupportsManagedSubscriptionCalendars
__ CalendarDatabase: _CalStoreSupportsParticipantRoles
__ CalendarDatabase: _CalStoreSupportsPrivateEvents
__ CalendarDatabase: _CalStoreSupportsPush
__ CalendarDatabase: _CalStoreSupportsRecurrenceSplit
__ CalendarDatabase: _CalStoreSupportsRecurrencesOnDetachedEvents
__ CalendarDatabase: _CalStoreSupportsReminderActions
__ CalendarDatabase: _CalStoreSupportsReminderLocations
__ CalendarDatabase: _CalStoreSupportsSharedCalendars
__ CalendarDatabase: _CalStoreSupportsStructuredLocations
__ CalendarDatabase: _CalStoreSupportsSubscriptionCalendars
__ CalendarDatabase: _CalStoreSupportsSubscriptionMirroring
__ CalendarDatabase: _CalStoreSupportsTravelTime
__ CalendarDatabase: _CalSuggestedEventInfoCopyOwner
__ CalendarDatabase: _CalSuggestedEventInfoGetPropertyIDWithPropertyName
__ CalendarDatabase: _CalSuggestionNotificationCopyOwner
__ CalendarDatabase: _CalTaskAllDayDueDatesSupportedInStore
__ CalendarDatabase: _CalTaskCopyDueDate
__ CalendarDatabase: _CalTaskCopyDueDateTimeZone
__ CalendarDatabase: _CalTaskCopyURI
__ CalendarDatabase: _CalToManyRelationCopyObjects
__ CalendarDatabase: _CalToManyRelationGetTypeID
__ CalendarDatabase: _EKAlarmProperty_calendarItemOwner
__ CalendarDatabase: _EKAlarmProperty_calendarOwner
__ CalendarDatabase: _EKAttendeeProperty_isCurrentUser
__ CalendarDatabase: _EKAttendeeProperty_participantType
__ CalendarDatabase: _EKAttendeeProperty_statusRaw
__ CalendarDatabase: _EKCalendarItemProperty_URLString
__ CalendarDatabase: _EKCalendarItemProperty_attendeesRaw
__ CalendarDatabase: _EKCalendarItemProperty_calendar
__ CalendarDatabase: _EKCalendarItemProperty_clientLocation
__ CalendarDatabase: _EKCalendarItemProperty_endTimeZoneName
__ CalendarDatabase: _EKCalendarItemProperty_externalID
__ CalendarDatabase: _EKCalendarItemProperty_hasAttendees
__ CalendarDatabase: _EKCalendarItemProperty_hasNotes
__ CalendarDatabase: _EKCalendarItemProperty_hasRecurrenceRules
__ CalendarDatabase: _EKCalendarItemProperty_isAllDay
__ CalendarDatabase: _EKCalendarItemProperty_modifiedProperties
__ CalendarDatabase: _EKCalendarItemProperty_notes
__ CalendarDatabase: _EKCalendarItemProperty_organizer
__ CalendarDatabase: _EKCalendarItemProperty_originalItem
__ CalendarDatabase: _EKCalendarItemProperty_selfAttendee
__ CalendarDatabase: _EKCalendarItemProperty_selfParticipantStatusRaw
__ CalendarDatabase: _EKCalendarItemProperty_startDateRaw
__ CalendarDatabase: _EKCalendarItemProperty_startTimeZoneName
__ CalendarDatabase: _EKCalendarItemProperty_structuredLocationWithoutPrediction
__ CalendarDatabase: _EKCalendarItemProperty_suppressNotificationForChanges
__ CalendarDatabase: _EKCalendarItemProperty_travelStartLocation
__ CalendarDatabase: _EKCalendarItemProperty_uniqueID
__ CalendarDatabase: _EKCalendarItemProperty_unlocalizedTitle
__ CalendarDatabase: _EKCalendarProperty_source
__ CalendarDatabase: _EKErrorProperty_calendarItemOwner
__ CalendarDatabase: _EKErrorProperty_calendarOwner
__ CalendarDatabase: _EKErrorProperty_storeOwner
__ CalendarDatabase: _EKEventProperty_birthdayContactIdentifier
__ CalendarDatabase: _EKEventProperty_birthdayContactName
__ CalendarDatabase: _EKEventProperty_conferenceURLDetectedString
__ CalendarDatabase: _EKEventProperty_conferenceURLString
__ CalendarDatabase: _EKEventProperty_endDateRaw
__ CalendarDatabase: _EKEventProperty_invitationChangedProperties
__ CalendarDatabase: _EKEventProperty_invitationStatus
__ CalendarDatabase: _EKEventProperty_locationPredictionState
__ CalendarDatabase: _EKEventProperty_participationStatusModifiedDate
__ CalendarDatabase: _EKEventProperty_privacyLevel
__ CalendarDatabase: _EKEventProperty_proposedStartDate
__ CalendarDatabase: _EKEventProperty_specialDayString
__ CalendarDatabase: _EKEventProperty_status
__ CalendarDatabase: _EKEventProperty_suggestionInfo
__ CalendarDatabase: _EKEventProperty_travelTime
__ CalendarDatabase: _EKLocationProperty_address
__ CalendarDatabase: _EKLocationProperty_alarmOwner
__ CalendarDatabase: _EKLocationProperty_calendarItemOwner
__ CalendarDatabase: _EKLocationProperty_latitude
__ CalendarDatabase: _EKLocationProperty_longitude
__ CalendarDatabase: _EKLocationProperty_referenceFrame
__ CalendarDatabase: _EKLocationProperty_title
__ CalendarDatabase: _EKNotificationProperty_calendar
__ CalendarDatabase: _EKObjectProperty_UUID
__ CalendarDatabase: _EKObjectProperty_externalID
__ CalendarDatabase: _EKObjectProperty_owner
__ CalendarDatabase: _EKOrganizerProperty_isCurrentUser
__ CalendarDatabase: _EKParticipantProperty_URLString
__ CalendarDatabase: _EKParticipantProperty_displayNameRaw
__ CalendarDatabase: _EKParticipantProperty_emailAddress
__ CalendarDatabase: _EKParticipantProperty_firstName
__ CalendarDatabase: _EKParticipantProperty_lastName
__ CalendarDatabase: _EKParticipantProperty_phoneNumber
__ CalendarDatabase: _EKRecurrenceRuleProperty_owner
__ CalendarDatabase: _EKResourceChangeProperty_notification
__ CalendarDatabase: _EKSourceProperty_managedConfigurationAccountAccess
__ CalendarDatabase: _OBJC_CLASS_$_CADObjectChangeID
__ CalendarDatabase: _OBJC_CLASS_$_CADObjectChangeIDHelper
__ CalendarDatabase: _OBJC_CLASS_$_CADObjectID
__ CalendarDatabase: _OBJC_CLASS_$_CDBDataProtectionObserver
__ CalendarDatabase: _OBJC_CLASS_$_CDBPreferences
__ CalendarDatabase: _OBJC_CLASS_$_CDBSpotlightUtilities
__ CalendarDatabase: _OBJC_CLASS_$_CalACMigrationAccountStore
__ CalendarDatabase: _OBJC_CLASS_$_CalCalendarLocalAccountInfo
__ CalendarDatabase: _OBJC_CLASS_$_CalChangeFilteringMigrationAccountStore
__ CalendarDatabase: _OBJC_CLASS_$_CalDatabaseInMemoryChangeTracking
__ CalendarDatabase: _OBJC_CLASS_$_CalDatabaseInitializationConfiguration
__ CalendarDatabase: _OBJC_CLASS_$_CalSearch
__ CalendarDatabase: _OBJC_CLASS_$_CalSingleDatabaseInMemoryChangeTimestamp
__ CalendarDatabase: _OBJC_CLASS_$_CaliTIPHandler
__ CalendarDatabase: _OBJC_CLASS_$_CaliTIPMessage
__ CalendarDatabase: _OBJC_METACLASS_$_CADObjectID
__ CalendarDatabase: __CalAlarmGetWithUID
__ CalendarDatabase: __CalAttachmentFileGetWithUID
__ CalendarDatabase: __CalAttachmentGetWithUID
__ CalendarDatabase: __CalCalendarItemCreate
__ CalendarDatabase: __CalCalendarItemCreateCopy
__ CalendarDatabase: __CalCalendarItemRemoveExceptionDate
__ CalendarDatabase: __CalCategoryGetWithUID
__ CalendarDatabase: __CalCategoryRemove
__ CalendarDatabase: __CalConferenceGetWithUID
__ CalendarDatabase: __CalContactGetWithUID
__ CalendarDatabase: __CalCreateResourceChangeOfType
__ CalendarDatabase: __CalDatabaseCopyCalendar
__ CalendarDatabase: __CalDatabaseCopyCalendarItemsWithCalendar
__ CalendarDatabase: __CalDatabaseCreateAlarm
__ CalendarDatabase: __CalDatabaseCreateAttachment
__ CalendarDatabase: __CalDatabaseCreateAttendee
__ CalendarDatabase: __CalDatabaseCreateCalendarForEntityType
__ CalendarDatabase: __CalDatabaseCreateCategory
__ CalendarDatabase: __CalDatabaseCreateConference
__ CalendarDatabase: __CalDatabaseCreateContact
__ CalendarDatabase: __CalDatabaseCreateError
__ CalendarDatabase: __CalDatabaseCreateEventAction
__ CalendarDatabase: __CalDatabaseCreateExceptionDate
__ CalendarDatabase: __CalDatabaseCreateInviteReplyNotification
__ CalendarDatabase: __CalDatabaseCreateLocation
__ CalendarDatabase: __CalDatabaseCreateNotification
__ CalendarDatabase: __CalDatabaseCreateOrganizer
__ CalendarDatabase: __CalDatabaseCreateRecurrence
__ CalendarDatabase: __CalDatabaseCreateResourceChangeNotification
__ CalendarDatabase: __CalDatabaseCreateSharee
__ CalendarDatabase: __CalDatabaseCreateStore
__ CalendarDatabase: __CalDatabaseCreateSuggestedEventInfo
__ CalendarDatabase: __CalDatabaseCreateSuggestionNotification
__ CalendarDatabase: __CalDatabaseGetRecordStore
__ CalendarDatabase: __CalDatabasePostDBOrSyncStatusChangeNotification
__ CalendarDatabase: __CalEntityGetType
__ CalendarDatabase: __CalEntityIsDeleted
__ CalendarDatabase: __CalErrorGetWithUID
__ CalendarDatabase: __CalEventActionGetWithUID
__ CalendarDatabase: __CalEventActionRemove
__ CalendarDatabase: __CalEventGetJunkStatusWhileLocked
__ CalendarDatabase: __CalEventIsDetached
__ CalendarDatabase: __CalEventSetInvitationStatus
__ CalendarDatabase: __CalExceptionDateGetOwner
__ CalendarDatabase: __CalExceptionDateGetWithUID
__ CalendarDatabase: __CalGetCalendarItemWithRowID
__ CalendarDatabase: __CalGetCalendarWithUID
__ CalendarDatabase: __CalGetStoreWithUID
__ CalendarDatabase: __CalLocationGetWithUID
__ CalendarDatabase: __CalNotificationGetWithUID
__ CalendarDatabase: __CalParticipantGetWithUID
__ CalendarDatabase: __CalRecurrenceGetWithUID
__ CalendarDatabase: __CalRemoveAlarm
__ CalendarDatabase: __CalRemoveAttachment
__ CalendarDatabase: __CalRemoveAttendee
__ CalendarDatabase: __CalRemoveCalendar
__ CalendarDatabase: __CalRemoveConference
__ CalendarDatabase: __CalRemoveContact
__ CalendarDatabase: __CalRemoveError
__ CalendarDatabase: __CalRemoveEvent
__ CalendarDatabase: __CalRemoveExceptionDate
__ CalendarDatabase: __CalRemoveLocation
__ CalendarDatabase: __CalRemoveNotification
__ CalendarDatabase: __CalRemoveOrganizer
__ CalendarDatabase: __CalRemoveRecurrence
__ CalendarDatabase: __CalRemoveResourceChange
__ CalendarDatabase: __CalRemoveSharee
__ CalendarDatabase: __CalRemoveStore
__ CalendarDatabase: __CalRemoveSuggestedEventInfo
__ CalendarDatabase: __CalRemoveTask
__ CalendarDatabase: __CalResourceChangeGetWithUID
__ CalendarDatabase: __CalShareeGetWithUID
__ CalendarDatabase: __CalStoreAddCalendar
__ CalendarDatabase: __CalSuggestedEventInfoGetWithUID
__ CalendarDatabase: ___CalDatabaseChangedNotification
__ CalendarDatabase: _kCADMainDatabaseID
__ CalendarDatabase: _kCalDatabaseChangedExternallyNotification
__ CalendarDatabase: _kCalDefaultCalendarChangedNotification
__ CalendarDatabase: _kCalEventClass
__ CalendarDatabase: _kCalRecordIDMethods
__ CalendarDatabase: _kCalRelationMethods
__ CalendarDatabase: _kCalSecurityScopedURLWrapperMethods
__ CalendarDatabase: _kCalSecurityScopedURLWrapperMethodsWithLoad
__ CalendarDatabase: _spotlightIndexBundleID
__ CalendarFoundation: _CalAbsoluteTimeGetAbsoluteTimeInTimeZone
__ CalendarFoundation: _CalAbsoluteTimeGetGregorianDate
__ CalendarFoundation: _CalAbsoluteTimeGetGregorianDateWithFallbackToDefaultTimeZone
__ CalendarFoundation: _CalAddStateCaptureBlock
__ CalendarFoundation: _CalAnalyticsIsEventUsed
__ CalendarFoundation: _CalAnalyticsSendEvent
__ CalendarFoundation: _CalAnalyticsTimeIntervalFromMachTimes
__ CalendarFoundation: _CalCopyDefaultTimeZone
__ CalendarFoundation: _CalCopyTimeZone
__ CalendarFoundation: _CalEqualStrings
__ CalendarFoundation: _CalGenerateQualifiedIdentifierWithClassAndSubdomain
__ CalendarFoundation: _CalLocationAuthorizationChangedNotification
__ CalendarFoundation: _CalLogInitialize
__ CalendarFoundation: _CalMonotonicTime
__ CalendarFoundation: _CalRedactURLString
__ CalendarFoundation: _EKWeakLinkClass
__ CalendarFoundation: _OBJC_CLASS_$_CalConferencePersistence
__ CalendarFoundation: _OBJC_CLASS_$_CalConferenceURLDetector
__ CalendarFoundation: _OBJC_CLASS_$_CalDateLocalization
__ CalendarFoundation: _OBJC_CLASS_$_CalDateRange
__ CalendarFoundation: _OBJC_CLASS_$_CalDescriptionBuilder
__ CalendarFoundation: _OBJC_CLASS_$_CalDeviceLockObserver
__ CalendarFoundation: _OBJC_CLASS_$_CalDistributedNotificationCenter
__ CalendarFoundation: _OBJC_CLASS_$_CalGrantedDelegate
__ CalendarFoundation: _OBJC_CLASS_$_CalLocationAuthorization
__ CalendarFoundation: _OBJC_CLASS_$_CalMockCalendarDataContainerProvider
__ CalendarFoundation: _OBJC_CLASS_$_CalPreferences
__ CalendarFoundation: _OBJC_CLASS_$_CalSignalSensor
__ CalendarFoundation: _OBJC_CLASS_$_CalStopwatch
__ CalendarFoundation: _OBJC_CLASS_$_CalSystemInformation
__ CalendarFoundation: _OBJC_CLASS_$_CalWidgetUtils
__ CalendarFoundation: _OBJC_CLASS_$_EKCalendarDate
__ CalendarFoundation: _OBJC_CLASS_$_EKFoundInAppsEventTracker
__ CalendarFoundation: __CalTimeZoneForceUpdate
__ CalendarFoundation: _kAlarmStream
__ CalendarFoundation: _kCalAttachmentContainerName
__ CalendarFoundation: _kCalBirthdayDefaultAlarmChangedNote
__ CalendarFoundation: _kCalCalendarBundleIdentifier
__ CalendarFoundation: _kCalDateDistantFuture
__ CalendarFoundation: _kCalDateDistantPast
__ CalendarFoundation: _kCalDateInvalid
__ CalendarFoundation: _kCalSignificantTimeChangeNotification
__ CalendarFoundation: _kCalTimeSensitiveIntervalForFocus
__ CalendarFoundation: _kPreferenceDomain
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFDateGetAbsoluteTime
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPropertyListCreateData
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetGetCount
__ CoreFoundation: _CFSetGetTypeID
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFTimeZoneCreateWithName
__ CoreFoundation: _CFURLCopyPath
__ CoreFoundation: _CFURLGetString
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _NSURLNameKey
__ CoreFoundation: _NSURLTotalFileAllocatedSizeKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSMakeSpecialForwardingCaptureBlock
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFTypeArrayCallBacks
__ DataAccessExpress: _DACustomLogDirectory
__ DataAccessExpress: _OBJC_CLASS_$_DADConnection
__ DataAccessExpress: _OBJC_CLASS_$_DAEGrantedDelegate
__ DataMigration: _DMIsMigrationNeeded
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSecurityScopedURLWrapper
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSXMLParser
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSPredicate
__ IntlPreferences: _OBJC_CLASS_$_IntlUtility
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ PersistentConnection: _PCSettingsGetStyle
__ PrivacyAccounting: _OBJC_CLASS_$_PAAccessLogger
__ PrivacyAccounting: _OBJC_CLASS_$_PAApplication
__ PrivacyAccounting: _OBJC_CLASS_$_PATCCAccess
__ PrivacyAccounting: _PAAuthenticatedClientIdentity
__ SoftLinking: __sl_dlopen
__ TCC: _TCCAccessCheckAuditToken
__ TCC: _kTCCServiceAddressBook
__ TCC: _kTCCServiceCalendar
__ TCC: _kTCCServiceReminders
__ TCC: _tcc_authorization_record_get_authorization_right
__ TCC: _tcc_events_filter_create_with_criteria
__ TCC: _tcc_events_subscribe
__ TCC: _tcc_events_unsubscribe
__ TCC: _tcc_identity_copy_external_representation
__ TCC: _tcc_identity_create
__ TCC: _tcc_identity_create_from_external_representation
__ TCC: _tcc_message_options_create
__ TCC: _tcc_message_options_set_reply_handler_policy
__ TCC: _tcc_server_create
__ TCC: _tcc_server_message_get_authorization_records_by_identity
__ TelephonyUtilities: _OBJC_CLASS_$_TUConversationLink
__ TelephonyUtilities: _OBJC_CLASS_$_TUConversationManager
__ UniformTypeIdentifiers: _UTTypeUTF8PlainText
__ iCalendar: _ICSRedactBytes
__ iCalendar: _ICSRedactString
__ iCalendar: _OBJC_CLASS_$_ICSAlarm
__ iCalendar: _OBJC_CLASS_$_ICSDocument
__ iCalendar: _OBJC_CLASS_$_ICSEvent
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_signature
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___memmove_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _asprintf
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _ferror
__ libSystem.B.dylib: _fgetc
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputc
__ libSystem.B.dylib: _fputs
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getc
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _mkdtemp
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _reallocf
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strrchr
__ libSystem.B.dylib: _ungetc
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_get_uint64
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_suspend
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libbsm.0.dylib: _audit_token_to_au32
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_respondsToSelector
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libobjc.A.dylib: _sel_getName
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_step
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateInit2_
CADAccountAccessHandler : NSObject
 @property  <CADCalendarDatabaseDataProvider> *dataProvider

  // instance methods
  -[CADAccountAccessHandler gatherRestrictedCalendarRowIDs:forAction:inDatabase:]
  -[CADAccountAccessHandler dataProvider]
  -[CADAccountAccessHandler reset]
  -[CADAccountAccessHandler .cxx_destruct]
  -[CADAccountAccessHandler isActionAllowed:forStore:inDatabase:]
  -[CADAccountAccessHandler restrictedCalendarRowIDsForAction:inDatabase:]
  -[CADAccountAccessHandler initWithDatabaseDataProvider:]


CADInMemoryChangeTimestamp : NSObject <NSSecureCoding, NSCopying>
  // class methods
  +[CADInMemoryChangeTimestamp supportsSecureCoding]
  +[CADInMemoryChangeTimestamp timestampForNow]

  // instance methods
  -[CADInMemoryChangeTimestamp encodeWithCoder:]
  -[CADInMemoryChangeTimestamp .cxx_destruct]
  -[CADInMemoryChangeTimestamp allDatabases]
  -[CADInMemoryChangeTimestamp copyWithZone:]
  -[CADInMemoryChangeTimestamp redactedDescription]
  -[CADInMemoryChangeTimestamp timestampForDatabase:]
  -[CADInMemoryChangeTimestamp initWithTimestamps:]
  -[CADInMemoryChangeTimestamp initWithCoder:]


CADEventPredicate : EKPredicate <NSSecureCoding>
 @property  BOOL shouldLoadDefaultProperties
 @property  NSString *eventUUID
 @property  NSTimeZone *timeZone
 @property  BOOL shouldLoadProposedTimesInRange
 @property  BOOL excludeAllDayEvents
 @property  BOOL excludeTimedEvents
 @property  BOOL excludeDeclined
 @property  BOOL excludeProposed
 @property  BOOL excludeDeclinedUnlessProposed

  // class methods
  +[CADEventPredicate supportsSecureCoding]
  +[CADEventPredicate predicateWithStartDate:endDate:timeZone:calendars:loadDefaultProperties:]
  +[CADEventPredicate predicateWithStartDate:endDate:timeZone:eventUUID:calendars:]
  +[CADEventPredicate predicateWithStartDate:title:calendars:]
  +[CADEventPredicate predicateWithStartDate:endDate:timeZone:calendars:]

  // instance methods
  -[CADEventPredicate timeZone]
  -[CADEventPredicate encodeWithCoder:]
  -[CADEventPredicate defaultPropertiesToLoad]
  -[CADEventPredicate predicateFormat]
  -[CADEventPredicate copyWithZone:]
  -[CADEventPredicate relatedObjectPropertiesToLoad]
  -[CADEventPredicate eventUUID]
  -[CADEventPredicate isEqual:]
  -[CADEventPredicate initWithCoder:]
  -[CADEventPredicate excludeAllDayEvents]
  -[CADEventPredicate excludeDeclined]
  -[CADEventPredicate excludeDeclinedUnlessProposed]
  -[CADEventPredicate excludeProposed]
  -[CADEventPredicate excludeTimedEvents]
  -[CADEventPredicate setExcludeAllDayEvents:]
  -[CADEventPredicate setExcludeDeclined:]
  -[CADEventPredicate setExcludeDeclinedUnlessProposed:]
  -[CADEventPredicate setExcludeProposed:]
  -[CADEventPredicate setExcludeTimedEvents:]
  -[CADEventPredicate initWithStartDate:endDate:timeZone:eventUUID:calendars:]
  -[CADEventPredicate initWithStartDate:endDate:timeZone:calendars:]
  -[CADEventPredicate initWithStartDate:endDate:timeZone:calendars:loadDefaultProperties:]
  -[CADEventPredicate initWithStartDate:title:calendars:]
  -[CADEventPredicate copyMatchingItemsWithDatabase:]
  -[CADEventPredicate shouldLoadProposedTimesInRange]
  -[CADEventPredicate shouldLoadDefaultProperties]


EKAlarmOccurrence : NSObject
 @property  CADObjectID *alarmID
 @property  CADObjectID *ownerID
 @property  NSDate *ownerDate
 @property  NSTimeZone *ownerTimeZone
 @property  NSURL *ownerURI
 @property  NSDate *fireDate
 @property  NSString *externalID
 @property  NSDate *acknowledgedDate

  // class methods
  +[EKAlarmOccurrence alarmOccurrenceWithAlarmID:ownerID:ownerDate:ownerTimeZone:ownerURI:fireDate:externalID:acknowledgedDate:]

  // instance methods
  -[EKAlarmOccurrence alarmID]
  -[EKAlarmOccurrence fireDate]
  -[EKAlarmOccurrence encodeWithCoder:]
  -[EKAlarmOccurrence .cxx_destruct]
  -[EKAlarmOccurrence initWithDictionaryRepresentation:]
  -[EKAlarmOccurrence externalID]
  -[EKAlarmOccurrence acknowledgedDate]
  -[EKAlarmOccurrence dictionaryRepresentation]
  -[EKAlarmOccurrence initWithCoder:]
  -[EKAlarmOccurrence ownerID]
  -[EKAlarmOccurrence initWithAlarmID:ownerID:ownerDate:ownerTimeZone:ownerURI:fireDate:externalID:acknowledgedDate:]
  -[EKAlarmOccurrence ownerDate]
  -[EKAlarmOccurrence ownerTimeZone]
  -[EKAlarmOccurrence ownerURI]


CADAllowSpecifiedAccountsAccessHandler : CADAccountAccessHandler
 @property  NSSet *allowedSourceIdentifiers

  // instance methods
  -[CADAllowSpecifiedAccountsAccessHandler allowedSourceIdentifiers]
  -[CADAllowSpecifiedAccountsAccessHandler .cxx_destruct]
  -[CADAllowSpecifiedAccountsAccessHandler isActionAllowed:forStore:inDatabase:]
  -[CADAllowSpecifiedAccountsAccessHandler initWithAllowedSourceIdentifiers:databaseDataProvider:]


CADBackupRestoreOperationGroup : CADOperationGroup <CADBackupRestoreInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CADBackupRestoreOperationGroup CADBackupDatabaseToFileNamed:inDirectory:includeAttachments:reply:]
  -[CADBackupRestoreOperationGroup CADBackupToICBU:reply:]
  -[CADBackupRestoreOperationGroup CADRestoreFromDatabaseBackupFileNamed:inDirectory:includeAttachments:reply:]
  -[CADBackupRestoreOperationGroup CADRestoreFromICBU:reply:]
  -[CADBackupRestoreOperationGroup _accountStoreForBackupRestore]
  -[CADBackupRestoreOperationGroup _performRestoreOperation:]


CADPredicate : NSPredicate <NSSecureCoding>
 @property  NSArray *defaultPropertiesToLoad
 @property  NSDictionary *relatedObjectPropertiesToLoad
 @property  <NSFastEnumeration> *databasesToQuery

  // class methods
  +[CADPredicate setValidator:]

  // instance methods
  -[CADPredicate evaluateWithObject:]
  -[CADPredicate defaultPropertiesToLoad]
  -[CADPredicate relatedObjectPropertiesToLoad]
  -[CADPredicate copyMatchingItemsWithDatabase:]
  -[CADPredicate databasesToQuery]


CADNotifiableEventsPredicate : CADPredicate <NSSecureCoding>
  // class methods
  +[CADNotifiableEventsPredicate supportsSecureCoding]
  +[CADNotifiableEventsPredicate predicate]

  // instance methods
  -[CADNotifiableEventsPredicate defaultPropertiesToLoad]
  -[CADNotifiableEventsPredicate predicateFormat]
  -[CADNotifiableEventsPredicate copyWithZone:]
  -[CADNotifiableEventsPredicate copyMatchingItemsWithDatabase:]


CADFilter : NSObject <NSSecureCoding>
  // class methods
  +[CADFilter supportsSecureCoding]

  // instance methods
  -[CADFilter validate]
  -[CADFilter encodeWithCoder:]
  -[CADFilter initWithCoder:]
  -[CADFilter applicableToEntityType:]
  -[CADFilter extendWhereClause:usingOperation:withValues:andTypes:]


CADStatsCalendars : CADStatCollector
  // class methods
  +[CADStatsCalendars eventName]

  // instance methods
  -[CADStatsCalendars .cxx_destruct]
  -[CADStatsCalendars eventDictionaries]
  -[CADStatsCalendars prepareWithContext:]
  -[CADStatsCalendars wantsCalendars]
  -[CADStatsCalendars processCalendars:inStore:]
  -[CADStatsCalendars calendarUsesAuthentication:]


CADStatsCalendarInfo : NSObject

CADAlarmEngineOperationGroup : CADOperationGroup <CADAlarmEngineInterface>
  // class methods
  +[CADAlarmEngineOperationGroup requiresEventAccess]
  +[CADAlarmEngineOperationGroup whitelistedBundles]

  // instance methods
  -[CADAlarmEngineOperationGroup CADDatabaseGetAlarmWithUUID:reply:]
  -[CADAlarmEngineOperationGroup _getAlarmOccurrencesInRangeFromStart:toEnd:inCalendars:forDatabase:databaseID:calendarIDsForThisDatabase:accessLogger:]
  -[CADAlarmEngineOperationGroup CADDatabaseGetAlarmOccurrencesInRangeFromStart:toEnd:inCalendars:reply:]


CADDatabaseInitializationOptions : NSObject <NSSecureCoding>
 @property  int databaseInitOptions
 @property  CADChangeTrackingClientId *changeTrackingClientId
 @property  BOOL enablePropertyModificationLogging
 @property  int management
 @property  NSString *managementBundleIdentifier
 @property  NSURL *databaseDirectory
 @property  <CalCalendarDataContainerProvider> *calendarDataContainerProvider
 @property  BOOL unitTesting
 @property  BOOL spotlightTesting
 @property  BOOL allowDelegateSources
 @property  NSArray *allowedSourceIdentifiers
 @property  NSObject<OS_tcc_identity> *privacyClientIdentity

  // class methods
  +[CADDatabaseInitializationOptions supportsSecureCoding]

  // instance methods
  -[CADDatabaseInitializationOptions isEqualToOptions:]
  -[CADDatabaseInitializationOptions databaseDirectory]
  -[CADDatabaseInitializationOptions databaseInitOptions]
  -[CADDatabaseInitializationOptions setManagement:]
  -[CADDatabaseInitializationOptions spotlightTesting]
  -[CADDatabaseInitializationOptions privacyClientIdentity]
  -[CADDatabaseInitializationOptions changeTrackingClientId]
  -[CADDatabaseInitializationOptions setAllowedSourceIdentifiers:]
  -[CADDatabaseInitializationOptions managementBundleIdentifier]
  -[CADDatabaseInitializationOptions unitTesting]
  -[CADDatabaseInitializationOptions encodeWithCoder:]
  -[CADDatabaseInitializationOptions setChangeTrackingClientId:]
  -[CADDatabaseInitializationOptions allowedSourceIdentifiers]
  -[CADDatabaseInitializationOptions .cxx_destruct]
  -[CADDatabaseInitializationOptions setEnablePropertyModificationLogging:]
  -[CADDatabaseInitializationOptions allowDelegateSources]
  -[CADDatabaseInitializationOptions calendarDataContainerProvider]
  -[CADDatabaseInitializationOptions management]
  -[CADDatabaseInitializationOptions setDatabaseDirectory:]
  -[CADDatabaseInitializationOptions setCalendarDataContainerProvider:]
  -[CADDatabaseInitializationOptions setSpotlightTesting:]
  -[CADDatabaseInitializationOptions setDatabaseInitOptions:]
  -[CADDatabaseInitializationOptions setUnitTesting:]
  -[CADDatabaseInitializationOptions setAllowDelegateSources:]
  -[CADDatabaseInitializationOptions purifyOptions]
  -[CADDatabaseInitializationOptions setManagementBundleIdentifier:]
  -[CADDatabaseInitializationOptions validOptionsForConnection:]
  -[CADDatabaseInitializationOptions setPrivacyClientIdentity:]
  -[CADDatabaseInitializationOptions enablePropertyModificationLogging]
  -[CADDatabaseInitializationOptions init]
  -[CADDatabaseInitializationOptions initWithCoder:]


CADObjectOperationGroup : CADOperationGroup <CADObjectInterface>
  // class methods
  +[CADObjectOperationGroup requiresEventAccess]

  // instance methods
  -[CADObjectOperationGroup CADObject:getPropertiesWithNames:reply:]
  -[CADObjectOperationGroup CADObjectIsManaged:reply:]
  -[CADObjectOperationGroup CADObject:getDatePropertyWithName:reply:]
  -[CADObjectOperationGroup CADObject:getRelatedObjectWithRelationName:reply:]
  -[CADObjectOperationGroup CADObject:getPropertyWithName:reply:]
  -[CADObjectOperationGroup CADObjectsExist:reply:]
  -[CADObjectOperationGroup CADObject:getStringPropertyWithName:reply:]
  -[CADObjectOperationGroup CADObject:getSecurityScopedURLWrapperPropertyWithName:reply:]
  -[CADObjectOperationGroup CADObject:getDataPropertyWithName:reply:]
  -[CADObjectOperationGroup CADObject:getRelatedObjectsWithRelationName:reply:]
  -[CADObjectOperationGroup CADObjects:getPropertiesWithNames:reply:]
  -[CADObjectOperationGroup CADObject:getNumberPropertyWithName:reply:]
  -[CADObjectOperationGroup CADObjectExists:reply:]


CADErrorOperationGroup : CADOperationGroup <CADErrorInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADErrorOperationGroup requiresEventAccess]

  // instance methods
  -[CADErrorOperationGroup CADDatabaseGetEventsWithErrorsPerSource:]
  -[CADErrorOperationGroup CADDatabaseGetErrorCount:]


CADNotificationMonitorOperationGroup : CADOperationGroup <CADNotificationMonitorInterface>
  // class methods
  +[CADNotificationMonitorOperationGroup requiresEventAccess]
  +[CADNotificationMonitorOperationGroup whitelistedBundles]

  // instance methods
  -[CADNotificationMonitorOperationGroup CADDatabaseGetResourceChanges:]
  -[CADNotificationMonitorOperationGroup CADDatabaseGetInviteReplyNotifications:]
  -[CADNotificationMonitorOperationGroup CADDatabaseGetInboxRepliedSectionItems:]
  -[CADNotificationMonitorOperationGroup CADDatabaseGetEventNotificationItemsAfterDate:excludingUncheckedCalendars:filteredByShowsNotificationsFlag:reply:]
  -[CADNotificationMonitorOperationGroup CADDatabaseGetNotificationCountForSourceWithExternalIdentifier:excludingDelegateSources:filteredByShowsNotificationsFlag:expanded:reply:]
  -[CADNotificationMonitorOperationGroup CADCalendarSetClearedFromNotificationCenter:error:]
  -[CADNotificationMonitorOperationGroup CADResourceChange:setAlertedWithError:]
  -[CADNotificationMonitorOperationGroup CADDatabaseGetSharedCalendarInvitationsWithReply:]
  -[CADNotificationMonitorOperationGroup CADEventSetInvitationStatus:forEvents:error:]


CADSubscribedCalendarEventsPredicate : CADPropertySearchPredicate
  // instance methods
  -[CADSubscribedCalendarEventsPredicate defaultPropertiesToLoad]
  -[CADSubscribedCalendarEventsPredicate initWithCalendar:]


CADUpNextEventsPredicate : EKPredicate
 @property  double startDateRestrictionThreshold

  // class methods
  +[CADUpNextEventsPredicate supportsSecureCoding]
  +[CADUpNextEventsPredicate _occurrencePassesFilter:event:]
  +[CADUpNextEventsPredicate _descriptionForOccurrence:ofEvent:]

  // instance methods
  -[CADUpNextEventsPredicate encodeWithCoder:]
  -[CADUpNextEventsPredicate defaultPropertiesToLoad]
  -[CADUpNextEventsPredicate predicateFormat]
  -[CADUpNextEventsPredicate copyWithZone:]
  -[CADUpNextEventsPredicate isEqual:]
  -[CADUpNextEventsPredicate initWithCoder:]
  -[CADUpNextEventsPredicate setStartDateRestrictionThreshold:]
  -[CADUpNextEventsPredicate initWithCalendarIDs:startDate:endDate:]
  -[CADUpNextEventsPredicate copyMatchingItemsWithDatabase:]
  -[CADUpNextEventsPredicate startDateRestrictionThreshold]


CADContactEventsPredicate : EKPredicate
 @property  NSSet *contactEmailAddresses
 @property  NSSet *contactNameComponents

  // class methods
  +[CADContactEventsPredicate supportsSecureCoding]

  // instance methods
  -[CADContactEventsPredicate encodeWithCoder:]
  -[CADContactEventsPredicate .cxx_destruct]
  -[CADContactEventsPredicate defaultPropertiesToLoad]
  -[CADContactEventsPredicate predicateFormat]
  -[CADContactEventsPredicate copyWithZone:]
  -[CADContactEventsPredicate isEqual:]
  -[CADContactEventsPredicate initWithCoder:]
  -[CADContactEventsPredicate initWithCalendarIDs:startDate:endDate:contacts:]
  -[CADContactEventsPredicate contactEmailAddresses]
  -[CADContactEventsPredicate setContactEmailAddresses:]
  -[CADContactEventsPredicate contactNameComponents]
  -[CADContactEventsPredicate setContactNameComponents:]
  -[CADContactEventsPredicate copyMatchingItemsWithDatabase:]
  -[CADContactEventsPredicate _isCandidate:allowAllDayEvent:]


CADOperationGroup : NSObject
 @property  ClientConnection *conn

  // class methods
  +[CADOperationGroup requiresEventAccess]
  +[CADOperationGroup whitelistedBundles]

  // instance methods
  -[CADOperationGroup conn]
  -[CADOperationGroup .cxx_destruct]
  -[CADOperationGroup accessGranted]
  -[CADOperationGroup initWithClientConnection:]


CADGroupedAccountAccessHandler : CADAccountAccessHandler
 @property  NSMutableArray *accessHandlers

  // instance methods
  -[CADGroupedAccountAccessHandler gatherRestrictedCalendarRowIDs:forAction:inDatabase:]
  -[CADGroupedAccountAccessHandler addAccountAccessHandler:]
  -[CADGroupedAccountAccessHandler accessHandlers]
  -[CADGroupedAccountAccessHandler reset]
  -[CADGroupedAccountAccessHandler .cxx_destruct]
  -[CADGroupedAccountAccessHandler isActionAllowed:forStore:inDatabase:]
  -[CADGroupedAccountAccessHandler restrictedCalendarRowIDsForAction:inDatabase:]
  -[CADGroupedAccountAccessHandler initWithDatabaseDataProvider:]


CADTravelEventsPredicate : EKPredicate
  // class methods
  +[CADTravelEventsPredicate supportsSecureCoding]

  // instance methods
  -[CADTravelEventsPredicate encodeWithCoder:]
  -[CADTravelEventsPredicate defaultPropertiesToLoad]
  -[CADTravelEventsPredicate predicateFormat]
  -[CADTravelEventsPredicate copyWithZone:]
  -[CADTravelEventsPredicate isEqual:]
  -[CADTravelEventsPredicate initWithCoder:]
  -[CADTravelEventsPredicate initWithCalendarIDs:startDate:endDate:]
  -[CADTravelEventsPredicate copyMatchingItemsWithDatabase:]
  -[CADTravelEventsPredicate _fetchTravelEventsWithDatabase:]


CADStatCollector : NSObject
 @property  BOOL wantsStores
 @property  BOOL wantsCalendars
 @property  BOOL wantsOccurrences
 @property  BOOL wantsEvents

  // class methods
  +[CADStatCollector eventName]
  +[CADStatCollector enabled]

  // instance methods
  -[CADStatCollector eventDictionaries]
  -[CADStatCollector prepareWithContext:]
  -[CADStatCollector wantsCalendars]
  -[CADStatCollector processCalendars:inStore:]
  -[CADStatCollector wantsStores]
  -[CADStatCollector wantsOccurrences]
  -[CADStatCollector wantsEvents]
  -[CADStatCollector desiredOccurrenceRange]
  -[CADStatCollector processStores:]
  -[CADStatCollector processBirthdayCalendarEvents:]
  -[CADStatCollector processOccurrences:]
  -[CADStatCollector processEvents:]
  -[CADStatCollector processSignificantEventWithPredictedLocation:onSharedCalendar:]


CADStatCollectionContext : NSObject
 @property  ^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIBBBBBB} database
 @property  ACAccountStore *accountStore

  // instance methods
  -[CADStatCollectionContext accountStore]
  -[CADStatCollectionContext setDatabase:]
  -[CADStatCollectionContext dealloc]
  -[CADStatCollectionContext .cxx_destruct]
  -[CADStatCollectionContext database]
  -[CADStatCollectionContext initWithDatabase:accountStore:]


EKMasterEventsPredicate : EKPredicate
  // class methods
  +[EKMasterEventsPredicate supportsSecureCoding]
  +[EKMasterEventsPredicate predicateWithCalendarIDs:]

  // instance methods
  -[EKMasterEventsPredicate predicateFormat]
  -[EKMasterEventsPredicate copyMatchingItemsWithDatabase:]


CADDatabaseOperationGroup : CADOperationGroup <CADDatabaseInterface>
  // class methods
  +[CADDatabaseOperationGroup requiresEventAccess]

  // instance methods
  -[CADDatabaseOperationGroup _copyToIntCFArrayRef:]
  -[CADDatabaseOperationGroup _importEvents:data:intoCalendarWithID:inDatabase:optionsMask:batchSize:outCalendarObjectID:outError:]
  -[CADDatabaseOperationGroup insert:deletes:updates:insertedObjectIDMap:inDatabase:]
  -[CADDatabaseOperationGroup CADDatabaseMarkIndividualChangesConsumed:reply:]
  -[CADDatabaseOperationGroup _deleteObjects:database:]
  -[CADDatabaseOperationGroup CADDatabaseMigrateSubscribedCalendar:toSource:reply:]
  -[CADDatabaseOperationGroup CADDatabaseRegisterForDetailedChangeTrackingInSource:reply:]
  -[CADDatabaseOperationGroup CADDatabaseCanModifyCalendarDatabase:]
  -[CADDatabaseOperationGroup _insert:delete:update:database:error:]
  -[CADDatabaseOperationGroup CADDatabaseGetChangesSinceSequenceToken:reply:]
  -[CADDatabaseOperationGroup CADDatabaseExportICSDataForCalendarItems:options:reply:]
  -[CADDatabaseOperationGroup preflightAccessForDeletes:updates:inDatabase:]
  -[CADDatabaseOperationGroup CADDatabaseFetchObjectChangesForEntityTypes:insideObject:reply:]
  -[CADDatabaseOperationGroup CADDatabaseLastConfirmedSplashScreenVersion:]
  -[CADDatabaseOperationGroup CADDatabaseGetChangedEntityIDsSinceTimestamp:reply:]
  -[CADDatabaseOperationGroup _updatePropertiesAndRelations:database:insertedObjectMap:]
  -[CADDatabaseOperationGroup CADDatabaseGetSequenceToken:]
  -[CADDatabaseOperationGroup CADDatabaseSetShowsDeclinedEvents:reply:]
  -[CADDatabaseOperationGroup _CADDatabaseCanModifyCalendarDatabase]
  -[CADDatabaseOperationGroup CADDatabaseGetDefaultAlarmOffsetForAllDay:reply:]
  -[CADDatabaseOperationGroup CADDatabaseRebuildOccurrenceCacheWithReply:]
  -[CADDatabaseOperationGroup CADDatabaseUnregisterForDetailedChangeTracking:]
  -[CADDatabaseOperationGroup findDatabaseForObject:withUpdates:personas:accounts:nextTempDBID:]
  -[CADDatabaseOperationGroup CADDatabaseCommitDeletes:updatesAndInserts:andFetchChangesSinceTimestamp:withReply:]
  -[CADDatabaseOperationGroup CADDatabaseExportICSDataForCalendar:options:reply:]
  -[CADDatabaseOperationGroup CADDatabaseGetUUID:]
  -[CADDatabaseOperationGroup preflightObjectID:inDatabase:]
  -[CADDatabaseOperationGroup CADDatabaseImportEvents:fromICSData:intoCalendarsWithIDs:optionsMask:batchSize:reply:]
  -[CADDatabaseOperationGroup CADDatabaseFetchChangedObjectIDs:]
  -[CADDatabaseOperationGroup _insertObjectsWithTemporaryObjectIDs:database:error:]
  -[CADDatabaseOperationGroup _copyToIntCFSetRef:]
  -[CADDatabaseOperationGroup CADDatabaseMarkChangedObjectIDsConsumedUpToSequenceToken:reply:]


CADNonRecurringEventsPredicate : CADPropertySearchPredicate
  // instance methods
  -[CADNonRecurringEventsPredicate defaultPropertiesToLoad]
  -[CADNonRecurringEventsPredicate relatedObjectPropertiesToLoad]
  -[CADNonRecurringEventsPredicate initWithStartDate:endDate:calendarIDs:]


ClientIdentity : NSObject
 @property  {?=[8I]} auditToken
 @property  NSString *bundleIdentifier
 @property  NSString *clientName
 @property  NSString *codeSigningIdentity
 @property  int pid

  // instance methods
  -[ClientIdentity initWithAuditToken:]
  -[ClientIdentity .cxx_destruct]
  -[ClientIdentity auditToken]
  -[ClientIdentity bundleIdentifier]
  -[ClientIdentity pid]
  -[ClientIdentity codeSigningIdentity]
  -[ClientIdentity clientName]


CADRouteHypothesis : NSObject <NSSecureCoding>
 @property  int transportType
 @property  NSDate *conservativeDepartureDate
 @property  double conservativeTravelTime
 @property  NSDate *suggestedDepartureDate
 @property  double estimatedTravelTime
 @property  NSDate *aggressiveDepartureDate
 @property  double aggressiveTravelTime
 @property  NSString *routeName
 @property  BOOL supportsLiveTraffic
 @property  unsigned long currentTrafficDensity
 @property  NSString *trafficDensityDescription
 @property  long long travelState

  // class methods
  +[CADRouteHypothesis supportsSecureCoding]

  // instance methods
  -[CADRouteHypothesis encodeWithCoder:]
  -[CADRouteHypothesis .cxx_destruct]
  -[CADRouteHypothesis transportType]
  -[CADRouteHypothesis routeName]
  -[CADRouteHypothesis initWithCoder:]
  -[CADRouteHypothesis supportsLiveTraffic]
  -[CADRouteHypothesis trafficDensityDescription]
  -[CADRouteHypothesis suggestedDepartureDate]
  -[CADRouteHypothesis estimatedTravelTime]
  -[CADRouteHypothesis currentTrafficDensity]
  -[CADRouteHypothesis travelState]
  -[CADRouteHypothesis conservativeDepartureDate]
  -[CADRouteHypothesis aggressiveDepartureDate]
  -[CADRouteHypothesis conservativeTravelTime]
  -[CADRouteHypothesis aggressiveTravelTime]
  -[CADRouteHypothesis initWithTransportType:conservativeDepartureDate:conservativeTravelTime:suggestedDepartureDate:estimatedTravelTime:aggressiveDepartureDate:aggressiveTravelTime:routeName:supportsLiveTraffic:currentTrafficDensity:trafficDensityDescription:travelState:]


CADStatsGeneralCollection : CADStatCollector
  // class methods
  +[CADStatsGeneralCollection eventName]

  // instance methods
  -[CADStatsGeneralCollection .cxx_destruct]
  -[CADStatsGeneralCollection eventDictionaries]
  -[CADStatsGeneralCollection init]


CADDatabaseStorageManagementOperationGroup : CADOperationGroup <CADDatabaseStorageManagementInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADDatabaseStorageManagementOperationGroup requiresEventAccess]

  // instance methods
  -[CADDatabaseStorageManagementOperationGroup CADDatabaseGetStorageUsage:]
  -[CADDatabaseStorageManagementOperationGroup accessGranted]
  -[CADDatabaseStorageManagementOperationGroup storageManagementAccessGranted]
  -[CADDatabaseStorageManagementOperationGroup sizeAttachmentsForDatabase:]
  -[CADDatabaseStorageManagementOperationGroup sizeCalendarDirectoryForDatabase:]
  -[CADDatabaseStorageManagementOperationGroup sizeDirectoryAtPath:excludingDirectory:]


CADCalendarItemOperationGroup : CADOperationGroup <CADCalendarItemInterface>
  // class methods
  +[CADCalendarItemOperationGroup requiresEventAccess]

  // instance methods
  -[CADCalendarItemOperationGroup CADDatabaseGetCalendarItemsWithUniqueIdentifier:inCalendar:reply:]
  -[CADCalendarItemOperationGroup CADDatabaseFetchCalendarItemsWithPredicate:entityType:fetchIdentifier:synchronous:reply:]
  -[CADCalendarItemOperationGroup CADDatabaseGetCalendarItemsWithUUIDs:inCalendars:propertiesToLoad:reply:]
  -[CADCalendarItemOperationGroup CADDatabaseGetCalendarItemWithUUID:reply:]
  -[CADCalendarItemOperationGroup CADDatabaseCancelFetchRequestWithIdentifier:]
  -[CADCalendarItemOperationGroup CADDatabaseExportICSForCalendarItemWithID:occurrenceDate:options:reply:]
  -[CADCalendarItemOperationGroup CADDatabaseiTIPImport:intoCalendarID:reply:]
  -[CADCalendarItemOperationGroup CADDatabaseGetAlarmWithExternalID:reply:]


_CADFetchCalendarItemsWithPredicateOperation : NSOperation <CalCancellationToken>
 @property  int fetchIdentifier
 @property  BOOL isCancelled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_CADFetchCalendarItemsWithPredicateOperation performSynchronouslyWithPredicate:entityType:connection:fetchIdentifier:cancellationToken:]
  +[_CADFetchCalendarItemsWithPredicateOperation isJunkEvent:]
  +[_CADFetchCalendarItemsWithPredicateOperation queryDatabase:withID:predicate:connection:serializer:cancellationToken:]

  // instance methods
  -[_CADFetchCalendarItemsWithPredicateOperation .cxx_destruct]
  -[_CADFetchCalendarItemsWithPredicateOperation main]
  -[_CADFetchCalendarItemsWithPredicateOperation cancel]
  -[_CADFetchCalendarItemsWithPredicateOperation initWithPredicate:entityType:connection:fetchIdentifier:completionHandler:]
  -[_CADFetchCalendarItemsWithPredicateOperation fetchIdentifier]


CADSyncOperationGroup : CADOperationGroup <CADSyncInterface>
  // class methods
  +[CADSyncOperationGroup requiresEventAccess]

  // instance methods
  -[CADSyncOperationGroup CADDatabaseGetDeletableSources:]
  -[CADSyncOperationGroup CADDatabaseGetDeletableCalendars:]
  -[CADSyncOperationGroup accessGranted]


CADCalendarItemsWithExternalIdentifierPredicate : CADEventPredicate <NSSecureCoding>
 @property  NSString *externalIdentifier
 @property  int entityType

  // class methods
  +[CADCalendarItemsWithExternalIdentifierPredicate supportsSecureCoding]

  // instance methods
  -[CADCalendarItemsWithExternalIdentifierPredicate encodeWithCoder:]
  -[CADCalendarItemsWithExternalIdentifierPredicate externalIdentifier]
  -[CADCalendarItemsWithExternalIdentifierPredicate .cxx_destruct]
  -[CADCalendarItemsWithExternalIdentifierPredicate predicateFormat]
  -[CADCalendarItemsWithExternalIdentifierPredicate copyWithZone:]
  -[CADCalendarItemsWithExternalIdentifierPredicate entityType]
  -[CADCalendarItemsWithExternalIdentifierPredicate initWithCoder:]
  -[CADCalendarItemsWithExternalIdentifierPredicate initWithExternalIdentifier:]
  -[CADCalendarItemsWithExternalIdentifierPredicate initWithExternalIdentifier:entityType:]
  -[CADCalendarItemsWithExternalIdentifierPredicate copyMatchingItemsWithDatabase:]


CADFeatureSet : NSObject
  // class methods
  +[CADFeatureSet isSuggestionsEnabled]


CADUnalertedEventsPredicate : CADPredicate <NSSecureCoding>
  // class methods
  +[CADUnalertedEventsPredicate supportsSecureCoding]
  +[CADUnalertedEventsPredicate predicate]

  // instance methods
  -[CADUnalertedEventsPredicate predicateFormat]
  -[CADUnalertedEventsPredicate copyWithZone:]
  -[CADUnalertedEventsPredicate copyMatchingItemsWithDatabase:]


CADEventTimeWindowPredicate : CADPredicate <NSSecureCoding>
 @property  CADPredicate *wrappedPredicate
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  BOOL mustStartInInterval

  // class methods
  +[CADEventTimeWindowPredicate supportsSecureCoding]

  // instance methods
  -[CADEventTimeWindowPredicate endDate]
  -[CADEventTimeWindowPredicate encodeWithCoder:]
  -[CADEventTimeWindowPredicate .cxx_destruct]
  -[CADEventTimeWindowPredicate defaultPropertiesToLoad]
  -[CADEventTimeWindowPredicate predicateFormat]
  -[CADEventTimeWindowPredicate startDate]
  -[CADEventTimeWindowPredicate initWithCoder:]
  -[CADEventTimeWindowPredicate wrappedPredicate]
  -[CADEventTimeWindowPredicate initWithPredicate:limitWithStartDate:endDate:mustStartInInterval:]
  -[CADEventTimeWindowPredicate mustStartInInterval]
  -[CADEventTimeWindowPredicate copyMatchingItemsWithDatabase:]


CADXPCInvocationContextHolder : NSObject
 @property  id proxy

  // instance methods
  -[CADXPCInvocationContextHolder proxy]
  -[CADXPCInvocationContextHolder clear]
  -[CADXPCInvocationContextHolder .cxx_destruct]
  -[CADXPCInvocationContextHolder retainProxy:andArgumentsInInvocation:]


CADXPCProxyHelper : NSObject
 @property  CADDatabaseInitializationOptions *initializationOptions
 @property  <CADXPCProxyHelperDelegate> *delegate

  // instance methods
  -[CADXPCProxyHelper methodSignatureForSelector:]
  -[CADXPCProxyHelper initializationOptions]
  -[CADXPCProxyHelper setDelegate:]
  -[CADXPCProxyHelper _shouldResendInitializationOptionsForInvocation:]
  -[CADXPCProxyHelper delegate]
  -[CADXPCProxyHelper .cxx_destruct]
  -[CADXPCProxyHelper _callReplyHandler:ofInvocation:withErrorCode:]
  -[CADXPCProxyHelper _tryInvokeWithGenerationValidation:target:replyBlock:contextHolder:]
  -[CADXPCProxyHelper setInitializationOptions:]
  -[CADXPCProxyHelper _validateCADObjectIDsInInvocationArguments:]
  -[CADXPCProxyHelper _replaceReplyBlockInInvocation:retryingAfterInitializationWithContextHolder:]
  -[CADXPCProxyHelper forwardInvocation:]
  -[CADXPCProxyHelper _getReplyBlockFromInvocation:]
  -[CADXPCProxyHelper initWithXPCConnection:protocol:synchronous:]
  -[CADXPCProxyHelper replyBlockArgumentIndex:]


CADGenerationStampedObjectID : CADObjectID
 @property  int restoreGeneration

  // instance methods
  -[CADGenerationStampedObjectID classForCoder]
  -[CADGenerationStampedObjectID initWithEntityType:entityID:databaseID:generation:]
  -[CADGenerationStampedObjectID restoreGeneration]
  -[CADGenerationStampedObjectID initWithEntityType:entityID:generation:]
  -[CADGenerationStampedObjectID isEqual:]


CADDiagnosticsUtils : NSObject
  // class methods
  +[CADDiagnosticsUtils compressFileAt:to:context:]


CADCalLocationSearchOperation : CADCalSearchOperation
  // instance methods
  -[CADCalLocationSearchOperation configureSearch:]


CADMigrationOperationGroup : CADOperationGroup <CADMigrationInterface>
  // class methods
  +[CADMigrationOperationGroup requiresEventAccess]

  // instance methods
  -[CADMigrationOperationGroup CADMigrateDatabaseIfNeeded:]


CalDAVLogScrubber : NSObject
 @property  NSURL *inputURL
 @property  NSURL *outputURL
 @property  <CADDiagnosticLogContext> *context

  // class methods
  +[CalDAVLogScrubber log]
  +[CalDAVLogScrubber sortICSDocuments]
  +[CalDAVLogScrubber setSortICSDocuments:]
  +[CalDAVLogScrubber redactLog:toOutputFile:context:]

  // instance methods
  -[CalDAVLogScrubber .cxx_destruct]
  -[CalDAVLogScrubber setContext:]
  -[CalDAVLogScrubber setOutputURL:]
  -[CalDAVLogScrubber cleanUp]
  -[CalDAVLogScrubber context]
  -[CalDAVLogScrubber init]
  -[CalDAVLogScrubber outputURL]
  -[CalDAVLogScrubber inputURL]
  -[CalDAVLogScrubber scrub]
  -[CalDAVLogScrubber temporaryUncompressedFile]
  -[CalDAVLogScrubber decompressedInputFile]
  -[CalDAVLogScrubber compressFileAt:to:]
  -[CalDAVLogScrubber setInputURL:]


CalXMLElementRedactionRule : NSObject
 @property  int elementName
 @property  int content
 @property  int cdata
 @property  NSDictionary *attributes

  // instance methods
  -[CalXMLElementRedactionRule setAttributes:]
  -[CalXMLElementRedactionRule attributes]
  -[CalXMLElementRedactionRule content]
  -[CalXMLElementRedactionRule .cxx_destruct]
  -[CalXMLElementRedactionRule elementName]
  -[CalXMLElementRedactionRule setContent:]
  -[CalXMLElementRedactionRule setElementName:]
  -[CalXMLElementRedactionRule redactionRuleForAttribute:]
  -[CalXMLElementRedactionRule cdata]
  -[CalXMLElementRedactionRule setCdata:]


CalXMLAttributeRedactionRule : NSObject
 @property  int attributeName
 @property  int attributeValue

  // instance methods
  -[CalXMLAttributeRedactionRule attributeValue]
  -[CalXMLAttributeRedactionRule setAttributeValue:]
  -[CalXMLAttributeRedactionRule attributeName]
  -[CalXMLAttributeRedactionRule setAttributeName:]


CalXMLSanitizer : NSObject <NSXMLParserDelegate>
 @property  ^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq} output
 @property  NSString *scrubbedXML
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CalXMLSanitizer parser:didStartElement:namespaceURI:qualifiedName:attributes:]
  -[CalXMLSanitizer .cxx_destruct]
  -[CalXMLSanitizer setOutput:]
  -[CalXMLSanitizer parser:didEndElement:namespaceURI:qualifiedName:]
  -[CalXMLSanitizer parser:parseErrorOccurred:]
  -[CalXMLSanitizer parser:foundCDATA:]
  -[CalXMLSanitizer parser:foundCharacters:]
  -[CalXMLSanitizer init]
  -[CalXMLSanitizer output]
  -[CalXMLSanitizer parser:foundComment:]
  -[CalXMLSanitizer getIndentation]
  -[CalXMLSanitizer currentRedactionRule]
  -[CalXMLSanitizer _appendNamespaceURI:forElementName:qualifiedName:]
  -[CalXMLSanitizer flushContents]
  -[CalXMLSanitizer scrubbedXML]


CADNotificationCenterVisibleEventsPredicate : CADPredicate <NSSecureCoding>
  // class methods
  +[CADNotificationCenterVisibleEventsPredicate supportsSecureCoding]
  +[CADNotificationCenterVisibleEventsPredicate predicate]

  // instance methods
  -[CADNotificationCenterVisibleEventsPredicate predicateFormat]
  -[CADNotificationCenterVisibleEventsPredicate copyWithZone:]
  -[CADNotificationCenterVisibleEventsPredicate copyMatchingItemsWithDatabase:]


CADStatsEvents : CADStatCollector
  // class methods
  +[CADStatsEvents eventName]

  // instance methods
  -[CADStatsEvents .cxx_destruct]
  -[CADStatsEvents eventDictionaries]
  -[CADStatsEvents prepareWithContext:]
  -[CADStatsEvents wantsEvents]
  -[CADStatsEvents processEvents:]


CADStatsEventInfo : NSObject

CADCalendarDatabaseRedactor : NSObject
 @property  NSURL *path

  // instance methods
  -[CADCalendarDatabaseRedactor path]
  -[CADCalendarDatabaseRedactor .cxx_destruct]
  -[CADCalendarDatabaseRedactor setPath:]
  -[CADCalendarDatabaseRedactor redact]
  -[CADCalendarDatabaseRedactor initWithPath:context:]
  -[CADCalendarDatabaseRedactor _redactOmatic:]
  -[CADCalendarDatabaseRedactor _specialRedactions:]


CADAnonymousOperationProxy : CADOperationProxy
  // class methods
  +[CADAnonymousOperationProxy allOperationGroupClasses]


CADTestingOperationProxy : CADOperationProxy
  // class methods
  +[CADTestingOperationProxy allOperationGroupClasses]


CADEventOnlyOperationProxy : CADOperationProxy
  // class methods
  +[CADEventOnlyOperationProxy allOperationGroupClasses]


CADReminderOnlyOperationProxy : CADOperationProxy
  // class methods
  +[CADReminderOnlyOperationProxy allOperationGroupClasses]


CADEventAndReminderOperationProxy : CADOperationProxy
  // class methods
  +[CADEventAndReminderOperationProxy allOperationGroupClasses]


CADSpringBoardOperationProxy : CADEventAndReminderOperationProxy
  // class methods
  +[CADSpringBoardOperationProxy allOperationGroupClasses]


CADMobileCalOperationProxy : CADEventOnlyOperationProxy
  // class methods
  +[CADMobileCalOperationProxy allOperationGroupClasses]


CADRemindersOperationProxy : CADReminderOnlyOperationProxy
  // class methods
  +[CADRemindersOperationProxy allOperationGroupClasses]


CADEventKitSyncOperationProxy : CADOperationProxy
  // class methods
  +[CADEventKitSyncOperationProxy allOperationGroupClasses]


CADCalendarToolOperationProxy : CADOperationProxy
  // class methods
  +[CADCalendarToolOperationProxy allOperationGroupClasses]


CADNotificationCountOperationProxy : CADOperationProxy
  // class methods
  +[CADNotificationCountOperationProxy allOperationGroupClasses]


CADOperationProxy : NSObject
  // class methods
  +[CADOperationProxy allOperationGroupClasses]
  +[CADOperationProxy operationProxyClassForClientWithConnection:]
  +[CADOperationProxy _operationGroupClassFromSelector:]
  +[CADOperationProxy _selectorMayBeCalledBeforeInitialization:]

  // instance methods
  -[CADOperationProxy methodSignatureForSelector:]
  -[CADOperationProxy dealloc]
  -[CADOperationProxy forwardingTargetForSelector:]
  -[CADOperationProxy forwardInvocation:]
  -[CADOperationProxy initWithClientConnection:]
  -[CADOperationProxy _emptyMethod]
  -[CADOperationProxy _operationGroupForClass:]
  -[CADOperationProxy _copyReplyBlockFromInvocation:]
  -[CADOperationProxy _callReplyHandler:ofInvocation:withError:]


ClientConnection : NSObject <CalCalendarDatabaseRestoreGenerationChangedDelegate, CalCalendarDatabaseIntegrityErrorReportingDelegate, CDBAccountInfo>
 @property  CADAccountAccessHandler *accountAccessHandler
 @property  <ClientConnectionDelegate> *delegate
 @property  <CDBAccountInfo> *localAccountInfo
 @property  ClientIdentity *identity
 @property  CADOperationProxy *cadOperationProxy
 @property  NSXPCConnection *xpcConnection
 @property  NSString *changeTrackingID
 @property  CADDatabaseInitializationOptions *databaseInitializationOptions
 @property  BOOL initializationOptionsSet
 @property  int databaseRestoreGeneration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ClientConnection dumpState]
  -[ClientConnection isStoreRestricted:forAction:strict:]
  -[ClientConnection isStoreManaged:]
  -[ClientConnection trySetDatabaseInitializationOptions:]
  -[ClientConnection localAccountInfo]
  -[ClientConnection withDatabaseID:perform:]
  -[ClientConnection _logAccessToResolvedObjectIDs:]
  -[ClientConnection operations]
  -[ClientConnection isNotificationRestricted:forAction:]
  -[ClientConnection _resolveObjectIDForLoggingAccessToEntity:]
  -[ClientConnection setDelegate:]
  -[ClientConnection xpcConnection]
  -[ClientConnection addOperation:]
  -[ClientConnection initWithXPCConnection:]
  -[ClientConnection _databaseRestoreGenerationChanged:]
  -[ClientConnection isCalendarItemManaged:]
  -[ClientConnection delegate]
  -[ClientConnection logAccessToObjects:]
  -[ClientConnection cadOperationProxy]
  -[ClientConnection dealloc]
  -[ClientConnection clearCachedAuthorizationStatus]
  -[ClientConnection isStoreRestricted:forAction:]
  -[ClientConnection _objectIDsResolvedAndLoggable:]
  -[ClientConnection reportIntegrityErrors:]
  -[ClientConnection _objectIDsToBeResolved:]
  -[ClientConnection .cxx_destruct]
  -[ClientConnection _createManagedConfigAccountAccessHandlerWithValidator:]
  -[ClientConnection logAccessToEntities:]
  -[ClientConnection _accountsProvider]
  -[ClientConnection eventAccessGranted]
  -[ClientConnection withDatabaseForObject:perform:]
  -[ClientConnection initializationOptionsSet]
  -[ClientConnection managedConfigurationAccountAccessForStore:]
  -[ClientConnection setXpcConnection:]
  -[ClientConnection strictAccountAccessHandler]
  -[ClientConnection addCreatedAuxDatabase:]
  -[ClientConnection identity]
  -[ClientConnection accountsProvider]
  -[ClientConnection isCalendarManaged:]
  -[ClientConnection databaseInitializationOptions]
  -[ClientConnection restrictedCalendarRowIDsForAction:inDatabase:]
  -[ClientConnection isCalendarItemRestricted:forAction:]
  -[ClientConnection performWithAllDatabases:]
  -[ClientConnection validateAuxDatabases]
  -[ClientConnection databaseRestoreGeneration]
  -[ClientConnection _initAccountAccessHandler]
  -[ClientConnection changeTrackingID]
  -[ClientConnection accountAccessHandler]
  -[ClientConnection handleDatabaseChangedExternally]
  -[ClientConnection setLocalAccountInfo:]
  -[ClientConnection _loadAccessPermissionsIfNeeded]
  -[ClientConnection closeDatabases]
  -[ClientConnection _closeDatabases]
  -[ClientConnection handleDatabaseChanged]
  -[ClientConnection addressIsAccountOwner:]
  -[ClientConnection _isPrimaryObjectTypeForAccessLogging:]
  -[ClientConnection withDatabaseForObjects:perform:]
  -[ClientConnection withDatabaseForObjects:options:perform:]
  -[ClientConnection _resolveObjectIDsForLogging:]
  -[ClientConnection logAccessToObject:]
  -[ClientConnection database:restoreGenerationChangedExternally:]
  -[ClientConnection isAlarmRestricted:forAction:]
  -[ClientConnection reminderAccessGranted]
  -[ClientConnection _databases]
  -[ClientConnection databaseRestoreGenerationChanged:]
  -[ClientConnection isCalendarRestricted:forAction:]


CADSequenceToken : NSObject <NSSecureCoding>
 @property  NSDictionary *allDBSequenceMap

  // class methods
  +[CADSequenceToken supportsSecureCoding]

  // instance methods
  -[CADSequenceToken mainDBSequence]
  -[CADSequenceToken encodeWithCoder:]
  -[CADSequenceToken .cxx_destruct]
  -[CADSequenceToken serializedSequenceString]
  -[CADSequenceToken initWithAllDBSequenceMap:]
  -[CADSequenceToken initWithSerializedSequenceString:]
  -[CADSequenceToken initWithMainDBSequence:]
  -[CADSequenceToken allDBSequenceMap]
  -[CADSequenceToken sequenceForDatabaseID:]
  -[CADSequenceToken isEqual:]
  -[CADSequenceToken initWithCoder:]


CADCompoundFilter : CADFilter
 @property  NSArray *filters
 @property  long long operation

  // class methods
  +[CADCompoundFilter supportsSecureCoding]

  // instance methods
  -[CADCompoundFilter filters]
  -[CADCompoundFilter validate]
  -[CADCompoundFilter operation]
  -[CADCompoundFilter encodeWithCoder:]
  -[CADCompoundFilter .cxx_destruct]
  -[CADCompoundFilter initWithCoder:]
  -[CADCompoundFilter initWithFilters:operation:]
  -[CADCompoundFilter applicableToEntityType:]
  -[CADCompoundFilter extendWhereClause:usingOperation:withValues:andTypes:]


CADMCProfileConnectionManagedConfigurationHandler : NSObject <CADManagedConfigurationHandler>
 @property  MCProfileConnection *connection

  // instance methods
  -[CADMCProfileConnectionManagedConfigurationHandler mayShowLocalAccountsForBundleID:sourceAccountManagement:]
  -[CADMCProfileConnectionManagedConfigurationHandler filteredOpenInOriginatingAccounts:targetAppBundleID:targetAccountManagement:]
  -[CADMCProfileConnectionManagedConfigurationHandler isOpenInRestrictionInEffect]
  -[CADMCProfileConnectionManagedConfigurationHandler filteredOpenInAccounts:originatingAppBundleID:sourceAccountManagement:]
  -[CADMCProfileConnectionManagedConfigurationHandler mayShowLocalAccountsForTargetBundleID:targetAccountManagement:]
  -[CADMCProfileConnectionManagedConfigurationHandler .cxx_destruct]
  -[CADMCProfileConnectionManagedConfigurationHandler connection]
  -[CADMCProfileConnectionManagedConfigurationHandler initWithMCProfileConnection:]


CADNotification : NSObject
 @property  NSMutableArray *mutableExpandedNotifications
 @property  int type
 @property  CADObjectID *objectID
 @property  double occurrenceDate
 @property  double expirationDate
 @property  BOOL expanded
 @property  NSArray *expandedNotifications

  // instance methods
  -[CADNotification objectID]
  -[CADNotification expirationDate]
  -[CADNotification expanded]
  -[CADNotification type]
  -[CADNotification .cxx_destruct]
  -[CADNotification occurrenceDate]
  -[CADNotification initWithType:objectID:occurrenceDate:expirationDate:]
  -[CADNotification expandedNotifications]
  -[CADNotification addExpandedNotification:]
  -[CADNotification mutableExpandedNotifications]
  -[CADNotification setMutableExpandedNotifications:]


CADExpandedNotification : CADNotification
 @property  CADObjectID *attendeeObjectID

  // instance methods
  -[CADExpandedNotification expanded]
  -[CADExpandedNotification .cxx_destruct]
  -[CADExpandedNotification initWithType:objectID:occurrenceDate:expirationDate:attendeeObjectID:]
  -[CADExpandedNotification attendeeObjectID]
  -[CADExpandedNotification setAttendeeObjectID:]


CADNotificationUtilities : NSObject
  // class methods
  +[CADNotificationUtilities _storeIsDelegate:]
  +[CADNotificationUtilities _occurrenceDatesFromNotifications:]
  +[CADNotificationUtilities _gatherSharedCalendarInviteReplyNotification:withContext:database:databaseID:]
  +[CADNotificationUtilities CADDatabaseGetEventNotificationItemsWithConnection:afterDate:forSourceWithExternalIdentifier:excludingDelegateSources:excludingUncheckedCalendars:filteredByShowsNotificationsFlag:expanded:earliestExpirationDate:notificationTypes:objectIDs:occurrenceDates:attendeeObjectIDs:]
  +[CADNotificationUtilities _attendeeObjectIDsFromNotifications:]
  +[CADNotificationUtilities flattenedNotificationsFromNotifications:expanded:]
  +[CADNotificationUtilities storeIsReadOnlyDelegate:]
  +[CADNotificationUtilities _logNotificationCountsForNotifications:]
  +[CADNotificationUtilities _gatherSharedCalendarResponsesAndResourceChangesWithContext:]
  +[CADNotificationUtilities _gatherSharedCalendarResourceChangeNotification:withContext:database:databaseID:]
  +[CADNotificationUtilities _notificationTypesFromNotifications:]
  +[CADNotificationUtilities _gatherSuggestionResourceChangeNotification:withContext:database:databaseID:]
  +[CADNotificationUtilities _objectIDsFromNotifications:]
  +[CADNotificationUtilities _stringForNotificationType:]
  +[CADNotificationUtilities _gatherSharedCalendarInvitationsWithContext:]
  +[CADNotificationUtilities _gatherEventInvitationsAndRepliesWithContext:]


CADNotificationGatheringContext : NSObject
 @property  ClientConnection *connection
 @property  NSArray *notifications
 @property  double now
 @property  NSDate *earliestExpiringNotification
 @property  BOOL deleteOldNotifications
 @property  BOOL expanded

  // instance methods
  -[CADNotificationGatheringContext now]
  -[CADNotificationGatheringContext expirationTimestampForEvent:withInitialOccurrenceDate:database:]
  -[CADNotificationGatheringContext expanded]
  -[CADNotificationGatheringContext endDateOfLastOccurrenceInCacheForEvent:database:cacheRange:]
  -[CADNotificationGatheringContext expirationTimestampForRecurrence:event:database:]
  -[CADNotificationGatheringContext shouldSkipNotificationForCalendar:]
  -[CADNotificationGatheringContext isEventTimeSensitiveForFocus:]
  -[CADNotificationGatheringContext .cxx_destruct]
  -[CADNotificationGatheringContext shouldSkipNotificationForStore:]
  -[CADNotificationGatheringContext connection]
  -[CADNotificationGatheringContext deleteOldNotifications]
  -[CADNotificationGatheringContext expirationTimestampForEvent:database:]
  -[CADNotificationGatheringContext addNotification:]
  -[CADNotificationGatheringContext notifications]
  -[CADNotificationGatheringContext earliestExpiringNotification]
  -[CADNotificationGatheringContext initWithConnection:afterDate:forSourceWithExternalIdentifier:excludingDelegateSources:excludingUncheckedCalendars:filteredByShowsNotificationsFlag:expanded:]


CADSpotlightOperationGroup : CADOperationGroup
  // class methods
  +[CADSpotlightOperationGroup requiresEventAccess]
  +[CADSpotlightOperationGroup whitelistedBundles]

  // instance methods
  -[CADSpotlightOperationGroup accessGranted]
  -[CADSpotlightOperationGroup CADPushItemsToSpotlight:reply:]
  -[CADSpotlightOperationGroup CADWaitForSpotlightUpdatesWithReply:]
  -[CADSpotlightOperationGroup _gatherAllCalendarItemUUIDsInDatbase:]


CADFetchedObjectSerializer : NSObject
 @property  ClientConnection *connection
 @property  NSArray *defaultPropertiesToLoad
 @property  NSDictionary *relatedObjectPropertiesToLoad
 @property  NSMutableArray *wrappers
 @property  NSMutableSet *seenObjectIDs
 @property  NSArray *fetchedObjectWrappers

  // instance methods
  -[CADFetchedObjectSerializer _fetchedObjectDictionaryForEntity:]
  -[CADFetchedObjectSerializer fetchedObjectWrappers]
  -[CADFetchedObjectSerializer _properties:forEntityIfNotSeen:objectExists:]
  -[CADFetchedObjectSerializer initWithConnection:defaultPropertiesToLoad:relatedObjectPropertiesToLoad:]
  -[CADFetchedObjectSerializer seenObjectIDs]
  -[CADFetchedObjectSerializer .cxx_destruct]
  -[CADFetchedObjectSerializer defaultPropertiesToLoad]
  -[CADFetchedObjectSerializer connection]
  -[CADFetchedObjectSerializer initWithConnection:defaultPropertiesToLoad:]
  -[CADFetchedObjectSerializer wrappers]
  -[CADFetchedObjectSerializer relatedObjectPropertiesToLoad]
  -[CADFetchedObjectSerializer addEntity:]


CADEventsForAssistantSearchPredicate : EKPredicate <NSSecureCoding>
 @property  NSString *location
 @property  NSString *notes
 @property  NSArray *participants
 @property  long long limit

  // class methods
  +[CADEventsForAssistantSearchPredicate supportsSecureCoding]

  // instance methods
  -[CADEventsForAssistantSearchPredicate participants]
  -[CADEventsForAssistantSearchPredicate limit]
  -[CADEventsForAssistantSearchPredicate setLimit:]
  -[CADEventsForAssistantSearchPredicate setParticipants:]
  -[CADEventsForAssistantSearchPredicate setNotes:]
  -[CADEventsForAssistantSearchPredicate encodeWithCoder:]
  -[CADEventsForAssistantSearchPredicate .cxx_destruct]
  -[CADEventsForAssistantSearchPredicate notes]
  -[CADEventsForAssistantSearchPredicate defaultPropertiesToLoad]
  -[CADEventsForAssistantSearchPredicate setLocation:]
  -[CADEventsForAssistantSearchPredicate predicateFormat]
  -[CADEventsForAssistantSearchPredicate copyWithZone:]
  -[CADEventsForAssistantSearchPredicate location]
  -[CADEventsForAssistantSearchPredicate initWithCoder:]
  -[CADEventsForAssistantSearchPredicate initWithTimeZone:startDate:endDate:title:location:notes:participants:limit:]
  -[CADEventsForAssistantSearchPredicate copyMatchingItemsWithDatabase:]


CADEventCreatedFromSuggestionPredicate : EKPredicate
 @property  NSString *opaqueKey
 @property  NSString *extractionGroupIdentifier

  // class methods
  +[CADEventCreatedFromSuggestionPredicate supportsSecureCoding]
  +[CADEventCreatedFromSuggestionPredicate predicateForAllSuggestedEvents]

  // instance methods
  -[CADEventCreatedFromSuggestionPredicate encodeWithCoder:]
  -[CADEventCreatedFromSuggestionPredicate .cxx_destruct]
  -[CADEventCreatedFromSuggestionPredicate defaultPropertiesToLoad]
  -[CADEventCreatedFromSuggestionPredicate predicateFormat]
  -[CADEventCreatedFromSuggestionPredicate isEqual:]
  -[CADEventCreatedFromSuggestionPredicate initWithCoder:]
  -[CADEventCreatedFromSuggestionPredicate opaqueKey]
  -[CADEventCreatedFromSuggestionPredicate initWithExtractionGroupIdentifier:]
  -[CADEventCreatedFromSuggestionPredicate initWithOpaqueKey:]
  -[CADEventCreatedFromSuggestionPredicate extractionGroupIdentifier]
  -[CADEventCreatedFromSuggestionPredicate copyMatchingItemsWithDatabase:]
  -[CADEventCreatedFromSuggestionPredicate initWithOpaqueKey:extractionGroupIdentifier:]


CADDiagnosticsCalDAVLogCollector : NSObject <CADDiagnosticLogCollector>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CADDiagnosticsCalDAVLogCollector .cxx_destruct]
  -[CADDiagnosticsCalDAVLogCollector determineExpectedOutputFiles:]
  -[CADDiagnosticsCalDAVLogCollector collect:]
  -[CADDiagnosticsCalDAVLogCollector findAllLogFiles:]
  -[CADDiagnosticsCalDAVLogCollector sortAndTrimLogFiles:context:]
  -[CADDiagnosticsCalDAVLogCollector parseFilenameDates:context:]


CADRealCalendarDatabaseDataProvider : NSObject <CADCalendarDatabaseDataProvider>
  // class methods
  +[CADRealCalendarDatabaseDataProvider realDataProvider]

  // instance methods
  -[CADRealCalendarDatabaseDataProvider naturalLanguageSuggestionsCalendarRowIDInDatabase:]
  -[CADRealCalendarDatabaseDataProvider storesInDatabase:]
  -[CADRealCalendarDatabaseDataProvider isLocalStore:inDatabase:]
  -[CADRealCalendarDatabaseDataProvider gatherCalendarRowIDs:inStore:inDatabase:]
  -[CADRealCalendarDatabaseDataProvider suggestionsCalendarRowIDInDatabase:]
  -[CADRealCalendarDatabaseDataProvider accountIDForStore:inDatabase:]
  -[CADRealCalendarDatabaseDataProvider storeIDForStore:inDatabase:]
  -[CADRealCalendarDatabaseDataProvider isStoreDelegate:inDatabase:]
  -[CADRealCalendarDatabaseDataProvider databaseID:]


CADNotificationCountOperationGroup : CADOperationGroup <CADNotificationCountInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADNotificationCountOperationGroup requiresEventAccess]

  // instance methods
  -[CADNotificationCountOperationGroup CADDatabaseGetNotificationCountExcludingUncheckedCalendars:expanded:reply:]


CADDiagnosticsDiagnosticDatabaseCollector : NSObject <CADDiagnosticLogCollector>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CADDiagnosticsDiagnosticDatabaseCollector .cxx_destruct]
  -[CADDiagnosticsDiagnosticDatabaseCollector determineExpectedOutputFiles:]
  -[CADDiagnosticsDiagnosticDatabaseCollector collect:]
  -[CADDiagnosticsDiagnosticDatabaseCollector collectDiagnosticsDatabase:]


CADStatsOccurrences : CADStatCollector
  // class methods
  +[CADStatsOccurrences eventName]

  // instance methods
  -[CADStatsOccurrences .cxx_destruct]
  -[CADStatsOccurrences eventDictionaries]
  -[CADStatsOccurrences prepareWithContext:]
  -[CADStatsOccurrences wantsOccurrences]
  -[CADStatsOccurrences desiredOccurrenceRange]
  -[CADStatsOccurrences processOccurrences:]


CADStatsOccurrenceInfo : NSObject

EKPredicate : CADPredicate <NSSecureCoding>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSArray *calendars
 @property  NSString *title

  // class methods
  +[EKPredicate supportsSecureCoding]

  // instance methods
  -[EKPredicate endDate]
  -[EKPredicate encodeWithCoder:]
  -[EKPredicate .cxx_destruct]
  -[EKPredicate setStartDate:]
  -[EKPredicate setEndDate:]
  -[EKPredicate predicateFormat]
  -[EKPredicate title]
  -[EKPredicate calendars]
  -[EKPredicate startDate]
  -[EKPredicate setTitle:]
  -[EKPredicate initWithCoder:]
  -[EKPredicate setCalendars:]
  -[EKPredicate initWithCalendars:]
  -[EKPredicate databasesToQuery]
  -[EKPredicate createCalendarMaps]
  -[EKPredicate calendarRowIDsForDatabaseID:]
  -[EKPredicate restrictedCalendarRowIDsForDatabaseID:]
  -[EKPredicate setRestrictedCalendarRowIDs:forDatabaseID:]


CADSpotlightDaemonClientHandler : NSObject <SpotlightDaemonClient>
  // instance methods
  -[CADSpotlightDaemonClientHandler start]
  -[CADSpotlightDaemonClientHandler reindexAllItemsForBundleID:protectionClass:acknowledgementHandler:]
  -[CADSpotlightDaemonClientHandler reindexItemsWithIdentifiers:bundleID:protectionClass:acknowledgementHandler:]
  -[CADSpotlightDaemonClientHandler provideDataForBundleID:protectionClass:itemIdentifier:typeIdentifier:options:completionHandler:]
  -[CADSpotlightDaemonClientHandler provideFileURLForBundleID:protectionClass:itemIdentifier:typeIdentifier:options:completionHandler:]
  -[CADSpotlightDaemonClientHandler textRepresentationForEvent:]


CADUpcomingEventsPredicate : CADPredicate <NSSecureCoding>
 @property  int limit

  // class methods
  +[CADUpcomingEventsPredicate supportsSecureCoding]
  +[CADUpcomingEventsPredicate predicateWithLimit:]

  // instance methods
  -[CADUpcomingEventsPredicate limit]
  -[CADUpcomingEventsPredicate encodeWithCoder:]
  -[CADUpcomingEventsPredicate initWithLimit:]
  -[CADUpcomingEventsPredicate predicateFormat]
  -[CADUpcomingEventsPredicate copyWithZone:]
  -[CADUpcomingEventsPredicate initWithCoder:]
  -[CADUpcomingEventsPredicate copyMatchingItemsWithDatabase:]


CADDiagnosticOperationGroup : CADOperationGroup <CADDiagnosticInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CADDiagnosticOperationGroup accessGranted]
  -[CADDiagnosticOperationGroup CADDiagnosticsCollectWithToken:options:reply:]
  -[CADDiagnosticOperationGroup CADDiagnosticsCancelCollectionWithToken:reply:]


CADUnacknowledgedEventsPredicate : CADPredicate <NSSecureCoding>
  // class methods
  +[CADUnacknowledgedEventsPredicate supportsSecureCoding]
  +[CADUnacknowledgedEventsPredicate predicate]

  // instance methods
  -[CADUnacknowledgedEventsPredicate predicateFormat]
  -[CADUnacknowledgedEventsPredicate copyWithZone:]
  -[CADUnacknowledgedEventsPredicate copyMatchingItemsWithDatabase:]


CADServer : NSObject <NSXPCListenerDelegate, ClientConnectionDelegate, DatabaseChangeHandling, CalActivatable>
 @property  NSArray *modules
 @property  BOOL active
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *alarmQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CADServer alarmQueue]
  -[CADServer _dumpState]
  -[CADServer _handleDatabaseChanged]
  -[CADServer _registerForNotifications]
  -[CADServer modules]
  -[CADServer _protectedDataDidBecomeAvailable]
  -[CADServer activate]
  -[CADServer _contactsAuthorization]
  -[CADServer _registerForAnalyticsCollection]
  -[CADServer _enableICloudBackups]
  -[CADServer workQueue]
  -[CADServer deactivate]
  -[CADServer _registerForDatabaseCleanup]
  -[CADServer _trimExtendAndUpdateOccurrenceCache:]
  -[CADServer _deactivateAndExit]
  -[CADServer registerForStateCapture]
  -[CADServer setModules:]
  -[CADServer setWorkQueue:]
  -[CADServer _registerForConferenceURLRenewal]
  -[CADServer dealloc]
  -[CADServer isActive]
  -[CADServer _registerContactsAccess]
  -[CADServer .cxx_destruct]
  -[CADServer _setUpSignalHandlers]
  -[CADServer _startBirthdayListener]
  -[CADServer _registerForAlarmEvents]
  -[CADServer initWithModules:]
  -[CADServer cleanupDatabase:]
  -[CADServer _handleXPCConnection:]
  -[CADServer _registerForChangeTableCleanup]
  -[CADServer _registerForAttachmentCleanup]
  -[CADServer setActive:]
  -[CADServer _tearDownSignalHandlers]
  -[CADServer _registerActivityWithIdentifier:block:]
  -[CADServer _setupBirthdayListener]
  -[CADServer _finishInitializationWithDataAvailable]
  -[CADServer _registerMaintenanceActivities]
  -[CADServer _storeTypeStringFromType:]
  -[CADServer _migrateIfNeeded]
  -[CADServer _registerForOccurrenceCacheUpdate]
  -[CADServer clientConnectionDied:]
  -[CADServer _exit]
  -[CADServer _lastKnownContactsAuthorization]
  -[CADServer _cleanupChangeTablesInDatabase:]
  -[CADServer listener:shouldAcceptNewConnection:]
  -[CADServer init]


CADPropertySearchPredicate : CADPredicate
 @property  int entityType
 @property  NSArray *filters
 @property  NSArray *calendarIDs
 @property  CADObjectID *sourceID

  // class methods
  +[CADPropertySearchPredicate supportsSecureCoding]

  // instance methods
  -[CADPropertySearchPredicate sourceID]
  -[CADPropertySearchPredicate filters]
  -[CADPropertySearchPredicate validate]
  -[CADPropertySearchPredicate encodeWithCoder:]
  -[CADPropertySearchPredicate .cxx_destruct]
  -[CADPropertySearchPredicate defaultPropertiesToLoad]
  -[CADPropertySearchPredicate predicateFormat]
  -[CADPropertySearchPredicate entityType]
  -[CADPropertySearchPredicate initWithCoder:]
  -[CADPropertySearchPredicate initWithEntityType:filters:calendar:]
  -[CADPropertySearchPredicate initWithEntityType:filters:source:]
  -[CADPropertySearchPredicate calendarIDs]
  -[CADPropertySearchPredicate copyMatchingItemsWithDatabase:]
  -[CADPropertySearchPredicate databasesToQuery]
  -[CADPropertySearchPredicate initWithEntityType:filters:calendars:]
  -[CADPropertySearchPredicate initWithEntityType:filters:calendars:source:]
  -[CADPropertySearchPredicate extendWhereClauseWithEntityTypeLimitation:withValues:andTypes:]
  -[CADPropertySearchPredicate calendarRowIDsByDatabaseID]
  -[CADPropertySearchPredicate extendWhereClauseWithCalendarOrSourceLimitation:withValues:andTypes:forDatabase:]
  -[CADPropertySearchPredicate buildWhereClauseWithValues:andTypes:forDatabase:]


CADPropertyFilter : CADFilter
 @property  long long property
 @property  long long comparison
 @property  NSString *stringValue
 @property  long long integerValue
 @property  NSDate *dateValue
 @property  BOOL isString
 @property  BOOL isInteger
 @property  BOOL isDate

  // class methods
  +[CADPropertyFilter supportsSecureCoding]

  // instance methods
  -[CADPropertyFilter validate]
  -[CADPropertyFilter integerValue]
  -[CADPropertyFilter property]
  -[CADPropertyFilter isInteger]
  -[CADPropertyFilter encodeWithCoder:]
  -[CADPropertyFilter dateValue]
  -[CADPropertyFilter stringValue]
  -[CADPropertyFilter .cxx_destruct]
  -[CADPropertyFilter comparison]
  -[CADPropertyFilter initWithCoder:]
  -[CADPropertyFilter isString]
  -[CADPropertyFilter isDate]
  -[CADPropertyFilter initWithProperty:comparison:dateValue:]
  -[CADPropertyFilter initWithProperty:comparison:integerValue:]
  -[CADPropertyFilter initWithProperty:comparison:stringValue:]
  -[CADPropertyFilter applicableToEntityType:]
  -[CADPropertyFilter extendWhereClause:usingOperation:withValues:andTypes:]
  -[CADPropertyFilter validateWithRequiredPropertyType:]


CADAccessOperationGroup : CADOperationGroup <CADAccessInterface>
  // class methods
  +[CADAccessOperationGroup requiresEventAccess]

  // instance methods
  -[CADAccessOperationGroup CADDatabaseGetAccess:]
  -[CADAccessOperationGroup CADDatabaseSetInitializationOptions:reply:]
  -[CADAccessOperationGroup CADDatabaseResetWithReply:]


LocalAttachmentCleanUpSupport : NSObject
  // class methods
  +[LocalAttachmentCleanUpSupport cleanUpOrphanedFiles]


CADCalendarOperationGroup : CADOperationGroup <CADCalendarInterface>
  // class methods
  +[CADCalendarOperationGroup requiresEventAccess]

  // instance methods
  -[CADCalendarOperationGroup CADDatabaseGetCalendarsWithFaultedProperties:reply:]
  -[CADCalendarOperationGroup _tryPerformBlockWithCalendarID:forAction:withBlock:]
  -[CADCalendarOperationGroup CADCalendar:hasEvents:]


EKScheduleAgentClientEventsPredicate : EKPredicate
  // class methods
  +[EKScheduleAgentClientEventsPredicate supportsSecureCoding]
  +[EKScheduleAgentClientEventsPredicate predicateWithCalendarIDs:]

  // instance methods
  -[EKScheduleAgentClientEventsPredicate predicateFormat]
  -[EKScheduleAgentClientEventsPredicate copyMatchingItemsWithDatabase:]


CADBirthdayListener : NSObject
 @property  <CalBirthdayListener> *ekBirthdayListener
 @property  Class listenerClass

  // class methods
  +[CADBirthdayListener reset]
  +[CADBirthdayListener sharedListener]
  +[CADBirthdayListener start]
  +[CADBirthdayListener setBirthdayCalendarEnabled:]
  +[CADBirthdayListener birthdayCalendarEnabled]

  // instance methods
  -[CADBirthdayListener setEkBirthdayListener:]
  -[CADBirthdayListener setListenerClass:]
  -[CADBirthdayListener reset]
  -[CADBirthdayListener .cxx_destruct]
  -[CADBirthdayListener listenerClass]
  -[CADBirthdayListener ekBirthdayListener]
  -[CADBirthdayListener start]
  -[CADBirthdayListener setBirthdayCalendarEnabled:]
  -[CADBirthdayListener birthdayCalendarEnabled]
  -[CADBirthdayListener init]


CADSourceOperationGroup : CADOperationGroup <CADSourceInterface>
  // class methods
  +[CADSourceOperationGroup requiresEventAccess]

  // instance methods
  -[CADSourceOperationGroup CADRemoveCalendarItemsOlderThanDate:ofType:inSource:reply:]
  -[CADSourceOperationGroup CADSourceUpdateGrantedDelegate:action:sourceID:reply:]
  -[CADSourceOperationGroup CADSourceRefresh:isUserRequested:reply:]
  -[CADSourceOperationGroup CADDatabaseGetSourcesWithFaultedProperties:reply:]
  -[CADSourceOperationGroup CADDatabaseGetLocalSourceWithEnableIfNeeded:reply:]
  -[CADSourceOperationGroup CADCountCalendarItemsOfType:inSource:reply:]
  -[CADSourceOperationGroup _tryPerformBlockWithSourceID:forAction:withBlock:]
  -[CADSourceOperationGroup CADSourceAddExchangeDelegateWithName:emailAddress:toSourceWithID:reply:]
  -[CADSourceOperationGroup CADSourceGetNotificationCollection:reply:]
  -[CADSourceOperationGroup CADSourceGetGrantedDelegatesList:reply:]
  -[CADSourceOperationGroup _tryPerformBlockWithSourceID:forAction:entityType:withBlock:]
  -[CADSourceOperationGroup CADSourceRemoveExchangeDelegateWithID:reply:]
  -[CADSourceOperationGroup CADDatabaseGetLocalBirthdaySource:]
  -[CADSourceOperationGroup CADSourceGetConstraints:reply:]


CADDiagnosticsCollectionOperation : NSOperation <CADDiagnosticLogCollector, CADDiagnosticLogContext>
 @property  unsigned int token
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL canceled
 @property  BOOL redactLogs

  // instance methods
  -[CADDiagnosticsCollectionOperation token]
  -[CADDiagnosticsCollectionOperation logError:]
  -[CADDiagnosticsCollectionOperation .cxx_destruct]
  -[CADDiagnosticsCollectionOperation log:]
  -[CADDiagnosticsCollectionOperation finish]
  -[CADDiagnosticsCollectionOperation batch:]
  -[CADDiagnosticsCollectionOperation canceled]
  -[CADDiagnosticsCollectionOperation main]
  -[CADDiagnosticsCollectionOperation redactLogs]
  -[CADDiagnosticsCollectionOperation determineExpectedOutputFiles:]
  -[CADDiagnosticsCollectionOperation collect:]
  -[CADDiagnosticsCollectionOperation temporaryFileForName:]
  -[CADDiagnosticsCollectionOperation deleteTemporaryFile:]
  -[CADDiagnosticsCollectionOperation setStatus:forFile:]
  -[CADDiagnosticsCollectionOperation initWithConnection:token:options:]
  -[CADDiagnosticsCollectionOperation loadLogCollectors]
  -[CADDiagnosticsCollectionOperation _createLogDirectory]
  -[CADDiagnosticsCollectionOperation _randomString]
  -[CADDiagnosticsCollectionOperation _createLogFile]
  -[CADDiagnosticsCollectionOperation logWithLevel:formatString:arguments:]
  -[CADDiagnosticsCollectionOperation finalFileForFile:]
  -[CADDiagnosticsCollectionOperation reportFileStatusChangesToClient]


CADACAccountStoreAccountsProvider : NSObject <CADACAccountsProvider>
 @property  ACAccountStore *accountStore

  // instance methods
  -[CADACAccountStoreAccountsProvider initWithAccountStore:]
  -[CADACAccountStoreAccountsProvider accounts]
  -[CADACAccountStoreAccountsProvider accountStore]
  -[CADACAccountStoreAccountsProvider accountWithIdentifier:]
  -[CADACAccountStoreAccountsProvider .cxx_destruct]


CADEntityWrapper : NSObject <NSSecureCoding>
  // class methods
  +[CADEntityWrapper supportsSecureCoding]

  // instance methods
  -[CADEntityWrapper objectID]
  -[CADEntityWrapper encodeWithCoder:]
  -[CADEntityWrapper initWithCalEntity:]
  -[CADEntityWrapper .cxx_destruct]
  -[CADEntityWrapper loadedValues]
  -[CADEntityWrapper initWithCalEntity:loadedValues:]
  -[CADEntityWrapper initWithCoder:]


CADEventEntityWrapper : CADEntityWrapper
 @property  BOOL isDropoffEvent
 @property  BOOL isPickupEvent

  // class methods
  +[CADEventEntityWrapper supportsSecureCoding]

  // instance methods
  -[CADEventEntityWrapper initWithCalEntity:loadedValues:occurrenceDate:]
  -[CADEventEntityWrapper isPickupEvent]
  -[CADEventEntityWrapper encodeWithCoder:]
  -[CADEventEntityWrapper isDropoffEvent]
  -[CADEventEntityWrapper setIsPickupEvent:]
  -[CADEventEntityWrapper occurrenceDate]
  -[CADEventEntityWrapper setIsDropoffEvent:]
  -[CADEventEntityWrapper initWithCoder:]


CADNaturalLanguageSuggestedEventsSearchPredicate : EKPredicate <NSSecureCoding>
  // class methods
  +[CADNaturalLanguageSuggestedEventsSearchPredicate supportsSecureCoding]

  // instance methods
  -[CADNaturalLanguageSuggestedEventsSearchPredicate encodeWithCoder:]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate .cxx_destruct]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate defaultPropertiesToLoad]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate predicateFormat]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate copyWithZone:]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate initWithCoder:]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate initWithSearchString:startDate:timeZone:]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate initWithSearchString:timeZone:]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate copyMatchingItemsWithDatabase:]
  -[CADNaturalLanguageSuggestedEventsSearchPredicate initWithSearchString:allNLEvents:startDate:timeZone:]


CADIdleChangeTrackingCleanupInfo : NSObject
 @property  double languishPeriod
 @property  int numberOfChanges

  // class methods
  +[CADIdleChangeTrackingCleanupInfo serverIdleChangeTrackingCleanupInfo]

  // instance methods
  -[CADIdleChangeTrackingCleanupInfo isEqual:]
  -[CADIdleChangeTrackingCleanupInfo numberOfChanges]
  -[CADIdleChangeTrackingCleanupInfo setNumberOfChanges:]
  -[CADIdleChangeTrackingCleanupInfo initWithLanguishPeriod:numberOfChanges:]
  -[CADIdleChangeTrackingCleanupInfo isEqualToInfo:]
  -[CADIdleChangeTrackingCleanupInfo languishPeriod]
  -[CADIdleChangeTrackingCleanupInfo setLanguishPeriod:]


CADCalSearchOperation : NSOperation <CalSearchDataSink>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADCalSearchOperation operationWithConnection:searchTerm:calendars:replyID:]

  // instance methods
  -[CADCalSearchOperation dealloc]
  -[CADCalSearchOperation .cxx_destruct]
  -[CADCalSearchOperation _completeOperation]
  -[CADCalSearchOperation main]
  -[CADCalSearchOperation cancel]
  -[CADCalSearchOperation calSearchComplete:]
  -[CADCalSearchOperation calSearch:showResultsStartingOnDate:]
  -[CADCalSearchOperation calSearch:foundOccurrences:cachedDays:cachedDaysIndexes:]
  -[CADCalSearchOperation calSearchShouldStopSearching:]
  -[CADCalSearchOperation configureSearch:]
  -[CADCalSearchOperation initWithConnection:searchTerm:calendars:replyID:]
  -[CADCalSearchOperation replyID]


CADInternalOperationGroup : CADOperationGroup <CADInternalInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADInternalOperationGroup requiresEventAccess]

  // instance methods
  -[CADInternalOperationGroup CADInternalRemoveConferenceLinkRenewalDate:]
  -[CADInternalOperationGroup CADInternalForceStatCollection:]
  -[CADInternalOperationGroup _internalAccessGranted]
  -[CADInternalOperationGroup accessGranted]
  -[CADInternalOperationGroup CADInternalSetNextConferenceLinkRenewalToNow:]


CADRespondedEventsPredicate : CADPredicate <NSSecureCoding>
  // class methods
  +[CADRespondedEventsPredicate supportsSecureCoding]
  +[CADRespondedEventsPredicate predicate]

  // instance methods
  -[CADRespondedEventsPredicate defaultPropertiesToLoad]
  -[CADRespondedEventsPredicate predicateFormat]
  -[CADRespondedEventsPredicate copyWithZone:]


CADDiagnosticsDatabaseCollector : NSObject <CADDiagnosticLogCollector>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CADDiagnosticsDatabaseCollector dealloc]
  -[CADDiagnosticsDatabaseCollector .cxx_destruct]
  -[CADDiagnosticsDatabaseCollector database]
  -[CADDiagnosticsDatabaseCollector determineExpectedOutputFiles:]
  -[CADDiagnosticsDatabaseCollector collect:]
  -[CADDiagnosticsDatabaseCollector collectDatabase:auxDatabase:outputURL:context:]


CADTestingOperationGroup : CADOperationGroup <CADTestingInterface>
  // class methods
  +[CADTestingOperationGroup requiresEventAccess]

  // instance methods
  -[CADTestingOperationGroup accessGranted]
  -[CADTestingOperationGroup CADTestingSimulateDaemonCrash]
  -[CADTestingOperationGroup CADTestingCloseDatabase:]


CADEventsForConferenceURLPredicate : EKPredicate <NSSecureCoding>
 @property  NSString *urlString
 @property  long long limit

  // class methods
  +[CADEventsForConferenceURLPredicate supportsSecureCoding]

  // instance methods
  -[CADEventsForConferenceURLPredicate limit]
  -[CADEventsForConferenceURLPredicate setUrlString:]
  -[CADEventsForConferenceURLPredicate setLimit:]
  -[CADEventsForConferenceURLPredicate encodeWithCoder:]
  -[CADEventsForConferenceURLPredicate .cxx_destruct]
  -[CADEventsForConferenceURLPredicate defaultPropertiesToLoad]
  -[CADEventsForConferenceURLPredicate predicateFormat]
  -[CADEventsForConferenceURLPredicate copyWithZone:]
  -[CADEventsForConferenceURLPredicate urlString]
  -[CADEventsForConferenceURLPredicate initWithCoder:]
  -[CADEventsForConferenceURLPredicate initWithURL:limit:]
  -[CADEventsForConferenceURLPredicate copyMatchingItemsWithDatabase:]


CADConferenceUtils : NSObject
  // class methods
  +[CADConferenceUtils performConferenceLinkRenewalIfNeeded]
  +[CADConferenceUtils setNextConferenceLinkRenewalDate:]
  +[CADConferenceUtils removeNextConferenceLinkRenewalDate]
  +[CADConferenceUtils _performConferenceURLRenewalWithDatabase:]
  +[CADConferenceUtils _conferenceURLsToRenewWithDatabase:URLString:]
  +[CADConferenceUtils _extractURLStringsFromCalEvent:]


CADChangeTrackingClientId : NSObject <NSSecureCoding>
 @property  NSString *suffix
 @property  NSString *customClientId
 @property  BOOL hasCustomClientId

  // class methods
  +[CADChangeTrackingClientId supportsSecureCoding]

  // instance methods
  -[CADChangeTrackingClientId clientId]
  -[CADChangeTrackingClientId encodeWithCoder:]
  -[CADChangeTrackingClientId .cxx_destruct]
  -[CADChangeTrackingClientId initWithSuffix:]
  -[CADChangeTrackingClientId clientIdWithBundleId:]
  -[CADChangeTrackingClientId isEqualToChangeTrackingClientId:]
  -[CADChangeTrackingClientId hasSuffix]
  -[CADChangeTrackingClientId initWithCustomClientId:]
  -[CADChangeTrackingClientId customClientId]
  -[CADChangeTrackingClientId isEqual:]
  -[CADChangeTrackingClientId hasCustomClientId]
  -[CADChangeTrackingClientId initWithCoder:]
  -[CADChangeTrackingClientId suffix]


CADDefaultPermissionValidator : NSObject <CADPermissionValidator>
 @property  ClientConnection *connection
 @property  BOOL isFirstPartyCalendarApp
 @property  BOOL isCalendarDaemon
 @property  BOOL canAccessDatabaseBookmarks
 @property  BOOL canModifySuggestedEventCalendar
 @property  BOOL canMakeSpotlightChanges
 @property  BOOL canModifyBirthdayCalendar
 @property  BOOL canRequestDiagnostics
 @property  BOOL canModifyCalendarDatabase
 @property  BOOL testingAccessLevelGranted
 @property  BOOL internalAccessLevelGranted
 @property  BOOL storageManagementAccessGranted
 @property  BOOL hasContactsUIEntitlement
 @property  BOOL hasSyncClientEntitlement
 @property  BOOL hasCalendarToolEntitlement
 @property  BOOL hasChangeIdTrackingOverrideEntitlement
 @property  BOOL hasNotificationCountEntitlement
 @property  BOOL hasManagedConfigurationBundleIDOverrideEntitlement
 @property  BOOL shouldTrustClientEnforcedManagedConfigurationAccess
 @property  BOOL allowsCustomDatabasePath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CADDefaultPermissionValidator hasContactsUIEntitlement]
  -[CADDefaultPermissionValidator hasChangeIdTrackingOverrideEntitlement]
  -[CADDefaultPermissionValidator _valueForStringEntitlement:matchesString:]
  -[CADDefaultPermissionValidator testingAccessLevelGranted]
  -[CADDefaultPermissionValidator internalAccessLevelGranted]
  -[CADDefaultPermissionValidator canAccessDatabaseBookmarks]
  -[CADDefaultPermissionValidator canModifySuggestedEventCalendar]
  -[CADDefaultPermissionValidator isFirstPartyCalendarApp]
  -[CADDefaultPermissionValidator .cxx_destruct]
  -[CADDefaultPermissionValidator allowsCustomDatabasePath]
  -[CADDefaultPermissionValidator connection]
  -[CADDefaultPermissionValidator isCalendarDaemon]
  -[CADDefaultPermissionValidator hasSyncClientEntitlement]
  -[CADDefaultPermissionValidator hasManagedConfigurationBundleIDOverrideEntitlement]
  -[CADDefaultPermissionValidator canRequestDiagnostics]
  -[CADDefaultPermissionValidator canModifyCalendarDatabase]
  -[CADDefaultPermissionValidator canModifyBirthdayCalendar]
  -[CADDefaultPermissionValidator canMakeSpotlightChanges]
  -[CADDefaultPermissionValidator storageManagementAccessGranted]
  -[CADDefaultPermissionValidator initWithClientConnection:]
  -[CADDefaultPermissionValidator shouldTrustClientEnforcedManagedConfigurationAccess]
  -[CADDefaultPermissionValidator hasNotificationCountEntitlement]
  -[CADDefaultPermissionValidator _valueForBooleanEntitlement:defaultValue:]
  -[CADDefaultPermissionValidator hasCalendarToolEntitlement]


CADStatsStores : CADStatCollector
  // class methods
  +[CADStatsStores eventName]

  // instance methods
  -[CADStatsStores .cxx_destruct]
  -[CADStatsStores eventDictionaries]
  -[CADStatsStores prepareWithContext:]
  -[CADStatsStores wantsStores]
  -[CADStatsStores processStores:]


CADStatsStoreInfo : NSObject
  // instance methods
  -[CADStatsStoreInfo .cxx_destruct]


CADSyntheticRouteHypothesizerCache : NSObject
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableDictionary *eventExternalURLToSyntheticRouteHypothesizerMap

  // class methods
  +[CADSyntheticRouteHypothesizerCache sharedInstance]

  // instance methods
  -[CADSyntheticRouteHypothesizerCache workQueue]
  -[CADSyntheticRouteHypothesizerCache .cxx_destruct]
  -[CADSyntheticRouteHypothesizerCache _init]
  -[CADSyntheticRouteHypothesizerCache syntheticRouteHypothesizerForEventExternalURL:]
  -[CADSyntheticRouteHypothesizerCache addSyntheticRouteHypothesizer:forEventExternalURL:]
  -[CADSyntheticRouteHypothesizerCache removeSyntheticRouteHypothesizerForEventExternalURL:]
  -[CADSyntheticRouteHypothesizerCache eventExternalURLToSyntheticRouteHypothesizerMap]


CADCalendarToolOperationGroup : CADOperationGroup <CADCalendarToolInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CADCalendarToolOperationGroup requiresEventAccess]

  // instance methods
  -[CADCalendarToolOperationGroup accessGranted]
  -[CADCalendarToolOperationGroup CADPurgeChangeTrackingReply:]
  -[CADCalendarToolOperationGroup CADPostSyntheticRouteHypothesis:forEventWithExternalURL:reply:]


CADMCAccountAccessHandler : CADAccountAccessHandler
 @property  NSString *bundleIdentifier
 @property  <CADACAccountsProvider> *accountsProvider
 @property  <CADManagedConfigurationHandler> *managedConfigHandler
 @property  unsigned long accountManagement
 @property  <CADPermissionValidator> *permissionValidator

  // instance methods
  -[CADMCAccountAccessHandler gatherRestrictedCalendarRowIDs:forAction:inDatabase:]
  -[CADMCAccountAccessHandler _isAccount:restrictedForAction:]
  -[CADMCAccountAccessHandler _isDisabledForAction:]
  -[CADMCAccountAccessHandler initWithDatabaseDataProvider:accountsProvider:permissionValidator:managedConfigHandler:accountManagement:bundleIdentifier:]
  -[CADMCAccountAccessHandler _mayShowLocalAccountsForAction:]
  -[CADMCAccountAccessHandler reset]
  -[CADMCAccountAccessHandler .cxx_destruct]
  -[CADMCAccountAccessHandler _areLocalStoresRestrictedForAction:]
  -[CADMCAccountAccessHandler isActionAllowed:forStore:inDatabase:]
  -[CADMCAccountAccessHandler _cachedAccounts]
  -[CADMCAccountAccessHandler _filteredAccountsForAction:withUnfilteredAccounts:]
  -[CADMCAccountAccessHandler permissionValidator]
  -[CADMCAccountAccessHandler accountsProvider]
  -[CADMCAccountAccessHandler bundleIdentifier]
  -[CADMCAccountAccessHandler _loadAllowedAccountIdentifiersForAction:]
  -[CADMCAccountAccessHandler accountManagement]
  -[CADMCAccountAccessHandler managedConfigHandler]


CADEventOperationGroup : CADOperationGroup <CADEventInterface>
  // class methods
  +[CADEventOperationGroup requiresEventAccess]
  +[CADEventOperationGroup monitorLocationAuthorizationStatusChanges:]

  // instance methods
  -[CADEventOperationGroup CADDatabaseGetAttachmentWithUUID:reply:]
  -[CADEventOperationGroup CADDatabaseGetOrCreateSubscribedCalendarsSource:]
  -[CADEventOperationGroup CADDatabaseRemoveSuggestedEventCalendarWithReply:]
  -[CADEventOperationGroup CADOccurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:reply:]
  -[CADEventOperationGroup CADDatabaseGetAttachmentUUIDWithExternalID:store:reply:]
  -[CADEventOperationGroup CADOccurrenceCacheCancelSearchWithReplyID:]
  -[CADEventOperationGroup CADDatabaseGetNaturalLanguageSuggestedEventCalendarWithReply:]
  -[CADEventOperationGroup CADOccurrenceCacheSearchLocationsWithTerm:inCalendars:responseToken:reply:]
  -[CADEventOperationGroup CADDatabaseCanModifySuggestedEventCalendar:]
  -[CADEventOperationGroup CADDatabaseGetOrCreateBirthdayCalendar:]
  -[CADEventOperationGroup CADOccurrenceCacheGetOccurrenceCountsForCalendars:reply:]
  -[CADEventOperationGroup CADDatabaseGetEventWithUniqueID:reply:]
  -[CADEventOperationGroup CADDatabaseShouldPermitOrganizerPhoneNumberFromJunkChecks:reply:]
  -[CADEventOperationGroup CADDatabaseSetDefaultCalendarForNewEvents:delegateSource:reply:]
  -[CADEventOperationGroup CADOccurrenceCacheSearchWithTerm:inCalendars:responseToken:reply:]
  -[CADEventOperationGroup CADOccurrenceCacheGetOccurrenceDateOfEventWithObjectID:nearestDate:prefersForwardSearch:reply:]
  -[CADEventOperationGroup CADDatabaseGetEventWithEventIdentifier:reply:]
  -[CADEventOperationGroup CADDatabaseShouldPermitOrganizerEmailFromJunkChecks:reply:]
  -[CADEventOperationGroup CADDatabaseGetAllEventsWithUniqueID:reply:]
  -[CADEventOperationGroup CADDatabaseInsertSuggestedEventCalendarWithReply:]
  -[CADEventOperationGroup CADDatabaseGetDefaultLocalCalendarWithReply:]
  -[CADEventOperationGroup CADDatabaseGetBirthdayCalendarEnabledWithReply:]
  -[CADEventOperationGroup CADDatabaseGetSuggestedEventCalendarWithReply:]
  -[CADEventOperationGroup _mergeDaysAndOccurrenceCounts:withCounts:]
  -[CADEventOperationGroup CADDatabaseGetDefaultCalendarForNewEventsInDelegateSource:withReply:]
  -[CADEventOperationGroup CADDatabaseSetBirthdayCalendarEnabled:withReply:]
  -[CADEventOperationGroup _CADDatabaseCanModifySuggestedEventCalendar]
  -[CADEventOperationGroup CADOccurrenceCacheGetOccurrencesForCalendars:onDay:reply:]
  -[CADEventOperationGroup CADDatabaseGetTTLLocationAuthorizationStatus:]
  -[CADEventOperationGroup CADOccurrenceCacheDoEvents:haveOccurrencesAfterDate:reply:]
  -[CADEventOperationGroup _getDefaultCalendarIDForNewEventsInStoreWithID:inDatabase:defaultExists:]


CADExcludeDelegatesAccountAccessHandler : CADAccountAccessHandler
  // instance methods
  -[CADExcludeDelegatesAccountAccessHandler isActionAllowed:forStore:inDatabase:]


CADFilterSuggestedCalendarsAccessHandler : CADAccountAccessHandler
 @property  <CADPermissionValidator> *permissionValidator

  // instance methods
  -[CADFilterSuggestedCalendarsAccessHandler gatherRestrictedCalendarRowIDs:forAction:inDatabase:]
  -[CADFilterSuggestedCalendarsAccessHandler .cxx_destruct]
  -[CADFilterSuggestedCalendarsAccessHandler permissionValidator]
  -[CADFilterSuggestedCalendarsAccessHandler initWithDatabaseDataProvider:permissionValidator:]


CADObjectID(GenerationStamping)
	// instance methods
	-[CADObjectID(GenerationStamping) stampedCopyWithGeneration:]

01 00 0900 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CADObjectChangeID 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CADObjectChangeIDHelper 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CADObjectID 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CDBDataProtectionObserver 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CDBPreferences 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CDBSpotlightUtilities 
01 00 0d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CalACMigrationAccountStore 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CalCalendarLocalAccountInfo 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CalChangeFilteringMigrationAccountStore 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalConferencePersistence 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalConferenceURLDetector 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CalDatabaseInMemoryChangeTracking 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CalDatabaseInitializationConfiguration 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalDateLocalization 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalDateRange 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalDescriptionBuilder 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalDeviceLockObserver 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalDistributedNotificationCenter 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalGrantedDelegate 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalLocationAuthorization 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalMockCalendarDataContainerProvider 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalPreferences 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CalSearch 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalSignalSensor 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CalSingleDatabaseInMemoryChangeTimestamp 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalStopwatch 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalSystemInformation 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalWidgetUtils 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CaliTIPHandler 
01 00 0b00 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CaliTIPMessage 
01 00 0800 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DADConnection 
01 00 0800 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAEGrantedDelegate 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: EKCalendarDate 
01 00 0c00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: EKFoundInAppsEventTracker 
01 00 0700 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSAlarm 
01 00 0700 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSDocument 
01 00 0700 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSEvent 
01 00 0400 /System/Library/PrivateFrameworks/IntlPreferences.framework/IntlPreferences: IntlUtility 
01 00 0200 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSecurityScopedURLWrapper 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXMLParser 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0500 /System/Library/PrivateFrameworks/PrivacyAccounting.framework/PrivacyAccounting: PAAccessLogger 
01 00 0500 /System/Library/PrivateFrameworks/PrivacyAccounting.framework/PrivacyAccounting: PAApplication 
01 00 0500 /System/Library/PrivateFrameworks/PrivacyAccounting.framework/PrivacyAccounting: PATCCAccess 
01 00 1500 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUConversationLink 
01 00 1500 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUConversationManager 
