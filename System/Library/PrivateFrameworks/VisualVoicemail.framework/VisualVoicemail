|| __DATA.__data _VMCarrierStateResponseErrorCodeSendFailed
|| __DATA.__data _VMCarrierStateResponseErrorCodeTemporaryFailure
|| __DATA.__data _VMCarrierStateResponseErrorDomain
|| __DATA.__objc_data _OBJC_CLASS_$_AWDVisualVoicemailBeaconMaxedOut
|| __DATA.__objc_data _OBJC_CLASS_$_AWDVisualVoicemailCustomGreetingUpdated
|| __DATA.__objc_data _OBJC_CLASS_$_AWDVisualVoicemailDownloaded
|| __DATA.__objc_data _OBJC_CLASS_$_AWDVisualVoicemailServiceAccountStateUpdated
|| __DATA.__objc_data _OBJC_CLASS_$_AWDVisualVoicemailTranscriptionRated
|| __DATA.__objc_data _OBJC_CLASS_$_AWDVisualVoicemailTranscriptionStatusChanged
|| __DATA.__objc_data _OBJC_CLASS_$_VMAudioMessage
|| __DATA.__objc_data _OBJC_CLASS_$_VMCarrierStateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_VMCarrierStateResponse
|| __DATA.__objc_data _OBJC_CLASS_$_VMCarrierStateResponseError
|| __DATA.__objc_data _OBJC_CLASS_$_VMLegacyAccount
|| __DATA.__objc_data _OBJC_CLASS_$_VMServiceClient
|| __DATA.__objc_data _OBJC_CLASS_$_VMTelephonyRequest
|| __DATA.__objc_data _OBJC_CLASS_$_VMTelephonyResponse
|| __DATA.__objc_data _OBJC_CLASS_$_VMTranscriptMessage
|| __DATA.__objc_data _OBJC_CLASS_$_VMVoicemailMessage
|| __DATA.__objc_data _OBJC_CLASS_$_VMVoicemailTranscript
|| __DATA.__objc_data _OBJC_CLASS_$_VMVoicemailTranscriptSegment
|| __DATA.__objc_data _OBJC_CLASS_$_VVNotificationInterpreter
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDVisualVoicemailBeaconMaxedOut
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDVisualVoicemailCustomGreetingUpdated
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDVisualVoicemailDownloaded
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDVisualVoicemailServiceAccountStateUpdated
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDVisualVoicemailTranscriptionRated
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDVisualVoicemailTranscriptionStatusChanged
|| __DATA.__objc_data _OBJC_METACLASS_$_VMAudioMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_VMCarrierStateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_VMCarrierStateResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_VMCarrierStateResponseError
|| __DATA.__objc_data _OBJC_METACLASS_$_VMLegacyAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_VMServiceClient
|| __DATA.__objc_data _OBJC_METACLASS_$_VMTelephonyRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_VMTelephonyResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_VMTranscriptMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_VMVoicemailMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_VMVoicemailTranscript
|| __DATA.__objc_data _OBJC_METACLASS_$_VMVoicemailTranscriptSegment
|| __DATA.__objc_data _OBJC_METACLASS_$_VVNotificationInterpreter
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailBeaconMaxedOut._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailBeaconMaxedOut._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailCustomGreetingUpdated._failureReason
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailCustomGreetingUpdated._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailCustomGreetingUpdated._result
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailCustomGreetingUpdated._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailDownloaded._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailDownloaded._lengthInSeconds
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailDownloaded._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailServiceAccountStateUpdated._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailServiceAccountStateUpdated._serviceState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailServiceAccountStateUpdated._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailTranscriptionRated._accurate
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailTranscriptionRated._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailTranscriptionRated._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailTranscriptionStatusChanged._failureReason
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailTranscriptionStatusChanged._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailTranscriptionStatusChanged._status
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDVisualVoicemailTranscriptionStatusChanged._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMAudioMessage._audioData
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMAudioMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMAudioMessage._protocolVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMTranscriptMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMTranscriptMessage._protocolVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMTranscriptMessage._transcriptionData
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._audio
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._callbackDestinationID
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._dataURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._date
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._flags
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._protocolVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._receiverDestinationID
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._remoteUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._senderDestinationID
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._transcript
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMVoicemailMessage._transcriptionURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_VVService._activationError
|| __DATA.__objc_ivar _OBJC_IVAR_$_VVService._carrierParameters
|| __DATA.__objc_ivar _OBJC_IVAR_$_VVService._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_VVService._mailboxUsage
|| __DATA.__objc_ivar _OBJC_IVAR_$_VVService._notificationInterpreter
|| __DATA.__objc_ivar _OBJC_IVAR_$_VVService._password
|| __DATA.__objc_ivar _OBJC_IVAR_$_VVService._passwordError
|| __DATA.__objc_ivar _OBJC_IVAR_$_VVService._passwordMailboxName
|| __DATA.__objc_ivar _OBJC_IVAR_$_VVService._retryIntervalIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_VVService._retryIntervals
|| __DATA.__objc_ivar _OBJC_IVAR_$_VVService._serviceFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_VVService._trashCompactionAge
|| __DATA_CONST.__const _VMBundleIdentifierVoicemailDaemon
|| __DATA_CONST.__const _VMBundleIdentifierVoicemailFramework
|| __DATA_CONST.__const _VMCarrierIMAPParametersChangedNotification
|| __DATA_CONST.__const _VMCarrierNotificationUserInfoAccountUUID
|| __DATA_CONST.__const _VMCarrierNotificationUserInfoIMAPParameters
|| __DATA_CONST.__const _VMServiceDataAvailableNotification
|| __DATA_CONST.__const _VMServiceMessageWaitingStateChangedNotification
|| __DATA_CONST.__const _VMServicePasswordNeededNotification
|| __DATA_CONST.__const _VMServiceRecordsAddedNotification
|| __DATA_CONST.__const _VMServiceSubscriptionStatusChangedNotification
|| __DATA_CONST.__const _VMServiceUnreadCountChangedNotification
|| __DATA_CONST.__const _VMStoreChangedNotification
|| __DATA_CONST.__const _VMStoreRemovedAllVoicemailsNotification
|| __DATA_CONST.__const _VMStoreRemovedVoicemailsNotification
|| __DATA_CONST.__const _VMStoreVoicemailChangedFlagsKey
|| __DATA_CONST.__const _VMStoreVoicemailFlagsChangedNotification
|| __DATA_CONST.__const _VMStoreVoicemailNewFlagsKey
|| __DATA_CONST.__const _VMStoreVoicemailOldFlagsKey
|| __DATA_CONST.__const _VMVoicemailCapabilitiesChangedNotification
|| __DATA_CONST.__const _VMVoicemailCountry_en_CA
|| __DATA_CONST.__const _VMVoicemailCountry_en_US
|| __DATA_CONST.__const _VMVoicemailManagerAccountsDidChangeNotification
|| __DATA_CONST.__const _VMVoicemailManagerStorageUsageChangedNotification
|| __DATA_CONST.__const _VMVoicemailOnlineStatusChangedNotification
|| __DATA_CONST.__const _VMVoicemailSubscriptionStateStatusChangedNotification
|| __DATA_CONST.__const _VMVoicemailSyncInProgressChangedNotification
|| __DATA_CONST.__const _VMVoicemailTranscribingStatusChangedNotification
|| __DATA_CONST.__const _VMVoicemailVoicemailFlagsChangedKey
|| __DATA_CONST.__const _VMVoicemailVoicemailsAddedKey
|| __DATA_CONST.__const _VMVoicemailVoicemailsChangedNotification
|| __DATA_CONST.__const _VMVoicemailVoicemailsDeletedKey
|| __DATA_CONST.__const _VMXPCConnectionAvailable
|| __DATA_CONST.__const _VMXPCMachServiceName
|| __DATA_CONST.__const _VVMessageWaitingFallbackNotification
|| __DATA_CONST.__const _VVServiceContextActivationErrorNotification
|| __DATA_CONST.__const _VVServiceDataAvailableNotification
|| __DATA_CONST.__const _VVServiceDataReceiveBeganNotification
|| __DATA_CONST.__const _VVServiceDataReceiveContinuedNotification
|| __DATA_CONST.__const _VVServiceFinishedAddingRecordsNotification
|| __DATA_CONST.__const _VVServiceMailboxParametersChangedNotification
|| __DATA_CONST.__const _VVServiceMailboxUsageChangedNotification
|| __DATA_CONST.__const _VVServiceMessageWaitingFallbackNotification
|| __DATA_CONST.__const _VVServiceMessageWaitingStateChangedNotification
|| __DATA_CONST.__const _VVServiceNewServiceNotification
|| __DATA_CONST.__const _VVServiceOnlineStateChangedNotification
|| __DATA_CONST.__const _VVServicePasswordChangedNotification
|| __DATA_CONST.__const _VVServicePasswordNeededNotification
|| __DATA_CONST.__const _VVServicePasswordRequestCancelledNotification
|| __DATA_CONST.__const _VVServiceRecordsAddedNotification
|| __DATA_CONST.__const _VVServiceSetupRequirementChangedNotification
|| __DATA_CONST.__const _VVServiceSubscriptionStatusChangedNotification
|| __DATA_CONST.__const _VVServiceSyncStatusChangedNotification
|| __DATA_CONST.__const _VVServiceTaskCancelledNotification
|| __DATA_CONST.__const _VVServiceTaskEndedNotification
|| __DATA_CONST.__const _VVServiceTaskStartedNotification
|| __DATA_CONST.__const _VVServiceTrashedCountChangedNotification
|| __DATA_CONST.__const _VVServiceUnreadCountChangedNotification
|| __DATA_CONST.__const _VVSharedServiceSubscriptionStateChangedNotification
|| __DATA_CONST.__const _VVVerifierChangedNotification
|| __DATA_CONST.__const _kIMAPServiceAllowedFQDNServers
|| __DATA_CONST.__const _kIMAPServiceAllowedIMAPServers
|| __DATA_CONST.__const _kIMAPServiceAllowedIPv4Servers
|| __DATA_CONST.__const _kIMAPServiceAllowedIPv6Servers
|| __DATA_CONST.__const _kIMAPServiceBeaconAddress
|| __DATA_CONST.__const _kIMAPServiceBeaconServiceCenterAddress
|| __DATA_CONST.__const _kIMAPServiceBeaconTimeout
|| __DATA_CONST.__const _kIMAPServiceBypassSMSCAvailabilityCheck
|| __DATA_CONST.__const _kIMAPServiceClientManagesTrash
|| __DATA_CONST.__const _kIMAPServiceDeliverLegacyNotificationsBeforeSetup
|| __DATA_CONST.__const _kIMAPServiceIdleConnectionTimeout
|| __DATA_CONST.__const _kIMAPServiceKey
|| __DATA_CONST.__const _kIMAPServiceMaxGreetingDuration
|| __DATA_CONST.__const _kIMAPServiceMaxPINLength
|| __DATA_CONST.__const _kIMAPServiceMaximumBeaconCount
|| __DATA_CONST.__const _kIMAPServiceMinPINLength
|| __DATA_CONST.__const _kIMAPServicePreferredAuthenticationScheme
|| __DATA_CONST.__const _kIMAPServiceSendBeaconOnLoginFailure
|| __DATA_CONST.__const _kIMAPServiceSupportsGreetingNotification
|| __DATA_CONST.__const _kIMAPServiceUsesMWI
|| __DATA_CONST.__const _kIMAPServiceUsesSSL
|| __DATA_CONST.__const _kVMConfidenceControllerTypeBetaHeaderPreferencesKey
|| __DATA_CONST.__const _kVMConfidenceControllerTypeOverallPreferencesKey
|| __DATA_CONST.__const _kVMConfidenceControllerTypeSegmentPreferencesKey
|| __DATA_CONST.__const _kVMServiceAddedRecordsKey
|| __DATA_CONST.__const _kVMServiceRecordKey
|| __DATA_CONST.__const _kVMServiceUnreadCountKey
|| __DATA_CONST.__const _kVMSettingsDomain
|| __DATA_CONST.__const _kVMVoicemailTranscriptionInProgress
|| __DATA_CONST.__const _kVVDefaultsDomain
|| __DATA_CONST.__const _kVVErrorDomain
|| __DATA_CONST.__const _kVVLastWarnedUsageDefault
|| __DATA_CONST.__const _kVVPDPActivationErrorDomain
|| __DATA_CONST.__const _kVVReloadServiceNotification
|| __DATA_CONST.__const _kVVServiceAccountUUIDKey
|| __DATA_CONST.__const _kVVServiceAddedRecordsKey
|| __DATA_CONST.__const _kVVServiceCurrentDataLengthKey
|| __DATA_CONST.__const _kVVServiceErrorKey
|| __DATA_CONST.__const _kVVServiceExpectedDataLengthKey
|| __DATA_CONST.__const _kVVServiceMailboxUsageKey
|| __DATA_CONST.__const _kVVServiceRecordKey
|| __DATA_CONST.__const _kVVServiceSuppressErrorKey
|| __DATA_CONST.__const _kVVServiceTaskTypeKey
|| __DATA_CONST.__const _kVVServiceTaskWillBeRetriedKey
|| __DATA_CONST.__const _kVVServiceTrashedCountKey
|| __DATA_CONST.__const _kVVServiceUnreadCountKey
|| __DATA_CONST.__const _kVVVerifierBeaconResponseReceivedCheckpointKey
|| __DATA_CONST.__const _kVVVerifierBeaconSentCheckpointKey
|| __DATA_CONST.__const _kVVVerifierConfigurationDictionaryKeyAccountSettings
|| __DATA_CONST.__const _kVVVerifierConfigurationDictionaryKeyAccountSettingsName
|| __DATA_CONST.__const _kVVVerifierConfigurationDictionaryKeyAccountSettingsPort
|| __DATA_CONST.__const _kVVVerifierConfigurationDictionaryKeyAccountSettingsServer
|| __DATA_CONST.__const _kVVVerifierConfigurationDictionaryKeyAccountState
|| __DATA_CONST.__const _kVVVerifierConfigurationDictionaryKeyBeaconCount
|| __DATA_CONST.__const _kVVVerifierConfigurationDictionaryKeyGreetingType
|| __DATA_CONST.__const _kVVVerifierKeyDescriptionsDescription
|| __DATA_CONST.__const _kVVVerifierKeyDescriptionsKeyName
|| __DATA_CONST.__const _kVVVerifierKeyDescriptionsLatestFailure
|| __DATA_CONST.__const _kVVVerifierSMSCAvailableCheckpointKey
|| __DATA_CONST.__const _kVVVerifierServerLoginCheckpointKey
|| __DATA_CONST.__const _kVVVerifierTelephonyRegisteredCheckpointKey
|| __DATA_CONST.__const _kVVVerifierValidCarrierBundleCheckpointKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMAWDReporter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMCarrierBundleClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMCarrierStateRequestController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMClientWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMMutableAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMMutableVoicemail
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMSpeechRecognitionRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMSpeechRecognizerOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMSpeechURLRecognitionRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMTelephonyClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMTelephonyRequestController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMTranscriptionAssetModelOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMTranscriptionSanitizeDatabaseOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMTranscriptionService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMTranscriptionTranscribeOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMVoicemail
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMVoicemailCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMVoicemailGreeting
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMVoicemailManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMVoicemailTranscriptionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMVoicemailTranscriptionTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VVCarrierParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VVDataMigrator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VVService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VVVerifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMAWDReporter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMCarrierBundleClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMCarrierStateRequestController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMClientWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMMutableAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMMutableVoicemail
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMSpeechRecognitionRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMSpeechRecognizerOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMSpeechURLRecognitionRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMTelephonyClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMTelephonyRequestController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMTranscriptionAssetModelOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMTranscriptionSanitizeDatabaseOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMTranscriptionService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMTranscriptionTranscribeOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMVoicemail
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMVoicemailCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMVoicemailGreeting
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMVoicemailManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMVoicemailTranscriptionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMVoicemailTranscriptionTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VVCarrierParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VVDataMigrator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VVService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VVVerifier
|| __TEXT.__const _VMCarrierStateRequestMessageIdentifier
|| __TEXT.__text _AWDVisualVoicemailBeaconMaxedOutReadFrom
|| __TEXT.__text _AWDVisualVoicemailCustomGreetingUpdatedReadFrom
|| __TEXT.__text _AWDVisualVoicemailDownloadedReadFrom
|| __TEXT.__text _AWDVisualVoicemailServiceAccountStateUpdatedReadFrom
|| __TEXT.__text _AWDVisualVoicemailTranscriptionRatedReadFrom
|| __TEXT.__text _AWDVisualVoicemailTranscriptionStatusChangedReadFrom
|| __TEXT.__text _VMAudioMessageReadFrom
|| __TEXT.__text _VMGetAudioFileExtension
|| __TEXT.__text _VMGetTranscriptFileExtension
|| __TEXT.__text _VMGetUserAccountDirectoryURL
|| __TEXT.__text _VMGetUserGreetingFileURL
|| __TEXT.__text _VMGetUserGreetingsDirectoryURL
|| __TEXT.__text _VMGetUserVoicemailDatabaseDirectoryURL
|| __TEXT.__text _VMGetUserVoicemailDatabaseFileURL
|| __TEXT.__text _VMGetUserVoicemailDirectoryURL
|| __TEXT.__text _VMPhoneNumberNormalizedPhoneNumberString
|| __TEXT.__text _VMTranscriptMessageReadFrom
|| __TEXT.__text _VMVoicemailMessageReadFrom
|| __TEXT.__text __VVSharedServiceIsSubscribed
|| __TEXT.__text _isValidNumber
|| __TEXT.__text _vm_default_log
|| __TEXT.__text _vm_imap_log
|| __TEXT.__text _vm_ui_log
|| __TEXT.__text _vm_vmd_log
|| __TEXT.__text _vm_vmtool_log
__ AppSupport: _CPNetworkObserverNetworkReachableNotification
__ AppSupport: _CPNetworkObserverReachable
__ AppSupport: _OBJC_CLASS_$_CPNetworkObserver
__ AssistantServices: _AFLanguageCodeDidChangeNotification
__ AssistantServices: _AFOfflineDictationCapable
__ AssistantServices: _OBJC_CLASS_$_AFPreferences
__ CFNetwork: _kCFStreamErrorDomainMach
__ CFNetwork: _kCFStreamErrorDomainNetDB
__ CFNetwork: _kCFStreamErrorDomainSystemConfiguration
__ CommonUtilities: _CUTWeakLinkClass
__ CommonUtilities: _CUTWeakLinkSymbol
__ CommonUtilities: _OBJC_CLASS_$_CUTPowerMonitor
__ CommonUtilities: _OBJC_CLASS_$_CUTWeakReference
__ Contacts: _CNContactIdentifierKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNLabelPhoneNumberMain
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFetchRequest
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNLabeledValue
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFCopyHomeDirectoryURLForUser
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateExternalRepresentation
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringGetIntValue
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFStreamErrorDomainSSL
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreTelephony: _CTGetCurrentCallCount
__ CoreTelephony: _CTRegistrationCopyDataStatus
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CTMessageCenter
__ CoreTelephony: _OBJC_CLASS_$_CTXPCServiceSubscriptionContext
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: _VMCopyDictionaryForNotificationString
__ CoreTelephony: __CTServerConnectionCreate
__ CoreTelephony: __CTServerConnectionGetVoiceMailAvailable
__ CoreTelephony: _kCTDataConnectionServiceTypeVVM
__ CoreTelephony: _kCTRegistrationDataAttached
__ CoreTelephony: _kCTRegistrationDataIndicator
__ CoreTelephony: _kCTRegistrationDataIndicatorNone
__ CoreTelephony: _kCTRegistrationDataStatusInternationalRoaming
__ Foundation: _NSClassFromString
__ Foundation: _NSHomeDirectory
__ Foundation: _NSHomeDirectoryForUser
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSMachErrorDomain
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStreamSocketSSLErrorDomain
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSError
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ IOKit: _IOPMAssertionCreateWithProperties
__ IOKit: _IOPMAssertionSetProperty
__ PhoneNumbers: _CFPhoneNumberCreate
__ PhoneNumbers: _CFPhoneNumberCreateString
__ PhoneNumbers: _INIT_DECOMPOSED_PHONE_NUMBER
__ PhoneNumbers: _PNDecomposeForCountry
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAlways
__ Security: _kSecAttrAccount
__ Security: _kSecAttrService
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecReturnData
__ Security: _kSecValueData
__ Speech: _OBJC_CLASS_$_SFSpeechRecognitionRequest
__ Speech: _OBJC_CLASS_$_SFSpeechRecognizer
__ Speech: _OBJC_CLASS_$_SFSpeechURLRecognitionRequest
__ TelephonyUtilities: _TUFormattedPhoneNumber
__ TelephonyUtilities: _TUHomeCountryCode
__ TelephonyUtilities: _TURemoveEveryTelephonyCenterObserver
__ TelephonyUtilities: __TUAssertShouldCrashApplication
__ VoicemailStore: _VMStoreCopyMailboxUsage
__ VoicemailStore: _VMStoreCopyOfAllRecordsWithFlags
__ VoicemailStore: _VMStoreCopyRecordWithIdentifier
__ VoicemailStore: _VMStoreCountOfRecordsWithFlags
__ VoicemailStore: _VMStoreDestroy
__ VoicemailStore: _VMStoreRecordCopyCallbackNumber
__ VoicemailStore: _VMStoreRecordCopyDataPath
__ VoicemailStore: _VMStoreRecordCopyFlagsDescription
__ VoicemailStore: _VMStoreRecordCopyReceiver
__ VoicemailStore: _VMStoreRecordCopySender
__ VoicemailStore: _VMStoreRecordCopyTranscriptionPath
__ VoicemailStore: _VMStoreRecordGetDate
__ VoicemailStore: _VMStoreRecordGetDuration
__ VoicemailStore: _VMStoreRecordGetFlags
__ VoicemailStore: _VMStoreRecordGetIdentifier
__ VoicemailStore: _VMStoreRecordGetRemoteUID
__ VoicemailStore: _VMStoreRecordGetTrashedDate
__ VoicemailStore: _VMStoreRecordSetFlag
__ VoicemailStore: _VMStoreRecordSetFlags
__ VoicemailStore: _VMStoreRecordSetRemoteUID
__ VoicemailStore: _VMStoreSave
__ VoicemailStore: _VMStoreSetMailboxUsage
__ VoicemailStore: __VMStoreRemoveAllRecords
__ WirelessDiagnostics: _OBJC_CLASS_$_AWDServerConnection
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_5_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_current_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_trylock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
VMConfiguration : NSObject /System/Library/Frameworks/Security.framework/Security
  // class methods
  +[VMConfiguration confidenceThreshold]
  +[VMConfiguration confidenceThresholdFromAsset]
  +[VMConfiguration confidenceThresholdFromDefaultsForKey:]
  +[VMConfiguration confidenceLowQualityThresholdFromAsset]
  +[VMConfiguration confidenceSegmentThresholdFromAsset]
  +[VMConfiguration confidenceThresholdFromAssetForKey:]
  +[VMConfiguration localeForTranscriptionLanguage]
  +[VMConfiguration metadataDictionaryForSpeechAssetWithLanguage:]
  +[VMConfiguration confidenceLowQualityThreshold]
  +[VMConfiguration confidenceSegmentThreshold]


VMAudioMessage : PBCodable /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices <NSCopying>
 @property  BOOL hasProtocolVersion
 @property  unsigned int protocolVersion
 @property  BOOL hasAudioData
 @property  NSData *audioData

  // instance methods
  -[VMAudioMessage isEqual:]
  -[VMAudioMessage copyWithZone:]
  -[VMAudioMessage .cxx_destruct]
  -[VMAudioMessage dictionaryRepresentation]
  -[VMAudioMessage writeTo:]
  -[VMAudioMessage mergeFrom:]
  -[VMAudioMessage readFrom:]
  -[VMAudioMessage copyTo:]
  -[VMAudioMessage protocolVersion]
  -[VMAudioMessage setProtocolVersion:]
  -[VMAudioMessage setHasProtocolVersion:]
  -[VMAudioMessage hasProtocolVersion]
  -[VMAudioMessage audioData]
  -[VMAudioMessage setAudioData:]
  -[VMAudioMessage hasAudioData]


VMTranscriptMessage : PBCodable /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices <NSCopying>
 @property  BOOL hasProtocolVersion
 @property  unsigned int protocolVersion
 @property  BOOL hasTranscriptionData
 @property  NSData *transcriptionData

  // instance methods
  -[VMTranscriptMessage isEqual:]
  -[VMTranscriptMessage copyWithZone:]
  -[VMTranscriptMessage .cxx_destruct]
  -[VMTranscriptMessage dictionaryRepresentation]
  -[VMTranscriptMessage writeTo:]
  -[VMTranscriptMessage mergeFrom:]
  -[VMTranscriptMessage readFrom:]
  -[VMTranscriptMessage copyTo:]
  -[VMTranscriptMessage protocolVersion]
  -[VMTranscriptMessage setProtocolVersion:]
  -[VMTranscriptMessage setHasProtocolVersion:]
  -[VMTranscriptMessage hasProtocolVersion]
  -[VMTranscriptMessage setTranscriptionData:]
  -[VMTranscriptMessage hasTranscriptionData]
  -[VMTranscriptMessage transcriptionData]


VMVoicemailMessage : PBCodable /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices <NSCopying>
 @property  BOOL hasRemoteUID
 @property  unsigned int remoteUID
 @property  BOOL hasIdentifier
 @property  unsigned int identifier
 @property  BOOL hasDate
 @property  double date
 @property  BOOL hasSenderDestinationID
 @property  NSString *senderDestinationID
 @property  BOOL hasCallbackDestinationID
 @property  NSString *callbackDestinationID
 @property  BOOL hasDuration
 @property  double duration
 @property  BOOL hasDataURL
 @property  NSString *dataURL
 @property  BOOL hasFlags
 @property  unsigned int flags
 @property  BOOL hasTranscriptionURL
 @property  NSString *transcriptionURL
 @property  BOOL hasTranscript
 @property  VMTranscriptMessage *transcript
 @property  BOOL hasAudio
 @property  VMAudioMessage *audio
 @property  BOOL hasProtocolVersion
 @property  unsigned int protocolVersion
 @property  BOOL hasReceiverDestinationID
 @property  NSString *receiverDestinationID

  // instance methods
  -[VMVoicemailMessage isEqual:]
  -[VMVoicemailMessage copyWithZone:]
  -[VMVoicemailMessage .cxx_destruct]
  -[VMVoicemailMessage date]
  -[VMVoicemailMessage identifier]
  -[VMVoicemailMessage flags]
  -[VMVoicemailMessage setIdentifier:]
  -[VMVoicemailMessage dictionaryRepresentation]
  -[VMVoicemailMessage duration]
  -[VMVoicemailMessage writeTo:]
  -[VMVoicemailMessage hasDate]
  -[VMVoicemailMessage setDate:]
  -[VMVoicemailMessage mergeFrom:]
  -[VMVoicemailMessage readFrom:]
  -[VMVoicemailMessage copyTo:]
  -[VMVoicemailMessage setFlags:]
  -[VMVoicemailMessage setDuration:]
  -[VMVoicemailMessage hasDuration]
  -[VMVoicemailMessage protocolVersion]
  -[VMVoicemailMessage setProtocolVersion:]
  -[VMVoicemailMessage setHasProtocolVersion:]
  -[VMVoicemailMessage hasProtocolVersion]
  -[VMVoicemailMessage hasIdentifier]
  -[VMVoicemailMessage setHasIdentifier:]
  -[VMVoicemailMessage setHasDuration:]
  -[VMVoicemailMessage audio]
  -[VMVoicemailMessage setAudio:]
  -[VMVoicemailMessage hasAudio]
  -[VMVoicemailMessage setHasFlags:]
  -[VMVoicemailMessage hasFlags]
  -[VMVoicemailMessage setSenderDestinationID:]
  -[VMVoicemailMessage setCallbackDestinationID:]
  -[VMVoicemailMessage setDataURL:]
  -[VMVoicemailMessage setTranscriptionURL:]
  -[VMVoicemailMessage setTranscript:]
  -[VMVoicemailMessage setReceiverDestinationID:]
  -[VMVoicemailMessage setRemoteUID:]
  -[VMVoicemailMessage setHasRemoteUID:]
  -[VMVoicemailMessage hasRemoteUID]
  -[VMVoicemailMessage setHasDate:]
  -[VMVoicemailMessage hasSenderDestinationID]
  -[VMVoicemailMessage hasCallbackDestinationID]
  -[VMVoicemailMessage hasDataURL]
  -[VMVoicemailMessage hasTranscriptionURL]
  -[VMVoicemailMessage hasTranscript]
  -[VMVoicemailMessage hasReceiverDestinationID]
  -[VMVoicemailMessage remoteUID]
  -[VMVoicemailMessage senderDestinationID]
  -[VMVoicemailMessage callbackDestinationID]
  -[VMVoicemailMessage dataURL]
  -[VMVoicemailMessage transcriptionURL]
  -[VMVoicemailMessage transcript]
  -[VMVoicemailMessage receiverDestinationID]


VVService : NSObject /System/Library/Frameworks/Security.framework/Security
 @property  {os_unfair_lock_s=I} accessorLock
 @property  unsigned long numFailedAttemptsToSyncOverWifi
 @property  ^{__CFString=} lastConnectionTypeUsed
 @property  BOOL WiFiNetworkReachable
 @property  NSDictionary *accountDictionary
 @property  NSObject<OS_dispatch_queue> *serialDispatchQueue
 @property  NSString *isoCountryCode
 @property  unsigned long trashedCount
 @property  unsigned long unreadCount
 @property  NSMutableDictionary *stateRequestAttemptCount
 @property  VMCarrierStateRequestController *stateRequestController
 @property  BOOL cellularNetworkAvailable
 @property  BOOL WiFiNetworkAvailable
 @property  BOOL WiFiNetworkSupported
 @property  BOOL mailboxUsageUpdated
 @property  NSString *serviceIdentifier
 @property  NSString *serviceDestinationID
 @property  VMTranscriptionService *transcriptionService
 @property  VVVerifier *verifier
 @property  BOOL SMSReady
 @property  <VMTelephonySubscription> *subscription

  // class methods
  +[VVService initialize]
  +[VVService _lockedSharedServiceIsSubscribed]
  +[VVService _setInsomniaStateSupressed:]
  +[VVService _voicemailPowerAssertion]
  +[VVService _acquireAssertionsForInsomniaState:]
  +[VVService accountDictionaryForURL:]
  +[VVService _subscriptionStateChanged]
  +[VVService serviceWithIdentifier:destinationID:name:isoCountryCode:subscription:stateRequestController:]
  +[VVService sharedServiceIsSubscribed]
  +[VVService CTServerConnection]
  +[VVService obtainInsomniaAssertion]
  +[VVService releaseInsomniaAssertion]

  // instance methods
  -[VVService dealloc]
  -[VVService password]
  -[VVService .cxx_destruct]
  -[VVService setPassword:]
  -[VVService isoCountryCode]
  -[VVService subscription]
  -[VVService serviceIdentifier]
  -[VVService synchronize:]
  -[VVService setServiceIdentifier:]
  -[VVService setSubscribed:]
  -[VVService isSubscribed]
  -[VVService connectionServiceType]
  -[VVService mailboxName]
  -[VVService unreadCount]
  -[VVService setUnreadCount:]
  -[VVService reportError:]
  -[VVService retryIntervals]
  -[VVService serialDispatchQueue]
  -[VVService performSynchronousBlock:]
  -[VVService isOnline]
  -[VVService verifier]
  -[VVService setVerifier:]
  -[VVService _carrierBundleChanged]
  -[VVService _callStatusChanged]
  -[VVService _updateOnlineStatus]
  -[VVService initWithServiceIdentifier:destinationID:isoCountryCode:subscription:stateRequestController:]
  -[VVService setMessageWaiting:]
  -[VVService clearRemoteUIDsForDetachedMessages]
  -[VVService cancelDelayedSynchronize]
  -[VVService cancelPasswordRequest]
  -[VVService cancelNotificationFallback]
  -[VVService cancelAutomatedTrashCompaction]
  -[VVService resetCounts]
  -[VVService handleVVServiceDataAvailableNotification:]
  -[VVService _setActivationError:]
  -[VVService sharedSubscriptionRequiresSetup]
  -[VVService mailboxRequiresSetup]
  -[VVService setProvisionalPassword:]
  -[VVService _scheduleFallbackActivityIfNecessary]
  -[VVService mailboxUsage]
  -[VVService shouldScheduleAutoTrashOnMailboxUsageChange]
  -[VVService scheduleAutomatedTrashCompaction]
  -[VVService trashedCount]
  -[VVService setTrashedCount:]
  -[VVService serviceDestinationID]
  -[VVService performAtomicAccessorBlock:]
  -[VVService isWiFiNetworkSupported]
  -[VVService isWiFiNetworkReachable]
  -[VVService handleCPNetworkObserverNetworkReachableNotification:]
  -[VVService _setOnline:fallbackMode:]
  -[VVService _isOfflineDueToRoamingWithDataStatusDict:]
  -[VVService isCellularNetworkAvailable]
  -[VVService setOnline:]
  -[VVService isMessageWaiting]
  -[VVService _deliverFallbackNotification]
  -[VVService _enterFallbackMode]
  -[VVService _reactToIndicator]
  -[VVService passwordIgnoringSubscription:]
  -[VVService displayPasswordRequestIfNecessary]
  -[VVService removeServiceInformation]
  -[VVService _cancelIndicatorAction]
  -[VVService _attemptDelayedSynchronize]
  -[VVService _scheduleAutomatedTrashCompaction]
  -[VVService doesClientManageTrashCompaction]
  -[VVService trashCompactionAge]
  -[VVService _attemptScheduledTrashCompaction:]
  -[VVService _cancelAutomatedTrashCompaction]
  -[VVService doTrashCompaction]
  -[VVService numFailedAttemptsToSyncOverWifi]
  -[VVService setNumFailedAttemptsToSyncOverWifi:]
  -[VVService lastUsedConnectionTypeWasCellular]
  -[VVService shouldImmediatelyRetrySyncOverCellular]
  -[VVService isInSync]
  -[VVService handleNotification:isMWI:]
  -[VVService transcriptionService]
  -[VVService setWiFiNetworkReachable:]
  -[VVService stateRequestAttemptCount]
  -[VVService _dataRoamingStatusChanged]
  -[VVService handleDataContextDeactivated]
  -[VVService parametersFilePathForUUIDString:]
  -[VVService accountParamsAtFilePath:]
  -[VVService kill]
  -[VVService setMailboxRequiresSetup:]
  -[VVService setMailboxUsage:]
  -[VVService updateCountsForChangedFlags:currentRecordFlags:]
  -[VVService setCellularNetworkAvailable:]
  -[VVService isWiFiNetworkAvailable]
  -[VVService setWiFiNetworkSupported:]
  -[VVService isMailboxUsageUpdated]
  -[VVService setMailboxUsageUpdated:]
  -[VVService isSMSReady]
  -[VVService setSMSReady:]
  -[VVService isOfflineDueToRoaming]
  -[VVService activationError]
  -[VVService clearActivationError]
  -[VVService _handleSMSCAvailable]
  -[VVService notificationInterpreterClass]
  -[VVService respectsMWINotifications]
  -[VVService isPasswordReady]
  -[VVService provisionalPassword]
  -[VVService handlePasswordRequestCancellation]
  -[VVService maximumRecordedNameDuration]
  -[VVService minimumPasswordLength]
  -[VVService maximumPasswordLength]
  -[VVService passwordChangeRequiresEnteringOldPassword]
  -[VVService mailboxGreetingType]
  -[VVService carrierParameterValueForKey:]
  -[VVService taskOfTypeExists:]
  -[VVService progressiveDataLengthsForRecord:expected:current:]
  -[VVService dataForRecordPending:progressiveLoadInProgress:]
  -[VVService headerChangesPending]
  -[VVService synchronizationPending]
  -[VVService greetingFetchExistsProgressiveLoadInProgress:]
  -[VVService isSyncInProgress]
  -[VVService retrieveDataForRecord:]
  -[VVService setPasscode:completion:]
  -[VVService retrieveGreetingForAccountUUID:]
  -[VVService greetingAvailable]
  -[VVService setGreetingType:data:duration:forAccountUUID:]
  -[VVService movePendingMessagesToTrashTask:]
  -[VVService movePendingMessagesToInboxTask:]
  -[VVService moveRecordsWithIdentifiersToTrash:]
  -[VVService moveRecordsWithIdentifiersToInbox:]
  -[VVService resetDelayedSynchronizationAttemptCount]
  -[VVService scheduleDelayedSynchronize]
  -[VVService reportFailedToSyncOverWifi]
  -[VVService reportSucessfulSync]
  -[VVService setLastUsedConnectionType:]
  -[VVService scheduleImmediateSynchronizeRetryOverCellular]
  -[VVService dataConnectionServiceTypeOverride]
  -[VVService handleVoicemailInfoUpdate:]
  -[VVService attemptCountForStateRequest:]
  -[VVService incrementAttemptCountForStateRequest:]
  -[VVService removeAttemptCountForStateRequest:]
  -[VVService setServiceDestinationID:]
  -[VVService setTranscriptionService:]
  -[VVService accessorLock]
  -[VVService lastConnectionTypeUsed]
  -[VVService setLastConnectionTypeUsed:]
  -[VVService accountDictionary]
  -[VVService setAccountDictionary:]
  -[VVService stateRequestController]
  -[VVService shouldTrashCompactRecord:]


VVDataMigrator : NSObject /System/Library/Frameworks/Security.framework/Security
 @property  NSString *serviceIdentifier
 @property  NSString *searchHint
 @property  NSString *isoCountryCode

  // class methods
  +[VVDataMigrator homeDirectory]
  +[VVDataMigrator carrierServiceName]

  // instance methods
  -[VVDataMigrator .cxx_destruct]
  -[VVDataMigrator isoCountryCode]
  -[VVDataMigrator setIsoCountryCode:]
  -[VVDataMigrator serviceIdentifier]
  -[VVDataMigrator setServiceIdentifier:]
  -[VVDataMigrator performMigrationIfNecessary]
  -[VVDataMigrator shouldPerformMigration]
  -[VVDataMigrator performIMAPFilePathMigration]
  -[VVDataMigrator searchHint]
  -[VVDataMigrator createFoldersIfNecessary]
  -[VVDataMigrator setSearchHint:]


VMAWDReporter : NSObject /System/Library/Frameworks/Security.framework/Security
 @property  NSObject<OS_dispatch_queue> *queue
 @property  AWDServerConnection *serverConnection

  // class methods
  +[VMAWDReporter sharedInstance]

  // instance methods
  -[VMAWDReporter init]
  -[VMAWDReporter setQueue:]
  -[VMAWDReporter queue]
  -[VMAWDReporter .cxx_destruct]
  -[VMAWDReporter serverConnection]
  -[VMAWDReporter setServerConnection:]
  -[VMAWDReporter reportVoicemailDownloadedWithDuration:]
  -[VMAWDReporter _reportMetricWithID:metric:]
  -[VMAWDReporter reportServiceAccountStateChanged:]
  -[VMAWDReporter reportServiceBeaconMaxedOut]
  -[VMAWDReporter reportCustomGreetingSaved]
  -[VMAWDReporter reportCustomGreetingFailedWithReason:]
  -[VMAWDReporter reportVoicemailTranscriptionRatedAccurate:]
  -[VMAWDReporter reportVoicemailTranscriptionAttempted]
  -[VMAWDReporter reportVoicemailTranscriptionCompleted]
  -[VMAWDReporter reportVoicemailTranscriptionFailedWithReason:]


VMTelephonyRequestController : NSObject /System/Library/Frameworks/Security.framework/Security
 @property  {os_unfair_lock_s=I} accessorLock
 @property  {os_unfair_lock_s=I} delegateLock
 @property  NSMapTable *delegateToQueue
 @property  VMTelephonyRequest *pendingRequest
 @property  NSMutableOrderedSet *requests
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[VMTelephonyRequestController init]
  -[VMTelephonyRequestController queue]
  -[VMTelephonyRequestController .cxx_destruct]
  -[VMTelephonyRequestController initWithQueue:]
  -[VMTelephonyRequestController execute]
  -[VMTelephonyRequestController requests]
  -[VMTelephonyRequestController addRequest:]
  -[VMTelephonyRequestController removeDelegate:]
  -[VMTelephonyRequestController addDelegate:queue:]
  -[VMTelephonyRequestController setRequests:]
  -[VMTelephonyRequestController delegateToQueue]
  -[VMTelephonyRequestController removeRequest:]
  -[VMTelephonyRequestController setPendingRequest:]
  -[VMTelephonyRequestController pendingRequest]
  -[VMTelephonyRequestController performAtomicAccessorBlock:]
  -[VMTelephonyRequestController accessorLock]
  -[VMTelephonyRequestController performAtomicDelegateBlock:]
  -[VMTelephonyRequestController executeRequest:]
  -[VMTelephonyRequestController postResponse:forRequest:]
  -[VMTelephonyRequestController delegateLock]


VMCarrierStateRequestController : VMTelephonyRequestController <CoreTelephonyClientSMSDelegate>
 @property  <VMCTMessageCenter> *messageCenter
 @property  <VMCoreTelephonyClient> *telephonyClient
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VMCarrierStateRequestController init]
  -[VMCarrierStateRequestController .cxx_destruct]
  -[VMCarrierStateRequestController postSMSMessageSent:success:messageID:err1:err2:]
  -[VMCarrierStateRequestController messageCenter]
  -[VMCarrierStateRequestController telephonyClient]
  -[VMCarrierStateRequestController executeRequest:]
  -[VMCarrierStateRequestController initWithMessageCenter:telephonyClient:queue:]


VMVoicemailTranscriptSegment : NSObject /System/Library/Frameworks/Security.framework/Security <NSCopying, NSSecureCoding>
 @property  unsigned long confidenceRating
 @property  NSString *substring
 @property  {_NSRange=QQ} substringRange
 @property  double duration
 @property  float confidence
 @property  double timestamp

  // class methods
  +[VMVoicemailTranscriptSegment supportsSecureCoding]

  // instance methods
  -[VMVoicemailTranscriptSegment init]
  -[VMVoicemailTranscriptSegment copyWithZone:]
  -[VMVoicemailTranscriptSegment encodeWithCoder:]
  -[VMVoicemailTranscriptSegment initWithCoder:]
  -[VMVoicemailTranscriptSegment .cxx_destruct]
  -[VMVoicemailTranscriptSegment confidence]
  -[VMVoicemailTranscriptSegment timestamp]
  -[VMVoicemailTranscriptSegment duration]
  -[VMVoicemailTranscriptSegment substring]
  -[VMVoicemailTranscriptSegment confidenceRating]
  -[VMVoicemailTranscriptSegment setConfidenceRating:]
  -[VMVoicemailTranscriptSegment substringRange]
  -[VMVoicemailTranscriptSegment initWithTranscriptionSegment:confidenceThreshold:]


VMTelephonyResponse : NSObject /System/Library/Frameworks/Security.framework/Security <VMSecureObject>
 @property  NSError *error
 @property  <VMTelephonySubscription> *subscription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VMTelephonyResponse supportsSecureCoding]
  +[VMTelephonyResponse unarchivedObjectClasses]
  +[VMTelephonyResponse unarchivedObjectFromData:error:]

  // instance methods
  -[VMTelephonyResponse init]
  -[VMTelephonyResponse isEqual:]
  -[VMTelephonyResponse copyWithZone:]
  -[VMTelephonyResponse encodeWithCoder:]
  -[VMTelephonyResponse initWithCoder:]
  -[VMTelephonyResponse .cxx_destruct]
  -[VMTelephonyResponse error]
  -[VMTelephonyResponse setError:]
  -[VMTelephonyResponse subscription]
  -[VMTelephonyResponse archivedDataWithError:]
  -[VMTelephonyResponse isEqualToResponse:]
  -[VMTelephonyResponse initWithSubscription:error:]


VMAccount : NSObject /System/Library/Frameworks/Security.framework/Security <NSCopying, NSMutableCopying, VMSecureCoding>
 @property  NSUUID *UUID
 @property  NSString *accountDescription
 @property  NSString *abbreviatedAccountDescription
 @property  VMHandle *handle
 @property  NSString *isoCountryCode
 @property  BOOL provisioned
 @property  NSString *serviceName

  // class methods
  +[VMAccount supportsSecureCoding]
  +[VMAccount unarchivedObjectClasses]
  +[VMAccount unarchivedObjectFromData:error:]

  // instance methods
  -[VMAccount init]
  -[VMAccount isEqual:]
  -[VMAccount copyWithZone:]
  -[VMAccount mutableCopyWithZone:]
  -[VMAccount encodeWithCoder:]
  -[VMAccount initWithCoder:]
  -[VMAccount .cxx_destruct]
  -[VMAccount handle]
  -[VMAccount UUID]
  -[VMAccount setUUID:]
  -[VMAccount serviceName]
  -[VMAccount isoCountryCode]
  -[VMAccount accountDescription]
  -[VMAccount setAccountDescription:]
  -[VMAccount setServiceName:]
  -[VMAccount setHandle:]
  -[VMAccount initWithUUID:]
  -[VMAccount setIsoCountryCode:]
  -[VMAccount isEqualToAccount:]
  -[VMAccount archivedDataWithError:]
  -[VMAccount copyPropertiesWithZone:toAccount:]
  -[VMAccount abbreviatedAccountDescription]
  -[VMAccount isProvisioned]
  -[VMAccount setAbbreviatedAccountDescription:]
  -[VMAccount setProvisioned:]


VMMutableAccount : VMAccount
 @property  NSUUID *UUID
 @property  NSString *accountDescription
 @property  NSString *abbreviatedAccountDescription
 @property  VMHandle *handle
 @property  NSString *isoCountryCode
 @property  BOOL provisioned
 @property  NSString *serviceName


AWDVisualVoicemailCustomGreetingUpdated : PBCodable /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasResult
 @property  unsigned long result
 @property  BOOL hasFailureReason
 @property  unsigned long failureReason

  // instance methods
  -[AWDVisualVoicemailCustomGreetingUpdated isEqual:]
  -[AWDVisualVoicemailCustomGreetingUpdated copyWithZone:]
  -[AWDVisualVoicemailCustomGreetingUpdated dictionaryRepresentation]
  -[AWDVisualVoicemailCustomGreetingUpdated result]
  -[AWDVisualVoicemailCustomGreetingUpdated timestamp]
  -[AWDVisualVoicemailCustomGreetingUpdated setResult:]
  -[AWDVisualVoicemailCustomGreetingUpdated hasTimestamp]
  -[AWDVisualVoicemailCustomGreetingUpdated setTimestamp:]
  -[AWDVisualVoicemailCustomGreetingUpdated writeTo:]
  -[AWDVisualVoicemailCustomGreetingUpdated mergeFrom:]
  -[AWDVisualVoicemailCustomGreetingUpdated readFrom:]
  -[AWDVisualVoicemailCustomGreetingUpdated copyTo:]
  -[AWDVisualVoicemailCustomGreetingUpdated setHasTimestamp:]
  -[AWDVisualVoicemailCustomGreetingUpdated failureReason]
  -[AWDVisualVoicemailCustomGreetingUpdated setFailureReason:]
  -[AWDVisualVoicemailCustomGreetingUpdated setHasFailureReason:]
  -[AWDVisualVoicemailCustomGreetingUpdated hasFailureReason]
  -[AWDVisualVoicemailCustomGreetingUpdated setHasResult:]
  -[AWDVisualVoicemailCustomGreetingUpdated hasResult]


VVCarrierParameters : NSObject /System/Library/Frameworks/Security.framework/Security
 @property  NSDictionary *parameterValues

  // class methods
  +[VVCarrierParameters retryIntervals]
  +[VVCarrierParameters ignoresRoamingSwitch]
  +[VVCarrierParameters messageNotificationFallbackTimeout]
  +[VVCarrierParameters supportsDetachedStorage]

  // instance methods
  -[VVCarrierParameters .cxx_destruct]
  -[VVCarrierParameters parameterValueForKey:]
  -[VVCarrierParameters initWithService:]
  -[VVCarrierParameters parameterValues]


VMTranscriptionService : NSObject /System/Library/Frameworks/Security.framework/Security <VMTranscriptionService>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  VMVoicemailTranscriptionController *transcriptionController
 @property  VMVoicemailTranscriptionTask *transcriptionTask

  // class methods
  +[VMTranscriptionService transcriptionLanguageCodes]
  +[VMTranscriptionService isSupportedTranscriptionLanguageCode:]
  +[VMTranscriptionService isTranscriptionAvailable]

  // instance methods
  -[VMTranscriptionService init]
  -[VMTranscriptionService queue]
  -[VMTranscriptionService .cxx_destruct]
  -[VMTranscriptionService performSynchronousBlock:]
  -[VMTranscriptionService transcriptionController]
  -[VMTranscriptionService processTranscriptForRecord:priority:completion:]
  -[VMTranscriptionService setTranscriptionController:]
  -[VMTranscriptionService handleAFLanguageCodeDidChangeNotification:]
  -[VMTranscriptionService setTranscriptionTask:]
  -[VMTranscriptionService failureReasonForError:]
  -[VMTranscriptionService unloadTranscriptionService]
  -[VMTranscriptionService loadTranscriptionService]
  -[VMTranscriptionService reportTranscriptionProblemForRecord:]
  -[VMTranscriptionService reportTranscriptionRatedAccurate:forRecord:]
  -[VMTranscriptionService transcriptionTask]


VMCarrierStateResponseError : NSError /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics
  // class methods
  +[VMCarrierStateResponseError errorWithDomain:code:userInfo:]
  +[VMCarrierStateResponseError errorWithCode:userInfo:]

  // instance methods
  -[VMCarrierStateResponseError initWithDomain:code:userInfo:]
  -[VMCarrierStateResponseError initWithCode:userInfo:]


VMSpeechRecognitionRequestOperation : VMSpeechRecognizerOperation
 @property  <VMSpeechRecognitionRequest> *speechRecognitionRequest
 @property  BOOL forceOfflineRecognition

  // instance methods
  -[VMSpeechRecognitionRequestOperation .cxx_destruct]
  -[VMSpeechRecognitionRequestOperation forceOfflineRecognition]
  -[VMSpeechRecognitionRequestOperation setForceOfflineRecognition:]
  -[VMSpeechRecognitionRequestOperation initWithSpeechRecognizer:speechRecognitionRequest:]
  -[VMSpeechRecognitionRequestOperation initWithSpeechRecognizer:]
  -[VMSpeechRecognitionRequestOperation speechRecognitionRequest]
  -[VMSpeechRecognitionRequestOperation setSpeechRecognitionRequest:]


VMSpeechURLRecognitionRequestOperation : VMSpeechRecognitionRequestOperation
  // instance methods
  -[VMSpeechURLRecognitionRequestOperation initWithLocale:]
  -[VMSpeechURLRecognitionRequestOperation URL]
  -[VMSpeechURLRecognitionRequestOperation forceOfflineRecognition]
  -[VMSpeechURLRecognitionRequestOperation setForceOfflineRecognition:]
  -[VMSpeechURLRecognitionRequestOperation initWithSpeechRecognizer:speechRecognitionRequest:]
  -[VMSpeechURLRecognitionRequestOperation initWithSpeechRecognizer:]
  -[VMSpeechURLRecognitionRequestOperation initWithSpeechRecognizer:speechURLRecognitionRequest:]
  -[VMSpeechURLRecognitionRequestOperation speechURLRecognitionRequest]
  -[VMSpeechURLRecognitionRequestOperation initWithLocale:URL:]


VMTranscriptionSanitizeDatabaseOperation : VMOperation
  // instance methods
  -[VMTranscriptionSanitizeDatabaseOperation cancel]
  -[VMTranscriptionSanitizeDatabaseOperation main]
  -[VMTranscriptionSanitizeDatabaseOperation isAsynchronous]


VMTelephonyRequest : NSObject /System/Library/Frameworks/Security.framework/Security <VMSecureObject>
 @property  <VMTelephonySubscription> *subscription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VMTelephonyRequest supportsSecureCoding]
  +[VMTelephonyRequest unarchivedObjectClasses]
  +[VMTelephonyRequest unarchivedObjectFromData:error:]

  // instance methods
  -[VMTelephonyRequest init]
  -[VMTelephonyRequest isEqual:]
  -[VMTelephonyRequest copyWithZone:]
  -[VMTelephonyRequest encodeWithCoder:]
  -[VMTelephonyRequest initWithCoder:]
  -[VMTelephonyRequest .cxx_destruct]
  -[VMTelephonyRequest subscription]
  -[VMTelephonyRequest setSubscription:]
  -[VMTelephonyRequest archivedDataWithError:]
  -[VMTelephonyRequest initWithSubscription:]
  -[VMTelephonyRequest isEqualToRequest:]


VMVoicemailManager : NSObject /System/Library/Frameworks/Security.framework/Security <VMClientXPCProtocol>
 @property  BOOL transcriptionEnabled
 @property  {os_unfair_lock_s=I} accessorLock
 @property  BOOL online
 @property  BOOL subscribed
 @property  BOOL messageWaiting
 @property  BOOL syncInProgress
 @property  BOOL transcribing
 @property  NSArray *accounts
 @property  NSOrderedSet *voicemails
 @property  NSMutableSet *trashedMessages
 @property  unsigned long storageUsage
 @property  int token
 @property  NSObject<OS_dispatch_queue> *completionQueue
 @property  NSObject<OS_dispatch_queue> *serialDispatchQueue
 @property  VMVoicemailCapabilities *capabilities
 @property  VMClientWrapper *client
 @property  <VMServerXPCProtocol> *serverConnection
 @property  BOOL canChangePassword
 @property  BOOL canChangeGreeting
 @property  BOOL mailboxRequiresSetup
 @property  NSArray *allVoicemails
 @property  long long unreadCount
 @property  BOOL transcriptionEnabled
 @property  NSProgress *transcriptionProgress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VMVoicemailManager init]
  -[VMVoicemailManager dealloc]
  -[VMVoicemailManager token]
  -[VMVoicemailManager synchronize]
  -[VMVoicemailManager .cxx_destruct]
  -[VMVoicemailManager client]
  -[VMVoicemailManager setClient:]
  -[VMVoicemailManager accounts]
  -[VMVoicemailManager setToken:]
  -[VMVoicemailManager initWithClient:]
  -[VMVoicemailManager capabilities]
  -[VMVoicemailManager setCapabilities:]
  -[VMVoicemailManager setCompletionQueue:]
  -[VMVoicemailManager setAccounts:]
  -[VMVoicemailManager setSubscribed:]
  -[VMVoicemailManager completionQueue]
  -[VMVoicemailManager isSubscribed]
  -[VMVoicemailManager voicemails]
  -[VMVoicemailManager serverConnection]
  -[VMVoicemailManager unreadCount]
  -[VMVoicemailManager serialDispatchQueue]
  -[VMVoicemailManager obliterate]
  -[VMVoicemailManager performSynchronousBlock:]
  -[VMVoicemailManager isOnline]
  -[VMVoicemailManager setSyncInProgress:]
  -[VMVoicemailManager setMessageWaiting:]
  -[VMVoicemailManager mailboxRequiresSetup]
  -[VMVoicemailManager performAtomicAccessorBlock:]
  -[VMVoicemailManager setOnline:]
  -[VMVoicemailManager isMessageWaiting]
  -[VMVoicemailManager isSyncInProgress]
  -[VMVoicemailManager accessorLock]
  -[VMVoicemailManager _requestInitialStateIfNecessaryAndSendNotifications:]
  -[VMVoicemailManager asynchronousServerConnectionWithErrorHandler:]
  -[VMVoicemailManager synchronousServerConnectionWithErrorHandler:]
  -[VMVoicemailManager countOfVoicemailsPassingTest:]
  -[VMVoicemailManager allVoicemails]
  -[VMVoicemailManager voicemailWithIdentifier:]
  -[VMVoicemailManager voicemailsPassingTest:]
  -[VMVoicemailManager deleteVoicemails:]
  -[VMVoicemailManager markVoicemailsAsRead:]
  -[VMVoicemailManager trashVoicemails:]
  -[VMVoicemailManager removeVoicemailsFromTrash:]
  -[VMVoicemailManager setVoicemails:]
  -[VMVoicemailManager updateAccounts:]
  -[VMVoicemailManager voicemailsUpdated:]
  -[VMVoicemailManager setStorageUsage:]
  -[VMVoicemailManager setTranscribing:]
  -[VMVoicemailManager requestInitialStateIfNecessaryAndSendNotifications:]
  -[VMVoicemailManager isTranscribing]
  -[VMVoicemailManager retrieveDataForVoicemail:]
  -[VMVoicemailManager dataForVoicemailWithIdentifier:]
  -[VMVoicemailManager uniqueIdentifierForVoiceMail:]
  -[VMVoicemailManager deleteVoicemail:]
  -[VMVoicemailManager markVoicemailAsRead:]
  -[VMVoicemailManager trashVoicemail:]
  -[VMVoicemailManager removeVoicemailFromTrash:]
  -[VMVoicemailManager isPasscodeChangeSupportedForAccountUUID:]
  -[VMVoicemailManager minimumPasscodeLengthForAccountUUID:]
  -[VMVoicemailManager maximumPasscodeLengthForAccountUUID:]
  -[VMVoicemailManager setPasscode:forAccountUUID:completion:]
  -[VMVoicemailManager isGreetingChangeSupportedForAccountUUID:]
  -[VMVoicemailManager maximumGreetingDurationForAccountUUID:]
  -[VMVoicemailManager greetingForAccountUUID:completion:]
  -[VMVoicemailManager setGreeting:forAccountUUID:completion:]
  -[VMVoicemailManager messageCountForMailboxType:error:]
  -[VMVoicemailManager messageCountForMailboxType:completion:]
  -[VMVoicemailManager messageCountForMailboxType:read:error:]
  -[VMVoicemailManager messageCountForMailboxType:read:completion:]
  -[VMVoicemailManager messagesForMailboxType:limit:offset:error:]
  -[VMVoicemailManager messagesForMailboxType:read:limit:offset:error:]
  -[VMVoicemailManager changePassword:withCompletionHandler:]
  -[VMVoicemailManager saveGreeting:withCompletionHandler:]
  -[VMVoicemailManager canChangePassword]
  -[VMVoicemailManager canChangeGreeting]
  -[VMVoicemailManager isTranscriptionEnabled]
  -[VMVoicemailManager isTranscriptionEnabled]
  -[VMVoicemailManager storageUsage]
  -[VMVoicemailManager transcriptionProgress]
  -[VMVoicemailManager trashedMessages]
  -[VMVoicemailManager setTrashedMessages:]
  -[VMVoicemailManager reportTranscriptionProblemForVoicemail:]
  -[VMVoicemailManager reportTranscriptionRatedAccurate:forVoicemail:]


VVNotificationInterpreter : NSObject /System/Library/Frameworks/Security.framework/Security
  // class methods
  +[VVNotificationInterpreter interpretedDictionaryForNotificationUserInfo:]


VMServiceClient : NSObject /System/Library/Frameworks/Security.framework/Security
 @property  VMVoicemailManager *voicemailManager

  // class methods
  +[VMServiceClient sharedClient]

  // instance methods
  -[VMServiceClient init]
  -[VMServiceClient dealloc]
  -[VMServiceClient .cxx_destruct]
  -[VMServiceClient removeObserver:name:object:]
  -[VMServiceClient addObserver:selector:name:object:]
  -[VMServiceClient removeObserver:]
  -[VMServiceClient sharedAccount]
  -[VMServiceClient sharedServiceIsSubscribed]
  -[VMServiceClient handleVoicemailsChangedNotification:]
  -[VMServiceClient handleSubscriptionStatusChangedNotification:]
  -[VMServiceClient handleOnlineStatusChangedNotification:]
  -[VMServiceClient voicemailManager]
  -[VMServiceClient setVoicemailManager:]


VVVerifier : NSObject /System/Library/Frameworks/Security.framework/Security
 @property  NSString *serviceIdentifier

  // class methods
  +[VVVerifier homeDirectory]

  // instance methods
  -[VVVerifier .cxx_destruct]
  -[VVVerifier configurationDictionary]
  -[VVVerifier serviceIdentifier]
  -[VVVerifier initWithServiceIdentifier:]
  -[VVVerifier _checkpointDictionaryFilePath]
  -[VVVerifier keyDescriptions]
  -[VVVerifier _checkpointDictionary]
  -[VVVerifier _saveCheckpointDictionary]
  -[VVVerifier valueForCheckpointKey:exists:]
  -[VVVerifier _mapFromSourceDictionary:destinationDictionary:inKey:outDescription:]
  -[VVVerifier storeValue:forCheckpointKey:]
  -[VVVerifier readableError]
  -[VVVerifier _checkpointDictionaryChanged]
  -[VVVerifier humanReadableConfigurationDictionary:]


VMVoicemailCapabilities : NSObject /System/Library/Frameworks/Security.framework/Security <NSCopying, NSSecureCoding>
 @property  BOOL transcriptionEnabled

  // class methods
  +[VMVoicemailCapabilities supportsSecureCoding]
  +[VMVoicemailCapabilities unarchivedObjectClasses]
  +[VMVoicemailCapabilities unarchivedObjectFromData:error:]

  // instance methods
  -[VMVoicemailCapabilities init]
  -[VMVoicemailCapabilities isEqual:]
  -[VMVoicemailCapabilities copyWithZone:]
  -[VMVoicemailCapabilities encodeWithCoder:]
  -[VMVoicemailCapabilities initWithCoder:]
  -[VMVoicemailCapabilities isEqualToCapabilities:]
  -[VMVoicemailCapabilities archivedDataWithError:]
  -[VMVoicemailCapabilities initWithCapabilities:]
  -[VMVoicemailCapabilities isTranscriptionEnabled]
  -[VMVoicemailCapabilities initWithTranscriptionEnabled:]


VMHandle : NSObject /System/Library/Frameworks/Security.framework/Security <NSCopying, VMSecureCoding>
 @property  long long type
 @property  NSString *value

  // class methods
  +[VMHandle supportsSecureCoding]
  +[VMHandle unarchivedObjectClasses]
  +[VMHandle unarchivedObjectFromData:error:]

  // instance methods
  -[VMHandle init]
  -[VMHandle isEqual:]
  -[VMHandle copyWithZone:]
  -[VMHandle type]
  -[VMHandle encodeWithCoder:]
  -[VMHandle initWithCoder:]
  -[VMHandle .cxx_destruct]
  -[VMHandle value]
  -[VMHandle initWithHandle:]
  -[VMHandle isEqualToHandle:]
  -[VMHandle initWithType:value:]
  -[VMHandle archivedDataWithError:]


VMCarrierStateRequest : VMTelephonyRequest
 @property  NSString *destination
 @property  long long identifier
 @property  NSString *message
 @property  NSString *serviceCenter

  // class methods
  +[VMCarrierStateRequest supportsSecureCoding]
  +[VMCarrierStateRequest unarchivedObjectClasses]

  // instance methods
  -[VMCarrierStateRequest isEqual:]
  -[VMCarrierStateRequest copyWithZone:]
  -[VMCarrierStateRequest encodeWithCoder:]
  -[VMCarrierStateRequest initWithCoder:]
  -[VMCarrierStateRequest .cxx_destruct]
  -[VMCarrierStateRequest identifier]
  -[VMCarrierStateRequest destination]
  -[VMCarrierStateRequest message]
  -[VMCarrierStateRequest serviceCenter]
  -[VMCarrierStateRequest initWithSubscription:]
  -[VMCarrierStateRequest initWithSubscription:destination:serviceCenter:]
  -[VMCarrierStateRequest isEqualToStateRequest:]


AWDVisualVoicemailServiceAccountStateUpdated : PBCodable /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasServiceState
 @property  unsigned long serviceState

  // instance methods
  -[AWDVisualVoicemailServiceAccountStateUpdated isEqual:]
  -[AWDVisualVoicemailServiceAccountStateUpdated copyWithZone:]
  -[AWDVisualVoicemailServiceAccountStateUpdated dictionaryRepresentation]
  -[AWDVisualVoicemailServiceAccountStateUpdated timestamp]
  -[AWDVisualVoicemailServiceAccountStateUpdated hasTimestamp]
  -[AWDVisualVoicemailServiceAccountStateUpdated setTimestamp:]
  -[AWDVisualVoicemailServiceAccountStateUpdated writeTo:]
  -[AWDVisualVoicemailServiceAccountStateUpdated mergeFrom:]
  -[AWDVisualVoicemailServiceAccountStateUpdated readFrom:]
  -[AWDVisualVoicemailServiceAccountStateUpdated copyTo:]
  -[AWDVisualVoicemailServiceAccountStateUpdated setHasTimestamp:]
  -[AWDVisualVoicemailServiceAccountStateUpdated serviceState]
  -[AWDVisualVoicemailServiceAccountStateUpdated setServiceState:]
  -[AWDVisualVoicemailServiceAccountStateUpdated setHasServiceState:]
  -[AWDVisualVoicemailServiceAccountStateUpdated hasServiceState]


VMVoicemailGreeting : NSObject /System/Library/Frameworks/Security.framework/Security <NSSecureCoding>
 @property  double duration
 @property  unsigned long type
 @property  NSURL *url

  // class methods
  +[VMVoicemailGreeting supportsSecureCoding]

  // instance methods
  -[VMVoicemailGreeting type]
  -[VMVoicemailGreeting setType:]
  -[VMVoicemailGreeting encodeWithCoder:]
  -[VMVoicemailGreeting initWithCoder:]
  -[VMVoicemailGreeting .cxx_destruct]
  -[VMVoicemailGreeting url]
  -[VMVoicemailGreeting duration]
  -[VMVoicemailGreeting setUrl:]
  -[VMVoicemailGreeting setDuration:]


VMVoicemailTranscript : NSObject /System/Library/Frameworks/Security.framework/Security <NSCopying, NSSecureCoding>
 @property  NSString *transcriptionString
 @property  NSArray *segments
 @property  float confidence
 @property  unsigned long confidenceRating

  // class methods
  +[VMVoicemailTranscript supportsSecureCoding]

  // instance methods
  -[VMVoicemailTranscript init]
  -[VMVoicemailTranscript copyWithZone:]
  -[VMVoicemailTranscript encodeWithCoder:]
  -[VMVoicemailTranscript initWithCoder:]
  -[VMVoicemailTranscript .cxx_destruct]
  -[VMVoicemailTranscript confidence]
  -[VMVoicemailTranscript segments]
  -[VMVoicemailTranscript archivedData]
  -[VMVoicemailTranscript confidenceRating]
  -[VMVoicemailTranscript transcriptionString]
  -[VMVoicemailTranscript initWithTranscription:]


VMCarrierStateResponse : VMTelephonyResponse

VMCarrierBundleClient : VMTelephonyClient <CoreTelephonyClientCarrierBundleDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VMCarrierBundleClient carrierBundleChange:]
  -[VMCarrierBundleClient objectForKey:subscription:]
  -[VMCarrierBundleClient objectForDomain:key:subscription:]
  -[VMCarrierBundleClient isPasswordChangeSupportedForSubscription:]
  -[VMCarrierBundleClient objectForKey:subscription:error:]
  -[VMCarrierBundleClient objectForDomain:key:subscription:error:]
  -[VMCarrierBundleClient isGreetingChangeSupportedForSubscription:]
  -[VMCarrierBundleClient maximumGreetingDurationForSubscription:]
  -[VMCarrierBundleClient isPasswordChangeSupportedForDefaultSubscription]
  -[VMCarrierBundleClient serviceNameForSubscription:]
  -[VMCarrierBundleClient isServiceSupportedForSubscription:]


AWDVisualVoicemailTranscriptionStatusChanged : PBCodable /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasStatus
 @property  unsigned long status
 @property  BOOL hasFailureReason
 @property  unsigned long failureReason

  // instance methods
  -[AWDVisualVoicemailTranscriptionStatusChanged isEqual:]
  -[AWDVisualVoicemailTranscriptionStatusChanged copyWithZone:]
  -[AWDVisualVoicemailTranscriptionStatusChanged dictionaryRepresentation]
  -[AWDVisualVoicemailTranscriptionStatusChanged status]
  -[AWDVisualVoicemailTranscriptionStatusChanged timestamp]
  -[AWDVisualVoicemailTranscriptionStatusChanged hasTimestamp]
  -[AWDVisualVoicemailTranscriptionStatusChanged setTimestamp:]
  -[AWDVisualVoicemailTranscriptionStatusChanged writeTo:]
  -[AWDVisualVoicemailTranscriptionStatusChanged mergeFrom:]
  -[AWDVisualVoicemailTranscriptionStatusChanged readFrom:]
  -[AWDVisualVoicemailTranscriptionStatusChanged copyTo:]
  -[AWDVisualVoicemailTranscriptionStatusChanged setStatus:]
  -[AWDVisualVoicemailTranscriptionStatusChanged setHasTimestamp:]
  -[AWDVisualVoicemailTranscriptionStatusChanged failureReason]
  -[AWDVisualVoicemailTranscriptionStatusChanged setFailureReason:]
  -[AWDVisualVoicemailTranscriptionStatusChanged setHasFailureReason:]
  -[AWDVisualVoicemailTranscriptionStatusChanged hasFailureReason]
  -[AWDVisualVoicemailTranscriptionStatusChanged setHasStatus:]
  -[AWDVisualVoicemailTranscriptionStatusChanged hasStatus]


VMVoicemailTranscriptionTask : NSObject /System/Library/Frameworks/Security.framework/Security
 @property  NSObject<OS_dispatch_queue> *taskQueue
 @property  BOOL taskRunning
 @property  BOOL hasInsomniaAssertion
 @property  VMVoicemailTranscriptionController *transcriptionController

  // class methods
  +[VMVoicemailTranscriptionTask resetRetranscriptionTaskState]

  // instance methods
  -[VMVoicemailTranscriptionTask init]
  -[VMVoicemailTranscriptionTask dealloc]
  -[VMVoicemailTranscriptionTask .cxx_destruct]
  -[VMVoicemailTranscriptionTask taskQueue]
  -[VMVoicemailTranscriptionTask setLastExecutionDate:]
  -[VMVoicemailTranscriptionTask transcriptionController]
  -[VMVoicemailTranscriptionTask setTranscriptionController:]
  -[VMVoicemailTranscriptionTask allVoicemails]
  -[VMVoicemailTranscriptionTask _endRetranscribingTask]
  -[VMVoicemailTranscriptionTask confidenceModelExistsOnDevice]
  -[VMVoicemailTranscriptionTask speechAssetsOnDevice]
  -[VMVoicemailTranscriptionTask speechAssetHasConfidenceModel:]
  -[VMVoicemailTranscriptionTask speechAssetsWithConfidenceModelsOnDevice]
  -[VMVoicemailTranscriptionTask voicemailsMatchingFlags:withoutFlags:]
  -[VMVoicemailTranscriptionTask allVoicemailsWithTranscription]
  -[VMVoicemailTranscriptionTask voicemailWasTranscribedWithoutConfidence:]
  -[VMVoicemailTranscriptionTask cancelAttemptedVoicemailTranscriptionForVoicemail:]
  -[VMVoicemailTranscriptionTask isTaskRunning]
  -[VMVoicemailTranscriptionTask setTaskRunning:]
  -[VMVoicemailTranscriptionTask deviceHasSpeechAssets]
  -[VMVoicemailTranscriptionTask shouldRunTranscriptionTask]
  -[VMVoicemailTranscriptionTask processTranscriptForVoicemail:]
  -[VMVoicemailTranscriptionTask _startRetranscribingVoicemailsIfNecessaryTranscribingAllVoicemails:]
  -[VMVoicemailTranscriptionTask lastTaskExecutionDate]
  -[VMVoicemailTranscriptionTask setAttemptedVoicemailTranscriptionForVoicemail:]
  -[VMVoicemailTranscriptionTask alreadyAttemptedVoicemailTranscriptionForVoicemail:]
  -[VMVoicemailTranscriptionTask allVoicemailsWithoutTranscription]
  -[VMVoicemailTranscriptionTask allVoicemailsTranscribedWithoutConfidence]
  -[VMVoicemailTranscriptionTask retranscribeAllVoicemails]
  -[VMVoicemailTranscriptionTask hasInsomniaAssertion]
  -[VMVoicemailTranscriptionTask setHasInsomniaAssertion:]


AWDVisualVoicemailBeaconMaxedOut : PBCodable /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp

  // instance methods
  -[AWDVisualVoicemailBeaconMaxedOut isEqual:]
  -[AWDVisualVoicemailBeaconMaxedOut copyWithZone:]
  -[AWDVisualVoicemailBeaconMaxedOut dictionaryRepresentation]
  -[AWDVisualVoicemailBeaconMaxedOut timestamp]
  -[AWDVisualVoicemailBeaconMaxedOut hasTimestamp]
  -[AWDVisualVoicemailBeaconMaxedOut setTimestamp:]
  -[AWDVisualVoicemailBeaconMaxedOut writeTo:]
  -[AWDVisualVoicemailBeaconMaxedOut mergeFrom:]
  -[AWDVisualVoicemailBeaconMaxedOut readFrom:]
  -[AWDVisualVoicemailBeaconMaxedOut copyTo:]
  -[AWDVisualVoicemailBeaconMaxedOut setHasTimestamp:]


AWDVisualVoicemailDownloaded : PBCodable /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasLengthInSeconds
 @property  unsigned long lengthInSeconds

  // instance methods
  -[AWDVisualVoicemailDownloaded isEqual:]
  -[AWDVisualVoicemailDownloaded copyWithZone:]
  -[AWDVisualVoicemailDownloaded dictionaryRepresentation]
  -[AWDVisualVoicemailDownloaded timestamp]
  -[AWDVisualVoicemailDownloaded hasTimestamp]
  -[AWDVisualVoicemailDownloaded setTimestamp:]
  -[AWDVisualVoicemailDownloaded writeTo:]
  -[AWDVisualVoicemailDownloaded mergeFrom:]
  -[AWDVisualVoicemailDownloaded readFrom:]
  -[AWDVisualVoicemailDownloaded copyTo:]
  -[AWDVisualVoicemailDownloaded setHasTimestamp:]
  -[AWDVisualVoicemailDownloaded lengthInSeconds]
  -[AWDVisualVoicemailDownloaded setLengthInSeconds:]
  -[AWDVisualVoicemailDownloaded setHasLengthInSeconds:]
  -[AWDVisualVoicemailDownloaded hasLengthInSeconds]


AWDVisualVoicemailTranscriptionRated : PBCodable /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasAccurate
 @property  BOOL accurate

  // instance methods
  -[AWDVisualVoicemailTranscriptionRated isEqual:]
  -[AWDVisualVoicemailTranscriptionRated copyWithZone:]
  -[AWDVisualVoicemailTranscriptionRated dictionaryRepresentation]
  -[AWDVisualVoicemailTranscriptionRated timestamp]
  -[AWDVisualVoicemailTranscriptionRated hasTimestamp]
  -[AWDVisualVoicemailTranscriptionRated setTimestamp:]
  -[AWDVisualVoicemailTranscriptionRated writeTo:]
  -[AWDVisualVoicemailTranscriptionRated mergeFrom:]
  -[AWDVisualVoicemailTranscriptionRated readFrom:]
  -[AWDVisualVoicemailTranscriptionRated copyTo:]
  -[AWDVisualVoicemailTranscriptionRated setHasTimestamp:]
  -[AWDVisualVoicemailTranscriptionRated setAccurate:]
  -[AWDVisualVoicemailTranscriptionRated setHasAccurate:]
  -[AWDVisualVoicemailTranscriptionRated hasAccurate]
  -[AWDVisualVoicemailTranscriptionRated accurate]


VMClientWrapper : NSObject /System/Library/Frameworks/Security.framework/Security
 @property  NSXPCConnection *clientConnection
 @property  <VMClientXPCProtocol> *manager

  // class methods
  +[VMClientWrapper voicemailClientXPCInterface]
  +[VMClientWrapper voicemailServerXPCInterface]
  +[VMClientWrapper isVMXPCAvailable]

  // instance methods
  -[VMClientWrapper init]
  -[VMClientWrapper dealloc]
  -[VMClientWrapper .cxx_destruct]
  -[VMClientWrapper manager]
  -[VMClientWrapper setManager:]
  -[VMClientWrapper clientConnection]
  -[VMClientWrapper setClientConnection:]


VMVoicemail : NSObject /System/Library/Frameworks/Security.framework/Security <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSData *data
 @property  BOOL blocked
 @property  BOOL dataAvailable
 @property  BOOL deleted
 @property  BOOL detached
 @property  BOOL downloading
 @property  BOOL temporary
 @property  BOOL trashed
 @property  BOOL unread
 @property  unsigned long flags
 @property  NSString *sender
 @property  NSString *callbackNumber
 @property  NSString *dataPath
 @property  NSString *callbackDestinationID
 @property  NSString *callbackISOCountryCode
 @property  NSURL *dataURL
 @property  NSDate *date
 @property  double duration
 @property  unsigned long identifier
 @property  unsigned long remoteUID
 @property  NSString *senderDestinationID
 @property  NSString *senderISOCountryCode
 @property  NSString *receiverDestinationID
 @property  NSString *receiverISOCountryCode
 @property  NSURL *transcriptionURL
 @property  long long mailboxType
 @property  BOOL blocked
 @property  BOOL dataAvailable
 @property  BOOL deleted
 @property  BOOL detached
 @property  BOOL downloading
 @property  BOOL read
 @property  BOOL temporary
 @property  BOOL transcriptionAvailable
 @property  BOOL trashed
 @property  unsigned long flags
 @property  BOOL hasCallbackNumber
 @property  VMVoicemailTranscript *transcript
 @property  BOOL transcriptionRated
 @property  unsigned long transcriptionState

  // class methods
  +[VMVoicemail supportsSecureCoding]
  +[VMVoicemail mailboxTypeForFlags:]
  +[VMVoicemail flagsByApplyingMailboxType:toFlags:]

  // instance methods
  -[VMVoicemail isEqual:]
  -[VMVoicemail copyWithZone:]
  -[VMVoicemail mutableCopyWithZone:]
  -[VMVoicemail encodeWithCoder:]
  -[VMVoicemail initWithCoder:]
  -[VMVoicemail initWithData:]
  -[VMVoicemail .cxx_destruct]
  -[VMVoicemail date]
  -[VMVoicemail data]
  -[VMVoicemail identifier]
  -[VMVoicemail flags]
  -[VMVoicemail setIdentifier:]
  -[VMVoicemail duration]
  -[VMVoicemail isRead]
  -[VMVoicemail isBlocked]
  -[VMVoicemail dataPath]
  -[VMVoicemail setDate:]
  -[VMVoicemail sender]
  -[VMVoicemail setFlags:]
  -[VMVoicemail setDuration:]
  -[VMVoicemail initWithMessage:]
  -[VMVoicemail isTrashed]
  -[VMVoicemail isDownloading]
  -[VMVoicemail isDeleted]
  -[VMVoicemail initWithRecord:]
  -[VMVoicemail setDeleted:]
  -[VMVoicemail setBlocked:]
  -[VMVoicemail isDetached]
  -[VMVoicemail setDetached:]
  -[VMVoicemail setRead:]
  -[VMVoicemail isTemporary]
  -[VMVoicemail setTrashed:]
  -[VMVoicemail setTemporary:]
  -[VMVoicemail setDownloading:]
  -[VMVoicemail mailboxType]
  -[VMVoicemail setMailboxType:]
  -[VMVoicemail isDataAvailable]
  -[VMVoicemail isUnread]
  -[VMVoicemail isEqualToMessage:]
  -[VMVoicemail setSenderDestinationID:]
  -[VMVoicemail setCallbackDestinationID:]
  -[VMVoicemail setDataURL:]
  -[VMVoicemail setTranscriptionURL:]
  -[VMVoicemail setReceiverDestinationID:]
  -[VMVoicemail setRemoteUID:]
  -[VMVoicemail remoteUID]
  -[VMVoicemail senderDestinationID]
  -[VMVoicemail callbackDestinationID]
  -[VMVoicemail dataURL]
  -[VMVoicemail transcriptionURL]
  -[VMVoicemail transcript]
  -[VMVoicemail receiverDestinationID]
  -[VMVoicemail isTranscriptionAvailable]
  -[VMVoicemail hasSameContent:]
  -[VMVoicemail hasSameFlags:]
  -[VMVoicemail isTranscribing]
  -[VMVoicemail contactUsingContactStore:withKeysToFetch:]
  -[VMVoicemail isContactSuggested:]
  -[VMVoicemail callbackISOCountryCode]
  -[VMVoicemail senderISOCountryCode]
  -[VMVoicemail receiverISOCountryCode]
  -[VMVoicemail setFlag:enabled:]
  -[VMVoicemail wasTranscriptionAttempted]
  -[VMVoicemail mailboxTypeDescription]
  -[VMVoicemail flagDescription]
  -[VMVoicemail isTranscriptionRated]
  -[VMVoicemail displayNameUsingContactStore:]
  -[VMVoicemail displayLabelUsingContactStore:]
  -[VMVoicemail contactUsingContactStore:]
  -[VMVoicemail hasCallbackNumber]
  -[VMVoicemail setDataAvailable:]
  -[VMVoicemail setTranscriptionAvailable:]
  -[VMVoicemail transcriptionState]
  -[VMVoicemail setSenderISOCountryCode:]
  -[VMVoicemail setCallbackISOCountryCode:]
  -[VMVoicemail setReceiverISOCountryCode:]
  -[VMVoicemail initWithVoicemailMessage:]
  -[VMVoicemail callbackNumber]
  -[VMVoicemail hasFlags:]
  -[VMVoicemail doesNotHaveFlags:]


VMMutableVoicemail : VMVoicemail
 @property  NSString *callbackDestinationID
 @property  NSString *callbackISOCountryCode
 @property  NSURL *dataURL
 @property  NSDate *date
 @property  BOOL deleted
 @property  double duration
 @property  unsigned long flags
 @property  unsigned long identifier
 @property  BOOL read
 @property  unsigned long remoteUID
 @property  NSString *receiverDestinationID
 @property  NSString *receiverISOCountryCode
 @property  NSString *senderDestinationID
 @property  NSString *senderISOCountryCode
 @property  NSURL *transcriptionURL
 @property  BOOL trashed


VMOperation : NSOperation /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSProgress *progress

  // instance methods
  -[VMOperation init]
  -[VMOperation queue]
  -[VMOperation .cxx_destruct]
  -[VMOperation progress]
  -[VMOperation setProgress:]
  -[VMOperation performSynchronousBlock:]
  -[VMOperation configureProgressWithUnitCount:]


VMTranscriptionTranscribeOperation : VMSpeechURLRecognitionRequestOperation <_VMSpeechRecognitionTaskDelegatePrivate>
 @property  NSObject<OS_dispatch_semaphore> *semaphore
 @property  VMVoicemailTranscript *transcript
 @property  double duration
 @property  double timeout
 @property  BOOL processOnServer
 @property  @? transcribeOperationCompletion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VMTranscriptionTranscribeOperation .cxx_destruct]
  -[VMTranscriptionTranscribeOperation cancel]
  -[VMTranscriptionTranscribeOperation main]
  -[VMTranscriptionTranscribeOperation duration]
  -[VMTranscriptionTranscribeOperation timeout]
  -[VMTranscriptionTranscribeOperation setTimeout:]
  -[VMTranscriptionTranscribeOperation setDuration:]
  -[VMTranscriptionTranscribeOperation semaphore]
  -[VMTranscriptionTranscribeOperation setSemaphore:]
  -[VMTranscriptionTranscribeOperation setTranscript:]
  -[VMTranscriptionTranscribeOperation transcript]
  -[VMTranscriptionTranscribeOperation initWithSpeechRecognizer:speechURLRecognitionRequest:]
  -[VMTranscriptionTranscribeOperation transcribeOperationCompletion]
  -[VMTranscriptionTranscribeOperation speechRecognitionTask:didFinishRecognition:]
  -[VMTranscriptionTranscribeOperation speechRecognitionTaskWasCancelled:]
  -[VMTranscriptionTranscribeOperation speechRecognitionTask:didFinishSuccessfully:]
  -[VMTranscriptionTranscribeOperation speechRecognitionTask:didProcessAudioDuration:]
  -[VMTranscriptionTranscribeOperation processOnServer]
  -[VMTranscriptionTranscribeOperation setProcessOnServer:]
  -[VMTranscriptionTranscribeOperation setTranscribeOperationCompletion:]


VMVoicemailTranscriptionController : NSObject /System/Library/Frameworks/Security.framework/Security
 @property  NSLocale *locale
 @property  NSOperationQueue *transcriptionOperationQueue
 @property  VMTranscriptionAssetModelOperation *assetModelOperation
 @property  NSObject<OS_dispatch_queue> *serialDispatchQueue
 @property  NSMapTable *delegateToQueue
 @property  <VMTranscriptionService> *transcriptionService
 @property  <VMNetworkObserver> *networkObserver
 @property  <VMSpeechRecognizer> *speechRecognizer
 @property  NSProgress *transcriptionProgress
 @property  BOOL transcribing

  // instance methods
  -[VMVoicemailTranscriptionController init]
  -[VMVoicemailTranscriptionController dealloc]
  -[VMVoicemailTranscriptionController .cxx_destruct]
  -[VMVoicemailTranscriptionController locale]
  -[VMVoicemailTranscriptionController observeValueForKeyPath:ofObject:change:context:]
  -[VMVoicemailTranscriptionController initWithLocale:]
  -[VMVoicemailTranscriptionController removeDelegate:]
  -[VMVoicemailTranscriptionController addDelegate:queue:]
  -[VMVoicemailTranscriptionController delegateToQueue]
  -[VMVoicemailTranscriptionController serialDispatchQueue]
  -[VMVoicemailTranscriptionController networkObserver]
  -[VMVoicemailTranscriptionController setNetworkObserver:]
  -[VMVoicemailTranscriptionController performSynchronousBlock:]
  -[VMVoicemailTranscriptionController handleCPNetworkObserverNetworkReachableNotification:]
  -[VMVoicemailTranscriptionController transcriptionService]
  -[VMVoicemailTranscriptionController setTranscriptionService:]
  -[VMVoicemailTranscriptionController requestDatabaseSanitization]
  -[VMVoicemailTranscriptionController isDictationModelInstalled]
  -[VMVoicemailTranscriptionController requestAssetModelInstallation]
  -[VMVoicemailTranscriptionController retrieveDictationResultForFileAtURL:queuePriority:duration:completion:]
  -[VMVoicemailTranscriptionController reportDictationProblemForFileAtURL:]
  -[VMVoicemailTranscriptionController initWithSpeechRecognizer:]
  -[VMVoicemailTranscriptionController isTranscribing]
  -[VMVoicemailTranscriptionController transcriptionProgress]
  -[VMVoicemailTranscriptionController speechRecognizer]
  -[VMVoicemailTranscriptionController transcriptionOperationQueue]
  -[VMVoicemailTranscriptionController requestAssetModelOperationWithCompletion:]
  -[VMVoicemailTranscriptionController removeNetworkReachableObserver]
  -[VMVoicemailTranscriptionController assetModelOperation]
  -[VMVoicemailTranscriptionController assetModelOperationWithCompletion:]
  -[VMVoicemailTranscriptionController setAssetModelOperation:]
  -[VMVoicemailTranscriptionController cancelQueuedTranscriptions]


VMTelephonyClient : NSObject /System/Library/Frameworks/Security.framework/Security <CoreTelephonyClientDelegate, VMTelephonyClient>
 @property  {os_unfair_lock_s=I} accessorLock
 @property  {os_unfair_lock_s=I} delegateLock
 @property  NSMapTable *delegateToQueue
 @property  <VMCoreTelephonyClient> *client
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSArray *subscriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VMTelephonyClient init]
  -[VMTelephonyClient queue]
  -[VMTelephonyClient .cxx_destruct]
  -[VMTelephonyClient initWithQueue:]
  -[VMTelephonyClient client]
  -[VMTelephonyClient removeDelegate:]
  -[VMTelephonyClient subscriptions]
  -[VMTelephonyClient subscriptionInfoDidChange]
  -[VMTelephonyClient subscriberCountryCodeDidChange:]
  -[VMTelephonyClient addDelegate:queue:]
  -[VMTelephonyClient setSubscriptions:]
  -[VMTelephonyClient delegateToQueue]
  -[VMTelephonyClient performAtomicAccessorBlock:]
  -[VMTelephonyClient accessorLock]
  -[VMTelephonyClient performAtomicDelegateBlock:]
  -[VMTelephonyClient delegateLock]
  -[VMTelephonyClient initWithQueue:client:]
  -[VMTelephonyClient fetchSubscriptions]
  -[VMTelephonyClient abbreviatedLabelForSubscription:]
  -[VMTelephonyClient isoCountryCodeForSubscription:]


VMPreferences : NSObject /System/Library/Frameworks/Security.framework/Security <VMTranscriptionPreferences, VMPreferences>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL transcriptionEnabled
 @property  NSString *domain
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VMPreferences sharedInstance]

  // instance methods
  -[VMPreferences init]
  -[VMPreferences domain]
  -[VMPreferences .cxx_destruct]
  -[VMPreferences setInteger:forKey:]
  -[VMPreferences setBool:forKey:]
  -[VMPreferences setString:forKey:]
  -[VMPreferences setNumber:forKey:]
  -[VMPreferences boolForKey:defaultValue:]
  -[VMPreferences stringForKey:defaultValue:]
  -[VMPreferences integerForKey:defaultValue:]
  -[VMPreferences transcriptionEnabled]
  -[VMPreferences setTranscriptionEnabled:]
  -[VMPreferences preferencesValueForKey:domain:]
  -[VMPreferences setPreferencesValue:forKey:domain:]
  -[VMPreferences numberForKey:defaultValue:]
  -[VMPreferences preferencesValueForKey:]
  -[VMPreferences setPreferencesValue:forKey:]
  -[VMPreferences unsignedIntegerForKey:defaultValue:]
  -[VMPreferences setUnsignedInteger:forKey:]


VMTranscriptionAssetModelOperation : VMSpeechRecognizerOperation
 @property  @? operationCompletion

  // instance methods
  -[VMTranscriptionAssetModelOperation .cxx_destruct]
  -[VMTranscriptionAssetModelOperation cancel]
  -[VMTranscriptionAssetModelOperation main]
  -[VMTranscriptionAssetModelOperation initWithSpeechRecognizer:]
  -[VMTranscriptionAssetModelOperation setOperationCompletion:]
  -[VMTranscriptionAssetModelOperation operationCompletion]


VMSpeechRecognizerOperation : VMOperation
 @property  <VMSpeechRecognizer> *speechRecognizer

  // instance methods
  -[VMSpeechRecognizerOperation init]
  -[VMSpeechRecognizerOperation .cxx_destruct]
  -[VMSpeechRecognizerOperation locale]
  -[VMSpeechRecognizerOperation initWithLocale:]
  -[VMSpeechRecognizerOperation initWithSpeechRecognizer:]
  -[VMSpeechRecognizerOperation speechRecognizer]


VMManager : NSObject /System/Library/Frameworks/Security.framework/Security
 @property  {os_unfair_lock_s=I} accessorLock
 @property  {os_unfair_lock_s=I} delegateLock
 @property  NSMapTable *delegateToQueue
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[VMManager init]
  -[VMManager queue]
  -[VMManager .cxx_destruct]
  -[VMManager initWithQueue:]
  -[VMManager removeDelegate:]
  -[VMManager addDelegate:queue:]
  -[VMManager delegateToQueue]
  -[VMManager performAtomicAccessorBlock:]
  -[VMManager accessorLock]
  -[VMManager performAtomicDelegateBlock:]
  -[VMManager delegateLock]


VMLegacyAccount : NSObject /System/Library/Frameworks/Security.framework/Security
 @property  VMVoicemailManager *voicemailManager

  // instance methods
  -[VMLegacyAccount init]
  -[VMLegacyAccount .cxx_destruct]
  -[VMLegacyAccount synchronize:]
  -[VMLegacyAccount isSubscribed]
  -[VMLegacyAccount unreadCount]
  -[VMLegacyAccount isOnline]
  -[VMLegacyAccount setProvisionalPassword:]
  -[VMLegacyAccount mailboxUsage]
  -[VMLegacyAccount isMessageWaiting]
  -[VMLegacyAccount isOfflineDueToRoaming]
  -[VMLegacyAccount greetingAvailable]
  -[VMLegacyAccount voicemailWithIdentifier:]
  -[VMLegacyAccount voicemailManager]
  -[VMLegacyAccount setVoicemailManager:]
  -[VMLegacyAccount recentUnreadCount]
  -[VMLegacyAccount handlePasswordNotificationResponse:]
  -[VMLegacyAccount setGreetingType:withData:duration:]
  -[VMLegacyAccount moveVoicemailToTrash:]
  -[VMLegacyAccount moveVoicemailFromTrash:]
  -[VMLegacyAccount allVoicemailsWithFlags:withoutFlags:]


NSDictionary(WritingOptionAdditions)
	// instance methods
	-[NSDictionary(WritingOptionAdditions) writeToFile:options:error:]

NSError(VVError)
	// class methods
	+[NSError(VVError) errorWithDomain:code:localizedDescription:]
	+[NSError(VVError) errorWithStreamDomain:code:localizedDescription:]

	// instance methods
	-[NSError(VVError) isConnectivityError]
	-[NSError(VVError) isPasswordMismatchError]
	-[NSError(VVError) isInvalidSubscriberError]
	-[NSError(VVError) isServerError]
	-[NSError(VVError) isSecurityError]
	-[NSError(VVError) isEqualToError:]
	-[NSError(VVError) isStreamDomain:error:]
	-[NSError(VVError) isExpiredPasswordError]
	-[NSError(VVError) isNewPasswordError]
	-[NSError(VVError) shouldPresentErrorForTaskType:]

NSOrderedSet(Voicemail)
	// instance methods
	-[NSOrderedSet(Voicemail) arrayBySubtractingOrderedSet:]
	-[NSOrderedSet(Voicemail) arrayByIntersectingWithOrderedSet:]

NSUUID(Voicemail)
	// class methods
	+[NSUUID(Voicemail) vm_UUIDv5ForData:namespaceUUID:]
	+[NSUUID(Voicemail) vm_UUIDv5ForString:]

NSString(Voicemail)
	// instance methods
	-[NSString(Voicemail) vm_UUIDv5]

NSObject(Voicemail)
	// class methods
	+[NSObject(Voicemail) vm_classIdentifier]

CTXPCServiceSubscriptionContext(TelephonyVoicemail)
	// class methods
	+[CTXPCServiceSubscriptionContext(TelephonyVoicemail) telephonyClient]

	// instance methods
	-[CTXPCServiceSubscriptionContext(TelephonyVoicemail) vm_isoCountryCode]
	-[CTXPCServiceSubscriptionContext(TelephonyVoicemail) vm_labelUUID]
	-[CTXPCServiceSubscriptionContext(TelephonyVoicemail) vm_telephoneNumber]

01 00 0700 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFPreferences 
01 00 0500 /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics: AWDServerConnection 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFetchRequest 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNLabeledValue 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 1200 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPNetworkObserver 
01 00 0300 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 0300 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTMessageCenter 
01 00 0300 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTXPCServiceSubscriptionContext 
01 00 0900 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTPowerMonitor 
01 00 0900 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTWeakReference 
01 00 0300 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0600 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0e00 /System/Library/Frameworks/Speech.framework/Speech: SFSpeechRecognitionRequest 
01 00 0e00 /System/Library/Frameworks/Speech.framework/Speech: SFSpeechRecognizer 
01 00 0e00 /System/Library/Frameworks/Speech.framework/Speech: SFSpeechURLRecognitionRequest 
