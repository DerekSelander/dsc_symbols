|| __DATA.__data _OBJC_METACLASS_$_PKDurationSnapshot
|| __DATA.__data _OBJC_METACLASS_$_PKEpisode
|| __DATA.__data _OBJC_METACLASS_$_PKEpisodeStoreId
|| __DATA.__data _OBJC_METACLASS_$_PKPlayerManifest
|| __DATA.__data _OBJC_METACLASS_$_PKProvider
|| __DATA.__data _OBJC_METACLASS_$_PKSearchResult
|| __DATA.__data _OBJC_METACLASS_$_PKShow
|| __DATA.__data _OBJC_METACLASS_$_PKShowStoreId
|| __DATA.__data _OBJC_METACLASS_$_PKSiriContext
|| __DATA.__data _OBJC_METACLASS_$_PKStoreId
|| __DATA.__objc_data _OBJC_CLASS_$_PKDurationSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_PKEpisode
|| __DATA.__objc_data _OBJC_CLASS_$_PKEpisodeStoreId
|| __DATA.__objc_data _OBJC_CLASS_$_PKPlayerManifest
|| __DATA.__objc_data _OBJC_CLASS_$_PKProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PKSearchResult
|| __DATA.__objc_data _OBJC_CLASS_$_PKShow
|| __DATA.__objc_data _OBJC_CLASS_$_PKShowStoreId
|| __DATA.__objc_data _OBJC_CLASS_$_PKSiriContext
|| __DATA.__objc_data _OBJC_CLASS_$_PKStoreId
|| __TEXT.__text _MPAssistantWatchGetCompanionOriginUniqueIdentifier
|| __TEXT.__text _MPAssistantWatchGetCurrentAudioRoutingInfo
|| __TEXT.__text _MPAssistantWatchIsConnectedToCompanion
__ Accounts: _ACAccountTypeIdentifierKey
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _ACDAccountStoreDidChangeNotification
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppSupport: _OBJC_CLASS_$_RadiosPreferences
__ AppleMediaServices: _OBJC_CLASS_$_AMSLookupItemArtwork
__ AppleMediaServices: _OBJC_CLASS_$_AMSMediaTask
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSFetchedResultsController
__ CoreData: _OBJC_CLASS_$_NSManagedObjectContext
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryChangeRequest
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryToken
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryTransaction
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFURLCreateStringByAddingPercentEscapes
__ CoreFoundation: _CFURLCreateStringByReplacingPercentEscapes
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _kUTTypeAudio
__ CoreServices: _kUTTypeMovie
__ CoreServices: _kUTTypeVideo
__ CoreTelephony: __CTServerConnectionCopyCellularUsagePolicy
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: _kCTCellularUsagePolicyDataAllowed
__ Foundation: _NSClassFromString
__ Foundation: _NSFileSystemFreeSize
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUserDefaultsDidChangeNotification
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ ManagedConfiguration: _MCFeatureExplicitContentAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaPlaybackCore: _MPCAssistantErrorDomain
__ MediaPlaybackCore: _MPCAssistantMediaRemoteSendCommandErrorDomain
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCAssistantCommand
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCAssistantEndpointContext
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCAssistantMutableRemoteControlDestination
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCAssistantPlaybackQueue
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCAssistantRemoteControlDestination
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerChangeRequest
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerPath
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerRequest
__ MediaPlaybackCore: _OBJC_METACLASS_$_MPCAssistantPlaybackQueue
__ MediaPlayer: _MPModelPropertyPodcastAuthorName
__ MediaPlayer: _MPModelPropertyPodcastEpisodeArtwork
__ MediaPlayer: _MPModelPropertyPodcastEpisodeDescriptionText
__ MediaPlayer: _MPModelPropertyPodcastEpisodeDuration
__ MediaPlayer: _MPModelPropertyPodcastEpisodeExplicit
__ MediaPlayer: _MPModelPropertyPodcastEpisodeShareURL
__ MediaPlayer: _MPModelPropertyPodcastEpisodeStreamURL
__ MediaPlayer: _MPModelPropertyPodcastEpisodeTitle
__ MediaPlayer: _MPModelPropertyPodcastFeedURL
__ MediaPlayer: _MPModelPropertyPodcastShareURL
__ MediaPlayer: _MPModelPropertyPodcastSupportsSubscription
__ MediaPlayer: _MPModelPropertyPodcastTitle
__ MediaPlayer: _MPModelRelationshipGenericPodcastEpisode
__ MediaPlayer: _MPModelRelationshipPodcastAuthor
__ MediaPlayer: _MPModelRelationshipPodcastEpisodeAuthor
__ MediaPlayer: _MPModelRelationshipPodcastEpisodePodcast
__ MediaPlayer: _OBJC_CLASS_$_MPModelPodcastEpisode
__ MediaPlayer: _OBJC_CLASS_$_MPPropertySet
__ MediaPlayer: _OBJC_CLASS_$_MPRequestResponseController
__ MediaRemote: _MRContentItemCopyNowPlayingInfo
__ MediaRemote: _MRMediaRemoteErrorIsInformational
__ MediaRemote: _MRMediaRemoteGetLocalOrigin
__ MediaRemote: _MRMediaRemoteGetNowPlayingClient
__ MediaRemote: _MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync
__ MediaRemote: _MRMediaRemoteSendCommandToPlayer
__ MediaRemote: _MRMediaRemoteSendCommandWithReply
__ MediaRemote: _MRMediaRemoteSetAppPlaybackQueueForPlayer
__ MediaRemote: _MRMediaRemoteSetWantsNowPlayingNotifications
__ MediaRemote: _MRNowPlayingClientCopyBundleIdentifierHierarchy
__ MediaRemote: _MRNowPlayingClientCreate
__ MediaRemote: _MRNowPlayingClientGetParentAppBundleIdentifier
__ MediaRemote: _MRNowPlayingPlayerCreate
__ MediaRemote: _MRNowPlayingPlayerGetIdentifier
__ MediaRemote: _MRNowPlayingPlayerPathCreate
__ MediaRemote: _MRNowPlayingPlayerPathGetPlayer
__ MediaRemote: _MRPlaybackQueueGetContentItemAtOffset
__ MediaRemote: _MRPlaybackQueueRequestCreate
__ MediaRemote: _MRPlaybackQueueRequestSetIncludeMetadata
__ MediaRemote: _MRSystemAppPlaybackQueueCreate
__ MediaRemote: _MRSystemAppPlaybackQueueSetGenericTrackIdentifiers
__ MediaRemote: _MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback
__ MediaRemote: _MRSystemAppPlaybackQueueSetReplaceIntent
__ MediaRemote: _MRSystemAppPlaybackQueueSetSiriAssetInfo
__ MediaRemote: _MRSystemAppPlaybackQueueSetTracklistShuffleMode
__ MediaRemote: _MRSystemAppPlaybackQueueSetUserInfo
__ MediaRemote: _kMRMediaRemoteOptionAssistantSetQueueTrueCompletion
__ MediaRemote: _kMRMediaRemoteOptionContextID
__ MediaRemote: _kMRMediaRemoteOptionPlaybackRate
__ MediaRemote: _kMRNowPlayingPlayerPathUserInfoKey
__ MediaRemote: _kMRPlayerPlaybackQueueChangedNotification
__ PodcastsFoundation: _IMAccessibilityLocalizedNumber
__ PodcastsFoundation: _MTApplicationDidBecomeActiveNotification
__ PodcastsFoundation: _MTEpisodeContextFromPersistentString
__ PodcastsFoundation: _MTEpisodeContextSortTypeFromPersistentString
__ PodcastsFoundation: _MTLogCategoryDatabase
__ PodcastsFoundation: _MTLogCategoryDefault
__ PodcastsFoundation: _MTLogCategoryNetwork
__ PodcastsFoundation: _MTLogCategoryPlayback
__ PodcastsFoundation: _MTPlayReasonFromPersistentString
__ PodcastsFoundation: _NSPersistentStringForMTEpisodeContext
__ PodcastsFoundation: _NSPersistentStringForMTEpisodeContextSortType
__ PodcastsFoundation: _NSPersistentStringForMTPlayReason
__ PodcastsFoundation: _OBJC_CLASS_$_IMLogger
__ PodcastsFoundation: _OBJC_CLASS_$_IMURLBag
__ PodcastsFoundation: _OBJC_CLASS_$_ITMReachability
__ PodcastsFoundation: _OBJC_CLASS_$_MTCoalescableWorkController
__ PodcastsFoundation: _OBJC_CLASS_$_MTConstants
__ PodcastsFoundation: _OBJC_CLASS_$_MTDB
__ PodcastsFoundation: _OBJC_CLASS_$_MTEpisode
__ PodcastsFoundation: _OBJC_CLASS_$_MTPlaylist
__ PodcastsFoundation: _OBJC_CLASS_$_MTPodcast
__ PodcastsFoundation: _OBJC_CLASS_$_MTPodcastPlaylistSettings
__ PodcastsFoundation: _OBJC_CLASS_$_MTPreferences
__ PodcastsFoundation: _OBJC_CLASS_$_PFClientUtil
__ PodcastsFoundation: _OBJC_CLASS_$_UpNextResult
__ PodcastsFoundation: _OBJC_CLASS_$__TtC18PodcastsFoundation17FutureDateChecker
__ PodcastsFoundation: _kEpisodeAssetURL
__ PodcastsFoundation: _kEpisodeAudio
__ PodcastsFoundation: _kEpisodeAuthor
__ PodcastsFoundation: _kEpisodeBackCatalog
__ PodcastsFoundation: _kEpisodeCleanedTitle
__ PodcastsFoundation: _kEpisodeDescription
__ PodcastsFoundation: _kEpisodeDescriptionHasHTML
__ PodcastsFoundation: _kEpisodeDescriptionWithHTML
__ PodcastsFoundation: _kEpisodeDescriptionWithoutHTML
__ PodcastsFoundation: _kEpisodeDuration
__ PodcastsFoundation: _kEpisodeEnclosureUrl
__ PodcastsFoundation: _kEpisodeEpisodeNumber
__ PodcastsFoundation: _kEpisodeEpisodeType
__ PodcastsFoundation: _kEpisodeExplicit
__ PodcastsFoundation: _kEpisodeExternalType
__ PodcastsFoundation: _kEpisodeFeedDeleted
__ PodcastsFoundation: _kEpisodeFlags
__ PodcastsFoundation: _kEpisodeGuid
__ PodcastsFoundation: _kEpisodeImportDate
__ PodcastsFoundation: _kEpisodeIsFromiTunesSync
__ PodcastsFoundation: _kEpisodeIsNew
__ PodcastsFoundation: _kEpisodeLastDatePlayed
__ PodcastsFoundation: _kEpisodeLastUserMarkedAsPlayedDate
__ PodcastsFoundation: _kEpisodeLevel
__ PodcastsFoundation: _kEpisodeListenNowEpisode
__ PodcastsFoundation: _kEpisodeMetadataFirstSyncEligible
__ PodcastsFoundation: _kEpisodeMetadataTimestamp
__ PodcastsFoundation: _kEpisodePersistentID
__ PodcastsFoundation: _kEpisodePlayCount
__ PodcastsFoundation: _kEpisodePlayState
__ PodcastsFoundation: _kEpisodePlayStateLastModifiedDate
__ PodcastsFoundation: _kEpisodePlayStateManuallySet
__ PodcastsFoundation: _kEpisodePlayStateSource
__ PodcastsFoundation: _kEpisodePlayhead
__ PodcastsFoundation: _kEpisodePlaylists
__ PodcastsFoundation: _kEpisodePodcast
__ PodcastsFoundation: _kEpisodePodcastUuid
__ PodcastsFoundation: _kEpisodePubDate
__ PodcastsFoundation: _kEpisodeSaved
__ PodcastsFoundation: _kEpisodeSeasonNumber
__ PodcastsFoundation: _kEpisodeSentNotification
__ PodcastsFoundation: _kEpisodeSettings
__ PodcastsFoundation: _kEpisodeStoreTrackId
__ PodcastsFoundation: _kEpisodeSuppressAutoDownload
__ PodcastsFoundation: _kEpisodeTitle
__ PodcastsFoundation: _kEpisodeTrackNum
__ PodcastsFoundation: _kEpisodeTypeBonus
__ PodcastsFoundation: _kEpisodeTypeTrailer
__ PodcastsFoundation: _kEpisodeUnplayedTab
__ PodcastsFoundation: _kEpisodeUserEpisode
__ PodcastsFoundation: _kEpisodeUti
__ PodcastsFoundation: _kEpisodeUuid
__ PodcastsFoundation: _kEpisodeVideo
__ PodcastsFoundation: _kEpisodeiTunesSubtitle
__ PodcastsFoundation: _kMTAllPodcastsLastUpdatedDate
__ PodcastsFoundation: _kMTApplicationBundleIdentifier
__ PodcastsFoundation: _kMTCompanionFeedLastFetchedDates
__ PodcastsFoundation: _kMTCompanionFeedRevisionNumbers
__ PodcastsFoundation: _kMTCompanionPlaylistRevisionString
__ PodcastsFoundation: _kMTCompanionSubscriptionSyncRevisionString
__ PodcastsFoundation: _kMTCompanionUPPSyncRevisionString
__ PodcastsFoundation: _kMTContinuousPlaybackEnabledKey
__ PodcastsFoundation: _kMTEpisodeEntityName
__ PodcastsFoundation: _kMTGoDarkCountLimit
__ PodcastsFoundation: _kMTPlaylistEntityName
__ PodcastsFoundation: _kMTPodcastAutoDownloadStateDefaultKey
__ PodcastsFoundation: _kMTPodcastDeletePlayedEpisodesDefaultKey
__ PodcastsFoundation: _kMTPodcastEntityName
__ PodcastsFoundation: _kMTPodcastPlaylistSettingsEntityName
__ PodcastsFoundation: _kMTPodcastShowTypeCount
__ PodcastsFoundation: _kMTPodcastsMagicMomentsPlayerID
__ PodcastsFoundation: _kMTSerpentAdamIdOffset
__ PodcastsFoundation: _kMTSharedGroupContainerId
__ PodcastsFoundation: _kMTSyncSubscriptionsKey
__ PodcastsFoundation: _kMTWiFiDownloadOnly
__ PodcastsFoundation: _kPodcastAddedDate
__ PodcastsFoundation: _kPodcastAuthor
__ PodcastsFoundation: _kPodcastAutoDownloadType
__ PodcastsFoundation: _kPodcastDarkCountLocal
__ PodcastsFoundation: _kPodcastDeletePlayedEpisodes
__ PodcastsFoundation: _kPodcastDescription
__ PodcastsFoundation: _kPodcastEpisodeLimit
__ PodcastsFoundation: _kPodcastFeedChangedDate
__ PodcastsFoundation: _kPodcastFeedUrl
__ PodcastsFoundation: _kPodcastFlags
__ PodcastsFoundation: _kPodcastHidden
__ PodcastsFoundation: _kPodcastImageUrl
__ PodcastsFoundation: _kPodcastLastDatePlayed
__ PodcastsFoundation: _kPodcastLastTouchDate
__ PodcastsFoundation: _kPodcastModifiedDate
__ PodcastsFoundation: _kPodcastNotifications
__ PodcastsFoundation: _kPodcastOrphanedFromCloud
__ PodcastsFoundation: _kPodcastPID
__ PodcastsFoundation: _kPodcastShowTypeInFeed
__ PodcastsFoundation: _kPodcastShowTypeSetting
__ PodcastsFoundation: _kPodcastSortOrder
__ PodcastsFoundation: _kPodcastStoreCollectionId
__ PodcastsFoundation: _kPodcastSubscribed
__ PodcastsFoundation: _kPodcastTitle
__ PodcastsFoundation: _kPodcastUpdateAvg
__ PodcastsFoundation: _kPodcastUpdateInterval
__ PodcastsFoundation: _kPodcastUpdateStdDev
__ PodcastsFoundation: _kPodcastUpdatedDate
__ PodcastsFoundation: _kPodcastUpdatedFeedUrl
__ PodcastsFoundation: _kPodcastUuid
__ PodcastsFoundation: _kPodcastWebpageURL
__ PodcastsFoundation: _kReachabilityChangedNotification
__ Preferences: _OBJC_CLASS_$_PSAirplaneModeSettingsDetail
__ Preferences: _OBJC_CLASS_$_PSCellularDataSettingsDetail
__ Preferences: _OBJC_CLASS_$_PSRestrictionsPasscodeController
__ SAObjects: _OBJC_CLASS_$_SACommandFailed
__ SAObjects: _OBJC_CLASS_$_SACommandSucceeded
__ SAObjects: _OBJC_CLASS_$_SAMPPodcastCollection
__ SAObjects: _OBJC_CLASS_$_SAMPPodcastStation
__ SAObjects: _SAMPAudioPlaybackDeviceNotFoundErrorCode
__ SAObjects: _SAMPCannotAccessContentNoDataConnectionErrorCode
__ SAObjects: _SAMPCannotPlayExplicitContentErrorCode
__ SAObjects: _SAMPCannotPlayPodcastAppNotInstalledErrorCode
__ SAObjects: _SAMPCannotPlayPodcastNoEpisodesErrorCode
__ SAObjects: _SAMPEmptyLibraryErrorCode
__ SAObjects: _SAMPEpisodePlaybackOrderAPPLICATION_DEFAULTValue
__ SAObjects: _SAMPEpisodePlaybackOrderNEWEST_FIRSTValue
__ SAObjects: _SAMPEpisodePlaybackOrderOLDEST_FIRSTValue
__ SAObjects: _SAMPGeniusDisablediTunesAccountRequiredErrorCode
__ SAObjects: _SAMPNoRemotePodcastEpisodesExistErrorCode
__ SAObjects: _SAMPRemoteCommandCausedPrimaryToStopPlaybackErrorCode
__ SAObjects: _SAMPRemoteCommandCausedSilentPrimaryToStopPlaybackErrorCode
__ SAObjects: _SAMPRemotePodcastPlaybackFailedErrorCode
__ SAObjects: _SAMPSAMPProviderServerUnreachableErrorCode
__ SoftLinking: __sl_dlopen_audited
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _OBJC_CLASS_$_UIColor
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_queue
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_os_log
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libswiftAVFoundation.dylib: __swift_FORCE_LOAD_$_swiftAVFoundation
__ libswiftCloudKit.dylib: __swift_FORCE_LOAD_$_swiftCloudKit
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deallocPartialClassInstance
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastClass
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_isEscapingClosureAtFileLocation
__ libswiftCore.dylib: _swift_isUniquelyReferencedNonObjC_nonNull_bridgeObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_release_n
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_retain_n
__ libswiftCore.dylib: _swift_setDeallocating
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_updateClassMetadata2
__ libswiftCore.dylib: _swift_willThrow
__ libswiftCoreAudio.dylib: __swift_FORCE_LOAD_$_swiftCoreAudio
__ libswiftCoreData.dylib: __swift_FORCE_LOAD_$_swiftCoreData
__ libswiftCoreFoundation.dylib: __swift_FORCE_LOAD_$_swiftCoreFoundation
__ libswiftCoreGraphics.dylib: __swift_FORCE_LOAD_$_swiftCoreGraphics
__ libswiftCoreImage.dylib: __swift_FORCE_LOAD_$_swiftCoreImage
__ libswiftCoreLocation.dylib: __swift_FORCE_LOAD_$_swiftCoreLocation
__ libswiftCoreMIDI.dylib: __swift_FORCE_LOAD_$_swiftCoreMIDI
__ libswiftCoreMedia.dylib: __swift_FORCE_LOAD_$_swiftCoreMedia
__ libswiftDarwin.dylib: __swift_FORCE_LOAD_$_swiftDarwin
__ libswiftDispatch.dylib: __swift_FORCE_LOAD_$_swiftDispatch
__ libswiftFoundation.dylib: __swift_FORCE_LOAD_$_swiftFoundation
__ libswiftMediaPlayer.dylib: __swift_FORCE_LOAD_$_swiftMediaPlayer
__ libswiftMetal.dylib: __swift_FORCE_LOAD_$_swiftMetal
__ libswiftObjectiveC.dylib: __swift_FORCE_LOAD_$_swiftObjectiveC
__ libswiftQuartzCore.dylib: __swift_FORCE_LOAD_$_swiftQuartzCore
__ libswiftUIKit.dylib: __swift_FORCE_LOAD_$_swiftUIKit
__ libswiftUniformTypeIdentifiers.dylib: __swift_FORCE_LOAD_$_swiftUniformTypeIdentifiers
__ libswiftos.dylib: __swift_FORCE_LOAD_$_swiftos
__ libswiftsimd.dylib: __swift_FORCE_LOAD_$_swiftsimd
MTPodcastAndEpisodeProcessor : MTBaseProcessor
 @property  NSMutableDictionary *episodeObservers

  // instance methods
  -[MTPodcastAndEpisodeProcessor entityName]
  -[MTPodcastAndEpisodeProcessor init]
  -[MTPodcastAndEpisodeProcessor .cxx_destruct]
  -[MTPodcastAndEpisodeProcessor predicate]
  -[MTPodcastAndEpisodeProcessor stop]
  -[MTPodcastAndEpisodeProcessor episodeObservers]
  -[MTPodcastAndEpisodeProcessor podcastPredicate]
  -[MTPodcastAndEpisodeProcessor updateEpisodePredicates]
  -[MTPodcastAndEpisodeProcessor podcastUuids]
  -[MTPodcastAndEpisodeProcessor addEpisodeObserverForPodcast:]
  -[MTPodcastAndEpisodeProcessor episodePredicateForPodcast:]
  -[MTPodcastAndEpisodeProcessor episodeSortDescriptorsForPodcast:]
  -[MTPodcastAndEpisodeProcessor createEpisodeObserverForPodcastUuid:predicate:sortDescriptors:]
  -[MTPodcastAndEpisodeProcessor episodeUuidObserver:resultsChangedForPodcast:withDeletedIds:andInsertIds:]
  -[MTPodcastAndEpisodeProcessor resultsChangedWithDeletedIds:andInsertIds:]
  -[MTPodcastAndEpisodeProcessor removeEpisodeObserverForPodcast:]
  -[MTPodcastAndEpisodeProcessor episodeObserverForPodcastUuid:]
  -[MTPodcastAndEpisodeProcessor episodeUuids]
  -[MTPodcastAndEpisodeProcessor setEpisodeObservers:]


MTEpisodeUnavailableUtil : MTSingleton
  // class methods
  +[MTEpisodeUnavailableUtil longReasonTextForNoInternet]
  +[MTEpisodeUnavailableUtil longStringForUnavailableReason:podcastTitle:]
  +[MTEpisodeUnavailableUtil unavailableReasonForEpisode:]
  +[MTEpisodeUnavailableUtil stringForUnavailableReason:]

  // instance methods
  -[MTEpisodeUnavailableUtil _presentErrorDialogWithTitle:message:handler:]
  -[MTEpisodeUnavailableUtil showDialogForReason:podcastTitle:completion:]


MTFetchedResultsController : NSObject /usr/lib/libSystem.B.dylib <NSFetchedResultsControllerDelegate, MTFetchedResultsControllerProtocol>
 @property  NSFetchRequest *fetchRequest
 @property  NSArray *propertyKeys
 @property  NSManagedObjectContext *managedObjectContext
 @property  NSArray *fetchedObjects
 @property  NSArray *sections
 @property  <NSFetchedResultsControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTFetchedResultsController fetchRequest]
  -[MTFetchedResultsController initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:]
  -[MTFetchedResultsController indexPathForObject:]
  -[MTFetchedResultsController .cxx_destruct]
  -[MTFetchedResultsController controllerDidChangeContent:]
  -[MTFetchedResultsController controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:]
  -[MTFetchedResultsController sections]
  -[MTFetchedResultsController propertyKeys]
  -[MTFetchedResultsController setPropertyKeys:]
  -[MTFetchedResultsController objectAtIndexPath:]
  -[MTFetchedResultsController performFetch:]
  -[MTFetchedResultsController managedObjectContext]
  -[MTFetchedResultsController setDelegate:]
  -[MTFetchedResultsController fetchedObjects]
  -[MTFetchedResultsController delegate]
  -[MTFetchedResultsController controllerWillChangeContent:]
  -[MTFetchedResultsController _updateCacheWithManagedObject:]
  -[MTFetchedResultsController _hasManagedObjectChanged:]
  -[MTFetchedResultsController _removeObjectFromCacheWithId:]
  -[MTFetchedResultsController _dictionaryForObject:]
  -[MTFetchedResultsController _dictionaryFromCacheForObjectID:]


MTPreferencesFeedUpdate : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTPreferencesFeedUpdate _numberFormatter]
  +[MTPreferencesFeedUpdate _setRevisionString:forKey:]
  +[MTPreferencesFeedUpdate _removeRevisionStringForKey:]
  +[MTPreferencesFeedUpdate setCompanionLastFetchedDate:forFeedURL:]
  +[MTPreferencesFeedUpdate removeCompanionLastFetchedDateForFeedURL:]
  +[MTPreferencesFeedUpdate incrementCompanionRevisionNumberForFeedURL:]
  +[MTPreferencesFeedUpdate removeCompanionRevisionNumberForFeedURL:]
  +[MTPreferencesFeedUpdate setCompanionSubscriptionSyncRevisionString:]
  +[MTPreferencesFeedUpdate removeCompanionSubscriptionSyncRevisionString]
  +[MTPreferencesFeedUpdate setCompanionPlaylistRevisionString:]
  +[MTPreferencesFeedUpdate removeCompanionPlaylistRevisionString]
  +[MTPreferencesFeedUpdate setCompanionUPPSyncRevisionString:]
  +[MTPreferencesFeedUpdate removeCompanionUPPSyncRevisionString]
  +[MTPreferencesFeedUpdate getCompanionRevisionNumberForFeedURL:]
  +[MTPreferencesFeedUpdate getCompanionSubscriptionSyncRevisionNumber]
  +[MTPreferencesFeedUpdate getCompanionPlaylistRevisionNumber]
  +[MTPreferencesFeedUpdate getCompanionUPPSyncRevisionNumber]
  +[MTPreferencesFeedUpdate getCompanionLastFetchedDateForFeedURL:]
  +[MTPreferencesFeedUpdate setGizmoLastFetchedDate:forFeedURL:]
  +[MTPreferencesFeedUpdate removeGizmoLastFetchedDateForFeedURL:]
  +[MTPreferencesFeedUpdate getGizmoLastFetchedDateForFeedURL:]
  +[MTPreferencesFeedUpdate setGizmoRevisionNumber:forFeedURL:]
  +[MTPreferencesFeedUpdate removeGizmoRevisionNumberForFeedURL:]
  +[MTPreferencesFeedUpdate getGizmoRevisionNumberForFeedURL:]
  +[MTPreferencesFeedUpdate setStartDate:forOngoingFetchOfFeedURL:]
  +[MTPreferencesFeedUpdate removeStartDateForOngoingFetchOfFeedURL:]
  +[MTPreferencesFeedUpdate getStartDateForOngoingFetchOfFeedURL:]
  +[MTPreferencesFeedUpdate setCompanionRevisionNumber:forOngoingFetchOfFeedURL:]
  +[MTPreferencesFeedUpdate removeCompanionRevisionNumberForOngoingFetchOfFeedURL:]
  +[MTPreferencesFeedUpdate getCompanionRevisionNumberForOngoingFetchOfFeedURL:]


MTBaseQueryObserver : NSObject /usr/lib/libSystem.B.dylib <NSFetchedResultsControllerDelegate, MTQueryObserver>
 @property  NSMutableDictionary *handlers
 @property  BOOL isObserving
 @property  BOOL stopCalled
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MTBaseQueryObserver fetchedResultsControllerClass]

  // instance methods
  -[MTBaseQueryObserver handlers]
  -[MTBaseQueryObserver _frc]
  -[MTBaseQueryObserver uuids]
  -[MTBaseQueryObserver setIsObserving:]
  -[MTBaseQueryObserver dealloc]
  -[MTBaseQueryObserver .cxx_destruct]
  -[MTBaseQueryObserver initWithFetchRequest:]
  -[MTBaseQueryObserver setIdentifier:]
  -[MTBaseQueryObserver identifier]
  -[MTBaseQueryObserver predicate]
  -[MTBaseQueryObserver stop]
  -[MTBaseQueryObserver initWithFetchRequest:managedObjectContext:]
  -[MTBaseQueryObserver startObserving]
  -[MTBaseQueryObserver setPredicate:]
  -[MTBaseQueryObserver isObserving]
  -[MTBaseQueryObserver sortDescriptors]
  -[MTBaseQueryObserver managedObjectContext]
  -[MTBaseQueryObserver setHandlers:]
  -[MTBaseQueryObserver initWithEntityName:predicate:sortDescriptors:]
  -[MTBaseQueryObserver addResultsChangedHandler:]
  -[MTBaseQueryObserver results:]
  -[MTBaseQueryObserver initWithEntityName:predicate:sortDescriptors:limit:]
  -[MTBaseQueryObserver initWithEntityName:predicate:managedObjectContext:]
  -[MTBaseQueryObserver initWithEntityName:predicate:sortDescriptors:limit:returnObjectsAsFaults:]
  -[MTBaseQueryObserver initWithEntityName:predicate:sortDescriptors:limit:batchSize:propertiesToFetch:managedObjectContext:]
  -[MTBaseQueryObserver removeAllResultsChangedHandlers]
  -[MTBaseQueryObserver setStopCalled:]
  -[MTBaseQueryObserver initWithEntityName:predicate:]
  -[MTBaseQueryObserver initWithEntityName:predicate:background:]
  -[MTBaseQueryObserver initWithEntityName:predicate:sortDescriptors:limit:batchSize:propertiesToFetch:]
  -[MTBaseQueryObserver refetch:]
  -[MTBaseQueryObserver removeResultsChangedHandler:]
  -[MTBaseQueryObserver stopCalled]


MTBaseProcessor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_source> *timer
 @property  MTDefaultsChangeNotifier *defaultsNotifier
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject *isStoppingLock
 @property  BOOL isStopping
 @property  MTBaseQueryObserver *queryObserver

  // class methods
  +[MTBaseProcessor sharedInstance]
  +[MTBaseProcessor initialize]

  // instance methods
  -[MTBaseProcessor setWorkQueue:]
  -[MTBaseProcessor entityName]
  -[MTBaseProcessor init]
  -[MTBaseProcessor timer]
  -[MTBaseProcessor setTimer:]
  -[MTBaseProcessor .cxx_destruct]
  -[MTBaseProcessor workQueue]
  -[MTBaseProcessor predicate]
  -[MTBaseProcessor stop]
  -[MTBaseProcessor isRunning]
  -[MTBaseProcessor isStopping]
  -[MTBaseProcessor start]
  -[MTBaseProcessor enqueueWorkBlock:]
  -[MTBaseProcessor results:]
  -[MTBaseProcessor resultsChangedWithDeletedIds:andInsertIds:]
  -[MTBaseProcessor createQueryObserver]
  -[MTBaseProcessor setQueryObserver:]
  -[MTBaseProcessor queryObserver]
  -[MTBaseProcessor updatePredicateDuration]
  -[MTBaseProcessor updatePredicate]
  -[MTBaseProcessor defaultPropertiesThatAffectPredicate]
  -[MTBaseProcessor setDefaultsNotifier:]
  -[MTBaseProcessor defaultsNotifier]
  -[MTBaseProcessor setIsStopping:]
  -[MTBaseProcessor isStoppingLock]
  -[MTBaseProcessor setIsStoppingLock:]


POPodcastCollection : POPodcastModelObject
  // class methods
  +[POPodcastCollection uriScheme]
  +[POPodcastCollection SAMPClass]


MTPodcastDerivedPropertyObserver : NSObject /usr/lib/libSystem.B.dylib <MTDerivedPropertyChangeNotifying, MTLibraryChangeNotifier>
 @property  NSMutableDictionary *cache
 @property  NSMutableDictionary *handlers
 @property  NSMutableDictionary *podcastCache
 @property  NSSet *episodePropertiesToFetch
 @property  NSSet *podcastPropertiesToFetch
 @property  NSSet *podcastStatsProperties
 @property  NSPersistentHistoryToken *latestPersistentHistoryToken
 @property  BOOL isObserving
 @property  @? didFinishProcessingContextSaveHandlerForTests
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MTPodcastDerivedPropertyObserver sharedInstance]

  // instance methods
  -[MTPodcastDerivedPropertyObserver handlers]
  -[MTPodcastDerivedPropertyObserver setCache:]
  -[MTPodcastDerivedPropertyObserver init]
  -[MTPodcastDerivedPropertyObserver stopObserving]
  -[MTPodcastDerivedPropertyObserver setIsObserving:]
  -[MTPodcastDerivedPropertyObserver .cxx_destruct]
  -[MTPodcastDerivedPropertyObserver cache]
  -[MTPodcastDerivedPropertyObserver startObserving]
  -[MTPodcastDerivedPropertyObserver isObserving]
  -[MTPodcastDerivedPropertyObserver setHandlers:]
  -[MTPodcastDerivedPropertyObserver libraryDidChange:]
  -[MTPodcastDerivedPropertyObserver _fetchLatestProcessedPersistentHistoryToken]
  -[MTPodcastDerivedPropertyObserver processLatestPersistentHistoryTransactions]
  -[MTPodcastDerivedPropertyObserver episodeResultsChangedForPodcastUuid:]
  -[MTPodcastDerivedPropertyObserver _historyTransactionsSinceLatestPersistentHistoryToken]
  -[MTPodcastDerivedPropertyObserver _shouldUpdatePodcastsStatsForChange:]
  -[MTPodcastDerivedPropertyObserver _changeContainsRelevantEpisodeChanges:]
  -[MTPodcastDerivedPropertyObserver _changeContainsRelevantPodcastChanges:]
  -[MTPodcastDerivedPropertyObserver _updateDerivedPropertiesForPodcastUUIDs:]
  -[MTPodcastDerivedPropertyObserver notifyObserversForPodcast:]
  -[MTPodcastDerivedPropertyObserver _setLastProcessedPersistentHistoryToken:]
  -[MTPodcastDerivedPropertyObserver reportStatsForPodcasts]
  -[MTPodcastDerivedPropertyObserver setLatestPersistentHistoryToken:]
  -[MTPodcastDerivedPropertyObserver countOfNewEpisodesForEpisodes:]
  -[MTPodcastDerivedPropertyObserver countOfUnplayedEpisodesForEpisodes:andPredicateForEpisodesOnUnplayedTab:]
  -[MTPodcastDerivedPropertyObserver countOfMyMediaEpisodesForEpisodes:andPredicateForMyEpisodes:]
  -[MTPodcastDerivedPropertyObserver updateFlagForEpisodes:predicateForUnplayedTab:predicateForUserEpisodes:podcastUuid:ctx:]
  -[MTPodcastDerivedPropertyObserver setDerivedPropertyValue:forKey:forPodcast:]
  -[MTPodcastDerivedPropertyObserver didFinishProcessingContextSaveHandlerForTests]
  -[MTPodcastDerivedPropertyObserver derivedPropertiesForPodcast:]
  -[MTPodcastDerivedPropertyObserver episodePropertiesToFetch]
  -[MTPodcastDerivedPropertyObserver _predicateForEpisodesToUpdateWithPodcastUuid:predicateForUnplayedInUnplayedTab:predicateForUserEpisodes:predicateForTopLevelEpisodes:]
  -[MTPodcastDerivedPropertyObserver derivedPropertyValueForKey:forPodcast:]
  -[MTPodcastDerivedPropertyObserver dependentPropertyForKey:forPodcastUuid:]
  -[MTPodcastDerivedPropertyObserver setDependentPropertyValue:forKey:forPodcastUuid:]
  -[MTPodcastDerivedPropertyObserver podcastCache]
  -[MTPodcastDerivedPropertyObserver setPodcastCache:]
  -[MTPodcastDerivedPropertyObserver setEpisodePropertiesToFetch:]
  -[MTPodcastDerivedPropertyObserver podcastPropertiesToFetch]
  -[MTPodcastDerivedPropertyObserver setPodcastPropertiesToFetch:]
  -[MTPodcastDerivedPropertyObserver podcastStatsProperties]
  -[MTPodcastDerivedPropertyObserver setPodcastStatsProperties:]
  -[MTPodcastDerivedPropertyObserver latestPersistentHistoryToken]
  -[MTPodcastDerivedPropertyObserver setDidFinishProcessingContextSaveHandlerForTests:]
  -[MTPodcastDerivedPropertyObserver addDerivedPropertyChangeHandler:]
  -[MTPodcastDerivedPropertyObserver removeDerivedPropertyChangeHandler:]
  -[MTPodcastDerivedPropertyObserver countOfUnplayedEpisodesForPodcast:]
  -[MTPodcastDerivedPropertyObserver countOfMyMediaEpisodesForPodcast:]


POPodcastRevision : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long revisionID
 @property  long long revisionType
 @property  NSString *objectID
 @property  BOOL isPodcastCollection

  // instance methods
  -[POPodcastRevision revisionID]
  -[POPodcastRevision setObjectID:]
  -[POPodcastRevision .cxx_destruct]
  -[POPodcastRevision revisionType]
  -[POPodcastRevision setRevisionType:]
  -[POPodcastRevision setRevisionID:]
  -[POPodcastRevision objectID]
  -[POPodcastRevision setIsPodcastCollection:]
  -[POPodcastRevision deletedModelObject]
  -[POPodcastRevision isPodcastCollection]


MTMPCAssistantGenericPlaybackQueue : MPCAssistantPlaybackQueue /usr/lib/swift/libswiftAVFoundation.dylib
 @property  ^{_MRSystemAppPlaybackQueue=} playbackQueueRef

  // instance methods
  -[MTMPCAssistantGenericPlaybackQueue createRemotePlaybackQueue]
  -[MTMPCAssistantGenericPlaybackQueue initWithContextID:playbackQueueRef:]
  -[MTMPCAssistantGenericPlaybackQueue initWithPlaybackQueueRef:]
  -[MTMPCAssistantGenericPlaybackQueue playbackQueueRef]
  -[MTMPCAssistantGenericPlaybackQueue setPlaybackQueueRef:]


MTPlaybackQueueFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTPlaybackQueueFactory _episodeToPlayForPodcastUuid:playbackOrder:excludeExplicit:ctx:]
  +[MTPlaybackQueueFactory _isContinuousPlaybackEnabledForLimit:]
  +[MTPlaybackQueueFactory _latestEpisodeForPodcastUuid:restrictToUserEpisodes:excludeExplicit:ctx:]
  +[MTPlaybackQueueFactory _oldestEpisodeForPodcastUuid:restrictToUserEpisodes:excludeExplicit:ctx:]
  +[MTPlaybackQueueFactory _latestOrOldestEpisodeForPodcastUuid:restrictToUserEpisodes:excludeExplicit:latest:ctx:]
  +[MTPlaybackQueueFactory episodeUuidsForPlayPodcastUuid:order:limit:error:]
  +[MTPlaybackQueueFactory episodeUuidsForPlayStationUuid:limit:]
  +[MTPlaybackQueueFactory _uuidForEpisode:]


MTReachability : NSObject /usr/lib/libSystem.B.dylib <RadiosPreferencesDelegate>
 @property  ITMReachability *reachability
 @property  long long networkStatus
 @property  BOOL globalCellularEnabled
 @property  NSHashTable *callbacks
 @property  BOOL reachable
 @property  RadiosPreferences *radiosPreferences
 @property  NSObject<OS_dispatch_queue> *cellularQueue
 @property  BOOL hasDeterminedActualGlobalCellularState
 @property  BOOL airplaneModeEnabled
 @property  BOOL reachableViaCellular
 @property  BOOL reachableViaWifi
 @property  BOOL podcastsCellularDownloadsEnabled

  // class methods
  +[MTReachability sharedInstance]
  +[MTReachability allocWithZone:]

  // instance methods
  -[MTReachability airplaneModeChanged]
  -[MTReachability isAirplaneModeEnabled]
  -[MTReachability reachability]
  -[MTReachability setReachability:]
  -[MTReachability init]
  -[MTReachability setCallbacks:]
  -[MTReachability dealloc]
  -[MTReachability .cxx_destruct]
  -[MTReachability setReachable:]
  -[MTReachability copy]
  -[MTReachability isReachable]
  -[MTReachability setRadiosPreferences:]
  -[MTReachability callbacks]
  -[MTReachability _updateReachability]
  -[MTReachability setNetworkStatus:]
  -[MTReachability networkStatus]
  -[MTReachability removeObserver:]
  -[MTReachability _updateAirplaneMode]
  -[MTReachability radiosPreferences]
  -[MTReachability addObserver:]
  -[MTReachability _applicationDidBecomeActive]
  -[MTReachability reasonForNoInternet]
  -[MTReachability isGlobalCellularEnabled]
  -[MTReachability setGlobalCellularEnabled:]
  -[MTReachability reasonTextForNoInternet]
  -[MTReachability showInternetUnreachableDialogWithAcknowledmentBlock:]
  -[MTReachability _updateGlobalCellularWithCompletion:]
  -[MTReachability hasDeterminedActualGlobalCellularState]
  -[MTReachability setHasDeterminedActualGlobalCellularState:]
  -[MTReachability _showAlertForInternetUnavailableReason:completion:]
  -[MTReachability showInternetUnreachableDialog]
  -[MTReachability isPodcastsCellularDownloadsEnabled]
  -[MTReachability isReachableViaCellular]
  -[MTReachability isReachableViaWifi]
  -[MTReachability cellularQueue]
  -[MTReachability setCellularQueue:]


MTPodcastDetailDataSource : NSObject /usr/lib/libSystem.B.dylib <MTPodcastDetailEpisodeSectionDelegate>
 @property  NSString *podcastUuid
 @property  <MTPodcastDetailDataSourceDelegate> *delegate
 @property  unsigned long selectedTab
 @property  NSArray *sections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MTPodcastDetailDataSource sortDescriptorsForPodcastUuid:]
  +[MTPodcastDetailDataSource predicateForPodcast:sectionType:]
  +[MTPodcastDetailDataSource predicateForPlayingPodcast:sectionType:]

  // instance methods
  -[MTPodcastDetailDataSource reloadData]
  -[MTPodcastDetailDataSource podcast]
  -[MTPodcastDetailDataSource .cxx_destruct]
  -[MTPodcastDetailDataSource indexForSection:]
  -[MTPodcastDetailDataSource sections]
  -[MTPodcastDetailDataSource setDelegate:]
  -[MTPodcastDetailDataSource delegate]
  -[MTPodcastDetailDataSource selectedTab]
  -[MTPodcastDetailDataSource setSelectedTab:]
  -[MTPodcastDetailDataSource podcastUuid]
  -[MTPodcastDetailDataSource unplayedSections]
  -[MTPodcastDetailDataSource feedSections]
  -[MTPodcastDetailDataSource savedSections]
  -[MTPodcastDetailDataSource createSectionForLimitedUnplayed]
  -[MTPodcastDetailDataSource createSectionForOtherEpisodes]
  -[MTPodcastDetailDataSource createSectionForEmptyOverlay]
  -[MTPodcastDetailDataSource createSectionForPlayedToBeDeleted]
  -[MTPodcastDetailDataSource createSectionForFeed]
  -[MTPodcastDetailDataSource createSectionForSaved]
  -[MTPodcastDetailDataSource createSectionForIsFromiTunesSync]
  -[MTPodcastDetailDataSource sectionWillChangeContent:]
  -[MTPodcastDetailDataSource sectionDidChangeContent:]
  -[MTPodcastDetailDataSource episodeSection:didChangeObject:atIndex:forChangeType:newIndex:]
  -[MTPodcastDetailDataSource initWithPodcastUuid:]
  -[MTPodcastDetailDataSource createSectionForDarkPlacard]


MTPodcastDetailEpisodeSection : NSObject /usr/lib/libSystem.B.dylib <NSFetchedResultsControllerDelegate>
 @property  <MTFetchedResultsControllerProtocol> *frc
 @property  NSString *title
 @property  NSPredicate *predicate
 @property  NSArray *sortDescriptors
 @property  unsigned long sectionType
 @property  BOOL showTitleWithNoEpisodes
 @property  <MTPodcastDetailEpisodeSectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MTPodcastDetailEpisodeSection dependentPropertyKeys]

  // instance methods
  -[MTPodcastDetailEpisodeSection frc]
  -[MTPodcastDetailEpisodeSection setFrc:]
  -[MTPodcastDetailEpisodeSection .cxx_destruct]
  -[MTPodcastDetailEpisodeSection setTitle:]
  -[MTPodcastDetailEpisodeSection controllerDidChangeContent:]
  -[MTPodcastDetailEpisodeSection loadData]
  -[MTPodcastDetailEpisodeSection controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:]
  -[MTPodcastDetailEpisodeSection predicate]
  -[MTPodcastDetailEpisodeSection title]
  -[MTPodcastDetailEpisodeSection sectionType]
  -[MTPodcastDetailEpisodeSection setPredicate:]
  -[MTPodcastDetailEpisodeSection setSortDescriptors:]
  -[MTPodcastDetailEpisodeSection sortDescriptors]
  -[MTPodcastDetailEpisodeSection setDelegate:]
  -[MTPodcastDetailEpisodeSection delegate]
  -[MTPodcastDetailEpisodeSection setSectionType:]
  -[MTPodcastDetailEpisodeSection episodes]
  -[MTPodcastDetailEpisodeSection controllerWillChangeContent:]
  -[MTPodcastDetailEpisodeSection initializeFrc]
  -[MTPodcastDetailEpisodeSection indexOfEpisode:]
  -[MTPodcastDetailEpisodeSection showTitleWithNoEpisodes]
  -[MTPodcastDetailEpisodeSection setShowTitleWithNoEpisodes:]


MTPodcastDetailLimittedEpisodeSection : MTPodcastDetailEpisodeSection
 @property  long long episodeLimitResolvedValue

  // instance methods
  -[MTPodcastDetailLimittedEpisodeSection title]
  -[MTPodcastDetailLimittedEpisodeSection episodeLimitResolvedValue]
  -[MTPodcastDetailLimittedEpisodeSection setEpisodeLimitResolvedValue:]


MTUTIUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTUTIUtil convertUti:]
  +[MTUTIUtil isVideo:]
  +[MTUTIUtil isAudio:]


POUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[POUtilities commandStatusForRemoteStatus:error:isRemoteStorePlayback:]
  +[POUtilities performPodcastsPlaybackRequestWithIdentifier:assetInfo:hashedRouteUIDs:startPlaying:requesterSharedUserId:sharedUserIdFromPlayableITunesAccount:context:completion:]
  +[POUtilities identifierFromDomainObject:]
  +[POUtilities performPodcastsPlaybackRequestWithIdentifier:assetInfo:hashedRouteUIDs:startPlaying:requesterSharedUserId:sharedUserIdFromPlayableITunesAccount:context:allowsFallback:completion:]
  +[POUtilities createPlaybackQueueFromRequestIdentifiers:startPlaying:assetInfo:requesterSharedUserId:sharedUserIdFromPlayableITunesAccount:]
  +[POUtilities modifyContextForAirplay:andPlayLocally:completion:]
  +[POUtilities typeFromDomainObject:]
  +[POUtilities isPodcastsNowPlaying]
  +[POUtilities setPlaybackRate:failureErrorCode:completion:]


MTPlaybackIdentifierUtil : MTSingleton <MTPlaybackIdentifierComposing>
  // class methods
  +[MTPlaybackIdentifierUtil __queryStringToQueryDictionary:]
  +[MTPlaybackIdentifierUtil __stringWithPercentEscape:]
  +[MTPlaybackIdentifierUtil __stringByRemovingPercentEscapes:]

  // instance methods
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForStationUuid:episodeGuid:episodeStoreId:podcastFeedUrl:]
  -[MTPlaybackIdentifierUtil playbackQueueIdentifierForEpisodeAdamId:]
  -[MTPlaybackIdentifierUtil _playbackRequestIdentifierWithHost:queryKey:value:]
  -[MTPlaybackIdentifierUtil localPlaybackQueueIdentifierForPodcastUuid:episodeUuid:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:episodeUuid:episodeGuid:episodeStoreId:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil _universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:episodeUuid:episodeGuid:episodeStoreId:context:contextSortType:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil _playbackRequestIdentifierWithHost:queryComponents:]
  -[MTPlaybackIdentifierUtil localPlaybackQueueIdentifierForStationUuid:episodeUuid:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForStationUuid:episodeUuid:episodeGuid:episodeStoreId:podcastFeedUrl:]
  -[MTPlaybackIdentifierUtil playbackQueueWithDsid:forIdentifiers:]
  -[MTPlaybackIdentifierUtil playbackQueueIdentifierForPlayMyPodcastsWithPlaybackOrder:]
  -[MTPlaybackIdentifierUtil localPlaybackQueueIdentifierForPodcastUuid:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForPodcastFeedUrl:podcastStoreId:episodeGuid:episodeStoreId:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil playbackQueueIdentifierForPodcastAdamId:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil playbackQueueIdentifierForSubscribeToPodcast:]
  -[MTPlaybackIdentifierUtil playbackQueueIdentifierForSubscribeToPodcastFeedUrl:]
  -[MTPlaybackIdentifierUtil localPlaybackQueueIdentifierForStationUuid:]
  -[MTPlaybackIdentifierUtil playbackRequestURLWithPlayReason:baseRequestURLString:]
  -[MTPlaybackIdentifierUtil playbackRequestURLWithDSID:baseRequestURLString:]
  -[MTPlaybackIdentifierUtil isLocalSetPlaybackQueueURLString:]
  -[MTPlaybackIdentifierUtil isSubscribeCommandURLString:]
  -[MTPlaybackIdentifierUtil isUniversalPlaybackIdentifierURLString:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:episodeUuid:episodeGuid:episodeStoreId:context:contextSortType:]
  -[MTPlaybackIdentifierUtil playbackQueueWithAccountInfoForIdentifiers:]
  -[MTPlaybackIdentifierUtil _playQueueTypeForRequestURL:]
  -[MTPlaybackIdentifierUtil _episodeOrderFromString:]
  -[MTPlaybackIdentifierUtil _playReasonFromString:]
  -[MTPlaybackIdentifierUtil _episodeContextFromString:]
  -[MTPlaybackIdentifierUtil _episodeContextSortFromString:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueRequestIdentifierForEpisode:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifiersForStationUuid:limit:queueStatus:]
  -[MTPlaybackIdentifierUtil episodeUuidForSetPlaybackQueueRequestIdentifier:]
  -[MTPlaybackIdentifierUtil podcastUuidForSetPlaybackQueueRequestIdentifier:]


MTURLCommandRequest : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *urlString
 @property  unsigned long commandType
 @property  unsigned long playQueueType
 @property  unsigned long playReason
 @property  long long playbackOrder
 @property  long long playContext
 @property  long long playContextSortType
 @property  NSString *podcastUuid
 @property  NSString *podcastFeedUrl
 @property  NSString *episodeUuid
 @property  NSString *podcastAdamId
 @property  NSString *episodeAdamId
 @property  NSString *stationUuid
 @property  NSString *requesterDsid

  // instance methods
  -[MTURLCommandRequest copyWithZone:]
  -[MTURLCommandRequest .cxx_destruct]
  -[MTURLCommandRequest commandType]
  -[MTURLCommandRequest urlString]
  -[MTURLCommandRequest initWithURLString:]
  -[MTURLCommandRequest podcastUuid]
  -[MTURLCommandRequest episodeUuid]
  -[MTURLCommandRequest _loadQueryParameterValuesFromString:]
  -[MTURLCommandRequest _lookupPodcastUuidIfNecessaryFromURLString:]
  -[MTURLCommandRequest _lookupEpisodeUuidIfNecessaryFromURLString:]
  -[MTURLCommandRequest copyWithPlayReason:]
  -[MTURLCommandRequest playQueueType]
  -[MTURLCommandRequest playReason]
  -[MTURLCommandRequest playbackOrder]
  -[MTURLCommandRequest playContext]
  -[MTURLCommandRequest playContextSortType]
  -[MTURLCommandRequest podcastFeedUrl]
  -[MTURLCommandRequest podcastAdamId]
  -[MTURLCommandRequest episodeAdamId]
  -[MTURLCommandRequest stationUuid]
  -[MTURLCommandRequest requesterDsid]


MTRestrictionsUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTRestrictionsUtil didDisplayExplicitRestrictionAlertOfType:]
  +[MTRestrictionsUtil isExplicitContentAllowed]
  +[MTRestrictionsUtil reloadSettings]
  +[MTRestrictionsUtil settingsURL]
  +[MTRestrictionsUtil _fetchIsExplicitContentAllowed]
  +[MTRestrictionsUtil settingsURLString]
  +[MTRestrictionsUtil _isActiveAccountAllowedToUpdateRestrictions]
  +[MTRestrictionsUtil _userDefaultsKeyForExplicitRestrictionAlertType:]
  +[MTRestrictionsUtil explicitRestrictionAlertTypeForTypeString:]
  +[MTRestrictionsUtil _isRestrictedByAdministrator]
  +[MTRestrictionsUtil _mustResolveInScreenTimePreferences]
  +[MTRestrictionsUtil _setAllowExplicitContent]


PODataSource : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *podcastCollectionsByUUID
 @property  NSMutableDictionary *podcastStationsByUUID
 @property  NSMutableArray *podcastRevisions
 @property  NSString *databaseUUID
 @property  NSString *firstRevisionUUID
 @property  NSDate *podcastDataPlistLastModified
 @property  NSDate *revisionsDataPlistLastModified
 @property  BOOL constructingData

  // class methods
  +[PODataSource sharedInstance]

  // instance methods
  -[PODataSource init]
  -[PODataSource .cxx_destruct]
  -[PODataSource validity]
  -[PODataSource podcastCollections]
  -[PODataSource podcastStations]
  -[PODataSource containerURL]
  -[PODataSource setDatabaseUUID:]
  -[PODataSource databaseUUID]
  -[PODataSource isPodcastsInstalled]
  -[PODataSource setPodcastCollectionsByUUID:]
  -[PODataSource setPodcastStationsByUUID:]
  -[PODataSource setPodcastRevisions:]
  -[PODataSource initializeDataFromDictionary]
  -[PODataSource revisionPlistURL]
  -[PODataSource revisionsDataPlistLastModified]
  -[PODataSource dbPlistURL]
  -[PODataSource podcastDataPlistLastModified]
  -[PODataSource isPodcastDataStale]
  -[PODataSource constructingData]
  -[PODataSource firstRevisionUUID]
  -[PODataSource isPodcastRevisionDataStale]
  -[PODataSource setConstructingData:]
  -[PODataSource arrayFromPlistURL:]
  -[PODataSource constructModelObjectsFromDictionaries:withIndexPath:modelObjectClass:]
  -[PODataSource setPodcastDataPlistLastModified:]
  -[PODataSource setFirstRevisionUUID:]
  -[PODataSource constructRevisionsFromDictionary:isPodcastCollections:]
  -[PODataSource setRevisionsDataPlistLastModified:]
  -[PODataSource constructRevisionFromDictionary:isPodcastCollections:isDelete:]
  -[PODataSource constructModelObjectOfClass:fromDictionary:]
  -[PODataSource podcastModelObjectsInArray:matchingString:maxResults:]
  -[PODataSource podcastCollectionsByUUID]
  -[PODataSource podcastStationsByUUID]
  -[PODataSource podcastRevisions]
  -[PODataSource podcastCollectionsMatchingString:maxResults:]
  -[PODataSource podcastStationsMatchingString:maxResults:]
  -[PODataSource podcastCollectionWithUUID:]
  -[PODataSource podcastStationWithUUID:]
  -[PODataSource podcastRevisionsSinceAnchor:]
  -[PODataSource domainObjectWithUUID:]
  -[PODataSource podcastsIndexPath]


MTPodcastUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTPodcastUtil stringForMostRecentEpisodeCount:]
  +[MTPodcastUtil stringForUnplayedEpisodeCount:titleCase:]
  +[MTPodcastUtil stringForUnplayedEpisodeCount:]
  +[MTPodcastUtil stringForSavedEpisodeCount:]
  +[MTPodcastUtil stringForNewEpisodeCount:titleCase:]
  +[MTPodcastUtil stringForATVFeedLastChangedForDate:]
  +[MTPodcastUtil stringForEpisodeCount:]
  +[MTPodcastUtil stringForUnplayedEpisodeCount:withSavedEpisodeCount:]
  +[MTPodcastUtil stringForNewEpisodeCount:]
  +[MTPodcastUtil stringForEpisodesInFeedCount:]
  +[MTPodcastUtil stringForATVFeedLastChangedForPodcast:]
  +[MTPodcastUtil episodeCountForPredicate:]
  +[MTPodcastUtil episodeTitlesForPredicate:]
  +[MTPodcastUtil countOfUnplayedEpisodesForPodcastUuid:]


MTShowTypeUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTShowTypeUtil showTypeFromString:]
  +[MTShowTypeUtil defaultShowType]
  +[MTShowTypeUtil applySettings:podcast:]


MTShowSettings : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL episodeOrderAscending
 @property  int downloadEpisodes
 @property  long long deletePlayedEpisodes
 @property  long long episodeLimit
 @property  long long updateInterval

  // instance methods
  -[MTShowSettings updateInterval]
  -[MTShowSettings setUpdateInterval:]
  -[MTShowSettings episodeLimit]
  -[MTShowSettings setEpisodeLimit:]
  -[MTShowSettings deletePlayedEpisodes]
  -[MTShowSettings episodeOrderAscending]
  -[MTShowSettings downloadEpisodes]
  -[MTShowSettings setDeletePlayedEpisodes:]
  -[MTShowSettings setEpisodeOrderAscending:]
  -[MTShowSettings setDownloadEpisodes:]


MTShowSettingsFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTShowSettingsFactory settingsForShowTypeEpisodic]
  +[MTShowSettingsFactory settingsForShowTypeSerial]
  +[MTShowSettingsFactory settingsForShowTypeTimely]
  +[MTShowSettingsFactory settingsForShowTypeDefault]
  +[MTShowSettingsFactory defaultSettingsForShowType:]


MTEpisodeLookupUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTEpisodeLookupUtil findEpisodeWithRequest:]
  +[MTEpisodeLookupUtil findEpisodeWithRequest:context:]
  +[MTEpisodeLookupUtil _episodeMatchFromPredicate:]
  +[MTEpisodeLookupUtil _episodeMatchFromPredicate:context:]
  +[MTEpisodeLookupUtil findPodcastWithFeedUrl:]
  +[MTEpisodeLookupUtil _podcastMatchFromPredicate:]
  +[MTEpisodeLookupUtil _podcastMatchFromPredicate:context:]
  +[MTEpisodeLookupUtil _entityForFetchRequest:context:]
  +[MTEpisodeLookupUtil findEpisodeFromModelObject:]
  +[MTEpisodeLookupUtil _entityForFetchRequest:]


MTEpisodeLookupRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *uuid
 @property  long long storeTrackId
 @property  long long persistentID
 @property  NSString *episodeGuid
 @property  NSString *podcastFeedUrl
 @property  NSString *episodeTitle
 @property  NSString *podcastTitle
 @property  NSString *streamUrl

  // instance methods
  -[MTEpisodeLookupRequest streamUrl]
  -[MTEpisodeLookupRequest setPersistentID:]
  -[MTEpisodeLookupRequest uuid]
  -[MTEpisodeLookupRequest .cxx_destruct]
  -[MTEpisodeLookupRequest setStreamUrl:]
  -[MTEpisodeLookupRequest setUuid:]
  -[MTEpisodeLookupRequest podcastTitle]
  -[MTEpisodeLookupRequest persistentID]
  -[MTEpisodeLookupRequest podcastFeedUrl]
  -[MTEpisodeLookupRequest setStoreTrackId:]
  -[MTEpisodeLookupRequest storeTrackId]
  -[MTEpisodeLookupRequest setEpisodeGuid:]
  -[MTEpisodeLookupRequest setEpisodeTitle:]
  -[MTEpisodeLookupRequest setPodcastTitle:]
  -[MTEpisodeLookupRequest setPodcastFeedUrl:]
  -[MTEpisodeLookupRequest episodeGuid]
  -[MTEpisodeLookupRequest episodeTitle]


MTMediaTask : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSMediaTask *mediaTask
 @property  NSArray *identifiers
 @property  BOOL charts

  // instance methods
  -[MTMediaTask identifiers]
  -[MTMediaTask setIdentifiers:]
  -[MTMediaTask charts]
  -[MTMediaTask initWithType:]
  -[MTMediaTask .cxx_destruct]
  -[MTMediaTask perform:]
  -[MTMediaTask setCharts:]
  -[MTMediaTask mediaTask]
  -[MTMediaTask setMediaTask:]


MTMediaContentSource : NSObject /usr/lib/libSystem.B.dylib

MTMediaContentSourceiOSMusicLibrary : MTMediaContentSource
 @property  BOOL iTunesMatchEnabled

  // class methods
  +[MTMediaContentSourceiOSMusicLibrary sharedInstance]

  // instance methods
  -[MTMediaContentSourceiOSMusicLibrary determineiTunesMatchEnabledWithCompletion:]
  -[MTMediaContentSourceiOSMusicLibrary iTunesMatchEnabled]


MTSyncUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTSyncUtil setSyncDirtyFlag:]
  +[MTSyncUtil syncDirtyFlag]
  +[MTSyncUtil setPlaylistSyncDirtyFlag:]
  +[MTSyncUtil playlistSyncDirtyFlag]
  +[MTSyncUtil isSubscriptionSyncEnabled]
  +[MTSyncUtil podcastsDomainVersion]
  +[MTSyncUtil setPodcastsDomainVersion:]


MTAllPropertyChangesQueryObserver : MTBaseQueryObserver <NSFetchedResultsControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTAllPropertyChangesQueryObserver controllerDidChangeContent:]
  -[MTAllPropertyChangesQueryObserver startObserving]
  -[MTAllPropertyChangesQueryObserver notifyObservers]
  -[MTAllPropertyChangesQueryObserver addResultsChangedHandler:]


POPodcastModelObject : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *uuid
 @property  NSString *title
 @property  NSString *feedUrl
 @property  NSIndexPath *indexPath
 @property  SAMPCollection *SAMPCollection

  // class methods
  +[POPodcastModelObject uriScheme]
  +[POPodcastModelObject SAMPClass]

  // instance methods
  -[POPodcastModelObject setIndexPath:]
  -[POPodcastModelObject uuid]
  -[POPodcastModelObject .cxx_destruct]
  -[POPodcastModelObject setUuid:]
  -[POPodcastModelObject setTitle:]
  -[POPodcastModelObject title]
  -[POPodcastModelObject feedUrl]
  -[POPodcastModelObject indexPath]
  -[POPodcastModelObject setFeedUrl:]
  -[POPodcastModelObject SAMPCollection]


MTLibraryQuery : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *podcastResults
 @property  NSArray *episodeResults
 @property  NSPredicate *podcastPredicate
 @property  NSPredicate *episodePredicate
 @property  NSArray *podcastSortDescriptors
 @property  NSArray *episodeSortDescriptors
 @property  @? action
 @property  long long fetchLimit
 @property  BOOL active

  // instance methods
  -[MTLibraryQuery fetchLimit]
  -[MTLibraryQuery setFetchLimit:]
  -[MTLibraryQuery init]
  -[MTLibraryQuery setAction:]
  -[MTLibraryQuery .cxx_destruct]
  -[MTLibraryQuery action]
  -[MTLibraryQuery setActive:]
  -[MTLibraryQuery isActive]
  -[MTLibraryQuery podcastPredicate]
  -[MTLibraryQuery setPodcastPredicate:]
  -[MTLibraryQuery setEpisodePredicate:]
  -[MTLibraryQuery runQuery]
  -[MTLibraryQuery runQueryInContext:]
  -[MTLibraryQuery setPodcastResults:]
  -[MTLibraryQuery setEpisodeResults:]
  -[MTLibraryQuery runQueryWithPodcastPredicate:episodePredicate:]
  -[MTLibraryQuery podcastResults]
  -[MTLibraryQuery episodeResults]
  -[MTLibraryQuery episodePredicate]
  -[MTLibraryQuery podcastSortDescriptors]
  -[MTLibraryQuery setPodcastSortDescriptors:]
  -[MTLibraryQuery episodeSortDescriptors]
  -[MTLibraryQuery setEpisodeSortDescriptors:]


MTTextQuery : MTLibraryQuery
  // instance methods
  -[MTTextQuery runQueryWithText:]
  -[MTTextQuery titleForPodcastUuid:]


NMTDownloadsUtility : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[NMTDownloadsUtility fetchRequestForDownloadableEpisodesWithPodcast:userEpisodesPredicate:]


MTUuidQueryObserver : MTBaseQueryObserver
 @property  NSSet *uuidSet
 @property  NSArray *uuidOrder

  // instance methods
  -[MTUuidQueryObserver uuidSet]
  -[MTUuidQueryObserver .cxx_destruct]
  -[MTUuidQueryObserver setUuidSet:]
  -[MTUuidQueryObserver controllerDidChangeContent:]
  -[MTUuidQueryObserver startObserving]
  -[MTUuidQueryObserver notifyObservers]
  -[MTUuidQueryObserver addResultsChangedHandler:]
  -[MTUuidQueryObserver uuidOrder]
  -[MTUuidQueryObserver setUuidOrder:]


MTDBUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTDBUtil isSupportedUrlString:]


MTStoreIdentifier : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *storeIdentifier
 @property  NSString *feedUrl

  // class methods
  +[MTStoreIdentifier isEmpty:]
  +[MTStoreIdentifier adamIDFromSerpentId:]
  +[MTStoreIdentifier serpentIdFromAdamId:]
  +[MTStoreIdentifier isEmptyNumber:]
  +[MTStoreIdentifier adamIdNumberFromSerpentIdNumber:]
  +[MTStoreIdentifier serpentIdNumberFromAdamIdNumber:]
  +[MTStoreIdentifier podcastPredicateForIdentifer:]
  +[MTStoreIdentifier isNotEmpty:]
  +[MTStoreIdentifier identifierWithFeedUrl:]
  +[MTStoreIdentifier identifierWithFeedUrl:storeIdentifier:]
  +[MTStoreIdentifier episodePredicateForIdentifier:]
  +[MTStoreIdentifier adamIDListFromSerpentIdList:]
  +[MTStoreIdentifier adamIdNumberFromStoreId:]
  +[MTStoreIdentifier serpentIdListFromAdamIDList:]
  +[MTStoreIdentifier serpentIdNumberFromStoreId:]
  +[MTStoreIdentifier isNotEmptyNumber:]

  // instance methods
  -[MTStoreIdentifier storeIdentifier]
  -[MTStoreIdentifier .cxx_destruct]
  -[MTStoreIdentifier feedUrl]
  -[MTStoreIdentifier setStoreIdentifier:]
  -[MTStoreIdentifier setFeedUrl:]
  -[MTStoreIdentifier initWithFeedUrl:storeIdentifier:]
  -[MTStoreIdentifier initWithFeedUrl:]


MTShowsPreferencesDataStore : NSObject /usr/lib/libSystem.B.dylib
 @property  long long sortOrder

  // class methods
  +[MTShowsPreferencesDataStore sharedInstance]
  +[MTShowsPreferencesDataStore allocWithZone:]
  +[MTShowsPreferencesDataStore sortDescriptorsForSortType:]

  // instance methods
  -[MTShowsPreferencesDataStore sortOrder]
  -[MTShowsPreferencesDataStore setSortOrder:]
  -[MTShowsPreferencesDataStore sortDescriptors]
  -[MTShowsPreferencesDataStore _sortTypeForString:]
  -[MTShowsPreferencesDataStore _stringForSortType:]


MTDictionaryDiff : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *callbacks
 @property  NSDictionary *dictionary
 @property  NSSet *properties

  // instance methods
  -[MTDictionaryDiff initWithProperties:]
  -[MTDictionaryDiff init]
  -[MTDictionaryDiff setCallbacks:]
  -[MTDictionaryDiff addCallback:]
  -[MTDictionaryDiff .cxx_destruct]
  -[MTDictionaryDiff setDictionary:]
  -[MTDictionaryDiff setProperties:]
  -[MTDictionaryDiff dictionary]
  -[MTDictionaryDiff callbacks]
  -[MTDictionaryDiff properties]


MTSingleton : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTSingleton sharedInstance]
  +[MTSingleton copyWithZone:]
  +[MTSingleton allocWithZone:]

  // instance methods
  -[MTSingleton copy]


MTSingletonHolder : NSObject /usr/lib/libSystem.B.dylib
 @property  id instance

  // instance methods
  -[MTSingletonHolder setInstance:]
  -[MTSingletonHolder instance]
  -[MTSingletonHolder .cxx_destruct]


MTAccountController : MTSingleton
 @property  ACAccount *_activeAccount
 @property  BOOL hasFetchedInitialAccount
 @property  ACAccount *accountOverride

  // class methods
  +[MTAccountController iTunesAccountDidChangeForACAccountNotification:]

  // instance methods
  -[MTAccountController init]
  -[MTAccountController dealloc]
  -[MTAccountController .cxx_destruct]
  -[MTAccountController activeAccount]
  -[MTAccountController setActiveAccount:]
  -[MTAccountController _activeAccount]
  -[MTAccountController _updateActiveAccount]
  -[MTAccountController activeDsid]
  -[MTAccountController didChangeStoreAccount:]
  -[MTAccountController _activeAccountBlocking]
  -[MTAccountController setHasFetchedInitialAccount:]
  -[MTAccountController activeStorefront]
  -[MTAccountController activeEmail]
  -[MTAccountController activeFullName]
  -[MTAccountController isUserLoggedIn]
  -[MTAccountController activeAccountIsManagedAppleID]
  -[MTAccountController hasFetchedInitialAccount]
  -[MTAccountController accountOverride]
  -[MTAccountController setAccountOverride:]
  -[MTAccountController set_activeAccount:]


POPodcastStation : POPodcastModelObject
  // class methods
  +[POPodcastStation uriScheme]
  +[POPodcastStation SAMPClass]


MTExtensionPlaybackController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *magicMomentCompletionHandlers

  // class methods
  +[MTExtensionPlaybackController setQueueWithPlaybackRequestIdentifier:startPlayback:assetInfo:requesterSharedUserId:sharedUserIdFromPlayableITunesAccount:completion:]
  +[MTExtensionPlaybackController setQueueWithPlaybackRequestIdentifier:startPlayback:assetInfo:requesterSharedUserId:sharedUserIdFromPlayableITunesAccount:mrCompletion:]
  +[MTExtensionPlaybackController setQueueWithPlaybackRequestIdentifier:assetInfo:requesterSharedUserId:sharedUserIdFromPlayableITunesAccount:mrCompletion:]
  +[MTExtensionPlaybackController _setPlaybackQueueWithIdentifier:startPlayback:assetInfo:requesterSharedUserId:sharedUserIdFromPlayableITunesAccount:playerID:mrCompletion:]
  +[MTExtensionPlaybackController getNowPlayingInfoForMagicMomentInfoCenterWithCompletion:]
  +[MTExtensionPlaybackController setQueueWithPlaybackRequestIdentifier:completion:]
  +[MTExtensionPlaybackController setQueueWithPlaybackRequestIdentifier:mrCompletion:]

  // instance methods
  -[MTExtensionPlaybackController init]
  -[MTExtensionPlaybackController .cxx_destruct]
  -[MTExtensionPlaybackController _playbackQueueChangedNotification:]
  -[MTExtensionPlaybackController magicMomentCompletionHandlers]
  -[MTExtensionPlaybackController _getNowPlayingInfoAndCallPendingCompletions]
  -[MTExtensionPlaybackController populateMagicMomentInfoCenterWithPlaybackRequestIdentifier:mrCompletion:]
  -[MTExtensionPlaybackController setMagicMomentCompletionHandlers:]


MTRecencyUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTRecencyUtil upNextForPodcastUuid:excludeExplicit:excludeStreaming:ctx:]
  +[MTRecencyUtil _upNextForPodcast:serial:excludeExplicit:excludeStreaming:ctx:]
  +[MTRecencyUtil _nextEpisodeForUnplayedPodcast:serial:restrictToLibrary:excludeExplicit:excludeStreaming:ctx:]
  +[MTRecencyUtil _lastDatePlayedIfNotFutureDate:podcast:]
  +[MTRecencyUtil upNextForPodcastUuid:ctx:]
  +[MTRecencyUtil episodesForListenNowWithContext:limit:]


MTDefaultsChangeNotifier : MTDictionaryDiff
 @property  BOOL running
 @property  NSUserDefaults *defaults

  // instance methods
  -[MTDefaultsChangeNotifier defaults]
  -[MTDefaultsChangeNotifier dealloc]
  -[MTDefaultsChangeNotifier .cxx_destruct]
  -[MTDefaultsChangeNotifier stop]
  -[MTDefaultsChangeNotifier setDefaults:]
  -[MTDefaultsChangeNotifier observeValueForKeyPath:ofObject:change:context:]
  -[MTDefaultsChangeNotifier isRunning]
  -[MTDefaultsChangeNotifier setRunning:]
  -[MTDefaultsChangeNotifier start]
  -[MTDefaultsChangeNotifier initWithProperties:defaults:]
  -[MTDefaultsChangeNotifier _defaultsChanged]


MTDemoUtility : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTDemoUtility hasDemoRecentlyPlayedContent]
  +[MTDemoUtility demoRecentlyPlayedContent]
  +[MTDemoUtility hasDemoListenNowData]
  +[MTDemoUtility demoListenNowData]
  +[MTDemoUtility demoSortDescriptorsForRecentlyPlayed]
  +[MTDemoUtility demoSortDescriptorsForListenNow]
  +[MTDemoUtility _dataArrayForString:]
  +[MTDemoUtility _dataArrayStringsForString:]
  +[MTDemoUtility demoListenNowReasonForEpisodeStoreTrackId:]


MTLibrary : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL iTunesMatchEnabled
 @property  BOOL subscriptionSyncEnabled

  // class methods
  +[MTLibrary sharedInstance]
  +[MTLibrary initialize]
  +[MTLibrary allocWithZone:]
  +[MTLibrary freeSpace]
  +[MTLibrary isSupportedUrlString:]

  // instance methods
  -[MTLibrary init]
  -[MTLibrary .cxx_destruct]
  -[MTLibrary copy]
  -[MTLibrary importContext]
  -[MTLibrary mainQueueContext]
  -[MTLibrary privateQueueContext]
  -[MTLibrary mainOrPrivateContext]
  -[MTLibrary carPlayContext]
  -[MTLibrary storeContext]
  -[MTLibrary resetableImportContext]
  -[MTLibrary iTunesMatchEnabled]
  -[MTLibrary isSubscriptionSyncEnabled]
  -[MTLibrary setITunesMatchEnabled:]
  -[MTLibrary updateiTunesPlaylistForiTunesMatchState]
  -[MTLibrary _userDefaultsDidChange:]
  -[MTLibrary lastUpdatedDateString]
  -[MTLibrary enableSubscriptionOnPodcastUuid:setSyncDirty:]
  -[MTLibrary enableSubscriptionOnPodcastUuid:setSyncDirty:ctx:]
  -[MTLibrary disableSubscriptionOnPodcastUuid:setSyncDirty:]
  -[MTLibrary disableSubscriptionOnPodcastUuid:setSyncDirty:ctx:]
  -[MTLibrary isSubscribedToPodcastWithUuid:]
  -[MTLibrary deletePodcastWithUuid:shouldSave:]
  -[MTLibrary _deletePodcastWithUuid:forced:ctx:]
  -[MTLibrary _deleteHiddenPodcasts]
  -[MTLibrary _deletePodcastWithId:ctx:]
  -[MTLibrary deletePlaylist:]
  -[MTLibrary _deletePodcast:ctx:]
  -[MTLibrary _deleteEpisodeUuids:forced:save:]
  -[MTLibrary _deleteEpisodes:forced:save:]
  -[MTLibrary _deleteEpisodeUuids:forced:]
  -[MTLibrary markPlaylistsForUpdateForPodcastUuids:]
  -[MTLibrary setPlayState:manually:forUserActionOnEpisode:saveChanges:]
  -[MTLibrary setPlayed:manually:forUserActionOnEpisode:saveChanges:]
  -[MTLibrary setPlayState:fromContextActions:manually:forUserActionOnEpisode:saveChanges:]
  -[MTLibrary lastUpdatedDateAttributedString]
  -[MTLibrary finishPlayingEpisodeUuid:]
  -[MTLibrary enableSubscriptionOnPodcastUuid:]
  -[MTLibrary disableSubscriptionOnPodcastUuid:]
  -[MTLibrary isSubscribedToPodcastWithFeedUrl:]
  -[MTLibrary deletePodcastWithUuid:]
  -[MTLibrary deleteFromSyncPodcastsWithUuids:]
  -[MTLibrary deleteHiddenPodcasts]
  -[MTLibrary deleteHiddenPodcastsSynchronously]
  -[MTLibrary deleteStationWithUuid:]
  -[MTLibrary deleteEpisodeUuids:]
  -[MTLibrary deleteEpisodeUuids:forced:]
  -[MTLibrary deleteEpisodes:]
  -[MTLibrary deleteOrphanedEpisodes]
  -[MTLibrary deleteAllPodcasts]
  -[MTLibrary deleteAllTopLevelStationsExcludingFolders]
  -[MTLibrary setStationsOrder:]
  -[MTLibrary setPodcastsOrder:]
  -[MTLibrary setEpisodesOrder:forStation:]
  -[MTLibrary setStationShowGroupOrder:forStation:]
  -[MTLibrary markAsSaved:forEpisodeUuids:]
  -[MTLibrary setPlayed:manually:forUserActionOnEpisodeUuid:]
  -[MTLibrary setPlayState:manually:forUserActionOnEpisodeUuid:]
  -[MTLibrary canDeleteEpisode:]


MTGenre : NSObject /usr/lib/libSystem.B.dylib <NSCoding>
 @property  NSString *name
 @property  NSString *identifier
 @property  NSArray *children

  // instance methods
  -[MTGenre copyWithZone:]
  -[MTGenre children]
  -[MTGenre .cxx_destruct]
  -[MTGenre name]
  -[MTGenre setIdentifier:]
  -[MTGenre encodeWithCoder:]
  -[MTGenre identifier]
  -[MTGenre setChildren:]
  -[MTGenre setName:]
  -[MTGenre initWithCoder:]


PKStoreId : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSNumber *numberValue
 @property  NSString *stringValue
 @property  long long longValue

  // class methods
  +[PKStoreId supportsSecureCoding]
  +[PKStoreId setSupportsSecureCoding:]

  // instance methods
  -[PKStoreId longValue]
  -[PKStoreId init]
  -[PKStoreId initWithString:]
  -[PKStoreId initWithInteger:]
  -[PKStoreId .cxx_destruct]
  -[PKStoreId numberValue]
  -[PKStoreId encodeWithCoder:]
  -[PKStoreId initWithNumber:]
  -[PKStoreId initWithCoder:]
  -[PKStoreId stringValue]


PKShowStoreId : PKStoreId
  // instance methods
  -[PKShowStoreId initWithString:]
  -[PKShowStoreId initWithInteger:]
  -[PKShowStoreId initWithNumber:]


PKEpisodeStoreId : PKStoreId
  // instance methods
  -[PKEpisodeStoreId initWithString:]
  -[PKEpisodeStoreId initWithInteger:]
  -[PKEpisodeStoreId initWithNumber:]


_TtC11PodcastsKit15CoreDataLibrary : NSObject /usr/lib/libSystem.B.dylib <PKLibrary>
 @property  <PKSubscriptionController> *subscriptionController

  // instance methods
  -[_TtC11PodcastsKit15CoreDataLibrary subscriptionController]
  -[_TtC11PodcastsKit15CoreDataLibrary init]
  -[_TtC11PodcastsKit15CoreDataLibrary .cxx_destruct]
  -[_TtC11PodcastsKit15CoreDataLibrary setSubscriptionController:]
  -[_TtC11PodcastsKit15CoreDataLibrary fetchMatchesFor:limit:resultsHandler:]
  -[_TtC11PodcastsKit15CoreDataLibrary fetchAllShowsWithResultsHandler:]


PKDurationSnapshot : NSObject /usr/lib/libSystem.B.dylib
 @property  double snapshotTime
 @property  float rate
 @property  double elapsedDuration
 @property  double duration

  // instance methods
  -[PKDurationSnapshot rate]
  -[PKDurationSnapshot init]
  -[PKDurationSnapshot duration]
  -[PKDurationSnapshot elapsedDuration]
  -[PKDurationSnapshot snapshotTime]
  -[PKDurationSnapshot initWithSnapshotTime:rate:elapsedDuration:duration:]


PKEpisode : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  BOOL isInLibrary
 @property  NSString *title
 @property  NSDate *releaseDate
 @property  BOOL isExplicit
 @property  double duration
 @property  PKEpisodeStoreId *storeId
 @property  PKShow *show
 @property  NSString *guid
 @property  NSString *uuid
 @property  NSString *streamUrl
 @property  NSString *episodeUuid

  // class methods
  +[PKEpisode supportsSecureCoding]
  +[PKEpisode setSupportsSecureCoding:]
  +[PKEpisode mediaTaskType]
  +[PKEpisode contentFrom:]
  +[PKEpisode itemFrom:]
  +[PKEpisode fetchEpisodeFrom:completion:]

  // instance methods
  -[PKEpisode releaseDate]
  -[PKEpisode init]
  -[PKEpisode storeId]
  -[PKEpisode guid]
  -[PKEpisode streamUrl]
  -[PKEpisode uuid]
  -[PKEpisode .cxx_destruct]
  -[PKEpisode setGuid:]
  -[PKEpisode setUuid:]
  -[PKEpisode encodeWithCoder:]
  -[PKEpisode title]
  -[PKEpisode show]
  -[PKEpisode isExplicit]
  -[PKEpisode initWithCoder:]
  -[PKEpisode duration]
  -[PKEpisode setEpisodeUuid:]
  -[PKEpisode episodeUuid]
  -[PKEpisode initFrom:]
  -[PKEpisode isInLibrary]
  -[PKEpisode updateForDatabaseMatch]
  -[PKEpisode initWithTitle:releaseDate:isExplicit:duration:storeId:show:guid:uuid:streamUrl:]
  -[PKEpisode lookupEpisode]


_TtC11PodcastsKit8Database : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib

PKSearchResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *episodes
 @property  NSArray *shows

  // instance methods
  -[PKSearchResult init]
  -[PKSearchResult shows]
  -[PKSearchResult .cxx_destruct]
  -[PKSearchResult episodes]
  -[PKSearchResult initWithEpisodes:shows:]


_TtC11PodcastsKit19GenericPlayPodcasts : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib

PKSiriContext : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[PKSiriContext init]
  -[PKSiriContext .cxx_destruct]


_TtC11PodcastsKit33MediaRemoteSubscriptionController : NSObject /usr/lib/libSystem.B.dylib <PKSubscriptionController>
  // instance methods
  -[_TtC11PodcastsKit33MediaRemoteSubscriptionController init]
  -[_TtC11PodcastsKit33MediaRemoteSubscriptionController .cxx_destruct]
  -[_TtC11PodcastsKit33MediaRemoteSubscriptionController subscribeToStoreId:completion:]
  -[_TtC11PodcastsKit33MediaRemoteSubscriptionController subscribeToStoreId:siriContext:completion:]
  -[_TtC11PodcastsKit33MediaRemoteSubscriptionController subscribeToFeedUrl:completion:]


PKStation : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[PKStation init]
  -[PKStation .cxx_destruct]


PKShow : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  BOOL isInLibrary
 @property  BOOL isSubscribed
 @property  NSString *title
 @property  NSString *descriptionText
 @property  PKShowStoreId *storeId

  // class methods
  +[PKShow supportsSecureCoding]
  +[PKShow setSupportsSecureCoding:]

  // instance methods
  -[PKShow init]
  -[PKShow storeId]
  -[PKShow descriptionText]
  -[PKShow .cxx_destruct]
  -[PKShow encodeWithCoder:]
  -[PKShow title]
  -[PKShow isSubscribed]
  -[PKShow initWithCoder:]
  -[PKShow isInLibrary]
  -[PKShow artworkUrlFor:]


_TtC11PodcastsKit7Catalog : NSObject /usr/lib/libSystem.B.dylib <PKCatalog>
  // instance methods
  -[_TtC11PodcastsKit7Catalog init]
  -[_TtC11PodcastsKit7Catalog fetchEpisodesWithStoreIds:resultsHandler:]
  -[_TtC11PodcastsKit7Catalog fetchShowsWithStoreIds:resultsHandler:]


PKPlayerManifest : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PKPlayerManifest manifestForEpisode:]
  +[PKPlayerManifest manifestForShow:]
  +[PKPlayerManifest manifestForShowUuid:siriContext:]
  +[PKPlayerManifest manifestForPlayMyPodcastsWithSiriContext:]
  +[PKPlayerManifest manifestForEpisodeStoreId:siriContext:]
  +[PKPlayerManifest manifestForStationId:siriContext:]
  +[PKPlayerManifest manifestForEpisodeStoreId:assetInfo:]
  +[PKPlayerManifest manifestForShowStoreId:siriContext:]
  +[PKPlayerManifest manifestForShowStoreId:assetInfo:]

  // instance methods
  -[PKPlayerManifest init]
  -[PKPlayerManifest .cxx_destruct]


PKProvider : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PKProvider createLibraryWithCompletion:]
  +[PKProvider createCatalogWithCompletion:]
  +[PKProvider createPlayerControllerWithCompletion:]

  // instance methods
  -[PKProvider init]


_TtC11PodcastsKit21ProxyPlayerController : NSObject /usr/lib/libSystem.B.dylib <PKPlayerController>
 @property  PKEpisode *currentEpisode
 @property  PKDurationSnapshot *durationSnapshot
 @property  double forwardJumpDuration
 @property  double backwardJumpDuration
 @property  @? playerResponseHandler

  // instance methods
  -[_TtC11PodcastsKit21ProxyPlayerController pauseWithCompletion:]
  -[_TtC11PodcastsKit21ProxyPlayerController init]
  -[_TtC11PodcastsKit21ProxyPlayerController .cxx_destruct]
  -[_TtC11PodcastsKit21ProxyPlayerController currentEpisode]
  -[_TtC11PodcastsKit21ProxyPlayerController durationSnapshot]
  -[_TtC11PodcastsKit21ProxyPlayerController startPlayback:completion:]
  -[_TtC11PodcastsKit21ProxyPlayerController playWithCompletion:]
  -[_TtC11PodcastsKit21ProxyPlayerController seekToPositionWithElapsedTime:completion:]
  -[_TtC11PodcastsKit21ProxyPlayerController jumpForwardsWithCompletion:]
  -[_TtC11PodcastsKit21ProxyPlayerController jumpBackwardsWithCompletion:]
  -[_TtC11PodcastsKit21ProxyPlayerController forwardJumpDuration]
  -[_TtC11PodcastsKit21ProxyPlayerController backwardJumpDuration]
  -[_TtC11PodcastsKit21ProxyPlayerController playerResponseHandler]
  -[_TtC11PodcastsKit21ProxyPlayerController setPlayerResponseHandler:]
  -[_TtC11PodcastsKit21ProxyPlayerController setManifest:startPlayback:completion:]
  -[_TtC11PodcastsKit21ProxyPlayerController setCurrentEpisode:]


MTPodcastPlaylistSettings(NSPredicate)
	// class methods
	+[MTPodcastPlaylistSettings(NSPredicate) predicateForPlaylistSettingsUuid:]

	// instance methods
	-[MTPodcastPlaylistSettings(NSPredicate) needsUpdate]
	-[MTPodcastPlaylistSettings(NSPredicate) setNeedsUpdate:]

MTPodcast(NSPredicate)
	// class methods
	+[MTPodcast(NSPredicate) predicateForAllPodcasts]
	+[MTPodcast(NSPredicate) predicateForOrphanedFromCloud:]
	+[MTPodcast(NSPredicate) predicateForAutoDownloadType:]
	+[MTPodcast(NSPredicate) predicateForUpdateInterval:]
	+[MTPodcast(NSPredicate) isRedirectURL:]
	+[MTPodcast(NSPredicate) storeCollectionIdForRedirectURL:]
	+[MTPodcast(NSPredicate) predicateForPodcastStoreId:]
	+[MTPodcast(NSPredicate) userDefaultPropertiesAffectingPredicates]
	+[MTPodcast(NSPredicate) predicateForSubscribed:]
	+[MTPodcast(NSPredicate) predicateForSubscribedAndNotHidden:]
	+[MTPodcast(NSPredicate) predicateForSyncablePodcasts]
	+[MTPodcast(NSPredicate) predicateForHasBeenSynced:]
	+[MTPodcast(NSPredicate) predicateForAutoDownloadEnabled]
	+[MTPodcast(NSPredicate) predicateForUpdatablePodcasts]
	+[MTPodcast(NSPredicate) predicateForPodcastWithFeedUrl:]
	+[MTPodcast(NSPredicate) predicateForPodcastWithTitle:]
	+[MTPodcast(NSPredicate) predicateForPodcastUuids:]
	+[MTPodcast(NSPredicate) predicateForPodcastUUID:]
	+[MTPodcast(NSPredicate) predicateForPodcastWithPodcastPID:]
	+[MTPodcast(NSPredicate) prepareForPlatform:]
	+[MTPodcast(NSPredicate) sortDescriptorsForNewestToOldest:]
	+[MTPodcast(NSPredicate) podcastUuidForFeedUrlString:ctx:]
	+[MTPodcast(NSPredicate) latestEpisodeUuidForPodcastUuid:ctx:]
	+[MTPodcast(NSPredicate) allPossibleEpisodeListSortOrderProperties]
	+[MTPodcast(NSPredicate) sortDescriptorsForOldestOnTop]
	+[MTPodcast(NSPredicate) sortDescriptorsForNewestOnTop]
	+[MTPodcast(NSPredicate) podcastUuidForFeedUrl:ctx:]
	+[MTPodcast(NSPredicate) podcastUuidForEpisodeUuid:ctx:]
	+[MTPodcast(NSPredicate) sortDescriptorsForDateAdded]
	+[MTPodcast(NSPredicate) sortDescriptorsForRecentlyUpdated]
	+[MTPodcast(NSPredicate) sortDescriptorsForManualOrder]
	+[MTPodcast(NSPredicate) sortDescriptorsForTitle]
	+[MTPodcast(NSPredicate) sortDescriptorsForAllPodcasts]
	+[MTPodcast(NSPredicate) sortDescriptorsForLastDatePlayed]
	+[MTPodcast(NSPredicate) insertNewPodcastInManagedObjectContext:subscribed:feedUrl:showType:title:author:provider:imageUrl:description:]
	+[MTPodcast(NSPredicate) redirectURLForStoreCollectionId:]
	+[MTPodcast(NSPredicate) insertNewPodcastInManagedObjectContext:subscribed:feedUrl:showType:title:author:provider:imageUrl:description:adamId:]
	+[MTPodcast(NSPredicate) totalUnplayedCount]
	+[MTPodcast(NSPredicate) setRemovePlayedEpisodesSetting:forPodcastUuid:]

	// instance methods
	-[MTPodcast(NSPredicate) setAuthor:]
	-[MTPodcast(NSPredicate) setImageURL:]
	-[MTPodcast(NSPredicate) shareURL]
	-[MTPodcast(NSPredicate) setFlags:]
	-[MTPodcast(NSPredicate) setIsExplicit:]
	-[MTPodcast(NSPredicate) setTitle:]
	-[MTPodcast(NSPredicate) setModifiedDate:]
	-[MTPodcast(NSPredicate) setWebpageURL:]
	-[MTPodcast(NSPredicate) isDark]
	-[MTPodcast(NSPredicate) isShareable]
	-[MTPodcast(NSPredicate) setItemDescription:]
	-[MTPodcast(NSPredicate) seasonNumbers]
	-[MTPodcast(NSPredicate) setSubscribed:]
	-[MTPodcast(NSPredicate) redirectURL]
	-[MTPodcast(NSPredicate) sortAscending]
	-[MTPodcast(NSPredicate) setUpdatedFeedURL:]
	-[MTPodcast(NSPredicate) setSortAscending:]
	-[MTPodcast(NSPredicate) isAuthenticatedDark]
	-[MTPodcast(NSPredicate) isPastAutodownloadDark]
	-[MTPodcast(NSPredicate) isPastFeedDark]
	-[MTPodcast(NSPredicate) episodesAfterEpisode:restrictToUserEpisodes:]
	-[MTPodcast(NSPredicate) newestUserEpisodeExcludingExplicit:]
	-[MTPodcast(NSPredicate) oldestUserEpisodeExcludingExplicit:]
	-[MTPodcast(NSPredicate) newestEpisodeExcludingUuid:excludeExplicit:]
	-[MTPodcast(NSPredicate) oldestEpisodeExcludingExplicit:]
	-[MTPodcast(NSPredicate) sortDescriptorsForSortOrder]
	-[MTPodcast(NSPredicate) setLastDatePlayed:]
	-[MTPodcast(NSPredicate) markPlaylistsForUpdate]
	-[MTPodcast(NSPredicate) setPlaybackNewestToOldest:]
	-[MTPodcast(NSPredicate) setDeletePlayedEpisodes:]
	-[MTPodcast(NSPredicate) needsArtworkUpdate]
	-[MTPodcast(NSPredicate) updateCursorPosition:]
	-[MTPodcast(NSPredicate) mostRecentlyPlayedEpisode]
	-[MTPodcast(NSPredicate) userEpisodeAfterEpisode:]
	-[MTPodcast(NSPredicate) mostRecentlyPlayedEpisodeExcludingExplicit:excludingStreaming:]
	-[MTPodcast(NSPredicate) mostRecentlyPlayedEpisodeExcludingEpisodeUuid:restrictedToLibrary:excludeExplicit:excludeStreaming:]
	-[MTPodcast(NSPredicate) _episodeAfterEpisode:usePlayOrder:restrictToUserEpisodes:excludePlayed:]
	-[MTPodcast(NSPredicate) _episodesNextToEpisode:after:usePlayOrder:restrictToUserEpisodes:excludePlayed:excludeExplicit:episodeTypeFilter:limit:]
	-[MTPodcast(NSPredicate) _episodeAfterEpisode:usePlayOrder:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) _episodeBeforeEpisode:usePlayOrder:restrictToUserEpisodes:excludePlayed:]
	-[MTPodcast(NSPredicate) _episodesNextTo:after:usePlayOrder:sortAsc:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:episodeTypeFilter:limit:]
	-[MTPodcast(NSPredicate) _episodeNextToEpisode:after:usePlayOrder:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) _episodeNextToEpisode:after:usePlayOrder:restrictToUserEpisodes:excludePlayed:excludeExplicit:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) _episodesNextToEpisode:after:usePlayOrder:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:episodeTypeFilter:limit:]
	-[MTPodcast(NSPredicate) sortDescriptorsForPlayOrder]
	-[MTPodcast(NSPredicate) newestEpisodeExcludingUuid:excludeExplicit:excludeStreaming:]
	-[MTPodcast(NSPredicate) _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:excludingEpisodeUuid:]
	-[MTPodcast(NSPredicate) _latestOrOldestEpisode:restrictToUserEpisodes:playStateFilter:excludeExplicit:excludeStreaming:excludingEpisodeUuid:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:excludingEpisodeUuid:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:]
	-[MTPodcast(NSPredicate) _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:]
	-[MTPodcast(NSPredicate) oldestEpisodeExcludingExplicit:excludeStreaming:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) oldestEpisodeNotPlayedExcludingExplicit:]
	-[MTPodcast(NSPredicate) oldestEpisodeNotPlayedExcludingExplicit:excludingStreaming:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) oldestUserEpisodeExcludingExplicit:excludeStreaming:]
	-[MTPodcast(NSPredicate) oldestUserEpisodeNotPlayedExcludingExplicit:excludeStreaming:]
	-[MTPodcast(NSPredicate) _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludingEpisodeUuid:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) latestSeasonNumber]
	-[MTPodcast(NSPredicate) episodesInSeasonNumber:oldestEpisodesFirst:excludePlayed:excludeExplicit:excludeStreaming:episodeTypeFilter:limit:]
	-[MTPodcast(NSPredicate) newestEpisodeRestrictToUserEpisodes:playStateFilter:excludingExplicit:excludeStreaming:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) newestEpisode]
	-[MTPodcast(NSPredicate) _fetchRequestForDistinctSeasons]
	-[MTPodcast(NSPredicate) episodesInSeasonNumber:]
	-[MTPodcast(NSPredicate) episodesInSeasonNumber:oldestEpisodesFirst:]
	-[MTPodcast(NSPredicate) episodesInSeasonNumber:oldestEpisodesFirst:excludePlayed:excludeExplicit:limit:]
	-[MTPodcast(NSPredicate) currentFeedURL]
	-[MTPodcast(NSPredicate) setHasBeenSynced:]
	-[MTPodcast(NSPredicate) hasBeenSynced]
	-[MTPodcast(NSPredicate) setImporting:]
	-[MTPodcast(NSPredicate) importing]
	-[MTPodcast(NSPredicate) setNeedsArtworkUpdate:]
	-[MTPodcast(NSPredicate) setFeedChangedDate:]
	-[MTPodcast(NSPredicate) setUpdateStdDev:]
	-[MTPodcast(NSPredicate) setUpdateAvg:]
	-[MTPodcast(NSPredicate) setShowTypeInFeed:]
	-[MTPodcast(NSPredicate) showTypeResolvedValue]
	-[MTPodcast(NSPredicate) showTypeInFeedResolvedValue]
	-[MTPodcast(NSPredicate) isSerialShowTypeInFeed]
	-[MTPodcast(NSPredicate) setShowTypeSetting:]
	-[MTPodcast(NSPredicate) episodeToResume]
	-[MTPodcast(NSPredicate) mostRecentlyManuallyAddedEpisode]
	-[MTPodcast(NSPredicate) userEpisodesAfterEpisode:]
	-[MTPodcast(NSPredicate) episodeNewerThanEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) episodeOlderThanEpisode:]
	-[MTPodcast(NSPredicate) episodePublishedBefore:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) episodePublishedAfter:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) episodesPublishedAfter:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:episodeTypeFilter:limit:sortAsc:]
	-[MTPodcast(NSPredicate) episodeAfterEpisode:]
	-[MTPodcast(NSPredicate) firstUserEpisodeNotPlayed]
	-[MTPodcast(NSPredicate) newestFullEpisode]
	-[MTPodcast(NSPredicate) nextEpisodeNotPlayedExcludingExplicit:excludeStreaming:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) newestUserEpisodeNotPlayedExcludingExplicit:excludeStreaming:]
	-[MTPodcast(NSPredicate) oldestEpisode]
	-[MTPodcast(NSPredicate) oldestEpisodeRestrictToUserEpisodes:excludePlayed:excludingExplicit:excludeStreaming:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) oldestFullEpisode]
	-[MTPodcast(NSPredicate) oldestEpisodeNotPlayed]
	-[MTPodcast(NSPredicate) oldestUserEpisode]
	-[MTPodcast(NSPredicate) oldestUserEpisodeNotPlayedExcludingExplicit:]
	-[MTPodcast(NSPredicate) newestEpisodeUuid]
	-[MTPodcast(NSPredicate) _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:]
	-[MTPodcast(NSPredicate) _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludingEpisodeUuid:]
	-[MTPodcast(NSPredicate) oldestEpisodeInLatestSeasonOrShowExcludingPlayed:excludeExplicit:excludeStreaming:episodeTypeFilter:]
	-[MTPodcast(NSPredicate) smartPlayEpisode]
	-[MTPodcast(NSPredicate) hasAtLeastOneSeason]
	-[MTPodcast(NSPredicate) hasMultipleSeasons]
	-[MTPodcast(NSPredicate) episodesInLatestSeason]
	-[MTPodcast(NSPredicate) bestDescription]
	-[MTPodcast(NSPredicate) updateLastTouchDate]
	-[MTPodcast(NSPredicate) updateEpisodesMetadataIdentifiers]
	-[MTPodcast(NSPredicate) bestAvailableStoreCleanURL]
	-[MTPodcast(NSPredicate) twitterShareURL]
	-[MTPodcast(NSPredicate) setOrphanedFromCloud:]
	-[MTPodcast(NSPredicate) setAuthenticatedDark:]
	-[MTPodcast(NSPredicate) resetGoDark]
	-[MTPodcast(NSPredicate) countOfNewEpisodes]
	-[MTPodcast(NSPredicate) countOfUnplayedEpisodes]
	-[MTPodcast(NSPredicate) bestFeedURLExcludingRedirectURL:]
	-[MTPodcast(NSPredicate) countOfMyEpisodes]

MTEpisode(NSPredicate)
	// class methods
	+[MTEpisode(NSPredicate) exists:]
	+[MTEpisode(NSPredicate) userDefaultPropertiesAffectingPredicates]
	+[MTEpisode(NSPredicate) predicateForIsFromiTunesSync:]
	+[MTEpisode(NSPredicate) predicateForAllEpisodesOnPodcastUuid:]
	+[MTEpisode(NSPredicate) predicateForUserEpisodesOnPodcastUuid:ctx:]
	+[MTEpisode(NSPredicate) predicateForEpisodesOnUnplayedTabOnPodcastUuid:ctx:]
	+[MTEpisode(NSPredicate) predicateForPlayed:]
	+[MTEpisode(NSPredicate) predicateForUnplayedTabFlag:]
	+[MTEpisode(NSPredicate) predicateForUserEpisode:]
	+[MTEpisode(NSPredicate) predicateForIsTopLevel]
	+[MTEpisode(NSPredicate) predicateForIsNew:]
	+[MTEpisode(NSPredicate) predicateForExternalType:]
	+[MTEpisode(NSPredicate) predicateForOtherEpisodesOnPodcastUuid:limittedEpisodesPredicate:deletePlayedEpisodes:]
	+[MTEpisode(NSPredicate) predicateForLimittedEpisodesOnPodcastUuid:determinedByLimit:deletePlayedEpisodes:]
	+[MTEpisode(NSPredicate) predicateForRecentlyPlayedEpisodesToBeDeletedOnPodcastUuid:deletePlayedEpisodes:]
	+[MTEpisode(NSPredicate) predicateForSavedEpisodesOnPodcastUuid:]
	+[MTEpisode(NSPredicate) predicateForEpisodesInFeedForPodcastUuid:]
	+[MTEpisode(NSPredicate) predicateForEpisodesIsFromiTunesSyncOnPodcastUuid:]
	+[MTEpisode(NSPredicate) predicateForUserEpisodesOnPodcastUuid:episodeLimit:deletePlayedEpisodes:]
	+[MTEpisode(NSPredicate) predicateForEpisodeUuid:]
	+[MTEpisode(NSPredicate) predicateForVisuallyPlayed:]
	+[MTEpisode(NSPredicate) predicateForEpisodesDeterminedByLimitSettings:]
	+[MTEpisode(NSPredicate) predicateForPlayStateManuallySet:]
	+[MTEpisode(NSPredicate) predicateForAudio:]
	+[MTEpisode(NSPredicate) predicateForSaved:]
	+[MTEpisode(NSPredicate) predicateForBacklog:]
	+[MTEpisode(NSPredicate) predicateForIsBackCatalogItem]
	+[MTEpisode(NSPredicate) predicateForEpisodeStoreTrackIds:]
	+[MTEpisode(NSPredicate) predicateForHasBeenPlayed]
	+[MTEpisode(NSPredicate) predicateForPodcastIsHidden:]
	+[MTEpisode(NSPredicate) predicateForPreviouslyPlayed]
	+[MTEpisode(NSPredicate) predicateForHidingFuturePlayedTimestamps]
	+[MTEpisode(NSPredicate) predicateForFeedDeleted:]
	+[MTEpisode(NSPredicate) predicateForPodcastIsSubscribed:]
	+[MTEpisode(NSPredicate) predicateForEpisodesPublishedThisWeek]
	+[MTEpisode(NSPredicate) predicateForEpisodeType:]
	+[MTEpisode(NSPredicate) predicateForRecentlyPlayed]
	+[MTEpisode(NSPredicate) predicateForEpisodesOnUnplayedTabOnPodcastUuid:episodeLimit:deletePlayedEpisodes:]
	+[MTEpisode(NSPredicate) predicateForEpisodesOnSavedTabForPodcastUuid:]
	+[MTEpisode(NSPredicate) predicateForHasSeasonNumber]
	+[MTEpisode(NSPredicate) predicateForAllEpisodesOnPodcastUuid:includeNonAudioEpisodes:]
	+[MTEpisode(NSPredicate) predicateForSuppressAutoDownload:]
	+[MTEpisode(NSPredicate) predicateForSentNotification:]
	+[MTEpisode(NSPredicate) predicateForExplicit:]
	+[MTEpisode(NSPredicate) predicateForSavedTab:]
	+[MTEpisode(NSPredicate) predicateForPreviouslyPlayedHidingFutureTimestamps]
	+[MTEpisode(NSPredicate) predicateForEpisodesOnUnplayedTab]
	+[MTEpisode(NSPredicate) predicateForUserEpisodes]
	+[MTEpisode(NSPredicate) predicateForListenNow]
	+[MTEpisode(NSPredicate) predicateForListenNowLatestEpisodes]
	+[MTEpisode(NSPredicate) predicateForDownloaded:]
	+[MTEpisode(NSPredicate) predicateForVideo:]
	+[MTEpisode(NSPredicate) predicateForMetadataFirstSyncEligible:]
	+[MTEpisode(NSPredicate) predicateForEpisodeUuids:]
	+[MTEpisode(NSPredicate) predicateForEpisodeGuid:]
	+[MTEpisode(NSPredicate) predicateForEpisodeGuids:]
	+[MTEpisode(NSPredicate) predicateForFeedURL:]
	+[MTEpisode(NSPredicate) predicateForFeedURLs:]
	+[MTEpisode(NSPredicate) predicateForPersistentId:]
	+[MTEpisode(NSPredicate) predicateForPersistentIds:]
	+[MTEpisode(NSPredicate) predicateForHasValidPersistentId:]
	+[MTEpisode(NSPredicate) predicateForEpisodeTitle:]
	+[MTEpisode(NSPredicate) predicateForEpisodesImportedAfterDate:]
	+[MTEpisode(NSPredicate) predicateForEpisodeTypeFilter:]
	+[MTEpisode(NSPredicate) predicateForMyEpisodesOnPodcastUuid:episodeLimit:deletePlayedEpisodes:]
	+[MTEpisode(NSPredicate) predicateForPlaylistEpisodes]
	+[MTEpisode(NSPredicate) predicateForEpisodesPublishedToday]
	+[MTEpisode(NSPredicate) predicateForEpisodesPublishedThisMonth]
	+[MTEpisode(NSPredicate) predicateForNewEpisodesOnPodcastUuid:]
	+[MTEpisode(NSPredicate) predicateForEpisodesInStationShow:]
	+[MTEpisode(NSPredicate) predicateForMyEpisodesOnPodcastUuid:ctx:]
	+[MTEpisode(NSPredicate) predicateForEpisodeStoreTrackId:]
	+[MTEpisode(NSPredicate) predicateForEpisodeGuid:onPodcastUuid:]
	+[MTEpisode(NSPredicate) predicateForEpisodeTitle:onPodcastUuid:]
	+[MTEpisode(NSPredicate) predicateForSeasonNumber:]
	+[MTEpisode(NSPredicate) predicateForEpisodesWithSeasonNumbersOnPodcastUuid:]
	+[MTEpisode(NSPredicate) predicateForUserSetTopLevelEpisodes]
	+[MTEpisode(NSPredicate) insertNewEpisodeInManagedObjectContext:]
	+[MTEpisode(NSPredicate) prepareForPlatform:]
	+[MTEpisode(NSPredicate) downloadSizeLimitForEpisode:]
	+[MTEpisode(NSPredicate) friendlyPubDateStringForEpisode:abbreviated:]
	+[MTEpisode(NSPredicate) timeRemainingStringForEpisode:abbreviated:]
	+[MTEpisode(NSPredicate) downloadSizeLimitForVideo:]
	+[MTEpisode(NSPredicate) insertNewEpisodeInManagedObjectContext:title:podcast:pubDate:byteSize:guid:uti:contentId:enclosureUrl:playStateSource:importSource:]
	+[MTEpisode(NSPredicate) episodeWithMetadataIdentifier:inManagedObjectContext:]
	+[MTEpisode(NSPredicate) episodeWithEnclosureURL:inManagedObjectContext:]
	+[MTEpisode(NSPredicate) dateLabelDescriptionForEpisode:download:]
	+[MTEpisode(NSPredicate) friendlyPubDateStringForEpisode:]
	+[MTEpisode(NSPredicate) timeRemainingStringForEpisode:]
	+[MTEpisode(NSPredicate) isSaveSupported]
	+[MTEpisode(NSPredicate) isExternalMedia:]
	+[MTEpisode(NSPredicate) sortDescriptorsForSeasonsWithOldestEpisodesFirst:]
	+[MTEpisode(NSPredicate) sortDescriptorsForTitle]
	+[MTEpisode(NSPredicate) sortDescriptorsForLastDatePlayedAscending:]
	+[MTEpisode(NSPredicate) sortDescriptorsForPubDateAscending:]
	+[MTEpisode(NSPredicate) sortDescriptorsForRecentlyPlayed]
	+[MTEpisode(NSPredicate) sortDescriptorsForListenNow]
	+[MTEpisode(NSPredicate) sortDescriptorsForListenNowLatestEpisodes]

	// instance methods
	-[MTEpisode(NSPredicate) isSaved]
	-[MTEpisode(NSPredicate) setAuthor:]
	-[MTEpisode(NSPredicate) isPlayable]
	-[MTEpisode(NSPredicate) isRestricted]
	-[MTEpisode(NSPredicate) setPodcast:]
	-[MTEpisode(NSPredicate) setUti:]
	-[MTEpisode(NSPredicate) setGuid:]
	-[MTEpisode(NSPredicate) setPlayCount:]
	-[MTEpisode(NSPredicate) setTitle:]
	-[MTEpisode(NSPredicate) isShareable]
	-[MTEpisode(NSPredicate) setItemDescription:]
	-[MTEpisode(NSPredicate) setSaved:]
	-[MTEpisode(NSPredicate) setAssetURL:]
	-[MTEpisode(NSPredicate) setPlayhead:]
	-[MTEpisode(NSPredicate) metricsContentIdentifier]
	-[MTEpisode(NSPredicate) didChangePersistentID]
	-[MTEpisode(NSPredicate) setListenNowEpisode:]
	-[MTEpisode(NSPredicate) isInUserEpisodes]
	-[MTEpisode(NSPredicate) setStoreTrackId:]
	-[MTEpisode(NSPredicate) setPlayState:manually:source:]
	-[MTEpisode(NSPredicate) setLastDatePlayed:]
	-[MTEpisode(NSPredicate) setMetadataFirstSyncEligible:]
	-[MTEpisode(NSPredicate) updateUPPIdentifierIfNeeded]
	-[MTEpisode(NSPredicate) reasonForNotPlayable]
	-[MTEpisode(NSPredicate) updateUPPTimestamp]
	-[MTEpisode(NSPredicate) updateListenNowSortingDate]
	-[MTEpisode(NSPredicate) isInMyEpisodes]
	-[MTEpisode(NSPredicate) isInPodcastDetailsUnplayedTab]
	-[MTEpisode(NSPredicate) setItunesSubtitle:]
	-[MTEpisode(NSPredicate) playedText]
	-[MTEpisode(NSPredicate) playedTextForCarplay]
	-[MTEpisode(NSPredicate) incremementPlayCount]
	-[MTEpisode(NSPredicate) setPlayed:manually:source:]
	-[MTEpisode(NSPredicate) isLatestEpisodeInPodcast]

MTPlaylist(DB)
	// instance methods
	-[MTPlaylist(DB) needsUpdate]
	-[MTPlaylist(DB) setNeedsUpdate:]

NSManagedObjectContext(MTPodcastPlaylistSettings)
	// instance methods
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) podcastForUuid:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) episodeForUuid:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) podcastForFeedUrl:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) existingPodcastPlaylistSettingsWithID:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) podcastPlaylistSettingsForUuid:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) _nextSortOrderWithRequest:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) existingPodcastWithID:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) podcastIdWithUuid:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) podcastForPodcastPID:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) dictionaryForPodcastUuid:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) dictionaryWithProperties:podcastUuid:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) valueForProperty:podcastUuid:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) countOfPodcasts]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) nextSortOrderForSubscribedPodcasts]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) nextSortOrderForNotSubscribedPodcasts]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) existingEpisodeWithID:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) episodeIdWithUuid:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) episodeForUuid:returnsObjectAsFault:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) dictionaryForEpisodeUuid:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) dictionaryWithProperties:episodeUuid:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) valueForProperty:episodeUuid:]
	-[NSManagedObjectContext(MTPodcastPlaylistSettings) episodeIdsForPodcastUuid:sortOptions:]

NSThread(MTAdditions)
	// class methods
	+[NSThread(MTAdditions) mainThread:]

MPCAssistantRemoteControlDestination(POUtilities)
_TtC11PodcastsKit21ProxyPlayerController(PodcastsKit1)
	// instance methods
	-[_TtC11PodcastsKit21ProxyPlayerController(PodcastsKit1) controller:defersResponseReplacement:]

01 00 1500 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1100 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLookupItemArtwork 
01 00 1100 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMediaTask 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: IMLogger 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: IMURLBag 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: ITMReachability 
01 00 0700 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0800 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1800 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCAssistantCommand 
01 00 1800 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCAssistantEndpointContext 
01 00 1800 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCAssistantMutableRemoteControlDestination 
01 00 1800 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCAssistantPlaybackQueue 
01 00 1800 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCAssistantRemoteControlDestination 
01 00 1800 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerChangeRequest 
01 00 1800 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerPath 
01 00 1800 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerRequest 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelPodcastEpisode 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPPropertySet 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPRequestResponseController 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTCoalescableWorkController 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTConstants 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTDB 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTEpisode 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTPlaylist 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTPodcast 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTPodcastPlaylistSettings 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTPreferences 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0400 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0400 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 0400 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchedResultsController 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0400 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectContext 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0400 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryChangeRequest 
01 00 0400 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryToken 
01 00 0400 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryTransaction 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1400 /usr/lib/libSystem.B.dylib: OS_dispatch_queue 
01 00 1400 /usr/lib/libSystem.B.dylib: OS_os_log 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: PFClientUtil 
01 00 0b00 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSAirplaneModeSettingsDetail 
01 00 0b00 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSCellularDataSettingsDetail 
01 00 0b00 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSRestrictionsPasscodeController 
01 00 0c00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: RadiosPreferences 
01 00 0500 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACommandFailed 
01 00 0500 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACommandSucceeded 
01 00 0500 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPPodcastCollection 
01 00 0500 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPPodcastStation 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: UpNextResult 
01 00 0100 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: _TtC18PodcastsFoundation17FutureDateChecker 
01 00 1b00 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
