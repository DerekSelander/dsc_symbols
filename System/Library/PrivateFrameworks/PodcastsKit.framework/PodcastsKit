|| __DATA.__data _OBJC_METACLASS_$_PKDurationSnapshot
|| __DATA.__data _OBJC_METACLASS_$_PKEpisode
|| __DATA.__data _OBJC_METACLASS_$_PKPlayerManifest
|| __DATA.__data _OBJC_METACLASS_$_PKProvider
|| __DATA.__data _OBJC_METACLASS_$_PKSearchResult
|| __DATA.__data _OBJC_METACLASS_$_PKShow
|| __DATA.__data _OBJC_METACLASS_$_PKStoreId
|| __DATA.__objc_data _OBJC_CLASS_$_IMAMSMetricsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_IMAppStateMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_IMBasePlatformLookupService
|| __DATA.__objc_data _OBJC_CLASS_$_IMBaseStoreService
|| __DATA.__objc_data _OBJC_CLASS_$_IMChartLookupService
|| __DATA.__objc_data _OBJC_CLASS_$_IMClickAMSMetricsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_IMClientUtil
|| __DATA.__objc_data _OBJC_CLASS_$_IMContentLookupService
|| __DATA.__objc_data _OBJC_CLASS_$_IMFetchPushNotificationSettingsService
|| __DATA.__objc_data _OBJC_CLASS_$_IMFetchReviewService
|| __DATA.__objc_data _OBJC_CLASS_$_IMIgnoreRedirectURLAction
|| __DATA.__objc_data _OBJC_CLASS_$_IMMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_IMMetricsAppCloseEvent
|| __DATA.__objc_data _OBJC_CLASS_$_IMMetricsAppOpenEvent
|| __DATA.__objc_data _OBJC_CLASS_$_IMMetricsController
|| __DATA.__objc_data _OBJC_CLASS_$_IMMetricsMemoryEvent
|| __DATA.__objc_data _OBJC_CLASS_$_IMMetricsTimerEvent
|| __DATA.__objc_data _OBJC_CLASS_$_IMMetricsUtil
|| __DATA.__objc_data _OBJC_CLASS_$_IMNetworkObserver
|| __DATA.__objc_data _OBJC_CLASS_$_IMPageAMSMetricsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_IMPushNotificationSettingsService
|| __DATA.__objc_data _OBJC_CLASS_$_IMSaveReviewService
|| __DATA.__objc_data _OBJC_CLASS_$_IMURLBag
|| __DATA.__objc_data _OBJC_CLASS_$_IMURLProtocolHandler
|| __DATA.__objc_data _OBJC_CLASS_$_IMURLRequestEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_IMURLRequestService
|| __DATA.__objc_data _OBJC_CLASS_$_IMURLSession
|| __DATA.__objc_data _OBJC_CLASS_$_IMWritePushNotificationSettingsService
|| __DATA.__objc_data _OBJC_CLASS_$_MTWeakReference
|| __DATA.__objc_data _OBJC_CLASS_$_PKDurationSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_PKEpisode
|| __DATA.__objc_data _OBJC_CLASS_$_PKPlayerManifest
|| __DATA.__objc_data _OBJC_CLASS_$_PKProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PKSearchResult
|| __DATA.__objc_data _OBJC_CLASS_$_PKShow
|| __DATA.__objc_data _OBJC_CLASS_$_PKStoreId
|| __DATA.__objc_data _OBJC_METACLASS_$_IMAMSMetricsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_IMAppStateMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_IMBasePlatformLookupService
|| __DATA.__objc_data _OBJC_METACLASS_$_IMBaseStoreService
|| __DATA.__objc_data _OBJC_METACLASS_$_IMChartLookupService
|| __DATA.__objc_data _OBJC_METACLASS_$_IMClickAMSMetricsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_IMClientUtil
|| __DATA.__objc_data _OBJC_METACLASS_$_IMContentLookupService
|| __DATA.__objc_data _OBJC_METACLASS_$_IMFetchPushNotificationSettingsService
|| __DATA.__objc_data _OBJC_METACLASS_$_IMFetchReviewService
|| __DATA.__objc_data _OBJC_METACLASS_$_IMIgnoreRedirectURLAction
|| __DATA.__objc_data _OBJC_METACLASS_$_IMMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_IMMetricsAppCloseEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_IMMetricsAppOpenEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_IMMetricsController
|| __DATA.__objc_data _OBJC_METACLASS_$_IMMetricsMemoryEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_IMMetricsTimerEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_IMMetricsUtil
|| __DATA.__objc_data _OBJC_METACLASS_$_IMNetworkObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_IMPageAMSMetricsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_IMPushNotificationSettingsService
|| __DATA.__objc_data _OBJC_METACLASS_$_IMSaveReviewService
|| __DATA.__objc_data _OBJC_METACLASS_$_IMURLBag
|| __DATA.__objc_data _OBJC_METACLASS_$_IMURLProtocolHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_IMURLRequestEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_IMURLRequestService
|| __DATA.__objc_data _OBJC_METACLASS_$_IMURLSession
|| __DATA.__objc_data _OBJC_METACLASS_$_IMWritePushNotificationSettingsService
|| __DATA.__objc_data _OBJC_METACLASS_$_MTWeakReference
|| __DATA_CONST.__const _IMAMSMetricsEventTypeAppClose
|| __DATA_CONST.__const _IMAMSMetricsEventTypeAppOpen
|| __DATA_CONST.__const _IMAMSMetricsEventTypeClick
|| __DATA_CONST.__const _IMAMSMetricsEventTypeMemory
|| __DATA_CONST.__const _IMAMSMetricsEventTypePage
|| __DATA_CONST.__const _IMAMSMetricsEventTypeTimer
|| __DATA_CONST.__const _IMFetchReviewAdamIDQueryParam
|| __DATA_CONST.__const _IMFetchReviewDefaultEndpointURL
|| __DATA_CONST.__const _IMFetchReviewEndpointURLKey
|| __DATA_CONST.__const _IMFetchReviewVersionQueryParam
|| __DATA_CONST.__const _IMFetchReviewVersionQueryValue
|| __DATA_CONST.__const _IMNetworkObserverOperatorNameChangedNotification
|| __DATA_CONST.__const _IMNetworkReachabilityFlagsChangedNotification
|| __DATA_CONST.__const _IMNetworkTypeChangedNotification
|| __DATA_CONST.__const _IMPushNotificationSettingsServiceErrorDomain
|| __DATA_CONST.__const _IMSaveReviewServiceClientParam
|| __DATA_CONST.__const _IMSaveReviewServiceClientParamValue
|| __DATA_CONST.__const _IMSaveReviewServiceVersionQueryParam
|| __DATA_CONST.__const _IMSaveReviewServiceVersionQueryValue
|| __DATA_CONST.__const _MetricsAdditionalData
|| __DATA_CONST.__const _MetricsContentIdentifierKey
|| __DATA_CONST.__const _MetricsDataSource
|| __DATA_CONST.__const _MetricsEnabledKey
|| __DATA_CONST.__const _MetricsNameKey
|| __DATA_CONST.__const _MetricsViewWillAppearTime
|| __DATA_CONST.__const _X_APPLE_STORE_FRONT_HEADER
|| __DATA_CONST.__const _isUIKitClassKey
|| __DATA_CONST.__const _kBagKeyGUIDRegex
|| __DATA_CONST.__const _kBagKeyGUIDSchemes
|| __DATA_CONST.__const _kBagKeyMescalSignedRequests
|| __DATA_CONST.__const _kBagKeyMescalSignedResponses
|| __DATA_CONST.__const _kBagKeyMetrics
|| __DATA_CONST.__const _kBagKeyMetricsURL
|| __DATA_CONST.__const _kBagKeyMobileNetworkConstraints
|| __DATA_CONST.__const _kBagKeySignSapSetup
|| __DATA_CONST.__const _kBagKeySignSapSetupCert
|| __DATA_CONST.__const _kBagKeySignedActions
|| __DATA_CONST.__const _kBagKeyStorePlatformLookupURL
|| __DATA_CONST.__const _kBagKeyStorePlatformLookupUnpersonalizedURL
|| __DATA_CONST.__const _kBagKeyTrustedDomains
|| __DATA_CONST.__const _kMetricsContainerId
|| __DATA_CONST.__const _kProductProfile
|| __DATA_CONST.__const _kPushNotificationSettings
|| __DATA_DIRTY.__common _IMStoreLogCategoryDefault
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMStoreLogging
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMStoreLogging
|| __TEXT.__text _IMApplicationStateCreate
|| __TEXT.__text _IMMetricsSetClickEventPositionWithPoint
|| __TEXT.__text _IMMetricsSetClickEventPositionWithView
|| __TEXT.__text _IMMetricsWindowOrientationForInterfaceOrientation
|| __TEXT.__text _IMStoreUtilInitializeLogCategories
|| __TEXT.__text _NSStringFromIMApplicationState
|| __TEXT.__text _jsonSerializableValueForCoreFoundationType
|| __TEXT.__text _jsonSerializableValueForValue
__ AVFoundation: _AVAudioSessionCategoryPlayback
__ AVFoundation: _AVAudioSessionInterruptionNotification
__ AVFoundation: _AVAudioSessionInterruptionOptionKey
__ AVFoundation: _AVAudioSessionInterruptionTypeKey
__ AVFoundation: _AVAudioSessionInterruptionWasSuspendedKey
__ AVFoundation: _AVAudioSessionMediaServicesWereResetNotification
__ AVFoundation: _AVAudioSessionModeSpokenAudio
__ AVFoundation: _AVAudioSessionRouteChangeNotification
__ AVFoundation: _AVAudioSessionRouteChangeReasonKey
__ AVFoundation: _AVAudioTimePitchAlgorithmTimeDomain
__ AVFoundation: _AVFileTypeJPEG
__ AVFoundation: _AVMediaCharacteristicVisual
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMetadataCommonIdentifierTitle
__ AVFoundation: _AVMetadataCommonKeyArtwork
__ AVFoundation: _AVMetadataCommonKeyTitle
__ AVFoundation: _AVMetadataIdentifieriTunesMetadataTrackSubTitle
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeErrorKey
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeNotification
__ AVFoundation: _AVPlayerPlaybackWasInterruptedNotification
__ AVFoundation: _OBJC_CLASS_$_AVAssetImageGenerator
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _OBJC_CLASS_$_AVMutableMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ AVKit: _OBJC_METACLASS_$_AVPlayerViewController
__ Accounts: _ACAccountTypeIdentifierKey
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppSupport: _OBJC_CLASS_$_RadiosPreferences
__ AppleMediaServices: _OBJC_CLASS_$_AMSBag
__ AppleMediaServices: _OBJC_CLASS_$_AMSBagKeySet
__ AppleMediaServices: _OBJC_CLASS_$_AMSLogConfig
__ AppleMediaServices: _OBJC_CLASS_$_AMSLookup
__ AppleMediaServices: _OBJC_CLASS_$_AMSLookupItemArtwork
__ AppleMediaServices: _OBJC_CLASS_$_AMSMediaTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSMetrics
__ AppleMediaServices: _OBJC_CLASS_$_AMSMetricsEvent
__ AppleMediaServices: _OBJC_CLASS_$_AMSMutableBagKeySet
__ AppleMediaServices: _OBJC_CLASS_$_AMSMutableLogConfig
__ AppleMediaServices: _OBJC_CLASS_$_AMSProcessInfo
__ AppleMediaServices: _OBJC_CLASS_$_AMSPromise
__ AppleMediaServices: _OBJC_CLASS_$_AMSURLAction
__ AppleMediaServices: _OBJC_CLASS_$_AMSURLProtocolHandler
__ AppleMediaServices: _OBJC_CLASS_$_AMSURLRequestEncoder
__ AppleMediaServices: _OBJC_CLASS_$_AMSURLSession
__ AppleMediaServices: _OBJC_METACLASS_$_AMSMetricsEvent
__ AppleMediaServices: _OBJC_METACLASS_$_AMSURLAction
__ AppleMediaServices: _OBJC_METACLASS_$_AMSURLProtocolHandler
__ AppleMediaServices: _OBJC_METACLASS_$_AMSURLRequestEncoder
__ AppleMediaServices: _OBJC_METACLASS_$_AMSURLSession
__ AssertionServices: _BKSProcessAssertionBackgroundTimeRemaining
__ Celestial: _AVSystemController_AllowAppToInitiatePlaybackTemporarilyAttribute
__ Celestial: _OBJC_CLASS_$_AVSystemController
__ CoreData: _NSDeletedObjectIDsKey
__ CoreData: _NSInferMappingModelAutomaticallyOption
__ CoreData: _NSInsertedObjectIDsKey
__ CoreData: _NSManagedObjectContextDidSaveObjectIDsNotification
__ CoreData: _NSMergeByPropertyObjectTrumpMergePolicy
__ CoreData: _NSMigratePersistentStoresAutomaticallyOption
__ CoreData: _NSPersistentStoreFileProtectionKey
__ CoreData: _NSSQLitePragmasOption
__ CoreData: _NSSQLiteStoreType
__ CoreData: _NSStoreUUIDKey
__ CoreData: _NSUpdatedObjectIDsKey
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSExpressionDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSFetchedResultsController
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_CLASS_$_NSManagedObjectContext
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreCoordinator
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreData: _OBJC_METACLASS_$_NSManagedObjectContext
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayCreateMutableCopy
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFCopyDescription
__ CoreFoundation: _CFCopyTypeIDDescription
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFStreamCreateBoundPair
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringTokenizerCopyBestStringLanguage
__ CoreFoundation: _CFStringUppercase
__ CoreFoundation: _CFURLCreateStringByAddingPercentEscapes
__ CoreFoundation: _CFURLCreateStringByReplacingPercentEscapes
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleNameKey
__ CoreFoundation: _kCFNumberNaN
__ CoreFoundation: _kCFNumberNegativeInfinity
__ CoreFoundation: _kCFNumberPositiveInfinity
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGBitmapContextGetHeight
__ CoreGraphics: _CGBitmapContextGetWidth
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClipToMask
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetLineDash
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGGradientCreateWithColorComponents
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPathAddArcToPoint
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreMedia: _CMTimeAdd
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeRangeCopyDescription
__ CoreMedia: _CMTimeRangeGetEnd
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _kCMTimePositiveInfinity
__ CoreMedia: _kCMTimeZero
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTagClassMIMEType
__ CoreServices: _kUTTypeAudio
__ CoreServices: _kUTTypeMovie
__ CoreServices: _kUTTypeVideo
__ CoreTelephony: __CTServerConnectionCopyCellularUsagePolicy
__ CoreTelephony: __CTServerConnectionCopyDataStatus
__ CoreTelephony: __CTServerConnectionCopyOperatorName
__ CoreTelephony: __CTServerConnectionCreate
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionRegisterForNotification
__ CoreTelephony: __CTServerConnectionSetTargetQueue
__ CoreTelephony: __CTServerConnectionUnregisterForNotification
__ CoreTelephony: _kCTCarrierSettingsNewCarrierNotification
__ CoreTelephony: _kCTCarrierSettingsNewOperatorNotification
__ CoreTelephony: _kCTCellularUsagePolicyDataAllowed
__ CoreTelephony: _kCTRegistrationDataIndicator
__ CoreTelephony: _kCTRegistrationDataIndicator2G
__ CoreTelephony: _kCTRegistrationDataIndicator2_5G
__ CoreTelephony: _kCTRegistrationDataIndicator3G
__ CoreTelephony: _kCTRegistrationDataIndicator3_5G
__ CoreTelephony: _kCTRegistrationDataIndicator3_75G
__ CoreTelephony: _kCTRegistrationDataIndicator4G
__ CoreTelephony: _kCTRegistrationDataIndicator5G
__ CoreTelephony: _kCTRegistrationDataIndicator6G
__ CoreTelephony: _kCTRegistrationDataIndicator7G
__ CoreTelephony: _kCTRegistrationDataIndicator8G
__ CoreTelephony: _kCTRegistrationDataIndicator9G
__ CoreTelephony: _kCTRegistrationDataIndicatorH_Plus
__ CoreTelephony: _kCTRegistrationDataStatusChangedNotification
__ CoreTelephony: _kCTRegistrationOperatorName
__ CoreTelephony: _kCTRegistrationOperatorNameChangedNotification
__ Foundation: _NSClassFromString
__ Foundation: _NSFileModificationDate
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSFileSize
__ Foundation: _NSFileSystemFreeSize
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUserActivityContentUserActionPlay
__ Foundation: _NSUserDefaultsDidChangeNotification
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSByteCountFormatter
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLConnection
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUserActivity
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXMLParser
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationAddImageFromSource
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateThumbnailAtIndex
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _CGImageSourceGetType
__ ImageIO: _kCGImageDestinationBackgroundColor
__ ImageIO: _kCGImageDestinationLossyCompressionQuality
__ ImageIO: _kCGImageDestinationUseHardwareAcceleration
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImageSourceCreateThumbnailFromImageAlways
__ ImageIO: _kCGImageSourceCreateThumbnailWithTransform
__ ImageIO: _kCGImageSourceShouldAllowFloat
__ ImageIO: _kCGImageSourceShouldCache
__ ImageIO: _kCGImageSourceThumbnailMaxPixelSize
__ ImageIO: _kCGImageSourceTypeIdentifierHint
__ ImageIO: _kCGImageSourceUseHardwareAcceleration
__ ManagedConfiguration: _MCFeatureExplicitContentAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCAssistantPlaybackQueue
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerChangeRequest
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerPath
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerRequest
__ MediaPlaybackCore: _OBJC_METACLASS_$_MPCAssistantPlaybackQueue
__ MediaPlayer: _MPModelPropertyPodcastAuthorName
__ MediaPlayer: _MPModelPropertyPodcastEpisodeArtwork
__ MediaPlayer: _MPModelPropertyPodcastEpisodeDescriptionText
__ MediaPlayer: _MPModelPropertyPodcastEpisodeDuration
__ MediaPlayer: _MPModelPropertyPodcastEpisodeExplicit
__ MediaPlayer: _MPModelPropertyPodcastEpisodeShareURL
__ MediaPlayer: _MPModelPropertyPodcastEpisodeStreamURL
__ MediaPlayer: _MPModelPropertyPodcastEpisodeTitle
__ MediaPlayer: _MPModelPropertyPodcastFeedURL
__ MediaPlayer: _MPModelPropertyPodcastShareURL
__ MediaPlayer: _MPModelPropertyPodcastSupportsSubscription
__ MediaPlayer: _MPModelPropertyPodcastTitle
__ MediaPlayer: _MPModelRelationshipGenericPodcastEpisode
__ MediaPlayer: _MPModelRelationshipPodcastAuthor
__ MediaPlayer: _MPModelRelationshipPodcastEpisodeAuthor
__ MediaPlayer: _MPModelRelationshipPodcastEpisodePodcast
__ MediaPlayer: _MPNowPlayingContentItemUserInfoKeyIsLoading
__ MediaPlayer: _OBJC_CLASS_$_MPModelPodcastEpisode
__ MediaPlayer: _OBJC_CLASS_$_MPNowPlayingContentItem
__ MediaPlayer: _OBJC_CLASS_$_MPNowPlayingInfoCenter
__ MediaPlayer: _OBJC_CLASS_$_MPPropertySet
__ MediaPlayer: _OBJC_CLASS_$_MPRemoteCommandCenter
__ MediaPlayer: _OBJC_CLASS_$_MPRequestResponseController
__ MediaPlayer: _OBJC_CLASS_$_MPSkipTrackCommandEvent
__ MediaRemote: _MRContentItemCopyNowPlayingInfo
__ MediaRemote: _MRMediaRemoteGetLocalOrigin
__ MediaRemote: _MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync
__ MediaRemote: _MRMediaRemoteSetAppPlaybackQueueForPlayer
__ MediaRemote: _MRMediaRemoteSetWantsNowPlayingNotifications
__ MediaRemote: _MRNowPlayingClientCreate
__ MediaRemote: _MRNowPlayingPlayerCreate
__ MediaRemote: _MRNowPlayingPlayerGetIdentifier
__ MediaRemote: _MRNowPlayingPlayerPathCreate
__ MediaRemote: _MRNowPlayingPlayerPathGetPlayer
__ MediaRemote: _MRPlaybackQueueGetContentItemAtOffset
__ MediaRemote: _MRPlaybackQueueRequestCreate
__ MediaRemote: _MRPlaybackQueueRequestSetIncludeMetadata
__ MediaRemote: _MRSystemAppPlaybackQueueCreate
__ MediaRemote: _MRSystemAppPlaybackQueueSetGenericTrackIdentifiers
__ MediaRemote: _MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback
__ MediaRemote: _MRSystemAppPlaybackQueueSetReplaceIntent
__ MediaRemote: _MRSystemAppPlaybackQueueSetTracklistShuffleMode
__ MediaRemote: _MRSystemAppPlaybackQueueSetUserInfo
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoQueueIndex
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoTotalQueueCount
__ MediaRemote: _kMRMediaRemoteOptionPredefinedPlaybackRate
__ MediaRemote: _kMRNowPlayingPlayerPathUserInfoKey
__ MediaRemote: _kMRPlayerPlaybackQueueChangedNotification
__ Preferences: _OBJC_CLASS_$_PSAirplaneModeSettingsDetail
__ Preferences: _OBJC_CLASS_$_PSCellularDataSettingsDetail
__ Preferences: _OBJC_CLASS_$_PSRestrictionsPasscodeController
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAReplicatorLayer
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAAnimationCubic
__ QuartzCore: _kCAAnimationDiscrete
__ QuartzCore: _kCAAnimationPaced
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ SAObjects: _SAMPEpisodePlaybackOrderAPPLICATION_DEFAULTValue
__ SAObjects: _SAMPEpisodePlaybackOrderNEWEST_FIRSTValue
__ SAObjects: _SAMPEpisodePlaybackOrderOLDEST_FIRSTValue
__ Security: _SecCertificateCopyCommonName
__ Security: _SecCertificateCopyEmailAddresses
__ Security: _SecCertificateCopyKey
__ Security: _SecCertificateCopySerialNumberData
__ Security: _SecCertificateCopySubjectSummary
__ Security: _SecKeyCopyExternalRepresentation
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTrustCopyPublicKey
__ Security: _SecTrustCopyResult
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilityScheduleWithRunLoop
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilitySetDispatchQueue
__ SystemConfiguration: _SCNetworkReachabilityUnscheduleFromRunLoop
__ UIKit: _NSDocumentTypeDocumentAttribute
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSHTMLTextDocumentType
__ UIKit: _NSLinkAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_UIAccessibilityElement
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$__UIBackdropViewSettings
__ UIKit: _OBJC_METACLASS_$_UIAccessibilityElement
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIAccessibilityConvertFrameToScreenCoordinates
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationDidFinishLaunchingNotification
__ UIKit: _UIApplicationDidReceiveMemoryWarningNotification
__ UIKit: _UIApplicationLaunchOptionsSourceApplicationKey
__ UIKit: _UIApplicationLaunchOptionsURLKey
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillTerminateNotification
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontDescriptorSizeAttribute
__ UIKit: _UIFontDescriptorTextStyleAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleFootnote1
__ UIKit: _UIFontTextStyleFootnote2
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleHeadline1
__ UIKit: _UIFontTextStyleHeadline2
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleSubheadline1
__ UIKit: _UIFontTextStyleSubheadline2
__ UIKit: _UIFontTextStyleTitle0
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIGraphicsPopContext
__ UIKit: _UIGraphicsPushContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIImageWriteToSavedPhotosAlbum
__ UIKit: _UIRectCenteredYInRectScale
__ UIKit: _UIRectFill
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UIRectGetCenter
__ UserActivity: _UAUserActivityEligibleEvenWhenInBackgroundKey
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Init
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_context
__ libSystem.B.dylib: _dispatch_get_current_queue
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getxattr
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _lround
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _mktime
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _pthread_mach_thread_np
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _setxattr
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strptime_l
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _uname
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__113basic_ostreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTINSt3__115basic_streambufIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _class_copyMethodList
__ libobjc.A.dylib: _class_getClassMethod
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _class_getSuperclass
__ libobjc.A.dylib: _class_replaceMethod
__ libobjc.A.dylib: _imp_implementationWithBlock
__ libobjc.A.dylib: _method_copyArgumentType
__ libobjc.A.dylib: _method_getImplementation
__ libobjc.A.dylib: _method_getName
__ libobjc.A.dylib: _method_getNumberOfArguments
__ libobjc.A.dylib: _method_getTypeEncoding
__ libobjc.A.dylib: _method_setImplementation
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_lookUpClass
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
__ libswiftAVFoundation.dylib: __swift_FORCE_LOAD_$_swiftAVFoundation
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deallocPartialClassInstance
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastClass
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_errorRetain
__ libswiftCore.dylib: _swift_getExistentialTypeMetadata
__ libswiftCore.dylib: _swift_getInitializedObjCClass
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTupleTypeMetadata2
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_isEscapingClosureAtFileLocation
__ libswiftCore.dylib: _swift_isUniquelyReferencedNonObjC_nonNull_bridgeObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_release_n
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_retain_n
__ libswiftCore.dylib: _swift_setDeallocating
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_updateClassMetadata2
__ libswiftCoreAudio.dylib: __swift_FORCE_LOAD_$_swiftCoreAudio
__ libswiftCoreData.dylib: __swift_FORCE_LOAD_$_swiftCoreData
__ libswiftCoreFoundation.dylib: __swift_FORCE_LOAD_$_swiftCoreFoundation
__ libswiftCoreGraphics.dylib: __swift_FORCE_LOAD_$_swiftCoreGraphics
__ libswiftCoreImage.dylib: __swift_FORCE_LOAD_$_swiftCoreImage
__ libswiftCoreMIDI.dylib: __swift_FORCE_LOAD_$_swiftCoreMIDI
__ libswiftCoreMedia.dylib: __swift_FORCE_LOAD_$_swiftCoreMedia
__ libswiftDarwin.dylib: __swift_FORCE_LOAD_$_swiftDarwin
__ libswiftDispatch.dylib: __swift_FORCE_LOAD_$_swiftDispatch
__ libswiftFoundation.dylib: __swift_FORCE_LOAD_$_swiftFoundation
__ libswiftMediaPlayer.dylib: __swift_FORCE_LOAD_$_swiftMediaPlayer
__ libswiftMetal.dylib: __swift_FORCE_LOAD_$_swiftMetal
__ libswiftObjectiveC.dylib: __swift_FORCE_LOAD_$_swiftObjectiveC
__ libswiftQuartzCore.dylib: __swift_FORCE_LOAD_$_swiftQuartzCore
__ libswiftUIKit.dylib: __swift_FORCE_LOAD_$_swiftUIKit
__ libswiftos.dylib: __swift_FORCE_LOAD_$_swiftos
__ libswiftsimd.dylib: __swift_FORCE_LOAD_$_swiftsimd
__ libxml2.2.dylib: _htmlReadMemory
__ libxml2.2.dylib: _xmlFreeDoc
MTPodcastAndEpisodeProcessor : MTBaseProcessor
 @property  NSMutableDictionary *episodeObservers

  // instance methods
  -[MTPodcastAndEpisodeProcessor init]
  -[MTPodcastAndEpisodeProcessor .cxx_destruct]
  -[MTPodcastAndEpisodeProcessor predicate]
  -[MTPodcastAndEpisodeProcessor stop]
  -[MTPodcastAndEpisodeProcessor entityName]
  -[MTPodcastAndEpisodeProcessor episodeObservers]
  -[MTPodcastAndEpisodeProcessor podcastPredicate]
  -[MTPodcastAndEpisodeProcessor updateEpisodePredicates]
  -[MTPodcastAndEpisodeProcessor podcastUuids]
  -[MTPodcastAndEpisodeProcessor addEpisodeObserverForPodcast:]
  -[MTPodcastAndEpisodeProcessor episodePredicateForPodcast:]
  -[MTPodcastAndEpisodeProcessor episodeSortDescriptorsForPodcast:]
  -[MTPodcastAndEpisodeProcessor createEpisodeObserverForPodcastUuid:predicate:sortDescriptors:]
  -[MTPodcastAndEpisodeProcessor episodeUuidObserver:resultsChangedForPodcast:withDeletedIds:andInsertIds:]
  -[MTPodcastAndEpisodeProcessor resultsChangedWithDeletedIds:andInsertIds:]
  -[MTPodcastAndEpisodeProcessor removeEpisodeObserverForPodcast:]
  -[MTPodcastAndEpisodeProcessor episodeObserverForPodcastUuid:]
  -[MTPodcastAndEpisodeProcessor episodeUuids]
  -[MTPodcastAndEpisodeProcessor setEpisodeObservers:]


MarmosetOSLog : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MarmosetOSLog load]


MTEpisodeUnavailableUtil : MTSingleton
  // class methods
  +[MTEpisodeUnavailableUtil longReasonTextForNoInternet]
  +[MTEpisodeUnavailableUtil longStringForUnavailableReason:podcastTitle:]
  +[MTEpisodeUnavailableUtil unavailableReasonForEpisode:]
  +[MTEpisodeUnavailableUtil stringForUnavailableReason:]

  // instance methods
  -[MTEpisodeUnavailableUtil _presentErrorDialogWithTitle:message:handler:]
  -[MTEpisodeUnavailableUtil showDialogForReason:podcastTitle:completion:]


MTFetchedResultsController : NSObject /usr/lib/libSystem.B.dylib <NSFetchedResultsControllerDelegate, MTFetchedResultsControllerProtocol>
 @property  NSFetchRequest *fetchRequest
 @property  NSArray *propertyKeys
 @property  NSManagedObjectContext *managedObjectContext
 @property  NSArray *fetchedObjects
 @property  <NSFetchedResultsControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTFetchedResultsController delegate]
  -[MTFetchedResultsController setDelegate:]
  -[MTFetchedResultsController .cxx_destruct]
  -[MTFetchedResultsController fetchRequest]
  -[MTFetchedResultsController managedObjectContext]
  -[MTFetchedResultsController controllerDidChangeContent:]
  -[MTFetchedResultsController controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:]
  -[MTFetchedResultsController controllerWillChangeContent:]
  -[MTFetchedResultsController initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:]
  -[MTFetchedResultsController performFetch:]
  -[MTFetchedResultsController fetchedObjects]
  -[MTFetchedResultsController objectAtIndexPath:]
  -[MTFetchedResultsController indexPathForObject:]
  -[MTFetchedResultsController propertyKeys]
  -[MTFetchedResultsController setPropertyKeys:]
  -[MTFetchedResultsController _updateCacheWithManagedObject:]
  -[MTFetchedResultsController _hasManagedObjectChanged:]
  -[MTFetchedResultsController _removeObjectFromCacheWithId:]
  -[MTFetchedResultsController _dictionaryForObject:]
  -[MTFetchedResultsController _dictionaryFromCacheForObjectID:]


MTCoreDataContainer : NSObject /usr/lib/libSystem.B.dylib
 @property  NSManagedObjectModel *managedObjectModel
 @property  MTManagedObjectContext *mainQueueContext
 @property  MTManagedObjectContext *privateQueueContext
 @property  MTManagedObjectContext *carPlayContext
 @property  MTManagedObjectContext *storeContext
 @property  MTManagedObjectContext *importContext
 @property  MTManagedObjectContext *resetableImportContext
 @property  NSObject<OS_dispatch_queue> *mergeQueue
 @property  NSObject<OS_dispatch_queue> *mergeNotifierQueue
 @property  NSPersistentStoreCoordinator *coordinator
 @property  <MTCoreDataContainerConfigProvider> *config
 @property  NSHashTable *notifiers
 @property  NSMutableArray *entityNames
 @property  BOOL valid

  // instance methods
  -[MTCoreDataContainer .cxx_destruct]
  -[MTCoreDataContainer config]
  -[MTCoreDataContainer setConfig:]
  -[MTCoreDataContainer managedObjectModel]
  -[MTCoreDataContainer persistentStoreCoordinator]
  -[MTCoreDataContainer setManagedObjectModel:]
  -[MTCoreDataContainer destroy]
  -[MTCoreDataContainer valid]
  -[MTCoreDataContainer setCoordinator:]
  -[MTCoreDataContainer coordinator]
  -[MTCoreDataContainer importContext]
  -[MTCoreDataContainer setImportContext:]
  -[MTCoreDataContainer entityNames]
  -[MTCoreDataContainer setValid:]
  -[MTCoreDataContainer initWithConfig:]
  -[MTCoreDataContainer setEntityNames:]
  -[MTCoreDataContainer mergeQueue]
  -[MTCoreDataContainer setMergeQueue:]
  -[MTCoreDataContainer notifiers]
  -[MTCoreDataContainer setNotifiers:]
  -[MTCoreDataContainer setMergeNotifierQueue:]
  -[MTCoreDataContainer mainQueueContext]
  -[MTCoreDataContainer privateQueueContext]
  -[MTCoreDataContainer _createManagedObjectContextWithName:coordinator:concurrencyType:]
  -[MTCoreDataContainer mergeFromContextDidSave:]
  -[MTCoreDataContainer _notifyLibraryChanged:]
  -[MTCoreDataContainer _addChanges:ofType:toLibraryChanges:]
  -[MTCoreDataContainer mergeNotifierQueue]
  -[MTCoreDataContainer _tearDown:]
  -[MTCoreDataContainer mainOrPrivateContext]
  -[MTCoreDataContainer carPlayContext]
  -[MTCoreDataContainer storeContext]
  -[MTCoreDataContainer resetableImportContext]
  -[MTCoreDataContainer persistentStoreUuid]
  -[MTCoreDataContainer addChangeNotifier:]
  -[MTCoreDataContainer removeChangeNotifier:]
  -[MTCoreDataContainer tearDownAsync:]
  -[MTCoreDataContainer setMainQueueContext:]
  -[MTCoreDataContainer setPrivateQueueContext:]
  -[MTCoreDataContainer setCarPlayContext:]
  -[MTCoreDataContainer setStoreContext:]
  -[MTCoreDataContainer setResetableImportContext:]


MTBaseQueryObserver : NSObject /usr/lib/libSystem.B.dylib <NSFetchedResultsControllerDelegate>
 @property  NSMutableDictionary *handlers
 @property  BOOL isObserving
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MTBaseQueryObserver fetchedResultsControllerClass]

  // instance methods
  -[MTBaseQueryObserver .cxx_destruct]
  -[MTBaseQueryObserver identifier]
  -[MTBaseQueryObserver setPredicate:]
  -[MTBaseQueryObserver predicate]
  -[MTBaseQueryObserver sortDescriptors]
  -[MTBaseQueryObserver stop]
  -[MTBaseQueryObserver setIdentifier:]
  -[MTBaseQueryObserver initWithFetchRequest:]
  -[MTBaseQueryObserver managedObjectContext]
  -[MTBaseQueryObserver startObserving]
  -[MTBaseQueryObserver handlers]
  -[MTBaseQueryObserver setHandlers:]
  -[MTBaseQueryObserver isObserving]
  -[MTBaseQueryObserver uuids]
  -[MTBaseQueryObserver setIsObserving:]
  -[MTBaseQueryObserver initWithEntityName:predicate:sortDescriptors:]
  -[MTBaseQueryObserver addResultsChangedHandler:]
  -[MTBaseQueryObserver results:]
  -[MTBaseQueryObserver _frc]
  -[MTBaseQueryObserver initWithEntityName:predicate:managedObjectContext:]
  -[MTBaseQueryObserver initWithFetchRequest:managedObjectContext:]
  -[MTBaseQueryObserver initWithEntityName:predicate:sortDescriptors:returnObjectsAsFaults:]
  -[MTBaseQueryObserver removeAllResultsChangedHandlers]
  -[MTBaseQueryObserver initWithEntityName:predicate:]
  -[MTBaseQueryObserver initWithEntityName:predicate:background:]
  -[MTBaseQueryObserver initWithEntityName:predicate:sortDescriptors:batchSize:propertiesToFetch:]
  -[MTBaseQueryObserver removeResultsChangedHandler:]


MTPodcastPlaylistSettings : NSManagedObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  int downloaded
 @property  long long episodesToShow
 @property  long long flags
 @property  long long mediaType
 @property  BOOL showPlayedEpisodes
 @property  long long sortOrder
 @property  NSString *uuid
 @property  BOOL visible
 @property  NSOrderedSet *episodes
 @property  MTPlaylist *playlist
 @property  MTPlaylist *playlistIfDefault
 @property  MTPodcast *podcast
 @property  long long playOrder

  // class methods
  +[MTPodcastPlaylistSettings predicateForPlaylistSettingsUuid:]

  // instance methods
  -[MTPodcastPlaylistSettings needsUpdate]
  -[MTPodcastPlaylistSettings setNeedsUpdate:]


MTBaseProcessor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_source> *timer
 @property  MTDefaultsChangeNotifier *defaultsNotifier
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject *isStoppingLock
 @property  BOOL isStopping
 @property  MTBaseQueryObserver *queryObserver

  // class methods
  +[MTBaseProcessor initialize]
  +[MTBaseProcessor sharedInstance]

  // instance methods
  -[MTBaseProcessor init]
  -[MTBaseProcessor .cxx_destruct]
  -[MTBaseProcessor predicate]
  -[MTBaseProcessor stop]
  -[MTBaseProcessor start]
  -[MTBaseProcessor isRunning]
  -[MTBaseProcessor timer]
  -[MTBaseProcessor setTimer:]
  -[MTBaseProcessor workQueue]
  -[MTBaseProcessor setWorkQueue:]
  -[MTBaseProcessor entityName]
  -[MTBaseProcessor isStopping]
  -[MTBaseProcessor enqueueWorkBlock:]
  -[MTBaseProcessor results:]
  -[MTBaseProcessor resultsChangedWithDeletedIds:andInsertIds:]
  -[MTBaseProcessor createQueryObserver]
  -[MTBaseProcessor setQueryObserver:]
  -[MTBaseProcessor queryObserver]
  -[MTBaseProcessor updatePredicateDuration]
  -[MTBaseProcessor updatePredicate]
  -[MTBaseProcessor defaultPropertiesThatAffectPredicate]
  -[MTBaseProcessor setDefaultsNotifier:]
  -[MTBaseProcessor defaultsNotifier]
  -[MTBaseProcessor setIsStopping:]
  -[MTBaseProcessor isStoppingLock]
  -[MTBaseProcessor setIsStoppingLock:]


MTSyncInfo : NSManagedObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSString *uuid
 @property  long long syncID
 @property  int entityType
 @property  int syncability
 @property  long long insertionRevision
 @property  long long updateRevision
 @property  long long artworkUpdateRevision
 @property  MTEpisode *episode
 @property  MTPlaylist *playlist
 @property  MTPodcast *podcast

  // class methods
  +[MTSyncInfo predicateForHasNoInverseRelation]
  +[MTSyncInfo predicateForIsCurrentlySyncable:]


MTPodcastDerivedPropertyObserver : MTPodcastAndEpisodeProcessor <MTDerivedPropertyChangeNotifying>
 @property  NSMutableDictionary *cache
 @property  NSMutableDictionary *handlers
 @property  NSMutableDictionary *podcastCache
 @property  NSArray *podcastDependencies
 @property  NSArray *episodePropertiesToFetch
 @property  @? didFinishProcessingContextSaveHandlerForTests

  // instance methods
  -[MTPodcastDerivedPropertyObserver init]
  -[MTPodcastDerivedPropertyObserver .cxx_destruct]
  -[MTPodcastDerivedPropertyObserver setCache:]
  -[MTPodcastDerivedPropertyObserver cache]
  -[MTPodcastDerivedPropertyObserver handlers]
  -[MTPodcastDerivedPropertyObserver setHandlers:]
  -[MTPodcastDerivedPropertyObserver podcastPredicate]
  -[MTPodcastDerivedPropertyObserver episodePredicateForPodcast:]
  -[MTPodcastDerivedPropertyObserver episodeSortDescriptorsForPodcast:]
  -[MTPodcastDerivedPropertyObserver createEpisodeObserverForPodcastUuid:predicate:sortDescriptors:]
  -[MTPodcastDerivedPropertyObserver createQueryObserver]
  -[MTPodcastDerivedPropertyObserver dependentPropertyForKey:forPodcastUuid:]
  -[MTPodcastDerivedPropertyObserver setDependentPropertyValue:forKey:forPodcastUuid:]
  -[MTPodcastDerivedPropertyObserver episodeResultsChangedForPodcastUuid:]
  -[MTPodcastDerivedPropertyObserver podcastDependencies]
  -[MTPodcastDerivedPropertyObserver reportStatsForPodcasts:]
  -[MTPodcastDerivedPropertyObserver updateEpisodePredicateForChangedResults:]
  -[MTPodcastDerivedPropertyObserver countOfNewEpisodesForEpisodes:]
  -[MTPodcastDerivedPropertyObserver countOfUnplayedEpisodesForEpisodes:andPredicateForEpisodesOnUnplayedTab:]
  -[MTPodcastDerivedPropertyObserver countOfMyMediaEpisodesForEpisodes:andPredicateForMyEpisodes:]
  -[MTPodcastDerivedPropertyObserver updateFlagForEpisodes:predicateForUnplayedTab:predicateForUserEpisodes:podcastUuid:ctx:]
  -[MTPodcastDerivedPropertyObserver setDerivedPropertyValue:forKey:forPodcast:]
  -[MTPodcastDerivedPropertyObserver notifyObserversForPodcast:]
  -[MTPodcastDerivedPropertyObserver didFinishProcessingContextSaveHandlerForTests]
  -[MTPodcastDerivedPropertyObserver derivedPropertiesForPodcast:]
  -[MTPodcastDerivedPropertyObserver episodePropertiesToFetch]
  -[MTPodcastDerivedPropertyObserver _predicateForEpisodesToUpdateWithPodcastUuid:predicateForUnplayedInUnplayedTab:predicateForUserEpisodes:predicateForListenNowEpisode:]
  -[MTPodcastDerivedPropertyObserver derivedPropertyValueForKey:forPodcast:]
  -[MTPodcastDerivedPropertyObserver podcastCache]
  -[MTPodcastDerivedPropertyObserver setPodcastCache:]
  -[MTPodcastDerivedPropertyObserver setPodcastDependencies:]
  -[MTPodcastDerivedPropertyObserver setEpisodePropertiesToFetch:]
  -[MTPodcastDerivedPropertyObserver setDidFinishProcessingContextSaveHandlerForTests:]
  -[MTPodcastDerivedPropertyObserver addDerivedPropertyChangeHandler:]
  -[MTPodcastDerivedPropertyObserver removeDerivedPropertyChangeHandler:]
  -[MTPodcastDerivedPropertyObserver countOfUnplayedEpisodesForPodcast:]
  -[MTPodcastDerivedPropertyObserver countOfMyMediaEpisodesForPodcast:]


MTLibraryMigrationUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTLibraryMigrationUtil isMomCompatible:]
  +[MTLibraryMigrationUtil isNewInstall]
  +[MTLibraryMigrationUtil createPersistentStoreForModel:attemptMigration:]
  +[MTLibraryMigrationUtil needsCoreDataMigration]
  +[MTLibraryMigrationUtil needsDataMigration]


MTMPCAssistantGenericPlaybackQueue : MPCAssistantPlaybackQueue /usr/lib/swift/libswiftAVFoundation.dylib
 @property  ^{_MRSystemAppPlaybackQueue=} playbackQueueRef

  // instance methods
  -[MTMPCAssistantGenericPlaybackQueue createRemotePlaybackQueue]
  -[MTMPCAssistantGenericPlaybackQueue initWithContextID:playbackQueueRef:]
  -[MTMPCAssistantGenericPlaybackQueue initWithPlaybackQueueRef:]
  -[MTMPCAssistantGenericPlaybackQueue playbackQueueRef]
  -[MTMPCAssistantGenericPlaybackQueue setPlaybackQueueRef:]


MTPlaybackQueueFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTPlaybackQueueFactory _episodeToPlayForPodcastUuid:playbackOrder:excludeExplicit:ctx:]
  +[MTPlaybackQueueFactory _uuidForEpisode:]
  +[MTPlaybackQueueFactory _isContinuousPlaybackEnabledForLimit:]
  +[MTPlaybackQueueFactory _latestEpisodeForPodcastUuid:restrictToUserEpisodes:excludeExplicit:ctx:]
  +[MTPlaybackQueueFactory _oldestEpisodeForPodcastUuid:restrictToUserEpisodes:excludeExplicit:ctx:]
  +[MTPlaybackQueueFactory _latestOrOldestEpisodeForPodcastUuid:restrictToUserEpisodes:excludeExplicit:latest:ctx:]
  +[MTPlaybackQueueFactory episodeUuidsForPlayPodcastUuid:order:limit:error:]
  +[MTPlaybackQueueFactory episodeUuidsForPlayStationUuid:limit:]


MTReachability : NSObject /usr/lib/libSystem.B.dylib <RadiosPreferencesDelegate>
 @property  ITMReachability *reachability
 @property  long long networkStatus
 @property  BOOL globalCellularEnabled
 @property  NSHashTable *callbacks
 @property  BOOL reachable
 @property  RadiosPreferences *radiosPreferences
 @property  NSObject<OS_dispatch_queue> *cellularQueue
 @property  BOOL hasDeterminedActualGlobalCellularState
 @property  BOOL airplaneModeEnabled
 @property  BOOL reachableViaCellular
 @property  BOOL reachableViaWifi
 @property  BOOL podcastsCellularDownloadsEnabled

  // class methods
  +[MTReachability allocWithZone:]
  +[MTReachability sharedInstance]

  // instance methods
  -[MTReachability init]
  -[MTReachability dealloc]
  -[MTReachability copy]
  -[MTReachability .cxx_destruct]
  -[MTReachability addObserver:]
  -[MTReachability removeObserver:]
  -[MTReachability airplaneModeChanged]
  -[MTReachability callbacks]
  -[MTReachability isAirplaneModeEnabled]
  -[MTReachability reachability]
  -[MTReachability setReachability:]
  -[MTReachability isReachable]
  -[MTReachability setReachable:]
  -[MTReachability networkStatus]
  -[MTReachability radiosPreferences]
  -[MTReachability setCallbacks:]
  -[MTReachability setNetworkStatus:]
  -[MTReachability _updateReachability]
  -[MTReachability _applicationDidBecomeActive]
  -[MTReachability reasonForNoInternet]
  -[MTReachability isGlobalCellularEnabled]
  -[MTReachability setGlobalCellularEnabled:]
  -[MTReachability reasonTextForNoInternet]
  -[MTReachability showInternetUnreachableDialogWithAcknowledmentBlock:]
  -[MTReachability _updateAirplaneMode]
  -[MTReachability _updateGlobalCellularWithCompletion:]
  -[MTReachability hasDeterminedActualGlobalCellularState]
  -[MTReachability setHasDeterminedActualGlobalCellularState:]
  -[MTReachability _showAlertForInternetUnavailableReason:completion:]
  -[MTReachability showInternetUnreachableDialog]
  -[MTReachability isPodcastsCellularDownloadsEnabled]
  -[MTReachability isReachableViaCellular]
  -[MTReachability isReachableViaWifi]
  -[MTReachability setRadiosPreferences:]
  -[MTReachability cellularQueue]
  -[MTReachability setCellularQueue:]


MTPodcastDetailDataSource : NSObject /usr/lib/libSystem.B.dylib <MTPodcastDetailEpisodeSectionDelegate>
 @property  NSString *podcastUuid
 @property  <MTPodcastDetailDataSourceDelegate> *delegate
 @property  unsigned long selectedTab
 @property  NSArray *sections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MTPodcastDetailDataSource sortDescriptorsForPodcastUuid:]
  +[MTPodcastDetailDataSource predicateForPodcast:sectionType:]
  +[MTPodcastDetailDataSource predicateForPlayingPodcast:sectionType:]

  // instance methods
  -[MTPodcastDetailDataSource delegate]
  -[MTPodcastDetailDataSource setDelegate:]
  -[MTPodcastDetailDataSource .cxx_destruct]
  -[MTPodcastDetailDataSource reloadData]
  -[MTPodcastDetailDataSource sections]
  -[MTPodcastDetailDataSource podcast]
  -[MTPodcastDetailDataSource selectedTab]
  -[MTPodcastDetailDataSource setSelectedTab:]
  -[MTPodcastDetailDataSource indexForSection:]
  -[MTPodcastDetailDataSource unplayedSections]
  -[MTPodcastDetailDataSource feedSections]
  -[MTPodcastDetailDataSource savedSections]
  -[MTPodcastDetailDataSource createSectionForLimitedUnplayed]
  -[MTPodcastDetailDataSource createSectionForOtherEpisodes]
  -[MTPodcastDetailDataSource createSectionForEmptyOverlay]
  -[MTPodcastDetailDataSource createSectionForPlayedToBeDeleted]
  -[MTPodcastDetailDataSource createSectionForFeed]
  -[MTPodcastDetailDataSource createSectionForSaved]
  -[MTPodcastDetailDataSource createSectionForIsFromiTunesSync]
  -[MTPodcastDetailDataSource sectionWillChangeContent:]
  -[MTPodcastDetailDataSource sectionDidChangeContent:]
  -[MTPodcastDetailDataSource podcastUuid]
  -[MTPodcastDetailDataSource episodeSection:didChangeObject:atIndex:forChangeType:newIndex:]
  -[MTPodcastDetailDataSource initWithPodcastUuid:]
  -[MTPodcastDetailDataSource createSectionForDarkPlacard]


MTPodcastDetailEpisodeSection : NSObject /usr/lib/libSystem.B.dylib <NSFetchedResultsControllerDelegate>
 @property  <MTFetchedResultsControllerProtocol> *frc
 @property  NSString *title
 @property  NSPredicate *predicate
 @property  NSArray *sortDescriptors
 @property  unsigned long sectionType
 @property  BOOL showTitleWithNoEpisodes
 @property  <MTPodcastDetailEpisodeSectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MTPodcastDetailEpisodeSection dependentPropertyKeys]

  // instance methods
  -[MTPodcastDetailEpisodeSection delegate]
  -[MTPodcastDetailEpisodeSection setDelegate:]
  -[MTPodcastDetailEpisodeSection .cxx_destruct]
  -[MTPodcastDetailEpisodeSection setPredicate:]
  -[MTPodcastDetailEpisodeSection predicate]
  -[MTPodcastDetailEpisodeSection sortDescriptors]
  -[MTPodcastDetailEpisodeSection setSortDescriptors:]
  -[MTPodcastDetailEpisodeSection title]
  -[MTPodcastDetailEpisodeSection setTitle:]
  -[MTPodcastDetailEpisodeSection loadData]
  -[MTPodcastDetailEpisodeSection controllerDidChangeContent:]
  -[MTPodcastDetailEpisodeSection controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:]
  -[MTPodcastDetailEpisodeSection controllerWillChangeContent:]
  -[MTPodcastDetailEpisodeSection sectionType]
  -[MTPodcastDetailEpisodeSection setSectionType:]
  -[MTPodcastDetailEpisodeSection episodes]
  -[MTPodcastDetailEpisodeSection setFrc:]
  -[MTPodcastDetailEpisodeSection initializeFrc]
  -[MTPodcastDetailEpisodeSection frc]
  -[MTPodcastDetailEpisodeSection indexOfEpisode:]
  -[MTPodcastDetailEpisodeSection showTitleWithNoEpisodes]
  -[MTPodcastDetailEpisodeSection setShowTitleWithNoEpisodes:]


MTPodcastDetailLimittedEpisodeSection : MTPodcastDetailEpisodeSection
 @property  long long episodeLimitResolvedValue

  // instance methods
  -[MTPodcastDetailLimittedEpisodeSection title]
  -[MTPodcastDetailLimittedEpisodeSection episodeLimitResolvedValue]
  -[MTPodcastDetailLimittedEpisodeSection setEpisodeLimitResolvedValue:]


MTEntitlementUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTEntitlementUtil podcastsAppUserDefaultsIfEntitled]
  +[MTEntitlementUtil _currentProcessValueForEntitlement:]


MTUTIUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTUTIUtil convertUti:]
  +[MTUTIUtil isVideo:]
  +[MTUTIUtil isAudio:]


MTPlaybackIdentifierUtil : MTSingleton <MTPlaybackIdentifierComposing>
  // class methods
  +[MTPlaybackIdentifierUtil __queryStringToQueryDictionary:]
  +[MTPlaybackIdentifierUtil __stringWithPercentEscape:]
  +[MTPlaybackIdentifierUtil __stringByRemovingPercentEscapes:]

  // instance methods
  -[MTPlaybackIdentifierUtil _playbackRequestIdentifierWithHost:queryKey:value:]
  -[MTPlaybackIdentifierUtil localPlaybackQueueIdentifierForPodcastUuid:episodeUuid:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:episodeUuid:episodeGuid:episodeStoreId:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil _universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:episodeUuid:episodeGuid:episodeStoreId:context:contextSortType:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil _playbackRequestIdentifierWithHost:queryComponents:]
  -[MTPlaybackIdentifierUtil localPlaybackQueueIdentifierForStationUuid:episodeUuid:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForStationUuid:episodeUuid:episodeGuid:episodeStoreId:podcastFeedUrl:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueRequestIdentifierForEpisode:]
  -[MTPlaybackIdentifierUtil playbackQueueWithDsid:forIdentifiers:]
  -[MTPlaybackIdentifierUtil playbackQueueIdentifierForPlayMyPodcastsWithPlaybackOrder:]
  -[MTPlaybackIdentifierUtil playbackQueueIdentifierForEpisodeAdamId:]
  -[MTPlaybackIdentifierUtil localPlaybackQueueIdentifierForPodcastUuid:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForPodcastFeedUrl:podcastStoreId:episodeGuid:episodeStoreId:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:episodeUuid:episodeGuid:episodeStoreId:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForPodcastUuid:podcastFeedUrl:podcastStoreId:episodeUuid:episodeGuid:episodeStoreId:context:contextSortType:]
  -[MTPlaybackIdentifierUtil playbackQueueIdentifierForPodcastAdamId:sampPlaybackOrder:]
  -[MTPlaybackIdentifierUtil playbackQueueIdentifierForSubscribeToPodcast:]
  -[MTPlaybackIdentifierUtil playbackQueueIdentifierForSubscribeToPodcastFeedUrl:]
  -[MTPlaybackIdentifierUtil localPlaybackQueueIdentifierForStationUuid:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifierForStationUuid:episodeGuid:episodeStoreId:podcastFeedUrl:]
  -[MTPlaybackIdentifierUtil universalPlaybackQueueIdentifiersForStationUuid:limit:queueStatus:]
  -[MTPlaybackIdentifierUtil playbackRequestURLWithPlayReason:baseRequestURLString:]
  -[MTPlaybackIdentifierUtil isLocalSetPlaybackQueueURLString:]
  -[MTPlaybackIdentifierUtil isSubscribeCommandURLString:]
  -[MTPlaybackIdentifierUtil isUniversalPlaybackIdentifierURLString:]
  -[MTPlaybackIdentifierUtil episodeUuidForSetPlaybackQueueRequestIdentifier:]
  -[MTPlaybackIdentifierUtil podcastUuidForSetPlaybackQueueRequestIdentifier:]
  -[MTPlaybackIdentifierUtil playbackQueueWithAccountInfoForIdentifiers:]
  -[MTPlaybackIdentifierUtil _playQueueTypeForRequestURL:]
  -[MTPlaybackIdentifierUtil _episodeOrderFromString:]
  -[MTPlaybackIdentifierUtil _playReasonFromString:]
  -[MTPlaybackIdentifierUtil _episodeContextFromString:]
  -[MTPlaybackIdentifierUtil _episodeContextSortFromString:]


MTURLCommandRequest : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *urlString
 @property  unsigned long commandType
 @property  unsigned long playQueueType
 @property  unsigned long playReason
 @property  long long playbackOrder
 @property  long long playContext
 @property  long long playContextSortType
 @property  NSString *podcastUuid
 @property  NSString *podcastFeedUrl
 @property  NSString *episodeUuid
 @property  NSString *podcastAdamId
 @property  NSString *episodeAdamId
 @property  NSString *stationUuid

  // instance methods
  -[MTURLCommandRequest copyWithZone:]
  -[MTURLCommandRequest .cxx_destruct]
  -[MTURLCommandRequest urlString]
  -[MTURLCommandRequest initWithURLString:]
  -[MTURLCommandRequest commandType]
  -[MTURLCommandRequest podcastUuid]
  -[MTURLCommandRequest _loadQueryParameterValuesFromString:]
  -[MTURLCommandRequest _lookupPodcastUuidIfNecessaryFromURLString:]
  -[MTURLCommandRequest _lookupEpisodeUuidIfNecessaryFromURLString:]
  -[MTURLCommandRequest episodeUuid]
  -[MTURLCommandRequest copyWithPlayReason:]
  -[MTURLCommandRequest playQueueType]
  -[MTURLCommandRequest playReason]
  -[MTURLCommandRequest playbackOrder]
  -[MTURLCommandRequest playContext]
  -[MTURLCommandRequest playContextSortType]
  -[MTURLCommandRequest podcastFeedUrl]
  -[MTURLCommandRequest podcastAdamId]
  -[MTURLCommandRequest episodeAdamId]
  -[MTURLCommandRequest stationUuid]


MTManagedObjectContext : NSManagedObjectContext /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  long long type

  // instance methods
  -[MTManagedObjectContext type]
  -[MTManagedObjectContext setType:]
  -[MTManagedObjectContext reset]
  -[MTManagedObjectContext existingObjectWithID:error:]
  -[MTManagedObjectContext executeFetchRequest:error:]
  -[MTManagedObjectContext performBlockAndWait:]
  -[MTManagedObjectContext countForFetchRequest:error:]
  -[MTManagedObjectContext objectWithID:]
  -[MTManagedObjectContext insertObject:]
  -[MTManagedObjectContext objectRegisteredForID:]
  -[MTManagedObjectContext deleteObject:]
  -[MTManagedObjectContext validateConcurencyType]
  -[MTManagedObjectContext handleError:withCallback:]
  -[MTManagedObjectContext _isInternalCoreDataQueue]
  -[MTManagedObjectContext seedCacheWithObjectsInEntity:predicate:]
  -[MTManagedObjectContext seedCacheWithObjectsInEntity:predicateFormat:]
  -[MTManagedObjectContext seedCacheWithObjectsInArray:forUUIDKey:entityName:]


MTRestrictionsUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTRestrictionsUtil _calculateIsRestrictionsPasscodeSet]
  +[MTRestrictionsUtil didDisplayExplicitRestrictionAlertOfType:]
  +[MTRestrictionsUtil isExplicitContentAllowed]
  +[MTRestrictionsUtil reloadSettings]
  +[MTRestrictionsUtil _fetchIsExplicitContentAllowed]
  +[MTRestrictionsUtil _isActiveAccountAllowedToUpdateRestrictions]
  +[MTRestrictionsUtil _userDefaultsKeyForExplicitRestrictionAlertType:]
  +[MTRestrictionsUtil explicitRestrictionAlertTypeForTypeString:]
  +[MTRestrictionsUtil _isRestrictedByAdministrator]
  +[MTRestrictionsUtil _setAllowExplicitContent]


MTPodcastUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTPodcastUtil stringForMostRecentEpisodeCount:]
  +[MTPodcastUtil stringForUnplayedEpisodeCount:titleCase:]
  +[MTPodcastUtil stringForUnplayedEpisodeCount:]
  +[MTPodcastUtil stringForSavedEpisodeCount:]
  +[MTPodcastUtil stringForNewEpisodeCount:titleCase:]
  +[MTPodcastUtil stringForATVFeedLastChangedForDate:]
  +[MTPodcastUtil stringForEpisodeCount:]
  +[MTPodcastUtil stringForUnplayedEpisodeCount:withSavedEpisodeCount:]
  +[MTPodcastUtil stringForNewEpisodeCount:]
  +[MTPodcastUtil stringForEpisodesInFeedCount:]
  +[MTPodcastUtil stringForATVFeedLastChangedForPodcast:]
  +[MTPodcastUtil episodeCountForPredicate:]
  +[MTPodcastUtil episodeTitlesForPredicate:]
  +[MTPodcastUtil countOfUnplayedEpisodesForPodcastUuid:]


MTShowTypeUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTShowTypeUtil showTypeFromString:]
  +[MTShowTypeUtil defaultShowType]
  +[MTShowTypeUtil applySettings:podcast:]


MTShowSettings : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL episodeOrderAscending
 @property  int downloadEpisodes
 @property  long long deletePlayedEpisodes
 @property  long long episodeLimit
 @property  long long updateInterval

  // instance methods
  -[MTShowSettings setUpdateInterval:]
  -[MTShowSettings updateInterval]
  -[MTShowSettings episodeLimit]
  -[MTShowSettings deletePlayedEpisodes]
  -[MTShowSettings episodeOrderAscending]
  -[MTShowSettings downloadEpisodes]
  -[MTShowSettings setDeletePlayedEpisodes:]
  -[MTShowSettings setEpisodeLimit:]
  -[MTShowSettings setEpisodeOrderAscending:]
  -[MTShowSettings setDownloadEpisodes:]


MTShowSettingsFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTShowSettingsFactory settingsForShowTypeEpisodic]
  +[MTShowSettingsFactory settingsForShowTypeSerial]
  +[MTShowSettingsFactory settingsForShowTypeTimely]
  +[MTShowSettingsFactory settingsForShowTypeDefault]
  +[MTShowSettingsFactory defaultSettingsForShowType:]


MTPodcast : NSManagedObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  BOOL sortAscending
 @property  BOOL isExplicit
 @property  BOOL playbackNewestToOldest
 @property  BOOL needsArtworkUpdate
 @property  BOOL importing
 @property  BOOL hasBeenSynced
 @property  BOOL isExplicit
 @property  BOOL sortAscending
 @property  BOOL playbackNewestToOldest
 @property  BOOL dark
 @property  BOOL feedDark
 @property  BOOL autodownloadDark
 @property  BOOL authenticatedDark
 @property  double addedDate
 @property  NSString *author
 @property  int autoDownloadType
 @property  NSString *category
 @property  long long darkCount
 @property  long long darkCountLocal
 @property  long long deletePlayedEpisodes
 @property  double downloadedDate
 @property  long long episodeLimit
 @property  NSString *feedURL
 @property  long long flags
 @property  BOOL hidden
 @property  NSString *imageURL
 @property  NSString *itemDescription
 @property  double lastDatePlayed
 @property  double lastTouchDate
 @property  BOOL notifications
 @property  BOOL orphanedFromCloud
 @property  long long podcastPID
 @property  NSString *provider
 @property  BOOL showPlacardForOrphanedFromCloud
 @property  BOOL showPlacardForRemovePlayedEpisodes
 @property  BOOL showPlacardForSavedEpisodes
 @property  long long sortOrder
 @property  long long storeCollectionId
 @property  NSString *storeCleanURL
 @property  NSString *storeShortURL
 @property  double lastStoreEpisodesInfoCheckDate
 @property  double lastStorePodcastInfoCheckDate
 @property  BOOL subscribed
 @property  NSString *title
 @property  double updateAvg
 @property  double updatedDate
 @property  NSString *updatedFeedURL
 @property  long long updateInterval
 @property  double updateStdDev
 @property  NSString *uuid
 @property  NSSet *episodes
 @property  NSSet *playlists
 @property  NSSet *playlistSettings
 @property  MTSyncInfo *syncInfo
 @property  NSString *showTypeInFeed
 @property  long long showTypeSetting
 @property  NSString *nextEpisodeUuid
 @property  double modifiedDate
 @property  NSString *webpageURL
 @property  double feedChangedDate
 @property  BOOL autoDownload
 @property  long long keepEpisodes

  // class methods
  +[MTPodcast predicateForAllPodcasts]
  +[MTPodcast predicateForOrphanedFromCloud:]
  +[MTPodcast predicateForAutoDownloadType:]
  +[MTPodcast autoDownloadDefaultValue]
  +[MTPodcast predicateForUpdateInterval:]
  +[MTPodcast updateIntervalDefaultValue]
  +[MTPodcast timeIntervalForUpdate:]
  +[MTPodcast isRedirectURL:]
  +[MTPodcast storeCollectionIdForRedirectURL:]
  +[MTPodcast predicateForPodcastStoreId:]
  +[MTPodcast userDefaultPropertiesAffectingPredicates]
  +[MTPodcast predicateForSubscribed:]
  +[MTPodcast predicateForSubscribedAndNotHidden:]
  +[MTPodcast predicateForSyncablePodcasts]
  +[MTPodcast predicateForHasBeenSynced:]
  +[MTPodcast predicateForAutoDownloadEnabled]
  +[MTPodcast predicateForUpdatablePodcasts]
  +[MTPodcast predicateForExcludingExplicitBasedOnSetting]
  +[MTPodcast predicateForPodcastWithFeedUrl:]
  +[MTPodcast predicateForPodcastWithTitle:]
  +[MTPodcast predicateForPodcastUuids:]
  +[MTPodcast predicateForPodcastUUID:]
  +[MTPodcast predicateForPodcastWithPodcastPID:]
  +[MTPodcast episodeLimitDefaultValue]
  +[MTPodcast deletePlayedEpisodesDefaultValue]
  +[MTPodcast _defaultsForLoadingDefaultValues]
  +[MTPodcast updateIntervalSettingForTimeInterval:]
  +[MTPodcast prepareForPlatform:]
  +[MTPodcast sortDescriptorsForNewestToOldest:]
  +[MTPodcast podcastUuidForFeedUrlString:ctx:]
  +[MTPodcast latestEpisodeUuidForPodcastUuid:ctx:]
  +[MTPodcast allPossibleEpisodeListSortOrderProperties]
  +[MTPodcast sortDescriptorsForOldestOnTop]
  +[MTPodcast sortDescriptorsForNewestOnTop]
  +[MTPodcast podcastUuidForFeedUrl:ctx:]
  +[MTPodcast podcastUuidForEpisodeUuid:ctx:]
  +[MTPodcast sortDescriptorsForDateAdded]
  +[MTPodcast sortDescriptorsForRecentlyUpdated]
  +[MTPodcast sortDescriptorsForManualOrder]
  +[MTPodcast sortDescriptorsForTitle]
  +[MTPodcast sortDescriptorsForAllPodcasts]
  +[MTPodcast sortDescriptorsForLastDatePlayed]
  +[MTPodcast insertNewPodcastInManagedObjectContext:subscribed:feedUrl:title:author:provider:category:imageUrl:description:]
  +[MTPodcast redirectURLForStoreCollectionId:]
  +[MTPodcast insertNewPodcastInManagedObjectContext:subscribed:feedUrl:title:author:provider:category:imageUrl:description:adamId:]
  +[MTPodcast totalUnplayedCount]
  +[MTPodcast setRemovePlayedEpisodesSetting:forPodcastUuid:]

  // instance methods
  -[MTPodcast setTitle:]
  -[MTPodcast setWebpageURL:]
  -[MTPodcast setAuthor:]
  -[MTPodcast setFlags:]
  -[MTPodcast shareURL]
  -[MTPodcast setImageURL:]
  -[MTPodcast setSubscribed:]
  -[MTPodcast redirectURL]
  -[MTPodcast setItemDescription:]
  -[MTPodcast setModifiedDate:]
  -[MTPodcast setIsExplicit:]
  -[MTPodcast isExplicit]
  -[MTPodcast isShareable]
  -[MTPodcast isDark]
  -[MTPodcast seasonNumbers]
  -[MTPodcast sortAscending]
  -[MTPodcast sortAscending]
  -[MTPodcast setSortAscending:]
  -[MTPodcast mt_syncID]
  -[MTPodcast isAuthenticatedDark]
  -[MTPodcast isPastAutodownloadDark]
  -[MTPodcast isPastFeedDark]
  -[MTPodcast episodesAfterEpisode:restrictToUserEpisodes:]
  -[MTPodcast newestUserEpisodeExcludingExplicit:]
  -[MTPodcast oldestUserEpisodeExcludingExplicit:]
  -[MTPodcast newestEpisodeExcludingUuid:excludeExplicit:]
  -[MTPodcast oldestEpisodeExcludingExplicit:]
  -[MTPodcast setPodcastPID:]
  -[MTPodcast playbackNewestToOldest]
  -[MTPodcast displayURL]
  -[MTPodcast autoDownloadResolvedValue]
  -[MTPodcast episodeLimitResolvedValue]
  -[MTPodcast deletePlayedEpisodesResolvedValue]
  -[MTPodcast sortDescriptorsForSortOrder]
  -[MTPodcast setLastDatePlayed:]
  -[MTPodcast markPlaylistsForUpdate]
  -[MTPodcast episodeOlderThanEpisode:]
  -[MTPodcast setPlaybackNewestToOldest:]
  -[MTPodcast setDeletePlayedEpisodes:]
  -[MTPodcast needsArtworkUpdate]
  -[MTPodcast updateCursorPosition:]
  -[MTPodcast mostRecentlyPlayedEpisode]
  -[MTPodcast userEpisodeAfterEpisode:]
  -[MTPodcast mostRecentlyPlayedEpisodeExcludingExplicit:]
  -[MTPodcast mostRecentlyPlayedEpisodeExcludingEpisodeUuid:restrictedToLibrary:excludeExplicit:]
  -[MTPodcast mostRecentlyPlayedEpisodeExcludingEpisodeUuid:restrictedToLibrary:excludeExplicit:excludeStreaming:]
  -[MTPodcast mostRecentlyPlayedEpisodeExcludingEpisodeUuid:restrictedToLibrary:]
  -[MTPodcast _episodeAfterEpisode:usePlayOrder:restrictToUserEpisodes:excludePlayed:]
  -[MTPodcast _episodesNextToEpisode:after:usePlayOrder:restrictToUserEpisodes:excludePlayed:excludeExplicit:limit:]
  -[MTPodcast userEpisodeNewerThanEpisode:excludePlayed:excludeExplicit:excludeStreaming:]
  -[MTPodcast _episodeAfterEpisode:usePlayOrder:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:]
  -[MTPodcast _episodeBeforeEpisode:usePlayOrder:restrictToUserEpisodes:excludePlayed:]
  -[MTPodcast _episodeAfterEpisode:usePlayOrder:restrictToUserEpisodes:excludePlayed:excludeExplicit:]
  -[MTPodcast _episodeNextToEpisode:after:usePlayOrder:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:]
  -[MTPodcast _episodeNextToEpisode:after:usePlayOrder:restrictToUserEpisodes:excludePlayed:excludeExplicit:]
  -[MTPodcast _episodesNextToEpisode:after:usePlayOrder:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:limit:]
  -[MTPodcast sortDescriptorsForPlayOrder]
  -[MTPodcast newestEpisodeExcludingUuid:excludeExplicit:excludeStreaming:]
  -[MTPodcast _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:excludingEpisodeUuid:]
  -[MTPodcast _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:episodeTypeFilter:]
  -[MTPodcast newestEpisodeNotPlayedExcludingExplicit:excludeStreaming:]
  -[MTPodcast _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:]
  -[MTPodcast _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:]
  -[MTPodcast newestUserEpisodeNotPlayedExcludingExplicit:excludeStreaming:]
  -[MTPodcast oldestEpisodeExcludingExplicit:excludeStreaming:]
  -[MTPodcast oldestEpisodeNotPlayedExcludingExplicit:]
  -[MTPodcast oldestEpisodeNotPlayedExcludingExplicit:excludingStreaming:]
  -[MTPodcast oldestUserEpisodeExcludingExplicit:excludeStreaming:]
  -[MTPodcast oldestUserEpisodeNotPlayedExcludingExplicit:excludeStreaming:]
  -[MTPodcast _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludeStreaming:excludingEpisodeUuid:episodeTypeFilter:]
  -[MTPodcast _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludingEpisodeUuid:episodeTypeFilter:]
  -[MTPodcast oldestEpisodeInLatestSeasonOrShowExcludingPlayed:excludeExplicit:]
  -[MTPodcast oldestEpisodeInLatestSeasonOrShowExcludingPlayed:excludeExplicit:excludeStreaming:]
  -[MTPodcast latestSeasonNumber]
  -[MTPodcast episodesInSeasonNumber:oldestEpisodesFirst:excludePlayed:excludeExplicit:excludeStreaming:limit:]
  -[MTPodcast _fetchRequestForDistinctSeasons]
  -[MTPodcast episodesInSeasonNumber:]
  -[MTPodcast episodesInSeasonNumber:oldestEpisodesFirst:]
  -[MTPodcast episodesInSeasonNumber:oldestEpisodesFirst:excludePlayed:excludeExplicit:limit:]
  -[MTPodcast currentFeedURL]
  -[MTPodcast setHasBeenSynced:]
  -[MTPodcast hasBeenSynced]
  -[MTPodcast setImporting:]
  -[MTPodcast importing]
  -[MTPodcast setNeedsArtworkUpdate:]
  -[MTPodcast setFeedChangedDate:]
  -[MTPodcast setUpdateStdDev:]
  -[MTPodcast setUpdateAvg:]
  -[MTPodcast setShowTypeInFeed:]
  -[MTPodcast showTypeResolvedValue]
  -[MTPodcast showTypeInFeedResolvedValue]
  -[MTPodcast isSerialShowTypeInFeed]
  -[MTPodcast setShowTypeSetting:]
  -[MTPodcast episodeToResume]
  -[MTPodcast mostRecentlyPlayedEpisodeExcludingExplicit:excludingStreaming:]
  -[MTPodcast mostRecentlyPlayedEpisodeRestrictedToLibrary:]
  -[MTPodcast mostRecentlyPlayedEpisodeExcludingEpisodeUuid:]
  -[MTPodcast mostRecentlyManuallyAddedEpisode]
  -[MTPodcast userEpisodesAfterEpisode:]
  -[MTPodcast userEpisodeNewerThanEpisode:excludePlayed:excludeExplicit:]
  -[MTPodcast episodeNewerThanEpisode:excludePlayed:]
  -[MTPodcast episodeNewerThanEpisode:]
  -[MTPodcast episodeAfterEpisode:]
  -[MTPodcast firstUserEpisodeNotPlayed]
  -[MTPodcast newestEpisode]
  -[MTPodcast newestFullEpisode]
  -[MTPodcast newestEpisodeNotPlayedExcludingExplicit:]
  -[MTPodcast newestUserEpisodeNotPlayedExcludingExplicit:]
  -[MTPodcast oldestEpisode]
  -[MTPodcast oldestFullEpisode]
  -[MTPodcast oldestEpisodeNotPlayed]
  -[MTPodcast oldestUserEpisode]
  -[MTPodcast oldestUserEpisodeNotPlayedExcludingExplicit:]
  -[MTPodcast newestEpisodeUuid]
  -[MTPodcast _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:]
  -[MTPodcast _latestOrOldestEpisode:restrictToUserEpisodes:excludePlayed:excludeExplicit:excludingEpisodeUuid:]
  -[MTPodcast oldestEpisodeInLatestSeasonOrShow]
  -[MTPodcast hasAtLeastOneSeason]
  -[MTPodcast hasMultipleSeasons]
  -[MTPodcast episodesInLatestSeason]
  -[MTPodcast bestDescription]
  -[MTPodcast updateLastTouchDate]
  -[MTPodcast updateEpisodesMetadataIdentifiers]
  -[MTPodcast bestAvailableStoreCleanURL]
  -[MTPodcast setUpdatedFeedURL:]
  -[MTPodcast twitterShareURL]
  -[MTPodcast setOrphanedFromCloud:]
  -[MTPodcast setAuthenticatedDark:]
  -[MTPodcast resetGoDark]
  -[MTPodcast countOfNewEpisodes]
  -[MTPodcast countOfUnplayedEpisodes]
  -[MTPodcast bestFeedURLExcludingRedirectURL:]
  -[MTPodcast countOfMyEpisodes]


MTEpisodeLookupUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTEpisodeLookupUtil findEpisodeWithRequest:]
  +[MTEpisodeLookupUtil findEpisodeWithRequest:context:]
  +[MTEpisodeLookupUtil _episodeMatchFromPredicate:]
  +[MTEpisodeLookupUtil _episodeMatchFromPredicate:context:]
  +[MTEpisodeLookupUtil findPodcastWithFeedUrl:]
  +[MTEpisodeLookupUtil _podcastMatchFromPredicate:]
  +[MTEpisodeLookupUtil _podcastMatchFromPredicate:context:]
  +[MTEpisodeLookupUtil _entityForFetchRequest:context:]
  +[MTEpisodeLookupUtil findEpisodeFromModelObject:]
  +[MTEpisodeLookupUtil _entityForFetchRequest:]


MTEpisodeLookupRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *uuid
 @property  long long storeTrackId
 @property  long long persistentID
 @property  NSString *episodeGuid
 @property  NSString *podcastFeedUrl
 @property  NSString *episodeTitle
 @property  NSString *podcastTitle
 @property  NSString *streamUrl

  // instance methods
  -[MTEpisodeLookupRequest .cxx_destruct]
  -[MTEpisodeLookupRequest uuid]
  -[MTEpisodeLookupRequest setUuid:]
  -[MTEpisodeLookupRequest persistentID]
  -[MTEpisodeLookupRequest setPersistentID:]
  -[MTEpisodeLookupRequest podcastTitle]
  -[MTEpisodeLookupRequest streamUrl]
  -[MTEpisodeLookupRequest setStreamUrl:]
  -[MTEpisodeLookupRequest setStoreTrackId:]
  -[MTEpisodeLookupRequest storeTrackId]
  -[MTEpisodeLookupRequest setEpisodeGuid:]
  -[MTEpisodeLookupRequest setEpisodeTitle:]
  -[MTEpisodeLookupRequest setPodcastTitle:]
  -[MTEpisodeLookupRequest setPodcastFeedUrl:]
  -[MTEpisodeLookupRequest podcastFeedUrl]
  -[MTEpisodeLookupRequest episodeGuid]
  -[MTEpisodeLookupRequest episodeTitle]


MTMediaTask : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSMediaTask *mediaTask
 @property  NSArray *identifiers

  // instance methods
  -[MTMediaTask .cxx_destruct]
  -[MTMediaTask initWithType:]
  -[MTMediaTask identifiers]
  -[MTMediaTask setIdentifiers:]
  -[MTMediaTask perform:]
  -[MTMediaTask mediaTask]
  -[MTMediaTask setMediaTask:]


MTMediaContentSource : NSObject /usr/lib/libSystem.B.dylib

MTMediaContentSourceiOSMusicLibrary : MTMediaContentSource
 @property  BOOL iTunesMatchEnabled

  // class methods
  +[MTMediaContentSourceiOSMusicLibrary sharedInstance]

  // instance methods
  -[MTMediaContentSourceiOSMusicLibrary determineiTunesMatchEnabledWithCompletion:]
  -[MTMediaContentSourceiOSMusicLibrary iTunesMatchEnabled]


MTAccountUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTAccountUtil activeAccount]
  +[MTAccountUtil activeDsid]
  +[MTAccountUtil activeStorefront]
  +[MTAccountUtil activeEmail]
  +[MTAccountUtil activeFullName]
  +[MTAccountUtil isUserLoggedIn]
  +[MTAccountUtil activeAccountIsManagedAppleID]
  +[MTAccountUtil iTunesAccountDidChangeForACAccountNotification:]


MTSyncUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTSyncUtil setSyncDirtyFlag:]
  +[MTSyncUtil syncDirtyFlag]
  +[MTSyncUtil setPlaylistSyncDirtyFlag:]
  +[MTSyncUtil playlistSyncDirtyFlag]
  +[MTSyncUtil isSubscriptionSyncEnabled]
  +[MTSyncUtil podcastsDomainVersion]
  +[MTSyncUtil setPodcastsDomainVersion:]


MTAllPropertyChangesQueryObserver : MTBaseQueryObserver <NSFetchedResultsControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTAllPropertyChangesQueryObserver startObserving]
  -[MTAllPropertyChangesQueryObserver controllerDidChangeContent:]
  -[MTAllPropertyChangesQueryObserver notifyObservers]
  -[MTAllPropertyChangesQueryObserver addResultsChangedHandler:]


MTPreferences : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTPreferences sharedUserDefaults]
  +[MTPreferences _defaultSettings]
  +[MTPreferences registerDefaults]
  +[MTPreferences moveUserDefaultToSharedContainer:]
  +[MTPreferences copySettingsToSharedContainer]
  +[MTPreferences _copyUserDefaultToSharedContainer:synchronize:]


MTPlaylist : NSManagedObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  BOOL isFolder
 @property  BOOL isITunesPlaylist
 @property  int containerOrder
 @property  long long downloadedCount
 @property  long long flags
 @property  double generatedDate
 @property  BOOL hidden
 @property  long long mediaLibraryId
 @property  long long parentMediaLibraryId
 @property  long long sortOrder
 @property  NSString *title
 @property  long long unplayedCount
 @property  double updatedDate
 @property  NSString *uuid
 @property  NSSet *addedEpisodes
 @property  MTPodcastPlaylistSettings *defaultSettings
 @property  NSSet *deletedEpisodes
 @property  NSOrderedSet *episodes
 @property  NSOrderedSet *podcasts
 @property  NSOrderedSet *settings
 @property  MTSyncInfo *syncInfo

  // instance methods
  -[MTPlaylist needsUpdate]
  -[MTPlaylist setNeedsUpdate:]
  -[MTPlaylist isFolder]
  -[MTPlaylist mt_syncID]
  -[MTPlaylist isITunesPlaylist]
  -[MTPlaylist setMediaLibraryId:]


MTLibraryQuery : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *podcastResults
 @property  NSArray *episodeResults
 @property  NSPredicate *podcastPredicate
 @property  NSPredicate *episodePredicate
 @property  NSArray *podcastSortDescriptors
 @property  NSArray *episodeSortDescriptors
 @property  @? action
 @property  long long fetchLimit
 @property  BOOL active

  // instance methods
  -[MTLibraryQuery init]
  -[MTLibraryQuery .cxx_destruct]
  -[MTLibraryQuery isActive]
  -[MTLibraryQuery setActive:]
  -[MTLibraryQuery action]
  -[MTLibraryQuery fetchLimit]
  -[MTLibraryQuery setFetchLimit:]
  -[MTLibraryQuery setAction:]
  -[MTLibraryQuery podcastPredicate]
  -[MTLibraryQuery setPodcastPredicate:]
  -[MTLibraryQuery setEpisodePredicate:]
  -[MTLibraryQuery runQuery]
  -[MTLibraryQuery runQueryInContext:]
  -[MTLibraryQuery setPodcastResults:]
  -[MTLibraryQuery setEpisodeResults:]
  -[MTLibraryQuery runQueryWithPodcastPredicate:episodePredicate:]
  -[MTLibraryQuery podcastResults]
  -[MTLibraryQuery episodeResults]
  -[MTLibraryQuery episodePredicate]
  -[MTLibraryQuery podcastSortDescriptors]
  -[MTLibraryQuery setPodcastSortDescriptors:]
  -[MTLibraryQuery episodeSortDescriptors]
  -[MTLibraryQuery setEpisodeSortDescriptors:]


MTTextQuery : MTLibraryQuery
  // instance methods
  -[MTTextQuery runQueryWithText:]
  -[MTTextQuery titleForPodcastUuid:]


MTDBConfig : NSObject /usr/lib/libSystem.B.dylib <MTCoreDataContainerConfigProvider>
 @property  NSManagedObjectModel *model

  // instance methods
  -[MTDBConfig .cxx_destruct]
  -[MTDBConfig model]
  -[MTDBConfig setModel:]
  -[MTDBConfig managedObjectModel]
  -[MTDBConfig databaseFileUrl]
  -[MTDBConfig peristentStoreOptions]


MTDB : MTSingleton <NSManagedObjectContextProvider>
 @property  MTCoreDataContainer *coreDataContainer
 @property  MTDBConfig *config
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MTDB libraryPath]
  +[MTDB isCorrupt]
  +[MTDB fetchManagedObjectModelFromDisk]
  +[MTDB libraryDataVersion]
  +[MTDB canExtensionOpenDatabase]
  +[MTDB libraryShmPath]
  +[MTDB libraryWalPath]
  +[MTDB coreDataVersion]

  // instance methods
  -[MTDB init]
  -[MTDB .cxx_destruct]
  -[MTDB config]
  -[MTDB setConfig:]
  -[MTDB managedObjectModel]
  -[MTDB importContext]
  -[MTDB mainQueueContext]
  -[MTDB privateQueueContext]
  -[MTDB mainOrPrivateContext]
  -[MTDB carPlayContext]
  -[MTDB storeContext]
  -[MTDB resetableImportContext]
  -[MTDB persistentStoreUuid]
  -[MTDB addChangeNotifier:]
  -[MTDB removeChangeNotifier:]
  -[MTDB setCoreDataContainer:]
  -[MTDB coreDataContainer]


MTEpisode : NSManagedObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSString *assetURL
 @property  BOOL audio
 @property  BOOL saved
 @property  NSString *author
 @property  long long byteSize
 @property  NSString *category
 @property  NSString *cleanedTitle
 @property  double downloadDate
 @property  NSString *downloadPath
 @property  double duration
 @property  NSString *enclosureURL
 @property  long long episodeLevel
 @property  BOOL explicit
 @property  BOOL externalType
 @property  BOOL feedDeleted
 @property  long long flags
 @property  BOOL isFromITunesSync
 @property  NSString *guid
 @property  int importSource
 @property  double importDate
 @property  BOOL isNew
 @property  NSString *itemDescription
 @property  BOOL itemDescriptionHasHTML
 @property  NSAttributedString *itemDescriptionWithHTML
 @property  NSString *itemDescriptionWithoutHTML
 @property  double lastDatePlayed
 @property  double lastUserMarkedAsPlayedDate
 @property  NSString *metadataIdentifier
 @property  double metadataTimestamp
 @property  BOOL metadataFirstSyncEligible
 @property  long long persistentID
 @property  long long playCount
 @property  float playhead
 @property  BOOL backCatalog
 @property  long long playState
 @property  long long playStateSource
 @property  BOOL playStateManuallySet
 @property  double playStateLastModifiedDate
 @property  NSString *podcastUuid
 @property  double pubDate
 @property  BOOL sentNotification
 @property  long long storeTrackId
 @property  BOOL suppressAutoDownload
 @property  NSString *title
 @property  long long trackNum
 @property  BOOL unplayedTab
 @property  NSString *uti
 @property  NSString *uuid
 @property  BOOL video
 @property  NSSet *playlists
 @property  MTPodcast *podcast
 @property  NSSet *settings
 @property  MTSyncInfo *syncInfo
 @property  BOOL userEpisode
 @property  BOOL listenNowEpisode
 @property  NSString *itunesTitle
 @property  NSString *itunesSubtitle
 @property  long long seasonNumber
 @property  long long episodeNumber
 @property  NSString *episodeType
 @property  NSString *webpageURL
 @property  NSData *securityScopedAssetData
 @property  BOOL visible
 @property  BOOL userDeleted
 @property  BOOL manuallyAdded
 @property  BOOL hasBeenPlayed

  // class methods
  +[MTEpisode exists:]
  +[MTEpisode userDefaultPropertiesAffectingPredicates]
  +[MTEpisode predicateForIsFromiTunesSync:]
  +[MTEpisode predicateForAllEpisodesOnPodcastUuid:]
  +[MTEpisode predicateForUserEpisodesOnPodcastUuid:ctx:]
  +[MTEpisode predicateForEpisodesOnUnplayedTabOnPodcastUuid:ctx:]
  +[MTEpisode predicateForPlayed:]
  +[MTEpisode predicateForUnplayedTabFlag:]
  +[MTEpisode predicateForUserEpisode:]
  +[MTEpisode predicateForIsNew:]
  +[MTEpisode predicateForExternalType:]
  +[MTEpisode predicateForOtherEpisodesOnPodcastUuid:limittedEpisodesPredicate:deletePlayedEpisodes:]
  +[MTEpisode predicateForLimittedEpisodesOnPodcastUuid:determinedByLimit:deletePlayedEpisodes:]
  +[MTEpisode predicateForRecentlyPlayedEpisodesToBeDeletedOnPodcastUuid:deletePlayedEpisodes:]
  +[MTEpisode predicateForSavedEpisodesOnPodcastUuid:]
  +[MTEpisode predicateForEpisodesInFeedForPodcastUuid:]
  +[MTEpisode predicateForEpisodesIsFromiTunesSyncOnPodcastUuid:]
  +[MTEpisode predicateForUserEpisodesOnPodcastUuid:episodeLimit:deletePlayedEpisodes:]
  +[MTEpisode predicateForEpisodesDeterminedByLimitSettings:]
  +[MTEpisode predicateForPlayStateManuallySet:]
  +[MTEpisode predicateForSaved:]
  +[MTEpisode predicateForBacklog:]
  +[MTEpisode predicateForEpisodeStoreTrackIds:]
  +[MTEpisode predicateForHasBeenPlayed]
  +[MTEpisode predicateForPodcastIsHidden:]
  +[MTEpisode predicateForEpisodeType:]
  +[MTEpisode predicateForRecentlyPlayed]
  +[MTEpisode predicateForEpisodesOnUnplayedTabOnPodcastUuid:episodeLimit:deletePlayedEpisodes:]
  +[MTEpisode predicateForFeedDeleted:]
  +[MTEpisode predicateForEpisodesOnSavedTabForPodcastUuid:]
  +[MTEpisode predicateForHasSeasonNumber]
  +[MTEpisode predicateForSuppressAutoDownload:]
  +[MTEpisode predicateForSentNotification:]
  +[MTEpisode predicateForExplicit:]
  +[MTEpisode predicateForSavedTab:]
  +[MTEpisode predicateForIsBackCatalogItem]
  +[MTEpisode predicateForVisuallyPlayed:]
  +[MTEpisode predicateForPreviouslyPlayed]
  +[MTEpisode predicateForEpisodesOnUnplayedTab]
  +[MTEpisode predicateForUserEpisodes]
  +[MTEpisode predicateForListenNow]
  +[MTEpisode predicateForDownloaded:]
  +[MTEpisode predicateForVideo:]
  +[MTEpisode predicateForAudio:]
  +[MTEpisode predicateForMetadataFirstSyncEligible:]
  +[MTEpisode predicateForEpisodeUuid:]
  +[MTEpisode predicateForEpisodeUuids:]
  +[MTEpisode predicateForEpisodeGuid:]
  +[MTEpisode predicateForEpisodeGuids:]
  +[MTEpisode predicateForFeedURL:]
  +[MTEpisode predicateForFeedURLs:]
  +[MTEpisode predicateForPersistentId:]
  +[MTEpisode predicateForPersistentIds:]
  +[MTEpisode predicateForHasValidPersistentId:]
  +[MTEpisode predicateForEpisodeTitle:]
  +[MTEpisode predicateForEpisodesImportedAfterDate:]
  +[MTEpisode predicateForEpisodeTypeFilter:]
  +[MTEpisode predicateForMyEpisodesOnPodcastUuid:episodeLimit:deletePlayedEpisodes:]
  +[MTEpisode predicateForPlaylistEpisodes]
  +[MTEpisode predicateForEpisodesPublishedToday]
  +[MTEpisode predicateForEpisodesPublishedThisWeek]
  +[MTEpisode predicateForEpisodesPublishedThisMonth]
  +[MTEpisode predicateForNewEpisodesOnPodcastUuid:]
  +[MTEpisode predicateForEpisodesInStationShow:]
  +[MTEpisode predicateForMyEpisodesOnPodcastUuid:ctx:]
  +[MTEpisode predicateForEpisodeStoreTrackId:]
  +[MTEpisode predicateForEpisodeGuid:onPodcastUuid:]
  +[MTEpisode predicateForEpisodeTitle:onPodcastUuid:]
  +[MTEpisode predicateForSeasonNumber:]
  +[MTEpisode predicateForEpisodesWithSeasonNumbersOnPodcastUuid:]
  +[MTEpisode insertNewEpisodeInManagedObjectContext:]
  +[MTEpisode prepareForPlatform:]
  +[MTEpisode downloadSizeLimitForEpisode:]
  +[MTEpisode friendlyPubDateStringForEpisode:abbreviated:]
  +[MTEpisode timeRemainingStringForEpisode:abbreviated:]
  +[MTEpisode downloadSizeLimitForVideo:]
  +[MTEpisode insertNewEpisodeInManagedObjectContext:title:podcast:pubDate:byteSize:guid:uti:contentId:enclosureUrl:playStateSource:importSource:]
  +[MTEpisode episodeWithMetadataIdentifier:inManagedObjectContext:]
  +[MTEpisode episodeWithEnclosureURL:inManagedObjectContext:]
  +[MTEpisode dateLabelDescriptionForEpisode:download:]
  +[MTEpisode friendlyPubDateStringForEpisode:]
  +[MTEpisode timeRemainingStringForEpisode:]
  +[MTEpisode isSaveSupported]
  +[MTEpisode isExternalMedia:]
  +[MTEpisode parseAndPersistHTMLDescriptionIfNeededForEpisodeUuid:]
  +[MTEpisode sortDescriptorsForSeasonsWithOldestEpisodesFirst:]
  +[MTEpisode sortDescriptorsForTitle]
  +[MTEpisode sortDescriptorsForLastDatePlayedAscending:]
  +[MTEpisode sortDescriptorsForPubDateAscending:]
  +[MTEpisode sortDescriptorsForRecentlyPlayed]
  +[MTEpisode sortDescriptorsForListenNow]
  +[MTEpisode endOfTrackForDuration:]
  +[MTEpisode isPlayhead:resumableForDuration:]
  +[MTEpisode propertyPathForPodcastProperty:]

  // instance methods
  -[MTEpisode setTitle:]
  -[MTEpisode setWebpageURL:]
  -[MTEpisode isRestricted]
  -[MTEpisode setUti:]
  -[MTEpisode setAuthor:]
  -[MTEpisode setPersistentID:]
  -[MTEpisode setDuration:]
  -[MTEpisode isVideo]
  -[MTEpisode isDownloaded]
  -[MTEpisode assetURL]
  -[MTEpisode setAssetURL:]
  -[MTEpisode setAssetURL:]
  -[MTEpisode setGuid:]
  -[MTEpisode isPlayed]
  -[MTEpisode isAudio]
  -[MTEpisode isPlayable]
  -[MTEpisode setPlayCount:]
  -[MTEpisode playbackProgress]
  -[MTEpisode setPodcast:]
  -[MTEpisode setEpisodeNumber:]
  -[MTEpisode setSeasonNumber:]
  -[MTEpisode setEpisodeType:]
  -[MTEpisode timeRemaining]
  -[MTEpisode isSaved]
  -[MTEpisode setItemDescription:]
  -[MTEpisode setSaved:]
  -[MTEpisode isExplicit]
  -[MTEpisode setIsNew:]
  -[MTEpisode isMedia]
  -[MTEpisode isShareable]
  -[MTEpisode setExplicit:]
  -[MTEpisode playURL]
  -[MTEpisode numberedTitle]
  -[MTEpisode setPlayhead:]
  -[MTEpisode isTrailer]
  -[MTEpisode setPubDate:]
  -[MTEpisode mt_syncID]
  -[MTEpisode setListenNowEpisode:]
  -[MTEpisode isInUserEpisodes]
  -[MTEpisode displayURL]
  -[MTEpisode setStoreTrackId:]
  -[MTEpisode setByteSize:]
  -[MTEpisode setEnclosureURL:]
  -[MTEpisode setPlayState:manually:source:]
  -[MTEpisode setLastDatePlayed:]
  -[MTEpisode setMetadataFirstSyncEligible:]
  -[MTEpisode isExternalType]
  -[MTEpisode updateUPPIdentifierIfNeeded]
  -[MTEpisode reasonForNotPlayable]
  -[MTEpisode _setValue:forKey:asynchronously:]
  -[MTEpisode lazyDescriptionWithHTML:]
  -[MTEpisode isVisuallyPlayed]
  -[MTEpisode updateUPPTimestamp]
  -[MTEpisode isLatestEpisodeInPodcast]
  -[MTEpisode isInMyEpisodes]
  -[MTEpisode isInPodcastDetailsUnplayedTab]
  -[MTEpisode setItunesSubtitle:]
  -[MTEpisode playedText]
  -[MTEpisode playedTextForCarplay]
  -[MTEpisode didChangePersistentID]
  -[MTEpisode incremementPlayCount]
  -[MTEpisode setPlayed:manually:source:]
  -[MTEpisode metricsContentIdentifier]
  -[MTEpisode setPodcastUuid:]
  -[MTEpisode isPlayheadResumable]
  -[MTEpisode setTrackNum:]
  -[MTEpisode bestTitle]
  -[MTEpisode isBackCatalogItem]
  -[MTEpisode isPlayheadPartiallyPlayed]
  -[MTEpisode _setAssetUrl:]
  -[MTEpisode episodeTypeResolvedValue]
  -[MTEpisode setFeedDeleted:]
  -[MTEpisode setCleanedTitle:]
  -[MTEpisode setEpisodeLevel:]
  -[MTEpisode setItunesTitle:]
  -[MTEpisode bestSummary]
  -[MTEpisode isPartiallyPlayed]
  -[MTEpisode isUnplayed]
  -[MTEpisode isPartiallyPlayedBackCatalogItem]
  -[MTEpisode endOfTrack]
  -[MTEpisode bestUrl]
  -[MTEpisode isBonus]
  -[MTEpisode isTopLevelEpisode]
  -[MTEpisode setIsTopLevelEpisode:]


MTCoalescableWorkController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  BOOL verboseDebugLoggingEnabled
 @property  unsigned int qosClass
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  MTCoalescableWorkManifest *activeWorkManifest
 @property  MTCoalescableWorkManifest *pendingWorkManifest

  // class methods
  +[MTCoalescableWorkController _uniqueGenericIdentifier]
  +[MTCoalescableWorkController controllerWithQosClass:identifier:]

  // instance methods
  -[MTCoalescableWorkController .cxx_destruct]
  -[MTCoalescableWorkController identifier]
  -[MTCoalescableWorkController setIdentifier:]
  -[MTCoalescableWorkController workQueue]
  -[MTCoalescableWorkController setWorkQueue:]
  -[MTCoalescableWorkController qosClass]
  -[MTCoalescableWorkController setQosClass:]
  -[MTCoalescableWorkController schedule:]
  -[MTCoalescableWorkController initWithWorkQueue:identifier:]
  -[MTCoalescableWorkController activeWorkManifest]
  -[MTCoalescableWorkController pendingWorkManifest]
  -[MTCoalescableWorkController schedule:completion:]
  -[MTCoalescableWorkController _syncScheduleUpdatePendingWork:completion:]
  -[MTCoalescableWorkController _syncScheduleStartActiveWork:completion:]
  -[MTCoalescableWorkController verboseDebugLoggingEnabled]
  -[MTCoalescableWorkController setPendingWorkManifest:]
  -[MTCoalescableWorkController setActiveWorkManifest:]
  -[MTCoalescableWorkController _onWorkQueuePerformActiveWorkBlock]
  -[MTCoalescableWorkController setVerboseDebugLoggingEnabled:]


MTCoalescableWorkManifest : NSObject /usr/lib/libSystem.B.dylib
 @property  @? workBlock
 @property  NSArray *completions

  // instance methods
  -[MTCoalescableWorkManifest .cxx_destruct]
  -[MTCoalescableWorkManifest completions]
  -[MTCoalescableWorkManifest setCompletions:]
  -[MTCoalescableWorkManifest workBlock]
  -[MTCoalescableWorkManifest setWorkBlock:]
  -[MTCoalescableWorkManifest initWithWorkBlock:completion:]
  -[MTCoalescableWorkManifest manifestByReplacingWorkBlock:appendingCompletion:]
  -[MTCoalescableWorkManifest initWithWorkBlock:completions:]


MTUuidQueryObserver : MTBaseQueryObserver
 @property  NSSet *uuidSet
 @property  NSArray *uuidOrder

  // instance methods
  -[MTUuidQueryObserver .cxx_destruct]
  -[MTUuidQueryObserver startObserving]
  -[MTUuidQueryObserver controllerDidChangeContent:]
  -[MTUuidQueryObserver setUuidSet:]
  -[MTUuidQueryObserver uuidSet]
  -[MTUuidQueryObserver notifyObservers]
  -[MTUuidQueryObserver addResultsChangedHandler:]
  -[MTUuidQueryObserver uuidOrder]
  -[MTUuidQueryObserver setUuidOrder:]


MTConstants : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTConstants cachesDirectory]
  +[MTConstants sharedContainerURL]
  +[MTConstants documentsDirectory]
  +[MTConstants sharedDocumentsDirectory]
  +[MTConstants managedObjectModelDefinitionURL]
  +[MTConstants sharedCacheDirectory]
  +[MTConstants managedAssetsDirectoryURL]


MTImageStoreConstants : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTImageStoreConstants defaultImageStoreURL]
  +[MTImageStoreConstants imagePathForPodcastUuid:relativeToURL:]


MTDBUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTDBUtil isSupportedUrlString:]


MTStoreIdentifier : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *storeIdentifier
 @property  NSString *feedUrl

  // class methods
  +[MTStoreIdentifier isEmpty:]
  +[MTStoreIdentifier adamIDFromSerpentId:]
  +[MTStoreIdentifier serpentIdFromAdamId:]
  +[MTStoreIdentifier isEmptyNumber:]
  +[MTStoreIdentifier adamIdNumberFromSerpentIdNumber:]
  +[MTStoreIdentifier serpentIdNumberFromAdamIdNumber:]
  +[MTStoreIdentifier podcastPredicateForIdentifer:]
  +[MTStoreIdentifier isNotEmpty:]
  +[MTStoreIdentifier identifierWithFeedUrl:]
  +[MTStoreIdentifier identifierWithFeedUrl:storeIdentifier:]
  +[MTStoreIdentifier episodePredicateForIdentifier:]
  +[MTStoreIdentifier adamIDListFromSerpentIdList:]
  +[MTStoreIdentifier adamIdNumberFromStoreId:]
  +[MTStoreIdentifier serpentIdListFromAdamIDList:]
  +[MTStoreIdentifier serpentIdNumberFromStoreId:]
  +[MTStoreIdentifier isNotEmptyNumber:]

  // instance methods
  -[MTStoreIdentifier .cxx_destruct]
  -[MTStoreIdentifier storeIdentifier]
  -[MTStoreIdentifier setStoreIdentifier:]
  -[MTStoreIdentifier setFeedUrl:]
  -[MTStoreIdentifier feedUrl]
  -[MTStoreIdentifier initWithFeedUrl:storeIdentifier:]
  -[MTStoreIdentifier initWithFeedUrl:]


MTShowsPreferencesDataStore : NSObject /usr/lib/libSystem.B.dylib
 @property  long long sortOrder

  // class methods
  +[MTShowsPreferencesDataStore allocWithZone:]
  +[MTShowsPreferencesDataStore sharedInstance]
  +[MTShowsPreferencesDataStore sortDescriptorsForSortType:]

  // instance methods
  -[MTShowsPreferencesDataStore sortDescriptors]
  -[MTShowsPreferencesDataStore sortOrder]
  -[MTShowsPreferencesDataStore setSortOrder:]
  -[MTShowsPreferencesDataStore _sortTypeForString:]
  -[MTShowsPreferencesDataStore _stringForSortType:]


MTTheme : NSManagedObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSString *uuid
 @property  UIColor *backgroundColor
 @property  UIColor *primaryTextColor
 @property  UIColor *secondaryTextColor
 @property  BOOL isBackgroundLight


MTDictionaryDiff : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *callbacks
 @property  NSDictionary *dictionary
 @property  NSSet *properties

  // instance methods
  -[MTDictionaryDiff init]
  -[MTDictionaryDiff .cxx_destruct]
  -[MTDictionaryDiff dictionary]
  -[MTDictionaryDiff setDictionary:]
  -[MTDictionaryDiff properties]
  -[MTDictionaryDiff setProperties:]
  -[MTDictionaryDiff initWithProperties:]
  -[MTDictionaryDiff callbacks]
  -[MTDictionaryDiff addCallback:]
  -[MTDictionaryDiff setCallbacks:]


MTCategory : NSManagedObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSString *name
 @property  long long parentStoreId
 @property  NSString *parentUuid
 @property  long long storeId
 @property  NSString *uuid

  // class methods
  +[MTCategory categoryForName:managedObjectContext:insertIfNeeded:]
  +[MTCategory categoryUuidForName:managedObjectContext:]
  +[MTCategory rootCategoriesInManagedObjectContext:]

  // instance methods
  -[MTCategory setParentUuid:]
  -[MTCategory podcastUuids]
  -[MTCategory addPodcastUuid:]
  -[MTCategory subCategoryIds]
  -[MTCategory parentId]


MTSingleton : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTSingleton allocWithZone:]
  +[MTSingleton initialize]
  +[MTSingleton copyWithZone:]
  +[MTSingleton sharedInstance]

  // instance methods
  -[MTSingleton copy]


MTUPPMetadata : NSManagedObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSString *metadataIdentifier
 @property  double timestamp
 @property  double bookmarkTime
 @property  BOOL hasBeenPlayed
 @property  long long playCount


MTExtensionPlaybackController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *magicMomentCompletionHandlers

  // class methods
  +[MTExtensionPlaybackController startPlaybackWithPlaybackRequestIdentifier:mrCompletion:]
  +[MTExtensionPlaybackController _setPlaybackQueueWithIdentifier:playerID:mrCompletion:]
  +[MTExtensionPlaybackController getNowPlayingInfoForMagicMomentInfoCenterWithCompletion:]
  +[MTExtensionPlaybackController startPlaybackWithPlaybackRequestIdentifier:completion:]

  // instance methods
  -[MTExtensionPlaybackController init]
  -[MTExtensionPlaybackController .cxx_destruct]
  -[MTExtensionPlaybackController _playbackQueueChangedNotification:]
  -[MTExtensionPlaybackController magicMomentCompletionHandlers]
  -[MTExtensionPlaybackController _getNowPlayingInfoAndCallPendingCompletions]
  -[MTExtensionPlaybackController populateMagicMomentInfoCenterWithPlaybackRequestIdentifier:mrCompletion:]
  -[MTExtensionPlaybackController setMagicMomentCompletionHandlers:]


MTRecencyUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTRecencyUtil nextEpisodeToPlayForPodcastUuid:excludeExplicit:excludeStreaming:ctx:]
  +[MTRecencyUtil nextEpisodeToPlayForPodcastUuid:excludeExplicit:ctx:]
  +[MTRecencyUtil nextEpisodeToPlayForPodcastUuid:ctx:]
  +[MTRecencyUtil nextEpisodeForEpisodicPodcastUuid:excludeExplicit:excludeStreaming:ctx:]
  +[MTRecencyUtil nextEpisodeForSerialPodcastUuid:excludeExplicit:excludeStreaming:ctx:]
  +[MTRecencyUtil recentlyPlayedPodcastsWithContext:]
  +[MTRecencyUtil recentlyPlayedPodcastsWithContext:limit:]
  +[MTRecencyUtil recentlyPlayedPodcastsWithContext:limit:uuidsToExclude:]
  +[MTRecencyUtil recentlyPlayedPodcastsWithContext:limit:uuidsToExclude:watchedAtTheEnd:]
  +[MTRecencyUtil nextEpisodeForSerialPodcastUuid:excludeExplicit:ctx:]
  +[MTRecencyUtil nextEpisodeForEpisodicPodcastUuid:excludeExplicit:ctx:]
  +[MTRecencyUtil episodeToResumeWithContext:]
  +[MTRecencyUtil episodesForListenNowWithContext:limit:]


MTDefaultsChangeNotifier : MTDictionaryDiff
 @property  BOOL running
 @property  NSUserDefaults *defaults

  // instance methods
  -[MTDefaultsChangeNotifier dealloc]
  -[MTDefaultsChangeNotifier .cxx_destruct]
  -[MTDefaultsChangeNotifier stop]
  -[MTDefaultsChangeNotifier start]
  -[MTDefaultsChangeNotifier observeValueForKeyPath:ofObject:change:context:]
  -[MTDefaultsChangeNotifier isRunning]
  -[MTDefaultsChangeNotifier defaults]
  -[MTDefaultsChangeNotifier setDefaults:]
  -[MTDefaultsChangeNotifier setRunning:]
  -[MTDefaultsChangeNotifier initWithProperties:defaults:]
  -[MTDefaultsChangeNotifier _defaultsChanged]


MTDemoUtility : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTDemoUtility hasDemoRecentlyPlayedContent]
  +[MTDemoUtility demoRecentlyPlayedContent]
  +[MTDemoUtility hasDemoListenNowData]
  +[MTDemoUtility demoListenNowData]
  +[MTDemoUtility demoSortDescriptorsForRecentlyPlayed]
  +[MTDemoUtility demoSortDescriptorsForListenNow]
  +[MTDemoUtility _dataArrayForString:]
  +[MTDemoUtility _dataArrayStringsForString:]
  +[MTDemoUtility demoListenNowReasonForEpisodeStoreTrackId:]


MTLibraryEntityChanges : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableSet *insertedObjectIDs
 @property  NSMutableSet *deletedObjectIDs
 @property  NSMutableSet *updatedObjectIDs
 @property  NSString *entityName

  // instance methods
  -[MTLibraryEntityChanges copyWithZone:]
  -[MTLibraryEntityChanges .cxx_destruct]
  -[MTLibraryEntityChanges hasChanges]
  -[MTLibraryEntityChanges initWithEntityName:]
  -[MTLibraryEntityChanges entityName]
  -[MTLibraryEntityChanges hasInserts]
  -[MTLibraryEntityChanges deletedObjectIDs]
  -[MTLibraryEntityChanges hasDeletes]
  -[MTLibraryEntityChanges insertedObjectIDs]
  -[MTLibraryEntityChanges updatedObjectIDs]
  -[MTLibraryEntityChanges hasUpdates]
  -[MTLibraryEntityChanges setInsertedObjectIDs:]
  -[MTLibraryEntityChanges setDeletedObjectIDs:]
  -[MTLibraryEntityChanges setUpdatedObjectIDs:]
  -[MTLibraryEntityChanges insertedAndUpdatedObjectIDs]
  -[MTLibraryEntityChanges combineChanges:]
  -[MTLibraryEntityChanges add:changeType:]


MTLibraryChanges : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableDictionary *changesByEntityName

  // instance methods
  -[MTLibraryChanges init]
  -[MTLibraryChanges copyWithZone:]
  -[MTLibraryChanges .cxx_destruct]
  -[MTLibraryChanges hasChanges]
  -[MTLibraryChanges hasInserts]
  -[MTLibraryChanges hasDeletes]
  -[MTLibraryChanges entityNames]
  -[MTLibraryChanges hasUpdates]
  -[MTLibraryChanges removeAllChanges]
  -[MTLibraryChanges addChangeWith:entityName:changeType:]
  -[MTLibraryChanges combineChanges:]
  -[MTLibraryChanges changesByEntityName]
  -[MTLibraryChanges setChangesByEntityName:]
  -[MTLibraryChanges changesForEntityName:]
  -[MTLibraryChanges hasChangesForEntityNames:]
  -[MTLibraryChanges hasInsertsForEntityNames:]
  -[MTLibraryChanges hasDeletesForEntityNames:]
  -[MTLibraryChanges hasUpdatesForEntityNames:]


MTLibrary : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL iTunesMatchEnabled
 @property  BOOL subscriptionSyncEnabled

  // class methods
  +[MTLibrary allocWithZone:]
  +[MTLibrary initialize]
  +[MTLibrary sharedInstance]
  +[MTLibrary freeSpace]
  +[MTLibrary isSupportedUrlString:]

  // instance methods
  -[MTLibrary init]
  -[MTLibrary copy]
  -[MTLibrary .cxx_destruct]
  -[MTLibrary importContext]
  -[MTLibrary mainQueueContext]
  -[MTLibrary privateQueueContext]
  -[MTLibrary mainOrPrivateContext]
  -[MTLibrary carPlayContext]
  -[MTLibrary storeContext]
  -[MTLibrary resetableImportContext]
  -[MTLibrary iTunesMatchEnabled]
  -[MTLibrary isSubscriptionSyncEnabled]
  -[MTLibrary setITunesMatchEnabled:]
  -[MTLibrary updateiTunesPlaylistForiTunesMatchState]
  -[MTLibrary _userDefaultsDidChange:]
  -[MTLibrary lastUpdatedDateString]
  -[MTLibrary enableSubscriptionOnPodcastUuid:setSyncDirty:]
  -[MTLibrary enableSubscriptionOnPodcastUuid:setSyncDirty:ctx:]
  -[MTLibrary disableSubscriptionOnPodcastUuid:setSyncDirty:]
  -[MTLibrary disableSubscriptionOnPodcastUuid:setSyncDirty:ctx:]
  -[MTLibrary isSubscribedToPodcastWithUuid:]
  -[MTLibrary deletePodcastWithUuid:shouldSave:]
  -[MTLibrary _deletePodcastWithUuid:forced:ctx:]
  -[MTLibrary _deleteHiddenPodcasts]
  -[MTLibrary _deletePodcastWithId:ctx:]
  -[MTLibrary deletePlaylist:]
  -[MTLibrary _deletePodcast:ctx:]
  -[MTLibrary _deleteEpisodeUuids:forced:save:]
  -[MTLibrary _deleteEpisodeUuids:forced:]
  -[MTLibrary markPlaylistsForUpdateForPodcastUuids:]
  -[MTLibrary setPlayState:manually:forUserActionOnEpisode:saveChanges:]
  -[MTLibrary setPlayed:manually:forUserActionOnEpisode:saveChanges:]
  -[MTLibrary setPlayState:fromContextActions:manually:forUserActionOnEpisode:saveChanges:]
  -[MTLibrary lastUpdatedDateAttributedString]
  -[MTLibrary finishPlayingEpisodeUuid:]
  -[MTLibrary enableSubscriptionOnPodcastUuid:]
  -[MTLibrary disableSubscriptionOnPodcastUuid:]
  -[MTLibrary isSubscribedToPodcastWithFeedUrl:]
  -[MTLibrary deletePodcastWithUuid:]
  -[MTLibrary deleteFromSyncPodcastsWithUuids:]
  -[MTLibrary deleteHiddenPodcasts]
  -[MTLibrary deleteHiddenPodcastsSynchronously]
  -[MTLibrary deleteStationWithUuid:]
  -[MTLibrary deleteEpisodeUuids:]
  -[MTLibrary deleteOrphanedEpisodes]
  -[MTLibrary deleteAllPodcasts]
  -[MTLibrary deleteAllTopLevelStationsExcludingFolders]
  -[MTLibrary setStationsOrder:]
  -[MTLibrary setPodcastsOrder:]
  -[MTLibrary setEpisodesOrder:forStation:]
  -[MTLibrary setStationShowGroupOrder:forStation:]
  -[MTLibrary markAsSaved:forEpisodeUuids:]
  -[MTLibrary setPlayed:manually:forUserActionOnEpisodeUuid:]
  -[MTLibrary setPlayState:manually:forUserActionOnEpisodeUuid:]
  -[MTLibrary canDeleteEpisode:]


MTGenre : NSObject /usr/lib/libSystem.B.dylib <NSCoding>
 @property  NSString *name
 @property  NSString *identifier
 @property  NSArray *children

  // instance methods
  -[MTGenre name]
  -[MTGenre copyWithZone:]
  -[MTGenre encodeWithCoder:]
  -[MTGenre initWithCoder:]
  -[MTGenre .cxx_destruct]
  -[MTGenre setName:]
  -[MTGenre identifier]
  -[MTGenre setIdentifier:]
  -[MTGenre children]
  -[MTGenre setChildren:]


PKStoreId : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSNumber *numberValue
 @property  NSString *stringValue
 @property  long long longValue

  // class methods
  +[PKStoreId supportsSecureCoding]
  +[PKStoreId setSupportsSecureCoding:]

  // instance methods
  -[PKStoreId init]
  -[PKStoreId longValue]
  -[PKStoreId encodeWithCoder:]
  -[PKStoreId initWithCoder:]
  -[PKStoreId stringValue]
  -[PKStoreId .cxx_destruct]
  -[PKStoreId initWithString:]
  -[PKStoreId initWithInteger:]
  -[PKStoreId numberValue]
  -[PKStoreId initWithNumber:]


_TtC11PodcastsKit15CoreDataLibrary : NSObject /usr/lib/libSystem.B.dylib <PKLibrary>
 @property  <PKSubscriptionController> *subscriptionController

  // instance methods
  -[_TtC11PodcastsKit15CoreDataLibrary init]
  -[_TtC11PodcastsKit15CoreDataLibrary .cxx_destruct]
  -[_TtC11PodcastsKit15CoreDataLibrary subscriptionController]
  -[_TtC11PodcastsKit15CoreDataLibrary setSubscriptionController:]
  -[_TtC11PodcastsKit15CoreDataLibrary fetchMatchesFor:limit:resultsHandler:]
  -[_TtC11PodcastsKit15CoreDataLibrary fetchAllShowsWithResultsHandler:]


PKDurationSnapshot : NSObject /usr/lib/libSystem.B.dylib
 @property  double snapshotTime
 @property  float rate
 @property  double elapsedDuration
 @property  double duration

  // instance methods
  -[PKDurationSnapshot init]
  -[PKDurationSnapshot duration]
  -[PKDurationSnapshot rate]
  -[PKDurationSnapshot elapsedDuration]
  -[PKDurationSnapshot snapshotTime]
  -[PKDurationSnapshot initWithSnapshotTime:rate:elapsedDuration:duration:]


PKEpisode : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *title
 @property  NSDate *releaseDate
 @property  BOOL isExplicit
 @property  double duration
 @property  PKStoreId *storeId
 @property  PKShow *show
 @property  BOOL isInLibrary
 @property  NSString *guid
 @property  NSString *uuid
 @property  NSString *streamUrl
 @property  NSString *episodeUuid

  // class methods
  +[PKEpisode supportsSecureCoding]
  +[PKEpisode setSupportsSecureCoding:]
  +[PKEpisode mediaTaskType]

  // instance methods
  -[PKEpisode init]
  -[PKEpisode encodeWithCoder:]
  -[PKEpisode initWithCoder:]
  -[PKEpisode .cxx_destruct]
  -[PKEpisode uuid]
  -[PKEpisode title]
  -[PKEpisode duration]
  -[PKEpisode setUuid:]
  -[PKEpisode show]
  -[PKEpisode setGuid:]
  -[PKEpisode guid]
  -[PKEpisode storeId]
  -[PKEpisode releaseDate]
  -[PKEpisode isExplicit]
  -[PKEpisode streamUrl]
  -[PKEpisode episodeUuid]
  -[PKEpisode initWithTitle:releaseDate:isExplicit:duration:storeId:show:guid:uuid:streamUrl:]
  -[PKEpisode isInLibrary]
  -[PKEpisode setEpisodeUuid:]
  -[PKEpisode updateForDatabaseMatch]


_TtC11PodcastsKit8Database : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib

PKSearchResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *episodes
 @property  NSArray *shows

  // instance methods
  -[PKSearchResult init]
  -[PKSearchResult .cxx_destruct]
  -[PKSearchResult episodes]
  -[PKSearchResult shows]
  -[PKSearchResult initWithEpisodes:shows:]


_TtC11PodcastsKit33MediaRemoteSubscriptionController : NSObject /usr/lib/libSystem.B.dylib <PKSubscriptionController>
  // instance methods
  -[_TtC11PodcastsKit33MediaRemoteSubscriptionController init]
  -[_TtC11PodcastsKit33MediaRemoteSubscriptionController .cxx_destruct]
  -[_TtC11PodcastsKit33MediaRemoteSubscriptionController subscribeToStoreId:completion:]
  -[_TtC11PodcastsKit33MediaRemoteSubscriptionController subscribeToFeedUrl:completion:]


PKShow : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *title
 @property  NSString *descriptionText
 @property  PKStoreId *storeId
 @property  BOOL isInLibrary
 @property  BOOL isSubscribed

  // class methods
  +[PKShow supportsSecureCoding]
  +[PKShow setSupportsSecureCoding:]

  // instance methods
  -[PKShow init]
  -[PKShow encodeWithCoder:]
  -[PKShow initWithCoder:]
  -[PKShow .cxx_destruct]
  -[PKShow title]
  -[PKShow descriptionText]
  -[PKShow storeId]
  -[PKShow isSubscribed]
  -[PKShow isInLibrary]
  -[PKShow artworkUrlFor:]


_TtC11PodcastsKit7Catalog : NSObject /usr/lib/libSystem.B.dylib <PKCatalog>
  // instance methods
  -[_TtC11PodcastsKit7Catalog init]
  -[_TtC11PodcastsKit7Catalog fetchEpisodesWithStoreIds:resultsHandler:]
  -[_TtC11PodcastsKit7Catalog fetchShowsWithStoreIds:resultsHandler:]


PKPlayerManifest : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PKPlayerManifest manifestForEpisode:]
  +[PKPlayerManifest manifestForShow:]

  // instance methods
  -[PKPlayerManifest init]
  -[PKPlayerManifest .cxx_destruct]


PKProvider : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PKProvider createLibraryWithCompletion:]
  +[PKProvider createCatalogWithCompletion:]
  +[PKProvider createPlayerControllerWithCompletion:]

  // instance methods
  -[PKProvider init]


_TtC11PodcastsKit21ProxyPlayerController : NSObject /usr/lib/libSystem.B.dylib <PKPlayerController>
 @property  PKEpisode *currentEpisode
 @property  PKDurationSnapshot *durationSnapshot
 @property  double forwardJumpDuration
 @property  double backwardJumpDuration
 @property  @? playerResponseHandler

  // instance methods
  -[_TtC11PodcastsKit21ProxyPlayerController init]
  -[_TtC11PodcastsKit21ProxyPlayerController .cxx_destruct]
  -[_TtC11PodcastsKit21ProxyPlayerController pauseWithCompletion:]
  -[_TtC11PodcastsKit21ProxyPlayerController currentEpisode]
  -[_TtC11PodcastsKit21ProxyPlayerController durationSnapshot]
  -[_TtC11PodcastsKit21ProxyPlayerController playWithCompletion:]
  -[_TtC11PodcastsKit21ProxyPlayerController startPlayback:completion:]
  -[_TtC11PodcastsKit21ProxyPlayerController seekToPositionWithElapsedTime:completion:]
  -[_TtC11PodcastsKit21ProxyPlayerController jumpForwardsWithCompletion:]
  -[_TtC11PodcastsKit21ProxyPlayerController jumpBackwardsWithCompletion:]
  -[_TtC11PodcastsKit21ProxyPlayerController forwardJumpDuration]
  -[_TtC11PodcastsKit21ProxyPlayerController backwardJumpDuration]
  -[_TtC11PodcastsKit21ProxyPlayerController playerResponseHandler]
  -[_TtC11PodcastsKit21ProxyPlayerController setPlayerResponseHandler:]
  -[_TtC11PodcastsKit21ProxyPlayerController setCurrentEpisode:]


IMDevice : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *queue
 @property  long long cachedDeviceClass
 @property  long long deviceClass

  // class methods
  +[IMDevice currentDevice]

  // instance methods
  -[IMDevice setQueue:]
  -[IMDevice queue]
  -[IMDevice .cxx_destruct]
  -[IMDevice _init]
  -[IMDevice deviceClass]
  -[IMDevice _onQueueLoadDeviceClass]
  -[IMDevice cachedDeviceClass]
  -[IMDevice setCachedDeviceClass:]


NSURLUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[NSURLUtil queryStringToQueryDictionary:]
  +[NSURLUtil dictionaryToQueryString:]


IMRuntimeUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[IMRuntimeUtil associateValue:forKey:onObject:withPolicy:]
  +[IMRuntimeUtil associateBoolValue:forKey:onObject:withPolicy:]
  +[IMRuntimeUtil associateIntValue:forKey:onObject:withPolicy:]
  +[IMRuntimeUtil associateFloatValue:forKey:onObject:withPolicy:]
  +[IMRuntimeUtil associateDoubleValue:forKey:onObject:withPolicy:]
  +[IMRuntimeUtil associatedValueForKey:onObject:withDefault:]
  +[IMRuntimeUtil associatedBoolValueForKey:onObject:withDefault:]
  +[IMRuntimeUtil associatedValueForKey:onObject:]
  +[IMRuntimeUtil associatedIntValueForKey:onObject:withDefault:]
  +[IMRuntimeUtil associatedFloatValueForKey:onObject:withDefault:]
  +[IMRuntimeUtil associatedDoubleValueForKey:onObject:withDefault:]
  +[IMRuntimeUtil swizzleMethod:onClass:withReplacementBlock:]
  +[IMRuntimeUtil swizzleClassMethod:onClass:withReplacementBlock:]
  +[IMRuntimeUtil associateValue:forKey:onObject:]
  +[IMRuntimeUtil associateBoolValue:forKey:onObject:]
  +[IMRuntimeUtil associateIntValue:forKey:onObject:]
  +[IMRuntimeUtil associateFloatValue:forKey:onObject:]
  +[IMRuntimeUtil associateDoubleValue:forKey:onObject:]
  +[IMRuntimeUtil associatedBoolValueForKey:onObject:]
  +[IMRuntimeUtil associatedIntValueForKey:onObject:]
  +[IMRuntimeUtil associatedFloatValueForKey:onObject:]
  +[IMRuntimeUtil associatedDoubleValueForKey:onObject:]


IMJSONUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[IMJSONUtil fromJSONData:]
  +[IMJSONUtil fromJSONString:]
  +[IMJSONUtil toJSONString:]


IMAppStateMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  UIApplication *app
 @property  long long statusBarOrientation
 @property  long long applicationState
 @property  double backgroundTimeRemaining

  // class methods
  +[IMAppStateMonitor sharedInstance]

  // instance methods
  -[IMAppStateMonitor init]
  -[IMAppStateMonitor .cxx_destruct]
  -[IMAppStateMonitor applicationState]
  -[IMAppStateMonitor applicationDidBecomeActive]
  -[IMAppStateMonitor applicationWillResignActive]
  -[IMAppStateMonitor setStatusBarOrientation:]
  -[IMAppStateMonitor statusBarOrientation]
  -[IMAppStateMonitor backgroundTimeRemaining]
  -[IMAppStateMonitor setApplicationState:]
  -[IMAppStateMonitor app]
  -[IMAppStateMonitor setApp:]
  -[IMAppStateMonitor applicationDidEnterBackground]
  -[IMAppStateMonitor setBackgroundTimeRemaining:]
  -[IMAppStateMonitor applicationDidFinishLaunching]
  -[IMAppStateMonitor didChangeStatusBarOrientation:]


IMStoreLogging : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[IMStoreLogging load]


IMMetricsAppOpenEvent : IMAMSMetricsEvent
 @property  NSString *referringAppName
 @property  NSString *referringURL

  // instance methods
  -[IMMetricsAppOpenEvent initWithReason:]
  -[IMMetricsAppOpenEvent setReferringAppName:]
  -[IMMetricsAppOpenEvent setReferringURL:]
  -[IMMetricsAppOpenEvent referringAppName]
  -[IMMetricsAppOpenEvent referringURL]
  -[IMMetricsAppOpenEvent setEnterTypeWithLaunchReason:]


IMMetricsAppCloseEvent : IMAMSMetricsEvent
 @property  NSString *exitURL

  // instance methods
  -[IMMetricsAppCloseEvent initWithReason:]
  -[IMMetricsAppCloseEvent exitURL]
  -[IMMetricsAppCloseEvent setExitTypeWithSuspendReason:]
  -[IMMetricsAppCloseEvent setExitURL:]


IMMetricsTimerEvent : IMAMSMetricsEvent
 @property  double duration

  // instance methods
  -[IMMetricsTimerEvent init]
  -[IMMetricsTimerEvent duration]
  -[IMMetricsTimerEvent shortDescription]
  -[IMMetricsTimerEvent setDuration:]


IMMetricsMemoryEvent : IMAMSMetricsEvent
 @property  unsigned long usedBytes
 @property  unsigned long totalBytes

  // instance methods
  -[IMMetricsMemoryEvent init]
  -[IMMetricsMemoryEvent shortDescription]
  -[IMMetricsMemoryEvent totalBytes]
  -[IMMetricsMemoryEvent setTotalBytes:]
  -[IMMetricsMemoryEvent usedBytes]
  -[IMMetricsMemoryEvent setUsedBytes:]


IMClickAMSMetricsEvent : IMAMSMetricsEvent
  // instance methods
  -[IMClickAMSMetricsEvent init]
  -[IMClickAMSMetricsEvent setPositionX:]
  -[IMClickAMSMetricsEvent setPositionY:]


IMPageAMSMetricsEvent : IMAMSMetricsEvent
 @property  double pageRenderTime

  // instance methods
  -[IMPageAMSMetricsEvent init]
  -[IMPageAMSMetricsEvent timeIntervalFromMilliseconds:]
  -[IMPageAMSMetricsEvent millisecondsFromTimeInterval:]
  -[IMPageAMSMetricsEvent pageRenderTime]
  -[IMPageAMSMetricsEvent setPageRenderTime:]


IMAMSMetricsEvent : AMSMetricsEvent /System/Library/Frameworks/Accounts.framework/Accounts
 @property  NSString *pageType

  // instance methods
  -[IMAMSMetricsEvent init]
  -[IMAMSMetricsEvent eventType]
  -[IMAMSMetricsEvent setEventType:]
  -[IMAMSMetricsEvent pageType]
  -[IMAMSMetricsEvent setPageType:]


MTWeakReference : NSObject /usr/lib/libSystem.B.dylib
 @property  id object

  // instance methods
  -[MTWeakReference object]
  -[MTWeakReference initWithObject:]
  -[MTWeakReference setObject:]
  -[MTWeakReference .cxx_destruct]


IMURLRequestEncoder : AMSURLRequestEncoder /System/Library/Frameworks/Accounts.framework/Accounts
 @property  BOOL personalizeRequests

  // instance methods
  -[IMURLRequestEncoder initWithBag:]
  -[IMURLRequestEncoder requestByEncodingRequest:parameters:]
  -[IMURLRequestEncoder personalizeRequests]
  -[IMURLRequestEncoder prepareRequest:completion:]
  -[IMURLRequestEncoder setPersonalizeRequests:]


IMMetricsController : NSObject /usr/lib/libSystem.B.dylib <IMMetricsControllerProtocol>
 @property  AMSMetrics *metricsController
 @property  NSString *topic
 @property  BOOL isLoading
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL shouldSuppressUserInfo
 @property  BOOL shouldIgnoreDNU
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMMetricsController setQueue:]
  -[IMMetricsController queue]
  -[IMMetricsController .cxx_destruct]
  -[IMMetricsController topic]
  -[IMMetricsController setTopic:]
  -[IMMetricsController isLoading]
  -[IMMetricsController setIsLoading:]
  -[IMMetricsController recordEvent:]
  -[IMMetricsController initWithTopic:]
  -[IMMetricsController shouldSuppressUserInfo]
  -[IMMetricsController setShouldSuppressUserInfo:]
  -[IMMetricsController metricsController]
  -[IMMetricsController setMetricsController:]
  -[IMMetricsController flushImmediately]
  -[IMMetricsController setShouldIgnoreDNU:]
  -[IMMetricsController getMetricsController:]
  -[IMMetricsController shouldIgnoreDNU]


IMMetrics : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[IMMetrics initialize]
  +[IMMetrics disable]
  +[IMMetrics enable]
  +[IMMetrics setLogLevel:]
  +[IMMetrics recordEvent:]
  +[IMMetrics flushImmediately]
  +[IMMetrics addMetricsController:]
  +[IMMetrics removeMetricsController:]
  +[IMMetrics startTimer:]
  +[IMMetrics recordUserAction:]
  +[IMMetrics defaultMetricsController]
  +[IMMetrics recordMemory:]
  +[IMMetrics recordUserAction:dataSource:]
  +[IMMetrics recordUserAction:dataSource:withData:]
  +[IMMetrics setupEvent:forDataSource:]
  +[IMMetrics startTimer:dataSource:]
  +[IMMetrics keyForTimerName:dataSource:]
  +[IMMetrics endTimer:dataSource:]
  +[IMMetrics endTimer:dataSource:withData:]
  +[IMMetrics recordEvent:with:]
  +[IMMetrics metricsControllerForTopic:]
  +[IMMetrics canRecordEvent]
  +[IMMetrics recordEvent:dataSource:data:topic:]
  +[IMMetrics recordEvent:topic:]
  +[IMMetrics cancelFlush]
  +[IMMetrics setDefaultMetricsController:]
  +[IMMetrics endTimer:]
  +[IMMetrics recordEvent:dataSource:data:]


IMMetricsUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[IMMetricsUtil configureEvent:withDataSource:]


IMFetchReviewService : IMBaseStoreService
 @property  NSString *adamID

  // instance methods
  -[IMFetchReviewService .cxx_destruct]
  -[IMFetchReviewService urlRequest]
  -[IMFetchReviewService adamID]
  -[IMFetchReviewService setAdamID:]
  -[IMFetchReviewService initWithAdamID:]
  -[IMFetchReviewService performDataRequestWithCompletion:]


IMBaseStoreService : NSObject /usr/lib/libSystem.B.dylib
 @property  @? callback
 @property  IMURLRequestEncoder *requestEncoder
 @property  NSURLSessionConfiguration *configuration
 @property  IMURLSession *amsUrlSession
 @property  BOOL wantsJSSignature
 @property  BOOL personalizeRequests

  // class methods
  +[IMBaseStoreService defaultConcurrentOperationCount]
  +[IMBaseStoreService shouldFollowRedirects]
  +[IMBaseStoreService signatureQueryParams]

  // instance methods
  -[IMBaseStoreService init]
  -[IMBaseStoreService .cxx_destruct]
  -[IMBaseStoreService callback]
  -[IMBaseStoreService setCallback:]
  -[IMBaseStoreService setConfiguration:]
  -[IMBaseStoreService configuration]
  -[IMBaseStoreService cancelAllRequests]
  -[IMBaseStoreService signRequest:]
  -[IMBaseStoreService bag]
  -[IMBaseStoreService requestEncoder]
  -[IMBaseStoreService setRequestEncoder:]
  -[IMBaseStoreService performRequest:]
  -[IMBaseStoreService personalizeRequests]
  -[IMBaseStoreService setPersonalizeRequests:]
  -[IMBaseStoreService performDataRequest:callback:]
  -[IMBaseStoreService initWithConcurrentOperationCount:]
  -[IMBaseStoreService amsUrlSession]
  -[IMBaseStoreService performUrlRequest:callback:]
  -[IMBaseStoreService wantsJSSignature]
  -[IMBaseStoreService setWantsJSSignature:]
  -[IMBaseStoreService setAmsUrlSession:]


IMBasePlatformLookupService : IMBaseStoreService
 @property  NSString *protocolVersion

  // instance methods
  -[IMBasePlatformLookupService init]
  -[IMBasePlatformLookupService .cxx_destruct]
  -[IMBasePlatformLookupService protocolVersion]
  -[IMBasePlatformLookupService setProtocolVersion:]
  -[IMBasePlatformLookupService urlRequest]
  -[IMBasePlatformLookupService performRequest:]
  -[IMBasePlatformLookupService baseUrl]
  -[IMBasePlatformLookupService platformAction]


IMChartLookupService : IMBasePlatformLookupService
 @property  NSString *genreId
 @property  NSString *chartNumber
 @property  NSString *contentProfile
 @property  NSString *contentArtworkType
 @property  unsigned long limit
 @property  BOOL filterExplicit

  // instance methods
  -[IMChartLookupService .cxx_destruct]
  -[IMChartLookupService limit]
  -[IMChartLookupService setLimit:]
  -[IMChartLookupService request:]
  -[IMChartLookupService urlRequest]
  -[IMChartLookupService performRequest:]
  -[IMChartLookupService setGenreId:]
  -[IMChartLookupService genreId]
  -[IMChartLookupService platformAction]
  -[IMChartLookupService setChartNumber:]
  -[IMChartLookupService chartNumber]
  -[IMChartLookupService filterExplicit]
  -[IMChartLookupService contentProfile]
  -[IMChartLookupService contentArtworkType]
  -[IMChartLookupService initWithGenreId:andChartNumber:]
  -[IMChartLookupService setContentProfile:]
  -[IMChartLookupService setContentArtworkType:]
  -[IMChartLookupService setFilterExplicit:]


IMSaveReviewService : IMBaseStoreService
 @property  NSData *bodyData
 @property  NSURL *endpointURL

  // instance methods
  -[IMSaveReviewService .cxx_destruct]
  -[IMSaveReviewService endpointURL]
  -[IMSaveReviewService bodyData]
  -[IMSaveReviewService setBodyData:]
  -[IMSaveReviewService urlRequest]
  -[IMSaveReviewService setEndpointURL:]
  -[IMSaveReviewService performDataRequestWithCompletion:]
  -[IMSaveReviewService generatedEndpointURLForBaseURL:]
  -[IMSaveReviewService initWithEndpointURL:bodyData:]


IMContentLookupService : NSObject /usr/lib/libSystem.B.dylib
 @property  AMSLookup *amsLookup
 @property  NSString *profile
 @property  NSString *artworkType
 @property  NSArray *ids
 @property  long long version

  // instance methods
  -[IMContentLookupService init]
  -[IMContentLookupService .cxx_destruct]
  -[IMContentLookupService ids]
  -[IMContentLookupService version]
  -[IMContentLookupService setVersion:]
  -[IMContentLookupService request:]
  -[IMContentLookupService profile]
  -[IMContentLookupService setProfile:]
  -[IMContentLookupService artworkType]
  -[IMContentLookupService setArtworkType:]
  -[IMContentLookupService setIds:]
  -[IMContentLookupService initWithIds:]
  -[IMContentLookupService setAmsLookup:]
  -[IMContentLookupService _configureRequest]
  -[IMContentLookupService amsLookup]


IMURLRequestService : IMBaseStoreService
 @property  <NSURLSessionDelegate><AMSURLProtocolDelegate> *urlSessionDelegate
 @property  NSURLRequest *mutableRequest

  // instance methods
  -[IMURLRequestService .cxx_destruct]
  -[IMURLRequestService urlSessionDelegate]
  -[IMURLRequestService performRequest:]
  -[IMURLRequestService setUrlSessionDelegate:]
  -[IMURLRequestService mutableRequest]
  -[IMURLRequestService setMutableRequest:]


IMURLSession : AMSURLSession /System/Library/Frameworks/Accounts.framework/Accounts
 @property  BOOL followsRedirects
 @property  long long state
 @property  BOOL isUsable

  // instance methods
  -[IMURLSession .cxx_destruct]
  -[IMURLSession state]
  -[IMURLSession invalidateAndCancel]
  -[IMURLSession URLSession:didBecomeInvalidWithError:]
  -[IMURLSession finishTasksAndInvalidate]
  -[IMURLSession isUsable]
  -[IMURLSession initWithConfiguration:delegate:delegateQueue:]
  -[IMURLSession setFollowsRedirects:]
  -[IMURLSession followsRedirects]
  -[IMURLSession _configureProtocolHandler]


IMURLProtocolHandler : AMSURLProtocolHandler /System/Library/Frameworks/Accounts.framework/Accounts
 @property  BOOL followsRedirects

  // instance methods
  -[IMURLProtocolHandler handleCompletionWithTask:metrics:decodedObject:]
  -[IMURLProtocolHandler setFollowsRedirects:]
  -[IMURLProtocolHandler followsRedirects]


IMIgnoreRedirectURLAction : AMSURLAction /System/Library/Frameworks/Accounts.framework/Accounts
  // class methods
  +[IMIgnoreRedirectURLAction ignoreRedirectAction]

  // instance methods
  -[IMIgnoreRedirectURLAction actionType]
  -[IMIgnoreRedirectURLAction redirectURL]


IMNetworkObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  long long networkType
 @property  NSString *connectionTypeHeader
 @property  unsigned int networkReachabilityFlags

  // class methods
  +[IMNetworkObserver sharedInstance]
  +[IMNetworkObserver isLikelyToReachRemoteServerWithReachabilityFlags:]
  +[IMNetworkObserver _networkObserverLogConfig]

  // instance methods
  -[IMNetworkObserver init]
  -[IMNetworkObserver dealloc]
  -[IMNetworkObserver networkType]
  -[IMNetworkObserver setNetworkType:]
  -[IMNetworkObserver connectionTypeHeader]
  -[IMNetworkObserver operatorName]
  -[IMNetworkObserver networkReachabilityFlags]
  -[IMNetworkObserver reloadNetworkType]
  -[IMNetworkObserver _currentNetworkReachabilityFlags]
  -[IMNetworkObserver _networkTypeForReachabilityFlags:]
  -[IMNetworkObserver _applicationForegroundNotification:]
  -[IMNetworkObserver _dataStatusIndicator]
  -[IMNetworkObserver _reloadNetworkType]
  -[IMNetworkObserver _setNetworkType:]
  -[IMNetworkObserver _postTypeChangedNotificationFromValue:toValue:]
  -[IMNetworkObserver _reloadDataStatusIndicator]
  -[IMNetworkObserver _copyConnectionDataStatus:]
  -[IMNetworkObserver _networkTypeFromDataIndicator:]
  -[IMNetworkObserver _reloadNetworkTypeWithReachabilityFlags:]
  -[IMNetworkObserver _postReachabilityFlagsChangedNotificationFromValue:toValue:]
  -[IMNetworkObserver dataStatusIndicator]
  -[IMNetworkObserver _handleTelephonyNotificationWithName:userInfo:]
  -[IMNetworkObserver stringForNetworkType:]
  -[IMNetworkObserver networkTypeIsCellularType:]


IMPushNotificationSettingsService : IMBaseStoreService
  // instance methods
  -[IMPushNotificationSettingsService performDataRequestWithCompletion:]
  -[IMPushNotificationSettingsService urlRequestWithError:]
  -[IMPushNotificationSettingsService endpointURLForKey:error:]


IMFetchPushNotificationSettingsService : IMPushNotificationSettingsService
  // instance methods
  -[IMFetchPushNotificationSettingsService init]
  -[IMFetchPushNotificationSettingsService urlRequestWithError:]


IMWritePushNotificationSettingsService : IMPushNotificationSettingsService
 @property  NSData *data

  // instance methods
  -[IMWritePushNotificationSettingsService initWithData:]
  -[IMWritePushNotificationSettingsService .cxx_destruct]
  -[IMWritePushNotificationSettingsService data]
  -[IMWritePushNotificationSettingsService setData:]
  -[IMWritePushNotificationSettingsService urlRequestWithError:]


IMClientUtil : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[IMClientUtil clientIdentifier]
  +[IMClientUtil clientIdentifierHeader]
  +[IMClientUtil clientBundleVersion]
  +[IMClientUtil mediaApiClientIdentifier]
  +[IMClientUtil mediaApiClientVersion]


IMURLBag : NSObject /usr/lib/libSystem.B.dylib <AMSBagProtocol>
 @property  AMSBag *bag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL expired
 @property  NSDate *expirationDate
 @property  NSString *profile
 @property  NSString *profileVersion

  // class methods
  +[IMURLBag sharedInstance]
  +[IMURLBag registerBagKeys:]
  +[IMURLBag _registerBagKeysIfNeeded]

  // instance methods
  -[IMURLBag init]
  -[IMURLBag .cxx_destruct]
  -[IMURLBag boolForKey:]
  -[IMURLBag stringForKey:]
  -[IMURLBag arrayForKey:]
  -[IMURLBag dictionaryForKey:]
  -[IMURLBag integerForKey:]
  -[IMURLBag doubleForKey:]
  -[IMURLBag URLForKey:]
  -[IMURLBag expirationDate]
  -[IMURLBag profile]
  -[IMURLBag isExpired]
  -[IMURLBag bag]
  -[IMURLBag createSnapshotWithCompletion:]
  -[IMURLBag profileVersion]
  -[IMURLBag trustedDomains]
  -[IMURLBag metricsURL]
  -[IMURLBag metricsDictionary]
  -[IMURLBag mescalCertificateURL]
  -[IMURLBag mescalSetupURL]
  -[IMURLBag mescalSignedActions]
  -[IMURLBag mescalSignSapRequests]
  -[IMURLBag mescalSignSapResponses]
  -[IMURLBag personalizedLookupURL]
  -[IMURLBag unpersonalizedLookupURL]
  -[IMURLBag setBag:]


IMMediaRemoteController : NSObject /usr/lib/libSystem.B.dylib
 @property  IMAVPlayer *player
 @property  MPRemoteCommandCenter *remoteCommandCenter
 @property  NSArray *supportedPlaybackRates

  // instance methods
  -[IMMediaRemoteController dealloc]
  -[IMMediaRemoteController .cxx_destruct]
  -[IMMediaRemoteController player]
  -[IMMediaRemoteController setPlayer:]
  -[IMMediaRemoteController initWithPlayer:]
  -[IMMediaRemoteController setSupportedPlaybackRates:]
  -[IMMediaRemoteController supportedPlaybackRates]
  -[IMMediaRemoteController remoteCommandCenter]
  -[IMMediaRemoteController remotePause:]
  -[IMMediaRemoteController remoteStop:]
  -[IMMediaRemoteController remoteSkipBackward:]
  -[IMMediaRemoteController remoteSkipForward:]
  -[IMMediaRemoteController setRemoteCommandCenter:]
  -[IMMediaRemoteController _updatePlaybackSpeed]
  -[IMMediaRemoteController tearDownRemoteCommandCenter:]
  -[IMMediaRemoteController setupRemoteCommandCenter:]
  -[IMMediaRemoteController remotePlayCommand:completionHandler:]
  -[IMMediaRemoteController remoteTogglePlayPauseCommand:completionHandler:]
  -[IMMediaRemoteController remoteNextTrack:]
  -[IMMediaRemoteController remotePreviousTrack:]
  -[IMMediaRemoteController remoteSeekForward:]
  -[IMMediaRemoteController remoteSeekBackward:]
  -[IMMediaRemoteController remoteChangePlaybackRate:]
  -[IMMediaRemoteController remoteSetPlayhead:]
  -[IMMediaRemoteController copySupportedCommands]


_IMMemoryCacheItem : NSObject /usr/lib/libSystem.B.dylib
 @property  id item
 @property  unsigned long cost
 @property  unsigned long timeStamp
 @property  NSString *key
 @property  BOOL conformsToProtocol

  // class methods
  +[_IMMemoryCacheItem cacheItemWithItem:key:cost:]

  // instance methods
  -[_IMMemoryCacheItem key]
  -[_IMMemoryCacheItem .cxx_destruct]
  -[_IMMemoryCacheItem item]
  -[_IMMemoryCacheItem setItem:]
  -[_IMMemoryCacheItem setKey:]
  -[_IMMemoryCacheItem timeStamp]
  -[_IMMemoryCacheItem setTimeStamp:]
  -[_IMMemoryCacheItem cost]
  -[_IMMemoryCacheItem setCost:]
  -[_IMMemoryCacheItem setConformsToProtocol:]
  -[_IMMemoryCacheItem conformsToProtocol]


IMMemoryCache : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *itemsArray
 @property  NSMutableDictionary *items
 @property  unsigned long totalCost
 @property  unsigned long count
 @property  NSOperationQueue *queue
 @property  double lastCheckTime
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  NSString *name
 @property  id delegate
 @property  BOOL evictsItemsWithDiscardedContent
 @property  unsigned long totalCostLimit
 @property  unsigned long countLimit

  // instance methods
  -[IMMemoryCache init]
  -[IMMemoryCache name]
  -[IMMemoryCache count]
  -[IMMemoryCache setQueue:]
  -[IMMemoryCache queue]
  -[IMMemoryCache allKeys]
  -[IMMemoryCache removeAllObjects]
  -[IMMemoryCache objectForKey:]
  -[IMMemoryCache removeObjectForKey:]
  -[IMMemoryCache delegate]
  -[IMMemoryCache setDelegate:]
  -[IMMemoryCache setObject:forKey:]
  -[IMMemoryCache .cxx_destruct]
  -[IMMemoryCache setName:]
  -[IMMemoryCache setObject:forKey:cost:]
  -[IMMemoryCache totalCostLimit]
  -[IMMemoryCache setTotalCostLimit:]
  -[IMMemoryCache countLimit]
  -[IMMemoryCache setCountLimit:]
  -[IMMemoryCache setCount:]
  -[IMMemoryCache accessQueue]
  -[IMMemoryCache items]
  -[IMMemoryCache setItems:]
  -[IMMemoryCache setAccessQueue:]
  -[IMMemoryCache _removeObjectForKey:]
  -[IMMemoryCache itemsArray]
  -[IMMemoryCache _addItem:forKey:]
  -[IMMemoryCache setTotalCost:]
  -[IMMemoryCache _checkLimitsAndEvictObjects]
  -[IMMemoryCache _shouldRemoveIndex:]
  -[IMMemoryCache totalCost]
  -[IMMemoryCache _checkLimits]
  -[IMMemoryCache removeObjectsForKeyWithPrefix:]
  -[IMMemoryCache checkLimitsAndEvictObjects]
  -[IMMemoryCache costForObjectWithKey:]
  -[IMMemoryCache numberOfCachedItems]
  -[IMMemoryCache evictsItemsWithDiscardedContent]
  -[IMMemoryCache setEvictsItemsWithDiscardedContent:]
  -[IMMemoryCache setItemsArray:]
  -[IMMemoryCache lastCheckTime]
  -[IMMemoryCache setLastCheckTime:]


ITMReachability : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ITMReachability reachabilityWithAddress:]
  +[ITMReachability reachabilityWithHostName:]
  +[ITMReachability reachabilityForInternetConnection]

  // instance methods
  -[ITMReachability dealloc]
  -[ITMReachability networkStatusForFlags:]
  -[ITMReachability connectionRequired]
  -[ITMReachability currentReachabilityStatus]
  -[ITMReachability stopNotifier]
  -[ITMReachability startNotifier]


MTMPUHalfTintedTransportButton : UIControl /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
 @property  UIButton *regularButton
 @property  UIButton *tintedButton
 @property  UIImage *regularImage
 @property  double regularImageAlpha
 @property  UIColor *regularImageColor
 @property  UIImageView *regularImageView
 @property  UIImage *tintedImage
 @property  double tintedImageAlpha
 @property  UIColor *tintedImageColor
 @property  UIImageView *tintedImageView

  // class methods
  +[MTMPUHalfTintedTransportButton transportButton]

  // instance methods
  -[MTMPUHalfTintedTransportButton setEnabled:]
  -[MTMPUHalfTintedTransportButton .cxx_destruct]
  -[MTMPUHalfTintedTransportButton isEnabled]
  -[MTMPUHalfTintedTransportButton prepareForReuse]
  -[MTMPUHalfTintedTransportButton initWithFrame:]
  -[MTMPUHalfTintedTransportButton sizeThatFits:]
  -[MTMPUHalfTintedTransportButton layoutSubviews]
  -[MTMPUHalfTintedTransportButton setHighlighted:]
  -[MTMPUHalfTintedTransportButton setSelected:]
  -[MTMPUHalfTintedTransportButton _newButton]
  -[MTMPUHalfTintedTransportButton setAdjustsImageWhenHighlighted:]
  -[MTMPUHalfTintedTransportButton hitTest:withEvent:]
  -[MTMPUHalfTintedTransportButton beginTrackingWithTouch:withEvent:]
  -[MTMPUHalfTintedTransportButton adjustsImageWhenHighlighted]
  -[MTMPUHalfTintedTransportButton cancelTrackingWithEvent:]
  -[MTMPUHalfTintedTransportButton shouldTrack]
  -[MTMPUHalfTintedTransportButton endTrackingWithTouch:withEvent:]
  -[MTMPUHalfTintedTransportButton applyTransportButtonLayoutAttributes:]
  -[MTMPUHalfTintedTransportButton wantsCustomHighlightAppearance]
  -[MTMPUHalfTintedTransportButton transportButtonEventHandler]
  -[MTMPUHalfTintedTransportButton transportButtonImageViewContentMode]
  -[MTMPUHalfTintedTransportButton setTransportButtonImageViewContentMode:]
  -[MTMPUHalfTintedTransportButton _shouldForwardSelectedState]
  -[MTMPUHalfTintedTransportButton setRegularImage:]
  -[MTMPUHalfTintedTransportButton setTintedImage:]
  -[MTMPUHalfTintedTransportButton _updateRegularImage]
  -[MTMPUHalfTintedTransportButton _applyImage:toButton:]
  -[MTMPUHalfTintedTransportButton regularImageAlpha]
  -[MTMPUHalfTintedTransportButton regularImageView]
  -[MTMPUHalfTintedTransportButton setRegularImageAlpha:]
  -[MTMPUHalfTintedTransportButton setRegularImageColor:]
  -[MTMPUHalfTintedTransportButton setTintedImageAlpha:]
  -[MTMPUHalfTintedTransportButton setTintedImageColor:]
  -[MTMPUHalfTintedTransportButton tintedImageAlpha]
  -[MTMPUHalfTintedTransportButton tintedImageColor]
  -[MTMPUHalfTintedTransportButton tintedImageView]
  -[MTMPUHalfTintedTransportButton _regularButton]
  -[MTMPUHalfTintedTransportButton _tintedButton]
  -[MTMPUHalfTintedTransportButton regularImage]
  -[MTMPUHalfTintedTransportButton regularImageColor]
  -[MTMPUHalfTintedTransportButton tintedImage]
  -[MTMPUHalfTintedTransportButton _handleButtonHitTest:withEvent:]


MTUIFocusedTouchGestureRecognizer : UIGestureRecognizer /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
 @property  UIView *focusedView
 @property  {UIEdgeInsets=dddd} touchAllowance

  // instance methods
  -[MTUIFocusedTouchGestureRecognizer .cxx_destruct]
  -[MTUIFocusedTouchGestureRecognizer reset]
  -[MTUIFocusedTouchGestureRecognizer touchesBegan:withEvent:]
  -[MTUIFocusedTouchGestureRecognizer touchesEnded:withEvent:]
  -[MTUIFocusedTouchGestureRecognizer focusedView]
  -[MTUIFocusedTouchGestureRecognizer initWithFocusedView:touchAllowance:]
  -[MTUIFocusedTouchGestureRecognizer touchAllowance]
  -[MTUIFocusedTouchGestureRecognizer setTouchAllowance:]


IMLogger : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *filter
 @property  NSString *runtimeOverride

  // class methods
  +[IMLogger sharedLogger]
  +[IMLogger rolledLogPrefix]
  +[IMLogger rollLogPath:maxSize:]
  +[IMLogger deleteRolledLogsForLogPath:maxAge:]

  // instance methods
  -[IMLogger init]
  -[IMLogger .cxx_destruct]
  -[IMLogger setFilter:]
  -[IMLogger filter]
  -[IMLogger logString:]
  -[IMLogger shouldOverrideCondition:file:]
  -[IMLogger logFunction:format:]
  -[IMLogger logFile:lineNumber:format:]
  -[IMLogger setRuntimeOverride:]
  -[IMLogger runtimeOverride]
  -[IMLogger setAuxPath:]
  -[IMLogger auxPath]
  -[IMLogger addRuntimeOverride:]
  -[IMLogger removeRuntimeOverride:]
  -[IMLogger setLogToFileOnly:]
  -[IMLogger logTofileOnly]


IMPodcastFeedItem : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL preferredCategoryFound
 @property  NSString *author
 @property  unsigned long byteSize
 @property  NSString *category
 @property  double duration
 @property  NSString *enclosureParameterString
 @property  NSString *enclosureURL
 @property  BOOL isExplicit
 @property  NSString *guid
 @property  NSString *itemDescription
 @property  NSString *itemDescriptionSourceElement
 @property  NSDate *pubDate
 @property  NSString *title
 @property  unsigned int trackNum
 @property  NSString *uti
 @property  NSString *itunesTitle
 @property  NSString *itemSummary
 @property  NSString *itemSummarySourceElement
 @property  long long seasonNumber
 @property  long long episodeNumber
 @property  NSString *episodeType
 @property  NSString *webpageURL

  // instance methods
  -[IMPodcastFeedItem isEqual:]
  -[IMPodcastFeedItem .cxx_destruct]
  -[IMPodcastFeedItem category]
  -[IMPodcastFeedItem setCategory:]
  -[IMPodcastFeedItem title]
  -[IMPodcastFeedItem setTitle:]
  -[IMPodcastFeedItem webpageURL]
  -[IMPodcastFeedItem setWebpageURL:]
  -[IMPodcastFeedItem duration]
  -[IMPodcastFeedItem uti]
  -[IMPodcastFeedItem setUti:]
  -[IMPodcastFeedItem author]
  -[IMPodcastFeedItem setAuthor:]
  -[IMPodcastFeedItem setDuration:]
  -[IMPodcastFeedItem setGuid:]
  -[IMPodcastFeedItem guid]
  -[IMPodcastFeedItem seasonNumber]
  -[IMPodcastFeedItem episodeNumber]
  -[IMPodcastFeedItem setEpisodeNumber:]
  -[IMPodcastFeedItem setSeasonNumber:]
  -[IMPodcastFeedItem episodeType]
  -[IMPodcastFeedItem setEpisodeType:]
  -[IMPodcastFeedItem itemDescription]
  -[IMPodcastFeedItem setItemDescription:]
  -[IMPodcastFeedItem setIsExplicit:]
  -[IMPodcastFeedItem isExplicit]
  -[IMPodcastFeedItem byteSize]
  -[IMPodcastFeedItem pubDate]
  -[IMPodcastFeedItem setPubDate:]
  -[IMPodcastFeedItem setByteSize:]
  -[IMPodcastFeedItem setEnclosureURL:]
  -[IMPodcastFeedItem enclosureURL]
  -[IMPodcastFeedItem setTrackNum:]
  -[IMPodcastFeedItem itunesTitle]
  -[IMPodcastFeedItem trackNum]
  -[IMPodcastFeedItem setItunesTitle:]
  -[IMPodcastFeedItem enclosureParameterString]
  -[IMPodcastFeedItem itemDescriptionSourceElement]
  -[IMPodcastFeedItem itemSummary]
  -[IMPodcastFeedItem itemSummarySourceElement]
  -[IMPodcastFeedItem setEnclosureParameterString:]
  -[IMPodcastFeedItem setItemDescriptionSourceElement:]
  -[IMPodcastFeedItem setItemSummary:]
  -[IMPodcastFeedItem setItemSummarySourceElement:]
  -[IMPodcastFeedItem preferredCategoryFound]
  -[IMPodcastFeedItem setPreferredCategoryFound:]


IMPodcastFeed : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL preferredCategoryFound
 @property  NSString *feedDescription
 @property  NSString *author
 @property  NSString *category
 @property  NSString *imageURL
 @property  NSString *globalImageURL
 @property  NSMutableArray *items
 @property  NSString *provider
 @property  NSString *updatedFeedURL
 @property  NSString *title
 @property  BOOL isExplicit
 @property  NSString *showType
 @property  NSString *webpageURL

  // instance methods
  -[IMPodcastFeed init]
  -[IMPodcastFeed isEqual:]
  -[IMPodcastFeed .cxx_destruct]
  -[IMPodcastFeed category]
  -[IMPodcastFeed setCategory:]
  -[IMPodcastFeed title]
  -[IMPodcastFeed setTitle:]
  -[IMPodcastFeed webpageURL]
  -[IMPodcastFeed setWebpageURL:]
  -[IMPodcastFeed setProvider:]
  -[IMPodcastFeed items]
  -[IMPodcastFeed setItems:]
  -[IMPodcastFeed author]
  -[IMPodcastFeed setAuthor:]
  -[IMPodcastFeed provider]
  -[IMPodcastFeed imageURL]
  -[IMPodcastFeed setImageURL:]
  -[IMPodcastFeed setIsExplicit:]
  -[IMPodcastFeed isExplicit]
  -[IMPodcastFeed updatedFeedURL]
  -[IMPodcastFeed setUpdatedFeedURL:]
  -[IMPodcastFeed preferredCategoryFound]
  -[IMPodcastFeed setPreferredCategoryFound:]
  -[IMPodcastFeed feedDescription]
  -[IMPodcastFeed globalImageURL]
  -[IMPodcastFeed showType]
  -[IMPodcastFeed setFeedDescription:]
  -[IMPodcastFeed setGlobalImageURL:]
  -[IMPodcastFeed setShowType:]


IMPodcastParser : NSObject /usr/lib/libSystem.B.dylib <NSXMLParserDelegate>
 @property  IMPodcastFeed *parsedFeed
 @property  NSDateFormatter *rssDateFormatter
 @property  BOOL shouldBufferElementChars
 @property  NSMutableString *elementCharBuffer
 @property  unsigned long itemElementNestCount
 @property  BOOL inAuthorElement
 @property  BOOL inGlobalImageElement
 @property  NSString *feedDescriptionSourceElement
 @property  BOOL preferredFeedCategoryFound
 @property  BOOL preferredItemCategoryFound
 @property  long long feedType
 @property  NSError *parseError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMPodcastParser isITunesNamespace:]
  +[IMPodcastParser isContentNamespace:]

  // instance methods
  -[IMPodcastParser init]
  -[IMPodcastParser .cxx_destruct]
  -[IMPodcastParser parser:foundCharacters:]
  -[IMPodcastParser parser:didEndElement:namespaceURI:qualifiedName:]
  -[IMPodcastParser parser:didStartElement:namespaceURI:qualifiedName:attributes:]
  -[IMPodcastParser parser:parseErrorOccurred:]
  -[IMPodcastParser parseError]
  -[IMPodcastParser parseWithData:]
  -[IMPodcastParser feedType]
  -[IMPodcastParser setFeedType:]
  -[IMPodcastParser setParsedFeed:]
  -[IMPodcastParser parsedFeed]
  -[IMPodcastParser rssDateFormatter]
  -[IMPodcastParser removeLastColonOfString:]
  -[IMPodcastParser rssParser:didStartElement:namespaceURI:qualifiedName:attributes:]
  -[IMPodcastParser atomParser:didStartElement:namespaceURI:qualifiedName:attributes:]
  -[IMPodcastParser startBufferingElementChars]
  -[IMPodcastParser itemElementNestCount]
  -[IMPodcastParser preferredItemCategoryFound]
  -[IMPodcastParser _parseEnclosureElement:forFeedItem:]
  -[IMPodcastParser setItemElementNestCount:]
  -[IMPodcastParser setPreferredItemCategoryFound:]
  -[IMPodcastParser preferredFeedCategoryFound]
  -[IMPodcastParser setInAuthorElement:]
  -[IMPodcastParser inAuthorElement]
  -[IMPodcastParser rssParser:didEndElement:namespaceURI:qualifiedName:]
  -[IMPodcastParser atomParser:didEndElement:namespaceURI:qualifiedName:]
  -[IMPodcastParser elementCharBufferTrimmed]
  -[IMPodcastParser endBufferingElementChars]
  -[IMPodcastParser elementCharBuffer]
  -[IMPodcastParser dateFromRSSDateString:]
  -[IMPodcastParser postProcessItemElement:]
  -[IMPodcastParser feedDescriptionSourceElement]
  -[IMPodcastParser setFeedDescriptionSourceElement:]
  -[IMPodcastParser setPreferredFeedCategoryFound:]
  -[IMPodcastParser dateFromAtomDateString:]
  -[IMPodcastParser shouldBufferElementChars]
  -[IMPodcastParser setParseError:]
  -[IMPodcastParser setShouldBufferElementChars:]
  -[IMPodcastParser setElementCharBuffer:]
  -[IMPodcastParser parseStreamFromURL:withCompletionBlock:]
  -[IMPodcastParser setRssDateFormatter:]
  -[IMPodcastParser inGlobalImageElement]
  -[IMPodcastParser setInGlobalImageElement:]


IMSleepTimerController : NSObject /usr/lib/libSystem.B.dylib
 @property  IMAVPlayer *player
 @property  <IMSleepTimerDelegate> *delegate

  // instance methods
  -[IMSleepTimerController delegate]
  -[IMSleepTimerController setDelegate:]
  -[IMSleepTimerController .cxx_destruct]
  -[IMSleepTimerController player]
  -[IMSleepTimerController setPlayer:]
  -[IMSleepTimerController initWithPlayer:]
  -[IMSleepTimerController addActionForTime:alertController:]
  -[IMSleepTimerController addActionWithTitle:autoStop:timerTime:alertController:]
  -[IMSleepTimerController alertControllerForSleepTimer]


IMStopWatch : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[IMStopWatch initialize]
  +[IMStopWatch stopwatchWithDescription:]
  +[IMStopWatch stopwatch]

  // instance methods
  -[IMStopWatch init]
  -[IMStopWatch .cxx_destruct]
  -[IMStopWatch start]
  -[IMStopWatch reset]
  -[IMStopWatch time]
  -[IMStopWatch report]
  -[IMStopWatch setDescription:]
  -[IMStopWatch reportWithMarker:]


MTMPButton : UIButton /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
 @property  {UIEdgeInsets=dddd} alignmentRectInsets
 @property  {UIEdgeInsets=dddd} hitRectInsets
 @property  double holdDelayInterval
 @property  BOOL holding
 @property  BOOL hitTestDebugEnabled

  // class methods
  +[MTMPButton easyTouchButtonWithType:]
  +[MTMPButton easyTouchDefaultHitRectInsets]
  +[MTMPButton easyTouchDefaultCharge]

  // instance methods
  -[MTMPButton dealloc]
  -[MTMPButton .cxx_destruct]
  -[MTMPButton initWithFrame:]
  -[MTMPButton layoutSubviews]
  -[MTMPButton alignmentRectInsets]
  -[MTMPButton pointInside:withEvent:]
  -[MTMPButton touchesEnded:withEvent:]
  -[MTMPButton touchesCancelled:withEvent:]
  -[MTMPButton setAlignmentRectInsets:]
  -[MTMPButton beginTrackingWithTouch:withEvent:]
  -[MTMPButton cancelTrackingWithEvent:]
  -[MTMPButton endTrackingWithTouch:withEvent:]
  -[MTMPButton hitRect]
  -[MTMPButton isHolding]
  -[MTMPButton hitRectInsets]
  -[MTMPButton setHitRectInsets:]
  -[MTMPButton setHitTestDebugEnabled:]
  -[MTMPButton _delayedTriggerHold]
  -[MTMPButton _handleTouchCancel]
  -[MTMPButton _handleTouchDown]
  -[MTMPButton _handleTouchUp]
  -[MTMPButton holdDelayInterval]
  -[MTMPButton setHoldDelayInterval:]
  -[MTMPButton hitTestDebugEnabled]


IMPlayerItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *chapters
 @property  BOOL areChaptersLoading
 @property  NSObject<OS_dispatch_queue> *chapterLoadingQueue
 @property  MPNowPlayingContentItem *contentItem
 @property  NSUUID *instanceIdentifier
 @property  NSURL *url
 @property  BOOL areChaptersLoaded
 @property  NSString *title
 @property  NSString *album
 @property  NSString *author
 @property  BOOL video
 @property  BOOL local
 @property  BOOL playable
 @property  AVURLAsset *asset
 @property  double duration
 @property  double playhead
 @property  NSArray *timeChapters
 @property  NSArray *metadataChapters
 @property  IMPlayerManifest *manifest
 @property  unsigned long manifestIndex

  // class methods
  +[IMPlayerItem createAssetForUrl:]

  // instance methods
  -[IMPlayerItem init]
  -[IMPlayerItem isEqual:]
  -[IMPlayerItem .cxx_destruct]
  -[IMPlayerItem url]
  -[IMPlayerItem reset]
  -[IMPlayerItem title]
  -[IMPlayerItem setTitle:]
  -[IMPlayerItem duration]
  -[IMPlayerItem subtitle]
  -[IMPlayerItem album]
  -[IMPlayerItem setUrl:]
  -[IMPlayerItem author]
  -[IMPlayerItem setAuthor:]
  -[IMPlayerItem asset]
  -[IMPlayerItem setDuration:]
  -[IMPlayerItem initWithAsset:]
  -[IMPlayerItem isVideo]
  -[IMPlayerItem isLocal]
  -[IMPlayerItem instanceIdentifier]
  -[IMPlayerItem setInstanceIdentifier:]
  -[IMPlayerItem isPlayable]
  -[IMPlayerItem setIsVideo:]
  -[IMPlayerItem setAlbum:]
  -[IMPlayerItem manifest]
  -[IMPlayerItem setManifest:]
  -[IMPlayerItem contentItem]
  -[IMPlayerItem isAssetLoaded]
  -[IMPlayerItem contentItemIdentifier]
  -[IMPlayerItem artworkIdentifier]
  -[IMPlayerItem chapters]
  -[IMPlayerItem setChapters:]
  -[IMPlayerItem updateActivity:]
  -[IMPlayerItem externalMetadata]
  -[IMPlayerItem setContentItem:]
  -[IMPlayerItem playhead]
  -[IMPlayerItem setPlayhead:]
  -[IMPlayerItem setAreChaptersLoaded:]
  -[IMPlayerItem recreateContentItem]
  -[IMPlayerItem updateContentItem]
  -[IMPlayerItem areChaptersLoaded]
  -[IMPlayerItem timeChapters]
  -[IMPlayerItem metadataChapters]
  -[IMPlayerItem retrieveArtwork:withSize:]
  -[IMPlayerItem loadChapters]
  -[IMPlayerItem areChaptersLoading]
  -[IMPlayerItem setAreChaptersLoading:]
  -[IMPlayerItem chapterLoadingQueue]
  -[IMPlayerItem initWithUrl:]
  -[IMPlayerItem invalidateAsset]
  -[IMPlayerItem notifyUserIsNotPlayable]
  -[IMPlayerItem beginLoadingArtworkForAVPlayerItem:]
  -[IMPlayerItem _isContentItemLoaded]
  -[IMPlayerItem retrieveArtwork:withSize:atTime:]
  -[IMPlayerItem manifestIndex]
  -[IMPlayerItem setManifestIndex:]
  -[IMPlayerItem setChapterLoadingQueue:]


IMPlayerChapterInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *title
 @property  NSURL *externalURL
 @property  UIImage *artwork
 @property  NSData *artworkData
 @property  double duration
 @property  double time
 @property  {?={?=qiIq}{?=qiIq}} mediaTimeRange
 @property  {?={?=qiIq}{?=qiIq}} assetTimeRange
 @property  int type
 @property  int metadataType

  // instance methods
  -[IMPlayerChapterInfo isEqual:]
  -[IMPlayerChapterInfo type]
  -[IMPlayerChapterInfo setType:]
  -[IMPlayerChapterInfo .cxx_destruct]
  -[IMPlayerChapterInfo title]
  -[IMPlayerChapterInfo setTitle:]
  -[IMPlayerChapterInfo duration]
  -[IMPlayerChapterInfo time]
  -[IMPlayerChapterInfo setTime:]
  -[IMPlayerChapterInfo metadataType]
  -[IMPlayerChapterInfo setDuration:]
  -[IMPlayerChapterInfo artwork]
  -[IMPlayerChapterInfo artworkData]
  -[IMPlayerChapterInfo setArtworkData:]
  -[IMPlayerChapterInfo externalURL]
  -[IMPlayerChapterInfo setMetadataType:]
  -[IMPlayerChapterInfo setExternalURL:]
  -[IMPlayerChapterInfo setMediaTimeRange:]
  -[IMPlayerChapterInfo setAssetTimeRange:]
  -[IMPlayerChapterInfo mediaTimeRange]
  -[IMPlayerChapterInfo assetTimeRange]


IMImageBlur : NSObject /usr/lib/libSystem.B.dylib <IMImageModifier>
 @property  long long style
 @property  double radius
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMImageBlur style]
  -[IMImageBlur radius]
  -[IMImageBlur hasModifications]
  -[IMImageBlur _blurredImageFromSourceImage:]
  -[IMImageBlur _backdropBlurSettings]
  -[IMImageBlur _newBackdropSettings]
  -[IMImageBlur _lightBackdropBlurSettings]
  -[IMImageBlur initWithStyle:radius:]
  -[IMImageBlur imageFromSourceImage:]
  -[IMImageBlur modificationCacheKey]


MTNowPlayingIndicatorView : UIControl /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
 @property  double interLevelSpacing
 @property  double levelCornerRadius
 @property  double levelWidth
 @property  double maximumLevelHeight
 @property  double minimumLevelHeight
 @property  long long numberOfLevels
 @property  long long playbackState
 @property  long long bounceStyle
 @property  BOOL showsLevelGutters
 @property  UIColor *levelGuttersColor

  // instance methods
  -[MTNowPlayingIndicatorView .cxx_destruct]
  -[MTNowPlayingIndicatorView initWithFrame:]
  -[MTNowPlayingIndicatorView canBecomeFocused]
  -[MTNowPlayingIndicatorView sizeThatFits:]
  -[MTNowPlayingIndicatorView layoutSubviews]
  -[MTNowPlayingIndicatorView tintColorDidChange]
  -[MTNowPlayingIndicatorView drawRect:]
  -[MTNowPlayingIndicatorView _removeAllAnimations:]
  -[MTNowPlayingIndicatorView playbackState]
  -[MTNowPlayingIndicatorView setPlaybackState:]
  -[MTNowPlayingIndicatorView _reloadLevelViews]
  -[MTNowPlayingIndicatorView _updateLevelAnimations]
  -[MTNowPlayingIndicatorView setLevelCornerRadius:]
  -[MTNowPlayingIndicatorView setLevelWidth:]
  -[MTNowPlayingIndicatorView setMaximumLevelHeight:]
  -[MTNowPlayingIndicatorView setMinimumLevelHeight:]
  -[MTNowPlayingIndicatorView setNumberOfLevels:]
  -[MTNowPlayingIndicatorView setShowsLevelGutters:]
  -[MTNowPlayingIndicatorView setLevelGuttersColor:]
  -[MTNowPlayingIndicatorView interLevelSpacing]
  -[MTNowPlayingIndicatorView setInterLevelSpacing:]
  -[MTNowPlayingIndicatorView levelCornerRadius]
  -[MTNowPlayingIndicatorView levelWidth]
  -[MTNowPlayingIndicatorView maximumLevelHeight]
  -[MTNowPlayingIndicatorView minimumLevelHeight]
  -[MTNowPlayingIndicatorView numberOfLevels]
  -[MTNowPlayingIndicatorView showsLevelGutters]
  -[MTNowPlayingIndicatorView levelGuttersColor]
  -[MTNowPlayingIndicatorView _bufferTimerFired]
  -[MTNowPlayingIndicatorView _seedValueForBarIndex:]
  -[MTNowPlayingIndicatorView bounceStyle]
  -[MTNowPlayingIndicatorView _fixedSeedValueForBarIndex:]
  -[MTNowPlayingIndicatorView _randomSeedValueForBar]
  -[MTNowPlayingIndicatorView setBounceStyle:]


IMImageStore : NSObject /usr/lib/libSystem.B.dylib <IMCache>
 @property  NSString *name
 @property  NSOperationQueue *fetchOperationQueue
 @property  double maxImageDimensionInPixels
 @property  IMMemoryCache *memoryCache
 @property  IMImageDiskCache *diskCache
 @property  BOOL disableMemoryCache
 @property  @? alternativeSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMImageStore defaultStore]
  +[IMImageStore defaultName]
  +[IMImageStore _memorySize]
  +[IMImageStore defaultBasePath]
  +[IMImageStore defaultMaxImageDimensionInPixels]
  +[IMImageStore defaultMaxConcurrentOperations]
  +[IMImageStore defaultAlternativeSizeBlock]
  +[IMImageStore defaultImageResizeOptions]

  // instance methods
  -[IMImageStore init]
  -[IMImageStore name]
  -[IMImageStore clearCache]
  -[IMImageStore isEmpty]
  -[IMImageStore .cxx_destruct]
  -[IMImageStore setName:]
  -[IMImageStore initWithName:]
  -[IMImageStore fullName]
  -[IMImageStore removeItemForKey:]
  -[IMImageStore imageForKey:]
  -[IMImageStore memoryCache]
  -[IMImageStore initWithName:basePath:maxImageDimensionInPixels:maxConcurrentOperations:alternativeSizeBlock:]
  -[IMImageStore configureMemoryCache]
  -[IMImageStore memoryWarning]
  -[IMImageStore setFetchOperationQueue:]
  -[IMImageStore fetchOperationQueue]
  -[IMImageStore setMaxImageDimensionInPixels:]
  -[IMImageStore addImage:forKey:persist:]
  -[IMImageStore addImage:forKey:persist:discardTransparency:]
  -[IMImageStore _addImage:toMemoryCacheWithKey:]
  -[IMImageStore diskCache]
  -[IMImageStore addImage:forKey:]
  -[IMImageStore requireSquareImages]
  -[IMImageStore _loadDiskCacheImageForKey:expectImageExists:]
  -[IMImageStore imageForKey:size:resizeOptions:]
  -[IMImageStore imageForKey:size:resizeOptions:modifier:]
  -[IMImageStore _keyForSize:baseKey:modifier:]
  -[IMImageStore alternativeSize]
  -[IMImageStore maxImageDimensionInPixels]
  -[IMImageStore _createModifiedImageFromSourceKey:newImageKey:modifier:size:resizeOptions:]
  -[IMImageStore _createScaledImageFromSourceKey:newImageKey:size:resizeOptions:]
  -[IMImageStore _performImagingTransactionNamed:block:]
  -[IMImageStore imageInMemoryForKey:size:modifier:]
  -[IMImageStore imageUrlForKey:]
  -[IMImageStore asyncImageForKey:size:resizeOptions:modifier:completionHandler:]
  -[IMImageStore asyncImageURLForKey:squareDimension:cacheKeyModifier:completionHandler:]
  -[IMImageStore hasItemForKey:size:modifier:]
  -[IMImageStore disableMemoryCache]
  -[IMImageStore performWhenURLAvailableForImageForKey:block:]
  -[IMImageStore setDisableMemoryCache:]
  -[IMImageStore addImagesWithSourceUrl:forKeys:removeOldItems:discardTransparency:completion:]
  -[IMImageStore imageForKey:size:]
  -[IMImageStore imageForKey:size:modifier:]
  -[IMImageStore imageInMemoryForKey:size:]
  -[IMImageStore asyncImageForKey:completionHandler:]
  -[IMImageStore asyncImageForKey:size:completionHandler:]
  -[IMImageStore asyncImageForKey:size:resizeOptions:completionHandler:]
  -[IMImageStore asyncImageForKey:size:modifier:completionHandler:]
  -[IMImageStore asyncImageForKey:squareDimension:cacheKeyModifier:completionHandler:]
  -[IMImageStore asyncImageURLForKey:completionHandler:]
  -[IMImageStore hasItemForKey:size:]
  -[IMImageStore _keyForSize:baseKey:]
  -[IMImageStore setAlternativeSize:]
  -[IMImageStore removeItemsWithPrefx:]
  -[IMImageStore hasItemForKey:]


IMAVBluetoothCompanionLinkAssertion : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[IMAVBluetoothCompanionLinkAssertion init]
  -[IMAVBluetoothCompanionLinkAssertion dealloc]
  -[IMAVBluetoothCompanionLinkAssertion invalidate]
  -[IMAVBluetoothCompanionLinkAssertion acquire]


IMBaseDiskCache : NSObject /usr/lib/libSystem.B.dylib <IMCache>
 @property  NSString *basePath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMBaseDiskCache init]
  -[IMBaseDiskCache initialize]
  -[IMBaseDiskCache clearCache]
  -[IMBaseDiskCache isEmpty]
  -[IMBaseDiskCache .cxx_destruct]
  -[IMBaseDiskCache removeItemForKey:]
  -[IMBaseDiskCache initWithBasePath:]
  -[IMBaseDiskCache basePath]
  -[IMBaseDiskCache pathForKey:]
  -[IMBaseDiskCache setBasePath:]
  -[IMBaseDiskCache _allFiles]
  -[IMBaseDiskCache removeItemsWithPrefx:]
  -[IMBaseDiskCache hasItemForKey:]


MTMPUTheme : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTMPUTheme _themeAssetCache]
  +[MTMPUTheme cachedObjectWithKey:block:]


IMAccessibilitySafeCategory__NSObject : IMAccessibilitySafeCategory

IMAccessibilitySafeCategory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[IMAccessibilitySafeCategory _addCategoryMethod:toClass:isClass:]
  +[IMAccessibilitySafeCategory installCategoryOnClassNamed:]


IMUTITypes : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[IMUTITypes UTIByExtension:]
  +[IMUTITypes UTIFromMIMEType:]


MTMPUFontDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying>
 @property  long long textStyle
 @property  double systemFontSize
 @property  long long weight
 @property  double defaultPointSizeAdjustment
 @property  long long leadingAdjustment
 @property  BOOL usesItalic
 @property  BOOL usesCondensedMetrics
 @property  BOOL wantsMonospaceNumbers
 @property  UIFont *preferredFont
 @property  double preferredFontAscender
 @property  double preferredFontBodyLeading
 @property  double preferredFontCapHeight
 @property  double preferredFontDescender
 @property  double preferredFontLineHeight
 @property  UIFont *defaultFont
 @property  double defaultFontLineHeight

  // class methods
  +[MTMPUFontDescriptor invalidationHandler]
  +[MTMPUFontDescriptor fontDescriptorWithTextStyle:leadingAdjustment:weight:]
  +[MTMPUFontDescriptor fontDescriptorWithTextStyle:leadingAdjustment:weight:defaultPointSizeAdjustment:]
  +[MTMPUFontDescriptor _fontDescriptorWithTextStyle:leadingAdjustment:weight:systemFontSize:defaultPointSizeAdjustment:]
  +[MTMPUFontDescriptor fontDescriptorWithSystemFontSize:leadingAdjustment:weight:]
  +[MTMPUFontDescriptor _layoutInterpolatorReferenceMetricForContentSizeCategory:]
  +[MTMPUFontDescriptor _baseNativeTextStyleForTextStyle:]
  +[MTMPUFontDescriptor _adjustedNativeFontDescriptorWithBaseNativeFontDescriptor:forCustomTextStyle:]
  +[MTMPUFontDescriptor _getNativeFontDescriptorSymbolicTraits:nativeTextStyleAttribute:forWeight:textStyle:]
  +[MTMPUFontDescriptor _nativeFontDescriptorSymbolicTraitsForLeadingAdjustment:]
  +[MTMPUFontDescriptor _nativeFontDescriptorSymbolicTraitsForUsingItalic:isCondensedMetrics:]
  +[MTMPUFontDescriptor _fontPointSizeLayoutInterpolatorForTextStyle:]
  +[MTMPUFontDescriptor fontDescriptorWithTextStyle:]
  +[MTMPUFontDescriptor fontDescriptorWithTextStyle:weight:]
  +[MTMPUFontDescriptor fontDescriptorWithTextStyle:leadingAdjustment:]
  +[MTMPUFontDescriptor fontDescriptorWithSystemFontSize:]
  +[MTMPUFontDescriptor fontDescriptorWithSystemFontSize:weight:]
  +[MTMPUFontDescriptor fontDescriptorWithSystemFontSize:leadingAdjustment:]

  // instance methods
  -[MTMPUFontDescriptor init]
  -[MTMPUFontDescriptor dealloc]
  -[MTMPUFontDescriptor isEqual:]
  -[MTMPUFontDescriptor copyWithZone:]
  -[MTMPUFontDescriptor mutableCopyWithZone:]
  -[MTMPUFontDescriptor .cxx_destruct]
  -[MTMPUFontDescriptor weight]
  -[MTMPUFontDescriptor textStyle]
  -[MTMPUFontDescriptor systemFontSize]
  -[MTMPUFontDescriptor scaledValueForValue:]
  -[MTMPUFontDescriptor defaultFont]
  -[MTMPUFontDescriptor _resetToDefaultValues]
  -[MTMPUFontDescriptor _handleFontDescriptorDidInvalidateCachedFontsAndMetricsNotification:]
  -[MTMPUFontDescriptor _preferredFontDescriptorForTextStyle:]
  -[MTMPUFontDescriptor _fontWithBaseNativeFontDescriptorProvider:]
  -[MTMPUFontDescriptor preferredFont]
  -[MTMPUFontDescriptor _defaultFontDescriptorForTextStyle:]
  -[MTMPUFontDescriptor preferredFontBodyLeading]
  -[MTMPUFontDescriptor defaultFontBodyLeading]
  -[MTMPUFontDescriptor _invalidateCachedFontsAndMetrics]
  -[MTMPUFontDescriptor _fontPointSizeLayoutInterpolator]
  -[MTMPUFontDescriptor preferredFontAscender]
  -[MTMPUFontDescriptor preferredFontLineHeight]
  -[MTMPUFontDescriptor preferredFontCapHeight]
  -[MTMPUFontDescriptor preferredFontDescender]
  -[MTMPUFontDescriptor defaultFontAscender]
  -[MTMPUFontDescriptor defaultFontCapHeight]
  -[MTMPUFontDescriptor defaultFontDescender]
  -[MTMPUFontDescriptor defaultFontLineHeight]
  -[MTMPUFontDescriptor defaultPointSizeAdjustment]
  -[MTMPUFontDescriptor leadingAdjustment]
  -[MTMPUFontDescriptor usesItalic]
  -[MTMPUFontDescriptor usesCondensedMetrics]
  -[MTMPUFontDescriptor wantsMonospaceNumbers]


MTMPUMutableFontDescriptor : MTMPUFontDescriptor
 @property  long long textStyle
 @property  double systemFontSize
 @property  long long weight
 @property  long long leadingAdjustment
 @property  double defaultPointSizeAdjustment
 @property  BOOL usesItalic
 @property  BOOL usesCondensedMetrics
 @property  BOOL wantsMonospaceNumbers

  // instance methods
  -[MTMPUMutableFontDescriptor copyWithZone:]
  -[MTMPUMutableFontDescriptor setWeight:]
  -[MTMPUMutableFontDescriptor setTextStyle:]
  -[MTMPUMutableFontDescriptor setLeadingAdjustment:]
  -[MTMPUMutableFontDescriptor setSystemFontSize:]
  -[MTMPUMutableFontDescriptor setDefaultPointSizeAdjustment:]
  -[MTMPUMutableFontDescriptor _resetToDefaultValues]
  -[MTMPUMutableFontDescriptor _copyAllowingGlobalCacheLookup:]
  -[MTMPUMutableFontDescriptor setUsesItalic:]
  -[MTMPUMutableFontDescriptor setUsesCondensedMetrics:]
  -[MTMPUMutableFontDescriptor setWantsMonospaceNumbers:]


MTMPUMarqueeView : UIView /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity <CAAnimationDelegate>
 @property  double contentGap
 @property  {CGSize=dd} contentSize
 @property  UIView *contentView
 @property  UIView *animationReferenceView
 @property  {UIEdgeInsets=dddd} fadeEdgeInsets
 @property  BOOL fadeOnlyWhenAnimating
 @property  <MTMPUMarqueeViewDelegate> *delegate
 @property  double marqueeDelay
 @property  double marqueeScrollRate
 @property  BOOL marqueeEnabled
 @property  NSArray *coordinatedMarqueeViews
 @property  UIView *viewForContentSize
 @property  long long animationDirection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTMPUMarqueeView delegate]
  -[MTMPUMarqueeView setDelegate:]
  -[MTMPUMarqueeView .cxx_destruct]
  -[MTMPUMarqueeView _duration]
  -[MTMPUMarqueeView setBounds:]
  -[MTMPUMarqueeView contentSize]
  -[MTMPUMarqueeView setContentSize:]
  -[MTMPUMarqueeView contentView]
  -[MTMPUMarqueeView setFrame:]
  -[MTMPUMarqueeView intrinsicContentSize]
  -[MTMPUMarqueeView initWithFrame:]
  -[MTMPUMarqueeView layoutSubviews]
  -[MTMPUMarqueeView setMarqueeEnabled:]
  -[MTMPUMarqueeView invalidateIntrinsicContentSize]
  -[MTMPUMarqueeView viewForFirstBaselineLayout]
  -[MTMPUMarqueeView viewForLastBaselineLayout]
  -[MTMPUMarqueeView didMoveToWindow]
  -[MTMPUMarqueeView animationDidStop:finished:]
  -[MTMPUMarqueeView animationDidStart:]
  -[MTMPUMarqueeView _createMarqueeAnimationIfNeeded]
  -[MTMPUMarqueeView _tearDownMarqueeAnimation]
  -[MTMPUMarqueeView animationDirection]
  -[MTMPUMarqueeView _applyMarqueeFade]
  -[MTMPUMarqueeView setMarqueeEnabled:withOptions:]
  -[MTMPUMarqueeView addCoordinatedMarqueeView:]
  -[MTMPUMarqueeView _createMarqueeAnimationIfNeededWithMaximumDuration:beginTime:]
  -[MTMPUMarqueeView setContentGap:]
  -[MTMPUMarqueeView setMarqueeDelay:]
  -[MTMPUMarqueeView setAnimationReferenceView:]
  -[MTMPUMarqueeView setMarqueeScrollRate:]
  -[MTMPUMarqueeView setViewForContentSize:]
  -[MTMPUMarqueeView setAnimationDirection:]
  -[MTMPUMarqueeView coordinatedMarqueeViews]
  -[MTMPUMarqueeView resetMarqueePosition]
  -[MTMPUMarqueeView contentGap]
  -[MTMPUMarqueeView animationReferenceView]
  -[MTMPUMarqueeView fadeEdgeInsets]
  -[MTMPUMarqueeView setFadeEdgeInsets:]
  -[MTMPUMarqueeView marqueeDelay]
  -[MTMPUMarqueeView marqueeScrollRate]
  -[MTMPUMarqueeView isMarqueeEnabled]
  -[MTMPUMarqueeView viewForContentSize]
  -[MTMPUMarqueeView fadeOnlyWhenAnimating]
  -[MTMPUMarqueeView _applyMarqueeFadeIfNeeded]
  -[MTMPUMarqueeView _removeMarqueeFade]
  -[MTMPUMarqueeView setFadeOnlyWhenAnimating:]


_MPUMarqueeContentView : UIView /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
  // class methods
  +[_MPUMarqueeContentView layerClass]

  // instance methods
  -[_MPUMarqueeContentView _intrinsicContentSizeInvalidatedForChildView:]


MTMPUTransportButtonEventHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  UIControl *button
 @property  double minimumLongPressDuration
 @property  BOOL supportsTapWhenDisabled

  // instance methods
  -[MTMPUTransportButtonEventHandler init]
  -[MTMPUTransportButtonEventHandler dealloc]
  -[MTMPUTransportButtonEventHandler .cxx_destruct]
  -[MTMPUTransportButtonEventHandler button]
  -[MTMPUTransportButtonEventHandler beginTrackingWithTouch:withEvent:]
  -[MTMPUTransportButtonEventHandler cancelTrackingWithEvent:]
  -[MTMPUTransportButtonEventHandler endTrackingWithTouch:withEvent:]
  -[MTMPUTransportButtonEventHandler setButton:]
  -[MTMPUTransportButtonEventHandler _clearLongPressTimer]
  -[MTMPUTransportButtonEventHandler _longPressTimerAction]
  -[MTMPUTransportButtonEventHandler performHitTestingBlock:]
  -[MTMPUTransportButtonEventHandler shouldFakeEnabled]
  -[MTMPUTransportButtonEventHandler shouldForceTrackingEnabled]
  -[MTMPUTransportButtonEventHandler minimumLongPressDuration]
  -[MTMPUTransportButtonEventHandler setMinimumLongPressDuration:]
  -[MTMPUTransportButtonEventHandler supportsTapWhenDisabled]
  -[MTMPUTransportButtonEventHandler setSupportsTapWhenDisabled:]


IMAVExpediteBasebandBringUpAssertion : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[IMAVExpediteBasebandBringUpAssertion invalidate]
  -[IMAVExpediteBasebandBringUpAssertion acquire]


IMExpandingLabel : UIView /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
 @property  BOOL fitsWithinLineLimit
 @property  unsigned long languageDirection
 @property  UITextView *textView
 @property  NSString *text
 @property  NSDictionary *textAttributes
 @property  BOOL scrollEnabled
 @property  unsigned long numberOfLines
 @property  long long textMode
 @property  UIButton *moreButton
 @property  BOOL expanded
 @property  BOOL hasGradient
 @property  double gradientHeight
 @property  <IMExpandingLabelDelegate> *delegate

  // instance methods
  -[IMExpandingLabel delegate]
  -[IMExpandingLabel setDelegate:]
  -[IMExpandingLabel .cxx_destruct]
  -[IMExpandingLabel text]
  -[IMExpandingLabel setText:]
  -[IMExpandingLabel textView]
  -[IMExpandingLabel setTextView:]
  -[IMExpandingLabel initWithFrame:]
  -[IMExpandingLabel setNumberOfLines:]
  -[IMExpandingLabel layoutSubviews]
  -[IMExpandingLabel setScrollEnabled:]
  -[IMExpandingLabel isScrollEnabled]
  -[IMExpandingLabel numberOfLines]
  -[IMExpandingLabel textAttributes]
  -[IMExpandingLabel setTextAttributes:]
  -[IMExpandingLabel isExpanded]
  -[IMExpandingLabel textMode]
  -[IMExpandingLabel setTextMode:]
  -[IMExpandingLabel setExpanded:]
  -[IMExpandingLabel heightForWidth:]
  -[IMExpandingLabel setGradientHeight:]
  -[IMExpandingLabel gradientHeight]
  -[IMExpandingLabel languageDirection]
  -[IMExpandingLabel setLanguageDirection:]
  -[IMExpandingLabel setMoreButton:]
  -[IMExpandingLabel moreButton]
  -[IMExpandingLabel hasGradient]
  -[IMExpandingLabel setFitsWithinLineLimit:]
  -[IMExpandingLabel fitsWithinLineLimit]
  -[IMExpandingLabel moreButtonTapped:]
  -[IMExpandingLabel setHasGradient:]


MTMPUTransportButton : UIButton /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity <MTMPUTransportButton>
 @property  UIColor *regularColor
 @property  UIColor *disabledColor
 @property  UIColor *highlightedColor
 @property  UIColor *selectedColor
 @property  BOOL shouldInferColorsFromTintColor
 @property  BOOL shouldShowBackgroundForSelectedState
 @property  UIImage *transportButtonImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  MTMPUTransportButtonEventHandler *transportButtonEventHandler
 @property  BOOL adjustsImageWhenHighlighted
 @property  long long transportButtonImageViewContentMode

  // class methods
  +[MTMPUTransportButton transportButton]
  +[MTMPUTransportButton defaultRegularColor]
  +[MTMPUTransportButton defaultHighlightedColor]
  +[MTMPUTransportButton defaultDisabledColor]
  +[MTMPUTransportButton defaultSelectedColor]
  +[MTMPUTransportButton _stringForDisplayedSkipInterval:]
  +[MTMPUTransportButton skipIntervalImageForInterval:baseImage:font:scale:]

  // instance methods
  -[MTMPUTransportButton setEnabled:]
  -[MTMPUTransportButton .cxx_destruct]
  -[MTMPUTransportButton isEnabled]
  -[MTMPUTransportButton prepareForReuse]
  -[MTMPUTransportButton initWithFrame:]
  -[MTMPUTransportButton layoutSubviews]
  -[MTMPUTransportButton setSelected:]
  -[MTMPUTransportButton hitTest:withEvent:]
  -[MTMPUTransportButton beginTrackingWithTouch:withEvent:]
  -[MTMPUTransportButton cancelTrackingWithEvent:]
  -[MTMPUTransportButton shouldTrack]
  -[MTMPUTransportButton endTrackingWithTouch:withEvent:]
  -[MTMPUTransportButton setHighlightedColor:]
  -[MTMPUTransportButton highlightedColor]
  -[MTMPUTransportButton selectedColor]
  -[MTMPUTransportButton setSelectedColor:]
  -[MTMPUTransportButton disabledColor]
  -[MTMPUTransportButton setDisabledColor:]
  -[MTMPUTransportButton shouldShowBackgroundForSelectedState]
  -[MTMPUTransportButton setTransportButtonImage:]
  -[MTMPUTransportButton _updateDisabledTransportButtonImage]
  -[MTMPUTransportButton _updateHighlightedTransportButtonImage]
  -[MTMPUTransportButton _updateRegularTransportButtonImage]
  -[MTMPUTransportButton _updateSelectedTransportButtonImage]
  -[MTMPUTransportButton applyTransportButtonLayoutAttributes:]
  -[MTMPUTransportButton wantsCustomHighlightAppearance]
  -[MTMPUTransportButton transportButtonEventHandler]
  -[MTMPUTransportButton transportButtonImageViewContentMode]
  -[MTMPUTransportButton setTransportButtonImageViewContentMode:]
  -[MTMPUTransportButton setRegularColor:]
  -[MTMPUTransportButton setShouldInferColorsFromTintColor:]
  -[MTMPUTransportButton regularColor]
  -[MTMPUTransportButton shouldInferColorsFromTintColor]
  -[MTMPUTransportButton setShouldShowBackgroundForSelectedState:]
  -[MTMPUTransportButton transportButtonImage]


MTMPULayoutInterpolator : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
  // instance methods
  -[MTMPULayoutInterpolator copyWithZone:]
  -[MTMPULayoutInterpolator .cxx_destruct]
  -[MTMPULayoutInterpolator .cxx_construct]
  -[MTMPULayoutInterpolator addValue:forReferenceMetric:secondaryReferenceMetric:]
  -[MTMPULayoutInterpolator valueForReferenceMetric:secondaryReferenceMetric:]
  -[MTMPULayoutInterpolator addValue:forReferenceMetric:]
  -[MTMPULayoutInterpolator _interpolatedValueForPrimaryReferenceMetric:secondaryReferenceMetric:betweenFirstEntriesContainer:andSecondEntriesContainer:]
  -[MTMPULayoutInterpolator valueForReferenceMetric:]
  -[MTMPULayoutInterpolator _sortedPointsFor3DInterpolationFromEntriesContainer:usingQueriedPoint:fallbackSecondaryReferenceMetric:]
  -[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]
  -[MTMPULayoutInterpolator _pointForEntry:andPrimaryReferenceMetric:usingFallbackSecondaryReferenceMetric:]


MTMPUApplicationDefaults : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MTMPUApplicationDefaults dealloc]
  -[MTMPUApplicationDefaults .cxx_destruct]
  -[MTMPUApplicationDefaults boolForKey:]
  -[MTMPUApplicationDefaults stringForKey:]
  -[MTMPUApplicationDefaults arrayForKey:]
  -[MTMPUApplicationDefaults dictionaryForKey:]
  -[MTMPUApplicationDefaults integerForKey:]
  -[MTMPUApplicationDefaults setInteger:forKey:]
  -[MTMPUApplicationDefaults setBool:forKey:]
  -[MTMPUApplicationDefaults registerDefaults:]
  -[MTMPUApplicationDefaults setString:forKey:]
  -[MTMPUApplicationDefaults setArray:forKey:]
  -[MTMPUApplicationDefaults setDictionary:forKey:]
  -[MTMPUApplicationDefaults numberForKey:]
  -[MTMPUApplicationDefaults setNumber:forKey:]
  -[MTMPUApplicationDefaults dateForKey:]
  -[MTMPUApplicationDefaults setDate:forKey:]
  -[MTMPUApplicationDefaults _defaultsDidChange]
  -[MTMPUApplicationDefaults _setObject:forKey:]
  -[MTMPUApplicationDefaults performBatchUpdates:]
  -[MTMPUApplicationDefaults initWithApplicationIdentifier:]
  -[MTMPUApplicationDefaults removeValueForKey:]
  -[MTMPUApplicationDefaults _defaultsDomain]
  -[MTMPUApplicationDefaults _defaultsDidChangeNotificationName]
  -[MTMPUApplicationDefaults _objectForKey:expectedTypeID:]
  -[MTMPUApplicationDefaults _applyUpdates]


IMAVPlayer : NSObject /usr/lib/libSystem.B.dylib <AVAudioSessionDelegate>
 @property  NSURL *lastPlayingURL
 @property  unsigned long backgroundTask
 @property  NSTimer *hdcpTimer
 @property  NSTimer *seekTimer
 @property  NSMutableArray *timeObservers
 @property  NSMutableArray *observingTimes
 @property  BOOL timeObserverNeedsUpdate
 @property  BOOL seekForward
 @property  {?=b1b1b1b1b1b1b1b1b1b1b1b1} delegateFlags
 @property  NSObject<OS_dispatch_source> *fadeOutTimer
 @property  MPNowPlayingInfoCenter *infoCenter
 @property  MPRemoteCommandCenter *commandCenter
 @property  AVPlayer *player
 @property  AVPlayerItem *playerItem
 @property  id periodicTimeObserver
 @property  id nowPlayingInfoPeriodicTimeObserver
 @property  BOOL isUpdatingCurrentTime
 @property  float requestedRate
 @property  BOOL wasInterrupted
 @property  BOOL wasInterruptedEarly
 @property  NSTimer *autoStopTimer
 @property  double autoStopTimerPausedTime
 @property  IMAVPlayerVideoViewController *videoViewController
 @property  AVPlayerLayer *videoLayer
 @property  UIWindow *externalVideoWindow
 @property  float scanRate
 @property  <IMAVPlayerDelegate> *delegate
 @property  unsigned long state
 @property  unsigned long loadState
 @property  BOOL isPlaybackRequested
 @property  BOOL isPlaybackActive
 @property  float volume
 @property  float actualRate
 @property  double loadedDuration
 @property  BOOL bufferEmpty
 @property  IMPlayerManifest *manifest
 @property  IMPlayerItem *currentItem
 @property  @? playbackErrorFallback
 @property  double currentTime
 @property  double duration
 @property  unsigned long autoStop
 @property  double autoStopTimerTime
 @property  double autoStopMediaTime
 @property  double autoStopTimeRemaining
 @property  BOOL providesVideoView
 @property  BOOL airplayVideoActive
 @property  BOOL shouldEnforceHDCP
 @property  unsigned long videoScale
 @property  BOOL externalDisplay
 @property  unsigned long currentChapterIndex
 @property  IMPlayerChapterInfo *currentChapter
 @property  unsigned long chapterCount
 @property  unsigned long chapterMetadataMode
 @property  int loops
 @property  BOOL scrubbing
 @property  BOOL isSeeking
 @property  BOOL isScanning
 @property  unsigned long playbackSpeed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMAVPlayer performAsync:]
  +[IMAVPlayer rateForPlaybackSpeed:]
  +[IMAVPlayer isMaxSpeed:]
  +[IMAVPlayer incrementPlaybackSpeed:]
  +[IMAVPlayer isMinSpeed:]
  +[IMAVPlayer decrementPlaybackSpeed:]
  +[IMAVPlayer playbackSpeedForRate:]
  +[IMAVPlayer _configureAudioSessionWithCompletion:]
  +[IMAVPlayer performOnAvSessionQueue:]
  +[IMAVPlayer configureAudioSessionAndSetActive:withCompletion:]
  +[IMAVPlayer sharedPlayer]
  +[IMAVPlayer performOnMainQueue:]

  // instance methods
  -[IMAVPlayer init]
  -[IMAVPlayer dealloc]
  -[IMAVPlayer delegate]
  -[IMAVPlayer setDelegate:]
  -[IMAVPlayer .cxx_destruct]
  -[IMAVPlayer pause]
  -[IMAVPlayer _postNotificationName:userInfo:]
  -[IMAVPlayer stop]
  -[IMAVPlayer isAtEnd]
  -[IMAVPlayer observeValueForKeyPath:ofObject:change:context:]
  -[IMAVPlayer state]
  -[IMAVPlayer duration]
  -[IMAVPlayer setState:]
  -[IMAVPlayer isStalled]
  -[IMAVPlayer setCurrentItem:]
  -[IMAVPlayer currentItem]
  -[IMAVPlayer videoLayer]
  -[IMAVPlayer setVideoLayer:]
  -[IMAVPlayer play]
  -[IMAVPlayer fadeOutWithDuration:]
  -[IMAVPlayer currentTime]
  -[IMAVPlayer volume]
  -[IMAVPlayer setVolume:]
  -[IMAVPlayer fadeOut]
  -[IMAVPlayer wasInterrupted]
  -[IMAVPlayer setScanRate:]
  -[IMAVPlayer scanRate]
  -[IMAVPlayer _pause]
  -[IMAVPlayer player]
  -[IMAVPlayer setPlayer:]
  -[IMAVPlayer removeTimeObserver:]
  -[IMAVPlayer play:]
  -[IMAVPlayer endBackgroundTask]
  -[IMAVPlayer playerItem]
  -[IMAVPlayer setPlayerItem:]
  -[IMAVPlayer playbackSpeed]
  -[IMAVPlayer setPlaybackSpeed:]
  -[IMAVPlayer manifest]
  -[IMAVPlayer setCurrentTime:]
  -[IMAVPlayer loadState]
  -[IMAVPlayer endSeek]
  -[IMAVPlayer shouldEnforceHDCP]
  -[IMAVPlayer setShouldEnforceHDCP:]
  -[IMAVPlayer videoViewController]
  -[IMAVPlayer setVideoViewController:]
  -[IMAVPlayer currentChapterIndex]
  -[IMAVPlayer setScrubbing:]
  -[IMAVPlayer seekTimer]
  -[IMAVPlayer isSeeking]
  -[IMAVPlayer togglePlayPause]
  -[IMAVPlayer nextMediaItem]
  -[IMAVPlayer previousMediaItem]
  -[IMAVPlayer periodicTimeObserver]
  -[IMAVPlayer setPeriodicTimeObserver:]
  -[IMAVPlayer scrubbing]
  -[IMAVPlayer playerItemDidReachEnd:]
  -[IMAVPlayer chapterCount]
  -[IMAVPlayer isScanning]
  -[IMAVPlayer fadeOutWithDuration:completion:]
  -[IMAVPlayer loops]
  -[IMAVPlayer setLoops:]
  -[IMAVPlayer _setCurrentTime:]
  -[IMAVPlayer infoCenter]
  -[IMAVPlayer commandCenter]
  -[IMAVPlayer previousChapter]
  -[IMAVPlayer nextChapter]
  -[IMAVPlayer setBackgroundTask:]
  -[IMAVPlayer hasChapters]
  -[IMAVPlayer handleAudioSessionInterruption:]
  -[IMAVPlayer _updateLoadingSpinner]
  -[IMAVPlayer setState:completion:]
  -[IMAVPlayer backgroundTask]
  -[IMAVPlayer videoScale]
  -[IMAVPlayer setVideoScale:]
  -[IMAVPlayer seekForward]
  -[IMAVPlayer isPlaybackRequested]
  -[IMAVPlayer nextRemote]
  -[IMAVPlayer previousRemote:]
  -[IMAVPlayer startSeek:]
  -[IMAVPlayer setCurrentTimeRemote:]
  -[IMAVPlayer setInfoCenter:]
  -[IMAVPlayer setCommandCenter:]
  -[IMAVPlayer setChapterMetadataMode:]
  -[IMAVPlayer setProvidesVideoView:]
  -[IMAVPlayer _createPlayer]
  -[IMAVPlayer storedVolume]
  -[IMAVPlayer onRouteChange:]
  -[IMAVPlayer resetPlayer:]
  -[IMAVPlayer handlePlayerInterruption:]
  -[IMAVPlayer _failedToPlayToEndNotification:]
  -[IMAVPlayer onChaptersLoaded:]
  -[IMAVPlayer setManifest:completion:]
  -[IMAVPlayer removeAllTimeObservers]
  -[IMAVPlayer removePeriodicTimeObservers]
  -[IMAVPlayer enforceAutoStopForMode:]
  -[IMAVPlayer manifestCurrentItemDidChange]
  -[IMAVPlayer autoStop]
  -[IMAVPlayer _primitiveSetCurrentItem:]
  -[IMAVPlayer _updatePlayerForCurrentItem]
  -[IMAVPlayer delegateFlags]
  -[IMAVPlayer stopObservingPlayerItem:]
  -[IMAVPlayer setIsUpdatingCurrentTime:]
  -[IMAVPlayer clearAutoStop]
  -[IMAVPlayer addPeriodicTimeObservers]
  -[IMAVPlayer updateRateForCurrentState]
  -[IMAVPlayer updateNowPlayingDurationSnapshot]
  -[IMAVPlayer updateRateForCurrentState:]
  -[IMAVPlayer cancelFadeOut]
  -[IMAVPlayer cancelSeek]
  -[IMAVPlayer _pauseAutoStopTimer]
  -[IMAVPlayer setRequestedRate:]
  -[IMAVPlayer becomeActiveMediaPlayer]
  -[IMAVPlayer beginBackgroundTask]
  -[IMAVPlayer _setupAutoStopTimer]
  -[IMAVPlayer updateTimeObservers]
  -[IMAVPlayer currentChapter]
  -[IMAVPlayer setCurrentTime:fromMediaRemote:]
  -[IMAVPlayer hdcpTimer:]
  -[IMAVPlayer _validatePlay]
  -[IMAVPlayer setWasInterruptedEarly:]
  -[IMAVPlayer isPlaybackActive]
  -[IMAVPlayer scanWithRate:]
  -[IMAVPlayer setWasInterrupted:]
  -[IMAVPlayer actualRate]
  -[IMAVPlayer updateInfoCenterPlaybackState]
  -[IMAVPlayer wasInterruptedEarly]
  -[IMAVPlayer clearTimeObservers]
  -[IMAVPlayer providesVideoView]
  -[IMAVPlayer _durationAvailable]
  -[IMAVPlayer _updateForCurrentRateAndTimeControlStatus]
  -[IMAVPlayer playbackErrorFallback]
  -[IMAVPlayer requestedRate]
  -[IMAVPlayer _tracksDidLoad]
  -[IMAVPlayer sendItemEndedNotification]
  -[IMAVPlayer sendPeriodicTimeEvent:duration:finished:]
  -[IMAVPlayer isDurationReady]
  -[IMAVPlayer isUpdatingCurrentTime]
  -[IMAVPlayer _updatePlayerToCurrentTime:]
  -[IMAVPlayer _updatePlayerTimeCompleted:completion:]
  -[IMAVPlayer forceTriggerTimeObserverAt:]
  -[IMAVPlayer onSeekTimer:]
  -[IMAVPlayer addCMTimeObserver:]
  -[IMAVPlayer removeCMTimeObserver:]
  -[IMAVPlayer nowPlayingInfoPeriodicTimeObserver]
  -[IMAVPlayer setNowPlayingInfoPeriodicTimeObserver:]
  -[IMAVPlayer autoStopMediaTime]
  -[IMAVPlayer _assertMainThread]
  -[IMAVPlayer setupTimeObserver:]
  -[IMAVPlayer triggerTimeObserverAt:]
  -[IMAVPlayer setupChapterAtTime:]
  -[IMAVPlayer chapterMetadataMode]
  -[IMAVPlayer _setChapterIndex:]
  -[IMAVPlayer updateNowPlayingMetadataIncludingArtwork:]
  -[IMAVPlayer setupChapterTimeObservers]
  -[IMAVPlayer setCurrentChapterIndex:]
  -[IMAVPlayer _clearAutoStopTimmer]
  -[IMAVPlayer autoStopTimerPausedTime]
  -[IMAVPlayer autoStopTimer]
  -[IMAVPlayer autoStopTimerTime]
  -[IMAVPlayer _autoStopTimerFired]
  -[IMAVPlayer setAutoStopTimer:]
  -[IMAVPlayer setAutoStopTimerPausedTime:]
  -[IMAVPlayer autoStopTimeRemaining]
  -[IMAVPlayer sleep]
  -[IMAVPlayer setAutoStopTimerTime:]
  -[IMAVPlayer registerAVSessionCategoryAndMode]
  -[IMAVPlayer previousRemote]
  -[IMAVPlayer toggleVideoAspectScaleMode]
  -[IMAVPlayer stillFrameAt:maxSize:scale:]
  -[IMAVPlayer airplayVideoActive]
  -[IMAVPlayer loadedDuration]
  -[IMAVPlayer bufferEmpty]
  -[IMAVPlayer addTimeObserver:]
  -[IMAVPlayer setAutoStop:]
  -[IMAVPlayer setPlaybackErrorFallback:]
  -[IMAVPlayer setAutoStopMediaTime:]
  -[IMAVPlayer externalDisplay]
  -[IMAVPlayer lastPlayingURL]
  -[IMAVPlayer setLastPlayingURL:]
  -[IMAVPlayer hdcpTimer]
  -[IMAVPlayer setHdcpTimer:]
  -[IMAVPlayer setSeekTimer:]
  -[IMAVPlayer timeObservers]
  -[IMAVPlayer setTimeObservers:]
  -[IMAVPlayer observingTimes]
  -[IMAVPlayer setObservingTimes:]
  -[IMAVPlayer timeObserverNeedsUpdate]
  -[IMAVPlayer setTimeObserverNeedsUpdate:]
  -[IMAVPlayer setSeekForward:]
  -[IMAVPlayer setDelegateFlags:]
  -[IMAVPlayer fadeOutTimer]
  -[IMAVPlayer setFadeOutTimer:]
  -[IMAVPlayer externalVideoWindow]
  -[IMAVPlayer setExternalVideoWindow:]


IMXMLStreamOperation : NSOperation /System/Library/Frameworks/IOSurface.framework/IOSurface <NSStreamDelegate, NSURLConnectionDelegate>
 @property  <NSXMLParserDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMXMLStreamOperation operationWithURL:parseDelegate:]

  // instance methods
  -[IMXMLStreamOperation dealloc]
  -[IMXMLStreamOperation delegate]
  -[IMXMLStreamOperation setDelegate:]
  -[IMXMLStreamOperation stream:handleEvent:]
  -[IMXMLStreamOperation start]
  -[IMXMLStreamOperation isCancelled]
  -[IMXMLStreamOperation isFinished]
  -[IMXMLStreamOperation isExecuting]
  -[IMXMLStreamOperation isConcurrent]
  -[IMXMLStreamOperation connection:didFailWithError:]
  -[IMXMLStreamOperation connection:didReceiveData:]
  -[IMXMLStreamOperation connection:willCacheResponse:]
  -[IMXMLStreamOperation connectionDidFinishLoading:]
  -[IMXMLStreamOperation initWithURL:parseDelegate:]
  -[IMXMLStreamOperation _startRunLoop]
  -[IMXMLStreamOperation writeToStream]


IMImageDiskCache : IMBaseDiskCache
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  double maxImageDimensionInPixels
 @property  NSString *onDiskFileType
 @property  double saveCompressionQuality
 @property  NSRecursiveLock *syncLock
 @property  NSMutableSet *proccessingKeys
 @property  NSMutableDictionary *completionHandlers
 @property  NSMutableDictionary *pendingPerformWhenAvailableOnDiskBlocks

  // instance methods
  -[IMImageDiskCache .cxx_destruct]
  -[IMImageDiskCache workQueue]
  -[IMImageDiskCache completionHandlers]
  -[IMImageDiskCache imageForKey:]
  -[IMImageDiskCache initWithBasePath:]
  -[IMImageDiskCache pathForKey:]
  -[IMImageDiskCache initWithBasePath:maxImageDimensionInPixels:]
  -[IMImageDiskCache addImage:forKey:]
  -[IMImageDiskCache addImagesWithSourceUrl:forKeys:discardTransparency:enforceSquare:completion:]
  -[IMImageDiskCache maxImageDimensionInPixels]
  -[IMImageDiskCache imageUrlForKey:]
  -[IMImageDiskCache addImageWithSourceUrl:forKey:enforceSquare:maxDimensionInPixels:completion:]
  -[IMImageDiskCache performWhenURLAvailableForImageForKey:block:]
  -[IMImageDiskCache copyImageFromSourceUrl:to:discardTransparency:enforceSquare:maxDimensionInPixels:completion:]
  -[IMImageDiskCache addImageWithSourceUrl:forKey:discardTransparency:enforceSquare:maxDimensionInPixels:completion:]
  -[IMImageDiskCache _isProcessingKey:completion:]
  -[IMImageDiskCache _startProcessingKey:completion:]
  -[IMImageDiskCache _finishProcessingKey:success:]
  -[IMImageDiskCache _addImageWithSourceUrl:forKey:discardTransparency:enforceSquare:maxDimensionInPixels:completion:]
  -[IMImageDiskCache copyImageFromSourceUrl:to:discardTransparency:enforceSquare:maxDimensionInPixels:]
  -[IMImageDiskCache onDiskFileType]
  -[IMImageDiskCache _defaultImageSavingOptions]
  -[IMImageDiskCache _needsResizing:maxDimensionInPixels:]
  -[IMImageDiskCache _usesLessMemoryToConvertThenResizeImageSource:destinationDimensionInPixels:]
  -[IMImageDiskCache _copyImageSourceByConvertingImage:toFileType:destinationUrl:]
  -[IMImageDiskCache _defaultImageSavingSourceOptions]
  -[IMImageDiskCache saveCompressionQuality]
  -[IMImageDiskCache _addImage:forKey:resizeIfTooBig:manageProcessingState:completion:]
  -[IMImageDiskCache _startProcessingForAddingKey:originalKey:]
  -[IMImageDiskCache _resizeImageForKey:maxDimensionInPixels:]
  -[IMImageDiskCache _onDiskFileExtension]
  -[IMImageDiskCache proccessingKeys]
  -[IMImageDiskCache pendingPerformWhenAvailableOnDiskBlocks]
  -[IMImageDiskCache _performWithSyncLock:]
  -[IMImageDiskCache syncLock]


IMFrameworksOSLog : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[IMFrameworksOSLog load]


IMAVPlayerVideoViewController : AVPlayerViewController /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  IMAVPlayer *im_player

  // instance methods
  -[IMAVPlayerVideoViewController .cxx_destruct]
  -[IMAVPlayerVideoViewController initWithPlayer:]
  -[IMAVPlayerVideoViewController mediaItemDidChange]
  -[IMAVPlayerVideoViewController setIm_player:]
  -[IMAVPlayerVideoViewController playbackSpeedDidChange]
  -[IMAVPlayerVideoViewController im_player]


IMExpandingLabelAccessibility_super : IMAccessibilitySafeCategory

IMExpandingLabelAccessibility : IMExpandingLabelAccessibility_super
  // class methods
  +[IMExpandingLabelAccessibility _initializeSafeCategory]

  // instance methods
  -[IMExpandingLabelAccessibility dealloc]
  -[IMExpandingLabelAccessibility accessibilityLabel]
  -[IMExpandingLabelAccessibility isAccessibilityElement]
  -[IMExpandingLabelAccessibility accessibilityElementCount]
  -[IMExpandingLabelAccessibility accessibilityElementAtIndex:]
  -[IMExpandingLabelAccessibility indexOfAccessibilityElement:]
  -[IMExpandingLabelAccessibility _accessibilityHitTest:withEvent:]
  -[IMExpandingLabelAccessibility _accessiblityChildren]


IMAXMoreLabelElement : UIAccessibilityElement /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
 @property  id delegate

  // instance methods
  -[IMAXMoreLabelElement delegate]
  -[IMAXMoreLabelElement setDelegate:]
  -[IMAXMoreLabelElement accessibilityFrame]
  -[IMAXMoreLabelElement accessibilityLabel]
  -[IMAXMoreLabelElement initWithAccessibilityContainer:delegate:]


IMAccessibilityLabelAccessibility_super : IMAccessibilitySafeCategory

IMAccessibilityLabelAccessibility : IMAccessibilityLabelAccessibility_super
  // class methods
  +[IMAccessibilityLabelAccessibility _initializeSafeCategory]

  // instance methods
  -[IMAccessibilityLabelAccessibility accessibilityLabel]


MTMPUFontDescriptorCache : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTMPUFontDescriptorCache sharedFontDescriptorCache]

  // instance methods
  -[MTMPUFontDescriptorCache init]
  -[MTMPUFontDescriptorCache dealloc]
  -[MTMPUFontDescriptorCache .cxx_destruct]
  -[MTMPUFontDescriptorCache _handleContentSizeCategoryDidChangeNotification:]
  -[MTMPUFontDescriptorCache cachedImmutableFontDescriptorForConfigurationBlock:]
  -[MTMPUFontDescriptorCache cachedImmutableFontDescriptorMatchingMutableFontDescriptor:]
  -[MTMPUFontDescriptorCache _cachedImmutableFontDescriptorMatchingMutableFontDescriptor:]


IMPlayerManifest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSUserActivity *activity
 @property  IMPlayerItem *currentItem
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL isLoaded
 @property  NSString *title
 @property  unsigned long count
 @property  unsigned long currentIndex

  // class methods
  +[IMPlayerManifest _activityType]
  +[IMPlayerManifest createManifestForActivity:completion:]
  +[IMPlayerManifest activityTypeSuffix]
  +[IMPlayerManifest restoreActivity:completion:]
  +[IMPlayerManifest supportedActivityTypes]
  +[IMPlayerManifest registerManifestForRestoration:]

  // instance methods
  -[IMPlayerManifest init]
  -[IMPlayerManifest count]
  -[IMPlayerManifest setQueue:]
  -[IMPlayerManifest queue]
  -[IMPlayerManifest objectAtIndex:]
  -[IMPlayerManifest .cxx_destruct]
  -[IMPlayerManifest isLoaded]
  -[IMPlayerManifest activity]
  -[IMPlayerManifest setActivity:]
  -[IMPlayerManifest next]
  -[IMPlayerManifest previous]
  -[IMPlayerManifest title]
  -[IMPlayerManifest setTitle:]
  -[IMPlayerManifest load:]
  -[IMPlayerManifest setCurrentItem:]
  -[IMPlayerManifest currentItem]
  -[IMPlayerManifest currentIndex]
  -[IMPlayerManifest setIsLoaded:]
  -[IMPlayerManifest setCurrentIndex:]
  -[IMPlayerManifest hasNext]
  -[IMPlayerManifest _load:]
  -[IMPlayerManifest hasPrevious]
  -[IMPlayerManifest nextManifest:]
  -[IMPlayerManifest postManifestDidChangeNotification]


NSManagedObjectContext(MTSyncInfo)
	// instance methods
	-[NSManagedObjectContext(MTSyncInfo) _largestRevisionForRevisionProperty:]
	-[NSManagedObjectContext(MTSyncInfo) _allOrderedSyncInfoSinceRevision:revisionProperty:]
	-[NSManagedObjectContext(MTSyncInfo) objectsInEntity:predicate:sortDescriptors:]
	-[NSManagedObjectContext(MTSyncInfo) objectsInEntity:predicate:sortDescriptors:returnsObjectsAsFaults:limit:]
	-[NSManagedObjectContext(MTSyncInfo) currentSyncAnchorRevision]
	-[NSManagedObjectContext(MTSyncInfo) allOrderedSyncInfoSinceRevision:]
	-[NSManagedObjectContext(MTSyncInfo) allOrderedSyncInfoWithArtworkUpdatesSinceRevision:]
	-[NSManagedObjectContext(MTSyncInfo) syncInfosByUuids:]
	-[NSManagedObjectContext(MTSyncInfo) countOfObjectsInEntity:predicate:]
	-[NSManagedObjectContext(MTSyncInfo) podcastForUuid:]
	-[NSManagedObjectContext(MTSyncInfo) objectsInEntity:predicate:propertiesToFetch:batchSize:]
	-[NSManagedObjectContext(MTSyncInfo) saveInCurrentBlock]
	-[NSManagedObjectContext(MTSyncInfo) episodeForUuid:]
	-[NSManagedObjectContext(MTSyncInfo) objectIdsInEntity:predicate:sortDescriptors:]
	-[NSManagedObjectContext(MTSyncInfo) objectDictionariesInEntity:predicate:sortDescriptors:propertiesToFetch:includeObjectId:]
	-[NSManagedObjectContext(MTSyncInfo) cacheKeyForObject:]
	-[NSManagedObjectContext(MTSyncInfo) uuidCache]
	-[NSManagedObjectContext(MTSyncInfo) cacheKeyForUuid:entityName:]
	-[NSManagedObjectContext(MTSyncInfo) titlesOfObjectsInEntity:predicate:]
	-[NSManagedObjectContext(MTSyncInfo) _objectsInEntity:predicate:sortDescriptors:resultType:returnsObjectsAsFaults:limit:]
	-[NSManagedObjectContext(MTSyncInfo) _predicateForUuid:]
	-[NSManagedObjectContext(MTSyncInfo) _objectsInEntity:predicate:sortDescriptors:resultType:returnsObjectsAsFaults:limit:propertiesToFetch:batchSize:]
	-[NSManagedObjectContext(MTSyncInfo) objectIdForUuid:entityName:]
	-[NSManagedObjectContext(MTSyncInfo) objectForUuid:entityName:returnsObjectAsFault:]
	-[NSManagedObjectContext(MTSyncInfo) objectDictionariesInEntity:predicate:sortDescriptors:propertiesToFetch:includeObjectId:limit:distinct:groupBy:]
	-[NSManagedObjectContext(MTSyncInfo) objectDictionaryForUuid:propertiesToFetch:entityName:]
	-[NSManagedObjectContext(MTSyncInfo) objectForUuid:entityName:]
	-[NSManagedObjectContext(MTSyncInfo) performBlockAndWaitWithSave:]
	-[NSManagedObjectContext(MTSyncInfo) objectsInEntity:predicate:sortDescriptors:returnsObjectsAsFaults:]
	-[NSManagedObjectContext(MTSyncInfo) objectDictionaryForUuid:entityName:]
	-[NSManagedObjectContext(MTSyncInfo) valueForProperty:objectUuid:entityName:]
	-[NSManagedObjectContext(MTSyncInfo) objectDictionaryForUuid:entityName:byAddingComputedProperties:toFetchedObjectDictionary:]
	-[NSManagedObjectContext(MTSyncInfo) podcastForFeedUrl:]
	-[NSManagedObjectContext(MTSyncInfo) existingPodcastPlaylistSettingsWithID:]
	-[NSManagedObjectContext(MTSyncInfo) podcastPlaylistSettingsForUuid:]
	-[NSManagedObjectContext(MTSyncInfo) _nextSortOrderWithRequest:]
	-[NSManagedObjectContext(MTSyncInfo) existingPodcastWithID:]
	-[NSManagedObjectContext(MTSyncInfo) podcastIdWithUuid:]
	-[NSManagedObjectContext(MTSyncInfo) podcastForPodcastPID:]
	-[NSManagedObjectContext(MTSyncInfo) dictionaryForPodcastUuid:]
	-[NSManagedObjectContext(MTSyncInfo) dictionaryWithProperties:podcastUuid:]
	-[NSManagedObjectContext(MTSyncInfo) valueForProperty:podcastUuid:]
	-[NSManagedObjectContext(MTSyncInfo) countOfPodcasts]
	-[NSManagedObjectContext(MTSyncInfo) nextSortOrderForSubscribedPodcasts]
	-[NSManagedObjectContext(MTSyncInfo) nextSortOrderForNotSubscribedPodcasts]
	-[NSManagedObjectContext(MTSyncInfo) existingEpisodeWithID:]
	-[NSManagedObjectContext(MTSyncInfo) episodeIdWithUuid:]
	-[NSManagedObjectContext(MTSyncInfo) episodeForUuid:returnsObjectAsFault:]
	-[NSManagedObjectContext(MTSyncInfo) dictionaryForEpisodeUuid:]
	-[NSManagedObjectContext(MTSyncInfo) dictionaryWithProperties:episodeUuid:]
	-[NSManagedObjectContext(MTSyncInfo) valueForProperty:episodeUuid:]
	-[NSManagedObjectContext(MTSyncInfo) episodeIdsForPodcastUuid:sortOptions:]

NSDictionary(MTAdditions)
	// instance methods
	-[NSDictionary(MTAdditions) mt_compactMap:]
	-[NSDictionary(MTAdditions) mt_subdictionaryWithKeys:]
	-[NSDictionary(MTAdditions) mt_invertedDictionary]
	-[NSDictionary(MTAdditions) im_jsonSerializableValue]

NSPredicate(MTAdditions)
	// class methods
	+[NSPredicate(MTAdditions) truePredicate]
	+[NSPredicate(MTAdditions) falsePredicate]
	+[NSPredicate(MTAdditions) predicateForDateKey:isLessThanDate:]
	+[NSPredicate(MTAdditions) predicateForDateKey:isGreaterThanOrEqualToDate:]
	+[NSPredicate(MTAdditions) predicateForDateKey:isLessThanOrEqualToDate:]
	+[NSPredicate(MTAdditions) predicateForDateKey:isGreaterThanDate:]

	// instance methods
	-[NSPredicate(MTAdditions) AND:]
	-[NSPredicate(MTAdditions) OR:]

NSUserDefaults(MTUnitTesing)
	// class methods
	+[NSUserDefaults(MTUnitTesing) appUserDefaults]
	+[NSUserDefaults(MTUnitTesing) appUserDefaultsForUnitTesting]
	+[NSUserDefaults(MTUnitTesing) setAppUserDefaultsForUnitTesting:]
	+[NSUserDefaults(MTUnitTesing) setGroupUserDefaultsForUnitTesting:]
	+[NSUserDefaults(MTUnitTesing) groupUserDefaultsForUnitTesting]

NSThread(MTAdditions)
	// class methods
	+[NSThread(MTAdditions) mainThread:]

PKEpisode(PodcastsKit)
	// class methods
	+[PKEpisode(PodcastsKit) contentFrom:]
	+[PKEpisode(PodcastsKit) itemFrom:]

PKEpisode(PodcastsKit1)
	// instance methods
	-[PKEpisode(PodcastsKit1) initFrom:]
	-[PKEpisode(PodcastsKit1) lookupEpisode]

PKEpisode(PodcastsKit2)
	// instance methods
	-[PKEpisode(PodcastsKit2) playbackIdentifier]

_TtC11PodcastsKit21ProxyPlayerController(PodcastsKit)
	// instance methods
	-[_TtC11PodcastsKit21ProxyPlayerController(PodcastsKit) controller:defersResponseReplacement:]

PKEpisode(PodcastsKit3)
	// class methods
	+[PKEpisode(PodcastsKit3) fetchEpisodeFrom:completion:]

NSURL(Mutable)
	// class methods
	+[NSURL(Mutable) percentEncodedStringToDictionary:]
	+[NSURL(Mutable) dictionaryToEscapedQueryString:]

	// instance methods
	-[NSURL(Mutable) components]
	-[NSURL(Mutable) href]
	-[NSURL(Mutable) URLByAppendingQueryParameters:]
	-[NSURL(Mutable) queryAsDictionary]
	-[NSURL(Mutable) URLByRemovingQueryParameters:]
	-[NSURL(Mutable) URLByAppendingQueryParameterKey:value:]
	-[NSURL(Mutable) im_jsonSerializableValue]
	-[NSURL(Mutable) _lastModDateFormatter]
	-[NSURL(Mutable) URLByAppendingHashString:]
	-[NSURL(Mutable) URLByAppendingQueryString:]
	-[NSURL(Mutable) URLByReplacingWithScheme:]
	-[NSURL(Mutable) lastModifiedDateOfResource]
	-[NSURL(Mutable) unescapedPath]
	-[NSURL(Mutable) xattrNamed:]
	-[NSURL(Mutable) setXattr:named:]
	-[NSURL(Mutable) cleanUrlToStoreId]
	-[NSURL(Mutable) cleanUrlToStoreTrackId]
	-[NSURL(Mutable) cleanUrlToEpisodeGuid]

AMSMetricsEvent(IMMetrics)
	// class methods
	+[AMSMetricsEvent(IMMetrics) im_eventWithDefaultTopic]
	+[AMSMetricsEvent(IMMetrics) im_clickEventWithDefaultTopic]
	+[AMSMetricsEvent(IMMetrics) im_pageEventWithDefaultTopic]
	+[AMSMetricsEvent(IMMetrics) im_eventWithDefaultTopicAndEventType:]
	+[AMSMetricsEvent(IMMetrics) im_eventWithTopic:eventType:]
	+[AMSMetricsEvent(IMMetrics) im_defaultTopicForEvents]

	// instance methods
	-[AMSMetricsEvent(IMMetrics) shortDescription]
	-[AMSMetricsEvent(IMMetrics) im_setName:]
	-[AMSMetricsEvent(IMMetrics) im_setProperty:forBodyKey:]
	-[AMSMetricsEvent(IMMetrics) im_name]
	-[AMSMetricsEvent(IMMetrics) im_setContentIdentifier:]
	-[AMSMetricsEvent(IMMetrics) im_contentIdentifier]
	-[AMSMetricsEvent(IMMetrics) im_setToken:]
	-[AMSMetricsEvent(IMMetrics) im_token]
	-[AMSMetricsEvent(IMMetrics) im_addPropertiesWithDictionary:]

UIViewController(Metrics)
	// class methods
	+[UIViewController(Metrics) _rewriteOnce]
	+[UIViewController(Metrics) swizzleMethodsForMetrics]

	// instance methods
	-[UIViewController(Metrics) recursiveDescription]
	-[UIViewController(Metrics) isVerticallyCompact]
	-[UIViewController(Metrics) metricsContentIdentifier]
	-[UIViewController(Metrics) setViewWillAppearTime:]
	-[UIViewController(Metrics) recordViewDidAppearEvent]
	-[UIViewController(Metrics) metricsEnabled]
	-[UIViewController(Metrics) viewWillAppearTime]
	-[UIViewController(Metrics) metricsName]
	-[UIViewController(Metrics) metricDataSource]
	-[UIViewController(Metrics) isUIKitClass]
	-[UIViewController(Metrics) setMetricsEnabled:]
	-[UIViewController(Metrics) setMetricsName:]
	-[UIViewController(Metrics) setMetricsContentIdentifier:]
	-[UIViewController(Metrics) setMetricsAdditionalData:]
	-[UIViewController(Metrics) metricsAdditionalData]
	-[UIViewController(Metrics) setMetricDataSource:]
	-[UIViewController(Metrics) isSupportedInterfaceOrientation:]
	-[UIViewController(Metrics) IMDeviceOrientation]
	-[UIViewController(Metrics) preferredInterfaceOrientationGivenOrientation:]
	-[UIViewController(Metrics) isHorizontallySpecified]
	-[UIViewController(Metrics) isHorizontallyCompact]
	-[UIViewController(Metrics) isHorizontallyRegular]
	-[UIViewController(Metrics) isVerticallySpecified]
	-[UIViewController(Metrics) isVerticallyRegular]

UIApplication(Metrics)
	// class methods
	+[UIApplication(Metrics) applicationCacheDirectory]
	+[UIApplication(Metrics) applicationDocumentsDirectory]

	// instance methods
	-[UIApplication(Metrics) recordAppOpenEvent:]
	-[UIApplication(Metrics) recordAppCloseEvent:]
	-[UIApplication(Metrics) recordMemoryWarning:]
	-[UIApplication(Metrics) subscribeToLifecycleEventNotifications]
	-[UIApplication(Metrics) unsubscribeFromLifecycleEventNotifications]

NSError(Metrics)
	// instance methods
	-[NSError(Metrics) metricsContentIdentifier]
	-[NSError(Metrics) metricsAdditionalData]
	-[NSError(Metrics) recordMetrics]
	-[NSError(Metrics) im_jsonSerializableValue]

NSString(IMJSONSerializableValueProviding)
	// class methods
	+[NSString(IMJSONSerializableValueProviding) UUID]
	+[NSString(IMJSONSerializableValueProviding) durationFormatter]
	+[NSString(IMJSONSerializableValueProviding) durationWithHMSString:]
	+[NSString(IMJSONSerializableValueProviding) stringWithDuration:]
	+[NSString(IMJSONSerializableValueProviding) stringWithBytesize:countStyle:]
	+[NSString(IMJSONSerializableValueProviding) stringWithBytesize:]

	// instance methods
	-[NSString(IMJSONSerializableValueProviding) unsignedLongLongValue]
	-[NSString(IMJSONSerializableValueProviding) stringValue]
	-[NSString(IMJSONSerializableValueProviding) stringByRemovingPercentEscapes]
	-[NSString(IMJSONSerializableValueProviding) containsSubstring:]
	-[NSString(IMJSONSerializableValueProviding) isWhitespace]
	-[NSString(IMJSONSerializableValueProviding) hasHTML]
	-[NSString(IMJSONSerializableValueProviding) stringWithPercentEscape]
	-[NSString(IMJSONSerializableValueProviding) im_jsonSerializableValue]
	-[NSString(IMJSONSerializableValueProviding) isNotWhitespace]
	-[NSString(IMJSONSerializableValueProviding) im_stringByMemoryEfficientTrimmingCharactersInSet:]
	-[NSString(IMJSONSerializableValueProviding) rangeOfSignificantSubstring]
	-[NSString(IMJSONSerializableValueProviding) stringByRemovingEnclosingQuotations]
	-[NSString(IMJSONSerializableValueProviding) imIsVerticalWritingMode]
	-[NSString(IMJSONSerializableValueProviding) imIsHorizontalWritingMode]
	-[NSString(IMJSONSerializableValueProviding) URLFragmentString]
	-[NSString(IMJSONSerializableValueProviding) stringByRemovingURLFragment]
	-[NSString(IMJSONSerializableValueProviding) stringByConvertingControlCharactersToSpace]
	-[NSString(IMJSONSerializableValueProviding) stringByConvertingNewlineCharacterSetToSpace]
	-[NSString(IMJSONSerializableValueProviding) stringByStrippingHTML]
	-[NSString(IMJSONSerializableValueProviding) iTunesSortString]
	-[NSString(IMJSONSerializableValueProviding) dictionaryByDecomposingQueryStringWithURLDecode:]
	-[NSString(IMJSONSerializableValueProviding) stringByRemovingInsignificantPrefix]
	-[NSString(IMJSONSerializableValueProviding) tokenCountWithEnumerationOptions:maxTokenCount:outLimitLength:]
	-[NSString(IMJSONSerializableValueProviding) stringByTruncatingToLength:options:truncationString:]
	-[NSString(IMJSONSerializableValueProviding) stringByEnclosingInQuotes]
	-[NSString(IMJSONSerializableValueProviding) im_uppercaseStringWithLocale:]
	-[NSString(IMJSONSerializableValueProviding) imIsDefaultWritingMode]

NSNumber(IMJSONSerializableValueProviding)
	// instance methods
	-[NSNumber(IMJSONSerializableValueProviding) im_jsonSerializableValue]

NSArray(IMJSONSerializableValueProviding)
	// instance methods
	-[NSArray(IMJSONSerializableValueProviding) firstObject]
	-[NSArray(IMJSONSerializableValueProviding) deepCopy]
	-[NSArray(IMJSONSerializableValueProviding) im_jsonSerializableValue]
	-[NSArray(IMJSONSerializableValueProviding) indexOfObjectWithValue:forKeyPath:]
	-[NSArray(IMJSONSerializableValueProviding) imReversedArray]
	-[NSArray(IMJSONSerializableValueProviding) containsStringCaseInsensitive:]
	-[NSArray(IMJSONSerializableValueProviding) arrayOfObjectsContainingMatchingKey:matchingStrings:]
	-[NSArray(IMJSONSerializableValueProviding) arrayRemovingObjectsByKey:matchingStrings:]
	-[NSArray(IMJSONSerializableValueProviding) arrayRemovingMatchingStrings:]

NSNull(IMJSONSerializableValueProviding)
	// instance methods
	-[NSNull(IMJSONSerializableValueProviding) im_jsonSerializableValue]

NSDate(IMJSONSerializableValueProviding)
	// class methods
	+[NSDate(IMJSONSerializableValueProviding) dateFormatter]
	+[NSDate(IMJSONSerializableValueProviding) dayOfWeekFromDate:]
	+[NSDate(IMJSONSerializableValueProviding) longDateStringFromDate:]
	+[NSDate(IMJSONSerializableValueProviding) dateFromRFC1123:]
	+[NSDate(IMJSONSerializableValueProviding) dateStringFromDate:withDateStyle:timeStyle:isRelative:]
	+[NSDate(IMJSONSerializableValueProviding) dateFormatterWithTemplate:]
	+[NSDate(IMJSONSerializableValueProviding) shortTimeStringFromDate:]
	+[NSDate(IMJSONSerializableValueProviding) mediumDateStringFromDate:]
	+[NSDate(IMJSONSerializableValueProviding) longDayStringFromDate:]
	+[NSDate(IMJSONSerializableValueProviding) stringWithDuration:]
	+[NSDate(IMJSONSerializableValueProviding) stringWithDurationRentalDuration:]
	+[NSDate(IMJSONSerializableValueProviding) shortDateStringFromDateNoRel:]
	+[NSDate(IMJSONSerializableValueProviding) shortDateStringFromDate:]
	+[NSDate(IMJSONSerializableValueProviding) stringWithDurationRentalExpiration:shouldWarn:abbreviated:]
	+[NSDate(IMJSONSerializableValueProviding) monthYearFromDate:]
	+[NSDate(IMJSONSerializableValueProviding) postTimeStringFromDate:]
	+[NSDate(IMJSONSerializableValueProviding) amPMStringFromDate:]
	+[NSDate(IMJSONSerializableValueProviding) shortStandardTimeStringFromDate:]
	+[NSDate(IMJSONSerializableValueProviding) downloadDurationStringFromTime_Phone:]
	+[NSDate(IMJSONSerializableValueProviding) downloadDurationStringFromTime:]
	+[NSDate(IMJSONSerializableValueProviding) mailLikeDescriptionFromDate:]
	+[NSDate(IMJSONSerializableValueProviding) stringWithDurationSongWithHours:]
	+[NSDate(IMJSONSerializableValueProviding) stringWithDurationRentalExpiration:shouldWarn:]
	+[NSDate(IMJSONSerializableValueProviding) stringWithDurationLongMinutes:]

	// instance methods
	-[NSDate(IMJSONSerializableValueProviding) nextWeek]
	-[NSDate(IMJSONSerializableValueProviding) isToday]
	-[NSDate(IMJSONSerializableValueProviding) im_jsonSerializableValue]
	-[NSDate(IMJSONSerializableValueProviding) isEqualToDay:]
	-[NSDate(IMJSONSerializableValueProviding) dateWithDeltaDays:]
	-[NSDate(IMJSONSerializableValueProviding) isEqualToWeek:]
	-[NSDate(IMJSONSerializableValueProviding) dateWithDeltaWeeks:]
	-[NSDate(IMJSONSerializableValueProviding) isFuture]
	-[NSDate(IMJSONSerializableValueProviding) wasYesterday]
	-[NSDate(IMJSONSerializableValueProviding) thisWeek]
	-[NSDate(IMJSONSerializableValueProviding) wasLessThanAWeekAgo]
	-[NSDate(IMJSONSerializableValueProviding) inSameWeekAs:]
	-[NSDate(IMJSONSerializableValueProviding) isEqualToYear:]
	-[NSDate(IMJSONSerializableValueProviding) isThisWeek]
	-[NSDate(IMJSONSerializableValueProviding) wasLastWeek]
	-[NSDate(IMJSONSerializableValueProviding) isNextWeek]
	-[NSDate(IMJSONSerializableValueProviding) dateAtWeekStart]
	-[NSDate(IMJSONSerializableValueProviding) dateForBeginningOfDay]
	-[NSDate(IMJSONSerializableValueProviding) dateForEndOfDay]
	-[NSDate(IMJSONSerializableValueProviding) dateForBeginningOfMonth]
	-[NSDate(IMJSONSerializableValueProviding) lastWeek]
	-[NSDate(IMJSONSerializableValueProviding) daysFromToday]
	-[NSDate(IMJSONSerializableValueProviding) rfc1123String]

NSData(IMJSONSerializableValueProviding)
	// class methods
	+[NSData(IMJSONSerializableValueProviding) uniquenessHashForContentsOfFileUrl:readBufferSize:]
	+[NSData(IMJSONSerializableValueProviding) imDataFromHexString:]
	+[NSData(IMJSONSerializableValueProviding) uniquenessHashForContentsOfFileUrl:]

	// instance methods
	-[NSData(IMJSONSerializableValueProviding) hexString]
	-[NSData(IMJSONSerializableValueProviding) im_jsonSerializableValue]
	-[NSData(IMJSONSerializableValueProviding) uniquenessHash]

NSObject(IMAccessibilitySafeCategory)
	// instance methods
	-[NSObject(IMAccessibilitySafeCategory) _accessibilityFindDescendant:]
	-[NSObject(IMAccessibilitySafeCategory) _imaxFindAncestor:]
	-[NSObject(IMAccessibilitySafeCategory) imaxSetIdentification:]
	-[NSObject(IMAccessibilitySafeCategory) imaxValueForKeyPath:]
	-[NSObject(IMAccessibilitySafeCategory) imaxBoolForKey:]
	-[NSObject(IMAccessibilitySafeCategory) imaxElementIsAncestor:]
	-[NSObject(IMAccessibilitySafeCategory) imaxAncestorIsKindOf:]
	-[NSObject(IMAccessibilitySafeCategory) imaxDescendentOfType:]
	-[NSObject(IMAccessibilitySafeCategory) imaxUnignoredDescendant]
	-[NSObject(IMAccessibilitySafeCategory) imaxStorageValueForKey:]
	-[NSObject(IMAccessibilitySafeCategory) imaxStorageSetRetainedValue:forKey:]
	-[NSObject(IMAccessibilitySafeCategory) imaxValueForKey:]
	-[NSObject(IMAccessibilitySafeCategory) imaxIdentification]

NSAttributedString(MTMPUDynamicType)
	// class methods
	+[NSAttributedString(MTMPUDynamicType) safeAttributedStringWithHTML:attributes:]
	+[NSAttributedString(MTMPUDynamicType) attributedStringWithTemplateString:baseAttributes:snippetAttributes:snippets:]

	// instance methods
	-[NSAttributedString(MTMPUDynamicType) attributedStringByTrimmingWhitespaceNewlinesAndObjectReplacementCharacters]
	-[NSAttributedString(MTMPUDynamicType) MTMPU_attributedStringByUpdatingTextStyleFontsToPreferredTextStyleFonts]
	-[NSAttributedString(MTMPUDynamicType) MTMPU_hasUniformFont]
	-[NSAttributedString(MTMPUDynamicType) MTMPU_tallestFontFromAttributes]
	-[NSAttributedString(MTMPUDynamicType) attributedStringByTrimmingCharactersInCharacterSet:]

UIImage(IMAdditions)
	// class methods
	+[UIImage(IMAdditions) uncachedImageNamed:]
	+[UIImage(IMAdditions) image:inRect:withBacking:]
	+[UIImage(IMAdditions) image:inRect:withBacking:opaque:scale:]
	+[UIImage(IMAdditions) imageWithSolidColor:atSize:]
	+[UIImage(IMAdditions) makeDottedLineImageinRect:]
	+[UIImage(IMAdditions) scaledImageWithData:]
	+[UIImage(IMAdditions) colorSliceImageWithColor:height:]
	+[UIImage(IMAdditions) roundedCornerRectangleWithColor:]
	+[UIImage(IMAdditions) roundedCornerRectangleWithColorNoTemplate:]

	// instance methods
	-[UIImage(IMAdditions) squareImage]
	-[UIImage(IMAdditions) imageWithSize:]
	-[UIImage(IMAdditions) imageWithWidth:leftCapWidth:rightCapWidth:]
	-[UIImage(IMAdditions) imageWithCropRect:]
	-[UIImage(IMAdditions) imageWithComposite:blendMode:dstRect:]
	-[UIImage(IMAdditions) mirroredImage]
	-[UIImage(IMAdditions) imageWithMaxBounds:]
	-[UIImage(IMAdditions) imageWithWidth:leftCapWidth:]
	-[UIImage(IMAdditions) imageWithTint:]
	-[UIImage(IMAdditions) imageMaskWithColor:]
	-[UIImage(IMAdditions) imageWithGradientAngle:startColor:endColor:]
	-[UIImage(IMAdditions) imageWithComposite:blendMode:]
	-[UIImage(IMAdditions) imageByRemovingPath:]
	-[UIImage(IMAdditions) stretchableMirroredImage]
	-[UIImage(IMAdditions) debugShowInKeyWindow]
	-[UIImage(IMAdditions) dumpAsPNGToCachesNamed:]
	-[UIImage(IMAdditions) im_flatImageWithColor:]
	-[UIImage(IMAdditions) imageWithSize:preserveAspectRatio:]
	-[UIImage(IMAdditions) colorAtPixelX:y:]
	-[UIImage(IMAdditions) im_imageWithBackgroundColor:]
	-[UIImage(IMAdditions) imageWithSize:resizeOptions:]

UIView(IMAdditions)
	// instance methods
	-[UIView(IMAdditions) ancestorOfClass:]
	-[UIView(IMAdditions) isVerticallyCompact]
	-[UIView(IMAdditions) isHorizontallySpecified]
	-[UIView(IMAdditions) isHorizontallyCompact]
	-[UIView(IMAdditions) isHorizontallyRegular]
	-[UIView(IMAdditions) isVerticallySpecified]
	-[UIView(IMAdditions) isVerticallyRegular]
	-[UIView(IMAdditions) debugHighlightViewWithColor:width:]
	-[UIView(IMAdditions) subviewOfClass:]
	-[UIView(IMAdditions) findFirstResponder]
	-[UIView(IMAdditions) debugHighlightView]
	-[UIView(IMAdditions) debugHighlightViewBlue]
	-[UIView(IMAdditions) snapshot_cg]
	-[UIView(IMAdditions) imageSnapshot]
	-[UIView(IMAdditions) printResponderChain]
	-[UIView(IMAdditions) setRoundedCorners:radius:]
	-[UIView(IMAdditions) attachPopUpAnimation]
	-[UIView(IMAdditions) debugingBorderColor]
	-[UIView(IMAdditions) setDebugingBorderColor:]
	-[UIView(IMAdditions) isViewSizeFullScreenInWindow:ignoreInWindowCheck:]
	-[UIView(IMAdditions) adjustRectCenter:fromView:]

NSURLSessionConfiguration(IMUserAgentStealthStyle)
	// class methods
	+[NSURLSessionConfiguration(IMUserAgentStealthStyle) im_headerByApplyingStealthStyle:toBaseHeaders:]

AVURLAsset(IMUserAgentStealthStyle)
	// class methods
	+[AVURLAsset(IMUserAgentStealthStyle) im_optionsByApplyingStealthStyle:toBaseOptions:]

UIFont(MTMPUDynamicType)
	// instance methods
	-[UIFont(MTMPUDynamicType) MTMPU_scaledValueForValue:]

MPNowPlayingContentItem(IMAVPlayer)
	// instance methods
	-[MPNowPlayingContentItem(IMAVPlayer) updateNowPlayingInfoIfNeeded:]

NSUserActivity(IMAVPlayer)
	// instance methods
	-[NSUserActivity(IMAVPlayer) setValue:forKey:]
	-[NSUserActivity(IMAVPlayer) itemIdentifier]
	-[NSUserActivity(IMAVPlayer) setItemIdentifier:]
	-[NSUserActivity(IMAVPlayer) containerIdentifier]
	-[NSUserActivity(IMAVPlayer) setContainerIdentifier:]
	-[NSUserActivity(IMAVPlayer) currentTime]
	-[NSUserActivity(IMAVPlayer) itemTitle]
	-[NSUserActivity(IMAVPlayer) setCurrentTime:]
	-[NSUserActivity(IMAVPlayer) setContainerTitle:]
	-[NSUserActivity(IMAVPlayer) containerTitle]
	-[NSUserActivity(IMAVPlayer) setItemTitle:]

NSCharacterSet(IMAdditions)
	// class methods
	+[NSCharacterSet(IMAdditions) URLAllowedCharacterSet]

01 00 1a00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBag 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBagKeySet 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLogConfig 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLookup 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLookupItemArtwork 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMediaTask 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMetrics 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMetricsEvent 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMutableBagKeySet 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMutableLogConfig 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSProcessInfo 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSPromise 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSURLAction 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSURLProtocolHandler 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSURLRequestEncoder 
01 00 1900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSURLSession 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetImageGenerator 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableMetadataItem 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0500 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 1500 /System/Library/PrivateFrameworks/Celestial.framework/Celestial: AVSystemController 
01 00 0400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 1100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 1100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 1100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 1100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAReplicatorLayer 
01 00 1100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 2200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 1b00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 2300 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCAssistantPlaybackQueue 
01 00 2300 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerChangeRequest 
01 00 2300 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerPath 
01 00 2300 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerRequest 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelPodcastEpisode 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPNowPlayingContentItem 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPNowPlayingInfoCenter 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPPropertySet 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPRemoteCommandCenter 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPRequestResponseController 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPSkipTrackCommandEvent 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSByteCountFormatter 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSExpressionDescription 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchedResultsController 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectContext 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1f00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreCoordinator 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLConnection 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUserActivity 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXMLParser 
01 00 1c00 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSAirplaneModeSettingsDetail 
01 00 1c00 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSCellularDataSettingsDetail 
01 00 1c00 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSRestrictionsPasscodeController 
01 00 1d00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: RadiosPreferences 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIAccessibilityElement 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 2500 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropViewSettings 
