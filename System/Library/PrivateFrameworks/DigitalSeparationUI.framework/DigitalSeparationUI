|| __DATA.__objc_data _OBJC_CLASS_$_DSChildAccountInfoController
|| __DATA.__objc_data _OBJC_CLASS_$_DSCompletedController
|| __DATA.__objc_data _OBJC_CLASS_$_DSEmergencyResetController
|| __DATA.__objc_data _OBJC_CLASS_$_DSEmergencyResetWelcomeController
|| __DATA.__objc_data _OBJC_CLASS_$_DSEmergencySOSController
|| __DATA.__objc_data _OBJC_CLASS_$_DSFaceIDController
|| __DATA.__objc_data _OBJC_CLASS_$_DSIconTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_DSNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_DSOBWelcomeController
|| __DATA.__objc_data _OBJC_CLASS_$_DSObfuscationWindow
|| __DATA.__objc_data _OBJC_CLASS_$_DSPasscodeController
|| __DATA.__objc_data _OBJC_CLASS_$_DSPrivacyAdditionalActionsController
|| __DATA.__objc_data _OBJC_CLASS_$_DSPrivacyAppDetailController
|| __DATA.__objc_data _OBJC_CLASS_$_DSPrivacyPermissionDetailController
|| __DATA.__objc_data _OBJC_CLASS_$_DSPrivacyPermissionsController
|| __DATA.__objc_data _OBJC_CLASS_$_DSPublicResourceSharingController
|| __DATA.__objc_data _OBJC_CLASS_$_DSRemoteUIController
|| __DATA.__objc_data _OBJC_CLASS_$_DSRemoteUILoader
|| __DATA.__objc_data _OBJC_CLASS_$_DSRestrictionsController
|| __DATA.__objc_data _OBJC_CLASS_$_DSSafetyCheck
|| __DATA.__objc_data _OBJC_CLASS_$_DSSafetyResetCompletedController
|| __DATA.__objc_data _OBJC_CLASS_$_DSShareLocationController
|| __DATA.__objc_data _OBJC_CLASS_$_DSSharingAdditionalConsiderationsController
|| __DATA.__objc_data _OBJC_CLASS_$_DSSharingPermissionsController
|| __DATA.__objc_data _OBJC_CLASS_$_DSSharingPermissionsDetailController
|| __DATA.__objc_data _OBJC_CLASS_$_DSSharingWelcomeController
|| __DATA.__objc_data _OBJC_CLASS_$_DSTableView
|| __DATA.__objc_data _OBJC_CLASS_$_DSTableWelcomeController
|| __DATA.__objc_data _OBJC_CLASS_$_DSTouchIDController
|| __DATA.__objc_data _OBJC_CLASS_$_DSUIUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_DSWelcomeTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_DSChildAccountInfoController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSCompletedController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSEmergencyResetController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSEmergencyResetWelcomeController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSEmergencySOSController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSFaceIDController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSIconTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_DSNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSOBWelcomeController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSObfuscationWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_DSPasscodeController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSPrivacyAdditionalActionsController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSPrivacyAppDetailController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSPrivacyPermissionDetailController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSPrivacyPermissionsController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSPublicResourceSharingController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSRemoteUIController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSRemoteUILoader
|| __DATA.__objc_data _OBJC_METACLASS_$_DSRestrictionsController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSSafetyCheck
|| __DATA.__objc_data _OBJC_METACLASS_$_DSSafetyResetCompletedController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSShareLocationController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSSharingAdditionalConsiderationsController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSSharingPermissionsController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSSharingPermissionsDetailController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSSharingWelcomeController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSTableView
|| __DATA.__objc_data _OBJC_METACLASS_$_DSTableWelcomeController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSTouchIDController
|| __DATA.__objc_data _OBJC_METACLASS_$_DSUIUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_DSWelcomeTableViewCell
|| __TEXT.__const _kDSTableViewPadding
|| __TEXT.__text _DSUIBundle
|| __TEXT.__text _DSUILocStringForKey
|| __TEXT.__text _DSUILocStringForKeyInTable
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppSupport: _CPNetworkObserverReachable
__ AppSupport: _OBJC_CLASS_$_CPNetworkObserver
__ AppleAccountUI: _OBJC_CLASS_$_AAUIAuthKitPasswordChangeHook
__ AppleAccountUI: _OBJC_CLASS_$_AAUIGrandSlamRemoteUIPresenter
__ AppleIDSSOAuthentication: _AIDAServiceTypeCloud
__ AppleIDSSOAuthentication: _OBJC_CLASS_$_AIDAAccountManager
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ AuthKit: _OBJC_CLASS_$_AKURLBag
__ BiomeStreams: _OBJC_CLASS_$_BMDiscoverabilitySignalEvent
__ BiomeStreams: _OBJC_CLASS_$_BMStreams
__ BiometricKit: _OBJC_CLASS_$_BKDevice
__ BiometricKit: _OBJC_CLASS_$_BKDeviceDescriptor
__ BiometricKit: _OBJC_CLASS_$_BiometricKit
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactIdentifierKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactProperty
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNMutableContact
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRenderer
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRendererSettings
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRenderingScope
__ ContactsUI: _OBJC_CLASS_$_CNContactPickerViewController
__ ContactsUICore: _OBJC_CLASS_$_CNUIContactPropertyRanker
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreCDPUI: _OBJC_CLASS_$_CDPUIDeviceToDeviceEncryptionFlowContext
__ CoreCDPUI: _OBJC_CLASS_$_CDPUIDeviceToDeviceEncryptionHelper
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreLocation: _OBJC_CLASS_$_CLFindMyAccessoryManager
__ CoreLocation: _UTEnablementStatusKey
__ CoreServices: _LSOpenInBackgroundKey
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ DigitalSeparation: _DSDescriptorKeyIconName
__ DigitalSeparation: _DSErrorDomain
__ DigitalSeparation: _DSErrorKeyAppName
__ DigitalSeparation: _DSErrorKeySourceName
__ DigitalSeparation: _DSLocStringForKey
__ DigitalSeparation: _DSSourceNameFindMy
__ DigitalSeparation: _DSSourceNameHealthSharing
__ DigitalSeparation: _DSSourceNameHomeSharing
__ DigitalSeparation: _DSSourceNamePhotos
__ DigitalSeparation: _OBJC_CLASS_$_DSAppPermissionsDescriptor
__ DigitalSeparation: _OBJC_CLASS_$_DSAppSharing
__ DigitalSeparation: _OBJC_CLASS_$_DSError
__ DigitalSeparation: _OBJC_CLASS_$_DSPublicSharingType
__ DigitalSeparation: _OBJC_CLASS_$_DSRestrictionStore
__ DigitalSeparation: _OBJC_CLASS_$_DSSharingPermissions
__ DigitalSeparation: _OBJC_CLASS_$_DSSharingPerson
__ DigitalSeparation: _OBJC_CLASS_$_DSSharingType
__ DigitalSeparation: _OBJC_CLASS_$_DSSourceDescriptor
__ DigitalSeparation: _OBJC_CLASS_$_DSSourceRepository
__ DigitalSeparation: _OBJC_CLASS_$_DSTCCStorePassThrough
__ DigitalSeparation: _OBJC_CLASS_$_DSUtilities
__ DigitalSeparation: _displayNameForApp
__ FMF: _OBJC_CLASS_$_FMFHandle
__ FMF: _OBJC_CLASS_$_FMFSession
__ FamilyCircle: _OBJC_CLASS_$_FAFetchFamilyCircleRequest
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSListFormatter
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ HealthKit: _OBJC_CLASS_$_HKHealthStore
__ HealthKit: _OBJC_CLASS_$_HKMedicalIDStore
__ HealthKit: _OBJC_CLASS_$__HKMedicalIDData
__ HealthUI: _OBJC_CLASS_$_HKMedicalIDEmergencyContactFlow
__ LocalAuthentication: _LAErrorDomain
__ LocalAuthentication: _OBJC_CLASS_$_LAContext
__ ManagedConfiguration: _MCPasscodeErrorDomain
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ OnBoardingKit: _OBJC_CLASS_$_OBBoldTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBHeaderAccessoryButton
__ OnBoardingKit: _OBJC_CLASS_$_OBLinkTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBNavigationController
__ OnBoardingKit: _OBJC_CLASS_$_OBTableWelcomeController
__ OnBoardingKit: _OBJC_CLASS_$_OBTextWelcomeController
__ OnBoardingKit: _OBJC_CLASS_$_OBWelcomeController
__ OnBoardingKit: _OBJC_METACLASS_$_OBNavigationController
__ OnBoardingKit: _OBJC_METACLASS_$_OBTableWelcomeController
__ OnBoardingKit: _OBJC_METACLASS_$_OBTextWelcomeController
__ OnBoardingKit: _OBJC_METACLASS_$_OBWelcomeController
__ PassKitCore: _OBJC_CLASS_$_PKPaymentRegistrationUtilities
__ PassKitCore: _OBJC_CLASS_$_PKPaymentWebService
__ Preferences: _OBJC_CLASS_$_PKBiometrics
__ Preferences: _OBJC_CLASS_$_PSBiometricIdentity
__ Preferences: _OBJC_CLASS_$_PSKeychainSyncManager
__ Preferences: _PSIsPearlAvailable
__ Preferences: _PSSupportsMesa
__ SOS: _OBJC_CLASS_$_SOSUtilities
__ SPOwner: _OBJC_CLASS_$_SPBeaconManager
__ SafariServices: _OBJC_CLASS_$_SFSafariViewController
__ SafariServices: _OBJC_CLASS_$_SFSafariViewControllerConfiguration
__ Security: _SecPasswordIsPasswordWeak2
__ SetupAssistantUI: _OBJC_CLASS_$_BFFComplexPasscodeInputView
__ SetupAssistantUI: _OBJC_CLASS_$_BFFPasscodeView
__ SetupAssistantUI: _OBJC_CLASS_$_BFFSimplePasscodeInputView
__ SoftLinking: __sl_dlopen
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ TCC: _TCCAccessResetForBundleId
__ TCC: _kTCCServiceAddressBook
__ TCC: _kTCCServiceBluetoothAlways
__ TCC: _kTCCServiceCalendar
__ TCC: _kTCCServiceCamera
__ TCC: _kTCCServiceCrashDetection
__ TCC: _kTCCServiceMediaLibrary
__ TCC: _kTCCServiceMicrophone
__ TCC: _kTCCServiceNearbyInteraction
__ TCC: _kTCCServicePhotos
__ TCC: _kTCCServiceReminders
__ TCC: _kTCCServiceSensorKitLocationMetrics
__ TCC: _kTCCServiceWillow
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIContentUnavailableConfiguration
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIKeyboardInputModeController
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIListContentConfiguration
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIProgressView
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$_UITableView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _UIAccessibilityTraitButton
__ UIKit: _UIApp
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIStatusBarWindowLevel
__ UIKit: _UITableViewAutomaticDimension
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _clock_gettime_nsec_np
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
DSObfuscationWindow : UIWindow
  // class methods
  +[DSObfuscationWindow showDSObfuscationWindowForApplicationWindow:]


DSShareLocationController : DSTableWelcomeController <UITableViewDelegate, UITableViewDataSource, CNContactPickerDelegate, DSController>
 @property  CNContactPickerViewController *contactsViewController
 @property  NSArray *locationSharingTypeNames
 @property  CNContact *selectedContact
 @property  long long selectedLocationSharingType
 @property  FMFSession *fmfSession
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DSShareLocationController tableView:cellForRowAtIndexPath:]
  -[DSShareLocationController tableView:numberOfRowsInSection:]
  -[DSShareLocationController numberOfSectionsInTableView:]
  -[DSShareLocationController setDelegate:]
  -[DSShareLocationController fmfHandlesFromContact:]
  -[DSShareLocationController tableView:didSelectRowAtIndexPath:]
  -[DSShareLocationController delegate]
  -[DSShareLocationController .cxx_destruct]
  -[DSShareLocationController viewDidLoad]
  -[DSShareLocationController viewWillAppear:]
  -[DSShareLocationController init]
  -[DSShareLocationController tableView:titleForFooterInSection:]
  -[DSShareLocationController contactPicker:didSelectContact:]
  -[DSShareLocationController selectedContact]
  -[DSShareLocationController setSelectedContact:]
  -[DSShareLocationController fmfSession]
  -[DSShareLocationController fmfHandleFromContactProperty:]
  -[DSShareLocationController setFmfSession:]
  -[DSShareLocationController contactsViewController]
  -[DSShareLocationController setContactsViewController:]
  -[DSShareLocationController shareLocation]
  -[DSShareLocationController manageBoldButton]
  -[DSShareLocationController presentSharingFailedAlert]
  -[DSShareLocationController pickContact]
  -[DSShareLocationController bestDefaultContactProperty]
  -[DSShareLocationController endDateFromNowForOfferTimespan:]
  -[DSShareLocationController locationSharingTypeNames]
  -[DSShareLocationController setLocationSharingTypeNames:]
  -[DSShareLocationController selectedLocationSharingType]
  -[DSShareLocationController setSelectedLocationSharingType:]


DSEmergencyResetWelcomeController : DSOBWelcomeController <DSController>
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DSEmergencyResetWelcomeController setDelegate:]
  -[DSEmergencyResetWelcomeController delegate]
  -[DSEmergencyResetWelcomeController .cxx_destruct]
  -[DSEmergencyResetWelcomeController viewDidLoad]
  -[DSEmergencyResetWelcomeController init]


DSOBWelcomeController : OBWelcomeController
  // instance methods
  -[DSOBWelcomeController viewDidLoad]


DSPrivacyPermissionsController : DSTableWelcomeController <DSPrivacyPermissionsDelegate, DSController>
 @property  DSAppSharing *appSharing
 @property  NSArray *apps
 @property  NSArray *filteredApps
 @property  BOOL isFiltered
 @property  NSMutableSet *selectedApps
 @property  unsigned long scope
 @property  NSArray *sensors
 @property  NSMutableSet *selectedSensors
 @property  NSArray *filteredSensors
 @property  <DSNavigationDelegate> *delegate
 @property  DSTableView *tableView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DSPrivacyPermissionsController tableView:cellForRowAtIndexPath:]
  -[DSPrivacyPermissionsController tableView:numberOfRowsInSection:]
  -[DSPrivacyPermissionsController setApps:]
  -[DSPrivacyPermissionsController setScope:]
  -[DSPrivacyPermissionsController reloadData]
  -[DSPrivacyPermissionsController apps]
  -[DSPrivacyPermissionsController _updateTitle]
  -[DSPrivacyPermissionsController setDelegate:]
  -[DSPrivacyPermissionsController tableView:viewForHeaderInSection:]
  -[DSPrivacyPermissionsController scope]
  -[DSPrivacyPermissionsController tableView:didSelectRowAtIndexPath:]
  -[DSPrivacyPermissionsController delegate]
  -[DSPrivacyPermissionsController .cxx_destruct]
  -[DSPrivacyPermissionsController viewDidLoad]
  -[DSPrivacyPermissionsController isFiltered]
  -[DSPrivacyPermissionsController viewWillAppear:]
  -[DSPrivacyPermissionsController updateSearchResultsForSearchController:]
  -[DSPrivacyPermissionsController searchBar:selectedScopeButtonIndexDidChange:]
  -[DSPrivacyPermissionsController init]
  -[DSPrivacyPermissionsController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[DSPrivacyPermissionsController tableView:didDeselectRowAtIndexPath:]
  -[DSPrivacyPermissionsController _updateButton]
  -[DSPrivacyPermissionsController setIsFiltered:]
  -[DSPrivacyPermissionsController sensors]
  -[DSPrivacyPermissionsController setSensors:]
  -[DSPrivacyPermissionsController selectedApps]
  -[DSPrivacyPermissionsController setSelectedApps:]
  -[DSPrivacyPermissionsController filteredApps]
  -[DSPrivacyPermissionsController _pushNextPane]
  -[DSPrivacyPermissionsController resetAllPermissions]
  -[DSPrivacyPermissionsController resetSelectedPermissions]
  -[DSPrivacyPermissionsController returnFromDetailAndResetSelectedPermissions:forApp:]
  -[DSPrivacyPermissionsController returnFromDetailAndDeleteApp:]
  -[DSPrivacyPermissionsController returnFromDetailAndResetPermissionForSelectedApps:permission:]
  -[DSPrivacyPermissionsController returnFromDetailAndStopAllSharingForPermission:]
  -[DSPrivacyPermissionsController handleResetErrors:pushNextPane:]
  -[DSPrivacyPermissionsController collectPermissionsByType]
  -[DSPrivacyPermissionsController filterContentForSearchText:category:]
  -[DSPrivacyPermissionsController addUnsharedPermissions:andApps:]
  -[DSPrivacyPermissionsController _addLinkButton]
  -[DSPrivacyPermissionsController appSharing]
  -[DSPrivacyPermissionsController setAppSharing:]
  -[DSPrivacyPermissionsController setFilteredApps:]
  -[DSPrivacyPermissionsController selectedSensors]
  -[DSPrivacyPermissionsController setSelectedSensors:]
  -[DSPrivacyPermissionsController filteredSensors]
  -[DSPrivacyPermissionsController setFilteredSensors:]


DSSharingPermissionsDetailController : DSTableWelcomeController
 @property  DSSharingPerson *sharingPerson
 @property  NSArray *remainingPeople
 @property  DSSharingType *sharingType
 @property  NSArray *remainingSharingTypes
 @property  NSArray *sortedSourceNames
 @property  NSArray *sortedPeople
 @property  UIViewController *startingViewController
 @property  <DSSharingPermissionsDetailDelegate> *delegate

  // class methods
  +[DSSharingPermissionsDetailController initialize]
  +[DSSharingPermissionsDetailController detailControllerWithPeople:startingViewController:delegate:]
  +[DSSharingPermissionsDetailController detailControllerWithSharingTypes:startingViewController:delegate:]

  // instance methods
  -[DSSharingPermissionsDetailController tableView:cellForRowAtIndexPath:]
  -[DSSharingPermissionsDetailController tableView:numberOfRowsInSection:]
  -[DSSharingPermissionsDetailController setDelegate:]
  -[DSSharingPermissionsDetailController tableView:willDisplayCell:forRowAtIndexPath:]
  -[DSSharingPermissionsDetailController tableView:didSelectRowAtIndexPath:]
  -[DSSharingPermissionsDetailController delegate]
  -[DSSharingPermissionsDetailController .cxx_destruct]
  -[DSSharingPermissionsDetailController viewDidLoad]
  -[DSSharingPermissionsDetailController setSharingType:]
  -[DSSharingPermissionsDetailController sharingType]
  -[DSSharingPermissionsDetailController next]
  -[DSSharingPermissionsDetailController tableView:didDeselectRowAtIndexPath:]
  -[DSSharingPermissionsDetailController _updateButton]
  -[DSSharingPermissionsDetailController setSortedPeople:]
  -[DSSharingPermissionsDetailController sortedPeople]
  -[DSSharingPermissionsDetailController stopAllSharing]
  -[DSSharingPermissionsDetailController stopSelectedSharing]
  -[DSSharingPermissionsDetailController reloadTableViewData]
  -[DSSharingPermissionsDetailController sourceNameForIndexPath:]
  -[DSSharingPermissionsDetailController personForIndexPath:]
  -[DSSharingPermissionsDetailController alertTextForSources:]
  -[DSSharingPermissionsDetailController sharingStoppedForPerson:sourceNames:error:]
  -[DSSharingPermissionsDetailController sharingStoppedForType:people:error:]
  -[DSSharingPermissionsDetailController stopSharingSources:people:alertLabel:alertDetail:completion:]
  -[DSSharingPermissionsDetailController sharingPerson]
  -[DSSharingPermissionsDetailController setSharingPerson:]
  -[DSSharingPermissionsDetailController remainingPeople]
  -[DSSharingPermissionsDetailController setRemainingPeople:]
  -[DSSharingPermissionsDetailController remainingSharingTypes]
  -[DSSharingPermissionsDetailController setRemainingSharingTypes:]
  -[DSSharingPermissionsDetailController sortedSourceNames]
  -[DSSharingPermissionsDetailController setSortedSourceNames:]
  -[DSSharingPermissionsDetailController startingViewController]
  -[DSSharingPermissionsDetailController setStartingViewController:]


DSSharingAdditionalConsiderationsController : DSOBWelcomeController <DSController>
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DSSharingAdditionalConsiderationsController setDelegate:]
  -[DSSharingAdditionalConsiderationsController delegate]
  -[DSSharingAdditionalConsiderationsController .cxx_destruct]
  -[DSSharingAdditionalConsiderationsController viewDidLoad]
  -[DSSharingAdditionalConsiderationsController init]
  -[DSSharingAdditionalConsiderationsController back]


DSSharingPermissionsController : DSTableWelcomeController <DSSharingPermissionsDetailDelegate, DSController>
 @property  DSSourceRepository *repo
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  DSSharingPermissions *permissions
 @property  NSMutableSet *selectedPeople
 @property  NSMutableSet *selectedTypes
 @property  unsigned long fetchCompletedTime
 @property  NSError *cachedFetchError
 @property  NSMutableDictionary *personIconCache
 @property  <DSNavigationDelegate> *delegate
 @property  DSTableView *tableView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DSSharingPermissionsController initialize]

  // instance methods
  -[DSSharingPermissionsController tableView:cellForRowAtIndexPath:]
  -[DSSharingPermissionsController tableView:numberOfRowsInSection:]
  -[DSSharingPermissionsController _updateTitle]
  -[DSSharingPermissionsController setPermissions:]
  -[DSSharingPermissionsController setDelegate:]
  -[DSSharingPermissionsController tableView:viewForHeaderInSection:]
  -[DSSharingPermissionsController workQueue]
  -[DSSharingPermissionsController tableView:willDisplayCell:forRowAtIndexPath:]
  -[DSSharingPermissionsController tableView:didSelectRowAtIndexPath:]
  -[DSSharingPermissionsController delegate]
  -[DSSharingPermissionsController setWorkQueue:]
  -[DSSharingPermissionsController viewDidAppear:]
  -[DSSharingPermissionsController .cxx_destruct]
  -[DSSharingPermissionsController viewDidLoad]
  -[DSSharingPermissionsController viewWillAppear:]
  -[DSSharingPermissionsController permissions]
  -[DSSharingPermissionsController updateSearchResultsForSearchController:]
  -[DSSharingPermissionsController searchBar:selectedScopeButtonIndexDidChange:]
  -[DSSharingPermissionsController init]
  -[DSSharingPermissionsController tableView:didDeselectRowAtIndexPath:]
  -[DSSharingPermissionsController _updateButton]
  -[DSSharingPermissionsController setSelectedTypes:]
  -[DSSharingPermissionsController selectedTypes]
  -[DSSharingPermissionsController _pushNextPane]
  -[DSSharingPermissionsController filterContentForSearchText:category:]
  -[DSSharingPermissionsController _addLinkButton]
  -[DSSharingPermissionsController stopAllSharing]
  -[DSSharingPermissionsController stopSelectedSharing]
  -[DSSharingPermissionsController reloadTableViewData]
  -[DSSharingPermissionsController personForIndexPath:]
  -[DSSharingPermissionsController setUrgentFetchNeeded]
  -[DSSharingPermissionsController sharingStoppedForPerson:sourceNames:]
  -[DSSharingPermissionsController sharingStoppedForType:people:]
  -[DSSharingPermissionsController stopSharingFailedWithError:]
  -[DSSharingPermissionsController stopSharingFlowCompleted]
  -[DSSharingPermissionsController setFetchNeeded]
  -[DSSharingPermissionsController requestNewFetchImmediately:]
  -[DSSharingPermissionsController fetchSharingPermissions]
  -[DSSharingPermissionsController _fetchCompletedWithError:]
  -[DSSharingPermissionsController presentFetchErrorMessage:]
  -[DSSharingPermissionsController isFindMyASource]
  -[DSSharingPermissionsController sharingTypeForIndexPath:]
  -[DSSharingPermissionsController tableIconForPerson:]
  -[DSSharingPermissionsController addUnsharedSource:resources:]
  -[DSSharingPermissionsController addUnsharedPerson:]
  -[DSSharingPermissionsController repo]
  -[DSSharingPermissionsController setRepo:]
  -[DSSharingPermissionsController selectedPeople]
  -[DSSharingPermissionsController setSelectedPeople:]
  -[DSSharingPermissionsController fetchCompletedTime]
  -[DSSharingPermissionsController setFetchCompletedTime:]
  -[DSSharingPermissionsController cachedFetchError]
  -[DSSharingPermissionsController setCachedFetchError:]
  -[DSSharingPermissionsController personIconCache]
  -[DSSharingPermissionsController setPersonIconCache:]


DSRemoteUILoader : NSObject <AAUIGrandSlamRemoteUIPresenterDelegate, AIDAAccountManagerDelegate, DSController>
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DSRemoteUILoader initialize]

  // instance methods
  -[DSRemoteUILoader setDelegate:]
  -[DSRemoteUILoader delegate]
  -[DSRemoteUILoader .cxx_destruct]
  -[DSRemoteUILoader accountsForAccountManager:]
  -[DSRemoteUILoader remoteUIWillLoadRequest:]
  -[DSRemoteUILoader remoteUIDidReceiveHTTPResponse:]
  -[DSRemoteUILoader remoteUIDidEndFlow:]
  -[DSRemoteUILoader remoteUIRequestComplete:error:]
  -[DSRemoteUILoader initWithPresenter:delegate:]
  -[DSRemoteUILoader initWithAccountManager:presenter:delegate:]
  -[DSRemoteUILoader loadRemoteUI]


DSRemoteUIController : OBWelcomeController <DSController>
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DSRemoteUIController setDelegate:]
  -[DSRemoteUIController delegate]
  -[DSRemoteUIController .cxx_destruct]
  -[DSRemoteUIController viewDidLoad]
  -[DSRemoteUIController init]


DSEmergencyResetController : DSOBWelcomeController <DSController>
 @property  DSSharingPermissions *permissions
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  DSAppSharing *appSharing
 @property  OBBoldTrayButton *boldButton
 @property  NSError *resetError
 @property  BOOL isFetching
 @property  SPBeaconManager *beaconManager
 @property  UIStackView *progressStackView
 @property  UIProgressView *progressView
 @property  BOOL userDidPressReset
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DSEmergencyResetController initialize]

  // instance methods
  -[DSEmergencyResetController setBeaconManager:]
  -[DSEmergencyResetController beaconManager]
  -[DSEmergencyResetController setPermissions:]
  -[DSEmergencyResetController setDelegate:]
  -[DSEmergencyResetController workQueue]
  -[DSEmergencyResetController delegate]
  -[DSEmergencyResetController setWorkQueue:]
  -[DSEmergencyResetController .cxx_destruct]
  -[DSEmergencyResetController viewDidLoad]
  -[DSEmergencyResetController viewWillAppear:]
  -[DSEmergencyResetController progressView]
  -[DSEmergencyResetController permissions]
  -[DSEmergencyResetController setProgressView:]
  -[DSEmergencyResetController resetError]
  -[DSEmergencyResetController init]
  -[DSEmergencyResetController boldButton]
  -[DSEmergencyResetController setBoldButton:]
  -[DSEmergencyResetController showProgressBar]
  -[DSEmergencyResetController isFetching]
  -[DSEmergencyResetController setIsFetching:]
  -[DSEmergencyResetController appSharing]
  -[DSEmergencyResetController setAppSharing:]
  -[DSEmergencyResetController safetyResetAllPressed]
  -[DSEmergencyResetController fetchSharingPermissions:]
  -[DSEmergencyResetController safetyResetAll]
  -[DSEmergencyResetController hideProgressBar]
  -[DSEmergencyResetController updateProgressBar]
  -[DSEmergencyResetController setDigitalSeparationTipsFlag]
  -[DSEmergencyResetController handleErrorsAndMoveToNextPane]
  -[DSEmergencyResetController resetAllFirstPartySharing:]
  -[DSEmergencyResetController resetAllThirdPartyTCCs:]
  -[DSEmergencyResetController resetNecessaryFirstPartyPermissions:]
  -[DSEmergencyResetController setResetError:]
  -[DSEmergencyResetController progressStackView]
  -[DSEmergencyResetController setProgressStackView:]
  -[DSEmergencyResetController userDidPressReset]
  -[DSEmergencyResetController setUserDidPressReset:]


DSPublicResourceSharingController : DSTableWelcomeController <DSController>
 @property  DSSharingPermissions *permissions
 @property  NSMutableSet *selectedTypes
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DSPublicResourceSharingController initialize]

  // instance methods
  -[DSPublicResourceSharingController tableView:cellForRowAtIndexPath:]
  -[DSPublicResourceSharingController tableView:numberOfRowsInSection:]
  -[DSPublicResourceSharingController _updateTitle]
  -[DSPublicResourceSharingController setPermissions:]
  -[DSPublicResourceSharingController setDelegate:]
  -[DSPublicResourceSharingController workQueue]
  -[DSPublicResourceSharingController tableView:willDisplayCell:forRowAtIndexPath:]
  -[DSPublicResourceSharingController tableView:didSelectRowAtIndexPath:]
  -[DSPublicResourceSharingController delegate]
  -[DSPublicResourceSharingController setWorkQueue:]
  -[DSPublicResourceSharingController .cxx_destruct]
  -[DSPublicResourceSharingController viewWillAppear:]
  -[DSPublicResourceSharingController permissions]
  -[DSPublicResourceSharingController init]
  -[DSPublicResourceSharingController tableView:didDeselectRowAtIndexPath:]
  -[DSPublicResourceSharingController shouldShow]
  -[DSPublicResourceSharingController _updateButton]
  -[DSPublicResourceSharingController setSelectedTypes:]
  -[DSPublicResourceSharingController selectedTypes]
  -[DSPublicResourceSharingController _pushNextPane]
  -[DSPublicResourceSharingController _addLinkButton]
  -[DSPublicResourceSharingController stopAllSharing]
  -[DSPublicResourceSharingController stopSelectedSharing]
  -[DSPublicResourceSharingController reloadTableViewData]
  -[DSPublicResourceSharingController stopSharingFailedWithError:]
  -[DSPublicResourceSharingController stopSharingTypes:alertLabel:alertDetail:]
  -[DSPublicResourceSharingController publicSharingTypeForIndexPath:]


DSSafetyCheck : NSObject
  // class methods
  +[DSSafetyCheck isManagedAccount]
  +[DSSafetyCheck safetyCheckViewController]
  +[DSSafetyCheck startSafetyCheckWithPresentingViewController:safetyCheckController:]
  +[DSSafetyCheck startEmergencyResetWithPresentingViewController:]
  +[DSSafetyCheck startManageSharingWithPresentingViewController:]
  +[DSSafetyCheck authForSafetyCheckWithPresentingViewController:safetyCheckController:]
  +[DSSafetyCheck isChildOrTeenAccountWithCompletion:]
  +[DSSafetyCheck showChildAccountFlowWithPresentingViewController:]
  +[DSSafetyCheck showManagedAccountAlertWithPresentingViewController:]
  +[DSSafetyCheck shouldShowHSA2Upgrade]
  +[DSSafetyCheck showHSA2UpgradeWithPresentingViewController:safetyCheckController:]
  +[DSSafetyCheck showLearnMoreResourcesWithPresentingViewController:]
  +[DSSafetyCheck showLearnMoreRestrictionResourcesWithPresentingViewController:]


DSTableView : UITableView
 @property  NSLayoutConstraint *heightConstraint

  // instance methods
  -[DSTableView setHeightConstraint:]
  -[DSTableView heightConstraint]
  -[DSTableView setContentSize:]
  -[DSTableView .cxx_destruct]
  -[DSTableView init]
  -[DSTableView constrainTableView]


DSPrivacyAppDetailController : DSTableWelcomeController
 @property  NSArray *sortedPermissions
 @property  DSApp *app
 @property  NSMutableArray *selectedPermissions
 @property  <DSPrivacyPermissionsDelegate> *delegate

  // instance methods
  -[DSPrivacyAppDetailController tableView:cellForRowAtIndexPath:]
  -[DSPrivacyAppDetailController tableView:numberOfRowsInSection:]
  -[DSPrivacyAppDetailController setDelegate:]
  -[DSPrivacyAppDetailController tableView:didSelectRowAtIndexPath:]
  -[DSPrivacyAppDetailController delegate]
  -[DSPrivacyAppDetailController .cxx_destruct]
  -[DSPrivacyAppDetailController viewDidLoad]
  -[DSPrivacyAppDetailController tableView:didDeselectRowAtIndexPath:]
  -[DSPrivacyAppDetailController app]
  -[DSPrivacyAppDetailController setApp:]
  -[DSPrivacyAppDetailController _updateButton]
  -[DSPrivacyAppDetailController back]
  -[DSPrivacyAppDetailController returnFromDetailAndDeleteApp]
  -[DSPrivacyAppDetailController returnFromDetailAndRevokeSelectedPermissions]
  -[DSPrivacyAppDetailController initWithTitle:detailText:symbolName:app:]
  -[DSPrivacyAppDetailController selectedPermissions]
  -[DSPrivacyAppDetailController setSelectedPermissions:]
  -[DSPrivacyAppDetailController sortedPermissions]
  -[DSPrivacyAppDetailController setSortedPermissions:]


DSFaceIDController : DSOBWelcomeController <BKUIPearlEnrollControllerDelegate, DSController>
 @property  LAContext *authContext
 @property  UINavigationController *faceIDEnrollmentNavigationController
 @property  OBBoldTrayButton *boldButton
 @property  CIDVUIBiometricBindingFlowManager *_biometricBindingFlowManager
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DSFaceIDController hasAlternateAppearance]
  +[DSFaceIDController supportsPearl]
  +[DSFaceIDController isPearlEnrolled]
  +[DSFaceIDController pearlIdentities]

  // instance methods
  -[DSFaceIDController setDelegate:]
  -[DSFaceIDController delegate]
  -[DSFaceIDController .cxx_destruct]
  -[DSFaceIDController viewDidLoad]
  -[DSFaceIDController authContext]
  -[DSFaceIDController setAuthContext:]
  -[DSFaceIDController init]
  -[DSFaceIDController shouldShow]
  -[DSFaceIDController boldButton]
  -[DSFaceIDController setBoldButton:]
  -[DSFaceIDController _didTapCancelButton]
  -[DSFaceIDController pearlEnrollController:finishedEnrollWithError:]
  -[DSFaceIDController resetFaceID]
  -[DSFaceIDController beginFaceIDEnrollment]
  -[DSFaceIDController updateFaceIDPaneConfiguration]
  -[DSFaceIDController deleteAllIdentities]
  -[DSFaceIDController configurePeriocularEnabled:]
  -[DSFaceIDController deleteGlobalAuthACL]
  -[DSFaceIDController _biometricBindingFlowManager]
  -[DSFaceIDController faceIDEnrollmentNavigationController]
  -[DSFaceIDController setFaceIDEnrollmentNavigationController:]
  -[DSFaceIDController set_biometricBindingFlowManager:]


DSPasscodeController : DSOBWelcomeController <BFFPasscodeInputViewDelegate, DSController>
 @property  long long passcodeState
 @property  NSString *passcodeNew
 @property  NSString *passcodeOld
 @property  BOOL numeric
 @property  unsigned long numericLength
 @property  BFFPasscodeView *passcodeView
 @property  NSLayoutConstraint *contentHeightConstraint
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DSPasscodeController isPasscodeSet]

  // instance methods
  -[DSPasscodeController setDelegate:]
  -[DSPasscodeController delegate]
  -[DSPasscodeController viewDidAppear:]
  -[DSPasscodeController reset]
  -[DSPasscodeController .cxx_destruct]
  -[DSPasscodeController viewDidLoad]
  -[DSPasscodeController viewWillAppear:]
  -[DSPasscodeController validatePIN:]
  -[DSPasscodeController init]
  -[DSPasscodeController shouldShow]
  -[DSPasscodeController contentHeightConstraint]
  -[DSPasscodeController isNumeric]
  -[DSPasscodeController setNumeric:]
  -[DSPasscodeController passcodeInput:enteredPasscode:]
  -[DSPasscodeController passcodeInputView]
  -[DSPasscodeController passcodeView]
  -[DSPasscodeController nextButtonTapped]
  -[DSPasscodeController passcodeInput:tappedFooterButton:]
  -[DSPasscodeController _applyPasscode]
  -[DSPasscodeController _createAndShowAnimatedNavBarSpinner]
  -[DSPasscodeController setContentHeightConstraint:]
  -[DSPasscodeController setPasscodeView:]
  -[DSPasscodeController _setupFirstEntry]
  -[DSPasscodeController configurePasscodeTypeUsingAnimations:]
  -[DSPasscodeController _showWeakWarningAlert]
  -[DSPasscodeController _commitPasscodeEntryTypeChange]
  -[DSPasscodeController passcodeOptionAlertController]
  -[DSPasscodeController _showPasscodeOptionsSheet]
  -[DSPasscodeController setPasscodeState:]
  -[DSPasscodeController acceptWeakPasscode:]
  -[DSPasscodeController passcodeState]
  -[DSPasscodeController userEnteredPasscode:]
  -[DSPasscodeController numericLength]
  -[DSPasscodeController setNumericLength:]
  -[DSPasscodeController usesSimplePasscodeEntry]
  -[DSPasscodeController _animatePasscodeViewTransition]
  -[DSPasscodeController handleCurrentPasscodeEntry:]
  -[DSPasscodeController handleNewPasscodeEntry:]
  -[DSPasscodeController handlePasscodeDoesNotMeetConstraints:]
  -[DSPasscodeController handlePasscodeConfirmationEntry:]
  -[DSPasscodeController _transitionToPasscodePaneWithState:animationType:]
  -[DSPasscodeController passcodeNew]
  -[DSPasscodeController setPasscodeNew:]
  -[DSPasscodeController passcodeOld]
  -[DSPasscodeController setPasscodeOld:]


DSCompletedController : DSOBWelcomeController <CLFindMyAccessoryManagerDelegate, DSController>
 @property  FAFamilyMember *familyMember
 @property  BOOL walletSharing
 @property  BOOL UTAlertsEnabled
 @property  UIActivityIndicatorView *spinner
 @property  NSLayoutConstraint *heightConstraint
 @property  NSObject<OS_dispatch_group> *fetchingGroup
 @property  CLFindMyAccessoryManager *accessoryManager
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DSCompletedController initialize]

  // instance methods
  -[DSCompletedController setHeightConstraint:]
  -[DSCompletedController setDelegate:]
  -[DSCompletedController delegate]
  -[DSCompletedController spinner]
  -[DSCompletedController heightConstraint]
  -[DSCompletedController .cxx_destruct]
  -[DSCompletedController viewDidLoad]
  -[DSCompletedController setAccessoryManager:]
  -[DSCompletedController accessoryManager]
  -[DSCompletedController init]
  -[DSCompletedController familyMember]
  -[DSCompletedController setFamilyMember:]
  -[DSCompletedController findMyAccessoryManager:didFailWithError:forDevice:]
  -[DSCompletedController findMyAccessoryManager:didFetchStatusOfUTEnablementRequirementsWithStatus:withError:]
  -[DSCompletedController setSpinner:]
  -[DSCompletedController fetchCompleted]
  -[DSCompletedController fetchAdditionalSharingWithCompletion:]
  -[DSCompletedController addFamilyBullet]
  -[DSCompletedController addWalletBullet]
  -[DSCompletedController addHomeBullet]
  -[DSCompletedController addUTAlerts]
  -[DSCompletedController startContentSpinner]
  -[DSCompletedController stopContentSpinner]
  -[DSCompletedController learnMorePressed]
  -[DSCompletedController walletSharing]
  -[DSCompletedController setWalletSharing:]
  -[DSCompletedController UTAlertsEnabled]
  -[DSCompletedController setUTAlertsEnabled:]
  -[DSCompletedController fetchingGroup]
  -[DSCompletedController setFetchingGroup:]


DSUIUtilities : NSObject
  // class methods
  +[DSUIUtilities setUpBoldButtonForController:title:target:selector:]
  +[DSUIUtilities setUpLinkButtonForController:title:target:selector:]
  +[DSUIUtilities setUpLearnMoreButtonForController:]
  +[DSUIUtilities setButtonsBusy:forController:]
  +[DSUIUtilities appIconForAppID:format:]
  +[DSUIUtilities isPlaceholderForApp:]


DSTouchIDController : DSOBWelcomeController <BiometricKitUIEnrollResultDelegate, DSController>
 @property  BiometricKitUIEnrollViewController *enrollController
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DSTouchIDController isTouchIDEnrolled]

  // instance methods
  -[DSTouchIDController setDelegate:]
  -[DSTouchIDController delegate]
  -[DSTouchIDController dealloc]
  -[DSTouchIDController .cxx_destruct]
  -[DSTouchIDController viewDidLoad]
  -[DSTouchIDController init]
  -[DSTouchIDController shouldShow]
  -[DSTouchIDController enrollResult:bkIdentity:]
  -[DSTouchIDController _userDidTapCancelButton:]
  -[DSTouchIDController beginEnrollment]
  -[DSTouchIDController restartEnrollment]
  -[DSTouchIDController deleteIdentity]
  -[DSTouchIDController _cancelLeftNavigationItem]
  -[DSTouchIDController deleteAllIdentities]
  -[DSTouchIDController resetTouchID]
  -[DSTouchIDController enrollTouchID]
  -[DSTouchIDController hasMultipleFingerprints]
  -[DSTouchIDController addNavigationItems]
  -[DSTouchIDController enrollController]
  -[DSTouchIDController setEnrollController:]


DSIconTableViewCell : UITableViewCell
  // class methods
  +[DSIconTableViewCell iconTableViewCellFromTableView:withText:detail:icon:]
  +[DSIconTableViewCell iconTableViewCellFromTableView:withRightAlignedLabel:detail:icon:]

  // instance methods
  -[DSIconTableViewCell willTransitionToState:]
  -[DSIconTableViewCell initWithText:detail:icon:]
  -[DSIconTableViewCell initWithRightAlignedLabel:detail:icon:]
  -[DSIconTableViewCell customizeProperties]


DSRestrictionsController : OBTextWelcomeController <DSController>
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DSRestrictionsController setDelegate:]
  -[DSRestrictionsController delegate]
  -[DSRestrictionsController .cxx_destruct]
  -[DSRestrictionsController viewDidLoad]
  -[DSRestrictionsController init]
  -[DSRestrictionsController shouldShow]
  -[DSRestrictionsController learnMoreRestrictionsPressed]
  -[DSRestrictionsController restrictionList]


DSSharingWelcomeController : DSOBWelcomeController <DSController>
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DSSharingWelcomeController setDelegate:]
  -[DSSharingWelcomeController delegate]
  -[DSSharingWelcomeController .cxx_destruct]
  -[DSSharingWelcomeController viewDidLoad]
  -[DSSharingWelcomeController init]


DSChildAccountInfoController : OBWelcomeController
  // instance methods
  -[DSChildAccountInfoController viewDidLoad]
  -[DSChildAccountInfoController init]
  -[DSChildAccountInfoController dismissChildAccountInfo]


DSSafetyResetCompletedController : DSOBWelcomeController <DSController>
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DSSafetyResetCompletedController skip]
  -[DSSafetyResetCompletedController setDelegate:]
  -[DSSafetyResetCompletedController delegate]
  -[DSSafetyResetCompletedController .cxx_destruct]
  -[DSSafetyResetCompletedController viewDidLoad]
  -[DSSafetyResetCompletedController init]


DSWelcomeTableViewCell : UITableViewCell
 @property  NSMutableArray *constraints

  // instance methods
  -[DSWelcomeTableViewCell setConstraints:]
  -[DSWelcomeTableViewCell .cxx_destruct]
  -[DSWelcomeTableViewCell constraints]
  -[DSWelcomeTableViewCell init]
  -[DSWelcomeTableViewCell customizeProperties]
  -[DSWelcomeTableViewCell constrainImageViews]
  -[DSWelcomeTableViewCell constrainTextLabels]


DSPrivacyAdditionalActionsController : DSOBWelcomeController <DSController>
 @property  OBBoldTrayButton *boldButton
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DSPrivacyAdditionalActionsController setDelegate:]
  -[DSPrivacyAdditionalActionsController delegate]
  -[DSPrivacyAdditionalActionsController .cxx_destruct]
  -[DSPrivacyAdditionalActionsController viewDidLoad]
  -[DSPrivacyAdditionalActionsController viewWillAppear:]
  -[DSPrivacyAdditionalActionsController init]
  -[DSPrivacyAdditionalActionsController boldButton]
  -[DSPrivacyAdditionalActionsController setBoldButton:]
  -[DSPrivacyAdditionalActionsController pushNextPane]
  -[DSPrivacyAdditionalActionsController back]


DSPrivacyPermissionDetailController : DSTableWelcomeController
 @property  NSArray *apps
 @property  DSSensor *permission
 @property  NSMutableArray *selectedApps
 @property  <DSPrivacyPermissionsDelegate> *delegate

  // instance methods
  -[DSPrivacyPermissionDetailController permission]
  -[DSPrivacyPermissionDetailController tableView:cellForRowAtIndexPath:]
  -[DSPrivacyPermissionDetailController tableView:numberOfRowsInSection:]
  -[DSPrivacyPermissionDetailController setApps:]
  -[DSPrivacyPermissionDetailController apps]
  -[DSPrivacyPermissionDetailController setDelegate:]
  -[DSPrivacyPermissionDetailController tableView:didSelectRowAtIndexPath:]
  -[DSPrivacyPermissionDetailController delegate]
  -[DSPrivacyPermissionDetailController .cxx_destruct]
  -[DSPrivacyPermissionDetailController viewDidLoad]
  -[DSPrivacyPermissionDetailController setPermission:]
  -[DSPrivacyPermissionDetailController tableView:didDeselectRowAtIndexPath:]
  -[DSPrivacyPermissionDetailController _updateButton]
  -[DSPrivacyPermissionDetailController selectedApps]
  -[DSPrivacyPermissionDetailController setSelectedApps:]
  -[DSPrivacyPermissionDetailController back]
  -[DSPrivacyPermissionDetailController stopAllPressed]
  -[DSPrivacyPermissionDetailController returnFromDetailAndResetPermissionForSelectedApps]
  -[DSPrivacyPermissionDetailController initWithTitle:detailText:symbolName:permission:apps:]
  -[DSPrivacyPermissionDetailController returnFromDetailAndStopAllSharingForPermission]


DSNavigationController : OBNavigationController <DSNavigationDelegate, UINavigationControllerDelegate, UIAdaptivePresentationControllerDelegate>
 @property  NSDictionary *safetyResetChapters
 @property  NSDictionary *sharingActivityChapters
 @property  NSArray *safetyResetNavigationOrder
 @property  NSArray *sharingActivityNavigationOrder
 @property  DSRemoteUILoader *remoteUILoader
 @property  long long currentFlowType
 @property  Class currentPaneType
 @property  long long currentChapter
 @property  long long currentChapterForAnalytics
 @property  UIViewController *networkErrorController
 @property  BOOL isShowingNetworkError
 @property  NSArray *panesRequiringNetwork
 @property  UINavigationController *connectionErrorNavigation
 @property  NSDictionary *cachedPanes
 @property  UIWindow *obfuscationWindow
 @property  NSMutableDictionary *unsharedResourcesBySource
 @property  NSMutableSet *unsharedPeople
 @property  NSMutableSet *unsharedApps
 @property  NSMutableSet *unsharedPermissions
 @property  LAContext *authContext
 @property  DSSharingPermissions *fetchedSharingPermissions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DSNavigationController initialize]

  // instance methods
  -[DSNavigationController presentationControllerDidDismiss:]
  -[DSNavigationController _reachabilityChanged:]
  -[DSNavigationController isNetworkReachable]
  -[DSNavigationController didEnterBackground:]
  -[DSNavigationController dealloc]
  -[DSNavigationController .cxx_destruct]
  -[DSNavigationController viewDidLoad]
  -[DSNavigationController viewWillAppear:]
  -[DSNavigationController navigationController:willShowViewController:animated:]
  -[DSNavigationController willEnterForeground:]
  -[DSNavigationController authContext]
  -[DSNavigationController setAuthContext:]
  -[DSNavigationController presentViewController:animated:completion:]
  -[DSNavigationController cancel]
  -[DSNavigationController init]
  -[DSNavigationController currentChapter]
  -[DSNavigationController pushNextPane]
  -[DSNavigationController unsharedPermissions]
  -[DSNavigationController unsharedApps]
  -[DSNavigationController setFetchedSharingPermissions:]
  -[DSNavigationController unsharedResourcesBySource]
  -[DSNavigationController unsharedPeople]
  -[DSNavigationController fetchedSharingPermissions]
  -[DSNavigationController quickExit]
  -[DSNavigationController learnMorePressed]
  -[DSNavigationController learnMoreRestrictionsPressed]
  -[DSNavigationController finishFlow]
  -[DSNavigationController startFlowWithType:]
  -[DSNavigationController goToCustomizeSharing]
  -[DSNavigationController displayNetworkError]
  -[DSNavigationController pushPaneType:loadRemoteUI:]
  -[DSNavigationController pushPaneAfterPaneType:]
  -[DSNavigationController initStartingWithEmergencyReset]
  -[DSNavigationController initStartingWithMangeSharing]
  -[DSNavigationController setupConnectionError]
  -[DSNavigationController hideNetworkError]
  -[DSNavigationController shouldFinishFlow]
  -[DSNavigationController pushPaneWithController:paneType:shouldShow:]
  -[DSNavigationController pushPaneType:]
  -[DSNavigationController currentPaneType]
  -[DSNavigationController paneInstanceForType:]
  -[DSNavigationController setupQuickExitButtonWithController:]
  -[DSNavigationController setupCancelButtonWithController:]
  -[DSNavigationController updateCurrentChapterWithPaneType:]
  -[DSNavigationController setupChapterIndicatorWithController:]
  -[DSNavigationController sendSummaryAnalyticsWithQuickExit:finalScreen:]
  -[DSNavigationController flowTypeForAnalytics]
  -[DSNavigationController resetRemoteUI]
  -[DSNavigationController safetyResetChapters]
  -[DSNavigationController setSafetyResetChapters:]
  -[DSNavigationController sharingActivityChapters]
  -[DSNavigationController setSharingActivityChapters:]
  -[DSNavigationController safetyResetNavigationOrder]
  -[DSNavigationController setSafetyResetNavigationOrder:]
  -[DSNavigationController sharingActivityNavigationOrder]
  -[DSNavigationController setSharingActivityNavigationOrder:]
  -[DSNavigationController remoteUILoader]
  -[DSNavigationController setRemoteUILoader:]
  -[DSNavigationController currentFlowType]
  -[DSNavigationController setCurrentFlowType:]
  -[DSNavigationController setCurrentPaneType:]
  -[DSNavigationController setCurrentChapter:]
  -[DSNavigationController currentChapterForAnalytics]
  -[DSNavigationController setCurrentChapterForAnalytics:]
  -[DSNavigationController networkErrorController]
  -[DSNavigationController setNetworkErrorController:]
  -[DSNavigationController isShowingNetworkError]
  -[DSNavigationController setIsShowingNetworkError:]
  -[DSNavigationController panesRequiringNetwork]
  -[DSNavigationController setPanesRequiringNetwork:]
  -[DSNavigationController connectionErrorNavigation]
  -[DSNavigationController setConnectionErrorNavigation:]
  -[DSNavigationController cachedPanes]
  -[DSNavigationController setCachedPanes:]
  -[DSNavigationController obfuscationWindow]
  -[DSNavigationController setObfuscationWindow:]
  -[DSNavigationController setUnsharedResourcesBySource:]
  -[DSNavigationController setUnsharedPeople:]
  -[DSNavigationController setUnsharedApps:]
  -[DSNavigationController setUnsharedPermissions:]


DSTableWelcomeController : OBTableWelcomeController <UISearchBarDelegate, UISearchResultsUpdating, UISearchControllerDelegate, UITableViewDelegate, UITableViewDataSource>
 @property  BOOL isSpinnerActive
 @property  UITapGestureRecognizer *tapGesture
 @property  OBBoldTrayButton *boldButton
 @property  OBLinkTrayButton *linkButton
 @property  UISearchController *searchController
 @property  BOOL shouldShowSearchBar
 @property  BOOL isFiltering
 @property  UIActivityIndicatorView *spinner
 @property  UIBarButtonItem *quickExitButton
 @property  BOOL isShowingNoSharingView
 @property  BOOL isShowingNoResultsView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DSTableWelcomeController hideKeyboard]
  -[DSTableWelcomeController isFiltering]
  -[DSTableWelcomeController tableView:heightForRowAtIndexPath:]
  -[DSTableWelcomeController tableView:cellForRowAtIndexPath:]
  -[DSTableWelcomeController tableView:numberOfRowsInSection:]
  -[DSTableWelcomeController tableView:estimatedHeightForRowAtIndexPath:]
  -[DSTableWelcomeController tableView:viewForHeaderInSection:]
  -[DSTableWelcomeController tableView:willDisplayCell:forRowAtIndexPath:]
  -[DSTableWelcomeController tapGesture]
  -[DSTableWelcomeController searchController]
  -[DSTableWelcomeController spinner]
  -[DSTableWelcomeController .cxx_destruct]
  -[DSTableWelcomeController viewDidLoad]
  -[DSTableWelcomeController viewWillAppear:]
  -[DSTableWelcomeController viewDidLayoutSubviews]
  -[DSTableWelcomeController setSearchController:]
  -[DSTableWelcomeController updateSearchResultsForSearchController:]
  -[DSTableWelcomeController willDismissSearchController:]
  -[DSTableWelcomeController willPresentSearchController:]
  -[DSTableWelcomeController scrollViewWillBeginDragging:]
  -[DSTableWelcomeController tableView:editingStyleForRowAtIndexPath:]
  -[DSTableWelcomeController linkButton]
  -[DSTableWelcomeController setupTableView]
  -[DSTableWelcomeController setupSearchBar]
  -[DSTableWelcomeController boldButton]
  -[DSTableWelcomeController setSpinner:]
  -[DSTableWelcomeController setBoldButton:]
  -[DSTableWelcomeController setLinkButton:]
  -[DSTableWelcomeController hideNoResultsView]
  -[DSTableWelcomeController shouldShowSearchBar]
  -[DSTableWelcomeController setShouldShowSearchBar:]
  -[DSTableWelcomeController setTapGesture:]
  -[DSTableWelcomeController initWithTitle:detailText:icon:shouldShowSearchBar:]
  -[DSTableWelcomeController startContentSpinner]
  -[DSTableWelcomeController stopContentSpinner]
  -[DSTableWelcomeController isSearchBarEmpty]
  -[DSTableWelcomeController isKeyboardActive]
  -[DSTableWelcomeController presentErrorAlertWithTitle:message:continueHandler:tryAgainHandler:]
  -[DSTableWelcomeController presentErrorAlertController:]
  -[DSTableWelcomeController presentErrorAlertController:okHandler:]
  -[DSTableWelcomeController addBorderedIcon:]
  -[DSTableWelcomeController showNoSharingViewWithText:image:]
  -[DSTableWelcomeController hideNoSharingView]
  -[DSTableWelcomeController removeLinkButton]
  -[DSTableWelcomeController showNoResultsViewWithSearchText:]
  -[DSTableWelcomeController hideButtonsIfSearching]
  -[DSTableWelcomeController setIsFiltering:]
  -[DSTableWelcomeController quickExitButton]
  -[DSTableWelcomeController setQuickExitButton:]
  -[DSTableWelcomeController isShowingNoSharingView]
  -[DSTableWelcomeController setIsShowingNoSharingView:]
  -[DSTableWelcomeController isShowingNoResultsView]
  -[DSTableWelcomeController setIsShowingNoResultsView:]
  -[DSTableWelcomeController isSpinnerActive]
  -[DSTableWelcomeController setIsSpinnerActive:]


DSEmergencySOSController : DSTableWelcomeController <UITableViewDelegate, UITableViewDataSource, HKMedicalIDEmergencyContactFlowDelegate, DSController>
 @property  HKHealthStore *healthStore
 @property  HKMedicalIDStore *medicalIDStore
 @property  _HKMedicalIDData *medicalIDData
 @property  NSArray *emergencyContacts
 @property  _HKEmergencyContact *selectedEmergencyContact
 @property  HKMedicalIDEmergencyContactFlow *contactFlow
 @property  BOOL hasRetriedEmergencyContactFetch
 @property  DSAppSharing *appSharing
 @property  NSString *kappaApprovedAppID
 @property  <DSNavigationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DSEmergencySOSController tableView:cellForRowAtIndexPath:]
  -[DSEmergencySOSController tableView:numberOfRowsInSection:]
  -[DSEmergencySOSController tableView:shouldHighlightRowAtIndexPath:]
  -[DSEmergencySOSController numberOfSectionsInTableView:]
  -[DSEmergencySOSController setMedicalIDStore:]
  -[DSEmergencySOSController healthStore]
  -[DSEmergencySOSController setDelegate:]
  -[DSEmergencySOSController setHealthStore:]
  -[DSEmergencySOSController tableView:didSelectRowAtIndexPath:]
  -[DSEmergencySOSController delegate]
  -[DSEmergencySOSController tableView:titleForHeaderInSection:]
  -[DSEmergencySOSController setMedicalIDData:]
  -[DSEmergencySOSController .cxx_destruct]
  -[DSEmergencySOSController viewDidLoad]
  -[DSEmergencySOSController medicalIDData]
  -[DSEmergencySOSController medicalIDStore]
  -[DSEmergencySOSController init]
  -[DSEmergencySOSController tableView:titleForFooterInSection:]
  -[DSEmergencySOSController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[DSEmergencySOSController tableView:editingStyleForRowAtIndexPath:]
  -[DSEmergencySOSController setEmergencyContacts:]
  -[DSEmergencySOSController emergencyContacts]
  -[DSEmergencySOSController emergencyContactFlow:didSelectContact:]
  -[DSEmergencySOSController emergencyContactFlowDidCancel:]
  -[DSEmergencySOSController appSharing]
  -[DSEmergencySOSController setAppSharing:]
  -[DSEmergencySOSController updateKappaBundleID]
  -[DSEmergencySOSController maybeRetryDueToError:withReason:]
  -[DSEmergencySOSController gatherEmergencyContacts]
  -[DSEmergencySOSController _showMaxContactsAlert]
  -[DSEmergencySOSController removeEmergencyContact:]
  -[DSEmergencySOSController chooseNewEmergencyContact]
  -[DSEmergencySOSController revokeKappaPermission]
  -[DSEmergencySOSController hasAppWithKappaApproved]
  -[DSEmergencySOSController selectedEmergencyContact]
  -[DSEmergencySOSController setSelectedEmergencyContact:]
  -[DSEmergencySOSController contactFlow]
  -[DSEmergencySOSController setContactFlow:]
  -[DSEmergencySOSController hasRetriedEmergencyContactFetch]
  -[DSEmergencySOSController setHasRetriedEmergencyContactFetch:]
  -[DSEmergencySOSController kappaApprovedAppID]
  -[DSEmergencySOSController setKappaApprovedAppID:]


DSAppPermissionsDescriptor(DigitalSeparationUI)
	// class methods
	+[DSAppPermissionsDescriptor(DigitalSeparationUI) iconAppBundleForPermission:]
	+[DSAppPermissionsDescriptor(DigitalSeparationUI) iconAssetNameForPermission:]
	+[DSAppPermissionsDescriptor(DigitalSeparationUI) iconForPermission:tableFormat:]
	+[DSAppPermissionsDescriptor(DigitalSeparationUI) stringKeyForPermission:]

DSSourceDescriptor(DigitalSeparationUI)
	// instance methods
	-[DSSourceDescriptor(DigitalSeparationUI) iconForDetail]
	-[DSSourceDescriptor(DigitalSeparationUI) iconForTable]

DSPublicSharingType(DigitalSeparationUI)
	// instance methods
	-[DSPublicSharingType(DigitalSeparationUI) iconForDetail]
	-[DSPublicSharingType(DigitalSeparationUI) iconForTable]

DSSharingType(DigitalSeparationUI)
	// instance methods
	-[DSSharingType(DigitalSeparationUI) iconForDetail]
	-[DSSharingType(DigitalSeparationUI) iconForTable]

UIAlertController(DigitalSeparation)
	// class methods
	+[UIAlertController(DigitalSeparation) ds_alertControllerWithStopSharingError:]
	+[UIAlertController(DigitalSeparation) ds_alertControllerWithFetchSharingError:]
	+[UIAlertController(DigitalSeparation) ds_alertControllerWithAppDeletionError:]
	+[UIAlertController(DigitalSeparation) ds_alertControllerWithStopPermissionSharingError:]

DSSharingPerson(DigitalSeparationUI)
	// instance methods
	-[DSSharingPerson(DigitalSeparationUI) iconForDetail]
	-[DSSharingPerson(DigitalSeparationUI) iconForTable]
	-[DSSharingPerson(DigitalSeparationUI) iconWithSize:]

01 00 0e00 /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI: AAUIAuthKitPasswordChangeHook 
01 00 0e00 /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI: AAUIGrandSlamRemoteUIPresenter 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0800 /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/AppleIDSSOAuthentication: AIDAAccountManager 
01 00 0b00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 0b00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKURLBag 
01 00 1e00 /System/Library/PrivateFrameworks/SetupAssistantUI.framework/SetupAssistantUI: BFFComplexPasscodeInputView 
01 00 1e00 /System/Library/PrivateFrameworks/SetupAssistantUI.framework/SetupAssistantUI: BFFPasscodeView 
01 00 1e00 /System/Library/PrivateFrameworks/SetupAssistantUI.framework/SetupAssistantUI: BFFSimplePasscodeInputView 
01 00 1a00 /System/Library/PrivateFrameworks/BiometricKit.framework/BiometricKit: BKDevice 
01 00 1a00 /System/Library/PrivateFrameworks/BiometricKit.framework/BiometricKit: BKDeviceDescriptor 
01 00 1400 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMDiscoverabilitySignalEvent 
01 00 1400 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMStreams 
01 00 1a00 /System/Library/PrivateFrameworks/BiometricKit.framework/BiometricKit: BiometricKit 
01 00 1600 /System/Library/PrivateFrameworks/CoreCDPUI.framework/CoreCDPUI: CDPUIDeviceToDeviceEncryptionFlowContext 
01 00 1600 /System/Library/PrivateFrameworks/CoreCDPUI.framework/CoreCDPUI: CDPUIDeviceToDeviceEncryptionHelper 
01 00 0100 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLFindMyAccessoryManager 
01 00 1f00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRenderer 
01 00 1f00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRendererSettings 
01 00 1f00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRenderingScope 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 1f00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNContactPickerViewController 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactProperty 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutableContact 
01 00 1100 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIContactPropertyRanker 
01 00 0400 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPNetworkObserver 
01 00 1000 /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation: DSAppPermissionsDescriptor 
01 00 1000 /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation: DSAppSharing 
01 00 1000 /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation: DSError 
01 00 1000 /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation: DSPublicSharingType 
01 00 1000 /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation: DSRestrictionStore 
01 00 1000 /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation: DSSharingPermissions 
01 00 1000 /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation: DSSharingPerson 
01 00 1000 /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation: DSSharingType 
01 00 1000 /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation: DSSourceDescriptor 
01 00 1000 /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation: DSSourceRepository 
01 00 1000 /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation: DSTCCStorePassThrough 
01 00 1000 /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation: DSUtilities 
01 00 0200 /System/Library/PrivateFrameworks/FamilyCircle.framework/FamilyCircle: FAFetchFamilyCircleRequest 
01 00 2200 /System/Library/PrivateFrameworks/FMF.framework/FMF: FMFHandle 
01 00 2200 /System/Library/PrivateFrameworks/FMF.framework/FMF: FMFSession 
01 00 2300 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKHealthStore 
01 00 1900 /System/Library/PrivateFrameworks/HealthUI.framework/HealthUI: HKMedicalIDEmergencyContactFlow 
01 00 2300 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKMedicalIDStore 
01 00 0a00 /System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication: LAContext 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 2100 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2400 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 2400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2400 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 2400 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2400 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 2400 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 2400 /System/Library/Frameworks/Foundation.framework/Foundation: NSListFormatter 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 2400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2400 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1500 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBBoldTrayButton 
01 00 1500 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBHeaderAccessoryButton 
01 00 1500 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBLinkTrayButton 
01 00 1500 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBNavigationController 
01 00 1500 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBTableWelcomeController 
01 00 1500 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBTextWelcomeController 
01 00 1500 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBWelcomeController 
01 00 1700 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PKBiometrics 
01 00 0300 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentRegistrationUtilities 
01 00 0300 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentWebService 
01 00 1700 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSBiometricIdentity 
01 00 1700 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSKeychainSyncManager 
01 00 0f00 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFSafariViewController 
01 00 0f00 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFSafariViewControllerConfiguration 
01 00 1300 /System/Library/PrivateFrameworks/SOS.framework/SOS: SOSUtilities 
01 00 1c00 /System/Library/PrivateFrameworks/SPOwner.framework/SPOwner: SPBeaconManager 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIContentUnavailableConfiguration 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardInputModeController 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIListContentConfiguration 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIProgressView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 2300 /System/Library/Frameworks/HealthKit.framework/HealthKit: _HKMedicalIDData 
