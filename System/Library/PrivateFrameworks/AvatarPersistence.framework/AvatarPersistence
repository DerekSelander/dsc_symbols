|| __DATA.__data _AVTAnyTransactionHasAvatarChange
|| __DATA.__data _AVTAnyTransactionHasChangesFromAuthor
|| __DATA.__data _AVTAnyTransactionHasChangesFromOtherThanAuthor
|| __DATA.__data _AVTAnyTransactionHasChangesFromOtherThanBundleID
|| __DATA.__data _AVTIsPersistentChangeOfInterest
|| __DATA.__objc_data _OBJC_CLASS_$_AVTArchiverBasedDomain
|| __DATA.__objc_data _OBJC_CLASS_$_AVTArchiverBasedStoreBackend
|| __DATA.__objc_data _OBJC_CLASS_$_AVTArchiverBasedStoreRoot
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarRecord
|| __DATA.__objc_data _OBJC_CLASS_$_AVTBackendVersion
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreDataChangeTrackerChange
|| __DATA.__objc_data _OBJC_CLASS_$_AVTDisabledMirroringHandler
|| __DATA.__objc_data _OBJC_CLASS_$_AVTObservableAvatarStore
|| __DATA.__objc_data _OBJC_CLASS_$_AVTPAvatarRecordDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerFetchRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStoreBackendMigrator
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStubbedStoreBackend
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTArchiverBasedDomain
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTArchiverBasedStoreBackend
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTArchiverBasedStoreRoot
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTBackendVersion
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreDataChangeTrackerChange
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTDisabledMirroringHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTObservableAvatarStore
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTPAvatarRecordDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerFetchRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStoreBackendMigrator
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStubbedStoreBackend
|| __DATA_CONST.__const _AVTAvatarRecordAttributeNameAvatarData
|| __DATA_CONST.__const _AVTAvatarRecordAttributeNameIdentifier
|| __DATA_CONST.__const _AVTAvatarRecordAttributeNameOrderDate
|| __DATA_CONST.__const _AVTAvatarRecordEntityName
|| __DATA_CONST.__const _AVTAvatarStoreDidChangeNotification
|| __DATA_CONST.__const _AVTAvatarStoreDomainFaceTime
|| __DATA_CONST.__const _AVTAvatarStoreDomainFunCam
|| __DATA_CONST.__const _AVTAvatarStoreDomainInternal
|| __DATA_CONST.__const _AVTAvatarStoreDomainMessages
|| __DATA_CONST.__const _AVTAvatarStoreNotificationChangedRecordsKey
|| __DATA_CONST.__const _AVTAvatarUIErrorDomain
|| __DATA_CONST.__const _AVTAvatarUIMultipleErrorsKey
|| __DATA_CONST.__const _AVTCoreDataPersistentStoreTransactionAuthorAvatarUI
|| __DATA_CONST.__const _AVTDBFilename
|| __DATA_CONST.__const _AVTInternalSettingsBundleIDStaryu
|| __DATA_CONST.__const _AVTRecentStickersChangedExternallyNotification
|| __DATA_CONST.__const _AVTSBIconVisibility
|| __DATA_CONST.__const _AVTTypeMismatchExceptionName
|| __DATA_CONST.__const _AVTUIGlobalPreferencesAdaptativeFrameRate
|| __DATA_CONST.__const _AVTUIGlobalPreferencesAlwaysShowPaddleView
|| __DATA_CONST.__const _AVTUIGlobalPreferencesAlwaysShowSplashScreen
|| __DATA_CONST.__const _AVTUIGlobalPreferencesAlwaysShowStickerRecentsSplashScreen
|| __DATA_CONST.__const _AVTUIGlobalPreferencesAvatarPreLoadOnLaunch
|| __DATA_CONST.__const _AVTUIGlobalPreferencesDisableDeleteConfirmation
|| __DATA_CONST.__const _AVTUIGlobalPreferencesDisableEditAfterDuplicate
|| __DATA_CONST.__const _AVTUIGlobalPreferencesEditorGroupName
|| __DATA_CONST.__const _AVTUIGlobalPreferencesEditorShowAssetsName
|| __DATA_CONST.__const _AVTUIGlobalPreferencesFlushStickersCache
|| __DATA_CONST.__const _AVTUIGlobalPreferencesFlushThumbnailCache
|| __DATA_CONST.__const _AVTUIGlobalPreferencesForceCameraDisclosures
|| __DATA_CONST.__const _AVTUIGlobalPreferencesForceNoMemojiStickerRecentsSplashScreen
|| __DATA_CONST.__const _AVTUIGlobalPreferencesGroupDialUsesMasking
|| __DATA_CONST.__const _AVTUIGlobalPreferencesHasDisplayedAnimojiCameraDisclosureSplashScreen
|| __DATA_CONST.__const _AVTUIGlobalPreferencesHasDisplayedAnimojiSplashScreen
|| __DATA_CONST.__const _AVTUIGlobalPreferencesHasDisplayedCameraDisclosureSplashScreen
|| __DATA_CONST.__const _AVTUIGlobalPreferencesHasDisplayedCameraEffectsCameraDisclosureSplashScreen
|| __DATA_CONST.__const _AVTUIGlobalPreferencesHasDisplayedCameraEffectsSplashScreen
|| __DATA_CONST.__const _AVTUIGlobalPreferencesHasDisplayedCategoriesDiscoverability
|| __DATA_CONST.__const _AVTUIGlobalPreferencesHasDisplayedPaddleView
|| __DATA_CONST.__const _AVTUIGlobalPreferencesHasDisplayedSplashScreen
|| __DATA_CONST.__const _AVTUIGlobalPreferencesLastCacheVersion
|| __DATA_CONST.__const _AVTUIGlobalPreferencesMemojiClassicDisclosureWarning
|| __DATA_CONST.__const _AVTUIGlobalPreferencesRestrictMaxAvatarCount
|| __DATA_CONST.__const _AVTUIGlobalPreferencesShowAssetsWarning
|| __DATA_CONST.__const _AVTUIGlobalPreferencesShowPerfHUD
|| __DATA_CONST.__const _AVTUIGlobalPreferencesShowPrereleaseStickerLabel
|| __DATA_CONST.__const _AVTUIGlobalPreferencesShowPrereleaseStickerPack
|| __DATA_CONST.__const _AVTUIGlobalPreferencesShowTrackingLostReticle
|| __DATA_CONST.__const _AVTUIGlobalPreferencesStickerRecentsDisclosureWarning
|| __DATA_CONST.__const _AVTUIGlobalPreferencesStickerRecentsMigrationVersion
|| __DATA_CONST.__const _AVTUIGlobalPreferencesStickerRecentsSplashScreenVersion
|| __DATA_CONST.__const _AVTUIGlobalPreferencesStickersCaching
|| __DATA_CONST.__const _AVTUIGlobalPreferencesStickersDisclosureWarning
|| __DATA_CONST.__const _AVTUIGlobalPreferencesStickersHEICSSequence
|| __DATA_CONST.__const _AVTUIGlobalPreferencesStickersLastSelected
|| __DATA_CONST.__const _AVTUIGlobalPreferencesSyncEnabled
|| __DATA_CONST.__const _AVTUIGlobalPreferencesSyncExportRequired
|| __DATA_CONST.__const _AVTUIGlobalPreferencesSyncImportDate
|| __DATA_CONST.__const _AVTUIGlobalPreferencesSyncPreserveContentOnAccountChange
|| __DATA_CONST.__const _AVTUIGlobalPreferencesThumbnailCaching
|| __DATA_CONST.__const _AVTUIGlobalPreferencesUseLocalEditorModel
|| __DATA_CONST.__const _AVTUIGlobalPreferencesUseTestCloudKitContainer
|| __DATA_CONST.__const _AVTUIGlobalPreferencesWipeCloudKitContainer
|| __DATA_CONST.__const _AVTUIGlobalPreferencesWipeDatabase
|| __DATA_CONST.__const _AVTVersionFilename
|| __DATA_CONST.__const _kAVTFrequencyCounterKey
|| __DATA_CONST.__const _kAVTStickersArrayKey
|| __DATA_CONST.__const _kAVTStickersUserDefaultsDomain
|| __DATA_CONST.__const _kAVTStickersUserDefaultsKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTArchiverBasedStoreMigratableSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTArchiverBasedStorePersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarManagedRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarManagedRecordTransformer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarPuppetRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarRecordRendering
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarRecordSerializer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarStoreServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarsDaemon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarsDaemonClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarsDaemonServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTBackgroundActivitySchedulerFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTBlockScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTCoreDataChangeTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTCoreDataCloudKitMirroringConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTCoreDataCloudKitMirroringHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTCoreDataPersistentStoreConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTCoreDataRemoteChangesObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTCoreDataStoreBackend
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTCoreDataStoreMaintenance
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTCoreDataStoreServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTCoreEnvironment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTError
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTEventCoalescer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTPAvatarStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTPassthroughEventCoalescer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTPuppetStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTPushNotificationsConnectionFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTPushNotificationsSupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTSerializedAvatarRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTSideCoreDataStoreMigratableSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTStickerChangeObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTStickerRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTStickerUserDefaultsBackend
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTSyncSchedulingAuthority
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTUILogger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__AVTCoreDataPersistentStoreLocalConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__AVTCoreDataPersistentStoreRemoteConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTArchiverBasedStoreMigratableSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTArchiverBasedStorePersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarManagedRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarManagedRecordTransformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarPuppetRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarRecordRendering
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarRecordSerializer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarStoreServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarsDaemon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarsDaemonClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarsDaemonServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTBackgroundActivitySchedulerFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTBlockScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTCoreDataChangeTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTCoreDataCloudKitMirroringConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTCoreDataCloudKitMirroringHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTCoreDataPersistentStoreConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTCoreDataRemoteChangesObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTCoreDataStoreBackend
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTCoreDataStoreMaintenance
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTCoreDataStoreServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTCoreEnvironment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTError
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTEventCoalescer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTPAvatarStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTPassthroughEventCoalescer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTPuppetStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTPushNotificationsConnectionFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTPushNotificationsSupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTSerializedAvatarRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTSideCoreDataStoreMigratableSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTStickerChangeObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTStickerRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTStickerUserDefaultsBackend
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTSyncSchedulingAuthority
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTUILogger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__AVTCoreDataPersistentStoreLocalConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__AVTCoreDataPersistentStoreRemoteConfiguration
|| __TEXT.__const _AVTVersion0_1
|| __TEXT.__const _AVTVersion0_2
|| __TEXT.__const _AVTVersion0_3
|| __TEXT.__const _AVTVersion0_4
|| __TEXT.__const _AVTVersion0_5
|| __TEXT.__const _AVTVersion0_6
|| __TEXT.__const _AVTVersionCurrent
|| __TEXT.__const _AvatarPersistenceVersionNumber
|| __TEXT.__const _AvatarPersistenceVersionString
|| __TEXT.__text _AVTAvatarRecordChangeEqualToChange
|| __TEXT.__text _AVTAvatarRecordChangeHash
|| __TEXT.__text _AVTDefaultFileProtectionDataWritingOptions
|| __TEXT.__text _AVTDefaultFileProtectionType
|| __TEXT.__text _AVTIsRunningAsSetupUser
|| __TEXT.__text _AVTUIAdaptativeFrameRate
|| __TEXT.__text _AVTUIAlwaysShowPaddleView
|| __TEXT.__text _AVTUIAlwaysShowPaddleView_once
|| __TEXT.__text _AVTUIAlwaysShowRecentStickersSplashScreen
|| __TEXT.__text _AVTUIAlwaysShowRecentStickersSplashScreen_once
|| __TEXT.__text _AVTUIAlwaysShowSplashScreen
|| __TEXT.__text _AVTUIAlwaysShowSplashScreen_once
|| __TEXT.__text _AVTUIAvatarPreLoadOnLaunch
|| __TEXT.__text _AVTUIDisableDeleteConfirmation
|| __TEXT.__text _AVTUIDisableDeleteConfirmation_once
|| __TEXT.__text _AVTUIDisableEditAfterDuplicate
|| __TEXT.__text _AVTUIDisableEditAfterDuplicate_once
|| __TEXT.__text _AVTUIEditorMostRecentGroupName
|| __TEXT.__text _AVTUIEditorSetMostRecentGroupName
|| __TEXT.__text _AVTUIEditorShowAssetsName
|| __TEXT.__text _AVTUIEditorShowAssetsName_once
|| __TEXT.__text _AVTUIFlushCaches
|| __TEXT.__text _AVTUIFlushStickersCache
|| __TEXT.__text _AVTUIFlushThumbnailCache
|| __TEXT.__text _AVTUIFlushThumbnailCache_once
|| __TEXT.__text _AVTUIForceCameraDisclosures
|| __TEXT.__text _AVTUIForceCameraDisclosures_once
|| __TEXT.__text _AVTUIForceNoMemojiRecentStickersSplashScreen
|| __TEXT.__text _AVTUIForceNoMemojiRecentStickersSplashScreen_once
|| __TEXT.__text _AVTUIGroupDialUsesMasking
|| __TEXT.__text _AVTUIGroupDialUsesMasking_once
|| __TEXT.__text _AVTUIHasDisplayedAnimojiCameraDisclosureSplashScreen
|| __TEXT.__text _AVTUIHasDisplayedAnimojiSplashScreen
|| __TEXT.__text _AVTUIHasDisplayedAnimojiSplashScreen_once
|| __TEXT.__text _AVTUIHasDisplayedCameraDisclosureSplashScreen
|| __TEXT.__text _AVTUIHasDisplayedCameraEffectsCameraDisclosureSplashScreen
|| __TEXT.__text _AVTUIHasDisplayedCameraEffectsSplashScreen
|| __TEXT.__text _AVTUIHasDisplayedCameraEffectsSplashScreen_once
|| __TEXT.__text _AVTUIHasDisplayedCategoriesDiscoverability
|| __TEXT.__text _AVTUIHasDisplayedPaddleView
|| __TEXT.__text _AVTUIHasDisplayedPaddleView_once
|| __TEXT.__text _AVTUIHasDisplayedSplashScreen
|| __TEXT.__text _AVTUIHasDisplayedSplashScreen_once
|| __TEXT.__text _AVTUIHasShownStickerRecentsSplashView
|| __TEXT.__text _AVTUIIsAvatarSyncEnabled
|| __TEXT.__text _AVTUIIsAvatarUIEnabled
|| __TEXT.__text _AVTUIIsAvatarUIEnabled_once
|| __TEXT.__text _AVTUILastCacheVersion
|| __TEXT.__text _AVTUIMemojiClassicShowDisclosureWarning
|| __TEXT.__text _AVTUIMemojiClassicShowDisclosureWarning_once
|| __TEXT.__text _AVTUIPreserveContentOnAccountChange
|| __TEXT.__text _AVTUIResetFirstTimeExperience
|| __TEXT.__text _AVTUIResetInternalSettings
|| __TEXT.__text _AVTUIRestrictMaximumAvatarCount
|| __TEXT.__text _AVTUIRestrictMaximumAvatarCount_once
|| __TEXT.__text _AVTUISetAdaptativeFrameRate
|| __TEXT.__text _AVTUISetAlwaysShowPaddleView
|| __TEXT.__text _AVTUISetAlwaysShowRecentStickersSplashScreen
|| __TEXT.__text _AVTUISetAlwaysShowSplashScreen
|| __TEXT.__text _AVTUISetAvatarPreLoadOnLaunch
|| __TEXT.__text _AVTUISetAvatarSyncEnabled
|| __TEXT.__text _AVTUISetDisableDeleteConfirmation
|| __TEXT.__text _AVTUISetDisableEditAfterDuplicate
|| __TEXT.__text _AVTUISetEditorShowAssetsName
|| __TEXT.__text _AVTUISetFlushStickersCache
|| __TEXT.__text _AVTUISetFlushThumbnailCache
|| __TEXT.__text _AVTUISetForceCameraDisclosures
|| __TEXT.__text _AVTUISetForceNoMemojiRecentStickersSplashScreen
|| __TEXT.__text _AVTUISetGroupDialUsesMasking
|| __TEXT.__text _AVTUISetHasDisplayedAnimojiCameraDisclosureSplashScreen
|| __TEXT.__text _AVTUISetHasDisplayedAnimojiSplashScreen
|| __TEXT.__text _AVTUISetHasDisplayedCameraDisclosureSplashScreen
|| __TEXT.__text _AVTUISetHasDisplayedCameraEffectsCameraDisclosureSplashScreen
|| __TEXT.__text _AVTUISetHasDisplayedCameraEffectsSplashScreen
|| __TEXT.__text _AVTUISetHasDisplayedCategoriesDiscoverability
|| __TEXT.__text _AVTUISetHasDisplayedPaddleView
|| __TEXT.__text _AVTUISetHasDisplayedSplashScreen
|| __TEXT.__text _AVTUISetHasShownStickerRecentsSplashView
|| __TEXT.__text _AVTUISetLastCacheVersion
|| __TEXT.__text _AVTUISetMemojiClassicShowDisclosureWarning
|| __TEXT.__text _AVTUISetPreserveContentOnAccountChange
|| __TEXT.__text _AVTUISetRestrictMaximumAvatarCount
|| __TEXT.__text _AVTUISetShowAssetsWarning
|| __TEXT.__text _AVTUISetShowPerfHUD
|| __TEXT.__text _AVTUISetShowPrereleaseStickerLabel
|| __TEXT.__text _AVTUISetShowPrereleaseStickerPack
|| __TEXT.__text _AVTUISetShowTrackingLostReticle
|| __TEXT.__text _AVTUISetStickerRecentsMigrationVersion
|| __TEXT.__text _AVTUISetStickerRecentsShowDisclosureWarning
|| __TEXT.__text _AVTUISetStickersCaching
|| __TEXT.__text _AVTUISetStickersLastSelected
|| __TEXT.__text _AVTUISetStickersShowDisclosureWarning
|| __TEXT.__text _AVTUISetStickersUseHEICSSequence
|| __TEXT.__text _AVTUISetThumbnailCaching
|| __TEXT.__text _AVTUISetUseLocalEditorModel
|| __TEXT.__text _AVTUISetUseTestCloudKitContainer
|| __TEXT.__text _AVTUISetWipeCloudKitContainer
|| __TEXT.__text _AVTUISetWipeLocalDatabase
|| __TEXT.__text _AVTUIShowAssetsWarning
|| __TEXT.__text _AVTUIShowAssetsWarning_once
|| __TEXT.__text _AVTUIShowPerfHUD
|| __TEXT.__text _AVTUIShowPerfHUD_once
|| __TEXT.__text _AVTUIShowPrereleaseStickerLabel
|| __TEXT.__text _AVTUIShowPrereleaseStickerLabel_once
|| __TEXT.__text _AVTUIShowPrereleaseStickerPack
|| __TEXT.__text _AVTUIShowPrereleaseStickerPack_once
|| __TEXT.__text _AVTUIShowTrackingLostReticle
|| __TEXT.__text _AVTUIShowTrackingLostReticle_once
|| __TEXT.__text _AVTUIStickerRecentsMigrationVersion
|| __TEXT.__text _AVTUIStickerRecentsMigrationVersion_once
|| __TEXT.__text _AVTUIStickerRecentsShowDisclosureWarning
|| __TEXT.__text _AVTUIStickerRecentsShowDisclosureWarning_once
|| __TEXT.__text _AVTUIStickersCaching
|| __TEXT.__text _AVTUIStickersLastSelected
|| __TEXT.__text _AVTUIStickersShowDisclosureWarning
|| __TEXT.__text _AVTUIStickersShowDisclosureWarning_once
|| __TEXT.__text _AVTUIStickersUseHEICSSequence
|| __TEXT.__text _AVTUISyncExportRequired
|| __TEXT.__text _AVTUISyncSetExportRequired
|| __TEXT.__text _AVTUISyncSetSuccessfulImportDate
|| __TEXT.__text _AVTUISyncSuccessfulImportDate
|| __TEXT.__text _AVTUIThumbnailCaching
|| __TEXT.__text _AVTUIThumbnailCaching_once
|| __TEXT.__text _AVTUIUseLocalEditorModel
|| __TEXT.__text _AVTUIUseLocalEditorModel_once
|| __TEXT.__text _AVTUIUseTestCloudKitContainer
|| __TEXT.__text _AVTUIWipeCloudKitContainer
|| __TEXT.__text _AVTUIWipeLocalDatabase
|| __TEXT.__text __AVTUIBoolForInternalSettingKey
|| __TEXT.__text __AVTUIIntegerForGlobalKey
|| __TEXT.__text __AVTUIIntegerForInternalSettingsKey
|| __TEXT.__text __AVTUIPropertyListObjectForGlobalKey
|| __TEXT.__text __AVTUIPropertyListObjectForInternalSettingsKey
|| __TEXT.__text __AVTUIRemoveGlobalKey
|| __TEXT.__text __AVTUIRemoveInternalSettingsKey
|| __TEXT.__text __AVTUISetBoolForInternalSettingsKey
|| __TEXT.__text __AVTUISetIntegerForGlobalKey
|| __TEXT.__text __AVTUISetIntegerForInternalSettingsKey
|| __TEXT.__text __AVTUISetPropertyListObjectForGlobalKey
|| __TEXT.__text __AVTUISetPropertyListObjectForInternalSettingsKey
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ AvatarKit: _AVTAvatarKitSnapshotVersionNumber
__ AvatarKit: _OBJC_CLASS_$_AVTAnimoji
__ AvatarKit: _OBJC_CLASS_$_AVTAvatar
__ AvatarKit: _OBJC_CLASS_$_AVTMemoji
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKContainerOptions
__ CloudKit: _OBJC_CLASS_$_CKNotification
__ CloudKit: _OBJC_CLASS_$_CKOperationConfiguration
__ CoreData: _NSCKRecordIDAttributeName
__ CoreData: _NSCKRecordSystemFieldsAttributeName
__ CoreData: _NSCloudKitMirroringDelegateDidResetSyncNotificationName
__ CoreData: _NSCloudKitMirroringDelegateResetSyncReasonKey
__ CoreData: _NSCloudKitMirroringDelegateWillResetSyncNotificationName
__ CoreData: _NSPersistentHistoryTokenKey
__ CoreData: _NSPersistentHistoryTrackingKey
__ CoreData: _NSPersistentStoreFileProtectionKey
__ CoreData: _NSPersistentStoreRemoteChangeNotification
__ CoreData: _NSPersistentStoreRemoteChangeNotificationOptionKey
__ CoreData: _NSSQLiteStoreType
__ CoreData: _NSXPCStoreDaemonizeKey
__ CoreData: _NSXPCStorePostUpdateNotificationsKey
__ CoreData: _NSXPCStoreServiceNameKey
__ CoreData: _NSXPCStoreType
__ CoreData: _OBJC_CLASS_$_NSAttributeDescription
__ CoreData: _OBJC_CLASS_$_NSBatchDeleteRequest
__ CoreData: _OBJC_CLASS_$_NSCloudKitMirroringDelegate
__ CoreData: _OBJC_CLASS_$_NSCloudKitMirroringDelegateOptions
__ CoreData: _OBJC_CLASS_$_NSCloudKitMirroringExportRequest
__ CoreData: _OBJC_CLASS_$_NSCloudKitMirroringImportRequest
__ CoreData: _OBJC_CLASS_$_NSCloudKitMirroringResetZoneRequest
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSExpressionDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_CLASS_$_NSManagedObjectContext
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSPersistentContainer
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryChangeRequest
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryToken
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreCoordinator
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreDescription
__ CoreData: _OBJC_CLASS_$_NSQueryGenerationToken
__ CoreData: _OBJC_CLASS_$_NSXPCStoreServer
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFURLSetResourcePropertyForKey
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFPreferencesSetBackupDisabled
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFURLIsExcludedFromCloudBackupKey
__ CoreFoundation: __kCFURLIsExcludedFromUnencryptedBackupKey
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBackgroundActivityScheduler
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _os_activity_apply
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
AVTEventCoalescer : NSObject <AVTEventCoalescer>
 @property  @? eventHandler
 @property  NSString *eventLabel
 @property  <AVTUILogger> *logger
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  double delay
 @property  BOOL eventDeliveryScheduled

  // instance methods
  -[AVTEventCoalescer logger]
  -[AVTEventCoalescer delay]
  -[AVTEventCoalescer .cxx_destruct]
  -[AVTEventCoalescer setEventLabel:]
  -[AVTEventCoalescer eventLabel]
  -[AVTEventCoalescer eventHandler]
  -[AVTEventCoalescer workQueue]
  -[AVTEventCoalescer setEventHandler:]
  -[AVTEventCoalescer eventDeliveryScheduled]
  -[AVTEventCoalescer setEventDeliveryScheduled:]
  -[AVTEventCoalescer registerEventForCoalescingWithLabel:handler:]
  -[AVTEventCoalescer eventDidOccur:]
  -[AVTEventCoalescer initWithDelay:queue:logger:]


AVTPassthroughEventCoalescer : NSObject <AVTEventCoalescer>
 @property  @? handler

  // instance methods
  -[AVTPassthroughEventCoalescer .cxx_destruct]
  -[AVTPassthroughEventCoalescer setHandler:]
  -[AVTPassthroughEventCoalescer handler]
  -[AVTPassthroughEventCoalescer registerEventForCoalescingWithLabel:handler:]
  -[AVTPassthroughEventCoalescer eventDidOccur:]


AVTCoreDataStoreBackend : NSObject <AVTStoreBackend>
 @property  <AVTCoreDataPersistentStoreConfiguration> *configuration
 @property  <AVTUILogger> *logger
 @property  <AVTAvatarManagedRecordTransformer> *recordTransformer
 @property  <AVTCoreDataRemoteChangesObserver> *remoteChangesObserver
 @property  NSString *localProcessName
 @property  <AVTStoreBackendDelegate> *backendDelegate
 @property  <AVTAvatarRecordChangeTracker> *recordChangeTracker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTCoreDataStoreBackend fetchRequestCriteriaSupported:]
  +[AVTCoreDataStoreBackend cdFetchRequestForAvatarFetchRequest:recordTransformer:]
  +[AVTCoreDataStoreBackend cdFetchRequestWithPredicate:fetchLimit:]

  // instance methods
  -[AVTCoreDataStoreBackend logger]
  -[AVTCoreDataStoreBackend configuration]
  -[AVTCoreDataStoreBackend .cxx_destruct]
  -[AVTCoreDataStoreBackend avatarsForFetchRequest:error:]
  -[AVTCoreDataStoreBackend newManagedObjectContext]
  -[AVTCoreDataStoreBackend canCreateAvatarWithError:]
  -[AVTCoreDataStoreBackend startObservingChangesIfNeeded]
  -[AVTCoreDataStoreBackend recordTransformer]
  -[AVTCoreDataStoreBackend initWithConfiguration:environment:]
  -[AVTCoreDataStoreBackend initWithConfiguration:recordTransformer:remoteChangesObserver:localProcessName:recordChangeTracker:environment:]
  -[AVTCoreDataStoreBackend localProcessName]
  -[AVTCoreDataStoreBackend remoteChangesObserver]
  -[AVTCoreDataStoreBackend getChangedObjectIDsOfInterest:deletedIdentifiers:forTransactions:]
  -[AVTCoreDataStoreBackend recordIdentifiersForManagedObjectIDs:managedObjectContext:error:]
  -[AVTCoreDataStoreBackend contentDidChangeWithIdentifiers:]
  -[AVTCoreDataStoreBackend setupStoreIfNeeded:]
  -[AVTCoreDataStoreBackend performWorkWithManagedObjectContext:]
  -[AVTCoreDataStoreBackend saveAvatars:error:]
  -[AVTCoreDataStoreBackend nts_avatarCountWithManagedObjectContext:error:]
  -[AVTCoreDataStoreBackend nts_saveManagedObjectContext:error:]
  -[AVTCoreDataStoreBackend backendDelegate]
  -[AVTCoreDataStoreBackend saveAvatar:error:]
  -[AVTCoreDataStoreBackend deleteAvatarWithIdentifier:error:]
  -[AVTCoreDataStoreBackend duplicateAvatarRecord:error:]
  -[AVTCoreDataStoreBackend setBackendDelegate:]
  -[AVTCoreDataStoreBackend recordChangeTracker]


AVTPAvatarRecordDataSource : NSObject <AVTAvatarStoreDelegate, AVTAvatarRecordDataSourceInternal, AVTAvatarRecordDataSource>
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  AVTPAvatarStore *underlyingStore
 @property  AVTObservableAvatarStore *backingStore
 @property  AVTAvatarFetchRequest *fetchRequest
 @property  NSMutableArray *nts_recordStorage
 @property  <AVTUILogger> *logger
 @property  NSNotificationCenter *notificationCenter
 @property  NSPointerArray *nts_observers
 @property  <NSObject> *nts_changeNotificationObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTPAvatarRecordDataSource defaultUIDataSourceWithDomainIdentifier:]
  +[AVTPAvatarRecordDataSource loadRecordsWithStore:request:logger:]
  +[AVTPAvatarRecordDataSource sortedRecordsEditableFirstReverseOrder:]
  +[AVTPAvatarRecordDataSource indexForInsertingRecord:inRecords:]
  +[AVTPAvatarRecordDataSource indexForInsertingDuplicateRecord:original:inRecords:]

  // instance methods
  -[AVTPAvatarRecordDataSource notificationCenter]
  -[AVTPAvatarRecordDataSource logger]
  -[AVTPAvatarRecordDataSource backingStore]
  -[AVTPAvatarRecordDataSource recordStore]
  -[AVTPAvatarRecordDataSource .cxx_destruct]
  -[AVTPAvatarRecordDataSource callbackQueue]
  -[AVTPAvatarRecordDataSource fetchRequest]
  -[AVTPAvatarRecordDataSource addObserver:]
  -[AVTPAvatarRecordDataSource underlyingStore]
  -[AVTPAvatarRecordDataSource addPriorityObserver:]
  -[AVTPAvatarRecordDataSource dealloc]
  -[AVTPAvatarRecordDataSource removeObserver:]
  -[AVTPAvatarRecordDataSource internalRecordStore]
  -[AVTPAvatarRecordDataSource recordAtIndex:]
  -[AVTPAvatarRecordDataSource numberOfRecords]
  -[AVTPAvatarRecordDataSource indexOfRecordPassingTest:]
  -[AVTPAvatarRecordDataSource indexesOfRecordsPassingTest:]
  -[AVTPAvatarRecordDataSource indexSetForEditableRecords]
  -[AVTPAvatarRecordDataSource initWithRecordStore:fetchRequest:environment:]
  -[AVTPAvatarRecordDataSource flushRecordsForEnteringBackground]
  -[AVTPAvatarRecordDataSource initWithRecordStore:fetchRequest:]
  -[AVTPAvatarRecordDataSource initWithRecordStore:fetchRequest:callbackQueue:environment:]
  -[AVTPAvatarRecordDataSource initWithRecordStore:fetchRequest:callbackQueue:logger:notificationCenter:]
  -[AVTPAvatarRecordDataSource setNts_recordStorage:]
  -[AVTPAvatarRecordDataSource nts_changeNotificationObserver]
  -[AVTPAvatarRecordDataSource nts_recordStorage]
  -[AVTPAvatarRecordDataSource avatarStoreDidChange:]
  -[AVTPAvatarRecordDataSource setNts_changeNotificationObserver:]
  -[AVTPAvatarRecordDataSource areRecordsLoaded]
  -[AVTPAvatarRecordDataSource nts_observers]
  -[AVTPAvatarRecordDataSource performObserversWork:]
  -[AVTPAvatarRecordDataSource enumerateObserversRespondingToSelector:withBlock:]
  -[AVTPAvatarRecordDataSource performSyncWorkWithRecords:]
  -[AVTPAvatarRecordDataSource store:didSaveAvatar:postCompletionHandler:]
  -[AVTPAvatarRecordDataSource store:didDeleteAvatarWithIdentifier:postCompletionHandler:]
  -[AVTPAvatarRecordDataSource store:didCreateDuplicateAvatar:forOriginal:postCompletionHandler:]
  -[AVTPAvatarRecordDataSource didRecieveAvatarChangeDistributedNotification:]


AVTAvatarRecordRendering : NSObject
  // class methods
  +[AVTAvatarRecordRendering avatarForRecord:]
  +[AVTAvatarRecordRendering preloadAllAvatarsWithStore:completionHandler:]
  +[AVTAvatarRecordRendering memojiForRecord:usageIntent:]
  +[AVTAvatarRecordRendering avatarForRecord:usageIntent:]
  +[AVTAvatarRecordRendering _castRecord:andDoRecordHandlingBlock:puppetHandlingBlock:]
  +[AVTAvatarRecordRendering preloadAvatarsWithIdentifiers:store:environment:completionHandler:]
  +[AVTAvatarRecordRendering preloadAllAvatarsWithStore:environment:completionHandler:]
  +[AVTAvatarRecordRendering preloadAvatarsWithFetchRequests:store:environment:completionHandler:]
  +[AVTAvatarRecordRendering memojiForRecord:]
  +[AVTAvatarRecordRendering preloadAvatarsWithIdentifiers:store:completionHandler:]


AVTPuppetStore : NSObject
 @property  NSArray *puppetRecords

  // class methods
  +[AVTPuppetStore createPuppetRecords]

  // instance methods
  -[AVTPuppetStore .cxx_destruct]
  -[AVTPuppetStore initWithEnvironment:]
  -[AVTPuppetStore setPuppetRecords:]
  -[AVTPuppetStore puppetRecords]
  -[AVTPuppetStore loadPuppetRecordsIfNeeded]
  -[AVTPuppetStore allAvatarPuppetsWithError:]
  -[AVTPuppetStore avatarsWithIdentifiers:error:]
  -[AVTPuppetStore allAvatarPuppetsExcluding:error:]
  -[AVTPuppetStore allPuppetRecords]
  -[AVTPuppetStore avatarPuppetsForFetchRequest:error:]


AVTStickerFetchRequest : NSObject
 @property  long long resultLimit
 @property  NSString *avatarIdentifier
 @property  NSString *stickerIdentifier
 @property  long long criteria

  // class methods
  +[AVTStickerFetchRequest requestForMostRecentStickersWithResultLimit:]
  +[AVTStickerFetchRequest requestForAllRecentStickers]
  +[AVTStickerFetchRequest requestForStickersWithAvatarIdentifier:stickerIdentifier:]

  // instance methods
  -[AVTStickerFetchRequest resultLimit]
  -[AVTStickerFetchRequest .cxx_destruct]
  -[AVTStickerFetchRequest criteria]
  -[AVTStickerFetchRequest isEqual:]
  -[AVTStickerFetchRequest avatarIdentifier]
  -[AVTStickerFetchRequest stickerIdentifier]
  -[AVTStickerFetchRequest initWithCriteria:]
  -[AVTStickerFetchRequest initWithCriteria:resultLimit:]
  -[AVTStickerFetchRequest initWithCriteria:avatarIdentifier:stickerIdentifier:]


AVTCoreDataStoreMaintenance : NSObject <AVTCoreDataStoreMaintenance>
 @property  <AVTUILogger> *logger
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <AVTEventCoalescer> *eventCoalescer
 @property  @? mocFactory

  // instance methods
  -[AVTCoreDataStoreMaintenance logger]
  -[AVTCoreDataStoreMaintenance .cxx_destruct]
  -[AVTCoreDataStoreMaintenance workQueue]
  -[AVTCoreDataStoreMaintenance storeDidChange]
  -[AVTCoreDataStoreMaintenance initWithWorkQueue:managedObjectContextFactory:eventCoalescer:logger:]
  -[AVTCoreDataStoreMaintenance runMaintenanceTasks]
  -[AVTCoreDataStoreMaintenance eventCoalescer]
  -[AVTCoreDataStoreMaintenance mocFactory]
  -[AVTCoreDataStoreMaintenance mitigateDuplicatesWithManagedObjectContext:error:]
  -[AVTCoreDataStoreMaintenance duplicatedIdentifiersInManagedObjectContext:error:]
  -[AVTCoreDataStoreMaintenance fetchDuplicatedRecordsForIdentifiers:managedObjectContext:error:]
  -[AVTCoreDataStoreMaintenance fixDuplicateRecordIdentifiers:managedObjectContext:error:]
  -[AVTCoreDataStoreMaintenance initWithEnvironment:managedObjectContextFactory:]


AVTAvatarsDaemonClient : NSObject <AVTAvatarsDaemon>
 @property  <AVTUILogger> *logger
 @property  @? connectionFactory

  // instance methods
  -[AVTAvatarsDaemonClient logger]
  -[AVTAvatarsDaemonClient checkIn]
  -[AVTAvatarsDaemonClient .cxx_destruct]
  -[AVTAvatarsDaemonClient initWithLogger:]
  -[AVTAvatarsDaemonClient connectionFactory]
  -[AVTAvatarsDaemonClient initWithConnectionFactory:logger:]
  -[AVTAvatarsDaemonClient performWorkWithConnection:]
  -[AVTAvatarsDaemonClient performWorkWithSynchronousProxy:]


AVTCoreDataCloudKitMirroringHandler : NSObject <AVTCoreDataCloudKitMirroringHandler>
 @property  <AVTUILogger> *logger
 @property  <AVTBlockScheduler> *blockScheduler
 @property  <NSObject> *willResetNotificationToken
 @property  <NSObject> *didResetNotificationToken
 @property  NSNotificationCenter *notificationCenter
 @property  BOOL exportInFlight
 @property  <AVTCoreDataCloudKitMirroringHandlerDelegate> *delegate

  // instance methods
  -[AVTCoreDataCloudKitMirroringHandler notificationCenter]
  -[AVTCoreDataCloudKitMirroringHandler logger]
  -[AVTCoreDataCloudKitMirroringHandler setNotificationCenter:]
  -[AVTCoreDataCloudKitMirroringHandler .cxx_destruct]
  -[AVTCoreDataCloudKitMirroringHandler setDelegate:]
  -[AVTCoreDataCloudKitMirroringHandler delegate]
  -[AVTCoreDataCloudKitMirroringHandler dealloc]
  -[AVTCoreDataCloudKitMirroringHandler blockScheduler]
  -[AVTCoreDataCloudKitMirroringHandler willResetNotificationToken]
  -[AVTCoreDataCloudKitMirroringHandler didResetNotificationToken]
  -[AVTCoreDataCloudKitMirroringHandler willResetSync:]
  -[AVTCoreDataCloudKitMirroringHandler setWillResetNotificationToken:]
  -[AVTCoreDataCloudKitMirroringHandler didResetSync:]
  -[AVTCoreDataCloudKitMirroringHandler setDidResetNotificationToken:]
  -[AVTCoreDataCloudKitMirroringHandler exportInFlight]
  -[AVTCoreDataCloudKitMirroringHandler setExportInFlight:]
  -[AVTCoreDataCloudKitMirroringHandler exportChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:]
  -[AVTCoreDataCloudKitMirroringHandler startObservingResetSyncWithNotificationCenter:]
  -[AVTCoreDataCloudKitMirroringHandler scheduleExportChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:]
  -[AVTCoreDataCloudKitMirroringHandler importChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:]
  -[AVTCoreDataCloudKitMirroringHandler resetZoneWithManagedObjectContext:completionHandler:]
  -[AVTCoreDataCloudKitMirroringHandler initWithLogger:blockScheduler:]


AVTDisabledMirroringHandler : NSObject <AVTCoreDataCloudKitMirroringHandler>
 @property  <AVTCoreDataCloudKitMirroringHandlerDelegate> *delegate

  // instance methods
  -[AVTDisabledMirroringHandler setDelegate:]
  -[AVTDisabledMirroringHandler delegate]
  -[AVTDisabledMirroringHandler exportChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:]
  -[AVTDisabledMirroringHandler startObservingResetSyncWithNotificationCenter:]
  -[AVTDisabledMirroringHandler scheduleExportChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:]
  -[AVTDisabledMirroringHandler importChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:]
  -[AVTDisabledMirroringHandler resetZoneWithManagedObjectContext:completionHandler:]
  -[AVTDisabledMirroringHandler scheduleImportChangesWithManagedObjectContext:workQueue:completionHandler:]


AVTAvatarPuppetRecord : NSObject <AVTAvatarRecordInternal>
 @property  NSString *puppetName
 @property  BOOL puppet
 @property  NSString *identifier
 @property  BOOL editable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarPuppetRecord supportsSecureCoding]
  +[AVTAvatarPuppetRecord matchingIdentifierTest:]

  // instance methods
  -[AVTAvatarPuppetRecord initWithCoder:]
  -[AVTAvatarPuppetRecord isEditable]
  -[AVTAvatarPuppetRecord .cxx_destruct]
  -[AVTAvatarPuppetRecord isEqual:]
  -[AVTAvatarPuppetRecord identifier]
  -[AVTAvatarPuppetRecord isPuppet]
  -[AVTAvatarPuppetRecord copyWithZone:]
  -[AVTAvatarPuppetRecord encodeWithCoder:]
  -[AVTAvatarPuppetRecord puppetName]
  -[AVTAvatarPuppetRecord initWithPuppetName:]


AVTCoreDataRemoteChangesObserver : NSObject <AVTCoreDataRemoteChangesObserver>
 @property  <AVTCoreDataPersistentStoreConfiguration> *configuration
 @property  <AVTUILogger> *logger
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <AVTEventCoalescer> *coalescer
 @property  AVTCoreEnvironment *environment
 @property  <NSObject> *observationToken
 @property  NSMutableArray *changeHandlers
 @property  NSMutableArray *transactionsForPendingChanges

  // instance methods
  -[AVTCoreDataRemoteChangesObserver logger]
  -[AVTCoreDataRemoteChangesObserver isObservingChanges]
  -[AVTCoreDataRemoteChangesObserver configuration]
  -[AVTCoreDataRemoteChangesObserver .cxx_destruct]
  -[AVTCoreDataRemoteChangesObserver addChangesHandler:]
  -[AVTCoreDataRemoteChangesObserver workQueue]
  -[AVTCoreDataRemoteChangesObserver coalescer]
  -[AVTCoreDataRemoteChangesObserver startObservingChanges]
  -[AVTCoreDataRemoteChangesObserver environment]
  -[AVTCoreDataRemoteChangesObserver observationToken]
  -[AVTCoreDataRemoteChangesObserver setObservationToken:]
  -[AVTCoreDataRemoteChangesObserver initWithConfiguration:workQueue:coalescer:environment:]
  -[AVTCoreDataRemoteChangesObserver changeHandlers]
  -[AVTCoreDataRemoteChangesObserver transactionsForPendingChanges]
  -[AVTCoreDataRemoteChangesObserver performManagedObjectContextWork:]
  -[AVTCoreDataRemoteChangesObserver registerCoalescerEventHandler]
  -[AVTCoreDataRemoteChangesObserver processRemoteChangeNotification:completion:]
  -[AVTCoreDataRemoteChangesObserver changeTransactionsForToken:managedObjectContext:]


AVTCoreEnvironment : NSObject
 @property  <AVTUILogger> *logger
 @property  <AVTBlockScheduler> *scheduler
 @property  @? serialQueueProvider
 @property  @? lockProvider
 @property  NSObject<OS_dispatch_queue> *backgroundQueue
 @property  NSURL *storeLocation
 @property  NSURL *imageStoreLocation
 @property  NSURL *stickerImageStoreLocation
 @property  NSURL *imageCacheStoreLocation
 @property  NSNotificationCenter *notificationCenter

  // class methods
  +[AVTCoreEnvironment storeLocation]
  +[AVTCoreEnvironment defaultEnvironment]
  +[AVTCoreEnvironment serialQueueProvider]
  +[AVTCoreEnvironment imageStoreLocation]
  +[AVTCoreEnvironment stickerImageStoreLocation]
  +[AVTCoreEnvironment resetFlushCacheValuesIfNeeded]
  +[AVTCoreEnvironment imageCacheStoreLocationWithError:]

  // instance methods
  -[AVTCoreEnvironment notificationCenter]
  -[AVTCoreEnvironment backgroundQueue]
  -[AVTCoreEnvironment logger]
  -[AVTCoreEnvironment storeLocation]
  -[AVTCoreEnvironment .cxx_destruct]
  -[AVTCoreEnvironment scheduler]
  -[AVTCoreEnvironment init]
  -[AVTCoreEnvironment imageCacheStoreLocation]
  -[AVTCoreEnvironment serialQueueProvider]
  -[AVTCoreEnvironment lockProvider]
  -[AVTCoreEnvironment imageStoreLocation]
  -[AVTCoreEnvironment stickerImageStoreLocation]


AVTBackgroundActivitySchedulerFactory : NSObject
  // class methods
  +[AVTBackgroundActivitySchedulerFactory schedulerForPostInstallMigrationActivity]
  +[AVTBackgroundActivitySchedulerFactory schedulerForUserRequestedBackupActivity]


AVTArchiverBasedDomain : NSObject <NSSecureCoding>
 @property  NSString *domainIdentifier
 @property  NSString *primaryAvatarIdentifier

  // class methods
  +[AVTArchiverBasedDomain supportsSecureCoding]

  // instance methods
  -[AVTArchiverBasedDomain initWithCoder:]
  -[AVTArchiverBasedDomain domainIdentifier]
  -[AVTArchiverBasedDomain .cxx_destruct]
  -[AVTArchiverBasedDomain encodeWithCoder:]
  -[AVTArchiverBasedDomain initWithDomainIdentifier:primaryAvatarIdentifier:]
  -[AVTArchiverBasedDomain primaryAvatarIdentifier]
  -[AVTArchiverBasedDomain domainBySettingPrimaryAvatarIdentifier:]


AVTAvatarsDaemon : NSObject
  // class methods
  +[AVTAvatarsDaemon xpcInterface]


AVTArchiverBasedStoreRoot : NSObject <NSSecureCoding>
 @property  NSArray *domains
 @property  NSArray *records

  // class methods
  +[AVTArchiverBasedStoreRoot supportsSecureCoding]

  // instance methods
  -[AVTArchiverBasedStoreRoot initWithCoder:]
  -[AVTArchiverBasedStoreRoot domains]
  -[AVTArchiverBasedStoreRoot .cxx_destruct]
  -[AVTArchiverBasedStoreRoot records]
  -[AVTArchiverBasedStoreRoot encodeWithCoder:]
  -[AVTArchiverBasedStoreRoot initWithDomains:records:]


AVTAvatarRecordSerializer : NSObject
  // class methods
  +[AVTAvatarRecordSerializer avatarRecordFromData:]
  +[AVTAvatarRecordSerializer dataFromAvatarRecord:]


AVTBlockScheduler : NSObject <AVTBlockScheduler>
  // instance methods
  -[AVTBlockScheduler performBlock:afterDelay:onQueue:]


AVTObservableAvatarStore : NSObject <AVTAvatarStoreInternal>
 @property  <AVTAvatarStoreInternal> *store
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  <AVTAvatarStoreDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTStickerBackendDelegate> *stickerBackendDelegate

  // class methods
  +[AVTObservableAvatarStore maximumNumberOfSavableAvatars]
  +[AVTObservableAvatarStore maximumNumberOfFetchableAvatars]

  // instance methods
  -[AVTObservableAvatarStore .cxx_destruct]
  -[AVTObservableAvatarStore callbackQueue]
  -[AVTObservableAvatarStore setDelegate:]
  -[AVTObservableAvatarStore canCreateAvatar]
  -[AVTObservableAvatarStore avatarsForFetchRequest:error:]
  -[AVTObservableAvatarStore store]
  -[AVTObservableAvatarStore delegate]
  -[AVTObservableAvatarStore fetchAvatarsForFetchRequest:completionHandler:]
  -[AVTObservableAvatarStore duplicateAvatar:completionBlock:]
  -[AVTObservableAvatarStore deleteAvatar:completionHandler:]
  -[AVTObservableAvatarStore canCreateAvatarWithError:]
  -[AVTObservableAvatarStore saveAvatarRecord:thumbnailAvatar:completionBlock:thumbnailGenerationCompletionBlock:]
  -[AVTObservableAvatarStore deleteAvatarWithIdentifier:completionBlock:]
  -[AVTObservableAvatarStore recentStickersForFetchRequest:error:]
  -[AVTObservableAvatarStore didUseStickerWithAvatarIdentifier:stickerIdentifier:completionHandler:]
  -[AVTObservableAvatarStore deleteRecentStickersWithAvatarIdentifier:stickerIdentifier:completionHandler:]
  -[AVTObservableAvatarStore deleteRecentStickersForChangeTracker:completionHandler:]
  -[AVTObservableAvatarStore initWithStore:callbackQueue:]


AVTArchiverBasedStoreMigratableSource : NSObject <AVTStoreBackendMigratableSource>
 @property  NSURL *storeLocation
 @property  AVTCoreEnvironment *environment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTArchiverBasedStoreMigratableSource migrationNeeded]
  -[AVTArchiverBasedStoreMigratableSource storeLocation]
  -[AVTArchiverBasedStoreMigratableSource .cxx_destruct]
  -[AVTArchiverBasedStoreMigratableSource environment]
  -[AVTArchiverBasedStoreMigratableSource createSourceBackend]
  -[AVTArchiverBasedStoreMigratableSource finalizeMigration:]
  -[AVTArchiverBasedStoreMigratableSource migratedRecordFromRecord:index:totalCount:]
  -[AVTArchiverBasedStoreMigratableSource initWithStoreLocation:environment:]


AVTError : NSObject
  // class methods
  +[AVTError errorWithCode:userInfo:]


AVTAvatarRecord : NSObject <AVTAvatarRecordInternal, AVTAvatarRecord>
 @property  NSData *avatarData
 @property  NSDate *orderDate
 @property  BOOL puppet
 @property  NSString *identifier
 @property  BOOL editable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarRecord supportsSecureCoding]
  +[AVTAvatarRecord canLoadAvatarWithData:]
  +[AVTAvatarRecord defaultAvatarRecord]
  +[AVTAvatarRecord matchingIdentifierTest:]
  +[AVTAvatarRecord dataForNeutralRecord]
  +[AVTAvatarRecord dataForNewRecord]

  // instance methods
  -[AVTAvatarRecord initWithCoder:]
  -[AVTAvatarRecord isEditable]
  -[AVTAvatarRecord .cxx_destruct]
  -[AVTAvatarRecord dictionaryRepresentation]
  -[AVTAvatarRecord init]
  -[AVTAvatarRecord isEqual:]
  -[AVTAvatarRecord identifier]
  -[AVTAvatarRecord isPuppet]
  -[AVTAvatarRecord copyWithZone:]
  -[AVTAvatarRecord encodeWithCoder:]
  -[AVTAvatarRecord avatarData]
  -[AVTAvatarRecord setAvatarData:]
  -[AVTAvatarRecord orderDate]
  -[AVTAvatarRecord initWithAvatarData:orderDate:]
  -[AVTAvatarRecord initWithAvatarData:identifier:orderDate:]
  -[AVTAvatarRecord initWithAvatarData:]


AVTStickerRecord : NSObject <AVTStickerRecord, NSSecureCoding, NSCopying>
 @property  NSNumber *frequencySum
 @property  NSNumber *serializationVersion
 @property  NSString *identifier
 @property  NSString *avatarRecordIdentifier
 @property  NSString *stickerConfigurationIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTStickerRecord supportsSecureCoding]
  +[AVTStickerRecord matchingIdentifierTest:]

  // instance methods
  -[AVTStickerRecord initWithCoder:]
  -[AVTStickerRecord .cxx_destruct]
  -[AVTStickerRecord isEqual:]
  -[AVTStickerRecord identifier]
  -[AVTStickerRecord serializationVersion]
  -[AVTStickerRecord copyWithZone:]
  -[AVTStickerRecord avatarRecordIdentifier]
  -[AVTStickerRecord encodeWithCoder:]
  -[AVTStickerRecord stickerConfigurationIdentifier]
  -[AVTStickerRecord initWithIdentifier:avatarRecordIdentifier:stickerConfigurationIdentifier:frequencySum:serializationVersion:]
  -[AVTStickerRecord frequencySum]


AVTArchiverBasedStoreBackend : NSObject <AVTStoreBackend>
 @property  NSURL *storeLocation
 @property  NSString *domainIdentifier
 @property  AVTCoreEnvironment *environment
 @property  AVTArchiverBasedStoreRoot *model
 @property  NSDictionary *avatarsByIdentifiers
 @property  NSArray *sortedAvatars
 @property  <AVTStoreBackendDelegate> *backendDelegate
 @property  <AVTAvatarRecordChangeTracker> *recordChangeTracker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTArchiverBasedStoreBackend classifyRecordsByIdentifiers:]
  +[AVTArchiverBasedStoreBackend rootBySavingAvatarRecord:afterAvatarRecord:forDomainIdentifier:toRoot:]
  +[AVTArchiverBasedStoreBackend rootByRemovingAvatarWithIdentifier:fromRoot:]
  +[AVTArchiverBasedStoreBackend storeLocationForDomainIdentifier:environment:]

  // instance methods
  -[AVTArchiverBasedStoreBackend storeLocation]
  -[AVTArchiverBasedStoreBackend domainIdentifier]
  -[AVTArchiverBasedStoreBackend loadModel:]
  -[AVTArchiverBasedStoreBackend .cxx_destruct]
  -[AVTArchiverBasedStoreBackend avatarsForFetchRequest:error:]
  -[AVTArchiverBasedStoreBackend model]
  -[AVTArchiverBasedStoreBackend setModel:]
  -[AVTArchiverBasedStoreBackend environment]
  -[AVTArchiverBasedStoreBackend canCreateAvatarWithError:]
  -[AVTArchiverBasedStoreBackend saveAvatars:error:]
  -[AVTArchiverBasedStoreBackend backendDelegate]
  -[AVTArchiverBasedStoreBackend saveAvatar:error:]
  -[AVTArchiverBasedStoreBackend deleteAvatarWithIdentifier:error:]
  -[AVTArchiverBasedStoreBackend duplicateAvatarRecord:error:]
  -[AVTArchiverBasedStoreBackend setBackendDelegate:]
  -[AVTArchiverBasedStoreBackend recordChangeTracker]
  -[AVTArchiverBasedStoreBackend avatarsWithIdentifiers:error:]
  -[AVTArchiverBasedStoreBackend initWithStoreLocation:domainIdentifier:environment:]
  -[AVTArchiverBasedStoreBackend loadContentFromDisk:]
  -[AVTArchiverBasedStoreBackend setSortedAvatars:]
  -[AVTArchiverBasedStoreBackend setAvatarsByIdentifiers:]
  -[AVTArchiverBasedStoreBackend loadContentFromDiskIfNeeded:]
  -[AVTArchiverBasedStoreBackend allAvatars]
  -[AVTArchiverBasedStoreBackend avatarsExcludingIdentifiers:error:]
  -[AVTArchiverBasedStoreBackend sortedAvatars]
  -[AVTArchiverBasedStoreBackend saveModel:logger:error:]
  -[AVTArchiverBasedStoreBackend avatarCountWithError:]
  -[AVTArchiverBasedStoreBackend avatarsByIdentifiers]


AVTPAvatarStore : NSObject <AVTStoreBackendDelegate, AVTAvatarStoreInternal, AVTAvatarStore>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *backendAccessQueue
 @property  NSObject<OS_dispatch_queue> *puppetStoreAccessQueue
 @property  AVTCoreEnvironment *environment
 @property  <AVTStoreBackend> *backend
 @property  AVTPuppetStore *puppetStore
 @property  <AVTUILogger> *logger
 @property  <AVTStickerBackend> *stickerBackend
 @property  <AVTPBackendImageHandlingDelegate> *imageHandlingDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTStickerBackendDelegate> *stickerBackendDelegate

  // class methods
  +[AVTPAvatarStore maximumNumberOfSavableAvatars]
  +[AVTPAvatarStore maximumNumberOfFetchableAvatars]
  +[AVTPAvatarStore defaultBackendWithWorkQueue:environment:]

  // instance methods
  -[AVTPAvatarStore logger]
  -[AVTPAvatarStore .cxx_destruct]
  -[AVTPAvatarStore initWithDomainIdentifier:]
  -[AVTPAvatarStore canCreateAvatar]
  -[AVTPAvatarStore avatarsForFetchRequest:error:]
  -[AVTPAvatarStore initWithEnvironment:]
  -[AVTPAvatarStore init]
  -[AVTPAvatarStore backend]
  -[AVTPAvatarStore workQueue]
  -[AVTPAvatarStore environment]
  -[AVTPAvatarStore fetchAvatarsForFetchRequest:completionHandler:]
  -[AVTPAvatarStore duplicateAvatar:completionBlock:]
  -[AVTPAvatarStore deleteAvatar:completionHandler:]
  -[AVTPAvatarStore canCreateAvatarWithError:]
  -[AVTPAvatarStore saveAvatarRecord:thumbnailAvatar:completionBlock:thumbnailGenerationCompletionBlock:]
  -[AVTPAvatarStore deleteAvatarWithIdentifier:completionBlock:]
  -[AVTPAvatarStore recentStickersForFetchRequest:error:]
  -[AVTPAvatarStore didUseStickerWithAvatarIdentifier:stickerIdentifier:completionHandler:]
  -[AVTPAvatarStore deleteRecentStickersWithAvatarIdentifier:stickerIdentifier:completionHandler:]
  -[AVTPAvatarStore deleteRecentStickersForChangeTracker:completionHandler:]
  -[AVTPAvatarStore setStickerBackendDelegate:]
  -[AVTPAvatarStore setImageHandlingDelegate:]
  -[AVTPAvatarStore backend:didChangeRecordsWithIdentifiers:]
  -[AVTPAvatarStore initWithBackend:backendAccessQueue:puppetStore:stickerBackend:environment:]
  -[AVTPAvatarStore performBackendWork:]
  -[AVTPAvatarStore performPuppetStoreWork:]
  -[AVTPAvatarStore backendAccessQueue]
  -[AVTPAvatarStore puppetStoreAccessQueue]
  -[AVTPAvatarStore puppetStore]
  -[AVTPAvatarStore performAsynchronousWork:]
  -[AVTPAvatarStore imageHandlingDelegate]
  -[AVTPAvatarStore postChangeNotificationForRecordWithIdentifiers:remote:]
  -[AVTPAvatarStore stickerBackend]


AVTAvatarStoreServer : NSObject
  // class methods
  +[AVTAvatarStoreServer defaultServer]
  +[AVTAvatarStoreServer defaultServerWithImageHandlingDelegate:]


AVTStickerUserDefaultsBackend : NSObject <AVTStickerBackend>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <AVTUILogger> *logger
 @property  NSUserDefaults *userDefaults
 @property  NSURL *cacheLocation
 @property  NSMutableArray *stickers
 @property  unsigned long frequencyCounter
 @property  <AVTStickerBackendDelegate> *stickerBackendDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTStickerUserDefaultsBackend logger]
  -[AVTStickerUserDefaultsBackend .cxx_destruct]
  -[AVTStickerUserDefaultsBackend stickers]
  -[AVTStickerUserDefaultsBackend workQueue]
  -[AVTStickerUserDefaultsBackend userDefaults]
  -[AVTStickerUserDefaultsBackend dealloc]
  -[AVTStickerUserDefaultsBackend recentStickersForFetchRequest:error:]
  -[AVTStickerUserDefaultsBackend didUseStickerWithAvatarIdentifier:stickerIdentifier:completionHandler:]
  -[AVTStickerUserDefaultsBackend deleteRecentStickersWithAvatarIdentifier:stickerIdentifier:completionHandler:]
  -[AVTStickerUserDefaultsBackend deleteRecentStickersForChangeTracker:completionHandler:]
  -[AVTStickerUserDefaultsBackend stickerBackendDelegate]
  -[AVTStickerUserDefaultsBackend setStickerBackendDelegate:]
  -[AVTStickerUserDefaultsBackend initWithWorkQueue:environment:userDefaults:]
  -[AVTStickerUserDefaultsBackend getStickersFromUserDefaults]
  -[AVTStickerUserDefaultsBackend fetchAllStickers]
  -[AVTStickerUserDefaultsBackend fetchMostRecentStickersWithLimit:]
  -[AVTStickerUserDefaultsBackend fetchStickersWithAvatarIdentifier:stickerIdentifier:]
  -[AVTStickerUserDefaultsBackend addStickerWithAvatarIdentifier:stickerIdentifier:]
  -[AVTStickerUserDefaultsBackend updateStickerAtIndex:]
  -[AVTStickerUserDefaultsBackend saveStickersToUserDefaults]
  -[AVTStickerUserDefaultsBackend stickersIndexesMatchingAvatarIdentifier:stickerIdentifier:]
  -[AVTStickerUserDefaultsBackend cacheLocation]
  -[AVTStickerUserDefaultsBackend frequencyCounter]
  -[AVTStickerUserDefaultsBackend setFrequencyCounter:]
  -[AVTStickerUserDefaultsBackend nextFrequencyCount]
  -[AVTStickerUserDefaultsBackend addNextFrequencyCountToFrequencySum:]
  -[AVTStickerUserDefaultsBackend _recentStickersChangedExternally]
  -[AVTStickerUserDefaultsBackend setStickers:]


AVTAvatarFetchRequest : NSObject
 @property  NSArray *identifiers
 @property  NSArray *excludingIdentifiers
 @property  long long criteria
 @property  long long fetchLimit

  // class methods
  +[AVTAvatarFetchRequest requestForPredefinedAvatars]
  +[AVTAvatarFetchRequest requestForCustomAvatars]
  +[AVTAvatarFetchRequest requestForAvatarWithIdentifier:]
  +[AVTAvatarFetchRequest requestForCustomAvatarsWithLimit:]
  +[AVTAvatarFetchRequest requestForAllAvatars]
  +[AVTAvatarFetchRequest requestForAvatarsWithIdentifiers:]
  +[AVTAvatarFetchRequest requestForAllAvatarsExcluding:]
  +[AVTAvatarFetchRequest requestForPredefinedAvatarsExcluding:]
  +[AVTAvatarFetchRequest requestForStorePrimaryAvatar]

  // instance methods
  -[AVTAvatarFetchRequest .cxx_destruct]
  -[AVTAvatarFetchRequest identifiers]
  -[AVTAvatarFetchRequest criteria]
  -[AVTAvatarFetchRequest isEqual:]
  -[AVTAvatarFetchRequest fetchLimit]
  -[AVTAvatarFetchRequest excludingIdentifiers]
  -[AVTAvatarFetchRequest initWithCriteria:]
  -[AVTAvatarFetchRequest initWithCriteria:identifiers:excludedIdentifiers:fetchLimit:]
  -[AVTAvatarFetchRequest initWithCriteria:identifier:]


AVTArchiverBasedStorePersistence : NSObject
  // class methods
  +[AVTArchiverBasedStorePersistence currentVersion]
  +[AVTArchiverBasedStorePersistence isFileNotFoundError:]
  +[AVTArchiverBasedStorePersistence contentExistsAtLocation:]
  +[AVTArchiverBasedStorePersistence removeFilesAtLocation:error:]
  +[AVTArchiverBasedStorePersistence readContentFromDiskAtLocation:logger:error:]
  +[AVTArchiverBasedStorePersistence writeContent:toDiskAtLocation:logger:error:]
  +[AVTArchiverBasedStorePersistence dbLocationForStoreLocation:]
  +[AVTArchiverBasedStorePersistence _createStoreIfNeededAtLocation:logger:error:]
  +[AVTArchiverBasedStorePersistence _readContentFromDiskAtLocation:logger:error:]
  +[AVTArchiverBasedStorePersistence _createStoreFolderIfNeededAtLocation:logger:fileManager:error:]
  +[AVTArchiverBasedStorePersistence _writeContent:toDiskAtLocation:logger:error:]
  +[AVTArchiverBasedStorePersistence writeVersion:toDiskAtLocation:error:]
  +[AVTArchiverBasedStorePersistence _performMigrationIfNeededForStoreAtLocation:logger:fileManager:error:]
  +[AVTArchiverBasedStorePersistence _createStoreEmptyFileIfNeededAtLocation:logger:fileManager:error:]
  +[AVTArchiverBasedStorePersistence readVersionForStoreAtLocation:error:]
  +[AVTArchiverBasedStorePersistence _migrateFromPre0_5ToCurrentForStoreAtLocation:logger:fileManager:error:]
  +[AVTArchiverBasedStorePersistence _migrateFromPre0_6ToCurrentForStoreAtLocation:logger:fileManager:error:]
  +[AVTArchiverBasedStorePersistence _migrateDifferentAvatarKitVersionsForContent:logger:]


AVTBackendVersion : NSObject <NSSecureCoding>
 @property  double backendVersion
 @property  double avatarKitVersion

  // class methods
  +[AVTBackendVersion supportsSecureCoding]
  +[AVTBackendVersion currentVersion]
  +[AVTBackendVersion versionFileLocationForStoreLocation:]
  +[AVTBackendVersion versionFromDiskAtLocation:error:]

  // instance methods
  -[AVTBackendVersion initWithCoder:]
  -[AVTBackendVersion isEqual:]
  -[AVTBackendVersion encodeWithCoder:]
  -[AVTBackendVersion saveToDiskAtLocation:error:]
  -[AVTBackendVersion backendVersion]
  -[AVTBackendVersion avatarKitVersion]
  -[AVTBackendVersion initWithBackendVersion:avatarKitVersion:]


AVTCoreDataChangeTracker : NSObject <AVTAvatarRecordChangeTracker>
 @property  <AVTCoreDataPersistentStoreConfiguration> *configuration
 @property  AVTCoreEnvironment *environment
 @property  <AVTUILogger> *logger
 @property  <AVTAvatarManagedRecordTransformer> *recordTransformer

  // class methods
  +[AVTCoreDataChangeTracker tokenFileURLForLocation:]

  // instance methods
  -[AVTCoreDataChangeTracker logger]
  -[AVTCoreDataChangeTracker configuration]
  -[AVTCoreDataChangeTracker .cxx_destruct]
  -[AVTCoreDataChangeTracker environment]
  -[AVTCoreDataChangeTracker processChangeTransactionsWithChangeTokenLocation:handler:error:]
  -[AVTCoreDataChangeTracker recordTransformer]
  -[AVTCoreDataChangeTracker initWithConfiguration:environment:]
  -[AVTCoreDataChangeTracker initWithConfiguration:recordTransformer:environment:]
  -[AVTCoreDataChangeTracker currentHistoryTokenForLocation:]
  -[AVTCoreDataChangeTracker trackerChangesFromPersistentChanges:managedObjectContext:]
  -[AVTCoreDataChangeTracker enumerateChangesAfterToken:managedObjectContext:changesHandler:error:]
  -[AVTCoreDataChangeTracker saveToken:location:error:]
  -[AVTCoreDataChangeTracker recordIdentifierForChange:managedObjectContext:]


AVTCoreDataChangeTrackerChange : NSObject <AVTAvatarRecordChange>
 @property  NSString *recordIdentifier
 @property  long long changeType

  // class methods
  +[AVTCoreDataChangeTrackerChange trackerChangeTypeFromPersistentChangeType:]

  // instance methods
  -[AVTCoreDataChangeTrackerChange changeType]
  -[AVTCoreDataChangeTrackerChange .cxx_destruct]
  -[AVTCoreDataChangeTrackerChange recordIdentifier]
  -[AVTCoreDataChangeTrackerChange isEqual:]
  -[AVTCoreDataChangeTrackerChange initWithRecordIdentifier:changeType:]


AVTStoreBackendMigrator : NSObject <AVTStoreBackendMigrator>
 @property  <AVTUILogger> *logger
 @property  AVTCoreEnvironment *environment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTStoreBackendMigrator logger]
  -[AVTStoreBackendMigrator .cxx_destruct]
  -[AVTStoreBackendMigrator initWithEnvironment:]
  -[AVTStoreBackendMigrator environment]
  -[AVTStoreBackendMigrator updatedRecordsForMigratingRecords:source:destinationBackend:error:]
  -[AVTStoreBackendMigrator migrateContentFromSource:toDestination:error:]


AVTSyncSchedulingAuthority : NSObject <AVTSyncSchedulingAuthority>
 @property  <AVTUILogger> *logger

  // instance methods
  -[AVTSyncSchedulingAuthority logger]
  -[AVTSyncSchedulingAuthority .cxx_destruct]
  -[AVTSyncSchedulingAuthority didReceivePushNotification]
  -[AVTSyncSchedulingAuthority initWithLogger:]
  -[AVTSyncSchedulingAuthority importRequired]
  -[AVTSyncSchedulingAuthority exportRequired]
  -[AVTSyncSchedulingAuthority importDidCompleteSuccessfully]
  -[AVTSyncSchedulingAuthority exportDidCompleteSuccessfully]
  -[AVTSyncSchedulingAuthority didResetSync]
  -[AVTSyncSchedulingAuthority madeLocalChanges]


AVTCoreDataPersistentStoreConfiguration : NSObject
  // class methods
  +[AVTCoreDataPersistentStoreConfiguration currentManagedObjectModel]
  +[AVTCoreDataPersistentStoreConfiguration createModel]
  +[AVTCoreDataPersistentStoreConfiguration remoteConfigurationWithEnvironment:]
  +[AVTCoreDataPersistentStoreConfiguration remoteConfigurationWithDaemonClient:environment:]
  +[AVTCoreDataPersistentStoreConfiguration modelV1]
  +[AVTCoreDataPersistentStoreConfiguration localConfigurationWithStoreLocation:environment:]


_AVTCoreDataPersistentStoreRemoteConfiguration : NSObject <AVTCoreDataPersistentStoreConfiguration>
 @property  NSPersistentContainer *container
 @property  <AVTUILogger> *logger
 @property  <AVTAvatarsDaemon> *daemonClient
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_AVTCoreDataPersistentStoreRemoteConfiguration createContainerForRemoteConfiguration]

  // instance methods
  -[_AVTCoreDataPersistentStoreRemoteConfiguration logger]
  -[_AVTCoreDataPersistentStoreRemoteConfiguration persistentStoreCoordinator]
  -[_AVTCoreDataPersistentStoreRemoteConfiguration setupIfNeeded:]
  -[_AVTCoreDataPersistentStoreRemoteConfiguration container]
  -[_AVTCoreDataPersistentStoreRemoteConfiguration .cxx_destruct]
  -[_AVTCoreDataPersistentStoreRemoteConfiguration createManagedObjectContext]
  -[_AVTCoreDataPersistentStoreRemoteConfiguration daemonClient]
  -[_AVTCoreDataPersistentStoreRemoteConfiguration storeDescription]
  -[_AVTCoreDataPersistentStoreRemoteConfiguration initWithDaemonClient:environment:]


_AVTCoreDataPersistentStoreLocalConfiguration : NSObject <AVTCoreDataPersistentStoreLocalConfiguration>
 @property  NSPersistentStoreCoordinator *coordinator
 @property  NSPersistentStoreDescription *storeDescription
 @property  NSURL *storeLocation
 @property  NSURL *folderLocation
 @property  NSURL *databaseLocation
 @property  <AVTUILogger> *logger
 @property  AVTCoreEnvironment *environment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_AVTCoreDataPersistentStoreLocalConfiguration sideDatabaseFolderForStoreLocation:]
  +[_AVTCoreDataPersistentStoreLocalConfiguration databaseFolderForStoreLocation:]
  +[_AVTCoreDataPersistentStoreLocalConfiguration databaseLocationForFolderLocation:]
  +[_AVTCoreDataPersistentStoreLocalConfiguration createStoreDescriptionWithDatabaseLocation:logger:]

  // instance methods
  -[_AVTCoreDataPersistentStoreLocalConfiguration logger]
  -[_AVTCoreDataPersistentStoreLocalConfiguration persistentStoreCoordinator]
  -[_AVTCoreDataPersistentStoreLocalConfiguration setupIfNeeded:]
  -[_AVTCoreDataPersistentStoreLocalConfiguration storeLocation]
  -[_AVTCoreDataPersistentStoreLocalConfiguration coordinator]
  -[_AVTCoreDataPersistentStoreLocalConfiguration .cxx_destruct]
  -[_AVTCoreDataPersistentStoreLocalConfiguration databaseLocation]
  -[_AVTCoreDataPersistentStoreLocalConfiguration createManagedObjectContext]
  -[_AVTCoreDataPersistentStoreLocalConfiguration storeDescription]
  -[_AVTCoreDataPersistentStoreLocalConfiguration environment]
  -[_AVTCoreDataPersistentStoreLocalConfiguration initWithStoreLocation:copiedAside:environment:]
  -[_AVTCoreDataPersistentStoreLocalConfiguration copiedAsideMigratableSource]
  -[_AVTCoreDataPersistentStoreLocalConfiguration folderLocation]
  -[_AVTCoreDataPersistentStoreLocalConfiguration createDatabaseDirectoryIfNeeded:usingFileManager:]
  -[_AVTCoreDataPersistentStoreLocalConfiguration migratableSources]
  -[_AVTCoreDataPersistentStoreLocalConfiguration createStoreServerWithError:]
  -[_AVTCoreDataPersistentStoreLocalConfiguration tearDownAndEraseAllContent:]
  -[_AVTCoreDataPersistentStoreLocalConfiguration contentExists]
  -[_AVTCoreDataPersistentStoreLocalConfiguration copyStorageAside:]
  -[_AVTCoreDataPersistentStoreLocalConfiguration updateBackupInclusionStatusOnQueue:completionHandler:]


AVTAvatarManagedRecordTransformer : NSObject <AVTAvatarManagedRecordTransformer>
  // instance methods
  -[AVTAvatarManagedRecordTransformer identifierForManagedRecordIdentifier:]
  -[AVTAvatarManagedRecordTransformer recordWithManagedRecord:error:]
  -[AVTAvatarManagedRecordTransformer managedRecordIdentifierForIdentifier:]
  -[AVTAvatarManagedRecordTransformer updateManagedRecord:withRecord:]


AVTStickerChangeObserver : NSObject
 @property  AVTCoreEnvironment *environment
 @property  <AVTStickerBackend> *stickerBackend
 @property  <AVTPBackendImageHandlingDelegate> *imageHandlingDelegate

  // instance methods
  -[AVTStickerChangeObserver .cxx_destruct]
  -[AVTStickerChangeObserver environment]
  -[AVTStickerChangeObserver setImageHandlingDelegate:]
  -[AVTStickerChangeObserver imageHandlingDelegate]
  -[AVTStickerChangeObserver stickerBackend]
  -[AVTStickerChangeObserver initWithStickerBackend:environment:]
  -[AVTStickerChangeObserver processChangesForChangeTracker:completionHandler:]


AVTAvatarsDaemonServer : NSObject <NSXPCListenerDelegate, AVTAvatarsDaemon, AVTAvatarsDaemonServer>
 @property  NSXPCListener *listener
 @property  <AVTUILogger> *logger
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTAvatarsDaemonServerDelegate> *delegate

  // instance methods
  -[AVTAvatarsDaemonServer logger]
  -[AVTAvatarsDaemonServer checkIn]
  -[AVTAvatarsDaemonServer startListening]
  -[AVTAvatarsDaemonServer .cxx_destruct]
  -[AVTAvatarsDaemonServer setDelegate:]
  -[AVTAvatarsDaemonServer listener]
  -[AVTAvatarsDaemonServer initWithLogger:]
  -[AVTAvatarsDaemonServer delegate]
  -[AVTAvatarsDaemonServer listener:shouldAcceptNewConnection:]
  -[AVTAvatarsDaemonServer initWithListener:logger:]


AVTSerializedAvatarRecord : NSObject <NSSecureCoding, NSCopying>
 @property  BOOL isPuppet
 @property  <AVTAvatarRecord> *avatarRecord

  // class methods
  +[AVTSerializedAvatarRecord supportsSecureCoding]

  // instance methods
  -[AVTSerializedAvatarRecord initWithCoder:]
  -[AVTSerializedAvatarRecord .cxx_destruct]
  -[AVTSerializedAvatarRecord initWithAvatarRecord:]
  -[AVTSerializedAvatarRecord isPuppet]
  -[AVTSerializedAvatarRecord copyWithZone:]
  -[AVTSerializedAvatarRecord encodeWithCoder:]
  -[AVTSerializedAvatarRecord avatarRecord]
  -[AVTSerializedAvatarRecord setIsPuppet:]


AVTUILogger : NSObject <AVTUILogger>
 @property  NSObject<OS_os_log> *generalLog
 @property  NSObject<OS_os_log> *interactionLog
 @property  NSObject<OS_os_log> *backendLog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTUILogger .cxx_destruct]
  -[AVTUILogger init]
  -[AVTUILogger logDebug:]
  -[AVTUILogger logRenderingModelColor:]
  -[AVTUILogger logRenderingModelPreset:]
  -[AVTUILogger logCarouselErrorGettingFrameForElementAtIndex:]
  -[AVTUILogger logCarouselEndsDraggingWithVelocity:willSwitchIndexPathInsteadOfScrollBack:forHighVelocity:]
  -[AVTUILogger logGeneratingImageForRecord:scope:type:]
  -[AVTUILogger logGeneratingImageError:]
  -[AVTUILogger logErrorDeletingSomeThumbnail:]
  -[AVTUILogger logErrorProcessingChangeTransactionsToUpdateThumbnails:]
  -[AVTUILogger updatingThumbnailsForRemoteChanges:]
  -[AVTUILogger logCancelingPreLoadingTask:]
  -[AVTUILogger logPreLoadingNeededForIndex:section:]
  -[AVTUILogger logRequestingPreLoadingTask:forIndex:section:]
  -[AVTUILogger logInMemoryCacheStorageForResource:]
  -[AVTUILogger logInMemoryCacheHitForResource:]
  -[AVTUILogger logInMemoryCacheEvictsResource:]
  -[AVTUILogger logCarouselChangesCenterItemTo:]
  -[AVTUILogger logErrorUpdatingBodyCarouselVisibleCellAtIndexPath:]
  -[AVTUILogger logCarouselCellStartUsingLiveView:associatedTransition:]
  -[AVTUILogger logCarouselAddsTransitionToCoordinator:]
  -[AVTUILogger logCarouselStopsFocusingOnCenterItem:withCell:]
  -[AVTUILogger logCarouselCellStopUsingLiveView:associatedTransition:]
  -[AVTUILogger logAVTViewSetAvatar:]
  -[AVTUILogger logFetchedOrphanedRecentSticker:]
  -[AVTUILogger logFetchedRecentStickerWithNoStickerConfiguration:]
  -[AVTUILogger logErrorFetchingRecentStickers:]
  -[AVTUILogger logErrorSavingRecentSticker:]
  -[AVTUILogger logDidFinishEditingWithSuccess]
  -[AVTUILogger logDidFinishEditingWithError:]
  -[AVTUILogger logRequestingThumbnailForIndex:section:]
  -[AVTUILogger logNilImageReturnedFromAVTAvatarRecordImageProvider]
  -[AVTUILogger logPerformedRecentStickersMigration:]
  -[AVTUILogger logStickerGeneratorPoolDidntHaveAvailableGenerator:maxCount:]
  -[AVTUILogger logNilImageReturnedFromAVTUIStickerRenderer]
  -[AVTUILogger logRenderingStickerEnd:]
  -[AVTUILogger logRenderingStickerStart:forRecord:]
  -[AVTUILogger logUpdatingLiveAvatarWithConfiguration:]
  -[AVTUILogger logParsingMetadataDefinitionsError:]
  -[AVTUILogger logErrorFetchingRecords:]
  -[AVTUILogger logStartingPreLoadingTask:]
  -[AVTUILogger logDonePreLoadingThumbnailForPreLoadingTask:]
  -[AVTUILogger logLookingUpPreLoadedPreset:task:]
  -[AVTUILogger logPreLoadingPreset:task:]
  -[AVTUILogger logDonePreLoadingPreset:task:]
  -[AVTUILogger logErrorSnapshottingAVTView:]
  -[AVTUILogger logUsageTrackingRecordCount:]
  -[AVTUILogger logUsageTrackingSmallDifferencesClusterCount:]
  -[AVTUILogger logUsageTrackingBigDifferencesClusterCount:]
  -[AVTUILogger logPaddleViewVideoPlayerFailed:]
  -[AVTUILogger logCarouselChangingToSingleMode]
  -[AVTUILogger logCarouselChangingToMultiMode]
  -[AVTUILogger logCarouselDelegateDidFocusRecord:]
  -[AVTUILogger logCarouselDelegateWillEndFocusRecord:]
  -[AVTUILogger logCarouselDelegateNearnessFactorDidChange:towardRecord:editable:]
  -[AVTUILogger logCarouselDelegateDidUpdateRecord:]
  -[AVTUILogger logStartTransition:state:]
  -[AVTUILogger logSetupHandlerCompletedForTransition:state:finished:]
  -[AVTUILogger logCancelTransition:]
  -[AVTUILogger logStickerSchedulerAddedTask:taskCount:]
  -[AVTUILogger logStickerSchedulerStartedTask:forSchedulerRule:]
  -[AVTUILogger logStickerSchedulerCancelledTask:]
  -[AVTUILogger logStickerSchedulerCancelledStickerSheetTasksForIdentifier:]
  -[AVTUILogger logStickerSchedulerCancelledAllTasks]
  -[AVTUILogger logRenderingRecord:size:]
  -[AVTUILogger logCarouselSnapshotForIndex:size:]
  -[AVTUILogger logThrottlingAVTView]
  -[AVTUILogger logUnthrottlingAVTView]
  -[AVTUILogger logRenderingConfiguration:]
  -[AVTUILogger logSnapshotReturnedImage:]
  -[AVTUILogger logFileSystemError:]
  -[AVTUILogger logCreatingImageStoreForPath:]
  -[AVTUILogger logImageStoreBeginSavingImageForPath:]
  -[AVTUILogger logImageStoreDoneSavingImageForPath:]
  -[AVTUILogger logDeletingImagesWithIdentifierPrefix:]
  -[AVTUILogger logImageStoreCacheMiss:]
  -[AVTUILogger logImageStoreCacheHitForItemDescription:sizeCost:]
  -[AVTUILogger logImageStoreSavingError:code:]
  -[AVTUILogger logPerformTransition:]
  -[AVTUILogger logTransition:state:reachedStage:]
  -[AVTUILogger logToLivePoseTransitionBegins:]
  -[AVTUILogger logToLivePoseTransitionEnds:]
  -[AVTUILogger logSingleModeControllerStartUsingLiveView:]
  -[AVTUILogger logSingleModeControllerStopUsingLiveView:]
  -[AVTUILogger logSingleModeCantSnapshotForLackOfWindow]
  -[AVTUILogger logStickerViewSnapshotForBounds:offset:]
  -[AVTUILogger logCoalesceableEventOccured:]
  -[AVTUILogger logMissingTombstonedIdentifier]
  -[AVTUILogger logPersistentChangeNotOfInterest:]
  -[AVTUILogger logErrorGettingChangedRecordsContentForIdentifiers:error:]
  -[AVTUILogger logTooManyAvatars:limit:]
  -[AVTUILogger logUnableToReadRemoteRecord:]
  -[AVTUILogger logReadingError:]
  -[AVTUILogger logAvatarPreloadBeginForIdentifier:]
  -[AVTUILogger logAvatarPreloadEnd]
  -[AVTUILogger logErrorPinningContextToCurrentQueryGenerationToken:]
  -[AVTUILogger logErrorMitigatingDuplicates:]
  -[AVTUILogger logMaintenanceCompleted]
  -[AVTUILogger runningMaintenance:]
  -[AVTUILogger logDeduplicateRecordWithIdentifier:toNewRecordWithIdentifier:]
  -[AVTUILogger logDiscoveredDuplicates:count:]
  -[AVTUILogger logAvatarsDaemonClientConnectionInterrupted]
  -[AVTUILogger logAvatarsDaemonClientConnectionInvalidated]
  -[AVTUILogger logErrorGettingAvatarsDaemonClientProxy:]
  -[AVTUILogger checkingIn:]
  -[AVTUILogger logStartObservingResetSync]
  -[AVTUILogger logMissingResetSyncReasonKey]
  -[AVTUILogger logResetSyncReason:]
  -[AVTUILogger processingWillResetSyncNotification:]
  -[AVTUILogger processingDidResetSyncNotification:]
  -[AVTUILogger logImportRequestResult:error:]
  -[AVTUILogger logMirroringRequestErrorWithCode:description:]
  -[AVTUILogger importingRecords:]
  -[AVTUILogger logExportRequestResult:error:]
  -[AVTUILogger exportingRecords:]
  -[AVTUILogger logDispatchingRemoteChangeWithTransactionCount:handlersCount:]
  -[AVTUILogger logStartObservingRemoteChangeNotificationFrom:]
  -[AVTUILogger logReceivedRemoteChange:]
  -[AVTUILogger logNotificationDoesntContainChangeHistoryToken]
  -[AVTUILogger processingRemoteChangeNotification:]
  -[AVTUILogger logInspectingChangesForExportAfterToken:]
  -[AVTUILogger logErrorFetchingChangeHistory:]
  -[AVTUILogger logDeletingRecordWithIdentifier:]
  -[AVTUILogger logDuplicatingRecordWithIdentifier:]
  -[AVTUILogger logCreatingStore:]
  -[AVTUILogger logSkippedFetchingRecordsWithReason:]
  -[AVTUILogger logFetchedRecords:criteria:]
  -[AVTUILogger fetchingRecords:]
  -[AVTUILogger logRecordsNotFoundInRecordStore:]
  -[AVTUILogger logRecordsNotFoundInPuppetStore:]
  -[AVTUILogger logRecordsNotFoundInAnyStore:]
  -[AVTUILogger savingRecords:]
  -[AVTUILogger logErrorDeletingThumbnailsForIdentifier:error:]
  -[AVTUILogger deletingRecords:]
  -[AVTUILogger logErrorDuplicatingThumbnailsForIdentifier:error:]
  -[AVTUILogger duplicatingRecords:]
  -[AVTUILogger logPostingChangeNotificationForIdentifiers:]
  -[AVTUILogger deletingStickerRecentsForRemoteChanges:]
  -[AVTUILogger logReadingBackendAtPath:]
  -[AVTUILogger logSavingBackend]
  -[AVTUILogger logSavingError:]
  -[AVTUILogger logErrorUpdatingVersion:]
  -[AVTUILogger logBackendVersionMismatch:actual:]
  -[AVTUILogger logDroppingUnsupportedAvatarRecord:]
  -[AVTUILogger logCreatingBackendFolderAtPath:]
  -[AVTUILogger logErrorCreatingBackendContent:]
  -[AVTUILogger logCreatingBackendDBAtPath:]
  -[AVTUILogger logTrackerProcessingChanges:count:from:]
  -[AVTUILogger logErrorSavingChangeToken:location:]
  -[AVTUILogger logCurrentHistoryTokenFileDoesntExist:]
  -[AVTUILogger logErrorReadingCurrentHistoryToken:]
  -[AVTUILogger savingChangeTrackerToken:]
  -[AVTUILogger logTransactionHasChangesButNoToken]
  -[AVTUILogger logCouldntFindRecordIdentifierForChangeType:managedObjectID:]
  -[AVTUILogger logFoundRecordIdentifier:changeType:managedObjectID:]
  -[AVTUILogger logMigratingSource:]
  -[AVTUILogger logErrorUpdatingRecordsForMigration:]
  -[AVTUILogger logErrorDeletingMigratedContent:]
  -[AVTUILogger migratingPersistedContent:]
  -[AVTUILogger logFoundExistingRecordDuringMigration]
  -[AVTUILogger logNotImportingOnLaunchWithRemainingTime:]
  -[AVTUILogger logSyncEnabled]
  -[AVTUILogger logErrorAddingPersistentStore:]
  -[AVTUILogger logTearingDownCoreDataStack:]
  -[AVTUILogger logErrorTearingDownCoreDataStack:]
  -[AVTUILogger logErrorRemovingStoreFolder:]
  -[AVTUILogger copyingStorageAside:]
  -[AVTUILogger logUpdatingBackupExclusionStatus:]
  -[AVTUILogger logErrorMigratingBackupInclusionStatus:]
  -[AVTUILogger logErrorUpdatingBackupInclusionStatus:]
  -[AVTUILogger logAvatarsDaemonReceivesIncomingConnection]
  -[AVTUILogger logAvatarsDaemonClientChecksIn:]
  -[AVTUILogger backendLog]
  -[AVTUILogger generalLog]
  -[AVTUILogger interactionLog]
  -[AVTUILogger logErrorLoadingTemplates:]
  -[AVTUILogger logParsingMetadataDefinitions]
  -[AVTUILogger logNoAvatarPreset:]
  -[AVTUILogger logAvatarsdExitingWithReason:]
  -[AVTUILogger logErrorWhileMigratingBackend:]
  -[AVTUILogger logStartingServer]
  -[AVTUILogger settingUpStore:]
  -[AVTUILogger performingMigrationXPCActivity:]
  -[AVTUILogger logMigrationXPCActivityFinished]
  -[AVTUILogger performingUserRequestedBackupActivity:]
  -[AVTUILogger logUserRequestedBackupXPCActivityFinished]
  -[AVTUILogger logErrorSettingUpStore:]
  -[AVTUILogger logErrorStartingServer:]
  -[AVTUILogger logUnableToCreatePushConnection:]
  -[AVTUILogger logPushConnectionReceivedPublicToken:]
  -[AVTUILogger logPushConnectionReceivedToken:topic:identifier:]
  -[AVTUILogger logPushNotificationReceivedForTopic:payload:]
  -[AVTUILogger logChangesRequireExport]
  -[AVTUILogger logChangesRequireThumbnailUpdate]
  -[AVTUILogger logCheckingIfMigrationNeeded]
  -[AVTUILogger logUpdatingThumbnails]
  -[AVTUILogger logSchedulingImport]
  -[AVTUILogger logSchedulingUpdateThumbnails]
  -[AVTUILogger logDeletingStickerRecents]
  -[AVTUILogger logWillResetZone]
  -[AVTUILogger logDidResetZoneWithSuccess:error:]
  -[AVTUILogger postingAvatarStoreChangeNotification:]
  -[AVTUILogger logErrorSettingUserDirSuffixForSandbox:]
  -[AVTUILogger logGenericSandboxError:error:]
  -[AVTUILogger logErrorSandboxInit:]
  -[AVTUILogger logWarningNoHOME]
  -[AVTUILogger restoringStorage:]
  -[AVTUILogger logErrorCopyingStorageAside:]
  -[AVTUILogger logErrorMergingCopiedAsideContent:]
  -[AVTUILogger logSetupSchedulingMigrationCheck]
  -[AVTUILogger logSetupSchedulingImport]
  -[AVTUILogger logSetupSchedulingExport]
  -[AVTUILogger checkingAccountInfo:]
  -[AVTUILogger logAccountInfo:status:deviceToDeviceEncryption:]
  -[AVTUILogger logErrorGettingAccountInfo:]
  -[AVTUILogger logNoProxyToAvatarsDaemon]
  -[AVTUILogger logCarouselTransitionCenterItem:withCell:]
  -[AVTUILogger logAVTViewDidRenderAvatar:currentAvatar:]
  -[AVTUILogger logAVTViewDidRenderCurrentAvatar:]
  -[AVTUILogger logAVTViewCancelingRenderingAvatar:]
  -[AVTUILogger logSetupUserHasNoMemojiData]
  -[AVTUILogger logSetupUserImportAttempting:]
  -[AVTUILogger logSetupUserImportFailedToUnarchiveDataAtPath:errorDescription:]
  -[AVTUILogger logSetupUserImportSaveError:]
  -[AVTUILogger logSetupUserDataImportCheck]
  -[AVTUILogger logSetupUserImportFailedToRemoveFileWithError:]
  -[AVTUILogger logFoundExistingRecordDuringMigration:]


AVTStubbedStoreBackend : NSObject <AVTStoreBackend>
 @property  <AVTStoreBackendDelegate> *backendDelegate
 @property  <AVTAvatarRecordChangeTracker> *recordChangeTracker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTStubbedStoreBackend avatarsForFetchRequest:error:]
  -[AVTStubbedStoreBackend canCreateAvatarWithError:]
  -[AVTStubbedStoreBackend saveAvatars:error:]
  -[AVTStubbedStoreBackend backendDelegate]
  -[AVTStubbedStoreBackend saveAvatar:error:]
  -[AVTStubbedStoreBackend deleteAvatarWithIdentifier:error:]
  -[AVTStubbedStoreBackend duplicateAvatarRecord:error:]
  -[AVTStubbedStoreBackend setBackendDelegate:]
  -[AVTStubbedStoreBackend recordChangeTracker]


AVTCoreDataStoreServer : NSObject <AVTPushNotificationsSupportDelegate, AVTCoreDataCloudKitMirroringHandlerDelegate, AVTAvatarsDaemonServerDelegate, AVTAvatarStoreServer>
 @property  <AVTPBackendImageHandlingDelegate> *imageHandlingDelegate
 @property  <AVTStoreBackend> *backend
 @property  AVTCoreEnvironment *environment
 @property  <AVTUILogger> *logger
 @property  <AVTBlockScheduler> *blockScheduler
 @property  <AVTCoreDataPersistentStoreLocalConfiguration> *configuration
 @property  @? migratorProvider
 @property  NSXPCStoreServer *server
 @property  NSObject<OS_dispatch_queue> *backgroundQueue
 @property  <AVTPushNotificationsSupport> *pushNotificationsSupport
 @property  <AVTCoreDataCloudKitMirroringHandler> *mirroringHandler
 @property  <AVTSyncSchedulingAuthority> *schedulingAuthority
 @property  <AVTCoreDataRemoteChangesObserver> *remoteChangesObserver
 @property  AVTStickerChangeObserver *stickerChangeObserver
 @property  <AVTAvatarRecordChangeTracker> *changeTracker
 @property  <AVTAvatarsDaemonServer> *daemonServer
 @property  <AVTCoreDataStoreMaintenance> *storeMaintenance
 @property  BOOL setupCompleted
 @property  @? migrationActivityCompletion
 @property  @? userRequestedBackupActivityCompletion

  // class methods
  +[AVTCoreDataStoreServer resetSyncShouldPreserveContentForReason:]

  // instance methods
  -[AVTCoreDataStoreServer backgroundQueue]
  -[AVTCoreDataStoreServer setServer:]
  -[AVTCoreDataStoreServer logger]
  -[AVTCoreDataStoreServer startListening]
  -[AVTCoreDataStoreServer configuration]
  -[AVTCoreDataStoreServer .cxx_destruct]
  -[AVTCoreDataStoreServer migrate]
  -[AVTCoreDataStoreServer storeMaintenance]
  -[AVTCoreDataStoreServer backend]
  -[AVTCoreDataStoreServer server]
  -[AVTCoreDataStoreServer blockScheduler]
  -[AVTCoreDataStoreServer environment]
  -[AVTCoreDataStoreServer setImageHandlingDelegate:]
  -[AVTCoreDataStoreServer changeTracker]
  -[AVTCoreDataStoreServer didReceivePushNotification:]
  -[AVTCoreDataStoreServer setupCompleted]
  -[AVTCoreDataStoreServer setSetupCompleted:]
  -[AVTCoreDataStoreServer remoteChangesObserver]
  -[AVTCoreDataStoreServer mirroringHandler:willResetSyncWithReason:]
  -[AVTCoreDataStoreServer mirroringHandler:didResetSyncWithReason:]
  -[AVTCoreDataStoreServer imageHandlingDelegate]
  -[AVTCoreDataStoreServer initWithEnvironment:imageHandlingDelegate:]
  -[AVTCoreDataStoreServer clientDidCheckInForServer:]
  -[AVTCoreDataStoreServer initWithLocalBackend:configuration:migratorProvider:pushSupport:mirroringHandler:schedulingAuthority:remoteChangesObserver:stickerChangeObserver:changeTracker:daemonServer:storeMaintenance:backgroundQueue:environment:imageHandlingDelegate:]
  -[AVTCoreDataStoreServer processInternalSettingsChanges:]
  -[AVTCoreDataStoreServer daemonServer]
  -[AVTCoreDataStoreServer pushNotificationsSupport]
  -[AVTCoreDataStoreServer schedulingAuthority]
  -[AVTCoreDataStoreServer scheduleExportWithManagedObjectContext:discretionary:completion:]
  -[AVTCoreDataStoreServer scheduleUpdateThumbnails]
  -[AVTCoreDataStoreServer deleteStickerRecents]
  -[AVTCoreDataStoreServer mirroringHandler]
  -[AVTCoreDataStoreServer setMigrationActivityCompletion:]
  -[AVTCoreDataStoreServer completeMigrationActivityIfNeeded]
  -[AVTCoreDataStoreServer setUserRequestedBackupActivityCompletion:]
  -[AVTCoreDataStoreServer completeUserRequestedBackupActivityIfNeeded]
  -[AVTCoreDataStoreServer scheduleImportExportIfRequiredWithPostImportHandler:completion:]
  -[AVTCoreDataStoreServer importSetupUserDataIfNeeded]
  -[AVTCoreDataStoreServer scheduleSetupThen:]
  -[AVTCoreDataStoreServer migrationActivityCompletion]
  -[AVTCoreDataStoreServer userRequestedBackupActivityCompletion]
  -[AVTCoreDataStoreServer setupThen:]
  -[AVTCoreDataStoreServer updateThumbnails]
  -[AVTCoreDataStoreServer scheduleMigrationThen:]
  -[AVTCoreDataStoreServer scheduleImportDiscretionary:completionBlock:]
  -[AVTCoreDataStoreServer migratorProvider]
  -[AVTCoreDataStoreServer stickerChangeObserver]


AVTPushNotificationsSupport : NSObject <APSConnectionDelegate, AVTPushNotificationsSupport>
 @property  APSConnection *pushConnection
 @property  NSObject<OS_dispatch_queue> *connectionQueue
 @property  AVTCoreEnvironment *environment
 @property  AVTPushNotificationsConnectionFactory *connectionFactory
 @property  <AVTUILogger> *logger
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTPushNotificationsSupportDelegate> *delegate

  // class methods
  +[AVTPushNotificationsSupport topic]

  // instance methods
  -[AVTPushNotificationsSupport setPushConnection:]
  -[AVTPushNotificationsSupport connectionQueue]
  -[AVTPushNotificationsSupport pushConnection]
  -[AVTPushNotificationsSupport logger]
  -[AVTPushNotificationsSupport connection:didReceivePublicToken:]
  -[AVTPushNotificationsSupport connection:didReceiveToken:forTopic:identifier:]
  -[AVTPushNotificationsSupport connection:didReceiveIncomingMessage:]
  -[AVTPushNotificationsSupport .cxx_destruct]
  -[AVTPushNotificationsSupport setDelegate:]
  -[AVTPushNotificationsSupport delegate]
  -[AVTPushNotificationsSupport environment]
  -[AVTPushNotificationsSupport connectionFactory]
  -[AVTPushNotificationsSupport initWithEnvironment:connectionFactory:]
  -[AVTPushNotificationsSupport startListeningToPushNotifications]
  -[AVTPushNotificationsSupport getAPSEnvironmentString:]
  -[AVTPushNotificationsSupport setupConnectionWithCompletionHandler:]
  -[AVTPushNotificationsSupport stopListeningToPushNotifications]


AVTPushNotificationsConnectionFactory : NSObject
  // instance methods
  -[AVTPushNotificationsConnectionFactory connectionWithEnvironmentName:namedDelegatePort:queue:]


AVTAvatarManagedRecord : NSManagedObject
 @property  NSUUID *identifier
 @property  NSData *avatarData
 @property  NSDate *orderDate


AVTSideCoreDataStoreMigratableSource : NSObject <AVTStoreBackendMigratableSource>
 @property  <AVTCoreDataPersistentStoreLocalConfiguration> *configuration
 @property  AVTCoreEnvironment *environment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTSideCoreDataStoreMigratableSource migrationNeeded]
  -[AVTSideCoreDataStoreMigratableSource configuration]
  -[AVTSideCoreDataStoreMigratableSource .cxx_destruct]
  -[AVTSideCoreDataStoreMigratableSource environment]
  -[AVTSideCoreDataStoreMigratableSource initWithConfiguration:environment:]
  -[AVTSideCoreDataStoreMigratableSource createSourceBackend]
  -[AVTSideCoreDataStoreMigratableSource finalizeMigration:]
  -[AVTSideCoreDataStoreMigratableSource migratedRecordFromRecord:index:totalCount:]


AVTCoreDataCloudKitMirroringConfiguration : NSObject
  // class methods
  +[AVTCoreDataCloudKitMirroringConfiguration configureMirroringRequestOptions:discretionary:]
  +[AVTCoreDataCloudKitMirroringConfiguration configureMirroringRequestOptions:]
  +[AVTCoreDataCloudKitMirroringConfiguration managedModelAttributesRequiredForMirroring]
  +[AVTCoreDataCloudKitMirroringConfiguration cloudKitMirroringEnabled]
  +[AVTCoreDataCloudKitMirroringConfiguration configureStoreDescriptionForMirroring:logger:]
  +[AVTCoreDataCloudKitMirroringConfiguration deviceConfigurationSupportsCloudKitMirroringWithLogger:completionHandler:]
  +[AVTCoreDataCloudKitMirroringConfiguration createMirroringHandlerWithEnvironment:]
  +[AVTCoreDataCloudKitMirroringConfiguration currentContainerIdentifier]
  +[AVTCoreDataCloudKitMirroringConfiguration manateeContainer:]


(AvatarUI)
	// instance methods
	-[(AvatarUI) avt_map:]
	-[(AvatarUI) avt_description]
	-[(AvatarUI) avt_firstObjectPassingTest:]

(AvatarUI)
	// class methods
	+[(AvatarUI) _avtui_dictionaryByIndexingObjectsInArray:by:]

	// instance methods
	-[(AvatarUI) _avtui_deepCopy]

NSNotification(AVTAvatarStoreNotification)
	// instance methods
	-[NSNotification(AVTAvatarStoreNotification) _avtui_changedRecordIdentifiers]

01 00 0300 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 0400 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTAnimoji 
01 00 0400 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTAvatar 
01 00 0400 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTMemoji 
01 00 0100 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0100 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerOptions 
01 00 0100 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotification 
01 00 0100 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationConfiguration 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSAttributeDescription 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBackgroundActivityScheduler 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSBatchDeleteRequest 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSCloudKitMirroringDelegate 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSCloudKitMirroringDelegateOptions 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSCloudKitMirroringExportRequest 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSCloudKitMirroringImportRequest 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSCloudKitMirroringResetZoneRequest 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSExpressionDescription 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectContext 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentContainer 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryChangeRequest 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryToken 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreCoordinator 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreDescription 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSQueryGenerationToken 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0200 /System/Library/Frameworks/CoreData.framework/CoreData: NSXPCStoreServer 
