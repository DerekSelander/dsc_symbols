|| __DATA.__common _gDADaemonServer
|| __DATA.__objc_data _OBJC_CLASS_$_DAAppContext
|| __DATA.__objc_data _OBJC_CLASS_$_DABluetoothAccessInfo
|| __DATA.__objc_data _OBJC_CLASS_$_DABluetoothDeviceAccessInfo
|| __DATA.__objc_data _OBJC_CLASS_$_DADevice
|| __DATA.__objc_data _OBJC_CLASS_$_DADeviceAccessAnalytics
|| __DATA.__objc_data _OBJC_CLASS_$_DADeviceEvent
|| __DATA.__objc_data _OBJC_CLASS_$_DADeviceResolver
|| __DATA.__objc_data _OBJC_CLASS_$_DADiscovery
|| __DATA.__objc_data _OBJC_CLASS_$_DADiscoveryConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_DADiscoveryExtensionSession
|| __DATA.__objc_data _OBJC_CLASS_$_DAEndpoint
|| __DATA.__objc_data _OBJC_CLASS_$_DAEvent
|| __DATA.__objc_data _OBJC_CLASS_$_DAEventDevice
|| __DATA.__objc_data _OBJC_CLASS_$_DAEventDevicesPresent
|| __DATA.__objc_data _OBJC_CLASS_$_DASession
|| __DATA.__objc_data _OBJC_CLASS_$_DASimulatedDeviceServer
|| __DATA.__objc_data _OBJC_METACLASS_$_DAAppContext
|| __DATA.__objc_data _OBJC_METACLASS_$_DABluetoothAccessInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_DABluetoothDeviceAccessInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_DADevice
|| __DATA.__objc_data _OBJC_METACLASS_$_DADeviceAccessAnalytics
|| __DATA.__objc_data _OBJC_METACLASS_$_DADeviceEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_DADeviceResolver
|| __DATA.__objc_data _OBJC_METACLASS_$_DADiscovery
|| __DATA.__objc_data _OBJC_METACLASS_$_DADiscoveryConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_DADiscoveryExtensionSession
|| __DATA.__objc_data _OBJC_METACLASS_$_DAEndpoint
|| __DATA.__objc_data _OBJC_METACLASS_$_DAEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_DAEventDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_DAEventDevicesPresent
|| __DATA.__objc_data _OBJC_METACLASS_$_DASession
|| __DATA.__objc_data _OBJC_METACLASS_$_DASimulatedDeviceServer
|| __DATA_CONST.__const _DADeviceProtocolDIAL
|| __DATA_CONST.__const _DADeviceProtocolInvalid
|| __DATA_CONST.__const _DAErrorDomain
|| __DATA_CONST.__const _DAExtensionEntitlement
|| __DATA_CONST.__const _DAExtensionPointIdentifier
|| __TEXT.__text _DADeviceMediaPlaybackStateToString
|| __TEXT.__text _DADeviceProtocolTypeToString
|| __TEXT.__text _DADeviceStateToString
|| __TEXT.__text _DADeviceTypeToString
|| __TEXT.__text _DAErrorCodeToString
|| __TEXT.__text _DAErrorF
|| __TEXT.__text _DAEventTypeToString
|| __TEXT.__text _DANestedErrorF
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreBluetooth: _OBJC_CLASS_$_CBUUID
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreServices: _OBJC_CLASS_$_LSApplicationExtensionRecord
__ CoreServices: _OBJC_CLASS_$_LSBundleRecord
__ CoreUtils: _CFDictionaryGetDouble
__ CoreUtils: _CFDictionaryGetInt64
__ CoreUtils: _CFDictionaryGetTypedValue
__ CoreUtils: _CFPrefs_CopyTypedValue
__ CoreUtils: _CFPrefs_GetInt64
__ CoreUtils: _CFPrefs_SetValue
__ CoreUtils: _CUAppendF
__ CoreUtils: _CUPrintErrorCode
__ CoreUtils: _CUPrintNSDataAddress
__ CoreUtils: _CUPrintNSError
__ CoreUtils: _CUPrintNSObject
__ CoreUtils: _CUPrintNSObjectOneLine
__ CoreUtils: _CUPrintXPC
__ CoreUtils: _CUXPCDecodeBool
__ CoreUtils: _CUXPCDecodeNSArrayOfClass
__ CoreUtils: _CUXPCDecodeNSArrayOfInteger
__ CoreUtils: _CUXPCDecodeNSArrayOfNSString
__ CoreUtils: _CUXPCDecodeNSData
__ CoreUtils: _CUXPCDecodeNSError
__ CoreUtils: _CUXPCDecodeNSErrorIfNeeded
__ CoreUtils: _CUXPCDecodeNSString
__ CoreUtils: _CUXPCDecodeNSUUID
__ CoreUtils: _CUXPCDecodeObject
__ CoreUtils: _CUXPCDecodeSInt64RangedEx
__ CoreUtils: _CUXPCDecodeUInt64RangedEx
__ CoreUtils: _CUXPCEncodeNSArrayOfNSNumber
__ CoreUtils: _CUXPCEncodeNSArrayOfNSString
__ CoreUtils: _CUXPCEncodeNSArrayOfObjects
__ CoreUtils: _CUXPCEncodeNSError
__ CoreUtils: _CUXPCEncodeObject
__ CoreUtils: _CUXPCGetNextClientID
__ CoreUtils: _LogPrintF
__ CoreUtils: _NSAppendPrintF
__ CoreUtils: _NSDecodeObjectIfPresent
__ CoreUtils: _NSDictionaryGetNSNumber
__ CoreUtils: _NSErrorF_safe
__ CoreUtils: _NSPrintF
__ CoreUtils: _NSRandomData
__ CoreUtils: _OBJC_CLASS_$_CUBonjourAdvertiser
__ CoreUtils: _OBJC_CLASS_$_CUBonjourBrowser
__ CoreUtils: _OBJC_CLASS_$_CUCoalescer
__ CoreUtils: _OBJC_CLASS_$_CUTCPServer
__ CoreUtils: _SecondsToUpTicksF
__ CoreUtils: _SockAddrToString
__ CoreUtils: _UpTicksToMicroseconds
__ CoreUtils: __LogCategory_Initialize
__ ExtensionFoundation: _OBJC_CLASS_$__EXQuery
__ ExtensionFoundation: _OBJC_CLASS_$__EXQueryController
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Network: _OBJC_CLASS_$_NWAddressEndpoint
__ Network: _OBJC_CLASS_$_NWEndpoint
__ Network: _nw_endpoint_copy_dictionary
__ Network: _nw_endpoint_create_bonjour_service
__ Network: _nw_endpoint_create_from_dictionary
__ NetworkExtension: _OBJC_CLASS_$_NEPolicy
__ NetworkExtension: _OBJC_CLASS_$_NEPolicyCondition
__ NetworkExtension: _OBJC_CLASS_$_NEPolicyResult
__ NetworkExtension: _OBJC_CLASS_$_NEPolicySession
__ UniformTypeIdentifiers: _OBJC_CLASS_$_UTType
__ UniformTypeIdentifiers: __UTTypeSpeaker
__ libSystem.B.dylib: _DNSServiceConstructFullName
__ libSystem.B.dylib: _DNSServiceCreateConnection
__ libSystem.B.dylib: _DNSServiceGetAddrInfo
__ libSystem.B.dylib: _DNSServiceQueryRecord
__ libSystem.B.dylib: _DNSServiceRefDeallocate
__ libSystem.B.dylib: _DNSServiceSetDispatchQueue
__ libSystem.B.dylib: _NEHelperCacheCopyAppUUIDMapping
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_type_array
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_data
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_endpoint
__ libSystem.B.dylib: __xpc_type_uuid
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_issue_mach
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _xpc_array_append_value
__ libSystem.B.dylib: _xpc_array_apply
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_connection_activate
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create
__ libSystem.B.dylib: _xpc_connection_create_from_endpoint
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply_sync
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_data_create
__ libSystem.B.dylib: _xpc_data_get_bytes_ptr
__ libSystem.B.dylib: _xpc_data_get_length
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_dictionary
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_uuid
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_endpoint_create
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_uuid_get_bytes
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_allocateGenericClassMetadata
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_getGenericMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initClassMetadata2
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_slowAlloc
__ libswiftCore.dylib: _swift_slowDealloc
__ libswiftCore.dylib: _swift_unknownObjectRelease
DAAppContext : NSObject <CUXPCCodable, NSSecureCoding>
 @property  NSObject<OS_xpc_object> *xpcEndpoint
 @property  NSString *bundleIdentifier

  // class methods
  +[DAAppContext supportsSecureCoding]

  // instance methods
  -[DAAppContext encodeWithXPCObject:]
  -[DAAppContext initWithXPCObject:error:]
  -[DAAppContext encodeWithCoder:]
  -[DAAppContext .cxx_destruct]
  -[DAAppContext setBundleIdentifier:]
  -[DAAppContext bundleIdentifier]
  -[DAAppContext initWithCoder:]
  -[DAAppContext setXpcEndpoint:]
  -[DAAppContext xpcEndpoint]


DAAppSession : NSObject <CUXPCCodable>
 @property  NSString *bundleIdentifier

  // instance methods
  -[DAAppSession encodeWithXPCObject:]
  -[DAAppSession initWithXPCObject:error:]
  -[DAAppSession .cxx_destruct]
  -[DAAppSession setBundleIdentifier:]
  -[DAAppSession bundleIdentifier]


DABluetoothAccessInfo : NSObject <CUXPCCodable>
 @property  NSArray *bluetoothDevices
 @property  NSArray *bluetoothScanCompanyIdentifiers
 @property  NSArray *bluetoothScanServices

  // instance methods
  -[DABluetoothAccessInfo encodeWithXPCObject:]
  -[DABluetoothAccessInfo initWithXPCObject:error:]
  -[DABluetoothAccessInfo .cxx_destruct]
  -[DABluetoothAccessInfo descriptionWithLevel:]
  -[DABluetoothAccessInfo bluetoothDevices]
  -[DABluetoothAccessInfo setBluetoothDevices:]
  -[DABluetoothAccessInfo bluetoothScanCompanyIdentifiers]
  -[DABluetoothAccessInfo bluetoothScanServices]
  -[DABluetoothAccessInfo setBluetoothScanServices:]


DABluetoothDeviceAccessInfo : NSObject <CUXPCCodable>
 @property  NSArray *bluetoothServices
 @property  NSUUID *identifier

  // instance methods
  -[DABluetoothDeviceAccessInfo encodeWithXPCObject:]
  -[DABluetoothDeviceAccessInfo identifier]
  -[DABluetoothDeviceAccessInfo initWithXPCObject:error:]
  -[DABluetoothDeviceAccessInfo .cxx_destruct]
  -[DABluetoothDeviceAccessInfo setIdentifier:]
  -[DABluetoothDeviceAccessInfo descriptionWithLevel:]
  -[DABluetoothDeviceAccessInfo setBluetoothServices:]
  -[DABluetoothDeviceAccessInfo bluetoothServices]


DADevice : NSObject <CUXPCCodable, NSSecureCoding, NSCopying>
 @property  double approveTime
 @property  NSDictionary *endpoints
 @property  NSDictionary *persistentDictionaryRepresentation
 @property  BOOL pendingRemoval
 @property  NSUUID *bluetoothIdentifier
 @property  unsigned long flags
 @property  long long type
 @property  NSString *identifier
 @property  NSString *name
 @property  NSObject<OS_nw_endpoint> *networkEndpoint
 @property  long long protocol
 @property  UTType *protocolType
 @property  long long state
 @property  NSData *txtRecordData
 @property  NSURL *url
 @property  long long mediaPlaybackState
 @property  NSString *mediaContentTitle
 @property  NSString *mediaContentArtistName

  // class methods
  +[DADevice supportsSecureCoding]
  +[DADevice mergePersistentDictionary:into:]
  +[DADevice deviceMetadataURLValid:]

  // instance methods
  -[DADevice setEndpoints:]
  -[DADevice endpoints]
  -[DADevice encodeWithXPCObject:]
  -[DADevice identifier]
  -[DADevice initWithXPCObject:error:]
  -[DADevice setUrl:]
  -[DADevice encodeWithCoder:]
  -[DADevice type]
  -[DADevice state]
  -[DADevice setProtocol:]
  -[DADevice setFlags:]
  -[DADevice .cxx_destruct]
  -[DADevice flags]
  -[DADevice setType:]
  -[DADevice setIdentifier:]
  -[DADevice setName:]
  -[DADevice copyWithZone:]
  -[DADevice descriptionWithLevel:]
  -[DADevice name]
  -[DADevice protocol]
  -[DADevice url]
  -[DADevice setState:]
  -[DADevice initWithCoder:]
  -[DADevice protocolType]
  -[DADevice setProtocolType:]
  -[DADevice bluetoothIdentifier]
  -[DADevice setBluetoothIdentifier:]
  -[DADevice setTxtRecordData:]
  -[DADevice txtRecordData]
  -[DADevice setMediaPlaybackState:]
  -[DADevice mediaPlaybackState]
  -[DADevice networkEndpoint]
  -[DADevice mediaContentTitle]
  -[DADevice mediaContentArtistName]
  -[DADevice setNetworkEndpoint:]
  -[DADevice initWithPersistentDictionaryRepresentation:error:]
  -[DADevice persistentDictionaryRepresentation]
  -[DADevice setMediaContentTitle:]
  -[DADevice setMediaContentArtistName:]
  -[DADevice approveTime]
  -[DADevice setApproveTime:]
  -[DADevice pendingRemoval]
  -[DADevice setPendingRemoval:]


DADeviceResolver : NSObject
 @property  CUCoalescer *coalescer
 @property  NSMutableSet *resolveOperations
 @property  NSString *bundleID
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? eventHandler

  // instance methods
  -[DADeviceResolver eventHandler]
  -[DADeviceResolver setCoalescer:]
  -[DADeviceResolver setBundleID:]
  -[DADeviceResolver .cxx_destruct]
  -[DADeviceResolver setEventHandler:]
  -[DADeviceResolver setDispatchQueue:]
  -[DADeviceResolver removeEndpoint:]
  -[DADeviceResolver coalescer]
  -[DADeviceResolver dispatchQueue]
  -[DADeviceResolver _invalidated]
  -[DADeviceResolver descriptionWithLevel:]
  -[DADeviceResolver invalidate]
  -[DADeviceResolver addEndpoint:]
  -[DADeviceResolver bundleID]
  -[DADeviceResolver init]
  -[DADeviceResolver selectEndpoint:]
  -[DADeviceResolver resolveOperations]
  -[DADeviceResolver _addEndpoint:]
  -[DADeviceResolver _removeEndpoint:]
  -[DADeviceResolver _selectEndpoint:]
  -[DADeviceResolver _ensureInitialized]
  -[DADeviceResolver _evaluateEndpoints]
  -[DADeviceResolver _groupEndpoint:matchedEndpoint:]
  -[DADeviceResolver _reportDeviceWithSoloEndpoint:]
  -[DADeviceResolver _reportEvent:]
  -[DADeviceResolver _reportEventType:]
  -[DADeviceResolver _updateSelectedEndpoint]
  -[DADeviceResolver _startResolvingEndpoint:]
  -[DADeviceResolver _startResolvingBonjourFullName:interfaceIndex:endpoint:]
  -[DADeviceResolver _startResolvingBonjourName:type:interfaceIndex:endpoint:]
  -[DADeviceResolver _startResolvingHostname:interfaceIndex:endpoint:]
  -[DADeviceResolver setResolveOperations:]


DADeviceResolveOperation : NSObject
 @property  ^{_DNSServiceRef_t=} addrInfoQuery
 @property  DAEndpoint *endpoint
 @property  DADeviceResolver *resolver
 @property  ^{_DNSServiceRef_t=} srvQuery

  // instance methods
  -[DADeviceResolveOperation setEndpoint:]
  -[DADeviceResolveOperation setResolver:]
  -[DADeviceResolveOperation endpoint]
  -[DADeviceResolveOperation .cxx_destruct]
  -[DADeviceResolveOperation resolver]
  -[DADeviceResolveOperation invalidate]
  -[DADeviceResolveOperation addrInfoQuery]
  -[DADeviceResolveOperation setAddrInfoQuery:]
  -[DADeviceResolveOperation srvQuery]
  -[DADeviceResolveOperation setSrvQuery:]


DADiscoveryConfiguration : NSObject <CUXPCCodable, NSCopying>
 @property  NSString *bundleID
 @property  BOOL presenceOnly
 @property  NSArray *bluetoothCompanyIdentifiers
 @property  NSArray *bluetoothServices
 @property  NSArray *bonjourServiceTypes

  // instance methods
  -[DADiscoveryConfiguration encodeWithXPCObject:]
  -[DADiscoveryConfiguration initWithXPCObject:error:]
  -[DADiscoveryConfiguration setBundleID:]
  -[DADiscoveryConfiguration .cxx_destruct]
  -[DADiscoveryConfiguration copyWithZone:]
  -[DADiscoveryConfiguration bundleID]
  -[DADiscoveryConfiguration setPresenceOnly:]
  -[DADiscoveryConfiguration setBonjourServiceTypes:]
  -[DADiscoveryConfiguration setBluetoothServices:]
  -[DADiscoveryConfiguration setBluetoothCompanyIdentifiers:]
  -[DADiscoveryConfiguration bluetoothServices]
  -[DADiscoveryConfiguration bluetoothCompanyIdentifiers]
  -[DADiscoveryConfiguration bonjourServiceTypes]
  -[DADiscoveryConfiguration presenceOnly]


DADiscovery : NSObject <CUXPCCodable>
 @property  unsigned int clientID
 @property  DADiscoveryConfiguration *configuration
 @property  BOOL direct
 @property  NSObject<OS_xpc_object> *xpcCnx
 @property  NSObject<OS_xpc_object> *xpcListenerEndpoint
 @property  DAAppContext *appContext
 @property  NSArray *discoveredDevices
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? eventHandler

  // instance methods
  -[DADiscovery xpcReceivedMessage:]
  -[DADiscovery setConfiguration:]
  -[DADiscovery encodeWithXPCObject:]
  -[DADiscovery activate]
  -[DADiscovery _activateXPCStart:]
  -[DADiscovery _activateXPCCompleted:]
  -[DADiscovery eventHandler]
  -[DADiscovery initWithXPCObject:error:]
  -[DADiscovery clientID]
  -[DADiscovery setClientID:]
  -[DADiscovery _xpcReceivedMessage:]
  -[DADiscovery discoveredDevices]
  -[DADiscovery configuration]
  -[DADiscovery .cxx_destruct]
  -[DADiscovery setXpcListenerEndpoint:]
  -[DADiscovery initWithConfiguration:error:]
  -[DADiscovery setEventHandler:]
  -[DADiscovery direct]
  -[DADiscovery setDispatchQueue:]
  -[DADiscovery dispatchQueue]
  -[DADiscovery xpcCnx]
  -[DADiscovery _invalidated]
  -[DADiscovery _interrupted]
  -[DADiscovery xpcListenerEndpoint]
  -[DADiscovery setXpcCnx:]
  -[DADiscovery descriptionWithLevel:]
  -[DADiscovery invalidate]
  -[DADiscovery _ensureXPCStarted]
  -[DADiscovery init]
  -[DADiscovery setDirect:]
  -[DADiscovery appContext]
  -[DADiscovery setAppContext:]
  -[DADiscovery getAuthorizedDevices:]
  -[DADiscovery setState:device:completionHandler:]
  -[DADiscovery _activateDirect]
  -[DADiscovery _reportEvent:]
  -[DADiscovery _reportEventType:]
  -[DADiscovery _getAuthorizedDevicesCompleted:completionHandler:]
  -[DADiscovery setState:device:simulateApp:completionHandler:]
  -[DADiscovery _xpcReceivedDAEvent:]
  -[DADiscovery _xpcReceivedDeviceEvent:]
  -[DADiscovery _startExtensions:]
  -[DADiscovery _stopExtensons]
  -[DADiscovery _updateNEPolicy:remove:]
  -[DADiscovery _uuidFromExtension:]


DADiscoveryExtension : NSObject <DADiscoveryExtensionXPCProtocolHost>
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  _EXExtensionIdentity *ekExtension
 @property  @? invalidationHandler
 @property  DADiscovery *parent

  // instance methods
  -[DADiscoveryExtension setInvalidationHandler:]
  -[DADiscoveryExtension activate]
  -[DADiscoveryExtension setParent:]
  -[DADiscoveryExtension _invalidate]
  -[DADiscoveryExtension _activate]
  -[DADiscoveryExtension .cxx_destruct]
  -[DADiscoveryExtension setDispatchQueue:]
  -[DADiscoveryExtension dispatchQueue]
  -[DADiscoveryExtension _invalidated]
  -[DADiscoveryExtension _interrupted]
  -[DADiscoveryExtension reportEvent:]
  -[DADiscoveryExtension invalidate]
  -[DADiscoveryExtension invalidationHandler]
  -[DADiscoveryExtension parent]
  -[DADiscoveryExtension ekExtension]
  -[DADiscoveryExtension setEkExtension:]


DAEndpoint : NSObject
 @property  unsigned long addTicks
 @property  BOOL grouped
 @property  DADevice *parentDevice
 @property  NSDictionary *persistentDictionaryRepresentation
 @property  BOOL selected
 @property  NSString *airplayDeviceID
 @property  NSString *bonjourFullName
 @property  NSString *bonjourHostname
 @property  NSString *bonjourName
 @property  NSString *bonjourType
 @property  unsigned int bonjourInterfaceIndex
 @property  NSString *identifier
 @property  NSString *ipv4String
 @property  NSString *name
 @property  BOOL missing
 @property  NSString *protocolTypeString
 @property  DADevice *underlyingDADevice
 @property  NSDictionary *userInfo

  // instance methods
  -[DAEndpoint setGrouped:]
  -[DAEndpoint identifier]
  -[DAEndpoint setUserInfo:]
  -[DAEndpoint userInfo]
  -[DAEndpoint setSelected:]
  -[DAEndpoint .cxx_destruct]
  -[DAEndpoint ipv4String]
  -[DAEndpoint setIdentifier:]
  -[DAEndpoint setName:]
  -[DAEndpoint descriptionWithLevel:]
  -[DAEndpoint setIpv4String:]
  -[DAEndpoint name]
  -[DAEndpoint grouped]
  -[DAEndpoint selected]
  -[DAEndpoint underlyingDADevice]
  -[DAEndpoint setBonjourFullName:]
  -[DAEndpoint setUnderlyingDADevice:]
  -[DAEndpoint setProtocolTypeString:]
  -[DAEndpoint airplayDeviceID]
  -[DAEndpoint setAirplayDeviceID:]
  -[DAEndpoint updateWithEndpoint:]
  -[DAEndpoint bonjourName]
  -[DAEndpoint setBonjourName:]
  -[DAEndpoint missing]
  -[DAEndpoint initWithPersistentDictionaryRepresentation:error:]
  -[DAEndpoint persistentDictionaryRepresentation]
  -[DAEndpoint matchesSelectedEndpoint:allowName:]
  -[DAEndpoint mergeMissingInfoFromEndpoint:]
  -[DAEndpoint sameDeviceAsEndpoint:]
  -[DAEndpoint bonjourFullName]
  -[DAEndpoint bonjourHostname]
  -[DAEndpoint setBonjourHostname:]
  -[DAEndpoint bonjourType]
  -[DAEndpoint setBonjourType:]
  -[DAEndpoint bonjourInterfaceIndex]
  -[DAEndpoint setBonjourInterfaceIndex:]
  -[DAEndpoint protocolTypeString]
  -[DAEndpoint addTicks]
  -[DAEndpoint setAddTicks:]
  -[DAEndpoint parentDevice]
  -[DAEndpoint setParentDevice:]


DAEvent : NSObject <CUXPCCodable, NSSecureCoding>
 @property  NSError *error
 @property  long long eventType

  // class methods
  +[DAEvent supportsSecureCoding]
  +[DAEvent allocInitWithXPCObject:error:]

  // instance methods
  -[DAEvent encodeWithXPCObject:]
  -[DAEvent initWithXPCObject:error:]
  -[DAEvent initWithEventType:]
  -[DAEvent encodeWithCoder:]
  -[DAEvent error]
  -[DAEvent .cxx_destruct]
  -[DAEvent eventType]
  -[DAEvent descriptionWithLevel:]
  -[DAEvent initWithCoder:]
  -[DAEvent initWithEventType:error:]


DADeviceEvent : DAEventDevice

DAEventDevice : DAEvent
 @property  DADevice *device

  // class methods
  +[DAEventDevice supportsSecureCoding]

  // instance methods
  -[DAEventDevice encodeWithXPCObject:]
  -[DAEventDevice initWithXPCObject:error:]
  -[DAEventDevice encodeWithCoder:]
  -[DAEventDevice .cxx_destruct]
  -[DAEventDevice device]
  -[DAEventDevice descriptionWithLevel:]
  -[DAEventDevice initWithCoder:]
  -[DAEventDevice initWithEventType:device:]


DAEventDevicesPresent : DAEvent
 @property  BOOL devicesPresent

  // instance methods
  -[DAEventDevicesPresent encodeWithXPCObject:]
  -[DAEventDevicesPresent initWithXPCObject:error:]
  -[DAEventDevicesPresent descriptionWithLevel:]
  -[DAEventDevicesPresent devicesPresent]
  -[DAEventDevicesPresent initWithPresent:]


DADiscoveryExtensionSession : NSObject
 @property  @? eventHandler

  // instance methods
  -[DADiscoveryExtensionSession eventHandler]
  -[DADiscoveryExtensionSession .cxx_destruct]
  -[DADiscoveryExtensionSession setEventHandler:]
  -[DADiscoveryExtensionSession reportEvent:]
  -[DADiscoveryExtensionSession invalidate]


DADeviceStateRecord : NSObject
 @property  NSString *state
 @property  NSNumber *time

  // instance methods
  -[DADeviceStateRecord time]
  -[DADeviceStateRecord state]
  -[DADeviceStateRecord setTime:]
  -[DADeviceStateRecord .cxx_destruct]
  -[DADeviceStateRecord isEqual:]
  -[DADeviceStateRecord setState:]
  -[DADeviceStateRecord initWithState:andTime:]
  -[DADeviceStateRecord timeIntervelBetweenState:]
  -[DADeviceStateRecord stateTransitionAsString:]


DADeviceAccessAnalytics : nil
  // class methods
  +[DADeviceAccessAnalytics sendAnalyticsInfo:forEvent:withDeviceIdentifier:]
  +[DADeviceAccessAnalytics sendAnalytics:forEvent:]
  +[DADeviceAccessAnalytics markSessionActivationForPid:atTime:]
  +[DADeviceAccessAnalytics markSessionInvalidationForPid:atTime:]
  +[DADeviceAccessAnalytics markState:forDeviceId:atTime:]


DASession : NSObject <CUXPCCodable>
 @property  unsigned int clientID
 @property  NSObject<OS_xpc_object> *xpcCnx
 @property  NSObject<OS_xpc_object> *xpcListenerEndpoint
 @property  DAAppContext *appContext
 @property  NSString *bundleID
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? eventHandler

  // class methods
  +[DASession setState:device:session:error:]
  +[DASession setState:device:session:simulateApp:error:]
  +[DASession diagnosticShow:error:]
  +[DASession diagnosticShow:endpoint:error:]
  +[DASession networkingAllowedWithUUID:error:]
  +[DASession processAllowedWithAuditToken:error:]

  // instance methods
  -[DASession xpcReceivedMessage:]
  -[DASession encodeWithXPCObject:]
  -[DASession activate]
  -[DASession _activateXPCCompleted:]
  -[DASession eventHandler]
  -[DASession initWithXPCObject:error:]
  -[DASession clientID]
  -[DASession setClientID:]
  -[DASession _xpcReceivedMessage:]
  -[DASession setBundleID:]
  -[DASession _xpcListenerEvent:]
  -[DASession .cxx_destruct]
  -[DASession setXpcListenerEndpoint:]
  -[DASession setEventHandler:]
  -[DASession setDispatchQueue:]
  -[DASession dispatchQueue]
  -[DASession xpcCnx]
  -[DASession _invalidated]
  -[DASession _interrupted]
  -[DASession _xpcConnectionAccept:]
  -[DASession xpcListenerEndpoint]
  -[DASession setXpcCnx:]
  -[DASession descriptionWithLevel:]
  -[DASession invalidate]
  -[DASession bundleID]
  -[DASession _ensureXPCStarted]
  -[DASession init]
  -[DASession appContext]
  -[DASession getAuthorizedDevices:]
  -[DASession setState:device:completionHandler:]
  -[DASession appIsUsingDeviceAccess]
  -[DASession _reportEvent:]
  -[DASession _reportEventType:]
  -[DASession _getAuthorizedDevicesCompleted:completionHandler:]
  -[DASession setState:device:simulateApp:completionHandler:]
  -[DASession _xpcReceivedDAEvent:]
  -[DASession _activateStart:]
  -[DASession bluetoothAccessInfoAndReturnError:]
  -[DASession getBluetoothAccessInfoWithCompletionHandler:]
  -[DASession _getBluetoothAccessInfoCompleted:completionHandler:]
  -[DASession diagnosticShow:completionHandler:]


DASimulatedDeviceClient : NSObject
 @property  NSString *deviceBonjourServiceType
 @property  NSObject<OS_dispatch_queue> *dispatchQueue

  // instance methods
  -[DASimulatedDeviceClient activate]
  -[DASimulatedDeviceClient .cxx_destruct]
  -[DASimulatedDeviceClient setDispatchQueue:]
  -[DASimulatedDeviceClient dispatchQueue]
  -[DASimulatedDeviceClient _invalidated]
  -[DASimulatedDeviceClient descriptionWithLevel:]
  -[DASimulatedDeviceClient invalidate]
  -[DASimulatedDeviceClient init]
  -[DASimulatedDeviceClient deviceBonjourServiceType]
  -[DASimulatedDeviceClient setDeviceBonjourServiceType:]


DASimulatedDeviceDiscovery : NSObject
 @property  NSString *deviceBonjourServiceType
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? eventHandler

  // instance methods
  -[DASimulatedDeviceDiscovery activate]
  -[DASimulatedDeviceDiscovery eventHandler]
  -[DASimulatedDeviceDiscovery _activate]
  -[DASimulatedDeviceDiscovery .cxx_destruct]
  -[DASimulatedDeviceDiscovery setEventHandler:]
  -[DASimulatedDeviceDiscovery setDispatchQueue:]
  -[DASimulatedDeviceDiscovery dispatchQueue]
  -[DASimulatedDeviceDiscovery _invalidated]
  -[DASimulatedDeviceDiscovery descriptionWithLevel:]
  -[DASimulatedDeviceDiscovery invalidate]
  -[DASimulatedDeviceDiscovery init]
  -[DASimulatedDeviceDiscovery deviceBonjourServiceType]
  -[DASimulatedDeviceDiscovery setDeviceBonjourServiceType:]
  -[DASimulatedDeviceDiscovery _bluetoothEnsureStarted]
  -[DASimulatedDeviceDiscovery _bluetoothEnsureStopped]
  -[DASimulatedDeviceDiscovery _bluetoothFoundDevice:]
  -[DASimulatedDeviceDiscovery _bluetoothLostDevice:]
  -[DASimulatedDeviceDiscovery _bonjourEnsureStarted]
  -[DASimulatedDeviceDiscovery _bonjourEnsureStopped]
  -[DASimulatedDeviceDiscovery _bonjourFoundDevice:]
  -[DASimulatedDeviceDiscovery _bonjourLostDevice:]


DASimulatedDeviceServer : NSObject
 @property  NSString *deviceBonjourServiceType
 @property  NSString *deviceIdentitifer
 @property  NSString *deviceName
 @property  NSObject<OS_dispatch_queue> *dispatchQueue

  // instance methods
  -[DASimulatedDeviceServer activate]
  -[DASimulatedDeviceServer setDeviceName:]
  -[DASimulatedDeviceServer _invalidate]
  -[DASimulatedDeviceServer _activate]
  -[DASimulatedDeviceServer .cxx_destruct]
  -[DASimulatedDeviceServer setDispatchQueue:]
  -[DASimulatedDeviceServer dispatchQueue]
  -[DASimulatedDeviceServer _invalidated]
  -[DASimulatedDeviceServer descriptionWithLevel:]
  -[DASimulatedDeviceServer invalidate]
  -[DASimulatedDeviceServer deviceName]
  -[DASimulatedDeviceServer init]
  -[DASimulatedDeviceServer deviceBonjourServiceType]
  -[DASimulatedDeviceServer setDeviceBonjourServiceType:]
  -[DASimulatedDeviceServer _connectionAccept:]
  -[DASimulatedDeviceServer _connectionEnded:]
  -[DASimulatedDeviceServer deviceIdentitifer]
  -[DASimulatedDeviceServer setDeviceIdentitifer:]


01 00 0100 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBUUID 
01 00 0200 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUBonjourAdvertiser 
01 00 0200 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUBonjourBrowser 
01 00 0200 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUCoalescer 
01 00 0200 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUTCPServer 
01 00 0a00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationExtensionRecord 
01 00 0a00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleRecord 
01 00 0500 /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension: NEPolicy 
01 00 0500 /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension: NEPolicyCondition 
01 00 0500 /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension: NEPolicyResult 
01 00 0500 /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension: NEPolicySession 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0400 /System/Library/Frameworks/Network.framework/Network: NWAddressEndpoint 
01 00 0400 /System/Library/Frameworks/Network.framework/Network: NWEndpoint 
01 00 0c00 /System/Library/Frameworks/UniformTypeIdentifiers.framework/UniformTypeIdentifiers: UTType 
01 00 0b00 /System/Library/Frameworks/ExtensionFoundation.framework/ExtensionFoundation: _EXQuery 
01 00 0b00 /System/Library/Frameworks/ExtensionFoundation.framework/ExtensionFoundation: _EXQueryController 
