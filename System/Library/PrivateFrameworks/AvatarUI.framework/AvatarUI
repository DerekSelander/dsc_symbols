|| __DATA.__data _kAVTEditingModelDefinitionsCameraKey
|| __DATA.__data _kAVTEditingModelDefinitionsCameraOverridesKey
|| __DATA.__data _kAVTEditingModelDefinitionsCategoriesKey
|| __DATA.__data _kAVTEditingModelDefinitionsCategoryNameKey
|| __DATA.__data _kAVTEditingModelDefinitionsCategoryPickersKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorDefaultsDefinitionsKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorDefaultsKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorDefaultsMappingKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorNameKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorPickerAlwaysExtendedKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorPickerExtendedColorsKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorPickerPaletteKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorPickerPrimaryColorsKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorPickersKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorRangeKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorRangeMaxKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorRangeMinKey
|| __DATA.__data _kAVTEditingModelDefinitionsColorShowSliderKey
|| __DATA.__data _kAVTEditingModelDefinitionsDisplayConditionKey
|| __DATA.__data _kAVTEditingModelDefinitionsDisplayConditionSectionIndexKey
|| __DATA.__data _kAVTEditingModelDefinitionsDisplayConditionValueKey
|| __DATA.__data _kAVTEditingModelDefinitionsDisplayModeKey
|| __DATA.__data _kAVTEditingModelDefinitionsGroupNameKey
|| __DATA.__data _kAVTEditingModelDefinitionsGroupSymbolDarkKey
|| __DATA.__data _kAVTEditingModelDefinitionsGroupSymbolKey
|| __DATA.__data _kAVTEditingModelDefinitionsGroupsKey
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorAllowsRemoval
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorAuxiliaryPicker
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorAuxiliaryPickerItemIdentifier
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorAuxiliaryPickerItemMessage
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorAuxiliaryPickerItemTitle
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorAuxiliaryPickerItems
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorAuxiliaryPickerType
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorNestedPresetPickers
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorNestedPresetPickersCategory
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorNestedPresetPickersIndex
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorPickerDestinationKey
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorPickerInitialState
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorPickersKey
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorSubpickers
|| __DATA.__data _kAVTEditingModelDefinitionsMulticolorSubtitles
|| __DATA.__data _kAVTEditingModelDefinitionsOptionsKey
|| __DATA.__data _kAVTEditingModelDefinitionsPairTitleKey
|| __DATA.__data _kAVTEditingModelDefinitionsPairedCategoryKey
|| __DATA.__data _kAVTEditingModelDefinitionsPairedDescriptionKey
|| __DATA.__data _kAVTEditingModelDefinitionsPairedTitleKey
|| __DATA.__data _kAVTEditingModelDefinitionsPairingKey
|| __DATA.__data _kAVTEditingModelDefinitionsPlatformOverrideKey
|| __DATA.__data _kAVTEditingModelDefinitionsPlatformiOSKey
|| __DATA.__data _kAVTEditingModelDefinitionsPoseOverrideKey
|| __DATA.__data _kAVTEditingModelDefinitionsPrereleaseCategoriesKey
|| __DATA.__data _kAVTEditingModelDefinitionsPresetOverridesKey
|| __DATA.__data _kAVTEditingModelDefinitionsPresetPickersKey
|| __DATA.__data _kAVTEditingModelDefinitionsPreviewModeKey
|| __DATA.__data _kAVTEditingModelDefinitionsPreviewModeOptionsBodyPosePackKey
|| __DATA.__data _kAVTEditingModelDefinitionsPreviewModeOptionsCameraKey
|| __DATA.__data _kAVTEditingModelDefinitionsPreviewModeOptionsKey
|| __DATA.__data _kAVTEditingModelDefinitionsPreviewModeTypeKey
|| __DATA.__data _kAVTEditingModelDefinitionsSeparatorKey
|| __DATA.__data _kAVTEditingModelDefinitionsShowsLabelKey
|| __DATA.__data _kAVTEditingModelDefinitionsSortingKey
|| __DATA.__data _kAVTEditingModelDefinitionsStickerConfigurationKey
|| __DATA.__data _kAVTEditingModelDefinitionsStickerConfigurationNameKey
|| __DATA.__data _kAVTEditingModelDefinitionsStickerConfigurationPackKey
|| __DATA.__data _kAVTEditingModelDefinitionsTagsKey
|| __DATA.__data _kAVTEditingModelDefinitionsTitleKey
|| __DATA.__data _kAVTEditingModelDefinitionsUnpairTitleKey
|| __DATA.__data _kAVTEditingModelDefinitionsUnpairedDescriptionKey
|| __DATA.__data _kAVTGroupOutfitNameValue
|| __DATA.__data _sIndexSetToIndexPaths
|| __DATA.__objc_data _OBJC_CLASS_$_AVTActionsToAttributeEditorTransitionAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAdaptativeLayoutView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAggregateCacheableResource
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAlertController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAnimojiPoseSelectionHeaderViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTArrayPairClassification
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAttributeEditorToActionsTransitionAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAttributeLabelView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAttributeSectionSeparator
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarActionButton
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarActionsMenuController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarActionsProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarActionsRecordUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarActionsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarActionsViewControllerLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarActionsViewControllerPadLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarActionsViewControllerTransitionPadStartingLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarActionsViewControllerTransitionStartingLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorCategory
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorColorSection
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorDefaultMacLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorDefaultPortraitLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorDefaultPortraitPadLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorFlowLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorLayoutProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorModel
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorModelDiff
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorModelManager
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorMulticolorPickerSection
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorMulticolorPickerSectionItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorMulticolorSectionPickerController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorMulticolorSectionProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorOverridingLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorPreloader
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorPreviewMode
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorPreviewModeOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorSection
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorSectionColorDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorSectionColorItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorSectionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorSectionItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorSectionOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorSectionSupplementalPicker
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorSectionSupplementalPickerItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorState
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarCellToLiveTransition
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarCellToStaticTransition
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarColorVariationStore
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarConfigurationImageRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarConfigurationMetric
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarEditorColorDefaultsProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarEditorColorsState
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarEditorStateUpdaterFactory
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarEditorViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarImageRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarInlineActionsController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarLibraryCollectionViewAddCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarLibraryCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarLibraryCreateNewItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarLibraryHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarLibraryModel
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarLibraryRecordItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarLibraryViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarListCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarListImageItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarListRecordItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarListViewItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarPickerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarRecordCacheableResource
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarRecordCacheableResourceChangeToken
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarRecordDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarRecordImageProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarRemoteImageRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarSettingKindValue
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarToLiveTransition
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarToStaticTransition
|| __DATA.__objc_data _OBJC_CLASS_$_AVTAvatarUpdaterFactory
|| __DATA.__objc_data _OBJC_CLASS_$_AVTBodyCarouselController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCameraCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCameraItemView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCaptureButtonView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCarouselPlusButtonView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCategorySegmentedControl
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCenteringCollectionViewDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCenteringCollectionViewHelper
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCircularButton
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCircularView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTClippableImageStore
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoalescingInvertingTaskScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCollapsibleHeaderController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTColorLayerProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AVTComponentFactory
|| __DATA.__objc_data _OBJC_CLASS_$_AVTConcurrentTransitionScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_AVTConfigurationPreset
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreAnalyticsClient
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModel
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelCategory
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelColor
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelColorVariation
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelColorsPicker
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelFramingModeOverrides
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelGroup
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelMulticolorAuxilaryPickerItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelMulticolorAuxiliaryPicker
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelMulticolorPicker
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelPairing
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelPickerDisplayCondition
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelPickerOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelPreset
|| __DATA.__objc_data _OBJC_CLASS_$_AVTCoreModelPresetsPicker
|| __DATA.__objc_data _OBJC_CLASS_$_AVTDeviceResourceManager
|| __DATA.__objc_data _OBJC_CLASS_$_AVTDifferentialPrivacyRecorder
|| __DATA.__objc_data _OBJC_CLASS_$_AVTEdgeDisappearingCollectionViewLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTEditingModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_AVTEditingModelColors
|| __DATA.__objc_data _OBJC_CLASS_$_AVTEditingModelDefinitionsParser
|| __DATA.__objc_data _OBJC_CLASS_$_AVTEditingModelMappings
|| __DATA.__objc_data _OBJC_CLASS_$_AVTEditingPreviewMode
|| __DATA.__objc_data _OBJC_CLASS_$_AVTEditingPreviewModeOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AVTEngagementLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTEngagementListCollectionViewLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTFaceTrackingManager
|| __DATA.__objc_data _OBJC_CLASS_$_AVTFixedSizeViewContainer
|| __DATA.__objc_data _OBJC_CLASS_$_AVTFlippingCollectionViewFlowLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTFunCamAvatarPickerCollectionViewLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTFunCamAvatarPickerStyle
|| __DATA.__objc_data _OBJC_CLASS_$_AVTGradientView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTGrayscaleStickerController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTGroupDialCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTGroupDialMaskingView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTGroupListCollectionView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTGroupListCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTGroupPickerItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTHEICImageIOImageEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_AVTHEIFImageEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_AVTIconImageProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AVTImageTransitioningContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTImageValidator
|| __DATA.__objc_data _OBJC_CLASS_$_AVTImageValidatorConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AVTImmediateTaskScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_AVTInMemoryImageCache
|| __DATA.__objc_data _OBJC_CLASS_$_AVTInMemoryResourceCache
|| __DATA.__objc_data _OBJC_CLASS_$_AVTInMemoryResourceCacheEntry
|| __DATA.__objc_data _OBJC_CLASS_$_AVTJPEGImageEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_AVTMSStickerView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTMinimumContentSizeCollectionViewLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTMultiAvatarController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTMutableEditingModelColors
|| __DATA.__objc_data _OBJC_CLASS_$_AVTNotifyingContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTOrderedIndexBasedTaskScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_AVTPNGImageEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_AVTPaddlePathGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_AVTPaddleView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTPassThroughResourceCache
|| __DATA.__objc_data _OBJC_CLASS_$_AVTPoseCaptureViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTPoseCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTPresetImageProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AVTPresetResourceLoader
|| __DATA.__objc_data _OBJC_CLASS_$_AVTPresetResources
|| __DATA.__objc_data _OBJC_CLASS_$_AVTPresetResourcesLoadingTask
|| __DATA.__objc_data _OBJC_CLASS_$_AVTRenderingScope
|| __DATA.__objc_data _OBJC_CLASS_$_AVTResourceCacheSupport
|| __DATA.__objc_data _OBJC_CLASS_$_AVTSCNNodeModifications
|| __DATA.__objc_data _OBJC_CLASS_$_AVTSectionItemLoadingTask
|| __DATA.__objc_data _OBJC_CLASS_$_AVTSectionItemTransition
|| __DATA.__objc_data _OBJC_CLASS_$_AVTSerialTaskScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_AVTShadowView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTSimpleAvatarPickerCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTSingleAvatarController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTSplashScreenConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AVTSplashScreenLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerConfigurationProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerImageEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerPagingCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerRecentsButtonCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerRecentsButtonItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerRecentsLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerRecentsMigrator
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerRecentsOverlayView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerRecentsOverlayViewLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerRecentsPlaceholderItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerRecentsPresetsProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerRecentsStickerCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerRecentsStickerItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerResource
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerSheetCollectionView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerSheetModel
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerTask
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerTaskScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_AVTStickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTSynchronousTransitionScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_AVTToolBar
|| __DATA.__objc_data _OBJC_CLASS_$_AVTToolbarButton
|| __DATA.__objc_data _OBJC_CLASS_$_AVTTouchDownGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_AVTTransition
|| __DATA.__objc_data _OBJC_CLASS_$_AVTTransitionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_AVTTransitionSchedulerFactory
|| __DATA.__objc_data _OBJC_CLASS_$_AVTTransparentNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_AVTTwoLevelsImageCache
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIAnimatingImageView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUICapabilities
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIColorRepository
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIControllerPresentation
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIEnvironment
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIFontRepository
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIImageRenderService
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIImageUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUINSURL
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIRaiseGestureManager
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIStickerGeneratorPool
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIStickerItem
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIStickerPlaceholderProviderFactory
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIStickerRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUIStyle
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUITraitCollectionHelper
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUsageTracker
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUsageTrackingRecordTimedEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUsageTrackingSession
|| __DATA.__objc_data _OBJC_CLASS_$_AVTUserInfoView
|| __DATA.__objc_data _OBJC_CLASS_$_AVTViewCarouselLayout
|| __DATA.__objc_data _OBJC_CLASS_$_AVTViewSession
|| __DATA.__objc_data _OBJC_CLASS_$_AVTViewSessionProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AVTViewThrottler
|| __DATA.__objc_data _OBJC_CLASS_$_AVTViewUpdater
|| __DATA.__objc_data _OBJC_CLASS_$_AVTZIndexEngagementListCollectionViewLayout
|| __DATA.__objc_data _OBJC_CLASS_$_CAShapeLayerAnimated
|| __DATA.__objc_data _OBJC_CLASS_$__AVTAdaptiveFullSizeLayout
|| __DATA.__objc_data _OBJC_CLASS_$__AVTAvatarRecordImageProvider
|| __DATA.__objc_data _OBJC_CLASS_$__AVTAvatarToLiveNoTransition
|| __DATA.__objc_data _OBJC_CLASS_$__AVTAvatarToStaticNoTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTActionsToAttributeEditorTransitionAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAdaptativeLayoutView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAggregateCacheableResource
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAnimojiPoseSelectionHeaderViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTArrayPairClassification
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAttributeEditorToActionsTransitionAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAttributeLabelView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAttributeSectionSeparator
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarActionButton
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarActionsMenuController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarActionsProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarActionsRecordUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarActionsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarActionsViewControllerLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarActionsViewControllerPadLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarActionsViewControllerTransitionPadStartingLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarActionsViewControllerTransitionStartingLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorColorSection
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorDefaultMacLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorDefaultPortraitLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorDefaultPortraitPadLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorFlowLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorLayoutProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorModel
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorModelDiff
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorModelManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorMulticolorPickerSection
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorMulticolorPickerSectionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorMulticolorSectionPickerController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorMulticolorSectionProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorOverridingLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorPreloader
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorPreviewMode
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorPreviewModeOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorSection
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorSectionColorDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorSectionColorItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorSectionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorSectionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorSectionOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorSectionSupplementalPicker
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorSectionSupplementalPickerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorState
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarCellToLiveTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarCellToStaticTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarColorVariationStore
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarConfigurationImageRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarConfigurationMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarEditorColorDefaultsProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarEditorColorsState
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarEditorStateUpdaterFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarEditorViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarImageRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarInlineActionsController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarLibraryCollectionViewAddCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarLibraryCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarLibraryCreateNewItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarLibraryHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarLibraryModel
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarLibraryRecordItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarLibraryViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarListCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarListImageItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarListRecordItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarListViewItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarPickerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarRecordCacheableResource
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarRecordCacheableResourceChangeToken
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarRecordDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarRecordImageProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarRemoteImageRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarSettingKindValue
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarToLiveTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarToStaticTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTAvatarUpdaterFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTBodyCarouselController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCameraCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCameraItemView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCaptureButtonView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCarouselPlusButtonView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCategorySegmentedControl
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCenteringCollectionViewDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCenteringCollectionViewHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCircularButton
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCircularView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTClippableImageStore
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoalescingInvertingTaskScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCollapsibleHeaderController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTColorLayerProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTComponentFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTConcurrentTransitionScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTConfigurationPreset
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreAnalyticsClient
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModel
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelColor
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelColorVariation
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelColorsPicker
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelFramingModeOverrides
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelMulticolorAuxilaryPickerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelMulticolorAuxiliaryPicker
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelMulticolorPicker
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelPairing
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelPickerDisplayCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelPickerOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelPreset
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTCoreModelPresetsPicker
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTDeviceResourceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTDifferentialPrivacyRecorder
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTEdgeDisappearingCollectionViewLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTEditingModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTEditingModelColors
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTEditingModelDefinitionsParser
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTEditingModelMappings
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTEditingPreviewMode
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTEditingPreviewModeOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTEngagementLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTEngagementListCollectionViewLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTFaceTrackingManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTFixedSizeViewContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTFlippingCollectionViewFlowLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTFunCamAvatarPickerCollectionViewLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTFunCamAvatarPickerStyle
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTGradientView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTGrayscaleStickerController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTGroupDialCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTGroupDialMaskingView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTGroupListCollectionView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTGroupListCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTGroupPickerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTHEICImageIOImageEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTHEIFImageEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTIconImageProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTImageTransitioningContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTImageValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTImageValidatorConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTImmediateTaskScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTInMemoryImageCache
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTInMemoryResourceCache
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTInMemoryResourceCacheEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTJPEGImageEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTMSStickerView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTMinimumContentSizeCollectionViewLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTMultiAvatarController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTMutableEditingModelColors
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTNotifyingContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTOrderedIndexBasedTaskScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTPNGImageEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTPaddlePathGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTPaddleView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTPassThroughResourceCache
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTPoseCaptureViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTPoseCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTPresetImageProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTPresetResourceLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTPresetResources
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTPresetResourcesLoadingTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTRenderingScope
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTResourceCacheSupport
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTSCNNodeModifications
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTSectionItemLoadingTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTSectionItemTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTSerialTaskScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTShadowView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTSimpleAvatarPickerCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTSingleAvatarController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTSplashScreenConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTSplashScreenLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerConfigurationProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerImageEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerPagingCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerRecentsButtonCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerRecentsButtonItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerRecentsLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerRecentsMigrator
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerRecentsOverlayView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerRecentsOverlayViewLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerRecentsPlaceholderItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerRecentsPresetsProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerRecentsStickerCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerRecentsStickerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerResource
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerSheetCollectionView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerSheetModel
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerTaskScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTStickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTSynchronousTransitionScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTToolBar
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTToolbarButton
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTTouchDownGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTTransitionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTTransitionSchedulerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTTransparentNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTTwoLevelsImageCache
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIAnimatingImageView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUICapabilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIColorRepository
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIControllerPresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIEnvironment
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIFontRepository
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIImageRenderService
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIImageUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUINSURL
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIRaiseGestureManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIStickerGeneratorPool
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIStickerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIStickerPlaceholderProviderFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIStickerRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUIStyle
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUITraitCollectionHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUsageTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUsageTrackingRecordTimedEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUsageTrackingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTUserInfoView
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTViewCarouselLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTViewSession
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTViewSessionProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTViewThrottler
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTViewUpdater
|| __DATA.__objc_data _OBJC_METACLASS_$_AVTZIndexEngagementListCollectionViewLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_CAShapeLayerAnimated
|| __DATA.__objc_data _OBJC_METACLASS_$__AVTAdaptiveFullSizeLayout
|| __DATA.__objc_data _OBJC_METACLASS_$__AVTAvatarRecordImageProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__AVTAvatarToLiveNoTransition
|| __DATA.__objc_data _OBJC_METACLASS_$__AVTAvatarToStaticNoTransition
|| __DATA_CONST.__const _AVTCameraCellIdentifier
|| __DATA_CONST.__const _AVTCameraStickerItem
|| __DATA_CONST.__const _AVTMemojiAssetUsedKey
|| __DATA_CONST.__const _AVTRenderingScopeFramingModeKey
|| __DATA_CONST.__const _AVTRenderingScopePoseKey
|| __DATA_CONST.__const _AVTRenderingScopeRenderingTypeKey
|| __DATA_CONST.__const _AVTRenderingScopeScaleKey
|| __DATA_CONST.__const _AVTRenderingScopeSizeKey
|| __DATA_CONST.__const _AVTRenderingScopeSizeModifierKey
|| __DATA_CONST.__const _AVTSCNNodeModificationsFieldOfViewKey
|| __DATA_CONST.__const _AVTSCNNodeModificationsFramingModeKey
|| __DATA_CONST.__const _AVTSCNNodeModificationsLensShiftKey
|| __DATA_CONST.__const _AVTSCNNodeModificationsProjectionDirectionKey
|| __DATA_CONST.__const _AVTStickerResourceClippingRectKey
|| __DATA_CONST.__const _AVTStickerResourceImageKey
|| __DATA_CONST.__const _AVTStickerResourceURLKey
|| __DATA_CONST.__const _AVTUITypeMismatchExceptionName
|| __DATA_CONST.__const _AVTViewSessionProviderReleasePrimaryStatusNotification
|| __DATA_CONST.__const _AVTViewSessionProviderTakePrimaryStatusNotification
|| __DATA_CONST.__const _kAVTAnalyticsPayloadAnimojiNameKey
|| __DATA_CONST.__const _kAVTAnalyticsPayloadAppNameKey
|| __DATA_CONST.__const _kAVTAnalyticsPayloadBigDifferenceKey
|| __DATA_CONST.__const _kAVTAnalyticsPayloadComplexityKey
|| __DATA_CONST.__const _kAVTAnalyticsPayloadCountKey
|| __DATA_CONST.__const _kAVTAnalyticsPayloadDurationKey
|| __DATA_CONST.__const _kAVTAnalyticsPayloadExpandedKey
|| __DATA_CONST.__const _kAVTAnalyticsPayloadPeeledKey
|| __DATA_CONST.__const _kAVTAnalyticsPayloadRecordKey
|| __DATA_CONST.__const _kAVTAnalyticsPayloadSmallDifferenceKey
|| __DATA_CONST.__const _kAVTAnalyticsPayloadStickerKey
|| __DATA_CONST.__const _kAVTAnalyticsPayloadTimeKey
|| __DATA_CONST.__const _kAVTCircularButtonCameraImageName
|| __DATA_CONST.__const _kAVTCircularButtonEllipsisImageName
|| __DATA_CONST.__const _kAVTCircularButtonPlusImageName
|| __DATA_CONST.__const _kAVTCircularButtonTrashImageName
|| __DATA_CONST.__const _kAVTCircularButtonXImageName
|| __DATA_CONST.__const _kAVTCoreModelPickerDisplayModeColorHeaderAccessoryString
|| __DATA_CONST.__const _kAVTCoreModelPickerDisplayModeHighlightPickerString
|| __DATA_CONST.__const _kAVTCoreModelPickerSortingDefaultFirstString
|| __DATA_CONST.__const _kAVTCoreModelPickerSortingReversedString
|| __DATA_CONST.__const _kAVTUsageTrackingPrefixAnimoji
|| __DATA_CONST.__const _kAVTUsageTrackingPrefixDefault
|| __DATA_CONST.__const _kAVTUsageTrackingPrefixFuncam
|| __DATA_CONST.__const _kAVTUsageTrackingPrefixMemoji
|| __DATA_CONST.__const _kAVTUsageTrackingPrefixStaryu
|| __DATA_CONST.__const _kAVTUsageTrackingPrefixStickers
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTATXImageIOImageEncoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAttributeCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAttributeEditorSectionHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAttributeLabeledCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAttributeValueView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorMulticolorPickerCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorSectionColorController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorSectionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarAttributeEditorViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarColorSliderContainerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarRecordImageGenerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTAvatarStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTCarouselController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTColorSlider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTColorWheelView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTFunCamAvatarPickerCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTFunCamAvatarPickerController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTFunCamAvatarPickerTitleCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTGroupDial
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTImageIOImageEncoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTImageStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTPoseSelectionGridViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTPoseSelectionViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTRecordingButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTSelectableStickerSheetController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTSimpleAvatarPicker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTSimpleAvatarPickerHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTSplashScreenViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTStickerPagingController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTStickerRecentsViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVTStickerSheetController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTATXImageIOImageEncoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAttributeCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAttributeEditorSectionHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAttributeLabeledCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAttributeValueView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorMulticolorPickerCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorSectionColorController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorSectionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarAttributeEditorViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarColorSliderContainerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarRecordImageGenerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTAvatarStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTCarouselController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTColorSlider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTColorWheelView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTFunCamAvatarPickerCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTFunCamAvatarPickerController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTFunCamAvatarPickerTitleCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTGroupDial
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTImageIOImageEncoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTImageStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTPoseSelectionGridViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTPoseSelectionViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTRecordingButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTSelectableStickerSheetController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTSimpleAvatarPicker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTSimpleAvatarPickerHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTSplashScreenViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTStickerPagingController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTStickerRecentsViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVTStickerSheetController
|| __TEXT.__const _AVTDeviceResourceUnspecifiedDuration
|| __TEXT.__const _AvatarUIVersionNumber
|| __TEXT.__const _AvatarUIVersionString
|| __TEXT.__const _MaxDifferenceCount
|| __TEXT.__text _AVTAvatarEditorPlaceholderSilhouette
|| __TEXT.__text _AVTAvatarEditorSplashVideo
|| __TEXT.__text _AVTAvatarSettingColorIndexForColorDestination
|| __TEXT.__text _AVTAvatarSettingDestinationForColorPickerIndex
|| __TEXT.__text _AVTAvatarSettingKindDescription
|| __TEXT.__text _AVTAvatarSettingKindEqual
|| __TEXT.__text _AVTAvatarSettingKindHash
|| __TEXT.__text _AVTAvatarSettingKindIdentifier
|| __TEXT.__text _AVTAvatarUIBundle
|| __TEXT.__text _AVTColorSettingKind
|| __TEXT.__text _AVTDeviceIsGreenTea
|| __TEXT.__text _AVTFlatSilhouetteImageForTraitCollection
|| __TEXT.__text _AVTFlattenImageWithColor
|| __TEXT.__text _AVTIsRunningInStickersExtension
|| __TEXT.__text _AVTMoreButtonImage
|| __TEXT.__text _AVTOutfitGroupEnabled
|| __TEXT.__text _AVTPlusButtonImage
|| __TEXT.__text _AVTPrereleaseCategoriesEnabled
|| __TEXT.__text _AVTPresetSettingKind
|| __TEXT.__text _AVTRoundToScale
|| __TEXT.__text _AVTRoundToViewScale
|| __TEXT.__text _AVTUIAreAvatarsSupported
|| __TEXT.__text _AVTUIIsFacetrackingSupported
|| __TEXT.__text _AVTUsageTrackingMemojiUsageCategoryWhitelist
|| __TEXT.__text _AVTUsageTrackingMemojiUsageFullKeyForCategory
|| __TEXT.__text _AVTVerticalRangeFromRect
|| __TEXT.__text _AVTVerticalRangeMake
|| __TEXT.__text _differenceCountToDistanceWithImpact
|| __TEXT.__text _distanceToDifferenceCountFromImpact
|| __TEXT.__text _maskForDifferenceImpact
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDevice
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLooper
__ AVFoundation: _OBJC_CLASS_$_AVQueuePlayer
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ AvatarKit: _AVTAnimojiThumbnailCameraKey
__ AvatarKit: _AVTAvatarKitSnapshotVersionNumber
__ AvatarKit: _AVTColorCategoryFromString
__ AvatarKit: _AVTEditorMetadata
__ AvatarKit: _AVTEnumeratePresetCategories
__ AvatarKit: _AVTFramingModeCamera
__ AvatarKit: _AVTFramingModeDefault
__ AvatarKit: _AVTFramingModeFunCamCarousel
__ AvatarKit: _AVTFramingModeGrid
__ AvatarKit: _AVTFramingModeHairstyle
__ AvatarKit: _AVTFramingModeHeadwear
__ AvatarKit: _AVTLocalizedEditorString
__ AvatarKit: _AVTPrereleaseStickerPackForStickerPack
__ AvatarKit: _AVTPresetCategoryFromString
__ AvatarKit: _AVTPresetCategoryToColorCategoryString
__ AvatarKit: _AVTPresetCategoryToString
__ AvatarKit: _AVTSnapshotFramingMode
__ AvatarKit: _AVTSnapshotPose
__ AvatarKit: _AVTSnapshotUpscaleKey
__ AvatarKit: _AVTViewSnapshotDisableSuperSamplingFactorKey
__ AvatarKit: _OBJC_CLASS_$_AVTAnimoji
__ AvatarKit: _OBJC_CLASS_$_AVTAvatarPhysicalizedPose
__ AvatarKit: _OBJC_CLASS_$_AVTAvatarPose
__ AvatarKit: _OBJC_CLASS_$_AVTColorPreset
__ AvatarKit: _OBJC_CLASS_$_AVTImageUtilities
__ AvatarKit: _OBJC_CLASS_$_AVTMemoji
__ AvatarKit: _OBJC_CLASS_$_AVTPreset
__ AvatarKit: _OBJC_CLASS_$_AVTRecordView
__ AvatarKit: _OBJC_CLASS_$_AVTSnapshotBuilder
__ AvatarKit: _OBJC_CLASS_$_AVTStickerConfiguration
__ AvatarKit: _OBJC_CLASS_$_AVTStickerGenerator
__ AvatarKit: _OBJC_CLASS_$_AVTStickerGeneratorOptions
__ AvatarKit: _OBJC_CLASS_$_AVTView
__ AvatarKit: _kAVTStickerPackDefault
__ AvatarKit: _kAVTStickerPackMemojiEditor
__ AvatarKit: _kAVTStickerPackMemojiEditor_Poses
__ AvatarKit: _kAVTStickerPackPoses
__ AvatarKit: _kAVTStickerPackPrerelease
__ AvatarPersistence: _AVTAvatarStoreDidChangeNotification
__ AvatarPersistence: _AVTDefaultFileProtectionDataWritingOptions
__ AvatarPersistence: _AVTDefaultFileProtectionType
__ AvatarPersistence: _AVTUIAdaptativeFrameRate
__ AvatarPersistence: _AVTUIAlwaysShowPaddleView
__ AvatarPersistence: _AVTUIAlwaysShowRecentStickersSplashScreen_once
__ AvatarPersistence: _AVTUIAlwaysShowSplashScreen_once
__ AvatarPersistence: _AVTUIAvatarPreLoadOnLaunch
__ AvatarPersistence: _AVTUIDisableDeleteConfirmation_once
__ AvatarPersistence: _AVTUIDisableEditAfterDuplicate_once
__ AvatarPersistence: _AVTUIEditorMostRecentGroupName
__ AvatarPersistence: _AVTUIEditorSetMostRecentGroupName
__ AvatarPersistence: _AVTUIEditorShowAssetsName_once
__ AvatarPersistence: _AVTUIFlushStickersCache
__ AvatarPersistence: _AVTUIFlushThumbnailCache
__ AvatarPersistence: _AVTUIForceCameraDisclosures_once
__ AvatarPersistence: _AVTUIForceNoMemojiRecentStickersSplashScreen_once
__ AvatarPersistence: _AVTUIGroupDialUsesMasking_once
__ AvatarPersistence: _AVTUIHasDisplayedCameraDisclosureSplashScreen
__ AvatarPersistence: _AVTUIHasDisplayedCategoriesDiscoverability
__ AvatarPersistence: _AVTUIHasDisplayedPaddleView
__ AvatarPersistence: _AVTUIHasDisplayedSplashScreen
__ AvatarPersistence: _AVTUIHasShownStickerRecentsSplashView
__ AvatarPersistence: _AVTUIIsAvatarUIEnabled
__ AvatarPersistence: _AVTUISetFlushStickersCache
__ AvatarPersistence: _AVTUISetFlushThumbnailCache
__ AvatarPersistence: _AVTUISetHasDisplayedCameraDisclosureSplashScreen
__ AvatarPersistence: _AVTUISetHasDisplayedCategoriesDiscoverability
__ AvatarPersistence: _AVTUISetHasDisplayedPaddleView
__ AvatarPersistence: _AVTUISetHasDisplayedSplashScreen
__ AvatarPersistence: _AVTUISetHasShownStickerRecentsSplashView
__ AvatarPersistence: _AVTUISetShowPrereleaseStickerPack
__ AvatarPersistence: _AVTUISetStickerRecentsMigrationVersion
__ AvatarPersistence: _AVTUISetStickersLastSelected
__ AvatarPersistence: _AVTUIShowAssetsWarning_once
__ AvatarPersistence: _AVTUIShowPerfHUD_once
__ AvatarPersistence: _AVTUIShowPrereleaseStickerLabel_once
__ AvatarPersistence: _AVTUIShowPrereleaseStickerPack_once
__ AvatarPersistence: _AVTUIShowTrackingLostReticle_once
__ AvatarPersistence: _AVTUIStickerRecentsMigrationVersion
__ AvatarPersistence: _AVTUIStickerRecentsShowDisclosureWarning
__ AvatarPersistence: _AVTUIStickersCaching
__ AvatarPersistence: _AVTUIStickersLastSelected
__ AvatarPersistence: _AVTUIThumbnailCaching_once
__ AvatarPersistence: _AVTUIUseLocalEditorModel_once
__ AvatarPersistence: _OBJC_CLASS_$_AVTAvatarFetchRequest
__ AvatarPersistence: _OBJC_CLASS_$_AVTAvatarPuppetRecord
__ AvatarPersistence: _OBJC_CLASS_$_AVTAvatarRecord
__ AvatarPersistence: _OBJC_CLASS_$_AVTAvatarRecordRendering
__ AvatarPersistence: _OBJC_CLASS_$_AVTCoreEnvironment
__ AvatarPersistence: _OBJC_CLASS_$_AVTError
__ AvatarPersistence: _OBJC_CLASS_$_AVTPAvatarRecordDataSource
__ AvatarPersistence: _OBJC_CLASS_$_AVTPAvatarStore
__ AvatarPersistence: _OBJC_CLASS_$_AVTStickerFetchRequest
__ AvatarPersistence: _OBJC_CLASS_$_AVTStickerRecord
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_METACLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGPathCreateWithEllipseInRect
__ CoreGraphics: _CGPathCreateWithRect
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathGetBoundingBox
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _kUTTypePNG
__ CoreText: _CTFontDescriptorCreateWithTextStyle
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ FrontBoardServices: _FBSDisplayLayoutElementControlCenterIdentifier
__ FrontBoardServices: _FBSDisplayLayoutElementLockScreenIdentifier
__ FrontBoardServices: _FBSDisplayLayoutElementNotificationCenterIdentifier
__ FrontBoardServices: _FBSDisplayLayoutElementSiriIdentifier
__ FrontBoardServices: _OBJC_CLASS_$_FBSDisplayLayoutMonitor
__ FrontBoardServices: _OBJC_CLASS_$_FBSDisplayLayoutMonitorConfiguration
__ IconServices: _OBJC_CLASS_$_ISIcon
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithDataProvider
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _kCGImagePropertyDPIHeight
__ ImageIO: _kCGImagePropertyDPIWidth
__ ImageIO: _kCGImagePropertyExifDictionary
__ ImageIO: _kCGImagePropertyExifUserComment
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ Messages: _OBJC_CLASS_$_MSSticker
__ Messages: _OBJC_CLASS_$_MSStickerView
__ Messages: _OBJC_METACLASS_$_MSStickerView
__ OnBoardingKit: _OBJC_CLASS_$_OBBoldTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBWelcomeFullCenterContentController
__ OnBoardingKit: _OBJC_METACLASS_$_OBWelcomeFullCenterContentController
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DMakeRotation
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CAShapeLayer
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCAGravityResizeAspectFill
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ SoftLinking: __sl_dlopen
__ UIKit: _CGRectFromString
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UICollectionReusableView
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayoutAttributes
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIImpactFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UIKeyCommand
__ UIKit: _OBJC_CLASS_$_UIKeyboardEmojiGraphicsTraits
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISegmentedControl
__ UIKit: _OBJC_CLASS_$_UISelectionFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UISlider
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$__UIEdgeFeedbackGenerator
__ UIKit: _OBJC_CLASS_$__UIEdgeFeedbackGeneratorConfiguration
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionReusableView
__ UIKit: _OBJC_METACLASS_$_UICollectionView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayout
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UISegmentedControl
__ UIKit: _OBJC_METACLASS_$_UISlider
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIVisualEffectView
__ UIKit: _UICollectionElementKindSectionFooter
__ UIKit: _UICollectionElementKindSectionHeader
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorTraitsAttribute
__ UIKit: _UIFontSymbolicTrait
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleLargeTitle
__ UIKit: _UIFontTextStyleSubhead
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightTrait
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIKeyInputEscape
__ UIKit: _UIPointRoundToScale
__ UIKit: _UIRectCenteredAboutPoint
__ UIKit: _UIRectCenteredAboutPointScale
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectGetCenter
__ UIKit: _UIScrollViewDecelerationRateFast
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextFromViewKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UITransitionContextToViewKey
__ UIKit: __UIScaleTransformForAspectFillOfSizeInTargetSize
__ UIKit: __UIScaleTransformForAspectFitOfSizeInTargetSize
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGIsQuestionValid
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
AVTAvatarLibraryRecordItem : NSObject <AVTAvatarLibraryItem>
 @property  AVTUIEnvironment *environment
 @property  <AVTAvatarRecord> *avatarRecord
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarLibraryRecordItem cellIdentifier]

  // instance methods
  -[AVTAvatarLibraryRecordItem .cxx_destruct]
  -[AVTAvatarLibraryRecordItem environment]
  -[AVTAvatarLibraryRecordItem avatarRecord]
  -[AVTAvatarLibraryRecordItem configureCell:imageProvider:]
  -[AVTAvatarLibraryRecordItem initWithAvatarRecord:environment:]


AVTAvatarAttributeEditorCategory : NSObject <AVTPresetResourcesProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDictionary *symbolNames
 @property  AVTCoreModelGroup *modelGroup
 @property  NSArray *sectionProviders
 @property  NSArray *sections
 @property  NSString *localizedName
 @property  @? symbolNameProvider
 @property  AVTAvatarAttributeEditorPreviewMode *previewMode

  // instance methods
  -[AVTAvatarAttributeEditorCategory .cxx_destruct]
  -[AVTAvatarAttributeEditorCategory localizedName]
  -[AVTAvatarAttributeEditorCategory sections]
  -[AVTAvatarAttributeEditorCategory previewMode]
  -[AVTAvatarAttributeEditorCategory sectionProviders]
  -[AVTAvatarAttributeEditorCategory symbolNames]
  -[AVTAvatarAttributeEditorCategory initWithSectionProviders:localizedName:previewMode:modelGroup:symbolNames:]
  -[AVTAvatarAttributeEditorCategory symbolNameProvider]
  -[AVTAvatarAttributeEditorCategory modelGroup]
  -[AVTAvatarAttributeEditorCategory representedAVTPresetResources]


AVTUIStickerItem : NSObject <AVTDiscardableContent>
 @property  NSString *identifier
 @property  NSString *localizedName
 @property  MSSticker *cachedMSSticker
 @property  BOOL hasBeenRendered
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} clippingRect
 @property  UIImage *cachedImage
 @property  @? resourceProvider
 @property  @? discardableContentHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTUIStickerItem identifier]
  -[AVTUIStickerItem setClippingRect:]
  -[AVTUIStickerItem clippingRect]
  -[AVTUIStickerItem .cxx_destruct]
  -[AVTUIStickerItem localizedName]
  -[AVTUIStickerItem resourceProvider]
  -[AVTUIStickerItem cachedImage]
  -[AVTUIStickerItem setCachedImage:]
  -[AVTUIStickerItem clearCachedItems]
  -[AVTUIStickerItem discardContent]
  -[AVTUIStickerItem discardableContentHandler]
  -[AVTUIStickerItem setDiscardableContentHandler:]
  -[AVTUIStickerItem initWithIdentifier:localizedName:resourceProvider:]
  -[AVTUIStickerItem cachedMSSticker]
  -[AVTUIStickerItem setCachedMSSticker:]
  -[AVTUIStickerItem hasBeenRendered]
  -[AVTUIStickerItem setHasBeenRendered:]


AVTPresetImageProvider : NSObject <AVTDeviceResourceConsumer>
 @property  <AVTImageCache> *cache
 @property  <AVTUILogger> *logger
 @property  AVTAvatarConfigurationImageRenderer *renderer
 @property  <AVTTaskScheduler> *renderingScheduler
 @property  NSObject<OS_dispatch_queue> *presetQueue
 @property  NSObject<OS_dispatch_queue> *colorQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  AVTRenderingScope *colorScope
 @property  AVTRenderingScope *defaultScope
 @property  <AVTDeviceResourceConsumerDelegate> *consumerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTPresetImageProvider presetImageCacheWithEnvironment:]
  +[AVTPresetImageProvider configurationToRenderForPreset:overrides:baseConfiguration:]

  // instance methods
  -[AVTPresetImageProvider logger]
  -[AVTPresetImageProvider callbackQueue]
  -[AVTPresetImageProvider cache]
  -[AVTPresetImageProvider .cxx_destruct]
  -[AVTPresetImageProvider renderer]
  -[AVTPresetImageProvider colorQueue]
  -[AVTPresetImageProvider defaultScope]
  -[AVTPresetImageProvider releaseRenderingResourceForEstimatedDuration:]
  -[AVTPresetImageProvider consumerDelegate]
  -[AVTPresetImageProvider setConsumerDelegate:]
  -[AVTPresetImageProvider initWithRenderingScheduler:environment:]
  -[AVTPresetImageProvider initWithCache:environment:]
  -[AVTPresetImageProvider initWithCache:renderingScheduler:environment:]
  -[AVTPresetImageProvider initWithCache:renderingScheduler:renderingQueueProvider:callbackQueue:renderer:defaultScope:environment:]
  -[AVTPresetImageProvider providerForThumbnailForModelColor:]
  -[AVTPresetImageProvider renderThumbnailForModelColor:]
  -[AVTPresetImageProvider providerForImageForItem:scope:queue:renderingHandler:]
  -[AVTPresetImageProvider providerForThumbnailForModelPreset:presetOverrides:poseOverride:avatarConfiguration:framingMode:]
  -[AVTPresetImageProvider renderingScheduler]
  -[AVTPresetImageProvider presetQueue]
  -[AVTPresetImageProvider colorScope]


AVTAvatarListViewItem : NSObject <AVTAvatarListItem>
 @property  UIView *view
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTAvatarListViewItem view]
  -[AVTAvatarListViewItem .cxx_destruct]
  -[AVTAvatarListViewItem initWithView:]
  -[AVTAvatarListViewItem isEqual:]
  -[AVTAvatarListViewItem downcastWithRecordHandler:viewHandler:]
  -[AVTAvatarListViewItem downcastWithRecordHandler:imageHandler:viewHandler:]


AVTAvatarLibraryCollectionViewCell : UICollectionViewCell
 @property  UIImageView *imageView

  // class methods
  +[AVTAvatarLibraryCollectionViewCell cellIdentifier]

  // instance methods
  -[AVTAvatarLibraryCollectionViewCell .cxx_destruct]
  -[AVTAvatarLibraryCollectionViewCell initWithFrame:]
  -[AVTAvatarLibraryCollectionViewCell imageView]
  -[AVTAvatarLibraryCollectionViewCell updateAvatarImage:]


AVTAlertController : UIAlertController

AVTCenteringCollectionViewDelegate : NSObject <UICollectionViewDelegate>
 @property  UICollectionView *collectionView
 @property  <UICollectionViewDelegate> *delegate
 @property  UISelectionFeedbackGenerator *feedbackGenerator
 @property  {CGPoint=dd} previousOffset
 @property  NSIndexPath *lastHapticOnScrollIndexPath
 @property  <AVTUILogger> *logger
 @property  UICollectionViewLayoutAttributes *centerItemAttributes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTCenteringCollectionViewDelegate setLogger:]
  -[AVTCenteringCollectionViewDelegate logger]
  -[AVTCenteringCollectionViewDelegate methodSignatureForSelector:]
  -[AVTCenteringCollectionViewDelegate scrollViewDidScroll:]
  -[AVTCenteringCollectionViewDelegate setPreviousOffset:]
  -[AVTCenteringCollectionViewDelegate delegate]
  -[AVTCenteringCollectionViewDelegate respondsToSelector:]
  -[AVTCenteringCollectionViewDelegate .cxx_destruct]
  -[AVTCenteringCollectionViewDelegate scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[AVTCenteringCollectionViewDelegate collectionView]
  -[AVTCenteringCollectionViewDelegate previousOffset]
  -[AVTCenteringCollectionViewDelegate forwardingTargetForSelector:]
  -[AVTCenteringCollectionViewDelegate feedbackGenerator]
  -[AVTCenteringCollectionViewDelegate setFeedbackGenerator:]
  -[AVTCenteringCollectionViewDelegate collectionView:didSelectItemAtIndexPath:]
  -[AVTCenteringCollectionViewDelegate scrollViewWillBeginDragging:]
  -[AVTCenteringCollectionViewDelegate initWithCollectionView:delegate:environment:]
  -[AVTCenteringCollectionViewDelegate centerItemAttributes]
  -[AVTCenteringCollectionViewDelegate lastHapticOnScrollIndexPath]
  -[AVTCenteringCollectionViewDelegate setLastHapticOnScrollIndexPath:]


AVTStickerRecentsOverlayViewLayout : NSObject
 @property  double imageToTopPadding
 @property  double imageToTitlePadding
 @property  double titleToSubtitlePadding
 @property  double subtitleToButtonPadding
 @property  double imageHeight
 @property  double horizontalEdgePadding

  // class methods
  +[AVTStickerRecentsOverlayViewLayout standardPortraitLayout]
  +[AVTStickerRecentsOverlayViewLayout standardLandscapeLayout]
  +[AVTStickerRecentsOverlayViewLayout buttonsPortraitLayout]
  +[AVTStickerRecentsOverlayViewLayout buttonsLandscapeLayout]

  // instance methods
  -[AVTStickerRecentsOverlayViewLayout imageToTitlePadding]
  -[AVTStickerRecentsOverlayViewLayout imageHeight]
  -[AVTStickerRecentsOverlayViewLayout initWithImageToTopPadding:imageToTitlePadding:titleToSubtitlePadding:subtitleToButtonPadding:imageHeight:horizontalEdgePadding:]
  -[AVTStickerRecentsOverlayViewLayout imageToTopPadding]
  -[AVTStickerRecentsOverlayViewLayout titleToSubtitlePadding]
  -[AVTStickerRecentsOverlayViewLayout subtitleToButtonPadding]
  -[AVTStickerRecentsOverlayViewLayout horizontalEdgePadding]


AVTAvatarRecordImageGenerator : NSObject
 @property  AVTImageStore *imageStore
 @property  AVTAvatarConfigurationImageRenderer *renderer
 @property  AVTCoreModel *coreModel
 @property  NSArray *scopes
 @property  <AVTUILogger> *logger
 @property  AVTUIEnvironment *environment

  // class methods
  +[AVTAvatarRecordImageGenerator supportedScopesForScale:]

  // instance methods
  -[AVTAvatarRecordImageGenerator logger]
  -[AVTAvatarRecordImageGenerator scopes]
  -[AVTAvatarRecordImageGenerator .cxx_destruct]
  -[AVTAvatarRecordImageGenerator renderer]
  -[AVTAvatarRecordImageGenerator environment]
  -[AVTAvatarRecordImageGenerator coreModel]
  -[AVTAvatarRecordImageGenerator initWithImageStore:renderer:environment:]
  -[AVTAvatarRecordImageGenerator initWithImageStore:coreEnvironment:]
  -[AVTAvatarRecordImageGenerator generateThumbnailsForAvatarRecord:avatar:error:]
  -[AVTAvatarRecordImageGenerator generateThumbnailsForAvatarRecords:error:]
  -[AVTAvatarRecordImageGenerator generateThumbnailForAvatarRecordItem:avatarConfiguration:scope:error:]
  -[AVTAvatarRecordImageGenerator deleteThumbnailsForAvatarRecordsWithIdentifiers:error:]
  -[AVTAvatarRecordImageGenerator generateThumbnailsForDuplicateAvatarRecord:originalRecord:error:]
  -[AVTAvatarRecordImageGenerator updateThumbnailsForChangesWithTracker:recordProvider:]
  -[AVTAvatarRecordImageGenerator imageStore]


AVTStickerTask : NSObject
 @property  @? task
 @property  NSString *avatarRecordIdentifier
 @property  NSIndexPath *indexPath
 @property  unsigned long stickerType

  // class methods
  +[AVTStickerTask stickerTaskForSchedulerTask:avatarRecordIdentifier:indexPath:stickerType:]

  // instance methods
  -[AVTStickerTask indexPath]
  -[AVTStickerTask .cxx_destruct]
  -[AVTStickerTask task]
  -[AVTStickerTask avatarRecordIdentifier]
  -[AVTStickerTask initWithTask:avatarRecordIdentifier:indexPath:stickerType:]
  -[AVTStickerTask stickerType]


AVTAvatarAttributeEditorPreloader : NSObject
 @property  AVTPresetResourceLoader *resourceLoader
 @property  NSMutableDictionary *cancelationTokens
 @property  <AVTUILogger> *logger

  // instance methods
  -[AVTAvatarAttributeEditorPreloader setLogger:]
  -[AVTAvatarAttributeEditorPreloader logger]
  -[AVTAvatarAttributeEditorPreloader setResourceLoader:]
  -[AVTAvatarAttributeEditorPreloader dealloc]
  -[AVTAvatarAttributeEditorPreloader .cxx_destruct]
  -[AVTAvatarAttributeEditorPreloader resourceLoader]
  -[AVTAvatarAttributeEditorPreloader initWithResourceLoader:logger:]
  -[AVTAvatarAttributeEditorPreloader cancelAllPreloading]
  -[AVTAvatarAttributeEditorPreloader preloadSectionItem:atIndexPath:]
  -[AVTAvatarAttributeEditorPreloader cancelPreloadForSectionItemIndexPath:]
  -[AVTAvatarAttributeEditorPreloader preloadCategory:]
  -[AVTAvatarAttributeEditorPreloader cancelationTokens]
  -[AVTAvatarAttributeEditorPreloader setCancelationTokens:]


AVTInMemoryResourceCache : NSObject <NSCacheDelegate, AVTResourceCache>
 @property  NSCache *storage
 @property  NSMutableArray *orderedEntries
 @property  NSObject<OS_dispatch_queue> *storageLock
 @property  <AVTUILogger> *logger
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTInMemoryResourceCache keyForItem:scope:]
  +[AVTInMemoryResourceCache costForItem:scope:]

  // instance methods
  -[AVTInMemoryResourceCache logger]
  -[AVTInMemoryResourceCache storage]
  -[AVTInMemoryResourceCache dealloc]
  -[AVTInMemoryResourceCache .cxx_destruct]
  -[AVTInMemoryResourceCache clearCache]
  -[AVTInMemoryResourceCache cache:willEvictObject:]
  -[AVTInMemoryResourceCache resourceForItem:scope:]
  -[AVTInMemoryResourceCache resourceForItem:scope:cacheMissHandler:]
  -[AVTInMemoryResourceCache resourceExistsInCacheForItem:scope:]
  -[AVTInMemoryResourceCache evictResourceFromCache:scope:]
  -[AVTInMemoryResourceCache initWithLockProvider:totalCostLimit:logger:]
  -[AVTInMemoryResourceCache performStorageWork:]
  -[AVTInMemoryResourceCache _resourceForItem:scope:cacheMissHandler:]
  -[AVTInMemoryResourceCache nts_evictObjectsToFreeUpCost:]
  -[AVTInMemoryResourceCache observeChangesForItem:key:]
  -[AVTInMemoryResourceCache handleChangeForItemForKey:]
  -[AVTInMemoryResourceCache orderedEntries]
  -[AVTInMemoryResourceCache storageLock]


AVTInMemoryResourceCacheEntry : NSObject
 @property  <AVTCachedResource> *resource
 @property  <AVTCacheableResourceChangeToken> *changeToken
 @property  NSString *key
 @property  unsigned long cost

  // instance methods
  -[AVTInMemoryResourceCacheEntry changeToken]
  -[AVTInMemoryResourceCacheEntry dealloc]
  -[AVTInMemoryResourceCacheEntry .cxx_destruct]
  -[AVTInMemoryResourceCacheEntry cost]
  -[AVTInMemoryResourceCacheEntry resource]
  -[AVTInMemoryResourceCacheEntry key]
  -[AVTInMemoryResourceCacheEntry initWithResource:changeToken:key:cost:]


AVTAvatarAttributeEditorSectionColorItem : NSObject <AVTAvatarAttributeEditorSectionItemInternal, AVTAvatarAttributeEditorSectionItem>
 @property  @? layerContentProvider
 @property  @? gradientProvider
 @property  AVTCoreModelColor *color
 @property  AVTColorPreset *skinColor
 @property  BOOL hasDerivedColorDependency
 @property  NSString *identifier
 @property  NSString *localizedName
 @property  BOOL selected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? avatarUpdater

  // instance methods
  -[AVTAvatarAttributeEditorSectionColorItem identifier]
  -[AVTAvatarAttributeEditorSectionColorItem setSelected:]
  -[AVTAvatarAttributeEditorSectionColorItem .cxx_destruct]
  -[AVTAvatarAttributeEditorSectionColorItem localizedName]
  -[AVTAvatarAttributeEditorSectionColorItem color]
  -[AVTAvatarAttributeEditorSectionColorItem isSelected]
  -[AVTAvatarAttributeEditorSectionColorItem avatarUpdater]
  -[AVTAvatarAttributeEditorSectionColorItem initWithColor:imageProvider:colorLayerProvider:avatarUpdater:derivedColorDependent:selected:]
  -[AVTAvatarAttributeEditorSectionColorItem initWithColor:skinColor:imageProvider:colorLayerProvider:avatarUpdater:derivedColorDependent:selected:]
  -[AVTAvatarAttributeEditorSectionColorItem colorPreset]
  -[AVTAvatarAttributeEditorSectionColorItem layerContentProvider]
  -[AVTAvatarAttributeEditorSectionColorItem gradientProvider]
  -[AVTAvatarAttributeEditorSectionColorItem skinColor]
  -[AVTAvatarAttributeEditorSectionColorItem hasDerivedColorDependency]
  -[AVTAvatarAttributeEditorSectionColorItem setHasDerivedColorDependency:]


AVTSplashScreenViewController : OBWelcomeFullCenterContentController
 @property  OBBoldTrayButton *continueButton
 @property  UIView *videoContentView
 @property  AVTSplashScreenConfiguration *configuration
 @property  BOOL isPlayingVideos
 @property  AVPlayerLooper *playerLooper
 @property  AVQueuePlayer *queuePlayer
 @property  AVPlayerViewController *playerViewController
 @property  AVPlayerLooper *secondaryPlayerLooper
 @property  AVQueuePlayer *secondaryQueuePlayer
 @property  AVPlayerViewController *secondaryPlayerViewController
 @property  NSLayoutConstraint *videoContentWidthConstraint
 @property  NSLayoutConstraint *videoContentHeightConstraint
 @property  <AVTSplashScreenViewControllerDelegate> *delegate
 @property  AVPlayerViewController *primaryVideoController
 @property  AVPlayerLooper *primaryVideoLooper

  // instance methods
  -[AVTSplashScreenViewController setConfiguration:]
  -[AVTSplashScreenViewController setDelegate:]
  -[AVTSplashScreenViewController delegate]
  -[AVTSplashScreenViewController configuration]
  -[AVTSplashScreenViewController viewWillLayoutSubviews]
  -[AVTSplashScreenViewController playerViewController]
  -[AVTSplashScreenViewController .cxx_destruct]
  -[AVTSplashScreenViewController viewDidLoad]
  -[AVTSplashScreenViewController viewWillAppear:]
  -[AVTSplashScreenViewController observeValueForKeyPath:ofObject:change:context:]
  -[AVTSplashScreenViewController initWithConfiguration:]
  -[AVTSplashScreenViewController viewWillDisappear:]
  -[AVTSplashScreenViewController continueButton]
  -[AVTSplashScreenViewController setContinueButton:]
  -[AVTSplashScreenViewController setPlayerViewController:]
  -[AVTSplashScreenViewController queuePlayer]
  -[AVTSplashScreenViewController setQueuePlayer:]
  -[AVTSplashScreenViewController playerLooper]
  -[AVTSplashScreenViewController setPlayerLooper:]
  -[AVTSplashScreenViewController didTapContinueButton:]
  -[AVTSplashScreenViewController initWithDefaultConfiguration]
  -[AVTSplashScreenViewController initWithConfiguration:styleProvider:]
  -[AVTSplashScreenViewController desiredHeightForVideoContent]
  -[AVTSplashScreenViewController primaryVideoLooper]
  -[AVTSplashScreenViewController primaryVideoController]
  -[AVTSplashScreenViewController detachVideoControllerAndLooper]
  -[AVTSplashScreenViewController startPlayingVideos]
  -[AVTSplashScreenViewController stopPlayingVideos]
  -[AVTSplashScreenViewController videoContentView]
  -[AVTSplashScreenViewController setVideoContentView:]
  -[AVTSplashScreenViewController isPlayingVideos]
  -[AVTSplashScreenViewController setIsPlayingVideos:]
  -[AVTSplashScreenViewController secondaryPlayerLooper]
  -[AVTSplashScreenViewController setSecondaryPlayerLooper:]
  -[AVTSplashScreenViewController secondaryQueuePlayer]
  -[AVTSplashScreenViewController setSecondaryQueuePlayer:]
  -[AVTSplashScreenViewController secondaryPlayerViewController]
  -[AVTSplashScreenViewController setSecondaryPlayerViewController:]
  -[AVTSplashScreenViewController videoContentWidthConstraint]
  -[AVTSplashScreenViewController setVideoContentWidthConstraint:]
  -[AVTSplashScreenViewController videoContentHeightConstraint]
  -[AVTSplashScreenViewController setVideoContentHeightConstraint:]


AVTStickerRecentsOverlayView : UIVisualEffectView
 @property  UIView *centeredContainerView
 @property  UIImageView *imageView
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  UIButton *continueButton
 @property  UIButton *closeButton
 @property  AVTStickerRecentsOverlayViewLayout *portraitLayout
 @property  AVTStickerRecentsOverlayViewLayout *landscapeLayout
 @property  AVTStickerRecentsOverlayViewLayout *currentLayout
 @property  NSArray *layoutConstraints
 @property  NSLayoutConstraint *containerTopConstraint
 @property  NSLayoutConstraint *containerLeadingConstraint
 @property  NSLayoutConstraint *containerTrailingConstraint
 @property  NSLayoutConstraint *imageHeightConstraint
 @property  NSLayoutConstraint *imageToTitleConstraint
 @property  NSLayoutConstraint *titleToSubtitleConstraint
 @property  NSLayoutConstraint *hideSubtitleConstraint
 @property  NSString *title
 @property  NSString *subtitle
 @property  UIImage *image
 @property  UIView *animatableView
 @property  <AVTStickerRecentsOverlayDelegate> *delegate

  // class methods
  +[AVTStickerRecentsOverlayView stickerButtonImage]
  +[AVTStickerRecentsOverlayView overlayViewForMemojiCreation]
  +[AVTStickerRecentsOverlayView standardOverlayView]
  +[AVTStickerRecentsOverlayView disclosureOverlayView]

  // instance methods
  -[AVTStickerRecentsOverlayView setSubtitleLabel:]
  -[AVTStickerRecentsOverlayView subtitleLabel]
  -[AVTStickerRecentsOverlayView currentLayout]
  -[AVTStickerRecentsOverlayView subtitle]
  -[AVTStickerRecentsOverlayView setTitleLabel:]
  -[AVTStickerRecentsOverlayView setupConstraints]
  -[AVTStickerRecentsOverlayView setDelegate:]
  -[AVTStickerRecentsOverlayView setImageView:]
  -[AVTStickerRecentsOverlayView updateConstraints]
  -[AVTStickerRecentsOverlayView delegate]
  -[AVTStickerRecentsOverlayView setCurrentLayout:]
  -[AVTStickerRecentsOverlayView .cxx_destruct]
  -[AVTStickerRecentsOverlayView layoutSubviews]
  -[AVTStickerRecentsOverlayView title]
  -[AVTStickerRecentsOverlayView image]
  -[AVTStickerRecentsOverlayView tapGestureRecognizer]
  -[AVTStickerRecentsOverlayView setTapGestureRecognizer:]
  -[AVTStickerRecentsOverlayView titleLabel]
  -[AVTStickerRecentsOverlayView imageView]
  -[AVTStickerRecentsOverlayView continueButton]
  -[AVTStickerRecentsOverlayView setContinueButton:]
  -[AVTStickerRecentsOverlayView layoutConstraints]
  -[AVTStickerRecentsOverlayView setLayoutConstraints:]
  -[AVTStickerRecentsOverlayView closeButton]
  -[AVTStickerRecentsOverlayView setCloseButton:]
  -[AVTStickerRecentsOverlayView imageHeightConstraint]
  -[AVTStickerRecentsOverlayView setImageHeightConstraint:]
  -[AVTStickerRecentsOverlayView imageToTitleConstraint]
  -[AVTStickerRecentsOverlayView didTapContinueButton:]
  -[AVTStickerRecentsOverlayView didTapCloseButton:]
  -[AVTStickerRecentsOverlayView didTapContentView:]
  -[AVTStickerRecentsOverlayView initWithFrame:title:subtitle:buttonTitle:image:]
  -[AVTStickerRecentsOverlayView animatableView]
  -[AVTStickerRecentsOverlayView appropriateLayout]
  -[AVTStickerRecentsOverlayView dismissAnimatedWithDuration:]
  -[AVTStickerRecentsOverlayView centeredContainerView]
  -[AVTStickerRecentsOverlayView setCenteredContainerView:]
  -[AVTStickerRecentsOverlayView portraitLayout]
  -[AVTStickerRecentsOverlayView setPortraitLayout:]
  -[AVTStickerRecentsOverlayView landscapeLayout]
  -[AVTStickerRecentsOverlayView setLandscapeLayout:]
  -[AVTStickerRecentsOverlayView containerTopConstraint]
  -[AVTStickerRecentsOverlayView setContainerTopConstraint:]
  -[AVTStickerRecentsOverlayView containerLeadingConstraint]
  -[AVTStickerRecentsOverlayView setContainerLeadingConstraint:]
  -[AVTStickerRecentsOverlayView containerTrailingConstraint]
  -[AVTStickerRecentsOverlayView setContainerTrailingConstraint:]
  -[AVTStickerRecentsOverlayView setImageToTitleConstraint:]
  -[AVTStickerRecentsOverlayView titleToSubtitleConstraint]
  -[AVTStickerRecentsOverlayView setTitleToSubtitleConstraint:]
  -[AVTStickerRecentsOverlayView hideSubtitleConstraint]
  -[AVTStickerRecentsOverlayView setHideSubtitleConstraint:]


AVTPoseCaptureViewController : UIViewController <AVTFaceTrackingManagerDelegate, AVTUIControllerPresentationDelegate>
 @property  <AVTAvatarRecord> *avatarRecord
 @property  unsigned long mode
 @property  AVTViewSessionProvider *avtViewSessionProvider
 @property  AVTViewSession *avtViewSession
 @property  UIView *avtViewContainer
 @property  @? postSessionDidBecomeActiveHandler
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  BOOL allowFacetracking
 @property  UIView *headerView
 @property  NSLayoutConstraint *headerHeightConstraint
 @property  UIImageView *snapshotImageView
 @property  UIView *borderMaskView
 @property  AVTRecordingButton *captureButton
 @property  AVTCircularButton *discardButton
 @property  UIBarButtonItem *doneButton
 @property  NSLayoutConstraint *headerTopAnchor
 @property  long long topPadding
 @property  NSLayoutConstraint *captureButtonBottomAnchor
 @property  long long bottomPadding
 @property  AVTStickerConfiguration *adHocConfiguration
 @property  <AVTPoseCaptureViewControllerDelegate> *delegate
 @property  UIColor *backgroundColor
 @property  BOOL shouldHideUserInfoView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTPoseCaptureViewController borderMaskRectForContentRect:]

  // instance methods
  -[AVTPoseCaptureViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[AVTPoseCaptureViewController topPadding]
  -[AVTPoseCaptureViewController setDoneButton:]
  -[AVTPoseCaptureViewController setDelegate:]
  -[AVTPoseCaptureViewController setHeaderView:]
  -[AVTPoseCaptureViewController delegate]
  -[AVTPoseCaptureViewController doneButton]
  -[AVTPoseCaptureViewController viewWillLayoutSubviews]
  -[AVTPoseCaptureViewController headerView]
  -[AVTPoseCaptureViewController mode]
  -[AVTPoseCaptureViewController .cxx_destruct]
  -[AVTPoseCaptureViewController viewDidLoad]
  -[AVTPoseCaptureViewController viewWillAppear:]
  -[AVTPoseCaptureViewController viewDidLayoutSubviews]
  -[AVTPoseCaptureViewController setMode:]
  -[AVTPoseCaptureViewController backgroundColor]
  -[AVTPoseCaptureViewController setBackgroundColor:]
  -[AVTPoseCaptureViewController viewWillDisappear:]
  -[AVTPoseCaptureViewController canBecomeFirstResponder]
  -[AVTPoseCaptureViewController tapGestureRecognizer]
  -[AVTPoseCaptureViewController bottomPadding]
  -[AVTPoseCaptureViewController setTapGestureRecognizer:]
  -[AVTPoseCaptureViewController isModalInPresentation]
  -[AVTPoseCaptureViewController headerHeightConstraint]
  -[AVTPoseCaptureViewController setHeaderHeightConstraint:]
  -[AVTPoseCaptureViewController didTapCaptureButton:]
  -[AVTPoseCaptureViewController avatarRecord]
  -[AVTPoseCaptureViewController setAvatarRecord:]
  -[AVTPoseCaptureViewController didTapAvatarView:]
  -[AVTPoseCaptureViewController setBottomPadding:]
  -[AVTPoseCaptureViewController setTopPadding:]
  -[AVTPoseCaptureViewController snapshotImageView]
  -[AVTPoseCaptureViewController didTapCancel:]
  -[AVTPoseCaptureViewController didTapDone:]
  -[AVTPoseCaptureViewController didTapDiscardButton:]
  -[AVTPoseCaptureViewController interfaceOrientationForFaceTrackingManager:]
  -[AVTPoseCaptureViewController controllerPresentationWillObstructView:]
  -[AVTPoseCaptureViewController initWithSelectedRecord:avtViewSessionProvider:]
  -[AVTPoseCaptureViewController updateHeaderHeightConstraint]
  -[AVTPoseCaptureViewController updatePaddingConstant]
  -[AVTPoseCaptureViewController updateAVTViewContainerFrame]
  -[AVTPoseCaptureViewController beginAVTViewSessionWithDidBeginBlock:]
  -[AVTPoseCaptureViewController beginUsingAVTViewFromSession:]
  -[AVTPoseCaptureViewController configureAVTViewSession:withAvatarRecord:completionBlock:]
  -[AVTPoseCaptureViewController configureUserInfoLabel]
  -[AVTPoseCaptureViewController createCaptureButtonIfNeeded]
  -[AVTPoseCaptureViewController createDiscardButtonIfNeeded]
  -[AVTPoseCaptureViewController switchToReviewMode:]
  -[AVTPoseCaptureViewController switchToCaptureMode]
  -[AVTPoseCaptureViewController shouldHideUserInfoView]
  -[AVTPoseCaptureViewController setShouldHideUserInfoView:]
  -[AVTPoseCaptureViewController avtViewSessionProvider]
  -[AVTPoseCaptureViewController avtViewSession]
  -[AVTPoseCaptureViewController setAvtViewSession:]
  -[AVTPoseCaptureViewController avtViewContainer]
  -[AVTPoseCaptureViewController setAvtViewContainer:]
  -[AVTPoseCaptureViewController postSessionDidBecomeActiveHandler]
  -[AVTPoseCaptureViewController setPostSessionDidBecomeActiveHandler:]
  -[AVTPoseCaptureViewController allowFacetracking]
  -[AVTPoseCaptureViewController setAllowFacetracking:]
  -[AVTPoseCaptureViewController setSnapshotImageView:]
  -[AVTPoseCaptureViewController borderMaskView]
  -[AVTPoseCaptureViewController setBorderMaskView:]
  -[AVTPoseCaptureViewController captureButton]
  -[AVTPoseCaptureViewController setCaptureButton:]
  -[AVTPoseCaptureViewController discardButton]
  -[AVTPoseCaptureViewController setDiscardButton:]
  -[AVTPoseCaptureViewController headerTopAnchor]
  -[AVTPoseCaptureViewController setHeaderTopAnchor:]
  -[AVTPoseCaptureViewController captureButtonBottomAnchor]
  -[AVTPoseCaptureViewController setCaptureButtonBottomAnchor:]
  -[AVTPoseCaptureViewController adHocConfiguration]
  -[AVTPoseCaptureViewController setAdHocConfiguration:]


AVTAvatarAttributeEditorPreviewMode : NSObject
 @property  unsigned long type
 @property  AVTAvatarAttributeEditorPreviewModeOptions *options

  // class methods
  +[AVTAvatarAttributeEditorPreviewMode attributeEditorPreviewModeTypeForEditingPreviewModeType:]

  // instance methods
  -[AVTAvatarAttributeEditorPreviewMode type]
  -[AVTAvatarAttributeEditorPreviewMode .cxx_destruct]
  -[AVTAvatarAttributeEditorPreviewMode options]
  -[AVTAvatarAttributeEditorPreviewMode initWithType:options:]


AVTGroupDial : UIView <UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, AVTGroupPicker>
 @property  AVTUIEnvironment *environment
 @property  NSArray *cachedGroupTitleSizes
 @property  UICollectionView *collectionView
 @property  UICollectionViewFlowLayout *collectionViewLayout
 @property  AVTCenteringCollectionViewDelegate *centeringCollectionViewDelegate
 @property  unsigned long currentScrollDirection
 @property  long long currentSelectedItemIndex
 @property  BOOL isMoving
 @property  BOOL hasFinalizedSelection
 @property  AVTGroupDialMaskingView *maskingView
 @property  NSIndexPath *shimmeringItemIndexPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *groupItems
 @property  <AVTGroupPickerDelegate> *delegate
 @property  long long selectedGroupIndex

  // class methods
  +[AVTGroupDial estimatedContentWidthForTitleSizes:]
  +[AVTGroupDial shouldScrollGivenTitleSizes:fittingWidth:]

  // instance methods
  -[AVTGroupDial isMoving]
  -[AVTGroupDial collectionView:cellForItemAtIndexPath:]
  -[AVTGroupDial reloadData]
  -[AVTGroupDial collectionViewLayout]
  -[AVTGroupDial scrollViewDidScroll:]
  -[AVTGroupDial setDelegate:]
  -[AVTGroupDial setFrame:]
  -[AVTGroupDial delegate]
  -[AVTGroupDial numberOfSectionsInCollectionView:]
  -[AVTGroupDial collectionView:layout:sizeForItemAtIndexPath:]
  -[AVTGroupDial collectionView:willDisplayCell:forItemAtIndexPath:]
  -[AVTGroupDial scrollViewDidEndDecelerating:]
  -[AVTGroupDial .cxx_destruct]
  -[AVTGroupDial setIsMoving:]
  -[AVTGroupDial scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[AVTGroupDial collectionView]
  -[AVTGroupDial layoutSubviews]
  -[AVTGroupDial setBounds:]
  -[AVTGroupDial setContentPadding:]
  -[AVTGroupDial scrollViewDidEndScrollingAnimation:]
  -[AVTGroupDial collectionView:didSelectItemAtIndexPath:]
  -[AVTGroupDial collectionView:numberOfItemsInSection:]
  -[AVTGroupDial scrollViewDidEndDragging:willDecelerate:]
  -[AVTGroupDial scrollViewWillBeginDragging:]
  -[AVTGroupDial environment]
  -[AVTGroupDial setCollectionViewLayout:]
  -[AVTGroupDial currentScrollDirection]
  -[AVTGroupDial initWithGroupItems:environment:]
  -[AVTGroupDial setSelectedGroupIndex:animated:]
  -[AVTGroupDial groupItems]
  -[AVTGroupDial selectedGroupIndex]
  -[AVTGroupDial setSelectedGroupIndex:]
  -[AVTGroupDial setupMasking]
  -[AVTGroupDial cacheTitleSizes]
  -[AVTGroupDial setupDial]
  -[AVTGroupDial startDiscoverability]
  -[AVTGroupDial stopDiscoverability]
  -[AVTGroupDial cellSizeForItemAtIndex:]
  -[AVTGroupDial selectItemAtIndex:updateScrollPosition:animated:]
  -[AVTGroupDial updateSelectedState:forItemAtIndexPath:animated:]
  -[AVTGroupDial updateForEndingScroll]
  -[AVTGroupDial cachedGroupTitleSizes]
  -[AVTGroupDial centeringCollectionViewDelegate]
  -[AVTGroupDial setCurrentScrollDirection:]
  -[AVTGroupDial currentSelectedItemIndex]
  -[AVTGroupDial setCurrentSelectedItemIndex:]
  -[AVTGroupDial hasFinalizedSelection]
  -[AVTGroupDial setHasFinalizedSelection:]
  -[AVTGroupDial maskingView]
  -[AVTGroupDial setMaskingView:]
  -[AVTGroupDial shimmeringItemIndexPath]
  -[AVTGroupDial setShimmeringItemIndexPath:]


AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout : AVTAvatarAttributeEditorLayout
 @property  double attributesContentViewExtraHeight

  // instance methods
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout backgroundColor]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout initWithContainerSize:insets:userInfoViewHeight:screenScale:RTL:avatarViewContainerFrame:attributesContentViewFrameExtraHeight:avatarViewAlpha:showSideGroupPicker:]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout supportedLayoutOrientation]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout groupDialContainerFrame]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout sideGroupContainerFrame]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout attributesContentViewFrame]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout userInfoFrame]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout headerMaskingViewAlpha]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout headerMaskingViewFrame]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout verticalRuleAlpha]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout verticalRuleFrame]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout attributesContentViewInsets]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout attributesContentViewScrollIndicatorInsets]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout avatarContainerFrame]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout avatarContainerAlpha]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout showSideGroupPicker]
  -[AVTAvatarAttributeEditorTransitionFromActionsStartingPortraitLayout attributesContentViewExtraHeight]


AVTCollapsibleHeaderController : NSObject <UIScrollViewDelegate>
 @property  <UIScrollViewDelegate> *scrollViewDelegate
 @property  double scrollToCompressionMultiplier
 @property  double expandMarginalScrollDistance
 @property  double collapseMarginalScrollDistance
 @property  BOOL shouldPushContentOffsetOnExpandOrCollapse
 @property  BOOL shouldCollapseOnBottomBounceScroll
 @property  double previousOffset
 @property  double singleTouchOffset
 @property  unsigned long currentScrollDirection
 @property  double minHeight
 @property  double maxHeight
 @property  UIScrollView *scrollView
 @property  UIView *headerView
 @property  <AVTCollapsibleHeaderControllerDelegate> *delegate
 @property  double currentHeightForHeader
 @property  double additionalTopContentInset
 @property  BOOL shouldResizeHeaderForScrolling
 @property  BOOL shouldSnapToMinOrMax
 @property  BOOL shouldOnlyExpandWhenScrollingAtEdge
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTCollapsibleHeaderController setMaxHeight:]
  -[AVTCollapsibleHeaderController methodSignatureForSelector:]
  -[AVTCollapsibleHeaderController scrollViewDidScroll:]
  -[AVTCollapsibleHeaderController setDelegate:]
  -[AVTCollapsibleHeaderController setPreviousOffset:]
  -[AVTCollapsibleHeaderController delegate]
  -[AVTCollapsibleHeaderController scrollViewDelegate]
  -[AVTCollapsibleHeaderController setMinHeight:]
  -[AVTCollapsibleHeaderController headerView]
  -[AVTCollapsibleHeaderController respondsToSelector:]
  -[AVTCollapsibleHeaderController scrollViewDidEndDecelerating:]
  -[AVTCollapsibleHeaderController .cxx_destruct]
  -[AVTCollapsibleHeaderController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[AVTCollapsibleHeaderController scrollView]
  -[AVTCollapsibleHeaderController maxHeight]
  -[AVTCollapsibleHeaderController setScrollViewDelegate:]
  -[AVTCollapsibleHeaderController previousOffset]
  -[AVTCollapsibleHeaderController forwardingTargetForSelector:]
  -[AVTCollapsibleHeaderController minHeight]
  -[AVTCollapsibleHeaderController scrollViewDidEndDragging:willDecelerate:]
  -[AVTCollapsibleHeaderController scrollToTopAnimated:]
  -[AVTCollapsibleHeaderController updateInsetsIfNeeded]
  -[AVTCollapsibleHeaderController currentScrollDirection]
  -[AVTCollapsibleHeaderController expandAnimated:]
  -[AVTCollapsibleHeaderController collapseAnimated:]
  -[AVTCollapsibleHeaderController setCurrentScrollDirection:]
  -[AVTCollapsibleHeaderController animationDidUpdateWithDisplayLink:]
  -[AVTCollapsibleHeaderController initWithScrollView:headerView:minHeight:maxHeight:]
  -[AVTCollapsibleHeaderController setAdditionalTopContentInset:]
  -[AVTCollapsibleHeaderController updateMinHeight:maxHeight:animated:]
  -[AVTCollapsibleHeaderController expandAnimated:withFocusRect:standardItemHeight:]
  -[AVTCollapsibleHeaderController snapToMinMaxIfNeededAnimated:]
  -[AVTCollapsibleHeaderController updateHeaderForHeight:withOffset:animated:]
  -[AVTCollapsibleHeaderController scrollToTopPreservingHeaderHeight:animated:]
  -[AVTCollapsibleHeaderController topContentOffsetWithHeaderHeight:]
  -[AVTCollapsibleHeaderController shouldResizeGivenMarginalScrollDistancesForScrollDirection:]
  -[AVTCollapsibleHeaderController shouldResizeGivenScrollDirection:currentHeaderHeight:targetHeaderHeight:]
  -[AVTCollapsibleHeaderController updateHeaderHeightToMatchScrollViewStateForScrollDirection:animated:]
  -[AVTCollapsibleHeaderController headerHeightForContentOffset:contentInset:]
  -[AVTCollapsibleHeaderController updateHeaderSizeForGlobalHeaderHeight:]
  -[AVTCollapsibleHeaderController currentHeightForHeader]
  -[AVTCollapsibleHeaderController updatedScrollViewInsetsFromExistingInsets:]
  -[AVTCollapsibleHeaderController additionalTopContentInset]
  -[AVTCollapsibleHeaderController shouldResizeHeaderForScrolling]
  -[AVTCollapsibleHeaderController setShouldResizeHeaderForScrolling:]
  -[AVTCollapsibleHeaderController shouldSnapToMinOrMax]
  -[AVTCollapsibleHeaderController setShouldSnapToMinOrMax:]
  -[AVTCollapsibleHeaderController shouldOnlyExpandWhenScrollingAtEdge]
  -[AVTCollapsibleHeaderController setShouldOnlyExpandWhenScrollingAtEdge:]
  -[AVTCollapsibleHeaderController scrollToCompressionMultiplier]
  -[AVTCollapsibleHeaderController setScrollToCompressionMultiplier:]
  -[AVTCollapsibleHeaderController expandMarginalScrollDistance]
  -[AVTCollapsibleHeaderController setExpandMarginalScrollDistance:]
  -[AVTCollapsibleHeaderController collapseMarginalScrollDistance]
  -[AVTCollapsibleHeaderController setCollapseMarginalScrollDistance:]
  -[AVTCollapsibleHeaderController shouldPushContentOffsetOnExpandOrCollapse]
  -[AVTCollapsibleHeaderController setShouldPushContentOffsetOnExpandOrCollapse:]
  -[AVTCollapsibleHeaderController shouldCollapseOnBottomBounceScroll]
  -[AVTCollapsibleHeaderController setShouldCollapseOnBottomBounceScroll:]
  -[AVTCollapsibleHeaderController singleTouchOffset]
  -[AVTCollapsibleHeaderController setSingleTouchOffset:]


AVTUIColorRepository : NSObject
  // class methods
  +[AVTUIColorRepository separatorColor]
  +[AVTUIColorRepository dynamicColorWithLightColor:darkColor:]
  +[AVTUIColorRepository editorBackgroundColor]
  +[AVTUIColorRepository appBackgroundColor]
  +[AVTUIColorRepository modalBackgroundColor]
  +[AVTUIColorRepository trapOverlayBackgroundColor]
  +[AVTUIColorRepository groupListBackgroundColor]
  +[AVTUIColorRepository groupDialCellTextColor]
  +[AVTUIColorRepository groupDialCellSelectedTextColor]
  +[AVTUIColorRepository groupDialCellShimmeringTextColor]
  +[AVTUIColorRepository groupSidePickerCellSelectedBackgroundColor]
  +[AVTUIColorRepository userInfoLabelColor]
  +[AVTUIColorRepository attributeValueCellSelectedStrokeColor]
  +[AVTUIColorRepository attributeTitleTextColor]
  +[AVTUIColorRepository actionButtonBackgroundColor]
  +[AVTUIColorRepository actionButtonTextColor]
  +[AVTUIColorRepository actionButtonDestructiveTextColor]
  +[AVTUIColorRepository splashScreenButtonBackgroundColor]
  +[AVTUIColorRepository splashScreenButtonNormalTextColor]
  +[AVTUIColorRepository splashScreenButtonHighlightedTextColor]
  +[AVTUIColorRepository simplePickerSelectedBackground]
  +[AVTUIColorRepository stickerPlaceholderBackgroundColor]
  +[AVTUIColorRepository placeholderBackgroundColor]
  +[AVTUIColorRepository paddleViewBackgroundColor]


AVTAvatarAttributeEditorSectionSupplementalPickerItem : NSObject <AVTAvatarAttributeEditorSectionSupplementalPickerItemInternal, AVTAvatarAttributeEditorSectionSupplementalPickerItem>
 @property  @? avatarUpdater
 @property  @? editorUpdater
 @property  NSString *localizedName
 @property  NSString *localizedDescription
 @property  BOOL selected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTAvatarAttributeEditorSectionSupplementalPickerItem localizedDescription]
  -[AVTAvatarAttributeEditorSectionSupplementalPickerItem setSelected:]
  -[AVTAvatarAttributeEditorSectionSupplementalPickerItem .cxx_destruct]
  -[AVTAvatarAttributeEditorSectionSupplementalPickerItem localizedName]
  -[AVTAvatarAttributeEditorSectionSupplementalPickerItem isSelected]
  -[AVTAvatarAttributeEditorSectionSupplementalPickerItem avatarUpdater]
  -[AVTAvatarAttributeEditorSectionSupplementalPickerItem editorUpdater]
  -[AVTAvatarAttributeEditorSectionSupplementalPickerItem initWithLocalizedName:localizedDescription:avatarUpdater:editorUpdater:selected:]


AVTAvatarListRecordItem : NSObject <AVTAvatarListItem>
 @property  <AVTAvatarRecord> *avatar
 @property  UIImage *cachedImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTAvatarListRecordItem .cxx_destruct]
  -[AVTAvatarListRecordItem isEqual:]
  -[AVTAvatarListRecordItem cachedImage]
  -[AVTAvatarListRecordItem setCachedImage:]
  -[AVTAvatarListRecordItem avatar]
  -[AVTAvatarListRecordItem initWithAvatar:]
  -[AVTAvatarListRecordItem downcastWithRecordHandler:viewHandler:]
  -[AVTAvatarListRecordItem downcastWithRecordHandler:imageHandler:viewHandler:]


AVTCoreModelMulticolorAuxilaryPickerItem : NSObject
 @property  NSString *identifier
 @property  NSString *title
 @property  NSString *message

  // instance methods
  -[AVTCoreModelMulticolorAuxilaryPickerItem identifier]
  -[AVTCoreModelMulticolorAuxilaryPickerItem .cxx_destruct]
  -[AVTCoreModelMulticolorAuxilaryPickerItem title]
  -[AVTCoreModelMulticolorAuxilaryPickerItem message]
  -[AVTCoreModelMulticolorAuxilaryPickerItem initWithIdentifier:title:message:]


AVTCoreModelMulticolorAuxiliaryPicker : NSObject
 @property  NSString *type
 @property  NSArray *items

  // instance methods
  -[AVTCoreModelMulticolorAuxiliaryPicker type]
  -[AVTCoreModelMulticolorAuxiliaryPicker .cxx_destruct]
  -[AVTCoreModelMulticolorAuxiliaryPicker items]
  -[AVTCoreModelMulticolorAuxiliaryPicker setType:]
  -[AVTCoreModelMulticolorAuxiliaryPicker initWithType:items:]


AVTEditingModelBuilder : NSObject
  // class methods
  +[AVTEditingModelBuilder buildCoreModelFromPlistForPlatform:]
  +[AVTEditingModelBuilder buildCoreModelFromPlistForPlatform:withLogger:]


AVTBodyCarouselController : NSObject <UICollectionViewDelegate, UICollectionViewDataSource, AVTNotifyingContainerViewDelegate, AVTAvatarBodyPoseDisplayingController>
 @property  UIView *view
 @property  UICollectionView *collectionView
 @property  AVTZIndexEngagementListCollectionViewLayout *collectionViewLayout
 @property  AVTCenteringCollectionViewDelegate *centeringDelegate
 @property  AVTViewSession *avtViewSession
 @property  NSArray *configurations
 @property  AVTUIStickerRenderer *renderer
 @property  AVTSerialTaskScheduler *scheduler
 @property  AVTUIStickerGeneratorPool *generatorPool
 @property  <AVTAvatarRecord> *displayedRecord
 @property  AVTAvatarListCell *liveCell
 @property  {CGSize=dd} centerCellSize
 @property  AVTTransitionCoordinator *transitionCoordinator
 @property  AVTUIEnvironment *environment
 @property  <AVTUILogger> *logger
 @property  <AVTViewCarouselLayout> *avtViewLayout
 @property  double decelerationRate
 @property  AVTRenderingScope *renderingScope
 @property  AVTStickerConfiguration *displayedConfiguration
 @property  BOOL isAnimatingExpansion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTPresenterDelegate> *presenterDelegate

  // class methods
  +[AVTBodyCarouselController newCollectionViewLayoutForEngagedCellSize:boundsSize:environment:]

  // instance methods
  -[AVTBodyCarouselController setCollectionView:]
  -[AVTBodyCarouselController logger]
  -[AVTBodyCarouselController collectionView:cellForItemAtIndexPath:]
  -[AVTBodyCarouselController configurations]
  -[AVTBodyCarouselController scheduler]
  -[AVTBodyCarouselController setScheduler:]
  -[AVTBodyCarouselController transitionCoordinator]
  -[AVTBodyCarouselController collectionViewLayout]
  -[AVTBodyCarouselController scrollViewDidScroll:]
  -[AVTBodyCarouselController setPresenterDelegate:]
  -[AVTBodyCarouselController view]
  -[AVTBodyCarouselController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[AVTBodyCarouselController scrollViewDidEndDecelerating:]
  -[AVTBodyCarouselController .cxx_destruct]
  -[AVTBodyCarouselController collectionView]
  -[AVTBodyCarouselController renderer]
  -[AVTBodyCarouselController setRenderer:]
  -[AVTBodyCarouselController loadView]
  -[AVTBodyCarouselController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[AVTBodyCarouselController setView:]
  -[AVTBodyCarouselController scrollViewDidEndScrollingAnimation:]
  -[AVTBodyCarouselController setConfigurations:]
  -[AVTBodyCarouselController collectionView:numberOfItemsInSection:]
  -[AVTBodyCarouselController setDecelerationRate:]
  -[AVTBodyCarouselController scrollViewDidEndDragging:willDecelerate:]
  -[AVTBodyCarouselController environment]
  -[AVTBodyCarouselController presenterDelegate]
  -[AVTBodyCarouselController setCollectionViewLayout:]
  -[AVTBodyCarouselController isViewLoaded]
  -[AVTBodyCarouselController displayedConfiguration]
  -[AVTBodyCarouselController setDisplayedConfiguration:]
  -[AVTBodyCarouselController decelerationRate]
  -[AVTBodyCarouselController renderingScope]
  -[AVTBodyCarouselController avtViewSession]
  -[AVTBodyCarouselController setAvtViewSession:]
  -[AVTBodyCarouselController notifyingContainerViewWillChangeSize:]
  -[AVTBodyCarouselController notifyingContainerViewDidChangeSize:]
  -[AVTBodyCarouselController prepareViewWithLayout:]
  -[AVTBodyCarouselController useAVTViewFromSession:]
  -[AVTBodyCarouselController stopUsingAVTViewSessionSynchronously:completionHandler:]
  -[AVTBodyCarouselController initWithEnvironment:avatarRecord:]
  -[AVTBodyCarouselController initWithEnvironment:avatarRecord:editorPresentationContext:]
  -[AVTBodyCarouselController initWithEnvironment:initialAVTViewLayout:avatarRecord:editorPresentationContext:]
  -[AVTBodyCarouselController configurationsForEditorPresentationContext:]
  -[AVTBodyCarouselController configureLayoutIfNeededWithHeight:]
  -[AVTBodyCarouselController buildCollectionViewAndConfigureLayoutIfNeeded]
  -[AVTBodyCarouselController reloadDisplayedSticker]
  -[AVTBodyCarouselController scrollToDisplayedConfiguration]
  -[AVTBodyCarouselController scrollToViewForConfiguration:animated:]
  -[AVTBodyCarouselController scrollToViewAtIndex:animated:]
  -[AVTBodyCarouselController indexPathForItemClosestToCenter]
  -[AVTBodyCarouselController cellForConfiguration:]
  -[AVTBodyCarouselController shouldCurrentlyDisplayedConfigurationTransitionToLive]
  -[AVTBodyCarouselController updateDisplayedConfigurationIfNeeded]
  -[AVTBodyCarouselController setDisplayedConfigurationFromIndex:]
  -[AVTBodyCarouselController updateStickersforVisibleCells]
  -[AVTBodyCarouselController setStaticImageOnCell:forIndexPath:]
  -[AVTBodyCarouselController updateImageForStaticCellForIndexPath:]
  -[AVTBodyCarouselController transitionCurrentDisplayedConfigurationAnimated:]
  -[AVTBodyCarouselController layoutDidChangeWhileMoving:offset:]
  -[AVTBodyCarouselController transitionCenterCellIfPresentToStartFocusing]
  -[AVTBodyCarouselController transitionCenterCellIfPresentToStopFocusingAnimated:]
  -[AVTBodyCarouselController transitionCenterCellToStartFocusing:indexPath:]
  -[AVTBodyCarouselController transitionCell:indexPath:toStartFocusingAnimated:session:completionHandler:]
  -[AVTBodyCarouselController transitionCell:toStopFocusingAnimated:completionHandler:]
  -[AVTBodyCarouselController isAnimatingExpansion]
  -[AVTBodyCarouselController setIsAnimatingExpansion:]
  -[AVTBodyCarouselController centeringDelegate]
  -[AVTBodyCarouselController setCenteringDelegate:]
  -[AVTBodyCarouselController generatorPool]
  -[AVTBodyCarouselController setGeneratorPool:]
  -[AVTBodyCarouselController displayedRecord]
  -[AVTBodyCarouselController setDisplayedRecord:]
  -[AVTBodyCarouselController liveCell]
  -[AVTBodyCarouselController setLiveCell:]
  -[AVTBodyCarouselController centerCellSize]
  -[AVTBodyCarouselController setCenterCellSize:]
  -[AVTBodyCarouselController avtViewLayout]
  -[AVTBodyCarouselController setAvtViewLayout:]


AVTAvatarActionsViewControllerTransitionStartingLayout : AVTAvatarActionsViewControllerLayout
  // instance methods
  -[AVTAvatarActionsViewControllerTransitionStartingLayout initWithContainerSize:insets:buttonCount:avtViewLayoutInfo:startingAvatarViewFrame:]
  -[AVTAvatarActionsViewControllerTransitionStartingLayout actionButtonsViewAlpha]
  -[AVTAvatarActionsViewControllerTransitionStartingLayout avatarContainerViewFrame]


AVTCoalescingInvertingTaskScheduler : NSObject <AVTTaskScheduler>
 @property  NSMutableArray *tasks
 @property  NSObject<OS_dispatch_queue> *coalescingQueue
 @property  NSObject<OS_dispatch_queue> *stateLock
 @property  <AVTTaskScheduler> *backingScheduler
 @property  double coalesingDelay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTCoalescingInvertingTaskScheduler cancelTask:]
  -[AVTCoalescingInvertingTaskScheduler .cxx_destruct]
  -[AVTCoalescingInvertingTaskScheduler stateLock]
  -[AVTCoalescingInvertingTaskScheduler coalescingQueue]
  -[AVTCoalescingInvertingTaskScheduler tasks]
  -[AVTCoalescingInvertingTaskScheduler scheduleTask:]
  -[AVTCoalescingInvertingTaskScheduler cancelAllTasks]
  -[AVTCoalescingInvertingTaskScheduler lowerTaskPriority:]
  -[AVTCoalescingInvertingTaskScheduler initWithBackingScheduler:coalescingQueue:delay:environment:]
  -[AVTCoalescingInvertingTaskScheduler performStateWork:]
  -[AVTCoalescingInvertingTaskScheduler startTasksFrom:]
  -[AVTCoalescingInvertingTaskScheduler backingScheduler]
  -[AVTCoalescingInvertingTaskScheduler coalesingDelay]


AVTCoreModelPickerDisplayCondition : NSObject
 @property  unsigned long targetSectionIndex
 @property  unsigned long value

  // class methods
  +[AVTCoreModelPickerDisplayCondition displayConditionFromDictionnary:]
  +[AVTCoreModelPickerDisplayCondition conditionValueFromString:]

  // instance methods
  -[AVTCoreModelPickerDisplayCondition value]
  -[AVTCoreModelPickerDisplayCondition initWithTargetSectionIndex:value:]
  -[AVTCoreModelPickerDisplayCondition targetSectionIndex]


AVTAvatarEditorColorDefaultsProvider : NSObject <NSCopying>
 @property  AVTEditingModelColors *editingColors
 @property  NSDictionary *categoryMapping
 @property  NSDictionary *definitions

  // class methods
  +[AVTAvatarEditorColorDefaultsProvider keyForCategory:colorIndex:]
  +[AVTAvatarEditorColorDefaultsProvider categoryForKey:]
  +[AVTAvatarEditorColorDefaultsProvider colorIndexForKey:]

  // instance methods
  -[AVTAvatarEditorColorDefaultsProvider .cxx_destruct]
  -[AVTAvatarEditorColorDefaultsProvider definitions]
  -[AVTAvatarEditorColorDefaultsProvider copyWithZone:]
  -[AVTAvatarEditorColorDefaultsProvider setDefinitions:]
  -[AVTAvatarEditorColorDefaultsProvider initWithColorDefaultsDictionary:editingColors:]
  -[AVTAvatarEditorColorDefaultsProvider defaultColorForCategory:destination:withConfiguration:]
  -[AVTAvatarEditorColorDefaultsProvider defaultColorPresetForCategory:destination:withConfiguration:]
  -[AVTAvatarEditorColorDefaultsProvider editingColors]
  -[AVTAvatarEditorColorDefaultsProvider setEditingColors:]
  -[AVTAvatarEditorColorDefaultsProvider categoryMapping]
  -[AVTAvatarEditorColorDefaultsProvider setCategoryMapping:]


AVTAvatarAttributeEditorDefaultPortraitLayout : AVTAvatarAttributeEditorLayout
  // instance methods
  -[AVTAvatarAttributeEditorDefaultPortraitLayout maxHeaderHeight]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout supportedLayoutOrientation]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout groupDialContainerFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout sideGroupContainerFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout attributesContentViewFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout userInfoFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout headerMaskingViewAlpha]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout headerMaskingViewFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout verticalRuleAlpha]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout verticalRuleFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout attributesContentViewInsets]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout attributesContentViewScrollIndicatorInsets]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout avatarContainerFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout avatarContainerAlpha]
  -[AVTAvatarAttributeEditorDefaultPortraitLayout defaultUserInfoFrame]


AVTUICapabilities : NSObject
  // instance methods
  -[AVTUICapabilities requestAccessForCameraWithCompletionHandler:]


AVTAvatarLibraryCreateNewItem : NSObject <AVTAvatarLibraryItem>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarLibraryCreateNewItem cellIdentifier]

  // instance methods
  -[AVTAvatarLibraryCreateNewItem configureCell:imageProvider:]


AVTAnimojiPoseSelectionHeaderViewController : UIViewController
 @property  <AVTAvatarRecord> *avatarRecord
 @property  AVTView *avtView
 @property  AVTStickerConfiguration *displayedConfiguration
 @property  AVTViewUpdater *viewUpdater

  // instance methods
  -[AVTAnimojiPoseSelectionHeaderViewController initWithRecord:]
  -[AVTAnimojiPoseSelectionHeaderViewController viewUpdater]
  -[AVTAnimojiPoseSelectionHeaderViewController .cxx_destruct]
  -[AVTAnimojiPoseSelectionHeaderViewController viewDidLoad]
  -[AVTAnimojiPoseSelectionHeaderViewController setViewUpdater:]
  -[AVTAnimojiPoseSelectionHeaderViewController displayedConfiguration]
  -[AVTAnimojiPoseSelectionHeaderViewController setDisplayedConfiguration:]
  -[AVTAnimojiPoseSelectionHeaderViewController avtView]
  -[AVTAnimojiPoseSelectionHeaderViewController setAvtView:]
  -[AVTAnimojiPoseSelectionHeaderViewController avatarRecord]
  -[AVTAnimojiPoseSelectionHeaderViewController setAvatarRecord:]
  -[AVTAnimojiPoseSelectionHeaderViewController newStickerConfigurationFromCurrentPose]
  -[AVTAnimojiPoseSelectionHeaderViewController beginFaceTrackingWithCompletionBlock:]
  -[AVTAnimojiPoseSelectionHeaderViewController pauseFaceTracking]
  -[AVTAnimojiPoseSelectionHeaderViewController endFaceTracking]
  -[AVTAnimojiPoseSelectionHeaderViewController updateForStickerConfiguration:animated:]


AVTViewUpdater : NSObject <SCNSceneRendererDelegate>
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  <AVTUILogger> *logger
 @property  <AVTAvatarRecord> *avatarRecord
 @property  AVTAvatar *currentAvatar
 @property  AVTView *avtView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTViewUpdater logger]
  -[AVTViewUpdater callbackQueue]
  -[AVTViewUpdater .cxx_destruct]
  -[AVTViewUpdater avtView]
  -[AVTViewUpdater avatarRecord]
  -[AVTViewUpdater setAvatarRecord:]
  -[AVTViewUpdater initWithAVTView:logger:]
  -[AVTViewUpdater initWithAVTView:callbackQueue:logger:]
  -[AVTViewUpdater setAvatarRecord:completionHandler:]
  -[AVTViewUpdater setStickerConfiguration:completionHandler:]
  -[AVTViewUpdater setAvatarRecord:avatar:completionHandler:]
  -[AVTViewUpdater willUpdateViewForRecord:avatar:]
  -[AVTViewUpdater addAvatarPresentedOnScreenCallbackWithQueue:forTimestamp:]
  -[AVTViewUpdater currentAvatar]
  -[AVTViewUpdater setCurrentAvatar:]


AVTEdgeDisappearingCollectionViewLayout : UICollectionViewFlowLayout
 @property  UICollectionViewLayoutAttributes *fixedHeaderLayoutAttributes
 @property  BOOL enableEdgeDisappearing
 @property  BOOL pinHeaderToVisible

  // instance methods
  -[AVTEdgeDisappearingCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[AVTEdgeDisappearingCollectionViewLayout prepareLayout]
  -[AVTEdgeDisappearingCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[AVTEdgeDisappearingCollectionViewLayout layoutAttributesForElementsInRect:]
  -[AVTEdgeDisappearingCollectionViewLayout .cxx_destruct]
  -[AVTEdgeDisappearingCollectionViewLayout isRTL]
  -[AVTEdgeDisappearingCollectionViewLayout modifyLayoutAttributes:]
  -[AVTEdgeDisappearingCollectionViewLayout enableEdgeDisappearing]
  -[AVTEdgeDisappearingCollectionViewLayout setEnableEdgeDisappearing:]
  -[AVTEdgeDisappearingCollectionViewLayout pinHeaderToVisible]
  -[AVTEdgeDisappearingCollectionViewLayout setPinHeaderToVisible:]
  -[AVTEdgeDisappearingCollectionViewLayout fixedHeaderLayoutAttributes]
  -[AVTEdgeDisappearingCollectionViewLayout setFixedHeaderLayoutAttributes:]


AVTCoreModelColorVariation : NSObject
 @property  AVTColorPreset *colorPreset
 @property  AVTCoreModelColor *color

  // instance methods
  -[AVTCoreModelColorVariation .cxx_destruct]
  -[AVTCoreModelColorVariation color]
  -[AVTCoreModelColorVariation isEqual:]
  -[AVTCoreModelColorVariation colorPreset]
  -[AVTCoreModelColorVariation initWithColor:colorPreset:]


AVTAvatarInlineActionsController : NSObject <AVTAvatarActionsModelDelegate, AVTAvatarEditorViewControllerDelegate, AVTAvatarActionsController>
 @property  NSArray *inlineActionButtons
 @property  BOOL buttonsDisabled
 @property  AVTAvatarRecordDataSource *dataSource
 @property  AVTAvatarActionsProvider *actionsModel
 @property  AVTAvatarEditorViewController *editorViewController
 @property  AVTViewSessionProvider *avtViewSessionProvider
 @property  AVTUIEnvironment *environment
 @property  BOOL isCreatingAvatar
 @property  BOOL shouldHideUserInfoView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTAvatarActionsControllerDelegate> *delegate

  // class methods
  +[AVTAvatarInlineActionsController buttonForAction:]

  // instance methods
  -[AVTAvatarInlineActionsController dataSource]
  -[AVTAvatarInlineActionsController setDelegate:]
  -[AVTAvatarInlineActionsController delegate]
  -[AVTAvatarInlineActionsController .cxx_destruct]
  -[AVTAvatarInlineActionsController setDataSource:]
  -[AVTAvatarInlineActionsController environment]
  -[AVTAvatarInlineActionsController inlineActionButtons]
  -[AVTAvatarInlineActionsController setButtonsDisabled:]
  -[AVTAvatarInlineActionsController buttonsDisabled]
  -[AVTAvatarInlineActionsController avatarEditorViewController:didFinishWithAvatarRecord:]
  -[AVTAvatarInlineActionsController avatarEditorViewControllerDidCancel:]
  -[AVTAvatarInlineActionsController actionsModel]
  -[AVTAvatarInlineActionsController setActionsModel:]
  -[AVTAvatarInlineActionsController shouldHideUserInfoView]
  -[AVTAvatarInlineActionsController setShouldHideUserInfoView:]
  -[AVTAvatarInlineActionsController avtViewSessionProvider]
  -[AVTAvatarInlineActionsController performCreateForActionsModel:]
  -[AVTAvatarInlineActionsController performEditForActionsModel:]
  -[AVTAvatarInlineActionsController performDuplicateForActionsModel:]
  -[AVTAvatarInlineActionsController performDeleteForActionsModel:]
  -[AVTAvatarInlineActionsController updateWithActionsModel:]
  -[AVTAvatarInlineActionsController updateForChangedContentCategorySize]
  -[AVTAvatarInlineActionsController initWithDataSource:avtViewProvider:environment:]
  -[AVTAvatarInlineActionsController performEdit]
  -[AVTAvatarInlineActionsController confirmShouldDeleteRecord:sender:resultBlock:]
  -[AVTAvatarInlineActionsController presentEditor:forCreating:]
  -[AVTAvatarInlineActionsController setInlineActionButtons:]
  -[AVTAvatarInlineActionsController editorViewController]
  -[AVTAvatarInlineActionsController setEditorViewController:]
  -[AVTAvatarInlineActionsController isCreatingAvatar]
  -[AVTAvatarInlineActionsController setIsCreatingAvatar:]


AVTAvatarAttributeEditorMulticolorPickerCell : UICollectionViewCell
 @property  UILabel *label
 @property  CALayer *colorView
 @property  UIButton *clearButton
 @property  <AVTAvatarAttributeEditorSectionItem> *item
 @property  <AVTAvatarAttributeEditorMulticolorPickerCellDelegate> *delegate

  // class methods
  +[AVTAvatarAttributeEditorMulticolorPickerCell labelFont]
  +[AVTAvatarAttributeEditorMulticolorPickerCell cellIdentifier]
  +[AVTAvatarAttributeEditorMulticolorPickerCell estimatedWidthForLabelSize:isRemovable:isSelected:]
  +[AVTAvatarAttributeEditorMulticolorPickerCell estimatedTitleSpaceForWidth:isRemovable:isSelected:]

  // instance methods
  -[AVTAvatarAttributeEditorMulticolorPickerCell setItem:]
  -[AVTAvatarAttributeEditorMulticolorPickerCell setDelegate:]
  -[AVTAvatarAttributeEditorMulticolorPickerCell clearButton]
  -[AVTAvatarAttributeEditorMulticolorPickerCell delegate]
  -[AVTAvatarAttributeEditorMulticolorPickerCell setLabel:]
  -[AVTAvatarAttributeEditorMulticolorPickerCell setSelected:]
  -[AVTAvatarAttributeEditorMulticolorPickerCell .cxx_destruct]
  -[AVTAvatarAttributeEditorMulticolorPickerCell layoutSubviews]
  -[AVTAvatarAttributeEditorMulticolorPickerCell item]
  -[AVTAvatarAttributeEditorMulticolorPickerCell label]
  -[AVTAvatarAttributeEditorMulticolorPickerCell initWithFrame:]
  -[AVTAvatarAttributeEditorMulticolorPickerCell isRTL]
  -[AVTAvatarAttributeEditorMulticolorPickerCell traitCollectionDidChange:]
  -[AVTAvatarAttributeEditorMulticolorPickerCell isRemovable]
  -[AVTAvatarAttributeEditorMulticolorPickerCell colorView]
  -[AVTAvatarAttributeEditorMulticolorPickerCell setColorView:]
  -[AVTAvatarAttributeEditorMulticolorPickerCell updateColor]
  -[AVTAvatarAttributeEditorMulticolorPickerCell didTapClearButton:]
  -[AVTAvatarAttributeEditorMulticolorPickerCell isShowingRemoveButton]
  -[AVTAvatarAttributeEditorMulticolorPickerCell showDropShadow]
  -[AVTAvatarAttributeEditorMulticolorPickerCell layoutForRTL]
  -[AVTAvatarAttributeEditorMulticolorPickerCell layoutForLTR]
  -[AVTAvatarAttributeEditorMulticolorPickerCell applyAppearanceForSelected:]
  -[AVTAvatarAttributeEditorMulticolorPickerCell applySelectedAppearanceForStyle:]
  -[AVTAvatarAttributeEditorMulticolorPickerCell applyDefaultAppearanceForStyle:]
  -[AVTAvatarAttributeEditorMulticolorPickerCell updateColorViewBorder]
  -[AVTAvatarAttributeEditorMulticolorPickerCell shouldShowColorBorder]
  -[AVTAvatarAttributeEditorMulticolorPickerCell setClearButton:]


AVTStickerSheetCollectionView : UICollectionView
  // instance methods
  -[AVTStickerSheetCollectionView safeAreaInsetsDidChange]


AVTStickerSheetController : NSObject <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, AVTNotifyingContainerViewDelegate, AVTStickerCollectionViewCellDelegate, AVTStickerSheetController>
 @property  UIView *view
 @property  AVTStickerSheetCollectionView *collectionView
 @property  BOOL isPageVisible
 @property  BOOL areAllStickersRendered
 @property  AVTStickerSheetModel *model
 @property  UIImage *placeholderImage
 @property  <AVTStickerTaskScheduler> *taskScheduler
 @property  BOOL showPrereleaseSticker
 @property  BOOL allowsPeel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {UIEdgeInsets=dddd} sectionInsets
 @property  <AVTStickerSheetControllerDelegate> *delegate
 @property  <AVTStickerDisclosureValidationDelegate> *disclosureValidationDelegate
 @property  <AVTAvatarRecord> *avatarRecord
 @property  <AVTPresenterDelegate> *presenterDelegate

  // instance methods
  -[AVTStickerSheetController setCollectionView:]
  -[AVTStickerSheetController topPadding]
  -[AVTStickerSheetController scrollToContentOffset:animated:]
  -[AVTStickerSheetController setModel:]
  -[AVTStickerSheetController collectionView:cellForItemAtIndexPath:]
  -[AVTStickerSheetController taskScheduler]
  -[AVTStickerSheetController model]
  -[AVTStickerSheetController scrollViewDidScroll:]
  -[AVTStickerSheetController collectionView:layout:insetForSectionAtIndex:]
  -[AVTStickerSheetController setDelegate:]
  -[AVTStickerSheetController delegate]
  -[AVTStickerSheetController numberOfSectionsInCollectionView:]
  -[AVTStickerSheetController setPresenterDelegate:]
  -[AVTStickerSheetController setPlaceholderImage:]
  -[AVTStickerSheetController dealloc]
  -[AVTStickerSheetController view]
  -[AVTStickerSheetController collectionView:layout:sizeForItemAtIndexPath:]
  -[AVTStickerSheetController collectionView:canFocusItemAtIndexPath:]
  -[AVTStickerSheetController .cxx_destruct]
  -[AVTStickerSheetController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[AVTStickerSheetController collectionView]
  -[AVTStickerSheetController loadView]
  -[AVTStickerSheetController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[AVTStickerSheetController setView:]
  -[AVTStickerSheetController collectionView:numberOfItemsInSection:]
  -[AVTStickerSheetController placeholderImage]
  -[AVTStickerSheetController presenterDelegate]
  -[AVTStickerSheetController placeholderProvider]
  -[AVTStickerSheetController sectionInsets]
  -[AVTStickerSheetController setSectionInsets:]
  -[AVTStickerSheetController avatarRecord]
  -[AVTStickerSheetController numberOfItemsPerRow]
  -[AVTStickerSheetController notifyingContainerViewWillChangeSize:]
  -[AVTStickerSheetController notifyingContainerViewDidChangeSize:]
  -[AVTStickerSheetController stickerCellDidTapSticker:]
  -[AVTStickerSheetController stickerCellDidPeelSticker:]
  -[AVTStickerSheetController sheetWillAppear]
  -[AVTStickerSheetController sheetDidDisappear]
  -[AVTStickerSheetController firstStickerView]
  -[AVTStickerSheetController startAllSchedulerTasks]
  -[AVTStickerSheetController disclosureValidationDelegate]
  -[AVTStickerSheetController setDisclosureValidationDelegate:]
  -[AVTStickerSheetController initWithStickerSheetModel:taskScheduler:allowsPeel:]
  -[AVTStickerSheetController minimumContentSizeForSize:]
  -[AVTStickerSheetController maxedContentOffset:]
  -[AVTStickerSheetController startAllSchedulerTasksExcludingVisibleIndexPaths:]
  -[AVTStickerSheetController scheduleSheetPlaceholderTask:]
  -[AVTStickerSheetController scheduleSheetStickerTask:withIndexPath:]
  -[AVTStickerSheetController discardStickerItems]
  -[AVTStickerSheetController areAllStickersRendered]
  -[AVTStickerSheetController clearStickerRendererIfNeeded]
  -[AVTStickerSheetController updateItem:withStickerResource:reloadCell:]
  -[AVTStickerSheetController reloadCollectionViewItemForStickerItem:]
  -[AVTStickerSheetController allowsPeel]
  -[AVTStickerSheetController isPageVisible]
  -[AVTStickerSheetController setIsPageVisible:]
  -[AVTStickerSheetController setAreAllStickersRendered:]
  -[AVTStickerSheetController showPrereleaseSticker]
  -[AVTStickerSheetController setShowPrereleaseSticker:]


AVTAvatarLibraryCollectionViewAddCell : UICollectionViewCell
  // class methods
  +[AVTAvatarLibraryCollectionViewAddCell cellIdentifier]

  // instance methods
  -[AVTAvatarLibraryCollectionViewAddCell initWithFrame:]


AVTCoreModelGroup : NSObject
 @property  NSString *name
 @property  NSDictionary *symbolNames
 @property  NSArray *categories
 @property  AVTEditingPreviewMode *previewMode

  // instance methods
  -[AVTCoreModelGroup categories]
  -[AVTCoreModelGroup .cxx_destruct]
  -[AVTCoreModelGroup name]
  -[AVTCoreModelGroup previewMode]
  -[AVTCoreModelGroup symbolNames]
  -[AVTCoreModelGroup initWithName:symbolNames:previewMode:categories:]


AVTHEIFImageEncoder : NSObject <AVTImageEncoder>
 @property  BOOL useHEICSSequence
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTHEIFImageEncoder HEICSSequenceEncoder]
  +[AVTHEIFImageEncoder defaultHEICEncoder]

  // instance methods
  -[AVTHEIFImageEncoder fileExtension]
  -[AVTHEIFImageEncoder imageFromURL:error:]
  -[AVTHEIFImageEncoder imageFromData:error:]
  -[AVTHEIFImageEncoder dataFromImage:]
  -[AVTHEIFImageEncoder initUsingHeicsSequence:]
  -[AVTHEIFImageEncoder useHEICSSequence]


AVTUIRaiseGestureManager : NSObject <CMWakeGestureDelegate>
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  CMWakeGestureManager *wakeGestureManager
 @property  <AVTUIRaiseGestureManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTUIRaiseGestureManager setDelegate:]
  -[AVTUIRaiseGestureManager delegate]
  -[AVTUIRaiseGestureManager callbackQueue]
  -[AVTUIRaiseGestureManager dealloc]
  -[AVTUIRaiseGestureManager wakeGestureManager:didUpdateWakeGesture:]
  -[AVTUIRaiseGestureManager .cxx_destruct]
  -[AVTUIRaiseGestureManager init]
  -[AVTUIRaiseGestureManager initWithBackingWakeGestureManager:callbackQueue:]
  -[AVTUIRaiseGestureManager startRaiseGestureUpdates]
  -[AVTUIRaiseGestureManager stopRaiseGestureUpdates]
  -[AVTUIRaiseGestureManager wakeGestureManager]


AVTPoseSelectionViewController : UIViewController <AVTPoseSelectionGridViewControllerDelegate>
 @property  unsigned long poseTypes
 @property  unsigned long mode
 @property  AVTRecordingButton *captureButton
 @property  AVTCircularButton *discardButton
 @property  <AVTAvatarRecord> *avatarRecord
 @property  AVTAnimojiPoseSelectionHeaderViewController *headerViewController
 @property  NSLayoutConstraint *headerHeightConstraint
 @property  AVTPoseSelectionGridViewController *gridViewController
 @property  NSArray *stickerConfigurations
 @property  UIView *headerDropShadowView
 @property  UIBarButtonItem *doneButton
 @property  UIView *borderMaskView
 @property  BOOL shouldNotifyDelegateOnSelection
 @property  <AVTPoseSelectionViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTPoseSelectionViewController poseConfigurationsForTypes:avatarRecord:]
  +[AVTPoseSelectionViewController borderMaskRectForContentRect:]

  // instance methods
  -[AVTPoseSelectionViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[AVTPoseSelectionViewController setDoneButton:]
  -[AVTPoseSelectionViewController setDelegate:]
  -[AVTPoseSelectionViewController delegate]
  -[AVTPoseSelectionViewController doneButton]
  -[AVTPoseSelectionViewController viewWillLayoutSubviews]
  -[AVTPoseSelectionViewController mode]
  -[AVTPoseSelectionViewController .cxx_destruct]
  -[AVTPoseSelectionViewController viewDidLoad]
  -[AVTPoseSelectionViewController viewWillAppear:]
  -[AVTPoseSelectionViewController setMode:]
  -[AVTPoseSelectionViewController viewWillDisappear:]
  -[AVTPoseSelectionViewController headerViewController]
  -[AVTPoseSelectionViewController canBecomeFirstResponder]
  -[AVTPoseSelectionViewController keyCommands]
  -[AVTPoseSelectionViewController initWithSelectedRecord:]
  -[AVTPoseSelectionViewController headerHeightConstraint]
  -[AVTPoseSelectionViewController setHeaderHeightConstraint:]
  -[AVTPoseSelectionViewController didTapCaptureButton:]
  -[AVTPoseSelectionViewController avatarRecord]
  -[AVTPoseSelectionViewController setAvatarRecord:]
  -[AVTPoseSelectionViewController setHeaderViewController:]
  -[AVTPoseSelectionViewController headerDropShadowView]
  -[AVTPoseSelectionViewController setHeaderDropShadowView:]
  -[AVTPoseSelectionViewController gridViewController]
  -[AVTPoseSelectionViewController didTapCancel:]
  -[AVTPoseSelectionViewController didTapDone:]
  -[AVTPoseSelectionViewController setGridViewController:]
  -[AVTPoseSelectionViewController didTapDiscardButton:]
  -[AVTPoseSelectionViewController updateHeaderHeightConstraint]
  -[AVTPoseSelectionViewController createCaptureButtonIfNeeded]
  -[AVTPoseSelectionViewController createDiscardButtonIfNeeded]
  -[AVTPoseSelectionViewController borderMaskView]
  -[AVTPoseSelectionViewController setBorderMaskView:]
  -[AVTPoseSelectionViewController captureButton]
  -[AVTPoseSelectionViewController setCaptureButton:]
  -[AVTPoseSelectionViewController discardButton]
  -[AVTPoseSelectionViewController setDiscardButton:]
  -[AVTPoseSelectionViewController returnPressed:]
  -[AVTPoseSelectionViewController poseSelectionGridController:didSelectConfiguration:]
  -[AVTPoseSelectionViewController poseSelectionGridControllerDidSelectCameraItem:]
  -[AVTPoseSelectionViewController initWithSelectedRecord:poseTypes:]
  -[AVTPoseSelectionViewController initWithSelectedRecord:poseConfigurations:]
  -[AVTPoseSelectionViewController notifyDelegateOfSelectedPose]
  -[AVTPoseSelectionViewController updateForPoseConfiguration:animated:]
  -[AVTPoseSelectionViewController poseTypes]
  -[AVTPoseSelectionViewController setPoseTypes:]
  -[AVTPoseSelectionViewController stickerConfigurations]
  -[AVTPoseSelectionViewController setStickerConfigurations:]
  -[AVTPoseSelectionViewController shouldNotifyDelegateOnSelection]
  -[AVTPoseSelectionViewController setShouldNotifyDelegateOnSelection:]


AVTUIEnvironment : NSObject
 @property  AVTCoreEnvironment *coreEnvironment
 @property  unsigned long platform
 @property  <AVTUILogger> *logger
 @property  double mainScreenScale
 @property  {CGSize=dd} mainScreenSize
 @property  long long userInterfaceLayoutDirection
 @property  BOOL deviceIsPad
 @property  BOOL deviceIsMac
 @property  @? serialQueueProvider
 @property  @? lockProvider
 @property  NSObject<OS_dispatch_queue> *backgroundQueue
 @property  NSObject<OS_dispatch_queue> *backgroundRenderingQueue
 @property  NSObject<OS_dispatch_queue> *backgroundEncodingQueue
 @property  AVTCoreModel *editorCoreModel
 @property  NSURL *storeLocation
 @property  NSURL *imageStoreLocation
 @property  NSURL *stickerImageStoreLocation
 @property  NSURL *imageCacheStoreLocation
 @property  AVTAvatarConfigurationImageRenderer *renderer
 @property  AVTAvatarRemoteImageRenderer *remoteRenderer
 @property  AVTMemoji *editorThumbnailAvatar
 @property  NSNotificationCenter *notificationCenter
 @property  AVTDeviceResourceManager *deviceResourceManager
 @property  <AVTImageCache> *inMemoryImageCache
 @property  <AVTUsageTrackingSession> *usageTrackingSession
 @property  NSUserDefaults *userDefaults
 @property  double actionAnimationsMultiplier

  // class methods
  +[AVTUIEnvironment defaultEnvironment]
  +[AVTUIEnvironment createFunCamEnvironment]
  +[AVTUIEnvironment createQueueWithQoSClass:label:]
  +[AVTUIEnvironment createEditorCoreModelForPlatform:withLogger:]
  +[AVTUIEnvironment createUsageTrackingSessionWithCoreModel:serialQueueProvider:logger:]

  // instance methods
  -[AVTUIEnvironment notificationCenter]
  -[AVTUIEnvironment mainScreenSize]
  -[AVTUIEnvironment logger]
  -[AVTUIEnvironment userDefaults]
  -[AVTUIEnvironment platform]
  -[AVTUIEnvironment deviceIsMac]
  -[AVTUIEnvironment .cxx_destruct]
  -[AVTUIEnvironment renderer]
  -[AVTUIEnvironment backgroundQueue]
  -[AVTUIEnvironment userInterfaceLayoutDirection]
  -[AVTUIEnvironment deviceIsPad]
  -[AVTUIEnvironment mainScreenScale]
  -[AVTUIEnvironment storeLocation]
  -[AVTUIEnvironment lockProvider]
  -[AVTUIEnvironment initWithCoreEnvironment:]
  -[AVTUIEnvironment initWithCoreEnvironment:platform:]
  -[AVTUIEnvironment flushResourcesForEnteringBackground]
  -[AVTUIEnvironment editorCoreModel]
  -[AVTUIEnvironment remoteRenderer]
  -[AVTUIEnvironment editorThumbnailAvatar]
  -[AVTUIEnvironment inMemoryImageCache]
  -[AVTUIEnvironment usageTrackingSession]
  -[AVTUIEnvironment serialQueueProvider]
  -[AVTUIEnvironment imageStoreLocation]
  -[AVTUIEnvironment imageCacheStoreLocation]
  -[AVTUIEnvironment stickerImageStoreLocation]
  -[AVTUIEnvironment coreEnvironment]
  -[AVTUIEnvironment backgroundRenderingQueue]
  -[AVTUIEnvironment backgroundEncodingQueue]
  -[AVTUIEnvironment deviceResourceManager]
  -[AVTUIEnvironment actionAnimationsMultiplier]
  -[AVTUIEnvironment setActionAnimationsMultiplier:]


AVTAvatarAttributeEditorDataSource : NSObject <AVTAvatarAttributeEditorModelManagerDelegateInternal>
 @property  NSArray *categories
 @property  NSMutableDictionary *sectionControllers
 @property  NSMutableDictionary *sectionCoordinatorsByProvider
 @property  AVTUIEnvironment *environment
 @property  <AVTTaskScheduler> *renderingScheduler
 @property  unsigned long currentCategoryIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarAttributeEditorDataSource sectionControllerForSection:renderingScheduler:environment:]
  +[AVTAvatarAttributeEditorDataSource indexForCurrentCategoryGivenPreferredIdentifier:categories:]

  // instance methods
  -[AVTAvatarAttributeEditorDataSource categories]
  -[AVTAvatarAttributeEditorDataSource sectionControllers]
  -[AVTAvatarAttributeEditorDataSource .cxx_destruct]
  -[AVTAvatarAttributeEditorDataSource environment]
  -[AVTAvatarAttributeEditorDataSource setCategories:]
  -[AVTAvatarAttributeEditorDataSource numberOfCategories]
  -[AVTAvatarAttributeEditorDataSource categoryAtIndex:]
  -[AVTAvatarAttributeEditorDataSource sectionControllerForSection:]
  -[AVTAvatarAttributeEditorDataSource setSectionControllers:]
  -[AVTAvatarAttributeEditorDataSource renderingScheduler]
  -[AVTAvatarAttributeEditorDataSource shouldDisplaySectionWithDisplayCondition:inCategoryAtIndex:]
  -[AVTAvatarAttributeEditorDataSource initWithCategories:currentCategoryIdentifier:renderingScheduler:]
  -[AVTAvatarAttributeEditorDataSource initWithCategories:currentCategoryIdentifier:renderingScheduler:environment:]
  -[AVTAvatarAttributeEditorDataSource reloadWithCategories:currentCategoryIndex:]
  -[AVTAvatarAttributeEditorDataSource updateCoordinatorsFromCategory:currentCoordinators:]
  -[AVTAvatarAttributeEditorDataSource discardControllersForNonCurrentCategory]
  -[AVTAvatarAttributeEditorDataSource groupPickerItemsForCategories]
  -[AVTAvatarAttributeEditorDataSource sectionProviderForSectionAtIndex:inCategoryAtIndex:]
  -[AVTAvatarAttributeEditorDataSource numberOfSectionsForCategoryAtIndex:]
  -[AVTAvatarAttributeEditorDataSource sectionControllerForSectionIndex:inCategoryAtIndex:]
  -[AVTAvatarAttributeEditorDataSource sectionCoordinatorForSectionAtIndex:inCategoryAtIndex:]
  -[AVTAvatarAttributeEditorDataSource sectionForIndex:inCategoryAtIndex:]
  -[AVTAvatarAttributeEditorDataSource indexForSection:inCategoryAtIndex:]
  -[AVTAvatarAttributeEditorDataSource indexesForSectionsExcludingSectionsWithIdentifiers:inCategoryAtIndex:]
  -[AVTAvatarAttributeEditorDataSource indexesForSectionsPresentIn:butNotIn:]
  -[AVTAvatarAttributeEditorDataSource currentCategoryIdentifier]
  -[AVTAvatarAttributeEditorDataSource currentCategoryIndex]
  -[AVTAvatarAttributeEditorDataSource setCurrentCategoryIndex:]
  -[AVTAvatarAttributeEditorDataSource sectionCoordinatorsByProvider]
  -[AVTAvatarAttributeEditorDataSource setSectionCoordinatorsByProvider:]


AVTCenteringCollectionViewHelper : NSObject
  // class methods
  +[AVTCenteringCollectionViewHelper insetsForBounds:withFirstCellSize:lastCellSize:]
  +[AVTCenteringCollectionViewHelper indexPathForNearestItemToCenterWithOffset:collectionView:]
  +[AVTCenteringCollectionViewHelper contentOffsetForCenteringPoint:collectionView:]
  +[AVTCenteringCollectionViewHelper indexPathForItemBeingScrolledTowardFromOffset:currentOffset:nearestItemToCenter:itemCount:itemOffsetProvider:ratio:]


AVTCoreModel : NSObject
 @property  NSArray *groups
 @property  AVTEditingModelColors *colors
 @property  AVTAvatarEditorColorDefaultsProvider *colorDefaultsProvider
 @property  unsigned long platform

  // instance methods
  -[AVTCoreModel groups]
  -[AVTCoreModel colors]
  -[AVTCoreModel platform]
  -[AVTCoreModel .cxx_destruct]
  -[AVTCoreModel initWithGroups:colors:colorDefaultsProvider:forPlatform:]
  -[AVTCoreModel colorDefaultsProvider]


AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell : UICollectionViewCell
 @property  UILabel *label
 @property  <AVTAvatarAttributeEditorSectionItem> *item

  // class methods
  +[AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell labelFont]
  +[AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell cellIdentifier]
  +[AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell estimatedWidthForLabelSize:]
  +[AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell estimatedTitleSpaceForWidth:]

  // instance methods
  -[AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell setItem:]
  -[AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell setLabel:]
  -[AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell .cxx_destruct]
  -[AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell layoutSubviews]
  -[AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell item]
  -[AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell label]
  -[AVTAvatarAttributeEditorMulticolorPickerPlaceholderCell initWithFrame:]


AVTStickerCollectionViewCell : UICollectionViewCell <AVTMSStickerViewDelegate>
 @property  UIImageView *imageView
 @property  AVTMSStickerView *stickerView
 @property  UILabel *prereleaseLabel
 @property  BOOL stickerViewIsAnimating
 @property  {CGSize=dd} fullImageSize
 @property  CAShapeLayer *selectionLayer
 @property  NSUUID *displaySessionUUID
 @property  BOOL allowsPeel
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} clippingRect
 @property  BOOL showPrereleaseSticker
 @property  BOOL showSelectionLayer
 @property  <AVTStickerCollectionViewCellDelegate> *delegate
 @property  <AVTStickerDisclosureValidationDelegate> *disclosureValidationDelegate

  // class methods
  +[AVTStickerCollectionViewCell cellIdentifier]
  +[AVTStickerCollectionViewCell imageInsetForWidth:]
  +[AVTStickerCollectionViewCell selectionPathInBounds:]

  // instance methods
  -[AVTStickerCollectionViewCell setDelegate:]
  -[AVTStickerCollectionViewCell delegate]
  -[AVTStickerCollectionViewCell setClippingRect:]
  -[AVTStickerCollectionViewCell clippingRect]
  -[AVTStickerCollectionViewCell setSelected:]
  -[AVTStickerCollectionViewCell .cxx_destruct]
  -[AVTStickerCollectionViewCell prepareForReuse]
  -[AVTStickerCollectionViewCell layoutSubviews]
  -[AVTStickerCollectionViewCell initWithFrame:]
  -[AVTStickerCollectionViewCell imageView]
  -[AVTStickerCollectionViewCell displaySessionUUID]
  -[AVTStickerCollectionViewCell setDisplaySessionUUID:]
  -[AVTStickerCollectionViewCell selectionLayer]
  -[AVTStickerCollectionViewCell setSelectionLayer:]
  -[AVTStickerCollectionViewCell stickerView]
  -[AVTStickerCollectionViewCell disclosureValidationDelegate]
  -[AVTStickerCollectionViewCell setDisclosureValidationDelegate:]
  -[AVTStickerCollectionViewCell allowsPeel]
  -[AVTStickerCollectionViewCell showPrereleaseSticker]
  -[AVTStickerCollectionViewCell setShowPrereleaseSticker:]
  -[AVTStickerCollectionViewCell stickerViewDidBeginPeel:]
  -[AVTStickerCollectionViewCell stickerViewWasTapped:]
  -[AVTStickerCollectionViewCell setAllowsPeel:]
  -[AVTStickerCollectionViewCell setupPrereleaseLabelIfNeeded]
  -[AVTStickerCollectionViewCell stickerViewFrameForImageSize:clippingRect:]
  -[AVTStickerCollectionViewCell imageSizeFromURL:]
  -[AVTStickerCollectionViewCell updateWithImage:sticker:animated:]
  -[AVTStickerCollectionViewCell purgeImageContents]
  -[AVTStickerCollectionViewCell showSelectionLayer]
  -[AVTStickerCollectionViewCell setShowSelectionLayer:]
  -[AVTStickerCollectionViewCell prereleaseLabel]
  -[AVTStickerCollectionViewCell stickerViewIsAnimating]
  -[AVTStickerCollectionViewCell setStickerViewIsAnimating:]
  -[AVTStickerCollectionViewCell fullImageSize]
  -[AVTStickerCollectionViewCell setFullImageSize:]


AVTAvatarContainerViewController : UIViewController
  // instance methods
  -[AVTAvatarContainerViewController willMoveToParentViewController:]


AVTStickerRecentsViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource, AVTStickerBackendDelegate, AVTStickerRecentsOverlayDelegate>
 @property  AVTStickerRecentsMigrator *stickerRecentsMigrator
 @property  AVTStickerRecentsOverlayView *overlayView
 @property  <NSObject> *avatarStoreChangeObserver
 @property  BOOL hasFetchedDefaultMemoji
 @property  <AVTAvatarRecord> *defaultMemoji
 @property  AVTClippableImageStore *imageStore
 @property  UICollectionViewFlowLayout *collectionViewLayout
 @property  UICollectionView *collectionView
 @property  <AVTAvatarStoreInternal> *avatarStore
 @property  AVTUIEnvironment *environment
 @property  <AVTResourceCache> *cache
 @property  AVTStickerGenerator *stickerGenerator
 @property  NSObject<OS_dispatch_queue> *recentsWorkQueue
 @property  NSObject<OS_dispatch_queue> *renderingQueue
 @property  NSObject<OS_dispatch_queue> *encodingQueue
 @property  AVTStickerConfigurationProvider *configurationProvider
 @property  AVTSerialTaskScheduler *taskScheduler
 @property  AVTUIStickerGeneratorPool *generatorPool
 @property  AVTStickerRecentsLayout *stickerRecentsLayout
 @property  <AVTStickerRecentsItem> *buttonItem
 @property  NSArray *stickerItems
 @property  NSArray *displayItems
 @property  BOOL showPrereleaseSticker
 @property  CALayer *edgeMaskLayer
 @property  <AVTStickerRecentsViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTStickerRecentsViewController layoutForSize:]
  +[AVTStickerRecentsViewController stickerForRecentItem:]
  +[AVTStickerRecentsViewController stickerCacheWithEnvironment:]
  +[AVTStickerRecentsViewController imageStoreWithEnvironment:]
  +[AVTStickerRecentsViewController stickerRecentsController]
  +[AVTStickerRecentsViewController stickerRecentsControllerForStore:]

  // instance methods
  -[AVTStickerRecentsViewController setCollectionView:]
  -[AVTStickerRecentsViewController collectionView:cellForItemAtIndexPath:]
  -[AVTStickerRecentsViewController taskScheduler]
  -[AVTStickerRecentsViewController displayItems]
  -[AVTStickerRecentsViewController collectionViewLayout]
  -[AVTStickerRecentsViewController setDelegate:]
  -[AVTStickerRecentsViewController delegate]
  -[AVTStickerRecentsViewController viewWillLayoutSubviews]
  -[AVTStickerRecentsViewController viewDidAppear:]
  -[AVTStickerRecentsViewController dealloc]
  -[AVTStickerRecentsViewController cache]
  -[AVTStickerRecentsViewController .cxx_destruct]
  -[AVTStickerRecentsViewController collectionView]
  -[AVTStickerRecentsViewController viewDidLoad]
  -[AVTStickerRecentsViewController overlayView]
  -[AVTStickerRecentsViewController viewDidLayoutSubviews]
  -[AVTStickerRecentsViewController buttonItem]
  -[AVTStickerRecentsViewController collectionView:didSelectItemAtIndexPath:]
  -[AVTStickerRecentsViewController setDisplayItems:]
  -[AVTStickerRecentsViewController collectionView:numberOfItemsInSection:]
  -[AVTStickerRecentsViewController setOverlayView:]
  -[AVTStickerRecentsViewController traitCollectionDidChange:]
  -[AVTStickerRecentsViewController setButtonItem:]
  -[AVTStickerRecentsViewController environment]
  -[AVTStickerRecentsViewController setCollectionViewLayout:]
  -[AVTStickerRecentsViewController configurationProvider]
  -[AVTStickerRecentsViewController setConfigurationProvider:]
  -[AVTStickerRecentsViewController avatarStore]
  -[AVTStickerRecentsViewController renderingQueue]
  -[AVTStickerRecentsViewController placeholderItems]
  -[AVTStickerRecentsViewController imageStore]
  -[AVTStickerRecentsViewController generatorPool]
  -[AVTStickerRecentsViewController setGeneratorPool:]
  -[AVTStickerRecentsViewController showPrereleaseSticker]
  -[AVTStickerRecentsViewController setShowPrereleaseSticker:]
  -[AVTStickerRecentsViewController recentStickersDidChange:]
  -[AVTStickerRecentsViewController overlayDidTapContentView:]
  -[AVTStickerRecentsViewController overlayDidTapCloseButton:]
  -[AVTStickerRecentsViewController overlayDidTapContinueButton:]
  -[AVTStickerRecentsViewController initWithAvatarStore:environment:]
  -[AVTStickerRecentsViewController setupRenderingDependentPieces]
  -[AVTStickerRecentsViewController beginObservingAvatarStoreChanges]
  -[AVTStickerRecentsViewController endObservingAvatarStoreChanges]
  -[AVTStickerRecentsViewController fetchDefaultMemojiIfNeeded]
  -[AVTStickerRecentsViewController determineOverlayTypeWithCompletionBlock:]
  -[AVTStickerRecentsViewController buildRecentsItemsWithCompletionBlock:]
  -[AVTStickerRecentsViewController updateDisplayItems]
  -[AVTStickerRecentsViewController recentStickersWithCount:]
  -[AVTStickerRecentsViewController dismissOverlayViewAnimated:]
  -[AVTStickerRecentsViewController updateItemSizeForContainerSize:]
  -[AVTStickerRecentsViewController edgeInsetsForContainerSize:]
  -[AVTStickerRecentsViewController stickerRecentsMigrator]
  -[AVTStickerRecentsViewController setStickerRecentsMigrator:]
  -[AVTStickerRecentsViewController avatarStoreChangeObserver]
  -[AVTStickerRecentsViewController setAvatarStoreChangeObserver:]
  -[AVTStickerRecentsViewController hasFetchedDefaultMemoji]
  -[AVTStickerRecentsViewController setHasFetchedDefaultMemoji:]
  -[AVTStickerRecentsViewController defaultMemoji]
  -[AVTStickerRecentsViewController setDefaultMemoji:]
  -[AVTStickerRecentsViewController setImageStore:]
  -[AVTStickerRecentsViewController stickerGenerator]
  -[AVTStickerRecentsViewController recentsWorkQueue]
  -[AVTStickerRecentsViewController setRecentsWorkQueue:]
  -[AVTStickerRecentsViewController setRenderingQueue:]
  -[AVTStickerRecentsViewController encodingQueue]
  -[AVTStickerRecentsViewController setEncodingQueue:]
  -[AVTStickerRecentsViewController setTaskScheduler:]
  -[AVTStickerRecentsViewController stickerRecentsLayout]
  -[AVTStickerRecentsViewController stickerItems]
  -[AVTStickerRecentsViewController setStickerItems:]
  -[AVTStickerRecentsViewController edgeMaskLayer]
  -[AVTStickerRecentsViewController setEdgeMaskLayer:]


AVTAvatarAttributeEditorColorSection : NSObject <AVTAvatarAttributeEditorColorSection>
 @property  NSArray *primaryItems
 @property  NSArray *extendedItems
 @property  BOOL alwaysShowExtended
 @property  AVTAvatarColorVariationStore *colorVariationStore
 @property  NSString *localizedName
 @property  NSArray *sectionItems
 @property  NSString *identifier
 @property  AVTAvatarAttributeEditorSectionOptions *options
 @property  unsigned long intendedDestination
 @property  {UIEdgeInsets=dddd} separatorInsets
 @property  <AVTAvatarAttributeEditorSectionSupplementalPicker> *supplementalPicker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *sections

  // instance methods
  -[AVTAvatarAttributeEditorColorSection setLocalizedName:]
  -[AVTAvatarAttributeEditorColorSection identifier]
  -[AVTAvatarAttributeEditorColorSection .cxx_destruct]
  -[AVTAvatarAttributeEditorColorSection options]
  -[AVTAvatarAttributeEditorColorSection localizedName]
  -[AVTAvatarAttributeEditorColorSection sectionItems]
  -[AVTAvatarAttributeEditorColorSection sections]
  -[AVTAvatarAttributeEditorColorSection colorVariationStore]
  -[AVTAvatarAttributeEditorColorSection shouldDisplayTitle]
  -[AVTAvatarAttributeEditorColorSection separatorInsets]
  -[AVTAvatarAttributeEditorColorSection shouldDisplaySeparatorBeforeSection:]
  -[AVTAvatarAttributeEditorColorSection intendedDestination]
  -[AVTAvatarAttributeEditorColorSection setIntendedDestination:]
  -[AVTAvatarAttributeEditorColorSection supplementalPicker]
  -[AVTAvatarAttributeEditorColorSection setSupplementalPicker:]
  -[AVTAvatarAttributeEditorColorSection primaryItems]
  -[AVTAvatarAttributeEditorColorSection extendedItems]
  -[AVTAvatarAttributeEditorColorSection alwaysShowExtended]
  -[AVTAvatarAttributeEditorColorSection initWithPrimaryItems:extendedItems:colorVariationStore:localizedName:identifier:intendedDestination:alwaysShowExtended:options:]
  -[AVTAvatarAttributeEditorColorSection copyWithoutTitle]


AVTGrayscaleStickerController : NSObject <AVTPoseCaptureViewControllerDelegate, AVTStickerSheetDelegate, AVTStickerSheetControllerProvider>
 @property  <AVTStickerViewControllerImageDelegate> *imageDelegate
 @property  <AVTPresenterDelegate> *presenterDelegate
 @property  <AVTStickerSelectionDelegate> *selectionDelegate
 @property  AVTStickerViewController *stickerViewController
 @property  AVTViewSessionProvider *viewSessionProvider
 @property  AVTUIEnvironment *environment
 @property  AVTUICapabilities *uiCapabilities
 @property  BOOL allowsPoseCapture
 @property  BOOL shouldHideUserInfoView
 @property  NSArray *allowedStickers
 @property  UIColor *backgroundColor
 @property  BOOL showsSelectionLayerForStickers
 @property  BOOL accessibilityIgnoresInvertColors
 @property  <AVTGrayscaleStickerControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTGrayscaleStickerController setDelegate:]
  -[AVTGrayscaleStickerController delegate]
  -[AVTGrayscaleStickerController setPresenterDelegate:]
  -[AVTGrayscaleStickerController accessibilityIgnoresInvertColors]
  -[AVTGrayscaleStickerController .cxx_destruct]
  -[AVTGrayscaleStickerController setAccessibilityIgnoresInvertColors:]
  -[AVTGrayscaleStickerController backgroundColor]
  -[AVTGrayscaleStickerController setBackgroundColor:]
  -[AVTGrayscaleStickerController environment]
  -[AVTGrayscaleStickerController presenterDelegate]
  -[AVTGrayscaleStickerController init]
  -[AVTGrayscaleStickerController selectionDelegate]
  -[AVTGrayscaleStickerController setSelectionDelegate:]
  -[AVTGrayscaleStickerController imageDelegate]
  -[AVTGrayscaleStickerController setImageDelegate:]
  -[AVTGrayscaleStickerController stickerViewController]
  -[AVTGrayscaleStickerController poseCaptureViewController:willCaptureAvatarImage:completion:]
  -[AVTGrayscaleStickerController shouldHideUserInfoView]
  -[AVTGrayscaleStickerController setShouldHideUserInfoView:]
  -[AVTGrayscaleStickerController poseCaptureViewController:didCapturePoseWithConfiguration:avatar:]
  -[AVTGrayscaleStickerController poseCaptureViewControllerDidCancel:]
  -[AVTGrayscaleStickerController stickerSheetController:didSelectCameraViewForRecord:]
  -[AVTGrayscaleStickerController stickerSheetControllerForSelectedAvatar:stickerSheetModel:taskScheduler:]
  -[AVTGrayscaleStickerController stickerViewControllerForFetchRequest:allowedStickers:stickerPacks:allowPoseCapture:showUserInfoView:allowEditing:backgroundColor:grayscaleConvertionDelegate:presenterDelegate:selectionDelegate:]
  -[AVTGrayscaleStickerController wrapAndPresentViewController:animated:]
  -[AVTGrayscaleStickerController shouldShowSelectionLayerForStickers]
  -[AVTGrayscaleStickerController setShowsSelectionLayerForStickers:]
  -[AVTGrayscaleStickerController setStickerViewController:]
  -[AVTGrayscaleStickerController viewSessionProvider]
  -[AVTGrayscaleStickerController setViewSessionProvider:]
  -[AVTGrayscaleStickerController uiCapabilities]
  -[AVTGrayscaleStickerController setUiCapabilities:]
  -[AVTGrayscaleStickerController allowsPoseCapture]
  -[AVTGrayscaleStickerController setAllowsPoseCapture:]
  -[AVTGrayscaleStickerController allowedStickers]
  -[AVTGrayscaleStickerController setAllowedStickers:]


AVTUIImageUtilities : NSObject
  // class methods
  +[AVTUIImageUtilities trimmedImageByTrimmingTransparentPixelsFromImage:]


AVTActionsToAttributeEditorTransitionAnimator : NSObject <UIViewControllerAnimatedTransitioning>
 @property  AVTUIEnvironment *environment
 @property  <AVTViewLayoutInfo> *avtViewLayoutInfo
 @property  BOOL RTL
 @property  double userInfoViewHeight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTActionsToAttributeEditorTransitionAnimator adjustedSafeAreaInsetsForView:]

  // instance methods
  -[AVTActionsToAttributeEditorTransitionAnimator animateTransition:]
  -[AVTActionsToAttributeEditorTransitionAnimator transitionDuration:]
  -[AVTActionsToAttributeEditorTransitionAnimator .cxx_destruct]
  -[AVTActionsToAttributeEditorTransitionAnimator environment]
  -[AVTActionsToAttributeEditorTransitionAnimator RTL]
  -[AVTActionsToAttributeEditorTransitionAnimator initWithAVTViewLayoutInfo:userInfoViewHeight:RTL:environment:]
  -[AVTActionsToAttributeEditorTransitionAnimator avtViewLayoutInfo]
  -[AVTActionsToAttributeEditorTransitionAnimator userInfoViewHeight]


AVTAvatarEditorViewController : UIViewController <AVTSplashScreenViewControllerDelegate, AVTAvatarAttributeEditorViewControllerDelegate, UIAdaptivePresentationControllerDelegate, AVTToolBarDelegate, AVTUIControllerPresentationDelegate>
 @property  AVTAvatarRecord *initialAvatarRecord
 @property  <AVTAvatarStoreInternal> *store
 @property  AVTViewSessionProvider *avtViewSessionProvider
 @property  AVTUIEnvironment *environment
 @property  <AVTUILogger> *logger
 @property  BOOL isCreating
 @property  UIBarButtonItem *cancelButtonItem
 @property  UIBarButtonItem *doneButtonItem
 @property  AVTToolBar *toolbar
 @property  BOOL hasChanges
 @property  AVTSplashScreenViewController *splashScreenViewController
 @property  AVTAvatarAttributeEditorViewController *attributeEditorViewController
 @property  BOOL disableAvatarSnapshotting
 @property  <AVTAvatarEditorViewControllerDelegate> *delegate
 @property  BOOL shouldHideUserInfoView
 @property  unsigned long editorPresentationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarEditorViewController viewControllerForCreatingAvatarInStore:]
  +[AVTAvatarEditorViewController shouldShowSplashScreen]
  +[AVTAvatarEditorViewController defaultSessionProvider]
  +[AVTAvatarEditorViewController viewControllerForEditingAvatar:store:]
  +[AVTAvatarEditorViewController viewControllerForEditingAvatar:avtViewSessionProvider:store:]
  +[AVTAvatarEditorViewController viewControllerForCreatingAvatarInStore:avtViewSessionProvider:]

  // instance methods
  -[AVTAvatarEditorViewController hasChanges]
  -[AVTAvatarEditorViewController presentationControllerShouldDismiss:]
  -[AVTAvatarEditorViewController logger]
  -[AVTAvatarEditorViewController cancel:]
  -[AVTAvatarEditorViewController store]
  -[AVTAvatarEditorViewController setDelegate:]
  -[AVTAvatarEditorViewController delegate]
  -[AVTAvatarEditorViewController viewDidAppear:]
  -[AVTAvatarEditorViewController toolbar]
  -[AVTAvatarEditorViewController .cxx_destruct]
  -[AVTAvatarEditorViewController viewDidLoad]
  -[AVTAvatarEditorViewController viewWillAppear:]
  -[AVTAvatarEditorViewController finish:]
  -[AVTAvatarEditorViewController presentationControllerDidAttemptToDismiss:]
  -[AVTAvatarEditorViewController canBecomeFirstResponder]
  -[AVTAvatarEditorViewController environment]
  -[AVTAvatarEditorViewController keyCommands]
  -[AVTAvatarEditorViewController setToolbar:]
  -[AVTAvatarEditorViewController isModalInPresentation]
  -[AVTAvatarEditorViewController additionalSafeAreaInsets]
  -[AVTAvatarEditorViewController setEditorPresentationContext:]
  -[AVTAvatarEditorViewController doneButtonItem]
  -[AVTAvatarEditorViewController applyLayout:]
  -[AVTAvatarEditorViewController cancelButtonItem]
  -[AVTAvatarEditorViewController setCancelButtonItem:]
  -[AVTAvatarEditorViewController setDoneButtonItem:]
  -[AVTAvatarEditorViewController setHasChanges:]
  -[AVTAvatarEditorViewController controllerPresentationWillObstructView:]
  -[AVTAvatarEditorViewController shouldHideUserInfoView]
  -[AVTAvatarEditorViewController setShouldHideUserInfoView:]
  -[AVTAvatarEditorViewController avtViewSessionProvider]
  -[AVTAvatarEditorViewController returnPressed:]
  -[AVTAvatarEditorViewController escPressed:]
  -[AVTAvatarEditorViewController splashScreenViewControllerDidCancel:]
  -[AVTAvatarEditorViewController splashScreenViewControllerDidFinish:]
  -[AVTAvatarEditorViewController attributeEditorDidMakeFirstSelection:]
  -[AVTAvatarEditorViewController attributeEditor:didUpdateVisibleLayout:]
  -[AVTAvatarEditorViewController toolbar:didSelectButton:atIndex:]
  -[AVTAvatarEditorViewController initWithAvatarRecord:avtViewSessionProvider:store:enviroment:isCreating:]
  -[AVTAvatarEditorViewController appropriatePresentationController]
  -[AVTAvatarEditorViewController setDisableAvatarSnapshotting:]
  -[AVTAvatarEditorViewController disableAvatarSnapshotting]
  -[AVTAvatarEditorViewController prepareForAnimatedTransitionWithLayout:completionBlock:]
  -[AVTAvatarEditorViewController visibleLayout]
  -[AVTAvatarEditorViewController setupInitialViewState]
  -[AVTAvatarEditorViewController loadSplashScreen]
  -[AVTAvatarEditorViewController loadAttributeEditorViewWithAvatarRecord:]
  -[AVTAvatarEditorViewController configureSplashNavigationItems]
  -[AVTAvatarEditorViewController configureEditorNavigationItems]
  -[AVTAvatarEditorViewController updateToolBarForLayout:]
  -[AVTAvatarEditorViewController enableDoneButton:]
  -[AVTAvatarEditorViewController handleDiscardAttempt]
  -[AVTAvatarEditorViewController confirmCancel:]
  -[AVTAvatarEditorViewController editorPresentationContext]
  -[AVTAvatarEditorViewController initialAvatarRecord]
  -[AVTAvatarEditorViewController setInitialAvatarRecord:]
  -[AVTAvatarEditorViewController isCreating]
  -[AVTAvatarEditorViewController splashScreenViewController]
  -[AVTAvatarEditorViewController attributeEditorViewController]
  -[AVTAvatarEditorViewController prepareForPresetsScrollTestOnCategory:readyHandler:]
  -[AVTAvatarEditorViewController configurePPTMemoji]


AVTStickerPagingController : NSObject <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, AVTStickerSheetControllerDelegate, AVTNotifyingContainerViewDelegate, AVTAvatarActionsViewControllerDelegate, AVTObjectViewController, AVTAvatarPicker, UICollectionViewDataSourcePrefetching>
 @property  NSObject<OS_dispatch_queue> *renderingQueue
 @property  NSObject<OS_dispatch_queue> *encodingQueue
 @property  AVTAvatarRecordDataSource *dataSource
 @property  AVTUIStickerGeneratorPool *stickerGeneratorPool
 @property  AVTUIEnvironment *environment
 @property  NSMutableDictionary *pageForRecords
 @property  BOOL allowsPeel
 @property  <AVTStickerTaskScheduler> *taskScheduler
 @property  <AVTResourceCache> *cache
 @property  _AVTAvatarRecordImageProvider *imageProvider
 @property  NSString *focusedPageRecordIdentifier
 @property  NSString *selectedStickerIdentifier
 @property  AVTStickerConfigurationProvider *stickerConfigurationProvider
 @property  UIView *view
 @property  UICollectionView *collectionView
 @property  {CGPoint=dd} endDraggingTargetContentOffset
 @property  BOOL isResizing
 @property  UICollectionViewCell *lastDeletedCell
 @property  {UIEdgeInsets=dddd} pageContentInsets
 @property  {CGPoint=dd} pageContentOffset
 @property  <AVTStickerPagingControllerDelegate> *delegate
 @property  <AVTStickerDisclosureValidationDelegate> *disclosureValidationDelegate
 @property  <AVTStickerSelectionDelegate> *stickerSelectionDelegate
 @property  <AVTStickerSheetControllerProvider> *stickerSheetControllerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTPresenterDelegate> *presenterDelegate
 @property  <AVTAvatarPickerDelegate> *avatarPickerDelegate

  // class methods
  +[AVTStickerPagingController stickerCacheWithEnvironment:]

  // instance methods
  -[AVTStickerPagingController setCollectionView:]
  -[AVTStickerPagingController collectionView:cellForItemAtIndexPath:]
  -[AVTStickerPagingController taskScheduler]
  -[AVTStickerPagingController collectionView:prefetchItemsAtIndexPaths:]
  -[AVTStickerPagingController reloadData]
  -[AVTStickerPagingController dataSource]
  -[AVTStickerPagingController setDelegate:]
  -[AVTStickerPagingController delegate]
  -[AVTStickerPagingController numberOfSectionsInCollectionView:]
  -[AVTStickerPagingController setPresenterDelegate:]
  -[AVTStickerPagingController setIsResizing:]
  -[AVTStickerPagingController isResizing]
  -[AVTStickerPagingController view]
  -[AVTStickerPagingController collectionView:layout:sizeForItemAtIndexPath:]
  -[AVTStickerPagingController cache]
  -[AVTStickerPagingController collectionView:canFocusItemAtIndexPath:]
  -[AVTStickerPagingController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[AVTStickerPagingController scrollViewDidEndDecelerating:]
  -[AVTStickerPagingController .cxx_destruct]
  -[AVTStickerPagingController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[AVTStickerPagingController collectionView]
  -[AVTStickerPagingController scrollToPageAtIndex:animated:]
  -[AVTStickerPagingController loadView]
  -[AVTStickerPagingController collectionView:targetContentOffsetForProposedContentOffset:]
  -[AVTStickerPagingController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[AVTStickerPagingController collectionView:cancelPrefetchingForItemsAtIndexPaths:]
  -[AVTStickerPagingController imageProvider]
  -[AVTStickerPagingController setView:]
  -[AVTStickerPagingController scrollViewDidEndScrollingAnimation:]
  -[AVTStickerPagingController setDataSource:]
  -[AVTStickerPagingController collectionView:numberOfItemsInSection:]
  -[AVTStickerPagingController setEnvironment:]
  -[AVTStickerPagingController environment]
  -[AVTStickerPagingController presenterDelegate]
  -[AVTStickerPagingController renderingQueue]
  -[AVTStickerPagingController didEndDisplaying]
  -[AVTStickerPagingController notifyingContainerViewWillChangeSize:]
  -[AVTStickerPagingController notifyingContainerViewDidChangeSize:]
  -[AVTStickerPagingController disclosureValidationDelegate]
  -[AVTStickerPagingController setDisclosureValidationDelegate:]
  -[AVTStickerPagingController clearStickerSelection]
  -[AVTStickerPagingController allowsPeel]
  -[AVTStickerPagingController setRenderingQueue:]
  -[AVTStickerPagingController encodingQueue]
  -[AVTStickerPagingController setEncodingQueue:]
  -[AVTStickerPagingController wrapAndPresentViewController:animated:]
  -[AVTStickerPagingController stickerSheetController:didScrollToContentOffset:]
  -[AVTStickerPagingController stickerSheetController:scrollView:willEndDraggingWithTargetContentOffset:]
  -[AVTStickerPagingController stickerSheetController:didInteractWithStickerItem:atIndex:byPeeling:]
  -[AVTStickerPagingController stickerSheetController:didFinishRenderingStickersForRecord:]
  -[AVTStickerPagingController avatarActionsViewController:recordUpdateForDeletingRecord:]
  -[AVTStickerPagingController avatarActionsViewControllerDidFinish:]
  -[AVTStickerPagingController selectAvatarRecordWithIdentifier:animated:]
  -[AVTStickerPagingController avatarPickerDelegate]
  -[AVTStickerPagingController setAvatarPickerDelegate:]
  -[AVTStickerPagingController initWithRecordDataSource:recordImageProvider:stickerConfigurationProvider:taskScheduler:environment:allowsPeel:]
  -[AVTStickerPagingController setPageContentInsets:]
  -[AVTStickerPagingController prefetchDataForRecord:]
  -[AVTStickerPagingController cancelPrefetchingDataForRecord:]
  -[AVTStickerPagingController sheetControllerForRecord:]
  -[AVTStickerPagingController reloadSheetControllerForRecord:]
  -[AVTStickerPagingController sheetControllerAtIndex:]
  -[AVTStickerPagingController insertPageForRecord:atIndex:]
  -[AVTStickerPagingController deletePageForRecord:atIndex:]
  -[AVTStickerPagingController reloadPageForRecord:atIndex:]
  -[AVTStickerPagingController setPageContentOffset:]
  -[AVTStickerPagingController centeredPageWithOffset:]
  -[AVTStickerPagingController scrollToAvatarWithIdentifier:animated:]
  -[AVTStickerPagingController updateForEndingScrollWithTargetContentOffset:]
  -[AVTStickerPagingController pageIndexForAvatarRecordIdentifier:]
  -[AVTStickerPagingController willStartDisplaying]
  -[AVTStickerPagingController willEndDisplaying]
  -[AVTStickerPagingController firstPageItemView]
  -[AVTStickerPagingController pageContentInsets]
  -[AVTStickerPagingController pageContentOffset]
  -[AVTStickerPagingController stickerSelectionDelegate]
  -[AVTStickerPagingController setStickerSelectionDelegate:]
  -[AVTStickerPagingController stickerSheetControllerProvider]
  -[AVTStickerPagingController setStickerSheetControllerProvider:]
  -[AVTStickerPagingController stickerGeneratorPool]
  -[AVTStickerPagingController setStickerGeneratorPool:]
  -[AVTStickerPagingController pageForRecords]
  -[AVTStickerPagingController setPageForRecords:]
  -[AVTStickerPagingController focusedPageRecordIdentifier]
  -[AVTStickerPagingController setFocusedPageRecordIdentifier:]
  -[AVTStickerPagingController selectedStickerIdentifier]
  -[AVTStickerPagingController setSelectedStickerIdentifier:]
  -[AVTStickerPagingController stickerConfigurationProvider]
  -[AVTStickerPagingController endDraggingTargetContentOffset]
  -[AVTStickerPagingController setEndDraggingTargetContentOffset:]
  -[AVTStickerPagingController lastDeletedCell]
  -[AVTStickerPagingController setLastDeletedCell:]
  -[AVTStickerPagingController collectionViewForPPT]
  -[AVTStickerPagingController pageIndexForAvatarRecordIdentifierForPPT:]


AVTAvatarAttributeEditorPreviewModeOptions : NSObject
 @property  NSString *framingMode
 @property  NSString *bodyPosePack

  // instance methods
  -[AVTAvatarAttributeEditorPreviewModeOptions .cxx_destruct]
  -[AVTAvatarAttributeEditorPreviewModeOptions initWithFramingMode:bodyPosePack:]
  -[AVTAvatarAttributeEditorPreviewModeOptions framingMode]
  -[AVTAvatarAttributeEditorPreviewModeOptions bodyPosePack]


AVTPoseSelectionGridViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate>
 @property  <AVTAvatarRecord> *avatarRecord
 @property  NSArray *stickerConfigurations
 @property  UIView *cameraCellView
 @property  UICollectionViewFlowLayout *flowLayout
 @property  UICollectionView *poseCollectionView
 @property  AVTUIStickerRenderer *stickerRenderer
 @property  AVTUIStickerGeneratorPool *generatorPool
 @property  <AVTTaskScheduler> *scheduler
 @property  NSObject<OS_dispatch_queue> *stickerGenerationQueue
 @property  UIImage *placeholderImage
 @property  <AVTPoseSelectionGridViewControllerDelegate> *delegate
 @property  BOOL willDisplayCameraItem
 @property  AVTStickerConfiguration *selectedStickerConfiguration
 @property  {UIEdgeInsets=dddd} contentInset
 @property  UIColor *backgroundColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTPoseSelectionGridViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[AVTPoseSelectionGridViewController setContentInset:]
  -[AVTPoseSelectionGridViewController collectionView:cellForItemAtIndexPath:]
  -[AVTPoseSelectionGridViewController scheduler]
  -[AVTPoseSelectionGridViewController setScheduler:]
  -[AVTPoseSelectionGridViewController setDelegate:]
  -[AVTPoseSelectionGridViewController contentSizeCategoryDidChange:]
  -[AVTPoseSelectionGridViewController delegate]
  -[AVTPoseSelectionGridViewController setPlaceholderImage:]
  -[AVTPoseSelectionGridViewController .cxx_destruct]
  -[AVTPoseSelectionGridViewController viewDidLoad]
  -[AVTPoseSelectionGridViewController viewDidLayoutSubviews]
  -[AVTPoseSelectionGridViewController backgroundColor]
  -[AVTPoseSelectionGridViewController setBackgroundColor:]
  -[AVTPoseSelectionGridViewController contentInset]
  -[AVTPoseSelectionGridViewController collectionView:didSelectItemAtIndexPath:]
  -[AVTPoseSelectionGridViewController collectionView:numberOfItemsInSection:]
  -[AVTPoseSelectionGridViewController placeholderImage]
  -[AVTPoseSelectionGridViewController flowLayout]
  -[AVTPoseSelectionGridViewController setFlowLayout:]
  -[AVTPoseSelectionGridViewController avatarRecord]
  -[AVTPoseSelectionGridViewController setAvatarRecord:]
  -[AVTPoseSelectionGridViewController updateFlowLayoutItemSize]
  -[AVTPoseSelectionGridViewController generatorPool]
  -[AVTPoseSelectionGridViewController setGeneratorPool:]
  -[AVTPoseSelectionGridViewController stickerConfigurations]
  -[AVTPoseSelectionGridViewController setStickerConfigurations:]
  -[AVTPoseSelectionGridViewController initWithAvatarRecord:poseConfigurations:allowsCameraCapture:]
  -[AVTPoseSelectionGridViewController setSelectedStickerConfiguration:]
  -[AVTPoseSelectionGridViewController updateWithAvatarRecord:stickerConfigurations:]
  -[AVTPoseSelectionGridViewController willDisplayCameraItem]
  -[AVTPoseSelectionGridViewController configurationForIndex:]
  -[AVTPoseSelectionGridViewController setWillDisplayCameraItem:]
  -[AVTPoseSelectionGridViewController selectedStickerConfiguration]
  -[AVTPoseSelectionGridViewController cameraCellView]
  -[AVTPoseSelectionGridViewController setCameraCellView:]
  -[AVTPoseSelectionGridViewController poseCollectionView]
  -[AVTPoseSelectionGridViewController setPoseCollectionView:]
  -[AVTPoseSelectionGridViewController stickerRenderer]
  -[AVTPoseSelectionGridViewController setStickerRenderer:]
  -[AVTPoseSelectionGridViewController stickerGenerationQueue]
  -[AVTPoseSelectionGridViewController setStickerGenerationQueue:]


AVTCircularView : UIView
 @property  CAShapeLayer *clippingLayer

  // instance methods
  -[AVTCircularView .cxx_destruct]
  -[AVTCircularView layoutSubviews]
  -[AVTCircularView initWithFrame:]
  -[AVTCircularView clippingLayer]
  -[AVTCircularView setClippingLayer:]


AVTAvatarAttributeEditorSectionController : NSObject <AVTAvatarAttributeEditorSectionController>
 @property  AVTAvatarAttributeEditorSection *section
 @property  AVTTransitionCoordinator *transitionCoordinator
 @property  AVTUIEnvironment *environment
 @property  <AVTIndexBasedTaskScheduler> *thumbnailScheduler
 @property  <AVTTaskScheduler> *renderingScheduler
 @property  <AVTAvatarAttributeEditorControllerSubSelectionDelegate> *delegate
 @property  long long selectedIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarAttributeEditorSectionController supportsSelection]
  +[AVTAvatarAttributeEditorSectionController edgeLengthFittingWidth:environment:]
  +[AVTAvatarAttributeEditorSectionController cellSizeForSectionItem:inSection:fittingWidth:environment:]
  +[AVTAvatarAttributeEditorSectionController maxLabelHeightInSection:fittingWidth:]
  +[AVTAvatarAttributeEditorSectionController shouldHideLabelBackgroundInSection:fittingWidth:]
  +[AVTAvatarAttributeEditorSectionController requiredLabelSpaceForMaxLabelHeight:cellEdgeLength:sectionItemHeightRatio:]
  +[AVTAvatarAttributeEditorSectionController edgeInsetsForSection:fittingWidth:environment:]

  // instance methods
  -[AVTAvatarAttributeEditorSectionController transitionCoordinator]
  -[AVTAvatarAttributeEditorSectionController section]
  -[AVTAvatarAttributeEditorSectionController setSection:]
  -[AVTAvatarAttributeEditorSectionController setDelegate:]
  -[AVTAvatarAttributeEditorSectionController delegate]
  -[AVTAvatarAttributeEditorSectionController numberOfItems]
  -[AVTAvatarAttributeEditorSectionController .cxx_destruct]
  -[AVTAvatarAttributeEditorSectionController setTransitionCoordinator:]
  -[AVTAvatarAttributeEditorSectionController selectedIndex]
  -[AVTAvatarAttributeEditorSectionController environment]
  -[AVTAvatarAttributeEditorSectionController setSelectedIndex:]
  -[AVTAvatarAttributeEditorSectionController indexForItem:]
  -[AVTAvatarAttributeEditorSectionController resetToDefaultState]
  -[AVTAvatarAttributeEditorSectionController renderingScheduler]
  -[AVTAvatarAttributeEditorSectionController updateWithSection:]
  -[AVTAvatarAttributeEditorSectionController sizeForItemAtIndex:fittingSize:]
  -[AVTAvatarAttributeEditorSectionController edgeInsetsFittingSize:]
  -[AVTAvatarAttributeEditorSectionController viewForIndex:]
  -[AVTAvatarAttributeEditorSectionController prefetchingSectionItemForIndex:]
  -[AVTAvatarAttributeEditorSectionController updateCell:forItemAtIndex:]
  -[AVTAvatarAttributeEditorSectionController cell:willDisplayAtIndex:]
  -[AVTAvatarAttributeEditorSectionController invalidateLayoutForNewContainerSize:]
  -[AVTAvatarAttributeEditorSectionController didHighlightItemAtIndex:cell:completionBlock:]
  -[AVTAvatarAttributeEditorSectionController didUnhighlightItemAtIndex:cell:completionBlock:]
  -[AVTAvatarAttributeEditorSectionController didSelectItemAtIndex:cell:]
  -[AVTAvatarAttributeEditorSectionController evaluateDisplayCondition:]
  -[AVTAvatarAttributeEditorSectionController sizeForFocusingItemAtIndex:fittingSize:]
  -[AVTAvatarAttributeEditorSectionController attributeSection:didChangeValueForSectionItem:]
  -[AVTAvatarAttributeEditorSectionController initWithThumbnailScheduler:renderingScheduler:environment:]
  -[AVTAvatarAttributeEditorSectionController thumbnailScheduler]


AVTCoreModelColor : NSObject <AVTCacheableResource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier
 @property  NSString *localizedName
 @property  AVTColorPreset *baseColorPreset
 @property  {?=qq} settingKind
 @property  unsigned long order
 @property  BOOL showSlider
 @property  float rangeMin
 @property  float rangeMax
 @property  NSDictionary *derivedColorsByCategories

  // instance methods
  -[AVTCoreModelColor identifier]
  -[AVTCoreModelColor .cxx_destruct]
  -[AVTCoreModelColor order]
  -[AVTCoreModelColor localizedName]
  -[AVTCoreModelColor thumbnail]
  -[AVTCoreModelColor isEqual:]
  -[AVTCoreModelColor requiresEncryption]
  -[AVTCoreModelColor rangeMin]
  -[AVTCoreModelColor rangeMax]
  -[AVTCoreModelColor volatileIdentifierForScope:]
  -[AVTCoreModelColor costForScope:]
  -[AVTCoreModelColor initWithColorPreset:settingKind:order:derivedColorsByCategories:]
  -[AVTCoreModelColor initWithColorPreset:settingKind:order:showSlider:rangeMin:rangeMax:derivedColorsByCategories:]
  -[AVTCoreModelColor copyWithRangeMin:rangeMax:showSlider:]
  -[AVTCoreModelColor copyForPairedCategory:]
  -[AVTCoreModelColor copyForCategory:destination:]
  -[AVTCoreModelColor baseColorPreset]
  -[AVTCoreModelColor settingKind]
  -[AVTCoreModelColor canShowSlider]
  -[AVTCoreModelColor derivedColorsByCategories]


AVTSimpleAvatarPickerHeaderView : UICollectionReusableView
 @property  NSString *currentSymbolName
 @property  UIImageSymbolConfiguration *plusSymbolConfiguration
 @property  UIImageSymbolConfiguration *ellipsisSymbolConfiguration
 @property  AVTCircularButton *button
 @property  @? buttonPressedBlock

  // class methods
  +[AVTSimpleAvatarPickerHeaderView reuseIdentifier]

  // instance methods
  -[AVTSimpleAvatarPickerHeaderView button]
  -[AVTSimpleAvatarPickerHeaderView .cxx_destruct]
  -[AVTSimpleAvatarPickerHeaderView initWithFrame:]
  -[AVTSimpleAvatarPickerHeaderView buttonPressed:]
  -[AVTSimpleAvatarPickerHeaderView setupLayout]
  -[AVTSimpleAvatarPickerHeaderView ellipsisSymbolConfiguration]
  -[AVTSimpleAvatarPickerHeaderView plusSymbolConfiguration]
  -[AVTSimpleAvatarPickerHeaderView updateForEditMode:animated:]
  -[AVTSimpleAvatarPickerHeaderView updateWithSymbolNamed:configuration:animated:]
  -[AVTSimpleAvatarPickerHeaderView buttonPressedBlock]
  -[AVTSimpleAvatarPickerHeaderView setButtonPressedBlock:]
  -[AVTSimpleAvatarPickerHeaderView currentSymbolName]
  -[AVTSimpleAvatarPickerHeaderView setCurrentSymbolName:]
  -[AVTSimpleAvatarPickerHeaderView setPlusSymbolConfiguration:]
  -[AVTSimpleAvatarPickerHeaderView setEllipsisSymbolConfiguration:]


AVTMultiAvatarController : NSObject <UICollectionViewDelegate, UICollectionViewDataSource, AVTAvatarRecordDataSourceObserver, AVTNotifyingContainerViewDelegate, AVTAvatarDisplayingController>
 @property  UIView *view
 @property  UICollectionView *collectionView
 @property  AVTZIndexEngagementListCollectionViewLayout *collectionViewLayout
 @property  AVTCenteringCollectionViewDelegate *centeringDelegate
 @property  NSArray *recordListItems
 @property  AVTViewSession *avtViewSession
 @property  AVTCarouselPlusButtonView *addItemView
 @property  <AVTAvatarListItem> *addListItem
 @property  <AVTAvatarRecord> *displayedRecord
 @property  AVTAvatarListCell *liveCell
 @property  BOOL allowsCreate
 @property  NSNumber *cachedCanCreateValue
 @property  AVTTransitionCoordinator *transitionCoordinator
 @property  AVTAvatarRecordDataSource *dataSource
 @property  AVTUIEnvironment *environment
 @property  <AVTUILogger> *logger
 @property  _AVTAvatarRecordImageProvider *thumbnailRenderer
 @property  <AVTViewCarouselLayout> *avtViewLayout
 @property  {CGPoint=dd} lastContentOffset
 @property  BOOL hideImageForDisplayedRecord
 @property  double decelerationRate
 @property  AVTRenderingScope *renderingScope
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTAvatarDisplayingControllerDelegate> *delegate
 @property  <AVTPresenterDelegate> *presenterDelegate

  // class methods
  +[AVTMultiAvatarController newCollectionViewLayoutForEngagedCellSize:boundsSize:environment:]
  +[AVTMultiAvatarController listItemsForAvatarRecords:]
  +[AVTMultiAvatarController snapshotProviderFocusedOnRecordWithIdentifier:size:avtViewAspectRatio:dataSource:environment:]

  // instance methods
  -[AVTMultiAvatarController setCollectionView:]
  -[AVTMultiAvatarController logger]
  -[AVTMultiAvatarController collectionView:cellForItemAtIndexPath:]
  -[AVTMultiAvatarController reloadData]
  -[AVTMultiAvatarController transitionCoordinator]
  -[AVTMultiAvatarController dataSource]
  -[AVTMultiAvatarController collectionViewLayout]
  -[AVTMultiAvatarController scrollViewDidScroll:]
  -[AVTMultiAvatarController setDelegate:]
  -[AVTMultiAvatarController delegate]
  -[AVTMultiAvatarController setPresenterDelegate:]
  -[AVTMultiAvatarController dealloc]
  -[AVTMultiAvatarController view]
  -[AVTMultiAvatarController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[AVTMultiAvatarController scrollViewDidEndDecelerating:]
  -[AVTMultiAvatarController .cxx_destruct]
  -[AVTMultiAvatarController collectionView]
  -[AVTMultiAvatarController loadView]
  -[AVTMultiAvatarController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[AVTMultiAvatarController setView:]
  -[AVTMultiAvatarController scrollViewDidEndScrollingAnimation:]
  -[AVTMultiAvatarController collectionView:didSelectItemAtIndexPath:]
  -[AVTMultiAvatarController collectionView:numberOfItemsInSection:]
  -[AVTMultiAvatarController setDecelerationRate:]
  -[AVTMultiAvatarController scrollViewDidEndDragging:willDecelerate:]
  -[AVTMultiAvatarController environment]
  -[AVTMultiAvatarController presenterDelegate]
  -[AVTMultiAvatarController setCollectionViewLayout:]
  -[AVTMultiAvatarController isViewLoaded]
  -[AVTMultiAvatarController lastContentOffset]
  -[AVTMultiAvatarController setLastContentOffset:]
  -[AVTMultiAvatarController decelerationRate]
  -[AVTMultiAvatarController initWithDataSource:environment:]
  -[AVTMultiAvatarController renderingScope]
  -[AVTMultiAvatarController avtViewSession]
  -[AVTMultiAvatarController setAvtViewSession:]
  -[AVTMultiAvatarController notifyingContainerViewWillChangeSize:]
  -[AVTMultiAvatarController notifyingContainerViewDidChangeSize:]
  -[AVTMultiAvatarController prepareViewWithLayout:]
  -[AVTMultiAvatarController stopUsingAVTViewSessionSynchronously:completionHandler:]
  -[AVTMultiAvatarController buildCollectionViewAndConfigureLayoutIfNeeded]
  -[AVTMultiAvatarController scrollToViewAtIndex:animated:]
  -[AVTMultiAvatarController indexPathForItemClosestToCenter]
  -[AVTMultiAvatarController layoutDidChangeWhileMoving:offset:]
  -[AVTMultiAvatarController transitionCenterCellIfPresentToStartFocusing]
  -[AVTMultiAvatarController transitionCenterCellIfPresentToStopFocusingAnimated:]
  -[AVTMultiAvatarController transitionCenterCellToStartFocusing:indexPath:]
  -[AVTMultiAvatarController transitionCell:indexPath:toStartFocusingAnimated:session:completionHandler:]
  -[AVTMultiAvatarController transitionCell:toStopFocusingAnimated:completionHandler:]
  -[AVTMultiAvatarController centeringDelegate]
  -[AVTMultiAvatarController setCenteringDelegate:]
  -[AVTMultiAvatarController displayedRecord]
  -[AVTMultiAvatarController setDisplayedRecord:]
  -[AVTMultiAvatarController liveCell]
  -[AVTMultiAvatarController setLiveCell:]
  -[AVTMultiAvatarController avtViewLayout]
  -[AVTMultiAvatarController setAvtViewLayout:]
  -[AVTMultiAvatarController dataSource:didAddRecord:atIndex:]
  -[AVTMultiAvatarController dataSource:didEditRecord:atIndex:]
  -[AVTMultiAvatarController dataSource:didRemoveRecord:atIndex:]
  -[AVTMultiAvatarController significantRecordChangeInDataSource:]
  -[AVTMultiAvatarController useAVTViewFromSession:withLayout:]
  -[AVTMultiAvatarController prepareToTransitionToVisible:completionHandler:]
  -[AVTMultiAvatarController displayAvatarForRecord:animated:]
  -[AVTMultiAvatarController initWithDataSource:environment:initialAVTViewLayout:]
  -[AVTMultiAvatarController listItemsForDisplay]
  -[AVTMultiAvatarController updateCachedCanCreateValueIfNeeded]
  -[AVTMultiAvatarController getFirstItem]
  -[AVTMultiAvatarController addItemView]
  -[AVTMultiAvatarController createAddItemViewIfNeeded]
  -[AVTMultiAvatarController setAllowsCreate:animated:]
  -[AVTMultiAvatarController preloadAll]
  -[AVTMultiAvatarController loadRecords]
  -[AVTMultiAvatarController createAvatar]
  -[AVTMultiAvatarController scrollToDisplayedRecord]
  -[AVTMultiAvatarController scrollToViewForAvatarRecord:animated:]
  -[AVTMultiAvatarController listItemIndexForRecord:]
  -[AVTMultiAvatarController recordForItem:]
  -[AVTMultiAvatarController cellForRecordItem:]
  -[AVTMultiAvatarController shouldCurrentlyDisplayedRecordTransitionToLive]
  -[AVTMultiAvatarController updateDisplayedRecordIfNeeded]
  -[AVTMultiAvatarController setDisplayedRecordFromIndex:]
  -[AVTMultiAvatarController transitionCurrentDisplayedRecordAnimated:]
  -[AVTMultiAvatarController notifyDelegateForScrollingTowardItemFromOffset:]
  -[AVTMultiAvatarController notifyDelegateForScrollingTowardItem:ratio:]
  -[AVTMultiAvatarController loadRecordsIfNeeded]
  -[AVTMultiAvatarController reloadRecordListItems]
  -[AVTMultiAvatarController allowsCreate]
  -[AVTMultiAvatarController setAllowsCreate:]
  -[AVTMultiAvatarController recordListItems]
  -[AVTMultiAvatarController setRecordListItems:]
  -[AVTMultiAvatarController setAddItemView:]
  -[AVTMultiAvatarController addListItem]
  -[AVTMultiAvatarController setAddListItem:]
  -[AVTMultiAvatarController cachedCanCreateValue]
  -[AVTMultiAvatarController setCachedCanCreateValue:]
  -[AVTMultiAvatarController thumbnailRenderer]
  -[AVTMultiAvatarController hideImageForDisplayedRecord]
  -[AVTMultiAvatarController setHideImageForDisplayedRecord:]
  -[AVTMultiAvatarController snapshotInBlock:]


AVTTransitionSchedulerFactory : NSObject
  // class methods
  +[AVTTransitionSchedulerFactory synchronousTransitionSchedulerWithEventHandler:]
  +[AVTTransitionSchedulerFactory concurrentTransitionSchedulerWithEventHandler:delay:]


AVTClippableImageStore : AVTImageStore
  // instance methods
  -[AVTClippableImageStore saveImage:forItem:scope:clippingRect:error:]
  -[AVTClippableImageStore resourceClippingRectForItem:scope:]


AVTStickerRecentsMigrator : NSObject
 @property  <AVTAvatarStoreInternal> *store
 @property  AVTStickerConfigurationProvider *stickerConfigurationProvider
 @property  AVTUILogger *logger
 @property  BOOL migrationHasBeenPerformed

  // instance methods
  -[AVTStickerRecentsMigrator setLogger:]
  -[AVTStickerRecentsMigrator logger]
  -[AVTStickerRecentsMigrator store]
  -[AVTStickerRecentsMigrator setStore:]
  -[AVTStickerRecentsMigrator .cxx_destruct]
  -[AVTStickerRecentsMigrator performMigrationIfNeeded]
  -[AVTStickerRecentsMigrator stickerConfigurationProvider]
  -[AVTStickerRecentsMigrator initWithStore:stickerConfigurationProvider:environment:]
  -[AVTStickerRecentsMigrator setNeedsMigrationOnNextLaunch]
  -[AVTStickerRecentsMigrator setStickerConfigurationProvider:]
  -[AVTStickerRecentsMigrator migrationHasBeenPerformed]
  -[AVTStickerRecentsMigrator setMigrationHasBeenPerformed:]


AVTAvatarImageRenderer : NSObject
 @property  AVTSnapshotBuilder *snapshotBuilder
 @property  AVTAvatarRemoteImageRenderer *remoteImageRenderer
 @property  <AVTUILogger> *logger
 @property  NSObject<OS_dispatch_queue> *snapshotBuilderQueue

  // instance methods
  -[AVTAvatarImageRenderer logger]
  -[AVTAvatarImageRenderer initWithEnvironment:]
  -[AVTAvatarImageRenderer .cxx_destruct]
  -[AVTAvatarImageRenderer init]
  -[AVTAvatarImageRenderer initWithSnapshotBuilder:lockProvider:remoteImageRenderer:logger:]
  -[AVTAvatarImageRenderer initWithSceneNodeModifications:]
  -[AVTAvatarImageRenderer updateSnapshotBuilderModifications:]
  -[AVTAvatarImageRenderer snapshotBuilder]
  -[AVTAvatarImageRenderer fieldOfViewForNodeWithName:]
  -[AVTAvatarImageRenderer imageForAvatar:scope:]
  -[AVTAvatarImageRenderer imageForAvatar:scope:usingService:]
  -[AVTAvatarImageRenderer _imageForAvatar:scope:]
  -[AVTAvatarImageRenderer imageForAvatar:scope:withSCNModifications:usingService:]
  -[AVTAvatarImageRenderer nts_imageForAvatar:scope:]
  -[AVTAvatarImageRenderer setSnapshotBuilder:]
  -[AVTAvatarImageRenderer remoteImageRenderer]
  -[AVTAvatarImageRenderer setRemoteImageRenderer:]
  -[AVTAvatarImageRenderer snapshotBuilderQueue]


AVTStickerRecentsPlaceholderItem : NSObject <AVTStickerRecentsItem>
 @property  NSString *localizedDescription
 @property  UIImage *image
 @property  NSURL *url
 @property  @? provider
 @property  @? discardableContentHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTStickerRecentsPlaceholderItem localizedDescription]
  -[AVTStickerRecentsPlaceholderItem setUrl:]
  -[AVTStickerRecentsPlaceholderItem .cxx_destruct]
  -[AVTStickerRecentsPlaceholderItem provider]
  -[AVTStickerRecentsPlaceholderItem image]
  -[AVTStickerRecentsPlaceholderItem url]
  -[AVTStickerRecentsPlaceholderItem setImage:]
  -[AVTStickerRecentsPlaceholderItem cellIdentifier]
  -[AVTStickerRecentsPlaceholderItem discardContent]
  -[AVTStickerRecentsPlaceholderItem discardableContentHandler]
  -[AVTStickerRecentsPlaceholderItem setDiscardableContentHandler:]


AVTStickerRecentsStickerItem : NSObject <AVTStickerRecentsItem>
 @property  NSString *avatarIdentifier
 @property  NSString *stickerName
 @property  BOOL prereleaseSticker
 @property  NSString *localizedDescription
 @property  UIImage *image
 @property  NSURL *url
 @property  @? provider
 @property  @? discardableContentHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTStickerRecentsStickerItem localizedDescription]
  -[AVTStickerRecentsStickerItem setUrl:]
  -[AVTStickerRecentsStickerItem .cxx_destruct]
  -[AVTStickerRecentsStickerItem provider]
  -[AVTStickerRecentsStickerItem image]
  -[AVTStickerRecentsStickerItem url]
  -[AVTStickerRecentsStickerItem setImage:]
  -[AVTStickerRecentsStickerItem cellIdentifier]
  -[AVTStickerRecentsStickerItem stickerName]
  -[AVTStickerRecentsStickerItem discardContent]
  -[AVTStickerRecentsStickerItem discardableContentHandler]
  -[AVTStickerRecentsStickerItem setDiscardableContentHandler:]
  -[AVTStickerRecentsStickerItem initWithAvatarIdentifier:stickerName:localizedName:stickerProvider:]
  -[AVTStickerRecentsStickerItem isPrereleaseSticker]
  -[AVTStickerRecentsStickerItem setPrereleaseSticker:]
  -[AVTStickerRecentsStickerItem avatarIdentifier]


AVTStickerRecentsButtonItem : NSObject <AVTStickerRecentsItem>
 @property  NSString *localizedDescription
 @property  UIImage *image
 @property  NSURL *url
 @property  @? provider
 @property  @? discardableContentHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTStickerRecentsButtonItem localizedDescription]
  -[AVTStickerRecentsButtonItem setUrl:]
  -[AVTStickerRecentsButtonItem .cxx_destruct]
  -[AVTStickerRecentsButtonItem provider]
  -[AVTStickerRecentsButtonItem image]
  -[AVTStickerRecentsButtonItem url]
  -[AVTStickerRecentsButtonItem setImage:]
  -[AVTStickerRecentsButtonItem cellIdentifier]
  -[AVTStickerRecentsButtonItem discardContent]
  -[AVTStickerRecentsButtonItem discardableContentHandler]
  -[AVTStickerRecentsButtonItem setDiscardableContentHandler:]
  -[AVTStickerRecentsButtonItem initWithLocalizedDescription:]


AVTAttributeEditorSectionHeaderView : UICollectionReusableView
 @property  UILabel *label
 @property  UIButton *accessoryButton
 @property  NSString *displayString
 @property  <AVTAttributeEditorSectionHeaderViewDelegate> *delegate
 @property  <AVTAvatarAttributeEditorSectionSupplementalPicker> *supplementalPicker

  // class methods
  +[AVTAttributeEditorSectionHeaderView reuseIdentifier]

  // instance methods
  -[AVTAttributeEditorSectionHeaderView setDisplayString:]
  -[AVTAttributeEditorSectionHeaderView displayString]
  -[AVTAttributeEditorSectionHeaderView setDelegate:]
  -[AVTAttributeEditorSectionHeaderView delegate]
  -[AVTAttributeEditorSectionHeaderView setLabel:]
  -[AVTAttributeEditorSectionHeaderView .cxx_destruct]
  -[AVTAttributeEditorSectionHeaderView updateMenu]
  -[AVTAttributeEditorSectionHeaderView layoutSubviews]
  -[AVTAttributeEditorSectionHeaderView chevronImage]
  -[AVTAttributeEditorSectionHeaderView label]
  -[AVTAttributeEditorSectionHeaderView initWithFrame:]
  -[AVTAttributeEditorSectionHeaderView isRTL]
  -[AVTAttributeEditorSectionHeaderView traitCollectionDidChange:]
  -[AVTAttributeEditorSectionHeaderView accessoryButton]
  -[AVTAttributeEditorSectionHeaderView setAccessoryButton:]
  -[AVTAttributeEditorSectionHeaderView supplementalPicker]
  -[AVTAttributeEditorSectionHeaderView setSupplementalPicker:]
  -[AVTAttributeEditorSectionHeaderView createAccessoryButtonIfNeeded]
  -[AVTAttributeEditorSectionHeaderView updateButtonForSelectedSectionItem]


AVTAvatarLibraryModel : NSObject <AVTAvatarEditorViewControllerDelegate>
 @property  <AVTAvatarStoreInternal> *avatarStore
 @property  AVTViewSessionProvider *viewSessionProvider
 @property  AVTUIEnvironment *environment
 @property  AVTAvatarLibraryCreateNewItem *createNewItem
 @property  NSMutableArray *mutableLibraryItems
 @property  BOOL isCreatingAvatar
 @property  <AVTAvatarLibraryModelDelegate> *delegate
 @property  NSArray *libraryItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTAvatarLibraryModel setDelegate:]
  -[AVTAvatarLibraryModel numberOfRecords]
  -[AVTAvatarLibraryModel load]
  -[AVTAvatarLibraryModel delegate]
  -[AVTAvatarLibraryModel .cxx_destruct]
  -[AVTAvatarLibraryModel environment]
  -[AVTAvatarLibraryModel libraryItems]
  -[AVTAvatarLibraryModel avatarStore]
  -[AVTAvatarLibraryModel avatarEditorViewController:didFinishWithAvatarRecord:]
  -[AVTAvatarLibraryModel avatarEditorViewControllerDidCancel:]
  -[AVTAvatarLibraryModel presentEditor:forCreating:]
  -[AVTAvatarLibraryModel isCreatingAvatar]
  -[AVTAvatarLibraryModel setIsCreatingAvatar:]
  -[AVTAvatarLibraryModel viewSessionProvider]
  -[AVTAvatarLibraryModel storeDidChangeNotification:]
  -[AVTAvatarLibraryModel initWithAvatarStore:avtViewSessionProvider:environment:]
  -[AVTAvatarLibraryModel performActionOnItemAtIndex:]
  -[AVTAvatarLibraryModel presentActionSheetForRecordItem:atIndex:]
  -[AVTAvatarLibraryModel libraryItemsFromAvatarRecords:]
  -[AVTAvatarLibraryModel insertItemForRecord:atIndex:]
  -[AVTAvatarLibraryModel removeItemForRecordAtIndex:]
  -[AVTAvatarLibraryModel reloadDataForRecords:]
  -[AVTAvatarLibraryModel updateForCreatedRecord:]
  -[AVTAvatarLibraryModel updateForEditedRecord:]
  -[AVTAvatarLibraryModel indexForRecord:]
  -[AVTAvatarLibraryModel presetShareSheetWithRecords:fromItem:]
  -[AVTAvatarLibraryModel createNewItem]
  -[AVTAvatarLibraryModel mutableLibraryItems]


AVTStickerRecentsPresetsProvider : NSObject
  // class methods
  +[AVTStickerRecentsPresetsProvider filteredAndPaddedStickerRecordsWithRecents:paddingMemojiIdentifier:avatarStore:numberOfStickers:resultBlock:]
  +[AVTStickerRecentsPresetsProvider filteredRecentStickers:withAvailableRecordIdentifiersMap:]
  +[AVTStickerRecentsPresetsProvider paddedStickerRecordsWithRecents:paddingMemojiIdentifier:numberOfStickers:]
  +[AVTStickerRecentsPresetsProvider presetsGivenNoMemoji]
  +[AVTStickerRecentsPresetsProvider presetsGivenOneMemojiWithIdentifier:]


AVTCollectionViewCell : UICollectionViewCell
 @property  UIView *subview

  // class methods
  +[AVTCollectionViewCell reuseIdentifier]

  // instance methods
  -[AVTCollectionViewCell .cxx_destruct]
  -[AVTCollectionViewCell setSubview:]
  -[AVTCollectionViewCell subview]


AVTUITraitCollectionHelper : NSObject
  // class methods
  +[AVTUITraitCollectionHelper overridenTraitFromTrait:]


AVTCaptureButtonView : UIView
 @property  UIButton *button

  // instance methods
  -[AVTCaptureButtonView button]
  -[AVTCaptureButtonView .cxx_destruct]
  -[AVTCaptureButtonView layoutSubviews]
  -[AVTCaptureButtonView setButton:]
  -[AVTCaptureButtonView initWithFrame:]


AVTAvatarEditorStateUpdaterFactory : NSObject

AVTSplashScreenConfiguration : NSObject
 @property  AVPlayerItem *primaryPlayerItem
 @property  AVPlayerItem *secondaryPlayerItem
 @property  NSString *titleString
 @property  NSString *subTitleString
 @property  NSString *buttonString

  // instance methods
  -[AVTSplashScreenConfiguration .cxx_destruct]
  -[AVTSplashScreenConfiguration titleString]
  -[AVTSplashScreenConfiguration setTitleString:]
  -[AVTSplashScreenConfiguration subTitleString]
  -[AVTSplashScreenConfiguration setSubTitleString:]
  -[AVTSplashScreenConfiguration primaryPlayerItem]
  -[AVTSplashScreenConfiguration setPrimaryPlayerItem:]
  -[AVTSplashScreenConfiguration secondaryPlayerItem]
  -[AVTSplashScreenConfiguration setSecondaryPlayerItem:]
  -[AVTSplashScreenConfiguration buttonString]
  -[AVTSplashScreenConfiguration setButtonString:]


AVTStickerImageEncoder : NSObject <AVTClippableImageEncoder>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTStickerImageEncoder fileExtension]
  -[AVTStickerImageEncoder imageFromURL:error:]
  -[AVTStickerImageEncoder imageFromData:error:]
  -[AVTStickerImageEncoder dataFromImage:]
  -[AVTStickerImageEncoder dataFromImage:clippingRect:]


AVTPNGImageEncoder : NSObject <AVTImageEncoder>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTPNGImageEncoder fileExtension]
  -[AVTPNGImageEncoder imageFromURL:error:]
  -[AVTPNGImageEncoder imageFromData:error:]
  -[AVTPNGImageEncoder dataFromImage:]


AVTUIStickerGeneratorPool : NSObject
 @property  long long maxCount
 @property  NSMutableDictionary *availableStickerGenerators
 @property  NSMutableDictionary *inUseStickerGenerators
 @property  <AVTUILogger> *logger

  // class methods
  +[AVTUIStickerGeneratorPool cacheKeyForAvatarRecord:]

  // instance methods
  -[AVTUIStickerGeneratorPool maxCount]
  -[AVTUIStickerGeneratorPool logger]
  -[AVTUIStickerGeneratorPool .cxx_destruct]
  -[AVTUIStickerGeneratorPool flush]
  -[AVTUIStickerGeneratorPool avatarForRecord:]
  -[AVTUIStickerGeneratorPool initWithMaxStickerGeneratorCount:]
  -[AVTUIStickerGeneratorPool initWithMaxStickerGeneratorCount:logger:]
  -[AVTUIStickerGeneratorPool generatorForAvatarRecord:inGenerators:]
  -[AVTUIStickerGeneratorPool stealGeneratorForAvatarRecord:inGenerators:needAvatar:]
  -[AVTUIStickerGeneratorPool dequeueStickerGeneratorForAvatarRecord:]
  -[AVTUIStickerGeneratorPool dequeueStickerGeneratorForAvatarRecord:needAvatar:]
  -[AVTUIStickerGeneratorPool didStopUsingStickerGeneratorForRecord:]
  -[AVTUIStickerGeneratorPool flushGeneratorForKey:]
  -[AVTUIStickerGeneratorPool flushGeneratorForRecord:]
  -[AVTUIStickerGeneratorPool availableStickerGenerators]
  -[AVTUIStickerGeneratorPool inUseStickerGenerators]


AVTStickerPagingCollectionViewCell : UICollectionViewCell
 @property  UIView *pageContentView
 @property  {UIEdgeInsets=dddd} additionalContentInsets

  // class methods
  +[AVTStickerPagingCollectionViewCell cellIdentifier]

  // instance methods
  -[AVTStickerPagingCollectionViewCell .cxx_destruct]
  -[AVTStickerPagingCollectionViewCell prepareForReuse]
  -[AVTStickerPagingCollectionViewCell layoutSubviews]
  -[AVTStickerPagingCollectionViewCell additionalContentInsets]
  -[AVTStickerPagingCollectionViewCell setAdditionalContentInsets:]
  -[AVTStickerPagingCollectionViewCell setPageContentView:]
  -[AVTStickerPagingCollectionViewCell pageContentView]


AVTViewCarouselLayout : NSObject <AVTViewCarouselLayout>
 @property  {CGSize=dd} avtViewAspectRatio
 @property  BOOL fillContainer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTViewCarouselLayout adaptativeLayoutWithAVTViewAspectRatio:]
  +[AVTViewCarouselLayout severalItemsSizeForBounds:aspectRatio:]
  +[AVTViewCarouselLayout fullSizeForBounds:]

  // instance methods
  -[AVTViewCarouselLayout contentViewSizeForSize:]
  -[AVTViewCarouselLayout avatarViewSizeForAvailableContentSize:]
  -[AVTViewCarouselLayout initWithAVTViewAspectRatio:]
  -[AVTViewCarouselLayout fillContainer]
  -[AVTViewCarouselLayout setFillContainer:]
  -[AVTViewCarouselLayout avtViewAspectRatio]


AVTGroupDialCell : UICollectionViewCell
 @property  UILabel *label
 @property  NSTimer *shimmerTimer
 @property  NSString *string

  // class methods
  +[AVTGroupDialCell labelFont]
  +[AVTGroupDialCell cellIdentifier]
  +[AVTGroupDialCell boldLabelFont]

  // instance methods
  -[AVTGroupDialCell string]
  -[AVTGroupDialCell .cxx_destruct]
  -[AVTGroupDialCell prepareForReuse]
  -[AVTGroupDialCell setActiveItem:animated:]
  -[AVTGroupDialCell label]
  -[AVTGroupDialCell initWithFrame:]
  -[AVTGroupDialCell setString:]
  -[AVTGroupDialCell stopShimmeringAnimated:]
  -[AVTGroupDialCell startShimmering]
  -[AVTGroupDialCell cancelShimmerTimer]
  -[AVTGroupDialCell shimmerOnceWithCompletion:]
  -[AVTGroupDialCell shimmerTimer]
  -[AVTGroupDialCell setShimmerTimer:]


AVTCoreModelFramingModeOverrides : NSObject
 @property  NSArray *orderedTags
 @property  NSArray *orderedFramingModeOverrides

  // instance methods
  -[AVTCoreModelFramingModeOverrides .cxx_destruct]
  -[AVTCoreModelFramingModeOverrides initWithCameraOverrides:]
  -[AVTCoreModelFramingModeOverrides orderedTags]
  -[AVTCoreModelFramingModeOverrides orderedFramingModeOverrides]


AVTArrayPairClassification : NSObject
  // class methods
  +[AVTArrayPairClassification countPairTypesInArray:withClassifier:]
  +[AVTArrayPairClassification clustersForObjectsInArray:withClassifier:likenessThreshold:likenessComparator:]


AVTAvatarAttributeEditorDefaultPortraitPadLayout : AVTAvatarAttributeEditorLayout
  // instance methods
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout maxHeaderHeight]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout supportedLayoutOrientation]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout groupDialContainerFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout sideGroupContainerFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout attributesContentViewFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout userInfoFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout headerMaskingViewAlpha]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout headerMaskingViewFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout verticalRuleAlpha]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout verticalRuleFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout attributesContentViewInsets]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout attributesContentViewScrollIndicatorInsets]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout avatarContainerFrame]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout avatarContainerAlpha]
  -[AVTAvatarAttributeEditorDefaultPortraitPadLayout defaultUserInfoFrame]


AVTCoreModelPreset : NSObject
 @property  NSDictionary *tags
 @property  BOOL defaultPreset
 @property  NSString *identifier
 @property  NSString *localizedName
 @property  NSString *localizedPairedName
 @property  AVTPreset *preset

  // class methods
  +[AVTCoreModelPreset tagSetFromPreset:]

  // instance methods
  -[AVTCoreModelPreset identifier]
  -[AVTCoreModelPreset tags]
  -[AVTCoreModelPreset preset]
  -[AVTCoreModelPreset .cxx_destruct]
  -[AVTCoreModelPreset localizedName]
  -[AVTCoreModelPreset isEqual:]
  -[AVTCoreModelPreset initWithPreset:]
  -[AVTCoreModelPreset copyForPairedCategory:]
  -[AVTCoreModelPreset localizedPairedName]
  -[AVTCoreModelPreset initWithPreset:isDefaultPreset:]
  -[AVTCoreModelPreset isDefaultPreset]


AVTUIStickerRenderer : NSObject
 @property  <AVTResourceCache> *cache
 @property  AVTClippableImageStore *imageStore
 @property  AVTUIEnvironment *environment
 @property  AVTUILogger *logger
 @property  <AVTStickerTaskScheduler> *renderingScheduler
 @property  NSObject<OS_dispatch_queue> *renderingQueue
 @property  NSObject<OS_dispatch_queue> *encodingQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  <AVTAvatarRecord> *avatarRecord
 @property  AVTMemoji *avatar
 @property  <AVTCacheableResource> *cacheableResourceItem
 @property  AVTUIStickerGeneratorPool *stickerGeneratorPool
 @property  BOOL parallelizeEncoding
 @property  BOOL usingService

  // class methods
  +[AVTUIStickerRenderer stickerCacheWithEnvironment:]
  +[AVTUIStickerRenderer imageEncoder]
  +[AVTUIStickerRenderer clearStickersForAvatarRecordIdentifier:]
  +[AVTUIStickerRenderer clearStickersForAvatarRecordIdentifier:withEnvironment:]

  // instance methods
  -[AVTUIStickerRenderer logger]
  -[AVTUIStickerRenderer callbackQueue]
  -[AVTUIStickerRenderer cache]
  -[AVTUIStickerRenderer .cxx_destruct]
  -[AVTUIStickerRenderer environment]
  -[AVTUIStickerRenderer avatar]
  -[AVTUIStickerRenderer avatarRecord]
  -[AVTUIStickerRenderer renderingQueue]
  -[AVTUIStickerRenderer renderingScheduler]
  -[AVTUIStickerRenderer imageStore]
  -[AVTUIStickerRenderer encodingQueue]
  -[AVTUIStickerRenderer stickerGeneratorPool]
  -[AVTUIStickerRenderer initWithAvatarRecord:stickerGeneratorPool:scheduler:]
  -[AVTUIStickerRenderer initWithAvatarRecord:stickerGeneratorPool:scheduler:imageStore:]
  -[AVTUIStickerRenderer initWithAvatarRecord:avatar:stickerGeneratorPool:scheduler:imageStore:environment:]
  -[AVTUIStickerRenderer initWithAvatarRecord:cache:renderingScheduler:renderingQueue:encodingQueue:stickerGeneratorPool:environment:]
  -[AVTUIStickerRenderer initWithAvatarRecord:cache:imageStore:stickerGeneratorPool:environment:renderingScheduler:renderingQueue:encodingQueue:callbackQueue:]
  -[AVTUIStickerRenderer initWithAvatarRecord:avatar:cache:imageStore:stickerGeneratorPool:environment:renderingScheduler:renderingQueue:encodingQueue:callbackQueue:]
  -[AVTUIStickerRenderer scheduledTaskForItem:scope:queue:renderingHandler:resourceHandler:synchronous:]
  -[AVTUIStickerRenderer providerForResourceForScope:queue:renderingHandler:]
  -[AVTUIStickerRenderer providerForResourceWithAvatarConfiguration:forScope:queue:renderingHandler:]
  -[AVTUIStickerRenderer providerForResource:forScope:queue:renderingHandler:]
  -[AVTUIStickerRenderer saveImageForResource:forScope:synchronous:completionHandler:]
  -[AVTUIStickerRenderer renderStickerResourceForItem:scope:configuration:correctClipping:]
  -[AVTUIStickerRenderer renderStickerResourceForItem:scope:stickerConfiguration:avatarConfiguration:correctClipping:]
  -[AVTUIStickerRenderer scheduledStickerResourceProviderForStickerConfiguration:]
  -[AVTUIStickerRenderer _scheduledTaskForItem:scope:queue:renderWithCompletionHandler:resourceHandler:synchronous:]
  -[AVTUIStickerRenderer _providerForResource:forScope:queue:renderWithCompletionHandler:]
  -[AVTUIStickerRenderer _providerForResourceForScope:queue:renderWithCompletionHandler:]
  -[AVTUIStickerRenderer _scheduledRemoteImageRendererProviderForStickerConfiguration:correctClipping:]
  -[AVTUIStickerRenderer scheduledStickerResourceProviderForStickerConfiguration:usingService:]
  -[AVTUIStickerRenderer scheduledStickerResourceProviderForStickerConfiguration:correctClipping:]
  -[AVTUIStickerRenderer scheduledStickerResourceProviderForThumbnailForModelPreset:presetOverrides:avatarConfiguration:stickerConfiguration:]
  -[AVTUIStickerRenderer stopUsingResources]
  -[AVTUIStickerRenderer cacheableResourceItem]
  -[AVTUIStickerRenderer parallelizeEncoding]
  -[AVTUIStickerRenderer setParallelizeEncoding:]
  -[AVTUIStickerRenderer usingService]
  -[AVTUIStickerRenderer setUsingService:]


AVTAvatarPickerDataSource : NSObject
 @property  NSArray *items
 @property  BOOL allowAddItem
 @property  <AVTAvatarListItem> *addItem
 @property  AVTUIEnvironment *environment
 @property  <AVTAvatarStore> *store
 @property  AVTAvatarRecordDataSource *recordDataSource

  // instance methods
  -[AVTAvatarPickerDataSource setItems:]
  -[AVTAvatarPickerDataSource store]
  -[AVTAvatarPickerDataSource itemAtIndex:]
  -[AVTAvatarPickerDataSource numberOfItems]
  -[AVTAvatarPickerDataSource .cxx_destruct]
  -[AVTAvatarPickerDataSource items]
  -[AVTAvatarPickerDataSource environment]
  -[AVTAvatarPickerDataSource allowAddItem]
  -[AVTAvatarPickerDataSource canCreateMemoji]
  -[AVTAvatarPickerDataSource initWithRecordDataSource:environment:allowAddItem:]
  -[AVTAvatarPickerDataSource reloadModel]
  -[AVTAvatarPickerDataSource isItemAtIndexAddItem:]
  -[AVTAvatarPickerDataSource indexOfAddItem]
  -[AVTAvatarPickerDataSource recordDataSource]
  -[AVTAvatarPickerDataSource setAllowAddItem:]
  -[AVTAvatarPickerDataSource addItem]
  -[AVTAvatarPickerDataSource setAddItem:]


AVTGroupListCollectionView : UIView <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, AVTGroupPicker>
 @property  UICollectionView *collectionView
 @property  CALayer *border
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *groupItems
 @property  <AVTGroupPickerDelegate> *delegate
 @property  long long selectedGroupIndex

  // instance methods
  -[AVTGroupListCollectionView collectionView:cellForItemAtIndexPath:]
  -[AVTGroupListCollectionView reloadData]
  -[AVTGroupListCollectionView borderWidth]
  -[AVTGroupListCollectionView setDelegate:]
  -[AVTGroupListCollectionView collectionView:didDeselectItemAtIndexPath:]
  -[AVTGroupListCollectionView delegate]
  -[AVTGroupListCollectionView numberOfSectionsInCollectionView:]
  -[AVTGroupListCollectionView .cxx_destruct]
  -[AVTGroupListCollectionView collectionView]
  -[AVTGroupListCollectionView layoutSubviews]
  -[AVTGroupListCollectionView border]
  -[AVTGroupListCollectionView collectionView:didSelectItemAtIndexPath:]
  -[AVTGroupListCollectionView collectionView:numberOfItemsInSection:]
  -[AVTGroupListCollectionView setBorder:]
  -[AVTGroupListCollectionView traitCollectionDidChange:]
  -[AVTGroupListCollectionView setupView]
  -[AVTGroupListCollectionView setupBorder]
  -[AVTGroupListCollectionView initWithGroupItems:environment:]
  -[AVTGroupListCollectionView setSelectedGroupIndex:animated:]
  -[AVTGroupListCollectionView groupItems]
  -[AVTGroupListCollectionView selectedGroupIndex]
  -[AVTGroupListCollectionView setSelectedGroupIndex:]
  -[AVTGroupListCollectionView updateCollectionLayoutItemSize:]


AVTAvatarAttributeEditorDefaultMacLayout : AVTAvatarAttributeEditorLayout
  // instance methods
  -[AVTAvatarAttributeEditorDefaultMacLayout maxHeaderHeight]
  -[AVTAvatarAttributeEditorDefaultMacLayout supportedLayoutOrientation]
  -[AVTAvatarAttributeEditorDefaultMacLayout groupDialContainerFrame]
  -[AVTAvatarAttributeEditorDefaultMacLayout sideGroupContainerFrame]
  -[AVTAvatarAttributeEditorDefaultMacLayout attributesContentViewFrame]
  -[AVTAvatarAttributeEditorDefaultMacLayout userInfoFrame]
  -[AVTAvatarAttributeEditorDefaultMacLayout headerMaskingViewAlpha]
  -[AVTAvatarAttributeEditorDefaultMacLayout headerMaskingViewFrame]
  -[AVTAvatarAttributeEditorDefaultMacLayout verticalRuleAlpha]
  -[AVTAvatarAttributeEditorDefaultMacLayout verticalRuleFrame]
  -[AVTAvatarAttributeEditorDefaultMacLayout attributesContentViewInsets]
  -[AVTAvatarAttributeEditorDefaultMacLayout attributesContentViewScrollIndicatorInsets]
  -[AVTAvatarAttributeEditorDefaultMacLayout avatarContainerFrame]
  -[AVTAvatarAttributeEditorDefaultMacLayout avatarContainerAlpha]
  -[AVTAvatarAttributeEditorDefaultMacLayout defaultUserInfoFrame]
  -[AVTAvatarAttributeEditorDefaultMacLayout widthToFitGroupLabels]


AVTAttributeEditorToActionsTransitionAnimator : NSObject <UIViewControllerAnimatedTransitioning>
 @property  AVTUIEnvironment *environment
 @property  <AVTViewLayoutInfo> *avtViewLayoutInfo
 @property  BOOL RTL
 @property  double userInfoViewHeight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAttributeEditorToActionsTransitionAnimator adjustedSafeAreaInsetsForView:]

  // instance methods
  -[AVTAttributeEditorToActionsTransitionAnimator animateTransition:]
  -[AVTAttributeEditorToActionsTransitionAnimator transitionDuration:]
  -[AVTAttributeEditorToActionsTransitionAnimator .cxx_destruct]
  -[AVTAttributeEditorToActionsTransitionAnimator environment]
  -[AVTAttributeEditorToActionsTransitionAnimator RTL]
  -[AVTAttributeEditorToActionsTransitionAnimator initWithAVTViewLayoutInfo:userInfoViewHeight:RTL:environment:]
  -[AVTAttributeEditorToActionsTransitionAnimator avtViewLayoutInfo]
  -[AVTAttributeEditorToActionsTransitionAnimator userInfoViewHeight]


AVTPoseCollectionViewCell : UICollectionViewCell
 @property  CAShapeLayer *selectionLayer
 @property  UIImage *image
 @property  UIImageView *imageView
 @property  UIImageView *transitionImageView
 @property  UIViewPropertyAnimator *scaleDownTransformAnimator
 @property  UIViewPropertyAnimator *scaleUpWithBounceTransformAnimator
 @property  NSUUID *contextIdentifier

  // class methods
  +[AVTPoseCollectionViewCell selectionPathInBounds:]

  // instance methods
  -[AVTPoseCollectionViewCell setImageView:]
  -[AVTPoseCollectionViewCell setSelected:]
  -[AVTPoseCollectionViewCell .cxx_destruct]
  -[AVTPoseCollectionViewCell prepareForReuse]
  -[AVTPoseCollectionViewCell contextIdentifier]
  -[AVTPoseCollectionViewCell layoutSubviews]
  -[AVTPoseCollectionViewCell image]
  -[AVTPoseCollectionViewCell initWithFrame:]
  -[AVTPoseCollectionViewCell setImage:]
  -[AVTPoseCollectionViewCell traitCollectionDidChange:]
  -[AVTPoseCollectionViewCell imageView]
  -[AVTPoseCollectionViewCell selectionLayer]
  -[AVTPoseCollectionViewCell setSelectionLayer:]
  -[AVTPoseCollectionViewCell setContextIdentifier:]
  -[AVTPoseCollectionViewCell updateImage:animated:]
  -[AVTPoseCollectionViewCell cancelAnimations]
  -[AVTPoseCollectionViewCell transitionImageView]
  -[AVTPoseCollectionViewCell setTransitionImageView:]
  -[AVTPoseCollectionViewCell scaleDownTransformAnimator]
  -[AVTPoseCollectionViewCell setScaleDownTransformAnimator:]
  -[AVTPoseCollectionViewCell scaleUpWithBounceTransformAnimator]
  -[AVTPoseCollectionViewCell setScaleUpWithBounceTransformAnimator:]


AVTAvatarAttributeEditorModelManager : NSObject <AVTAvatarAttributeEditorModelManagerDelegateInternal>
 @property  AVTAvatarConfiguration *presetOverriddenConfiguration
 @property  AVTUIEnvironment *environment
 @property  AVTMemoji *avatar
 @property  AVTCoreModel *coreModel
 @property  <AVTUILogger> *logger
 @property  AVTAvatarConfiguration *avatarConfiguration
 @property  AVTPresetImageProvider *imageProvider
 @property  AVTColorLayerProvider *colorLayerProvider
 @property  AVTUIStickerRenderer *stickerRenderer
 @property  AVTAvatarAttributeEditorPreloader *preloader
 @property  AVTAvatarRecord *avatarRecord
 @property  AVTAvatarEditorColorsState *colorsState
 @property  AVTAvatarAttributeEditorState *editorState
 @property  <AVTAvatarAttributeEditorModelManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTAvatarAttributeEditorModelManager setLogger:]
  -[AVTAvatarAttributeEditorModelManager logger]
  -[AVTAvatarAttributeEditorModelManager setDelegate:]
  -[AVTAvatarAttributeEditorModelManager delegate]
  -[AVTAvatarAttributeEditorModelManager .cxx_destruct]
  -[AVTAvatarAttributeEditorModelManager imageProvider]
  -[AVTAvatarAttributeEditorModelManager environment]
  -[AVTAvatarAttributeEditorModelManager preloader]
  -[AVTAvatarAttributeEditorModelManager avatar]
  -[AVTAvatarAttributeEditorModelManager setAvatar:]
  -[AVTAvatarAttributeEditorModelManager initWithAvatarRecord:]
  -[AVTAvatarAttributeEditorModelManager avatarRecord]
  -[AVTAvatarAttributeEditorModelManager coreModel]
  -[AVTAvatarAttributeEditorModelManager flushResourcesForEnteringBackground]
  -[AVTAvatarAttributeEditorModelManager shouldDisplaySectionForCategory:]
  -[AVTAvatarAttributeEditorModelManager shouldDisplaySectionWithDisplayCondition:inCategoryAtIndex:]
  -[AVTAvatarAttributeEditorModelManager stickerRenderer]
  -[AVTAvatarAttributeEditorModelManager initWithAvatarRecord:coreModel:imageProvider:colorLayerProvider:preloader:environment:stickerRenderer:]
  -[AVTAvatarAttributeEditorModelManager initWithAvatarRecord:coreModel:editorColorsState:imageProvider:colorLayerProvider:preloader:environment:stickerRenderer:]
  -[AVTAvatarAttributeEditorModelManager loadResourcesIfNeeded]
  -[AVTAvatarAttributeEditorModelManager buildIntitialColorsState]
  -[AVTAvatarAttributeEditorModelManager primaryColorOfCategory:doesMatchColorOfDependentCategory:]
  -[AVTAvatarAttributeEditorModelManager setInitialColorStateForColorPicker:forMulticolor:]
  -[AVTAvatarAttributeEditorModelManager buildUIModel]
  -[AVTAvatarAttributeEditorModelManager buildUIModelWithSelectedCategory:atIndex:]
  -[AVTAvatarAttributeEditorModelManager buildInitialEditorState]
  -[AVTAvatarAttributeEditorModelManager updateAvatarRecordFromAvatar]
  -[AVTAvatarAttributeEditorModelManager updateEditorStateBySelectingSectionItem:animated:]
  -[AVTAvatarAttributeEditorModelManager updateAvatarBySelectingSectionItem:animated:]
  -[AVTAvatarAttributeEditorModelManager updateAvatarByDeletingSectionItems:animated:]
  -[AVTAvatarAttributeEditorModelManager updateAvatarBySelectingSupplementalPickerItem:animated:]
  -[AVTAvatarAttributeEditorModelManager updateAvatarWithAvatarUpdater:animated:]
  -[AVTAvatarAttributeEditorModelManager updateAvatarByApplyingPresetOverrides:animated:]
  -[AVTAvatarAttributeEditorModelManager applyPairColorUpdateIfNeeded:forCategoryRight:categoryLeft:]
  -[AVTAvatarAttributeEditorModelManager applyPairColorUpdatesIfNeeded:]
  -[AVTAvatarAttributeEditorModelManager applyConfigurationToAvatar:animated:]
  -[AVTAvatarAttributeEditorModelManager colorsState]
  -[AVTAvatarAttributeEditorModelManager editorState]
  -[AVTAvatarAttributeEditorModelManager presetOverriddenConfiguration]
  -[AVTAvatarAttributeEditorModelManager setPresetOverriddenConfiguration:]
  -[AVTAvatarAttributeEditorModelManager avatarConfiguration]
  -[AVTAvatarAttributeEditorModelManager colorLayerProvider]


AVTImageTransitioningContainerView : UIView
 @property  AVTUIAnimatingImageView *imageViewsContainer
 @property  UIView *borderMaskView
 @property  UIView *staticView
 @property  UIView *liveView
 @property  UIImage *staticImage
 @property  {CGSize=dd} aspectRatio
 @property  long long layoutMode

  // class methods
  +[AVTImageTransitioningContainerView borderMaskRectForContentRect:]
  +[AVTImageTransitioningContainerView liveViewRectForContentRect:aspectRatio:layoutMode:scale:]
  +[AVTImageTransitioningContainerView imageViewRectForContentRect:liveViewRect:imageSize:scale:]

  // instance methods
  -[AVTImageTransitioningContainerView aspectRatio]
  -[AVTImageTransitioningContainerView .cxx_destruct]
  -[AVTImageTransitioningContainerView layoutMode]
  -[AVTImageTransitioningContainerView layoutSubviews]
  -[AVTImageTransitioningContainerView initWithFrame:]
  -[AVTImageTransitioningContainerView setAspectRatio:]
  -[AVTImageTransitioningContainerView setStaticImage:]
  -[AVTImageTransitioningContainerView staticImage]
  -[AVTImageTransitioningContainerView liveView]
  -[AVTImageTransitioningContainerView setLiveView:]
  -[AVTImageTransitioningContainerView borderMaskView]
  -[AVTImageTransitioningContainerView initWithFrame:layoutMode:]
  -[AVTImageTransitioningContainerView staticView]
  -[AVTImageTransitioningContainerView setStaticImage:animated:]
  -[AVTImageTransitioningContainerView transitionStaticViewToFront]
  -[AVTImageTransitioningContainerView transitionLiveViewToFront]
  -[AVTImageTransitioningContainerView setStaticViewVisible:]
  -[AVTImageTransitioningContainerView imageViewsContainer]


AVTPassThroughResourceCache : NSObject <AVTImageCache, AVTResourceCache>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTPassThroughResourceCache clearCache]
  -[AVTPassThroughResourceCache resourceForItem:scope:]
  -[AVTPassThroughResourceCache resourceForItem:scope:cacheMissHandler:]
  -[AVTPassThroughResourceCache resourceExistsInCacheForItem:scope:]
  -[AVTPassThroughResourceCache imageForItem:scope:]
  -[AVTPassThroughResourceCache imageForItem:scope:cacheMissHandler:]


AVTShadowView : UIView
 @property  CALayer *separator

  // class methods
  +[AVTShadowView defaultHeightForSuperview:]

  // instance methods
  -[AVTShadowView .cxx_destruct]
  -[AVTShadowView layoutSubviews]
  -[AVTShadowView separator]
  -[AVTShadowView initWithFrame:]
  -[AVTShadowView traitCollectionDidChange:]
  -[AVTShadowView setSeparator:]


AVTAvatarAttributeEditorModelDiff : NSObject
 @property  NSArray *sectionDiffs
 @property  NSDictionary *sectionItemDiffs

  // instance methods
  -[AVTAvatarAttributeEditorModelDiff .cxx_destruct]
  -[AVTAvatarAttributeEditorModelDiff initWithSectionDiffs:sectionItemDiffs:]
  -[AVTAvatarAttributeEditorModelDiff sectionDiffs]
  -[AVTAvatarAttributeEditorModelDiff sectionItemDiffs]


AVTEditingModelDefinitionsParser : NSObject
 @property  unsigned long platform
 @property  NSString *platformDictionaryKey
 @property  AVTUILogger *logger
 @property  NSData *plistData
 @property  NSError *error
 @property  AVTEditingModelColors *colorCache
 @property  NSDictionary *neutralMemojiPresetsIdentifierPerCategory
 @property  NSDictionary *presetPickersDefinitions
 @property  NSDictionary *colorPickersDefinitions
 @property  NSDictionary *multicolorPickersDefinitions

  // class methods
  +[AVTEditingModelDefinitionsParser localizedString:]
  +[AVTEditingModelDefinitionsParser errorWithDescription:underlyingError:]
  +[AVTEditingModelDefinitionsParser dataFromAvatarKit]
  +[AVTEditingModelDefinitionsParser dataFromBundle]
  +[AVTEditingModelDefinitionsParser platformDictionaryKeyForPlatform:]
  +[AVTEditingModelDefinitionsParser sortedModelRows:forPlatform:]
  +[AVTEditingModelDefinitionsParser defaultSortingOptionForPlatform:]

  // instance methods
  -[AVTEditingModelDefinitionsParser logger]
  -[AVTEditingModelDefinitionsParser platform]
  -[AVTEditingModelDefinitionsParser error]
  -[AVTEditingModelDefinitionsParser .cxx_destruct]
  -[AVTEditingModelDefinitionsParser setError:]
  -[AVTEditingModelDefinitionsParser colorCache]
  -[AVTEditingModelDefinitionsParser plistData]
  -[AVTEditingModelDefinitionsParser setColorCache:]
  -[AVTEditingModelDefinitionsParser initForPlatform:withLogger:]
  -[AVTEditingModelDefinitionsParser initWithPlistData:forPlatform:logger:]
  -[AVTEditingModelDefinitionsParser parseWithCompletionHandler:]
  -[AVTEditingModelDefinitionsParser decodePropertyListObjects:]
  -[AVTEditingModelDefinitionsParser initalizeColorCacheIfNeeded]
  -[AVTEditingModelDefinitionsParser parseCoreModelFromGroupsDefinitions:colorDefaultsDefinitions:]
  -[AVTEditingModelDefinitionsParser coreModelGroupFromGroupDictionary:]
  -[AVTEditingModelDefinitionsParser symbolNamesFromGroupDictionary:]
  -[AVTEditingModelDefinitionsParser coreModelCategoryFromCategoryDictionary:]
  -[AVTEditingModelDefinitionsParser coreModelCategoryFromCategoryDictionary:parsedPickerKeys:]
  -[AVTEditingModelDefinitionsParser pairingFromDictionary:]
  -[AVTEditingModelDefinitionsParser coreModelColorsRowForColorPickerDictionary:settingDestination:inCategory:defaultOptions:]
  -[AVTEditingModelDefinitionsParser coreModelMulticolorPickerForDictionary:groupPickerCategory:defaultOptions:parsedPickerKeys:error:]
  -[AVTEditingModelDefinitionsParser localizedSubtitlesForSubtitles:subpickerCount:]
  -[AVTEditingModelDefinitionsParser multicolorAuxiliaryPickerForDictionary:error:]
  -[AVTEditingModelDefinitionsParser validateForCategoryWithEnumValue:pickers:]
  -[AVTEditingModelDefinitionsParser validateForMulticolorPicker:subpickers:error:]
  -[AVTEditingModelDefinitionsParser validateForColorPicker:colorPaletteCategory:error:]
  -[AVTEditingModelDefinitionsParser neutralMemojiPresetIdentifierForCategory:]
  -[AVTEditingModelDefinitionsParser coreModelPresetsForCategory:]
  -[AVTEditingModelDefinitionsParser coreModelColorsForPaletteSettingKind:]
  -[AVTEditingModelDefinitionsParser coreModelColorsForColorDefinitions:paletteSettingKind:]
  -[AVTEditingModelDefinitionsParser gatherAllTagsFromPresets:]
  -[AVTEditingModelDefinitionsParser applyPlatformOverrideForDictionary:]
  -[AVTEditingModelDefinitionsParser coreModelRowFromRowDictionary:availableTags:usedTags:defaultOptions:]
  -[AVTEditingModelDefinitionsParser coreModelRowOptionsFromOptionsDictionary:]
  -[AVTEditingModelDefinitionsParser platformDictionaryKey]
  -[AVTEditingModelDefinitionsParser neutralMemojiPresetsIdentifierPerCategory]
  -[AVTEditingModelDefinitionsParser setNeutralMemojiPresetsIdentifierPerCategory:]
  -[AVTEditingModelDefinitionsParser presetPickersDefinitions]
  -[AVTEditingModelDefinitionsParser setPresetPickersDefinitions:]
  -[AVTEditingModelDefinitionsParser colorPickersDefinitions]
  -[AVTEditingModelDefinitionsParser setColorPickersDefinitions:]
  -[AVTEditingModelDefinitionsParser multicolorPickersDefinitions]
  -[AVTEditingModelDefinitionsParser setMulticolorPickersDefinitions:]


AVTGradientView : UIView
  // class methods
  +[AVTGradientView layerClass]

  // instance methods
  -[AVTGradientView initWithFrame:]


AVTFunCamAvatarPickerController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, AVTViewSessionProviderDelegate, AVTObjectViewController, AVTAvatarPicker>
 @property  UICollectionView *collectionView
 @property  UIView *titlesContainer
 @property  UICollectionView *titlesCollectionView
 @property  UIView *titlesClippingView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} lastUpdateViewBounds
 @property  <AVTAvatarRecord> *selectedAvatarRecord
 @property  AVTFunCamAvatarPickerCollectionViewLayout *listLayout
 @property  UICollectionViewFlowLayout *gridLayout
 @property  AVTCenteringCollectionViewDelegate *centeringDelegate
 @property  NSArray *puppetRecords
 @property  NSArray *editableRecords
 @property  NSArray *items
 @property  AVTAvatarListImageItem *noneItem
 @property  <AVTAvatarStoreInternal> *store
 @property  AVTUIEnvironment *environment
 @property  <AVTUILogger> *logger
 @property  _AVTAvatarRecordImageProvider *imageProvider
 @property  AVTRenderingScope *editableRecordsListRenderingScope
 @property  AVTRenderingScope *gridRenderingScope
 @property  <NSObject> *changeNotificationToken
 @property  unsigned long mode
 @property  AVTFunCamAvatarPickerStyle *style
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *view
 @property  <AVTPresenterDelegate> *presenterDelegate
 @property  <AVTAvatarPickerDelegate> *avatarPickerDelegate

  // class methods
  +[AVTFunCamAvatarPickerController newGridLayout]
  +[AVTFunCamAvatarPickerController itemsFromRecords:]
  +[AVTFunCamAvatarPickerController sessionProviderWithEnvironment:delegate:]
  +[AVTFunCamAvatarPickerController createClippingViewForSize:]
  +[AVTFunCamAvatarPickerController funCamAvatarPickerControllerForStore:style:]

  // instance methods
  -[AVTFunCamAvatarPickerController setCollectionView:]
  -[AVTFunCamAvatarPickerController logger]
  -[AVTFunCamAvatarPickerController collectionView:cellForItemAtIndexPath:]
  -[AVTFunCamAvatarPickerController reloadData]
  -[AVTFunCamAvatarPickerController setItems:]
  -[AVTFunCamAvatarPickerController scrollViewDidScroll:]
  -[AVTFunCamAvatarPickerController store]
  -[AVTFunCamAvatarPickerController collectionView:layout:insetForSectionAtIndex:]
  -[AVTFunCamAvatarPickerController style]
  -[AVTFunCamAvatarPickerController setListLayout:]
  -[AVTFunCamAvatarPickerController setStore:]
  -[AVTFunCamAvatarPickerController numberOfSectionsInCollectionView:]
  -[AVTFunCamAvatarPickerController setPresenterDelegate:]
  -[AVTFunCamAvatarPickerController viewWillLayoutSubviews]
  -[AVTFunCamAvatarPickerController collectionView:layout:sizeForItemAtIndexPath:]
  -[AVTFunCamAvatarPickerController mode]
  -[AVTFunCamAvatarPickerController listLayout]
  -[AVTFunCamAvatarPickerController scrollViewDidEndDecelerating:]
  -[AVTFunCamAvatarPickerController .cxx_destruct]
  -[AVTFunCamAvatarPickerController collectionView]
  -[AVTFunCamAvatarPickerController viewWillAppear:]
  -[AVTFunCamAvatarPickerController loadView]
  -[AVTFunCamAvatarPickerController viewDidLayoutSubviews]
  -[AVTFunCamAvatarPickerController items]
  -[AVTFunCamAvatarPickerController setMode:]
  -[AVTFunCamAvatarPickerController imageProvider]
  -[AVTFunCamAvatarPickerController collectionView:didSelectItemAtIndexPath:]
  -[AVTFunCamAvatarPickerController collectionView:numberOfItemsInSection:]
  -[AVTFunCamAvatarPickerController scrollViewDidEndDragging:willDecelerate:]
  -[AVTFunCamAvatarPickerController setStyle:]
  -[AVTFunCamAvatarPickerController traitCollectionDidChange:]
  -[AVTFunCamAvatarPickerController environment]
  -[AVTFunCamAvatarPickerController presenterDelegate]
  -[AVTFunCamAvatarPickerController selectedIndexPath]
  -[AVTFunCamAvatarPickerController canCreateAvatar]
  -[AVTFunCamAvatarPickerController buildCollectionView]
  -[AVTFunCamAvatarPickerController gridLayout]
  -[AVTFunCamAvatarPickerController setGridLayout:]
  -[AVTFunCamAvatarPickerController gridItemSize]
  -[AVTFunCamAvatarPickerController centeringDelegate]
  -[AVTFunCamAvatarPickerController setCenteringDelegate:]
  -[AVTFunCamAvatarPickerController selectAvatarRecordWithIdentifier:animated:]
  -[AVTFunCamAvatarPickerController avatarPickerDelegate]
  -[AVTFunCamAvatarPickerController setAvatarPickerDelegate:]
  -[AVTFunCamAvatarPickerController preloadAll]
  -[AVTFunCamAvatarPickerController indexForRecord:]
  -[AVTFunCamAvatarPickerController reloadModel]
  -[AVTFunCamAvatarPickerController sessionProviderWillStartCameraSession:]
  -[AVTFunCamAvatarPickerController sessionProviderDidEndCameraSession:]
  -[AVTFunCamAvatarPickerController initWithStore:environment:style:]
  -[AVTFunCamAvatarPickerController isDisplayingGridLayout]
  -[AVTFunCamAvatarPickerController buildCollectionViewLayout]
  -[AVTFunCamAvatarPickerController buildTitlesCollectionViewLayout]
  -[AVTFunCamAvatarPickerController updateTitlesClippingViewMask]
  -[AVTFunCamAvatarPickerController startObservingChangesIfNeeded]
  -[AVTFunCamAvatarPickerController updateViewForCurrentMode]
  -[AVTFunCamAvatarPickerController selectItemForAvatarRecord:animated:notifyDelegate:]
  -[AVTFunCamAvatarPickerController selectItemAtCenterNotifyDelegate:]
  -[AVTFunCamAvatarPickerController selectItemAtIndexPath:animated:notifyDelegate:]
  -[AVTFunCamAvatarPickerController sendSelectionEventToDelegateForItemAtIndexPath:]
  -[AVTFunCamAvatarPickerController indexPathForNoneItem]
  -[AVTFunCamAvatarPickerController indexForRecordIdentifier:]
  -[AVTFunCamAvatarPickerController titlesContainer]
  -[AVTFunCamAvatarPickerController setTitlesContainer:]
  -[AVTFunCamAvatarPickerController titlesCollectionView]
  -[AVTFunCamAvatarPickerController setTitlesCollectionView:]
  -[AVTFunCamAvatarPickerController titlesClippingView]
  -[AVTFunCamAvatarPickerController setTitlesClippingView:]
  -[AVTFunCamAvatarPickerController lastUpdateViewBounds]
  -[AVTFunCamAvatarPickerController setLastUpdateViewBounds:]
  -[AVTFunCamAvatarPickerController selectedAvatarRecord]
  -[AVTFunCamAvatarPickerController setSelectedAvatarRecord:]
  -[AVTFunCamAvatarPickerController puppetRecords]
  -[AVTFunCamAvatarPickerController setPuppetRecords:]
  -[AVTFunCamAvatarPickerController editableRecords]
  -[AVTFunCamAvatarPickerController setEditableRecords:]
  -[AVTFunCamAvatarPickerController noneItem]
  -[AVTFunCamAvatarPickerController setNoneItem:]
  -[AVTFunCamAvatarPickerController editableRecordsListRenderingScope]
  -[AVTFunCamAvatarPickerController gridRenderingScope]
  -[AVTFunCamAvatarPickerController changeNotificationToken]
  -[AVTFunCamAvatarPickerController setChangeNotificationToken:]


AVTAvatarRemoteImageRenderer : NSObject
 @property  NSXPCConnection *connection
 @property  <AVTUILogger> *logger

  // instance methods
  -[AVTAvatarRemoteImageRenderer logger]
  -[AVTAvatarRemoteImageRenderer _setupConnection]
  -[AVTAvatarRemoteImageRenderer initWithEnvironment:]
  -[AVTAvatarRemoteImageRenderer .cxx_destruct]
  -[AVTAvatarRemoteImageRenderer connection]
  -[AVTAvatarRemoteImageRenderer init]
  -[AVTAvatarRemoteImageRenderer _tearDownService]
  -[AVTAvatarRemoteImageRenderer _startRequestWithRetryCount:withReply:connectionRequestHandler:]
  -[AVTAvatarRemoteImageRenderer getSnapshotForAvatar:scope:withReply:]
  -[AVTAvatarRemoteImageRenderer getSnapshotForAvatar:scope:withModifications:withReply:]
  -[AVTAvatarRemoteImageRenderer getSnapshotAndCacheForAvatarRecord:scope:withReply:]
  -[AVTAvatarRemoteImageRenderer _requestStickerAndCacheWithProxy:avatarRecord:stickerPackName:stickerConfigurationName:resource:reply:]
  -[AVTAvatarRemoteImageRenderer getStickerAndCacheForAvatarRecord:withStickerPackName:stickerConfigurationName:resource:withReply:]


AVTSplashScreenLayout : NSObject
 @property  BOOL wantsSecondaryVideo
 @property  BOOL constrainToContainer
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} titleFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} subTitleFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} primaryVideoFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} secondaryVideoFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} buttonFrame
 @property  NSString *currentContentSizeCategory
 @property  BOOL needsLayout
 @property  <AVTSplashScreenLayoutDelegate> *delegate
 @property  {CGSize=dd} containerSize
 @property  {UIEdgeInsets=dddd} edgeInsets
 @property  unsigned long labelEdgePaddingStyle
 @property  {CGSize=dd} unconstrainedContentSize

  // class methods
  +[AVTSplashScreenLayout titleFont]
  +[AVTSplashScreenLayout isSmallScreen]
  +[AVTSplashScreenLayout buttonFont]
  +[AVTSplashScreenLayout subTitleFont]
  +[AVTSplashScreenLayout primaryVideoSize]
  +[AVTSplashScreenLayout secondaryVideoSize]
  +[AVTSplashScreenLayout appropriateLabelEdgePaddingStyleForViewSize:]
  +[AVTSplashScreenLayout blueButton]
  +[AVTSplashScreenLayout defaultLabelEdgePaddingForLabelEdgePaddingStyle:contentSizeCategory:numberOfLines:]
  +[AVTSplashScreenLayout buttonFrameForString:containerSize:edgeInsets:]
  +[AVTSplashScreenLayout titleFrameForString:yOrigin:containerSize:labelEdgePadding:]
  +[AVTSplashScreenLayout subTitleFrameForString:titleFrame:buttonFrame:wantsSecondaryVideo:containerSize:labelEdgePadding:]
  +[AVTSplashScreenLayout primaryVideoFrameForContentFrame:wantsSecondaryVideo:]
  +[AVTSplashScreenLayout secondaryVideoFrameForContentFrame:]

  // instance methods
  -[AVTSplashScreenLayout setDelegate:]
  -[AVTSplashScreenLayout containerSize]
  -[AVTSplashScreenLayout delegate]
  -[AVTSplashScreenLayout dealloc]
  -[AVTSplashScreenLayout edgeInsets]
  -[AVTSplashScreenLayout .cxx_destruct]
  -[AVTSplashScreenLayout currentContentSizeCategory]
  -[AVTSplashScreenLayout setNeedsLayout:]
  -[AVTSplashScreenLayout isEqual:]
  -[AVTSplashScreenLayout needsLayout]
  -[AVTSplashScreenLayout titleFrame]
  -[AVTSplashScreenLayout buttonFrame]
  -[AVTSplashScreenLayout setButtonFrame:]
  -[AVTSplashScreenLayout setCurrentContentSizeCategory:]
  -[AVTSplashScreenLayout didChangeContentSizeCategory:]
  -[AVTSplashScreenLayout initWithContainerSize:edgeInsets:wantsSecondaryVideo:labelEdgePaddingStyle:]
  -[AVTSplashScreenLayout initWithContainerSize:edgeInsets:wantsSecondaryVideo:labelEdgePaddingStyle:currentContentSizeCategory:]
  -[AVTSplashScreenLayout calculateLayoutWithTitleString:subTitleString:buttonTitle:]
  -[AVTSplashScreenLayout labelEdgePaddingStyle]
  -[AVTSplashScreenLayout setTitleFrame:]
  -[AVTSplashScreenLayout subTitleFrame]
  -[AVTSplashScreenLayout setSubTitleFrame:]
  -[AVTSplashScreenLayout primaryVideoFrame]
  -[AVTSplashScreenLayout setPrimaryVideoFrame:]
  -[AVTSplashScreenLayout secondaryVideoFrame]
  -[AVTSplashScreenLayout setSecondaryVideoFrame:]
  -[AVTSplashScreenLayout unconstrainedContentSize]
  -[AVTSplashScreenLayout wantsSecondaryVideo]
  -[AVTSplashScreenLayout setWantsSecondaryVideo:]
  -[AVTSplashScreenLayout constrainToContainer]
  -[AVTSplashScreenLayout setConstrainToContainer:]


AVTSerialTaskScheduler : NSObject <AVTTaskScheduler>
 @property  NSMutableArray *priorityTasks
 @property  NSMutableArray *backlogTasks
 @property  NSObject<OS_dispatch_queue> *stateLock
 @property  long long order
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTSerialTaskScheduler lifoScheduler]
  +[AVTSerialTaskScheduler fifoScheduler]
  +[AVTSerialTaskScheduler lifoSchedulerWithEnvironment:]
  +[AVTSerialTaskScheduler fifoSchedulerWithEnvironment:]
  +[AVTSerialTaskScheduler nextTaskToRunForPriorityTasks:backlogTasks:order:]

  // instance methods
  -[AVTSerialTaskScheduler cancelTask:]
  -[AVTSerialTaskScheduler .cxx_destruct]
  -[AVTSerialTaskScheduler stateLock]
  -[AVTSerialTaskScheduler order]
  -[AVTSerialTaskScheduler scheduleTask:]
  -[AVTSerialTaskScheduler cancelAllTasks]
  -[AVTSerialTaskScheduler lowerTaskPriority:]
  -[AVTSerialTaskScheduler performStateWork:]
  -[AVTSerialTaskScheduler initWithEnvironment:order:]
  -[AVTSerialTaskScheduler startTask:]
  -[AVTSerialTaskScheduler didCompleteTask:]
  -[AVTSerialTaskScheduler priorityTasks]
  -[AVTSerialTaskScheduler backlogTasks]


AVTAvatarActionButton : UIButton
 @property  BOOL isDestructive

  // class methods
  +[AVTAvatarActionButton buttonWithAction:]
  +[AVTAvatarActionButton defaultButtonWithAction:]
  +[AVTAvatarActionButton destructiveButtonWithAction:]

  // instance methods
  -[AVTAvatarActionButton isDestructive]
  -[AVTAvatarActionButton setHighlighted:]
  -[AVTAvatarActionButton initWithFrame:]
  -[AVTAvatarActionButton setIsDestructive:]


AVTPresetResourceLoader : NSObject
 @property  AVTUIEnvironment *environment
 @property  AVTInMemoryResourceCache *presetCache
 @property  <AVTImageCache> *inMemoryImageCache
 @property  <AVTTaskScheduler> *renderingScheduler
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  <AVTUILogger> *logger

  // instance methods
  -[AVTPresetResourceLoader logger]
  -[AVTPresetResourceLoader workQueue]
  -[AVTPresetResourceLoader callbackQueue]
  -[AVTPresetResourceLoader .cxx_destruct]
  -[AVTPresetResourceLoader environment]
  -[AVTPresetResourceLoader renderingScheduler]
  -[AVTPresetResourceLoader inMemoryImageCache]
  -[AVTPresetResourceLoader initWithEnvironment:renderingScheduler:callbackQueue:]
  -[AVTPresetResourceLoader initWithPresetCache:renderingScheduler:callbackQueue:environment:]
  -[AVTPresetResourceLoader preLoadResourcesForSectionItem:completionHandler:]
  -[AVTPresetResourceLoader startSectionItemPreloadingTask:]
  -[AVTPresetResourceLoader performSectionItemPreloadingTask:]
  -[AVTPresetResourceLoader preLoadResourcesForPresetResourcesProvider:completionHandler:]
  -[AVTPresetResourceLoader startPresetPreloadingTask:]
  -[AVTPresetResourceLoader performPresetResourcesPreloadingTask:]
  -[AVTPresetResourceLoader performPresetLoadingForPresetResources:task:]
  -[AVTPresetResourceLoader presetCache]


AVTSectionItemLoadingTask : NSObject <AVTPreloadingTask>
 @property  <AVTAvatarAttributeEditorSectionItemPrefetching> *sectionItem
 @property  BOOL canceled
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTSectionItemLoadingTask isCanceled]
  -[AVTSectionItemLoadingTask .cxx_destruct]
  -[AVTSectionItemLoadingTask setCanceled:]
  -[AVTSectionItemLoadingTask completionHandler]
  -[AVTSectionItemLoadingTask cancel]
  -[AVTSectionItemLoadingTask initWithSectionItem:completionHandler:]
  -[AVTSectionItemLoadingTask sectionItem]


AVTPresetResourcesLoadingTask : NSObject <AVTPreloadingTask>
 @property  NSArray *presetResources
 @property  BOOL canceled
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTPresetResourcesLoadingTask isCanceled]
  -[AVTPresetResourcesLoadingTask .cxx_destruct]
  -[AVTPresetResourcesLoadingTask setCanceled:]
  -[AVTPresetResourcesLoadingTask completionHandler]
  -[AVTPresetResourcesLoadingTask cancel]
  -[AVTPresetResourcesLoadingTask initWithPresetResources:completionHandler:]
  -[AVTPresetResourcesLoadingTask presetResources]


AVTAvatarStore : NSObject <AVTPBackendImageHandlingDelegate, AVTAvatarStoreInternal, AVTAvatarStore>
 @property  AVTAvatarRecordImageGenerator *imageGenerator
 @property  <AVTAvatarStore> *persistenceAvatarStore
 @property  AVTImageStore *imageStore
 @property  <AVTUILogger> *logger
 @property  <AVTAvatarStoreInternal> *internalStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTStickerBackendDelegate> *stickerBackendDelegate

  // class methods
  +[AVTAvatarStore maximumNumberOfSavableAvatars]
  +[AVTAvatarStore maximumNumberOfFetchableAvatars]
  +[AVTAvatarStore defaultImageGeneratorForEnvironment:]

  // instance methods
  -[AVTAvatarStore logger]
  -[AVTAvatarStore internalStore]
  -[AVTAvatarStore .cxx_destruct]
  -[AVTAvatarStore imageGenerator]
  -[AVTAvatarStore init]
  -[AVTAvatarStore setInternalStore:]
  -[AVTAvatarStore canCreateAvatar]
  -[AVTAvatarStore avatarsForFetchRequest:error:]
  -[AVTAvatarStore fetchAvatarsForFetchRequest:completionHandler:]
  -[AVTAvatarStore generateThumbnailsForAvatarRecord:avatar:error:]
  -[AVTAvatarStore generateThumbnailsForAvatarRecords:error:]
  -[AVTAvatarStore deleteThumbnailsForAvatarRecordsWithIdentifiers:error:]
  -[AVTAvatarStore generateThumbnailsForDuplicateAvatarRecord:originalRecord:error:]
  -[AVTAvatarStore updateThumbnailsForChangesWithTracker:recordProvider:]
  -[AVTAvatarStore imageStore]
  -[AVTAvatarStore canCreateAvatarWithError:]
  -[AVTAvatarStore saveAvatarRecord:thumbnailAvatar:completionBlock:thumbnailGenerationCompletionBlock:]
  -[AVTAvatarStore deleteAvatar:completionHandler:]
  -[AVTAvatarStore duplicateAvatar:completionBlock:]
  -[AVTAvatarStore deleteAvatarWithIdentifier:completionBlock:]
  -[AVTAvatarStore recentStickersForFetchRequest:error:]
  -[AVTAvatarStore didUseStickerWithAvatarIdentifier:stickerIdentifier:completionHandler:]
  -[AVTAvatarStore deleteRecentStickersWithAvatarIdentifier:stickerIdentifier:completionHandler:]
  -[AVTAvatarStore deleteRecentStickersForChangeTracker:completionHandler:]
  -[AVTAvatarStore stickerBackendDelegate]
  -[AVTAvatarStore setStickerBackendDelegate:]
  -[AVTAvatarStore clearStickersForAvatarRecordIdentifier:withEnvironment:]
  -[AVTAvatarStore clearContentAtLocation:]
  -[AVTAvatarStore deleteImagesForAvatarRecordIdentifier:error:]
  -[AVTAvatarStore initWithImageGenerator:environment:]
  -[AVTAvatarStore initWithPersistenceAvatarStore:]
  -[AVTAvatarStore initWithPersistenceAvatarStore:imageGenerator:environment:]
  -[AVTAvatarStore initWithPersistenceAvatarStore:imageGenerator:imageStore:environment:]
  -[AVTAvatarStore persistenceAvatarStore]


AVTCoreModelPresetsPicker : NSObject <AVTCoreModelPicker>
 @property  NSOrderedSet *representedTags
 @property  NSString *identifier
 @property  NSString *title
 @property  AVTCoreModelPickerOptions *options
 @property  AVTCoreModelPairing *pairing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTCoreModelPresetsPicker identifier]
  -[AVTCoreModelPresetsPicker .cxx_destruct]
  -[AVTCoreModelPresetsPicker options]
  -[AVTCoreModelPresetsPicker title]
  -[AVTCoreModelPresetsPicker pairing]
  -[AVTCoreModelPresetsPicker initWithTitle:representedTags:pairing:options:]
  -[AVTCoreModelPresetsPicker initWithTitle:representedTags:pairing:options:identifier:]
  -[AVTCoreModelPresetsPicker representedTags]


AVTAvatarAttributeEditorSection : NSObject <AVTAvatarAttributeEditorSection>
 @property  BOOL shouldDisplayInsetSeparatorAfterSection
 @property  NSString *localizedName
 @property  NSArray *sectionItems
 @property  NSString *identifier
 @property  AVTAvatarAttributeEditorSectionOptions *options
 @property  unsigned long intendedDestination
 @property  {UIEdgeInsets=dddd} separatorInsets
 @property  <AVTAvatarAttributeEditorSectionSupplementalPicker> *supplementalPicker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *sections

  // instance methods
  -[AVTAvatarAttributeEditorSection setLocalizedName:]
  -[AVTAvatarAttributeEditorSection identifier]
  -[AVTAvatarAttributeEditorSection .cxx_destruct]
  -[AVTAvatarAttributeEditorSection options]
  -[AVTAvatarAttributeEditorSection localizedName]
  -[AVTAvatarAttributeEditorSection sectionItems]
  -[AVTAvatarAttributeEditorSection sections]
  -[AVTAvatarAttributeEditorSection shouldDisplayTitle]
  -[AVTAvatarAttributeEditorSection separatorInsets]
  -[AVTAvatarAttributeEditorSection shouldDisplaySeparatorBeforeSection:]
  -[AVTAvatarAttributeEditorSection intendedDestination]
  -[AVTAvatarAttributeEditorSection setIntendedDestination:]
  -[AVTAvatarAttributeEditorSection supplementalPicker]
  -[AVTAvatarAttributeEditorSection setSupplementalPicker:]
  -[AVTAvatarAttributeEditorSection initWithSectionItems:localizedName:identifier:intendedDestination:options:]
  -[AVTAvatarAttributeEditorSection shouldDisplayInsetSeparatorAfterSection]
  -[AVTAvatarAttributeEditorSection setShouldDisplayInsetSeparatorAfterSection:]


AVTSCNNodeModifications : NSObject <NSSecureCoding>
 @property  long long projectionDirection
 @property  double fieldOfView
 @property  float verticalLensShift
 @property  NSString *framingMode

  // class methods
  +[AVTSCNNodeModifications supportsSecureCoding]

  // instance methods
  -[AVTSCNNodeModifications fieldOfView]
  -[AVTSCNNodeModifications setFieldOfView:]
  -[AVTSCNNodeModifications encodeWithCoder:]
  -[AVTSCNNodeModifications .cxx_destruct]
  -[AVTSCNNodeModifications initWithCoder:]
  -[AVTSCNNodeModifications projectionDirection]
  -[AVTSCNNodeModifications setProjectionDirection:]
  -[AVTSCNNodeModifications framingMode]
  -[AVTSCNNodeModifications initWithProjectionDirection:fieldOfView:verticalLensShift:framingMode:]
  -[AVTSCNNodeModifications verticalLensShift]
  -[AVTSCNNodeModifications setVerticalLensShift:]
  -[AVTSCNNodeModifications setFramingMode:]


AVTAvatarAttributeEditorFlowLayout : UICollectionViewFlowLayout
  // instance methods
  -[AVTAvatarAttributeEditorFlowLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[AVTAvatarAttributeEditorFlowLayout layoutAttributesForElementsInRect:]


AVTCircularButton : UIButton
 @property  CAShapeLayer *clippingLayer
 @property  UIColor *dynamicBackgroundColor
 @property  UIImage *symbolImage
 @property  UIColor *symbolTintColor
 @property  BOOL isUsingDynamicBackground

  // instance methods
  -[AVTCircularButton .cxx_destruct]
  -[AVTCircularButton setHighlighted:]
  -[AVTCircularButton tintColorDidChange]
  -[AVTCircularButton layoutSubviews]
  -[AVTCircularButton setBackgroundColor:]
  -[AVTCircularButton initWithFrame:]
  -[AVTCircularButton initWithCoder:]
  -[AVTCircularButton symbolImage]
  -[AVTCircularButton setupView]
  -[AVTCircularButton clippingLayer]
  -[AVTCircularButton setClippingLayer:]
  -[AVTCircularButton setSymbolImage:]
  -[AVTCircularButton dynamicBackgroundColor]
  -[AVTCircularButton updateBackgroundColorIfNeeded]
  -[AVTCircularButton updateDynamicBackgroundColor]
  -[AVTCircularButton circleLayerAlpha]
  -[AVTCircularButton setSymbolImageWithName:]
  -[AVTCircularButton setSymbolImageWithName:configuration:]
  -[AVTCircularButton setSymbolTintColor:]
  -[AVTCircularButton setDynamicBackgroundColor:]
  -[AVTCircularButton symbolTintColor]
  -[AVTCircularButton isUsingDynamicBackground]
  -[AVTCircularButton setIsUsingDynamicBackground:]


AVTStickerRecentsLayout : NSObject
 @property  long long numberOfItems
 @property  long long numberOfItemsPerRow
 @property  long long numberOfItemsPerColumn
 @property  long long interitemPadding
 @property  long long appButtonIndex
 @property  BOOL laysOutVertically

  // class methods
  +[AVTStickerRecentsLayout buttonSizeForContainerSize:imageSize:]

  // instance methods
  -[AVTStickerRecentsLayout numberOfItems]
  -[AVTStickerRecentsLayout isEqual:]
  -[AVTStickerRecentsLayout interitemPadding]
  -[AVTStickerRecentsLayout numberOfItemsPerRow]
  -[AVTStickerRecentsLayout initWithNumberOfItemsPerRow:numberOfItemsPerColumn:interitemPadding:appButtonIndex:laysOutVertically:]
  -[AVTStickerRecentsLayout numberOfItemsPerColumn]
  -[AVTStickerRecentsLayout appButtonIndex]
  -[AVTStickerRecentsLayout laysOutVertically]


AVTAttributeCollectionViewCell : UICollectionViewCell <AVTDiscardableContent>
 @property  UIView *attributeView
 @property  AVTAttributeValueView *valueView
 @property  @? discardableContentHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAttributeCollectionViewCell cellIdentifier]

  // instance methods
  -[AVTAttributeCollectionViewCell .cxx_destruct]
  -[AVTAttributeCollectionViewCell prepareForReuse]
  -[AVTAttributeCollectionViewCell valueView]
  -[AVTAttributeCollectionViewCell discardContent]
  -[AVTAttributeCollectionViewCell discardableContentHandler]
  -[AVTAttributeCollectionViewCell setDiscardableContentHandler:]
  -[AVTAttributeCollectionViewCell setAttributeView:]
  -[AVTAttributeCollectionViewCell frameForAttributeView]
  -[AVTAttributeCollectionViewCell attributeView]


AVTMSStickerView : MSStickerView <UIGestureRecognizerDelegate>
 @property  BOOL allowsPeel
 @property  <AVTMSStickerViewDelegate> *delegate
 @property  <AVTStickerDisclosureValidationDelegate> *disclosureValidationDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTMSStickerView handleLongPress:]
  -[AVTMSStickerView setDelegate:]
  -[AVTMSStickerView _prepareForReuse]
  -[AVTMSStickerView delegate]
  -[AVTMSStickerView .cxx_destruct]
  -[AVTMSStickerView initWithFrame:]
  -[AVTMSStickerView handleTap:]
  -[AVTMSStickerView disclosureValidationDelegate]
  -[AVTMSStickerView setDisclosureValidationDelegate:]
  -[AVTMSStickerView allowsPeel]
  -[AVTMSStickerView setAllowsPeel:]


AVTAvatarLibraryViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource, AVTAvatarLibraryModelDelegate>
 @property  UICollectionView *collectionView
 @property  UILongPressGestureRecognizer *longPressGesture
 @property  AVTAvatarLibraryModel *model
 @property  _AVTAvatarRecordImageProvider *imageProvider
 @property  AVTUIEnvironment *environment
 @property  <AVTAvatarLibraryViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTAvatarLibraryViewController collectionView:cellForItemAtIndexPath:]
  -[AVTAvatarLibraryViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[AVTAvatarLibraryViewController model]
  -[AVTAvatarLibraryViewController setDelegate:]
  -[AVTAvatarLibraryViewController delegate]
  -[AVTAvatarLibraryViewController numberOfSectionsInCollectionView:]
  -[AVTAvatarLibraryViewController .cxx_destruct]
  -[AVTAvatarLibraryViewController collectionView]
  -[AVTAvatarLibraryViewController longPressGesture]
  -[AVTAvatarLibraryViewController viewDidLoad]
  -[AVTAvatarLibraryViewController loadView]
  -[AVTAvatarLibraryViewController viewDidLayoutSubviews]
  -[AVTAvatarLibraryViewController collectionView:layout:referenceSizeForHeaderInSection:]
  -[AVTAvatarLibraryViewController imageProvider]
  -[AVTAvatarLibraryViewController didLongPress:]
  -[AVTAvatarLibraryViewController collectionView:didSelectItemAtIndexPath:]
  -[AVTAvatarLibraryViewController collectionView:numberOfItemsInSection:]
  -[AVTAvatarLibraryViewController environment]
  -[AVTAvatarLibraryViewController didTapDoneButton:]
  -[AVTAvatarLibraryViewController initWithAvatarStore:environment:]
  -[AVTAvatarLibraryViewController presentUIViewController:forItem:]
  -[AVTAvatarLibraryViewController presetEditorViewController:]
  -[AVTAvatarLibraryViewController dismissController:completion:]
  -[AVTAvatarLibraryViewController didUpdateLibraryItems:]
  -[AVTAvatarLibraryViewController insertItemsAtIndexes:deleteItemsAtIndexes:reloadItemsAtIndexes:]
  -[AVTAvatarLibraryViewController didAddRecord:]
  -[AVTAvatarLibraryViewController didEditRecord:]
  -[AVTAvatarLibraryViewController didDeleteRecord:]
  -[AVTAvatarLibraryViewController initWithAvatarStore:]
  -[AVTAvatarLibraryViewController initWithModel:imageProvider:environment:]
  -[AVTAvatarLibraryViewController shouldUseLargeLayout]
  -[AVTAvatarLibraryViewController updateVisibleHeaders]


AVTAvatarLibraryHeaderView : UICollectionReusableView
 @property  UILabel *titleLabel

  // class methods
  +[AVTAvatarLibraryHeaderView reuseIdentifier]

  // instance methods
  -[AVTAvatarLibraryHeaderView .cxx_destruct]
  -[AVTAvatarLibraryHeaderView initWithFrame:]
  -[AVTAvatarLibraryHeaderView titleLabel]


AVTComponentFactory : NSObject
  // class methods
  +[AVTComponentFactory alertActionWithTitle:style:handler:]


AVTAttributeValueView : UIView <AVTSectionItemTransitionModel, AVTDiscardableContent>
 @property  UIImage *image
 @property  CAShapeLayer *clippingLayer
 @property  CAShapeLayer *selectionLayer
 @property  UIView *contentView
 @property  CALayer *imageLayer
 @property  CALayer *transitionImageLayer
 @property  BOOL selected
 @property  {CGSize=dd} imageSizeRatio
 @property  unsigned long selectionStyle
 @property  NSUUID *displaySessionUUID
 @property  BOOL showPlaceholder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? discardableContentHandler

  // class methods
  +[AVTAttributeValueView imageViewRectForBounds:imageSizeRatio:scale:]

  // instance methods
  -[AVTAttributeValueView contentView]
  -[AVTAttributeValueView setShowPlaceholder:]
  -[AVTAttributeValueView showPlaceholder]
  -[AVTAttributeValueView setSelected:]
  -[AVTAttributeValueView .cxx_destruct]
  -[AVTAttributeValueView layoutSubviews]
  -[AVTAttributeValueView image]
  -[AVTAttributeValueView setContentView:]
  -[AVTAttributeValueView initWithFrame:]
  -[AVTAttributeValueView selectionStyle]
  -[AVTAttributeValueView isSelected]
  -[AVTAttributeValueView setSelectionStyle:]
  -[AVTAttributeValueView setImage:]
  -[AVTAttributeValueView traitCollectionDidChange:]
  -[AVTAttributeValueView displaySessionUUID]
  -[AVTAttributeValueView setDisplaySessionUUID:]
  -[AVTAttributeValueView selectionLayer]
  -[AVTAttributeValueView setSelectionLayer:]
  -[AVTAttributeValueView clippingLayer]
  -[AVTAttributeValueView setClippingLayer:]
  -[AVTAttributeValueView selectionBezierPath]
  -[AVTAttributeValueView updateWithImage:]
  -[AVTAttributeValueView imageLayer]
  -[AVTAttributeValueView setImageLayer:]
  -[AVTAttributeValueView discardContent]
  -[AVTAttributeValueView discardableContentHandler]
  -[AVTAttributeValueView setDiscardableContentHandler:]
  -[AVTAttributeValueView fromLayer]
  -[AVTAttributeValueView toLayer]
  -[AVTAttributeValueView prepareForTransitionToImage:]
  -[AVTAttributeValueView cleanupAfterTransition]
  -[AVTAttributeValueView updateSelectionAndMaskLayer]
  -[AVTAttributeValueView relayoutSublayers]
  -[AVTAttributeValueView selectorRect]
  -[AVTAttributeValueView shapeLayerRect]
  -[AVTAttributeValueView configureImageLayer:]
  -[AVTAttributeValueView clippingBezierPath]
  -[AVTAttributeValueView updateCornerRadii]
  -[AVTAttributeValueView setImageSizeRatio:]
  -[AVTAttributeValueView updateHighlightedState:animated:completionBlock:]
  -[AVTAttributeValueView updateSelectedState:animated:]
  -[AVTAttributeValueView bringSelectionLayersToFront]
  -[AVTAttributeValueView imageSizeRatio]
  -[AVTAttributeValueView transitionImageLayer]
  -[AVTAttributeValueView setTransitionImageLayer:]


AVTAvatarActionsProvider : NSObject
 @property  AVTAvatarRecord *avatarRecord
 @property  AVTAvatarRecordDataSource *dataSource
 @property  UIAction *createAction
 @property  UIAction *editAction
 @property  UIAction *duplicateAction
 @property  UIAction *deleteAction
 @property  <AVTAvatarActionsModelDelegate> *delegate
 @property  BOOL allowCreate

  // class methods
  +[AVTAvatarActionsProvider localizedTitleForActionType:]
  +[AVTAvatarActionsProvider maximumNumberOfActions]

  // instance methods
  -[AVTAvatarActionsProvider dataSource]
  -[AVTAvatarActionsProvider setDelegate:]
  -[AVTAvatarActionsProvider delegate]
  -[AVTAvatarActionsProvider .cxx_destruct]
  -[AVTAvatarActionsProvider canPerformActionType:]
  -[AVTAvatarActionsProvider deleteAction]
  -[AVTAvatarActionsProvider setEditAction:]
  -[AVTAvatarActionsProvider editAction]
  -[AVTAvatarActionsProvider didTapEdit]
  -[AVTAvatarActionsProvider didTapDuplicate]
  -[AVTAvatarActionsProvider avatarRecord]
  -[AVTAvatarActionsProvider setAvatarRecord:]
  -[AVTAvatarActionsProvider setDeleteAction:]
  -[AVTAvatarActionsProvider initWithAvatarRecord:dataSource:allowCreate:]
  -[AVTAvatarActionsProvider generateActions]
  -[AVTAvatarActionsProvider didTapCreateNew]
  -[AVTAvatarActionsProvider didTapDelete:]
  -[AVTAvatarActionsProvider createAction]
  -[AVTAvatarActionsProvider setCreateAction:]
  -[AVTAvatarActionsProvider duplicateAction]
  -[AVTAvatarActionsProvider setDuplicateAction:]
  -[AVTAvatarActionsProvider allowCreate]


AVTAvatarConfiguration : NSObject <AVTCacheableResource, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *presetsStorage
 @property  NSMutableDictionary *colorPresetsStorage

  // class methods
  +[AVTAvatarConfiguration configurationPresetWithPreset:settingKind:]
  +[AVTAvatarConfiguration configurationColorPresetWithColorPreset:settingKind:coreModel:]
  +[AVTAvatarConfiguration configurationFromAvatar:]
  +[AVTAvatarConfiguration configurationFromAvatar:coreModel:]
  +[AVTAvatarConfiguration configurationForRecord:coreModel:]
  +[AVTAvatarConfiguration keyForSettingKind:]

  // instance methods
  -[AVTAvatarConfiguration .cxx_destruct]
  -[AVTAvatarConfiguration copyWithZone:]
  -[AVTAvatarConfiguration isEqual:]
  -[AVTAvatarConfiguration init]
  -[AVTAvatarConfiguration requiresEncryption]
  -[AVTAvatarConfiguration presetForCategory:]
  -[AVTAvatarConfiguration presets]
  -[AVTAvatarConfiguration volatileIdentifierForScope:]
  -[AVTAvatarConfiguration persistentIdentifierForScope:]
  -[AVTAvatarConfiguration costForScope:]
  -[AVTAvatarConfiguration initWithPresets:colorPresets:]
  -[AVTAvatarConfiguration addPreset:]
  -[AVTAvatarConfiguration addConfigurationPreset:]
  -[AVTAvatarConfiguration addColorPreset:]
  -[AVTAvatarConfiguration addConfigurationColorPreset:]
  -[AVTAvatarConfiguration removePresetsForCategory:]
  -[AVTAvatarConfiguration removeColorPresetsForSettingKind:]
  -[AVTAvatarConfiguration removePresetsForSettingKind:storage:]
  -[AVTAvatarConfiguration colorPresets]
  -[AVTAvatarConfiguration presetsForStorage:]
  -[AVTAvatarConfiguration colorPresetForSettingKind:]
  -[AVTAvatarConfiguration presetForSettingKind:storage:]
  -[AVTAvatarConfiguration colorConfigurationPresets]
  -[AVTAvatarConfiguration presetConfigurationPresets]
  -[AVTAvatarConfiguration configurationPresets]
  -[AVTAvatarConfiguration configurationPresetForSettingKind:]
  -[AVTAvatarConfiguration applyToAvatar:animated:]
  -[AVTAvatarConfiguration presetsStorage]
  -[AVTAvatarConfiguration colorPresetsStorage]


AVTConfigurationPreset : NSObject
 @property  {?=qq} settingKind
 @property  id preset
 @property  BOOL defaultPreset

  // instance methods
  -[AVTConfigurationPreset preset]
  -[AVTConfigurationPreset .cxx_destruct]
  -[AVTConfigurationPreset isEqual:]
  -[AVTConfigurationPreset settingKind]
  -[AVTConfigurationPreset isDefaultPreset]
  -[AVTConfigurationPreset initWithPreset:settingKind:]
  -[AVTConfigurationPreset initWithDefaultPresetForSettingKind:]


AVTSectionItemTransition : AVTTransition
 @property  <AVTSectionItemTransitionModel> *sectionItemTransitionModel

  // instance methods
  -[AVTSectionItemTransition model]
  -[AVTSectionItemTransition .cxx_destruct]
  -[AVTSectionItemTransition performTransition]
  -[AVTSectionItemTransition initWithModel:animated:setupHandler:completionHandler:logger:]
  -[AVTSectionItemTransition sectionItemTransitionModel]


CAShapeLayerAnimated : CAShapeLayer
  // instance methods
  -[CAShapeLayerAnimated actionForKey:]


AVTRecordingButton : UIButton
 @property  CAShapeLayerAnimated *outerCircle
 @property  CAShapeLayerAnimated *innerCircle
 @property  UIImageView *iconView
 @property  UIActivityIndicatorView *spinner
 @property  BOOL isTrackingLongPress
 @property  UIImpactFeedbackGenerator *feedbackGenerator
 @property  NSDate *lastFeedbackSent
 @property  <AVTRecordingButtonLongPressDelegate> *longPressDelegate
 @property  BOOL forceUsePhoneStyle
 @property  unsigned long uiState
 @property  UIColor *centerCircleColor
 @property  BOOL ignoresLongPress

  // instance methods
  -[AVTRecordingButton configure]
  -[AVTRecordingButton spinner]
  -[AVTRecordingButton .cxx_destruct]
  -[AVTRecordingButton setEnabled:]
  -[AVTRecordingButton setIconView:]
  -[AVTRecordingButton layoutSubviews]
  -[AVTRecordingButton iconView]
  -[AVTRecordingButton touchesBegan:withEvent:]
  -[AVTRecordingButton feedbackGenerator]
  -[AVTRecordingButton setFeedbackGenerator:]
  -[AVTRecordingButton touchesEnded:withEvent:]
  -[AVTRecordingButton initWithFrame:]
  -[AVTRecordingButton touchesCancelled:withEvent:]
  -[AVTRecordingButton initWithCoder:]
  -[AVTRecordingButton setSpinner:]
  -[AVTRecordingButton uiState]
  -[AVTRecordingButton startLongPress]
  -[AVTRecordingButton setCenterCircleColor:]
  -[AVTRecordingButton setForceUsePhoneStyle:]
  -[AVTRecordingButton setUIState:]
  -[AVTRecordingButton sendHapticFeedbackIfNeeded]
  -[AVTRecordingButton endLongPress:]
  -[AVTRecordingButton longPressDelegate]
  -[AVTRecordingButton setLongPressDelegate:]
  -[AVTRecordingButton forceUsePhoneStyle]
  -[AVTRecordingButton centerCircleColor]
  -[AVTRecordingButton ignoresLongPress]
  -[AVTRecordingButton setIgnoresLongPress:]
  -[AVTRecordingButton outerCircle]
  -[AVTRecordingButton setOuterCircle:]
  -[AVTRecordingButton innerCircle]
  -[AVTRecordingButton setInnerCircle:]
  -[AVTRecordingButton isTrackingLongPress]
  -[AVTRecordingButton setIsTrackingLongPress:]
  -[AVTRecordingButton lastFeedbackSent]
  -[AVTRecordingButton setLastFeedbackSent:]


AVTEditingPreviewModeOptions : NSObject
 @property  NSString *framingMode
 @property  NSString *bodyPosePack

  // class methods
  +[AVTEditingPreviewModeOptions defaultOptions]

  // instance methods
  -[AVTEditingPreviewModeOptions .cxx_destruct]
  -[AVTEditingPreviewModeOptions initWithFramingMode:bodyPosePack:]
  -[AVTEditingPreviewModeOptions framingMode]
  -[AVTEditingPreviewModeOptions bodyPosePack]


AVTEditingPreviewMode : NSObject
 @property  unsigned long type
 @property  AVTEditingPreviewModeOptions *options

  // class methods
  +[AVTEditingPreviewMode defaultPreviewMode]
  +[AVTEditingPreviewMode previewModeTypeForString:]
  +[AVTEditingPreviewMode stringForPreviewModeType:]

  // instance methods
  -[AVTEditingPreviewMode type]
  -[AVTEditingPreviewMode .cxx_destruct]
  -[AVTEditingPreviewMode options]
  -[AVTEditingPreviewMode initWithType:options:]


AVTSelectableStickerSheetController : NSObject <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, AVTNotifyingContainerViewDelegate, AVTStickerCollectionViewCellDelegate, AVTObjectViewController, AVTStickerSheetController>
 @property  UIView *view
 @property  UICollectionView *collectionView
 @property  BOOL isPageVisible
 @property  BOOL areAllStickersRendered
 @property  AVTStickerSheetModel *model
 @property  UIImage *placeholderImage
 @property  <AVTStickerTaskScheduler> *taskScheduler
 @property  BOOL showPrereleaseSticker
 @property  BOOL allowsPoseCapture
 @property  NSArray *stickerItems
 @property  NSIndexPath *selectedIndexPath
 @property  AVTUIStickerItem *cameraStickerItem
 @property  <AVTStickerDisclosureValidationDelegate> *disclosureValidationDelegate
 @property  <AVTStickerViewControllerImageDelegate> *imageDelegate
 @property  <AVTStickerSheetDelegate> *stickerSheetDelegate
 @property  BOOL showCellSelectionLayer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTPresenterDelegate> *presenterDelegate
 @property  {UIEdgeInsets=dddd} sectionInsets
 @property  <AVTStickerSheetControllerDelegate> *delegate
 @property  <AVTAvatarRecord> *avatarRecord

  // instance methods
  -[AVTSelectableStickerSheetController setCollectionView:]
  -[AVTSelectableStickerSheetController topPadding]
  -[AVTSelectableStickerSheetController scrollToContentOffset:animated:]
  -[AVTSelectableStickerSheetController setModel:]
  -[AVTSelectableStickerSheetController collectionView:cellForItemAtIndexPath:]
  -[AVTSelectableStickerSheetController taskScheduler]
  -[AVTSelectableStickerSheetController model]
  -[AVTSelectableStickerSheetController scrollViewDidScroll:]
  -[AVTSelectableStickerSheetController collectionView:layout:insetForSectionAtIndex:]
  -[AVTSelectableStickerSheetController setDelegate:]
  -[AVTSelectableStickerSheetController delegate]
  -[AVTSelectableStickerSheetController numberOfSectionsInCollectionView:]
  -[AVTSelectableStickerSheetController setPresenterDelegate:]
  -[AVTSelectableStickerSheetController setPlaceholderImage:]
  -[AVTSelectableStickerSheetController dealloc]
  -[AVTSelectableStickerSheetController view]
  -[AVTSelectableStickerSheetController collectionView:layout:sizeForItemAtIndexPath:]
  -[AVTSelectableStickerSheetController .cxx_destruct]
  -[AVTSelectableStickerSheetController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[AVTSelectableStickerSheetController collectionView]
  -[AVTSelectableStickerSheetController loadView]
  -[AVTSelectableStickerSheetController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[AVTSelectableStickerSheetController setView:]
  -[AVTSelectableStickerSheetController collectionView:didSelectItemAtIndexPath:]
  -[AVTSelectableStickerSheetController collectionView:numberOfItemsInSection:]
  -[AVTSelectableStickerSheetController placeholderImage]
  -[AVTSelectableStickerSheetController presenterDelegate]
  -[AVTSelectableStickerSheetController placeholderProvider]
  -[AVTSelectableStickerSheetController selectedIndexPath]
  -[AVTSelectableStickerSheetController setSelectedIndexPath:]
  -[AVTSelectableStickerSheetController sectionInsets]
  -[AVTSelectableStickerSheetController setSectionInsets:]
  -[AVTSelectableStickerSheetController avatarRecord]
  -[AVTSelectableStickerSheetController numberOfItemsPerRow]
  -[AVTSelectableStickerSheetController imageDelegate]
  -[AVTSelectableStickerSheetController setImageDelegate:]
  -[AVTSelectableStickerSheetController notifyingContainerViewWillChangeSize:]
  -[AVTSelectableStickerSheetController notifyingContainerViewDidChangeSize:]
  -[AVTSelectableStickerSheetController stickerCellDidTapSticker:]
  -[AVTSelectableStickerSheetController stickerCellDidPeelSticker:]
  -[AVTSelectableStickerSheetController sheetWillAppear]
  -[AVTSelectableStickerSheetController sheetDidDisappear]
  -[AVTSelectableStickerSheetController firstStickerView]
  -[AVTSelectableStickerSheetController startAllSchedulerTasks]
  -[AVTSelectableStickerSheetController disclosureValidationDelegate]
  -[AVTSelectableStickerSheetController setDisclosureValidationDelegate:]
  -[AVTSelectableStickerSheetController selectStickerWithIdentifier:]
  -[AVTSelectableStickerSheetController clearStickerSelection]
  -[AVTSelectableStickerSheetController minimumContentSizeForSize:]
  -[AVTSelectableStickerSheetController maxedContentOffset:]
  -[AVTSelectableStickerSheetController startAllSchedulerTasksExcludingVisibleIndexPaths:]
  -[AVTSelectableStickerSheetController scheduleSheetPlaceholderTask:]
  -[AVTSelectableStickerSheetController scheduleSheetStickerTask:withIndexPath:]
  -[AVTSelectableStickerSheetController discardStickerItems]
  -[AVTSelectableStickerSheetController areAllStickersRendered]
  -[AVTSelectableStickerSheetController clearStickerRendererIfNeeded]
  -[AVTSelectableStickerSheetController updateItem:withStickerResource:reloadCell:]
  -[AVTSelectableStickerSheetController reloadCollectionViewItemForStickerItem:]
  -[AVTSelectableStickerSheetController isPageVisible]
  -[AVTSelectableStickerSheetController setIsPageVisible:]
  -[AVTSelectableStickerSheetController setAreAllStickersRendered:]
  -[AVTSelectableStickerSheetController showPrereleaseSticker]
  -[AVTSelectableStickerSheetController setShowPrereleaseSticker:]
  -[AVTSelectableStickerSheetController stickerItems]
  -[AVTSelectableStickerSheetController setStickerItems:]
  -[AVTSelectableStickerSheetController allowsPoseCapture]
  -[AVTSelectableStickerSheetController setAllowsPoseCapture:]
  -[AVTSelectableStickerSheetController initWithStickerSheetModel:taskScheduler:allowsPoseCapture:]
  -[AVTSelectableStickerSheetController cellForCameraItemAtIndexPath:]
  -[AVTSelectableStickerSheetController cellForStickerItem:atIndexPath:]
  -[AVTSelectableStickerSheetController updateCell:withImage:sticker:animated:]
  -[AVTSelectableStickerSheetController didInteractWithStickerAtIndexPath:byPeeling:]
  -[AVTSelectableStickerSheetController stickerIndexInModelforIndexPath:]
  -[AVTSelectableStickerSheetController isCameraItem:]
  -[AVTSelectableStickerSheetController stickerSheetDelegate]
  -[AVTSelectableStickerSheetController setStickerSheetDelegate:]
  -[AVTSelectableStickerSheetController showCellSelectionLayer]
  -[AVTSelectableStickerSheetController setShowCellSelectionLayer:]
  -[AVTSelectableStickerSheetController cameraStickerItem]
  -[AVTSelectableStickerSheetController setCameraStickerItem:]


AVTCameraCollectionViewCell : AVTStickerCollectionViewCell
 @property  UIView *cameraCellView

  // instance methods
  -[AVTCameraCollectionViewCell .cxx_destruct]
  -[AVTCameraCollectionViewCell layoutSubviews]
  -[AVTCameraCollectionViewCell initWithFrame:]
  -[AVTCameraCollectionViewCell cameraCellView]
  -[AVTCameraCollectionViewCell setCameraCellView:]
  -[AVTCameraCollectionViewCell updateCameraViewFrame]


AVTAdaptativeLayoutView : UIView
 @property  UIView *contentView
 @property  <AVTAdaptativeLayout> *layout

  // instance methods
  -[AVTAdaptativeLayoutView contentView]
  -[AVTAdaptativeLayoutView layout]
  -[AVTAdaptativeLayoutView setLayout:]
  -[AVTAdaptativeLayoutView .cxx_destruct]
  -[AVTAdaptativeLayoutView initWithFrame:contentView:]
  -[AVTAdaptativeLayoutView layoutSubviews]


_AVTAdaptiveFullSizeLayout : NSObject <AVTAdaptativeLayout>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AVTAdaptiveFullSizeLayout contentViewSizeForSize:]


AVTFlippingCollectionViewFlowLayout : UICollectionViewFlowLayout
  // instance methods
  -[AVTFlippingCollectionViewFlowLayout flipsHorizontallyInOppositeLayoutDirection]


AVTAvatarAttributeEditorSectionSupplementalPicker : NSObject <AVTAvatarAttributeEditorSectionSupplementalPicker>
 @property  NSArray *choices
 @property  NSString *localizedTitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarAttributeEditorSectionSupplementalPicker pickerFromEditorSection:]
  +[AVTAvatarAttributeEditorSectionSupplementalPicker pickerForPairableModelCategory:isPaired:avatarUpdaterOnPair:]
  +[AVTAvatarAttributeEditorSectionSupplementalPicker pickerForMulticolorPicker:isMultipleSelected:switchToSingleColorAvatarUpdater:switchToMultipleColorAvatarUpdater:]

  // instance methods
  -[AVTAvatarAttributeEditorSectionSupplementalPicker localizedTitle]
  -[AVTAvatarAttributeEditorSectionSupplementalPicker .cxx_destruct]
  -[AVTAvatarAttributeEditorSectionSupplementalPicker choices]
  -[AVTAvatarAttributeEditorSectionSupplementalPicker initWithLocalizedTitle:choices:]
  -[AVTAvatarAttributeEditorSectionSupplementalPicker copyWithLocalizedTitle:]


AVTColorSlider : UISlider
 @property  CALayer *trackLayer
 @property  CAShapeLayer *thumbClippingLayer
 @property  CALayer *thumbContentLayer
 @property  CALayer *thumbSoftShadowLayer
 @property  CAShapeLayer *thumbBorderLayer
 @property  UIImageView *thumbView
 @property  _UIEdgeFeedbackGenerator *edgeFeedbackGenerator
 @property  UISelectionFeedbackGenerator *selectionFeedbackGenerator
 @property  BOOL shouldTriggerFeedback
 @property  long long layoutDirection
 @property  CALayer *thumbLayer
 @property  <AVTColorSliderDelegate> *delegate

  // instance methods
  -[AVTColorSlider trackRectForBounds:]
  -[AVTColorSlider setSelectionFeedbackGenerator:]
  -[AVTColorSlider thumbRectForBounds:trackRect:value:]
  -[AVTColorSlider thumbView]
  -[AVTColorSlider createThumbView]
  -[AVTColorSlider setDelegate:]
  -[AVTColorSlider delegate]
  -[AVTColorSlider .cxx_destruct]
  -[AVTColorSlider setLayoutDirection:]
  -[AVTColorSlider layoutDirection]
  -[AVTColorSlider layoutSubviews]
  -[AVTColorSlider selectionFeedbackGenerator]
  -[AVTColorSlider currentMaximumTrackImage]
  -[AVTColorSlider setEdgeFeedbackGenerator:]
  -[AVTColorSlider edgeFeedbackGenerator]
  -[AVTColorSlider currentMinimumTrackImage]
  -[AVTColorSlider trackBorderColor]
  -[AVTColorSlider trackLayer]
  -[AVTColorSlider setTrackLayer:]
  -[AVTColorSlider thumbClippingLayer]
  -[AVTColorSlider setThumbClippingLayer:]
  -[AVTColorSlider thumbContentLayer]
  -[AVTColorSlider setThumbContentLayer:]
  -[AVTColorSlider thumbSoftShadowLayer]
  -[AVTColorSlider setThumbSoftShadowLayer:]
  -[AVTColorSlider thumbBorderLayer]
  -[AVTColorSlider setThumbBorderLayer:]
  -[AVTColorSlider setThumbView:]
  -[AVTColorSlider valueDidChange:forEvent:]
  -[AVTColorSlider relayoutSublayers]
  -[AVTColorSlider initWithUserInterfaceLayoutDirection:]
  -[AVTColorSlider thumbLayer]
  -[AVTColorSlider setTrackLayer:animated:]
  -[AVTColorSlider removeTrackLayer:animated:]
  -[AVTColorSlider shouldTriggerFeedback]
  -[AVTColorSlider setShouldTriggerFeedback:]


AVTRenderingScope : NSObject <NSSecureCoding>
 @property  NSString *framingMode
 @property  float sizeModifier
 @property  long long renderingType
 @property  double scale
 @property  unsigned long options
 @property  AVTAvatarPose *pose
 @property  {CGSize=dd} size

  // class methods
  +[AVTRenderingScope supportsSecureCoding]
  +[AVTRenderingScope largeThumbnailScope]
  +[AVTRenderingScope gridThumbnailScope]
  +[AVTRenderingScope thumbnailScope]
  +[AVTRenderingScope listControllerThumbnailScope]
  +[AVTRenderingScope funCamCarouselThumbnailScope]
  +[AVTRenderingScope simplePickerThumbnailScope]
  +[AVTRenderingScope scopeOptionsForEnvironment:]
  +[AVTRenderingScope widthForRenderingType:options:]
  +[AVTRenderingScope thumbnailHeightRatioForFramingMode:]
  +[AVTRenderingScope extraMagnifyingFactorForFramingMode:]

  // instance methods
  -[AVTRenderingScope encodeWithCoder:]
  -[AVTRenderingScope .cxx_destruct]
  -[AVTRenderingScope renderingType]
  -[AVTRenderingScope options]
  -[AVTRenderingScope size]
  -[AVTRenderingScope scale]
  -[AVTRenderingScope isEqual:]
  -[AVTRenderingScope initWithCoder:]
  -[AVTRenderingScope pose]
  -[AVTRenderingScope framingMode]
  -[AVTRenderingScope cacheableResourceAssociatedIdentifier]
  -[AVTRenderingScope cacheableResourceAssociatedCost]
  -[AVTRenderingScope initWithRenderingType:scale:]
  -[AVTRenderingScope initWithRenderingType:scale:options:]
  -[AVTRenderingScope initWithRenderingType:scale:options:framingMode:pose:]
  -[AVTRenderingScope initWithRenderingType:scale:options:framingMode:pose:sizeModifier:]
  -[AVTRenderingScope initWithRenderingType:scale:options:framingMode:pose:size:]
  -[AVTRenderingScope copyWithSize:framingMode:]
  -[AVTRenderingScope copyWithPose:]
  -[AVTRenderingScope copyWithFramingMode:]
  -[AVTRenderingScope copyWithSizeModifier:]
  -[AVTRenderingScope copyApplyingPoseOverride:]
  -[AVTRenderingScope adaptedFramingModeForObjectType:]
  -[AVTRenderingScope framingModeIdentifier]
  -[AVTRenderingScope sizeModifier]


AVTFunCamAvatarPickerTitleCell : UICollectionViewCell
 @property  UILabel *titleLabel

  // class methods
  +[AVTFunCamAvatarPickerTitleCell cellIdentifier]

  // instance methods
  -[AVTFunCamAvatarPickerTitleCell .cxx_destruct]
  -[AVTFunCamAvatarPickerTitleCell prepareForReuse]
  -[AVTFunCamAvatarPickerTitleCell initWithFrame:]
  -[AVTFunCamAvatarPickerTitleCell titleLabel]
  -[AVTFunCamAvatarPickerTitleCell updateWithTitle:]


AVTStickerRecentsButtonCollectionViewCell : AVTStickerRecentsStickerCollectionViewCell
 @property  CAShapeLayer *circularBackgroundLayer

  // class methods
  +[AVTStickerRecentsButtonCollectionViewCell identifier]

  // instance methods
  -[AVTStickerRecentsButtonCollectionViewCell .cxx_destruct]
  -[AVTStickerRecentsButtonCollectionViewCell layoutSubviews]
  -[AVTStickerRecentsButtonCollectionViewCell contentBounds]
  -[AVTStickerRecentsButtonCollectionViewCell initWithFrame:]
  -[AVTStickerRecentsButtonCollectionViewCell traitCollectionDidChange:]
  -[AVTStickerRecentsButtonCollectionViewCell updateWithImage:]
  -[AVTStickerRecentsButtonCollectionViewCell circleLayerRect]
  -[AVTStickerRecentsButtonCollectionViewCell updateWithDefaultImage]
  -[AVTStickerRecentsButtonCollectionViewCell circularBackgroundLayer]
  -[AVTStickerRecentsButtonCollectionViewCell setCircularBackgroundLayer:]


AVTInMemoryImageCache : AVTInMemoryResourceCache <AVTImageCache>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTInMemoryImageCache imageForItem:scope:]
  -[AVTInMemoryImageCache imageForItem:scope:cacheMissHandler:]
  -[AVTInMemoryImageCache initWithLockProvider:logger:]


AVTViewSession : NSObject
 @property  BOOL active
 @property  UIView *avtViewContainer
 @property  AVTViewUpdater *avtViewUpdater
 @property  AVTView *avtView
 @property  @? becomeActiveHandler
 @property  @? tearDownHandler
 @property  <AVTViewSessionDelegate> *delegate
 @property  {CGSize=dd} aspectRatio

  // instance methods
  -[AVTViewSession setDelegate:]
  -[AVTViewSession aspectRatio]
  -[AVTViewSession tearDownWithCompletionHandler:]
  -[AVTViewSession delegate]
  -[AVTViewSession isActive]
  -[AVTViewSession .cxx_destruct]
  -[AVTViewSession setActive:]
  -[AVTViewSession avtView]
  -[AVTViewSession setAvtView:]
  -[AVTViewSession avtViewContainer]
  -[AVTViewSession setAvtViewContainer:]
  -[AVTViewSession initWithBecomeActiveHandler:tearDownHandler:aspectRatio:]
  -[AVTViewSession activateWithAVTView:container:updater:]
  -[AVTViewSession avtViewUpdater]
  -[AVTViewSession setAvtViewUpdater:]
  -[AVTViewSession becomeActiveHandler]
  -[AVTViewSession tearDownHandler]


AVTTransparentNavigationController : UINavigationController
  // instance methods
  -[AVTTransparentNavigationController initWithRootViewController:]


AVTAvatarAttributeEditorOverridingLayout : NSObject <AVTAvatarAttributeEditorLayout>
 @property  <AVTAvatarAttributeEditorLayout> *backingLayout
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} avatarContainerFrame
 @property  double avatarContainerAlpha
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} attributesContentViewFrame
 @property  {CGSize=dd} containerSize
 @property  {UIEdgeInsets=dddd} edgeInsets
 @property  double userInfoViewHeight
 @property  double screenScale
 @property  BOOL RTL
 @property  NSString *contentSizeCategory
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} userInfoFrame
 @property  double headerMaskingViewAlpha
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} headerMaskingViewFrame
 @property  double verticalRuleAlpha
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} verticalRuleFrame
 @property  {UIEdgeInsets=dddd} attributesContentViewInsets
 @property  {UIEdgeInsets=dddd} attributesContentViewScrollIndicatorInsets
 @property  unsigned long supportedLayoutOrientation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} groupDialContainerFrame
 @property  BOOL showSideGroupPicker
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sideGroupContainerFrame
 @property  double maxGroupLabelWidth

  // instance methods
  -[AVTAvatarAttributeEditorOverridingLayout screenScale]
  -[AVTAvatarAttributeEditorOverridingLayout containerSize]
  -[AVTAvatarAttributeEditorOverridingLayout edgeInsets]
  -[AVTAvatarAttributeEditorOverridingLayout .cxx_destruct]
  -[AVTAvatarAttributeEditorOverridingLayout initWithLayout:]
  -[AVTAvatarAttributeEditorOverridingLayout contentSizeCategory]
  -[AVTAvatarAttributeEditorOverridingLayout RTL]
  -[AVTAvatarAttributeEditorOverridingLayout supportedLayoutOrientation]
  -[AVTAvatarAttributeEditorOverridingLayout groupDialContainerFrame]
  -[AVTAvatarAttributeEditorOverridingLayout sideGroupContainerFrame]
  -[AVTAvatarAttributeEditorOverridingLayout attributesContentViewFrame]
  -[AVTAvatarAttributeEditorOverridingLayout userInfoFrame]
  -[AVTAvatarAttributeEditorOverridingLayout headerMaskingViewAlpha]
  -[AVTAvatarAttributeEditorOverridingLayout headerMaskingViewFrame]
  -[AVTAvatarAttributeEditorOverridingLayout verticalRuleAlpha]
  -[AVTAvatarAttributeEditorOverridingLayout verticalRuleFrame]
  -[AVTAvatarAttributeEditorOverridingLayout attributesContentViewInsets]
  -[AVTAvatarAttributeEditorOverridingLayout attributesContentViewScrollIndicatorInsets]
  -[AVTAvatarAttributeEditorOverridingLayout avatarContainerFrame]
  -[AVTAvatarAttributeEditorOverridingLayout avatarContainerAlpha]
  -[AVTAvatarAttributeEditorOverridingLayout showSideGroupPicker]
  -[AVTAvatarAttributeEditorOverridingLayout userInfoViewHeight]
  -[AVTAvatarAttributeEditorOverridingLayout maxGroupLabelWidth]
  -[AVTAvatarAttributeEditorOverridingLayout setAvatarContainerFrame:]
  -[AVTAvatarAttributeEditorOverridingLayout setAvatarContainerAlpha:]
  -[AVTAvatarAttributeEditorOverridingLayout setAttributesContentViewFrame:]
  -[AVTAvatarAttributeEditorOverridingLayout backingLayout]


AVTGroupListCollectionViewCell : UICollectionViewCell
 @property  UIVisualEffectView *visualEffectView
 @property  UILabel *label
 @property  UIImageView *imageView
 @property  NSString *title
 @property  NSString *symbolName

  // class methods
  +[AVTGroupListCollectionViewCell highlightedBackgroundColor]
  +[AVTGroupListCollectionViewCell cellIdentifier]
  +[AVTGroupListCollectionViewCell defaultSymbolImageName]
  +[AVTGroupListCollectionViewCell estimatedLabelWidthForContainerWidth:]

  // instance methods
  -[AVTGroupListCollectionViewCell systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:]
  -[AVTGroupListCollectionViewCell visualEffectView]
  -[AVTGroupListCollectionViewCell setSelected:]
  -[AVTGroupListCollectionViewCell .cxx_destruct]
  -[AVTGroupListCollectionViewCell title]
  -[AVTGroupListCollectionViewCell symbolName]
  -[AVTGroupListCollectionViewCell label]
  -[AVTGroupListCollectionViewCell initWithFrame:]
  -[AVTGroupListCollectionViewCell setTitle:]
  -[AVTGroupListCollectionViewCell setSymbolName:]
  -[AVTGroupListCollectionViewCell imageView]
  -[AVTGroupListCollectionViewCell setupContent]
  -[AVTGroupListCollectionViewCell estimatedLabelWidth]


AVTSimpleAvatarPickerCollectionViewCell : UICollectionViewCell
 @property  UIView *selectionLayer
 @property  AVTUIAnimatingImageView *imageView
 @property  NSUUID *displaySessionUUID
 @property  unsigned long imageInsetSize
 @property  BOOL showSelectedState

  // class methods
  +[AVTSimpleAvatarPickerCollectionViewCell cellIdentifier]
  +[AVTSimpleAvatarPickerCollectionViewCell selectionPathInBounds:]
  +[AVTSimpleAvatarPickerCollectionViewCell imageInsetForInsetSize:]

  // instance methods
  -[AVTSimpleAvatarPickerCollectionViewCell setSelected:]
  -[AVTSimpleAvatarPickerCollectionViewCell .cxx_destruct]
  -[AVTSimpleAvatarPickerCollectionViewCell prepareForReuse]
  -[AVTSimpleAvatarPickerCollectionViewCell setHighlighted:]
  -[AVTSimpleAvatarPickerCollectionViewCell layoutSubviews]
  -[AVTSimpleAvatarPickerCollectionViewCell initWithFrame:]
  -[AVTSimpleAvatarPickerCollectionViewCell imageView]
  -[AVTSimpleAvatarPickerCollectionViewCell displaySessionUUID]
  -[AVTSimpleAvatarPickerCollectionViewCell setDisplaySessionUUID:]
  -[AVTSimpleAvatarPickerCollectionViewCell selectionLayer]
  -[AVTSimpleAvatarPickerCollectionViewCell showSelectedState]
  -[AVTSimpleAvatarPickerCollectionViewCell setShowSelectedState:]
  -[AVTSimpleAvatarPickerCollectionViewCell shouldShowSelectionLayer]
  -[AVTSimpleAvatarPickerCollectionViewCell updateSelectionLayerOpacityAnimated:]
  -[AVTSimpleAvatarPickerCollectionViewCell updateWithImage:animated:]
  -[AVTSimpleAvatarPickerCollectionViewCell setImageInsetSize:]
  -[AVTSimpleAvatarPickerCollectionViewCell updateHighlightedState:animated:]
  -[AVTSimpleAvatarPickerCollectionViewCell imageInsetSize]


AVTAvatarActionsViewControllerPadLayout : NSObject <AVTAvatarActionsViewControllerLayout>
 @property  {CGSize=dd} containerSize
 @property  {UIEdgeInsets=dddd} edgeInsets
 @property  long long buttonCount
 @property  double actionButtonsViewAlpha
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} actionButtonsViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} avatarContainerViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} userInfoFrame
 @property  <AVTViewLayoutInfo> *avtViewLayout

  // class methods
  +[AVTAvatarActionsViewControllerPadLayout buttonHeight]
  +[AVTAvatarActionsViewControllerPadLayout heightForButtonsViewWithButtonCount:]

  // instance methods
  -[AVTAvatarActionsViewControllerPadLayout containerSize]
  -[AVTAvatarActionsViewControllerPadLayout edgeInsets]
  -[AVTAvatarActionsViewControllerPadLayout .cxx_destruct]
  -[AVTAvatarActionsViewControllerPadLayout buttonCount]
  -[AVTAvatarActionsViewControllerPadLayout actionButtonsViewFrame]
  -[AVTAvatarActionsViewControllerPadLayout actionButtonsViewFrameForButtonCount:]
  -[AVTAvatarActionsViewControllerPadLayout userInfoFrame]
  -[AVTAvatarActionsViewControllerPadLayout avtViewLayout]
  -[AVTAvatarActionsViewControllerPadLayout initWithContainerSize:insets:buttonCount:avtViewLayoutInfo:]
  -[AVTAvatarActionsViewControllerPadLayout actionButtonsViewAlpha]
  -[AVTAvatarActionsViewControllerPadLayout avatarContainerViewFrame]


AVTUsageTracker : NSObject
  // class methods
  +[AVTUsageTracker currentSession]
  +[AVTUsageTracker trackStickerSentFromHostBundleIdentifier:]
  +[AVTUsageTracker trackStickerSentFromHostBundleIdentifier:withCoreAnalyticsClient:]
  +[AVTUsageTracker trackCountOfMemojiInStore:]
  +[AVTUsageTracker trackCountOfMemojiInStore:withCoreAnalyticsClient:]


AVTUsageTrackingSession : NSObject <AVTUsageTrackingSession>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <AVTUILogger> *logger
 @property  <AVTCoreAnalyticsClient> *ntsCAClient
 @property  NSString *keyBasePrefix
 @property  NSString *bundleAppName
 @property  <AVTDifferentialPrivacyRecorder> *ntsDPRecorder
 @property  <AVTAvatarConfigurationMetric> *metric
 @property  @? recordTransformer
 @property  AVTAvatarConfiguration *defaultConfiguration
 @property  AVTAvatarRecord *avatarRecord
 @property  @? timeProvider
 @property  BOOL expandedMode
 @property  BOOL recordedVideo
 @property  NSDate *editorEnterDate
 @property  AVTUsageTrackingRecordTimedEvent *faceTrackingEvent
 @property  <AVTAvatarStoreInternal> *avatarStore

  // class methods
  +[AVTUsageTrackingSession defaultRecordTransformerForCoreModel:]
  +[AVTUsageTrackingSession defaultTimeProvider]
  +[AVTUsageTrackingSession payloadForAvatarRecord:]
  +[AVTUsageTrackingSession payloadForAvatarRecordIdentifier:]
  +[AVTUsageTrackingSession getPresetDescription:usedCategoriesDescription:forAvatarConfiguration:defaultConfiguration:]
  +[AVTUsageTrackingSession colorPresetDescriptionForAvatarConfiguration:]
  +[AVTUsageTrackingSession dpKeyBasePrefix]
  +[AVTUsageTrackingSession keyBasePrefixForBundleIdentifier:]
  +[AVTUsageTrackingSession allowListAppNameFromBundleID:]
  +[AVTUsageTrackingSession makeKeyAnalyticsCompliant:]
  +[AVTUsageTrackingSession makeDPKey:]
  +[AVTUsageTrackingSession configurationDistanceClassifierWithMetric:]
  +[AVTUsageTrackingSession likenessComparator]

  // instance methods
  -[AVTUsageTrackingSession logger]
  -[AVTUsageTrackingSession workQueue]
  -[AVTUsageTrackingSession end]
  -[AVTUsageTrackingSession metric]
  -[AVTUsageTrackingSession .cxx_destruct]
  -[AVTUsageTrackingSession timeProvider]
  -[AVTUsageTrackingSession defaultConfiguration]
  -[AVTUsageTrackingSession avatarRecord]
  -[AVTUsageTrackingSession avatarStore]
  -[AVTUsageTrackingSession setAvatarStore:]
  -[AVTUsageTrackingSession beginWithStore:]
  -[AVTUsageTrackingSession didShowExpandedMode]
  -[AVTUsageTrackingSession didCreateAvatar:]
  -[AVTUsageTrackingSession didEditAvatar:]
  -[AVTUsageTrackingSession didDuplicateAvatar:]
  -[AVTUsageTrackingSession didDeleteAvatar:]
  -[AVTUsageTrackingSession didEnterEditor]
  -[AVTUsageTrackingSession didLeaveEditor]
  -[AVTUsageTrackingSession didPauseFaceTracking]
  -[AVTUsageTrackingSession didResumeFaceTracking]
  -[AVTUsageTrackingSession didRecordVideo]
  -[AVTUsageTrackingSession didSendVideoWithAvatar:duration:]
  -[AVTUsageTrackingSession didDiscardVideoWithDuration:]
  -[AVTUsageTrackingSession didReplayVideo]
  -[AVTUsageTrackingSession didSendImageWithAvatar:]
  -[AVTUsageTrackingSession didSendStickerWithAvatar:]
  -[AVTUsageTrackingSession didStartFaceTrackingInCarouselWithAvatar:]
  -[AVTUsageTrackingSession didChangeCurrentAvatarInCarousel:]
  -[AVTUsageTrackingSession didStopFaceTrackingInCarousel]
  -[AVTUsageTrackingSession didSelectStickerFromStickersApp:withAvatar:]
  -[AVTUsageTrackingSession didChangeCurrentAvatarInStickers:]
  -[AVTUsageTrackingSession didTapStickerFromRecents:withAvatarIdentifier:]
  -[AVTUsageTrackingSession didOpenStickersAppFromRecents]
  -[AVTUsageTrackingSession initWithSerialQueueProvider:recordTransformer:logger:]
  -[AVTUsageTrackingSession initWithCoreAnalyticsClient:dpRecorder:serialQueueProvider:recordTransformer:avatarRecord:defaultConfiguration:timeProvider:configurationMetric:logger:keyBasePrefix:bundleAppName:]
  -[AVTUsageTrackingSession performClientWork:]
  -[AVTUsageTrackingSession makeEventKeyForAction:]
  -[AVTUsageTrackingSession makeCrossAppEventKeyForAction:]
  -[AVTUsageTrackingSession sendEventForAction:]
  -[AVTUsageTrackingSession payloadForCrossAppEvent]
  -[AVTUsageTrackingSession sendCrossAppsEventForAction:]
  -[AVTUsageTrackingSession didSelectStickerFromStickersApp:withAvatar:bundleIdentifier:]
  -[AVTUsageTrackingSession sentStickerFromStickersApp:withAvatarRecord:action:appName:]
  -[AVTUsageTrackingSession nts_loadDefaultConfigurationIfNeeded]
  -[AVTUsageTrackingSession nts_reportEditorTimeWithExitTime:client:]
  -[AVTUsageTrackingSession nts_reportFaceTrackingTimeWithEndTime:client:]
  -[AVTUsageTrackingSession nts_reportAvatarCountWithClient:]
  -[AVTUsageTrackingSession nts_reportAvatarDescription:dpRecorder:]
  -[AVTUsageTrackingSession nts_reportAvatarLikenessClustersWithClient:]
  -[AVTUsageTrackingSession nts_reportAvatarComplexity:withClient:]
  -[AVTUsageTrackingSession nts_reportExpandedModeWithClient:]
  -[AVTUsageTrackingSession ntsCAClient]
  -[AVTUsageTrackingSession keyBasePrefix]
  -[AVTUsageTrackingSession bundleAppName]
  -[AVTUsageTrackingSession ntsDPRecorder]
  -[AVTUsageTrackingSession recordTransformer]
  -[AVTUsageTrackingSession expandedMode]
  -[AVTUsageTrackingSession setExpandedMode:]
  -[AVTUsageTrackingSession recordedVideo]
  -[AVTUsageTrackingSession setRecordedVideo:]
  -[AVTUsageTrackingSession editorEnterDate]
  -[AVTUsageTrackingSession setEditorEnterDate:]
  -[AVTUsageTrackingSession faceTrackingEvent]
  -[AVTUsageTrackingSession setFaceTrackingEvent:]


AVTUsageTrackingRecordTimedEvent : NSObject
 @property  NSDate *currentStartTime
 @property  double totalTime
 @property  BOOL paused
 @property  <AVTAvatarRecord> *record

  // instance methods
  -[AVTUsageTrackingRecordTimedEvent record]
  -[AVTUsageTrackingRecordTimedEvent setPaused:]
  -[AVTUsageTrackingRecordTimedEvent .cxx_destruct]
  -[AVTUsageTrackingRecordTimedEvent paused]
  -[AVTUsageTrackingRecordTimedEvent totalTime]
  -[AVTUsageTrackingRecordTimedEvent setTotalTime:]
  -[AVTUsageTrackingRecordTimedEvent currentStartTime]
  -[AVTUsageTrackingRecordTimedEvent setCurrentStartTime:]
  -[AVTUsageTrackingRecordTimedEvent initWithStartTime:record:]
  -[AVTUsageTrackingRecordTimedEvent pauseAtTime:]
  -[AVTUsageTrackingRecordTimedEvent resumeAtTime:]
  -[AVTUsageTrackingRecordTimedEvent totalElapsedTimeAtTime:]


AVTCoreModelMulticolorPicker : NSObject <AVTCoreModelPicker>
 @property  AVTCoreModelMulticolorAuxiliaryPicker *auxiliaryPicker
 @property  NSArray *subpickers
 @property  NSArray *subtitles
 @property  NSDictionary *nestedPresetPickers
 @property  long long initialState
 @property  BOOL allowsRemoval
 @property  NSString *identifier
 @property  NSString *title
 @property  AVTCoreModelPickerOptions *options
 @property  AVTCoreModelPairing *pairing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTCoreModelMulticolorPicker initialState]
  -[AVTCoreModelMulticolorPicker identifier]
  -[AVTCoreModelMulticolorPicker .cxx_destruct]
  -[AVTCoreModelMulticolorPicker options]
  -[AVTCoreModelMulticolorPicker title]
  -[AVTCoreModelMulticolorPicker pairing]
  -[AVTCoreModelMulticolorPicker subtitles]
  -[AVTCoreModelMulticolorPicker initWithTitle:subpickers:subtitles:nestedPresetPickers:auxiliaryPicker:initialState:allowsRemoval:options:]
  -[AVTCoreModelMulticolorPicker initWithIdentifier:title:subpickers:subtitles:nestedPresetPickers:auxiliaryPicker:initialState:allowsRemoval:options:]
  -[AVTCoreModelMulticolorPicker auxiliaryPicker]
  -[AVTCoreModelMulticolorPicker subpickers]
  -[AVTCoreModelMulticolorPicker nestedPresetPickers]
  -[AVTCoreModelMulticolorPicker allowsRemoval]


AVTImageValidatorConfiguration : NSObject
 @property  BOOL shouldCheckForTransparentImages
 @property  BOOL shouldCheckForDuplicateImages

  // instance methods
  -[AVTImageValidatorConfiguration shouldCheckForTransparentImages]
  -[AVTImageValidatorConfiguration setShouldCheckForTransparentImages:]
  -[AVTImageValidatorConfiguration shouldCheckForDuplicateImages]
  -[AVTImageValidatorConfiguration setShouldCheckForDuplicateImages:]


AVTImageValidator : NSObject
 @property  NSObject<OS_dispatch_queue> *duplicateValidationQueue
 @property  <AVTUILogger> *logger
 @property  AVTImageValidatorConfiguration *configuration
 @property  NSMutableDictionary *fileNameToImageHashesMap
 @property  NSMutableDictionary *imageHashesToAvatarDataHashesMap
 @property  NSMutableDictionary *imageHashesToFileNameMap

  // class methods
  +[AVTImageValidator sharedValidator]
  +[AVTImageValidator _calculateStatistics:withSize:]
  +[AVTImageValidator isImageValid:error:]

  // instance methods
  -[AVTImageValidator setLogger:]
  -[AVTImageValidator logger]
  -[AVTImageValidator setConfiguration:]
  -[AVTImageValidator configuration]
  -[AVTImageValidator .cxx_destruct]
  -[AVTImageValidator init]
  -[AVTImageValidator initWithConfiguration:environment:]
  -[AVTImageValidator validateImageIsNotTransparent:error:]
  -[AVTImageValidator validateImageDataIsNotDuplicate:forFileName:avatarDataHash:]
  -[AVTImageValidator nts_addHash:forKey:avatarDataHash:]
  -[AVTImageValidator duplicateValidationQueue]
  -[AVTImageValidator setDuplicateValidationQueue:]
  -[AVTImageValidator fileNameToImageHashesMap]
  -[AVTImageValidator setFileNameToImageHashesMap:]
  -[AVTImageValidator imageHashesToAvatarDataHashesMap]
  -[AVTImageValidator setImageHashesToAvatarDataHashesMap:]
  -[AVTImageValidator imageHashesToFileNameMap]
  -[AVTImageValidator setImageHashesToFileNameMap:]


AVTStickerSheetModel : NSObject
 @property  <AVTAvatarRecord> *avatarRecord
 @property  <AVTTaskScheduler> *taskScheduler
 @property  AVTUIStickerRenderer *stickerRenderer
 @property  AVTUIEnvironment *environment
 @property  AVTUIStickerPlaceholderProviderFactory *placeholderProviderFactory
 @property  NSArray *stickerItems

  // class methods
  +[AVTStickerSheetModel sheetModelForAvatarRecord:withConfigurations:cache:taskScheduler:renderingQueue:encodingQueue:stickerGeneratorPool:imageProvider:environment:]

  // instance methods
  -[AVTStickerSheetModel taskScheduler]
  -[AVTStickerSheetModel placeholderProviderFactory]
  -[AVTStickerSheetModel .cxx_destruct]
  -[AVTStickerSheetModel environment]
  -[AVTStickerSheetModel avatarRecord]
  -[AVTStickerSheetModel stickerItems]
  -[AVTStickerSheetModel stickerRenderer]
  -[AVTStickerSheetModel initWithAvatarRecord:stickerItems:stickerRenderer:taskScheduler:placeholderProviderFactory:environment:]


AVTImageIOImageEncoder : NSObject <AVTImageEncoder>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTImageIOImageEncoder typeIdentifier]
  +[AVTImageIOImageEncoder addImageOptions]

  // instance methods
  -[AVTImageIOImageEncoder fileExtension]
  -[AVTImageIOImageEncoder imageFromURL:error:]
  -[AVTImageIOImageEncoder imageFromData:error:]
  -[AVTImageIOImageEncoder dataFromImage:]
  -[AVTImageIOImageEncoder imageFromImageSource:error:]


AVTPaddleView : UIView
 @property  UIView *videoViewContainer
 @property  UIView *addButtonViewContainer
 @property  AVTCircularButton *addButton
 @property  AVPlayer *player
 @property  AVPlayerLooper *looper
 @property  AVPlayerViewController *videoController
 @property  NSArray *activeConstraints
 @property  long long layoutDirection
 @property  AVTTouchDownGestureRecognizer *tapGestureRecognizer
 @property  AVTTouchDownGestureRecognizer *dismissGestureRecognizer
 @property  AVTUILogger *logger
 @property  @? preCommitBlock
 @property  BOOL automaticallyStartsPlaying
 @property  double padding
 @property  <AVTPaddleViewDelegate> *delegate

  // class methods
  +[AVTPaddleView defaultPadding]
  +[AVTPaddleView videoItem]

  // instance methods
  -[AVTPaddleView setLogger:]
  -[AVTPaddleView logger]
  -[AVTPaddleView dismissAnimated:]
  -[AVTPaddleView setDismissGestureRecognizer:]
  -[AVTPaddleView setDelegate:]
  -[AVTPaddleView dismissGestureRecognizer]
  -[AVTPaddleView padding]
  -[AVTPaddleView delegate]
  -[AVTPaddleView dealloc]
  -[AVTPaddleView .cxx_destruct]
  -[AVTPaddleView layoutDirection]
  -[AVTPaddleView player]
  -[AVTPaddleView layoutSubviews]
  -[AVTPaddleView drawRect:]
  -[AVTPaddleView observeValueForKeyPath:ofObject:change:context:]
  -[AVTPaddleView pointInside:withEvent:]
  -[AVTPaddleView setPlayer:]
  -[AVTPaddleView tapGestureRecognizer]
  -[AVTPaddleView isRTL]
  -[AVTPaddleView setPadding:]
  -[AVTPaddleView setTapGestureRecognizer:]
  -[AVTPaddleView traitCollectionDidChange:]
  -[AVTPaddleView didMoveToWindow]
  -[AVTPaddleView handleTapGesture]
  -[AVTPaddleView addButton]
  -[AVTPaddleView videoController]
  -[AVTPaddleView setVideoController:]
  -[AVTPaddleView activeConstraints]
  -[AVTPaddleView setActiveConstraints:]
  -[AVTPaddleView showAnimated:]
  -[AVTPaddleView setAddButton:]
  -[AVTPaddleView looper]
  -[AVTPaddleView setLooper:]
  -[AVTPaddleView playVideo]
  -[AVTPaddleView pauseVideo]
  -[AVTPaddleView handleDismissGesture]
  -[AVTPaddleView initWithLayoutDirection:]
  -[AVTPaddleView initWithLayoutDirection:symbolConfiguration:]
  -[AVTPaddleView _configureWithSymbolConfiguration:]
  -[AVTPaddleView updateLayoutFromPlusButtonView:videoView:]
  -[AVTPaddleView frameForAddButtonInCoordinateSpace:]
  -[AVTPaddleView frameForVideoInCoordinateSpace:]
  -[AVTPaddleView handleTapAddButton]
  -[AVTPaddleView isPointInsideTransparentRegion:]
  -[AVTPaddleView attachVideoController:looper:]
  -[AVTPaddleView startPlayingIfNecessary]
  -[AVTPaddleView stopPlayingIfNecessary]
  -[AVTPaddleView automaticallyStartsPlaying]
  -[AVTPaddleView setAutomaticallyStartsPlaying:]
  -[AVTPaddleView videoViewContainer]
  -[AVTPaddleView setVideoViewContainer:]
  -[AVTPaddleView addButtonViewContainer]
  -[AVTPaddleView setAddButtonViewContainer:]
  -[AVTPaddleView preCommitBlock]
  -[AVTPaddleView setPreCommitBlock:]


AVTAvatarConfigurationMetric : NSObject <AVTAvatarConfigurationMetric>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarConfigurationMetric defaultMetric]
  +[AVTAvatarConfigurationMetric distanceFromConfiguration:toConfiguration:]
  +[AVTAvatarConfigurationMetric gapFromDistance:]
  +[AVTAvatarConfigurationMetric differenceCountFromDistance:]
  +[AVTAvatarConfigurationMetric impactForSettingKind:]
  +[AVTAvatarConfigurationMetric enumerateDifferencesFromConfiguration:toConfiguration:withHandler:]

  // instance methods
  -[AVTAvatarConfigurationMetric distanceFromConfiguration:toConfiguration:]
  -[AVTAvatarConfigurationMetric gapFromDistance:]
  -[AVTAvatarConfigurationMetric differenceCountFromDistance:]


AVTCarouselController : UIViewController <AVTAvatarActionsViewControllerDelegate, AVTAvatarEditorViewControllerDelegate, AVTAvatarDisplayingControllerDelegate, AVTAvatarRecordDataSourceObserver, AVTRecordingCarouselController, AVTDisplayingCarouselController>
 @property  AVTAvatarRecordDataSource *dataSource
 @property  <AVTUILogger> *logger
 @property  AVTUIEnvironment *environment
 @property  <AVTAvatarRecord> *currentAvatarRecord
 @property  UIView *avtViewContainer
 @property  AVTViewSessionProvider *avtViewSessionProvider
 @property  AVTViewSession *avtViewSession
 @property  AVTMultiAvatarController *multiAvatarController
 @property  AVTSingleAvatarController *singleAvatarController
 @property  <AVTAvatarDisplayingController> *avatarDisplayingController
 @property  AVTViewCarouselLayout *avtViewLayout
 @property  long long mode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTRecordingCarouselControllerDelegate> *recordingDelegate
 @property  AVTRecordView *focusedRecordingView
 @property  BOOL isPostponingBeginSession
 @property  <AVTAvatarRecord> *focusedRecord
 @property  double decelerationRate
 @property  BOOL singleAvatarMode
 @property  BOOL allowsCreate
 @property  UIView *view
 @property  <AVTPresenterDelegate> *presenterDelegate
 @property  <AVTDisplayingCarouselControllerDelegate> *displayingDelegate
 @property  AVTView *focusedDisplayView

  // class methods
  +[AVTCarouselController sessionProviderForMode:environment:]
  +[AVTCarouselController displayingCarouselForRecordDataSource:]
  +[AVTCarouselController recordingCarouselForRecordDataSource:]

  // instance methods
  -[AVTCarouselController logger]
  -[AVTCarouselController reloadData]
  -[AVTCarouselController dataSource]
  -[AVTCarouselController setPresenterDelegate:]
  -[AVTCarouselController mode]
  -[AVTCarouselController .cxx_destruct]
  -[AVTCarouselController viewWillAppear:]
  -[AVTCarouselController loadView]
  -[AVTCarouselController setDecelerationRate:]
  -[AVTCarouselController environment]
  -[AVTCarouselController presenterDelegate]
  -[AVTCarouselController decelerationRate]
  -[AVTCarouselController avatarEditorViewController:didFinishWithAvatarRecord:]
  -[AVTCarouselController avatarEditorViewControllerDidCancel:]
  -[AVTCarouselController avtViewSessionProvider]
  -[AVTCarouselController avtViewSession]
  -[AVTCarouselController setAvtViewSession:]
  -[AVTCarouselController avtViewContainer]
  -[AVTCarouselController setAvtViewContainer:]
  -[AVTCarouselController avtViewLayout]
  -[AVTCarouselController setAvtViewLayout:]
  -[AVTCarouselController wrapAndPresentViewController:animated:]
  -[AVTCarouselController avatarActionsViewController:recordUpdateForDeletingRecord:]
  -[AVTCarouselController avatarActionsViewControllerDidFinish:]
  -[AVTCarouselController dataSource:didAddRecord:atIndex:]
  -[AVTCarouselController dataSource:didEditRecord:atIndex:]
  -[AVTCarouselController dataSource:didRemoveRecord:atIndex:]
  -[AVTCarouselController significantRecordChangeInDataSource:]
  -[AVTCarouselController setAllowsCreate:animated:]
  -[AVTCarouselController allowsCreate]
  -[AVTCarouselController setAllowsCreate:]
  -[AVTCarouselController willBeginFocus:]
  -[AVTCarouselController didBeginFocus:]
  -[AVTCarouselController willEndFocus:]
  -[AVTCarouselController didEndFocus:]
  -[AVTCarouselController displayingController:didChangeCurrentRecord:]
  -[AVTCarouselController displayingController:didMoveTowardRecord:withFactor:]
  -[AVTCarouselController displayingControllerWantsToPresentEditorForCreation:]
  -[AVTCarouselController displayAvatarRecordWithIdentifier:animated:]
  -[AVTCarouselController setSingleAvatarMode:fillContainer:animated:]
  -[AVTCarouselController presentEditorForCreatingAvatar:]
  -[AVTCarouselController presentActionsForAvatar:]
  -[AVTCarouselController snapshotProviderFocusedOnRecordWithIdentifier:size:]
  -[AVTCarouselController isPostponingBeginSession]
  -[AVTCarouselController setIsPostponingBeginSession:]
  -[AVTCarouselController focusedRecord]
  -[AVTCarouselController singleAvatarMode]
  -[AVTCarouselController setSingleAvatarMode:]
  -[AVTCarouselController recordingDelegate]
  -[AVTCarouselController setRecordingDelegate:]
  -[AVTCarouselController focusedRecordingView]
  -[AVTCarouselController displayingDelegate]
  -[AVTCarouselController setDisplayingDelegate:]
  -[AVTCarouselController focusedDisplayView]
  -[AVTCarouselController initWithMode:dataSource:]
  -[AVTCarouselController initWithMode:sessionProvider:dataSource:environment:]
  -[AVTCarouselController beginAVTViewSession]
  -[AVTCarouselController setupAVTView:]
  -[AVTCarouselController reloadDataCenteringToAvatarRecord:]
  -[AVTCarouselController displayAvatarRecord:animated:]
  -[AVTCarouselController showMultiAvatarControllerAnimated:]
  -[AVTCarouselController showSingleAvatarControllerAnimated:]
  -[AVTCarouselController notifyDelegateDidFocusRecord:avtView:]
  -[AVTCarouselController notifyDelegateWillEndFocusOnRecord:avtView:]
  -[AVTCarouselController notifyDelegateNearnessFactorDidChange:towardRecord:]
  -[AVTCarouselController notifyDelegateDidUpdateWithRecord:]
  -[AVTCarouselController currentAvatarRecord]
  -[AVTCarouselController setCurrentAvatarRecord:]
  -[AVTCarouselController multiAvatarController]
  -[AVTCarouselController setMultiAvatarController:]
  -[AVTCarouselController singleAvatarController]
  -[AVTCarouselController setSingleAvatarController:]
  -[AVTCarouselController avatarDisplayingController]
  -[AVTCarouselController setAvatarDisplayingController:]


AVTAvatarEditorColorsState : NSObject
 @property  NSMutableDictionary *colorStorage
 @property  AVTAvatarColorVariationStore *variationStore

  // instance methods
  -[AVTAvatarEditorColorsState .cxx_destruct]
  -[AVTAvatarEditorColorsState variationStore]
  -[AVTAvatarEditorColorsState initWithVariationStore:]
  -[AVTAvatarEditorColorsState selectedColorForCategory:destinationIndex:]
  -[AVTAvatarEditorColorsState selectedColorPresetForCategory:destinationIndex:]
  -[AVTAvatarEditorColorsState setSelectedColorPreset:forCoreModelColor:]
  -[AVTAvatarEditorColorsState storageForCategory:]
  -[AVTAvatarEditorColorsState colorStorage]
  -[AVTAvatarEditorColorsState setColorStorage:]


AVTEngagementListCollectionViewLayout : UICollectionViewLayout <AVTCollectionViewLayout>
 @property  NSValue *targetContentOffset
 @property  NSValue *ignoredProposedContentOffset
 @property  AVTEngagementLayout *engagementLayout

  // instance methods
  -[AVTEngagementListCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[AVTEngagementListCollectionViewLayout collectionViewContentSize]
  -[AVTEngagementListCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[AVTEngagementListCollectionViewLayout layoutAttributesForElementsInRect:]
  -[AVTEngagementListCollectionViewLayout invalidateLayout]
  -[AVTEngagementListCollectionViewLayout setTargetContentOffset:]
  -[AVTEngagementListCollectionViewLayout .cxx_destruct]
  -[AVTEngagementListCollectionViewLayout targetContentOffset]
  -[AVTEngagementListCollectionViewLayout targetContentOffsetForProposedContentOffset:]
  -[AVTEngagementListCollectionViewLayout flipsHorizontallyInOppositeLayoutDirection]
  -[AVTEngagementListCollectionViewLayout frameForElementAtIndex:visibleBounds:]
  -[AVTEngagementListCollectionViewLayout indexesForElementsInRect:visibleBounds:numberOfItems:]
  -[AVTEngagementListCollectionViewLayout centerForCenteringElementAtIndex:visibleBoundsSize:proposedOrigin:]
  -[AVTEngagementListCollectionViewLayout contentSizeForVisibleBounds:numberOfItems:]
  -[AVTEngagementListCollectionViewLayout engagementInsetsForCollectionViewBounds:]
  -[AVTEngagementListCollectionViewLayout initWithEngagementLayout:]
  -[AVTEngagementListCollectionViewLayout setTargetContentOffsetForAnimations:]
  -[AVTEngagementListCollectionViewLayout clearTargetContentOffsetForAnimations]
  -[AVTEngagementListCollectionViewLayout engagementLayout]
  -[AVTEngagementListCollectionViewLayout ignoredProposedContentOffset]
  -[AVTEngagementListCollectionViewLayout setIgnoredProposedContentOffset:]


AVTToolbarButton : UIButton
 @property  NSString *title
 @property  BOOL isDefault

  // instance methods
  -[AVTToolbarButton isDefault]
  -[AVTToolbarButton .cxx_destruct]
  -[AVTToolbarButton title]
  -[AVTToolbarButton initWithTitle:isDefault:]


AVTToolBar : UIView
 @property  NSArray *buttons
 @property  UIView *border
 @property  UIVisualEffectView *visualEffectView
 @property  <AVTToolBarDelegate> *delegate
 @property  BOOL isAnimating

  // class methods
  +[AVTToolBar defaultToolBarHeight]

  // instance methods
  -[AVTToolBar setIsAnimating:]
  -[AVTToolBar visualEffectView]
  -[AVTToolBar borderWidth]
  -[AVTToolBar setDelegate:]
  -[AVTToolBar delegate]
  -[AVTToolBar isAnimating]
  -[AVTToolBar .cxx_destruct]
  -[AVTToolBar layoutSubviews]
  -[AVTToolBar border]
  -[AVTToolBar buttons]
  -[AVTToolBar setButtons:]
  -[AVTToolBar setBorder:]
  -[AVTToolBar setVisualEffectView:]
  -[AVTToolBar buttonPressed:]
  -[AVTToolBar setupView]
  -[AVTToolBar setupBorder]
  -[AVTToolBar initWithButtons:]
  -[AVTToolBar buttonWithTitle:isDefault:]
  -[AVTToolBar setEnabled:forButtonAtIndex:]


AVTGroupDialMaskingView : UIView
 @property  CAGradientLayer *maskLayer

  // instance methods
  -[AVTGroupDialMaskingView .cxx_destruct]
  -[AVTGroupDialMaskingView layoutSubviews]
  -[AVTGroupDialMaskingView initWithFrame:]
  -[AVTGroupDialMaskingView maskLayer]
  -[AVTGroupDialMaskingView setMaskLayer:]


AVTTwoLevelsImageCache : NSObject <AVTImageCache>
 @property  <AVTImageCache> *firstLevelCache
 @property  <AVTImageCache> *secondLevelCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTTwoLevelsImageCache .cxx_destruct]
  -[AVTTwoLevelsImageCache resourceForItem:scope:]
  -[AVTTwoLevelsImageCache resourceForItem:scope:cacheMissHandler:]
  -[AVTTwoLevelsImageCache resourceExistsInCacheForItem:scope:]
  -[AVTTwoLevelsImageCache imageForItem:scope:]
  -[AVTTwoLevelsImageCache imageForItem:scope:cacheMissHandler:]
  -[AVTTwoLevelsImageCache initWithFirstLevelCache:secondLevelCache:environment:]
  -[AVTTwoLevelsImageCache firstLevelCache]
  -[AVTTwoLevelsImageCache secondLevelCache]


AVTUIStickerPlaceholderProviderFactory : NSObject
 @property  NSMutableArray *queuedHandlers
 @property  @? imageProvider

  // instance methods
  -[AVTUIStickerPlaceholderProviderFactory .cxx_destruct]
  -[AVTUIStickerPlaceholderProviderFactory imageProvider]
  -[AVTUIStickerPlaceholderProviderFactory placeholderProvider]
  -[AVTUIStickerPlaceholderProviderFactory initWithImageProvider:]
  -[AVTUIStickerPlaceholderProviderFactory queuedHandlers]
  -[AVTUIStickerPlaceholderProviderFactory setQueuedHandlers:]


AVTAvatarActionsViewController : UIViewController <AVTAvatarActionsControllerDelegate, UINavigationControllerDelegate, AVTToolBarDelegate, AVTFaceTrackingManagerDelegate, AVTUIControllerPresentationDelegate>
 @property  UIStackView *buttonsView
 @property  AVTImageTransitioningContainerView *avatarContainer
 @property  AVTToolBar *toolbar
 @property  AVTAvatarInlineActionsController *actionsController
 @property  AVTViewSessionProvider *sessionProvider
 @property  AVTViewSession *avtViewSession
 @property  <AVTAvatarActionsViewControllerLayout> *currentLayout
 @property  @? postSessionDidBecomeActiveHandler
 @property  UIImageView *transitionImageView
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  BOOL isAnimating
 @property  BOOL allowFacetracking
 @property  AVTUIEnvironment *environment
 @property  AVTAvatarEditorViewController *editorViewController
 @property  <AVTAvatarActionsViewControllerDelegate> *delegate
 @property  BOOL shouldHideUserInfoView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTAvatarActionsViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[AVTAvatarActionsViewController setIsAnimating:]
  -[AVTAvatarActionsViewController currentLayout]
  -[AVTAvatarActionsViewController setDelegate:]
  -[AVTAvatarActionsViewController contentSizeCategoryDidChange:]
  -[AVTAvatarActionsViewController delegate]
  -[AVTAvatarActionsViewController isAnimating]
  -[AVTAvatarActionsViewController setCurrentLayout:]
  -[AVTAvatarActionsViewController toolbar]
  -[AVTAvatarActionsViewController .cxx_destruct]
  -[AVTAvatarActionsViewController viewDidLoad]
  -[AVTAvatarActionsViewController viewWillAppear:]
  -[AVTAvatarActionsViewController loadView]
  -[AVTAvatarActionsViewController viewDidLayoutSubviews]
  -[AVTAvatarActionsViewController sessionProvider]
  -[AVTAvatarActionsViewController viewWillDisappear:]
  -[AVTAvatarActionsViewController tapGestureRecognizer]
  -[AVTAvatarActionsViewController navigationController:animationControllerForOperation:fromViewController:toViewController:]
  -[AVTAvatarActionsViewController setTapGestureRecognizer:]
  -[AVTAvatarActionsViewController environment]
  -[AVTAvatarActionsViewController setToolbar:]
  -[AVTAvatarActionsViewController additionalSafeAreaInsets]
  -[AVTAvatarActionsViewController actionsController]
  -[AVTAvatarActionsViewController setActionsController:]
  -[AVTAvatarActionsViewController configureNavigationItems]
  -[AVTAvatarActionsViewController applyLayout:]
  -[AVTAvatarActionsViewController duplicateScaleDuration]
  -[AVTAvatarActionsViewController duplicateScaleDelay]
  -[AVTAvatarActionsViewController deleteMoveInDuration]
  -[AVTAvatarActionsViewController deleteMoveInDelay]
  -[AVTAvatarActionsViewController buttonsView]
  -[AVTAvatarActionsViewController setButtonsView:]
  -[AVTAvatarActionsViewController didTapAvatarView:]
  -[AVTAvatarActionsViewController didTapDone:]
  -[AVTAvatarActionsViewController avatarContainer]
  -[AVTAvatarActionsViewController setAvatarContainer:]
  -[AVTAvatarActionsViewController interfaceOrientationForFaceTrackingManager:]
  -[AVTAvatarActionsViewController controllerPresentationWillObstructView:]
  -[AVTAvatarActionsViewController beginAVTViewSessionWithDidBeginBlock:]
  -[AVTAvatarActionsViewController beginUsingAVTViewFromSession:]
  -[AVTAvatarActionsViewController configureAVTViewSession:withAvatarRecord:completionBlock:]
  -[AVTAvatarActionsViewController configureUserInfoLabel]
  -[AVTAvatarActionsViewController shouldHideUserInfoView]
  -[AVTAvatarActionsViewController setShouldHideUserInfoView:]
  -[AVTAvatarActionsViewController avtViewSession]
  -[AVTAvatarActionsViewController setAvtViewSession:]
  -[AVTAvatarActionsViewController postSessionDidBecomeActiveHandler]
  -[AVTAvatarActionsViewController setPostSessionDidBecomeActiveHandler:]
  -[AVTAvatarActionsViewController allowFacetracking]
  -[AVTAvatarActionsViewController setAllowFacetracking:]
  -[AVTAvatarActionsViewController performEdit]
  -[AVTAvatarActionsViewController editorViewController]
  -[AVTAvatarActionsViewController setEditorViewController:]
  -[AVTAvatarActionsViewController toolbar:didSelectButton:atIndex:]
  -[AVTAvatarActionsViewController prepareForAnimatedTransitionWithLayout:completionBlock:]
  -[AVTAvatarActionsViewController transitionImageView]
  -[AVTAvatarActionsViewController setTransitionImageView:]
  -[AVTAvatarActionsViewController presentEditorViewController:forActionsController:isCreate:]
  -[AVTAvatarActionsViewController dismissEditorViewController:forActionsController:wasCreate:didEdit:animated:completion:]
  -[AVTAvatarActionsViewController actionsController:didAddRecord:]
  -[AVTAvatarActionsViewController actionsController:didEditRecord:]
  -[AVTAvatarActionsViewController actionsController:didCancelEditingRecord:]
  -[AVTAvatarActionsViewController actionsController:didDuplicateToRecord:completionBlock:]
  -[AVTAvatarActionsViewController actionsController:didDeleteRecord:withRecordUpdate:completionBlock:]
  -[AVTAvatarActionsViewController actionsController:presentAlertController:]
  -[AVTAvatarActionsViewController actionsControllerDidUpdateActions:]
  -[AVTAvatarActionsViewController actionsControllerDidFinish:]
  -[AVTAvatarActionsViewController initWithAVTViewSessionProvider:actionsController:environment:]
  -[AVTAvatarActionsViewController layoutViewForActionsController]
  -[AVTAvatarActionsViewController rebuildLayout]
  -[AVTAvatarActionsViewController createTransitionImageViewIfNeeded]
  -[AVTAvatarActionsViewController actionsModel:recordUpdateForDeletingRecord:]
  -[AVTAvatarActionsViewController performTransitionAfterDuplicateToRecord:previousRecordImage:completionBlock:]
  -[AVTAvatarActionsViewController performTransitionAfterDeleteToRecord:fromLeft:previousRecordImage:completionBlock:]


AVTUIFontRepository : NSObject
  // class methods
  +[AVTUIFontRepository appropriateContentSizeCategoryForCategory:minCategory:maxCategory:]
  +[AVTUIFontRepository splashTitleFont]
  +[AVTUIFontRepository splashSubTitleFont]
  +[AVTUIFontRepository splashContinueButtonFont]
  +[AVTUIFontRepository attributeTitleFont]
  +[AVTUIFontRepository attributeTitleButtonFont]
  +[AVTUIFontRepository templateTitleLabelFont]
  +[AVTUIFontRepository templateInstructionLabelFont]
  +[AVTUIFontRepository avatarActionButtonTitleFont]
  +[AVTUIFontRepository userInfoLabelFont]
  +[AVTUIFontRepository groupDialLabelFont]
  +[AVTUIFontRepository groupListLabelFont]
  +[AVTUIFontRepository groupDialBoldLabelFont]
  +[AVTUIFontRepository multicolorPickerLabelFont]
  +[AVTUIFontRepository attributeViewLabelFont]
  +[AVTUIFontRepository funCamItemTitleFont]
  +[AVTUIFontRepository keyboardRecentsSplashTitleFont]
  +[AVTUIFontRepository keyboardRecentsSplashSubtitleFont]
  +[AVTUIFontRepository keyboardRecentsSplashContinueButtonFont]


AVTImmediateTaskScheduler : NSObject <AVTTaskScheduler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTImmediateTaskScheduler cancelTask:]
  -[AVTImmediateTaskScheduler scheduleTask:]
  -[AVTImmediateTaskScheduler cancelAllTasks]
  -[AVTImmediateTaskScheduler lowerTaskPriority:]


AVTAvatarUpdaterFactory : NSObject
  // class methods
  +[AVTAvatarUpdaterFactory updaterForPreset:pairedPreset:]
  +[AVTAvatarUpdaterFactory updaterForColor:colorsState:pairedColors:additionalColor:]
  +[AVTAvatarUpdaterFactory updaterForColor:colorsState:pairedColors:additionalColor:saveToColorsState:]
  +[AVTAvatarUpdaterFactory updaterForColor:variationOverride:colorsState:pairedColors:additionalColor:saveToColorsState:]
  +[AVTAvatarUpdaterFactory updaterForPairingCategory:colorsState:]
  +[AVTAvatarUpdaterFactory updaterForClearingColorsForCategory:destination:]
  +[AVTAvatarUpdaterFactory updaterForAggregatingUpdaters:]


AVTCoreModelPairing : NSObject
 @property  long long pairedCategory
 @property  NSString *localizedPairedTitle
 @property  NSString *localizedPairTitle
 @property  NSString *localizedUnpairTitle
 @property  NSString *localizedPairedDescription
 @property  NSString *localizedUnpairedDescription

  // instance methods
  -[AVTCoreModelPairing .cxx_destruct]
  -[AVTCoreModelPairing initWithPairedCategory:pairedTitle:pairTitle:unpairTitle:pairedDescription:unpairedDescription:]
  -[AVTCoreModelPairing pairedCategory]
  -[AVTCoreModelPairing localizedPairedTitle]
  -[AVTCoreModelPairing localizedPairTitle]
  -[AVTCoreModelPairing localizedUnpairTitle]
  -[AVTCoreModelPairing localizedPairedDescription]
  -[AVTCoreModelPairing localizedUnpairedDescription]


AVTFunCamAvatarPickerCollectionViewCell : UICollectionViewCell
 @property  AVTUIAnimatingImageView *imageView
 @property  UIButton *accessoryButton
 @property  CAShapeLayer *selectionLayer
 @property  NSUUID *displaySessionUUID
 @property  @? imageInsetProvider
 @property  long long imageContentMode
 @property  BOOL selectionVisible
 @property  BOOL roundImageCorners
 @property  BOOL showsTitle
 @property  {CGSize=dd} engagedSize

  // class methods
  +[AVTFunCamAvatarPickerCollectionViewCell cellIdentifier]
  +[AVTFunCamAvatarPickerCollectionViewCell selectionPathInBounds:]

  // instance methods
  -[AVTFunCamAvatarPickerCollectionViewCell setSelected:]
  -[AVTFunCamAvatarPickerCollectionViewCell .cxx_destruct]
  -[AVTFunCamAvatarPickerCollectionViewCell prepareForReuse]
  -[AVTFunCamAvatarPickerCollectionViewCell layoutSubviews]
  -[AVTFunCamAvatarPickerCollectionViewCell initWithFrame:]
  -[AVTFunCamAvatarPickerCollectionViewCell setImageContentMode:]
  -[AVTFunCamAvatarPickerCollectionViewCell imageContentMode]
  -[AVTFunCamAvatarPickerCollectionViewCell imageView]
  -[AVTFunCamAvatarPickerCollectionViewCell accessoryButton]
  -[AVTFunCamAvatarPickerCollectionViewCell setAccessoryButton:]
  -[AVTFunCamAvatarPickerCollectionViewCell displaySessionUUID]
  -[AVTFunCamAvatarPickerCollectionViewCell setDisplaySessionUUID:]
  -[AVTFunCamAvatarPickerCollectionViewCell selectionLayer]
  -[AVTFunCamAvatarPickerCollectionViewCell setShowsTitle:]
  -[AVTFunCamAvatarPickerCollectionViewCell showsTitle]
  -[AVTFunCamAvatarPickerCollectionViewCell updateWithImage:animated:]
  -[AVTFunCamAvatarPickerCollectionViewCell updateWithTintColor:]
  -[AVTFunCamAvatarPickerCollectionViewCell setSelectionVisible:]
  -[AVTFunCamAvatarPickerCollectionViewCell setImageInsetProvider:]
  -[AVTFunCamAvatarPickerCollectionViewCell setImageZoomFactor:]
  -[AVTFunCamAvatarPickerCollectionViewCell setRoundImageCorners:]
  -[AVTFunCamAvatarPickerCollectionViewCell updateSelectionLayer]
  -[AVTFunCamAvatarPickerCollectionViewCell imageInsetProvider]
  -[AVTFunCamAvatarPickerCollectionViewCell selectionVisible]
  -[AVTFunCamAvatarPickerCollectionViewCell roundImageCorners]
  -[AVTFunCamAvatarPickerCollectionViewCell engagedSize]
  -[AVTFunCamAvatarPickerCollectionViewCell setEngagedSize:]


AVTCoreAnalyticsClient : NSObject <AVTCoreAnalyticsClient>
  // instance methods
  -[AVTCoreAnalyticsClient sendEventForKey:payload:]
  -[AVTCoreAnalyticsClient ADClientSetValueForScalarKey::]
  -[AVTCoreAnalyticsClient ADClientAddValueForScalarKey::]
  -[AVTCoreAnalyticsClient ADClientPushValueForDistributionKey::]


AVTTransition : NSObject <AVTTransition>
 @property  <AVTUILogger> *logger
 @property  long long state
 @property  BOOL animated
 @property  <AVTTransitionModel> *model
 @property  @? setupHandler
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTTransition logger]
  -[AVTTransition animated]
  -[AVTTransition model]
  -[AVTTransition state]
  -[AVTTransition .cxx_destruct]
  -[AVTTransition setAnimated:]
  -[AVTTransition start]
  -[AVTTransition setCompletionHandler:]
  -[AVTTransition completionHandler]
  -[AVTTransition cancel]
  -[AVTTransition setState:]
  -[AVTTransition performTransition]
  -[AVTTransition initWithModel:animated:setupHandler:completionHandler:logger:]
  -[AVTTransition setupHandler]
  -[AVTTransition setSetupHandler:]
  -[AVTTransition performCancellation]


AVTSynchronousTransitionScheduler : NSObject <AVTTransitionScheduler>
 @property  BOOL isRunningEvent
 @property  @? eventHandler

  // instance methods
  -[AVTSynchronousTransitionScheduler eventHandler]
  -[AVTSynchronousTransitionScheduler .cxx_destruct]
  -[AVTSynchronousTransitionScheduler stop]
  -[AVTSynchronousTransitionScheduler initWithEventHandler:]
  -[AVTSynchronousTransitionScheduler scheduleEvent]
  -[AVTSynchronousTransitionScheduler didCompleteEvent]
  -[AVTSynchronousTransitionScheduler isRunningEvent]
  -[AVTSynchronousTransitionScheduler setIsRunningEvent:]


AVTAvatarAttributeEditorMulticolorSectionProvider : NSObject <AVTAvatarAttributeEditorSectionProvider>
 @property  NSString *identifier
 @property  NSString *localizedName
 @property  AVTAvatarAttributeEditorMulticolorPickerSection *pickerSection
 @property  NSArray *pickerItems
 @property  NSArray *subpickers
 @property  NSDictionary *nestedPresetPickers
 @property  AVTAvatarAttributeEditorSectionSupplementalPicker *supplementalPicker
 @property  AVTAvatarAttributeEditorState *editorState
 @property  NSArray *subsections
 @property  BOOL allowsRemoval
 @property  NSArray *subpickerRemovalUpdaters
 @property  NSArray *sections

  // instance methods
  -[AVTAvatarAttributeEditorMulticolorSectionProvider setLocalizedName:]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider identifier]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider .cxx_destruct]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider localizedName]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider setIdentifier:]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider sections]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider subsections]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider pickerItems]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider setPickerItems:]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider supplementalPicker]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider setSupplementalPicker:]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider editorState]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider subpickers]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider nestedPresetPickers]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider allowsRemoval]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider initWithLocalizedName:subpickers:nestedPresetPickers:supplementalPicker:pickerItems:editorState:]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider initWithIdentifier:localizedName:subpickers:nestedPresetPickers:supplementalPicker:pickerItems:editorState:]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider initWithIdentifier:localizedName:subpickers:subpickerRemovalUpdaters:nestedPresetPickers:supplementalPicker:pickerItems:editorState:]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider createPickerSectionIfNeeded]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider subpickerSectionIdentifiers]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider setNestedPresetPickers:]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider subpickerRemovalUpdaters]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider pickerSection]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider setPickerSection:]
  -[AVTAvatarAttributeEditorMulticolorSectionProvider setSubpickers:]


AVTDifferentialPrivacyRecorder : NSObject <AVTDifferentialPrivacyRecorder>
 @property  @? stringRecorderProvider
 @property  @? numRecorderProvider
 @property  NSMutableDictionary *stringRecorders
 @property  NSMutableDictionary *numRecorders

  // class methods
  +[AVTDifferentialPrivacyRecorder makeCachingStringRecorderProvider:]
  +[AVTDifferentialPrivacyRecorder makeCachingNumRecorderProvider:]

  // instance methods
  -[AVTDifferentialPrivacyRecorder .cxx_destruct]
  -[AVTDifferentialPrivacyRecorder numRecorders]
  -[AVTDifferentialPrivacyRecorder init]
  -[AVTDifferentialPrivacyRecorder recordNumber:forKey:]
  -[AVTDifferentialPrivacyRecorder recordString:forKey:]
  -[AVTDifferentialPrivacyRecorder initWithStringRecorderProvider:numericDataRecorderProvider:]
  -[AVTDifferentialPrivacyRecorder stringRecorderProvider]
  -[AVTDifferentialPrivacyRecorder numRecorderProvider]
  -[AVTDifferentialPrivacyRecorder stringRecorders]


AVTFunCamAvatarPickerCollectionViewLayout : AVTEngagementListCollectionViewLayout
  // instance methods
  -[AVTFunCamAvatarPickerCollectionViewLayout engagementInsetsForCollectionViewBounds:]


AVTPaddlePathGenerator : NSObject
  // class methods
  +[AVTPaddlePathGenerator concentricCornerPathWithBaseRect:radius:topToBottom:rightToLeft:]
  +[AVTPaddlePathGenerator paddlePathWithBaseRect:contentRect:radius:topToBottom:rightToLeft:]


AVTHEICImageIOImageEncoder : AVTImageIOImageEncoder
  // class methods
  +[AVTHEICImageIOImageEncoder typeIdentifier]

  // instance methods
  -[AVTHEICImageIOImageEncoder fileExtension]


AVTStickerTaskScheduler : NSObject <AVTStickerTaskScheduler>
 @property  NSObject<OS_dispatch_queue> *stateLock
 @property  NSMutableDictionary *stickerPickerTasks
 @property  NSMutableDictionary *stickerPickerBacklogTasks
 @property  NSMutableDictionary *stickerSheetPlaceholderTasks
 @property  NSMutableDictionary *stickerSheetsTasks
 @property  <AVTAvatarRecordDataSource> *recordDataSource
 @property  NSArray *allAvatarRecordIdentifiers
 @property  NSString *selectedAvatarRecordIdentifier
 @property  NSArray *sortedVisibleIndexPaths
 @property  <AVTUILogger> *logger
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTStickerTaskScheduler schedulerWithRecordDataSource:]

  // instance methods
  -[AVTStickerTaskScheduler logger]
  -[AVTStickerTaskScheduler cancelTask:]
  -[AVTStickerTaskScheduler reloadData]
  -[AVTStickerTaskScheduler .cxx_destruct]
  -[AVTStickerTaskScheduler stateLock]
  -[AVTStickerTaskScheduler scheduleTask:]
  -[AVTStickerTaskScheduler cancelAllTasks]
  -[AVTStickerTaskScheduler sortedVisibleIndexPaths]
  -[AVTStickerTaskScheduler lowerTaskPriority:]
  -[AVTStickerTaskScheduler performStateWork:]
  -[AVTStickerTaskScheduler recordDataSource]
  -[AVTStickerTaskScheduler startTask:]
  -[AVTStickerTaskScheduler didCompleteTask:]
  -[AVTStickerTaskScheduler scheduleStickerTask:]
  -[AVTStickerTaskScheduler lowerStickerPickerTaskPriority:avatarRecordIdentifier:]
  -[AVTStickerTaskScheduler cancelPickerTask:avatarRecordIdentifier:]
  -[AVTStickerTaskScheduler cancelStickerSheetTasksForAvatarRecordIdentifier:]
  -[AVTStickerTaskScheduler setSelectedAvatarRecordIdentifier:]
  -[AVTStickerTaskScheduler setVisibleIndexPaths:]
  -[AVTStickerTaskScheduler initWithEnvironment:recordDataSource:]
  -[AVTStickerTaskScheduler nextTaskToRunFromStickerPickerTasks:stickerPickerBacklogStorage:stickerSheetPlaceholderTasks:stickerSheetsTasks:]
  -[AVTStickerTaskScheduler nextPickerThumbnailFromTasksStorage:allAvatarRecordIdentifiers:]
  -[AVTStickerTaskScheduler nextPickerThumbnailFromTasksBacklogStorage:allAvatarRecordIdentifiers:]
  -[AVTStickerTaskScheduler selectedPickerThumbnailFromTasksStorage:selectedAvatarRecordIdentifier:]
  -[AVTStickerTaskScheduler selectedSheetPlaceholderFromTasksStorage:selectedAvatarRecordIdentifier:]
  -[AVTStickerTaskScheduler nextVisibleSelectedSheetStickerFromTasksStorage:selectedAvatarRecordIdentifier:visibleIndexPaths:]
  -[AVTStickerTaskScheduler nextSelectedSheetStickerFromTasksStorage:selectedAvatarRecordIdentifier:]
  -[AVTStickerTaskScheduler nextSheetPlaceHolderFromTasksStorage:allAvatarRecordIdentifiers:]
  -[AVTStickerTaskScheduler nextSheetStickerFromTasksStorage:allAvatarRecordIdentifiers:]
  -[AVTStickerTaskScheduler stickerPickerTasks]
  -[AVTStickerTaskScheduler stickerPickerBacklogTasks]
  -[AVTStickerTaskScheduler stickerSheetPlaceholderTasks]
  -[AVTStickerTaskScheduler stickerSheetsTasks]
  -[AVTStickerTaskScheduler allAvatarRecordIdentifiers]
  -[AVTStickerTaskScheduler setAllAvatarRecordIdentifiers:]
  -[AVTStickerTaskScheduler selectedAvatarRecordIdentifier]
  -[AVTStickerTaskScheduler setSortedVisibleIndexPaths:]


AVTAvatarColorVariationStore : NSObject
 @property  NSMutableDictionary *colorPresets

  // instance methods
  -[AVTAvatarColorVariationStore resetValues]
  -[AVTAvatarColorVariationStore .cxx_destruct]
  -[AVTAvatarColorVariationStore init]
  -[AVTAvatarColorVariationStore colorPresets]
  -[AVTAvatarColorVariationStore colorVariationFromColor:]
  -[AVTAvatarColorVariationStore colorPresetFromColor:]
  -[AVTAvatarColorVariationStore saveColorPreset:forColor:]
  -[AVTAvatarColorVariationStore keyForColor:]


AVTFunCamAvatarPickerStyle : NSObject
 @property  {CGSize=dd} cellSize
 @property  {CGSize=dd} engagedCellSize
 @property  double interitemSpacing
 @property  {UIEdgeInsets=dddd} gridEdgeInsets

  // class methods
  +[AVTFunCamAvatarPickerStyle insetProviderForConstant:]
  +[AVTFunCamAvatarPickerStyle defaultLayoutStyle]

  // instance methods
  -[AVTFunCamAvatarPickerStyle setInteritemSpacing:]
  -[AVTFunCamAvatarPickerStyle interitemSpacing]
  -[AVTFunCamAvatarPickerStyle cellSize]
  -[AVTFunCamAvatarPickerStyle setCellSize:]
  -[AVTFunCamAvatarPickerStyle edgeLengthFittingWidth:environment:]
  -[AVTFunCamAvatarPickerStyle initWithCellSize:engagedCellSize:interitemSpacing:gridEdgeInsets:]
  -[AVTFunCamAvatarPickerStyle imageItemInsetsForList]
  -[AVTFunCamAvatarPickerStyle imageItemInsetsForGrid]
  -[AVTFunCamAvatarPickerStyle engagedCellSize]
  -[AVTFunCamAvatarPickerStyle setEngagedCellSize:]
  -[AVTFunCamAvatarPickerStyle gridEdgeInsets]
  -[AVTFunCamAvatarPickerStyle setGridEdgeInsets:]


AVTAvatarRecordCacheableResource : NSObject <AVTCacheableResource>
 @property  AVTUIEnvironment *environment
 @property  BOOL includeAvatarData
 @property  <AVTAvatarRecord> *record
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarRecordCacheableResource persistentIdentifierPrefixForRecordWithIdentifier:]
  +[AVTAvatarRecordCacheableResource persistentIdentifierForRecordData:]

  // instance methods
  -[AVTAvatarRecordCacheableResource record]
  -[AVTAvatarRecordCacheableResource .cxx_destruct]
  -[AVTAvatarRecordCacheableResource environment]
  -[AVTAvatarRecordCacheableResource requiresEncryption]
  -[AVTAvatarRecordCacheableResource tokenForObservingChangesWithHandler:]
  -[AVTAvatarRecordCacheableResource volatileIdentifierForScope:]
  -[AVTAvatarRecordCacheableResource persistentIdentifierForScope:]
  -[AVTAvatarRecordCacheableResource costForScope:]
  -[AVTAvatarRecordCacheableResource persistentDataHashForScope:]
  -[AVTAvatarRecordCacheableResource initWithAvatarRecord:includeAvatarData:environment:]
  -[AVTAvatarRecordCacheableResource identifierForScope:]
  -[AVTAvatarRecordCacheableResource includeAvatarData]


AVTAvatarRecordCacheableResourceChangeToken : NSObject <AVTCacheableResourceChangeToken>
 @property  NSString *recordID
 @property  @? changeHandler
 @property  NSNotificationCenter *notificationCenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTAvatarRecordCacheableResourceChangeToken handleNotification:]
  -[AVTAvatarRecordCacheableResourceChangeToken notificationCenter]
  -[AVTAvatarRecordCacheableResourceChangeToken recordID]
  -[AVTAvatarRecordCacheableResourceChangeToken changeHandler]
  -[AVTAvatarRecordCacheableResourceChangeToken .cxx_destruct]
  -[AVTAvatarRecordCacheableResourceChangeToken startObservingChanges]
  -[AVTAvatarRecordCacheableResourceChangeToken stopObservingChanges]
  -[AVTAvatarRecordCacheableResourceChangeToken initWithEnvironment:recordIdentifier:changeHandler:]


_AVTAvatarRecordImageProvider : NSObject
 @property  <AVTImageCache> *peristentCache
 @property  <AVTImageCache> *volatileCache
 @property  <AVTUILogger> *logger
 @property  AVTUIEnvironment *environment
 @property  AVTAvatarConfigurationImageRenderer *configurationRenderer
 @property  AVTAvatarImageRenderer *avatarRenderer
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  <AVTTaskScheduler> *renderingScheduler
 @property  BOOL allowPreFlight

  // class methods
  +[_AVTAvatarRecordImageProvider makePersistentImageCache:volatileImageCache:withEnvironment:]

  // instance methods
  -[_AVTAvatarRecordImageProvider logger]
  -[_AVTAvatarRecordImageProvider initWithEnvironment:]
  -[_AVTAvatarRecordImageProvider workQueue]
  -[_AVTAvatarRecordImageProvider callbackQueue]
  -[_AVTAvatarRecordImageProvider .cxx_destruct]
  -[_AVTAvatarRecordImageProvider environment]
  -[_AVTAvatarRecordImageProvider avatarRenderer]
  -[_AVTAvatarRecordImageProvider renderingScheduler]
  -[_AVTAvatarRecordImageProvider initWithEnvironment:taskScheduler:]
  -[_AVTAvatarRecordImageProvider initWithPersistentCache:volatileCache:allowPreFlight:taskScheduler:environment:]
  -[_AVTAvatarRecordImageProvider initWithPersistentCache:volatileCache:renderingQueue:callbackQueue:configurationRenderer:avatarRenderer:taskScheduler:allowPreFlight:environment:]
  -[_AVTAvatarRecordImageProvider providerForRecord:scope:]
  -[_AVTAvatarRecordImageProvider providerForRecord:scope:usingService:]
  -[_AVTAvatarRecordImageProvider providerForAvatar:forRecord:scope:usingCache:]
  -[_AVTAvatarRecordImageProvider _providerForRecord:scope:]
  -[_AVTAvatarRecordImageProvider _providerForAvatar:forRecord:scope:usingCache:]
  -[_AVTAvatarRecordImageProvider _providerForAvatar:forRecord:scope:usingCache:usingService:]
  -[_AVTAvatarRecordImageProvider peristentCache]
  -[_AVTAvatarRecordImageProvider volatileCache]
  -[_AVTAvatarRecordImageProvider configurationRenderer]
  -[_AVTAvatarRecordImageProvider allowPreFlight]


AVTAvatarAttributeEditorMulticolorPickerSectionItem : NSObject <AVTAvatarAttributeEditorSectionItem, AVTAvatarUpdating, AVTAvatarEditorStateUpdating>
 @property  BOOL isPlaceholder
 @property  BOOL isRemovable
 @property  @? removalUpdater
 @property  AVTAvatarAttributeEditorSectionColorItem *colorItem
 @property  AVTAvatarColorVariationStore *variationStore
 @property  NSString *identifier
 @property  NSString *localizedName
 @property  BOOL selected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? avatarUpdater
 @property  @? editorStateUpdater

  // instance methods
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem identifier]
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem isPlaceholder]
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem setSelected:]
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem .cxx_destruct]
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem localizedName]
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem isSelected]
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem isRemovable]
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem colorItem]
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem variationStore]
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem avatarUpdater]
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem editorStateUpdater]
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem initWithIdentifier:localizedName:isPlaceholder:isRemovable:colorItem:variationStore:avatarUpdater:editorStateUpdater:removalUpdater:]
  -[AVTAvatarAttributeEditorMulticolorPickerSectionItem removalUpdater]


AVTCoreModelPickerOptions : NSObject
 @property  NSString *framingMode
 @property  BOOL separator
 @property  NSArray *presetOverrides
 @property  AVTCoreModelFramingModeOverrides *framingModeOverrides
 @property  AVTAvatarPose *poseOverride
 @property  AVTCoreModelPickerDisplayCondition *displayCondition
 @property  unsigned long displayMode
 @property  unsigned long sortingOption
 @property  AVTStickerConfiguration *stickerConfiguration
 @property  BOOL showsLabel

  // class methods
  +[AVTCoreModelPickerOptions displayModeFromString:]
  +[AVTCoreModelPickerOptions sortingOptionFromString:]

  // instance methods
  -[AVTCoreModelPickerOptions displayMode]
  -[AVTCoreModelPickerOptions .cxx_destruct]
  -[AVTCoreModelPickerOptions separator]
  -[AVTCoreModelPickerOptions showsLabel]
  -[AVTCoreModelPickerOptions framingMode]
  -[AVTCoreModelPickerOptions initWithFramingMode:separatorFlag:presetOverrides:poseOverride:framingModeOverrides:displayMode:displayCondition:sortingOption:stickerConfiguration:showsLabel:]
  -[AVTCoreModelPickerOptions presetOverrides]
  -[AVTCoreModelPickerOptions framingModeOverrides]
  -[AVTCoreModelPickerOptions poseOverride]
  -[AVTCoreModelPickerOptions displayCondition]
  -[AVTCoreModelPickerOptions sortingOption]
  -[AVTCoreModelPickerOptions stickerConfiguration]


AVTColorWheelView : AVTAttributeValueView
 @property  UIView *containerView
 @property  NSArray *circleViews

  // class methods
  +[AVTColorWheelView buildCircleViewWithDiameter:]
  +[AVTColorWheelView colorItems:containColorItem:]
  +[AVTColorWheelView colorItemsFrom:excluding:]

  // instance methods
  -[AVTColorWheelView .cxx_destruct]
  -[AVTColorWheelView setContainerView:]
  -[AVTColorWheelView containerView]
  -[AVTColorWheelView initWithFrame:]
  -[AVTColorWheelView buildAllCircleViews]
  -[AVTColorWheelView rotatePoint:aroundCenter:withAngle:]
  -[AVTColorWheelView updateWithPrimaryItems:extendedItems:]
  -[AVTColorWheelView circleViews]
  -[AVTColorWheelView setCircleViews:]


AVTAvatarAttributeEditorMulticolorSectionPickerController : NSObject <UICollectionViewDelegate, UICollectionViewDataSource, AVTAvatarAttributeEditorMulticolorPickerCellDelegate, AVTAvatarAttributeEditorSectionController>
 @property  UIView *containerView
 @property  AVTUIEnvironment *environment
 @property  UICollectionView *collectionView
 @property  UICollectionViewFlowLayout *flowLayout
 @property  double currentOffsetX
 @property  NSArray *cachedTitleSizes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTAvatarAttributeEditorControllerSubSelectionDelegate> *delegate
 @property  <AVTAvatarAttributeEditorSection> *section
 @property  long long selectedIndex

  // class methods
  +[AVTAvatarAttributeEditorMulticolorSectionPickerController supportsSelection]
  +[AVTAvatarAttributeEditorMulticolorSectionPickerController edgeLengthFittingWidth:environment:]
  +[AVTAvatarAttributeEditorMulticolorSectionPickerController adjustedWidthForTitleSizes:items:forWidth:]
  +[AVTAvatarAttributeEditorMulticolorSectionPickerController estimatedContentWidthForTitleSizes:items:]
  +[AVTAvatarAttributeEditorMulticolorSectionPickerController estimatedContentWidthForWrappingTitleSizes:items:forWidth:]
  +[AVTAvatarAttributeEditorMulticolorSectionPickerController estimatedContentHeightForWrappingTitleSizes:items:forWidth:]
  +[AVTAvatarAttributeEditorMulticolorSectionPickerController shouldWrapTitlesForTitleSizes:items:forWidth:]
  +[AVTAvatarAttributeEditorMulticolorSectionPickerController shouldScrollGivenTitleSizes:fittingWidth:items:]
  +[AVTAvatarAttributeEditorMulticolorSectionPickerController clampedContentOffsetForOffset:collectionView:]
  +[AVTAvatarAttributeEditorMulticolorSectionPickerController cellSizeForItemAtIndex:forTitleSizes:items:forContainerWidth:]

  // instance methods
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController setCollectionView:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController collectionView:cellForItemAtIndexPath:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController section]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController setDelegate:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController delegate]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController numberOfItems]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController collectionView:layout:sizeForItemAtIndexPath:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController createCollectionView]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController .cxx_destruct]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController collectionView]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController setContainerView:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController containerView]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController selectedIndex]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController collectionView:didSelectItemAtIndexPath:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController collectionView:numberOfItemsInSection:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController environment]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController setSelectedIndex:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController flowLayout]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController setFlowLayout:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController sectionView]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController indexForItem:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController resetToDefaultState]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController cacheTitleSizes]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController cellSizeForItemAtIndex:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController updateWithSection:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController sizeForItemAtIndex:fittingSize:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController edgeInsetsFittingSize:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController viewForIndex:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController prefetchingSectionItemForIndex:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController updateCell:forItemAtIndex:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController cell:willDisplayAtIndex:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController invalidateLayoutForNewContainerSize:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController didHighlightItemAtIndex:cell:completionBlock:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController didUnhighlightItemAtIndex:cell:completionBlock:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController didSelectItemAtIndex:cell:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController evaluateDisplayCondition:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController sizeForFocusingItemAtIndex:fittingSize:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController attributeSection:didChangeValueForSectionItem:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController multicolorPickerCellDidTapClearButton:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController updateInsetsForSize:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController currentRelativeContentOffsetX]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController setCurrentRelativeContentOffsetX:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController currentOffsetX]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController setCurrentOffsetX:]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController cachedTitleSizes]
  -[AVTAvatarAttributeEditorMulticolorSectionPickerController setCachedTitleSizes:]


AVTUIImageRenderService : NSObject <AVTUIImageRenderServiceProtocol>
 @property  AVTUIEnvironment *environment
 @property  AVTImageStore *imageStore
 @property  AVTClippableImageStore *clippableImageStore
 @property  <AVTUILogger> *logger
 @property  AVTUIStickerGeneratorPool *generatorPool
 @property  <AVTTaskScheduler> *taskScheduler
 @property  long long activeTransactionCount
 @property  NSLock *transactionCountLock
 @property  NSObject<OS_os_transaction> *transaction
 @property  @? cleanupBlock
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  AVTAvatarRecord *currentAvatarRecord
 @property  AVTUIStickerRenderer *currentStickerRenderer

  // class methods
  +[AVTUIImageRenderService sharedInstance]

  // instance methods
  -[AVTUIImageRenderService logger]
  -[AVTUIImageRenderService taskScheduler]
  -[AVTUIImageRenderService transaction]
  -[AVTUIImageRenderService workQueue]
  -[AVTUIImageRenderService activeTransactionCount]
  -[AVTUIImageRenderService setWorkQueue:]
  -[AVTUIImageRenderService dealloc]
  -[AVTUIImageRenderService exit]
  -[AVTUIImageRenderService .cxx_destruct]
  -[AVTUIImageRenderService setTransaction:]
  -[AVTUIImageRenderService setActiveTransactionCount:]
  -[AVTUIImageRenderService environment]
  -[AVTUIImageRenderService init]
  -[AVTUIImageRenderService cleanupBlock]
  -[AVTUIImageRenderService setCleanupBlock:]
  -[AVTUIImageRenderService imageStore]
  -[AVTUIImageRenderService generatorPool]
  -[AVTUIImageRenderService setGeneratorPool:]
  -[AVTUIImageRenderService requestImageForAvatar:scope:withReply:]
  -[AVTUIImageRenderService requestImageForAvatar:scope:withModifications:withReply:]
  -[AVTUIImageRenderService generateAndCacheImageForAvatarRecord:scope:withReply:]
  -[AVTUIImageRenderService requestStickerImageForAvatarRecord:withStickerPackName:stickerConfigurationName:resource:withReply:]
  -[AVTUIImageRenderService requestAnimojiStickerImageForAvatarRecord:withStickerPackName:stickerConfigurationName:resource:withReply:]
  -[AVTUIImageRenderService currentAvatarRecord]
  -[AVTUIImageRenderService setCurrentAvatarRecord:]
  -[AVTUIImageRenderService transactionAdded]
  -[AVTUIImageRenderService transactionCompleted]
  -[AVTUIImageRenderService _lock_beginCleanupTimer]
  -[AVTUIImageRenderService _lock_invalidateCleanupTimer]
  -[AVTUIImageRenderService _requestImageForAvatar:scope:withReply:]
  -[AVTUIImageRenderService _requestImageForAvatar:scope:withModifications:withReply:]
  -[AVTUIImageRenderService _generateAndCacheImageForAvatarRecord:scope:withReply:]
  -[AVTUIImageRenderService _requestAnimojiStickerImageForAvatarRecord:withStickerPackName:stickerConfigurationName:resource:withReply:]
  -[AVTUIImageRenderService _requestStickerImageForAvatarRecord:withStickerPackName:stickerConfigurationName:resource:withReply:]
  -[AVTUIImageRenderService clippableImageStore]
  -[AVTUIImageRenderService transactionCountLock]
  -[AVTUIImageRenderService setTransactionCountLock:]
  -[AVTUIImageRenderService currentStickerRenderer]
  -[AVTUIImageRenderService setCurrentStickerRenderer:]


AVTJPEGImageEncoder : NSObject <AVTImageEncoder>
 @property  double compressionQuality
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTJPEGImageEncoder init]
  -[AVTJPEGImageEncoder fileExtension]
  -[AVTJPEGImageEncoder compressionQuality]
  -[AVTJPEGImageEncoder imageFromURL:error:]
  -[AVTJPEGImageEncoder imageFromData:error:]
  -[AVTJPEGImageEncoder dataFromImage:]
  -[AVTJPEGImageEncoder initWithCompressionQuality:]


AVTViewSessionProvider : NSObject <AVTViewSessionDelegate, AVTViewLayoutInfo>
 @property  @? viewCreator
 @property  UIView *avtViewContainer
 @property  AVTView *avtView
 @property  AVTViewUpdater *avtViewUpdater
 @property  AVTViewSession *activeSession
 @property  AVTViewSession *pendingSession
 @property  AVTViewSession *pausedTrackingSession
 @property  AVTFaceTrackingManager *faceTrackingManager
 @property  NSNotificationCenter *notificationCenter
 @property  AVTUIEnvironment *environment
 @property  {CGSize=dd} avtViewBackingSize
 @property  <AVTViewSessionProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTViewSessionProvider creatorForAVTView]
  +[AVTViewSessionProvider creatorForAVTRecordView]
  +[AVTViewSessionProvider backingSizeForEnvironment:]

  // instance methods
  -[AVTViewSessionProvider notificationCenter]
  -[AVTViewSessionProvider setDelegate:]
  -[AVTViewSessionProvider delegate]
  -[AVTViewSessionProvider dealloc]
  -[AVTViewSessionProvider .cxx_destruct]
  -[AVTViewSessionProvider activeSession]
  -[AVTViewSessionProvider environment]
  -[AVTViewSessionProvider setActiveSession:]
  -[AVTViewSessionProvider avtView]
  -[AVTViewSessionProvider setAvtView:]
  -[AVTViewSessionProvider avtViewContainer]
  -[AVTViewSessionProvider setAvtViewContainer:]
  -[AVTViewSessionProvider avtViewUpdater]
  -[AVTViewSessionProvider setAvtViewUpdater:]
  -[AVTViewSessionProvider handleProviderTakesPrimaryStatusNotification:]
  -[AVTViewSessionProvider handleProviderReleasesPrimaryStatusNotification:]
  -[AVTViewSessionProvider sessionDidTearDown:]
  -[AVTViewSessionProvider avtViewBackingSize]
  -[AVTViewSessionProvider initWithAVTViewBackingSize:viewCreator:environment:]
  -[AVTViewSessionProvider sessionWithDidBecomeActiveHandler:tearDownHandler:]
  -[AVTViewSessionProvider activateNextSession]
  -[AVTViewSessionProvider createContainerAndViewIfNeeded]
  -[AVTViewSessionProvider didLosePrimaryStatusWithSessionToPause:]
  -[AVTViewSessionProvider recoverPrimaryStatus]
  -[AVTViewSessionProvider faceTrackingManager]
  -[AVTViewSessionProvider setFaceTrackingManager:]
  -[AVTViewSessionProvider viewCreator]
  -[AVTViewSessionProvider pendingSession]
  -[AVTViewSessionProvider setPendingSession:]
  -[AVTViewSessionProvider pausedTrackingSession]
  -[AVTViewSessionProvider setPausedTrackingSession:]


AVTUIControllerPresentation : NSObject
 @property  UIViewController *controller
 @property  MSMessagesAppViewController *modalMessagesController
 @property  <AVTUIControllerPresentationDelegate> *delegate

  // class methods
  +[AVTUIControllerPresentation presentationWithWrappingForController:]
  +[AVTUIControllerPresentation setPendingGlobalPresentation:]
  +[AVTUIControllerPresentation pendingGlobalPresentation]

  // instance methods
  -[AVTUIControllerPresentation setDelegate:]
  -[AVTUIControllerPresentation delegate]
  -[AVTUIControllerPresentation .cxx_destruct]
  -[AVTUIControllerPresentation controller]
  -[AVTUIControllerPresentation initWithController:]
  -[AVTUIControllerPresentation viewWillBeObstructed]
  -[AVTUIControllerPresentation modalMessagesController]
  -[AVTUIControllerPresentation setModalMessagesController:]


AVTAvatarAttributeEditorModel : NSObject
 @property  NSArray *categories

  // class methods
  +[AVTAvatarAttributeEditorModel diffOfSectionItems:fromSectionItems:]
  +[AVTAvatarAttributeEditorModel diffOfSections:fromSections:]

  // instance methods
  -[AVTAvatarAttributeEditorModel categories]
  -[AVTAvatarAttributeEditorModel .cxx_destruct]
  -[AVTAvatarAttributeEditorModel initWithCategories:]
  -[AVTAvatarAttributeEditorModel differenceFromModel:]


AVTFixedSizeViewContainer : UIView
 @property  UIView *fixedSizeView

  // instance methods
  -[AVTFixedSizeViewContainer .cxx_destruct]
  -[AVTFixedSizeViewContainer layoutSubviews]
  -[AVTFixedSizeViewContainer initWithFixedSizeView:]
  -[AVTFixedSizeViewContainer fixedSizeView]


AVTTransitionCoordinator : NSObject
 @property  <AVTTransitionScheduler> *scheduler
 @property  NSMutableArray *pendingTransitions
 @property  NSMutableArray *runningTransitions
 @property  double delay

  // class methods
  +[AVTTransitionCoordinator synchronousTransitionCoordinator]
  +[AVTTransitionCoordinator concurrentTransitionCoordinatorWithDelay:]
  +[AVTTransitionCoordinator eventHandlerForCoordinator:]

  // instance methods
  -[AVTTransitionCoordinator scheduler]
  -[AVTTransitionCoordinator setScheduler:]
  -[AVTTransitionCoordinator dealloc]
  -[AVTTransitionCoordinator .cxx_destruct]
  -[AVTTransitionCoordinator delay]
  -[AVTTransitionCoordinator addTransition:]
  -[AVTTransitionCoordinator init]
  -[AVTTransitionCoordinator didCompleteRunningTransition:]
  -[AVTTransitionCoordinator startNextTransition]
  -[AVTTransitionCoordinator transitionsMatchingModel:]
  -[AVTTransitionCoordinator allTransitions]
  -[AVTTransitionCoordinator cancelTransitionsMatchingModel:]
  -[AVTTransitionCoordinator cancelAllTransitions]
  -[AVTTransitionCoordinator pendingTransitions]
  -[AVTTransitionCoordinator runningTransitions]


AVTCoreModelColorsPicker : NSObject <AVTCoreModelPicker>
 @property  NSArray *primaryColors
 @property  NSArray *extendedColors
 @property  long long destination
 @property  BOOL alwaysShowExtended
 @property  long long colorCategory
 @property  NSString *identifier
 @property  NSString *title
 @property  AVTCoreModelPickerOptions *options
 @property  AVTCoreModelPairing *pairing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTCoreModelColorsPicker identifier]
  -[AVTCoreModelColorsPicker destination]
  -[AVTCoreModelColorsPicker .cxx_destruct]
  -[AVTCoreModelColorsPicker isEmpty]
  -[AVTCoreModelColorsPicker options]
  -[AVTCoreModelColorsPicker title]
  -[AVTCoreModelColorsPicker pairing]
  -[AVTCoreModelColorsPicker primaryColors]
  -[AVTCoreModelColorsPicker alwaysShowExtended]
  -[AVTCoreModelColorsPicker initWithTitle:primaryColors:extendedColors:alwaysShowExtended:colorCategory:destination:pairing:options:]
  -[AVTCoreModelColorsPicker initWithTitle:primaryColors:extendedColors:identifier:alwaysShowExtended:colorCategory:destination:pairing:options:]
  -[AVTCoreModelColorsPicker extendedColors]
  -[AVTCoreModelColorsPicker colorCategory]


AVTAvatarActionsViewControllerLayout : NSObject <AVTAvatarActionsViewControllerLayout>
 @property  {CGSize=dd} containerSize
 @property  {UIEdgeInsets=dddd} edgeInsets
 @property  long long buttonCount
 @property  double actionButtonsViewAlpha
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} actionButtonsViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} avatarContainerViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} userInfoFrame
 @property  <AVTViewLayoutInfo> *avtViewLayout

  // class methods
  +[AVTAvatarActionsViewControllerLayout buttonHeight]
  +[AVTAvatarActionsViewControllerLayout heightForButtonsViewWithButtonCount:]

  // instance methods
  -[AVTAvatarActionsViewControllerLayout containerSize]
  -[AVTAvatarActionsViewControllerLayout edgeInsets]
  -[AVTAvatarActionsViewControllerLayout .cxx_destruct]
  -[AVTAvatarActionsViewControllerLayout buttonCount]
  -[AVTAvatarActionsViewControllerLayout actionButtonsViewFrame]
  -[AVTAvatarActionsViewControllerLayout actionButtonsViewFrameForButtonCount:]
  -[AVTAvatarActionsViewControllerLayout userInfoFrame]
  -[AVTAvatarActionsViewControllerLayout avtViewLayout]
  -[AVTAvatarActionsViewControllerLayout initWithContainerSize:insets:buttonCount:avtViewLayoutInfo:]
  -[AVTAvatarActionsViewControllerLayout actionButtonsViewAlpha]
  -[AVTAvatarActionsViewControllerLayout avatarContainerViewFrame]


AVTAvatarListCell : UICollectionViewCell <AVTAvatarTransitionModel>
 @property  AVTView *avtView
 @property  AVTImageTransitioningContainerView *containerView
 @property  UIImage *image
 @property  UIView *avtViewContainer
 @property  <AVTAvatarRecord> *avatar
 @property  AVTStickerConfiguration *configuration
 @property  {CGSize=dd} aspectRatio
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarListCell reuseIdentifier]

  // instance methods
  -[AVTAvatarListCell setConfiguration:]
  -[AVTAvatarListCell aspectRatio]
  -[AVTAvatarListCell configuration]
  -[AVTAvatarListCell .cxx_destruct]
  -[AVTAvatarListCell prepareForReuse]
  -[AVTAvatarListCell containerView]
  -[AVTAvatarListCell layoutSubviews]
  -[AVTAvatarListCell image]
  -[AVTAvatarListCell initWithFrame:]
  -[AVTAvatarListCell setAspectRatio:]
  -[AVTAvatarListCell setImage:animated:]
  -[AVTAvatarListCell setImage:]
  -[AVTAvatarListCell snapshotViewAfterScreenUpdates:]
  -[AVTAvatarListCell avatar]
  -[AVTAvatarListCell setAvatar:]
  -[AVTAvatarListCell avtView]
  -[AVTAvatarListCell setAvtView:]
  -[AVTAvatarListCell liveView]
  -[AVTAvatarListCell beginUsingAVTViewFromSession:]
  -[AVTAvatarListCell avtViewContainer]
  -[AVTAvatarListCell transitionStaticViewToFront]
  -[AVTAvatarListCell transitionLiveViewToFront]
  -[AVTAvatarListCell applyBaseAlpha]
  -[AVTAvatarListCell applyFullAlpha]
  -[AVTAvatarListCell endUsingAVTView]
  -[AVTAvatarListCell setImageViewVisible:]
  -[AVTAvatarListCell downcastWithCellHandler:listCellHandler:]


AVTColorLayerProvider : NSObject
  // instance methods
  -[AVTColorLayerProvider providerForColorIntoLayer]
  -[AVTColorLayerProvider providerForGradientFromColor]
  -[AVTColorLayerProvider renderColorForColorPreset:skinColor:intoLayer:]
  -[AVTColorLayerProvider renderColorGradientForModelColor:skinColor:handler:]


AVTAvatarActionsViewControllerTransitionPadStartingLayout : AVTAvatarActionsViewControllerPadLayout
  // instance methods
  -[AVTAvatarActionsViewControllerTransitionPadStartingLayout initWithContainerSize:insets:buttonCount:avtViewLayoutInfo:startingAvatarViewFrame:]
  -[AVTAvatarActionsViewControllerTransitionPadStartingLayout actionButtonsViewAlpha]
  -[AVTAvatarActionsViewControllerTransitionPadStartingLayout avatarContainerViewFrame]


AVTIconImageProvider : NSObject
  // class methods
  +[AVTIconImageProvider prewarmIconImageForBundleIdentifier:size:scale:]
  +[AVTIconImageProvider iconImageForBundleIdentifier:size:scale:completionBlock:]


AVTTouchDownGestureRecognizer : UIGestureRecognizer <UIGestureRecognizerDelegate>
 @property  NSHashTable *recognizersRequiredToFail
 @property  BOOL allowsTouchesToPassThrough
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTTouchDownGestureRecognizer _configure]
  -[AVTTouchDownGestureRecognizer requireGestureRecognizerToFail:]
  -[AVTTouchDownGestureRecognizer initWithTarget:action:]
  -[AVTTouchDownGestureRecognizer .cxx_destruct]
  -[AVTTouchDownGestureRecognizer touchesMoved:withEvent:]
  -[AVTTouchDownGestureRecognizer gestureRecognizer:shouldReceiveTouch:]
  -[AVTTouchDownGestureRecognizer touchesBegan:withEvent:]
  -[AVTTouchDownGestureRecognizer touchesEnded:withEvent:]
  -[AVTTouchDownGestureRecognizer init]
  -[AVTTouchDownGestureRecognizer allowsTouchesToPassThrough]
  -[AVTTouchDownGestureRecognizer setAllowsTouchesToPassThrough:]
  -[AVTTouchDownGestureRecognizer recognizersRequiredToFail]
  -[AVTTouchDownGestureRecognizer setRecognizersRequiredToFail:]


AVTAvatarAttributeEditorModelBuilder : NSObject
  // class methods
  +[AVTAvatarAttributeEditorModelBuilder destinationForPresetCategory:isPaired:]
  +[AVTAvatarAttributeEditorModelBuilder buildDataSourceCategoriesFromCoreModel:selectingFromAvatarConfiguration:imageProvider:colorLayerProvider:stickerRenderer:modelManager:withSelectedCategory:atIndex:]
  +[AVTAvatarAttributeEditorModelBuilder sectionProvidersForCoreModelCategory:platform:modelManager:pairingPickers:editingColors:colorDefaultsProvider:previousSectionMap:imageProvider:colorLayerProvider:stickerRenderer:configuration:displayConditionEvaluator:]
  +[AVTAvatarAttributeEditorModelBuilder previewModeForCoreModelGroup:]
  +[AVTAvatarAttributeEditorModelBuilder selectedModelPresetForSelectedPreset:inPresetsList:]
  +[AVTAvatarAttributeEditorModelBuilder sectionForModelColorsRow:configuration:modelManager:imageProvider:colorLayerProvider:pairedCategory:destination:editingColors:displaysTitle:]
  +[AVTAvatarAttributeEditorModelBuilder sectionForModelColorsRow:selectedColorPreset:configuration:modelManager:additionalAvatarUpdateKind:imageProvider:colorLayerProvider:pairedCategory:destination:editingColors:displaysTitle:]
  +[AVTAvatarAttributeEditorModelBuilder multicolorSectionProviderForCoreMulticolorPicker:platform:configuration:imageProvider:colorLayerProvider:editingColors:colorDefaultsProvider:modelManager:previousSectionMap:pairingPickers:]
  +[AVTAvatarAttributeEditorModelBuilder subtitleFromSubtitles:forIndex:enabledIndex:]
  +[AVTAvatarAttributeEditorModelBuilder selectedPresetForCoreModelColorsPicker:isEnabled:fallbackToColorsPicker:colorDefaultsProvider:modelManager:]
  +[AVTAvatarAttributeEditorModelBuilder sectionColorItemsForColors:selectedPreset:configuration:modelManager:additionalUpdateKind:imageProvider:colorLayerProvider:pairedCategory:editingColors:]
  +[AVTAvatarAttributeEditorModelBuilder sectionForModelRow:fromModelPresets:selectedModelPreset:tagSelection:fixedTags:availableTags:category:imageProvider:stickerRenderer:configuration:previousSection:pairedCategory:]
  +[AVTAvatarAttributeEditorModelBuilder sectionDisplayModeForCoreModelDisplayMode:]
  +[AVTAvatarAttributeEditorModelBuilder framingModeForRow:selectedPreset:]
  +[AVTAvatarAttributeEditorModelBuilder filterPresets:forRowRepresentingTags:currentTagSelection:fixedTags:availableTags:sortingOption:]
  +[AVTAvatarAttributeEditorModelBuilder tagCombinationsForTagNames:availableTags:]
  +[AVTAvatarAttributeEditorModelBuilder tagSetByRemovingTagNames:fromTagSet:]
  +[AVTAvatarAttributeEditorModelBuilder filterPresets:matchingTagValues:sortedUsing:]
  +[AVTAvatarAttributeEditorModelBuilder insertPreset:intoList:forSortingOption:]
  +[AVTAvatarAttributeEditorModelBuilder scoreForTags:forCombination:currentSelection:]
  +[AVTAvatarAttributeEditorModelBuilder addTags:toMutableTagSet:]
  +[AVTAvatarAttributeEditorModelBuilder setTags:onMutableTagSet:]
  +[AVTAvatarAttributeEditorModelBuilder tagSetForTagNames:inTagSet:]
  +[AVTAvatarAttributeEditorModelBuilder firstColorSectionInSections:]
  +[AVTAvatarAttributeEditorModelBuilder sectionOptionFromModelOptions:]


AVTCarouselPlusButtonView : UIView
 @property  AVTUIEnvironment *environment
 @property  UIButton *button
 @property  {CGSize=dd} maxItemSize
 @property  BOOL highlighted
 @property  BOOL allowHighlight

  // instance methods
  -[AVTCarouselPlusButtonView button]
  -[AVTCarouselPlusButtonView .cxx_destruct]
  -[AVTCarouselPlusButtonView setHighlighted:]
  -[AVTCarouselPlusButtonView layoutSubviews]
  -[AVTCarouselPlusButtonView isHighlighted]
  -[AVTCarouselPlusButtonView environment]
  -[AVTCarouselPlusButtonView initWithFrame:environment:]
  -[AVTCarouselPlusButtonView setMaxItemSize:]
  -[AVTCarouselPlusButtonView setAllowHighlight:]
  -[AVTCarouselPlusButtonView maxItemSize]
  -[AVTCarouselPlusButtonView allowHighlight]


AVTOrderedIndexBasedTaskScheduler : NSObject <AVTIndexBasedTaskScheduler>
 @property  NSMutableDictionary *scheduledTasks
 @property  NSMutableArray *scheduledTasksOrder
 @property  NSMutableDictionary *readyTasks
 @property  NSObject<OS_dispatch_queue> *stateLock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTOrderedIndexBasedTaskScheduler indexesForReadyTasksToRunGivenScheduledTasks:order:readyTasks:readyRowIndex:]
  +[AVTOrderedIndexBasedTaskScheduler rowBaseIndexForIndex:]

  // instance methods
  -[AVTOrderedIndexBasedTaskScheduler cancelTask:]
  -[AVTOrderedIndexBasedTaskScheduler initWithEnvironment:]
  -[AVTOrderedIndexBasedTaskScheduler .cxx_destruct]
  -[AVTOrderedIndexBasedTaskScheduler stateLock]
  -[AVTOrderedIndexBasedTaskScheduler cancelAllTasks]
  -[AVTOrderedIndexBasedTaskScheduler performStateWork:]
  -[AVTOrderedIndexBasedTaskScheduler scheduleTask:forIndex:]
  -[AVTOrderedIndexBasedTaskScheduler taskReady:forIndex:]
  -[AVTOrderedIndexBasedTaskScheduler scheduledTasks]
  -[AVTOrderedIndexBasedTaskScheduler scheduledTasksOrder]
  -[AVTOrderedIndexBasedTaskScheduler readyTasks]


AVTAvatarAttributeEditorState : NSObject
 @property  NSMutableDictionary *pairedStates
 @property  NSMutableDictionary *multicolorEnabledStates
 @property  NSMutableDictionary *multicolorSelectedStates

  // class methods
  +[AVTAvatarAttributeEditorState buildStateFromCoreModel:avatarConfiguration:]

  // instance methods
  -[AVTAvatarAttributeEditorState .cxx_destruct]
  -[AVTAvatarAttributeEditorState init]
  -[AVTAvatarAttributeEditorState initWithPairedStates:multicolorEnabledStates:multicolorSelectedStates:]
  -[AVTAvatarAttributeEditorState isCategoryPaired:]
  -[AVTAvatarAttributeEditorState setCategory:inPairedState:]
  -[AVTAvatarAttributeEditorState enabledMulticolorSubpickersIndexForMulticolorPickerIdentifier:]
  -[AVTAvatarAttributeEditorState setEnabledMulticolorSubpickersIndex:forMulticolorPickerIdentifier:]
  -[AVTAvatarAttributeEditorState selectedMulticolorSubpickersIndexForMulticolorPickerIdentifier:]
  -[AVTAvatarAttributeEditorState setSelectedMulticolorSubpickersIndex:forMulticolorPickerIdentifier:]
  -[AVTAvatarAttributeEditorState pairedStates]
  -[AVTAvatarAttributeEditorState setPairedStates:]
  -[AVTAvatarAttributeEditorState multicolorEnabledStates]
  -[AVTAvatarAttributeEditorState setMulticolorEnabledStates:]
  -[AVTAvatarAttributeEditorState multicolorSelectedStates]
  -[AVTAvatarAttributeEditorState setMulticolorSelectedStates:]


AVTAttributeLabelView : UIView

AVTEditingModelMappings : NSObject
  // class methods
  +[AVTEditingModelMappings presetCategoryFromCategoryName:]
  +[AVTEditingModelMappings framingModeForCameraIdentifier:]
  +[AVTEditingModelMappings presetCategoryForColorPaletteName:]
  +[AVTEditingModelMappings paletteCategories]


AVTDeviceResourceManager : NSObject <AVTDeviceResourceConsumerDelegate>
 @property  NSMutableArray *consumers
 @property  <AVTUILogger> *logger
 @property  NSObject<OS_dispatch_queue> *stateLock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTDeviceResourceManager logger]
  -[AVTDeviceResourceManager .cxx_destruct]
  -[AVTDeviceResourceManager stateLock]
  -[AVTDeviceResourceManager unregisterConsumer:]
  -[AVTDeviceResourceManager consumers]
  -[AVTDeviceResourceManager registerConsumer:]
  -[AVTDeviceResourceManager consumer:willConsumeRenderingResourceForEstimatedDuration:]
  -[AVTDeviceResourceManager initWithLogger:lockProvider:]
  -[AVTDeviceResourceManager performWorkWithConsumers:]


AVTAttributeSectionSeparator : UICollectionReusableView
 @property  UIView *separatorView
 @property  {UIEdgeInsets=dddd} edgeInsets

  // class methods
  +[AVTAttributeSectionSeparator reuseIdentifier]

  // instance methods
  -[AVTAttributeSectionSeparator setEdgeInsets:]
  -[AVTAttributeSectionSeparator edgeInsets]
  -[AVTAttributeSectionSeparator .cxx_destruct]
  -[AVTAttributeSectionSeparator prepareForReuse]
  -[AVTAttributeSectionSeparator layoutSubviews]
  -[AVTAttributeSectionSeparator separatorView]
  -[AVTAttributeSectionSeparator setSeparatorView:]
  -[AVTAttributeSectionSeparator initWithFrame:]


AVTFaceTrackingManager : NSObject <AVTViewFaceTrackingDelegate, AVTUIRaiseGestureManagerDelegate>
 @property  AVTUIEnvironment *environment
 @property  AVTUIRaiseGestureManager *raiseGestureManager
 @property  AVTView *avatarView
 @property  FBSDisplayLayoutMonitor *displayLayoutMonitor
 @property  NSTimer *lowLightAndSensorOcclusionLockoutTimer
 @property  BOOL shouldRecheckLowLightAndSensorOcclusionState
 @property  NSTimer *trackingLostMessageTimer
 @property  NSTimer *pauseTrackingTimer
 @property  unsigned long interruptionType
 @property  NSString *localizedDeviceName
 @property  BOOL faceTrackingManagementPaused
 @property  <AVTFaceTrackingManagerDelegate> *delegate
 @property  AVTUserInfoView *userInfoView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTFaceTrackingManager desiredUserInfoLabelAlphaForFaceTrackingState:]

  // instance methods
  -[AVTFaceTrackingManager displayLayoutMonitor]
  -[AVTFaceTrackingManager avatarView]
  -[AVTFaceTrackingManager setDelegate:]
  -[AVTFaceTrackingManager delegate]
  -[AVTFaceTrackingManager layoutMonitorDidUpdateDisplayLayout:withContext:]
  -[AVTFaceTrackingManager dealloc]
  -[AVTFaceTrackingManager interruptionType]
  -[AVTFaceTrackingManager .cxx_destruct]
  -[AVTFaceTrackingManager setInterruptionType:]
  -[AVTFaceTrackingManager environment]
  -[AVTFaceTrackingManager localizedDeviceName]
  -[AVTFaceTrackingManager avatarView:didUpdateWithFaceTrackingStatus:]
  -[AVTFaceTrackingManager avatarView:didUpdateWithLowLightStatus:]
  -[AVTFaceTrackingManager avatarView:didUpdateWithSensorOcclusionStatus:]
  -[AVTFaceTrackingManager avatarView:faceTrackingSessionFailedWithError:]
  -[AVTFaceTrackingManager avatarViewFaceTrackingSessionInterruptionDidBegin:]
  -[AVTFaceTrackingManager avatarViewFaceTrackingSessionInterruptionDidEnd:]
  -[AVTFaceTrackingManager raiseGestureManagerDidRecognizeRaiseGesture:]
  -[AVTFaceTrackingManager initWithAvatarView:raiseGestureManager:environment:]
  -[AVTFaceTrackingManager initWithAvatarView:raiseGestureManager:userInfoView:environment:]
  -[AVTFaceTrackingManager setFaceTrackingManagementPaused:]
  -[AVTFaceTrackingManager resumeFaceTrackingIfNeededAnimated:]
  -[AVTFaceTrackingManager updateInterruptionTypeIfNeeded:]
  -[AVTFaceTrackingManager updateUserInfoBackdropForCurrentLabel]
  -[AVTFaceTrackingManager resetForTrackingFoundAFaceAnimated:]
  -[AVTFaceTrackingManager resetForResumingTrackingAnimated:]
  -[AVTFaceTrackingManager updateUserInfoLabelAlphaForFaceTrackingState:]
  -[AVTFaceTrackingManager updateUserInfoLabelAlphaForFaceTrackingState:animated:]
  -[AVTFaceTrackingManager invalidateFaceTrackingTimers]
  -[AVTFaceTrackingManager startTrackingLostTimers]
  -[AVTFaceTrackingManager updateForTrackingLost]
  -[AVTFaceTrackingManager updateForPausingTracking]
  -[AVTFaceTrackingManager updateForPausingTrackingWithLabel:]
  -[AVTFaceTrackingManager userInfoStringForCurrentTrackingState]
  -[AVTFaceTrackingManager cancelLowLightAndSensorOcclusionTimer]
  -[AVTFaceTrackingManager avatarViewDidUpdateWithLowLightOrCameraOcclusionStatus]
  -[AVTFaceTrackingManager setupDisplayLayoutMonitor]
  -[AVTFaceTrackingManager faceTrackingManagementPaused]
  -[AVTFaceTrackingManager userInfoView]
  -[AVTFaceTrackingManager raiseGestureManager]
  -[AVTFaceTrackingManager lowLightAndSensorOcclusionLockoutTimer]
  -[AVTFaceTrackingManager setLowLightAndSensorOcclusionLockoutTimer:]
  -[AVTFaceTrackingManager shouldRecheckLowLightAndSensorOcclusionState]
  -[AVTFaceTrackingManager setShouldRecheckLowLightAndSensorOcclusionState:]
  -[AVTFaceTrackingManager trackingLostMessageTimer]
  -[AVTFaceTrackingManager setTrackingLostMessageTimer:]
  -[AVTFaceTrackingManager pauseTrackingTimer]
  -[AVTFaceTrackingManager setPauseTrackingTimer:]


AVTAttributeLabeledCollectionViewCell : AVTAttributeCollectionViewCell
 @property  UIVisualEffectView *labelBackgroundView
 @property  UILabel *label
 @property  NSString *labelString
 @property  double labelVerticalSpace
 @property  BOOL shouldHideLabelBackground

  // class methods
  +[AVTAttributeLabeledCollectionViewCell cellIdentifier]

  // instance methods
  -[AVTAttributeLabeledCollectionViewCell setLabel:]
  -[AVTAttributeLabeledCollectionViewCell .cxx_destruct]
  -[AVTAttributeLabeledCollectionViewCell prepareForReuse]
  -[AVTAttributeLabeledCollectionViewCell layoutSubviews]
  -[AVTAttributeLabeledCollectionViewCell label]
  -[AVTAttributeLabeledCollectionViewCell initWithFrame:]
  -[AVTAttributeLabeledCollectionViewCell traitCollectionDidChange:]
  -[AVTAttributeLabeledCollectionViewCell labelString]
  -[AVTAttributeLabeledCollectionViewCell frameForAttributeView]
  -[AVTAttributeLabeledCollectionViewCell setShouldHideLabelBackground:]
  -[AVTAttributeLabeledCollectionViewCell updateLabelBackgroundAppearance]
  -[AVTAttributeLabeledCollectionViewCell setLabelString:]
  -[AVTAttributeLabeledCollectionViewCell labelVerticalSpace]
  -[AVTAttributeLabeledCollectionViewCell setLabelVerticalSpace:]
  -[AVTAttributeLabeledCollectionViewCell shouldHideLabelBackground]
  -[AVTAttributeLabeledCollectionViewCell labelBackgroundView]
  -[AVTAttributeLabeledCollectionViewCell setLabelBackgroundView:]


AVTAvatarAttributeEditorSectionItem : NSObject <AVTAvatarAttributeEditorSectionItemInternal, AVTDiscardableContent, AVTAvatarAttributeEditorSectionItemPrefetching, AVTAvatarUpdating, AVTAvatarAttributeEditorSectionItem>
 @property  UIImage *cachedThumbnail
 @property  double heightRatio
 @property  NSString *identifier
 @property  NSString *localizedName
 @property  BOOL selected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? avatarUpdater
 @property  @? discardableContentHandler
 @property  NSString *prefetchingIdentifier
 @property  @? thumbnailProvider
 @property  @? stickerResourceProvider
 @property  @? presetResourcesProvider

  // instance methods
  -[AVTAvatarAttributeEditorSectionItem identifier]
  -[AVTAvatarAttributeEditorSectionItem setSelected:]
  -[AVTAvatarAttributeEditorSectionItem .cxx_destruct]
  -[AVTAvatarAttributeEditorSectionItem localizedName]
  -[AVTAvatarAttributeEditorSectionItem isSelected]
  -[AVTAvatarAttributeEditorSectionItem thumbnailProvider]
  -[AVTAvatarAttributeEditorSectionItem discardContent]
  -[AVTAvatarAttributeEditorSectionItem discardableContentHandler]
  -[AVTAvatarAttributeEditorSectionItem setDiscardableContentHandler:]
  -[AVTAvatarAttributeEditorSectionItem avatarUpdater]
  -[AVTAvatarAttributeEditorSectionItem prefetchingIdentifier]
  -[AVTAvatarAttributeEditorSectionItem stickerResourceProvider]
  -[AVTAvatarAttributeEditorSectionItem presetResourcesProvider]
  -[AVTAvatarAttributeEditorSectionItem initWithIdentifier:localizedName:thumbnailProvider:stickerResourceProvider:presetResourcesProvider:avatarUpdater:heightRatio:selected:]
  -[AVTAvatarAttributeEditorSectionItem cachedThumbnail]
  -[AVTAvatarAttributeEditorSectionItem setCachedThumbnail:]
  -[AVTAvatarAttributeEditorSectionItem heightRatio]


AVTAvatarAttributeEditorViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDataSourcePrefetching, UICollectionViewDelegateFlowLayout, AVTAvatarAttributeEditorControllerSubSelectionDelegate, AVTGroupPickerDelegate, AVTCollapsibleHeaderControllerDelegate, AVTTransitionModel, AVTNotifyingContainerViewDelegate, AVTFaceTrackingManagerDelegate, AVTAttributeEditorSectionHeaderViewDelegate>
 @property  <AVTAvatarAttributeEditorLayout> *currentLayout
 @property  AVTAvatarAttributeEditorModelManager *modelManager
 @property  <AVTTaskScheduler> *imageProviderScheduler
 @property  UIView *attributesContainerView
 @property  UIView *sideGroupContainerView
 @property  UIView *groupDialContainerView
 @property  AVTGroupDial *groupDial
 @property  AVTGroupListCollectionView *groupListView
 @property  AVTBodyCarouselController *bodyEditorHeaderViewController
 @property  UIView *headerMaskingView
 @property  UIView *headerContainerView
 @property  AVTShadowView *shadowView
 @property  UICollectionView *attributesCollectionView
 @property  AVTAvatarAttributeEditorDataSource *dataSource
 @property  AVTAttributeEditorAnimationCoordinator *animationCoordinator
 @property  UILabel *alphaAssetsLabel
 @property  UIView *verticleRuleContainer
 @property  CALayer *verticleRule
 @property  AVTViewSessionProvider *avtViewSessionProvider
 @property  AVTViewSession *avtViewSession
 @property  AVTCollapsibleHeaderController *collapsibleHeaderController
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  AVTViewThrottler *avtViewThrottler
 @property  AVTUIEnvironment *environment
 @property  AVTAvatarEditorColorsState *colorsState
 @property  @? postSessionDidBecomeActiveHandler
 @property  BOOL isCreating
 @property  BOOL hasMadeAnySelection
 @property  AVTImageTransitioningContainerView *transitioningContainer
 @property  AVTTransition *currentTransition
 @property  NSDate *lastPosedAvatarImageRenderingTime
 @property  BOOL isAnimatingHighlight
 @property  @? pendingUnhighlightBlock
 @property  BOOL allowFacetracking
 @property  _AVTAvatarRecordImageProvider *headerPreviewImageRenderer
 @property  <AVTTaskScheduler> *headerPreviewScheduler
 @property  BOOL collectionViewIsPerformingBatchUpdates
 @property  @? pendingCollectionViewReloadDataBlock
 @property  unsigned long previewModeType
 @property  AVTViewCarouselLayout *avtViewLayout
 @property  AVTAvatarRecord *avatarRecord
 @property  AVTMemoji *avatar
 @property  <AVTAvatarAttributeEditorViewControllerDelegate> *delegate
 @property  BOOL disableAvatarSnapshotting
 @property  BOOL shouldHideUserInfoView
 @property  unsigned long editorPresentationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarAttributeEditorViewController colorRowIdentifier]
  +[AVTAvatarAttributeEditorViewController attributeRowIdentifier]

  // instance methods
  -[AVTAvatarAttributeEditorViewController setAnimationCoordinator:]
  -[AVTAvatarAttributeEditorViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[AVTAvatarAttributeEditorViewController animationCoordinator]
  -[AVTAvatarAttributeEditorViewController collectionView:cellForItemAtIndexPath:]
  -[AVTAvatarAttributeEditorViewController collectionView:prefetchItemsAtIndexPaths:]
  -[AVTAvatarAttributeEditorViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[AVTAvatarAttributeEditorViewController currentLayout]
  -[AVTAvatarAttributeEditorViewController dataSource]
  -[AVTAvatarAttributeEditorViewController collectionView:layout:insetForSectionAtIndex:]
  -[AVTAvatarAttributeEditorViewController setDelegate:]
  -[AVTAvatarAttributeEditorViewController setShadowView:]
  -[AVTAvatarAttributeEditorViewController contentSizeCategoryDidChange:]
  -[AVTAvatarAttributeEditorViewController collectionView:shouldSelectItemAtIndexPath:]
  -[AVTAvatarAttributeEditorViewController delegate]
  -[AVTAvatarAttributeEditorViewController shadowView]
  -[AVTAvatarAttributeEditorViewController numberOfSectionsInCollectionView:]
  -[AVTAvatarAttributeEditorViewController setCurrentLayout:]
  -[AVTAvatarAttributeEditorViewController viewDidAppear:]
  -[AVTAvatarAttributeEditorViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[AVTAvatarAttributeEditorViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[AVTAvatarAttributeEditorViewController .cxx_destruct]
  -[AVTAvatarAttributeEditorViewController viewDidLoad]
  -[AVTAvatarAttributeEditorViewController viewWillAppear:]
  -[AVTAvatarAttributeEditorViewController loadView]
  -[AVTAvatarAttributeEditorViewController collectionView:layout:referenceSizeForFooterInSection:]
  -[AVTAvatarAttributeEditorViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[AVTAvatarAttributeEditorViewController viewDidLayoutSubviews]
  -[AVTAvatarAttributeEditorViewController collectionView:layout:referenceSizeForHeaderInSection:]
  -[AVTAvatarAttributeEditorViewController collectionView:cancelPrefetchingForItemsAtIndexPaths:]
  -[AVTAvatarAttributeEditorViewController collectionView:didUnhighlightItemAtIndexPath:]
  -[AVTAvatarAttributeEditorViewController collectionView:didHighlightItemAtIndexPath:]
  -[AVTAvatarAttributeEditorViewController setDataSource:]
  -[AVTAvatarAttributeEditorViewController setCurrentTransition:]
  -[AVTAvatarAttributeEditorViewController collectionView:didSelectItemAtIndexPath:]
  -[AVTAvatarAttributeEditorViewController viewWillDisappear:]
  -[AVTAvatarAttributeEditorViewController tapGestureRecognizer]
  -[AVTAvatarAttributeEditorViewController currentTransition]
  -[AVTAvatarAttributeEditorViewController collectionView:numberOfItemsInSection:]
  -[AVTAvatarAttributeEditorViewController setTapGestureRecognizer:]
  -[AVTAvatarAttributeEditorViewController traitCollectionDidChange:]
  -[AVTAvatarAttributeEditorViewController environment]
  -[AVTAvatarAttributeEditorViewController init]
  -[AVTAvatarAttributeEditorViewController headerContainerView]
  -[AVTAvatarAttributeEditorViewController setHeaderContainerView:]
  -[AVTAvatarAttributeEditorViewController avatar]
  -[AVTAvatarAttributeEditorViewController setEditorPresentationContext:]
  -[AVTAvatarAttributeEditorViewController avatarRecord]
  -[AVTAvatarAttributeEditorViewController applyLayout:]
  -[AVTAvatarAttributeEditorViewController didTapAvatarView:]
  -[AVTAvatarAttributeEditorViewController groupListView]
  -[AVTAvatarAttributeEditorViewController setGroupListView:]
  -[AVTAvatarAttributeEditorViewController liveView]
  -[AVTAvatarAttributeEditorViewController interfaceOrientationForFaceTrackingManager:]
  -[AVTAvatarAttributeEditorViewController faceTrackingManager:didUpdateUserInfoWithSize:]
  -[AVTAvatarAttributeEditorViewController beginAVTViewSessionWithDidBeginBlock:]
  -[AVTAvatarAttributeEditorViewController configureUserInfoLabel]
  -[AVTAvatarAttributeEditorViewController shouldHideUserInfoView]
  -[AVTAvatarAttributeEditorViewController setShouldHideUserInfoView:]
  -[AVTAvatarAttributeEditorViewController avtViewSessionProvider]
  -[AVTAvatarAttributeEditorViewController avtViewSession]
  -[AVTAvatarAttributeEditorViewController setAvtViewSession:]
  -[AVTAvatarAttributeEditorViewController postSessionDidBecomeActiveHandler]
  -[AVTAvatarAttributeEditorViewController setPostSessionDidBecomeActiveHandler:]
  -[AVTAvatarAttributeEditorViewController allowFacetracking]
  -[AVTAvatarAttributeEditorViewController setAllowFacetracking:]
  -[AVTAvatarAttributeEditorViewController collapsibleHeaderController:willUpdateHeaderToHeight:]
  -[AVTAvatarAttributeEditorViewController collapsibleHeaderController:didUpdateHeaderToHeight:]
  -[AVTAvatarAttributeEditorViewController collapsibleHeaderController:isUpdatingHeaderWithIncrementalHeight:]
  -[AVTAvatarAttributeEditorViewController notifyingContainerViewWillChangeSize:]
  -[AVTAvatarAttributeEditorViewController notifyingContainerViewDidChangeSize:]
  -[AVTAvatarAttributeEditorViewController avtViewLayout]
  -[AVTAvatarAttributeEditorViewController setAvtViewLayout:]
  -[AVTAvatarAttributeEditorViewController setDisableAvatarSnapshotting:]
  -[AVTAvatarAttributeEditorViewController disableAvatarSnapshotting]
  -[AVTAvatarAttributeEditorViewController prepareForAnimatedTransitionWithLayout:completionBlock:]
  -[AVTAvatarAttributeEditorViewController visibleLayout]
  -[AVTAvatarAttributeEditorViewController editorPresentationContext]
  -[AVTAvatarAttributeEditorViewController isCreating]
  -[AVTAvatarAttributeEditorViewController prepareForPresetsScrollTestOnCategory:readyHandler:]
  -[AVTAvatarAttributeEditorViewController colorsState]
  -[AVTAvatarAttributeEditorViewController transitionStaticViewToFront]
  -[AVTAvatarAttributeEditorViewController transitionLiveViewToFront]
  -[AVTAvatarAttributeEditorViewController maxGroupLabelWidth]
  -[AVTAvatarAttributeEditorViewController applyBaseAlpha]
  -[AVTAvatarAttributeEditorViewController applyFullAlpha]
  -[AVTAvatarAttributeEditorViewController attributeEditorSectionController:didSelectSectionItem:]
  -[AVTAvatarAttributeEditorViewController attributeEditorSectionController:didDeleteSectionItems:]
  -[AVTAvatarAttributeEditorViewController attributeEditorSectionController:didUpdateSectionItem:]
  -[AVTAvatarAttributeEditorViewController attributeEditorSectionControllerNeedsLayoutUpdate:]
  -[AVTAvatarAttributeEditorViewController groupPicker:didDeselectGroupAtIndex:]
  -[AVTAvatarAttributeEditorViewController groupPicker:didSelectGroupAtIndex:tapped:]
  -[AVTAvatarAttributeEditorViewController sectionHeaderView:didSelectItem:forPicker:sender:]
  -[AVTAvatarAttributeEditorViewController initWithAvatarRecord:avtViewSessionProvider:environment:isCreating:]
  -[AVTAvatarAttributeEditorViewController setUpHeaderView]
  -[AVTAvatarAttributeEditorViewController setTransitioningContainerFrame]
  -[AVTAvatarAttributeEditorViewController didFinishEditing]
  -[AVTAvatarAttributeEditorViewController setupGroupSelectorIfNeeded]
  -[AVTAvatarAttributeEditorViewController adjustedSafeAreaInsets]
  -[AVTAvatarAttributeEditorViewController updateHeaderViewForPreviewModeType:]
  -[AVTAvatarAttributeEditorViewController updateImageViewWithPosedAvatarRecordForcingRender:completionHandler:]
  -[AVTAvatarAttributeEditorViewController transitionToLiveViewAnimated:]
  -[AVTAvatarAttributeEditorViewController setupPreview:]
  -[AVTAvatarAttributeEditorViewController setupImageView]
  -[AVTAvatarAttributeEditorViewController configureThrottlerForAVTView:]
  -[AVTAvatarAttributeEditorViewController tearDownThrottler]
  -[AVTAvatarAttributeEditorViewController configureAVTViewFromSession:]
  -[AVTAvatarAttributeEditorViewController setupCollapsibleHeaderIfNeededForLayout:withSession:]
  -[AVTAvatarAttributeEditorViewController updateCollapsibleHeaderHeightConstraintsAnimated:]
  -[AVTAvatarAttributeEditorViewController setupTapGestureForView:]
  -[AVTAvatarAttributeEditorViewController tearDownCollapsibleHeaderIfNeeded]
  -[AVTAvatarAttributeEditorViewController createAlphaAssetsLabel]
  -[AVTAvatarAttributeEditorViewController updateLayoutAttributes]
  -[AVTAvatarAttributeEditorViewController applyLayout:layoutAvatarView:]
  -[AVTAvatarAttributeEditorViewController applyUserInfoViewLayout]
  -[AVTAvatarAttributeEditorViewController createVerticleRuleIfNeeded]
  -[AVTAvatarAttributeEditorViewController updateHeaderDependentLayoutWithHeaderFrame:fittingSize:]
  -[AVTAvatarAttributeEditorViewController updateAlphaAssetsLabelFrameIfNeeded]
  -[AVTAvatarAttributeEditorViewController reloadCollectionViewDataWithCompletion:]
  -[AVTAvatarAttributeEditorViewController resetAllSectionControllersStateToDefault]
  -[AVTAvatarAttributeEditorViewController selectedItemInSection:]
  -[AVTAvatarAttributeEditorViewController presetSectionItemForIndexPath:]
  -[AVTAvatarAttributeEditorViewController updateForSelectionOfItem:controller:reloadSections:]
  -[AVTAvatarAttributeEditorViewController updateForSelectionOfItem:inSection:senderRect:reloadSections:]
  -[AVTAvatarAttributeEditorViewController updateForSelectionOfSupplementalItem:senderRect:]
  -[AVTAvatarAttributeEditorViewController rebuildUIModelAfterSelectionInSection:senderRect:]
  -[AVTAvatarAttributeEditorViewController rebuildUIModelAfterSelectionInSection:senderRect:reloadSections:]
  -[AVTAvatarAttributeEditorViewController updateForChangedSelectionIfNeeded]
  -[AVTAvatarAttributeEditorViewController updateBodyEditorHeaderIfNeeded]
  -[AVTAvatarAttributeEditorViewController modelManager]
  -[AVTAvatarAttributeEditorViewController imageProviderScheduler]
  -[AVTAvatarAttributeEditorViewController attributesContainerView]
  -[AVTAvatarAttributeEditorViewController setAttributesContainerView:]
  -[AVTAvatarAttributeEditorViewController sideGroupContainerView]
  -[AVTAvatarAttributeEditorViewController setSideGroupContainerView:]
  -[AVTAvatarAttributeEditorViewController groupDialContainerView]
  -[AVTAvatarAttributeEditorViewController setGroupDialContainerView:]
  -[AVTAvatarAttributeEditorViewController groupDial]
  -[AVTAvatarAttributeEditorViewController setGroupDial:]
  -[AVTAvatarAttributeEditorViewController bodyEditorHeaderViewController]
  -[AVTAvatarAttributeEditorViewController setBodyEditorHeaderViewController:]
  -[AVTAvatarAttributeEditorViewController headerMaskingView]
  -[AVTAvatarAttributeEditorViewController setHeaderMaskingView:]
  -[AVTAvatarAttributeEditorViewController attributesCollectionView]
  -[AVTAvatarAttributeEditorViewController setAttributesCollectionView:]
  -[AVTAvatarAttributeEditorViewController alphaAssetsLabel]
  -[AVTAvatarAttributeEditorViewController setAlphaAssetsLabel:]
  -[AVTAvatarAttributeEditorViewController verticleRuleContainer]
  -[AVTAvatarAttributeEditorViewController setVerticleRuleContainer:]
  -[AVTAvatarAttributeEditorViewController verticleRule]
  -[AVTAvatarAttributeEditorViewController setVerticleRule:]
  -[AVTAvatarAttributeEditorViewController collapsibleHeaderController]
  -[AVTAvatarAttributeEditorViewController setCollapsibleHeaderController:]
  -[AVTAvatarAttributeEditorViewController avtViewThrottler]
  -[AVTAvatarAttributeEditorViewController setAvtViewThrottler:]
  -[AVTAvatarAttributeEditorViewController setColorsState:]
  -[AVTAvatarAttributeEditorViewController hasMadeAnySelection]
  -[AVTAvatarAttributeEditorViewController setHasMadeAnySelection:]
  -[AVTAvatarAttributeEditorViewController transitioningContainer]
  -[AVTAvatarAttributeEditorViewController setTransitioningContainer:]
  -[AVTAvatarAttributeEditorViewController lastPosedAvatarImageRenderingTime]
  -[AVTAvatarAttributeEditorViewController setLastPosedAvatarImageRenderingTime:]
  -[AVTAvatarAttributeEditorViewController isAnimatingHighlight]
  -[AVTAvatarAttributeEditorViewController setIsAnimatingHighlight:]
  -[AVTAvatarAttributeEditorViewController pendingUnhighlightBlock]
  -[AVTAvatarAttributeEditorViewController setPendingUnhighlightBlock:]
  -[AVTAvatarAttributeEditorViewController headerPreviewImageRenderer]
  -[AVTAvatarAttributeEditorViewController setHeaderPreviewImageRenderer:]
  -[AVTAvatarAttributeEditorViewController headerPreviewScheduler]
  -[AVTAvatarAttributeEditorViewController collectionViewIsPerformingBatchUpdates]
  -[AVTAvatarAttributeEditorViewController setCollectionViewIsPerformingBatchUpdates:]
  -[AVTAvatarAttributeEditorViewController pendingCollectionViewReloadDataBlock]
  -[AVTAvatarAttributeEditorViewController setPendingCollectionViewReloadDataBlock:]
  -[AVTAvatarAttributeEditorViewController previewModeType]
  -[AVTAvatarAttributeEditorViewController setPreviewModeType:]
  -[AVTAvatarAttributeEditorViewController selectCategory:withCompletionDelay:completionHandler:]
  -[AVTAvatarAttributeEditorViewController configurePPTMemoji:]


AVTViewThrottler : NSObject <AVTDeviceResourceConsumer>
 @property  AVTView *avtView
 @property  <AVTUILogger> *logger
 @property  NSTimer *autoUnthrottlingTimer
 @property  BOOL throttling
 @property  <AVTDeviceResourceConsumerDelegate> *consumerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTViewThrottler logger]
  -[AVTViewThrottler throttle]
  -[AVTViewThrottler dealloc]
  -[AVTViewThrottler .cxx_destruct]
  -[AVTViewThrottler unthrottle]
  -[AVTViewThrottler avtView]
  -[AVTViewThrottler releaseRenderingResourceForEstimatedDuration:]
  -[AVTViewThrottler consumerDelegate]
  -[AVTViewThrottler setConsumerDelegate:]
  -[AVTViewThrottler initWithAVTView:environment:]
  -[AVTViewThrottler cancelAutoUnthrottling]
  -[AVTViewThrottler throttleForDelay:]
  -[AVTViewThrottler applyThrottling]
  -[AVTViewThrottler scheduleAutoUnthrottlingAfterDelay:]
  -[AVTViewThrottler autoUnthrottle]
  -[AVTViewThrottler autoUnthrottlingTimer]
  -[AVTViewThrottler setAutoUnthrottlingTimer:]
  -[AVTViewThrottler throttling]
  -[AVTViewThrottler setThrottling:]


AVTUINSURL : NSURL
  // instance methods


AVTStickerResource : NSObject <AVTCachedResource, NSSecureCoding>
 @property  AVTUINSURL *internalURL
 @property  BOOL prereleaseSticker
 @property  UIImage *image
 @property  NSURL *URL
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} clippingRect

  // class methods
  +[AVTStickerResource supportsSecureCoding]

  // instance methods
  -[AVTStickerResource encodeWithCoder:]
  -[AVTStickerResource setURL:]
  -[AVTStickerResource clippingRect]
  -[AVTStickerResource .cxx_destruct]
  -[AVTStickerResource image]
  -[AVTStickerResource URL]
  -[AVTStickerResource initWithCoder:]
  -[AVTStickerResource isPrereleaseSticker]
  -[AVTStickerResource setPrereleaseSticker:]
  -[AVTStickerResource initWithImage:URL:clippingRect:]
  -[AVTStickerResource internalURL]
  -[AVTStickerResource setInternalURL:]


AVTAvatarAttributeEditorSectionOptions : NSObject
 @property  NSString *framingMode
 @property  AVTAvatarPose *poseOverride
 @property  NSArray *presetOverrides
 @property  unsigned long displayMode
 @property  AVTStickerConfiguration *stickerConfiguration
 @property  BOOL showsLabel

  // instance methods
  -[AVTAvatarAttributeEditorSectionOptions displayMode]
  -[AVTAvatarAttributeEditorSectionOptions .cxx_destruct]
  -[AVTAvatarAttributeEditorSectionOptions showsLabel]
  -[AVTAvatarAttributeEditorSectionOptions framingMode]
  -[AVTAvatarAttributeEditorSectionOptions presetOverrides]
  -[AVTAvatarAttributeEditorSectionOptions poseOverride]
  -[AVTAvatarAttributeEditorSectionOptions stickerConfiguration]
  -[AVTAvatarAttributeEditorSectionOptions initWithFramingMode:poseOverride:presetOverrides:displayMode:stickerConfiguration:showsLabel:]
  -[AVTAvatarAttributeEditorSectionOptions stringForDisplayMode]


AVTAvatarAttributeEditorSectionColorDataSource : NSObject
 @property  long long selectedPrimaryColorIndex
 @property  long long selectedExtendedColorIndex
 @property  long long displayMode
 @property  long long selectedItemIndex
 @property  AVTAvatarAttributeEditorColorSection *colorSection
 @property  BOOL isShowingSlider
 @property  BOOL isShowingExtended
 @property  <AVTAvatarAttributeEditorSectionColorDataSourceDelegate> *delegate

  // class methods
  +[AVTAvatarAttributeEditorSectionColorDataSource selectedItemFromItems:]
  +[AVTAvatarAttributeEditorSectionColorDataSource indexOfItem:inItems:]

  // instance methods
  -[AVTAvatarAttributeEditorSectionColorDataSource displayMode]
  -[AVTAvatarAttributeEditorSectionColorDataSource setDelegate:]
  -[AVTAvatarAttributeEditorSectionColorDataSource numberOfItemsInSection:]
  -[AVTAvatarAttributeEditorSectionColorDataSource delegate]
  -[AVTAvatarAttributeEditorSectionColorDataSource .cxx_destruct]
  -[AVTAvatarAttributeEditorSectionColorDataSource selectedItemIndex]
  -[AVTAvatarAttributeEditorSectionColorDataSource setDisplayMode:]
  -[AVTAvatarAttributeEditorSectionColorDataSource init]
  -[AVTAvatarAttributeEditorSectionColorDataSource setColorSection:]
  -[AVTAvatarAttributeEditorSectionColorDataSource updateSelectedIndexesSelectingItem:fromUserInteraction:]
  -[AVTAvatarAttributeEditorSectionColorDataSource isShowingSlider]
  -[AVTAvatarAttributeEditorSectionColorDataSource isShowingExtended]
  -[AVTAvatarAttributeEditorSectionColorDataSource toggleSliderMode]
  -[AVTAvatarAttributeEditorSectionColorDataSource toggleExtendedMode]
  -[AVTAvatarAttributeEditorSectionColorDataSource resetToDefaultDisplayMode]
  -[AVTAvatarAttributeEditorSectionColorDataSource sectionItemAtIndex:]
  -[AVTAvatarAttributeEditorSectionColorDataSource selectSectionItemAtIndexPath:]
  -[AVTAvatarAttributeEditorSectionColorDataSource indexPathOfExtendedIcon]
  -[AVTAvatarAttributeEditorSectionColorDataSource colorSection]
  -[AVTAvatarAttributeEditorSectionColorDataSource selectedPrimaryColorIndex]
  -[AVTAvatarAttributeEditorSectionColorDataSource setSelectedPrimaryColorIndex:]
  -[AVTAvatarAttributeEditorSectionColorDataSource selectedExtendedColorIndex]
  -[AVTAvatarAttributeEditorSectionColorDataSource setSelectedExtendedColorIndex:]


AVTAvatarRecordImageProvider : NSObject
 @property  _AVTAvatarRecordImageProvider *backingProvider

  // instance methods
  -[AVTAvatarRecordImageProvider .cxx_destruct]
  -[AVTAvatarRecordImageProvider init]
  -[AVTAvatarRecordImageProvider imageForRecord:scope:]
  -[AVTAvatarRecordImageProvider imageForRecord:scope:handler:]
  -[AVTAvatarRecordImageProvider backingProvider]
  -[AVTAvatarRecordImageProvider initWithBackingProvider:]
  -[AVTAvatarRecordImageProvider imageForRecord:scope:usingService:]


AVTStickerConfigurationProvider : NSObject
 @property  NSCache *stickerConfigurationCache
 @property  AVTUIEnvironment *environment
 @property  NSArray<AVTStickerPack> *stickerPacks
 @property  NSArray *stickerConfigurationNames

  // instance methods
  -[AVTStickerConfigurationProvider .cxx_destruct]
  -[AVTStickerConfigurationProvider setEnvironment:]
  -[AVTStickerConfigurationProvider environment]
  -[AVTStickerConfigurationProvider initWithEnvironment:forStickerPacks:stickerConfigurationNames:]
  -[AVTStickerConfigurationProvider stickerConfigurationsForAvatarRecord:]
  -[AVTStickerConfigurationProvider stickerConfigurationForAvatarRecord:stickerName:]
  -[AVTStickerConfigurationProvider availableStickerNamesForAvatarRecord:]
  -[AVTStickerConfigurationProvider filteredStickerConfigurations:]
  -[AVTStickerConfigurationProvider stickerConfigurationCache]
  -[AVTStickerConfigurationProvider setStickerConfigurationCache:]
  -[AVTStickerConfigurationProvider stickerPacks]
  -[AVTStickerConfigurationProvider setStickerPacks:]
  -[AVTStickerConfigurationProvider stickerConfigurationNames]
  -[AVTStickerConfigurationProvider setStickerConfigurationNames:]


AVTAvatarListImageItem : NSObject <AVTAvatarListItem>
 @property  UIImage *image
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTAvatarListImageItem .cxx_destruct]
  -[AVTAvatarListImageItem title]
  -[AVTAvatarListImageItem image]
  -[AVTAvatarListImageItem isEqual:]
  -[AVTAvatarListImageItem initWithImage:title:]
  -[AVTAvatarListImageItem downcastWithRecordHandler:viewHandler:]
  -[AVTAvatarListImageItem downcastWithRecordHandler:imageHandler:viewHandler:]


AVTAvatarConfigurationImageRenderer : NSObject
 @property  AVTMemoji *avatar
 @property  AVTSnapshotBuilder *snapshotBuilder
 @property  <AVTUILogger> *logger
 @property  NSObject<OS_dispatch_queue> *snapshotBuilderQueue

  // instance methods
  -[AVTAvatarConfigurationImageRenderer logger]
  -[AVTAvatarConfigurationImageRenderer initWithEnvironment:]
  -[AVTAvatarConfigurationImageRenderer .cxx_destruct]
  -[AVTAvatarConfigurationImageRenderer avatar]
  -[AVTAvatarConfigurationImageRenderer snapshotBuilder]
  -[AVTAvatarConfigurationImageRenderer setSnapshotBuilder:]
  -[AVTAvatarConfigurationImageRenderer snapshotBuilderQueue]
  -[AVTAvatarConfigurationImageRenderer initWithEnvironment:avatar:]
  -[AVTAvatarConfigurationImageRenderer initWithSnapshotBuilder:avatar:lockProvider:logger:]
  -[AVTAvatarConfigurationImageRenderer imageForAvatarConfiguration:scope:]
  -[AVTAvatarConfigurationImageRenderer nts_imageForAvatarConfiguration:scope:]


AVTStickerRecentsStickerCollectionViewCell : UICollectionViewCell
 @property  UILabel *prereleaseLabel
 @property  UIImageView *imageView
 @property  NSString *title
 @property  NSUUID *displaySessionUUID
 @property  BOOL showPrereleaseSticker

  // class methods
  +[AVTStickerRecentsStickerCollectionViewCell identifier]

  // instance methods
  -[AVTStickerRecentsStickerCollectionViewCell .cxx_destruct]
  -[AVTStickerRecentsStickerCollectionViewCell prepareForReuse]
  -[AVTStickerRecentsStickerCollectionViewCell layoutSubviews]
  -[AVTStickerRecentsStickerCollectionViewCell title]
  -[AVTStickerRecentsStickerCollectionViewCell contentBounds]
  -[AVTStickerRecentsStickerCollectionViewCell initWithFrame:]
  -[AVTStickerRecentsStickerCollectionViewCell setTitle:]
  -[AVTStickerRecentsStickerCollectionViewCell imageView]
  -[AVTStickerRecentsStickerCollectionViewCell displaySessionUUID]
  -[AVTStickerRecentsStickerCollectionViewCell setDisplaySessionUUID:]
  -[AVTStickerRecentsStickerCollectionViewCell updateWithImage:]
  -[AVTStickerRecentsStickerCollectionViewCell showPrereleaseSticker]
  -[AVTStickerRecentsStickerCollectionViewCell setShowPrereleaseSticker:]
  -[AVTStickerRecentsStickerCollectionViewCell setupPrereleaseLabelIfNeeded]
  -[AVTStickerRecentsStickerCollectionViewCell prereleaseLabel]
  -[AVTStickerRecentsStickerCollectionViewCell updateWithDefaultImage]


AVTSimpleAvatarPicker : NSObject <AVTAvatarEditorViewControllerDelegate, AVTAvatarActionsViewControllerDelegate, AVTNotifyingContainerViewDelegate, UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, AVTObjectViewController, AVTAvatarPicker>
 @property  UIView *view
 @property  UICollectionView *collectionView
 @property  AVTEdgeDisappearingCollectionViewLayout *collectionViewLayout
 @property  AVTAvatarPickerDataSource *dataSource
 @property  AVTImageStore *imageStore
 @property  NSMutableDictionary *itemsToTasksMap
 @property  <AVTStickerTaskScheduler> *taskScheduler
 @property  _AVTAvatarRecordImageProvider *imageProvider
 @property  AVTViewSessionProvider *viewSessionProvider
 @property  AVTRenderingScope *renderingScope
 @property  AVTSimpleAvatarPickerHeaderView *headerView
 @property  BOOL allowEditing
 @property  double minimumInteritemSpacing
 @property  {UIEdgeInsets=dddd} contentInset
 @property  <AVTStickerViewControllerImageDelegate> *imageDelegate
 @property  BOOL shouldHideUserInfoView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTPresenterDelegate> *presenterDelegate
 @property  <AVTAvatarPickerDelegate> *avatarPickerDelegate

  // instance methods
  -[AVTSimpleAvatarPicker setCollectionView:]
  -[AVTSimpleAvatarPicker setContentInset:]
  -[AVTSimpleAvatarPicker collectionView:cellForItemAtIndexPath:]
  -[AVTSimpleAvatarPicker taskScheduler]
  -[AVTSimpleAvatarPicker collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[AVTSimpleAvatarPicker reloadData]
  -[AVTSimpleAvatarPicker dataSource]
  -[AVTSimpleAvatarPicker collectionViewLayout]
  -[AVTSimpleAvatarPicker collectionView:layout:insetForSectionAtIndex:]
  -[AVTSimpleAvatarPicker setHeaderView:]
  -[AVTSimpleAvatarPicker collectionView:shouldSelectItemAtIndexPath:]
  -[AVTSimpleAvatarPicker numberOfSectionsInCollectionView:]
  -[AVTSimpleAvatarPicker setPresenterDelegate:]
  -[AVTSimpleAvatarPicker view]
  -[AVTSimpleAvatarPicker headerView]
  -[AVTSimpleAvatarPicker collectionView:layout:sizeForItemAtIndexPath:]
  -[AVTSimpleAvatarPicker collectionView:canFocusItemAtIndexPath:]
  -[AVTSimpleAvatarPicker .cxx_destruct]
  -[AVTSimpleAvatarPicker collectionView]
  -[AVTSimpleAvatarPicker itemSize]
  -[AVTSimpleAvatarPicker loadView]
  -[AVTSimpleAvatarPicker collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[AVTSimpleAvatarPicker collectionView:layout:referenceSizeForHeaderInSection:]
  -[AVTSimpleAvatarPicker collectionView:didUnhighlightItemAtIndexPath:]
  -[AVTSimpleAvatarPicker collectionView:didHighlightItemAtIndexPath:]
  -[AVTSimpleAvatarPicker imageProvider]
  -[AVTSimpleAvatarPicker setView:]
  -[AVTSimpleAvatarPicker setDataSource:]
  -[AVTSimpleAvatarPicker contentInset]
  -[AVTSimpleAvatarPicker collectionView:didSelectItemAtIndexPath:]
  -[AVTSimpleAvatarPicker collectionView:numberOfItemsInSection:]
  -[AVTSimpleAvatarPicker presenterDelegate]
  -[AVTSimpleAvatarPicker setCollectionViewLayout:]
  -[AVTSimpleAvatarPicker setMinimumInteritemSpacing:]
  -[AVTSimpleAvatarPicker minimumInteritemSpacing]
  -[AVTSimpleAvatarPicker canCreateAvatar]
  -[AVTSimpleAvatarPicker avatarEditorViewController:didFinishWithAvatarRecord:]
  -[AVTSimpleAvatarPicker avatarEditorViewControllerDidCancel:]
  -[AVTSimpleAvatarPicker renderingScope]
  -[AVTSimpleAvatarPicker reloadDataSource]
  -[AVTSimpleAvatarPicker setAllowEditing:]
  -[AVTSimpleAvatarPicker allowEditing]
  -[AVTSimpleAvatarPicker imageDelegate]
  -[AVTSimpleAvatarPicker setImageDelegate:]
  -[AVTSimpleAvatarPicker imageStore]
  -[AVTSimpleAvatarPicker shouldHideUserInfoView]
  -[AVTSimpleAvatarPicker setShouldHideUserInfoView:]
  -[AVTSimpleAvatarPicker notifyingContainerViewWillChangeSize:]
  -[AVTSimpleAvatarPicker notifyingContainerViewDidChangeSize:]
  -[AVTSimpleAvatarPicker setImageStore:]
  -[AVTSimpleAvatarPicker wrapAndPresentViewController:animated:]
  -[AVTSimpleAvatarPicker viewSessionProvider]
  -[AVTSimpleAvatarPicker avatarActionsViewController:recordUpdateForDeletingRecord:]
  -[AVTSimpleAvatarPicker avatarActionsViewControllerDidFinish:]
  -[AVTSimpleAvatarPicker selectAvatarRecordWithIdentifier:animated:]
  -[AVTSimpleAvatarPicker avatarPickerDelegate]
  -[AVTSimpleAvatarPicker setAvatarPickerDelegate:]
  -[AVTSimpleAvatarPicker initWithStore:environment:allowAddItem:]
  -[AVTSimpleAvatarPicker initWithDataSource:recordImageProvider:avtViewSessionProvider:taskScheduler:allowEditing:]
  -[AVTSimpleAvatarPicker renderThumbnailsIfNeeded]
  -[AVTSimpleAvatarPicker indexForSelectedAvatar]
  -[AVTSimpleAvatarPicker selectedAvatar]
  -[AVTSimpleAvatarPicker shouldShowHeaderButton]
  -[AVTSimpleAvatarPicker viewForAddItem]
  -[AVTSimpleAvatarPicker headerViewButtonPressed]
  -[AVTSimpleAvatarPicker actionsModelForRecord:]
  -[AVTSimpleAvatarPicker presentActionsForAvatarRecord:]
  -[AVTSimpleAvatarPicker presentMemojiEditorForCreation]
  -[AVTSimpleAvatarPicker deselectPreviousSelectedItemExcludingIndexPath:]
  -[AVTSimpleAvatarPicker updateHeaderButtonForSelectedAvatar:invalidateLayout:animated:]
  -[AVTSimpleAvatarPicker currentCellForRecordItem:atIndexPath:displaySessionUUID:previousCell:]
  -[AVTSimpleAvatarPicker scheduleRenderingTask:forRecordItem:]
  -[AVTSimpleAvatarPicker currentRenderingTaskForRecordItem:]
  -[AVTSimpleAvatarPicker registerRenderingTask:forRecordItem:]
  -[AVTSimpleAvatarPicker cancelCurrentRenderingTaskForRecordItem:]
  -[AVTSimpleAvatarPicker unregisterCurrentRenderingTaskForRecordItem:]
  -[AVTSimpleAvatarPicker isItemAtIndexPathOffscreen:]
  -[AVTSimpleAvatarPicker updateCell:withImage:animated:]
  -[AVTSimpleAvatarPicker itemsToTasksMap]
  -[AVTSimpleAvatarPicker setItemsToTasksMap:]
  -[AVTSimpleAvatarPicker presentActionsForAvatarForPPT:]


AVTConcurrentTransitionScheduler : NSObject <AVTTransitionScheduler>
 @property  NSTimer *transitionTimer
 @property  double delay
 @property  @? eventHandler

  // instance methods
  -[AVTConcurrentTransitionScheduler eventHandler]
  -[AVTConcurrentTransitionScheduler .cxx_destruct]
  -[AVTConcurrentTransitionScheduler stop]
  -[AVTConcurrentTransitionScheduler delay]
  -[AVTConcurrentTransitionScheduler initWithEventHandler:]
  -[AVTConcurrentTransitionScheduler transitionTimer]
  -[AVTConcurrentTransitionScheduler setTransitionTimer:]
  -[AVTConcurrentTransitionScheduler scheduleEvent]
  -[AVTConcurrentTransitionScheduler didCompleteEvent]
  -[AVTConcurrentTransitionScheduler initWithEventHandler:delay:]
  -[AVTConcurrentTransitionScheduler scheduleTransitionTimer]


AVTImageStore : NSObject <AVTImageCache>
 @property  NSFileManager *fileManager
 @property  <AVTImageEncoder> *imageEncoder
 @property  NSObject<OS_dispatch_queue> *stateLock
 @property  <AVTUILogger> *logger
 @property  BOOL validateImages
 @property  NSURL *location
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTImageStore clearContentAtLocation:logger:]
  +[AVTImageStore resourceURLForItem:scope:baseURL:encoder:]

  // instance methods
  -[AVTImageStore logger]
  -[AVTImageStore .cxx_destruct]
  -[AVTImageStore stateLock]
  -[AVTImageStore fileManager]
  -[AVTImageStore location]
  -[AVTImageStore resourceForItem:scope:]
  -[AVTImageStore resourceForItem:scope:cacheMissHandler:]
  -[AVTImageStore resourceExistsInCacheForItem:scope:]
  -[AVTImageStore performStateWork:]
  -[AVTImageStore saveImage:withImageData:forItem:scope:error:]
  -[AVTImageStore imageEncoder]
  -[AVTImageStore imageForItem:scope:]
  -[AVTImageStore imageForItem:scope:cacheMissHandler:]
  -[AVTImageStore initWithEnvironment:validateImages:location:]
  -[AVTImageStore initWithEnvironment:validateImages:location:encoder:]
  -[AVTImageStore createDirectoryIfNeeded:]
  -[AVTImageStore resourceURLForItem:scope:]
  -[AVTImageStore saveImage:forItem:scope:error:]
  -[AVTImageStore deleteImagesForItemsWithPersistentIdentifierPrefix:error:]
  -[AVTImageStore copyImagesForPersistentIdentifierPrefix:toPersistentIdentifierPrefix:error:]
  -[AVTImageStore imageForItem:scope:error:]
  -[AVTImageStore applyFileProtectionForResourceAtURL:error:]
  -[AVTImageStore _imageForItem:scope:cacheMissHandler:]
  -[AVTImageStore validateImages]


AVTZIndexEngagementListCollectionViewLayout : AVTEngagementListCollectionViewLayout
 @property  UICollectionViewUpdateItem *currentUpdateItem
 @property  double minAlphaFactor
 @property  AVTUIEnvironment *environment
 @property  NSIndexPath *backIndexPath
 @property  NSIndexPath *plusButtonIndexPath

  // instance methods
  -[AVTZIndexEngagementListCollectionViewLayout finalLayoutAttributesForDisappearingItemAtIndexPath:]
  -[AVTZIndexEngagementListCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[AVTZIndexEngagementListCollectionViewLayout layoutAttributesForElementsInRect:]
  -[AVTZIndexEngagementListCollectionViewLayout initialLayoutAttributesForAppearingItemAtIndexPath:]
  -[AVTZIndexEngagementListCollectionViewLayout .cxx_destruct]
  -[AVTZIndexEngagementListCollectionViewLayout setEnvironment:]
  -[AVTZIndexEngagementListCollectionViewLayout environment]
  -[AVTZIndexEngagementListCollectionViewLayout prepareForCollectionViewUpdates:]
  -[AVTZIndexEngagementListCollectionViewLayout finalizeCollectionViewUpdates]
  -[AVTZIndexEngagementListCollectionViewLayout engagementInsetsForCollectionViewBounds:]
  -[AVTZIndexEngagementListCollectionViewLayout initWithEngagementLayout:minAlphaFactor:environment:]
  -[AVTZIndexEngagementListCollectionViewLayout setBackIndexPath:]
  -[AVTZIndexEngagementListCollectionViewLayout setPlusButtonIndexPath:]
  -[AVTZIndexEngagementListCollectionViewLayout zIndexForElementWithAttributes:]
  -[AVTZIndexEngagementListCollectionViewLayout alphaForElementWithAttributes:]
  -[AVTZIndexEngagementListCollectionViewLayout alphaForPadElementWithEngagement:]
  -[AVTZIndexEngagementListCollectionViewLayout backIndexPath]
  -[AVTZIndexEngagementListCollectionViewLayout plusButtonIndexPath]
  -[AVTZIndexEngagementListCollectionViewLayout currentUpdateItem]
  -[AVTZIndexEngagementListCollectionViewLayout setCurrentUpdateItem:]
  -[AVTZIndexEngagementListCollectionViewLayout minAlphaFactor]
  -[AVTZIndexEngagementListCollectionViewLayout setMinAlphaFactor:]


AVTPresetResources : NSObject <AVTCacheableResource>
 @property  AVTPreset *preset
 @property  NSString *presetIdentifier
 @property  id resources
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTPresetResources resources]
  -[AVTPresetResources preset]
  -[AVTPresetResources .cxx_destruct]
  -[AVTPresetResources initWithPreset:]
  -[AVTPresetResources requiresEncryption]
  -[AVTPresetResources volatileIdentifierForScope:]
  -[AVTPresetResources costForScope:]
  -[AVTPresetResources presetIdentifier]


AVTEditingModelColors : NSObject <NSCopying>
 @property  NSDictionary *storage
 @property  AVTAvatarColorVariationStore *variationStore

  // class methods
  +[AVTEditingModelColors buildAllColors]
  +[AVTEditingModelColors createColorsForPaletteCategory:inCache:withDerivedPaletteCategories:]

  // instance methods
  -[AVTEditingModelColors storage]
  -[AVTEditingModelColors .cxx_destruct]
  -[AVTEditingModelColors copyWithZone:]
  -[AVTEditingModelColors init]
  -[AVTEditingModelColors variationStore]
  -[AVTEditingModelColors setVariationStore:]
  -[AVTEditingModelColors initWithStorage:variationStore:]
  -[AVTEditingModelColors colorForSettingKind:identifier:]
  -[AVTEditingModelColors colorsForSettingKind:]
  -[AVTEditingModelColors colorHasDerivedColorDependency:]


AVTMutableEditingModelColors : AVTEditingModelColors
 @property  NSMutableDictionary *mutableStorage

  // instance methods
  -[AVTMutableEditingModelColors .cxx_destruct]
  -[AVTMutableEditingModelColors initWithVariationStore:]
  -[AVTMutableEditingModelColors initWithStorage:variationStore:]
  -[AVTMutableEditingModelColors setColor:forSettingKind:identifier:]
  -[AVTMutableEditingModelColors mutableStorage]


AVTEngagementLayout : NSObject <AVTCollectionViewLayout>
 @property  {CGSize=dd} defaultCellSize
 @property  {CGSize=dd} engagedCellSize
 @property  {UIEdgeInsets=dddd} engagementBoundsInsets
 @property  BOOL useEngagementSpacing
 @property  @? interItemSpacingProvider

  // class methods
  +[AVTEngagementLayout minimumInterItemSpacingForVisibileBoundsSize:defaultCellSize:engagedCellSize:]
  +[AVTEngagementLayout insetsToCenterFirstAndLastItemsGivenContainerSize:itemSize:]

  // instance methods
  -[AVTEngagementLayout .cxx_destruct]
  -[AVTEngagementLayout frameForElementAtIndex:visibleBounds:]
  -[AVTEngagementLayout indexesForElementsInRect:visibleBounds:numberOfItems:]
  -[AVTEngagementLayout centerForCenteringElementAtIndex:visibleBoundsSize:proposedOrigin:]
  -[AVTEngagementLayout contentSizeForVisibleBounds:numberOfItems:]
  -[AVTEngagementLayout initialFrameForAppearingElementAtOriginForVisibleBounds:]
  -[AVTEngagementLayout finalFrameForDisappearingElementAtOriginForVisibleBounds:]
  -[AVTEngagementLayout engagedCellSize]
  -[AVTEngagementLayout initWithDefaultCellSize:engagedCellSize:baseInteritemSpacing:]
  -[AVTEngagementLayout initWithDefaultCellSize:engagedCellSize:interItemSpacingProvider:]
  -[AVTEngagementLayout initWithDefaultCellSize:engagedCellSize:useEngagementSpacing:interItemSpacingProvider:]
  -[AVTEngagementLayout engagementBoundsForContainerBounds:]
  -[AVTEngagementLayout engagementSizeForVisibleBoundsSize:]
  -[AVTEngagementLayout xAxisScale]
  -[AVTEngagementLayout contentOriginXForVisibleSize:]
  -[AVTEngagementLayout contentTrailingXForVisibleSize:]
  -[AVTEngagementLayout frameForElementAtIndex:visibleBounds:engagementBounds:verticalBounds:]
  -[AVTEngagementLayout frameForElementAfterElementEndingAt:engagementBounds:verticalBounds:]
  -[AVTEngagementLayout spacingAfterElementEndingAt:engagementBounds:]
  -[AVTEngagementLayout frameForElementBeforeElementStartingAt:engagementBounds:verticalBounds:]
  -[AVTEngagementLayout spacingBeforElementStartingAt:engagementBounds:]
  -[AVTEngagementLayout engagementForValue:withRangeMin:rangeMax:rangePeak:]
  -[AVTEngagementLayout engagementForValue:withRangeMin:rangeMax:rangePeakBegin:rangePeakEnd:]
  -[AVTEngagementLayout cellSizeForEngagement:]
  -[AVTEngagementLayout interitemSpacingForEngagement:]
  -[AVTEngagementLayout frameForElementBeforeOriginForVisibleBounds:]
  -[AVTEngagementLayout defaultCellSize]
  -[AVTEngagementLayout engagementBoundsInsets]
  -[AVTEngagementLayout setEngagementBoundsInsets:]
  -[AVTEngagementLayout useEngagementSpacing]
  -[AVTEngagementLayout setUseEngagementSpacing:]
  -[AVTEngagementLayout interItemSpacingProvider]


AVTUIStyle : NSObject
 @property  UIColor *backgroundColor
 @property  UIColor *textColor

  // class methods
  +[AVTUIStyle darkStyle]
  +[AVTUIStyle lightStyle]

  // instance methods
  -[AVTUIStyle setTextColor:]
  -[AVTUIStyle .cxx_destruct]
  -[AVTUIStyle backgroundColor]
  -[AVTUIStyle setBackgroundColor:]
  -[AVTUIStyle textColor]


AVTAvatarAttributeEditorMulticolorPickerSection : NSObject <AVTAvatarAttributeEditorSection>
 @property  NSArray *items
 @property  NSString *localizedName
 @property  NSArray *sectionItems
 @property  NSString *identifier
 @property  AVTAvatarAttributeEditorSectionOptions *options
 @property  unsigned long intendedDestination
 @property  {UIEdgeInsets=dddd} separatorInsets
 @property  <AVTAvatarAttributeEditorSectionSupplementalPicker> *supplementalPicker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *sections

  // instance methods
  -[AVTAvatarAttributeEditorMulticolorPickerSection setLocalizedName:]
  -[AVTAvatarAttributeEditorMulticolorPickerSection identifier]
  -[AVTAvatarAttributeEditorMulticolorPickerSection .cxx_destruct]
  -[AVTAvatarAttributeEditorMulticolorPickerSection options]
  -[AVTAvatarAttributeEditorMulticolorPickerSection items]
  -[AVTAvatarAttributeEditorMulticolorPickerSection localizedName]
  -[AVTAvatarAttributeEditorMulticolorPickerSection sectionItems]
  -[AVTAvatarAttributeEditorMulticolorPickerSection sections]
  -[AVTAvatarAttributeEditorMulticolorPickerSection shouldDisplayTitle]
  -[AVTAvatarAttributeEditorMulticolorPickerSection separatorInsets]
  -[AVTAvatarAttributeEditorMulticolorPickerSection shouldDisplaySeparatorBeforeSection:]
  -[AVTAvatarAttributeEditorMulticolorPickerSection intendedDestination]
  -[AVTAvatarAttributeEditorMulticolorPickerSection setIntendedDestination:]
  -[AVTAvatarAttributeEditorMulticolorPickerSection supplementalPicker]
  -[AVTAvatarAttributeEditorMulticolorPickerSection setSupplementalPicker:]
  -[AVTAvatarAttributeEditorMulticolorPickerSection initWithIdentifier:localizedName:items:]


AVTAvatarToLiveTransition : AVTTransition
 @property  <AVTAvatarTransitionModel> *avatarTransitionModel

  // instance methods
  -[AVTAvatarToLiveTransition model]
  -[AVTAvatarToLiveTransition .cxx_destruct]
  -[AVTAvatarToLiveTransition performTransition]
  -[AVTAvatarToLiveTransition initWithModel:animated:setupHandler:completionHandler:logger:]
  -[AVTAvatarToLiveTransition avatarTransitionModel]


AVTAvatarCellToLiveTransition : AVTTransition
 @property  <AVTAvatarTransitionModel> *avatarTransitionModel

  // instance methods
  -[AVTAvatarCellToLiveTransition model]
  -[AVTAvatarCellToLiveTransition .cxx_destruct]
  -[AVTAvatarCellToLiveTransition performTransition]
  -[AVTAvatarCellToLiveTransition initWithModel:animated:setupHandler:completionHandler:logger:]
  -[AVTAvatarCellToLiveTransition avatarTransitionModel]


AVTAvatarToStaticTransition : AVTTransition
 @property  <AVTAvatarTransitionModel> *avatarTransitionModel

  // instance methods
  -[AVTAvatarToStaticTransition model]
  -[AVTAvatarToStaticTransition .cxx_destruct]
  -[AVTAvatarToStaticTransition performTransition]
  -[AVTAvatarToStaticTransition avatarTransitionModel]
  -[AVTAvatarToStaticTransition initWithModel:animated:completionHandler:logger:]


AVTAvatarCellToStaticTransition : AVTTransition
 @property  <AVTAvatarTransitionModel> *avatarTransitionModel

  // instance methods
  -[AVTAvatarCellToStaticTransition model]
  -[AVTAvatarCellToStaticTransition .cxx_destruct]
  -[AVTAvatarCellToStaticTransition performTransition]
  -[AVTAvatarCellToStaticTransition avatarTransitionModel]
  -[AVTAvatarCellToStaticTransition initWithModel:animated:completionHandler:logger:]


_AVTAvatarToStaticNoTransition : AVTTransition
 @property  <AVTAvatarTransitionModel> *avatarTransitionModel

  // instance methods
  -[_AVTAvatarToStaticNoTransition model]
  -[_AVTAvatarToStaticNoTransition .cxx_destruct]
  -[_AVTAvatarToStaticNoTransition performTransition]
  -[_AVTAvatarToStaticNoTransition avatarTransitionModel]
  -[_AVTAvatarToStaticNoTransition initWithModel:animated:completionHandler:logger:]


_AVTAvatarToLiveNoTransition : AVTTransition
 @property  <AVTAvatarTransitionModel> *avatarTransitionModel

  // instance methods
  -[_AVTAvatarToLiveNoTransition model]
  -[_AVTAvatarToLiveNoTransition .cxx_destruct]
  -[_AVTAvatarToLiveNoTransition avatarTransitionModel]
  -[_AVTAvatarToLiveNoTransition initWithModel:animated:completionHandler:logger:]
  -[_AVTAvatarToLiveNoTransition _startTransition]


AVTSingleAvatarController : NSObject <AVTAvatarTransitionModel, AVTAvatarDisplayingController>
 @property  AVTAdaptativeLayoutView *view
 @property  AVTImageTransitioningContainerView *transitioningContainer
 @property  <AVTAvatarRecord> *displayedRecord
 @property  AVTViewSession *avtViewSession
 @property  _AVTAvatarRecordImageProvider *thumbnailRenderer
 @property  AVTRenderingScope *renderingScope
 @property  <AVTUILogger> *logger
 @property  <AVTTransition> *currentTransition
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTAvatarDisplayingControllerDelegate> *delegate
 @property  <AVTPresenterDelegate> *presenterDelegate

  // instance methods
  -[AVTSingleAvatarController logger]
  -[AVTSingleAvatarController reloadData]
  -[AVTSingleAvatarController setDelegate:]
  -[AVTSingleAvatarController delegate]
  -[AVTSingleAvatarController setPresenterDelegate:]
  -[AVTSingleAvatarController view]
  -[AVTSingleAvatarController .cxx_destruct]
  -[AVTSingleAvatarController viewDidLoad]
  -[AVTSingleAvatarController loadView]
  -[AVTSingleAvatarController setView:]
  -[AVTSingleAvatarController setCurrentTransition:]
  -[AVTSingleAvatarController currentTransition]
  -[AVTSingleAvatarController presenterDelegate]
  -[AVTSingleAvatarController isViewLoaded]
  -[AVTSingleAvatarController initWithDataSource:environment:]
  -[AVTSingleAvatarController renderingScope]
  -[AVTSingleAvatarController liveView]
  -[AVTSingleAvatarController avtViewSession]
  -[AVTSingleAvatarController setAvtViewSession:]
  -[AVTSingleAvatarController prepareViewWithLayout:]
  -[AVTSingleAvatarController stopUsingAVTViewSessionSynchronously:completionHandler:]
  -[AVTSingleAvatarController displayedRecord]
  -[AVTSingleAvatarController setDisplayedRecord:]
  -[AVTSingleAvatarController useAVTViewFromSession:withLayout:]
  -[AVTSingleAvatarController prepareToTransitionToVisible:completionHandler:]
  -[AVTSingleAvatarController displayAvatarForRecord:animated:]
  -[AVTSingleAvatarController thumbnailRenderer]
  -[AVTSingleAvatarController transitionStaticViewToFront]
  -[AVTSingleAvatarController transitionLiveViewToFront]
  -[AVTSingleAvatarController applyBaseAlpha]
  -[AVTSingleAvatarController applyFullAlpha]
  -[AVTSingleAvatarController transitioningContainer]
  -[AVTSingleAvatarController setTransitioningContainer:]
  -[AVTSingleAvatarController updateImageViewWithDisplayedRecord]
  -[AVTSingleAvatarController updateImageViewWithAVTViewSnapshot]
  -[AVTSingleAvatarController transitionToOtherDisplayedRecord]
  -[AVTSingleAvatarController transitionToShowingDisplayedRecordWithCompletionHandler:]
  -[AVTSingleAvatarController setThumbnailRenderer:]


AVTAvatarAttributeEditorLayoutProvider : NSObject
  // class methods
  +[AVTAvatarAttributeEditorLayoutProvider shouldShowSideGroupPickerForContainerSize:forEnvironment:]
  +[AVTAvatarAttributeEditorLayoutProvider defaultLayoutInContainerOfSize:insets:userInfoViewHeight:RTL:environment:]
  +[AVTAvatarAttributeEditorLayoutProvider defaultLayoutInContainerOfSize:insets:userInfoViewHeight:RTL:environment:maxGroupLabelWidth:]
  +[AVTAvatarAttributeEditorLayoutProvider actionsToEditorTransitionStartingLayoutInContainerOfSize:attributesContentViewExtraHeight:insets:userInfoViewHeight:RTL:avatarViewStartFrame:avatarViewAlpha:environment:]
  +[AVTAvatarAttributeEditorLayoutProvider editorToActionsTransitionStartingLayoutInContainerOfSize:insets:userInfoViewHeight:RTL:environment:]


AVTResourceCacheSupport : NSObject
  // class methods
  +[AVTResourceCacheSupport resourceFromCache:forItem:scope:preflightCacheMissHandler:cacheMissHandler:cacheMissQueue:taskScheduler:callbackQueue:resourceHandler:]
  +[AVTResourceCacheSupport resourceFromCache:forItem:scope:preflightCacheMissHandler:cacheMissWithCompletionHandler:cacheMissQueue:taskScheduler:callbackQueue:resourceHandler:]


AVTUIAnimatingImageView : UIView
 @property  UIImageView *imageView
 @property  UIImageView *fadeInImageView
 @property  UIImage *image

  // instance methods
  -[AVTUIAnimatingImageView setContinuousCornerRadius:]
  -[AVTUIAnimatingImageView .cxx_destruct]
  -[AVTUIAnimatingImageView image]
  -[AVTUIAnimatingImageView setContentMode:]
  -[AVTUIAnimatingImageView initWithFrame:]
  -[AVTUIAnimatingImageView setImage:animated:]
  -[AVTUIAnimatingImageView setImage:]
  -[AVTUIAnimatingImageView imageView]
  -[AVTUIAnimatingImageView fadeInImageView]


AVTAvatarActionsMenuController : NSObject <AVTAvatarActionsModelDelegate, AVTAvatarEditorViewControllerDelegate, AVTAvatarActionsController>
 @property  AVTAvatarRecordDataSource *dataSource
 @property  AVTAvatarActionsProvider *actionsModel
 @property  UIMenu *actionsMenu
 @property  AVTAvatarEditorViewController *editorViewController
 @property  AVTViewSessionProvider *avtViewSessionProvider
 @property  AVTUIEnvironment *environment
 @property  BOOL isCreatingAvatar
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTAvatarActionsControllerDelegate> *delegate

  // instance methods
  -[AVTAvatarActionsMenuController dataSource]
  -[AVTAvatarActionsMenuController setDelegate:]
  -[AVTAvatarActionsMenuController delegate]
  -[AVTAvatarActionsMenuController .cxx_destruct]
  -[AVTAvatarActionsMenuController setDataSource:]
  -[AVTAvatarActionsMenuController environment]
  -[AVTAvatarActionsMenuController avatarEditorViewController:didFinishWithAvatarRecord:]
  -[AVTAvatarActionsMenuController avatarEditorViewControllerDidCancel:]
  -[AVTAvatarActionsMenuController actionsModel]
  -[AVTAvatarActionsMenuController setActionsModel:]
  -[AVTAvatarActionsMenuController actionsMenu]
  -[AVTAvatarActionsMenuController setActionsMenu:]
  -[AVTAvatarActionsMenuController avtViewSessionProvider]
  -[AVTAvatarActionsMenuController performCreateForActionsModel:]
  -[AVTAvatarActionsMenuController performEditForActionsModel:]
  -[AVTAvatarActionsMenuController performDuplicateForActionsModel:]
  -[AVTAvatarActionsMenuController performDeleteForActionsModel:]
  -[AVTAvatarActionsMenuController updateWithActionsModel:]
  -[AVTAvatarActionsMenuController updateForChangedContentCategorySize]
  -[AVTAvatarActionsMenuController initWithDataSource:avtViewProvider:environment:]
  -[AVTAvatarActionsMenuController presentEditor:forCreating:]
  -[AVTAvatarActionsMenuController editorViewController]
  -[AVTAvatarActionsMenuController setEditorViewController:]
  -[AVTAvatarActionsMenuController isCreatingAvatar]
  -[AVTAvatarActionsMenuController setIsCreatingAvatar:]
  -[AVTAvatarActionsMenuController confirmShouldDeleteRecord:resultBlock:]


AVTMinimumContentSizeCollectionViewLayout : UICollectionViewFlowLayout
 @property  {CGSize=dd} minimumContentSize

  // instance methods
  -[AVTMinimumContentSizeCollectionViewLayout collectionViewContentSize]
  -[AVTMinimumContentSizeCollectionViewLayout minimumContentSize]
  -[AVTMinimumContentSizeCollectionViewLayout setMinimumContentSize:]


AVTAvatarRecordDataSource : NSObject <AVTAvatarRecordDataSource>
 @property  AVTPAvatarRecordDataSource *persistenceAvatarRecordDataSource
 @property  AVTAvatarStore *avatarStore
 @property  AVTAvatarStore *observableWrappedAvatarStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVTAvatarRecordDataSource defaultUIDataSourceWithDomainIdentifier:]

  // instance methods
  -[AVTAvatarRecordDataSource numberOfRecords]
  -[AVTAvatarRecordDataSource addObserver:]
  -[AVTAvatarRecordDataSource .cxx_destruct]
  -[AVTAvatarRecordDataSource addPriorityObserver:]
  -[AVTAvatarRecordDataSource removeObserver:]
  -[AVTAvatarRecordDataSource avatarStore]
  -[AVTAvatarRecordDataSource setAvatarStore:]
  -[AVTAvatarRecordDataSource recordStore]
  -[AVTAvatarRecordDataSource recordAtIndex:]
  -[AVTAvatarRecordDataSource indexesOfRecordsPassingTest:]
  -[AVTAvatarRecordDataSource indexOfRecordPassingTest:]
  -[AVTAvatarRecordDataSource indexSetForEditableRecords]
  -[AVTAvatarRecordDataSource initWithRecordStore:fetchRequest:]
  -[AVTAvatarRecordDataSource initWithRecordStore:fetchRequest:environment:]
  -[AVTAvatarRecordDataSource internalRecordStore]
  -[AVTAvatarRecordDataSource flushRecordsForEnteringBackground]
  -[AVTAvatarRecordDataSource persistenceAvatarRecordDataSource]
  -[AVTAvatarRecordDataSource setPersistenceAvatarRecordDataSource:]
  -[AVTAvatarRecordDataSource observableWrappedAvatarStore]
  -[AVTAvatarRecordDataSource setObservableWrappedAvatarStore:]


AVTCameraItemView : UIView
 @property  CAShapeLayer *shapeLayer
 @property  UIImageView *imageView
 @property  UIImageSymbolConfiguration *cameraConfiguration

  // instance methods
  -[AVTCameraItemView setCameraConfiguration:]
  -[AVTCameraItemView setImageView:]
  -[AVTCameraItemView .cxx_destruct]
  -[AVTCameraItemView setShapeLayer:]
  -[AVTCameraItemView layoutSubviews]
  -[AVTCameraItemView cameraConfiguration]
  -[AVTCameraItemView shapeLayer]
  -[AVTCameraItemView initWithFrame:]
  -[AVTCameraItemView imageView]
  -[AVTCameraItemView updateCameraImage]


AVTAvatarSettingKindValue : NSObject <NSCopying>
 @property  {?=qq} settingKind

  // class methods
  +[AVTAvatarSettingKindValue valueWithSettingKind:]

  // instance methods
  -[AVTAvatarSettingKindValue copyWithZone:]
  -[AVTAvatarSettingKindValue isEqual:]
  -[AVTAvatarSettingKindValue settingKind]
  -[AVTAvatarSettingKindValue initWithSettingKind:]


AVTAvatarAttributeEditorSectionCoordinator : NSObject <AVTAvatarAttributeEditorControllerSubSelectionDelegate>
 @property  NSMutableDictionary *sectionControllers
 @property  <AVTAvatarAttributeEditorControllerSubSelectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTAvatarAttributeEditorSectionCoordinator sectionControllers]
  -[AVTAvatarAttributeEditorSectionCoordinator setDelegate:]
  -[AVTAvatarAttributeEditorSectionCoordinator delegate]
  -[AVTAvatarAttributeEditorSectionCoordinator .cxx_destruct]
  -[AVTAvatarAttributeEditorSectionCoordinator init]
  -[AVTAvatarAttributeEditorSectionCoordinator setSectionControllers:]
  -[AVTAvatarAttributeEditorSectionCoordinator attributeEditorSectionController:didSelectSectionItem:]
  -[AVTAvatarAttributeEditorSectionCoordinator attributeEditorSectionController:didDeleteSectionItems:]
  -[AVTAvatarAttributeEditorSectionCoordinator attributeEditorSectionController:didUpdateSectionItem:]
  -[AVTAvatarAttributeEditorSectionCoordinator attributeEditorSectionControllerNeedsLayoutUpdate:]
  -[AVTAvatarAttributeEditorSectionCoordinator isCoordinatingForSectionController:]
  -[AVTAvatarAttributeEditorSectionCoordinator addSectionController:]
  -[AVTAvatarAttributeEditorSectionCoordinator removeSectionController:]


AVTATXImageIOImageEncoder : AVTImageIOImageEncoder
  // class methods
  +[AVTATXImageIOImageEncoder typeIdentifier]
  +[AVTATXImageIOImageEncoder addImageOptions]

  // instance methods
  -[AVTATXImageIOImageEncoder fileExtension]


AVTStickerViewController : UIViewController <AVTStickerPagingControllerDelegate, AVTStickerPagingControllerDelegate, AVTAvatarPickerDelegate, AVTAvatarRecordDataSourceObserver, AVTPresenterDelegate, AVTPaddleViewDelegate, AVTObjectViewController, AVTUIViewSnapshotProvider>
 @property  <AVTAvatarStore> *store
 @property  AVTAvatarRecordDataSource *recordDataSource
 @property  AVTUIEnvironment *environment
 @property  <AVTUILogger> *logger
 @property  BOOL allowPeel
 @property  AVTAvatarPickerDataSource *avatarPickerDataSource
 @property  AVTSimpleAvatarPicker *avatarPicker
 @property  AVTStickerPagingController *pagingController
 @property  NSString *selectedRecordIdentifier
 @property  AVTPaddleView *paddleView
 @property  AVTStickerTaskScheduler *taskScheduler
 @property  AVTViewSessionProvider *viewSessionProvider
 @property  NSArray<AVTStickerPack> *stickerPacks
 @property  NSArray *stickerConfigurationNames
 @property  <AVTStickerDisclosureValidationDelegate> *disclosureValidationDelegate
 @property  <AVTStickerViewControllerImageDelegate> *imageDelegate
 @property  <AVTStickerSelectionDelegate> *stickerSelectionDelegate
 @property  <AVTStickerSheetControllerProvider> *stickerSheetControllerProvider
 @property  BOOL allowEditing
 @property  BOOL shouldHideUserInfoView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *view
 @property  <AVTPresenterDelegate> *presenterDelegate

  // class methods
  +[AVTStickerViewController stickerViewControllerForStore:allowEditing:allowPeel:]
  +[AVTStickerViewController stickerViewControllerForStore:fetchRequest:stickerPacks:stickerConfigurationNames:avtViewSessionProvider:allowEditing:allowPeel:]
  +[AVTStickerViewController headerEdgeMarginForEnvironment:]
  +[AVTStickerViewController minimumNumberOfVisibleItemForWidth:environment:]
  +[AVTStickerViewController headerHeightForWidth:interitemSpacing:environment:]
  +[AVTStickerViewController stickersAvatarsFetchRequest]
  +[AVTStickerViewController inUseStickerPack]

  // instance methods
  -[AVTStickerViewController logger]
  -[AVTStickerViewController taskScheduler]
  -[AVTStickerViewController reloadData]
  -[AVTStickerViewController store]
  -[AVTStickerViewController setPresenterDelegate:]
  -[AVTStickerViewController viewWillLayoutSubviews]
  -[AVTStickerViewController viewDidAppear:]
  -[AVTStickerViewController .cxx_destruct]
  -[AVTStickerViewController viewDidLoad]
  -[AVTStickerViewController viewDidLayoutSubviews]
  -[AVTStickerViewController environment]
  -[AVTStickerViewController presenterDelegate]
  -[AVTStickerViewController paddleView]
  -[AVTStickerViewController setPaddleView:]
  -[AVTStickerViewController headerMaxY]
  -[AVTStickerViewController setAllowEditing:]
  -[AVTStickerViewController allowEditing]
  -[AVTStickerViewController imageDelegate]
  -[AVTStickerViewController setImageDelegate:]
  -[AVTStickerViewController reloadPickerView]
  -[AVTStickerViewController shouldHideUserInfoView]
  -[AVTStickerViewController setShouldHideUserInfoView:]
  -[AVTStickerViewController disclosureValidationDelegate]
  -[AVTStickerViewController setDisclosureValidationDelegate:]
  -[AVTStickerViewController clearStickerSelection]
  -[AVTStickerViewController setTaskScheduler:]
  -[AVTStickerViewController viewSessionProvider]
  -[AVTStickerViewController setViewSessionProvider:]
  -[AVTStickerViewController stickerSelectionDelegate]
  -[AVTStickerViewController setStickerSelectionDelegate:]
  -[AVTStickerViewController stickerSheetControllerProvider]
  -[AVTStickerViewController setStickerSheetControllerProvider:]
  -[AVTStickerViewController dataSource:didAddRecord:atIndex:]
  -[AVTStickerViewController dataSource:didEditRecord:atIndex:]
  -[AVTStickerViewController dataSource:didRemoveRecord:atIndex:]
  -[AVTStickerViewController significantRecordChangeInDataSource:]
  -[AVTStickerViewController recordDataSource]
  -[AVTStickerViewController avatarPicker:didSelectAvatarRecord:]
  -[AVTStickerViewController avatarPickerDidEndCameraSession:]
  -[AVTStickerViewController avatarPickerWillStartCameraSession:]
  -[AVTStickerViewController snapshotInBlock:]
  -[AVTStickerViewController stickerPacks]
  -[AVTStickerViewController setStickerPacks:]
  -[AVTStickerViewController stickerConfigurationNames]
  -[AVTStickerViewController setStickerConfigurationNames:]
  -[AVTStickerViewController avatarPicker:shouldPresentMemojiEditorForAvatarRecord:]
  -[AVTStickerViewController presentMemojiEditorForCreation]
  -[AVTStickerViewController stickerPagingController:pageDidScrollToOffset:]
  -[AVTStickerViewController presentAvatarUIController:animated:]
  -[AVTStickerViewController dismissAvatarUIControllerAnimated:]
  -[AVTStickerViewController paddleViewTapped:]
  -[AVTStickerViewController paddleViewWantsToBeDismissed:]
  -[AVTStickerViewController initWithStore:fetchRequest:stickerPacks:stickerConfigurationNames:selectedRecordIdentifier:allowEditing:allowPeel:environment:]
  -[AVTStickerViewController allowAvatarCreation]
  -[AVTStickerViewController selectDefaultAvatarIfNeeded]
  -[AVTStickerViewController selectAvatarRecordAtIndex:hideHeader:]
  -[AVTStickerViewController selectRecordForIdentifier:]
  -[AVTStickerViewController updateHeaderSize]
  -[AVTStickerViewController updateHeaderPositionWithContentOffset:]
  -[AVTStickerViewController updatePagingControllerInsets]
  -[AVTStickerViewController updateScrollToShowAvatarPicker:]
  -[AVTStickerViewController stickerControllerDidEnterBackground]
  -[AVTStickerViewController stickerControllerWillEnterForeground]
  -[AVTStickerViewController shouldPresentPaddleView]
  -[AVTStickerViewController presentPaddleViewIfNeeded]
  -[AVTStickerViewController updatePaddleViewLayoutIfNecessary]
  -[AVTStickerViewController dismissPaddleViewIfNecessary]
  -[AVTStickerViewController allowPeel]
  -[AVTStickerViewController avatarPickerDataSource]
  -[AVTStickerViewController setAvatarPickerDataSource:]
  -[AVTStickerViewController avatarPicker]
  -[AVTStickerViewController setAvatarPicker:]
  -[AVTStickerViewController pagingController]
  -[AVTStickerViewController setPagingController:]
  -[AVTStickerViewController selectedRecordIdentifier]
  -[AVTStickerViewController setSelectedRecordIdentifier:]
  -[AVTStickerViewController editCurrentMemoji]
  -[AVTStickerViewController swipeRightWithDelay:forCompletionHandler:]
  -[AVTStickerViewController swipeLeftWithDelay:forCompletionHandler:]


AVTCoreModelCategory : NSObject
 @property  NSArray *presets
 @property  NSDictionary *tags
 @property  NSArray *pickers
 @property  long long presetCategory
 @property  AVTCoreModelPairing *pairing

  // instance methods
  -[AVTCoreModelCategory tags]
  -[AVTCoreModelCategory .cxx_destruct]
  -[AVTCoreModelCategory pairing]
  -[AVTCoreModelCategory presets]
  -[AVTCoreModelCategory initWithPresetCategory:presets:tags:rows:pairing:]
  -[AVTCoreModelCategory pickers]
  -[AVTCoreModelCategory presetCategory]


AVTAvatarActionsRecordUpdate : NSObject
 @property  <AVTAvatarRecord> *avatarRecord
 @property  BOOL fromLeft

  // class methods
  +[AVTAvatarActionsRecordUpdate recordUpdateForDeletingRecord:withDataSource:]

  // instance methods
  -[AVTAvatarActionsRecordUpdate .cxx_destruct]
  -[AVTAvatarActionsRecordUpdate avatarRecord]
  -[AVTAvatarActionsRecordUpdate initWithAvatarRecord:fromLeft:]
  -[AVTAvatarActionsRecordUpdate fromLeft]


AVTAvatarAttributeEditorSectionColorController : NSObject <UICollectionViewDataSource, UICollectionViewDelegate, AVTAvatarAttributeEditorSectionColorDataSourceDelegate, AVTAvatarColorSliderContainerViewDelegate, AVTAvatarAttributeEditorControllerSubSelectionDelegate, AVTAvatarAttributeEditorSectionController>
 @property  AVTAvatarAttributeEditorSectionColorDataSource *dataSource
 @property  UIView *containerView
 @property  UICollectionView *collectionView
 @property  UICollectionViewFlowLayout *collectionViewLayout
 @property  AVTAvatarColorSliderContainerView *sliderContainerView
 @property  AVTUIEnvironment *environment
 @property  double currentRelativeContentOffsetX
 @property  BOOL showsHeader
 @property  BOOL dontAnimateSelection
 @property  BOOL needsScrollToSelected
 @property  AVTAttributeEditorSectionHeaderView *headerView
 @property  UIView *sectionView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <AVTAvatarAttributeEditorControllerSubSelectionDelegate> *delegate
 @property  <AVTAvatarAttributeEditorSection> *section
 @property  long long selectedIndex

  // class methods
  +[AVTAvatarAttributeEditorSectionColorController supportsSelection]
  +[AVTAvatarAttributeEditorSectionColorController edgeLengthFittingWidth:environment:]
  +[AVTAvatarAttributeEditorSectionColorController clampedContentOffsetForOffset:collectionView:]
  +[AVTAvatarAttributeEditorSectionColorController cellSizeFittingWidth:environment:]
  +[AVTAvatarAttributeEditorSectionColorController updateCollectionViewLayout:containerSize:environment:forExtended:withSlider:numberOfItems:]

  // instance methods
  -[AVTAvatarAttributeEditorSectionColorController setCollectionView:]
  -[AVTAvatarAttributeEditorSectionColorController collectionView:cellForItemAtIndexPath:]
  -[AVTAvatarAttributeEditorSectionColorController initWithEnvironment:]
  -[AVTAvatarAttributeEditorSectionColorController reloadData]
  -[AVTAvatarAttributeEditorSectionColorController dataSource]
  -[AVTAvatarAttributeEditorSectionColorController section]
  -[AVTAvatarAttributeEditorSectionColorController collectionViewLayout]
  -[AVTAvatarAttributeEditorSectionColorController setDelegate:]
  -[AVTAvatarAttributeEditorSectionColorController setHeaderView:]
  -[AVTAvatarAttributeEditorSectionColorController delegate]
  -[AVTAvatarAttributeEditorSectionColorController numberOfSectionsInCollectionView:]
  -[AVTAvatarAttributeEditorSectionColorController numberOfItems]
  -[AVTAvatarAttributeEditorSectionColorController headerView]
  -[AVTAvatarAttributeEditorSectionColorController createCollectionView]
  -[AVTAvatarAttributeEditorSectionColorController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[AVTAvatarAttributeEditorSectionColorController .cxx_destruct]
  -[AVTAvatarAttributeEditorSectionColorController collectionView]
  -[AVTAvatarAttributeEditorSectionColorController setContainerView:]
  -[AVTAvatarAttributeEditorSectionColorController containerView]
  -[AVTAvatarAttributeEditorSectionColorController collectionView:didUnhighlightItemAtIndexPath:]
  -[AVTAvatarAttributeEditorSectionColorController collectionView:didHighlightItemAtIndexPath:]
  -[AVTAvatarAttributeEditorSectionColorController selectedIndex]
  -[AVTAvatarAttributeEditorSectionColorController collectionView:didSelectItemAtIndexPath:]
  -[AVTAvatarAttributeEditorSectionColorController collectionView:numberOfItemsInSection:]
  -[AVTAvatarAttributeEditorSectionColorController environment]
  -[AVTAvatarAttributeEditorSectionColorController setSelectedIndex:]
  -[AVTAvatarAttributeEditorSectionColorController setCollectionViewLayout:]
  -[AVTAvatarAttributeEditorSectionColorController sectionView]
  -[AVTAvatarAttributeEditorSectionColorController indexForItem:]
  -[AVTAvatarAttributeEditorSectionColorController showsHeader]
  -[AVTAvatarAttributeEditorSectionColorController resetToDefaultState]
  -[AVTAvatarAttributeEditorSectionColorController updateWithSection:]
  -[AVTAvatarAttributeEditorSectionColorController sizeForItemAtIndex:fittingSize:]
  -[AVTAvatarAttributeEditorSectionColorController edgeInsetsFittingSize:]
  -[AVTAvatarAttributeEditorSectionColorController viewForIndex:]
  -[AVTAvatarAttributeEditorSectionColorController prefetchingSectionItemForIndex:]
  -[AVTAvatarAttributeEditorSectionColorController updateCell:forItemAtIndex:]
  -[AVTAvatarAttributeEditorSectionColorController cell:willDisplayAtIndex:]
  -[AVTAvatarAttributeEditorSectionColorController invalidateLayoutForNewContainerSize:]
  -[AVTAvatarAttributeEditorSectionColorController didHighlightItemAtIndex:cell:completionBlock:]
  -[AVTAvatarAttributeEditorSectionColorController didUnhighlightItemAtIndex:cell:completionBlock:]
  -[AVTAvatarAttributeEditorSectionColorController didSelectItemAtIndex:cell:]
  -[AVTAvatarAttributeEditorSectionColorController evaluateDisplayCondition:]
  -[AVTAvatarAttributeEditorSectionColorController sizeForFocusingItemAtIndex:fittingSize:]
  -[AVTAvatarAttributeEditorSectionColorController attributeSection:didChangeValueForSectionItem:]
  -[AVTAvatarAttributeEditorSectionColorController currentRelativeContentOffsetX]
  -[AVTAvatarAttributeEditorSectionColorController setCurrentRelativeContentOffsetX:]
  -[AVTAvatarAttributeEditorSectionColorController attributeEditorSectionController:didSelectSectionItem:]
  -[AVTAvatarAttributeEditorSectionColorController attributeEditorSectionController:didDeleteSectionItems:]
  -[AVTAvatarAttributeEditorSectionColorController attributeEditorSectionController:didUpdateSectionItem:]
  -[AVTAvatarAttributeEditorSectionColorController attributeEditorSectionControllerNeedsLayoutUpdate:]
  -[AVTAvatarAttributeEditorSectionColorController colorDataSource:didDeselectItemAtIndex:shouldReloadModel:]
  -[AVTAvatarAttributeEditorSectionColorController colorDataSource:didSelectItemAtIndex:shouldReloadModel:]
  -[AVTAvatarAttributeEditorSectionColorController colorDataSource:didChangeDisplayMode:previousDisplayMode:]
  -[AVTAvatarAttributeEditorSectionColorController colorSliderVariationChanged:forItem:]
  -[AVTAvatarAttributeEditorSectionColorController colorSliderDidFinishChangingVariation:forItem:]
  -[AVTAvatarAttributeEditorSectionColorController initWithEnvironment:showsHeader:]
  -[AVTAvatarAttributeEditorSectionColorController initWithDataSource:showsHeader:environment:]
  -[AVTAvatarAttributeEditorSectionColorController createSliderContainerView]
  -[AVTAvatarAttributeEditorSectionColorController showSliderAnimated:]
  -[AVTAvatarAttributeEditorSectionColorController hideSliderAnimated:]
  -[AVTAvatarAttributeEditorSectionColorController animateWithSpringAnimations:completion:]
  -[AVTAvatarAttributeEditorSectionColorController updateCollectionViewLayoutWithContainerSize:]
  -[AVTAvatarAttributeEditorSectionColorController scrollCollectionViewToSelectedColor]
  -[AVTAvatarAttributeEditorSectionColorController scrollCollectionViewToOrigin]
  -[AVTAvatarAttributeEditorSectionColorController updateSliderForSectionItemIfNeeded:]
  -[AVTAvatarAttributeEditorSectionColorController willDisplayViewForIndex:]
  -[AVTAvatarAttributeEditorSectionColorController layoutSubviewsForIndex:]
  -[AVTAvatarAttributeEditorSectionColorController heightForSectionHeaderFittingWidth:]
  -[AVTAvatarAttributeEditorSectionColorController heightForCollectionViewFittingWidth:]
  -[AVTAvatarAttributeEditorSectionColorController updateCellLayer:withColorItem:withColorPreset:]
  -[AVTAvatarAttributeEditorSectionColorController setSelectedState:animated:forCellAtIndexPath:]
  -[AVTAvatarAttributeEditorSectionColorController updateSectionItem:withVariation:]
  -[AVTAvatarAttributeEditorSectionColorController selectIndexPath:]
  -[AVTAvatarAttributeEditorSectionColorController sliderContainerView]
  -[AVTAvatarAttributeEditorSectionColorController setSliderContainerView:]
  -[AVTAvatarAttributeEditorSectionColorController dontAnimateSelection]
  -[AVTAvatarAttributeEditorSectionColorController setDontAnimateSelection:]
  -[AVTAvatarAttributeEditorSectionColorController needsScrollToSelected]
  -[AVTAvatarAttributeEditorSectionColorController setNeedsScrollToSelected:]


AVTGroupPickerItem : NSObject
 @property  NSString *localizedName
 @property  @? symbolNameProvider

  // instance methods
  -[AVTGroupPickerItem .cxx_destruct]
  -[AVTGroupPickerItem localizedName]
  -[AVTGroupPickerItem symbolNameProvider]
  -[AVTGroupPickerItem initWithLocalizedName:symbolNameProvider:]


AVTNotifyingContainerView : UIView
 @property  <AVTNotifyingContainerViewDelegate> *delegate

  // instance methods
  -[AVTNotifyingContainerView setDelegate:]
  -[AVTNotifyingContainerView setFrame:]
  -[AVTNotifyingContainerView delegate]
  -[AVTNotifyingContainerView .cxx_destruct]
  -[AVTNotifyingContainerView setBounds:]


AVTAvatarAttributeEditorLayout : NSObject <AVTAvatarAttributeEditorLayout>
 @property  {CGSize=dd} containerSize
 @property  {UIEdgeInsets=dddd} edgeInsets
 @property  double userInfoViewHeight
 @property  double screenScale
 @property  BOOL RTL
 @property  NSString *contentSizeCategory
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} avatarContainerFrame
 @property  double avatarContainerAlpha
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} attributesContentViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} userInfoFrame
 @property  double headerMaskingViewAlpha
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} headerMaskingViewFrame
 @property  double verticalRuleAlpha
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} verticalRuleFrame
 @property  {UIEdgeInsets=dddd} attributesContentViewInsets
 @property  {UIEdgeInsets=dddd} attributesContentViewScrollIndicatorInsets
 @property  unsigned long supportedLayoutOrientation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} groupDialContainerFrame
 @property  BOOL showSideGroupPicker
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sideGroupContainerFrame
 @property  double maxGroupLabelWidth

  // instance methods
  -[AVTAvatarAttributeEditorLayout screenScale]
  -[AVTAvatarAttributeEditorLayout containerSize]
  -[AVTAvatarAttributeEditorLayout edgeInsets]
  -[AVTAvatarAttributeEditorLayout .cxx_destruct]
  -[AVTAvatarAttributeEditorLayout backgroundColor]
  -[AVTAvatarAttributeEditorLayout contentSizeCategory]
  -[AVTAvatarAttributeEditorLayout RTL]
  -[AVTAvatarAttributeEditorLayout initWithContainerSize:insets:userInfoViewHeight:screenScale:RTL:showSideGroupPicker:]
  -[AVTAvatarAttributeEditorLayout supportedLayoutOrientation]
  -[AVTAvatarAttributeEditorLayout groupDialContainerFrame]
  -[AVTAvatarAttributeEditorLayout sideGroupContainerFrame]
  -[AVTAvatarAttributeEditorLayout attributesContentViewFrame]
  -[AVTAvatarAttributeEditorLayout userInfoFrame]
  -[AVTAvatarAttributeEditorLayout headerMaskingViewAlpha]
  -[AVTAvatarAttributeEditorLayout headerMaskingViewFrame]
  -[AVTAvatarAttributeEditorLayout verticalRuleAlpha]
  -[AVTAvatarAttributeEditorLayout verticalRuleFrame]
  -[AVTAvatarAttributeEditorLayout attributesContentViewInsets]
  -[AVTAvatarAttributeEditorLayout attributesContentViewScrollIndicatorInsets]
  -[AVTAvatarAttributeEditorLayout avatarContainerFrame]
  -[AVTAvatarAttributeEditorLayout avatarContainerAlpha]
  -[AVTAvatarAttributeEditorLayout showSideGroupPicker]
  -[AVTAvatarAttributeEditorLayout userInfoViewHeight]
  -[AVTAvatarAttributeEditorLayout maxGroupLabelWidth]
  -[AVTAvatarAttributeEditorLayout initWithContainerSize:insets:userInfoViewHeight:screenScale:RTL:showSideGroupPicker:maxGroupLabelWidth:]
  -[AVTAvatarAttributeEditorLayout raiseExceptionForPropertyString:]


AVTCategorySegmentedControl : UISegmentedControl
  // instance methods
  -[AVTCategorySegmentedControl initWithItems:]


AVTUserInfoView : UIView
 @property  BOOL isRegisteredForCategorySizeChange
 @property  UIVisualEffectView *userInfoEffectView
 @property  UILabel *userInfoLabel
 @property  NSArray *activeConstraints
 @property  NSString *text
 @property  {NSDirectionalEdgeInsets=dddd} textInsets
 @property  UIColor *containerBackgroundColor

  // class methods
  +[AVTUserInfoView textVerticalPadding]

  // instance methods
  -[AVTUserInfoView _configure]
  -[AVTUserInfoView text]
  -[AVTUserInfoView contentSizeCategoryDidChange:]
  -[AVTUserInfoView updateConstraints]
  -[AVTUserInfoView .cxx_destruct]
  -[AVTUserInfoView layoutSubviews]
  -[AVTUserInfoView setTextInsets:]
  -[AVTUserInfoView textInsets]
  -[AVTUserInfoView sizeThatFits:]
  -[AVTUserInfoView didMoveToWindow]
  -[AVTUserInfoView setText:]
  -[AVTUserInfoView containerBackgroundColor]
  -[AVTUserInfoView activeConstraints]
  -[AVTUserInfoView setActiveConstraints:]
  -[AVTUserInfoView setContainerBackgroundColor:]
  -[AVTUserInfoView isRegisteredForCategorySizeChange]
  -[AVTUserInfoView setIsRegisteredForCategorySizeChange:]
  -[AVTUserInfoView userInfoEffectView]
  -[AVTUserInfoView setUserInfoEffectView:]
  -[AVTUserInfoView userInfoLabel]
  -[AVTUserInfoView setUserInfoLabel:]


AVTAggregateCacheableResource : NSObject <AVTCacheableResource>
 @property  NSArray *cacheableResources
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVTAggregateCacheableResource .cxx_destruct]
  -[AVTAggregateCacheableResource requiresEncryption]
  -[AVTAggregateCacheableResource volatileIdentifierForScope:]
  -[AVTAggregateCacheableResource persistentIdentifierForScope:]
  -[AVTAggregateCacheableResource costForScope:]
  -[AVTAggregateCacheableResource initWithCacheableResources:]
  -[AVTAggregateCacheableResource identifierForScope:persistent:]
  -[AVTAggregateCacheableResource cacheableResources]


AVTAvatarColorSliderContainerView : UIView <AVTColorSliderDelegate>
 @property  AVTColorSlider *slider
 @property  NSArray *layoutConstraints
 @property  AVTAvatarAttributeEditorSectionColorItem *sectionItem
 @property  <AVTAvatarColorSliderContainerViewDelegate> *delegate

  // instance methods
  -[AVTAvatarColorSliderContainerView setSlider:]
  -[AVTAvatarColorSliderContainerView slider]
  -[AVTAvatarColorSliderContainerView setDelegate:]
  -[AVTAvatarColorSliderContainerView delegate]
  -[AVTAvatarColorSliderContainerView .cxx_destruct]
  -[AVTAvatarColorSliderContainerView layoutSubviews]
  -[AVTAvatarColorSliderContainerView layoutConstraints]
  -[AVTAvatarColorSliderContainerView setLayoutConstraints:]
  -[AVTAvatarColorSliderContainerView sectionItem]
  -[AVTAvatarColorSliderContainerView colorSlider:valueChanged:]
  -[AVTAvatarColorSliderContainerView colorSlider:didFinishSelectingValue:]
  -[AVTAvatarColorSliderContainerView initWithFrame:userInterfaceLayoutDirection:]
  -[AVTAvatarColorSliderContainerView setSectionItem:]
  -[AVTAvatarColorSliderContainerView setSectionItem:animated:]
  -[AVTAvatarColorSliderContainerView updateSliderTrackLayerAnimated:]
  -[AVTAvatarColorSliderContainerView updateSliderWithColorPreset:animated:]


UIScrollView(AvatarUI)
	// instance methods
	-[UIScrollView(AvatarUI) avtui_isMoving]

(AvatarUI)
	// instance methods
	-[(AvatarUI) avt_MD5String]

NSIndexSet(AvatarUI)
	// instance methods
	-[NSIndexSet(AvatarUI) closestIndexToIndex:greaterIndexesFirst:]

AVTAvatarRecord(UIActivityItemSource)
	// instance methods
	-[AVTAvatarRecord(UIActivityItemSource) activityViewControllerPlaceholderItem:]
	-[AVTAvatarRecord(UIActivityItemSource) activityViewController:itemForActivityType:]
	-[AVTAvatarRecord(UIActivityItemSource) activityViewController:subjectForActivityType:]
	-[AVTAvatarRecord(UIActivityItemSource) activityViewController:dataTypeIdentifierForActivityType:]
	-[AVTAvatarRecord(UIActivityItemSource) activityViewController:thumbnailImageForActivityType:suggestedSize:]

AVTView(Downcasting)
	// class methods
	+[AVTView(Downcasting) snapshotAVTView:matchingViewSize:highQuality:logger:]

	// instance methods
	-[AVTView(Downcasting) downcastWithAVTViewHandler:recordViewHandler:]

AVTRecordView(Downcasting)
	// instance methods
	-[AVTRecordView(Downcasting) downcastWithAVTViewHandler:recordViewHandler:]

(AvatarUI)
	// instance methods
	-[(AvatarUI) avt_SHA256]

AVTStickerConfiguration(AVTCacheableResourceScope)
	// instance methods
	-[AVTStickerConfiguration(AVTCacheableResourceScope) cacheableResourceAssociatedIdentifier]
	-[AVTStickerConfiguration(AVTCacheableResourceScope) cacheableResourceAssociatedCost]

UICollectionViewCell(Downcasting)
	// instance methods
	-[UICollectionViewCell(Downcasting) downcastWithCellHandler:listCellHandler:]

AVTAvatarPose(AvatarUI)
	// instance methods
	-[AVTAvatarPose(AvatarUI) _avtui_identifier]

UICollectionViewLayout(AVTCollectionViewLayout)
	// instance methods
	-[UICollectionViewLayout(AVTCollectionViewLayout) frameForElementAtIndex:visibleBounds:]
	-[UICollectionViewLayout(AVTCollectionViewLayout) indexesForElementsInRect:visibleBounds:numberOfItems:]
	-[UICollectionViewLayout(AVTCollectionViewLayout) centerForCenteringElementAtIndex:visibleBoundsSize:proposedOrigin:]
	-[UICollectionViewLayout(AVTCollectionViewLayout) contentSizeForVisibleBounds:numberOfItems:]
	-[UICollectionViewLayout(AVTCollectionViewLayout) initialFrameForAppearingElementAtOriginForVisibleBounds:]
	-[UICollectionViewLayout(AVTCollectionViewLayout) finalFrameForDisappearingElementAtOriginForVisibleBounds:]

01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDevice 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLooper 
01 00 0a00 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVQueuePlayer 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTAnimoji 
01 00 0100 /System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence: AVTAvatarFetchRequest 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTAvatarPhysicalizedPose 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTAvatarPose 
01 00 0100 /System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence: AVTAvatarPuppetRecord 
01 00 0100 /System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence: AVTAvatarRecord 
01 00 0100 /System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence: AVTAvatarRecordRendering 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTColorPreset 
01 00 0100 /System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence: AVTCoreEnvironment 
01 00 0100 /System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence: AVTError 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTImageUtilities 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTMemoji 
01 00 0100 /System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence: AVTPAvatarRecordDataSource 
01 00 0100 /System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence: AVTPAvatarStore 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTPreset 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTRecordView 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTSnapshotBuilder 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTStickerConfiguration 
01 00 0100 /System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence: AVTStickerFetchRequest 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTStickerGenerator 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTStickerGeneratorOptions 
01 00 0100 /System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence: AVTStickerRecord 
01 00 1100 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTView 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSDisplayLayoutMonitor 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSDisplayLayoutMonitorConfiguration 
01 00 0500 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISIcon 
01 00 0500 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 0600 /System/Library/Frameworks/Messages.framework/Messages: MSSticker 
01 00 0600 /System/Library/Frameworks/Messages.framework/Messages: MSStickerView 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1400 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1240 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBBoldTrayButton 
01 00 1240 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBWelcomeFullCenterContentController 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionReusableView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayout 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayout 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayoutAttributes 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImpactFeedbackGenerator 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyCommand 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardEmojiGraphicsTraits 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISegmentedControl 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISelectionFeedbackGenerator 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISlider 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIEdgeFeedbackGenerator 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIEdgeFeedbackGeneratorConfiguration 
