|| __DATA.__objc_data _OBJC_CLASS_$_SASGuideMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_SASHIDGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_SiriPresentationPineBoardMainScreenViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SASGuideMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_SASHIDGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_SiriPresentationPineBoardMainScreenViewController
|| __DATA.__objc_ivar _OBJC_IVAR_$_SiriPresentationViewController._instrumentationDismissalState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriPresentationSpringBoardMainScreenViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriPresentationViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriPresentationSpringBoardMainScreenViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriPresentationViewController
|| __TEXT.__const _SiriUIActivationVersionNumber
|| __TEXT.__const _SiriUIActivationVersionString
__ AssistantServices: _AFAnalyticsEventCreateCurrent
__ AssistantServices: _AFIsInternalInstall
__ AssistantServices: _AFSiriLogContextConnection
__ AssistantServices: _OBJC_CLASS_$_AFAnalytics
__ AssistantServices: _OBJC_CLASS_$_AFApplicationContext
__ AssistantServices: _OBJC_CLASS_$_AFConnection
__ AssistantServices: _OBJC_CLASS_$_AFConversationStore
__ AssistantServices: _OBJC_CLASS_$_AFPreferences
__ AssistantServices: _OBJC_CLASS_$_AFQueue
__ AssistantServices: _OBJC_CLASS_$_AFSettingsConnection
__ AssistantServices: _OBJC_CLASS_$_AFWatchdogTimer
__ AssistantUI: _AFUIPreferencesDefaultDomain
__ AssistantUI: _AFUIPresentationPropertiesRequestSourceKey
__ AssistantUI: _AFUIPresentationPropertiesShouldSuppressErrorTTSKey
__ AssistantUI: _AFUIPresentationPropertiesSupportsTouchKey
__ AssistantUI: _AFUIPreviousConversationIdentifier
__ AssistantUI: _AFUISetLanguageCode
__ AssistantUI: _AFUISpeechSynthesisQueueDidEmptyNotification
__ AssistantUI: _MobileSMSBundleID
__ AssistantUI: _OBJC_CLASS_$_AFUIGuideCacheManager
__ AssistantUI: _OBJC_CLASS_$_AFUIPreferences
__ AssistantUI: _OBJC_CLASS_$_AFUIRequestTrigger
__ AssistantUI: _OBJC_CLASS_$_AFUISiriLanguage
__ AssistantUI: _OBJC_CLASS_$_AFUISiriSession
__ AssistantUI: _OBJC_CLASS_$_AFUISiriSetupViewController
__ AssistantUI: _OBJC_CLASS_$_AFUISiriViewController
__ AssistantUI: _OBJC_CLASS_$_AFUITouchPassThroughView
__ AssistantUI: _PhoneBundleID
__ BoardServices: _OBJC_CLASS_$_BSServiceConnection
__ BoardServices: _OBJC_CLASS_$_BSServiceConnectionEndpoint
__ Celestial: _AVSystemController_CallIsActiveDidChangeNotification
__ CoreDuetContext: _OBJC_CLASS_$__CDClientContext
__ CoreDuetContext: _OBJC_CLASS_$__CDContextQueries
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDistributedCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectZero
__ CoreServices: _OBJC_CLASS_$_LSAppLink
__ CoreTelephony: _CTCallListDisconnect
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSStringFromBOOL
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ IOKit: _IOHIDEventCreateKeyboardEvent
__ IOKit: _IOHIDEventSetIntegerValue
__ IOKit: _IOHIDEventSetPhase
__ IOKit: _IOHIDEventSystemClientCreate
__ IOKit: _IOHIDEventSystemClientDispatchEvent
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ SAObjects: _OBJC_CLASS_$_SAAppInfo
__ SAObjects: _OBJC_CLASS_$_SACarPlaySupportedOEMAppIdList
__ SAObjects: _OBJC_CLASS_$_SASyncAppIdentifyingInfo
__ SiriActivation: _CARAutomaticFeatureStateGetName
__ SiriActivation: _OBJC_CLASS_$_SASActivationRequest
__ SiriActivation: _OBJC_CLASS_$_SASBoardServicesConfiguration
__ SiriActivation: _OBJC_CLASS_$_SASPresentationServer
__ SiriActivation: _OBJC_CLASS_$_SASRequestOptions
__ SiriActivation: _OBJC_CLASS_$_SASSystemState
__ SiriActivation: _OBJC_CLASS_$_SASTestingInput
__ SiriActivation: _OBJC_CLASS_$_SiriDismissalOptions
__ SiriActivation: _OBJC_CLASS_$_SiriPresentationIdentifierTransport
__ SiriActivation: _OBJC_CLASS_$_SiriPresentationOptions
__ SiriActivation: _OBJC_CLASS_$_SiriPunchoutRequest
__ SiriActivation: _SASDismissalGetAnalyticsName
__ SiriActivation: _SASDismissalGetName
__ SiriActivation: _SASDismissalIsError
__ SiriActivation: _SASDismissalReasonToSISchemaDismissalReason
__ SiriActivation: _SASRequestSourceGetName
__ SiriActivation: _SASRequestSourceIsHTT
__ SiriActivation: _SiriSystemUpTimeFromCFAbsoluteCurrentTime
__ SiriActivation: _SiriTestingContextAudioInputKey
__ SiriActivation: _SiriTestingContextRecognitionStringKey
__ SiriCore: _OBJC_CLASS_$_SiriCoreSymptomsReporter
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaPunchOut
__ SiriUI: _OBJC_CLASS_$_SiriUIConfiguration
__ SiriUI: _OBJC_CLASS_$_SiriUIPreferences
__ SiriUI: _OBJC_CLASS_$_SiriUIUtilities
__ SiriUI: _SiriUIDeviceIsPad
__ SiriUI: _SiriUIDeviceIsZoomed
__ SiriUI: _SiriUIInvokeOnMainQueue
__ SiriUI: _SiriUIIsAllOrientationsSupported
__ SiriUI: _SiriUIIsTextInputEnabled
__ SiriUI: _SiriUINSStringFromSiriUIViewMode
__ SiriUI: _SiriUIPymFeatureFlagEnabled
__ SiriUI: _SiriUISafariBundleIdentifier
__ SiriUI: _SiriUISafeForLockScreen
__ SiriUICore: _OBJC_CLASS_$_SUICFlamesView
__ SoftLinking: __sl_dlopen_audited
__ SpringBoardUI: _SBUIGetUserAgent
__ UIKit: _NSStringFromCGRect
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIEdgeInsetsZero
__ libAccessibility.dylib: __AXSGuidedAccessStartSession
__ libAccessibility.dylib: __AXSSetHomeButtonAssistant
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _nanosleep
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SiriPresentationPineBoardMainScreenViewController : SiriPresentationViewController
 @property  double buttonDownTimestamp
 @property  <SiriPresentationPineBoardMainScreenViewControllerDelegate> *siriPresentationControllerDelegate

  // instance methods
  -[SiriPresentationPineBoardMainScreenViewController initWithIdentifier:hostedPresentationFrame:]
  -[SiriPresentationPineBoardMainScreenViewController setNextVoiceRecognitionAudioInputPaths:]
  -[SiriPresentationPineBoardMainScreenViewController setNextAssistantRecognitionStrings:]
  -[SiriPresentationPineBoardMainScreenViewController siriViewController:didChangePresentationPeekMode:]
  -[SiriPresentationPineBoardMainScreenViewController siriViewController:sceneDidActivateWithIdentifier:]
  -[SiriPresentationPineBoardMainScreenViewController siriViewControllerDidDeactivateScene:]
  -[SiriPresentationPineBoardMainScreenViewController siriViewController:willStartRequestWithOptions:]
  -[SiriPresentationPineBoardMainScreenViewController siriViewControllerDidChangeToListeningMode:]
  -[SiriPresentationPineBoardMainScreenViewController _buttonDownTimestamp]
  -[SiriPresentationPineBoardMainScreenViewController _prewarmFlamesWithPresentationFrame:]
  -[SiriPresentationPineBoardMainScreenViewController _thresholdForTriggeringABCInLaunch]
  -[SiriPresentationPineBoardMainScreenViewController _shouldShowSetupViewController]
  -[SiriPresentationPineBoardMainScreenViewController _setButtonDownTimestamp:]


SiriPresentationSpringBoardMainScreenViewController : SiriPresentationViewController
 @property  <SiriPresentationSpringBoardMainScreenViewControllerDelegate> *siriPresentationControllerDelegate
 @property  BOOL tapsOutsideContentDismissAssistant
 @property  BOOL shouldPassTapsThrough
 @property  BOOL shouldPassTouchesThroughToSpringBoard
 @property  BOOL shouldDismissForSwipesOutsideContent
 @property  BOOL shareHomeGesture

  // instance methods
  -[SiriPresentationSpringBoardMainScreenViewController _commonInit]
  -[SiriPresentationSpringBoardMainScreenViewController initWithIdentifier:hostedPresentationFrame:]
  -[SiriPresentationSpringBoardMainScreenViewController setFluidDismissalState:]
  -[SiriPresentationSpringBoardMainScreenViewController init]
  -[SiriPresentationSpringBoardMainScreenViewController requestStatusBarVisible:animated:completion:]
  -[SiriPresentationSpringBoardMainScreenViewController requestPasscodeUnlockWithCompletion:]
  -[SiriPresentationSpringBoardMainScreenViewController shouldDismissForTapsOutsideContent]
  -[SiriPresentationSpringBoardMainScreenViewController shouldDismissForSwipesOutsideContent]
  -[SiriPresentationSpringBoardMainScreenViewController setShouldPassTouchesThroughToSpringBoard:]
  -[SiriPresentationSpringBoardMainScreenViewController shouldPassTouchesThroughToSpringBoard]
  -[SiriPresentationSpringBoardMainScreenViewController initWithIdentifier:]
  -[SiriPresentationSpringBoardMainScreenViewController setShouldDismissForTapsOutsideContent:]
  -[SiriPresentationSpringBoardMainScreenViewController shareHomeGesture]
  -[SiriPresentationSpringBoardMainScreenViewController setDockFrame:]
  -[SiriPresentationSpringBoardMainScreenViewController showAppsBehindSiri]
  -[SiriPresentationSpringBoardMainScreenViewController setShowsStatusBar:]
  -[SiriPresentationSpringBoardMainScreenViewController updateHomeGestureSharingForSiriSetup:]
  -[SiriPresentationSpringBoardMainScreenViewController tapsOutsideContentDismissAssistant]
  -[SiriPresentationSpringBoardMainScreenViewController hasContentAtPoint:completion:]
  -[SiriPresentationSpringBoardMainScreenViewController setShouldDismissForTapOutsideContent:]
  -[SiriPresentationSpringBoardMainScreenViewController _canShowWhileLocked]
  -[SiriPresentationSpringBoardMainScreenViewController shouldDismissForTapOutsideContent]
  -[SiriPresentationSpringBoardMainScreenViewController shouldPassTapsThrough]
  -[SiriPresentationSpringBoardMainScreenViewController setShouldDismissForSwipesOutsideContent:]
  -[SiriPresentationSpringBoardMainScreenViewController loadView]
  -[SiriPresentationSpringBoardMainScreenViewController setShareHomeGesture:]


SiriPresentationViewController : UIViewController /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation <SASStateChangeListener, AFUISiriLanguageDelegate, AFUISiriViewControllerDelegate, AFUISiriViewControllerDataSource, AFUISiriSetupViewControllerDelegate, SiriPresentation>
 @property  <SiriPresentationIntentUsageDelegate> *intentUsageDelegate
 @property  {os_unfair_lock_s=I} lock
 @property  BSServiceConnection *connection
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} hostedPresentationFrame
 @property  AFConnection *unownedConnection
 @property  NSDate *lastAppUpdateTimestamp
 @property  BOOL springBoardIdleTimerDisabled
 @property  BOOL waitingForTelephonyToStart
 @property  BOOL startGuidedAccessOnDismissal
 @property  BOOL wasScreenOffDuringActivation
 @property  BOOL isVoiceActivationMaskShown
 @property  BOOL buttonDownEventDidOccur
 @property  double buttonDownTimestamp
 @property  NSTimer *carSiriButtonHoldToTalkTimer
 @property  double carSiriButtonTimeInterval
 @property  BOOL shouldCancelWake
 @property  NSArray *contextAppInfosForSiriViewController
 @property  NSArray *currentCarPlaySupportedOEMAppIdList
 @property  NSArray *starkAppBundleIdentifierContext
 @property  BOOL predictedRecordRouteIsZLL
 @property  unsigned long currentLockState
 @property  AFWatchdogTimer *animationDismissalTimer
 @property  AFUISiriLanguage *language
 @property  <SiriPresentationIntentUsageDelegate> *intentUsageDelegate
 @property  NSTimer *clearSiriViewControllerTimer
 @property  long long currentViewMode
 @property  NSTimer *pongTimer
 @property  AFUISiriViewController *siriViewController
 @property  AFUISiriSetupViewController *siriSetupViewController
 @property  UINavigationController *siriSetupNavigationController
 @property  AFQueue *testInputQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long identifier
 @property  <SiriPresentationControllerDelegate> *siriPresentationControllerDelegate

  // class methods
  +[SiriPresentationViewController extractTestingInputsFromContext:]

  // instance methods
  -[SiriPresentationViewController setLock:]
  -[SiriPresentationViewController preheat]
  -[SiriPresentationViewController initWithIdentifier:hostedPresentationFrame:]
  -[SiriPresentationViewController currentCarPlaySupportedOEMAppIdList]
  -[SiriPresentationViewController dismiss]
  -[SiriPresentationViewController dealloc]
  -[SiriPresentationViewController _language]
  -[SiriPresentationViewController shouldAutorotate]
  -[SiriPresentationViewController .cxx_destruct]
  -[SiriPresentationViewController initWithIdentifier:]
  -[SiriPresentationViewController lock]
  -[SiriPresentationViewController identifier]
  -[SiriPresentationViewController setConnection:]
  -[SiriPresentationViewController viewWillLayoutSubviews]
  -[SiriPresentationViewController supportedInterfaceOrientations]
  -[SiriPresentationViewController ping]
  -[SiriPresentationViewController isEnabled]
  -[SiriPresentationViewController setCurrentCarPlaySupportedOEMAppIdList:]
  -[SiriPresentationViewController _canShowWhileLocked]
  -[SiriPresentationViewController connection]
  -[SiriPresentationViewController _requestDismissal]
  -[SiriPresentationViewController invalidate]
  -[SiriPresentationViewController callStateChangedToIsActive:isOutgoing:]
  -[SiriPresentationViewController _analytics]
  -[SiriPresentationViewController siriLanguageSpokenLanguageCodeDidChange:]
  -[SiriPresentationViewController extendCurrentTTSRequested]
  -[SiriPresentationViewController siriSessionShouldExtendAudioSessionForImminentPhoneCall]
  -[SiriPresentationViewController siriSessionShouldEndExtendAudioSessionForImminentPhoneCall]
  -[SiriPresentationViewController dismissSiriViewController:delayForTTS:withDismissalReason:]
  -[SiriPresentationViewController siriViewController:voiceActivationMaskViewIsVisible:]
  -[SiriPresentationViewController siriViewControllerDidChangeVisibility:]
  -[SiriPresentationViewController safeAreaInsetsForSceneCreationInSiriViewController:]
  -[SiriPresentationViewController siriViewController:didEncounterUnexpectedError:]
  -[SiriPresentationViewController siriViewController:updateHomeAffordanceForBlurVisibilty:]
  -[SiriPresentationViewController siriViewController:bulletinWithIdentifier:]
  -[SiriPresentationViewController lockStateForSiriViewController:]
  -[SiriPresentationViewController siriViewControllerDidFinishDismissing:]
  -[SiriPresentationViewController startGuidedAccessForSiriViewController:]
  -[SiriPresentationViewController userRelevantEventDidOccurInSiriViewController:]
  -[SiriPresentationViewController siriViewController:launchApplicationWithBundleIdentifier:withURL:launchOptions:replyHandler:]
  -[SiriPresentationViewController siriViewController:siriIdleAndQuietStatusDidChange:]
  -[SiriPresentationViewController siriViewController:didReadBulletinWithIdentifier:]
  -[SiriPresentationViewController siriViewController:openURL:delaySessionEndForTTS:completion:]
  -[SiriPresentationViewController siriViewController:openURL:appBundleID:allowSiriDismissal:]
  -[SiriPresentationViewController siriViewController:didChangePresentationPeekMode:]
  -[SiriPresentationViewController siriViewController:requestsPresentation:]
  -[SiriPresentationViewController siriViewController:requestsDismissalWithReason:withCompletion:]
  -[SiriPresentationViewController siriViewController:presentedIntentWithBundleId:]
  -[SiriPresentationViewController siriViewController:didUpdateAudioCategoriesDisablingVolumeHUD:]
  -[SiriPresentationViewController siriViewController:didHideStatusView:]
  -[SiriPresentationViewController _uiPresentationIdentifier]
  -[SiriPresentationViewController siriViewControllerSpeechRequestStartedFromSiriOrb]
  -[SiriPresentationViewController siriViewControllerSpeechRequestCancelledFromSiriOrb]
  -[SiriPresentationViewController siriViewController:willStartRequestWithOptions:]
  -[SiriPresentationViewController predictedRecordRouteIsZLL]
  -[SiriPresentationViewController siriViewControllerShouldSupportTextInput:]
  -[SiriPresentationViewController siriViewControllerShouldEndSession:]
  -[SiriPresentationViewController siriViewController:attemptUnlockWithPassword:]
  -[SiriPresentationViewController bulletinsForSiriViewController:]
  -[SiriPresentationViewController contextAppInfosForSiriViewController:]
  -[SiriPresentationViewController currentCarPlaySupportedOEMAppsForSiriViewController:]
  -[SiriPresentationViewController starkAppBundleIdentifierContextForSiriViewController:]
  -[SiriPresentationViewController siriViewController:willProcessAppLaunchWithBundleIdentifier:]
  -[SiriPresentationViewController siriViewController:failedToLaunchAppWithBundleIdentifier:]
  -[SiriPresentationViewController siriViewControllerSessionDidResetContext:]
  -[SiriPresentationViewController siriViewController:didCompleteRequestWithError:]
  -[SiriPresentationViewController setHostedPresentationFrame:]
  -[SiriPresentationViewController animatedAppearanceWithFactory:completion:]
  -[SiriPresentationViewController animatedDisappearanceWithFactory:completion:]
  -[SiriPresentationViewController cancelTTS]
  -[SiriPresentationViewController hostedPresentationFrame]
  -[SiriPresentationViewController openSiriRequestedBySiriSetupViewController:]
  -[SiriPresentationViewController dismissSiriSetupViewController:]
  -[SiriPresentationViewController disableSiriActivationRequestedBySiriSetupViewController:]
  -[SiriPresentationViewController setPredictedRecordRouteIsZLL:]
  -[SiriPresentationViewController setCurrentLockState:]
  -[SiriPresentationViewController presentationRequestedWithPresentationOptions:requestOptions:]
  -[SiriPresentationViewController presentationDismissalRequestedWithOptions:]
  -[SiriPresentationViewController handleRequestWithOptions:]
  -[SiriPresentationViewController presentationisIdleAndQuiet]
  -[SiriPresentationViewController cancelPreheat]
  -[SiriPresentationViewController cancelPendingActivationEventWithReason:]
  -[SiriPresentationViewController wakeScreenAfterActivation]
  -[SiriPresentationViewController handleButtonDownFromButtonIdentifier:timestamp:]
  -[SiriPresentationViewController handleButtonUpFromButtonIdentifier:deviceIdentifier:timestamp:]
  -[SiriPresentationViewController handleButtonTapFromButtonIdentifier:]
  -[SiriPresentationViewController handleButtonLongPressFromButtonIdentifier:deviceIdentifier:timestamp:]
  -[SiriPresentationViewController updateCurrentLockState:]
  -[SiriPresentationViewController updateActiveInterfaceOrientation:willAnimationWithDuration:]
  -[SiriPresentationViewController bulletinManagerDidChangeBulletins]
  -[SiriPresentationViewController deviceWonMyriadElection]
  -[SiriPresentationViewController pocketStateFetchDeterminedShouldCancelWake:]
  -[SiriPresentationViewController contextAppInfosForSiriViewController]
  -[SiriPresentationViewController setContextAppInfosForSiriViewController:]
  -[SiriPresentationViewController currentLockState]
  -[SiriPresentationViewController _buttonDownTimestamp]
  -[SiriPresentationViewController setSiriPresentationControllerDelegate:]
  -[SiriPresentationViewController dismissWithOptions:]
  -[SiriPresentationViewController currentViewMode]
  -[SiriPresentationViewController setCurrentViewMode:]
  -[SiriPresentationViewController preferredFlamesViewFidelity]
  -[SiriPresentationViewController prewarmFlamesViewShadersInBackgroundForScreen:activeFrame:]
  -[SiriPresentationViewController _fallbackScreenForIdentifier:]
  -[SiriPresentationViewController siriPresentationControllerDelegate]
  -[SiriPresentationViewController _updateRequestOptionsWithTestingInput:]
  -[SiriPresentationViewController _logSignatureWithType:subType:context:]
  -[SiriPresentationViewController _clearAllTestingInputs]
  -[SiriPresentationViewController _enqueueTestInput:]
  -[SiriPresentationViewController _shouldShowSetupViewController]
  -[SiriPresentationViewController _setButtonDownTimestamp:]
  -[SiriPresentationViewController siriViewController]
  -[SiriPresentationViewController _updateLanguageCode]
  -[SiriPresentationViewController _setShouldCancelWake:]
  -[SiriPresentationViewController _invalidateCarSiriButtonHoldToTalkTimer]
  -[SiriPresentationViewController siriViewControllerConfigured]
  -[SiriPresentationViewController _requestHomeAffordanceSuppression:]
  -[SiriPresentationViewController _setupPongTimer]
  -[SiriPresentationViewController _shouldPresentSiriViewControllerWithRequestOptions:]
  -[SiriPresentationViewController _presentationRequestedWithPresentationOptions:requestOptions:]
  -[SiriPresentationViewController _setScreenOffDuringActivation:]
  -[SiriPresentationViewController _processIncomingRequestOptionsForTestingPayload:]
  -[SiriPresentationViewController _showSetupViewControllerIfNecessary]
  -[SiriPresentationViewController _removeSetupViewControllerIfNecessary]
  -[SiriPresentationViewController _presentSiriViewControllerWithPresentationOptions:requestOptions:]
  -[SiriPresentationViewController _wasScreenOffDuringActivation]
  -[SiriPresentationViewController _fallbackFrameForScreen:withIdentifier:]
  -[SiriPresentationViewController _prepareSiriViewControllerWithRequestOptions:]
  -[SiriPresentationViewController _activateWithRequestOptions:]
  -[SiriPresentationViewController _presentationRequestedHandlerWithRequestOptions:]
  -[SiriPresentationViewController _createPresentationPropertiesWithRequestOptions:]
  -[SiriPresentationViewController activateWithRequestOptions:]
  -[SiriPresentationViewController _updateHostedPresentationFrame]
  -[SiriPresentationViewController _createSiriViewControllerWithRequestOptions:]
  -[SiriPresentationViewController _dismissDueToUnexpectedError:]
  -[SiriPresentationViewController setStarkAppBundleIdentifierContext:]
  -[SiriPresentationViewController _handleContextClearForRequestOptions:]
  -[SiriPresentationViewController activateWithSource:requestOptions:timestamp:]
  -[SiriPresentationViewController _endDelayingSessionEndForTTS]
  -[SiriPresentationViewController _releaseExistingTrigger]
  -[SiriPresentationViewController _setButtonDownEventDidOccur:]
  -[SiriPresentationViewController _updateDismissalOptionsIfNecessary:]
  -[SiriPresentationViewController _presentationDismissalRequestedWithOptions:withCompletion:]
  -[SiriPresentationViewController _isDelayingSessionEnd]
  -[SiriPresentationViewController _instrumentSuccessfulAppLaunchIfNecessary]
  -[SiriPresentationViewController _dismissalReasonForDismissalWithOptions:]
  -[SiriPresentationViewController _logDismissalRequestedForViewMode:withDismissalReason:]
  -[SiriPresentationViewController _teardownPongTimer]
  -[SiriPresentationViewController _wasDismissedWithCompletion:]
  -[SiriPresentationViewController startAnimationDismissalWatchdogTimerWithTimeoutHandler:shouldTurnScreenOff:]
  -[SiriPresentationViewController stopAnimationDimissalWatchdogTimerIfNeededThen:onQueue:]
  -[SiriPresentationViewController _scheduleConnectionHouseKeepingAfterDelay:]
  -[SiriPresentationViewController _setUpUnownedConnectionIfNecessary]
  -[SiriPresentationViewController _cleanupUnownedConnection]
  -[SiriPresentationViewController _cancelPendingPhoneCall]
  -[SiriPresentationViewController activateWithSource:timestamp:]
  -[SiriPresentationViewController clearSiriViewControllerTimer]
  -[SiriPresentationViewController _setCarSiriButtonTimeInterval:]
  -[SiriPresentationViewController _carSiriButtonHoldToTalkIntervalFiredWithButtonIdentifier:]
  -[SiriPresentationViewController _setCarSiriButtonHoldToTalkTimer:]
  -[SiriPresentationViewController _carSiriButtonHoldToTalkTimer]
  -[SiriPresentationViewController _buttonIdentifierIsHoldToTalkTrigger:]
  -[SiriPresentationViewController _handleTapButtonBehavior:]
  -[SiriPresentationViewController _handleTapDismissal:]
  -[SiriPresentationViewController _dismissSiriSetup]
  -[SiriPresentationViewController _requestDismissalWithOptions:]
  -[SiriPresentationViewController _carSiriButtonTimeInterval]
  -[SiriPresentationViewController _cancelPendingActivationWithReason:]
  -[SiriPresentationViewController _setWaitingForTelephonyToStart:]
  -[SiriPresentationViewController _telephonyHasStarted]
  -[SiriPresentationViewController _viewModeForRequestOptions:]
  -[SiriPresentationViewController _shouldAllowResizingBetweenModesForViewMode:]
  -[SiriPresentationViewController _processConnectionHouseKeeping]
  -[SiriPresentationViewController _finishClearingSiriViewController:]
  -[SiriPresentationViewController setClearSiriViewControllerTimer:]
  -[SiriPresentationViewController setSiriViewController:]
  -[SiriPresentationViewController _enableSpringBoardIdleTimer]
  -[SiriPresentationViewController setSiriSetupNavigationController:]
  -[SiriPresentationViewController setSiriSetupViewController:]
  -[SiriPresentationViewController _checkForGuideUpdatesIfNecessary]
  -[SiriPresentationViewController _clearSiriViewControllerWithCompletion:]
  -[SiriPresentationViewController _startGuidedAccessOnDismissal]
  -[SiriPresentationViewController _setStartGuidedAccessOnDismissal:]
  -[SiriPresentationViewController presentationHostedInSpringBoard]
  -[SiriPresentationViewController _setSpringBoardIdleTimerDisabled:]
  -[SiriPresentationViewController _emitInstrumentationDismissalStateWithReason:]
  -[SiriPresentationViewController _resetStateForInstrumentation]
  -[SiriPresentationViewController _impliedDismissalReasonFromState]
  -[SiriPresentationViewController _beginDelayingSessionEndForTTS]
  -[SiriPresentationViewController _hasTestingInput]
  -[SiriPresentationViewController _dequeueTestingInput]
  -[SiriPresentationViewController _openURL:bundleId:delaySessionEndForTTS:punchoutStyle:completion:]
  -[SiriPresentationViewController intentUsageDelegate]
  -[SiriPresentationViewController _setVoiceActivationMaskShown:]
  -[SiriPresentationViewController starkAppBundleIdentifierContext]
  -[SiriPresentationViewController _isWaitingForTelephonyToStart]
  -[SiriPresentationViewController _callIsActiveDidChangeNotification:]
  -[SiriPresentationViewController _sendTelephonyHasStartedAfterDelay:]
  -[SiriPresentationViewController _ttsQueueDidEmpty:]
  -[SiriPresentationViewController siriSetupNavigationController]
  -[SiriPresentationViewController _setupSiriViewControllerPresentedSuccessHandler]
  -[SiriPresentationViewController _watchdogQueue_startAnimationDismissalWatchdogTimerWithTimeoutHandler:shouldTurnScreenOff:]
  -[SiriPresentationViewController animationDismissalTimer]
  -[SiriPresentationViewController setAnimationDismissalTimer:]
  -[SiriPresentationViewController _watchdogQueue_stopAnimationDismissalWatchdogTimerIfNeededThen:onQueue:]
  -[SiriPresentationViewController _shouldKeepPonging]
  -[SiriPresentationViewController _waitForPing]
  -[SiriPresentationViewController pongTimer]
  -[SiriPresentationViewController setPongTimer:]
  -[SiriPresentationViewController siriViewController:onboardingScreenContinueButtonTappedWithRequestOptions:]
  -[SiriPresentationViewController siriSetupViewController:openURL:]
  -[SiriPresentationViewController _siriDidOpenURL:]
  -[SiriPresentationViewController _isDeviceButton:]
  -[SiriPresentationViewController _applicationsDidChange]
  -[SiriPresentationViewController unownedConnection]
  -[SiriPresentationViewController setUnownedConnection:]
  -[SiriPresentationViewController _lastAppUpdateTimestamp]
  -[SiriPresentationViewController _setLastAppUpdateTimestamp:]
  -[SiriPresentationViewController _isSpringBoardIdleTimerDisabled]
  -[SiriPresentationViewController _isVoiceActivationMaskShown]
  -[SiriPresentationViewController _buttonDownEventDidOccur]
  -[SiriPresentationViewController _shouldCancelWake]
  -[SiriPresentationViewController setIntentUsageDelegate:]
  -[SiriPresentationViewController siriSetupViewController]
  -[SiriPresentationViewController _testInputQueue]
  -[SiriPresentationViewController setTestInputQueue:]
  -[SiriPresentationViewController _enableAudioInjection:audioFiles:]
  -[SiriPresentationViewController _runSyntheticButtonActivationTest]
  -[SiriPresentationViewController _startUIRequestWithText:testName:]
  -[SiriPresentationViewController _removePreviousConversationIfNeededWithTestName:testOptions:]
  -[SiriPresentationViewController _removePreviousInjectAudioSettings]


SASHIDGenerator : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[SASHIDGenerator init]
  -[SASHIDGenerator dealloc]
  -[SASHIDGenerator .cxx_destruct]
  -[SASHIDGenerator _sendHIDEvent:]
  -[SASHIDGenerator _sendHIDHoldHomeButton]
  -[SASHIDGenerator _sendHIDHoldLockButton]
  -[SASHIDGenerator sendHoldHomeButtonHIDEvents]
  -[SASHIDGenerator sendHoldLockButtonHIDEvents]


SASGuideMonitor : NSObject /usr/lib/libSystem.B.dylib <AFUISiriLanguageDelegate>
 @property  AFUISiriLanguage *language
 @property  NSDate *lastAppUpdateTimestamp
 @property  NSDate *lastGuideCheck
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SASGuideMonitor monitor]

  // instance methods
  -[SASGuideMonitor init]
  -[SASGuideMonitor _language]
  -[SASGuideMonitor .cxx_destruct]
  -[SASGuideMonitor siriLanguageSpokenLanguageCodeDidChange:]
  -[SASGuideMonitor _applicationsDidChange]
  -[SASGuideMonitor checkForGuideUpdatesIfNecessary]
  -[SASGuideMonitor lastAppUpdateTimestamp]
  -[SASGuideMonitor setLastAppUpdateTimestamp:]
  -[SASGuideMonitor lastGuideCheck]
  -[SASGuideMonitor setLastGuideCheck:]


01 00 0200 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFAnalytics 
01 00 0200 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFApplicationContext 
01 00 0200 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFConnection 
01 00 0200 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFConversationStore 
01 00 0200 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFPreferences 
01 00 0200 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFQueue 
01 00 0200 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFSettingsConnection 
01 00 0300 /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI: AFUIGuideCacheManager 
01 00 0300 /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI: AFUIPreferences 
01 00 0300 /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI: AFUIRequestTrigger 
01 00 0300 /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI: AFUISiriLanguage 
01 00 0300 /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI: AFUISiriSession 
01 00 0300 /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI: AFUISiriSetupViewController 
01 00 0340 /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI: AFUISiriViewController 
01 00 0300 /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI: AFUITouchPassThroughView 
01 00 0200 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFWatchdogTimer 
01 00 0400 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceConnection 
01 00 0400 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceConnectionEndpoint 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSAppLink 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0e00 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAAppInfo 
01 00 0e00 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACarPlaySupportedOEMAppIdList 
01 00 0f00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SASActivationRequest 
01 00 0f00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SASBoardServicesConfiguration 
01 00 0f00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SASPresentationServer 
01 00 0f00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SASRequestOptions 
01 00 0f00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SASSystemState 
01 00 0f00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SASTestingInput 
01 00 0e00 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASyncAppIdentifyingInfo 
01 00 1400 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaPunchOut 
01 00 1100 /System/Library/PrivateFrameworks/SiriUICore.framework/SiriUICore: SUICFlamesView 
01 00 1700 /System/Library/PrivateFrameworks/SiriCore.framework/SiriCore: SiriCoreSymptomsReporter 
01 00 0f00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriDismissalOptions 
01 00 0f00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriPresentationIdentifierTransport 
01 00 0f00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriPresentationOptions 
01 00 0f00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriPunchoutRequest 
01 00 1000 /System/Library/PrivateFrameworks/SiriUI.framework/SiriUI: SiriUIConfiguration 
01 00 1000 /System/Library/PrivateFrameworks/SiriUI.framework/SiriUI: SiriUIPreferences 
01 00 1000 /System/Library/PrivateFrameworks/SiriUI.framework/SiriUI: SiriUIUtilities 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0600 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDClientContext 
01 00 0600 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextQueries 
