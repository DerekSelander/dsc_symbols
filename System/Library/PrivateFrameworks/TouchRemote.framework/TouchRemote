|| __DATA.__data __TRLogEnabled
|| __DATA.__data __TRLogVerboseEnabled
|| __DATA.__objc_data _OBJC_CLASS_$_TRAccountManager
|| __DATA.__objc_data _OBJC_CLASS_$_TRAccountsManager
|| __DATA.__objc_data _OBJC_CLASS_$_TRActivationOperation
|| __DATA.__objc_data _OBJC_CLASS_$_TRActivationOperationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_TRAnisetteDataHandler
|| __DATA.__objc_data _OBJC_CLASS_$_TRAnisetteDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_TRAuthenticationOperation
|| __DATA.__objc_data _OBJC_CLASS_$_TRAuthenticationOperationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_TRClientConnection
|| __DATA.__objc_data _OBJC_CLASS_$_TRCompanionAuthOperation
|| __DATA.__objc_data _OBJC_CLASS_$_TRCompanionAuthOperationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_TRCompletionOperation
|| __DATA.__objc_data _OBJC_CLASS_$_TRConnection
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupAction
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupAuthenticateAction
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupCancelAction
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupConnectAction
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupFinishAction
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupGeneralSetupAction
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupLegacyAction
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupLegacyAuthenticationAction
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupLegacyCancelAction
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupLegacyFinishAction
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupLegacySetupAction
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupLegacySetupActionAuthInfo
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupPeripheral
|| __DATA.__objc_data _OBJC_CLASS_$_TRDeviceSetupServer
|| __DATA.__objc_data _OBJC_CLASS_$_TREraseAnisetteDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TREraseAnisetteDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRErrorResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TREventMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TRFetchAnisetteDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRFetchAnisetteDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRHandshakeOperation
|| __DATA.__objc_data _OBJC_CLASS_$_TRHandshakeOperationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_TRHandshakeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRHandshakeResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRHeartbeatRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRHeartbeatResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRLegacyAnisetteDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRLegacyAnisetteDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TRMessageDecoder
|| __DATA.__objc_data _OBJC_CLASS_$_TRMessageEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_TRNearbyDevice
|| __DATA.__objc_data _OBJC_CLASS_$_TRNearbyDeviceAdvertiser
|| __DATA.__objc_data _OBJC_CLASS_$_TRNearbyDeviceScanner
|| __DATA.__objc_data _OBJC_CLASS_$_TRNetworkOperation
|| __DATA.__objc_data _OBJC_CLASS_$_TRNetworkOperationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_TROperation
|| __DATA.__objc_data _OBJC_CLASS_$_TROperationQueue
|| __DATA.__objc_data _OBJC_CLASS_$_TRProvisionAnisetteDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRProvisionAnisetteDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRProxyAuthOperation
|| __DATA.__objc_data _OBJC_CLASS_$_TRProxyAuthOperationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_TRRequestMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TRResponseMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TRServerConnection
|| __DATA.__objc_data _OBJC_CLASS_$_TRSession
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupActivationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupActivationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupAuthenticationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupCompanionAuthenticationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupCompletionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupCompletionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupConfigurationOperation
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupConfigurationOperationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupConfigurationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupConfigurationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupHandler
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupNetworkRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupNetworkResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupProxyAuthenticationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupProxyDeviceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupProxyDeviceResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRSetupWorkflow
|| __DATA.__objc_data _OBJC_CLASS_$_TRSyncAnisetteDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TRSyncAnisetteDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TRTransferServer
|| __DATA.__objc_data _OBJC_CLASS_$_TRUserNotificationManager
|| __DATA.__objc_data _OBJC_CLASS_$__TRUserNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_TRAccountManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TRAccountsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TRActivationOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_TRActivationOperationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_TRAnisetteDataHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_TRAnisetteDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_TRAuthenticationOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_TRAuthenticationOperationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_TRClientConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_TRCompanionAuthOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_TRCompanionAuthOperationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_TRCompletionOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_TRConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupAction
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupAuthenticateAction
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupCancelAction
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupConnectAction
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupFinishAction
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupGeneralSetupAction
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupLegacyAction
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupLegacyAuthenticationAction
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupLegacyCancelAction
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupLegacyFinishAction
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupLegacySetupAction
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupLegacySetupActionAuthInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupPeripheral
|| __DATA.__objc_data _OBJC_METACLASS_$_TRDeviceSetupServer
|| __DATA.__objc_data _OBJC_METACLASS_$_TREraseAnisetteDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TREraseAnisetteDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRErrorResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TREventMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TRFetchAnisetteDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRFetchAnisetteDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRHandshakeOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_TRHandshakeOperationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_TRHandshakeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRHandshakeResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRHeartbeatRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRHeartbeatResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRLegacyAnisetteDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRLegacyAnisetteDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TRMessageDecoder
|| __DATA.__objc_data _OBJC_METACLASS_$_TRMessageEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_TRNearbyDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_TRNearbyDeviceAdvertiser
|| __DATA.__objc_data _OBJC_METACLASS_$_TRNearbyDeviceScanner
|| __DATA.__objc_data _OBJC_METACLASS_$_TRNetworkOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_TRNetworkOperationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_TROperation
|| __DATA.__objc_data _OBJC_METACLASS_$_TROperationQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_TRProvisionAnisetteDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRProvisionAnisetteDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRProxyAuthOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_TRProxyAuthOperationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_TRRequestMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TRResponseMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TRServerConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSession
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupActivationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupActivationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupAuthenticationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupCompanionAuthenticationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupCompletionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupCompletionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupConfigurationOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupConfigurationOperationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupConfigurationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupConfigurationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupNetworkRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupNetworkResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupProxyAuthenticationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupProxyDeviceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupProxyDeviceResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSetupWorkflow
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSyncAnisetteDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TRSyncAnisetteDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TRTransferServer
|| __DATA.__objc_data _OBJC_METACLASS_$_TRUserNotificationManager
|| __DATA.__objc_data _OBJC_METACLASS_$__TRUserNotification
|| __DATA_CONST.__const _TRActivationOperationIsActivatedKey
|| __DATA_CONST.__const _TRAuthenticationOperationUnauthenticatedServicesKey
|| __DATA_CONST.__const _TRCompanionAuthOperationHandlerParamKeyAccount
|| __DATA_CONST.__const _TRCompanionAuthOperationHandlerParamKeyCompanionDevice
|| __DATA_CONST.__const _TRCompanionAuthOperationHandlerParamKeyTargetedAccountServices
|| __DATA_CONST.__const _TRCompanionAuthOperationUnauthenticatedServicesKey
|| __DATA_CONST.__const _TRDeviceSetupAuthenticationKeyAccountID
|| __DATA_CONST.__const _TRDeviceSetupAuthenticationKeyAccountPassword
|| __DATA_CONST.__const _TRDeviceSetupAuthenticationKeyAttemptCount
|| __DATA_CONST.__const _TRDeviceSetupErrorDomain
|| __DATA_CONST.__const _TRDeviceSetupInfoKeyCountryCode
|| __DATA_CONST.__const _TRDeviceSetupInfoKeyDiagnosticsEnabled
|| __DATA_CONST.__const _TRDeviceSetupInfoKeyHomeSharingAppleID
|| __DATA_CONST.__const _TRDeviceSetupInfoKeyHomeSharingGroupID
|| __DATA_CONST.__const _TRDeviceSetupInfoKeyLanguage
|| __DATA_CONST.__const _TRDeviceSetupInfoKeyRememberPasswordEnabled
|| __DATA_CONST.__const _TRHandshakeOperationHandlerParamKeyProtocolVersion
|| __DATA_CONST.__const _TRHandshakeOperationProtocolVersionKey
|| __DATA_CONST.__const _TRNearbyDeviceErrorDomain
|| __DATA_CONST.__const _TRNetworkOperationHandlerParamKeyNetworkPassword
|| __DATA_CONST.__const _TRNetworkOperationHandlerParamKeyNetworkSSID
|| __DATA_CONST.__const _TRNetworkOperationHasNetworkKey
|| __DATA_CONST.__const _TRProxyAuthOperationHandlerParamKeyAccount
|| __DATA_CONST.__const _TRProxyAuthOperationHandlerParamKeyAccountRawPassword
|| __DATA_CONST.__const _TRProxyAuthOperationHandlerParamKeyTargetedAccountServices
|| __DATA_CONST.__const _TRProxyAuthOperationUnauthenticatedServicesKey
|| __DATA_CONST.__const _TRSetupConfigurationOperationHandlerParamKeyDeviceName
|| __DATA_CONST.__const _TRSetupConfigurationOperationNeedsNetworkKey
|| __DATA_CONST.__const _TRSetupConfigurationOperationUnauthenticatedServicesKey
|| __DATA_CONST.__const _TRSetupHandlerCompanionAuthParamKeyAccount
|| __DATA_CONST.__const _TRSetupHandlerCompanionAuthParamKeyCompanionDevice
|| __DATA_CONST.__const _TRSetupHandlerCompanionAuthParamKeyTargetedAccountServices
|| __DATA_CONST.__const _TRSetupHandlerConfigurationParamKeyDeviceName
|| __DATA_CONST.__const _TRSetupHandlerNetworkParamKeyNetworkPassword
|| __DATA_CONST.__const _TRSetupHandlerNetworkParamKeyNetworkSSID
|| __DATA_CONST.__const _TRSetupHandlerProxyAuthParamKeyAccount
|| __DATA_CONST.__const _TRSetupHandlerProxyAuthParamKeyAccountRawPassword
|| __DATA_CONST.__const _TRSetupHandlerProxyAuthParamKeyTargetedAccountServices
|| __DATA_CONST.__const __TRDeviceSetupLegacySetupKeyAction
|| __DATA_CONST.__const __TRDeviceSetupLegacySetupKeyParams
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRCompletionOperationHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRDeviceSetupBrowser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRTransferBrowser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRCompletionOperationHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRDeviceSetupBrowser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRTransferBrowser
|| __TEXT.__text _StringFromTRAccountService
|| __TEXT.__text _TRCanPerformSetupGetConfig
|| __TEXT.__text _TRGetCurrentWiFiNetwork
|| __TEXT.__text _TRGetNetworkConfigurationForIPv4
|| __TEXT.__text _TRLogHandle
|| __TEXT.__text _TRLogInitialize
|| __TEXT.__text _TRStringFromDeviceSetupError
|| __TEXT.__text _TRStringFromSetupAccountType
__ Accounts: _ACAccountTypeIdentifierGameCenter
__ Accounts: _ACAccountTypeIdentifierIDMS
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AirPlaySupport: _PCFdAVst
__ AirPlaySupport: _VBAEFt
__ AirPlaySupport: _gQblcfSzZBQsYCCV
__ AirPlaySupport: _h4BvW7X
__ AudioToolbox: _AudioServicesPlaySystemSoundWithCompletion
__ AuthKit: _AKAuthenticationRawPasswordKey
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ AuthKit: _OBJC_CLASS_$_AKAnisetteData
__ AuthKit: _OBJC_CLASS_$_AKAnisetteProvisioningController
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ AuthKit: _OBJC_CLASS_$_AKDevice
__ AuthKitUI: _OBJC_CLASS_$_AKAppleIDAuthenticationInAppContext
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationGetResponseValue
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationKeyboardTypesKey
__ CoreFoundation: _kCFUserNotificationTextFieldTitlesKey
__ CoreFoundation: _kCFUserNotificationTextFieldValuesKey
__ CoreUtils: _AES_CTR_Final
__ CoreUtils: _AES_CTR_Init
__ CoreUtils: _AES_CTR_Update
__ Foundation: _NSHomeDirectoryForUser
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSOperationQueue
__ MobileWiFi: _WiFiDeviceClientCopyCurrentNetwork
__ MobileWiFi: _WiFiManagerClientCopyDevices
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiNetworkCopyPassword
__ MobileWiFi: _WiFiNetworkGetSSID
__ Sharing: _OBJC_CLASS_$_SFDeviceDiscovery
__ Sharing: _OBJC_CLASS_$_SFEventMessage
__ Sharing: _OBJC_CLASS_$_SFRequestMessage
__ Sharing: _OBJC_CLASS_$_SFResponseMessage
__ Sharing: _OBJC_CLASS_$_SFService
__ Sharing: _OBJC_CLASS_$_SFSession
__ Sharing: _SFServiceIdentifierSetup
__ SpringBoardServices: _SBUserNotificationDefaultButtonTag
__ SpringBoardServices: _SBUserNotificationDontDismissOnUnlock
__ SpringBoardServices: _SBUserNotificationTextAutocapitalizationType
__ SpringBoardServices: _SBUserNotificationTextAutocorrectionType
__ StoreServices: _OBJC_CLASS_$_SSAccountStore
__ StoreServices: _OBJC_CLASS_$_SSMutableURLRequestProperties
__ StoreServices: _OBJC_CLASS_$_SSURLConnectionRequest
__ StoreServices: _SSHTTPHeaderUserAgent
__ SystemConfiguration: _SCNetworkInterfaceGetBSDName
__ SystemConfiguration: _SCNetworkInterfaceGetInterfaceType
__ SystemConfiguration: _SCNetworkProtocolGetConfiguration
__ SystemConfiguration: _SCNetworkServiceCopyProtocol
__ SystemConfiguration: _SCNetworkServiceGetInterface
__ SystemConfiguration: _SCNetworkSetCopyCurrent
__ SystemConfiguration: _SCNetworkSetCopyServices
__ SystemConfiguration: _SCPreferencesCreateWithAuthorization
__ SystemConfiguration: _kSCNetworkInterfaceTypeIEEE80211
__ SystemConfiguration: _kSCNetworkProtocolTypeIPv4
__ SystemConfiguration: _kSCPropNetIPv4ConfigMethod
__ SystemConfiguration: _kSCValNetIPv4ConfigMethodDHCP
__ WirelessProximity: _OBJC_CLASS_$_WPTransfer
__ iTunesStore: _ISCopyDecompressedGZipDataForData
__ iTunesStore: _ISCopyGzippedDataForData
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
TRCompletionOperationHandler : NSObject /usr/lib/libSystem.B.dylib <TROperationHandler>
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRCompletionOperationHandler .cxx_destruct]
  -[TRCompletionOperationHandler completionHandler]
  -[TRCompletionOperationHandler setCompletionHandler:]
  -[TRCompletionOperationHandler initWithCompletionHandler:]
  -[TRCompletionOperationHandler registerMessageHandlersForSession:]
  -[TRCompletionOperationHandler _handleCompletionRequest:withResponseHandler:]


TRResponseMessage : TRMessage

TRMessageEncoder : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TRMessageEncoder encodeMessage:]


TRMessageDecoder : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TRMessageDecoder decodeMessage:error:]


TRAccountsManager : NSObject /usr/lib/libSystem.B.dylib
 @property  ACAccountStore *iCloudAccountStore
 @property  NSString *deviceName
 @property  SSAccount *activeiTunesStoreAccount
 @property  ACAccount *activeiCloudAccount
 @property  NSString *homeSharingAppleID
 @property  NSString *homeSharingGroupID
 @property  GKLocalPlayer *localGameCenterPlayer

  // class methods
  +[TRAccountsManager sharedInstance]

  // instance methods
  -[TRAccountsManager .cxx_destruct]
  -[TRAccountsManager deviceName]
  -[TRAccountsManager homeSharingGroupID]
  -[TRAccountsManager iCloudAccountStore]
  -[TRAccountsManager activeiTunesStoreAccount]
  -[TRAccountsManager activeiCloudAccount]
  -[TRAccountsManager homeSharingAppleID]
  -[TRAccountsManager localGameCenterPlayer]
  -[TRAccountsManager defaultAccountIDForAuthenticationAccountType:]
  -[TRAccountsManager accountTypesWithDefaultAccountID:]
  -[TRAccountsManager setICloudAccountStore:]


TRHeartbeatRequest : TRRequestMessage

TRHeartbeatResponse : TRResponseMessage

TRTransferBrowser : NSObject /usr/lib/libSystem.B.dylib <WPTransferDelegate>
 @property  <TRTransferBrowserDelegate> *delegate
 @property  long long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRTransferBrowser init]
  -[TRTransferBrowser dealloc]
  -[TRTransferBrowser delegate]
  -[TRTransferBrowser setDelegate:]
  -[TRTransferBrowser .cxx_destruct]
  -[TRTransferBrowser stop]
  -[TRTransferBrowser start]
  -[TRTransferBrowser state]
  -[TRTransferBrowser defer]
  -[TRTransferBrowser transferDidFailToStartAdvertising:]
  -[TRTransferBrowser transferDidFailToStartScanning:]
  -[TRTransferBrowser transferDidFailWithError:]
  -[TRTransferBrowser transferDidReceiveData:]
  -[TRTransferBrowser transferComplete]
  -[TRTransferBrowser transferDidUpdateAdvertiserState:]
  -[TRTransferBrowser transferDidUpdateScannerState:]
  -[TRTransferBrowser _beginScanningIfPowered]
  -[TRTransferBrowser _runSetupStepWithInput:inputLength:outputData:]
  -[TRTransferBrowser _runVerifyStepWithInput:inputLength:outputData:]
  -[TRTransferBrowser _didReceiveEncryptedData:]
  -[TRTransferBrowser _didFinishPairing]


TRNearbyDevice : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long supportedService
 @property  SFDevice *representedDevice
 @property  NSUUID *identifier

  // instance methods
  -[TRNearbyDevice init]
  -[TRNearbyDevice .cxx_destruct]
  -[TRNearbyDevice identifier]
  -[TRNearbyDevice initWithRepresentedDevice:supportedService:]
  -[TRNearbyDevice representedDevice]
  -[TRNearbyDevice supportedService]
  -[TRNearbyDevice setSupportedService:]


TROperationQueue : NSOperationQueue /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  BOOL cancelled
 @property  NSObject<OS_dispatch_queue> *cancellationQ

  // instance methods
  -[TROperationQueue init]
  -[TROperationQueue invalidate]
  -[TROperationQueue addOperation:]
  -[TROperationQueue .cxx_destruct]
  -[TROperationQueue addOperationWithBlock:]
  -[TROperationQueue isCancelled]
  -[TROperationQueue addOperations:waitUntilFinished:]
  -[TROperationQueue setCancelled:]
  -[TROperationQueue cancellationQ]
  -[TROperationQueue setCancellationQ:]


TRSetupConfigurationOperationHandler : NSObject /usr/lib/libSystem.B.dylib <TROperationHandler>
 @property  @? configurationHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRSetupConfigurationOperationHandler .cxx_destruct]
  -[TRSetupConfigurationOperationHandler registerMessageHandlersForSession:]
  -[TRSetupConfigurationOperationHandler configurationHandler]
  -[TRSetupConfigurationOperationHandler setConfigurationHandler:]
  -[TRSetupConfigurationOperationHandler _handleConfigurationRequest:withResponseHandler:]
  -[TRSetupConfigurationOperationHandler initWithConfigurationHandler:]


TRNetworkOperation : TROperation
 @property  @? sendingWiFiInfoHandler

  // instance methods
  -[TRNetworkOperation .cxx_destruct]
  -[TRNetworkOperation execute]
  -[TRNetworkOperation _handleResponse:]
  -[TRNetworkOperation _sendRequestWithSSID:password:]
  -[TRNetworkOperation sendingWiFiInfoHandler]
  -[TRNetworkOperation setSendingWiFiInfoHandler:]


TRProxyAuthOperationHandler : NSObject /usr/lib/libSystem.B.dylib <TROperationHandler>
 @property  @? proxyAuthHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRProxyAuthOperationHandler .cxx_destruct]
  -[TRProxyAuthOperationHandler registerMessageHandlersForSession:]
  -[TRProxyAuthOperationHandler _handleProxyDeviceRequest:withResponseHandler:]
  -[TRProxyAuthOperationHandler _handleProxyAuthenticationRequest:withResponseHandler:]
  -[TRProxyAuthOperationHandler initWithProxyAuthHandler:]
  -[TRProxyAuthOperationHandler proxyAuthHandler]
  -[TRProxyAuthOperationHandler setProxyAuthHandler:]


TRCompanionAuthOperationHandler : NSObject /usr/lib/libSystem.B.dylib <TROperationHandler>
 @property  @? companionAuthHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRCompanionAuthOperationHandler .cxx_destruct]
  -[TRCompanionAuthOperationHandler registerMessageHandlersForSession:]
  -[TRCompanionAuthOperationHandler _handleCompanionAuthenticationRequest:withResponseHandler:]
  -[TRCompanionAuthOperationHandler initWithCompanionAuthHandler:]
  -[TRCompanionAuthOperationHandler companionAuthHandler]
  -[TRCompanionAuthOperationHandler setCompanionAuthHandler:]


TRTransferServer : NSObject /usr/lib/libSystem.B.dylib <WPTransferDelegate>
 @property  <TRTransferServerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRTransferServer init]
  -[TRTransferServer dealloc]
  -[TRTransferServer delegate]
  -[TRTransferServer setDelegate:]
  -[TRTransferServer .cxx_destruct]
  -[TRTransferServer stop]
  -[TRTransferServer start]
  -[TRTransferServer transferDidFailToStartAdvertising:]
  -[TRTransferServer transferDidFailToStartScanning:]
  -[TRTransferServer transferDidFailWithError:]
  -[TRTransferServer transferDidReceiveData:]
  -[TRTransferServer transferComplete]
  -[TRTransferServer transferDidUpdateAdvertiserState:]
  -[TRTransferServer transferDidUpdateScannerState:]
  -[TRTransferServer _runSetupStepWithInput:inputLength:outputData:]
  -[TRTransferServer _runVerifyStepWithInput:inputLength:outputData:]
  -[TRTransferServer _beginAdvertisingIfPowered]
  -[TRTransferServer _onQueue_didReceiveEncryptedData:]
  -[TRTransferServer _onQueue_didFinishPairing]


TRSetupHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  <TRSetupHandlerDelegate> *delegate

  // instance methods
  -[TRSetupHandler delegate]
  -[TRSetupHandler setDelegate:]
  -[TRSetupHandler .cxx_destruct]
  -[TRSetupHandler initWithDelegate:]
  -[TRSetupHandler registerMessageHandlersForSession:]
  -[TRSetupHandler _handleCompletionRequest:withResponseHandler:]
  -[TRSetupHandler _handleConfigurationRequest:withResponseHandler:]
  -[TRSetupHandler _handleProxyDeviceRequest:withResponseHandler:]
  -[TRSetupHandler _handleProxyAuthenticationRequest:withResponseHandler:]
  -[TRSetupHandler _handleCompanionAuthenticationRequest:withResponseHandler:]
  -[TRSetupHandler _handleHandshakeRequest:withResponseHandler:]
  -[TRSetupHandler _handleNetworkRequest:withResponseHandler:]
  -[TRSetupHandler _handleActivationRequest:withResponseHandler:]


TRClientConnection : TRConnection
 @property  SFSession *session

  // instance methods
  -[TRClientConnection invalidate]
  -[TRClientConnection .cxx_destruct]
  -[TRClientConnection setInvalidationHandler:]
  -[TRClientConnection setInterruptionHandler:]
  -[TRClientConnection interruptionHandler]
  -[TRClientConnection invalidationHandler]
  -[TRClientConnection session]
  -[TRClientConnection setSession:]
  -[TRClientConnection sendResponse:]
  -[TRClientConnection sendEvent:]
  -[TRClientConnection sendRequest:]
  -[TRClientConnection setEventMessageHandler:]
  -[TRClientConnection eventMessageHandler]
  -[TRClientConnection requestMessageHandler]
  -[TRClientConnection setRequestMessageHandler:]
  -[TRClientConnection connectToNearbyDevice:withCompletion:]


TRSetupWorkflow : NSObject /usr/lib/libSystem.B.dylib
 @property  TRNearbyDevice *nearbyDevice
 @property  unsigned long state
 @property  TRSession *session
 @property  NSSet *unauthenticatedAccountServices
 @property  UIViewController *presentingViewController
 @property  TROperationQueue *operationQueue
 @property  @? startedHandler
 @property  @? configurationStageStartedHandler
 @property  @? networkStageStartedHandler
 @property  @? activationStageStartedHandler
 @property  @? completionHandler
 @property  @? failureHandler

  // class methods
  +[TRSetupWorkflow initialize]

  // instance methods
  -[TRSetupWorkflow .cxx_destruct]
  -[TRSetupWorkflow cancel]
  -[TRSetupWorkflow operationQueue]
  -[TRSetupWorkflow setOperationQueue:]
  -[TRSetupWorkflow start]
  -[TRSetupWorkflow state]
  -[TRSetupWorkflow setState:]
  -[TRSetupWorkflow session]
  -[TRSetupWorkflow setSession:]
  -[TRSetupWorkflow completionHandler]
  -[TRSetupWorkflow setCompletionHandler:]
  -[TRSetupWorkflow presentingViewController]
  -[TRSetupWorkflow setPresentingViewController:]
  -[TRSetupWorkflow setUnauthenticatedAccountServices:]
  -[TRSetupWorkflow failureHandler]
  -[TRSetupWorkflow setFailureHandler:]
  -[TRSetupWorkflow startedHandler]
  -[TRSetupWorkflow setStartedHandler:]
  -[TRSetupWorkflow _abortSetupWithErrorCode:userInfo:]
  -[TRSetupWorkflow _performHandshakeOperation]
  -[TRSetupWorkflow _performConfigurationOperation]
  -[TRSetupWorkflow configurationStageStartedHandler]
  -[TRSetupWorkflow _performNetworkOperation]
  -[TRSetupWorkflow _performActivationOperation]
  -[TRSetupWorkflow networkStageStartedHandler]
  -[TRSetupWorkflow activationStageStartedHandler]
  -[TRSetupWorkflow _performAuthenticationOperation]
  -[TRSetupWorkflow unauthenticatedAccountServices]
  -[TRSetupWorkflow _performCompletionOperation]
  -[TRSetupWorkflow _releaseHandlers]
  -[TRSetupWorkflow setConfigurationStageStartedHandler:]
  -[TRSetupWorkflow setNetworkStageStartedHandler:]
  -[TRSetupWorkflow setActivationStageStartedHandler:]
  -[TRSetupWorkflow initWithNearbyDevice:presentingViewController:]
  -[TRSetupWorkflow nearbyDevice]
  -[TRSetupWorkflow setNearbyDevice:]


TRProxyAuthOperation : TROperation
 @property  ACAccount *account
 @property  NSSet *targetedServices
 @property  UIViewController *presentingViewController

  // instance methods
  -[TRProxyAuthOperation .cxx_destruct]
  -[TRProxyAuthOperation execute]
  -[TRProxyAuthOperation account]
  -[TRProxyAuthOperation setAccount:]
  -[TRProxyAuthOperation presentingViewController]
  -[TRProxyAuthOperation setPresentingViewController:]
  -[TRProxyAuthOperation setTargetedServices:]
  -[TRProxyAuthOperation _sendProxyDeviceRequest]
  -[TRProxyAuthOperation _handleProxyDeviceResponse:]
  -[TRProxyAuthOperation _performProxyAuthenticationWithProxiedDevice:]
  -[TRProxyAuthOperation targetedServices]
  -[TRProxyAuthOperation _handleProxyAuthenticationResponse:]


TRSetupCompanionAuthenticationRequest : TRRequestMessage
 @property  ACAccount *account
 @property  NSSet *targetedAccountServices
 @property  AKDevice *companionDevice

  // class methods
  +[TRSetupCompanionAuthenticationRequest supportsSecureCoding]

  // instance methods
  -[TRSetupCompanionAuthenticationRequest encodeWithCoder:]
  -[TRSetupCompanionAuthenticationRequest initWithCoder:]
  -[TRSetupCompanionAuthenticationRequest .cxx_destruct]
  -[TRSetupCompanionAuthenticationRequest account]
  -[TRSetupCompanionAuthenticationRequest setAccount:]
  -[TRSetupCompanionAuthenticationRequest targetedAccountServices]
  -[TRSetupCompanionAuthenticationRequest companionDevice]
  -[TRSetupCompanionAuthenticationRequest setCompanionDevice:]
  -[TRSetupCompanionAuthenticationRequest setTargetedAccountServices:]


TRSetupProxyAuthenticationRequest : TRRequestMessage
 @property  ACAccount *account
 @property  NSString *rawPassword
 @property  NSSet *targetedAccountServices

  // class methods
  +[TRSetupProxyAuthenticationRequest supportsSecureCoding]

  // instance methods
  -[TRSetupProxyAuthenticationRequest encodeWithCoder:]
  -[TRSetupProxyAuthenticationRequest initWithCoder:]
  -[TRSetupProxyAuthenticationRequest .cxx_destruct]
  -[TRSetupProxyAuthenticationRequest account]
  -[TRSetupProxyAuthenticationRequest setAccount:]
  -[TRSetupProxyAuthenticationRequest setRawPassword:]
  -[TRSetupProxyAuthenticationRequest rawPassword]
  -[TRSetupProxyAuthenticationRequest targetedAccountServices]
  -[TRSetupProxyAuthenticationRequest setTargetedAccountServices:]


TRSetupAuthenticationResponse : TRResponseMessage
 @property  NSSet *unauthenticatedAccountServices

  // class methods
  +[TRSetupAuthenticationResponse supportsSecureCoding]

  // instance methods
  -[TRSetupAuthenticationResponse encodeWithCoder:]
  -[TRSetupAuthenticationResponse initWithCoder:]
  -[TRSetupAuthenticationResponse .cxx_destruct]
  -[TRSetupAuthenticationResponse setUnauthenticatedAccountServices:]
  -[TRSetupAuthenticationResponse unauthenticatedAccountServices]


TRSetupProxyDeviceRequest : TRRequestMessage

TRSetupProxyDeviceResponse : TRResponseMessage
 @property  AKDevice *proxyDevice

  // class methods
  +[TRSetupProxyDeviceResponse supportsSecureCoding]

  // instance methods
  -[TRSetupProxyDeviceResponse encodeWithCoder:]
  -[TRSetupProxyDeviceResponse initWithCoder:]
  -[TRSetupProxyDeviceResponse .cxx_destruct]
  -[TRSetupProxyDeviceResponse setProxyDevice:]
  -[TRSetupProxyDeviceResponse proxyDevice]


TRDeviceSetupServer : NSObject /usr/lib/libSystem.B.dylib <TRTransferServerDelegate>
 @property  NSMutableArray *accountsToAuthenticate
 @property  NSMutableDictionary *cachedAuthInfo
 @property  <TRDeviceSetupServerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRDeviceSetupServer initialize]

  // instance methods
  -[TRDeviceSetupServer init]
  -[TRDeviceSetupServer dealloc]
  -[TRDeviceSetupServer delegate]
  -[TRDeviceSetupServer setDelegate:]
  -[TRDeviceSetupServer .cxx_destruct]
  -[TRDeviceSetupServer stop]
  -[TRDeviceSetupServer start]
  -[TRDeviceSetupServer server:didFailToReceiveData:]
  -[TRDeviceSetupServer serverWillReceiveData:]
  -[TRDeviceSetupServer server:didReceiveData:replyHandler:]
  -[TRDeviceSetupServer _finishSetupWithError:replyHandler:]
  -[TRDeviceSetupServer _connectWithAction:replyHandler:]
  -[TRDeviceSetupServer _authenticateWithAction:replyHandler:]
  -[TRDeviceSetupServer _setUpWithAction:replyHandler:]
  -[TRDeviceSetupServer _finishWithAction:replyHandler:]
  -[TRDeviceSetupServer _cancelWithAction:replyHandler:]
  -[TRDeviceSetupServer _cancelTransferConnection]
  -[TRDeviceSetupServer setCachedAuthInfo:]
  -[TRDeviceSetupServer setAccountsToAuthenticate:]
  -[TRDeviceSetupServer _requestAuthenticationForNextAccountWithReplyHandler:]
  -[TRDeviceSetupServer accountsToAuthenticate]
  -[TRDeviceSetupServer _requestAuthenticationForAccount:replyHandler:]
  -[TRDeviceSetupServer _requestGeneralSetupWithReplyHandler:]
  -[TRDeviceSetupServer cachedAuthInfo]
  -[TRDeviceSetupServer _authenticateAccount:withAuthInfo:completion:]
  -[TRDeviceSetupServer _requestAuthenticationFromPeripheralForAccount:lastAttemptAction:lastAttemptError:replyHandler:]
  -[TRDeviceSetupServer _sendAction:sendDataHandler:shouldSendNilOnFailure:error:]
  -[TRDeviceSetupServer cancelActiveSetup]


TRActivationOperationHandler : NSObject /usr/lib/libSystem.B.dylib <TROperationHandler>
 @property  @? activationHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRActivationOperationHandler .cxx_destruct]
  -[TRActivationOperationHandler initWithActivationHandler:]
  -[TRActivationOperationHandler setActivationHandler:]
  -[TRActivationOperationHandler activationHandler]
  -[TRActivationOperationHandler registerMessageHandlersForSession:]
  -[TRActivationOperationHandler _handleActivationRequest:withResponseHandler:]


TRNearbyDeviceAdvertiser : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long state
 @property  SFService *service
 @property  NSObject<OS_dispatch_queue> *advertiserQ
 @property  unsigned long requestedService
 @property  NSMapTable *sessionsTable
 @property  NSObject<OS_dispatch_queue> *sessionsTableQ
 @property  <TRNearbyDeviceAdvertiserDelegate> *delegate

  // class methods
  +[TRNearbyDeviceAdvertiser initialize]

  // instance methods
  -[TRNearbyDeviceAdvertiser init]
  -[TRNearbyDeviceAdvertiser delegate]
  -[TRNearbyDeviceAdvertiser setDelegate:]
  -[TRNearbyDeviceAdvertiser .cxx_destruct]
  -[TRNearbyDeviceAdvertiser state]
  -[TRNearbyDeviceAdvertiser setState:]
  -[TRNearbyDeviceAdvertiser service]
  -[TRNearbyDeviceAdvertiser setService:]
  -[TRNearbyDeviceAdvertiser stopAdvertising]
  -[TRNearbyDeviceAdvertiser _handleInvalidation]
  -[TRNearbyDeviceAdvertiser _handleInterruption]
  -[TRNearbyDeviceAdvertiser setRequestedService:]
  -[TRNearbyDeviceAdvertiser _handleEventMessage:]
  -[TRNearbyDeviceAdvertiser _handleRequestMessage:]
  -[TRNearbyDeviceAdvertiser _handleActivationWithError:]
  -[TRNearbyDeviceAdvertiser requestedService]
  -[TRNearbyDeviceAdvertiser sessionsTable]
  -[TRNearbyDeviceAdvertiser _requestSessionForMessage:withCallback:]
  -[TRNearbyDeviceAdvertiser _respondToRequest:withError:]
  -[TRNearbyDeviceAdvertiser _handleNewConnectionFromPeerDevice:withCompletionHandler:]
  -[TRNearbyDeviceAdvertiser startAdvertisingWithService:]
  -[TRNearbyDeviceAdvertiser pauseAdvertising]
  -[TRNearbyDeviceAdvertiser resumeAdvertising]
  -[TRNearbyDeviceAdvertiser advertiserQ]
  -[TRNearbyDeviceAdvertiser setAdvertiserQ:]
  -[TRNearbyDeviceAdvertiser setSessionsTable:]
  -[TRNearbyDeviceAdvertiser sessionsTableQ]
  -[TRNearbyDeviceAdvertiser setSessionsTableQ:]


TROperation : NSOperation /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  NSDictionary *result
 @property  NSError *error
 @property  TRSession *session
 @property  NSObject<OS_dispatch_semaphore> *semaphore

  // class methods
  +[TROperation userCancelledError]

  // instance methods
  -[TROperation .cxx_destruct]
  -[TROperation error]
  -[TROperation main]
  -[TROperation setError:]
  -[TROperation result]
  -[TROperation setResult:]
  -[TROperation session]
  -[TROperation setSession:]
  -[TROperation execute]
  -[TROperation finishWithError:]
  -[TROperation finishWithResult:]
  -[TROperation initWithSession:]
  -[TROperation semaphore]
  -[TROperation setSemaphore:]


TRAnisetteDataProvider : NSObject /usr/lib/libSystem.B.dylib <AKAnisetteServiceProtocol, NSCopying>
 @property  TRSession *session
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRAnisetteDataProvider copyWithZone:]
  -[TRAnisetteDataProvider .cxx_destruct]
  -[TRAnisetteDataProvider session]
  -[TRAnisetteDataProvider setSession:]
  -[TRAnisetteDataProvider initWithSession:]
  -[TRAnisetteDataProvider provisionAnisetteWithCompletion:]
  -[TRAnisetteDataProvider syncAnisetteWithSIMData:completion:]
  -[TRAnisetteDataProvider eraseAnisetteWithCompletion:]
  -[TRAnisetteDataProvider fetchAnisetteDataAndProvisionIfNecessary:withCompletion:]
  -[TRAnisetteDataProvider legacyAnisetteDataForDSID:withCompletion:]


TRProvisionAnisetteDataRequest : TRRequestMessage

TRProvisionAnisetteDataResponse : TRResponseMessage
 @property  BOOL didSucceed

  // class methods
  +[TRProvisionAnisetteDataResponse supportsSecureCoding]

  // instance methods
  -[TRProvisionAnisetteDataResponse encodeWithCoder:]
  -[TRProvisionAnisetteDataResponse initWithCoder:]
  -[TRProvisionAnisetteDataResponse didSucceed]
  -[TRProvisionAnisetteDataResponse setDidSucceed:]


TRSyncAnisetteDataRequest : TRRequestMessage
 @property  NSData *simData

  // class methods
  +[TRSyncAnisetteDataRequest supportsSecureCoding]

  // instance methods
  -[TRSyncAnisetteDataRequest encodeWithCoder:]
  -[TRSyncAnisetteDataRequest initWithCoder:]
  -[TRSyncAnisetteDataRequest .cxx_destruct]
  -[TRSyncAnisetteDataRequest simData]
  -[TRSyncAnisetteDataRequest setSimData:]


TRSyncAnisetteDataResponse : TRResponseMessage
 @property  BOOL didSucceed

  // class methods
  +[TRSyncAnisetteDataResponse supportsSecureCoding]

  // instance methods
  -[TRSyncAnisetteDataResponse encodeWithCoder:]
  -[TRSyncAnisetteDataResponse initWithCoder:]
  -[TRSyncAnisetteDataResponse didSucceed]
  -[TRSyncAnisetteDataResponse setDidSucceed:]


TREraseAnisetteDataRequest : TRRequestMessage

TREraseAnisetteDataResponse : TRResponseMessage
 @property  BOOL didSucceed

  // class methods
  +[TREraseAnisetteDataResponse supportsSecureCoding]

  // instance methods
  -[TREraseAnisetteDataResponse encodeWithCoder:]
  -[TREraseAnisetteDataResponse initWithCoder:]
  -[TREraseAnisetteDataResponse didSucceed]
  -[TREraseAnisetteDataResponse setDidSucceed:]


TRFetchAnisetteDataRequest : TRRequestMessage
 @property  BOOL shouldProvision

  // class methods
  +[TRFetchAnisetteDataRequest supportsSecureCoding]

  // instance methods
  -[TRFetchAnisetteDataRequest encodeWithCoder:]
  -[TRFetchAnisetteDataRequest initWithCoder:]
  -[TRFetchAnisetteDataRequest shouldProvision]
  -[TRFetchAnisetteDataRequest setShouldProvision:]


TRFetchAnisetteDataResponse : TRResponseMessage
 @property  AKAnisetteData *anisetteData

  // class methods
  +[TRFetchAnisetteDataResponse supportsSecureCoding]

  // instance methods
  -[TRFetchAnisetteDataResponse encodeWithCoder:]
  -[TRFetchAnisetteDataResponse initWithCoder:]
  -[TRFetchAnisetteDataResponse .cxx_destruct]
  -[TRFetchAnisetteDataResponse anisetteData]
  -[TRFetchAnisetteDataResponse setAnisetteData:]


TRLegacyAnisetteDataRequest : TRRequestMessage
 @property  NSString *dsid

  // class methods
  +[TRLegacyAnisetteDataRequest supportsSecureCoding]

  // instance methods
  -[TRLegacyAnisetteDataRequest encodeWithCoder:]
  -[TRLegacyAnisetteDataRequest initWithCoder:]
  -[TRLegacyAnisetteDataRequest .cxx_destruct]
  -[TRLegacyAnisetteDataRequest dsid]
  -[TRLegacyAnisetteDataRequest setDsid:]


TRLegacyAnisetteDataResponse : TRResponseMessage
 @property  AKAnisetteData *anisetteData

  // class methods
  +[TRLegacyAnisetteDataResponse supportsSecureCoding]

  // instance methods
  -[TRLegacyAnisetteDataResponse encodeWithCoder:]
  -[TRLegacyAnisetteDataResponse initWithCoder:]
  -[TRLegacyAnisetteDataResponse .cxx_destruct]
  -[TRLegacyAnisetteDataResponse anisetteData]
  -[TRLegacyAnisetteDataResponse setAnisetteData:]


TRServerConnection : TRConnection
 @property  SFService *service

  // instance methods
  -[TRServerConnection invalidate]
  -[TRServerConnection .cxx_destruct]
  -[TRServerConnection service]
  -[TRServerConnection sendResponse:]
  -[TRServerConnection sendEvent:]
  -[TRServerConnection setService:]
  -[TRServerConnection initWithService:]
  -[TRServerConnection sendRequest:]


TRRequestMessage : TRMessage

TREventMessage : TRMessage

TRHandshakeOperationHandler : NSObject /usr/lib/libSystem.B.dylib <TROperationHandler>
 @property  @? handshakeHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRHandshakeOperationHandler .cxx_destruct]
  -[TRHandshakeOperationHandler registerMessageHandlersForSession:]
  -[TRHandshakeOperationHandler _handleHandshakeRequest:withResponseHandler:]
  -[TRHandshakeOperationHandler initWithHandshakeHandler:]
  -[TRHandshakeOperationHandler handshakeHandler]
  -[TRHandshakeOperationHandler setHandshakeHandler:]


TRAuthenticationOperationHandler : NSObject /usr/lib/libSystem.B.dylib <TROperationHandler>
 @property  TRCompanionAuthOperationHandler *companionAuthHandler
 @property  TRProxyAuthOperationHandler *proxyAuthHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRAuthenticationOperationHandler .cxx_destruct]
  -[TRAuthenticationOperationHandler registerMessageHandlersForSession:]
  -[TRAuthenticationOperationHandler proxyAuthHandler]
  -[TRAuthenticationOperationHandler setProxyAuthHandler:]
  -[TRAuthenticationOperationHandler companionAuthHandler]
  -[TRAuthenticationOperationHandler setCompanionAuthHandler:]
  -[TRAuthenticationOperationHandler initWithCompanionAuthHandler:proxyAuthHandler:]


TRActivationOperation : TROperation
  // instance methods
  -[TRActivationOperation execute]
  -[TRActivationOperation _handleResponse:]


TRSetupCompletionRequest : TRRequestMessage
 @property  BOOL completedSuccessfully
 @property  long long errorCode

  // class methods
  +[TRSetupCompletionRequest supportsSecureCoding]

  // instance methods
  -[TRSetupCompletionRequest encodeWithCoder:]
  -[TRSetupCompletionRequest initWithCoder:]
  -[TRSetupCompletionRequest errorCode]
  -[TRSetupCompletionRequest setErrorCode:]
  -[TRSetupCompletionRequest completedSuccessfully]
  -[TRSetupCompletionRequest setCompletedSuccessfully:]


TRSetupCompletionResponse : TRResponseMessage

TRDeviceSetupAction : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *actionType
 @property  NSDictionary *parameters
 @property  unsigned long protocolVersion

  // class methods
  +[TRDeviceSetupAction actionWithData:error:supportsLegacy:]
  +[TRDeviceSetupAction actionWithActionType:parameters:]

  // instance methods
  -[TRDeviceSetupAction init]
  -[TRDeviceSetupAction .cxx_destruct]
  -[TRDeviceSetupAction parameters]
  -[TRDeviceSetupAction protocolVersion]
  -[TRDeviceSetupAction actionType]
  -[TRDeviceSetupAction dataRepresentationWithError:]
  -[TRDeviceSetupAction propertyListRepresentation]
  -[TRDeviceSetupAction _initWithActionType:parameters:]


TRDeviceSetupLegacyAction : TRDeviceSetupAction
  // instance methods
  -[TRDeviceSetupLegacyAction propertyListRepresentation]


TRDeviceSetupLegacySetupActionAuthInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *headers
 @property  NSDictionary *body

  // instance methods
  -[TRDeviceSetupLegacySetupActionAuthInfo .cxx_destruct]
  -[TRDeviceSetupLegacySetupActionAuthInfo body]
  -[TRDeviceSetupLegacySetupActionAuthInfo headers]
  -[TRDeviceSetupLegacySetupActionAuthInfo initWithHeaders:body:]


TRDeviceSetupLegacyAuthenticationAction : TRDeviceSetupConnectAction
 @property  NSString *deviceGUID
 @property  NSString *userAgent

  // instance methods
  -[TRDeviceSetupLegacyAuthenticationAction .cxx_destruct]
  -[TRDeviceSetupLegacyAuthenticationAction deviceName]
  -[TRDeviceSetupLegacyAuthenticationAction userAgent]
  -[TRDeviceSetupLegacyAuthenticationAction setUserAgent:]
  -[TRDeviceSetupLegacyAuthenticationAction propertyListRepresentation]
  -[TRDeviceSetupLegacyAuthenticationAction deviceGUID]
  -[TRDeviceSetupLegacyAuthenticationAction setDeviceGUID:]


TRDeviceSetupLegacySetupAction : TRDeviceSetupLegacyAction
 @property  TRDeviceSetupLegacySetupActionAuthInfo *authInfo
 @property  NSString *networkSSID
 @property  NSString *networkPassword
 @property  BOOL diagnosticsEnabled
 @property  NSString *language
 @property  NSString *countryCode
 @property  NSString *homeSharingAppleID
 @property  NSString *homeSharingGroupID
 @property  BOOL rememberPassword

  // instance methods
  -[TRDeviceSetupLegacySetupAction countryCode]
  -[TRDeviceSetupLegacySetupAction language]
  -[TRDeviceSetupLegacySetupAction diagnosticsEnabled]
  -[TRDeviceSetupLegacySetupAction homeSharingGroupID]
  -[TRDeviceSetupLegacySetupAction authInfo]
  -[TRDeviceSetupLegacySetupAction homeSharingAppleID]
  -[TRDeviceSetupLegacySetupAction networkSSID]
  -[TRDeviceSetupLegacySetupAction networkPassword]
  -[TRDeviceSetupLegacySetupAction rememberPassword]
  -[TRDeviceSetupLegacySetupAction initWithAuthInfo:networkSSID:networkPassword:diagnosticsEnabled:language:countryCode:homeSharingAppleID:homeSharingGroupID:rememberPassword:]


TRDeviceSetupLegacyCancelAction : TRDeviceSetupLegacyAction

TRDeviceSetupLegacyFinishAction : TRDeviceSetupLegacyAction

TRDeviceSetupConnectAction : TRDeviceSetupAction
 @property  NSString *deviceName
 @property  NSString *networkSSID
 @property  NSString *networkPassword

  // instance methods
  -[TRDeviceSetupConnectAction init]
  -[TRDeviceSetupConnectAction deviceName]
  -[TRDeviceSetupConnectAction networkSSID]
  -[TRDeviceSetupConnectAction networkPassword]
  -[TRDeviceSetupConnectAction initWithDeviceName:networkSSID:networkPassword:]


TRDeviceSetupAuthenticateAction : TRDeviceSetupAction
 @property  unsigned long accountType
 @property  NSString *accountID
 @property  NSString *accountPassword
 @property  NSArray *accountTypesWithSharedCredentials
 @property  unsigned long attemptCount
 @property  NSString *requestMessage
 @property  NSString *failureMessage

  // class methods
  +[TRDeviceSetupAuthenticateAction actionForFailedAttemptWithOriginalAction:requestMessage:failureMessage:]
  +[TRDeviceSetupAuthenticateAction actionForInitialAttemptWithAccountType:requestMessage:]
  +[TRDeviceSetupAuthenticateAction actionForFinishedRequestWithOriginalAction:accountID:accountPassword:accountTypesWithSharedCredentials:]
  +[TRDeviceSetupAuthenticateAction actionForCancelledRequestWithOriginalAction:]

  // instance methods
  -[TRDeviceSetupAuthenticateAction init]
  -[TRDeviceSetupAuthenticateAction accountType]
  -[TRDeviceSetupAuthenticateAction attemptCount]
  -[TRDeviceSetupAuthenticateAction accountID]
  -[TRDeviceSetupAuthenticateAction requestMessage]
  -[TRDeviceSetupAuthenticateAction accountPassword]
  -[TRDeviceSetupAuthenticateAction accountTypesWithSharedCredentials]
  -[TRDeviceSetupAuthenticateAction _initWithAccountType:accountID:accountPassword:accountTypesWithSharedCredentials:attemptCount:requestMessage:failureMessage:]
  -[TRDeviceSetupAuthenticateAction failureMessage]


TRDeviceSetupGeneralSetupAction : TRDeviceSetupAction
 @property  NSString *countryCode
 @property  NSString *language
 @property  NSString *homeSharingID
 @property  NSString *homeSharingGroupID
 @property  BOOL rememberPassword
 @property  BOOL diagnosticsEnabled

  // instance methods
  -[TRDeviceSetupGeneralSetupAction init]
  -[TRDeviceSetupGeneralSetupAction countryCode]
  -[TRDeviceSetupGeneralSetupAction language]
  -[TRDeviceSetupGeneralSetupAction homeSharingGroupID]
  -[TRDeviceSetupGeneralSetupAction isDiagnosticsEnabled]
  -[TRDeviceSetupGeneralSetupAction homeSharingID]
  -[TRDeviceSetupGeneralSetupAction rememberPassword]
  -[TRDeviceSetupGeneralSetupAction initWithCountryCode:language:homeSharingID:homeSharingGroupID:isDiagnosticsEnabled:rememberPassword:]


TRDeviceSetupFinishAction : TRDeviceSetupAction
  // instance methods
  -[TRDeviceSetupFinishAction init]


TRDeviceSetupCancelAction : TRDeviceSetupAction
 @property  NSError *error

  // instance methods
  -[TRDeviceSetupCancelAction init]
  -[TRDeviceSetupCancelAction .cxx_destruct]
  -[TRDeviceSetupCancelAction error]
  -[TRDeviceSetupCancelAction initWithError:]


TRNetworkOperationHandler : NSObject /usr/lib/libSystem.B.dylib <TROperationHandler>
 @property  @? joinNetworkHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRNetworkOperationHandler .cxx_destruct]
  -[TRNetworkOperationHandler registerMessageHandlersForSession:]
  -[TRNetworkOperationHandler _handleNetworkRequest:withResponseHandler:]
  -[TRNetworkOperationHandler initWithJoinNetworkHandler:]
  -[TRNetworkOperationHandler joinNetworkHandler]
  -[TRNetworkOperationHandler setJoinNetworkHandler:]


TRNearbyDeviceScanner : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long state
 @property  SFDeviceDiscovery *deviceDiscovery
 @property  NSObject<OS_dispatch_queue> *scannerQ
 @property  unsigned long requestedService
 @property  <TRNearbyDeviceScannerDelegate> *delegate

  // class methods
  +[TRNearbyDeviceScanner initialize]

  // instance methods
  -[TRNearbyDeviceScanner init]
  -[TRNearbyDeviceScanner delegate]
  -[TRNearbyDeviceScanner setDelegate:]
  -[TRNearbyDeviceScanner .cxx_destruct]
  -[TRNearbyDeviceScanner state]
  -[TRNearbyDeviceScanner setState:]
  -[TRNearbyDeviceScanner openSession:withCompletion:]
  -[TRNearbyDeviceScanner _handleInvalidation]
  -[TRNearbyDeviceScanner _handleInterruption]
  -[TRNearbyDeviceScanner stopScanning]
  -[TRNearbyDeviceScanner deviceDiscovery]
  -[TRNearbyDeviceScanner setDeviceDiscovery:]
  -[TRNearbyDeviceScanner setRequestedService:]
  -[TRNearbyDeviceScanner _handleActivationWithError:]
  -[TRNearbyDeviceScanner requestedService]
  -[TRNearbyDeviceScanner _deviceFound:]
  -[TRNearbyDeviceScanner _deviceChanged:]
  -[TRNearbyDeviceScanner startScanningForDevicesWithService:]
  -[TRNearbyDeviceScanner scannerQ]
  -[TRNearbyDeviceScanner setScannerQ:]


TRConnection : NSObject /usr/lib/libSystem.B.dylib
 @property  @? interruptionHandler
 @property  @? invalidationHandler
 @property  @? eventMessageHandler
 @property  @? requestMessageHandler

  // instance methods
  -[TRConnection invalidate]
  -[TRConnection .cxx_destruct]
  -[TRConnection setInvalidationHandler:]
  -[TRConnection setInterruptionHandler:]
  -[TRConnection interruptionHandler]
  -[TRConnection invalidationHandler]
  -[TRConnection sendResponse:]
  -[TRConnection sendEvent:]
  -[TRConnection sendRequest:]
  -[TRConnection setEventMessageHandler:]
  -[TRConnection eventMessageHandler]
  -[TRConnection requestMessageHandler]
  -[TRConnection setRequestMessageHandler:]


TRErrorResponse : TRResponseMessage
 @property  NSError *error

  // class methods
  +[TRErrorResponse supportsSecureCoding]

  // instance methods
  -[TRErrorResponse encodeWithCoder:]
  -[TRErrorResponse initWithCoder:]
  -[TRErrorResponse .cxx_destruct]
  -[TRErrorResponse error]
  -[TRErrorResponse setError:]


TRSetupNetworkRequest : TRRequestMessage
 @property  NSString *networkSSID
 @property  NSString *networkPassword

  // class methods
  +[TRSetupNetworkRequest supportsSecureCoding]

  // instance methods
  -[TRSetupNetworkRequest encodeWithCoder:]
  -[TRSetupNetworkRequest initWithCoder:]
  -[TRSetupNetworkRequest .cxx_destruct]
  -[TRSetupNetworkRequest setNetworkSSID:]
  -[TRSetupNetworkRequest setNetworkPassword:]
  -[TRSetupNetworkRequest networkSSID]
  -[TRSetupNetworkRequest networkPassword]


TRSetupNetworkResponse : TRResponseMessage
 @property  BOOL hasNetwork

  // class methods
  +[TRSetupNetworkResponse supportsSecureCoding]

  // instance methods
  -[TRSetupNetworkResponse encodeWithCoder:]
  -[TRSetupNetworkResponse initWithCoder:]
  -[TRSetupNetworkResponse hasNetwork]
  -[TRSetupNetworkResponse setHasNetwork:]


TRSession : NSObject /usr/lib/libSystem.B.dylib
 @property  TRNearbyDevice *nearbyDevice
 @property  NSMutableDictionary *messageHandlerMap
 @property  TRAnisetteDataHandler *anisetteDataHandler
 @property  NSObject<OS_dispatch_queue> *messageHandlerMapQ
 @property  NSObject<OS_dispatch_queue> *connectionQ
 @property  NSObject<OS_dispatch_source> *heartbeatRequestTimer
 @property  TRConnection *connection
 @property  BOOL connected
 @property  @? disconnectHandler

  // instance methods
  -[TRSession init]
  -[TRSession .cxx_destruct]
  -[TRSession disconnect]
  -[TRSession connection]
  -[TRSession setConnection:]
  -[TRSession sendEvent:]
  -[TRSession _handleEvent:]
  -[TRSession isConnected]
  -[TRSession setRequestHandler:forRequestClass:]
  -[TRSession setDisconnectHandler:]
  -[TRSession initWithNearbyDevice:]
  -[TRSession sendRequest:withResponseHandler:]
  -[TRSession setEventHandler:forEventClass:]
  -[TRSession disconnectHandler]
  -[TRSession startHeartbeat]
  -[TRSession anisetteDataHandler]
  -[TRSession nearbyDevice]
  -[TRSession setNearbyDevice:]
  -[TRSession _respondToRequest:withError:]
  -[TRSession sendHeartbeatWithResponseHandler:]
  -[TRSession heartbeatRequestTimer]
  -[TRSession setHeartbeatRequestTimer:]
  -[TRSession _handleRequest:]
  -[TRSession _sendResponse:forRequest:]
  -[TRSession _handlerForEventClass:]
  -[TRSession _handleHeartbeatWithResponseHandler:]
  -[TRSession _handlerForRequestClass:]
  -[TRSession _setMessageHandler:forMessageClass:]
  -[TRSession _messageHandlerForMessageClass:]
  -[TRSession _sendHeartbeats]
  -[TRSession messageHandlerMap]
  -[TRSession setMessageHandlerMap:]
  -[TRSession setAnisetteDataHandler:]
  -[TRSession messageHandlerMapQ]
  -[TRSession setMessageHandlerMapQ:]
  -[TRSession connectionQ]
  -[TRSession setConnectionQ:]


TRSetupConfigurationRequest : TRRequestMessage
 @property  NSString *deviceName

  // class methods
  +[TRSetupConfigurationRequest supportsSecureCoding]

  // instance methods
  -[TRSetupConfigurationRequest encodeWithCoder:]
  -[TRSetupConfigurationRequest initWithCoder:]
  -[TRSetupConfigurationRequest .cxx_destruct]
  -[TRSetupConfigurationRequest setDeviceName:]
  -[TRSetupConfigurationRequest deviceName]


TRSetupConfigurationResponse : TRResponseMessage
 @property  BOOL needsNetwork
 @property  NSSet *unauthenticatedAccountServices

  // class methods
  +[TRSetupConfigurationResponse supportsSecureCoding]

  // instance methods
  -[TRSetupConfigurationResponse encodeWithCoder:]
  -[TRSetupConfigurationResponse initWithCoder:]
  -[TRSetupConfigurationResponse .cxx_destruct]
  -[TRSetupConfigurationResponse setUnauthenticatedAccountServices:]
  -[TRSetupConfigurationResponse setNeedsNetwork:]
  -[TRSetupConfigurationResponse unauthenticatedAccountServices]
  -[TRSetupConfigurationResponse _stringFromAccountServices:]
  -[TRSetupConfigurationResponse needsNetwork]


TRHandshakeRequest : TRRequestMessage
 @property  long long protocolVersion

  // class methods
  +[TRHandshakeRequest supportsSecureCoding]

  // instance methods
  -[TRHandshakeRequest encodeWithCoder:]
  -[TRHandshakeRequest initWithCoder:]
  -[TRHandshakeRequest protocolVersion]
  -[TRHandshakeRequest setProtocolVersion:]


TRHandshakeResponse : TRResponseMessage
 @property  long long protocolVersion

  // class methods
  +[TRHandshakeResponse supportsSecureCoding]

  // instance methods
  -[TRHandshakeResponse encodeWithCoder:]
  -[TRHandshakeResponse initWithCoder:]
  -[TRHandshakeResponse protocolVersion]
  -[TRHandshakeResponse setProtocolVersion:]


TRCompletionOperation : TROperation
 @property  BOOL success
 @property  long long errorCode

  // instance methods
  -[TRCompletionOperation execute]
  -[TRCompletionOperation success]
  -[TRCompletionOperation setSuccess:]
  -[TRCompletionOperation errorCode]
  -[TRCompletionOperation setErrorCode:]


TRAuthenticationOperation : TROperation
 @property  NSSet *targetedServices
 @property  BOOL shouldIgnoreAuthFailures
 @property  BOOL shouldForceInteractiveAuth
 @property  UIViewController *presentingViewController

  // instance methods
  -[TRAuthenticationOperation .cxx_destruct]
  -[TRAuthenticationOperation execute]
  -[TRAuthenticationOperation presentingViewController]
  -[TRAuthenticationOperation setPresentingViewController:]
  -[TRAuthenticationOperation setShouldForceInteractiveAuth:]
  -[TRAuthenticationOperation setShouldIgnoreAuthFailures:]
  -[TRAuthenticationOperation setTargetedServices:]
  -[TRAuthenticationOperation shouldForceInteractiveAuth]
  -[TRAuthenticationOperation targetedServices]
  -[TRAuthenticationOperation shouldIgnoreAuthFailures]


TRAnisetteDataHandler : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[TRAnisetteDataHandler registerForAnisetteDataRequestsFromSession:]


TRSetupConfigurationOperation : TROperation
  // instance methods
  -[TRSetupConfigurationOperation execute]
  -[TRSetupConfigurationOperation _handleResponse:]


TRUserNotificationManager : NSObject /usr/lib/libSystem.B.dylib
 @property  _TRUserNotification *activeUserNotification

  // class methods
  +[TRUserNotificationManager sharedInstance]

  // instance methods
  -[TRUserNotificationManager dealloc]
  -[TRUserNotificationManager .cxx_destruct]
  -[TRUserNotificationManager cancel]
  -[TRUserNotificationManager setActiveUserNotification:]
  -[TRUserNotificationManager activeUserNotification]
  -[TRUserNotificationManager _showUserNotificationWithDictionary:options:completion:]
  -[TRUserNotificationManager requestAuthenticationWithAccountID:message:completion:]
  -[TRUserNotificationManager requestAppleIDAuthenticationWithAccountID:completion:]
  -[TRUserNotificationManager presentErrorWithTitle:message:completion:]
  -[TRUserNotificationManager requestPermissionToInitiateSetupWithCompletion:]
  -[TRUserNotificationManager presentAuthenticationFailureWithMessage:completion:]
  -[TRUserNotificationManager requestPermissionForDiagnosticSubmissionWithCompletion:]
  -[TRUserNotificationManager presentWiFiNetworkConnectionError:completion:]
  -[TRUserNotificationManager requestLegacyAuthenticationWithAccountID:completion:]
  -[TRUserNotificationManager presentLegacyAuthenticationFailedDialogWithMessage:completion:]


_TRUserNotification : NSObject /usr/lib/libSystem.B.dylib
 @property  ^{__CFUserNotification=} CFUserNotification
 @property  int response
 @property  unsigned long responseFlags
 @property  BOOL didAccept

  // class methods
  +[_TRUserNotification userNotificationDictionaryWithTitle:message:defaultButtonTitle:alternateButtonTitle:]
  +[_TRUserNotification userNotificationDictionaryWithTitle:message:defaultButtonTitle:alternateButtonTitle:isTopMost:dismissOnUnlock:]

  // instance methods
  -[_TRUserNotification dealloc]
  -[_TRUserNotification cancel]
  -[_TRUserNotification response]
  -[_TRUserNotification show]
  -[_TRUserNotification responseFlags]
  -[_TRUserNotification initWithDictionary:options:error:]
  -[_TRUserNotification didAccept]
  -[_TRUserNotification textFieldValueAtIndex:]
  -[_TRUserNotification CFUserNotification]


TRSetupActivationRequest : TRRequestMessage

TRSetupActivationResponse : TRResponseMessage
 @property  BOOL activated

  // class methods
  +[TRSetupActivationResponse supportsSecureCoding]

  // instance methods
  -[TRSetupActivationResponse encodeWithCoder:]
  -[TRSetupActivationResponse initWithCoder:]
  -[TRSetupActivationResponse activated]
  -[TRSetupActivationResponse setActivated:]


TRAccountManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TRAccountManager idmsAccountForAccountService:]
  +[TRAccountManager associatedAccountServicesForIDMSAccount:]
  +[TRAccountManager _idmsAccountForICloudService]
  +[TRAccountManager _idmsAccountForITunesService]
  +[TRAccountManager _idmsAccountForGameCenterService]
  +[TRAccountManager _primaryICloudAccount]
  +[TRAccountManager _idmsAccountForAccountWithUsername:altDSID:DSID:]
  +[TRAccountManager _primaryITunesAccount]
  +[TRAccountManager _primaryGameCenterAccount]


TRMessage : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDictionary *userInfo

  // class methods
  +[TRMessage supportsSecureCoding]

  // instance methods
  -[TRMessage userInfo]
  -[TRMessage encodeWithCoder:]
  -[TRMessage initWithCoder:]
  -[TRMessage .cxx_destruct]
  -[TRMessage setUserInfo:]


TRDeviceSetupBrowser : NSObject /usr/lib/libSystem.B.dylib <TRTransferBrowserDelegate>
 @property  TRTransferBrowser *transferBrowser
 @property  TRDeviceSetupPeripheral *peripheral
 @property  <TRDeviceSetupBrowserDelegate> *delegate
 @property  long long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRDeviceSetupBrowser init]
  -[TRDeviceSetupBrowser delegate]
  -[TRDeviceSetupBrowser setDelegate:]
  -[TRDeviceSetupBrowser .cxx_destruct]
  -[TRDeviceSetupBrowser stop]
  -[TRDeviceSetupBrowser start]
  -[TRDeviceSetupBrowser state]
  -[TRDeviceSetupBrowser defer]
  -[TRDeviceSetupBrowser peripheral]
  -[TRDeviceSetupBrowser setPeripheral:]
  -[TRDeviceSetupBrowser browser:didStartTransferWithSendDataHandler:]
  -[TRDeviceSetupBrowser browserDidDisconnect:]
  -[TRDeviceSetupBrowser browser:didReceiveData:replyHandler:]
  -[TRDeviceSetupBrowser browserDidChangeState:]
  -[TRDeviceSetupBrowser transferBrowser]
  -[TRDeviceSetupBrowser setTransferBrowser:]


TRDeviceSetupPeripheral : NSObject /usr/lib/libSystem.B.dylib
 @property  @? pendingSendDataHandler
 @property  NSString *authenticatediTunesStoreID
 @property  <TRDeviceSetupPeripheralDelegate> *delegate

  // instance methods
  -[TRDeviceSetupPeripheral init]
  -[TRDeviceSetupPeripheral delegate]
  -[TRDeviceSetupPeripheral setDelegate:]
  -[TRDeviceSetupPeripheral .cxx_destruct]
  -[TRDeviceSetupPeripheral _didDisconnect]
  -[TRDeviceSetupPeripheral _authenticateWithAction:replyHandler:]
  -[TRDeviceSetupPeripheral _setUpWithAction:replyHandler:]
  -[TRDeviceSetupPeripheral _didTapWithSendDataHandler:]
  -[TRDeviceSetupPeripheral _didReceiveData:replyHandler:]
  -[TRDeviceSetupPeripheral cancelPreparingForSetup]
  -[TRDeviceSetupPeripheral pendingSendDataHandler]
  -[TRDeviceSetupPeripheral setPendingSendDataHandler:]
  -[TRDeviceSetupPeripheral _sendAction:sendDataHandler:error:]
  -[TRDeviceSetupPeripheral _setupDidFailWithError:replyHandler:]
  -[TRDeviceSetupPeripheral _finishSetupWithAction:replyHandler:]
  -[TRDeviceSetupPeripheral _cancelSetupWithAction:replyHandler:]
  -[TRDeviceSetupPeripheral _legacyAuthenticateWithAction:attemptCount:replyHandler:]
  -[TRDeviceSetupPeripheral _legacyAuthenticateWithUserAgent:deviceGUID:accountID:password:attemptCount:completion:]
  -[TRDeviceSetupPeripheral _startAuthenticationWithReceivedAction:replyHandler:]
  -[TRDeviceSetupPeripheral _cancelAuthenticationWithReceivedAction:replyHandler:]
  -[TRDeviceSetupPeripheral setAuthenticatediTunesStoreID:]
  -[TRDeviceSetupPeripheral performSetupAndReturnError:]
  -[TRDeviceSetupPeripheral cancelSetupForStateChange]
  -[TRDeviceSetupPeripheral cancelSetupForTimeout]
  -[TRDeviceSetupPeripheral authenticatediTunesStoreID]


TRCompanionAuthOperation : TROperation
 @property  ACAccount *account
 @property  NSSet *targetedServices

  // instance methods
  -[TRCompanionAuthOperation .cxx_destruct]
  -[TRCompanionAuthOperation execute]
  -[TRCompanionAuthOperation account]
  -[TRCompanionAuthOperation setAccount:]
  -[TRCompanionAuthOperation setTargetedServices:]
  -[TRCompanionAuthOperation _handleResponse:]
  -[TRCompanionAuthOperation targetedServices]


TRHandshakeOperation : TROperation
 @property  long long protocolVersion

  // instance methods
  -[TRHandshakeOperation execute]
  -[TRHandshakeOperation protocolVersion]
  -[TRHandshakeOperation setProtocolVersion:]
  -[TRHandshakeOperation _handleResponse:]


NSData(TRAdditions)
	// instance methods
	-[NSData(TRAdditions) TR_compressedGzipData]
	-[NSData(TRAdditions) TR_decompressedGzipData]

NSSet(TRAdditions)
	// instance methods
	-[NSSet(TRAdditions) setByIntersectingSet:]
	-[NSSet(TRAdditions) setByMinusingSet:]
	-[NSSet(TRAdditions) setByRemovingObject:]

01 00 0800 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0800 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 0500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAnisetteData 
01 00 0500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAnisetteProvisioningController 
01 00 0500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 0600 /System/Library/PrivateFrameworks/AuthKitUI.framework/AuthKitUI: AKAppleIDAuthenticationInAppContext 
01 00 0500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKDevice 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/PrivateFrameworks/Sharing.framework/Sharing: SFDeviceDiscovery 
01 00 0700 /System/Library/PrivateFrameworks/Sharing.framework/Sharing: SFEventMessage 
01 00 0700 /System/Library/PrivateFrameworks/Sharing.framework/Sharing: SFRequestMessage 
01 00 0700 /System/Library/PrivateFrameworks/Sharing.framework/Sharing: SFResponseMessage 
01 00 0700 /System/Library/PrivateFrameworks/Sharing.framework/Sharing: SFService 
01 00 0700 /System/Library/PrivateFrameworks/Sharing.framework/Sharing: SFSession 
01 00 1500 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSAccountStore 
01 00 1500 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMutableURLRequestProperties 
01 00 1500 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSURLConnectionRequest 
01 00 0200 /System/Library/PrivateFrameworks/WirelessProximity.framework/WirelessProximity: WPTransfer 
