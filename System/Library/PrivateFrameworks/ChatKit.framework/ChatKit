|| __DATA.__common _CKBalloonViewUtilities_TestBalloonCache
|| __DATA.__common ___CurrentTestName
|| __DATA.__common _didLogFirstTraitChange
|| __DATA.__common _testOverrideCKUIBehaviorClass
|| __DATA.__data _CKConversationListContactPhotosEnabledNotification
|| __DATA.__data _CKMessageFilteringChangedNotification
|| __DATA.__data _CKMessageSpamFilteringChangedNotification
|| __DATA.__data _CKNavigationBarCanvasViewHeightAnimationCompletedNotification
|| __DATA.__data _CKNavigationBarCollectionViewShouldAdustForEditingModeNotification
|| __DATA.__data _CKPreferenceRaiseToListenDidChangeNotification
|| __DATA.__data _CKPreferenceSendAsSMSChangedNotification
|| __DATA.__data _CKTechnicalFailureUIPrefChangedNotification
|| __DATA.__data _kCKNavigationBarCollectionViewKey
|| __DATA.__data _kCKNavigationBarEditFrameKey
|| __DATA.__data _kCKNavigationBarIsInEditingModeKey
|| __DATA.__objc_data _OBJC_CLASS_$_CKAcknowledgmentVotingViewAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_CKActionMenuController
|| __DATA.__objc_data _OBJC_CLASS_$_CKActionMenuGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_CKAdaptivePresentationController
|| __DATA.__objc_data _OBJC_CLASS_$_CKAddressBook
|| __DATA.__objc_data _OBJC_CLASS_$_CKAggregateAcknowledgmentGradientBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKAggregateAcknowledgmentTranscriptCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKAggregateAttachmentMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKAggregateMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKAlertAction
|| __DATA.__objc_data _OBJC_CLASS_$_CKAlertController
|| __DATA.__objc_data _OBJC_CLASS_$_CKAlertUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKAnimatedEmojiMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKAnimatedImageView
|| __DATA.__objc_data _OBJC_CLASS_$_CKAnimatedStickerMediaObject
|| __DATA.__objc_data _OBJC_CLASS_$_CKAppIconCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKAppIconLinkView
|| __DATA.__objc_data _OBJC_CLASS_$_CKAppIconView
|| __DATA.__objc_data _OBJC_CLASS_$_CKAppInstallation
|| __DATA.__objc_data _OBJC_CLASS_$_CKAppInstallationWatcher
|| __DATA.__objc_data _OBJC_CLASS_$_CKAppManagerAppTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKAppMenuDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CKAppSearchResultsTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKAppStripLayout
|| __DATA.__objc_data _OBJC_CLASS_$_CKAppStripPredictiveType3DRotationTransition
|| __DATA.__objc_data _OBJC_CLASS_$_CKAppStripPredictiveTypeSimpleFadeTransition
|| __DATA.__objc_data _OBJC_CLASS_$_CKAppStripPredictiveTypeSpringFadeTransition
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssistantPerson
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssistantSearchUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssociatedMessageTranscriptCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssociatedStickerChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKAttachmentItemManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKAttachmentMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKAttachmentReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKAttachmentSaver
|| __DATA.__objc_data _OBJC_CLASS_$_CKAudioAttachmentItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKAudioController
|| __DATA.__objc_data _OBJC_CLASS_$_CKAudioMessageChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKAudioReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKAutoloopMovieReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKAutoupdatingDateFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_CKAutoupdatingRelativeDateFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_CKAvatarNotificationCalloutView
|| __DATA.__objc_data _OBJC_CLASS_$_CKAvatarShadowClippingCollectionReusableView
|| __DATA.__objc_data _OBJC_CLASS_$_CKAvatarShadowClippingLeftCollectionReusableView
|| __DATA.__objc_data _OBJC_CLASS_$_CKAvatarShadowClippingRightCollectionReusableView
|| __DATA.__objc_data _OBJC_CLASS_$_CKBackBarButtonItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKBackgroundDecorationView
|| __DATA.__objc_data _OBJC_CLASS_$_CKBalloonChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKBalloonSelectionState
|| __DATA.__objc_data _OBJC_CLASS_$_CKBannerCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKBaseLayer
|| __DATA.__objc_data _OBJC_CLASS_$_CKBigEmojiBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKBlackholeAlertController
|| __DATA.__objc_data _OBJC_CLASS_$_CKBlackholeChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKBlackholeConversationListCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKBlackholeConversationListCommonViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKBlackholeConversationListViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKBlackholeTranscriptCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKBlackholeTranscriptViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKBlankTranscriptController
|| __DATA.__objc_data _OBJC_CLASS_$_CKBlockContactChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKBlurEffectBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKBrowserDragController
|| __DATA.__objc_data _OBJC_CLASS_$_CKBrowserDragControllerTarget
|| __DATA.__objc_data _OBJC_CLASS_$_CKBrowserDragManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKBrowserDragViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKBrowserDragWindow
|| __DATA.__objc_data _OBJC_CLASS_$_CKBrowserPluginCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKBrowserSwitcherFooterAccessoryCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKBrowserSwitcherFooterViewDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CKBrowserSwitcherScrollPreventer
|| __DATA.__objc_data _OBJC_CLASS_$_CKBusinessChatController
|| __DATA.__objc_data _OBJC_CLASS_$_CKBusinessOnboardingController
|| __DATA.__objc_data _OBJC_CLASS_$_CKCamPhysicalCaptureNotifier
|| __DATA.__objc_data _OBJC_CLASS_$_CKCellData
|| __DATA.__objc_data _OBJC_CLASS_$_CKChatItemCachedSizeMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_CKChatItemLayoutUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKChatItemSizeCache
|| __DATA.__objc_data _OBJC_CLASS_$_CKChatSceneDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_CKCloudKitSyncProgressRepairingAccountViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKCloudKitSyncProgressViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKComposeNavbarBusinessCanvasViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKContactsSearchManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKContextMenuGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationDNDMigrator
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationLargeTextSearchCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationListCellLayout
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationListCollectionView
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationListCollectionViewLayout
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationListEmbeddedLargeTextTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationListEmbeddedStandardTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationListLargeTextCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationListSearchCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationListStandardCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationListTableView
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationSearchController
|| __DATA.__objc_data _OBJC_CLASS_$_CKConversationSearchResultsController
|| __DATA.__objc_data _OBJC_CLASS_$_CKCurrentConversationsManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKCustomAppMenuItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKDBFileTransfer
|| __DATA.__objc_data _OBJC_CLASS_$_CKDateChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKDateUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKDetailsAddGroupNameView
|| __DATA.__objc_data _OBJC_CLASS_$_CKDetailsAttachmentsSearchController
|| __DATA.__objc_data _OBJC_CLASS_$_CKDetailsContactsLargeTextTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKDetailsContactsStandardTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKDetailsContactsViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_CKDetailsExpanseActivityCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKDetailsNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_CKDetailsPassSearchController
|| __DATA.__objc_data _OBJC_CLASS_$_CKDetailsPhotosViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKDetailsSIMCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKDetailsSearchResultsFooterCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKEffectPickerLargeTextView
|| __DATA.__objc_data _OBJC_CLASS_$_CKEffectPickerStandardView
|| __DATA.__objc_data _OBJC_CLASS_$_CKElasticFunction
|| __DATA.__objc_data _OBJC_CLASS_$_CKEmojiBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKEmoteMessageChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKEntity
|| __DATA.__objc_data _OBJC_CLASS_$_CKExpirableMessageChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKExpressiveSendAsTextChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKFaceTimeUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKFeedCollectionViewLayout
|| __DATA.__objc_data _OBJC_CLASS_$_CKFullScreenBalloonViewControllerNotification
|| __DATA.__objc_data _OBJC_CLASS_$_CKFullScreenBalloonViewControllerPhone
|| __DATA.__objc_data _OBJC_CLASS_$_CKFullScreenBalloonViewControllerQuicklook
|| __DATA.__objc_data _OBJC_CLASS_$_CKFullScreenBalloonViewControllerSocialLayer
|| __DATA.__objc_data _OBJC_CLASS_$_CKFullScreenCardAppViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKFullScreenEffect
|| __DATA.__objc_data _OBJC_CLASS_$_CKFullScreenEffectManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKFullscreenEffectDecorationView
|| __DATA.__objc_data _OBJC_CLASS_$_CKFullscreenEffectMessageFilter
|| __DATA.__objc_data _OBJC_CLASS_$_CKGroupActionChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKGroupRecipientSelectionController
|| __DATA.__objc_data _OBJC_CLASS_$_CKGroupTitleChangeChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKGroupUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_CKGroupUpdateBannerView
|| __DATA.__objc_data _OBJC_CLASS_$_CKHandwritingBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKHyperlinkBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKIMComposeRecipient
|| __DATA.__objc_data _OBJC_CLASS_$_CKIMDaemonController
|| __DATA.__objc_data _OBJC_CLASS_$_CKIMGroupComposeRecipient
|| __DATA.__objc_data _OBJC_CLASS_$_CKIMGroupHeaderRecipient
|| __DATA.__objc_data _OBJC_CLASS_$_CKIMSimulatedChat
|| __DATA.__objc_data _OBJC_CLASS_$_CKImageReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKImpactEffectHapticsGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_CKImpactEffectManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKImpactTextBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKInboxViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKInlineReplyTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_CKInputView
|| __DATA.__objc_data _OBJC_CLASS_$_CKInteractionNotificationView
|| __DATA.__objc_data _OBJC_CLASS_$_CKInvisibleInkEffectController
|| __DATA.__objc_data _OBJC_CLASS_$_CKInvisibleInkEffectView
|| __DATA.__objc_data _OBJC_CLASS_$_CKInvisibleInkGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_CKKeyboardContentViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKLegacyTranscriptLayoutEnvironment
|| __DATA.__objc_data _OBJC_CLASS_$_CKLivePhotoBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKLivePhotoBundleUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKLoadMoreChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKLocatingChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKLocationShareActionChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKLocationShareOfferChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKMNavbarCanvasView
|| __DATA.__objc_data _OBJC_CLASS_$_CKMacBarButtonToolbarItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKMacMenuToolbarItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKMacToolBarImageProperties
|| __DATA.__objc_data _OBJC_CLASS_$_CKMacToolbarController
|| __DATA.__objc_data _OBJC_CLASS_$_CKMacToolbarItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKMapBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKMeCardSharingNameProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CKMeCardSharingNicknameAvatarProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CKMediaObjectAssetDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CKMediaObjectAssetDataSourceManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKMediaObjectExportManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKMediaObjectImageProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CKMediaObjectTapbackManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKMediaObjectTapbackUserData
|| __DATA.__objc_data _OBJC_CLASS_$_CKMentionAutoCompleteAttribute
|| __DATA.__objc_data _OBJC_CLASS_$_CKMentionSuggestionAccessoryCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKMentionsUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKMenuBarManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKMessageAcknowledgmentChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKMessageAcknowledgmentDraftDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_CKMessageActionChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKMessageContext
|| __DATA.__objc_data _OBJC_CLASS_$_CKMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKMessagePartHighlightChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKMessagePartHighlightChatItemCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKMessageReplyCountChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKMessageSearchResultCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKMessageStatusChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKMessagesSceneDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_CKMessagesSearchController
|| __DATA.__objc_data _OBJC_CLASS_$_CKModalTranscriptController
|| __DATA.__objc_data _OBJC_CLASS_$_CKMomentCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKMomentShareStatusChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKMultilineStampChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKMutableMessageContext
|| __DATA.__objc_data _OBJC_CLASS_$_CKNanoReplyGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_CKNavigationBarTitleController
|| __DATA.__objc_data _OBJC_CLASS_$_CKNavigationBarTitleView
|| __DATA.__objc_data _OBJC_CLASS_$_CKNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_CKNicknameAlertHeaderViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKNicknamePreviewView
|| __DATA.__objc_data _OBJC_CLASS_$_CKNicknameUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_CKNicknameUpdatesViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKNicknameUtility
|| __DATA.__objc_data _OBJC_CLASS_$_CKNoAnimationSearchController
|| __DATA.__objc_data _OBJC_CLASS_$_CKNotifyAnywayChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKOnboardingController
|| __DATA.__objc_data _OBJC_CLASS_$_CKOrganicAttachmentMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKOrganicImageBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKOrganicImageLayoutGroupProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CKOrganicImageLayoutRecipe
|| __DATA.__objc_data _OBJC_CLASS_$_CKOrganicImageLivePhotoBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKOrganicPendingMomentShareBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKOrganicTranscriptBalloonCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKPaddleOverlayView
|| __DATA.__objc_data _OBJC_CLASS_$_CKParticipantChangeChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKParticipantsTrie
|| __DATA.__objc_data _OBJC_CLASS_$_CKPassLinkSearchResultCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKPassMediaObject
|| __DATA.__objc_data _OBJC_CLASS_$_CKPassSearchController
|| __DATA.__objc_data _OBJC_CLASS_$_CKPassSearchResultsCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKPendingMomentShareBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKPendingMomentSharePhotoStackBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKPhoneNumberCompressor
|| __DATA.__objc_data _OBJC_CLASS_$_CKPhotoAttachmentStatusChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKPhotoGridTapbackView
|| __DATA.__objc_data _OBJC_CLASS_$_CKPhotoStackReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKPhotosSearchResultsModeHeaderReusableView
|| __DATA.__objc_data _OBJC_CLASS_$_CKPhotosSearchResultsTitleHeaderCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationActivityItemViewBackdropLayer
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationActivityItemViewShadowLayer
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationActivitySnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationActivityView
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationContactItemProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationMediaObjectActivityItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationMediaObjectBubble
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationRichLinkActivityItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationRichLinkBubble
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationSummaryBubble
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationSummaryBubbleActivityItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationTailedActivityItemView
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationTapbackBubble
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationTapbackBubbleActivityItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationTypingBubble
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedConversationTypingBubbleActivityItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinnedSectionSeparatorView
|| __DATA.__objc_data _OBJC_CLASS_$_CKPinningOnboardingTitleCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKPluginImageCacheKey
|| __DATA.__objc_data _OBJC_CLASS_$_CKPluginPlaybackManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKQLDetailsPreviewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKQLPreviewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKQLPreviewControllerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CKReaderViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKReasonTrackingUpdater
|| __DATA.__objc_data _OBJC_CLASS_$_CKRecipientGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_CKRegistrationView
|| __DATA.__objc_data _OBJC_CLASS_$_CKRegistrationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKReplyContextAggregateAttachmentMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKReplyContextAggregateMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKReplyContextAttachmentMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKReplyContextDeletedMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKReplyContextTextMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKReplyContextTranscriptPluginChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKReplySenderChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKReportSpamChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKRichLinkReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKSMSComposeController
|| __DATA.__objc_data _OBJC_CLASS_$_CKSMSComposeRemoteViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKSMSComposeViewServiceController
|| __DATA.__objc_data _OBJC_CLASS_$_CKSMSSpamChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKSOSMessage
|| __DATA.__objc_data _OBJC_CLASS_$_CKSOSUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKSaveToPhotosActivity
|| __DATA.__objc_data _OBJC_CLASS_$_CKSceneController
|| __DATA.__objc_data _OBJC_CLASS_$_CKSceneDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_CKSceneDelegateState
|| __DATA.__objc_data _OBJC_CLASS_$_CKSearchActivityItemProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CKSearchAvatarSupplementryView
|| __DATA.__objc_data _OBJC_CLASS_$_CKSearchCollectionView
|| __DATA.__objc_data _OBJC_CLASS_$_CKSearchIndexingFooterCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKSearchThumbnailPreviewGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_CKSendAnimationContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_CKSendAnimationContext
|| __DATA.__objc_data _OBJC_CLASS_$_CKSenderChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKSensitiveBadgeBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKServiceChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKShareSheetChatController
|| __DATA.__objc_data _OBJC_CLASS_$_CKSharedContentsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKSingleContactDetailsCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKSnapshotCacheKey
|| __DATA.__objc_data _OBJC_CLASS_$_CKSnapshotUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKSocialLayerChatController
|| __DATA.__objc_data _OBJC_CLASS_$_CKSpellingSubstitutionsDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_CKSpotlightQueryResult
|| __DATA.__objc_data _OBJC_CLASS_$_CKSpotlightQueryResultUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKSpotlightQueryUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKSpringBoardActionManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKStampChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKStaticImageStackView
|| __DATA.__objc_data _OBJC_CLASS_$_CKStaticPhotoStackBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKStickerMediaObject
|| __DATA.__objc_data _OBJC_CLASS_$_CKStoragePlugin
|| __DATA.__objc_data _OBJC_CLASS_$_CKSyndicationContentViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CKSyndicationOnboardingLinkBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKSyndicationOnboardingTailedBubble
|| __DATA.__objc_data _OBJC_CLASS_$_CKTUConversationChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKTUConversationViewUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKTextMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKTextReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKTextTighteningLabel
|| __DATA.__objc_data _OBJC_CLASS_$_CKThrowAnimationManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKThrowBalloonViewAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_CKTipKitCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKTitledImageBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptAvatarSupplementaryView
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptBalloonCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptBalloonSelectionManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptChatItemRules
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptCollectionSupplementaryView
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptCollectionViewLayout
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptCollectionViewLayoutAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptCompositionalLayout
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptHeaderCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptModel
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptMultilineLabelCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptNotifyAnywayButtonCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptPhotoStackCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptPluginBreadcrumbChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptPluginChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptPluginViewManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptReplayEffectCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptReplyCountCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptSpeakerBalloonCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptTapbackSupplementaryView
|| __DATA.__objc_data _OBJC_CLASS_$_CKTranscriptUnavailabilityIndicatorCell
|| __DATA.__objc_data _OBJC_CLASS_$_CKTransientAttachmentMessagePartChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKTransientFileTransfer
|| __DATA.__objc_data _OBJC_CLASS_$_CKTruncatedTextBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_CKTypingChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKTypingPluginChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKTypingView
|| __DATA.__objc_data _OBJC_CLASS_$_CKUIBehaviorMac
|| __DATA.__objc_data _OBJC_CLASS_$_CKUIBehaviorPad
|| __DATA.__objc_data _OBJC_CLASS_$_CKUIThemeHUD
|| __DATA.__objc_data _OBJC_CLASS_$_CKUIThemeMac
|| __DATA.__objc_data _OBJC_CLASS_$_CKUIThemeNano
|| __DATA.__objc_data _OBJC_CLASS_$_CKUIThemeNotification
|| __DATA.__objc_data _OBJC_CLASS_$_CKUnavailabilityIndicatorChatItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKUnitTestRunner
|| __DATA.__objc_data _OBJC_CLASS_$_CKUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKVibrantBalloonContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_CKVoiceController
|| __DATA.__objc_data _OBJC_CLASS_$_CKWaveformProgressView
|| __DATA.__objc_data _OBJC_CLASS_$_CKZKWQueryResult
|| __DATA.__objc_data _OBJC_CLASS_$_IMMockChat
|| __DATA.__objc_data _OBJC_CLASS_$_IMMockItemInfo
|| __DATA.__objc_data _OBJC_CLASS_$_SMSApplicationIntentsHelper
|| __DATA.__objc_data _OBJC_CLASS_$_SMSApplicationSoundHelper
|| __DATA.__objc_data _OBJC_CLASS_$_UINavigationControllerAdaptivePresentationCollectionView
|| __DATA.__objc_data _OBJC_CLASS_$__CKAcknowledgmentAnimatorModelItem
|| __DATA.__objc_data _OBJC_CLASS_$__CKCollectionViewTapGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAcknowledgmentVotingViewAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_CKActionMenuController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKActionMenuGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAdaptivePresentationController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAddressBook
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAggregateAcknowledgmentGradientBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAggregateAcknowledgmentTranscriptCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAggregateAttachmentMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAggregateMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAlertAction
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAlertUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAnimatedEmojiMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAnimatedImageView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAnimatedStickerMediaObject
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAppIconCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAppIconLinkView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAppIconView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAppInstallation
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAppInstallationWatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAppManagerAppTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAppMenuDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAppSearchResultsTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAppStripLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAppStripPredictiveType3DRotationTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAppStripPredictiveTypeSimpleFadeTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAppStripPredictiveTypeSpringFadeTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssistantPerson
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssistantSearchUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssociatedMessageTranscriptCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssociatedStickerChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAttachmentItemManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAttachmentMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAttachmentReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAttachmentSaver
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAudioAttachmentItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAudioController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAudioMessageChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAudioReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAutoloopMovieReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAutoupdatingDateFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAutoupdatingRelativeDateFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAvatarNotificationCalloutView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAvatarShadowClippingCollectionReusableView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAvatarShadowClippingLeftCollectionReusableView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAvatarShadowClippingRightCollectionReusableView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBackBarButtonItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBackgroundDecorationView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBalloonChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBalloonSelectionState
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBannerCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBaseLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBigEmojiBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBlackholeAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBlackholeChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBlackholeConversationListCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBlackholeConversationListCommonViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBlackholeConversationListViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBlackholeTranscriptCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBlackholeTranscriptViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBlankTranscriptController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBlockContactChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBlurEffectBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBrowserDragController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBrowserDragControllerTarget
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBrowserDragManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBrowserDragViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBrowserDragWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBrowserPluginCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBrowserSwitcherFooterAccessoryCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBrowserSwitcherFooterViewDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBrowserSwitcherScrollPreventer
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBusinessChatController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKBusinessOnboardingController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKCamPhysicalCaptureNotifier
|| __DATA.__objc_data _OBJC_METACLASS_$_CKCellData
|| __DATA.__objc_data _OBJC_METACLASS_$_CKChatItemCachedSizeMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_CKChatItemLayoutUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKChatItemSizeCache
|| __DATA.__objc_data _OBJC_METACLASS_$_CKChatSceneDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_CKCloudKitSyncProgressRepairingAccountViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKCloudKitSyncProgressViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKComposeNavbarBusinessCanvasViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKContactsSearchManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKContextMenuGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationDNDMigrator
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationLargeTextSearchCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationListCellLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationListCollectionView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationListCollectionViewLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationListEmbeddedLargeTextTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationListEmbeddedStandardTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationListLargeTextCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationListSearchCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationListStandardCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationListTableView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationSearchController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConversationSearchResultsController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKCurrentConversationsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKCustomAppMenuItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDBFileTransfer
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDateChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDateUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDetailsAddGroupNameView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDetailsAttachmentsSearchController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDetailsContactsLargeTextTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDetailsContactsStandardTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDetailsContactsViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDetailsExpanseActivityCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDetailsNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDetailsPassSearchController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDetailsPhotosViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDetailsSIMCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDetailsSearchResultsFooterCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKEffectPickerLargeTextView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKEffectPickerStandardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKElasticFunction
|| __DATA.__objc_data _OBJC_METACLASS_$_CKEmojiBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKEmoteMessageChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_CKExpirableMessageChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKExpressiveSendAsTextChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFaceTimeUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFeedCollectionViewLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFullScreenBalloonViewControllerNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFullScreenBalloonViewControllerPhone
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFullScreenBalloonViewControllerQuicklook
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFullScreenBalloonViewControllerSocialLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFullScreenCardAppViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFullScreenEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFullScreenEffectManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFullscreenEffectDecorationView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFullscreenEffectMessageFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_CKGroupActionChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKGroupRecipientSelectionController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKGroupTitleChangeChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKGroupUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_CKGroupUpdateBannerView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKHandwritingBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKHyperlinkBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKIMComposeRecipient
|| __DATA.__objc_data _OBJC_METACLASS_$_CKIMDaemonController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKIMGroupComposeRecipient
|| __DATA.__objc_data _OBJC_METACLASS_$_CKIMGroupHeaderRecipient
|| __DATA.__objc_data _OBJC_METACLASS_$_CKIMSimulatedChat
|| __DATA.__objc_data _OBJC_METACLASS_$_CKImageReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKImpactEffectHapticsGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_CKImpactEffectManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKImpactTextBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKInboxViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKInlineReplyTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CKInputView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKInteractionNotificationView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKInvisibleInkEffectController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKInvisibleInkEffectView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKInvisibleInkGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_CKKeyboardContentViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLegacyTranscriptLayoutEnvironment
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLivePhotoBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLivePhotoBundleUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLoadMoreChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLocatingChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLocationShareActionChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLocationShareOfferChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMNavbarCanvasView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMacBarButtonToolbarItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMacMenuToolbarItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMacToolBarImageProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMacToolbarController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMacToolbarItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMapBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMeCardSharingNameProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMeCardSharingNicknameAvatarProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMediaObjectAssetDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMediaObjectAssetDataSourceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMediaObjectExportManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMediaObjectImageProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMediaObjectTapbackManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMediaObjectTapbackUserData
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMentionAutoCompleteAttribute
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMentionSuggestionAccessoryCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMentionsUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMenuBarManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMessageAcknowledgmentChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMessageAcknowledgmentDraftDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMessageActionChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMessageContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMessagePartHighlightChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMessagePartHighlightChatItemCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMessageReplyCountChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMessageSearchResultCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMessageStatusChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMessagesSceneDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMessagesSearchController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKModalTranscriptController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMomentCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMomentShareStatusChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMultilineStampChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMutableMessageContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CKNanoReplyGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_CKNavigationBarTitleController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKNavigationBarTitleView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKNicknameAlertHeaderViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKNicknamePreviewView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKNicknameUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_CKNicknameUpdatesViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKNicknameUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_CKNoAnimationSearchController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKNotifyAnywayChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKOnboardingController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKOrganicAttachmentMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKOrganicImageBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKOrganicImageLayoutGroupProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CKOrganicImageLayoutRecipe
|| __DATA.__objc_data _OBJC_METACLASS_$_CKOrganicImageLivePhotoBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKOrganicPendingMomentShareBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKOrganicTranscriptBalloonCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPaddleOverlayView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKParticipantChangeChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKParticipantsTrie
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPassLinkSearchResultCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPassMediaObject
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPassSearchController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPassSearchResultsCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPendingMomentShareBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPendingMomentSharePhotoStackBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPhoneNumberCompressor
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPhotoAttachmentStatusChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPhotoGridTapbackView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPhotoStackReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPhotosSearchResultsModeHeaderReusableView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPhotosSearchResultsTitleHeaderCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationActivityItemViewBackdropLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationActivityItemViewShadowLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationActivitySnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationActivityView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationContactItemProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationMediaObjectActivityItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationMediaObjectBubble
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationRichLinkActivityItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationRichLinkBubble
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationSummaryBubble
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationSummaryBubbleActivityItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationTailedActivityItemView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationTapbackBubble
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationTapbackBubbleActivityItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationTypingBubble
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedConversationTypingBubbleActivityItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinnedSectionSeparatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPinningOnboardingTitleCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPluginImageCacheKey
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPluginPlaybackManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKQLDetailsPreviewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKQLPreviewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKQLPreviewControllerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CKReaderViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKReasonTrackingUpdater
|| __DATA.__objc_data _OBJC_METACLASS_$_CKRecipientGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_CKRegistrationView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKRegistrationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKReplyContextAggregateAttachmentMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKReplyContextAggregateMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKReplyContextAttachmentMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKReplyContextDeletedMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKReplyContextTextMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKReplyContextTranscriptPluginChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKReplySenderChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKReportSpamChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKRichLinkReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSMSComposeController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSMSComposeRemoteViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSMSComposeViewServiceController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSMSSpamChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSOSMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSOSUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSaveToPhotosActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSceneController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSceneDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSceneDelegateState
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSearchActivityItemProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSearchAvatarSupplementryView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSearchCollectionView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSearchIndexingFooterCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSearchThumbnailPreviewGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSendAnimationContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSendAnimationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSenderChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSensitiveBadgeBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKServiceChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKShareSheetChatController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSharedContentsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSingleContactDetailsCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSnapshotCacheKey
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSnapshotUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSocialLayerChatController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSpellingSubstitutionsDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSpotlightQueryResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSpotlightQueryResultUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSpotlightQueryUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSpringBoardActionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKStampChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKStaticImageStackView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKStaticPhotoStackBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKStickerMediaObject
|| __DATA.__objc_data _OBJC_METACLASS_$_CKStoragePlugin
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSyndicationContentViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSyndicationOnboardingLinkBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSyndicationOnboardingTailedBubble
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTUConversationChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTUConversationViewUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTextMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTextReplyPreviewBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTextTighteningLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_CKThrowAnimationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKThrowBalloonViewAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTipKitCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTitledImageBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptAvatarSupplementaryView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptBalloonCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptBalloonSelectionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptChatItemRules
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptCollectionSupplementaryView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptCollectionViewLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptCollectionViewLayoutAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptCompositionalLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptHeaderCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptModel
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptMultilineLabelCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptNotifyAnywayButtonCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptPhotoStackCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptPluginBreadcrumbChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptPluginChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptPluginViewManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptReplayEffectCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptReplyCountCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptSpeakerBalloonCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptTapbackSupplementaryView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTranscriptUnavailabilityIndicatorCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTransientAttachmentMessagePartChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTransientFileTransfer
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTruncatedTextBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTypingChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTypingPluginChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTypingView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUIBehaviorMac
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUIBehaviorPad
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUIThemeHUD
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUIThemeMac
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUIThemeNano
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUIThemeNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUnavailabilityIndicatorChatItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUnitTestRunner
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKVibrantBalloonContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKVoiceController
|| __DATA.__objc_data _OBJC_METACLASS_$_CKWaveformProgressView
|| __DATA.__objc_data _OBJC_METACLASS_$_CKZKWQueryResult
|| __DATA.__objc_data _OBJC_METACLASS_$_IMMockChat
|| __DATA.__objc_data _OBJC_METACLASS_$_IMMockItemInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_SMSApplicationIntentsHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_SMSApplicationSoundHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_UINavigationControllerAdaptivePresentationCollectionView
|| __DATA.__objc_data _OBJC_METACLASS_$__CKAcknowledgmentAnimatorModelItem
|| __DATA.__objc_data _OBJC_METACLASS_$__CKCollectionViewTapGestureRecognizer
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKAttachmentItem._appendedBundleURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKAttachmentItem._size
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKAvatarShadowClippingCollectionReusableView._imageView
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._chevronImageView
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._closeButton
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._dateLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._fromLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._gradient
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._isPlaceholder
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._muteIndicatorImageView
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._searchMessageDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._searchMessageGUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._searchSummaryText
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._summaryBlockedLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._summaryLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListCell._typingIndicatorView
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListController._isInitialAppearance
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListController._isInitialLoad
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListController._isVisible
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListController._previouslySelectedIndexPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListController._willRotate
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListStandardCell._avatarView
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKConversationListStandardCell._unreadIndicatorImageView
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDraftManager._cachedDrafts
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDraftManager._dirtyDraftIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDraftManager._pendingRecipients
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKImageData._count
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKImageData._imageSource
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKImageData._initializedProperties
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKImageData._orientation
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKImageData._pxSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKInboxViewController._isVisible
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKModalTranscriptController._alreadySetUp
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKModalTranscriptController._cameraSelectionDisabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKModalTranscriptController._entryViewInvisible
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKModalTranscriptController._mimeType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKModalTranscriptController._partsToInsert
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKModalTranscriptController._typesToInsert
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKRecipientGenerator._searchABPropertyTypes
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKRecipientSelectionController._contactStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKRecipientSelectionController._keyboardHeightWithAccessoryView
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeController._cancellationInvocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeController._clientNavigationController
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeController._didChangeStatusBarStyle
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeController._entryViewInvisible
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeController._safeToAdd
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeController._savedStatusBarStyle
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeViewServiceController._canEditRecipients
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeViewServiceController._cloudPhotoIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeViewServiceController._contentText
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeViewServiceController._contentURLs
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeViewServiceController._disableCameraAttachments
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeViewServiceController._forceMMS
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeViewServiceController._photoIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeViewServiceController._shareSheetSessionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeViewServiceController._shouldDisableEntryField
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeViewServiceController._supportsAttachments
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeViewServiceController._supportsMessageInspection
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSMSComposeViewServiceController._utiTypes
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSyncController._attachmentRestoredToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKSyncController._restoreStateChangedToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._associatedLayoutAttributes
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._associatedVerticalShift
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._chatItem
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._contentTransform3D
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._currentCenterY
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._currentFrame
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._easing
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._factor
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._height
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._hidden
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._initialParentLayoutAttributes
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._orientation
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._targetCenterY
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._targetEasing
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._targetFrame
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKTranscriptCollectionViewLayoutAttributes._threadGroupLayoutAttributes
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMSApplicationSoundHelper._alert
|| __DATA_CONST.__const _CKAlertLocalizedCancelButtonKey
|| __DATA_CONST.__const _CKAlertLocalizedTitleKey
|| __DATA_CONST.__const _CKAppleMapsTextAttribute
|| __DATA_CONST.__const _CKAppleMapsURLKnownLocationCoordinateQueryKey
|| __DATA_CONST.__const _CKAppleMapsURLUnknownLocationCoordinateQueryKey
|| __DATA_CONST.__const _CKAppleMessagesMapUTI
|| __DATA_CONST.__const _CKAppleMessagesMapVCard
|| __DATA_CONST.__const _CKAppleMessagesMapVCardName
|| __DATA_CONST.__const _CKApplicationStateResumeFromInActiveNotification
|| __DATA_CONST.__const _CKAssociatedMessageExtensionBundleIdentifiersEntitlement
|| __DATA_CONST.__const _CKAttachmentRestoredNotification
|| __DATA_CONST.__const _CKAudioBalloonPlaybackPPTName
|| __DATA_CONST.__const _CKAudioMessageFilenameAMR
|| __DATA_CONST.__const _CKAudioMessageFilenameOpus
|| __DATA_CONST.__const _CKAudioProgressTableViewActionButtonPlaybackDidFinishNotification
|| __DATA_CONST.__const _CKAudioProgressTableViewActionButtonPlaybackPausedNotification
|| __DATA_CONST.__const _CKAudioProgressTableViewActionButtonPlaybackStoppedNotification
|| __DATA_CONST.__const _CKAudioProgressTableViewActionButtonUpdateDurationValueKey
|| __DATA_CONST.__const _CKAudioProgressTableViewActionButtonUpdateTimeIntervalValueKey
|| __DATA_CONST.__const _CKAudioProgressTableViewActionButtonUpdateTimeNotification
|| __DATA_CONST.__const _CKAudioProgressTableViewActionButtonUpdateTotalDurationValueKey
|| __DATA_CONST.__const _CKAudioProgressTableViewActionButtonWillDisappear
|| __DATA_CONST.__const _CKBalloonPluginManagerSnapshotsDidChange
|| __DATA_CONST.__const _CKBrowserDragManagerDidEndDragSuccessKey
|| __DATA_CONST.__const _CKBrowserDragManagerDidEndDraggingNotification
|| __DATA_CONST.__const _CKBrowserDragManagerDidStartDraggingNotification
|| __DATA_CONST.__const _CKBrowserDragManagerWillStartDraggingNotification
|| __DATA_CONST.__const _CKBrowserErrorDomain
|| __DATA_CONST.__const _CKBrowserSelectionAppStoreBalloonPluginIdentifier
|| __DATA_CONST.__const _CKBrowserSelectionControllerDataSourceChangedNotification
|| __DATA_CONST.__const _CKBrowserSelectionControllerInstallationsChangedNotification
|| __DATA_CONST.__const _CKBrowserSelectionControllerInstalledPluginsKey
|| __DATA_CONST.__const _CKBrowserSelectionControllerUninstalledPluginsKey
|| __DATA_CONST.__const _CKBrowserSelectionControllerVisibleSwitcherPluginsChangedNotification
|| __DATA_CONST.__const _CKBrowserSelectionMoreBalloonPluginIdentifier
|| __DATA_CONST.__const _CKBrowserSelectionRecentBalloonPluginIdentifier
|| __DATA_CONST.__const _CKChatConsecutiveCanceledMessageCount
|| __DATA_CONST.__const _CKChatConsecutiveManuallyCanceledMessageCount
|| __DATA_CONST.__const _CKChatConversationListSuppressionContext
|| __DATA_CONST.__const _CKChatLastCanceledMessageTime
|| __DATA_CONST.__const _CKChatPreviousAccountsDictionaryKey
|| __DATA_CONST.__const _CKChatUnmuteTime
|| __DATA_CONST.__const _CKChatWatermarkMessageID
|| __DATA_CONST.__const _CKChatWatermarkTime
|| __DATA_CONST.__const _CKClientDidResumeNotification
|| __DATA_CONST.__const _CKComposeRecipientViewBecameFirstResponderNotification
|| __DATA_CONST.__const _CKContactMediaObjectContactFormatterTitleKey
|| __DATA_CONST.__const _CKContactMediaObjectOrganizationNameTitleKey
|| __DATA_CONST.__const _CKConversationDowngradeStatusChanged
|| __DATA_CONST.__const _CKConversationJoinStateDidChangeNotification
|| __DATA_CONST.__const _CKConversationListAvatarUpdateNotification
|| __DATA_CONST.__const _CKConversationListChangedNotification
|| __DATA_CONST.__const _CKConversationListCollectionViewListItemIdentifierPrefix
|| __DATA_CONST.__const _CKConversationListCollectionViewPinnedItemIdentifierPrefix
|| __DATA_CONST.__const _CKConversationListConversationLeftNotification
|| __DATA_CONST.__const _CKConversationListFinishedInitalPinLoadNotification
|| __DATA_CONST.__const _CKConversationListFinishedLoadingNotification
|| __DATA_CONST.__const _CKConversationListFinishedMergingChatsNotification
|| __DATA_CONST.__const _CKConversationListPendingConversationChangedNotification
|| __DATA_CONST.__const _CKConversationListPinnedConversationsChangedNotification
|| __DATA_CONST.__const _CKConversationListPinnedConversationsChangedNotificationUserInfoKeyPreviousPinnedConversationIdentifiers
|| __DATA_CONST.__const _CKConversationListSelectionDidChangeNotification
|| __DATA_CONST.__const _CKConversationListUpdateVisibleConversationsNotification
|| __DATA_CONST.__const _CKConversationListWasPendingKey
|| __DATA_CONST.__const _CKConversationParticipantsDidChangeNotification
|| __DATA_CONST.__const _CKConversationPendingRecipientsUpdatedNotification
|| __DATA_CONST.__const _CKConversationPreferredServiceChangedNotification
|| __DATA_CONST.__const _CKConversationShowGroupNameBannersNotification
|| __DATA_CONST.__const _CKConversationShowGroupPhotoBannersNotification
|| __DATA_CONST.__const _CKDraftManagerSavedDraft
|| __DATA_CONST.__const _CKDroppedPinFilename
|| __DATA_CONST.__const _CKEffectManagerEffectDidEndForPPT
|| __DATA_CONST.__const _CKFeedCollectionElementKindCaption
|| __DATA_CONST.__const _CKFeedCollectionElementKindDecoration
|| __DATA_CONST.__const _CKFeedCollectionElementKindSectionFooter
|| __DATA_CONST.__const _CKFeedCollectionElementKindSectionGroupHeader
|| __DATA_CONST.__const _CKFeedCollectionElementKindSectionHeader
|| __DATA_CONST.__const _CKFeedCollectionElementKindSectionHeaderBackground
|| __DATA_CONST.__const _CKFeedCollectionElementKindSeparator
|| __DATA_CONST.__const _CKFeedCollectionElementKindThumbnail
|| __DATA_CONST.__const _CKFileTransferErrorDomain
|| __DATA_CONST.__const _CKFileTransferFinishedNotification
|| __DATA_CONST.__const _CKFileTransferGUIDAttributeName
|| __DATA_CONST.__const _CKFileTransferRemovedNotification
|| __DATA_CONST.__const _CKFileTransferRestoredNotification
|| __DATA_CONST.__const _CKFileTransferUpdatedNotification
|| __DATA_CONST.__const _CKFullScreenEffectCelebrationIdentifier
|| __DATA_CONST.__const _CKFullScreenEffectConfettiIdentifier
|| __DATA_CONST.__const _CKFullScreenEffectEchoIdentifier
|| __DATA_CONST.__const _CKFullScreenEffectFireworksIdentifier
|| __DATA_CONST.__const _CKFullScreenEffectHappyBirthdayIdentifier
|| __DATA_CONST.__const _CKFullScreenEffectLasersIdentifier
|| __DATA_CONST.__const _CKFullScreenEffectLoveIdentifier
|| __DATA_CONST.__const _CKFullScreenEffectShootingStarIdentifier
|| __DATA_CONST.__const _CKFullScreenEffectSpotlightIdentifier
|| __DATA_CONST.__const _CKGoogleMapsURLCoordinateQueryKey
|| __DATA_CONST.__const _CKGroupPhotoUpdateKey
|| __DATA_CONST.__const _CKIDSResultsFinishedWhenSearchTableIsHiddenNotification
|| __DATA_CONST.__const _CKIsUnexpectedlyLoggedOutChanged
|| __DATA_CONST.__const _CKLaunchInputModeAppsKey
|| __DATA_CONST.__const _CKLaunchInputModeDTKey
|| __DATA_CONST.__const _CKLaunchInputModeHandwritingKey
|| __DATA_CONST.__const _CKLaunchInputModePhotosKey
|| __DATA_CONST.__const _CKLocationStringDidChangeNotification
|| __DATA_CONST.__const _CKMapsURLHostApple
|| __DATA_CONST.__const _CKMapsURLHostGoogle
|| __DATA_CONST.__const _CKMessageExtensionBrowserViewControllerDidPrepareForDisplay
|| __DATA_CONST.__const _CKMovieMessageFilename
|| __DATA_CONST.__const _CKPassKitStateObserverPassKitUIDismissed
|| __DATA_CONST.__const _CKPhotoBrowserItemAVTranscodeOptionAssetURI
|| __DATA_CONST.__const _CKPhotoBrowserItemAVTranscodeOptionEndTime
|| __DATA_CONST.__const _CKPhotoBrowserItemAVTranscodeOptionMetadataDictionary
|| __DATA_CONST.__const _CKPhotoBrowserItemAVTranscodeOptionStartTime
|| __DATA_CONST.__const _CKPinnedConversationViewActivitySuppressionReasonCellDragState
|| __DATA_CONST.__const _CKPinnedConversationViewActivitySuppressionReasonCellSelected
|| __DATA_CONST.__const _CKPinnedConversationViewActivitySuppressionReasonContextMenuInteraction
|| __DATA_CONST.__const _CKPinnedConversationViewActivitySuppressionReasonEditMode
|| __DATA_CONST.__const _CKPinnedConversationViewActivitySuppressionReasonLayoutStyle
|| __DATA_CONST.__const _CKPinnedConversationViewActivitySuppressionReasonScreenTime
|| __DATA_CONST.__const _CKPluginPayloadGUIDAttributeName
|| __DATA_CONST.__const _CKPluginPrewarmForLaunchCompleteNotification
|| __DATA_CONST.__const _CKPreviewDidChangeNotification
|| __DATA_CONST.__const _CKRemoteViewFailedInstantiationNotification
|| __DATA_CONST.__const _CKRemoteViewPluginKey
|| __DATA_CONST.__const _CKRichIconDidChangeNotification
|| __DATA_CONST.__const _CKSMSComposeOptionDurationKey
|| __DATA_CONST.__const _CKSMSComposeOptionEndTimeKey
|| __DATA_CONST.__const _CKSMSComposeOptionPreviewImageDataKey
|| __DATA_CONST.__const _CKSMSComposeOptionStartTimeKey
|| __DATA_CONST.__const _CKScreenTimeDidEnterCurrentAppRestrictionNotification
|| __DATA_CONST.__const _CKScrollGeometryHoldNotVisible
|| __DATA_CONST.__const _CKScrollGeometryPhotosGrid
|| __DATA_CONST.__const _CKSearchLPLinkMetadataDidChange
|| __DATA_CONST.__const _CKSearchLPPassMetadataDidChange
|| __DATA_CONST.__const _CKSearchLivePhotoStatusDidChange
|| __DATA_CONST.__const _CKSearchThumbnailDidChange
|| __DATA_CONST.__const _CKSearchVideoDurationDidChange
|| __DATA_CONST.__const _CKSendAnimationSupplementaryViewBlueTextFadeViewRTL
|| __DATA_CONST.__const _CKSendAnimationSupplementaryViewImageFadeoutView
|| __DATA_CONST.__const _CKSendAnimationSupplementaryViewSendButtonSnapshot
|| __DATA_CONST.__const _CKSendAnimationSupplementaryViewTextViewContainerView
|| __DATA_CONST.__const _CKSendAnimationSupplementaryViewWhiteTextFadeView
|| __DATA_CONST.__const _CKSendAnimationSupplementaryViewWhiteTextFadeViewRTL
|| __DATA_CONST.__const _CKSnapshotChangedMessageGUIDKey
|| __DATA_CONST.__const _CKSnapshotChangedNotification
|| __DATA_CONST.__const _CKSupplementalItemEntityAttributeName
|| __DATA_CONST.__const _CKTextAutocapitalizationType
|| __DATA_CONST.__const _CKTextAutocorrectionType
|| __DATA_CONST.__const _CKTextEmojiReplacementType
|| __DATA_CONST.__const _CKTextSmartDashesType
|| __DATA_CONST.__const _CKTextSmartInsertDeleteType
|| __DATA_CONST.__const _CKTextSmartQuotesType
|| __DATA_CONST.__const _CKTextSpellCheckingType
|| __DATA_CONST.__const _CKTextSpellingSubstitutionsDomain
|| __DATA_CONST.__const _CKTranscriptPluginViewReadyForSnapshotNotification
|| __DATA_CONST.__const _CKTranscriptPluginViewSnapshotUserInfoKey
|| __DATA_CONST.__const _CKTransferFileTooLargeNotification
|| __DATA_CONST.__const _CKVideoPlayerBalloonViewEnabledKey
|| __DATA_CONST.__const _IMFileTransferErrorDomain
|| __DATA_CONST.__const _MMSCharacterCountUISettingDidChangeNotification
|| __DATA_CONST.__const _ckUTTypePKPass
|| __DATA_CONST.__const _ckUTTypeVCal
|| __DATA_CONST.__const _kAppMenuEffectsItemIdentifier
|| __DATA_CONST.__const _kAppMenuPhotosItemIdentifier
|| __DATA_CONST.__const _kAudioBalloonViewPlaybackDidFinishNotification
|| __DATA_CONST.__const _kAudioBalloonViewPlaybackWillStartNotification
|| __DATA_CONST.__const _kCKBrowserSelectionControllerIndexPathDictionaryV1Key
|| __DATA_CONST.__const _kCKBrowserSelectionControllerIndexPathDictionaryV2Key
|| __DATA_CONST.__const _kCKBrowserSelectionControllerIndexPathDictionaryV3Key
|| __DATA_CONST.__const _kCKBrowserSelectionControllerOrderingDictionaryKey
|| __DATA_CONST.__const _kCKBrowserSelectionControllerSeenDictionaryKey
|| __DATA_CONST.__const _kCKBrowserSelectionControllerVersionDictionaryKey
|| __DATA_CONST.__const _kCKComposingNewMessageKey
|| __DATA_CONST.__const _kCKConversationDisplayNameKey
|| __DATA_CONST.__const _kCKConversationEntityNamesKey
|| __DATA_CONST.__const _kCKConversationGUIDKey
|| __DATA_CONST.__const _kCKIMChatUnreadConversationCountKey
|| __DATA_CONST.__const _kCKImpactEffectID_Focus
|| __DATA_CONST.__const _kCKImpactEffectID_Gentle
|| __DATA_CONST.__const _kCKImpactEffectID_Impact
|| __DATA_CONST.__const _kCKImpactEffectID_InvisibleInk
|| __DATA_CONST.__const _kCKImpactEffectID_Loud
|| __DATA_CONST.__const _kCKNicknameAlwaysShowOnboardingKey
|| __DATA_CONST.__const _kCKNicknameOnboardingVersionKey
|| __DATA_CONST.__const _kCKSMSUnreadConversationCountKey
|| __DATA_CONST.__const _kCKSuspendTimeKey
|| __DATA_CONST.__const _kCKSuspendedGroupIDKey
|| __DATA_CONST.__const _kCKSuspendedUnreadMessagesKey
|| __DATA_CONST.__const _kCKSyndicationAlwaysShowOnboardingKey
|| __DATA_CONST.__const _kCKSyndicationOnboardingVersionKey
|| __DATA_CONST.__const _kCKTransferFileTooLargeAttachmentURLKey
|| __DATA_CONST.__const _kCKTypeAppendedURLName
|| __DATA_CONST.__const _kCKTypeFileURLName
|| __DATA_CONST.__const _kCKTypeURLName
|| __DATA_CONST.__const _kCKWhatsNewAlwaysShowWhatsNewMOCKey
|| __DATA_CONST.__const _kCKWhatsNewAlwaysShowWhatsNewScreenKey
|| __DATA_CONST.__const _kCKWhatsNewDidShowWhatsNewMOCKey
|| __DATA_CONST.__const _kCKWhatsNewDisableWhatsNewMOCKey
|| __DATA_CONST.__const _kCKWhatsNewDisableWhatsNewScreenKey
|| __DATA_CONST.__const _kCKWhatsNewInMessagesVersionKey
|| __DATA_CONST.__const _kCancelPeoplePickerTest
|| __DATA_CONST.__const _kCurrentLocationTextInputPayloadID
|| __DATA_CONST.__const _kDataDetectorCurrencyPayloadID
|| __DATA_CONST.__const _kDataDetectorPhotosPayloadID
|| __DATA_CONST.__const _kPPTChatControllerDidRotateNotification
|| __DATA_CONST.__const _kPPTChatControllerWillRotateNotification
|| __DATA_CONST.__const _kQuickTypeCurrencyPayloadID
|| __DATA_CONST.__const _kQuickTypeMentionsPayloadID
|| __DATA_CONST.__const _kQuickTypePhotosPayloadID
|| __DATA_CONST.__const _kResolveContactExistingConvTest
|| __DATA_CONST.__const _kResolveContactNewConvTest
|| __DATA_CONST.__const _kScrollTranscriptFullScreenTest
|| __DATA_CONST.__const _kScrollTranscriptTest
|| __DATA_CONST.__const _kScrollTranscriptTestEmoji
|| __DATA_CONST.__const _kScrollTranscriptTestWebView
|| __DATA_CONST.__const _kSelectContactPeoplePickerTest
|| __DATA_CONST.__const _kShowMessagesTest
|| __DATA_CONST.__const _kShowNewComposeTest
|| __DATA_CONST.__const _kShowPeoplePickerTest
|| __DATA_CONST.__const _kStageStickerTextInputPayloadID
|| __DATA_CONST.__const _kThrowAnimationDidFinishNotification
|| __DATA_CONST.__const _kThrowAnimationPPTTestNamePrefix
|| __DATA_CONST.__const _kThrowAnimationWillStartNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAVMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAcknowledgmentBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKActionMenuItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKActionMenuView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKActionMenuWindow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAggregateAcknowledgmentBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAggregateAcknowledgmentChatItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAnimatedEmojiMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAnimatedImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAnimatedImageMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAppGrabberView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAppManagerViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAppMenuViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKApplicationState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAssociatedMessageChatItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAttachmentBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAttachmentItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAttachmentSearchResultCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAttachmentsSearchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAudioBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAudioMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAudioRecorder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAutoloopMovieBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAvatarNavigationBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAvatarPickerLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAvatarPickerViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAvatarTitleCollectionReusableView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAvatarView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBalloonImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBalloonPluginManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBalloonTextView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBrowserAppManagerViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBrowserCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBrowserItemPayload
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBrowserSwitcherCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBrowserSwitcherFooterView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBrowserSwitcherViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBrowserTransitionCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBrowserViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKCalendarMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKCanvasBackButtonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKCardMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKChatController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKChatInputController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKChatItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKColoredBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKComposeChatController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKComposeNavbarCanvasViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKComposeRecipientSelectionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKComposeRecipientView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKComposition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKContactBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKContactMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKConversation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKConversationList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKConversationListCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKConversationListCollectionViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKConversationListCollectionViewConversationCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKConversationListController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKConversationListEmbeddedCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKConversationSearchResultCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKCoreChatController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDefaultPluginEntryViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDetailsCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDetailsContactsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDetailsContactsTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDetailsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDetailsSearchResultsTitleHeaderCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDetailsSearchViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDismissView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDispatchCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDispatchQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDraftManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEditableCollectionView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEditableCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEditableSearchResultCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEffectPickerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEntryViewButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKExpandedAppViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFullScreenAppNavbarManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFullScreenBalloonViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFullscreenBrowserNavigationController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFunCameraViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKGenericPhotoStackBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKGradientReferenceView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKGradientView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKGroupAcknowledgmentVotingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKHighlightsSearchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKIMFileTransfer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKImageAnimationTimer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKImageBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKImageData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKImageMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKInlineReplyChatController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKInlineReplyCollectionViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKInlineStickerBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKInteractiveBalloonImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKLargeTitleAccessoryView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKLinkSearchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKLinkSearchResultCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKLocationMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKLocationSearchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKLocationSearchResultCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKLocationShareBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMacRecipientsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKManualUpdater
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMediaObjectBackedAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMediaObjectManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMentionEntityNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMentionSuggestionCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMentionSuggestionView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMessageAcknowledgmentPickerBarViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMessageEntryContentView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMessageEntryRichTextView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMessageEntryTextView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMessageEntryView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMessageEntryViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMessageEntryViewLayoutMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMessageHighlightButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMessagePartHighlightBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMessageTypeSearchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMessagesController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMovieAttachmentItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMovieBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMovieMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMultiCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMultiDict
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKNavBarUnifiedCallButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKNavbarCanvasViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKNavigationBarCanvasView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKNavigationButtonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKNicknameBannerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKNotificationChatController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPassKitStateObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPassPreviewMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPassbookMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPendingConversation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPhoneTranscriptMessageCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPhotoSearchResultCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPhotoStackBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPhotosSearchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPinnedConversationCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPinnedConversationView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPluginDisplayContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPresentationControllerWindow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPreviewDispatchCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKQuickLookThumbnailMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRaiseGesture
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRecentsViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRecipientSearchListController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRecipientSelectionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKScheduledUpdater
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKScrollViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKSearchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKSearchResultsTitleHeaderCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKSearchViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKStarkManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKStickerDetailViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKSyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTUConversationBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTextBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTranscriptBalloonCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTranscriptCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTranscriptCollectionView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTranscriptCollectionViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTranscriptLabelCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTranscriptMessageCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTranscriptMessageContentCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTranscriptPluginBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTranscriptStatusCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTranscriptTypingIndicatorCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKUIBehavior
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKUIBehaviorPhone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKUITheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKUpdateBannerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKVideoPlayerBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKWatchfaceMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAVMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAcknowledgmentBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKActionMenuItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKActionMenuView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKActionMenuWindow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAggregateAcknowledgmentBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAggregateAcknowledgmentChatItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAnimatedEmojiMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAnimatedImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAnimatedImageMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAppGrabberView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAppManagerViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAppMenuViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKApplicationState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAssociatedMessageChatItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAttachmentBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAttachmentItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAttachmentSearchResultCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAttachmentsSearchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAudioBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAudioMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAudioRecorder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAutoloopMovieBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAvatarNavigationBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAvatarPickerLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAvatarPickerViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAvatarTitleCollectionReusableView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAvatarView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBalloonImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBalloonPluginManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBalloonTextView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBrowserAppManagerViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBrowserCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBrowserItemPayload
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBrowserSwitcherCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBrowserSwitcherFooterView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBrowserSwitcherViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBrowserTransitionCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBrowserViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKCalendarMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKCanvasBackButtonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKCardMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKChatController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKChatInputController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKChatItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKColoredBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKComposeChatController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKComposeNavbarCanvasViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKComposeRecipientSelectionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKComposeRecipientView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKComposition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKContactBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKContactMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKConversation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKConversationList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKConversationListCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKConversationListCollectionViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKConversationListCollectionViewConversationCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKConversationListController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKConversationListEmbeddedCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKConversationSearchResultCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKCoreChatController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDefaultPluginEntryViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDetailsCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDetailsContactsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDetailsContactsTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDetailsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDetailsSearchResultsTitleHeaderCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDetailsSearchViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDismissView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDispatchCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDispatchQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDraftManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEditableCollectionView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEditableCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEditableSearchResultCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEffectPickerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEntryViewButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKExpandedAppViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFullScreenAppNavbarManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFullScreenBalloonViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFullscreenBrowserNavigationController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFunCameraViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKGenericPhotoStackBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKGradientReferenceView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKGradientView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKGroupAcknowledgmentVotingViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKHighlightsSearchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKIMFileTransfer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKImageAnimationTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKImageBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKImageData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKImageMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKInlineReplyChatController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKInlineReplyCollectionViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKInlineStickerBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKInteractiveBalloonImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKLabel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKLargeTitleAccessoryView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKLinkSearchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKLinkSearchResultCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKLocationMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKLocationSearchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKLocationSearchResultCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKLocationShareBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMacRecipientsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKManualUpdater
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMediaObjectBackedAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMediaObjectManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMentionEntityNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMentionSuggestionCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMentionSuggestionView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMessageAcknowledgmentPickerBarViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMessageEntryContentView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMessageEntryRichTextView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMessageEntryTextView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMessageEntryView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMessageEntryViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMessageEntryViewLayoutMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMessageHighlightButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMessagePartHighlightBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMessageTypeSearchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMessagesController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMovieAttachmentItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMovieBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMovieMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMultiCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMultiDict
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKNavBarUnifiedCallButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKNavbarCanvasViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKNavigationBarCanvasView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKNavigationButtonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKNicknameBannerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKNotificationChatController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPassKitStateObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPassPreviewMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPassbookMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPendingConversation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPhoneTranscriptMessageCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPhotoSearchResultCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPhotoStackBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPhotosSearchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPinnedConversationCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPinnedConversationView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPluginDisplayContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPresentationControllerWindow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPreviewDispatchCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKQuickLookThumbnailMediaObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRaiseGesture
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRecentsViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRecipientSearchListController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRecipientSelectionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKScheduledUpdater
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKScrollViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKSearchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKSearchResultsTitleHeaderCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKSearchViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKStarkManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKStickerDetailViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKSyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTUConversationBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTextBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTranscriptBalloonCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTranscriptCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTranscriptCollectionView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTranscriptCollectionViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTranscriptLabelCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTranscriptMessageCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTranscriptMessageContentCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTranscriptPluginBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTranscriptStatusCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTranscriptTypingIndicatorCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKUIBehavior
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKUIBehaviorPhone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKUITheme
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKUpdateBannerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKVideoPlayerBalloonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKWatchfaceMediaObject
|| __TEXT.__const _CKAppStripFavoritesSection
|| __TEXT.__const _CKAppStripRecentsSection
|| __TEXT.__const _CKBalloonDescriptorZero
|| __TEXT.__const _CKElasticFunctionTimestep
|| __TEXT.__const _CKFeedSeparatorMetricsZero
|| __TEXT.__const _CKMentionSuggestionsMainSection
|| __TEXT.__const _CKReceiverPlaybackDelayRaise
|| __TEXT.__const _CKReceiverPlaybackDelayTap
|| __TEXT.__const _kCKWhatsNewInMessagesLatestShippedVersion
|| __TEXT.__const _kCKWhatsNewInMessagesVersion
|| __TEXT.__const _kNumberOfMessagesToKeepLoadedInMobileSMS
|| __TEXT.__text _CKAVURLAssetForURL
|| __TEXT.__text _CKAVURLAssetForURLWithAllowableTypeCategories
|| __TEXT.__text _CKAccessibilityCustomTextFontName
|| __TEXT.__text _CKAccessibilityCustomTextFontSize
|| __TEXT.__text _CKAccessibilityTextEnabled
|| __TEXT.__text _CKActiveAccountsAreEligibleForFirstPartyExtensionSMSFiltering
|| __TEXT.__text _CKActivePairedWatchSupportsEncryptedKeys
|| __TEXT.__text _CKAppExtensionDevelopmentTargetBundle
|| __TEXT.__text _CKAssistantClearDrafts
|| __TEXT.__text _CKAssistantGetDraftForIdentifier
|| __TEXT.__text _CKAssistantUpdateStoreDraftWithSMS
|| __TEXT.__text _CKAttachmentDraftURL
|| __TEXT.__text _CKAttachmentFallbackFilename
|| __TEXT.__text _CKAttachmentLinkFileURL
|| __TEXT.__text _CKAttachmentOrientedPreviewCachesFileURL
|| __TEXT.__text _CKAttachmentPreviewCacheKey
|| __TEXT.__text _CKAttachmentSummary
|| __TEXT.__text _CKAttachmentSummaryForOneMediaObject
|| __TEXT.__text _CKAttachmentTitleFromFilename
|| __TEXT.__text _CKAttachmentTmpFileURL
|| __TEXT.__text _CKAttachmentsDirectoryURL
|| __TEXT.__text _CKAttributedFormatString
|| __TEXT.__text _CKAudioPlaybackSpeakerEnabled
|| __TEXT.__text _CKBackgroundLevelForTraitCollection
|| __TEXT.__text _CKBalloonCornersForAttachmentContiguousType
|| __TEXT.__text _CKBalloonDescriptorEqualsBalloonDescriptor
|| __TEXT.__text _CKBalloonDescriptorKey
|| __TEXT.__text _CKBalloonViewForClass
|| __TEXT.__text _CKBalloonViewReuse
|| __TEXT.__text _CKBrowserSnapshotPreviewURL
|| __TEXT.__text _CKCanShowSubjectForLastAddressedHandle
|| __TEXT.__text _CKClientComposeCanSendMediaObjectTypes
|| __TEXT.__text _CKClientComposeMaximumAudioDuration
|| __TEXT.__text _CKClientComposeMaximumVideoDuration
|| __TEXT.__text _CKClientComposeSendComposition
|| __TEXT.__text _CKClientComposeSendMessage
|| __TEXT.__text _CKClientComposeSendMessageWithSubscriptionIdentifier
|| __TEXT.__text _CKConversationIsFromFilteredSender
|| __TEXT.__text _CKConversationListContactPhotosEnabled
|| __TEXT.__text _CKConversationListFilterModeStringValue
|| __TEXT.__text _CKCreateAlertControllerWithError
|| __TEXT.__text _CKCreateCache
|| __TEXT.__text _CKCreateDirectoriesToPath
|| __TEXT.__text _CKCreateMultiCache
|| __TEXT.__text _CKCreateNSCache
|| __TEXT.__text _CKCreatePNGRepresentationFromUIImageFilterTypeNone
|| __TEXT.__text _CKDarkModeEnabled
|| __TEXT.__text _CKDebugAssertionBehavior
|| __TEXT.__text _CKDebugSaveCGImageWithName
|| __TEXT.__text _CKDebugSaveImageWithName
|| __TEXT.__text _CKDefaultCacheLimit
|| __TEXT.__text _CKDeselectedAcknowledgmentTypeForAcknowledgmentType
|| __TEXT.__text _CKDetailsPageGifsEnabled
|| __TEXT.__text _CKDeviceSupportsPerseus
|| __TEXT.__text _CKDeviceSupportsSiri
|| __TEXT.__text _CKDeviceSupportsVideo
|| __TEXT.__text _CKDisableChatItemSizeCache
|| __TEXT.__text _CKDraftsDirectoryURL
|| __TEXT.__text _CKEnforceAveragePerformanceOfBlock
|| __TEXT.__text _CKEnhanceBitmapEdges
|| __TEXT.__text _CKEnhanceImageEdges
|| __TEXT.__text _CKEnhancedLegacySearchDisabled
|| __TEXT.__text _CKEnumerateRange
|| __TEXT.__text _CKEnumerateRangeWithIncrement
|| __TEXT.__text _CKEnumerateSearchRange
|| __TEXT.__text _CKFileSizeEligibleForEagerUpload
|| __TEXT.__text _CKFileTransferIsDownloadable
|| __TEXT.__text _CKFileTransferIsDownloading
|| __TEXT.__text _CKFileTransferIsFileURLFinalized
|| __TEXT.__text _CKFormattedPhoneNumberFromNumber
|| __TEXT.__text _CKFrameworkBundle
|| __TEXT.__text _CKFreeSpaceWriteDataToURL
|| __TEXT.__text _CKGetBoolSettingForKey
|| __TEXT.__text _CKGetComponentsOfSpotlightIdentifier
|| __TEXT.__text _CKGetComponentsOfSpotlightIdentifierCString
|| __TEXT.__text _CKGetComponentsOfSpotlightURL
|| __TEXT.__text _CKGetIntSettingForKey
|| __TEXT.__text _CKGetLegacyAppMigratedSidebarPersistedWidth
|| __TEXT.__text _CKGetMobileUserDirectory
|| __TEXT.__text _CKGetMobileUserGID
|| __TEXT.__text _CKGetMobileUserUID
|| __TEXT.__text _CKGetSidebarPersistedWidth
|| __TEXT.__text _CKGetTmpPathForAppendedVideoURL
|| __TEXT.__text _CKHasAnyWatchPaired
|| __TEXT.__text _CKHasBlackholeEnabledOrHasBlackholeChats
|| __TEXT.__text _CKIMDChatRecordBulkCopy
|| __TEXT.__text _CKIMDMessageRecordBulkCopy
|| __TEXT.__text _CKInputAccessoryViewControllerEnabled
|| __TEXT.__text _CKIsAttachmentFallbackFilename
|| __TEXT.__text _CKIsBareMakoAccount
|| __TEXT.__text _CKIsBlackholeEnabled
|| __TEXT.__text _CKIsEligibleForBlackhole
|| __TEXT.__text _CKIsEmergencyNumber
|| __TEXT.__text _CKIsEqual
|| __TEXT.__text _CKIsFilterCategory
|| __TEXT.__text _CKIsForceUnknownFilteringEnabled
|| __TEXT.__text _CKIsPlugInProxyAMessagesExtensionPoint
|| __TEXT.__text _CKIsRunningForDevelopmentOnSimulator
|| __TEXT.__text _CKIsRunningInCKTester
|| __TEXT.__text _CKIsRunningInCameraAppsClient
|| __TEXT.__text _CKIsRunningInCarousel
|| __TEXT.__text _CKIsRunningInFullCKClient
|| __TEXT.__text _CKIsRunningInIMTranscoderAgent
|| __TEXT.__text _CKIsRunningInInCallService
|| __TEXT.__text _CKIsRunningInMacCatalyst
|| __TEXT.__text _CKIsRunningInMessages
|| __TEXT.__text _CKIsRunningInMessagesAssistantUIExtension
|| __TEXT.__text _CKIsRunningInMessagesNotificationExtension
|| __TEXT.__text _CKIsRunningInMessagesNotificationViewService
|| __TEXT.__text _CKIsRunningInMessagesOrSpringBoard
|| __TEXT.__text _CKIsRunningInMessagesTranscriptExtension
|| __TEXT.__text _CKIsRunningInMessagesViewService
|| __TEXT.__text _CKIsRunningInNanoSettings
|| __TEXT.__text _CKIsRunningInNonUIClient
|| __TEXT.__text _CKIsRunningInPassKitIntentsExtension
|| __TEXT.__text _CKIsRunningInPreferences
|| __TEXT.__text _CKIsRunningInSiri
|| __TEXT.__text _CKIsRunningInSpringBoard
|| __TEXT.__text _CKIsRunningInTapToRadar
|| __TEXT.__text _CKIsRunningIniMessageAppExtension
|| __TEXT.__text _CKIsRunningIniMessageAppsViewService
|| __TEXT.__text _CKIsRunningUITests
|| __TEXT.__text _CKIsRunningUnitTests
|| __TEXT.__text _CKIsScreenLocked
|| __TEXT.__text _CKIsSuppressingReceiveSoundForMessageGUID
|| __TEXT.__text _CKIsSuppressingSendSoundForMessageGUID
|| __TEXT.__text _CKIsUnexpectedlyLoggedOut
|| __TEXT.__text _CKIsValidAddress
|| __TEXT.__text _CKJPEGUIImageFromURL
|| __TEXT.__text _CKJoinPillTextMetrics
|| __TEXT.__text _CKLegacyAttachmentsDirectoryURL
|| __TEXT.__text _CKLinearForDbPowerLevel
|| __TEXT.__text _CKLinkAndCreateAppendedVideoTransfer
|| __TEXT.__text _CKListenerCapabilities
|| __TEXT.__text _CKListenerPaginatedChatRegistryCapabilities
|| __TEXT.__text _CKLocalizedShortNameForContext
|| __TEXT.__text _CKLocalizedStringForDuration
|| __TEXT.__text _CKLocalizedStringForLanguage
|| __TEXT.__text _CKLocalizedStringForNumber
|| __TEXT.__text _CKLocationSharePreviewCachesFileURL
|| __TEXT.__text _CKLocationSharePreviewPlaceHolderCacheFileURL
|| __TEXT.__text _CKLogCStringForType
|| __TEXT.__text _CKLogNameForType
|| __TEXT.__text _CKMVCListenerCapabilities
|| __TEXT.__text _CKMadridSearchValuesFromSearchURL
|| __TEXT.__text _CKMadridSendAsSMSEnabled
|| __TEXT.__text _CKMakeHandlesFromRecipients
|| __TEXT.__text _CKMakeHandlesFromRecipientsWithFallbackService
|| __TEXT.__text _CKMaxSubscriptionLabelWidthForSubscriptions
|| __TEXT.__text _CKMessageAcknowledgmentTypeFromIMAssociatedMessageType
|| __TEXT.__text _CKMessageEntryViewStyleInvert
|| __TEXT.__text _CKMessageEntryViewStyleIsForDarkAppearance
|| __TEXT.__text _CKMessageEntryViewStyleIsForDarkFullscreenMoment
|| __TEXT.__text _CKMessageEntryViewStyleIsForReply
|| __TEXT.__text _CKMessageFilteringEnabled
|| __TEXT.__text _CKMessageFilteringEnabledUnderFirstUnlock
|| __TEXT.__text _CKMessageFilteringIsModified
|| __TEXT.__text _CKMessageForceFilteringIsExpected
|| __TEXT.__text _CKMessageIsFromFilteredSender
|| __TEXT.__text _CKMessageIsFromFilteredSenderIsUnderFirstUnlock
|| __TEXT.__text _CKMessagePromotionsNotificationDisabled
|| __TEXT.__text _CKMessageSpamFilteringEnabled
|| __TEXT.__text _CKMessageSpamFilteringEnabledUnderFirstUnlock
|| __TEXT.__text _CKMessageSpamFilteringIsModified
|| __TEXT.__text _CKMessageTransactionsNotificationDisabled
|| __TEXT.__text _CKMessageUnknownFilteringEnabled
|| __TEXT.__text _CKMessageUnknownFilteringEnabledUnderFirstUnlock
|| __TEXT.__text _CKMessageUnknownSenderNotificationDisabled
|| __TEXT.__text _CKMessagesPreferencesURL
|| __TEXT.__text _CKMigrateTextInputIdentifiersIfNeeded
|| __TEXT.__text _CKModernSearchEnabled
|| __TEXT.__text _CKMyAccountName
|| __TEXT.__text _CKNanoAcknowledgmentBalloonNameForAck
|| __TEXT.__text _CKNanoCurrentDictationMode
|| __TEXT.__text _CKNonFlatDeviceOrientation
|| __TEXT.__text _CKNormalizedMessageGUID
|| __TEXT.__text _CKOrientedPreviewCacheKey
|| __TEXT.__text _CKPersistentTextForText
|| __TEXT.__text _CKPhotoPickerTmpFileURL
|| __TEXT.__text _CKPluginDraftDirectoryURL
|| __TEXT.__text _CKPluginTmpDirectoryURL
|| __TEXT.__text _CKPluginTmpSubDirectoryURL
|| __TEXT.__text _CKPreferredAddressTypes
|| __TEXT.__text _CKPreferredContactsProperties
|| __TEXT.__text _CKPreferredContentSizeCategory
|| __TEXT.__text _CKPreviewCacheKey
|| __TEXT.__text _CKPreviewMetadataCacheKey
|| __TEXT.__text _CKPreviewTextFromComposition
|| __TEXT.__text _CKPreviewTextFromMessage
|| __TEXT.__text _CKPrewarmBalloonViewCacheIfNeeded
|| __TEXT.__text _CKPrewarmBalloonViewMaskAndPunchOutCacheIfNeeded
|| __TEXT.__text _CKPrewarmCKMessageEntryView
|| __TEXT.__text _CKPrewarmForLaunch
|| __TEXT.__text _CKRaiseToListenEnabled
|| __TEXT.__text _CKReadReceiptSettingsConfirmed
|| __TEXT.__text _CKReadReceiptsEnabled
|| __TEXT.__text _CKReduceMotionAutoplayEnabled
|| __TEXT.__text _CKRegistrationBypassEnabled
|| __TEXT.__text _CKRemoveDaemonListener
|| __TEXT.__text _CKResetBlackholeEnabledCache
|| __TEXT.__text _CKResetCachedUserSettings
|| __TEXT.__text _CKResetFilteringSettings
|| __TEXT.__text _CKResizableBalloonImage
|| __TEXT.__text _CKResizableBalloonMask
|| __TEXT.__text _CKResizableBalloonMaskWithMinHeight
|| __TEXT.__text _CKResizableBalloonPunchout
|| __TEXT.__text _CKResizableOnboardingBalloonPunchout
|| __TEXT.__text _CKResolvedBackgroundColorForBalloonDescriptor
|| __TEXT.__text _CKResolvedBackgroundColorForOnboardingBalloonDescriptor
|| __TEXT.__text _CKResolvedColorForBalloonDescriptor
|| __TEXT.__text _CKRichIconPreviewCacheKey
|| __TEXT.__text _CKSAPersonForAddress
|| __TEXT.__text _CKSMSRelaySettingsConfirmed
|| __TEXT.__text _CKSURFAvailable
|| __TEXT.__text _CKSafeFilename
|| __TEXT.__text _CKSendCurrentLocation
|| __TEXT.__text _CKSeparateInsertionsAndDeletions
|| __TEXT.__text _CKSeparatedTextForText
|| __TEXT.__text _CKSetAudioPlaybackSpeakerEnabled
|| __TEXT.__text _CKSetChatItemRulesIfNeeded
|| __TEXT.__text _CKSetHandwritingShouldBeAutoDisplayed
|| __TEXT.__text _CKSetMessageFilteringEnabled
|| __TEXT.__text _CKSetMessageFilteringSettingsConfirmed
|| __TEXT.__text _CKSetMessageSpamFilteringEnabled
|| __TEXT.__text _CKSetMessageSpamFilteringSettingsConfirmed
|| __TEXT.__text _CKSetReadReceiptSettingsConfirmed
|| __TEXT.__text _CKSetReadReceiptsEnabled
|| __TEXT.__text _CKSetSMSRelaySettingsConfirmed
|| __TEXT.__text _CKSetShowAppStripInEntryView
|| __TEXT.__text _CKSetSidebarPersistedWidth
|| __TEXT.__text _CKShouldEnhanceImageEdges
|| __TEXT.__text _CKShouldPlaySMSSounds
|| __TEXT.__text _CKShouldShowInboxView
|| __TEXT.__text _CKShouldShowSURF
|| __TEXT.__text _CKShowAppStripInEntryView
|| __TEXT.__text _CKShowCharacterCountEnabledForChat
|| __TEXT.__text _CKShowError
|| __TEXT.__text _CKShowInternalErrors
|| __TEXT.__text _CKShowSubjectEnabledForLastAddressedHandle
|| __TEXT.__text _CKSiriListenerCapabilities
|| __TEXT.__text _CKSizeOfImageAtURL
|| __TEXT.__text _CKSpotlightPreviewCachesFileURL
|| __TEXT.__text _CKSquareImageDataFromImageData
|| __TEXT.__text _CKStartSuppressingReceiveSoundForMessageGUID
|| __TEXT.__text _CKStartSuppressingSendSoundForMessageGUID
|| __TEXT.__text _CKStickerPreviewCacheKey
|| __TEXT.__text _CKStickerPreviewCacheKeyForFileTransfer
|| __TEXT.__text _CKStopSuppressingReceiveSoundForAllMessageGUIDs
|| __TEXT.__text _CKStopSuppressingReceiveSoundForMessageGUID
|| __TEXT.__text _CKStopSuppressingSendSoundForAllMessageGUIDs
|| __TEXT.__text _CKStopSuppressingSendSoundForMessageGUID
|| __TEXT.__text _CKSupportsAdvancedHaptics
|| __TEXT.__text _CKSuppressionContextsForIdentifiers
|| __TEXT.__text _CKTextForPersistentText
|| __TEXT.__text _CKTextInputIdentifier
|| __TEXT.__text _CKTimeIntervalComponents
|| __TEXT.__text _CKTranscoderUserInfoForVideoTrimOptions
|| __TEXT.__text _CKTranscriptPluginIconCachesFileURL
|| __TEXT.__text _CKTranscriptTextSizeForFont
|| __TEXT.__text _CKUITraitCollectionForBalloonDescriptor
|| __TEXT.__text _CKUTTypeIsDynamic
|| __TEXT.__text _CKUnlocalizedStringFromAvailability
|| __TEXT.__text _CKUpdatePreviewGenerationMetrics
|| __TEXT.__text _CKUserPreferenceFontSize
|| __TEXT.__text _CKWaveformWithPowerLevels
|| __TEXT.__text _CKWeakWrapper
|| __TEXT.__text _CKiMessageSupported
|| __TEXT.__text _IMAssociatedMessageTypeFromCKMessageAcknowledgmentType
|| __TEXT.__text _IMLayoutIntentIsBottom
|| __TEXT.__text _IMLayoutIntentIsHorizontallyCentered
|| __TEXT.__text _IMLayoutIntentIsLeft
|| __TEXT.__text _IMLayoutIntentIsRight
|| __TEXT.__text _IMLayoutIntentIsTop
|| __TEXT.__text _IMLayoutIntentIsVerticallyCentered
|| __TEXT.__text _IncludeProactiveResponses
|| __TEXT.__text _MessagesTelemetrySubsystem
|| __TEXT.__text _NSStringFromBalloonDescriptor
|| __TEXT.__text _NSStringFromBalloonOrientation
|| __TEXT.__text _NSStringFromBalloonShape
|| __TEXT.__text _NSStringFromBalloonStyle
|| __TEXT.__text _NSStringFromColorType
|| __TEXT.__text _NSStringFromTailShape
|| __TEXT.__text _NSStringFromTranscriptOrientation
|| __TEXT.__text _ReplaceMarkerWithUniqueReplies
|| __TEXT.__text __CKAssert
|| __TEXT.__text __CKEnumerateRangesOfArgumentsInFormatString
|| __TEXT.__text __CKEnumerateRangesOfEmphasisInFormatString
|| __TEXT.__text __CKIMessageFailedAccountsAreIrreparable
|| __TEXT.__text __CKLog
|| __TEXT.__text __CKLogBacktrace
|| __TEXT.__text __CKLogExternal
|| __TEXT.__text __CKSetBusinessInfoForMutableContact
|| __TEXT.__text __CKShouldLog
|| __TEXT.__text __CKShouldLogExternal
|| __TEXT.__text __chatControllerTelemetryLogHandle
|| __TEXT.__text _cellDoubleClickInterval
|| __TEXT.__text _ck_dispatch_isolated
|| __TEXT.__text _ck_dispatch_main_after_seconds
__ AVFAudio: _AVAudioSessionCategoryAmbient
__ AVFAudio: _AVAudioSessionCategoryPlayAndRecord
__ AVFAudio: _AVAudioSessionCategoryPlayback
__ AVFAudio: _AVAudioSessionInterruptionNotification
__ AVFAudio: _AVAudioSessionMediaServicesWereLostNotification
__ AVFAudio: _AVAudioSessionMediaServicesWereResetNotification
__ AVFAudio: _AVAudioSessionModeDefault
__ AVFAudio: _AVAudioSessionRouteChangeNotification
__ AVFAudio: _AVAudioSessionRouteChangeReasonKey
__ AVFAudio: _AVEncoderBitRateKey
__ AVFAudio: _AVFormatIDKey
__ AVFAudio: _AVNumberOfChannelsKey
__ AVFAudio: _AVSampleRateKey
__ AVFAudio: _AVVoiceActivationModeKey
__ AVFAudio: _OBJC_CLASS_$_AVAudioPlayer
__ AVFAudio: _OBJC_CLASS_$_AVAudioSession
__ AVFAudio: _OBJC_CLASS_$_AVVoiceController
__ AVFoundation: _AVAssetExportPresetMessage
__ AVFoundation: _AVAssetExportPresetMessageAudio
__ AVFoundation: _AVCaptureSessionPresetMedium
__ AVFoundation: _AVCaptureVideoPreviewLayerDidStartRunningNotification
__ AVFoundation: _AVFileTypeQuickTimeMovie
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeNotification
__ AVFoundation: _AVURLAssetAllowableTypeCategoriesKey
__ AVFoundation: _AVURLAssetReferenceRestrictionsKey
__ AVFoundation: _AVVideoCodecJPEG
__ AVFoundation: _AVVideoCodecKey
__ AVFoundation: _OBJC_CLASS_$_AVAssetExportSession
__ AVFoundation: _OBJC_CLASS_$_AVAssetImageGenerator
__ AVFoundation: _OBJC_CLASS_$_AVAssetReader
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderTrackOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDevice
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureMovieFileOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureStillImageOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoPreviewLayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLooper
__ AVFoundation: _OBJC_CLASS_$_AVQueuePlayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ AddressBook: _ABMultiValueCopyArrayOfAllValues
__ AddressBook: _ABPersonCompareNameOfPeople
__ AddressBook: _ABPersonGetSortOrdering
__ AddressBook: _ABRecordCopyValue
__ AddressBook: _OBJC_CLASS_$_ABSVCardRecord
__ AddressBook: _kABPersonPhoneProperty
__ AddressBook: _kABPersonURLProperty
__ AppSupport: _CFPhoneNumberCopyUnformattedInternationalRepresentation
__ AppSupport: _CFPhoneNumberCreate
__ AppSupport: _CFPhoneNumberCreateString
__ AppSupport: _CPBitmapCreateImagesFromPath
__ AppSupport: _CPBitmapWriterAddImage
__ AppSupport: _CPBitmapWriterCreate
__ AppSupport: _CPBitmapWriterFinalize
__ AppSupport: _CPCopySharedResourcesPreferencesDomainForDomain
__ AppSupport: _CPFSSizeStringsWithStyle
__ AppSupport: _CPFreeSpaceRequestBytesAtPathWithCompletionBlock
__ AppSupport: _CPPhoneNumberCopyCountryCodeForIncomingTextMessage
__ AppSupport: _OBJC_CLASS_$_CPLRUDictionary
__ AppSupport: _OBJC_METACLASS_$_CPLRUDictionary
__ AppSupport: _PNCopyCompressedFormattedStringWithCountry
__ AppSupport: _kCPFreeSpaceEffortLevelKey
__ AudioToolbox: _AudioComponentFindNext
__ AudioToolbox: _AudioComponentInstanceDispose
__ AudioToolbox: _AudioComponentInstanceNew
__ AudioToolbox: _AudioFileClose
__ AudioToolbox: _AudioFileCreateWithURL
__ AudioToolbox: _AudioFileWritePackets
__ AudioToolbox: _AudioFormatGetProperty
__ AudioToolbox: _AudioUnitGetParameter
__ AudioToolbox: _AudioUnitInitialize
__ AudioToolbox: _AudioUnitProcessMultiple
__ AudioToolbox: _AudioUnitReset
__ AudioToolbox: _AudioUnitSetProperty
__ AudioToolbox: _AudioUnitUninitialize
__ AudioToolbox: _tkqMjk4y
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ BackBoardServices: _OBJC_CLASS_$_BKSAccelerometer
__ BiomeStreams: _OBJC_CLASS_$_BMDiscoverabilitySignalEvent
__ BiomeStreams: _OBJC_CLASS_$_BMStreams
__ CameraKit: _CAMShutterButtonSpecMake
__ CameraKit: _OBJC_CLASS_$_CAMShutterButton
__ CameraKit: _PLCameraControllerOrientationChangedNotification
__ CarPlay: _OBJC_CLASS_$_CPListSection
__ CarPlay: _OBJC_CLASS_$_CPListTemplate
__ CarPlay: _OBJC_CLASS_$_CPMessageComposeBarButton
__ CarPlay: _OBJC_CLASS_$_CPMessageListItem
__ CarPlay: _OBJC_CLASS_$_CPMessageListItemLeadingConfiguration
__ Celestial: _FigCreateCGImageFromIOSurface
__ Celestial: _FigCreateCGImageFromJPEG
__ Celestial: _FigJPEGDecodeSessionCreate
__ Celestial: _FigJPEGDecodeSessionCreateCGImageFromData
__ Celestial: _FigJPEGDecodeSessionDiscardCachedBuffers
__ Celestial: _kFigJPEGDecodeSessionImageOptionKey_BackCGImageWithIOSurface
__ Celestial: _kFigJPEGDecodeSessionImageOptionKey_ForceHighSpeedDecode
__ Celestial: _kFigJPEGDecodeSessionImageOptionKey_OutputPixelFormat
__ Contacts: _CNActionTypeAudioCall
__ Contacts: _CNActionTypeMail
__ Contacts: _CNActionTypeVideoCall
__ Contacts: _CNContactBirthdayKey
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _CNContactImageDataKey
__ Contacts: _CNContactImageHashKey
__ Contacts: _CNContactInstantMessageAddressesKey
__ Contacts: _CNContactOrganizationNameKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactPhoneticFamilyNameKey
__ Contacts: _CNContactPhoneticGivenNameKey
__ Contacts: _CNContactPhoneticOrganizationNameKey
__ Contacts: _CNContactTextAlertKey
__ Contacts: _CNLabelHome
__ Contacts: _CNLabelPhoneNumberMobile
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNContactVCardSerialization
__ Contacts: _OBJC_CLASS_$_CNLabeledValue
__ Contacts: _OBJC_CLASS_$_CNMailToGroup
__ Contacts: _OBJC_CLASS_$_CNMutableContact
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ Contacts: _OBJC_CLASS_$_CNSaveRequest
__ ContactsAutocompleteUI: _CNComposeRecipientDragType
__ ContactsAutocompleteUI: _CNComposeRecipientViewDidChangeNotification
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNAtomView
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNAutocompleteGroupDetailViewController
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNAutocompleteResultsTableViewController
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNAutocompleteSearchManager
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNAutocompleteSupplementalGroup
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNAutocompleteSupplementalGroupMember
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNComposeRecipient
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNComposeRecipientGroup
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNComposeRecipientOriginContext
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNComposeRecipientTextView
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNUnifiedComposeRecipient
__ ContactsAutocompleteUI: _OBJC_METACLASS_$_CNAutocompleteResultsTableViewController
__ ContactsAutocompleteUI: _OBJC_METACLASS_$_CNComposeRecipient
__ ContactsAutocompleteUI: _OBJC_METACLASS_$_CNComposeRecipientGroup
__ ContactsAutocompleteUI: _OBJC_METACLASS_$_CNComposeRecipientTextView
__ ContactsUI: _CNQuickActionCategoryAddToContacts
__ ContactsUI: _CNQuickActionCategoryAudioCall
__ ContactsUI: _CNQuickActionCategoryInstantMessage
__ ContactsUI: _CNQuickActionCategoryMail
__ ContactsUI: _CNQuickActionCategoryVideoCall
__ ContactsUI: _CNUIIsMessages
__ ContactsUI: _OBJC_CLASS_$_CNActionView
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRenderer
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRendererSettings
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRenderingScope
__ ContactsUI: _OBJC_CLASS_$_CNAvatarView
__ ContactsUI: _OBJC_CLASS_$_CNAvatarViewControllerSettings
__ ContactsUI: _OBJC_CLASS_$_CNContactPickerViewController
__ ContactsUI: _OBJC_CLASS_$_CNContactStyle
__ ContactsUI: _OBJC_CLASS_$_CNContactViewController
__ ContactsUI: _OBJC_CLASS_$_CNGroupAvatarViewController
__ ContactsUI: _OBJC_CLASS_$_CNGroupIdentity
__ ContactsUI: _OBJC_CLASS_$_CNGroupIdentityActionItem
__ ContactsUI: _OBJC_CLASS_$_CNGroupIdentityHeaderViewController
__ ContactsUI: _OBJC_CLASS_$_CNGroupIdentityInlineActionsViewConfiguration
__ ContactsUI: _OBJC_CLASS_$_CNMeCardSharingSettingsViewController
__ ContactsUI: _OBJC_CLASS_$_CNMonogrammer
__ ContactsUI: _OBJC_CLASS_$_CNUnknownContactsController
__ ContactsUI: _OBJC_CLASS_$_CNVisualIdentityPickerViewController
__ ContactsUI: _OBJC_METACLASS_$_CNAvatarView
__ ContactsUI: _OBJC_METACLASS_$_CNContactPickerViewController
__ ContactsUI: _OBJC_METACLASS_$_CNVisualIdentityPickerViewController
__ CoreEmoji: _CEMCreateEmojiCharacterSet
__ CoreEmoji: _CEMStringIsSingleEmoji
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAllocatorAllocate
__ CoreFoundation: _CFAllocatorDeallocate
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBinaryHeapAddValue
__ CoreFoundation: _CFBinaryHeapCreate
__ CoreFoundation: _CFBinaryHeapGetMinimum
__ CoreFoundation: _CFBinaryHeapRemoveAllValues
__ CoreFoundation: _CFBinaryHeapRemoveMinimumValue
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFCopyHomeDirectoryURLForUser
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFGetUserName
__ CoreFoundation: _CFLocaleCopyCurrent
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetDistributedCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFStringAppendFormat
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringHasPrefix
__ CoreFoundation: _CFStringTokenizerAdvanceToNextToken
__ CoreFoundation: _CFStringTokenizerCreate
__ CoreFoundation: _CFStringTokenizerGetCurrentTokenRange
__ CoreFoundation: _CFURLCopyFileSystemPath
__ CoreFoundation: _CFURLCopyResourcePropertyForKey
__ CoreFoundation: _CFURLGetString
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSStreamDataWrittenToMemoryStreamKey
__ CoreFoundation: _NSStringTransformStripDiacritics
__ CoreFoundation: _NSURLContentTypeKey
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLIsVolumeKey
__ CoreFoundation: _NSURLVolumeAvailableCapacityKey
__ CoreFoundation: _NSURLVolumeTotalCapacityKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesAnyUser
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFTypeSetCallBacks
__ CoreFoundation: _kCFURLIsReadableKey
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapGetAlignedBytesPerRow
__ CoreGraphics: _CGColorGetConstantColor
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextFillEllipseInRect
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextGetCTM
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextRotateCTM
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBaseCTM
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetFontSize
__ CoreGraphics: _CGContextSetShadowWithColor
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGImageBlockSetRelease
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathAddRoundedRect
__ CoreGraphics: _CGPathApplyWithBlock
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInfinite
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorClear
__ CoreMedia: _CMFormatDescriptionGetMediaSubType
__ CoreMedia: _CMTimeMake
__ CoreMedia: _kCMTimeZero
__ CoreMotion: _OBJC_CLASS_$_CMGestureManager
__ CoreServices: _LSUserApplicationType
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ CoreServices: _OBJC_CLASS_$_LSDocumentProxy
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _UTTypeCopyDescription
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _UTTypeEqual
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTagClassMIMEType
__ CoreServices: _kUTTypeAudio
__ CoreServices: _kUTTypeAudiovisualContent
__ CoreServices: _kUTTypeCompositeContent
__ CoreServices: _kUTTypeContact
__ CoreServices: _kUTTypeContent
__ CoreServices: _kUTTypeFlatRTFD
__ CoreServices: _kUTTypeFolder
__ CoreServices: _kUTTypeGIF
__ CoreServices: _kUTTypeHTML
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypeItem
__ CoreServices: _kUTTypeJPEG
__ CoreServices: _kUTTypeLivePhoto
__ CoreServices: _kUTTypeMovie
__ CoreServices: _kUTTypePNG
__ CoreServices: _kUTTypePlainText
__ CoreServices: _kUTTypeRTF
__ CoreServices: _kUTTypeRTFD
__ CoreServices: _kUTTypeScalableVectorGraphics
__ CoreServices: _kUTTypeText
__ CoreServices: _kUTTypeURL
__ CoreServices: _kUTTypeUTF8PlainText
__ CoreServices: _kUTTypeVCard
__ CoreServices: _kUTTypeWebArchive
__ CoreSpotlight: _MDItemAccountIdentifier
__ CoreSpotlight: _MDItemAuthorAddresses
__ CoreSpotlight: _MDItemAuthorContactIdentifiers
__ CoreSpotlight: _MDItemAuthors
__ CoreSpotlight: _MDItemCity
__ CoreSpotlight: _MDItemContentCreationDate
__ CoreSpotlight: _MDItemContentURL
__ CoreSpotlight: _MDItemCountry
__ CoreSpotlight: _MDItemDomainIdentifier
__ CoreSpotlight: _MDItemLastUsedDate
__ CoreSpotlight: _MDItemLatitude
__ CoreSpotlight: _MDItemLongitude
__ CoreSpotlight: _MDItemOwnerIdentifier
__ CoreSpotlight: _MDItemPostalCode
__ CoreSpotlight: _MDItemRecipientAddresses
__ CoreSpotlight: _MDItemRecipientContactIdentifiers
__ CoreSpotlight: _MDItemRecipients
__ CoreSpotlight: _MDItemSubject
__ CoreSpotlight: _MDItemSyndicationStatus
__ CoreSpotlight: _MDItemTextContent
__ CoreSpotlight: _MDItemThoroughfare
__ CoreSpotlight: _MDItemURL
__ CoreSpotlight: _MDQueryResultRelevance
__ CoreSpotlight: _OBJC_CLASS_$_CSPerson
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchQuery
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchQueryContext
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableItem
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableItemAttributeSet
__ CoreSuggestions: _OBJC_CLASS_$_SGRealtimeContact
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: _kCTSIMSupportSIMStatusReady
__ CoreText: _CTFontCopySystemUIFontExcessiveLineHeightCharacterSet
__ CoreText: _CTFontGetBoundingRectsForGlyphs
__ CoreText: _CTFontGetLanguageAwareOutsets
__ EmojiKit: _OBJC_CLASS_$_EMKLayoutManager
__ EmojiKit: _OBJC_CLASS_$_EMKTextView
__ EmojiKit: _OBJC_METACLASS_$_EMKLayoutManager
__ EmojiKit: _OBJC_METACLASS_$_EMKTextView
__ FTClientServices: _OBJC_CLASS_$_FTCServiceAvailabilityCenter
__ FTServices: _OBJC_CLASS_$_FTDeviceSupport
__ FTServices: _OBJC_CLASS_$_FTServerBag
__ FTServices: __FTAreIDsEquivalent
__ Foundation: _NSAllMapTableValues
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSFileModificationDate
__ Foundation: _NSFileSize
__ Foundation: _NSFileType
__ Foundation: _NSFileTypeDirectory
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFileSizeDescription
__ Foundation: _NSLog
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSProcessInfoThermalStateDidChangeNotification
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromRect
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUnionRange
__ Foundation: _NSUserActivityTypeBrowsingWeb
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSByteCountFormatter
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFileWrapper
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUserActivity
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSDateFormatter
__ Foundation: _OBJC_METACLASS_$_NSProxy
__ IDS: _IDSCopyIDForEmailAddress
__ IDS: _IDSCopyIDForPhoneNumber
__ IDS: _IDSServiceNameCalling
__ IDS: _IDSServiceNameFaceTime
__ IDS: _IDSServiceNameScreenSharing
__ IDS: _IDSServiceNameiMessage
__ IDS: _OBJC_CLASS_$_IDSBatchIDQueryController
__ IDS: _OBJC_CLASS_$_IDSIDQueryController
__ IDS: _OBJC_CLASS_$_IDSServerBag
__ IMCore: _ExtractURLQueries
__ IMCore: _FZServicePropertyEmailDomains
__ IMCore: _IMAccountAliasesChangedNotification
__ IMCore: _IMAccountControllerOperationalAccountsChangedNotification
__ IMCore: _IMAccountLoginStatusChangedNotification
__ IMCore: _IMAccountRegistrationFailedAlertActionButtonKey
__ IMCore: _IMAccountRegistrationFailedAlertActionKey
__ IMCore: _IMAccountRegistrationFailedAlertActionTypeKey
__ IMCore: _IMAccountRegistrationFailedAlertActionURLKey
__ IMCore: _IMAccountRegistrationStatusChangedNotification
__ IMCore: _IMAnimatedEmojiAttributeName
__ IMCore: _IMAttachmentCharacterString
__ IMCore: _IMBalloonPluginIconsUpdatedNotification
__ IMCore: _IMBalloonPluginManagerInstalledAppsChangedNotification
__ IMCore: _IMBalloonPluginVersionUndefined
__ IMCore: _IMBreadcrumbCharacterString
__ IMCore: _IMBreadcrumbTextMarkerAttributeName
__ IMCore: _IMBreadcrumbTextOptionFlags
__ IMCore: _IMCanonicalizeFormattedString
__ IMCore: _IMChatAllowedByScreenTimeChangedNotification
__ IMCore: _IMChatCalculateServiceForSendingNewComposeMaybeForce
__ IMCore: _IMChatConnectivityChangedNotification
__ IMCore: _IMChatDisplayNameChangedNotification
__ IMCore: _IMChatEngroupFinishedUpdatingNotification
__ IMCore: _IMChatGroupPhotoChangedNotification
__ IMCore: _IMChatIsFilteredChangedNotification
__ IMCore: _IMChatItemsDidChangeNotification
__ IMCore: _IMChatItemsInserted
__ IMCore: _IMChatItemsNewItems
__ IMCore: _IMChatItemsOldItems
__ IMCore: _IMChatItemsRegenerate
__ IMCore: _IMChatItemsReload
__ IMCore: _IMChatItemsRemoved
__ IMCore: _IMChatJoinStateDidChangeNotification
__ IMCore: _IMChatLastAddressedHandleChangedNotification
__ IMCore: _IMChatMessageReceivedNotification
__ IMCore: _IMChatMessageSendFailedNotification
__ IMCore: _IMChatMultiWayMessagesConversationUUID
__ IMCore: _IMChatMultiWayStateChangedNotification
__ IMCore: _IMChatMuteDidChangeNotification
__ IMCore: _IMChatParticipantsDidChangeNotification
__ IMCore: _IMChatPreviouslyBlackholedChatHasBeenLoaded
__ IMCore: _IMChatPropertiesChangedNotification
__ IMCore: _IMChatPurgedAttachmentsDownloadBatchCompleteNotification
__ IMCore: _IMChatPurgedAttachmentsDownloadCompleteNotification
__ IMCore: _IMChatRegistryChatMarkedForAutoDonatingChangedNotification
__ IMCore: _IMChatRegistryContinuityURLKey
__ IMCore: _IMChatRegistryDidLoadIsRefreshKey
__ IMCore: _IMChatRegistryDidLoadNotification
__ IMCore: _IMChatRegistryDidRegisterChatNotification
__ IMCore: _IMChatRegistryDidRemergeChatsNotification
__ IMCore: _IMChatRegistryDidUnregisterChatNotification
__ IMCore: _IMChatRegistryLastMessageLoadedNotification
__ IMCore: _IMChatRegistryMessageSentNotification
__ IMCore: _IMChatRegistryWillRemergeChatsNotification
__ IMCore: _IMChatRegistryWillUnregisterChatNotification
__ IMCore: _IMChatSendingServiceChangedNotification
__ IMCore: _IMChatUnreadCountChangedNotification
__ IMCore: _IMChatValueKey
__ IMCore: _IMChatWatermarkDidUpdateNotification
__ IMCore: _IMCloudKitHooksResultSuccessUserInfoKey
__ IMCore: _IMCloudKitHooksSetEnabledReturned
__ IMCore: _IMCloudKitHooksValuesChanged
__ IMCore: _IMCoreMomentShareURLForMessage
__ IMCore: _IMCreateSuperFormatStringByAttachingMessageParts
__ IMCore: _IMDDScanAttributedStringWithContext
__ IMCore: _IMDaemonDidConnectNotification
__ IMCore: _IMDaemonDidDisconnectNotification
__ IMCore: _IMDowntimeStateChangedForBundleID
__ IMCore: _IMDowntimeStateChangedNotification
__ IMCore: _IMEmotePrefixes
__ IMCore: _IMFMFSessionActiveDeviceChangedNotification
__ IMCore: _IMFMFSessionLocationReceivedNotification
__ IMCore: _IMFMFSessionRelationshipStatusDidChangeNotification
__ IMCore: _IMFileLocationTrimFileName
__ IMCore: _IMFileTransferGUIDAttributeName
__ IMCore: _IMFileTransferUpdatedNotification
__ IMCore: _IMFindExistingChatForAddresses
__ IMCore: _IMFormattedDisplayStringForID
__ IMCore: _IMFormattedDisplayStringForIDInAddressBook
__ IMCore: _IMFormattedDisplayStringForNumber
__ IMCore: _IMGetAppBoolForKey
__ IMCore: _IMGetAssertionFailureHandler
__ IMCore: _IMGetCachedDomainBoolForKey
__ IMCore: _IMGetCachedDomainBoolForKeyWithDefaultValue
__ IMCore: _IMGetCachedDomainIntForKeyWithDefaultValue
__ IMCore: _IMGetDomainBoolForKey
__ IMCore: _IMGetDomainValueForKey
__ IMCore: _IMHandleAvailabilityChangedNotification
__ IMCore: _IMHandleAvailabilityDaemonDisconnectedNotification
__ IMCore: _IMHandleAvailabilityInvitationReceivedNotification
__ IMCore: _IMHandleAvailabilityStateChangedNotification
__ IMCore: _IMIndexesFromOrderedCollectionDifference
__ IMCore: _IMInlineReplyChatItemsDidChangeNotification
__ IMCore: _IMInternationalForPhoneNumberWithOptions
__ IMCore: _IMLinkAttributeName
__ IMCore: _IMLogBacktrace
__ IMCore: _IMLogSimulateCrashForException
__ IMCore: _IMLogSimulateCrashForProcess
__ IMCore: _IMMMSPartCanBeSent
__ IMCore: _IMMomentShareCacheDidChangeNotification
__ IMCore: _IMMomentShareCacheErrorIsPermanent
__ IMCore: _IMMomentShareCacheNotificationURLStringsUserInfoKey
__ IMCore: _IMNicknameControllerDidLoadNotification
__ IMCore: _IMNicknameDidChangeNotification
__ IMCore: _IMNormalizeFormattedString
__ IMCore: _IMNormalizedPhoneNumberForCFPhoneNumberRef
__ IMCore: _IMNormalizedPhoneNumberForPhoneNumber
__ IMCore: _IMOSLoggingEnabled
__ IMCore: _IMPayloadDidLoadContent
__ IMCore: _IMPayloadNeedsResizing
__ IMCore: _IMPhoneNumberRefCopyForPhoneNumber
__ IMCore: _IMPhotoSharingAttributeName
__ IMCore: _IMPinnedConversationsControllerPinningUpdateReasonContextMenu
__ IMCore: _IMPinnedConversationsControllerPinningUpdateReasonDragAndDrop
__ IMCore: _IMPinnedConversationsControllerPinningUpdateReasonOnboarding
__ IMCore: _IMPinnedConversationsControllerPinningUpdateReasonPinEditMode
__ IMCore: _IMPinnedConversationsControllerPinningUpdateReasonSwipeAction
__ IMCore: _IMPinnedConversationsDidChangeNotification
__ IMCore: _IMPreferredAccountForService
__ IMCore: _IMPreferredSendingAccountForAddressesWithFallbackService
__ IMCore: _IMResetCachedCarrierSettings
__ IMCore: _IMResetCachedUserSettings
__ IMCore: _IMSPISendMessageWithAttachmentsFromSubscriptionIdentifier
__ IMCore: _IMServiceDefaultsChangedNotification
__ IMCore: _IMServiceNotificationActiveAccountChangedNotification
__ IMCore: _IMSetDomainBoolForKey
__ IMCore: _IMSetDomainValueForKey
__ IMCore: _IMSharedDowntimeController
__ IMCore: _IMStringIsBusinessID
__ IMCore: _IMStringIsEmail
__ IMCore: _IMStringIsEmergencyPhoneNumber
__ IMCore: _IMStringIsEmpty
__ IMCore: _IMStringIsPhoneNumber
__ IMCore: _IMStripFormattingFromAddress
__ IMCore: _IMStripLoginID
__ IMCore: _IMTranscriptChatItemEqual
__ IMCore: _IMWeakLinkClass
__ IMCore: _IMWeakLinkSymbol
__ IMCore: _OBJC_CLASS_$_IMAccount
__ IMCore: _OBJC_CLASS_$_IMAccountController
__ IMCore: _OBJC_CLASS_$_IMAggregateAcknowledgmentChatItem
__ IMCore: _OBJC_CLASS_$_IMAggregateAttachmentMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMAggregateMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMAnimatedEmojiMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMAssociatedStickerChatItem
__ IMCore: _OBJC_CLASS_$_IMAttachmentMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMAudioMessageChatItem
__ IMCore: _OBJC_CLASS_$_IMBalloonAppExtension
__ IMCore: _OBJC_CLASS_$_IMBalloonBrowserPlugin
__ IMCore: _OBJC_CLASS_$_IMBalloonPlugin
__ IMCore: _OBJC_CLASS_$_IMBalloonPluginDataSource
__ IMCore: _OBJC_CLASS_$_IMBalloonPluginManager
__ IMCore: _OBJC_CLASS_$_IMBlackholeChatItem
__ IMCore: _OBJC_CLASS_$_IMBlockContactChatItem
__ IMCore: _OBJC_CLASS_$_IMChat
__ IMCore: _OBJC_CLASS_$_IMChatHistoryController
__ IMCore: _OBJC_CLASS_$_IMChatRegistry
__ IMCore: _OBJC_CLASS_$_IMCloudKitEventNotificationManager
__ IMCore: _OBJC_CLASS_$_IMCloudKitHooks
__ IMCore: _OBJC_CLASS_$_IMCommSafetySummary
__ IMCore: _OBJC_CLASS_$_IMCommSafetySummaryImage
__ IMCore: _OBJC_CLASS_$_IMDDController
__ IMCore: _OBJC_CLASS_$_IMDNDList
__ IMCore: _OBJC_CLASS_$_IMDaemonController
__ IMCore: _OBJC_CLASS_$_IMDateChatItem
__ IMCore: _OBJC_CLASS_$_IMDeletedMomentShareMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMDoubleLinkedList
__ IMCore: _OBJC_CLASS_$_IMDoubleLinkedListNode
__ IMCore: _OBJC_CLASS_$_IMDowntimeController
__ IMCore: _OBJC_CLASS_$_IMEmoteMessageChatItem
__ IMCore: _OBJC_CLASS_$_IMExpirableMessageChatItem
__ IMCore: _OBJC_CLASS_$_IMExpressiveSendAsTextChatItem
__ IMCore: _OBJC_CLASS_$_IMFMFSession
__ IMCore: _OBJC_CLASS_$_IMFaceTimeUtilities
__ IMCore: _OBJC_CLASS_$_IMFileManager
__ IMCore: _OBJC_CLASS_$_IMFileTransferCenter
__ IMCore: _OBJC_CLASS_$_IMGroupActionChatItem
__ IMCore: _OBJC_CLASS_$_IMGroupTitleChangeChatItem
__ IMCore: _OBJC_CLASS_$_IMHandle
__ IMCore: _OBJC_CLASS_$_IMHandleAvailabilityManager
__ IMCore: _OBJC_CLASS_$_IMLoadMoreChatItem
__ IMCore: _OBJC_CLASS_$_IMLocatingChatItem
__ IMCore: _OBJC_CLASS_$_IMLocationShareActionChatItem
__ IMCore: _OBJC_CLASS_$_IMLocationShareOfferChatItem
__ IMCore: _OBJC_CLASS_$_IMLockdownManager
__ IMCore: _OBJC_CLASS_$_IMManualUpdater
__ IMCore: _OBJC_CLASS_$_IMMe
__ IMCore: _OBJC_CLASS_$_IMMessage
__ IMCore: _OBJC_CLASS_$_IMMessageAcknowledgmentChatItem
__ IMCore: _OBJC_CLASS_$_IMMessageActionChatItem
__ IMCore: _OBJC_CLASS_$_IMMessageAttributionChatItem
__ IMCore: _OBJC_CLASS_$_IMMessageChatItem
__ IMCore: _OBJC_CLASS_$_IMMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMMessagePartHighlightChatItem
__ IMCore: _OBJC_CLASS_$_IMMessageReplyCountChatItem
__ IMCore: _OBJC_CLASS_$_IMMessageStatusChatItem
__ IMCore: _OBJC_CLASS_$_IMMomentShareCache
__ IMCore: _OBJC_CLASS_$_IMMomentShareStatusChatItem
__ IMCore: _OBJC_CLASS_$_IMMultiDict
__ IMCore: _OBJC_CLASS_$_IMMutableChatContext
__ IMCore: _OBJC_CLASS_$_IMNicknameController
__ IMCore: _OBJC_CLASS_$_IMNotifyAnywayChatItem
__ IMCore: _OBJC_CLASS_$_IMNumberChangedChatItem
__ IMCore: _OBJC_CLASS_$_IMOrganicAttachmentMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMParticipantChangeChatItem
__ IMCore: _OBJC_CLASS_$_IMParticipantSubscriptionSwitchChatItem
__ IMCore: _OBJC_CLASS_$_IMPendingMomentShareMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMPhotoAttachmentStatusChatItem
__ IMCore: _OBJC_CLASS_$_IMPhotoLibraryPersistenceManager
__ IMCore: _OBJC_CLASS_$_IMPinnedConversationsController
__ IMCore: _OBJC_CLASS_$_IMPluginPayload
__ IMCore: _OBJC_CLASS_$_IMReplyContextAggregateAttachmentMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMReplyContextAggregateMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMReplyContextAttachmentMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMReplyContextDeletedMessageChatItem
__ IMCore: _OBJC_CLASS_$_IMReplyContextTextMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMReplyContextTranscriptPluginChatItem
__ IMCore: _OBJC_CLASS_$_IMReplySenderChatItem
__ IMCore: _OBJC_CLASS_$_IMReportSpamChatItem
__ IMCore: _OBJC_CLASS_$_IMSMSSpamChatItem
__ IMCore: _OBJC_CLASS_$_IMScheduledUpdater
__ IMCore: _OBJC_CLASS_$_IMSenderChatItem
__ IMCore: _OBJC_CLASS_$_IMService
__ IMCore: _OBJC_CLASS_$_IMServiceChatItem
__ IMCore: _OBJC_CLASS_$_IMServiceImpl
__ IMCore: _OBJC_CLASS_$_IMSimSwitchedChatItem
__ IMCore: _OBJC_CLASS_$_IMSuggestionsService
__ IMCore: _OBJC_CLASS_$_IMSystemMonitor
__ IMCore: _OBJC_CLASS_$_IMTUConversationChatItem
__ IMCore: _OBJC_CLASS_$_IMTextMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMTimingCollection
__ IMCore: _OBJC_CLASS_$_IMTranscriptChatItem
__ IMCore: _OBJC_CLASS_$_IMTranscriptChatItemRules
__ IMCore: _OBJC_CLASS_$_IMTranscriptLocationChatItem
__ IMCore: _OBJC_CLASS_$_IMTranscriptPluginBreadcrumbChatItem
__ IMCore: _OBJC_CLASS_$_IMTranscriptPluginChatItem
__ IMCore: _OBJC_CLASS_$_IMTranscriptPluginStatusChatItem
__ IMCore: _OBJC_CLASS_$_IMTransientMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMTypingChatItem
__ IMCore: _OBJC_CLASS_$_IMTypingPluginChatItem
__ IMCore: _OBJC_CLASS_$_IMUnavailabilityIndicatorChatItem
__ IMCore: _OBJC_CLASS_$_IMUnavailableMomentShareMessagePartChatItem
__ IMCore: _OBJC_CLASS_$_IMUnreadCountChatItem
__ IMCore: _OBJC_CLASS_$_IMUserDefaults
__ IMCore: _OBJC_CLASS_$_IMUserNotification
__ IMCore: _OBJC_CLASS_$_IMUserNotificationCenter
__ IMCore: _OBJC_CLASS_$_IMWeakReference
__ IMCore: _OBJC_METACLASS_$_IMAccount
__ IMCore: _OBJC_METACLASS_$_IMBalloonBrowserPlugin
__ IMCore: _OBJC_METACLASS_$_IMBalloonPluginDataSource
__ IMCore: _OBJC_METACLASS_$_IMChat
__ IMCore: _OBJC_METACLASS_$_IMDaemonController
__ IMCore: _OBJC_METACLASS_$_IMDoubleLinkedListNode
__ IMCore: _OBJC_METACLASS_$_IMMultiDict
__ IMCore: _OBJC_METACLASS_$_IMPluginPayload
__ IMCore: _OBJC_METACLASS_$_IMTranscriptChatItemRules
__ IMCore: _OSLogHandleForIMEventCategory
__ IMCore: _OSLogHandleForIMFoundationCategory
__ IMCore: __CreateIMMessageFromIMMessageItem
__ IMCore: __IMAlwaysLog
__ IMCore: __IMBestAccountForIMMessageItem
__ IMCore: __IMLog
__ IMCore: __IMWarn
__ IMCore: __IMWillLog
__ IMCore: _im_dispatch_after
__ IMCore: _im_main_thread
__ IMCore: _im_perform_with_task_assertion
__ IMCore: _kFZListenerCapBlackholedChatRegistry
__ IMCore: _kFZListenerCapChats
__ IMCore: _kFZListenerCapFileTransfers
__ IMCore: _kFZListenerCapIDQueries
__ IMCore: _kFZListenerCapManageStatus
__ IMCore: _kFZListenerCapMessageHistory
__ IMCore: _kFZListenerCapNotifications
__ IMCore: _kFZListenerCapOnDemandChatRegistry
__ IMCore: _kFZListenerCapSkipLastMessageLoad
__ IMCore: _kFZListenerCapTruncatedChatRegistry
__ IMCore: _kFZRegistrationFailedAlertButtonKey
__ IMCore: _kFZRegistrationFailedAlertMessageKey
__ IMCore: _kFZRegistrationFailedAlertTitleKey
__ IMCore: _kLastBlackholeReceiptPromptDate
__ IMCore: _kMessageHandshakeState
__ IMCore: _kSMSCategory
__ IMCore: _kWasAutoDetectedForSpam
__ IMCore: _kWasDetectedAsSMSSpam
__ IMCore: _kWasDetectedAsiMessageSpam
__ IMDPersistence: _IMAttachmentClassGIFOrSticker
__ IMDPersistence: _IMAttachmentClassOther
__ IMDPersistence: _IMAttachmentClassPhoto
__ IMDPersistence: _IMAttachmentClassVideo
__ IMDPersistence: _IMDAttachmentFindLargestAttachmentGUIDsForAttachmentClass
__ IMDPersistence: _IMDAttachmentFindLargestConversations
__ IMDPersistence: _IMDAttachmentFindLargestNonSyncedAttachmentGUIDs
__ IMDPersistence: _IMDAttachmentRecordDeleteAttachmentForGUID
__ IMDPersistence: _IMDAttachmentRecordEstimateSpaceTakenByAttachmentsOlderThanDays
__ IMDPersistence: _IMDAttachmentRecordGetNonSyncedAttachmentDiskSpace
__ IMDPersistence: _IMDAttachmentRecordGetPurgeableDiskSpace
__ IMDPersistence: _IMDAttachmentSpaceTakenByAttachmentClass
__ IMDPersistence: _IMDChatRecordCopyChatIdentifier
__ IMDPersistence: _IMDCopyAttachmentPersistentPath
__ IMDPersistence: _IMDMessageRecordBulkCopy
__ IMDPersistence: _IMDMessageRecordChatForMessageGUID
__ IMDPersistence: _IMDMessageRecordCopyMostRecentUseageOfAddresses
__ IMDPersistence: _IMDPersistencePerformBlock
__ IMDPersistence: __IMDChatRecordBulkCopy
__ IMSharedUI: _OBJC_CLASS_$_IMConversationListTypingIndicatorLayer
__ IMSharedUI: _OBJC_CLASS_$_IMTypingIndicatorLayer
__ IMSharedUtilities: _CKDefaultPlaySoundsKey
__ IMSharedUtilities: _IMAddressBookChangedNotification
__ IMSharedUtilities: _IMAddressBookInvalidateCacheNotification
__ IMSharedUtilities: _IMAddressBookPartialChangedNotification
__ IMSharedUtilities: _IMAddressBookPartialChangedPropertyBrand
__ IMSharedUtilities: _IMAddressBookPartialChangedPropertyBrandSquareLogo
__ IMSharedUtilities: _IMAddressBookPartialChangedPropertyBrandWideLogo
__ IMSharedUtilities: _IMAddressBookPartialChangedPropertyKey
__ IMSharedUtilities: _IMAddressBookPartialChangedPropertyName
__ IMSharedUtilities: _IMAddressBookPartialChangedUIDKey
__ IMSharedUtilities: _IMAddressBookPartialInvalidateCacheNotification
__ IMSharedUtilities: _IMAssociatedMessageDecodeGUID
__ IMSharedUtilities: _IMAttachmentFileNameAndExtension
__ IMSharedUtilities: _IMAttachmentIndexFromIMFileTransferGuid
__ IMSharedUtilities: _IMAttachmentPreviewFileURL
__ IMSharedUtilities: _IMAttachmentPreviewFileURLFromURLWithSuffix
__ IMSharedUtilities: _IMAttachmentPreviewMetadataFileURL
__ IMSharedUtilities: _IMBalloonBundleIdentifierBusiness
__ IMSharedUtilities: _IMBalloonExtensionIDWithSuffix
__ IMSharedUtilities: _IMBalloonPluginIdentifierActivity
__ IMSharedUtilities: _IMBalloonPluginIdentifierAnimojiCameraApp
__ IMSharedUtilities: _IMBalloonPluginIdentifierAnimojiStickers
__ IMSharedUtilities: _IMBalloonPluginIdentifierAppStore
__ IMSharedUtilities: _IMBalloonPluginIdentifierCamera
__ IMSharedUtilities: _IMBalloonPluginIdentifierDT
__ IMSharedUtilities: _IMBalloonPluginIdentifierFilters
__ IMSharedUtilities: _IMBalloonPluginIdentifierFunCam
__ IMSharedUtilities: _IMBalloonPluginIdentifierGameCenter
__ IMSharedUtilities: _IMBalloonPluginIdentifierHandwriting
__ IMSharedUtilities: _IMBalloonPluginIdentifierJellyFish
__ IMSharedUtilities: _IMBalloonPluginIdentifierMessageExtension
__ IMSharedUtilities: _IMBalloonPluginIdentifierMusic
__ IMSharedUtilities: _IMBalloonPluginIdentifierPhotos
__ IMSharedUtilities: _IMBalloonPluginIdentifierPhotosExtension
__ IMSharedUtilities: _IMBalloonPluginIdentifierRecent
__ IMSharedUtilities: _IMBalloonPluginIdentifierRichLinks
__ IMSharedUtilities: _IMBalloonPluginIdentifierSearchToShare
__ IMSharedUtilities: _IMBalloonPluginIdentifierShapes
__ IMSharedUtilities: _IMBalloonPluginIdentifierSurf
__ IMSharedUtilities: _IMBalloonPluginIdentifierSurfDeprecated
__ IMSharedUtilities: _IMBalloonPluginIdentifierText
__ IMSharedUtilities: _IMCachesDirectoryURL
__ IMSharedUtilities: _IMChatCanonicalIDSIDsForAddress
__ IMSharedUtilities: _IMChatPropertyGroupPhotoGUID
__ IMSharedUtilities: _IMChatPropertyIsFiltered
__ IMSharedUtilities: _IMClearDisplayKeepMessagesSetting
__ IMSharedUtilities: _IMClientPreviewConstraints
__ IMSharedUtilities: _IMClientPreviewStickerConstraints
__ IMSharedUtilities: _IMClientTelemetryLogHandle
__ IMSharedUtilities: _IMCloudKitDefinesDomain
__ IMSharedUtilities: _IMCloudKitMetricAccountRepairComplete
__ IMSharedUtilities: _IMCloudKitMetricWelcomeScreenEnabled
__ IMSharedUtilities: _IMCloudKitMetricWelcomeScreenEnabledHSA2
__ IMSharedUtilities: _IMCloudKitMetricWelcomeScreenShown
__ IMSharedUtilities: _IMCloudKitRampStateFeaturePromoted
__ IMSharedUtilities: _IMContactStoreBatchLoadCompleteNotification
__ IMSharedUtilities: _IMCreatePNGImageDataFromCGImageRef
__ IMSharedUtilities: _IMCreateThumbnailWithImageSourceAtIndexForMaxDimension
__ IMSharedUtilities: _IMDeviceIsGreenTea
__ IMSharedUtilities: _IMEnableInlineReplyGlyph
__ IMSharedUtilities: _IMEnableMAIDGroups
__ IMSharedUtilities: _IMEnableMentions
__ IMSharedUtilities: _IMEnableModernTranscript
__ IMSharedUtilities: _IMEnableTranscriptChromelessNavBar
__ IMSharedUtilities: _IMEnableTranscriptClickyOrb
__ IMSharedUtilities: _IMExtensionPayloadAdamIDIKey
__ IMSharedUtilities: _IMExtensionPayloadAppIconKey
__ IMSharedUtilities: _IMExtensionPayloadAppNameKey
__ IMSharedUtilities: _IMExtensionPayloadUnarchivingClasses
__ IMSharedUtilities: _IMExtensionRemoteConnectionInterruptedBundleIdentifier
__ IMSharedUtilities: _IMExtensionRemoteConnectionWasInterrupted
__ IMSharedUtilities: _IMFileTransferAVTranscodeOptionAppendedVideo
__ IMSharedUtilities: _IMFileTransferAVTranscodeOptionAssetURI
__ IMSharedUtilities: _IMFileTransferAVTranscodeOptionDuration
__ IMSharedUtilities: _IMFileTransferAVTranscodeOptionEndTime
__ IMSharedUtilities: _IMFileTransferAVTranscodeOptionIsAnimojiV2
__ IMSharedUtilities: _IMFileTransferAVTranscodeOptionIsAutoloopVideo
__ IMSharedUtilities: _IMFileTransferAVTranscodeOptionIsOpusAudioMessage
__ IMSharedUtilities: _IMFileTransferAVTranscodeOptionMetadataDictionary
__ IMSharedUtilities: _IMFileTransferAVTranscodeOptionStartTime
__ IMSharedUtilities: _IMFileTransferAttributionInfoAccessibilityLabelKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoAdamIDKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoAppNameKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoBundleIDKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoMomentShareURLKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoPHAssetUUID
__ IMSharedUtilities: _IMFileTransferAttributionInfoPreviewGenerationConstraintsKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoPreviewGenerationSizeHeightKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoPreviewGenerationSizeWidthKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoPreviewGenerationSucceededKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoTransferIndex
__ IMSharedUtilities: _IMFileTransferAttributionInfoURLKey
__ IMSharedUtilities: _IMFileTransferGuidIsLegacyGuid
__ IMSharedUtilities: _IMFileTransferGuidWithAssociatedMessageGUIDAndIndex
__ IMSharedUtilities: _IMFileURLIsActuallyAnimated
__ IMSharedUtilities: _IMGetUserIgnoreLogoutIntent
__ IMSharedUtilities: _IMGetUserLoginIntent
__ IMSharedUtilities: _IMGroupNameLengthLimit
__ IMSharedUtilities: _IMImpactEffectID
__ IMSharedUtilities: _IMImpactEffectID_InvisibleInk
__ IMSharedUtilities: _IMIsHEVCWithAlphaVideo
__ IMSharedUtilities: _IMIsHEVCWithAlphaVideoFromData
__ IMSharedUtilities: _IMIsRunningInMessagesComposeViewService
__ IMSharedUtilities: _IMIsRunningInMessagesExtension
__ IMSharedUtilities: _IMIsRunningInScreenshotTesting_IsolatedTranscriptUI
__ IMSharedUtilities: _IMIsRunningInUnitTesting
__ IMSharedUtilities: _IMIsSupportedUTIType
__ IMSharedUtilities: _IMLegacyCalculateFileSizeForPath
__ IMSharedUtilities: _IMLogHandleForCategory
__ IMSharedUtilities: _IMLookUpExtensionInCache
__ IMSharedUtilities: _IMMentionAttributeName
__ IMSharedUtilities: _IMMentionAttributeNameNeedsAnimation
__ IMSharedUtilities: _IMMentionAutomaticConfirmedMention
__ IMSharedUtilities: _IMMentionConfirmedMention
__ IMSharedUtilities: _IMMentionOriginalTextMention
__ IMSharedUtilities: _IMMentionOverrideRemoveMention
__ IMSharedUtilities: _IMMentionUnconfirmedDirectMention
__ IMSharedUtilities: _IMMessageCreateThreadIdentifierWithOriginatorGUID
__ IMSharedUtilities: _IMMessageGuidFromIMFileTransferGuid
__ IMSharedUtilities: _IMMessageItemExpireStateExpiringDuration
__ IMSharedUtilities: _IMMessagePayloadProviderExtensionPointName
__ IMSharedUtilities: _IMMessagePayloadProviderHighMemoryExtensionPointName
__ IMSharedUtilities: _IMMessageSoundPlayReceivedAckSound
__ IMSharedUtilities: _IMMetricsCollectorEventAppStoreLaunchFromAttributionItem
__ IMSharedUtilities: _IMMetricsCollectorEventAppStoreLaunchFromBalloon
__ IMSharedUtilities: _IMMetricsCollectorEventAppStoreLaunchFromStickerDetail
__ IMSharedUtilities: _IMMetricsCollectorEventAppStoreLaunchFromSwitcherIcon
__ IMSharedUtilities: _IMMetricsCollectorEventAppStoreLaunchFromURL
__ IMSharedUtilities: _IMMetricsCollectorEventAudioMessageRecordingStarted
__ IMSharedUtilities: _IMMetricsCollectorEventAudioMessageSent
__ IMSharedUtilities: _IMMetricsCollectorEventAudioMessageSentDuration
__ IMSharedUtilities: _IMMetricsCollectorEventDSDSLineSwitch
__ IMSharedUtilities: _IMMetricsCollectorEventDetailsViewLaunched
__ IMSharedUtilities: _IMMetricsCollectorEventEditProfile
__ IMSharedUtilities: _IMMetricsCollectorEventFSMSentWithInvocation
__ IMSharedUtilities: _IMMetricsCollectorEventFilteringAction
__ IMSharedUtilities: _IMMetricsCollectorEventInlineReplySent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaCountSentPerMessage
__ IMSharedUtilities: _IMMetricsCollectorEventMediaPhotosTypesSent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaSent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaSentConversationParticipantCount
__ IMSharedUtilities: _IMMetricsCollectorEventMediaSentFromSourceEntryViewOrOther
__ IMSharedUtilities: _IMMetricsCollectorEventMediaSentFromSourceHashtagImages
__ IMSharedUtilities: _IMMetricsCollectorEventMediaSentFromSourceKey
__ IMSharedUtilities: _IMMetricsCollectorEventMediaSentFromSourceOtheriMessageApp
__ IMSharedUtilities: _IMMetricsCollectorEventMediaSentFromSourcePhotosAssetExplorer
__ IMSharedUtilities: _IMMetricsCollectorEventMediaSentFromSourceShareSheetOtherApp
__ IMSharedUtilities: _IMMetricsCollectorEventMediaSentFromSourceShareSheetPhotos
__ IMSharedUtilities: _IMMetricsCollectorEventMediaSentFromSourceShareSheetSafari
__ IMSharedUtilities: _IMMetricsCollectorEventMediaTypeAnimatedPhotoSent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaTypeAudioSent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaTypeAutoloopVideoSent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaTypeContactSent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaTypeLocationSent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaTypeOtherSent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaTypePhotoSent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaTypeStickerSent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaTypeVideoSent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaTypeWalletSent
__ IMSharedUtilities: _IMMetricsCollectorEventMediaTypeWatchfaceSent
__ IMSharedUtilities: _IMMetricsCollectorEventOptionsButtonTapped
__ IMSharedUtilities: _IMMetricsCollectorEventPhotoStack
__ IMSharedUtilities: _IMMetricsCollectorEventPhotoStackActionButtonSelected
__ IMSharedUtilities: _IMMetricsCollectorEventPhotoStackDisplayed
__ IMSharedUtilities: _IMMetricsCollectorEventPhotoStackEventNameKey
__ IMSharedUtilities: _IMMetricsCollectorEventPhotoStackMainAssetIndexKey
__ IMSharedUtilities: _IMMetricsCollectorEventPhotoStackMainAssetMediaTypeKey
__ IMSharedUtilities: _IMMetricsCollectorEventPhotoStackMediaCountKey
__ IMSharedUtilities: _IMMetricsCollectorEventPhotoStackRecipientCountKey
__ IMSharedUtilities: _IMMetricsCollectorEventPhotoStackSaveButtonSelected
__ IMSharedUtilities: _IMMetricsCollectorEventPhotoStackScrolled
__ IMSharedUtilities: _IMMetricsCollectorEventPhotoStackSelected
__ IMSharedUtilities: _IMMetricsCollectorEventPhotoStackTranscriptOrientationKey
__ IMSharedUtilities: _IMMetricsCollectorEventPreviewCacheAttempt
__ IMSharedUtilities: _IMMetricsCollectorEventPreviewCacheMiss
__ IMSharedUtilities: _IMMetricsCollectorEventQuickLookLaunched
__ IMSharedUtilities: _IMMetricsCollectorEventSOSPhoneSMSFailed
__ IMSharedUtilities: _IMMetricsCollectorEventSOSPhoneSMSSent
__ IMSharedUtilities: _IMMetricsCollectorEventSaveDialogAllAlreadySavedKey
__ IMSharedUtilities: _IMMetricsCollectorEventSaveDialogOptionCancel
__ IMSharedUtilities: _IMMetricsCollectorEventSaveDialogOptionDuplicate
__ IMSharedUtilities: _IMMetricsCollectorEventSaveDialogOptionKey
__ IMSharedUtilities: _IMMetricsCollectorEventSaveDialogOptionSaveSome
__ IMSharedUtilities: _IMMetricsCollectorEventSaveDialogOptionSelected
__ IMSharedUtilities: _IMMetricsCollectorEventSaveDialogOptionShowInPhotos
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachment
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentCountKey
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentPhotosCountKey
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentShareSheet
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentSourceAttachmentViewer
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentSourceFullscreenBalloonInterfaceAction
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentSourceKey
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentSourceLegacyExport
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentSourcePreviewAction
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentSourcePreviewSaveButton
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentSourceStackGridSaveButton
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentSourceTranscriptContextMenu
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentSourceTranscriptSaveButton
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentSourceUnknown
__ IMSharedUtilities: _IMMetricsCollectorEventSavedAttachmentVideosCountKey
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppSentAnimatedAttachment
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppSentAnimatedSticker
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppSentAppleMusic
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppSentAttachment
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppSentFirstMessage
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppSentHashImage
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppSentPhoto
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppSentRecent
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppSentStaticAttachment
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppSentStaticSticker
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppSentUpdateMessageforSession
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppStickerSentWithDrag
__ IMSharedUtilities: _IMMetricsCollectorEventiMessageAppStickerSentWithEntryfield
__ IMSharedUtilities: _IMMetricsCollectorSensitiveImageSent
__ IMSharedUtilities: _IMMetricsCollectorSensitiveImageViewed
__ IMSharedUtilities: _IMNormalizePhoneNumber
__ IMSharedUtilities: _IMPassKitPreviewBackgroundColorKey
__ IMSharedUtilities: _IMPassKitPreviewBackgroundImageKey
__ IMSharedUtilities: _IMPassKitPreviewColorAlphaComponentKey
__ IMSharedUtilities: _IMPassKitPreviewColorBlueComponentKey
__ IMSharedUtilities: _IMPassKitPreviewColorGreenComponentKey
__ IMSharedUtilities: _IMPassKitPreviewColorRedComponentKey
__ IMSharedUtilities: _IMPassKitPreviewImageKey
__ IMSharedUtilities: _IMPassKitPreviewPrimaryTextKey
__ IMSharedUtilities: _IMPassKitPreviewSecondaryTextKey
__ IMSharedUtilities: _IMPassKitPreviewTertiaryTextKey
__ IMSharedUtilities: _IMPassKitPreviewTextColorKey
__ IMSharedUtilities: _IMPassKitPreviewTextTextKey
__ IMSharedUtilities: _IMPluginSnapshotCachesFileURL
__ IMSharedUtilities: _IMPluginSnapshotExistsInCache
__ IMSharedUtilities: _IMPreviewCachesDirectoryWithAttachmentURL
__ IMSharedUtilities: _IMPreviewConstraintsEqualToConstraints
__ IMSharedUtilities: _IMPreviewConstraintsFromDictionary
__ IMSharedUtilities: _IMPreviewConstraintsZero
__ IMSharedUtilities: _IMPreviewExtension
__ IMSharedUtilities: _IMPreviewGenerationErrorDomain
__ IMSharedUtilities: _IMResumeToLastSeenMessage
__ IMSharedUtilities: _IMSMSDirectoryURL
__ IMSharedUtilities: _IMSSMSReportSpamShouldShowReportMessagesForItems
__ IMSharedUtilities: _IMSetUserIgnoreLogoutIntent
__ IMSharedUtilities: _IMSetUserLoginIntent
__ IMSharedUtilities: _IMSharedHelperAlwaysShowNicknameBanners
__ IMSharedUtilities: _IMSharedHelperBusinessAllowlist
__ IMSharedUtilities: _IMSharedHelperCombinedPluginPayloadDictionaryDataWithAttachmentURLs
__ IMSharedUtilities: _IMSharedHelperDeviceHasMultipleActiveSubscriptions
__ IMSharedUtilities: _IMSharedHelperDeviceHasMultipleSubscriptions
__ IMSharedUtilities: _IMSharedHelperDeviceHasMultipleSubscriptionsWithAtLeastOneActive
__ IMSharedUtilities: _IMSharedHelperDeviceIsiPad
__ IMSharedUtilities: _IMSharedHelperDeviceIsiPod
__ IMSharedUtilities: _IMSharedHelperEnsureDirectoryExistsAtPath
__ IMSharedUtilities: _IMSharedHelperIsOlderDevice
__ IMSharedUtilities: _IMSharedHelperMD5HashOfFileAtPath
__ IMSharedUtilities: _IMSharedHelperMessagesRootFolderPath
__ IMSharedUtilities: _IMSharedHelperNickNameEnabled
__ IMSharedUtilities: _IMSharedHelperTurnOnUNUserNotificationsInIMDPersistence
__ IMSharedUtilities: _IMSharedUtilitiesFrameworkBundle
__ IMSharedUtilities: _IMShouldDisplayKeepMessagesSetting
__ IMSharedUtilities: _IMShouldHandleInternalPhishingAttempts
__ IMSharedUtilities: _IMShowNewDetailsView
__ IMSharedUtilities: _IMStickerUserInfoAssociatedLayoutIntentKey
__ IMSharedUtilities: _IMStickerUserInfoLayoutIntentKey
__ IMSharedUtilities: _IMStickerUserInfoParentPreviewWidthKey
__ IMSharedUtilities: _IMStickerUserInfoRotationKey
__ IMSharedUtilities: _IMStickerUserInfoScaleKey
__ IMSharedUtilities: _IMStickerUserInfoStickerBIDKey
__ IMSharedUtilities: _IMStickerUserInfoStickerGUIDKey
__ IMSharedUtilities: _IMStickerUserInfoStickerHashKey
__ IMSharedUtilities: _IMStickerUserInfoStickerPackGUIDKey
__ IMSharedUtilities: _IMStickerUserInfoStickerRecipeKey
__ IMSharedUtilities: _IMStickerUserInfoXScalarKey
__ IMSharedUtilities: _IMStickerUserInfoYScalarKey
__ IMSharedUtilities: _IMSupportedAnimatedImageUTTypes
__ IMSharedUtilities: _IMSupportsASTC
__ IMSharedUtilities: _IMUTITypeForFilename
__ IMSharedUtilities: _IMUTITypeIsPhoto
__ IMSharedUtilities: _IMUTITypeIsVideo
__ IMSharedUtilities: _IMUTTypeIsSupportedAnimatedImage
__ IMSharedUtilities: _IMUTTypeIsWatchface
__ IMSharedUtilities: _IMUnlocalizedInternalPhishingWarningString
__ IMSharedUtilities: _IMUserLoginIntentChanged
__ IMSharedUtilities: _IMiMessageAppsHostExtensionPointName
__ IMSharedUtilities: _IMiMessageAppsViewServiceIdentifier
__ IMSharedUtilities: _OBJC_CLASS_$_IMAppleStoreHelper
__ IMSharedUtilities: _OBJC_CLASS_$_IMAssociatedMessageItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMAttachmentBlastdoor
__ IMSharedUtilities: _OBJC_CLASS_$_IMAttachmentUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMAvailabilityInvitationManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMBlockListController
__ IMSharedUtilities: _OBJC_CLASS_$_IMBrand
__ IMSharedUtilities: _OBJC_CLASS_$_IMCTSMSUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMCTSubscriptionUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMCommSafetyRequestsManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMCommSafetySettingsManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMContactStore
__ IMSharedUtilities: _OBJC_CLASS_$_IMCoreSpotlightUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMDPLogsCollector
__ IMSharedUtilities: _OBJC_CLASS_$_IMDefaults
__ IMSharedUtilities: _OBJC_CLASS_$_IMDeviceUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMDirectoryContentsSizes
__ IMSharedUtilities: _OBJC_CLASS_$_IMFeatureFlags
__ IMSharedUtilities: _OBJC_CLASS_$_IMFileTransfer
__ IMSharedUtilities: _OBJC_CLASS_$_IMImageUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMLocationShareStatusChangeItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMMeCardSharingStateController
__ IMSharedUtilities: _OBJC_CLASS_$_IMMessageDirectoryContents
__ IMSharedUtilities: _OBJC_CLASS_$_IMMessageItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMMetricsCollector
__ IMSharedUtilities: _OBJC_CLASS_$_IMRecentItemsList
__ IMSharedUtilities: _OBJC_CLASS_$_IMSenderIdentityManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedWithYouManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMSpamFilterHelper
__ IMSharedUtilities: _OBJC_CLASS_$_IMStateCaptureAssistant
__ IMSharedUtilities: _OBJC_CLASS_$_IMSticker
__ IMSharedUtilities: _OBJC_CLASS_$_IMUnitTestRunner
__ IMSharedUtilities: _kIMRecentItemsListUpdatedNotification
__ IMSharedUtilities: _kIMUTTypeHEIC
__ IMTranscoding: _OBJC_CLASS_$_IMTranscodeController
__ IOSurface: _IOSurfaceCreateXPCObject
__ IOSurface: _IOSurfaceGetBaseAddress
__ IOSurface: _IOSurfaceLock
__ IOSurface: _IOSurfaceLookupFromXPCObject
__ IOSurface: _IOSurfaceUnlock
__ IconServices: _OBJC_CLASS_$_ISIcon
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ IconServices: _kISImageDescriptorMessagesExtensionLauncher
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCopyTypeIdentifiers
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateThumbnailAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _CGImageSourceGetType
__ ImageIO: _CGImageSourceGetTypeWithURL
__ ImageIO: _kCGImagePropertyAPNGDelayTime
__ ImageIO: _kCGImagePropertyAPNGUnclampedDelayTime
__ ImageIO: _kCGImagePropertyASTCBlockSize
__ ImageIO: _kCGImagePropertyASTCEncoder
__ ImageIO: _kCGImagePropertyASTCPreTwiddle
__ ImageIO: _kCGImagePropertyDPIHeight
__ ImageIO: _kCGImagePropertyDPIWidth
__ ImageIO: _kCGImagePropertyEncoder
__ ImageIO: _kCGImagePropertyGIFDelayTime
__ ImageIO: _kCGImagePropertyGIFDictionary
__ ImageIO: _kCGImagePropertyGIFUnclampedDelayTime
__ ImageIO: _kCGImagePropertyHEICSDelayTime
__ ImageIO: _kCGImagePropertyHEICSDictionary
__ ImageIO: _kCGImagePropertyHEICSUnclampedDelayTime
__ ImageIO: _kCGImagePropertyOrientation
__ ImageIO: _kCGImagePropertyPNGBandCount
__ ImageIO: _kCGImagePropertyPNGCompressionFilter
__ ImageIO: _kCGImagePropertyPNGDictionary
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImagePropertyTIFFDictionary
__ ImageIO: _kCGImagePropertyWebPDelayTime
__ ImageIO: _kCGImagePropertyWebPDictionary
__ ImageIO: _kCGImagePropertyWebPUnclampedDelayTime
__ ImageIO: _kCGImageSourceCreateThumbnailFromImageAlways
__ ImageIO: _kCGImageSourceCreateThumbnailWithTransform
__ ImageIO: _kCGImageSourceShouldCache
__ ImageIO: _kCGImageSourceSkipMetadata
__ ImageIO: _kCGImageSourceThumbnailMaxPixelSize
__ ImageIO: _kCGImageSourceUseHardwareAcceleration
__ Intents: _OBJC_CLASS_$_INDeferredLocalizedString
__ Intents: _OBJC_CLASS_$_INFocusStatusCenter
__ Intents: _OBJC_CLASS_$_INPreferences
__ Intents: _OBJC_CLASS_$_INRequestPaymentIntent
__ Intents: _OBJC_CLASS_$_INSendMessageIntent
__ Intents: _OBJC_CLASS_$_INSendPaymentIntent
__ LinkPresentation: _OBJC_CLASS_$_LPAppleTVMetadata
__ LinkPresentation: _OBJC_CLASS_$_LPCaptionBarPresentationProperties
__ LinkPresentation: _OBJC_CLASS_$_LPFileMetadata
__ LinkPresentation: _OBJC_CLASS_$_LPImage
__ LinkPresentation: _OBJC_CLASS_$_LPImagePresentationProperties
__ LinkPresentation: _OBJC_CLASS_$_LPLinkMetadata
__ LinkPresentation: _OBJC_CLASS_$_LPLinkView
__ LinkPresentation: _OBJC_CLASS_$_LPSourceApplicationMetadata
__ LinkPresentation: _OBJC_CLASS_$_LPWebLinkPresentationProperties
__ LinkPresentation: _OBJC_CLASS_$_LPiTunesMediaPodcastEpisodeMetadata
__ LinkPresentation: _OBJC_CLASS_$_LPiTunesMediaSongMetadata
__ Marco: _MarcoLogMadridEvent
__ Marco: _MarcoLogMadridLevel
__ Marco: _MarcoLogMadridLevelCF_V
__ Marco: _MarcoShouldLogMadridLevel
__ Marco: _MarcoShouldLogMadridLevelCF
__ MessageUI: _OBJC_CLASS_$_MFRecipientTableViewCell
__ MessageUI: _OBJC_IVAR_$_MFRecipientTableViewCell._recipient
__ MessageUI: _OBJC_METACLASS_$_MFRecipientTableViewCell
__ MessagesSupport: _OBJC_CLASS_$_CKInboxItem
__ MessagesSupport: _OBJC_CLASS_$_CKInboxModel
__ MessagesSupport: _OBJC_CLASS_$_CKInboxSection
__ MessagesSupport: _OBJC_CLASS_$_CKTranscriptCompositor
__ MobileIcons: _LICreateDefaultIcon
__ MobileIcons: _LICreateIconForImage
__ MobileIcons: _LICreateIconFromCachedBitmap
__ OnBoardingKit: _OBJC_CLASS_$_OBBoldTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBLinkTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBPrivacyLinkController
__ OnBoardingKit: _OBJC_CLASS_$_OBPrivacyPresenter
__ OnBoardingKit: _OBJC_CLASS_$_OBWelcomeController
__ OnBoardingKit: _OBJC_METACLASS_$_OBWelcomeController
__ OnBoardingKit: _OBPrivacyBusinessChatIdentifier
__ PassKitCore: __Z47PKPassSecurePreviewContextCreateMessagesPreviewP5NSURLS0_
__ PeopleSuggester: _OBJC_CLASS_$__PSMessagesPinningFeedback
__ PeopleSuggester: _OBJC_CLASS_$__PSMessagesPinningSuggester
__ PeopleSuggester: _OBJC_CLASS_$__PSMessagesPinningSuggestion
__ Photos: _OBJC_CLASS_$_PHAsset
__ Photos: _OBJC_CLASS_$_PHAssetChangeRequest
__ Photos: _OBJC_CLASS_$_PHAssetCreationRequest
__ Photos: _OBJC_CLASS_$_PHAssetExportRequest
__ Photos: _OBJC_CLASS_$_PHAssetExportRequestOptions
__ Photos: _OBJC_CLASS_$_PHLivePhoto
__ Photos: _OBJC_CLASS_$_PHMomentShare
__ Photos: _OBJC_CLASS_$_PHPhotoLibrary
__ Photos: _PHAssetExportRequestFullSizePhotoURLKey
__ Photos: _PHAssetExportRequestFullSizeVideoURLKey
__ Photos: _PHAssetExportRequestLivePhotoBundleURLKey
__ Photos: _PHAssetExportRequestPhotoFileURLKey
__ Photos: _PHAssetExportRequestVideoFileURLKey
__ Photos: _PHImageErrorKey
__ PhotosFormats: _OBJC_CLASS_$_PFVideoComplement
__ PhotosFormats: _OBJC_CLASS_$_PFVideoMetadata
__ PhotosFormats: _PFVideoComplementFileExtension
__ PhotosPlayer: _OBJC_CLASS_$_ISWrappedAVAudioSession
__ PhotosUI: _PUPhotosFileProviderTypeIdentifierLivePhotoBundle
__ PhotosUICore: _OBJC_CLASS_$_PXArrayChangeDetails
__ PhotosUICore: _OBJC_CLASS_$_PXAssetActionManager
__ PhotosUICore: _OBJC_CLASS_$_PXAssetActionPerformer
__ PhotosUICore: _OBJC_CLASS_$_PXAssetReference
__ PhotosUICore: _OBJC_CLASS_$_PXAssetsDataSource
__ PhotosUICore: _OBJC_CLASS_$_PXAssetsDataSourceCountsController
__ PhotosUICore: _OBJC_CLASS_$_PXAssetsDataSourceManager
__ PhotosUICore: _OBJC_CLASS_$_PXBaseDisplayCollection
__ PhotosUICore: _OBJC_CLASS_$_PXCMMPhotoKitContext
__ PhotosUICore: _OBJC_CLASS_$_PXCMMWorkflowCoordinator
__ PhotosUICore: _OBJC_CLASS_$_PXFooterViewModel
__ PhotosUICore: _OBJC_CLASS_$_PXMessagesStackView
__ PhotosUICore: _OBJC_CLASS_$_PXMutableIndexPathSet
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitAssetActionManager
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitAssetsDataSource
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitMessagesAssetActionManager
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitUIMediaProvider
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosUIViewController
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosViewConfiguration
__ PhotosUICore: _OBJC_CLASS_$_PXSectionedDataSourceChangeDetails
__ PhotosUICore: _OBJC_CLASS_$_PXSectionedSelectionManager
__ PhotosUICore: _OBJC_CLASS_$_PXSelectionSnapshot
__ PhotosUICore: _OBJC_CLASS_$_PXStaticDisplayAssetsDataSource
__ PhotosUICore: _OBJC_CLASS_$_PXUIMediaProvider
__ PhotosUICore: _OBJC_CLASS_$_PXViewSpec
__ PhotosUICore: _OBJC_METACLASS_$_PXAssetActionManager
__ PhotosUICore: _OBJC_METACLASS_$_PXAssetActionPerformer
__ PhotosUICore: _OBJC_METACLASS_$_PXAssetsDataSource
__ PhotosUICore: _OBJC_METACLASS_$_PXAssetsDataSourceManager
__ PhotosUICore: _OBJC_METACLASS_$_PXBaseDisplayCollection
__ PhotosUICore: _OBJC_METACLASS_$_PXFooterViewModel
__ PhotosUICore: _OBJC_METACLASS_$_PXPhotoKitAssetActionManager
__ PhotosUICore: _OBJC_METACLASS_$_PXUIMediaProvider
__ PhotosUICore: _PXAssetActionTypeAddToLibrary
__ PhotosUICore: _PXAssetActionTypeCopy
__ PhotosUICore: _PXAssetActionTypeDelete
__ PhotosUICore: _PXAssetActionTypeReply
__ PhotosUICore: _PXAssetActionTypeUnifiedDestructive
__ PhotosUICore: _PXCMMActionTypeSaveToLibrary
__ PhotosUICore: _PXDataSourceIdentifierNull
__ PhotosUICore: _PXDisplayAssetDetailedCountsUndefined
__ PhotosUICore: _PXDisplayAssetFetchResultFromArray
__ PhotosUICore: _PXDisplayAssetTypedCountZero
__ PhotosUICore: _PXFloatApproximatelyEqualToFloat
__ PhotosUICore: _PXFloatFloorToPixel
__ PhotosUICore: _PXLargestSalientAspectFilledCropRect
__ PhotosUICore: _PXLocalizationKeyForMediaType
__ PhotosUICore: _PXRectFlippedVertically
__ PhotosUICore: _PXRectNormalize
__ PhotosUICore: _PXRectUnit
__ PhotosUICore: _PXRectWithAspectRatioFittingRect
__ PhotosUICore: _PXSimpleIndexPathDescription
__ PhotosUICore: _PXSimpleIndexPathNull
__ Preferences: _OBJC_CLASS_$_PSListController
__ Preferences: _OBJC_CLASS_$_PSRootController
__ Preferences: _OBJC_CLASS_$_PSSpecifier
__ Preferences: _OBJC_CLASS_$_PSViewController
__ Preferences: _OBJC_IVAR_$_PSListController._specifiers
__ Preferences: _OBJC_IVAR_$_PSViewController._specifier
__ Preferences: _OBJC_METACLASS_$_PSListController
__ Preferences: _OBJC_METACLASS_$_PSViewController
__ Preferences: _PSAlignmentKey
__ Preferences: _PSFooterTextGroupKey
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CAFrameRateRangeMake
__ QuartzCore: _CATransform3DConcat
__ QuartzCore: _CATransform3DEqualToTransform
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DMakeRotation
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _CATransform3DRotate
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _OBJC_CLASS_$_CAAnimation
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABackdropLayer
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAEmitterBehavior
__ QuartzCore: _OBJC_CLASS_$_CAEmitterCell
__ QuartzCore: _OBJC_CLASS_$_CAEmitterLayer
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMatchMoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAMeshTransform
__ QuartzCore: _OBJC_CLASS_$_CAPackage
__ QuartzCore: _OBJC_CLASS_$_CAReplicatorLayer
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CAStateController
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_CLASS_$_CATransformLayer
__ QuartzCore: _OBJC_METACLASS_$_CABackdropLayer
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _OBJC_METACLASS_$_CAShapeLayer
__ QuartzCore: _kCAAnimationAbsolute
__ QuartzCore: _kCAAnimationCubic
__ QuartzCore: _kCAAnimationCubicPaced
__ QuartzCore: _kCAAnimationDiscrete
__ QuartzCore: _kCAAnimationLinear
__ QuartzCore: _kCAAnimationRelative
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCADepthNormalizationNone
__ QuartzCore: _kCAEmitterBehaviorAttractor
__ QuartzCore: _kCAEmitterBehaviorColorOverLife
__ QuartzCore: _kCAEmitterBehaviorSimpleAttractor
__ QuartzCore: _kCAEmitterBehaviorValueOverLife
__ QuartzCore: _kCAEmitterCellPoint
__ QuartzCore: _kCAEmitterLayerCheapColorDodge
__ QuartzCore: _kCAEmitterLayerOutline
__ QuartzCore: _kCAEmitterLayerPoint
__ QuartzCore: _kCAEmitterLayerRectangle
__ QuartzCore: _kCAEmitterLayerRectangles
__ QuartzCore: _kCAFillModeBackwards
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCAFilterColorMatrix
__ QuartzCore: _kCAFilterColorMonochrome
__ QuartzCore: _kCAFilterColorSaturate
__ QuartzCore: _kCAFilterDestIn
__ QuartzCore: _kCAFilterDestOut
__ QuartzCore: _kCAFilterGaussianBlur
__ QuartzCore: _kCAFilterInputAddWhite
__ QuartzCore: _kCAFilterInputAlphaValues
__ QuartzCore: _kCAFilterInputAmount
__ QuartzCore: _kCAFilterInputAngle
__ QuartzCore: _kCAFilterInputAspectRatio
__ QuartzCore: _kCAFilterInputBackColor0
__ QuartzCore: _kCAFilterInputBackColor1
__ QuartzCore: _kCAFilterInputBackEnabled
__ QuartzCore: _kCAFilterInputBias
__ QuartzCore: _kCAFilterInputBlueValues
__ QuartzCore: _kCAFilterInputBounds
__ QuartzCore: _kCAFilterInputColor
__ QuartzCore: _kCAFilterInputColor0
__ QuartzCore: _kCAFilterInputColor1
__ QuartzCore: _kCAFilterInputColorMap
__ QuartzCore: _kCAFilterInputColorMatrix
__ QuartzCore: _kCAFilterInputDither
__ QuartzCore: _kCAFilterInputEndAngle
__ QuartzCore: _kCAFilterInputFrontColor
__ QuartzCore: _kCAFilterInputFrontEnabled
__ QuartzCore: _kCAFilterInputGreenValues
__ QuartzCore: _kCAFilterInputHSVSpace
__ QuartzCore: _kCAFilterInputHardEdges
__ QuartzCore: _kCAFilterInputIntermediateBitDepth
__ QuartzCore: _kCAFilterInputLinear
__ QuartzCore: _kCAFilterInputNormalizeEdges
__ QuartzCore: _kCAFilterInputOverlayOpacity
__ QuartzCore: _kCAFilterInputQuality
__ QuartzCore: _kCAFilterInputRadius
__ QuartzCore: _kCAFilterInputRedValues
__ QuartzCore: _kCAFilterInputReversed
__ QuartzCore: _kCAFilterInputScale
__ QuartzCore: _kCAFilterInputShadowBounds
__ QuartzCore: _kCAFilterInputShadowColor
__ QuartzCore: _kCAFilterInputStartAngle
__ QuartzCore: _kCAFilterInputTime
__ QuartzCore: _kCAFilterInputValues
__ QuartzCore: _kCAFilterLinear
__ QuartzCore: _kCAFilterLinearLightBlendMode
__ QuartzCore: _kCAFilterMultiply
__ QuartzCore: _kCAFilterMultiplyBlendMode
__ QuartzCore: _kCAFilterMultiplyColor
__ QuartzCore: _kCAFilterNormalBlendMode
__ QuartzCore: _kCAFilterOpacityPair
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterPlusL
__ QuartzCore: _kCAFilterSourceAtop
__ QuartzCore: _kCAFilterTrilinear
__ QuartzCore: _kCAFilterVibrantColorMatrix
__ QuartzCore: _kCAFilterVibrantDark
__ QuartzCore: _kCAFilterVibrantLight
__ QuartzCore: _kCAGravityCenter
__ QuartzCore: _kCAGravityResizeAspect
__ QuartzCore: _kCAGravityResizeAspectFill
__ QuartzCore: _kCAGravityTopLeft
__ QuartzCore: _kCALineCapRound
__ QuartzCore: _kCALineJoinRound
__ QuartzCore: _kCAMediaTimingFunctionDefault
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ QuartzCore: _kCAPackageTypeCAMLBundle
__ QuickLook: _OBJC_CLASS_$_QLPreviewController
__ QuickLook: _OBJC_CLASS_$_QLPreviewMockScene
__ QuickLook: _OBJC_METACLASS_$_QLPreviewController
__ QuickLook: _QLPreviewControllerSupportsContentType
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailGenerationRequest
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailGenerator
__ ResponseKit: _OBJC_CLASS_$_RKMessageResponseManager
__ SAObjects: _OBJC_CLASS_$_SAEmail
__ SAObjects: _OBJC_CLASS_$_SAPerson
__ SAObjects: _OBJC_CLASS_$_SAPersonAttribute
__ SAObjects: _OBJC_CLASS_$_SAPhone
__ SAObjects: _OBJC_CLASS_$_SASmsSms
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleWhenUnlocked
__ Security: _kSecAttrApplicationLabel
__ Security: _kSecClass
__ Security: _kSecClassKey
__ Security: _kSecReturnData
__ Security: _kSecValueData
__ SiriActivation: _OBJC_CLASS_$_SiriDirectActionContext
__ SiriActivation: _OBJC_CLASS_$_SiriDirectActionSource
__ SoftLinking: __sl_dlopen
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationService
__ SpringBoardServices: _OBJC_CLASS_$_SBSHardwareButtonService
__ SpringBoardServices: _SBSRequestPasscodeUnlockUI
__ SpringBoardServices: _SBSSetAlertSuppressionContexts
__ StorageSettings: _OBJC_CLASS_$_STStorageActionTip
__ StorageSettings: _OBJC_CLASS_$_STStorageAppHeaderCell
__ StorageSettings: _OBJC_CLASS_$_STStorageOptionTip
__ StorageSettings: _OBJC_CLASS_$_STStoragePlugin
__ StorageSettings: _OBJC_METACLASS_$_STStoragePlugin
__ StorageSettings: _STStorageSizeKey
__ TelephonyUtilities: _OBJC_CLASS_$_TUCall
__ TelephonyUtilities: _OBJC_CLASS_$_TUCallCapabilities
__ TelephonyUtilities: _OBJC_CLASS_$_TUCallCenter
__ TelephonyUtilities: _OBJC_CLASS_$_TUCallProviderManager
__ TelephonyUtilities: _OBJC_CLASS_$_TUDialRequest
__ TelephonyUtilities: _OBJC_CLASS_$_TUHandle
__ TelephonyUtilities: _TUOpenURL
__ TipKit: _OBJC_CLASS_$_TPKContentController
__ TipKit: _OBJC_CLASS_$_TPKContentView
__ TipKit: _OBJC_CLASS_$_TPKTipContentHintView
__ ToneLibrary: _OBJC_CLASS_$_TLAlert
__ ToneLibrary: _OBJC_CLASS_$_TLAlertConfiguration
__ ToneLibrary: _OBJC_CLASS_$_TLToneManager
__ ToneLibrary: _TLToneIdentifierNone
__ ToneLibrary: _TLVibrationIdentifierNone
__ TranslationUIServices: _OBJC_CLASS_$_LTUITranslationViewController
__ UIKit: _NSAttachmentAttributeName
__ UIKit: _NSBackgroundColorAttributeName
__ UIKit: _NSBaselineOffsetAttributeName
__ UIKit: _NSDirectionalEdgeInsetsZero
__ UIKit: _NSDocumentTypeDocumentAttribute
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSKernAttributeName
__ UIKit: _NSLinkAttributeName
__ UIKit: _NSOriginalFontAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSRTFDTextDocumentType
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _NSUnderlineStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutAnchor
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutBoundarySupplementaryItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutDecorationItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutDimension
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutEdgeSpacing
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutGroup
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutGroupCustomItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSection
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSize
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSpacing
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSupplementaryItem
__ UIKit: _OBJC_CLASS_$_NSConcreteTextStorage
__ UIKit: _OBJC_CLASS_$_NSDiffableDataSourceSnapshot
__ UIKit: _OBJC_CLASS_$_NSLayoutManager
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_NSTextContainer
__ UIKit: _OBJC_CLASS_$_NSTextStorage
__ UIKit: _OBJC_CLASS_$_NSTypesetter
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivity
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIActivityItemProvider
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationShortcutIcon
__ UIKit: _OBJC_CLASS_$_UIApplicationShortcutItem
__ UIKit: _OBJC_CLASS_$_UIAutoRotatingWindow
__ UIKit: _OBJC_CLASS_$_UIBackgroundConfiguration
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIButtonConfiguration
__ UIKit: _OBJC_CLASS_$_UICellAccessoryDisclosureIndicator
__ UIKit: _OBJC_CLASS_$_UICellAccessoryLabel
__ UIKit: _OBJC_CLASS_$_UICollectionLayoutListConfiguration
__ UIKit: _OBJC_CLASS_$_UICollectionReusableView
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewCellRegistration
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayoutConfiguration
__ UIKit: _OBJC_CLASS_$_UICollectionViewController
__ UIKit: _OBJC_CLASS_$_UICollectionViewDiffableDataSource
__ UIKit: _OBJC_CLASS_$_UICollectionViewDropProposal
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayoutAttributes
__ UIKit: _OBJC_CLASS_$_UICollectionViewListCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewSupplementaryRegistration
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIColorEffect
__ UIKit: _OBJC_CLASS_$_UIContextMenuConfiguration
__ UIKit: _OBJC_CLASS_$_UIContextMenuInteraction
__ UIKit: _OBJC_CLASS_$_UIContextualAction
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UICubicTimingParameters
__ UIKit: _OBJC_CLASS_$_UIDateLabel
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDictationInputModeOptions
__ UIKit: _OBJC_CLASS_$_UIDragInteraction
__ UIKit: _OBJC_CLASS_$_UIDragItem
__ UIKit: _OBJC_CLASS_$_UIDragPreview
__ UIKit: _OBJC_CLASS_$_UIDragPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIDragPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIDropInteraction
__ UIKit: _OBJC_CLASS_$_UIDropProposal
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIFontMetrics
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIHoverGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImagePickerController
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIInputContextHistory
__ UIKit: _OBJC_CLASS_$_UIInputView
__ UIKit: _OBJC_CLASS_$_UIInputViewController
__ UIKit: _OBJC_CLASS_$_UIInterfaceAction
__ UIKit: _OBJC_CLASS_$_UIKBVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIKeyCommand
__ UIKit: _OBJC_CLASS_$_UIKeyboard
__ UIKit: _OBJC_CLASS_$_UIKeyboardImpl
__ UIKit: _OBJC_CLASS_$_UIKeyboardInputMode
__ UIKit: _OBJC_CLASS_$_UIKeyboardInputModeController
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UIListContentConfiguration
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UIMenuController
__ UIKit: _OBJC_CLASS_$_UIMenuItem
__ UIKit: _OBJC_CLASS_$_UIMovieScrubber
__ UIKit: _OBJC_CLASS_$_UIMutableApplicationShortcutItem
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationBarAppearance
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIPageControl
__ UIKit: _OBJC_CLASS_$_UIPageViewController
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPasteConfiguration
__ UIKit: _OBJC_CLASS_$_UIPasteboard
__ UIKit: _OBJC_CLASS_$_UIPeripheralHost
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPresentationController
__ UIKit: _OBJC_CLASS_$_UIPreviewAction
__ UIKit: _OBJC_CLASS_$_UIPreviewForceInteractionProgress
__ UIKit: _OBJC_CLASS_$_UIPreviewInteractionController
__ UIKit: _OBJC_CLASS_$_UIPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIPrintInfo
__ UIKit: _OBJC_CLASS_$_UIPrintInteractionController
__ UIKit: _OBJC_CLASS_$_UIPrintPageRenderer
__ UIKit: _OBJC_CLASS_$_UIProgressHUD
__ UIKit: _OBJC_CLASS_$_UIProgressView
__ UIKit: _OBJC_CLASS_$_UIResponder
__ UIKit: _OBJC_CLASS_$_UISceneActivationConditions
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScribbleInteraction
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UISegmentedControl
__ UIKit: _OBJC_CLASS_$_UISplitViewController
__ UIKit: _OBJC_CLASS_$_UISpringTimingParameters
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UISwipeActionsConfiguration
__ UIKit: _OBJC_CLASS_$_UISwipeGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITableViewDropProposal
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITableViewRowAction
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedDragPreview
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextDropProposal
__ UIKit: _OBJC_CLASS_$_UITextEffectsWindow
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextInputMode
__ UIKit: _OBJC_CLASS_$_UITextInputPayloadController
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIToolbar
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIVibrancyEffect
__ UIKit: _OBJC_CLASS_$_UIVideoEditorController
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffect
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$_UIWindowScene
__ UIKit: _OBJC_CLASS_$__UIAction
__ UIKit: _OBJC_CLASS_$__UIActivityRecipientManager
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIBackdropViewSettings
__ UIKit: _OBJC_CLASS_$__UIBackgroundViewConfiguration
__ UIKit: _OBJC_CLASS_$__UICellAccessoryConfigurationCustomView
__ UIKit: _OBJC_CLASS_$__UICellAccessoryConfigurationMultiselect
__ UIKit: _OBJC_CLASS_$__UIClickInteraction
__ UIKit: _OBJC_CLASS_$__UICollectionViewListCell
__ UIKit: _OBJC_CLASS_$__UICollectionViewListLayoutSection
__ UIKit: _OBJC_CLASS_$__UICollectionViewListLayoutSectionConfiguration
__ UIKit: _OBJC_CLASS_$__UIContextMenuAccessoryView
__ UIKit: _OBJC_CLASS_$__UIContextMenuInteraction
__ UIKit: _OBJC_CLASS_$__UIContextMenuPreviewActionGroup
__ UIKit: _OBJC_CLASS_$__UIContextMenuStyle
__ UIKit: _OBJC_CLASS_$__UICursor
__ UIKit: _OBJC_CLASS_$__UICursorHighlightEffect
__ UIKit: _OBJC_CLASS_$__UICursorInteraction
__ UIKit: _OBJC_CLASS_$__UICursorLiftEffect
__ UIKit: _OBJC_CLASS_$__UICursorStyle
__ UIKit: _OBJC_CLASS_$__UIDragSnappingFeedbackGenerator
__ UIKit: _OBJC_CLASS_$__UIGrabber
__ UIKit: _OBJC_CLASS_$__UINavigationBarTitleView
__ UIKit: _OBJC_CLASS_$__UINavigationControllerPalette
__ UIKit: _OBJC_CLASS_$__UIPreviewPresentationController
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_CLASS_$__UISheetDetent
__ UIKit: _OBJC_CLASS_$__UISheetPresentationController
__ UIKit: _OBJC_CLASS_$__UISupplementalLexicon
__ UIKit: _OBJC_CLASS_$__UISupplementalPersonItem
__ UIKit: _OBJC_CLASS_$__UITableViewCellActionButton
__ UIKit: _OBJC_CLASS_$__UITableViewDiffableDataSource
__ UIKit: _OBJC_CLASS_$__UITargetedPreview
__ UIKit: _OBJC_CLASS_$__UIWindowSceneActivationAction
__ UIKit: _OBJC_CLASS_$__UIWindowSceneActivationConfiguration
__ UIKit: _OBJC_METACLASS_$_NSConcreteTextStorage
__ UIKit: _OBJC_METACLASS_$_UIActivity
__ UIKit: _OBJC_METACLASS_$_UIActivityItemProvider
__ UIKit: _OBJC_METACLASS_$_UIAlertAction
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UIAutoRotatingWindow
__ UIKit: _OBJC_METACLASS_$_UIBarButtonItem
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionReusableView
__ UIKit: _OBJC_METACLASS_$_UICollectionView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCompositionalLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewController
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayoutAttributes
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIImagePickerController
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UIInputView
__ UIKit: _OBJC_METACLASS_$_UIInputViewController
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UINavigationBar
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UINavigationItem
__ UIKit: _OBJC_METACLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIPresentationController
__ UIKit: _OBJC_METACLASS_$_UIPrintPageRenderer
__ UIKit: _OBJC_METACLASS_$_UIProgressView
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UISearchController
__ UIKit: _OBJC_METACLASS_$_UISplitViewController
__ UIKit: _OBJC_METACLASS_$_UISpringTimingParameters
__ UIKit: _OBJC_METACLASS_$_UITableView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_METACLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UITextView
__ UIKit: _OBJC_METACLASS_$_UIToolbar
__ UIKit: _OBJC_METACLASS_$_UIVideoEditorController
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$__UICollectionViewListCell
__ UIKit: _OBJC_METACLASS_$__UIContextMenuAccessoryView
__ UIKit: _OBJC_METACLASS_$__UIDragSnappingFeedbackGenerator
__ UIKit: _OBJC_METACLASS_$__UINavigationBarTitleView
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _OBJC_METACLASS_$__UITableViewCellActionButton
__ UIKit: _UIAccessibilityDarkerSystemColorsEnabled
__ UIKit: _UIAccessibilityDarkerSystemColorsStatusDidChangeNotification
__ UIKit: _UIAccessibilityIsBoldTextEnabled
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityReduceMotionStatusDidChangeNotification
__ UIKit: _UIAccessibilityReduceTransparencyStatusDidChangeNotification
__ UIKit: _UIActivityTypeMessage
__ UIKit: _UIActivityTypeSaveToCameraRoll
__ UIKit: _UIAnimationDragCoefficient
__ UIKit: _UIApp
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidChangeStatusBarFrameNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationDidFinishLaunchingNotification
__ UIKit: _UIApplicationDidReceiveMemoryWarningNotification
__ UIKit: _UIApplicationResumedEventsOnlyNotification
__ UIKit: _UIApplicationSuspendedEventsOnlyNotification
__ UIKit: _UIApplicationUserDidTakeScreenshotNotification
__ UIKit: _UIApplicationWillChangeStatusBarFrameNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIAuditTokenTaskHasEntitlement
__ UIKit: _UIBackgroundTaskInvalid
__ UIKit: _UICeilToViewScale
__ UIKit: _UICollectionElementKindSectionFooter
__ UIKit: _UICollectionElementKindSectionHeader
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIDeviceProximityStateDidChangeNotification
__ UIKit: _UIEdgeInsetsAdd
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFloorToViewScale
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontDescriptorTextStyleBody
__ UIKit: _UIFontDescriptorTextStyleCaption2
__ UIKit: _UIFontDescriptorTraitsAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontSystemFontDesignAlternate
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleFootnote1
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleHeadline1
__ UIKit: _UIFontTextStyleLargeTitle
__ UIKit: _UIFontTextStyleSubhead
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleSubheadline1
__ UIKit: _UIFontTextStyleSubheadline2
__ UIKit: _UIFontTextStyleTitle0
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightBlack
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIFontWeightTrait
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIGraphicsPopContext
__ UIKit: _UIGraphicsPushContext
__ UIKit: _UIImageDataWriteToSavedPhotosAlbum
__ UIKit: _UIImageGetTableNext
__ UIKit: _UIImageGetUnreadIndicator
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIImagePickerControllerMediaType
__ UIKit: _UIImagePickerControllerMediaURL
__ UIKit: _UIImagePickerControllerPHAsset
__ UIKit: _UIImageWriteToSavedPhotosAlbum
__ UIKit: _UIInputViewWillRotateNotification
__ UIKit: _UIKeyInputDelete
__ UIKit: _UIKeyInputDownArrow
__ UIKit: _UIKeyInputEnd
__ UIKit: _UIKeyInputEscape
__ UIKit: _UIKeyInputLeftArrow
__ UIKit: _UIKeyInputPageDown
__ UIKit: _UIKeyInputPageUp
__ UIKit: _UIKeyInputRightArrow
__ UIKit: _UIKeyInputUpArrow
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardAutomaticIsOnScreen
__ UIKit: _UIKeyboardDidChangeFrameNotification
__ UIKit: _UIKeyboardDidHideNotification
__ UIKit: _UIKeyboardDidShowNotification
__ UIKit: _UIKeyboardDidSwitchAwayFromEmojiKeyboardNotification
__ UIKit: _UIKeyboardDidSwitchToEmojiKeyboardNotification
__ UIKit: _UIKeyboardFrameBeginUserInfoKey
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardInputMode_dictation
__ UIKit: _UIKeyboardInputMode_emoji
__ UIKit: _UIKeyboardOrderInAutomaticSkippingAnimation
__ UIKit: _UIKeyboardPredictionEnabledForCurrentInputMode
__ UIKit: _UIKeyboardPrivateInteractiveDismissalDidBeginNotification
__ UIKit: _UIKeyboardShouldShowCandidatesNotification
__ UIKit: _UIKeyboardShouldShowPredictionsNotification
__ UIKit: _UIKeyboardWillChangeFrameNotification
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UIPageViewControllerOptionSpineLocationKey
__ UIKit: _UIPasteboardTypeListImage
__ UIKit: _UIPasteboardTypeListString
__ UIKit: _UIPasteboardTypeListURL
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectCornersAtEdges
__ UIKit: _UIRectFill
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRectIntegralWithScale
__ UIKit: _UIRectRoundToViewScale
__ UIKit: _UIRemoteKeyboardLevel
__ UIKit: _UIRoundToScale
__ UIKit: _UIRoundToViewScale
__ UIKit: _UISaveVideoAtPathToSavedPhotosAlbum
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITextEffectsWindowOffsetDidChangeNotification
__ UIKit: _UITextInputContextIdentifierDataDidUpdateNotification
__ UIKit: _UITextInputContextIdentifierPreferencesDomain
__ UIKit: _UITextInputContextIdentifierPreferencesDomainKey
__ UIKit: _UITextInputContextIdentifierPreferencesIdentifierKey
__ UIKit: _UITextInputContextIdentifierPreferencesPrefix
__ UIKit: _UITextInputCurrentInputModeDidChangeNotification
__ UIKit: _UITextViewTextDidChangeNotification
__ UIKit: _UITrackingRunLoopMode
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextFromViewKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UITransitionContextToViewKey
__ UIKit: _UIUnformattedPhoneNumberFromString
__ UIKit: _UIVideoAtPathIsCompatibleWithSavedPhotosAlbum
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: _UIWindowDidResignKeyNotification
__ UIKit: _UIWindowLevelNormal
__ UIKit: __UIApplicationDeactivationReasonUserInfoKey
__ UIKit: __UIApplicationUsesLegacyUI
__ UIKit: __UIApplicationVolumeDownButtonDownNotification
__ UIKit: __UIApplicationVolumeDownButtonUpNotification
__ UIKit: __UIApplicationVolumeUpButtonDownNotification
__ UIKit: __UIApplicationVolumeUpButtonUpNotification
__ UIKit: __UIApplicationWillAddDeactivationReasonNotification
__ UIKit: __UICollectionViewListLayoutSectionAutomaticDimension
__ UIKit: __UIImageJPEGRepresentation
__ UIKit: __UIImagePickerControllerAllowStillDuringVideo
__ UIKit: __UIImagePickerControllerOriginalImageData
__ UIKit: __UIImagePickerControllerReviewCapturedItem
__ UIKit: __UIImagePickerControllerVideoDontTranscode
__ UIKit: __UIImagePickerControllerVideoEditingEnd
__ UIKit: __UIImagePickerControllerVideoEditingStart
__ UIKit: __UIImagePickerControllerViewImageBeforeSelecting
__ UIKit: __UISheetCornerRadius
__ UIKit: __UISheetGrabberTopSpacing
__ UIKit: __UISheetMinimumTopInset
__ UIKit: __UIUpdateCycleEnabled
__ UIKit: __UIUpdateModelMediaTime
__ UIKit: __UIUpdateRequestActivate
__ UIKit: __UIUpdateSequenceCADisplayLinksItem
__ UIKit: __UIUpdateSequenceInsertItem
__ UIKit: __UIUpdateSequenceRemoveItem
__ UIKit: __UIUserInterfaceSizeClassForHeight
__ UIKit: __UIUserInterfaceSizeClassForWidth
__ UniformTypeIdentifiers: _OBJC_CLASS_$_UTType
__ UniformTypeIdentifiers: _UTTypeFileURL
__ UniformTypeIdentifiers: _UTTypeFlatRTFD
__ UniformTypeIdentifiers: _UTTypeGIF
__ UniformTypeIdentifiers: _UTTypeImage
__ UniformTypeIdentifiers: _UTTypeMovie
__ UniformTypeIdentifiers: _UTTypePlainText
__ UniformTypeIdentifiers: _UTTypeRTF
__ UniformTypeIdentifiers: _UTTypeRTFD
__ UniformTypeIdentifiers: _UTTypeText
__ UniformTypeIdentifiers: _UTTypeUTF16PlainText
__ UniformTypeIdentifiers: _UTTypeUTF8PlainText
__ UniformTypeIdentifiers: _UTTypeVideo
__ WebKit: _OBJC_CLASS_$_WKWebView
__ WebKit: _OBJC_CLASS_$_WKWebViewConfiguration
__ WebKit: _OBJC_CLASS_$_WKWebsiteDataStore
__ libAccessibility.dylib: __AXSReduceMotionAutoplayMessagesEffectsEnabled
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dispatch_source_type_vm
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _backtrace
__ libSystem.B.dylib: _backtrace_symbols
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _chmod
__ libSystem.B.dylib: _chown
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpwnam
__ libSystem.B.dylib: _hypotf
__ libSystem.B.dylib: _index
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_shim_legacy_logging_enabled
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _qsort_b
__ libSystem.B.dylib: _realpath$DARWIN_EXTSN
__ libSystem.B.dylib: _sandbox_check_by_audit_token
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _usleep
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getClassMethod
__ libobjc.A.dylib: _method_exchangeImplementations
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _protocol_getMethodDescription
CKInteractionNotificationView : UIView
 @property  <CKInteractionNotificationViewDelegate> *delegate

  // instance methods
  -[CKInteractionNotificationView hitTest:withEvent:]
  -[CKInteractionNotificationView .cxx_destruct]
  -[CKInteractionNotificationView setDelegate:]
  -[CKInteractionNotificationView delegate]


SMSApplicationSoundHelper : NSObject
 @property  BOOL bulletinSuppressed

  // instance methods
  -[SMSApplicationSoundHelper _shouldPlayTapbackSound]
  -[SMSApplicationSoundHelper _isPlaySoundEnabled]
  -[SMSApplicationSoundHelper _playIncomingMessageSoundAndHapticForMessage:messageIsForCurrentTranscript:]
  -[SMSApplicationSoundHelper stopPlayingAlert]
  -[SMSApplicationSoundHelper playSendSoundForMessage:]
  -[SMSApplicationSoundHelper playTapbackReceivedSoundForMessageInCurrentTranscript:]
  -[SMSApplicationSoundHelper bulletinSuppressed]
  -[SMSApplicationSoundHelper allowedByScreenTimeToPlayReceiveSoundForChat:]
  -[SMSApplicationSoundHelper playIncomingMessageSoundAndHapticForMessage:messageIsForCurrentTranscript:]
  -[SMSApplicationSoundHelper setBulletinSuppressed:]
  -[SMSApplicationSoundHelper .cxx_destruct]


CKReviewLargeUnsyncedConversationsViewController : CKAbstractReviewViewController
 @property  NSArray *conversations

  // class methods
  +[CKReviewLargeUnsyncedConversationsViewController initialize]

  // instance methods
  -[CKReviewLargeUnsyncedConversationsViewController reloadModelData]
  -[CKReviewLargeUnsyncedConversationsViewController tableViewCellClass]
  -[CKReviewLargeUnsyncedConversationsViewController setConversations:]
  -[CKReviewLargeUnsyncedConversationsViewController _populateConversationsIfNeeded]
  -[CKReviewLargeUnsyncedConversationsViewController tableViewCellReuseIdentifier]
  -[CKReviewLargeUnsyncedConversationsViewController numberOfModelObjects]
  -[CKReviewLargeUnsyncedConversationsViewController modelObjectAtIndex:]
  -[CKReviewLargeUnsyncedConversationsViewController deleteModelObjectAndUnderlyingData:]
  -[CKReviewLargeUnsyncedConversationsViewController didSelectModelObjectAtIndex:]
  -[CKReviewLargeUnsyncedConversationsViewController .cxx_destruct]
  -[CKReviewLargeUnsyncedConversationsViewController conversations]
  -[CKReviewLargeUnsyncedConversationsViewController navigationBarTitle]


CKReviewLargeSyncedConversationsViewController : CKReviewLargeUnsyncedConversationsViewController

CKReviewLargeConversationsTableViewCell : CKAbstractReviewTableViewCell
 @property  IMChat *chat
 @property  CNAvatarView *avatarView

  // class methods
  +[CKReviewLargeConversationsTableViewCell requestedHeight]
  +[CKReviewLargeConversationsTableViewCell leftHandSideViewSize]

  // instance methods
  -[CKReviewLargeConversationsTableViewCell chat]
  -[CKReviewLargeConversationsTableViewCell leftHandSideView]
  -[CKReviewLargeConversationsTableViewCell setAvatarView:]
  -[CKReviewLargeConversationsTableViewCell .cxx_destruct]
  -[CKReviewLargeConversationsTableViewCell avatarView]
  -[CKReviewLargeConversationsTableViewCell setModelObject:]
  -[CKReviewLargeConversationsTableViewCell setChat:]
  -[CKReviewLargeConversationsTableViewCell prepareForReuse]


CKPinnedConversationTapbackBubble : UIView <CKPinnedConversationActivityItemView>
 @property  CKAcknowledgmentGlyphView *tapbackGlyph
 @property  CKPinnedConversationActivityItemViewBackdropLayer *backdropLayer
 @property  CAShapeLayer *backdropMaskShapeLayer
 @property  CKPinnedConversationActivityItemViewShadowLayer *broadShadowLayer
 @property  CKPinnedConversationActivityItemViewShadowLayer *tightShadowLayer
 @property  CKPinnedConversationTapbackBubbleActivityItem *tapbackActivityItem
 @property  long long originationDirection
 @property  {CGPoint=dd} originationPoint
 @property  double preferredTailAttachmentPointXCoordinate
 @property  long long acknowledgmentType
 @property  <CKPinnedConversationActivityItem> *activityItem
 @property  long long originationHorizontalDirection
 @property  {CGPoint=dd} tailAttachmentPoint
 @property  {CGSize=dd} parentAvatarViewSize
 @property  BOOL supportsActivityItemViewContentScale
 @property  long long activityItemViewContentScale
 @property  BOOL supportsAlignmentWithOriginationSubAvatarFrame
 @property  <CKPinnedConversationActivityItemViewDelegate> *activityItemViewDelegate

  // instance methods
  -[CKPinnedConversationTapbackBubble backdropLayer]
  -[CKPinnedConversationTapbackBubble tapbackGlyph]
  -[CKPinnedConversationTapbackBubble setBackdropLayer:]
  -[CKPinnedConversationTapbackBubble flipVertically]
  -[CKPinnedConversationTapbackBubble traitCollectionDidChange:]
  -[CKPinnedConversationTapbackBubble _updateUserInterfaceStyles]
  -[CKPinnedConversationTapbackBubble _updateAcknowledgmentType]
  -[CKPinnedConversationTapbackBubble tapbackBalloonFrameForSize:]
  -[CKPinnedConversationTapbackBubble activityItem]
  -[CKPinnedConversationTapbackBubble largeTailBalloonFrameForSize:]
  -[CKPinnedConversationTapbackBubble smallTailBalloonFrameForSize:]
  -[CKPinnedConversationTapbackBubble acknowledgmentType]
  -[CKPinnedConversationTapbackBubble colorTypeForTapBack:]
  -[CKPinnedConversationTapbackBubble setTapbackGlyph:]
  -[CKPinnedConversationTapbackBubble setAcknowledgmentType:]
  -[CKPinnedConversationTapbackBubble tapbackBalloonSizeForSize:]
  -[CKPinnedConversationTapbackBubble flipHorizontally]
  -[CKPinnedConversationTapbackBubble largeTailBalloonSizeForSize:]
  -[CKPinnedConversationTapbackBubble smallTailBalloonSizeForSize:]
  -[CKPinnedConversationTapbackBubble activityItemToContactItemVerticalOverlap]
  -[CKPinnedConversationTapbackBubble setActivityItem:]
  -[CKPinnedConversationTapbackBubble originationDirection]
  -[CKPinnedConversationTapbackBubble setOriginationDirection:]
  -[CKPinnedConversationTapbackBubble originationHorizontalDirection]
  -[CKPinnedConversationTapbackBubble setOriginationHorizontalDirection:]
  -[CKPinnedConversationTapbackBubble originationPoint]
  -[CKPinnedConversationTapbackBubble setOriginationPoint:]
  -[CKPinnedConversationTapbackBubble preferredTailAttachmentPointXCoordinate]
  -[CKPinnedConversationTapbackBubble tailAttachmentPoint]
  -[CKPinnedConversationTapbackBubble tightShadowLayer]
  -[CKPinnedConversationTapbackBubble setPreferredTailAttachmentPointXCoordinate:]
  -[CKPinnedConversationTapbackBubble parentAvatarViewSize]
  -[CKPinnedConversationTapbackBubble setParentAvatarViewSize:]
  -[CKPinnedConversationTapbackBubble activityItemViewDelegate]
  -[CKPinnedConversationTapbackBubble supportsActivityItemViewContentScale]
  -[CKPinnedConversationTapbackBubble activityItemViewContentScale]
  -[CKPinnedConversationTapbackBubble setActivityItemViewContentScale:]
  -[CKPinnedConversationTapbackBubble broadShadowLayer]
  -[CKPinnedConversationTapbackBubble supportsAlignmentWithOriginationSubAvatarFrame]
  -[CKPinnedConversationTapbackBubble setActivityItemViewDelegate:]
  -[CKPinnedConversationTapbackBubble initWithActivityItem:]
  -[CKPinnedConversationTapbackBubble tapbackActivityItem]
  -[CKPinnedConversationTapbackBubble backdropMaskShapeLayer]
  -[CKPinnedConversationTapbackBubble setBackdropMaskShapeLayer:]
  -[CKPinnedConversationTapbackBubble setBroadShadowLayer:]
  -[CKPinnedConversationTapbackBubble setTightShadowLayer:]
  -[CKPinnedConversationTapbackBubble .cxx_destruct]
  -[CKPinnedConversationTapbackBubble layoutSubviews]
  -[CKPinnedConversationTapbackBubble sizeThatFits:]


CKPinnedConversationTapbackBubbleActivityItem : NSObject <CKPinnedConversationActivityItem>
 @property  IMMessage *message
 @property  NSString *attachedContactItemIdentifier
 @property  NSString *activityItemIdentifier
 @property  BOOL activityItemAppearsWithAnimation
 @property  BOOL activityItemDisappearsWithAnimation
 @property  double activityItemContentScale
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKPinnedConversationTapbackBubbleActivityItem activityItemIdentifier]
  -[CKPinnedConversationTapbackBubbleActivityItem activityItemView]
  -[CKPinnedConversationTapbackBubbleActivityItem activityItemDisappearsWithAnimation]
  -[CKPinnedConversationTapbackBubbleActivityItem activityItemContentScale]
  -[CKPinnedConversationTapbackBubbleActivityItem activityItemAppearsWithAnimation]
  -[CKPinnedConversationTapbackBubbleActivityItem attachedContactItemIdentifier]
  -[CKPinnedConversationTapbackBubbleActivityItem initWithMessage:contentScale:attachedContactItemIdentifier:]
  -[CKPinnedConversationTapbackBubbleActivityItem .cxx_destruct]
  -[CKPinnedConversationTapbackBubbleActivityItem message]


CKAbstractReviewViewController : PSViewController <UITableViewDataSource, UITableViewDelegate>
 @property  UITableView *tableView
 @property  UIView *topLineView
 @property  UINavigationItem *navItem
 @property  UIBarButtonItem *cancelEditingBarButtonItem
 @property  UIBarButtonItem *deleteBarButtonItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAbstractReviewViewController setTableView:]
  -[CKAbstractReviewViewController viewWillLayoutSubviews]
  -[CKAbstractReviewViewController setEditing:animated:]
  -[CKAbstractReviewViewController topLineView]
  -[CKAbstractReviewViewController setTopLineView:]
  -[CKAbstractReviewViewController tableView:numberOfRowsInSection:]
  -[CKAbstractReviewViewController navItem]
  -[CKAbstractReviewViewController _updateNavigationItemState]
  -[CKAbstractReviewViewController setNavItem:]
  -[CKAbstractReviewViewController cancelEditingBarButtonItem]
  -[CKAbstractReviewViewController _handleCancel]
  -[CKAbstractReviewViewController setCancelEditingBarButtonItem:]
  -[CKAbstractReviewViewController deleteBarButtonItem]
  -[CKAbstractReviewViewController _handleDelete]
  -[CKAbstractReviewViewController setDeleteBarButtonItem:]
  -[CKAbstractReviewViewController .cxx_destruct]
  -[CKAbstractReviewViewController tableView:didSelectRowAtIndexPath:]
  -[CKAbstractReviewViewController tableView:cellForRowAtIndexPath:]
  -[CKAbstractReviewViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[CKAbstractReviewViewController initWithNibName:bundle:]
  -[CKAbstractReviewViewController tableView]
  -[CKAbstractReviewViewController navigationItem]
  -[CKAbstractReviewViewController dealloc]
  -[CKAbstractReviewViewController _applicationDidBecomeActive:]
  -[CKAbstractReviewViewController loadView]


CKAbstractReviewTableViewCell : UITableViewCell
 @property  UILabel *nameLabel
 @property  UILabel *lastModifiedLabel
 @property  UILabel *sizeLabel
 @property  NSString *mainText
 @property  NSString *subheadingText
 @property  unsigned long size

  // instance methods
  -[CKAbstractReviewTableViewCell setSubheadingText:]
  -[CKAbstractReviewTableViewCell subheadingText]
  -[CKAbstractReviewTableViewCell .cxx_destruct]
  -[CKAbstractReviewTableViewCell lastModifiedLabel]
  -[CKAbstractReviewTableViewCell setLastModifiedLabel:]
  -[CKAbstractReviewTableViewCell layoutSubviews]
  -[CKAbstractReviewTableViewCell mainText]
  -[CKAbstractReviewTableViewCell setSize:]
  -[CKAbstractReviewTableViewCell setNameLabel:]
  -[CKAbstractReviewTableViewCell sizeLabel]
  -[CKAbstractReviewTableViewCell prepareForReuse]
  -[CKAbstractReviewTableViewCell setSizeLabel:]
  -[CKAbstractReviewTableViewCell initWithStyle:reuseIdentifier:]
  -[CKAbstractReviewTableViewCell size]
  -[CKAbstractReviewTableViewCell nameLabel]
  -[CKAbstractReviewTableViewCell setMainText:]


CKProgressView : UIProgressView
 @property  UIView *__ck_progressView
 @property  UIView *__ck_trackView

  // instance methods
  -[CKProgressView .cxx_destruct]
  -[CKProgressView setUpCKProgressView]
  -[CKProgressView setUpTrackView]
  -[CKProgressView __ck_progressView]
  -[CKProgressView set__ck_progressView:]
  -[CKProgressView set__ck_trackView:]
  -[CKProgressView __ck_trackView]
  -[CKProgressView setTintColor:]
  -[CKProgressView setProgress:animated:]
  -[CKProgressView initWithProgressViewStyle:]
  -[CKProgressView setTrackTintColor:]
  -[CKProgressView setProgress:]


CKLargeTitleAccessoryView : UIView
 @property  NSArray *accessoryButtons

  // class methods
  +[CKLargeTitleAccessoryView newComposeButton]
  +[CKLargeTitleAccessoryView newOptionsButton]

  // instance methods
  -[CKLargeTitleAccessoryView _intrinsicSizeWithinSize:]
  -[CKLargeTitleAccessoryView .cxx_destruct]
  -[CKLargeTitleAccessoryView setAccessoryButtons:]
  -[CKLargeTitleAccessoryView accessoryButtons]
  -[CKLargeTitleAccessoryView layoutSubviews]
  -[CKLargeTitleAccessoryView sizeThatFits:]


CKSocialLayerChatController : CKChatController
 @property  NSString *attachmentGUID
 @property  NSString *messageGUID
 @property  CKFullScreenBalloonViewControllerPhone *socialLayerFullScreenBalloonController

  // class methods
  +[CKSocialLayerChatController chatItemForMessageGUID:attachmentGUID:chatItems:]
  +[CKSocialLayerChatController chatIdentifierForMessageWithGUID:]

  // instance methods
  -[CKSocialLayerChatController .cxx_destruct]
  -[CKSocialLayerChatController initWithConversation:]
  -[CKSocialLayerChatController _setConversationDeferredSetup]
  -[CKSocialLayerChatController prewarmAttachmentChatItemSize]
  -[CKSocialLayerChatController scrollToAndHighlightMessage]
  -[CKSocialLayerChatController messageGUID]
  -[CKSocialLayerChatController selectedChatItems]
  -[CKSocialLayerChatController attachmentGUID]
  -[CKSocialLayerChatController attachmentIndex]
  -[CKSocialLayerChatController showFullScreenAcknowledgmentPickerForChatItem:]
  -[CKSocialLayerChatController socialLayerFullScreenBalloonController]
  -[CKSocialLayerChatController setMessageGUID:]
  -[CKSocialLayerChatController _fullScreenBalloonViewControllerWithChatItem:]
  -[CKSocialLayerChatController setSocialLayerFullScreenBalloonController:]
  -[CKSocialLayerChatController _controllerEligibleForSetConversation]
  -[CKSocialLayerChatController setAttachmentGUID:]
  -[CKSocialLayerChatController showTapBackPicker]
  -[CKSocialLayerChatController fullScreenBalloonViewController:sendMessageAcknowledgment:forChatItem:]
  -[CKSocialLayerChatController fullScreenBalloonViewControllerHandleDismissTap:]
  -[CKSocialLayerChatController fullScreenBalloonViewController:didAppearAnimated:]
  -[CKSocialLayerChatController fullScreenBalloonViewControllerDidDisappear:]
  -[CKSocialLayerChatController fullScreenBalloonViewController:replyButtonPressedForChatItem:]
  -[CKSocialLayerChatController fullScreenBalloonViewController:willAppearAnimated:]
  -[CKSocialLayerChatController fullScreenBalloonViewController:willDisappearWithSendAnimation:]
  -[CKSocialLayerChatController fullScreenBalloonViewController:verticallyScrollTranscriptByAmount:animated:completion:]
  -[CKSocialLayerChatController dealloc]


CKReviewLargeAttachmentsViewController : CKAbstractReviewViewController <QLPreviewControllerDelegate>
 @property  NSArray *attachments
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKReviewLargeAttachmentsViewController previewControllerDidDismiss:]
  -[CKReviewLargeAttachmentsViewController attachments]
  -[CKReviewLargeAttachmentsViewController reloadModelData]
  -[CKReviewLargeAttachmentsViewController tableViewCellClass]
  -[CKReviewLargeAttachmentsViewController tableViewCellReuseIdentifier]
  -[CKReviewLargeAttachmentsViewController numberOfModelObjects]
  -[CKReviewLargeAttachmentsViewController modelObjectAtIndex:]
  -[CKReviewLargeAttachmentsViewController deleteModelObjectAndUnderlyingData:]
  -[CKReviewLargeAttachmentsViewController didSelectModelObjectAtIndex:]
  -[CKReviewLargeAttachmentsViewController setAttachments:]
  -[CKReviewLargeAttachmentsViewController .cxx_destruct]
  -[CKReviewLargeAttachmentsViewController _populateAttachmentData]
  -[CKReviewLargeAttachmentsViewController attachmentClass]
  -[CKReviewLargeAttachmentsViewController _previewItem]
  -[CKReviewLargeAttachmentsViewController navigationBarTitle]


CKReviewLargeAttachmentsTableViewCell : CKAbstractReviewTableViewCell
 @property  UIImageView *previewView
 @property  CKAttachmentItem *attachmentItem

  // class methods
  +[CKReviewLargeAttachmentsTableViewCell requestedHeight]
  +[CKReviewLargeAttachmentsTableViewCell leftHandSideViewSize]

  // instance methods
  -[CKReviewLargeAttachmentsTableViewCell previewView]
  -[CKReviewLargeAttachmentsTableViewCell leftHandSideView]
  -[CKReviewLargeAttachmentsTableViewCell .cxx_destruct]
  -[CKReviewLargeAttachmentsTableViewCell setAttachmentItem:]
  -[CKReviewLargeAttachmentsTableViewCell attachmentItem]
  -[CKReviewLargeAttachmentsTableViewCell _updateImageViewForAttachmentItem]
  -[CKReviewLargeAttachmentsTableViewCell setModelObject:]
  -[CKReviewLargeAttachmentsTableViewCell prepareForReuse]
  -[CKReviewLargeAttachmentsTableViewCell setPreviewView:]


CKReviewLargePhotoAttachmentsViewController : CKReviewLargeAttachmentsViewController
  // instance methods
  -[CKReviewLargePhotoAttachmentsViewController attachmentClass]
  -[CKReviewLargePhotoAttachmentsViewController navigationBarTitle]


CKReviewLargeVideoAttachmentsViewController : CKReviewLargeAttachmentsViewController
  // instance methods
  -[CKReviewLargeVideoAttachmentsViewController attachmentClass]
  -[CKReviewLargeVideoAttachmentsViewController navigationBarTitle]


CKReviewLargeGIFOrStickerAttachmentsViewController : CKReviewLargeAttachmentsViewController
  // instance methods
  -[CKReviewLargeGIFOrStickerAttachmentsViewController attachmentClass]
  -[CKReviewLargeGIFOrStickerAttachmentsViewController navigationBarTitle]


CKReviewLargeOtherAttachmentsViewController : CKReviewLargeAttachmentsViewController
  // instance methods
  -[CKReviewLargeOtherAttachmentsViewController attachmentClass]
  -[CKReviewLargeOtherAttachmentsViewController navigationBarTitle]


CKInvisibleInkEmojiEffectView : CKInvisibleInkEffectView <CAAnimationDelegate>
 @property  UITextView *textView
 @property  CALayer *emojiContainerLayer
 @property  CALayer *emojiLayer
 @property  CAEmitterLayer *drawEmitterLayer
 @property  CALayer *dustContainerLayer
 @property  CAEmitterLayer *dustEmitterLayer
 @property  CALayer *blurredEmojiLayer
 @property  CALayer *maskLayer
 @property  BOOL blendingEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKInvisibleInkEmojiEffectView textView]
  -[CKInvisibleInkEmojiEffectView setSuspended:]
  -[CKInvisibleInkEmojiEffectView .cxx_destruct]
  -[CKInvisibleInkEmojiEffectView layoutSubviews]
  -[CKInvisibleInkEmojiEffectView emojiLayer]
  -[CKInvisibleInkEmojiEffectView createDrawEmitter]
  -[CKInvisibleInkEmojiEffectView setEmojiContainerLayer:]
  -[CKInvisibleInkEmojiEffectView emojiContainerLayer]
  -[CKInvisibleInkEmojiEffectView setEmojiLayer:]
  -[CKInvisibleInkEmojiEffectView drawEmitterLayer]
  -[CKInvisibleInkEmojiEffectView createDustEmitter]
  -[CKInvisibleInkEmojiEffectView setDustContainerLayer:]
  -[CKInvisibleInkEmojiEffectView setBlurredEmojiLayer:]
  -[CKInvisibleInkEmojiEffectView blurredEmojiLayer]
  -[CKInvisibleInkEmojiEffectView setMaskLayer:]
  -[CKInvisibleInkEmojiEffectView dustEmitterLayer]
  -[CKInvisibleInkEmojiEffectView dustContainerLayer]
  -[CKInvisibleInkEmojiEffectView setDustEmitterLayer:]
  -[CKInvisibleInkEmojiEffectView setDrawEmitterLayer:]
  -[CKInvisibleInkEmojiEffectView endDustEmitterLayerFingerEffects]
  -[CKInvisibleInkEmojiEffectView disableBlending]
  -[CKInvisibleInkEmojiEffectView endDrawEmitterEffects]
  -[CKInvisibleInkEmojiEffectView moveEmittersForTouchesBegan:]
  -[CKInvisibleInkEmojiEffectView enableBlending]
  -[CKInvisibleInkEmojiEffectView touchesBegan:withEvent:]
  -[CKInvisibleInkEmojiEffectView moveEmittersWithTouches:]
  -[CKInvisibleInkEmojiEffectView moveEmittersForTouchesMoved:]
  -[CKInvisibleInkEmojiEffectView endEmittersForTouchesEnded:]
  -[CKInvisibleInkEmojiEffectView endEmittersForTouchesCancelled:]
  -[CKInvisibleInkEmojiEffectView attachToBalloonView:]
  -[CKInvisibleInkEmojiEffectView detachFromBalloonView]
  -[CKInvisibleInkEmojiEffectView blendingEnabled]
  -[CKInvisibleInkEmojiEffectView animationDidStop:finished:]
  -[CKInvisibleInkEmojiEffectView touchesMoved:withEvent:]
  -[CKInvisibleInkEmojiEffectView maskLayer]
  -[CKInvisibleInkEmojiEffectView reset]
  -[CKInvisibleInkEmojiEffectView touchesCancelled:withEvent:]
  -[CKInvisibleInkEmojiEffectView setTextView:]
  -[CKInvisibleInkEmojiEffectView setPaused:]
  -[CKInvisibleInkEmojiEffectView initWithFrame:]
  -[CKInvisibleInkEmojiEffectView displayLayer:]
  -[CKInvisibleInkEmojiEffectView setBlendingEnabled:]
  -[CKInvisibleInkEmojiEffectView endTouches]
  -[CKInvisibleInkEmojiEffectView touchesEnded:withEvent:]


CKLocationShareOfferChatItem : CKBalloonChatItem
 @property  FMFLocation *lastKnownLocation
 @property  long long offerState
 @property  IMHandle *sender
 @property  NSString *titleText
 @property  NSString *locationText

  // class methods
  +[CKLocationShareOfferChatItem placeholderPreviewCache]
  +[CKLocationShareOfferChatItem titleBarMaskImageForWidth:]

  // instance methods
  -[CKLocationShareOfferChatItem .cxx_destruct]
  -[CKLocationShareOfferChatItem locationText]
  -[CKLocationShareOfferChatItem sender]
  -[CKLocationShareOfferChatItem initWithIMChatItem:maxWidth:]
  -[CKLocationShareOfferChatItem _handleLocationDidChangeNotification:]
  -[CKLocationShareOfferChatItem setLastKnownLocation:]
  -[CKLocationShareOfferChatItem _previewCacheKey:]
  -[CKLocationShareOfferChatItem previewURLForWidth:]
  -[CKLocationShareOfferChatItem savedPreviewFromURL:]
  -[CKLocationShareOfferChatItem _desaturatedImageForImage:]
  -[CKLocationShareOfferChatItem _placeholderCacheKey]
  -[CKLocationShareOfferChatItem _generateMapPreview]
  -[CKLocationShareOfferChatItem transcriptTraitCollection]
  -[CKLocationShareOfferChatItem shouldUpdatePreviewWithLocation:lastKnownLocation:previewURL:]
  -[CKLocationShareOfferChatItem savePreview:toURL:]
  -[CKLocationShareOfferChatItem _generateThumbnailFillToSize:contentAlignmentInsets:withCoordinate:forState:]
  -[CKLocationShareOfferChatItem previewURL]
  -[CKLocationShareOfferChatItem modificationDateForPreview:]
  -[CKLocationShareOfferChatItem balloonViewClass]
  -[CKLocationShareOfferChatItem configureBalloonView:]
  -[CKLocationShareOfferChatItem previewForWidth:orientation:]
  -[CKLocationShareOfferChatItem _generatePlaceholderThumbnailFillToSize:]
  -[CKLocationShareOfferChatItem lastKnownLocation]
  -[CKLocationShareOfferChatItem titleText]
  -[CKLocationShareOfferChatItem isFromMe]
  -[CKLocationShareOfferChatItem time]
  -[CKLocationShareOfferChatItem dealloc]
  -[CKLocationShareOfferChatItem failed]
  -[CKLocationShareOfferChatItem offerState]


CKDetailsLocationShareCell : CKTranscriptDetailsResizableCell
 @property  CKStandardButton *button
 @property  UILabel *timeRemainingLabel
 @property  UIMenu *menu
 @property  BOOL showOfferTimeRemaining
 @property  double offerTimeRemaining

  // class methods
  +[CKDetailsLocationShareCell identifier]

  // instance methods
  -[CKDetailsLocationShareCell menu]
  -[CKDetailsLocationShareCell setMenu:]
  -[CKDetailsLocationShareCell .cxx_destruct]
  -[CKDetailsLocationShareCell layoutSubviews]
  -[CKDetailsLocationShareCell button]
  -[CKDetailsLocationShareCell setTimeRemainingLabel:]
  -[CKDetailsLocationShareCell timeRemainingLabel]
  -[CKDetailsLocationShareCell showOfferTimeRemaining]
  -[CKDetailsLocationShareCell setShowOfferTimeRemaining:]
  -[CKDetailsLocationShareCell timeStringForTimeInterval:]
  -[CKDetailsLocationShareCell setOfferTimeRemaining:]
  -[CKDetailsLocationShareCell offerTimeRemaining]
  -[CKDetailsLocationShareCell prepareForReuse]
  -[CKDetailsLocationShareCell setButton:]
  -[CKDetailsLocationShareCell initWithStyle:reuseIdentifier:]


CKUITheme : NSObject
 @property  long long HUDStyle
 @property  UIColor *appTintColor
 @property  UIColor *segmentedControlSelectionTintColor
 @property  UIColor *messagesControllerBackgroundColor
 @property  UIColor *darkAppTintColor
 @property  UIColor *lightGrayColor
 @property  UIColor *grayTextColor
 @property  UIColor *notificationSubtitleColor
 @property  long long navBarStyle
 @property  UIColor *appManagerSectionHeaderTextColor
 @property  UIColor *primaryLabelColor
 @property  UIColor *secondaryLabelColor
 @property  CNContactStyle *contactStyle
 @property  long long defaultBarStyle
 @property  long long statusBarStyle
 @property  long long businessStatusBarStyle
 @property  long long appManagerStatusBarStyle
 @property  long long scrollIndicatorStyle
 @property  UIColor *conversationListBackgroundColor
 @property  UIColor *conversationListCollectionViewBackgroundColor
 @property  UIColor *conversationListCellColor
 @property  UIColor *conversationListChevronColor
 @property  UIColor *conversationListSelectedCellColor
 @property  UIColor *conversationListSenderColor
 @property  UIColor *conversationListSummaryColor
 @property  UIColor *conversationListEditingPinsSummaryColor
 @property  UIColor *conversationListDateColor
 @property  UIColor *conversationListLargeTextDateColor
 @property  UIColor *conversationListGroupCountColor
 @property  UIColor *unreadIndicatorColor
 @property  UIColor *readIndicatorColor
 @property  UIColor *readSelectedIndicatorColor
 @property  UIColor *muteIndicatorTintColor
 @property  UIColor *muteIndicatorHighlightedTintColor
 @property  UIColor *conversationListCellSelectedSummaryColor
 @property  UIColor *conversationListCellSelectedTextColor
 @property  UIColor *conversationListCellSelectedDateColor
 @property  UIColor *conversationListPinnedCellSelectorViewColor
 @property  UIColor *conversationListPinningOnboardingTitleColor
 @property  UIColor *conversationListPinningOnboardingSubtitleColor
 @property  UIColor *conversationListPinnedConversationNameColor
 @property  UIColor *conversationListPinnedConversationNameSelectedColor
 @property  UIColor *conversationListPinnedAdHocConversationRadiantShadowColor
 @property  UIColor *conversationListEmergencyColor
 @property  UIColor *spotlightSearchBackgroundColor
 @property  UIColor *spotlightSearchCellLabelColor
 @property  UIColor *spotlightSearchTitleLabelColor
 @property  UIColor *spotlightSearchCellHairlineColor
 @property  UIColor *spotlightAttachmentSecondaryColor
 @property  UIColor *spotlightSearchBarBackgroundColor
 @property  UIColor *spotlightSearchSegmentedControlBackgroundColor
 @property  UIColor *navBarGrayColor
 @property  UIColor *transcriptSeparatorColor
 @property  UIColor *progressBarTrackTintColor
 @property  UIColor *transcriptNavBarTextColor
 @property  UIColor *transcriptBackgroundColor
 @property  UIColor *transcriptTextColor
 @property  UIColor *transcriptAvailabilityColor
 @property  UIColor *transcriptAvailabilityDeemphasizedColor
 @property  UIColor *transcriptNicknameTextColor
 @property  UIColor *transcriptBigEmojiColor
 @property  UIColor *transcriptDeemphasizedTextColor
 @property  long long transcriptLoadingIndicatorStyle
 @property  UIColor *editableViewUncheckedSymbol
 @property  UIColor *replyLineColor
 @property  UIColor *statusTextColor
 @property  UIColor *transcriptBreadcrumpTextColor
 @property  UIColor *expanseActivityViewIconTintColor
 @property  UIColor *typingIndicatorDotColor
 @property  UIColor *autoloopMuteButtonColor
 @property  UIColor *multiwayBalloonBackgroundColor
 @property  UIColor *multiwayTitleTextColor
 @property  UIColor *multiwayCaptionTextColor
 @property  UIColor *multiwayButtonColor
 @property  UIColor *jellyfishMuteButtonColor
 @property  UIColor *replyTranscriptBlurBackgroundColor
 @property  NSArray *replyTranscriptBlurBackgroundEffects
 @property  UIColor *replyButtonTextColor
 @property  UIColor *replyButtonColor
 @property  UIColor *replyButtonBorderColor
 @property  UIColor *replyButtonShadowColor
 @property  UIColor *quickSaveButtonBurstColor
 @property  UIColor *quickSaveButtonGlyphColor
 @property  UIColor *quickSaveButtonStrokeColor
 @property  UIColor *attachmentBalloonActionColor
 @property  UIColor *attachmentBalloonTitleTextColor
 @property  UIColor *attachmentBalloonSubtitleTextColor
 @property  UIColor *attachmentBalloonRichIconOutlineColor
 @property  UIColor *waveformUnplayedColor
 @property  UIColor *waveformUnplayedColorNewAudioMessagesFlow
 @property  UIColor *waveformDisabledColor
 @property  UIColor *meMentionTextColor
 @property  long long toFieldBackdropStyle
 @property  UIColor *searchResultsBackgroundColor
 @property  UIColor *searchResultsSeperatorColor
 @property  UIColor *entryViewBackgroundColor
 @property  UIColor *entryViewContentBackgroundColor
 @property  long long entryViewStyle
 @property  long long entryViewDarkStyle
 @property  long long keyboardAppearance
 @property  long long keyboardDarkAppearance
 @property  _UIBackdropViewSettings *entryViewBackdropSettings
 @property  _UIBackdropViewSettings *entryViewDarkBackdropSettings
 @property  _UIBackdropViewSettings *entryViewTransparentBackdropSettings
 @property  UIColor *entryFieldButtonColor
 @property  UIColor *entryFieldHighlightedButtonColor
 @property  UIColor *entryFieldDarkEffectButtonColor
 @property  UIColor *entryFieldDarkStyleHighlightedButtonColor
 @property  UIColor *entryFieldBorderColor
 @property  UIColor *entryFieldGrayColor
 @property  UIColor *entryFieldCoverFillColor
 @property  UIColor *entryFieldCoverBorderColor
 @property  UIColor *entryFieldCoverFillDarkColor
 @property  UIColor *entryFieldAudioRecordingBalloonColor
 @property  UIColor *entryFieldDividerColor
 @property  UIColor *entryFieldTextColor
 @property  UIColor *entryFieldPlaceholderColor
 @property  UIColor *entryFieldPlaceholderTextColor
 @property  UIColor *entryFieldDarkTextColor
 @property  UIColor *entryFieldLinkColor
 @property  UIColor *entryFieldConfirmedMentionColor
 @property  UIColor *entryFieldUnconfirmedMentionColor
 @property  UIColor *appStripCoverFillColor
 @property  UIColor *detailsBackgroundColor
 @property  long long detailsBackgroundBlurEffectStyle
 @property  UIColor *detailsSegmentedControlBackgroundColor
 @property  UIColor *recipientsDividerColor
 @property  UIColor *detailsCellStaticTextColor
 @property  UIColor *contactCellTextColor
 @property  UIColor *detailsSelectedCellColor
 @property  UIColor *detailsTextColor
 @property  UIColor *sharedContentsCellTextColor
 @property  UIColor *sharedContentsCellBackgroundColor
 @property  UIColor *contactsTableViewBackgroundColor
 @property  UIColor *contactTableViewCellBackgroundColor
 @property  UIColor *contactTableViewCellContentTextColor
 @property  UIColor *contactTableViewHeaderBackgroundColor
 @property  UIColor *contactsActionButtonColor
 @property  UIColor *contactsActionButtonBackgroundColor
 @property  double contactTableViewContactBackgroundAlpha
 @property  UIColor *detailsGroupPhotoBackgroundColor
 @property  UIColor *detailsHeaderFooterContentViewBackgroundColor
 @property  UIColor *detailsAttachmentsDecorationViewBackgroundColor
 @property  UIColor *detailsCollectionViewBackgroundColor
 @property  UIColor *detailsAddButtonBackgroundColor
 @property  UIColor *activeRecordingDotColor
 @property  UIColor *messageAcknowledgmentPickerBackgroundColor
 @property  UIColor *messageAcknowledgmentBalloonBorderColor
 @property  UIColor *messageAcknowledgmentRedColor
 @property  UIColor *messageAcknowledgmentGrayColor
 @property  UIColor *messageAcknowledgmentWhiteColor
 @property  UIColor *messageAcknowledgmentVotingTextColor
 @property  UIColor *browserBackgroundColor
 @property  UIColor *browserSwitcherGutterColor
 @property  UIColor *browserSwitcherGutterDividerColor
 @property  UIColor *browserSwitcherBorderColor
 @property  UIColor *browserCloseButtonColor
 @property  UIColor *browserAppStripSeperatorBackgroundColor
 @property  double browserAppStripDimmedPluginCellOpacity
 @property  double browserAppStripLightPluginCellOpacity
 @property  UIColor *appGrabberBackgroundColor
 @property  UIColor *appGrabberTitleColor
 @property  UIColor *appGrabberPillColor
 @property  UIColor *appSelectionOutlineColor
 @property  UIColor *fullscreenAppDismissViewColor
 @property  UIImage *appGrabberCloseImage
 @property  UIImage *appSelectionOutline
 @property  UIColor *paddleNameColor
 @property  UIColor *paddleSelectionColor
 @property  UIColor *paddleSeparatorColor
 @property  UIColor *paddleShadowColor
 @property  UIColor *paddleOuterGlow
 @property  UIColor *paddleInnerGlow
 @property  UIColor *paddleShadow
 @property  UIColor *stickerDetailsSubheaderTextColor
 @property  UIColor *stickerPeelBackgroundColor
 @property  UIColor *fsmPickerPrimaryColor
 @property  UIColor *fsmPickerPrimaryColorDarkEffect
 @property  UIColor *fsmPickerPrimaryTintColor
 @property  UIColor *fsmPickerPrimaryTintColorDarkEffect
 @property  UIColor *fsmPickerSecondaryColor
 @property  UIColor *fsmPickerSecondaryColorDarkEffect
 @property  UIColor *fsmPickerPageIndicatorColor
 @property  UIColor *fsmPickerPageIndicatorColorDarkEffect
 @property  UIColor *fsmPickerCurrentPageIndicatorColor
 @property  UIColor *fsmPickerCurrentPageIndicatorColorDarkEffect
 @property  UIColor *fsmPickerSendButtonColor
 @property  UIColor *fsmPickerCloseButtonColor
 @property  UIColor *fsmPickerCloseButtonColorDarkEffect
 @property  UIColor *fsmPickerBackgroundColor
 @property  UIColor *macEffectPickerCloseButtonTintColor
 @property  UIColor *fsmPickerBlueLayerBackgroundColor
 @property  UIColor *fsmPickerBackgroundViewColor
 @property  UIColor *fsmPickerRoundedViewColor
 @property  UIColor *fsmPickerDotColor
 @property  UIColor *businessDescriptionViewControllerBackgroundColor
 @property  UIColor *businessInfoViewGreetingTextColor
 @property  UIColor *businessInfoViewDescriptionTextColor
 @property  UIColor *nicknameViewBackgroundColor
 @property  UIColor *dividerViewBackgroundColor
 @property  UIColor *callButtonBackgroundColor
 @property  UIColor *syncProgressLabelColor
 @property  UIColor *syncProgressUserMessageColor
 @property  UIColor *syncProgressUserActionButtonTextColor
 @property  UIColor *syncProgressIndeterminateProgressBarTintColor
 @property  UIColor *syncProgressActionButtonDisabledColor
 @property  UIColor *carplayNavBarComposeButtonColor
 @property  UIColor *carplayNavBarComposeButtonFocusColor
 @property  UIColor *carplayNavBarComposeButtonColor_Highlight
 @property  UIColor *carplayNavBarComposeButtonFocusColor_Highlight
 @property  UIColor *carplayUnreadImageColor_Light
 @property  UIColor *carplayUnreadImageColor_Highlighted_Light
 @property  UIColor *carplayUnreadImageColor_Dark
 @property  UIColor *carplayUnreadImageColor_Highlighted_Dark
 @property  UIColor *carplayRecipientLabelColor
 @property  UIColor *carplayRecipientLabelFocusColor
 @property  UIColor *carplayDateLabelColor
 @property  UIColor *carplayDateLabelFocusColor
 @property  UIColor *iosMacDetailsButtonColor
 @property  UIColor *iosMacDetailsCellColor

  // instance methods
  -[CKUITheme keyboardAppearance]
  -[CKUITheme statusBarStyle]
  -[CKUITheme messageAcknowledgmentGrayColor]
  -[CKUITheme messageAcknowledgmentRedColor]
  -[CKUITheme ckAcknowledgemntColorTypeForColor:]
  -[CKUITheme appTintColor]
  -[CKUITheme .cxx_destruct]
  -[CKUITheme navBarStyle]
  -[CKUITheme grayTextColor]
  -[CKUITheme secondaryBrandColorForBusinessChat:]
  -[CKUITheme primaryLabelColor]
  -[CKUITheme readIndicatorColor]
  -[CKUITheme conversationListCellSelectedSummaryColor]
  -[CKUITheme conversationListSelectedCellColor]
  -[CKUITheme conversationListPinnedConversationNameColor]
  -[CKUITheme _transcriptBackgroundColor]
  -[CKUITheme _transcriptTextColor]
  -[CKUITheme transcriptTextColor]
  -[CKUITheme gray_balloonColors]
  -[CKUITheme green_balloonColors]
  -[CKUITheme blue_balloonColors]
  -[CKUITheme siri_balloonColors]
  -[CKUITheme setHUDStyle:]
  -[CKUITheme red_balloonColors]
  -[CKUITheme white_balloonColors]
  -[CKUITheme black_balloonColors]
  -[CKUITheme business_balloonColors]
  -[CKUITheme multiway_balloonColors]
  -[CKUITheme background_balloonColors]
  -[CKUITheme reply_gray_balloonColors]
  -[CKUITheme reply_blue_balloonColors]
  -[CKUITheme replyLineColor]
  -[CKUITheme multiwayBalloonBackgroundColor]
  -[CKUITheme gray_unfilledBalloonColor]
  -[CKUITheme green_unfilledBalloonColor]
  -[CKUITheme blue_unfilledBalloonColor]
  -[CKUITheme siri_unfilledBalloonColor]
  -[CKUITheme red_unfilledBalloonColor]
  -[CKUITheme white_unfilledBalloonColor]
  -[CKUITheme black_unfilledBalloonColor]
  -[CKUITheme business_unfilledBalloonColor]
  -[CKUITheme multiway_unfilledBalloonColor]
  -[CKUITheme background_unfilledBalloonColor]
  -[CKUITheme reply_gray_unfilledBalloonColor]
  -[CKUITheme reply_blue_unfilledBalloonColor]
  -[CKUITheme gray_waveformColor]
  -[CKUITheme balloonTextColorForColorType:]
  -[CKUITheme gray_balloonTextColor]
  -[CKUITheme green_balloonTextColor]
  -[CKUITheme blue_balloonTextColor]
  -[CKUITheme siri_balloonTextColor]
  -[CKUITheme red_balloonTextColor]
  -[CKUITheme white_balloonTextColor]
  -[CKUITheme black_balloonTextColor]
  -[CKUITheme business_balloonTextColor]
  -[CKUITheme multiway_balloonTextColor]
  -[CKUITheme background_balloonTextColor]
  -[CKUITheme reply_gray_balloonTextColor]
  -[CKUITheme reply_blue_balloonTextColor]
  -[CKUITheme gray_balloonTextLinkColor]
  -[CKUITheme green_balloonTextLinkColor]
  -[CKUITheme blue_balloonTextLinkColor]
  -[CKUITheme HUDStyle]
  -[CKUITheme siri_balloonTextLinkColor]
  -[CKUITheme red_balloonTextLinkColor]
  -[CKUITheme white_balloonTextLinkColor]
  -[CKUITheme black_balloonTextLinkColor]
  -[CKUITheme business_balloonTextLinkColor]
  -[CKUITheme multiway_balloonTextLinkColor]
  -[CKUITheme background_balloonTextLinkColor]
  -[CKUITheme red_balloonOverlayColor]
  -[CKUITheme reply_gray_balloonTextLinkColor]
  -[CKUITheme reply_blue_balloonTextLinkColor]
  -[CKUITheme gray_balloonOverlayColor]
  -[CKUITheme green_balloonOverlayColor]
  -[CKUITheme blue_balloonOverlayColor]
  -[CKUITheme siri_balloonOverlayColor]
  -[CKUITheme white_balloonOverlayColor]
  -[CKUITheme black_balloonOverlayColor]
  -[CKUITheme business_balloonOverlayColor]
  -[CKUITheme multiway_balloonOverlayColor]
  -[CKUITheme background_balloonOverlayColor]
  -[CKUITheme blue_waveformColor]
  -[CKUITheme reply_gray_balloonOverlayColor]
  -[CKUITheme reply_blue_balloonOverlayColor]
  -[CKUITheme attachmentBalloonTitleTextColor]
  -[CKUITheme green_waveformColor]
  -[CKUITheme siri_waveformColor]
  -[CKUITheme red_waveformColor]
  -[CKUITheme white_waveformColor]
  -[CKUITheme black_waveformColor]
  -[CKUITheme business_waveformColor]
  -[CKUITheme defaultBarStyle]
  -[CKUITheme multiway_waveformColor]
  -[CKUITheme background_waveformColor]
  -[CKUITheme reply_gray_waveformColor]
  -[CKUITheme reply_blue_waveformColor]
  -[CKUITheme gray_progressViewColor]
  -[CKUITheme green_progressViewColor]
  -[CKUITheme blue_progressViewColor]
  -[CKUITheme siri_progressViewColor]
  -[CKUITheme red_progressViewColor]
  -[CKUITheme white_progressViewColor]
  -[CKUITheme black_progressViewColor]
  -[CKUITheme business_progressViewColor]
  -[CKUITheme multiway_progressViewColor]
  -[CKUITheme background_progressViewColor]
  -[CKUITheme reply_gray_progressViewColor]
  -[CKUITheme reply_blue_progressViewColor]
  -[CKUITheme transcriptBackgroundColor]
  -[CKUITheme gray_sendButtonColor]
  -[CKUITheme green_sendButtonColor]
  -[CKUITheme blue_sendButtonColor]
  -[CKUITheme siri_sendButtonColor]
  -[CKUITheme red_sendButtonColor]
  -[CKUITheme white_sendButtonColor]
  -[CKUITheme black_sendButtonColor]
  -[CKUITheme business_sendButtonColor]
  -[CKUITheme multiway_sendButtonColor]
  -[CKUITheme background_sendButtonColor]
  -[CKUITheme reply_gray_sendButtonColor]
  -[CKUITheme reply_blue_sendButtonColor]
  -[CKUITheme balloonColorsForColorType:]
  -[CKUITheme messageAcknowledgmentWhiteColor]
  -[CKUITheme messageAcknowledgmentBalloonColorTypeForStyle:]
  -[CKUITheme sendButtonColorForColorType:]
  -[CKUITheme _primaryBrandColorForBrand:debugAssociatedObject:]
  -[CKUITheme navBarTextStyleForBusinessChat:]
  -[CKUITheme _secondaryBrandColorForBrand:debugAssociatedObject:]
  -[CKUITheme navBarTextStyleForBusinessHandle:]
  -[CKUITheme notificationSubtitleColor]
  -[CKUITheme _businessStatusBarStyleForNavStyle:]
  -[CKUITheme primaryBrandColorForBusinessChat:]
  -[CKUITheme _businessNavBarTextStyleForColor:]
  -[CKUITheme primaryBrandColorForBusinessHandle:]
  -[CKUITheme segmentedControlSelectionTintColor]
  -[CKUITheme messagesControllerBackgroundColor]
  -[CKUITheme shouldOverlayAppBorderImage]
  -[CKUITheme appManagerStatusBarStyle]
  -[CKUITheme appManagerSectionHeaderTextColor]
  -[CKUITheme scrollIndicatorStyle]
  -[CKUITheme conversationListBackgroundColor]
  -[CKUITheme conversationListCollectionViewBackgroundColor]
  -[CKUITheme conversationListChevronColor]
  -[CKUITheme conversationListSenderColor]
  -[CKUITheme unreadIndicatorColor]
  -[CKUITheme readSelectedIndicatorColor]
  -[CKUITheme muteIndicatorTintColor]
  -[CKUITheme navBarGrayColor]
  -[CKUITheme muteIndicatorHighlightedTintColor]
  -[CKUITheme conversationListCellSelectedTextColor]
  -[CKUITheme conversationListCellSelectedDateColor]
  -[CKUITheme conversationListCellColor]
  -[CKUITheme conversationListSummaryColor]
  -[CKUITheme conversationListEditingPinsSummaryColor]
  -[CKUITheme multiwayButtonColor]
  -[CKUITheme conversationListDateColor]
  -[CKUITheme conversationListLargeTextDateColor]
  -[CKUITheme conversationListGroupCountColor]
  -[CKUITheme iosMacDetailsCellColor]
  -[CKUITheme conversationListPinnedCellSelectorViewColor]
  -[CKUITheme conversationListPinningOnboardingTitleColor]
  -[CKUITheme progressBarTrackTintColor]
  -[CKUITheme conversationListPinningOnboardingSubtitleColor]
  -[CKUITheme conversationListPinnedConversationNameSelectedColor]
  -[CKUITheme replyButtonColor]
  -[CKUITheme conversationListPinnedAdHocConversationRadiantShadowColor]
  -[CKUITheme conversationListEmergencyColor]
  -[CKUITheme transcriptSeparatorColor]
  -[CKUITheme spotlightSearchBackgroundColor]
  -[CKUITheme spotlightSearchCellLabelColor]
  -[CKUITheme spotlightSearchTitleLabelColor]
  -[CKUITheme transcriptBigEmojiColor]
  -[CKUITheme spotlightSearchCellHairlineColor]
  -[CKUITheme spotlightAttachmentSecondaryColor]
  -[CKUITheme spotlightSearchSegmentedControlBackgroundColor]
  -[CKUITheme iosMacDetailsButtonColor]
  -[CKUITheme transcriptBreadcrumpTextColor]
  -[CKUITheme expanseActivityViewIconTintColor]
  -[CKUITheme transcriptAvailabilityColor]
  -[CKUITheme transcriptAvailabilityDeemphasizedColor]
  -[CKUITheme transcriptNicknameTextColor]
  -[CKUITheme transcriptDeemphasizedTextColor]
  -[CKUITheme statusTextColor]
  -[CKUITheme transcriptLoadingIndicatorStyle]
  -[CKUITheme typingIndicatorDotColor]
  -[CKUITheme autoloopMuteButtonColor]
  -[CKUITheme multiwayTitleTextColor]
  -[CKUITheme paddleShadow]
  -[CKUITheme multiwayCaptionTextColor]
  -[CKUITheme jellyfishMuteButtonColor]
  -[CKUITheme unfilledBalloonColorForColorType:]
  -[CKUITheme replyButtonTextColor]
  -[CKUITheme balloonTextColorInPrintingPathForColorType:]
  -[CKUITheme balloonTextLinkColorForColorType:]
  -[CKUITheme balloonOverlayColorForColorType:]
  -[CKUITheme replyTranscriptBlurBackgroundColor]
  -[CKUITheme replyTranscriptBlurBackgroundEffects]
  -[CKUITheme replyButtonBorderColor]
  -[CKUITheme meMentionTextColor]
  -[CKUITheme replyButtonShadowColor]
  -[CKUITheme quickSaveButtonBurstColor]
  -[CKUITheme quickSaveButtonGlyphColor]
  -[CKUITheme quickSaveButtonStrokeColor]
  -[CKUITheme attachmentBalloonActionColor]
  -[CKUITheme attachmentBalloonSubtitleTextColor]
  -[CKUITheme attachmentBalloonRichIconOutlineColor]
  -[CKUITheme waveformColorForColorType:]
  -[CKUITheme progressViewColorForColorType:]
  -[CKUITheme waveformUnplayedColor]
  -[CKUITheme waveformDisabledColor]
  -[CKUITheme waveformUnplayedColorNewAudioMessagesFlow]
  -[CKUITheme recipientTextColorForColorType:]
  -[CKUITheme toFieldBackdropStyle]
  -[CKUITheme entryViewStyle]
  -[CKUITheme searchResultsBackgroundColor]
  -[CKUITheme entryViewDarkStyle]
  -[CKUITheme keyboardDarkAppearance]
  -[CKUITheme entryViewBackdropSettings]
  -[CKUITheme paddleShadowColor]
  -[CKUITheme entryViewDarkBackdropSettings]
  -[CKUITheme entryViewTransparentBackdropSettings]
  -[CKUITheme applyPayCashSendButtonColorForEntryViewStyle:]
  -[CKUITheme entryFieldButtonColor]
  -[CKUITheme entryFieldHighlightedButtonColor]
  -[CKUITheme entryFieldDarkEffectButtonColor]
  -[CKUITheme entryFieldBorderColor]
  -[CKUITheme entryFieldDarkStyleHighlightedButtonColor]
  -[CKUITheme entryFieldGrayColor]
  -[CKUITheme entryFieldCoverFillColor]
  -[CKUITheme entryFieldCoverBorderColor]
  -[CKUITheme entryFieldCoverFillDarkColor]
  -[CKUITheme entryFieldDividerColor]
  -[CKUITheme entryFieldPlaceholderColor]
  -[CKUITheme entryFieldTextColor]
  -[CKUITheme detailsTextColor]
  -[CKUITheme entryFieldPlaceholderTextColor]
  -[CKUITheme entryFieldDarkTextColor]
  -[CKUITheme entryFieldLinkColor]
  -[CKUITheme entryFieldAudioRecordingBalloonColor]
  -[CKUITheme entryFieldConfirmedMentionColor]
  -[CKUITheme entryFieldUnconfirmedMentionColor]
  -[CKUITheme appStripCoverFillColor]
  -[CKUITheme entryViewBackgroundColor]
  -[CKUITheme entryViewContentBackgroundColor]
  -[CKUITheme detailsBackgroundColor]
  -[CKUITheme detailsBackgroundBlurEffectStyle]
  -[CKUITheme recipientsDividerColor]
  -[CKUITheme contactCellTextColor]
  -[CKUITheme detailsSelectedCellColor]
  -[CKUITheme sharedContentsCellTextColor]
  -[CKUITheme sharedContentsCellBackgroundColor]
  -[CKUITheme detailsSegmentedControlBackgroundColor]
  -[CKUITheme contactsTableViewBackgroundColor]
  -[CKUITheme contactTableViewCellBackgroundColor]
  -[CKUITheme contactTableViewHeaderBackgroundColor]
  -[CKUITheme contactTableViewCellContentTextColor]
  -[CKUITheme contactsActionButtonColor]
  -[CKUITheme contactsActionButtonBackgroundColor]
  -[CKUITheme contactTableViewContactBackgroundAlpha]
  -[CKUITheme detailsGroupPhotoBackgroundColor]
  -[CKUITheme detailsCollectionViewBackgroundColor]
  -[CKUITheme detailsHeaderFooterContentViewBackgroundColor]
  -[CKUITheme detailsAddButtonBackgroundColor]
  -[CKUITheme detailsAttachmentsDecorationViewBackgroundColor]
  -[CKUITheme activeRecordingDotColor]
  -[CKUITheme messageAcknowledgmentPickerBackgroundColor]
  -[CKUITheme messageAcknowledgmentBalloonBorderColor]
  -[CKUITheme messageAcknowledgmentVotingTextColor]
  -[CKUITheme browserBackgroundColor]
  -[CKUITheme paddleNameColor]
  -[CKUITheme messageAcknowledgment:acknowledgmentImageColor:]
  -[CKUITheme messageAcknowledgment:selectedAcknowledgmentImageColor:]
  -[CKUITheme messageAcknowledgmentBalloonColorForStyle:]
  -[CKUITheme messageAcknowledgmentSelectedBalloonColorForStyle:]
  -[CKUITheme appGrabberTitleColor]
  -[CKUITheme browserSwitcherGutterColor]
  -[CKUITheme browserSwitcherGutterDividerColor]
  -[CKUITheme browserSwitcherBorderColor]
  -[CKUITheme browserCloseButtonColor]
  -[CKUITheme browserAppStripSeperatorBackgroundColor]
  -[CKUITheme browserAppStripDimmedPluginCellOpacity]
  -[CKUITheme appGrabberBackgroundColor]
  -[CKUITheme browserAppStripLightPluginCellOpacity]
  -[CKUITheme appGrabberPillColor]
  -[CKUITheme appSelectionOutlineColor]
  -[CKUITheme fullscreenAppDismissViewColor]
  -[CKUITheme appGrabberCloseImage]
  -[CKUITheme appSelectionOutline]
  -[CKUITheme paddleSelectionColor]
  -[CKUITheme paddleSeparatorColor]
  -[CKUITheme paddleOuterGlow]
  -[CKUITheme paddleInnerGlow]
  -[CKUITheme stickerDetailsSubheaderTextColor]
  -[CKUITheme stickerPeelBackgroundColor]
  -[CKUITheme fsmPickerPrimaryColor]
  -[CKUITheme fsmPickerPrimaryColorDarkEffect]
  -[CKUITheme fsmPickerPrimaryTintColor]
  -[CKUITheme fsmPickerPrimaryTintColorDarkEffect]
  -[CKUITheme fsmPickerSecondaryColor]
  -[CKUITheme fsmPickerPageIndicatorColor]
  -[CKUITheme fsmPickerSecondaryColorDarkEffect]
  -[CKUITheme fsmPickerPageIndicatorColorDarkEffect]
  -[CKUITheme fsmPickerCurrentPageIndicatorColor]
  -[CKUITheme fsmPickerCurrentPageIndicatorColorDarkEffect]
  -[CKUITheme fsmPickerCloseButtonColor]
  -[CKUITheme fsmPickerCloseButtonColorDarkEffect]
  -[CKUITheme fsmPickerSendButtonColor]
  -[CKUITheme fsmPickerBackgroundColor]
  -[CKUITheme fsmPickerRoundedViewColor]
  -[CKUITheme macEffectPickerCloseButtonTintColor]
  -[CKUITheme fsmPickerBlueLayerBackgroundColor]
  -[CKUITheme fsmPickerBackgroundViewColor]
  -[CKUITheme fsmPickerDotColor]
  -[CKUITheme businessInfoViewGreetingTextColor]
  -[CKUITheme businessDescriptionViewControllerBackgroundColor]
  -[CKUITheme businessInfoViewDescriptionTextColor]
  -[CKUITheme nicknameViewBackgroundColor]
  -[CKUITheme statusBarStyleForBusinessChat:]
  -[CKUITheme statusBarStyleForBusinessHandle:]
  -[CKUITheme secondaryBrandColorForBusinessHandle:]
  -[CKUITheme dividerViewBackgroundColor]
  -[CKUITheme callButtonBackgroundColor]
  -[CKUITheme syncProgressLabelColor]
  -[CKUITheme syncProgressUserMessageColor]
  -[CKUITheme syncProgressUserActionButtonTextColor]
  -[CKUITheme syncProgressIndeterminateProgressBarTintColor]
  -[CKUITheme carplayNavBarComposeButtonColor]
  -[CKUITheme syncProgressActionButtonDisabledColor]
  -[CKUITheme carplayNavBarComposeButtonFocusColor]
  -[CKUITheme carplayUnreadImageColor_Light]
  -[CKUITheme carplayNavBarComposeButtonColor_Highlight]
  -[CKUITheme carplayNavBarComposeButtonFocusColor_Highlight]
  -[CKUITheme carplayRecipientLabelColor]
  -[CKUITheme carplayUnreadImageColor_Highlighted_Light]
  -[CKUITheme carplayUnreadImageColor_Dark]
  -[CKUITheme carplayUnreadImageColor_Highlighted_Dark]
  -[CKUITheme carplayRecipientLabelFocusColor]
  -[CKUITheme carplayDateLabelColor]
  -[CKUITheme carplayDateLabelFocusColor]
  -[CKUITheme darkAppTintColor]
  -[CKUITheme businessStatusBarStyle]
  -[CKUITheme spotlightSearchBarBackgroundColor]
  -[CKUITheme transcriptNavBarTextColor]
  -[CKUITheme editableViewUncheckedSymbol]
  -[CKUITheme searchResultsSeperatorColor]
  -[CKUITheme detailsCellStaticTextColor]
  -[CKUITheme secondaryLabelColor]
  -[CKUITheme lightGrayColor]
  -[CKUITheme contactStyle]


CKUIThemeHUD : CKUITheme
  // instance methods
  -[CKUIThemeHUD keyboardAppearance]
  -[CKUIThemeHUD green_sendButtonColor]
  -[CKUIThemeHUD blue_sendButtonColor]
  -[CKUIThemeHUD siri_sendButtonColor]
  -[CKUIThemeHUD entryFieldButtonColor]
  -[CKUIThemeHUD entryFieldCoverFillColor]
  -[CKUIThemeHUD entryFieldCoverBorderColor]
  -[CKUIThemeHUD entryFieldTextColor]
  -[CKUIThemeHUD entryFieldAudioRecordingBalloonColor]


CKUIThemeNano : CKUITheme
  // instance methods
  -[CKUIThemeNano messageAcknowledgmentGrayColor]
  -[CKUIThemeNano messageAcknowledgmentRedColor]
  -[CKUIThemeNano transcriptTextColor]
  -[CKUIThemeNano reply_gray_balloonColors]
  -[CKUIThemeNano replyLineColor]
  -[CKUIThemeNano gray_unfilledBalloonColor]
  -[CKUIThemeNano reply_gray_balloonTextColor]
  -[CKUIThemeNano attachmentBalloonTitleTextColor]
  -[CKUIThemeNano transcriptBackgroundColor]
  -[CKUIThemeNano blue_sendButtonColor]
  -[CKUIThemeNano messageAcknowledgmentWhiteColor]
  -[CKUIThemeNano notificationSubtitleColor]
  -[CKUIThemeNano messagesControllerBackgroundColor]
  -[CKUIThemeNano conversationListSenderColor]
  -[CKUIThemeNano conversationListSummaryColor]
  -[CKUIThemeNano conversationListDateColor]
  -[CKUIThemeNano conversationListGroupCountColor]
  -[CKUIThemeNano progressBarTrackTintColor]
  -[CKUIThemeNano transcriptBigEmojiColor]
  -[CKUIThemeNano transcriptBreadcrumpTextColor]
  -[CKUIThemeNano transcriptNicknameTextColor]
  -[CKUIThemeNano transcriptDeemphasizedTextColor]
  -[CKUIThemeNano attachmentBalloonSubtitleTextColor]
  -[CKUIThemeNano messageAcknowledgmentBalloonBorderColor]
  -[CKUIThemeNano browserBackgroundColor]
  -[CKUIThemeNano messageAcknowledgment:acknowledgmentImageColor:]
  -[CKUIThemeNano messageAcknowledgment:selectedAcknowledgmentImageColor:]
  -[CKUIThemeNano messageAcknowledgmentBalloonColorForStyle:]
  -[CKUIThemeNano transcriptNavBarTextColor]
  -[CKUIThemeNano transcriptReplyCountColor]


CKUIThemeNotification : CKUITheme
  // instance methods
  -[CKUIThemeNotification entryViewStyle]
  -[CKUIThemeNotification entryFieldPlaceholderColor]
  -[CKUIThemeNotification entryViewBackgroundColor]


CKUIThemeMac : CKUITheme
  // instance methods
  -[CKUIThemeMac conversationListCellSelectedSummaryColor]
  -[CKUIThemeMac gray_balloonOverlayColor]
  -[CKUIThemeMac blue_balloonOverlayColor]
  -[CKUIThemeMac conversationListBackgroundColor]
  -[CKUIThemeMac conversationListCollectionViewBackgroundColor]
  -[CKUIThemeMac conversationListSenderColor]
  -[CKUIThemeMac readSelectedIndicatorColor]
  -[CKUIThemeMac conversationListCellSelectedTextColor]
  -[CKUIThemeMac conversationListCellSelectedDateColor]
  -[CKUIThemeMac conversationListCellColor]
  -[CKUIThemeMac conversationListSummaryColor]
  -[CKUIThemeMac conversationListEditingPinsSummaryColor]
  -[CKUIThemeMac conversationListDateColor]
  -[CKUIThemeMac iosMacDetailsCellColor]
  -[CKUIThemeMac conversationListPinnedCellSelectorViewColor]
  -[CKUIThemeMac conversationListPinnedConversationNameSelectedColor]
  -[CKUIThemeMac spotlightSearchBackgroundColor]
  -[CKUIThemeMac spotlightSearchSegmentedControlBackgroundColor]
  -[CKUIThemeMac quickSaveButtonGlyphColor]
  -[CKUIThemeMac entryFieldButtonColor]
  -[CKUIThemeMac contactsActionButtonBackgroundColor]
  -[CKUIThemeMac detailsGroupPhotoBackgroundColor]
  -[CKUIThemeMac detailsCollectionViewBackgroundColor]
  -[CKUIThemeMac detailsHeaderFooterContentViewBackgroundColor]
  -[CKUIThemeMac detailsAddButtonBackgroundColor]
  -[CKUIThemeMac detailsAttachmentsDecorationViewBackgroundColor]
  -[CKUIThemeMac paddleSeparatorColor]
  -[CKUIThemeMac spotlightSearchBarBackgroundColor]


CKReplyContextAggregateAttachmentMessagePartChatItem : CKAggregateAttachmentMessagePartChatItem <CKReplyContext>
  // instance methods
  -[CKReplyContextAggregateAttachmentMessagePartChatItem isEditable]
  -[CKReplyContextAggregateAttachmentMessagePartChatItem balloonViewClass]
  -[CKReplyContextAggregateAttachmentMessagePartChatItem replyIsFromMe]
  -[CKReplyContextAggregateAttachmentMessagePartChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKReplyContextAggregateAttachmentMessagePartChatItem loadTranscriptDrawerText]
  -[CKReplyContextAggregateAttachmentMessagePartChatItem isReplyContextPreview]
  -[CKReplyContextAggregateAttachmentMessagePartChatItem cellClass]
  -[CKReplyContextAggregateAttachmentMessagePartChatItem canForward]


CKActionMenuGestureRecognizerButton : NSObject
 @property  CKActionMenuGestureRecognizer *gestureRecognizer
 @property  UIButton *button
 @property  NSDate *gestureDidBeginDate
 @property  <CKActionMenuGestureRecognizerButtonDelegate> *delegate

  // class methods
  +[CKActionMenuGestureRecognizerButton actionMenuGestureRecognizerButtonWithButton:]

  // instance methods
  -[CKActionMenuGestureRecognizerButton setGestureRecognizer:]
  -[CKActionMenuGestureRecognizerButton gestureRecognizer]
  -[CKActionMenuGestureRecognizerButton .cxx_destruct]
  -[CKActionMenuGestureRecognizerButton button]
  -[CKActionMenuGestureRecognizerButton setDelegate:]
  -[CKActionMenuGestureRecognizerButton setButton:]
  -[CKActionMenuGestureRecognizerButton gestureRecognized:]
  -[CKActionMenuGestureRecognizerButton initWithGestureRecognizer:button:]
  -[CKActionMenuGestureRecognizerButton touchDownButton:]
  -[CKActionMenuGestureRecognizerButton touchUpInsideButton:]
  -[CKActionMenuGestureRecognizerButton touchUpOutsideButton:]
  -[CKActionMenuGestureRecognizerButton setGestureDidBeginDate:]
  -[CKActionMenuGestureRecognizerButton gestureDidBeginDate]
  -[CKActionMenuGestureRecognizerButton delegate]


CKBigEmojiBalloonView : CKTextBalloonView
  // instance methods
  -[CKBigEmojiBalloonView clearFilters]
  -[CKBigEmojiBalloonView accessibilityIdentifier]
  -[CKBigEmojiBalloonView addFilter:]
  -[CKBigEmojiBalloonView setHasOverlay:autoDismiss:]
  -[CKBigEmojiBalloonView invisibleInkEffectViewClass]
  -[CKBigEmojiBalloonView invisibleInkEffectViewWasUncovered]
  -[CKBigEmojiBalloonView attachInvisibleInkEffectView]
  -[CKBigEmojiBalloonView detachInvisibleInkEffectView]
  -[CKBigEmojiBalloonView setImage:]
  -[CKBigEmojiBalloonView hasBackground]
  -[CKBigEmojiBalloonView setGradientReferenceView:]
  -[CKBigEmojiBalloonView alignmentRectInsets]


CKAvatarNotificationCalloutView : UIView <CAAnimationDelegate>
 @property  UITextView *textView
 @property  UIImageView *tailImageView
 @property  CAAnimation *starterAniamtion
 @property  CAAnimation *finisherAnimation
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  long long mode
 @property  <CKAvatarNotificationCalloutViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAvatarNotificationCalloutView textView]
  -[CKAvatarNotificationCalloutView setTapGestureRecognizer:]
  -[CKAvatarNotificationCalloutView .cxx_destruct]
  -[CKAvatarNotificationCalloutView layoutSubviews]
  -[CKAvatarNotificationCalloutView setDelegate:]
  -[CKAvatarNotificationCalloutView animationDidStop:finished:]
  -[CKAvatarNotificationCalloutView animateIn]
  -[CKAvatarNotificationCalloutView tapGestureRecognizer]
  -[CKAvatarNotificationCalloutView animateOut]
  -[CKAvatarNotificationCalloutView tailImageView]
  -[CKAvatarNotificationCalloutView animationDidStart:]
  -[CKAvatarNotificationCalloutView sizeThatFits:]
  -[CKAvatarNotificationCalloutView _handleTap:]
  -[CKAvatarNotificationCalloutView setTextView:]
  -[CKAvatarNotificationCalloutView _shouldShowShadow]
  -[CKAvatarNotificationCalloutView pointInside:withEvent:]
  -[CKAvatarNotificationCalloutView setTailImageView:]
  -[CKAvatarNotificationCalloutView setStarterAniamtion:]
  -[CKAvatarNotificationCalloutView setFinisherAnimation:]
  -[CKAvatarNotificationCalloutView starterAniamtion]
  -[CKAvatarNotificationCalloutView finisherAnimation]
  -[CKAvatarNotificationCalloutView delegate]
  -[CKAvatarNotificationCalloutView initWithFrame:previewText:mode:]
  -[CKAvatarNotificationCalloutView setMode:]
  -[CKAvatarNotificationCalloutView mode]


CKInvisibleInkTextEffectView : CKInvisibleInkEffectView <CAAnimationDelegate>
 @property  CKTextBalloonView *balloonView
 @property  UITextView *textView
 @property  CAEmitterLayer *textDrawEmitterLayer
 @property  CALayer *dustEmitterContainerLayer
 @property  NSArray *dustEmitterLayers
 @property  CAEmitterLayer *dustDrawEmitterLayer
 @property  BOOL blendingEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKInvisibleInkTextEffectView textView]
  -[CKInvisibleInkTextEffectView setSuspended:]
  -[CKInvisibleInkTextEffectView .cxx_destruct]
  -[CKInvisibleInkTextEffectView layoutSubviews]
  -[CKInvisibleInkTextEffectView createDrawEmitter]
  -[CKInvisibleInkTextEffectView endDrawEmitterEffects]
  -[CKInvisibleInkTextEffectView moveEmittersForTouchesBegan:]
  -[CKInvisibleInkTextEffectView touchesBegan:withEvent:]
  -[CKInvisibleInkTextEffectView moveEmittersWithTouches:]
  -[CKInvisibleInkTextEffectView moveEmittersForTouchesMoved:]
  -[CKInvisibleInkTextEffectView endEmittersForTouchesEnded:]
  -[CKInvisibleInkTextEffectView endEmittersForTouchesCancelled:]
  -[CKInvisibleInkTextEffectView attachToBalloonView:]
  -[CKInvisibleInkTextEffectView detachFromBalloonView]
  -[CKInvisibleInkTextEffectView blendingEnabled]
  -[CKInvisibleInkTextEffectView balloonView]
  -[CKInvisibleInkTextEffectView animationDidStop:finished:]
  -[CKInvisibleInkTextEffectView dustEmitter]
  -[CKInvisibleInkTextEffectView touchesMoved:withEvent:]
  -[CKInvisibleInkTextEffectView reset]
  -[CKInvisibleInkTextEffectView touchesCancelled:withEvent:]
  -[CKInvisibleInkTextEffectView setTextView:]
  -[CKInvisibleInkTextEffectView setPaused:]
  -[CKInvisibleInkTextEffectView initWithFrame:]
  -[CKInvisibleInkTextEffectView dustDrawEmitterLayer]
  -[CKInvisibleInkTextEffectView setDustEmitterContainerLayer:]
  -[CKInvisibleInkTextEffectView setTextDrawEmitterLayer:]
  -[CKInvisibleInkTextEffectView dustEmitterContainerLayer]
  -[CKInvisibleInkTextEffectView setDustDrawEmitterLayer:]
  -[CKInvisibleInkTextEffectView endDustEmitterLayerFingerEffects:]
  -[CKInvisibleInkTextEffectView dustEmitterLayers]
  -[CKInvisibleInkTextEffectView didMoveToWindow]
  -[CKInvisibleInkTextEffectView textDrawEmitterLayer]
  -[CKInvisibleInkTextEffectView setDustEmitterLayers:]
  -[CKInvisibleInkTextEffectView setBalloonView:]
  -[CKInvisibleInkTextEffectView updateDustCellColor]
  -[CKInvisibleInkTextEffectView cullSubviewsWithVisibleBounds:]
  -[CKInvisibleInkTextEffectView setBlendingEnabled:]
  -[CKInvisibleInkTextEffectView endTouches]
  -[CKInvisibleInkTextEffectView touchesEnded:withEvent:]


CKAttachmentSaver : NSObject
  // instance methods
  -[CKAttachmentSaver _pop]
  -[CKAttachmentSaver .cxx_destruct]
  -[CKAttachmentSaver _saveCompletion:]
  -[CKAttachmentSaver _saveNextAttachment]
  -[CKAttachmentSaver runToCompletion]
  -[CKAttachmentSaver _saveCompletionForVideoWithPath:error:context:]
  -[CKAttachmentSaver popAndSaveNextAttachment]
  -[CKAttachmentSaver initWithAttachments:]
  -[CKAttachmentSaver _saveCompletionForImage:error:context:]


CKAttachmentCollectionView : UICollectionView
  // instance methods
  -[CKAttachmentCollectionView setContentInset:]


CKDetailsPhotosViewController : CKViewController <CKFeedCollectionViewLayoutDelegate, CKAttachmentCellDelegate, CKFeedCollectionViewLayoutDatasource, CKQLPreviewControllerDelegate, UICollectionViewDragSource, UIViewControllerPreviewingDelegate, UIViewControllerPreviewingDelegate_Private, UIGestureRecognizerDelegate, UICollectionViewDataSource, QLPreviewControllerDelegate, CKSharedAssetsControllerProtocol>
 @property  NSArray *mediaObjects
 @property  CKAttachmentCollectionView *collectionView
 @property  CKFeedCollectionViewLayout *feedLayout
 @property  CKQLDetailsPreviewController *qlPreviewController
 @property  BOOL initialLoad
 @property  UIBarButtonItem *saveButton
 @property  UIBarButtonItem *deleteButton
 @property  BOOL selectingAttachments
 @property  NSArray *visibleMediaObjects
 @property  UIBarButtonItem *parentRightBarButtonItem
 @property  <CKSharedAssetsControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDetailsPhotosViewController collectionView:cellForItemAtIndexPath:]
  -[CKDetailsPhotosViewController collectionView:numberOfItemsInSection:]
  -[CKDetailsPhotosViewController previewControllerDidDismiss:]
  -[CKDetailsPhotosViewController collectionView:shouldShowMenuForItemAtIndexPath:]
  -[CKDetailsPhotosViewController assetType]
  -[CKDetailsPhotosViewController collectionView:performAction:forItemAtIndexPath:withSender:]
  -[CKDetailsPhotosViewController numberOfSectionsInCollectionView:]
  -[CKDetailsPhotosViewController setDeleteButton:]
  -[CKDetailsPhotosViewController collectionView:didDeselectItemAtIndexPath:]
  -[CKDetailsPhotosViewController collectionView:canPerformAction:forItemAtIndexPath:withSender:]
  -[CKDetailsPhotosViewController collectionView:didSelectItemAtIndexPath:]
  -[CKDetailsPhotosViewController collectionView:shouldSelectItemAtIndexPath:]
  -[CKDetailsPhotosViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKDetailsPhotosViewController isInitialLoad]
  -[CKDetailsPhotosViewController .cxx_destruct]
  -[CKDetailsPhotosViewController didMoveToParentViewController:]
  -[CKDetailsPhotosViewController setDelegate:]
  -[CKDetailsPhotosViewController collectionView]
  -[CKDetailsPhotosViewController committedViewControllerForPreviewViewController:]
  -[CKDetailsPhotosViewController _collectionView:dragItemsForItemAtIndexPath:]
  -[CKDetailsPhotosViewController setCollectionView:]
  -[CKDetailsPhotosViewController previewingContext:viewControllerForLocation:]
  -[CKDetailsPhotosViewController feedLayout]
  -[CKDetailsPhotosViewController previewController:frameForPreviewItem:inSourceView:]
  -[CKDetailsPhotosViewController saveButton]
  -[CKDetailsPhotosViewController previewController:shouldOpenURL:forPreviewItem:]
  -[CKDetailsPhotosViewController viewWillDisappear:]
  -[CKDetailsPhotosViewController viewDidLayoutSubviews]
  -[CKDetailsPhotosViewController gestureRecognizer:shouldReceiveTouch:]
  -[CKDetailsPhotosViewController delegate]
  -[CKDetailsPhotosViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKDetailsPhotosViewController mediaObjects]
  -[CKDetailsPhotosViewController setInitialLoad:]
  -[CKDetailsPhotosViewController setMediaObjects:]
  -[CKDetailsPhotosViewController setFeedLayout:]
  -[CKDetailsPhotosViewController _faultInAttachments]
  -[CKDetailsPhotosViewController setSelectingAttachments:]
  -[CKDetailsPhotosViewController viewDidAppearDeferredSetup]
  -[CKDetailsPhotosViewController _prewarmNextChunk]
  -[CKDetailsPhotosViewController visibleMediaObjects]
  -[CKDetailsPhotosViewController _configureCell:withCollectionView:forItemAtIndexPath:]
  -[CKDetailsPhotosViewController _updateToolbar]
  -[CKDetailsPhotosViewController isSelectingAttachments]
  -[CKDetailsPhotosViewController setVisibleMediaObjects:]
  -[CKDetailsPhotosViewController _iconForFileURL:UTIType:]
  -[CKDetailsPhotosViewController selectedAttachmentIndexes]
  -[CKDetailsPhotosViewController _saveSelectedAttachments:]
  -[CKDetailsPhotosViewController _deleteSelectedAttachments:]
  -[CKDetailsPhotosViewController selectAttachments:]
  -[CKDetailsPhotosViewController setParentRightBarButtonItem:]
  -[CKDetailsPhotosViewController parentRightBarButtonItem]
  -[CKDetailsPhotosViewController _saveAttachments:]
  -[CKDetailsPhotosViewController _deleteAttachments:]
  -[CKDetailsPhotosViewController qlPreviewController]
  -[CKDetailsPhotosViewController contentSizeThatFits:]
  -[CKDetailsPhotosViewController collectionView:layout:shouldHideSection:]
  -[CKDetailsPhotosViewController performAction:forAttachmentCell:]
  -[CKDetailsPhotosViewController collectionView:layout:typeForSection:]
  -[CKDetailsPhotosViewController collectionView:layout:contentInsetsForSection:]
  -[CKDetailsPhotosViewController attachmentCellTapped:]
  -[CKDetailsPhotosViewController collectionView:layout:imageSizeForTileAtIndexPath:]
  -[CKDetailsPhotosViewController collectionView:layout:mininumSizeForTileAtIndexPath:]
  -[CKDetailsPhotosViewController collectionView:layout:shouldShowCaptionForTileAtIndexPath:]
  -[CKDetailsPhotosViewController collectionView:layout:sizeForThumbnailInSection:]
  -[CKDetailsPhotosViewController collectionView:layout:captionSizeForTileAtIndexPath:proposedSize:]
  -[CKDetailsPhotosViewController collectionView:layout:batchIDForTileAtIndexPath:]
  -[CKDetailsPhotosViewController collectionView:layout:referenceMaximumLength:minimumNumberOfTilesToOmit:forSection:]
  -[CKDetailsPhotosViewController numberOfSectionsInFeedLayout:]
  -[CKDetailsPhotosViewController collectionView:layout:sizeForRowAtIndexPath:proposedSize:]
  -[CKDetailsPhotosViewController collectionView:layout:shouldJoinSection:withSection:]
  -[CKDetailsPhotosViewController collectionView:layout:metricsForSeparatorBetweenRowAtIndexPath:andRowAtIndexPath:proposedMetrics:]
  -[CKDetailsPhotosViewController collectionView:layout:shouldHideHeaderInSection:]
  -[CKDetailsPhotosViewController collectionView:layout:sizeForHeaderOfSections:proposedSize:]
  -[CKDetailsPhotosViewController dealloc]
  -[CKDetailsPhotosViewController collectionView:layout:sizeForFooterInSection:proposedSize:]
  -[CKDetailsPhotosViewController collectionView:layout:groupIDForSection:]
  -[CKDetailsPhotosViewController setSaveButton:]
  -[CKDetailsPhotosViewController collectionView:layout:metricsForSeparatorBetweenSection:andSection:proposedMetrics:]
  -[CKDetailsPhotosViewController previewController:canShareItem:]
  -[CKDetailsPhotosViewController collectionView:layout:headerSizeForGroupID:proposedSize:]
  -[CKDetailsPhotosViewController invisibleInkEffectControllerForPreviewController:]
  -[CKDetailsPhotosViewController collectionView:layout:spacingBetweenSection:andHeaderForGroupID:]
  -[CKDetailsPhotosViewController numberOfItemsInSection:forFeedLayout:]
  -[CKDetailsPhotosViewController _invalidateCaches]
  -[CKDetailsPhotosViewController previewControllerDidCancelDismiss:]
  -[CKDetailsPhotosViewController reloadData]
  -[CKDetailsPhotosViewController updateAttachmentItems:]
  -[CKDetailsPhotosViewController parentScrollViewDidScroll:]
  -[CKDetailsPhotosViewController isDisplayingAttachmentContent]
  -[CKDetailsPhotosViewController initWithAttachmentItems:]
  -[CKDetailsPhotosViewController previewController:transitionViewForPreviewItem:uncroppedSourceFrame:realSize:]
  -[CKDetailsPhotosViewController setQlPreviewController:]
  -[CKDetailsPhotosViewController willPresentPreviewViewController:forLocation:inSourceView:]
  -[CKDetailsPhotosViewController loadView]
  -[CKDetailsPhotosViewController viewDidDisappear:]
  -[CKDetailsPhotosViewController deleteButton]
  -[CKDetailsPhotosViewController didReceiveMemoryWarning]
  -[CKDetailsPhotosViewController didDismissPreviewViewController:committing:]
  -[CKDetailsPhotosViewController previewingContext:commitViewController:]


CKOrganicImageLivePhotoBalloonView : CKLivePhotoBalloonView
  // instance methods
  -[CKOrganicImageLivePhotoBalloonView canUseOpaqueMask]
  -[CKOrganicImageLivePhotoBalloonView setFrame:]
  -[CKOrganicImageLivePhotoBalloonView prepareForReuse]
  -[CKOrganicImageLivePhotoBalloonView balloonDescriptor]


CKSharedContentsViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource, CNAvatarViewDelegate, UICollectionViewDragSource, UIViewControllerPreviewingDelegate, CKQLPreviewControllerDelegate, UIGestureRecognizerDelegate, CKSharedContentsCollectionViewCellDelegate, CKSharedAssetsControllerProtocol, QLPreviewControllerDelegate>
 @property  UICollectionViewFlowLayout *collectionviewLayout
 @property  CKQLDetailsPreviewController *qlPreviewController
 @property  UIView *topmostMarkerView
 @property  NSArray *attachmentItems
 @property  BOOL selectingAttachments
 @property  UIBarButtonItem *saveButton
 @property  UIBarButtonItem *deleteButton
 @property  NSArray *parentRightBarButtonItemsToRestore
 @property  UICollectionView *collectionView
 @property  <CKSharedAssetsControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKSharedContentsViewController collectionView:cellForItemAtIndexPath:]
  -[CKSharedContentsViewController collectionView:numberOfItemsInSection:]
  -[CKSharedContentsViewController previewControllerDidDismiss:]
  -[CKSharedContentsViewController collectionView:shouldShowMenuForItemAtIndexPath:]
  -[CKSharedContentsViewController assetType]
  -[CKSharedContentsViewController collectionView:performAction:forItemAtIndexPath:withSender:]
  -[CKSharedContentsViewController numberOfSectionsInCollectionView:]
  -[CKSharedContentsViewController setDeleteButton:]
  -[CKSharedContentsViewController collectionView:didDeselectItemAtIndexPath:]
  -[CKSharedContentsViewController collectionView:canPerformAction:forItemAtIndexPath:withSender:]
  -[CKSharedContentsViewController collectionView:didSelectItemAtIndexPath:]
  -[CKSharedContentsViewController viewWillLayoutSubviews]
  -[CKSharedContentsViewController attachmentItems]
  -[CKSharedContentsViewController collectionView:shouldSelectItemAtIndexPath:]
  -[CKSharedContentsViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKSharedContentsViewController .cxx_destruct]
  -[CKSharedContentsViewController didMoveToParentViewController:]
  -[CKSharedContentsViewController setDelegate:]
  -[CKSharedContentsViewController collectionView]
  -[CKSharedContentsViewController presentingViewControllerForAvatarView:]
  -[CKSharedContentsViewController committedViewControllerForPreviewViewController:]
  -[CKSharedContentsViewController _collectionView:dragItemsForItemAtIndexPath:]
  -[CKSharedContentsViewController setAttachmentItems:]
  -[CKSharedContentsViewController setCollectionView:]
  -[CKSharedContentsViewController previewingContext:viewControllerForLocation:]
  -[CKSharedContentsViewController previewController:frameForPreviewItem:inSourceView:]
  -[CKSharedContentsViewController saveButton]
  -[CKSharedContentsViewController previewController:shouldOpenURL:forPreviewItem:]
  -[CKSharedContentsViewController updateToolbar]
  -[CKSharedContentsViewController gestureRecognizer:shouldReceiveTouch:]
  -[CKSharedContentsViewController delegate]
  -[CKSharedContentsViewController setSelectingAttachments:]
  -[CKSharedContentsViewController isSelectingAttachments]
  -[CKSharedContentsViewController selectedAttachmentIndexes]
  -[CKSharedContentsViewController qlPreviewController]
  -[CKSharedContentsViewController contentSizeThatFits:]
  -[CKSharedContentsViewController dealloc]
  -[CKSharedContentsViewController setSaveButton:]
  -[CKSharedContentsViewController invisibleInkEffectControllerForPreviewController:]
  -[CKSharedContentsViewController previewControllerDidCancelDismiss:]
  -[CKSharedContentsViewController updateAttachmentItems:]
  -[CKSharedContentsViewController parentScrollViewDidScroll:]
  -[CKSharedContentsViewController isDisplayingAttachmentContent]
  -[CKSharedContentsViewController initWithAttachmentItems:]
  -[CKSharedContentsViewController previewController:transitionViewForPreviewItem:uncroppedSourceFrame:realSize:]
  -[CKSharedContentsViewController setQlPreviewController:]
  -[CKSharedContentsViewController willPresentPreviewViewController:forLocation:inSourceView:]
  -[CKSharedContentsViewController setupToolbar]
  -[CKSharedContentsViewController loadView]
  -[CKSharedContentsViewController avatarView:orderedPropertiesForProperties:category:]
  -[CKSharedContentsViewController teardownToolbar]
  -[CKSharedContentsViewController numberOfItemsInRow]
  -[CKSharedContentsViewController collectionviewLayout]
  -[CKSharedContentsViewController paddingLeftRightForCell]
  -[CKSharedContentsViewController paddingTopBottomForCell]
  -[CKSharedContentsViewController viewDidDisappear:]
  -[CKSharedContentsViewController setCollectionviewLayout:]
  -[CKSharedContentsViewController deleteSelectedContents:]
  -[CKSharedContentsViewController cancelSelectingContents:]
  -[CKSharedContentsViewController isJ99LandscapeModeFullScreen]
  -[CKSharedContentsViewController deleteButton]
  -[CKSharedContentsViewController cellAspectRatio]
  -[CKSharedContentsViewController setParentRightBarButtonItemsToRestore:]
  -[CKSharedContentsViewController parentRightBarButtonItemsToRestore]
  -[CKSharedContentsViewController deleteContents:]
  -[CKSharedContentsViewController sharedContentsCollectionViewCellDidTap:]
  -[CKSharedContentsViewController saveSelectedContents:]
  -[CKSharedContentsViewController topmostMarkerView]
  -[CKSharedContentsViewController performAction:forSharedContentsCollectionViewCell:]
  -[CKSharedContentsViewController setTopmostMarkerView:]
  -[CKSharedContentsViewController didDismissPreviewViewController:committing:]
  -[CKSharedContentsViewController previewingContext:commitViewController:]


CKNicknameUpdate : NSObject
 @property  IMHandle *handle
 @property  IMNickname *nickname
 @property  CNContact *contact
 @property  unsigned long updateType

  // instance methods
  -[CKNicknameUpdate nickname]
  -[CKNicknameUpdate setHandle:]
  -[CKNicknameUpdate .cxx_destruct]
  -[CKNicknameUpdate setContact:]
  -[CKNicknameUpdate updateType]
  -[CKNicknameUpdate isEqual:]
  -[CKNicknameUpdate handle]
  -[CKNicknameUpdate _updatedName]
  -[CKNicknameUpdate setNickname:]
  -[CKNicknameUpdate listTitleText]
  -[CKNicknameUpdate setUpdateType:]
  -[CKNicknameUpdate contact]
  -[CKNicknameUpdate listSubtitleText]
  -[CKNicknameUpdate contactWithUpdatedInformation]


CKNicknameUtility : NSObject
  // class methods
  +[CKNicknameUtility addContactOptionsMenuWithTarget:]
  +[CKNicknameUtility updateNameAndPhotoMenuWithTarget:]


CKNicknameBannerView : CKUpdateBannerView <UITextViewDelegate>
 @property  NSArray *nicknameUpdates
 @property  <CKNicknameBannerViewDelegate> *delegate
 @property  UIButton *updateButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKNicknameBannerView contactStore]
  -[CKNicknameBannerView initWithFrame:style:updates:useNamedTitles:inUpdatesMode:]
  -[CKNicknameBannerView .cxx_destruct]
  -[CKNicknameBannerView _updateAvatarView]
  -[CKNicknameBannerView layoutSubviews]
  -[CKNicknameBannerView setupViews]
  -[CKNicknameBannerView setDelegate:]
  -[CKNicknameBannerView textView:shouldInteractWithURL:inRange:interaction:]
  -[CKNicknameBannerView sizeThatFits:]
  -[CKNicknameBannerView delegate]
  -[CKNicknameBannerView isLTR]
  -[CKNicknameBannerView updateButton]
  -[CKNicknameBannerView __im_ff_uiConsistencyEnabled]
  -[CKNicknameBannerView setNicknameUpdates:]
  -[CKNicknameBannerView _allowUpdateForStyle:]
  -[CKNicknameBannerView nicknameUpdates]
  -[CKNicknameBannerView _avatarContactForUpdate:]
  -[CKNicknameBannerView cancelGlyph]
  -[CKNicknameBannerView createContactForOutgoingShare]
  -[CKNicknameBannerView cancelButtonTapped:]
  -[CKNicknameBannerView setUpdateButton:]
  -[CKNicknameBannerView _updateSubtitleLabel]
  -[CKNicknameBannerView _updateTitleLabel]
  -[CKNicknameBannerView _updateActionButton]
  -[CKNicknameBannerView maxLabelWidthForSize:]
  -[CKNicknameBannerView updateButtonTapped:]
  -[CKNicknameBannerView titleLabelAlignmentX]
  -[CKNicknameBannerView actionButtonString]
  -[CKNicknameBannerView _updateCatalystActionButton]
  -[CKNicknameBannerView attributedSubtitleTextBasedOnBannerStyle:]
  -[CKNicknameBannerView createContactFromNickname:]
  -[CKNicknameBannerView nicknameController]
  -[CKNicknameBannerView catalystAttributedSubtitleTextBasedOnBannerStyle:]


CKChatSceneDelegate : CKSceneDelegate <CKChatControllerDelegate>
 @property  CKNavigationController *navigationController
 @property  CKCoreChatController *chatController
 @property  CKDetailsNavigationController *detailsNavigationController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKChatSceneDelegate sceneDidEnterBackground:]
  -[CKChatSceneDelegate sceneDidDisconnect:]
  -[CKChatSceneDelegate scene:willConnectToSession:options:]
  -[CKChatSceneDelegate sceneWillEnterForeground:]
  -[CKChatSceneDelegate showConversation:]
  -[CKChatSceneDelegate chatController]
  -[CKChatSceneDelegate _chatItemsDidChange:]
  -[CKChatSceneDelegate _handleRegistryWillUnregisterChatNotification:]
  -[CKChatSceneDelegate _handleChatDisplayNameChangedNotification:]
  -[CKChatSceneDelegate windowSceneDidBecomeVisible:]
  -[CKChatSceneDelegate loadAndShowConversationWithMessageGUID:withInlineReplyOverlay:]
  -[CKChatSceneDelegate showConversationAndMessageForChatGUID:messageGUID:withInlineReplyOverlay:animate:]
  -[CKChatSceneDelegate showConversation:scrollToMessage:withInlineReplyOverlay:]
  -[CKChatSceneDelegate setChatController:]
  -[CKChatSceneDelegate _updateAppSnapshot]
  -[CKChatSceneDelegate __updateAppSnapshot]
  -[CKChatSceneDelegate setDetailsNavigationController:]
  -[CKChatSceneDelegate detailsNavigationController]
  -[CKChatSceneDelegate prefersToActivatePredicate]
  -[CKChatSceneDelegate chatController:willSendComposition:inConversation:]
  -[CKChatSceneDelegate chatController:didSendCompositionInConversation:]
  -[CKChatSceneDelegate chatController:didReportSpamForConversation:]
  -[CKChatSceneDelegate canActivatePredicate]
  -[CKChatSceneDelegate prewarmCameraIfNecessaryForChatController:]
  -[CKChatSceneDelegate doneButtonPressedForChatController:]
  -[CKChatSceneDelegate chatController:didDetachDetailsNavigationController:]
  -[CKChatSceneDelegate presentDetailsNavigationController:]
  -[CKChatSceneDelegate hasDetailsNavigationController]
  -[CKChatSceneDelegate dismissDetailsNavigationController]
  -[CKChatSceneDelegate dismissAndReopenDetailsNavigationController]
  -[CKChatSceneDelegate isDetailsNavigationControllerDetached]
  -[CKChatSceneDelegate scene:openURLContexts:]
  -[CKChatSceneDelegate .cxx_destruct]
  -[CKChatSceneDelegate init]
  -[CKChatSceneDelegate stateRestorationActivityForScene:]
  -[CKChatSceneDelegate setNavigationController:]
  -[CKChatSceneDelegate navigationController]
  -[CKChatSceneDelegate type]
  -[CKChatSceneDelegate conversation]
  -[CKChatSceneDelegate chatController:forwardComposition:]
  -[CKChatSceneDelegate scene:continueUserActivity:]


CKRecipientSearchListController : CNAutocompleteResultsTableViewController <IDSBatchIDQueryControllerDelegate, CKContactsSearchManagerDelegate>
 @property  CKContactsSearchManager *searchManager
 @property  NSDate *idsQueryStartTime
 @property  NSArray *conversationCache
 @property  <CKRecipientSearchListControllerDelegate> *delegate
 @property  NSArray *enteredRecipients
 @property  NSArray *prefilteredRecipients
 @property  BOOL smsEnabled
 @property  BOOL suppressGroupSuggestions
 @property  IMAccount *defaultiMessageAccount
 @property  IDSBatchIDQueryController *statusQueryController
 @property  NSArray *searchResults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL shouldHideGroupsDonations

  // instance methods
  -[CKRecipientSearchListController removeRecipient:]
  -[CKRecipientSearchListController traitCollectionDidChange:]
  -[CKRecipientSearchListController conversationCache]
  -[CKRecipientSearchListController searchManager]
  -[CKRecipientSearchListController searchWithText:]
  -[CKRecipientSearchListController chatStateChanged:]
  -[CKRecipientSearchListController setDefaultiMessageAccount:]
  -[CKRecipientSearchListController isSearchResultsHidden]
  -[CKRecipientSearchListController _statusQueryController]
  -[CKRecipientSearchListController setIdsQueryStartTime:]
  -[CKRecipientSearchListController setConversationCache:]
  -[CKRecipientSearchListController enteredRecipients]
  -[CKRecipientSearchListController prefilteredRecipients]
  -[CKRecipientSearchListController setEnteredRecipients:]
  -[CKRecipientSearchListController setSearchManager:]
  -[CKRecipientSearchListController suppressGroupSuggestions]
  -[CKRecipientSearchListController setSuppressGroupSuggestions:]
  -[CKRecipientSearchListController _conversationList]
  -[CKRecipientSearchListController didSelectRecipient:atIndex:]
  -[CKRecipientSearchListController setShouldHideGroupsDonations:]
  -[CKRecipientSearchListController defaultiMessageAccount]
  -[CKRecipientSearchListController contactsSearchManager:finishedSearchingWithResults:]
  -[CKRecipientSearchListController conversationCacheForContactsSearchManager:]
  -[CKRecipientSearchListController hasSearchResults]
  -[CKRecipientSearchListController shouldHideGroupsDonations]
  -[CKRecipientSearchListController invalidateOutstandingIDStatusRequests]
  -[CKRecipientSearchListController invalidateSearchManager]
  -[CKRecipientSearchListController _serviceColorForRecipients:]
  -[CKRecipientSearchListController batchQueryController:updatedDestinationsStatus:onService:error:]
  -[CKRecipientSearchListController .cxx_destruct]
  -[CKRecipientSearchListController idsStatusForAddress:]
  -[CKRecipientSearchListController setPrefilteredRecipients:]
  -[CKRecipientSearchListController setSmsEnabled:]
  -[CKRecipientSearchListController statusQueryController]
  -[CKRecipientSearchListController setStatusQueryController:]
  -[CKRecipientSearchListController idsQueryStartTime]
  -[CKRecipientSearchListController cancelSearch]
  -[CKRecipientSearchListController viewDidAppear:]
  -[CKRecipientSearchListController initWithStyle:]
  -[CKRecipientSearchListController scrollViewWillBeginDragging:]
  -[CKRecipientSearchListController viewWillAppear:]
  -[CKRecipientSearchListController scrollViewShouldScrollToTop:]
  -[CKRecipientSearchListController viewDidAppearDeferredSetup]
  -[CKRecipientSearchListController searchResults]
  -[CKRecipientSearchListController setSearchResults:]
  -[CKRecipientSearchListController dealloc]
  -[CKRecipientSearchListController smsEnabled]
  -[CKRecipientSearchListController loadView]
  -[CKRecipientSearchListController _canShowWhileLocked]


CKReusableVideoPlayer : NSObject <AVPlayerViewControllerDelegate>
 @property  AVPlayerViewController *playerViewController
 @property  BOOL observingPlayer
 @property  BOOL playing
 @property  BOOL wasPlayingBeforeDisappearing
 @property  NSString *videoTransferGUID
 @property  <CKReusableVideoPlayerDelegate> *delegate
 @property  BOOL pictureInPictureActive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKReusableVideoPlayer setPlaying:]
  -[CKReusableVideoPlayer isPlaying]
  -[CKReusableVideoPlayer isPictureInPictureActive]
  -[CKReusableVideoPlayer .cxx_destruct]
  -[CKReusableVideoPlayer removeRateObserverIfNecessary]
  -[CKReusableVideoPlayer selectedConversationChanged]
  -[CKReusableVideoPlayer isObservingPlayer]
  -[CKReusableVideoPlayer setObservingPlayer:]
  -[CKReusableVideoPlayer setWasPlayingBeforeDisappearing:]
  -[CKReusableVideoPlayer wasPlayingBeforeDisappearing]
  -[CKReusableVideoPlayer setDelegate:]
  -[CKReusableVideoPlayer configureWithPlayerItem:]
  -[CKReusableVideoPlayer windowDidClose]
  -[CKReusableVideoPlayer removeCurrentPlayerItem]
  -[CKReusableVideoPlayer isReadyForReuse]
  -[CKReusableVideoPlayer videoTransferGUID]
  -[CKReusableVideoPlayer setVideoTransferGUID:]
  -[CKReusableVideoPlayer setPlayerViewController:]
  -[CKReusableVideoPlayer init]
  -[CKReusableVideoPlayer pause]
  -[CKReusableVideoPlayer playerViewController]
  -[CKReusableVideoPlayer delegate]
  -[CKReusableVideoPlayer dealloc]
  -[CKReusableVideoPlayer willDisappear]
  -[CKReusableVideoPlayer observeValueForKeyPath:ofObject:change:context:]


CKAppManagerAppTableViewCell : UITableViewCell
 @property  <CKAppManagerAppTableViewCellDelegate> *delegate
 @property  UISwitch *appToggle

  // class methods
  +[CKAppManagerAppTableViewCell reuseIdentifier]

  // instance methods
  -[CKAppManagerAppTableViewCell layoutMarginsDidChange]
  -[CKAppManagerAppTableViewCell appToggle]
  -[CKAppManagerAppTableViewCell .cxx_destruct]
  -[CKAppManagerAppTableViewCell setDelegate:]
  -[CKAppManagerAppTableViewCell appToggleTapped:]
  -[CKAppManagerAppTableViewCell setAppToggle:]
  -[CKAppManagerAppTableViewCell setToggleVisible:editable:isOn:]
  -[CKAppManagerAppTableViewCell updateCellWithPluginInfo:]
  -[CKAppManagerAppTableViewCell prepareForReuse]
  -[CKAppManagerAppTableViewCell delegate]
  -[CKAppManagerAppTableViewCell initWithStyle:reuseIdentifier:]


CKContainerView1xAdaptable : UIView
  // instance methods
  -[CKContainerView1xAdaptable setFrame:]


CKUIScrollView1xAdaptable : UIScrollView
  // instance methods
  -[CKUIScrollView1xAdaptable setFrame:]


CKCNContactPickerViewController : CNContactPickerViewController <CKAdaptivePresentedControllerProtocol>
 @property  BOOL wantsWindowedPresentation
 @property  BOOL preserveModalPresentationStyle
 @property  BOOL shouldHidePresentingWindow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKCNContactPickerViewController shouldAutorotate]
  -[CKCNContactPickerViewController wantsWindowedPresentation]
  -[CKCNContactPickerViewController setWantsWindowedPresentation:]
  -[CKCNContactPickerViewController preserveModalPresentationStyle]
  -[CKCNContactPickerViewController setPreserveModalPresentationStyle:]


CKRecipientSelectionView : UIView
  // instance methods
  -[CKRecipientSelectionView hitTest:withEvent:]


CKRecipientSelectionController : CKViewController <CNComposeRecipientTextViewDelegate, CKComposeRecipientViewDelegate, CKRecipientSearchListControllerDelegate, CNAutocompleteGroupDetailViewControllerDelegate, CNContactPickerDelegate, CKDetailsContactsManagerDelegate, CoreTelephonyClientDelegate>
 @property  CKPendingConversation *conversation
 @property  CKComposeRecipientView *toField
 @property  UIScrollView *toFieldScrollingView
 @property  UILabel *toFieldPlaceholderLabel
 @property  UIView *separator
 @property  CNContactPickerViewController *contactPickerViewController
 @property  CNComposeRecipient *recentContactForPresentedCNCard
 @property  BOOL isDisambiguating
 @property  CKManualUpdater *addressBookNotificationUpdater
 @property  BOOL preventAtomization
 @property  BOOL didShowOneTimeErrorAlert
 @property  BOOL homogenizePreferredServiceForiMessage
 @property  BOOL shouldSuppressSearchResultsTable
 @property  NSMutableDictionary *recipientAvailibityTimers
 @property  NSMutableDictionary *recipientAvailabilities
 @property  unsigned long numberOfRowsInToField
 @property  CoreTelephonyClient *coreTelephonyClient
 @property  STConversationContext *currentConversationContext
 @property  BOOL allowedByScreenTime
 @property  CKDetailsContactsManager *contactsManager
 @property  CKAlertController *alternateAddressesAlertController
 @property  <CKRecipientSelectionControllerDelegate> *delegate
 @property  UIView *toFieldContainerView
 @property  CNContactStore *contactStore
 @property  CKRecipientSearchListController *searchListController
 @property  BOOL searchResultsHidden
 @property  BOOL peoplePickerHidden
 @property  BOOL editable
 @property  BOOL toFieldIsFirstResponder
 @property  double collapsedHeight
 @property  BOOL forceMMS
 @property  @? gameCenterPickerBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKRecipientSelectionController toField]
  -[CKRecipientSelectionController coreTelephonyClient]
  -[CKRecipientSelectionController setSeparator:]
  -[CKRecipientSelectionController contactsManager]
  -[CKRecipientSelectionController contactStore]
  -[CKRecipientSelectionController setCoreTelephonyClient:]
  -[CKRecipientSelectionController separator]
  -[CKRecipientSelectionController forceMMS]
  -[CKRecipientSelectionController viewWillLayoutSubviews]
  -[CKRecipientSelectionController removeRecipient:]
  -[CKRecipientSelectionController traitCollectionDidChange:]
  -[CKRecipientSelectionController setToField:]
  -[CKRecipientSelectionController isEditable]
  -[CKRecipientSelectionController searchListControllerDidScroll:]
  -[CKRecipientSelectionController isSearchResultsHidden]
  -[CKRecipientSelectionController searchListControllerDidFinishSearch:]
  -[CKRecipientSelectionController searchListController:destinationsUpdated:]
  -[CKRecipientSelectionController searchListController:idStatusForIDSID:]
  -[CKRecipientSelectionController invalidateOutstandingIDStatusRequests]
  -[CKRecipientSelectionController .cxx_destruct]
  -[CKRecipientSelectionController initWithConversation:]
  -[CKRecipientSelectionController didMoveToParentViewController:]
  -[CKRecipientSelectionController addRecipients:]
  -[CKRecipientSelectionController viewDidLoad]
  -[CKRecipientSelectionController setForceMMS:]
  -[CKRecipientSelectionController setDelegate:]
  -[CKRecipientSelectionController _updateToField]
  -[CKRecipientSelectionController searchListController]
  -[CKRecipientSelectionController preferredMacToolbarHeight]
  -[CKRecipientSelectionController currentConversationContext]
  -[CKRecipientSelectionController _macToFieldHeight]
  -[CKRecipientSelectionController recipientSelectionControllerDidChange]
  -[CKRecipientSelectionController stopCheckingRecipientAvailabilityAndRemoveAllTimers]
  -[CKRecipientSelectionController allowedByScreenTime]
  -[CKRecipientSelectionController isBeingPresentedInMacDetailsView]
  -[CKRecipientSelectionController setNumberOfRowsInToField:]
  -[CKRecipientSelectionController toFieldScrollingView]
  -[CKRecipientSelectionController toFieldContainerView]
  -[CKRecipientSelectionController setPeoplePickerHidden:]
  -[CKRecipientSelectionController _handleRecipientViewChanged:]
  -[CKRecipientSelectionController _handleIDSResultsWhenSearchTableIsHidden:]
  -[CKRecipientSelectionController setPreventAtomization:]
  -[CKRecipientSelectionController _handleConversationPreferredServiceDidChangeNotification:]
  -[CKRecipientSelectionController _handleAddressBookChangedNotification:]
  -[CKRecipientSelectionController fieldHeightOffset]
  -[CKRecipientSelectionController _handleAddressBookPartialChangedNotification:]
  -[CKRecipientSelectionController _updateAddressBookProperties]
  -[CKRecipientSelectionController _updateToFieldRecipientsData]
  -[CKRecipientSelectionController setAddressBookNotificationUpdater:]
  -[CKRecipientSelectionController homogenizePreferredServiceForiMessage]
  -[CKRecipientSelectionController bringComposeRecipientViewToFront]
  -[CKRecipientSelectionController setSearchListController:]
  -[CKRecipientSelectionController _resetSearchResultsInsets]
  -[CKRecipientSelectionController setCurrentConversationContext:]
  -[CKRecipientSelectionController _navigationBarInsets]
  -[CKRecipientSelectionController numberOfRowsInToField]
  -[CKRecipientSelectionController _toolbarHeightForNumberOfRows:]
  -[CKRecipientSelectionController _adjustToFieldPositionIfNecessary]
  -[CKRecipientSelectionController init]
  -[CKRecipientSelectionController recipients]
  -[CKRecipientSelectionController _updateSearchResultsTable]
  -[CKRecipientSelectionController alternateAddressesAlertController]
  -[CKRecipientSelectionController setAlternateAddressesAlertController:]
  -[CKRecipientSelectionController _systemUnderLock]
  -[CKRecipientSelectionController isGameCenterRecipient:]
  -[CKRecipientSelectionController updateScreenTimePolicy]
  -[CKRecipientSelectionController _updateShowingSearch]
  -[CKRecipientSelectionController setContactPickerViewController:]
  -[CKRecipientSelectionController contactPickerViewController]
  -[CKRecipientSelectionController _atomPresentationOptionsForRecipient:]
  -[CKRecipientSelectionController composeRecipientViewOriginY]
  -[CKRecipientSelectionController _shouldEnableScrolling]
  -[CKRecipientSelectionController setEditable:]
  -[CKRecipientSelectionController _updateRecipientViewLayouts]
  -[CKRecipientSelectionController _updateYOriginSearchListController]
  -[CKRecipientSelectionController composeRecipientView:didFinishEnteringAddress:]
  -[CKRecipientSelectionController _showSearchField]
  -[CKRecipientSelectionController _dismissPeoplePicker]
  -[CKRecipientSelectionController setIsDisambiguating:]
  -[CKRecipientSelectionController _showContactCardForRecipient:sourceView:]
  -[CKRecipientSelectionController sendUpdateRecipientForAtom:]
  -[CKRecipientSelectionController isDisambiguating]
  -[CKRecipientSelectionController _showDetailsForRecipient:canDelete:]
  -[CKRecipientSelectionController _hideSearchField]
  -[CKRecipientSelectionController preventAtomization]
  -[CKRecipientSelectionController _showActionSheetForRecipient:animated:]
  -[CKRecipientSelectionController addressBookNotificationUpdater]
  -[CKRecipientSelectionController isMAIDGroupsEnabled]
  -[CKRecipientSelectionController handlePendingRecipient:]
  -[CKRecipientSelectionController preferredRecipientForPendingUnifiedContact:]
  -[CKRecipientSelectionController preferredRecipientForExistingConversationOfRecipients:]
  -[CKRecipientSelectionController preferredRecipientForNewContact:]
  -[CKRecipientSelectionController expandedRecipientsForGroupRecipient:]
  -[CKRecipientSelectionController hasEmailRecipientsInAddresses:]
  -[CKRecipientSelectionController serviceColorForRecipientAddresses:]
  -[CKRecipientSelectionController conversationForRecipients:]
  -[CKRecipientSelectionController lastSentMessageWasNotDeliveredForConversation:]
  -[CKRecipientSelectionController _showDetailsForGroup:]
  -[CKRecipientSelectionController handleForRecipientNormalizedAddress:]
  -[CKRecipientSelectionController preferredColorTypeForExistingConversation:]
  -[CKRecipientSelectionController hasIDSResultsForAllRecipients:]
  -[CKRecipientSelectionController colorTypeForRecipient:completion:]
  -[CKRecipientSelectionController preferredRecipientForRecipients:forServiceType:]
  -[CKRecipientSelectionController serviceTypeForRecipient:]
  -[CKRecipientSelectionController _updateSearchListControllerPopOverSizing]
  -[CKRecipientSelectionController recipientAvailabilities]
  -[CKRecipientSelectionController _removeRecent]
  -[CKRecipientSelectionController setRecentContactForPresentedCNCard:]
  -[CKRecipientSelectionController composeRecipientView:composeRecipientForContact:]
  -[CKRecipientSelectionController setToFieldPlaceholderLabel:]
  -[CKRecipientSelectionController composeRecipientView:composeRecipientForAddress:]
  -[CKRecipientSelectionController _canonicalRecipientAddresses]
  -[CKRecipientSelectionController setSearchResultsHidden:]
  -[CKRecipientSelectionController refreshComposeSendingServiceForAddresses:withCompletionBlock:]
  -[CKRecipientSelectionController isPeoplePickerHidden]
  -[CKRecipientSelectionController finishedComposingRecipients]
  -[CKRecipientSelectionController _availibilityForRecipient:onService:]
  -[CKRecipientSelectionController recipientAvailibityTimers]
  -[CKRecipientSelectionController recipientAvailibilitiesDidUpdate]
  -[CKRecipientSelectionController _refreshActionSheet]
  -[CKRecipientSelectionController _showOneTimeErrorAlertForAddedRecipient:service:withError:]
  -[CKRecipientSelectionController _removeAvailabilityTimeoutTimerForRecipient:]
  -[CKRecipientSelectionController _toFieldCollapsedTextColor]
  -[CKRecipientSelectionController _adjustToFieldSeparatorInsetsIfNecessary]
  -[CKRecipientSelectionController _startAvailabilityTimeoutTimerForRecipient:]
  -[CKRecipientSelectionController _alternateAddressesForRecipient:]
  -[CKRecipientSelectionController hasTimedOutRecipients]
  -[CKRecipientSelectionController hasFailediMessageRecipients]
  -[CKRecipientSelectionController hasPendingiMessageRecipients]
  -[CKRecipientSelectionController conversationPreferredServiceDidChange]
  -[CKRecipientSelectionController setRecipientAvailibityTimers:]
  -[CKRecipientSelectionController _handleRecipientAvailabilityTimeout:]
  -[CKRecipientSelectionController _recipientCausingTooManyRecipientsError]
  -[CKRecipientSelectionController _alternateiMessagableAddressesForRecipient:]
  -[CKRecipientSelectionController presentAlternateAddressesAlertForRecipient:]
  -[CKRecipientSelectionController recentContactForPresentedCNCard]
  -[CKRecipientSelectionController scrollSearchListControllerToTop:]
  -[CKRecipientSelectionController shouldSuppressSearchResultsTable]
  -[CKRecipientSelectionController _configureSearchListControllerAsAPopover]
  -[CKRecipientSelectionController resetSearchResults]
  -[CKRecipientSelectionController scrollSearchListControllerToTopContentOffset]
  -[CKRecipientSelectionController handlesForScreenTimePolicyCheck]
  -[CKRecipientSelectionController reset]
  -[CKRecipientSelectionController setAllowedByScreenTime:]
  -[CKRecipientSelectionController addRecipient:]
  -[CKRecipientSelectionController composeRecipientView:didAddRecipient:]
  -[CKRecipientSelectionController composeRecipientView:didRemoveRecipient:]
  -[CKRecipientSelectionController composeRecipientView:textDidChange:]
  -[CKRecipientSelectionController composeRecipientView:didSelectRecipients:]
  -[CKRecipientSelectionController composeRecipientView:didChangeSize:]
  -[CKRecipientSelectionController recipientViewDidBecomeFirstResponder:]
  -[CKRecipientSelectionController recipientViewDidResignFirstResponder:]
  -[CKRecipientSelectionController recipientViewShouldIgnoreFirstResponderChanges:]
  -[CKRecipientSelectionController setToFieldScrollingView:]
  -[CKRecipientSelectionController composeRecipientViewRequestAddRecipient:]
  -[CKRecipientSelectionController recipientIsDuetSuggestion:]
  -[CKRecipientSelectionController composeRecipientView:showPersonCardForAtom:]
  -[CKRecipientSelectionController composeRecipientView:disambiguateRecipientForAtom:]
  -[CKRecipientSelectionController gameCenterPickerBlock]
  -[CKRecipientSelectionController viewWillDisappear:]
  -[CKRecipientSelectionController composeRecipientView:contextMenuConfigurationForAtom:]
  -[CKRecipientSelectionController setGameCenterPickerBlock:]
  -[CKRecipientSelectionController presentationOptionsForRecipient:]
  -[CKRecipientSelectionController composeRecipientViewTabPressed:]
  -[CKRecipientSelectionController composeRecipientViewReturnPressed:]
  -[CKRecipientSelectionController collapsedHeight]
  -[CKRecipientSelectionController composeRecipientViewShowingSearchResults:]
  -[CKRecipientSelectionController toFieldIsFirstResponder]
  -[CKRecipientSelectionController presentSearchResultsForComposeRecipientView:]
  -[CKRecipientSelectionController dismissSearchResultsForComposeRecipientView:]
  -[CKRecipientSelectionController additionalCatalystTopInset]
  -[CKRecipientSelectionController selectNextSearchResultForComposeRecipientView:]
  -[CKRecipientSelectionController expandSelectedSearchResultForComposeRecipientView:]
  -[CKRecipientSelectionController _isToFieldPushedUp]
  -[CKRecipientSelectionController collapseSelectedSearchResultForComposeRecipientView:]
  -[CKRecipientSelectionController selectPreviousSearchResultForComposeRecipientView:]
  -[CKRecipientSelectionController chooseSelectedSearchResultForComposeRecipientView:context:]
  -[CKRecipientSelectionController layoutMarginsForComposeRecipientView:]
  -[CKRecipientSelectionController autocompleteResultsController:preferredRecipientForRecipients:]
  -[CKRecipientSelectionController autocompleteGroupDetailViewControllerDidCancel:]
  -[CKRecipientSelectionController autocompleteResultsController:tintColorForRecipient:completion:]
  -[CKRecipientSelectionController autocompleteResultsController:willOverrideImageDataForRecipient:completion:]
  -[CKRecipientSelectionController contactsManagerViewModelsDidChange:]
  -[CKRecipientSelectionController autocompleteResultsController:didExpandSelectedRecipient:]
  -[CKRecipientSelectionController hasUnreachableEmergencyRecipient]
  -[CKRecipientSelectionController autocompleteResultsController:didCollapseSelectedRecipient:]
  -[CKRecipientSelectionController toFieldPlaceholderLabel]
  -[CKRecipientSelectionController didShowOneTimeErrorAlert]
  -[CKRecipientSelectionController autocompleteGroupDetailViewController:didAskToRemoveGroup:]
  -[CKRecipientSelectionController parentControllerDidResume:animating:]
  -[CKRecipientSelectionController autocompleteGroupDetailViewController:didTapComposeRecipient:]
  -[CKRecipientSelectionController setGameCenterPickedHandles:playerNames:]
  -[CKRecipientSelectionController setDidShowOneTimeErrorAlert:]
  -[CKRecipientSelectionController setRecipientAvailabilities:]
  -[CKRecipientSelectionController chatForIMHandle:]
  -[CKRecipientSelectionController setContactsManager:]
  -[CKRecipientSelectionController delegate]
  -[CKRecipientSelectionController setConversation:]
  -[CKRecipientSelectionController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKRecipientSelectionController viewDidAppearDeferredSetup]
  -[CKRecipientSelectionController autocompleteResultsController:didSelectRecipient:atIndex:]
  -[CKRecipientSelectionController dealloc]
  -[CKRecipientSelectionController conversation]
  -[CKRecipientSelectionController autocompleteResultsController:didRequestInfoAboutRecipient:]
  -[CKRecipientSelectionController loadView]
  -[CKRecipientSelectionController observeValueForKeyPath:ofObject:change:context:]
  -[CKRecipientSelectionController viewDidDisappear:]
  -[CKRecipientSelectionController _keyboardWillShowOrHide:]
  -[CKRecipientSelectionController contactPicker:didSelectContact:]
  -[CKRecipientSelectionController contactPicker:didSelectContactProperty:]
  -[CKRecipientSelectionController contactPickerDidCancel:]


CKPhotosSearchResultsModeHeaderReusableView : UICollectionReusableView <CKSearchResultSupplementryCell>
 @property  UISegmentedControl *control
 @property  double bottomPadding
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKPhotosSearchResultsModeHeaderReusableView desiredZPosition]
  +[CKPhotosSearchResultsModeHeaderReusableView supplementaryViewType]
  +[CKPhotosSearchResultsModeHeaderReusableView reuseIdentifier]

  // instance methods
  -[CKPhotosSearchResultsModeHeaderReusableView bottomPadding]
  -[CKPhotosSearchResultsModeHeaderReusableView control]
  -[CKPhotosSearchResultsModeHeaderReusableView .cxx_destruct]
  -[CKPhotosSearchResultsModeHeaderReusableView preferredLayoutAttributesFittingAttributes:]
  -[CKPhotosSearchResultsModeHeaderReusableView layoutSubviews]
  -[CKPhotosSearchResultsModeHeaderReusableView setControl:]
  -[CKPhotosSearchResultsModeHeaderReusableView marginInsets]
  -[CKPhotosSearchResultsModeHeaderReusableView setBottomPadding:]
  -[CKPhotosSearchResultsModeHeaderReusableView initWithFrame:]
  -[CKPhotosSearchResultsModeHeaderReusableView _controlIndexDidChange:]
  -[CKPhotosSearchResultsModeHeaderReusableView setMarginInsets:]


CKEmoteMessageChatItem : CKMultilineStampChatItem
  // instance methods
  -[CKEmoteMessageChatItem loadTranscriptText]


CKPinnedConversationTypingBubble : UIView <CKPinnedConversationActivityItemView>
 @property  CKPinnedConversationActivityItemViewBackdropLayer *backdropLayer
 @property  CAShapeLayer *backdropMaskShapeLayer
 @property  CKPinnedConversationActivityItemViewShadowLayer *broadShadowLayer
 @property  CKPinnedConversationActivityItemViewShadowLayer *tightShadowLayer
 @property  CALayer *thinkingDotContainer
 @property  CAShapeLayer *thinkingDot
 @property  CAReplicatorLayer *thinkingDots
 @property  CKPinnedConversationTypingBubbleActivityItem *typingBubbleActivityItem
 @property  long long originationDirection
 @property  {CGPoint=dd} originationPoint
 @property  double preferredTailAttachmentPointXCoordinate
 @property  <CKPinnedConversationActivityItem> *activityItem
 @property  long long originationHorizontalDirection
 @property  {CGPoint=dd} tailAttachmentPoint
 @property  {CGSize=dd} parentAvatarViewSize
 @property  BOOL supportsActivityItemViewContentScale
 @property  long long activityItemViewContentScale
 @property  BOOL supportsAlignmentWithOriginationSubAvatarFrame
 @property  <CKPinnedConversationActivityItemViewDelegate> *activityItemViewDelegate

  // instance methods
  -[CKPinnedConversationTypingBubble backdropLayer]
  -[CKPinnedConversationTypingBubble setBackdropLayer:]
  -[CKPinnedConversationTypingBubble traitCollectionDidChange:]
  -[CKPinnedConversationTypingBubble _updateUserInterfaceStyles]
  -[CKPinnedConversationTypingBubble activityItem]
  -[CKPinnedConversationTypingBubble activityItemToContactItemVerticalOverlap]
  -[CKPinnedConversationTypingBubble setActivityItem:]
  -[CKPinnedConversationTypingBubble originationDirection]
  -[CKPinnedConversationTypingBubble setOriginationDirection:]
  -[CKPinnedConversationTypingBubble originationHorizontalDirection]
  -[CKPinnedConversationTypingBubble setOriginationHorizontalDirection:]
  -[CKPinnedConversationTypingBubble originationPoint]
  -[CKPinnedConversationTypingBubble setOriginationPoint:]
  -[CKPinnedConversationTypingBubble preferredTailAttachmentPointXCoordinate]
  -[CKPinnedConversationTypingBubble tailAttachmentPoint]
  -[CKPinnedConversationTypingBubble tightShadowLayer]
  -[CKPinnedConversationTypingBubble setPreferredTailAttachmentPointXCoordinate:]
  -[CKPinnedConversationTypingBubble parentAvatarViewSize]
  -[CKPinnedConversationTypingBubble setParentAvatarViewSize:]
  -[CKPinnedConversationTypingBubble activityItemViewDelegate]
  -[CKPinnedConversationTypingBubble supportsActivityItemViewContentScale]
  -[CKPinnedConversationTypingBubble activityItemViewContentScale]
  -[CKPinnedConversationTypingBubble setActivityItemViewContentScale:]
  -[CKPinnedConversationTypingBubble broadShadowLayer]
  -[CKPinnedConversationTypingBubble supportsAlignmentWithOriginationSubAvatarFrame]
  -[CKPinnedConversationTypingBubble setActivityItemViewDelegate:]
  -[CKPinnedConversationTypingBubble initWithActivityItem:]
  -[CKPinnedConversationTypingBubble backdropMaskShapeLayer]
  -[CKPinnedConversationTypingBubble setBackdropMaskShapeLayer:]
  -[CKPinnedConversationTypingBubble setBroadShadowLayer:]
  -[CKPinnedConversationTypingBubble setTightShadowLayer:]
  -[CKPinnedConversationTypingBubble thinkingDot]
  -[CKPinnedConversationTypingBubble .cxx_destruct]
  -[CKPinnedConversationTypingBubble layoutSubviews]
  -[CKPinnedConversationTypingBubble thinkingDots]
  -[CKPinnedConversationTypingBubble sizeThatFits:]
  -[CKPinnedConversationTypingBubble thinkingDotDiameter]
  -[CKPinnedConversationTypingBubble _updateThinkingDotColor]
  -[CKPinnedConversationTypingBubble thinkingDotOpacity]
  -[CKPinnedConversationTypingBubble thinkingDotSpace]
  -[CKPinnedConversationTypingBubble thinkingDotContainer]
  -[CKPinnedConversationTypingBubble thinkingDotColor]
  -[CKPinnedConversationTypingBubble tailCornerAnchor]
  -[CKPinnedConversationTypingBubble calculateBezierPathWithOutputsForPath:largeBubbleFrame:mediumBubbleFrame:smallBubbleFrame:]
  -[CKPinnedConversationTypingBubble thinkingDotContainerSize]
  -[CKPinnedConversationTypingBubble largeBubbleSize]
  -[CKPinnedConversationTypingBubble mediumBubbleSize]
  -[CKPinnedConversationTypingBubble smallBubbleSize]
  -[CKPinnedConversationTypingBubble mediumBubbleOffset]
  -[CKPinnedConversationTypingBubble smallBubbleOffset]
  -[CKPinnedConversationTypingBubble largeBubbleCornerRadius]
  -[CKPinnedConversationTypingBubble typingBubbleActivityItem]
  -[CKPinnedConversationTypingBubble setThinkingDotContainer:]
  -[CKPinnedConversationTypingBubble setThinkingDot:]
  -[CKPinnedConversationTypingBubble setThinkingDots:]


CKPinnedConversationTypingBubbleActivityItem : NSObject <CKPinnedConversationActivityItem>
 @property  NSString *activityItemIdentifier
 @property  BOOL activityItemAppearsWithAnimation
 @property  BOOL activityItemDisappearsWithAnimation
 @property  double activityItemContentScale
 @property  NSString *attachedContactItemIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKPinnedConversationTypingBubbleActivityItem activityItemIdentifier]
  -[CKPinnedConversationTypingBubbleActivityItem activityItemView]
  -[CKPinnedConversationTypingBubbleActivityItem activityItemDisappearsWithAnimation]
  -[CKPinnedConversationTypingBubbleActivityItem activityItemContentScale]
  -[CKPinnedConversationTypingBubbleActivityItem activityItemAppearsWithAnimation]
  -[CKPinnedConversationTypingBubbleActivityItem attachedContactItemIdentifier]


CKAnimatedImageAttachmentItem : CKImageAttachmentItem
 @property  NSURL *animatedPreviewURL
 @property  {CGSize=dd} imageSize

  // class methods
  +[CKAnimatedImageAttachmentItem UTITypes]
  +[CKAnimatedImageAttachmentItem shouldScaleUpPreview]

  // instance methods
  -[CKAnimatedImageAttachmentItem setImageSize:]
  -[CKAnimatedImageAttachmentItem .cxx_destruct]
  -[CKAnimatedImageAttachmentItem generatePreviewWithCompletion:]
  -[CKAnimatedImageAttachmentItem imageSize]
  -[CKAnimatedImageAttachmentItem _newImageData]
  -[CKAnimatedImageAttachmentItem animatedPreviewURL:]
  -[CKAnimatedImageAttachmentItem _savedPreviewFromURL:]
  -[CKAnimatedImageAttachmentItem thumbnailAtIndex:forWidth:withImageData:]
  -[CKAnimatedImageAttachmentItem generatePreviewFromThumbnail:width:]
  -[CKAnimatedImageAttachmentItem animatedPreviewURL]
  -[CKAnimatedImageAttachmentItem setAnimatedPreviewURL:]
  -[CKAnimatedImageAttachmentItem size]


CKLinkSearchController : CKMessageTypeSearchController
  // class methods
  +[CKLinkSearchController sectionIdentifier]
  +[CKLinkSearchController indexingString]
  +[CKLinkSearchController sectionTitle]
  +[CKLinkSearchController _additionalMenuElementsForResult:]
  +[CKLinkSearchController itemProviderForSearchResult:]
  +[CKLinkSearchController _activityItemProviderForResult:]
  +[CKLinkSearchController previewViewControllerForResult:]
  +[CKLinkSearchController handleSelectionForResult:]
  +[CKLinkSearchController reuseIdentifier]
  +[CKLinkSearchController cellClass]

  // instance methods
  -[CKLinkSearchController fetchAttributes]
  -[CKLinkSearchController filterQueries]
  -[CKLinkSearchController fractionalWidth:count:forLayoutWidth:]
  -[CKLinkSearchController _additionalMenuElementsForResult:]
  -[CKLinkSearchController itemProviderForSearchResult:]
  -[CKLinkSearchController _activityItemProviderForResult:]
  -[CKLinkSearchController previewViewControllerForResult:]
  -[CKLinkSearchController handleSelectionForResult:]
  -[CKLinkSearchController queryAttributesForText:]
  -[CKLinkSearchController detailsFilterQueriesForChatGUIDs:]
  -[CKLinkSearchController queryResultsForItems:]
  -[CKLinkSearchController postProcessAndUpdateResults:]
  -[CKLinkSearchController applyLayoutMarginsToLayoutGroup]
  -[CKLinkSearchController layoutGroupWithEnvironment:]
  -[CKLinkSearchController cellForSupplementryItemInCollectionView:atIndexPath:supplementryViewKind:]
  -[CKLinkSearchController _richLinkDatasourceClass]
  -[CKLinkSearchController updateSupplementryViewIfNeeded:atIndexPath:]
  -[CKLinkSearchController deleteAttachmentForResult:]
  -[CKLinkSearchController shouldStartMenuInteractionForResult:]
  -[CKLinkSearchController interGroupSpacing]


CKDetailsAddMemberStandardCell : CKDetailsAddMemberCell
 @property  UIImageView *addIcon

  // class methods
  +[CKDetailsAddMemberStandardCell preferredHeight]

  // instance methods
  -[CKDetailsAddMemberStandardCell .cxx_destruct]
  -[CKDetailsAddMemberStandardCell setAddIcon:]
  -[CKDetailsAddMemberStandardCell addIcon]
  -[CKDetailsAddMemberStandardCell layoutSubviews]
  -[CKDetailsAddMemberStandardCell sizeThatFits:]
  -[CKDetailsAddMemberStandardCell initWithStyle:reuseIdentifier:]
  -[CKDetailsAddMemberStandardCell setEnabled:]


CKTUConversationBalloonView : CKColoredBalloonView
 @property  unsigned long state
 @property  UIImageView *imageView
 @property  UIImageView *iconView
 @property  CKAvatarView *avatarView
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel1
 @property  UILabel *subtitleLabel2
 @property  UIButton *joinButton
 @property  BOOL animating
 @property  BOOL shouldUseAXLayout
 @property  BOOL shouldRenderJoinButtonAsIcon
 @property  NSString *joinButtonText_TestingOverride
 @property  NSUUID *tuConversationUUID
 @property  BOOL unknownSender

  // class methods
  +[CKTUConversationBalloonView appIconSize]

  // instance methods
  -[CKTUConversationBalloonView titleLabel]
  -[CKTUConversationBalloonView setOrientation:]
  -[CKTUConversationBalloonView imageView]
  -[CKTUConversationBalloonView setAvatarView:]
  -[CKTUConversationBalloonView prepareForDisplay]
  -[CKTUConversationBalloonView color]
  -[CKTUConversationBalloonView .cxx_destruct]
  -[CKTUConversationBalloonView avatarView]
  -[CKTUConversationBalloonView contentSizeCategoryDidChange:]
  -[CKTUConversationBalloonView setTitleLabel:]
  -[CKTUConversationBalloonView layoutSubviews]
  -[CKTUConversationBalloonView animating]
  -[CKTUConversationBalloonView setState:]
  -[CKTUConversationBalloonView configureImageView]
  -[CKTUConversationBalloonView joinButton]
  -[CKTUConversationBalloonView setAnimating:]
  -[CKTUConversationBalloonView _currentCall]
  -[CKTUConversationBalloonView prepareForReuse]
  -[CKTUConversationBalloonView state]
  -[CKTUConversationBalloonView orientation]
  -[CKTUConversationBalloonView initWithFrame:]
  -[CKTUConversationBalloonView imageViewSize]
  -[CKTUConversationBalloonView __im_ff_isExpanseEnabled]
  -[CKTUConversationBalloonView tuConversation]
  -[CKTUConversationBalloonView didHoverOverCell:]
  -[CKTUConversationBalloonView setSubtitleLabel1:]
  -[CKTUConversationBalloonView setSubtitleLabel2:]
  -[CKTUConversationBalloonView _joinButtonTapped:]
  -[CKTUConversationBalloonView setJoinButton:]
  -[CKTUConversationBalloonView configureForCurrentState]
  -[CKTUConversationBalloonView _multiWayCallStateChanged:]
  -[CKTUConversationBalloonView chatParticipantsChanged:]
  -[CKTUConversationBalloonView shouldUseAXLayout]
  -[CKTUConversationBalloonView shouldRenderJoinButtonAsIcon]
  -[CKTUConversationBalloonView subtitleLabel2]
  -[CKTUConversationBalloonView activeCallIsJoinable]
  -[CKTUConversationBalloonView joinButtonRenderedAsIconSize]
  -[CKTUConversationBalloonView _joinButtonText]
  -[CKTUConversationBalloonView subtitleLabel1]
  -[CKTUConversationBalloonView stringWidthConstraint]
  -[CKTUConversationBalloonView tuConversationUUID]
  -[CKTUConversationBalloonView configureIconView]
  -[CKTUConversationBalloonView configureTitle]
  -[CKTUConversationBalloonView configureSubtitle1]
  -[CKTUConversationBalloonView configureSubtitle2]
  -[CKTUConversationBalloonView configureJoinButton]
  -[CKTUConversationBalloonView formatImageViewForActivity]
  -[CKTUConversationBalloonView formatImageViewForFaceTime]
  -[CKTUConversationBalloonView isUnknownSender]
  -[CKTUConversationBalloonView formatIconViewForFaceTime]
  -[CKTUConversationBalloonView formatIconViewForActivity]
  -[CKTUConversationBalloonView joinButtonText_TestingOverride]
  -[CKTUConversationBalloonView setTuConversationUUID:]
  -[CKTUConversationBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKTUConversationBalloonView wantsGradient]
  -[CKTUConversationBalloonView joinButtonIsShowingImageContent]
  -[CKTUConversationBalloonView joinButtonIsShowingTextContent]
  -[CKTUConversationBalloonView setUnknownSender:]
  -[CKTUConversationBalloonView setJoinButtonText_TestingOverride:]
  -[CKTUConversationBalloonView setImageView:]
  -[CKTUConversationBalloonView iconView]
  -[CKTUConversationBalloonView setIconView:]
  -[CKTUConversationBalloonView configureForTUConversationChatItem:]


CKRegistrationViewController : UIViewController <AKTapToSignInViewControllerDelegate>
 @property  AKTapToSignInViewController *akSignInVC
 @property  OBPrivacyLinkController *privacyLinkController
 @property  @? completionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKRegistrationViewController _shouldShowAuthKitSignIn]
  +[CKRegistrationViewController _inProgressRegisteringNonPhoneAccount]
  +[CKRegistrationViewController shouldShowRegistration]

  // instance methods
  -[CKRegistrationViewController setPrivacyLinkController:]
  -[CKRegistrationViewController privacyLinkController]
  -[CKRegistrationViewController .cxx_destruct]
  -[CKRegistrationViewController viewDidLoad]
  -[CKRegistrationViewController canBecomeFirstResponder]
  -[CKRegistrationViewController init]
  -[CKRegistrationViewController akSignInVC]
  -[CKRegistrationViewController keyboardWillHide:]
  -[CKRegistrationViewController viewWillAppear:]
  -[CKRegistrationViewController keyboardDidShow:]
  -[CKRegistrationViewController completionBlock]
  -[CKRegistrationViewController dealloc]
  -[CKRegistrationViewController setCompletionBlock:]
  -[CKRegistrationViewController accountRegistrar]
  -[CKRegistrationViewController _handleRegistrarCompletion:errorAlertController:]
  -[CKRegistrationViewController updateInsetsForKeyboardFrame:]
  -[CKRegistrationViewController tapToSignInViewController:didAuthenticateWithResults:error:]
  -[CKRegistrationViewController keyboardWillShow:]
  -[CKRegistrationViewController setErrorPresentationViewController:]
  -[CKRegistrationViewController setAkSignInVC:]


CKTypingPluginChatItem : CKTypingChatItem
 @property  NSString *plugInBundleID
 @property  NSData *typingIndicatorData

  // instance methods
  -[CKTypingPluginChatItem iconImage]
  -[CKTypingPluginChatItem .cxx_destruct]
  -[CKTypingPluginChatItem initWithIMChatItem:maxWidth:]
  -[CKTypingPluginChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKTypingPluginChatItem typingIndicatorData]
  -[CKTypingPluginChatItem plugInBundleID]
  -[CKTypingPluginChatItem indicatorLayer]
  -[CKTypingPluginChatItem setPlugInBundleID:]
  -[CKTypingPluginChatItem cellClass]


CKAudioMessageChatItem : CKExpirableMessageChatItem
 @property  CKAudioMediaObject *mediaObject

  // instance methods
  -[CKAudioMessageChatItem balloonViewClass]
  -[CKAudioMessageChatItem balloonCorners]
  -[CKAudioMessageChatItem cellClass]


CKPassSearchResultsCell : CKAttachmentSearchResultCell
  // class methods
  +[CKPassSearchResultsCell reuseIdentifier]

  // instance methods
  -[CKPassSearchResultsCell preferredLayoutAttributesFittingAttributes:]
  -[CKPassSearchResultsCell layoutSubviews]
  -[CKPassSearchResultsCell editModeHorizontalOffset]
  -[CKPassSearchResultsCell avatarOffsetLTR]
  -[CKPassSearchResultsCell avatarOffsetRTL]


CKFullScreenAppNavbarManager : NSObject <CKAvatarNotificationCalloutViewDelegate>
 @property  UIButton *dismissButton
 @property  UIButton *appIconButton
 @property  CKNavigationBarCanvasView *canvasView
 @property  CKAvatarPickerViewController *avatarPickerViewController
 @property  CKConversation *conversation
 @property  NSMutableArray *notificationViews
 @property  NSTimer *notificationTimer
 @property  UILabel *defaultTitleLabel
 @property  long long style
 @property  <CKFullScreenAppNavbarManagerDelegate> *delegate
 @property  IMBalloonPlugin *plugin
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKFullScreenAppNavbarManager setDismissButton:]
  -[CKFullScreenAppNavbarManager canvasView]
  -[CKFullScreenAppNavbarManager .cxx_destruct]
  -[CKFullScreenAppNavbarManager dismissButton]
  -[CKFullScreenAppNavbarManager setStyle:]
  -[CKFullScreenAppNavbarManager setDelegate:]
  -[CKFullScreenAppNavbarManager notificationTimer]
  -[CKFullScreenAppNavbarManager setNotificationTimer:]
  -[CKFullScreenAppNavbarManager _updateTitleView]
  -[CKFullScreenAppNavbarManager delegate]
  -[CKFullScreenAppNavbarManager setConversation:]
  -[CKFullScreenAppNavbarManager avatarNotificationCalloutViewWillFadeIn:]
  -[CKFullScreenAppNavbarManager avatarNotificationCalloutViewDidFinishFadeOut:]
  -[CKFullScreenAppNavbarManager avatarNotificationCalloutViewReceivedTouch:]
  -[CKFullScreenAppNavbarManager _invalidateTimer]
  -[CKFullScreenAppNavbarManager setCanvasView:]
  -[CKFullScreenAppNavbarManager plugin]
  -[CKFullScreenAppNavbarManager dealloc]
  -[CKFullScreenAppNavbarManager conversation]
  -[CKFullScreenAppNavbarManager appIconButton]
  -[CKFullScreenAppNavbarManager _handleChatItemDidChange:]
  -[CKFullScreenAppNavbarManager _handleChatDisplayNameChange:]
  -[CKFullScreenAppNavbarManager _contactPhotosEnabledChangedNotification:]
  -[CKFullScreenAppNavbarManager _canShowAvatarView]
  -[CKFullScreenAppNavbarManager _configureCanvasView]
  -[CKFullScreenAppNavbarManager _updateDismissButton]
  -[CKFullScreenAppNavbarManager _updateTitleLabelText]
  -[CKFullScreenAppNavbarManager _didReceiveMessageChatItem:addedChatItems:]
  -[CKFullScreenAppNavbarManager _shouldStartnotificationQueue]
  -[CKFullScreenAppNavbarManager _startNotificationQueue]
  -[CKFullScreenAppNavbarManager avatarPickerViewController]
  -[CKFullScreenAppNavbarManager _addNotificationViewToQueue]
  -[CKFullScreenAppNavbarManager notificationViews]
  -[CKFullScreenAppNavbarManager _removeAllNotifications]
  -[CKFullScreenAppNavbarManager setNotificationViews:]
  -[CKFullScreenAppNavbarManager _dequeueNotificationViews:]
  -[CKFullScreenAppNavbarManager _viewModeForCalloutView]
  -[CKFullScreenAppNavbarManager defaultTitleLabel]
  -[CKFullScreenAppNavbarManager setAvatarPickerViewController:]
  -[CKFullScreenAppNavbarManager setDefaultTitleLabel:]
  -[CKFullScreenAppNavbarManager setPlugin:]
  -[CKFullScreenAppNavbarManager dismissNotifications]
  -[CKFullScreenAppNavbarManager initWithConversation:plugin:]
  -[CKFullScreenAppNavbarManager setAppIconButton:]
  -[CKFullScreenAppNavbarManager style]
  -[CKFullScreenAppNavbarManager __im_ff_uiConsistencyEnabled]


CKMessageEntryView : UIView <CKMessageEntryContentViewDelegate, CKAudioRecorderDelegate, CKActionMenuControllerDelegate, CKMessageEntryRecordedAudioViewDelegate, CKActionMenuGestureRecognizerButtonDelegate, CKInlineAudioReplyButtonDelegate, UIGestureRecognizerDelegate, CKBrowserSwitcherFooterViewDelegate, CKMentionSuggestionViewDataSource, CKMentionSuggestionViewDelegate, CKPaddleOverlayViewDelegate, CKTextEntryLayoutManagerMentionsDelegate, CKAppSelectionInterface, CKMessageEntryViewStyleProtocol, TUIInputAccessoryViewTraits>
 @property  {UIEdgeInsets=dddd} coverInsets
 @property  BOOL shouldShowSendButton
 @property  BOOL shouldShowDictationButton
 @property  BOOL shouldShowSubject
 @property  BOOL shouldShowPluginButtons
 @property  BOOL shouldShowCharacterCount
 @property  BOOL shouldDisableAttachments
 @property  CKMessageEntryContentView *contentView
 @property  CKEntryViewButton *photoButton
 @property  UIView *inputButtonContainerView
 @property  UIView *buttonAndTextAreaContainerView
 @property  CKEntryViewButton *sendButton
 @property  CKEntryViewButton *browserButton
 @property  CKEntryViewButton *cancelButton
 @property  CKEntryViewButton *stopButton
 @property  CKEntryViewButton *arrowButton
 @property  _UIClickInteraction *sendButtonClickInteraction
 @property  UILabel *characterCountLabel
 @property  {CGSize=dd} inputButtonSize
 @property  {CGSize=dd} sendButtonSize
 @property  {CGSize=dd} characterCountSize
 @property  UIVisualEffectView *backgroundView
 @property  UIView *knockoutView
 @property  UIView *knockoutCoverView
 @property  BOOL characterCountHidden
 @property  BOOL shouldCenterCharacterCount
 @property  BOOL shouldAllowImpactSend
 @property  unsigned long displayMode
 @property  UIView *contentClipView
 @property  BOOL performingActionMenuSend
 @property  NSArray *keyCommands
 @property  UIInputContextHistory *inputContextHistory
 @property  BOOL shouldEntryViewBeExpandedLayout
 @property  BOOL animatingLayoutChange
 @property  BOOL isTransitioningForBrowserSwitcher
 @property  UILabel *collpasedPlaceholderLabel
 @property  CKBrowserSwitcherFooterView *appStrip
 @property  UIButton *emojiButton
 @property  UIView *appStripBackgroundBlurContainerView
 @property  UIKBVisualEffectView *appStripBackgroundBlurView
 @property  <UITextInputTraits_Private> *lastConfiguredInputDelegate
 @property  CKPaddleOverlayView *paddleOverlayView
 @property  CKMentionSuggestionView *mentionSuggestionView
 @property  NSArray *currentMentionSuggestions
 @property  BOOL showingMentionsSuggestions
 @property  BOOL isUpdatingMentionAttributedText
 @property  NSMutableSet *entityHandles
 @property  NSMutableSet *recipientNames
 @property  NSMutableDictionary *entityDictionary
 @property  {_NSRange=QQ} rangeOfTappedMention
 @property  CKMentionEntityNode *entityTree
 @property  BOOL languageHasSpaces
 @property  _UISupplementalLexicon *mentionsLexicon
 @property  {_NSRange=QQ} lastFoundMentionRange
 @property  unsigned long currentTappedCharacterIndex
 @property  @? didSelectEntityCompletionHandler
 @property  CAMShutterButton *shutterButton
 @property  CKScheduledUpdater *entryFieldCollapsedUpdater
 @property  BOOL entryFieldUpdaterCollapsedValue
 @property  BOOL entryFieldUpdaterAnimatedValue
 @property  UISwipeGestureRecognizer *swipeGestureRecognizer
 @property  BOOL isAudioActionMenuSuspended
 @property  BOOL isAudioActionMenuResizing
 @property  CKAudioRecorder *recorder
 @property  CKComposition *audioComposition
 @property  CKComposition *previousAudioComposition
 @property  CKActionMenuController *audioActionMenuController
 @property  CKInlineAudioReplyButtonController *audioReplyButton
 @property  CKMessageEntryWaveformView *waveformView
 @property  CKMessageEntryRecordedAudioView *recordedAudioView
 @property  CKMessageEntryAudioHintView *audioHintView
 @property  {CGSize=dd} waveformViewSize
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} audioActionMenuFrame
 @property  CKEntryViewButton *audioButton
 @property  CKEntryViewButton *sendAudioButton
 @property  CKActionMenuGestureRecognizerButton *audioActionMenuGestureRecognizerButton
 @property  CKEntryViewButton *dictationButton
 @property  <CKMessageEntryViewAudioMessageAppDelegate> *audioMessageAppDelegate
 @property  BOOL audioMessageRecordingAvailable
 @property  NSMutableArray *powerLevels
 @property  double duration
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  NSString *backdropGroupName
 @property  double coverViewWidth
 @property  <CKMessageEntryViewDelegate> *delegate
 @property  <_UIClickInteractionDelegate> *clickInteractionDelegate
 @property  <CKMessageEntryViewInputDelegate> *inputDelegate
 @property  CKConversation *conversation
 @property  CKComposition *composition
 @property  CKComposition *compositionWithAcceptedAutocorrection
 @property  BOOL shouldOpaqueBackgroundView
 @property  BOOL keyboardVisible
 @property  BOOL recording
 @property  BOOL hasRecording
 @property  UITraitCollection *entryViewTraitCollection
 @property  BOOL entryFieldCollapsed
 @property  BOOL shouldShowAppStrip
 @property  BOOL showsKeyboardPredictionBar
 @property  BOOL extendAppStripBlurToKeyplaneTop
 @property  BOOL disablePluginButtons
 @property  BOOL composingRecipient
 @property  BOOL failedRecipients
 @property  BOOL unreachableEmergencyRecipient
 @property  BOOL sendingMessage
 @property  <CKExternalAppBrowserMenuHost> *externalAppBrowserMenuHost
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long style

  // class methods
  +[CKMessageEntryView sharedAppStripDatasource]
  +[CKMessageEntryView coverViewInsetsForMarginInsets:shouldShowPluginButtons:shouldShowCharacterCount:shouldCenterCharacterCount:]
  +[CKMessageEntryView coverViewInsetsForMarginInsets:shouldShowPluginButtons:shouldShowCharacterCount:]
  +[CKMessageEntryView setCurrentEntryView:]
  +[CKMessageEntryView configureAttributedString:inTextView:boldingFont:inRange:]
  +[CKMessageEntryView configureAttributedString:withFontColor:forRange:]
  +[CKMessageEntryView configureAttributedString:withParagraphStyleInTextView:inRange:]
  +[CKMessageEntryView configureAttributedString:inTextView:forUnconfirmedDirectMention:inRange:addingVisualStyling:]
  +[CKMessageEntryView configureAttributedString:automaticMentionAttributeWithOriginalText:entityNode:forRange:]
  +[CKMessageEntryView isValidPostfixCharacter:]
  +[CKMessageEntryView configureAttributedString:inTextView:forNoMentionInRange:]
  +[CKMessageEntryView hideMentionsInAttributedString:inTextView:]
  +[CKMessageEntryView configureAttributedStringForMentionsChecking:excludingRange:]
  +[CKMessageEntryView range:appendingSubstringRange:]
  +[CKMessageEntryView range:isPrefixedWithAtForString:]
  +[CKMessageEntryView range:containsEmptySelectedRange:]
  +[CKMessageEntryView removeMentionsAtIndex:onAttributedString:inTextView:]
  +[CKMessageEntryView configureAttributedString:inTextView:forDirectMentionInRange:forChildNode:addingVisualStyling:shouldAddAutoComplete:]
  +[CKMessageEntryView configureAttributedString:inTextView:forUnconfirmedMentionInRange:]
  +[CKMessageEntryView configureAttributedString:inTextView:forConfirmedMentionInRange:needingAnimation:]
  +[CKMessageEntryView attributedString:containsConfirmedMentionInRange:]
  +[CKMessageEntryView replaceAttributedString:withEntity:fromInputText:inRange:updatingRange:]
  +[CKMessageEntryView configureAttributedString:inTextView:withOriginalText:inRange:]
  +[CKMessageEntryView range:hasValidPostfixCharacterForString:]
  +[CKMessageEntryView languagesWithoutSpaces]
  +[CKMessageEntryView currentEntryView]
  +[CKMessageEntryView audioButtonImage]
  +[CKMessageEntryView contentViewInsetsForMarginInsets:shouldShowPluginButtons:shouldShowCharacterCount:shouldCoverSendButton:]

  // instance methods
  -[CKMessageEntryView setBackdropGroupName:]
  -[CKMessageEntryView isRecording]
  -[CKMessageEntryView setInputDelegate:]
  -[CKMessageEntryView hitTest:withEvent:]
  -[CKMessageEntryView handleLongPress:]
  -[CKMessageEntryView initWithFrame:marginInsets:shouldShowSendButton:shouldShowSubject:shouldShowPluginButtons:shouldShowCharacterCount:traitCollection:shouldDisableAttachments:]
  -[CKMessageEntryView initWithFrame:marginInsets:shouldAllowImpact:shouldShowSendButton:shouldShowSubject:shouldShowPluginButtons:shouldShowCharacterCount:traitCollection:shouldDisableAttachments:]
  -[CKMessageEntryView displayMode]
  -[CKMessageEntryView shouldShowAppStrip]
  -[CKMessageEntryView configureAppStripOrMentionSuggestionsIfNeeded]
  -[CKMessageEntryView appStripBackgroundBlurContainerView]
  -[CKMessageEntryView updateAppStripFrame]
  -[CKMessageEntryView updateEntryView]
  -[CKMessageEntryView configureAppStripBackgroundViewsIfNecessary]
  -[CKMessageEntryView updateAppsMenu:]
  -[CKMessageEntryView inputDelegate]
  -[CKMessageEntryView shouldShowMentionSuggestions]
  -[CKMessageEntryView setAppStripBackgroundBlurContainerView:]
  -[CKMessageEntryView setAppStripBackgroundBlurView:]
  -[CKMessageEntryView _overrideUserInterfaceStyleForEntryViewStyleIfNeeded:]
  -[CKMessageEntryView _setupWaveformView]
  -[CKMessageEntryView composition]
  -[CKMessageEntryView entityTree]
  -[CKMessageEntryView setEntryViewTraitCollection:resetStyle:]
  -[CKMessageEntryView isRunningInNotificationExtension]
  -[CKMessageEntryView sendAudioButton]
  -[CKMessageEntryView setRecorder:]
  -[CKMessageEntryView loadRecordedAudioViewsIfNeeded]
  -[CKMessageEntryView audioComposition]
  -[CKMessageEntryView appStripBackgroundBlurView]
  -[CKMessageEntryView setIsTransitioningForBrowserSwitcher:]
  -[CKMessageEntryView setShouldCenterCharacterCount:]
  -[CKMessageEntryView setSendButton:]
  -[CKMessageEntryView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKMessageEntryView coverInsets]
  -[CKMessageEntryView setCoverInsets:]
  -[CKMessageEntryView _updateUIForEntryFieldCollapsedStateChange]
  -[CKMessageEntryView setEntryFieldCollapsedUpdater:]
  -[CKMessageEntryView arrowButton]
  -[CKMessageEntryView setArrowButton:]
  -[CKMessageEntryView entryFieldCollapsedUpdater]
  -[CKMessageEntryView setButtonAndTextAreaContainerView:]
  -[CKMessageEntryView setShouldShowSubject:]
  -[CKMessageEntryView setShouldShowSendButton:]
  -[CKMessageEntryView setShouldShowPluginButtons:]
  -[CKMessageEntryView setShouldShowCharacterCount:]
  -[CKMessageEntryView setShouldDisableAttachments:]
  -[CKMessageEntryView setShouldAllowImpactSend:]
  -[CKMessageEntryView setShouldShowDictationButton:]
  -[CKMessageEntryView _setBehaviorsForCurrentTransparencySetting]
  -[CKMessageEntryView photoButtonTapped:]
  -[CKMessageEntryView textEffectsWindowOffsetDidChange:]
  -[CKMessageEntryView _dictationAvailabilityDidChange]
  -[CKMessageEntryView updateBackgroundView]
  -[CKMessageEntryView setKnockoutCoverView:]
  -[CKMessageEntryView setInputButtonContainerView:]
  -[CKMessageEntryView setInputButtonSize:]
  -[CKMessageEntryView setPhotoButton:]
  -[CKMessageEntryView photoButtonTouchDown:]
  -[CKMessageEntryView photoButtonTouchUpOutside:]
  -[CKMessageEntryView photoButtonTouchCancel:]
  -[CKMessageEntryView setBrowserButton:]
  -[CKMessageEntryView cancelButton]
  -[CKMessageEntryView entryViewTraitCollection]
  -[CKMessageEntryView browserButtonTapped:]
  -[CKMessageEntryView arrowButtonTapped:]
  -[CKMessageEntryView setAudioButton:]
  -[CKMessageEntryView collapseGestureRecognized]
  -[CKMessageEntryView updateKnockoutView]
  -[CKMessageEntryView expandGestureRecongnized]
  -[CKMessageEntryView setAudioReplyButton:]
  -[CKMessageEntryView setCollpasedPlaceholderLabel:]
  -[CKMessageEntryView configureForDisplayMode:]
  -[CKMessageEntryView setInputContextHistory:]
  -[CKMessageEntryView .cxx_destruct]
  -[CKMessageEntryView collapsedPlaceholderLabelTapped:]
  -[CKMessageEntryView setCharacterCountLabel:]
  -[CKMessageEntryView setCharacterCountSize:]
  -[CKMessageEntryView setCharacterCountHidden:]
  -[CKMessageEntryView hasRecording]
  -[CKMessageEntryView touchUpInsideSendButton:]
  -[CKMessageEntryView setAudioActionMenuGestureRecognizerButton:]
  -[CKMessageEntryView entityHandles]
  -[CKMessageEntryView shutterButton]
  -[CKMessageEntryView setSendButtonSize:]
  -[CKMessageEntryView dictationButtonTapped:]
  -[CKMessageEntryView setDictationButton:]
  -[CKMessageEntryView isValidPrefixCharacter:]
  -[CKMessageEntryView setEmojiButton:]
  -[CKMessageEntryView audioButtonTapped:]
  -[CKMessageEntryView stopButtonTapped:]
  -[CKMessageEntryView setStopButton:]
  -[CKMessageEntryView keyCommandSend:]
  -[CKMessageEntryView optionUpArrowClicked:]
  -[CKMessageEntryView optionDownArrowClicked:]
  -[CKMessageEntryView setEntryViewTraitCollection:]
  -[CKMessageEntryView setEntryFieldCollapsed:animated:]
  -[CKMessageEntryView allowsMentions]
  -[CKMessageEntryView __im_ff_supplementalLexiconMentionsEnabled]
  -[CKMessageEntryView _swipeDownGestureRecognized:]
  -[CKMessageEntryView setSwipeGestureRecognizer:]
  -[CKMessageEntryView setIsAudioActionMenuSuspended:]
  -[CKMessageEntryView setIsAudioActionMenuResizing:]
  -[CKMessageEntryView showEffectPicker]
  -[CKMessageEntryView setKnockoutView:]
  -[CKMessageEntryView _isRunningInMVS]
  -[CKMessageEntryView setCancelButton:]
  -[CKMessageEntryView languageHasSpaces]
  -[CKMessageEntryView setStyle:]
  -[CKMessageEntryView conversationPreferredServiceChanged:]
  -[CKMessageEntryView messageReceived:]
  -[CKMessageEntryView _participantsDidChange:]
  -[CKMessageEntryView isUpdatingMentionAttributedText]
  -[CKMessageEntryView _contactLimitsChanged:]
  -[CKMessageEntryView _initializeInputContextHistory]
  -[CKMessageEntryView setAudioComposition:]
  -[CKMessageEntryView audioActionMenuController]
  -[CKMessageEntryView isAudioActionMenuResizing]
  -[CKMessageEntryView presentAudioActionMenu]
  -[CKMessageEntryView setDuration:]
  -[CKMessageEntryView previousAudioComposition]
  -[CKMessageEntryView setPreviousAudioComposition:]
  -[CKMessageEntryView configureAudioActionMenuControllerForPlayback:]
  -[CKMessageEntryView resetStyleInAttributedString:inTextView:andApplyStyleUsingBlock:]
  -[CKMessageEntryView checkForMentionsInAttributedString:inTextView:]
  -[CKMessageEntryView updateTextViewIfNecessary:withAttributedString:]
  -[CKMessageEntryView lastFoundMentionRange]
  -[CKMessageEntryView audioMessageAppDelegate]
  -[CKMessageEntryView isAudioActionMenuSuspended]
  -[CKMessageEntryView layoutIsCurrentlyCompact]
  -[CKMessageEntryView stopAudioActionMenuRecording]
  -[CKMessageEntryView setEntryFieldUpdaterCollapsedValue:]
  -[CKMessageEntryView setEntryFieldUpdaterAnimatedValue:]
  -[CKMessageEntryView paddleOverlayView]
  -[CKMessageEntryView lastConfiguredInputDelegate]
  -[CKMessageEntryView setLastConfiguredInputDelegate:]
  -[CKMessageEntryView showingMentionsSuggestions]
  -[CKMessageEntryView setShowingMentionsSuggestions:]
  -[CKMessageEntryView startPlaying]
  -[CKMessageEntryView setFrame:]
  -[CKMessageEntryView selectPluginAtIndexPath:]
  -[CKMessageEntryView pausePlaying]
  -[CKMessageEntryView range:hasValidPrefixCharacterForString:]
  -[CKMessageEntryView attributedString:shouldAddAutoCompleteAttributeForRange:]
  -[CKMessageEntryView confirmAutomaticMention:inTextView:selectedRange:]
  -[CKMessageEntryView setLastFoundMentionRange:]
  -[CKMessageEntryView layoutSubviews]
  -[CKMessageEntryView updateTextViewIfNecessary:withAttributedString:selectedRange:]
  -[CKMessageEntryView setIsUpdatingMentionAttributedText:]
  -[CKMessageEntryView entitiesForKey:]
  -[CKMessageEntryView entryFieldUpdaterCollapsedValue]
  -[CKMessageEntryView compositionWithAcceptedAutocorrection]
  -[CKMessageEntryView recipientNames]
  -[CKMessageEntryView entryFieldUpdaterAnimatedValue]
  -[CKMessageEntryView setEntryFieldCollapsed:]
  -[CKMessageEntryView _animateToCompactLayoutCollapsing:completion:]
  -[CKMessageEntryView _animateExpandForManualToggle:completion:]
  -[CKMessageEntryView animatingLayoutChange]
  -[CKMessageEntryView setAnimatingLayoutChange:]
  -[CKMessageEntryView setAppStrip:]
  -[CKMessageEntryView inputAccessoryViewBackdropColor]
  -[CKMessageEntryView updateTypingAttributesIfNeededForTextView:]
  -[CKMessageEntryView setCurrentMentionSuggestions:]
  -[CKMessageEntryView setRangeOfTappedMention:]
  -[CKMessageEntryView _shouldNotAnimateCollapseInteractive]
  -[CKMessageEntryView minifyAppStrip]
  -[CKMessageEntryView mentionSuggestionView]
  -[CKMessageEntryView rangeOfTappedMention]
  -[CKMessageEntryView setShowMentionSuggestions:animated:completion:]
  -[CKMessageEntryView currentMentionSuggestions]
  -[CKMessageEntryView updateMentionsAssociations]
  -[CKMessageEntryView checkForMentions]
  -[CKMessageEntryView setPerformingActionMenuSend:]
  -[CKMessageEntryView _addMessageToInputContextHistory:]
  -[CKMessageEntryView setCurrentTappedCharacterIndex:]
  -[CKMessageEntryView currentTappedCharacterIndex]
  -[CKMessageEntryView setDidSelectEntityCompletionHandler:]
  -[CKMessageEntryView didSelectEntityCompletionHandler]
  -[CKMessageEntryView showMentionSuggestionsForEntities:replacementRange:]
  -[CKMessageEntryView shouldUpdateMentionsInTextView:inRange:withReplacementText:]
  -[CKMessageEntryView _currentInputDelegate]
  -[CKMessageEntryView contentView]
  -[CKMessageEntryView showsKeyboardPredictionBar]
  -[CKMessageEntryView replaceAttributedText:inTextView:atIndex:updatedSelectedRange:replacementRange:]
  -[CKMessageEntryView configureAttributedString:inTextView:forMentionOverrideInRange:shouldOverride:]
  -[CKMessageEntryView setEntityHandles:]
  -[CKMessageEntryView updateTextInputContext]
  -[CKMessageEntryView setMentionsLexicon:]
  -[CKMessageEntryView insertMentionWithEntity:replacementRange:fallbackName:source:]
  -[CKMessageEntryView setEntityTree:]
  -[CKMessageEntryView confirmAutomaticMention:inTextView:isSending:selectedRange:]
  -[CKMessageEntryView associateEntity:withKey:]
  -[CKMessageEntryView attributedString:nextCharacterRangeFromRange:containsPossibleChild:]
  -[CKMessageEntryView mentionsLexicon]
  -[CKMessageEntryView setEntityDictionary:]
  -[CKMessageEntryView entityDictionary]
  -[CKMessageEntryView didFinishAnimatingMentionWithAnimationIdentifier:]
  -[CKMessageEntryView insertionPointExitedRangeWithMention]
  -[CKMessageEntryView marginInsets]
  -[CKMessageEntryView insertionPointEnteredRange:forMention:withEntities:]
  -[CKMessageEntryView canSuggestMentionForCurrentSelection]
  -[CKMessageEntryView insertMentionByName:]
  -[CKMessageEntryView didTapMention:characterIndex:]
  -[CKMessageEntryView shouldUpdateMentionsForEntryContentViewWillChangeText:inRange:withReplacementText:]
  -[CKMessageEntryView suggestionViewDidSelectEntity:]
  -[CKMessageEntryView acceptAutomaticMentionConfirmation]
  -[CKMessageEntryView reloadMentionsData]
  -[CKMessageEntryView handleContentViewChangeWithCompletion:]
  -[CKMessageEntryView isPredictionBarEnabled]
  -[CKMessageEntryView is3rdPartyKeyboardVisible]
  -[CKMessageEntryView isTransitioningForBrowserSwitcher]
  -[CKMessageEntryView audioReplyButton]
  -[CKMessageEntryView setDelegate:]
  -[CKMessageEntryView _localeChanged]
  -[CKMessageEntryView isPerformingActionMenuSend]
  -[CKMessageEntryView setAudioActionMenuController:]
  -[CKMessageEntryView swipeGestureRecognizer]
  -[CKMessageEntryView shouldRecordForService:]
  -[CKMessageEntryView appStrip]
  -[CKMessageEntryView cancelRecordingAndShowAudioHint]
  -[CKMessageEntryView sendAudioMessage]
  -[CKMessageEntryView isSendingMessage]
  -[CKMessageEntryView cancelAudioMessage]
  -[CKMessageEntryView setWaveformView:]
  -[CKMessageEntryView setWaveformViewSize:]
  -[CKMessageEntryView _pausePlaying:]
  -[CKMessageEntryView _startPlaying:]
  -[CKMessageEntryView playMenuItemAction:]
  -[CKMessageEntryView pauseMenuItemAction:]
  -[CKMessageEntryView _trackAudioMessageSentWithComposition:]
  -[CKMessageEntryView audioMenuItemAction:]
  -[CKMessageEntryView sendMenuItemAction:]
  -[CKMessageEntryView setAudioHintView:]
  -[CKMessageEntryView isKeyboardVisible]
  -[CKMessageEntryView setAudioActionMenuFrame:]
  -[CKMessageEntryView _trackAudioMessageRecordingStarted]
  -[CKMessageEntryView showHintWithText:animatingReferenceButton:]
  -[CKMessageEntryView _sendAudioMessage]
  -[CKMessageEntryView presentAudioActionButtons]
  -[CKMessageEntryView sendButtonEnabled]
  -[CKMessageEntryView shouldAllowSendWhenSendButtonDisabled]
  -[CKMessageEntryView _sendButtonColor]
  -[CKMessageEntryView setAudioMessageRecordingAvailable:]
  -[CKMessageEntryView updateAudioMessageRecordingAvailability]
  -[CKMessageEntryView pluginButtonsEnabled]
  -[CKMessageEntryView hasFailedRecipients]
  -[CKMessageEntryView isComposingRecipient]
  -[CKMessageEntryView photoButtonEnabled]
  -[CKMessageEntryView clickInteractionDelegate]
  -[CKMessageEntryView shouldAllowImpactSend]
  -[CKMessageEntryView _isApplePayCashInShelf]
  -[CKMessageEntryView shouldDisablePluginButtons]
  -[CKMessageEntryView setRecordedAudioView:]
  -[CKMessageEntryView messageEntryContentViewDidReturn:]
  -[CKMessageEntryView switcherView:didMagnify:]
  -[CKMessageEntryView messageEntryContentViewDidChange:]
  -[CKMessageEntryView messageEntryContentViewDidChangeSelection:]
  -[CKMessageEntryView messageEntryContentViewShelfDidChange:]
  -[CKMessageEntryView setPowerLevels:]
  -[CKMessageEntryView messageEntryContentViewShouldBeginEditing:]
  -[CKMessageEntryView messageEntryContentViewDidBeginEditing:wasAlreadyActive:]
  -[CKMessageEntryView placeholderHeight]
  -[CKMessageEntryView messageEntryContentViewDidEndEditing:]
  -[CKMessageEntryView messageEntryContentView:shouldInsertMediaObjects:]
  -[CKMessageEntryView suggestionView:entityAtIndex:]
  -[CKMessageEntryView messageEntryContentViewMaxShelfPluginViewSize:]
  -[CKMessageEntryView messageEntryContentView:didTapMediaObject:]
  -[CKMessageEntryView audioReplyButtonCancel:]
  -[CKMessageEntryView messageEntryContentViewWasTapped:isLongPress:]
  -[CKMessageEntryView messageEntryContentView:didPasteURL:]
  -[CKMessageEntryView audioRecorderRecordingDidChange:]
  -[CKMessageEntryView messageEntryContentViewDidTapHandwritingKey:]
  -[CKMessageEntryView messageEntryContentViewCancelWasTapped:shelfPluginPayload:]
  -[CKMessageEntryView messageEntryContentView:didStagePluginPayload:]
  -[CKMessageEntryView messageEntryContentViewWillChangeText:inRange:withReplacementText:]
  -[CKMessageEntryView messageEntryContentViewDidTapMention:characterIndex:]
  -[CKMessageEntryView messageEntryContentView:didTapCharacterAtIndex:isLongPress:]
  -[CKMessageEntryView messageEntryContentView:insertionPointEnteredRange:forMention:withEntities:]
  -[CKMessageEntryView audioRecorderRecordingDidFail:]
  -[CKMessageEntryView messageEntryContentViewInsertionPointExitedRangeWithMention:]
  -[CKMessageEntryView audioRecorderDidUpdateAveragePower:]
  -[CKMessageEntryView activeKeyboardHeight]
  -[CKMessageEntryView messageEntryContentViewCanSuggestMentionForCurrentSelection:]
  -[CKMessageEntryView actionMenuControllerWillPresentActionMenu:animated:]
  -[CKMessageEntryView messageEntryContentView:insertMention:entity:replacementRange:]
  -[CKMessageEntryView messageEntryContentViewCancelShowMentionSuggestions:]
  -[CKMessageEntryView messageEntryContentView:showMentionSuggestionsForEntities:replacementRange:completionHandler:]
  -[CKMessageEntryView audioReplyButtonStart:]
  -[CKMessageEntryView sizeThatFits:]
  -[CKMessageEntryView actionMenuControllerWillDismissActionMenu:animated:]
  -[CKMessageEntryView audioReplyButtonStop:]
  -[CKMessageEntryView actionMenuControllerDidDismissActionMenu:]
  -[CKMessageEntryView messageEntryRecordedAudioView:mediaObjectDidFinishPlaying:]
  -[CKMessageEntryView coverViewWidth]
  -[CKMessageEntryView messageEntryRecordedAudioViewPressedDelete:]
  -[CKMessageEntryView messageEntryRecordedAudioViewPressedPlay:]
  -[CKMessageEntryView suggestionView:didSelectEntity:]
  -[CKMessageEntryView messageEntryRecordedAudioViewPressedPause:]
  -[CKMessageEntryView messageEntryRecordedAudioViewPlaybackProgressDidChange:]
  -[CKMessageEntryView browserButtonFrame]
  -[CKMessageEntryView setSendingMessage:]
  -[CKMessageEntryView switcherView:didSelectPluginAtIndex:]
  -[CKMessageEntryView didDismissPaddleOverlayView:]
  -[CKMessageEntryView backdropGroupName]
  -[CKMessageEntryView numberOfSuggestionsInSuggestionView:forSection:]
  -[CKMessageEntryView suggestionView:indexPathOfEntityWithIdentifier:]
  -[CKMessageEntryView resumeAudioActionMenu]
  -[CKMessageEntryView layoutManagerDidFinishAnimatingMentionWithAnimationIdentifier:]
  -[CKMessageEntryView appSelectionInterfaceSelectedItem:]
  -[CKMessageEntryView setKeyboardVisible:]
  -[CKMessageEntryView safeAreaInsets]
  -[CKMessageEntryView prepareForBrowserSwitcherCompactTransitionIsSnapshotting:]
  -[CKMessageEntryView sendButtonConvertPointToScreen:]
  -[CKMessageEntryView photoButton]
  -[CKMessageEntryView finishBrowserSwitcherCompactTransition]
  -[CKMessageEntryView sendButtonFrameInScreenCoordinates]
  -[CKMessageEntryView setShouldHideBackgroundView:]
  -[CKMessageEntryView keyCommands]
  -[CKMessageEntryView shouldHideBackgroundView]
  -[CKMessageEntryView setShouldOpaqueBackgroundView:]
  -[CKMessageEntryView shouldOpaqueBackgroundView]
  -[CKMessageEntryView dismissAudioActionMenuAnimated:]
  -[CKMessageEntryView dismissAudioActionMenuForResize]
  -[CKMessageEntryView presentAudioActionMenuForResize]
  -[CKMessageEntryView stopAudioActionMenuRecordingForResize]
  -[CKMessageEntryView setAudioActionMenuEnabled:]
  -[CKMessageEntryView suspendAudioActionMenu]
  -[CKMessageEntryView setShowAppStrip:animated:completion:]
  -[CKMessageEntryView clearAppStripSelection]
  -[CKMessageEntryView pasteBoardTextFromComposition:]
  -[CKMessageEntryView snapshotForCompactBrowserAnimation]
  -[CKMessageEntryView beginDeferringEntryFieldCollapsedStateChanges]
  -[CKMessageEntryView endDeferringEntryFieldCollapsedStateChanges]
  -[CKMessageEntryView setDisablePluginButtons:]
  -[CKMessageEntryView setComposingRecipient:]
  -[CKMessageEntryView setFailedRecipients:]
  -[CKMessageEntryView setUnreachableEmergencyRecipient:]
  -[CKMessageEntryView sendAudioButtonTapped:]
  -[CKMessageEntryView _accessoryViewFadeDuration]
  -[CKMessageEntryView showMessageEffectsHint]
  -[CKMessageEntryView startRecordingForRaiseGesture]
  -[CKMessageEntryView stopRecordingForRaiseGestureWithFailure:]
  -[CKMessageEntryView sendCurrentLocationMessage]
  -[CKMessageEntryView setSendAudioButton:]
  -[CKMessageEntryView setAudioMessageAppDelegate:]
  -[CKMessageEntryView shouldDisableAttachments]
  -[CKMessageEntryView setClickInteractionDelegate:]
  -[CKMessageEntryView setLanguageHasSpaces:]
  -[CKMessageEntryView extendAppStripBlurToKeyplaneTop]
  -[CKMessageEntryView setExtendAppStripBlurToKeyplaneTop:]
  -[CKMessageEntryView externalAppBrowserMenuHost]
  -[CKMessageEntryView setPaddleOverlayView:]
  -[CKMessageEntryView setExternalAppBrowserMenuHost:]
  -[CKMessageEntryView setMentionSuggestionView:]
  -[CKMessageEntryView audioActionMenuGestureRecognizerButton]
  -[CKMessageEntryView isAudioMessageRecordingAvailable]
  -[CKMessageEntryView deferredSetup]
  -[CKMessageEntryView knockoutView]
  -[CKMessageEntryView recorder]
  -[CKMessageEntryView hasUnreachableEmergencyRecipient]
  -[CKMessageEntryView sendButton]
  -[CKMessageEntryView setShutterButton:]
  -[CKMessageEntryView setMarginInsets:]
  -[CKMessageEntryView contentClipView]
  -[CKMessageEntryView actionMenuGestureRecognizerButtonDidTouchDownButton:]
  -[CKMessageEntryView actionMenuGestureRecognizerButtonShouldShowHint:]
  -[CKMessageEntryView actionMenuGestureRecognizerButtonShowHint:]
  -[CKMessageEntryView setBackgroundView:]
  -[CKMessageEntryView setDisplayMode:]
  -[CKMessageEntryView actionMenuGestureRecognizerButtonDidTouchUpInsideButton:]
  -[CKMessageEntryView actionMenuGestureRecognizerButtonIsShowingHint:]
  -[CKMessageEntryView anchorRect]
  -[CKMessageEntryView actionMenuGestureRecognizerButtonShouldRecognizeGesture:]
  -[CKMessageEntryView actionMenuGestureRecognizerButtonGestureDidBegin:]
  -[CKMessageEntryView actionMenuGestureRecognizerButtonGestureDidEnd:]
  -[CKMessageEntryView delegate]
  -[CKMessageEntryView setConversation:]
  -[CKMessageEntryView waveformView]
  -[CKMessageEntryView _dynamicUserInterfaceTraitDidChange]
  -[CKMessageEntryView startRecording]
  -[CKMessageEntryView setRecipientNames:]
  -[CKMessageEntryView setKeyCommands:]
  -[CKMessageEntryView dealloc]
  -[CKMessageEntryView audioButton]
  -[CKMessageEntryView conversation]
  -[CKMessageEntryView setContentView:]
  -[CKMessageEntryView setContentClipView:]
  -[CKMessageEntryView inputContextHistory]
  -[CKMessageEntryView stopButton]
  -[CKMessageEntryView stopRecording]
  -[CKMessageEntryView setComposition:]
  -[CKMessageEntryView emojiButton]
  -[CKMessageEntryView powerLevels]
  -[CKMessageEntryView audioHintView]
  -[CKMessageEntryView shouldShowSubject]
  -[CKMessageEntryView style]
  -[CKMessageEntryView __im_ff_systemImageAdoptionEnabled]
  -[CKMessageEntryView __im_ff_isNewAudioMessageFlowEnabled]
  -[CKMessageEntryView sendButtonClickInteraction]
  -[CKMessageEntryView setSendButtonClickInteraction:]
  -[CKMessageEntryView buttonAndTextAreaContainerView]
  -[CKMessageEntryView shouldEntryViewBeExpandedLayout]
  -[CKMessageEntryView adjustedCoverInsets]
  -[CKMessageEntryView duration]
  -[CKMessageEntryView shouldShowPluginButtons]
  -[CKMessageEntryView coverFrameThatFitsInSize:]
  -[CKMessageEntryView inputButtonContainerView]
  -[CKMessageEntryView bottomInsetForAppStrip]
  -[CKMessageEntryView inputButtonSize]
  -[CKMessageEntryView browserButton]
  -[CKMessageEntryView shouldShowSendButton]
  -[CKMessageEntryView sendButtonSize]
  -[CKMessageEntryView shouldShowCharacterCount]
  -[CKMessageEntryView characterCountSize]
  -[CKMessageEntryView shouldCenterCharacterCount]
  -[CKMessageEntryView knockoutCoverView]
  -[CKMessageEntryView collpasedPlaceholderLabel]
  -[CKMessageEntryView entryFieldCollapsed]
  -[CKMessageEntryView updateTextViewsForShouldHideCaret:]
  -[CKMessageEntryView characterCountLabel]
  -[CKMessageEntryView cancelButtonTapped:]
  -[CKMessageEntryView backgroundView]
  -[CKMessageEntryView isCharacterCountHidden]
  -[CKMessageEntryView shouldShowDictationButton]
  -[CKMessageEntryView dictationButton]
  -[CKMessageEntryView waveformViewSize]
  -[CKMessageEntryView isAudioActionMenuVisible]
  -[CKMessageEntryView audioActionMenuFrame]
  -[CKMessageEntryView recordedAudioView]


CKStickerDetailCell : UITableViewCell
 @property  CKAnimatedImageView *stickerView
 @property  UILabel *senderLabel
 @property  UILabel *stickerPackLabel
 @property  UIDateLabel *timestampLabel
 @property  SKUIItemOfferButton *viewButton
 @property  id stickerPreview
 @property  NSString *senderText
 @property  NSString *stickerPackText
 @property  NSDate *timestampDate
 @property  <CKStickerDetailCellDelegate> *delegate

  // class methods
  +[CKStickerDetailCell identifier]

  // instance methods
  -[CKStickerDetailCell .cxx_destruct]
  -[CKStickerDetailCell layoutSubviews]
  -[CKStickerDetailCell setDelegate:]
  -[CKStickerDetailCell senderLabel]
  -[CKStickerDetailCell timestampDate]
  -[CKStickerDetailCell viewButton]
  -[CKStickerDetailCell prepareForReuse]
  -[CKStickerDetailCell senderText]
  -[CKStickerDetailCell delegate]
  -[CKStickerDetailCell initWithStyle:reuseIdentifier:]
  -[CKStickerDetailCell didMoveToWindow]
  -[CKStickerDetailCell setStickerView:]
  -[CKStickerDetailCell setSenderLabel:]
  -[CKStickerDetailCell setStickerPackLabel:]
  -[CKStickerDetailCell setTimestampLabel:]
  -[CKStickerDetailCell setViewButton:]
  -[CKStickerDetailCell setStickerPreview:]
  -[CKStickerDetailCell setSenderText:]
  -[CKStickerDetailCell setStickerPackText:]
  -[CKStickerDetailCell setTimestampDate:]
  -[CKStickerDetailCell stickerPackLabel]
  -[CKStickerDetailCell timestampLabel]
  -[CKStickerDetailCell stickerPreview]
  -[CKStickerDetailCell stickerPackText]
  -[CKStickerDetailCell stickerView]


CKTranscriptPrintPageRenderer : UIPrintPageRenderer
 @property  UIScrollView *scrollView
 @property  CKPrintTranscriptCollectionViewController *transcriptCollectionViewController

  // class methods
  +[CKTranscriptPrintPageRenderer renderViewWithText:withOffsetVertical:]

  // instance methods
  -[CKTranscriptPrintPageRenderer setScrollView:]
  -[CKTranscriptPrintPageRenderer scrollView]
  -[CKTranscriptPrintPageRenderer .cxx_destruct]
  -[CKTranscriptPrintPageRenderer drawPageAtIndex:inRect:]
  -[CKTranscriptPrintPageRenderer transcriptCollectionViewController]
  -[CKTranscriptPrintPageRenderer drawScrollViewAtIndex:inRect:]
  -[CKTranscriptPrintPageRenderer initWithTranscriptCollectionViewController:]
  -[CKTranscriptPrintPageRenderer setTranscriptCollectionViewController:]
  -[CKTranscriptPrintPageRenderer numberOfPages]


CKAppMenuViewController : UIViewController <UICollectionViewDelegate, CKAppMenuCollectionViewCellDelegate>
 @property  UICollectionView *collectionView
 @property  UICollectionViewDiffableDataSource *dataSource
 @property  NSArray *menuItems
 @property  UIVisualEffectView *backgroundView
 @property  <CKAppMenuViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAppMenuViewController preferredContentSize]
  -[CKAppMenuViewController collectionView:didSelectItemAtIndexPath:]
  -[CKAppMenuViewController setDataSource:]
  -[CKAppMenuViewController .cxx_destruct]
  -[CKAppMenuViewController viewDidLoad]
  -[CKAppMenuViewController setDelegate:]
  -[CKAppMenuViewController initWithNibName:bundle:]
  -[CKAppMenuViewController dataSource]
  -[CKAppMenuViewController collectionView]
  -[CKAppMenuViewController menuItems]
  -[CKAppMenuViewController setCollectionView:]
  -[CKAppMenuViewController setBackgroundView:]
  -[CKAppMenuViewController delegate]
  -[CKAppMenuViewController _dynamicUserInterfaceTraitDidChange]
  -[CKAppMenuViewController updateBackgroundVisualEffect]
  -[CKAppMenuViewController keyCommandReturn:]
  -[CKAppMenuViewController keyCommandEscape:]
  -[CKAppMenuViewController handleSelectionOfIndexPath:]
  -[CKAppMenuViewController appMenuCollectionViewCell:didHoverWithState:]
  -[CKAppMenuViewController appMenuCollectionViewCellWasTapped:]
  -[CKAppMenuViewController setMenuItems:]
  -[CKAppMenuViewController backgroundView]


CKMentionAutoCompleteAttribute : NSObject
 @property  CKMentionEntityNode *mentionEntityNode
 @property  NSString *originalText
 @property  NSString *displayText

  // instance methods
  -[CKMentionAutoCompleteAttribute .cxx_destruct]
  -[CKMentionAutoCompleteAttribute initWithMentionEntityNode:originalText:displayText:]
  -[CKMentionAutoCompleteAttribute mentionEntityNode]
  -[CKMentionAutoCompleteAttribute originalText]
  -[CKMentionAutoCompleteAttribute setDisplayText:]
  -[CKMentionAutoCompleteAttribute setOriginalText:]
  -[CKMentionAutoCompleteAttribute setMentionEntityNode:]
  -[CKMentionAutoCompleteAttribute displayText]


CKBalloonView : CKBalloonImageView <CKInvisibleInkEffectHostView, UIGestureRecognizerDelegate>
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  UITapGestureRecognizer *doubleTapGestureRecognizer
 @property  UILongPressGestureRecognizer *longPressGestureRecognizer
 @property  CKManualUpdater *displayUpdater
 @property  UIImageView *overlay
 @property  CKInvisibleInkEffectController *invisibleInkEffectController
 @property  <CKBalloonViewDelegate> *delegate
 @property  BOOL orientation
 @property  BOOL hasTail
 @property  BOOL balloonStyle
 @property  BOOL color
 @property  BOOL strokeColor
 @property  {UIEdgeInsets=dddd} textAlignmentInsets
 @property  BOOL showingMenu
 @property  BOOL canUseOpaqueMask
 @property  BOOL hasOverlay
 @property  UIColor *overlayColor
 @property  BOOL wantsSkinnyMask
 @property  BOOL wantsMultilineMask
 @property  BOOL useLargeAsset
 @property  long long userInterfaceStyle
 @property  long long userInterfaceLevel
 @property  NSMutableArray *filters
 @property  {CKBalloonDescriptor_t=ccccQccqqBBBB} balloonDescriptor
 @property  BOOL balloonShape
 @property  BOOL balloonTailShape
 @property  unsigned long balloonCorners
 @property  BOOL needsGroupOpacity
 @property  CABackdropLayer *backdropFilterLayer
 @property  BOOL invisibleInkEffectEnabled
 @property  BOOL invisibleInkEffectPaused
 @property  BOOL animationPaused
 @property  BOOL selected
 @property  Class invisibleInkEffectViewClass
 @property  UIImage *imageForInvisibleInkEffectView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBalloonView setUserInterfaceStyle:]
  -[CKBalloonView overlay]
  -[CKBalloonView clearFilters]
  -[CKBalloonView overlayColor]
  -[CKBalloonView setFilters:]
  -[CKBalloonView setOrientation:]
  -[CKBalloonView setTapGestureRecognizer:]
  -[CKBalloonView traitCollectionDidChange:]
  -[CKBalloonView filters]
  -[CKBalloonView doubleTapGestureRecognizer]
  -[CKBalloonView prepareForDisplay]
  -[CKBalloonView color]
  -[CKBalloonView .cxx_destruct]
  -[CKBalloonView hasTail]
  -[CKBalloonView layoutSublayersOfLayer:]
  -[CKBalloonView setCanUseOpaqueMask:]
  -[CKBalloonView prepareForDisplayIfNeeded]
  -[CKBalloonView canUseOpaqueMask]
  -[CKBalloonView userInterfaceStyle]
  -[CKBalloonView layoutSubviews]
  -[CKBalloonView setDelegate:]
  -[CKBalloonView setStrokeColor:]
  -[CKBalloonView configureForComposition:]
  -[CKBalloonView setColor:]
  -[CKBalloonView tapGestureRecognizer]
  -[CKBalloonView longPressGestureRecognizer]
  -[CKBalloonView sizeThatFits:]
  -[CKBalloonView userInterfaceLevel]
  -[CKBalloonView prepareForReuse]
  -[CKBalloonView isSelected]
  -[CKBalloonView orientation]
  -[CKBalloonView configureForMessagePart:]
  -[CKBalloonView configureForChatItem:]
  -[CKBalloonView addFilter:]
  -[CKBalloonView initWithFrame:]
  -[CKBalloonView invisibleInkEffectController]
  -[CKBalloonView setHasOverlay:autoDismiss:]
  -[CKBalloonView invisibleInkEffectViewClass]
  -[CKBalloonView invisibleInkEffectViewWasUncovered]
  -[CKBalloonView attachInvisibleInkEffectView]
  -[CKBalloonView detachInvisibleInkEffectView]
  -[CKBalloonView delegate]
  -[CKBalloonView overlayImage]
  -[CKBalloonView cullSubviewsWithVisibleBounds:]
  -[CKBalloonView setLongPressGestureRecognizer:]
  -[CKBalloonView balloonDescriptor]
  -[CKBalloonView dealloc]
  -[CKBalloonView tapGestureRecognized:]
  -[CKBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKBalloonView displayUpdater]
  -[CKBalloonView balloonCorners]
  -[CKBalloonView strokeColor]
  -[CKBalloonView setHasTail:]
  -[CKBalloonView setHasOverlay:]
  -[CKBalloonView doubleTapGestureRecognized:]
  -[CKBalloonView setDoubleTapGestureRecognizer:]
  -[CKBalloonView longPressGestureRecognized:]
  -[CKBalloonView setDisplayUpdater:]
  -[CKBalloonView setBalloonTailShape:]
  -[CKBalloonView setBalloonStyle:]
  -[CKBalloonView setBalloonCorners:]
  -[CKBalloonView setNeedsPrepareForDisplay]
  -[CKBalloonView _dismissOverlay]
  -[CKBalloonView setTextAlignmentInsets:]
  -[CKBalloonView setUserInterfaceLevel:]
  -[CKBalloonView setSelected:withSelectionState:]
  -[CKBalloonView setInvisibleInkEffectEnabled:]
  -[CKBalloonView setInvisibleInkEffectPaused:]
  -[CKBalloonView createOverlayImageView]
  -[CKBalloonView addOverlaySubview:]
  -[CKBalloonView wantsSkinnyMask]
  -[CKBalloonView setWantsSkinnyMask:]
  -[CKBalloonView invisibleInkEffectPaused]
  -[CKBalloonView setInvisibleInkEffectController:]
  -[CKBalloonView updateRasterizationForInvisibleInkEffect]
  -[CKBalloonView setBalloonShape:]
  -[CKBalloonView setUseLargeAsset:]
  -[CKBalloonView setWantsMultilineMask:]
  -[CKBalloonView balloonShape]
  -[CKBalloonView hasOverlay]
  -[CKBalloonView balloonTailShape]
  -[CKBalloonView balloonStyle]
  -[CKBalloonView wantsMultilineMask]
  -[CKBalloonView useLargeAsset]
  -[CKBalloonView invisibleInkEffectEnabled]
  -[CKBalloonView setHasOverlay:animated:]
  -[CKBalloonView invisibleInkEffectViewWasSuspended]
  -[CKBalloonView invisibleInkEffectViewWasResumed]
  -[CKBalloonView imageForInvisibleInkEffectView]
  -[CKBalloonView needsGroupOpacity]
  -[CKBalloonView updateBalloonForTraitCollection:]
  -[CKBalloonView setBackdropFilterLayer:]
  -[CKBalloonView prepareForAcknowledgementDisplay]
  -[CKBalloonView setBalloonDescriptor:]
  -[CKBalloonView prepareForAcknowledgementDismissal]
  -[CKBalloonView performTranscriptInsertionAnimation:]
  -[CKBalloonView performTranscriptReloadAnimation:]
  -[CKBalloonView performTranscriptRemovalAnimation:]
  -[CKBalloonView performTranscriptHideAnimation:]
  -[CKBalloonView performTranscriptRevealAnimation:]
  -[CKBalloonView isShowingMenu]
  -[CKBalloonView textAlignmentInsets]
  -[CKBalloonView backdropFilterLayer]
  -[CKBalloonView animationPaused]
  -[CKBalloonView setAnimationPaused:]
  -[CKBalloonView setOverlay:]
  -[CKBalloonView configureForMediaObject:previewWidth:orientation:]
  -[CKBalloonView __im_ff_commSafetyUIEnabled]
  -[CKBalloonView configureForMediaObject:previewWidth:orientation:hasInvisibleInkEffect:]


CKStampChatItem : CKChatItem
  // instance methods
  -[CKStampChatItem layoutType]
  -[CKStampChatItem transcriptOrientation]
  -[CKStampChatItem displayDuringSend]
  -[CKStampChatItem contentInsets]
  -[CKStampChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKStampChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKStampChatItem cellClass]


CKAcknowledgmentIconCollectionReusableView : UICollectionReusableView
 @property  UIImageView *glyphImageView

  // class methods
  +[CKAcknowledgmentIconCollectionReusableView supplementaryViewKind]
  +[CKAcknowledgmentIconCollectionReusableView reuseIdentifier]

  // instance methods
  -[CKAcknowledgmentIconCollectionReusableView glyphImageView]
  -[CKAcknowledgmentIconCollectionReusableView setGlyphImageView:]
  -[CKAcknowledgmentIconCollectionReusableView configureWithAcknowledgmentTally:]
  -[CKAcknowledgmentIconCollectionReusableView .cxx_destruct]
  -[CKAcknowledgmentIconCollectionReusableView layoutSubviews]
  -[CKAcknowledgmentIconCollectionReusableView initWithFrame:]


CKPhotosSearchController : CKMessageTypeSearchController <QLPreviewControllerDelegate, QLPreviewControllerConformingDelegate>
 @property  unsigned long contentMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKPhotosSearchController sectionIdentifier]
  +[CKPhotosSearchController relativeDateFormatter]
  +[CKPhotosSearchController supportsQuicklookForResult:]
  +[CKPhotosSearchController supportsMacSelection]
  +[CKPhotosSearchController indexingString]
  +[CKPhotosSearchController sectionTitle]
  +[CKPhotosSearchController reuseIdentifier]
  +[CKPhotosSearchController cellClass]

  // instance methods
  -[CKPhotosSearchController fetchAttributes]
  -[CKPhotosSearchController filterQueries]
  -[CKPhotosSearchController filterQueriesBase]
  -[CKPhotosSearchController initWithSectionIndex:]
  -[CKPhotosSearchController filterQueriesWithCommSafety]
  -[CKPhotosSearchController _internalInterGroupSpacing]
  -[CKPhotosSearchController wantsHeaderSection]
  -[CKPhotosSearchController _filterControlTapped:]
  -[CKPhotosSearchController saveAttachmentForResult:]
  -[CKPhotosSearchController sectionSubtitle]
  -[CKPhotosSearchController headerOverrideClass]
  -[CKPhotosSearchController additionalGroupInsets]
  -[CKPhotosSearchController contentMode]
  -[CKPhotosSearchController maxResultsForMode:]
  -[CKPhotosSearchController chatGUIDForSearchableItem:]
  -[CKPhotosSearchController fractionalWidth:count:forLayoutWidth:]
  -[CKPhotosSearchController _additionalMenuElementsForResult:]
  -[CKPhotosSearchController itemProviderForSearchResult:]
  -[CKPhotosSearchController setContentMode:]
  -[CKPhotosSearchController _activityItemProviderForResult:]
  -[CKPhotosSearchController previewViewControllerForResult:]
  -[CKPhotosSearchController queryAttributesForText:]
  -[CKPhotosSearchController detailsFilterQueriesForChatGUIDs:]
  -[CKPhotosSearchController queryResultsForItems:]
  -[CKPhotosSearchController applyLayoutMarginsToLayoutGroup]
  -[CKPhotosSearchController layoutGroupWithEnvironment:]
  -[CKPhotosSearchController cellForSupplementryItemInCollectionView:atIndexPath:supplementryViewKind:]
  -[CKPhotosSearchController updateSupplementryViewIfNeeded:atIndexPath:]
  -[CKPhotosSearchController interGroupSpacing]
  -[CKPhotosSearchController __im_ff_commSafetyUIEnabled]


CKOnboardingBoldButtonProvider : NSObject
  // instance methods
  -[CKOnboardingBoldButtonProvider shouldForceAlternateButton]
  -[CKOnboardingBoldButtonProvider boldAlternateButton]
  -[CKOnboardingBoldButtonProvider boldButton]


CKInlineNotificationView : UIView
 @property  BOOL _shouldSuppressLayout
 @property  UIView *contentView
 @property  UIView *clippingView
 @property  UIView *containerView
 @property  UIVisualEffectView *backdropView
 @property  UIView *bottomLineView
 @property  BOOL animatingVisibility
 @property  <CKInlineNotificationViewDelegate> *delegate
 @property  BOOL visible

  // instance methods
  -[CKInlineNotificationView visible]
  -[CKInlineNotificationView backdropView]
  -[CKInlineNotificationView setBackdropView:]
  -[CKInlineNotificationView setVisible:]
  -[CKInlineNotificationView bottomLineView]
  -[CKInlineNotificationView animatingVisibility]
  -[CKInlineNotificationView setVisible:animated:completion:]
  -[CKInlineNotificationView setAnimatingVisibility:]
  -[CKInlineNotificationView setBottomLineView:]
  -[CKInlineNotificationView _shouldSuppressLayout]
  -[CKInlineNotificationView _invalidateContentViewHeight]
  -[CKInlineNotificationView containerView]
  -[CKInlineNotificationView .cxx_destruct]
  -[CKInlineNotificationView layoutSubviews]
  -[CKInlineNotificationView contentView]
  -[CKInlineNotificationView setDelegate:]
  -[CKInlineNotificationView sizeThatFits:]
  -[CKInlineNotificationView setContainerView:]
  -[CKInlineNotificationView initWithFrame:]
  -[CKInlineNotificationView delegate]
  -[CKInlineNotificationView setClippingView:]
  -[CKInlineNotificationView dealloc]
  -[CKInlineNotificationView contentViewSizeThatFits:]
  -[CKInlineNotificationView clippingView]


CKLocationShareBalloonView : CKImageBalloonView
 @property  UILabel *titleLabel
 @property  UILabel *locationLabel
 @property  UIButton *startSharingButton
 @property  UIButton *ignoreButton
 @property  UIView *horizontalSeparator
 @property  UIView *verticalSeparator
 @property  UIImageView *chevron
 @property  UIVisualEffectView *effectView
 @property  <CKLocationShareBalloonViewDelegate> *delegate
 @property  long long offerState
 @property  NSString *titleString
 @property  NSString *locationString

  // instance methods
  -[CKLocationShareBalloonView clearFilters]
  -[CKLocationShareBalloonView titleLabel]
  -[CKLocationShareBalloonView setEffectView:]
  -[CKLocationShareBalloonView locationLabel]
  -[CKLocationShareBalloonView titleString]
  -[CKLocationShareBalloonView chevron]
  -[CKLocationShareBalloonView prepareForDisplay]
  -[CKLocationShareBalloonView setIgnoreButton:]
  -[CKLocationShareBalloonView locationString]
  -[CKLocationShareBalloonView startSharingButton]
  -[CKLocationShareBalloonView horizontalSeparator]
  -[CKLocationShareBalloonView verticalSeparator]
  -[CKLocationShareBalloonView _shareButtonHit:]
  -[CKLocationShareBalloonView setStartSharingButton:]
  -[CKLocationShareBalloonView _ignoreButtonHit:]
  -[CKLocationShareBalloonView setHorizontalSeparator:]
  -[CKLocationShareBalloonView .cxx_destruct]
  -[CKLocationShareBalloonView setVerticalSeparator:]
  -[CKLocationShareBalloonView setLocationLabel:]
  -[CKLocationShareBalloonView setOfferState:]
  -[CKLocationShareBalloonView setLocationString:]
  -[CKLocationShareBalloonView setTitleLabel:]
  -[CKLocationShareBalloonView layoutSubviews]
  -[CKLocationShareBalloonView setDelegate:]
  -[CKLocationShareBalloonView configureForLocationShareOfferChatItem:]
  -[CKLocationShareBalloonView effectView]
  -[CKLocationShareBalloonView gestureRecognizer:shouldReceiveTouch:]
  -[CKLocationShareBalloonView addFilter:]
  -[CKLocationShareBalloonView initWithFrame:]
  -[CKLocationShareBalloonView setTitleString:]
  -[CKLocationShareBalloonView setChevron:]
  -[CKLocationShareBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKLocationShareBalloonView ignoreButton]
  -[CKLocationShareBalloonView offerState]


CKVisualIdentityPickerViewController : CNVisualIdentityPickerViewController <CNVisualIdentityPickerViewControllerDelegate>
 @property  CKConversation *conversation
 @property  <CKVisualIdentityPickerViewControllerDelegate> *presentationDelegate

  // class methods
  +[CKVisualIdentityPickerViewController imagePickerForGroupIdentity:withConversation:]
  +[CKVisualIdentityPickerViewController imagePickerForContact:]

  // instance methods
  -[CKVisualIdentityPickerViewController .cxx_destruct]
  -[CKVisualIdentityPickerViewController visualIdentityPickerDidCancel:]
  -[CKVisualIdentityPickerViewController visualIdentityPicker:didUpdatePhotoForVisualIdentity:withContactImage:]
  -[CKVisualIdentityPickerViewController presentationDelegate]
  -[CKVisualIdentityPickerViewController setConversation:]
  -[CKVisualIdentityPickerViewController conversation]
  -[CKVisualIdentityPickerViewController setPresentationDelegate:]


CKConversationListCollectionViewLayout : NSObject
 @property  CKConversationListCollectionViewController *conversationListController

  // instance methods
  -[CKConversationListCollectionViewLayout .cxx_destruct]
  -[CKConversationListCollectionViewLayout _emptyLayoutSection]
  -[CKConversationListCollectionViewLayout pinGridLayoutSectionForEnvironment:withNumberOfItems:]
  -[CKConversationListCollectionViewLayout tipKitLayoutSectionForEnvironment:]
  -[CKConversationListCollectionViewLayout conversationCellHeight]
  -[CKConversationListCollectionViewLayout pinningOnboardingTitleLayoutSectionForEnvironment:]
  -[CKConversationListCollectionViewLayout _pinnedConversationViewLayoutStyleForCollectionViewSize:]
  -[CKConversationListCollectionViewLayout rowLayoutSectionForEnvironment:withRowHeight:usingEstimatedRowHeight:needsPinnedSectionSeparator:]
  -[CKConversationListCollectionViewLayout conversationListController]
  -[CKConversationListCollectionViewLayout _edgeToAvatarWidthForPinnedConversationLayoutStyle:]
  -[CKConversationListCollectionViewLayout numberOfPinnedConversationColumnsForLayoutStyle:]
  -[CKConversationListCollectionViewLayout _minimumEdgeToCellSpacingForLayoutStyle:]
  -[CKConversationListCollectionViewLayout pinnedConversationCellHeightForLayoutStyle:cellWidth:]
  -[CKConversationListCollectionViewLayout _totalVerticalRowSpacingForLayoutStyle:]
  -[CKConversationListCollectionViewLayout pinGridLayoutGroupForCollectionViewSize:numberOfItems:]
  -[CKConversationListCollectionViewLayout conversationListLayout]
  -[CKConversationListCollectionViewLayout widthForPinnedConversationCellInCollectionViewOfSize:numberOfItems:]
  -[CKConversationListCollectionViewLayout updatePinnedConversationViewLayoutStyle]
  -[CKConversationListCollectionViewLayout setConversationListController:]
  -[CKConversationListCollectionViewLayout init]
  -[CKConversationListCollectionViewLayout _numberOfItemsInSection:]


CKShareSheetChatController : CKComposeChatController
 @property  BOOL alreadySetUp

  // instance methods
  -[CKShareSheetChatController alreadySetUp]
  -[CKShareSheetChatController viewDidAppear:]
  -[CKShareSheetChatController _beginInteractionSignPost]
  -[CKShareSheetChatController _endInteractionSignPost]
  -[CKShareSheetChatController sendComposition:]
  -[CKShareSheetChatController insertInitialCompositionIfNeeded]
  -[CKShareSheetChatController shouldDismissAfterSend]
  -[CKShareSheetChatController setAlreadySetUp:]
  -[CKShareSheetChatController keyboardDidChangeFrame:]


CKConversationListScrollingController : NSObject
 @property  CKConversationList *conversationList
 @property  IMChatRegistry *chatRegistry
 @property  NSMutableDictionary *filterModeToEarliestFetchedDate
 @property  NSMutableDictionary *filterModeToEarliestReachedDate
 @property  BOOL fetchingOlderConversations

  // instance methods
  -[CKConversationListScrollingController .cxx_destruct]
  -[CKConversationListScrollingController _resetDateTrackingWithChatRegistry:]
  -[CKConversationListScrollingController _handleRegistryDidLoadNotification:]
  -[CKConversationListScrollingController _convertFilterActionDictionaryToConversationListFilterModeDictionary:]
  -[CKConversationListScrollingController filterModeToEarliestFetchedDate]
  -[CKConversationListScrollingController conversationList]
  -[CKConversationListScrollingController filterModeToEarliestReachedDate]
  -[CKConversationListScrollingController _loadOlderConversationsWithFilterMode:]
  -[CKConversationListScrollingController isFetchingOlderConversations]
  -[CKConversationListScrollingController _loadOlderConversationsWithFilterMode:limit:]
  -[CKConversationListScrollingController setFetchingOlderConversations:]
  -[CKConversationListScrollingController _chatPredicateForFilterMode:]
  -[CKConversationListScrollingController initWithConversationList:chatRegistry:]
  -[CKConversationListScrollingController reachedConversationWithLastMessageDate:filterMode:remainingRows:]
  -[CKConversationListScrollingController setFilterModeToEarliestFetchedDate:]
  -[CKConversationListScrollingController setFilterModeToEarliestReachedDate:]
  -[CKConversationListScrollingController chatRegistry]


CKReplyContextTextMessagePartChatItem : CKTextMessagePartChatItem <CKReplyContext>
  // instance methods
  -[CKReplyContextTextMessagePartChatItem isEditable]
  -[CKReplyContextTextMessagePartChatItem color]
  -[CKReplyContextTextMessagePartChatItem bodyTextFont]
  -[CKReplyContextTextMessagePartChatItem wantsOutline]
  -[CKReplyContextTextMessagePartChatItem balloonViewClass]
  -[CKReplyContextTextMessagePartChatItem meMentionsTextColor]
  -[CKReplyContextTextMessagePartChatItem shouldUseBigEmoji]
  -[CKReplyContextTextMessagePartChatItem replyIsFromMe]
  -[CKReplyContextTextMessagePartChatItem loadTranscriptDrawerText]
  -[CKReplyContextTextMessagePartChatItem isReplyContextPreview]
  -[CKReplyContextTextMessagePartChatItem balloonDescriptor]
  -[CKReplyContextTextMessagePartChatItem balloonStyle]


CKTranscriptManagementNameField : UIView <UITextFieldDelegate>
 @property  UILabel *fieldLabel
 @property  UITextField *textField
 @property  UIView *topSeparator
 @property  UIView *bottomSeparator
 @property  _UIBackdropView *backdropView
 @property  <CKTranscriptManagementNameFieldDelegate> *delegate
 @property  NSString *groupName
 @property  BOOL isOverlay
 @property  BOOL enabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKTranscriptManagementNameField preferredHeight]

  // instance methods
  -[CKTranscriptManagementNameField textField]
  -[CKTranscriptManagementNameField layoutMarginsDidChange]
  -[CKTranscriptManagementNameField backdropView]
  -[CKTranscriptManagementNameField setBackdropView:]
  -[CKTranscriptManagementNameField setGroupName:]
  -[CKTranscriptManagementNameField textFieldShouldReturn:]
  -[CKTranscriptManagementNameField setTextField:]
  -[CKTranscriptManagementNameField isOverlay]
  -[CKTranscriptManagementNameField fieldLabel]
  -[CKTranscriptManagementNameField .cxx_destruct]
  -[CKTranscriptManagementNameField setFieldLabel:]
  -[CKTranscriptManagementNameField layoutSubviews]
  -[CKTranscriptManagementNameField setDelegate:]
  -[CKTranscriptManagementNameField bottomSeparator]
  -[CKTranscriptManagementNameField textFieldDidEndEditing:]
  -[CKTranscriptManagementNameField setBottomSeparator:]
  -[CKTranscriptManagementNameField setTopSeparator:]
  -[CKTranscriptManagementNameField setIsOverlay:]
  -[CKTranscriptManagementNameField commitGroupName]
  -[CKTranscriptManagementNameField topSeparator]
  -[CKTranscriptManagementNameField groupName]
  -[CKTranscriptManagementNameField isEnabled]
  -[CKTranscriptManagementNameField initWithFrame:]
  -[CKTranscriptManagementNameField delegate]
  -[CKTranscriptManagementNameField dealloc]
  -[CKTranscriptManagementNameField setEnabled:]


CKDetailsSIMCell : CKDetailsCell <CKDetailsCell>
 @property  UILabel *simLabel
 @property  UIButton *button
 @property  UIMenu *menu
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsSIMCell shouldHighlight]
  +[CKDetailsSIMCell reuseIdentifier]
  +[CKDetailsSIMCell preferredHeight]

  // instance methods
  -[CKDetailsSIMCell menu]
  -[CKDetailsSIMCell setMenu:]
  -[CKDetailsSIMCell .cxx_destruct]
  -[CKDetailsSIMCell layoutSubviews]
  -[CKDetailsSIMCell button]
  -[CKDetailsSIMCell simLabel]
  -[CKDetailsSIMCell initWithStyle:reuseIdentifier:simLabelText:]
  -[CKDetailsSIMCell setSIMLabelText:]
  -[CKDetailsSIMCell prepareForReuse]
  -[CKDetailsSIMCell setButton:]
  -[CKDetailsSIMCell initWithStyle:reuseIdentifier:]


CKAppMenuPresentationController : UIPresentationController <UIGestureRecognizerDelegate>
 @property  UITapGestureRecognizer *tapRecognizer
 @property  UIView *sourceView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAppMenuPresentationController .cxx_destruct]
  -[CKAppMenuPresentationController frameOfPresentedViewInContainerView]
  -[CKAppMenuPresentationController dismissalTransitionDidEnd:]
  -[CKAppMenuPresentationController tapOutsideMenu]
  -[CKAppMenuPresentationController initWithPresentedViewController:presentingViewController:sourceView:]
  -[CKAppMenuPresentationController gestureRecognizerShouldBegin:]
  -[CKAppMenuPresentationController tapRecognizer]
  -[CKAppMenuPresentationController setTapRecognizer:]
  -[CKAppMenuPresentationController presentationTransitionDidEnd:]


CKWatchfaceInProcessPreviewGenerator : NSObject <CKWatchfacePreviewing>
  // class methods
  +[CKWatchfaceInProcessPreviewGenerator implementation]
  +[CKWatchfaceInProcessPreviewGenerator generateFacePreviewImageFromUrl:completionBlock:]


CKAttachmentCell : UICollectionViewCell <CKAnimationTimerObserver, UIGestureRecognizerDelegate>
 @property  NSArray *frames
 @property  UITapGestureRecognizer *tapRecognizer
 @property  UIImageView *irisBadgeView
 @property  UIImage *image
 @property  UIImage *iconImage
 @property  CKAnimatedImage *animatedImage
 @property  UIImageView *checkmarkView
 @property  NSObject<CKAttachmentCellDelegate> *delegate
 @property  CKAttachmentItem *representedObject
 @property  BOOL editing
 @property  BOOL isIrisAsset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAttachmentCell iconImage]
  -[CKAttachmentCell copy:]
  -[CKAttachmentCell more:]
  -[CKAttachmentCell image]
  -[CKAttachmentCell .cxx_destruct]
  -[CKAttachmentCell setFrames:]
  -[CKAttachmentCell layoutSubviews]
  -[CKAttachmentCell setDelegate:]
  -[CKAttachmentCell frames]
  -[CKAttachmentCell isIrisAsset]
  -[CKAttachmentCell checkmarkView]
  -[CKAttachmentCell setSelected:]
  -[CKAttachmentCell setCheckmarkView:]
  -[CKAttachmentCell irisBadgeView]
  -[CKAttachmentCell _cgImageForUIImage:]
  -[CKAttachmentCell setIrisBadgeView:]
  -[CKAttachmentCell animationTimerFired:]
  -[CKAttachmentCell setIconImage:]
  -[CKAttachmentCell prepareForReuse]
  -[CKAttachmentCell setEditing:]
  -[CKAttachmentCell gestureRecognizer:shouldReceiveTouch:]
  -[CKAttachmentCell representedObject]
  -[CKAttachmentCell setRepresentedObject:]
  -[CKAttachmentCell initWithFrame:]
  -[CKAttachmentCell isEditing]
  -[CKAttachmentCell delegate]
  -[CKAttachmentCell setImage:]
  -[CKAttachmentCell saveAttachment:]
  -[CKAttachmentCell setIsIrisAsset:]
  -[CKAttachmentCell delete:]
  -[CKAttachmentCell dealloc]
  -[CKAttachmentCell tapGestureRecognized:]
  -[CKAttachmentCell animatedImage]
  -[CKAttachmentCell updateAnimationTimerObserving]
  -[CKAttachmentCell tapRecognizer]
  -[CKAttachmentCell setTapRecognizer:]
  -[CKAttachmentCell setAnimatedImage:]


CKBaseLayer : CALayer
 @property  <CKLayerDelegate> *ckLayerDelegate

  // instance methods
  -[CKBaseLayer .cxx_destruct]
  -[CKBaseLayer layerDidBecomeVisible:]
  -[CKBaseLayer ckLayerDelegate]
  -[CKBaseLayer setCkLayerDelegate:]


CKSendAnimationWindow : UIAutoRotatingWindow
 @property  CKGradientReferenceView *gradientReferenceView

  // instance methods
  -[CKSendAnimationWindow .cxx_destruct]
  -[CKSendAnimationWindow initWithWindowScene:frame:]
  -[CKSendAnimationWindow _canAffectStatusBarAppearance]
  -[CKSendAnimationWindow gradientReferenceView]
  -[CKSendAnimationWindow setGradientReferenceView:]


CKMessagePartHighlightBalloonView : CKBalloonView
 @property  UIImageView *imageView
 @property  UIView *colorView
 @property  UIColor *balloonColor
 @property  UIImage *glyphImage

  // instance methods
  -[CKMessagePartHighlightBalloonView imageView]
  -[CKMessagePartHighlightBalloonView colorView]
  -[CKMessagePartHighlightBalloonView .cxx_destruct]
  -[CKMessagePartHighlightBalloonView configureForMessagePartHighlightChatItem:]
  -[CKMessagePartHighlightBalloonView layoutSubviews]
  -[CKMessagePartHighlightBalloonView glyphImage]
  -[CKMessagePartHighlightBalloonView setBalloonColor:]
  -[CKMessagePartHighlightBalloonView prepareForReuse]
  -[CKMessagePartHighlightBalloonView balloonColor]
  -[CKMessagePartHighlightBalloonView setGlyphImageColor:]
  -[CKMessagePartHighlightBalloonView setGlyphImage:]
  -[CKMessagePartHighlightBalloonView initWithFrame:]


CKMenuBarManager : NSObject
  // class methods
  +[CKMenuBarManager sharedInstance]

  // instance methods
  -[CKMenuBarManager __im_ff_isInterstellarEnabled]
  -[CKMenuBarManager allKeyboardShortcutKeyCommands]


CKTranslatorUtilities : NSObject
  // class methods
  +[CKTranslatorUtilities chatItemIsFromSomeoneElse:]
  +[CKTranslatorUtilities shouldShowTranslateMenuOption:]

  // instance methods
  -[CKTranslatorUtilities __im_ff_translationEnabled]


CKTranscriptPreviewController : CKViewController <CKTranscriptCollectionViewControllerDelegate>
 @property  CKTranscriptCollectionView *collectionView
 @property  CKConversation *conversation
 @property  double transcriptWidth
 @property  {UIEdgeInsets=dddd} layoutMargins
 @property  BOOL isInitialLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKTranscriptPreviewController layoutMargins]
  -[CKTranscriptPreviewController transcriptCollectionViewController:balloonViewDidRequestStartEditingPayload:forPlugin:allowAllCommits:completionHandler:]
  -[CKTranscriptPreviewController .cxx_destruct]
  -[CKTranscriptPreviewController collectionView]
  -[CKTranscriptPreviewController setLayoutMargins:]
  -[CKTranscriptPreviewController setCollectionView:]
  -[CKTranscriptPreviewController isInitialLayout]
  -[CKTranscriptPreviewController setTranscriptWidth:]
  -[CKTranscriptPreviewController setIsInitialLayout:]
  -[CKTranscriptPreviewController transcriptWidth]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerPlayingAudioDidChange:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:didSelectItemAtIndexPath:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerRestingStateDidChange:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:didDeselectItemAtIndexPath:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerWillScrollToBottom:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:balloonView:tappedForChatItem:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerShouldPlayAudio:]
  -[CKTranscriptPreviewController viewDidLayoutSubviews]
  -[CKTranscriptPreviewController transcriptCollectionViewController:balloonView:longPressedForItemWithIndexPath:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:balloonView:doubleTappedItemAtIndexPath:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:balloonView:selectedItemAtIndexPath:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerDidInset:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:balloonView:showInlineReplyForItemWithIndexPath:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:didTapAttributionButtonForChatItem:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:didTapPluginStatusButtonForChatItem:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:balloonViewTitleTappedForItemWithIndexPath:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerWillInset:targetContentInset:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerChatItemsDidChange:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:balloonView:shouldSelectChatItem:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerPerformBatchUpdateCompleted:]
  -[CKTranscriptPreviewController traitCollectionForTranscriptCollectionViewController:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:collectionViewContentSizeDidChange:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerBlockContactButtonTapped:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerReportSpamButtonTapped:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerDisplaySMSSpamReporting:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerWillDisplayLastBalloon:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerDidInsertAssociatedChatItem:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:willDeleteChatItems:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:targetAlphaForChatItem:]
  -[CKTranscriptPreviewController setConversation:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:showMessageSomeoneForItemWithIndexPath:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:viewedCommSafetyItemWithIndexPath:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerPlaybackForOutgoingEffectsIsAllowed:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:shouldSetupFullscreenEffectUI:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerShouldLayoutFullscreenEffects:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:shouldCleanupFullscreenEffectUI:]
  -[CKTranscriptPreviewController transcriptCollectionViewControllerAdditionalFullscreenEffectViews:]
  -[CKTranscriptPreviewController initWithConversation:transcriptWidth:layoutMargins:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:willBeginImpactEffectAnimationWithSendAnimationContext:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:didEndImpactEffectAnimationWithSendAnimationContext:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:balloonView:didRequestPresentationStyle:forChatItem:allowAllStyles:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:balloonViewDidRequestCommitPayload:forPlugin:allowAllCommits:error:]
  -[CKTranscriptPreviewController transcriptCollectionViewController:balloonViewDidRequestCommitSticker:forPlugin:allowAllCommits:error:]
  -[CKTranscriptPreviewController conversation]
  -[CKTranscriptPreviewController loadView]
  -[CKTranscriptPreviewController textInputContextIdentifier]


CKVideoPlayerReusePool : NSObject
 @property  NSMutableArray *pool

  // class methods
  +[CKVideoPlayerReusePool sharedPool]

  // instance methods
  -[CKVideoPlayerReusePool setPool:]
  -[CKVideoPlayerReusePool .cxx_destruct]
  -[CKVideoPlayerReusePool init]
  -[CKVideoPlayerReusePool pool]
  -[CKVideoPlayerReusePool indexOfPlayerWithGUID:]
  -[CKVideoPlayerReusePool returnPlayerToPool:]
  -[CKVideoPlayerReusePool indexOfAvailablePlayer]
  -[CKVideoPlayerReusePool removeUneededVideoPlayers]
  -[CKVideoPlayerReusePool dealloc]
  -[CKVideoPlayerReusePool lowMemoryWarningReceived:]
  -[CKVideoPlayerReusePool _dequeuePlayerAtIndex:]
  -[CKVideoPlayerReusePool dequeueAvailableVideoPlayer]
  -[CKVideoPlayerReusePool existingVideoPlayerForTransferGUID:]


CKChatItemCachedSizeMetrics : NSObject <NSSecureCoding>
 @property  NSString *chatItemGUID
 @property  NSString *key
 @property  {CGSize=dd} size
 @property  {UIEdgeInsets=dddd} textAlignmentInsets
 @property  NSDate *lastAccess
 @property  IMDoubleLinkedListNode *node

  // class methods
  +[CKChatItemCachedSizeMetrics supportsSecureCoding]

  // instance methods
  -[CKChatItemCachedSizeMetrics setKey:]
  -[CKChatItemCachedSizeMetrics initWithCoder:]
  -[CKChatItemCachedSizeMetrics .cxx_destruct]
  -[CKChatItemCachedSizeMetrics node]
  -[CKChatItemCachedSizeMetrics setNode:]
  -[CKChatItemCachedSizeMetrics setLastAccess:]
  -[CKChatItemCachedSizeMetrics setSize:]
  -[CKChatItemCachedSizeMetrics setChatItemGUID:]
  -[CKChatItemCachedSizeMetrics key]
  -[CKChatItemCachedSizeMetrics size]
  -[CKChatItemCachedSizeMetrics chatItemGUID]
  -[CKChatItemCachedSizeMetrics lastAccess]
  -[CKChatItemCachedSizeMetrics setTextAlignmentInsets:]
  -[CKChatItemCachedSizeMetrics encodeWithCoder:]
  -[CKChatItemCachedSizeMetrics textAlignmentInsets]


CKChatItemSizeCache : NSObject <IMSystemMonitorListener>
 @property  NSMutableDictionary *cache
 @property  NSMutableDictionary *chatItemGUIDToCacheKeyMap
 @property  IMDoubleLinkedList *orderedKeys
 @property  NSObject<OS_dispatch_queue> *cacheDiskQueue
 @property  IMScheduledUpdater *evictionUpdater
 @property  NSString *preferredLocalization
 @property  BOOL test_throwExceptionDuringInflate
 @property  NSData *test_cacheData

  // class methods
  +[CKChatItemSizeCache sharedInstance]
  +[CKChatItemSizeCache test_cachePath]

  // instance methods
  -[CKChatItemSizeCache setCache:]
  -[CKChatItemSizeCache _commonInit]
  -[CKChatItemSizeCache .cxx_destruct]
  -[CKChatItemSizeCache cache]
  -[CKChatItemSizeCache init]
  -[CKChatItemSizeCache _boldTextEnabled]
  -[CKChatItemSizeCache _evictIfNeeded]
  -[CKChatItemSizeCache setOrderedKeys:]
  -[CKChatItemSizeCache orderedKeys]
  -[CKChatItemSizeCache _inflateCache]
  -[CKChatItemSizeCache cacheKeyForChatItem:fittingSize:]
  -[CKChatItemSizeCache setTest_throwExceptionDuringInflate:]
  -[CKChatItemSizeCache _invalidateSizeCacheMetricsForKey:]
  -[CKChatItemSizeCache preferredLocalization]
  -[CKChatItemSizeCache _systemVersion]
  -[CKChatItemSizeCache setPreferredLocalization:]
  -[CKChatItemSizeCache setEvictionUpdater:]
  -[CKChatItemSizeCache setChatItemGUIDToCacheKeyMap:]
  -[CKChatItemSizeCache _fontSizeCategory]
  -[CKChatItemSizeCache _updateKeyMap:forKey:sizeCacheKey:]
  -[CKChatItemSizeCache setCacheDiskQueue:]
  -[CKChatItemSizeCache chatItemGUIDToCacheKeyMap]
  -[CKChatItemSizeCache evictionUpdater]
  -[CKChatItemSizeCache applicationWillResignActive]
  -[CKChatItemSizeCache _persistCache]
  -[CKChatItemSizeCache dealloc]
  -[CKChatItemSizeCache test_cacheData]
  -[CKChatItemSizeCache setTest_cacheData:]
  -[CKChatItemSizeCache _invalidateCachedSizeForChatItemGUID:]
  -[CKChatItemSizeCache test_throwExceptionDuringInflate]
  -[CKChatItemSizeCache _generateChatItemGuidToCacheKeyMapWithCache:]
  -[CKChatItemSizeCache invalidateCachedSizeForChatItem:]
  -[CKChatItemSizeCache initForTestAndThrowException:cacheFileData:]
  -[CKChatItemSizeCache cachedSizeForChatItem:size:textAlignmentInsets:fittingSize:]
  -[CKChatItemSizeCache cacheDiskQueue]
  -[CKChatItemSizeCache setCachedSizeForChatItem:size:textAlignmentInsets:fittingSize:]
  -[CKChatItemSizeCache invalidateCachedSizeForGUIDPrefix:]
  -[CKChatItemSizeCache systemApplicationDidSuspend]


CKMediaObjectAssetMenuBuilder : NSObject
 @property  <CKMediaObjectAssetMenuBuilderDelegate> *delegate

  // instance methods
  -[CKMediaObjectAssetMenuBuilder .cxx_destruct]
  -[CKMediaObjectAssetMenuBuilder _openFile:]
  -[CKMediaObjectAssetMenuBuilder setDelegate:]
  -[CKMediaObjectAssetMenuBuilder delegate]
  -[CKMediaObjectAssetMenuBuilder _openFiles:]
  -[CKMediaObjectAssetMenuBuilder _tapbackChatItem:]
  -[CKMediaObjectAssetMenuBuilder _quickLookChatItem:]
  -[CKMediaObjectAssetMenuBuilder _quickLookAndOpenMenuForChatItems:cursorChatItem:]
  -[CKMediaObjectAssetMenuBuilder _tapbackAndReplyMenuForChatItems:]
  -[CKMediaObjectAssetMenuBuilder _forwardAndCopyMenuForChatItems:]
  -[CKMediaObjectAssetMenuBuilder _deleteMenuForChatItems:]
  -[CKMediaObjectAssetMenuBuilder _quickLookAndOpenActionsForChatItems:cursorChatItem:]
  -[CKMediaObjectAssetMenuBuilder _openActionForChatItems:]
  -[CKMediaObjectAssetMenuBuilder _copyChatItems:]
  -[CKMediaObjectAssetMenuBuilder _exportMenuForChatItem:]
  -[CKMediaObjectAssetMenuBuilder _quickLookActionForChatItems:cursorChatItem:]
  -[CKMediaObjectAssetMenuBuilder _exportActionForChatItems:]
  -[CKMediaObjectAssetMenuBuilder _tapbackActionForChatItem:]
  -[CKMediaObjectAssetMenuBuilder _replyActionForChatItem:]
  -[CKMediaObjectAssetMenuBuilder _replyToChatItem:]
  -[CKMediaObjectAssetMenuBuilder _forwardActionForChatItems:]
  -[CKMediaObjectAssetMenuBuilder _copyActionForChatItems:]
  -[CKMediaObjectAssetMenuBuilder _forwardChatItems:]
  -[CKMediaObjectAssetMenuBuilder _deleteChatItems:]
  -[CKMediaObjectAssetMenuBuilder contextMenuForChatItems:cursorChatItem:isCMM:]


CKUnexpectedlyLoggedOutNotificationView : UIView <CKTwoButtonInlineNotificationViewDelegate>
 @property  CKTwoButtonInlineNotificationView *inlineNotificationView
 @property  <CKUnexpectedlyLoggedOutNotificationViewDelegate> *delegate
 @property  BOOL visible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKUnexpectedlyLoggedOutNotificationView visible]
  -[CKUnexpectedlyLoggedOutNotificationView setVisible:]
  -[CKUnexpectedlyLoggedOutNotificationView setVisible:animated:completion:]
  -[CKUnexpectedlyLoggedOutNotificationView inlineNotificationView:didChangeRequestedHeight:]
  -[CKUnexpectedlyLoggedOutNotificationView .cxx_destruct]
  -[CKUnexpectedlyLoggedOutNotificationView layoutSubviews]
  -[CKUnexpectedlyLoggedOutNotificationView setDelegate:]
  -[CKUnexpectedlyLoggedOutNotificationView sizeThatFits:]
  -[CKUnexpectedlyLoggedOutNotificationView initWithFrame:]
  -[CKUnexpectedlyLoggedOutNotificationView delegate]
  -[CKUnexpectedlyLoggedOutNotificationView dealloc]
  -[CKUnexpectedlyLoggedOutNotificationView inlineNotificationView]
  -[CKUnexpectedlyLoggedOutNotificationView inlineNotificationViewDidReceiveRightButtonTap:]
  -[CKUnexpectedlyLoggedOutNotificationView inlineNotificationViewDidReceiveLeftButtonTap:]
  -[CKUnexpectedlyLoggedOutNotificationView setInlineNotificationView:]


CKLineView : UIView
 @property  CABackdropLayer *backdropFilterLayer
 @property  CAShapeLayer *lineShapeLayer
 @property  BOOL shouldUseDarkFSMStrokeColor

  // instance methods
  -[CKLineView clearFilters]
  -[CKLineView .cxx_destruct]
  -[CKLineView setFrame:]
  -[CKLineView addFilter:]
  -[CKLineView initWithFrame:]
  -[CKLineView lineShapeLayer]
  -[CKLineView setLineShapeLayer:]
  -[CKLineView setBackdropFilterLayer:]
  -[CKLineView setShouldUseDarkFSMStrokeColor:]
  -[CKLineView shouldUseDarkFSMStrokeColor]
  -[CKLineView backdropFilterLayer]


CKTranscriptBalloonCell : CKTranscriptMessageContentCell <IMPhotoLibraryPersistenceManagerListener, CKQuickSaveButtonAnimationDelegate, CKQuickSaveButtonDelegate>
 @property  CKTranscriptCollectionViewLayoutAttributes *layoutAttributes
 @property  NSArray *threadGroupLayoutAttributes
 @property  NSArray *threadLineDescription
 @property  unsigned long lineType
 @property  CKLineView *lineView
 @property  double lineHorizontalOffset
 @property  double lineViewReferenceY
 @property  double lineViewExpansionFactor
 @property  BOOL hasQueuedQuickSaveButtonRemoval
 @property  CKBalloonView *balloonView
 @property  BOOL mayReparentPluginViews
 @property  BOOL insertingReply
 @property  BOOL lineIsExtended
 @property  BOOL animatingInDarkEffect
 @property  NSArray *syndicationIdentifiers
 @property  unsigned long numberOfMomentShareSavedAssets
 @property  unsigned long numberOfMomentSharePhotos
 @property  unsigned long numberOfMomentShareVideos
 @property  BOOL canShowQuickSaveButton
 @property  @? quickSaveButtonTappedCallback
 @property  CKQuickSaveButton *quickSaveButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKTranscriptBalloonCell clearFilters]
  -[CKTranscriptBalloonCell photoLibraryPersistedSyndicatedAssetSetDidChange]
  -[CKTranscriptBalloonCell _animateReplyContextPreview:]
  -[CKTranscriptBalloonCell _animateLineExtension:]
  -[CKTranscriptBalloonCell animatingInDarkEffect]
  -[CKTranscriptBalloonCell _animateLowerBracketToLoop:]
  -[CKTranscriptBalloonCell _createLineViewFrameForThreadGroupLayoutAttributes:]
  -[CKTranscriptBalloonCell addFilter:fromTriggeringMessage:]
  -[CKTranscriptBalloonCell setAnimationPauseReasons:]
  -[CKTranscriptBalloonCell quickSaveButton]
  -[CKTranscriptBalloonCell setHasQueuedQuickSaveButtonRemoval:]
  -[CKTranscriptBalloonCell threadGroupLayoutAttributes]
  -[CKTranscriptBalloonCell _createLinePathForFrame:withThreadGroupLayoutAttributes:]
  -[CKTranscriptBalloonCell _lineDescriptionForThreadGroupLayoutAttributes:setLineType:]
  -[CKTranscriptBalloonCell _drawStraightLineForPath:withLayout:lineViewMaxY:isTerminal:]
  -[CKTranscriptBalloonCell _drawLoopForPath:withLayout:]
  -[CKTranscriptBalloonCell _drawUpperBracketForPath:withLayout:lineViewMaxX:lineViewMaxY:]
  -[CKTranscriptBalloonCell _drawLowerBracketForPath:lineViewMaxX:lineViewMaxY:]
  -[CKTranscriptBalloonCell _fadeInContactImageAlpha:atBeginTime:]
  -[CKTranscriptBalloonCell _fadeInBalloonAlpha:atBeginTime:]
  -[CKTranscriptBalloonCell _slideContactImageWithTranslate:duration:beginTime:]
  -[CKTranscriptBalloonCell canShowQuickSaveButton]
  -[CKTranscriptBalloonCell isCommSafetySensitiveForChatItem:]
  -[CKTranscriptBalloonCell animationWithKeyPath:fromValue:toValue:beginTime:duration:timingFunctionName:]
  -[CKTranscriptBalloonCell _extendPath:withFrame:]
  -[CKTranscriptBalloonCell .cxx_destruct]
  -[CKTranscriptBalloonCell _drawLowerBracketLoopForPath:withLayout:lineViewMaxY:]
  -[CKTranscriptBalloonCell updateQuickSaveButtonVisibility]
  -[CKTranscriptBalloonCell numberOfMomentSharePhotos]
  -[CKTranscriptBalloonCell animationWithKeyPath:fromValue:toValue:beginTime:duration:timingFunction:]
  -[CKTranscriptBalloonCell hasQueuedQuickSaveButtonRemoval]
  -[CKTranscriptBalloonCell numberOfMomentShareVideos]
  -[CKTranscriptBalloonCell syndicationIdentifiers]
  -[CKTranscriptBalloonCell insertionAnimationType]
  -[CKTranscriptBalloonCell lineIsExtended]
  -[CKTranscriptBalloonCell numberOfMomentShareSavedAssets]
  -[CKTranscriptBalloonCell _addQuickSaveButtonIfNeededAnimated:]
  -[CKTranscriptBalloonCell _removeQuickSaveButtonIfNeededAnimated:]
  -[CKTranscriptBalloonCell quickSaveButtonTappedCallback]
  -[CKTranscriptBalloonCell quickSaveButtonAnimationDidBegin:]
  -[CKTranscriptBalloonCell quickSaveButtonAnimationDidEnd:]
  -[CKTranscriptBalloonCell messageDisplayView]
  -[CKTranscriptBalloonCell quickSaveButtonWasTapped:]
  -[CKTranscriptBalloonCell insertionDurationForInsertionType:]
  -[CKTranscriptBalloonCell willLayoutDrawerLabelFrame:]
  -[CKTranscriptBalloonCell setCanShowQuickSaveButton:]
  -[CKTranscriptBalloonCell setSyndicationIdentifiers:]
  -[CKTranscriptBalloonCell mayReparentPluginViews]
  -[CKTranscriptBalloonCell setAnimatingInDarkEffect:]
  -[CKTranscriptBalloonCell setNumberOfMomentShareSavedAssets:]
  -[CKTranscriptBalloonCell setNumberOfMomentSharePhotos:]
  -[CKTranscriptBalloonCell setNumberOfMomentShareVideos:]
  -[CKTranscriptBalloonCell setQuickSaveButtonTappedCallback:]
  -[CKTranscriptBalloonCell threadLineDescription]
  -[CKTranscriptBalloonCell setThreadLineDescription:]
  -[CKTranscriptBalloonCell lineHorizontalOffset]
  -[CKTranscriptBalloonCell setLineHorizontalOffset:]
  -[CKTranscriptBalloonCell lineViewReferenceY]
  -[CKTranscriptBalloonCell setLineViewReferenceY:]
  -[CKTranscriptBalloonCell lineViewExpansionFactor]
  -[CKTranscriptBalloonCell setLineViewExpansionFactor:]
  -[CKTranscriptBalloonCell lineView]
  -[CKTranscriptBalloonCell balloonView]
  -[CKTranscriptBalloonCell lineType]
  -[CKTranscriptBalloonCell init]
  -[CKTranscriptBalloonCell prepareForReuse]
  -[CKTranscriptBalloonCell addFilter:]
  -[CKTranscriptBalloonCell setLayoutAttributes:]
  -[CKTranscriptBalloonCell setBalloonView:]
  -[CKTranscriptBalloonCell layoutAttributes]
  -[CKTranscriptBalloonCell dealloc]
  -[CKTranscriptBalloonCell setLineType:]
  -[CKTranscriptBalloonCell setLineView:]
  -[CKTranscriptBalloonCell configureForChatItem:context:]
  -[CKTranscriptBalloonCell applyLayoutAttributes:]
  -[CKTranscriptBalloonCell setMayReparentPluginViews:]
  -[CKTranscriptBalloonCell hidesCheckmark]
  -[CKTranscriptBalloonCell _ck_setEditing:animated:]
  -[CKTranscriptBalloonCell setThreadGroupLayoutAttributes:]
  -[CKTranscriptBalloonCell isInsertingReply]
  -[CKTranscriptBalloonCell setInsertingReply:]
  -[CKTranscriptBalloonCell _updateLineForThreadGroupLayoutAttributes:]
  -[CKTranscriptBalloonCell performInsertion:]
  -[CKTranscriptBalloonCell layoutSubviewsForContents]
  -[CKTranscriptBalloonCell layoutSubviewsForAlignmentContents]
  -[CKTranscriptBalloonCell _animateUpperBracket:]


CKConversationSearchResultsController : UITableViewController <UISearchResultsUpdating>
 @property  NSArray *searchResults
 @property  NSArray *topConversationsResults
 @property  NSArray *messageResults
 @property  CKSpotlightQuery *currentQuery
 @property  CSSearchQuery *topConversationsQuery
 @property  NSString *selectedChatGUID
 @property  BOOL gotTopConversationResults
 @property  <CKConversationResultsControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKConversationSearchResultsController _contentSizeCategoryDidChange:]
  -[CKConversationSearchResultsController currentQuery]
  -[CKConversationSearchResultsController numberOfSectionsInTableView:]
  -[CKConversationSearchResultsController updateSearchResultsForSearchController:]
  -[CKConversationSearchResultsController tableView:numberOfRowsInSection:]
  -[CKConversationSearchResultsController .cxx_destruct]
  -[CKConversationSearchResultsController tableView:didSelectRowAtIndexPath:]
  -[CKConversationSearchResultsController viewDidLoad]
  -[CKConversationSearchResultsController tableView:cellForRowAtIndexPath:]
  -[CKConversationSearchResultsController searchEnded]
  -[CKConversationSearchResultsController setDelegate:]
  -[CKConversationSearchResultsController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[CKConversationSearchResultsController tableView:shouldIndentWhileEditingRowAtIndexPath:]
  -[CKConversationSearchResultsController cancelCurrentQuery]
  -[CKConversationSearchResultsController _updateTableViewRowHeights]
  -[CKConversationSearchResultsController _conversationListCellClass]
  -[CKConversationSearchResultsController setSelectedChatGUID:]
  -[CKConversationSearchResultsController topConversationsResults]
  -[CKConversationSearchResultsController setTopConversationsResults:]
  -[CKConversationSearchResultsController messageResults]
  -[CKConversationSearchResultsController setMessageResults:]
  -[CKConversationSearchResultsController _topConversationsQueryForText:]
  -[CKConversationSearchResultsController setTopConversationsQuery:]
  -[CKConversationSearchResultsController setGotTopConversationResults:]
  -[CKConversationSearchResultsController _reloadDataForNewResults]
  -[CKConversationSearchResultsController selectedChatGUID]
  -[CKConversationSearchResultsController topConversationsQueryCompletedWithResults:]
  -[CKConversationSearchResultsController gotTopConversationResults]
  -[CKConversationSearchResultsController _selectChatGUID:]
  -[CKConversationSearchResultsController topConversationsQuery]
  -[CKConversationSearchResultsController setCurrentSearchResultSelected:]
  -[CKConversationSearchResultsController delegate]
  -[CKConversationSearchResultsController searchResults]
  -[CKConversationSearchResultsController dealloc]
  -[CKConversationSearchResultsController loadView]
  -[CKConversationSearchResultsController setCurrentQuery:]


CKConversationList : NSObject
 @property  NSArray *pinnedConversations
 @property  BOOL holdingWasKnownSenderUpdates
 @property  BOOL loadedPinnedConversations
 @property  BOOL remergingConversations
 @property  NSMutableDictionary *conversationsDictionary
 @property  BOOL loadingConversations
 @property  BOOL loadedConversations
 @property  CKConversation *pendingConversation
 @property  CKConversationListScrollingController *scrollingController
 @property  NSArray *trackedConversations
 @property  NSArray *conversations
 @property  BOOL hasActiveConversations

  // class methods
  +[CKConversationList initialize]
  +[CKConversationList sharedConversationList]
  +[CKConversationList _handleRegistryDidLoadNotification:]
  +[CKConversationList numberForFilterMode:]
  +[CKConversationList stringForFilterMode:]
  +[CKConversationList conversationListAlertSuppressionContextForFilterMode:]

  // instance methods
  -[CKConversationList _chatItemsDidChange:]
  -[CKConversationList _handleRegistryWillUnregisterChatNotification:]
  -[CKConversationList removeConversation:]
  -[CKConversationList conversationForExistingChat:]
  -[CKConversationList conversationForExistingChatWithGUID:]
  -[CKConversationList conversationForExistingChatWithChatIdentifier:]
  -[CKConversationList conversationForExistingChatWithGroupID:]
  -[CKConversationList resort]
  -[CKConversationList conversationForHandles:displayName:joinedChatsOnly:create:]
  -[CKConversationList .cxx_destruct]
  -[CKConversationList conversations]
  -[CKConversationList trackedConversations]
  -[CKConversationList init]
  -[CKConversationList setNeedsReload]
  -[CKConversationList _abChanged:]
  -[CKConversationList _handleChatParticipantsDidChange:]
  -[CKConversationList _beginTrackingAllExistingChatsIfNeeded]
  -[CKConversationList _invalidateABCaches:]
  -[CKConversationList _invalidatePartialABCaches:]
  -[CKConversationList _abPartialChanged:]
  -[CKConversationList _handleChatJoinStateDidChange:]
  -[CKConversationList _handlePreferredServiceChangedNotification:]
  -[CKConversationList _chatPropertiesChanged:]
  -[CKConversationList _handleEngroupFinishedUpdating:]
  -[CKConversationList _handleChatsWillRemergeNotification:]
  -[CKConversationList _handleChatsDidRemergeNotification:]
  -[CKConversationList _handleRegistryDidRegisterChatNotification:]
  -[CKConversationList _handleMemoryWarning:]
  -[CKConversationList updateConversationsForNewPinnedConversations:]
  -[CKConversationList _handleGroupPhotoChanged:]
  -[CKConversationList _handleGroupNameChanged:]
  -[CKConversationList _alreadyTrackedConversationForChat:]
  -[CKConversationList beginTrackingConversation:forChat:]
  -[CKConversationList resetCaches]
  -[CKConversationList _conversationForChat:]
  -[CKConversationList _postConversationListChangedNotification]
  -[CKConversationList updatePinnedConversationsFromDataSource]
  -[CKConversationList pendingConversation]
  -[CKConversationList setPendingConversation:]
  -[CKConversationList pinningIdentifierMap]
  -[CKConversationList stopTrackingConversation:]
  -[CKConversationList conversationForHandles:displayName:lastAddressedHandle:lastAddressedSIMID:joinedChatsOnly:create:]
  -[CKConversationList pinnedConversations]
  -[CKConversationList setPinnedConversations:]
  -[CKConversationList postFinishedInitalPinLoadIfNecessary]
  -[CKConversationList loadedPinnedConversations]
  -[CKConversationList setLoadedPinnedConversations:]
  -[CKConversationList _messageUnknownFilteringEnabled]
  -[CKConversationList _shouldFilterForParticipants:]
  -[CKConversationList loadingConversations]
  -[CKConversationList _conversationSortComparator]
  -[CKConversationList conversationsForFilterMode:]
  -[CKConversationList logConversationsTopCount:bottomCount:]
  -[CKConversationList _shouldBailBeginTrackingForCurrentProcess]
  -[CKConversationList _insertConversationIntoSortedConversationList:]
  -[CKConversationList _isUnreadChat:ignoringMessages:]
  -[CKConversationList deleteConversations:]
  -[CKConversationList remergingConversations]
  -[CKConversationList _postConversationListUpdateVisibleConversationsNotificationForUID:]
  -[CKConversationList setRemergingConversations:]
  -[CKConversationList _setConversations:forFilterMode:]
  -[CKConversationList updateConversationFilteredFlagsAndReportSpam]
  -[CKConversationList filterModeForConversation:]
  -[CKConversationList _messageSpamFilteringEnabled]
  -[CKConversationList conversationsDictionary]
  -[CKConversationList _beginTrackingConversationWithChatIndirect:]
  -[CKConversationList topMostConversation]
  -[CKConversationList _beginTrackingConversationWithChat:completion:]
  -[CKConversationList conversationForExistingChatWithPinningIdentifier:]
  -[CKConversationList hasActiveConversations]
  -[CKConversationList conversationForExistingChatWithDeviceIndependentID:]
  -[CKConversationList conversationForExistingChatWithPersonCentricID:]
  -[CKConversationList scrollingController]
  -[CKConversationList _copyEntitiesForAddressStrings:]
  -[CKConversationList firstUnreadFilteredConversationIgnoringMessages:]
  -[CKConversationList unpendConversation]
  -[CKConversationList unreadLastMessages]
  -[CKConversationList unreadCountForFilterMode:]
  -[CKConversationList unreadFilteredConversationCountIgnoringMessages:]
  -[CKConversationList deleteConversation:]
  -[CKConversationList beginWasKnownSenderHold]
  -[CKConversationList pendingConversationCreatingIfNecessary]
  -[CKConversationList _testingTrackedConversations]
  -[CKConversationList updateConversationListsAndSortIfEnabled]
  -[CKConversationList updateConversationsWasKnownSender]
  -[CKConversationList isHoldingWasKnownSenderUpdates]
  -[CKConversationList releaseWasKnownSenderHold]
  -[CKConversationList loadedConversations]
  -[CKConversationList setHoldingWasKnownSenderUpdates:]
  -[CKConversationList setConversationsDictionary:]


CKMacToolBarImageProperties : NSObject
 @property  UIImage *image
 @property  NSString *imageName
 @property  UIColor *tintColor

  // instance methods
  -[CKMacToolBarImageProperties tintColor]
  -[CKMacToolBarImageProperties image]
  -[CKMacToolBarImageProperties .cxx_destruct]
  -[CKMacToolBarImageProperties setTintColor:]
  -[CKMacToolBarImageProperties imageName]
  -[CKMacToolBarImageProperties setImageName:]
  -[CKMacToolBarImageProperties setImage:]


CKChatController : CKCoreChatController <CKMacToolbarItemProvider, CKMacRecipientsControllerDelegate, CKStickerDetailViewControllerDelegate, UIContextMenuInteractionDelegate, CKEffectPickerViewControllerDelegate, CKThrowAnimationManagerDelegate, CKSendAnimationManagerDelegate, CKSendAnimationBalloonProvider, UIInteractionProgressObserver, QLPreviewControllerConformingDelegate, QLPreviewControllerDelegate, CKReaderViewControllerDelegate, PKAddPassesViewControllerDelegate, UIViewControllerTransitioningDelegate, UIViewControllerPreviewingDelegate, UIViewControllerPreviewingDelegate_Private, CKVideoMessageRecordingViewControllerDelegate, CKActionMenuGestureRecognizerButtonDelegate, PHPhotoLibraryChangeObserver, CNContactPickerDelegate, CKNavigationBarTitleControllerDelegate, CKMessageEntryViewDelegate, CKReaderViewControllerDelegate, CKTrimControllerDelegate, AFContextProvider, UIGestureRecognizerDelegate, CKChatInputControllerDelegate, CKFullScreenBalloonViewControllerDelegate, CKBrowserDragControllerTranscriptDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate, SGSuggestionPresenterDelegate, CKDetailsControllerDelegate, _UIClickInteractionDelegate, CKUnexpectedlyLoggedOutNotificationViewDelegate, UIPopoverPresentationControllerDelegate, UIDragInteractionDelegate, UIDropInteractionDelegate, UITextDropDelegate, UITextPasteDelegate, CKExtensionConsumer, CKFunCameraViewControllerDelegate, ILClassificationUIExtensionHostViewControllerDelegate, CKNicknameBannerViewDelegate, CKOnboardingControllerDelegate, CKNicknameUpdatesViewControllerDelegate, CKInlineReplyInteractionDelegate, CKBannerUpdatesViewDelegate, CKDetailsContactsManagerDelegate, CKCommunicationSafetyEDUScreenProtocol, CKNavbarCanvasViewControllerDelegate, STLockoutViewControllerDelegate, CKMacToolbarItemProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  CKMessagePartChatItem *clickyOrbChatItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hostsEntryViewExternally
 @property  CKEffectPickerViewController *effectPickerViewController
 @property  UIWindow *effectPickerWindow
 @property  BOOL effectPickerIsPresented
 @property  CKThrowAnimationManager *throwAnimationManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} photoGridTapbackSnapshotRect
 @property  NSString *photoGridDisplayedChatItemGUID
 @property  CKAggregateAttachmentMessagePartChatItem *photoGridMomentShareChatItem
 @property  CKAttachmentMessagePartChatItem *photoGridClickyOrbChatItem
 @property  CKMediaObjectAssetDataSourceManager *photoGridDataSourceManager
 @property  long long momentShareFetchGeneration
 @property  BOOL isTransitioningFromQLPreviewToGrid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UINavigationController *commSafetyEDUNavigationController
 @property  BOOL transitioningSize
 @property  {CGSize=dd} lastLaidOutSize
 @property  BOOL needToScrollToBottom
 @property  long long lastKnownDeviceOrientation
 @property  NSNumber *transcriptBottomContentOffsetAtSuspend
 @property  BOOL firstLayoutAfterResume
 @property  long long targetFirstResponder
 @property  CKMessageEntryViewController *entryViewController
 @property  CKChatInputController *inputController
 @property  BOOL suppressEntryViewKeyboardNotifications
 @property  IMScheduledUpdater *autorotationUpdater
 @property  CKScheduledUpdater *typingUpdater
 @property  CKNavbarCanvasViewController *navbarCanvasViewController
 @property  SGFoundInSuggestionPresenter *suggestionBannerPresenter
 @property  double suggestionBannerHeight
 @property  NSLayoutConstraint *suggestionBannerTopConstraint
 @property  UIView *suggestionBannerView
 @property  CKUnreadBannerView *unreadBannerView
 @property  NSString *lastSeenGUID
 @property  @? scrollBlock
 @property  BOOL entryViewWasActiveBeforePresentingDataDetector
 @property  CKMacToolbarController *macToolbarController
 @property  UIMenu *macFaceTimeButtonMenu
 @property  CKMacMenuToolbarItem *macFaceTimeStartCallToolbarItem
 @property  CKMacToolbarItem *macFaceTimeJoinedCallToolbarItem
 @property  CKMacToolbarItem *macFaceTimeJoinCallToolbarItem
 @property  CKMacBarButtonToolbarItem *detailsToolbarItem
 @property  UIView *recipientsVirtualToolbarItem
 @property  CKMacToolBarImageProperties *macToolbarFaceTimeButtonProps
 @property  CKMacToolBarImageProperties *macToolbarDetailsButtonProps
 @property  long long macJoinStyle
 @property  BOOL primeTranscriptWithInitialScrollGeometries
 @property  {CGPoint=dd} initialContentOffset
 @property  {UIEdgeInsets=dddd} initialContentInset
 @property  CKComposition *initialComposition
 @property  BOOL shouldDisableEntryView
 @property  CKRaiseGesture *raiseGesture
 @property  UIToolbar *actionsToolbar
 @property  CKComposition *compositionBeingTrimmed
 @property  CKAudioTrimViewController *audioTrimController
 @property  CKVideoTrimController *videoTrimController
 @property  IMPluginPayload *extensionPayloadBeingSent
 @property  BOOL isAnimatingMessageSend
 @property  CKThrowAnimationManager *throwAnimationManager
 @property  @? deferredSendAnimationBlock
 @property  UIImagePickerController *imagePickerController
 @property  CKVideoMessageRecordingViewController *videoMessageRecordingViewController
 @property  BOOL showingVideoMessageRecordingView
 @property  CKQLPreviewControllerDataSource *qlPreviewDataSource
 @property  CKQLPreviewController *previewController
 @property  CKQLDetailsPreviewController *entryPreviewController
 @property  UIView *previewSourceView
 @property  BOOL isShowingPreview
 @property  BOOL entryViewWasActiveOnPreview
 @property  BOOL entryViewWasActiveOnContextMenuPresentation
 @property  CKInvisibleInkEffectController *previewInvisibleInkEffectController
 @property  UIView *previewRevealView
 @property  BOOL isShowingAcknowledgmentPicker
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  BOOL isShowingEmojiKeyboard
 @property  UIKeyboardInputMode *savedKeyboardInputMode
 @property  UIViewController<CKEffectPickerViewControllerProtocol> *effectPickerViewController
 @property  UIWindow *effectPickerWindow
 @property  BOOL effectPickerIsPresented
 @property  CKUnexpectedlyLoggedOutNotificationView *unexpectedlyLoggedOutNotificationView
 @property  CKScheduledUpdater *transcriptInlineNotificationUpdater
 @property  CADisplayLink *stickerTranscriptScrollDisplayLink
 @property  double stickerTranscriptScrollDelta
 @property  BOOL scrollDownIsValid
 @property  NSObject<OS_dispatch_group> *revealAnimationGroup
 @property  <UIDragSession> *dragSession
 @property  <UIDropSession> *dropSession
 @property  BOOL isShowingDetailsController
 @property  CKFunCameraViewController *funCameraViewController
 @property  BOOL isShowingCamera
 @property  @? deferredPresentationBlock
 @property  CKNicknameBannerView *nicknameBanner
 @property  CKNicknameUpdatesViewController *nicknameUpdateController
 @property  CNContactPickerViewController *contactPicker
 @property  CKNicknameUpdate *currentNicknameUpdate
 @property  CKOnboardingController *onboardingController
 @property  UIView *lockoutView
 @property  STConversationContext *conversationContext
 @property  long long acknowledgmentToSend
 @property  BOOL wantsStickerDetails
 @property  BOOL wantsInlineOverlay
 @property  CKNavigationBarTitleController *navigationBarTitleController
 @property  CKInlineReplyChatController *inlineReplyController
 @property  BOOL transcriptWasScrolledToBottomBeforeInlinePresentation
 @property  CKGroupUpdateBannerView *groupPhotoUpdateBanner
 @property  CKMacRecipientsController *macRecipientsController
 @property  CKBusinessMacToolbarViewController *businessMacToolbarController
 @property  NSString *lastPopulatedMessageGuidFromMe
 @property  CKComposition *originalComposition
 @property  NSString *shareSheetHostBundleIdentifier
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} photoGridTapbackSnapshotRect
 @property  NSString *photoGridDisplayedChatItemGUID
 @property  CKAggregateAttachmentMessagePartChatItem *photoGridMomentShareChatItem
 @property  CKAttachmentMessagePartChatItem *photoGridClickyOrbChatItem
 @property  CKMediaObjectAssetDataSourceManager *photoGridDataSourceManager
 @property  long long momentShareFetchGeneration
 @property  BOOL isTransitioningFromQLPreviewToGrid
 @property  <CKChatControllerDelegate> *delegate
 @property  CKMessageEntryView *entryView
 @property  <CKExternalEntryViewHost> *externalEntryViewHost
 @property  <CKExternalPluginViewControllerProvider> *externalPluginControllerProvider
 @property  CKComposition *composition
 @property  BOOL isFunCamPresented
 @property  BOOL shouldShowDoneButton
 @property  BOOL wasKeyboardShowingWithApp
 @property  NSString *messageGUIDForTranscriptExtension
 @property  CKDetailsContactsManager *detailsContactsManager
 @property  UIContextMenuInteraction *transcriptContextMenuInteraction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKChatController isCollapsed]
  -[CKChatController dropSession]
  -[CKChatController preferredStatusBarStyle]
  -[CKChatController presentViewController:animated:completion:]
  -[CKChatController previewControllerDidDismiss:]
  -[CKChatController presentationControllerDidDismiss:]
  -[CKChatController _avoidanceInsets]
  -[CKChatController prefersStatusBarHidden]
  -[CKChatController preferredFocusEnvironments]
  -[CKChatController showKeyboard]
  -[CKChatController presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:]
  -[CKChatController contextMenuInteraction:willDisplayMenuForConfiguration:animator:]
  -[CKChatController _applicationWillResignActive:]
  -[CKChatController setTapGestureRecognizer:]
  -[CKChatController copy:]
  -[CKChatController nicknameBannerViewActionButtonTapped:]
  -[CKChatController nicknameBannerViewDismissButtonTapped:]
  -[CKChatController inputAccessoryView]
  -[CKChatController _meContact]
  -[CKChatController prepareForResume]
  -[CKChatController viewWillLayoutSubviews]
  -[CKChatController prepareForSuspend]
  -[CKChatController deleteMediaObjectAttachmentGUIDs:originalStackCount:]
  -[CKChatController previewController:transitionImageForPreviewItem:contentRect:]
  -[CKChatController traitCollectionDidChange:]
  -[CKChatController hideMediaPickerAnimated:completion:]
  -[CKChatController prewarmCamera:]
  -[CKChatController dragInteraction:itemsForAddingToSession:withTouchAtPoint:]
  -[CKChatController scrollToMessage:highlight:withInlineReplyOverlay:]
  -[CKChatController composition]
  -[CKChatController effectPickerViewControllerClose:]
  -[CKChatController effectPickerViewController:effectWithIdentifierSelected:]
  -[CKChatController presentDetailsViewController]
  -[CKChatController video:didFinishSavingWithError:contextInfo:]
  -[CKChatController showMediaPicker:animated:]
  -[CKChatController dismissViewController:]
  -[CKChatController transcriptCollectionViewController:balloonViewDidRequestStartEditingPayload:forPlugin:allowAllCommits:completionHandler:]
  -[CKChatController keyCommandToggleDetails]
  -[CKChatController setQlPreviewDataSource:]
  -[CKChatController messageEntryViewSendButtonHitWhileDisabled:]
  -[CKChatController messageEntryViewWidth:andOffset:]
  -[CKChatController dismissDetailsNavigationController]
  -[CKChatController isDetailsNavigationControllerDetached]
  -[CKChatController setEditing:animated:]
  -[CKChatController dismissVideoMessageRecordingViewController]
  -[CKChatController isFunCamPresented]
  -[CKChatController setPreviewController:]
  -[CKChatController setEntryPreviewController:]
  -[CKChatController setTransitioningSize:]
  -[CKChatController qlPreviewDataSource]
  -[CKChatController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKChatController popoverPresentationControllerShouldDismissPopover:]
  -[CKChatController _dealloc]
  -[CKChatController lastKnownDeviceOrientation]
  -[CKChatController raiseGesture]
  -[CKChatController imagePickerController]
  -[CKChatController updateStyleForCurrentEffect]
  -[CKChatController invalidateChatItemLayoutForTraitCollectionChangeIfNeeded:]
  -[CKChatController _canShowBackButtonView]
  -[CKChatController contextMenuInteraction:configurationForMenuAtLocation:]
  -[CKChatController allowContextProvider:]
  -[CKChatController performResumeDeferredSetup]
  -[CKChatController flagSensitiveMediaObjects:]
  -[CKChatController _currentPresentationController]
  -[CKChatController nextMediaObjectToTrimInComposition:]
  -[CKChatController shouldHideInteractionsForActionManager:]
  -[CKChatController .cxx_destruct]
  -[CKChatController startTrimmingMediaObjectsInComposition:]
  -[CKChatController initWithConversation:]
  -[CKChatController registerNotifications]
  -[CKChatController _updateNavigationButtons]
  -[CKChatController _willSendComposition:inConversation:]
  -[CKChatController updateAppStripVisibility:animated:]
  -[CKChatController clickInteractionShouldBegin:]
  -[CKChatController _setConversationDeferredSetup]
  -[CKChatController evaluateSendMetricsForComposition:]
  -[CKChatController shouldUseThrowAnimationForComposition:]
  -[CKChatController sendCompositionWithThrow:inConversation:]
  -[CKChatController contextMenuInteraction:willEndForConfiguration:animator:]
  -[CKChatController sendCompositionWithoutThrow:inConversation:]
  -[CKChatController setThrowAnimationManager:]
  -[CKChatController allowsMentions]
  -[CKChatController messageEntryViewPopulatePreviousSentMessage:]
  -[CKChatController messageEntryViewPopulateNextSentMessage:]
  -[CKChatController actionManager:quickLookChatItem:]
  -[CKChatController actionManager:tapbackChatItem:]
  -[CKChatController selectedChatItems]
  -[CKChatController actionManager:presentInlineReplyControllerForChatItem:]
  -[CKChatController selectAllForActionManager:]
  -[CKChatController actionManager:copyChatItems:]
  -[CKChatController actionManager:forwardChatItems:]
  -[CKChatController messageEntryViewWantsEffectPicker:]
  -[CKChatController showEffectPicker]
  -[CKChatController scrollToMessage:atSpecificMessagePartIndex:highlight:withInlineReplyOverlay:]
  -[CKChatController getCurrentContext]
  -[CKChatController contactPicker]
  -[CKChatController inlineReplyController:gradientFrameWithInsets:]
  -[CKChatController inlineReplyControllerWillAnimateIn:]
  -[CKChatController inlineReplyControllerWillAnimateOut:]
  -[CKChatController photosGridFullScreenBalloonViewController:balloonFrameForChatItem:]
  -[CKChatController _currentScrollDelta]
  -[CKChatController _dismissFullScreenBubbleViewControllerAnimated:withSendAnimation:completion:]
  -[CKChatController _fullScreenBalloonViewControllerWithChatItem:]
  -[CKChatController photosGridFullScreenBalloonViewController:didAppearAnimated:]
  -[CKChatController photosGridFullScreenBalloonViewControllerHandleDismissTap:]
  -[CKChatController viewDidLoad]
  -[CKChatController photosGridFullScreenBalloonViewControllerShouldShowReplyButton:]
  -[CKChatController fullScreenBalloonViewControllerShouldShowReplyButton:]
  -[CKChatController _popoverPresentationControllerShouldConvertToScene:]
  -[CKChatController sendMessage:forConversation:newComposition:]
  -[CKChatController _didSendCompositionInConversation:]
  -[CKChatController fullScreenBalloonViewController:sendMessageAcknowledgment:forChatItem:]
  -[CKChatController fullScreenBalloonViewControllerHandleDismissTap:]
  -[CKChatController showInlineReplyControllerForChatItem:presentKeyboard:]
  -[CKChatController fullScreenBalloonViewController:didAppearAnimated:]
  -[CKChatController fullScreenBalloonViewControllerDidDisappear:]
  -[CKChatController photosGridFullScreenBalloonViewControllerShouldShowHightlightButton:forChatItem:]
  -[CKChatController beginHoldingAutorotationForKey:]
  -[CKChatController inlineReplyControllerIsAnimatingIn:]
  -[CKChatController inlineReplyControllerIsAnimatingOut:]
  -[CKChatController inlineReplyControllerDidAnimateIn:]
  -[CKChatController actionsToolbar]
  -[CKChatController fullScreenBalloonViewController:replyButtonPressedForChatItem:]
  -[CKChatController fullScreenBalloonViewController:willAppearAnimated:]
  -[CKChatController fullScreenBalloonViewControllerShouldShowHightlightButton:forChatItem:]
  -[CKChatController setRevealAnimationGroup:]
  -[CKChatController fullScreenBalloonViewController:willDisappearWithSendAnimation:]
  -[CKChatController fullScreenBalloonViewController:verticallyScrollTranscriptByAmount:animated:completion:]
  -[CKChatController messageEntryViewDidChange:]
  -[CKChatController textPasteConfigurationSupporting:transformPasteItem:]
  -[CKChatController imagePickerController:didFinishPickingMediaWithInfo:]
  -[CKChatController virtualView]
  -[CKChatController messageEntryViewMaxHeight:]
  -[CKChatController setupStateForLaunchPluginWithBundleID:pluginPayload:]
  -[CKChatController photosGridFullScreenBalloonViewController:sendMessageHighlight:forChatItem:]
  -[CKChatController setPrimeTranscriptWithInitialScrollGeometries:]
  -[CKChatController inlineReplyControllerDidAnimateOut:]
  -[CKChatController inlineReplyControllerUpdatedFrameMap:]
  -[CKChatController inlineReplyControllerBecomeFirstResponder:]
  -[CKChatController canBecomeFirstResponder]
  -[CKChatController contactViewController:didCompleteWithContact:]
  -[CKChatController messageEntryView:didInsertPluginPayload:]
  -[CKChatController dropInteraction:canHandleSession:]
  -[CKChatController setContactPicker:]
  -[CKChatController setInitialContentInset:]
  -[CKChatController _mediaObjectNeedsTrimming:]
  -[CKChatController setRaiseGesture:]
  -[CKChatController _popoverPresentationController:didDetachScene:]
  -[CKChatController messageEntryView:shouldShowAppStrip:animated:]
  -[CKChatController messageEntryViewShouldBeginEditing:]
  -[CKChatController splitViewController]
  -[CKChatController inlineReplyControllerRequestsReloadInputViews:]
  -[CKChatController inlineReplyController:setTargetFirstResponder:]
  -[CKChatController makeEntryViewActiveAfterSend]
  -[CKChatController messageEntryViewMaxShelfPluginViewSize:]
  -[CKChatController messageEntryViewDidBeginEditing:]
  -[CKChatController messageEntryViewDidEndEditing:]
  -[CKChatController messageEntryViewDidBeginEditingNotAlreadyActive:]
  -[CKChatController messageEntryView:shouldInsertMediaObjects:]
  -[CKChatController clickInteractionDidClickUp:]
  -[CKChatController fullScreenBalloonViewController:sendMessageHighlight:forChatItem:]
  -[CKChatController messageEntryView:didTapMediaObject:]
  -[CKChatController setDragSession:]
  -[CKChatController viewDidAppear:]
  -[CKChatController photosGridFullScreenBalloonViewController:willDisappearWithSendAnimation:]
  -[CKChatController revealAnimationGroup]
  -[CKChatController _api_dragInteraction:previewForLiftingItem:session:]
  -[CKChatController setCompositionBeingTrimmed:]
  -[CKChatController compositionBeingTrimmed]
  -[CKChatController _popoverPresentationController:shouldDetachScene:]
  -[CKChatController messageEntryViewRecordingDidChange:]
  -[CKChatController initialComposition]
  -[CKChatController presentTrimControllerForMediaObject:]
  -[CKChatController cleanUpDarkEffectStyle]
  -[CKChatController initialContentInset]
  -[CKChatController _updateEntryViewFrameIfNeeded:]
  -[CKChatController becomeFirstResponder]
  -[CKChatController macJoinStyle]
  -[CKChatController primeTranscriptWithInitialScrollGeometries]
  -[CKChatController raiseGestureRecognized:]
  -[CKChatController setLastSeenGUID:]
  -[CKChatController scrollToMessage:highlight:]
  -[CKChatController inlineReplyControllerTargetFirstResponder:]
  -[CKChatController inlineReplyControllerChatInputController:]
  -[CKChatController forciblyUnloadChatInputController]
  -[CKChatController _presentSentWithSiriUI]
  -[CKChatController _updateActionsToolbarItems]
  -[CKChatController setInitialComposition:]
  -[CKChatController shouldMessageEntryViewReportBrowserButtonHitToInputDelegate:]
  -[CKChatController setMacToolbarFaceTimeButtonProps:]
  -[CKChatController setInitialContentOffset:]
  -[CKChatController sendComposition:]
  -[CKChatController insertInitialCompositionIfNeeded]
  -[CKChatController setMacToolbarDetailsButtonProps:]
  -[CKChatController _configureMacFaceTimeButtonMenu]
  -[CKChatController _configureFaceTimeStartCallToolbarItem]
  -[CKChatController _presentViewerForChatItem:assetReference:]
  -[CKChatController _presentGridForChatItem:assetReference:]
  -[CKChatController _presentGridForPendingMomentShareChatItem:]
  -[CKChatController showViewerForMediaObject:]
  -[CKChatController _showReaderForAggregateChatItem:balloonView:]
  -[CKChatController _handleTranscriptPluginChatItem:]
  -[CKChatController _tapbackStatusManagerForChatItem:]
  -[CKChatController _presentGridViewNavigationController:]
  -[CKChatController _gridViewNavigationControllerForChatItem:assetReference:completionHandler:]
  -[CKChatController inlineReplyController:containerWidth:offset:]
  -[CKChatController inlineReplyControllerDidSendComposition:]
  -[CKChatController prepareToDismissForSecondInstance]
  -[CKChatController shouldAutorotate]
  -[CKChatController _configureMacFaceTimeJoinCallToolbarItem]
  -[CKChatController _configureMacFaceTimeJoinedCallToolbarItem]
  -[CKChatController _configureDetailsToolbarItem]
  -[CKChatController _gridViewNavigationControllerForMomentShareURL:chatItem:tapbackManager:completionHandler:]
  -[CKChatController photosGridFullScreenBalloonViewController:sendMessageAcknowledgment:forChatItem:]
  -[CKChatController endHoldingAutorotationForKey:]
  -[CKChatController macFaceTimeButtonMenu]
  -[CKChatController setMacFaceTimeButtonMenu:]
  -[CKChatController _callButtonPressed]
  -[CKChatController detailsToolbarItem]
  -[CKChatController shouldUseMacRecipientsView]
  -[CKChatController macRecipientsController]
  -[CKChatController preferredMacToolbarHeight]
  -[CKChatController _macShouldShowFaceTimeButtonInToolbar]
  -[CKChatController macToolbarController]
  -[CKChatController inlineReplyController:setIsShowingPreview:]
  -[CKChatController updateBannerViewDismissButtonTapped:updateType:]
  -[CKChatController chatControllerWillBeginResizing]
  -[CKChatController _gridViewNavigationControllerForMomentShare:chatItem:tapbackManager:]
  -[CKChatController photosGridFullScreenBalloonViewControllerDidDisappear:]
  -[CKChatController suggestionBannerTopConstraint]
  -[CKChatController _chatItemForMediaObject:]
  -[CKChatController macToolbarDetailsButtonProps]
  -[CKChatController effectPickerIsPresented]
  -[CKChatController _handleTranscriptPluginChatItem:presentationConfiguration:]
  -[CKChatController photoGridDisplayedChatItemGUID]
  -[CKChatController photoGridDataSourceManager]
  -[CKChatController _newImageConfiguredForNSToolbarWithName:tintColor:]
  -[CKChatController macToolbarFaceTimeButtonProps]
  -[CKChatController configureWithToolbarController:]
  -[CKChatController _configureGridControllerForStackTransition:chatItem:]
  -[CKChatController _handleAddressBookChangedNotification:]
  -[CKChatController messageEntryViewSendButtonHit:]
  -[CKChatController photosGridFullScreenBalloonViewController:verticallyScrollTranscriptByAmount:animated:completion:]
  -[CKChatController photoGridMomentShareChatItem]
  -[CKChatController photoGridDisplayedChatItemChanged:]
  -[CKChatController updateQLPreviewControllerBarButtonItemsIfVisible]
  -[CKChatController previewItemsForMediaObject:currentItemIndex:containsRestoring:]
  -[CKChatController _displayMediaObjectFullscreen:]
  -[CKChatController photosGridFullScreenBalloonViewController:stickerPackTappedWithAdamID:]
  -[CKChatController removeSuggestionsBanner:animated:]
  -[CKChatController acceptPressedForSecondSendingCommSafetyEDUScreen:withComposition:]
  -[CKChatController navbarCanvasViewControllerFaceTimeAudioButtonTapped:]
  -[CKChatController setBusinessMacToolbarController:]
  -[CKChatController setMacRecipientsController:]
  -[CKChatController _visibleChatItemsToScreenFrameMap]
  -[CKChatController _contentInsetForSendAnimation]
  -[CKChatController messageEntryViewRaiseGestureAutoSend:]
  -[CKChatController recipientsVirtualToolbarItem]
  -[CKChatController inlineReplyControllerForChatItem:]
  -[CKChatController _regularGridViewNavigationControllerForChatItem:assetReference:tapbackManager:]
  -[CKChatController businessMacToolbarController]
  -[CKChatController reparentToolbarItem:]
  -[CKChatController photosGridFullScreenBalloonViewController:deleteStickerWithTransferGUID:]
  -[CKChatController setSuggestionBannerView:]
  -[CKChatController photosGridFullScreenBalloonViewController:replyButtonPressedForChatItem:]
  -[CKChatController addSuggestionBanner:animated:]
  -[CKChatController shoudlNotShowBanners]
  -[CKChatController presentUpdateBanner]
  -[CKChatController isShowingPreview]
  -[CKChatController isTesting]
  -[CKChatController acceptPressedForSecondReceivingCommSafetyEDUScreen:withItemIndexPath:]
  -[CKChatController navbarCanvasViewController:didTapView:]
  -[CKChatController presentedPreviewControllerDidSelectNavigateToGrid]
  -[CKChatController presentedPreviewControllerDidSelectDismissToGrid]
  -[CKChatController configureMacToolbarProperties]
  -[CKChatController _macJoinFaceTimeCallButtonClicked:]
  -[CKChatController innermostToolbarItemIdentifier]
  -[CKChatController refreshMacToolbar]
  -[CKChatController macRecipientsControllerDidUpdateToFieldSizing:]
  -[CKChatController _updatedDetailsToolbarItemImage]
  -[CKChatController _updatedFaceTimeToolbarItemImage]
  -[CKChatController respondsToSelector:]
  -[CKChatController _displayPreviewItemForMediaObject:]
  -[CKChatController _showMapViewerForMediaObject:]
  -[CKChatController _showVCardViewerForMediaObject:]
  -[CKChatController dragInteraction:itemsForBeginningSession:]
  -[CKChatController declinePressedForCommSafetyEduScreen:isSending:withComposition:withSensitiveMediaObjects:withIdentifiersOfShelvedImages:]
  -[CKChatController _showPassbookCardViewForMediaObject:]
  -[CKChatController createGroupUpdateWithType:]
  -[CKChatController providerWillBeRemovedFromToolbarController:]
  -[CKChatController itemProviderDisablesTouches]
  -[CKChatController toolbarItemForIdentifier:]
  -[CKChatController _previewViewControllerForAssetReference:dataSource:previewDelegate:previewMode:]
  -[CKChatController _previewingViewControllerForLocation:inSourceView:]
  -[CKChatController virtualToolbarContentInsets]
  -[CKChatController virtualToolbarPreferredHeight]
  -[CKChatController prefersBottomDividerHidden]
  -[CKChatController _previewViewControllerForAssetReference:photosViewController:previewMode:]
  -[CKChatController _presentPreviewViewControllerFromPhotosViewController:assetReference:]
  -[CKChatController pluginButtonsEnabled]
  -[CKChatController _fullScreenBalloonViewControllerForPhotosGridViewWithChatItem:snapshotView:]
  -[CKChatController _showTapbackReplyOverlayFromPhotosViewController:assetReference:]
  -[CKChatController _presentUpdateBannerView:completion:]
  -[CKChatController suggestionBannerView]
  -[CKChatController showSMSReportSpamExtensionControllerForMessages:]
  -[CKChatController entryView]
  -[CKChatController additionalSafeAreaInsets]
  -[CKChatController messagePressedForCommSafetyEduScreen:isSending:withComposition:withSensitiveMediaObjects:withIdentifiersOfShelvedImages:]
  -[CKChatController _nicknameBannerUpdatesAndStyle:]
  -[CKChatController accountCanCreateNickname]
  -[CKChatController _alwaysShowNicknameBanners]
  -[CKChatController addMedia:]
  -[CKChatController messageSomeonePressed]
  -[CKChatController navbarCanvasViewControllerFaceTimeVideoButtonTapped:]
  -[CKChatController navbarCanvasViewController:infoButtonTapped:]
  -[CKChatController setupStateForLaunchURL:]
  -[CKChatController messageEntryViewSwipeDownGestureRecognized:]
  -[CKChatController sendCurrentLocationMessage:]
  -[CKChatController inputController]
  -[CKChatController throwAnimationFinalFrameOffset:]
  -[CKChatController throwAnimationManagerTopHeaderHeight:]
  -[CKChatController _hasExistingBannerMatchingStyle:withNicknames:]
  -[CKChatController setNicknameBanner:]
  -[CKChatController willMoveToParentViewController:]
  -[CKChatController tapGestureRecognizer]
  -[CKChatController initialContentOffset]
  -[CKChatController setEntryViewWasActiveOnPreview:]
  -[CKChatController entryViewWasActiveOnPreview]
  -[CKChatController _dismissSentWithSiriUI]
  -[CKChatController _assetReferenceForDisplayedGridChatItem:selectionSnapshot:]
  -[CKChatController photosViewController:didPickAssetReference:]
  -[CKChatController photosViewController:didDoubleTapAssetReference:]
  -[CKChatController photosViewController:dragItemProviderForAssetReference:]
  -[CKChatController photosGridFullScreenBalloonViewController:willAppearAnimated:]
  -[CKChatController photosViewController:configurationForContextMenuInteraction:assetReference:]
  -[CKChatController _canReloadEntryView]
  -[CKChatController _dismissPresentedViewController:]
  -[CKChatController showAlternateViewerForMediaObject:]
  -[CKChatController addPassesViewControllerDidFinish:]
  -[CKChatController scrollTranscriptPageUpDirection:toBounds:]
  -[CKChatController _presentBrowserForPlugin:]
  -[CKChatController photosViewController:commitPreviewViewControllerForContextMenuInteraction:]
  -[CKChatController photosViewController:accessoriesForContextMenuInteraction:assetReference:]
  -[CKChatController navbarCanvasViewController:updatedJoinStateWithStyle:]
  -[CKChatController navbarCanvasViewControllerWantsNavbarResize:]
  -[CKChatController unreadBannerViewTapped:]
  -[CKChatController _showVCalViewerForMediaObject:]
  -[CKChatController excludedActivityTypesForPreviewController:]
  -[CKChatController additionalActivitiesTypesForPreviewController:]
  -[CKChatController photosViewController:contextMenuInteraction:willEndForConfiguration:animator:]
  -[CKChatController _replaceNicknameBannerView:withNewBannerView:completion:]
  -[CKChatController _presentNicknameBannerView:completion:]
  -[CKChatController applicationWillSuspend]
  -[CKChatController previewingContext:viewControllerForLocation:]
  -[CKChatController previewController:willTransitionToState:]
  -[CKChatController previewController:didTransitionToState:]
  -[CKChatController previewController:transitionViewForPreviewItem:uncroppedSourceFrame:]
  -[CKChatController photosViewController:contextMenuInteraction:styleForMenuWithConfiguration:]
  -[CKChatController extensionPayloadBeingSent]
  -[CKChatController _haveUpdateAlready:forContact:]
  -[CKChatController systemMinimumLayoutMarginsForViewController:]
  -[CKChatController unreadCountForCurrentFilterModeForNavbarCanvasViewController:]
  -[CKChatController setDropSession:]
  -[CKChatController lockoutViewControllerDidFinishDismissing:]
  -[CKChatController primeTranscriptWithInitialOffset:inset:]
  -[CKChatController gradientBottomPlaceholderHeight]
  -[CKChatController presentAppStoreForURL:fromSourceApplication:]
  -[CKChatController _updateForNewPreferredService]
  -[CKChatController setExtensionPayloadBeingSent:]
  -[CKChatController _handleGroupPhotoChanged:]
  -[CKChatController _handleGroupNameChanged:]
  -[CKChatController setSendingMessage:]
  -[CKChatController previewController:frameForPreviewItem:inSourceView:]
  -[CKChatController outgoingComposeViewForSendAnimation]
  -[CKChatController restoreInputAfterSearchPresentation]
  -[CKChatController keyboardIsQuickPathing]
  -[CKChatController beginFacetimeCallWithVideo:]
  -[CKChatController _fullscreenEffectsManager]
  -[CKChatController __im_ff_isInterstellarEnabled]
  -[CKChatController __im_ff_isInterstellarEnabled]
  -[CKChatController clearHandlesFromScrutinyForNicknameUpdates:]
  -[CKChatController isSafeToMarkAsRead]
  -[CKChatController _markAsReadIfNecessary]
  -[CKChatController previewController:shouldOpenURL:forPreviewItem:]
  -[CKChatController keyCommands]
  -[CKChatController inputViewController]
  -[CKChatController dismissViewControllerAnimated:completion:]
  -[CKChatController _shouldShowReadRecieptAlert]
  -[CKChatController _askToTurnOnSMSRelayIfNeeded]
  -[CKChatController _askToTurnOnReadReceiptsIfNeeded]
  -[CKChatController _confirmReadReceiptSettings]
  -[CKChatController keyboardWillShowOrHide:]
  -[CKChatController topInsetPadding]
  -[CKChatController suppressEntryViewKeyboardNotifications]
  -[CKChatController dismissDetailsController:]
  -[CKChatController shouldListParticipantsInTitle]
  -[CKChatController _transferFinishedNotification:]
  -[CKChatController _transferRestoredNotification:]
  -[CKChatController appModalIsDisplayed]
  -[CKChatController isTransitioningSize]
  -[CKChatController keyboardDidShowOrHide:]
  -[CKChatController isShowingEmojiKeyboard]
  -[CKChatController savedKeyboardInputMode]
  -[CKChatController transcriptCollectionViewControllerPlayingAudioDidChange:]
  -[CKChatController updateEntryViewHeightIncludingAppStrip:]
  -[CKChatController suggestionBannerPresenter]
  -[CKChatController _doneButtonPressed]
  -[CKChatController suggestionBannerHeight]
  -[CKChatController _progressBarHostView]
  -[CKChatController setNavbarCanvasViewController:]
  -[CKChatController _backbuttonPressed]
  -[CKChatController _detailsButtonPressed]
  -[CKChatController setMacJoinStyle:]
  -[CKChatController _resizeNavigationBarIfNecessary]
  -[CKChatController _callButtonPressedWithVideoEnabled:]
  -[CKChatController _presentDetailsViewControllerAnimated:]
  -[CKChatController _navigationControllerToPop]
  -[CKChatController _raiseToListenSettingChanged:]
  -[CKChatController _textInputModeDidChange:]
  -[CKChatController addContactOptionsMenuWithNicknameUpdate:]
  -[CKChatController updateOptionsMenuForContact:withNicknameUpdate:withCompletionBlock:]
  -[CKChatController bannerInsets]
  -[CKChatController updateContactQuietlyForNicknameUpdate:updatePhoto:updateName:]
  -[CKChatController presentNicknameUpdatesViewControllerFromView:]
  -[CKChatController selectContact]
  -[CKChatController inputLanguageDidChange:]
  -[CKChatController nicknameStoreDidChange:]
  -[CKChatController _switchedToEmojiKeyboard:]
  -[CKChatController _switchedAwayFromEmojiKeyboard:]
  -[CKChatController interactionProgressDidUpdate:]
  -[CKChatController viewWillDisappear:]
  -[CKChatController invalidateEntryViewForNewCompose]
  -[CKChatController setEntryViewOverrideForNewCompose:]
  -[CKChatController cleanupPostComposeTransitionWithKBFrame:]
  -[CKChatController transcriptCollectionViewController:didSelectItemAtIndexPath:]
  -[CKChatController nicknameBannerDidInteractWithOnboardingOffer:]
  -[CKChatController showNicknameSharingOnboardingWithMemoji:]
  -[CKChatController setNicknameUpdateController:]
  -[CKChatController _transferCompleted:]
  -[CKChatController _dataDetectorsWillPresentNotification:]
  -[CKChatController _dataDetectorsDidDismissNotification:]
  -[CKChatController transcriptCollectionViewController:didDeselectItemAtIndexPath:]
  -[CKChatController inputAccessoryViewFrameForFloatingKeyboard]
  -[CKChatController showModalInlineReplyControllerForChatItem:]
  -[CKChatController setExternalEntryViewHost:]
  -[CKChatController macShowUnknownContactPopoverForNicknameUpdate:presentingViewController:sourceView:]
  -[CKChatController setCurrentNicknameUpdate:]
  -[CKChatController lastSeenGUID]
  -[CKChatController dismissPresentedViewController:]
  -[CKChatController updateContact:withNicknameUpdate:updatePhoto:updateName:addHandleToContact:presentationMode:]
  -[CKChatController onboardingController]
  -[CKChatController registerNotificationsForConversation:]
  -[CKChatController _conversationParticipantsChanged:]
  -[CKChatController _conversationJoinStateDidChange:]
  -[CKChatController transcriptCollectionViewController:balloonView:tappedForChatItem:]
  -[CKChatController transcriptCollectionViewControllerShouldPlayAudio:]
  -[CKChatController contactsManager:didRequestCallTypeForEntity:addresses:abLabels:faceTimeAudioEnabled:]
  -[CKChatController clearCurrentMessageThread]
  -[CKChatController _shouldHideNavigationBarForSendAnimationContext:]
  -[CKChatController _finishSendAnimation]
  -[CKChatController contactsManagerViewModelsDidChange:]
  -[CKChatController viewDidLayoutSubviews]
  -[CKChatController setOnboardingController:]
  -[CKChatController _shouldShowNicknameOnboardingFlow]
  -[CKChatController _dragItemsForInteraction:]
  -[CKChatController dragPreviewParametersForBalloonView:]
  -[CKChatController _dragItemsFromChatItem:balloonView:]
  -[CKChatController _itemProvidersFromDragItems:]
  -[CKChatController avatarViewPressed:]
  -[CKChatController gestureRecognizer:shouldReceiveTouch:]
  -[CKChatController rotatingFooterView]
  -[CKChatController canPerformAction:withSender:]
  -[CKChatController transcriptCollectionViewController:balloonView:doubleTappedItemAtIndexPath:]
  -[CKChatController textDroppableView:proposalForDrop:]
  -[CKChatController _displayNameUpdatedNotification:]
  -[CKChatController shouldShowAvatarViewInNavBarCanvas]
  -[CKChatController updateQLPreviewControllerIfVisible]
  -[CKChatController _api_dropInteraction:sessionDidEnter:]
  -[CKChatController transcriptCollectionViewController:balloonView:selectedItemAtIndexPath:]
  -[CKChatController transcriptCollectionViewControllerDidInset:]
  -[CKChatController _api_dropInteraction:sessionDidUpdate:]
  -[CKChatController setSavedKeyboardInputMode:]
  -[CKChatController setIsShowingEmojiKeyboard:]
  -[CKChatController setEffectPickerWindow:]
  -[CKChatController _convertedNavigationBarFrameInSendAnimationContainerView:]
  -[CKChatController dragInteraction:sessionWillBegin:]
  -[CKChatController shouldShowDoneButton]
  -[CKChatController acceptPressedForFirstSendingCommSafetyEDUScreen:withComposition:withSensitiveMediaObjects:withIdentifiersOfShelvedImages:]
  -[CKChatController viewWillAppear:]
  -[CKChatController textPasteConfigurationSupporting:combineItemAttributedStrings:forRange:]
  -[CKChatController chatForSendAnimationManager:]
  -[CKChatController collectionViewControllerForImpactEffectManager:]
  -[CKChatController setEffectPickerViewController:]
  -[CKChatController setEntryViewController:]
  -[CKChatController entryViewController]
  -[CKChatController hostsEntryViewExternally]
  -[CKChatController shouldShowEntryView]
  -[CKChatController appManagerDisplayedInMessages]
  -[CKChatController sendAnimationManagerWillStartAnimation:context:]
  -[CKChatController sendAnimationManagerDidStopAnimation:context:]
  -[CKChatController throwAnimationManager:canNowSendMessages:]
  -[CKChatController textPasteConfigurationSupporting:performPasteOfAttributedString:toRange:]
  -[CKChatController throwAnimationManagerEntryView:]
  -[CKChatController throwAnimationManagerAccessoryViewHeight:]
  -[CKChatController throwAnimationKeyboardFrame:]
  -[CKChatController throwAnimationWindowFrame:]
  -[CKChatController transcriptCollectionViewController:didTapAttributionButtonForChatItem:]
  -[CKChatController loadChatInputController]
  -[CKChatController _marginInsetsForEntryView]
  -[CKChatController shouldRemoveMacCatalystEntryView]
  -[CKChatController isShowingCamera]
  -[CKChatController externalPluginControllerProvider]
  -[CKChatController setIsAnimatingMessageSend:]
  -[CKChatController detailsContactsManager]
  -[CKChatController commSafetyEDUNavigationController]
  -[CKChatController transcriptCollectionViewController:didTapPluginStatusButtonForChatItem:]
  -[CKChatController appendCompositionFromItemProviders:]
  -[CKChatController _shouldRestoreFirstResponderAfterDetailsViewDismiss]
  -[CKChatController shouldInsertMacCatalystEntryView]
  -[CKChatController _isRunningInMacCatalyst]
  -[CKChatController setExternalPluginControllerProvider:]
  -[CKChatController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[CKChatController throwAnimationContainerSuperview:]
  -[CKChatController throwAnimationManagerPrepareForThrowAnimation:context:]
  -[CKChatController throwBalloonsForSendAnimationContext:]
  -[CKChatController modalInlineReplyControllerForChatItem:]
  -[CKChatController transcriptCollectionViewControllerChatItemsDidChange:]
  -[CKChatController transcriptCollectionViewController:balloonView:shouldSelectChatItem:]
  -[CKChatController _setShouldLoadInputAccessoryViewOnAppearance:]
  -[CKChatController wantsOverKeyboardAnimationForSendAnimationContext:]
  -[CKChatController transcriptCollectionViewControllerPerformBatchUpdateCompleted:]
  -[CKChatController _entryViewTopInsetPadding]
  -[CKChatController _maxEntryViewHeight]
  -[CKChatController setupScrollingForKeyboardInteraction]
  -[CKChatController _setEntryViewFrame:animated:]
  -[CKChatController externalEntryViewHost]
  -[CKChatController setShouldShowDoneButton:]
  -[CKChatController setCommSafetyEDUNavigationController:]
  -[CKChatController setSuggestionBannerPresenter:]
  -[CKChatController setSuggestionBannerHeight:]
  -[CKChatController setMacToolbarController:]
  -[CKChatController dismissInlineReplyController:]
  -[CKChatController _threadIdentifierForMessagePart:]
  -[CKChatController _threadOriginatorForMessagePart:]
  -[CKChatController setInlineReplyController:]
  -[CKChatController _inlineReplyTransitionContextForThreadOriginatorMessagePart:threadIdentifier:presentKeyboard:]
  -[CKChatController setMessageGUIDForTranscriptExtension:]
  -[CKChatController alertTitleForDelete]
  -[CKChatController __im_ff_isExpanseEnabled]
  -[CKChatController actionMenuGestureRecognizerButtonDidTouchDownButton:]
  -[CKChatController actionMenuGestureRecognizerButtonShouldShowHint:]
  -[CKChatController actionMenuGestureRecognizerButtonShowHint:]
  -[CKChatController setSuggestionBannerTopConstraint:]
  -[CKChatController entryViewWasActiveBeforePresentingDataDetector]
  -[CKChatController macFaceTimeStartCallToolbarItem]
  -[CKChatController transcriptCollectionViewControllerDisplaySMSSpamReporting:]
  -[CKChatController transcriptCollectionViewControllerWillDisplayLastBalloon:]
  -[CKChatController _showPhotoPickerWithSourceType:]
  -[CKChatController previewControllerWillDismiss:]
  -[CKChatController setEntryViewWasActiveBeforePresentingDataDetector:]
  -[CKChatController setMacFaceTimeStartCallToolbarItem:]
  -[CKChatController macFaceTimeJoinedCallToolbarItem]
  -[CKChatController setMacFaceTimeJoinedCallToolbarItem:]
  -[CKChatController macFaceTimeJoinCallToolbarItem]
  -[CKChatController setMacFaceTimeJoinCallToolbarItem:]
  -[CKChatController setActionsToolbar:]
  -[CKChatController actionMenuGestureRecognizerButtonDidTouchUpInsideButton:]
  -[CKChatController actionMenuGestureRecognizerButtonIsShowingHint:]
  -[CKChatController lockoutView]
  -[CKChatController actionMenuGestureRecognizerButtonShouldRecognizeGesture:]
  -[CKChatController actionMenuGestureRecognizerButtonGestureDidBegin:]
  -[CKChatController actionMenuGestureRecognizerButtonGestureDidEnd:]
  -[CKChatController sendCompositionIfAllowed:]
  -[CKChatController stickerTranscriptScrollDisplayLink]
  -[CKChatController selectedBalloonForTarget:]
  -[CKChatController transcriptCollectionViewController:willDeleteChatItems:]
  -[CKChatController alertMessageForDelete]
  -[CKChatController _cancelDeletion:]
  -[CKChatController stickerInfoDictionaryWithLayoutIntent:parentPreviewWidth:xScalar:yScalar:scale:rotation:]
  -[CKChatController setScrollDownIsValid:]
  -[CKChatController setTypingUpdater:]
  -[CKChatController transcriptCollectionViewController:targetAlphaForChatItem:]
  -[CKChatController transcriptWasScrolledToBottomBeforeInlinePresentation]
  -[CKChatController setConversation:]
  -[CKChatController setTranscriptWasScrolledToBottomBeforeInlinePresentation:]
  -[CKChatController typingUpdater]
  -[CKChatController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKChatController sendStickerWithMediaObject:parentMessagePartChatItem:]
  -[CKChatController transcriptCollectionViewController:showMessageSomeoneForItemWithIndexPath:]
  -[CKChatController scrollDownIsValid]
  -[CKChatController setDetailsToolbarItem:]
  -[CKChatController setRecipientsVirtualToolbarItem:]
  -[CKChatController shouldDisableEntryView]
  -[CKChatController setShouldDisableEntryView:]
  -[CKChatController interactionProgress:didEnd:]
  -[CKChatController inputAccessoryViewControllerEnabled]
  -[CKChatController setStickerTranscriptScrollDelta:]
  -[CKChatController _stickerTranscriptScrollDisplayLinkFired]
  -[CKChatController previewController:editingModeForPreviewItem:]
  -[CKChatController transcriptCollectionViewController:viewedCommSafetyItemWithIndexPath:]
  -[CKChatController presentedControllerDoneButtonItem]
  -[CKChatController dropInteraction:performDrop:]
  -[CKChatController presentViewController:]
  -[CKChatController setImagePickerController:]
  -[CKChatController prewarmFunCamera]
  -[CKChatController openURLInExtensionContextForMode:]
  -[CKChatController setFunCameraViewController:]
  -[CKChatController transcriptCollectionViewController:shouldSetupFullscreenEffectUI:]
  -[CKChatController chatInputSentComposition:]
  -[CKChatController cancelBarButtonItemPressed:]
  -[CKChatController __im_ff_newSuggestionsBannerEnabled]
  -[CKChatController spacePressed:]
  -[CKChatController viewDidAppearDeferredSetup]
  -[CKChatController effectPickerViewController]
  -[CKChatController setStickerTranscriptScrollDisplayLink:]
  -[CKChatController autorotationUpdater]
  -[CKChatController updateTyping]
  -[CKChatController setAutorotationUpdater:]
  -[CKChatController hideMediaPickerAnimated:]
  -[CKChatController navbarCanvasViewController]
  -[CKChatController keyCommandPage:]
  -[CKChatController transcriptCollectionViewController:shouldCleanupFullscreenEffectUI:]
  -[CKChatController dismissKeyboard]
  -[CKChatController _validateAndSendComposition:completion:]
  -[CKChatController createAlertControllerForAccountComposition:completion:]
  -[CKChatController _passKitUIDismissed:]
  -[CKChatController funCameraViewController]
  -[CKChatController scrollBlock]
  -[CKChatController audioTrimController]
  -[CKChatController setAudioTrimController:]
  -[CKChatController videoTrimController]
  -[CKChatController setVideoTrimController:]
  -[CKChatController throwAnimationManager]
  -[CKChatController transcriptCollectionViewController:willBeginImpactEffectAnimationWithSendAnimationContext:]
  -[CKChatController transcriptCollectionViewController:didEndImpactEffectAnimationWithSendAnimationContext:]
  -[CKChatController transcriptCollectionViewController:balloonView:didRequestPresentationStyle:forChatItem:allowAllStyles:]
  -[CKChatController stageAssetArchive:skipShelf:completionHandler:]
  -[CKChatController readerViewControllerWillDismiss:]
  -[CKChatController trimControllerDidCancel:]
  -[CKChatController presentPhotosApp]
  -[CKChatController _shouldValidatePayloadBeforeSendingPayload:]
  -[CKChatController trimController:didFinishTrimmingMediaObject:withReplacementMediaObject:]
  -[CKChatController viewForDragAndChatInputDropTarget]
  -[CKChatController chatInputControllerRequestInputViewFocusFromFullscreen:]
  -[CKChatController sendSticker:withDragTarget:]
  -[CKChatController dragControllerTranscriptDelegate]
  -[CKChatController _autorotationUpdaterFired]
  -[CKChatController setTargetFirstResponder:]
  -[CKChatController _updateTranscriptInlineNotification]
  -[CKChatController keyboardShouldShowPredictions:]
  -[CKChatController setDeferredSendAnimationBlock:]
  -[CKChatController showPayloadValidationAlertWithDescription:]
  -[CKChatController delete:]
  -[CKChatController _handleIsUnexpectedlyLoggedOutChanged:]
  -[CKChatController composeRecipientViewShouldResignFirstResponder]
  -[CKChatController keyboardShouldShowCandidates:]
  -[CKChatController _smsEnabled]
  -[CKChatController transcriptCollectionViewController:balloonViewDidRequestCommitPayload:forPlugin:allowAllCommits:error:]
  -[CKChatController videoMessageRecordingViewController]
  -[CKChatController setVideoMessageRecordingViewController:]
  -[CKChatController isShowingVideoMessageRecordingView]
  -[CKChatController transcriptCollectionViewController:balloonViewDidRequestCommitSticker:forPlugin:allowAllCommits:error:]
  -[CKChatController keyboardWillBeginInteractiveDismissal:]
  -[CKChatController windowDidResignKey:]
  -[CKChatController _transferFileTooLarge:]
  -[CKChatController setEffectPickerIsPresented:]
  -[CKChatController transcriptCollectionViewController:willDisplayBalloonForGUID:]
  -[CKChatController groupPhotoUpdateBanner]
  -[CKChatController showBannerForGroupUpdate:]
  -[CKChatController originalComposition]
  -[CKChatController dimsmissCurrentBannerAndShowNewBannerForGroupUpdate:]
  -[CKChatController setGroupPhotoUpdateBanner:]
  -[CKChatController isAnimatingMessageSend]
  -[CKChatController transcriptCollectionViewController:didTapReplyCountStatusButtonForChatItem:]
  -[CKChatController dealloc]
  -[CKChatController keyboardIsVisibleForChatInputController:]
  -[CKChatController chatInputControllerCanSend:]
  -[CKChatController chatInputWillUpdateInputViewShowingBrowser]
  -[CKChatController previewController:canShareItem:]
  -[CKChatController _dismissUpdateBannerView:completion:]
  -[CKChatController transcriptCollectionViewController:didTapPhotoStackButtonForChatItem:assetReference:]
  -[CKChatController entryViewWasActiveOnContextMenuPresentation]
  -[CKChatController _applicationDidBecomeActive:]
  -[CKChatController dropInteraction:sessionDidEnd:]
  -[CKChatController chatInputDidUpdateInputViewShowingBrowser:entryFieldCollapsed:animated:]
  -[CKChatController chatInputDidUpdateWithNewInputViewController:]
  -[CKChatController invisibleInkEffectControllerForPreviewController:]
  -[CKChatController showGroupBannerUpdateIfNeeded]
  -[CKChatController keyCommandDelete:]
  -[CKChatController keyCommandShowDetails:]
  -[CKChatController setEntryView:]
  -[CKChatController setShowingVideoMessageRecordingView:]
  -[CKChatController entryPreviewController]
  -[CKChatController previewSourceView]
  -[CKChatController setPreviewSourceView:]
  -[CKChatController previewRevealView]
  -[CKChatController transcriptCollectionViewController:didPinchPhotoStackForChatItem:assetReference:]
  -[CKChatController chatInputController:presentShelfModal:animated:completion:]
  -[CKChatController chatInputDidSelectEffectPicker]
  -[CKChatController dragManagerDidBeginDragging:]
  -[CKChatController previewControllerDidCancelDismiss:]
  -[CKChatController previewActionsForPreviewController:]
  -[CKChatController shouldHideInteractionOptions]
  -[CKChatController setLocalUserIsComposing:withPluginBundleID:typingIndicatorData:]
  -[CKChatController chatInputDidSelectPhotoPicker]
  -[CKChatController chatInputDidChangeSize]
  -[CKChatController scrollTranscriptPageUp]
  -[CKChatController scrollTranscriptPageDown]
  -[CKChatController scrollTranscriptEnd]
  -[CKChatController escButtonPressed:]
  -[CKChatController keyCommandReply:]
  -[CKChatController setLockoutView:]
  -[CKChatController keyCommandReplyAlternate:]
  -[CKChatController keyCommandTapback:]
  -[CKChatController isShowingAcknowledgmentPicker]
  -[CKChatController keyCommandSelectTapback:]
  -[CKChatController replyButtonTappedForMediaObject:previewController:]
  -[CKChatController chatItemForMediaObject:previewController:]
  -[CKChatController transcriptCollectionViewController:didTapPhotoStackAdditionalItemsForChatItem:]
  -[CKChatController previewControllerIsInGroupConversation:]
  -[CKChatController sendMessageAcknowledgment:chatItem:previewController:]
  -[CKChatController transcriptCollectionViewController:didTapPhotoStackForChatItem:assetReference:]
  -[CKChatController transcriptCollectionViewController:didTapPhotoStackButtonForPendingMomentShareChatItem:]
  -[CKChatController previewInvisibleInkEffectController]
  -[CKChatController setPreviewInvisibleInkEffectController:]
  -[CKChatController setPreviewRevealView:]
  -[CKChatController nicknameUpdateController]
  -[CKChatController tapGestureRecognized:]
  -[CKChatController __im_ff_translationEnabled]
  -[CKChatController __im_ff_translationEnabled]
  -[CKChatController transcriptCollectionViewController:didTapPendingMomentShareForChatItem:]
  -[CKChatController updateScreenTimeShieldIfNeededForChat:]
  -[CKChatController isChatAllowedByScreenTime:]
  -[CKChatController isHandwritingLandscape]
  -[CKChatController viewControllerForChatInputModalPresentation]
  -[CKChatController selectAccountAndSendComposition:completion:]
  -[CKChatController lastPopulatedMessageGuidFromMe]
  -[CKChatController progressBar]
  -[CKChatController inputAccessoryViewController]
  -[CKChatController setTranscriptInlineNotificationUpdater:]
  -[CKChatController stickerTranscriptScrollDelta]
  -[CKChatController isShowingDetailsController]
  -[CKChatController currentNicknameUpdate]
  -[CKChatController presentActionMenuForAccountSelection:completion:]
  -[CKChatController setOriginalComposition:]
  -[CKChatController setLastPopulatedMessageGuidFromMe:]
  -[CKChatController deferredSendAnimationBlock]
  -[CKChatController launchURLForMode:]
  -[CKChatController willPresentPreviewViewController:forLocation:inSourceView:]
  -[CKChatController chatInputWillChangeHeightForCompactPresentation:]
  -[CKChatController chatInputControllerDidShowHandwriting:]
  -[CKChatController dragManagerDidEndDragging:]
  -[CKChatController messageGUIDForTranscriptExtension]
  -[CKChatController dragSession]
  -[CKChatController _initializeEffectPicker]
  -[CKChatController ckVideoMessageRecordingViewController:mediaObjectCaptured:error:]
  -[CKChatController removeLockoutControllerIfNeeded]
  -[CKChatController showScreenTimeShieldIfNeeded]
  -[CKChatController chatAllowedByScreenTimeChanged:]
  -[CKChatController _clickyOrbEnabled]
  -[CKChatController chatInputControllerWillHideHandwriting:]
  -[CKChatController chatInputControllerWillPresentModalBrowserViewController:]
  -[CKChatController dragManagerTargetView:]
  -[CKChatController _parentChatItemForIndexPath:]
  -[CKChatController _parentIndexPathForCellAtIndexPath:]
  -[CKChatController _balloonViewForCellAtIndexPath:]
  -[CKChatController _menuForChatItem:]
  -[CKChatController _setTitle:animated:]
  -[CKChatController setClickyOrbChatItem:]
  -[CKChatController hideStickersAssociatedWithChatItem:]
  -[CKChatController _previewingViewControllerForHitView:indexPath:]
  -[CKChatController showFullScreenAcknowledgmentPickerIfNeededForBalloonAtIndexPath:]
  -[CKChatController setEntryViewWasActiveOnContextMenuPresentation:]
  -[CKChatController setIsShowingPreview:]
  -[CKChatController previewController]
  -[CKChatController restoreEntryViewAfterPreview]
  -[CKChatController clickyOrbChatItem]
  -[CKChatController chatInputControllerDidPresentModalBrowserViewController:]
  -[CKChatController chatInputControllerWillDismissModalBrowserViewController:]
  -[CKChatController keyboardDidChangeFrame:]
  -[CKChatController photosGridFullScreenBalloonViewControllerSafeAreaLayoutFrame:]
  -[CKChatController viewControllerToPresentFrom]
  -[CKChatController chatInputControllerDidDismissModalBrowserViewController:]
  -[CKChatController chatInputControllerWillTransitionExpanded:]
  -[CKChatController showContactForHandle:]
  -[CKChatController addOrRemoveMacCatalystEntryViewIfNeeded]
  -[CKChatController addOrRemoveExternallyHostedEntryViewIfNeeded]
  -[CKChatController setConversationContext:]
  -[CKChatController shouldPresentBlockingDowntimeViewController]
  -[CKChatController conversationContext]
  -[CKChatController chatInputControllerDidTransitionExpanded:]
  -[CKChatController chatInputControllerWillTransitionCollapsed:]
  -[CKChatController dragManager:draggedItemWithTarget:]
  -[CKChatController setComposition:]
  -[CKChatController ckVideoMessageRecordingViewControllerRecordingCanceled:]
  -[CKChatController contextMenuAccessoryViewsForChatItem:]
  -[CKChatController transcriptCollectionViewController:previewForHighlightingContextMenuWithConfiguration:]
  -[CKChatController fullScreenBalloonViewControllerSafeAreaLayoutFrame:]
  -[CKChatController _shouldShowAcknowledgmentPickerForBalloon]
  -[CKChatController acknowledgmentToSend]
  -[CKChatController shouldRemoveExternallyHostedEntryView]
  -[CKChatController _shouldShowVotingViewForChatItem:]
  -[CKChatController wantsInlineOverlay]
  -[CKChatController setAcknowledgmentToSend:]
  -[CKChatController chatInputControllerDidTransitionCollapsed:]
  -[CKChatController chatInputControllerDidDismissCompactBrowserViewController:]
  -[CKChatController sendCurrentLocation]
  -[CKChatController loadView]
  -[CKChatController wasKeyboardShowingWithApp]
  -[CKChatController shouldInsertExternallyHostedEntryView]
  -[CKChatController setWasKeyboardShowingWithApp:]
  -[CKChatController restoreContentOffsetChanges]
  -[CKChatController setWantsInlineOverlay:]
  -[CKChatController wantsStickerDetails]
  -[CKChatController chatInputControllerWillDismissCompactBrowserViewController:]
  -[CKChatController chatInputControllerWillSelectFunCamera:]
  -[CKChatController willDismissFunCamera:]
  -[CKChatController allowEffectPickerToBePresented]
  -[CKChatController __raiseGestureRecognized:]
  -[CKChatController _shouldRestoreDraftState]
  -[CKChatController _handleChatItemDidChange:]
  -[CKChatController setWantsStickerDetails:]
  -[CKChatController presentStickerDetailControllerWithChatItem:]
  -[CKChatController showStickersAssociatedWithChatItem:completion:]
  -[CKChatController restoreEntryViewPasteConfiguration]
  -[CKChatController restoreInputAfterPreviewPresentation]
  -[CKChatController clearEntryViewPasteConfiguration]
  -[CKChatController chatInputControllerCancelSelectFunCamera:]
  -[CKChatController chatInputControllerDidSelectFunCamera:]
  -[CKChatController dragManager:dropAreaForDragTarget:]
  -[CKChatController prepareInputForPreviewPresentation]
  -[CKChatController _updateNavigationUI]
  -[CKChatController _deleteStickerWithTransferGUID:]
  -[CKChatController _presentAppStoreForAdamID:]
  -[CKChatController photosGridViewPresented]
  -[CKChatController photosGridViewController]
  -[CKChatController supportedInterfaceOrientations]
  -[CKChatController _deleteMenuForChatItem:]
  -[CKChatController _moreActionForChatItem:]
  -[CKChatController _exportMenuForChatItem:]
  -[CKChatController _tapbackAndInlineReplyMenuForChatItem:]
  -[CKChatController _exportActionForChatItem:shouldUseTopMostChatItemIfAggregateChatItem:]
  -[CKChatController _inlineReplyActionForChatItem:]
  -[CKChatController _forwardAndCopyMenuForChatItem:]
  -[CKChatController _forwardAndCopyActionsForChatItem:]
  -[CKChatController _highlightActionForChatItem:]
  -[CKChatController dropInteraction:previewForDroppingItem:withDefault:]
  -[CKChatController _showTimestampsAction]
  -[CKChatController transcriptInlineNotificationUpdater]
  -[CKChatController inlineReplyController]
  -[CKChatController _downgradeMessageActionForChatItem:]
  -[CKChatController _stickerDetailsActionForChatItem:]
  -[CKChatController _mediaAttributionActionForChatItem:]
  -[CKChatController wantsChromelessAppearance]
  -[CKChatController shouldUseNavigationBarCanvasView]
  -[CKChatController _initializeNavigationBarCanvasViewIfNecessary]
  -[CKChatController _isRunningPPT]
  -[CKChatController _actionsToolbar]
  -[CKChatController _deleteSelectedMessages:]
  -[CKChatController _forwardSelectedMessages:]
  -[CKChatController _chatShowsUnexpectedlyLoggedOutNotification]
  -[CKChatController unexpectedlyLoggedOutNotificationView]
  -[CKChatController lastLaidOutSize]
  -[CKChatController _reportSelectedMessages:]
  -[CKChatController _forwardActionForChatItem:]
  -[CKChatController chatInputTranscriptIdentifier]
  -[CKChatController navigationBarTitleController]
  -[CKChatController setNavigationBarTitleController:]
  -[CKChatController setShareSheetHostBundleIdentifier:]
  -[CKChatController createNewContactActionWithNicknameUpdate:]
  -[CKChatController addToExistingContactActionWithNicknameUpdate:]
  -[CKChatController createContactWithNicknameUpdate:]
  -[CKChatController photoGridTapbackSnapshotRect]
  -[CKChatController setPhotoGridTapbackSnapshotRect:]
  -[CKChatController setPhotoGridDisplayedChatItemGUID:]
  -[CKChatController contactForNickname:]
  -[CKChatController nameAndPhotoForContact:andNicknameUpdate:withCompletionBlock:]
  -[CKChatController nameOnlyForContact:andNicknameUpdate:withCompletionBlock:]
  -[CKChatController _copyActionForChatItem:shouldUseTopMostChatItemIfAggregateChatItem:]
  -[CKChatController chatInputControllerShouldShowHandwriting:]
  -[CKChatController fullScreenBalloonViewController:stickerPackTappedWithAdamID:]
  -[CKChatController macToolbarInsets]
  -[CKChatController setUnexpectedlyLoggedOutNotificationView:]
  -[CKChatController _invalidateChatItemLayoutIfNecessary:]
  -[CKChatController setScrollBlock:]
  -[CKChatController setPhotoGridMomentShareChatItem:]
  -[CKChatController photoGridClickyOrbChatItem]
  -[CKChatController setPhotoGridClickyOrbChatItem:]
  -[CKChatController setPhotoGridDataSourceManager:]
  -[CKChatController currentTopChatItemForAggregateChatItem:]
  -[CKChatController _deleteActionForChatItem:shouldUseTopMostChatItemIfAggregateChatItem:]
  -[CKChatController _localizedTitleStringForAggregateAction:numberOfPhotos:numberOfVideos:numberOfOther:]
  -[CKChatController _deleteActionsForChatItem:]
  -[CKChatController _exportActionsForChatItem:]
  -[CKChatController shareSheetHostBundleIdentifier]
  -[CKChatController _defaultTranscriptNavBarAppearance]
  -[CKChatController fullScreenBalloonViewController:deleteStickerWithTransferGUID:]
  -[CKChatController photoOnlyForContact:andNicknameUpdate:withCompletionBlock:]
  -[CKChatController updateContact:withHandle:]
  -[CKChatController saveContact:shouldUpdate:]
  -[CKChatController dismissPickerWithCompletion:]
  -[CKChatController transcriptBottomContentOffsetAtSuspend]
  -[CKChatController needToScrollToBottom]
  -[CKChatController setNeedToScrollToBottom:]
  -[CKChatController setInputController:]
  -[CKChatController showUpdatePromptForNicknameUpdate:sourceView:completionBlock:]
  -[CKChatController photoLibraryDidChange:]
  -[CKChatController _presentBrowserOrAppStoreForAdamID:url:identifier:]
  -[CKChatController actionMoreIsTappedForChatItem:]
  -[CKChatController setUpStyleForDarkEffect]
  -[CKChatController suggestionPresenterWantsToShowBanner:]
  -[CKChatController firstLayoutAfterResume]
  -[CKChatController setTranscriptBottomContentOffsetAtSuspend:]
  -[CKChatController setFirstLayoutAfterResume:]
  -[CKChatController setLastLaidOutSize:]
  -[CKChatController _balloonViewOfCell:containsPoint:fromView:]
  -[CKChatController transcriptContextMenuInteraction]
  -[CKChatController _point:visuallyIntersectsBalloonViewInCollectionView:]
  -[CKChatController contextMenuInteractionIsOutsideOfVisibleBalloonCells:]
  -[CKChatController sendMessage:forConversation:onService:newComposition:]
  -[CKChatController _menuTitleForChatItem:]
  -[CKChatController _interfaceActionsForChatItem:]
  -[CKChatController momentShareFetchGeneration]
  -[CKChatController setMomentShareFetchGeneration:]
  -[CKChatController setIsTransitioningFromQLPreviewToGrid:]
  -[CKChatController setTranscriptContextMenuInteraction:]
  -[CKChatController transcriptCollectionViewController:styleForContextMenuWithConfiguration:]
  -[CKChatController transcriptCollectionViewController:contextMenuConfigurationForItemAtIndexPath:point:interaction:]
  -[CKChatController suggestionPresenterWantsToHideBanner:]
  -[CKChatController dragInteraction:session:didEndWithOperation:]
  -[CKChatController targetFirstResponder]
  -[CKChatController _updateProgressBarFrame]
  -[CKChatController nicknameBanner]
  -[CKChatController _setupNavbar]
  -[CKChatController viewControllerForPresentingFromBannerByPresenter:]
  -[CKChatController detailsControllerWillDismiss:]
  -[CKChatController transcriptCollectionViewController:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[CKChatController detailsControllerDidDismiss:]
  -[CKChatController transcriptCollectionViewController:previewForDismissingContextMenuWithConfiguration:]
  -[CKChatController setupClickyOrbForConversation:]
  -[CKChatController transcriptCollectionViewController:accessoriesForContextMenuWithConfiguration:layoutAnchor:]
  -[CKChatController transcriptCollectionViewController:willEndContextMenuInteractionWithConfiguration:animator:]
  -[CKChatController viewDidDisappear:]
  -[CKChatController transcriptCollectionViewController:willDisplayContextMenuWithConfiguration:animator:]
  -[CKChatController layoutLockoutView]
  -[CKChatController _presentDetailsViewController]
  -[CKChatController _editCancelButtonPressed]
  -[CKChatController isTransitioningFromQLPreviewToGrid]
  -[CKChatController unexpectedlyLoggedOutNotificationView:didChangeRequestedHeight:]
  -[CKChatController transcriptCollectionViewController:chatItemForContextMenuWithConfiguration:]
  -[CKChatController _hasPreviewViewControllerForChatItem:]
  -[CKChatController consumingBundleIdentifiers]
  -[CKChatController _restoreDraftState]
  -[CKChatController _showNicknameBannerIfNeeded]
  -[CKChatController stickerDetailViewController:deletedStickerWithTransferGUID:]
  -[CKChatController stickerDetailViewController:selectedStickerPackWithAdamID:]
  -[CKChatController unreadBannerView]
  -[CKChatController setUnreadBannerView:]
  -[CKChatController _updateTranscriptOffsetForBannerView]
  -[CKChatController setUnreadBannerHidden:animated:]
  -[CKChatController messageAcknowledgmentPickerViewController:didPickAcknowledgment:]
  -[CKChatController configureForCurrentTraitCollection]
  -[CKChatController updateRaiseGesture]
  -[CKChatController effectPickerWindow]
  -[CKChatController setDetailsContactsManager:]
  -[CKChatController _sizeEffectPickerWindow]
  -[CKChatController deferredPresentationBlock]
  -[CKChatController _kickPhotoKit]
  -[CKChatController contactPicker:didSelectContact:]
  -[CKChatController setDeferredPresentationBlock:]
  -[CKChatController checkSuggestionsForBanner]
  -[CKChatController setLastKnownDeviceOrientation:]
  -[CKChatController _performResume]
  -[CKChatController _markMessagesAsReadOnPushIfNeeded]
  -[CKChatController _markVisibleMentionsAsRead]
  -[CKChatController canShowBusinessOnboarding]
  -[CKChatController detailsControllerBusinessPrivacyInfoPresentingViewController:]
  -[CKChatController minimumBottomInset]
  -[CKChatController _retryGroupPhotoUploadIfNecessary]
  -[CKChatController didFinishShowingBusinessOnboarding]
  -[CKChatController startCommitPayload:forConversation:]
  -[CKChatController startDeferredEditingPayload:forConversation:]
  -[CKChatController didDismissFunCamera:]
  -[CKChatController presentingViewControllerForOnboardingController:]
  -[CKChatController actionPerformer:transitionToViewController:transitionType:]
  -[CKChatController clearCommSafetyCompositionIfNecessary]
  -[CKChatController _saveDraftState]
  -[CKChatController animateRevealWithInteractionProgress:forPreviewingAtLocation:inSourceView:containerView:]
  -[CKChatController didReceiveMemoryWarning]
  -[CKChatController keyCommandReply:withModifier:]
  -[CKChatController setSuppressEntryViewKeyboardNotifications:]
  -[CKChatController controller:didCompleteClassificationRequest:withResponse:]
  -[CKChatController onboardingControllerDidFinish:]
  -[CKChatController nicknameUpdatesForController:]
  -[CKChatController dismissNicknameUpdateController:]
  -[CKChatController nicknameUpdatesViewController:selectedAction:forNicknameUpdate:sourceView:]
  -[CKChatController setIsShowingDetailsController:]
  -[CKChatController setIsShowingCamera:]
  -[CKChatController balloonMaxWidth]
  -[CKChatController parentControllerDidBecomeActive]
  -[CKChatController keyboardWillChangeFrame:]
  -[CKChatController didDismissPreviewViewController:committing:]
  -[CKChatController __im_ff_commSafetyUIEnabled]
  -[CKChatController __im_ff_commSafetyUIEnabled]
  -[CKChatController contactPickerDidCancel:]
  -[CKChatController _chatItemForReplyingToChatItem:explicitlySelected:]
  -[CKChatController inlineReplyControllerRequestsDismissal:presentKeyboard:]
  -[CKChatController inlineReplyController:visibleGUIDsDidChange:]
  -[CKChatController showKeyboardForReply]
  -[CKChatController previewingContext:commitViewController:]
  -[CKChatController fullScreenBalloonViewController:balloonFrameForChatItem:]
  -[CKChatController _recipientHandle]
  -[CKChatController keyCommandPrint:]
  -[CKChatController keyCommandDeleteConversation:]
  -[CKChatController keyCommandClearTranscript:]
  -[CKChatController purgeAttachmentsForChat:]
  -[CKChatController nicknameBannerViewActionButtonMenu:]
  -[CKChatController reloadEntryViewIfNeeded]
  -[CKChatController _reloadMentionsData]
  -[CKChatController setIsShowingAcknowledgmentPicker:]


CKSentWithSiriViewController : UIViewController <UIScrollViewDelegate>
 @property  CKConversation *conversation
 @property  UIScrollView *scrollView
 @property  UIView *contentView
 @property  UILabel *contextDescriptionLabel
 @property  UIImageView *heroImageView
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UILabel *detailLabel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKSentWithSiriViewController setScrollView:]
  -[CKSentWithSiriViewController titleLabel]
  -[CKSentWithSiriViewController setSubtitleLabel:]
  -[CKSentWithSiriViewController setHeroImageView:]
  -[CKSentWithSiriViewController scrollView]
  -[CKSentWithSiriViewController .cxx_destruct]
  -[CKSentWithSiriViewController initWithConversation:]
  -[CKSentWithSiriViewController viewDidLoad]
  -[CKSentWithSiriViewController setTitleLabel:]
  -[CKSentWithSiriViewController contentView]
  -[CKSentWithSiriViewController canBecomeFirstResponder]
  -[CKSentWithSiriViewController contextDescriptionLabel]
  -[CKSentWithSiriViewController setContextDescriptionLabel:]
  -[CKSentWithSiriViewController heroImageView]
  -[CKSentWithSiriViewController viewDidAppear:]
  -[CKSentWithSiriViewController localizedStringWithLanguageCode:format:]
  -[CKSentWithSiriViewController scrollViewDidScroll:]
  -[CKSentWithSiriViewController subtitleLabel]
  -[CKSentWithSiriViewController setDetailLabel:]
  -[CKSentWithSiriViewController setConversation:]
  -[CKSentWithSiriViewController _titleLabelText]
  -[CKSentWithSiriViewController conversation]
  -[CKSentWithSiriViewController setContentView:]
  -[CKSentWithSiriViewController inputAccessoryViewController]
  -[CKSentWithSiriViewController detailLabel]


CKMessageStatusChatItem : CKChatItem
 @property  NSAttributedString *transcriptButtonText
 @property  BOOL buttonSizeLoaded
 @property  BOOL labelSizeLoaded
 @property  {CGSize=dd} buttonSize
 @property  {CGSize=dd} labelSize
 @property  {UIEdgeInsets=dddd} buttonTextAlignmentInsets
 @property  {UIEdgeInsets=dddd} labelTextAlignmentInsets
 @property  long long buttonType
 @property  BOOL statusAlignment
 @property  BOOL allowsEffectAutoPlayback
 @property  BOOL shouldHideDuringDarkFSM

  // class methods
  +[CKMessageStatusChatItem thePastDateFormatter]
  +[CKMessageStatusChatItem thisWeekRelativeDateFormatter]
  +[CKMessageStatusChatItem todayDateFormatter]
  +[CKMessageStatusChatItem createImageAsTextAttachment]

  // instance methods
  -[CKMessageStatusChatItem now]
  -[CKMessageStatusChatItem layoutType]
  -[CKMessageStatusChatItem buttonSize]
  -[CKMessageStatusChatItem unloadSize]
  -[CKMessageStatusChatItem statusType]
  -[CKMessageStatusChatItem transcriptOrientation]
  -[CKMessageStatusChatItem contentInsets]
  -[CKMessageStatusChatItem .cxx_destruct]
  -[CKMessageStatusChatItem buttonType]
  -[CKMessageStatusChatItem count]
  -[CKMessageStatusChatItem expireStatusType]
  -[CKMessageStatusChatItem wantsDrawerLayout]
  -[CKMessageStatusChatItem transcriptTextAlignmentInsets]
  -[CKMessageStatusChatItem buttonTextAlignmentInsets]
  -[CKMessageStatusChatItem statusAlignment]
  -[CKMessageStatusChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKMessageStatusChatItem loadLabelSizeThatFits:textAlignmentInsets:]
  -[CKMessageStatusChatItem loadButtonSizeThatFits:textAlignmentInsets:]
  -[CKMessageStatusChatItem loadTranscriptButtonText]
  -[CKMessageStatusChatItem allowsEffectAutoPlayback]
  -[CKMessageStatusChatItem effectsControlStatusTextForEffectStyleID:]
  -[CKMessageStatusChatItem labelSize]
  -[CKMessageStatusChatItem isFromMe]
  -[CKMessageStatusChatItem labelTextAlignmentInsets]
  -[CKMessageStatusChatItem shouldHideDuringDarkFSM]
  -[CKMessageStatusChatItem time]
  -[CKMessageStatusChatItem setTranscriptButtonText:]
  -[CKMessageStatusChatItem isButtonSizeLoaded]
  -[CKMessageStatusChatItem transcriptButtonText]
  -[CKMessageStatusChatItem setButtonSizeLoaded:]
  -[CKMessageStatusChatItem isLabelSizeLoaded]
  -[CKMessageStatusChatItem setLabelSizeLoaded:]
  -[CKMessageStatusChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKMessageStatusChatItem loadTranscriptText]
  -[CKMessageStatusChatItem size]
  -[CKMessageStatusChatItem cellClass]
  -[CKMessageStatusChatItem unloadTranscriptText]


CKAttachmentReplyPreviewBalloonView : CKColoredBalloonView
 @property  UILabel *titleLabel
 @property  CKMediaObject *mediaObject

  // instance methods
  -[CKAttachmentReplyPreviewBalloonView titleLabel]
  -[CKAttachmentReplyPreviewBalloonView setMediaObject:]
  -[CKAttachmentReplyPreviewBalloonView prepareForDisplay]
  -[CKAttachmentReplyPreviewBalloonView .cxx_destruct]
  -[CKAttachmentReplyPreviewBalloonView mediaObject]
  -[CKAttachmentReplyPreviewBalloonView setTitleLabel:]
  -[CKAttachmentReplyPreviewBalloonView configureForComposition:]
  -[CKAttachmentReplyPreviewBalloonView prepareForReuse]
  -[CKAttachmentReplyPreviewBalloonView configureForMessagePart:]
  -[CKAttachmentReplyPreviewBalloonView initWithFrame:]
  -[CKAttachmentReplyPreviewBalloonView attachmentTitleForMediaObject:]
  -[CKAttachmentReplyPreviewBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKAttachmentReplyPreviewBalloonView alignmentRectInsets]
  -[CKAttachmentReplyPreviewBalloonView configureForMediaObject:previewWidth:orientation:]


CKNavigationController : UINavigationController
  // instance methods
  -[CKNavigationController preferredFocusEnvironments]
  -[CKNavigationController childViewControllerForStatusBarStyle]
  -[CKNavigationController shouldAutorotate]


CKImageBalloonPluginDatasource : IMBalloonPluginDataSource
 @property  CKBalloonView *balloonView
 @property  CKMediaObject *mediaObject

  // instance methods
  -[CKImageBalloonPluginDatasource setMediaObject:]
  -[CKImageBalloonPluginDatasource .cxx_destruct]
  -[CKImageBalloonPluginDatasource mediaObject]
  -[CKImageBalloonPluginDatasource balloonView]
  -[CKImageBalloonPluginDatasource initWithPluginPayload:]
  -[CKImageBalloonPluginDatasource sizeThatFits:]
  -[CKImageBalloonPluginDatasource previewDidChange:]
  -[CKImageBalloonPluginDatasource setBalloonView:]
  -[CKImageBalloonPluginDatasource imageBalloon]


CKInlineReplyCollectionViewController : CKTranscriptCollectionViewController
 @property  NSDictionary *currentFrameMapForNextReload
 @property  NSDictionary *targetFrameMapForAnimateOut
 @property  BOOL animatingIn
 @property  BOOL animatingOut

  // class methods
  +[CKInlineReplyCollectionViewController chatItemsDidChangeNotification]

  // instance methods
  -[CKInlineReplyCollectionViewController isModal]
  -[CKInlineReplyCollectionViewController .cxx_destruct]
  -[CKInlineReplyCollectionViewController didMoveToParentViewController:]
  -[CKInlineReplyCollectionViewController imChatItems]
  -[CKInlineReplyCollectionViewController setScrollAnchor:]
  -[CKInlineReplyCollectionViewController transcriptBackgroundColor]
  -[CKInlineReplyCollectionViewController isInline]
  -[CKInlineReplyCollectionViewController isAnimatingIn]
  -[CKInlineReplyCollectionViewController viewDidAppearDeferredSetup]
  -[CKInlineReplyCollectionViewController initWithConversation:delegate:notifications:balloonMaxWidth:marginInsets:]
  -[CKInlineReplyCollectionViewController configureCell:forItemAtIndexPath:]
  -[CKInlineReplyCollectionViewController isAnimatingOut]
  -[CKInlineReplyCollectionViewController setAnimatingIn:]
  -[CKInlineReplyCollectionViewController _replyTranscriptBubbleFilterForUserInterfaceStyle:]
  -[CKInlineReplyCollectionViewController currentFrameMapForNextReload]
  -[CKInlineReplyCollectionViewController targetFrameMapForAnimateOut]
  -[CKInlineReplyCollectionViewController setCurrentFrameMapForNextReload:]
  -[CKInlineReplyCollectionViewController setTargetFrameMapForAnimateOut:]
  -[CKInlineReplyCollectionViewController setCollectionViewCurrentFrames:]
  -[CKInlineReplyCollectionViewController loadEarlierMessagesForConversation]
  -[CKInlineReplyCollectionViewController loadRecentMessagesForConversation]
  -[CKInlineReplyCollectionViewController overrideCurrentFrameMapForLayout:]
  -[CKInlineReplyCollectionViewController setAnimatingOut:]
  -[CKInlineReplyCollectionViewController _canUseOpaqueMask]
  -[CKInlineReplyCollectionViewController overrideTargetFrameMapForLayout:]
  -[CKInlineReplyCollectionViewController setCollectionViewTargetFrames:]


CKInlineStickerBalloonView : CKImageBalloonView
 @property  NSString *stickerAccessibilityDescription

  // instance methods
  -[CKInlineStickerBalloonView clearFilters]
  -[CKInlineStickerBalloonView setCanUseOpaqueMask:]
  -[CKInlineStickerBalloonView setTailMask:]
  -[CKInlineStickerBalloonView setOutlineMask:]
  -[CKInlineStickerBalloonView configureForMessagePart:]
  -[CKInlineStickerBalloonView addFilter:]
  -[CKInlineStickerBalloonView setHasTail:]


CKAppMenuCollectionViewCell : UICollectionViewCell
 @property  UILabel *titleLabel
 @property  UIImageView *imageView
 @property  UIView *selectionView
 @property  <CKAppMenuCollectionViewCellDelegate> *delegate

  // instance methods
  -[CKAppMenuCollectionViewCell selectionView]
  -[CKAppMenuCollectionViewCell titleLabel]
  -[CKAppMenuCollectionViewCell imageView]
  -[CKAppMenuCollectionViewCell .cxx_destruct]
  -[CKAppMenuCollectionViewCell handleTap:]
  -[CKAppMenuCollectionViewCell setTitleLabel:]
  -[CKAppMenuCollectionViewCell layoutSubviews]
  -[CKAppMenuCollectionViewCell setDelegate:]
  -[CKAppMenuCollectionViewCell setSelectionView:]
  -[CKAppMenuCollectionViewCell setSelected:]
  -[CKAppMenuCollectionViewCell initWithFrame:]
  -[CKAppMenuCollectionViewCell delegate]
  -[CKAppMenuCollectionViewCell didHoverOverCell:]
  -[CKAppMenuCollectionViewCell setImageView:]


CKSaveToPhotosActivity : UIActivity
 @property  CKMediaObject *mediaObject
 @property  UIViewController *presenterViewController

  // class methods
  +[CKSaveToPhotosActivity activityCategory]

  // instance methods
  -[CKSaveToPhotosActivity .cxx_destruct]
  -[CKSaveToPhotosActivity _systemImageName]
  -[CKSaveToPhotosActivity mediaObject]
  -[CKSaveToPhotosActivity activityType]
  -[CKSaveToPhotosActivity presenterViewController]
  -[CKSaveToPhotosActivity initWithMediaObject:presenterViewController:]
  -[CKSaveToPhotosActivity canPerformWithActivityItems:]
  -[CKSaveToPhotosActivity performActivity]
  -[CKSaveToPhotosActivity activityTitle]


CKRemoteItemForSending : NSObject <NSSecureCoding>
 @property  ^{CGImageBlockSet=} blockSet
 @property  NSObject<OS_dispatch_semaphore> *previewCreationSemaphore
 @property  NSURL *attachmentURL
 @property  NSString *attachmentDescription
 @property  ^{__IOSurface=} previewImage
 @property  BOOL previewIsFullyRealizedByChatKit
 @property  NSURL *appendedVideoURL
 @property  NSURL *appendedBundleURL
 @property  NSURL *appendedRichLinkURL
 @property  NSData *appendedRichLinkData
 @property  MSMessage *appendedMessage

  // class methods
  +[CKRemoteItemForSending supportsSecureCoding]
  +[CKRemoteItemForSending hasAppendedVideo:]
  +[CKRemoteItemForSending previewQueue]

  // instance methods
  -[CKRemoteItemForSending initWithCoder:]
  -[CKRemoteItemForSending .cxx_destruct]
  -[CKRemoteItemForSending blockSet]
  -[CKRemoteItemForSending isAttachmentTooLarge:]
  -[CKRemoteItemForSending _setPreviewUIImage:]
  -[CKRemoteItemForSending beginPreviewCreation]
  -[CKRemoteItemForSending initWithAttachmentURL:description:previewImage:blockOnPreviewCreation:]
  -[CKRemoteItemForSending attachmentURL]
  -[CKRemoteItemForSending attachmentDescription]
  -[CKRemoteItemForSending setPreviewImage:]
  -[CKRemoteItemForSending initWithMSMessage:]
  -[CKRemoteItemForSending waitForPreviewGenerationIfNecessary]
  -[CKRemoteItemForSending initWithAttachmentURL:description:blockOnPreviewCreation:]
  -[CKRemoteItemForSending initWithRichLinkWithURL:data:]
  -[CKRemoteItemForSending previewUIImage]
  -[CKRemoteItemForSending setAttachmentURL:]
  -[CKRemoteItemForSending setAttachmentDescription:]
  -[CKRemoteItemForSending previewIsFullyRealizedByChatKit]
  -[CKRemoteItemForSending appendedVideoURL]
  -[CKRemoteItemForSending appendedBundleURL]
  -[CKRemoteItemForSending setPreviewIsFullyRealizedByChatKit:]
  -[CKRemoteItemForSending setAppendedVideoURL:]
  -[CKRemoteItemForSending setAppendedBundleURL:]
  -[CKRemoteItemForSending appendedRichLinkURL]
  -[CKRemoteItemForSending setAppendedRichLinkURL:]
  -[CKRemoteItemForSending appendedRichLinkData]
  -[CKRemoteItemForSending setAppendedRichLinkData:]
  -[CKRemoteItemForSending appendedMessage]
  -[CKRemoteItemForSending setAppendedMessage:]
  -[CKRemoteItemForSending previewCreationSemaphore]
  -[CKRemoteItemForSending setPreviewCreationSemaphore:]
  -[CKRemoteItemForSending previewImage]
  -[CKRemoteItemForSending setBlockSet:]
  -[CKRemoteItemForSending dealloc]
  -[CKRemoteItemForSending encodeWithCoder:]


CKNicknameUpdatesCollectionView : UICollectionView
 @property  BOOL suppressDatasourceUpdates

  // instance methods
  -[CKNicknameUpdatesCollectionView setDataSource:]
  -[CKNicknameUpdatesCollectionView suppressDatasourceUpdates]
  -[CKNicknameUpdatesCollectionView setSuppressDatasourceUpdates:]


CKNicknameUpdatesCollectionViewCell : UICollectionViewCell <CKNicknameUpdateInterface>
 @property  <CKNicknameUpdatesCollectionViewCellDelegate> *delegate
 @property  CKAvatarView *avatarView
 @property  UIImageView *imageView
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UIButton *updateButton
 @property  UIButton *ignoreButton
 @property  UIView *topSeparator
 @property  UIView *bottomSeparator
 @property  NSLayoutConstraint *bottomSeparatorLeadingConstraint
 @property  BOOL needsContextualMenu
 @property  CKNicknameUpdate *nicknameUpdate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKNicknameUpdatesCollectionViewCell recalculateUsesStackedButtonLayout]
  +[CKNicknameUpdatesCollectionViewCell setUsesStackedButtonLayout:]
  +[CKNicknameUpdatesCollectionViewCell usesStackedButtonLayout]
  +[CKNicknameUpdatesCollectionViewCell setRecalculateUsesStackedButtonLayout:]
  +[CKNicknameUpdatesCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKNicknameUpdatesCollectionViewCell titleLabel]
  -[CKNicknameUpdatesCollectionViewCell setSubtitleLabel:]
  -[CKNicknameUpdatesCollectionViewCell imageView]
  -[CKNicknameUpdatesCollectionViewCell setAvatarView:]
  -[CKNicknameUpdatesCollectionViewCell setIgnoreButton:]
  -[CKNicknameUpdatesCollectionViewCell .cxx_destruct]
  -[CKNicknameUpdatesCollectionViewCell avatarView]
  -[CKNicknameUpdatesCollectionViewCell setTitleLabel:]
  -[CKNicknameUpdatesCollectionViewCell setDelegate:]
  -[CKNicknameUpdatesCollectionViewCell bottomSeparator]
  -[CKNicknameUpdatesCollectionViewCell setBottomSeparator:]
  -[CKNicknameUpdatesCollectionViewCell setTopSeparator:]
  -[CKNicknameUpdatesCollectionViewCell _ignoreButtonTapped:]
  -[CKNicknameUpdatesCollectionViewCell topSeparator]
  -[CKNicknameUpdatesCollectionViewCell subtitleLabel]
  -[CKNicknameUpdatesCollectionViewCell _updateButtonTapped:]
  -[CKNicknameUpdatesCollectionViewCell setNicknameUpdate:]
  -[CKNicknameUpdatesCollectionViewCell nicknameUpdate]
  -[CKNicknameUpdatesCollectionViewCell setBottomSeparatorLeadingConstraint:]
  -[CKNicknameUpdatesCollectionViewCell updateSeparatorsForOrder:]
  -[CKNicknameUpdatesCollectionViewCell setNeedsContextualMenu:]
  -[CKNicknameUpdatesCollectionViewCell initWithFrame:]
  -[CKNicknameUpdatesCollectionViewCell bottomSeparatorLeadingConstraint]
  -[CKNicknameUpdatesCollectionViewCell configureWithNicknameUpdate:order:]
  -[CKNicknameUpdatesCollectionViewCell needsContextualMenu]
  -[CKNicknameUpdatesCollectionViewCell delegate]
  -[CKNicknameUpdatesCollectionViewCell setImageView:]
  -[CKNicknameUpdatesCollectionViewCell updateButton]
  -[CKNicknameUpdatesCollectionViewCell ignoreButton]
  -[CKNicknameUpdatesCollectionViewCell __im_ff_uiConsistencyEnabled]
  -[CKNicknameUpdatesCollectionViewCell updateInterfaceSelectedAction:]
  -[CKNicknameUpdatesCollectionViewCell setUpdateButton:]


CKNicknameUpdatesViewController : UIViewController <UICollectionViewDelegate, CKNicknameUpdatesCollectionViewCellDelegate>
 @property  NSArray *nicknameUpdates
 @property  CKNicknameUpdatesCollectionView *collectionView
 @property  UICollectionViewDiffableDataSource *dataSource
 @property  UICollectionViewCompositionalLayout *collectionViewLayout
 @property  <CKNicknameUpdatesViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKNicknameUpdatesViewController setDataSource:]
  -[CKNicknameUpdatesViewController .cxx_destruct]
  -[CKNicknameUpdatesViewController collectionViewLayout]
  -[CKNicknameUpdatesViewController viewDidLoad]
  -[CKNicknameUpdatesViewController canBecomeFirstResponder]
  -[CKNicknameUpdatesViewController setDelegate:]
  -[CKNicknameUpdatesViewController viewDidAppear:]
  -[CKNicknameUpdatesViewController dataSource]
  -[CKNicknameUpdatesViewController collectionView]
  -[CKNicknameUpdatesViewController setCollectionView:]
  -[CKNicknameUpdatesViewController setCollectionViewLayout:]
  -[CKNicknameUpdatesViewController viewDidLayoutSubviews]
  -[CKNicknameUpdatesViewController initWithDelegate:]
  -[CKNicknameUpdatesViewController updateCell:selectedAction:sourceView:]
  -[CKNicknameUpdatesViewController _doneButtonTapped:]
  -[CKNicknameUpdatesViewController cellForItemInCollectionView:atIndexPath:withIdentifier:]
  -[CKNicknameUpdatesViewController _nicknameStateChanged:]
  -[CKNicknameUpdatesViewController delegate]
  -[CKNicknameUpdatesViewController cellOrderForIndexPath:]
  -[CKNicknameUpdatesViewController dealloc]
  -[CKNicknameUpdatesViewController updatePreferredContentSize]
  -[CKNicknameUpdatesViewController reloadData]
  -[CKNicknameUpdatesViewController setNicknameUpdates:]
  -[CKNicknameUpdatesViewController nicknameUpdates]


CKMessageAcknowledgmentPickerBarItemView : UIView
 @property  UIButton *itemButton
 @property  BOOL displaySelected
 @property  <CKMessageAcknowledgmentPickerBarItemViewDelegate> *delegate
 @property  BOOL selected
 @property  CKAcknowledgmentGlyphView *acknowledgmentGlyphView
 @property  CKMessageAcknowledgmentDraftDescriptor *draft
 @property  long long messageAcknowledgmentType

  // instance methods
  -[CKMessageAcknowledgmentPickerBarItemView draft]
  -[CKMessageAcknowledgmentPickerBarItemView itemButton]
  -[CKMessageAcknowledgmentPickerBarItemView .cxx_destruct]
  -[CKMessageAcknowledgmentPickerBarItemView layoutSubviews]
  -[CKMessageAcknowledgmentPickerBarItemView setDelegate:]
  -[CKMessageAcknowledgmentPickerBarItemView setSelected:]
  -[CKMessageAcknowledgmentPickerBarItemView isSelected]
  -[CKMessageAcknowledgmentPickerBarItemView initWithFrame:]
  -[CKMessageAcknowledgmentPickerBarItemView delegate]
  -[CKMessageAcknowledgmentPickerBarItemView messageAcknowledgmentType]
  -[CKMessageAcknowledgmentPickerBarItemView itemButtonTapped:]
  -[CKMessageAcknowledgmentPickerBarItemView setItemButton:]
  -[CKMessageAcknowledgmentPickerBarItemView displaySelected]
  -[CKMessageAcknowledgmentPickerBarItemView acknowledgmentGlyphView]
  -[CKMessageAcknowledgmentPickerBarItemView configureWithMessageAcknowledgmentDescriptor:initiallySelected:]


CKNanoCryptographer : NSObject
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  NSData *deviceSalt
 @property  NSString *cachedRecipientName
 @property  NSString *cachedRecipientDigest

  // class methods
  +[CKNanoCryptographer sharedCryptographer]

  // instance methods
  -[CKNanoCryptographer cachedRecipientDigest]
  -[CKNanoCryptographer cachedRecipientName]
  -[CKNanoCryptographer .cxx_destruct]
  -[CKNanoCryptographer deviceSalt]
  -[CKNanoCryptographer init]
  -[CKNanoCryptographer dispatchQueue]
  -[CKNanoCryptographer stringDigestForName:]
  -[CKNanoCryptographer setCachedRecipientDigest:]
  -[CKNanoCryptographer setCachedRecipientName:]
  -[CKNanoCryptographer prewarmDeviceSalt]


CKLinkSearchResultCell : CKEditableSearchResultCell <CKSearchResultCell>
 @property  NSString *resultIdentifier
 @property  LPLinkView *linkView
 @property  LPLinkMetadata *linkMetadata
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  BOOL _ck_editing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKLinkSearchResultCell reuseIdentifier]

  // instance methods
  -[CKLinkSearchResultCell .cxx_destruct]
  -[CKLinkSearchResultCell linkView]
  -[CKLinkSearchResultCell layoutSubviews]
  -[CKLinkSearchResultCell marginInsets]
  -[CKLinkSearchResultCell prepareForReuse]
  -[CKLinkSearchResultCell initWithFrame:]
  -[CKLinkSearchResultCell setMarginInsets:]
  -[CKLinkSearchResultCell setLinkView:]
  -[CKLinkSearchResultCell didMoveToWindow]
  -[CKLinkSearchResultCell linkMetadata]
  -[CKLinkSearchResultCell setLinkMetadata:]
  -[CKLinkSearchResultCell _metadataGenerated:]
  -[CKLinkSearchResultCell setResultIdentifier:]
  -[CKLinkSearchResultCell setLinkMetadata:forSearchResult:]
  -[CKLinkSearchResultCell resultIdentifier]
  -[CKLinkSearchResultCell configureWithQueryResult:searchText:mode:]
  -[CKLinkSearchResultCell refreshForSearchTextIfNeeded:]


CKPluginPlaybackManager : NSObject
 @property  NSMutableArray *_pluginItems
 @property  BOOL isPlayingBack
 @property  <CKPluginPlaybackManagerDelegate> *delegate

  // instance methods
  -[CKPluginPlaybackManager _cleanup]
  -[CKPluginPlaybackManager stopPlayback]
  -[CKPluginPlaybackManager .cxx_destruct]
  -[CKPluginPlaybackManager setDelegate:]
  -[CKPluginPlaybackManager delegate]
  -[CKPluginPlaybackManager dealloc]
  -[CKPluginPlaybackManager _setPluginItems:]
  -[CKPluginPlaybackManager _setPlayingBack:]
  -[CKPluginPlaybackManager _pluginItems]
  -[CKPluginPlaybackManager startPlayback]
  -[CKPluginPlaybackManager isPlayingBack]
  -[CKPluginPlaybackManager initWithPluginItems:]
  -[CKPluginPlaybackManager addPluginItem:]


CKEditableSearchResultCell : UICollectionViewCell
 @property  BOOL _ck_editing
 @property  UIImageView *checkmarkView
 @property  UIImageView *imageView
 @property  UIImageView *selectionOverlay

  // instance methods
  -[CKEditableSearchResultCell imageView]
  -[CKEditableSearchResultCell .cxx_destruct]
  -[CKEditableSearchResultCell layoutSubviews]
  -[CKEditableSearchResultCell checkmarkView]
  -[CKEditableSearchResultCell setSelected:]
  -[CKEditableSearchResultCell setCheckmarkView:]
  -[CKEditableSearchResultCell prepareForReuse]
  -[CKEditableSearchResultCell _ck_isEditing]
  -[CKEditableSearchResultCell setImageView:]
  -[CKEditableSearchResultCell _ck_setEditing:]
  -[CKEditableSearchResultCell setSelectionOverlay:]
  -[CKEditableSearchResultCell __im_ff_systemImageAdoptionEnabled]
  -[CKEditableSearchResultCell selectionOverlay]


CKImportStatusManager : NSObject <PXAssetImportStatusManager>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKImportStatusManager importStateForAsset:]
  -[CKImportStatusManager addAssetImportStatusObserver:]
  -[CKImportStatusManager removeAssetImportStatusObserver:]


_CKAcknowledgmentTally : NSObject
 @property  long long type
 @property  NSArray *senders
 @property  NSArray *contacts

  // instance methods
  -[_CKAcknowledgmentTally setType:]
  -[_CKAcknowledgmentTally .cxx_destruct]
  -[_CKAcknowledgmentTally senders]
  -[_CKAcknowledgmentTally setSenders:]
  -[_CKAcknowledgmentTally type]
  -[_CKAcknowledgmentTally contacts]
  -[_CKAcknowledgmentTally setContacts:]
  -[_CKAcknowledgmentTally initWithType:senders:]


_CKAcknowledgmentVoteCountView : UIView
 @property  UILabel *voteCountLabel
 @property  UIImageView *ackIconImageView

  // instance methods
  -[_CKAcknowledgmentVoteCountView configureWithAcknowledgmentTally:]
  -[_CKAcknowledgmentVoteCountView .cxx_destruct]
  -[_CKAcknowledgmentVoteCountView layoutSubviews]
  -[_CKAcknowledgmentVoteCountView sizeThatFits:]
  -[_CKAcknowledgmentVoteCountView initWithFrame:]
  -[_CKAcknowledgmentVoteCountView voteCountLabel]
  -[_CKAcknowledgmentVoteCountView setVoteCountLabel:]
  -[_CKAcknowledgmentVoteCountView setAckIconImageView:]
  -[_CKAcknowledgmentVoteCountView ackIconImageView]


CKGroupAcknowledgmentVotingViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource, CKAcknowledgmentVotingViewAnimatorDelegate>
 @property  NSArray *tallies
 @property  CKAggregateAcknowledgmentChatItem *chatItem
 @property  UICollectionView *collectionView
 @property  CKGroupAcknowledgmentVotingLayout *layout
 @property  CKAcknowledgmentVotingViewAnimator *animator
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  UIButton *collapseButton
 @property  _CKAcknowledgmentVoteCountView *currentlyExpandedVoteCountView
 @property  NSArray *sortedAnimatorModelItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKGroupAcknowledgmentVotingViewController setAnimator:]
  -[CKGroupAcknowledgmentVotingViewController collectionView:cellForItemAtIndexPath:]
  -[CKGroupAcknowledgmentVotingViewController collectionView:numberOfItemsInSection:]
  -[CKGroupAcknowledgmentVotingViewController animator]
  -[CKGroupAcknowledgmentVotingViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[CKGroupAcknowledgmentVotingViewController setTapGestureRecognizer:]
  -[CKGroupAcknowledgmentVotingViewController collapseButton]
  -[CKGroupAcknowledgmentVotingViewController numberOfSectionsInCollectionView:]
  -[CKGroupAcknowledgmentVotingViewController tallies]
  -[CKGroupAcknowledgmentVotingViewController .cxx_destruct]
  -[CKGroupAcknowledgmentVotingViewController viewDidLoad]
  -[CKGroupAcknowledgmentVotingViewController viewDidAppear:]
  -[CKGroupAcknowledgmentVotingViewController collectionView]
  -[CKGroupAcknowledgmentVotingViewController tapGestureRecognizer]
  -[CKGroupAcknowledgmentVotingViewController setCollectionView:]
  -[CKGroupAcknowledgmentVotingViewController chatItem]
  -[CKGroupAcknowledgmentVotingViewController setChatItem:]
  -[CKGroupAcknowledgmentVotingViewController _setupTallies]
  -[CKGroupAcknowledgmentVotingViewController _handleCollapseButton:]
  -[CKGroupAcknowledgmentVotingViewController setSortedAnimatorModelItems:]
  -[CKGroupAcknowledgmentVotingViewController sortedAnimatorModelItems]
  -[CKGroupAcknowledgmentVotingViewController currentlyExpandedVoteCountView]
  -[CKGroupAcknowledgmentVotingViewController _contactNameSupplementaryViewAtIndexPath:]
  -[CKGroupAcknowledgmentVotingViewController _ackIconSupplementaryViewAtIndexPath:]
  -[CKGroupAcknowledgmentVotingViewController _voteCountSupplementaryViewAtIndexPath:]
  -[CKGroupAcknowledgmentVotingViewController _collapseCollectionView]
  -[CKGroupAcknowledgmentVotingViewController _animateToLayout:aroundSection:]
  -[CKGroupAcknowledgmentVotingViewController _layoutCurrentlyExpandedVoteCountView]
  -[CKGroupAcknowledgmentVotingViewController _expandCollectionViewExpandedViewAroundSection:]
  -[CKGroupAcknowledgmentVotingViewController initWithMessagePartChatItem:]
  -[CKGroupAcknowledgmentVotingViewController acknowledgmentVotingViewAnimatorDidFinishAnimation:]
  -[CKGroupAcknowledgmentVotingViewController hitTest:withGestureRecognizer:]
  -[CKGroupAcknowledgmentVotingViewController setCurrentlyExpandedVoteCountView:]
  -[CKGroupAcknowledgmentVotingViewController _layoutCollapseButton]
  -[CKGroupAcknowledgmentVotingViewController setTallies:]
  -[CKGroupAcknowledgmentVotingViewController setCollapseButton:]
  -[CKGroupAcknowledgmentVotingViewController viewDidLayoutSubviews]
  -[CKGroupAcknowledgmentVotingViewController viewWillAppear:]
  -[CKGroupAcknowledgmentVotingViewController dealloc]
  -[CKGroupAcknowledgmentVotingViewController tapGestureRecognized:]
  -[CKGroupAcknowledgmentVotingViewController setLayout:]
  -[CKGroupAcknowledgmentVotingViewController layout]


CKBlackholeTranscriptViewController : UITableViewController <UITableViewDelegate, UITableViewDataSource>
 @property  CKConversation *conversation
 @property  NSMutableArray *messages
 @property  UITextView *headerTextView
 @property  BOOL isShowingLockoutView
 @property  STLockoutViewController *lockoutViewController
 @property  STConversationContext *conversationContext
 @property  UIView *lockoutView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBlackholeTranscriptViewController setMessages:]
  -[CKBlackholeTranscriptViewController numberOfSectionsInTableView:]
  -[CKBlackholeTranscriptViewController _conversationList]
  -[CKBlackholeTranscriptViewController tableView:numberOfRowsInSection:]
  -[CKBlackholeTranscriptViewController tableView:heightForRowAtIndexPath:]
  -[CKBlackholeTranscriptViewController .cxx_destruct]
  -[CKBlackholeTranscriptViewController initWithConversation:]
  -[CKBlackholeTranscriptViewController tableView:didSelectRowAtIndexPath:]
  -[CKBlackholeTranscriptViewController viewDidLoad]
  -[CKBlackholeTranscriptViewController tableView:cellForRowAtIndexPath:]
  -[CKBlackholeTranscriptViewController messages]
  -[CKBlackholeTranscriptViewController viewWillDisappear:]
  -[CKBlackholeTranscriptViewController viewDidLayoutSubviews]
  -[CKBlackholeTranscriptViewController viewWillAppear:]
  -[CKBlackholeTranscriptViewController generateHeader]
  -[CKBlackholeTranscriptViewController lockoutView]
  -[CKBlackholeTranscriptViewController setConversation:]
  -[CKBlackholeTranscriptViewController _updateTranscriptHistory]
  -[CKBlackholeTranscriptViewController setHeaderTextView:]
  -[CKBlackholeTranscriptViewController _restoreConversation]
  -[CKBlackholeTranscriptViewController _confirmDeleteConversation:view:withCompletionHandler:]
  -[CKBlackholeTranscriptViewController _alertTitleForDelete]
  -[CKBlackholeTranscriptViewController _deleteConversation:withCompletionHandler:]
  -[CKBlackholeTranscriptViewController dealloc]
  -[CKBlackholeTranscriptViewController headerTextView]
  -[CKBlackholeTranscriptViewController _openRestoredChatInMessages]
  -[CKBlackholeTranscriptViewController setLockoutView:]
  -[CKBlackholeTranscriptViewController conversation]
  -[CKBlackholeTranscriptViewController updateScreenTimeShieldIfNeededForChat:]
  -[CKBlackholeTranscriptViewController isChatAllowedByScreenTime:]
  -[CKBlackholeTranscriptViewController removeLockoutControllerIfNeeded]
  -[CKBlackholeTranscriptViewController showScreenTimeShieldIfNeeded]
  -[CKBlackholeTranscriptViewController chatAllowedByScreenTimeChanged:]
  -[CKBlackholeTranscriptViewController isShowingLockoutView]
  -[CKBlackholeTranscriptViewController lockoutViewController]
  -[CKBlackholeTranscriptViewController setLockoutViewController:]
  -[CKBlackholeTranscriptViewController setIsShowingLockoutView:]
  -[CKBlackholeTranscriptViewController setConversationContext:]
  -[CKBlackholeTranscriptViewController shouldPresentBlockingDowntimeViewController]
  -[CKBlackholeTranscriptViewController conversationContext]
  -[CKBlackholeTranscriptViewController _handleIDsForCurrentConversation]
  -[CKBlackholeTranscriptViewController layoutLockoutView]
  -[CKBlackholeTranscriptViewController tableView:estimatedHeightForRowAtIndexPath:]


CKLocationAttachmentItem : CKAttachmentItem
 @property  {CLLocationCoordinate2D=dd} coordinate
 @property  NSString *locationTitle

  // class methods
  +[CKLocationAttachmentItem UTITypes]

  // instance methods
  -[CKLocationAttachmentItem setCoordinate:]
  -[CKLocationAttachmentItem initWithFileURL:size:transferGUID:guid:createdDate:]
  -[CKLocationAttachmentItem coordinate]
  -[CKLocationAttachmentItem .cxx_destruct]
  -[CKLocationAttachmentItem generatePreviewWithCompletion:]
  -[CKLocationAttachmentItem setLocationTitle:]
  -[CKLocationAttachmentItem _generateThumbnailFillToSize:]
  -[CKLocationAttachmentItem vCardURLProperties]
  -[CKLocationAttachmentItem isDroppedPin]
  -[CKLocationAttachmentItem locationTitle]


CKConversationListCell : UITableViewCell <CKConversationListCell>
 @property  NSDate *searchMessageDate
 @property  NSString *searchMessageGUID
 @property  NSString *searchSummaryText
 @property  BOOL verified
 @property  BOOL shouldLabelsBeHighlighted
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} containerBounds
 @property  BOOL freezeSummaryText
 @property  CKConversation *conversation
 @property  BOOL _editingPins
 @property  CKAvatarView *avatarView
 @property  CKLabel *fromLabel
 @property  BOOL muted
 @property  BOOL shouldHidePreviewSummary
 @property  NSObject<CKConversationListCellDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKConversationListCell cellHeightForDisplayScale:]
  +[CKConversationListCell identifierForConversation:]

  // instance methods
  -[CKConversationListCell _contentSizeCategoryDidChange:]
  -[CKConversationListCell setMuted:]
  -[CKConversationListCell isMuted]
  -[CKConversationListCell setSelected:animated:]
  -[CKConversationListCell setEditing:animated:]
  -[CKConversationListCell setSearchMessageGUID:]
  -[CKConversationListCell setSearchMessageDate:]
  -[CKConversationListCell setSearchSummaryText:]
  -[CKConversationListCell summaryLabel]
  -[CKConversationListCell _performBlock:animated:]
  -[CKConversationListCell updateForEditing:]
  -[CKConversationListCell unreadIndicatorImageForVisibility:withMuteState:]
  -[CKConversationListCell .cxx_destruct]
  -[CKConversationListCell avatarView]
  -[CKConversationListCell unreadIndicatorColorForVisibility:withMuteState:]
  -[CKConversationListCell updateUnreadIndicatorWithImage:tintColor:]
  -[CKConversationListCell searchMessageGUID]
  -[CKConversationListCell searchSummaryText]
  -[CKConversationListCell containerBounds]
  -[CKConversationListCell fromLabel]
  -[CKConversationListCell updateWithForwardedConfigurationState:]
  -[CKConversationListCell summaryAttributedTextForBlockedConversationWithIcon:]
  -[CKConversationListCell lastMessageIsTypingIndicator]
  -[CKConversationListCell setShouldLabelsBeHighlighted:]
  -[CKConversationListCell setFreezeSummaryText:]
  -[CKConversationListCell _editingPins]
  -[CKConversationListCell set_editingPins:]
  -[CKConversationListCell setDelegate:]
  -[CKConversationListCell dateLabel]
  -[CKConversationListCell updateWithSearchResult:]
  -[CKConversationListCell updateContentsForConversation:]
  -[CKConversationListCell verified]
  -[CKConversationListCell setVerified:]
  -[CKConversationListCell sizeThatFits:]
  -[CKConversationListCell prepareForReuse]
  -[CKConversationListCell unreadMessageCount]
  -[CKConversationListCell delegate]
  -[CKConversationListCell setConversation:]
  -[CKConversationListCell initWithStyle:reuseIdentifier:]
  -[CKConversationListCell didHoverOverCell:]
  -[CKConversationListCell dealloc]
  -[CKConversationListCell conversation]
  -[CKConversationListCell setEditingPins:animated:]
  -[CKConversationListCell deleteButtonTapped]
  -[CKConversationListCell summaryLabelTextColor]
  -[CKConversationListCell updateLabelTextColors]
  -[CKConversationListCell _increaseContrastDidChange:]
  -[CKConversationListCell updateMuteIndicatorColor]
  -[CKConversationListCell updateUnreadIndicatorForCurrentConversation]
  -[CKConversationListCell shouldLabelsBeHighlighted]
  -[CKConversationListCell updateVerifiedCheckmarkForBusiness]
  -[CKConversationListCell setContainerBounds:]
  -[CKConversationListCell updateSummaryTextForConversation:fastPreview:]
  -[CKConversationListCell setShouldHidePreviewSummary:]
  -[CKConversationListCell increaseContrastDidChange]
  -[CKConversationListCell updateContentsForConversation:fastPreview:]
  -[CKConversationListCell updateFromLabelWithText:]
  -[CKConversationListCell searchMessageDate]
  -[CKConversationListCell freezeSummaryText]
  -[CKConversationListCell updateBlockedSummaryLabelIfNeeded]
  -[CKConversationListCell contentSizeCategoryDidChange]
  -[CKConversationListCell _makeSummaryAttributedStringWithText:multiwayConversation:]
  -[CKConversationListCell shouldHidePreviewSummary]
  -[CKConversationListCell showingEditControl]


CKComposeNavbarManagerContentView : UIView
 @property  CKNavigationBarCanvasView *canvasView

  // instance methods
  -[CKComposeNavbarManagerContentView canvasView]
  -[CKComposeNavbarManagerContentView .cxx_destruct]
  -[CKComposeNavbarManagerContentView layoutSubviews]
  -[CKComposeNavbarManagerContentView sizeThatFits:]
  -[CKComposeNavbarManagerContentView setCanvasView:]


CKComposeNavbarManager : NSObject
 @property  CKComposeNavbarManagerContentView *composeContentView
 @property  CKComposeNavbarCanvasViewController *defaultNavbarCanvasViewController
 @property  CKNavbarCanvasViewController *avatarNavbarCanvasViewController
 @property  UIView *contentView
 @property  UIButton *cancelButton
 @property  UIView *customStatusBackgroundView

  // instance methods
  -[CKComposeNavbarManager cancelButton]
  -[CKComposeNavbarManager .cxx_destruct]
  -[CKComposeNavbarManager contentView]
  -[CKComposeNavbarManager setComposeContentView:]
  -[CKComposeNavbarManager defaultNavbarCanvasViewController]
  -[CKComposeNavbarManager updateContentsForConversation:]
  -[CKComposeNavbarManager _setupDefaultNavbarCanvasViewControllerForBusinessChat:]
  -[CKComposeNavbarManager composeContentView]
  -[CKComposeNavbarManager customStatusBackgroundView]
  -[CKComposeNavbarManager setDefaultNavbarCanvasViewController:]
  -[CKComposeNavbarManager setAvatarNavbarCanvasViewController:]
  -[CKComposeNavbarManager _setupAvatarNavBarViewControllerWithConversation:shouldShowBackButtonView:]
  -[CKComposeNavbarManager avatarNavbarCanvasViewController]
  -[CKComposeNavbarManager initForBusinessChat:]
  -[CKComposeNavbarManager setCanvasViewControllerDelegate:]
  -[CKComposeNavbarManager commitTransitionAnimationWithConversation:shouldShowBackButtonView:]
  -[CKComposeNavbarManager updateTitle:animated:]
  -[CKComposeNavbarManager dealloc]


CKStarkConversationController : NSObject <CPInterfaceControllerDelegate>
 @property  CPInterfaceController *interfaceController
 @property  CPListTemplate *conversationListTemplate
 @property  NSDateFormatter *dateFormatter
 @property  NSDateFormatter *timeFormatter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKStarkConversationController dateFormatter]
  -[CKStarkConversationController setDateFormatter:]
  -[CKStarkConversationController .cxx_destruct]
  -[CKStarkConversationController _resortAndReloadData]
  -[CKStarkConversationController conversationListDidChange:]
  -[CKStarkConversationController setTimeFormatter:]
  -[CKStarkConversationController conversationListTemplate]
  -[CKStarkConversationController templateWillAppear:animated:]
  -[CKStarkConversationController initWithInterfaceController:]
  -[CKStarkConversationController interfaceController]
  -[CKStarkConversationController setInterfaceController:]
  -[CKStarkConversationController setConversationListTemplate:]
  -[CKStarkConversationController timeFormatter]


CKAggregateAcknowledgmentBalloonView : CKAcknowledgmentBalloonView
 @property  UIView<CKGradientReferenceView> *gradientReferenceView
 @property  BOOL invertTailDirection
 @property  BOOL gradientColor
 @property  BOOL solidColor

  // class methods
  +[CKAggregateAcknowledgmentBalloonView _middleBubbleInvertedTailSquareImageWithTraitCollection:]
  +[CKAggregateAcknowledgmentBalloonView _middleBubbleSquareImageWithTraitCollection:]
  +[CKAggregateAcknowledgmentBalloonView _topBubbleInvertedTailSquareImageWithTraitCollection:]
  +[CKAggregateAcknowledgmentBalloonView _topBubbleSquareImageWithTraitCollection:]

  // instance methods
  -[CKAggregateAcknowledgmentBalloonView traitCollectionDidChange:]
  -[CKAggregateAcknowledgmentBalloonView configureForAggregateAcknowledgmentChatItem:]
  -[CKAggregateAcknowledgmentBalloonView prepareForDisplay]
  -[CKAggregateAcknowledgmentBalloonView .cxx_destruct]
  -[CKAggregateAcknowledgmentBalloonView layoutSubviews]
  -[CKAggregateAcknowledgmentBalloonView solidColor]
  -[CKAggregateAcknowledgmentBalloonView prepareForReuse]
  -[CKAggregateAcknowledgmentBalloonView gradientReferenceView]
  -[CKAggregateAcknowledgmentBalloonView setInvertTailDirection:]
  -[CKAggregateAcknowledgmentBalloonView invertTailDirection]
  -[CKAggregateAcknowledgmentBalloonView initWithFrame:]
  -[CKAggregateAcknowledgmentBalloonView setGradientColor:]
  -[CKAggregateAcknowledgmentBalloonView setSolidColor:]
  -[CKAggregateAcknowledgmentBalloonView gradientColor]
  -[CKAggregateAcknowledgmentBalloonView setGradientReferenceView:]


CKAggregateAcknowledgmentGradientBalloonView : CKAggregateAcknowledgmentBalloonView

CKFullScreenEffectManager : NSObject <CKFullScreenEffectDelegate>
 @property  CKFullScreenEffect *currentEffect
 @property  NSMutableArray *effectQueue
 @property  NSTimer *effectDurationTimer
 @property  CKScheduledUpdater *triggerUpdater
 @property  NSObject<CKFullScreenEffectManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKFullScreenEffectManager idleDurationAfterEffectWithIdentifier:]
  +[CKFullScreenEffectManager localizedMaskStringForEffectWithIdentifier:]
  +[CKFullScreenEffectManager delayBeforeEffectWithIdentifier:]

  // instance methods
  -[CKFullScreenEffectManager currentEffect]
  -[CKFullScreenEffectManager setCurrentEffect:]
  -[CKFullScreenEffectManager localizedPickerTitleForEffectWithIdentifier:]
  -[CKFullScreenEffectManager startFullscreenEffectForChatItem:language:]
  -[CKFullScreenEffectManager .cxx_destruct]
  -[CKFullScreenEffectManager setDelegate:]
  -[CKFullScreenEffectManager init]
  -[CKFullScreenEffectManager beginHoldingUpdatesForKey:]
  -[CKFullScreenEffectManager endHoldingUpdatesForKey:]
  -[CKFullScreenEffectManager delegate]
  -[CKFullScreenEffectManager effectQueue]
  -[CKFullScreenEffectManager dealloc]
  -[CKFullScreenEffectManager triggerNextEffect]
  -[CKFullScreenEffectManager setTriggerUpdater:]
  -[CKFullScreenEffectManager fullscreenEffectMap]
  -[CKFullScreenEffectManager effectForIdentifier:]
  -[CKFullScreenEffectManager setEffectQueue:]
  -[CKFullScreenEffectManager triggerUpdater]
  -[CKFullScreenEffectManager effectIdentifiers]
  -[CKFullScreenEffectManager effectDurationTimer]
  -[CKFullScreenEffectManager stopFullscreenEffect]
  -[CKFullScreenEffectManager setEffectDurationTimer:]
  -[CKFullScreenEffectManager didReceiveMemoryWarning]
  -[CKFullScreenEffectManager fullScreenEffectDidPrepareSoundEffect:]
  -[CKFullScreenEffectManager localizedDisplayNameForEffectWithIdentifier:]
  -[CKFullScreenEffectManager __im_ff_commSafetyUIEnabled]


CKSpellingSubstitutionsDefaults : NSObject
  // class methods
  +[CKSpellingSubstitutionsDefaults sharedInstance]


CKNavbarCanvasViewController : UIViewController <UIGestureRecognizerDelegate, CKDetailsContactsManagerDelegate, CKNavigationBarCanvasViewDelegate, CKNavBarUnifiedCallButtonDelegate, CKAvatarPickerViewControllerDelegate>
 @property  CKConversation *conversation
 @property  CKAvatarPickerViewController *avatarPickerViewController
 @property  CKNavigationBarCanvasView *canvasView
 @property  CKLabel *defaultLabel
 @property  CKCanvasBackButtonView *backButtonView
 @property  UIButton *detailsButton
 @property  CKNavBarUnifiedCallButton *unifiedCallButton
 @property  BOOL hasConfiguredCallButtonAudioRouteActions
 @property  UIButton *callButton
 @property  UIButton *editCancelButtonView
 @property  UIButton *doneButton
 @property  UINavigationController *proxyNavigationController
 @property  BOOL editing
 @property  BOOL expanseEnabled
 @property  NSString *navbarTitle
 @property  long long indicatorType
 @property  CNContactStore *suggestionsEnabledContactStore
 @property  CKDetailsContactsManager *contactsManager
 @property  <CKNavbarCanvasViewControllerDelegate> *delegate
 @property  UIBarButtonItem *detailsBarButton
 @property  UIView *avatarView
 @property  BOOL canShowBackButtonView
 @property  BOOL shouldShowDoneButton
 @property  BOOL isInEditingMode
 @property  long long navBarContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKNavbarCanvasViewController contactsManager]
  -[CKNavbarCanvasViewController collapse]
  -[CKNavbarCanvasViewController traitCollectionDidChange:]
  -[CKNavbarCanvasViewController canvasView]
  -[CKNavbarCanvasViewController setCanShowBackButtonView:]
  -[CKNavbarCanvasViewController setExpanseEnabled:]
  -[CKNavbarCanvasViewController defaultLabel]
  -[CKNavbarCanvasViewController setProxyNavigationController:]
  -[CKNavbarCanvasViewController setNavbarTitle:]
  -[CKNavbarCanvasViewController .cxx_destruct]
  -[CKNavbarCanvasViewController initWithConversation:]
  -[CKNavbarCanvasViewController registerNotifications]
  -[CKNavbarCanvasViewController navBarTitleFromConversation:]
  -[CKNavbarCanvasViewController avatarView]
  -[CKNavbarCanvasViewController _handleTranscriptScroll:]
  -[CKNavbarCanvasViewController _handleConversationRecipientsDidChange:]
  -[CKNavbarCanvasViewController _handleAllowedByScreenTimeChatChanged:]
  -[CKNavbarCanvasViewController viewDidLoad]
  -[CKNavbarCanvasViewController _windowTraitCollection]
  -[CKNavbarCanvasViewController _preferredHeightForTraitCollection:]
  -[CKNavbarCanvasViewController _initializeForTraitCollection:]
  -[CKNavbarCanvasViewController updateAvatarPickerDelegate]
  -[CKNavbarCanvasViewController shouldShowAvatarView]
  -[CKNavbarCanvasViewController toggleExpansionState]
  -[CKNavbarCanvasViewController legacyToggleExpansionState]
  -[CKNavbarCanvasViewController _infoButtonTapped:]
  -[CKNavbarCanvasViewController _updateFTControls]
  -[CKNavbarCanvasViewController refreshAudioButtonTargetAction]
  -[CKNavbarCanvasViewController _facetimeVideoButtonTapped:]
  -[CKNavbarCanvasViewController callButton]
  -[CKNavbarCanvasViewController _notifyDelegateThatViewControllerWantsResize]
  -[CKNavbarCanvasViewController handleCloseNavBarAnimationCompleteNotification:]
  -[CKNavbarCanvasViewController doneButton]
  -[CKNavbarCanvasViewController setIndicatorType:]
  -[CKNavbarCanvasViewController _configureCallButtonAudioRouteActionsIfNecessary]
  -[CKNavbarCanvasViewController setDelegate:]
  -[CKNavbarCanvasViewController hasConfiguredCallButtonAudioRouteActions]
  -[CKNavbarCanvasViewController isInEditingMode]
  -[CKNavbarCanvasViewController _unreadCount]
  -[CKNavbarCanvasViewController setHasConfiguredCallButtonAudioRouteActions:]
  -[CKNavbarCanvasViewController _updateUnreadCountForBackbuttonView:]
  -[CKNavbarCanvasViewController _chatUnreadCountDidChange:]
  -[CKNavbarCanvasViewController multiwayStateChanged:]
  -[CKNavbarCanvasViewController _configureForEditMode]
  -[CKNavbarCanvasViewController _configureForDefaultMode]
  -[CKNavbarCanvasViewController _updateTitleViewAnimated:]
  -[CKNavbarCanvasViewController setCallButton:]
  -[CKNavbarCanvasViewController _titleItemViewForTraitCollection:]
  -[CKNavbarCanvasViewController wantsVerifiedIconForTitle:]
  -[CKNavbarCanvasViewController _leftItemViewForTraitCollection:]
  -[CKNavbarCanvasViewController _rightItemViewForTraitCollection:]
  -[CKNavbarCanvasViewController contextMenuForUnknownRecipient:]
  -[CKNavbarCanvasViewController canShowBackButtonView]
  -[CKNavbarCanvasViewController _addUserDidTapNavigationBarRecognizer:]
  -[CKNavbarCanvasViewController setDefaultLabel:]
  -[CKNavbarCanvasViewController _userDidTapNavigationBar]
  -[CKNavbarCanvasViewController suggestionsEnabledContactStore]
  -[CKNavbarCanvasViewController proxyNavigationController]
  -[CKNavbarCanvasViewController setUnreadCountTitleColor]
  -[CKNavbarCanvasViewController _facetimeAudioButtonTapped:]
  -[CKNavbarCanvasViewController systemMinimumLayoutMarginsForView:]
  -[CKNavbarCanvasViewController buttonRequestsStartFaceTimeVideo:]
  -[CKNavbarCanvasViewController buttonRequestsOpenJoinedCall:]
  -[CKNavbarCanvasViewController setDoneButton:]
  -[CKNavbarCanvasViewController buttonRequestsStartFaceTimeAudio:]
  -[CKNavbarCanvasViewController buttonRequestsStartTelephonyCall:]
  -[CKNavbarCanvasViewController button:requestsJoinActiveCallWithVideoEnabled:]
  -[CKNavbarCanvasViewController dismissModal]
  -[CKNavbarCanvasViewController updateContentsForConversation:]
  -[CKNavbarCanvasViewController buttonWidthDidChange:]
  -[CKNavbarCanvasViewController tappedAvatarPickerViewController]
  -[CKNavbarCanvasViewController startAudioCommunicationUsingPreferredRouteIfAvailable:]
  -[CKNavbarCanvasViewController detailsBarButton]
  -[CKNavbarCanvasViewController recipientContextMenu]
  -[CKNavbarCanvasViewController _secondaryRightItemViewForTraitCollection:]
  -[CKNavbarCanvasViewController updateDefaultLabelIfNecessary]
  -[CKNavbarCanvasViewController setDetailsBarButton:]
  -[CKNavbarCanvasViewController indicatorType]
  -[CKNavbarCanvasViewController setBackButtonView:]
  -[CKNavbarCanvasViewController setDetailsButton:]
  -[CKNavbarCanvasViewController setUnifiedCallButton:]
  -[CKNavbarCanvasViewController setEditCancelButtonView:]
  -[CKNavbarCanvasViewController setSuggestionsEnabledContactStore:]
  -[CKNavbarCanvasViewController expanseEnabled]
  -[CKNavbarCanvasViewController _buttonPressed:]
  -[CKNavbarCanvasViewController gestureRecognizerShouldBegin:]
  -[CKNavbarCanvasViewController navBarContext]
  -[CKNavbarCanvasViewController updateTitle:animated:]
  -[CKNavbarCanvasViewController configureForEditing:]
  -[CKNavbarCanvasViewController initWithConversation:navigationController:]
  -[CKNavbarCanvasViewController editCancelButtonView]
  -[CKNavbarCanvasViewController setEditing:]
  -[CKNavbarCanvasViewController navigationItem]
  -[CKNavbarCanvasViewController contactsManagerViewModelsDidChange:]
  -[CKNavbarCanvasViewController viewDidLayoutSubviews]
  -[CKNavbarCanvasViewController shouldShowDoneButton]
  -[CKNavbarCanvasViewController viewWillAppear:]
  -[CKNavbarCanvasViewController setShouldShowDoneButton:]
  -[CKNavbarCanvasViewController setNavBarContext:]
  -[CKNavbarCanvasViewController unifiedCallButton]
  -[CKNavbarCanvasViewController __im_ff_isExpanseEnabled]
  -[CKNavbarCanvasViewController setContactsManager:]
  -[CKNavbarCanvasViewController backButtonView]
  -[CKNavbarCanvasViewController delegate]
  -[CKNavbarCanvasViewController setConversation:]
  -[CKNavbarCanvasViewController setCanvasView:]
  -[CKNavbarCanvasViewController showContactCardForEntity:address:]
  -[CKNavbarCanvasViewController navbarTitle]
  -[CKNavbarCanvasViewController dealloc]
  -[CKNavbarCanvasViewController _handleAddressBookChange:]
  -[CKNavbarCanvasViewController editing]
  -[CKNavbarCanvasViewController hideChevron]
  -[CKNavbarCanvasViewController conversation]
  -[CKNavbarCanvasViewController detailsButton]
  -[CKNavbarCanvasViewController loadView]
  -[CKNavbarCanvasViewController _contactPhotosEnabledChangedNotification:]
  -[CKNavbarCanvasViewController _canShowAvatarView]
  -[CKNavbarCanvasViewController setIsInEditingMode:]
  -[CKNavbarCanvasViewController avatarPickerViewController]
  -[CKNavbarCanvasViewController setAvatarPickerViewController:]
  -[CKNavbarCanvasViewController __im_ff_uiConsistencyEnabled]


CKPinnedConversationActivityView : UIView <CKPinnedConversationActivityItemViewDelegate>
 @property  NSMutableArray *activityItemViews
 @property  NSMutableArray *contactItemViews
 @property  CKPinnedConversationActivitySnapshot *latestSnapshot
 @property  CAShapeLayer *innerContentAlignmentDebugLayer
 @property  CAShapeLayer *outerContentAlignmentDebugLayer
 @property  CAShapeLayer *activityItemAttachmentCircleDebugLayer
 @property  CAShapeLayer *originationPointDebugLayer
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} avatarFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} innerContentAlignmentFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} outerContentAlignmentFrame
 @property  long long activityItemOriginationDirection
 @property  {CGPoint=dd} activityItemOriginationPoint
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} activityItemOriginationSubAvatarFrame
 @property  BOOL suppressingActivity
 @property  BOOL showContentAlignmentDebugFrames
 @property  NSArray *displayedContacts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKPinnedConversationActivityView _layoutViewsAssociatedWithActivityItemViews:excludingContactItemViews:withContentScale:applyingTransform:updatingActivityItemViews:updatingAttachedContactItemViews:]
  -[CKPinnedConversationActivityView .cxx_destruct]
  -[CKPinnedConversationActivityView layoutSubviews]
  -[CKPinnedConversationActivityView _unattachedContactItemViews]
  -[CKPinnedConversationActivityView _layoutUnattachedContactItemViews:withContentScale:applyingTransform:]
  -[CKPinnedConversationActivityView activityItemAttachmentCircleRadiusInsetForAvatarFrame:]
  -[CKPinnedConversationActivityView _updateSnapshotAnimated:completion:]
  -[CKPinnedConversationActivityView isSuppressingActivity]
  -[CKPinnedConversationActivityView _presentedActivityItems]
  -[CKPinnedConversationActivityView contactItemViews]
  -[CKPinnedConversationActivityView _activityItemViewWithActivityItemIdentifier:]
  -[CKPinnedConversationActivityView activityItemViews]
  -[CKPinnedConversationActivityView contactItemViewMatchingContactItemIdentifier:fromContactItemViews:]
  -[CKPinnedConversationActivityView setSuppressingActivity:]
  -[CKPinnedConversationActivityView haveAttachedContactItemViewsForActivityViews:]
  -[CKPinnedConversationActivityView activityItemOriginationSubAvatarFrame]
  -[CKPinnedConversationActivityView contactItemViewDiameterForAvatarFrame:]
  -[CKPinnedConversationActivityView activityItemOriginationDirection]
  -[CKPinnedConversationActivityView activityItemOriginationPoint]
  -[CKPinnedConversationActivityView activityViewContentAlignmentForContactItemAlignment:]
  -[CKPinnedConversationActivityView contactItemViewCenterXCoordinateForYCoordinate:avatarFrame:contentAlignment:]
  -[CKPinnedConversationActivityView pointAlongCircle:atArcLength:fromPoint:clockwise:]
  -[CKPinnedConversationActivityView tailAttachmentXCoordinateForYCoordinate:avatarFrame:contentAlignment:]
  -[CKPinnedConversationActivityView activityItemViewNeedsResize:]
  -[CKPinnedConversationActivityView setAvatarFrame:]
  -[CKPinnedConversationActivityView _convertPointInOwnCoordinateSpace:toUnscaledCoordinateSpaceOfSubview:]
  -[CKPinnedConversationActivityView setShowContentAlignmentDebugFrames:]
  -[CKPinnedConversationActivityView displayedContacts]
  -[CKPinnedConversationActivityView nextContactItemIsClockwiseForOriginationDirection:contactItemAlignment:]
  -[CKPinnedConversationActivityView setSuppressingActivity:animated:completion:]
  -[CKPinnedConversationActivityView circleXCoordinateForYCoordinate:radius:centerPoint:contentAlignment:]
  -[CKPinnedConversationActivityView setActivityItemOriginationDirection:]
  -[CKPinnedConversationActivityView resetToEmptySnapshot]
  -[CKPinnedConversationActivityView setInnerContentAlignmentFrame:]
  -[CKPinnedConversationActivityView setOuterContentAlignmentFrame:]
  -[CKPinnedConversationActivityView setActivityItemOriginationPoint:]
  -[CKPinnedConversationActivityView innerContentAlignmentFrame]
  -[CKPinnedConversationActivityView applySnapshot:animated:completion:]
  -[CKPinnedConversationActivityView outerContentAlignmentFrame]
  -[CKPinnedConversationActivityView setActivityItemOriginationSubAvatarFrame:]
  -[CKPinnedConversationActivityView setActivityItemViews:]
  -[CKPinnedConversationActivityView showContentAlignmentDebugFrames]
  -[CKPinnedConversationActivityView setContactItemViews:]
  -[CKPinnedConversationActivityView latestSnapshot]
  -[CKPinnedConversationActivityView setLatestSnapshot:]
  -[CKPinnedConversationActivityView innerContentAlignmentDebugLayer]
  -[CKPinnedConversationActivityView setInnerContentAlignmentDebugLayer:]
  -[CKPinnedConversationActivityView outerContentAlignmentDebugLayer]
  -[CKPinnedConversationActivityView setOuterContentAlignmentDebugLayer:]
  -[CKPinnedConversationActivityView activityItemAttachmentCircleDebugLayer]
  -[CKPinnedConversationActivityView setActivityItemAttachmentCircleDebugLayer:]
  -[CKPinnedConversationActivityView originationPointDebugLayer]
  -[CKPinnedConversationActivityView setOriginationPointDebugLayer:]
  -[CKPinnedConversationActivityView initWithFrame:]
  -[CKPinnedConversationActivityView avatarFrame]


CKCloudKitSyncProgressViewController : UIViewController
 @property  IMCloudKitSyncProgress *lastProgress
 @property  UIToolbar *toolbar
 @property  UIColor *originalProgressTintColor
 @property  BOOL progressLabelIsWrapping
 @property  UILabel *progressLabel
 @property  UILabel *userMessageLabel
 @property  UIButton *actionButton
 @property  UIProgressView *progressBar
 @property  <CKCloudKitSyncProgressViewControllerDelegate> *delegate
 @property  BOOL hidden
 @property  BOOL actionButtonEnabled

  // instance methods
  -[CKCloudKitSyncProgressViewController .cxx_destruct]
  -[CKCloudKitSyncProgressViewController isHidden]
  -[CKCloudKitSyncProgressViewController setDelegate:]
  -[CKCloudKitSyncProgressViewController init]
  -[CKCloudKitSyncProgressViewController toolbar]
  -[CKCloudKitSyncProgressViewController setToolbar:]
  -[CKCloudKitSyncProgressViewController progressLabel]
  -[CKCloudKitSyncProgressViewController viewDidLayoutSubviews]
  -[CKCloudKitSyncProgressViewController lastProgress]
  -[CKCloudKitSyncProgressViewController _addProgressView]
  -[CKCloudKitSyncProgressViewController _actionButtonWasPressed:]
  -[CKCloudKitSyncProgressViewController setOriginalProgressTintColor:]
  -[CKCloudKitSyncProgressViewController _isProgressLabelWrapping]
  -[CKCloudKitSyncProgressViewController delegate]
  -[CKCloudKitSyncProgressViewController _addProgressLabel]
  -[CKCloudKitSyncProgressViewController _addUserMessageLabel]
  -[CKCloudKitSyncProgressViewController _addActionButton]
  -[CKCloudKitSyncProgressViewController setProgressLabelIsWrapping:]
  -[CKCloudKitSyncProgressViewController progressLabelIsWrapping]
  -[CKCloudKitSyncProgressViewController userMessageLabel]
  -[CKCloudKitSyncProgressViewController originalProgressTintColor]
  -[CKCloudKitSyncProgressViewController setLastProgress:]
  -[CKCloudKitSyncProgressViewController addToToolbar:]
  -[CKCloudKitSyncProgressViewController updateWithCloudKitProgress:forceShow:]
  -[CKCloudKitSyncProgressViewController showProgressBarWithIndeterminateProgress:percentComplete:]
  -[CKCloudKitSyncProgressViewController showUserMessageWithString:showActionButton:withActionButtonLabel:]
  -[CKCloudKitSyncProgressViewController updateWithCloudKitProgress:]
  -[CKCloudKitSyncProgressViewController actionButtonEnabled]
  -[CKCloudKitSyncProgressViewController setActionButtonEnabled:]
  -[CKCloudKitSyncProgressViewController progressBar]
  -[CKCloudKitSyncProgressViewController loadView]
  -[CKCloudKitSyncProgressViewController actionButton]
  -[CKCloudKitSyncProgressViewController setHidden:]
  -[CKCloudKitSyncProgressViewController _createLabel]


CKCloudKitSyncProgressRepairingAccountViewController : CKCloudKitSyncProgressViewController
  // instance methods
  -[CKCloudKitSyncProgressRepairingAccountViewController viewDidLoad]
  -[CKCloudKitSyncProgressRepairingAccountViewController updateWithCloudKitProgress:]


CKMentionSuggestionCell : UICollectionViewCell
 @property  CKLabel *handleLabel
 @property  CKAvatarView *avatarView
 @property  UIView *hoverView
 @property  CKEntity *suggestedEntity

  // class methods
  +[CKMentionSuggestionCell reuseIdentifier]

  // instance methods
  -[CKMentionSuggestionCell setAvatarView:]
  -[CKMentionSuggestionCell .cxx_destruct]
  -[CKMentionSuggestionCell avatarView]
  -[CKMentionSuggestionCell setHoverView:]
  -[CKMentionSuggestionCell hoverView]
  -[CKMentionSuggestionCell initWithFrame:]
  -[CKMentionSuggestionCell handleLabel]
  -[CKMentionSuggestionCell didHoverOverCell:]
  -[CKMentionSuggestionCell setHandleLabel:]
  -[CKMentionSuggestionCell setSuggestedEntity:]
  -[CKMentionSuggestionCell suggestedEntity]


CKMentionSuggestionAccessoryCell : UICollectionReusableView
 @property  UIView *separatorView

  // class methods
  +[CKMentionSuggestionAccessoryCell reuseIdentifier]
  +[CKMentionSuggestionAccessoryCell supplementryViewKind]

  // instance methods
  -[CKMentionSuggestionAccessoryCell .cxx_destruct]
  -[CKMentionSuggestionAccessoryCell layoutSubviews]
  -[CKMentionSuggestionAccessoryCell setSeparatorView:]
  -[CKMentionSuggestionAccessoryCell initWithFrame:]
  -[CKMentionSuggestionAccessoryCell separatorView]


CKDetailsCell : UITableViewCell
 @property  UIView *topSeperator
 @property  UIView *bottomSeperator
 @property  BOOL indentTopSeperator
 @property  BOOL indentBottomSeperator

  // instance methods
  -[CKDetailsCell .cxx_destruct]
  -[CKDetailsCell layoutSubviews]
  -[CKDetailsCell bottomSeperator]
  -[CKDetailsCell topSeperator]
  -[CKDetailsCell prepareForReuse]
  -[CKDetailsCell initWithStyle:reuseIdentifier:]
  -[CKDetailsCell setTopSeperator:]
  -[CKDetailsCell indentTopSeperator]
  -[CKDetailsCell indentBottomSeperator]
  -[CKDetailsCell setIndentTopSeperator:]
  -[CKDetailsCell setIndentBottomSeperator:]
  -[CKDetailsCell setBottomSeperator:]


CKMessageTypeSearchController : CKSearchController
 @property  BOOL searchTerminated
 @property  NSString *priorQueryIdentifier
 @property  NSArray *resultsToCheck
 @property  IMTimingCollection *timingCollection
 @property  NSMutableSet *itemsVerifiedOnDiskCache
 @property  NSSet *intermediaryResults
 @property  BOOL gotResults

  // class methods
  +[CKMessageTypeSearchController timeRankedQueries]
  +[CKMessageTypeSearchController useRecencyRankedSearchForMode:]
  +[CKMessageTypeSearchController recencyRankedTargetResultCount]

  // instance methods
  -[CKMessageTypeSearchController searchWithText:mode:]
  -[CKMessageTypeSearchController additionalGroupInsets]
  -[CKMessageTypeSearchController .cxx_destruct]
  -[CKMessageTypeSearchController searchEnded]
  -[CKMessageTypeSearchController gotResults]
  -[CKMessageTypeSearchController maxResultsForMode:]
  -[CKMessageTypeSearchController chatGUIDForSearchableItem:]
  -[CKMessageTypeSearchController fractionalWidth:count:forLayoutWidth:]
  -[CKMessageTypeSearchController itemProviderForSearchResult:]
  -[CKMessageTypeSearchController queryResultsForItems:]
  -[CKMessageTypeSearchController postProcessAndUpdateResults:]
  -[CKMessageTypeSearchController deleteAttachmentForResult:]
  -[CKMessageTypeSearchController setTimingCollection:]
  -[CKMessageTypeSearchController createFoundItemsHandler]
  -[CKMessageTypeSearchController footerClass]
  -[CKMessageTypeSearchController searchTerminated]
  -[CKMessageTypeSearchController intermediaryResults]
  -[CKMessageTypeSearchController itemsVerifiedOnDiskCache]
  -[CKMessageTypeSearchController setItemsVerifiedOnDiskCache:]
  -[CKMessageTypeSearchController setSearchTerminated:]
  -[CKMessageTypeSearchController setIntermediaryResults:]
  -[CKMessageTypeSearchController setResultsToCheck:]
  -[CKMessageTypeSearchController setGotResults:]
  -[CKMessageTypeSearchController checkIfResultsExistOnDiskAndNotify:]
  -[CKMessageTypeSearchController _asyncCheckIfResultsExistOnDisk:firstBatch:]
  -[CKMessageTypeSearchController priorQueryIdentifier]
  -[CKMessageTypeSearchController setPriorQueryIdentifier:]
  -[CKMessageTypeSearchController timingCollection]
  -[CKMessageTypeSearchController resultsToCheck]
  -[CKMessageTypeSearchController menuElementsForResult:atRect:]
  -[CKMessageTypeSearchController wantsDeleteAction]
  -[CKMessageTypeSearchController removeFromCache:]
  -[CKMessageTypeSearchController zkwFilterQueries]
  -[CKMessageTypeSearchController rankingQueriesWithText:]
  -[CKMessageTypeSearchController wantsFooterSection]
  -[CKMessageTypeSearchController isTokenizationSearchController]


CKDetailsAddMemberCell : CKDetailsCell
 @property  UILabel *addLabel

  // class methods
  +[CKDetailsAddMemberCell reuseIdentifier]
  +[CKDetailsAddMemberCell preferredHeight]
  +[CKDetailsAddMemberCell cellClass]

  // instance methods
  -[CKDetailsAddMemberCell .cxx_destruct]
  -[CKDetailsAddMemberCell addLabel]
  -[CKDetailsAddMemberCell initWithStyle:reuseIdentifier:]
  -[CKDetailsAddMemberCell setAddLabel:]


CKPassLinkSearchResultCell : CKEditableSearchResultCell <CKSearchResultCell>
 @property  NSString *resultIdentifier
 @property  LPLinkView *linkView
 @property  LPWebLinkPresentationProperties *linkMetadata
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  BOOL _ck_editing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKPassLinkSearchResultCell reuseIdentifier]

  // instance methods
  -[CKPassLinkSearchResultCell .cxx_destruct]
  -[CKPassLinkSearchResultCell linkView]
  -[CKPassLinkSearchResultCell layoutSubviews]
  -[CKPassLinkSearchResultCell marginInsets]
  -[CKPassLinkSearchResultCell prepareForReuse]
  -[CKPassLinkSearchResultCell initWithFrame:]
  -[CKPassLinkSearchResultCell setMarginInsets:]
  -[CKPassLinkSearchResultCell setLinkView:]
  -[CKPassLinkSearchResultCell didMoveToWindow]
  -[CKPassLinkSearchResultCell linkMetadata]
  -[CKPassLinkSearchResultCell setLinkMetadata:]
  -[CKPassLinkSearchResultCell _metadataGenerated:]
  -[CKPassLinkSearchResultCell setResultIdentifier:]
  -[CKPassLinkSearchResultCell resultIdentifier]
  -[CKPassLinkSearchResultCell configureWithQueryResult:searchText:mode:]
  -[CKPassLinkSearchResultCell refreshForSearchTextIfNeeded:]
  -[CKPassLinkSearchResultCell previewSnapshot]
  -[CKPassLinkSearchResultCell setLinkPresentationProperties:forSearchResult:]


CKDetailsContactsViewModel : NSObject
 @property  NSString *preferredHandle
 @property  NSString *entityName
 @property  CKEntity *entity
 @property  NSString *locationString
 @property  BOOL tuConversationStatusIsActive
 @property  long long callType
 @property  BOOL showsLocation
 @property  BOOL showsMessageButton
 @property  BOOL showsFaceTimeVideoButton
 @property  BOOL showsPhoneButton
 @property  BOOL showsScreenSharingButton
 @property  CNContact *contact
 @property  BOOL isPendingRecipient
 @property  BOOL verified
 @property  BOOL showsTUConversationStatus

  // class methods
  +[CKDetailsContactsViewModel descriptorForContactRequiredKeys]

  // instance methods
  -[CKDetailsContactsViewModel initWithEntity:locationString:tuConversationStatusIsActive:callType:showsLocation:showsMessageButton:showsFaceTimeVideoButton:showsPhoneButton:showsScreenSharingButton:contact:isPendingRecipient:verified:showsTUConversationStatus:]
  -[CKDetailsContactsViewModel setShowsFaceTimeVideoButton:]
  -[CKDetailsContactsViewModel setShowsPhoneButton:]
  -[CKDetailsContactsViewModel setShowsScreenSharingButton:]
  -[CKDetailsContactsViewModel setIsPendingRecipient:]
  -[CKDetailsContactsViewModel showsMessageButton]
  -[CKDetailsContactsViewModel setShowsTUConversationStatus:]
  -[CKDetailsContactsViewModel tuConversationStatusIsActive]
  -[CKDetailsContactsViewModel showsFaceTimeVideoButton]
  -[CKDetailsContactsViewModel showsScreenSharingButton]
  -[CKDetailsContactsViewModel showsTUConversationStatus]
  -[CKDetailsContactsViewModel isPendingRecipient]
  -[CKDetailsContactsViewModel locationString]
  -[CKDetailsContactsViewModel callType]
  -[CKDetailsContactsViewModel .cxx_destruct]
  -[CKDetailsContactsViewModel setLocationString:]
  -[CKDetailsContactsViewModel entity]
  -[CKDetailsContactsViewModel setPreferredHandle:]
  -[CKDetailsContactsViewModel setEntity:]
  -[CKDetailsContactsViewModel setContact:]
  -[CKDetailsContactsViewModel setCallType:]
  -[CKDetailsContactsViewModel verified]
  -[CKDetailsContactsViewModel setVerified:]
  -[CKDetailsContactsViewModel preferredHandle]
  -[CKDetailsContactsViewModel entityName]
  -[CKDetailsContactsViewModel setEntityName:]
  -[CKDetailsContactsViewModel showsLocation]
  -[CKDetailsContactsViewModel contact]
  -[CKDetailsContactsViewModel setShowsLocation:]
  -[CKDetailsContactsViewModel setTuConversationStatusIsActive:]
  -[CKDetailsContactsViewModel setShowsMessageButton:]
  -[CKDetailsContactsViewModel showsPhoneButton]


UINavigationControllerAdaptivePresentation : UINavigationController <CKAdaptivePresentedControllerProtocol>
 @property  BOOL wantsWindowedPresentation
 @property  BOOL preserveModalPresentationStyle
 @property  BOOL shouldHidePresentingWindow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UINavigationControllerAdaptivePresentation wantsWindowedPresentation]
  -[UINavigationControllerAdaptivePresentation setWantsWindowedPresentation:]
  -[UINavigationControllerAdaptivePresentation preserveModalPresentationStyle]
  -[UINavigationControllerAdaptivePresentation setPreserveModalPresentationStyle:]


CKConversationListTableView : UITableView
  // instance methods
  -[CKConversationListTableView setContentInset:]
  -[CKConversationListTableView setScrollIndicatorInsets:]


CKConversationListController : UITableViewController <UISearchControllerDelegate, UISearchBarDelegate, CKCloudKitSyncProgressViewControllerDelegate, IMCloudKitEventHandler, CNContactViewControllerDelegate, CKConversationResultsControllerDelegate, CKContainerSearchControllerDelegate, CKConversationListCellDelegate, UITableViewDropDelegate, UITableViewDragDelegate, _UIContextMenuInteractionDelegate, TPKContentControllerDelegate, CNMeCardSharingSettingsViewControllerDelegate, CKOnboardingControllerDelegate, CKConversationListControllerProtocol, UIGestureRecognizerDelegate, UITableViewDataSource, UITableViewDelegate, UITableViewDelegatePrivate, UIActionSheetDelegate, CKMacToolbarItemProvider>
 @property  UIBarButtonItem *customBackButton
 @property  NSMapTable *conversationListCellToChatInfo
 @property  NSMapTable *chatToConversationListCellInfo
 @property  CKMacToolbarController *macToolbarController
 @property  CKMacToolbarItem *composeToolbarItem
 @property  CKNavigationBarTitleView *navigationBarTitleView
 @property  CKLargeTitleAccessoryView *largeTitleAccessoryView
 @property  NSIndexPath *previouslySelectedIndexPath
 @property  BOOL isShowingSwipeDeleteConfirmation
 @property  BOOL shouldShowPendingCell
 @property  CKScheduledUpdater *updater
 @property  UIView *noMessagesDialogView
 @property  NSArray *frozenConversations
 @property  BOOL draggingConversation
 @property  NSDate *lastSelectedConversationTime
 @property  NSString *lastSelectedConversationItemIdentifier
 @property  BOOL isSelectingConversationProgrammatically
 @property  CKConversation *conversationChangingPinState
 @property  double conversationCellHeight
 @property  UISearchController *searchController
 @property  CNContact *meContact
 @property  CKConversationSearchResultsController *searchResultsController
 @property  CKSearchViewController *modernSearchResultsController
 @property  _UIContextMenuInteraction *contextMenuInteraction
 @property  BOOL compositionWasSent
 @property  UIButton *macLegacyComposeButton
 @property  UIBarButtonItem *composeButton
 @property  UIButton *composeButtonView
 @property  UIBarButtonItem *optionsButtonItem
 @property  UIButton *optionsButtonView
 @property  UIBarButtonItem *spacingItem
 @property  UIBarButtonItem *doneButton
 @property  @? searchCompletion
 @property  CKCloudKitSyncProgressViewController *syncProgressViewController
 @property  BOOL shouldUseFastPreviewText
 @property  CNContactStore *contactStore
 @property  TPKContentController *tipKitContentController
 @property  TPKContentView *tipKitContentView
 @property  CKOnboardingController *onboardingController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *deferredSearchQuery
 @property  <CKConversationListControllerDelegate> *delegate
 @property  BOOL isVisible
 @property  BOOL isSearchActiveAndDisplayingResultsForSearchText
 @property  BOOL isSearchActive
 @property  unsigned long filterMode

  // instance methods
  -[CKConversationListController _contentSizeCategoryDidChange:]
  -[CKConversationListController preferredStatusBarStyle]
  -[CKConversationListController contactStore]
  -[CKConversationListController searchResultsController]
  -[CKConversationListController setContactStore:]
  -[CKConversationListController willPresentSearchController:]
  -[CKConversationListController _getRotationContentSettings:]
  -[CKConversationListController contentController:contentDidBecomeAvailable:animated:]
  -[CKConversationListController tableView:willDisplayCell:forRowAtIndexPath:]
  -[CKConversationListController tableView:didEndDisplayingCell:forRowAtIndexPath:]
  -[CKConversationListController inputAccessoryView]
  -[CKConversationListController _meContact]
  -[CKConversationListController tableView:canEditRowAtIndexPath:]
  -[CKConversationListController searchBarCancelButtonClicked:]
  -[CKConversationListController _chatItemsDidChange:]
  -[CKConversationListController prepareForResume]
  -[CKConversationListController prepareForSuspend]
  -[CKConversationListController contextMenuInteraction:actionsForMenuAtLocation:withSuggestedActions:]
  -[CKConversationListController didDismissSearchController:]
  -[CKConversationListController willDismissSearchController:]
  -[CKConversationListController updater]
  -[CKConversationListController searchController]
  -[CKConversationListController _keyboardWillHide:]
  -[CKConversationListController _keyboardWillShow:]
  -[CKConversationListController setMeContact:]
  -[CKConversationListController numberOfSectionsInTableView:]
  -[CKConversationListController setEditing:animated:]
  -[CKConversationListController setSearchController:]
  -[CKConversationListController tableView:shouldDrawBottomSeparatorForSection:]
  -[CKConversationListController tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:]
  -[CKConversationListController tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:]
  -[CKConversationListController tableView:didBeginMultipleSelectionInteractionAtIndexPath:]
  -[CKConversationListController searchBarTextDidBeginEditing:]
  -[CKConversationListController contextMenuInteraction]
  -[CKConversationListController contentController:didFinishWithContent:animated:]
  -[CKConversationListController tableView:numberOfRowsInSection:]
  -[CKConversationListController performResumeDeferredSetup]
  -[CKConversationListController tableView:heightForRowAtIndexPath:]
  -[CKConversationListController .cxx_destruct]
  -[CKConversationListController isSearchActive]
  -[CKConversationListController tableView:willSelectRowAtIndexPath:]
  -[CKConversationListController frozenConversations]
  -[CKConversationListController _shouldHaveAllFilterModes]
  -[CKConversationListController updateConversationList]
  -[CKConversationListController _refreshConversationList]
  -[CKConversationListController setChatToConversationListCellInfo:]
  -[CKConversationListController tableView:didDeselectRowAtIndexPath:]
  -[CKConversationListController beginHoldingConversationListUpdatesForKey:]
  -[CKConversationListController setConversationListCellToChatInfo:]
  -[CKConversationListController _chatWatermarkDidChange:]
  -[CKConversationListController tableView:didSelectRowAtIndexPath:]
  -[CKConversationListController viewDidLoad]
  -[CKConversationListController setSearchResultsController:]
  -[CKConversationListController _conversationListDidFinishLoadingConversations:]
  -[CKConversationListController _contactStoreDidFinishLoadingNotification:]
  -[CKConversationListController _conversationListDidChange:]
  -[CKConversationListController conversationCellHeight]
  -[CKConversationListController tableView:cellForRowAtIndexPath:]
  -[CKConversationListController filterMode]
  -[CKConversationListController setContextMenuInteraction:]
  -[CKConversationListController contextMenuInteraction:previewForHighlightingAtLocation:]
  -[CKConversationListController _chatParticipantsChangedNotification:]
  -[CKConversationListController _conversationIsFilteredChangedNotification:]
  -[CKConversationListController _conversationDisplayNameChangedNotification:]
  -[CKConversationListController doneButton]
  -[CKConversationListController setIsShowingSwipeDeleteConfirmation:]
  -[CKConversationListController _conversationMuteDidChangeNotification:]
  -[CKConversationListController _conversationFilteringStateChangedNotification:]
  -[CKConversationListController _reloadVisibleConversationList:]
  -[CKConversationListController setDelegate:]
  -[CKConversationListController _chatUnreadCountDidChange:]
  -[CKConversationListController updateConversationListForMessageSentToConversation:]
  -[CKConversationListController gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:]
  -[CKConversationListController viewDidAppear:]
  -[CKConversationListController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[CKConversationListController _conversationSpamFilteringStateChangedNotification:]
  -[CKConversationListController _conversationContactPhotosEnabledChangedNotification:]
  -[CKConversationListController _downtimeStateChanged:]
  -[CKConversationListController _chatRegistryLastMessageLoadedNotification:]
  -[CKConversationListController updateConversationNamesForNicknames:]
  -[CKConversationListController _handleAccountRegistrationChange:]
  -[CKConversationListController tableView:shouldIndentWhileEditingRowAtIndexPath:]
  -[CKConversationListController sharingSettingsViewController:didUpdateWithSharingResult:]
  -[CKConversationListController composeButtonClicked:]
  -[CKConversationListController optionsButtonTapped:]
  -[CKConversationListController invalidateCellLayout]
  -[CKConversationListController noteUnreadCountsChanged]
  -[CKConversationListController macToolbarController]
  -[CKConversationListController sharingSettingsViewController:didSelectSharingAudience:]
  -[CKConversationListController conversationListCellClass]
  -[CKConversationListController setConversationCellHeight:]
  -[CKConversationListController updateConversationSelection]
  -[CKConversationListController updateBackButton]
  -[CKConversationListController searcher:conversationForChatGUID:]
  -[CKConversationListController sharingSettingsViewControllerDidUpdateContact:]
  -[CKConversationListController reloadCellForConversation:]
  -[CKConversationListController _updateConversationListNeedsResort:]
  -[CKConversationListController optionsButtonItem]
  -[CKConversationListController updateSMSSpamConversationsDisplayName]
  -[CKConversationListController _updateConversationListsAndSortIfEnabled]
  -[CKConversationListController _updateConversationFilteredFlagsAndReportSpam]
  -[CKConversationListController conversationList]
  -[CKConversationListController configureWithToolbarController:]
  -[CKConversationListController sharingSettingsViewController:didUpdateSharingState:]
  -[CKConversationListController isShowingSwipeDeleteConfirmation]
  -[CKConversationListController updateTitleViews:]
  -[CKConversationListController navigationBarTitleView]
  -[CKConversationListController largeTitleAccessoryView]
  -[CKConversationListController showMeCardViewControllerWithNickname:]
  -[CKConversationListController _meCardSharingEnabled]
  -[CKConversationListController _meCardSharingAudience]
  -[CKConversationListController _avatarProviderFromNickname:]
  -[CKConversationListController _dismissPresentedNavController:]
  -[CKConversationListController _meCardSharingState]
  -[CKConversationListController setDoneButton:]
  -[CKConversationListController init]
  -[CKConversationListController searcher:userDidSelectChatGUID:messageGUID:]
  -[CKConversationListController searcher:userDidDeleteChatGUID:]
  -[CKConversationListController searcherDidComplete:]
  -[CKConversationListController _shouldKeepSelection]
  -[CKConversationListController shouldShowPendingCell]
  -[CKConversationListController setPreviouslySelectedIndexPath:]
  -[CKConversationListController setCompositionWasSent:]
  -[CKConversationListController setFrozenConversations:]
  -[CKConversationListController providerWillBeRemovedFromToolbarController:]
  -[CKConversationListController itemProviderDisablesTouches]
  -[CKConversationListController toolbarItemForIdentifier:]
  -[CKConversationListController isVisible]
  -[CKConversationListController endHoldingConversationListUpdatesForKey:]
  -[CKConversationListController _updateInsets]
  -[CKConversationListController _indexPaths:containingHandleWithUID:]
  -[CKConversationListController _indexPathValidForActiveConversation:]
  -[CKConversationListController updateNoMessagesDialog]
  -[CKConversationListController activeConversations]
  -[CKConversationListController searchCompletion]
  -[CKConversationListController noMessagesDialogView]
  -[CKConversationListController setNoMessagesDialogView:]
  -[CKConversationListController setSearchCompletion:]
  -[CKConversationListController setFilterMode:]
  -[CKConversationListController applicationWillSuspend]
  -[CKConversationListController lastSelectedConversationItemIdentifier]
  -[CKConversationListController _updateToolbarItems]
  -[CKConversationListController viewDidUnload]
  -[CKConversationListController previouslySelectedIndexPath]
  -[CKConversationListController _contactStore]
  -[CKConversationListController tableView:willBeginEditingRowAtIndexPath:]
  -[CKConversationListController registerForCloudKitEventsWithDelayedRegistration:]
  -[CKConversationListController meContact]
  -[CKConversationListController _updateNavbarLayoutIfNeeded]
  -[CKConversationListController _getTitleForCurrentFilterMode]
  -[CKConversationListController compositionWasSent]
  -[CKConversationListController viewWillDisappear:]
  -[CKConversationListController _endHoldingUpdatesOnViewWillAppear]
  -[CKConversationListController _shouldResizeNavigationBar]
  -[CKConversationListController updateMarginWidth]
  -[CKConversationListController modernSearchResultsController]
  -[CKConversationListController composeButtonView]
  -[CKConversationListController selectDefaultConversationAnimated:]
  -[CKConversationListController updateSyncProgressIfNeeded]
  -[CKConversationListController onboardingController]
  -[CKConversationListController searchBarTextDidEndEditing:]
  -[CKConversationListController actionsForTranscriptPreviewController:]
  -[CKConversationListController viewDidLayoutSubviews]
  -[CKConversationListController setOnboardingController:]
  -[CKConversationListController _messageUnknownFilteringEnabled]
  -[CKConversationListController markAsReadButtonTappedForIndexPath:]
  -[CKConversationListController shouldUseFastPreviewText]
  -[CKConversationListController setShouldUseFastPreviewText:]
  -[CKConversationListController optionsButtonView]
  -[CKConversationListController doneButtonTapped:]
  -[CKConversationListController _shouldShowInboxView]
  -[CKConversationListController batchDeleteButtonTapped:]
  -[CKConversationListController markAsReadButtonTapped:]
  -[CKConversationListController viewWillAppear:]
  -[CKConversationListController _endHoldingUpdatesForBatchEditing:]
  -[CKConversationListController showAccountMismatachAlertForNicknames]
  -[CKConversationListController showMultiplePhoneNumbersAlertForNicknames]
  -[CKConversationListController showMeCardViewController]
  -[CKConversationListController setTipKitContentView:]
  -[CKConversationListController _showConversationWithComposition:atIndexPath:]
  -[CKConversationListController isSelectingConversationProgrammatically]
  -[CKConversationListController lastSelectedConversationTime]
  -[CKConversationListController setLastSelectedConversationItemIdentifier:]
  -[CKConversationListController setLastSelectedConversationTime:]
  -[CKConversationListController _chatAllowedByScreenTimeChanged:]
  -[CKConversationListController chatToConversationListCellInfo]
  -[CKConversationListController conversationListCellToChatInfo]
  -[CKConversationListController conversationChangingPinState]
  -[CKConversationListController _messageSpamFilteringEnabled]
  -[CKConversationListController muteConversationButtonTappedForIndexPath:setMuted:]
  -[CKConversationListController deleteButtonTappedForIndexPath:completionHandler:cellToUpdate:]
  -[CKConversationListController setConversationChangingPinState:]
  -[CKConversationListController setMacToolbarController:]
  -[CKConversationListController performDeletionForActiveConversation:indexPath:completionHandler:cellToUpdate:]
  -[CKConversationListController _indexPathValidForPendingConversation:]
  -[CKConversationListController performDeletionForPendingConversationCell:completionHandler:]
  -[CKConversationListController alertTitleForDelete]
  -[CKConversationListController endHoldingAllConversationListUpdatesForKey:]
  -[CKConversationListController selectConversationClosestToDeletedIndex:]
  -[CKConversationListController alertMessageForDelete]
  -[CKConversationListController _cancelDeletion:]
  -[CKConversationListController _topLevelMenuForCell:atIndexPath:]
  -[CKConversationListController _conversationMenuForCell:atIndexPath:]
  -[CKConversationListController _additionalConversationMenuForCell:atIndexPath:]
  -[CKConversationListController delegate]
  -[CKConversationListController _deleteConversationActionForCell:atIndexPath:]
  -[CKConversationListController _openConversationInNewWindowActionForIndexPath:]
  -[CKConversationListController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKConversationListController _conversationDetailsActionForConversation:andCell:]
  -[CKConversationListController _conversationMuteActionForConversation:andIndexPath:]
  -[CKConversationListController searchController:conversationForChatGUID:]
  -[CKConversationListController cloudKitSyncProgressViewController:actionButtonWasPressed:errors:]
  -[CKConversationListController viewDidAppearDeferredSetup]
  -[CKConversationListController shouldScrollTableAtCellSelection:]
  -[CKConversationListController lastVisibleRowInTable]
  -[CKConversationListController firstVisibleRowInTable]
  -[CKConversationListController setIsSelectingConversationProgrammatically:]
  -[CKConversationListController removePendingConversationCell]
  -[CKConversationListController tableViewSpacingForExtraSeparators:]
  -[CKConversationListController _multiWayCallStateChanged:]
  -[CKConversationListController significantTimeChange]
  -[CKConversationListController dealloc]
  -[CKConversationListController contextMenuInteractionShouldBegin:]
  -[CKConversationListController reloadData]
  -[CKConversationListController _indexOfDefaultConversation]
  -[CKConversationListController _selectConversationAtIndex:animated:]
  -[CKConversationListController _indexOfConverationClosestToDeletedIndex:]
  -[CKConversationListController tableView:shouldDrawTopSeparatorForSection:]
  -[CKConversationListController syncProgressViewController]
  -[CKConversationListController _updateSyncProgressIfNeededWithProgressController:forceShow:]
  -[CKConversationListController unregisterForCloudKitEvents]
  -[CKConversationListController setSyncProgressViewController:]
  -[CKConversationListController _beginAccountRepairIfNeeded]
  -[CKConversationListController cloudKitEventNotificationManager:syncProgressDidUpdate:]
  -[CKConversationListController searchController:didSelectItem:inChat:]
  -[CKConversationListController searchControllerDidBeginDragging:]
  -[CKConversationListController viewLayoutMarginsDidChange]
  -[CKConversationListController tableView:editingStyleForRowAtIndexPath:]
  -[CKConversationListController searchViewController:requestsPushOfSearchController:]
  -[CKConversationListController searchBarForSearchViewController:]
  -[CKConversationListController shouldInsetResultsForSearchController:]
  -[CKConversationListController tableView:didEndEditingRowAtIndexPath:]
  -[CKConversationListController widthForDeterminingAvatarVisibility]
  -[CKConversationListController avatarHeaderWasTappedForConversation:inCell:]
  -[CKConversationListController conversationWillBeMarkedRead:]
  -[CKConversationListController compositionSent]
  -[CKConversationListController selectDefaultConversationAnimated:removingPendingConversationCell:]
  -[CKConversationListController selectNextSequentialConversation:]
  -[CKConversationListController deleteSelectedConversation]
  -[CKConversationListController selectPinnedConversationForItem:]
  -[CKConversationListController selectFirstActiveConversation]
  -[CKConversationListController performSearch:completion:]
  -[CKConversationListController registerForCloudKitEventsImmediately]
  -[CKConversationListController loadView]
  -[CKConversationListController tableView:itemsForBeginningDragSession:atIndexPath:]
  -[CKConversationListController supportedInterfaceOrientations]
  -[CKConversationListController beginHoldingConversationListUpdatesForPPTTests]
  -[CKConversationListController endHoldingConversationListUpdatesForPPTTests]
  -[CKConversationListController deferredSearchQuery]
  -[CKConversationListController backButtonPressed]
  -[CKConversationListController setUpdater:]
  -[CKConversationListController _increaseContrastDidChange:]
  -[CKConversationListController updateNavigationItems]
  -[CKConversationListController setDeferredSearchQuery:]
  -[CKConversationListController isSearchActiveAndDisplayingResultsForSearchText]
  -[CKConversationListController _conversationPinStateChangedNotification:]
  -[CKConversationListController _conversationMessageWasSent:]
  -[CKConversationListController _meCardSharingNameProviderWithContact:]
  -[CKConversationListController searchBar:textDidChange:]
  -[CKConversationListController composeButton]
  -[CKConversationListController searchBarShouldBeginEditing:]
  -[CKConversationListController tableView:contextMenuConfigurationForRowAtIndexPath:point:]
  -[CKConversationListController tableView:canHandleDropSession:]
  -[CKConversationListController tableView:dropSessionDidUpdate:withDestinationIndexPath:]
  -[CKConversationListController selectedDeleteButtonForConversation:inCell:]
  -[CKConversationListController tableView:performDropWithCoordinator:]
  -[CKConversationListController spacingItem]
  -[CKConversationListController _imageForkedFromMeCard]
  -[CKConversationListController macLegacyComposeButton]
  -[CKConversationListController customBackButton]
  -[CKConversationListController setCustomBackButton:]
  -[CKConversationListController composeToolbarItem]
  -[CKConversationListController setComposeToolbarItem:]
  -[CKConversationListController setNavigationBarTitleView:]
  -[CKConversationListController setLargeTitleAccessoryView:]
  -[CKConversationListController isDraggingConversation]
  -[CKConversationListController setDraggingConversation:]
  -[CKConversationListController setMacLegacyComposeButton:]
  -[CKConversationListController setModernSearchResultsController:]
  -[CKConversationListController setComposeButton:]
  -[CKConversationListController setComposeButtonView:]
  -[CKConversationListController setOptionsButtonItem:]
  -[CKConversationListController setOptionsButtonView:]
  -[CKConversationListController setSpacingItem:]
  -[CKConversationListController tipKitContentController]
  -[CKConversationListController setTipKitContentController:]
  -[CKConversationListController tipKitContentView]
  -[CKConversationListController presentingViewControllerForOnboardingController:]
  -[CKConversationListController onboardingControllerDidFinish:]
  -[CKConversationListController nicknameController]


CKEntity : NSObject
 @property  IMHandle *handle
 @property  IMAccount *chatAccount
 @property  IMChat *chat
 @property  CNContact *cnContact
 @property  IMHandle *defaultIMHandle
 @property  NSString *propertyType
 @property  BOOL isMe
 @property  NSString *abbreviatedDisplayName
 @property  NSString *name
 @property  NSString *fullName
 @property  NSString *rawAddress
 @property  NSString *originalAddress
 @property  NSString *IDSCanonicalAddress
 @property  NSString *textToneIdentifier
 @property  NSString *textVibrationIdentifier
 @property  UIImage *transcriptContactImage
 @property  UIImage *transcriptDrawerContactImage
 @property  UIImage *locationMapViewContactImage
 @property  UIImage *locationShareBalloonContactImage
 @property  BOOL enlargedContactImage

  // class methods
  +[CKEntity _copyEntityForAddressString:onAccount:]
  +[CKEntity string:hasPrefix:]
  +[CKEntity entityForAddress:]
  +[CKEntity copyEntityForAddressString:]

  // instance methods
  -[CKEntity chat]
  -[CKEntity fullName]
  -[CKEntity isMe]
  -[CKEntity setHandle:]
  -[CKEntity name]
  -[CKEntity initWithIMHandle:]
  -[CKEntity textToneIdentifier]
  -[CKEntity textVibrationIdentifier]
  -[CKEntity cnContactWithKeys:]
  -[CKEntity IDSCanonicalAddress]
  -[CKEntity initWithChat:imHandle:]
  -[CKEntity rawAddress]
  -[CKEntity _invalidateContactStoreCache:]
  -[CKEntity _invalidatePartialContactStoreCache:]
  -[CKEntity cnContactWithKeys:shouldFetchSuggestedContact:]
  -[CKEntity enlargedContactImage]
  -[CKEntity _croppedImageFromImageData:]
  -[CKEntity abbreviatedDisplayName]
  -[CKEntity .cxx_destruct]
  -[CKEntity mentionsHandleID]
  -[CKEntity _setBusinessInfoForMutableContact:enlargedImageData:]
  -[CKEntity originalAddress]
  -[CKEntity setEnlargedContactImage:]
  -[CKEntity locationMapViewContactImage]
  -[CKEntity transcriptContactImage]
  -[CKEntity displayNameMatchingInputText:]
  -[CKEntity transcriptDrawerContactImage]
  -[CKEntity setChatAccount:]
  -[CKEntity defaultIMHandle]
  -[CKEntity isMentionable]
  -[CKEntity mentionTokens]
  -[CKEntity propertyType]
  -[CKEntity locationShareBalloonContactImage]
  -[CKEntity isEqual:]
  -[CKEntity setChat:]
  -[CKEntity personViewControllerWithDelegate:isUnknown:]
  -[CKEntity _allowedByScreenTime]
  -[CKEntity handle]
  -[CKEntity pinnedConversationContactItemIdentifier]
  -[CKEntity setCnContact:]
  -[CKEntity personViewControllerWithDelegate:isUnknown:contactStoreProvider:]
  -[CKEntity chatAccount]
  -[CKEntity cnContact]
  -[CKEntity addToken:ifAvailableToTokens:]


CKStickerMediaObject : CKImageMediaObject
  // class methods
  +[CKStickerMediaObject shouldShadePreview]

  // instance methods
  -[CKStickerMediaObject attachmentSummary:]


CKGroupTitleChangeChatItem : CKMultilineStampChatItem
  // instance methods
  -[CKGroupTitleChangeChatItem sender]
  -[CKGroupTitleChangeChatItem title]
  -[CKGroupTitleChangeChatItem loadTranscriptText]


CKEffectPickerBackgroundView : UIView
 @property  UIVisualEffectView *effectView
 @property  CALayer *blueContrastLayer
 @property  CABackdropLayer *backdrop

  // instance methods
  -[CKEffectPickerBackgroundView setEffectView:]
  -[CKEffectPickerBackgroundView backdrop]
  -[CKEffectPickerBackgroundView .cxx_destruct]
  -[CKEffectPickerBackgroundView blueContrastLayer]
  -[CKEffectPickerBackgroundView setBlueContrastLayer:]
  -[CKEffectPickerBackgroundView effectView]
  -[CKEffectPickerBackgroundView initWithFrame:]
  -[CKEffectPickerBackgroundView setBackdrop:]
  -[CKEffectPickerBackgroundView updateBackgroundVisualEffect]


CKPassSearchController : CKMessageTypeSearchController <QLPreviewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKPassSearchController sectionIdentifier]
  +[CKPassSearchController supportsQuicklookForResult:]
  +[CKPassSearchController previewControllerPresentsModally]
  +[CKPassSearchController indexingString]
  +[CKPassSearchController sectionTitle]
  +[CKPassSearchController reuseIdentifier]
  +[CKPassSearchController cellClass]
  +[CKPassSearchController recencyRankedTargetResultCount]

  // instance methods
  -[CKPassSearchController fetchAttributes]
  -[CKPassSearchController filterQueries]
  -[CKPassSearchController chatGUIDForSearchableItem:]
  -[CKPassSearchController _activityItemProviderForResult:]
  -[CKPassSearchController previewViewControllerForResult:]
  -[CKPassSearchController queryAttributesForText:]
  -[CKPassSearchController detailsFilterQueriesForChatGUIDs:]
  -[CKPassSearchController applyLayoutMarginsToLayoutGroup]
  -[CKPassSearchController layoutGroupWithEnvironment:]
  -[CKPassSearchController cellForSupplementryItemInCollectionView:atIndexPath:supplementryViewKind:]
  -[CKPassSearchController updateSupplementryViewIfNeeded:atIndexPath:]
  -[CKPassSearchController interGroupSpacing]


CKAttributedStringTextItemProvider : CKAttributedStringItemProvider
  // class methods
  +[CKAttributedStringTextItemProvider writableTypeIdentifiersForItemProvider]


CKTranscriptMomentShareLabelCell : CKTranscriptAbstractLabelCell
  // class methods
  +[CKTranscriptMomentShareLabelCell sizeThatFits:attributedText:displayScale:]
  +[CKTranscriptMomentShareLabelCell reuseIdentifier]

  // instance methods
  -[CKTranscriptMomentShareLabelCell setAttributedText:]
  -[CKTranscriptMomentShareLabelCell label]
  -[CKTranscriptMomentShareLabelCell attributedText]
  -[CKTranscriptMomentShareLabelCell .cxx_destruct]
  -[CKTranscriptMomentShareLabelCell cellView]
  -[CKTranscriptMomentShareLabelCell initWithFrame:]
  -[CKTranscriptMomentShareLabelCell configureForChatItem:context:]


CKMessageSearchResultCell : UICollectionViewCell <CKConversationSearchCellDelegate, CKSearchResultCell>
 @property  UITableViewCell<CKConversationSearchCellProtocol> *searchCell
 @property  CKSpotlightQueryResult *result
 @property  NSString *searchText
 @property  BOOL shouldInsetResults
 @property  CALayer *topHairline
 @property  CALayer *bottomHairline
 @property  <CKMessageSearchResultCellDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *resultIdentifier
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  BOOL _ck_editing

  // class methods
  +[CKMessageSearchResultCell reuseIdentifier]

  // instance methods
  -[CKMessageSearchResultCell .cxx_destruct]
  -[CKMessageSearchResultCell preferredLayoutAttributesFittingAttributes:]
  -[CKMessageSearchResultCell _viewConfigurationState]
  -[CKMessageSearchResultCell searchCell]
  -[CKMessageSearchResultCell setSearchCell:]
  -[CKMessageSearchResultCell forwardStateToEmbeddedCell:]
  -[CKMessageSearchResultCell layoutSubviews]
  -[CKMessageSearchResultCell topHairline]
  -[CKMessageSearchResultCell marginInsets]
  -[CKMessageSearchResultCell shouldInsetResults]
  -[CKMessageSearchResultCell setShouldInsetResults:]
  -[CKMessageSearchResultCell bottomHairline]
  -[CKMessageSearchResultCell searchText]
  -[CKMessageSearchResultCell setDelegate:]
  -[CKMessageSearchResultCell result]
  -[CKMessageSearchResultCell prepareForReuse]
  -[CKMessageSearchResultCell setSearchText:]
  -[CKMessageSearchResultCell initWithFrame:]
  -[CKMessageSearchResultCell setMarginInsets:]
  -[CKMessageSearchResultCell setResult:]
  -[CKMessageSearchResultCell delegate]
  -[CKMessageSearchResultCell _ck_isEditing]
  -[CKMessageSearchResultCell _updateViewConfigurationsWithState:]
  -[CKMessageSearchResultCell widthForDeterminingAvatarVisibility]
  -[CKMessageSearchResultCell resultIdentifier]
  -[CKMessageSearchResultCell configureWithQueryResult:searchText:mode:]
  -[CKMessageSearchResultCell refreshForSearchTextIfNeeded:]
  -[CKMessageSearchResultCell _ck_setEditing:]
  -[CKMessageSearchResultCell configurationState]


CKConversationListSearchCell : CKConversationListStandardCell <CKConversationSearchCellProtocol>
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  <CKConversationSearchCellDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKConversationListSearchCell annotatedResultStringWithSearchText:resultText:primaryTextColor:primaryFont:annotatedTextColor:annotatedFont:]

  // instance methods
  -[CKConversationListSearchCell layoutSubviews]
  -[CKConversationListSearchCell fromLabel]
  -[CKConversationListSearchCell configureWithQueryResult:searchText:]
  -[CKConversationListSearchCell marginInsets]
  -[CKConversationListSearchCell leadingLayoutMargin]
  -[CKConversationListSearchCell prepareForReuse]
  -[CKConversationListSearchCell setMarginInsets:]


CKConversationLargeTextSearchCell : CKConversationListLargeTextCell <CKConversationSearchCellProtocol>
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  <CKConversationSearchCellDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKConversationLargeTextSearchCell annotatedResultStringWithSearchText:resultText:primaryTextColor:primaryFont:annotatedTextColor:annotatedFont:]

  // instance methods
  -[CKConversationLargeTextSearchCell avatarView]
  -[CKConversationLargeTextSearchCell updateUnreadIndicatorWithImage:tintColor:]
  -[CKConversationLargeTextSearchCell layoutSubviews]
  -[CKConversationLargeTextSearchCell configureWithQueryResult:searchText:]
  -[CKConversationLargeTextSearchCell marginInsets]
  -[CKConversationLargeTextSearchCell setMarginInsets:]


CKInlineReplyTransitionContext : NSObject
 @property  NSDictionary *visibleChatItemToFrameMap
 @property  NSString *anchorChatItemGUID
 @property  BOOL wantsModalPresentation
 @property  BOOL wantsUnanimatedPresentation
 @property  BOOL presentWithKeyboard
 @property  BOOL keyboardWasUpInMainTranscript

  // instance methods
  -[CKInlineReplyTransitionContext .cxx_destruct]
  -[CKInlineReplyTransitionContext anchorChatItemGUID]
  -[CKInlineReplyTransitionContext wantsUnanimatedPresentation]
  -[CKInlineReplyTransitionContext presentWithKeyboard]
  -[CKInlineReplyTransitionContext visibleChatItemToFrameMap]
  -[CKInlineReplyTransitionContext keyboardWasUpInMainTranscript]
  -[CKInlineReplyTransitionContext setVisibleChatItemToFrameMap:]
  -[CKInlineReplyTransitionContext setWantsModalPresentation:]
  -[CKInlineReplyTransitionContext setPresentWithKeyboard:]
  -[CKInlineReplyTransitionContext wantsModalPresentation]
  -[CKInlineReplyTransitionContext setAnchorChatItemGUID:]
  -[CKInlineReplyTransitionContext setKeyboardWasUpInMainTranscript:]
  -[CKInlineReplyTransitionContext setWantsUnanimatedPresentation:]


CKInlineReplyGradientReferenceView : CKGradientReferenceView
 @property  CKTranscriptCollectionView *collectionView

  // instance methods
  -[CKInlineReplyGradientReferenceView .cxx_destruct]
  -[CKInlineReplyGradientReferenceView layoutSubviews]
  -[CKInlineReplyGradientReferenceView collectionView]
  -[CKInlineReplyGradientReferenceView setCollectionView:]


CKInlineReplyChatController : CKChatController
 @property  CKInlineReplyCollectionViewController *inlineCollectionViewController
 @property  BOOL isInitialLoad
 @property  BOOL isInitialSizing
 @property  BOOL animatingIn
 @property  BOOL animatingOut
 @property  UIVisualEffectView *blurView
 @property  NSString *threadIdentifier
 @property  IMMessageItem *threadOriginator
 @property  CKInlineReplyTransitionContext *transitionContext
 @property  BOOL showNavbarKeyline
 @property  UINavigationBarAppearance *navBarAppearance
 @property  BOOL shouldReloadInsetsForFloatingKeyboard
 @property  NSDictionary *originatorMessageSummaryInfo
 @property  <CKInlineReplyInteractionDelegate> *interactionDelegate
 @property  BOOL modal

  // class methods
  +[CKInlineReplyChatController stringForContentType:]
  +[CKInlineReplyChatController transcriptControllerClass]
  +[CKInlineReplyChatController _gradientReferenceViewClass]

  // instance methods
  -[CKInlineReplyChatController blurView]
  -[CKInlineReplyChatController interactionDelegate]
  -[CKInlineReplyChatController setThreadIdentifier:]
  -[CKInlineReplyChatController setInteractionDelegate:]
  -[CKInlineReplyChatController inputAccessoryView]
  -[CKInlineReplyChatController isModal]
  -[CKInlineReplyChatController messageEntryViewWidth:andOffset:]
  -[CKInlineReplyChatController isInitialLoad]
  -[CKInlineReplyChatController .cxx_destruct]
  -[CKInlineReplyChatController viewDidLoad]
  -[CKInlineReplyChatController sendMessage:forConversation:newComposition:]
  -[CKInlineReplyChatController _didSendCompositionInConversation:]
  -[CKInlineReplyChatController _animateOut]
  -[CKInlineReplyChatController messageEntryViewDidBeginEditingNotAlreadyActive:]
  -[CKInlineReplyChatController isUnanimated]
  -[CKInlineReplyChatController viewDidAppear:]
  -[CKInlineReplyChatController cleanUpDarkEffectStyle]
  -[CKInlineReplyChatController becomeFirstResponder]
  -[CKInlineReplyChatController animatingIn]
  -[CKInlineReplyChatController setIsInitialSizing:]
  -[CKInlineReplyChatController setThreadOriginator:]
  -[CKInlineReplyChatController _contentInsetForSendAnimation]
  -[CKInlineReplyChatController threadOriginator]
  -[CKInlineReplyChatController _imMessageForIMMessageItem:]
  -[CKInlineReplyChatController collectMetricsForSending:]
  -[CKInlineReplyChatController originatorMessageSummaryInfo]
  -[CKInlineReplyChatController _navigationBarAppearanceWithKeyline:]
  -[CKInlineReplyChatController inlineCollectionViewController]
  -[CKInlineReplyChatController shouldReloadInsetsForFloatingKeyboard]
  -[CKInlineReplyChatController _requestDismissal]
  -[CKInlineReplyChatController isInitialSizing]
  -[CKInlineReplyChatController _setInitialScrollPositionIfNecessary]
  -[CKInlineReplyChatController setShowNavbarKeyline:]
  -[CKInlineReplyChatController showNavbarKeyline]
  -[CKInlineReplyChatController accessoryViewHeight]
  -[CKInlineReplyChatController contentSizeForPinning]
  -[CKInlineReplyChatController navigationBarInsetsWithoutPalette]
  -[CKInlineReplyChatController inputController]
  -[CKInlineReplyChatController throwAnimationFinalFrameOffset:]
  -[CKInlineReplyChatController throwAnimationManagerTopHeaderHeight:]
  -[CKInlineReplyChatController _initialFrameForCollectionView]
  -[CKInlineReplyChatController navBarAppearance]
  -[CKInlineReplyChatController isInline]
  -[CKInlineReplyChatController setNavBarAppearance:]
  -[CKInlineReplyChatController inputViewController]
  -[CKInlineReplyChatController setIsInitialLoad:]
  -[CKInlineReplyChatController shouldListParticipantsInTitle]
  -[CKInlineReplyChatController _doneButtonPressed]
  -[CKInlineReplyChatController dismissController]
  -[CKInlineReplyChatController transcriptCollectionViewControllerRestingStateDidChange:]
  -[CKInlineReplyChatController viewDidLayoutSubviews]
  -[CKInlineReplyChatController shouldShowDoneButton]
  -[CKInlineReplyChatController transcriptCollectionViewController:didScroll:]
  -[CKInlineReplyChatController setBlurView:]
  -[CKInlineReplyChatController transcriptCollectionViewControllerChatItemsDidChange:]
  -[CKInlineReplyChatController initWithConversation:threadIdentifier:threadOriginator:transitionContext:originatorMessageSummaryInfo:]
  -[CKInlineReplyChatController transcriptCollectionViewController:collectionViewContentSizeDidChange:]
  -[CKInlineReplyChatController setShouldReloadInsetsForFloatingKeyboard:]
  -[CKInlineReplyChatController threadIdentifier]
  -[CKInlineReplyChatController transcriptCollectionViewController:targetAlphaForChatItem:]
  -[CKInlineReplyChatController gradientFrameWithInsets:]
  -[CKInlineReplyChatController transitionContext]
  -[CKInlineReplyChatController reloadInputViews]
  -[CKInlineReplyChatController stageAssetArchive:skipShelf:completionHandler:]
  -[CKInlineReplyChatController setTargetFirstResponder:]
  -[CKInlineReplyChatController updateScrollGeometry]
  -[CKInlineReplyChatController tapGestureRecognized:]
  -[CKInlineReplyChatController transcriptCollectionViewControllerIsPresentedInModalInlineReply:]
  -[CKInlineReplyChatController _visibleGUIDs]
  -[CKInlineReplyChatController setIsShowingPreview:]
  -[CKInlineReplyChatController setAnimatingIn:]
  -[CKInlineReplyChatController _updateNavigationUI]
  -[CKInlineReplyChatController _defaultTranscriptNavBarAppearance]
  -[CKInlineReplyChatController setAnimatingOut:]
  -[CKInlineReplyChatController setUpStyleForDarkEffect]
  -[CKInlineReplyChatController sendMessage:forConversation:onService:newComposition:]
  -[CKInlineReplyChatController targetFirstResponder]
  -[CKInlineReplyChatController setTransitionContext:]
  -[CKInlineReplyChatController _restoreDraftState]
  -[CKInlineReplyChatController animatingOut]
  -[CKInlineReplyChatController _animateIn:]
  -[CKInlineReplyChatController _saveDraftState]
  -[CKInlineReplyChatController reloadEntryViewIfNeeded]


CKOrganicImageBalloonView : CKImageBalloonView
 @property  CKBalloonImageView *imageView
 @property  CKOrganicImageLayoutRecipe *layoutRecipe

  // instance methods
  -[CKOrganicImageBalloonView imageView]
  -[CKOrganicImageBalloonView setInvisibleInkEffectImage:]
  -[CKOrganicImageBalloonView image]
  -[CKOrganicImageBalloonView prepareForDisplay]
  -[CKOrganicImageBalloonView tailMask]
  -[CKOrganicImageBalloonView .cxx_destruct]
  -[CKOrganicImageBalloonView canUseOpaqueMask]
  -[CKOrganicImageBalloonView setFrame:]
  -[CKOrganicImageBalloonView layoutRecipe]
  -[CKOrganicImageBalloonView suppressMask]
  -[CKOrganicImageBalloonView prepareForReuse]
  -[CKOrganicImageBalloonView setLayoutRecipe:]
  -[CKOrganicImageBalloonView invisibleInkEffectImage]
  -[CKOrganicImageBalloonView configureForMessagePart:]
  -[CKOrganicImageBalloonView addFilter:]
  -[CKOrganicImageBalloonView initWithFrame:]
  -[CKOrganicImageBalloonView attachInvisibleInkEffectView]
  -[CKOrganicImageBalloonView detachInvisibleInkEffectView]
  -[CKOrganicImageBalloonView setImage:]
  -[CKOrganicImageBalloonView balloonDescriptor]
  -[CKOrganicImageBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKOrganicImageBalloonView setImageView:]
  -[CKOrganicImageBalloonView createOverlayImageView]


CKSMSComposeViewServiceController : UINavigationController <CKComposeChatControllerDelegate, CKSMSComposeViewServiceProtocol>
 @property  @? gameCenterPickerBlock
 @property  @? entryViewCompletion
 @property  CKModalTranscriptController *modalTranscriptController
 @property  BOOL canEditRecipients
 @property  BOOL shouldDisableEntryField
 @property  BOOL shouldHideClearPluginButton
 @property  <CKSMSComposeViewServiceControllerDelegate> *composeDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSMSComposeViewServiceController _remoteViewControllerInterface]
  +[CKSMSComposeViewServiceController _isSecureForRemoteViewService]
  +[CKSMSComposeViewServiceController _exportedInterface]

  // instance methods
  -[CKSMSComposeViewServiceController forceMMS]
  -[CKSMSComposeViewServiceController chatController:willSendComposition:inConversation:]
  -[CKSMSComposeViewServiceController chatController:didSendCompositionInConversation:]
  -[CKSMSComposeViewServiceController chatController:didReportSpamForConversation:]
  -[CKSMSComposeViewServiceController prewarmCameraIfNecessaryForChatController:]
  -[CKSMSComposeViewServiceController .cxx_destruct]
  -[CKSMSComposeViewServiceController setContentText:]
  -[CKSMSComposeViewServiceController viewDidAppear:]
  -[CKSMSComposeViewServiceController composeChatController:didLoadEntryViewContentWithCompletion:]
  -[CKSMSComposeViewServiceController composeChatController:shouldSendComposition:inConversation:completion:]
  -[CKSMSComposeViewServiceController setUTIs:]
  -[CKSMSComposeViewServiceController supportsAttachments]
  -[CKSMSComposeViewServiceController init]
  -[CKSMSComposeViewServiceController gameCenterPickerBlock]
  -[CKSMSComposeViewServiceController setGameCenterPickerBlock:]
  -[CKSMSComposeViewServiceController setCanEditRecipients:]
  -[CKSMSComposeViewServiceController setModalTranscriptController:]
  -[CKSMSComposeViewServiceController modalTranscriptController]
  -[CKSMSComposeViewServiceController insertFileURL:filename:transcoderUserInfo:]
  -[CKSMSComposeViewServiceController insertData:MIMEType:exportedFilename:]
  -[CKSMSComposeViewServiceController hideEntryViewContent:]
  -[CKSMSComposeViewServiceController _hostSandboxAllowsFileReadAtFileURL:]
  -[CKSMSComposeViewServiceController setNavBarTitle:]
  -[CKSMSComposeViewServiceController setGameCenterPickedHandles:playerNames:]
  -[CKSMSComposeViewServiceController viewWillAppear:]
  -[CKSMSComposeViewServiceController setEntryViewCompletion:]
  -[CKSMSComposeViewServiceController _insertFileURL:filename:transcoderUserInfo:preview:isFullyRealized:appendedVideoURL:completion:]
  -[CKSMSComposeViewServiceController _insertAttachmentWithURL:andDescription:preview:isFullyRealized:appendedVideoURL:appendedBundleURL:completion:]
  -[CKSMSComposeViewServiceController entryViewCompletion]
  -[CKSMSComposeViewServiceController insertAttachmentWithURL:andDescription:]
  -[CKSMSComposeViewServiceController composeChatControllerDidCancelComposition:]
  -[CKSMSComposeViewServiceController _forceMMSIfNecessary]
  -[CKSMSComposeViewServiceController setText:subject:addresses:chatGUID:groupName:]
  -[CKSMSComposeViewServiceController setText:subject:addresses:]
  -[CKSMSComposeViewServiceController setShouldHideClearPluginButton:]
  -[CKSMSComposeViewServiceController recipientsFromChatGUID:groupName:handles:]
  -[CKSMSComposeViewServiceController setContentURLs:]
  -[CKSMSComposeViewServiceController setPendingAddresses:]
  -[CKSMSComposeViewServiceController setCloudPhotoIDs:]
  -[CKSMSComposeViewServiceController setShouldDisableEntryField:]
  -[CKSMSComposeViewServiceController disableCameraAttachments]
  -[CKSMSComposeViewServiceController setTextEntryContentsVisible:]
  -[CKSMSComposeViewServiceController setComposeDelegate:]
  -[CKSMSComposeViewServiceController supportsMessageInspection]
  -[CKSMSComposeViewServiceController donateInteractionWithConversation:]
  -[CKSMSComposeViewServiceController setUICustomizationData:]
  -[CKSMSComposeViewServiceController setShouldIgnoreEmailsWhenSending:]
  -[CKSMSComposeViewServiceController setText:subject:addresses:shouldHideClearPluginButton:]
  -[CKSMSComposeViewServiceController setShareSheetSessionID:]
  -[CKSMSComposeViewServiceController setText:subject:addresses:shouldHideClearPluginButton:chatGUID:]
  -[CKSMSComposeViewServiceController insertRemoteItemForSending:]
  -[CKSMSComposeViewServiceController showInsertedItemInEntryView]
  -[CKSMSComposeViewServiceController dealloc]
  -[CKSMSComposeViewServiceController insertRemoteItemForSendingAndCalculateEntryViewFrame:completion:]
  -[CKSMSComposeViewServiceController insertFilename:MIMEType:exportedFilename:options:]
  -[CKSMSComposeViewServiceController composeDelegate]
  -[CKSMSComposeViewServiceController forceCancelComposition]
  -[CKSMSComposeViewServiceController setGameCenterModeWithPickerBlock:]
  -[CKSMSComposeViewServiceController composeChatControllerCanEditRecipients]
  -[CKSMSComposeViewServiceController composeChatController:didSelectNewConversation:]
  -[CKSMSComposeViewServiceController shouldHideClearPluginButton]
  -[CKSMSComposeViewServiceController composeChatControllerShouldShowBackButtonViewDuringSendAnimation:]
  -[CKSMSComposeViewServiceController chatController:forwardComposition:]
  -[CKSMSComposeViewServiceController viewDidDisappear:]
  -[CKSMSComposeViewServiceController _canShowWhileLocked]
  -[CKSMSComposeViewServiceController _willAppearInRemoteViewController]
  -[CKSMSComposeViewServiceController setPhotoIDs:]


CKMessageEntryViewController : UIInputViewController
 @property  CKMessageEntryView *entryView
 @property  BOOL inputAccessoryViewControllerEnabled

  // class methods
  +[CKMessageEntryViewController _requiresProxyInterface]

  // instance methods
  -[CKMessageEntryViewController .cxx_destruct]
  -[CKMessageEntryViewController entryView]
  -[CKMessageEntryViewController initWithEntryView:]
  -[CKMessageEntryViewController inputAccessoryViewControllerEnabled]
  -[CKMessageEntryViewController loadView]
  -[CKMessageEntryViewController setInputAccessoryViewControllerEnabled:]


CKTranscriptMessageContentCell : CKPhoneTranscriptMessageCell
 @property  UILabel *drawerLabel
 @property  BOOL drawerWasVisible
 @property  BOOL drawerTextChanged
 @property  {CGSize=dd} drawerTextSize
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} drawerLabelFrame
 @property  NSAttributedString *drawerText
 @property  {CGSize=dd} messageDisplayViewRequestedSize
 @property  long long animationPauseReasons
 @property  UIView *messageDisplayView

  // instance methods
  -[CKTranscriptMessageContentCell setAnimationPauseReasons:]
  -[CKTranscriptMessageContentCell .cxx_destruct]
  -[CKTranscriptMessageContentCell messageDisplayView]
  -[CKTranscriptMessageContentCell willLayoutDrawerLabelFrame:]
  -[CKTranscriptMessageContentCell drawerText]
  -[CKTranscriptMessageContentCell drawerLabel]
  -[CKTranscriptMessageContentCell initWithFrame:]
  -[CKTranscriptMessageContentCell layoutOffset]
  -[CKTranscriptMessageContentCell drawerTextSize]
  -[CKTranscriptMessageContentCell drawerWasVisible]
  -[CKTranscriptMessageContentCell setDrawerWasVisible:]
  -[CKTranscriptMessageContentCell layoutSubviewsForDrawer]
  -[CKTranscriptMessageContentCell drawerTextChanged]
  -[CKTranscriptMessageContentCell setDrawerTextSize:]
  -[CKTranscriptMessageContentCell setDrawerTextChanged:]
  -[CKTranscriptMessageContentCell messageDisplayViewFrame:inContainerFrame:]
  -[CKTranscriptMessageContentCell drawerLabelFrame]
  -[CKTranscriptMessageContentCell setDrawerText:]
  -[CKTranscriptMessageContentCell messageDisplayViewRequestedSize]
  -[CKTranscriptMessageContentCell animationPauseReasons]
  -[CKTranscriptMessageContentCell setMessageDisplayViewRequestedSize:]
  -[CKTranscriptMessageContentCell setDrawerLabel:]
  -[CKTranscriptMessageContentCell configureForChatItem:context:]
  -[CKTranscriptMessageContentCell layoutSubviewsForAlignmentContents]


CKDetailsSegmentedControlCell : CKDetailsCell <CKDetailsCell>
 @property  UISegmentedControl *segmentedControl
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsSegmentedControlCell shouldHighlight]
  +[CKDetailsSegmentedControlCell reuseIdentifier]

  // instance methods
  -[CKDetailsSegmentedControlCell .cxx_destruct]
  -[CKDetailsSegmentedControlCell layoutSubviews]
  -[CKDetailsSegmentedControlCell setSegmentedControl:]
  -[CKDetailsSegmentedControlCell segmentedControl]


CKTranscriptHeaderCell : CKTranscriptCell
 @property  UIView *loadingIndicator

  // class methods
  +[CKTranscriptHeaderCell defaultCellHeight]

  // instance methods
  -[CKTranscriptHeaderCell .cxx_destruct]
  -[CKTranscriptHeaderCell initWithFrame:]
  -[CKTranscriptHeaderCell setLoadingIndicator:]
  -[CKTranscriptHeaderCell loadingIndicator]
  -[CKTranscriptHeaderCell startAnimatingActivityIndicator]
  -[CKTranscriptHeaderCell layoutSubviewsForAlignmentContents]


CKUtilities : NSObject
  // class methods
  +[CKUtilities quickSaveConfirmationAlertWithPhotoCount:videoCount:otherCount:alreadySavedCount:popoverSource:cancelHandler:saveHandler:navigationHandler:]
  +[CKUtilities quickSaveConfirmationAlertForMediaObjects:momentShareURL:popoverSource:metricsSource:cancelHandler:preSaveHandler:postSaveHandler:]
  +[CKUtilities nsUserDefaultsStandardUserDefaults]
  +[CKUtilities deviceHasMultipleSubscriptions]
  +[CKUtilities deviceSpecificNameForKey:]
  +[CKUtilities indexOfChatItem:inChatItemsArray:]
  +[CKUtilities isIpad]
  +[CKUtilities imMessageForIMMessageItem:]
  +[CKUtilities threadIdentifierForMessagePart:]
  +[CKUtilities threadOriginatorForMessagePart:]
  +[CKUtilities messageJunkStatus]
  +[CKUtilities isMessageUnknownSenderNotificationDisabled]
  +[CKUtilities isMessageTransactionsNotificationDisabled]
  +[CKUtilities isMessagePromotionsNotificationDisabled]
  +[CKUtilities imDefaultsSharedInstance]
  +[CKUtilities userDefaultBoolForKey:]


_CKWeakWrapper : NSProxy
 @property  IMWeakReference *weakReference
 @property  Class targetClass

  // instance methods
  -[_CKWeakWrapper weakReference]
  -[_CKWeakWrapper conformsToProtocol:]
  -[_CKWeakWrapper class]
  -[_CKWeakWrapper methodSignatureForSelector:]
  -[_CKWeakWrapper setWeakReference:]
  -[_CKWeakWrapper initWithObject:]
  -[_CKWeakWrapper .cxx_destruct]
  -[_CKWeakWrapper forwardingTargetForSelector:]
  -[_CKWeakWrapper setTargetClass:]
  -[_CKWeakWrapper respondsToSelector:]
  -[_CKWeakWrapper isEqual:]
  -[_CKWeakWrapper isKindOfClass:]
  -[_CKWeakWrapper targetClass]
  -[_CKWeakWrapper forwardInvocation:]


CKPhotoGridTapbackView : UIView <PXGDecorationView, CKGradientReferenceView>
 @property  CKAggregateAcknowledgmentBalloonView *tapbackBalloonView
 @property  BOOL needsAnimation
 @property  unsigned long decorationOptions
 @property  PXAssetReference *userData
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} clippingRect
 @property  BOOL shouldReuseWhenInvisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKPhotoGridTapbackView setUserData:]
  -[CKPhotoGridTapbackView becomeReusable]
  -[CKPhotoGridTapbackView userData]
  -[CKPhotoGridTapbackView _tearDownBalloonView]
  -[CKPhotoGridTapbackView _setupBalloonView]
  -[CKPhotoGridTapbackView tapbackBalloonView]
  -[CKPhotoGridTapbackView clippingRect]
  -[CKPhotoGridTapbackView setNeedsAnimation:]
  -[CKPhotoGridTapbackView setTapbackBalloonView:]
  -[CKPhotoGridTapbackView gradientFrame]
  -[CKPhotoGridTapbackView decorationOptions]
  -[CKPhotoGridTapbackView setDecorationOptions:]
  -[CKPhotoGridTapbackView _imAggregateAcknowledgmentChatItem]
  -[CKPhotoGridTapbackView shouldAnimate]
  -[CKPhotoGridTapbackView .cxx_destruct]
  -[CKPhotoGridTapbackView layoutSubviews]
  -[CKPhotoGridTapbackView balloonViewClass]
  -[CKPhotoGridTapbackView asset]
  -[CKPhotoGridTapbackView invertTail]
  -[CKPhotoGridTapbackView isFromMe]
  -[CKPhotoGridTapbackView prepareForReuse]
  -[CKPhotoGridTapbackView gradientReferenceView]
  -[CKPhotoGridTapbackView needsAnimation]
  -[CKPhotoGridTapbackView setClippingRect:]
  -[CKPhotoGridTapbackView performInsertion:]


CKMessageEntryWaveformView : UIView
 @property  unsigned long maxPowerLevelsCount
 @property  NSMutableArray *powerLevels
 @property  UIVisualEffectView *blurView
 @property  UIImageView *balloonImageView
 @property  UILabel *timeLabel
 @property  UIImageView *waveformImageView
 @property  double minTimeLabelWidth
 @property  double duration

  // class methods
  +[CKMessageEntryWaveformView waveformCurveTransform]

  // instance methods
  -[CKMessageEntryWaveformView blurView]
  -[CKMessageEntryWaveformView balloonImageView]
  -[CKMessageEntryWaveformView setBalloonImageView:]
  -[CKMessageEntryWaveformView setWaveformImageView:]
  -[CKMessageEntryWaveformView setMaxPowerLevelsCount:]
  -[CKMessageEntryWaveformView waveformImageView]
  -[CKMessageEntryWaveformView updateWaveform]
  -[CKMessageEntryWaveformView maxPowerLevelsCount]
  -[CKMessageEntryWaveformView .cxx_destruct]
  -[CKMessageEntryWaveformView setDuration:]
  -[CKMessageEntryWaveformView layoutSubviews]
  -[CKMessageEntryWaveformView clearPowerLevels]
  -[CKMessageEntryWaveformView appendPowerLevel:]
  -[CKMessageEntryWaveformView setMinTimeLabelWidth:]
  -[CKMessageEntryWaveformView minTimeLabelWidth]
  -[CKMessageEntryWaveformView setPowerLevels:]
  -[CKMessageEntryWaveformView setTimeLabel:]
  -[CKMessageEntryWaveformView sizeThatFits:]
  -[CKMessageEntryWaveformView timeLabel]
  -[CKMessageEntryWaveformView setBlurView:]
  -[CKMessageEntryWaveformView initWithFrame:]
  -[CKMessageEntryWaveformView didMoveToWindow]
  -[CKMessageEntryWaveformView powerLevels]
  -[CKMessageEntryWaveformView __im_ff_isNewAudioMessageFlowEnabled]
  -[CKMessageEntryWaveformView duration]


CKDetailsGroupNameCell : CKDetailsCell <CKDetailsCell>
 @property  CKDetailsAddGroupNameView *groupNameView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsGroupNameCell shouldHighlight]
  +[CKDetailsGroupNameCell reuseIdentifier]

  // instance methods
  -[CKDetailsGroupNameCell groupNameView]
  -[CKDetailsGroupNameCell .cxx_destruct]
  -[CKDetailsGroupNameCell _ckSymbolImageNamed:preferredContentSizeCategory:preferredFontTextStyle:]
  -[CKDetailsGroupNameCell setGroupNameView:]
  -[CKDetailsGroupNameCell initWithStyle:reuseIdentifier:]
  -[CKDetailsGroupNameCell dealloc]


CKLocationSearchController : CKMessageTypeSearchController <QLPreviewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKLocationSearchController sectionIdentifier]
  +[CKLocationSearchController indexingString]
  +[CKLocationSearchController sectionTitle]
  +[CKLocationSearchController reuseIdentifier]
  +[CKLocationSearchController cellClass]

  // instance methods
  -[CKLocationSearchController fetchAttributes]
  -[CKLocationSearchController filterQueries]
  -[CKLocationSearchController _mapItemForResult:]
  -[CKLocationSearchController urlForQueryResult:]
  -[CKLocationSearchController additionalMenuElementsForResult:]
  -[CKLocationSearchController chatGUIDForSearchableItem:]
  -[CKLocationSearchController fractionalWidth:count:forLayoutWidth:]
  -[CKLocationSearchController itemProviderForSearchResult:]
  -[CKLocationSearchController _activityItemProviderForResult:]
  -[CKLocationSearchController previewViewControllerForResult:]
  -[CKLocationSearchController handleSelectionForResult:]
  -[CKLocationSearchController queryAttributesForText:]
  -[CKLocationSearchController detailsFilterQueriesForChatGUIDs:]
  -[CKLocationSearchController applyLayoutMarginsToLayoutGroup]
  -[CKLocationSearchController layoutGroupWithEnvironment:]
  -[CKLocationSearchController cellForSupplementryItemInCollectionView:atIndexPath:supplementryViewKind:]
  -[CKLocationSearchController updateSupplementryViewIfNeeded:atIndexPath:]
  -[CKLocationSearchController shouldStartMenuInteractionForResult:]
  -[CKLocationSearchController interGroupSpacing]


CKFullScreenBalloonViewController : UIViewController <CKMessageAcknowledgmentPickerBarDelegate, UIGestureRecognizerDelegate, CKAdaptivePresentedControllerProtocol>
 @property  UIGestureRecognizer *tapRecognizer
 @property  <CKFullScreenBalloonViewControllerDelegate> *delegate
 @property  CKMessageAcknowledgmentPickerBarViewController *pickerBar
 @property  UIButton *replyButton
 @property  UIView *tintView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} gradientFrame
 @property  BOOL isGroupConversation
 @property  UIView *balloonWrapperView
 @property  CKMessagePartChatItem *chatItem
 @property  CKMessagePartChatItem *supplementaryLayoutChatItem
 @property  id supplementaryLayoutContext
 @property  BOOL forcedOrientation
 @property  BOOL useForcedOrientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL wantsWindowedPresentation
 @property  BOOL preserveModalPresentationStyle
 @property  BOOL shouldHidePresentingWindow

  // instance methods
  -[CKFullScreenBalloonViewController gestureRecognizer:shouldReceivePress:]
  -[CKFullScreenBalloonViewController pickerBar]
  -[CKFullScreenBalloonViewController replyButton]
  -[CKFullScreenBalloonViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKFullScreenBalloonViewController gradientFrame]
  -[CKFullScreenBalloonViewController tintView]
  -[CKFullScreenBalloonViewController .cxx_destruct]
  -[CKFullScreenBalloonViewController supplementaryLayoutChatItem]
  -[CKFullScreenBalloonViewController isGroupConversation]
  -[CKFullScreenBalloonViewController viewDidLoad]
  -[CKFullScreenBalloonViewController removeTapRecogonizer]
  -[CKFullScreenBalloonViewController performCancelAnimationWithCompletion:]
  -[CKFullScreenBalloonViewController setForcedOrientation:]
  -[CKFullScreenBalloonViewController setUseForcedOrientation:]
  -[CKFullScreenBalloonViewController setupReplyButton]
  -[CKFullScreenBalloonViewController dismissTapGestureRecognized:]
  -[CKFullScreenBalloonViewController addTapRecognizerWithTarget:action:]
  -[CKFullScreenBalloonViewController performInitialAnimations]
  -[CKFullScreenBalloonViewController performClosingAnimationsAnimated:withSendAnimation:withCompletion:]
  -[CKFullScreenBalloonViewController supplementaryLayoutContext]
  -[CKFullScreenBalloonViewController forcedOrientation]
  -[CKFullScreenBalloonViewController setReplyButton:]
  -[CKFullScreenBalloonViewController viewDidAppear:]
  -[CKFullScreenBalloonViewController _performClosingAnimationsAnimated:withSendAnimation:withCompletion:]
  -[CKFullScreenBalloonViewController performSendAndCloseAnimationWithCompletion:]
  -[CKFullScreenBalloonViewController balloonWrapperView]
  -[CKFullScreenBalloonViewController initWithChatItem:gradientReferenceView:isGroupConversation:delegate:]
  -[CKFullScreenBalloonViewController replyButtonPressed:]
  -[CKFullScreenBalloonViewController dismissImmediatelyWithNoAnimations]
  -[CKFullScreenBalloonViewController useForcedOrientation]
  -[CKFullScreenBalloonViewController shouldAutorotate]
  -[CKFullScreenBalloonViewController wantsWindowedPresentation]
  -[CKFullScreenBalloonViewController setWantsWindowedPresentation:]
  -[CKFullScreenBalloonViewController preserveModalPresentationStyle]
  -[CKFullScreenBalloonViewController setPreserveModalPresentationStyle:]
  -[CKFullScreenBalloonViewController constrainToPresentingVCBounds]
  -[CKFullScreenBalloonViewController forceWindowedPresentation]
  -[CKFullScreenBalloonViewController chatItem]
  -[CKFullScreenBalloonViewController gestureRecognizer:shouldReceiveTouch:]
  -[CKFullScreenBalloonViewController viewWillAppear:]
  -[CKFullScreenBalloonViewController delegate]
  -[CKFullScreenBalloonViewController dealloc]
  -[CKFullScreenBalloonViewController loadView]
  -[CKFullScreenBalloonViewController tapRecognizer]
  -[CKFullScreenBalloonViewController setTapRecognizer:]
  -[CKFullScreenBalloonViewController viewDidDisappear:]
  -[CKFullScreenBalloonViewController messageAcknowledgmentPickerViewController:didPickAcknowledgment:]
  -[CKFullScreenBalloonViewController setSupplementaryLayoutChatItem:]
  -[CKFullScreenBalloonViewController setSupplementaryLayoutContext:]


CKImageBalloonView : CKBalloonView <CKAnimationTimerObserver>
 @property  NSArray *frames
 @property  UIImageView *irisBadgeView
 @property  unsigned long animationFrameOffset
 @property  CKAnimatedImage *animatedImage
 @property  CKBalloonImageView *tailMask
 @property  CKBalloonImageView *outlineMask
 @property  BOOL suppressMask
 @property  BOOL isIrisAsset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKImageBalloonView clearFilters]
  -[CKImageBalloonView overlayColor]
  -[CKImageBalloonView setSuppressMask:]
  -[CKImageBalloonView prepareForDisplay]
  -[CKImageBalloonView outlineMask]
  -[CKImageBalloonView tailMask]
  -[CKImageBalloonView .cxx_destruct]
  -[CKImageBalloonView setCanUseOpaqueMask:]
  -[CKImageBalloonView setFrames:]
  -[CKImageBalloonView layoutSubviews]
  -[CKImageBalloonView setTailMask:]
  -[CKImageBalloonView setOutlineMask:]
  -[CKImageBalloonView configureForComposition:]
  -[CKImageBalloonView setAnimationFrameOffset:]
  -[CKImageBalloonView animationFrameOffset]
  -[CKImageBalloonView frames]
  -[CKImageBalloonView isIrisAsset]
  -[CKImageBalloonView suppressMask]
  -[CKImageBalloonView irisBadgeView]
  -[CKImageBalloonView setIrisBadgeView:]
  -[CKImageBalloonView animationTimerFired:]
  -[CKImageBalloonView prepareForReuse]
  -[CKImageBalloonView configureForTranscriptPlugin:]
  -[CKImageBalloonView configureForMessagePart:]
  -[CKImageBalloonView addFilter:]
  -[CKImageBalloonView initWithFrame:]
  -[CKImageBalloonView invisibleInkEffectViewClass]
  -[CKImageBalloonView invisibleInkEffectViewWasUncovered]
  -[CKImageBalloonView attachInvisibleInkEffectView]
  -[CKImageBalloonView detachInvisibleInkEffectView]
  -[CKImageBalloonView didMoveToWindow]
  -[CKImageBalloonView setIsIrisAsset:]
  -[CKImageBalloonView dealloc]
  -[CKImageBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKImageBalloonView animatedImage]
  -[CKImageBalloonView updateAnimationTimerObserving]
  -[CKImageBalloonView setHasTail:]
  -[CKImageBalloonView invisibleInkEffectViewWasSuspended]
  -[CKImageBalloonView invisibleInkEffectViewWasResumed]
  -[CKImageBalloonView imageForInvisibleInkEffectView]
  -[CKImageBalloonView needsGroupOpacity]
  -[CKImageBalloonView configureForMediaObject:previewWidth:orientation:]
  -[CKImageBalloonView setAnimatedImage:]
  -[CKImageBalloonView configureForMediaObject:previewWidth:orientation:hasInvisibleInkEffect:]


CKExpirableMessageChatItem : CKAttachmentMessagePartChatItem
 @property  BOOL isPlayed
 @property  BOOL isSaved

  // instance methods
  -[CKExpirableMessageChatItem isPlayed]
  -[CKExpirableMessageChatItem canExport]
  -[CKExpirableMessageChatItem canCopy]
  -[CKExpirableMessageChatItem isSaved]
  -[CKExpirableMessageChatItem canSendAsTextMessage]
  -[CKExpirableMessageChatItem canForward]


CKBadgeView : UIView
 @property  UILabel *countLabel
 @property  unsigned long value

  // instance methods
  -[CKBadgeView .cxx_destruct]
  -[CKBadgeView layoutSubviews]
  -[CKBadgeView countLabel]
  -[CKBadgeView sizeThatFits:]
  -[CKBadgeView setValue:]
  -[CKBadgeView initWithFrame:]
  -[CKBadgeView value]


CKMNavbarCanvasView : UIView
 @property  UISearchBar *searchBarView
 @property  UIButton *composeButtonView
 @property  BOOL shouldLayoutForCollapsedWidth

  // instance methods
  -[CKMNavbarCanvasView .cxx_destruct]
  -[CKMNavbarCanvasView clearAllItemViews]
  -[CKMNavbarCanvasView layoutSubviews]
  -[CKMNavbarCanvasView init]
  -[CKMNavbarCanvasView _layoutForDisplayBelowToolbar]
  -[CKMNavbarCanvasView searchBarView]
  -[CKMNavbarCanvasView _layoutForDisplayInNavbar]
  -[CKMNavbarCanvasView shouldLayoutForCollapsedWidth]
  -[CKMNavbarCanvasView setSearchBarView:]
  -[CKMNavbarCanvasView setShouldLayoutForCollapsedWidth:]
  -[CKMNavbarCanvasView composeButtonView]
  -[CKMNavbarCanvasView initWithFrame:]
  -[CKMNavbarCanvasView setComposeButtonView:]


CKGenericPhotoStackBalloonView : CKBalloonView <PXAssetsDataSourceManagerObserver>
 @property  PXMessagesStackView *stackView
 @property  UIView<CKGradientReferenceView> *gradientReferenceView
 @property  PXUIMediaProvider *mediaProvider
 @property  PXAssetsDataSourceManager *dataSourceManager
 @property  PXAssetReference *currentAssetReference
 @property  BOOL wantsContactImageLayout
 @property  double horizontalContentMargin
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKGenericPhotoStackBalloonView stackView]
  -[CKGenericPhotoStackBalloonView setMediaProvider:]
  -[CKGenericPhotoStackBalloonView currentAssetReference]
  -[CKGenericPhotoStackBalloonView prepareForDisplay]
  -[CKGenericPhotoStackBalloonView dataSourceManager]
  -[CKGenericPhotoStackBalloonView .cxx_destruct]
  -[CKGenericPhotoStackBalloonView mediaProvider]
  -[CKGenericPhotoStackBalloonView layoutSubviews]
  -[CKGenericPhotoStackBalloonView _createStackView]
  -[CKGenericPhotoStackBalloonView horizontalContentMarginForSize:]
  -[CKGenericPhotoStackBalloonView horizontalContentMargin]
  -[CKGenericPhotoStackBalloonView _scrollTrailingAnimated:]
  -[CKGenericPhotoStackBalloonView pageRightAnimated:]
  -[CKGenericPhotoStackBalloonView _scrollLeadingAnimated:]
  -[CKGenericPhotoStackBalloonView _additionalItemsCountDidChange]
  -[CKGenericPhotoStackBalloonView setHorizontalContentMarginAdjustment:edge:]
  -[CKGenericPhotoStackBalloonView pageLeftAnimated:]
  -[CKGenericPhotoStackBalloonView setWantsContactImageLayout:]
  -[CKGenericPhotoStackBalloonView prepareForReuse]
  -[CKGenericPhotoStackBalloonView gradientReferenceView]
  -[CKGenericPhotoStackBalloonView setHasOverlay:autoDismiss:]
  -[CKGenericPhotoStackBalloonView setGradientReferenceView:]
  -[CKGenericPhotoStackBalloonView setDataSourceManager:]
  -[CKGenericPhotoStackBalloonView wantsContactImageLayout]
  -[CKGenericPhotoStackBalloonView observable:didChange:context:]
  -[CKGenericPhotoStackBalloonView createOverlayImageView]


CKPendingMomentSharePhotoStackBalloonView : CKGenericPhotoStackBalloonView
 @property  <CKPendingMomentSharePhotoStackBalloonViewDelegate> *delegate

  // instance methods
  -[CKPendingMomentSharePhotoStackBalloonView prepareForDisplay]
  -[CKPendingMomentSharePhotoStackBalloonView handleTap:]
  -[CKPendingMomentSharePhotoStackBalloonView _createStackView]
  -[CKPendingMomentSharePhotoStackBalloonView configureForMessagePart:]
  -[CKPendingMomentSharePhotoStackBalloonView initWithFrame:]


CKPhotoStackBalloonView : CKGenericPhotoStackBalloonView <PXMessagesStackViewDelegate>
 @property  <CKPhotoStackBalloonViewDelegate> *delegate
 @property  CKMediaObjectImageProvider *mediaProvider
 @property  CKMediaObjectAssetDataSourceManager *dataSourceManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKPhotoStackBalloonView prepareForDisplay]
  -[CKPhotoStackBalloonView _createStackView]
  -[CKPhotoStackBalloonView _additionalItemsCountDidChange]
  -[CKPhotoStackBalloonView prepareForReuse]
  -[CKPhotoStackBalloonView _updateAdditionalItemsCount]
  -[CKPhotoStackBalloonView stackView:didSelectAssetReference:]
  -[CKPhotoStackBalloonView stackViewDidSelectAdditionalItemsCard:]
  -[CKPhotoStackBalloonView stackView:didChangeCurrentAssetReference:isProgrammaticChange:didChangeIndex:]
  -[CKPhotoStackBalloonView stackView:shouldAutoplayAsset:]
  -[CKPhotoStackBalloonView removeTransitionView]
  -[CKPhotoStackBalloonView transitionViewForCurrentItem:sourceFrame:]
  -[CKPhotoStackBalloonView configureForMessagePart:]


CKStarkManager : NSObject <CPTemplateApplicationSceneDelegate, CPInterfaceControllerDelegate, UISceneDelegate>
 @property  CKStarkConversationController *conversationController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKStarkManager isCarPlayConnected]
  +[CKStarkManager _directActionSource]
  +[CKStarkManager activateForRecipient:]
  +[CKStarkManager _activateSiriWithContext:]
  +[CKStarkManager activateForConversation:]

  // instance methods
  -[CKStarkManager scene:willConnectToSession:options:]
  -[CKStarkManager scene:openURLContexts:]
  -[CKStarkManager .cxx_destruct]
  -[CKStarkManager openSMSURL:]
  -[CKStarkManager openURL:sourceApplication:]
  -[CKStarkManager templateApplicationScene:didConnectInterfaceController:]
  -[CKStarkManager templateApplicationScene:didDisconnectInterfaceController:]
  -[CKStarkManager conversationController]
  -[CKStarkManager setConversationController:]


CKFeedCollectionViewLayout : UICollectionViewLayout
 @property  <CKFeedCollectionViewLayoutDatasource> *feedDatasource
 @property  unsigned long compositeLayoutSection
 @property  long long flowDirection
 @property  unsigned int flowDirectionEdge
 @property  {CGSize=dd} sectionReferenceSize
 @property  {CGSize=dd} interTileSpacing
 @property  {UIEdgeInsets=dddd} captionPadding
 @property  {CGSize=dd} noCaptionSpacing
 @property  BOOL shouldDisplayCaptionsBelowBatches
 @property  BOOL shouldDisplaySectionHeadersBelowSections
 @property  BOOL shouldFloatThumbnails
 @property  double thumbnailSpacing
 @property  BOOL shouldFloatSectionHeaders
 @property  double sectionHeaderBackgroundHeight
 @property  BOOL shouldFloatWithEase
 @property  BOOL shouldFloatOverShortDistances
 @property  double floatingBottomDecorationHeight
 @property  {UIEdgeInsets=dddd} floatPadding

  // instance methods
  -[CKFeedCollectionViewLayout _delegate]
  -[CKFeedCollectionViewLayout _getSizeForVerticalFlowDirection:headerSize:footerSize:fixedLayoutAttributes:tileLayoutAttributes:floatingLayoutAttributes:type:forSection:isJoined:]
  -[CKFeedCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[CKFeedCollectionViewLayout _getSizeForHorizontalFlowDirection:headerSize:footerSize:fixedLayoutAttributes:tileLayoutAttributes:floatingLayoutAttributes:type:forSection:isJoined:]
  -[CKFeedCollectionViewLayout invalidationContextForBoundsChange:]
  -[CKFeedCollectionViewLayout prepareLayout]
  -[CKFeedCollectionViewLayout collectionViewContentSize]
  -[CKFeedCollectionViewLayout .cxx_destruct]
  -[CKFeedCollectionViewLayout feedDatasource]
  -[CKFeedCollectionViewLayout layoutAttributesForElementsInRect:]
  -[CKFeedCollectionViewLayout floatPadding]
  -[CKFeedCollectionViewLayout flowDirection]
  -[CKFeedCollectionViewLayout shouldFloatSectionHeaders]
  -[CKFeedCollectionViewLayout shouldFloatThumbnails]
  -[CKFeedCollectionViewLayout floatingBottomDecorationHeight]
  -[CKFeedCollectionViewLayout sectionHeaderBackgroundHeight]
  -[CKFeedCollectionViewLayout _updateSectionLayoutInfosIfNecessary]
  -[CKFeedCollectionViewLayout _updateGlobalLayoutInfoWithOptions:sectionsWithUpdatedGroupIDs:]
  -[CKFeedCollectionViewLayout _updateLayoutInfoForSection:ignoreSizeChange:]
  -[CKFeedCollectionViewLayout _adjustFloatingLayoutAttributes:inSection:]
  -[CKFeedCollectionViewLayout _enumerateSectionsInRect:withBlock:]
  -[CKFeedCollectionViewLayout compositeLayoutSection]
  -[CKFeedCollectionViewLayout enumerateImageElementsInRect:usingBlock:]
  -[CKFeedCollectionViewLayout _getSize:headerSize:footerSize:fixedLayoutAttributes:tileLayoutAttributes:floatingLayoutAttributes:type:forSection:isJoined:]
  -[CKFeedCollectionViewLayout _sectionAtIndex:sizeDidChangeFrom:to:]
  -[CKFeedCollectionViewLayout shouldFloatOverShortDistances]
  -[CKFeedCollectionViewLayout shouldFloatWithEase]
  -[CKFeedCollectionViewLayout sectionsJoinedWithSection:]
  -[CKFeedCollectionViewLayout interTileSpacing]
  -[CKFeedCollectionViewLayout captionPadding]
  -[CKFeedCollectionViewLayout noCaptionSpacing]
  -[CKFeedCollectionViewLayout shouldDisplayCaptionsBelowBatches]
  -[CKFeedCollectionViewLayout thumbnailSpacing]
  -[CKFeedCollectionViewLayout shouldDisplaySectionHeadersBelowSections]
  -[CKFeedCollectionViewLayout frameForSection:]
  -[CKFeedCollectionViewLayout flowDirectionEdge]
  -[CKFeedCollectionViewLayout numberOfTilesOmittedInSection:]
  -[CKFeedCollectionViewLayout indexPathForImageElementAtPoint:]
  -[CKFeedCollectionViewLayout frameForTileAtIndexPath:]
  -[CKFeedCollectionViewLayout updateCollectionViewWithDeletedSections:insertedSections:updatedSections:]
  -[CKFeedCollectionViewLayout setFeedDatasource:]
  -[CKFeedCollectionViewLayout setCompositeLayoutSection:]
  -[CKFeedCollectionViewLayout setFlowDirection:]
  -[CKFeedCollectionViewLayout setThumbnailSpacing:]
  -[CKFeedCollectionViewLayout setInterTileSpacing:]
  -[CKFeedCollectionViewLayout setCaptionPadding:]
  -[CKFeedCollectionViewLayout setNoCaptionSpacing:]
  -[CKFeedCollectionViewLayout setShouldDisplayCaptionsBelowBatches:]
  -[CKFeedCollectionViewLayout setShouldFloatThumbnails:]
  -[CKFeedCollectionViewLayout sectionReferenceSize]
  -[CKFeedCollectionViewLayout setSectionReferenceSize:]
  -[CKFeedCollectionViewLayout invalidateLayoutAndCache]
  -[CKFeedCollectionViewLayout setShouldDisplaySectionHeadersBelowSections:]
  -[CKFeedCollectionViewLayout setShouldFloatSectionHeaders:]
  -[CKFeedCollectionViewLayout setSectionHeaderBackgroundHeight:]
  -[CKFeedCollectionViewLayout setFloatPadding:]
  -[CKFeedCollectionViewLayout setShouldFloatWithEase:]
  -[CKFeedCollectionViewLayout setShouldFloatOverShortDistances:]
  -[CKFeedCollectionViewLayout setFloatingBottomDecorationHeight:]
  -[CKFeedCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[CKFeedCollectionViewLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[CKFeedCollectionViewLayout layoutAttributesForDecorationViewOfKind:atIndexPath:]


CKFeedCollectionViewSectionLayoutInfo : NSObject
 @property  {CGPoint=dd} origin
 @property  {CGSize=dd} size
 @property  {CGSize=dd} headerSize
 @property  {CGSize=dd} footerSize
 @property  {UIEdgeInsets=dddd} margins
 @property  NSArray *fixedLayoutAttributes
 @property  NSArray *tileLayoutAttributes
 @property  NSArray *floatingLayoutAttributes
 @property  BOOL hidden
 @property  long long sectionType
 @property  long long previousVisibleSection
 @property  long long nextVisibleSection
 @property  long long firstJoinedSection
 @property  long long lastJoinedSection
 @property  id groupID
 @property  long long numberOfTilesOmitted
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame

  // instance methods
  -[CKFeedCollectionViewSectionLayoutInfo groupID]
  -[CKFeedCollectionViewSectionLayoutInfo setGroupID:]
  -[CKFeedCollectionViewSectionLayoutInfo margins]
  -[CKFeedCollectionViewSectionLayoutInfo setMargins:]
  -[CKFeedCollectionViewSectionLayoutInfo origin]
  -[CKFeedCollectionViewSectionLayoutInfo setOrigin:]
  -[CKFeedCollectionViewSectionLayoutInfo .cxx_destruct]
  -[CKFeedCollectionViewSectionLayoutInfo isHidden]
  -[CKFeedCollectionViewSectionLayoutInfo setSectionType:]
  -[CKFeedCollectionViewSectionLayoutInfo init]
  -[CKFeedCollectionViewSectionLayoutInfo setSize:]
  -[CKFeedCollectionViewSectionLayoutInfo headerSize]
  -[CKFeedCollectionViewSectionLayoutInfo footerSize]
  -[CKFeedCollectionViewSectionLayoutInfo setHeaderSize:]
  -[CKFeedCollectionViewSectionLayoutInfo setFooterSize:]
  -[CKFeedCollectionViewSectionLayoutInfo floatingLayoutAttributes]
  -[CKFeedCollectionViewSectionLayoutInfo lastJoinedSection]
  -[CKFeedCollectionViewSectionLayoutInfo fixedLayoutAttributes]
  -[CKFeedCollectionViewSectionLayoutInfo firstJoinedSection]
  -[CKFeedCollectionViewSectionLayoutInfo numberOfTilesOmitted]
  -[CKFeedCollectionViewSectionLayoutInfo tileLayoutAttributes]
  -[CKFeedCollectionViewSectionLayoutInfo setFirstJoinedSection:]
  -[CKFeedCollectionViewSectionLayoutInfo setLastJoinedSection:]
  -[CKFeedCollectionViewSectionLayoutInfo setNextVisibleSection:]
  -[CKFeedCollectionViewSectionLayoutInfo setPreviousVisibleSection:]
  -[CKFeedCollectionViewSectionLayoutInfo previousVisibleSection]
  -[CKFeedCollectionViewSectionLayoutInfo setFixedLayoutAttributes:]
  -[CKFeedCollectionViewSectionLayoutInfo setTileLayoutAttributes:]
  -[CKFeedCollectionViewSectionLayoutInfo setFloatingLayoutAttributes:]
  -[CKFeedCollectionViewSectionLayoutInfo nextVisibleSection]
  -[CKFeedCollectionViewSectionLayoutInfo frame]
  -[CKFeedCollectionViewSectionLayoutInfo setNumberOfTilesOmitted:]
  -[CKFeedCollectionViewSectionLayoutInfo size]
  -[CKFeedCollectionViewSectionLayoutInfo setHidden:]
  -[CKFeedCollectionViewSectionLayoutInfo sectionType]


CKDetailsNavigationController : UINavigationControllerAdaptivePresentationCollectionView
 @property  BOOL isDetached

  // instance methods
  -[CKDetailsNavigationController setIsDetached:]
  -[CKDetailsNavigationController isDetached]
  -[CKDetailsNavigationController isModalInPresentation]


CKDetailsTableView : UITableView
  // instance methods
  -[CKDetailsTableView allowsFooterViewsToFloat]
  -[CKDetailsTableView allowsHeaderViewsToFloat]
  -[CKDetailsTableView _sceneDraggingBehaviorOnPan]


CKDetailsController : CKScrollViewController <FMFMapViewControllerDelegate, UIViewControllerPreviewingDelegate, CKDetailsAddGroupNameViewDelegate, UITextViewDelegate, CKDetailsContactsManagerDelegate, CNAvatarViewDelegate, CKDetailsContactsTableViewCellDelegate, CKBusinessInfoViewDelegate, CKDetailsDownloadAttachmentsHeaderFooterViewDelegate, CKDetailsSearchControllerDelegate, UIImagePickerControllerDelegate, CNGroupIdentityHeaderViewControllerDelegate, CNVisualIdentityPickerViewControllerDelegate, UINavigationControllerDelegate, UITableViewDelegate, UITableViewDataSource>
 @property  CKDetailsTableView *tableView
 @property  UIVisualEffectView *visualEffectView
 @property  CKDetailsGroupNameCell *groupNameCell
 @property  CKGroupPhotoCell *groupPhotoCell
 @property  double showMoreContactCellHeight
 @property  double addContactCellHeight
 @property  double groupPhotoHeaderHeight
 @property  double simLabelCellHeight
 @property  double tuConversationCellHeight
 @property  NSData *selectedImageData
 @property  CKDetailsAddGroupNameView *groupNameView
 @property  CKDetailsMapViewCell *mapViewCell
 @property  CKDetailsSIMCell *simCell
 @property  CKDetailsLocationShareCell *locationShareCell
 @property  CKDetailsLocationStringCell *locationStringCell
 @property  CKDetailsSIMCell *simSwitchCell
 @property  CKTranscriptDetailsResizableCell *locationSendCell
 @property  CKTranscriptDetailsResizableCell *locationStartShareCell
 @property  CKTranscriptDetailsResizableCell *openInContactsCell
 @property  CKDetailsCell *changeGroupNamePhotoCell
 @property  CKDetailsSearchViewController *searchViewController
 @property  CNGroupIdentityHeaderViewController *groupPhotoHeaderViewController
 @property  CKNavigationController *groupNavigationController
 @property  UIButton *screenShareContextButton
 @property  CKGroupRecipientSelectionController *addRecipientsController
 @property  CKDetailsContactsManager *contactsManager
 @property  BOOL fmfEnabled
 @property  BOOL fmfRestricted
 @property  FMFMapViewController *mapViewController
 @property  UITextView *locationSharingTextView
 @property  CKDetailsDownloadAttachmentsHeaderFooterView *downloadAttachmentsFooterView
 @property  UITextView *expanseActivityTextView
 @property  UITextView *sharedWithYouFooterTextView
 @property  CKBusinessInfoView *businessInfoView
 @property  NSTimer *fmfUpdateTimer
 @property  CNContactStore *suggestionsEnabledContactStore
 @property  CKEntity *presentedEntity
 @property  BOOL isContactsSectionCollapsed
 @property  BOOL shouldCollapseContactsSection
 @property  double contentOffsetYShiftAfterKeyboardNotification
 @property  id selfWeakWrapper
 @property  BOOL shouldShowDownloadMoreCell
 @property  BOOL didPerformPurgedAttachmentsCheck
 @property  unsigned long undownloadedPhotoAttachmentCount
 @property  unsigned long downloadButtonState
 @property  BOOL isDisplayingPhotos
 @property  BOOL needsContactsReload
 @property  NSNumber *isSharingFocusStatus
 @property  NSArray *actions
 @property  <CKDetailsControllerDelegate> *detailsControllerDelegate
 @property  CKConversation *conversation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsController saveGroupPhotoDataAndUpdateParticipants:forConversation:]
  +[CKDetailsController updateParticipantsWithGroupPhotoAtPath:forConversation:]

  // instance methods
  -[CKDetailsController contactsManager]
  -[CKDetailsController setTableView:]
  -[CKDetailsController contentScrollView]
  -[CKDetailsController setActions:]
  -[CKDetailsController tableView:canEditRowAtIndexPath:]
  -[CKDetailsController setVisualEffectView:]
  -[CKDetailsController tableView:viewForHeaderInSection:]
  -[CKDetailsController traitCollectionDidChange:]
  -[CKDetailsController showMoreContactCellHeight]
  -[CKDetailsController rowForAddMemberCell]
  -[CKDetailsController addContactCellHeight]
  -[CKDetailsController _canLeaveConversation]
  -[CKDetailsController tuConversationCellHeight]
  -[CKDetailsController shouldShowBusinessInfoFooter]
  -[CKDetailsController calculateHeightForExpanseActivityHeader]
  -[CKDetailsController shouldDisplayHeaderForSection:]
  -[CKDetailsController _menuConfigForContactsCell:]
  -[CKDetailsController adjustedViewModelIndexForIndexPath:]
  -[CKDetailsController _canRemoveRecipientAtIndexPath:]
  -[CKDetailsController tableView:heightForHeaderInSection:]
  -[CKDetailsController numberOfSectionsInTableView:]
  -[CKDetailsController simCell]
  -[CKDetailsController calculateHeightForLocationSharingFooter]
  -[CKDetailsController initializeBusinessInfoViewIfNecessary]
  -[CKDetailsController businessInfoView]
  -[CKDetailsController downloadButtonState]
  -[CKDetailsController fmfRestricted]
  -[CKDetailsController calculateHeightForShareAutomaticallyFooter]
  -[CKDetailsController isDisplayingPhotos]
  -[CKDetailsController expanseActivityTextView]
  -[CKDetailsController sharedWithYouFooterTextView]
  -[CKDetailsController downloadButtonText]
  -[CKDetailsController expanseActivityHeaderViewForSection:]
  -[CKDetailsController shouldShowActiveDeviceSwitchFooter]
  -[CKDetailsController locationFooterViewForSection:]
  -[CKDetailsController shouldShowDownloadMoreCell]
  -[CKDetailsController businessInfoFooterViewForSection:]
  -[CKDetailsController sharedWithYouFooterViewForSection:]
  -[CKDetailsController downloadAttachmentsFooterViewForSection:]
  -[CKDetailsController shareLocationAction]
  -[CKDetailsController tableView:numberOfRowsInSection:]
  -[CKDetailsController groupNameView]
  -[CKDetailsController isGroupChat]
  -[CKDetailsController setDownloadAttachmentsFooterView:]
  -[CKDetailsController _updateDownloadFooterView]
  -[CKDetailsController initializeLocationSharingTextViewIfNecessary]
  -[CKDetailsController isContactsSectionCollapsed]
  -[CKDetailsController _moreThanMinNumberOfParticipantsInGroup]
  -[CKDetailsController presentFullFMFMapViewController]
  -[CKDetailsController mapViewCell]
  -[CKDetailsController _presentRemoveRecipientSheetForHandle:fromView:]
  -[CKDetailsController _presentGroupNameAndPhotoEditor]
  -[CKDetailsController _showContactCardForEntity:fromView:]
  -[CKDetailsController tableView:heightForRowAtIndexPath:]
  -[CKDetailsController .cxx_destruct]
  -[CKDetailsController expandContactsSection]
  -[CKDetailsController collapseContactsSection]
  -[CKDetailsController presentGroupRecipientSelectionControllerAtIndexPath:]
  -[CKDetailsController presentLeaveActionSheetFromView:]
  -[CKDetailsController initWithConversation:]
  -[CKDetailsController setGroupNameView:]
  -[CKDetailsController _allRecipientsAlreadyFollowingLocation]
  -[CKDetailsController tableView:didSelectRowAtIndexPath:]
  -[CKDetailsController setExpanseActivityTextView:]
  -[CKDetailsController setBusinessInfoView:]
  -[CKDetailsController downloadAttachmentsText]
  -[CKDetailsController contentSizeCategoryDidChange:]
  -[CKDetailsController viewDidLoad]
  -[CKDetailsController downloadAttachmentsFooterView]
  -[CKDetailsController openInContacts]
  -[CKDetailsController setGroupNameCell:]
  -[CKDetailsController mapViewController]
  -[CKDetailsController fmfHandlesFromIMHandles:]
  -[CKDetailsController setMapViewController:]
  -[CKDetailsController setMapViewCell:]
  -[CKDetailsController updateLocationForRecipient:]
  -[CKDetailsController tuConversationCellForIndexPath:]
  -[CKDetailsController headerViewControllerDidTapActionButton:]
  -[CKDetailsController groupHeaderCellForIndexPath:]
  -[CKDetailsController _configureSeparatorForContactCell:indexPath:]
  -[CKDetailsController tableView:cellForRowAtIndexPath:]
  -[CKDetailsController rowForFirstContactCell]
  -[CKDetailsController simSwitchCell]
  -[CKDetailsController simSwitcherMenu]
  -[CKDetailsController _tableViewCellForSendLocation]
  -[CKDetailsController _tableViewCellForSharingLocation:]
  -[CKDetailsController _handleKeyboardWillHideNotification:]
  -[CKDetailsController locationSendCell]
  -[CKDetailsController locationShareCell]
  -[CKDetailsController _conversationOfferTimeExpiration]
  -[CKDetailsController locationShareMenu]
  -[CKDetailsController canBecomeFirstResponder]
  -[CKDetailsController createDNDCellAtIndexPath:]
  -[CKDetailsController createReadReceiptsCellAtIndexPath:]
  -[CKDetailsController createShareFocusStatusCellAtIndexPath:]
  -[CKDetailsController _configureSeparatorForOptionCell:indexPath:]
  -[CKDetailsController doNotDisturbValueChange:]
  -[CKDetailsController readReceiptsSwitchValueChanged:]
  -[CKDetailsController actions]
  -[CKDetailsController _chatParticipantsChangedNotification:]
  -[CKDetailsController shareFocusStatusSwitchValueChanged:]
  -[CKDetailsController isSharingFocusStatus]
  -[CKDetailsController autoDonationSwitchValueChanged:]
  -[CKDetailsController setSearchViewController:]
  -[CKDetailsController childViewController:cellForIndexPath:]
  -[CKDetailsController setFmfEnabled:]
  -[CKDetailsController setFmfRestricted:]
  -[CKDetailsController handleActiveDeviceChanged:]
  -[CKDetailsController handleFriendshipStatusChanged:]
  -[CKDetailsController _handleLocationChanged:]
  -[CKDetailsController setupFMFTimerIfNecessary]
  -[CKDetailsController viewDidAppear:]
  -[CKDetailsController visualIdentityPickerDidCancel:]
  -[CKDetailsController _fmfExpirationDateIsValid]
  -[CKDetailsController updateTimedFMFState]
  -[CKDetailsController setFmfUpdateTimer:]
  -[CKDetailsController setShouldCollapseContactsSection:]
  -[CKDetailsController metricDSDSLineSwitchWithPreviousServiceName:newServiceName:isGroupConversation:]
  -[CKDetailsController visualIdentityPicker:didUpdatePhotoForVisualIdentity:withContactImage:]
  -[CKDetailsController switchSubscriptionToContext:]
  -[CKDetailsController updateLocationStringCellWithString:]
  -[CKDetailsController currentlyActiveFMFDevice]
  -[CKDetailsController setAddRecipientsController:]
  -[CKDetailsController setGroupNavigationController:]
  -[CKDetailsController handleDoneAction:]
  -[CKDetailsController setupFMF]
  -[CKDetailsController suggestionsEnabledContactStore]
  -[CKDetailsController groupNavigationController]
  -[CKDetailsController handleCancelAction:]
  -[CKDetailsController addRecipientsController]
  -[CKDetailsController presentingViewControllerForAvatarView:]
  -[CKDetailsController setSimCell:]
  -[CKDetailsController setSuggestionsEnabledContactStore:]
  -[CKDetailsController shouldCollapseContactsSection]
  -[CKDetailsController setPresentedEntity:]
  -[CKDetailsController _toggleSharingStateFromABCard]
  -[CKDetailsController presentedEntity]
  -[CKDetailsController groupPhotoCell]
  -[CKDetailsController _hideAllContactCellButtons]
  -[CKDetailsController _purgedAttachmentCount]
  -[CKDetailsController setDownloadButtonState:]
  -[CKDetailsController scrollViewDidScroll:]
  -[CKDetailsController selectedImageData]
  -[CKDetailsController tableView:shouldHighlightRowAtIndexPath:]
  -[CKDetailsController previewingContext:viewControllerForLocation:]
  -[CKDetailsController tableView:viewForFooterInSection:]
  -[CKDetailsController fmfMapViewController:didSelectHandle:]
  -[CKDetailsController fmfMapViewController:didDeselectHandle:]
  -[CKDetailsController annotationContactForHandle:]
  -[CKDetailsController detailsAddGroupNameView:didCommitGroupName:]
  -[CKDetailsController contactsCell:didHoverWithState:]
  -[CKDetailsController selfWeakWrapper]
  -[CKDetailsController tableView]
  -[CKDetailsController contactsCellDidTapFaceTimeVideoButton:]
  -[CKDetailsController contactsCellDidTapPhoneButton:]
  -[CKDetailsController contactsCellDidTapMessagesButton:]
  -[CKDetailsController screenSharingActionView]
  -[CKDetailsController _handleGroupPhotoChanged:]
  -[CKDetailsController tableView:willDisplayFooterView:forSection:]
  -[CKDetailsController businessInfoView:infoButtonTapped:]
  -[CKDetailsController userDidTapDownloadForAttachmentsFooterView:]
  -[CKDetailsController detailsSearchControllerContentDidChange:]
  -[CKDetailsController __im_ff_isInterstellarEnabled]
  -[CKDetailsController detailsSearchController:requestsPushOfSearchController:]
  -[CKDetailsController shouldDisplayFooterForSection:]
  -[CKDetailsController contactsInChat:forContactsKeyDescriptors:]
  -[CKDetailsController emailAddressesForChat:]
  -[CKDetailsController screenShareContextMenuForEntity:]
  -[CKDetailsController groupCellDidTapFaceTimeVideoButton:]
  -[CKDetailsController groupCellDidTapPhoneButton:]
  -[CKDetailsController locationStartShareCell]
  -[CKDetailsController editConversationCellForIndexPath:]
  -[CKDetailsController handleTapOnChromeAvatar:]
  -[CKDetailsController shouldShowGroupAddNameField]
  -[CKDetailsController setGroupPhotoCell:]
  -[CKDetailsController keyCommands]
  -[CKDetailsController adjustContentOffsetReloadingSharedAssetsContentViewCell]
  -[CKDetailsController annotationImageForHandle:]
  -[CKDetailsController setSelectedImageData:]
  -[CKDetailsController setLocationShareCell:]
  -[CKDetailsController locationStringCell]
  -[CKDetailsController setLocationStringCell:]
  -[CKDetailsController setSimSwitchCell:]
  -[CKDetailsController setLocationSendCell:]
  -[CKDetailsController setLocationStartShareCell:]
  -[CKDetailsController setOpenInContactsCell:]
  -[CKDetailsController setChangeGroupNamePhotoCell:]
  -[CKDetailsController setGroupPhotoHeaderViewController:]
  -[CKDetailsController setSharedWithYouFooterTextView:]
  -[CKDetailsController setSelfWeakWrapper:]
  -[CKDetailsController didPerformPurgedAttachmentsCheck]
  -[CKDetailsController setDidPerformPurgedAttachmentsCheck:]
  -[CKDetailsController undownloadedPhotoAttachmentCount]
  -[CKDetailsController setIsDisplayingPhotos:]
  -[CKDetailsController setUndownloadedPhotoAttachmentCount:]
  -[CKDetailsController needsContactsReload]
  -[CKDetailsController setNeedsContactsReload:]
  -[CKDetailsController textView:shouldInteractWithURL:inRange:]
  -[CKDetailsController setDetailsControllerDelegate:]
  -[CKDetailsController fmfEnabled]
  -[CKDetailsController viewWillDisappear:]
  -[CKDetailsController searchViewController]
  -[CKDetailsController contactsManagerViewModelsDidChange:]
  -[CKDetailsController viewDidLayoutSubviews]
  -[CKDetailsController scrollViewWillBeginDragging:]
  -[CKDetailsController viewWillAppear:]
  -[CKDetailsController tableView:willDisplayHeaderView:forSection:]
  -[CKDetailsController _chatAllowedByScreenTimeChanged:]
  -[CKDetailsController __im_ff_isExpanseEnabled]
  -[CKDetailsController setContactsManager:]
  -[CKDetailsController setConversation:]
  -[CKDetailsController _handleKeyboardWillShowNotification:]
  -[CKDetailsController spacePressed:]
  -[CKDetailsController tuConversation]
  -[CKDetailsController dealloc]
  -[CKDetailsController conversation]
  -[CKDetailsController indexPathForCell:]
  -[CKDetailsController inputAccessoryViewController]
  -[CKDetailsController screenSize]
  -[CKDetailsController groupNameCell]
  -[CKDetailsController tableView:heightForFooterInSection:]
  -[CKDetailsController tableView:editActionsForRowAtIndexPath:]
  -[CKDetailsController _lastAddressedHandleUpdateNotification:]
  -[CKDetailsController _chatAutoDonatingHandleUpdateNotification:]
  -[CKDetailsController _batchDownloadNotificationFired:]
  -[CKDetailsController fmfUpdateTimer]
  -[CKDetailsController sendCurrentLocation]
  -[CKDetailsController loadView]
  -[CKDetailsController avatarView:orderedPropertiesForProperties:category:]
  -[CKDetailsController _handleAddressBookChanged:]
  -[CKDetailsController _conversationListFinishedMerging:]
  -[CKDetailsController _handleGroupDisplayNameChanged:]
  -[CKDetailsController handleDoneButton:]
  -[CKDetailsController setupContactsManager]
  -[CKDetailsController setTuConversationCellHeight:]
  -[CKDetailsController _handleMultiWayStateChange:]
  -[CKDetailsController setAddContactCellHeight:]
  -[CKDetailsController setShowMoreContactCellHeight:]
  -[CKDetailsController setGroupPhotoHeaderHeight:]
  -[CKDetailsController setSimLabelCellHeight:]
  -[CKDetailsController setScreenShareContextButton:]
  -[CKDetailsController screenShareContextButton]
  -[CKDetailsController transparentNavBarAppearance]
  -[CKDetailsController isContactsSectionCollapsible]
  -[CKDetailsController setIsContactsSectionCollapsed:]
  -[CKDetailsController _determineFocusStatusSharingState]
  -[CKDetailsController defaultNavBarAppearance]
  -[CKDetailsController simCellText:]
  -[CKDetailsController detailsControllerDelegate]
  -[CKDetailsController computedPreferredContentSize]
  -[CKDetailsController setIsSharingFocusStatus:]
  -[CKDetailsController groupPhotoHeaderViewController]
  -[CKDetailsController updateManualScrollEdgeProgress]
  -[CKDetailsController conversationIsGroupSMS]
  -[CKDetailsController updateScreenSharingStatusAndViews]
  -[CKDetailsController labelForChat]
  -[CKDetailsController initializeSearchController]
  -[CKDetailsController _resetPurgedAttachmentCount]
  -[CKDetailsController _updateDownloadButtonStateIfNeeded]
  -[CKDetailsController shouldShowExpanseFeatures]
  -[CKDetailsController titleForBackButton]
  -[CKDetailsController tableView:contextMenuConfigurationForRowAtIndexPath:point:]
  -[CKDetailsController setContentOffsetYShiftAfterKeyboardNotification:]
  -[CKDetailsController contentOffsetYShiftAfterKeyboardNotification]
  -[CKDetailsController isContactViewController:]
  -[CKDetailsController locationSharingTextView]
  -[CKDetailsController setLocationSharingTextView:]
  -[CKDetailsController visualEffectView]
  -[CKDetailsController viewDidDisappear:]
  -[CKDetailsController navigationController:willShowViewController:animated:]
  -[CKDetailsController shouldShowFMFView]
  -[CKDetailsController shouldShowGroupCount]
  -[CKDetailsController visibleContactsRows]
  -[CKDetailsController shouldShowAddMemberCell]
  -[CKDetailsController hasTUConversation]
  -[CKDetailsController groupPhotoCellForIndexPath:]
  -[CKDetailsController shouldShowEnhancedGroupFeatures]
  -[CKDetailsController shouldShowSharedWithYouFeatures]
  -[CKDetailsController groupNameCellForIndexPath:]
  -[CKDetailsController changeGroupNamePhotoCell]
  -[CKDetailsController _showBrandCard]
  -[CKDetailsController openInContactsCell]
  -[CKDetailsController shouldShowLocationStringForOneToOneConversation]
  -[CKDetailsController fmfViewControllerCellForIndexPath:shouldShowLocation:]
  -[CKDetailsController groupCountCellForIndexPath:]
  -[CKDetailsController expanseActivityCellForIndexPath:]
  -[CKDetailsController contactsManagerCellForIndexPath:]
  -[CKDetailsController chatOptionsCellForIndexPath:]
  -[CKDetailsController locationShareCellForIndexPathRow:]
  -[CKDetailsController sharedWithYouCellForIndexPath:]
  -[CKDetailsController leaveCellForIndexPath:]
  -[CKDetailsController switchSubscriptionCellForIndexPathRow:]
  -[CKDetailsController searchAttachmentViewControllerCellForIndexPath:]
  -[CKDetailsController simTypeCellForIndexPath:]
  -[CKDetailsController setupGroupIdentityActionsForChat:]
  -[CKDetailsController conversationHasLeft]
  -[CKDetailsController _groupPhotoHeaderRequiredContactKeys]
  -[CKDetailsController groupPhotoHeaderHeight]
  -[CKDetailsController configureGroupPhotoHeaderForCell:]
  -[CKDetailsController calculateHeightForGroupPhotoHeader]
  -[CKDetailsController _heightForExpanseActivityCell]
  -[CKDetailsController shouldAddToVisibleContactRowCountForTUConversation]
  -[CKDetailsController rowForLastContact]
  -[CKDetailsController previewingContext:commitViewController:]
  -[CKDetailsController _countOfContactViewModels]
  -[CKDetailsController rowForShowMoreContactsCell]
  -[CKDetailsController rowForTUConversationCell]
  -[CKDetailsController _heightForContactCellAtIndexPath:]
  -[CKDetailsController simLabelCellHeight]
  -[CKDetailsController _heightForAuxContactCellAtIndexPath:]
  -[CKDetailsController switchToLabelForChat]
  -[CKDetailsController calculateHeightForSIMLabelCell]


CKVideoPlayerBalloonView : CKImageBalloonView <UIGestureRecognizerDelegate, AVPlayerViewControllerDelegate, CKReusableVideoPlayerDelegate>
 @property  UIView *playerView
 @property  CKReusableVideoPlayer *reusablePlayer
 @property  CKVideoPlayerReusePool *playerPool
 @property  BOOL observingSceneDisconnects
 @property  CKMovieMediaObject *mediaObject
 @property  <CKVideoPlayerBalloonViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKVideoPlayerBalloonView traitCollectionDidChange:]
  -[CKVideoPlayerBalloonView setMediaObject:]
  -[CKVideoPlayerBalloonView willMoveToWindow:]
  -[CKVideoPlayerBalloonView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKVideoPlayerBalloonView prepareForDisplay]
  -[CKVideoPlayerBalloonView .cxx_destruct]
  -[CKVideoPlayerBalloonView playerView]
  -[CKVideoPlayerBalloonView mediaObject]
  -[CKVideoPlayerBalloonView playerItem]
  -[CKVideoPlayerBalloonView layoutSubviews]
  -[CKVideoPlayerBalloonView applicationDidEnterBackground:]
  -[CKVideoPlayerBalloonView reusablePlayerDidStop]
  -[CKVideoPlayerBalloonView reusablePlayerDidStart]
  -[CKVideoPlayerBalloonView prepareForReuse]
  -[CKVideoPlayerBalloonView playerPool]
  -[CKVideoPlayerBalloonView gestureRecognizer:shouldReceiveTouch:]
  -[CKVideoPlayerBalloonView playerViewController]
  -[CKVideoPlayerBalloonView initWithFrame:]
  -[CKVideoPlayerBalloonView setPlayerView:]
  -[CKVideoPlayerBalloonView tapGestureRecognized:]
  -[CKVideoPlayerBalloonView gestureIsOurGesture:]
  -[CKVideoPlayerBalloonView cleanUpPlayerIfNeeded]
  -[CKVideoPlayerBalloonView showPlayerViewController]
  -[CKVideoPlayerBalloonView startPlayingInlineVideo]
  -[CKVideoPlayerBalloonView reusablePlayer]
  -[CKVideoPlayerBalloonView setReusablePlayer:]
  -[CKVideoPlayerBalloonView setPlayerPool:]
  -[CKVideoPlayerBalloonView pausePlayback]
  -[CKVideoPlayerBalloonView isObservingSceneDisconnects]
  -[CKVideoPlayerBalloonView setObservingSceneDisconnects:]
  -[CKVideoPlayerBalloonView doubleTapGestureRecognized:]
  -[CKVideoPlayerBalloonView configureForMediaObject:previewWidth:orientation:hasInvisibleInkEffect:]


CKEmojiBalloonView : CKImageBalloonView
  // instance methods
  -[CKEmojiBalloonView setOrientation:]
  -[CKEmojiBalloonView layoutSubviews]
  -[CKEmojiBalloonView initWithFrame:]
  -[CKEmojiBalloonView sizeThatFits:textAlignmentInsets:]


CKAnimatedStickerMediaObject : CKAnimatedImageMediaObject
  // class methods
  +[CKAnimatedStickerMediaObject shouldShadePreview]

  // instance methods
  -[CKAnimatedStickerMediaObject attachmentSummary:]


IMMockItemInfo : NSObject <NSSecureCoding>
 @property  long long type
 @property  BOOL outgoing

  // class methods
  +[IMMockItemInfo supportsSecureCoding]
  +[IMMockItemInfo defaultMockInfoArray]
  +[IMMockItemInfo encodedMockItemInfoArray:]
  +[IMMockItemInfo decodedMockItemInfoArray:]

  // instance methods
  -[IMMockItemInfo initWithCoder:]
  -[IMMockItemInfo outgoing]
  -[IMMockItemInfo type]
  -[IMMockItemInfo initWithMockItemType:outgoing:]
  -[IMMockItemInfo encodeWithCoder:]


IMMockChat : IMChat
 @property  NSArray *mockChatItems
 @property  IMHandle *incomingHandle
 @property  IMHandle *outgoingHandle
 @property  IMMessage *lastMockIMMessage
 @property  NSArray *extraParticipants
 @property  unsigned long mockUnreadMessageCount

  // instance methods
  -[IMMockChat participants]
  -[IMMockChat displayName]
  -[IMMockChat chatItems]
  -[IMMockChat recipient]
  -[IMMockChat .cxx_destruct]
  -[IMMockChat lastFinishedMessage]
  -[IMMockChat lastFinishedMessageDate]
  -[IMMockChat init]
  -[IMMockChat lastMessage]
  -[IMMockChat unreadMessageCount]
  -[IMMockChat messageCount]
  -[IMMockChat incomingHandle]
  -[IMMockChat setIncomingHandle:]
  -[IMMockChat setOutgoingHandle:]
  -[IMMockChat _chatItemFromMockItemInfo:atIndex:]
  -[IMMockChat _messageFromMockItemInfo:]
  -[IMMockChat setExtraParticipants:]
  -[IMMockChat extraParticipants]
  -[IMMockChat mockChatItems]
  -[IMMockChat mockUnreadMessageCount]
  -[IMMockChat deleteChatItems:]
  -[IMMockChat setMockChatItems:]
  -[IMMockChat outgoingHandle]
  -[IMMockChat addExtraParticipants:]
  -[IMMockChat loadMessagesBeforeDate:limit:loadImmediately:]
  -[IMMockChat deleteAllHistory]
  -[IMMockChat setupWithMockItemInfoArray:]
  -[IMMockChat appendMockItemWithInfo:]
  -[IMMockChat lastMockIMMessage]
  -[IMMockChat setLastMockIMMessage:]
  -[IMMockChat setMockUnreadMessageCount:]


CKMessageActionChatItem : CKMultilineStampChatItem
  // instance methods
  -[CKMessageActionChatItem sender]
  -[CKMessageActionChatItem actionType]
  -[CKMessageActionChatItem handle]
  -[CKMessageActionChatItem loadTranscriptText]


CKMediaObject : NSObject <QLPreviewItem>
 @property  NSString *previewFilenameExtension
 @property  id previewMetadata
 @property  <CKFileTransfer> *transfer
 @property  NSURL *cachedHighQualityFileURL
 @property  NSObject<OS_dispatch_group> *highQualityFetchInProgressGroup
 @property  CKMessageContext *messageContext
 @property  unsigned long oopPreviewRequestCount
 @property  BOOL cachedValidPreviewExists
 @property  NSURL *fileURL
 @property  BOOL forceInlinePreviewGeneration
 @property  NSString *transferGUID
 @property  NSData *data
 @property  NSString *filename
 @property  NSDictionary *transcoderUserInfo
 @property  NSString *mimeType
 @property  NSString *UTIType
 @property  int mediaType
 @property  BOOL canShareItem
 @property  BOOL needsAnimation
 @property  BOOL isFromMe
 @property  NSString *metricsCollectorMediaType
 @property  long long commSafetySensitive
 @property  BOOL generatePreviewOutOfProcess
 @property  BOOL validatePreviewFormat
 @property  BOOL isPhotosCompatible
 @property  UITraitCollection *transcriptTraitCollection
 @property  NSDate *time
 @property  BOOL shouldSuppressPreview
 @property  BOOL supportsUnknownSenderPreview
 @property  NSString *syndicationIdentifier
 @property  NSURL *previewItemURL
 @property  NSString *previewItemTitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKMediaObject iconCache]
  +[CKMediaObject isPreviewable]
  +[CKMediaObject shouldShadePreview]
  +[CKMediaObject __ck_attachmentItemClass]
  +[CKMediaObject canGeneratePreviewInMVSHostProcess]
  +[CKMediaObject UTITypes]
  +[CKMediaObject shouldUseTranscoderGeneratedPreviewSize]
  +[CKMediaObject shouldScaleUpPreview]
  +[CKMediaObject fallbackFilenamePrefix]
  +[CKMediaObject mediaClasses]

  // instance methods
  -[CKMediaObject fileManager]
  -[CKMediaObject cachedValidPreviewExists]
  -[CKMediaObject setCachedValidPreviewExists:]
  -[CKMediaObject icon]
  -[CKMediaObject validPreviewExistsAtURL:]
  -[CKMediaObject isPreviewable]
  -[CKMediaObject setTime:]
  -[CKMediaObject balloonViewClassForWidth:orientation:]
  -[CKMediaObject _balloonViewForClassWithWidth:orientation:]
  -[CKMediaObject _composeImageForBalloonView:colorType:]
  -[CKMediaObject composeImagesForEntryContentViewWidth:]
  -[CKMediaObject bbSize]
  -[CKMediaObject previewFilenameExtension]
  -[CKMediaObject savedPreviewFromURL:forOrientation:]
  -[CKMediaObject generateThumbnailFillToSize:contentAlignmentInsets:]
  -[CKMediaObject bbPreviewFillToSize:]
  -[CKMediaObject generateThumbnailForWidth:orientation:]
  -[CKMediaObject fileURL]
  -[CKMediaObject .cxx_destruct]
  -[CKMediaObject UTIType]
  -[CKMediaObject transferGUID]
  -[CKMediaObject forceInlinePreviewGeneration]
  -[CKMediaObject filename]
  -[CKMediaObject setForceInlinePreviewGeneration:]
  -[CKMediaObject canExport]
  -[CKMediaObject attachmentSummary:]
  -[CKMediaObject cacheAndPersistPreview:orientation:]
  -[CKMediaObject initWithTransfer:context:forceInlinePreview:]
  -[CKMediaObject mimeType]
  -[CKMediaObject transcriptTraitCollection]
  -[CKMediaObject data]
  -[CKMediaObject shouldShowViewer]
  -[CKMediaObject balloonViewClass]
  -[CKMediaObject previewForWidth:orientation:]
  -[CKMediaObject richIcon]
  -[CKMediaObject isEqual:]
  -[CKMediaObject downloadProgressImage]
  -[CKMediaObject downloadProgressString]
  -[CKMediaObject fileSizeString]
  -[CKMediaObject isDirectory]
  -[CKMediaObject isFromMe]
  -[CKMediaObject transfer]
  -[CKMediaObject time]
  -[CKMediaObject subtitle]
  -[CKMediaObject canShareItem]
  -[CKMediaObject location]
  -[CKMediaObject previewDispatchCache]
  -[CKMediaObject _transcodeControllerSharedInstance]
  -[CKMediaObject previewBalloonViewClass]
  -[CKMediaObject placeholderBalloonViewClass]
  -[CKMediaObject previewMetadata]
  -[CKMediaObject previewCacheKeyWithOrientation:]
  -[CKMediaObject previewCachesFileURLWithOrientation:extension:generateIntermediaries:]
  -[CKMediaObject title]
  -[CKMediaObject generatePreviewFromThumbnail:width:orientation:]
  -[CKMediaObject savePreview:toURL:forOrientation:]
  -[CKMediaObject shouldShowDisclosure]
  -[CKMediaObject previewItemURL]
  -[CKMediaObject syndicationIdentifier]
  -[CKMediaObject mediaType]
  -[CKMediaObject prewarmPreviewForWidth:orientation:]
  -[CKMediaObject transcoderGeneratedSizeForConstraints:]
  -[CKMediaObject dealloc]
  -[CKMediaObject needsAnimation]
  -[CKMediaObject canQuickSave]
  -[CKMediaObject inlineStickerBalloonViewClass]
  -[CKMediaObject _shouldDenyUTITypeFromRichIcon]
  -[CKMediaObject _qlThumbnailGeneratorSharedGenerator]
  -[CKMediaObject image:withBackgroundColor:]
  -[CKMediaObject _previewConstraintsForWidth:]
  -[CKMediaObject _sampleImageEdges:usingRect:forMostlyWhitePixels:otherPixels:]
  -[CKMediaObject transcodingPreviewConstraints]
  -[CKMediaObject transcodingPreviewPxSize]
  -[CKMediaObject commSafetySensitive]
  -[CKMediaObject ASTCDataFromImage:]
  -[CKMediaObject JPEGDataFromImage:]
  -[CKMediaObject generateIconWithURL:]
  -[CKMediaObject defaultPreviewWidth]
  -[CKMediaObject shouldSuppressPreview]
  -[CKMediaObject metricsCollectorMediaType]
  -[CKMediaObject shouldBeQuickLooked]
  -[CKMediaObject setTransfer:]
  -[CKMediaObject generateOOPPreviewForWidth:orientation:]
  -[CKMediaObject setMessageContext:]
  -[CKMediaObject transcoderUserInfo]
  -[CKMediaObject highQualityFetchInProgressGroup]
  -[CKMediaObject fetchHighQualityFile:]
  -[CKMediaObject cachedHighQualityFileURL]
  -[CKMediaObject setCachedHighQualityFileURL:]
  -[CKMediaObject setHighQualityFetchInProgressGroup:]
  -[CKMediaObject messageContext]
  -[CKMediaObject transcoderPreviewGenerationFailed]
  -[CKMediaObject supportsUnknownSenderPreview]
  -[CKMediaObject __im_ff_commSafetyUIEnabled]
  -[CKMediaObject pasteboardItemProvider]
  -[CKMediaObject rtfDocumentItemsWithFormatString:selectedTextRange:]
  -[CKMediaObject generatePreviewOutOfProcess]
  -[CKMediaObject validatePreviewFormat]
  -[CKMediaObject isPhotosCompatible]
  -[CKMediaObject isPromisedItem]
  -[CKMediaObject setTranscriptTraitCollection:]
  -[CKMediaObject oopPreviewRequestCount]
  -[CKMediaObject setOopPreviewRequestCount:]
  -[CKMediaObject invisibleInkEffectImageWithPreview:]


CKConversationDNDMigrator : NSObject
  // instance methods
  -[CKConversationDNDMigrator performDNDMigrationIfNecessary]
  -[CKConversationDNDMigrator _dnd_deprecated_globalIdentifierForChat:]
  -[CKConversationDNDMigrator migrateDNDInfoIfNeeded]


CKImageMediaObject : CKMediaObject
 @property  BOOL isSticker
 @property  CKImageData *imageData
 @property  UIImage *thumbnail
 @property  BOOL isIrisAsset
 @property  PHLivePhoto *livePhoto

  // class methods
  +[CKImageMediaObject imageDataClass]
  +[CKImageMediaObject isPreviewable]
  +[CKImageMediaObject __ck_attachmentItemClass]
  +[CKImageMediaObject UTITypes]
  +[CKImageMediaObject fallbackFilenamePrefix]

  // instance methods
  -[CKImageMediaObject livePhoto]
  -[CKImageMediaObject bbSize]
  -[CKImageMediaObject legacyExport]
  -[CKImageMediaObject generateThumbnailFillToSize:contentAlignmentInsets:]
  -[CKImageMediaObject bbPreviewFillToSize:]
  -[CKImageMediaObject getIrisVideoPath]
  -[CKImageMediaObject generateThumbnailForWidth:orientation:]
  -[CKImageMediaObject .cxx_destruct]
  -[CKImageMediaObject imageData]
  -[CKImageMediaObject isSticker]
  -[CKImageMediaObject canExport]
  -[CKImageMediaObject attachmentSummary:]
  -[CKImageMediaObject setThumbnail:]
  -[CKImageMediaObject initWithTransfer:context:forceInlinePreview:]
  -[CKImageMediaObject isIrisAsset]
  -[CKImageMediaObject canShareItem]
  -[CKImageMediaObject location]
  -[CKImageMediaObject thumbnail]
  -[CKImageMediaObject previewItemURL]
  -[CKImageMediaObject previewItemTitle]
  -[CKImageMediaObject mediaType]
  -[CKImageMediaObject calculateIrisVideoPath]
  -[CKImageMediaObject originalSize]
  -[CKImageMediaObject metricsCollectorMediaType]
  -[CKImageMediaObject supportsUnknownSenderPreview]
  -[CKImageMediaObject __im_ff_commSafetyUIEnabled]
  -[CKImageMediaObject pasteboardItemProvider]
  -[CKImageMediaObject rtfDocumentItemsWithFormatString:selectedTextRange:]
  -[CKImageMediaObject validatePreviewFormat]
  -[CKImageMediaObject isPhotosCompatible]


CKTranscriptHeaderViewController : UIViewController
 @property  CKConversation *conversation
 @property  BOOL shouldInvalidateOnAddressBookChange

  // instance methods
  -[CKTranscriptHeaderViewController shouldInvalidateOnAddressBookChange]
  -[CKTranscriptHeaderViewController .cxx_destruct]
  -[CKTranscriptHeaderViewController initWithConversation:]
  -[CKTranscriptHeaderViewController setConversation:]
  -[CKTranscriptHeaderViewController conversation]


CKContextMenuGenerator : NSObject
  // class methods
  +[CKContextMenuGenerator menuActionToDisplayRecipientForHandle:]
  +[CKContextMenuGenerator menuActionToRemoveHandle:fromConversation:]
  +[CKContextMenuGenerator _shouldShowPrivateMessageOptionForHandle:conversation:]
  +[CKContextMenuGenerator menuActionToSendPrivateMessageToHandleID:]
  +[CKContextMenuGenerator menuActionToSendEmailToAddress:]
  +[CKContextMenuGenerator menuActionToOpenContactCardForContact:]
  +[CKContextMenuGenerator _menuActionToShareMyScreenWithHandle:]
  +[CKContextMenuGenerator _menuActionToInviteHandleToShareTheirScreen:]
  +[CKContextMenuGenerator supportsRelayPhoneCallsCalls]
  +[CKContextMenuGenerator relayPhoneCallActionTextForPhoneNumber:]
  +[CKContextMenuGenerator _menuActionToInitiateFaceTimeVideoForConversation:andContactsManager:]
  +[CKContextMenuGenerator _menuActionToInitiateFaceTimeAudioForConversation:andContactsManager:]
  +[CKContextMenuGenerator _menuActionToSendEmailForConversation:andContactsManager:]
  +[CKContextMenuGenerator recipientSubmenuForHandle:]
  +[CKContextMenuGenerator submenuForIndividualParticipantWithHandle:forConversation:includeAddToContactsAction:includeRemoveAction:]
  +[CKContextMenuGenerator menuActionToCreateContactForID:handler:]
  +[CKContextMenuGenerator menuActionToShowIDAsLargeType:handler:]
  +[CKContextMenuGenerator subMenuForScreenSharingOptionsWithHandle:]
  +[CKContextMenuGenerator menuActionToInitiateFaceTimeAudioWithHandle:andContactsManager:]
  +[CKContextMenuGenerator menuActionToInitiateFaceTimeVideoWithHandle:andContactsManager:]
  +[CKContextMenuGenerator menuActionsToInitiateRelayPhoneCallWithHandle:]
  +[CKContextMenuGenerator menuForNamedGroupConversation:andContactsManager:]


CKSearchIndexingFooterCell : UICollectionReusableView <CKSearchResultSupplementryCell>
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  BOOL titleLabelHidden
 @property  NSString *titleString
 @property  NSString *subtitleString
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSearchIndexingFooterCell desiredZPosition]
  +[CKSearchIndexingFooterCell supplementaryViewType]
  +[CKSearchIndexingFooterCell reuseIdentifier]

  // instance methods
  -[CKSearchIndexingFooterCell titleLabel]
  -[CKSearchIndexingFooterCell setSubtitleLabel:]
  -[CKSearchIndexingFooterCell titleString]
  -[CKSearchIndexingFooterCell titleLabelHidden]
  -[CKSearchIndexingFooterCell .cxx_destruct]
  -[CKSearchIndexingFooterCell setTitleLabelHidden:]
  -[CKSearchIndexingFooterCell preferredLayoutAttributesFittingAttributes:]
  -[CKSearchIndexingFooterCell setTitleLabel:]
  -[CKSearchIndexingFooterCell layoutSubviews]
  -[CKSearchIndexingFooterCell marginInsets]
  -[CKSearchIndexingFooterCell setSubtitleString:]
  -[CKSearchIndexingFooterCell subtitleLabel]
  -[CKSearchIndexingFooterCell initWithFrame:]
  -[CKSearchIndexingFooterCell setMarginInsets:]
  -[CKSearchIndexingFooterCell subtitleString]
  -[CKSearchIndexingFooterCell setTitleString:]


CKNavigationBarTitleView : _UINavigationBarTitleView
 @property  BOOL editing

  // instance methods
  -[CKNavigationBarTitleView _setTrailingItemsHidden:animated:]
  -[CKNavigationBarTitleView _updateTrailingBarButtonHiddenStateForTitleHeightAnimated:]
  -[CKNavigationBarTitleView updateIfNeeded:]
  -[CKNavigationBarTitleView setEditing:]
  -[CKNavigationBarTitleView contentDidChange]
  -[CKNavigationBarTitleView isEditing]


CKMessageEntryRichTextView : CKMessageEntryTextView <NSTextStorageDelegate, UIGestureRecognizerDelegate>
 @property  NSMutableDictionary *mediaObjects
 @property  NSMutableDictionary *pluginDisplayContainers
 @property  NSMutableDictionary *composeImages
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  UILongPressGestureRecognizer *longPressGestureRecognizer
 @property  BOOL allowCalloutActions
 @property  BOOL disableAttachments
 @property  <CKMessageEntryRichTextViewDelegate> *delegate
 @property  BOOL balloonColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMessageEntryRichTextView targetForAction:withSender:]
  -[CKMessageEntryRichTextView cut:]
  -[CKMessageEntryRichTextView setTapGestureRecognizer:]
  -[CKMessageEntryRichTextView paste:]
  -[CKMessageEntryRichTextView copy:]
  -[CKMessageEntryRichTextView _chooseSupplementalItemToInsert:replacementRange:completionHandler:]
  -[CKMessageEntryRichTextView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKMessageEntryRichTextView .cxx_destruct]
  -[CKMessageEntryRichTextView __im_ff_supplementalLexiconMentionsEnabled]
  -[CKMessageEntryRichTextView attributedTextForCompositionText:]
  -[CKMessageEntryRichTextView allowCalloutActions]
  -[CKMessageEntryRichTextView pluginDisplayContainers]
  -[CKMessageEntryRichTextView disableAttachments]
  -[CKMessageEntryRichTextView _compositionFromSelection]
  -[CKMessageEntryRichTextView _rangeFromUITextRange:]
  -[CKMessageEntryRichTextView setPluginDisplayContainers:]
  -[CKMessageEntryRichTextView setComposeImages:]
  -[CKMessageEntryRichTextView handleTapOrLongPress:]
  -[CKMessageEntryRichTextView setAllowCalloutActions:]
  -[CKMessageEntryRichTextView setDisableAttachments:]
  -[CKMessageEntryRichTextView composeImages]
  -[CKMessageEntryRichTextView updateComposeImages]
  -[CKMessageEntryRichTextView composeImageForTransferGUID:]
  -[CKMessageEntryRichTextView setCompositionText:]
  -[CKMessageEntryRichTextView cachedPluginDisplayContainerForGUID:]
  -[CKMessageEntryRichTextView cachedMediaObjectForTransferGUID:]
  -[CKMessageEntryRichTextView setBalloonColor:]
  -[CKMessageEntryRichTextView compositionText]
  -[CKMessageEntryRichTextView tapGestureRecognizer]
  -[CKMessageEntryRichTextView longPressGestureRecognizer]
  -[CKMessageEntryRichTextView initWithFrame:textContainer:shouldDisableAttachments:]
  -[CKMessageEntryRichTextView gestureRecognizerShouldBegin:]
  -[CKMessageEntryRichTextView balloonColor]
  -[CKMessageEntryRichTextView textStorage:willProcessEditing:range:changeInLength:]
  -[CKMessageEntryRichTextView pasteboard]
  -[CKMessageEntryRichTextView handlePastedString:toRange:]
  -[CKMessageEntryRichTextView canPerformAction:withSender:]
  -[CKMessageEntryRichTextView pasteConfiguration]
  -[CKMessageEntryRichTextView previewDidChange:]
  -[CKMessageEntryRichTextView setLongPressGestureRecognizer:]
  -[CKMessageEntryRichTextView mediaObjects]
  -[CKMessageEntryRichTextView setMediaObjects:]
  -[CKMessageEntryRichTextView dealloc]
  -[CKMessageEntryRichTextView isSingleLineDocument]
  -[CKMessageEntryRichTextView _showCustomInputView]
  -[CKMessageEntryRichTextView _insertSupplementalItem:forString:replacementRange:]
  -[CKMessageEntryRichTextView _cancelChooseSupplementalItemToInsert]
  -[CKMessageEntryRichTextView _insertionPointEnteredRange:string:supplementalItems:]
  -[CKMessageEntryRichTextView _insertionPointExitedRangeWithSupplementalItems]
  -[CKMessageEntryRichTextView _canSuggestSupplementalItemsForCurrentSelection]


CKStaticImageStackView : UIView
 @property  NSArray *mediaObjects
 @property  NSArray *imageLayers
 @property  PFMessagesStackLayoutFrameSolver *frameSolver
 @property  double stackCornerRadius

  // instance methods
  -[CKStaticImageStackView frameSolver]
  -[CKStaticImageStackView .cxx_destruct]
  -[CKStaticImageStackView imageLayers]
  -[CKStaticImageStackView layoutSubviews]
  -[CKStaticImageStackView setFrameSolver:]
  -[CKStaticImageStackView _PFMessageStackLayoutFrameSolverClass]
  -[CKStaticImageStackView setImageLayers:]
  -[CKStaticImageStackView _updatePreviews]
  -[CKStaticImageStackView _mediaObjectPreviewDidChange:]
  -[CKStaticImageStackView initWithFrame:mediaObjects:]
  -[CKStaticImageStackView setStackCornerRadius:]
  -[CKStaticImageStackView stackCornerRadius]
  -[CKStaticImageStackView mediaObjects]
  -[CKStaticImageStackView setMediaObjects:]


CKContactMediaObject : CKCardMediaObject
 @property  NSDictionary *contactMediaInfo
 @property  unsigned long oopPreviewRequestCount
 @property  CNContactVCardSummary *vCardSummary
 @property  BOOL vCardParsingFailed
 @property  UIImage *vCardImage

  // class methods
  +[CKContactMediaObject isPreviewable]
  +[CKContactMediaObject UTITypes]
  +[CKContactMediaObject shouldUseTranscoderGeneratedPreviewSize]
  +[CKContactMediaObject fallbackFilenamePrefix]

  // instance methods
  -[CKContactMediaObject icon]
  -[CKContactMediaObject bbSize]
  -[CKContactMediaObject generateThumbnailFillToSize:contentAlignmentInsets:]
  -[CKContactMediaObject generateThumbnailForWidth:orientation:]
  -[CKContactMediaObject .cxx_destruct]
  -[CKContactMediaObject attachmentSummary:]
  -[CKContactMediaObject balloonViewClass]
  -[CKContactMediaObject vCardImage]
  -[CKContactMediaObject vCardSummary]
  -[CKContactMediaObject contactMediaInfo]
  -[CKContactMediaObject subtitle]
  -[CKContactMediaObject supportsBlastDoor]
  -[CKContactMediaObject vCardImageOfSize:]
  -[CKContactMediaObject previewCacheKey]
  -[CKContactMediaObject previewDispatchCache]
  -[CKContactMediaObject generateOOPPreview]
  -[CKContactMediaObject _transcodeControllerSharedInstance]
  -[CKContactMediaObject contactCardPayloadFileURL:]
  -[CKContactMediaObject previewBalloonViewClass]
  -[CKContactMediaObject placeholderBalloonViewClass]
  -[CKContactMediaObject setContactMediaInfo:]
  -[CKContactMediaObject setVCardSummary:]
  -[CKContactMediaObject vCardParsingFailed]
  -[CKContactMediaObject setVCardParsingFailed:]
  -[CKContactMediaObject setVCardImage:]
  -[CKContactMediaObject title]
  -[CKContactMediaObject previewItemURL]
  -[CKContactMediaObject previewItemTitle]
  -[CKContactMediaObject mediaType]
  -[CKContactMediaObject metricsCollectorMediaType]
  -[CKContactMediaObject generatePreviewOutOfProcess]
  -[CKContactMediaObject oopPreviewRequestCount]
  -[CKContactMediaObject setOopPreviewRequestCount:]


CKAudioMediaObject : CKAVMediaObject <CKMediaObjectMetadataPreview>
 @property  NSArray *powerLevelsFromMetadata
 @property  double durationFromMetadata
 @property  NSArray *powerLevels
 @property  BOOL supportsPreviewMetadata
 @property  NSString *previewMetadataFilenameExtension

  // class methods
  +[CKAudioMediaObject isPreviewable]
  +[CKAudioMediaObject __ck_attachmentItemClass]
  +[CKAudioMediaObject UTITypes]
  +[CKAudioMediaObject shouldUseTranscoderGeneratedPreviewSize]
  +[CKAudioMediaObject _cachedPowerLevelsForKey:]
  +[CKAudioMediaObject _cachePowerLevels:forKey:]
  +[CKAudioMediaObject generateThumbnailForWidth:color:powerLevels:fileURL:]
  +[CKAudioMediaObject generateThumbnailForPowerLevelsFromMetadata:color:]
  +[CKAudioMediaObject generateWaveformFromPowerLevels:powerLevelsCount:color:]
  +[CKAudioMediaObject fallbackFilenamePrefix]

  // instance methods
  -[CKAudioMediaObject isPreviewable]
  -[CKAudioMediaObject waveformForOrientation:]
  -[CKAudioMediaObject previewFilenameExtension]
  -[CKAudioMediaObject savedPreviewFromURL:forOrientation:]
  -[CKAudioMediaObject .cxx_destruct]
  -[CKAudioMediaObject canExport]
  -[CKAudioMediaObject attachmentSummary:]
  -[CKAudioMediaObject balloonViewClass]
  -[CKAudioMediaObject setPowerLevels:]
  -[CKAudioMediaObject isLikeAudioMessage]
  -[CKAudioMediaObject restorePreviewMetadataFromDict:]
  -[CKAudioMediaObject durationFromMetadata]
  -[CKAudioMediaObject setDurationFromMetadata:]
  -[CKAudioMediaObject setPowerLevelsFromMetadata:]
  -[CKAudioMediaObject powerLevelsFromMetadata]
  -[CKAudioMediaObject generateThumbnailForWidth:]
  -[CKAudioMediaObject generatePreviewFromThumbnail:width:orientation:]
  -[CKAudioMediaObject savePreview:toURL:forOrientation:]
  -[CKAudioMediaObject generatePlaceholderThumbnailForWidth:]
  -[CKAudioMediaObject composeWaveformForWidth:orientation:withColor:]
  -[CKAudioMediaObject generateThumbnailForWidth:withColor:]
  -[CKAudioMediaObject generatePlaceholderThumbnailForWidth:withColor:]
  -[CKAudioMediaObject generatePreviewFromThumbnail:width:orientation:withColor:]
  -[CKAudioMediaObject supportsPreviewMetadata]
  -[CKAudioMediaObject previewMetadataFilenameExtension]
  -[CKAudioMediaObject previewMetadataWithContentsOfURL:error:]
  -[CKAudioMediaObject previewItemTitle]
  -[CKAudioMediaObject writePreviewMetadata:toURL:error:]
  -[CKAudioMediaObject composeWaveformForWidth:orientation:]
  -[CKAudioMediaObject mediaType]
  -[CKAudioMediaObject powerLevels]
  -[CKAudioMediaObject shouldSuppressPreview]
  -[CKAudioMediaObject metricsCollectorMediaType]
  -[CKAudioMediaObject __im_ff_isNewAudioMessageFlowEnabled]
  -[CKAudioMediaObject duration]


CKPPTSubTest : NSObject
  // class methods
  +[CKPPTSubTest start:]
  +[CKPPTSubTest stop:]


CKTableViewCellActionButton : _UITableViewCellActionButton
  // instance methods
  -[CKTableViewCellActionButton sizeThatFits:]


CKDetailsMapViewCell : CKDetailsCell <CKDetailsCell>
 @property  UIView *mapView
 @property  BOOL shouldShowLocationString
 @property  CKDetailsLocationStringCell *locationStringView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsMapViewCell shouldHighlight]
  +[CKDetailsMapViewCell reuseIdentifier]

  // instance methods
  -[CKDetailsMapViewCell mapView]
  -[CKDetailsMapViewCell setMapView:]
  -[CKDetailsMapViewCell .cxx_destruct]
  -[CKDetailsMapViewCell setShouldShowLocationString:]
  -[CKDetailsMapViewCell setLocationStringView:]
  -[CKDetailsMapViewCell layoutSubviews]
  -[CKDetailsMapViewCell locationStringView]
  -[CKDetailsMapViewCell shouldShowLocationString]
  -[CKDetailsMapViewCell initWithStyle:reuseIdentifier:]


CKElasticFunction : NSObject
 @property  double friction
 @property  double tension
 @property  double input
 @property  double output
 @property  double velocity

  // class methods
  +[CKElasticFunction functionWithTension:friction:initialValue:]

  // instance methods
  -[CKElasticFunction step]
  -[CKElasticFunction setInput:]
  -[CKElasticFunction friction]
  -[CKElasticFunction output]
  -[CKElasticFunction tension]
  -[CKElasticFunction input]
  -[CKElasticFunction init]
  -[CKElasticFunction setTension:]
  -[CKElasticFunction setFriction:]
  -[CKElasticFunction velocity]


CKMomentCollectionViewCell : UICollectionViewCell
 @property  CKFullScreenEffect *effect
 @property  NSMutableArray *effectViews

  // class methods
  +[CKMomentCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKMomentCollectionViewCell animate]
  -[CKMomentCollectionViewCell setEffect:]
  -[CKMomentCollectionViewCell effect]
  -[CKMomentCollectionViewCell .cxx_destruct]
  -[CKMomentCollectionViewCell prepareForReuse]
  -[CKMomentCollectionViewCell effectViews]
  -[CKMomentCollectionViewCell setEffectViews:]
  -[CKMomentCollectionViewCell addEffectView:]
  -[CKMomentCollectionViewCell setupEffectIfNeeded]
  -[CKMomentCollectionViewCell stopAnimation]


CKMovieMediaObject : CKAVMediaObject
 @property  BOOL hasVideoTrack
 @property  {CGSize=dd} pxSize
 @property  BOOL checkedVideoInfo
 @property  AVURLAsset *asset
 @property  BOOL isAutoloopVideo
 @property  BOOL isJellyfishVideo
 @property  BOOL isAutoloopVideoInitialized
 @property  BOOL isJellyfishInitialized
 @property  UIImage *thumbnail

  // class methods
  +[CKMovieMediaObject isPreviewable]
  +[CKMovieMediaObject __ck_attachmentItemClass]
  +[CKMovieMediaObject UTITypes]
  +[CKMovieMediaObject playButtonPreviewForUIImage:scale:contentAlignmentInsets:]
  +[CKMovieMediaObject playButtonPreviewForCGImage:scale:isFromMe:]
  +[CKMovieMediaObject fallbackFilenamePrefix]

  // instance methods
  -[CKMovieMediaObject isJellyfishVideo]
  -[CKMovieMediaObject setIsJellyfishVideo:]
  -[CKMovieMediaObject bbSize]
  -[CKMovieMediaObject pxSize]
  -[CKMovieMediaObject generateThumbnailFillToSize:contentAlignmentInsets:]
  -[CKMovieMediaObject bbPreviewFillToSize:]
  -[CKMovieMediaObject generateThumbnailForWidth:orientation:]
  -[CKMovieMediaObject .cxx_destruct]
  -[CKMovieMediaObject canExport]
  -[CKMovieMediaObject attachmentSummary:]
  -[CKMovieMediaObject setThumbnail:]
  -[CKMovieMediaObject setAsset:]
  -[CKMovieMediaObject balloonViewClass]
  -[CKMovieMediaObject previewForWidth:orientation:]
  -[CKMovieMediaObject asset]
  -[CKMovieMediaObject thumbnail]
  -[CKMovieMediaObject previewBalloonViewClass]
  -[CKMovieMediaObject setPxSize:]
  -[CKMovieMediaObject previewCacheKeyWithOrientation:]
  -[CKMovieMediaObject generatePreviewFromThumbnail:width:orientation:]
  -[CKMovieMediaObject previewItemTitle]
  -[CKMovieMediaObject isAutoloopVideo]
  -[CKMovieMediaObject isAutoloopVideoInitialized]
  -[CKMovieMediaObject allowAutoplay]
  -[CKMovieMediaObject mediaType]
  -[CKMovieMediaObject setIsAutoloopVideoInitialized:]
  -[CKMovieMediaObject _assetContainsMetadataKey:]
  -[CKMovieMediaObject isJellyfishInitialized]
  -[CKMovieMediaObject hasNoVideoTrack]
  -[CKMovieMediaObject prewarmPreviewForWidth:orientation:]
  -[CKMovieMediaObject checkedVideoInfo]
  -[CKMovieMediaObject updateVideoInfo]
  -[CKMovieMediaObject setCheckedVideoInfo:]
  -[CKMovieMediaObject hasVideoTrack]
  -[CKMovieMediaObject setHasVideoTrack:]
  -[CKMovieMediaObject setIsAutoloopVideo:]
  -[CKMovieMediaObject setIsJellyfishInitialized:]
  -[CKMovieMediaObject metricsCollectorMediaType]
  -[CKMovieMediaObject __im_ff_systemImageAdoptionEnabled]
  -[CKMovieMediaObject supportsUnknownSenderPreview]
  -[CKMovieMediaObject validatePreviewFormat]
  -[CKMovieMediaObject isPhotosCompatible]


CKPhoneNumberCompressor : NSObject
 @property  NSString *phoneNumber
 @property  UIFont *font
 @property  double desiredWidth
 @property  NSArray *preferredCompressions

  // instance methods
  -[CKPhoneNumberCompressor setFont:]
  -[CKPhoneNumberCompressor setPhoneNumber:]
  -[CKPhoneNumberCompressor .cxx_destruct]
  -[CKPhoneNumberCompressor phoneNumber]
  -[CKPhoneNumberCompressor compress]
  -[CKPhoneNumberCompressor font]
  -[CKPhoneNumberCompressor _compressPhoneNumberIfFitsInCompressionLevel:]
  -[CKPhoneNumberCompressor desiredWidth]
  -[CKPhoneNumberCompressor preferredCompressions]
  -[CKPhoneNumberCompressor setDesiredWidth:]
  -[CKPhoneNumberCompressor setPreferredCompressions:]


CKSingleContactDetailsCell : CKDetailsCell <CKDetailsCell>
 @property  UILabel *titleLabel
 @property  UILabel *subTitleLabel
 @property  UIImageView *chervonImageView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSingleContactDetailsCell shouldHighlight]
  +[CKSingleContactDetailsCell reuseIdentifier]

  // instance methods
  -[CKSingleContactDetailsCell titleLabel]
  -[CKSingleContactDetailsCell .cxx_destruct]
  -[CKSingleContactDetailsCell setTitleLabel:]
  -[CKSingleContactDetailsCell layoutSubviews]
  -[CKSingleContactDetailsCell sizeThatFits:]
  -[CKSingleContactDetailsCell initWithStyle:reuseIdentifier:]
  -[CKSingleContactDetailsCell setSubTitleLabel:]
  -[CKSingleContactDetailsCell subTitleLabel]
  -[CKSingleContactDetailsCell setChervonImageView:]
  -[CKSingleContactDetailsCell chervonImageView]
  -[CKSingleContactDetailsCell initConstraints]


CKAttachmentBalloonView : CKColoredBalloonView
 @property  UIView<CKAttachmentView> *attachmentView

  // instance methods
  -[CKAttachmentBalloonView setMediaObject:]
  -[CKAttachmentBalloonView transferUpdated:]
  -[CKAttachmentBalloonView prepareForDisplay]
  -[CKAttachmentBalloonView .cxx_destruct]
  -[CKAttachmentBalloonView layoutSubviews]
  -[CKAttachmentBalloonView configureForComposition:]
  -[CKAttachmentBalloonView prepareForReuse]
  -[CKAttachmentBalloonView configureForMessagePart:]
  -[CKAttachmentBalloonView initWithFrame:]
  -[CKAttachmentBalloonView overlayImage]
  -[CKAttachmentBalloonView attachmentView]
  -[CKAttachmentBalloonView setAttachmentView:]
  -[CKAttachmentBalloonView richIconDidChange:]
  -[CKAttachmentBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKAttachmentBalloonView alignmentRectInsets]
  -[CKAttachmentBalloonView configureForMediaObject:previewWidth:orientation:]


CKAVMediaObject : CKMediaObject
 @property  double duration

  // class methods
  +[CKAVMediaObject durationCache]

  // instance methods
  -[CKAVMediaObject setDuration:]
  -[CKAVMediaObject duration]


CKVerticalTiledLayoutGenerator : CKTiledLayoutGenerator
 @property  double referenceWidth
 @property  BOOL shouldDisplayCaptionsBelowBatches

  // instance methods
  -[CKVerticalTiledLayoutGenerator shouldDisplayCaptionsBelowBatches]
  -[CKVerticalTiledLayoutGenerator setReferenceWidth:]
  -[CKVerticalTiledLayoutGenerator setShouldDisplayCaptionsBelowBatches:]
  -[CKVerticalTiledLayoutGenerator referenceWidth]
  -[CKVerticalTiledLayoutGenerator willParseTiles]
  -[CKVerticalTiledLayoutGenerator _parseTileRequiringFullWidth]
  -[CKVerticalTiledLayoutGenerator _parseSpecialSequence]
  -[CKVerticalTiledLayoutGenerator _parseSpecialTileTriplet]
  -[CKVerticalTiledLayoutGenerator _parseTileTriplet]
  -[CKVerticalTiledLayoutGenerator _parseTilePair]
  -[CKVerticalTiledLayoutGenerator _parseSingleTile]
  -[CKVerticalTiledLayoutGenerator didParseTiles]
  -[CKVerticalTiledLayoutGenerator _dequeueCaption]
  -[CKVerticalTiledLayoutGenerator _addRowWithContiguousTiles:count:]
  -[CKVerticalTiledLayoutGenerator _scanTilePair:]
  -[CKVerticalTiledLayoutGenerator _scanTileTriplet:]
  -[CKVerticalTiledLayoutGenerator _scanTileRequiringFullWidth:]
  -[CKVerticalTiledLayoutGenerator _hasLeftSuboptimalRow]
  -[CKVerticalTiledLayoutGenerator _scanTileRequiringNewRow:]
  -[CKVerticalTiledLayoutGenerator _addRowWithTiles:imageFrames:count:]
  -[CKVerticalTiledLayoutGenerator _scanTripletWithLargeLead:]
  -[CKVerticalTiledLayoutGenerator _scanTripletWithRearrangment:]
  -[CKVerticalTiledLayoutGenerator _scanSpecialSequenceBlock:]
  -[CKVerticalTiledLayoutGenerator _isAtEndOfRow]
  -[CKVerticalTiledLayoutGenerator _parseSpecialSubsequenceWithRowRequired:rowParsed:]
  -[CKVerticalTiledLayoutGenerator _scanSpecialSequenceRow:count:]
  -[CKVerticalTiledLayoutGenerator _addSpecialSequenceBlock:]
  -[CKVerticalTiledLayoutGenerator _scanNonPanoramaSequence:count:]
  -[CKVerticalTiledLayoutGenerator _hasEnqueuedCaption]
  -[CKVerticalTiledLayoutGenerator _enumerateRowFramesWithContiguousTiles:count:useMagneticGuidelines:block:]
  -[CKVerticalTiledLayoutGenerator _willAddRowWithFirstTileInfo:]
  -[CKVerticalTiledLayoutGenerator _enqueueCaptionWithTileInfo:]
  -[CKVerticalTiledLayoutGenerator parseNextTiles]
  -[CKVerticalTiledLayoutGenerator referenceDistanceForMagneticGuidelines]


CKPhoneTranscriptMessageCell : CKTranscriptMessageCell
 @property  CKAvatarView *avatarView
 @property  UIImageView *printableAvatarView

  // instance methods
  -[CKPhoneTranscriptMessageCell setAvatarView:]
  -[CKPhoneTranscriptMessageCell .cxx_destruct]
  -[CKPhoneTranscriptMessageCell avatarView]
  -[CKPhoneTranscriptMessageCell contactImageView]
  -[CKPhoneTranscriptMessageCell dealloc]
  -[CKPhoneTranscriptMessageCell printableAvatarView]
  -[CKPhoneTranscriptMessageCell setPrintableAvatarView:]
  -[CKPhoneTranscriptMessageCell setShowAvatarView:withContact:preferredHandle:avatarViewDelegate:]
  -[CKPhoneTranscriptMessageCell layoutSubviewsForContents]


CKImageAttachmentItem : CKAttachmentItem
 @property  {CGSize=dd} imageSize
 @property  BOOL backgroundEnqueued
 @property  BOOL useDefaultSize

  // class methods
  +[CKImageAttachmentItem UTITypes]

  // instance methods
  -[CKImageAttachmentItem setImageSize:]
  -[CKImageAttachmentItem imageData]
  -[CKImageAttachmentItem generatePreviewWithCompletion:]
  -[CKImageAttachmentItem imageSize]
  -[CKImageAttachmentItem _newImageData]
  -[CKImageAttachmentItem startDeferredSetup]
  -[CKImageAttachmentItem size]
  -[CKImageAttachmentItem backgroundEnqueued]
  -[CKImageAttachmentItem _calculateImageSize]
  -[CKImageAttachmentItem setUseDefaultSize:]
  -[CKImageAttachmentItem useDefaultSize]
  -[CKImageAttachmentItem setBackgroundEnqueued:]


CKMessageEntryAudioHintView : UIView
 @property  UIButton *referenceButton
 @property  {UIEdgeInsets=dddd} coverInsets
 @property  UILabel *hintLabel
 @property  UIImageView *hintImageView
 @property  UIButton *hintButton
 @property  BOOL shouldAnimateReferenceButton

  // instance methods
  -[CKMessageEntryAudioHintView hintLabel]
  -[CKMessageEntryAudioHintView coverInsets]
  -[CKMessageEntryAudioHintView setCoverInsets:]
  -[CKMessageEntryAudioHintView .cxx_destruct]
  -[CKMessageEntryAudioHintView layoutSubviews]
  -[CKMessageEntryAudioHintView initWithReferenceButton:coverInsets:]
  -[CKMessageEntryAudioHintView setShouldAnimateReferenceButton:]
  -[CKMessageEntryAudioHintView hintButton]
  -[CKMessageEntryAudioHintView setHidden:animated:completion:]
  -[CKMessageEntryAudioHintView setReferenceButton:]
  -[CKMessageEntryAudioHintView setHintLabel:]
  -[CKMessageEntryAudioHintView setHintImageView:]
  -[CKMessageEntryAudioHintView setHintButton:]
  -[CKMessageEntryAudioHintView referenceButton]
  -[CKMessageEntryAudioHintView hintImageView]
  -[CKMessageEntryAudioHintView shouldAnimateReferenceButton]


CKSendAnimationContainerView : UIView
 @property  CKGradientReferenceView *gradientReferenceView

  // instance methods
  -[CKSendAnimationContainerView .cxx_destruct]
  -[CKSendAnimationContainerView gradientReferenceView]
  -[CKSendAnimationContainerView initWithFrame:]
  -[CKSendAnimationContainerView setGradientReferenceView:]


CKBusinessOnboardingController : OBWelcomeController
 @property  @? completionHandler

  // class methods
  +[CKBusinessOnboardingController shouldShowBusinessOnboarding]

  // instance methods
  -[CKBusinessOnboardingController .cxx_destruct]
  -[CKBusinessOnboardingController viewDidLoad]
  -[CKBusinessOnboardingController initWithCompletionHandler:]
  -[CKBusinessOnboardingController setCompletionHandler:]
  -[CKBusinessOnboardingController completionHandler]
  -[CKBusinessOnboardingController continueButtonTapped:]


CKEffectPickerStandardView : CKEffectPickerView
  // instance methods
  -[CKEffectPickerStandardView setCloseButtonYPosition:]
  -[CKEffectPickerStandardView activateTextSizeDependentConstraintsForSendButtonFrame:]
  -[CKEffectPickerStandardView marginBetweenPickerDotButtons]
  -[CKEffectPickerStandardView _updateBalloonViewOrigin:forButtonFrame:]
  -[CKEffectPickerStandardView _updateRoundedContainerView]
  -[CKEffectPickerStandardView offsetYForLabelAtIndex:withInitialY:]


CKMentionRippler : NSObject
  // instance methods
  -[CKMentionRippler .cxx_destruct]
  -[CKMentionRippler init]
  -[CKMentionRippler start]
  -[CKMentionRippler generateValues]
  -[CKMentionRippler currentIndexForGlyphIndex:numberOfGlyphs:timeIndex:isFinished:]
  -[CKMentionRippler currentTimeIndex]
  -[CKMentionRippler finishedTimeIndex]
  -[CKMentionRippler currentColorForGlyphIndex:numberOfGlyphs:timeIndex:]
  -[CKMentionRippler currentShadowColorForGlyphIndex:numberOfGlyphs:timeIndex:]
  -[CKMentionRippler currentScaleForGlyphIndex:numberOfGlyphs:timeIndex:]
  -[CKMentionRippler currentOffsetForGlyphIndex:numberOfGlyphs:timeIndex:]
  -[CKMentionRippler finishedForGlyphIndex:numberOfGlyphs:timeIndex:]


CKTranscriptReplyCountCell : CKTranscriptStatusCell
 @property  double countAlpha

  // instance methods
  -[CKTranscriptReplyCountCell clearFilters]
  -[CKTranscriptReplyCountCell setCountAlpha:]
  -[CKTranscriptReplyCountCell performReload:completion:]
  -[CKTranscriptReplyCountCell animationWithKeyPath:beginTime:duration:fromValue:toValue:]
  -[CKTranscriptReplyCountCell performRemoval:]
  -[CKTranscriptReplyCountCell wantsDrawerLayout]
  -[CKTranscriptReplyCountCell shouldHideDuringDarkFSM]
  -[CKTranscriptReplyCountCell prepareForReuse]
  -[CKTranscriptReplyCountCell addFilter:]
  -[CKTranscriptReplyCountCell countAlpha]
  -[CKTranscriptReplyCountCell configureForChatItem:context:]
  -[CKTranscriptReplyCountCell hidesCheckmark]
  -[CKTranscriptReplyCountCell performInsertion:]
  -[CKTranscriptReplyCountCell layoutSubviewsForAlignmentContents]
  -[CKTranscriptReplyCountCell _fadeInLabelAtStartTime:completion:]


CKCalendarMediaObject : CKCardMediaObject
  // class methods
  +[CKCalendarMediaObject UTITypes]
  +[CKCalendarMediaObject fallbackFilenamePrefix]

  // instance methods
  -[CKCalendarMediaObject attachmentSummary:]
  -[CKCalendarMediaObject subtitle]
  -[CKCalendarMediaObject mediaType]
  -[CKCalendarMediaObject shouldBeQuickLooked]


CKMoreBrowserPlugin : IMBalloonBrowserPlugin
  // instance methods
  -[CKMoreBrowserPlugin shouldHideAppSwitcher]


CKBalloonPluginManager : NSObject <CKAppInstallationWatcherObserver>
 @property  BOOL isAppRemovalEnabled
 @property  NSArray *visibleDrawerPlugins
 @property  NSArray *visibleFavoriteAppStripPlugins
 @property  NSArray *visibleRecentAppStripPlugins
 @property  NSArray *recentAppStripPlugins
 @property  NSArray *potentiallyVisiblePlugins
 @property  NSArray *potentiallyVisibleNonFavoritePlugins
 @property  NSDictionary *pluginIndexPathMap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *visiblePlugins
 @property  NSArray *cachedPotentiallyVisiblePlugins
 @property  NSArray *visibleSwitcherPlugins
 @property  NSArray *favoriteAppStripPlugins
 @property  BOOL isAppInstallationEnabled
 @property  BOOL isAppRemovalEnabled
 @property  BOOL isCameraAllowed
 @property  NSHashTable *currentExtensionConsumers
 @property  NSDictionary *pluginVersionMap
 @property  NSDictionary *pluginSeenMap
 @property  NSDictionary *pluginIndexPathMap
 @property  NSMutableDictionary *historicalPluginIndexPathMap
 @property  NSMutableArray *MRUPluginInteractionList
 @property  NSDictionary *pluginLaunchTimeMap
 @property  NSArray *allPlugins
 @property  BOOL keepingEmptySections
 @property  long long numberOfSectionsToKeep
 @property  NSMutableArray *visibleInstallations
 @property  BOOL isAppInstallationObserver
 @property  NSSet *oldVisibleSwitcherPluginIdentifiers
 @property  NSCache *iconCache
 @property  CKPreviewDispatchCache *snapshotCache
 @property  NSMutableDictionary *activeBrowsers
 @property  BOOL hasLoadedExtensions
 @property  NSArray *allEnabledPlugins
 @property  NSArray *disabledPlugins
 @property  BOOL isAppStoreEnabled
 @property  BOOL appStoreAutoEnableToggled
 @property  UIViewController *lastUsedPhotoViewController

  // class methods
  +[CKBalloonPluginManager sharedInstance]
  +[CKBalloonPluginManager recentPlugin]
  +[CKBalloonPluginManager defaultFavoritePlugins]
  +[CKBalloonPluginManager morePlugin]

  // instance methods
  -[CKBalloonPluginManager iconCache]
  -[CKBalloonPluginManager prepareForSuspend]
  -[CKBalloonPluginManager setNumberOfSectionsToKeep:]
  -[CKBalloonPluginManager refreshPlugins]
  -[CKBalloonPluginManager handleManagedConfigSettingsChangeNotification:]
  -[CKBalloonPluginManager visibleSwitcherPlugins]
  -[CKBalloonPluginManager healthKitAchievementAvailabilityChangedNotification]
  -[CKBalloonPluginManager cleanSeenMap]
  -[CKBalloonPluginManager reloadInstalledApps:]
  -[CKBalloonPluginManager _decodeIndexPathMap:]
  -[CKBalloonPluginManager _updateHistoricalPluginIndexPathMap]
  -[CKBalloonPluginManager currentExtensionConsumers]
  -[CKBalloonPluginManager regeneratePluginIndexPaths]
  -[CKBalloonPluginManager _shouldForceRegenerateIndexPathMap]
  -[CKBalloonPluginManager invalidateIconCache]
  -[CKBalloonPluginManager saveWithNotification:]
  -[CKBalloonPluginManager visiblePlugins]
  -[CKBalloonPluginManager _shouldUninstallContainingBundle:]
  -[CKBalloonPluginManager MRUPluginInteractionList]
  -[CKBalloonPluginManager isAppStoreEnabled]
  -[CKBalloonPluginManager setMRUPluginInteractionList:]
  -[CKBalloonPluginManager recentAppStripPlugins]
  -[CKBalloonPluginManager pluginIndexPathMap]
  -[CKBalloonPluginManager historicalPluginIndexPathMap]
  -[CKBalloonPluginManager setHistoricalPluginIndexPathMap:]
  -[CKBalloonPluginManager _disableAppWithBalloonIdentifier:]
  -[CKBalloonPluginManager _addAppWithBalloonIdentifier:]
  -[CKBalloonPluginManager hasLoadedExtensions]
  -[CKBalloonPluginManager _encodeIndexPathMap:]
  -[CKBalloonPluginManager pluginVersionMap]
  -[CKBalloonPluginManager pluginSeenMap]
  -[CKBalloonPluginManager pluginLaunchTimeMap]
  -[CKBalloonPluginManager visibleRecentAppStripPlugins]
  -[CKBalloonPluginManager visibleFavoriteAppStripPlugins]
  -[CKBalloonPluginManager isInternalPlugin:]
  -[CKBalloonPluginManager isPluginEnabled:]
  -[CKBalloonPluginManager _setSeen:forPlugin:]
  -[CKBalloonPluginManager allPluginsPassingTest:]
  -[CKBalloonPluginManager createFakeAppsForPPTTesting:]
  -[CKBalloonPluginManager isEnabledAndVisible:]
  -[CKBalloonPluginManager visibleDrawerPlugins]
  -[CKBalloonPluginManager setPluginLaunchTimeMap:]
  -[CKBalloonPluginManager setPluginSeenMap:]
  -[CKBalloonPluginManager _shouldShowSURF]
  -[CKBalloonPluginManager isPluginSeenWithInstalledVersion:]
  -[CKBalloonPluginManager isPluginVisible:]
  -[CKBalloonPluginManager isAppStoreAutoEnableToggled]
  -[CKBalloonPluginManager isAppRemovalEnabled]
  -[CKBalloonPluginManager isAppInstallationEnabled]
  -[CKBalloonPluginManager _shouldShowActivity]
  -[CKBalloonPluginManager healthStickerStatusChanged]
  -[CKBalloonPluginManager removeAppWithIdentifier:]
  -[CKBalloonPluginManager setEnabled:forPlugin:]
  -[CKBalloonPluginManager allEnabledPlugins]
  -[CKBalloonPluginManager balloonPluginIdentifierForAppExtensionBundleIdentifier:]
  -[CKBalloonPluginManager clearBalloonPluginCache]
  -[CKBalloonPluginManager disabledPlugins]
  -[CKBalloonPluginManager launchStatusForPlugin:]
  -[CKBalloonPluginManager isPluginSeen:]
  -[CKBalloonPluginManager updateLaunchStatus:forPlugin:withNotification:]
  -[CKBalloonPluginManager updateLaunchTimeForPlugin:]
  -[CKBalloonPluginManager launchTimeForPlugin:]
  -[CKBalloonPluginManager badgeValueForPlugin:]
  -[CKBalloonPluginManager setSeen:forPlugin:]
  -[CKBalloonPluginManager .cxx_destruct]
  -[CKBalloonPluginManager unseenPluginCount]
  -[CKBalloonPluginManager setAppStoreAutoEnableToggled:]
  -[CKBalloonPluginManager activeBrowsers]
  -[CKBalloonPluginManager setIsAppInstallationEnabled:]
  -[CKBalloonPluginManager setIsAppRemovalEnabled:]
  -[CKBalloonPluginManager setVisiblePlugins:]
  -[CKBalloonPluginManager setIsCameraAllowed:]
  -[CKBalloonPluginManager lastUsedPhotoViewController]
  -[CKBalloonPluginManager setLastUsedPhotoViewController:]
  -[CKBalloonPluginManager cachedPotentiallyVisiblePlugins]
  -[CKBalloonPluginManager setPluginVersionMap:]
  -[CKBalloonPluginManager setCachedPotentiallyVisiblePlugins:]
  -[CKBalloonPluginManager setVisibleSwitcherPlugins:]
  -[CKBalloonPluginManager favoriteAppStripPlugins]
  -[CKBalloonPluginManager setFavoriteAppStripPlugins:]
  -[CKBalloonPluginManager setAllPlugins:]
  -[CKBalloonPluginManager snapshotCache]
  -[CKBalloonPluginManager setCurrentExtensionConsumers:]
  -[CKBalloonPluginManager setPluginIndexPathMap:]
  -[CKBalloonPluginManager isKeepingEmptySections]
  -[CKBalloonPluginManager setKeepingEmptySections:]
  -[CKBalloonPluginManager numberOfSectionsToKeep]
  -[CKBalloonPluginManager visibleInstallations]
  -[CKBalloonPluginManager setVisibleInstallations:]
  -[CKBalloonPluginManager isAppInstallationObserver]
  -[CKBalloonPluginManager setIsAppInstallationObserver:]
  -[CKBalloonPluginManager setSnapshotCache:]
  -[CKBalloonPluginManager oldVisibleSwitcherPluginIdentifiers]
  -[CKBalloonPluginManager setOldVisibleSwitcherPluginIdentifiers:]
  -[CKBalloonPluginManager setActiveBrowsers:]
  -[CKBalloonPluginManager viewControllerForPluginIdentifier:]
  -[CKBalloonPluginManager existingPhotoBrowserViewController]
  -[CKBalloonPluginManager init]
  -[CKBalloonPluginManager pluginForAdamID:]
  -[CKBalloonPluginManager forceTearDownRemoteViewsSkippingCameraApp:]
  -[CKBalloonPluginManager forceKillRemoteExtensionsWithDelay:skipCameraApp:]
  -[CKBalloonPluginManager bundleIdentifiersForCurrentExtensionConsumers]
  -[CKBalloonPluginManager invalidateAllActivePluginsSkippingCameraApp:]
  -[CKBalloonPluginManager viewControllerForPluginIdentifier:dataSource:]
  -[CKBalloonPluginManager pluginForIdentifier:]
  -[CKBalloonPluginManager _invalidatePluginForKey:]
  -[CKBalloonPluginManager newViewControllerForPluginIdentifier:dataSource:]
  -[CKBalloonPluginManager browserSnapshotForKey:]
  -[CKBalloonPluginManager isCameraAllowed]
  -[CKBalloonPluginManager updateSnapshotForBrowserViewController:currentBounds:]
  -[CKBalloonPluginManager invalidateAppManagerPlugin]
  -[CKBalloonPluginManager photosBrowserViewControllerWithPluginPayloads:]
  -[CKBalloonPluginManager digitalTouchViewControllerWithDataSource:]
  -[CKBalloonPluginManager handwritingViewControllerWithPluginPayloads:]
  -[CKBalloonPluginManager isViewController:fromPluginWithIdentifier:]
  -[CKBalloonPluginManager setIconCache:]
  -[CKBalloonPluginManager updateIndexPath:forPlugin:isDrawerPluginPath:]
  -[CKBalloonPluginManager allPlugins]
  -[CKBalloonPluginManager orderedPlugins:]
  -[CKBalloonPluginManager candidateAppStripPlugins]
  -[CKBalloonPluginManager _refreshVisibleDrawerPluginsDueToAppInstallationChange]
  -[CKBalloonPluginManager filteredArrayOfInstallationsThatShouldBeVisible:]
  -[CKBalloonPluginManager potentiallyVisiblePlugins]
  -[CKBalloonPluginManager allPotentiallyVisiblePlugins]
  -[CKBalloonPluginManager potentiallyVisibleNonFavoritePlugins]
  -[CKBalloonPluginManager _pluginIndexPathForFavoritePluginWithIdentifier:pluginMap:fallbackMap:]
  -[CKBalloonPluginManager appInstallationWatcher:changedAppInstallation:]
  -[CKBalloonPluginManager updateAppInstallations]
  -[CKBalloonPluginManager _addPluginToRecentsFrontIfNeeded:frontOfRecents:pluginMap:fallbackMap:]
  -[CKBalloonPluginManager appInstallationWatcher:addedAppInstallation:]
  -[CKBalloonPluginManager removeVisibleInstallationWithID:]
  -[CKBalloonPluginManager descriptionOfVisibleDrawerPlugins]
  -[CKBalloonPluginManager existingViewControllerForPluginIdentifier:]
  -[CKBalloonPluginManager forceKillNonCameraRemoteExtensionsImmediately]
  -[CKBalloonPluginManager updateInteractionTimeForPlugin:]
  -[CKBalloonPluginManager invalidateAllActivePlugins]
  -[CKBalloonPluginManager forceKillRemoteExtensionsWithDelay:]
  -[CKBalloonPluginManager dealloc]
  -[CKBalloonPluginManager invalidatePhotosViewController]
  -[CKBalloonPluginManager addExtensionConsumer:]
  -[CKBalloonPluginManager invalidatePhotosPlugin]
  -[CKBalloonPluginManager commitInteractionTimeOrderingChanges]


CKSceneDelegateState : NSObject <NSSecureCoding>
 @property  BOOL composingNewMessage
 @property  NSString *groupID
 @property  NSArray *unreadLastMessages
 @property  NSDate *date
 @property  unsigned long filterMode
 @property  BOOL showingInbox

  // class methods
  +[CKSceneDelegateState supportsSecureCoding]
  +[CKSceneDelegateState unarchivingClasses]

  // instance methods
  -[CKSceneDelegateState groupID]
  -[CKSceneDelegateState setGroupID:]
  -[CKSceneDelegateState initWithCoder:]
  -[CKSceneDelegateState initWithUnreadMessages:groupID:composingNewMessage:filterMode:showingInbox:]
  -[CKSceneDelegateState .cxx_destruct]
  -[CKSceneDelegateState filterMode]
  -[CKSceneDelegateState showingInbox]
  -[CKSceneDelegateState init]
  -[CKSceneDelegateState setShowingInbox:]
  -[CKSceneDelegateState setFilterMode:]
  -[CKSceneDelegateState setUnreadLastMessages:]
  -[CKSceneDelegateState setComposingNewMessage:]
  -[CKSceneDelegateState composingNewMessage]
  -[CKSceneDelegateState setDate:]
  -[CKSceneDelegateState unreadLastMessages]
  -[CKSceneDelegateState encodeWithCoder:]
  -[CKSceneDelegateState date]


CKConversationListNewMessageCollectionViewCell : CKConversationListEmbeddedCollectionViewCell <CKConversationListCellDelegate>
 @property  NSObject<CKConversationListCollectionViewCellDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKConversationListNewMessageCollectionViewCell embeddedTableViewCellClass]
  +[CKConversationListNewMessageCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKConversationListNewMessageCollectionViewCell .cxx_destruct]
  -[CKConversationListNewMessageCollectionViewCell setDelegate:]
  -[CKConversationListNewMessageCollectionViewCell updateContentsForConversation:]
  -[CKConversationListNewMessageCollectionViewCell embeddedNewMessageTableViewCell]
  -[CKConversationListNewMessageCollectionViewCell updateFontSize]
  -[CKConversationListNewMessageCollectionViewCell initWithFrame:]
  -[CKConversationListNewMessageCollectionViewCell delegate]
  -[CKConversationListNewMessageCollectionViewCell didHoverOverCell:]
  -[CKConversationListNewMessageCollectionViewCell widthForDeterminingAvatarVisibility]
  -[CKConversationListNewMessageCollectionViewCell selectedDeleteButtonForConversation:inCell:]


CKConversationListEmbeddedNewMessageTableViewCell : CKConversationListNewMessageCell
  // instance methods
  -[CKConversationListEmbeddedNewMessageTableViewCell hitTest:withEvent:]
  -[CKConversationListEmbeddedNewMessageTableViewCell initWithStyle:reuseIdentifier:]


CKTextEntryLayoutManager : EMKLayoutManager
 @property  NSMutableAttributedString *mentionAttributes
 @property  UIColor *currentMentionColor
 @property  double currentMentionScale
 @property  {CGSize=dd} currentMentionOffset
 @property  UIColor *currentMentionShadowColor
 @property  NSMutableDictionary *animationsByIdentifier
 @property  NSTimer *mentionTimer
 @property  <CKTextEntryLayoutManagerMentionsDelegate> *mentionsDelegate

  // instance methods
  -[CKTextEntryLayoutManager .cxx_destruct]
  -[CKTextEntryLayoutManager setMentionsDelegate:]
  -[CKTextEntryLayoutManager updateMentionAttributes:]
  -[CKTextEntryLayoutManager init]
  -[CKTextEntryLayoutManager animationsByIdentifier]
  -[CKTextEntryLayoutManager startTimerIfNeeded]
  -[CKTextEntryLayoutManager mentionTimer]
  -[CKTextEntryLayoutManager mentionAttributes]
  -[CKTextEntryLayoutManager updateMentionDisplay]
  -[CKTextEntryLayoutManager setMentionTimer:]
  -[CKTextEntryLayoutManager updateDisplayForMentionGlyphRangeRemovingAttribute:]
  -[CKTextEntryLayoutManager mentionsDelegate]
  -[CKTextEntryLayoutManager isAnyMentionAnimationActive]
  -[CKTextEntryLayoutManager stopTimerRemovingAttribute:]
  -[CKTextEntryLayoutManager drawAttributedMentionGlyphsForGlyphRange:atPoint:]
  -[CKTextEntryLayoutManager setCurrentMentionColor:]
  -[CKTextEntryLayoutManager setCurrentMentionScale:]
  -[CKTextEntryLayoutManager setCurrentMentionOffset:]
  -[CKTextEntryLayoutManager setCurrentMentionShadowColor:]
  -[CKTextEntryLayoutManager currentMentionShadowColor]
  -[CKTextEntryLayoutManager currentMentionScale]
  -[CKTextEntryLayoutManager currentMentionOffset]
  -[CKTextEntryLayoutManager currentMentionColor]
  -[CKTextEntryLayoutManager setMentionAttributes:]
  -[CKTextEntryLayoutManager setAnimationsByIdentifier:]
  -[CKTextEntryLayoutManager showCGGlyphs:positions:count:font:textMatrix:attributes:inContext:]
  -[CKTextEntryLayoutManager drawGlyphsForGlyphRange:atPoint:]


CKFullScreenCardAppViewController : UIViewController <CKBrowserViewControllerProtocol, UIGestureRecognizerDelegate, UIAdaptivePresentationControllerDelegate, CKExpandedAppViewControllerProtocol>
 @property  UIViewController *presentationViewController
 @property  NSObject<CKBrowserViewControllerSendDelegate> *sendDelegate
 @property  IMBalloonPlugin *balloonPlugin
 @property  IMBalloonPluginDataSource *balloonPluginDataSource
 @property  BOOL isiMessage
 @property  NSString *conversationID
 @property  BOOL wantsDarkUI
 @property  BOOL wantsOpaqueUI
 @property  BOOL supportsQuickView
 @property  BOOL shouldSuppressEntryView
 @property  BOOL isPrimaryViewController
 @property  BOOL dismissing
 @property  BOOL mayBeKeptInViewHierarchy
 @property  long long browserPresentationStyle
 @property  BOOL shouldShowChatChrome
 @property  BOOL inExpandedPresentation
 @property  BOOL inFullScreenModalPresentation
 @property  NSString *sender
 @property  NSArray *recipients
 @property  BOOL wasExpandedPresentation
 @property  NSData *conversationEngramID
 @property  unsigned long badgeValue
 @property  CKBrowserDragManager *browserDragManager
 @property  long long currentBrowserConsumer
 @property  UIViewController *remoteViewController
 @property  BOOL shouldDisableSnapshotView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} horizontalSwipeExclusionRect
 @property  BOOL canReplaceDataSource
 @property  NSNumber *adamID
 @property  long long parentModalPresentationStyle
 @property  <UIViewControllerTransitioningDelegate> *parentTransitioningDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *contentView
 @property  CKDismissView *dismissView
 @property  BOOL inTransition
 @property  CKConversation *conversation
 @property  long long lastKnownDeviceOrientation
 @property  <UIViewControllerTransitioningDelegate> *parentTransitioningDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIViewController<CKBrowserViewControllerProtocol> *contentViewController
 @property  <CKExpandedAppViewControllerDelegate> *delegate

  // instance methods
  -[CKFullScreenCardAppViewController preferredStatusBarStyle]
  -[CKFullScreenCardAppViewController setContentViewController:]
  -[CKFullScreenCardAppViewController conversationID]
  -[CKFullScreenCardAppViewController inputAccessoryView]
  -[CKFullScreenCardAppViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKFullScreenCardAppViewController lastKnownDeviceOrientation]
  -[CKFullScreenCardAppViewController isiMessage]
  -[CKFullScreenCardAppViewController .cxx_destruct]
  -[CKFullScreenCardAppViewController _updateDimmingViewAlpha]
  -[CKFullScreenCardAppViewController contentView]
  -[CKFullScreenCardAppViewController canBecomeFirstResponder]
  -[CKFullScreenCardAppViewController isLoaded]
  -[CKFullScreenCardAppViewController setDelegate:]
  -[CKFullScreenCardAppViewController shouldAutorotate]
  -[CKFullScreenCardAppViewController dismissView]
  -[CKFullScreenCardAppViewController willMoveToParentViewController:]
  -[CKFullScreenCardAppViewController initWithBalloonPlugin:dataSource:]
  -[CKFullScreenCardAppViewController initWithBalloonPlugin:]
  -[CKFullScreenCardAppViewController setBalloonPluginDataSource:]
  -[CKFullScreenCardAppViewController setDismissView:]
  -[CKFullScreenCardAppViewController balloonPluginDataSource]
  -[CKFullScreenCardAppViewController setConversationID:]
  -[CKFullScreenCardAppViewController contentViewController]
  -[CKFullScreenCardAppViewController viewDidLayoutSubviews]
  -[CKFullScreenCardAppViewController balloonPlugin]
  -[CKFullScreenCardAppViewController viewWillAppear:]
  -[CKFullScreenCardAppViewController setInTransition:]
  -[CKFullScreenCardAppViewController inTransition]
  -[CKFullScreenCardAppViewController _handleRemoteConnectionInterrupted:]
  -[CKFullScreenCardAppViewController _currentPluginIsJellyfish]
  -[CKFullScreenCardAppViewController shouldShowChatChrome]
  -[CKFullScreenCardAppViewController _shouldShowDimmingView]
  -[CKFullScreenCardAppViewController finalContentViewFrame]
  -[CKFullScreenCardAppViewController dismiss]
  -[CKFullScreenCardAppViewController animateBrowserViewToTargetRect:grabberView:completion:]
  -[CKFullScreenCardAppViewController animateBrowserViewFromSourceRect:interactive:grabberView:completion:]
  -[CKFullScreenCardAppViewController shouldDisableSnapshotView]
  -[CKFullScreenCardAppViewController setShouldDisableSnapshotView:]
  -[CKFullScreenCardAppViewController parentTransitioningDelegate]
  -[CKFullScreenCardAppViewController delegate]
  -[CKFullScreenCardAppViewController setConversation:]
  -[CKFullScreenCardAppViewController isDismissing]
  -[CKFullScreenCardAppViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKFullScreenCardAppViewController sendDelegate]
  -[CKFullScreenCardAppViewController isPrimaryViewController]
  -[CKFullScreenCardAppViewController setIsPrimaryViewController:]
  -[CKFullScreenCardAppViewController setIsiMessage:]
  -[CKFullScreenCardAppViewController presentationViewController]
  -[CKFullScreenCardAppViewController setPresentationViewController:]
  -[CKFullScreenCardAppViewController setSendDelegate:]
  -[CKFullScreenCardAppViewController browserPresentationStyle]
  -[CKFullScreenCardAppViewController wantsDarkUI]
  -[CKFullScreenCardAppViewController wantsOpaqueUI]
  -[CKFullScreenCardAppViewController supportsQuickView]
  -[CKFullScreenCardAppViewController mayBeKeptInViewHierarchy]
  -[CKFullScreenCardAppViewController shouldSuppressEntryView]
  -[CKFullScreenCardAppViewController inExpandedPresentation]
  -[CKFullScreenCardAppViewController inFullScreenModalPresentation]
  -[CKFullScreenCardAppViewController dealloc]
  -[CKFullScreenCardAppViewController adaptivePresentationStyleForPresentationController:traitCollection:]
  -[CKFullScreenCardAppViewController conversation]
  -[CKFullScreenCardAppViewController setContentView:]
  -[CKFullScreenCardAppViewController loadView]
  -[CKFullScreenCardAppViewController supportedInterfaceOrientations]
  -[CKFullScreenCardAppViewController initWithConversation:plugin:]
  -[CKFullScreenCardAppViewController viewDidDisappear:]
  -[CKFullScreenCardAppViewController setLastKnownDeviceOrientation:]


CKChatItem : NSObject <CKTranscriptItemLayoutProvider>
 @property  Class chatItemClass
 @property  NSString *layoutGroupIdentifier
 @property  NSArray *visibleAssociatedMessageChatItems
 @property  CKMessagePartHighlightChatItem *messageHighlightChatItem
 @property  IMTranscriptChatItem *IMChatItem
 @property  UITraitCollection *transcriptTraitCollection
 @property  BOOL wantsOverlayLayout
 @property  UNNotification *notification
 @property  NSAttributedString *transcriptText
 @property  NSAttributedString *transcriptDrawerText
 @property  BOOL sizeLoaded
 @property  NSString *transcriptIdentifier
 @property  NSString *layoutGroupIdentifier
 @property  unsigned char contiguousType
 @property  unsigned char attachmentContiguousType
 @property  BOOL hasTail
 @property  BOOL zOrder
 @property  double maxWidth
 @property  {CGSize=dd} size
 @property  {UIEdgeInsets=dddd} textAlignmentInsets
 @property  {UIEdgeInsets=dddd} transcriptTextAlignmentInsets
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  BOOL transcriptOrientation
 @property  Class cellClass
 @property  Class customLayoutGroupProviderClass
 @property  NSString *cellIdentifier
 @property  CNContact *contact
 @property  BOOL displayDuringSend
 @property  BOOL wantsDrawerLayout
 @property  BOOL isEditable
 @property  BOOL canCopy
 @property  BOOL canDelete
 @property  BOOL isSensitive
 @property  BOOL canForward
 @property  BOOL canExport
 @property  BOOL canSendAsTextMessage
 @property  BOOL canInlineReply
 @property  BOOL canQuickSave
 @property  BOOL supportsInlineReplyTransition
 @property  NSString *menuTitle
 @property  BOOL canAttachStickers
 @property  BOOL stickersSnapToPoint
 @property  {CKBalloonDescriptor_t=ccccQccqqBBBB} balloonDescriptor
 @property  long long syndicationBehavior
 @property  BOOL highlighted
 @property  long long syndicationType

  // class methods
  +[CKChatItem chatItemWithIMChatItem:balloonMaxWidth:otherMaxWidth:transcriptTraitCollection:overlayLayout:]
  +[CKChatItem chatItemWithNotification:balloonMaxWidth:otherMaxWidth:]

  // instance methods
  -[CKChatItem isSensitive]
  -[CKChatItem layoutType]
  -[CKChatItem unloadSize]
  -[CKChatItem notification]
  -[CKChatItem canSave]
  -[CKChatItem canDelete]
  -[CKChatItem transcriptText]
  -[CKChatItem isEditable]
  -[CKChatItem transcriptOrientation]
  -[CKChatItem displayDuringSend]
  -[CKChatItem maxWidth]
  -[CKChatItem zOrder]
  -[CKChatItem itemIsFromMe]
  -[CKChatItem IMChatItem]
  -[CKChatItem contentInsets]
  -[CKChatItem itemIsReply]
  -[CKChatItem .cxx_destruct]
  -[CKChatItem hasTail]
  -[CKChatItem canInlineReply]
  -[CKChatItem menuTitle]
  -[CKChatItem canExport]
  -[CKChatItem initWithIMChatItem:maxWidth:]
  -[CKChatItem transcriptTraitCollection]
  -[CKChatItem wantsDrawerLayout]
  -[CKChatItem transcriptTextAlignmentInsets]
  -[CKChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKChatItem itemIsReplyContextPreview]
  -[CKChatItem wantsOverlayLayout]
  -[CKChatItem itemIsThreadOriginator]
  -[CKChatItem canCopy]
  -[CKChatItem setNotification:]
  -[CKChatItem isEqual:]
  -[CKChatItem isHighlighted]
  -[CKChatItem contiguousType]
  -[CKChatItem supportsInlineReplyTransition]
  -[CKChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKChatItem loadTranscriptDrawerText]
  -[CKChatItem loadTranscriptText]
  -[CKChatItem cellIdentifier]
  -[CKChatItem itemIsReplyCount]
  -[CKChatItem size]
  -[CKChatItem balloonDescriptor]
  -[CKChatItem chatItemClass]
  -[CKChatItem setMaxWidth:]
  -[CKChatItem syndicationType]
  -[CKChatItem canQuickSave]
  -[CKChatItem layoutItemSpacingForReplyItemWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKChatItem layoutItemSpacingForReplyContextPreviewWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKChatItem layoutItemSpacingForReplyThreadOriginatorWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKChatItem _additionalTopPaddingForChatItem:datasourceItemIndex:allDatasourceItems:prevChatItem:layoutEnvironment:]
  -[CKChatItem _additionalBottomPaddingForChatItem:datasourceItemIndex:allDatasourceItems:prevChatItem:layoutEnvironment:]
  -[CKChatItem previousReplyCount:allDatasourceItems:isOccludedForAssociatedSize:outMaxY:]
  -[CKChatItem previousPhotoActionItemIsOccluded:allDatasourceItems:]
  -[CKChatItem transcriptIdentifier]
  -[CKChatItem layoutItemWithEnvironment:datasourceItemIndex:allDatasourceItems:]
  -[CKChatItem layoutGroupIdentifier]
  -[CKChatItem layoutGroupIdentifier]
  -[CKChatItem visibleAssociatedMessageChatItems]
  -[CKChatItem attachmentContiguousType]
  -[CKChatItem syndicationBehaviorString]
  -[CKChatItem transcriptDrawerText]
  -[CKChatItem canAttachStickers]
  -[CKChatItem setIMChatItem:]
  -[CKChatItem cellClass]
  -[CKChatItem stickersSnapToPoint]
  -[CKChatItem initWithNotification:maxWidth:]
  -[CKChatItem _setSizeForTesting:]
  -[CKChatItem customLayoutGroupProviderClass]
  -[CKChatItem setWantsOverlayLayout:]
  -[CKChatItem syndicationBehavior]
  -[CKChatItem itemIsReplyFromMe]
  -[CKChatItem setTranscriptText:]
  -[CKChatItem setTranscriptDrawerText:]
  -[CKChatItem isSizeLoaded]
  -[CKChatItem setSizeLoaded:]
  -[CKChatItem setTranscriptIdentifier:]
  -[CKChatItem canSendAsTextMessage]
  -[CKChatItem contact]
  -[CKChatItem canForward]
  -[CKChatItem textAlignmentInsets]
  -[CKChatItem messageHighlightChatItem]
  -[CKChatItem setTranscriptTraitCollection:]
  -[CKChatItem unloadTranscriptText]


CKRecordActionMenuItem : CKActionMenuItem
 @property  BOOL wasSelected
 @property  NSDate *dateSelected

  // instance methods
  -[CKRecordActionMenuItem setSelected:animated:]
  -[CKRecordActionMenuItem .cxx_destruct]
  -[CKRecordActionMenuItem setWasSelected:]
  -[CKRecordActionMenuItem wasSelected]
  -[CKRecordActionMenuItem setDateSelected:]
  -[CKRecordActionMenuItem dateSelected]
  -[CKRecordActionMenuItem updateForState:touchInside:]


CKAnimatedImageMediaObject : CKImageMediaObject
  // class methods
  +[CKAnimatedImageMediaObject __ck_attachmentItemClass]
  +[CKAnimatedImageMediaObject UTITypes]
  +[CKAnimatedImageMediaObject maxPixelDimensionOfThumbnailWithImagePixelSize:forWidth:isSticker:]

  // instance methods
  -[CKAnimatedImageMediaObject notificationCenter]
  -[CKAnimatedImageMediaObject animatedImageForWidth:]
  -[CKAnimatedImageMediaObject validPreviewExistsAtURL:]
  -[CKAnimatedImageMediaObject generateAndPersistAnimatedPreviewFromSourceURL:forWidth:withTransferGUID:isSticker:]
  -[CKAnimatedImageMediaObject saveAnimatedPreview:toURL:forOrientation:]
  -[CKAnimatedImageMediaObject savedPreviewFromURL:forOrientation:]
  -[CKAnimatedImageMediaObject bbPreviewFillToSize:]
  -[CKAnimatedImageMediaObject previewForWidth:orientation:]
  -[CKAnimatedImageMediaObject prewarmPreviewForWidth:orientation:]
  -[CKAnimatedImageMediaObject needsAnimation]
  -[CKAnimatedImageMediaObject canQuickSave]
  -[CKAnimatedImageMediaObject metricsCollectorMediaType]
  -[CKAnimatedImageMediaObject generateThumbnailsForWidth:isSticker:orientation:]
  -[CKAnimatedImageMediaObject savedAnimatedPreviewFromURL:forOrientation:]
  -[CKAnimatedImageMediaObject generateAndPersistAnimatedPreviewFromImageData:forWidth:withTransferGUID:isSticker:]
  -[CKAnimatedImageMediaObject imageEdgeEnhancementBlockIfNecessary]
  -[CKAnimatedImageMediaObject thumbnailAtIndex:forWidth:imageData:isSticker:orientation:]
  -[CKAnimatedImageMediaObject validatePreviewFormat]
  -[CKAnimatedImageMediaObject scaledThumbnailFromThumbnail:forWidth:isSticker:]


CKPinnedConversationMediaObjectBubble : CKPinnedConversationTailedActivityItemView
 @property  UIImageView *imageView
 @property  NSLayoutConstraint *imageViewWidthConstraint
 @property  NSLayoutConstraint *imageViewHeightConstraint
 @property  CKPinnedConversationMediaObjectActivityItem *mediaObjectActivityItem

  // instance methods
  -[CKPinnedConversationMediaObjectBubble imageView]
  -[CKPinnedConversationMediaObjectBubble _updateMediaObjectPreview]
  -[CKPinnedConversationMediaObjectBubble _updatePillCornerRadius]
  -[CKPinnedConversationMediaObjectBubble contentViewContentMode]
  -[CKPinnedConversationMediaObjectBubble _imageViewSize]
  -[CKPinnedConversationMediaObjectBubble setActivityItem:]
  -[CKPinnedConversationMediaObjectBubble setParentAvatarViewSize:]
  -[CKPinnedConversationMediaObjectBubble supportsActivityItemViewContentScale]
  -[CKPinnedConversationMediaObjectBubble activityItemViewContentScale]
  -[CKPinnedConversationMediaObjectBubble setActivityItemViewContentScale:]
  -[CKPinnedConversationMediaObjectBubble supportsAlignmentWithOriginationSubAvatarFrame]
  -[CKPinnedConversationMediaObjectBubble _updateImageViewSizeConstraints]
  -[CKPinnedConversationMediaObjectBubble isAnimojiVideo]
  -[CKPinnedConversationMediaObjectBubble initWithMediaObjectActivityItem:]
  -[CKPinnedConversationMediaObjectBubble contentViewPadding]
  -[CKPinnedConversationMediaObjectBubble mediaObjectActivityItem]
  -[CKPinnedConversationMediaObjectBubble contentViewHorizontalInsetForPillCornerRadius]
  -[CKPinnedConversationMediaObjectBubble imageViewWidthConstraint]
  -[CKPinnedConversationMediaObjectBubble setImageViewWidthConstraint:]
  -[CKPinnedConversationMediaObjectBubble imageViewHeightConstraint]
  -[CKPinnedConversationMediaObjectBubble setImageViewHeightConstraint:]
  -[CKPinnedConversationMediaObjectBubble .cxx_destruct]
  -[CKPinnedConversationMediaObjectBubble isSticker]
  -[CKPinnedConversationMediaObjectBubble contentSizeCategoryDidChange:]
  -[CKPinnedConversationMediaObjectBubble pillCornerRadius]
  -[CKPinnedConversationMediaObjectBubble _previewImage]
  -[CKPinnedConversationMediaObjectBubble setImageView:]


CKPinnedConversationMediaObjectActivityItem : NSObject <CKPinnedConversationActivityItem>
 @property  IMMessage *message
 @property  CKMediaObject *mediaObject
 @property  NSString *attachedContactItemIdentifier
 @property  NSString *activityItemIdentifier
 @property  BOOL activityItemAppearsWithAnimation
 @property  BOOL activityItemDisappearsWithAnimation
 @property  double activityItemContentScale
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKPinnedConversationMediaObjectActivityItem previewImageForMediaObject:]
  +[CKPinnedConversationMediaObjectActivityItem _mediaTypeSupportedForPinningPreview:]
  +[CKPinnedConversationMediaObjectActivityItem previewableMediaObjectFromMessage:]

  // instance methods
  -[CKPinnedConversationMediaObjectActivityItem activityItemIdentifier]
  -[CKPinnedConversationMediaObjectActivityItem activityItemView]
  -[CKPinnedConversationMediaObjectActivityItem activityItemDisappearsWithAnimation]
  -[CKPinnedConversationMediaObjectActivityItem activityItemContentScale]
  -[CKPinnedConversationMediaObjectActivityItem activityItemAppearsWithAnimation]
  -[CKPinnedConversationMediaObjectActivityItem attachedContactItemIdentifier]
  -[CKPinnedConversationMediaObjectActivityItem .cxx_destruct]
  -[CKPinnedConversationMediaObjectActivityItem initWithMessage:mediaObject:contentScale:attachedContactItemIdentifier:]
  -[CKPinnedConversationMediaObjectActivityItem mediaObject]
  -[CKPinnedConversationMediaObjectActivityItem message]


CKStackedAvatarView : UIImageView
 @property  NSArray *contacts

  // instance methods
  -[CKStackedAvatarView .cxx_destruct]
  -[CKStackedAvatarView _stackWithMonograms:]
  -[CKStackedAvatarView contacts]
  -[CKStackedAvatarView initWithContacts:]


CKVideoRecorder : UIViewController <AVCaptureFileOutputRecordingDelegate>
 @property  AVCaptureSession *session
 @property  AVCaptureDeviceInput *rearVideoInput
 @property  AVCaptureDeviceInput *frontVideoInput
 @property  AVCaptureDeviceInput *audioInput
 @property  AVCaptureMovieFileOutput *videoOutput
 @property  AVCaptureStillImageOutput *stillImageOutput
 @property  BOOL canceled
 @property  AVCaptureVideoPreviewLayer *captureVideoPreviewLayer
 @property  long long cameraDevice
 @property  <CKVideoRecorderDelegate> *delegate
 @property  NSURL *outputFileURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKVideoRecorder stillImageOutput]
  -[CKVideoRecorder audioDevice]
  -[CKVideoRecorder setAudioInput:]
  -[CKVideoRecorder .cxx_destruct]
  -[CKVideoRecorder setCaptureVideoPreviewLayer:]
  -[CKVideoRecorder _configureFrontVideoInput]
  -[CKVideoRecorder _configureRearVideoInput]
  -[CKVideoRecorder setStillImageOutput:]
  -[CKVideoRecorder captureVideoPreviewLayer]
  -[CKVideoRecorder setOutputFileURL:]
  -[CKVideoRecorder outputFileURL]
  -[CKVideoRecorder _cameraWithPosition:]
  -[CKVideoRecorder setupCamera:]
  -[CKVideoRecorder rearFacingCamera]
  -[CKVideoRecorder frontFacingCamera]
  -[CKVideoRecorder setFrontVideoInput:]
  -[CKVideoRecorder setRearVideoInput:]
  -[CKVideoRecorder frontVideoInput]
  -[CKVideoRecorder rearVideoInput]
  -[CKVideoRecorder setVideoOutput:]
  -[CKVideoRecorder setDelegate:]
  -[CKVideoRecorder setSession:]
  -[CKVideoRecorder init]
  -[CKVideoRecorder cameraDevice]
  -[CKVideoRecorder audioInput]
  -[CKVideoRecorder takePicture]
  -[CKVideoRecorder setCanceled:]
  -[CKVideoRecorder viewWillAppear:]
  -[CKVideoRecorder captureOutput:didStartRecordingToOutputFileAtURL:fromConnections:]
  -[CKVideoRecorder cancel]
  -[CKVideoRecorder canceled]
  -[CKVideoRecorder delegate]
  -[CKVideoRecorder stopVideoCapture]
  -[CKVideoRecorder setCameraDevice:]
  -[CKVideoRecorder dealloc]
  -[CKVideoRecorder captureOutput:didFinishRecordingToOutputFileAtURL:fromConnections:error:]
  -[CKVideoRecorder videoOutput]
  -[CKVideoRecorder startVideoCapture]
  -[CKVideoRecorder loadView]
  -[CKVideoRecorder session]


CKTranscriptPluginBreadcrumbChatItem : CKMultilineStampChatItem
 @property  IMTranscriptPluginBreadcrumbChatItem *IMChatItem
 @property  UIImage *iconImage
 @property  {CGSize=dd} iconSizePlusHorizontalPadding
 @property  CKTranscriptPluginChatItem *previousPluginChatItem

  // instance methods
  -[CKTranscriptPluginBreadcrumbChatItem iconImage]
  -[CKTranscriptPluginBreadcrumbChatItem layoutType]
  -[CKTranscriptPluginBreadcrumbChatItem transcriptOrientation]
  -[CKTranscriptPluginBreadcrumbChatItem .cxx_destruct]
  -[CKTranscriptPluginBreadcrumbChatItem _wantsIconImage]
  -[CKTranscriptPluginBreadcrumbChatItem _wantsCenteredOrientation]
  -[CKTranscriptPluginBreadcrumbChatItem iconSizePlusHorizontalPadding]
  -[CKTranscriptPluginBreadcrumbChatItem _breadcrumbOptionFlags]
  -[CKTranscriptPluginBreadcrumbChatItem previousPluginChatItem]
  -[CKTranscriptPluginBreadcrumbChatItem setPreviousPluginChatItem:]
  -[CKTranscriptPluginBreadcrumbChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKTranscriptPluginBreadcrumbChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKTranscriptPluginBreadcrumbChatItem loadTranscriptText]
  -[CKTranscriptPluginBreadcrumbChatItem cellClass]


CKBrowserDragWindow : CKPresentationControllerWindow
  // instance methods
  -[CKBrowserDragWindow _canAffectStatusBarAppearance]


CKBrowserDragManager : NSObject <CKBrowserDragViewControllerDelegate, UIGestureRecognizerDelegate>
 @property  id currentItem
 @property  UILongPressGestureRecognizer *gestureRecognizer
 @property  {CGPoint=dd} locationInView
 @property  UIView *targetView
 @property  CKBrowserDragViewController *dragViewController
 @property  UIWindow *dragWindow
 @property  UIViewController *presentingViewController
 @property  <CKBrowserDragControllerDelegate> *delegate
 @property  <CKBrowserDragControllerTranscriptDelegate> *transcriptDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBrowserDragManager setGestureRecognizer:]
  -[CKBrowserDragManager gestureRecognizer]
  -[CKBrowserDragManager gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKBrowserDragManager targetView]
  -[CKBrowserDragManager .cxx_destruct]
  -[CKBrowserDragManager setPresentingViewController:]
  -[CKBrowserDragManager currentItem]
  -[CKBrowserDragManager setDelegate:]
  -[CKBrowserDragManager tapRecognized:]
  -[CKBrowserDragManager beginDraggingItem:withAnimatedDragImage:fromRect:]
  -[CKBrowserDragManager usesSeparateDragWindow]
  -[CKBrowserDragManager setDragWindow:]
  -[CKBrowserDragManager setDragViewController:]
  -[CKBrowserDragManager transcriptDelegate]
  -[CKBrowserDragManager dragViewController]
  -[CKBrowserDragManager presentingViewController]
  -[CKBrowserDragManager setLocationInView:]
  -[CKBrowserDragManager browserDragViewControllerTargetView:]
  -[CKBrowserDragManager browserDragViewController:draggedWithTarget:]
  -[CKBrowserDragManager initWithTargetView:]
  -[CKBrowserDragManager locationInView]
  -[CKBrowserDragManager browserDragViewController:dragEndedWithTarget:]
  -[CKBrowserDragManager beginDraggingItem:withDragImage:fromRect:]
  -[CKBrowserDragManager setPlusButtonHidden:]
  -[CKBrowserDragManager setTranscriptDelegate:]
  -[CKBrowserDragManager dragWindow]
  -[CKBrowserDragManager delegate]
  -[CKBrowserDragManager setCurrentItem:]
  -[CKBrowserDragManager dealloc]
  -[CKBrowserDragManager setTargetView:]


CKTranscriptChatItemRules : IMTranscriptChatItemRules
  // instance methods
  -[CKTranscriptChatItemRules shouldShowRaiseMessageStatus]


CKPendingMomentShareBalloonView : CKAttachmentBalloonView
  // instance methods
  -[CKPendingMomentShareBalloonView prepareForDisplay]
  -[CKPendingMomentShareBalloonView color]
  -[CKPendingMomentShareBalloonView canUseOpaqueMask]
  -[CKPendingMomentShareBalloonView balloonDescriptor]
  -[CKPendingMomentShareBalloonView attachmentView]
  -[CKPendingMomentShareBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKPendingMomentShareBalloonView balloonStyle]


CKUnavailabilityIndicatorChatItem : CKChatItem
 @property  NSAttributedString *unavailableTitleLabelAttributedTextWhenDisplayingNotifyAnywayButton
 @property  NSAttributedString *unavailableTitleLabelAttributedTextWhenNotDisplayingNotifyAnywayButton
 @property  BOOL displayNotifyAnywayButton
 @property  IMUnavailabilityIndicatorChatItem *imUnavailabilityIndicatorChatItem

  // instance methods
  -[CKUnavailabilityIndicatorChatItem layoutType]
  -[CKUnavailabilityIndicatorChatItem transcriptOrientation]
  -[CKUnavailabilityIndicatorChatItem displayDuringSend]
  -[CKUnavailabilityIndicatorChatItem contentInsets]
  -[CKUnavailabilityIndicatorChatItem .cxx_destruct]
  -[CKUnavailabilityIndicatorChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKUnavailabilityIndicatorChatItem displayNotifyAnywayButton]
  -[CKUnavailabilityIndicatorChatItem imUnavailabilityIndicatorChatItem]
  -[CKUnavailabilityIndicatorChatItem _loadUnavailableTitleLabelTextVariants]
  -[CKUnavailabilityIndicatorChatItem _unavailableTitleLabelAttributedTextWhenDisplayingNotifyAnywayButton:]
  -[CKUnavailabilityIndicatorChatItem unavailableTitleLabelAttributedTextWhenDisplayingNotifyAnywayButton]
  -[CKUnavailabilityIndicatorChatItem unavailableTitleLabelAttributedTextWhenNotDisplayingNotifyAnywayButton]
  -[CKUnavailabilityIndicatorChatItem setUnavailableTitleLabelAttributedTextWhenDisplayingNotifyAnywayButton:]
  -[CKUnavailabilityIndicatorChatItem setUnavailableTitleLabelAttributedTextWhenNotDisplayingNotifyAnywayButton:]
  -[CKUnavailabilityIndicatorChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKUnavailabilityIndicatorChatItem loadTranscriptText]
  -[CKUnavailabilityIndicatorChatItem cellClass]
  -[CKUnavailabilityIndicatorChatItem unloadTranscriptText]


CKRecipientGenerator : NSObject
 @property  NSArray *searchABPropertyTypes

  // class methods
  +[CKRecipientGenerator sharedRecipientGenerator]

  // instance methods
  -[CKRecipientGenerator .cxx_destruct]
  -[CKRecipientGenerator recipientWithAddress:]
  -[CKRecipientGenerator recipientWithContact:]
  -[CKRecipientGenerator recipientWithContactProperty:]
  -[CKRecipientGenerator searchABPropertyTypes]
  -[CKRecipientGenerator _appendSearchResults:identifiers:abPropertyType:toArray:]
  -[CKRecipientGenerator getAddressForContact:address:kind:]
  -[CKRecipientGenerator setSearchABPropertyTypes:]


CKSpringBoardActionManager : NSObject <CKContactsSearchManagerDelegate>
 @property  CKContactsSearchManager *contactsSearchManager
 @property  NSArray *conversationCache
 @property  BOOL shouldHideGroupsDonations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSpringBoardActionManager sharedInstance]

  // instance methods
  -[CKSpringBoardActionManager conversationCache]
  -[CKSpringBoardActionManager chatStateChanged:]
  -[CKSpringBoardActionManager setConversationCache:]
  -[CKSpringBoardActionManager setShouldHideGroupsDonations:]
  -[CKSpringBoardActionManager contactsSearchManager:finishedSearchingWithResults:]
  -[CKSpringBoardActionManager conversationCacheForContactsSearchManager:]
  -[CKSpringBoardActionManager shouldHideGroupsDonations]
  -[CKSpringBoardActionManager .cxx_destruct]
  -[CKSpringBoardActionManager init]
  -[CKSpringBoardActionManager updateShortcutItems]
  -[CKSpringBoardActionManager contactsSearchManager]
  -[CKSpringBoardActionManager shortcutItemForConversation:]
  -[CKSpringBoardActionManager _refreshConversationCache]
  -[CKSpringBoardActionManager setContactsSearchManager:]
  -[CKSpringBoardActionManager dealloc]


CKDetailsSharedWithYouCell : CKDetailsCell <CKDetailsCell>
 @property  UISwitch *controlSwitch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsSharedWithYouCell shouldHighlight]
  +[CKDetailsSharedWithYouCell estimatedHeight]
  +[CKDetailsSharedWithYouCell reuseIdentifier]
  +[CKDetailsSharedWithYouCell preferredHeight]

  // instance methods
  -[CKDetailsSharedWithYouCell .cxx_destruct]
  -[CKDetailsSharedWithYouCell controlSwitch]
  -[CKDetailsSharedWithYouCell prepareForReuse]
  -[CKDetailsSharedWithYouCell setControlSwitch:]
  -[CKDetailsSharedWithYouCell _configureNewControlSwitch]
  -[CKDetailsSharedWithYouCell initWithStyle:reuseIdentifier:]


CKWatchfaceImageBalloonView : CKLinkBalloonView
 @property  LPLinkMetadata *metadata

  // instance methods
  -[CKWatchfaceImageBalloonView prepareForDisplay]
  -[CKWatchfaceImageBalloonView .cxx_destruct]
  -[CKWatchfaceImageBalloonView isIrisAsset]
  -[CKWatchfaceImageBalloonView prepareForReuse]
  -[CKWatchfaceImageBalloonView metadata]
  -[CKWatchfaceImageBalloonView setMetadata:]
  -[CKWatchfaceImageBalloonView setIsIrisAsset:]
  -[CKWatchfaceImageBalloonView tapGestureRecognized:]
  -[CKWatchfaceImageBalloonView configureForMediaObject:previewWidth:orientation:hasInvisibleInkEffect:]


CKBrowserSwitcherFooterView : UIView <UICollectionViewDelegate, UICollectionViewDataSource, UIGestureRecognizerDelegate>
 @property  UIView *grayLine
 @property  <CKBrowserSwitcherFooterViewDelegate> *delegate
 @property  <CKBrowserSwitcherFooterViewDataSource> *dataSource
 @property  BOOL isMagnified
 @property  BOOL scrollsLastUsedAppIconIntoView
 @property  BOOL hideShinyStatus
 @property  BOOL showBorders
 @property  BOOL toggleBordersOnInterfaceStyle
 @property  CKAppStripLayout *appStripLayout
 @property  BOOL minifiesOnSelection
 @property  BOOL isMinifyingOnTranscriptScroll
 @property  double snapshotVerticalOffset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBrowserSwitcherFooterView collectionView:cellForItemAtIndexPath:]
  -[CKBrowserSwitcherFooterView collectionView:numberOfItemsInSection:]
  -[CKBrowserSwitcherFooterView contentHeight]
  -[CKBrowserSwitcherFooterView collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[CKBrowserSwitcherFooterView clearSelection]
  -[CKBrowserSwitcherFooterView collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:]
  -[CKBrowserSwitcherFooterView numberOfSectionsInCollectionView:]
  -[CKBrowserSwitcherFooterView collectionView:didSelectItemAtIndexPath:]
  -[CKBrowserSwitcherFooterView willMoveToSuperview:]
  -[CKBrowserSwitcherFooterView setScrollsLastUsedAppIconIntoView:]
  -[CKBrowserSwitcherFooterView collectionView:moveItemAtIndexPath:toIndexPath:]
  -[CKBrowserSwitcherFooterView setSnapshotVerticalOffset:]
  -[CKBrowserSwitcherFooterView collectionView:canMoveItemAtIndexPath:]
  -[CKBrowserSwitcherFooterView willMoveToWindow:]
  -[CKBrowserSwitcherFooterView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKBrowserSwitcherFooterView setDataSource:]
  -[CKBrowserSwitcherFooterView grayLine]
  -[CKBrowserSwitcherFooterView .cxx_destruct]
  -[CKBrowserSwitcherFooterView scrollViewDidEndScrollingAnimation:]
  -[CKBrowserSwitcherFooterView appStripLayout]
  -[CKBrowserSwitcherFooterView collectionView:shouldHighlightItemAtIndexPath:]
  -[CKBrowserSwitcherFooterView updatePredictiveTypeSnapshot:]
  -[CKBrowserSwitcherFooterView animateAppStripVisible:animated:completion:]
  -[CKBrowserSwitcherFooterView minifyImmediately:]
  -[CKBrowserSwitcherFooterView selectPluginAtIndexPath:]
  -[CKBrowserSwitcherFooterView layoutSubviews]
  -[CKBrowserSwitcherFooterView setDelegate:]
  -[CKBrowserSwitcherFooterView dataSource]
  -[CKBrowserSwitcherFooterView collectionView]
  -[CKBrowserSwitcherFooterView init]
  -[CKBrowserSwitcherFooterView resetScrollPosition]
  -[CKBrowserSwitcherFooterView isMagnified]
  -[CKBrowserSwitcherFooterView setGrayLine:]
  -[CKBrowserSwitcherFooterView appsLongPressed:]
  -[CKBrowserSwitcherFooterView touchTrackerTrackedTouches:]
  -[CKBrowserSwitcherFooterView setShowBorders:]
  -[CKBrowserSwitcherFooterView visibleAppsChanges:]
  -[CKBrowserSwitcherFooterView updateCollectionView:]
  -[CKBrowserSwitcherFooterView installedAppsChanged:]
  -[CKBrowserSwitcherFooterView updateBrowserCell:]
  -[CKBrowserSwitcherFooterView transcriptCollectionStartedScrolling:]
  -[CKBrowserSwitcherFooterView initWithFrame:toggleBordersOnInterfaceStyle:]
  -[CKBrowserSwitcherFooterView insetsForAppStrip]
  -[CKBrowserSwitcherFooterView hideShinyStatus]
  -[CKBrowserSwitcherFooterView scrollViewWillBeginDragging:]
  -[CKBrowserSwitcherFooterView contentHeightForCameraApps]
  -[CKBrowserSwitcherFooterView adjustMagnificationAtPoint:minifyImmediately:]
  -[CKBrowserSwitcherFooterView targetContentOffsetForFocusPoint:initialLayoutMode:finalLayoutMode:]
  -[CKBrowserSwitcherFooterView scrollsLastUsedAppIconIntoView]
  -[CKBrowserSwitcherFooterView showBorders]
  -[CKBrowserSwitcherFooterView _updateVisibilityState]
  -[CKBrowserSwitcherFooterView snapshotVerticalOffset]
  -[CKBrowserSwitcherFooterView setInitiallySelectedPluginIfNeeded]
  -[CKBrowserSwitcherFooterView setIsMagnified:]
  -[CKBrowserSwitcherFooterView setHideShinyStatus:]
  -[CKBrowserSwitcherFooterView toggleBordersOnInterfaceStyle]
  -[CKBrowserSwitcherFooterView setToggleBordersOnInterfaceStyle:]
  -[CKBrowserSwitcherFooterView setAppStripLayout:]
  -[CKBrowserSwitcherFooterView minifiesOnSelection]
  -[CKBrowserSwitcherFooterView setMinifiesOnSelection:]
  -[CKBrowserSwitcherFooterView isMinifyingOnTranscriptScroll]
  -[CKBrowserSwitcherFooterView setIsMinifyingOnTranscriptScroll:]
  -[CKBrowserSwitcherFooterView delegate]
  -[CKBrowserSwitcherFooterView _dynamicUserInterfaceTraitDidChange]
  -[CKBrowserSwitcherFooterView dealloc]
  -[CKBrowserSwitcherFooterView reloadData]


CKAppStripPredictiveType3DRotationTransition : NSObject <CKAppStripPredictiveTypeTransition>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAppStripPredictiveType3DRotationTransition transitionFromView:toView:withDirection:completion:]


CKAppStripPredictiveTypeSpringFadeTransition : NSObject <CKAppStripPredictiveTypeTransition>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAppStripPredictiveTypeSpringFadeTransition transitionFromView:toView:withDirection:completion:]


CKAppStripPredictiveTypeSimpleFadeTransition : NSObject <CKAppStripPredictiveTypeTransition>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAppStripPredictiveTypeSimpleFadeTransition transitionFromView:toView:withDirection:completion:]


CKSnapshotUtilities : NSObject
  // class methods
  +[CKSnapshotUtilities _snapshotAtURL:]
  +[CKSnapshotUtilities _convertUserInterfaceStyle:]
  +[CKSnapshotUtilities snapshotKeyWithGuid:]
  +[CKSnapshotUtilities _saveSnapshot:url:]
  +[CKSnapshotUtilities cacheSnapshot:guid:postChangeNotification:]
  +[CKSnapshotUtilities snapshotExistsForGUID:]
  +[CKSnapshotUtilities _cacheSnapshotView:forGUID:]
  +[CKSnapshotUtilities _snapshotViewForGUID:]
  +[CKSnapshotUtilities snapshotForGUID:]


CKAvatarShadowClippingLeftCollectionReusableView : CKAvatarShadowClippingCollectionReusableView
  // class methods
  +[CKAvatarShadowClippingLeftCollectionReusableView shadowSize]
  +[CKAvatarShadowClippingLeftCollectionReusableView decorationViewKind]

  // instance methods
  -[CKAvatarShadowClippingLeftCollectionReusableView imageView]


CKConversationListLargeTextCell : CKConversationListCell
 @property  UILayoutGuide *firstLineLayoutGuide
 @property  NSLayoutConstraint *editingDependentConstraint
 @property  NSArray *contentSizeCategoryDependentConstraints
 @property  NSTextAttachment *unreadIndicatorAttachment
 @property  UIColor *unreadIndicatorColor

  // class methods
  +[CKConversationListLargeTextCell cellHeightForDisplayScale:]
  +[CKConversationListLargeTextCell identifierForConversation:]
  +[CKConversationListLargeTextCell hyphenationParagraphStyle]

  // instance methods
  -[CKConversationListLargeTextCell updateForEditing:]
  -[CKConversationListLargeTextCell unreadIndicatorImageForVisibility:withMuteState:]
  -[CKConversationListLargeTextCell .cxx_destruct]
  -[CKConversationListLargeTextCell unreadIndicatorColorForVisibility:withMuteState:]
  -[CKConversationListLargeTextCell updateUnreadIndicatorWithImage:tintColor:]
  -[CKConversationListLargeTextCell unreadIndicatorColor]
  -[CKConversationListLargeTextCell initWithStyle:reuseIdentifier:]
  -[CKConversationListLargeTextCell setFirstLineLayoutGuide:]
  -[CKConversationListLargeTextCell firstLineLayoutGuide]
  -[CKConversationListLargeTextCell _constraintForEditing:]
  -[CKConversationListLargeTextCell setEditingDependentConstraint:]
  -[CKConversationListLargeTextCell editingDependentConstraint]
  -[CKConversationListLargeTextCell _contentSizeCategoryDependentConstraints]
  -[CKConversationListLargeTextCell setContentSizeCategoryDependentConstraints:]
  -[CKConversationListLargeTextCell contentSizeCategoryDependentConstraints]
  -[CKConversationListLargeTextCell unreadIndicatorAttachment]
  -[CKConversationListLargeTextCell setUnreadIndicatorColor:]
  -[CKConversationListLargeTextCell setUnreadIndicatorAttachment:]
  -[CKConversationListLargeTextCell updateContentsForConversation:fastPreview:]
  -[CKConversationListLargeTextCell updateFromLabelWithText:]
  -[CKConversationListLargeTextCell contentSizeCategoryDidChange]


CKTitledImageBalloonView : CKImageBalloonView
 @property  UIImageView *chevron
 @property  UILabel *titleLabel
 @property  UIVisualEffectView *effectView
 @property  NSString *title
 @property  <CKTitledImageBalloonViewDelegate> *delegate

  // instance methods
  -[CKTitledImageBalloonView titleLabel]
  -[CKTitledImageBalloonView setEffectView:]
  -[CKTitledImageBalloonView setOrientation:]
  -[CKTitledImageBalloonView setTitle:]
  -[CKTitledImageBalloonView chevron]
  -[CKTitledImageBalloonView prepareForDisplay]
  -[CKTitledImageBalloonView .cxx_destruct]
  -[CKTitledImageBalloonView setTitleLabel:]
  -[CKTitledImageBalloonView layoutSubviews]
  -[CKTitledImageBalloonView effectView]
  -[CKTitledImageBalloonView prepareForReuse]
  -[CKTitledImageBalloonView title]
  -[CKTitledImageBalloonView initWithFrame:]
  -[CKTitledImageBalloonView configureForLocatingChatItem:]
  -[CKTitledImageBalloonView setChevron:]
  -[CKTitledImageBalloonView tapGestureRecognized:]
  -[CKTitledImageBalloonView alignmentRectInsets]
  -[CKTitledImageBalloonView configureForMediaObject:previewWidth:orientation:hasInvisibleInkEffect:]


CKUpdateBannerView : UIView <UITextViewDelegate>
 @property  unsigned long style
 @property  unsigned long bannerType
 @property  BOOL useNamedTitles
 @property  BOOL useNamedSubtitles
 @property  BOOL inUpdatesMode
 @property  UITextView *titleLabel
 @property  UITextView *subtitleLabel
 @property  double titleLabelAlignmentX
 @property  double avatarViewAlignmentX
 @property  NSDictionary *contactMap
 @property  UIVisualEffectView *blurView
 @property  CKAvatarView *avatarView
 @property  CKAvatarView *secondaryAvatarView
 @property  UIView *avatarCutoutView
 @property  UIImageView *contactsIconView
 @property  UIButton *cancelButton
 @property  <CKBannerUpdatesViewDelegate> *updatesDelegate
 @property  UIView *bottomSeparatorView
 @property  UIView *topSeparatorView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKUpdateBannerView blurView]
  -[CKUpdateBannerView titleLabel]
  -[CKUpdateBannerView setSubtitleLabel:]
  -[CKUpdateBannerView layoutMargins]
  -[CKUpdateBannerView setAvatarView:]
  -[CKUpdateBannerView cancelButton]
  -[CKUpdateBannerView .cxx_destruct]
  -[CKUpdateBannerView _updateAvatarView]
  -[CKUpdateBannerView setCancelButton:]
  -[CKUpdateBannerView avatarView]
  -[CKUpdateBannerView setStyle:]
  -[CKUpdateBannerView setTitleLabel:]
  -[CKUpdateBannerView layoutSubviews]
  -[CKUpdateBannerView bannerType]
  -[CKUpdateBannerView setupViews]
  -[CKUpdateBannerView textView:shouldInteractWithURL:inRange:interaction:]
  -[CKUpdateBannerView setUpdatesDelegate:]
  -[CKUpdateBannerView sizeThatFits:]
  -[CKUpdateBannerView subtitleLabel]
  -[CKUpdateBannerView topSeparatorView]
  -[CKUpdateBannerView bottomSeparatorView]
  -[CKUpdateBannerView contactMap]
  -[CKUpdateBannerView setBlurView:]
  -[CKUpdateBannerView setBannerType:]
  -[CKUpdateBannerView useNamedSubtitles]
  -[CKUpdateBannerView setTopSeparatorView:]
  -[CKUpdateBannerView setBottomSeparatorView:]
  -[CKUpdateBannerView _titleLabelAlignmentX]
  -[CKUpdateBannerView setUseNamedSubtitles:]
  -[CKUpdateBannerView setTitleLabelAlignmentX:]
  -[CKUpdateBannerView avatarViewAlignmentX]
  -[CKUpdateBannerView setAvatarViewAlignmentX:]
  -[CKUpdateBannerView setContactMap:]
  -[CKUpdateBannerView initWithFrame:style:useNamedTitles:updates:inUpdatesMode:]
  -[CKUpdateBannerView updatesDelegate]
  -[CKUpdateBannerView inUpdatesMode]
  -[CKUpdateBannerView style]
  -[CKUpdateBannerView setUseNamedTitles:]
  -[CKUpdateBannerView setInUpdatesMode:]
  -[CKUpdateBannerView contactsIconView]
  -[CKUpdateBannerView setSecondaryAvatarView:]
  -[CKUpdateBannerView setAvatarCutoutView:]
  -[CKUpdateBannerView cancelGlyph]
  -[CKUpdateBannerView secondaryAvatarView]
  -[CKUpdateBannerView avatarCutoutView]
  -[CKUpdateBannerView setContactsIconView:]
  -[CKUpdateBannerView _updateSubtitleLabel]
  -[CKUpdateBannerView _updateTitleLabel]
  -[CKUpdateBannerView addSeparators]
  -[CKUpdateBannerView maxLabelWidthForSize:]
  -[CKUpdateBannerView titleLabelAlignmentX]
  -[CKUpdateBannerView useNamedTitles]


CKGroupUpdateBannerView : CKUpdateBannerView
 @property  NSArray *groupUpdates
 @property  unsigned long updateBannerType

  // instance methods
  -[CKGroupUpdateBannerView layoutMargins]
  -[CKGroupUpdateBannerView .cxx_destruct]
  -[CKGroupUpdateBannerView _updateAvatarView]
  -[CKGroupUpdateBannerView sizeThatFits:]
  -[CKGroupUpdateBannerView groupUpdates]
  -[CKGroupUpdateBannerView updateBannerType]
  -[CKGroupUpdateBannerView initWithFrame:style:useNamedTitles:updates:inUpdatesMode:]
  -[CKGroupUpdateBannerView setUpdateBannerType:]
  -[CKGroupUpdateBannerView setGroupUpdates:]
  -[CKGroupUpdateBannerView getContactDisplayName:]
  -[CKGroupUpdateBannerView cancelGlyph]
  -[CKGroupUpdateBannerView cancelButtonTapped:]
  -[CKGroupUpdateBannerView _updateSubtitleLabel]
  -[CKGroupUpdateBannerView _updateTitleLabel]
  -[CKGroupUpdateBannerView maxLabelWidthForSize:]
  -[CKGroupUpdateBannerView titleLabelAlignmentX]


CKBackgroundDecorationView : UICollectionReusableView
  // instance methods
  -[CKBackgroundDecorationView initWithFrame:]


CKSearchResultsTitleHeaderCell : UICollectionReusableView <CKSearchResultSupplementryCell>
 @property  UILabel *sectionTitle
 @property  UIButton *showAllButton
 @property  CALayer *topHairline
 @property  double titleTopPadding
 @property  double titleBottomPadding
 @property  UIVisualEffectView *macBackgroundVisualEffectView
 @property  <CKSearchResultsTitleHeaderCellDelegate> *delegate
 @property  unsigned long sectionIndex
 @property  BOOL useMacSidebarVisualEffectView
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSearchResultsTitleHeaderCell desiredZPosition]
  +[CKSearchResultsTitleHeaderCell supplementaryViewType]
  +[CKSearchResultsTitleHeaderCell reuseIdentifier]

  // instance methods
  -[CKSearchResultsTitleHeaderCell setTitle:]
  -[CKSearchResultsTitleHeaderCell .cxx_destruct]
  -[CKSearchResultsTitleHeaderCell preferredLayoutAttributesFittingAttributes:]
  -[CKSearchResultsTitleHeaderCell showAllButton]
  -[CKSearchResultsTitleHeaderCell layoutSubviews]
  -[CKSearchResultsTitleHeaderCell topHairline]
  -[CKSearchResultsTitleHeaderCell marginInsets]
  -[CKSearchResultsTitleHeaderCell setShowAllButton:]
  -[CKSearchResultsTitleHeaderCell setDelegate:]
  -[CKSearchResultsTitleHeaderCell sectionIndex]
  -[CKSearchResultsTitleHeaderCell setSectionIndex:]
  -[CKSearchResultsTitleHeaderCell prepareForReuse]
  -[CKSearchResultsTitleHeaderCell initWithFrame:]
  -[CKSearchResultsTitleHeaderCell sectionTitle]
  -[CKSearchResultsTitleHeaderCell setMarginInsets:]
  -[CKSearchResultsTitleHeaderCell delegate]
  -[CKSearchResultsTitleHeaderCell setSectionTitle:]
  -[CKSearchResultsTitleHeaderCell setMacBackgroundVisualEffectView:]
  -[CKSearchResultsTitleHeaderCell setTitleTopPadding:]
  -[CKSearchResultsTitleHeaderCell setTitleBottomPadding:]
  -[CKSearchResultsTitleHeaderCell setTopHairline:]
  -[CKSearchResultsTitleHeaderCell _showAllButtonTapped:]
  -[CKSearchResultsTitleHeaderCell titleTopPadding]
  -[CKSearchResultsTitleHeaderCell titleBottomPadding]
  -[CKSearchResultsTitleHeaderCell macBackgroundVisualEffectView]
  -[CKSearchResultsTitleHeaderCell setUseMacSidebarVisualEffectView:]
  -[CKSearchResultsTitleHeaderCell useMacSidebarVisualEffectView]


CKDetailsSearchResultsTitleHeaderCell : CKSearchResultsTitleHeaderCell
 @property  CALayer *bottomHairline
 @property  <CKDetailsSearchResultsTitleHeaderCellDelegate> *detailsViewDelegate

  // class methods
  +[CKDetailsSearchResultsTitleHeaderCell supplementaryViewType]
  +[CKDetailsSearchResultsTitleHeaderCell reuseIdentifier]

  // instance methods
  -[CKDetailsSearchResultsTitleHeaderCell setTitle:]
  -[CKDetailsSearchResultsTitleHeaderCell .cxx_destruct]
  -[CKDetailsSearchResultsTitleHeaderCell preferredLayoutAttributesFittingAttributes:]
  -[CKDetailsSearchResultsTitleHeaderCell layoutSubviews]
  -[CKDetailsSearchResultsTitleHeaderCell bottomHairline]
  -[CKDetailsSearchResultsTitleHeaderCell initWithFrame:]
  -[CKDetailsSearchResultsTitleHeaderCell _showAllButtonTapped:]
  -[CKDetailsSearchResultsTitleHeaderCell detailsViewDelegate]
  -[CKDetailsSearchResultsTitleHeaderCell setDetailsViewDelegate:]
  -[CKDetailsSearchResultsTitleHeaderCell setBottomHairline:]


CKDetailsSearchResultsFooterCell : UICollectionViewCell <UITableViewDelegate, UITableViewDataSource, CKSearchResultSupplementryCell>
 @property  UITableView *tableView
 @property  CALayer *topHairline
 @property  CALayer *bottomHairline
 @property  <CKDetailsSearchResultsFooterCellDelegate> *delegate
 @property  unsigned long sectionIndex
 @property  NSString *sectionIdentifier
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {UIEdgeInsets=dddd} marginInsets

  // class methods
  +[CKDetailsSearchResultsFooterCell desiredZPosition]
  +[CKDetailsSearchResultsFooterCell supplementaryViewType]
  +[CKDetailsSearchResultsFooterCell reuseIdentifier]

  // instance methods
  -[CKDetailsSearchResultsFooterCell sectionIdentifier]
  -[CKDetailsSearchResultsFooterCell setTableView:]
  -[CKDetailsSearchResultsFooterCell setTitle:]
  -[CKDetailsSearchResultsFooterCell tableView:numberOfRowsInSection:]
  -[CKDetailsSearchResultsFooterCell .cxx_destruct]
  -[CKDetailsSearchResultsFooterCell preferredLayoutAttributesFittingAttributes:]
  -[CKDetailsSearchResultsFooterCell tableView:didSelectRowAtIndexPath:]
  -[CKDetailsSearchResultsFooterCell layoutSubviews]
  -[CKDetailsSearchResultsFooterCell tableView:cellForRowAtIndexPath:]
  -[CKDetailsSearchResultsFooterCell topHairline]
  -[CKDetailsSearchResultsFooterCell marginInsets]
  -[CKDetailsSearchResultsFooterCell bottomHairline]
  -[CKDetailsSearchResultsFooterCell setDelegate:]
  -[CKDetailsSearchResultsFooterCell sectionIndex]
  -[CKDetailsSearchResultsFooterCell setSectionIndex:]
  -[CKDetailsSearchResultsFooterCell tableView]
  -[CKDetailsSearchResultsFooterCell title]
  -[CKDetailsSearchResultsFooterCell initWithFrame:]
  -[CKDetailsSearchResultsFooterCell setMarginInsets:]
  -[CKDetailsSearchResultsFooterCell delegate]
  -[CKDetailsSearchResultsFooterCell setTopHairline:]
  -[CKDetailsSearchResultsFooterCell setBottomHairline:]
  -[CKDetailsSearchResultsFooterCell setSectionIdentifier:]


CKServiceChatItem : CKStampChatItem
  // instance methods
  -[CKServiceChatItem layoutType]
  -[CKServiceChatItem _serviceName]
  -[CKServiceChatItem loadTranscriptText]


CKDetailsSharedWithYouHeaderFooterView : UITableViewHeaderFooterView <CKDetailsHeaderFooterView>
 @property  UITextView *sharedWithYouTextView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsSharedWithYouHeaderFooterView reuseIdentifier]

  // instance methods
  -[CKDetailsSharedWithYouHeaderFooterView .cxx_destruct]
  -[CKDetailsSharedWithYouHeaderFooterView setSharedWithYouTextView:]
  -[CKDetailsSharedWithYouHeaderFooterView layoutSubviews]
  -[CKDetailsSharedWithYouHeaderFooterView sharedWithYouTextView]


CKTruncatedTextBalloonView : CKHyperlinkBalloonView <NSLayoutManagerDelegate>
 @property  UIImageView *chevron
 @property  BOOL avoidTextLineBreaks
 @property  BOOL wantsChevron
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKTruncatedTextBalloonView chevron]
  -[CKTruncatedTextBalloonView prepareForDisplay]
  -[CKTruncatedTextBalloonView .cxx_destruct]
  -[CKTruncatedTextBalloonView layoutSubviews]
  -[CKTruncatedTextBalloonView wantsChevron]
  -[CKTruncatedTextBalloonView configureForMessagePart:]
  -[CKTruncatedTextBalloonView initWithFrame:]
  -[CKTruncatedTextBalloonView setChevron:]
  -[CKTruncatedTextBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKTruncatedTextBalloonView setWantsChevron:]
  -[CKTruncatedTextBalloonView avoidTextLineBreaks]
  -[CKTruncatedTextBalloonView setAvoidTextLineBreaks:]


CKAppSearchResultsTableViewController : UITableViewController <UISearchResultsUpdating>
 @property  NSArray *searchResults
 @property  NSArray *allPlugins
 @property  <CKBrowserAppManagerViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAppSearchResultsTableViewController numberOfSectionsInTableView:]
  -[CKAppSearchResultsTableViewController updateSearchResultsForSearchController:]
  -[CKAppSearchResultsTableViewController tableView:numberOfRowsInSection:]
  -[CKAppSearchResultsTableViewController .cxx_destruct]
  -[CKAppSearchResultsTableViewController setAllPlugins:]
  -[CKAppSearchResultsTableViewController tableView:didSelectRowAtIndexPath:]
  -[CKAppSearchResultsTableViewController viewDidLoad]
  -[CKAppSearchResultsTableViewController tableView:cellForRowAtIndexPath:]
  -[CKAppSearchResultsTableViewController searchEnded]
  -[CKAppSearchResultsTableViewController setDelegate:]
  -[CKAppSearchResultsTableViewController tableView:shouldIndentWhileEditingRowAtIndexPath:]
  -[CKAppSearchResultsTableViewController allPlugins]
  -[CKAppSearchResultsTableViewController delegate]
  -[CKAppSearchResultsTableViewController searchResults]
  -[CKAppSearchResultsTableViewController setSearchResults:]


CKTUConversationChatItem : CKBalloonChatItem
 @property  BOOL color
 @property  NSUUID *tuConversationUUID
 @property  BOOL senderUnknown

  // instance methods
  -[CKTUConversationChatItem color]
  -[CKTUConversationChatItem sender]
  -[CKTUConversationChatItem balloonViewClass]
  -[CKTUConversationChatItem configureBalloonView:]
  -[CKTUConversationChatItem isFromMe]
  -[CKTUConversationChatItem time]
  -[CKTUConversationChatItem tuConversationUUID]
  -[CKTUConversationChatItem shouldCacheSize]
  -[CKTUConversationChatItem isSendersUnknown]
  -[CKTUConversationChatItem isSenderUnknown]


CKMentionSuggestionView : UIView <UICollectionViewDelegate, UIGestureRecognizerDelegate>
 @property  UICollectionView *collectionView
 @property  UICollectionViewDiffableDataSource *diffableDataSource
 @property  UICollectionViewCompositionalLayout *suggestionViewLayout
 @property  BOOL hasCompletedInitialLayoutPass
 @property  <CKMentionSuggestionViewDelegate> *delegate
 @property  <CKMentionSuggestionViewDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMentionSuggestionView collectionView:didSelectItemAtIndexPath:]
  -[CKMentionSuggestionView setDataSource:]
  -[CKMentionSuggestionView .cxx_destruct]
  -[CKMentionSuggestionView diffableDataSource]
  -[CKMentionSuggestionView suggestionsDidChange]
  -[CKMentionSuggestionView setDelegate:]
  -[CKMentionSuggestionView dataSource]
  -[CKMentionSuggestionView collectionView]
  -[CKMentionSuggestionView init]
  -[CKMentionSuggestionView setDiffableDataSource:]
  -[CKMentionSuggestionView setCollectionView:]
  -[CKMentionSuggestionView initWithFrame:]
  -[CKMentionSuggestionView delegate]
  -[CKMentionSuggestionView dealloc]
  -[CKMentionSuggestionView reloadData]
  -[CKMentionSuggestionView intrinsicContentSize]
  -[CKMentionSuggestionView hasCompletedInitialLayoutPass]
  -[CKMentionSuggestionView setHasCompletedInitialLayoutPass:]
  -[CKMentionSuggestionView suggestionsLayoutSectionForEnvironment:]
  -[CKMentionSuggestionView suggestionsLayout]
  -[CKMentionSuggestionView suggestionViewLayout]
  -[CKMentionSuggestionView setSuggestionViewLayout:]


CKTextMessagePartChatItem : CKMessagePartChatItem
 @property  NSAttributedString *text
 @property  NSAttributedString *fallbackCorruptText
 @property  NSAttributedString *subject
 @property  BOOL containsHyperlink
 @property  BOOL containsExcessiveLineHeightCharacters
 @property  BOOL shouldUseBigEmoji

  // instance methods
  -[CKTextMessagePartChatItem _time]
  -[CKTextMessagePartChatItem subject]
  -[CKTextMessagePartChatItem _attributedTextWithTextColor:]
  -[CKTextMessagePartChatItem _fallbackCorruptMessageTextWithTextColor:]
  -[CKTextMessagePartChatItem containsHyperlink]
  -[CKTextMessagePartChatItem impactBalloonViewClass]
  -[CKTextMessagePartChatItem fallbackCorruptText]
  -[CKTextMessagePartChatItem sendAnimationTextWithColor:]
  -[CKTextMessagePartChatItem containsExcessiveLineHeightCharacters]
  -[CKTextMessagePartChatItem .cxx_destruct]
  -[CKTextMessagePartChatItem allowsMentions]
  -[CKTextMessagePartChatItem bodyTextFont]
  -[CKTextMessagePartChatItem balloonViewClass]
  -[CKTextMessagePartChatItem meMentionsTextColor]
  -[CKTextMessagePartChatItem shouldUseBigEmoji]
  -[CKTextMessagePartChatItem loadTranscriptText]
  -[CKTextMessagePartChatItem dragItemProvider]
  -[CKTextMessagePartChatItem text]
  -[CKTextMessagePartChatItem showMoneyResults]
  -[CKTextMessagePartChatItem rtfDocumentItemsWithFormatString:selectedTextRange:]
  -[CKTextMessagePartChatItem compositionWithContext:]
  -[CKTextMessagePartChatItem mentionsMe:]


CKCustomAppMenuItem : NSObject <CKAppMenuItem>
 @property  id __ck_identifier
 @property  NSString *__ck_displayName

  // instance methods
  -[CKCustomAppMenuItem __ck_identifier]
  -[CKCustomAppMenuItem .cxx_destruct]
  -[CKCustomAppMenuItem initWithIdentifier:displayName:]
  -[CKCustomAppMenuItem __ck_displayName]
  -[CKCustomAppMenuItem __ck_imageForTraitCollection:]


CKAppMenuDataSource : NSObject
  // class methods
  +[CKAppMenuDataSource appMenuWithTarget:traitCollection:]
  +[CKAppMenuDataSource imageForIdentifier:traitCollection:]
  +[CKAppMenuDataSource orderedItemsForTraitCollection:]


CKMessagePartHighlightChatItem : CKAssociatedMessageChatItem
 @property  NSString *timestampString

  // instance methods
  -[CKMessagePartHighlightChatItem transcriptOrientation]
  -[CKMessagePartHighlightChatItem guid]
  -[CKMessagePartHighlightChatItem contentInsets]
  -[CKMessagePartHighlightChatItem geometryDescriptor]
  -[CKMessagePartHighlightChatItem messagePartHighlightChatItem]
  -[CKMessagePartHighlightChatItem parentMessageIsFromMe]
  -[CKMessagePartHighlightChatItem .cxx_destruct]
  -[CKMessagePartHighlightChatItem timestampString]
  -[CKMessagePartHighlightChatItem sender]
  -[CKMessagePartHighlightChatItem initWithIMChatItem:maxWidth:]
  -[CKMessagePartHighlightChatItem balloonOrientation]
  -[CKMessagePartHighlightChatItem wantsDrawerLayout]
  -[CKMessagePartHighlightChatItem balloonViewClass]
  -[CKMessagePartHighlightChatItem isFromMe]
  -[CKMessagePartHighlightChatItem time]
  -[CKMessagePartHighlightChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKMessagePartHighlightChatItem failed]
  -[CKMessagePartHighlightChatItem cellClass]
  -[CKMessagePartHighlightChatItem associatedChatItemGUID]
  -[CKMessagePartHighlightChatItem associatedMessageRange]


CKDefaultPluginEntryViewController : UIViewController <UIContextMenuInteractionDelegate, CKPluginEntryViewController>
 @property  IMBalloonPluginDataSource *datasource
 @property  UIViewController<CKTranscriptBalloonPluginController> *pluginBubbleViewController
 @property  CKBalloonView *balloonView
 @property  IMBalloonPlugin *plugin
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <CKPluginEntryViewControllerDelegate> *entryViewDelegate
 @property  BOOL wantsClearButton
 @property  BOOL wantsEdgeToEdgeLayout
 @property  BOOL loadedContentView

  // instance methods
  -[CKDefaultPluginEntryViewController performHostAppResume]
  -[CKDefaultPluginEntryViewController performHostAppSuspend]
  -[CKDefaultPluginEntryViewController setDatasource:]
  -[CKDefaultPluginEntryViewController contextMenuInteraction:configurationForMenuAtLocation:]
  -[CKDefaultPluginEntryViewController contextMenuInteraction]
  -[CKDefaultPluginEntryViewController .cxx_destruct]
  -[CKDefaultPluginEntryViewController pluginBubbleViewController]
  -[CKDefaultPluginEntryViewController setPluginBubbleViewController:]
  -[CKDefaultPluginEntryViewController _copyActionForImageBalloonView]
  -[CKDefaultPluginEntryViewController _loadBalloonView]
  -[CKDefaultPluginEntryViewController _saveActionForImageBalloonView]
  -[CKDefaultPluginEntryViewController didFinishAnimatedBoundsChange]
  -[CKDefaultPluginEntryViewController _imageBalloon]
  -[CKDefaultPluginEntryViewController _transcriptPluginBalloon]
  -[CKDefaultPluginEntryViewController initWithDataSource:entryViewDelegate:]
  -[CKDefaultPluginEntryViewController viewDidLoad]
  -[CKDefaultPluginEntryViewController setContextMenuInteraction:]
  -[CKDefaultPluginEntryViewController payloadWillClear]
  -[CKDefaultPluginEntryViewController wantsClearButton]
  -[CKDefaultPluginEntryViewController wantsEdgeToEdgeLayout]
  -[CKDefaultPluginEntryViewController loadedContentView]
  -[CKDefaultPluginEntryViewController initWithDataSource:entryViewDelegate:andPlugin:]
  -[CKDefaultPluginEntryViewController balloonView]
  -[CKDefaultPluginEntryViewController sizeThatFits:]
  -[CKDefaultPluginEntryViewController payloadWillSend]
  -[CKDefaultPluginEntryViewController viewWillDisappear:]
  -[CKDefaultPluginEntryViewController viewDidLayoutSubviews]
  -[CKDefaultPluginEntryViewController setBalloonView:]
  -[CKDefaultPluginEntryViewController plugin]
  -[CKDefaultPluginEntryViewController dealloc]
  -[CKDefaultPluginEntryViewController loadView]
  -[CKDefaultPluginEntryViewController setPlugin:]
  -[CKDefaultPluginEntryViewController datasource]


CKMessageEntryViewSnapshot : UIView
 @property  UIButton *browserButton

  // instance methods
  -[CKMessageEntryViewSnapshot setBrowserButton:]
  -[CKMessageEntryViewSnapshot .cxx_destruct]
  -[CKMessageEntryViewSnapshot initWithFrame:entryView:]
  -[CKMessageEntryViewSnapshot __im_ff_systemImageAdoptionEnabled]
  -[CKMessageEntryViewSnapshot browserButton]


CKPluginImageCacheKey : NSObject
 @property  NSString *stringIdentifier
 @property  long long integerIdentifier

  // class methods
  +[CKPluginImageCacheKey keyWithStringIdentifier:integerIdentifier:]

  // instance methods
  -[CKPluginImageCacheKey .cxx_destruct]
  -[CKPluginImageCacheKey integerIdentifier]
  -[CKPluginImageCacheKey initWithStringIdentifier:integerIdentifier:]
  -[CKPluginImageCacheKey setStringIdentifier:]
  -[CKPluginImageCacheKey setIntegerIdentifier:]
  -[CKPluginImageCacheKey stringIdentifier]
  -[CKPluginImageCacheKey isEqual:]


CKMessageEntryViewLayoutMetrics : NSObject <NSSecureCoding>
 @property  {UIEdgeInsets=dddd} entryViewContentInsets
 @property  {UIEdgeInsets=dddd} entryViewTextAlignmentInsets
 @property  double defaultEntryContentViewHeight
 @property  double defaultSubjectEntryContentViewHeight
 @property  double defaultEntryViewHeight
 @property  double defaultSubjectEntryViewHeight

  // class methods
  +[CKMessageEntryViewLayoutMetrics supportsSecureCoding]
  +[CKMessageEntryViewLayoutMetrics cachedMetricsRecalculatingIfNecessary]

  // instance methods
  -[CKMessageEntryViewLayoutMetrics initWithCoder:]
  -[CKMessageEntryViewLayoutMetrics defaultEntryViewHeight]
  -[CKMessageEntryViewLayoutMetrics defaultSubjectEntryViewHeight]
  -[CKMessageEntryViewLayoutMetrics defaultSubjectEntryContentViewHeight]
  -[CKMessageEntryViewLayoutMetrics calculateTextMetrics]
  -[CKMessageEntryViewLayoutMetrics init]
  -[CKMessageEntryViewLayoutMetrics entryViewContentInsets]
  -[CKMessageEntryViewLayoutMetrics entryViewTextAlignmentInsets]
  -[CKMessageEntryViewLayoutMetrics encodeWithCoder:]
  -[CKMessageEntryViewLayoutMetrics defaultEntryContentViewHeight]


CKUnreadCountChatItem : CKMultilineStampChatItem
  // instance methods
  -[CKUnreadCountChatItem loadTranscriptText]
  -[CKUnreadCountChatItem cellClass]


CKDetailsDownloadAttachmentsHeaderFooterView : UITableViewHeaderFooterView <CKDetailsHeaderFooterView>
 @property  UIImageView *iCloudImageView
 @property  UITextView *titleTextView
 @property  UITextView *buttonTextView
 @property  NSLayoutConstraint *titleTextTopToLogoConstraint
 @property  NSLayoutConstraint *titleTextTopToViewConstraint
 @property  NSString *titleText
 @property  NSString *buttonText
 @property  <CKDetailsDownloadAttachmentsHeaderFooterViewDelegate> *delegate
 @property  UIColor *downloadButtonTextColor
 @property  UIColor *titleTextColor
 @property  BOOL logoHidden
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsDownloadAttachmentsHeaderFooterView reuseIdentifier]

  // instance methods
  -[CKDetailsDownloadAttachmentsHeaderFooterView buttonText]
  -[CKDetailsDownloadAttachmentsHeaderFooterView setButtonText:]
  -[CKDetailsDownloadAttachmentsHeaderFooterView logoHidden]
  -[CKDetailsDownloadAttachmentsHeaderFooterView .cxx_destruct]
  -[CKDetailsDownloadAttachmentsHeaderFooterView setLogoHidden:]
  -[CKDetailsDownloadAttachmentsHeaderFooterView setDownloadButtonTextColor:]
  -[CKDetailsDownloadAttachmentsHeaderFooterView layoutSubviews]
  -[CKDetailsDownloadAttachmentsHeaderFooterView setDelegate:]
  -[CKDetailsDownloadAttachmentsHeaderFooterView titleText]
  -[CKDetailsDownloadAttachmentsHeaderFooterView handleUserTap:]
  -[CKDetailsDownloadAttachmentsHeaderFooterView setTitleTextTopToLogoConstraint:]
  -[CKDetailsDownloadAttachmentsHeaderFooterView setTitleTextTopToViewConstraint:]
  -[CKDetailsDownloadAttachmentsHeaderFooterView titleTextTopToLogoConstraint]
  -[CKDetailsDownloadAttachmentsHeaderFooterView titleTextTopToViewConstraint]
  -[CKDetailsDownloadAttachmentsHeaderFooterView titleTextView]
  -[CKDetailsDownloadAttachmentsHeaderFooterView buttonTextView]
  -[CKDetailsDownloadAttachmentsHeaderFooterView iCloudImageView]
  -[CKDetailsDownloadAttachmentsHeaderFooterView downloadButtonTextColor]
  -[CKDetailsDownloadAttachmentsHeaderFooterView setICloudImageView:]
  -[CKDetailsDownloadAttachmentsHeaderFooterView setTitleTextView:]
  -[CKDetailsDownloadAttachmentsHeaderFooterView setButtonTextView:]
  -[CKDetailsDownloadAttachmentsHeaderFooterView titleTextColor]
  -[CKDetailsDownloadAttachmentsHeaderFooterView delegate]
  -[CKDetailsDownloadAttachmentsHeaderFooterView setTitleText:]
  -[CKDetailsDownloadAttachmentsHeaderFooterView initWithReuseIdentifier:]
  -[CKDetailsDownloadAttachmentsHeaderFooterView setTitleTextColor:]


CKMessageAcknowledgmentDraftDescriptor : NSObject <CKMessageAcknowledgment>
 @property  long long messageAcknowledgmentType
 @property  UIColor *acknowledgmentImageColor
 @property  NSString *acknowledgmentImageName
 @property  UIColor *selectedAcknowledgmentImageColor
 @property  UIColor *selectedBalloonColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKMessageAcknowledgmentDraftDescriptor acknowledgmentBarColor]
  +[CKMessageAcknowledgmentDraftDescriptor allMessageAcknowledgmentDescriptors]

  // instance methods
  -[CKMessageAcknowledgmentDraftDescriptor themeColor]
  -[CKMessageAcknowledgmentDraftDescriptor selectedBalloonColor]
  -[CKMessageAcknowledgmentDraftDescriptor initWithMessageAcknowledgmentType:]
  -[CKMessageAcknowledgmentDraftDescriptor acknowledgmentImageName]
  -[CKMessageAcknowledgmentDraftDescriptor selectedAcknowledgmentImageColor]
  -[CKMessageAcknowledgmentDraftDescriptor acknowledgmentImageColor]
  -[CKMessageAcknowledgmentDraftDescriptor messageAcknowledgmentType]


CKReplySenderChatItem : CKSenderChatItem
  // instance methods
  -[CKReplySenderChatItem transcriptOrientation]
  -[CKReplySenderChatItem contentInsets]
  -[CKReplySenderChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKReplySenderChatItem _calculateAddtionalOffsetForTapbackWithNextItem:previousItem:associatedChatItem:]
  -[CKReplySenderChatItem loadTranscriptText]


CKTextInlineNotificationView : CKInlineNotificationView
 @property  UIButton *textButton
 @property  UIView *greyOutView
 @property  BOOL greyedOut
 @property  NSString *text

  // instance methods
  -[CKTextInlineNotificationView _handleContentSizeCategoryDidChange:]
  -[CKTextInlineNotificationView setText:]
  -[CKTextInlineNotificationView greyedOut]
  -[CKTextInlineNotificationView .cxx_destruct]
  -[CKTextInlineNotificationView layoutSubviews]
  -[CKTextInlineNotificationView contentView]
  -[CKTextInlineNotificationView textButton]
  -[CKTextInlineNotificationView greyOutView]
  -[CKTextInlineNotificationView _handleTouchDown:]
  -[CKTextInlineNotificationView _handleTouchUpInside:]
  -[CKTextInlineNotificationView _handleTouchUpOutside:]
  -[CKTextInlineNotificationView setGreyedOut:]
  -[CKTextInlineNotificationView setTextButton:]
  -[CKTextInlineNotificationView setGreyOutView:]
  -[CKTextInlineNotificationView initWithFrame:]
  -[CKTextInlineNotificationView dealloc]
  -[CKTextInlineNotificationView text]
  -[CKTextInlineNotificationView contentViewSizeThatFits:]


CKImageData : NSObject
 @property  NSData *data
 @property  NSURL *url
 @property  UIImage *image
 @property  {CGSize=dd} ptSize
 @property  {CGSize=dd} pxSize
 @property  NSString *UTIType
 @property  NSString *MIMEType
 @property  long long orientation
 @property  unsigned long count

  // class methods
  +[CKImageData UTITypeForData:]
  +[CKImageData supportsASTC]

  // instance methods
  -[CKImageData MIMEType]
  -[CKImageData thumbnailFillToSize:]
  -[CKImageData ptSize]
  -[CKImageData url]
  -[CKImageData image]
  -[CKImageData pxSize]
  -[CKImageData .cxx_destruct]
  -[CKImageData UTIType]
  -[CKImageData count]
  -[CKImageData data]
  -[CKImageData setUrl:]
  -[CKImageData _thumbnailFitToSize:atIndex:]
  -[CKImageData _thumbnailFillToSize:atIndex:]
  -[CKImageData _defaultDurationsWithMaxCount:]
  -[CKImageData thumbnailFitToSize:]
  -[CKImageData thumbnailFillToSizeCropping:]
  -[CKImageData thumbnailsFitToSize:maxCount:]
  -[CKImageData orientation]
  -[CKImageData initWithData:]
  -[CKImageData setImage:]
  -[CKImageData durationsWithMaxCount:]
  -[CKImageData thumbnailAtIndex:fillToSize:maxCount:]
  -[CKImageData setData:]
  -[CKImageData dealloc]
  -[CKImageData _initializeProperties]
  -[CKImageData thumbnailsFillToSize:maxCount:]
  -[CKImageData initWithURL:]


CKDraftManager : NSObject
  // class methods
  +[CKDraftManager sharedInstance]

  // instance methods
  -[CKDraftManager save:]
  -[CKDraftManager .cxx_destruct]
  -[CKDraftManager flushCache]
  -[CKDraftManager _setDraft:forKey:]
  -[CKDraftManager clearDraftForPendingConversation]
  -[CKDraftManager _draftForKey:]
  -[CKDraftManager _clearDraftForConversation:]
  -[CKDraftManager _pendingRecipients]
  -[CKDraftManager _setPendingRecipients:]
  -[CKDraftManager _pendingRecipientsURL]
  -[CKDraftManager draftForConversation:]
  -[CKDraftManager setDraft:forConversation:]
  -[CKDraftManager draftForPendingConversationWithRecipients:]
  -[CKDraftManager setDraftForPendingConversation:withRecipients:]
  -[CKDraftManager dealloc]


CKUnitTestRunner : NSObject <IMUnitTestRunnerDelegate>
 @property  IMUnitTestRunner *runner
 @property  BOOL shouldWrite
 @property  NSFileHandle *fileHandle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKUnitTestRunner sharedInstance]

  // instance methods
  -[CKUnitTestRunner fileHandle]
  -[CKUnitTestRunner .cxx_destruct]
  -[CKUnitTestRunner setRunner:]
  -[CKUnitTestRunner setShouldWrite:]
  -[CKUnitTestRunner _dumpResults:]
  -[CKUnitTestRunner shouldWrite]
  -[CKUnitTestRunner setFileHandle:]
  -[CKUnitTestRunner unitTestRunner:didReceiveOutput:]
  -[CKUnitTestRunner runUnitTestBundleAtPath:writeToFile:]
  -[CKUnitTestRunner runner]


CKSearchController : NSObject
 @property  NSArray *results
 @property  unsigned long mode
 @property  unsigned long sectionIndex
 @property  CSSearchQuery *query
 @property  NSString *currentQueryIdentifier
 @property  NSString *currentSearchText
 @property  BOOL queryRunning
 @property  unsigned long queriedResultsCount
 @property  <CKSearchControllerDelegate> *delegate
 @property  @? queryFoundItemHandler
 @property  @? queryCompletionHandler
 @property  BOOL hasMoreResults
 @property  BOOL suppressAvatars
 @property  CKQLPreviewControllerDataSource *qlPreviewDataSource

  // class methods
  +[CKSearchController sectionIdentifier]
  +[CKSearchController orthogonalScrollingBehavior]
  +[CKSearchController supportsQuicklookForResult:]
  +[CKSearchController supportsMacSelection]
  +[CKSearchController previewControllerPresentsModally]
  +[CKSearchController indexingString]
  +[CKSearchController sectionTitle]
  +[CKSearchController supportsMenuInteraction]
  +[CKSearchController supportedCellClasses]
  +[CKSearchController reuseIdentifier]
  +[CKSearchController cellClass]
  +[CKSearchController useRecencyRankedSearchForMode:]
  +[CKSearchController recencyRankedTargetResultCount]

  // instance methods
  -[CKSearchController fetchAttributes]
  -[CKSearchController setResults:]
  -[CKSearchController filterQueries]
  -[CKSearchController setQuery:]
  -[CKSearchController query]
  -[CKSearchController initWithSectionIndex:]
  -[CKSearchController setQlPreviewDataSource:]
  -[CKSearchController wantsHeaderSection]
  -[CKSearchController currentSearchText]
  -[CKSearchController searchWithText:mode:]
  -[CKSearchController saveAttachmentForResult:]
  -[CKSearchController qlPreviewDataSource]
  -[CKSearchController headerOverrideClass]
  -[CKSearchController additionalGroupInsets]
  -[CKSearchController results]
  -[CKSearchController .cxx_destruct]
  -[CKSearchController searchEnded]
  -[CKSearchController setDelegate:]
  -[CKSearchController layoutWidth]
  -[CKSearchController sectionIndex]
  -[CKSearchController setSectionIndex:]
  -[CKSearchController __im_ff_isInterstellarEnabled]
  -[CKSearchController _queryStringWithText:]
  -[CKSearchController _queryContextWithText:]
  -[CKSearchController queryFoundItemHandler]
  -[CKSearchController queryCompletionHandler]
  -[CKSearchController setCurrentSearchText:]
  -[CKSearchController setQueryRunning:]
  -[CKSearchController queryTypeForSearchText:]
  -[CKSearchController _currentModeIsDetails]
  -[CKSearchController _overridingMenuElementsForResult:]
  -[CKSearchController customLayoutSectionForEnvironment:]
  -[CKSearchController cellForItemInCollectionView:atIndex:withIdentifier:]
  -[CKSearchController queriedResultsCount]
  -[CKSearchController setCurrentQueryIdentifier:]
  -[CKSearchController setSuppressAvatars:]
  -[CKSearchController queryRunning]
  -[CKSearchController delegate]
  -[CKSearchController maxResultsForMode:]
  -[CKSearchController chatGUIDForSearchableItem:]
  -[CKSearchController suppressAvatars]
  -[CKSearchController _additionalMenuElementsForResult:]
  -[CKSearchController itemProviderForSearchResult:]
  -[CKSearchController _activityItemProviderForResult:]
  -[CKSearchController previewViewControllerForResult:]
  -[CKSearchController handleSelectionForResult:]
  -[CKSearchController queryAttributesForText:]
  -[CKSearchController detailsFilterQueriesForChatGUIDs:]
  -[CKSearchController queryResultsForItems:]
  -[CKSearchController applyLayoutMarginsToLayoutGroup]
  -[CKSearchController layoutGroupWithEnvironment:]
  -[CKSearchController cellForSupplementryItemInCollectionView:atIndexPath:supplementryViewKind:]
  -[CKSearchController updateSupplementryViewIfNeeded:atIndexPath:]
  -[CKSearchController deleteAttachmentForResult:]
  -[CKSearchController shouldStartMenuInteractionForResult:]
  -[CKSearchController setMode:]
  -[CKSearchController footerClass]
  -[CKSearchController setQueriedResultsCount:]
  -[CKSearchController didSelectResult:]
  -[CKSearchController setQueryFoundItemHandler:]
  -[CKSearchController setQueryCompletionHandler:]
  -[CKSearchController interGroupSpacing]
  -[CKSearchController cancelCurrentSearch]
  -[CKSearchController currentQueryIdentifier]
  -[CKSearchController hasMoreResults]
  -[CKSearchController menuElementsForResult:atRect:]
  -[CKSearchController removeFromCache:]
  -[CKSearchController zkwFilterQueries]
  -[CKSearchController mode]
  -[CKSearchController rankingQueriesWithText:]
  -[CKSearchController wantsFooterSection]


CKConversation : NSObject <NSItemProviderWriting>
 @property  NSArray *writableTypeIdentifiersForItemProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  IMChat *chat
 @property  NSArray *recipients
 @property  NSAttributedString *previewText
 @property  NSSet *pendingRecipients
 @property  unsigned int limitToLoad
 @property  BOOL hasLoadedAllMessages
 @property  BOOL isReportedAsSpam
 @property  IMHandle *businessHandle
 @property  NSNumber *businessConversation
 @property  NSDate *dateLastViewed
 @property  BOOL wasKnownSender
 @property  BOOL hasSetWasKnownSender
 @property  BOOL holdWasKnownSenderUpdates
 @property  CNGroupIdentity *_conversationVisualIdentity
 @property  BOOL needsUpdatedContactsForVisualIdentity
 @property  BOOL needsUpdatedGroupPhotoForVisualIdentity
 @property  BOOL needsUpdatedGroupNameForVisualIdentity
 @property  NSArray *frequentReplies
 @property  NSString *selectedLastAddressedHandle
 @property  NSString *selectedLastAddressedSIMID
 @property  NSString *lastAddressedHandle
 @property  NSString *lastAddressedSIMID
 @property  CKEntity *recipient
 @property  NSArray *recipientStrings
 @property  unsigned long recipientCount
 @property  BOOL isToEmailAddress
 @property  NSString *rawAddressedName
 @property  NSString *name
 @property  BOOL hasDisplayName
 @property  NSString *displayName
 @property  NSAttributedString *groupName
 @property  NSString *serviceDisplayName
 @property  BOOL buttonColor
 @property  BOOL isPreviewTextForAttachment
 @property  NSSet *mergedPinningIdentifiers
 @property  BOOL isPinned
 @property  NSString *senderIdentifier
 @property  CKComposition *unsentComposition
 @property  unsigned long unreadCount
 @property  BOOL hasUnreadMessages
 @property  BOOL muted
 @property  BOOL sendReadReceipts
 @property  BOOL needsReload
 @property  NSString *groupID
 @property  NSString *deviceIndependentID
 @property  NSString *pinningIdentifier
 @property  int wasDetectedAsSMSSpam
 @property  int wasDetectedAsSMSCategory
 @property  int wasDetectedAsiMessageSpam
 @property  int wasDetectedAsSpam
 @property  long long spamCategory
 @property  IMService *sendingService
 @property  BOOL forceMMS
 @property  BOOL groupConversation
 @property  BOOL canLeave
 @property  BOOL left
 @property  BOOL supportsMutatingGroupMembers
 @property  BOOL leftGroupChat
 @property  BOOL shouldShowGroupPhotoUpdateBanner
 @property  BOOL shouldShowGroupNameUpdateBanner
 @property  NSString *groupIdentityUpdateHandleID
 @property  BOOL shouldShowCharacterCount
 @property  BOOL localUserIsTyping
 @property  BOOL localUserIsRecording
 @property  NSString *localUserIsComposing
 @property  BOOL pending
 @property  NSArray *pendingEntities
 @property  NSArray *pendingHandles
 @property  NSArray *handles
 @property  unsigned long disclosureAtomStyle
 @property  BOOL ignoringTypingUpdates
 @property  BOOL canShareFocusStatus
 @property  NSString *conversationListCollectionViewPinnedItemIdentifier
 @property  NSString *conversationListCollectionViewListItemIdentifier

  // class methods
  +[CKConversation _sms_maxTrimDurationForMediaType:]
  +[CKConversation _iMessage_canSendMessageWithMediaObjectTypes:]
  +[CKConversation _sms_canSendMessageWithMediaObjectTypes:phoneNumber:simID:]
  +[CKConversation _iMessage_maxTrimDurationForMediaType:]
  +[CKConversation writableTypeIdentifiersForItemProvider]
  +[CKConversation isSMSSpamFilteringEnabled]
  +[CKConversation newPendingConversation]
  +[CKConversation _sms_canAcceptMediaObjectType:givenMediaObjects:phoneNumber:simID:]
  +[CKConversation _iMessage_canAcceptMediaObjectType:givenMediaObjects:]
  +[CKConversation _sms_canSendComposition:lastAddressedHandle:lastAddressedSIMID:error:]
  +[CKConversation _iMessage_canSendComposition:lastAddressedHandle:lastAddressedSIMID:currentService:forceSMS:error:]
  +[CKConversation conversationForAddresses:allowRetargeting:candidateConversation:]
  +[CKConversation conversationForContacts:candidateConversation:]
  +[CKConversation _iMessage_maxAttachmentCount]
  +[CKConversation _iMessage_canSendMessageWithMediaObjectTypes:errorCode:]
  +[CKConversation _iMessage_localizedErrorForReason:]
  +[CKConversation _iMessage_maxTransferFileSizeForWiFi:]
  +[CKConversation _sms_maxAttachmentCountForPhoneNumber:simID:]
  +[CKConversation _sms_mediaObjectPassesRestriction:]
  +[CKConversation _sms_canSendMessageWithMediaObjectTypes:phoneNumber:simID:errorCode:]
  +[CKConversation _sms_mediaObjectPassesDurationCheck:]
  +[CKConversation _sms_localizedErrorForReason:]

  // instance methods
  -[CKConversation didBecomeActive]
  -[CKConversation updateUserActivity]
  -[CKConversation unmute]
  -[CKConversation groupID]
  -[CKConversation chat]
  -[CKConversation displayName]
  -[CKConversation isMuted]
  -[CKConversation loadDataWithTypeIdentifier:forItemProviderCompletionHandler:]
  -[CKConversation name]
  -[CKConversation uniqueIdentifier]
  -[CKConversation forceMMS]
  -[CKConversation _chatItemsDidChange:]
  -[CKConversation hasLeft]
  -[CKConversation setRecipients:]
  -[CKConversation limitToLoad]
  -[CKConversation _conversationList]
  -[CKConversation recipient]
  -[CKConversation sendMessage:newComposition:]
  -[CKConversation businessHandle]
  -[CKConversation sendingService]
  -[CKConversation hasUnreadMessages]
  -[CKConversation unreadCount]
  -[CKConversation .cxx_destruct]
  -[CKConversation canSendToRecipients:alertIfUnable:]
  -[CKConversation messagesFromComposition:]
  -[CKConversation ensureMessageWithGUIDIsLoaded:]
  -[CKConversation setIgnoringTypingUpdates:]
  -[CKConversation setNeedsUpdatedGroupPhotoForVisualIdentity]
  -[CKConversation isGroupConversation]
  -[CKConversation setNeedsUpdatedGroupNameForVisualIdentity]
  -[CKConversation isPinned]
  -[CKConversation setGroupIdentityUpdateHandleID:]
  -[CKConversation senderIdentifier]
  -[CKConversation recipientStrings]
  -[CKConversation shouldSendReadReceipts]
  -[CKConversation setForceMMS:]
  -[CKConversation pinnedConversationDisplayNamePreferringShortName:]
  -[CKConversation maxTrimDurationForMediaType:]
  -[CKConversation isBusinessConversation]
  -[CKConversation isAdHocGroupConversation]
  -[CKConversation hasDisplayName]
  -[CKConversation copyForPendingConversation]
  -[CKConversation setNeedsUpdatedContactOrderForVisualIdentity]
  -[CKConversation canLeave]
  -[CKConversation resetNameCaches]
  -[CKConversation addRecipientHandles:]
  -[CKConversation setSendReadReceipts:]
  -[CKConversation init]
  -[CKConversation recipients]
  -[CKConversation groupIdentityUpdateHandleID]
  -[CKConversation previewText]
  -[CKConversation setNeedsReload]
  -[CKConversation shouldShowGroupPhotoUpdateBanner]
  -[CKConversation shouldShowGroupNameUpdateBanner]
  -[CKConversation removeRecipientHandles:]
  -[CKConversation recipientCount]
  -[CKConversation sendButtonColor]
  -[CKConversation canAcceptMediaObjectType:givenMediaObjects:]
  -[CKConversation lastAddressedSIMID]
  -[CKConversation acceptTransfer:]
  -[CKConversation updateDisplayNameIfSMSSpam]
  -[CKConversation _handleChatParticipantsDidChange:]
  -[CKConversation canInsertMoreRecipients]
  -[CKConversation _handleChatJoinStateDidChange:]
  -[CKConversation _handlePreferredServiceChangedNotification:]
  -[CKConversation _chatPropertiesChanged:]
  -[CKConversation _handleEngroupFinishedUpdating:]
  -[CKConversation initWithChat:]
  -[CKConversation updateUnsentCompositionByAppendingComposition:]
  -[CKConversation lastAddressedHandle]
  -[CKConversation setChat:]
  -[CKConversation pendingHandles]
  -[CKConversation isPending]
  -[CKConversation groupName]
  -[CKConversation resetCaches]
  -[CKConversation setDisplayName:]
  -[CKConversation supportsMutatingGroupMembers]
  -[CKConversation conversationVisualIdentityWithKeys:requestedNumberOfContactsToFetch:]
  -[CKConversation deviceIndependentID]
  -[CKConversation wasDetectedAsSMSSpam]
  -[CKConversation _allowedByScreenTime]
  -[CKConversation setPendingHandles:]
  -[CKConversation isKnownSender]
  -[CKConversation pinningIdentifier]
  -[CKConversation updateConversationVisualIdentityGroupPhotoWithSender:]
  -[CKConversation needsReload]
  -[CKConversation setLoadedMessageCount:]
  -[CKConversation setShouldShowGroupPhotoUpdateBanner:]
  -[CKConversation updateConversationVisualIdentityDisplayNameWithSender:]
  -[CKConversation setShouldShowGroupNameUpdateBanner:]
  -[CKConversation messageWithComposition:]
  -[CKConversation compareBySequenceNumberAndDateDescending:]
  -[CKConversation loadAllMessages]
  -[CKConversation hasLeftGroupChat]
  -[CKConversation deleteAllMessagesAndRemoveGroup]
  -[CKConversation containsHandleWithUID:]
  -[CKConversation wasDetectedAsSpam]
  -[CKConversation wasDetectedAsSMSCategory]
  -[CKConversation spamCategory]
  -[CKConversation wasKnownSender]
  -[CKConversation updateWasKnownSender]
  -[CKConversation isMakoConversation]
  -[CKConversation setMutedUntilDate:]
  -[CKConversation activityForNewScene]
  -[CKConversation setLocalUserIsComposing:]
  -[CKConversation reloadIfNeeded]
  -[CKConversation setLocalUserIsComposing:typingIndicatorIcon:]
  -[CKConversation isBlockedByCommunicationLimits]
  -[CKConversation groupPhotoData]
  -[CKConversation _contactsForVisualIdentityWithKeys:numberOfContacts:]
  -[CKConversation setNeedsUpdatedContactsForVisualIdentity:]
  -[CKConversation _createConversationVisualIdentityWithKeys:numberOfContacts:]
  -[CKConversation setNeedsUpdatedGroupPhotoForVisualIdentity:]
  -[CKConversation setNeedsUpdatedGroupNameForVisualIdentity:]
  -[CKConversation needsUpdatedContactsForVisualIdentity]
  -[CKConversation _contactsForVisualIdentityHaveKeys:]
  -[CKConversation _groupPhotoFileURL]
  -[CKConversation updateLastViewedDate]
  -[CKConversation _updateContactsForVisualIdentityWithKeys:numberOfContacts:]
  -[CKConversation needsUpdatedGroupPhotoForVisualIdentity]
  -[CKConversation _updateGroupPhotoForVisualIdentity]
  -[CKConversation shortDescription]
  -[CKConversation needsUpdatedGroupNameForVisualIdentity]
  -[CKConversation _updateGroupNameForVisualIdentity]
  -[CKConversation orderedContactsWithMaxCount:keysToFetch:]
  -[CKConversation selectedLastAddressedHandle]
  -[CKConversation selectedLastAddressedSIMID]
  -[CKConversation refreshServiceForSending]
  -[CKConversation clearConversationLoadFromSpotlight]
  -[CKConversation maximumRecipientsForSendingService]
  -[CKConversation setLoadedMessageCount:loadImmediately:]
  -[CKConversation setPendingRecipients:]
  -[CKConversation hasLoadedAllMessages]
  -[CKConversation enumerateMessagesWithOptions:usingBlock:]
  -[CKConversation _clearTypingIndicatorsIfNecessary]
  -[CKConversation buttonColor]
  -[CKConversation wasDetectedAsiMessageSpam]
  -[CKConversation setLimitToLoad:]
  -[CKConversation handles]
  -[CKConversation _deleteAllMessagesAndRemoveGroup:]
  -[CKConversation _earlyReturnHistoryLoad]
  -[CKConversation setHasLoadedAllMessages:]
  -[CKConversation frequentReplies]
  -[CKConversation dateLastViewed]
  -[CKConversation isDowngraded]
  -[CKConversation dealloc]
  -[CKConversation hasLoadedFromSpotlight]
  -[CKConversation loadMoreMessagesBeforeFirstMessage]
  -[CKConversation setDateLastViewed:]
  -[CKConversation setLocalUserIsRecording:]
  -[CKConversation setLocalUserIsTyping:]
  -[CKConversation _sms_canSendToRecipients:alertIfUnable:]
  -[CKConversation isPlaceholder]
  -[CKConversation _iMessage_canSendToRecipients:alertIfUnable:]
  -[CKConversation _chatSupportsTypingIndicators]
  -[CKConversation localUserIsTyping]
  -[CKConversation supportsSurf]
  -[CKConversation contactNameByHandle]
  -[CKConversation localUserIsComposing]
  -[CKConversation localUserIsRecording]
  -[CKConversation _sms_supportsCharacterCountForAddresses:]
  -[CKConversation _iMessage_supportsCharacterCountForAddresses:]
  -[CKConversation nameWithRawAddresses:]
  -[CKConversation _nameForHandle:]
  -[CKConversation mergedPinningIdentifiers]
  -[CKConversation _headerTitleForPendingMediaObjects:subject:onService:]
  -[CKConversation _headerTitleForService:shouldListParticipants:]
  -[CKConversation _unknownFilteringEnabled]
  -[CKConversation canShareFocusStatus]
  -[CKConversation willBecomeInactive]
  -[CKConversation isIgnoringTypingUpdates]
  -[CKConversation isAppleConversation]
  -[CKConversation hasReplyEnabled]
  -[CKConversation entityMatchingHandle:]
  -[CKConversation orderedContactsForAvatarView]
  -[CKConversation orderedContactsForAvatar3DTouchUIWithKeysToFetch:]
  -[CKConversation _handleIsForThisConversation:]
  -[CKConversation noAvailableServices]
  -[CKConversation loadMoreMessagesAfterLastMessage]
  -[CKConversation loadAllUnreadMessagesUpToMessageGUID:]
  -[CKConversation loadFrequentReplies]
  -[CKConversation loadMoreMessages]
  -[CKConversation setPendingComposeRecipients:]
  -[CKConversation pendingEntities]
  -[CKConversation rawAddressedName]
  -[CKConversation displayNameForMediaObjects:subject:shouldListParticipants:]
  -[CKConversation deleteAllMessages]
  -[CKConversation resortMessagesIfNecessary]
  -[CKConversation disclosureAtomStyle]
  -[CKConversation isPreviewTextForAttachment]
  -[CKConversation outgoingBubbleColor]
  -[CKConversation serviceDisplayName]
  -[CKConversation pendingRecipients]
  -[CKConversation conversationListCollectionViewPinnedItemIdentifier]
  -[CKConversation conversationListCollectionViewListItemIdentifier]
  -[CKConversation setSelectedLastAddressedHandle:]
  -[CKConversation canSendComposition:error:]
  -[CKConversation isToEmailAddress]
  -[CKConversation setSelectedLastAddressedSIMID:]
  -[CKConversation setPreviewText:]
  -[CKConversation isReportedAsSpam]
  -[CKConversation setIsReportedAsSpam:]
  -[CKConversation setBusinessHandle:]
  -[CKConversation businessConversation]
  -[CKConversation setBusinessConversation:]
  -[CKConversation setWasKnownSender:]
  -[CKConversation hasSetWasKnownSender]
  -[CKConversation setHasSetWasKnownSender:]
  -[CKConversation holdWasKnownSenderUpdates]
  -[CKConversation sendMessage:onService:newComposition:]
  -[CKConversation fetchSuggestedNameIfNecessary]
  -[CKConversation setHoldWasKnownSenderUpdates:]
  -[CKConversation _conversationVisualIdentity]
  -[CKConversation set_conversationVisualIdentity:]
  -[CKConversation hasVerifiedBusiness]
  -[CKConversation fastPreviewTextIgnoringPluginContent]
  -[CKConversation shouldShowCharacterCount]
  -[CKConversation markAllMessagesAsRead]
  -[CKConversation setUnsentComposition:]
  -[CKConversation date]
  -[CKConversation unsentComposition]
  -[CKConversation __im_ff_commSafetyUIEnabled]
  -[CKConversation _sms_willSendMMSByDefaultForAddresses:]


CKUIBehavior : NSObject
 @property  long long HUDStyle
 @property  CKUITheme *theme
 @property  double muteOneHourTimeInterval
 @property  double muteEightHourTimeInterval
 @property  double locationShareOneHourTimeInterval
 @property  long long locationShareEODHour
 @property  double locationValidInterval
 @property  double raiseToTalkAutoSendMaxDuration
 @property  double raiseToTalkErrorMaxDuration
 @property  double resumeToConversationListTimeInterval
 @property  BOOL usesActionMenu
 @property  BOOL joystickUsesWindow
 @property  BOOL isProximityMonitoringSupported
 @property  BOOL shouldOnlyResumeToConversationListAfterTimeout
 @property  BOOL isThreeColumnLayoutEnabled
 @property  BOOL usesUncollapsedSplitview
 @property  BOOL shouldSuppressRotationInNewCompose
 @property  BOOL lowClearanceInLandscape
 @property  BOOL usesPopovers
 @property  BOOL canPresentOverKeyboard
 @property  BOOL canUseWindowedSendAnimation
 @property  BOOL presentsQuickLookController
 @property  BOOL presentForwardingUIModally
 @property  BOOL shouldGrabBackgroundAssertion
 @property  BOOL resetsIdleTimer
 @property  BOOL promptsForReadReceiptsSetting
 @property  BOOL isSizeConstrained
 @property  BOOL darkUIEnabled
 @property  BOOL automaticallyShowsKeyboard
 @property  BOOL showsSendAnimation
 @property  BOOL showsCompositionPanel
 @property  BOOL recordsRecentContact
 @property  BOOL disableTranscriptOrb
 @property  BOOL isAccessibilityPreferredContentSizeCategory
 @property  BOOL shouldUseTranslucentBars
 @property  double transcriptHeaderViewMaxRows
 @property  BOOL usesEntryView
 @property  BOOL usesNavigationBarControls
 @property  BOOL shouldLoadInitialViewingMessageCount
 @property  BOOL shouldSizeInitialViewingMessageCount
 @property  double navigationBarMaxHeight
 @property  double navigationBarMinHeight
 @property  double maxNavigationBarHeightValue
 @property  double maxNavigationBarCollapsedHeightValue
 @property  double maxNavigationBarExpandedHeightValue
 @property  double maxNavigationBarNoContactPhotoCollapsedHeightValue
 @property  double maxNavigationBarNoContactPhotoExpandedHeightValue
 @property  double minNavigationBarHeightValue
 @property  double navigationBarTitleViewVerticalOffset
 @property  double navigationBarTitleViewHeightWithContactPhoto
 @property  double navigationBarBackButtonMargin
 @property  double navigationBarLeftItemVerticalCenterOffset
 @property  double navigationBarHeaderButtonVerticalOffset
 @property  BOOL shouldHideStatusBarForFullScreenEffects
 @property  BOOL shouldSuppressDynamicsOnKeyboardPresentation
 @property  double transcriptHeaderChevronRotationAnimationSpeed
 @property  unsigned long supportedInterfaceOrientations
 @property  unsigned long messageCountToLoadForPinnedGroupConversationWithPhoto
 @property  unsigned long defaultConversationViewingMessageCount
 @property  unsigned long initialConversationViewingMessageCount
 @property  unsigned long defaultConversationSummaryMessageCount
 @property  unsigned long initialConversationSizingMessageCount
 @property  unsigned long defaultConversationLoadMoreCount
 @property  unsigned long conversationCacheSize
 @property  unsigned long commonRepliesLoadLimit
 @property  NSDateFormatter *timestampDateFormatter
 @property  NSDateFormatter *locationRelativeDateFormatter
 @property  BOOL canAccessContacts
 @property  BOOL canAccessPhotos
 @property  double presentationControllerWindowLevel
 @property  double videoControllerWindowLevel
 @property  double actionMenuWindowLevel
 @property  BOOL useMacToolbar
 @property  BOOL phoneIsAllowlisted
 @property  BOOL faceTimeVideoIsAllowlisted
 @property  BOOL faceTimeAudioIsAllowlisted
 @property  BOOL mailIsAllowlisted
 @property  BOOL cameraIsAllowlisted
 @property  BOOL photosIsAllowlisted
 @property  BOOL isRunningInStoreDemoMode
 @property  BOOL showMMSSetup
 @property  double minPrimaryColumnWidth
 @property  double maxPrimaryColumnWidth
 @property  double maxTranscriptPortraitWidth
 @property  double maxTranscriptPortraitHeight
 @property  {UIEdgeInsets=dddd} landscapeKeyboardInsets
 @property  UIFont *navbarToLabelFont
 @property  UIFont *navbarDefaultLabelFont
 @property  double navbarButtonImagePointSize
 @property  UIImage *disabledFacetimeAudioImage
 @property  UIImage *disabledFacetimeVideoImage
 @property  UIImage *chevronImage
 @property  UIImage *conversationListMuteIndicatorImage
 @property  UIImage *enabledFacetimeAudioImage
 @property  UIImage *enabledFacetimeAudioImagePill
 @property  UIImage *enabledFacetimeVideoImage
 @property  UIImage *enabledFacetimeVideoImagePill
 @property  UIImage *enabledExpanseImage
 @property  UIImage *enabledExpanseImagePill
 @property  NSString *navBarInfoImageName
 @property  UIImage *navBarInfoImage
 @property  UIImage *navbarJoinPillVideoImage
 @property  UIImage *navbarJoinPillAudioImage
 @property  NSArray *acceptableUTIs
 @property  UIFont *filterCellTitleFont
 @property  Class conversationListTableViewClass
 @property  Class conversationListNavigationControllerClass
 @property  Class navigationBarClass
 @property  Class windowClass
 @property  unsigned long maximumNumberOfPinnedConversations
 @property  double conversationListCellHighlightViewToUnreadIndicatorPadding
 @property  double pinnedConversationViewTitleLabelToEdgePaddingWhenNoUnreadIndicator
 @property  BOOL alwaysShowSelectionInConversationList
 @property  BOOL showPendingInConversationList
 @property  BOOL converastionListAlwaysSupportsLargeTitles
 @property  BOOL conversationListAlwaysShowsSearchBar
 @property  BOOL conversationListSearchBarSkipExtraAlignment
 @property  BOOL selectNewConversationOnStateRestore
 @property  BOOL selectNewConversationOnDeletion
 @property  BOOL usesPersistentConversationSelection
 @property  BOOL canShowContactPhotosInConversationList
 @property  BOOL shouldShowSearchBarInConversationList
 @property  BOOL showsNoMessagesDialog
 @property  BOOL hidesUnreadIndicatorWhenEditing
 @property  BOOL showsConversationListCellChevronImage
 @property  BOOL showsHoverToDeleteButton
 @property  BOOL showsHoverToDeleteButtonForNewCompose
 @property  BOOL supportsConversationListEditing
 @property  BOOL supportsOrbPreviewsInConversationList
 @property  unsigned long conversationListScrollingBatchSize
 @property  unsigned long conversationListScrollingPaddingRowCount
 @property  double minConversationListWidth
 @property  double maxConversationListWidth
 @property  double conversationListCellRoundSelectorLeftInset
 @property  double conversationListCellRoundSelectorRightInset
 @property  double conversationListMinimumWidthForHiddenContactImage
 @property  double conversationListContactImageDiameter
 @property  double conversationListContactImageTrailingSpace
 @property  double conversationListMultipleContactsImageDiameter
 @property  double conversationListMuteIndicatorToSummaryLabelPadding
 @property  double topConversationListSpace
 @property  double largeTextTopConversationListSpace
 @property  double bottomConversationListSpace
 @property  double accessibilityBottomConversationListSpace
 @property  double senderSummaryConversationListSpace
 @property  double summaryDateConversationListSpace
 @property  double conversationListTableMarginWidth
 @property  double conversationListEditingTableMarginWidth
 @property  double conversationListComposeButtonSpacing
 @property  double conversationListButtonToTitleSpacing
 @property  double conversationListSummaryBodyLeading
 @property  long long conversationListLayoutPinnedSectionNumberOfColumns
 @property  double conversationListPinnedCellSelectedBackgroundCornerRadius
 @property  {CGSize=dd} unreadIndicatorImageViewSize
 @property  double pinnedConversationActivityBroadShadowLightRadius
 @property  double pinnedConversationActivityBroadShadowDarkRadius
 @property  double pinnedConversationActivityTightShadowLightRadius
 @property  double pinnedConversationActivityTightShadowDarkRadius
 @property  double pinnedConversationActivityBroadShadowLightOpacity
 @property  double pinnedConversationActivityBroadShadowDarkOpacity
 @property  double pinnedConversationActivityTightShadowLightOpacity
 @property  double pinnedConversationActivityTightShadowDarkOpacity
 @property  {CGSize=dd} pinnedConversationActivityBroadShadowLightOffset
 @property  {CGSize=dd} pinnedConversationActivityBroadShadowDarkOffset
 @property  {CGSize=dd} pinnedConversationActivityTightShadowLightOffset
 @property  {CGSize=dd} pinnedConversationActivityTightShadowDarkOffset
 @property  UIImage *newComposeImage
 @property  UIImage *optionsImage
 @property  BOOL conversationListCellUsesLargeTextLayout
 @property  double conversationListCellBackgroundPadding
 @property  double conversationListCellLeftMargin
 @property  double conversationListCellLargeTextLeftMargin
 @property  double conversationListCellRightMargin
 @property  unsigned long conversationListCellSummaryNumberOfLines
 @property  unsigned long conversationListCellMaxSummaryLength
 @property  double conversationListCellTypingIndicatorScale
 @property  UIFont *conversationListLargeTitleStandardFont
 @property  UIFont *conversationListLargeTitleReducedFont
 @property  UIFont *conversationListSenderFont
 @property  UIFont *conversationListGroupSenderFont
 @property  UIFont *conversationListSummaryFont
 @property  UIFont *conversationListBoldSummaryFont
 @property  UIFont *conversationListDateFont
 @property  UIFont *conversationListGroupCountFont
 @property  UIFont *conversationListPinnedConversationNameFont
 @property  double conversationListPinnedConversationPreviewFontSizeOverrideStandard
 @property  double conversationListPinnedConversationPreviewFontSizeOverrideLarge
 @property  UIFont *navigationHeaderJoinLabelFont
 @property  UIFont *nicknameLabelFont
 @property  UIFont *nicknameDescriptionFont
 @property  UIFont *pinningOnboardingSubtitleLabelFont
 @property  UIImage *unreadImage
 @property  UIImage *unreadIndicatorMutedImage
 @property  UIImage *readDNDImage
 @property  UIImage *unreadDNDImage
 @property  UIImage *dndActionImage
 @property  UIImage *unDNDActionImage
 @property  UIImage *detailsImage
 @property  UIImage *trashImage
 @property  UIImage *defaultWaveformImage
 @property  UIImage *pinnedAdHocConversationRadiantShadowImage
 @property  BOOL shouldBackfillTranscript
 @property  BOOL shouldUseSendAnimation
 @property  double sendAnimationDuration
 @property  BOOL showsProgressInNavigationBar
 @property  double sendProgressTitleTransitionProgressThreshold
 @property  double transcriptResortTimeout
 @property  double progressThresholdForTitleUpdateAnimation
 @property  double fadeInBubbleAnimationDuration
 @property  double scrollInNewMessageAnimationDuration
 @property  double throwMessageAnimationDuration
 @property  double resizeMessageEntryViewAnimationDuration
 @property  double editingTransitionAnimationDuration
 @property  double updateTranscriptInsetsAnimationDuration
 @property  UIFont *readerFont
 @property  UIImage *forwardImage
 @property  Class chatControllerClass
 @property  Class conversationListControllerClass
 @property  Class transcriptCollectionViewControllerClass
 @property  Class businessChatControllerClass
 @property  BOOL showsLoadMoreItem
 @property  BOOL supportsTypingIndicatorAnimation
 @property  BOOL shouldShowContactPhotosInTranscript
 @property  BOOL shouldUseDynamicScrolling
 @property  BOOL shouldUseRotisserieScrolling
 @property  BOOL showsReplyButtonsInTranscript
 @property  BOOL timestampsPushBalloons
 @property  BOOL shouldInsetForStatusBar
 @property  BOOL usesDataDetectorsUI
 @property  BOOL transcriptCanUseOpaqueMask
 @property  BOOL scrollToBottomStopsAtTopOfLastBubble
 @property  BOOL supportsContiguousAttachments
 @property  double psMode1
 @property  double psMode2
 @property  double psMode3
 @property  long long transcriptLoadingIndicatorStyle
 @property  double transcriptQuickSaveButtonDiameter
 @property  double transcriptQuickSaveButtonHorizontalSpacing
 @property  double transcriptContactImageDiameter
 @property  double detailsViewContactImageDiameter
 @property  double transcriptReplyPreviewContextContactImageDiameter
 @property  double transcriptReplyPreviewContextContactAlpha
 @property  double transcriptDrawerContactImageDiameter
 @property  double transcriptDrawerContactImagePadding
 @property  {UIEdgeInsets=dddd} transcriptBoldTextAlignmentInsets
 @property  double transcriptBoldTextHeight
 @property  NSAttributedString *statusSaveButtonTranscriptText
 @property  {CGSize=dd} transcriptCustomStatusImageDefaultSize
 @property  double transcriptCustomStatusImagePadding
 @property  {CGSize=dd} statusSaveButtonTranscriptTextSize
 @property  {UIEdgeInsets=dddd} transcriptButtonContentEdgeInsets
 @property  {UIEdgeInsets=dddd} transcriptCustomStatusImageEdgeInsets
 @property  double transcriptButtonCharge
 @property  NSAttributedString *statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen
 @property  NSAttributedString *statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen
 @property  NSAttributedString *statusCommSafetyMayBeSensitiveMessageSomeoneButtonTranscriptTextOverThirteen
 @property  NSAttributedString *statusCommSafetyMayBeSensitiveMessageSomeoneButtonTranscriptTextUnderThirteen
 @property  NSAttributedString *statusCommSafetySensitiveReceiveButtonTranscriptText
 @property  NSAttributedString *statusCommSafetySensitiveReceiveMultiButtonTranscriptText
 @property  NSAttributedString *statusCommSafetyMayBeSensitiveViewPhotoButtonTranscriptTextOverThirteen
 @property  NSAttributedString *statusCommSafetyMayBeSensitiveViewPhotoButtonTranscriptTextUnderThirteen
 @property  NSAttributedString *statusCommSafetyMayBeSensitiveViewPhotosButtonTranscriptTextOverThirteen
 @property  NSAttributedString *statusCommSafetyMayBeSensitiveViewPhotosButtonTranscriptTextUnderThirteen
 @property  {UIEdgeInsets=dddd} minTranscriptMarginInsets
 @property  double previewMaxWidth
 @property  double emojiPreviewMaxWidth
 @property  double mapPreviewMaxWidth
 @property  {UIEdgeInsets=dddd} balloonTranscriptInsets
 @property  {UIEdgeInsets=dddd} senderTranscriptInsets
 @property  {UIEdgeInsets=dddd} replySenderTranscriptInsets
 @property  {UIEdgeInsets=dddd} stampTranscriptInsets
 @property  {UIEdgeInsets=dddd} contactPhotoTranscriptInsets
 @property  double replyLineWidth
 @property  double replyLineViewVerticalPadding
 @property  double replyLineViewHorizontalPadding
 @property  double replyLineBracketRadius
 @property  double transcriptDrawerGestureAcceleration
 @property  double checkmarkHorizontalPadding
 @property  double system_checkmarkHorizontalPadding
 @property  double topTranscriptSpace
 @property  double bottomTranscriptSpace
 @property  double unavailabilityIndicatorBottomTranscriptSpace
 @property  double notifyAnywayBottomTranscriptSpace
 @property  double minTranscriptSpace
 @property  double xsTranscriptSpace
 @property  double smallTranscriptSpace
 @property  double mediumTranscriptSpace
 @property  double largeTranscriptSpace
 @property  double extraLargeTranscriptSpace
 @property  double balloonContiguousSpace
 @property  double balloonNonContiguousSpace
 @property  double contactPhotoBalloonMargin
 @property  double replyPreviewBalloonAlpha
 @property  double replyPreviewBalloonMinWidth
 @property  double replyPreviewImageDiameter
 @property  double balloonMaxWidthPercent
 @property  double transcriptJunkHeaderButtonHeight
 @property  double transcriptScrollToBottomThreshold
 @property  double transcriptScrollToBottomDuration
 @property  BOOL transcriptMinBottomInsetIsEntryViewHeight
 @property  {UIEdgeInsets=dddd} defaultAVPlayerViewContorllerControlsInsets
 @property  double tuConversationBalloonScreenShareDeviceIconSize
 @property  double tuConversationBalloonInsetPadding
 @property  double tuConversationBalloonInteritemSpacing
 @property  double tuConversationBalloonButtonInteritemSpacing
 @property  double tuConversationBalloonButtonTitleHorizontalSpacing
 @property  double tuConversationBalloonButtonTitleVerticalSpacing
 @property  double tuConversationBalloonButtonTitleMaxStringWidth
 @property  {CGSize=dd} tuConversationBalloonScreenSharingImageViewSize
 @property  {CGSize=dd} tuConversationBalloonActivityImageViewSize
 @property  double tuConversationBalloonCornerRadius
 @property  double tuConversationBalloonJoinButtonHeight
 @property  double tuConversationBalloonJoinButtonMinWidth
 @property  double tuConversationInsetPadding
 @property  double tuConversationInteritemSpacing
 @property  double tuConversationIconPointSize
 @property  double tuConversationButtonInteritemSpacing
 @property  double tuConversationButtonTitleHorizontalSpacing
 @property  double tuConversationButtonTitleVerticalSpacing
 @property  UIFont *transcriptTextFont
 @property  UIFont *transcriptRegularFont
 @property  UIFont *transcriptAvailabilityFont
 @property  UIFont *transcriptNotifyAnywayFont
 @property  UIFont *transcriptMessageStatusFont
 @property  UIFont *transcriptMessageStatusDateFont
 @property  UIFont *transcriptBoldFont
 @property  UIFont *transcriptBodyBoldTextFont
 @property  UIFont *transcriptLoadingViewTextFont
 @property  ^{__CFCharacterSet=} systemUIFontExcessiveLineHeightCharacterSet
 @property  {UIEdgeInsets=dddd} transcriptTextFontLanguageAwareOutsets
 @property  NSDictionary *senderTranscriptTextAttributes
 @property  NSDictionary *replySenderTranscriptTextAttributes
 @property  NSDictionary *nickNameTranscriptTextAttributes
 @property  NSDictionary *transcriptRegularFontAttributes
 @property  NSDictionary *transcriptAvailabilityFontAttributes
 @property  NSDictionary *transcriptAvailabilityDeemphasizedFontAttributes
 @property  NSDictionary *transcriptNotifyAnywayFontAttributes
 @property  NSDictionary *transcriptEmphasizedFontAttributes
 @property  NSDictionary *drawerTranscriptTextAttributes
 @property  NSDictionary *leftStatusTranscriptTextAttributes
 @property  NSDictionary *rightStatusTranscriptTextAttributes
 @property  NSDictionary *leftTranscriptButtonTextAttributes
 @property  NSDictionary *rightTranscriptButtonTextAttributes
 @property  NSDictionary *centerTranscriptButtonTextAttributes
 @property  NSDictionary *conversationCellSummaryBoldIconTextAttributes
 @property  NSDictionary *conversationCellSummaryPreviewTextAttributes
 @property  NSDictionary *conversationCellSummaryBoldPreviewTextAttributes
 @property  UIFont *transcriptJunkHeaderTitleFont
 @property  UIFont *transcriptJunkHeaderButtonFont
 @property  {UIEdgeInsets=dddd} tuConversationBalloonEdgeInsets
 @property  double tuConversationBalloonTwoLineVerticalPadding
 @property  {CGSize=dd} tuConversationBalloonButtonAsIconSize
 @property  UIFont *tuConversationBalloonTitleFont
 @property  UIFont *tuConversationBalloonSubtitleFont
 @property  UIFont *tuConversationBalloonActionButtonFont
 @property  UIFont *tuConversationViewActionButtonFont
 @property  NSString *tuConversationBalloonActionButtonFontStyle
 @property  double tuConversationBalloonImageDimensions
 @property  double tuConversationBalloonScreenShareImageViewDimensions
 @property  double tuConversationBalloonFaceTimeIconDimensions
 @property  double tuConversationBalloonIconDimensions
 @property  double tuConversationBalloonAvatarDimensions
 @property  NSDictionary *phishingWarningTextAttributes
 @property  {UIEdgeInsets=dddd} phishingWarningEdgeInsets
 @property  UIImage *locationShareActionIcon
 @property  UIImage *unavailabilityIndicatorIcon
 @property  UIImage *unavailabilityIndicatorDeemphasizedIcon
 @property  UIImage *hawkingWarningIcon
 @property  UIImage *hawkingWarningIconRed
 @property  UIImage *conversationListFacetimeVideoIcon
 @property  UIImage *conversationListFacetimeAudioIcon
 @property  UIImage *facetimeAudioIcon
 @property  UIImage *screenTimeConversationListSummaryIcon
 @property  UIImage *messageReplyImage
 @property  UIImage *replayImage
 @property  UIImage *messageAcknowledgmentPickerBarBubbleImage
 @property  UIImage *quickSaveButtonImage
 @property  NSString *replyPreviewLocationIconName
 @property  NSString *replyPreviewContactIconName
 @property  NSString *replyPreviewDocumentIconName
 @property  double replyTranscriptBackgroundBlurRadius
 @property  double replyTranscriptBackgroundBlurAnimationTime
 @property  double replyTranscriptUpdateBannerAnimateOutTime
 @property  double replyTranscriptUpdateBannerAnimateInTime
 @property  UIFont *replyButtonFont
 @property  double replyButtonBackgroundBlurRadius
 @property  double replyButtonAnimationDuration
 @property  double replyButtonBorderWidth
 @property  double replyButtonTouchScale
 @property  double replyButtonTouchAlpha
 @property  double replyButtonPadding
 @property  {UIEdgeInsets=dddd} replyButtonEdgeInsets
 @property  double replyEntryViewBackagroundAlpha
 @property  {CGPoint=dd} replyButtonRelativePosition
 @property  double replyButtonHorizontalOriginOffsetPercent
 @property  double replyButtonVerticalOriginOffsetPercent
 @property  BOOL shouldUseDynamicGradient
 @property  BOOL hyphenatesTextContent
 @property  BOOL shouldAdjustWidthForSendFailure
 @property  BOOL playsInlineVideo
 @property  BOOL showsBalloonChevron
 @property  BOOL handlesBalloonViewTitleTapsSeparately
 @property  BOOL showsPlaceCardForBalloonViewTitleTap
 @property  BOOL opensLocationsInMapsApp
 @property  BOOL showsBalloonBadges
 @property  BOOL canPluginBalloonsUseOpaqueMask
 @property  long long maxNumExtensionRemoteViewControllers
 @property  double skinnyBalloonWidthDifference
 @property  double extensionBalloonMaximumHeight
 @property  double extraTallExtensionBalloonMaximumHeight
 @property  double balloonMaskTailWidth
 @property  double textBalloonMinHeight
 @property  double textReplyPreviewBalloonMinHeight
 @property  {UIEdgeInsets=dddd} bigEmojiAlignmentRectInsets
 @property  {UIEdgeInsets=dddd} textReplyPreviewBalloonAlignmentRectInsets
 @property  {UIEdgeInsets=dddd} attachmentReplyPreviewBalloonAlignmentRectInsets
 @property  double textAlignmentRectInsetsScaleFactor
 @property  {UIEdgeInsets=dddd} balloonTextContainerInset
 @property  long long replyBalloonMaximumNumberOfLines
 @property  {UIEdgeInsets=dddd} replyBalloonTextContainerInset
 @property  double balloonLineFragmentPadding
 @property  {UIEdgeInsets=dddd} balloonLineFragmentInsets
 @property  double audioBalloonWaveformTimeSpace
 @property  double audioBalloonTimeInset
 @property  double audioBalloonProgressInset
 @property  {CGSize=dd} audioProgressViewSize
 @property  {UIEdgeInsets=dddd} audioBalloonAlignmentInsets
 @property  double audioReplyPreviewBalloonInset
 @property  {UIEdgeInsets=dddd} audioReplyPreviewBalloonAlignmentInsets
 @property  double nanoNoteSenderContentSpace
 @property  double verticalBalloonBadgeInset
 @property  double horizontalBalloonBadgeInset
 @property  double stackBalloonVerticalInset
 @property  UIFont *balloonTextFont
 @property  UIFont *defaultBalloonTextFont
 @property  UIFont *balloonSubjectFont
 @property  UIFont *bigEmojiFont
 @property  UIFont *audioBalloonTimeFont
 @property  UIFont *replyBalloonTextFont
 @property  NSParagraphStyle *balloonParagraphStyle
 @property  UIFont *browserCellFont
 @property  UIFont *locationBoldButtonFont
 @property  UIFont *locationButtonFont
 @property  NSString *balloonName
 @property  NSString *taillessBallonName
 @property  NSString *skinnyBalloonName
 @property  NSString *skinnyTaillessBalloonName
 @property  NSString *strokedBalloonName
 @property  NSString *strokedTaillessBalloonName
 @property  double locationShareBalloonButtonHeight
 @property  double locationShareBalloonMaxVisibleMapHeight
 @property  double locationShareBalloonLabelPadding
 @property  double locationShareBalloonButtonCharge
 @property  double locationShareBalloonContactImageDiameter
 @property  Class attachmentViewClass
 @property  Class audioBalloonViewClass
 @property  Class audioBalloonCellClass
 @property  Class contactBalloonViewClass
 @property  BOOL shouldFillAndStrokeAttachmentBalloon
 @property  BOOL attachmentBalloonFillColor
 @property  BOOL attachmentBalloonStrokeColor
 @property  BOOL calculatesWidthForAttachmentBalloons
 @property  BOOL showsFileSizeInSubtitle
 @property  BOOL showsVCalViewer
 @property  BOOL useSingleLineForContactVCardNames
 @property  BOOL playButtonPunchesOutArrow
 @property  BOOL supportsPassbookAttachments
 @property  double waveformMaxWidthDuration
 @property  unsigned long waveformMaxPowerLevelsCount
 @property  unsigned long waveformMinPowerLevelsCount
 @property  double waveformMinDbPowerLevel
 @property  double waveformMinLinearPowerLevel
 @property  long long playButtonBackdropStyle
 @property  {UIEdgeInsets=dddd} quickSaveButtonImageInsets
 @property  {CGSize=dd} documentIconSize
 @property  {CGSize=dd} attachmentBalloonSize
 @property  {UIEdgeInsets=dddd} attachmentBalloonRichIconInsets
 @property  {CGSize=dd} contactImageSize
 @property  double contactBalloonInnerItemSpacing
 @property  double contactBalloonMinWidth
 @property  double contactBalloonHeight
 @property  double contactBalloonTopNameSpacing
 @property  double contactBalloonNameOrgSpacing
 @property  double contactBalloonOrgBottomSpacing
 @property  {UIEdgeInsets=dddd} minimumPlayButtonInsets
 @property  double previewTitleBarHeight
 @property  double waveformHeight
 @property  double waveformMaxWidth
 @property  unsigned long waveformPowerLevelWidth
 @property  unsigned long waveformGapWidth
 @property  unsigned long waveformPowerLevelWidthIncrement
 @property  double waveformDefaultImagePowerLevelCount
 @property  {CGSize=dd} photoSheetProgressIndicatorSize
 @property  double photoSheetVideoIconPadding
 @property  UIFont *previewTitleFont
 @property  UIFont *attachmentTextFont
 @property  UIFont *contactAttachmentNameFont
 @property  UIFont *contactAttachmentOrgFont
 @property  UIImage *genericDocumentIcon
 @property  UIImage *errorDocumentIcon
 @property  UIImage *textDocumentIcon
 @property  UIImage *playButtonImage
 @property  UIImage *playButtonArrowImage
 @property  UIImage *muteButtonImage
 @property  UIImage *unmuteButtonImage
 @property  UIColor *imageBalloonSelectionOverlayColor
 @property  BOOL shouldHomogenizeAtomsForPreferredService
 @property  BOOL shouldShowDisclosureChevronInRecipientAtoms
 @property  BOOL shouldAutomaticallyCheckAvailabilityOfAlternateAddresses
 @property  BOOL shouldRefreshAlternateAddressesSheet
 @property  BOOL presentsFullscreenInViewService
 @property  BOOL presentsAutocompleteInAPopover
 @property  {UIEdgeInsets=dddd} toFieldScrollViewInsets
 @property  double toFieldInterItemSpacing
 @property  double toFieldXOffset
 @property  double toFieldYOffset
 @property  double minAudioRecordingDuration
 @property  double maxAudioRecordingDuration
 @property  BOOL entryFieldShouldUseBackdropView
 @property  BOOL isAppStripInKeyboard
 @property  BOOL isMentionSuggestionViewInKeyboard
 @property  unsigned long maxNumLiveBrowserViewsToKeepInViewHierarchy
 @property  unsigned long maxNumberOfItemsPerAppDrawerPage
 @property  {CGSize=dd} appIconSize
 @property  BOOL shouldDisableFocusRing
 @property  double entryViewBackgroundAlpha
 @property  BOOL isSendButtonEnabledOnPlatform
 @property  BOOL isBrowserButtonAlwaysHighlighted
 @property  BOOL isEntryViewCollapsable
 @property  BOOL entryViewSupportsPhotoButton
 @property  BOOL browserButtonShouldUseMenu
 @property  BOOL browserButtonShouldUseExternalMenu
 @property  BOOL shouldDisableSendButtonClickInteraction
 @property  BOOL includeKeyboardInEntryViewHeight
 @property  double sendButtonSize
 @property  {CGSize=dd} dictationButtonSize
 @property  {CGSize=dd} browserButtonSize
 @property  double arrowButtonRightPadding
 @property  double entryFieldCoverLineWidth
 @property  double entryViewCoverMinHeight
 @property  {UIEdgeInsets=dddd} entryViewVerticalCoverInsets
 @property  {UIEdgeInsets=dddd} entryViewHorizontalCoverInsets
 @property  CKMessageEntryViewLayoutMetrics *entryViewlayoutMetrics
 @property  double entryViewMaxPluginShelfHeight
 @property  double entryViewMinPluginShelfHeight
 @property  double entryViewMaxExtensionShelfHeight
 @property  double entryViewMaxHandWritingPluginShelfHeight
 @property  double entryViewSendButtonCoverSpace
 @property  double entryViewDictationButtonCoverSpace
 @property  double entryViewLeftInsetForRecordedAudioCancelButton
 @property  double paddleOvelayRadius
 @property  double paddleDividerInset
 @property  UIFont *characterCountFont
 @property  UIFont *audioHintFont
 @property  UIFont *mentionsCellNameFont
 @property  BOOL entryFieldShouldUseNewPhotoUI
 @property  NSString *entryViewSendButtonName
 @property  NSString *entryViewAudioButtonName
 @property  NSString *entryViewArrowButtonName
 @property  NSString *entryViewPhotoButtonName
 @property  NSString *entryViewAppButtonName
 @property  double welcomeViewContentViewLeadingAnchorLayoutConstraintConstant
 @property  double welcomeViewContentViewTopAnchorLayoutConstraintConstant
 @property  UIFont *welcomeViewCancelButtonFont
 @property  UIFont *welcomeViewConfirmButtonFont
 @property  UIFont *welcomeViewTitleLabelFont
 @property  double whatsNewViewBulletPointSymbolLeadingAnchorLayoutConstraintConstant
 @property  double whatsNewViewBulletPointTextTrailingAnchorLayoutConstraintConstant
 @property  UIFont *whatsNewViewBulletPointSymbolLabelFont
 @property  UIFont *whatsNewViewBulletPointTextLabelFont
 @property  UIFont *whatsNewViewDescriptionLabelFont
 @property  UIFont *whatsNewFeatureViewTitleLabelFont
 @property  UIFont *whatsNewFeatureViewDescriptionLabelFont
 @property  UIImage *whatsNewViewApplePayImage
 @property  BOOL shouldAnimateGifsInPhotoGrid
 @property  BOOL detailsSeperatorsFollowLayoutMargins
 @property  double dividerHeight
 @property  unsigned long detailsSectionCount
 @property  {CGSize=dd} attachmentBrowserDefaultSizeForSquare
 @property  double attachmentBrowserGridInterItemSpacing
 @property  double attachmentBrowserGridMinimumLineSpacing
 @property  {UIEdgeInsets=dddd} attachmentBrowserGridSectionInset
 @property  {UIEdgeInsets=dddd} attachmentBrowserFeedLayoutSectionInset
 @property  double attachmentBrowserHeaderLabelPadding
 @property  unsigned long numberOfButtonsInPhotoPicker
 @property  unsigned long numberOfAssetsInPhotoPicker
 @property  BOOL photoPickerShouldZoomOnSelection
 @property  BOOL photoPickerUsesVitality
 @property  double photoPickerPopoverWidth
 @property  double photoPickerInterItemSpacing
 @property  {UIEdgeInsets=dddd} photoPickerSectionInsets
 @property  double photoPickerMaxPhotoHeight
 @property  UIImage *photoPickerOnBadge
 @property  UIImage *photoPickerOffBadge
 @property  UIImage *photoPickerDisabledBadge
 @property  BOOL shouldAlignRecipientGlyphsWithMargins
 @property  double detailsGroupHeaderCellTextVerticalPadding
 @property  double detailsGroupHeaderCellInterTextVerticalSpacing
 @property  double detailsContactCellButtonWidth
 @property  double detailsContactCellButtonHeight
 @property  {UIEdgeInsets=dddd} detailsContactCellButtonEdgeInsets
 @property  double detailsContactCellMinimumHeight
 @property  double detailsViewMapHeight
 @property  double detailsAvatarPancakeViewWidth3Avatars
 @property  double detailsAvatarPancakeViewWidth2Avatars
 @property  double detailsAvatarPancakeViewOverlapOffset
 @property  double detailsAvatarHeight
 @property  double detailsAvatarWidth
 @property  double detailsAvatarCornerRadius
 @property  double detailsAvatarCutoutDiameter
 @property  double detailsTUConversationCellButtonHeight
 @property  double detailsTUConversationCellButtonMinWidth
 @property  double detailsTUConversationDetailsSummaryImageDiameter
 @property  double detailsExpanseCellHeight
 @property  double detailsExpanseDescriptionLabelHeight
 @property  double detailsExpanseScreenShareCellHeight
 @property  double detailsExpanseImageFallbackDimension
 @property  double detailsExpanseActivityDescriptionVerticalPadding
 @property  double detailsExpanseActivityImageInsetPadding
 @property  double detailsExpanseScreenShareIconHorizontalInsetPadding
 @property  double detailsExpanseScreenShareIconVerticalInsetPadding
 @property  double tuConversationJoinButtonCornerRadius
 @property  double tuConversationJoinButtonHeight
 @property  double tuConversationJoinButtonMinWidth
 @property  double tuConversationBalloonJoinButtonMaxWidthPercentage
 @property  UIFont *nameFieldFont
 @property  UIFont *recipientNameFont
 @property  UIFont *locationSubtitleFont
 @property  UIFont *addContactFont
 @property  UIFont *headerFont
 @property  UIFont *downloadButtonFont
 @property  UIFont *iCloudTextFont
 @property  UIImage *detailsViewFaceTimeVideoImage
 @property  UIImage *detailsViewPhoneImage
 @property  UIImage *detailsViewMessagesImage
 @property  {CGSize=dd} avatarSize
 @property  {CGSize=dd} groupAvatarViewSize
 @property  double avatarSpacingMargin
 @property  double avatarNameWidth
 @property  double avatarContactImageNameMargin
 @property  double avatarVerticalOffset
 @property  {CGSize=dd} avatarCutoutSize
 @property  double avatarPancakeGroupOffset
 @property  double avatarPancakeMaxOffset
 @property  double avatarTitleOffset
 @property  UIFont *avatarStackTitleFont
 @property  UIFont *noAvatarTitleFont
 @property  UIFont *avatarNameFont
 @property  UIFont *avatarNameEmergencyFont
 @property  BOOL areBannersSupported
 @property  {CGSize=dd} bannerCellSize
 @property  double bannerAdditionalOffset
 @property  double bannerTitleAdditionalOffset
 @property  UIFont *nicknameUpdatesTitleFont
 @property  UIFont *nicknameUpdatesSubtitleFont
 @property  Class acknowledgementPickerBarClass
 @property  unsigned long messageAcknowledgmentVotingStackSize
 @property  {CGPoint=dd} messageAcknowledgmentTranscriptBalloonRelativePosition
 @property  {CGPoint=dd} messageAcknowledgmentTranscriptOrganicBalloonAdditionalOffset
 @property  {CGSize=dd} messageAcknowledgmentTranscriptBalloonSize
 @property  {UIEdgeInsets=dddd} messageAcknowledgmentTranscriptGlyphInset
 @property  {CGPoint=dd} messageAcknowledgmentPickerBarRelativePosition
 @property  {CGSize=dd} messageAcknowledgmentPickerBarSize
 @property  {CGSize=dd} messageAcknowledgmentPickerBarAcknowledgmentImageSize
 @property  {CGSize=dd} messageAcknowledgmentPickerBarAcknowledgmentItemBalloonSize
 @property  {CGSize=dd} messageAcknowledgmentPickerBarItemViewSize
 @property  {CGSize=dd} messageAcknowledgmentPickerBarBubbleTailSize
 @property  {CGPoint=dd} messageAcknowledgmentPickerBarBubbleStartingOrigin
 @property  {CGSize=dd} messageAcknowledgmentPickerBarOffsetFromBalloon
 @property  NSArray *messageAcknowledgmentPickerBarAcknowledgmentOrder
 @property  {CGSize=dd} aggregateAcknowledgmentTranscriptBalloonSize
 @property  {CGSize=dd} messageAcknowledgmentVotingAvatarSize
 @property  UIFont *messageAcknowledgmentVoteCountFont
 @property  double messageAcknowledgementVotingViewHeight
 @property  double messageAcknowledgementVotingViewMaxWidth
 @property  double messageAcknowledgementVotingViewMinPadding
 @property  NSString *messageAcknowledgmentPickerBarBubbleName
 @property  NSString *messageAcknowledgmentPickerBarBubbleTailName
 @property  UIImage *grayHeartAckImage
 @property  UIImage *grayThumbsUpAckImage
 @property  UIImage *grayThumbsDownAckImage
 @property  UIImage *grayHaAckImage
 @property  UIImage *grayH1AckImage
 @property  UIImage *grayH2AckImage
 @property  UIImage *grayA1AckImage
 @property  UIImage *grayA2AckImage
 @property  UIImage *grayExclamationLeftAckImage
 @property  UIImage *grayExclamationRightAckImage
 @property  UIImage *grayQuestionMarkGlyphAckImage
 @property  UIImage *grayQuestionMarkDotAckImage
 @property  UIImage *redHeartAckImage
 @property  UIImage *whiteThumbsUpAckImage
 @property  UIImage *whiteThumbsDownAckImage
 @property  UIImage *whiteExclamationLeftAckImage
 @property  UIImage *whiteExclamationRightAckImage
 @property  UIImage *whiteQuestionMarkGlyphAckImage
 @property  UIImage *whiteQuestionMarkDotAckImage
 @property  UIImage *whiteHaAckImage
 @property  UIImage *whiteH1AckImage
 @property  UIImage *whiteH2AckImage
 @property  UIImage *whiteA1AckImage
 @property  UIImage *whiteA2AckImage
 @property  UIImage *businessVerifiedImageLarge
 @property  UIImage *businessVerifiedImageSmall
 @property  UIImage *businessFallbackImage
 @property  {CGSize=dd} businessBannerSize
 @property  double businessBrandingAnimationDuration
 @property  double businessBrandingBannerInset
 @property  UIImage *navBarHeaderChevronImage
 @property  UIImage *navBarHeaderChevronImageNoAvatar
 @property  UIImage *navBarHeaderVideoImage
 @property  UIImage *navBarHeaderAudioImage
 @property  UIImage *navBarHeaderExpanseImage
 @property  UIImage *navBarVideoImage
 @property  UIImage *navBarVideoFillImage
 @property  UIImage *navBarAudioImage
 @property  UIImage *navBarAudioFillImage
 @property  UIFont *navBarUnifiedCallButtonJoinTextFont
 @property  UIImage *messageHighlightImage
 @property  {CGPoint=dd} messageHighlightTranscriptBalloonRelativePosition
 @property  {CGSize=dd} messageHighlightTranscriptBalloonSize
 @property  double messageHighlightTranscriptBalloonBorderWidth
 @property  UIColor *messageHighlightGoldColor
 @property  UIColor *messageHighlightGlyphColor
 @property  double messageHighlightTranscriptBalloonBottomPadding
 @property  double messageHighlightGlyphSymbolPointSize
 @property  {CGSize=dd} messageHighlightButtonVisibleViewSize
 @property  double messageHighlightButtonGlyphPointSize
 @property  {UIEdgeInsets=dddd} messageHighlightButtonInsets
 @property  UIImage *messageHighlightButtonImageHighlightOn
 @property  UIImage *messageHighlightButtonImageHighlightOff
 @property  UIColor *messageHighlightButtonSelectedBackgroundColor
 @property  UIColor *messageHighlightButtonUnselectedBackgroundColor
 @property  double messageHighlightButtonGlyphSymbolPointSize
 @property  {CGPoint=dd} messageHighlightButtonRelativePositionToTranscriptMessageBalloon
 @property  unsigned long appIconPrefetchLimit
 @property  unsigned long suggestedAppStripLimit
 @property  unsigned long suggestedMinimumRecentsCount
 @property  double browserSwitcherCollapsedGrabberHeaderHeight
 @property  double browserSwitcherCompactGrabberVisibleHeight
 @property  double browserSwitcherExpandedGrabberHeaderHeight
 @property  double browserSwitcherExpandThreshold
 @property  double browserSwitcherGutterWidth
 @property  double browserSwitcherEdgeGestureWidth
 @property  double chatChromeBottomInset
 @property  double chatMagnifiedChromeBottomInset
 @property  double browserSwitcherScrollerHeight
 @property  double cameraAppsMinimizedDockHeight
 @property  UIFont *appLabelFont
 @property  double dragPinchGestureScaleFactor
 @property  double dragBalloonHeightReducedAttractorThreshold
 @property  double dragBalloonWidthIncreasedAttractorThreshold
 @property  double dragBalloonCornerRadius
 @property  double dragBalloonTailCropWidth
 @property  double dragEdgeLayoutIntentPadding
 @property  double dragTranscriptScrollThreshold
 @property  double dragTranscriptScrollDisplayLinkMaxDelta
 @property  unsigned long stickerScreenScale
 @property  UIFont *stickerDetailsTitleFont
 @property  UIFont *stickerDetailsSenderFont
 @property  UIFont *stickerDetailsStickerPackFont
 @property  UIFont *stickerDetailsTimestampFont
 @property  BOOL shouldPopoverSuggestionsBanner
 @property  UIFont *businessInfoViewGreetingTextFont
 @property  UIFont *businessInfoViewDescriptionTextFont
 @property  UIFont *businessInfoViewTitleLabelFont
 @property  UIFont *businessDescriptionVCTextViewFont
 @property  UIFont *syncProgressLabelFont
 @property  double callButtonSize
 @property  {UIEdgeInsets=dddd} callButtonImageInsets
 @property  double callButtonLongPressDuration
 @property  {UIEdgeInsets=dddd} searchSectionInsets
 @property  {UIEdgeInsets=dddd} searchSectionMarginInsets
 @property  double searchLeadingAndTrailingMaxPadding
 @property  double searchHeaderHeight
 @property  UIFont *searchHeaderFont
 @property  UIFont *searchHeaderButtonFont
 @property  UIFont *searchDetailsHeaderFont
 @property  UIFont *searchDetailsHeaderFontIdentity
 @property  UIFont *searchDetailsSubHeaderFont
 @property  double searchSectionTitleVertPadding
 @property  double searchConversationMinAvatarLabelSpacing
 @property  double searchPhotosThumbnailWidth
 @property  double searchPhotosCellZKWAndDetailsCornerRadius
 @property  double searchPhotosCellCornerRadius
 @property  double searchPhotosInterItemSpacing
 @property  double searchPhotosInterItemSpacingDetailsView
 @property  double searchPhotosZKWAndDetailsInterItemSpacing
 @property  double searchLinksThumbnailWidth
 @property  double searchLinksInterItemSpacing
 @property  double searchLinksCellCornerRadius
 @property  double searchAttachmentsInterItemSpacing
 @property  double searchAttachmentsCellCornerRadius
 @property  double searchLocationsInterItemSpacing
 @property  double searchLocationCellCornerRadius
 @property  double searchHighlightsInterItemSpacing
 @property  UIFont *searchResultLabelFont
 @property  UIFont *searchResultLabelBoldFont
 @property  UIFont *searchIndexingTitleFont
 @property  UIFont *searchIndexingSubtitleFont
 @property  double balloonSelectionScrollThresholdTop
 @property  double balloonSelectionScrollThresholdBottom
 @property  double balloonSelectionLoadMoreSpinnerHeight
 @property  double balloonSelectionMaxScrollSpeed
 @property  BOOL enableBalloonTextSelection

  // class methods
  +[CKUIBehavior sharedBehaviors]
  +[CKUIBehavior orderedContentSizeCategories]
  +[CKUIBehavior fontWithStyle:adjustedForMaxSizeCategory:]
  +[CKUIBehavior font:adjustedForMaxSizeCategory:]
  +[CKUIBehavior testOverrideClearSharedBehaviors]

  // instance methods
  -[CKUIBehavior theme]
  -[CKUIBehavior balloonMaxWidthForTranscriptWidth:marginInsets:shouldShowPluginButtons:shouldShowCharacterCount:shouldCoverSendButton:]
  -[CKUIBehavior isAppStripInKeyboard]
  -[CKUIBehavior readerFont]
  -[CKUIBehavior chatChromeBottomInset]
  -[CKUIBehavior isRunningInStoreDemoMode]
  -[CKUIBehavior composeBalloonMaxWidthForEntryContentViewWidth:]
  -[CKUIBehavior stampTranscriptInsets]
  -[CKUIBehavior transcriptBoldTextAlignmentInsets]
  -[CKUIBehavior transcriptBoldTextHeight]
  -[CKUIBehavior detailsContactCellMinimumHeight]
  -[CKUIBehavior detailsExpanseCellHeight]
  -[CKUIBehavior imageNamed:pointSize:insets:]
  -[CKUIBehavior messageAcknowledgmentPollingImageNameForAcknowledgmentType:]
  -[CKUIBehavior entryViewCoverMinHeight]
  -[CKUIBehavior aggregateAcknowledgmentTranscriptBalloonSize]
  -[CKUIBehavior searchPhotosZKWAndDetailsInterItemSpacing]
  -[CKUIBehavior searchPhotosInterItemSpacingDetailsView]
  -[CKUIBehavior searchPhotosInterItemSpacing]
  -[CKUIBehavior characterCountFont]
  -[CKUIBehavior arrowButtonRightPadding]
  -[CKUIBehavior navigationBarTitleViewVerticalOffset]
  -[CKUIBehavior navbarButtonImagePointSize]
  -[CKUIBehavior navBarInfoImageName]
  -[CKUIBehavior _isVerticallyCompact]
  -[CKUIBehavior maxNavigationBarCollapsedHeightValue]
  -[CKUIBehavior maxNavigationBarExpandedHeightValue]
  -[CKUIBehavior bottomTranscriptSpace]
  -[CKUIBehavior entryFieldCoverLineWidth]
  -[CKUIBehavior transcriptQuickSaveButtonHorizontalSpacing]
  -[CKUIBehavior minBalloonsForTranscriptHeight]
  -[CKUIBehavior videoControllerWindowLevel]
  -[CKUIBehavior primaryColumnWidthForInterfaceOrientation:]
  -[CKUIBehavior psMode1]
  -[CKUIBehavior replyLineWidth]
  -[CKUIBehavior replyLineViewVerticalPadding]
  -[CKUIBehavior canPresentOverKeyboard]
  -[CKUIBehavior replyLineBracketRadius]
  -[CKUIBehavior hyphenatesTextContent]
  -[CKUIBehavior mentionTranscriptFontFromOrignalFont:]
  -[CKUIBehavior detailsExpanseDescriptionLabelHeight]
  -[CKUIBehavior detailsExpanseImageFallbackDimension]
  -[CKUIBehavior detailsExpanseActivityImageInsetPadding]
  -[CKUIBehavior locationSubtitleFont]
  -[CKUIBehavior detailsExpanseScreenShareIconHorizontalInsetPadding]
  -[CKUIBehavior detailsExpanseScreenShareIconVerticalInsetPadding]
  -[CKUIBehavior tuConversationJoinButtonMinWidth]
  -[CKUIBehavior conversationListSenderBodyLeading]
  -[CKUIBehavior conversationListSummaryBodyLeading]
  -[CKUIBehavior setupNavBarAppearanceWithNavigationController:withBackgroundColor:]
  -[CKUIBehavior usesPersistentConversationSelection]
  -[CKUIBehavior minPrimaryColumnWidth]
  -[CKUIBehavior maxPrimaryColumnWidth]
  -[CKUIBehavior balloonMaskSize]
  -[CKUIBehavior waveformDefaultImagePowerLevelCount]
  -[CKUIBehavior _transcriptAnimationScaleFactor]
  -[CKUIBehavior shouldUseRotisserieScrolling]
  -[CKUIBehavior centerTranscriptButtonTextAttributes]
  -[CKUIBehavior detailsViewFaceTimeVideoImage]
  -[CKUIBehavior detailsViewMessagesImage]
  -[CKUIBehavior groupAvatarViewSize]
  -[CKUIBehavior avatarCollapsedSize]
  -[CKUIBehavior avatarSpacingMargin]
  -[CKUIBehavior avatarNameWidth]
  -[CKUIBehavior replyPreviewBalloonAlpha]
  -[CKUIBehavior conversationCellSummaryBoldPreviewTextAttributes]
  -[CKUIBehavior systemUIFontExcessiveLineHeightCharacterSet]
  -[CKUIBehavior psMode2]
  -[CKUIBehavior darkUIEnabled]
  -[CKUIBehavior entryViewSupportsPhotoButton]
  -[CKUIBehavior avatarContactImageNameMargin]
  -[CKUIBehavior avatarVerticalOffset]
  -[CKUIBehavior avatarCutoutSize]
  -[CKUIBehavior avatarPancakeGroupOffset]
  -[CKUIBehavior avatarPancakeMaxOffset]
  -[CKUIBehavior avatarTitleOffset]
  -[CKUIBehavior maxTranscriptPortraitWidth]
  -[CKUIBehavior previewBalloonMaxWidthForBalloonMaxWidth:]
  -[CKUIBehavior transcriptDrawerSpace]
  -[CKUIBehavior transcriptDrawerFont]
  -[CKUIBehavior transcriptTextFont]
  -[CKUIBehavior browserButtonShouldUseMenu]
  -[CKUIBehavior audioBalloonTimeFont]
  -[CKUIBehavior waveformPowerLevelWidthIncrement]
  -[CKUIBehavior audioBalloonTimeInset]
  -[CKUIBehavior audioBalloonWaveformTimeSpace]
  -[CKUIBehavior waveformMinDbPowerLevel]
  -[CKUIBehavior balloonContiguousSpace]
  -[CKUIBehavior balloonNonContiguousSpace]
  -[CKUIBehavior balloonLineFragmentInsets]
  -[CKUIBehavior balloonMaxWidthPercent]
  -[CKUIBehavior navBarUnifiedCallButtonJoinTextFont]
  -[CKUIBehavior usesPopovers]
  -[CKUIBehavior transcriptReplyPreviewContextContactAlpha]
  -[CKUIBehavior filteredAppMenuItemsForOrderedCollection:]
  -[CKUIBehavior locationShareBalloonSizeForWidth:offerState:]
  -[CKUIBehavior previewTitleFont]
  -[CKUIBehavior detailsExpanseActivityDescriptionVerticalPadding]
  -[CKUIBehavior avatarNameFont]
  -[CKUIBehavior avatarNameEmergencyFont]
  -[CKUIBehavior navigationHeaderJoinLabelFont]
  -[CKUIBehavior bannerCellSize]
  -[CKUIBehavior bannerAdditionalOffset]
  -[CKUIBehavior bannerTitleAdditionalOffset]
  -[CKUIBehavior prewarmAcknowledgementsImage]
  -[CKUIBehavior businessVerifiedImageLarge]
  -[CKUIBehavior businessVerifiedImageSmall]
  -[CKUIBehavior businessFallbackImage]
  -[CKUIBehavior navBarHeaderChevronImage]
  -[CKUIBehavior locationBoldButtonFont]
  -[CKUIBehavior locationButtonFont]
  -[CKUIBehavior messageAcknowledgmentTranscriptBalloonRelativePosition]
  -[CKUIBehavior _leftStatusTranscriptTextAttributes]
  -[CKUIBehavior _rightStatusTranscriptTextAttributes]
  -[CKUIBehavior .cxx_destruct]
  -[CKUIBehavior newComposeImage]
  -[CKUIBehavior optionsImage]
  -[CKUIBehavior conversationListComposeButtonSpacing]
  -[CKUIBehavior minTranscriptMarginInsets]
  -[CKUIBehavior chevronImageForColorType:]
  -[CKUIBehavior locationShareBalloonContactImageDiameter]
  -[CKUIBehavior navBarHeaderVideoImage]
  -[CKUIBehavior navBarHeaderAudioImage]
  -[CKUIBehavior navBarHeaderExpanseImage]
  -[CKUIBehavior navBarVideoImage]
  -[CKUIBehavior navBarVideoFillImage]
  -[CKUIBehavior navBarAudioImage]
  -[CKUIBehavior appLabelFont]
  -[CKUIBehavior conversationListBoldSummaryFont]
  -[CKUIBehavior _leftTranscriptButtonTextAttributes]
  -[CKUIBehavior transcriptButtonTextFont]
  -[CKUIBehavior _rightTranscriptButtonTextAttributes]
  -[CKUIBehavior psMode3]
  -[CKUIBehavior _breadcrumbTranscriptTextAttributes]
  -[CKUIBehavior _senderTranscriptTextAttributes]
  -[CKUIBehavior transcriptSenderFont]
  -[CKUIBehavior _transcriptRegularFontAttributes]
  -[CKUIBehavior grayH1AckImage]
  -[CKUIBehavior bigEmojiFont]
  -[CKUIBehavior transcriptRegularFont]
  -[CKUIBehavior _transcriptAvailabilityFontAttributes]
  -[CKUIBehavior transcriptAvailabilityFont]
  -[CKUIBehavior _transcriptAvailabilityDeemphasizedFontAttributes]
  -[CKUIBehavior navBarAudioFillImage]
  -[CKUIBehavior businessBannerSize]
  -[CKUIBehavior messageAcknowledgmentVotingStackSize]
  -[CKUIBehavior fullscreenPickerActionLayoutAxisPrioritiesForWidth:]
  -[CKUIBehavior searchLocationsInterItemSpacing]
  -[CKUIBehavior messageAcknowledgmentTranscriptOrganicBalloonAdditionalOffset]
  -[CKUIBehavior messageAcknowledgmentPickerBarRelativePosition]
  -[CKUIBehavior messageHighlightButtonInsets]
  -[CKUIBehavior messageAcknowledgmentPickerBarAcknowledgmentItemBalloonSize]
  -[CKUIBehavior messageAcknowledgmentPickerBarItemViewSize]
  -[CKUIBehavior appIconPrefetchLimit]
  -[CKUIBehavior callButtonSize]
  -[CKUIBehavior locationRelativeDateFormatter]
  -[CKUIBehavior entryFieldShouldUseBackdropView]
  -[CKUIBehavior replyEntryViewBackagroundAlpha]
  -[CKUIBehavior entryViewBackgroundAlpha]
  -[CKUIBehavior messageHighlightTranscriptBalloonSize]
  -[CKUIBehavior balloonTranscriptInsets]
  -[CKUIBehavior messageAcknowledgmentPickerBarBubbleTailSize]
  -[CKUIBehavior messageAcknowledgmentPickerBarBubbleStartingOrigin]
  -[CKUIBehavior messageAcknowledgmentVotingAvatarSize]
  -[CKUIBehavior navigationBarMaxHeight]
  -[CKUIBehavior _transcriptNotifyAnywayFontAttributes]
  -[CKUIBehavior transcriptNotifyAnywayFont]
  -[CKUIBehavior _transcriptEmphasizedFontAttributes]
  -[CKUIBehavior _drawerTranscriptTextAttributes]
  -[CKUIBehavior entryViewMaxHandWritingPluginShelfHeight]
  -[CKUIBehavior messageAcknowledgmentPickerBarOffsetFromBalloon]
  -[CKUIBehavior messageAcknowledgementVotingViewMaxWidth]
  -[CKUIBehavior touchBarImageNameForAcknowledgmentType:]
  -[CKUIBehavior skinnyBalloonMaskSize]
  -[CKUIBehavior balloonMaskTailHeight]
  -[CKUIBehavior taillessBalloonMaskSize]
  -[CKUIBehavior taillessMultilineBalloonMaskSize]
  -[CKUIBehavior multilineBalloonMaskSize]
  -[CKUIBehavior balloonName]
  -[CKUIBehavior taillessSkinnyBalloonMaskSize]
  -[CKUIBehavior replyBalloonMaskSize]
  -[CKUIBehavior replyMultilineBalloonMaskSize]
  -[CKUIBehavior replySkinnyBalloonMaskSize]
  -[CKUIBehavior replyDeleteBalloonMaskSize]
  -[CKUIBehavior searchIndexingTitleFont]
  -[CKUIBehavior skinnyBalloonMaskSizeWithTailShape:]
  -[CKUIBehavior roundBalloonMaskSizeWithTailShape:]
  -[CKUIBehavior replyBalloonMaskSizeWithTailShape:isMultiline:]
  -[CKUIBehavior gray_chevronImage]
  -[CKUIBehavior skinnyReplyBalloonMaskSizeWithTailShape:]
  -[CKUIBehavior deletedReplyBalloonMaskSizeWithTailShape:]
  -[CKUIBehavior balloonMaskAlignmentRectInsets]
  -[CKUIBehavior balloonMaskFrameInsets]
  -[CKUIBehavior transcriptEmphasizedFontAttributes]
  -[CKUIBehavior showsSendAnimation]
  -[CKUIBehavior acknowledgementPickerBarClass]
  -[CKUIBehavior messageAcknowledgmentPickerBarBubbleName]
  -[CKUIBehavior messageAcknowledgmentPickerBarBubbleTailName]
  -[CKUIBehavior aggregateAcknowledgmentBottomMiddleName:]
  -[CKUIBehavior aggregateAcknowledgmentBottomTopName:]
  -[CKUIBehavior messageHighlightTranscriptBalloonRelativePosition]
  -[CKUIBehavior messageHighlightTranscriptBalloonBottomPadding]
  -[CKUIBehavior messageHighlightButtonRelativePositionToTranscriptMessageBalloon]
  -[CKUIBehavior messageHighlightButtonVisibleViewSize]
  -[CKUIBehavior suggestedAppStripLimit]
  -[CKUIBehavior replayImage]
  -[CKUIBehavior searchMessageCellHeightForDisplayScale:]
  -[CKUIBehavior messageHighlightButtonSelectedBackgroundColor]
  -[CKUIBehavior messageHighlightButtonUnselectedBackgroundColor]
  -[CKUIBehavior messageHighlightButtonImageHighlightOn]
  -[CKUIBehavior messageHighlightButtonImageHighlightOff]
  -[CKUIBehavior suggestedMinimumRecentsCount]
  -[CKUIBehavior browserSwitcherCompactGrabberVisibleHeight]
  -[CKUIBehavior browserSwitcherGutterWidth]
  -[CKUIBehavior conversationListCellRightMargin]
  -[CKUIBehavior conversationListContactImageTrailingSpace]
  -[CKUIBehavior maximumNumberOfPinnedConversations]
  -[CKUIBehavior browserSwitcherExpandedGrabberHeaderHeight]
  -[CKUIBehavior browserSwitcherExpandThreshold]
  -[CKUIBehavior browserSwitcherEdgeGestureWidth]
  -[CKUIBehavior browserSwitcherScrollerHeight]
  -[CKUIBehavior conversationListLayoutPinnedSectionNumberOfColumns]
  -[CKUIBehavior entryViewAppButtonName]
  -[CKUIBehavior transcriptReplyPreviewContextContactImageDiameter]
  -[CKUIBehavior pluginBalloonInsetsForMessageFromMe:]
  -[CKUIBehavior dragPinchGestureScaleFactor]
  -[CKUIBehavior dragBalloonHeightReducedAttractorThreshold]
  -[CKUIBehavior dragEdgeLayoutIntentPadding]
  -[CKUIBehavior appIconSize]
  -[CKUIBehavior breadcrumbTranscriptTextAttributes]
  -[CKUIBehavior shouldShowAvatarForWidth:]
  -[CKUIBehavior searchIndexingSubtitleFont]
  -[CKUIBehavior dragBalloonWidthIncreasedAttractorThreshold]
  -[CKUIBehavior stickerDetailsTitleFont]
  -[CKUIBehavior shouldPopoverSuggestionsBanner]
  -[CKUIBehavior businessInfoViewGreetingTextFont]
  -[CKUIBehavior attachmentBalloonAlignmentRectInsets]
  -[CKUIBehavior bigEmojiBalloonMaskAlignmentRectInsets]
  -[CKUIBehavior taillessBalloonMaskAlignmentRectInsets]
  -[CKUIBehavior replyBalloonMinHeight]
  -[CKUIBehavior conversationListCellUsesLargeTextLayout]
  -[CKUIBehavior conversationListCellLargeTextLeftMargin]
  -[CKUIBehavior conversationListCellLeftMargin]
  -[CKUIBehavior conversationListContactImageDiameter]
  -[CKUIBehavior transcriptCustomStatusImageDefaultSize]
  -[CKUIBehavior noAvatarTitleFont]
  -[CKUIBehavior conversationListMinimumWidthForHiddenContactImage]
  -[CKUIBehavior transcriptCustomStatusImagePadding]
  -[CKUIBehavior businessInfoViewDescriptionTextFont]
  -[CKUIBehavior businessInfoViewTitleLabelFont]
  -[CKUIBehavior businessDescriptionVCTextViewFont]
  -[CKUIBehavior businessBrandingAnimationDuration]
  -[CKUIBehavior businessBrandingBannerInset]
  -[CKUIBehavior callButtonImageInsets]
  -[CKUIBehavior callButtonLongPressDuration]
  -[CKUIBehavior searchSectionInsets]
  -[CKUIBehavior searchSectionMarginInsets]
  -[CKUIBehavior dndActionImage]
  -[CKUIBehavior previewMaxWidth]
  -[CKUIBehavior mapPreviewMaxWidth]
  -[CKUIBehavior searchLeadingAndTrailingMaxPadding]
  -[CKUIBehavior searchSectionTitleVertPadding]
  -[CKUIBehavior searchConversationMinAvatarLabelSpacing]
  -[CKUIBehavior searchPhotosThumbnailWidth]
  -[CKUIBehavior taillessAttachmentBalloonAlignmentRectInsets]
  -[CKUIBehavior replyBalloonMaximumNumberOfLines]
  -[CKUIBehavior green_chevronImage]
  -[CKUIBehavior blue_chevronImage]
  -[CKUIBehavior siri_chevronImage]
  -[CKUIBehavior searchPhotosCellCornerRadius]
  -[CKUIBehavior searchPhotosCellZKWAndDetailsCornerRadius]
  -[CKUIBehavior searchLinksThumbnailWidth]
  -[CKUIBehavior searchLinksCellCornerRadius]
  -[CKUIBehavior searchAttachmentsInterItemSpacing]
  -[CKUIBehavior searchAttachmentsCellCornerRadius]
  -[CKUIBehavior searchLocationCellCornerRadius]
  -[CKUIBehavior searchHighlightsInterItemSpacing]
  -[CKUIBehavior searchResultLabelFont]
  -[CKUIBehavior searchResultLabelBoldFont]
  -[CKUIBehavior unDNDActionImage]
  -[CKUIBehavior tuConversationBalloonScreenSharingImageViewSize]
  -[CKUIBehavior messageReplyImage]
  -[CKUIBehavior tuConversationBalloonActivityImageViewSize]
  -[CKUIBehavior waveformMaxWidth]
  -[CKUIBehavior toFieldYOffset]
  -[CKUIBehavior messageHighlightButtonGlyphPointSize]
  -[CKUIBehavior searchDetailsSubHeaderFont]
  -[CKUIBehavior locationOfferMapThumbnailFillSizeForWidth:]
  -[CKUIBehavior locationShareBalloonButtonHeight]
  -[CKUIBehavior largeTranscriptSpace]
  -[CKUIBehavior canShowContactPhotosInConversationList]
  -[CKUIBehavior smallTranscriptSpace]
  -[CKUIBehavior balloonSelectionScrollThresholdTop]
  -[CKUIBehavior balloonSelectionScrollThresholdBottom]
  -[CKUIBehavior balloonSelectionLoadMoreSpinnerHeight]
  -[CKUIBehavior timestampsPushBalloons]
  -[CKUIBehavior thumbnailContentAlignmentInsetsForOrientation:]
  -[CKUIBehavior useMacToolbar]
  -[CKUIBehavior red_chevronImage]
  -[CKUIBehavior white_chevronImage]
  -[CKUIBehavior black_chevronImage]
  -[CKUIBehavior business_chevronImage]
  -[CKUIBehavior multiway_chevronImage]
  -[CKUIBehavior background_chevronImage]
  -[CKUIBehavior grayHaAckImage]
  -[CKUIBehavior extraLargeTranscriptSpace]
  -[CKUIBehavior mediumTranscriptSpace]
  -[CKUIBehavior locationShareBalloonLabelMaxHeightForOfferState:]
  -[CKUIBehavior locationValidInterval]
  -[CKUIBehavior locationShareOneHourTimeInterval]
  -[CKUIBehavior locationShareEODHour]
  -[CKUIBehavior topTranscriptSpace]
  -[CKUIBehavior reply_gray_chevronImage]
  -[CKUIBehavior reply_blue_chevronImage]
  -[CKUIBehavior systemGrayChevronImage]
  -[CKUIBehavior whiteChevronImage]
  -[CKUIBehavior multiwayGrayChevronImage]
  -[CKUIBehavior taillessBallonName]
  -[CKUIBehavior shouldSuppressRotationInNewCompose]
  -[CKUIBehavior leftStatusTranscriptTextAttributes]
  -[CKUIBehavior rightStatusTranscriptTextAttributes]
  -[CKUIBehavior toFieldPreferredHeight]
  -[CKUIBehavior balloonSubjectFont]
  -[CKUIBehavior multilineTaillessBalloonName]
  -[CKUIBehavior impactBalloonName]
  -[CKUIBehavior multilineBalloonName]
  -[CKUIBehavior skinnyTaillessBalloonName]
  -[CKUIBehavior impactSkinnyBalloonName]
  -[CKUIBehavior skinnyBalloonName]
  -[CKUIBehavior roundBalloonName]
  -[CKUIBehavior replyMultilineBalloonName]
  -[CKUIBehavior replyBalloonName]
  -[CKUIBehavior replySkinnyBalloonName]
  -[CKUIBehavior replyDeleteBalloonName]
  -[CKUIBehavior strokedTaillessBalloonName]
  -[CKUIBehavior balloonSelectionMaxScrollSpeed]
  -[CKUIBehavior trashImage]
  -[CKUIBehavior navbarToLabelFont]
  -[CKUIBehavior canAccessContacts]
  -[CKUIBehavior toFieldScrollViewInsets]
  -[CKUIBehavior multilineStrokedTaillessBalloonName]
  -[CKUIBehavior strokedBalloonName]
  -[CKUIBehavior multilineStrokedBalloonName]
  -[CKUIBehavior replyStrokedBalloonName]
  -[CKUIBehavior replyStrokedSkinnyBalloonName]
  -[CKUIBehavior conversationListScrollingPaddingRowCount]
  -[CKUIBehavior conversationListScrollingBatchSize]
  -[CKUIBehavior replyStrokedMultilineBalloonName]
  -[CKUIBehavior imageNameForBalloonDescriptorWithFilledStyle:]
  -[CKUIBehavior imageNameForBalloonDescriptorWithStrokedStyle:]
  -[CKUIBehavior windowClass]
  -[CKUIBehavior mapThumbnailFillSizeForWidth:]
  -[CKUIBehavior locationShareBalloonAdditionalVertPadding]
  -[CKUIBehavior waveformMinPowerLevelsCount]
  -[CKUIBehavior photoPickerSectionInsets]
  -[CKUIBehavior showMMSSetup]
  -[CKUIBehavior photoPickerMaxPhotoWidthForAlertWidth:]
  -[CKUIBehavior detailsAvatarWidth]
  -[CKUIBehavior detailsAvatarHeight]
  -[CKUIBehavior grayHeartAckImage]
  -[CKUIBehavior grayThumbsUpAckImage]
  -[CKUIBehavior grayA1AckImage]
  -[CKUIBehavior presentsAutocompleteInAPopover]
  -[CKUIBehavior imageBalloonSelectionOverlayColor]
  -[CKUIBehavior grayThumbsDownAckImage]
  -[CKUIBehavior grayExclamationLeftAckImage]
  -[CKUIBehavior grayExclamationRightAckImage]
  -[CKUIBehavior grayQuestionMarkGlyphAckImage]
  -[CKUIBehavior grayQuestionMarkDotAckImage]
  -[CKUIBehavior toFieldInterItemSpacing]
  -[CKUIBehavior raiseToTalkErrorMaxDuration]
  -[CKUIBehavior raiseToTalkAutoSendMaxDuration]
  -[CKUIBehavior transcriptMessageStatusDateFont]
  -[CKUIBehavior hawkingWarningIconRed]
  -[CKUIBehavior areBannersSupported]
  -[CKUIBehavior grayH2AckImage]
  -[CKUIBehavior grayA2AckImage]
  -[CKUIBehavior redHeartAckImage]
  -[CKUIBehavior whiteThumbsUpAckImage]
  -[CKUIBehavior whiteThumbsDownAckImage]
  -[CKUIBehavior whiteExclamationRightAckImage]
  -[CKUIBehavior usesEntryView]
  -[CKUIBehavior balloonLineFragmentPadding]
  -[CKUIBehavior whiteExclamationLeftAckImage]
  -[CKUIBehavior whiteQuestionMarkGlyphAckImage]
  -[CKUIBehavior whiteQuestionMarkDotAckImage]
  -[CKUIBehavior whiteHaAckImage]
  -[CKUIBehavior whiteH1AckImage]
  -[CKUIBehavior whiteH2AckImage]
  -[CKUIBehavior isSendButtonEnabledOnPlatform]
  -[CKUIBehavior nameFieldFont]
  -[CKUIBehavior timestampDateFormatter]
  -[CKUIBehavior whiteA1AckImage]
  -[CKUIBehavior whiteA2AckImage]
  -[CKUIBehavior avatarStackTitleFont]
  -[CKUIBehavior navBarHeaderChevronImageNoAvatar]
  -[CKUIBehavior navBarHeaderChevronImageDefault]
  -[CKUIBehavior navBarGlyphFont]
  -[CKUIBehavior sendAnimationDuration]
  -[CKUIBehavior iCloudTextFont]
  -[CKUIBehavior replyBalloonTextFont]
  -[CKUIBehavior setHUDStyle:]
  -[CKUIBehavior avatarSize]
  -[CKUIBehavior messageHighlightGlyphColor]
  -[CKUIBehavior imageNamed:pointSize:insets:color:]
  -[CKUIBehavior messageHighlightButtonGlyphSymbolPointSize]
  -[CKUIBehavior browserSwitcherCollapsedGrabberHeaderHeight]
  -[CKUIBehavior muteOneHourTimeInterval]
  -[CKUIBehavior muteEightHourTimeInterval]
  -[CKUIBehavior usesUncollapsedSplitview]
  -[CKUIBehavior resetsIdleTimer]
  -[CKUIBehavior lowClearanceInLandscape]
  -[CKUIBehavior presentsQuickLookController]
  -[CKUIBehavior canUseWindowedSendAnimation]
  -[CKUIBehavior shouldGrabBackgroundAssertion]
  -[CKUIBehavior automaticallyShowsKeyboard]
  -[CKUIBehavior promptsForReadReceiptsSetting]
  -[CKUIBehavior showsCompositionPanel]
  -[CKUIBehavior recordsRecentContact]
  -[CKUIBehavior presentForwardingUIModally]
  -[CKUIBehavior joystickUsesWindow]
  -[CKUIBehavior navBarInfoImage]
  -[CKUIBehavior usesNavigationBarControls]
  -[CKUIBehavior shouldOnlyResumeToConversationListAfterTimeout]
  -[CKUIBehavior resumeToConversationListTimeInterval]
  -[CKUIBehavior navigationBarMinHeight]
  -[CKUIBehavior shouldShowSearchBarInConversationList]
  -[CKUIBehavior showsNoMessagesDialog]
  -[CKUIBehavior replyTranscriptBackgroundBlurAnimationTime]
  -[CKUIBehavior leftTranscriptButtonTextAttributes]
  -[CKUIBehavior rightTranscriptButtonTextAttributes]
  -[CKUIBehavior statusSaveButtonTranscriptText]
  -[CKUIBehavior HUDStyle]
  -[CKUIBehavior navigationBarTitleViewHeightWithContactPhoto]
  -[CKUIBehavior navigationBarBackButtonMargin]
  -[CKUIBehavior navigationBarLeftItemVerticalCenterOffset]
  -[CKUIBehavior enabledExpanseImage]
  -[CKUIBehavior navigationBarHeaderButtonVerticalOffset]
  -[CKUIBehavior transcriptHeaderChevronRotationAnimationSpeed]
  -[CKUIBehavior maxNavigationBarNoContactPhotoCollapsedHeightValue]
  -[CKUIBehavior maxNavigationBarNoContactPhotoExpandedHeightValue]
  -[CKUIBehavior disabledNavigationButtonWidth]
  -[CKUIBehavior disabledNavigationButtonStrokeWidth]
  -[CKUIBehavior conversationCacheSize]
  -[CKUIBehavior disabledNavigationButtonStrokeColor]
  -[CKUIBehavior navBarButtonSymbolImageFontSize]
  -[CKUIBehavior enabledFacetimeAudioImage]
  -[CKUIBehavior enabledFacetimeAudioImagePill]
  -[CKUIBehavior dividerHeight]
  -[CKUIBehavior downloadButtonFont]
  -[CKUIBehavior toFieldXOffset]
  -[CKUIBehavior conversationListTableMarginWidth]
  -[CKUIBehavior enabledFacetimeVideoImage]
  -[CKUIBehavior enabledFacetimeVideoImagePill]
  -[CKUIBehavior enabledExpanseImagePill]
  -[CKUIBehavior navBarExpanseImageName]
  -[CKUIBehavior navbarJoinPillVideoImage]
  -[CKUIBehavior transcriptAvailabilityDeemphasizedFontAttributes]
  -[CKUIBehavior transcriptMessageStatusFont]
  -[CKUIBehavior statusCommSafetySensitiveReceiveMultiButtonTranscriptText]
  -[CKUIBehavior navbarJoinPillAudioImage]
  -[CKUIBehavior disabledFacetimeAudioImage]
  -[CKUIBehavior disabledFacetimeVideoImage]
  -[CKUIBehavior navigationBarCollapsedHeightValue]
  -[CKUIBehavior phoneIsAllowlisted]
  -[CKUIBehavior statusCommSafetyMayBeSensitiveViewPhotosButtonTranscriptTextUnderThirteen]
  -[CKUIBehavior statusSaveButtonTranscriptTextSize]
  -[CKUIBehavior navigationBarExpandedHeightValue]
  -[CKUIBehavior transcriptHeaderViewMaxRows]
  -[CKUIBehavior messageCountToLoadForPinnedGroupConversationWithPhoto]
  -[CKUIBehavior canAccessPhotos]
  -[CKUIBehavior shouldSizeInitialViewingMessageCount]
  -[CKUIBehavior defaultConversationSummaryMessageCount]
  -[CKUIBehavior initialConversationSizingMessageCount]
  -[CKUIBehavior actionMenuWindowLevel]
  -[CKUIBehavior verticalBalloonBadgeInset]
  -[CKUIBehavior horizontalBalloonBadgeInset]
  -[CKUIBehavior presentationControllerWindowLevel]
  -[CKUIBehavior faceTimeVideoIsAllowlisted]
  -[CKUIBehavior faceTimeAudioIsAllowlisted]
  -[CKUIBehavior mailIsAllowlisted]
  -[CKUIBehavior cameraIsAllowlisted]
  -[CKUIBehavior photosIsAllowlisted]
  -[CKUIBehavior maxNumLiveBrowserViewsToKeepInViewHierarchy]
  -[CKUIBehavior maxNumberOfItemsPerAppDrawerPage]
  -[CKUIBehavior summaryDateConversationListSpace]
  -[CKUIBehavior stackBalloonVerticalInset]
  -[CKUIBehavior showsBalloonBadges]
  -[CKUIBehavior photoPickerDisabledBadge]
  -[CKUIBehavior conversationListCellBackgroundPadding]
  -[CKUIBehavior conversationListPinnedCellSelectedBackgroundCornerRadius]
  -[CKUIBehavior conversationListCellTypingIndicatorScale]
  -[CKUIBehavior shouldAutomaticallyCheckAvailabilityOfAlternateAddresses]
  -[CKUIBehavior navbarDefaultLabelFont]
  -[CKUIBehavior conversationListMuteIndicatorImage]
  -[CKUIBehavior setupNavBarAppearanceWithNavigationController:]
  -[CKUIBehavior filterCellTitleFont]
  -[CKUIBehavior readDNDImage]
  -[CKUIBehavior conversationListControllerClass]
  -[CKUIBehavior conversationListNavigationControllerClass]
  -[CKUIBehavior suppressPinActivityForState:]
  -[CKUIBehavior hidesUnreadIndicatorWhenEditing]
  -[CKUIBehavior shouldRefreshAlternateAddressesSheet]
  -[CKUIBehavior conversationListCellHighlightViewToUnreadIndicatorPadding]
  -[CKUIBehavior pinnedConversationViewTitleLabelToEdgePaddingWhenNoUnreadIndicator]
  -[CKUIBehavior detailsImage]
  -[CKUIBehavior statusCommSafetyMayBeSensitiveViewPhotosButtonTranscriptTextOverThirteen]
  -[CKUIBehavior alwaysShowSelectionInConversationList]
  -[CKUIBehavior converastionListAlwaysSupportsLargeTitles]
  -[CKUIBehavior conversationListAlwaysShowsSearchBar]
  -[CKUIBehavior quickSaveButtonImage]
  -[CKUIBehavior conversationListSearchBarSkipExtraAlignment]
  -[CKUIBehavior selectNewConversationOnStateRestore]
  -[CKUIBehavior supportsConversationListEditing]
  -[CKUIBehavior minConversationListWidth]
  -[CKUIBehavior messageAcknowledgmentImageNameForType:]
  -[CKUIBehavior messageAcknowledgmentPickerBarAcknowledgmentOrder]
  -[CKUIBehavior replySenderTranscriptInsets]
  -[CKUIBehavior senderTranscriptTextAttributes]
  -[CKUIBehavior supportsOrbPreviewsInConversationList]
  -[CKUIBehavior maxConversationListWidth]
  -[CKUIBehavior conversationListCellRoundSelectorLeftInset]
  -[CKUIBehavior conversationListGroupSenderFont]
  -[CKUIBehavior unavailabilityIndicatorDeemphasizedIcon]
  -[CKUIBehavior transcriptAvailabilityFontAttributes]
  -[CKUIBehavior unavailabilityIndicatorIcon]
  -[CKUIBehavior conversationListCellRoundSelectorRightInset]
  -[CKUIBehavior conversationListMultipleContactsImageDiameter]
  -[CKUIBehavior conversationListGroupCountFont]
  -[CKUIBehavior unreadDNDImage]
  -[CKUIBehavior conversationListTableViewClass]
  -[CKUIBehavior isSizeConstrained]
  -[CKUIBehavior messageHighlightGoldColor]
  -[CKUIBehavior messageHighlightImage]
  -[CKUIBehavior messageHighlightTranscriptBalloonBorderWidth]
  -[CKUIBehavior messageHighlightGlyphSymbolPointSize]
  -[CKUIBehavior conversationListMuteIndicatorToSummaryLabelPadding]
  -[CKUIBehavior conversationListPinnedConversationNameFont]
  -[CKUIBehavior messageAcknowledgmentPickerBarBubbleImage]
  -[CKUIBehavior minNavigationBarHeightValue]
  -[CKUIBehavior statusCommSafetyMayBeSensitiveViewPhotoButtonTranscriptTextUnderThirteen]
  -[CKUIBehavior shouldSuppressDynamicsOnKeyboardPresentation]
  -[CKUIBehavior conversationListPinnedConversationPreviewFontSizeOverrideStandard]
  -[CKUIBehavior conversationListPinnedConversationPreviewFontSizeOverrideLarge]
  -[CKUIBehavior showsHoverToDeleteButtonForNewCompose]
  -[CKUIBehavior transcriptLoadingIndicatorStyle]
  -[CKUIBehavior contactBalloonViewClass]
  -[CKUIBehavior nicknameUpdatesTitleFont]
  -[CKUIBehavior maxNavigationBarHeightValue]
  -[CKUIBehavior conversationListLargeTitleStandardFont]
  -[CKUIBehavior shouldLoadInitialViewingMessageCount]
  -[CKUIBehavior transcriptMinBottomInsetIsEntryViewHeight]
  -[CKUIBehavior conversationListLargeTitleReducedFont]
  -[CKUIBehavior conversationListButtonToTitleSpacing]
  -[CKUIBehavior statusCommSafetySensitiveReceiveButtonTranscriptText]
  -[CKUIBehavior statusCommSafetyMayBeSensitiveViewPhotoButtonTranscriptTextOverThirteen]
  -[CKUIBehavior useSingleLineForContactVCardNames]
  -[CKUIBehavior contactImageSize]
  -[CKUIBehavior statusCommSafetyMayBeSensitiveMessageSomeoneButtonTranscriptTextUnderThirteen]
  -[CKUIBehavior statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen]
  -[CKUIBehavior searchHeaderHeight]
  -[CKUIBehavior pinnedConversationActivityBroadShadowLightRadius]
  -[CKUIBehavior pinnedConversationActivityBroadShadowDarkRadius]
  -[CKUIBehavior nicknameDescriptionFont]
  -[CKUIBehavior replyButtonFont]
  -[CKUIBehavior pinnedConversationActivityTightShadowLightRadius]
  -[CKUIBehavior pinnedConversationActivityTightShadowDarkRadius]
  -[CKUIBehavior pinningOnboardingSubtitleLabelFont]
  -[CKUIBehavior pinnedConversationActivityBroadShadowLightOpacity]
  -[CKUIBehavior pinnedConversationActivityBroadShadowDarkOpacity]
  -[CKUIBehavior unreadIndicatorImageViewSize]
  -[CKUIBehavior chevronImage]
  -[CKUIBehavior pinnedConversationActivityTightShadowLightOpacity]
  -[CKUIBehavior pinnedConversationActivityTightShadowDarkOpacity]
  -[CKUIBehavior nicknameLabelFont]
  -[CKUIBehavior chatControllerClass]
  -[CKUIBehavior defaultConversationViewingMessageCount]
  -[CKUIBehavior pinnedConversationActivityBroadShadowLightOffset]
  -[CKUIBehavior pinnedConversationActivityBroadShadowDarkOffset]
  -[CKUIBehavior transcriptCollectionViewControllerClass]
  -[CKUIBehavior statusCommSafetyMayBeSensitiveMessageSomeoneButtonTranscriptTextOverThirteen]
  -[CKUIBehavior transcriptButtonContentEdgeInsets]
  -[CKUIBehavior pinnedConversationActivityTightShadowLightOffset]
  -[CKUIBehavior pinnedConversationActivityTightShadowDarkOffset]
  -[CKUIBehavior businessChatControllerClass]
  -[CKUIBehavior pinnedAdHocConversationRadiantShadowImage]
  -[CKUIBehavior shouldBackfillTranscript]
  -[CKUIBehavior shouldUseSendAnimation]
  -[CKUIBehavior showsProgressInNavigationBar]
  -[CKUIBehavior minTranscriptSpace]
  -[CKUIBehavior sendProgressTitleTransitionProgressThreshold]
  -[CKUIBehavior shouldHideStatusBarForFullScreenEffects]
  -[CKUIBehavior progressThresholdForTitleUpdateAnimation]
  -[CKUIBehavior initialConversationViewingMessageCount]
  -[CKUIBehavior navigationBarClass]
  -[CKUIBehavior waveformHeight]
  -[CKUIBehavior statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen]
  -[CKUIBehavior fadeInBubbleAnimationDuration]
  -[CKUIBehavior scrollInNewMessageAnimationDuration]
  -[CKUIBehavior throwMessageAnimationDuration]
  -[CKUIBehavior editingTransitionAnimationDuration]
  -[CKUIBehavior waveformMaxWidthDuration]
  -[CKUIBehavior updateTranscriptInsetsAnimationDuration]
  -[CKUIBehavior supportsTypingIndicatorAnimation]
  -[CKUIBehavior shouldShowContactPhotosInTranscript]
  -[CKUIBehavior shouldUseDynamicScrolling]
  -[CKUIBehavior chatMagnifiedChromeBottomInset]
  -[CKUIBehavior cameraAppsMinimizedDockHeight]
  -[CKUIBehavior shouldInsetForStatusBar]
  -[CKUIBehavior usesDataDetectorsUI]
  -[CKUIBehavior transcriptCanUseOpaqueMask]
  -[CKUIBehavior scrollToBottomStopsAtTopOfLastBubble]
  -[CKUIBehavior emojiPreviewMaxWidth]
  -[CKUIBehavior transcriptWaveformWidthForDuration:]
  -[CKUIBehavior defaultWaveformImage]
  -[CKUIBehavior nicknameUpdatesSubtitleFont]
  -[CKUIBehavior conversationListEditingTableMarginWidth]
  -[CKUIBehavior selectNewConversationOnDeletion]
  -[CKUIBehavior aggregateAcknowledgmentTopName:]
  -[CKUIBehavior aggregateAcknowledgmentMiddleName:]
  -[CKUIBehavior playButtonImage]
  -[CKUIBehavior waveformGapWidth]
  -[CKUIBehavior waveformMinLinearPowerLevel]
  -[CKUIBehavior waveformMaxPowerLevelsCount]
  -[CKUIBehavior transcriptDrawerContactImageDiameter]
  -[CKUIBehavior transcriptDrawerContactImagePadding]
  -[CKUIBehavior transcriptCustomStatusImageEdgeInsets]
  -[CKUIBehavior transcriptButtonCharge]
  -[CKUIBehavior senderTranscriptInsets]
  -[CKUIBehavior replyLineViewHorizontalPadding]
  -[CKUIBehavior transcriptDrawerGestureAcceleration]
  -[CKUIBehavior invalidateTranscriptDrawerWidth]
  -[CKUIBehavior browserCellFont]
  -[CKUIBehavior syncProgressLabelFont]
  -[CKUIBehavior includeKeyboardInEntryViewHeight]
  -[CKUIBehavior transcriptDrawerMaxContentOffsetXForMarginInsets:]
  -[CKUIBehavior checkmarkHorizontalPadding]
  -[CKUIBehavior system_checkmarkHorizontalPadding]
  -[CKUIBehavior xsTranscriptSpace]
  -[CKUIBehavior transcriptBoldFont]
  -[CKUIBehavior textBalloonMinHeight]
  -[CKUIBehavior replyPreviewBalloonMinWidth]
  -[CKUIBehavior transcriptRegularFontAttributes]
  -[CKUIBehavior unavailabilityIndicatorBottomTranscriptSpace]
  -[CKUIBehavior notifyAnywayBottomTranscriptSpace]
  -[CKUIBehavior replyPreviewImageDiameter]
  -[CKUIBehavior transcriptJunkHeaderButtonHeight]
  -[CKUIBehavior messageAcknowledgmentTranscriptBalloonSize]
  -[CKUIBehavior messageAcknowledgmentTranscriptGlyphInset]
  -[CKUIBehavior aggregateAcknowledgmentStackName3:]
  -[CKUIBehavior aggregateAcknowledgmentStackBackgroundName3:]
  -[CKUIBehavior aggregateAcknowledgmentStackBackgroundName2:]
  -[CKUIBehavior aggregateAcknowledgmentStackName2:]
  -[CKUIBehavior transcriptScrollToBottomThreshold]
  -[CKUIBehavior transcriptScrollToBottomDuration]
  -[CKUIBehavior tuConversationBalloonScreenShareDeviceIconSize]
  -[CKUIBehavior locationShareActionIcon]
  -[CKUIBehavior resizeMessageEntryViewAnimationDuration]
  -[CKUIBehavior tuConversationBalloonInsetPadding]
  -[CKUIBehavior tuConversationBalloonButtonTitleHorizontalSpacing]
  -[CKUIBehavior tuConversationBalloonButtonTitleVerticalSpacing]
  -[CKUIBehavior waveformPowerLevelWidth]
  -[CKUIBehavior dragTranscriptScrollThreshold]
  -[CKUIBehavior tuConversationBalloonScreenShareImageViewDimensions]
  -[CKUIBehavior tuConversationBalloonFaceTimeIconDimensions]
  -[CKUIBehavior tuConversationBalloonAvatarDimensions]
  -[CKUIBehavior bigEmojiAlignmentRectInsets]
  -[CKUIBehavior attachmentReplyPreviewBalloonAlignmentRectInsets]
  -[CKUIBehavior tuConversationBalloonCornerRadius]
  -[CKUIBehavior tuConversationBalloonJoinButtonMaxWidthPercentage]
  -[CKUIBehavior tuConversationInsetPadding]
  -[CKUIBehavior transcriptBodyBoldTextFont]
  -[CKUIBehavior aggregateAcknowledgmentTopBackgroundName:]
  -[CKUIBehavior replyTranscriptUpdateBannerAnimateInTime]
  -[CKUIBehavior textAlignmentRectInsetsScaleFactor]
  -[CKUIBehavior replyPreviewLocationIconName]
  -[CKUIBehavior thumbnailFillSizeForWidth:imageSize:]
  -[CKUIBehavior unreadImage]
  -[CKUIBehavior tuConversationInteritemSpacing]
  -[CKUIBehavior tuConversationIconPointSize]
  -[CKUIBehavior tuConversationButtonInteritemSpacing]
  -[CKUIBehavior tuConversationButtonTitleVerticalSpacing]
  -[CKUIBehavior replyTranscriptUpdateBannerAnimateOutTime]
  -[CKUIBehavior balloonMaskSizeWithTailShape:isMultiline:]
  -[CKUIBehavior dragTranscriptScrollDisplayLinkMaxDelta]
  -[CKUIBehavior searchLinksInterItemSpacing]
  -[CKUIBehavior tuConversationButtonTitleHorizontalSpacing]
  -[CKUIBehavior tuConversationViewActionButtonFont]
  -[CKUIBehavior transcriptLoadingViewTextFont]
  -[CKUIBehavior phishingWarningTextAttributes]
  -[CKUIBehavior transcriptTextFontLanguageAwareOutsets]
  -[CKUIBehavior replySenderTranscriptTextAttributes]
  -[CKUIBehavior nickNameTranscriptTextAttributes]
  -[CKUIBehavior phishingWarningEdgeInsets]
  -[CKUIBehavior unreadIndicatorMutedImage]
  -[CKUIBehavior transcriptNotifyAnywayFontAttributes]
  -[CKUIBehavior drawerTranscriptTextAttributes]
  -[CKUIBehavior transcriptJunkHeaderTitleFont]
  -[CKUIBehavior transcriptJunkHeaderButtonFont]
  -[CKUIBehavior hawkingWarningIcon]
  -[CKUIBehavior facetimeAudioIcon]
  -[CKUIBehavior replyTranscriptBackgroundBlurRadius]
  -[CKUIBehavior replyButtonBackgroundBlurRadius]
  -[CKUIBehavior replyButtonRelativePosition]
  -[CKUIBehavior isAccessibilityPreferredContentSizeCategory]
  -[CKUIBehavior replyPreviewContactIconName]
  -[CKUIBehavior replyPreviewDocumentIconName]
  -[CKUIBehavior stickerScreenScale]
  -[CKUIBehavior playButtonArrowImage]
  -[CKUIBehavior playButtonPunchesOutArrow]
  -[CKUIBehavior playButtonBackdropStyle]
  -[CKUIBehavior minimumPlayButtonInsets]
  -[CKUIBehavior genericDocumentIcon]
  -[CKUIBehavior disableTranscriptOrb]
  -[CKUIBehavior stickerDetailsSenderFont]
  -[CKUIBehavior largeTextTopConversationListSpace]
  -[CKUIBehavior accessibilityBottomConversationListSpace]
  -[CKUIBehavior messageAcknowledgmentPickerBarAcknowledgmentImageSize]
  -[CKUIBehavior attachmentBrowserFeedLayoutSectionInset]
  -[CKUIBehavior replyButtonHorizontalOriginOffsetPercent]
  -[CKUIBehavior replyButtonVerticalOriginOffsetPercent]
  -[CKUIBehavior replyButtonAnimationDuration]
  -[CKUIBehavior replyButtonBorderWidth]
  -[CKUIBehavior replyButtonTouchScale]
  -[CKUIBehavior replyButtonTouchAlpha]
  -[CKUIBehavior replyButtonPadding]
  -[CKUIBehavior replyButtonEdgeInsets]
  -[CKUIBehavior shouldUseDynamicGradient]
  -[CKUIBehavior opensLocationsInMapsApp]
  -[CKUIBehavior detailsViewContactImageDiameter]
  -[CKUIBehavior tuConversationBalloonTitleFont]
  -[CKUIBehavior tuConversationBalloonSubtitleFont]
  -[CKUIBehavior tuConversationBalloonActionButtonFont]
  -[CKUIBehavior showsBalloonChevron]
  -[CKUIBehavior balloonMaskTailSizeForTailShape:]
  -[CKUIBehavior tuConversationBalloonImageDimensions]
  -[CKUIBehavior commonRepliesLoadLimit]
  -[CKUIBehavior previewTitleBarHeight]
  -[CKUIBehavior handlesBalloonViewTitleTapsSeparately]
  -[CKUIBehavior isThreeColumnLayoutEnabled]
  -[CKUIBehavior shouldAdjustWidthForSendFailure]
  -[CKUIBehavior showsPlaceCardForBalloonViewTitleTap]
  -[CKUIBehavior canPluginBalloonsUseOpaqueMask]
  -[CKUIBehavior maxNumExtensionRemoteViewControllers]
  -[CKUIBehavior tuConversationBalloonEdgeInsets]
  -[CKUIBehavior tuConversationBalloonTwoLineVerticalPadding]
  -[CKUIBehavior skinnyBalloonWidthDifference]
  -[CKUIBehavior extensionIconBadgeRectForOrientation:]
  -[CKUIBehavior extensionBalloonContentInsetsForOrientation:]
  -[CKUIBehavior balloonTextContainerInset]
  -[CKUIBehavior tuConversationBalloonInteritemSpacing]
  -[CKUIBehavior tuConversationBalloonActionButtonFontStyle]
  -[CKUIBehavior tuConversationBalloonJoinButtonMinWidth]
  -[CKUIBehavior tuConversationBalloonJoinButtonHeight]
  -[CKUIBehavior tuConversationBalloonButtonInteritemSpacing]
  -[CKUIBehavior acceptableUTIs]
  -[CKUIBehavior showPendingInConversationList]
  -[CKUIBehavior mentionsCellNameFont]
  -[CKUIBehavior extensionBalloonMaximumHeight]
  -[CKUIBehavior extraTallExtensionBalloonMaximumHeight]
  -[CKUIBehavior balloonMaskSizeWithBalloonDescriptor:]
  -[CKUIBehavior audioReplyPreviewBalloonInset]
  -[CKUIBehavior stickerSizeScaledWithInitialSize:imageScale:userScale:rectifiedScreenScale:maxWidth:]
  -[CKUIBehavior attachmentViewClass]
  -[CKUIBehavior textReplyPreviewBalloonMinHeight]
  -[CKUIBehavior textReplyPreviewBalloonAlignmentRectInsets]
  -[CKUIBehavior audioReplyPreviewBalloonAlignmentInsets]
  -[CKUIBehavior audioProgressViewSize]
  -[CKUIBehavior maxTranscriptPortraitHeight]
  -[CKUIBehavior playsInlineVideo]
  -[CKUIBehavior stickerDetailsStickerPackFont]
  -[CKUIBehavior stickerDetailsTimestampFont]
  -[CKUIBehavior attachmentBalloonFillColor]
  -[CKUIBehavior attachmentBalloonStrokeColor]
  -[CKUIBehavior shouldFillAndStrokeAttachmentBalloon]
  -[CKUIBehavior attachmentBalloonSize]
  -[CKUIBehavior tuConversationJoinButtonCornerRadius]
  -[CKUIBehavior tuConversationBalloonButtonTitleMaxStringWidth]
  -[CKUIBehavior tuConversationBalloonButtonAsIconSize]
  -[CKUIBehavior attachmentBalloonAlignmentRectInsetsWithTailShape:]
  -[CKUIBehavior tuConversationBalloonIconDimensions]
  -[CKUIBehavior balloonMaskTailWidth]
  -[CKUIBehavior replyBalloonTextContainerInset]
  -[CKUIBehavior audioBalloonTimeWidthForDuration:]
  -[CKUIBehavior audioBalloonProgressInset]
  -[CKUIBehavior audioBalloonAlignmentInsets]
  -[CKUIBehavior showsVCalViewer]
  -[CKUIBehavior nanoNoteSenderContentSpace]
  -[CKUIBehavior previewBalloonSizeThatFits:]
  -[CKUIBehavior balloonParagraphStyle]
  -[CKUIBehavior imageNameForBalloonDescriptor:]
  -[CKUIBehavior showsFileSizeInSubtitle]
  -[CKUIBehavior searchHeaderFont]
  -[CKUIBehavior searchHeaderButtonFont]
  -[CKUIBehavior paddleDividerInset]
  -[CKUIBehavior detailsSeperatorsFollowLayoutMargins]
  -[CKUIBehavior transcriptResortTimeout]
  -[CKUIBehavior locationShareBalloonMaxVisibleMapHeight]
  -[CKUIBehavior locationShareBalloonLabelPadding]
  -[CKUIBehavior locationShareBalloonButtonCharge]
  -[CKUIBehavior supportsPassbookAttachments]
  -[CKUIBehavior defaultAVPlayerViewContorllerControlsInsets]
  -[CKUIBehavior transcriptDrawerWidthForMarginInsets:]
  -[CKUIBehavior transcriptDrawerOverlapForMarginInsets:]
  -[CKUIBehavior calculatesWidthForAttachmentBalloons]
  -[CKUIBehavior quickSaveButtonImageInsets]
  -[CKUIBehavior documentIconSize]
  -[CKUIBehavior attachmentBalloonRichIconInsets]
  -[CKUIBehavior contactBalloonMinWidth]
  -[CKUIBehavior balloonBalloonTranscriptSpace:]
  -[CKUIBehavior contactBalloonInnerItemSpacing]
  -[CKUIBehavior contactBalloonHeight]
  -[CKUIBehavior contactBalloonTopNameSpacing]
  -[CKUIBehavior contactBalloonNameOrgSpacing]
  -[CKUIBehavior photoSheetVideoIconPadding]
  -[CKUIBehavior dragBalloonCornerRadius]
  -[CKUIBehavior dragBalloonTailCropWidth]
  -[CKUIBehavior contactBalloonOrgBottomSpacing]
  -[CKUIBehavior photoSheetProgressIndicatorSize]
  -[CKUIBehavior attachmentTextFont]
  -[CKUIBehavior contactAttachmentNameFont]
  -[CKUIBehavior contactAttachmentOrgFont]
  -[CKUIBehavior shouldDisableSendButtonClickInteraction]
  -[CKUIBehavior shouldShowDisclosureChevronInRecipientAtoms]
  -[CKUIBehavior showsLoadMoreItem]
  -[CKUIBehavior errorDocumentIcon]
  -[CKUIBehavior textDocumentIcon]
  -[CKUIBehavior muteButtonImage]
  -[CKUIBehavior unmuteButtonImage]
  -[CKUIBehavior shouldHomogenizeAtomsForPreferredService]
  -[CKUIBehavior minAudioRecordingDuration]
  -[CKUIBehavior topConversationListSpace]
  -[CKUIBehavior messageAcknowledgementVotingViewHeight]
  -[CKUIBehavior messageAcknowledgmentPickerBarSize]
  -[CKUIBehavior messageAcknowledgementVotingViewMinPadding]
  -[CKUIBehavior conversationListSenderFont]
  -[CKUIBehavior conversationListSummaryFont]
  -[CKUIBehavior senderSummaryConversationListSpace]
  -[CKUIBehavior audioBalloonCellClass]
  -[CKUIBehavior audioBalloonViewClass]
  -[CKUIBehavior headerFont]
  -[CKUIBehavior supportsContiguousAttachments]
  -[CKUIBehavior bottomConversationListSpace]
  -[CKUIBehavior conversationListDateFont]
  -[CKUIBehavior showsHoverToDeleteButton]
  -[CKUIBehavior audioHintFont]
  -[CKUIBehavior supportedInterfaceOrientations]
  -[CKUIBehavior contactPhotosEnabled]
  -[CKUIBehavior presentsFullscreenInViewService]
  -[CKUIBehavior maxAudioRecordingDuration]
  -[CKUIBehavior shouldDisableFocusRing]
  -[CKUIBehavior isMentionSuggestionViewInKeyboard]
  -[CKUIBehavior paddleOvelayRadius]
  -[CKUIBehavior conversationListCellSummaryNumberOfLines]
  -[CKUIBehavior showsConversationListCellChevronImage]
  -[CKUIBehavior entryFieldShouldUseNewPhotoUI]
  -[CKUIBehavior isBrowserButtonAlwaysHighlighted]
  -[CKUIBehavior entryViewMaxPluginShelfHeight]
  -[CKUIBehavior entryViewMaxExtensionShelfHeight]
  -[CKUIBehavior shouldUseTranslucentBars]
  -[CKUIBehavior forwardImage]
  -[CKUIBehavior searchDetailsHeaderFontIdentity]
  -[CKUIBehavior defaultConversationLoadMoreCount]
  -[CKUIBehavior entryViewMinPluginShelfHeight]
  -[CKUIBehavior entryViewLeftInsetForRecordedAudioCancelButton]
  -[CKUIBehavior entryViewSendButtonName]
  -[CKUIBehavior entryViewAudioButtonName]
  -[CKUIBehavior balloonMaskAlignmentRectInsetsWithTailShape:]
  -[CKUIBehavior balloonMaskFrameInsetsWithBalloonShape:]
  -[CKUIBehavior useSelectedAppearanceForConversationCellState:traitCollection:]
  -[CKUIBehavior enableBalloonTextSelection]
  -[CKUIBehavior searchDetailsHeaderFont]
  -[CKUIBehavior landscapeKeyboardInsets]
  -[CKUIBehavior detailsExpanseScreenShareCellHeight]
  -[CKUIBehavior entryViewArrowButtonName]
  -[CKUIBehavior entryViewPhotoButtonName]
  -[CKUIBehavior entryViewDictationButtonName]
  -[CKUIBehavior shouldAnimateGifsInPhotoGrid]
  -[CKUIBehavior photoPickerPopoverWidth]
  -[CKUIBehavior attachmentBrowserDefaultSizeForSquare]
  -[CKUIBehavior attachmentBrowserGridInterItemSpacing]
  -[CKUIBehavior attachmentBrowserGridMinimumLineSpacing]
  -[CKUIBehavior photoPickerOnBadge]
  -[CKUIBehavior browserButtonSize]
  -[CKUIBehavior detailsSectionCount]
  -[CKUIBehavior attachmentBrowserGridSectionInset]
  -[CKUIBehavior attachmentBrowserHeaderLabelPadding]
  -[CKUIBehavior numberOfButtonsInPhotoPicker]
  -[CKUIBehavior numberOfAssetsInPhotoPicker]
  -[CKUIBehavior showsReplyButtonsInTranscript]
  -[CKUIBehavior photoPickerInterItemSpacing]
  -[CKUIBehavior photoPickerOffBadge]
  -[CKUIBehavior photoPickerShouldZoomOnSelection]
  -[CKUIBehavior photoPickerUsesVitality]
  -[CKUIBehavior photoPickerMaxPopoverPhotoHeight]
  -[CKUIBehavior photoPickerMaxZoomedPhotoHeightForAlertWidth:]
  -[CKUIBehavior photoPickerMaxPhotoHeight]
  -[CKUIBehavior welcomeViewContentViewLeadingAnchorLayoutConstraintConstant]
  -[CKUIBehavior defaultBalloonTextFont]
  -[CKUIBehavior entryViewHorizontalCoverInsets]
  -[CKUIBehavior entryViewlayoutMetrics]
  -[CKUIBehavior entryViewVerticalCoverInsets]
  -[CKUIBehavior balloonTextFont]
  -[CKUIBehavior welcomeViewContentViewTopAnchorLayoutConstraintConstant]
  -[CKUIBehavior welcomeViewCancelButtonFont]
  -[CKUIBehavior welcomeViewConfirmButtonFont]
  -[CKUIBehavior detailsViewPhoneImage]
  -[CKUIBehavior welcomeViewTitleLabelFont]
  -[CKUIBehavior whatsNewViewBulletPointSymbolLeadingAnchorLayoutConstraintConstant]
  -[CKUIBehavior whatsNewViewBulletPointSymbolLabelFont]
  -[CKUIBehavior whatsNewViewBulletPointTextTrailingAnchorLayoutConstraintConstant]
  -[CKUIBehavior whatsNewViewBulletPointTextLabelFont]
  -[CKUIBehavior whatsNewViewDescriptionLabelFont]
  -[CKUIBehavior entryViewSendButtonCoverSpace]
  -[CKUIBehavior addContactFont]
  -[CKUIBehavior whatsNewFeatureViewTitleLabelFont]
  -[CKUIBehavior whatsNewFeatureViewDescriptionLabelFont]
  -[CKUIBehavior whatsNewViewApplePayImage]
  -[CKUIBehavior shouldAlignRecipientGlyphsWithMargins]
  -[CKUIBehavior sendButtonSize]
  -[CKUIBehavior contactPhotoTranscriptInsets]
  -[CKUIBehavior transcriptContactImageDiameter]
  -[CKUIBehavior contactPhotoBalloonMargin]
  -[CKUIBehavior detailsGroupHeaderCellTextVerticalPadding]
  -[CKUIBehavior detailsGroupHeaderCellInterTextVerticalSpacing]
  -[CKUIBehavior detailsContactCellButtonWidth]
  -[CKUIBehavior recipientNameFont]
  -[CKUIBehavior isEntryViewCollapsable]
  -[CKUIBehavior messageAcknowledgmentVoteCountFont]
  -[CKUIBehavior conversationListCellMaxSummaryLength]
  -[CKUIBehavior detailsContactCellButtonHeight]
  -[CKUIBehavior detailsContactCellButtonEdgeInsets]
  -[CKUIBehavior detailsAvatarPancakeViewWidth3Avatars]
  -[CKUIBehavior detailsAvatarCornerRadius]
  -[CKUIBehavior isProximityMonitoringSupported]
  -[CKUIBehavior detailsViewMapHeight]
  -[CKUIBehavior dictationButtonSize]
  -[CKUIBehavior entryViewDictationButtonCoverSpace]
  -[CKUIBehavior transcriptQuickSaveButtonDiameter]
  -[CKUIBehavior largeMessageAcknowledgmentPollingImageNameForAcknowledgmentType:]
  -[CKUIBehavior screenTimeConversationListSummaryIcon]
  -[CKUIBehavior conversationListFacetimeVideoIcon]
  -[CKUIBehavior conversationListFacetimeAudioIcon]
  -[CKUIBehavior detailsAvatarPancakeViewWidth2Avatars]
  -[CKUIBehavior detailsAvatarPancakeViewOverlapOffset]
  -[CKUIBehavior detailsAvatarCutoutDiameter]
  -[CKUIBehavior tuConversationJoinButtonHeight]
  -[CKUIBehavior detailsTUConversationCellButtonHeight]
  -[CKUIBehavior detailsTUConversationCellButtonMinWidth]
  -[CKUIBehavior detailsTUConversationDetailsSummaryImageDiameter]
  -[CKUIBehavior browserButtonShouldUseExternalMenu]
  -[CKUIBehavior usesActionMenu]
  -[CKUIBehavior conversationCellSummaryBoldIconTextAttributes]
  -[CKUIBehavior conversationCellSummaryPreviewTextAttributes]


CKUIBehaviorPhone : CKUIBehavior
  // instance methods
  -[CKUIBehaviorPhone welcomeViewContentViewLeadingAnchorLayoutConstraintConstant]
  -[CKUIBehaviorPhone welcomeViewContentViewTopAnchorLayoutConstraintConstant]
  -[CKUIBehaviorPhone whatsNewViewBulletPointSymbolLeadingAnchorLayoutConstraintConstant]
  -[CKUIBehaviorPhone whatsNewViewBulletPointTextTrailingAnchorLayoutConstraintConstant]
  -[CKUIBehaviorPhone whatsNewViewApplePayImage]


CKUIBehaviorPad : CKUIBehavior
  // instance methods
  -[CKUIBehaviorPad isAppStripInKeyboard]
  -[CKUIBehaviorPad primaryColumnWidthForInterfaceOrientation:]
  -[CKUIBehaviorPad canPresentOverKeyboard]
  -[CKUIBehaviorPad usesPopovers]
  -[CKUIBehaviorPad minTranscriptMarginInsets]
  -[CKUIBehaviorPad fullscreenPickerActionLayoutAxisPrioritiesForWidth:]
  -[CKUIBehaviorPad navigationBarMaxHeight]
  -[CKUIBehaviorPad entryViewMaxHandWritingPluginShelfHeight]
  -[CKUIBehaviorPad suggestedAppStripLimit]
  -[CKUIBehaviorPad shouldPopoverSuggestionsBanner]
  -[CKUIBehaviorPad conversationListMinimumWidthForHiddenContactImage]
  -[CKUIBehaviorPad previewMaxWidth]
  -[CKUIBehaviorPad searchPhotosThumbnailWidth]
  -[CKUIBehaviorPad searchLinksThumbnailWidth]
  -[CKUIBehaviorPad canShowContactPhotosInConversationList]
  -[CKUIBehaviorPad shouldSuppressRotationInNewCompose]
  -[CKUIBehaviorPad showMMSSetup]
  -[CKUIBehaviorPad presentsAutocompleteInAPopover]
  -[CKUIBehaviorPad usesUncollapsedSplitview]
  -[CKUIBehaviorPad lowClearanceInLandscape]
  -[CKUIBehaviorPad presentsQuickLookController]
  -[CKUIBehaviorPad presentForwardingUIModally]
  -[CKUIBehaviorPad shouldOnlyResumeToConversationListAfterTimeout]
  -[CKUIBehaviorPad resumeToConversationListTimeInterval]
  -[CKUIBehaviorPad maxNavigationBarNoContactPhotoCollapsedHeightValue]
  -[CKUIBehaviorPad transcriptHeaderViewMaxRows]
  -[CKUIBehaviorPad shouldRefreshAlternateAddressesSheet]
  -[CKUIBehaviorPad defaultConversationViewingMessageCount]
  -[CKUIBehaviorPad showPendingInConversationList]
  -[CKUIBehaviorPad defaultAVPlayerViewContorllerControlsInsets]
  -[CKUIBehaviorPad documentIconSize]
  -[CKUIBehaviorPad shouldShowDisclosureChevronInRecipientAtoms]
  -[CKUIBehaviorPad supportedInterfaceOrientations]
  -[CKUIBehaviorPad shouldDisableFocusRing]
  -[CKUIBehaviorPad showsConversationListCellChevronImage]
  -[CKUIBehaviorPad photoPickerPopoverWidth]
  -[CKUIBehaviorPad attachmentBrowserDefaultSizeForSquare]
  -[CKUIBehaviorPad attachmentBrowserGridInterItemSpacing]
  -[CKUIBehaviorPad numberOfButtonsInPhotoPicker]
  -[CKUIBehaviorPad photoPickerShouldZoomOnSelection]
  -[CKUIBehaviorPad photoPickerMaxPopoverPhotoHeight]
  -[CKUIBehaviorPad welcomeViewContentViewTopAnchorLayoutConstraintConstant]
  -[CKUIBehaviorPad shouldAlignRecipientGlyphsWithMargins]
  -[CKUIBehaviorPad contactPhotoTranscriptInsets]
  -[CKUIBehaviorPad transcriptContactImageDiameter]


CKUIBehaviorHUDPhone : CKUIBehaviorPhone
  // instance methods
  -[CKUIBehaviorHUDPhone theme]
  -[CKUIBehaviorHUDPhone entryFieldShouldUseBackdropView]
  -[CKUIBehaviorHUDPhone joystickUsesWindow]
  -[CKUIBehaviorHUDPhone entryViewHorizontalCoverInsets]
  -[CKUIBehaviorHUDPhone entryViewVerticalCoverInsets]
  -[CKUIBehaviorHUDPhone usesActionMenu]


CKUIBehaviorHUDPad : CKUIBehaviorPad
  // instance methods
  -[CKUIBehaviorHUDPad theme]
  -[CKUIBehaviorHUDPad entryFieldShouldUseBackdropView]
  -[CKUIBehaviorHUDPad joystickUsesWindow]
  -[CKUIBehaviorHUDPad entryViewHorizontalCoverInsets]
  -[CKUIBehaviorHUDPad entryViewVerticalCoverInsets]
  -[CKUIBehaviorHUDPad usesActionMenu]


CKNavBarUnifiedCallButton : UIButton
 @property  long long buttonStyle
 @property  BOOL faceTimeVideoAvailable
 @property  BOOL faceTimeAudioAvailable
 @property  BOOL telephonyCallAvailable
 @property  BOOL joinPillShouldDisableLabel
 @property  UIAction *faceTimeVideoAction
 @property  UIAction *faceTimeJoinWithVideoAction
 @property  UIAction *faceTimeAudioAction
 @property  UIAction *faceTimeJoinWithAudioAction
 @property  UIAction *telephonyCallAction
 @property  UIAction *openJoinedCallAction
 @property  <CKNavBarUnifiedCallButtonDelegate> *delegate
 @property  NSArray *overrideAudioCallActions

  // instance methods
  -[CKNavBarUnifiedCallButton setFaceTimeVideoAvailable:]
  -[CKNavBarUnifiedCallButton .cxx_destruct]
  -[CKNavBarUnifiedCallButton layoutSubviews]
  -[CKNavBarUnifiedCallButton isTelephonyAvailable]
  -[CKNavBarUnifiedCallButton updateWithStyle:availabilityForVideo:audio:telephony:]
  -[CKNavBarUnifiedCallButton setDelegate:]
  -[CKNavBarUnifiedCallButton setOverrideAudioCallActions:]
  -[CKNavBarUnifiedCallButton buttonStyle]
  -[CKNavBarUnifiedCallButton setButtonStyle:]
  -[CKNavBarUnifiedCallButton setFaceTimeAudioAvailable:]
  -[CKNavBarUnifiedCallButton _localeDidChange:]
  -[CKNavBarUnifiedCallButton _joinCallActions]
  -[CKNavBarUnifiedCallButton _cornerRadiusForCurrentStyle]
  -[CKNavBarUnifiedCallButton _isStyledForJoinableCall]
  -[CKNavBarUnifiedCallButton joinPillShouldDisableLabel]
  -[CKNavBarUnifiedCallButton _currentLabelPreferredWidth]
  -[CKNavBarUnifiedCallButton setJoinPillShouldDisableLabel:]
  -[CKNavBarUnifiedCallButton _updateForCurrentState]
  -[CKNavBarUnifiedCallButton _configureActionsForCurrentState]
  -[CKNavBarUnifiedCallButton _axLabelForCurrentStyle]
  -[CKNavBarUnifiedCallButton _targetImageForCurrentFlags]
  -[CKNavBarUnifiedCallButton _tintColorForCurrentStyle]
  -[CKNavBarUnifiedCallButton _backgroundColorForCurrentStyle]
  -[CKNavBarUnifiedCallButton _titleForCurrentStyle]
  -[CKNavBarUnifiedCallButton _titleColorForCurrentStyle]
  -[CKNavBarUnifiedCallButton _titleLabelFontForCurrentStyle]
  -[CKNavBarUnifiedCallButton _shouldEnableAdjustFontSizeForCurrentStyle]
  -[CKNavBarUnifiedCallButton _minimumFontScaleFactorForCurrentStyle]
  -[CKNavBarUnifiedCallButton _configureInsetsForCurrentState]
  -[CKNavBarUnifiedCallButton _actionsForCurrentStyle]
  -[CKNavBarUnifiedCallButton _configureFrameForCurrentState]
  -[CKNavBarUnifiedCallButton _isStyledForJoinedCall]
  -[CKNavBarUnifiedCallButton openJoinedCallAction]
  -[CKNavBarUnifiedCallButton _topMarginForCurrentState]
  -[CKNavBarUnifiedCallButton _leadingMarginForCurrentState]
  -[CKNavBarUnifiedCallButton _bottomMarginForCurrentState]
  -[CKNavBarUnifiedCallButton _trailingMarginForCurrentState]
  -[CKNavBarUnifiedCallButton _imageToTextSpacingForCurrentState]
  -[CKNavBarUnifiedCallButton _startCallActions]
  -[CKNavBarUnifiedCallButton overrideAudioCallActions]
  -[CKNavBarUnifiedCallButton telephonyCallAction]
  -[CKNavBarUnifiedCallButton faceTimeJoinWithVideoAction]
  -[CKNavBarUnifiedCallButton faceTimeJoinWithAudioAction]
  -[CKNavBarUnifiedCallButton setTelephonyCallAvailable:]
  -[CKNavBarUnifiedCallButton setFaceTimeJoinWithVideoAction:]
  -[CKNavBarUnifiedCallButton sizeThatFits:]
  -[CKNavBarUnifiedCallButton setFaceTimeJoinWithAudioAction:]
  -[CKNavBarUnifiedCallButton setTelephonyCallAction:]
  -[CKNavBarUnifiedCallButton setOpenJoinedCallAction:]
  -[CKNavBarUnifiedCallButton initWithFrame:]
  -[CKNavBarUnifiedCallButton isFaceTimeVideoAvailable]
  -[CKNavBarUnifiedCallButton delegate]
  -[CKNavBarUnifiedCallButton isFaceTimeAudioAvailable]
  -[CKNavBarUnifiedCallButton setFaceTimeVideoAction:]
  -[CKNavBarUnifiedCallButton setFaceTimeAudioAction:]
  -[CKNavBarUnifiedCallButton faceTimeVideoAction]
  -[CKNavBarUnifiedCallButton faceTimeAudioAction]


CKViewController : UIViewController
 @property  BOOL appeared
 @property  BOOL deferredAppeared
 @property  BOOL appearing
 @property  BOOL dissapearing

  // instance methods
  -[CKViewController prepareForResume]
  -[CKViewController prepareForSuspend]
  -[CKViewController appearing]
  -[CKViewController systemApplicationWillEnterForeground]
  -[CKViewController performResumeDeferredSetup]
  -[CKViewController appeared]
  -[CKViewController viewDidAppear:]
  -[CKViewController setAppearing:]
  -[CKViewController deferredAppeared]
  -[CKViewController setAppeared:]
  -[CKViewController viewWillDisappear:]
  -[CKViewController dissapearing]
  -[CKViewController parentControllerDidResume:animating:]
  -[CKViewController viewWillAppear:]
  -[CKViewController setDissapearing:]
  -[CKViewController setDeferredAppeared:]
  -[CKViewController childViewControllersPerform:]
  -[CKViewController viewDidAppearDeferredSetup]
  -[CKViewController significantTimeChange]
  -[CKViewController viewDidDisappear:]
  -[CKViewController parentControllerDidBecomeActive]


CKAlertAction : UIAlertAction
 @property  @? __ck_handler

  // class methods
  +[CKAlertAction actionWithTitle:style:handler:]

  // instance methods
  -[CKAlertAction .cxx_destruct]
  -[CKAlertAction __ck_handler]
  -[CKAlertAction set__ck_handler:]


CKAlertController : UIAlertController <CKAdaptivePresentedControllerProtocol>
 @property  <CKAlertControllerDelegate> *alertDelegate
 @property  NSArray *actions
 @property  BOOL wantsWindowedPresentation
 @property  BOOL preserveModalPresentationStyle
 @property  BOOL shouldHidePresentingWindow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKAlertController alertControllerWithTitle:message:preferredStyle:]

  // instance methods
  -[CKAlertController addAction:]
  -[CKAlertController presentFromViewController:animated:completion:]
  -[CKAlertController .cxx_destruct]
  -[CKAlertController wantsWindowedPresentation]
  -[CKAlertController setWantsWindowedPresentation:]
  -[CKAlertController preserveModalPresentationStyle]
  -[CKAlertController setPreserveModalPresentationStyle:]
  -[CKAlertController shouldHidePresentingWindow]
  -[CKAlertController setShouldHidePresentingWindow:]
  -[CKAlertController allowsRotation]
  -[CKAlertController alertDelegate]
  -[CKAlertController setAlertDelegate:]
  -[CKAlertController viewDidDisappear:]


CKBlackholeAlertController : CKAlertController

CKPresentationControllerRootViewController : UIViewController
 @property  BOOL allowsRotation

  // instance methods
  -[CKPresentationControllerRootViewController shouldAutorotate]
  -[CKPresentationControllerRootViewController allowsRotation]
  -[CKPresentationControllerRootViewController setAllowsRotation:]


CKPresentationControllerWindow : UIWindow
  // instance methods
  -[CKPresentationControllerWindow initWithFrame:allowsRotation:]
  -[CKPresentationControllerWindow initWithWindowScene:frame:allowsRotation:]
  -[CKPresentationControllerWindow initWithWindowScene:allowsRotation:]


CKAdaptivePresentationController : NSObject <UIPopoverPresentationControllerDelegate, CKAlertControllerDelegate>
 @property  UIViewController *presentedViewController
 @property  UIPopoverPresentationController *currentPresentationController
 @property  CKPresentationControllerWindow *presentationWindow
 @property  @? presentationHandler
 @property  @? dismissalHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKAdaptivePresentationController sharedInstance]

  // instance methods
  -[CKAdaptivePresentationController _cleanup]
  -[CKAdaptivePresentationController dismissalHandler]
  -[CKAdaptivePresentationController popoverPresentationController:willRepositionPopoverToRect:inView:]
  -[CKAdaptivePresentationController presentationWindow]
  -[CKAdaptivePresentationController setCurrentPresentationController:]
  -[CKAdaptivePresentationController .cxx_destruct]
  -[CKAdaptivePresentationController popoverPresentationControllerDidDismissPopover:]
  -[CKAdaptivePresentationController presentViewController:fromViewController:presentationHandler:dismissalHandler:animated:completion:]
  -[CKAdaptivePresentationController dismissViewControllerAnimated:completion:]
  -[CKAdaptivePresentationController setDismissalHandler:]
  -[CKAdaptivePresentationController alertControllerViewDidDisappear:]
  -[CKAdaptivePresentationController setPresentedViewController:]
  -[CKAdaptivePresentationController _presentViewController:fromViewController:presentationHandler:barButtonItemPresentationHandler:dismissalHandler:animated:completion:]
  -[CKAdaptivePresentationController setPresentationHandler:]
  -[CKAdaptivePresentationController presentViewController:fromViewController:barButtonItemPresentationHandler:dismissalHandler:animated:completion:]
  -[CKAdaptivePresentationController presentationHandler]
  -[CKAdaptivePresentationController dealloc]
  -[CKAdaptivePresentationController currentPresentationController]
  -[CKAdaptivePresentationController presentedViewController]
  -[CKAdaptivePresentationController setPresentationWindow:]


CKTranscriptCollectionViewController : CKViewController <CKAudioControllerDelegate, CKTranscriptCompositorDatasourceDelegate, CKLocationShareBalloonViewDelegate, CKLocationSharingDelegate, CKVideoPlayerBalloonViewDelegate, CKTranscriptActionButtonCellDelegate, CKTranscriptPhotoStackCellDelegate, CKTitledImageBalloonViewDelegate, CKTranscriptCollectionViewDelegate, CKMovieBalloonViewDelegate, CNAvatarViewDelegate, IMStateLoggable, UICollectionViewDelegateFlowLayout, CKFullScreenEffectManagerDelegate, CKPluginPlaybackManagerDelegate, CKAssociatedMessageTranscriptCellDelegate, CKTranscriptBalloonSelectionManagerDelegate, CKTranscriptBalloonSelectionManagerDataSource, CKCommunicationSafetyEDUScreenProtocol, CKBalloonViewDelegate, UICollectionViewDelegate_Private, CKCoreTranscriptControllerProtocol, CKSendAnimationManagerDelegate, UICollectionViewDataSource>
 @property  UINavigationController *commSafetyEDUNavigationController
 @property  NSArray *notifications
 @property  NSString *transcriptIdentifier
 @property  CKConversation *conversation
 @property  CKTranscriptCollectionView *collectionView
 @property  CKTranscriptCompositor *compositor
 @property  NSArray *chatItems
 @property  NSArray *associatedChatItems
 @property  BOOL settingChatItems
 @property  NSObject<OS_dispatch_group> *updateAnimationGroup
 @property  CKAudioController *audioController
 @property  double balloonMaxWidth
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  NSDictionary *pluginSnapshots
 @property  CKPluginPlaybackManager *pluginPlaybackManager
 @property  BOOL isPerformingRegenerateOrReloadOnlyUpdate
 @property  {CGPoint=dd} peekSampleTranslation
 @property  BOOL peeking
 @property  BOOL isLoadingMoreMessages
 @property  NSString *speakerTransferGUID
 @property  BOOL sizedFullTranscript
 @property  BOOL shouldUseOpaqueMask
 @property  UIView<CKFullscreenEffectView> *topEffectView
 @property  NSMutableSet *currentEffectDecorationViews
 @property  BOOL dynamicsDisabledBeforeInitialLoad
 @property  BOOL filterAllButFirstMessage
 @property  BOOL playedLastImpactEffectForTransitionFromComposing
 @property  UIView *snapshotOfPluginBeingReplacedByBreadcrumb
 @property  NSString *mostRecentlyTouchedPlugin
 @property  @? transcriptUpdateCompletion
 @property  IMStateCaptureAssistant *stateCaptureAssistant
 @property  CKTranscriptBalloonSelectionManager *selectionManager
 @property  BOOL showingTranscriptTimestamps
 @property  IMChat *chat
 @property  BOOL isInline
 @property  <CKTranscriptCollectionViewControllerDelegate> *delegate
 @property  UIView<CKGradientReferenceView> *gradientReferenceView
 @property  NSIndexSet *hiddenItems
 @property  NSIndexSet *hiddenAssociatedItems
 @property  NSIndexSet *hiddenBalloonViews
 @property  BOOL initialLoad
 @property  BOOL shouldLoadDefaultConversationViewingMessageCountOnAppear
 @property  CKImpactEffectManager *impactEffectManager
 @property  CKFullScreenEffectManager *fullscreenEffectManager
 @property  BOOL transitionedFromComposing
 @property  BOOL transitioningFromComposing
 @property  BOOL transcriptUpdateAnimated
 @property  BOOL allowsPluginPlayback
 @property  double pluginPlaybackDelay
 @property  NSString *__CurrentTestName
 @property  long long contentAnimationPauseReasons
 @property  <UIDragInteractionDelegate> *dragInteractionDelegate
 @property  UITapGestureRecognizer *loggingTapGestureRecognizer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKTranscriptCollectionViewController chatItemsDidChangeNotification]

  // instance methods
  -[CKTranscriptCollectionViewController notifications]
  -[CKTranscriptCollectionViewController collectionView:contextMenuConfigurationForItemAtIndexPath:point:]
  -[CKTranscriptCollectionViewController collectionView:cellForItemAtIndexPath:]
  -[CKTranscriptCollectionViewController collectionView:numberOfItemsInSection:]
  -[CKTranscriptCollectionViewController collectionView:canFocusItemAtIndexPath:]
  -[CKTranscriptCollectionViewController collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:]
  -[CKTranscriptCollectionViewController chat]
  -[CKTranscriptCollectionViewController collectionView:previewForHighlightingContextMenuWithConfiguration:]
  -[CKTranscriptCollectionViewController _collectionView:accessoriesForContextMenuWithConfiguration:layoutAnchor:]
  -[CKTranscriptCollectionViewController collectionView:willDisplayContextMenuWithConfiguration:animator:]
  -[CKTranscriptCollectionViewController numberOfSectionsInCollectionView:]
  -[CKTranscriptCollectionViewController chatItems]
  -[CKTranscriptCollectionViewController collectionView:didDeselectItemAtIndexPath:]
  -[CKTranscriptCollectionViewController collectionView:didSelectItemAtIndexPath:]
  -[CKTranscriptCollectionViewController prepareForSuspend]
  -[CKTranscriptCollectionViewController collectionView:willEndContextMenuInteractionWithConfiguration:animator:]
  -[CKTranscriptCollectionViewController _collectionView:styleForContextMenuWithConfiguration:]
  -[CKTranscriptCollectionViewController collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[CKTranscriptCollectionViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[CKTranscriptCollectionViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[CKTranscriptCollectionViewController setChatItems:removedAssociatedIndexes:insertedAssociatedIndexes:]
  -[CKTranscriptCollectionViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[CKTranscriptCollectionViewController playEffectsIfNecessaryWithInsertedUnreadMessage:insertedLocalUnsentChatItem:]
  -[CKTranscriptCollectionViewController scrollToBottomAnimated:withDuration:insertedUnreadMessage:insertedLocalUnsentChatItem:wantsScrollToReplyButton:withCompletion:]
  -[CKTranscriptCollectionViewController setEditing:animated:]
  -[CKTranscriptCollectionViewController sharingMenu]
  -[CKTranscriptCollectionViewController _indexOfBreadcrumbReplacingTranscriptPluginInChatItems:inserted:removed:outIndexOfReplacedPlugin:outIndexOfNewPlugin:]
  -[CKTranscriptCollectionViewController isSettingChatItems]
  -[CKTranscriptCollectionViewController setSnapshotOfPluginBeingReplacedByBreadcrumb:]
  -[CKTranscriptCollectionViewController speakerTransferGUID]
  -[CKTranscriptCollectionViewController setAssociatedChatItems:]
  -[CKTranscriptCollectionViewController setNotifications:]
  -[CKTranscriptCollectionViewController _diffAssociatedItemsWithOldAssociatedItems:removedAssociatedIndexes:insertedAssociatedIndexes:]
  -[CKTranscriptCollectionViewController startFullscreenEffectIfNeededForChatItem:]
  -[CKTranscriptCollectionViewController selectedItems]
  -[CKTranscriptCollectionViewController playImpactEffectIfNecessaryAutoplayingOutgoingEffect:autoplayingIncomingEffect:impactEffectChatItem:]
  -[CKTranscriptCollectionViewController setSettingChatItems:]
  -[CKTranscriptCollectionViewController playFullscreenEffectIfNecessaryAutoplayingOutgoingEffect:autoplayingIncomingEffect:insertedUnreadMessage:insertedLocalUnsentChatItem:]
  -[CKTranscriptCollectionViewController setSelectedItems:]
  -[CKTranscriptCollectionViewController transferUpdated:]
  -[CKTranscriptCollectionViewController setIsLoadingMoreMessages:]
  -[CKTranscriptCollectionViewController isLoadingMoreMessages]
  -[CKTranscriptCollectionViewController _loadMessagesIfNeeded]
  -[CKTranscriptCollectionViewController loadEarlierMessages]
  -[CKTranscriptCollectionViewController loadRecentMessages]
  -[CKTranscriptCollectionViewController hawkingFailurePromptMessageForHandle:]
  -[CKTranscriptCollectionViewController performResumeDeferredSetup]
  -[CKTranscriptCollectionViewController isInitialLoad]
  -[CKTranscriptCollectionViewController presentHawkingPromptForChatItem:]
  -[CKTranscriptCollectionViewController _launchTapToRadar]
  -[CKTranscriptCollectionViewController .cxx_destruct]
  -[CKTranscriptCollectionViewController _downgradeMessageAtIndexPath:andDowngradeChat:]
  -[CKTranscriptCollectionViewController _resendMessageAtIndexPath:]
  -[CKTranscriptCollectionViewController _downgradeMessageAtIndexPath:]
  -[CKTranscriptCollectionViewController locationShareBalloonViewIgnoreButtonTapped:]
  -[CKTranscriptCollectionViewController updateAnimationGroup]
  -[CKTranscriptCollectionViewController updateLastAddressedHandleID:lastAddressedSIMID:]
  -[CKTranscriptCollectionViewController _handleCommSafetySensitiveReceiveStatusButtonTappedForIndexPath:]
  -[CKTranscriptCollectionViewController scrollViewDidEndScrollingAnimation:]
  -[CKTranscriptCollectionViewController isPeeking]
  -[CKTranscriptCollectionViewController selectedChatItems]
  -[CKTranscriptCollectionViewController didMoveToParentViewController:]
  -[CKTranscriptCollectionViewController balloonViewForChatItem:]
  -[CKTranscriptCollectionViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[CKTranscriptCollectionViewController collectionViewLayout]
  -[CKTranscriptCollectionViewController _handleCommSafetyMessageSomeoneStatusButtonTappedForIndexPath:]
  -[CKTranscriptCollectionViewController _showMoreHelp]
  -[CKTranscriptCollectionViewController _showLeaveConversationFromView:]
  -[CKTranscriptCollectionViewController _showBlockContactSelectionAlertFromView:]
  -[CKTranscriptCollectionViewController _blockHandle:]
  -[CKTranscriptCollectionViewController _dismissMoreHelpView:]
  -[CKTranscriptCollectionViewController _forceReloadChatItems]
  -[CKTranscriptCollectionViewController updateAnimationPaused]
  -[CKTranscriptCollectionViewController impactEffectManager]
  -[CKTranscriptCollectionViewController convertedBoundsToCullFromView:]
  -[CKTranscriptCollectionViewController lastMessagePartChatItem]
  -[CKTranscriptCollectionViewController _downgradeMessage:andDowngradeChat:]
  -[CKTranscriptCollectionViewController makeHawkingPromptForMessage:toRecipient:fromSender:withSMSOption:]
  -[CKTranscriptCollectionViewController playedLastImpactEffectForTransitionFromComposing]
  -[CKTranscriptCollectionViewController verticallyScrollTranscriptByAmount:animated:completion:]
  -[CKTranscriptCollectionViewController transitionedFromComposing]
  -[CKTranscriptCollectionViewController setPlayedLastImpactEffectForTransitionFromComposing:]
  -[CKTranscriptCollectionViewController _logVisibleChatItems]
  -[CKTranscriptCollectionViewController stateDictionaryForDiagnosticsRequest]
  -[CKTranscriptCollectionViewController reloadChatItemAtIndex:animated:]
  -[CKTranscriptCollectionViewController printableViewController]
  -[CKTranscriptCollectionViewController quickSaveButtonWasTapped:]
  -[CKTranscriptCollectionViewController setPeeking:]
  -[CKTranscriptCollectionViewController isTranscriptUpdateAnimated]
  -[CKTranscriptCollectionViewController transcriptUpdateCompletion]
  -[CKTranscriptCollectionViewController updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:checkFiltered:completion:]
  -[CKTranscriptCollectionViewController sizeFullTranscriptIfNecessary]
  -[CKTranscriptCollectionViewController touchUpInsideCellSpeakerButton:]
  -[CKTranscriptCollectionViewController _selectChatItemGuid:selectionState:]
  -[CKTranscriptCollectionViewController _deselectChatItemGuid:]
  -[CKTranscriptCollectionViewController _chatItemForGUID:]
  -[CKTranscriptCollectionViewController marginInsets]
  -[CKTranscriptCollectionViewController scrollViewDidScrollToTop:]
  -[CKTranscriptCollectionViewController highlightItemAtIndexPathWhenDisplayed:autoDismiss:]
  -[CKTranscriptCollectionViewController _addAttachmentsToProvidersArray:forChatItems:]
  -[CKTranscriptCollectionViewController copyChatItemsToPasteboard:]
  -[CKTranscriptCollectionViewController _selectedChatItemsHaveMultipleSenders:]
  -[CKTranscriptCollectionViewController _itemProviderForSelectedChatItemsWithMultipleSenders:]
  -[CKTranscriptCollectionViewController _itemProviderForSelectedChatItemsWithSingleSender:]
  -[CKTranscriptCollectionViewController audioController:mediaObjectDidFinishPlaying:]
  -[CKTranscriptCollectionViewController audioControllerDidPause:]
  -[CKTranscriptCollectionViewController _resizingStart:]
  -[CKTranscriptCollectionViewController selectionManager]
  -[CKTranscriptCollectionViewController audioController:mediaObjectProgressDidChange:currentTime:duration:]
  -[CKTranscriptCollectionViewController audioControllerDidStop:]
  -[CKTranscriptCollectionViewController audioControllerPlayingDidChange:]
  -[CKTranscriptCollectionViewController imChatItems]
  -[CKTranscriptCollectionViewController setDelegate:]
  -[CKTranscriptCollectionViewController compositorDatasourceItemsForSection:]
  -[CKTranscriptCollectionViewController compositorMarginInsets]
  -[CKTranscriptCollectionViewController showGridForChatItem:]
  -[CKTranscriptCollectionViewController viewDidAppear:]
  -[CKTranscriptCollectionViewController setHiddenBalloonViews:]
  -[CKTranscriptCollectionViewController wantsDrawerLayout]
  -[CKTranscriptCollectionViewController raiseGestureRecognized:]
  -[CKTranscriptCollectionViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[CKTranscriptCollectionViewController compositorSupportsCustomLayoutGroupsForSection:]
  -[CKTranscriptCollectionViewController compositorSupportsCustomLayoutGroupsForLayoutProvider:]
  -[CKTranscriptCollectionViewController didTapTranscriptActionButtonCell:]
  -[CKTranscriptCollectionViewController hiddenItems]
  -[CKTranscriptCollectionViewController locationShareBalloonViewShareButtonTapped:]
  -[CKTranscriptCollectionViewController locationSharingClient:showShareLocationMenuWithBalloonPluginView:]
  -[CKTranscriptCollectionViewController didPinchPhotoStackCell:]
  -[CKTranscriptCollectionViewController collectionView:isEditableItemAtIndexPath:]
  -[CKTranscriptCollectionViewController collectionViewWillScroll:targetContentOffset:]
  -[CKTranscriptCollectionViewController collectionViewWillProgrammaticallyScroll:animated:]
  -[CKTranscriptCollectionViewController collectionViewWillInset:targetContentInset:]
  -[CKTranscriptCollectionViewController collectionViewDidInset:]
  -[CKTranscriptCollectionViewController associatedMessageTranscriptCellLongTouched:]
  -[CKTranscriptCollectionViewController selectionManagerChatItems:]
  -[CKTranscriptCollectionViewController associatedMessageTranscriptCellDoubleTapped:]
  -[CKTranscriptCollectionViewController selectionManager:didAddChatItem:selectionState:]
  -[CKTranscriptCollectionViewController selectionManager:didRemoveChatItem:]
  -[CKTranscriptCollectionViewController collectionView]
  -[CKTranscriptCollectionViewController compositor]
  -[CKTranscriptCollectionViewController selectionManagerDidRemoveAllSelectedChatItems:]
  -[CKTranscriptCollectionViewController endHoldingUpdatesAfterQuicklookCancelsDismiss]
  -[CKTranscriptCollectionViewController hiddenAssociatedItems]
  -[CKTranscriptCollectionViewController setPluginPlaybackDelay:]
  -[CKTranscriptCollectionViewController chatItemForGUID:]
  -[CKTranscriptCollectionViewController acceptPressedForSecondSendingCommSafetyEDUScreen:withComposition:]
  -[CKTranscriptCollectionViewController setFullscreenEffectManager:]
  -[CKTranscriptCollectionViewController setTransitionedFromComposing:]
  -[CKTranscriptCollectionViewController __setCurrentTestName:]
  -[CKTranscriptCollectionViewController setContentAnimationPauseReasons:]
  -[CKTranscriptCollectionViewController presentingViewControllerForAvatarView:]
  -[CKTranscriptCollectionViewController isVisiblePlugin:]
  -[CKTranscriptCollectionViewController clearRecentPluginTouch]
  -[CKTranscriptCollectionViewController hasRecentTouchForSendingPlugin:]
  -[CKTranscriptCollectionViewController collectionView:previewForDismissingContextMenuWithConfiguration:]
  -[CKTranscriptCollectionViewController acceptPressedForSecondReceivingCommSafetyEDUScreen:withItemIndexPath:]
  -[CKTranscriptCollectionViewController declinePressedForCommSafetyEduScreen:isSending:withComposition:withSensitiveMediaObjects:withIdentifiersOfShelvedImages:]
  -[CKTranscriptCollectionViewController setScrollAnchor:]
  -[CKTranscriptCollectionViewController scrollViewDidEndDragging:willDecelerate:]
  -[CKTranscriptCollectionViewController loggingTapGestureRecognizer]
  -[CKTranscriptCollectionViewController setLoggingTapGestureRecognizer:]
  -[CKTranscriptCollectionViewController messagePressedForCommSafetyEduScreen:isSending:withComposition:withSensitiveMediaObjects:withIdentifiersOfShelvedImages:]
  -[CKTranscriptCollectionViewController setHiddenItems:]
  -[CKTranscriptCollectionViewController _resizingEnd:]
  -[CKTranscriptCollectionViewController scrollViewDidScroll:]
  -[CKTranscriptCollectionViewController collectionViewLayoutRestingDidChange:]
  -[CKTranscriptCollectionViewController setCurrentEffectDecorationViews:]
  -[CKTranscriptCollectionViewController collectionView:layout:chatItemForItemAtIndexPath:]
  -[CKTranscriptCollectionViewController collectionView:layout:chatItemForSupplementaryViewAtIndexPath:]
  -[CKTranscriptCollectionViewController messagePartForBalloonView:]
  -[CKTranscriptCollectionViewController collectionViewLayout:sizeDidChange:]
  -[CKTranscriptCollectionViewController currentEffectForCollectionView:layout:]
  -[CKTranscriptCollectionViewController liveViewController:requestPresentationStyle:]
  -[CKTranscriptCollectionViewController _downgradeMessage:]
  -[CKTranscriptCollectionViewController liveViewController:stagePayload:skipShelf:allowAllCommits:completionHandler:]
  -[CKTranscriptCollectionViewController liveViewControllerContextIdentifier:]
  -[CKTranscriptCollectionViewController selectSingleBalloonView:]
  -[CKTranscriptCollectionViewController loadMessagesIfNeededSkipValidation]
  -[CKTranscriptCollectionViewController liveViewController:stageSticker:skipShelf:allowAllCommits:completionHandler:]
  -[CKTranscriptCollectionViewController didTapUnavailableMomentShareBalloonView:]
  -[CKTranscriptCollectionViewController setPluginSnapshots:]
  -[CKTranscriptCollectionViewController setCollectionView:]
  -[CKTranscriptCollectionViewController _pluginChatItem:hasControllerConformingToProtocol:]
  -[CKTranscriptCollectionViewController collectionView:didRecognizePanGestureWithPoint:]
  -[CKTranscriptCollectionViewController dynamicsDisabledBeforeInitialLoad]
  -[CKTranscriptCollectionViewController setDynamicsDisabledBeforeInitialLoad:]
  -[CKTranscriptCollectionViewController filterAllButFirstMessage]
  -[CKTranscriptCollectionViewController setFilterAllButFirstMessage:]
  -[CKTranscriptCollectionViewController transcriptBackgroundColor]
  -[CKTranscriptCollectionViewController isInline]
  -[CKTranscriptCollectionViewController didTapPendingMomentSharePhotoStackBalloonView:]
  -[CKTranscriptCollectionViewController photoStackBalloonView:photoStack:didSelectAssetReference:]
  -[CKTranscriptCollectionViewController photoStackBalloonView:photoStackDidSelectAdditionalItems:]
  -[CKTranscriptCollectionViewController photoStackBalloonView:didChangeCurrentAssetReference:isProgrammaticChange:didChangeIndex:]
  -[CKTranscriptCollectionViewController initWithConversation:delegate:balloonMaxWidth:marginInsets:]
  -[CKTranscriptCollectionViewController setShouldLoadDefaultConversationViewingMessageCountOnAppear:]
  -[CKTranscriptCollectionViewController viewWillDisappear:]
  -[CKTranscriptCollectionViewController viewDidLayoutSubviews]
  -[CKTranscriptCollectionViewController installedAppsChanged:]
  -[CKTranscriptCollectionViewController gradientReferenceView]
  -[CKTranscriptCollectionViewController scrollViewWillBeginDragging:]
  -[CKTranscriptCollectionViewController viewWillAppear:]
  -[CKTranscriptCollectionViewController chatForSendAnimationManager:]
  -[CKTranscriptCollectionViewController collectionViewControllerForImpactEffectManager:]
  -[CKTranscriptCollectionViewController sendAnimationManagerWillStartAnimation:context:]
  -[CKTranscriptCollectionViewController sendAnimationManagerDidStopAnimation:context:]
  -[CKTranscriptCollectionViewController scrollViewShouldScrollToTop:]
  -[CKTranscriptCollectionViewController commSafetyEDUNavigationController]
  -[CKTranscriptCollectionViewController setCommSafetyEDUNavigationController:]
  -[CKTranscriptCollectionViewController setMarginInsets:]
  -[CKTranscriptCollectionViewController setHiddenAssociatedItems:]
  -[CKTranscriptCollectionViewController alertTitleForDelete]
  -[CKTranscriptCollectionViewController setCompositor:]
  -[CKTranscriptCollectionViewController __im_ff_hubbleTranscriptEnabled]
  -[CKTranscriptCollectionViewController __im_ff_isBackgroundAudioEnabled]
  -[CKTranscriptCollectionViewController _releaseActiveBalloonControllers]
  -[CKTranscriptCollectionViewController scrollToTopOfLastBubbleCellAnimated:]
  -[CKTranscriptCollectionViewController audioController]
  -[CKTranscriptCollectionViewController shouldLoadDefaultConversationViewingMessageCountOnAppear]
  -[CKTranscriptCollectionViewController setStateCaptureAssistant:]
  -[CKTranscriptCollectionViewController alertMessageForDelete]
  -[CKTranscriptCollectionViewController previewDidChange:]
  -[CKTranscriptCollectionViewController delegate]
  -[CKTranscriptCollectionViewController setConversation:]
  -[CKTranscriptCollectionViewController _tearDownLiveBubbles]
  -[CKTranscriptCollectionViewController stateCaptureAssistant]
  -[CKTranscriptCollectionViewController updateEffectViewMessageRects]
  -[CKTranscriptCollectionViewController pluginPlaybackDelay]
  -[CKTranscriptCollectionViewController associatedChatItemForGUID:]
  -[CKTranscriptCollectionViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKTranscriptCollectionViewController updateTargetAlphaForVisibleChatItems]
  -[CKTranscriptCollectionViewController _allowsEffectAutoPlayback]
  -[CKTranscriptCollectionViewController _replayLastImpactEffectIfNotFromMe]
  -[CKTranscriptCollectionViewController _prewarmBalloonControllers]
  -[CKTranscriptCollectionViewController _prewarmMediaPreviews]
  -[CKTranscriptCollectionViewController _prewarmTranscriptAssetsIfNecessary]
  -[CKTranscriptCollectionViewController repromptLastBlackholeFailureIfNotPrompted]
  -[CKTranscriptCollectionViewController setBalloonMaxWidth:]
  -[CKTranscriptCollectionViewController setChatItems:]
  -[CKTranscriptCollectionViewController setAllowsPluginPlayback:]
  -[CKTranscriptCollectionViewController setShouldUseOpaqueMask:]
  -[CKTranscriptCollectionViewController chatItemWithNotification:]
  -[CKTranscriptCollectionViewController chatItemsWithNotifications:]
  -[CKTranscriptCollectionViewController startSuppressingSoundsForBulletinMessagesFromNotifications:]
  -[CKTranscriptCollectionViewController chatItemsWithIMChatItems:]
  -[CKTranscriptCollectionViewController setSizedFullTranscript:]
  -[CKTranscriptCollectionViewController sizedFullTranscript]
  -[CKTranscriptCollectionViewController _refreshLocationsForRecipientsIfNecessary]
  -[CKTranscriptCollectionViewController setUpdateAnimationGroup:]
  -[CKTranscriptCollectionViewController stopPluginPlayback]
  -[CKTranscriptCollectionViewController setTranscriptUpdateAnimated:]
  -[CKTranscriptCollectionViewController startPluginPlaybackAfterDelay:]
  -[CKTranscriptCollectionViewController canRaiseToTalk]
  -[CKTranscriptCollectionViewController setInitialLoad:]
  -[CKTranscriptCollectionViewController transferRestored:]
  -[CKTranscriptCollectionViewController snapshotDidChange:]
  -[CKTranscriptCollectionViewController locationStringDidChange:]
  -[CKTranscriptCollectionViewController addressBookChanged:]
  -[CKTranscriptCollectionViewController snapshotTaken:]
  -[CKTranscriptCollectionViewController multiwayCallStateChanged:]
  -[CKTranscriptCollectionViewController viewDidAppearDeferredSetup]
  -[CKTranscriptCollectionViewController setDragInteractionDelegate:]
  -[CKTranscriptCollectionViewController connectivityChanged:]
  -[CKTranscriptCollectionViewController setImpactEffectManager:]
  -[CKTranscriptCollectionViewController setIsPerformingRegenerateOrReloadOnlyUpdate:]
  -[CKTranscriptCollectionViewController _highlightCell:autoDismiss:]
  -[CKTranscriptCollectionViewController _currentTopChatItemForAggregateChatItem:]
  -[CKTranscriptCollectionViewController stopPlayingAudio]
  -[CKTranscriptCollectionViewController deselectAllBalloons]
  -[CKTranscriptCollectionViewController dealloc]
  -[CKTranscriptCollectionViewController balloonViewTitleTapped:]
  -[CKTranscriptCollectionViewController balloonTextViewIsSelected]
  -[CKTranscriptCollectionViewController setTransitioningFromComposing:]
  -[CKTranscriptCollectionViewController configureAssociatedCell:forItemAtIndexPath:]
  -[CKTranscriptCollectionViewController reconfigureVisibleSpeakerButtonCells]
  -[CKTranscriptCollectionViewController setTranscriptUpdateCompletion:]
  -[CKTranscriptCollectionViewController setAudioController:]
  -[CKTranscriptCollectionViewController chatItemForCell:]
  -[CKTranscriptCollectionViewController mostRecentlyTouchedPlugin]
  -[CKTranscriptCollectionViewController setMostRecentlyTouchedPlugin:]
  -[CKTranscriptCollectionViewController reloadData]
  -[CKTranscriptCollectionViewController conversation]
  -[CKTranscriptCollectionViewController setPeekSampleTranslation:]
  -[CKTranscriptCollectionViewController _collectionViewDidRestAsync:]
  -[CKTranscriptCollectionViewController cullCellSubviews]
  -[CKTranscriptCollectionViewController pluginPlaybackManager]
  -[CKTranscriptCollectionViewController allowsPluginPlayback]
  -[CKTranscriptCollectionViewController _deferredStartPlayback]
  -[CKTranscriptCollectionViewController _startPlaybackWithIndexPaths:]
  -[CKTranscriptCollectionViewController setPluginPlaybackManager:]
  -[CKTranscriptCollectionViewController loadMessagesIfNeeded]
  -[CKTranscriptCollectionViewController layoutGroupForDatasourceItems:environment:layoutItems:]
  -[CKTranscriptCollectionViewController peekSampleTranslation]
  -[CKTranscriptCollectionViewController setGradientReferenceView:]
  -[CKTranscriptCollectionViewController tuConversationBalloonJoinButtonTapped:]
  -[CKTranscriptCollectionViewController addContentAnimationPauseReasons:]
  -[CKTranscriptCollectionViewController _trackPhotoStackEvent:forStackBalloonView:transcriptOrientation:]
  -[CKTranscriptCollectionViewController currentEffectDecorationViews]
  -[CKTranscriptCollectionViewController balloonViewSelected:withModifierFlags:selectedText:]
  -[CKTranscriptCollectionViewController balloonViewTextViewDidChangeSelection:selectedText:textView:]
  -[CKTranscriptCollectionViewController liveBalloonTouched:]
  -[CKTranscriptCollectionViewController interactionStartedFromPreviewItemControllerInBalloonView:]
  -[CKTranscriptCollectionViewController interactionStoppedFromPreviewItemControllerInBalloonView:]
  -[CKTranscriptCollectionViewController audioBalloonScrubberDidChangeValue:]
  -[CKTranscriptCollectionViewController balloonView:userDidDragOutsideBalloonWithPoint:]
  -[CKTranscriptCollectionViewController balloonViewShouldCopyToPasteboard:]
  -[CKTranscriptCollectionViewController balloonView:willInsertPluginViewAsSubview:]
  -[CKTranscriptCollectionViewController parentViewControllerForReusableVideoPlayer:]
  -[CKTranscriptCollectionViewController videoPlayerReusePool]
  -[CKTranscriptCollectionViewController transcriptIdentifier]
  -[CKTranscriptCollectionViewController _updateEffectViewMessageRect:effect:]
  -[CKTranscriptCollectionViewController indexPathForBalloonView:]
  -[CKTranscriptCollectionViewController balloonView:mediaObjectDidFinishPlaying:]
  -[CKTranscriptCollectionViewController removeContentAnimationPauseReasons:]
  -[CKTranscriptCollectionViewController canRaiseToListen]
  -[CKTranscriptCollectionViewController _searchForSelectedBalloonHack]
  -[CKTranscriptCollectionViewController selectRangeWithIndexPath:]
  -[CKTranscriptCollectionViewController balloonViewForIndexPath:]
  -[CKTranscriptCollectionViewController balloonPluginForViewController:]
  -[CKTranscriptCollectionViewController initWithConversation:delegate:notifications:balloonMaxWidth:marginInsets:]
  -[CKTranscriptCollectionViewController chatItemsDidChange:]
  -[CKTranscriptCollectionViewController configureCell:forItemAtIndexPath:]
  -[CKTranscriptCollectionViewController loadView]
  -[CKTranscriptCollectionViewController avatarView:orderedPropertiesForProperties:category:]
  -[CKTranscriptCollectionViewController _mediaObjectsForOrganicChatItem:onIndexPath:]
  -[CKTranscriptCollectionViewController _saveMediaObjects:withMomentShareURL:sender:]
  -[CKTranscriptCollectionViewController __CurrentTestName]
  -[CKTranscriptCollectionViewController __raiseGestureRecognized:]
  -[CKTranscriptCollectionViewController _handleAssociatedMessageCellTapEvent:isDoubleTap:]
  -[CKTranscriptCollectionViewController setSpeakerTransferGUID:]
  -[CKTranscriptCollectionViewController invalidateChatItemLayoutWithBalloonMaxWidth:marginInsets:traitCollection:]
  -[CKTranscriptCollectionViewController _conversationListFinishedMerging:]
  -[CKTranscriptCollectionViewController setTopEffectView:]
  -[CKTranscriptCollectionViewController topEffectView]
  -[CKTranscriptCollectionViewController deleteSelectedChatItems:]
  -[CKTranscriptCollectionViewController hideTranscriptTimestampsIfNeeded]
  -[CKTranscriptCollectionViewController setTranscriptIdentifier:]
  -[CKTranscriptCollectionViewController stopFullscreenEffect]
  -[CKTranscriptCollectionViewController deleteChatItems:sender:]
  -[CKTranscriptCollectionViewController loadEarlierMessagesForConversation]
  -[CKTranscriptCollectionViewController loadRecentMessagesForConversation]
  -[CKTranscriptCollectionViewController overrideCurrentFrameMapForLayout:]
  -[CKTranscriptCollectionViewController pluginPlaybackManagerDidStopPlayback:]
  -[CKTranscriptCollectionViewController updateTranscript:animated:completion:]
  -[CKTranscriptCollectionViewController isShowingTranscriptTimestamps]
  -[CKTranscriptCollectionViewController showTrascriptTimestamps]
  -[CKTranscriptCollectionViewController associatedChatItems]
  -[CKTranscriptCollectionViewController fullscreenEffectManager]
  -[CKTranscriptCollectionViewController isPerformingRegenerateOrReloadOnlyUpdate]
  -[CKTranscriptCollectionViewController snapshotOfPluginBeingReplacedByBreadcrumb]
  -[CKTranscriptCollectionViewController selectChatItem:]
  -[CKTranscriptCollectionViewController _balloonHorizontalOffsetForParentChatItem:contentAlignmentRect:responsibleChatItems:individualOffsets:]
  -[CKTranscriptCollectionViewController __im_ff_isNewAudioMessageFlowEnabled]
  -[CKTranscriptCollectionViewController scrollViewDidEndDecelerating:]
  -[CKTranscriptCollectionViewController balloonViewLongTouched:]
  -[CKTranscriptCollectionViewController balloonViewShowInlineReply:]
  -[CKTranscriptCollectionViewController touchUpInsideNotifyAnywayButton:]
  -[CKTranscriptCollectionViewController touchUpInsideCellFailureButton:]
  -[CKTranscriptCollectionViewController touchUpInsideCellStatusButton:]
  -[CKTranscriptCollectionViewController touchUpInsideCellReportSpamButton:]
  -[CKTranscriptCollectionViewController touchUpInsideCellBlockContactButton:]
  -[CKTranscriptCollectionViewController shouldUseOpaqueMask]
  -[CKTranscriptCollectionViewController configureSpeakerButtonCell:forItemAtIndexPath:]
  -[CKTranscriptCollectionViewController viewDidDisappear:]
  -[CKTranscriptCollectionViewController balloonViewTapped:withModifierFlags:selectedText:]
  -[CKTranscriptCollectionViewController balloonViewDoubleTapped:]
  -[CKTranscriptCollectionViewController dragInteractionDelegate]
  -[CKTranscriptCollectionViewController contentAnimationPauseReasons]
  -[CKTranscriptCollectionViewController _hideBalloonViewIfNecessaryForCell:indexPath:]
  -[CKTranscriptCollectionViewController transitioningFromComposing]
  -[CKTranscriptCollectionViewController pluginSnapshots]
  -[CKTranscriptCollectionViewController hiddenBalloonViews]
  -[CKTranscriptCollectionViewController updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:]
  -[CKTranscriptCollectionViewController effectManager:didStartEffect:]
  -[CKTranscriptCollectionViewController effectManager:didStopEffect:]
  -[CKTranscriptCollectionViewController _canUseOpaqueMask]
  -[CKTranscriptCollectionViewController stopSuppressingSoundsForBulletinMessagesWithChatItems:]
  -[CKTranscriptCollectionViewController _sanitizeInsertedIndices:inChatItems:withIMChatItems:]
  -[CKTranscriptCollectionViewController chatItemWithIMChatItem:traitCollection:]
  -[CKTranscriptCollectionViewController shouldPresentHawkingPromptForChatItem:]
  -[CKTranscriptCollectionViewController balloonMaxWidth]
  -[CKTranscriptCollectionViewController parentControllerDidBecomeActive]
  -[CKTranscriptCollectionViewController overrideTargetFrameMapForLayout:]
  -[CKTranscriptCollectionViewController __im_ff_commSafetyUIEnabled]
  -[CKTranscriptCollectionViewController cellForChatItem:]
  -[CKTranscriptCollectionViewController printTranscript]
  -[CKTranscriptCollectionViewController _canShowWhileLocked]
  -[CKTranscriptCollectionViewController _shouldScrollToBottomOrReplyButton:insertedUnreadMessage:insertedLocalUnsentChatItem:]
  -[CKTranscriptCollectionViewController _updateTranscriptChatItemsWithoutAnimation:]
  -[CKTranscriptCollectionViewController copySelectedChatItemsToPasteboard]
  -[CKTranscriptCollectionViewController _updatePluginPlaybackManagerForInsertedChatItems:]
  -[CKTranscriptCollectionViewController _indicesOfReplyChatItemsToInsertWithoutFading:inserted:outInsertIndices:]
  -[CKTranscriptCollectionViewController _messageParents]
  -[CKTranscriptCollectionViewController cellForAssociatedChatItem:]
  -[CKTranscriptCollectionViewController _indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading:inserted:removed:outInsertIndices:outRemoveIndices:]


CKConversationListCollectionViewConversationCell : CKConversationListEmbeddedCollectionViewCell <CKConversationListCellDelegate, CKConversationListCell>
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  NSObject<CKConversationListCollectionViewCellDelegate> *delegate
 @property  BOOL shouldHidePreviewSummary
 @property  _CKCollectionViewTapGestureRecognizer *avatarViewTapGestureRecognizer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKConversationListCollectionViewConversationCell cellHeightForDisplayScale:]
  +[CKConversationListCollectionViewConversationCell identifierForConversation:]
  +[CKConversationListCollectionViewConversationCell embeddedTableViewCellClass]
  +[CKConversationListCollectionViewConversationCell conversationCellClassForCurrentSizeCategory]
  +[CKConversationListCollectionViewConversationCell reuseIdentifier]

  // instance methods
  -[CKConversationListCollectionViewConversationCell .cxx_destruct]
  -[CKConversationListCollectionViewConversationCell avatarView]
  -[CKConversationListCollectionViewConversationCell layoutSubviews]
  -[CKConversationListCollectionViewConversationCell marginInsets]
  -[CKConversationListCollectionViewConversationCell setDelegate:]
  -[CKConversationListCollectionViewConversationCell updateContentsForConversation:]
  -[CKConversationListCollectionViewConversationCell initWithFrame:]
  -[CKConversationListCollectionViewConversationCell setMarginInsets:]
  -[CKConversationListCollectionViewConversationCell delegate]
  -[CKConversationListCollectionViewConversationCell setEditingMode:animated:]
  -[CKConversationListCollectionViewConversationCell embeddedConversationTableViewCell]
  -[CKConversationListCollectionViewConversationCell forceUnreadIndicatorVisibility:forConversation:animated:]
  -[CKConversationListCollectionViewConversationCell avatarViewTapGestureRecognizer]
  -[CKConversationListCollectionViewConversationCell setAvatarViewTapGestureRecognizer:]
  -[CKConversationListCollectionViewConversationCell didHoverOverCell:]
  -[CKConversationListCollectionViewConversationCell widthForDeterminingAvatarVisibility]
  -[CKConversationListCollectionViewConversationCell avatarHeaderWasTappedForConversation:inCell:]
  -[CKConversationListCollectionViewConversationCell avatarView:shouldShowContact:]
  -[CKConversationListCollectionViewConversationCell selectedDeleteButtonForConversation:inCell:]
  -[CKConversationListCollectionViewConversationCell setShouldHidePreviewSummary:]
  -[CKConversationListCollectionViewConversationCell updateContentsForConversation:fastPreview:]
  -[CKConversationListCollectionViewConversationCell shouldHidePreviewSummary]


CKConversationListEmbeddedStandardTableViewCell : CKConversationListStandardCell <CKConversationListEmbeddedTableViewCellProtocol>
 @property  NSObject<CKConversationListCellDelegate> *delegate
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  BOOL shouldHidePreviewSummary
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} containerBounds
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKConversationListEmbeddedStandardTableViewCell reuseIdentifier]

  // instance methods
  -[CKConversationListEmbeddedStandardTableViewCell hitTest:withEvent:]
  -[CKConversationListEmbeddedStandardTableViewCell containerBounds]
  -[CKConversationListEmbeddedStandardTableViewCell marginInsets]
  -[CKConversationListEmbeddedStandardTableViewCell prepareForReuse]
  -[CKConversationListEmbeddedStandardTableViewCell setMarginInsets:]
  -[CKConversationListEmbeddedStandardTableViewCell initWithStyle:reuseIdentifier:]
  -[CKConversationListEmbeddedStandardTableViewCell chevronImageView]
  -[CKConversationListEmbeddedStandardTableViewCell setContainerBounds:]


CKConversationListEmbeddedLargeTextTableViewCell : CKConversationListLargeTextCell <CKConversationListEmbeddedTableViewCellProtocol>
 @property  NSObject<CKConversationListCellDelegate> *delegate
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  BOOL shouldHidePreviewSummary
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} containerBounds
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKConversationListEmbeddedLargeTextTableViewCell reuseIdentifier]

  // instance methods
  -[CKConversationListEmbeddedLargeTextTableViewCell hitTest:withEvent:]
  -[CKConversationListEmbeddedLargeTextTableViewCell avatarView]
  -[CKConversationListEmbeddedLargeTextTableViewCell containerBounds]
  -[CKConversationListEmbeddedLargeTextTableViewCell marginInsets]
  -[CKConversationListEmbeddedLargeTextTableViewCell setMarginInsets:]
  -[CKConversationListEmbeddedLargeTextTableViewCell forceUnreadIndicatorVisibility:forConversation:animated:]
  -[CKConversationListEmbeddedLargeTextTableViewCell avatarView:shouldShowContact:]
  -[CKConversationListEmbeddedLargeTextTableViewCell setContainerBounds:]


_CKCollectionViewTapGestureRecognizer : UITapGestureRecognizer
 @property  NSString *originatingItemIdentifier

  // instance methods
  -[_CKCollectionViewTapGestureRecognizer .cxx_destruct]
  -[_CKCollectionViewTapGestureRecognizer originatingItemIdentifier]
  -[_CKCollectionViewTapGestureRecognizer setOriginatingItemIdentifier:]


CKOrganicTranscriptBalloonCell : CKTranscriptBalloonCell
 @property  CKOrganicImageLayoutRecipe *layoutRecipe

  // instance methods
  -[CKOrganicTranscriptBalloonCell hitTest:withEvent:]
  -[CKOrganicTranscriptBalloonCell .cxx_destruct]
  -[CKOrganicTranscriptBalloonCell layoutRecipe]
  -[CKOrganicTranscriptBalloonCell setLayoutRecipe:]
  -[CKOrganicTranscriptBalloonCell layoutOffset]
  -[CKOrganicTranscriptBalloonCell configureForChatItem:context:]
  -[CKOrganicTranscriptBalloonCell layoutSubviewsForAlignmentContents]


CKAnimatedEmojiMessagePartChatItem : CKAttachmentMessagePartChatItem
  // instance methods
  -[CKAnimatedEmojiMessagePartChatItem initWithIMChatItem:maxWidth:]


CKContactBalloonView : CKColoredBalloonView <CKContactBalloonViewProtocol>
 @property  UIImageView *chevron
 @property  UIImageView *contactImageView
 @property  UILabel *nameLabel
 @property  UILabel *organizationLabel
 @property  CKMediaObject *mediaObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKContactBalloonView setMediaObject:]
  -[CKContactBalloonView chevron]
  -[CKContactBalloonView prepareForDisplay]
  -[CKContactBalloonView .cxx_destruct]
  -[CKContactBalloonView mediaObject]
  -[CKContactBalloonView layoutSubviews]
  -[CKContactBalloonView configureForComposition:]
  -[CKContactBalloonView contactImageView]
  -[CKContactBalloonView setNameLabel:]
  -[CKContactBalloonView setContactImageView:]
  -[CKContactBalloonView prepareForReuse]
  -[CKContactBalloonView configureForMessagePart:]
  -[CKContactBalloonView initWithFrame:]
  -[CKContactBalloonView _truncateNameIfNeeded:]
  -[CKContactBalloonView setChevron:]
  -[CKContactBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKContactBalloonView nameLabel]
  -[CKContactBalloonView alignmentRectInsets]
  -[CKContactBalloonView addOverlaySubview:]
  -[CKContactBalloonView organizationLabel]
  -[CKContactBalloonView configureForMediaObject:previewWidth:orientation:]
  -[CKContactBalloonView setOrganizationLabel:]
  -[CKContactBalloonView contactImageWidth]


CKFullScreenEffectMediaObject : CKMediaObject
  // instance methods
  -[CKFullScreenEffectMediaObject initWithFullScreenEffectAudioFileURL:]
  -[CKFullScreenEffectMediaObject fileURL]
  -[CKFullScreenEffectMediaObject .cxx_destruct]


CKFullScreenEffect : NSObject <CKAudioControllerDelegate>
 @property  BOOL triggeredByResponseKit
 @property  BOOL messageOrientation
 @property  NSString *identifier
 @property  CKMessagePartChatItem *triggeringChatItem
 @property  <CKFullScreenEffectDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKFullScreenEffect tapBackFilter]
  +[CKFullScreenEffect stickerFilter]
  +[CKFullScreenEffect _monochromeDimmingFilterWithType:]
  +[CKFullScreenEffect bigEmojiFilter]

  // instance methods
  -[CKFullScreenEffect _filterTypeForCell:caresAboutOrientation:orientation:]
  -[CKFullScreenEffect _isPlaySoundEnabled]
  -[CKFullScreenEffect messageFilters]
  -[CKFullScreenEffect animateFiltersForCell:]
  -[CKFullScreenEffect _supportsSoundEffects]
  -[CKFullScreenEffect soundEffectFileURL]
  -[CKFullScreenEffect soundEffectHasHapticTrack]
  -[CKFullScreenEffect _audioSessionOptionsWillChange:]
  -[CKFullScreenEffect _didPrepareSoundEffect]
  -[CKFullScreenEffect _ensureAudioPlayer]
  -[CKFullScreenEffect messageOrientation]
  -[CKFullScreenEffect triggeredByResponseKit]
  -[CKFullScreenEffect backgroundColor]
  -[CKFullScreenEffect .cxx_destruct]
  -[CKFullScreenEffect audioController:mediaObjectProgressDidChange:currentTime:duration:]
  -[CKFullScreenEffect setDelegate:]
  -[CKFullScreenEffect audioController:didPrepareMediaObjectToPlay:successfully:]
  -[CKFullScreenEffect identifier]
  -[CKFullScreenEffect delegate]
  -[CKFullScreenEffect effectViewClass]
  -[CKFullScreenEffect setIdentifier:]
  -[CKFullScreenEffect stopSoundEffect]
  -[CKFullScreenEffect dealloc]
  -[CKFullScreenEffect applyMessageFiltersToCells:]
  -[CKFullScreenEffect applyMessageFiltersToTriggeringCell:]
  -[CKFullScreenEffect isForegroundEffect]
  -[CKFullScreenEffect shouldDrawOverNavigationBar]
  -[CKFullScreenEffect triggeringChatItem]
  -[CKFullScreenEffect playSoundEffect]
  -[CKFullScreenEffect setMessageOrientation:]
  -[CKFullScreenEffect setTriggeredByResponseKit:]
  -[CKFullScreenEffect setTriggeringChatItem:]
  -[CKFullScreenEffect effectIsDark]
  -[CKFullScreenEffect prepareSoundEffect]
  -[CKFullScreenEffect layerCount]
  -[CKFullScreenEffect clearMessageFiltersFromCells:]
  -[CKFullScreenEffect duration]


CKFullscreenEffectMessageFilter : NSObject
 @property  int type
 @property  int direction
 @property  NSArray *balloonFilters
 @property  NSArray *balloonBackdropFilters
 @property  CAFilter *balloonCompositingFilter
 @property  double balloonAlpha
 @property  double contentAlpha
 @property  CAFilter *textCompositingFilter
 @property  UIColor *textColor

  // instance methods
  -[CKFullscreenEffectMessageFilter direction]
  -[CKFullscreenEffectMessageFilter contentAlpha]
  -[CKFullscreenEffectMessageFilter setContentAlpha:]
  -[CKFullscreenEffectMessageFilter setBalloonFilters:]
  -[CKFullscreenEffectMessageFilter setBalloonAlpha:]
  -[CKFullscreenEffectMessageFilter setBalloonBackdropFilters:]
  -[CKFullscreenEffectMessageFilter setBalloonCompositingFilter:]
  -[CKFullscreenEffectMessageFilter setTextCompositingFilter:]
  -[CKFullscreenEffectMessageFilter setDirection:]
  -[CKFullscreenEffectMessageFilter setType:]
  -[CKFullscreenEffectMessageFilter .cxx_destruct]
  -[CKFullscreenEffectMessageFilter textColor]
  -[CKFullscreenEffectMessageFilter init]
  -[CKFullscreenEffectMessageFilter setTextColor:]
  -[CKFullscreenEffectMessageFilter balloonFilters]
  -[CKFullscreenEffectMessageFilter initWithDictionary:]
  -[CKFullscreenEffectMessageFilter type]
  -[CKFullscreenEffectMessageFilter textCompositingFilter]
  -[CKFullscreenEffectMessageFilter balloonAlpha]
  -[CKFullscreenEffectMessageFilter balloonBackdropFilters]
  -[CKFullscreenEffectMessageFilter balloonCompositingFilter]


CKNumberChangedChatItem : CKStampChatItem
  // instance methods
  -[CKNumberChangedChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKNumberChangedChatItem loadTranscriptText]


CKBrowserDragControllerTarget : NSObject
 @property  {CGPoint=dd} screenCoordiante
 @property  {CGSize=dd} initialSize
 @property  double scale
 @property  double meshScaleFactor
 @property  double rotation
 @property  unsigned long associatedLayoutIntent

  // class methods
  +[CKBrowserDragControllerTarget targetWithScreenCoordiante:initialSize:scale:meshScaleFactor:rotation:associatedLayoutIntent:]

  // instance methods
  -[CKBrowserDragControllerTarget setRotation:]
  -[CKBrowserDragControllerTarget setScreenCoordiante:]
  -[CKBrowserDragControllerTarget setInitialSize:]
  -[CKBrowserDragControllerTarget setMeshScaleFactor:]
  -[CKBrowserDragControllerTarget associatedLayoutIntent]
  -[CKBrowserDragControllerTarget setAssociatedLayoutIntent:]
  -[CKBrowserDragControllerTarget rotation]
  -[CKBrowserDragControllerTarget initialSize]
  -[CKBrowserDragControllerTarget screenCoordiante]
  -[CKBrowserDragControllerTarget setScale:]
  -[CKBrowserDragControllerTarget meshScaleFactor]
  -[CKBrowserDragControllerTarget scale]


CKHyperlinkBalloonView : CKTextBalloonView <UITextViewDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKHyperlinkBalloonView _gestureRecognizer:canBePreventedByGestureRecognizer:]
  -[CKHyperlinkBalloonView textView:shouldInteractWithURL:inRange:]
  -[CKHyperlinkBalloonView initWithFrame:]


CKLivePhotoBalloonView : CKImageBalloonView
 @property  PHLivePhotoView *livePhotoView
 @property  PHLivePhoto *livePhoto

  // instance methods
  -[CKLivePhotoBalloonView livePhoto]
  -[CKLivePhotoBalloonView setLivePhoto:]
  -[CKLivePhotoBalloonView setLivePhotoView:]
  -[CKLivePhotoBalloonView .cxx_destruct]
  -[CKLivePhotoBalloonView layoutSubviews]
  -[CKLivePhotoBalloonView isIrisAsset]
  -[CKLivePhotoBalloonView initWithFrame:]
  -[CKLivePhotoBalloonView livePhotoView]
  -[CKLivePhotoBalloonView setIsIrisAsset:]
  -[CKLivePhotoBalloonView configureForMediaObject:previewWidth:orientation:hasInvisibleInkEffect:]


CKGroupPhotoCell : CKDetailsCell <CKDetailsCell>
 @property  UIView *groupView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKGroupPhotoCell shouldHighlight]
  +[CKGroupPhotoCell reuseIdentifier]

  // instance methods
  -[CKGroupPhotoCell .cxx_destruct]
  -[CKGroupPhotoCell layoutSubviews]
  -[CKGroupPhotoCell groupView]
  -[CKGroupPhotoCell prepareForReuse]
  -[CKGroupPhotoCell initWithStyle:reuseIdentifier:]
  -[CKGroupPhotoCell setGroupView:]


CKMacRecipientsController : CKViewController <CNComposeRecipientTextViewDelegate, CKDetailsContactsManagerDelegate>
 @property  STConversationContext *currentConversationContext
 @property  CKDetailsContactsManager *contactsManager
 @property  BOOL allowedByScreenTime
 @property  UIView *detailsPopoverPresentationSourceView
 @property  UIScrollView *toFieldScrollView
 @property  CKManualUpdater *addressBookNotificationUpdater
 @property  unsigned long numberOfRowsInToField
 @property  CKConversation *conversation
 @property  CNComposeRecipientTextView *toField
 @property  <CKMacRecipientsControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMacRecipientsController toField]
  -[CKMacRecipientsController contactsManager]
  -[CKMacRecipientsController viewWillLayoutSubviews]
  -[CKMacRecipientsController isEditable]
  -[CKMacRecipientsController setToFieldScrollView:]
  -[CKMacRecipientsController toFieldScrollView]
  -[CKMacRecipientsController _updateToFieldFrame]
  -[CKMacRecipientsController detailsToolbarItemFrame]
  -[CKMacRecipientsController setDetailsPopoverPresentationSourceView:]
  -[CKMacRecipientsController detailsPopoverPresentationSourceView]
  -[CKMacRecipientsController _reloadCurrentRecipientData]
  -[CKMacRecipientsController innermostToolbarItemFrame]
  -[CKMacRecipientsController faceTimeStartOrLaunchCallToolbarItemFrame]
  -[CKMacRecipientsController faceTimeJoinCallToolbarItemFrame]
  -[CKMacRecipientsController _notifyDelegatesToFieldHeightHasChanged]
  -[CKMacRecipientsController _showContactCardForEntity:sourceView:]
  -[CKMacRecipientsController .cxx_destruct]
  -[CKMacRecipientsController initWithConversation:]
  -[CKMacRecipientsController addRecipients:]
  -[CKMacRecipientsController viewDidLoad]
  -[CKMacRecipientsController setDelegate:]
  -[CKMacRecipientsController preferredMacToolbarHeight]
  -[CKMacRecipientsController currentConversationContext]
  -[CKMacRecipientsController allowedByScreenTime]
  -[CKMacRecipientsController setNumberOfRowsInToField:]
  -[CKMacRecipientsController _handleConversationPreferredServiceDidChangeNotification:]
  -[CKMacRecipientsController _handleAddressBookChangedNotification:]
  -[CKMacRecipientsController _handleAddressBookPartialChangedNotification:]
  -[CKMacRecipientsController setAddressBookNotificationUpdater:]
  -[CKMacRecipientsController setCurrentConversationContext:]
  -[CKMacRecipientsController numberOfRowsInToField]
  -[CKMacRecipientsController _toolbarHeightForNumberOfRows:]
  -[CKMacRecipientsController recipients]
  -[CKMacRecipientsController updateScreenTimePolicy]
  -[CKMacRecipientsController _atomPresentationOptionsForRecipient:]
  -[CKMacRecipientsController _shouldEnableScrolling]
  -[CKMacRecipientsController addressBookNotificationUpdater]
  -[CKMacRecipientsController handlesForScreenTimePolicyCheck]
  -[CKMacRecipientsController reset]
  -[CKMacRecipientsController setAllowedByScreenTime:]
  -[CKMacRecipientsController composeRecipientView:disambiguateRecipientForAtom:]
  -[CKMacRecipientsController composeRecipientView:contextMenuConfigurationForAtom:]
  -[CKMacRecipientsController presentationOptionsForRecipient:]
  -[CKMacRecipientsController contactsManagerViewModelsDidChange:]
  -[CKMacRecipientsController setContactsManager:]
  -[CKMacRecipientsController delegate]
  -[CKMacRecipientsController setConversation:]
  -[CKMacRecipientsController refreshRecipients]
  -[CKMacRecipientsController dealloc]
  -[CKMacRecipientsController conversation]
  -[CKMacRecipientsController loadView]
  -[CKMacRecipientsController observeValueForKeyPath:ofObject:change:context:]


CKMessageEntryRecordedAudioView : UIView <CKAudioControllerDelegate>
 @property  UIButton *playPauseDeleteButton
 @property  UIVisualEffectView *blurView
 @property  UIImageView *balloonImageView
 @property  CKAudioController *audioController
 @property  UILabel *timeLabel
 @property  UIImage *waveformImage
 @property  UIImageView *waveformImageView
 @property  double time
 @property  NSString *timeFormat
 @property  CKAudioMediaObject *audioMediaObject
 @property  BOOL isPlaying
 @property  <CKMessageEntryRecordedAudioViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMessageEntryRecordedAudioView blurView]
  -[CKMessageEntryRecordedAudioView play]
  -[CKMessageEntryRecordedAudioView isPlaying]
  -[CKMessageEntryRecordedAudioView setTime:]
  -[CKMessageEntryRecordedAudioView setAudioMediaObject:]
  -[CKMessageEntryRecordedAudioView waveformImage]
  -[CKMessageEntryRecordedAudioView handlePlayPauseDelete:]
  -[CKMessageEntryRecordedAudioView balloonImageView]
  -[CKMessageEntryRecordedAudioView setBalloonImageView:]
  -[CKMessageEntryRecordedAudioView setWaveformImageView:]
  -[CKMessageEntryRecordedAudioView waveformImageView]
  -[CKMessageEntryRecordedAudioView updatePlayPauseDeleteButton]
  -[CKMessageEntryRecordedAudioView audioMediaObject]
  -[CKMessageEntryRecordedAudioView setWaveformImage:]
  -[CKMessageEntryRecordedAudioView updateTimeString]
  -[CKMessageEntryRecordedAudioView playPauseDeleteButton]
  -[CKMessageEntryRecordedAudioView .cxx_destruct]
  -[CKMessageEntryRecordedAudioView setPlayPauseDeleteButton:]
  -[CKMessageEntryRecordedAudioView setFrame:]
  -[CKMessageEntryRecordedAudioView timeFormat]
  -[CKMessageEntryRecordedAudioView layoutSubviews]
  -[CKMessageEntryRecordedAudioView stop]
  -[CKMessageEntryRecordedAudioView audioController:mediaObjectDidFinishPlaying:]
  -[CKMessageEntryRecordedAudioView audioControllerDidPause:]
  -[CKMessageEntryRecordedAudioView audioController:mediaObjectProgressDidChange:currentTime:duration:]
  -[CKMessageEntryRecordedAudioView audioControllerDidStop:]
  -[CKMessageEntryRecordedAudioView audioControllerPlayingDidChange:]
  -[CKMessageEntryRecordedAudioView setDelegate:]
  -[CKMessageEntryRecordedAudioView pause]
  -[CKMessageEntryRecordedAudioView setTimeLabel:]
  -[CKMessageEntryRecordedAudioView sizeThatFits:]
  -[CKMessageEntryRecordedAudioView time]
  -[CKMessageEntryRecordedAudioView setTimeFormat:]
  -[CKMessageEntryRecordedAudioView timeLabel]
  -[CKMessageEntryRecordedAudioView setBlurView:]
  -[CKMessageEntryRecordedAudioView initWithFrame:]
  -[CKMessageEntryRecordedAudioView audioController]
  -[CKMessageEntryRecordedAudioView delegate]
  -[CKMessageEntryRecordedAudioView dealloc]
  -[CKMessageEntryRecordedAudioView setAudioController:]
  -[CKMessageEntryRecordedAudioView updateProgress]
  -[CKMessageEntryRecordedAudioView __im_ff_systemImageAdoptionEnabled]
  -[CKMessageEntryRecordedAudioView __im_ff_isNewAudioMessageFlowEnabled]


CKInlineAudioReplyButtonController : NSObject
 @property  UIButton *startButton
 @property  UIButton *stopButton
 @property  double holdThreshold
 @property  double touchDownTime
 @property  BOOL started
 @property  <CKInlineAudioReplyButtonDelegate> *delegate

  // instance methods
  -[CKInlineAudioReplyButtonController setStarted:]
  -[CKInlineAudioReplyButtonController startButton]
  -[CKInlineAudioReplyButtonController .cxx_destruct]
  -[CKInlineAudioReplyButtonController setHoldThreshold:]
  -[CKInlineAudioReplyButtonController initWithStartButton:stopButton:]
  -[CKInlineAudioReplyButtonController touchDownInStartButton:event:]
  -[CKInlineAudioReplyButtonController setStopButton:]
  -[CKInlineAudioReplyButtonController touchUpInStartButton:event:]
  -[CKInlineAudioReplyButtonController touchUpOutsideStartButton:event:]
  -[CKInlineAudioReplyButtonController touchDragEnter:]
  -[CKInlineAudioReplyButtonController isStarted]
  -[CKInlineAudioReplyButtonController touchUpInStopButton:]
  -[CKInlineAudioReplyButtonController touchDragExit:]
  -[CKInlineAudioReplyButtonController setStartButton:]
  -[CKInlineAudioReplyButtonController setTouchDownTime:]
  -[CKInlineAudioReplyButtonController touchDownTime]
  -[CKInlineAudioReplyButtonController holdThreshold]
  -[CKInlineAudioReplyButtonController setDelegate:]
  -[CKInlineAudioReplyButtonController delegate]
  -[CKInlineAudioReplyButtonController dealloc]
  -[CKInlineAudioReplyButtonController stopButton]


CKQuickSaveButton : UIView
 @property  unsigned long state
 @property  BOOL animating
 @property  {UIEdgeInsets=dddd} contentEdgeInsets
 @property  UIButton *button
 @property  UIImageView *imageView
 @property  UIView *backgroundView
 @property  CAShapeLayer *borderLayer
 @property  NSString *currentAnimationIdentifier
 @property  NSMutableArray *deferredAnimationIdentifiers
 @property  NSMutableDictionary *deferredConfigurationStates
 @property  <CKQuickSaveButtonDelegate> *delegate
 @property  <CKQuickSaveButtonAnimationDelegate> *animationDelegate

  // instance methods
  -[CKQuickSaveButton hitTest:withEvent:]
  -[CKQuickSaveButton imageView]
  -[CKQuickSaveButton initWithCoder:]
  -[CKQuickSaveButton borderLayer]
  -[CKQuickSaveButton contentEdgeInsets]
  -[CKQuickSaveButton .cxx_destruct]
  -[CKQuickSaveButton layoutSubviews]
  -[CKQuickSaveButton button]
  -[CKQuickSaveButton setContentEdgeInsets:]
  -[CKQuickSaveButton _buttonTouchUpInside]
  -[CKQuickSaveButton _buttonTouchDown]
  -[CKQuickSaveButton _buttonTouchCanceled]
  -[CKQuickSaveButton currentAnimationIdentifier]
  -[CKQuickSaveButton setDelegate:]
  -[CKQuickSaveButton configureForState:animated:identifier:wasDeferred:]
  -[CKQuickSaveButton updateImageViewFrameForContentEdgeInsets]
  -[CKQuickSaveButton deferredAnimationIdentifiers]
  -[CKQuickSaveButton _imageForState:]
  -[CKQuickSaveButton deferredConfigurationStates]
  -[CKQuickSaveButton setCurrentAnimationIdentifier:]
  -[CKQuickSaveButton _contentEdgeInsetsForState:]
  -[CKQuickSaveButton setDeferredAnimationIdentifiers:]
  -[CKQuickSaveButton setState:]
  -[CKQuickSaveButton isAnimating]
  -[CKQuickSaveButton setDeferredConfigurationStates:]
  -[CKQuickSaveButton init]
  -[CKQuickSaveButton setState:animated:]
  -[CKQuickSaveButton setAnimating:]
  -[CKQuickSaveButton setAnimationDelegate:]
  -[CKQuickSaveButton animationDelegate]
  -[CKQuickSaveButton state]
  -[CKQuickSaveButton initWithFrame:]
  -[CKQuickSaveButton delegate]
  -[CKQuickSaveButton initWithInitialState:]
  -[CKQuickSaveButton backgroundView]


CKAggregateAcknowledgmentChatItem : CKAssociatedMessageChatItem
 @property  BOOL overrideBalloonOrientationForPhotoGrid
 @property  NSArray *acknowledgments
 @property  long long latestAcknowledgmentType
 @property  long long fromMeAcknowledgmentType
 @property  BOOL includesFromMe
 @property  BOOL latestIsFromMe
 @property  BOOL includesMultiple
 @property  BOOL balloonOrientation
 @property  NSString *acknowledgmentImageName
 @property  UIColor *acknowledgmentImageColor
 @property  Class balloonViewClass

  // instance methods
  -[CKAggregateAcknowledgmentChatItem transcriptOrientation]
  -[CKAggregateAcknowledgmentChatItem _imAggregateAcknowledgmentChatItem]
  -[CKAggregateAcknowledgmentChatItem contentInsets]
  -[CKAggregateAcknowledgmentChatItem initWithIMChatItem:maxWidth:]
  -[CKAggregateAcknowledgmentChatItem balloonOrientation]
  -[CKAggregateAcknowledgmentChatItem balloonViewClass]
  -[CKAggregateAcknowledgmentChatItem latestIsFromMe]
  -[CKAggregateAcknowledgmentChatItem isEqual:]
  -[CKAggregateAcknowledgmentChatItem includesFromMe]
  -[CKAggregateAcknowledgmentChatItem includesMultiple]
  -[CKAggregateAcknowledgmentChatItem latestAcknowledgmentType]
  -[CKAggregateAcknowledgmentChatItem overrideBalloonOrientationForPhotoGrid]
  -[CKAggregateAcknowledgmentChatItem fromMeAcknowledgmentType]
  -[CKAggregateAcknowledgmentChatItem setOverrideBalloonOrientationForPhotoGrid:]
  -[CKAggregateAcknowledgmentChatItem acknowledgmentImageName]
  -[CKAggregateAcknowledgmentChatItem acknowledgments]
  -[CKAggregateAcknowledgmentChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKAggregateAcknowledgmentChatItem acknowledgmentImageColor]
  -[CKAggregateAcknowledgmentChatItem cellClass]
  -[CKAggregateAcknowledgmentChatItem associatedChatItemGUID]


CKConversationListCellLayout : NSObject
 @property  BOOL invalid
 @property  double contentViewWidth
 @property  double widthForDeterminingAvatarVisibility
 @property  double lastUsedDisplayScale
 @property  double cellHeight
 @property  double tableViewWidth
 @property  BOOL shouldShowChevron
 @property  BOOL shouldShowAvatarView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} summaryFrameIfMuted
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} summaryFrameIfNotMuted
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} dateFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} senderFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} chevronFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} muteIconFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} unreadFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} avatarFrame
 @property  double summaryLabelCapFrameYOrigin
 @property  double trailingLayoutMarginSize

  // class methods
  +[CKConversationListCellLayout sharedInstance]

  // instance methods
  -[CKConversationListCellLayout invalid]
  -[CKConversationListCellLayout setInvalid:]
  -[CKConversationListCellLayout senderFrame]
  -[CKConversationListCellLayout shouldShowAvatarView]
  -[CKConversationListCellLayout unreadFrame]
  -[CKConversationListCellLayout cellHeightForDisplayScale:]
  -[CKConversationListCellLayout tableViewWidth]
  -[CKConversationListCellLayout setShouldShowChevron:]
  -[CKConversationListCellLayout setTableViewWidth:]
  -[CKConversationListCellLayout dateFrame]
  -[CKConversationListCellLayout init]
  -[CKConversationListCellLayout cellHeight]
  -[CKConversationListCellLayout lastUsedDisplayScale]
  -[CKConversationListCellLayout setLastUsedDisplayScale:]
  -[CKConversationListCellLayout shouldShowChevron]
  -[CKConversationListCellLayout setDateFrame:]
  -[CKConversationListCellLayout isValidForContentViewWidth:widthForDeterminingAvatarVisibility:]
  -[CKConversationListCellLayout markAsValidForContentViewWidth:widthForDeterminingAvatarVisibility:]
  -[CKConversationListCellLayout setShouldShowAvatarView:]
  -[CKConversationListCellLayout summaryFrameIfMuted]
  -[CKConversationListCellLayout setSummaryFrameIfMuted:]
  -[CKConversationListCellLayout summaryFrameIfNotMuted]
  -[CKConversationListCellLayout setSummaryFrameIfNotMuted:]
  -[CKConversationListCellLayout setSenderFrame:]
  -[CKConversationListCellLayout muteIconFrame]
  -[CKConversationListCellLayout setMuteIconFrame:]
  -[CKConversationListCellLayout setUnreadFrame:]
  -[CKConversationListCellLayout summaryLabelCapFrameYOrigin]
  -[CKConversationListCellLayout setSummaryLabelCapFrameYOrigin:]
  -[CKConversationListCellLayout trailingLayoutMarginSize]
  -[CKConversationListCellLayout setTrailingLayoutMarginSize:]
  -[CKConversationListCellLayout contentViewWidth]
  -[CKConversationListCellLayout setContentViewWidth:]
  -[CKConversationListCellLayout setWidthForDeterminingAvatarVisibility:]
  -[CKConversationListCellLayout setCellHeight:]
  -[CKConversationListCellLayout setAvatarFrame:]
  -[CKConversationListCellLayout invalidate]
  -[CKConversationListCellLayout avatarFrame]
  -[CKConversationListCellLayout widthForDeterminingAvatarVisibility]
  -[CKConversationListCellLayout chevronFrame]
  -[CKConversationListCellLayout setChevronFrame:]


CKDetailsSharedWithYouCheckboxCell : CKTranscriptDetailsResizableCell <CKDetailsCell>
 @property  UILabel *titleLabel
 @property  UISwitch *controlSwitch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsSharedWithYouCheckboxCell shouldHighlight]
  +[CKDetailsSharedWithYouCheckboxCell reuseIdentifier]

  // instance methods
  -[CKDetailsSharedWithYouCheckboxCell titleLabel]
  -[CKDetailsSharedWithYouCheckboxCell .cxx_destruct]
  -[CKDetailsSharedWithYouCheckboxCell setTitleLabel:]
  -[CKDetailsSharedWithYouCheckboxCell layoutSubviews]
  -[CKDetailsSharedWithYouCheckboxCell controlSwitch]
  -[CKDetailsSharedWithYouCheckboxCell sizeThatFits:]
  -[CKDetailsSharedWithYouCheckboxCell prepareForReuse]
  -[CKDetailsSharedWithYouCheckboxCell setControlSwitch:]
  -[CKDetailsSharedWithYouCheckboxCell _configureNewTitleLabel]
  -[CKDetailsSharedWithYouCheckboxCell _configureNewControlSwitch]
  -[CKDetailsSharedWithYouCheckboxCell initWithStyle:reuseIdentifier:]


CKTranscriptCollectionViewLayoutAttributes : UICollectionViewLayoutAttributes
 @property  CKChatItem *chatItem
 @property  {CGSize=dd} parentChatItemSize
 @property  double parentRotationOffset
 @property  {CATransform3D=dddddddddddddddd} contentTransform3D
 @property  BOOL insertingReply

  // instance methods
  -[CKTranscriptCollectionViewLayoutAttributes .cxx_destruct]
  -[CKTranscriptCollectionViewLayoutAttributes init]
  -[CKTranscriptCollectionViewLayoutAttributes isEqual:]
  -[CKTranscriptCollectionViewLayoutAttributes chatItem]
  -[CKTranscriptCollectionViewLayoutAttributes setChatItem:]
  -[CKTranscriptCollectionViewLayoutAttributes setAlphaOrFilterLevel:]
  -[CKTranscriptCollectionViewLayoutAttributes initWithLayoutAttributes:]
  -[CKTranscriptCollectionViewLayoutAttributes contentTransform3D]
  -[CKTranscriptCollectionViewLayoutAttributes setParentChatItemSize:]
  -[CKTranscriptCollectionViewLayoutAttributes copyWithZone:]
  -[CKTranscriptCollectionViewLayoutAttributes parentChatItemSize]
  -[CKTranscriptCollectionViewLayoutAttributes parentRotationOffset]
  -[CKTranscriptCollectionViewLayoutAttributes setParentRotationOffset:]
  -[CKTranscriptCollectionViewLayoutAttributes isInsertingReply]
  -[CKTranscriptCollectionViewLayoutAttributes setInsertingReply:]


CKAppMenuPresentationAnimator : NSObject <UIViewControllerAnimatedTransitioning>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAppMenuPresentationAnimator transitionDuration:]
  -[CKAppMenuPresentationAnimator animateTransition:]


CKPinnedConversationTailedActivityItemView : UIView <CKPinnedConversationActivityItemView>
 @property  CKPinnedConversationActivityItemViewBackdropLayer *backdropLayer
 @property  CAShapeLayer *backdropMaskShapeLayer
 @property  CKPinnedConversationActivityItemViewShadowLayer *broadShadowLayer
 @property  CKPinnedConversationActivityItemViewShadowLayer *tightShadowLayer
 @property  CAShapeLayer *contentViewStrokeLayer
 @property  UIView *contentView
 @property  double pillCornerRadius
 @property  {UIEdgeInsets=dddd} contentViewPadding
 @property  double contentViewHorizontalInsetForPillCornerRadius
 @property  long long contentViewContentMode
 @property  <CKPinnedConversationActivityItem> *activityItem
 @property  long long originationDirection
 @property  long long originationHorizontalDirection
 @property  {CGPoint=dd} originationPoint
 @property  double preferredTailAttachmentPointXCoordinate
 @property  {CGPoint=dd} tailAttachmentPoint
 @property  {CGSize=dd} parentAvatarViewSize
 @property  BOOL supportsActivityItemViewContentScale
 @property  long long activityItemViewContentScale
 @property  BOOL supportsAlignmentWithOriginationSubAvatarFrame
 @property  <CKPinnedConversationActivityItemViewDelegate> *activityItemViewDelegate

  // instance methods
  -[CKPinnedConversationTailedActivityItemView backdropLayer]
  -[CKPinnedConversationTailedActivityItemView setBackdropLayer:]
  -[CKPinnedConversationTailedActivityItemView traitCollectionDidChange:]
  -[CKPinnedConversationTailedActivityItemView _updateUserInterfaceStyles]
  -[CKPinnedConversationTailedActivityItemView activityItem]
  -[CKPinnedConversationTailedActivityItemView initWithActivityItem:contentView:needsContentViewStroke:]
  -[CKPinnedConversationTailedActivityItemView contentViewContentMode]
  -[CKPinnedConversationTailedActivityItemView activityItemToContactItemVerticalOverlap]
  -[CKPinnedConversationTailedActivityItemView setActivityItem:]
  -[CKPinnedConversationTailedActivityItemView originationDirection]
  -[CKPinnedConversationTailedActivityItemView setOriginationDirection:]
  -[CKPinnedConversationTailedActivityItemView originationHorizontalDirection]
  -[CKPinnedConversationTailedActivityItemView setOriginationHorizontalDirection:]
  -[CKPinnedConversationTailedActivityItemView originationPoint]
  -[CKPinnedConversationTailedActivityItemView setOriginationPoint:]
  -[CKPinnedConversationTailedActivityItemView preferredTailAttachmentPointXCoordinate]
  -[CKPinnedConversationTailedActivityItemView tailAttachmentPoint]
  -[CKPinnedConversationTailedActivityItemView tightShadowLayer]
  -[CKPinnedConversationTailedActivityItemView setPreferredTailAttachmentPointXCoordinate:]
  -[CKPinnedConversationTailedActivityItemView parentAvatarViewSize]
  -[CKPinnedConversationTailedActivityItemView setParentAvatarViewSize:]
  -[CKPinnedConversationTailedActivityItemView activityItemViewDelegate]
  -[CKPinnedConversationTailedActivityItemView supportsActivityItemViewContentScale]
  -[CKPinnedConversationTailedActivityItemView activityItemViewContentScale]
  -[CKPinnedConversationTailedActivityItemView setActivityItemViewContentScale:]
  -[CKPinnedConversationTailedActivityItemView broadShadowLayer]
  -[CKPinnedConversationTailedActivityItemView supportsAlignmentWithOriginationSubAvatarFrame]
  -[CKPinnedConversationTailedActivityItemView setActivityItemViewDelegate:]
  -[CKPinnedConversationTailedActivityItemView backdropMaskShapeLayer]
  -[CKPinnedConversationTailedActivityItemView setBackdropMaskShapeLayer:]
  -[CKPinnedConversationTailedActivityItemView setBroadShadowLayer:]
  -[CKPinnedConversationTailedActivityItemView setTightShadowLayer:]
  -[CKPinnedConversationTailedActivityItemView contentViewPadding]
  -[CKPinnedConversationTailedActivityItemView contentViewHorizontalInsetForPillCornerRadius]
  -[CKPinnedConversationTailedActivityItemView pillRect]
  -[CKPinnedConversationTailedActivityItemView .cxx_destruct]
  -[CKPinnedConversationTailedActivityItemView layoutSubviews]
  -[CKPinnedConversationTailedActivityItemView contentView]
  -[CKPinnedConversationTailedActivityItemView pillCornerRadius]
  -[CKPinnedConversationTailedActivityItemView sizeThatFits:]
  -[CKPinnedConversationTailedActivityItemView balloonTailWidth]
  -[CKPinnedConversationTailedActivityItemView contentViewStrokeLayer]
  -[CKPinnedConversationTailedActivityItemView setContentViewStrokeLayer:]
  -[CKPinnedConversationTailedActivityItemView tailAttachmentPointWithOutputForMinimumContinousAnchorX:maximumContinuousAnchorX:]
  -[CKPinnedConversationTailedActivityItemView balloonTailHeight]
  -[CKPinnedConversationTailedActivityItemView balloonCornerRadius]
  -[CKPinnedConversationTailedActivityItemView _pathForTailedBalloonSegmentWithStartPoint:endPoint:anchorPoint:originationHorizontalDirection:originationDirection:]
  -[CKPinnedConversationTailedActivityItemView balloonTailRadius]


CKTipKitTableViewCell : UITableViewCell
 @property  TPKContentView *tipKitContentView

  // class methods
  +[CKTipKitTableViewCell identifier]

  // instance methods
  -[CKTipKitTableViewCell .cxx_destruct]
  -[CKTipKitTableViewCell prepareForReuse]
  -[CKTipKitTableViewCell setTipKitContentView:]
  -[CKTipKitTableViewCell initWithStyle:reuseIdentifier:]
  -[CKTipKitTableViewCell tipKitContentView]


CKTranscriptModel : NSObject
 @property  CKConversation *conversation
 @property  NSArray *chatItems
 @property  NSDictionary *supplementaryKindToChatItemMap
 @property  <CKTranscriptModelDelegate> *delegate
 @property  NSDiffableDataSourceSnapshot *snapshot

  // class methods
  +[CKTranscriptModel transcriptSectionIdentifier]

  // instance methods
  -[CKTranscriptModel chatItems]
  -[CKTranscriptModel .cxx_destruct]
  -[CKTranscriptModel setDelegate:]
  -[CKTranscriptModel initWithConversation:delegate:]
  -[CKTranscriptModel snapshot]
  -[CKTranscriptModel delegate]
  -[CKTranscriptModel setConversation:]
  -[CKTranscriptModel setSupplementaryKindToChatItemMap:]
  -[CKTranscriptModel supplementaryKindToChatItemMap]
  -[CKTranscriptModel setChatItems:]
  -[CKTranscriptModel chatItemsWithIMChatItems:]
  -[CKTranscriptModel conversation]
  -[CKTranscriptModel chatItemWithIMChatItem:traitCollection:]
  -[CKTranscriptModel reload]


CKConversationListNewMessageCell : UITableViewCell
 @property  NSObject<CKConversationListCellDelegate> *delegate
 @property  CKConversation *conversation

  // class methods
  +[CKConversationListNewMessageCell identifier]

  // instance methods
  -[CKConversationListNewMessageCell _isCollapsed]
  -[CKConversationListNewMessageCell setSelected:animated:]
  -[CKConversationListNewMessageCell .cxx_destruct]
  -[CKConversationListNewMessageCell avatarView]
  -[CKConversationListNewMessageCell layoutSubviews]
  -[CKConversationListNewMessageCell _updateLabelVisibility]
  -[CKConversationListNewMessageCell updateWithForwardedConfigurationState:]
  -[CKConversationListNewMessageCell leadingLayoutMargin]
  -[CKConversationListNewMessageCell setDelegate:]
  -[CKConversationListNewMessageCell updateContentsForConversation:]
  -[CKConversationListNewMessageCell updateFontSize]
  -[CKConversationListNewMessageCell delegate]
  -[CKConversationListNewMessageCell setConversation:]
  -[CKConversationListNewMessageCell initWithStyle:reuseIdentifier:]
  -[CKConversationListNewMessageCell _boundsShouldCollapseContent:]
  -[CKConversationListNewMessageCell conversation]
  -[CKConversationListNewMessageCell _updateViewConfigurationsWithState:]
  -[CKConversationListNewMessageCell deleteButtonTapped]
  -[CKConversationListNewMessageCell showingEditControl]


CKAppContainerTitleView : _UINavigationBarTitleView
 @property  UIImageView *iconImageView
 @property  NSLayoutConstraint *iconWidthConstraint
 @property  NSLayoutConstraint *iconHeightConstraint
 @property  UILabel *label
 @property  UIButton *closeButton

  // instance methods
  -[CKAppContainerTitleView label]
  -[CKAppContainerTitleView setIconImageView:]
  -[CKAppContainerTitleView .cxx_destruct]
  -[CKAppContainerTitleView setup]
  -[CKAppContainerTitleView init]
  -[CKAppContainerTitleView setIconImage:]
  -[CKAppContainerTitleView iconWidthConstraint]
  -[CKAppContainerTitleView iconHeightConstraint]
  -[CKAppContainerTitleView setCloseButton:]
  -[CKAppContainerTitleView setIconHeightConstraint:]
  -[CKAppContainerTitleView setIconWidthConstraint:]
  -[CKAppContainerTitleView setLabel:]
  -[CKAppContainerTitleView iconImageView]
  -[CKAppContainerTitleView closeButton]


CKTranscriptBalloonCollectionViewCell : CKTranscriptCollectionViewCell
 @property  CKBalloonView *balloonView
 @property  long long animationPauseReasons

  // class methods
  +[CKTranscriptBalloonCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKTranscriptBalloonCollectionViewCell clearFilters]
  -[CKTranscriptBalloonCollectionViewCell setAnimationPauseReasons:]
  -[CKTranscriptBalloonCollectionViewCell .cxx_destruct]
  -[CKTranscriptBalloonCollectionViewCell layoutSubviews]
  -[CKTranscriptBalloonCollectionViewCell balloonView]
  -[CKTranscriptBalloonCollectionViewCell prepareForReuse]
  -[CKTranscriptBalloonCollectionViewCell addFilter:]
  -[CKTranscriptBalloonCollectionViewCell setBalloonView:]
  -[CKTranscriptBalloonCollectionViewCell _balloonViewForChatItem:]
  -[CKTranscriptBalloonCollectionViewCell dealloc]
  -[CKTranscriptBalloonCollectionViewCell animationPauseReasons]
  -[CKTranscriptBalloonCollectionViewCell configureForChatItem:context:]


CKPhotoTileBadgeView : UIView
 @property  UIView *_backgroundView
 @property  UIImageView *_badgeImageView
 @property  UILabel *_textLabel
 @property  UIButton *actionButton
 @property  BOOL enabled
 @property  BOOL selected

  // class methods
  +[CKPhotoTileBadgeView horizontalBadgeInset]
  +[CKPhotoTileBadgeView verticalBadgeInset]

  // instance methods
  -[CKPhotoTileBadgeView maximumSize]
  -[CKPhotoTileBadgeView _backgroundView]
  -[CKPhotoTileBadgeView _badgeImageView]
  -[CKPhotoTileBadgeView .cxx_destruct]
  -[CKPhotoTileBadgeView setActionButton:]
  -[CKPhotoTileBadgeView layoutSubviews]
  -[CKPhotoTileBadgeView _textLabel]
  -[CKPhotoTileBadgeView setSelected:]
  -[CKPhotoTileBadgeView sizeThatFits:]
  -[CKPhotoTileBadgeView isSelected]
  -[CKPhotoTileBadgeView isEnabled]
  -[CKPhotoTileBadgeView initWithFrame:]
  -[CKPhotoTileBadgeView pointInside:withEvent:]
  -[CKPhotoTileBadgeView _updateBadgeText]
  -[CKPhotoTileBadgeView _updateBadgeImage]
  -[CKPhotoTileBadgeView setEnabled:]
  -[CKPhotoTileBadgeView actionButton]


CKConversationListEmbeddedCollectionViewCell : _UICollectionViewListCell
 @property  NSObject<CKConversationListEmbeddedCollectionViewCellDelegate> *embeddedCellDelegate
 @property  unsigned long editingMode
 @property  BOOL shouldUseSidebarBackgroundConfiguration
 @property  UITableViewCell *embeddedTableViewCell

  // class methods
  +[CKConversationListEmbeddedCollectionViewCell _contentViewClass]
  +[CKConversationListEmbeddedCollectionViewCell embeddedTableViewCellClass]

  // instance methods
  -[CKConversationListEmbeddedCollectionViewCell editingMode]
  -[CKConversationListEmbeddedCollectionViewCell .cxx_destruct]
  -[CKConversationListEmbeddedCollectionViewCell preferredLayoutAttributesFittingAttributes:]
  -[CKConversationListEmbeddedCollectionViewCell _viewConfigurationState]
  -[CKConversationListEmbeddedCollectionViewCell forwardStateToEmbeddedCell:]
  -[CKConversationListEmbeddedCollectionViewCell pinButton]
  -[CKConversationListEmbeddedCollectionViewCell prepareForReuse]
  -[CKConversationListEmbeddedCollectionViewCell embeddedTableViewCell]
  -[CKConversationListEmbeddedCollectionViewCell initWithFrame:]
  -[CKConversationListEmbeddedCollectionViewCell setEditingMode:animated:]
  -[CKConversationListEmbeddedCollectionViewCell pinButtonTapped:]
  -[CKConversationListEmbeddedCollectionViewCell setEditingMode:]
  -[CKConversationListEmbeddedCollectionViewCell setEmbeddedTableViewCell:]
  -[CKConversationListEmbeddedCollectionViewCell shouldUseSidebarBackgroundConfiguration]
  -[CKConversationListEmbeddedCollectionViewCell multiselectCellAccessoryConfiguration]
  -[CKConversationListEmbeddedCollectionViewCell insertCellAccessoryConfiguration]
  -[CKConversationListEmbeddedCollectionViewCell embeddedCellDelegate]
  -[CKConversationListEmbeddedCollectionViewCell _updateViewConfigurationsWithState:]
  -[CKConversationListEmbeddedCollectionViewCell setEmbeddedCellDelegate:]
  -[CKConversationListEmbeddedCollectionViewCell setShouldUseSidebarBackgroundConfiguration:]
  -[CKConversationListEmbeddedCollectionViewCell leadingEditingAccessoryConfigurationsForEditingMode:]
  -[CKConversationListEmbeddedCollectionViewCell trailingEditingAccessoryConfigurationsForEditingMode:]
  -[CKConversationListEmbeddedCollectionViewCell __im_ff_uiConsistencyEnabled]
  -[CKConversationListEmbeddedCollectionViewCell configurationState]


CKAvatarTitleCollectionReusableView : UICollectionReusableView
 @property  CKLabel *titleLabel
 @property  UIImageView *chevronImageView
 @property  UIImageView *statusIndicatorImageView
 @property  NSMutableArray *pendingTitles
 @property  <CKAvatarTitleCollectionReusableViewDelegate> *delegate
 @property  long long style
 @property  long long avatarTitleAccessoryImageType
 @property  BOOL avatarPickerActive
 @property  long long statusIndicatorType
 @property  BOOL chevronHidden

  // class methods
  +[CKAvatarTitleCollectionReusableView supplementaryViewKind]
  +[CKAvatarTitleCollectionReusableView reuseIdentifier]

  // instance methods
  -[CKAvatarTitleCollectionReusableView titleLabel]
  -[CKAvatarTitleCollectionReusableView traitCollectionDidChange:]
  -[CKAvatarTitleCollectionReusableView .cxx_destruct]
  -[CKAvatarTitleCollectionReusableView setStyle:]
  -[CKAvatarTitleCollectionReusableView setTitleLabel:]
  -[CKAvatarTitleCollectionReusableView layoutSubviews]
  -[CKAvatarTitleCollectionReusableView touchesBegan:withEvent:]
  -[CKAvatarTitleCollectionReusableView setDelegate:]
  -[CKAvatarTitleCollectionReusableView setAvatarTitleAccessoryImageType:]
  -[CKAvatarTitleCollectionReusableView setChevronHidden:]
  -[CKAvatarTitleCollectionReusableView setStatusIndicatorType:]
  -[CKAvatarTitleCollectionReusableView sizeThatFits:]
  -[CKAvatarTitleCollectionReusableView setAvatarPickerActive:]
  -[CKAvatarTitleCollectionReusableView initWithFrame:]
  -[CKAvatarTitleCollectionReusableView delegate]
  -[CKAvatarTitleCollectionReusableView chevronImageView]
  -[CKAvatarTitleCollectionReusableView pendingTitles]
  -[CKAvatarTitleCollectionReusableView isLTR]
  -[CKAvatarTitleCollectionReusableView setChevronImageView:]
  -[CKAvatarTitleCollectionReusableView configureChevronImageView]
  -[CKAvatarTitleCollectionReusableView _rotateChevronImageView]
  -[CKAvatarTitleCollectionReusableView statusIndicatorImageView]
  -[CKAvatarTitleCollectionReusableView setStatusIndicatorImageView:]
  -[CKAvatarTitleCollectionReusableView isAvatarPickerActive]
  -[CKAvatarTitleCollectionReusableView isChevronHidden]
  -[CKAvatarTitleCollectionReusableView setPendingTitles:]
  -[CKAvatarTitleCollectionReusableView _animateFromQueue]
  -[CKAvatarTitleCollectionReusableView setTitle:animated:]
  -[CKAvatarTitleCollectionReusableView configureWithTitle:]
  -[CKAvatarTitleCollectionReusableView avatarTitleAccessoryImageType]
  -[CKAvatarTitleCollectionReusableView statusIndicatorType]
  -[CKAvatarTitleCollectionReusableView style]
  -[CKAvatarTitleCollectionReusableView touchesEnded:withEvent:]


CKOnboardingController : NSObject <CNMeCardSharingPickerViewControllerDelegate, AVTAvatarEditorViewControllerDelegate, IMCNMeCardSharingOnboardingEditViewControllerDelegate, IMCNMeCardSharingOnboardingAudienceViewControllerDelegate, UINavigationControllerDelegate, CKCNSharingProfileOnboardingFlowManagerDelegate, UIAdaptivePresentationControllerDelegate, CKSyndicationOnboardingPageViewControllerDelegate>
 @property  UINavigationController *navigationController
 @property  OBWelcomeFullCenterContentController *memojiCreationController
 @property  AVPlayer *memojiVideoPlayer
 @property  AVPlayerLooper *memojiVideoPlayerLooper
 @property  AVTAvatarStore *avatarStore
 @property  <AVTAvatarRecord> *avatarRecord
 @property  <IMCNMeCardSharingResult> *pendingMeCardSharingResult
 @property  CKCNSharingProfileOnboardingFlowManager *nicknameFlowManager
 @property  CNSharingProfileAvatarItemProviderConfiguration *avatarItemProviderConfiguration
 @property  BOOL presentingFromPrefs
 @property  BOOL isUserInitiatedEditNameAndPhoto
 @property  OBWelcomeController *syndicationIntroController
 @property  OBButtonTray *buttonTray
 @property  <CKOnboardingControllerDelegate> *delegate
 @property  IMCloudKitSyncState *syncState
 @property  int micLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKOnboardingController presentationControllerDidDismiss:]
  -[CKOnboardingController prepareForSuspend]
  -[CKOnboardingController setSyncState:]
  -[CKOnboardingController meCardSharingOnboardingEditController:didFinishWithOnboardingResult:]
  -[CKOnboardingController pushNameAndPhotoSharingConfigDataStep]
  -[CKOnboardingController completedOnboarding]
  -[CKOnboardingController pushNameAndPhotoSharingIntroStep]
  -[CKOnboardingController micLayout]
  -[CKOnboardingController _writeDefaultNicknameOnboardingVersion]
  -[CKOnboardingController completedOnboardingWithCompletion:]
  -[CKOnboardingController setNicknameFlowManager:]
  -[CKOnboardingController nicknameFlowManager]
  -[CKOnboardingController navigationController:didShowViewController:animated:]
  -[CKOnboardingController pushSyndicationIntroStep]
  -[CKOnboardingController _writeDefaultSyndicationOnboardingVersion]
  -[CKOnboardingController enableSyndication]
  -[CKOnboardingController setUpSyndicationLater]
  -[CKOnboardingController syndicationIntroController]
  -[CKOnboardingController initializeBundleIDsInAppPreferences:]
  -[CKOnboardingController setSyndicationIntroController:]
  -[CKOnboardingController setPendingMeCardSharingResult:]
  -[CKOnboardingController _whatsNewLatestShippingVersion]
  -[CKOnboardingController _whatsNewVersion]
  -[CKOnboardingController setMicLayout:]
  -[CKOnboardingController pushNameAndPhotoSharingConfigSharingPreferenceStep]
  -[CKOnboardingController pendingMeCardSharingResult]
  -[CKOnboardingController _readyToShowNextScreenWithTimeout:]
  -[CKOnboardingController _onClickMiCOnboard]
  -[CKOnboardingController _onClickMiCNotNow]
  -[CKOnboardingController _beginMOCFlowForState:rampState:]
  -[CKOnboardingController viewIssues:]
  -[CKOnboardingController reportMoCLayoutShown:]
  -[CKOnboardingController _micController]
  -[CKOnboardingController _tryToEnableHSA2]
  -[CKOnboardingController _tryToEnableMOC]
  -[CKOnboardingController memojiVideoPlayer]
  -[CKOnboardingController getButtonTray]
  -[CKOnboardingController sharingPicker:didSelectNameFormat:]
  -[CKOnboardingController presentOnboardingIfNeeded]
  -[CKOnboardingController shouldPresentOnboarding]
  -[CKOnboardingController presentNicknameSharingSetupFlow]
  -[CKOnboardingController .cxx_destruct]
  -[CKOnboardingController presentFromPrefsPresentationController:resizeToFitContent:]
  -[CKOnboardingController _meCardSharingNameFormat]
  -[CKOnboardingController readyToShowNextScreen]
  -[CKOnboardingController setMemojiCreationController:]
  -[CKOnboardingController memojiVideoPlayerLooper]
  -[CKOnboardingController presentingFromPrefs]
  -[CKOnboardingController setPresentingFromPrefs:]
  -[CKOnboardingController setAvatarRecord:]
  -[CKOnboardingController navigationControllerSupportedInterfaceOrientations:]
  -[CKOnboardingController syncState]
  -[CKOnboardingController setDelegate:]
  -[CKOnboardingController _meCardSharingEnabled]
  -[CKOnboardingController avatarEditorViewControllerDidCancel:]
  -[CKOnboardingController _meCardSharingAudience]
  -[CKOnboardingController _meCardSharingState]
  -[CKOnboardingController avatarEditorViewController:didFinishWithAvatarRecord:]
  -[CKOnboardingController accountCanCreateNickname]
  -[CKOnboardingController meCardSharingOnboardingAudienceViewControllerDidFinish:withSharingAudience:]
  -[CKOnboardingController avatarItemProviderConfiguration]
  -[CKOnboardingController setAvatarItemProviderConfiguration:]
  -[CKOnboardingController __im_ff_isInterstellarEnabled]
  -[CKOnboardingController setNavigationController:]
  -[CKOnboardingController _shouldShowNicknameOnboardingFlow]
  -[CKOnboardingController presentNicknameSharingSetupFlowWithMemoji:forUserInitiatedEdit:]
  -[CKOnboardingController navigationController]
  -[CKOnboardingController avatarStore]
  -[CKOnboardingController delegate]
  -[CKOnboardingController _userDefaults]
  -[CKOnboardingController buttonTray]
  -[CKOnboardingController _nicknameController]
  -[CKOnboardingController flowManagerDidSelectSetupLater:]
  -[CKOnboardingController flowManager:didFinishWithResult:]
  -[CKOnboardingController _shouldPresentNewInMessages]
  -[CKOnboardingController sharingPicker:didSelectSharingAudience:]
  -[CKOnboardingController sharingPicker:didChangeSharingState:]
  -[CKOnboardingController sharingPickerDidFinish:]
  -[CKOnboardingController setButtonTray:]
  -[CKOnboardingController prepareForOnboarding]
  -[CKOnboardingController _introController]
  -[CKOnboardingController presentOnboarding:]
  -[CKOnboardingController _writeDefaultWhatsNewDidShow]
  -[CKOnboardingController _isRunningTest]
  -[CKOnboardingController _shouldShowNicknameOnboardingFlowOnLaunch]
  -[CKOnboardingController startNicknameOnboardingIfNeeded]
  -[CKOnboardingController _shouldPresentMiCWelcome]
  -[CKOnboardingController _beginMiCWelcomeScreen]
  -[CKOnboardingController setAvatarStore:]
  -[CKOnboardingController _writeDefaultMiCWelcome]
  -[CKOnboardingController _shouldShowSyndicationOnboardingFlowOnLaunch]
  -[CKOnboardingController startSyndicationOnboardingIfNeeded]
  -[CKOnboardingController alwaysShowNicknameOnboarding]
  -[CKOnboardingController _shouldShowNicknameOnboardingFlowIgnoringVersion:]
  -[CKOnboardingController isUserInitiatedEditNameAndPhoto]
  -[CKOnboardingController nicknameOnboardingLastShownVersion]
  -[CKOnboardingController pushMemojiCreationStep]
  -[CKOnboardingController alwaysShowSyndicationOnboarding]
  -[CKOnboardingController _shouldShowSyndicationOnboardingFlow]
  -[CKOnboardingController _shouldShowSyndicationOnboardingFlowIgnoringVersion:]
  -[CKOnboardingController presentMemojiSetup]
  -[CKOnboardingController navigationController:willShowViewController:animated:]
  -[CKOnboardingController syndicationOnboardingLastShownVersion]
  -[CKOnboardingController setIsUserInitiatedEditNameAndPhoto:]
  -[CKOnboardingController _memojiCreationController]
  -[CKOnboardingController _nameAndPhotoSharingIntroController]
  -[CKOnboardingController _presentMemojiCreationIfNeeded:skipAction:]
  -[CKOnboardingController _fetchMemojiWithCompletionBlock:]
  -[CKOnboardingController pushMemojiCreationStepIfNeeded]
  -[CKOnboardingController avatarRecord]
  -[CKOnboardingController pushNameAndPhotoSharingIntroStepIfNeeded]
  -[CKOnboardingController setMemojiVideoPlayer:]
  -[CKOnboardingController setMemojiVideoPlayerLooper:]
  -[CKOnboardingController _pushOnboardingViewController:animated:]
  -[CKOnboardingController contactForNicknameOnboarding]


CKBlackholeConversationListCell : UITableViewCell
 @property  UILabel *fromLabel
 @property  UIDateLabel *dateLabel

  // instance methods
  -[CKBlackholeConversationListCell setDateLabel:]
  -[CKBlackholeConversationListCell .cxx_destruct]
  -[CKBlackholeConversationListCell setFromLabel:]
  -[CKBlackholeConversationListCell configureForConversation:]
  -[CKBlackholeConversationListCell fromLabel]
  -[CKBlackholeConversationListCell dateLabel]
  -[CKBlackholeConversationListCell prepareForReuse]
  -[CKBlackholeConversationListCell initWithStyle:reuseIdentifier:]


CKDetailsViewAddGroupNameViewUITextField : UITextField
 @property  BOOL canResignFirstResponderInternal

  // instance methods
  -[CKDetailsViewAddGroupNameViewUITextField canResignFirstResponderInternal]
  -[CKDetailsViewAddGroupNameViewUITextField setCanResignFirstResponderInternal:]
  -[CKDetailsViewAddGroupNameViewUITextField canResignFirstResponder]


CKDetailsAddGroupNameView : UIView <UITextFieldDelegate>
 @property  UILabel *placeholderLabel
 @property  CKDetailsViewAddGroupNameViewUITextField *inputField
 @property  <CKDetailsAddGroupNameViewDelegate> *delegate
 @property  NSString *groupName
 @property  BOOL enabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsAddGroupNameView preferredHeight]

  // instance methods
  -[CKDetailsAddGroupNameView setGroupName:]
  -[CKDetailsAddGroupNameView textFieldShouldReturn:]
  -[CKDetailsAddGroupNameView textFieldDidBeginEditing:]
  -[CKDetailsAddGroupNameView .cxx_destruct]
  -[CKDetailsAddGroupNameView setInputField:]
  -[CKDetailsAddGroupNameView setDelegate:]
  -[CKDetailsAddGroupNameView textField:shouldChangeCharactersInRange:replacementString:]
  -[CKDetailsAddGroupNameView textFieldDidEndEditing:]
  -[CKDetailsAddGroupNameView setPlaceholderLabel:]
  -[CKDetailsAddGroupNameView commitGroupName]
  -[CKDetailsAddGroupNameView sizeThatFits:]
  -[CKDetailsAddGroupNameView placeholderLabel]
  -[CKDetailsAddGroupNameView groupName]
  -[CKDetailsAddGroupNameView isEnabled]
  -[CKDetailsAddGroupNameView initWithFrame:]
  -[CKDetailsAddGroupNameView inputField]
  -[CKDetailsAddGroupNameView delegate]
  -[CKDetailsAddGroupNameView setEnabled:]


CKRecordingElapsedTimeView : UIView
 @property  NSDateComponentsFormatter *_durationFormatter
 @property  UILabel *_timeLabel
 @property  UIView *_recordingDotView
 @property  NSTimer *_updateTimer
 @property  NSDate *_startTime

  // instance methods
  -[CKRecordingElapsedTimeView startTimer]
  -[CKRecordingElapsedTimeView _startTime]
  -[CKRecordingElapsedTimeView initWithCoder:]
  -[CKRecordingElapsedTimeView .cxx_destruct]
  -[CKRecordingElapsedTimeView _endRecordingAnimation]
  -[CKRecordingElapsedTimeView layoutSubviews]
  -[CKRecordingElapsedTimeView _beginRecordingAnimation]
  -[CKRecordingElapsedTimeView resetTimer]
  -[CKRecordingElapsedTimeView _commonCAMElapsedTimeViewInitialization]
  -[CKRecordingElapsedTimeView _recordingDotView]
  -[CKRecordingElapsedTimeView sizeThatFits:]
  -[CKRecordingElapsedTimeView _update:]
  -[CKRecordingElapsedTimeView endTimer]
  -[CKRecordingElapsedTimeView initWithFrame:]
  -[CKRecordingElapsedTimeView _timeLabel]
  -[CKRecordingElapsedTimeView dealloc]
  -[CKRecordingElapsedTimeView _durationFormatter]
  -[CKRecordingElapsedTimeView _updateTimer]


CKExpandedAppViewController : UIViewController <CKBrowserViewControllerProtocol, CKFullScreenAppNavbarManagerDelegate, CKAppGrabberViewDelegate, UIGestureRecognizerDelegate, CKExpandedAppViewControllerProtocol>
 @property  UIViewController *presentationViewController
 @property  NSObject<CKBrowserViewControllerSendDelegate> *sendDelegate
 @property  IMBalloonPlugin *balloonPlugin
 @property  IMBalloonPluginDataSource *balloonPluginDataSource
 @property  BOOL isiMessage
 @property  NSString *conversationID
 @property  BOOL wantsDarkUI
 @property  BOOL wantsOpaqueUI
 @property  BOOL supportsQuickView
 @property  BOOL shouldSuppressEntryView
 @property  BOOL isPrimaryViewController
 @property  BOOL dismissing
 @property  BOOL mayBeKeptInViewHierarchy
 @property  long long browserPresentationStyle
 @property  BOOL shouldShowChatChrome
 @property  BOOL inExpandedPresentation
 @property  BOOL inFullScreenModalPresentation
 @property  NSString *sender
 @property  NSArray *recipients
 @property  BOOL wasExpandedPresentation
 @property  NSData *conversationEngramID
 @property  unsigned long badgeValue
 @property  CKBrowserDragManager *browserDragManager
 @property  long long currentBrowserConsumer
 @property  UIViewController *remoteViewController
 @property  BOOL shouldDisableSnapshotView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} horizontalSwipeExclusionRect
 @property  BOOL canReplaceDataSource
 @property  NSNumber *adamID
 @property  long long parentModalPresentationStyle
 @property  <UIViewControllerTransitioningDelegate> *parentTransitioningDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *contentView
 @property  CKDismissView *dismissView
 @property  BOOL inTransition
 @property  CKConversation *conversation
 @property  CKFullScreenAppNavbarManager *navbarManager
 @property  unsigned long transitionDirection
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} initialBrowserFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} targetBrowserFrame
 @property  BOOL inDragAndDrop
 @property  long long lastKnownDeviceOrientation
 @property  BOOL addsVerticalPaddingForStatusBar
 @property  BOOL fadesOutDuringStickerDrag
 @property  BOOL usesDimmingView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIViewController<CKBrowserViewControllerProtocol> *contentViewController
 @property  <CKExpandedAppViewControllerDelegate> *delegate

  // instance methods
  -[CKExpandedAppViewController preferredStatusBarStyle]
  -[CKExpandedAppViewController setContentViewController:]
  -[CKExpandedAppViewController conversationID]
  -[CKExpandedAppViewController inputAccessoryView]
  -[CKExpandedAppViewController collapse]
  -[CKExpandedAppViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKExpandedAppViewController lastKnownDeviceOrientation]
  -[CKExpandedAppViewController collapse:]
  -[CKExpandedAppViewController isiMessage]
  -[CKExpandedAppViewController .cxx_destruct]
  -[CKExpandedAppViewController _updateDimmingViewAlpha]
  -[CKExpandedAppViewController traitCollection]
  -[CKExpandedAppViewController navbarManager]
  -[CKExpandedAppViewController setNavbarManager:]
  -[CKExpandedAppViewController contentView]
  -[CKExpandedAppViewController canBecomeFirstResponder]
  -[CKExpandedAppViewController inDragAndDrop]
  -[CKExpandedAppViewController _currentPluginIsAppManager]
  -[CKExpandedAppViewController topAreaHeight]
  -[CKExpandedAppViewController leftRightSafeAreaInsetRect:]
  -[CKExpandedAppViewController isLoaded]
  -[CKExpandedAppViewController fadesOutDuringStickerDrag]
  -[CKExpandedAppViewController addsVerticalPaddingForStatusBar]
  -[CKExpandedAppViewController updateGrabberTitleAndIconForPlugin:]
  -[CKExpandedAppViewController setDelegate:]
  -[CKExpandedAppViewController setInitialBrowserFrame:]
  -[CKExpandedAppViewController setTargetBrowserFrame:]
  -[CKExpandedAppViewController setTransitionDirection:]
  -[CKExpandedAppViewController collapseGestureTouchMoved:]
  -[CKExpandedAppViewController touchTrackerRecognized:]
  -[CKExpandedAppViewController setupPausedCollapseAnimatorIfNeeded]
  -[CKExpandedAppViewController viewDidAppear:]
  -[CKExpandedAppViewController collapseTargetOriginY]
  -[CKExpandedAppViewController reverseAndCleanupCollapseAnimator]
  -[CKExpandedAppViewController _currentPluginIsAppStore]
  -[CKExpandedAppViewController setInDragAndDrop:]
  -[CKExpandedAppViewController addNewGrabberView]
  -[CKExpandedAppViewController shouldAutorotate]
  -[CKExpandedAppViewController dismissView]
  -[CKExpandedAppViewController appGrabberViewCloseButtonTapped:]
  -[CKExpandedAppViewController hideDimmingView]
  -[CKExpandedAppViewController setGrabberView:]
  -[CKExpandedAppViewController setAddsVerticalPaddingForStatusBar:]
  -[CKExpandedAppViewController setFadesOutDuringStickerDrag:]
  -[CKExpandedAppViewController setUsesDimmingView:]
  -[CKExpandedAppViewController initialBrowserFrame]
  -[CKExpandedAppViewController targetBrowserFrame]
  -[CKExpandedAppViewController _dismiss:]
  -[CKExpandedAppViewController additionalSafeAreaInsets]
  -[CKExpandedAppViewController willMoveToParentViewController:]
  -[CKExpandedAppViewController initWithBalloonPlugin:dataSource:]
  -[CKExpandedAppViewController initWithBalloonPlugin:]
  -[CKExpandedAppViewController setBalloonPluginDataSource:]
  -[CKExpandedAppViewController setDismissView:]
  -[CKExpandedAppViewController balloonPluginDataSource]
  -[CKExpandedAppViewController setConversationID:]
  -[CKExpandedAppViewController _dragBegan:]
  -[CKExpandedAppViewController usesDimmingView]
  -[CKExpandedAppViewController contentViewController]
  -[CKExpandedAppViewController _dragEnded:]
  -[CKExpandedAppViewController viewDidLayoutSubviews]
  -[CKExpandedAppViewController gestureRecognizer:shouldReceiveTouch:]
  -[CKExpandedAppViewController balloonPlugin]
  -[CKExpandedAppViewController viewWillAppear:]
  -[CKExpandedAppViewController setInTransition:]
  -[CKExpandedAppViewController inTransition]
  -[CKExpandedAppViewController _currentPluginIsJellyfish]
  -[CKExpandedAppViewController shouldShowChatChrome]
  -[CKExpandedAppViewController _shouldShowDimmingView]
  -[CKExpandedAppViewController finalContentViewFrame]
  -[CKExpandedAppViewController dismiss]
  -[CKExpandedAppViewController animateBrowserViewToTargetRect:grabberView:completion:]
  -[CKExpandedAppViewController animateBrowserViewFromSourceRect:interactive:grabberView:completion:]
  -[CKExpandedAppViewController shouldDisableSnapshotView]
  -[CKExpandedAppViewController setShouldDisableSnapshotView:]
  -[CKExpandedAppViewController delegate]
  -[CKExpandedAppViewController setConversation:]
  -[CKExpandedAppViewController isDismissing]
  -[CKExpandedAppViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKExpandedAppViewController sendDelegate]
  -[CKExpandedAppViewController isPrimaryViewController]
  -[CKExpandedAppViewController setIsPrimaryViewController:]
  -[CKExpandedAppViewController setIsiMessage:]
  -[CKExpandedAppViewController presentationViewController]
  -[CKExpandedAppViewController setPresentationViewController:]
  -[CKExpandedAppViewController setSendDelegate:]
  -[CKExpandedAppViewController browserPresentationStyle]
  -[CKExpandedAppViewController wantsDarkUI]
  -[CKExpandedAppViewController wantsOpaqueUI]
  -[CKExpandedAppViewController supportsQuickView]
  -[CKExpandedAppViewController mayBeKeptInViewHierarchy]
  -[CKExpandedAppViewController shouldSuppressEntryView]
  -[CKExpandedAppViewController inExpandedPresentation]
  -[CKExpandedAppViewController inFullScreenModalPresentation]
  -[CKExpandedAppViewController dealloc]
  -[CKExpandedAppViewController conversation]
  -[CKExpandedAppViewController setContentView:]
  -[CKExpandedAppViewController loadView]
  -[CKExpandedAppViewController navbarManagerDidReceiveMessage:]
  -[CKExpandedAppViewController supportedInterfaceOrientations]
  -[CKExpandedAppViewController navbarManagerDidDismissAllMessages:]
  -[CKExpandedAppViewController initWithConversation:plugin:]
  -[CKExpandedAppViewController transitionDirection]
  -[CKExpandedAppViewController setLastKnownDeviceOrientation:]


CKInvisibleInkEffectCoverageTracker : NSObject
 @property  BOOL uncovered
 @property  <CKInvisibleInkEffectCoverageTrackerDelegate> *delegate
 @property  {CGSize=dd} size
 @property  double touchLifetime

  // instance methods
  -[CKInvisibleInkEffectCoverageTracker .cxx_destruct]
  -[CKInvisibleInkEffectCoverageTracker setDelegate:]
  -[CKInvisibleInkEffectCoverageTracker setUncovered:]
  -[CKInvisibleInkEffectCoverageTracker _checkForCover:]
  -[CKInvisibleInkEffectCoverageTracker touchLifetime]
  -[CKInvisibleInkEffectCoverageTracker initWithSize:touchLifetime:]
  -[CKInvisibleInkEffectCoverageTracker setSize:]
  -[CKInvisibleInkEffectCoverageTracker reset]
  -[CKInvisibleInkEffectCoverageTracker isUncovered]
  -[CKInvisibleInkEffectCoverageTracker delegate]
  -[CKInvisibleInkEffectCoverageTracker recordTouchAtPoint:]
  -[CKInvisibleInkEffectCoverageTracker size]
  -[CKInvisibleInkEffectCoverageTracker dealloc]


CKBlankViewController : UIViewController
 @property  UILabel *label

  // instance methods
  -[CKBlankViewController label]
  -[CKBlankViewController .cxx_destruct]
  -[CKBlankViewController viewDidLoad]
  -[CKBlankViewController initConstraints]


CKAppMenuDismissalAnimator : NSObject <UIViewControllerAnimatedTransitioning>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAppMenuDismissalAnimator transitionDuration:]
  -[CKAppMenuDismissalAnimator animateTransition:]


CKIMDaemonController : IMDaemonController
 @property  NSArray *listeners

  // class methods
  +[CKIMDaemonController sharedInstance]
  +[CKIMDaemonController beginSimulatingDaemon]

  // instance methods
  -[CKIMDaemonController setListeners:]
  -[CKIMDaemonController .cxx_destruct]
  -[CKIMDaemonController connectToDaemonWithLaunch:capabilities:blockUntilConnected:]
  -[CKIMDaemonController connectToDaemonWithLaunch:]
  -[CKIMDaemonController listeners]
  -[CKIMDaemonController sendBalloonPayload:attachments:withMessageGUID:bundleID:]


CKMessageEntryTextView : EMKTextView <UIScribbleInteractionDelegate>
 @property  BOOL showingDictationPlaceholder
 @property  UILabel *placeholderLabel
 @property  UIKeyboardInputMode *savedKeyboardInputMode
 @property  UIScribbleInteraction *scribbleInteraction
 @property  BOOL pencilWriting
 @property  NSAttributedString *compositionText
 @property  NSString *placeholderText
 @property  UIColor *placeholderColor
 @property  double placeHolderWidth
 @property  double placeholderExpandedWidth
 @property  BOOL singleLine
 @property  BOOL inPencilMode
 @property  BOOL shouldStripEmojis
 @property  NSString *autocorrectionContext
 @property  NSString *responseContext
 @property  BOOL sendCurrentLocationFromKeyboardEnabled
 @property  BOOL updatesFontOnTextChange
 @property  BOOL hideCaret
 @property  BOOL hideCaretUntilUserTypes
 @property  BOOL preventShowingCalloutMenu
 @property  double adjustedLineFragmentPadding
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMessageEntryTextView removeDictationResultPlaceholder:willInsertResult:]
  -[CKMessageEntryTextView setAttributedText:]
  -[CKMessageEntryTextView caretRectForPosition:]
  -[CKMessageEntryTextView setPlaceholderColor:]
  -[CKMessageEntryTextView insertDictationResultPlaceholder]
  -[CKMessageEntryTextView placeholderColor]
  -[CKMessageEntryTextView setHideCaret:]
  -[CKMessageEntryTextView setFont:]
  -[CKMessageEntryTextView placeholderText]
  -[CKMessageEntryTextView .cxx_destruct]
  -[CKMessageEntryTextView isInPencilMode]
  -[CKMessageEntryTextView isPencilWriting]
  -[CKMessageEntryTextView setPreventShowingCalloutMenu:]
  -[CKMessageEntryTextView layoutSubviews]
  -[CKMessageEntryTextView setPlaceholderText:]
  -[CKMessageEntryTextView hideCaret]
  -[CKMessageEntryTextView preventShowingCalloutMenu]
  -[CKMessageEntryTextView setCompositionText:]
  -[CKMessageEntryTextView setPlaceholderLabel:]
  -[CKMessageEntryTextView setInPencilMode:]
  -[CKMessageEntryTextView setPencilWriting:]
  -[CKMessageEntryTextView placeHolderWidth]
  -[CKMessageEntryTextView setupScribbleInteraction]
  -[CKMessageEntryTextView updateTextView]
  -[CKMessageEntryTextView setShowingDictationPlaceholder:]
  -[CKMessageEntryTextView updatesFontOnTextChange]
  -[CKMessageEntryTextView _stripEmojisIfNecessary]
  -[CKMessageEntryTextView updateFontIfNeeded]
  -[CKMessageEntryTextView setShouldStripEmojis:]
  -[CKMessageEntryTextView placeholderExpandedWidth]
  -[CKMessageEntryTextView shouldStripEmojis]
  -[CKMessageEntryTextView setUpdatesFontOnTextChange:]
  -[CKMessageEntryTextView setSendCurrentLocationFromKeyboardEnabled:]
  -[CKMessageEntryTextView compositionText]
  -[CKMessageEntryTextView isShowingDictationPlaceholder]
  -[CKMessageEntryTextView sendCurrentLocationFromKeyboardEnabled]
  -[CKMessageEntryTextView hideCaretUntilUserTypes]
  -[CKMessageEntryTextView adjustedLineFragmentPadding]
  -[CKMessageEntryTextView setAdjustedLineFragmentPadding:]
  -[CKMessageEntryTextView resignFirstResponder]
  -[CKMessageEntryTextView sizeThatFits:]
  -[CKMessageEntryTextView scribbleInteractionDidFinishWriting:]
  -[CKMessageEntryTextView placeholderLabel]
  -[CKMessageEntryTextView savedKeyboardInputMode]
  -[CKMessageEntryTextView scribbleInteraction]
  -[CKMessageEntryTextView setScribbleInteraction:]
  -[CKMessageEntryTextView setResponseContext:]
  -[CKMessageEntryTextView setSavedKeyboardInputMode:]
  -[CKMessageEntryTextView isSingleLine]
  -[CKMessageEntryTextView saveKeyboardInputMode]
  -[CKMessageEntryTextView restoreKeyboardInputMode]
  -[CKMessageEntryTextView scribbleInteractionWillBeginWriting:]
  -[CKMessageEntryTextView dealloc]
  -[CKMessageEntryTextView autocorrectionContext]
  -[CKMessageEntryTextView setAutocorrectionContext:]
  -[CKMessageEntryTextView setHideCaretUntilUserTypes:]
  -[CKMessageEntryTextView responseContext]
  -[CKMessageEntryTextView _sendCurrentLocationAction]
  -[CKMessageEntryTextView initWithFrame:textContainer:]
  -[CKMessageEntryTextView textViewDidChange:]
  -[CKMessageEntryTextView setPlaceHolderWidth:]
  -[CKMessageEntryTextView setPlaceholderExpandedWidth:]


CKBrowserCell : UICollectionViewCell
 @property  UIView *iconView
 @property  unsigned long shinyStatus
 @property  CKBrowserSelectionLabelAccessoryView *shinyStatusView
 @property  UILabel *browserLabel
 @property  UIImageView *borderView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} selectionFrame
 @property  <CKBrowserCellDelegate> *delegate
 @property  CKBadgeView *badgeView
 @property  BOOL jitter
 @property  BOOL shouldShowLabel

  // class methods
  +[CKBrowserCell classForItemType:]
  +[CKBrowserCell reuseIdentifier]

  // instance methods
  -[CKBrowserCell badgeView]
  -[CKBrowserCell .cxx_destruct]
  -[CKBrowserCell setBadgeView:]
  -[CKBrowserCell layoutSubviews]
  -[CKBrowserCell setDelegate:]
  -[CKBrowserCell setBorderView:]
  -[CKBrowserCell prepareForReuse]
  -[CKBrowserCell setBrowserLabel:]
  -[CKBrowserCell shinyStatusView]
  -[CKBrowserCell browserCellIconFrame]
  -[CKBrowserCell browserCellSelectionBorderOutset]
  -[CKBrowserCell setSelectionFrame:]
  -[CKBrowserCell shouldShowLabel]
  -[CKBrowserCell setShinyStatus:]
  -[CKBrowserCell setShinyStatusView:]
  -[CKBrowserCell selectionFrame]
  -[CKBrowserCell browserLabel]
  -[CKBrowserCell setShouldShowLabel:]
  -[CKBrowserCell initWithFrame:]
  -[CKBrowserCell shinyStatus]
  -[CKBrowserCell delegate]
  -[CKBrowserCell setBorderStyle:]
  -[CKBrowserCell setJitter:]
  -[CKBrowserCell jitter]
  -[CKBrowserCell iconView]
  -[CKBrowserCell borderView]
  -[CKBrowserCell applyLayoutAttributes:]


CKAppStripLayout : UICollectionViewLayout
 @property  unsigned long layoutMode
 @property  BOOL shouldDimPluginCells
 @property  BOOL shouldShowCellBorders

  // class methods
  +[CKAppStripLayout minHeight]
  +[CKAppStripLayout maxHeight]

  // instance methods
  -[CKAppStripLayout invalidateLayout]
  -[CKAppStripLayout initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:]
  -[CKAppStripLayout finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:]
  -[CKAppStripLayout layoutAttributesForItemAtIndexPath:]
  -[CKAppStripLayout _favoritesCount]
  -[CKAppStripLayout prepareLayout]
  -[CKAppStripLayout setLayoutMode:]
  -[CKAppStripLayout collectionViewContentSize]
  -[CKAppStripLayout .cxx_destruct]
  -[CKAppStripLayout setShouldDimPluginCells:]
  -[CKAppStripLayout init]
  -[CKAppStripLayout layoutAttributesForInteractivelyMovingItemAtIndexPath:withTargetPosition:]
  -[CKAppStripLayout _itemCount]
  -[CKAppStripLayout layoutAttributesForElementsInRect:]
  -[CKAppStripLayout _recentsCount]
  -[CKAppStripLayout _specForLayoutMode:]
  -[CKAppStripLayout _attributesForLayoutMode:]
  -[CKAppStripLayout _supplementryAttributesForLayoutMode:]
  -[CKAppStripLayout _generateAttributesForSpec:]
  -[CKAppStripLayout _generateSupplementryAttributesForSpec:minified:]
  -[CKAppStripLayout _currentAttributes]
  -[CKAppStripLayout _currentSupplementryAttributes]
  -[CKAppStripLayout finalLayoutAttributesForDisappearingItemAtIndexPath:]
  -[CKAppStripLayout setShouldShowCellBorders:]
  -[CKAppStripLayout shouldShowCellBorders]
  -[CKAppStripLayout collectionViewContentSizeForLayoutMode:]
  -[CKAppStripLayout prepareForLayoutModeTransition]
  -[CKAppStripLayout finishLayoutModeTransition]
  -[CKAppStripLayout shouldDimPluginCells]
  -[CKAppStripLayout invalidateCachedLayout]
  -[CKAppStripLayout initialLayoutAttributesForAppearingItemAtIndexPath:]
  -[CKAppStripLayout layoutMode]
  -[CKAppStripLayout shouldInvalidateLayoutForBoundsChange:]
  -[CKAppStripLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]


CKBlackholeConversationListViewController : CKBlackholeConversationListCommonViewController <PSController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBlackholeConversationListViewController handleURL:]
  -[CKBlackholeConversationListViewController parentController]
  -[CKBlackholeConversationListViewController .cxx_destruct]
  -[CKBlackholeConversationListViewController setSpecifier:]
  -[CKBlackholeConversationListViewController handleURL:withCompletion:]
  -[CKBlackholeConversationListViewController setRootController:]
  -[CKBlackholeConversationListViewController showController:]
  -[CKBlackholeConversationListViewController showController:animate:]
  -[CKBlackholeConversationListViewController canBeShownFromSuspendedState]
  -[CKBlackholeConversationListViewController readPreferenceValue:]
  -[CKBlackholeConversationListViewController setPreferenceValue:specifier:]
  -[CKBlackholeConversationListViewController setParentController:]
  -[CKBlackholeConversationListViewController specifier]
  -[CKBlackholeConversationListViewController rootController]


CKDetailsShowMoreContactsStandardCell : CKDetailsShowMoreContactsCell
  // instance methods
  -[CKDetailsShowMoreContactsStandardCell layoutSubviews]
  -[CKDetailsShowMoreContactsStandardCell sizeThatFits:]


CKAttachmentSearchResultCell : CKEditableSearchResultCell <CKSearchResultCell>
 @property  BOOL suppressAvatars
 @property  UILabel *titleLabel
 @property  UIDateLabel *dateLabel
 @property  NSString *resultIdentifier
 @property  CKSearchAvatarSupplementryView *avatarView
 @property  {CGPoint=dd} avatarOffsetLTR
 @property  {CGPoint=dd} avatarOffsetRTL
 @property  double editModeHorizontalOffset
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  BOOL _ck_editing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKAttachmentSearchResultCell reuseIdentifier]

  // instance methods
  -[CKAttachmentSearchResultCell titleLabel]
  -[CKAttachmentSearchResultCell setAvatarView:]
  -[CKAttachmentSearchResultCell setDateLabel:]
  -[CKAttachmentSearchResultCell .cxx_destruct]
  -[CKAttachmentSearchResultCell preferredLayoutAttributesFittingAttributes:]
  -[CKAttachmentSearchResultCell avatarView]
  -[CKAttachmentSearchResultCell setTitleLabel:]
  -[CKAttachmentSearchResultCell layoutSubviews]
  -[CKAttachmentSearchResultCell marginInsets]
  -[CKAttachmentSearchResultCell dateLabel]
  -[CKAttachmentSearchResultCell setSelected:]
  -[CKAttachmentSearchResultCell prepareForReuse]
  -[CKAttachmentSearchResultCell _thumbnailGenerated:]
  -[CKAttachmentSearchResultCell initWithFrame:]
  -[CKAttachmentSearchResultCell setMarginInsets:]
  -[CKAttachmentSearchResultCell setSuppressAvatars:]
  -[CKAttachmentSearchResultCell suppressAvatars]
  -[CKAttachmentSearchResultCell setResultIdentifier:]
  -[CKAttachmentSearchResultCell editModeHorizontalOffset]
  -[CKAttachmentSearchResultCell avatarOffsetLTR]
  -[CKAttachmentSearchResultCell avatarOffsetRTL]
  -[CKAttachmentSearchResultCell resultIdentifier]
  -[CKAttachmentSearchResultCell configureWithQueryResult:searchText:mode:]
  -[CKAttachmentSearchResultCell refreshForSearchTextIfNeeded:]


CKPinnedConversationActivitySnapshot : NSObject
 @property  NSArray *activityItems
 @property  NSArray *contactItems

  // class methods
  +[CKPinnedConversationActivitySnapshot emptySnapshot]

  // instance methods
  -[CKPinnedConversationActivitySnapshot .cxx_destruct]
  -[CKPinnedConversationActivitySnapshot activityItems]
  -[CKPinnedConversationActivitySnapshot initWithActivityItems:contactItems:]
  -[CKPinnedConversationActivitySnapshot _contentScaleForMessage:amongRecentMessagesInPinnedConversations:]
  -[CKPinnedConversationActivitySnapshot _contactItemMatchingIdentifier:]
  -[CKPinnedConversationActivitySnapshot _firstContactItemAlignmentForContactItem:previousSnapshot:totalNumberOfContactItemIdentifiersWithUnreadMessages:]
  -[CKPinnedConversationActivitySnapshot _contactItemAlignmentForItemAtIndex:firstItemAlignment:]
  -[CKPinnedConversationActivitySnapshot _contentScaleForContactItemAtIndex:withMessageContentScale:]
  -[CKPinnedConversationActivitySnapshot initWithConversation:recentMessagesInPinnedConversations:previousSnapshot:]
  -[CKPinnedConversationActivitySnapshot contactItems]


CKAttributedStringItemProvider : NSObject <NSItemProviderWriting>
 @property  NSAttributedString *attributedString
 @property  NSArray *writableTypeIdentifiersForItemProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKAttributedStringItemProvider writableTypeIdentifiersForItemProvider]

  // instance methods
  -[CKAttributedStringItemProvider initWithAttributedString:]
  -[CKAttributedStringItemProvider attributedString]
  -[CKAttributedStringItemProvider loadDataWithTypeIdentifier:forItemProviderCompletionHandler:]
  -[CKAttributedStringItemProvider .cxx_destruct]
  -[CKAttributedStringItemProvider writableTypeIdentifiersForItemProvider]


CKHandwritingBalloonView : CKTranscriptPluginBalloonView
  // instance methods
  -[CKHandwritingBalloonView maskFrame]
  -[CKHandwritingBalloonView shouldMaskWhenOpaque]
  -[CKHandwritingBalloonView balloonDescriptor]


CKBusinessMacToolbarView : UIView
 @property  UIView *leftItemView
 @property  UIImage *bannerImage
 @property  UILabel *fallbackTitleLabel
 @property  NSData *bannerImageData
 @property  double preferredHeight
 @property  BOOL showingInStandAloneWindow
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} detailsPopoverFrame

  // instance methods
  -[CKBusinessMacToolbarView setPreferredHeight:]
  -[CKBusinessMacToolbarView traitCollectionDidChange:]
  -[CKBusinessMacToolbarView setShowingInStandAloneWindow:]
  -[CKBusinessMacToolbarView .cxx_destruct]
  -[CKBusinessMacToolbarView layoutSubviews]
  -[CKBusinessMacToolbarView showingInStandAloneWindow]
  -[CKBusinessMacToolbarView leftItemView]
  -[CKBusinessMacToolbarView detailsPopoverFrame]
  -[CKBusinessMacToolbarView _generateScaledImageFromBannerData]
  -[CKBusinessMacToolbarView _updateBannerImage:]
  -[CKBusinessMacToolbarView fallbackTitleLabel]
  -[CKBusinessMacToolbarView bannerImageData]
  -[CKBusinessMacToolbarView setBannerImage:]
  -[CKBusinessMacToolbarView setBannerImageData:]
  -[CKBusinessMacToolbarView setFallbackTitle:]
  -[CKBusinessMacToolbarView setFallbackTitleColor:]
  -[CKBusinessMacToolbarView setDetailsPopoverFrame:]
  -[CKBusinessMacToolbarView setFallbackTitleLabel:]
  -[CKBusinessMacToolbarView preferredHeight]
  -[CKBusinessMacToolbarView bannerImage]
  -[CKBusinessMacToolbarView setLeftItemView:]


CKVoiceController : NSObject <AVVoiceControllerRecordDelegate>
 @property  long long _activationMode
 @property  NSDictionary *recordSettings
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_source> *powerUpdateTimer
 @property  AVVoiceController *voiceController
 @property  CKAudioAnalyzer *audioAnalyzer
 @property  <CKVoiceControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKVoiceController playAlertSoundForType:]
  -[CKVoiceController cleanup]
  -[CKVoiceController record]
  -[CKVoiceController releaseAudioSession]
  -[CKVoiceController .cxx_destruct]
  -[CKVoiceController stop]
  -[CKVoiceController setDelegate:]
  -[CKVoiceController audioAnalyzer]
  -[CKVoiceController setActivationMode:]
  -[CKVoiceController setQueue:]
  -[CKVoiceController messageSent:]
  -[CKVoiceController _activationMode]
  -[CKVoiceController voiceController]
  -[CKVoiceController setRecordSettings:]
  -[CKVoiceController _setActivationMode:]
  -[CKVoiceController setAudioAnalyzer:]
  -[CKVoiceController voiceControllerDidStopRecordingForClientError]
  -[CKVoiceController delegate]
  -[CKVoiceController setVoiceController:]
  -[CKVoiceController stopUpdatingPower]
  -[CKVoiceController voiceControllerDidDetectStartpoint:]
  -[CKVoiceController startUpdatingPower]
  -[CKVoiceController voiceControllerRecordBufferAvailable:buffer:]
  -[CKVoiceController voiceControllerDidStopRecording:forReason:]
  -[CKVoiceController powerUpdateTimer]
  -[CKVoiceController setPowerUpdateTimer:]
  -[CKVoiceController voiceControllerDidStartRecording:successfully:]
  -[CKVoiceController queue]
  -[CKVoiceController recordSettings]
  -[CKVoiceController dealloc]
  -[CKVoiceController initWithActivationMode:recordSettings:queue:]


CKImpactEffectMediaObject : CKMediaObject
  // instance methods
  -[CKImpactEffectMediaObject fileURL]
  -[CKImpactEffectMediaObject .cxx_destruct]
  -[CKImpactEffectMediaObject initWithImpactEffectAudioFileURL:]


CKBlurEffectBalloonView : CKImageBalloonView
 @property  UIVisualEffectView *blurEffectView
 @property  UIView *commSafetyBadgeView

  // instance methods
  -[CKBlurEffectBalloonView .cxx_destruct]
  -[CKBlurEffectBalloonView layoutSubviews]
  -[CKBlurEffectBalloonView initWithFrame:]
  -[CKBlurEffectBalloonView blurEffectView]
  -[CKBlurEffectBalloonView commSafetyBadgeView]
  -[CKBlurEffectBalloonView setBlurEffectView:]
  -[CKBlurEffectBalloonView setCommSafetyBadgeView:]


CKImpactEffectManager : NSObject <CKAudioControllerDelegate, CKSendAnimationManager>
 @property  UIWindow *expressiveSendAnimationWindow
 @property  CKBalloonView *expressiveSendAnimationBalloon
 @property  CKBalloonView *originalBalloonView
 @property  UIScrollView *expressiveSendScrollView
 @property  CABackdropLayer *expressiveSendAnimationBackdrop
 @property  CKAudioController *audioController
 @property  BOOL isAnimating
 @property  <CKSendAnimationManagerDelegate> *delegate
 @property  NSString *animatingIdentifier
 @property  BOOL isDisabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <CKSendAnimationManagerDelegate> *sendAnimationManagerDelegate
 @property  <CKSendAnimationBalloonProvider> *sendAnimationBalloonProvider

  // class methods
  +[CKImpactEffectManager identifierIsAnimatedImpactEffect:]
  +[CKImpactEffectManager identifierIsValidImpactEffect:]
  +[CKImpactEffectManager identifierShouldPlayInWindow:]
  +[CKImpactEffectManager effectIdentifiers]
  +[CKImpactEffectManager maskingStringForID:]
  +[CKImpactEffectManager localizedEffectNameForEffectWithIdentifier:]

  // instance methods
  -[CKImpactEffectManager _audioSessionOptionsWillChange:]
  -[CKImpactEffectManager animateMessages:withEffectIdentifier:beginAnimationFromTranscriptPresentedState:]
  -[CKImpactEffectManager .cxx_destruct]
  -[CKImpactEffectManager setSendAnimationManagerDelegate:]
  -[CKImpactEffectManager setSendAnimationBalloonProvider:]
  -[CKImpactEffectManager animateMessages:]
  -[CKImpactEffectManager setDelegate:]
  -[CKImpactEffectManager isAnimating]
  -[CKImpactEffectManager setIsAnimating:]
  -[CKImpactEffectManager init]
  -[CKImpactEffectManager audioController]
  -[CKImpactEffectManager stopAllEffects]
  -[CKImpactEffectManager delegate]
  -[CKImpactEffectManager setIsDisabled:]
  -[CKImpactEffectManager dealloc]
  -[CKImpactEffectManager setAudioController:]
  -[CKImpactEffectManager matchScrollViewOffset:]
  -[CKImpactEffectManager animatingIdentifier]
  -[CKImpactEffectManager setExpressiveSendAnimationWindow:]
  -[CKImpactEffectManager setExpressiveSendScrollView:]
  -[CKImpactEffectManager setupAudioPlayerWithURL:]
  -[CKImpactEffectManager setExpressiveSendAnimationBackdrop:]
  -[CKImpactEffectManager expressiveSendAnimationWindow]
  -[CKImpactEffectManager _sizeAnimationWindow]
  -[CKImpactEffectManager _animateLastMessage:withEffectIdentifier:beginAnimationFromTranscriptPresentedState:]
  -[CKImpactEffectManager stopPlayingSound]
  -[CKImpactEffectManager _sendAnimationContextForIdentifier:message:isSender:beginAnimationFromTranscriptPresentedState:]
  -[CKImpactEffectManager expressiveSendAnimationBackdrop]
  -[CKImpactEffectManager expressiveSendScrollView]
  -[CKImpactEffectManager _cleanupExpressiveSendComponents]
  -[CKImpactEffectManager _visibleCells:aboveItem:]
  -[CKImpactEffectManager expressiveSendAnimationBalloon]
  -[CKImpactEffectManager setOriginalBalloonView:]
  -[CKImpactEffectManager cloneBalloonForAnimationWithChatItem:]
  -[CKImpactEffectManager setExpressiveSendAnimationBalloon:]
  -[CKImpactEffectManager originalBalloonView]
  -[CKImpactEffectManager isDisabled]
  -[CKImpactEffectManager animationWillBeginWithContext:]
  -[CKImpactEffectManager animationDidFinishWithContext:]
  -[CKImpactEffectManager sendAnimationManagerDelegate]
  -[CKImpactEffectManager sendAnimationBalloonProvider]
  -[CKImpactEffectManager __im_ff_commSafetyUIEnabled]


CKActionMenuController : NSObject
 @property  CKActionMenuView *actionMenuView
 @property  NSArray *actionMenuItems
 @property  unsigned long defaultActionIndex
 @property  <CKActionMenuControllerDelegate> *delegate
 @property  BOOL actionMenuVisible
 @property  BOOL shouldDismissOnTap

  // instance methods
  -[CKActionMenuController defaultActionIndex]
  -[CKActionMenuController setShouldDismissOnTap:]
  -[CKActionMenuController .cxx_destruct]
  -[CKActionMenuController actionMenuItems]
  -[CKActionMenuController isActionMenuVisible]
  -[CKActionMenuController dismissActionMenuAnimated:]
  -[CKActionMenuController setDelegate:]
  -[CKActionMenuController setActionMenuItems:defaultActionIndex:animated:]
  -[CKActionMenuController initWithActionMenuItems:defaultActionIndex:blurEffectStyle:]
  -[CKActionMenuController presentActionMenuFromPoint:inView:animated:]
  -[CKActionMenuController convertActionMenuFrameToView:]
  -[CKActionMenuController setActionMenuView:]
  -[CKActionMenuController actionMenuView]
  -[CKActionMenuController delegate]
  -[CKActionMenuController dealloc]
  -[CKActionMenuController shouldDismissOnTap]


CKConversationListStandardCell : CKConversationListCell
 @property  BOOL showTypingIndicator

  // class methods
  +[CKConversationListStandardCell leadingLayoutMargin]
  +[CKConversationListStandardCell identifierForConversation:]

  // instance methods
  -[CKConversationListStandardCell setMuted:]
  -[CKConversationListStandardCell _stopTypingIndicator]
  -[CKConversationListStandardCell updateTypingIndicatorIfNeeded]
  -[CKConversationListStandardCell _resetTypingIndicator]
  -[CKConversationListStandardCell setShowTypingIndicator:]
  -[CKConversationListStandardCell updateUnreadIndicatorWithImage:tintColor:animated:]
  -[CKConversationListStandardCell showTypingIndicator]
  -[CKConversationListStandardCell traitCollectionDidChange:]
  -[CKConversationListStandardCell _isCollapsed]
  -[CKConversationListStandardCell _startTypingIndicator]
  -[CKConversationListStandardCell _calculateLayoutFrames]
  -[CKConversationListStandardCell _shouldHideMuteIndicator]
  -[CKConversationListStandardCell _shouldShowAvatarForWidth:]
  -[CKConversationListStandardCell _calculateSummaryLabelFrameForColumn:summaryLabelCapFrameYOrigin:displayScale:]
  -[CKConversationListStandardCell _calculateIndicatorFrameForSize:trailing:displayScale:insets:]
  -[CKConversationListStandardCell _calculateRectVerticallyCenteredWithFirstTextLineOfLabel:horizontallyCenteredInColumn:size:offset:]
  -[CKConversationListStandardCell updateForEditing:]
  -[CKConversationListStandardCell .cxx_destruct]
  -[CKConversationListStandardCell _updateAvatarView]
  -[CKConversationListStandardCell avatarView]
  -[CKConversationListStandardCell updateUnreadIndicatorWithImage:tintColor:]
  -[CKConversationListStandardCell layoutSubviews]
  -[CKConversationListStandardCell _updateLabelVisibility]
  -[CKConversationListStandardCell registerForEvents]
  -[CKConversationListStandardCell updateWithForwardedConfigurationState:]
  -[CKConversationListStandardCell presentingViewControllerForAvatarView:]
  -[CKConversationListStandardCell updateContentsForConversation:]
  -[CKConversationListStandardCell prepareForReuse]
  -[CKConversationListStandardCell initWithStyle:reuseIdentifier:]
  -[CKConversationListStandardCell chevronImageView]
  -[CKConversationListStandardCell _boundsShouldCollapseContent:]
  -[CKConversationListStandardCell forceUnreadIndicatorVisibility:forConversation:animated:]
  -[CKConversationListStandardCell dealloc]
  -[CKConversationListStandardCell contactsForPreviewInteractionForAvatarView:suggestedKeysToFetch:]
  -[CKConversationListStandardCell overrideImageDataForPreviewInteractionForAvatarView:]
  -[CKConversationListStandardCell avatarView:orderedPropertiesForProperties:category:]
  -[CKConversationListStandardCell avatarView:shouldShowContact:]
  -[CKConversationListStandardCell increaseContrastDidChange]
  -[CKConversationListStandardCell updateContentsForConversation:fastPreview:]
  -[CKConversationListStandardCell updateFromLabelWithText:]


CKEffectPickerMacViewController : UIViewController <CKEffectPreviewCollectionViewControllerDelegate, CKEffectSelectionViewControllerDelegate, CKEffectPickerViewControllerProtocol>
 @property  CKEffectPreviewCollectionViewController *effectCollectionViewController
 @property  CKEffectSelectionViewController *selectionViewController
 @property  CKChatControllerDummyAnimator *dummyAnimator
 @property  UIView *balloonContainer
 @property  CKBalloonView *balloonView
 @property  UILabel *titleLabel
 @property  UIVisualEffectView *titleContainerView
 @property  UIVibrancyEffect *titleVibrancyEffect
 @property  UIButton *sendButton
 @property  UIButton *closeButton
 @property  CKComposition *composition
 @property  {CGPoint=dd} balloonViewOrigin
 @property  BOOL color
 @property  NSLayoutConstraint *heightConstraint
 @property  BOOL hasSelectedDefaultEffect
 @property  CKFullScreenEffectManager *fsem
 @property  UIView *contentView
 @property  BOOL showingInStandAloneWindow
 @property  <CKEffectPickerViewControllerDelegate> *delegate

  // instance methods
  -[CKEffectPickerMacViewController titleLabel]
  -[CKEffectPickerMacViewController fsem]
  -[CKEffectPickerMacViewController handleTouchUp:]
  -[CKEffectPickerMacViewController setShowingInStandAloneWindow:]
  -[CKEffectPickerMacViewController composition]
  -[CKEffectPickerMacViewController setSendButton:]
  -[CKEffectPickerMacViewController setDummyAnimator:]
  -[CKEffectPickerMacViewController setSelectionViewController:]
  -[CKEffectPickerMacViewController setEffectCollectionViewController:]
  -[CKEffectPickerMacViewController setTitleVibrancyEffect:]
  -[CKEffectPickerMacViewController setTitleContainerView:]
  -[CKEffectPickerMacViewController selectionViewController]
  -[CKEffectPickerMacViewController closeButtonPressed:]
  -[CKEffectPickerMacViewController setBalloonContainer:]
  -[CKEffectPickerMacViewController hasSelectedDefaultEffect]
  -[CKEffectPickerMacViewController setHasSelectedDefaultEffect:]
  -[CKEffectPickerMacViewController balloonContainer]
  -[CKEffectPickerMacViewController effectShouldDisplayOverBalloon:]
  -[CKEffectPickerMacViewController effectCollectionViewController]
  -[CKEffectPickerMacViewController titleContainerView]
  -[CKEffectPickerMacViewController titleVibrancyEffect]
  -[CKEffectPickerMacViewController heightConstraint]
  -[CKEffectPickerMacViewController startAnimationPreviewForIdentifier:]
  -[CKEffectPickerMacViewController _defaultSendAnimationContextForAnimationPreview]
  -[CKEffectPickerMacViewController effectCollectionViewController:willDisplayEffect:]
  -[CKEffectPickerMacViewController setFsem:]
  -[CKEffectPickerMacViewController color]
  -[CKEffectPickerMacViewController .cxx_destruct]
  -[CKEffectPickerMacViewController effectSelectionViewController:didSelectEffectWithIdentifier:]
  -[CKEffectPickerMacViewController updateHintTransition:]
  -[CKEffectPickerMacViewController handleTouchMoved:]
  -[CKEffectPickerMacViewController balloonViewOrigin]
  -[CKEffectPickerMacViewController setBalloonViewOrigin:]
  -[CKEffectPickerMacViewController touchUpInsideSendButton:]
  -[CKEffectPickerMacViewController viewDidLoad]
  -[CKEffectPickerMacViewController setTitleLabel:]
  -[CKEffectPickerMacViewController contentView]
  -[CKEffectPickerMacViewController setDelegate:]
  -[CKEffectPickerMacViewController balloonView]
  -[CKEffectPickerMacViewController setColor:]
  -[CKEffectPickerMacViewController showingInStandAloneWindow]
  -[CKEffectPickerMacViewController updateColor:]
  -[CKEffectPickerMacViewController keyCommands]
  -[CKEffectPickerMacViewController setCloseButtonYPosition:]
  -[CKEffectPickerMacViewController initWithComposition:balloonViewOrigin:color:]
  -[CKEffectPickerMacViewController viewWillAppear:]
  -[CKEffectPickerMacViewController setHeightConstraint:]
  -[CKEffectPickerMacViewController sendButton]
  -[CKEffectPickerMacViewController delegate]
  -[CKEffectPickerMacViewController setCloseButton:]
  -[CKEffectPickerMacViewController setBalloonView:]
  -[CKEffectPickerMacViewController presentPicker]
  -[CKEffectPickerMacViewController setContentView:]
  -[CKEffectPickerMacViewController setComposition:]
  -[CKEffectPickerMacViewController closeButton]
  -[CKEffectPickerMacViewController dummyAnimator]
  -[CKEffectPickerMacViewController keyCommandReturn:]


CKAlertUtilities : NSObject
 @property  <CKAlertUtilitiesProtocol> *delegate

  // class methods
  +[CKAlertUtilities coreTelephonyClient]
  +[CKAlertUtilities selectedSubscriptionContext]
  +[CKAlertUtilities _getCTPhoneNumber]
  +[CKAlertUtilities _isNumberEditable]
  +[CKAlertUtilities _grabCTSIMStatus]
  +[CKAlertUtilities phoneNumberInfo]
  +[CKAlertUtilities missingAlertTypeToNotify]

  // instance methods
  -[CKAlertUtilities .cxx_destruct]
  -[CKAlertUtilities _displayMissingInformationAlert:]
  -[CKAlertUtilities _showNetworkPrefs:]
  -[CKAlertUtilities _didFinishCheckingMissingCarrierSetting]
  -[CKAlertUtilities checkMissingCarrierSetting]
  -[CKAlertUtilities setDelegate:]
  -[CKAlertUtilities delegate]


CKMeCardNavigationController : UINavigationController
  // instance methods
  -[CKMeCardNavigationController canBecomeFirstResponder]
  -[CKMeCardNavigationController viewWillAppear:]


CKWaveformProgressView : CKBalloonImageView
 @property  IMManualUpdater *displayUpdater
 @property  BOOL color
 @property  double duration
 @property  double currentTime
 @property  UIImage *waveform
 @property  BOOL playing
 @property  BOOL played

  // instance methods
  -[CKWaveformProgressView setPlaying:]
  -[CKWaveformProgressView isPlaying]
  -[CKWaveformProgressView setWaveform:]
  -[CKWaveformProgressView isPlayed]
  -[CKWaveformProgressView prepareForDisplay]
  -[CKWaveformProgressView color]
  -[CKWaveformProgressView .cxx_destruct]
  -[CKWaveformProgressView waveform]
  -[CKWaveformProgressView prepareForDisplayIfNeeded]
  -[CKWaveformProgressView setDuration:]
  -[CKWaveformProgressView setColor:]
  -[CKWaveformProgressView setCurrentTime:]
  -[CKWaveformProgressView currentTime]
  -[CKWaveformProgressView initWithFrame:]
  -[CKWaveformProgressView setImage:]
  -[CKWaveformProgressView displayUpdater]
  -[CKWaveformProgressView setDisplayUpdater:]
  -[CKWaveformProgressView setNeedsPrepareForDisplay]
  -[CKWaveformProgressView duration]
  -[CKWaveformProgressView setPlayed:]


CKLinkBalloonView : CKImageBalloonView <LPLinkViewDelegate>
 @property  LPLinkView *linkView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKLinkBalloonView prepareForDisplay]
  -[CKLinkBalloonView .cxx_destruct]
  -[CKLinkBalloonView linkView]
  -[CKLinkBalloonView layoutSubviews]
  -[CKLinkBalloonView linkViewNeedsResize:]
  -[CKLinkBalloonView _linkViewMetadataDidBecomeComplete:]
  -[CKLinkBalloonView isIrisAsset]
  -[CKLinkBalloonView prepareForReuse]
  -[CKLinkBalloonView setLinkView:]
  -[CKLinkBalloonView setIsIrisAsset:]
  -[CKLinkBalloonView sizeThatFits:textAlignmentInsets:]


CKAutoloopMovieReplyPreviewBalloonView : CKAutoloopMovieBalloonView
  // instance methods
  -[CKAutoloopMovieReplyPreviewBalloonView prepareForDisplay]
  -[CKAutoloopMovieReplyPreviewBalloonView layoutSubviews]
  -[CKAutoloopMovieReplyPreviewBalloonView initWithFrame:]


CKDetailsShowMoreContactsLargeTextCell : CKDetailsShowMoreContactsCell
  // instance methods
  -[CKDetailsShowMoreContactsLargeTextCell _initConstraints]
  -[CKDetailsShowMoreContactsLargeTextCell sizeThatFits:]
  -[CKDetailsShowMoreContactsLargeTextCell initWithStyle:reuseIdentifier:]


CKMomentSharePreviewAsset : NSObject <PXDisplayAsset>
 @property  PHMomentShare *momentShare
 @property  BOOL isPreviewImageDataAvailable
 @property  NSData *previewImageData
 @property  UIImage *previewImage
 @property  long long mediaType
 @property  unsigned long mediaSubtypes
 @property  NSDate *creationDate
 @property  NSDate *localCreationDate
 @property  BOOL favorite
 @property  BOOL representsBurst
 @property  BOOL isInCloud
 @property  BOOL isEligibleForAutoPlayback
 @property  unsigned long pixelWidth
 @property  unsigned long pixelHeight
 @property  Class defaultImageProviderClass
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} preferredCropRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} acceptableCropRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} faceAreaRect
 @property  double duration
 @property  {?=qiIq} livePhotoVideoDuration
 @property  long long playbackStyle
 @property  long long playbackVariation
 @property  double aspectRatio
 @property  unsigned long thumbnailVersion
 @property  NSString *uuid
 @property  NSNumber *hdrGain
 @property  unsigned long burstSelectionTypes
 @property  NSString *localizedGeoDescription
 @property  NSDate *importDate
 @property  BOOL isAutoPlaybackEligibilityEstimated
 @property  NSData *fetchColorNormalizationData
 @property  unsigned long thumbnailIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMomentSharePreviewAsset aspectRatio]
  -[CKMomentSharePreviewAsset .cxx_destruct]
  -[CKMomentSharePreviewAsset mediaSubtypes]
  -[CKMomentSharePreviewAsset acceptableCropRect]
  -[CKMomentSharePreviewAsset localCreationDate]
  -[CKMomentSharePreviewAsset isInCloud]
  -[CKMomentSharePreviewAsset preferredCropRect]
  -[CKMomentSharePreviewAsset pixelWidth]
  -[CKMomentSharePreviewAsset previewImageData]
  -[CKMomentSharePreviewAsset isPreviewImageDataAvailable]
  -[CKMomentSharePreviewAsset bestCropRectForAspectRatio:verticalContentMode:cropMode:]
  -[CKMomentSharePreviewAsset thumbnailIndex]
  -[CKMomentSharePreviewAsset isContentEqualTo:]
  -[CKMomentSharePreviewAsset representsBurst]
  -[CKMomentSharePreviewAsset isEligibleForAutoPlayback]
  -[CKMomentSharePreviewAsset defaultImageProviderClass]
  -[CKMomentSharePreviewAsset bestCropRectForAspectRatio:]
  -[CKMomentSharePreviewAsset initWithMomentShare:]
  -[CKMomentSharePreviewAsset pixelHeight]
  -[CKMomentSharePreviewAsset init]
  -[CKMomentSharePreviewAsset previewImage]
  -[CKMomentSharePreviewAsset playbackStyle]
  -[CKMomentSharePreviewAsset creationDate]
  -[CKMomentSharePreviewAsset uuid]
  -[CKMomentSharePreviewAsset mediaType]
  -[CKMomentSharePreviewAsset isFavorite]
  -[CKMomentSharePreviewAsset size]
  -[CKMomentSharePreviewAsset momentShare]
  -[CKMomentSharePreviewAsset copyWithZone:]
  -[CKMomentSharePreviewAsset faceAreaRect]
  -[CKMomentSharePreviewAsset playbackVariation]


CKMomentSharePlaceholderAsset : NSObject <PXDisplayAsset>
 @property  UIImage *placeholderImage
 @property  long long mediaType
 @property  unsigned long mediaSubtypes
 @property  NSDate *creationDate
 @property  NSDate *localCreationDate
 @property  BOOL favorite
 @property  BOOL representsBurst
 @property  BOOL isInCloud
 @property  BOOL isEligibleForAutoPlayback
 @property  unsigned long pixelWidth
 @property  unsigned long pixelHeight
 @property  Class defaultImageProviderClass
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} preferredCropRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} acceptableCropRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} faceAreaRect
 @property  double duration
 @property  {?=qiIq} livePhotoVideoDuration
 @property  long long playbackStyle
 @property  long long playbackVariation
 @property  double aspectRatio
 @property  unsigned long thumbnailVersion
 @property  NSString *uuid
 @property  NSNumber *hdrGain
 @property  unsigned long burstSelectionTypes
 @property  NSString *localizedGeoDescription
 @property  NSDate *importDate
 @property  BOOL isAutoPlaybackEligibilityEstimated
 @property  NSData *fetchColorNormalizationData
 @property  unsigned long thumbnailIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKMomentSharePlaceholderAsset placeholderImage]
  +[CKMomentSharePlaceholderAsset sharedInstance]

  // instance methods
  -[CKMomentSharePlaceholderAsset placeholderImage]
  -[CKMomentSharePlaceholderAsset aspectRatio]
  -[CKMomentSharePlaceholderAsset .cxx_destruct]
  -[CKMomentSharePlaceholderAsset mediaSubtypes]
  -[CKMomentSharePlaceholderAsset acceptableCropRect]
  -[CKMomentSharePlaceholderAsset localCreationDate]
  -[CKMomentSharePlaceholderAsset isInCloud]
  -[CKMomentSharePlaceholderAsset preferredCropRect]
  -[CKMomentSharePlaceholderAsset pixelWidth]
  -[CKMomentSharePlaceholderAsset thumbnailIndex]
  -[CKMomentSharePlaceholderAsset isContentEqualTo:]
  -[CKMomentSharePlaceholderAsset representsBurst]
  -[CKMomentSharePlaceholderAsset isEligibleForAutoPlayback]
  -[CKMomentSharePlaceholderAsset defaultImageProviderClass]
  -[CKMomentSharePlaceholderAsset bestCropRectForAspectRatio:]
  -[CKMomentSharePlaceholderAsset pixelHeight]
  -[CKMomentSharePlaceholderAsset init]
  -[CKMomentSharePlaceholderAsset playbackStyle]
  -[CKMomentSharePlaceholderAsset creationDate]
  -[CKMomentSharePlaceholderAsset uuid]
  -[CKMomentSharePlaceholderAsset mediaType]
  -[CKMomentSharePlaceholderAsset isFavorite]
  -[CKMomentSharePlaceholderAsset size]
  -[CKMomentSharePlaceholderAsset copyWithZone:]
  -[CKMomentSharePlaceholderAsset faceAreaRect]
  -[CKMomentSharePlaceholderAsset playbackVariation]


CKPhotosGridFooterViewModel : PXFooterViewModel <PXChangeObserver, IMPhotoLibraryPersistenceManagerListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKPhotosGridFooterViewModel photoLibraryPersistedSyndicatedAssetSetDidChange]
  -[CKPhotosGridFooterViewModel .cxx_destruct]
  -[CKPhotosGridFooterViewModel initAssetsDataSourceManager:syndicationIdentifiers:]
  -[CKPhotosGridFooterViewModel _updateSavedCount]
  -[CKPhotosGridFooterViewModel setDetailedCounts:]
  -[CKPhotosGridFooterViewModel setSavedCount:]
  -[CKPhotosGridFooterViewModel _updateDetailedCounts]
  -[CKPhotosGridFooterViewModel observable:didChange:context:]


CKAcknowledgmentBalloonView : CKBalloonView
 @property  unsigned long stackCount
 @property  long long coloredPart
 @property  CKAcknowledgmentGlyphView *glyphView

  // instance methods
  -[CKAcknowledgmentBalloonView configureForAggregateAcknowledgmentChatItem:]
  -[CKAcknowledgmentBalloonView .cxx_destruct]
  -[CKAcknowledgmentBalloonView glyphView]
  -[CKAcknowledgmentBalloonView stackCount]
  -[CKAcknowledgmentBalloonView setGlyphView:]
  -[CKAcknowledgmentBalloonView setStackCount:]
  -[CKAcknowledgmentBalloonView coloredPart]
  -[CKAcknowledgmentBalloonView setColoredPart:]
  -[CKAcknowledgmentBalloonView prepareForReuse]


CKRecipientTableViewCell : MFRecipientTableViewCell
  // class methods
  +[CKRecipientTableViewCell cellForRecipient:]

  // instance methods
  -[CKRecipientTableViewCell setServiceColor:animated:]
  -[CKRecipientTableViewCell initWithStyle:reuseIdentifier:]


CKTranscriptLocationChatItem : CKAttachmentMessagePartChatItem
 @property  CKLocationMediaObject *locationMediaObject
 @property  NSURL *locationURL

  // instance methods
  -[CKTranscriptLocationChatItem .cxx_destruct]
  -[CKTranscriptLocationChatItem transferGUID]
  -[CKTranscriptLocationChatItem mediaObject]
  -[CKTranscriptLocationChatItem balloonViewClass]
  -[CKTranscriptLocationChatItem setLocationURL:]
  -[CKTranscriptLocationChatItem locationMediaObject]
  -[CKTranscriptLocationChatItem setLocationMediaObject:]
  -[CKTranscriptLocationChatItem canCopy]
  -[CKTranscriptLocationChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKTranscriptLocationChatItem locationURL]
  -[CKTranscriptLocationChatItem dragItemProvider]


CKTUConversationViewUtilities : NSObject
  // class methods
  +[CKTUConversationViewUtilities activityBundleIdentifierForTUConversation:]
  +[CKTUConversationViewUtilities activityAppNameForTUConversation:]
  +[CKTUConversationViewUtilities sharePlayIcon]
  +[CKTUConversationViewUtilities formatLPImageForScreenShare:conversation:]
  +[CKTUConversationViewUtilities activityDescriptionStringForTUConversation:]
  +[CKTUConversationViewUtilities faceTimeIconSize]
  +[CKTUConversationViewUtilities ckTUConversationStateForTUConversation:]
  +[CKTUConversationViewUtilities activityTitleForTUConversation:]
  +[CKTUConversationViewUtilities activityTextForTUConversation:]
  +[CKTUConversationViewUtilities joinStateStatusStringForTUConversation:]
  +[CKTUConversationViewUtilities faceTimeIconForTUConversation:]
  +[CKTUConversationViewUtilities activityImageForTUConversation:]
  +[CKTUConversationViewUtilities activityIconForTUConversation:iconSize:]
  +[CKTUConversationViewUtilities activityHasImageForTUConversation:]


CKAppIconView : UIView
 @property  long long appName
 @property  UIView *activityItemView
 @property  NSMutableArray *constraints
 @property  UIView *contactItemView

  // instance methods
  -[CKAppIconView appName]
  -[CKAppIconView constraints]
  -[CKAppIconView activityItemView]
  -[CKAppIconView updateConstraints]
  -[CKAppIconView .cxx_destruct]
  -[CKAppIconView setConstraints:]
  -[CKAppIconView setUpSubviews]
  -[CKAppIconView initWithFrame:withAppName:]
  -[CKAppIconView setActivityItemView:]
  -[CKAppIconView setContactItemView:]
  -[CKAppIconView contactItemView]
  -[CKAppIconView setAppName:]


CKMediaObjectCopyAssetActionPerformer : CKMediaObjectAssetActionPerformer
  // class methods
  +[CKMediaObjectCopyAssetActionPerformer canPerformWithActionManager:selectionSnapshot:]
  +[CKMediaObjectCopyAssetActionPerformer canPerformOnImplicitSelection]
  +[CKMediaObjectCopyAssetActionPerformer localizedTitleForUseCase:actionManager:]
  +[CKMediaObjectCopyAssetActionPerformer systemImageNameForActionManager:]

  // instance methods
  -[CKMediaObjectCopyAssetActionPerformer performUserInteractionTask]


CKBrowserFullscreenRevealPresentationController : UIPresentationController
 @property  CKBrowserFullscreenRevealDimmingView *dimmingView
 @property  BOOL presenting
 @property  BOOL dismissing
 @property  UIStatusBar *statusBar
 @property  UIStatusBarWindow *statusBarWindow
 @property  unsigned long statusBarResizeMask
 @property  UIView *presentingSnapshotView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} presentingSnapshotFrame
 @property  @? dismissHandler

  // instance methods
  -[CKBrowserFullscreenRevealPresentationController dimmingView]
  -[CKBrowserFullscreenRevealPresentationController containerViewDidLayoutSubviews]
  -[CKBrowserFullscreenRevealPresentationController setDimmingView:]
  -[CKBrowserFullscreenRevealPresentationController statusBarWindow]
  -[CKBrowserFullscreenRevealPresentationController .cxx_destruct]
  -[CKBrowserFullscreenRevealPresentationController dismissalTransitionWillBegin]
  -[CKBrowserFullscreenRevealPresentationController frameOfPresentedViewInContainerView]
  -[CKBrowserFullscreenRevealPresentationController initWithPresentedViewController:presentingViewController:]
  -[CKBrowserFullscreenRevealPresentationController dimmingViewTapped:]
  -[CKBrowserFullscreenRevealPresentationController _willChangeStatusBarFrame:]
  -[CKBrowserFullscreenRevealPresentationController _prepareViewHierarchyForPresentation]
  -[CKBrowserFullscreenRevealPresentationController dismissalTransitionDidEnd:]
  -[CKBrowserFullscreenRevealPresentationController _configureViewsForPresentedState]
  -[CKBrowserFullscreenRevealPresentationController presentingSnapshotFrame]
  -[CKBrowserFullscreenRevealPresentationController presentingSnapshotView]
  -[CKBrowserFullscreenRevealPresentationController _configureViewsForDismissedState]
  -[CKBrowserFullscreenRevealPresentationController setPresentingSnapshotView:]
  -[CKBrowserFullscreenRevealPresentationController setDismissHandler:]
  -[CKBrowserFullscreenRevealPresentationController setPresentingSnapshotFrame:]
  -[CKBrowserFullscreenRevealPresentationController _viewsToApplyTransform]
  -[CKBrowserFullscreenRevealPresentationController _viewsToApplyCornerRadius]
  -[CKBrowserFullscreenRevealPresentationController setStatusBarResizeMask:]
  -[CKBrowserFullscreenRevealPresentationController statusBarResizeMask]
  -[CKBrowserFullscreenRevealPresentationController setStatusBarWindow:]
  -[CKBrowserFullscreenRevealPresentationController containerViewWillLayoutSubviews]
  -[CKBrowserFullscreenRevealPresentationController statusBar]
  -[CKBrowserFullscreenRevealPresentationController setDismissing:]
  -[CKBrowserFullscreenRevealPresentationController _cleanupPresentation]
  -[CKBrowserFullscreenRevealPresentationController presentationTransitionWillBegin]
  -[CKBrowserFullscreenRevealPresentationController isDismissing]
  -[CKBrowserFullscreenRevealPresentationController setPresenting:]
  -[CKBrowserFullscreenRevealPresentationController dealloc]
  -[CKBrowserFullscreenRevealPresentationController setStatusBar:]
  -[CKBrowserFullscreenRevealPresentationController shouldRemovePresentersView]
  -[CKBrowserFullscreenRevealPresentationController _shouldGrabPresentersView]
  -[CKBrowserFullscreenRevealPresentationController isPresenting]
  -[CKBrowserFullscreenRevealPresentationController dismissHandler]
  -[CKBrowserFullscreenRevealPresentationController presentationTransitionDidEnd:]


CKBrowserFullscreenRevealDimmingView : UIView
  // instance methods
  -[CKBrowserFullscreenRevealDimmingView _canHandleStatusBarTouchAtLocation:]


CKMessageAcknowledgmentChatItem : CKAssociatedMessageChatItem <CKMessageAcknowledgment>
 @property  IMHandle *sender
 @property  BOOL balloonOrientation
 @property  BOOL balloonColorType
 @property  long long messageAcknowledgmentType
 @property  UIColor *acknowledgmentImageColor
 @property  NSString *acknowledgmentImageName
 @property  UIColor *selectedAcknowledgmentImageColor
 @property  UIColor *selectedBalloonColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMessageAcknowledgmentChatItem themeColor]
  -[CKMessageAcknowledgmentChatItem transcriptOrientation]
  -[CKMessageAcknowledgmentChatItem contentInsets]
  -[CKMessageAcknowledgmentChatItem themeStyle]
  -[CKMessageAcknowledgmentChatItem sender]
  -[CKMessageAcknowledgmentChatItem initWithIMChatItem:maxWidth:]
  -[CKMessageAcknowledgmentChatItem balloonOrientation]
  -[CKMessageAcknowledgmentChatItem wantsDrawerLayout]
  -[CKMessageAcknowledgmentChatItem balloonColorType]
  -[CKMessageAcknowledgmentChatItem messageAcknowledgmentChatItem]
  -[CKMessageAcknowledgmentChatItem selectedBalloonColor]
  -[CKMessageAcknowledgmentChatItem acknowledgmentImageName]
  -[CKMessageAcknowledgmentChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKMessageAcknowledgmentChatItem selectedAcknowledgmentImageColor]
  -[CKMessageAcknowledgmentChatItem acknowledgmentImageColor]
  -[CKMessageAcknowledgmentChatItem messageAcknowledgmentType]
  -[CKMessageAcknowledgmentChatItem balloonDescriptor]


CKStickerDetailViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, CKAdaptivePresentedControllerProtocol>
 @property  NSArray *chatItems
 @property  UITableView *tableView
 @property  UIVisualEffectView *visualEffectView
 @property  <CKStickerDetailViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL wantsWindowedPresentation
 @property  BOOL preserveModalPresentationStyle
 @property  BOOL shouldHidePresentingWindow

  // instance methods
  -[CKStickerDetailViewController setTableView:]
  -[CKStickerDetailViewController chatItems]
  -[CKStickerDetailViewController tableView:canEditRowAtIndexPath:]
  -[CKStickerDetailViewController setVisualEffectView:]
  -[CKStickerDetailViewController tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:]
  -[CKStickerDetailViewController tableView:numberOfRowsInSection:]
  -[CKStickerDetailViewController tableView:heightForRowAtIndexPath:]
  -[CKStickerDetailViewController .cxx_destruct]
  -[CKStickerDetailViewController tableView:cellForRowAtIndexPath:]
  -[CKStickerDetailViewController setDelegate:]
  -[CKStickerDetailViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[CKStickerDetailViewController shouldAutorotate]
  -[CKStickerDetailViewController wantsWindowedPresentation]
  -[CKStickerDetailViewController setWantsWindowedPresentation:]
  -[CKStickerDetailViewController preserveModalPresentationStyle]
  -[CKStickerDetailViewController setPreserveModalPresentationStyle:]
  -[CKStickerDetailViewController constrainToPresentingVCBounds]
  -[CKStickerDetailViewController stickerDetailViewControllerCloseButtonPressed:]
  -[CKStickerDetailViewController _viewButtonTapped:]
  -[CKStickerDetailViewController deleteStickerAtIndexPath:]
  -[CKStickerDetailViewController _deleteSwipeActionForIndexPath:]
  -[CKStickerDetailViewController tableView:shouldHighlightRowAtIndexPath:]
  -[CKStickerDetailViewController tableView]
  -[CKStickerDetailViewController viewDidLayoutSubviews]
  -[CKStickerDetailViewController viewWillAppear:]
  -[CKStickerDetailViewController delegate]
  -[CKStickerDetailViewController setChatItems:]
  -[CKStickerDetailViewController loadView]
  -[CKStickerDetailViewController initWithStickerChatItems:]
  -[CKStickerDetailViewController visualEffectView]


CKReplyContextTranscriptPluginChatItem : CKMessagePartChatItem <CKReplyContext>
 @property  LPLinkMetadata *linkMetadata

  // instance methods
  -[CKReplyContextTranscriptPluginChatItem color]
  -[CKReplyContextTranscriptPluginChatItem .cxx_destruct]
  -[CKReplyContextTranscriptPluginChatItem mediaObject]
  -[CKReplyContextTranscriptPluginChatItem balloonViewClass]
  -[CKReplyContextTranscriptPluginChatItem configureBalloonView:]
  -[CKReplyContextTranscriptPluginChatItem replyIsFromMe]
  -[CKReplyContextTranscriptPluginChatItem isReplyContextPreview]
  -[CKReplyContextTranscriptPluginChatItem linkMetadata]
  -[CKReplyContextTranscriptPluginChatItem balloonDescriptor]


CKEntryViewButton : UIView <_UICursorInteractionDelegate>
 @property  long long entryViewButtonType
 @property  UIButton *button
 @property  UIVisualEffectView *vibrancyView
 @property  BOOL ckTintColor
 @property  BOOL wantsVibrancy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKEntryViewButton entryViewButtonImageForType:]
  +[CKEntryViewButton entryViewButtonImageForType:color:]
  +[CKEntryViewButton entryViewButtonOfType:]
  +[CKEntryViewButton entryViewButtonOfType:wantsVibrancy:]
  +[CKEntryViewButton imageNameForEntryViewButtonType:]
  +[CKEntryViewButton entryViewButtonImageWithName:tintColor:shouldSuppressHairline:]
  +[CKEntryViewButton overlayImageForImageNamed:tintColor:]
  +[CKEntryViewButton prewarmEntryViewButtons]

  // instance methods
  -[CKEntryViewButton cursorInteraction:styleForRegion:modifiers:]
  -[CKEntryViewButton setCkTintColor:]
  -[CKEntryViewButton setWantsVibrancy:]
  -[CKEntryViewButton setDefaultImage]
  -[CKEntryViewButton setTintedImageForButtonType:tintColor:]
  -[CKEntryViewButton .cxx_destruct]
  -[CKEntryViewButton layoutSubviews]
  -[CKEntryViewButton button]
  -[CKEntryViewButton wantsVibrancy]
  -[CKEntryViewButton entryViewButtonType]
  -[CKEntryViewButton setEntryViewButtonType:]
  -[CKEntryViewButton initWithFrame:wantsVibrancy:]
  -[CKEntryViewButton vibrancyView]
  -[CKEntryViewButton isEnabled]
  -[CKEntryViewButton setButton:]
  -[CKEntryViewButton setVibrancyView:]
  -[CKEntryViewButton cursorInteraction:regionForLocation:defaultRegion:]
  -[CKEntryViewButton setEnabled:]
  -[CKEntryViewButton ckTintColor]
  -[CKEntryViewButton __im_ff_systemImageAdoptionEnabled]
  -[CKEntryViewButton __im_ff_isNewAudioMessageFlowEnabled]


CKDetailsBusinessInfoHeaderFooterView : UITableViewHeaderFooterView <CKDetailsHeaderFooterView>
 @property  CKBusinessInfoView *businessInfoView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsBusinessInfoHeaderFooterView reuseIdentifier]

  // instance methods
  -[CKDetailsBusinessInfoHeaderFooterView businessInfoView]
  -[CKDetailsBusinessInfoHeaderFooterView .cxx_destruct]
  -[CKDetailsBusinessInfoHeaderFooterView setBusinessInfoView:]
  -[CKDetailsBusinessInfoHeaderFooterView layoutSubviews]
  -[CKDetailsBusinessInfoHeaderFooterView initWithReuseIdentifier:]


CKComposeRecipientView : CNComposeRecipientTextView
 @property  <CKComposeRecipientViewDelegate> *layoutDelegate

  // instance methods
  -[CKComposeRecipientView layoutMargins]
  -[CKComposeRecipientView setLayoutDelegate:]
  -[CKComposeRecipientView .cxx_destruct]
  -[CKComposeRecipientView setFrame:]
  -[CKComposeRecipientView layoutDelegate]
  -[CKComposeRecipientView safeAreaInsets]
  -[CKComposeRecipientView reset]
  -[CKComposeRecipientView atomTextViewDidBecomeFirstResponder:]
  -[CKComposeRecipientView initWithFrame:]


CKDetailsGroupHeaderCell : CKDetailsShowMoreContactsCell
 @property  CKDetailsAvatarPancakeView *avatarView
 @property  UILabel *titleLabel
 @property  UILabel *subTitleLabel
 @property  NSArray *avatarViews

  // class methods
  +[CKDetailsGroupHeaderCell reuseIdentifier]

  // instance methods
  -[CKDetailsGroupHeaderCell titleLabel]
  -[CKDetailsGroupHeaderCell setAvatarView:]
  -[CKDetailsGroupHeaderCell initWithStyle:reuseIdentifier:participants:]
  -[CKDetailsGroupHeaderCell .cxx_destruct]
  -[CKDetailsGroupHeaderCell avatarView]
  -[CKDetailsGroupHeaderCell setTitleLabel:]
  -[CKDetailsGroupHeaderCell layoutSubviews]
  -[CKDetailsGroupHeaderCell configureCellIconForCollapsedState:]
  -[CKDetailsGroupHeaderCell sizeThatFits:]
  -[CKDetailsGroupHeaderCell prepareForReuse]
  -[CKDetailsGroupHeaderCell addConstraints]
  -[CKDetailsGroupHeaderCell setAvatarViews:]
  -[CKDetailsGroupHeaderCell avatarViews]
  -[CKDetailsGroupHeaderCell setSubTitleLabel:]
  -[CKDetailsGroupHeaderCell subTitleLabel]


CKFunCameraViewController : UIViewController <CKBrowserViewControllerSendDelegate, CKCamPhysicalCaptureNotifierDelegate>
 @property  UIView *funCameraView
 @property  UIViewController<CKBrowserViewControllerProtocol> *funCameraAppViewController
 @property  BOOL isDismissing
 @property  IMBalloonPlugin *balloonPlugin
 @property  CKCamPhysicalCaptureNotifier *physicalCaptureNotifier
 @property  CKConversation *conversation
 @property  <CKFunCameraViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKFunCameraViewController prefersStatusBarHidden]
  -[CKFunCameraViewController viewWillLayoutSubviews]
  -[CKFunCameraViewController .cxx_destruct]
  -[CKFunCameraViewController initWithConversation:]
  -[CKFunCameraViewController traitCollection]
  -[CKFunCameraViewController setDelegate:]
  -[CKFunCameraViewController dismissAndReloadInputViews:]
  -[CKFunCameraViewController requestPresentationStyleExpanded:]
  -[CKFunCameraViewController funCameraView]
  -[CKFunCameraViewController physicalCaptureNotifier]
  -[CKFunCameraViewController commitPayload:]
  -[CKFunCameraViewController configuredContentViewControllerForPlugin:]
  -[CKFunCameraViewController contentViewControllerForPlugin:]
  -[CKFunCameraViewController funCameraAppViewController]
  -[CKFunCameraViewController startEditingPayload:dismiss:]
  -[CKFunCameraViewController _dismissAndPresentPhotosApp:]
  -[CKFunCameraViewController openURL:pluginID:completionHandler:]
  -[CKFunCameraViewController openURL:applicationIdentifier:pluginID:completionHandler:]
  -[CKFunCameraViewController dismissToKeyboard:]
  -[CKFunCameraViewController presentAlertWithTitle:message:buttonTitle:completion:]
  -[CKFunCameraViewController commitSticker:]
  -[CKFunCameraViewController commitSticker:withDragTarget:]
  -[CKFunCameraViewController setBalloonPlugin:]
  -[CKFunCameraViewController commitPayload:forPlugin:allowAllCommits:error:]
  -[CKFunCameraViewController dismissAndPresentPhotosApp]
  -[CKFunCameraViewController physicalCaptureNotifierDidChangeState:]
  -[CKFunCameraViewController setFunCameraView:]
  -[CKFunCameraViewController setFunCameraAppViewController:]
  -[CKFunCameraViewController setPhysicalCaptureNotifier:]
  -[CKFunCameraViewController balloonPlugin]
  -[CKFunCameraViewController viewWillAppear:]
  -[CKFunCameraViewController setIsDismissing:]
  -[CKFunCameraViewController _handleRemoteConnectionInterrupted:]
  -[CKFunCameraViewController dismiss]
  -[CKFunCameraViewController delegate]
  -[CKFunCameraViewController setConversation:]
  -[CKFunCameraViewController isDismissing]
  -[CKFunCameraViewController startEditingPayload:]
  -[CKFunCameraViewController stageAssetArchive:skipShelf:completionHandler:]
  -[CKFunCameraViewController dragControllerTranscriptDelegate]
  -[CKFunCameraViewController conversation]
  -[CKFunCameraViewController setLocalUserIsTyping:]
  -[CKFunCameraViewController viewDidDisappear:]


CKPassMediaObject : CKPassbookMediaObject
 @property  UIImage *icon

  // instance methods
  -[CKPassMediaObject icon]
  -[CKPassMediaObject generateThumbnailFillToSize:contentAlignmentInsets:]
  -[CKPassMediaObject .cxx_destruct]
  -[CKPassMediaObject passView]
  -[CKPassMediaObject initWithTransfer:context:forceInlinePreview:]
  -[CKPassMediaObject setIcon:]
  -[CKPassMediaObject subtitle]
  -[CKPassMediaObject title]


SMSApplicationIntentsHelper : NSObject
  // class methods
  +[SMSApplicationIntentsHelper isSendMessageInteraction:]
  +[SMSApplicationIntentsHelper continueWithSendMessageInteraction:chatRegistry:messagesController:conversationList:]


CKContactsSearchManager : NSObject <CNAutocompleteSearchConsumer, CNAutocompleteUIFetchDelegate>
 @property  CNAutocompleteSearchManager *searchManager
 @property  NSCharacterSet *emojiCharacterSet
 @property  NSMutableArray *searchResults
 @property  NSNumber *currentSearchTaskID
 @property  NSString *searchText
 @property  <CKContactsSearchManagerDelegate> *delegate
 @property  NSArray *enteredRecipients
 @property  BOOL suppressGroupSuggestions
 @property  BOOL biasForOutgoingInteraction
 @property  BOOL zkwGroupSuggestionsEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKContactsSearchManager removeRecipient:]
  -[CKContactsSearchManager searchManager]
  -[CKContactsSearchManager searchWithText:]
  -[CKContactsSearchManager enteredRecipients]
  -[CKContactsSearchManager setEnteredRecipients:]
  -[CKContactsSearchManager setSearchManager:]
  -[CKContactsSearchManager suppressGroupSuggestions]
  -[CKContactsSearchManager setSuppressGroupSuggestions:]
  -[CKContactsSearchManager didSelectRecipient:atIndex:]
  -[CKContactsSearchManager .cxx_destruct]
  -[CKContactsSearchManager cancelSearch]
  -[CKContactsSearchManager searchText]
  -[CKContactsSearchManager setDelegate:]
  -[CKContactsSearchManager init]
  -[CKContactsSearchManager isMAIDGroupsEnabled]
  -[CKContactsSearchManager setSearchText:]
  -[CKContactsSearchManager setBiasForOutgoingInteraction:]
  -[CKContactsSearchManager biasForOutgoingInteraction]
  -[CKContactsSearchManager setCurrentSearchTaskID:]
  -[CKContactsSearchManager currentSearchTaskID]
  -[CKContactsSearchManager _cullOldResults:]
  -[CKContactsSearchManager _sortResultsByDate:]
  -[CKContactsSearchManager _filterGroupResults:]
  -[CKContactsSearchManager emojiCharacterSet]
  -[CKContactsSearchManager _rangeForSearchTerm:inTarget:tokenizedByCharacterSet:]
  -[CKContactsSearchManager matchingConversationWithGuid:]
  -[CKContactsSearchManager shouldIncludeGroupInResults:]
  -[CKContactsSearchManager zkwGroupSuggestionsEnabled]
  -[CKContactsSearchManager createAutocompelteGroupMembersFromParticipants:]
  -[CKContactsSearchManager participantMatchResultsForSearchTerm:]
  -[CKContactsSearchManager nameGroupSearchResults]
  -[CKContactsSearchManager participantMatchGroupResults]
  -[CKContactsSearchManager zkwGroupSuggestions]
  -[CKContactsSearchManager consumeAutocompleteSearchResults:taskID:]
  -[CKContactsSearchManager delegate]
  -[CKContactsSearchManager finishedSearchingForAutocompleteResults]
  -[CKContactsSearchManager finishedTaskWithID:]
  -[CKContactsSearchManager beganNetworkActivity]
  -[CKContactsSearchManager endedNetworkActivity]
  -[CKContactsSearchManager getSupplementalGroupsForSearchQuery:completionHandler:]
  -[CKContactsSearchManager setZkwGroupSuggestionsEnabled:]
  -[CKContactsSearchManager _sortSearchResultsWithCoreRecentsResults:displayNameMatches:participantNameMatches:]
  -[CKContactsSearchManager setEmojiCharacterSet:]
  -[CKContactsSearchManager searchResults]
  -[CKContactsSearchManager setSearchResults:]
  -[CKContactsSearchManager dealloc]


CKNavigationBarTitleController : NSObject
 @property  CKConversation *conversation
 @property  CKAvatarPickerViewController *avatarPickerViewController
 @property  _UINavigationBarTitleView *titleView
 @property  NSArray *leftBarButtonItems
 @property  NSArray *rightBarButtonItems
 @property  BOOL editing
 @property  UIBarButtonItem *cancelBarButtonItem
 @property  UIBarButtonItem *deleteAllBarButtonItem
 @property  <CKNavigationBarTitleControllerDelegate> *delegate

  // instance methods
  -[CKNavigationBarTitleController titleView]
  -[CKNavigationBarTitleController _conversationList]
  -[CKNavigationBarTitleController .cxx_destruct]
  -[CKNavigationBarTitleController initWithConversation:]
  -[CKNavigationBarTitleController setDelegate:]
  -[CKNavigationBarTitleController setEditing:]
  -[CKNavigationBarTitleController isEditing]
  -[CKNavigationBarTitleController delegate]
  -[CKNavigationBarTitleController _pressedAvatarView]
  -[CKNavigationBarTitleController deleteAllBarButtonItem]
  -[CKNavigationBarTitleController conversation]
  -[CKNavigationBarTitleController leftBarButtonItems]
  -[CKNavigationBarTitleController rightBarButtonItems]
  -[CKNavigationBarTitleController avatarPickerViewController]
  -[CKNavigationBarTitleController cancelBarButtonItem]
  -[CKNavigationBarTitleController _editCancelButtonPressed]


CKAssociatedStickerChatItem : CKAssociatedMessageChatItem
 @property  CKMediaObject *mediaObject
 @property  NSString *transferGUID

  // instance methods
  -[CKAssociatedStickerChatItem setMediaObject:]
  -[CKAssociatedStickerChatItem transcriptOrientation]
  -[CKAssociatedStickerChatItem .cxx_destruct]
  -[CKAssociatedStickerChatItem transferGUID]
  -[CKAssociatedStickerChatItem mediaObject]
  -[CKAssociatedStickerChatItem initWithIMChatItem:maxWidth:]
  -[CKAssociatedStickerChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKAssociatedStickerChatItem IMAssociatedStickerChatItem]
  -[CKAssociatedStickerChatItem cellClass]


CKAudioAttachmentItem : CKAttachmentItem
  // class methods
  +[CKAudioAttachmentItem UTITypes]

  // instance methods
  -[CKAudioAttachmentItem cachedPreview]
  -[CKAudioAttachmentItem previewItemTitle]


CKQLPreviewControllerDataSource : NSObject <QLPreviewControllerConformingDataSource, QLPreviewControllerDataSource>
 @property  NSArray *previewItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKQLPreviewControllerDataSource previewController:previewItemAtIndex:]
  -[CKQLPreviewControllerDataSource numberOfPreviewItemsInPreviewController:]
  -[CKQLPreviewControllerDataSource previewItems]
  -[CKQLPreviewControllerDataSource .cxx_destruct]
  -[CKQLPreviewControllerDataSource setPreviewItems:]


CKTipKitOnboardingCollectionViewCell : CKTipKitCollectionViewCell <CNAvatarViewDelegate>
 @property  NSArray *recommendedPinningConversations
 @property  CAPackage *package
 @property  CALayer *packageLayer
 @property  CAStateController *stateController
 @property  long long state
 @property  UIView *micaView
 @property  NSArray *layerNames
 @property  NSMutableArray *avatarViews
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKTipKitOnboardingCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKTipKitOnboardingCollectionViewCell package]
  -[CKTipKitOnboardingCollectionViewCell stopAnimations]
  -[CKTipKitOnboardingCollectionViewCell didUpdateContentForAvatarView:]
  -[CKTipKitOnboardingCollectionViewCell .cxx_destruct]
  -[CKTipKitOnboardingCollectionViewCell resetViews]
  -[CKTipKitOnboardingCollectionViewCell setPackage:]
  -[CKTipKitOnboardingCollectionViewCell micaView]
  -[CKTipKitOnboardingCollectionViewCell recommendedPinningConversations]
  -[CKTipKitOnboardingCollectionViewCell setState:]
  -[CKTipKitOnboardingCollectionViewCell presentingViewControllerForAvatarView:]
  -[CKTipKitOnboardingCollectionViewCell prepareForReuse]
  -[CKTipKitOnboardingCollectionViewCell setAvatarViews:]
  -[CKTipKitOnboardingCollectionViewCell avatarViews]
  -[CKTipKitOnboardingCollectionViewCell state]
  -[CKTipKitOnboardingCollectionViewCell packageLayer]
  -[CKTipKitOnboardingCollectionViewCell initWithFrame:]
  -[CKTipKitOnboardingCollectionViewCell setLayerNames:]
  -[CKTipKitOnboardingCollectionViewCell layerNames]
  -[CKTipKitOnboardingCollectionViewCell setMicaView:]
  -[CKTipKitOnboardingCollectionViewCell startAnimations]
  -[CKTipKitOnboardingCollectionViewCell stepThroughOnboardingTipAnimationForLayer:]
  -[CKTipKitOnboardingCollectionViewCell stateController]
  -[CKTipKitOnboardingCollectionViewCell setRecommendedPinningConversations:]
  -[CKTipKitOnboardingCollectionViewCell updateTipAnimationIfNeeded]
  -[CKTipKitOnboardingCollectionViewCell setPackageLayer:]
  -[CKTipKitOnboardingCollectionViewCell willDisplayCell]
  -[CKTipKitOnboardingCollectionViewCell didEndDisplaying]
  -[CKTipKitOnboardingCollectionViewCell setStateController:]
  -[CKTipKitOnboardingCollectionViewCell dealloc]
  -[CKTipKitOnboardingCollectionViewCell setTipContentView:withRecommenedPinningConversations:]


CKBlankTranscriptController : UIViewController
  // instance methods
  -[CKBlankTranscriptController wantsFullScreenLayout]
  -[CKBlankTranscriptController initWithNibName:bundle:]
  -[CKBlankTranscriptController viewDidUnload]
  -[CKBlankTranscriptController loadView]
  -[CKBlankTranscriptController supportedInterfaceOrientations]


CKMovieBalloonView : CKImageBalloonView
 @property  AVPlayerItem *avPlayerItem
 @property  AVPlayer *avPlayer
 @property  AVPlayerLayer *avPlayerLayer
 @property  CKMovieMediaObject *mediaObject
 @property  <CKMovieBalloonViewDelegate> *delegate

  // instance methods
  -[CKMovieBalloonView setMediaObject:]
  -[CKMovieBalloonView prepareForDisplay]
  -[CKMovieBalloonView .cxx_destruct]
  -[CKMovieBalloonView mediaObject]
  -[CKMovieBalloonView layoutSubviews]
  -[CKMovieBalloonView avPlayer]
  -[CKMovieBalloonView prepareForReuse]
  -[CKMovieBalloonView setAVPlayer:]
  -[CKMovieBalloonView avPlayerLayer]
  -[CKMovieBalloonView cleanupPlayerIfNeeded]
  -[CKMovieBalloonView createAVAssetAndValidateCodec]
  -[CKMovieBalloonView setAVPlayerItem:]
  -[CKMovieBalloonView dealloc]
  -[CKMovieBalloonView videoDidReachEnd:]
  -[CKMovieBalloonView setAVPlayerLayer:]
  -[CKMovieBalloonView isCodecTypeAllowed:]
  -[CKMovieBalloonView avPlayerItem]
  -[CKMovieBalloonView tapGestureRecognized:]
  -[CKMovieBalloonView configureForMediaObject:previewWidth:orientation:hasInvisibleInkEffect:]


CKTranscriptTapbackSupplementaryView : CKTranscriptCollectionSupplementaryView
 @property  CKAcknowledgmentBalloonView *balloonView

  // class methods
  +[CKTranscriptTapbackSupplementaryView supplementaryViewKindPrefix]

  // instance methods
  -[CKTranscriptTapbackSupplementaryView .cxx_destruct]
  -[CKTranscriptTapbackSupplementaryView layoutSubviews]
  -[CKTranscriptTapbackSupplementaryView balloonView]
  -[CKTranscriptTapbackSupplementaryView prepareForReuse]
  -[CKTranscriptTapbackSupplementaryView initWithFrame:]
  -[CKTranscriptTapbackSupplementaryView setBalloonView:]
  -[CKTranscriptTapbackSupplementaryView configureForChatItem:context:]


CKReplyContextAttachmentMessagePartChatItem : CKAttachmentMessagePartChatItem <CKReplyContext>
  // instance methods
  -[CKReplyContextAttachmentMessagePartChatItem isEditable]
  -[CKReplyContextAttachmentMessagePartChatItem color]
  -[CKReplyContextAttachmentMessagePartChatItem balloonViewClass]
  -[CKReplyContextAttachmentMessagePartChatItem replyIsFromMe]
  -[CKReplyContextAttachmentMessagePartChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKReplyContextAttachmentMessagePartChatItem loadTranscriptDrawerText]
  -[CKReplyContextAttachmentMessagePartChatItem isReplyContextPreview]
  -[CKReplyContextAttachmentMessagePartChatItem balloonDescriptor]
  -[CKReplyContextAttachmentMessagePartChatItem balloonStyle]


CKAnimatedImageView : UIImageView <CKAnimationTimerObserver>
 @property  NSArray *frames
 @property  CKAnimatedImage *animatedImage
 @property  BOOL automaticallyObserveWindowForAnimationTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAnimatedImageView .cxx_destruct]
  -[CKAnimatedImageView setFrames:]
  -[CKAnimatedImageView frames]
  -[CKAnimatedImageView animationTimerFired:]
  -[CKAnimatedImageView didMoveToWindow]
  -[CKAnimatedImageView dealloc]
  -[CKAnimatedImageView automaticallyObserveWindowForAnimationTimer]
  -[CKAnimatedImageView setAutomaticallyObserveWindowForAnimationTimer:]
  -[CKAnimatedImageView animatedImage]
  -[CKAnimatedImageView updateAnimationTimerObserving]
  -[CKAnimatedImageView setAnimatedImage:]


CKMessageAcknowledgmentPickerBarViewController : UIViewController <CKMessageAcknowledgmentPickerBarItemViewDelegate>
 @property  <CKMessageAcknowledgmentPickerBarDelegate> *delegate
 @property  CKMessagePartChatItem *chatItem
 @property  BOOL forcedOrientation
 @property  BOOL useForcedOrientation
 @property  BOOL balloonAnchorVerticalOrientation

  // instance methods
  -[CKMessageAcknowledgmentPickerBarViewController .cxx_destruct]
  -[CKMessageAcknowledgmentPickerBarViewController initWithChatItem:]
  -[CKMessageAcknowledgmentPickerBarViewController setForcedOrientation:]
  -[CKMessageAcknowledgmentPickerBarViewController setUseForcedOrientation:]
  -[CKMessageAcknowledgmentPickerBarViewController forcedOrientation]
  -[CKMessageAcknowledgmentPickerBarViewController setDelegate:]
  -[CKMessageAcknowledgmentPickerBarViewController useForcedOrientation]
  -[CKMessageAcknowledgmentPickerBarViewController pickerView]
  -[CKMessageAcknowledgmentPickerBarViewController chatItem]
  -[CKMessageAcknowledgmentPickerBarViewController setChatItem:]
  -[CKMessageAcknowledgmentPickerBarViewController delegate]
  -[CKMessageAcknowledgmentPickerBarViewController pickerBarItemViewSelectionDidChange:]
  -[CKMessageAcknowledgmentPickerBarViewController adjustTailRelativeSiblingViewFrame:pickerFrame:]
  -[CKMessageAcknowledgmentPickerBarViewController isAnchoredToTop]
  -[CKMessageAcknowledgmentPickerBarViewController performShowAnimation:]
  -[CKMessageAcknowledgmentPickerBarViewController performSendAnimation:]
  -[CKMessageAcknowledgmentPickerBarViewController performCancelAnimation:]
  -[CKMessageAcknowledgmentPickerBarViewController balloonAnchorVerticalOrientation]
  -[CKMessageAcknowledgmentPickerBarViewController adjustTailRelativeSiblingViewFrame:]
  -[CKMessageAcknowledgmentPickerBarViewController calculateFrameRelativeToSiblingViewFrame:withinBounds:]
  -[CKMessageAcknowledgmentPickerBarViewController setBalloonAnchorVerticalOrientation:]
  -[CKMessageAcknowledgmentPickerBarViewController loadView]


CKBrowserSwitcherFooterViewDataSource : NSObject <CKBrowserSwitcherFooterViewDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBrowserSwitcherFooterViewDataSource init]
  -[CKBrowserSwitcherFooterViewDataSource switcherView:modelAtIndexPath:type:]
  -[CKBrowserSwitcherFooterViewDataSource numberOfPluginsInSwitcherView:forSection:]
  -[CKBrowserSwitcherFooterViewDataSource switcherView:indexPathOfModelWithIdentifier:]
  -[CKBrowserSwitcherFooterViewDataSource pluginManager]


CKBannerCollectionViewCell : UICollectionViewCell
 @property  UIImageView *bannerView

  // class methods
  +[CKBannerCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKBannerCollectionViewCell .cxx_destruct]
  -[CKBannerCollectionViewCell layoutSubviews]
  -[CKBannerCollectionViewCell init]
  -[CKBannerCollectionViewCell configureWithEntity:]
  -[CKBannerCollectionViewCell initWithFrame:]
  -[CKBannerCollectionViewCell bannerView]
  -[CKBannerCollectionViewCell setBannerView:]


CKAudioBalloonView : CKColoredBalloonView <CKBalloonVibrancy, CKAudioBalloonView>
 @property  UILabel *timeLabel
 @property  CKAudioProgressView *progressView
 @property  CKWaveformProgressView *waveformProgressView
 @property  double time
 @property  double duration
 @property  BOOL playing
 @property  BOOL played
 @property  long long waveformContentMode
 @property  BOOL controlHidden
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAudioBalloonView setPlaying:]
  -[CKAudioBalloonView isPlaying]
  -[CKAudioBalloonView setWaveform:]
  -[CKAudioBalloonView setControlHidden:]
  -[CKAudioBalloonView setTime:]
  -[CKAudioBalloonView isPlayed]
  -[CKAudioBalloonView prepareForDisplay]
  -[CKAudioBalloonView progressView]
  -[CKAudioBalloonView updateTimeString]
  -[CKAudioBalloonView .cxx_destruct]
  -[CKAudioBalloonView setDuration:]
  -[CKAudioBalloonView layoutSubviews]
  -[CKAudioBalloonView configureForComposition:]
  -[CKAudioBalloonView setTimeLabel:]
  -[CKAudioBalloonView time]
  -[CKAudioBalloonView prepareForReuse]
  -[CKAudioBalloonView timeLabel]
  -[CKAudioBalloonView configureForMessagePart:]
  -[CKAudioBalloonView setWaveformContentMode:]
  -[CKAudioBalloonView setProgressView:]
  -[CKAudioBalloonView initWithFrame:]
  -[CKAudioBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKAudioBalloonView waveformProgressView]
  -[CKAudioBalloonView waveformContentMode]
  -[CKAudioBalloonView setWaveformProgressView:]
  -[CKAudioBalloonView waveformProgressViewPanning:]
  -[CKAudioBalloonView nonVibrantSubViews]
  -[CKAudioBalloonView vibrantContainerWillReparentNonVibrantSubviews:]
  -[CKAudioBalloonView isControlHidden]
  -[CKAudioBalloonView alignmentRectInsets]
  -[CKAudioBalloonView updateProgress]
  -[CKAudioBalloonView __im_ff_isNewAudioMessageFlowEnabled]
  -[CKAudioBalloonView addOverlaySubview:]
  -[CKAudioBalloonView duration]
  -[CKAudioBalloonView setPlayed:]
  -[CKAudioBalloonView configureForMediaObject:previewWidth:orientation:]


CKPrintController : NSObject
 @property  CNAvatarImageRenderer *avatarImageRenderer
 @property  NSCache *avatarCache
 @property  BOOL isPrinting

  // class methods
  +[CKPrintController sharedInstance]
  +[CKPrintController printAttributes:]
  +[CKPrintController printBackgroundColor]
  +[CKPrintController printTranscriptTextColor]
  +[CKPrintController printBalloonTextColor]
  +[CKPrintController printResolvedColors:balloonDescriptor:coloredBalloonView:]

  // instance methods
  -[CKPrintController .cxx_destruct]
  -[CKPrintController clearAvatarCache]
  -[CKPrintController init]
  -[CKPrintController isPrinting]
  -[CKPrintController avatarImageRenderer]
  -[CKPrintController setAvatarImageRenderer:]
  -[CKPrintController setPrinting:]
  -[CKPrintController setAvatarCache:]
  -[CKPrintController avatarImageForContact:diameter:]
  -[CKPrintController avatarCache]


CKPrintTranscriptCollectionViewController : CKTranscriptCollectionViewController
  // instance methods
  -[CKPrintTranscriptCollectionViewController updateUIContents]
  -[CKPrintTranscriptCollectionViewController initWithConversation:delegate:balloonMaxWidth:marginInsets:]
  -[CKPrintTranscriptCollectionViewController chatItemsDidChange:]


CKBrowserViewController : UIViewController <CKBrowserViewControllerProtocol>
 @property  BOOL isTransitioningToExpandedPresentation
 @property  UIView *dragTargetView
 @property  CKBrowserDragManager *browserDragManager
 @property  UIViewController *presentationViewController
 @property  NSObject<CKBrowserViewControllerSendDelegate> *sendDelegate
 @property  IMBalloonPlugin *balloonPlugin
 @property  IMBalloonPluginDataSource *balloonPluginDataSource
 @property  BOOL isiMessage
 @property  NSString *conversationID
 @property  BOOL wantsDarkUI
 @property  BOOL wantsOpaqueUI
 @property  BOOL supportsQuickView
 @property  BOOL shouldSuppressEntryView
 @property  BOOL isPrimaryViewController
 @property  BOOL dismissing
 @property  BOOL mayBeKeptInViewHierarchy
 @property  long long browserPresentationStyle
 @property  BOOL shouldShowChatChrome
 @property  BOOL inExpandedPresentation
 @property  BOOL inFullScreenModalPresentation
 @property  NSString *sender
 @property  NSArray *recipients
 @property  BOOL wasExpandedPresentation
 @property  NSData *conversationEngramID
 @property  unsigned long badgeValue
 @property  long long currentBrowserConsumer
 @property  UIViewController *remoteViewController
 @property  BOOL shouldDisableSnapshotView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} horizontalSwipeExclusionRect
 @property  BOOL canReplaceDataSource
 @property  NSNumber *adamID
 @property  long long parentModalPresentationStyle
 @property  <UIViewControllerTransitioningDelegate> *parentTransitioningDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKBrowserViewController currentPPTTestName]
  +[CKBrowserViewController supportsMessagesAppExtendedLaunchTest]

  // instance methods
  -[CKBrowserViewController presentViewController:animated:completion:]
  -[CKBrowserViewController _edgeInsetsForChildViewController:insetsAreAbsolute:]
  -[CKBrowserViewController conversationID]
  -[CKBrowserViewController didTransitionFromOrientation:toOrientation:]
  -[CKBrowserViewController isiMessage]
  -[CKBrowserViewController .cxx_destruct]
  -[CKBrowserViewController isLoaded]
  -[CKBrowserViewController viewDidAppear:]
  -[CKBrowserViewController setDragTargetView:]
  -[CKBrowserViewController initWithBalloonPlugin:dataSource:]
  -[CKBrowserViewController initWithBalloonPlugin:]
  -[CKBrowserViewController setBalloonPluginDataSource:]
  -[CKBrowserViewController initWithBalloonPlugin:pluginPayloads:]
  -[CKBrowserViewController balloonPluginDataSource]
  -[CKBrowserViewController setConversationID:]
  -[CKBrowserViewController dismissViewControllerAnimated:completion:]
  -[CKBrowserViewController viewWillDisappear:]
  -[CKBrowserViewController balloonPlugin]
  -[CKBrowserViewController viewWillAppear:]
  -[CKBrowserViewController shouldShowChatChrome]
  -[CKBrowserViewController dismiss]
  -[CKBrowserViewController shouldDisableSnapshotView]
  -[CKBrowserViewController setShouldDisableSnapshotView:]
  -[CKBrowserViewController isDismissing]
  -[CKBrowserViewController sendDelegate]
  -[CKBrowserViewController isPrimaryViewController]
  -[CKBrowserViewController setIsPrimaryViewController:]
  -[CKBrowserViewController setIsiMessage:]
  -[CKBrowserViewController presentationViewController]
  -[CKBrowserViewController setPresentationViewController:]
  -[CKBrowserViewController setSendDelegate:]
  -[CKBrowserViewController _updateContentOverlayInsetsForSelfAndChildren]
  -[CKBrowserViewController browserPresentationStyle]
  -[CKBrowserViewController wantsDarkUI]
  -[CKBrowserViewController wantsOpaqueUI]
  -[CKBrowserViewController supportsQuickView]
  -[CKBrowserViewController mayBeKeptInViewHierarchy]
  -[CKBrowserViewController shouldSuppressEntryView]
  -[CKBrowserViewController inExpandedPresentation]
  -[CKBrowserViewController inFullScreenModalPresentation]
  -[CKBrowserViewController beginDisablingUserInteraction]
  -[CKBrowserViewController endDisablingUserInteraction]
  -[CKBrowserViewController viewWillTransitionToExpandedPresentation]
  -[CKBrowserViewController viewDidTransitionToExpandedPresentation]
  -[CKBrowserViewController viewWillTransitionToCompactPresentation]
  -[CKBrowserViewController viewDidTransitionToCompactPresentation]
  -[CKBrowserViewController wasExpandedPresentation]
  -[CKBrowserViewController browserDragManager]
  -[CKBrowserViewController currentBrowserConsumer]
  -[CKBrowserViewController setCurrentBrowserConsumer:]
  -[CKBrowserViewController loadView]
  -[CKBrowserViewController tearDownRemoteViewIfNeeded]
  -[CKBrowserViewController finishedPPTTestNamed:isCKLaunchTest:]
  -[CKBrowserViewController inCompactPresentation]
  -[CKBrowserViewController finishedPPTTestNamed:]
  -[CKBrowserViewController setIsTransitioningToExpandedPresentation:]
  -[CKBrowserViewController startPPTTestNamed:]
  -[CKBrowserViewController dragTargetView]
  -[CKBrowserViewController setBrowserDragManager:]
  -[CKBrowserViewController isTransitioningToExpandedPresentation]
  -[CKBrowserViewController viewDidDisappear:]


CKNicknameAlertHeaderView : UIView
 @property  IMNickname *nickname
 @property  CKAvatarView *avatarView
 @property  UILabel *nameLabel
 @property  UILabel *handleLabel

  // instance methods
  -[CKNicknameAlertHeaderView nickname]
  -[CKNicknameAlertHeaderView setAvatarView:]
  -[CKNicknameAlertHeaderView .cxx_destruct]
  -[CKNicknameAlertHeaderView _updateAvatarView]
  -[CKNicknameAlertHeaderView avatarView]
  -[CKNicknameAlertHeaderView layoutSubviews]
  -[CKNicknameAlertHeaderView nameText]
  -[CKNicknameAlertHeaderView setupViews]
  -[CKNicknameAlertHeaderView setNameLabel:]
  -[CKNicknameAlertHeaderView sizeThatFits:]
  -[CKNicknameAlertHeaderView handleLabel]
  -[CKNicknameAlertHeaderView setNickname:]
  -[CKNicknameAlertHeaderView handleText]
  -[CKNicknameAlertHeaderView setHandleLabel:]
  -[CKNicknameAlertHeaderView nameLabel]
  -[CKNicknameAlertHeaderView initWithFrame:nickname:]


CKNicknameAlertHeaderViewController : UIViewController
 @property  IMNickname *nickname

  // instance methods
  -[CKNicknameAlertHeaderViewController nickname]
  -[CKNicknameAlertHeaderViewController .cxx_destruct]
  -[CKNicknameAlertHeaderViewController viewDidLayoutSubviews]
  -[CKNicknameAlertHeaderViewController setNickname:]
  -[CKNicknameAlertHeaderViewController loadView]
  -[CKNicknameAlertHeaderViewController _expectedSize]
  -[CKNicknameAlertHeaderViewController initWithNickname:]


CKAppStripLayoutAttributes : UICollectionViewLayoutAttributes
 @property  long long appStripSize
 @property  BOOL showsBorder

  // instance methods
  -[CKAppStripLayoutAttributes isEqual:]
  -[CKAppStripLayoutAttributes setShowsBorder:]
  -[CKAppStripLayoutAttributes setAppStripSize:]
  -[CKAppStripLayoutAttributes showsBorder]
  -[CKAppStripLayoutAttributes appStripSize]
  -[CKAppStripLayoutAttributes copyWithZone:]


CKMentionEntityNode : NSObject
 @property  NSString *key
 @property  NSMutableSet *entities
 @property  NSMutableSet *possibleEntities
 @property  NSMutableDictionary *children

  // instance methods
  -[CKMentionEntityNode setChildren:]
  -[CKMentionEntityNode entities]
  -[CKMentionEntityNode setKey:]
  -[CKMentionEntityNode children]
  -[CKMentionEntityNode .cxx_destruct]
  -[CKMentionEntityNode possibleEntities]
  -[CKMentionEntityNode addPossibleEntity:]
  -[CKMentionEntityNode addChild:]
  -[CKMentionEntityNode addEntity:]
  -[CKMentionEntityNode key]
  -[CKMentionEntityNode setEntities:]
  -[CKMentionEntityNode setPossibleEntities:]


CKActionMenuGestureVelocitySample : NSObject

CKActionMenuGestureRecognizer : UILongPressGestureRecognizer
  // class methods
  +[CKActionMenuGestureRecognizer actionMenuGestureRecognizer]

  // instance methods
  -[CKActionMenuGestureRecognizer setAllowableMovement:]
  -[CKActionMenuGestureRecognizer velocityInView:]
  -[CKActionMenuGestureRecognizer setNumberOfTouchesRequired:]
  -[CKActionMenuGestureRecognizer .cxx_destruct]
  -[CKActionMenuGestureRecognizer initWithTarget:action:]
  -[CKActionMenuGestureRecognizer touchesBegan:withEvent:]
  -[CKActionMenuGestureRecognizer touchesMoved:withEvent:]
  -[CKActionMenuGestureRecognizer reset]
  -[CKActionMenuGestureRecognizer _convertVelocitySample:fromScreenCoordinatesToView:]


CKMeCardSharingNicknameAvatarProvider : NSObject <CNMeCardSharingAvatarProvider>
 @property  NSData *imageData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMeCardSharingNicknameAvatarProvider .cxx_destruct]
  -[CKMeCardSharingNicknameAvatarProvider imageData]
  -[CKMeCardSharingNicknameAvatarProvider generateAvatarImageOfSize:imageHandler:]
  -[CKMeCardSharingNicknameAvatarProvider initWithImageData:]


CKSearchAvatarSupplementryView : UICollectionReusableView <CKSearchResultSupplementryCell>
 @property  CKAvatarView *avatarView
 @property  unsigned long parentContentType
 @property  CKSpotlightQueryResult *associatedResult
 @property  CNContact *contact
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSearchAvatarSupplementryView desiredZPosition]
  +[CKSearchAvatarSupplementryView supplementaryViewType]
  +[CKSearchAvatarSupplementryView reuseIdentifier]

  // instance methods
  -[CKSearchAvatarSupplementryView _parentPreviewDidChange:]
  -[CKSearchAvatarSupplementryView parentContentType]
  -[CKSearchAvatarSupplementryView setAvatarView:]
  -[CKSearchAvatarSupplementryView .cxx_destruct]
  -[CKSearchAvatarSupplementryView avatarView]
  -[CKSearchAvatarSupplementryView layoutSubviews]
  -[CKSearchAvatarSupplementryView marginInsets]
  -[CKSearchAvatarSupplementryView setContact:]
  -[CKSearchAvatarSupplementryView prepareForReuse]
  -[CKSearchAvatarSupplementryView initWithFrame:]
  -[CKSearchAvatarSupplementryView setMarginInsets:]
  -[CKSearchAvatarSupplementryView associatedResult]
  -[CKSearchAvatarSupplementryView setAssociatedResult:]
  -[CKSearchAvatarSupplementryView setParentContentType:]
  -[CKSearchAvatarSupplementryView _updateVisibilityIfNeeded]
  -[CKSearchAvatarSupplementryView contact]


CKEffectPickerViewController : UIViewController <CKEffectPickerViewDelegate, CKEffectPickerViewControllerProtocol>
 @property  NSAttributedString *text
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sendButtonFrame
 @property  {CGPoint=dd} balloonViewOrigin
 @property  CKEffectPickerView *pickerView
 @property  <CKEffectPickerViewControllerDelegate> *delegate

  // instance methods
  -[CKEffectPickerViewController setText:]
  -[CKEffectPickerViewController handleTouchUp:]
  -[CKEffectPickerViewController setShowingInStandAloneWindow:]
  -[CKEffectPickerViewController setSendButtonFrame:]
  -[CKEffectPickerViewController sendButtonFrame]
  -[CKEffectPickerViewController setSemanticContentAttribute:forceLTR:]
  -[CKEffectPickerViewController effectSelectedWithIdentifier:]
  -[CKEffectPickerViewController touchUpInsideCloseButton]
  -[CKEffectPickerViewController effectPickerViewDidFinishAnimatingIn:]
  -[CKEffectPickerViewController .cxx_destruct]
  -[CKEffectPickerViewController updateHintTransition:]
  -[CKEffectPickerViewController handleTouchMoved:]
  -[CKEffectPickerViewController balloonViewOrigin]
  -[CKEffectPickerViewController setBalloonViewOrigin:]
  -[CKEffectPickerViewController setDelegate:]
  -[CKEffectPickerViewController pickerView]
  -[CKEffectPickerViewController updateColor:]
  -[CKEffectPickerViewController viewWillDisappear:]
  -[CKEffectPickerViewController setCloseButtonYPosition:]
  -[CKEffectPickerViewController initWithComposition:sendButtonFrame:balloonViewOrigin:color:]
  -[CKEffectPickerViewController viewWillAppear:]
  -[CKEffectPickerViewController delegate]
  -[CKEffectPickerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKEffectPickerViewController presentPicker]
  -[CKEffectPickerViewController setPickerView:]
  -[CKEffectPickerViewController text]


CKDateChatItem : CKStampChatItem
 @property  NSDate *date

  // instance methods
  -[CKDateChatItem now]
  -[CKDateChatItem layoutType]
  -[CKDateChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKDateChatItem loadTranscriptText]
  -[CKDateChatItem date]


CKMediaObjectAssetActionManager : PXAssetActionManager <CKMediaObjectAssetMenuBuilderDelegate>
 @property  NSMutableDictionary *performerClassByType
 @property  CKMessagePartChatItem *chatItem
 @property  <CKMediaObjectAssetActionHelper> *chatActionHelper
 @property  BOOL shouldHideInteractions
 @property  UIMenu *actionContextMenu
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMediaObjectAssetActionManager canPerformActionType:]
  -[CKMediaObjectAssetActionManager previewActionForActionType:]
  -[CKMediaObjectAssetActionManager chatActionHelper]
  -[CKMediaObjectAssetActionManager performerClassByType]
  -[CKMediaObjectAssetActionManager _keyCommandCopy:]
  -[CKMediaObjectAssetActionManager .cxx_destruct]
  -[CKMediaObjectAssetActionManager _selectionSnapshotForPerformerClass:]
  -[CKMediaObjectAssetActionManager _keyCommandDelete:]
  -[CKMediaObjectAssetActionManager _barButtonSelectorByActionType:]
  -[CKMediaObjectAssetActionManager _handlePreviewAction:actionType:]
  -[CKMediaObjectAssetActionManager _keyCommandQuickLook:]
  -[CKMediaObjectAssetActionManager _currentlySelectedChatItemsOutCursorItem:]
  -[CKMediaObjectAssetActionManager _keyCommandReply:]
  -[CKMediaObjectAssetActionManager _keyCommandTapback:]
  -[CKMediaObjectAssetActionManager _keyCommandSelectAll:]
  -[CKMediaObjectAssetActionManager shouldHideInteractions]
  -[CKMediaObjectAssetActionManager _runDeleteActionPerformer]
  -[CKMediaObjectAssetActionManager _handleAddToLibraryBarButtonItem:]
  -[CKMediaObjectAssetActionManager _handleReplyBarButtonItem:]
  -[CKMediaObjectAssetActionManager _handleDeleteBarButtonItem:]
  -[CKMediaObjectAssetActionManager executeActionForActionType:withCompletionHandler:]
  -[CKMediaObjectAssetActionManager initWithChatItem:chatActionHelper:selectionManager:]
  -[CKMediaObjectAssetActionManager actionContextMenu]
  -[CKMediaObjectAssetActionManager previewActionForActionType:image:]
  -[CKMediaObjectAssetActionManager supportsContextMenu]
  -[CKMediaObjectAssetActionManager actionKeyCommands]
  -[CKMediaObjectAssetActionManager supportsActionType:]
  -[CKMediaObjectAssetActionManager actionPerformerForActionType:]
  -[CKMediaObjectAssetActionManager chatItem]
  -[CKMediaObjectAssetActionManager canPerformAction:withSender:]
  -[CKMediaObjectAssetActionManager barButtonItemForActionType:]
  -[CKMediaObjectAssetActionManager menuBuilder:quickLookChatItem:]
  -[CKMediaObjectAssetActionManager shouldHideInteractionsForMenuBuilder:]
  -[CKMediaObjectAssetActionManager menuBuilder:tapbackChatItem:]
  -[CKMediaObjectAssetActionManager menuBuilder:replyChatItem:]
  -[CKMediaObjectAssetActionManager menuBuilder:forwardChatItems:]
  -[CKMediaObjectAssetActionManager menuBuilder:copyChatItems:]
  -[CKMediaObjectAssetActionManager menuBuilder:deleteChatItems:]
  -[CKMediaObjectAssetActionManager contextMenuForChatItems:cursorChatItem:isCMM:]
  -[CKMediaObjectAssetActionManager contextMenu]


CKMediaObjectAssetActionPerformer : PXAssetActionPerformer
 @property  CKMessagePartChatItem *chatItem
 @property  <CKMediaObjectAssetActionHelper> *chatActionHelper

  // class methods
  +[CKMediaObjectAssetActionPerformer canPerformWithActionManager:]
  +[CKMediaObjectAssetActionPerformer createBarButtonItemWithTarget:action:actionManager:]
  +[CKMediaObjectAssetActionPerformer createPreviewActionWithActionManager:handler:]
  +[CKMediaObjectAssetActionPerformer canPerformWithActionManager:selectionSnapshot:]
  +[CKMediaObjectAssetActionPerformer canPerformOnImplicitSelection]
  +[CKMediaObjectAssetActionPerformer localizedTitleForUseCase:actionManager:]
  +[CKMediaObjectAssetActionPerformer systemImageNameForActionManager:]

  // instance methods
  -[CKMediaObjectAssetActionPerformer chatActionHelper]
  -[CKMediaObjectAssetActionPerformer .cxx_destruct]
  -[CKMediaObjectAssetActionPerformer setChatActionHelper:]
  -[CKMediaObjectAssetActionPerformer chatItem]
  -[CKMediaObjectAssetActionPerformer setChatItem:]


CKAttachmentItemManager : NSObject
  // class methods
  +[CKAttachmentItemManager attachmentWithFileURL:size:transferGUID:guid:createdDate:]


CKLocationMediaObject : CKContactMediaObject <MKAnnotation>
 @property  {CLLocationCoordinate2D=dd} coordinate
 @property  NSString *title
 @property  NSString *subtitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKLocationMediaObject isPreviewable]
  +[CKLocationMediaObject __ck_attachmentItemClass]
  +[CKLocationMediaObject placeholderPreviewForWidth:orientation:]
  +[CKLocationMediaObject placeholderPreviewCache]
  +[CKLocationMediaObject vcardDataFromCLLocation:]
  +[CKLocationMediaObject UTITypes]
  +[CKLocationMediaObject fallbackFilenamePrefix]

  // instance methods
  -[CKLocationMediaObject mapItem]
  -[CKLocationMediaObject setCoordinate:]
  -[CKLocationMediaObject bbSize]
  -[CKLocationMediaObject generateThumbnailFillToSize:contentAlignmentInsets:]
  -[CKLocationMediaObject bbPreviewFillToSize:]
  -[CKLocationMediaObject coordinate]
  -[CKLocationMediaObject attachmentSummary:]
  -[CKLocationMediaObject generatePlaceholderThumbnailForWidth:orientation:]
  -[CKLocationMediaObject generatePlaceholderThumbnailFillToSize:contentAlignmentInsets:]
  -[CKLocationMediaObject initWithTransfer:context:forceInlinePreview:]
  -[CKLocationMediaObject transcriptTraitCollection]
  -[CKLocationMediaObject balloonViewClass]
  -[CKLocationMediaObject previewForWidth:orientation:]
  -[CKLocationMediaObject previewBalloonViewClass]
  -[CKLocationMediaObject placeholderBalloonViewClass]
  -[CKLocationMediaObject previewCacheKeyWithOrientation:]
  -[CKLocationMediaObject previewCachesFileURLWithOrientation:extension:generateIntermediaries:]
  -[CKLocationMediaObject title]
  -[CKLocationMediaObject previewItemTitle]
  -[CKLocationMediaObject mediaType]
  -[CKLocationMediaObject vCardURLProperties]
  -[CKLocationMediaObject isDroppedPin]
  -[CKLocationMediaObject metricsCollectorMediaType]
  -[CKLocationMediaObject pasteboardItemProvider]
  -[CKLocationMediaObject rtfDocumentItemsWithFormatString:selectedTextRange:]


CKSharedLocationCollectionViewCell : CKSharedContentsCollectionViewCell
  // class methods
  +[CKSharedLocationCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKSharedLocationCollectionViewCell configureWithAttachmentItem:]


CKDetailsGroupCountCell : CKDetailsCell
  // class methods
  +[CKDetailsGroupCountCell shouldHighlight]
  +[CKDetailsGroupCountCell reuseIdentifier]
  +[CKDetailsGroupCountCell preferredHeight]


CKDismissView : UIView
 @property  <CKDismissViewDelegate> *delegate
 @property  NSArray *passthroughViews

  // instance methods
  -[CKDismissView hitTest:withEvent:]
  -[CKDismissView .cxx_destruct]
  -[CKDismissView touchesBegan:withEvent:]
  -[CKDismissView setPassthroughViews:]
  -[CKDismissView setDelegate:]
  -[CKDismissView passthroughViews]
  -[CKDismissView delegate]


CKBrowserFullscreenRevealAnimationController : NSObject <UIViewControllerAnimatedTransitioning>
 @property  UIViewPropertyAnimator *ascentDescentAnimator
 @property  BOOL presenting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBrowserFullscreenRevealAnimationController transitionDuration:]
  -[CKBrowserFullscreenRevealAnimationController .cxx_destruct]
  -[CKBrowserFullscreenRevealAnimationController animateTransition:]
  -[CKBrowserFullscreenRevealAnimationController ascentDescentAnimator]
  -[CKBrowserFullscreenRevealAnimationController initWithDirection:]
  -[CKBrowserFullscreenRevealAnimationController setAscentDescentAnimator:]
  -[CKBrowserFullscreenRevealAnimationController setPresenting:]
  -[CKBrowserFullscreenRevealAnimationController isPresenting]


CKBrowserFullscreenCubicSpringTimingParameters : UISpringTimingParameters
 @property  UICubicTimingParameters *springCubicTimingParameters

  // instance methods
  -[CKBrowserFullscreenCubicSpringTimingParameters .cxx_destruct]
  -[CKBrowserFullscreenCubicSpringTimingParameters cubicTimingParameters]
  -[CKBrowserFullscreenCubicSpringTimingParameters setSpringCubicTimingParameters:]
  -[CKBrowserFullscreenCubicSpringTimingParameters copyWithZone:]
  -[CKBrowserFullscreenCubicSpringTimingParameters springCubicTimingParameters]


CKBrowserFullscreenCubicSpringPropertyAnimator : UIViewPropertyAnimator <_UIBasicAnimationFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBrowserFullscreenCubicSpringPropertyAnimator _basicAnimationForView:withKeyPath:]


_CKAcknowledgmentAnimatorModelItem : NSObject
 @property  CKEntity *entity
 @property  NSIndexPath *indexPath
 @property  long long ackVoteCount
 @property  long long acknowledgmentType

  // instance methods
  -[_CKAcknowledgmentAnimatorModelItem acknowledgmentType]
  -[_CKAcknowledgmentAnimatorModelItem setAcknowledgmentType:]
  -[_CKAcknowledgmentAnimatorModelItem .cxx_destruct]
  -[_CKAcknowledgmentAnimatorModelItem setIndexPath:]
  -[_CKAcknowledgmentAnimatorModelItem entity]
  -[_CKAcknowledgmentAnimatorModelItem setEntity:]
  -[_CKAcknowledgmentAnimatorModelItem indexPath]
  -[_CKAcknowledgmentAnimatorModelItem setAckVoteCount:]
  -[_CKAcknowledgmentAnimatorModelItem ackVoteCount]


_CKAcknowledgementSectionAnimator : NSObject
 @property  UICollectionViewLayoutAttributes *avatarViewAttr
 @property  CNAvatarView *avatarView
 @property  UILabel *voteCountLabel
 @property  UICollectionViewLayoutAttributes *voteCountViewAttr
 @property  UIImageView *ackIconView
 @property  UICollectionViewLayoutAttributes *ackIconViewAttr
 @property  UIView *containerView
 @property  unsigned long ackVoteCount
 @property  CKEntity *entityToShow
 @property  long long acknowledgmentType

  // instance methods
  -[_CKAcknowledgementSectionAnimator acknowledgmentType]
  -[_CKAcknowledgementSectionAnimator setAcknowledgmentType:]
  -[_CKAcknowledgementSectionAnimator setAvatarView:]
  -[_CKAcknowledgementSectionAnimator containerView]
  -[_CKAcknowledgementSectionAnimator .cxx_destruct]
  -[_CKAcknowledgementSectionAnimator avatarView]
  -[_CKAcknowledgementSectionAnimator ackIconView]
  -[_CKAcknowledgementSectionAnimator ackIconViewAttr]
  -[_CKAcknowledgementSectionAnimator setAckIconView:]
  -[_CKAcknowledgementSectionAnimator voteCountViewAttr]
  -[_CKAcknowledgementSectionAnimator _updateAckIconViewDelayTime:]
  -[_CKAcknowledgementSectionAnimator _updateAvatarViewDelayTime:]
  -[_CKAcknowledgementSectionAnimator _updateVoteCountViewDelayTime:]
  -[_CKAcknowledgementSectionAnimator avatarViewAttr]
  -[_CKAcknowledgementSectionAnimator entityToShow]
  -[_CKAcknowledgementSectionAnimator animateInAckIconView:]
  -[_CKAcknowledgementSectionAnimator insertAvatarDelayTime:]
  -[_CKAcknowledgementSectionAnimator setAvatarViewAttr:]
  -[_CKAcknowledgementSectionAnimator setAckIconViewAttr:]
  -[_CKAcknowledgementSectionAnimator setVoteCountViewAttr:]
  -[_CKAcknowledgementSectionAnimator setEntityToShow:]
  -[_CKAcknowledgementSectionAnimator setContainerView:]
  -[_CKAcknowledgementSectionAnimator setAckVoteCount:]
  -[_CKAcknowledgementSectionAnimator dealloc]
  -[_CKAcknowledgementSectionAnimator voteCountLabel]
  -[_CKAcknowledgementSectionAnimator ackVoteCount]
  -[_CKAcknowledgementSectionAnimator setVoteCountLabel:]


CKAcknowledgmentVotingViewAnimator : NSObject
 @property  UIView *animationContainerView
 @property  NSArray *sectionAnimators
 @property  NSArray *animatorModelItems
 @property  <CKAcknowledgmentVotingViewAnimatorDelegate> *delegate

  // instance methods
  -[CKAcknowledgmentVotingViewAnimator .cxx_destruct]
  -[CKAcknowledgmentVotingViewAnimator setDelegate:]
  -[CKAcknowledgmentVotingViewAnimator setAnimatorModelItems:]
  -[CKAcknowledgmentVotingViewAnimator sectionAnimators]
  -[CKAcknowledgmentVotingViewAnimator setAnimationContainerView:]
  -[CKAcknowledgmentVotingViewAnimator setSectionAnimators:]
  -[CKAcknowledgmentVotingViewAnimator animatorModelItems]
  -[CKAcknowledgmentVotingViewAnimator initWithCollectionView:animatorModelItems:acknowledgmentTypes:]
  -[CKAcknowledgmentVotingViewAnimator animationContainerView]
  -[CKAcknowledgmentVotingViewAnimator startAnimationWithDelay:]
  -[CKAcknowledgmentVotingViewAnimator delegate]


CKComposeChatController : CKChatController <CKComposeRecipientSelectionControllerDelegate, CKBusinessInfoViewDelegate, CKMacToolbarItemProvider>
 @property  CKComposeRecipientSelectionController *composeRecipientSelectionController
 @property  NSArray *prepopulatedRecipients
 @property  CKComposition *prepopulatedComposition
 @property  UINavigationController *catalystComposeNavigationController
 @property  BOOL newComposeCancelled
 @property  UIBarButtonItem *composeCancelItem
 @property  CKComposeNavbarManager *navbarManager
 @property  NSString *lastAddressedHandle
 @property  NSString *lastAddressedSIMID
 @property  NSDictionary *bizIntent
 @property  CKBusinessInfoView *businessInfoView
 @property  IMHandle *businessHandle
 @property  CKTranscriptMultilineLabelCell *blackholeAlertView
 @property  BOOL sendingViaCardUI
 @property  @? deferredSendAnimationBlock
 @property  UIView *virtualToolbarItem
 @property  <CKComposeChatControllerDelegate> *delegate
 @property  NSArray *proposedRecipients
 @property  NSString *unatomizedRecipientText
 @property  NSString *overrideTitle
 @property  BOOL ignoreEmailsWhenSending
 @property  BOOL ignoreKeyboardNotifications
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKComposeChatController preferredStatusBarStyle]
  -[CKComposeChatController preferredFocusEnvironments]
  -[CKComposeChatController inputAccessoryView]
  -[CKComposeChatController viewWillLayoutSubviews]
  -[CKComposeChatController prepareForSuspend]
  -[CKComposeChatController messageEntryViewSendButtonHitWhileDisabled:]
  -[CKComposeChatController invalidateChatItemLayoutForTraitCollectionChangeIfNeeded:]
  -[CKComposeChatController businessInfoView]
  -[CKComposeChatController businessHandle]
  -[CKComposeChatController .cxx_destruct]
  -[CKComposeChatController _updateNavigationButtons]
  -[CKComposeChatController _setConversationDeferredSetup]
  -[CKComposeChatController bizIntent]
  -[CKComposeChatController setBusinessInfoView:]
  -[CKComposeChatController textViewOnscreenWithEntryView]
  -[CKComposeChatController viewDidLoad]
  -[CKComposeChatController messageEntryViewDidChange:]
  -[CKComposeChatController navbarManager]
  -[CKComposeChatController virtualView]
  -[CKComposeChatController setNavbarManager:]
  -[CKComposeChatController viewDidAppear:]
  -[CKComposeChatController becomeFirstResponder]
  -[CKComposeChatController sendComposition:]
  -[CKComposeChatController _updateBusinessInfoIfNecessary]
  -[CKComposeChatController catalystComposeNavigationController]
  -[CKComposeChatController shouldUseMacRecipientsView]
  -[CKComposeChatController setCatalystComposeNavigationController:]
  -[CKComposeChatController _updateBlackholeAlertView]
  -[CKComposeChatController layoutBusinessInfoViewIfNecessary]
  -[CKComposeChatController blackholeAlertView]
  -[CKComposeChatController configureWithToolbarController:]
  -[CKComposeChatController messageEntryViewSendButtonHit:]
  -[CKComposeChatController recipientSelectionController:textDidChange:]
  -[CKComposeChatController handleCancelAction:]
  -[CKComposeChatController reparentToolbarItem:]
  -[CKComposeChatController recipientSelectionControllerReturnPressed:]
  -[CKComposeChatController recipientSelectionControllerTabPressed:]
  -[CKComposeChatController adjustCollectionViewFrameIfNeeded]
  -[CKComposeChatController recipientSelectionControllerDidChangeSize:]
  -[CKComposeChatController recipientSelectionControllerRequestDismissKeyboard:]
  -[CKComposeChatController providerWillBeRemovedFromToolbarController:]
  -[CKComposeChatController itemProviderDisablesTouches]
  -[CKComposeChatController toolbarItemForIdentifier:]
  -[CKComposeChatController virtualToolbarContentInsets]
  -[CKComposeChatController virtualToolbarPreferredHeight]
  -[CKComposeChatController prefersBottomDividerHidden]
  -[CKComposeChatController setComposeRecipientSelectionController:]
  -[CKComposeChatController _isBusinessConversation]
  -[CKComposeChatController prepopulatedRecipients]
  -[CKComposeChatController prepopulatedComposition]
  -[CKComposeChatController setLastAddressedHandle:]
  -[CKComposeChatController _shouldSetToFieldAsFirstResponder]
  -[CKComposeChatController _deviceHasMultipleActiveSubscriptions]
  -[CKComposeChatController recipientSelectionControllerDidPushABViewController:]
  -[CKComposeChatController hasFailedRecipients]
  -[CKComposeChatController recipientSelectionControllerDidBecomeFirstResponder:]
  -[CKComposeChatController _updateSendingIdentity]
  -[CKComposeChatController ignoreEmailsWhenSending]
  -[CKComposeChatController addBizIntentToConversation:]
  -[CKComposeChatController setSendingViaCardUI:]
  -[CKComposeChatController recipientSelectionControllerShouldResignFirstResponder:]
  -[CKComposeChatController isComposingRecipient]
  -[CKComposeChatController lastAddressedSIMID]
  -[CKComposeChatController handleForRecipientNormalizedAddress:]
  -[CKComposeChatController _prepareForSendFromCardIfNecessaryAndSend:]
  -[CKComposeChatController _processBizIntentIfNeeded]
  -[CKComposeChatController _isAllowlistedBusinessRecipient]
  -[CKComposeChatController _anisetteData]
  -[CKComposeChatController ignoreKeyboardNotifications]
  -[CKComposeChatController sendingViaCardUI]
  -[CKComposeChatController composeCancelItem]
  -[CKComposeChatController cancelCompose]
  -[CKComposeChatController setNewComposeCancelled:]
  -[CKComposeChatController newComposeCancelled]
  -[CKComposeChatController _triggerRecipientFinalization]
  -[CKComposeChatController proposedRecipients]
  -[CKComposeChatController shouldForceToSMSForConversation:forRecipient:]
  -[CKComposeChatController _invalidateBlackholeAlertView]
  -[CKComposeChatController _updateBizNavbarIfNecessary]
  -[CKComposeChatController setBlackholeAlertView:]
  -[CKComposeChatController setBusinessInfoViewInfoIfNecessary]
  -[CKComposeChatController _isNewBusinessConversation]
  -[CKComposeChatController virtualToolbarItem]
  -[CKComposeChatController conversationLeft]
  -[CKComposeChatController recipientSelectionController:didSelectConversation:isiMessagable:]
  -[CKComposeChatController recipientSelectionControllerDidLoadFromField]
  -[CKComposeChatController unatomizedRecipientText]
  -[CKComposeChatController initWithRecipientAddresses:composition:bizIntent:]
  -[CKComposeChatController overrideTitle]
  -[CKComposeChatController setIgnoreKeyboardNotifications:]
  -[CKComposeChatController setComposeCancelItem:]
  -[CKComposeChatController setVirtualToolbarItem:]
  -[CKComposeChatController recipientSelectionController:didFinishAvailaiblityLookupForRecipient:]
  -[CKComposeChatController lastAddressedHandle]
  -[CKComposeChatController businessInfoView:infoButtonTapped:]
  -[CKComposeChatController outgoingComposeViewForSendAnimation]
  -[CKComposeChatController restoreInputAfterSearchPresentation]
  -[CKComposeChatController isSafeToMarkAsRead]
  -[CKComposeChatController recipientSelectionControllerSearchListDidShowOrHide:]
  -[CKComposeChatController navigationBarInsetsForRecipientSelectionController:]
  -[CKComposeChatController showConversation:animate:]
  -[CKComposeChatController keyboardWillShowOrHide:]
  -[CKComposeChatController topInsetPadding]
  -[CKComposeChatController shouldListParticipantsInTitle]
  -[CKComposeChatController viewWillDisappear:]
  -[CKComposeChatController transcriptCollectionViewController:balloonView:tappedForChatItem:]
  -[CKComposeChatController viewDidLayoutSubviews]
  -[CKComposeChatController canPerformAction:withSender:]
  -[CKComposeChatController hasUnreachableEmergencyRecipient]
  -[CKComposeChatController parentControllerDidResume:animating:]
  -[CKComposeChatController chatForIMHandle:]
  -[CKComposeChatController viewWillAppear:]
  -[CKComposeChatController shouldShowEntryView]
  -[CKComposeChatController sendAnimationManagerWillStartAnimation:context:]
  -[CKComposeChatController shouldRemoveMacCatalystEntryView]
  -[CKComposeChatController shouldInsertMacCatalystEntryView]
  -[CKComposeChatController _entryViewTopInsetPadding]
  -[CKComposeChatController composeRecipientSelectionController]
  -[CKComposeChatController setOverrideTitle:]
  -[CKComposeChatController setPrepopulatedRecipients:]
  -[CKComposeChatController setPrepopulatedComposition:]
  -[CKComposeChatController setIgnoreEmailsWhenSending:]
  -[CKComposeChatController transcriptCollectionViewControllerPlaybackForOutgoingEffectsIsAllowed:]
  -[CKComposeChatController setLastAddressedSIMID:]
  -[CKComposeChatController _passKitUIDismissed:]
  -[CKComposeChatController _shouldValidatePayloadBeforeSendingPayload:]
  -[CKComposeChatController setDeferredSendAnimationBlock:]
  -[CKComposeChatController transcriptCollectionViewControllerShouldForceOpaqueMask:]
  -[CKComposeChatController _updateTitleAnimated:]
  -[CKComposeChatController dealloc]
  -[CKComposeChatController inputAccessoryViewController]
  -[CKComposeChatController deferredSendAnimationBlock]
  -[CKComposeChatController viewLayoutMarginsDidChange]
  -[CKComposeChatController shouldPresentBlockingDowntimeViewController]
  -[CKComposeChatController handleAddressBookChange:]
  -[CKComposeChatController _shouldRestoreDraftState]
  -[CKComposeChatController setBizIntent:]
  -[CKComposeChatController _updateNavigationUI]
  -[CKComposeChatController shouldUseNavigationBarCanvasView]
  -[CKComposeChatController _chatShowsUnexpectedlyLoggedOutNotification]
  -[CKComposeChatController macToolbarInsets]
  -[CKComposeChatController setBusinessHandle:]
  -[CKComposeChatController viewDidDisappear:]
  -[CKComposeChatController _showNicknameBannerIfNeeded]
  -[CKComposeChatController canShowBusinessOnboarding]
  -[CKComposeChatController didFinishShowingBusinessOnboarding]
  -[CKComposeChatController _saveDraftState]
  -[CKComposeChatController cancelButtonTapped:]
  -[CKComposeChatController reloadEntryViewIfNeeded]


CKAssistantPerson : NSObject
 @property  NSString *internalGUID
 @property  NSString *label

  // instance methods
  -[CKAssistantPerson label]
  -[CKAssistantPerson .cxx_destruct]
  -[CKAssistantPerson internalGUID]
  -[CKAssistantPerson setInternalGUID:]
  -[CKAssistantPerson setLabel:]


CKAssistantSearchUtilities : NSObject
  // class methods
  +[CKAssistantSearchUtilities canonicalizeNumber:]
  +[CKAssistantSearchUtilities getAddressesFromPeople:]


CKSearchVideoDuration : NSObject
 @property  {?=qiIq} duration

  // instance methods
  -[CKSearchVideoDuration setDuration:]
  -[CKSearchVideoDuration duration]


CKSearchResultAnnotation : NSObject <MKAnnotation>
 @property  {CLLocationCoordinate2D=dd} coordinate
 @property  NSString *title
 @property  NSString *subtitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKSearchResultAnnotation setCoordinate:]
  -[CKSearchResultAnnotation coordinate]


CKSearchThumbnailPreviewGenerator : NSObject
 @property  NSCache *thumbnailCache
 @property  NSCache *livePhotoStatusCache
 @property  NSCache *videoDurationCache
 @property  NSCache *lpLinkMetadataCache
 @property  NSCache *lpPassPropertiesMetadataCache
 @property  NSMutableDictionary *mapHashesCache
 @property  NSMutableSet *keysWithInFlightGeneration
 @property  NSMutableSet *keysWithInFlightLivePhotoStatus
 @property  NSMutableSet *keysWithInFlightVideoDurationCalculation
 @property  NSMutableSet *keysWithInFlightLPLinkMetadataGeneration
 @property  NSMutableSet *keysWithInFlightLPPassPropertiesMetadataGeneration

  // class methods
  +[CKSearchThumbnailPreviewGenerator sharedInstance]
  +[CKSearchThumbnailPreviewGenerator __singleton__im]
  +[CKSearchThumbnailPreviewGenerator __setSingleton__im:]

  // instance methods
  -[CKSearchThumbnailPreviewGenerator hasCachedMapPreviewForQueryResult:traitCollection:]
  -[CKSearchThumbnailPreviewGenerator cachedPreviewForQueryResult:]
  -[CKSearchThumbnailPreviewGenerator .cxx_destruct]
  -[CKSearchThumbnailPreviewGenerator cachedMapPreviewForQueryResult:traitCollection:]
  -[CKSearchThumbnailPreviewGenerator cachedPreviewForKey:]
  -[CKSearchThumbnailPreviewGenerator init]
  -[CKSearchThumbnailPreviewGenerator setThumbnailCache:]
  -[CKSearchThumbnailPreviewGenerator setLivePhotoStatusCache:]
  -[CKSearchThumbnailPreviewGenerator setVideoDurationCache:]
  -[CKSearchThumbnailPreviewGenerator setLpLinkMetadataCache:]
  -[CKSearchThumbnailPreviewGenerator setMapHashesCache:]
  -[CKSearchThumbnailPreviewGenerator setLpPassPropertiesMetadataCache:]
  -[CKSearchThumbnailPreviewGenerator setKeysWithInFlightGeneration:]
  -[CKSearchThumbnailPreviewGenerator setKeysWithInFlightLivePhotoStatus:]
  -[CKSearchThumbnailPreviewGenerator keysWithInFlightGeneration]
  -[CKSearchThumbnailPreviewGenerator thumbnailCache]
  -[CKSearchThumbnailPreviewGenerator setKeysWithInFlightVideoDurationCalculation:]
  -[CKSearchThumbnailPreviewGenerator setKeysWithInFlightLPLinkMetadataGeneration:]
  -[CKSearchThumbnailPreviewGenerator setKeysWithInFlightLPPassPropertiesMetadataGeneration:]
  -[CKSearchThumbnailPreviewGenerator _previewURLForKey:]
  -[CKSearchThumbnailPreviewGenerator _persistPreview:atURL:]
  -[CKSearchThumbnailPreviewGenerator hasCachedPreviewForQueryResult:]
  -[CKSearchThumbnailPreviewGenerator generatePreviewForQueryResult:]
  -[CKSearchThumbnailPreviewGenerator generateAndCacheIconWithURL:key:completion:]
  -[CKSearchThumbnailPreviewGenerator generateAndCacheThumbnailWithURL:request:key:completion:]
  -[CKSearchThumbnailPreviewGenerator cachedPreviewOrNullForKey:]
  -[CKSearchThumbnailPreviewGenerator livePhotoStatusCache]
  -[CKSearchThumbnailPreviewGenerator keysWithInFlightLivePhotoStatus]
  -[CKSearchThumbnailPreviewGenerator _checkResultForLivePhotoComplement:]
  -[CKSearchThumbnailPreviewGenerator videoDurationCache]
  -[CKSearchThumbnailPreviewGenerator _calculateDurationForVideoResult:]
  -[CKSearchThumbnailPreviewGenerator keysWithInFlightVideoDurationCalculation]
  -[CKSearchThumbnailPreviewGenerator _asyncLoadCachedDiskPreviewForKeyIfAvailable:completion:]
  -[CKSearchThumbnailPreviewGenerator mapKeyForQueryResult:traitCollection:]
  -[CKSearchThumbnailPreviewGenerator generateAndCachePassWithURL:forKey:completion:]
  -[CKSearchThumbnailPreviewGenerator _previewLoadQueue]
  -[CKSearchThumbnailPreviewGenerator mapHashesCache]
  -[CKSearchThumbnailPreviewGenerator _generateMapThumbnailForKey:attributes:traitCollection:completion:]
  -[CKSearchThumbnailPreviewGenerator hasCachedPreviewForKey:]
  -[CKSearchThumbnailPreviewGenerator _lpPreviewLoadQueue]
  -[CKSearchThumbnailPreviewGenerator keysWithInFlightLPLinkMetadataGeneration]
  -[CKSearchThumbnailPreviewGenerator _prewarmLinkMetadata:]
  -[CKSearchThumbnailPreviewGenerator lpLinkMetadataCache]
  -[CKSearchThumbnailPreviewGenerator keysWithInFlightLPPassPropertiesMetadataGeneration]
  -[CKSearchThumbnailPreviewGenerator _lpPassLinkPreviewLoadQueue]
  -[CKSearchThumbnailPreviewGenerator lpPassPropertiesMetadataCache]
  -[CKSearchThumbnailPreviewGenerator queryResultHasLivePhoto:]
  -[CKSearchThumbnailPreviewGenerator queryResultIsVideo:]
  -[CKSearchThumbnailPreviewGenerator durationForVideoResult:]
  -[CKSearchThumbnailPreviewGenerator generateMapPreviewForQueryResult:traitCollection:]
  -[CKSearchThumbnailPreviewGenerator mapPlaceholderImageForTraitCollection:]
  -[CKSearchThumbnailPreviewGenerator cachedLinkMetadataForQueryResult:]
  -[CKSearchThumbnailPreviewGenerator hasCachedLinkMetadataForQueryResult:]
  -[CKSearchThumbnailPreviewGenerator beginFetchingLinkMetadataForQueryResult:]
  -[CKSearchThumbnailPreviewGenerator hasCachedPassLinkPropertiesForQueryResult:]
  -[CKSearchThumbnailPreviewGenerator cachedPassLinkPropertiesForQueryResult:]
  -[CKSearchThumbnailPreviewGenerator beginGeneratingWebLinkPresentationPropertiesForQueryResult:]


CKDetailsPassSearchController : CKPassSearchController
 @property  CKPassSearchResultsCell *sizingCell

  // class methods
  +[CKDetailsPassSearchController sectionIdentifier]

  // instance methods
  -[CKDetailsPassSearchController .cxx_destruct]
  -[CKDetailsPassSearchController setSizingCell:]
  -[CKDetailsPassSearchController sizingCell]
  -[CKDetailsPassSearchController layoutGroupWithEnvironment:]


CKMessageContext : NSObject <NSCopying, NSMutableCopying>
 @property  IMChatContext *chatContext
 @property  BOOL fromMe
 @property  BOOL spam
 @property  BOOL senderUnknown
 @property  BOOL senderUnauthenticated
 @property  BOOL audioMessage

  // class methods
  +[CKMessageContext selfContext]

  // instance methods
  -[CKMessageContext isSpam]
  -[CKMessageContext .cxx_destruct]
  -[CKMessageContext isFromMe]
  -[CKMessageContext isAudioMessage]
  -[CKMessageContext mutableCopyWithZone:]
  -[CKMessageContext copyWithZone:]
  -[CKMessageContext _copyWithClass:zone:]
  -[CKMessageContext chatContext]
  -[CKMessageContext isSenderUnknown]
  -[CKMessageContext isSenderUnauthenticated]


CKMutableMessageContext : CKMessageContext
 @property  IMChatContext *chatContext
 @property  BOOL fromMe
 @property  BOOL spam
 @property  BOOL senderUnknown
 @property  BOOL senderUnauthenticated
 @property  BOOL audioMessage

  // instance methods
  -[CKMutableMessageContext setSpam:]
  -[CKMutableMessageContext setChatContext:]
  -[CKMutableMessageContext setSenderUnknown:]
  -[CKMutableMessageContext setSenderUnauthenticated:]
  -[CKMutableMessageContext setAudioMessage:]
  -[CKMutableMessageContext setFromMe:]


CKMomentShareStatusBalloonView : CKColoredBalloonView
  // class methods
  +[CKMomentShareStatusBalloonView sizeThatFits:]
  +[CKMomentShareStatusBalloonView _secondaryLabelString]

  // instance methods
  -[CKMomentShareStatusBalloonView color]
  -[CKMomentShareStatusBalloonView .cxx_destruct]
  -[CKMomentShareStatusBalloonView layoutSubviews]
  -[CKMomentShareStatusBalloonView sizeThatFits:]
  -[CKMomentShareStatusBalloonView initWithFrame:]
  -[CKMomentShareStatusBalloonView _performLayoutInSize:updateSubviewFrames:]


CKDeletedMomentShareBalloonView : CKMomentShareStatusBalloonView
  // class methods
  +[CKDeletedMomentShareBalloonView _secondaryLabelString]


CKUnavailableMomentShareBalloonView : CKMomentShareStatusBalloonView
 @property  <CKUnavailableMomentShareBalloonViewDelegate> *delegate

  // class methods
  +[CKUnavailableMomentShareBalloonView _secondaryLabelString]

  // instance methods
  -[CKUnavailableMomentShareBalloonView handleTap:]
  -[CKUnavailableMomentShareBalloonView initWithFrame:]


CKSharedContentsCollectionViewCell : CKSharedAssetCollectionViewCell <UIGestureRecognizerDelegate>
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  UIImage *previewImage
 @property  UIImageView *checkmarkView
 @property  <CKSharedContentsCollectionViewCellDelegate> *delegate
 @property  BOOL editing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSharedContentsCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKSharedContentsCollectionViewCell setTapGestureRecognizer:]
  -[CKSharedContentsCollectionViewCell copy:]
  -[CKSharedContentsCollectionViewCell more:]
  -[CKSharedContentsCollectionViewCell .cxx_destruct]
  -[CKSharedContentsCollectionViewCell handleTap:]
  -[CKSharedContentsCollectionViewCell layoutSubviews]
  -[CKSharedContentsCollectionViewCell setDelegate:]
  -[CKSharedContentsCollectionViewCell setPreviewImage:]
  -[CKSharedContentsCollectionViewCell checkmarkView]
  -[CKSharedContentsCollectionViewCell tapGestureRecognizer]
  -[CKSharedContentsCollectionViewCell setSelected:]
  -[CKSharedContentsCollectionViewCell setCheckmarkView:]
  -[CKSharedContentsCollectionViewCell previewImage]
  -[CKSharedContentsCollectionViewCell setEditing:]
  -[CKSharedContentsCollectionViewCell gestureRecognizer:shouldReceiveTouch:]
  -[CKSharedContentsCollectionViewCell initWithFrame:]
  -[CKSharedContentsCollectionViewCell isEditing]
  -[CKSharedContentsCollectionViewCell delegate]
  -[CKSharedContentsCollectionViewCell saveAttachment:]
  -[CKSharedContentsCollectionViewCell setupTapGestureRecognizer]
  -[CKSharedContentsCollectionViewCell toggleCheckmarkViewWithEnabled:]
  -[CKSharedContentsCollectionViewCell delete:]


_CKEntityContactStoreProvider : NSObject <CKEntityContactStoreProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_CKEntityContactStoreProvider sharedInstance]

  // instance methods
  -[_CKEntityContactStoreProvider contactStore]


CKDetailsExpanseActivityCell : CKDetailsCell <CKDetailsCell>
 @property  TUConversation *conversation
 @property  LPLinkView *lpLinkView
 @property  BOOL isScreenShare
 @property  UILabel *activityDescriptionLabel
 @property  CNContact *contactSharingScreen
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsExpanseActivityCell shouldHighlight]
  +[CKDetailsExpanseActivityCell reuseIdentifier]

  // instance methods
  -[CKDetailsExpanseActivityCell initWithStyle:reuseIdentifier:conversation:]
  -[CKDetailsExpanseActivityCell interitemSpacing]
  -[CKDetailsExpanseActivityCell .cxx_destruct]
  -[CKDetailsExpanseActivityCell setupView]
  -[CKDetailsExpanseActivityCell layoutSubviews]
  -[CKDetailsExpanseActivityCell addConstraints]
  -[CKDetailsExpanseActivityCell formatTitle]
  -[CKDetailsExpanseActivityCell setConversation:]
  -[CKDetailsExpanseActivityCell isScreenShare]
  -[CKDetailsExpanseActivityCell lpLinkView]
  -[CKDetailsExpanseActivityCell setIsScreenShare:]
  -[CKDetailsExpanseActivityCell setContactSharingScreen:]
  -[CKDetailsExpanseActivityCell setLpLinkView:]
  -[CKDetailsExpanseActivityCell contactSharingScreen]
  -[CKDetailsExpanseActivityCell insetPadding]
  -[CKDetailsExpanseActivityCell activityDescriptionLabel]
  -[CKDetailsExpanseActivityCell buttonInteritemSpacing]
  -[CKDetailsExpanseActivityCell setActivityDescriptionLabel:]
  -[CKDetailsExpanseActivityCell conversation]


CKEditableCollectionView : UICollectionView
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  BOOL _ck_editing

  // instance methods
  -[CKEditableCollectionView initWithFrame:collectionViewLayout:]
  -[CKEditableCollectionView dequeueReusableCellWithReuseIdentifier:forIndexPath:]
  -[CKEditableCollectionView marginInsets]
  -[CKEditableCollectionView safeAreaInsets]
  -[CKEditableCollectionView setMarginInsets:]
  -[CKEditableCollectionView _ck_isEditing]
  -[CKEditableCollectionView _ck_setEditing:]
  -[CKEditableCollectionView _ck_setEditing:animated:]


CKEditableCollectionViewCell : UICollectionViewCell
 @property  UIImageView *checkmark
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentAlignmentRect
 @property  {UIEdgeInsets=dddd} contentAlignmentInsets
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  BOOL _ck_editing
 @property  BOOL hidesCheckmark

  // instance methods
  -[CKEditableCollectionViewCell setHighlighted:]
  -[CKEditableCollectionViewCell setContentInsets:]
  -[CKEditableCollectionViewCell contentInsets]
  -[CKEditableCollectionViewCell checkmark]
  -[CKEditableCollectionViewCell .cxx_destruct]
  -[CKEditableCollectionViewCell layoutSubviews]
  -[CKEditableCollectionViewCell marginInsets]
  -[CKEditableCollectionViewCell setSelected:]
  -[CKEditableCollectionViewCell setMarginInsets:]
  -[CKEditableCollectionViewCell _ck_isEditing]
  -[CKEditableCollectionViewCell _horizontalSafeAreaInsets]
  -[CKEditableCollectionViewCell setContentAlignmentRect:]
  -[CKEditableCollectionViewCell updateCheckmarkImage]
  -[CKEditableCollectionViewCell setCheckmark:]
  -[CKEditableCollectionViewCell setHidesCheckmark:]
  -[CKEditableCollectionViewCell _ck_setEditing:]
  -[CKEditableCollectionViewCell __im_ff_systemImageAdoptionEnabled]
  -[CKEditableCollectionViewCell hidesCheckmark]
  -[CKEditableCollectionViewCell _ck_setEditing:animated:]
  -[CKEditableCollectionViewCell contentAlignmentRect]
  -[CKEditableCollectionViewCell contentAlignmentInsets]


CKBackBarButtonItem : UIBarButtonItem
  // instance methods
  -[CKBackBarButtonItem initWithUnreadCount:]
  -[CKBackBarButtonItem unnreadButtonImageWithString:]


CKFocusStatusAuthorizationManager : NSObject
 @property  BOOL presentingFocusStatusAuthorizationPrompt
 @property  BOOL presentingInconsistentFocusStatusAuthorizationPrompt

  // class methods
  +[CKFocusStatusAuthorizationManager sharedInstance]

  // instance methods
  -[CKFocusStatusAuthorizationManager isPresentingFocusStatusAuthorizationPrompt]
  -[CKFocusStatusAuthorizationManager isPresentingInconsistentFocusStatusAuthorizationPrompt]
  -[CKFocusStatusAuthorizationManager deviceSupportsFocusStatusAuthorizationPrompt]
  -[CKFocusStatusAuthorizationManager promptForFocusStatusAuthorizationFromViewController:]
  -[CKFocusStatusAuthorizationManager notifyDNDFocusStatusAuthorizationChanged]
  -[CKFocusStatusAuthorizationManager verifyPublishedStatusIsConsistentWithDeniedFocusStatusAuthorizationFromViewController:]
  -[CKFocusStatusAuthorizationManager setPresentingFocusStatusAuthorizationPrompt:]
  -[CKFocusStatusAuthorizationManager newDNDGlobalConfigurationService]
  -[CKFocusStatusAuthorizationManager displayFocusStatusAuthorizationInconsistencyRepairAlertIfNotPreviouslyShownFromViewController:]
  -[CKFocusStatusAuthorizationManager displayFocusStatusAuthorizationInconsistencyRepairAlertFromViewController:]
  -[CKFocusStatusAuthorizationManager focusStatusPreferencesURL]
  -[CKFocusStatusAuthorizationManager setPresentingInconsistentFocusStatusAuthorizationPrompt:]
  -[CKFocusStatusAuthorizationManager presentFocusStatusAuthorizationAlertIfNecessaryFromViewController:]


CKBrowserSwitcherScrollPreventer : UIView <UIScrollViewDelegate, UIGestureRecognizerDelegate>
 @property  UIScrollView *horizontalScrollView
 @property  UIView *horizontalScrollPreventerView
 @property  BOOL engaged
 @property  BOOL switching
 @property  BOOL scrollEnabled
 @property  {CGPoint=dd} contentOffset
 @property  {CGSize=dd} contentSize
 @property  <CKBrowserSwitcherScrollPreventerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBrowserSwitcherScrollPreventer setContentOffset:]
  -[CKBrowserSwitcherScrollPreventer setScrollEnabled:]
  -[CKBrowserSwitcherScrollPreventer contentSize]
  -[CKBrowserSwitcherScrollPreventer contentOffset]
  -[CKBrowserSwitcherScrollPreventer gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKBrowserSwitcherScrollPreventer setEngaged:]
  -[CKBrowserSwitcherScrollPreventer .cxx_destruct]
  -[CKBrowserSwitcherScrollPreventer scrollEnabled]
  -[CKBrowserSwitcherScrollPreventer layoutSubviews]
  -[CKBrowserSwitcherScrollPreventer isEngaged]
  -[CKBrowserSwitcherScrollPreventer setDelegate:]
  -[CKBrowserSwitcherScrollPreventer touchTrackerRecognized:]
  -[CKBrowserSwitcherScrollPreventer scrollViewDidScroll:]
  -[CKBrowserSwitcherScrollPreventer scrollViewWillBeginDragging:]
  -[CKBrowserSwitcherScrollPreventer initWithFrame:]
  -[CKBrowserSwitcherScrollPreventer delegate]
  -[CKBrowserSwitcherScrollPreventer horizontalScrollView]
  -[CKBrowserSwitcherScrollPreventer isSwitching]
  -[CKBrowserSwitcherScrollPreventer setSwitching:]
  -[CKBrowserSwitcherScrollPreventer setHorizontalScrollPreventerView:]
  -[CKBrowserSwitcherScrollPreventer setHorizontalScrollView:]
  -[CKBrowserSwitcherScrollPreventer horizontalScrollPreventerView]
  -[CKBrowserSwitcherScrollPreventer scrollViewDidEndDecelerating:]
  -[CKBrowserSwitcherScrollPreventer setContentSize:]


CKAudioReplyPreviewBalloonView : CKColoredBalloonView
 @property  CKWaveformProgressView *waveformProgressView
 @property  double duration
 @property  long long waveformContentMode

  // instance methods
  -[CKAudioReplyPreviewBalloonView setWaveform:]
  -[CKAudioReplyPreviewBalloonView prepareForDisplay]
  -[CKAudioReplyPreviewBalloonView .cxx_destruct]
  -[CKAudioReplyPreviewBalloonView setDuration:]
  -[CKAudioReplyPreviewBalloonView layoutSubviews]
  -[CKAudioReplyPreviewBalloonView configureForComposition:]
  -[CKAudioReplyPreviewBalloonView configureForMessagePart:]
  -[CKAudioReplyPreviewBalloonView setWaveformContentMode:]
  -[CKAudioReplyPreviewBalloonView initWithFrame:]
  -[CKAudioReplyPreviewBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKAudioReplyPreviewBalloonView waveformProgressView]
  -[CKAudioReplyPreviewBalloonView waveformContentMode]
  -[CKAudioReplyPreviewBalloonView setWaveformProgressView:]
  -[CKAudioReplyPreviewBalloonView alignmentRectInsets]
  -[CKAudioReplyPreviewBalloonView duration]
  -[CKAudioReplyPreviewBalloonView configureForMediaObject:previewWidth:orientation:]


CKConversationSearchController : CKSearchController
 @property  BOOL gotResults
 @property  NSSet *intermediaryResults
 @property  BOOL searchTerminated
 @property  _PSSuggester *zkwSuggester
 @property  NSArray *currentZKWSuggestions

  // class methods
  +[CKConversationSearchController sectionIdentifier]
  +[CKConversationSearchController supportsQuicklookForResult:]
  +[CKConversationSearchController supportsMenuInteraction]
  +[CKConversationSearchController reuseIdentifier]
  +[CKConversationSearchController cellClass]
  +[CKConversationSearchController useRecencyRankedSearchForMode:]
  +[CKConversationSearchController recencyRankedTargetResultCount]

  // instance methods
  -[CKConversationSearchController fetchAttributes]
  -[CKConversationSearchController filterQueries]
  -[CKConversationSearchController wantsHeaderSection]
  -[CKConversationSearchController searchWithText:mode:]
  -[CKConversationSearchController additionalGroupInsets]
  -[CKConversationSearchController .cxx_destruct]
  -[CKConversationSearchController searchEnded]
  -[CKConversationSearchController gotResults]
  -[CKConversationSearchController maxResultsForMode:]
  -[CKConversationSearchController chatGUIDForSearchableItem:]
  -[CKConversationSearchController queryAttributesForText:]
  -[CKConversationSearchController queryResultsForItems:]
  -[CKConversationSearchController applyLayoutMarginsToLayoutGroup]
  -[CKConversationSearchController layoutGroupWithEnvironment:]
  -[CKConversationSearchController zkwSuggester]
  -[CKConversationSearchController searchTerminated]
  -[CKConversationSearchController intermediaryResults]
  -[CKConversationSearchController didSelectResult:]
  -[CKConversationSearchController setSearchTerminated:]
  -[CKConversationSearchController setIntermediaryResults:]
  -[CKConversationSearchController interGroupSpacing]
  -[CKConversationSearchController setGotResults:]
  -[CKConversationSearchController _appendRecencyToRankingQuery:hours:]
  -[CKConversationSearchController _searchZKWWithText:mode:]
  -[CKConversationSearchController searchSpotlightWithText:mode:]
  -[CKConversationSearchController setCurrentZKWSuggestions:]
  -[CKConversationSearchController rankingQueriesWithText:]
  -[CKConversationSearchController isTokenizationSearchController]
  -[CKConversationSearchController currentZKWSuggestions]
  -[CKConversationSearchController tokenizedQueryResultsForItems:]
  -[CKConversationSearchController _sortedAndRankedItemsWithItems:]
  -[CKConversationSearchController setZkwSuggester:]


CKTranscriptSpeakerBalloonCell : CKTranscriptBalloonCell
 @property  CKSpeakerButton *speakerButton
 @property  BOOL shouldShowText
 @property  BOOL speakerEnabled
 @property  BOOL speakerHidden
 @property  BOOL adjustSpeakerForAcknowledgment

  // instance methods
  -[CKTranscriptSpeakerBalloonCell setOrientation:]
  -[CKTranscriptSpeakerBalloonCell speakerButton]
  -[CKTranscriptSpeakerBalloonCell .cxx_destruct]
  -[CKTranscriptSpeakerBalloonCell setAdjustSpeakerForAcknowledgment:]
  -[CKTranscriptSpeakerBalloonCell setSpeakerHidden:]
  -[CKTranscriptSpeakerBalloonCell setSpeakerEnabled:]
  -[CKTranscriptSpeakerBalloonCell isSpeakerHidden]
  -[CKTranscriptSpeakerBalloonCell adjustSpeakerForAcknowledgment]
  -[CKTranscriptSpeakerBalloonCell isSpeakerEnabled]
  -[CKTranscriptSpeakerBalloonCell setSpeakerButton:]
  -[CKTranscriptSpeakerBalloonCell shouldShowText]
  -[CKTranscriptSpeakerBalloonCell setShouldShowText:]
  -[CKTranscriptSpeakerBalloonCell layoutSubviewsForAlignmentContents]


CKNavigationItem : UINavigationItem
 @property  UIScrollView *contentScrollView

  // instance methods
  -[CKNavigationItem contentScrollView]
  -[CKNavigationItem .cxx_destruct]
  -[CKNavigationItem setContentScrollView:]


CKNavigationBar : UINavigationBar
  // instance methods
  -[CKNavigationBar hitTest:withEvent:]


CKSharedAssetCollectionViewCell : UICollectionViewCell
 @property  NSString *name
 @property  NSString *url
 @property  UIView *previewTitleContainerView
 @property  UIView *previewView
 @property  UILabel *previewTitleLabel

  // class methods
  +[CKSharedAssetCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKSharedAssetCollectionViewCell previewView]
  -[CKSharedAssetCollectionViewCell name]
  -[CKSharedAssetCollectionViewCell url]
  -[CKSharedAssetCollectionViewCell setPreviewTitleLabel:]
  -[CKSharedAssetCollectionViewCell setPreviewTitleContainerView:]
  -[CKSharedAssetCollectionViewCell .cxx_destruct]
  -[CKSharedAssetCollectionViewCell layoutSubviews]
  -[CKSharedAssetCollectionViewCell previewTitleLabel]
  -[CKSharedAssetCollectionViewCell formattedTitleFromPreviewTitle:]
  -[CKSharedAssetCollectionViewCell setName:]
  -[CKSharedAssetCollectionViewCell setUrl:]
  -[CKSharedAssetCollectionViewCell initWithFrame:]
  -[CKSharedAssetCollectionViewCell cornerRadius]
  -[CKSharedAssetCollectionViewCell setPreviewView:]
  -[CKSharedAssetCollectionViewCell previewTitleContainerView]


CKApplicationState : NSObject
  // class methods
  +[CKApplicationState isResizing]
  +[CKApplicationState isActive]
  +[CKApplicationState isBackground]
  +[CKApplicationState setActive:]
  +[CKApplicationState isWindowForegroundActive:]
  +[CKApplicationState _isUIExtension]


CKPhotoAttachmentStatusChatItem : CKChatItem
  // instance methods
  -[CKPhotoAttachmentStatusChatItem layoutType]
  -[CKPhotoAttachmentStatusChatItem transcriptOrientation]
  -[CKPhotoAttachmentStatusChatItem _photoAttachmentStatusChatItem]
  -[CKPhotoAttachmentStatusChatItem contentInsets]
  -[CKPhotoAttachmentStatusChatItem wantsDrawerLayout]
  -[CKPhotoAttachmentStatusChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKPhotoAttachmentStatusChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKPhotoAttachmentStatusChatItem loadTranscriptText]
  -[CKPhotoAttachmentStatusChatItem cellClass]


CKSharedQuickLookThumbnailCollectionViewCell : CKSharedContentsCollectionViewCell
  // class methods
  +[CKSharedQuickLookThumbnailCollectionViewCell placeHolderImage]
  +[CKSharedQuickLookThumbnailCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKSharedQuickLookThumbnailCollectionViewCell configureWithAttachmentItem:]


CKAppContainerNavigationController : UINavigationController <_UISheetPresentationControllerDelegate, CKBrowserViewControllerSendDelegate>
 @property  UIViewController<CKBrowserViewControllerProtocol> *browserVC
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAppContainerNavigationController _sheetPresentationController:didChangeIndexOfCurrentDetent:]
  -[CKAppContainerNavigationController closeButtonPressed:]
  -[CKAppContainerNavigationController setBrowserVC:]
  -[CKAppContainerNavigationController transitionBrowserToMediumDetent]
  -[CKAppContainerNavigationController transitionBrowserToLargeDetent]
  -[CKAppContainerNavigationController initWithRemoteViewController:]
  -[CKAppContainerNavigationController .cxx_destruct]
  -[CKAppContainerNavigationController dismissAndReloadInputViews:]
  -[CKAppContainerNavigationController requestPresentationStyleExpanded:]
  -[CKAppContainerNavigationController browserVC]
  -[CKAppContainerNavigationController commitPayload:]
  -[CKAppContainerNavigationController startEditingPayload:dismiss:]
  -[CKAppContainerNavigationController openURL:pluginID:completionHandler:]
  -[CKAppContainerNavigationController openURL:applicationIdentifier:pluginID:completionHandler:]
  -[CKAppContainerNavigationController dismissToKeyboard:]
  -[CKAppContainerNavigationController presentAlertWithTitle:message:buttonTitle:completion:]
  -[CKAppContainerNavigationController commitSticker:]
  -[CKAppContainerNavigationController commitSticker:withDragTarget:]
  -[CKAppContainerNavigationController dismiss]
  -[CKAppContainerNavigationController startEditingPayload:]
  -[CKAppContainerNavigationController dragControllerTranscriptDelegate]
  -[CKAppContainerNavigationController setLocalUserIsTyping:]


CKAudioController : NSObject <CKAudioPlayerDelegate>
 @property  BOOL paused
 @property  NSMutableArray *_mediaObjects
 @property  CKAudioPlayer *audioPlayer
 @property  BOOL interrupted
 @property  BOOL playing
 @property  NSArray *mediaObjects
 @property  <CKAudioControllerDelegate> *delegate
 @property  BOOL shouldUseSpeaker
 @property  BOOL shouldStopPlayingWhenSilent
 @property  BOOL shouldDuckOthers
 @property  BOOL shouldUseAVPlayer
 @property  CKMediaObject *currentMediaObject
 @property  double currentMediaObjectTime
 @property  double currentMediaObjectDuration
 @property  float volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAudioController setPlaying:]
  -[CKAudioController volume]
  -[CKAudioController play]
  -[CKAudioController interrupted]
  -[CKAudioController isPlaying]
  -[CKAudioController setVolume:]
  -[CKAudioController setShouldUseAVPlayer:]
  -[CKAudioController setShouldStopPlayingWhenSilent:]
  -[CKAudioController setShouldDuckOthers:]
  -[CKAudioController _setMediaObjects:]
  -[CKAudioController .cxx_destruct]
  -[CKAudioController audioSessionInterruption:]
  -[CKAudioController shouldUseSpeaker]
  -[CKAudioController audioSessionControllerOptions]
  -[CKAudioController shouldStopPlayingWhenSilent]
  -[CKAudioController shouldDuckOthers]
  -[CKAudioController audioPlayerDidFinishPlaying:]
  -[CKAudioController shouldUseAVPlayer]
  -[CKAudioController playListenSound:]
  -[CKAudioController _notifyPlayerDidPrepareMediaObject:successfully:]
  -[CKAudioController playListenEndSound:]
  -[CKAudioController audioPlayerCurrentTimeDidChange:]
  -[CKAudioController audioPlayerDidPrepareAudioToPlay:successfully:]
  -[CKAudioController addMediaObjects:]
  -[CKAudioController currentMediaObjectDuration]
  -[CKAudioController stop]
  -[CKAudioController setDelegate:]
  -[CKAudioController setCurrentTime:]
  -[CKAudioController prepareToPlay]
  -[CKAudioController setAudioPlayer:]
  -[CKAudioController audioPlayer]
  -[CKAudioController pause]
  -[CKAudioController _mediaObjects]
  -[CKAudioController setPaused:]
  -[CKAudioController __im_ff_isBackgroundAudioEnabled]
  -[CKAudioController delegate]
  -[CKAudioController mediaObjects]
  -[CKAudioController playAfterDelay:]
  -[CKAudioController setShouldUseSpeaker:]
  -[CKAudioController applicationWillResignActive]
  -[CKAudioController dealloc]
  -[CKAudioController setInterrupted:]
  -[CKAudioController currentMediaObject]
  -[CKAudioController initWithMediaObjects:]
  -[CKAudioController __im_ff_isNewAudioMessageFlowEnabled]
  -[CKAudioController currentMediaObjectTime]
  -[CKAudioController addMediaObject:]
  -[CKAudioController isPaused]


CKMessageEntryContentView : UIScrollView <UITextViewDelegate, CKMessageEntryRichTextViewDelegate, UITextDragDelegate, CKMessageEntryViewStyleProtocol, UIGestureRecognizerDelegate>
 @property  CKMessageEntryTextView *activeView
 @property  BOOL shouldShowSubject
 @property  UIViewController<CKPluginEntryViewController> *pluginEntryViewController
 @property  IMPluginPayload *shelfPluginPayload
 @property  CKMessageEntryTextView *subjectView
 @property  CKMessageEntryRichTextView *textView
 @property  UIView *textAndSubjectDividerLine
 @property  UIView *pluginDividerLine
 @property  BOOL needsTextLayout
 @property  BOOL needsEnsureSelectionVisible
 @property  BOOL needsEnsureTextViewVisible
 @property  BOOL ignoreEndEditing
 @property  BOOL isCompositionExpirable
 @property  UIButton *clearPluginButton
 @property  NSString *requestedPlaceholderText
 @property  NSString *overridePlaceholderText
 @property  BOOL pendingShelfPayloadWillAnimateIn
 @property  NSDictionary *bizIntent
 @property  UIFont *originalFont
 @property  BOOL shouldShowPlugin
 @property  BOOL shouldHideClearPluginButton
 @property  CKComposition *composition
 @property  NSString *placeholderText
 @property  UIView *pluginView
 @property  BOOL active
 @property  BOOL singleLine
 @property  BOOL showingDictationPlaceholder
 @property  {UIEdgeInsets=dddd} contentTextAlignmentInsets
 @property  BOOL balloonColor
 @property  double placeHolderWidth
 @property  BOOL shouldStripEmojis
 @property  BOOL forceEnsureTextViewVisble
 @property  double maxContentWidthWhenExpanded
 @property  double maxPreviewContentWidthWhenExpanded
 @property  double containerViewLineWidth
 @property  double sendButtonTextInsetWidth
 @property  CKConversation *conversation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long style

  // class methods
  +[CKMessageEntryContentView _createTextView:]
  +[CKMessageEntryContentView _createSubjectView]
  +[CKMessageEntryContentView prewarmTextView]

  // instance methods
  -[CKMessageEntryContentView textView]
  -[CKMessageEntryContentView composition]
  -[CKMessageEntryContentView pluginEntryViewController]
  -[CKMessageEntryContentView isActive]
  -[CKMessageEntryContentView placeholderText]
  -[CKMessageEntryContentView setShouldShowSubject:]
  -[CKMessageEntryContentView setContainerViewLineWidth:]
  -[CKMessageEntryContentView initWithFrame:shouldShowSubject:shouldDisableAttachments:]
  -[CKMessageEntryContentView .cxx_destruct]
  -[CKMessageEntryContentView bizIntent]
  -[CKMessageEntryContentView didFinishAnimatedBoundsChange]
  -[CKMessageEntryContentView setStyle:]
  -[CKMessageEntryContentView shelfPluginPayload]
  -[CKMessageEntryContentView makeActive]
  -[CKMessageEntryContentView setFrame:]
  -[CKMessageEntryContentView layoutSubviews]
  -[CKMessageEntryContentView setPlaceholderText:]
  -[CKMessageEntryContentView willAnimateBoundsChange]
  -[CKMessageEntryContentView _updateUI]
  -[CKMessageEntryContentView shouldShowPlugin]
  -[CKMessageEntryContentView _calcuateIdealMaxPluginHeight:]
  -[CKMessageEntryContentView clearPluginButton]
  -[CKMessageEntryContentView shouldShowClearButton]
  -[CKMessageEntryContentView pluginDividerLine]
  -[CKMessageEntryContentView _layoutDividerLine:leftInset:rightInset:currentYOffset:]
  -[CKMessageEntryContentView needsTextLayout]
  -[CKMessageEntryContentView _maxWidthForTextView]
  -[CKMessageEntryContentView _layoutTextView:currentYOffset:originX:maxWidth:]
  -[CKMessageEntryContentView textAndSubjectDividerLine]
  -[CKMessageEntryContentView sendButtonTextInsetWidth]
  -[CKMessageEntryContentView ensureSelectionVisibleIfNeeded]
  -[CKMessageEntryContentView setNeedsTextLayout:]
  -[CKMessageEntryContentView ensureTextViewVisibleIfNeeded]
  -[CKMessageEntryContentView containerViewLineWidth]
  -[CKMessageEntryContentView setSubjectView:]
  -[CKMessageEntryContentView setTextAndSubjectDividerLine:]
  -[CKMessageEntryContentView clearPluginButtonTapped:]
  -[CKMessageEntryContentView setClearPluginButton:]
  -[CKMessageEntryContentView setPluginDividerLine:]
  -[CKMessageEntryContentView pluginPayloadWantsResize:]
  -[CKMessageEntryContentView setOriginalFont:]
  -[CKMessageEntryContentView messageEntryRichTextViewDidTapHandwritingKey:]
  -[CKMessageEntryContentView plugingPayloadDidLoad:]
  -[CKMessageEntryContentView isCompositionExpirable]
  -[CKMessageEntryContentView invalidateComposition]
  -[CKMessageEntryContentView setActiveView:]
  -[CKMessageEntryContentView maxWidthForPreviewImagesInMessageEntryRichTextView:]
  -[CKMessageEntryContentView messageEntryRichTextView:shouldRecognizeGesture:]
  -[CKMessageEntryContentView messageEntryRichTextViewWasTapped:isLongPress:]
  -[CKMessageEntryContentView configureShelfForPluginPayload:]
  -[CKMessageEntryContentView _shouldDeferUpdateUI]
  -[CKMessageEntryContentView setIsCompositionExpirable:]
  -[CKMessageEntryContentView setShelfPluginPayload:]
  -[CKMessageEntryContentView setPluginEntryViewController:]
  -[CKMessageEntryContentView pendingShelfPayloadWillAnimateIn]
  -[CKMessageEntryContentView setPendingShelfPayloadWillAnimateIn:]
  -[CKMessageEntryContentView requestedPlaceholderText]
  -[CKMessageEntryContentView setRequestedPlaceholderText:]
  -[CKMessageEntryContentView pluginView]
  -[CKMessageEntryContentView messageEntryRichTextView:didTapMediaObject:]
  -[CKMessageEntryContentView messageEntryRichTextViewDidTapMention:characterIndex:]
  -[CKMessageEntryContentView collapseTextFieldsIfInPencilMode]
  -[CKMessageEntryContentView setIgnoreEndEditing:]
  -[CKMessageEntryContentView ignoreEndEditing]
  -[CKMessageEntryContentView setNeedsEnsureSelectionVisible:]
  -[CKMessageEntryContentView maxPreviewContentWidthWhenExpanded]
  -[CKMessageEntryContentView maxContentWidthWhenExpanded]
  -[CKMessageEntryContentView setNeedsEnsureTextViewVisible:]
  -[CKMessageEntryContentView needsEnsureSelectionVisible]
  -[CKMessageEntryContentView needsEnsureTextViewVisible]
  -[CKMessageEntryContentView forceEnsureTextViewVisble]
  -[CKMessageEntryContentView setOverridePlaceholderText:]
  -[CKMessageEntryContentView overridePlaceholderText]
  -[CKMessageEntryContentView messageEntryRichTextView:shouldPasteMediaObjects:]
  -[CKMessageEntryContentView messageEntryRichTextView:pastedURL:]
  -[CKMessageEntryContentView prepareForShelfPayloadAnimation]
  -[CKMessageEntryContentView contentTextAlignmentInsets]
  -[CKMessageEntryContentView shouldLayoutPluginEdgeToEdge]
  -[CKMessageEntryContentView setForceEnsureTextViewVisble:]
  -[CKMessageEntryContentView placeHolderWidth]
  -[CKMessageEntryContentView setBalloonColor:]
  -[CKMessageEntryContentView setShouldStripEmojis:]
  -[CKMessageEntryContentView shouldStripEmojis]
  -[CKMessageEntryContentView messageEntryRichTextView:didTapCharacterAtIndex:isLongPress:]
  -[CKMessageEntryContentView messageEntryRichTextViewInsertionPointExitedRangeWithMention:]
  -[CKMessageEntryContentView isShowingDictationPlaceholder]
  -[CKMessageEntryContentView messageEntryRichTextView:insertionPointEnteredRange:forMention:withEntities:]
  -[CKMessageEntryContentView messageEntryRichTextViewCancelShowMentionSuggestions:]
  -[CKMessageEntryContentView messageEntryRichTextViewCanSuggestMentionForCurrentSelection:]
  -[CKMessageEntryContentView messageEntryRichTextView:insertMention:entity:replacementRange:]
  -[CKMessageEntryContentView messageEntryRichTextView:showMentionSuggestionsForEntities:replacementRange:completionHandler:]
  -[CKMessageEntryContentView sizeThatFits:]
  -[CKMessageEntryContentView balloonColor]
  -[CKMessageEntryContentView setTextView:]
  -[CKMessageEntryContentView textDraggableView:itemsForDrag:]
  -[CKMessageEntryContentView isSingleLine]
  -[CKMessageEntryContentView setConversation:]
  -[CKMessageEntryContentView setShouldHideClearPluginButton:]
  -[CKMessageEntryContentView originalFont]
  -[CKMessageEntryContentView dealloc]
  -[CKMessageEntryContentView textViewDidBeginEditing:]
  -[CKMessageEntryContentView shouldHideClearPluginButton]
  -[CKMessageEntryContentView conversation]
  -[CKMessageEntryContentView activeView]
  -[CKMessageEntryContentView setBounds:]
  -[CKMessageEntryContentView setComposition:]
  -[CKMessageEntryContentView subjectView]
  -[CKMessageEntryContentView setBizIntent:]
  -[CKMessageEntryContentView acceptAutocorrection]
  -[CKMessageEntryContentView shouldShowSubject]
  -[CKMessageEntryContentView style]
  -[CKMessageEntryContentView textView:shouldInteractWithTextAttachment:inRange:interaction:]
  -[CKMessageEntryContentView textViewShouldBeginEditing:]
  -[CKMessageEntryContentView setSendButtonTextInsetWidth:]
  -[CKMessageEntryContentView setMaxPreviewContentWidthWhenExpanded:]
  -[CKMessageEntryContentView setMaxContentWidthWhenExpanded:]
  -[CKMessageEntryContentView textViewDidEndEditing:]
  -[CKMessageEntryContentView textViewDidChangeSelection:]
  -[CKMessageEntryContentView textViewDidChange:]
  -[CKMessageEntryContentView textView:shouldChangeTextInRange:replacementText:]
  -[CKMessageEntryContentView setPlaceHolderWidth:]


CKAvatarPickerViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource, CNAvatarViewDelegate, CKAvatarPickerLayoutDelegate, CKAvatarTitleCollectionReusableViewDelegate>
 @property  UICollectionView *collectionView
 @property  CNGroupAvatarViewController *groupAvatarViewController
 @property  CKAvatarPickerLayout *layout
 @property  CKConversation *conversation
 @property  CNContactStore *suggestionsEnabledContactStore
 @property  CKAvatarTitleCollectionReusableView *titleView
 @property  NSMapTable *visibleTitleViews
 @property  CKEntity *cachedAppleEntity
 @property  long long style
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} titleViewFrame
 @property  long long indicatorType
 @property  <CKAvatarPickerViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAvatarPickerViewController collectionView:cellForItemAtIndexPath:]
  -[CKAvatarPickerViewController collectionView:numberOfItemsInSection:]
  -[CKAvatarPickerViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[CKAvatarPickerViewController numberOfSectionsInCollectionView:]
  -[CKAvatarPickerViewController collectionView:didUnhighlightItemAtIndexPath:]
  -[CKAvatarPickerViewController collectionView:didSelectItemAtIndexPath:]
  -[CKAvatarPickerViewController hasTitle]
  -[CKAvatarPickerViewController _chatItemsDidChange:]
  -[CKAvatarPickerViewController collectionView:didHighlightItemAtIndexPath:]
  -[CKAvatarPickerViewController groupAvatarViewController]
  -[CKAvatarPickerViewController setGroupAvatarViewController:]
  -[CKAvatarPickerViewController titleView]
  -[CKAvatarPickerViewController .cxx_destruct]
  -[CKAvatarPickerViewController initWithConversation:]
  -[CKAvatarPickerViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[CKAvatarPickerViewController setStyle:]
  -[CKAvatarPickerViewController setTitleView:]
  -[CKAvatarPickerViewController _handleConversationRecipientsDidChange:]
  -[CKAvatarPickerViewController avatarWantsTapAtPoint:fromView:]
  -[CKAvatarPickerViewController setIndicatorType:]
  -[CKAvatarPickerViewController setDelegate:]
  -[CKAvatarPickerViewController suggestionsEnabledContactStore]
  -[CKAvatarPickerViewController collectionView]
  -[CKAvatarPickerViewController presentingViewControllerForAvatarView:]
  -[CKAvatarPickerViewController updateContentsForConversation:]
  -[CKAvatarPickerViewController tappedAvatarPickerViewController]
  -[CKAvatarPickerViewController indicatorType]
  -[CKAvatarPickerViewController setSuggestionsEnabledContactStore:]
  -[CKAvatarPickerViewController avatarDisplayName]
  -[CKAvatarPickerViewController visibleTitleViews]
  -[CKAvatarPickerViewController setCollectionView:]
  -[CKAvatarPickerViewController _chatPropertiesChanged:]
  -[CKAvatarPickerViewController setVisibleTitleViews:]
  -[CKAvatarPickerViewController cachedAppleEntity]
  -[CKAvatarPickerViewController _handleGroupNameChange:]
  -[CKAvatarPickerViewController _handleConversationIsFilteredChange:]
  -[CKAvatarPickerViewController _preferredAvatarLayoutMode]
  -[CKAvatarPickerViewController chatWasDetectedAsSMSSpam]
  -[CKAvatarPickerViewController _groupAvatarViewControllerRequiredContactKeys]
  -[CKAvatarPickerViewController sendUpdatedRecentParticipantsToContacts]
  -[CKAvatarPickerViewController _titleSupplementaryViewAtIndexPath:]
  -[CKAvatarPickerViewController chatIsReportedAsSpam]
  -[CKAvatarPickerViewController _cutoutSupplementaryViewAtIndexPath:]
  -[CKAvatarPickerViewController _configureCollectionView:bannerViewCellForItemAtIndexPath:]
  -[CKAvatarPickerViewController beganTouchingAvatarView]
  -[CKAvatarPickerViewController endedTouchingAvatarView]
  -[CKAvatarPickerViewController _configureCollectionView:groupIdentityCellForItemAtIndexPath:]
  -[CKAvatarPickerViewController _configureCollectionView:avatarViewCellForItemAtIndexPath:]
  -[CKAvatarPickerViewController setCachedAppleEntity:]
  -[CKAvatarPickerViewController avatarPickerLayoutShouldShowTitle:]
  -[CKAvatarPickerViewController setAvatarPickerActive:]
  -[CKAvatarPickerViewController _contactNameSupplementaryViewAtIndexPath:]
  -[CKAvatarPickerViewController delegate]
  -[CKAvatarPickerViewController setConversation:]
  -[CKAvatarPickerViewController updateGroupAvatarView]
  -[CKAvatarPickerViewController dealloc]
  -[CKAvatarPickerViewController _handleAddressBookChange:]
  -[CKAvatarPickerViewController beganTouchingTitleLabel]
  -[CKAvatarPickerViewController endedTouchingTitleLabel]
  -[CKAvatarPickerViewController conversation]
  -[CKAvatarPickerViewController _avatarTitleAccessoryImageType]
  -[CKAvatarPickerViewController setLayout:]
  -[CKAvatarPickerViewController _setTitle:animated:]
  -[CKAvatarPickerViewController loadView]
  -[CKAvatarPickerViewController avatarView:orderedPropertiesForProperties:category:]
  -[CKAvatarPickerViewController _animateOutTitleView]
  -[CKAvatarPickerViewController titleViewFrame]
  -[CKAvatarPickerViewController _animateInTitleView]
  -[CKAvatarPickerViewController style]
  -[CKAvatarPickerViewController layout]


CKSharedOtherTypesCollectionViewCell : CKSharedContentsCollectionViewCell
 @property  UIImageView *thumbnailImageView

  // class methods
  +[CKSharedOtherTypesCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKSharedOtherTypesCollectionViewCell .cxx_destruct]
  -[CKSharedOtherTypesCollectionViewCell layoutSubviews]
  -[CKSharedOtherTypesCollectionViewCell thumbnailImageView]
  -[CKSharedOtherTypesCollectionViewCell configureWithThumbnail:fileURL:]
  -[CKSharedOtherTypesCollectionViewCell setThumbnailImageView:]
  -[CKSharedOtherTypesCollectionViewCell configureWithAttachmentItem:]


CKBlockContactChatItem : CKStampChatItem
 @property  NSAttributedString *transcriptButtonText

  // instance methods
  -[CKBlockContactChatItem .cxx_destruct]
  -[CKBlockContactChatItem setTranscriptButtonText:]
  -[CKBlockContactChatItem transcriptButtonText]
  -[CKBlockContactChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKBlockContactChatItem loadTranscriptText]
  -[CKBlockContactChatItem cellClass]
  -[CKBlockContactChatItem __im_ff_commSafetyUIEnabled]


CKWatchfaceUtilities : NSObject
  // class methods
  +[CKWatchfaceUtilities addWatchFaceAtURL:completionHandler:]


CKNicknameIntroViewController : OBWelcomeController
 @property  CKNicknamePreviewView *nicknamePreviewView

  // instance methods
  -[CKNicknameIntroViewController .cxx_destruct]
  -[CKNicknameIntroViewController viewDidLoad]
  -[CKNicknameIntroViewController viewDidAppear:]
  -[CKNicknameIntroViewController nicknamePreviewView]
  -[CKNicknameIntroViewController _contentViewHeight]
  -[CKNicknameIntroViewController viewWillDisappear:]
  -[CKNicknameIntroViewController viewDidLayoutSubviews]
  -[CKNicknameIntroViewController setNicknamePreviewView:]


CKGroupCollectionViewCell : UICollectionViewCell
 @property  UIView *avatarView

  // class methods
  +[CKGroupCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKGroupCollectionViewCell setAvatarView:]
  -[CKGroupCollectionViewCell .cxx_destruct]
  -[CKGroupCollectionViewCell avatarView]
  -[CKGroupCollectionViewCell layoutSubviews]
  -[CKGroupCollectionViewCell touchesBegan:withEvent:]
  -[CKGroupCollectionViewCell shouldHighlight]
  -[CKGroupCollectionViewCell initWithFrame:]


CKMentionsUtilities : NSObject
  // class methods
  +[CKMentionsUtilities metionedHandleMatchesMeCard:]
  +[CKMentionsUtilities attributedStringByHighlightingMentionsInAttributedString:withFont:textColor:mentionFont:mentionColor:]


CKDetailsChildViewControllerCell : CKDetailsCell <CKDetailsCell>
 @property  UIView *childViewControllerView
 @property  BOOL shouldUseLayoutMargins
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsChildViewControllerCell shouldHighlight]
  +[CKDetailsChildViewControllerCell reuseIdentifier]

  // instance methods
  -[CKDetailsChildViewControllerCell .cxx_destruct]
  -[CKDetailsChildViewControllerCell layoutSubviews]
  -[CKDetailsChildViewControllerCell setShouldUseLayoutMargins:]
  -[CKDetailsChildViewControllerCell setChildViewControllerView:]
  -[CKDetailsChildViewControllerCell prepareForReuse]
  -[CKDetailsChildViewControllerCell childViewControllerView]
  -[CKDetailsChildViewControllerCell shouldUseLayoutMargins]
  -[CKDetailsChildViewControllerCell initWithStyle:reuseIdentifier:]


CKBusinessMacToolbarViewController : UIViewController
 @property  CKConversation *conversation
 @property  IMHandle *handle
 @property  BOOL showingInStandAloneWindow
 @property  CKBusinessMacToolbarView *toolbarView
 @property  UIView *detailsPopoverPresentationSourceView

  // instance methods
  -[CKBusinessMacToolbarViewController setHandle:]
  -[CKBusinessMacToolbarViewController viewWillLayoutSubviews]
  -[CKBusinessMacToolbarViewController setDetailsPopoverPresentationSourceView:]
  -[CKBusinessMacToolbarViewController detailsPopoverPresentationSourceView]
  -[CKBusinessMacToolbarViewController .cxx_destruct]
  -[CKBusinessMacToolbarViewController viewDidLoad]
  -[CKBusinessMacToolbarViewController showingInStandAloneWindow]
  -[CKBusinessMacToolbarViewController initWithConversation:showingInStandAloneWindow:]
  -[CKBusinessMacToolbarViewController toolbarView]
  -[CKBusinessMacToolbarViewController handle]
  -[CKBusinessMacToolbarViewController setToolbarView:]
  -[CKBusinessMacToolbarViewController _updateBannerImageData]
  -[CKBusinessMacToolbarViewController _updateFallbackTitle]
  -[CKBusinessMacToolbarViewController _updateBrandColors]
  -[CKBusinessMacToolbarViewController _handleAddressBookPartialChange:]
  -[CKBusinessMacToolbarViewController _detailsPopoverFrame]
  -[CKBusinessMacToolbarViewController dealloc]
  -[CKBusinessMacToolbarViewController conversation]
  -[CKBusinessMacToolbarViewController loadView]


CKMessageHighlightButton : UIView
 @property  UIButton *button
 @property  BOOL didUpdate
 @property  UIView *backgroundColorView
 @property  UIView *backgroundColorViewForCrossFade
 @property  UIVisualEffectView *blurEffectView
 @property  CAShapeLayer *blurEffectMaskLayer
 @property  UIImageView *glyphView
 @property  UIImageView *glyphViewForCrossFade
 @property  <CKMessageHighlightButtonDelegate> *delegate
 @property  BOOL isHighlighted

  // instance methods
  -[CKMessageHighlightButton buttonSize]
  -[CKMessageHighlightButton initWithCoder:]
  -[CKMessageHighlightButton transcriptOrientation]
  -[CKMessageHighlightButton .cxx_destruct]
  -[CKMessageHighlightButton layoutSubviews]
  -[CKMessageHighlightButton glyphView]
  -[CKMessageHighlightButton button]
  -[CKMessageHighlightButton setDelegate:]
  -[CKMessageHighlightButton didUpdate]
  -[CKMessageHighlightButton isHighlighted]
  -[CKMessageHighlightButton sizeThatFits:]
  -[CKMessageHighlightButton buttonWasPressed:]
  -[CKMessageHighlightButton replyButtonFrame]
  -[CKMessageHighlightButton performSelectedAnimation:]
  -[CKMessageHighlightButton buttonSizeWithInsets]
  -[CKMessageHighlightButton balloonViewFrame]
  -[CKMessageHighlightButton transcriptHighlightSize]
  -[CKMessageHighlightButton backgroundColorViewForCrossFade]
  -[CKMessageHighlightButton calculateTranscriptHighlightFrameRelativeToBalloonFrame:]
  -[CKMessageHighlightButton calculateFrameRelativeToBalloonViewFrame:transcriptHighlightFrame:]
  -[CKMessageHighlightButton backgroundColorView]
  -[CKMessageHighlightButton performUnselectedDismissAnimationWithDuration:completion:]
  -[CKMessageHighlightButton performFadeoutAnimationWithDuration:completion:]
  -[CKMessageHighlightButton blurEffectMaskLayer]
  -[CKMessageHighlightButton calculateFrameRelativeToBalloonViewFrame]
  -[CKMessageHighlightButton performHideAnimationWithDuration:completion:]
  -[CKMessageHighlightButton glyphViewForCrossFade]
  -[CKMessageHighlightButton initWithFrame:]
  -[CKMessageHighlightButton delegate]
  -[CKMessageHighlightButton blurEffectView]
  -[CKMessageHighlightButton initWithInitialState:]
  -[CKMessageHighlightButton performShowAnimation:]


CKEffectSelectionCollectionViewCell : UICollectionViewCell
 @property  CAShapeLayer *selectionLayer
 @property  UIView *shadowView
 @property  UIImageView *imageView
 @property  UILabel *label
 @property  UIVisualEffectView *titleContainerView
 @property  UIVibrancyEffect *titleVibrancyEffect

  // instance methods
  -[CKEffectSelectionCollectionViewCell label]
  -[CKEffectSelectionCollectionViewCell imageView]
  -[CKEffectSelectionCollectionViewCell setTitle:]
  -[CKEffectSelectionCollectionViewCell setTitleVibrancyEffect:]
  -[CKEffectSelectionCollectionViewCell setTitleContainerView:]
  -[CKEffectSelectionCollectionViewCell titleContainerView]
  -[CKEffectSelectionCollectionViewCell titleVibrancyEffect]
  -[CKEffectSelectionCollectionViewCell .cxx_destruct]
  -[CKEffectSelectionCollectionViewCell layoutSubviews]
  -[CKEffectSelectionCollectionViewCell canBecomeFirstResponder]
  -[CKEffectSelectionCollectionViewCell shadowView]
  -[CKEffectSelectionCollectionViewCell setSelected:]
  -[CKEffectSelectionCollectionViewCell setShadowView:]
  -[CKEffectSelectionCollectionViewCell configureForEffectIsDark:]
  -[CKEffectSelectionCollectionViewCell initWithFrame:]
  -[CKEffectSelectionCollectionViewCell setImage:]
  -[CKEffectSelectionCollectionViewCell selectionLayer]
  -[CKEffectSelectionCollectionViewCell setSelectionLayer:]
  -[CKEffectSelectionCollectionViewCell setLabel:]
  -[CKEffectSelectionCollectionViewCell setImageView:]


CKAttachmentsSearchController : CKMessageTypeSearchController <QLPreviewControllerDelegate, QLPreviewControllerConformingDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKAttachmentsSearchController sectionIdentifier]
  +[CKAttachmentsSearchController supportsQuicklookForResult:]
  +[CKAttachmentsSearchController supportsMacSelection]
  +[CKAttachmentsSearchController indexingString]
  +[CKAttachmentsSearchController sectionTitle]
  +[CKAttachmentsSearchController reuseIdentifier]
  +[CKAttachmentsSearchController cellClass]

  // instance methods
  -[CKAttachmentsSearchController fetchAttributes]
  -[CKAttachmentsSearchController filterQueries]
  -[CKAttachmentsSearchController cellForItemInCollectionView:atIndex:withIdentifier:]
  -[CKAttachmentsSearchController maxResultsForMode:]
  -[CKAttachmentsSearchController chatGUIDForSearchableItem:]
  -[CKAttachmentsSearchController fractionalWidth:count:forLayoutWidth:]
  -[CKAttachmentsSearchController _activityItemProviderForResult:]
  -[CKAttachmentsSearchController previewViewControllerForResult:]
  -[CKAttachmentsSearchController handleSelectionForResult:]
  -[CKAttachmentsSearchController queryAttributesForText:]
  -[CKAttachmentsSearchController detailsFilterQueriesForChatGUIDs:]
  -[CKAttachmentsSearchController applyLayoutMarginsToLayoutGroup]
  -[CKAttachmentsSearchController layoutGroupWithEnvironment:]
  -[CKAttachmentsSearchController cellForSupplementryItemInCollectionView:atIndexPath:supplementryViewKind:]
  -[CKAttachmentsSearchController interGroupSpacing]


CKPassBalloonView : CKLinkBalloonView
 @property  LPWebLinkPresentationProperties *presentationProperties

  // instance methods
  -[CKPassBalloonView setPresentationProperties:]
  -[CKPassBalloonView prepareForDisplay]
  -[CKPassBalloonView .cxx_destruct]
  -[CKPassBalloonView isIrisAsset]
  -[CKPassBalloonView prepareForReuse]
  -[CKPassBalloonView presentationProperties]
  -[CKPassBalloonView setIsIrisAsset:]
  -[CKPassBalloonView configureForMediaObject:previewWidth:orientation:hasInvisibleInkEffect:]


CKActionMenuView : UIView
 @property  NSArray *actionMenuItems
 @property  unsigned long defaultActionIndex
 @property  NSArray *presentationActionMenuItems
 @property  unsigned long presentationDefaultActionIndex
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} presentationTargetBounds
 @property  {CGPoint=dd} presentationTargetPosition
 @property  UIVisualEffectView *blurView
 @property  UIBlurEffect *blurEffect
 @property  BOOL collapsed
 @property  BOOL touchInside
 @property  CKActionMenuController *actionMenuController

  // class methods
  +[CKActionMenuView collapseAnimation:completion:]

  // instance methods
  -[CKActionMenuView isCollapsed]
  -[CKActionMenuView blurView]
  -[CKActionMenuView setCollapsed:]
  -[CKActionMenuView defaultActionIndex]
  -[CKActionMenuView setActionMenuController:]
  -[CKActionMenuView .cxx_destruct]
  -[CKActionMenuView actionMenuItems]
  -[CKActionMenuView layoutSubviews]
  -[CKActionMenuView actionMenuGestureRecognized:]
  -[CKActionMenuView setActionMenuItems:defaultActionIndex:animated:]
  -[CKActionMenuView initWithActionMenuItems:defaultActionIndex:blurEffectStyle:]
  -[CKActionMenuView sizeThatFits:]
  -[CKActionMenuView setBlurEffect:]
  -[CKActionMenuView isTouchInside]
  -[CKActionMenuView setTouchInside:]
  -[CKActionMenuView setBlurView:]
  -[CKActionMenuView presentationActionMenuItems]
  -[CKActionMenuView setPresentationTargetBounds:]
  -[CKActionMenuView setPresentationActionMenuItems:]
  -[CKActionMenuView setPresentationDefaultActionIndex:]
  -[CKActionMenuView setCollapsed:animated:completion:]
  -[CKActionMenuView setActionMenuItems:]
  -[CKActionMenuView setDefaultActionIndex:]
  -[CKActionMenuView presentationTargetBounds]
  -[CKActionMenuView presentationTargetPosition]
  -[CKActionMenuView configureForPresentationAtPoint:inRect:]
  -[CKActionMenuView setPresentationTargetPosition:]
  -[CKActionMenuView actionMenuItemAtPoint:velocity:]
  -[CKActionMenuView actionMenuController]
  -[CKActionMenuView presentActionMenuViewFromPoint:inRect:animated:completion:]
  -[CKActionMenuView presentationDefaultActionIndex]
  -[CKActionMenuView dismissActionMenuViewAnimated:completion:]
  -[CKActionMenuView blurEffect]


CKSceneDelegate : NSObject <UIWindowSceneDelegate>
 @property  UIWindowScene *scene
 @property  UIWindow *window
 @property  BOOL handlingLaunchTask
 @property  CKMacToolbarController *toolbarController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSceneDelegate userInfoDictionaryForState:]
  +[CKSceneDelegate stateFromUserInfoDictionary:]
  +[CKSceneDelegate containerClassForType:]

  // instance methods
  -[CKSceneDelegate sceneDidEnterBackground:]
  -[CKSceneDelegate sceneDidDisconnect:]
  -[CKSceneDelegate setWindow:]
  -[CKSceneDelegate scene:willConnectToSession:options:]
  -[CKSceneDelegate sceneWillEnterForeground:]
  -[CKSceneDelegate sceneWillResignActive:]
  -[CKSceneDelegate sceneDidBecomeActive:]
  -[CKSceneDelegate setToolbarController:]
  -[CKSceneDelegate toolbarController]
  -[CKSceneDelegate windowSceneDidBecomeVisible:]
  -[CKSceneDelegate updateSceneActivationConditions]
  -[CKSceneDelegate updateSceneTitleForConversation:]
  -[CKSceneDelegate predicateMatchingConversation:]
  -[CKSceneDelegate prefersToActivatePredicate]
  -[CKSceneDelegate canActivatePredicate]
  -[CKSceneDelegate scene:openURLContexts:]
  -[CKSceneDelegate .cxx_destruct]
  -[CKSceneDelegate scene]
  -[CKSceneDelegate init]
  -[CKSceneDelegate stateRestorationActivityForScene:]
  -[CKSceneDelegate type]
  -[CKSceneDelegate _setFrameNameForWindowIfNeeded]
  -[CKSceneDelegate isHandlingLaunchTask]
  -[CKSceneDelegate setHandlingLaunchTask:]
  -[CKSceneDelegate window]
  -[CKSceneDelegate scene:continueUserActivity:]


CKActionMenuRootViewController : UIViewController
  // instance methods
  -[CKActionMenuRootViewController shouldAutorotate]


CKActionMenuWindow : UIAutoRotatingWindow
 @property  CKActionMenuView *actionMenuView
 @property  BOOL shouldDismissOnTap

  // class methods
  +[CKActionMenuWindow sharedInstance]

  // instance methods
  -[CKActionMenuWindow _shouldAutorotateToInterfaceOrientation:]
  -[CKActionMenuWindow hitTest:withEvent:]
  -[CKActionMenuWindow setShouldDismissOnTap:]
  -[CKActionMenuWindow .cxx_destruct]
  -[CKActionMenuWindow actionMenuGestureRecognized:]
  -[CKActionMenuWindow _canAffectStatusBarAppearance]
  -[CKActionMenuWindow presentActionMenuView:fromPoint:inView:animated:]
  -[CKActionMenuWindow setActionMenuView:]
  -[CKActionMenuWindow actionMenuView]
  -[CKActionMenuWindow dismissActionMenuViewAnimated:]
  -[CKActionMenuWindow shouldDismissOnTap]


CKRaiseGesture : NSObject
 @property  id target
 @property  SEL action
 @property  CMGestureManager *gestureManager
 @property  long long gestureState
 @property  BOOL proximityState
 @property  BOOL enabled
 @property  BOOL recognized

  // class methods
  +[CKRaiseGesture isRaiseGestureSupported]
  +[CKRaiseGesture isRaiseGestureEnabled]

  // instance methods
  -[CKRaiseGesture .cxx_destruct]
  -[CKRaiseGesture initWithTarget:action:]
  -[CKRaiseGesture setAction:]
  -[CKRaiseGesture action]
  -[CKRaiseGesture setTarget:]
  -[CKRaiseGesture isRecognized]
  -[CKRaiseGesture setProximityMonitoringEnabled:]
  -[CKRaiseGesture isEnabled]
  -[CKRaiseGesture target]
  -[CKRaiseGesture gestureManager]
  -[CKRaiseGesture gestureState]
  -[CKRaiseGesture proximityStateDidChange:]
  -[CKRaiseGesture setProximityState:]
  -[CKRaiseGesture setGestureState:]
  -[CKRaiseGesture setGestureManager:]
  -[CKRaiseGesture dealloc]
  -[CKRaiseGesture setEnabled:]
  -[CKRaiseGesture proximityState]


CKPinningOnboardingTitleCell : UICollectionViewCell
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UILayoutGuide *labelMarginGuide
 @property  NSLayoutConstraint *leadingMarginLayoutConstraint
 @property  NSLayoutConstraint *trailingMarginLayoutConstraint
 @property  NSLayoutConstraint *subtitleSpacingConstraint
 @property  long long pinnedConversationViewLayoutStyle
 @property  BOOL isInCollapsedState

  // class methods
  +[CKPinningOnboardingTitleCell reuseIdentifier]

  // instance methods
  -[CKPinningOnboardingTitleCell titleLabel]
  -[CKPinningOnboardingTitleCell setSubtitleLabel:]
  -[CKPinningOnboardingTitleCell updateConstraints]
  -[CKPinningOnboardingTitleCell .cxx_destruct]
  -[CKPinningOnboardingTitleCell setTitleLabel:]
  -[CKPinningOnboardingTitleCell pinnedConversationViewLayoutStyle]
  -[CKPinningOnboardingTitleCell setPinnedConversationViewLayoutStyle:]
  -[CKPinningOnboardingTitleCell subtitleLabel]
  -[CKPinningOnboardingTitleCell initWithFrame:]
  -[CKPinningOnboardingTitleCell setIsInCollapsedState:]
  -[CKPinningOnboardingTitleCell isInCollapsedState]
  -[CKPinningOnboardingTitleCell pinningOnboardingMarginForPinnedConversationViewLayoutStyle:]
  -[CKPinningOnboardingTitleCell pinningOnboardingTitleLabelFontForPinnedConversationViewLayoutStyle:inCollapsedState:]
  -[CKPinningOnboardingTitleCell setLabelMarginGuide:]
  -[CKPinningOnboardingTitleCell labelMarginGuide]
  -[CKPinningOnboardingTitleCell setLeadingMarginLayoutConstraint:]
  -[CKPinningOnboardingTitleCell setTrailingMarginLayoutConstraint:]
  -[CKPinningOnboardingTitleCell pinningOnboardingSubtitleSpacingForPinnedConversationViewLayoutStyle:]
  -[CKPinningOnboardingTitleCell setPinnedConversationViewLayoutStyle:collapsedState:]
  -[CKPinningOnboardingTitleCell setSubtitleSpacingConstraint:]
  -[CKPinningOnboardingTitleCell leadingMarginLayoutConstraint]
  -[CKPinningOnboardingTitleCell trailingMarginLayoutConstraint]
  -[CKPinningOnboardingTitleCell subtitleSpacingConstraint]


CKConversationListTypingIndicatorView : UIView
 @property  IMConversationListTypingIndicatorLayer *typingLayer
 @property  BOOL isDarkAqua
 @property  double typingIndicatorScale
 @property  BOOL highlightedState
 @property  BOOL flipForRTLLayout

  // instance methods
  -[CKConversationListTypingIndicatorView setHighlightedState:]
  -[CKConversationListTypingIndicatorView setTypingIndicatorScale:]
  -[CKConversationListTypingIndicatorView setFlipForRTLLayout:]
  -[CKConversationListTypingIndicatorView .cxx_destruct]
  -[CKConversationListTypingIndicatorView init]
  -[CKConversationListTypingIndicatorView typingLayer]
  -[CKConversationListTypingIndicatorView isHighlighted]
  -[CKConversationListTypingIndicatorView startPulseAnimation]
  -[CKConversationListTypingIndicatorView isDarkAqua]
  -[CKConversationListTypingIndicatorView _updateTypingLayerTransform]
  -[CKConversationListTypingIndicatorView setTypingLayer:]
  -[CKConversationListTypingIndicatorView destroyTypingLayer]
  -[CKConversationListTypingIndicatorView startShrinkAnimationWithCompletionBlock:]
  -[CKConversationListTypingIndicatorView typingIndicatorScale]
  -[CKConversationListTypingIndicatorView resetTypingLayer]
  -[CKConversationListTypingIndicatorView startGrowAnimation]
  -[CKConversationListTypingIndicatorView flipForRTLLayout]
  -[CKConversationListTypingIndicatorView setIsDarkAqua:]
  -[CKConversationListTypingIndicatorView stopAnimation]


CKAudioRecorder : NSObject <CKVoiceControllerDelegate>
 @property  BOOL recording
 @property  BOOL recordingEmpty
 @property  BOOL cancelled
 @property  CKVoiceController *voiceController
 @property  NSURL *fileURL
 @property  NSDate *startDate
 @property  @? completion
 @property  BOOL shouldPlayStartSound
 @property  BOOL shouldPlayStopSound
 @property  ^{OpaqueAudioFileID=} fileID
 @property  long long totalPacketsCount
 @property  <CKAudioRecorderDelegate> *delegate
 @property  double duration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAudioRecorder resetState]
  -[CKAudioRecorder setFileURL:]
  -[CKAudioRecorder isRecording]
  -[CKAudioRecorder setFileID:]
  -[CKAudioRecorder completion]
  -[CKAudioRecorder setCompletion:]
  -[CKAudioRecorder fileURL]
  -[CKAudioRecorder .cxx_destruct]
  -[CKAudioRecorder stopRecording:]
  -[CKAudioRecorder setCancelled:]
  -[CKAudioRecorder setStartDate:]
  -[CKAudioRecorder applicationDidEnterBackground:]
  -[CKAudioRecorder setDelegate:]
  -[CKAudioRecorder cancelRecording]
  -[CKAudioRecorder isCancelled]
  -[CKAudioRecorder startRecordingForRaiseGesture:shouldPlaySound:]
  -[CKAudioRecorder stopRecordingAndPlaySound:completion:]
  -[CKAudioRecorder setRecording:]
  -[CKAudioRecorder isRecordingEmpty]
  -[CKAudioRecorder init]
  -[CKAudioRecorder startRecordingForRaiseGesture]
  -[CKAudioRecorder voiceController]
  -[CKAudioRecorder delegate]
  -[CKAudioRecorder setVoiceController:]
  -[CKAudioRecorder voiceControllerDidDetectStartpoint:]
  -[CKAudioRecorder voiceControllerDidStartRecording:]
  -[CKAudioRecorder voiceControllerRecordBufferAvailable:buffer:]
  -[CKAudioRecorder voiceControllerDidFinishRecording:successfully:]
  -[CKAudioRecorder voiceController:didUpdateAveragePower:]
  -[CKAudioRecorder startDate]
  -[CKAudioRecorder dealloc]
  -[CKAudioRecorder fileID]
  -[CKAudioRecorder setShouldPlayStartSound:]
  -[CKAudioRecorder setShouldPlayStopSound:]
  -[CKAudioRecorder setRecordingEmpty:]
  -[CKAudioRecorder shouldPlayStartSound]
  -[CKAudioRecorder shouldPlayStopSound]
  -[CKAudioRecorder totalPacketsCount]
  -[CKAudioRecorder setTotalPacketsCount:]
  -[CKAudioRecorder startRecordingAndPlaySound:]
  -[CKAudioRecorder duration]


CKTranscriptPluginBalloonView : CKBalloonView <CKTranscriptPluginViewDelegate>
 @property  CKInteractiveBalloonImageView *tailMask
 @property  CKBalloonImageView *outlineMask
 @property  UIView *pluginSnapshotView
 @property  BOOL isSyndicationOnboarding
 @property  BOOL suppressMask
 @property  UIViewController *pluginViewController
 @property  UIView<CKTranscriptPluginView> *pluginView
 @property  IMBalloonPluginDataSource *dataSource
 @property  BOOL isInteractive
 @property  UIView *pluginSnapshotViewForThrowAnimation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} maskFrame
 @property  BOOL shouldMaskWhenOpaque
 @property  BOOL mayReparentPluginViews
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKTranscriptPluginBalloonView setUserInterfaceStyle:]
  -[CKTranscriptPluginBalloonView clearFilters]
  -[CKTranscriptPluginBalloonView overlayColor]
  -[CKTranscriptPluginBalloonView hitTest:withEvent:]
  -[CKTranscriptPluginBalloonView setSuppressMask:]
  -[CKTranscriptPluginBalloonView willRemoveSubview:]
  -[CKTranscriptPluginBalloonView isInteractive]
  -[CKTranscriptPluginBalloonView setDataSource:]
  -[CKTranscriptPluginBalloonView prepareForDisplay]
  -[CKTranscriptPluginBalloonView outlineMask]
  -[CKTranscriptPluginBalloonView tailMask]
  -[CKTranscriptPluginBalloonView .cxx_destruct]
  -[CKTranscriptPluginBalloonView setCanUseOpaqueMask:]
  -[CKTranscriptPluginBalloonView canUseOpaqueMask]
  -[CKTranscriptPluginBalloonView userInterfaceStyle]
  -[CKTranscriptPluginBalloonView layoutSubviews]
  -[CKTranscriptPluginBalloonView mayReparentPluginViews]
  -[CKTranscriptPluginBalloonView setTailMask:]
  -[CKTranscriptPluginBalloonView setOutlineMask:]
  -[CKTranscriptPluginBalloonView configureForComposition:]
  -[CKTranscriptPluginBalloonView setPluginView:]
  -[CKTranscriptPluginBalloonView pluginViewController]
  -[CKTranscriptPluginBalloonView dataSource]
  -[CKTranscriptPluginBalloonView pluginView]
  -[CKTranscriptPluginBalloonView maskFrame]
  -[CKTranscriptPluginBalloonView suppressMask]
  -[CKTranscriptPluginBalloonView userInterfaceLevel]
  -[CKTranscriptPluginBalloonView prepareForReuse]
  -[CKTranscriptPluginBalloonView gestureRecognizer:shouldReceiveTouch:]
  -[CKTranscriptPluginBalloonView shouldMaskWhenOpaque]
  -[CKTranscriptPluginBalloonView configureForTranscriptPlugin:context:]
  -[CKTranscriptPluginBalloonView setPluginSnapshotViewForThrowAnimation:]
  -[CKTranscriptPluginBalloonView addFilter:]
  -[CKTranscriptPluginBalloonView initWithFrame:]
  -[CKTranscriptPluginBalloonView invisibleInkEffectViewClass]
  -[CKTranscriptPluginBalloonView invisibleInkEffectViewWasUncovered]
  -[CKTranscriptPluginBalloonView attachInvisibleInkEffectView]
  -[CKTranscriptPluginBalloonView detachInvisibleInkEffectView]
  -[CKTranscriptPluginBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKTranscriptPluginBalloonView updateBalloonMasks]
  -[CKTranscriptPluginBalloonView isSyndicationOnboarding]
  -[CKTranscriptPluginBalloonView setPluginViewController:]
  -[CKTranscriptPluginBalloonView pluginSnapshotViewForThrowAnimation]
  -[CKTranscriptPluginBalloonView _pluginViewReadyForSnapshot:]
  -[CKTranscriptPluginBalloonView pluginViewRequestsPresentationAction:]
  -[CKTranscriptPluginBalloonView setIsSyndicationOnboarding:]
  -[CKTranscriptPluginBalloonView setUserInterfaceLevel:]
  -[CKTranscriptPluginBalloonView setPluginSnapshotView:]
  -[CKTranscriptPluginBalloonView setIsInteractive:]
  -[CKTranscriptPluginBalloonView pluginSnapshotView]
  -[CKTranscriptPluginBalloonView imageForInvisibleInkEffectView]
  -[CKTranscriptPluginBalloonView setMayReparentPluginViews:]


CKReplyContextDeletedMessagePartChatItem : CKReplyContextTextMessagePartChatItem <CKReplyContext>
  // instance methods
  -[CKReplyContextDeletedMessagePartChatItem isEditable]
  -[CKReplyContextDeletedMessagePartChatItem transcriptOrientation]
  -[CKReplyContextDeletedMessagePartChatItem color]
  -[CKReplyContextDeletedMessagePartChatItem balloonOrientation]
  -[CKReplyContextDeletedMessagePartChatItem itemIsReplyContextPreview]
  -[CKReplyContextDeletedMessagePartChatItem isFromMe]
  -[CKReplyContextDeletedMessagePartChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKReplyContextDeletedMessagePartChatItem loadTranscriptText]
  -[CKReplyContextDeletedMessagePartChatItem balloonDescriptor]
  -[CKReplyContextDeletedMessagePartChatItem contact]


CKLocationSearchResultCell : CKEditableSearchResultCell <CKSearchResultCell>
 @property  UILabel *placeLabel
 @property  UIVisualEffectView *blurEffectView
 @property  CKSpotlightQueryResult *result
 @property  NSString *searchText
 @property  unsigned long mode
 @property  NSString *resultIdentifier
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  BOOL _ck_editing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKLocationSearchResultCell reuseIdentifier]

  // instance methods
  -[CKLocationSearchResultCell traitCollectionDidChange:]
  -[CKLocationSearchResultCell _configurePlaceLabelWithResult:searchText:]
  -[CKLocationSearchResultCell .cxx_destruct]
  -[CKLocationSearchResultCell layoutSubviews]
  -[CKLocationSearchResultCell marginInsets]
  -[CKLocationSearchResultCell searchText]
  -[CKLocationSearchResultCell result]
  -[CKLocationSearchResultCell prepareForReuse]
  -[CKLocationSearchResultCell setSearchText:]
  -[CKLocationSearchResultCell _thumbnailGenerated:]
  -[CKLocationSearchResultCell initWithFrame:]
  -[CKLocationSearchResultCell setMarginInsets:]
  -[CKLocationSearchResultCell setResult:]
  -[CKLocationSearchResultCell blurEffectView]
  -[CKLocationSearchResultCell setMode:]
  -[CKLocationSearchResultCell dealloc]
  -[CKLocationSearchResultCell setBlurEffectView:]
  -[CKLocationSearchResultCell placeLabel]
  -[CKLocationSearchResultCell resultIdentifier]
  -[CKLocationSearchResultCell configureWithQueryResult:searchText:mode:]
  -[CKLocationSearchResultCell refreshForSearchTextIfNeeded:]
  -[CKLocationSearchResultCell mode]
  -[CKLocationSearchResultCell setPlaceLabel:]


CKLegacyTranscriptLayoutEnvironment : NSObject
 @property  CKConversation *conversation
 @property  <NSCollectionLayoutEnvironment> *collectionLayoutEnvironment
 @property  UICollectionView *collectionView
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  long long layoutContext
 @property  CKChatItem *previousItem

  // instance methods
  -[CKLegacyTranscriptLayoutEnvironment collectionLayoutEnvironment]
  -[CKLegacyTranscriptLayoutEnvironment setCollectionLayoutEnvironment:]
  -[CKLegacyTranscriptLayoutEnvironment .cxx_destruct]
  -[CKLegacyTranscriptLayoutEnvironment marginInsets]
  -[CKLegacyTranscriptLayoutEnvironment collectionView]
  -[CKLegacyTranscriptLayoutEnvironment init]
  -[CKLegacyTranscriptLayoutEnvironment setPreviousItem:]
  -[CKLegacyTranscriptLayoutEnvironment setCollectionView:]
  -[CKLegacyTranscriptLayoutEnvironment layoutContext]
  -[CKLegacyTranscriptLayoutEnvironment previousItem]
  -[CKLegacyTranscriptLayoutEnvironment setMarginInsets:]
  -[CKLegacyTranscriptLayoutEnvironment setConversation:]
  -[CKLegacyTranscriptLayoutEnvironment setLayoutContext:]
  -[CKLegacyTranscriptLayoutEnvironment conversation]


CKChatItemLayoutUtilities : NSObject
  // class methods
  +[CKChatItemLayoutUtilities adjustedBalloonTopSpacingWithSpacing:previousChatItem:]
  +[CKChatItemLayoutUtilities adjustedTopSpacingForTextAlignmentInsetsWithSpacing:chatItem:previousChatItem:]
  +[CKChatItemLayoutUtilities layoutSizeWithSize:]
  +[CKChatItemLayoutUtilities tapbackLayoutAnchorForAcknowledgmentChatItem:]
  +[CKChatItemLayoutUtilities tapbackSupplementaryItemForChatItem:layoutEnvironment:]
  +[CKChatItemLayoutUtilities transcriptBalloonVerticalLayoutSpacingWithTopSpacing:bottomSpacing:previousChatItem:]
  +[CKChatItemLayoutUtilities sizeWithLayoutSize:]
  +[CKChatItemLayoutUtilities layoutGroupForItem:]
  +[CKChatItemLayoutUtilities balloonEdgeSpacingForItemWithLayoutEnvironment:orientation:itemSize:supplementaryItems:]
  +[CKChatItemLayoutUtilities avatarSupplementaryItemForChatItem:layoutEnvironment:]
  +[CKChatItemLayoutUtilities nextItemIsOriginatorWithRepliesForIndex:allDatasourceItems:]
  +[CKChatItemLayoutUtilities transcriptVerticalEdgeSpacingForChatItem:previousChatItem:topSpacing:bottomSpacing:]
  +[CKChatItemLayoutUtilities needsAdditionalBracketPaddingForChatItem:prevChatItem:]
  +[CKChatItemLayoutUtilities dynamicWidthLayoutSizeWithHeight:]
  +[CKChatItemLayoutUtilities nextMessageIsReplyForIndex:allDatasourceItems:]


CKUIBehaviorMac : CKUIBehaviorPad
  // instance methods
  -[CKUIBehaviorMac theme]
  -[CKUIBehaviorMac composeBalloonMaxWidthForEntryContentViewWidth:]
  -[CKUIBehaviorMac detailsContactCellMinimumHeight]
  -[CKUIBehaviorMac detailsExpanseCellHeight]
  -[CKUIBehaviorMac minWindowSize]
  -[CKUIBehaviorMac entryViewCoverMinHeight]
  -[CKUIBehaviorMac popOverWidth]
  -[CKUIBehaviorMac aggregateAcknowledgmentTranscriptBalloonSize]
  -[CKUIBehaviorMac searchPhotosZKWAndDetailsInterItemSpacing]
  -[CKUIBehaviorMac searchPhotosInterItemSpacingDetailsView]
  -[CKUIBehaviorMac searchPhotosInterItemSpacing]
  -[CKUIBehaviorMac macToolbarImagePointSize]
  -[CKUIBehaviorMac macEffectPickerTitleLeadingPadding]
  -[CKUIBehaviorMac replyLineWidth]
  -[CKUIBehaviorMac replyLineViewVerticalPadding]
  -[CKUIBehaviorMac canPresentOverKeyboard]
  -[CKUIBehaviorMac replyLineBracketRadius]
  -[CKUIBehaviorMac detailsExpanseDescriptionLabelHeight]
  -[CKUIBehaviorMac tuConversationJoinButtonMinWidth]
  -[CKUIBehaviorMac macNSToolbarItemSize]
  -[CKUIBehaviorMac macNSToolbarItemInterItemSpacing]
  -[CKUIBehaviorMac macJoinFaceTimeNSToolbarItemSize]
  -[CKUIBehaviorMac balloonMaskSize]
  -[CKUIBehaviorMac macNavbarRightMargin]
  -[CKUIBehaviorMac avatarSpacingMargin]
  -[CKUIBehaviorMac avatarNameWidth]
  -[CKUIBehaviorMac minWindowWidthPrimaryColumnOffset]
  -[CKUIBehaviorMac unreadIndicatorTotalMargins]
  -[CKUIBehaviorMac macToLabelTrailingMargin]
  -[CKUIBehaviorMac macTitleTrailingMargin]
  -[CKUIBehaviorMac balloonTextFontUserDefaults]
  -[CKUIBehaviorMac entryViewSupportsPhotoButton]
  -[CKUIBehaviorMac avatarContactImageNameMargin]
  -[CKUIBehaviorMac browserButtonShouldUseMenu]
  -[CKUIBehaviorMac audioBalloonTimeFont]
  -[CKUIBehaviorMac replyBalloonMaskTailWidth]
  -[CKUIBehaviorMac fontSizeUserDefaults]
  -[CKUIBehaviorMac fontSizeOffsetUserDefaults]
  -[CKUIBehaviorMac customFontEnabled]
  -[CKUIBehaviorMac customFontNameUserDefaults]
  -[CKUIBehaviorMac customFontSizeUserDefaults]
  -[CKUIBehaviorMac balloonContiguousSpace]
  -[CKUIBehaviorMac balloonNonContiguousSpace]
  -[CKUIBehaviorMac balloonMaxWidthPercent]
  -[CKUIBehaviorMac appMenuAnimojiStickersIconForTraitCollection:]
  -[CKUIBehaviorMac appMenuHashtagImagesIconForTraitCollection:]
  -[CKUIBehaviorMac textFontUserDefaults:]
  -[CKUIBehaviorMac macToolbarFaceTimeImage]
  -[CKUIBehaviorMac legacyMacAppMinConversationListWidth]
  -[CKUIBehaviorMac legacyMacAppSnapToMinConversationListWidth]
  -[CKUIBehaviorMac emojiButtonSize]
  -[CKUIBehaviorMac appMenuEffectsIconForTraitCollection:]
  -[CKUIBehaviorMac appMenuPhotosIconForTraitCollection:]
  -[CKUIBehaviorMac previewTitleFont]
  -[CKUIBehaviorMac avatarNameFont]
  -[CKUIBehaviorMac locationBoldButtonFont]
  -[CKUIBehaviorMac locationButtonFont]
  -[CKUIBehaviorMac messageAcknowledgmentTranscriptBalloonRelativePosition]
  -[CKUIBehaviorMac conversationListDragDistanceThreshold]
  -[CKUIBehaviorMac defaultConversationListWidth]
  -[CKUIBehaviorMac expandedToolbarHeightForMiiC]
  -[CKUIBehaviorMac entryViewMacCancelButtonName]
  -[CKUIBehaviorMac popoverHeightPadding]
  -[CKUIBehaviorMac entryViewMacStopButtonName]
  -[CKUIBehaviorMac popOverMaxHeight]
  -[CKUIBehaviorMac autocompletePopOverLeftOffset]
  -[CKUIBehaviorMac iosMacDetailsButtonText]
  -[CKUIBehaviorMac macConversationListToolbarHeight]
  -[CKUIBehaviorMac searchBarFont]
  -[CKUIBehaviorMac chatNavbarLeftMargin]
  -[CKUIBehaviorMac chatNavbarRightMargin]
  -[CKUIBehaviorMac macNavbarBottomMargin]
  -[CKUIBehaviorMac macTotalMarginWidth]
  -[CKUIBehaviorMac tuConversationBalloonTitleMaxStringWidth]
  -[CKUIBehaviorMac detailsMapViewInset]
  -[CKUIBehaviorMac searchCellCornerRadius]
  -[CKUIBehaviorMac searchLocationsCellCornerRadius]
  -[CKUIBehaviorMac detailsGroupButtonHeight]
  -[CKUIBehaviorMac detailsGroupButtonWidth]
  -[CKUIBehaviorMac detailsInterGroupButtonPadding]
  -[CKUIBehaviorMac minTranscriptMarginInsets]
  -[CKUIBehaviorMac entryViewMacEmojiButtonImage]
  -[CKUIBehaviorMac conversationListBoldSummaryFont]
  -[CKUIBehaviorMac transcriptButtonTextFont]
  -[CKUIBehaviorMac transcriptSenderFont]
  -[CKUIBehaviorMac transcriptRegularFont]
  -[CKUIBehaviorMac messageAcknowledgmentTranscriptOrganicBalloonAdditionalOffset]
  -[CKUIBehaviorMac messageAcknowledgmentPickerBarRelativePosition]
  -[CKUIBehaviorMac messageAcknowledgmentPickerBarAcknowledgmentItemBalloonSize]
  -[CKUIBehaviorMac messageAcknowledgmentPickerBarItemViewSize]
  -[CKUIBehaviorMac detailsContactImageDiameter]
  -[CKUIBehaviorMac messageAcknowledgmentPickerBarBubbleTailSize]
  -[CKUIBehaviorMac messageAcknowledgmentPickerBarBubbleStartingOrigin]
  -[CKUIBehaviorMac messageAcknowledgmentPickerBarOffsetFromBalloon]
  -[CKUIBehaviorMac messageAcknowledgementVotingViewMaxWidth]
  -[CKUIBehaviorMac skinnyBalloonMaskSize]
  -[CKUIBehaviorMac taillessMultilineBalloonMaskSize]
  -[CKUIBehaviorMac multilineBalloonMaskSize]
  -[CKUIBehaviorMac replyBalloonMaskSize]
  -[CKUIBehaviorMac replyMultilineBalloonMaskSize]
  -[CKUIBehaviorMac replySkinnyBalloonMaskSize]
  -[CKUIBehaviorMac replyDeleteBalloonMaskSize]
  -[CKUIBehaviorMac searchIndexingTitleFont]
  -[CKUIBehaviorMac roundBalloonMaskSizeWithTailShape:]
  -[CKUIBehaviorMac balloonMaskAlignmentRectInsets]
  -[CKUIBehaviorMac snapToMinConversationListWidth]
  -[CKUIBehaviorMac entryViewCoverHorizontalMargin]
  -[CKUIBehaviorMac conversationListCellRightMargin]
  -[CKUIBehaviorMac conversationListContactImageTrailingSpace]
  -[CKUIBehaviorMac entryViewAppButtonName]
  -[CKUIBehaviorMac transcriptReplyPreviewContextContactImageDiameter]
  -[CKUIBehaviorMac shouldShowAvatarForWidth:]
  -[CKUIBehaviorMac searchIndexingSubtitleFont]
  -[CKUIBehaviorMac businessInfoViewGreetingTextFont]
  -[CKUIBehaviorMac appMenuTitleFont]
  -[CKUIBehaviorMac replyBalloonMinHeight]
  -[CKUIBehaviorMac conversationListCellLeftMargin]
  -[CKUIBehaviorMac conversationListContactImageDiameter]
  -[CKUIBehaviorMac searchMessageBodyTextFont]
  -[CKUIBehaviorMac conversationListMinimumWidthForHiddenContactImage]
  -[CKUIBehaviorMac businessInfoViewDescriptionTextFont]
  -[CKUIBehaviorMac businessInfoViewTitleLabelFont]
  -[CKUIBehaviorMac searchSectionMarginInsets]
  -[CKUIBehaviorMac previewMaxWidth]
  -[CKUIBehaviorMac mapPreviewMaxWidth]
  -[CKUIBehaviorMac searchLeadingAndTrailingMaxPadding]
  -[CKUIBehaviorMac searchConversationMinAvatarLabelSpacing]
  -[CKUIBehaviorMac searchPhotosCellCornerRadius]
  -[CKUIBehaviorMac searchPhotosCellZKWAndDetailsCornerRadius]
  -[CKUIBehaviorMac searchLinksCellCornerRadius]
  -[CKUIBehaviorMac searchAttachmentsCellCornerRadius]
  -[CKUIBehaviorMac searchResultLabelFont]
  -[CKUIBehaviorMac toFieldYOffset]
  -[CKUIBehaviorMac balloonSelectionScrollThresholdTop]
  -[CKUIBehaviorMac balloonSelectionScrollThresholdBottom]
  -[CKUIBehaviorMac balloonSelectionLoadMoreSpinnerHeight]
  -[CKUIBehaviorMac useMacToolbar]
  -[CKUIBehaviorMac balloonSelectionMaxScrollSpeed]
  -[CKUIBehaviorMac popOverWidthInDetailsView]
  -[CKUIBehaviorMac popOverMaxHeightInDetailsView]
  -[CKUIBehaviorMac macToolbarSymbolConfiguration]
  -[CKUIBehaviorMac detailsToFieldPreferredHeight]
  -[CKUIBehaviorMac macToolbarDetailsImageName]
  -[CKUIBehaviorMac toFieldScrollViewInsets]
  -[CKUIBehaviorMac macToolbarDetailsImage]
  -[CKUIBehaviorMac presentsAutocompleteInAPopover]
  -[CKUIBehaviorMac imageBalloonSelectionOverlayColor]
  -[CKUIBehaviorMac macToolbarJoinedFaceTimeVideoImageName]
  -[CKUIBehaviorMac macToolbarJoinedFaceTimeAudioImageName]
  -[CKUIBehaviorMac marzNavigationBarHeight]
  -[CKUIBehaviorMac toFieldInterItemSpacing]
  -[CKUIBehaviorMac macToolbarJoinableFaceTimeVideoImageName]
  -[CKUIBehaviorMac macToolbarJoinableFaceTimeAudioImageName]
  -[CKUIBehaviorMac macToolbarFaceTimeImageName]
  -[CKUIBehaviorMac transcriptMessageStatusDateFont]
  -[CKUIBehaviorMac macToolbarStoplightButtonsLeadingPadding]
  -[CKUIBehaviorMac macAppKitToolbarHeight]
  -[CKUIBehaviorMac isSendButtonEnabledOnPlatform]
  -[CKUIBehaviorMac searchNavbarCanvasInsets]
  -[CKUIBehaviorMac minConversationListWidthComposeButtonSize]
  -[CKUIBehaviorMac replyBalloonTextFont]
  -[CKUIBehaviorMac avatarSize]
  -[CKUIBehaviorMac messageHighlightButtonGlyphSymbolPointSize]
  -[CKUIBehaviorMac spaceBetweenSearchBarAndComposeButton]
  -[CKUIBehaviorMac toFieldXOffset]
  -[CKUIBehaviorMac transcriptMessageStatusFont]
  -[CKUIBehaviorMac conversationListPinnedCellSelectedBackgroundCornerRadius]
  -[CKUIBehaviorMac navbarDefaultLabelFont]
  -[CKUIBehaviorMac suppressPinActivityForState:]
  -[CKUIBehaviorMac quickSaveButtonImage]
  -[CKUIBehaviorMac minConversationListWidth]
  -[CKUIBehaviorMac popoverPadding]
  -[CKUIBehaviorMac supportsOrbPreviewsInConversationList]
  -[CKUIBehaviorMac maxConversationListWidth]
  -[CKUIBehaviorMac conversationListCellRoundSelectorLeftInset]
  -[CKUIBehaviorMac conversationListGroupSenderFont]
  -[CKUIBehaviorMac conversationListCellRoundSelectorRightInset]
  -[CKUIBehaviorMac conversationListPinnedConversationNameFont]
  -[CKUIBehaviorMac stopButtonSize]
  -[CKUIBehaviorMac showsHoverToDeleteButtonForNewCompose]
  -[CKUIBehaviorMac nicknameUpdatesTitleFont]
  -[CKUIBehaviorMac transcriptMinBottomInsetIsEntryViewHeight]
  -[CKUIBehaviorMac pinnedConversationActivityBroadShadowLightRadius]
  -[CKUIBehaviorMac pinnedConversationActivityBroadShadowDarkRadius]
  -[CKUIBehaviorMac replyButtonFont]
  -[CKUIBehaviorMac pinnedConversationActivityTightShadowLightRadius]
  -[CKUIBehaviorMac pinnedConversationActivityTightShadowDarkRadius]
  -[CKUIBehaviorMac pinnedConversationActivityBroadShadowLightOpacity]
  -[CKUIBehaviorMac pinnedConversationActivityBroadShadowDarkOpacity]
  -[CKUIBehaviorMac unreadIndicatorImageViewSize]
  -[CKUIBehaviorMac pinnedConversationActivityTightShadowLightOpacity]
  -[CKUIBehaviorMac pinnedConversationActivityTightShadowDarkOpacity]
  -[CKUIBehaviorMac pinnedConversationActivityBroadShadowLightOffset]
  -[CKUIBehaviorMac pinnedConversationActivityBroadShadowDarkOffset]
  -[CKUIBehaviorMac pinnedConversationActivityTightShadowLightOffset]
  -[CKUIBehaviorMac pinnedConversationActivityTightShadowDarkOffset]
  -[CKUIBehaviorMac navigationBarClass]
  -[CKUIBehaviorMac waveformHeight]
  -[CKUIBehaviorMac nicknameUpdatesSubtitleFont]
  -[CKUIBehaviorMac macNavbarLeftMargin]
  -[CKUIBehaviorMac replyLineViewHorizontalPadding]
  -[CKUIBehaviorMac transcriptDrawerGestureAcceleration]
  -[CKUIBehaviorMac syncProgressLabelFont]
  -[CKUIBehaviorMac transcriptBoldFont]
  -[CKUIBehaviorMac messageAcknowledgmentTranscriptBalloonSize]
  -[CKUIBehaviorMac messageAcknowledgmentTranscriptGlyphInset]
  -[CKUIBehaviorMac tuConversationBalloonScreenShareDeviceIconSize]
  -[CKUIBehaviorMac tuConversationBalloonInsetPadding]
  -[CKUIBehaviorMac tuConversationBalloonFaceTimeIconDimensions]
  -[CKUIBehaviorMac tuConversationBalloonAvatarDimensions]
  -[CKUIBehaviorMac attachmentReplyPreviewBalloonAlignmentRectInsets]
  -[CKUIBehaviorMac tuConversationBalloonCornerRadius]
  -[CKUIBehaviorMac tuConversationInsetPadding]
  -[CKUIBehaviorMac thumbnailFillSizeForWidth:imageSize:]
  -[CKUIBehaviorMac tuConversationInteritemSpacing]
  -[CKUIBehaviorMac conversationListCellCloseButtonWidth]
  -[CKUIBehaviorMac conversationListCellCloseButtonHeight]
  -[CKUIBehaviorMac snapToMinConversationListCellWidth]
  -[CKUIBehaviorMac messageAcknowledgmentPickerBarAcknowledgmentImageSize]
  -[CKUIBehaviorMac replyButtonPadding]
  -[CKUIBehaviorMac replyButtonEdgeInsets]
  -[CKUIBehaviorMac tuConversationBalloonActionButtonFont]
  -[CKUIBehaviorMac showsBalloonChevron]
  -[CKUIBehaviorMac balloonMaskTailSizeForTailShape:]
  -[CKUIBehaviorMac tuConversationBalloonImageDimensions]
  -[CKUIBehaviorMac canPluginBalloonsUseOpaqueMask]
  -[CKUIBehaviorMac tuConversationBalloonEdgeInsets]
  -[CKUIBehaviorMac tuConversationBalloonTwoLineVerticalPadding]
  -[CKUIBehaviorMac tuConversationBalloonInteritemSpacing]
  -[CKUIBehaviorMac tuConversationBalloonActionButtonFontStyle]
  -[CKUIBehaviorMac tuConversationBalloonJoinButtonMinWidth]
  -[CKUIBehaviorMac tuConversationBalloonJoinButtonHeight]
  -[CKUIBehaviorMac tuConversationBalloonButtonInteritemSpacing]
  -[CKUIBehaviorMac mentionsCellNameFont]
  -[CKUIBehaviorMac audioReplyPreviewBalloonInset]
  -[CKUIBehaviorMac textReplyPreviewBalloonAlignmentRectInsets]
  -[CKUIBehaviorMac audioProgressViewSize]
  -[CKUIBehaviorMac tuConversationJoinButtonCornerRadius]
  -[CKUIBehaviorMac tuConversationBalloonIconDimensions]
  -[CKUIBehaviorMac balloonMaskTailWidth]
  -[CKUIBehaviorMac searchHeaderFont]
  -[CKUIBehaviorMac searchHeaderButtonFont]
  -[CKUIBehaviorMac paddleDividerInset]
  -[CKUIBehaviorMac messageAcknowledgementVotingViewHeight]
  -[CKUIBehaviorMac messageAcknowledgmentPickerBarSize]
  -[CKUIBehaviorMac messageAcknowledgementVotingViewMinPadding]
  -[CKUIBehaviorMac conversationListSenderFont]
  -[CKUIBehaviorMac conversationListSummaryFont]
  -[CKUIBehaviorMac bottomConversationListSpace]
  -[CKUIBehaviorMac showsHoverToDeleteButton]
  -[CKUIBehaviorMac audioHintFont]
  -[CKUIBehaviorMac chromeEffectForInterfaceStyle:]
  -[CKUIBehaviorMac contactPhotosEnabled]
  -[CKUIBehaviorMac shouldDisableFocusRing]
  -[CKUIBehaviorMac paddleOvelayRadius]
  -[CKUIBehaviorMac chatNavbarColor]
  -[CKUIBehaviorMac defaultConversationLoadMoreCount]
  -[CKUIBehaviorMac entryViewAudioButtonName]
  -[CKUIBehaviorMac useSelectedAppearanceForConversationCellState:traitCollection:]
  -[CKUIBehaviorMac enableBalloonTextSelection]
  -[CKUIBehaviorMac detailsPreferredContentSizeWidth]
  -[CKUIBehaviorMac detailsPreferredContentSizeHeight]
  -[CKUIBehaviorMac detailsExpanseScreenShareCellHeight]
  -[CKUIBehaviorMac browserButtonSize]
  -[CKUIBehaviorMac detailsSectionCount]
  -[CKUIBehaviorMac entryViewHorizontalCoverInsets]
  -[CKUIBehaviorMac entryViewVerticalCoverInsets]
  -[CKUIBehaviorMac balloonTextFont]
  -[CKUIBehaviorMac cancelButtonSize]
  -[CKUIBehaviorMac sendButtonSize]
  -[CKUIBehaviorMac transcriptContactImageDiameter]
  -[CKUIBehaviorMac detailsContactCellButtonWidth]
  -[CKUIBehaviorMac recipientNameFont]
  -[CKUIBehaviorMac isEntryViewCollapsable]
  -[CKUIBehaviorMac messageAcknowledgmentVoteCountFont]
  -[CKUIBehaviorMac detailsContactCellButtonHeight]
  -[CKUIBehaviorMac detailsContactCellButtonEdgeInsets]
  -[CKUIBehaviorMac detailsViewMapHeight]
  -[CKUIBehaviorMac transcriptQuickSaveButtonDiameter]
  -[CKUIBehaviorMac tuConversationJoinButtonHeight]


CKFullscreenBrowserNavigationController : UINavigationController <CKAdaptivePresentedControllerProtocol>
 @property  BOOL wantsWindowedPresentation
 @property  BOOL preserveModalPresentationStyle
 @property  BOOL shouldHidePresentingWindow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKFullscreenBrowserNavigationController shouldAutorotate]
  -[CKFullscreenBrowserNavigationController wantsWindowedPresentation]
  -[CKFullscreenBrowserNavigationController setWantsWindowedPresentation:]
  -[CKFullscreenBrowserNavigationController preserveModalPresentationStyle]
  -[CKFullscreenBrowserNavigationController setPreserveModalPresentationStyle:]
  -[CKFullscreenBrowserNavigationController constrainToPresentingVCBounds]
  -[CKFullscreenBrowserNavigationController forceWindowedPresentation]
  -[CKFullscreenBrowserNavigationController loadView]
  -[CKFullscreenBrowserNavigationController supportedInterfaceOrientations]


CKPinnedConversationCollectionViewCell : UICollectionViewCell
 @property  CKPinnedConversationView *pinnedConversationView
 @property  BOOL isShowingUnpinAccessory
 @property  CKConversationListAccessoryView *unpinAccessoryView
 @property  BOOL isShowingCheckboxAccessory
 @property  CKConversationListAccessoryView *checkboxAccessoryView
 @property  unsigned long currentState
 @property  BOOL isJittering
 @property  BOOL isPreparingForReuse
 @property  NSObject<CKPinnedConversationCollectionViewCellDelegate> *delegate
 @property  BOOL showsBackgroundViewWhenSelected
 @property  BOOL allowActivitySuppressionWhenSelected
 @property  unsigned long editingMode

  // class methods
  +[CKPinnedConversationCollectionViewCell checkmarkAccessoryView]
  +[CKPinnedConversationCollectionViewCell _jitterXTranslationAnimation]
  +[CKPinnedConversationCollectionViewCell _jitterRotationAnimation]
  +[CKPinnedConversationCollectionViewCell _jitterYTranslationAnimation]
  +[CKPinnedConversationCollectionViewCell unpinAccessoryView]
  +[CKPinnedConversationCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKPinnedConversationCollectionViewCell didMoveToSuperview]
  -[CKPinnedConversationCollectionViewCell editingMode]
  -[CKPinnedConversationCollectionViewCell .cxx_destruct]
  -[CKPinnedConversationCollectionViewCell showsBackgroundViewWhenSelected]
  -[CKPinnedConversationCollectionViewCell _updateActivitySupressionForState:]
  -[CKPinnedConversationCollectionViewCell _updateZPositionForState:]
  -[CKPinnedConversationCollectionViewCell checkboxAccessoryView]
  -[CKPinnedConversationCollectionViewCell _viewConfigurationState]
  -[CKPinnedConversationCollectionViewCell checkboxFrame]
  -[CKPinnedConversationCollectionViewCell updateCheckboxAccessoryImageForCurrentLayoutStyle]
  -[CKPinnedConversationCollectionViewCell unpinAccessoryViewFrame]
  -[CKPinnedConversationCollectionViewCell unpinButtonTapped:]
  -[CKPinnedConversationCollectionViewCell updateUnpinAccessoryImageForCurrentLayoutStyle]
  -[CKPinnedConversationCollectionViewCell isShowingUnpinAccessory]
  -[CKPinnedConversationCollectionViewCell layoutSubviews]
  -[CKPinnedConversationCollectionViewCell isShowingCheckboxAccessory]
  -[CKPinnedConversationCollectionViewCell setShowingCheckboxAccessory:]
  -[CKPinnedConversationCollectionViewCell _createCheckboxAccessoryIfNecessary]
  -[CKPinnedConversationCollectionViewCell setCheckboxAccessoryView:]
  -[CKPinnedConversationCollectionViewCell setShowingUnpinAccessory:]
  -[CKPinnedConversationCollectionViewCell _createUnpinAccessoryIfNecessary]
  -[CKPinnedConversationCollectionViewCell setUnpinAccessoryView:]
  -[CKPinnedConversationCollectionViewCell isPreparingForReuse]
  -[CKPinnedConversationCollectionViewCell accessorySizeForLayoutStyle:]
  -[CKPinnedConversationCollectionViewCell setPinnedConversationView:]
  -[CKPinnedConversationCollectionViewCell allowActivitySuppressionWhenSelected]
  -[CKPinnedConversationCollectionViewCell setIsPreparingForReuse:]
  -[CKPinnedConversationCollectionViewCell unpinAccessoryView]
  -[CKPinnedConversationCollectionViewCell pinnedConversationView]
  -[CKPinnedConversationCollectionViewCell setDelegate:]
  -[CKPinnedConversationCollectionViewCell sizeThatFits:]
  -[CKPinnedConversationCollectionViewCell prepareForReuse]
  -[CKPinnedConversationCollectionViewCell currentState]
  -[CKPinnedConversationCollectionViewCell isJittering]
  -[CKPinnedConversationCollectionViewCell initWithFrame:]
  -[CKPinnedConversationCollectionViewCell delegate]
  -[CKPinnedConversationCollectionViewCell setEditingMode:animated:]
  -[CKPinnedConversationCollectionViewCell setShowsBackgroundViewWhenSelected:]
  -[CKPinnedConversationCollectionViewCell dragStateDidChange:]
  -[CKPinnedConversationCollectionViewCell _updateGhostedAppearance]
  -[CKPinnedConversationCollectionViewCell setJittering:]
  -[CKPinnedConversationCollectionViewCell setAllowActivitySuppressionWhenSelected:]
  -[CKPinnedConversationCollectionViewCell _updateViewConfigurationsWithState:]
  -[CKPinnedConversationCollectionViewCell setCurrentState:]
  -[CKPinnedConversationCollectionViewCell configurationState]


CKGradientView : UIView <CKLayerDelegate>
 @property  CKBaseLayer *gradientLayer
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} gradientFrame
 @property  CATransformLayer *trackingLayer
 @property  UIView<CKGradientReferenceView> *referenceView
 @property  NSArray *colors
 @property  UIImage *maskImage
 @property  UIImage *gradient

  // class methods
  +[CKGradientView gradientViews]

  // instance methods
  -[CKGradientView gradient]
  -[CKGradientView setReferenceView:]
  -[CKGradientView colors]
  -[CKGradientView setColors:]
  -[CKGradientView didMoveToSuperview]
  -[CKGradientView referenceView]
  -[CKGradientView _removeAllAnimations:]
  -[CKGradientView gradientFrame]
  -[CKGradientView .cxx_destruct]
  -[CKGradientView layoutSubviews]
  -[CKGradientView setTrackingLayer:]
  -[CKGradientView trackingLayer]
  -[CKGradientView updateAnimation]
  -[CKGradientView updateGradientImage]
  -[CKGradientView ckLayerDidBecomeVisible:]
  -[CKGradientView setGradientFrame:]
  -[CKGradientView setGradientLayer:]
  -[CKGradientView initWithFrame:]
  -[CKGradientView maskImage]
  -[CKGradientView didMoveToWindow]
  -[CKGradientView setMaskImage:]
  -[CKGradientView gradientLayer]


CKGradientReferenceView : UIView <CKGradientReferenceView>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} gradientFrame
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKGradientReferenceView gradientFrame]
  -[CKGradientReferenceView setFrame:]
  -[CKGradientReferenceView setGradientFrame:]
  -[CKGradientReferenceView setBounds:]


CKDetailsShowMoreContactsCell : CKDetailsCell <CKDetailsCell>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsShowMoreContactsCell shouldHighlight]
  +[CKDetailsShowMoreContactsCell reuseIdentifier]
  +[CKDetailsShowMoreContactsCell preferredHeight]
  +[CKDetailsShowMoreContactsCell cellClass]


CKMediaObjectReplyAssetActionPerformer : CKMediaObjectAssetActionPerformer
  // class methods
  +[CKMediaObjectReplyAssetActionPerformer canPerformWithActionManager:selectionSnapshot:]
  +[CKMediaObjectReplyAssetActionPerformer canPerformOnImplicitSelection]
  +[CKMediaObjectReplyAssetActionPerformer localizedTitleForUseCase:actionManager:]
  +[CKMediaObjectReplyAssetActionPerformer systemImageNameForActionManager:]

  // instance methods
  -[CKMediaObjectReplyAssetActionPerformer performUserInteractionTask]


CKEffectPreviewCollectionView : UICollectionView
  // instance methods
  -[CKEffectPreviewCollectionView _isEligibleForFocusOcclusion]


CKEffectPreviewCollectionViewController : UIViewController
 @property  CKFullScreenEffectManager *fsem
 @property  CKFullScreenEffect *currentEffect
 @property  CKMomentCollectionViewCell *currentCell
 @property  NSString *resizingSavedIdentifier
 @property  NSTimer *animationTimer
 @property  BOOL hideEffects
 @property  UIView *cellWrapper
 @property  <CKEffectPreviewCollectionViewControllerDelegate> *delegate

  // instance methods
  -[CKEffectPreviewCollectionViewController fsem]
  -[CKEffectPreviewCollectionViewController animationTimer]
  -[CKEffectPreviewCollectionViewController currentEffect]
  -[CKEffectPreviewCollectionViewController setAnimationTimer:]
  -[CKEffectPreviewCollectionViewController setCurrentEffect:]
  -[CKEffectPreviewCollectionViewController currentCell]
  -[CKEffectPreviewCollectionViewController displayEffectWithIdentifier:]
  -[CKEffectPreviewCollectionViewController setFsem:]
  -[CKEffectPreviewCollectionViewController .cxx_destruct]
  -[CKEffectPreviewCollectionViewController cellWrapper]
  -[CKEffectPreviewCollectionViewController setDelegate:]
  -[CKEffectPreviewCollectionViewController setCurrentCell:]
  -[CKEffectPreviewCollectionViewController init]
  -[CKEffectPreviewCollectionViewController addAnimationTimerForCell:]
  -[CKEffectPreviewCollectionViewController resizingSavedIdentifier]
  -[CKEffectPreviewCollectionViewController setResizingSavedIdentifier:]
  -[CKEffectPreviewCollectionViewController resumeEffect]
  -[CKEffectPreviewCollectionViewController setHideEffects:]
  -[CKEffectPreviewCollectionViewController setCellWrapper:]
  -[CKEffectPreviewCollectionViewController delegate]
  -[CKEffectPreviewCollectionViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKEffectPreviewCollectionViewController hideEffects]
  -[CKEffectPreviewCollectionViewController dealloc]
  -[CKEffectPreviewCollectionViewController loadView]


CKTranscriptCompositionalLayout : UICollectionViewCompositionalLayout <CKTranscriptLayoutCompatibility>
 @property  NSArray *layoutAttributes
 @property  NSArray *associatedLayoutAttributes
 @property  NSArray *decorationLayoutAttributes
 @property  NSArray *oldAssociatedLayoutAttributes
 @property  NSMutableIndexSet *insertedAssociatedLayoutAttributes
 @property  BOOL hasLoadMore
 @property  NSMutableDictionary *initialParentLayoutAttributes
 @property  NSMutableDictionary *finalParentVerticalOffsets
 @property  BOOL sizeCategoryIsAccessibilitySizeCategory
 @property  IMScheduledUpdater *dynamicsUpdater
 @property  ^{_UIUpdateSequenceItemInternal=} dynamicsUpdateSequenceItem
 @property  double anchorYPosition
 @property  {CGPoint=dd} targetContentOffset
 @property  BOOL holdingBoundsInvalidation
 @property  BOOL useInitialLayoutAttributesForRotation
 @property  BOOL useOverlayLayout
 @property  BOOL inlineAnimatingOut
 @property  unsigned char chatStyle
 @property  BOOL isResting
 @property  {CGSize=dd} sizeForRotation
 @property  NSIndexSet *indicesOfChatItemsToBeRemovedWithoutFading
 @property  NSIndexSet *indicesOfChatItemsToBeInsertedWithoutFading
 @property  NSIndexSet *indicesOfReplyChatItemsToBeInserted
 @property  BOOL disableDynamicsWhileScrolling
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKTranscriptCompositionalLayout layoutAttributesClass]
  +[CKTranscriptCompositionalLayout translateLayoutIndexToEffectIndex:]
  +[CKTranscriptCompositionalLayout bottomTranscriptSpaceWithLastChatItem:]

  // instance methods
  -[CKTranscriptCompositionalLayout _applyTargetFrameOffsetsForLayoutAttributesIfNeeded:]
  -[CKTranscriptCompositionalLayout _kickDynamicsIfNeeded]
  -[CKTranscriptCompositionalLayout disableDynamicsWhileScrolling]
  -[CKTranscriptCompositionalLayout setChatStyle:]
  -[CKTranscriptCompositionalLayout handleInvalidCaseForChatItem:withPrevChatItem:]
  -[CKTranscriptCompositionalLayout layoutAttributesForItemAtIndexPath:]
  -[CKTranscriptCompositionalLayout updateContentSize]
  -[CKTranscriptCompositionalLayout setSizeForRotation:]
  -[CKTranscriptCompositionalLayout indicesOfChatItemsToBeRemovedWithoutFading]
  -[CKTranscriptCompositionalLayout prepareLayout]
  -[CKTranscriptCompositionalLayout _dealloc]
  -[CKTranscriptCompositionalLayout collectionViewContentSize]
  -[CKTranscriptCompositionalLayout indicesOfChatItemsToBeInsertedWithoutFading]
  -[CKTranscriptCompositionalLayout .cxx_destruct]
  -[CKTranscriptCompositionalLayout _updateAssociatedAttributeFramesForPrimaryAttribute:]
  -[CKTranscriptCompositionalLayout clearParentInitialIndexesAndFinalOffsets]
  -[CKTranscriptCompositionalLayout setInitialIndex:forParentOfAssociatedItemInsertedAtIndex:]
  -[CKTranscriptCompositionalLayout dynamicsUpdater]
  -[CKTranscriptCompositionalLayout insertedAssociatedLayoutAttributes]
  -[CKTranscriptCompositionalLayout sizeCategoryDidChange:]
  -[CKTranscriptCompositionalLayout isUsingInitialLayoutAttributesForRotation]
  -[CKTranscriptCompositionalLayout nextMessageIsReplyForIndex:]
  -[CKTranscriptCompositionalLayout sizeForRotation]
  -[CKTranscriptCompositionalLayout setFinalParentVerticalOffsets:]
  -[CKTranscriptCompositionalLayout invalidateDisplayLink]
  -[CKTranscriptCompositionalLayout reloadLayout]
  -[CKTranscriptCompositionalLayout finalParentVerticalOffsets]
  -[CKTranscriptCompositionalLayout _configureUpdateSequenceItem]
  -[CKTranscriptCompositionalLayout _configureDisplayLink]
  -[CKTranscriptCompositionalLayout isResting]
  -[CKTranscriptCompositionalLayout setUseOverlayLayout:]
  -[CKTranscriptCompositionalLayout _convertScreenFrameToLocalFrame:]
  -[CKTranscriptCompositionalLayout setNeedsDynamicsUpdate]
  -[CKTranscriptCompositionalLayout setHoldingBoundsInvalidation:]
  -[CKTranscriptCompositionalLayout setUseInitialLayoutAttributesForRotation:]
  -[CKTranscriptCompositionalLayout _applyAttributeUpdatesWithTargetMap:layoutAttributes:updateBlock:]
  -[CKTranscriptCompositionalLayout setDecorationLayoutAttributes:]
  -[CKTranscriptCompositionalLayout effectIndexForDecorationViewAtIndex:]
  -[CKTranscriptCompositionalLayout isInlineAnimatingOut]
  -[CKTranscriptCompositionalLayout dynamicsUpdateSequenceItem]
  -[CKTranscriptCompositionalLayout updateAttributesForAnchorYChangeWithAttributes:]
  -[CKTranscriptCompositionalLayout _configureThreadGroupsForAttributes:outMaxYAnchorAttribute:forVisibleBounds:]
  -[CKTranscriptCompositionalLayout targetContentOffset]
  -[CKTranscriptCompositionalLayout removeUpdateSequenceItem]
  -[CKTranscriptCompositionalLayout setDisableDynamicsWhileScrolling:]
  -[CKTranscriptCompositionalLayout initialParentLayoutAttributes]
  -[CKTranscriptCompositionalLayout setInlineAnimatingOut:]
  -[CKTranscriptCompositionalLayout decorationLayoutAttributes]
  -[CKTranscriptCompositionalLayout updateAttributesForTargetContentOffsetChangeWithAttributes:]
  -[CKTranscriptCompositionalLayout prepareLayoutForRotisserieScrolling]
  -[CKTranscriptCompositionalLayout reduceMotionSettingChanged:]
  -[CKTranscriptCompositionalLayout setInitialParentLayoutAttributes:]
  -[CKTranscriptCompositionalLayout layoutAttributesForElementsInRect:]
  -[CKTranscriptCompositionalLayout __im_ff_psEnabled]
  -[CKTranscriptCompositionalLayout setOldAssociatedLayoutAttributes:]
  -[CKTranscriptCompositionalLayout setHasLoadMore:]
  -[CKTranscriptCompositionalLayout oldAssociatedLayoutAttributes]
  -[CKTranscriptCompositionalLayout _applyCurrentFrameOffsetsForLayoutAttributesIfNeeded:]
  -[CKTranscriptCompositionalLayout displayLinkFired:]
  -[CKTranscriptCompositionalLayout initWithSectionProvider:]
  -[CKTranscriptCompositionalLayout indicesOfReplyChatItemsToBeInserted]
  -[CKTranscriptCompositionalLayout finalLayoutAttributesForDisappearingItemAtIndexPath:]
  -[CKTranscriptCompositionalLayout hasLoadMore]
  -[CKTranscriptCompositionalLayout setAssociatedLayoutAttributes:]
  -[CKTranscriptCompositionalLayout setIndicesOfChatItemsToBeRemovedWithoutFading:]
  -[CKTranscriptCompositionalLayout setLayoutAttributes:]
  -[CKTranscriptCompositionalLayout initialLayoutAttributesForAppearingItemAtIndexPath:]
  -[CKTranscriptCompositionalLayout setSizeCategoryIsAccessibilitySizeCategory:]
  -[CKTranscriptCompositionalLayout setIndicesOfChatItemsToBeInsertedWithoutFading:]
  -[CKTranscriptCompositionalLayout bezierPointForPercentage:anchor1:anchor2:control1:control2:]
  -[CKTranscriptCompositionalLayout beginHoldingDynamicsUpdatesForKey:]
  -[CKTranscriptCompositionalLayout needsAdditionalBracketPaddingForChatItem:prevChatItem:]
  -[CKTranscriptCompositionalLayout chatStyle]
  -[CKTranscriptCompositionalLayout setAnchorYPosition:]
  -[CKTranscriptCompositionalLayout nextItemIsOriginatorWithRepliesForIndex:]
  -[CKTranscriptCompositionalLayout _updateAttributeZIndex:forEffect:]
  -[CKTranscriptCompositionalLayout layoutAttributes]
  -[CKTranscriptCompositionalLayout setIndicesOfReplyChatItemsToBeInserted:]
  -[CKTranscriptCompositionalLayout dealloc]
  -[CKTranscriptCompositionalLayout endHoldingDynamicsUpdatesForKey:]
  -[CKTranscriptCompositionalLayout reloadData]
  -[CKTranscriptCompositionalLayout setDynamicsUpdater:]
  -[CKTranscriptCompositionalLayout isUsingOverlayLayout]
  -[CKTranscriptCompositionalLayout previousReplyCount:isOccludedForAssociatedFrame:outMaxY:]
  -[CKTranscriptCompositionalLayout shouldInvalidateLayoutForBoundsChange:]
  -[CKTranscriptCompositionalLayout updateAssociatedLayoutAttributesIfNecessary]
  -[CKTranscriptCompositionalLayout _visibleRectInsectsForMaxYAnchorLayoutAttribute:forVisibleBounds:]
  -[CKTranscriptCompositionalLayout isHoldingBoundsInvalidation]
  -[CKTranscriptCompositionalLayout setInsertedAssociatedLayoutAttributes:]
  -[CKTranscriptCompositionalLayout setVerticalOffset:forParentOfAssociatedItemDeletedAtIndex:]
  -[CKTranscriptCompositionalLayout setTargetContentOffset:]
  -[CKTranscriptCompositionalLayout associatedLayoutAttributes]
  -[CKTranscriptCompositionalLayout layoutAttributesForDecorationViewOfKind:atIndexPath:]
  -[CKTranscriptCompositionalLayout sizeCategoryIsAccessibilitySizeCategory]
  -[CKTranscriptCompositionalLayout setDynamicsUpdateSequenceItem:]
  -[CKTranscriptCompositionalLayout anchorYPosition]


CKTranscriptPluginPresentationConfiguration : NSObject
 @property  UIView *sourceView
 @property  unsigned long permittedArrowDirections
 @property  BOOL shouldDisableSnapshotView

  // instance methods
  -[CKTranscriptPluginPresentationConfiguration .cxx_destruct]
  -[CKTranscriptPluginPresentationConfiguration sourceView]
  -[CKTranscriptPluginPresentationConfiguration initWithSourceView:permittedArrowDirections:shouldDisableSnapshotView:]
  -[CKTranscriptPluginPresentationConfiguration permittedArrowDirections]
  -[CKTranscriptPluginPresentationConfiguration shouldDisableSnapshotView]


CKAutoloopMovieBalloonView : CKImageBalloonView <ISWrappedAVPlayerDelegate, ISChangeObserver>
 @property  ISVideoPlayerUIView *videoPlayer
 @property  ISWrappedAVPlayer *avPlayer
 @property  ISWrappedAVAudioSession *audioSession
 @property  UIImageView *muteButton
 @property  BOOL isMuted
 @property  UIView *snapshotView
 @property  BOOL isListeningToVideoPlayer
 @property  CKMovieMediaObject *mediaObject
 @property  BOOL isJellyfishVideo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKAutoloopMovieBalloonView AVPlayerLayerClass]
  +[CKAutoloopMovieBalloonView AVPlayerClass]
  +[CKAutoloopMovieBalloonView VideoPlayerUIViewClass]
  +[CKAutoloopMovieBalloonView _autoloopAVAudioSessionQueue]
  +[CKAutoloopMovieBalloonView isEnabled]

  // instance methods
  -[CKAutoloopMovieBalloonView isMuted]
  -[CKAutoloopMovieBalloonView muteButton]
  -[CKAutoloopMovieBalloonView setMediaObject:]
  -[CKAutoloopMovieBalloonView isJellyfishVideo]
  -[CKAutoloopMovieBalloonView setIsJellyfishVideo:]
  -[CKAutoloopMovieBalloonView setIsMuted:]
  -[CKAutoloopMovieBalloonView prepareForDisplay]
  -[CKAutoloopMovieBalloonView snapshotView]
  -[CKAutoloopMovieBalloonView .cxx_destruct]
  -[CKAutoloopMovieBalloonView mediaObject]
  -[CKAutoloopMovieBalloonView layoutSubviews]
  -[CKAutoloopMovieBalloonView videoPlayer]
  -[CKAutoloopMovieBalloonView avPlayer]
  -[CKAutoloopMovieBalloonView setMuteButton:]
  -[CKAutoloopMovieBalloonView stopListeningToVideoPlayer]
  -[CKAutoloopMovieBalloonView prepareForReuse]
  -[CKAutoloopMovieBalloonView setAudioSession:]
  -[CKAutoloopMovieBalloonView setVideoPlayer:]
  -[CKAutoloopMovieBalloonView startListeningToVideoPlayer]
  -[CKAutoloopMovieBalloonView isListeningToVideoPlayer]
  -[CKAutoloopMovieBalloonView setIsListeningToVideoPlayer:]
  -[CKAutoloopMovieBalloonView _removeSnapshot]
  -[CKAutoloopMovieBalloonView _shouldPauseInitialLooping]
  -[CKAutoloopMovieBalloonView _thermalStateAcceptableForLooping]
  -[CKAutoloopMovieBalloonView _shouldPresentQuickLookOnTap]
  -[CKAutoloopMovieBalloonView avPlayer:itemDidPlayToEnd:]
  -[CKAutoloopMovieBalloonView _applicationStateAcceptableForLooping]
  -[CKAutoloopMovieBalloonView avPlayerDidDeallocate]
  -[CKAutoloopMovieBalloonView setAvPlayer:]
  -[CKAutoloopMovieBalloonView initWithFrame:]
  -[CKAutoloopMovieBalloonView previewDidChange:]
  -[CKAutoloopMovieBalloonView didMoveToWindow]
  -[CKAutoloopMovieBalloonView _thermalStateDidChange:]
  -[CKAutoloopMovieBalloonView dealloc]
  -[CKAutoloopMovieBalloonView tapGestureRecognized:]
  -[CKAutoloopMovieBalloonView setSnapshotView:]
  -[CKAutoloopMovieBalloonView observable:didChange:context:]
  -[CKAutoloopMovieBalloonView observeValueForKeyPath:ofObject:change:context:]
  -[CKAutoloopMovieBalloonView prepareForAcknowledgementDisplay]
  -[CKAutoloopMovieBalloonView prepareForAcknowledgementDismissal]
  -[CKAutoloopMovieBalloonView audioSession]
  -[CKAutoloopMovieBalloonView configureForMediaObject:previewWidth:orientation:hasInvisibleInkEffect:]


CKRegistrationView : UIScrollView
 @property  UIImageView *iconImageView
 @property  UILabel *titleLabel
 @property  UILabel *verbiageLabel
 @property  UILabel *signingInLabel
 @property  UIActivityIndicatorView *signingInSpinner
 @property  UIButton *learnMoreButton
 @property  UIView *authKitSignInView
 @property  UIView *privacyLinkView

  // instance methods
  -[CKRegistrationView titleLabel]
  -[CKRegistrationView setIconImageView:]
  -[CKRegistrationView .cxx_destruct]
  -[CKRegistrationView setTitleLabel:]
  -[CKRegistrationView layoutSubviews]
  -[CKRegistrationView verbiageLabel]
  -[CKRegistrationView signingInLabel]
  -[CKRegistrationView signingInSpinner]
  -[CKRegistrationView _learnMorePressed:]
  -[CKRegistrationView learnMoreButton]
  -[CKRegistrationView manualSizeToFitForAuthKitSignInView]
  -[CKRegistrationView privacyLinkView]
  -[CKRegistrationView setVerbiageLabel:]
  -[CKRegistrationView setSigningInLabel:]
  -[CKRegistrationView setSigningInSpinner:]
  -[CKRegistrationView setLearnMoreButton:]
  -[CKRegistrationView authKitSignInView]
  -[CKRegistrationView iconImageView]
  -[CKRegistrationView setAuthKitSignInView:]
  -[CKRegistrationView setPrivacyLinkView:]
  -[CKRegistrationView setSigningIn:]


CKPinnedConversationContactItemAvatarView : CKAvatarView <CKPinnedConversationContactItemView>
 @property  <CKPinnedConversationContactItem> *pinnedConversationContactItem

  // instance methods
  -[CKPinnedConversationContactItemAvatarView traitCollectionDidChange:]
  -[CKPinnedConversationContactItemAvatarView pinnedConversationContactItem]
  -[CKPinnedConversationContactItemAvatarView .cxx_destruct]
  -[CKPinnedConversationContactItemAvatarView init]
  -[CKPinnedConversationContactItemAvatarView _updateContactItemViewShadows]
  -[CKPinnedConversationContactItemAvatarView setPinnedConversationContactItem:]


CKPinnedConversationContactItemProvider : NSObject
  // class methods
  +[CKPinnedConversationContactItemProvider contactItemFromEntity:]


CKPinnedConversationContactItemFromHandle : NSObject <CKPinnedConversationContactItem>
 @property  CKEntity *entity
 @property  double contentScale
 @property  long long contactItemAlignment
 @property  NSString *contactItemIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKPinnedConversationContactItemFromHandle initWithEntity:]
  -[CKPinnedConversationContactItemFromHandle cnContactWithKeys:]
  -[CKPinnedConversationContactItemFromHandle .cxx_destruct]
  -[CKPinnedConversationContactItemFromHandle contentScale]
  -[CKPinnedConversationContactItemFromHandle entity]
  -[CKPinnedConversationContactItemFromHandle setEntity:]
  -[CKPinnedConversationContactItemFromHandle setContentScale:]
  -[CKPinnedConversationContactItemFromHandle contactItemIdentifier]
  -[CKPinnedConversationContactItemFromHandle contactItemAlignment]
  -[CKPinnedConversationContactItemFromHandle contactItemView]
  -[CKPinnedConversationContactItemFromHandle setContactItemAlignment:]


CKDetailsChatOptionsCell : CKDetailsCell <CKDetailsCell>
 @property  UISwitch *controlSwitch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsChatOptionsCell shouldHighlight]
  +[CKDetailsChatOptionsCell estimatedHeight]
  +[CKDetailsChatOptionsCell reuseIdentifier]
  +[CKDetailsChatOptionsCell preferredHeight]

  // instance methods
  -[CKDetailsChatOptionsCell .cxx_destruct]
  -[CKDetailsChatOptionsCell controlSwitch]
  -[CKDetailsChatOptionsCell prepareForReuse]
  -[CKDetailsChatOptionsCell setControlSwitch:]
  -[CKDetailsChatOptionsCell _configureNewControlSwitch]
  -[CKDetailsChatOptionsCell initWithStyle:reuseIdentifier:]


CKPinnedConversationSummaryBubble : CKPinnedConversationTailedActivityItemView
 @property  UILabel *summaryLabel
 @property  CKPinnedConversationSummaryBubbleActivityItem *summaryBubbleActivityItem
 @property  NSAttributedString *summaryText

  // instance methods
  -[CKPinnedConversationSummaryBubble traitCollectionDidChange:]
  -[CKPinnedConversationSummaryBubble contentViewContentMode]
  -[CKPinnedConversationSummaryBubble setActivityItem:]
  -[CKPinnedConversationSummaryBubble supportsActivityItemViewContentScale]
  -[CKPinnedConversationSummaryBubble setActivityItemViewContentScale:]
  -[CKPinnedConversationSummaryBubble supportsAlignmentWithOriginationSubAvatarFrame]
  -[CKPinnedConversationSummaryBubble summaryLabel]
  -[CKPinnedConversationSummaryBubble contentViewPadding]
  -[CKPinnedConversationSummaryBubble summaryText]
  -[CKPinnedConversationSummaryBubble .cxx_destruct]
  -[CKPinnedConversationSummaryBubble contentSizeCategoryDidChange:]
  -[CKPinnedConversationSummaryBubble pillCornerRadius]
  -[CKPinnedConversationSummaryBubble _updateSummaryLabel]
  -[CKPinnedConversationSummaryBubble summaryLabelFont]
  -[CKPinnedConversationSummaryBubble _summaryLabelTextColor]
  -[CKPinnedConversationSummaryBubble initWithSummaryBubbleActivityItem:]
  -[CKPinnedConversationSummaryBubble summaryBubbleActivityItem]
  -[CKPinnedConversationSummaryBubble setSummaryLabel:]


CKPinnedConversationSummaryBubbleActivityItem : NSObject <CKPinnedConversationActivityItem>
 @property  IMMessage *message
 @property  IMChat *chat
 @property  NSString *attachedContactItemIdentifier
 @property  NSAttributedString *summaryText
 @property  NSString *activityItemIdentifier
 @property  BOOL activityItemAppearsWithAnimation
 @property  BOOL activityItemDisappearsWithAnimation
 @property  double activityItemContentScale
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKPinnedConversationSummaryBubbleActivityItem chat]
  -[CKPinnedConversationSummaryBubbleActivityItem activityItemIdentifier]
  -[CKPinnedConversationSummaryBubbleActivityItem activityItemView]
  -[CKPinnedConversationSummaryBubbleActivityItem summaryText]
  -[CKPinnedConversationSummaryBubbleActivityItem activityItemDisappearsWithAnimation]
  -[CKPinnedConversationSummaryBubbleActivityItem activityItemContentScale]
  -[CKPinnedConversationSummaryBubbleActivityItem activityItemAppearsWithAnimation]
  -[CKPinnedConversationSummaryBubbleActivityItem attachedContactItemIdentifier]
  -[CKPinnedConversationSummaryBubbleActivityItem .cxx_destruct]
  -[CKPinnedConversationSummaryBubbleActivityItem message]
  -[CKPinnedConversationSummaryBubbleActivityItem initWithSummaryText:]
  -[CKPinnedConversationSummaryBubbleActivityItem initWithMessage:chat:contentScale:attachedContactItemIdentifier:]


CKTranscriptAvatarSupplementaryView : CKTranscriptCollectionSupplementaryView
 @property  CKAvatarView *avatarView

  // class methods
  +[CKTranscriptAvatarSupplementaryView supplementaryViewKindPrefix]

  // instance methods
  -[CKTranscriptAvatarSupplementaryView setAvatarView:]
  -[CKTranscriptAvatarSupplementaryView .cxx_destruct]
  -[CKTranscriptAvatarSupplementaryView avatarView]
  -[CKTranscriptAvatarSupplementaryView initWithFrame:]
  -[CKTranscriptAvatarSupplementaryView dealloc]
  -[CKTranscriptAvatarSupplementaryView configureForChatItem:context:]


CKBrowserPluginCell : CKBrowserCell
 @property  IMBalloonPlugin *plugin
 @property  UIImageView *browserImage

  // class methods
  +[CKBrowserPluginCell reuseIdentifier]

  // instance methods
  -[CKBrowserPluginCell .cxx_destruct]
  -[CKBrowserPluginCell browserImage]
  -[CKBrowserPluginCell layoutSubviews]
  -[CKBrowserPluginCell setSelected:]
  -[CKBrowserPluginCell setBrowserImage:]
  -[CKBrowserPluginCell _setImageForPlugin:]
  -[CKBrowserPluginCell _updateShinyStatus]
  -[CKBrowserPluginCell setPlugin:hideShinyStatus:]
  -[CKBrowserPluginCell plugin]
  -[CKBrowserPluginCell setPlugin:]
  -[CKBrowserPluginCell iconView]


CKBrowserSwitcherFooterAccessoryCell : UICollectionReusableView
 @property  UIView *seperatorView
 @property  double minHeight
 @property  double maxHeight

  // class methods
  +[CKBrowserSwitcherFooterAccessoryCell reuseIdentifier]
  +[CKBrowserSwitcherFooterAccessoryCell supplementryViewKind]

  // instance methods
  -[CKBrowserSwitcherFooterAccessoryCell minHeight]
  -[CKBrowserSwitcherFooterAccessoryCell .cxx_destruct]
  -[CKBrowserSwitcherFooterAccessoryCell layoutSubviews]
  -[CKBrowserSwitcherFooterAccessoryCell setMinHeight:]
  -[CKBrowserSwitcherFooterAccessoryCell maxHeight]
  -[CKBrowserSwitcherFooterAccessoryCell setSeperatorView:]
  -[CKBrowserSwitcherFooterAccessoryCell seperatorView]
  -[CKBrowserSwitcherFooterAccessoryCell initWithFrame:]
  -[CKBrowserSwitcherFooterAccessoryCell setMaxHeight:]


CKSnapshotCacheKey : NSObject <NSCopying>
 @property  NSString *identifier
 @property  long long interfaceStyle
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  NSString *stringValue

  // class methods
  +[CKSnapshotCacheKey keyWithIdentifier:interfaceStyle:bounds:]

  // instance methods
  -[CKSnapshotCacheKey stringValue]
  -[CKSnapshotCacheKey setInterfaceStyle:]
  -[CKSnapshotCacheKey .cxx_destruct]
  -[CKSnapshotCacheKey interfaceStyle]
  -[CKSnapshotCacheKey isEqual:]
  -[CKSnapshotCacheKey keyWithOppositeInterfaceStyle]
  -[CKSnapshotCacheKey identifier]
  -[CKSnapshotCacheKey initWithIdentifier:interfaceStyle:bounds:]
  -[CKSnapshotCacheKey setIdentifier:]
  -[CKSnapshotCacheKey copyWithZone:]
  -[CKSnapshotCacheKey setBounds:]
  -[CKSnapshotCacheKey bounds]


CKMeCardSharingNameProvider : NSObject <CNMeCardSharingNameProvider>
 @property  NSString *givenName
 @property  NSString *middleName
 @property  NSString *familyName
 @property  NSString *nickname
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKMeCardSharingNameProvider nameProviderForNickname:]
  +[CKMeCardSharingNameProvider nameProviderForContact:]
  +[CKMeCardSharingNameProvider nameProviderForPrimaryAccount]
  +[CKMeCardSharingNameProvider nameProviderForAccount:]
  +[CKMeCardSharingNameProvider nameContactForPrimaryAccount]

  // instance methods
  -[CKMeCardSharingNameProvider nickname]
  -[CKMeCardSharingNameProvider familyName]
  -[CKMeCardSharingNameProvider middleName]
  -[CKMeCardSharingNameProvider setFamilyName:]
  -[CKMeCardSharingNameProvider .cxx_destruct]
  -[CKMeCardSharingNameProvider setGivenName:]
  -[CKMeCardSharingNameProvider setNickname:]
  -[CKMeCardSharingNameProvider setMiddleName:]
  -[CKMeCardSharingNameProvider givenName]


CKBlackholeChatItem : CKStampChatItem
  // class methods
  +[CKBlackholeChatItem sizeThatFits:text:]

  // instance methods
  -[CKBlackholeChatItem transcriptOrientation]
  -[CKBlackholeChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKBlackholeChatItem loadTranscriptText]
  -[CKBlackholeChatItem cellClass]


CKTranscriptCollectionViewCell : UICollectionViewCell <CKTranscriptCellProtocol, CKTranscriptCollectionViewCellProtocol>
 @property  UILabel *debugLabel
 @property  BOOL wantsDrawerLayout
 @property  BOOL orientation
 @property  double drawerPercentRevealed
 @property  double associatedItemOffset
 @property  BOOL isInReplyContext
 @property  BOOL isAnimatingInDarkEffect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKTranscriptCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKTranscriptCollectionViewCell clearFilters]
  -[CKTranscriptCollectionViewCell setOrientation:]
  -[CKTranscriptCollectionViewCell performReload:completion:]
  -[CKTranscriptCollectionViewCell performRemoval:]
  -[CKTranscriptCollectionViewCell isInReplyContext]
  -[CKTranscriptCollectionViewCell .cxx_destruct]
  -[CKTranscriptCollectionViewCell layoutSubviews]
  -[CKTranscriptCollectionViewCell performReveal:]
  -[CKTranscriptCollectionViewCell wantsDrawerLayout]
  -[CKTranscriptCollectionViewCell prepareForReuse]
  -[CKTranscriptCollectionViewCell debugLabel]
  -[CKTranscriptCollectionViewCell orientation]
  -[CKTranscriptCollectionViewCell addFilter:]
  -[CKTranscriptCollectionViewCell isAnimatingInDarkEffect]
  -[CKTranscriptCollectionViewCell setIsAnimatingInDarkEffect:]
  -[CKTranscriptCollectionViewCell setDrawerPercentRevealed:]
  -[CKTranscriptCollectionViewCell layoutSubviewsForDrawer]
  -[CKTranscriptCollectionViewCell associatedItemOffset]
  -[CKTranscriptCollectionViewCell setIsInReplyContext:]
  -[CKTranscriptCollectionViewCell performHide:]
  -[CKTranscriptCollectionViewCell configureForChatItem:context:]
  -[CKTranscriptCollectionViewCell setAssociatedItemOffset:]
  -[CKTranscriptCollectionViewCell setWantsDrawerLayout:]
  -[CKTranscriptCollectionViewCell setDebugLabel:]
  -[CKTranscriptCollectionViewCell performInsertion:]
  -[CKTranscriptCollectionViewCell drawerPercentRevealed]
  -[CKTranscriptCollectionViewCell layoutSubviewsForContents]
  -[CKTranscriptCollectionViewCell layoutSubviewsForAlignmentContents]


CKQuickLookThumbnailAttachmentItem : CKAttachmentItem
  // class methods
  +[CKQuickLookThumbnailAttachmentItem defaultSize]
  +[CKQuickLookThumbnailAttachmentItem UTITypes]

  // instance methods
  -[CKQuickLookThumbnailAttachmentItem generatePreviewWithCompletion:]
  -[CKQuickLookThumbnailAttachmentItem size]


CKMediaObjectTapbackUserData : NSObject
 @property  CKMediaObjectBackedAsset *asset
 @property  UIView<CKGradientReferenceView> *gradientReferenceView
 @property  BOOL shouldAnimate
 @property  BOOL invertTailDirection
 @property  BOOL displayedInGridView

  // instance methods
  -[CKMediaObjectTapbackUserData isDisplayedInGridView]
  -[CKMediaObjectTapbackUserData shouldAnimate]
  -[CKMediaObjectTapbackUserData .cxx_destruct]
  -[CKMediaObjectTapbackUserData setAsset:]
  -[CKMediaObjectTapbackUserData asset]
  -[CKMediaObjectTapbackUserData gradientReferenceView]
  -[CKMediaObjectTapbackUserData setInvertTailDirection:]
  -[CKMediaObjectTapbackUserData invertTailDirection]
  -[CKMediaObjectTapbackUserData setShouldAnimate:]
  -[CKMediaObjectTapbackUserData setDisplayedInGridView:]
  -[CKMediaObjectTapbackUserData setGradientReferenceView:]
  -[CKMediaObjectTapbackUserData copyWithZone:]


CKMediaObjectTapbackManager : NSObject <PXTapbackStatusManager>
 @property  UIView<CKGradientReferenceView> *gradientReferenceView
 @property  BOOL invertTapbackTailDirection
 @property  BOOL originatedFromGridView
 @property  CKAggregateAttachmentMessagePartChatItem *chatItem
 @property  Class decorationViewClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMediaObjectTapbackManager .cxx_destruct]
  -[CKMediaObjectTapbackManager decorationViewClass]
  -[CKMediaObjectTapbackManager chatItem]
  -[CKMediaObjectTapbackManager setChatItem:]
  -[CKMediaObjectTapbackManager setInvertTapbackTailDirection:]
  -[CKMediaObjectTapbackManager gradientReferenceView]
  -[CKMediaObjectTapbackManager invertTapbackTailDirection]
  -[CKMediaObjectTapbackManager originatedFromGridView]
  -[CKMediaObjectTapbackManager hasTapbacksForAsset:]
  -[CKMediaObjectTapbackManager tapbackUserDataForAsset:previousAsset:]
  -[CKMediaObjectTapbackManager setOriginatedFromGridView:]
  -[CKMediaObjectTapbackManager setGradientReferenceView:]


CKIMSimulatedChat : IMChat <CKIMSimulatedChatDelegate, CKIMSimulatedDaemonListener>
 @property  CKIMSimulatedAccount *simulatedAccount
 @property  NSString *simulatedGUID
 @property  NSArray *incomingHandles
 @property  IMHandle *outgoingHandle
 @property  unsigned long currentMessageID
 @property  NSString *simulatedChatIdentifier
 @property  <CKIMSimulatedChatDelegate> *delegate

  // class methods
  +[CKIMSimulatedChat prepopulatedChat]

  // instance methods
  -[CKIMSimulatedChat participants]
  -[CKIMSimulatedChat account]
  -[CKIMSimulatedChat guid]
  -[CKIMSimulatedChat recipient]
  -[CKIMSimulatedChat .cxx_destruct]
  -[CKIMSimulatedChat sendMessage:]
  -[CKIMSimulatedChat setDelegate:]
  -[CKIMSimulatedChat simulatedDaemon:willSendBalloonPayload:attachments:messageGUID:bundleID:]
  -[CKIMSimulatedChat chatIdentifier]
  -[CKIMSimulatedChat markAsAutoSpamReported]
  -[CKIMSimulatedChat currentMessageID]
  -[CKIMSimulatedChat _sendMessage:adjustingSender:shouldQueue:]
  -[CKIMSimulatedChat chat:didSendMessage:finished:]
  -[CKIMSimulatedChat incomingHandles]
  -[CKIMSimulatedChat _handleIncomingItem:]
  -[CKIMSimulatedChat delegate]
  -[CKIMSimulatedChat simulatedChatIdentifier]
  -[CKIMSimulatedChat setSimulatedChatIdentifier:]
  -[CKIMSimulatedChat _messageWithGUID:]
  -[CKIMSimulatedChat initWithIncomingIDs:outgoingID:messageIDOffset:service:]
  -[CKIMSimulatedChat simulatedAccount]
  -[CKIMSimulatedChat simulatedGUID]
  -[CKIMSimulatedChat chatStyle]
  -[CKIMSimulatedChat outgoingHandle]
  -[CKIMSimulatedChat loadMessagesBeforeDate:limit:loadImmediately:]


CKAvatarContactNameCollectionReusableView : UICollectionReusableView
 @property  UILabel *titleLabel
 @property  long long style
 @property  BOOL shouldDisplayTitle

  // class methods
  +[CKAvatarContactNameCollectionReusableView supplementaryViewKind]
  +[CKAvatarContactNameCollectionReusableView reuseIdentifier]

  // instance methods
  -[CKAvatarContactNameCollectionReusableView titleLabel]
  -[CKAvatarContactNameCollectionReusableView .cxx_destruct]
  -[CKAvatarContactNameCollectionReusableView setStyle:]
  -[CKAvatarContactNameCollectionReusableView setTitleLabel:]
  -[CKAvatarContactNameCollectionReusableView layoutSubviews]
  -[CKAvatarContactNameCollectionReusableView configureWithEntity:]
  -[CKAvatarContactNameCollectionReusableView setShouldDisplayTitle:]
  -[CKAvatarContactNameCollectionReusableView initWithFrame:]
  -[CKAvatarContactNameCollectionReusableView shouldDisplayTitle]
  -[CKAvatarContactNameCollectionReusableView style]


CKOrganicAttachmentMessagePartChatItem : CKAttachmentMessagePartChatItem
 @property  CKOrganicImageLayoutRecipe *layoutRecipe

  // instance methods
  -[CKOrganicAttachmentMessagePartChatItem layoutType]
  -[CKOrganicAttachmentMessagePartChatItem .cxx_destruct]
  -[CKOrganicAttachmentMessagePartChatItem balloonViewClass]
  -[CKOrganicAttachmentMessagePartChatItem layoutRecipe]
  -[CKOrganicAttachmentMessagePartChatItem setLayoutRecipe:]
  -[CKOrganicAttachmentMessagePartChatItem supportsInlineReplyTransition]
  -[CKOrganicAttachmentMessagePartChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKOrganicAttachmentMessagePartChatItem balloonCorners]
  -[CKOrganicAttachmentMessagePartChatItem cellClass]
  -[CKOrganicAttachmentMessagePartChatItem customLayoutGroupProviderClass]


CKAutoupdatingDateFormatter : NSDateFormatter
 @property  NSString *template

  // instance methods
  -[CKAutoupdatingDateFormatter notificationCenter]
  -[CKAutoupdatingDateFormatter .cxx_destruct]
  -[CKAutoupdatingDateFormatter template]
  -[CKAutoupdatingDateFormatter initWithTemplate:]
  -[CKAutoupdatingDateFormatter setTemplate:]
  -[CKAutoupdatingDateFormatter updateDateFormat]
  -[CKAutoupdatingDateFormatter dealloc]


CKAutoupdatingRelativeDateFormatter : CKAutoupdatingDateFormatter
  // class methods
  +[CKAutoupdatingRelativeDateFormatter relativeDateFormatter]
  +[CKAutoupdatingRelativeDateFormatter relativeStringFromDate:]
  +[CKAutoupdatingRelativeDateFormatter weekdayTemplateCharacters]

  // instance methods
  -[CKAutoupdatingRelativeDateFormatter stringFromDate:isRelative:]
  -[CKAutoupdatingRelativeDateFormatter stringFromDate:]


CKReportSpamChatItem : CKStampChatItem
 @property  NSAttributedString *transcriptButtonText
 @property  NSAttributedString *internalPhishingWarning

  // instance methods
  -[CKReportSpamChatItem isGroupChat]
  -[CKReportSpamChatItem .cxx_destruct]
  -[CKReportSpamChatItem showReportSMSSpam]
  -[CKReportSpamChatItem setTranscriptButtonText:]
  -[CKReportSpamChatItem transcriptButtonText]
  -[CKReportSpamChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKReportSpamChatItem loadTranscriptText]
  -[CKReportSpamChatItem internalPhishingWarning]
  -[CKReportSpamChatItem hasMultipleMessages]
  -[CKReportSpamChatItem transcriptTextForSpam:]
  -[CKReportSpamChatItem cellClass]


CKVideoMessageRecordingViewController : UIViewController <UINavigationControllerDelegate, UIImagePickerControllerDelegate, CKActionMenuControllerDelegate, CKVideoRecorderDelegate>
 @property  UIView *topBackgroundView
 @property  CKRecordingElapsedTimeView *timerView
 @property  CKActionMenuController *videoActionMenuController
 @property  CKActionMenuItem *photoMenuItem
 @property  UIButton *swapCameraButton
 @property  BOOL recording
 @property  BOOL sending
 @property  BOOL canceled
 @property  BOOL triedToRecord
 @property  unsigned long enableCancel
 @property  CKMediaObject *mediaObjectForSending
 @property  NSError *captureError
 @property  @? mediaExportCompletionBlock
 @property  UIImagePickerController *cameraViewController
 @property  <CKVideoMessageRecordingViewControllerDelegate> *videoMessageDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKVideoMessageRecordingViewController send]
  -[CKVideoMessageRecordingViewController childViewControllerForStatusBarHidden]
  -[CKVideoMessageRecordingViewController setSending:]
  -[CKVideoMessageRecordingViewController record]
  -[CKVideoMessageRecordingViewController sending]
  -[CKVideoMessageRecordingViewController .cxx_destruct]
  -[CKVideoMessageRecordingViewController ckVideoRecorderRecordingCanceled:]
  -[CKVideoMessageRecordingViewController ckVideoRecorder:imageDataCaptured:error:]
  -[CKVideoMessageRecordingViewController ckVideoRecorder:videoCaptured:error:]
  -[CKVideoMessageRecordingViewController viewDidLoad]
  -[CKVideoMessageRecordingViewController imagePickerController:didFinishPickingMediaWithInfo:]
  -[CKVideoMessageRecordingViewController setRecording:]
  -[CKVideoMessageRecordingViewController shouldAutorotate]
  -[CKVideoMessageRecordingViewController actionMenuControllerWillDismissActionMenu:animated:]
  -[CKVideoMessageRecordingViewController recording]
  -[CKVideoMessageRecordingViewController presentWithCompletion:]
  -[CKVideoMessageRecordingViewController dismissWithCompletion:]
  -[CKVideoMessageRecordingViewController setCanceled:]
  -[CKVideoMessageRecordingViewController cancel]
  -[CKVideoMessageRecordingViewController canceled]
  -[CKVideoMessageRecordingViewController swapCamera:]
  -[CKVideoMessageRecordingViewController _applicationWillEnterForeground:]
  -[CKVideoMessageRecordingViewController _animateVideoIn]
  -[CKVideoMessageRecordingViewController dealloc]
  -[CKVideoMessageRecordingViewController _previewWarmedUp:]
  -[CKVideoMessageRecordingViewController setCameraViewController:]
  -[CKVideoMessageRecordingViewController cameraViewController]
  -[CKVideoMessageRecordingViewController setTimerView:]
  -[CKVideoMessageRecordingViewController setTopBackgroundView:]
  -[CKVideoMessageRecordingViewController topBackgroundView]
  -[CKVideoMessageRecordingViewController setSwapCameraButton:]
  -[CKVideoMessageRecordingViewController cancelMenuItemAction:]
  -[CKVideoMessageRecordingViewController photoMenuItemAction:]
  -[CKVideoMessageRecordingViewController setPhotoMenuItem:]
  -[CKVideoMessageRecordingViewController videoMenuItemAction:]
  -[CKVideoMessageRecordingViewController setVideoActionMenuController:]
  -[CKVideoMessageRecordingViewController presentVideoActionMenuController]
  -[CKVideoMessageRecordingViewController _cameraOrientationChanged:]
  -[CKVideoMessageRecordingViewController videoActionMenuController]
  -[CKVideoMessageRecordingViewController swapCameraButton]
  -[CKVideoMessageRecordingViewController captureError]
  -[CKVideoMessageRecordingViewController triedToRecord]
  -[CKVideoMessageRecordingViewController photoMenuItem]
  -[CKVideoMessageRecordingViewController setTriedToRecord:]
  -[CKVideoMessageRecordingViewController stopRecordingWithCompletionBlock:]
  -[CKVideoMessageRecordingViewController setMediaExportCompletionBlock:]
  -[CKVideoMessageRecordingViewController takePictureWithCompletionBlock:]
  -[CKVideoMessageRecordingViewController videoMessageDelegate]
  -[CKVideoMessageRecordingViewController mediaObjectForSending]
  -[CKVideoMessageRecordingViewController setMediaObjectForSending:]
  -[CKVideoMessageRecordingViewController setCaptureError:]
  -[CKVideoMessageRecordingViewController mediaExportCompletionBlock]
  -[CKVideoMessageRecordingViewController _cleanupCamera]
  -[CKVideoMessageRecordingViewController initWithPresentationView:]
  -[CKVideoMessageRecordingViewController setVideoMessageDelegate:]
  -[CKVideoMessageRecordingViewController enableCancel]
  -[CKVideoMessageRecordingViewController setEnableCancel:]
  -[CKVideoMessageRecordingViewController _applicationDidEnterBackground:]
  -[CKVideoMessageRecordingViewController imagePickerControllerDidCancel:]
  -[CKVideoMessageRecordingViewController timerView]


_CKVideoMessageRecordingWindow : UIWindow
  // instance methods
  -[_CKVideoMessageRecordingWindow _canAffectStatusBarAppearance]
  -[_CKVideoMessageRecordingWindow initWithFrame:]


CKCoreChatController : CKScrollViewController <IMChatSendProgressDelegate, IMSystemMonitorListener>
 @property  CKConversation *conversation
 @property  IMChat *chat
 @property  CKViewController<CKCoreTranscriptControllerProtocol> *collectionViewController
 @property  BOOL initialLayoutComplete
 @property  double balloonMaxWidth
 @property  double gradientBottomPlaceholderHeight
 @property  BOOL ignoreLastBalloonVisibleInMarkAsReadCheck
 @property  CKScheduledUpdater *refreshServiceForSendingUpdater
 @property  UIProgressView *progressBar
 @property  BOOL sendingMessage
 @property  double sendProgress
 @property  unsigned long sendProgressSendCount
 @property  unsigned long sendProgressTotalCount
 @property  CKFullScreenBalloonViewController *fullScreenBalloonViewController
 @property  long long acknowledgmentToSend
 @property  BOOL disableAnimationsUnderTest
 @property  @? overrideScrollBlock
 @property  STLockoutViewController *lockoutViewController
 @property  BOOL isShowingLockoutView
 @property  CKMacToolbarController *macToolbarController
 @property  <CKCoreChatControllerDelegate> *delegate
 @property  CKTranscriptCollectionView *collectionView
 @property  BOOL shouldDismissAfterSend
 @property  BOOL shouldDisplayTextEntry
 @property  BOOL viewIsVisible
 @property  BOOL transitionedFromComposing
 @property  BOOL userInitiatedTranscriptPush
 @property  BOOL showingInStandAloneWindow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKCoreChatController transcriptControllerClass]
  +[CKCoreChatController _gradientReferenceViewClass]

  // instance methods
  -[CKCoreChatController _handleAvailabilityInvitationReceivedNotification:]
  -[CKCoreChatController chat]
  -[CKCoreChatController viewIsVisible]
  -[CKCoreChatController systemApplicationDidResume]
  -[CKCoreChatController presentMacToolbarController]
  -[CKCoreChatController prepareForSuspend]
  -[CKCoreChatController _handleAvailabilityChangedNotification:]
  -[CKCoreChatController setShowingInStandAloneWindow:]
  -[CKCoreChatController scrollView]
  -[CKCoreChatController transcriptCollectionViewController:balloonViewDidRequestStartEditingPayload:forPlugin:allowAllCommits:completionHandler:]
  -[CKCoreChatController fullScreenBalloonViewController]
  -[CKCoreChatController systemApplicationWillEnterForeground]
  -[CKCoreChatController .cxx_destruct]
  -[CKCoreChatController initWithConversation:]
  -[CKCoreChatController registerNotifications]
  -[CKCoreChatController _updateNavigationButtons]
  -[CKCoreChatController _willSendComposition:inConversation:]
  -[CKCoreChatController _setConversationDeferredSetup]
  -[CKCoreChatController collectionViewController]
  -[CKCoreChatController selectedChatItems]
  -[CKCoreChatController showFullScreenAcknowledgmentPickerForChatItem:]
  -[CKCoreChatController _dismissFullScreenBubbleViewControllerAnimated:withSendAnimation:completion:]
  -[CKCoreChatController _fullScreenBalloonViewControllerWithChatItem:]
  -[CKCoreChatController fullScreenBalloonViewControllerShouldShowReplyButton:]
  -[CKCoreChatController _didSendCompositionInConversation:]
  -[CKCoreChatController _controllerEligibleForSetConversation]
  -[CKCoreChatController fullScreenBalloonViewController:sendMessageAcknowledgment:forChatItem:]
  -[CKCoreChatController fullScreenBalloonViewControllerHandleDismissTap:]
  -[CKCoreChatController showInlineReplyControllerForChatItem:presentKeyboard:]
  -[CKCoreChatController fullScreenBalloonViewController:didAppearAnimated:]
  -[CKCoreChatController fullScreenBalloonViewControllerDidDisappear:]
  -[CKCoreChatController fullScreenBalloonViewController:willAppearAnimated:]
  -[CKCoreChatController transitionedFromComposing]
  -[CKCoreChatController fullScreenBalloonViewControllerShouldShowHightlightButton:forChatItem:]
  -[CKCoreChatController fullScreenBalloonViewController:willDisappearWithSendAnimation:]
  -[CKCoreChatController setDelegate:]
  -[CKCoreChatController fullScreenBalloonViewController:sendMessageHighlight:forChatItem:]
  -[CKCoreChatController viewDidAppear:]
  -[CKCoreChatController _threadChatItemForReplyCountChatItem:chatItems:]
  -[CKCoreChatController sendComposition:]
  -[CKCoreChatController shouldDismissAfterSend]
  -[CKCoreChatController isSendingMessage]
  -[CKCoreChatController macToolbarController]
  -[CKCoreChatController configureWithToolbarController:]
  -[CKCoreChatController _handleAddressBookChangedNotification:]
  -[CKCoreChatController collectionView]
  -[CKCoreChatController showingInStandAloneWindow]
  -[CKCoreChatController setTransitionedFromComposing:]
  -[CKCoreChatController providerWillBeRemovedFromToolbarController:]
  -[CKCoreChatController itemProviderDisablesTouches]
  -[CKCoreChatController toolbarItemForIdentifier:]
  -[CKCoreChatController setupStateForLaunchURL:]
  -[CKCoreChatController _initialFrameForCollectionView]
  -[CKCoreChatController gradientBottomPlaceholderHeight]
  -[CKCoreChatController _updateForNewPreferredService]
  -[CKCoreChatController isInline]
  -[CKCoreChatController setSendingMessage:]
  -[CKCoreChatController __im_ff_isInterstellarEnabled]
  -[CKCoreChatController isSafeToMarkAsRead]
  -[CKCoreChatController _markAsReadIfNecessary]
  -[CKCoreChatController _contentSizeCategoryDidChangeNotification:]
  -[CKCoreChatController shouldListParticipantsInTitle]
  -[CKCoreChatController _transferFinishedNotification:]
  -[CKCoreChatController _transferRestoredNotification:]
  -[CKCoreChatController transcriptCollectionViewControllerPlayingAudioDidChange:]
  -[CKCoreChatController viewWillDisappear:]
  -[CKCoreChatController transcriptCollectionViewController:didSelectItemAtIndexPath:]
  -[CKCoreChatController transcriptCollectionViewControllerRestingStateDidChange:]
  -[CKCoreChatController transcriptCollectionViewController:didDeselectItemAtIndexPath:]
  -[CKCoreChatController transcriptCollectionViewControllerWillScrollToBottom:]
  -[CKCoreChatController registerNotificationsForConversation:]
  -[CKCoreChatController transcriptCollectionViewController:balloonView:tappedForChatItem:]
  -[CKCoreChatController transcriptCollectionViewControllerShouldPlayAudio:]
  -[CKCoreChatController viewDidLayoutSubviews]
  -[CKCoreChatController gradientReferenceView]
  -[CKCoreChatController transcriptCollectionViewController:balloonView:longPressedForItemWithIndexPath:]
  -[CKCoreChatController transcriptCollectionViewController:balloonView:doubleTappedItemAtIndexPath:]
  -[CKCoreChatController parentControllerDidResume:animating:]
  -[CKCoreChatController _displayNameUpdatedNotification:]
  -[CKCoreChatController transcriptCollectionViewController:balloonView:selectedItemAtIndexPath:]
  -[CKCoreChatController transcriptCollectionViewControllerDidInset:]
  -[CKCoreChatController transcriptCollectionViewController:balloonView:showInlineReplyForItemWithIndexPath:]
  -[CKCoreChatController viewWillAppear:]
  -[CKCoreChatController shouldDisplayTextEntry]
  -[CKCoreChatController transcriptCollectionViewController:balloonViewTitleTappedForItemWithIndexPath:]
  -[CKCoreChatController _localeDidChangeNotification:]
  -[CKCoreChatController transcriptCollectionViewControllerWillInset:targetContentInset:]
  -[CKCoreChatController transcriptCollectionViewControllerChatItemsDidChange:]
  -[CKCoreChatController transcriptCollectionViewController:balloonView:shouldSelectChatItem:]
  -[CKCoreChatController transcriptCollectionViewControllerPerformBatchUpdateCompleted:]
  -[CKCoreChatController traitCollectionForTranscriptCollectionViewController:]
  -[CKCoreChatController setupScrollingForKeyboardInteraction]
  -[CKCoreChatController setMacToolbarController:]
  -[CKCoreChatController transcriptCollectionViewController:collectionViewContentSizeDidChange:]
  -[CKCoreChatController dismissInlineReplyController:]
  -[CKCoreChatController transcriptCollectionViewControllerBlockContactButtonTapped:]
  -[CKCoreChatController transcriptCollectionViewControllerReportSpamButtonTapped:]
  -[CKCoreChatController transcriptCollectionViewControllerWillDisplayLastBalloon:]
  -[CKCoreChatController __im_ff_hubbleTranscriptEnabled]
  -[CKCoreChatController transcriptCollectionViewControllerDidInsertAssociatedChatItem:]
  -[CKCoreChatController delegate]
  -[CKCoreChatController transcriptCollectionViewController:targetAlphaForChatItem:]
  -[CKCoreChatController setConversation:]
  -[CKCoreChatController gradientFrameWithInsets:]
  -[CKCoreChatController transcriptCollectionViewControllerPlaybackForOutgoingEffectsIsAllowed:]
  -[CKCoreChatController transcriptCollectionViewController:shouldSetupFullscreenEffectUI:]
  -[CKCoreChatController viewDidAppearDeferredSetup]
  -[CKCoreChatController setViewIsVisible:]
  -[CKCoreChatController transcriptCollectionViewControllerShouldLayoutFullscreenEffects:]
  -[CKCoreChatController transcriptCollectionViewController:shouldCleanupFullscreenEffectUI:]
  -[CKCoreChatController transcriptCollectionViewControllerAdditionalFullscreenEffectViews:]
  -[CKCoreChatController transcriptCollectionViewController:willBeginImpactEffectAnimationWithSendAnimationContext:]
  -[CKCoreChatController transcriptCollectionViewController:didEndImpactEffectAnimationWithSendAnimationContext:]
  -[CKCoreChatController transcriptCollectionViewController:balloonView:didRequestPresentationStyle:forChatItem:allowAllStyles:]
  -[CKCoreChatController transcriptCollectionViewController:balloonViewDidRequestCommitPayload:forPlugin:allowAllCommits:error:]
  -[CKCoreChatController refreshServiceForSending]
  -[CKCoreChatController transcriptCollectionViewController:balloonViewDidRequestCommitSticker:forPlugin:allowAllCommits:error:]
  -[CKCoreChatController _updateTitleAnimated:]
  -[CKCoreChatController transcriptCollectionViewController:didTapReplyCountStatusButtonForChatItem:]
  -[CKCoreChatController significantTimeChange]
  -[CKCoreChatController dealloc]
  -[CKCoreChatController conversation]
  -[CKCoreChatController progressBar]
  -[CKCoreChatController isShowingLockoutView]
  -[CKCoreChatController _setTitle:animated:]
  -[CKCoreChatController showFullScreenAcknowledgmentPickerIfNeededForBalloonAtIndexPath:]
  -[CKCoreChatController lockoutViewController]
  -[CKCoreChatController setLockoutViewController:]
  -[CKCoreChatController setIsShowingLockoutView:]
  -[CKCoreChatController _handleIDsForCurrentConversation]
  -[CKCoreChatController fullScreenBalloonViewControllerSafeAreaLayoutFrame:]
  -[CKCoreChatController acknowledgmentToSend]
  -[CKCoreChatController setAcknowledgmentToSend:]
  -[CKCoreChatController loadView]
  -[CKCoreChatController _conversationListFinishedMerging:]
  -[CKCoreChatController wantsReplyButton]
  -[CKCoreChatController _handleAvailabilityStateChangedNotification:]
  -[CKCoreChatController refreshServiceForSendingUpdater]
  -[CKCoreChatController _refreshServiceForSending]
  -[CKCoreChatController setRefreshServiceForSendingUpdater:]
  -[CKCoreChatController _registerSendProgressDelegate]
  -[CKCoreChatController _inviteToViewFocusStatusIfNeeded]
  -[CKCoreChatController _deregisterSendProgressDelegate]
  -[CKCoreChatController setInitialLayoutComplete:]
  -[CKCoreChatController _shouldAllowReplyFromLockScreen]
  -[CKCoreChatController _conversationHasReplyEnabled]
  -[CKCoreChatController _deviceIsPasscodeLocked]
  -[CKCoreChatController conversationAllowedByScreenTime]
  -[CKCoreChatController _removeExistingCollectionViewController]
  -[CKCoreChatController setCollectionViewController:]
  -[CKCoreChatController _shouldAllowReply]
  -[CKCoreChatController _handleTapEventForBalloonView:atIndexPath:]
  -[CKCoreChatController setProgressBar:]
  -[CKCoreChatController initialLayoutComplete]
  -[CKCoreChatController _handleShowInlineReplyShortcut:atIndexPath:]
  -[CKCoreChatController setIgnoreLastBalloonVisibleInMarkAsReadCheck:]
  -[CKCoreChatController ignoreLastBalloonVisibleInMarkAsReadCheck]
  -[CKCoreChatController overrideScrollBlock]
  -[CKCoreChatController disableAnimationsUnderTest]
  -[CKCoreChatController _preferredServiceChangedNotification:]
  -[CKCoreChatController _downgradeStateChangedNotification:]
  -[CKCoreChatController _availabilityDaemonDisconnectedNotification:]
  -[CKCoreChatController _increaseContrastDidChangeNotification:]
  -[CKCoreChatController _refreshActiveChat:]
  -[CKCoreChatController fullScreenBalloonViewControllerMessageHighlightButtonDidFinishAnimating:]
  -[CKCoreChatController sendProgressTotalCount]
  -[CKCoreChatController _chatRegistryDidReloadNotification:]
  -[CKCoreChatController preferredSendingServiceChanged]
  -[CKCoreChatController setFullScreenBalloonViewController:]
  -[CKCoreChatController sendProgress]
  -[CKCoreChatController chat:progressDidChange:sendingMessages:sendCount:totalCount:finished:]
  -[CKCoreChatController contentInsetDidChange]
  -[CKCoreChatController contentInsetWillChange:animated:duration:]
  -[CKCoreChatController keyboardWillHideViaGesture]
  -[CKCoreChatController setUserInitiatedTranscriptPush:]
  -[CKCoreChatController setSendProgress:]
  -[CKCoreChatController sendProgressSendCount]
  -[CKCoreChatController textInputContextIdentifier]
  -[CKCoreChatController setSendProgressSendCount:]
  -[CKCoreChatController setSendProgressTotalCount:]
  -[CKCoreChatController setDisableAnimationsUnderTest:]
  -[CKCoreChatController setOverrideScrollBlock:]
  -[CKCoreChatController _performResume]
  -[CKCoreChatController userInitiatedTranscriptPush]
  -[CKCoreChatController balloonMaxWidth]
  -[CKCoreChatController parentControllerDidBecomeActive]
  -[CKCoreChatController __im_ff_commSafetyUIEnabled]
  -[CKCoreChatController fullScreenBalloonViewController:balloonFrameForChatItem:]
  -[CKCoreChatController copySelectedChatItemsToPasteboard]


CKUIImagePickerController : UIImagePickerController <CKAdaptivePresentedControllerProtocol>
 @property  BOOL wantsWindowedPresentation
 @property  BOOL preserveModalPresentationStyle
 @property  BOOL shouldHidePresentingWindow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKUIImagePickerController shouldAutorotate]
  -[CKUIImagePickerController wantsWindowedPresentation]
  -[CKUIImagePickerController setWantsWindowedPresentation:]
  -[CKUIImagePickerController preserveModalPresentationStyle]
  -[CKUIImagePickerController setPreserveModalPresentationStyle:]


CKTranslationMenu : NSObject
  // class methods
  +[CKTranslationMenu actionTranslateIsTappedForChatItem:forController:]
  +[CKTranslationMenu translateOrbActionForChatItem:forController:]
  +[CKTranslationMenu translateActionForChatItem:forController:]


CKInvisibleInkEffectController : NSObject <CKInvisibleInkEffectViewDelegate>
 @property  CKInvisibleInkEffectView *effectView
 @property  UIView<CKInvisibleInkEffectHostView> *hostView
 @property  BOOL effectViewNeedsReset
 @property  NSTimer *resumeTimer
 @property  UIView *borrowedEffectViewSnapshot
 @property  BOOL enabled
 @property  BOOL paused
 @property  BOOL suspended
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKInvisibleInkEffectController setHostView:]
  -[CKInvisibleInkEffectController hostView]
  -[CKInvisibleInkEffectController setEffectView:]
  -[CKInvisibleInkEffectController setSuspended:]
  -[CKInvisibleInkEffectController resumeTimer]
  -[CKInvisibleInkEffectController setEffectViewNeedsReset:]
  -[CKInvisibleInkEffectController resumeTimerFired:]
  -[CKInvisibleInkEffectController setResumeTimer:]
  -[CKInvisibleInkEffectController effectViewNeedsReset]
  -[CKInvisibleInkEffectController setBorrowedEffectViewSnapshot:]
  -[CKInvisibleInkEffectController borrowedEffectViewSnapshot]
  -[CKInvisibleInkEffectController _updateBorrowedEffectViewSnapshot]
  -[CKInvisibleInkEffectController invisibleInkEffectViewWasUncovered:]
  -[CKInvisibleInkEffectController updateBorrowedEffectViewSnapshot]
  -[CKInvisibleInkEffectController prepareForDisplay]
  -[CKInvisibleInkEffectController .cxx_destruct]
  -[CKInvisibleInkEffectController effectView]
  -[CKInvisibleInkEffectController returnBorrowedEffectView]
  -[CKInvisibleInkEffectController borrowEffectView]
  -[CKInvisibleInkEffectController isEnabled]
  -[CKInvisibleInkEffectController setPaused:]
  -[CKInvisibleInkEffectController suspendForTimeInterval:]
  -[CKInvisibleInkEffectController dealloc]
  -[CKInvisibleInkEffectController isSuspended]
  -[CKInvisibleInkEffectController setEnabled:]
  -[CKInvisibleInkEffectController hostViewDidUpdateSnapshot:]
  -[CKInvisibleInkEffectController hostViewDidLayoutSubviews]
  -[CKInvisibleInkEffectController initWithHostView:]
  -[CKInvisibleInkEffectController isPaused]


CKNoAnimationSearchFieldAnimator : NSObject <UIViewControllerAnimatedTransitioning>
 @property  BOOL appearing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKNoAnimationSearchFieldAnimator isAppearing]
  -[CKNoAnimationSearchFieldAnimator initWithAppearing:]
  -[CKNoAnimationSearchFieldAnimator transitionDuration:]
  -[CKNoAnimationSearchFieldAnimator animateTransition:]
  -[CKNoAnimationSearchFieldAnimator setAppearing:]


CKNoAnimationSearchController : UISearchController
  // instance methods
  -[CKNoAnimationSearchController animationControllerForPresentedController:presentingController:sourceController:]
  -[CKNoAnimationSearchController animationControllerForDismissedController:]


CKBusinessInfoView : UIView
 @property  long long layoutType
 @property  UILabel *greetingTextLabel
 @property  UILabel *descriptionTextLabel
 @property  CKStandardButton *infoButton
 @property  BOOL hasValidGreeting
 @property  <CKBusinessInfoViewDelegate> *delegate
 @property  NSString *descriptionText
 @property  NSString *greetingText

  // instance methods
  -[CKBusinessInfoView setLayoutType:]
  -[CKBusinessInfoView descriptionText]
  -[CKBusinessInfoView layoutType]
  -[CKBusinessInfoView infoButton]
  -[CKBusinessInfoView hasValidGreeting]
  -[CKBusinessInfoView infoButtonTapped:]
  -[CKBusinessInfoView greetingTextLabel]
  -[CKBusinessInfoView descriptionTextLabel]
  -[CKBusinessInfoView setGreetingTextLabel:]
  -[CKBusinessInfoView setDescriptionTextLabel:]
  -[CKBusinessInfoView .cxx_destruct]
  -[CKBusinessInfoView setup]
  -[CKBusinessInfoView initWithLayoutType:]
  -[CKBusinessInfoView layoutSubviews]
  -[CKBusinessInfoView setDelegate:]
  -[CKBusinessInfoView greetingText]
  -[CKBusinessInfoView setGreetingText:]
  -[CKBusinessInfoView sizeThatFits:]
  -[CKBusinessInfoView delegate]
  -[CKBusinessInfoView setDescriptionText:]
  -[CKBusinessInfoView setInfoButton:]


CKRichLinkReplyPreviewBalloonView : CKColoredBalloonView
 @property  LPLinkView *linkView
 @property  LPLinkMetadata *linkMetadata
 @property  IMBalloonPluginDataSource *dataSource

  // instance methods
  -[CKRichLinkReplyPreviewBalloonView setDataSource:]
  -[CKRichLinkReplyPreviewBalloonView prepareForDisplay]
  -[CKRichLinkReplyPreviewBalloonView .cxx_destruct]
  -[CKRichLinkReplyPreviewBalloonView linkView]
  -[CKRichLinkReplyPreviewBalloonView layoutSubviews]
  -[CKRichLinkReplyPreviewBalloonView dataSource]
  -[CKRichLinkReplyPreviewBalloonView prepareForReuse]
  -[CKRichLinkReplyPreviewBalloonView configureForTranscriptPlugin:]
  -[CKRichLinkReplyPreviewBalloonView initWithFrame:]
  -[CKRichLinkReplyPreviewBalloonView setLinkView:]
  -[CKRichLinkReplyPreviewBalloonView linkMetadata]
  -[CKRichLinkReplyPreviewBalloonView setLinkMetadata:]
  -[CKRichLinkReplyPreviewBalloonView sizeThatFits:textAlignmentInsets:]


CKTranscriptPhotoStackCell : CKTranscriptBalloonCell
 @property  UIPinchGestureRecognizer *pinchGestureRecognizer
 @property  <CKTranscriptPhotoStackCellDelegate> *delegate

  // instance methods
  -[CKTranscriptPhotoStackCell hitTest:withEvent:]
  -[CKTranscriptPhotoStackCell pinchGestureRecognizer]
  -[CKTranscriptPhotoStackCell photoStackBalloonView]
  -[CKTranscriptPhotoStackCell handlePinchGesture:]
  -[CKTranscriptPhotoStackCell .cxx_destruct]
  -[CKTranscriptPhotoStackCell layoutSubviews]
  -[CKTranscriptPhotoStackCell setDelegate:]
  -[CKTranscriptPhotoStackCell setWantsContactImageLayout:]
  -[CKTranscriptPhotoStackCell delegate]
  -[CKTranscriptPhotoStackCell setPinchGestureRecognizer:]
  -[CKTranscriptPhotoStackCell layoutSubviewsForAlignmentContents]


CKNotifyAnywayChatItem : CKChatItem
  // instance methods
  -[CKNotifyAnywayChatItem layoutType]
  -[CKNotifyAnywayChatItem transcriptOrientation]
  -[CKNotifyAnywayChatItem displayDuringSend]
  -[CKNotifyAnywayChatItem contentInsets]
  -[CKNotifyAnywayChatItem notifyAnywayChatItem]
  -[CKNotifyAnywayChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKNotifyAnywayChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKNotifyAnywayChatItem loadTranscriptText]
  -[CKNotifyAnywayChatItem cellClass]


CKAggregateAcknowledgmentTranscriptCell : CKAssociatedMessageTranscriptCell
 @property  CKAcknowledgmentBalloonView *balloonView
 @property  BOOL parentMessageIsFromMe

  // instance methods
  -[CKAggregateAcknowledgmentTranscriptCell parentMessageIsFromMe]
  -[CKAggregateAcknowledgmentTranscriptCell setParentMessageIsFromMe:]
  -[CKAggregateAcknowledgmentTranscriptCell balloonView]
  -[CKAggregateAcknowledgmentTranscriptCell prepareForReuse]
  -[CKAggregateAcknowledgmentTranscriptCell setBalloonView:]
  -[CKAggregateAcknowledgmentTranscriptCell configureForChatItem:context:]
  -[CKAggregateAcknowledgmentTranscriptCell performInsertion:]
  -[CKAggregateAcknowledgmentTranscriptCell layoutSubviewsForAlignmentContents]


CKPaddleOverlayView : UIView
 @property  <CKPaddleOverlayViewDelegate> *delegate
 @property  UIView *contentView
 @property  UIImageView *shadowView
 @property  UIVisualEffectView *visualEffectView
 @property  UIView *darkOuterGlowView
 @property  UIView *innerGlowView
 @property  UIView *paddleView
 @property  UIView *viewToShow
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} overlayRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} anchorRect

  // instance methods
  -[CKPaddleOverlayView setVisualEffectView:]
  -[CKPaddleOverlayView traitCollectionDidChange:]
  -[CKPaddleOverlayView initWithOverlayView:atAnchorRect:inView:delegate:]
  -[CKPaddleOverlayView overlayRect]
  -[CKPaddleOverlayView drawMacPaddle]
  -[CKPaddleOverlayView setAnchorRect:]
  -[CKPaddleOverlayView .cxx_destruct]
  -[CKPaddleOverlayView updateShadowVisualStyling]
  -[CKPaddleOverlayView darkOuterGlowView]
  -[CKPaddleOverlayView innerGlowView]
  -[CKPaddleOverlayView setDarkOuterGlowView:]
  -[CKPaddleOverlayView setInnerGlowView:]
  -[CKPaddleOverlayView setPaddleView:]
  -[CKPaddleOverlayView setViewToShow:]
  -[CKPaddleOverlayView setOverlayRect:]
  -[CKPaddleOverlayView showPaddleAnimated:completion:]
  -[CKPaddleOverlayView contentView]
  -[CKPaddleOverlayView setDelegate:]
  -[CKPaddleOverlayView shadowView]
  -[CKPaddleOverlayView setShadowView:]
  -[CKPaddleOverlayView paddleView]
  -[CKPaddleOverlayView dismiss]
  -[CKPaddleOverlayView anchorRect]
  -[CKPaddleOverlayView viewToShow]
  -[CKPaddleOverlayView delegate]
  -[CKPaddleOverlayView setContentView:]
  -[CKPaddleOverlayView visualEffectView]
  -[CKPaddleOverlayView touchesEnded:withEvent:]


CKAppManagerViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, CKAppManagerAppTableViewCellDelegate, UISearchControllerDelegate, UISearchBarDelegate>
 @property  <CKAppManagerViewControllerDelegate> *delegate
 @property  NSArray *favoritePlugins
 @property  NSArray *plugins
 @property  UISearchController *searchController
 @property  CKAppSearchResultsTableViewController *searchResultsController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAppManagerViewController plugins]
  -[CKAppManagerViewController searchResultsController]
  -[CKAppManagerViewController tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:]
  -[CKAppManagerViewController searchBarCancelButtonClicked:]
  -[CKAppManagerViewController tableView:viewForHeaderInSection:]
  -[CKAppManagerViewController didDismissSearchController:]
  -[CKAppManagerViewController searchController]
  -[CKAppManagerViewController tableView:heightForHeaderInSection:]
  -[CKAppManagerViewController numberOfSectionsInTableView:]
  -[CKAppManagerViewController setEditing:animated:]
  -[CKAppManagerViewController setSearchController:]
  -[CKAppManagerViewController tableView:numberOfRowsInSection:]
  -[CKAppManagerViewController .cxx_destruct]
  -[CKAppManagerViewController updateEditDoneButton]
  -[CKAppManagerViewController tableView:didSelectRowAtIndexPath:]
  -[CKAppManagerViewController viewDidLoad]
  -[CKAppManagerViewController setSearchResultsController:]
  -[CKAppManagerViewController favoritePlugins]
  -[CKAppManagerViewController balloonPluginManager]
  -[CKAppManagerViewController allowEnablingDisabledApps]
  -[CKAppManagerViewController tableView:cellForRowAtIndexPath:]
  -[CKAppManagerViewController setFavoritePlugins:]
  -[CKAppManagerViewController reloadPluginsImmediately]
  -[CKAppManagerViewController togglePluginAtIndex:enabled:]
  -[CKAppManagerViewController setDelegate:]
  -[CKAppManagerViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[CKAppManagerViewController tableView:shouldIndentWhileEditingRowAtIndexPath:]
  -[CKAppManagerViewController appCell:wasToggledOn:]
  -[CKAppManagerViewController tableView:moveRowAtIndexPath:toIndexPath:]
  -[CKAppManagerViewController searchBarSearchButtonClicked:]
  -[CKAppManagerViewController searchBarTextDidEndEditing:]
  -[CKAppManagerViewController viewDidLayoutSubviews]
  -[CKAppManagerViewController doneButtonTapped:]
  -[CKAppManagerViewController viewWillAppear:]
  -[CKAppManagerViewController tableView:canMoveRowAtIndexPath:]
  -[CKAppManagerViewController setPlugins:]
  -[CKAppManagerViewController delegate]
  -[CKAppManagerViewController tableView:editingStyleForRowAtIndexPath:]
  -[CKAppManagerViewController tableView:editActionsForRowAtIndexPath:]
  -[CKAppManagerViewController searchBar:textDidChange:]
  -[CKAppManagerViewController searchBarShouldBeginEditing:]
  -[CKAppManagerViewController viewDidDisappear:]


CKBrowserAppManagerViewController : CKBrowserViewController <UIPresentationControllerDelegatePrivate, UIViewControllerTransitioningDelegate, CKAppManagerViewControllerDelegate>
 @property  <CKBrowserAppManagerViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBrowserAppManagerViewController animationControllerForPresentedController:presentingController:sourceController:]
  -[CKBrowserAppManagerViewController animationControllerForDismissedController:]
  -[CKBrowserAppManagerViewController presentationControllerDidDismiss:]
  -[CKBrowserAppManagerViewController .cxx_destruct]
  -[CKBrowserAppManagerViewController appManagerViewControllerDidFinish:]
  -[CKBrowserAppManagerViewController viewDidLoad]
  -[CKBrowserAppManagerViewController appAllowedByScreenTimeWithBundleIdentifier:]
  -[CKBrowserAppManagerViewController delegate_BrowserAppManagerDidSelectPlugin:]
  -[CKBrowserAppManagerViewController isLoaded]
  -[CKBrowserAppManagerViewController setDelegate:]
  -[CKBrowserAppManagerViewController presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]
  -[CKBrowserAppManagerViewController viewWillAppear:]
  -[CKBrowserAppManagerViewController shouldShowChatChrome]
  -[CKBrowserAppManagerViewController dismiss]
  -[CKBrowserAppManagerViewController parentTransitioningDelegate]
  -[CKBrowserAppManagerViewController delegate]
  -[CKBrowserAppManagerViewController isDismissing]
  -[CKBrowserAppManagerViewController isModalInPresentation]
  -[CKBrowserAppManagerViewController browserPresentationStyle]
  -[CKBrowserAppManagerViewController wantsDarkUI]
  -[CKBrowserAppManagerViewController wantsOpaqueUI]
  -[CKBrowserAppManagerViewController supportsQuickView]
  -[CKBrowserAppManagerViewController mayBeKeptInViewHierarchy]
  -[CKBrowserAppManagerViewController parentModalPresentationStyle]
  -[CKBrowserAppManagerViewController browserAppManagerDidSelectPlugin:]


CKSpotlightSearchResult : NSObject
 @property  NSString *chatGUID
 @property  NSString *messageGUID
 @property  NSString *summary
 @property  NSDate *messageDate

  // instance methods
  -[CKSpotlightSearchResult setSummary:]
  -[CKSpotlightSearchResult summary]
  -[CKSpotlightSearchResult chatGUID]
  -[CKSpotlightSearchResult setChatGUID:]
  -[CKSpotlightSearchResult .cxx_destruct]
  -[CKSpotlightSearchResult messageGUID]
  -[CKSpotlightSearchResult setMessageGUID:]
  -[CKSpotlightSearchResult setMessageDate:]
  -[CKSpotlightSearchResult initWithMessageGUID:chatGUID:messageTime:summery:]
  -[CKSpotlightSearchResult compare:]
  -[CKSpotlightSearchResult messageDate]


CKSpotlightQuery : NSObject <MDSearchQueryDelegate>
 @property  IMChatRegistry *chatRegisteryOverride
 @property  MDSearchQuery *currentQuery
 @property  @? completion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKSpotlightQuery _cleanup]
  -[CKSpotlightQuery completion]
  -[CKSpotlightQuery setCompletion:]
  -[CKSpotlightQuery currentQuery]
  -[CKSpotlightQuery searchQuery:didReturnItems:]
  -[CKSpotlightQuery searchQuery:statusChanged:]
  -[CKSpotlightQuery searchQuery:didFailWithError:]
  -[CKSpotlightQuery .cxx_destruct]
  -[CKSpotlightQuery _callCompletion]
  -[CKSpotlightQuery _processSearchResults]
  -[CKSpotlightQuery initWithSearchText:completionBlock:startQuery:]
  -[CKSpotlightQuery setChatRegisteryOverride:]
  -[CKSpotlightQuery initWithSearchText:chatRegistryOverride:startQuery:completionBlock:]
  -[CKSpotlightQuery chatRegisteryOverride]
  -[CKSpotlightQuery initWithSearchText:completionBlock:]
  -[CKSpotlightQuery chatRegistry]
  -[CKSpotlightQuery cancel]
  -[CKSpotlightQuery dealloc]


CKBlackholeConversationListCommonViewController : UITableViewController <UITableViewDelegate>
 @property  _UITableViewDiffableDataSource *tableViewDataSource
 @property  UIBarButtonItem *clearAllButton
 @property  UILabel *emptyConversationListLabel
 @property  CKScheduledUpdater *updater
 @property  NSArray *visibleConversations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBlackholeConversationListCommonViewController viewSafeAreaInsetsDidChange]
  -[CKBlackholeConversationListCommonViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[CKBlackholeConversationListCommonViewController suspend]
  -[CKBlackholeConversationListCommonViewController _conversations]
  -[CKBlackholeConversationListCommonViewController traitCollectionDidChange:]
  -[CKBlackholeConversationListCommonViewController updater]
  -[CKBlackholeConversationListCommonViewController didLock]
  -[CKBlackholeConversationListCommonViewController didWake]
  -[CKBlackholeConversationListCommonViewController tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:]
  -[CKBlackholeConversationListCommonViewController _conversationList]
  -[CKBlackholeConversationListCommonViewController .cxx_destruct]
  -[CKBlackholeConversationListCommonViewController tableView:didSelectRowAtIndexPath:]
  -[CKBlackholeConversationListCommonViewController viewDidLoad]
  -[CKBlackholeConversationListCommonViewController _updateConversationList]
  -[CKBlackholeConversationListCommonViewController clearAllButton]
  -[CKBlackholeConversationListCommonViewController setTableViewDataSource:]
  -[CKBlackholeConversationListCommonViewController visibleConversations]
  -[CKBlackholeConversationListCommonViewController _clearAllTapped]
  -[CKBlackholeConversationListCommonViewController _deleteConversation:]
  -[CKBlackholeConversationListCommonViewController _alertTitleForClearAll]
  -[CKBlackholeConversationListCommonViewController popViewControllerIfNecessary]
  -[CKBlackholeConversationListCommonViewController _clearAllTappedWithCompletionHandler:]
  -[CKBlackholeConversationListCommonViewController _batchDeleteConversationWithCompletionHandler:]
  -[CKBlackholeConversationListCommonViewController setVisibleConversations:]
  -[CKBlackholeConversationListCommonViewController tableViewDataSource]
  -[CKBlackholeConversationListCommonViewController _updateConversationListEmptyLabel]
  -[CKBlackholeConversationListCommonViewController emptyConversationListLabel]
  -[CKBlackholeConversationListCommonViewController setClearAllButton:]
  -[CKBlackholeConversationListCommonViewController setEmptyConversationListLabel:]
  -[CKBlackholeConversationListCommonViewController sizeForChildContentContainer:withParentContainerSize:]
  -[CKBlackholeConversationListCommonViewController shouldUpdateFocusInContext:]
  -[CKBlackholeConversationListCommonViewController init]
  -[CKBlackholeConversationListCommonViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[CKBlackholeConversationListCommonViewController willResignActive]
  -[CKBlackholeConversationListCommonViewController didUnlock]
  -[CKBlackholeConversationListCommonViewController endHoldingConversationListUpdatesForKey:]
  -[CKBlackholeConversationListCommonViewController updateFocusIfNeeded]
  -[CKBlackholeConversationListCommonViewController statusBarWillAnimateByHeight:]
  -[CKBlackholeConversationListCommonViewController systemLayoutFittingSizeDidChangeForChildContentContainer:]
  -[CKBlackholeConversationListCommonViewController tableView:willBeginEditingRowAtIndexPath:]
  -[CKBlackholeConversationListCommonViewController setNeedsFocusUpdate]
  -[CKBlackholeConversationListCommonViewController willBecomeActive]
  -[CKBlackholeConversationListCommonViewController viewWillDisappear:]
  -[CKBlackholeConversationListCommonViewController viewWillAppear:]
  -[CKBlackholeConversationListCommonViewController willUnlock]
  -[CKBlackholeConversationListCommonViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKBlackholeConversationListCommonViewController _confirmDeleteConversation:view:withCompletionHandler:]
  -[CKBlackholeConversationListCommonViewController _alertTitleForDelete]
  -[CKBlackholeConversationListCommonViewController _deleteConversation:withCompletionHandler:]
  -[CKBlackholeConversationListCommonViewController dealloc]
  -[CKBlackholeConversationListCommonViewController tableView:didEndEditingRowAtIndexPath:]
  -[CKBlackholeConversationListCommonViewController setUpdater:]
  -[CKBlackholeConversationListCommonViewController encodeWithCoder:]
  -[CKBlackholeConversationListCommonViewController didUpdateFocusInContext:withAnimationCoordinator:]


CKLocatingChatItem : CKBalloonChatItem
 @property  NSString *locationText

  // instance methods
  -[CKLocatingChatItem locationText]
  -[CKLocatingChatItem sender]
  -[CKLocatingChatItem balloonViewClass]
  -[CKLocatingChatItem configureBalloonView:]
  -[CKLocatingChatItem isFromMe]
  -[CKLocatingChatItem time]
  -[CKLocatingChatItem message]
  -[CKLocatingChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKLocatingChatItem failed]


CKConversationListAccessoryViewConfiguration : NSObject <NSCopying>
 @property  UIImage *image
 @property  UIColor *backgroundColor
 @property  UIColor *tintColor
 @property  UIBlurEffect *blurEffect
 @property  long long vibrancyStyle

  // instance methods
  -[CKConversationListAccessoryViewConfiguration tintColor]
  -[CKConversationListAccessoryViewConfiguration backgroundColor]
  -[CKConversationListAccessoryViewConfiguration image]
  -[CKConversationListAccessoryViewConfiguration .cxx_destruct]
  -[CKConversationListAccessoryViewConfiguration setVibrancyStyle:]
  -[CKConversationListAccessoryViewConfiguration setTintColor:]
  -[CKConversationListAccessoryViewConfiguration setBlurEffect:]
  -[CKConversationListAccessoryViewConfiguration vibrancyStyle]
  -[CKConversationListAccessoryViewConfiguration setBackgroundColor:]
  -[CKConversationListAccessoryViewConfiguration setImage:]
  -[CKConversationListAccessoryViewConfiguration blurEffect]
  -[CKConversationListAccessoryViewConfiguration copyWithZone:]


CKConversationListAccessoryView : UIControl
 @property  NSDictionary *configStateMap
 @property  BOOL needsVisualEffects
 @property  BOOL needsVibrancy
 @property  UIView *colorView
 @property  UIVisualEffectView *backgroundView
 @property  UIVisualEffectView *vibrancyView
 @property  UIImageView *imageView
 @property  NSNumber *lastKnownState
 @property  UIImageSymbolConfiguration *preferredSymbolConfiguration
 @property  BOOL imageNeedsEdgeAntiAliasing

  // class methods
  +[CKConversationListAccessoryView defaultStateConfigMap]
  +[CKConversationListAccessoryView defaultDiameter]

  // instance methods
  -[CKConversationListAccessoryView setHighlighted:]
  -[CKConversationListAccessoryView setImage:forState:]
  -[CKConversationListAccessoryView imageView]
  -[CKConversationListAccessoryView colorView]
  -[CKConversationListAccessoryView .cxx_destruct]
  -[CKConversationListAccessoryView preferredSymbolConfiguration]
  -[CKConversationListAccessoryView setPreferredSymbolConfiguration:]
  -[CKConversationListAccessoryView initWithDiameter:]
  -[CKConversationListAccessoryView setBlurEffect:withVibrancyEffectStyle:forState:]
  -[CKConversationListAccessoryView setTintColor:forState:]
  -[CKConversationListAccessoryView setBlurEffect:forState:]
  -[CKConversationListAccessoryView setImageNeedsEdgeAntiAliasing:]
  -[CKConversationListAccessoryView layoutSubviews]
  -[CKConversationListAccessoryView setColorView:]
  -[CKConversationListAccessoryView setConfigStateMap:]
  -[CKConversationListAccessoryView imageNeedsEdgeAntiAliasing]
  -[CKConversationListAccessoryView _setNeedsVisualAppearanceUpdate]
  -[CKConversationListAccessoryView _updateVisualAppearanceForCurrentStateIfNeeded]
  -[CKConversationListAccessoryView configStateMap]
  -[CKConversationListAccessoryView lastKnownState]
  -[CKConversationListAccessoryView setLastKnownState:]
  -[CKConversationListAccessoryView configForState:]
  -[CKConversationListAccessoryView needsVisualEffects]
  -[CKConversationListAccessoryView needsVibrancy]
  -[CKConversationListAccessoryView setNeedsVibrancy:]
  -[CKConversationListAccessoryView _setConfig:forState:]
  -[CKConversationListAccessoryView setNeedsVisualEffects:]
  -[CKConversationListAccessoryView setVibrancyEffectStyle:forState:]
  -[CKConversationListAccessoryView init]
  -[CKConversationListAccessoryView setSelected:]
  -[CKConversationListAccessoryView vibrancyView]
  -[CKConversationListAccessoryView initWithFrame:]
  -[CKConversationListAccessoryView pointInside:withEvent:]
  -[CKConversationListAccessoryView setBackgroundView:]
  -[CKConversationListAccessoryView setBackgroundColor:forState:]
  -[CKConversationListAccessoryView setVibrancyView:]
  -[CKConversationListAccessoryView setImageView:]
  -[CKConversationListAccessoryView setEnabled:]
  -[CKConversationListAccessoryView backgroundView]


CKMapBalloonView : CKTitledImageBalloonView
 @property  MKMarkerAnnotationView *annotationView

  // instance methods
  -[CKMapBalloonView .cxx_destruct]
  -[CKMapBalloonView layoutSubviews]
  -[CKMapBalloonView setAnnotationView:]
  -[CKMapBalloonView annotationView]
  -[CKMapBalloonView initWithFrame:]


CKAcknowledgmentVoteCountCollectionReusableView : UICollectionReusableView
 @property  UILabel *countLabel

  // class methods
  +[CKAcknowledgmentVoteCountCollectionReusableView supplementaryViewKind]
  +[CKAcknowledgmentVoteCountCollectionReusableView reuseIdentifier]

  // instance methods
  -[CKAcknowledgmentVoteCountCollectionReusableView configureWithAcknowledgmentTally:]
  -[CKAcknowledgmentVoteCountCollectionReusableView .cxx_destruct]
  -[CKAcknowledgmentVoteCountCollectionReusableView layoutSubviews]
  -[CKAcknowledgmentVoteCountCollectionReusableView setCountLabel:]
  -[CKAcknowledgmentVoteCountCollectionReusableView countLabel]
  -[CKAcknowledgmentVoteCountCollectionReusableView initWithFrame:]


CKTextBalloonView : CKColoredBalloonView <CKBalloonTextViewInteractionDelegate, UITextViewDelegate, CKBalloonVibrancy>
 @property  CKBalloonTextView *textView
 @property  BOOL ignoreSelectionEvent
 @property  NSAttributedString *attributedText
 @property  BOOL containsExcessiveLineHeightCharacters
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKTextBalloonView clearFilters]
  -[CKTextBalloonView setAttributedText:]
  -[CKTextBalloonView textView]
  -[CKTextBalloonView attributedText]
  -[CKTextBalloonView truncateForLargeText]
  -[CKTextBalloonView prepareForDisplay]
  -[CKTextBalloonView containsExcessiveLineHeightCharacters]
  -[CKTextBalloonView setContainsExcessiveLineHeightCharacters:]
  -[CKTextBalloonView .cxx_destruct]
  -[CKTextBalloonView layoutSubviews]
  -[CKTextBalloonView updateTextSelectionState:forTextSelectionArea:]
  -[CKTextBalloonView configureForComposition:]
  -[CKTextBalloonView targetTextContainerInsets]
  -[CKTextBalloonView sizeThatFits:textAlignmentInsets:isSingleLine:]
  -[CKTextBalloonView ignoreSelectionEvent]
  -[CKTextBalloonView setIgnoreSelectionEvent:]
  -[CKTextBalloonView interactionStartedLongPressInTextView:]
  -[CKTextBalloonView interactionStartedFromPreviewItemControllerInTextView:]
  -[CKTextBalloonView interactionStoppedFromPreviewItemControllerInTextView:]
  -[CKTextBalloonView textViewWidthForWidth:]
  -[CKTextBalloonView interactionStartedTapInTextView:withModifierFlags:selectedText:]
  -[CKTextBalloonView interactionTextViewShouldCopyToPasteboard:]
  -[CKTextBalloonView restoreFromLargeTextTruncation]
  -[CKTextBalloonView interactionTextView:userDidDragOutsideViewWithPoint:]
  -[CKTextBalloonView prepareForReuse]
  -[CKTextBalloonView isSelected]
  -[CKTextBalloonView setTextView:]
  -[CKTextBalloonView configureForMessagePart:]
  -[CKTextBalloonView addFilter:]
  -[CKTextBalloonView initWithFrame:]
  -[CKTextBalloonView invisibleInkEffectViewClass]
  -[CKTextBalloonView invisibleInkEffectViewWasUncovered]
  -[CKTextBalloonView attachInvisibleInkEffectView]
  -[CKTextBalloonView detachInvisibleInkEffectView]
  -[CKTextBalloonView cullSubviewsWithVisibleBounds:]
  -[CKTextBalloonView tapGestureRecognized:]
  -[CKTextBalloonView sizeThatFits:textAlignmentInsets:]
  -[CKTextBalloonView nonVibrantSubViews]
  -[CKTextBalloonView vibrantContainerWillReparentNonVibrantSubviews:]
  -[CKTextBalloonView alignmentRectInsets]
  -[CKTextBalloonView setSelected:withSelectionState:]
  -[CKTextBalloonView addOverlaySubview:]
  -[CKTextBalloonView updateRasterizationForInvisibleInkEffect]
  -[CKTextBalloonView textViewDidChangeSelection:]


CKTypingChatItem : CKChatItem
 @property  BOOL fromMe
 @property  CALayer<IMTypingIndicatorLayerProtocol> *indicatorLayer

  // instance methods
  -[CKTypingChatItem layoutType]
  -[CKTypingChatItem transcriptOrientation]
  -[CKTypingChatItem displayDuringSend]
  -[CKTypingChatItem contentInsets]
  -[CKTypingChatItem wantsDrawerLayout]
  -[CKTypingChatItem isFromMe]
  -[CKTypingChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKTypingChatItem indicatorLayer]
  -[CKTypingChatItem cellClass]


CKTextReplyPreviewBalloonView : CKTextBalloonView
 @property  BOOL shouldUseFilledBalloonStyle
 @property  BOOL isFromMe

  // instance methods
  -[CKTextReplyPreviewBalloonView clearFilters]
  -[CKTextReplyPreviewBalloonView layoutSubviews]
  -[CKTextReplyPreviewBalloonView targetTextContainerInsets]
  -[CKTextReplyPreviewBalloonView sizeThatFits:textAlignmentInsets:isSingleLine:]
  -[CKTextReplyPreviewBalloonView shouldUseFilledBalloonStyle]
  -[CKTextReplyPreviewBalloonView setShouldUseFilledBalloonStyle:]
  -[CKTextReplyPreviewBalloonView setIsFromMe:]
  -[CKTextReplyPreviewBalloonView isFromMe]
  -[CKTextReplyPreviewBalloonView prepareForReuse]
  -[CKTextReplyPreviewBalloonView configureForMessagePart:]
  -[CKTextReplyPreviewBalloonView addFilter:]
  -[CKTextReplyPreviewBalloonView initWithFrame:]
  -[CKTextReplyPreviewBalloonView hasBackground]
  -[CKTextReplyPreviewBalloonView balloonDescriptor]
  -[CKTextReplyPreviewBalloonView alignmentRectInsets]


CKDetailsAddMemberLargeTextCell : CKDetailsAddMemberCell
 @property  UILayoutGuide *leadingGuide

  // class methods
  +[CKDetailsAddMemberLargeTextCell preferredHeight]

  // instance methods
  -[CKDetailsAddMemberLargeTextCell .cxx_destruct]
  -[CKDetailsAddMemberLargeTextCell _initConstraints]
  -[CKDetailsAddMemberLargeTextCell leadingGuide]
  -[CKDetailsAddMemberLargeTextCell _initLabel]
  -[CKDetailsAddMemberLargeTextCell setLeadingGuide:]
  -[CKDetailsAddMemberLargeTextCell sizeThatFits:]
  -[CKDetailsAddMemberLargeTextCell initWithStyle:reuseIdentifier:]


CKPinnedSectionSeparatorView : UICollectionReusableView
  // class methods
  +[CKPinnedSectionSeparatorView padding]
  +[CKPinnedSectionSeparatorView heightWithPadding]
  +[CKPinnedSectionSeparatorView reuseIdentifier]

  // instance methods
  -[CKPinnedSectionSeparatorView initWithFrame:]


CKBrowserSwitcherCell : UIView
 @property  UIView *browserSnapshotView
 @property  UIView *extensionInterruptedView
 @property  IMBalloonPlugin *plugin
 @property  CKSnapshotCacheKey *snapshotCacheKey
 @property  BOOL usingFallbackSnapshot

  // instance methods
  -[CKBrowserSwitcherCell .cxx_destruct]
  -[CKBrowserSwitcherCell balloonPluginManager]
  -[CKBrowserSwitcherCell layoutSubviews]
  -[CKBrowserSwitcherCell _handleBrowserSnapshotDidChange:]
  -[CKBrowserSwitcherCell setSnapshotCacheKey:]
  -[CKBrowserSwitcherCell _updateSnapshotView]
  -[CKBrowserSwitcherCell snapshotCacheKey]
  -[CKBrowserSwitcherCell extensionInterruptedView]
  -[CKBrowserSwitcherCell browserSnapshotView]
  -[CKBrowserSwitcherCell setBrowserSnapshotView:]
  -[CKBrowserSwitcherCell setExtensionInterruptedView:]
  -[CKBrowserSwitcherCell setUsingFallbackSnapshot:]
  -[CKBrowserSwitcherCell isUsingFallbackSnapshot]
  -[CKBrowserSwitcherCell setPlugin:withSnapshotCacheKey:]
  -[CKBrowserSwitcherCell showExtensionInterruptedViewWithDisplayName:]
  -[CKBrowserSwitcherCell initWithFrame:]
  -[CKBrowserSwitcherCell plugin]
  -[CKBrowserSwitcherCell dealloc]
  -[CKBrowserSwitcherCell setPlugin:]


CKEffectPickerLargeTextView : CKEffectPickerView
 @property  BOOL finishedInitializing

  // instance methods
  -[CKEffectPickerLargeTextView initWithFrame:sendButtonFrame:balloonViewOrigin:composition:color:]
  -[CKEffectPickerLargeTextView addEffect:withDescriptiveText:withIdentifier:]
  -[CKEffectPickerLargeTextView cancelImpactSelection]
  -[CKEffectPickerLargeTextView _touchUpInsideDotButton:]
  -[CKEffectPickerLargeTextView finishedInitializing]
  -[CKEffectPickerLargeTextView effectTypeDidChange:]
  -[CKEffectPickerLargeTextView shouldAnimatePreviousLabelForCancel:]
  -[CKEffectPickerLargeTextView setFinishedInitializing:]
  -[CKEffectPickerLargeTextView setCloseButtonYPosition:]
  -[CKEffectPickerLargeTextView activateTextSizeDependentConstraintsForSendButtonFrame:]
  -[CKEffectPickerLargeTextView marginBetweenPickerDotButtons]
  -[CKEffectPickerLargeTextView _updateBalloonViewOrigin:forButtonFrame:]
  -[CKEffectPickerLargeTextView _updateRoundedContainerView]
  -[CKEffectPickerLargeTextView offsetYForLabelAtIndex:withInitialY:]


CKImmediatePanGestureRecognizer : UIPanGestureRecognizer
  // instance methods
  -[CKImmediatePanGestureRecognizer touchesBegan:withEvent:]
  -[CKImmediatePanGestureRecognizer finishCurrentInteraction]


CKTextTighteningLabel : UILabel
 @property  NSAttributedString *tightenedAttributedText
 @property  double tightenedAttributedTextBoundsWidth
 @property  NSAttributedString *untightenedAttributedText
 @property  double untightenedAttributedTextBoundsWidth
 @property  NSString *managedText

  // class methods
  +[CKTextTighteningLabel applyKerning:whitespaceKerning:toAttributedString:]
  +[CKTextTighteningLabel _attributedStringWithText:font:sizeCategory:textRect:forFittingSize:]
  +[CKTextTighteningLabel attributedText:fitsInRect:]

  // instance methods
  -[CKTextTighteningLabel traitCollectionDidChange:]
  -[CKTextTighteningLabel setFont:]
  -[CKTextTighteningLabel .cxx_destruct]
  -[CKTextTighteningLabel layoutSubviews]
  -[CKTextTighteningLabel sizeThatFits:]
  -[CKTextTighteningLabel setManagedText:]
  -[CKTextTighteningLabel _updateTightenedAttributedText]
  -[CKTextTighteningLabel _clearTextTighteningCaches]
  -[CKTextTighteningLabel _updateAttributedTextForFittingSize:boundsSize:]
  -[CKTextTighteningLabel _attributedTextForFittingSize:boundsSize:]
  -[CKTextTighteningLabel tightenedAttributedText]
  -[CKTextTighteningLabel setTightenedAttributedText:]
  -[CKTextTighteningLabel tightenedAttributedTextBoundsWidth]
  -[CKTextTighteningLabel setTightenedAttributedTextBoundsWidth:]
  -[CKTextTighteningLabel untightenedAttributedText]
  -[CKTextTighteningLabel setUntightenedAttributedText:]
  -[CKTextTighteningLabel untightenedAttributedTextBoundsWidth]
  -[CKTextTighteningLabel setUntightenedAttributedTextBoundsWidth:]
  -[CKTextTighteningLabel managedText]


CKParticipantsTrie : NSObject
 @property  NSString *key
 @property  NSMutableArray *entities
 @property  NSMutableArray *children

  // instance methods
  -[CKParticipantsTrie hasPrefix:]
  -[CKParticipantsTrie setChildren:]
  -[CKParticipantsTrie entities]
  -[CKParticipantsTrie setKey:]
  -[CKParticipantsTrie children]
  -[CKParticipantsTrie .cxx_destruct]
  -[CKParticipantsTrie init]
  -[CKParticipantsTrie _lastNodeForString:]
  -[CKParticipantsTrie entitiesForPrefix:]
  -[CKParticipantsTrie _composedCharactersForString:appendRootKey:]
  -[CKParticipantsTrie _addEntity:named:forCharacters:]
  -[CKParticipantsTrie loadHandleEntityFromLastNode:intoResult:]
  -[CKParticipantsTrie addParticipantName:entity:]
  -[CKParticipantsTrie rawHandlesForParticipantName:]
  -[CKParticipantsTrie _trieContainsEntity:]
  -[CKParticipantsTrie initWithKey:]
  -[CKParticipantsTrie key]
  -[CKParticipantsTrie setEntities:]


CKMacToolbarController : UIViewController <CKMacToolbarViewDelegate>
 @property  UIWindowScene *windowScene
 @property  BOOL isInStandaloneWindow
 @property  NSMutableDictionary *toolbarItemCache
 @property  UIVisualEffectView *primaryVirtualBackgroundView
 @property  UIVisualEffectView *secondaryVirtualBackgroundView
 @property  double preferredPrimaryHeight
 @property  double preferredSecondaryHeight
 @property  UIView *primaryProvidedVirtualView
 @property  UIView *secondaryProvidedVirtualView
 @property  NSString *sceneSessionIdentifier
 @property  <CKMacToolbarItemProvider> *primaryItemProvider
 @property  <CKMacToolbarItemProvider> *secondaryItemProvider
 @property  double splitViewDividerXPosition
 @property  BOOL shouldDrawPrimaryBlur
 @property  BOOL shouldDrawSecondaryBlur
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKMacToolbarController primaryItemIdentifiersFullWindow]
  +[CKMacToolbarController primaryItemIdentifiersStandaloneWindow]
  +[CKMacToolbarController defaultSecondaryItemIdentifiers]

  // instance methods
  -[CKMacToolbarController initWithScene:connectingToSession:inStandaloneWindow:]
  -[CKMacToolbarController viewWillLayoutSubviews]
  -[CKMacToolbarController .cxx_destruct]
  -[CKMacToolbarController windowScene]
  -[CKMacToolbarController updateWithFrame:]
  -[CKMacToolbarController reloadToolbarItems]
  -[CKMacToolbarController updateVirtualViewForProvider:]
  -[CKMacToolbarController setShouldDrawSecondaryBlur:]
  -[CKMacToolbarController toolbarItemCache]
  -[CKMacToolbarController _updateBackgroundViewsRefreshingViewHeights:]
  -[CKMacToolbarController _updateVirtualViewForProviderType:]
  -[CKMacToolbarController _providerForType:]
  -[CKMacToolbarController _updateFrameWithPreferredHeightsForFrame:]
  -[CKMacToolbarController preferredPrimaryHeight]
  -[CKMacToolbarController preferredSecondaryHeight]
  -[CKMacToolbarController isInStandaloneWindow]
  -[CKMacToolbarController splitViewDividerXPosition]
  -[CKMacToolbarController shouldDrawPrimaryBlur]
  -[CKMacToolbarController shouldDrawSecondaryBlur]
  -[CKMacToolbarController _getPreferredHeightForProviderType:withDefaultHeight:]
  -[CKMacToolbarController setPreferredPrimaryHeight:]
  -[CKMacToolbarController setPreferredSecondaryHeight:]
  -[CKMacToolbarController _sizeMetricsDidChange]
  -[CKMacToolbarController primaryItemProvider]
  -[CKMacToolbarController secondaryItemProvider]
  -[CKMacToolbarController primaryProvidedVirtualView]
  -[CKMacToolbarController reparentToolbarItemsForProvider:]
  -[CKMacToolbarController secondaryProvidedVirtualView]
  -[CKMacToolbarController _cachedVirtualViewForProviderType:]
  -[CKMacToolbarController _setVirtualView:forProviderType:]
  -[CKMacToolbarController _virtualBackgroundViewForProviderType:]
  -[CKMacToolbarController primaryVirtualBackgroundView]
  -[CKMacToolbarController secondaryVirtualBackgroundView]
  -[CKMacToolbarController setPrimaryProvidedVirtualView:]
  -[CKMacToolbarController setSecondaryProvidedVirtualView:]
  -[CKMacToolbarController _providerTypeForPointInsideVirtualView:withEvent:]
  -[CKMacToolbarController _shouldDisAllowTouchesToPassForProviderType:]
  -[CKMacToolbarController removeToolbarItems]
  -[CKMacToolbarController setShouldDrawPrimaryBlur:]
  -[CKMacToolbarController macToolbarView:shouldAllowTouchesForPoint:andEvent:]
  -[CKMacToolbarController setSplitViewDividerXPosition:]
  -[CKMacToolbarController removeVirtualViewForProvider:]
  -[CKMacToolbarController _providerTypeForItemIdentifier:]
  -[CKMacToolbarController alignmentRectForItemWithIdentifier:]
  -[CKMacToolbarController sceneSessionIdentifier]
  -[CKMacToolbarController setIsInStandaloneWindow:]
  -[CKMacToolbarController setToolbarItemCache:]
  -[CKMacToolbarController __im_ff_isExpanseEnabled]
  -[CKMacToolbarController removeItemProviders]
  -[CKMacToolbarController setPrimaryItemProvider:]
  -[CKMacToolbarController loadView]
  -[CKMacToolbarController setSecondaryItemProvider:]
  -[CKMacToolbarController removeItemProvider:]


CKInvisibleInkGestureRecognizer : UIGestureRecognizer
 @property  UITouch *firstTouch
 @property  {CGPoint=dd} startLocation
 @property  double startTime

  // instance methods
  -[CKInvisibleInkGestureRecognizer shouldBeRequiredToFailByGestureRecognizer:]
  -[CKInvisibleInkGestureRecognizer setStartTime:]
  -[CKInvisibleInkGestureRecognizer canBePreventedByGestureRecognizer:]
  -[CKInvisibleInkGestureRecognizer .cxx_destruct]
  -[CKInvisibleInkGestureRecognizer touchesBegan:withEvent:]
  -[CKInvisibleInkGestureRecognizer touchesMoved:withEvent:]
  -[CKInvisibleInkGestureRecognizer startLocation]
  -[CKInvisibleInkGestureRecognizer setStartLocation:]
  -[CKInvisibleInkGestureRecognizer reset]
  -[CKInvisibleInkGestureRecognizer startTime]
  -[CKInvisibleInkGestureRecognizer canPreventGestureRecognizer:]
  -[CKInvisibleInkGestureRecognizer touchesCancelled:withEvent:]
  -[CKInvisibleInkGestureRecognizer setFirstTouch:]
  -[CKInvisibleInkGestureRecognizer _hasActiveTouchesInEvent:]
  -[CKInvisibleInkGestureRecognizer firstTouch]
  -[CKInvisibleInkGestureRecognizer touchesEnded:withEvent:]
  -[CKInvisibleInkGestureRecognizer shouldRequireFailureOfGestureRecognizer:]


CKComposeNavbarCanvasViewController : UIViewController <CKNavigationBarCanvasViewDelegate>
 @property  UIButton *cancelButton
 @property  UILabel *titleLabel
 @property  CKNavigationBarCanvasView *canvasView
 @property  <CKNavbarCanvasViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKComposeNavbarCanvasViewController titleLabel]
  -[CKComposeNavbarCanvasViewController canvasView]
  -[CKComposeNavbarCanvasViewController cancelButton]
  -[CKComposeNavbarCanvasViewController .cxx_destruct]
  -[CKComposeNavbarCanvasViewController setCancelButton:]
  -[CKComposeNavbarCanvasViewController viewDidLoad]
  -[CKComposeNavbarCanvasViewController _windowTraitCollection]
  -[CKComposeNavbarCanvasViewController setTitleLabel:]
  -[CKComposeNavbarCanvasViewController _preferredHeightForTraitCollection:]
  -[CKComposeNavbarCanvasViewController _initializeForTraitCollection:]
  -[CKComposeNavbarCanvasViewController shouldShowAvatarView]
  -[CKComposeNavbarCanvasViewController setDelegate:]
  -[CKComposeNavbarCanvasViewController systemMinimumLayoutMarginsForView:]
  -[CKComposeNavbarCanvasViewController updateContentsForConversation:]
  -[CKComposeNavbarCanvasViewController updateTitle:animated:]
  -[CKComposeNavbarCanvasViewController _setupDefaultCanvasView]
  -[CKComposeNavbarCanvasViewController delegate]
  -[CKComposeNavbarCanvasViewController setCanvasView:]
  -[CKComposeNavbarCanvasViewController loadView]
  -[CKComposeNavbarCanvasViewController __im_ff_uiConsistencyEnabled]
  -[CKComposeNavbarCanvasViewController _canShowWhileLocked]


CKComposeNavbarBusinessCanvasViewController : CKComposeNavbarCanvasViewController <CKAvatarPickerViewControllerDelegate>
 @property  CKLabel *defaultLabel
 @property  CKAvatarPickerViewController *avatarController
 @property  CKConversation *cachedConversation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKComposeNavbarBusinessCanvasViewController traitCollectionDidChange:]
  -[CKComposeNavbarBusinessCanvasViewController defaultLabel]
  -[CKComposeNavbarBusinessCanvasViewController .cxx_destruct]
  -[CKComposeNavbarBusinessCanvasViewController viewDidLoad]
  -[CKComposeNavbarBusinessCanvasViewController _titleItemViewForTraitCollection:]
  -[CKComposeNavbarBusinessCanvasViewController setDefaultLabel:]
  -[CKComposeNavbarBusinessCanvasViewController updateContentsForConversation:]
  -[CKComposeNavbarBusinessCanvasViewController tappedAvatarPickerViewController]
  -[CKComposeNavbarBusinessCanvasViewController navBarContext]
  -[CKComposeNavbarBusinessCanvasViewController _handleAddressBookPartialChange:]
  -[CKComposeNavbarBusinessCanvasViewController avatarController]
  -[CKComposeNavbarBusinessCanvasViewController viewDidLayoutSubviews]
  -[CKComposeNavbarBusinessCanvasViewController setAvatarController:]
  -[CKComposeNavbarBusinessCanvasViewController _updateBrandingForConversation:]
  -[CKComposeNavbarBusinessCanvasViewController setCachedConversation:]
  -[CKComposeNavbarBusinessCanvasViewController _updateDefaultLabelForConversation:]
  -[CKComposeNavbarBusinessCanvasViewController cachedConversation]
  -[CKComposeNavbarBusinessCanvasViewController _updateTitleForConversation:animated:]
  -[CKComposeNavbarBusinessCanvasViewController hideChevron]
  -[CKComposeNavbarBusinessCanvasViewController _canShowAvatarView]


CKRecentsViewController : CKBrowserViewController <MSStickerBrowserViewDataSource, _MSStickerSendManagerDelegate, CKBrowserDragControllerDelegate>
 @property  BOOL hasHandwritingRecents
 @property  BOOL hasStickerRecents
 @property  NSMutableArray *recentItems
 @property  MSStickerBrowserView *browserView
 @property  UILabel *noRecentsLabel
 @property  NSMutableDictionary *stickerCache
 @property  BOOL isLoadingRecents
 @property  BOOL preparingForDisplay
 @property  @? draggingCompletionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKRecentsViewController traitCollectionDidChange:]
  -[CKRecentsViewController didTransitionFromOrientation:toOrientation:]
  -[CKRecentsViewController prepareForDisplay]
  -[CKRecentsViewController .cxx_destruct]
  -[CKRecentsViewController dragManager:canScaleItem:]
  -[CKRecentsViewController dragManager:canRotateItem:]
  -[CKRecentsViewController dragManager:canPeelItem:]
  -[CKRecentsViewController dragManager:didEndDraggingItem:toDragTarget:dropArea:]
  -[CKRecentsViewController dragManager:didDragItem:toDragTarget:]
  -[CKRecentsViewController dragManager:shouldCancelDraggingForItem:toDragTarget:dropArea:]
  -[CKRecentsViewController forceTearDownRemoteView]
  -[CKRecentsViewController initWithBalloonPlugin:dataSource:]
  -[CKRecentsViewController loadRecents]
  -[CKRecentsViewController recentItems]
  -[CKRecentsViewController _setContentOverlayInsets:]
  -[CKRecentsViewController viewDidLayoutSubviews]
  -[CKRecentsViewController isLoadingRecents]
  -[CKRecentsViewController viewWillAppear:]
  -[CKRecentsViewController shouldShowChatChrome]
  -[CKRecentsViewController setRecentItems:]
  -[CKRecentsViewController recentsUpdated]
  -[CKRecentsViewController setIsLoadingRecents:]
  -[CKRecentsViewController resortAndReloadRecents]
  -[CKRecentsViewController setPreparingForDisplay:]
  -[CKRecentsViewController _loadRecentHandwritingsAndStickersWithCompletion:]
  -[CKRecentsViewController stickerCache]
  -[CKRecentsViewController setupNoRecentsLabel]
  -[CKRecentsViewController _postBrowserDidPrepareForDisplayNotificationIfNecessary]
  -[CKRecentsViewController isPreparingForDisplay]
  -[CKRecentsViewController setBrowserView:]
  -[CKRecentsViewController _stickerForMSSticker:]
  -[CKRecentsViewController setDraggingCompletionHandler:]
  -[CKRecentsViewController draggingCompletionHandler]
  -[CKRecentsViewController numberOfStickersInStickerBrowserView:]
  -[CKRecentsViewController stickerDragCanceled]
  -[CKRecentsViewController stickerBrowserView:stickerAtIndex:]
  -[CKRecentsViewController insertSticker:completionHandler:]
  -[CKRecentsViewController startDragSticker:frameInRemoteView:fence:completionHandler:]
  -[CKRecentsViewController hasStickerRecents]
  -[CKRecentsViewController stickerDragMoved:frameInRemoteView:rotation:scale:fence:completionHandler:]
  -[CKRecentsViewController stickerBrowserView:shouldDrawBorderAroundSticker:]
  -[CKRecentsViewController hasHandwritingRecents]
  -[CKRecentsViewController setHasHandwritingRecents:]
  -[CKRecentsViewController setHasStickerRecents:]
  -[CKRecentsViewController noRecentsLabel]
  -[CKRecentsViewController setNoRecentsLabel:]
  -[CKRecentsViewController setStickerCache:]
  -[CKRecentsViewController browserView]
  -[CKRecentsViewController mayBeKeptInViewHierarchy]
  -[CKRecentsViewController requestSnapshotDataForPersistance]
  -[CKRecentsViewController dealloc]
  -[CKRecentsViewController saveSnapshotForBrowserViewController]
  -[CKRecentsViewController loadView]
  -[CKRecentsViewController viewDidDisappear:]
  -[CKRecentsViewController _userInterfaceStyle]


CKCellData : NSObject
 @property  UIImage *image
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *identifer

  // instance methods
  -[CKCellData setTitle:]
  -[CKCellData image]
  -[CKCellData .cxx_destruct]
  -[CKCellData setSubtitle:]
  -[CKCellData identifer]
  -[CKCellData subtitle]
  -[CKCellData title]
  -[CKCellData setImage:]
  -[CKCellData initWithImage:withTitle:withSubtitle:]
  -[CKCellData initWithImage:withTitle:]
  -[CKCellData setIdentifer:]


CKAttachmentMessagePartChatItem : CKMessagePartChatItem
 @property  CKMediaObject *mediaObject
 @property  NSString *transferGUID
 @property  NSURL *momentShareURL

  // instance methods
  -[CKAttachmentMessagePartChatItem isSensitive]
  -[CKAttachmentMessagePartChatItem setMediaObject:]
  -[CKAttachmentMessagePartChatItem .cxx_destruct]
  -[CKAttachmentMessagePartChatItem transferGUID]
  -[CKAttachmentMessagePartChatItem mediaObject]
  -[CKAttachmentMessagePartChatItem canExport]
  -[CKAttachmentMessagePartChatItem initWithIMChatItem:maxWidth:]
  -[CKAttachmentMessagePartChatItem transcriptTraitCollection]
  -[CKAttachmentMessagePartChatItem balloonViewClass]
  -[CKAttachmentMessagePartChatItem canCopy]
  -[CKAttachmentMessagePartChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKAttachmentMessagePartChatItem _transcoderGeneratedSizeFittingSize:sizeExists:]
  -[CKAttachmentMessagePartChatItem fileURLForAttachment]
  -[CKAttachmentMessagePartChatItem dragItemProvider]
  -[CKAttachmentMessagePartChatItem canQuickSave]
  -[CKAttachmentMessagePartChatItem balloonCorners]
  -[CKAttachmentMessagePartChatItem cellClass]
  -[CKAttachmentMessagePartChatItem stickersSnapToPoint]
  -[CKAttachmentMessagePartChatItem momentShareURL]
  -[CKAttachmentMessagePartChatItem shouldCacheSize]
  -[CKAttachmentMessagePartChatItem canForward]
  -[CKAttachmentMessagePartChatItem __im_ff_commSafetyUIEnabled]
  -[CKAttachmentMessagePartChatItem rtfDocumentItemsWithFormatString:selectedTextRange:]
  -[CKAttachmentMessagePartChatItem setTranscriptTraitCollection:]
  -[CKAttachmentMessagePartChatItem compositionWithContext:]


CKTransientAttachmentMessagePartChatItem : CKAttachmentMessagePartChatItem
 @property  NSString *parentGUID
 @property  CKMediaObject *mediaObject

  // instance methods
  -[CKTransientAttachmentMessagePartChatItem IMChatItem]
  -[CKTransientAttachmentMessagePartChatItem .cxx_destruct]
  -[CKTransientAttachmentMessagePartChatItem initWithParentChatItem:]
  -[CKTransientAttachmentMessagePartChatItem setParentGUID:]
  -[CKTransientAttachmentMessagePartChatItem parentGUID]


CKSyndicationContentViewController : OBWelcomeController
 @property  CKSyndicationSharedWithYouViewController *sharedWithYouViewController
 @property  unsigned long onboardingPage
 @property  NSMutableArray *constraints
 @property  UIView *highlightsView1
 @property  UILabel *micropillView1
 @property  UIView *highlightsView2
 @property  UILabel *micropillView2
 @property  UIView *combinedHighlightsView
 @property  UIView *tvLinkBalloonView
 @property  UIView *podcastLinkBalloonView
 @property  UIView *musicLinkBalloonView
 @property  UIView *tvPinIconView
 @property  UIView *podcastPinIconView
 @property  UIView *gradientView
 @property  CAGradientLayer *gradientLayer
 @property  double photoShortSide
 @property  double photoLongSide
 @property  {CGSize=dd} maxContentSize

  // instance methods
  -[CKSyndicationContentViewController updateViewConstraints]
  -[CKSyndicationContentViewController traitCollectionDidChange:]
  -[CKSyndicationContentViewController constraints]
  -[CKSyndicationContentViewController gradientView]
  -[CKSyndicationContentViewController .cxx_destruct]
  -[CKSyndicationContentViewController setConstraints:]
  -[CKSyndicationContentViewController setGradientView:]
  -[CKSyndicationContentViewController viewDidLayoutSubviews]
  -[CKSyndicationContentViewController setGradientLayer:]
  -[CKSyndicationContentViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKSyndicationContentViewController setOnboardingPage:]
  -[CKSyndicationContentViewController onboardingPage]
  -[CKSyndicationContentViewController setUpSharedWithYouContentCollectionView]
  -[CKSyndicationContentViewController setUpPhotosContent]
  -[CKSyndicationContentViewController setUpHighlightsContent]
  -[CKSyndicationContentViewController updateMaxContentSize]
  -[CKSyndicationContentViewController micropillView1]
  -[CKSyndicationContentViewController tvPinIconView]
  -[CKSyndicationContentViewController micropillView2]
  -[CKSyndicationContentViewController podcastPinIconView]
  -[CKSyndicationContentViewController podcastLinkBalloonView]
  -[CKSyndicationContentViewController setMaxContentSize:]
  -[CKSyndicationContentViewController sharedWithYouViewController]
  -[CKSyndicationContentViewController maxContentSize]
  -[CKSyndicationContentViewController setPhotoLongSide:]
  -[CKSyndicationContentViewController setPhotoShortSide:]
  -[CKSyndicationContentViewController photoShortSide]
  -[CKSyndicationContentViewController highlightsView1]
  -[CKSyndicationContentViewController photoLongSide]
  -[CKSyndicationContentViewController highlightsView2]
  -[CKSyndicationContentViewController tvLinkBalloonView]
  -[CKSyndicationContentViewController musicLinkBalloonView]
  -[CKSyndicationContentViewController setHighlightsView1:]
  -[CKSyndicationContentViewController setSharedWithYouViewController:]
  -[CKSyndicationContentViewController setHighlightsView2:]
  -[CKSyndicationContentViewController _setUpPhotosMicropillForAvatarImage:forName:]
  -[CKSyndicationContentViewController setMicropillView1:]
  -[CKSyndicationContentViewController setMicropillView2:]
  -[CKSyndicationContentViewController setTvLinkBalloonView:]
  -[CKSyndicationContentViewController setPodcastLinkBalloonView:]
  -[CKSyndicationContentViewController setMusicLinkBalloonView:]
  -[CKSyndicationContentViewController setTvPinIconView:]
  -[CKSyndicationContentViewController setPodcastPinIconView:]
  -[CKSyndicationContentViewController initWithIndex:]
  -[CKSyndicationContentViewController combinedHighlightsView]
  -[CKSyndicationContentViewController setCombinedHighlightsView:]
  -[CKSyndicationContentViewController gradientLayer]
  -[CKSyndicationContentViewController getPinIcon]
  -[CKSyndicationContentViewController loadView]


UINavigationControllerAdaptivePresentationCollectionView : UINavigationController <CKAdaptivePresentedControllerProtocol>
 @property  BOOL wantsWindowedPresentation
 @property  BOOL preserveModalPresentationStyle
 @property  BOOL shouldHidePresentingWindow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UINavigationControllerAdaptivePresentationCollectionView wantsWindowedPresentation]
  -[UINavigationControllerAdaptivePresentationCollectionView setWantsWindowedPresentation:]
  -[UINavigationControllerAdaptivePresentationCollectionView preserveModalPresentationStyle]
  -[UINavigationControllerAdaptivePresentationCollectionView setPreserveModalPresentationStyle:]


CKConversationListCollectionViewController : UICollectionViewController <CKPinnedConversationViewDelegate, UICollectionViewDragDelegate, UICollectionViewDropDelegate, UICollectionViewDelegate_Private, UISearchControllerDelegate, UISearchBarDelegate, UIScrollViewDelegate, CKReasonTrackingUpdaterDelegate, UICollectionViewDelegate, CKCloudKitSyncProgressViewControllerDelegate, IMCloudKitEventHandler, CNContactViewControllerDelegate, CKConversationResultsControllerDelegate, CKContainerSearchControllerDelegate, TPKContentControllerDelegate, CNMeCardSharingSettingsViewControllerDelegate, CKOnboardingControllerDelegate, CKConversationListControllerProtocol, CKConversationListCollectionViewCellDelegate, CKConversationListEmbeddedCollectionViewCellDelegate, CKPinnedConversationCollectionViewCellDelegate, CKMacToolbarItemProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *lastSelectedConversationItemIdentifier
 @property  NSDate *lastUserSelectedConversationTime
 @property  NSString *lastUserSelectedConversationItemIdentifier
 @property  CKReasonTrackingUpdater *updater
 @property  UIView *noMessagesDialogView
 @property  UISearchController *searchController
 @property  CNContact *meContact
 @property  BOOL holdPinningUpdatesForConversationDeletion
 @property  BOOL keyboardIsShowing
 @property  CKSearchViewController *modernSearchResultsController
 @property  BOOL compositionWasSent
 @property  UIButton *macVirtualComposeButton
 @property  UIBarButtonItem *composeButtonItem
 @property  UIBarButtonItem *editButtonItem
 @property  UIBarButtonItem *optionsButtonItem
 @property  UIBarButtonItem *cancelButtonItem
 @property  UIBarButtonItem *doneButtonItem
 @property  UIBarButtonItem *selectAllButtonItem
 @property  CKCloudKitSyncProgressViewController *syncProgressViewController
 @property  BOOL completedDeferredSetup
 @property  BOOL isInitialAppearance
 @property  BOOL willRotate
 @property  CKConversation *conversationToUnpinPendingOrbDismissal
 @property  CKConversation *conversationToPinPendingOrbDismissal
 @property  CNContactStore *contactStore
 @property  CKOnboardingController *onboardingController
 @property  _PSMessagesPinningSuggester *pinnedConversationSuggester
 @property  BOOL macShouldShowZKWSearch
 @property  BOOL isBelowMacSnapToMinWidth
 @property  CKMacToolbarController *macToolbarController
 @property  CKMacToolbarItem *composeToolbarItem
 @property  NSObject<OS_dispatch_queue> *tipKitQueue
 @property  BOOL holdPinningUpdatesForOnboardingAnimation
 @property  BOOL hasActivePinnedConversationDropSession
 @property  BOOL nextPinnedConversationListUpdateShouldTriggerUnanimatedSnapshotUpdate
 @property  BOOL isShowingPinnedChatDropTarget
 @property  NSObject<OS_os_log> *conversationListCollectionViewControllerLogHandle
 @property  BOOL isShowingSwipeDeleteConfirmation
 @property  long long pinningInteractionMethod
 @property  BOOL isShowingPinningOnboarding
 @property  UICollectionViewDiffableDataSource *dataSource
 @property  BOOL shouldUseFastPreviewText
 @property  NSArray *frozenPinnedConversations
 @property  NSArray *frozenConversations
 @property  long long pinnedConversationViewLayoutStyle
 @property  BOOL haveAppliedInitialSnapshot
 @property  BOOL isApplyingSnapshot
 @property  BOOL isCommitingDiffableDataSourceTransaction
 @property  NSDictionary *blockedSnapshotInfo
 @property  NSMutableSet *itemIdentifiersForVisibleContextMenuInteractions
 @property  BOOL isCheckingIfPinningOnboardingNeeded
 @property  BOOL canShowSuggestedPinningOnboardingCell
 @property  BOOL isCurrentlyAnimatingPinningOnboardingSuggestions
 @property  NSArray *recommendedPinningConversations
 @property  BOOL shouldShowTipKitContent
 @property  TPKContentController *tipKitContentController
 @property  TPKContent *tipKitContent
 @property  NSCache *cacheForLastDisplayedActivitySnapshotByConversation
 @property  unsigned long editingMode
 @property  BOOL hidePinsForAnimation
 @property  CKPinnedConversationCollectionViewCell *prototypePinnedConversationCollectionViewCell
 @property  CKConversationListCollectionViewLayout *conversationLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *deferredSearchQuery
 @property  <CKConversationListControllerDelegate> *delegate
 @property  BOOL isVisible
 @property  BOOL isSearchActiveAndDisplayingResultsForSearchText
 @property  BOOL isSearchActive
 @property  unsigned long filterMode

  // class methods
  +[CKConversationListCollectionViewController conversationListCollectionViewControllerLogHandle]

  // instance methods
  -[CKConversationListCollectionViewController _contentSizeCategoryDidChange:]
  -[CKConversationListCollectionViewController collectionView:contextMenuConfigurationForItemAtIndexPath:point:]
  -[CKConversationListCollectionViewController __im_ff_chatCacheEnabled]
  -[CKConversationListCollectionViewController preferredStatusBarStyle]
  -[CKConversationListCollectionViewController contactStore]
  -[CKConversationListCollectionViewController collectionView:itemsForAddingToDragSession:atIndexPath:point:]
  -[CKConversationListCollectionViewController collectionView:dropSessionDidEnd:]
  -[CKConversationListCollectionViewController searchResultsController]
  -[CKConversationListCollectionViewController collectionView:performDropWithCoordinator:]
  -[CKConversationListCollectionViewController collectionView:itemsForBeginningDragSession:atIndexPath:]
  -[CKConversationListCollectionViewController setContactStore:]
  -[CKConversationListCollectionViewController willPresentSearchController:]
  -[CKConversationListCollectionViewController collectionView:previewForHighlightingContextMenuWithConfiguration:]
  -[CKConversationListCollectionViewController _multitaskingDragExclusionRects]
  -[CKConversationListCollectionViewController collectionView:willDisplayContextMenuWithConfiguration:animator:]
  -[CKConversationListCollectionViewController preferredFocusEnvironments]
  -[CKConversationListCollectionViewController contentController:contentDidBecomeAvailable:animated:]
  -[CKConversationListCollectionViewController collectionView:shouldDeselectItemAtIndexPath:]
  -[CKConversationListCollectionViewController collectionView:canHandleDropSession:]
  -[CKConversationListCollectionViewController _collectionView:sceneActivationConfigurationForItemAtIndexPath:point:]
  -[CKConversationListCollectionViewController conversationToUnpinPendingOrbDismissal]
  -[CKConversationListCollectionViewController unpinConversation:withReason:]
  -[CKConversationListCollectionViewController setConversationToUnpinPendingOrbDismissal:]
  -[CKConversationListCollectionViewController pinConversation:withReason:]
  -[CKConversationListCollectionViewController collectionView:didDeselectItemAtIndexPath:]
  -[CKConversationListCollectionViewController _meContact]
  -[CKConversationListCollectionViewController collectionView:dropSessionDidUpdate:withDestinationIndexPath:]
  -[CKConversationListCollectionViewController collectionView:didSelectItemAtIndexPath:]
  -[CKConversationListCollectionViewController collectionView:dragPreviewParametersForItemAtIndexPath:]
  -[CKConversationListCollectionViewController _chatItemsDidChange:]
  -[CKConversationListCollectionViewController prepareForResume]
  -[CKConversationListCollectionViewController viewWillLayoutSubviews]
  -[CKConversationListCollectionViewController conversationToPinPendingOrbDismissal]
  -[CKConversationListCollectionViewController setConversationToPinPendingOrbDismissal:]
  -[CKConversationListCollectionViewController _primaryMenuForItemIdentifier:inSection:withCell:]
  -[CKConversationListCollectionViewController selectAllButtonItem]
  -[CKConversationListCollectionViewController prepareForSuspend]
  -[CKConversationListCollectionViewController collectionView:dropSessionDidEnter:]
  -[CKConversationListCollectionViewController _secondaryMenuForItemIdentifier:inSection:withCell:]
  -[CKConversationListCollectionViewController _pinActionForItemIdentifier:]
  -[CKConversationListCollectionViewController _muteActionForItemIdentifier:]
  -[CKConversationListCollectionViewController _markAsActionForItemIdentifier:]
  -[CKConversationListCollectionViewController didDismissSearchController:]
  -[CKConversationListCollectionViewController collectionView:willEndContextMenuInteractionWithConfiguration:animator:]
  -[CKConversationListCollectionViewController traitCollectionDidChange:]
  -[CKConversationListCollectionViewController willDismissSearchController:]
  -[CKConversationListCollectionViewController collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[CKConversationListCollectionViewController updater]
  -[CKConversationListCollectionViewController searchController]
  -[CKConversationListCollectionViewController _openConversationInNewWindowActionForItemIdentifier:]
  -[CKConversationListCollectionViewController _deleteConversationActionForItemIdentifier:withCell:]
  -[CKConversationListCollectionViewController presentDetailsForItemIdentifier:fromView:]
  -[CKConversationListCollectionViewController collectionView:didBeginMultipleSelectionInteractionAtIndexPath:]
  -[CKConversationListCollectionViewController collectionView:dropPreviewParametersForItemAtIndexPath:]
  -[CKConversationListCollectionViewController collectionView:shouldSelectItemAtIndexPath:]
  -[CKConversationListCollectionViewController _keyboardWillHide:]
  -[CKConversationListCollectionViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[CKConversationListCollectionViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[CKConversationListCollectionViewController _keyboardWillShow:]
  -[CKConversationListCollectionViewController muteConversationButtonTappedForConversationWithItemIdentifier:setMuted:]
  -[CKConversationListCollectionViewController deleteButtonTappedForItemIdentifier:completionHandler:cellToUpdate:]
  -[CKConversationListCollectionViewController setMeContact:]
  -[CKConversationListCollectionViewController _conversationDetailsActionForItemIdentifier:withCell:]
  -[CKConversationListCollectionViewController _updateLargeTitleDisplayModeWithAnimation:]
  -[CKConversationListCollectionViewController composeButtonItem]
  -[CKConversationListCollectionViewController showCannotPinMoreConversationsAlert]
  -[CKConversationListCollectionViewController holdPinningUpdatesForOnboardingAnimation]
  -[CKConversationListCollectionViewController setMacShouldShowZKWSearch:]
  -[CKConversationListCollectionViewController hasDetailsNavigationController]
  -[CKConversationListCollectionViewController dismissDetailsNavigationController]
  -[CKConversationListCollectionViewController isDetailsNavigationControllerDetached]
  -[CKConversationListCollectionViewController collectionView:shouldBeginMultipleSelectionInteractionAtIndexPath:]
  -[CKConversationListCollectionViewController indexPathOfFirstSelectedItem]
  -[CKConversationListCollectionViewController _updateAddsTypingChatItem:]
  -[CKConversationListCollectionViewController _updateRemovesTypingChatItem:]
  -[CKConversationListCollectionViewController completedDeferredSetup]
  -[CKConversationListCollectionViewController setEditing:animated:]
  -[CKConversationListCollectionViewController updateContentsOfCellForConversation:animated:]
  -[CKConversationListCollectionViewController setIsBelowMacSnapToMinWidth:]
  -[CKConversationListCollectionViewController setDataSource:]
  -[CKConversationListCollectionViewController setSearchController:]
  -[CKConversationListCollectionViewController _macosUpdateNavbarLayoutIfNeeded]
  -[CKConversationListCollectionViewController _iosUpdateNavbarLayoutIfNeeded]
  -[CKConversationListCollectionViewController _shouldAllowLargeTitles]
  -[CKConversationListCollectionViewController startTipCellAnimatingIfNecessary]
  -[CKConversationListCollectionViewController editButtonMenuWillShow]
  -[CKConversationListCollectionViewController isShowingConversationFromCatalystOpenURL]
  -[CKConversationListCollectionViewController stopTipCellAnimatingIfNecessary]
  -[CKConversationListCollectionViewController shouldScrollCollectionViewForCellSelection:]
  -[CKConversationListCollectionViewController editButtonDropdownMenu]
  -[CKConversationListCollectionViewController searchBarTextDidBeginEditing:]
  -[CKConversationListCollectionViewController contentController:didFinishWithContent:animated:]
  -[CKConversationListCollectionViewController lastVisibleIndexPathInCollectionView]
  -[CKConversationListCollectionViewController firstVisibleIndexPathInCollectionView]
  -[CKConversationListCollectionViewController selectAllButtonTapped:]
  -[CKConversationListCollectionViewController newComposeWillActivate]
  -[CKConversationListCollectionViewController setCompletedDeferredSetup:]
  -[CKConversationListCollectionViewController editingMode]
  -[CKConversationListCollectionViewController _submitFeedbackIfNecessaryForSuggestedPinnedConversationsFollowingOnboardingCompletedSuccessfully:]
  -[CKConversationListCollectionViewController configureSelectionBarButtonItem:usingStyle:]
  -[CKConversationListCollectionViewController performResumeDeferredSetup]
  -[CKConversationListCollectionViewController alertTitleForDeleteMultiple]
  -[CKConversationListCollectionViewController performDeletionForActiveConversation:itemIdentifier:completionHandler:cellToUpdate:]
  -[CKConversationListCollectionViewController _indexPathOfDefaultConversation]
  -[CKConversationListCollectionViewController setHoldPinningUpdatesForConversationDeletion:]
  -[CKConversationListCollectionViewController selectDefaultConversationAnimated:shouldUsePreviousySelectedIndexPath:]
  -[CKConversationListCollectionViewController setEditButtonItem:]
  -[CKConversationListCollectionViewController contentController:contentViewNeedsLayout:]
  -[CKConversationListCollectionViewController _selectConversationAtIndexPath:animated:]
  -[CKConversationListCollectionViewController updateConversationSelectionPreservingLastSelectedItemIdentifier]
  -[CKConversationListCollectionViewController holdPinningUpdatesForConversationDeletion]
  -[CKConversationListCollectionViewController _submitFeedbackIfNecessaryForPinsChangedWithPreviousPinnedConversationIdentifiers:]
  -[CKConversationListCollectionViewController _dndSwipeActionForIndexPath:]
  -[CKConversationListCollectionViewController fetchPinningSuggestions]
  -[CKConversationListCollectionViewController .cxx_destruct]
  -[CKConversationListCollectionViewController nextPinnedConversationListUpdateShouldTriggerUnanimatedSnapshotUpdate]
  -[CKConversationListCollectionViewController _shouldAnimatePinningChangesForUpdateFollowingHoldForReason:]
  -[CKConversationListCollectionViewController setTipKitQueue:]
  -[CKConversationListCollectionViewController showPinningOnboardingTapped]
  -[CKConversationListCollectionViewController updateContentsOfTipCellForCustomizationType:]
  -[CKConversationListCollectionViewController pinnedConversationSuggester]
  -[CKConversationListCollectionViewController isSearchActive]
  -[CKConversationListCollectionViewController canShowSuggestedPinningOnboardingCell]
  -[CKConversationListCollectionViewController _pinningSuggestionsForConversations:]
  -[CKConversationListCollectionViewController _feedbackPinningInteractionMethod]
  -[CKConversationListCollectionViewController pinningInteractionMethod]
  -[CKConversationListCollectionViewController reasonTrackingUpdater:needsUpdateForReasons:followingHoldForReason:]
  -[CKConversationListCollectionViewController keyboardIsShowing]
  -[CKConversationListCollectionViewController reasonTrackingUpdater:didBeginHoldingUpdatesWithInitialReason:]
  -[CKConversationListCollectionViewController reasonTrackingUpdater:didEndHoldingUpdatesWithFinalReason:]
  -[CKConversationListCollectionViewController macVirtualComposeButton]
  -[CKConversationListCollectionViewController frozenConversations]
  -[CKConversationListCollectionViewController updateConversationList]
  -[CKConversationListCollectionViewController _refreshConversationList]
  -[CKConversationListCollectionViewController _chatWatermarkDidChange:]
  -[CKConversationListCollectionViewController cellAtIndexPath:isVisibleInCollectionView:]
  -[CKConversationListCollectionViewController complimentaryIndexPathForConversationAtIndexPath:]
  -[CKConversationListCollectionViewController detailsNavigationControllerConversation:]
  -[CKConversationListCollectionViewController scrollToFirstSelectedItemIfNecessary]
  -[CKConversationListCollectionViewController setHasActivePinnedConversationDropSession:]
  -[CKConversationListCollectionViewController updateConfigurationStateForSelectedCell]
  -[CKConversationListCollectionViewController setKeyboardIsShowing:]
  -[CKConversationListCollectionViewController viewDidLoad]
  -[CKConversationListCollectionViewController _conversationListDidFinishLoadingConversations:]
  -[CKConversationListCollectionViewController _contactStoreDidFinishLoadingNotification:]
  -[CKConversationListCollectionViewController _conversationListDidChange:]
  -[CKConversationListCollectionViewController setMacVirtualComposeButton:]
  -[CKConversationListCollectionViewController setComposeButtonItem:]
  -[CKConversationListCollectionViewController setCancelButtonItem:]
  -[CKConversationListCollectionViewController setDoneButtonItem:]
  -[CKConversationListCollectionViewController setSelectAllButtonItem:]
  -[CKConversationListCollectionViewController isInitialAppearance]
  -[CKConversationListCollectionViewController setIsInitialAppearance:]
  -[CKConversationListCollectionViewController setPinnedConversationSuggester:]
  -[CKConversationListCollectionViewController setIsShowingPinnedChatDropTarget:]
  -[CKConversationListCollectionViewController setIsCommitingDiffableDataSourceTransaction:]
  -[CKConversationListCollectionViewController filterMode]
  -[CKConversationListCollectionViewController isCheckingIfPinningOnboardingNeeded]
  -[CKConversationListCollectionViewController setIsCheckingIfPinningOnboardingNeeded:]
  -[CKConversationListCollectionViewController setTipKitContent:]
  -[CKConversationListCollectionViewController pinnedConversationViewLayoutStyle]
  -[CKConversationListCollectionViewController _setPinnedConversationViewLayoutStyle:shouldInvalidateLayout:]
  -[CKConversationListCollectionViewController unpinButtonTappedForCell:withConversation:]
  -[CKConversationListCollectionViewController _chatParticipantsChangedNotification:]
  -[CKConversationListCollectionViewController _conversationIsFilteredChangedNotification:]
  -[CKConversationListCollectionViewController _conversationDisplayNameChangedNotification:]
  -[CKConversationListCollectionViewController leadingSwipeActionsConfigurationForIndexPath:]
  -[CKConversationListCollectionViewController trailingSwipeActionsConfigurationForIndexPath:]
  -[CKConversationListCollectionViewController setIsShowingPinningOnboarding:]
  -[CKConversationListCollectionViewController animateInPinsToFinalPosition]
  -[CKConversationListCollectionViewController setEditingMode:animated:shouldUpdate:]
  -[CKConversationListCollectionViewController setCanShowSuggestedPinningOnboardingCell:]
  -[CKConversationListCollectionViewController animateOutBackgroundSnapshotView:]
  -[CKConversationListCollectionViewController setIsShowingSwipeDeleteConfirmation:]
  -[CKConversationListCollectionViewController _conversationMuteDidChangeNotification:]
  -[CKConversationListCollectionViewController _conversationFilteringStateChangedNotification:]
  -[CKConversationListCollectionViewController _reloadVisibleConversationList:]
  -[CKConversationListCollectionViewController doneButtonItem]
  -[CKConversationListCollectionViewController setDelegate:]
  -[CKConversationListCollectionViewController updateSnapshotAnimatingDifferences:completion:]
  -[CKConversationListCollectionViewController animationDistanceForCompletingOnboarding]
  -[CKConversationListCollectionViewController commitPinnedConversationsForEditingPins]
  -[CKConversationListCollectionViewController prototypePinnedConversationCollectionViewCell]
  -[CKConversationListCollectionViewController setPrototypePinnedConversationCollectionViewCell:]
  -[CKConversationListCollectionViewController animateInCollectionView:aboveBackgroundSnapshotView:enteringOnboarding:animationDistance:]
  -[CKConversationListCollectionViewController removeNewlyPinnedSuggestionCells:]
  -[CKConversationListCollectionViewController pinConversationsWithCompletion:]
  -[CKConversationListCollectionViewController recommendedPinningConversations]
  -[CKConversationListCollectionViewController setHoldPinningUpdatesForOnboardingAnimation:]
  -[CKConversationListCollectionViewController setHidePinsForAnimation:]
  -[CKConversationListCollectionViewController _chatUnreadCountDidChange:]
  -[CKConversationListCollectionViewController updateConversationListForMessageSentToConversation:]
  -[CKConversationListCollectionViewController viewDidAppear:]
  -[CKConversationListCollectionViewController setPinnedConversationViewLayoutStyle:]
  -[CKConversationListCollectionViewController setIsCurrentlyAnimatingPinningOnboardingSuggestions:]
  -[CKConversationListCollectionViewController togglePinStateForConversation:withReason:]
  -[CKConversationListCollectionViewController shouldAnimatePositionForRecommendedItemIdentifiers:pinnedItemIdentifiers:]
  -[CKConversationListCollectionViewController updateSnapshotAnimatingDifferences:]
  -[CKConversationListCollectionViewController _conversationSpamFilteringStateChangedNotification:]
  -[CKConversationListCollectionViewController _conversationContactPhotosEnabledChangedNotification:]
  -[CKConversationListCollectionViewController _downtimeStateChanged:]
  -[CKConversationListCollectionViewController _chatRegistryLastMessageLoadedNotification:]
  -[CKConversationListCollectionViewController updateConversationNamesForNicknames:]
  -[CKConversationListCollectionViewController _handleAccountRegistrationChange:]
  -[CKConversationListCollectionViewController startEndSuggestedPinsAnimation]
  -[CKConversationListCollectionViewController startCompletePinningOnboardingAnimation]
  -[CKConversationListCollectionViewController startSuggestedPinsAnimation]
  -[CKConversationListCollectionViewController sharingSettingsViewController:didUpdateWithSharingResult:]
  -[CKConversationListCollectionViewController composeButtonClicked:]
  -[CKConversationListCollectionViewController invalidateCellLayout]
  -[CKConversationListCollectionViewController noteUnreadCountsChanged]
  -[CKConversationListCollectionViewController _newCollectionViewWithFrame:collectionViewLayout:]
  -[CKConversationListCollectionViewController macToolbarController]
  -[CKConversationListCollectionViewController sharingSettingsViewController:didSelectSharingAudience:]
  -[CKConversationListCollectionViewController updateConversationSelection]
  -[CKConversationListCollectionViewController updateBackButton]
  -[CKConversationListCollectionViewController dataSource]
  -[CKConversationListCollectionViewController searcher:conversationForChatGUID:]
  -[CKConversationListCollectionViewController sharingSettingsViewControllerDidUpdateContact:]
  -[CKConversationListCollectionViewController optionsButtonItem]
  -[CKConversationListCollectionViewController updateSMSSpamConversationsDisplayName]
  -[CKConversationListCollectionViewController _updateConversationListsAndSortIfEnabled]
  -[CKConversationListCollectionViewController _updateConversationFilteredFlagsAndReportSpam]
  -[CKConversationListCollectionViewController conversationList]
  -[CKConversationListCollectionViewController configureWithToolbarController:]
  -[CKConversationListCollectionViewController sharingSettingsViewController:didUpdateSharingState:]
  -[CKConversationListCollectionViewController isShowingSwipeDeleteConfirmation]
  -[CKConversationListCollectionViewController showMeCardViewControllerWithNickname:]
  -[CKConversationListCollectionViewController _meCardSharingEnabled]
  -[CKConversationListCollectionViewController _meCardSharingAudience]
  -[CKConversationListCollectionViewController _avatarProviderFromNickname:]
  -[CKConversationListCollectionViewController _dismissPresentedNavController:]
  -[CKConversationListCollectionViewController _meCardSharingState]
  -[CKConversationListCollectionViewController init]
  -[CKConversationListCollectionViewController collectionView:previewForDismissingContextMenuWithConfiguration:]
  -[CKConversationListCollectionViewController searcher:userDidSelectChatGUID:messageGUID:]
  -[CKConversationListCollectionViewController searcher:userDidDeleteChatGUID:]
  -[CKConversationListCollectionViewController searcherDidComplete:]
  -[CKConversationListCollectionViewController _shouldKeepSelection]
  -[CKConversationListCollectionViewController shouldShowPendingCell]
  -[CKConversationListCollectionViewController setCompositionWasSent:]
  -[CKConversationListCollectionViewController setFrozenConversations:]
  -[CKConversationListCollectionViewController providerWillBeRemovedFromToolbarController:]
  -[CKConversationListCollectionViewController itemProviderDisablesTouches]
  -[CKConversationListCollectionViewController toolbarItemForIdentifier:]
  -[CKConversationListCollectionViewController virtualToolbarPreferredHeight]
  -[CKConversationListCollectionViewController isVisible]
  -[CKConversationListCollectionViewController _updateInsets]
  -[CKConversationListCollectionViewController _indexPaths:containingHandleWithUID:]
  -[CKConversationListCollectionViewController updateNoMessagesDialog]
  -[CKConversationListCollectionViewController scrollViewDidScroll:]
  -[CKConversationListCollectionViewController activeConversations]
  -[CKConversationListCollectionViewController noMessagesDialogView]
  -[CKConversationListCollectionViewController setNoMessagesDialogView:]
  -[CKConversationListCollectionViewController _deleteSwipeActionForIndexPath:]
  -[CKConversationListCollectionViewController setFilterMode:]
  -[CKConversationListCollectionViewController applicationWillSuspend]
  -[CKConversationListCollectionViewController lastSelectedConversationItemIdentifier]
  -[CKConversationListCollectionViewController _updateToolbarItems]
  -[CKConversationListCollectionViewController _contactStore]
  -[CKConversationListCollectionViewController _dragItemsForConversation:indexPath:inCollectionView:]
  -[CKConversationListCollectionViewController _shouldUsePreviewProviderForDragItemAtIndexPath:]
  -[CKConversationListCollectionViewController __im_ff_isInterstellarEnabled]
  -[CKConversationListCollectionViewController dragPreviewViewForPinnedConversation:inCollectionView:]
  -[CKConversationListCollectionViewController _snapshotOfAvatarViewForConversation:]
  -[CKConversationListCollectionViewController _conversationsFromLocalDropSession:]
  -[CKConversationListCollectionViewController dragOrDropPreviewParametersForItemAtIndexPath:inCollectionView:]
  -[CKConversationListCollectionViewController _conversationDropProposalForCollectionView:dropSession:withDestinationIndexPath:]
  -[CKConversationListCollectionViewController _destinationSectionForDropSession:destinationIndexPath:]
  -[CKConversationListCollectionViewController _conversationFromDragItem:]
  -[CKConversationListCollectionViewController _performConversationDropWithCollectionView:dropCoordinator:]
  -[CKConversationListCollectionViewController registerForCloudKitEventsWithDelayedRegistration:]
  -[CKConversationListCollectionViewController _performItemDropWithCollectionView:dropCoordinator:]
  -[CKConversationListCollectionViewController _conversationAfterDropDestination:fromDiffableDataSource:snapshot:excludingDraggedConversation:]
  -[CKConversationListCollectionViewController meContact]
  -[CKConversationListCollectionViewController _isDropForSession:toLeadingEdgeOfView:]
  -[CKConversationListCollectionViewController commitPinnedConversationsFromSnapshot:]
  -[CKConversationListCollectionViewController _updateNavbarLayoutIfNeeded]
  -[CKConversationListCollectionViewController _getTitleForCurrentFilterMode]
  -[CKConversationListCollectionViewController compositionWasSent]
  -[CKConversationListCollectionViewController searchBarSearchButtonClicked:]
  -[CKConversationListCollectionViewController pinnedConversations]
  -[CKConversationListCollectionViewController viewWillDisappear:]
  -[CKConversationListCollectionViewController pinnedConversationIdentifiers]
  -[CKConversationListCollectionViewController _endHoldingUpdatesOnViewWillAppear]
  -[CKConversationListCollectionViewController _shouldResizeNavigationBar]
  -[CKConversationListCollectionViewController modernSearchResultsController]
  -[CKConversationListCollectionViewController selectDefaultConversationAnimated:]
  -[CKConversationListCollectionViewController updateSyncProgressIfNeeded]
  -[CKConversationListCollectionViewController onboardingController]
  -[CKConversationListCollectionViewController searchBarTextDidEndEditing:]
  -[CKConversationListCollectionViewController tipKitContent]
  -[CKConversationListCollectionViewController viewDidLayoutSubviews]
  -[CKConversationListCollectionViewController setOnboardingController:]
  -[CKConversationListCollectionViewController _messageUnknownFilteringEnabled]
  -[CKConversationListCollectionViewController shouldUseFastPreviewText]
  -[CKConversationListCollectionViewController setShouldUseFastPreviewText:]
  -[CKConversationListCollectionViewController avatarViewTapped:]
  -[CKConversationListCollectionViewController doneButtonTapped:]
  -[CKConversationListCollectionViewController _shouldShowInboxView]
  -[CKConversationListCollectionViewController batchDeleteButtonTapped:]
  -[CKConversationListCollectionViewController markAsReadButtonTapped:]
  -[CKConversationListCollectionViewController viewWillAppear:]
  -[CKConversationListCollectionViewController _shouldRestoreFirstResponderAfterDetailsViewDismiss]
  -[CKConversationListCollectionViewController _endHoldingUpdatesForBatchEditing:]
  -[CKConversationListCollectionViewController showAccountMismatachAlertForNicknames]
  -[CKConversationListCollectionViewController showMultiplePhoneNumbersAlertForNicknames]
  -[CKConversationListCollectionViewController showMeCardViewController]
  -[CKConversationListCollectionViewController _showConversationWithComposition:atIndexPath:]
  -[CKConversationListCollectionViewController setLastSelectedConversationItemIdentifier:]
  -[CKConversationListCollectionViewController _chatAllowedByScreenTimeChanged:]
  -[CKConversationListCollectionViewController _messageSpamFilteringEnabled]
  -[CKConversationListCollectionViewController setMacToolbarController:]
  -[CKConversationListCollectionViewController performDeletionForPendingConversationCell:completionHandler:]
  -[CKConversationListCollectionViewController alertTitleForDelete]
  -[CKConversationListCollectionViewController selectConversationClosestToDeletedIndex:]
  -[CKConversationListCollectionViewController alertMessageForDelete]
  -[CKConversationListCollectionViewController _cancelDeletion:]
  -[CKConversationListCollectionViewController delegate]
  -[CKConversationListCollectionViewController willRotate]
  -[CKConversationListCollectionViewController configureTipKitCell:]
  -[CKConversationListCollectionViewController _userDefaults]
  -[CKConversationListCollectionViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKConversationListCollectionViewController editButtonItem]
  -[CKConversationListCollectionViewController searchController:conversationForChatGUID:]
  -[CKConversationListCollectionViewController setEditingMode:animated:]
  -[CKConversationListCollectionViewController cloudKitSyncProgressViewController:actionButtonWasPressed:errors:]
  -[CKConversationListCollectionViewController viewDidAppearDeferredSetup]
  -[CKConversationListCollectionViewController avatarHeaderWasTappedForConversation:]
  -[CKConversationListCollectionViewController setEditingMode:]
  -[CKConversationListCollectionViewController tipKitCollectionView:atIndexPath:]
  -[CKConversationListCollectionViewController removePendingConversationCell]
  -[CKConversationListCollectionViewController cellForIndexPath:inCollectionView:withItemIdentifier:]
  -[CKConversationListCollectionViewController supplementaryViewForIndexPath:inCollectionView:withKind:]
  -[CKConversationListCollectionViewController isBelowMacSnapToMinWidth]
  -[CKConversationListCollectionViewController didReorderConversationsWithTransaction:]
  -[CKConversationListCollectionViewController newMessageCellInCollectionView:atIndexPath:]
  -[CKConversationListCollectionViewController cellForPinnedConversationDropTargetInCollectionView:atIndexPath:]
  -[CKConversationListCollectionViewController cellForPinnedConversationWithItemIdentifier:inCollectionView:atIndexPath:]
  -[CKConversationListCollectionViewController _multiWayCallStateChanged:]
  -[CKConversationListCollectionViewController cellForStandardConversationWithItemIdentifier:inCollectionView:atIndexPath:]
  -[CKConversationListCollectionViewController cellForPinningOnboardingTitleViewCollectionView:atIndexPath:]
  -[CKConversationListCollectionViewController setRecommendedPinningConversations:]
  -[CKConversationListCollectionViewController significantTimeChange]
  -[CKConversationListCollectionViewController tipKitOnboardingCollectionView:atIndexPath:]
  -[CKConversationListCollectionViewController configurePinnedConversationCell:forItemIdentifier:indexPath:animated:]
  -[CKConversationListCollectionViewController configureDropTargetCell:]
  -[CKConversationListCollectionViewController dealloc]
  -[CKConversationListCollectionViewController configureNewMessageCell:]
  -[CKConversationListCollectionViewController configureConversationCell:forItemIdentifier:]
  -[CKConversationListCollectionViewController configureTipKitOnboardingCell:]
  -[CKConversationListCollectionViewController configureOnboardingTitleCell:]
  -[CKConversationListCollectionViewController isThreeColumnLayoutEnabled]
  -[CKConversationListCollectionViewController pinButtonTappedForCell:]
  -[CKConversationListCollectionViewController tipKitQueue]
  -[CKConversationListCollectionViewController reloadData]
  -[CKConversationListCollectionViewController syncProgressViewController]
  -[CKConversationListCollectionViewController _updateSyncProgressIfNeededWithProgressController:forceShow:]
  -[CKConversationListCollectionViewController unregisterForCloudKitEvents]
  -[CKConversationListCollectionViewController setSyncProgressViewController:]
  -[CKConversationListCollectionViewController _beginAccountRepairIfNeeded]
  -[CKConversationListCollectionViewController conversationForItemIdentifier:]
  -[CKConversationListCollectionViewController previousPinnedConversationActivitySnapshotForConversation:]
  -[CKConversationListCollectionViewController _configurePinnedConversationCell:forConversation:itemIdentifier:indexPath:animated:]
  -[CKConversationListCollectionViewController _activityItemTopInsetForIndexPath:]
  -[CKConversationListCollectionViewController hidePinsForAnimation]
  -[CKConversationListCollectionViewController _activityItemOriginationDirectionForItemIdentifier:conversation:]
  -[CKConversationListCollectionViewController cloudKitEventNotificationManager:syncProgressDidUpdate:]
  -[CKConversationListCollectionViewController searchController:didSelectItem:inChat:]
  -[CKConversationListCollectionViewController searchControllerDidBeginDragging:]
  -[CKConversationListCollectionViewController viewLayoutMarginsDidChange]
  -[CKConversationListCollectionViewController _pinnedConversationShortNames]
  -[CKConversationListCollectionViewController _recentMessagesInPinnedConversations]
  -[CKConversationListCollectionViewController searchViewController:requestsPushOfSearchController:]
  -[CKConversationListCollectionViewController searchBarForSearchViewController:]
  -[CKConversationListCollectionViewController shouldInsetResultsForSearchController:]
  -[CKConversationListCollectionViewController widthForDeterminingAvatarVisibility]
  -[CKConversationListCollectionViewController conversationWillBeMarkedRead:]
  -[CKConversationListCollectionViewController compositionSent]
  -[CKConversationListCollectionViewController selectDefaultConversationAnimated:removingPendingConversationCell:]
  -[CKConversationListCollectionViewController selectNextSequentialConversation:]
  -[CKConversationListCollectionViewController deleteSelectedConversation]
  -[CKConversationListCollectionViewController selectPinnedConversationForItem:]
  -[CKConversationListCollectionViewController selectFirstActiveConversation]
  -[CKConversationListCollectionViewController performSearch:completion:]
  -[CKConversationListCollectionViewController registerForCloudKitEventsImmediately]
  -[CKConversationListCollectionViewController itemIdentifiersForVisibleContextMenuInteractions]
  -[CKConversationListCollectionViewController _conversationHasActivityItem:]
  -[CKConversationListCollectionViewController loadView]
  -[CKConversationListCollectionViewController _isOnlyActivityItemInRowForConversation:itemIdentifier:]
  -[CKConversationListCollectionViewController _conversationsInRowOfItemIdentifier:]
  -[CKConversationListCollectionViewController shouldShowPinnedConversations]
  -[CKConversationListCollectionViewController transparentNavBarAppearance]
  -[CKConversationListCollectionViewController frozenPinnedConversations]
  -[CKConversationListCollectionViewController setFrozenPinnedConversations:]
  -[CKConversationListCollectionViewController conversationAtIndexPath:]
  -[CKConversationListCollectionViewController beginHoldingConversationListUpdatesForPPTTests]
  -[CKConversationListCollectionViewController endHoldingConversationListUpdatesForPPTTests]
  -[CKConversationListCollectionViewController deferredSearchQuery]
  -[CKConversationListCollectionViewController backButtonPressed]
  -[CKConversationListCollectionViewController _isRunningPPT]
  -[CKConversationListCollectionViewController setUpdater:]
  -[CKConversationListCollectionViewController setConversationLayout:]
  -[CKConversationListCollectionViewController setNextPinnedConversationListUpdateShouldTriggerUnanimatedSnapshotUpdate:]
  -[CKConversationListCollectionViewController cancelButtonItem]
  -[CKConversationListCollectionViewController contentController:actionTapped:]
  -[CKConversationListCollectionViewController _increaseContrastDidChange:]
  -[CKConversationListCollectionViewController updateNavigationItems]
  -[CKConversationListCollectionViewController setDeferredSearchQuery:]
  -[CKConversationListCollectionViewController isSearchActiveAndDisplayingResultsForSearchText]
  -[CKConversationListCollectionViewController conversationListCollectionViewControllerLogHandle]
  -[CKConversationListCollectionViewController shouldShowTipKitContent]
  -[CKConversationListCollectionViewController isShowingPinningOnboarding]
  -[CKConversationListCollectionViewController isShowingPinnedChatDropTarget]
  -[CKConversationListCollectionViewController _conversationMessageWasSent:]
  -[CKConversationListCollectionViewController _meCardSharingNameProviderWithContact:]
  -[CKConversationListCollectionViewController contentController:contentView:iconForCustomizationID:]
  -[CKConversationListCollectionViewController updateManualScrollEdgeProgress]
  -[CKConversationListCollectionViewController _conversationListPinnedConversationsDidChange:]
  -[CKConversationListCollectionViewController _handingPendingConversationDidChange:]
  -[CKConversationListCollectionViewController searchBar:textDidChange:]
  -[CKConversationListCollectionViewController searchBarShouldBeginEditing:]
  -[CKConversationListCollectionViewController _refreshConversationListCellForGroupPhotoUpdate:]
  -[CKConversationListCollectionViewController conversationLayout]
  -[CKConversationListCollectionViewController itemIdentifiersForConversations:inSection:]
  -[CKConversationListCollectionViewController isCurrentlyAnimatingPinningOnboardingSuggestions]
  -[CKConversationListCollectionViewController generateSnapshot]
  -[CKConversationListCollectionViewController isApplyingSnapshot]
  -[CKConversationListCollectionViewController completeAnimation]
  -[CKConversationListCollectionViewController scrollViewDidEndDecelerating:]
  -[CKConversationListCollectionViewController selectedDeleteButtonForConversation:inCell:]
  -[CKConversationListCollectionViewController detailsControllerDidDismiss:]
  -[CKConversationListCollectionViewController _performTranscriptPushForItemAtIndexPath:userInitiated:]
  -[CKConversationListCollectionViewController applyConversationListSnapshot:animatingDifferences:completion:]
  -[CKConversationListCollectionViewController isCommitingDiffableDataSourceTransaction]
  -[CKConversationListCollectionViewController setBlockedSnapshotInfo:]
  -[CKConversationListCollectionViewController hasActivePinnedConversationDropSession]
  -[CKConversationListCollectionViewController lastUserSelectedConversationTime]
  -[CKConversationListCollectionViewController lastUserSelectedConversationItemIdentifier]
  -[CKConversationListCollectionViewController setPinningInteractionMethod:]
  -[CKConversationListCollectionViewController _imageForkedFromMeCard]
  -[CKConversationListCollectionViewController composeToolbarItem]
  -[CKConversationListCollectionViewController setComposeToolbarItem:]
  -[CKConversationListCollectionViewController _ck_setNeedsUpdateOfMultitaskingDragExclusionRects]
  -[CKConversationListCollectionViewController setIsApplyingSnapshot:]
  -[CKConversationListCollectionViewController haveAppliedInitialSnapshot]
  -[CKConversationListCollectionViewController setHaveAppliedInitialSnapshot:]
  -[CKConversationListCollectionViewController blockedSnapshotInfo]
  -[CKConversationListCollectionViewController updateContentsOfCellWithIndexPath:animated:]
  -[CKConversationListCollectionViewController updateContentsOfCellWithItemIdentifier:animated:]
  -[CKConversationListCollectionViewController _freezeConversations]
  -[CKConversationListCollectionViewController updateContentsOfCellWithItemIdentifier:indexPath:animated:]
  -[CKConversationListCollectionViewController updateContentsOfCell:withItemIdentifier:atIndexPath:animated:]
  -[CKConversationListCollectionViewController itemIdentifierForConversation:inSection:]
  -[CKConversationListCollectionViewController yCoordinateForBorderBetweenPinnedAndActiveSectionExcludingConversations:]
  -[CKConversationListCollectionViewController _allFrozenConversations]
  -[CKConversationListCollectionViewController cacheForLastDisplayedActivitySnapshotByConversation]
  -[CKConversationListCollectionViewController setCacheForLastDisplayedActivitySnapshotByConversation:]
  -[CKConversationListCollectionViewController dataSourceWithCollectionView:]
  -[CKConversationListCollectionViewController setLastUserSelectedConversationTime:]
  -[CKConversationListCollectionViewController setLastUserSelectedConversationItemIdentifier:]
  -[CKConversationListCollectionViewController _itemIdentifierOfDefaultConversation]
  -[CKConversationListCollectionViewController macShouldShowZKWSearch]
  -[CKConversationListCollectionViewController sectionHasActionableConversations:]
  -[CKConversationListCollectionViewController contextMenuInteractionShouldBeginAtIndexPath:]
  -[CKConversationListCollectionViewController _topLevelMenuForItemIdentifier:inSection:withCell:]
  -[CKConversationListCollectionViewController setWillRotate:]
  -[CKConversationListCollectionViewController setModernSearchResultsController:]
  -[CKConversationListCollectionViewController setOptionsButtonItem:]
  -[CKConversationListCollectionViewController tipKitContentController]
  -[CKConversationListCollectionViewController setTipKitContentController:]
  -[CKConversationListCollectionViewController _lastDisplayedActivitySnapshotCacheKeyForConversation:]
  -[CKConversationListCollectionViewController cellPinningOnboardingItemIdentifier:inCollectionView:atIndexPath:]
  -[CKConversationListCollectionViewController detailsControllerBusinessPrivacyInfoPresentingViewController:]
  -[CKConversationListCollectionViewController presentingViewControllerForOnboardingController:]
  -[CKConversationListCollectionViewController _unfreezeConversations]
  -[CKConversationListCollectionViewController _removeConversationsFromFrozenConversations:]
  -[CKConversationListCollectionViewController conversationsAtIndexPaths:]
  -[CKConversationListCollectionViewController _filterControlSelectionChanged:]
  -[CKConversationListCollectionViewController onboardingControllerDidFinish:]
  -[CKConversationListCollectionViewController updateContentsOfAllCellsAnimated:]
  -[CKConversationListCollectionViewController updateContentsOfCellsWithItemIdentifiers:animated:]
  -[CKConversationListCollectionViewController pinnedConversationsFromSnapshot:]
  -[CKConversationListCollectionViewController numberOfConversations]
  -[CKConversationListCollectionViewController cancelButtonTapped:]
  -[CKConversationListCollectionViewController itemIdentifierIsFromPinnedSection:]
  -[CKConversationListCollectionViewController conversationsForItemIdentifiers:]
  -[CKConversationListCollectionViewController pinnedConversationMultitaskingDragExclusionRect]
  -[CKConversationListCollectionViewController nextSequentialIndexPathForIndexPath:descending:]
  -[CKConversationListCollectionViewController distanceBetweenConversationIndexPath:andIndexPath:]
  -[CKConversationListCollectionViewController numberOfPinnedConversations]
  -[CKConversationListCollectionViewController pinnedConversationView:didUpdateWithActivitySnapshot:]
  -[CKConversationListCollectionViewController setItemIdentifiersForVisibleContextMenuInteractions:]
  -[CKConversationListCollectionViewController _previewForHighlightingOrDismissingContextMenuWithConfiguration:collectionView:]
  -[CKConversationListCollectionViewController nicknameController]


CKConversationListCollectionView : UICollectionView
  // instance methods
  -[CKConversationListCollectionView setContentInset:]
  -[CKConversationListCollectionView _indexPathForInsertionAtPoint:sourceIndexPath:]
  -[CKConversationListCollectionView setScrollIndicatorInsets:]


CKConversationListCollectionViewDragFeedbackGenerator : _UIDragSnappingFeedbackGenerator
  // instance methods
  -[CKConversationListCollectionViewDragFeedbackGenerator objectSnapped]
  -[CKConversationListCollectionViewDragFeedbackGenerator draggedObjectLanded]
  -[CKConversationListCollectionViewDragFeedbackGenerator positionUpdated]
  -[CKConversationListCollectionViewDragFeedbackGenerator dropTargetUpdated]


CKMomentShareStatusChatItem : CKChatItem
  // instance methods
  -[CKMomentShareStatusChatItem layoutType]
  -[CKMomentShareStatusChatItem transcriptOrientation]
  -[CKMomentShareStatusChatItem contentInsets]
  -[CKMomentShareStatusChatItem wantsDrawerLayout]
  -[CKMomentShareStatusChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKMomentShareStatusChatItem _statusChatItem]
  -[CKMomentShareStatusChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKMomentShareStatusChatItem loadTranscriptText]
  -[CKMomentShareStatusChatItem cellClass]


CKSyndicationOnboardingLinkBalloonView : CKTranscriptPluginBalloonView
 @property  LPLinkView *linkView
 @property  LPLinkMetadata *linkMetadata

  // class methods
  +[CKSyndicationOnboardingLinkBalloonView tvSpecialization]
  +[CKSyndicationOnboardingLinkBalloonView podcastSpecialization]
  +[CKSyndicationOnboardingLinkBalloonView musicSpecialization]

  // instance methods
  -[CKSyndicationOnboardingLinkBalloonView .cxx_destruct]
  -[CKSyndicationOnboardingLinkBalloonView linkView]
  -[CKSyndicationOnboardingLinkBalloonView setPluginViewToURL:]
  -[CKSyndicationOnboardingLinkBalloonView setLinkView:]
  -[CKSyndicationOnboardingLinkBalloonView linkMetadata]
  -[CKSyndicationOnboardingLinkBalloonView setLinkMetadata:]
  -[CKSyndicationOnboardingLinkBalloonView initWithFrame:withURL:]


CKIMSimulatedAccount : IMAccount
 @property  IMHandle *loginHandle

  // instance methods
  -[CKIMSimulatedAccount .cxx_destruct]
  -[CKIMSimulatedAccount loginIMHandle]
  -[CKIMSimulatedAccount setLoginHandle:]
  -[CKIMSimulatedAccount loginHandle]


CKChatInputController : NSObject <UITextInputPayloadDelegate, CKMessageEntryViewInputDelegate, CKPhotoBrowserViewControllerSendDelegate, CKHandwritingViewControllerSendDelegate, CKBrowserViewControllerStoreSendDelegate, CKPluginEntryViewControllerDelegate, CKExpandedAppViewControllerDelegate, CKDeviceOrientationManagerDelegate, CKBrowserSwitcherViewControllerDelegate, CKBrowserTransitionCoordinatorDelegate, CKHandwritingPresentationControllerDelegate, CKBrowserAppManagerViewControllerDelegate, CKAppMenuViewControllerDelegate, UIViewControllerTransitioningDelegate, UIPopoverPresentationControllerDelegate, SKStoreProductViewControllerDelegate, CKAppSelectionInterface>
 @property  BOOL hasExternalPluginViewControllerProvider
 @property  CKMessageEntryView *entryView
 @property  CKKeyboardContentViewController *currentInputViewController
 @property  BOOL inputViewVisible
 @property  BOOL inputViewWillBecomeVisible
 @property  CKKeyboardContentViewController *switcherInputViewController
 @property  CKBrowserSwitcherViewController *browserSwitcher
 @property  NSDate *switcherLastTouchDate
 @property  CKDeviceOrientationManager *orientationManager
 @property  long long lastSeenOrientation
 @property  UINavigationController *presentedBrowserNavigationController
 @property  UIViewController<CKBrowserViewControllerProtocol> *macBrowserViewController
 @property  BOOL keyboardIsHiding
 @property  BOOL inCollapseOrExpandAnimation
 @property  IMScheduledUpdater *dismissEntryViewShelfUpdater
 @property  CKScheduledUpdater *orientationUpdater
 @property  CKHandwritingPresentationController *handwritingPresentationController
 @property  BOOL shouldSuppressStatusBarForHandwriting
 @property  BOOL shouldRestoreAppSwitcher
 @property  UIViewController *statusBarStyleViewController
 @property  UITextInputPayloadController *textInputPayloadController
 @property  @? insertPayloadCompletionHandler
 @property  IMBalloonPluginDataSource *deferredPluginDataSource
 @property  CKChatEagerUploadController *eagerUploadController
 @property  <CKChatInputControllerDelegate> *delegate
 @property  <CKExternalPluginViewControllerProvider> *externalPluginControllerProvider
 @property  IMBalloonPlugin *browserPlugin
 @property  IMBalloonPluginDataSource *browserPluginDataSource
 @property  BOOL browserShouldAutorotate
 @property  BOOL appStoreIsDisplayed
 @property  BOOL appManagerIsDisplayed
 @property  BOOL appModalIsDisplayed
 @property  BOOL isDismissingAppModal
 @property  unsigned long browserSupportedInterfaceOrientations
 @property  BOOL _isRunningPPT
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKChatInputController animationControllerForPresentedController:presentingController:sourceController:]
  -[CKChatInputController animationControllerForDismissedController:]
  -[CKChatInputController keyboardDidHide:]
  -[CKChatInputController presentationControllerDidDismiss:]
  -[CKChatInputController productViewControllerDidFinish:]
  -[CKChatInputController showKeyboard]
  -[CKChatInputController prepareForSuspend]
  -[CKChatInputController messageEntryView:didSelectPluginAtIndex:]
  -[CKChatInputController didTransitionFromOrientation:toOrientation:]
  -[CKChatInputController willSendComposition]
  -[CKChatInputController statusBarStyleViewController]
  -[CKChatInputController shouldSuppressStatusBarForHandwriting]
  -[CKChatInputController browserSupportedInterfaceOrientations]
  -[CKChatInputController showDTCompose]
  -[CKChatInputController browserShouldAutorotate]
  -[CKChatInputController requestPhotoBrowserToAppendFinalImagesToComposition]
  -[CKChatInputController .cxx_destruct]
  -[CKChatInputController _isRunningInMVS]
  -[CKChatInputController dismissPlugin]
  -[CKChatInputController presentAppStoreForURL:]
  -[CKChatInputController showFunCamera]
  -[CKChatInputController messageEntryViewDidExpand:]
  -[CKChatInputController messageEntryViewDidCollapse:]
  -[CKChatInputController presentPluginWithBundleID:appLaunchPayload:]
  -[CKChatInputController browserSwitcher]
  -[CKChatInputController setInputViewVisible:]
  -[CKChatInputController setInputViewWillBecomeVisible:]
  -[CKChatInputController switcherInputViewController]
  -[CKChatInputController setCurrentInputViewController:]
  -[CKChatInputController setSwitcherInputViewController:]
  -[CKChatInputController setBrowserSwitcher:]
  -[CKChatInputController _presentCompactSwitcherOverKeyboardWithCompletion:]
  -[CKChatInputController _dismissCompactSwitcherOverKeyboardWithCompletion:]
  -[CKChatInputController _entryViewSnapshotWithFrame:]
  -[CKChatInputController setDelegate:]
  -[CKChatInputController messageEntryViewDidTakeFocus:]
  -[CKChatInputController messageEntryViewHandwritingButtonHit:]
  -[CKChatInputController dismissAndReloadInputViews:]
  -[CKChatInputController expandedAppViewController:hasUpdatedLastTouchDate:]
  -[CKChatInputController expandedAppViewControllerWantsToCollapse:]
  -[CKChatInputController messageEntryViewPhotoButtonTouchDown:]
  -[CKChatInputController messageEntryViewPhotoButtonTouchUpOutside:]
  -[CKChatInputController messageEntryViewPhotoButtonHit:]
  -[CKChatInputController messageEntryViewPhotoButtonTouchCancel:]
  -[CKChatInputController messageEntryViewBrowserButtonHit:]
  -[CKChatInputController requestPresentationStyleExpanded:]
  -[CKChatInputController presentViewControllerWithPluginChatItem:presentationStyle:presentationConfiguration:]
  -[CKChatInputController init]
  -[CKChatInputController presentViewControllerWithPluginChatItem:presentationStyle:]
  -[CKChatInputController notifyBrowserViewControllerOfMatchingNewMessages:]
  -[CKChatInputController commitPayloadBypassingValidation:forPlugin:]
  -[CKChatInputController commitStickerBypassingValidation:forPlugin:]
  -[CKChatInputController pluginBundleID]
  -[CKChatInputController startEditingPayloadBypassingValidation:forPlugin:completion:]
  -[CKChatInputController entryView]
  -[CKChatInputController messageEntryViewSelectedAppMenuItem:]
  -[CKChatInputController presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]
  -[CKChatInputController _handleOrientation]
  -[CKChatInputController __im_ff_modernAppPresentationEnabled]
  -[CKChatInputController textInputPayloadController]
  -[CKChatInputController applicationWillAddDeactivationReasonNotification:]
  -[CKChatInputController _setupObserverForLaunchAppExtensionForDebugging]
  -[CKChatInputController currentInputViewController]
  -[CKChatInputController keyboardIsHiding]
  -[CKChatInputController inCollapseOrExpandAnimation]
  -[CKChatInputController _loadPhotosBrowserCollapsingEntryField:]
  -[CKChatInputController setBrowserPlugin:]
  -[CKChatInputController setBrowserPluginDataSource:]
  -[CKChatInputController launchAndShowBrowserForPlugin:dataSource:style:]
  -[CKChatInputController presentAppStoreForAdamID:]
  -[CKChatInputController setInputViewVisible:entryFieldCollapsed:animated:]
  -[CKChatInputController showPhotosBrowserCollapsingEntryField:]
  -[CKChatInputController dismissBrowserViewController]
  -[CKChatInputController showFunCamera:]
  -[CKChatInputController presentAppStoreForURL:fromSourceApplication:]
  -[CKChatInputController appSelectionInterfaceSelectedItem:]
  -[CKChatInputController showBrowserForPlugin:dataSource:style:]
  -[CKChatInputController setStatusBarStyleViewController:]
  -[CKChatInputController setPresentedBrowserNavigationController:]
  -[CKChatInputController browserPluginDataSource]
  -[CKChatInputController showBrowserForPlugin:dataSource:style:presentationConfiguration:]
  -[CKChatInputController showHandwritingBrowserWithExistingPayload:]
  -[CKChatInputController _adamIDFromPluginPayloadData:]
  -[CKChatInputController setInputViewVisible:entryFieldCollapsed:animated:messageDelegate:]
  -[CKChatInputController setDeferredPluginDataSource:]
  -[CKChatInputController inputViewController]
  -[CKChatInputController launchAndShowBrowserForPlugin:dataSource:style:presentationConfiguration:]
  -[CKChatInputController macPresentStoreViewControllerForAdamID:]
  -[CKChatInputController dismissEntryViewShelfUpdater]
  -[CKChatInputController setShouldRestoreAppSwitcher:]
  -[CKChatInputController setKeyboardIsHiding:]
  -[CKChatInputController orientationManager]
  -[CKChatInputController setSwitcherLastTouchDate:]
  -[CKChatInputController handwritingPresentationController]
  -[CKChatInputController setInCollapseOrExpandAnimation:]
  -[CKChatInputController _currentPluginIsDT]
  -[CKChatInputController _reconfigurePluginDataSourceWithBalloonControllerIfNecessary]
  -[CKChatInputController presentAppManager]
  -[CKChatInputController appModalIsDisplayed]
  -[CKChatInputController commitPayload:]
  -[CKChatInputController browserPlugin]
  -[CKChatInputController startEditingPayload:dismiss:]
  -[CKChatInputController openURL:pluginID:completionHandler:]
  -[CKChatInputController openURL:applicationIdentifier:pluginID:completionHandler:]
  -[CKChatInputController dismissToKeyboard:]
  -[CKChatInputController setConversationAndRecipientsForBrowser:]
  -[CKChatInputController _launchAppExtensionForDebugging]
  -[CKChatInputController macShowExpandedBrowser:presentationConfiguration:]
  -[CKChatInputController switcherLastTouchDate]
  -[CKChatInputController presentAlertWithTitle:message:buttonTitle:completion:]
  -[CKChatInputController commitSticker:]
  -[CKChatInputController commitSticker:withDragTarget:]
  -[CKChatInputController commitSticker:forPlugin:]
  -[CKChatInputController shouldPreventAppFromDisplayingForBundleIdentifier:]
  -[CKChatInputController requestPresentationStyleFullScreenModalForPlugin:datasource:skipValidation:]
  -[CKChatInputController composeRecipientViewDidBecomeFirstResponder:]
  -[CKChatInputController hasExternalPluginViewControllerProvider]
  -[CKChatInputController keyboardWillHide:]
  -[CKChatInputController handlePayload:withPayloadId:]
  -[CKChatInputController macShowBrowserForPlugin:dataSource:style:presentationConfiguration:]
  -[CKChatInputController presentModernCardForPlugin:presentationStyle:]
  -[CKChatInputController _switcherPluginCanMessageAPI]
  -[CKChatInputController _dismissBrowserViewControllerAndReloadInputViews:]
  -[CKChatInputController _deferredDismissToKeyboardAndFocusEntryView:]
  -[CKChatInputController _shouldShowHandwriting]
  -[CKChatInputController setHandwritingPresentationController:]
  -[CKChatInputController _browserViewControllerForInterfaceOrientationMethods]
  -[CKChatInputController lastSeenOrientation]
  -[CKChatInputController setLastSeenOrientation:]
  -[CKChatInputController insertPayloadCompletionHandler]
  -[CKChatInputController setInsertPayloadCompletionHandler:]
  -[CKChatInputController browserWillDismiss]
  -[CKChatInputController didSelectPlugin:]
  -[CKChatInputController commitPayload:forPlugin:allowAllCommits:error:]
  -[CKChatInputController commitSticker:atScreenCoordinate:scale:rotation:]
  -[CKChatInputController setEntryViewHidden:]
  -[CKChatInputController startEditingPayload:dismiss:forPlugin:]
  -[CKChatInputController startEditingPayload:dismiss:forPlugin:completion:]
  -[CKChatInputController requestPresentationStyleExpanded:forPlugin:]
  -[CKChatInputController showHandwritingBrowser]
  -[CKChatInputController inputViewWillBecomeVisible]
  -[CKChatInputController switcherViewControllerDidSelectAppManager:shouldRestoreAppSwitcher:]
  -[CKChatInputController balloonPluginForIndexPath:]
  -[CKChatInputController requestPresentationStyleFullScreenModalForPlugin:]
  -[CKChatInputController handwritingIsDisplayed]
  -[CKChatInputController didStageAssetArchive:identifier:]
  -[CKChatInputController eagerUploadCancelIdentifier:]
  -[CKChatInputController eagerUploadPayload:identifier:replace:]
  -[CKChatInputController _switcherPluginCanMessageAPIOnBehalfOfPlugin:]
  -[CKChatInputController _openContainingBundleID:applicationService:withURL:pluginID:completionHandler:]
  -[CKChatInputController _deferredCommitPayload:]
  -[CKChatInputController _currentPluginIsPhotos]
  -[CKChatInputController _switcherPluginHasTouchTokenForDirectSend]
  -[CKChatInputController commitSticker:forPlugin:bypassValidation:]
  -[CKChatInputController appTitleOverride]
  -[CKChatInputController isDismissingAppModal]
  -[CKChatInputController externalPluginControllerProvider]
  -[CKChatInputController set_isRunningPPT:]
  -[CKChatInputController setExternalPluginControllerProvider:]
  -[CKChatInputController _deferredCommitSticker:]
  -[CKChatInputController appStoreIsDisplayed]
  -[CKChatInputController shouldRestoreAppSwitcher]
  -[CKChatInputController macBrowserViewController]
  -[CKChatInputController setMacBrowserViewController:]
  -[CKChatInputController _deferredRequestPresentationStyleExpanded:]
  -[CKChatInputController _deferredRequestPresentationStyleFullScreenModalForPluginInfo:]
  -[CKChatInputController _startEditingPayload:]
  -[CKChatInputController _shouldSendTypingIndicatorDataForPluginIdentifier:]
  -[CKChatInputController showEntryViewShelf:forPlugin:completion:]
  -[CKChatInputController _loadPhotosBrowser]
  -[CKChatInputController workingDraftDirForPluginIdentifier:]
  -[CKChatInputController dismiss]
  -[CKChatInputController expandedAppViewControllerDidTransitionFromOrientation:toOrientation:]
  -[CKChatInputController setShouldSuppressStatusBarForHandwriting:]
  -[CKChatInputController orientationUpdater]
  -[CKChatInputController deferredPluginDataSource]
  -[CKChatInputController participantHandles]
  -[CKChatInputController showEntryViewShelf:]
  -[CKChatInputController clearBrowserViewControllerIfNecessary]
  -[CKChatInputController showModalViewController:animated:completion:]
  -[CKChatInputController dismissEntryViewShelf]
  -[CKChatInputController showPhotosBrowser]
  -[CKChatInputController workingDirForDraft]
  -[CKChatInputController didBeginInstallingAppWithBundleIdentifier:]
  -[CKChatInputController openAppExtensionWithAdamID:]
  -[CKChatInputController entryViewDidChangeSize]
  -[CKChatInputController expandedAppViewController:wantsToSwitchToPlugin:datasource:]
  -[CKChatInputController switcherViewControllerDidCollapse:]
  -[CKChatInputController delegate]
  -[CKChatInputController expandedAppViewControllerSwitcherDidSelectAppStore:]
  -[CKChatInputController expandedAppViewControllerSwitcherDidSelectAppManager:]
  -[CKChatInputController setEagerUploadController:]
  -[CKChatInputController deviceOrientationManager:orientationDidChange:]
  -[CKChatInputController switcherViewController:didSelectPluginAtIndexPath:]
  -[CKChatInputController switcherViewControllerDidFinishSwitching:toViewController:]
  -[CKChatInputController switcherViewControllerDidSelectAppStore:shouldRestoreAppSwitcher:]
  -[CKChatInputController appIconOverride]
  -[CKChatInputController switcherViewController:hasUpdatedLastTouchDate:]
  -[CKChatInputController browserTransitionCoordinatorWillTransitionOrPresentToFullscreen:withReason:]
  -[CKChatInputController browserTransitionCoordinatorDidTransitionOrPresentToFullscreen:withReason:]
  -[CKChatInputController browserTransitionCoordinatorWillCollapseOrDismiss:withReason:]
  -[CKChatInputController startEditingPayload:]
  -[CKChatInputController browserTransitionCoordinatorDidCollapseOrDismiss:withReason:]
  -[CKChatInputController setOrientationUpdater:]
  -[CKChatInputController _showFullScreenBrowser:]
  -[CKChatInputController stageAssetArchive:skipShelf:completionHandler:]
  -[CKChatInputController dragControllerTranscriptDelegate]
  -[CKChatInputController dismissAndReloadInputViews:forPlugin:]
  -[CKChatInputController requestPhotoBrowserToEnumerateSelectedImagesUsingBlock:]
  -[CKChatInputController setTextInputPayloadController:]
  -[CKChatInputController setOrientationManager:]
  -[CKChatInputController requestPhotoBrowserToUnstageImages:]
  -[CKChatInputController presentedBrowserNavigationController]
  -[CKChatInputController _presentPluginWithBundleID:sendingTextInputPayload:withPayloadID:]
  -[CKChatInputController dealloc]
  -[CKChatInputController _formattedPayload:forPayloadID:]
  -[CKChatInputController _presentPluginWithBundleID:sendingTextInputPayload:withPayloadID:style:]
  -[CKChatInputController handwritingPresentationControllerDidShowHandwriting:]
  -[CKChatInputController setDismissEntryViewShelfUpdater:]
  -[CKChatInputController setEntryView:]
  -[CKChatInputController canHandleClientActionFromUrl:]
  -[CKChatInputController localizedTitleForClientActionFromUrl:context:]
  -[CKChatInputController handleClientActionFromUrl:context:]
  -[CKChatInputController handleMoneyActionWithAmount:currencies:]
  -[CKChatInputController isInputViewVisible]
  -[CKChatInputController handwritingPresentationControllerWillHideHandwriting:]
  -[CKChatInputController eagerUploadController]
  -[CKChatInputController forceDismissWithoutAnimation]
  -[CKChatInputController isHandwritingLandscape]
  -[CKChatInputController swipeDismissBrowser]
  -[CKChatInputController setLocalUserIsTyping:]
  -[CKChatInputController keyboardWillShow:]
  -[CKChatInputController requestPhotoBrowserToPrepareForDraft]
  -[CKChatInputController _isRunningPPT]
  -[CKChatInputController appMenuViewController:didSelectMenuItem:]
  -[CKChatInputController browserAppManagerDidSelectPlugin:]
  -[CKChatInputController registerForTextInputPayloadHandling:isGroupChat:]
  -[CKChatInputController messageEntryShouldHideCaret:]
  -[CKChatInputController unregisterForTextInputPayloadHandling]
  -[CKChatInputController __im_ff_commSafetyUIEnabled]
  -[CKChatInputController appManagerIsDisplayed]
  -[CKChatInputController requestPhotoBrowserInitFromDraft:]
  -[CKChatInputController messageEntryViewHighLightInputButton:]


CKSensitiveBadgeBalloonView : CKImageBalloonView
 @property  UIView *commSafetyBadgeView

  // instance methods
  -[CKSensitiveBadgeBalloonView .cxx_destruct]
  -[CKSensitiveBadgeBalloonView layoutSubviews]
  -[CKSensitiveBadgeBalloonView initWithFrame:]
  -[CKSensitiveBadgeBalloonView commSafetyBadgeView]
  -[CKSensitiveBadgeBalloonView setCommSafetyBadgeView:]


CKDetailsContactsTableViewCell : CKDetailsCell
 @property  CKLabel *nameLabel
 @property  UILabel *locationLabel
 @property  UILabel *expanseStatusLabel
 @property  CKAvatarView *contactAvatarView
 @property  NSString *entityName
 @property  NSString *locationString
 @property  BOOL tuConversationStatusIsActive
 @property  long long callType
 @property  BOOL showsLocation
 @property  BOOL showMessageButton
 @property  BOOL showPhoneButton
 @property  BOOL showFaceTimeVideoButton
 @property  BOOL showInfoButton
 @property  BOOL showScreenSharingButton
 @property  BOOL showsTUConversationStatus
 @property  UIButton *messageButton
 @property  UIButton *phoneButton
 @property  UIButton *facetimeVideoButton
 @property  UIButton *screenSharingButton
 @property  CNContact *contact
 @property  UIActivityIndicatorView *updatingParticipantSpinner
 @property  <CKDetailsContactsTableViewCellDelegate> *delegate

  // class methods
  +[CKDetailsContactsTableViewCell estimatedHeight]
  +[CKDetailsContactsTableViewCell marginWidth]
  +[CKDetailsContactsTableViewCell reuseIdentifier]
  +[CKDetailsContactsTableViewCell preferredHeight]
  +[CKDetailsContactsTableViewCell cellClass]

  // instance methods
  -[CKDetailsContactsTableViewCell showFaceTimeVideoButton]
  -[CKDetailsContactsTableViewCell showScreenSharingButton]
  -[CKDetailsContactsTableViewCell locationLabel]
  -[CKDetailsContactsTableViewCell setShowsTUConversationStatus:]
  -[CKDetailsContactsTableViewCell tuConversationStatusIsActive]
  -[CKDetailsContactsTableViewCell showsTUConversationStatus]
  -[CKDetailsContactsTableViewCell locationString]
  -[CKDetailsContactsTableViewCell callType]
  -[CKDetailsContactsTableViewCell phoneButton]
  -[CKDetailsContactsTableViewCell .cxx_destruct]
  -[CKDetailsContactsTableViewCell setLocationLabel:]
  -[CKDetailsContactsTableViewCell setLocationString:]
  -[CKDetailsContactsTableViewCell _ckSymbolImageNamed:preferredContentSizeCategory:preferredFontTextStyle:]
  -[CKDetailsContactsTableViewCell messageButton]
  -[CKDetailsContactsTableViewCell layoutSubviews]
  -[CKDetailsContactsTableViewCell contactAvatarView]
  -[CKDetailsContactsTableViewCell _updateVisibleButtons]
  -[CKDetailsContactsTableViewCell _hideAllButtons]
  -[CKDetailsContactsTableViewCell setDelegate:]
  -[CKDetailsContactsTableViewCell setContact:]
  -[CKDetailsContactsTableViewCell setCallType:]
  -[CKDetailsContactsTableViewCell setNameLabel:]
  -[CKDetailsContactsTableViewCell sizeThatFits:]
  -[CKDetailsContactsTableViewCell entityName]
  -[CKDetailsContactsTableViewCell __im_ff_isExpanseEnabled]
  -[CKDetailsContactsTableViewCell delegate]
  -[CKDetailsContactsTableViewCell initWithStyle:reuseIdentifier:]
  -[CKDetailsContactsTableViewCell setEntityName:]
  -[CKDetailsContactsTableViewCell didHoverOverCell:]
  -[CKDetailsContactsTableViewCell nameLabel]
  -[CKDetailsContactsTableViewCell showsLocation]
  -[CKDetailsContactsTableViewCell setPhoneButton:]
  -[CKDetailsContactsTableViewCell contact]
  -[CKDetailsContactsTableViewCell facetimeVideoButton]
  -[CKDetailsContactsTableViewCell setMessageButton:]
  -[CKDetailsContactsTableViewCell setFacetimeVideoButton:]
  -[CKDetailsContactsTableViewCell _imageNamed:]
  -[CKDetailsContactsTableViewCell setScreenSharingButton:]
  -[CKDetailsContactsTableViewCell screenSharingButton]
  -[CKDetailsContactsTableViewCell setShowsLocation:]
  -[CKDetailsContactsTableViewCell setContactAvatarView:]
  -[CKDetailsContactsTableViewCell _configureButtonLayer:]
  -[CKDetailsContactsTableViewCell setExpanseStatusLabel:]
  -[CKDetailsContactsTableViewCell expanseStatusLabel]
  -[CKDetailsContactsTableViewCell _formatExpanseStatusLabel]
  -[CKDetailsContactsTableViewCell setShowFaceTimeVideoButton:]
  -[CKDetailsContactsTableViewCell setTuConversationStatusIsActive:]
  -[CKDetailsContactsTableViewCell configureWithViewModel:]
  -[CKDetailsContactsTableViewCell setShowMessageButton:]
  -[CKDetailsContactsTableViewCell setShowPhoneButton:]
  -[CKDetailsContactsTableViewCell setShowScreenSharingButton:]
  -[CKDetailsContactsTableViewCell _handleCommunicationAction:]
  -[CKDetailsContactsTableViewCell _showUpdatingParticipantSpinner]
  -[CKDetailsContactsTableViewCell showMessageButton]
  -[CKDetailsContactsTableViewCell _dismissUpdatingParticipantSpinner]
  -[CKDetailsContactsTableViewCell updatingParticipantSpinner]
  -[CKDetailsContactsTableViewCell setUpdatingParticipantSpinner:]
  -[CKDetailsContactsTableViewCell setShowInfoButton:]
  -[CKDetailsContactsTableViewCell showPhoneButton]
  -[CKDetailsContactsTableViewCell showInfoButton]


CKDetailsChatOptionsCheckboxCell : CKTranscriptDetailsResizableCell <CKDetailsCell>
 @property  UISwitch *controlSwitch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsChatOptionsCheckboxCell shouldHighlight]
  +[CKDetailsChatOptionsCheckboxCell reuseIdentifier]

  // instance methods
  -[CKDetailsChatOptionsCheckboxCell .cxx_destruct]
  -[CKDetailsChatOptionsCheckboxCell layoutSubviews]
  -[CKDetailsChatOptionsCheckboxCell controlSwitch]
  -[CKDetailsChatOptionsCheckboxCell sizeThatFits:]
  -[CKDetailsChatOptionsCheckboxCell prepareForReuse]
  -[CKDetailsChatOptionsCheckboxCell setControlSwitch:]
  -[CKDetailsChatOptionsCheckboxCell _configureNewControlSwitch]
  -[CKDetailsChatOptionsCheckboxCell initWithStyle:reuseIdentifier:]


CKColoredBalloonView : CKBalloonView
 @property  CKBalloonImageView *mask
 @property  CKGradientView *gradientView
 @property  CKBalloonImageView *effectViewMask
 @property  BOOL wantsGradient
 @property  UIView<CKGradientReferenceView> *gradientReferenceView
 @property  BOOL hasBackground
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} gradientOverrideFrame

  // instance methods
  -[CKColoredBalloonView clearFilters]
  -[CKColoredBalloonView overlayColor]
  -[CKColoredBalloonView effectViewMask]
  -[CKColoredBalloonView setWantsGradient:]
  -[CKColoredBalloonView updateWantsGradient]
  -[CKColoredBalloonView setEffectViewMask:]
  -[CKColoredBalloonView setEffectViewMaskImage:]
  -[CKColoredBalloonView gradientOverrideFrame]
  -[CKColoredBalloonView gradientView]
  -[CKColoredBalloonView prepareForDisplay]
  -[CKColoredBalloonView .cxx_destruct]
  -[CKColoredBalloonView setCanUseOpaqueMask:]
  -[CKColoredBalloonView setFrame:]
  -[CKColoredBalloonView layoutSubviews]
  -[CKColoredBalloonView configureForComposition:]
  -[CKColoredBalloonView setColor:]
  -[CKColoredBalloonView mask]
  -[CKColoredBalloonView setGradientView:]
  -[CKColoredBalloonView prepareForReuse]
  -[CKColoredBalloonView setMask:]
  -[CKColoredBalloonView gradientReferenceView]
  -[CKColoredBalloonView configureForMessagePart:]
  -[CKColoredBalloonView addFilter:]
  -[CKColoredBalloonView initWithFrame:]
  -[CKColoredBalloonView hasBackground]
  -[CKColoredBalloonView balloonDescriptor]
  -[CKColoredBalloonView setGradientReferenceView:]
  -[CKColoredBalloonView wantsGradient]
  -[CKColoredBalloonView setBounds:]
  -[CKColoredBalloonView alignmentRectInsets]
  -[CKColoredBalloonView setGradientOverrideFrame:]
  -[CKColoredBalloonView setHasTail:]
  -[CKColoredBalloonView needsGroupOpacity]
  -[CKColoredBalloonView setBalloonDescriptor:]


CKGroupUpdate : NSObject
 @property  unsigned long groupUpdateType
 @property  NSString *handleID

  // instance methods
  -[CKGroupUpdate handleID]
  -[CKGroupUpdate .cxx_destruct]
  -[CKGroupUpdate initWithType:handleID:]
  -[CKGroupUpdate groupUpdateType]
  -[CKGroupUpdate setGroupUpdateType:]
  -[CKGroupUpdate setHandleID:]


CKGroupAcknowledgmentVotingAccessoryView : _UIContextMenuAccessoryView
 @property  CKGroupAcknowledgmentVotingViewController *votingViewController

  // instance methods
  -[CKGroupAcknowledgmentVotingAccessoryView setVotingViewController:]
  -[CKGroupAcknowledgmentVotingAccessoryView votingViewController]
  -[CKGroupAcknowledgmentVotingAccessoryView .cxx_destruct]
  -[CKGroupAcknowledgmentVotingAccessoryView initWithFrame:chatItem:]


CKTranscriptDNDCell : UITableViewCell
 @property  UISwitch *muteSwitch

  // class methods
  +[CKTranscriptDNDCell identifier]
  +[CKTranscriptDNDCell preferredHeight]

  // instance methods
  -[CKTranscriptDNDCell setMuteSwitch:]
  -[CKTranscriptDNDCell .cxx_destruct]
  -[CKTranscriptDNDCell layoutSubviews]
  -[CKTranscriptDNDCell muteSwitch]
  -[CKTranscriptDNDCell initWithStyle:reuseIdentifier:]


CKMediaObjectDeleteAssetActionPerformer : CKMediaObjectAssetActionPerformer
  // class methods
  +[CKMediaObjectDeleteAssetActionPerformer canPerformWithActionManager:]
  +[CKMediaObjectDeleteAssetActionPerformer createPreviewActionWithActionManager:handler:]
  +[CKMediaObjectDeleteAssetActionPerformer canPerformOnImplicitSelection]
  +[CKMediaObjectDeleteAssetActionPerformer localizedTitleForUseCase:actionManager:]
  +[CKMediaObjectDeleteAssetActionPerformer systemImageNameForActionManager:]

  // instance methods
  -[CKMediaObjectDeleteAssetActionPerformer performUserInteractionTask]
  -[CKMediaObjectDeleteAssetActionPerformer _presentDeleteConfirmationDialogForTypedCount:completionHandler:]


CKSendAnimationContext : NSObject <CKSendAnimationContext>
 @property  NSArray *animatableViews
 @property  NSArray *animatableTextViews
 @property  NSArray *throwBalloonViews
 @property  NSArray *framesOfAddedChatItems
 @property  NSArray *throwBalloonViewAttributesCollection
 @property  UIView *containerView
 @property  NSString *impactIdentifier
 @property  BOOL shouldRepeat
 @property  BOOL isSender
 @property  BOOL beginAnimationFromTranscriptPresentedState
 @property  NSArray *messages
 @property  CABackdropLayer *backdropLayer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKSendAnimationContext backdropLayer]
  -[CKSendAnimationContext setMessages:]
  -[CKSendAnimationContext isSender]
  -[CKSendAnimationContext animatableViews]
  -[CKSendAnimationContext setBackdropLayer:]
  -[CKSendAnimationContext animatableTextViews]
  -[CKSendAnimationContext setFramesOfAddedChatItems:]
  -[CKSendAnimationContext throwBalloonViewAttributesCollection]
  -[CKSendAnimationContext setThrowBalloonViewAttributesCollection:]
  -[CKSendAnimationContext beginAnimationFromTranscriptPresentedState]
  -[CKSendAnimationContext setShouldRepeat:]
  -[CKSendAnimationContext containerView]
  -[CKSendAnimationContext .cxx_destruct]
  -[CKSendAnimationContext shouldRepeat]
  -[CKSendAnimationContext impactIdentifier]
  -[CKSendAnimationContext throwBalloonViews]
  -[CKSendAnimationContext setContainerView:]
  -[CKSendAnimationContext messages]
  -[CKSendAnimationContext framesOfAddedChatItems]
  -[CKSendAnimationContext setIsSender:]
  -[CKSendAnimationContext setAnimatableViews:]
  -[CKSendAnimationContext setAnimatableTextViews:]
  -[CKSendAnimationContext setImpactIdentifier:]
  -[CKSendAnimationContext setThrowBalloonViews:]
  -[CKSendAnimationContext setBeginAnimationFromTranscriptPresentedState:]


CKThrowBalloonViewAttributes : NSObject
 @property  CKBalloonView *throwBalloonView
 @property  NSDictionary *supplementaryViews
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} startFrame

  // instance methods
  -[CKThrowBalloonViewAttributes throwBalloonView]
  -[CKThrowBalloonViewAttributes supplementaryViews]
  -[CKThrowBalloonViewAttributes .cxx_destruct]
  -[CKThrowBalloonViewAttributes startFrame]
  -[CKThrowBalloonViewAttributes setStartFrame:]
  -[CKThrowBalloonViewAttributes setThrowBalloonView:]
  -[CKThrowBalloonViewAttributes setSupplementaryViews:]


CKDetailsLocationStringCell : UIView
 @property  UILabel *locationLabel
 @property  UIImageView *locationImageView
 @property  UIVisualEffectView *blurView
 @property  NSString *locationString

  // instance methods
  -[CKDetailsLocationStringCell blurView]
  -[CKDetailsLocationStringCell locationLabel]
  -[CKDetailsLocationStringCell locationString]
  -[CKDetailsLocationStringCell setLocationImageView:]
  -[CKDetailsLocationStringCell locationImageView]
  -[CKDetailsLocationStringCell .cxx_destruct]
  -[CKDetailsLocationStringCell setLocationLabel:]
  -[CKDetailsLocationStringCell setLocationString:]
  -[CKDetailsLocationStringCell layoutSubviews]
  -[CKDetailsLocationStringCell setBlurView:]
  -[CKDetailsLocationStringCell initWithFrame:]


CKParticipantSubscriptionSwitchChatItem : CKMultilineStampChatItem
  // instance methods
  -[CKParticipantSubscriptionSwitchChatItem sender]
  -[CKParticipantSubscriptionSwitchChatItem handle]
  -[CKParticipantSubscriptionSwitchChatItem loadTranscriptText]


CKSharedAudioCollectionViewCell : CKSharedContentsCollectionViewCell
 @property  CKAudioProgressView *audioPlaybackView
 @property  UIDateLabel *previewTitleLabel

  // class methods
  +[CKSharedAudioCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKSharedAudioCollectionViewCell audioPlaybackView]
  -[CKSharedAudioCollectionViewCell formattedDurationTextForAsset:]
  -[CKSharedAudioCollectionViewCell formattedCreatedDateTextFromDate:]
  -[CKSharedAudioCollectionViewCell setAudioPlaybackView:]
  -[CKSharedAudioCollectionViewCell .cxx_destruct]
  -[CKSharedAudioCollectionViewCell layoutSubviews]
  -[CKSharedAudioCollectionViewCell configureWithAttachmentItem:]


CKCache : NSObject <CKCache>
 @property  NSMutableDictionary *dictionary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKCache objectForKey:]
  -[CKCache removeAllObjects]
  -[CKCache setObject:forKey:]
  -[CKCache .cxx_destruct]
  -[CKCache dictionary]
  -[CKCache init]
  -[CKCache setDictionary:]
  -[CKCache dealloc]


CKLRUCache : CPLRUDictionary <CKCache>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKLRUCache initWithMaximumCapacity:]
  -[CKLRUCache dealloc]


CKMultiCache : IMMultiDict
 @property  unsigned long limit
 @property  BOOL cacheEligibleForPrewarm

  // instance methods
  -[CKMultiCache removeAllObjects]
  -[CKMultiCache setCacheEligibleForPrewarm:]
  -[CKMultiCache markCacheAsPrewarmed]
  -[CKMultiCache cacheEligibleForPrewarm]
  -[CKMultiCache init]
  -[CKMultiCache pushObject:forKey:]
  -[CKMultiCache setLimit:]
  -[CKMultiCache dealloc]
  -[CKMultiCache limit]


CKOnboardingBalloonView : CKTextBalloonView
 @property  UIImage *largeBalloonImage

  // instance methods
  -[CKOnboardingBalloonView prepareForDisplay]
  -[CKOnboardingBalloonView largeBalloonImage]
  -[CKOnboardingBalloonView setLargeBalloonImage:]
  -[CKOnboardingBalloonView .cxx_destruct]


CKNicknamePreviewView : UIView
 @property  UILabel *senderLabel
 @property  NSArray *avatarViews
 @property  CKTextBalloonView *balloonView
 @property  NSArray *senderStrings
 @property  CKCNSharingProfileAvatarItemProvider *avatarItemProvider
 @property  CNContact *contact
 @property  CNSharingProfileAvatarItemProviderConfiguration *avatarItemProviderConfiguration
 @property  BOOL shouldStopAnimation

  // instance methods
  -[CKNicknamePreviewView traitCollectionDidChange:]
  -[CKNicknamePreviewView .cxx_destruct]
  -[CKNicknamePreviewView setAvatarItemProvider:]
  -[CKNicknamePreviewView avatarItemProvider]
  -[CKNicknamePreviewView imageForAvatarType:]
  -[CKNicknamePreviewView senderStringForAvatarType:]
  -[CKNicknamePreviewView setSenderStrings:]
  -[CKNicknamePreviewView senderStrings]
  -[CKNicknamePreviewView updateBalloonTraitCollection]
  -[CKNicknamePreviewView avatarDidFinishTransitionToAvatarAtIndex:]
  -[CKNicknamePreviewView shouldStopAnimation]
  -[CKNicknamePreviewView flipAnimation]
  -[CKNicknamePreviewView runFlipAnimationOnAvatarView:completion:]
  -[CKNicknamePreviewView setSenderLabelVisible:completion:]
  -[CKNicknamePreviewView layoutSubviews]
  -[CKNicknamePreviewView balloonView]
  -[CKNicknamePreviewView setContact:]
  -[CKNicknamePreviewView senderLabel]
  -[CKNicknamePreviewView sizeThatFits:]
  -[CKNicknamePreviewView beginAnimation]
  -[CKNicknamePreviewView avatarItemProviderConfiguration]
  -[CKNicknamePreviewView setAvatarViews:]
  -[CKNicknamePreviewView avatarViews]
  -[CKNicknamePreviewView setShouldStopAnimation:]
  -[CKNicknamePreviewView didMoveToWindow]
  -[CKNicknamePreviewView setBalloonView:]
  -[CKNicknamePreviewView balloonText]
  -[CKNicknamePreviewView setSenderLabel:]
  -[CKNicknamePreviewView contact]
  -[CKNicknamePreviewView initWithContact:avatarRecord:]


CKVibrantBalloonContainerView : UIView
  // instance methods
  -[CKVibrantBalloonContainerView .cxx_destruct]
  -[CKVibrantBalloonContainerView _commonInitWithVibrantBalloon:]
  -[CKVibrantBalloonContainerView _setupVisualEffectViews]
  -[CKVibrantBalloonContainerView initWithTextBalloonView:frame:]
  -[CKVibrantBalloonContainerView initWithAudioBallonView:frame:]
  -[CKVibrantBalloonContainerView setVibrancyEffect:]
  -[CKVibrantBalloonContainerView setColorOverlay:]
  -[CKVibrantBalloonContainerView layoutSubviews]
  -[CKVibrantBalloonContainerView sizeThatFits:]
  -[CKVibrantBalloonContainerView setBlurEffect:]
  -[CKVibrantBalloonContainerView intrinsicContentSize]


CKAppGrabberCloseButton : UIButton
  // instance methods
  -[CKAppGrabberCloseButton pointInside:withEvent:]


CKAppGrabberView : UIView
 @property  <CKAppGrabberViewDelegate> *delegate
 @property  BOOL showsGrabberPill
 @property  BOOL showsAppTitle
 @property  UIButton *closeButton
 @property  BOOL roundsTopCorners
 @property  double visualOriginYOffset
 @property  double chevronMaxYOffset

  // class methods
  +[CKAppGrabberView roundedCornerRadius]
  +[CKAppGrabberView compactRoundedCornerRadius]

  // instance methods
  -[CKAppGrabberView .cxx_destruct]
  -[CKAppGrabberView showsGrabberPill]
  -[CKAppGrabberView updateHeaderFrame:]
  -[CKAppGrabberView closeButtonTapped:]
  -[CKAppGrabberView updateIconImageView:]
  -[CKAppGrabberView visualOriginYOffset]
  -[CKAppGrabberView chevronMaxYOffset]
  -[CKAppGrabberView chevronMaxYInView:]
  -[CKAppGrabberView showsAppTitle]
  -[CKAppGrabberView layoutSubviews]
  -[CKAppGrabberView setShowsAppTitle:]
  -[CKAppGrabberView setShowsGrabberPill:]
  -[CKAppGrabberView setDelegate:]
  -[CKAppGrabberView updateAppTitle:icon:appIdentifier:]
  -[CKAppGrabberView setRoundsTopCorners:]
  -[CKAppGrabberView roundsTopCorners]
  -[CKAppGrabberView visualOriginYInView:]
  -[CKAppGrabberView headerView]
  -[CKAppGrabberView initWithFrame:]
  -[CKAppGrabberView delegate]
  -[CKAppGrabberView iconImageView]
  -[CKAppGrabberView closeButton]


CKNavigationBarCanvasView : UIView <UIContextMenuInteractionDelegate>
 @property  CKNavigationButtonView *buttonViewFaceTimeAudio
 @property  CKNavigationButtonView *buttonViewFaceTimeVideo
 @property  CKNavigationButtonView *buttonViewInfo
 @property  NSMutableArray *buttonsToDisplay
 @property  UIImageView *statusIndicatorImageView
 @property  BOOL isTearingDownButtonViews
 @property  BOOL isAnimatingAvatars
 @property  BOOL ignoreNextWidthChange
 @property  UIButton *invisibleContextMenuButton
 @property  UIContextMenuInteraction *secondaryTitleInteraction
 @property  UIColor *titleDefaultBackgroundColor
 @property  <CKNavigationBarCanvasViewDelegate> *delegate
 @property  UIView *titleView
 @property  UIView *leftItemView
 @property  UIView *rightItemView
 @property  double preferredHeight
 @property  BOOL enforceLeftItemViewsAlignmentToCenter
 @property  BOOL keepTitleViewCentered
 @property  BOOL isBusinessChat
 @property  BOOL videoEnabled
 @property  BOOL audioEnabled
 @property  BOOL expanseEnabled
 @property  BOOL shouldAnimateAvatarLayoutChanges
 @property  BOOL isInEditingMode
 @property  BOOL isShowingControls
 @property  BOOL multiwayAudioButtonHidden
 @property  long long statusIndicatorType
 @property  long long joinButtonStyle
 @property  UIMenu *titleViewContextMenu
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKNavigationBarCanvasView minHeight]
  +[CKNavigationBarCanvasView heightWithButtonViews]
  +[CKNavigationBarCanvasView preferredLandscapeHeightForRegularWidth]
  +[CKNavigationBarCanvasView preferredLandscapeHeightForCompactWidth]
  +[CKNavigationBarCanvasView heightWithoutButtonViews]
  +[CKNavigationBarCanvasView heightWithButtonViewsContactless]
  +[CKNavigationBarCanvasView heightWithoutButtonViewsContactless]
  +[CKNavigationBarCanvasView maxHeight]

  // instance methods
  -[CKNavigationBarCanvasView hitTest:withEvent:]
  -[CKNavigationBarCanvasView setPreferredHeight:]
  -[CKNavigationBarCanvasView titleView]
  -[CKNavigationBarCanvasView contextMenuInteraction:configurationForMenuAtLocation:]
  -[CKNavigationBarCanvasView setExpanseEnabled:]
  -[CKNavigationBarCanvasView .cxx_destruct]
  -[CKNavigationBarCanvasView clearAllItemViews]
  -[CKNavigationBarCanvasView isShowingControls]
  -[CKNavigationBarCanvasView setAudioEnabled:]
  -[CKNavigationBarCanvasView setTitleView:]
  -[CKNavigationBarCanvasView buttonViewInfo]
  -[CKNavigationBarCanvasView setFrame:]
  -[CKNavigationBarCanvasView setIsAnimatingAvatars:]
  -[CKNavigationBarCanvasView setIgnoreNextWidthChange:]
  -[CKNavigationBarCanvasView setButtonsToDisplay:]
  -[CKNavigationBarCanvasView setShouldAnimateAvatarLayoutChanges:]
  -[CKNavigationBarCanvasView layoutSubviews]
  -[CKNavigationBarCanvasView removeButtonViewsIfNeeded]
  -[CKNavigationBarCanvasView multiwayAudioButtonHidden]
  -[CKNavigationBarCanvasView videoEnabled]
  -[CKNavigationBarCanvasView _updateJoinButtonStyle]
  -[CKNavigationBarCanvasView _calculateFrameForButton:shouldOffset:]
  -[CKNavigationBarCanvasView joinButtonStyle]
  -[CKNavigationBarCanvasView _setupButtonContainer]
  -[CKNavigationBarCanvasView _tearDownButtonContainer]
  -[CKNavigationBarCanvasView buttonsToDisplay]
  -[CKNavigationBarCanvasView initWithFrame:preferredHeight:]
  -[CKNavigationBarCanvasView setMultiwayAudioButtonHidden:]
  -[CKNavigationBarCanvasView setKeepTitleViewCentered:]
  -[CKNavigationBarCanvasView buttonViewFaceTimeAudio]
  -[CKNavigationBarCanvasView buttonViewFaceTimeVideo]
  -[CKNavigationBarCanvasView setButtonViewFaceTimeAudio:]
  -[CKNavigationBarCanvasView setIsTearingDownButtonViews:]
  -[CKNavigationBarCanvasView setButtonViewFaceTimeVideo:]
  -[CKNavigationBarCanvasView setButtonViewInfo:]
  -[CKNavigationBarCanvasView setTitleDefaultBackgroundColor:]
  -[CKNavigationBarCanvasView setIsShowingControls:]
  -[CKNavigationBarCanvasView invisibleContextMenuButton]
  -[CKNavigationBarCanvasView setInvisibleContextMenuButton:]
  -[CKNavigationBarCanvasView setSecondaryTitleInteraction:]
  -[CKNavigationBarCanvasView secondaryTitleInteraction]
  -[CKNavigationBarCanvasView didHoverOverTitleView:]
  -[CKNavigationBarCanvasView titleViewContextMenu]
  -[CKNavigationBarCanvasView titleDefaultBackgroundColor]
  -[CKNavigationBarCanvasView _addLaserEffectToButton:]
  -[CKNavigationBarCanvasView shouldAnimateAvatarLayoutChanges]
  -[CKNavigationBarCanvasView ignoreNextWidthChange]
  -[CKNavigationBarCanvasView isAnimatingAvatars]
  -[CKNavigationBarCanvasView systemMinimumLayoutMarginsFromDelegate]
  -[CKNavigationBarCanvasView enforceLeftItemViewsAlignmentToCenter]
  -[CKNavigationBarCanvasView keepTitleViewCentered]
  -[CKNavigationBarCanvasView layoutTitleViewIfNeeded:]
  -[CKNavigationBarCanvasView isTearingDownButtonViews]
  -[CKNavigationBarCanvasView setVideoEnabled:]
  -[CKNavigationBarCanvasView setTitleViewContextMenu:]
  -[CKNavigationBarCanvasView setJoinButtonStyle:]
  -[CKNavigationBarCanvasView setDelegate:]
  -[CKNavigationBarCanvasView isInEditingMode]
  -[CKNavigationBarCanvasView setIsBusinessChat:]
  -[CKNavigationBarCanvasView audioEnabled]
  -[CKNavigationBarCanvasView setStatusIndicatorType:]
  -[CKNavigationBarCanvasView setEnforceLeftItemViewsAlignmentToCenter:]
  -[CKNavigationBarCanvasView expanseEnabled]
  -[CKNavigationBarCanvasView leftItemView]
  -[CKNavigationBarCanvasView rightItemView]
  -[CKNavigationBarCanvasView sizeThatFits:]
  -[CKNavigationBarCanvasView safeAreaInsets]
  -[CKNavigationBarCanvasView initWithFrame:]
  -[CKNavigationBarCanvasView __im_ff_isExpanseEnabled]
  -[CKNavigationBarCanvasView delegate]
  -[CKNavigationBarCanvasView statusIndicatorImageView]
  -[CKNavigationBarCanvasView setStatusIndicatorImageView:]
  -[CKNavigationBarCanvasView statusIndicatorType]
  -[CKNavigationBarCanvasView preferredHeight]
  -[CKNavigationBarCanvasView isBusinessChat]
  -[CKNavigationBarCanvasView _canShowAvatarView]
  -[CKNavigationBarCanvasView setIsInEditingMode:]
  -[CKNavigationBarCanvasView setLeftItemView:]
  -[CKNavigationBarCanvasView setRightItemView:]


CKTranscriptReportSpamCell : CKTranscriptLabelCell
 @property  UILabel *internalPhishingWarningLabel
 @property  NSAttributedString *attributedButtonText
 @property  UIButton *reportSpamButton
 @property  BOOL showReportSMSSpam

  // class methods
  +[CKTranscriptReportSpamCell internalPhishingWarningLabel]
  +[CKTranscriptReportSpamCell internalPhishingWarning]
  +[CKTranscriptReportSpamCell reportSpamButton]

  // instance methods
  -[CKTranscriptReportSpamCell clearFilters]
  -[CKTranscriptReportSpamCell setAttributedButtonText:]
  -[CKTranscriptReportSpamCell setShowReportSMSSpam:]
  -[CKTranscriptReportSpamCell .cxx_destruct]
  -[CKTranscriptReportSpamCell showReportSMSSpam]
  -[CKTranscriptReportSpamCell setReportSpamButton:]
  -[CKTranscriptReportSpamCell internalPhishingWarningLabel]
  -[CKTranscriptReportSpamCell attributedButtonText]
  -[CKTranscriptReportSpamCell prepareForReuse]
  -[CKTranscriptReportSpamCell addFilter:]
  -[CKTranscriptReportSpamCell initWithFrame:]
  -[CKTranscriptReportSpamCell configureForChatItem:context:]
  -[CKTranscriptReportSpamCell reportSpamButton]
  -[CKTranscriptReportSpamCell layoutSubviewsForAlignmentContents]


CKAnimatedImage : NSObject
 @property  UIImage *image
 @property  NSArray *durations
 @property  {CGSize=dd} size
 @property  double scale

  // class methods
  +[CKAnimatedImage _writeImagesWithDurations:toCPBitmapURL:imageProvider:frameProcessor:]
  +[CKAnimatedImage imageWithContentsOfCPBitmapURL:]
  +[CKAnimatedImage animatedImageWithASTCData:]
  +[CKAnimatedImage _writeImagesWithDurations:toOutputStream:imageProvider:frameProcessor:]
  +[CKAnimatedImage ASTCDataForImagesWithDurations:imageProvider:]
  +[CKAnimatedImage filenameExtension]
  +[CKAnimatedImage animatedImageWithContentsOfASTCURL:]
  +[CKAnimatedImage animatedImageWithContentsOfCPBitmapURL:]
  +[CKAnimatedImage writeImagesWithDurations:toASTCURL:imageProvider:]
  +[CKAnimatedImage writeImagesWithDurations:toCPBitmapURL:imageProvider:]
  +[CKAnimatedImage writeImagesWithDurations:toASTCURL:imageProvider:frameProcessor:]
  +[CKAnimatedImage writeImagesWithDurations:toCPBitmapURL:imageProvider:frameProcessor:]

  // instance methods
  -[CKAnimatedImage writeToASTCURL:]
  -[CKAnimatedImage writeToCPBitmapURL:]
  -[CKAnimatedImage image]
  -[CKAnimatedImage .cxx_destruct]
  -[CKAnimatedImage frames]
  -[CKAnimatedImage _initWithImage:durations:]
  -[CKAnimatedImage durations]
  -[CKAnimatedImage setDurations:]
  -[CKAnimatedImage setImage:]
  -[CKAnimatedImage size]
  -[CKAnimatedImage scale]
  -[CKAnimatedImage initWithImages:durations:]


CKQuickLookThumbnailMediaObject : CKMediaObject
  // class methods
  +[CKQuickLookThumbnailMediaObject isPreviewable]
  +[CKQuickLookThumbnailMediaObject __ck_attachmentItemClass]
  +[CKQuickLookThumbnailMediaObject UTITypes]

  // instance methods
  -[CKQuickLookThumbnailMediaObject attachmentSummary:]
  -[CKQuickLookThumbnailMediaObject previewForWidth:orientation:]
  -[CKQuickLookThumbnailMediaObject diskCachedThumbnailForOrientation:]
  -[CKQuickLookThumbnailMediaObject shouldSuppressPreview]


CKTranscriptBlockContactCell : CKTranscriptLabelCell
 @property  NSAttributedString *attributedButtonText
 @property  UIButton *blockContactButton

  // class methods
  +[CKTranscriptBlockContactCell blockContactButton]

  // instance methods
  -[CKTranscriptBlockContactCell clearFilters]
  -[CKTranscriptBlockContactCell setAttributedButtonText:]
  -[CKTranscriptBlockContactCell .cxx_destruct]
  -[CKTranscriptBlockContactCell attributedButtonText]
  -[CKTranscriptBlockContactCell setBlockContactButton:]
  -[CKTranscriptBlockContactCell addFilter:]
  -[CKTranscriptBlockContactCell initWithFrame:]
  -[CKTranscriptBlockContactCell configureForChatItem:context:]
  -[CKTranscriptBlockContactCell blockContactButton]
  -[CKTranscriptBlockContactCell layoutSubviewsForAlignmentContents]


CKSyncController : NSObject
 @property  BOOL restoring

  // class methods
  +[CKSyncController sharedInstance]

  // instance methods
  -[CKSyncController isRestoring]
  -[CKSyncController prioritizeAttachmentAtPath:]
  -[CKSyncController init]
  -[CKSyncController updateRestoreState]
  -[CKSyncController attachmentRestored]
  -[CKSyncController postAttachmentRestored]
  -[CKSyncController setRestoring:]


CKSceneController : NSObject <UNUserNotificationCenterDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKSceneController userNotificationCenter:willPresentNotification:withCompletionHandler:]
  -[CKSceneController _suppressionContextsForChatIdentifier:personCentricID:]
  -[CKSceneController alertSuppressionContextsFromForegroundActiveScenes]
  -[CKSceneController messagesSceneDelegate]
  -[CKSceneController shouldSuppressNotificationForMessageWithRelevantContext:withAlertSupressionContextForScenes:]


CKLocationShareActionChatItem : CKMultilineStampChatItem
  // instance methods
  -[CKLocationShareActionChatItem direction]
  -[CKLocationShareActionChatItem sender]
  -[CKLocationShareActionChatItem actionType]
  -[CKLocationShareActionChatItem handle]
  -[CKLocationShareActionChatItem loadTranscriptText]


CKActionMenuItemImageView : UIImageView <CKActionMenuItemView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKActionMenuItemImageView setHighlighted:]
  -[CKActionMenuItemImageView setHighlighted:animated:]
  -[CKActionMenuItemImageView setEnabled:animated:]
  -[CKActionMenuItemImageView .cxx_destruct]
  -[CKActionMenuItemImageView updateTintColor]
  -[CKActionMenuItemImageView initWithImage:tintColor:highlightedTintColor:]


CKActionMenuItem : NSObject
 @property  UIView<CKActionMenuItemView> *view
 @property  UILabel<CKActionMenuItemView> *label
 @property  id target
 @property  SEL action
 @property  BOOL enabled
 @property  BOOL highlighted
 @property  BOOL selected

  // class methods
  +[CKActionMenuItem animate:completion:]
  +[CKActionMenuItem itemWithImageTemplate:tintColor:highlightedTintColor:target:action:]

  // instance methods
  -[CKActionMenuItem setHighlighted:]
  -[CKActionMenuItem label]
  -[CKActionMenuItem setHighlighted:animated:]
  -[CKActionMenuItem setSelected:animated:]
  -[CKActionMenuItem setEnabled:animated:]
  -[CKActionMenuItem .cxx_destruct]
  -[CKActionMenuItem setAction:]
  -[CKActionMenuItem initWithView:label:target:action:]
  -[CKActionMenuItem init]
  -[CKActionMenuItem view]
  -[CKActionMenuItem sendAction]
  -[CKActionMenuItem action]
  -[CKActionMenuItem isHighlighted]
  -[CKActionMenuItem setView:]
  -[CKActionMenuItem setSelected:]
  -[CKActionMenuItem setTarget:]
  -[CKActionMenuItem isSelected]
  -[CKActionMenuItem isEnabled]
  -[CKActionMenuItem target]
  -[CKActionMenuItem setLabel:]
  -[CKActionMenuItem setEnabled:]
  -[CKActionMenuItem updateForState:touchInside:]


_CKAvatarCutoutSupplementaryView : UICollectionReusableView
  // class methods
  +[_CKAvatarCutoutSupplementaryView supplementaryViewKind]
  +[_CKAvatarCutoutSupplementaryView reuseIdentifier]

  // instance methods
  -[_CKAvatarCutoutSupplementaryView initWithFrame:]


CKAvatarCollectionViewCell : UICollectionViewCell
 @property  CKAvatarView *avatarView

  // class methods
  +[CKAvatarCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKAvatarCollectionViewCell setAvatarView:]
  -[CKAvatarCollectionViewCell .cxx_destruct]
  -[CKAvatarCollectionViewCell avatarView]
  -[CKAvatarCollectionViewCell layoutSubviews]
  -[CKAvatarCollectionViewCell prepareForReuse]
  -[CKAvatarCollectionViewCell configureWithEntity:]
  -[CKAvatarCollectionViewCell initWithFrame:]


CKSMSComposeQueuingRemoteViewControllerProxy : NSObject
 @property  NSMutableArray *queuedInvocations
 @property  <CKSMSCompose> *serviceViewControllerProxy

  // instance methods
  -[CKSMSComposeQueuingRemoteViewControllerProxy setServiceViewControllerProxy:]
  -[CKSMSComposeQueuingRemoteViewControllerProxy methodSignatureForSelector:]
  -[CKSMSComposeQueuingRemoteViewControllerProxy .cxx_destruct]
  -[CKSMSComposeQueuingRemoteViewControllerProxy init]
  -[CKSMSComposeQueuingRemoteViewControllerProxy queuedInvocations]
  -[CKSMSComposeQueuingRemoteViewControllerProxy serviceViewControllerProxy]
  -[CKSMSComposeQueuingRemoteViewControllerProxy dealloc]
  -[CKSMSComposeQueuingRemoteViewControllerProxy setQueuedInvocations:]
  -[CKSMSComposeQueuingRemoteViewControllerProxy forwardInvocation:]


CKSMSComposeController : UIViewController <CKSMSCompose, CKSMSComposeRemoteViewControllerDelegate>
 @property  BOOL firstItemWasInserted
 @property  id delegate
 @property  CKSMSComposeRemoteViewController *remoteViewController
 @property  CKSMSComposeQueuingRemoteViewControllerProxy *remoteViewControllerProxy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSMSComposeController acceptsMIMEType:]
  +[CKSMSComposeController maxTrimDurationForAudio]
  +[CKSMSComposeController maxTrimDurationForVideo]
  +[CKSMSComposeController canSendPhotos:videos:audioClips:]

  // instance methods
  -[CKSMSComposeController shouldAutorotateToInterfaceOrientation:]
  -[CKSMSComposeController forceMMS]
  -[CKSMSComposeController automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers]
  -[CKSMSComposeController remoteViewController]
  -[CKSMSComposeController viewServiceDidTerminateWithError:]
  -[CKSMSComposeController .cxx_destruct]
  -[CKSMSComposeController viewDidLoad]
  -[CKSMSComposeController setDelegate:]
  -[CKSMSComposeController setContentText:]
  -[CKSMSComposeController viewDidAppear:]
  -[CKSMSComposeController setUTIs:]
  -[CKSMSComposeController init]
  -[CKSMSComposeController initWithNavigationController:]
  -[CKSMSComposeController _addRemoteVCIfNeeded]
  -[CKSMSComposeController canInsertMessage]
  -[CKSMSComposeController setRemoteViewControllerProxy:]
  -[CKSMSComposeController remoteViewControllerProxy]
  -[CKSMSComposeController insertMessage:]
  -[CKSMSComposeController insertRichLinkWithURL:andData:]
  -[CKSMSComposeController insertItemForSendingAndCalculateEntryViewFrame:withAlternateFilename:completion:]
  -[CKSMSComposeController firstItemWasInserted]
  -[CKSMSComposeController setFirstItemWasInserted:]
  -[CKSMSComposeController setRemoteViewController:]
  -[CKSMSComposeController viewWillDisappear:]
  -[CKSMSComposeController setCanEditRecipients:]
  -[CKSMSComposeController insertData:MIMEType:exportedFilename:]
  -[CKSMSComposeController smsComposeControllerDataInserted]
  -[CKSMSComposeController smsComposeControllerEntryViewContentInserted]
  -[CKSMSComposeController setNavBarTitle:]
  -[CKSMSComposeController setGameCenterPickedHandles:playerNames:]
  -[CKSMSComposeController viewWillAppear:]
  -[CKSMSComposeController insertAttachmentWithURL:andDescription:]
  -[CKSMSComposeController setText:subject:addresses:chatGUID:groupName:]
  -[CKSMSComposeController delegate]
  -[CKSMSComposeController setText:subject:addresses:]
  -[CKSMSComposeController setContentURLs:]
  -[CKSMSComposeController setPendingAddresses:]
  -[CKSMSComposeController setCloudPhotoIDs:]
  -[CKSMSComposeController setShouldDisableEntryField:]
  -[CKSMSComposeController disableCameraAttachments]
  -[CKSMSComposeController setTextEntryContentsVisible:]
  -[CKSMSComposeController smsComposeControllerAppeared]
  -[CKSMSComposeController smsComposeControllerShouldSendMessageWithText:toRecipients:completion:]
  -[CKSMSComposeController smsComposeControllerSendStartedWithText:]
  -[CKSMSComposeController smsComposeControllerCancelled]
  -[CKSMSComposeController setUICustomizationData:]
  -[CKSMSComposeController setShouldIgnoreEmailsWhenSending:]
  -[CKSMSComposeController setText:subject:addresses:shouldHideClearPluginButton:]
  -[CKSMSComposeController setShareSheetSessionID:]
  -[CKSMSComposeController setText:subject:addresses:shouldHideClearPluginButton:chatGUID:]
  -[CKSMSComposeController showInsertedItemInEntryView]
  -[CKSMSComposeController dealloc]
  -[CKSMSComposeController insertFilename:MIMEType:exportedFilename:options:]
  -[CKSMSComposeController forceCancelComposition]
  -[CKSMSComposeController setGameCenterModeWithPickerBlock:]
  -[CKSMSComposeController viewDidDisappear:]
  -[CKSMSComposeController _canShowWhileLocked]
  -[CKSMSComposeController setPhotoIDs:]


CKBrowserDragViewController : UIViewController <UIGestureRecognizerDelegate, UIDynamicAnimatorDelegate, CKAnimationTimerObserver>
 @property  UILongPressGestureRecognizer *gestureRecognizer
 @property  UIPanGestureRecognizer *panGestureRecognizer
 @property  CKAnimatedImage *dragImage
 @property  NSMutableDictionary *peelMaskImageCache
 @property  UIImage *currentFrameImage
 @property  NSArray *dragImageFrames
 @property  UIView *dragView
 @property  UIView *plusImageView
 @property  UIView *whiteBackground
 @property  CALayer *peelImageLayer
 @property  CALayer *peelMaskLayer
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceRect
 @property  {CGPoint=dd} anchorOffset
 @property  {CGSize=dd} initialSize
 @property  double initialScale
 @property  {CGPoint=dd} initialDragStartPosition
 @property  {CGSize=dd} rasterizedImageSize
 @property  double dragViewScale
 @property  double rotationAngle
 @property  {CGPoint=dd} previousPanLocationInView
 @property  CALayer *shineLayer
 @property  CALayer *shadowLayer
 @property  CALayer *dropShadowLayer
 @property  CALayer *peelLayer
 @property  CALayer *meshLayer
 @property  CALayer *perspectiveLayer
 @property  {CGPoint=dd} meshLayerStartPosition
 @property  {CGPoint=dd} peelLayerStartPosition
 @property  {CGPoint=dd} shineLayerStartPosition
 @property  {CGPoint=dd} shadowLayerStartPosition
 @property  {CGPoint=dd} dropShadowLayerStartPosition
 @property  CADisplayLink *displayLink
 @property  double elasticLastTime
 @property  double elasticRemainingTime
 @property  CKElasticFunction *elasticFunctionPositionX
 @property  CKElasticFunction *elasticFunctionPositionY
 @property  CKElasticFunction *elasticFunctionRotation
 @property  double elasticRotationAngle
 @property  CKElasticFunction *elasticFunctionScaleX
 @property  CKElasticFunction *elasticFunctionScaleY
 @property  double elasticScaleX
 @property  double elasticScaleY
 @property  BOOL pressed
 @property  BOOL scaledDown
 @property  BOOL hasMovedToWindow
 @property  <CKBrowserDragViewControllerDelegate> *delegate
 @property  BOOL canScale
 @property  BOOL canRotate
 @property  BOOL canPeel
 @property  {CGPoint=dd} dragViewCenter
 @property  double dragViewRotation
 @property  double absoluteScale
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKBrowserDragViewController meshTransform]
  +[CKBrowserDragViewController springAnimationWithKeyPath:speed:]
  +[CKBrowserDragViewController supportsForceTouch]

  // instance methods
  -[CKBrowserDragViewController setRotationAngle:]
  -[CKBrowserDragViewController setGestureRecognizer:]
  -[CKBrowserDragViewController gestureRecognizer]
  -[CKBrowserDragViewController canPeel]
  -[CKBrowserDragViewController rotationAngle]
  -[CKBrowserDragViewController dragView]
  -[CKBrowserDragViewController setDisplayLink:]
  -[CKBrowserDragViewController setInitialSize:]
  -[CKBrowserDragViewController dragImage]
  -[CKBrowserDragViewController .cxx_destruct]
  -[CKBrowserDragViewController shadowLayer]
  -[CKBrowserDragViewController commitDrag]
  -[CKBrowserDragViewController sourceRect]
  -[CKBrowserDragViewController viewDidLoad]
  -[CKBrowserDragViewController setPanGestureRecognizer:]
  -[CKBrowserDragViewController setSourceRect:]
  -[CKBrowserDragViewController setDragView:]
  -[CKBrowserDragViewController applicationDidEnterBackground:]
  -[CKBrowserDragViewController setDelegate:]
  -[CKBrowserDragViewController viewDidAppear:]
  -[CKBrowserDragViewController setCanPeel:]
  -[CKBrowserDragViewController setCanRotate:]
  -[CKBrowserDragViewController initWithDragImage:inSourceRect:withSourcePoint:withGestureRecognizer:]
  -[CKBrowserDragViewController setCanScale:]
  -[CKBrowserDragViewController canScale]
  -[CKBrowserDragViewController isScaledDown]
  -[CKBrowserDragViewController panGestureRecognizer]
  -[CKBrowserDragViewController setPlusImageViewHidden:]
  -[CKBrowserDragViewController animateBackToSourceCompletionBlock:]
  -[CKBrowserDragViewController animatePlacementAtPoint:shouldShrink:completionBlock:]
  -[CKBrowserDragViewController shineLayer]
  -[CKBrowserDragViewController meshLayer]
  -[CKBrowserDragViewController initialScale]
  -[CKBrowserDragViewController displayLink]
  -[CKBrowserDragViewController peelLayer]
  -[CKBrowserDragViewController animationTimerFired:]
  -[CKBrowserDragViewController setAnchorOffset:]
  -[CKBrowserDragViewController dragViewScale]
  -[CKBrowserDragViewController initialSize]
  -[CKBrowserDragViewController setDragImage:]
  -[CKBrowserDragViewController scaleImage:toSize:]
  -[CKBrowserDragViewController setPeelMaskImageCache:]
  -[CKBrowserDragViewController reversePeelAnimationToPoint:forPlacement:shouldShrink:completionBlock:]
  -[CKBrowserDragViewController plusImageView]
  -[CKBrowserDragViewController whiteBackground]
  -[CKBrowserDragViewController setPlusImageView:]
  -[CKBrowserDragViewController setWhiteBackground:]
  -[CKBrowserDragViewController setDragImageFrames:]
  -[CKBrowserDragViewController setRasterizedImageSize:]
  -[CKBrowserDragViewController setCurrentFrameImage:]
  -[CKBrowserDragViewController setUpPeelLayers]
  -[CKBrowserDragViewController panGestureRecognized:]
  -[CKBrowserDragViewController setHasMovedToWindow:]
  -[CKBrowserDragViewController animatePeelWithCompletion:]
  -[CKBrowserDragViewController _attachElasticEffectsForLocation:]
  -[CKBrowserDragViewController hasMovedToWindow]
  -[CKBrowserDragViewController _updateElasticEffectsForLocation:]
  -[CKBrowserDragViewController _orbScalingEnabled]
  -[CKBrowserDragViewController setDragViewScale:]
  -[CKBrowserDragViewController dragViewCenter]
  -[CKBrowserDragViewController dragViewRotation]
  -[CKBrowserDragViewController _detachElasticEffects]
  -[CKBrowserDragViewController setPreviousPanLocationInView:]
  -[CKBrowserDragViewController previousPanLocationInView]
  -[CKBrowserDragViewController _displayLinkCallback:]
  -[CKBrowserDragViewController setScaledDown:]
  -[CKBrowserDragViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[CKBrowserDragViewController animateScaleDown]
  -[CKBrowserDragViewController anchorOffset]
  -[CKBrowserDragViewController applyTransforms]
  -[CKBrowserDragViewController rasterizedImageSize]
  -[CKBrowserDragViewController dragViewScaleUp]
  -[CKBrowserDragViewController dragImageFrames]
  -[CKBrowserDragViewController peelImageLayer]
  -[CKBrowserDragViewController peelMaskImageCache]
  -[CKBrowserDragViewController peelMaskLayer]
  -[CKBrowserDragViewController isPressed]
  -[CKBrowserDragViewController gestureRecognized:]
  -[CKBrowserDragViewController peelMaskImageFromImage:]
  -[CKBrowserDragViewController currentFrameImage]
  -[CKBrowserDragViewController setPerspectiveLayer:]
  -[CKBrowserDragViewController setMeshLayer:]
  -[CKBrowserDragViewController setMeshLayerStartPosition:]
  -[CKBrowserDragViewController setPeelLayer:]
  -[CKBrowserDragViewController setPeelLayerStartPosition:]
  -[CKBrowserDragViewController setPeelImageLayer:]
  -[CKBrowserDragViewController setPeelMaskLayer:]
  -[CKBrowserDragViewController setShineLayer:]
  -[CKBrowserDragViewController setShineLayerStartPosition:]
  -[CKBrowserDragViewController setShadowLayer:]
  -[CKBrowserDragViewController setShadowLayerStartPosition:]
  -[CKBrowserDragViewController setDropShadowLayer:]
  -[CKBrowserDragViewController setDropShadowLayerStartPosition:]
  -[CKBrowserDragViewController dropShadowLayer]
  -[CKBrowserDragViewController dropShadowLayerStartPosition]
  -[CKBrowserDragViewController meshLayerStartPosition]
  -[CKBrowserDragViewController elasticScaleX]
  -[CKBrowserDragViewController peelLayerStartPosition]
  -[CKBrowserDragViewController shineLayerStartPosition]
  -[CKBrowserDragViewController shadowLayerStartPosition]
  -[CKBrowserDragViewController manuallyInitializeDragAtPoint:]
  -[CKBrowserDragViewController manuallyUpdateDragPositionToPoint:]
  -[CKBrowserDragViewController delegate]
  -[CKBrowserDragViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKBrowserDragViewController initialDragStartPosition]
  -[CKBrowserDragViewController setInitialDragStartPosition:]
  -[CKBrowserDragViewController perspectiveLayer]
  -[CKBrowserDragViewController elasticLastTime]
  -[CKBrowserDragViewController setElasticLastTime:]
  -[CKBrowserDragViewController elasticRemainingTime]
  -[CKBrowserDragViewController elasticRotationAngle]
  -[CKBrowserDragViewController setElasticRemainingTime:]
  -[CKBrowserDragViewController elasticFunctionPositionX]
  -[CKBrowserDragViewController setElasticFunctionPositionX:]
  -[CKBrowserDragViewController elasticFunctionPositionY]
  -[CKBrowserDragViewController setElasticFunctionPositionY:]
  -[CKBrowserDragViewController elasticScaleY]
  -[CKBrowserDragViewController elasticFunctionRotation]
  -[CKBrowserDragViewController setElasticFunctionRotation:]
  -[CKBrowserDragViewController setElasticRotationAngle:]
  -[CKBrowserDragViewController elasticFunctionScaleX]
  -[CKBrowserDragViewController setElasticFunctionScaleX:]
  -[CKBrowserDragViewController elasticFunctionScaleY]
  -[CKBrowserDragViewController setElasticFunctionScaleY:]
  -[CKBrowserDragViewController setElasticScaleX:]
  -[CKBrowserDragViewController setElasticScaleY:]
  -[CKBrowserDragViewController absoluteScale]
  -[CKBrowserDragViewController canRotate]
  -[CKBrowserDragViewController dealloc]
  -[CKBrowserDragViewController setPressed:]
  -[CKBrowserDragViewController setInitialScale:]
  -[CKBrowserDragViewController updateAnimationTimerObserving]
  -[CKBrowserDragViewController viewDidDisappear:]


CKLargeHitButton : UIButton
 @property  {UIEdgeInsets=dddd} hitTestInsets

  // instance methods
  -[CKLargeHitButton setHitTestInsets:]
  -[CKLargeHitButton hitTestInsets]
  -[CKLargeHitButton pointInside:withEvent:]


CKEffectPickerView : UIView <UICollectionViewDelegate, UICollectionViewDataSource>
 @property  UIView *hintContainer
 @property  UIView *peekContainer
 @property  CABackdropLayer *backdrop
 @property  CALayer *blueContrastLayer
 @property  CKFullScreenEffectManager *fsem
 @property  NSArray *momentIdentifiers
 @property  NSMutableDictionary *animationTimers
 @property  NSMutableDictionary *animatedCells
 @property  NSMutableDictionary *pausedAnimatedCells
 @property  BOOL controlColor
 @property  UIFont *effectLabelFont
 @property  UICollectionView *momentsCollectionView
 @property  UIView *backgroundView
 @property  UIView *roundedView
 @property  NSLayoutConstraint *typeSegmentedControlBottomConstraint
 @property  NSLayoutConstraint *mainLabelBottomConstraint
 @property  NSLayoutConstraint *lastEffectDotTopConstraint
 @property  UIPanGestureRecognizer *panGestureRecognizer
 @property  CKChatControllerDummyAnimator *dummyAnimator
 @property  BOOL needsSwitcherAnimation
 @property  BOOL isInDarkMode
 @property  UIView *hintBlackText
 @property  UIView *hintSendButton
 @property  {CGPoint=dd} balloonViewOrigin
 @property  BOOL isAnimating
 @property  BOOL usesDarkVibrancyForLayers
 @property  UIButton *closeButton
 @property  UIView *roundedContainerView
 @property  CKBalloonView *balloonView
 @property  NSMutableArray *effectLabels
 @property  NSMutableDictionary *effectDotConstraintsThatChange
 @property  unsigned long selectedIndex
 @property  NSMutableArray *effectDotButtons
 @property  NSMutableArray *effectDescriptiveLabels
 @property  NSMutableArray *effectSendButtons
 @property  UIButton *sendMomentButton
 @property  UISegmentedControl *typeSegmentedControl
 @property  NSLayoutConstraint *roundedContainerViewTopConstraint
 @property  NSLayoutConstraint *closeButtonBottomConstraint
 @property  NSMutableArray *effectIdentifiers
 @property  CABackdropLayer *segmentedBackdrop
 @property  UIPageControl *pageControl
 @property  UILabel *mainLabel
 @property  UILabel *momentTitleLabel
 @property  UIView *accessibilityBackdropView
 @property  UIView *accessibilityCloseBackgroundView
 @property  UIView *accessibilitySendBackgroundView
 @property  <CKEffectPickerViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKEffectPickerView shouldUseLargeScreenDimension]

  // instance methods
  -[CKEffectPickerView _applicationDidEnterBackground]
  -[CKEffectPickerView collectionView:cellForItemAtIndexPath:]
  -[CKEffectPickerView collectionView:numberOfItemsInSection:]
  -[CKEffectPickerView backdrop]
  -[CKEffectPickerView fsem]
  -[CKEffectPickerView pageControl]
  -[CKEffectPickerView handleTouchUp:]
  -[CKEffectPickerView traitCollectionDidChange:]
  -[CKEffectPickerView collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[CKEffectPickerView collectionView:willDisplayCell:forItemAtIndexPath:]
  -[CKEffectPickerView invalidateAllAnimationTimers]
  -[CKEffectPickerView initWithFrame:sendButtonFrame:balloonViewOrigin:composition:color:]
  -[CKEffectPickerView _startSwitcherAnimationIfNecessary]
  -[CKEffectPickerView setDummyAnimator:]
  -[CKEffectPickerView selectedIndex]
  -[CKEffectPickerView addEffect:withDescriptiveText:withIdentifier:]
  -[CKEffectPickerView _adjustMainLabelAndTypeSegmentedControlIfNecessary]
  -[CKEffectPickerView startAnimationPreviewForIdentifier:]
  -[CKEffectPickerView _defaultSendAnimationContextForAnimationPreview]
  -[CKEffectPickerView setFsem:]
  -[CKEffectPickerView .cxx_destruct]
  -[CKEffectPickerView updateHintTransition:]
  -[CKEffectPickerView handleTouchMoved:]
  -[CKEffectPickerView balloonViewOrigin]
  -[CKEffectPickerView setBalloonViewOrigin:]
  -[CKEffectPickerView scrollViewDidEndScrollingAnimation:]
  -[CKEffectPickerView blueContrastLayer]
  -[CKEffectPickerView setBlueContrastLayer:]
  -[CKEffectPickerView layoutSubviews]
  -[CKEffectPickerView setPanGestureRecognizer:]
  -[CKEffectPickerView _animateOut]
  -[CKEffectPickerView setDelegate:]
  -[CKEffectPickerView isAnimating]
  -[CKEffectPickerView balloonView]
  -[CKEffectPickerView setSelectedIndex:]
  -[CKEffectPickerView setIsAnimating:]
  -[CKEffectPickerView panGestureRecognizer]
  -[CKEffectPickerView animatedCells]
  -[CKEffectPickerView addAnimationTimerForCell:]
  -[CKEffectPickerView scrollViewDidScroll:]
  -[CKEffectPickerView _applicationWillEnterForeground]
  -[CKEffectPickerView updateColor:]
  -[CKEffectPickerView effectLabelFont]
  -[CKEffectPickerView effectDescriptiveLabels]
  -[CKEffectPickerView typeSegmentedControl]
  -[CKEffectPickerView sendImage]
  -[CKEffectPickerView mainLabel]
  -[CKEffectPickerView cancelImpactSelection]
  -[CKEffectPickerView resetDotConstraintsToDefault]
  -[CKEffectPickerView effectDotButtons]
  -[CKEffectPickerView effectDotConstraintsThatChange]
  -[CKEffectPickerView _touchUpInsideDotButton:]
  -[CKEffectPickerView effectSendButtons]
  -[CKEffectPickerView effectTypeDidChange:]
  -[CKEffectPickerView shouldAnimatePreviousLabelForCancel:]
  -[CKEffectPickerView setCloseButtonYPosition:]
  -[CKEffectPickerView updateViewColors]
  -[CKEffectPickerView safeAreaInsetsDidChange]
  -[CKEffectPickerView setPageControl:]
  -[CKEffectPickerView setBackgroundView:]
  -[CKEffectPickerView delegate]
  -[CKEffectPickerView setCloseButton:]
  -[CKEffectPickerView setBalloonView:]
  -[CKEffectPickerView setBackdrop:]
  -[CKEffectPickerView _animateIn]
  -[CKEffectPickerView dealloc]
  -[CKEffectPickerView roundedView]
  -[CKEffectPickerView setControlColor:]
  -[CKEffectPickerView closeButton]
  -[CKEffectPickerView setIsInDarkMode:]
  -[CKEffectPickerView setHintContainer:]
  -[CKEffectPickerView setPeekContainer:]
  -[CKEffectPickerView setAnimationTimers:]
  -[CKEffectPickerView setMomentIdentifiers:]
  -[CKEffectPickerView peekContainer]
  -[CKEffectPickerView setMomentsCollectionView:]
  -[CKEffectPickerView setMainLabel:]
  -[CKEffectPickerView setTypeSegmentedControl:]
  -[CKEffectPickerView setSegmentedBackdrop:]
  -[CKEffectPickerView pageControlChanged:]
  -[CKEffectPickerView momentIdentifiers]
  -[CKEffectPickerView _touchUpInsideSendMomentButton:]
  -[CKEffectPickerView setSendMomentButton:]
  -[CKEffectPickerView setMomentTitleLabel:]
  -[CKEffectPickerView _touchUpInsideCloseButton:]
  -[CKEffectPickerView _resizeBalloon]
  -[CKEffectPickerView setRoundedContainerView:]
  -[CKEffectPickerView setRoundedView:]
  -[CKEffectPickerView setTypeSegmentedControlBottomConstraint:]
  -[CKEffectPickerView setMainLabelBottomConstraint:]
  -[CKEffectPickerView _keyboardIsOnTopOfEffectPickerWindow]
  -[CKEffectPickerView _panGesture:]
  -[CKEffectPickerView _updateBalloonViewPositionAnimated:]
  -[CKEffectPickerView updateMomentTitle:]
  -[CKEffectPickerView hintBlackText]
  -[CKEffectPickerView setAnimatedCells:]
  -[CKEffectPickerView setPausedAnimatedCells:]
  -[CKEffectPickerView _accessibilityContrastStatusDidChange]
  -[CKEffectPickerView updateViewColors:]
  -[CKEffectPickerView segmentedBackdrop]
  -[CKEffectPickerView momentTitleLabel]
  -[CKEffectPickerView hintContainer]
  -[CKEffectPickerView dummyAnimator]
  -[CKEffectPickerView effectLabels]
  -[CKEffectPickerView accessibilityCloseBackgroundView]
  -[CKEffectPickerView momentsCollectionView]
  -[CKEffectPickerView selectedMomentIndex]
  -[CKEffectPickerView accessibilityBackdropView]
  -[CKEffectPickerView accessibilitySendBackgroundView]
  -[CKEffectPickerView controlColor]
  -[CKEffectPickerView typeSegmentedControlBottomConstraint]
  -[CKEffectPickerView _blackTextReplica]
  -[CKEffectPickerView setHintBlackText:]
  -[CKEffectPickerView setHintSendButton:]
  -[CKEffectPickerView hintSendButton]
  -[CKEffectPickerView _setBalloonText:withColor:]
  -[CKEffectPickerView isInDarkMode]
  -[CKEffectPickerView effectIdentifiers]
  -[CKEffectPickerView setEffectLabels:]
  -[CKEffectPickerView setEffectDescriptiveLabels:]
  -[CKEffectPickerView setEffectDotButtons:]
  -[CKEffectPickerView setEffectSendButtons:]
  -[CKEffectPickerView setEffectIdentifiers:]
  -[CKEffectPickerView setEffectDotConstraintsThatChange:]
  -[CKEffectPickerView _touchUpInsideSendButton:]
  -[CKEffectPickerView lastEffectDotTopConstraint]
  -[CKEffectPickerView setLastEffectDotTopConstraint:]
  -[CKEffectPickerView _setNeedsSwitcherAnimationIfNecessary]
  -[CKEffectPickerView needsSwitcherAnimation]
  -[CKEffectPickerView mainLabelBottomConstraint]
  -[CKEffectPickerView setUsesDarkVibrancyForLayers:]
  -[CKEffectPickerView usesDarkVibrancyForLayers]
  -[CKEffectPickerView animationTimers]
  -[CKEffectPickerView checkAndUpdateForSpotlightEffect:]
  -[CKEffectPickerView removeAnimationTimerForCell:]
  -[CKEffectPickerView _updateMomentsBackgroundColor]
  -[CKEffectPickerView setNeedsSwitcherAnimation:]
  -[CKEffectPickerView _stopBalloonAnimation]
  -[CKEffectPickerView __im_ff_systemImageAdoptionEnabled]
  -[CKEffectPickerView _animateSelectedEffectLabelAtIndex:fromPreviousIndex:]
  -[CKEffectPickerView _animateInSendButton:]
  -[CKEffectPickerView _animateOutSendButton:]
  -[CKEffectPickerView pausedAnimatedCells]
  -[CKEffectPickerView setAccessibilityBackdropView:]
  -[CKEffectPickerView scrollViewDidEndDecelerating:]
  -[CKEffectPickerView setAccessibilityCloseBackgroundView:]
  -[CKEffectPickerView setAccessibilitySendBackgroundView:]
  -[CKEffectPickerView setBalloonText:]
  -[CKEffectPickerView _glyphLayerForButtonAnimationWithGlyphName:]
  -[CKEffectPickerView setEffectLabelFont:]
  -[CKEffectPickerView activateTextSizeDependentConstraintsForSendButtonFrame:]
  -[CKEffectPickerView setCloseButtonBottomConstraint:]
  -[CKEffectPickerView roundedContainerView]
  -[CKEffectPickerView sendMomentButton]
  -[CKEffectPickerView setRoundedContainerViewTopConstraint:]
  -[CKEffectPickerView closeButtonBottomConstraint]
  -[CKEffectPickerView marginBetweenPickerDotButtons]
  -[CKEffectPickerView roundedContainerViewTopConstraint]
  -[CKEffectPickerView _updateBalloonViewOrigin:forButtonFrame:]
  -[CKEffectPickerView _updateRoundedContainerView]
  -[CKEffectPickerView contentSizeCategoryDidChange]
  -[CKEffectPickerView backgroundView]
  -[CKEffectPickerView offsetYForLabelAtIndex:withInitialY:]


CKTransientReplicaButtonContainer : UIView
 @property  UIView *sendButtonCircle
 @property  UIView *cancelButtonCircle
 @property  CALayer *sendButtonGlyphLayer
 @property  CALayer *cancelButtonGlyphLayer

  // instance methods
  -[CKTransientReplicaButtonContainer _invertedCircularFillGlyph:]
  -[CKTransientReplicaButtonContainer _glyphLayerForButtonAnimationWithImage:]
  -[CKTransientReplicaButtonContainer .cxx_destruct]
  -[CKTransientReplicaButtonContainer initWithFrame:hasDarkVibrancy:isInDarkMode:color:sendColor:]
  -[CKTransientReplicaButtonContainer cancelButtonCircle]
  -[CKTransientReplicaButtonContainer cancelButtonGlyphLayer]
  -[CKTransientReplicaButtonContainer sendButtonCircle]
  -[CKTransientReplicaButtonContainer sendButtonGlyphLayer]
  -[CKTransientReplicaButtonContainer __im_ff_systemImageAdoptionEnabled]


CKTranscriptUnavailabilityIndicatorCell : CKTranscriptCell <CKTranscriptCollectionViewCellProtocol, IMUnavailabilityIndicatorChatItemDelegate>
 @property  UILabel *unavailableTitleLabel
 @property  NSAttributedString *unavailableTitleLabelAttributedTextWhenDisplayingNotifyAnywayButton
 @property  NSAttributedString *unavailableTitleLabelAttributedTextWhenNotDisplayingNotifyAnywayButton
 @property  BOOL displayingNotifyAnywayButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKTranscriptUnavailabilityIndicatorCell unavailableTitleLabel]
  +[CKTranscriptUnavailabilityIndicatorCell reuseIdentifier]

  // instance methods
  -[CKTranscriptUnavailabilityIndicatorCell clearFilters]
  -[CKTranscriptUnavailabilityIndicatorCell animationWithKeyPath:beginTime:duration:fromValue:toValue:]
  -[CKTranscriptUnavailabilityIndicatorCell setDisplayingNotifyAnywayButton:]
  -[CKTranscriptUnavailabilityIndicatorCell setUnavailableTitleLabel:]
  -[CKTranscriptUnavailabilityIndicatorCell _updateUnavailableTitleLabelAttributedTextAnimated:]
  -[CKTranscriptUnavailabilityIndicatorCell displayNotifyAnywayButtonStateChanged:]
  -[CKTranscriptUnavailabilityIndicatorCell .cxx_destruct]
  -[CKTranscriptUnavailabilityIndicatorCell displayingNotifyAnywayButton]
  -[CKTranscriptUnavailabilityIndicatorCell unavailableTitleLabel]
  -[CKTranscriptUnavailabilityIndicatorCell unavailableTitleLabelAttributedTextWhenDisplayingNotifyAnywayButton]
  -[CKTranscriptUnavailabilityIndicatorCell unavailableTitleLabelAttributedTextWhenNotDisplayingNotifyAnywayButton]
  -[CKTranscriptUnavailabilityIndicatorCell setUnavailableTitleLabelAttributedTextWhenDisplayingNotifyAnywayButton:]
  -[CKTranscriptUnavailabilityIndicatorCell setUnavailableTitleLabelAttributedTextWhenNotDisplayingNotifyAnywayButton:]
  -[CKTranscriptUnavailabilityIndicatorCell addFilter:]
  -[CKTranscriptUnavailabilityIndicatorCell initWithFrame:]
  -[CKTranscriptUnavailabilityIndicatorCell configureForChatItem:context:]
  -[CKTranscriptUnavailabilityIndicatorCell hidesCheckmark]
  -[CKTranscriptUnavailabilityIndicatorCell performInsertion:]
  -[CKTranscriptUnavailabilityIndicatorCell layoutSubviewsForAlignmentContents]
  -[CKTranscriptUnavailabilityIndicatorCell _fadeInLabelAtStartTime:completion:]


CKPassPreviewMediaObject : CKPassbookMediaObject <CKMediaObjectMetadataPreview>
 @property  LPWebLinkPresentationProperties *presentationProperties
 @property  PKPassSecurePreviewContext *passPreview
 @property  NSURL *overrideFileURL
 @property  NSURL *overrideMetadataProperties
 @property  BOOL supportsPreviewMetadata
 @property  NSString *previewMetadataFilenameExtension

  // class methods
  +[CKPassPreviewMediaObject _paddedImage:]
  +[CKPassPreviewMediaObject isPreviewable]
  +[CKPassPreviewMediaObject _colorFromColorString:]
  +[CKPassPreviewMediaObject _dictionaryRepresentationForColorString:]
  +[CKPassPreviewMediaObject _dictionaryRepresentationForText:colorString:]
  +[CKPassPreviewMediaObject _colorFromDictionaryRepresentation:]
  +[CKPassPreviewMediaObject _updatePresentationPropertiesForRow:representation:]
  +[CKPassPreviewMediaObject _updatePresentationPropertiesForRow:text:color:]
  +[CKPassPreviewMediaObject isSupported]
  +[CKPassPreviewMediaObject shouldUseTranscoderGeneratedPreviewSize]
  +[CKPassPreviewMediaObject _darkenColor:]

  // instance methods
  -[CKPassPreviewMediaObject setPresentationProperties:]
  -[CKPassPreviewMediaObject presentationPropertiesForWidth:orientation:]
  -[CKPassPreviewMediaObject balloonViewClassForWidth:orientation:]
  -[CKPassPreviewMediaObject overrideFileURL]
  -[CKPassPreviewMediaObject generateThumbnailFillToSize:contentAlignmentInsets:]
  -[CKPassPreviewMediaObject fileURL]
  -[CKPassPreviewMediaObject .cxx_destruct]
  -[CKPassPreviewMediaObject setOverrideFileURL:]
  -[CKPassPreviewMediaObject overrideMetadataProperties]
  -[CKPassPreviewMediaObject setPassPreview:]
  -[CKPassPreviewMediaObject previewBalloonViewClass]
  -[CKPassPreviewMediaObject previewMetadata]
  -[CKPassPreviewMediaObject supportsPreviewMetadata]
  -[CKPassPreviewMediaObject previewMetadataFilenameExtension]
  -[CKPassPreviewMediaObject previewMetadataWithContentsOfURL:error:]
  -[CKPassPreviewMediaObject _initWithOverrideFileURL:]
  -[CKPassPreviewMediaObject setOverrideMetadataProperties:]
  -[CKPassPreviewMediaObject writePreviewMetadata:toURL:error:]
  -[CKPassPreviewMediaObject generatePreviewMetadata]
  -[CKPassPreviewMediaObject presentationProperties]
  -[CKPassPreviewMediaObject passPreview]
  -[CKPassPreviewMediaObject generatePreviewOutOfProcess]


CKSMSComposeRemoteViewController : _UIRemoteViewController <CKSMSComposeRemoteViewControllerDelegate>
 @property  <CKSMSComposeRemoteViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSMSComposeRemoteViewController requestViewControllerWithConnectionHandler:]
  +[CKSMSComposeRemoteViewController exportedInterface]
  +[CKSMSComposeRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[CKSMSComposeRemoteViewController viewServiceDidTerminateWithError:]
  -[CKSMSComposeRemoteViewController .cxx_destruct]
  -[CKSMSComposeRemoteViewController setDelegate:]
  -[CKSMSComposeRemoteViewController smsComposeControllerDataInserted]
  -[CKSMSComposeRemoteViewController smsComposeControllerEntryViewContentInserted]
  -[CKSMSComposeRemoteViewController delegate]
  -[CKSMSComposeRemoteViewController smsComposeControllerAppeared]
  -[CKSMSComposeRemoteViewController smsComposeControllerShouldSendMessageWithText:toRecipients:completion:]
  -[CKSMSComposeRemoteViewController smsComposeControllerSendStartedWithText:]
  -[CKSMSComposeRemoteViewController smsComposeControllerCancelled]
  -[CKSMSComposeRemoteViewController dealloc]
  -[CKSMSComposeRemoteViewController _canShowWhileLocked]


CKAvatarView : CNAvatarView
 @property  UIViewController *presentingViewController
 @property  NSString *preferredHandle
 @property  NSString *_ck_contextToken

  // instance methods
  -[CKAvatarView setHighlighted:]
  -[CKAvatarView .cxx_destruct]
  -[CKAvatarView setPresentingViewController:]
  -[CKAvatarView setPreferredHandle:]
  -[CKAvatarView presentingViewController]
  -[CKAvatarView init]
  -[CKAvatarView preferredHandle]
  -[CKAvatarView initWithFrame:]
  -[CKAvatarView _ck_setContextToken:]
  -[CKAvatarView _ck_contextToken]


CKMessagePartChatItem : CKBalloonChatItem
 @property  NSArray *messageAcknowledgments
 @property  IMMessage *message
 @property  long long index
 @property  BOOL color
 @property  NSArray *visibleAssociatedMessageChatItems
 @property  BOOL canSendMessageAcknowledgment
 @property  {_NSRange=QQ} messagePartRange
 @property  BOOL hasMessageAcknowledgment
 @property  BOOL hasStickers
 @property  BOOL isCorrupt
 @property  BOOL isBlackholed
 @property  CKMessagePartHighlightChatItem *messageHighlightChatItem
 @property  BOOL isReply
 @property  BOOL isReplyContextPreview
 @property  NSString *threadIdentifier
 @property  IMMessageItem *threadOriginator
 @property  NSItemProvider *dragItemProvider
 @property  NSArray *pasteboardItemProviders

  // instance methods
  -[CKMessagePartChatItem isCorrupt]
  -[CKMessagePartChatItem aggregateAcknowledgmentChatItem]
  -[CKMessagePartChatItem color]
  -[CKMessagePartChatItem .cxx_destruct]
  -[CKMessagePartChatItem canInlineReply]
  -[CKMessagePartChatItem _isSURFRelatedMessage]
  -[CKMessagePartChatItem tapbackActionButtonImageName]
  -[CKMessagePartChatItem _setVisibleAssociatedMessageChatItems:]
  -[CKMessagePartChatItem canSendMessageAcknowledgment]
  -[CKMessagePartChatItem hasMessageAcknowledgment]
  -[CKMessagePartChatItem sender]
  -[CKMessagePartChatItem initWithIMChatItem:maxWidth:]
  -[CKMessagePartChatItem configureBalloonView:]
  -[CKMessagePartChatItem canCopy]
  -[CKMessagePartChatItem threadOriginator]
  -[CKMessagePartChatItem chatItemReplyLineContiguousTypeForChatStyle:]
  -[CKMessagePartChatItem messageAcknowledgments]
  -[CKMessagePartChatItem isFromMe]
  -[CKMessagePartChatItem isReply]
  -[CKMessagePartChatItem __im_ff_isInterstellarEnabled]
  -[CKMessagePartChatItem time]
  -[CKMessagePartChatItem message]
  -[CKMessagePartChatItem isReplyContextPreview]
  -[CKMessagePartChatItem threadIdentifier]
  -[CKMessagePartChatItem selectedType]
  -[CKMessagePartChatItem index]
  -[CKMessagePartChatItem fileURLForAttachment]
  -[CKMessagePartChatItem dragItemProvider]
  -[CKMessagePartChatItem votingCounts]
  -[CKMessagePartChatItem failed]
  -[CKMessagePartChatItem visibleAssociatedMessageChatItems]
  -[CKMessagePartChatItem canAttachStickers]
  -[CKMessagePartChatItem stickersSnapToPoint]
  -[CKMessagePartChatItem messagePartRange]
  -[CKMessagePartChatItem pasteboardItemProviders]
  -[CKMessagePartChatItem canSendAsTextMessage]
  -[CKMessagePartChatItem shouldShowVotingView]
  -[CKMessagePartChatItem canForward]
  -[CKMessagePartChatItem hasStickers]
  -[CKMessagePartChatItem messageHighlightChatItem]
  -[CKMessagePartChatItem rtfDocumentItemsWithFormatString:selectedTextRange:]
  -[CKMessagePartChatItem compositionWithContext:]
  -[CKMessagePartChatItem isBlackholed]


CKTranscriptMultilineLabelCell : CKTranscriptLabelCell
  // class methods
  +[CKTranscriptMultilineLabelCell label]
  +[CKTranscriptMultilineLabelCell reuseIdentifier]


CKModalTranscriptController : CKShareSheetChatController
 @property  CKChatEagerUploadController *eagerUploadController
 @property  NSMutableArray *deferredInsertMediaObjectBlocks
 @property  BOOL appearCompleted
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frameOfSpaceCoveredByKeyboard
 @property  BOOL mimeType
 @property  BOOL forceMMS

  // instance methods
  -[CKModalTranscriptController registerForNotifications]
  -[CKModalTranscriptController forceMMS]
  -[CKModalTranscriptController messageEntryViewWidth:andOffset:]
  -[CKModalTranscriptController .cxx_destruct]
  -[CKModalTranscriptController _setConversationDeferredSetup]
  -[CKModalTranscriptController setAppearCompleted:]
  -[CKModalTranscriptController setForceMMS:]
  -[CKModalTranscriptController appearCompleted]
  -[CKModalTranscriptController deferredInsertMediaObjectBlocks]
  -[CKModalTranscriptController messageEntryViewShouldBeginEditing:]
  -[CKModalTranscriptController proposedParticipantHandles]
  -[CKModalTranscriptController _insertMediaObjectAndReturnFrame:completion:]
  -[CKModalTranscriptController mimeType]
  -[CKModalTranscriptController viewDidAppear:]
  -[CKModalTranscriptController _insertMediaObject:]
  -[CKModalTranscriptController _offsetForScreenWidth:containerWidth:windowOffset:]
  -[CKModalTranscriptController _setEntryViewVisible:]
  -[CKModalTranscriptController _deviceIsLocked]
  -[CKModalTranscriptController setMimeType:]
  -[CKModalTranscriptController _conversationListDidFinishLoading:]
  -[CKModalTranscriptController _shouldAllowCameraAttachments]
  -[CKModalTranscriptController _shouldUseDefaultFirstResponder]
  -[CKModalTranscriptController _shouldUseExistingConversations]
  -[CKModalTranscriptController sendComposition:]
  -[CKModalTranscriptController shouldDismissAfterSend]
  -[CKModalTranscriptController setDeferredInsertMediaObjectBlocks:]
  -[CKModalTranscriptController frameOfSpaceCoveredByKeyboard]
  -[CKModalTranscriptController setFrameOfSpaceCoveredByKeyboard:]
  -[CKModalTranscriptController initWithNavigationController:]
  -[CKModalTranscriptController setCanEditRecipients:]
  -[CKModalTranscriptController insertData:MIMEType:exportedFilename:]
  -[CKModalTranscriptController hideEntryViewContent:]
  -[CKModalTranscriptController viewWillAppear:]
  -[CKModalTranscriptController insertFileURL:filename:transcoderUserInfo:fullyRealizedPreview:rawPreview:appendedVideoURL:completion:]
  -[CKModalTranscriptController insertRichLinkWithURL:data:]
  -[CKModalTranscriptController _maxEntryViewHeight]
  -[CKModalTranscriptController insertMessage:appProxy:]
  -[CKModalTranscriptController setEagerUploadController:]
  -[CKModalTranscriptController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKModalTranscriptController setPendingAddresses:]
  -[CKModalTranscriptController setShouldDisableEntryField:]
  -[CKModalTranscriptController disableCameraAttachments]
  -[CKModalTranscriptController setTextEntryContentsVisible:]
  -[CKModalTranscriptController setEntryView:]
  -[CKModalTranscriptController eagerUploadController]
  -[CKModalTranscriptController setComposition:]
  -[CKModalTranscriptController keyboardWillChangeFrame:]
  -[CKModalTranscriptController _canShowWhileLocked]


CKTranscriptAbstractLabelCell : CKTranscriptCell
 @property  NSAttributedString *attributedText
 @property  BOOL wantsContactImageLayout
 @property  BOOL wantsOffsetForReplyLine

  // class methods
  +[CKTranscriptAbstractLabelCell sizeThatFits:attributedText:displayScale:]

  // instance methods
  -[CKTranscriptAbstractLabelCell clearFilters]
  -[CKTranscriptAbstractLabelCell setAttributedText:]
  -[CKTranscriptAbstractLabelCell label]
  -[CKTranscriptAbstractLabelCell attributedText]
  -[CKTranscriptAbstractLabelCell wantsDrawerLayout]
  -[CKTranscriptAbstractLabelCell wantsOffsetForReplyLine]
  -[CKTranscriptAbstractLabelCell cellView]
  -[CKTranscriptAbstractLabelCell sizeThatFits:]
  -[CKTranscriptAbstractLabelCell setWantsContactImageLayout:]
  -[CKTranscriptAbstractLabelCell prepareForReuse]
  -[CKTranscriptAbstractLabelCell addFilter:]
  -[CKTranscriptAbstractLabelCell wantsContactImageLayout]
  -[CKTranscriptAbstractLabelCell setWantsOffsetForReplyLine:]
  -[CKTranscriptAbstractLabelCell contentAlignmentRect]
  -[CKTranscriptAbstractLabelCell layoutSubviewsForContents]
  -[CKTranscriptAbstractLabelCell layoutSubviewsForAlignmentContents]


CKMessageReplyCountChatItem : CKMessageStatusChatItem
 @property  unsigned long replyCount

  // instance methods
  -[CKMessageReplyCountChatItem isEditable]
  -[CKMessageReplyCountChatItem transcriptOrientation]
  -[CKMessageReplyCountChatItem buttonType]
  -[CKMessageReplyCountChatItem _loadTranscriptButtonTextForReplyCountButtonType]
  -[CKMessageReplyCountChatItem loadTranscriptButtonText]
  -[CKMessageReplyCountChatItem shouldHideDuringDarkFSM]
  -[CKMessageReplyCountChatItem replyCount]
  -[CKMessageReplyCountChatItem cellClass]


CKTranscriptGroupHeaderView : UIView
 @property  CKConversation *conversation
 @property  CNComposeRecipientTextView *textView
 @property  UIView *separator
 @property  UIButton *actionButton
 @property  _UIBackdropView *backdropView

  // instance methods
  -[CKTranscriptGroupHeaderView setSeparator:]
  -[CKTranscriptGroupHeaderView backdropView]
  -[CKTranscriptGroupHeaderView setBackdropView:]
  -[CKTranscriptGroupHeaderView separator]
  -[CKTranscriptGroupHeaderView textView]
  -[CKTranscriptGroupHeaderView .cxx_destruct]
  -[CKTranscriptGroupHeaderView setActionButton:]
  -[CKTranscriptGroupHeaderView layoutSubviews]
  -[CKTranscriptGroupHeaderView initWithFrame:conversation:]
  -[CKTranscriptGroupHeaderView setTextView:]
  -[CKTranscriptGroupHeaderView setConversation:]
  -[CKTranscriptGroupHeaderView dealloc]
  -[CKTranscriptGroupHeaderView conversation]
  -[CKTranscriptGroupHeaderView actionButton]


CKTranscriptGroupHeaderViewController : CKTranscriptHeaderViewController
 @property  UIButton *headerButton

  // instance methods
  -[CKTranscriptGroupHeaderViewController shouldInvalidateOnAddressBookChange]
  -[CKTranscriptGroupHeaderViewController headerButton]
  -[CKTranscriptGroupHeaderViewController _handleConversationRecipientsChanged:]
  -[CKTranscriptGroupHeaderViewController _groupHeaderComposeRecipients]
  -[CKTranscriptGroupHeaderViewController dealloc]
  -[CKTranscriptGroupHeaderViewController loadView]


CKTranscriptMessageCell : CKTranscriptCell
 @property  UIButton *failureButton
 @property  BOOL chatEligibleForContactImage
 @property  BOOL wantsContactImageLayout
 @property  BOOL isReply
 @property  BOOL isReplyContextPreview
 @property  BOOL isFromMe
 @property  BOOL failed
 @property  BOOL failureButtonAdjustsContentAlignmentRect

  // class methods
  +[CKTranscriptMessageCell failureButtonWidthPlusSpacing]

  // instance methods
  -[CKTranscriptMessageCell chatEligibleForContactImage]
  -[CKTranscriptMessageCell setIsReplyContextPreview:]
  -[CKTranscriptMessageCell .cxx_destruct]
  -[CKTranscriptMessageCell setIsReply:]
  -[CKTranscriptMessageCell setFailureButton:]
  -[CKTranscriptMessageCell contactImageViewFrame]
  -[CKTranscriptMessageCell failureButtonAdjustsContentAlignmentRect]
  -[CKTranscriptMessageCell contactImageView]
  -[CKTranscriptMessageCell setIsFromMe:]
  -[CKTranscriptMessageCell setWantsContactImageLayout:]
  -[CKTranscriptMessageCell isFromMe]
  -[CKTranscriptMessageCell safeAreaInsets]
  -[CKTranscriptMessageCell isReply]
  -[CKTranscriptMessageCell isReplyContextPreview]
  -[CKTranscriptMessageCell setFailed:]
  -[CKTranscriptMessageCell failed]
  -[CKTranscriptMessageCell wantsContactImageLayout]
  -[CKTranscriptMessageCell failureButton]
  -[CKTranscriptMessageCell setChatEligibleForContactImage:]
  -[CKTranscriptMessageCell layoutSubviewsForContents]


CKMediaObjectAssetDataSourceManager : PXAssetsDataSourceManager
 @property  PHMomentShare *momentShare
 @property  NSURL *momentShareURL
 @property  {?=Qq} additionalItemsCount
 @property  CKMediaObjectAssetDataSource *mediaObjectDataSource

  // instance methods
  -[CKMediaObjectAssetDataSourceManager initWithDataSource:]
  -[CKMediaObjectAssetDataSourceManager .cxx_destruct]
  -[CKMediaObjectAssetDataSourceManager _handlePreviewDidChangeNotification:]
  -[CKMediaObjectAssetDataSourceManager _handleMomentShareCacheDidChange:]
  -[CKMediaObjectAssetDataSourceManager setMomentShareURL:]
  -[CKMediaObjectAssetDataSourceManager setMediaObjectDataSource:withChangeDetails:]
  -[CKMediaObjectAssetDataSourceManager _changeDetailsForDataSource:oldDataSource:]
  -[CKMediaObjectAssetDataSourceManager _updateMomentShare]
  -[CKMediaObjectAssetDataSourceManager _additionalCountInMomentShare:representedCounts:]
  -[CKMediaObjectAssetDataSourceManager _setAdditionalItemsCount:]
  -[CKMediaObjectAssetDataSourceManager _mq_handlePreviewDidChangeNotification:]
  -[CKMediaObjectAssetDataSourceManager setMomentShare:]
  -[CKMediaObjectAssetDataSourceManager additionalItemsCount]
  -[CKMediaObjectAssetDataSourceManager mediaObjectDataSource]
  -[CKMediaObjectAssetDataSourceManager _updateAdditionalItemsCount]
  -[CKMediaObjectAssetDataSourceManager setMediaObjectDataSource:]
  -[CKMediaObjectAssetDataSourceManager createInitialDataSource]
  -[CKMediaObjectAssetDataSourceManager momentShare]
  -[CKMediaObjectAssetDataSourceManager momentShareURL]


CKAvatarNavigationBar : UINavigationBar
  // class methods
  +[CKAvatarNavigationBar _supportsCanvasView]

  // instance methods
  -[CKAvatarNavigationBar sizeThatFits:]


CKAttachmentCollectionManager : NSObject
 @property  NSArray *photosVideosItems
 @property  NSArray *webLinksItems
 @property  NSArray *otherContentsItems
 @property  IMChat *chat
 @property  NSSet *photoTransferGUIDs
 @property  <CKAttachmentCollectionManagerDelegate> *delegate

  // instance methods
  -[CKAttachmentCollectionManager chat]
  -[CKAttachmentCollectionManager .cxx_destruct]
  -[CKAttachmentCollectionManager setDelegate:]
  -[CKAttachmentCollectionManager updateCollections]
  -[CKAttachmentCollectionManager chatItemsChanged:]
  -[CKAttachmentCollectionManager initWithChat:photoTransferGUIDs:]
  -[CKAttachmentCollectionManager photosVideosItems]
  -[CKAttachmentCollectionManager otherContentsItems]
  -[CKAttachmentCollectionManager guidFromChatItem:]
  -[CKAttachmentCollectionManager setPhotosVideosItems:]
  -[CKAttachmentCollectionManager setOtherContentsItems:]
  -[CKAttachmentCollectionManager photoTransferGUIDs]
  -[CKAttachmentCollectionManager deleteAttachmentItems:]
  -[CKAttachmentCollectionManager webLinksItems]
  -[CKAttachmentCollectionManager setWebLinksItems:]
  -[CKAttachmentCollectionManager setPhotoTransferGUIDs:]
  -[CKAttachmentCollectionManager initWithChat:]
  -[CKAttachmentCollectionManager setChat:]
  -[CKAttachmentCollectionManager delegate]
  -[CKAttachmentCollectionManager dealloc]


CKAggregateMessagePartChatItem : CKTextMessagePartChatItem
 @property  NSArray *subparts
 @property  NSString *title

  // instance methods
  -[CKAggregateMessagePartChatItem .cxx_destruct]
  -[CKAggregateMessagePartChatItem subparts]
  -[CKAggregateMessagePartChatItem initWithIMChatItem:maxWidth:]
  -[CKAggregateMessagePartChatItem balloonViewClass]
  -[CKAggregateMessagePartChatItem setSubparts:]
  -[CKAggregateMessagePartChatItem title]
  -[CKAggregateMessagePartChatItem loadTranscriptText]
  -[CKAggregateMessagePartChatItem pasteboardItemProviders]
  -[CKAggregateMessagePartChatItem rtfDocumentItemsWithFormatString:selectedTextRange:]
  -[CKAggregateMessagePartChatItem compositionWithContext:]


CKLabel : UILabel
 @property  UIImageView *titleIconImageView
 @property  BOOL shouldHaveRotatedTitleIconImage
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} textRectForAccessoryImageView
 @property  long long titleIconImageType
 @property  NSSet *titleIconImageTypesSupportingRotation

  // instance methods
  -[CKLabel .cxx_destruct]
  -[CKLabel layoutSubviews]
  -[CKLabel setShouldHaveRotatedTitleIconImage:animated:]
  -[CKLabel drawTextInRect:]
  -[CKLabel titleIconImageType]
  -[CKLabel setTitleIconImageView:]
  -[CKLabel titleIconImageTypeSupportsRotation:]
  -[CKLabel setShouldHaveRotatedTitleIconImage:]
  -[CKLabel _rotateTitleIconImageView]
  -[CKLabel hasAccessoryImageView]
  -[CKLabel sizeOfAccessoryImageView]
  -[CKLabel setTextRectForAccessoryImageView:]
  -[CKLabel textRectForAccessoryImageView]
  -[CKLabel rectToDrawTextInForRect:]
  -[CKLabel shouldHaveRotatedTitleIconImage]
  -[CKLabel titleIconImageTypesSupportingRotation]
  -[CKLabel setTitleIconImageTypesSupportingRotation:]
  -[CKLabel sizeThatFits:]
  -[CKLabel setTextColor:]
  -[CKLabel isLTR]
  -[CKLabel titleIconImageView]
  -[CKLabel intrinsicContentSize]
  -[CKLabel setTitleIconImageType:]


CKStaticPhotoStackBalloonView : CKBalloonView
 @property  CKStaticImageStackView *stackView
 @property  NSArray *mediaObjects

  // instance methods
  -[CKStaticPhotoStackBalloonView stackView]
  -[CKStaticPhotoStackBalloonView prepareForDisplay]
  -[CKStaticPhotoStackBalloonView .cxx_destruct]
  -[CKStaticPhotoStackBalloonView setStackView:]
  -[CKStaticPhotoStackBalloonView layoutSubviews]
  -[CKStaticPhotoStackBalloonView stackCornerRadius]
  -[CKStaticPhotoStackBalloonView configureForMessagePart:]
  -[CKStaticPhotoStackBalloonView mediaObjects]
  -[CKStaticPhotoStackBalloonView setMediaObjects:]


CKDetailsTUConversationCell : CKDetailsCell <CKDetailsCell>
 @property  TUConversation *conversation
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UIImageView *iconView
 @property  UIButton *actionButton
 @property  unsigned long state
 @property  double insetPadding
 @property  double buttonInteritemSpacing
 @property  double interitemSpacing
 @property  double buttonTitleHorizontalSpacing
 @property  double buttonTitleVerticalSpacing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsTUConversationCell shouldHighlight]
  +[CKDetailsTUConversationCell reuseIdentifier]

  // instance methods
  -[CKDetailsTUConversationCell updateView]
  -[CKDetailsTUConversationCell titleLabel]
  -[CKDetailsTUConversationCell setSubtitleLabel:]
  -[CKDetailsTUConversationCell initWithStyle:reuseIdentifier:conversation:]
  -[CKDetailsTUConversationCell interitemSpacing]
  -[CKDetailsTUConversationCell .cxx_destruct]
  -[CKDetailsTUConversationCell setupView]
  -[CKDetailsTUConversationCell setActionButton:]
  -[CKDetailsTUConversationCell setTitleLabel:]
  -[CKDetailsTUConversationCell layoutSubviews]
  -[CKDetailsTUConversationCell setState:]
  -[CKDetailsTUConversationCell sizeThatFits:]
  -[CKDetailsTUConversationCell subtitleLabel]
  -[CKDetailsTUConversationCell configureSubtitle]
  -[CKDetailsTUConversationCell formatSubtitleForText]
  -[CKDetailsTUConversationCell configureActionButton]
  -[CKDetailsTUConversationCell formatIconViewForExpanse]
  -[CKDetailsTUConversationCell buttonTitleHorizontalSpacing]
  -[CKDetailsTUConversationCell buttonTitleVerticalSpacing]
  -[CKDetailsTUConversationCell addConstraints]
  -[CKDetailsTUConversationCell state]
  -[CKDetailsTUConversationCell formatTitle]
  -[CKDetailsTUConversationCell setConversation:]
  -[CKDetailsTUConversationCell initWithStyle:reuseIdentifier:]
  -[CKDetailsTUConversationCell actionButtonTapped:]
  -[CKDetailsTUConversationCell insetPadding]
  -[CKDetailsTUConversationCell buttonInteritemSpacing]
  -[CKDetailsTUConversationCell conversation]
  -[CKDetailsTUConversationCell configureIconView]
  -[CKDetailsTUConversationCell formatIconViewForFaceTime]
  -[CKDetailsTUConversationCell _handleMultiWayStateChange:]
  -[CKDetailsTUConversationCell iconView]
  -[CKDetailsTUConversationCell setIconView:]
  -[CKDetailsTUConversationCell actionButton]


CKVideoPreviewViewController : UIViewController
 @property  AVPlayerItem *avPlayerItem
 @property  AVPlayer *avPlayer
 @property  AVPlayerLayer *avPlayerLayer
 @property  BOOL reachedEnd
 @property  <CKVideoPreviewViewControllerDelegate> *videoPreviewDelegate
 @property  BOOL redisplayStatusBar
 @property  BOOL playing

  // instance methods
  -[CKVideoPreviewViewController prefersStatusBarHidden]
  -[CKVideoPreviewViewController play]
  -[CKVideoPreviewViewController isPlaying]
  -[CKVideoPreviewViewController .cxx_destruct]
  -[CKVideoPreviewViewController init]
  -[CKVideoPreviewViewController reachedEnd]
  -[CKVideoPreviewViewController pause]
  -[CKVideoPreviewViewController avPlayer]
  -[CKVideoPreviewViewController setAvPlayerItem:]
  -[CKVideoPreviewViewController setReachedEnd:]
  -[CKVideoPreviewViewController setAvPlayerLayer:]
  -[CKVideoPreviewViewController videoPreviewDelegate]
  -[CKVideoPreviewViewController setVideoFileURL:]
  -[CKVideoPreviewViewController togglePlayPause]
  -[CKVideoPreviewViewController setAvPlayer:]
  -[CKVideoPreviewViewController setVideoPreviewDelegate:]
  -[CKVideoPreviewViewController redisplayStatusBar]
  -[CKVideoPreviewViewController setRedisplayStatusBar:]
  -[CKVideoPreviewViewController avPlayerLayer]
  -[CKVideoPreviewViewController dealloc]
  -[CKVideoPreviewViewController videoDidReachEnd:]
  -[CKVideoPreviewViewController avPlayerItem]
  -[CKVideoPreviewViewController loadView]
  -[CKVideoPreviewViewController observeValueForKeyPath:ofObject:change:context:]


CKPluginDisplayContainer : NSObject <NSSecureCoding>
 @property  IMPluginPayload *pluginPayload
 @property  UIImage *composeImage

  // class methods
  +[CKPluginDisplayContainer supportsSecureCoding]
  +[CKPluginDisplayContainer unarchiveFromData:error:]
  +[CKPluginDisplayContainer pluginDisplayContainerWithPluginPayload:composeImage:]

  // instance methods
  -[CKPluginDisplayContainer initWithCoder:]
  -[CKPluginDisplayContainer .cxx_destruct]
  -[CKPluginDisplayContainer composeImage]
  -[CKPluginDisplayContainer pluginPayload]
  -[CKPluginDisplayContainer setPluginPayload:]
  -[CKPluginDisplayContainer setComposeImage:]
  -[CKPluginDisplayContainer encodeWithCoder:]
  -[CKPluginDisplayContainer pasteboardItemProvider]
  -[CKPluginDisplayContainer rtfDocumentItemsWithFormatString:selectedTextRange:]


CKDetailsAvatarPancakeView : UIView
 @property  CKAvatarView *topAvatar
 @property  CKAvatarView *middleAvatar
 @property  CKAvatarView *bottomAvatar
 @property  UIView *topAvatarCutOutView
 @property  UIView *bottomAvatarCutOutView

  // instance methods
  -[CKDetailsAvatarPancakeView .cxx_destruct]
  -[CKDetailsAvatarPancakeView topAvatar]
  -[CKDetailsAvatarPancakeView sizeThatFits:]
  -[CKDetailsAvatarPancakeView addConstraints]
  -[CKDetailsAvatarPancakeView initWithSize:avatarViews:]
  -[CKDetailsAvatarPancakeView setTopAvatar:]
  -[CKDetailsAvatarPancakeView setMiddleAvatar:]
  -[CKDetailsAvatarPancakeView middleAvatar]
  -[CKDetailsAvatarPancakeView setBottomAvatar:]
  -[CKDetailsAvatarPancakeView bottomAvatar]
  -[CKDetailsAvatarPancakeView createAvatarCutOutView]
  -[CKDetailsAvatarPancakeView setTopAvatarCutOutView:]
  -[CKDetailsAvatarPancakeView topAvatarCutOutView]
  -[CKDetailsAvatarPancakeView setBottomAvatarCutOutView:]
  -[CKDetailsAvatarPancakeView bottomAvatarCutOutView]


CKSyndicationPageViewController : UIViewController <UIPageViewControllerDataSource, UIPageViewControllerDelegate, UIGestureRecognizerDelegate>
 @property  NSMutableArray *pageContent
 @property  double buttonTrayHeight
 @property  UIPageViewController *pageViewController
 @property  UIPageControl *pageControl
 @property  <CKSyndicationOnboardingPageViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKSyndicationPageViewController pageControl]
  -[CKSyndicationPageViewController pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:]
  -[CKSyndicationPageViewController setPageViewController:]
  -[CKSyndicationPageViewController .cxx_destruct]
  -[CKSyndicationPageViewController pageContent]
  -[CKSyndicationPageViewController pageViewController:viewControllerBeforeViewController:]
  -[CKSyndicationPageViewController viewDidLoad]
  -[CKSyndicationPageViewController pageViewController:viewControllerAfterViewController:]
  -[CKSyndicationPageViewController pageViewController]
  -[CKSyndicationPageViewController pageViewController:willTransitionToViewControllers:]
  -[CKSyndicationPageViewController setDelegate:]
  -[CKSyndicationPageViewController createContentPages]
  -[CKSyndicationPageViewController viewDidLayoutSubviews]
  -[CKSyndicationPageViewController viewControllerAtIndex:]
  -[CKSyndicationPageViewController setPageContent:]
  -[CKSyndicationPageViewController buttonTrayHeight]
  -[CKSyndicationPageViewController setButtonTrayHeight:]
  -[CKSyndicationPageViewController setPageControl:]
  -[CKSyndicationPageViewController indexOfViewController:]
  -[CKSyndicationPageViewController delegate]
  -[CKSyndicationPageViewController pageControlChanged:]


CKMacToolbarView : UIView
 @property  <CKMacToolbarViewDelegate> *delegate

  // instance methods
  -[CKMacToolbarView .cxx_destruct]
  -[CKMacToolbarView setDelegate:]
  -[CKMacToolbarView pointInside:withEvent:]
  -[CKMacToolbarView delegate]


CKImageAnimationTimer : NSObject
 @property  NSMutableSet *observers
 @property  CADisplayLink *displayLink
 @property  NSDate *startTime
 @property  BOOL shouldStopWhenBackgrounded

  // class methods
  +[CKImageAnimationTimer sharedTimer]

  // instance methods
  -[CKImageAnimationTimer setDisplayLink:]
  -[CKImageAnimationTimer setStartTime:]
  -[CKImageAnimationTimer .cxx_destruct]
  -[CKImageAnimationTimer setObservers:]
  -[CKImageAnimationTimer init]
  -[CKImageAnimationTimer displayLink]
  -[CKImageAnimationTimer removeAnimationTimerObserver:]
  -[CKImageAnimationTimer addAnimationTimerObserver:]
  -[CKImageAnimationTimer startTime]
  -[CKImageAnimationTimer __im_ff_psEnabled]
  -[CKImageAnimationTimer shouldStopWhenBackgrounded]
  -[CKImageAnimationTimer animationTimerFired]
  -[CKImageAnimationTimer frame]
  -[CKImageAnimationTimer observers]
  -[CKImageAnimationTimer setShouldStopWhenBackgrounded:]
  -[CKImageAnimationTimer dealloc]
  -[CKImageAnimationTimer updateDisplayLink]


CKCardMediaObject : CKMediaObject
  // instance methods
  -[CKCardMediaObject shouldShowViewer]
  -[CKCardMediaObject shouldShowDisclosure]
  -[CKCardMediaObject shouldBeQuickLooked]


CKAudioPlayer : NSObject <CKInternalAudioPlayerDelegate>
 @property  CKMediaObject *mediaObject
 @property  CKInternalAudioPlayer *audioPlayer
 @property  CADisplayLink *displayLink
 @property  double prevCurrentTime
 @property  @? block
 @property  <CKAudioPlayerDelegate> *delegate
 @property  BOOL usesAVPlayer
 @property  BOOL playing
 @property  double currentTime
 @property  double duration
 @property  float volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAudioPlayer setBlock:]
  -[CKAudioPlayer volume]
  -[CKAudioPlayer isPlaying]
  -[CKAudioPlayer setVolume:]
  -[CKAudioPlayer setMediaObject:]
  -[CKAudioPlayer setDisplayLink:]
  -[CKAudioPlayer .cxx_destruct]
  -[CKAudioPlayer mediaObject]
  -[CKAudioPlayer playAfterDelay:completion:]
  -[CKAudioPlayer initWithFileURL:]
  -[CKAudioPlayer initWithMediaObject:shouldUseAVPlayer:]
  -[CKAudioPlayer stop]
  -[CKAudioPlayer setDelegate:]
  -[CKAudioPlayer setCurrentTime:]
  -[CKAudioPlayer prepareToPlay]
  -[CKAudioPlayer setAudioPlayer:]
  -[CKAudioPlayer initWithMediaObject:]
  -[CKAudioPlayer audioPlayer]
  -[CKAudioPlayer displayLink]
  -[CKAudioPlayer pause]
  -[CKAudioPlayer currentTime]
  -[CKAudioPlayer displayLinkFired:]
  -[CKAudioPlayer setPrevCurrentTime:]
  -[CKAudioPlayer internalAudioPlayerDidFinishPlaying:successfully:]
  -[CKAudioPlayer internalAudioPlayerDidPrepareAudioForPlaying:successfully:]
  -[CKAudioPlayer usesAVPlayer]
  -[CKAudioPlayer prevCurrentTime]
  -[CKAudioPlayer delegate]
  -[CKAudioPlayer dealloc]
  -[CKAudioPlayer __im_ff_isNewAudioMessageFlowEnabled]
  -[CKAudioPlayer block]
  -[CKAudioPlayer duration]


CKInternalAudioPlayer : NSObject <AVAudioPlayerDelegate>
 @property  long long playerType
 @property  <CKInternalAudioPlayerDelegate> *delegate
 @property  float volume
 @property  BOOL playing
 @property  double currentTime
 @property  double duration
 @property  double deviceCurrentTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKInternalAudioPlayer volume]
  -[CKInternalAudioPlayer isPlaying]
  -[CKInternalAudioPlayer setVolume:]
  -[CKInternalAudioPlayer .cxx_destruct]
  -[CKInternalAudioPlayer stop]
  -[CKInternalAudioPlayer setDelegate:]
  -[CKInternalAudioPlayer playAtTime:]
  -[CKInternalAudioPlayer setCurrentTime:]
  -[CKInternalAudioPlayer prepareToPlay]
  -[CKInternalAudioPlayer pause]
  -[CKInternalAudioPlayer currentTime]
  -[CKInternalAudioPlayer deviceCurrentTime]
  -[CKInternalAudioPlayer initWithContentsOfURL:playerType:]
  -[CKInternalAudioPlayer resetCurrentTime]
  -[CKInternalAudioPlayer _playerItemDidEndNotification:]
  -[CKInternalAudioPlayer _handleAVPlayerItemStateChange]
  -[CKInternalAudioPlayer _playAtTime:]
  -[CKInternalAudioPlayer _notifyPlayerDidPrepareAudioFileSuccessfully:]
  -[CKInternalAudioPlayer _notifyPlayerDidFinishSuccessfully:]
  -[CKInternalAudioPlayer audioPlayerDidFinishPlaying:successfully:]
  -[CKInternalAudioPlayer delegate]
  -[CKInternalAudioPlayer playerType]
  -[CKInternalAudioPlayer dealloc]
  -[CKInternalAudioPlayer __im_ff_isNewAudioMessageFlowEnabled]
  -[CKInternalAudioPlayer observeValueForKeyPath:ofObject:change:context:]
  -[CKInternalAudioPlayer duration]


CKLivePhotoBundleUtilities : NSObject
  // class methods
  +[CKLivePhotoBundleUtilities fileExistsAtPath:]
  +[CKLivePhotoBundleUtilities calculateLivePhotoVideoPath:]
  +[CKLivePhotoBundleUtilities getLivePhotoBundleURL:]
  +[CKLivePhotoBundleUtilities isLivePhotoAtURL:]
  +[CKLivePhotoBundleUtilities attachmentPreviewFileURL:extension:]
  +[CKLivePhotoBundleUtilities writeToBundle:atURL:]


CKMessageAcknowledgmentPickerBarAccessoryView : _UIContextMenuAccessoryView
 @property  BOOL visible
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} layoutBounds
 @property  CKMessageAcknowledgmentPickerBarViewController *pickerViewController
 @property  CKMessagePartChatItem *chatItem

  // instance methods
  -[CKMessageAcknowledgmentPickerBarAccessoryView visible]
  -[CKMessageAcknowledgmentPickerBarAccessoryView setVisible:]
  -[CKMessageAcknowledgmentPickerBarAccessoryView .cxx_destruct]
  -[CKMessageAcknowledgmentPickerBarAccessoryView attachmentOffsetWithReferenceFrame:]
  -[CKMessageAcknowledgmentPickerBarAccessoryView chatItem]
  -[CKMessageAcknowledgmentPickerBarAccessoryView setChatItem:]
  -[CKMessageAcknowledgmentPickerBarAccessoryView setVisible:animated:]
  -[CKMessageAcknowledgmentPickerBarAccessoryView layoutBounds]
  -[CKMessageAcknowledgmentPickerBarAccessoryView setLayoutBounds:]
  -[CKMessageAcknowledgmentPickerBarAccessoryView setPickerViewController:]
  -[CKMessageAcknowledgmentPickerBarAccessoryView initWithChatItem:layoutBounds:]
  -[CKMessageAcknowledgmentPickerBarAccessoryView pickerViewController]


CKMediaObjectExportManager : NSObject
 @property  NSArray *queuedMediaObjects
 @property  BOOL queuedMediaObjectsArePhotosCompatible
 @property  NSString *metricsSource
 @property  BOOL ignoreSyndicationIdentifiers

  // class methods
  +[CKMediaObjectExportManager _serialBackgroundQueue]

  // instance methods
  -[CKMediaObjectExportManager setIgnoreSyndicationIdentifiers:]
  -[CKMediaObjectExportManager .cxx_destruct]
  -[CKMediaObjectExportManager initWithMediaObject:]
  -[CKMediaObjectExportManager setQueuedMediaObjects:]
  -[CKMediaObjectExportManager metricsSource]
  -[CKMediaObjectExportManager queuedMediaObjects]
  -[CKMediaObjectExportManager exportMediaObjects:completion:]
  -[CKMediaObjectExportManager exportMediaObjects:withFileNames:completion:]
  -[CKMediaObjectExportManager ignoreSyndicationIdentifiers]
  -[CKMediaObjectExportManager queueMediaObject:]
  -[CKMediaObjectExportManager _phAssetCreationRequestForMediaObject:withSyndicationIdentifier:]
  -[CKMediaObjectExportManager dequeueMediaObject:]
  -[CKMediaObjectExportManager exportMediaObject:completion:]
  -[CKMediaObjectExportManager queuedMediaObjectsArePhotosCompatible]
  -[CKMediaObjectExportManager setQueuedMediaObjectsArePhotosCompatible:]
  -[CKMediaObjectExportManager setMetricsSource:]
  -[CKMediaObjectExportManager initWithMediaObjects:]
  -[CKMediaObjectExportManager exportQueuedMediaObjectsWithCompletion:]
  -[CKMediaObjectExportManager exportMediaObject:withFileName:completion:]


CKVideoCancelActionMenuItem : CKActionMenuItem
 @property  unsigned long touchDownCount

  // instance methods
  -[CKVideoCancelActionMenuItem touchDownCount]
  -[CKVideoCancelActionMenuItem setTouchDownCount:]
  -[CKVideoCancelActionMenuItem updateForState:touchInside:]


CKVideoCancelActionMenuItemView : UIView <CKActionMenuItemView>
 @property  UIVisualEffectView *blurView
 @property  UIImageView *maskView
 @property  UIImageView *xView
 @property  BOOL highlighted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKVideoCancelActionMenuItemView setHighlighted:]
  -[CKVideoCancelActionMenuItemView blurView]
  -[CKVideoCancelActionMenuItemView xView]
  -[CKVideoCancelActionMenuItemView setHighlighted:animated:]
  -[CKVideoCancelActionMenuItemView .cxx_destruct]
  -[CKVideoCancelActionMenuItemView layoutSubviews]
  -[CKVideoCancelActionMenuItemView maskView]
  -[CKVideoCancelActionMenuItemView isHighlighted]
  -[CKVideoCancelActionMenuItemView setXView:]
  -[CKVideoCancelActionMenuItemView sizeThatFits:]
  -[CKVideoCancelActionMenuItemView setBlurView:]
  -[CKVideoCancelActionMenuItemView initWithFrame:]
  -[CKVideoCancelActionMenuItemView setMaskView:]


CKAssociatedMessageTranscriptCell : CKTranscriptMessageContentCell
 @property  <CKAssociatedMessageTranscriptCellDelegate> *delegate
 @property  UIView *associatedItemView
 @property  {IMAssociatedMessageGeometryDescriptor=QQfffff} geometryDescriptor
 @property  {CGSize=dd} size
 @property  {CGSize=dd} parentSize
 @property  double parentRotationOffset
 @property  double cumulativeAssociatedOffset

  // instance methods
  -[CKAssociatedMessageTranscriptCell clearFilters]
  -[CKAssociatedMessageTranscriptCell hitTest:withEvent:]
  -[CKAssociatedMessageTranscriptCell performReload:completion:]
  -[CKAssociatedMessageTranscriptCell parentSize]
  -[CKAssociatedMessageTranscriptCell geometryDescriptor]
  -[CKAssociatedMessageTranscriptCell setGeometryDescriptor:]
  -[CKAssociatedMessageTranscriptCell associatedItemView]
  -[CKAssociatedMessageTranscriptCell cumulativeAssociatedOffset]
  -[CKAssociatedMessageTranscriptCell .cxx_destruct]
  -[CKAssociatedMessageTranscriptCell setAssociatedItemView:]
  -[CKAssociatedMessageTranscriptCell setDelegate:]
  -[CKAssociatedMessageTranscriptCell failureButtonAdjustsContentAlignmentRect]
  -[CKAssociatedMessageTranscriptCell setSize:]
  -[CKAssociatedMessageTranscriptCell prepareForReuse]
  -[CKAssociatedMessageTranscriptCell addFilter:]
  -[CKAssociatedMessageTranscriptCell delegate]
  -[CKAssociatedMessageTranscriptCell size]
  -[CKAssociatedMessageTranscriptCell associatedViewFrame:inContainerFrame:]
  -[CKAssociatedMessageTranscriptCell configureForChatItem:context:]
  -[CKAssociatedMessageTranscriptCell setCumulativeAssociatedOffset:]
  -[CKAssociatedMessageTranscriptCell setParentSize:]
  -[CKAssociatedMessageTranscriptCell applyLayoutAttributes:]
  -[CKAssociatedMessageTranscriptCell parentRotationOffset]
  -[CKAssociatedMessageTranscriptCell setParentRotationOffset:]
  -[CKAssociatedMessageTranscriptCell hidesCheckmark]
  -[CKAssociatedMessageTranscriptCell layoutSubviewsForAlignmentContents]


CKComposeRecipientSelectionController : CKRecipientSelectionController <UITextFieldDelegate, CKComposeSubscriptionSelectorButtonDelegate>
 @property  @? sendBlock
 @property  UIView *fromFieldContainerView
 @property  UIView *fromFieldSeparator
 @property  UILabel *fromTextLabel
 @property  CKComposeSubscriptionSelectorButton *subscriptionSelectorButton
 @property  UIStackView *fromFieldContentStackView
 @property  BOOL fromFieldIdentityChanged
 @property  CTXPCServiceSubscriptionContext *selectedSubscriptionContext
 @property  TUSenderIdentity *selectedSenderIdentity
 @property  BOOL hasUserSetContextPreference
 @property  BOOL firstAppear
 @property  BOOL contactPreferredContextSelected
 @property  <CKComposeRecipientSelectionControllerDelegate> *delegate
 @property  NSArray *expandedRecipients
 @property  NSArray *proposedRecipients
 @property  NSString *selectedLastAddressedOrDefaultHandle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKComposeRecipientSelectionController textFieldShouldReturn:]
  -[CKComposeRecipientSelectionController deviceHasMultipleSubscriptions]
  -[CKComposeRecipientSelectionController traitCollectionDidChange:]
  -[CKComposeRecipientSelectionController .cxx_destruct]
  -[CKComposeRecipientSelectionController selectedSubscriptionContext]
  -[CKComposeRecipientSelectionController recipientSelectionControllerDidChange]
  -[CKComposeRecipientSelectionController isBeingPresentedInMacDetailsView]
  -[CKComposeRecipientSelectionController conversationList]
  -[CKComposeRecipientSelectionController homogenizePreferredServiceForiMessage]
  -[CKComposeRecipientSelectionController recipients]
  -[CKComposeRecipientSelectionController fromFieldContainerView]
  -[CKComposeRecipientSelectionController hasBackfilledConversation]
  -[CKComposeRecipientSelectionController hasMultipleActiveSharedSubscriptions]
  -[CKComposeRecipientSelectionController expandedRecipients]
  -[CKComposeRecipientSelectionController selectedLastAddressedOrDefaultHandle]
  -[CKComposeRecipientSelectionController hasiMessageableContext]
  -[CKComposeRecipientSelectionController shouldAtomizeToConversationName]
  -[CKComposeRecipientSelectionController proposedRecipients]
  -[CKComposeRecipientSelectionController atomizeAndInvokeBlock:]
  -[CKComposeRecipientSelectionController conversationPreferredServiceDidChange]
  -[CKComposeRecipientSelectionController sendBlock]
  -[CKComposeRecipientSelectionController shouldSuppressSearchResultsTable]
  -[CKComposeRecipientSelectionController alwaysShowSearchResultsTable]
  -[CKComposeRecipientSelectionController reset]
  -[CKComposeRecipientSelectionController addRecipient:]
  -[CKComposeRecipientSelectionController viewDidLayoutSubviews]
  -[CKComposeRecipientSelectionController viewDidAppearDeferredSetup]
  -[CKComposeRecipientSelectionController setSendBlock:]
  -[CKComposeRecipientSelectionController atomizeAndSendTimeoutHandler]
  -[CKComposeRecipientSelectionController setHasUserSetContextPreference:]
  -[CKComposeRecipientSelectionController isFirstAppear]
  -[CKComposeRecipientSelectionController dealloc]
  -[CKComposeRecipientSelectionController configureSubscriptionContextForRecipients:]
  -[CKComposeRecipientSelectionController setFirstAppear:]
  -[CKComposeRecipientSelectionController presentAlertForSubscriptionContext]
  -[CKComposeRecipientSelectionController _layoutFromFieldShouldHide:]
  -[CKComposeRecipientSelectionController _updateFromFieldIfNeeded]
  -[CKComposeRecipientSelectionController _lastAddressedHandleChangedNotification:]
  -[CKComposeRecipientSelectionController _defaultSubscriptionContext]
  -[CKComposeRecipientSelectionController setSelectedSubscriptionContext:]
  -[CKComposeRecipientSelectionController hasUserSetContextPreference]
  -[CKComposeRecipientSelectionController _defaultSubscriptionContextForiMessage]
  -[CKComposeRecipientSelectionController _bestSenderIdentityForRecipient:]
  -[CKComposeRecipientSelectionController presentContextSelectionAlertWithCompletion:]
  -[CKComposeRecipientSelectionController fromFieldIdentityChanged]
  -[CKComposeRecipientSelectionController setFromFieldIdentityChanged:]
  -[CKComposeRecipientSelectionController _preferrediMessageAccountName]
  -[CKComposeRecipientSelectionController menuForSubcriptionSelector]
  -[CKComposeRecipientSelectionController subscriptionSelectorButton]
  -[CKComposeRecipientSelectionController fromTextLabel]
  -[CKComposeRecipientSelectionController _shouldHideFromField]
  -[CKComposeRecipientSelectionController fromFieldContentStackView]
  -[CKComposeRecipientSelectionController _fromFieldThemeForCurrentService]
  -[CKComposeRecipientSelectionController _updateContentsOfFromField]
  -[CKComposeRecipientSelectionController selectedSenderIdentity]
  -[CKComposeRecipientSelectionController _legacyAddRecipient:]
  -[CKComposeRecipientSelectionController _hasExistingConversationWithAddedRecipient:]
  -[CKComposeRecipientSelectionController _updateSubscriptionContextForRecipient:preferredService:]
  -[CKComposeRecipientSelectionController _subscriptionContextForSimID:phoneNumber:]
  -[CKComposeRecipientSelectionController _atomizeToConversationNameIfNecessary:]
  -[CKComposeRecipientSelectionController _isOniMessageService:]
  -[CKComposeRecipientSelectionController _contactPreferredSenderIdentityForRecipient:]
  -[CKComposeRecipientSelectionController setContactPreferredContextSelected:]
  -[CKComposeRecipientSelectionController _handlesForRecipients:]
  -[CKComposeRecipientSelectionController _updateBackfillForNewRecipients]
  -[CKComposeRecipientSelectionController autocompleteResultIdentifier:]
  -[CKComposeRecipientSelectionController conversationGUIDForRecipient:]
  -[CKComposeRecipientSelectionController recipientIsiMessagable:]
  -[CKComposeRecipientSelectionController shouldInvalidateIDSRequests]
  -[CKComposeRecipientSelectionController contactPreferredContextSelected]
  -[CKComposeRecipientSelectionController setFromFieldContainerView:]
  -[CKComposeRecipientSelectionController CKComposeSubscriptionSelectorButtonwWasTapped:]
  -[CKComposeRecipientSelectionController fromFieldSeparator]
  -[CKComposeRecipientSelectionController setFromFieldSeparator:]
  -[CKComposeRecipientSelectionController setFromTextLabel:]
  -[CKComposeRecipientSelectionController setSubscriptionSelectorButton:]
  -[CKComposeRecipientSelectionController setFromFieldContentStackView:]
  -[CKComposeRecipientSelectionController loadView]
  -[CKComposeRecipientSelectionController viewDidDisappear:]
  -[CKComposeRecipientSelectionController _canShowWhileLocked]


CKMultilineStampChatItem : CKStampChatItem
  // instance methods
  -[CKMultilineStampChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKMultilineStampChatItem cellClass]


CKStandardButton : UIButton
  // instance methods
  -[CKStandardButton tintColorDidChange]
  -[CKStandardButton init]


CKImpactTextBalloonView : CKTextBalloonView
  // instance methods
  -[CKImpactTextBalloonView initWithFrame:]


CKAppIconCollectionViewCell : UICollectionViewCell
 @property  NSMutableArray *constraints
 @property  CKAppIconView *appContentView
 @property  UIImageView *appIconView
 @property  long long appName

  // class methods
  +[CKAppIconCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKAppIconCollectionViewCell appName]
  -[CKAppIconCollectionViewCell constraints]
  -[CKAppIconCollectionViewCell updateConstraints]
  -[CKAppIconCollectionViewCell .cxx_destruct]
  -[CKAppIconCollectionViewCell setAppIconView:]
  -[CKAppIconCollectionViewCell setConstraints:]
  -[CKAppIconCollectionViewCell prepareForReuse]
  -[CKAppIconCollectionViewCell appIconView]
  -[CKAppIconCollectionViewCell appContentView]
  -[CKAppIconCollectionViewCell setAppContentView:]
  -[CKAppIconCollectionViewCell appIconForBundleID:]
  -[CKAppIconCollectionViewCell configureWithAppName:]
  -[CKAppIconCollectionViewCell setAppName:]


CKCurrentConversationsManagerOrderedNode : IMDoubleLinkedListNode
 @property  NSString *key

  // instance methods
  -[CKCurrentConversationsManagerOrderedNode setKey:]
  -[CKCurrentConversationsManagerOrderedNode .cxx_destruct]
  -[CKCurrentConversationsManagerOrderedNode key]


CKCurrentConversationsManager : NSObject
 @property  NSCountedSet *currentConversations
 @property  NSMutableDictionary *idToNodeDictionary
 @property  IMDoubleLinkedList *orderedKeys
 @property  unsigned long cacheSize

  // class methods
  +[CKCurrentConversationsManager sharedInstance]

  // instance methods
  -[CKCurrentConversationsManager cacheSize]
  -[CKCurrentConversationsManager removeConversation:]
  -[CKCurrentConversationsManager addConversation:]
  -[CKCurrentConversationsManager loadHistoryForConversation:keepAllCurrentlyLoadedMessages:]
  -[CKCurrentConversationsManager pruneCache]
  -[CKCurrentConversationsManager .cxx_destruct]
  -[CKCurrentConversationsManager purgeConversations:]
  -[CKCurrentConversationsManager setOrderedKeys:]
  -[CKCurrentConversationsManager orderedKeys]
  -[CKCurrentConversationsManager currentConversations]
  -[CKCurrentConversationsManager idToNodeDictionary]
  -[CKCurrentConversationsManager pruneCacheToSize:]
  -[CKCurrentConversationsManager _prepareToDumpCachedConversation:]
  -[CKCurrentConversationsManager purgeConversation:]
  -[CKCurrentConversationsManager _canDumpConversationFromCache:]
  -[CKCurrentConversationsManager setCurrentConversations:]
  -[CKCurrentConversationsManager setIdToNodeDictionary:]


CKConversationSearchResultCell : UICollectionViewCell <CNAvatarViewDelegate, CKSearchResultCell>
 @property  NSString *resultIdentifier
 @property  CKAvatarView *avatarView
 @property  CKLabel *nameLabel
 @property  CKConversation *conversation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  BOOL _ck_editing

  // class methods
  +[CKConversationSearchResultCell reuseIdentifier]

  // instance methods
  -[CKConversationSearchResultCell setAvatarView:]
  -[CKConversationSearchResultCell .cxx_destruct]
  -[CKConversationSearchResultCell preferredLayoutAttributesFittingAttributes:]
  -[CKConversationSearchResultCell avatarView]
  -[CKConversationSearchResultCell layoutSubviews]
  -[CKConversationSearchResultCell marginInsets]
  -[CKConversationSearchResultCell presentingViewControllerForAvatarView:]
  -[CKConversationSearchResultCell setNameLabel:]
  -[CKConversationSearchResultCell prepareForReuse]
  -[CKConversationSearchResultCell initWithFrame:]
  -[CKConversationSearchResultCell setMarginInsets:]
  -[CKConversationSearchResultCell setConversation:]
  -[CKConversationSearchResultCell _ck_isEditing]
  -[CKConversationSearchResultCell conversation]
  -[CKConversationSearchResultCell nameLabel]
  -[CKConversationSearchResultCell setResultIdentifier:]
  -[CKConversationSearchResultCell resultIdentifier]
  -[CKConversationSearchResultCell configureWithQueryResult:searchText:mode:]
  -[CKConversationSearchResultCell refreshForSearchTextIfNeeded:]
  -[CKConversationSearchResultCell _ck_setEditing:]
  -[CKConversationSearchResultCell _configureAvatarViewForConversation:]
  -[CKConversationSearchResultCell _configureNameLabelForConversation:searchText:]


CKBallotLayoutAttributesCollection : NSObject <NSCopying>
 @property  UICollectionViewLayoutAttributes *containerAttributes
 @property  UICollectionViewLayoutAttributes *voteCountAttributes
 @property  UICollectionViewLayoutAttributes *ackIconAttributes
 @property  NSArray *avatarAttributesCollection
 @property  NSArray *nameAttributesCollection

  // instance methods
  -[CKBallotLayoutAttributesCollection .cxx_destruct]
  -[CKBallotLayoutAttributesCollection copyWithZone:]
  -[CKBallotLayoutAttributesCollection setAckIconAttributes:]
  -[CKBallotLayoutAttributesCollection containerAttributes]
  -[CKBallotLayoutAttributesCollection setContainerAttributes:]
  -[CKBallotLayoutAttributesCollection setVoteCountAttributes:]
  -[CKBallotLayoutAttributesCollection setAvatarAttributesCollection:]
  -[CKBallotLayoutAttributesCollection ackIconAttributes]
  -[CKBallotLayoutAttributesCollection setNameAttributesCollection:]
  -[CKBallotLayoutAttributesCollection voteCountAttributes]
  -[CKBallotLayoutAttributesCollection avatarAttributesCollection]
  -[CKBallotLayoutAttributesCollection nameAttributesCollection]
  -[CKBallotLayoutAttributesCollection _setContainerAttributes:forLayoutMode:]
  -[CKBallotLayoutAttributesCollection _applyAlphaToAllAttributesAlpha:]


CKGroupAcknowledgmentVotingLayout : UICollectionViewLayout
 @property  NSArray *ballotItems
 @property  long long expandedSection
 @property  BOOL isAnimatedLayoutChange
 @property  NSArray *fromBallotItems
 @property  {CGSize=dd} fromContentSize
 @property  {CGPoint=dd} fromContentOffset
 @property  unsigned long layoutMode
 @property  {CGPoint=dd} previousCollapsedContentOffset

  // instance methods
  -[CKGroupAcknowledgmentVotingLayout initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:]
  -[CKGroupAcknowledgmentVotingLayout finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:]
  -[CKGroupAcknowledgmentVotingLayout layoutAttributesForItemAtIndexPath:]
  -[CKGroupAcknowledgmentVotingLayout prepareLayout]
  -[CKGroupAcknowledgmentVotingLayout setLayoutMode:]
  -[CKGroupAcknowledgmentVotingLayout collectionViewContentSize]
  -[CKGroupAcknowledgmentVotingLayout .cxx_destruct]
  -[CKGroupAcknowledgmentVotingLayout init]
  -[CKGroupAcknowledgmentVotingLayout targetContentOffsetForProposedContentOffset:]
  -[CKGroupAcknowledgmentVotingLayout layoutAttributesForElementsInRect:]
  -[CKGroupAcknowledgmentVotingLayout expandedSection]
  -[CKGroupAcknowledgmentVotingLayout preapareForLayoutAnimationAroundSection:]
  -[CKGroupAcknowledgmentVotingLayout setPreviousCollapsedContentOffset:]
  -[CKGroupAcknowledgmentVotingLayout _setupAnimatedCollapsedLayout]
  -[CKGroupAcknowledgmentVotingLayout cleanupAnimationCache]
  -[CKGroupAcknowledgmentVotingLayout previousCollapsedContentOffset]
  -[CKGroupAcknowledgmentVotingLayout finalLayoutAttributesForDisappearingItemAtIndexPath:]
  -[CKGroupAcknowledgmentVotingLayout initialLayoutAttributesForAppearingItemAtIndexPath:]
  -[CKGroupAcknowledgmentVotingLayout layoutMode]
  -[CKGroupAcknowledgmentVotingLayout ballotItems]
  -[CKGroupAcknowledgmentVotingLayout finalizeAnimatedBoundsChange]
  -[CKGroupAcknowledgmentVotingLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[CKGroupAcknowledgmentVotingLayout setExpandedSection:]
  -[CKGroupAcknowledgmentVotingLayout setIsAnimatedLayoutChange:]
  -[CKGroupAcknowledgmentVotingLayout setFromContentSize:]
  -[CKGroupAcknowledgmentVotingLayout setFromContentOffset:]
  -[CKGroupAcknowledgmentVotingLayout setFromBallotItems:]
  -[CKGroupAcknowledgmentVotingLayout _numberOfBallots]
  -[CKGroupAcknowledgmentVotingLayout isAnimatedLayoutChange]
  -[CKGroupAcknowledgmentVotingLayout fromContentSize]
  -[CKGroupAcknowledgmentVotingLayout setBallotItems:]
  -[CKGroupAcknowledgmentVotingLayout _shouldFillInFromCenter]
  -[CKGroupAcknowledgmentVotingLayout _totalBallotContainersWidth]
  -[CKGroupAcknowledgmentVotingLayout fromBallotItems]
  -[CKGroupAcknowledgmentVotingLayout fromContentOffset]
  -[CKGroupAcknowledgmentVotingLayout _initializeBallotItems]
  -[CKGroupAcknowledgmentVotingLayout _setupCollapsedLayout]
  -[CKGroupAcknowledgmentVotingLayout _setupExpandedLayout]


CKTranscriptLabelCell : CKTranscriptCell <CKTranscriptCollectionViewCellProtocol>
 @property  NSAttributedString *attributedText
 @property  BOOL wantsContactImageLayout
 @property  BOOL wantsOffsetForReplyLine
 @property  UILabel *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKTranscriptLabelCell label]
  +[CKTranscriptLabelCell reuseIdentifier]

  // instance methods
  -[CKTranscriptLabelCell clearFilters]
  -[CKTranscriptLabelCell setAttributedText:]
  -[CKTranscriptLabelCell setOrientation:]
  -[CKTranscriptLabelCell label]
  -[CKTranscriptLabelCell attributedText]
  -[CKTranscriptLabelCell animationWithKeyPath:beginTime:duration:fromValue:toValue:]
  -[CKTranscriptLabelCell .cxx_destruct]
  -[CKTranscriptLabelCell wantsOffsetForReplyLine]
  -[CKTranscriptLabelCell setWantsContactImageLayout:]
  -[CKTranscriptLabelCell prepareForReuse]
  -[CKTranscriptLabelCell addFilter:]
  -[CKTranscriptLabelCell initWithFrame:]
  -[CKTranscriptLabelCell setLabel:]
  -[CKTranscriptLabelCell wantsContactImageLayout]
  -[CKTranscriptLabelCell setWantsOffsetForReplyLine:]
  -[CKTranscriptLabelCell configureForChatItem:context:]
  -[CKTranscriptLabelCell hidesCheckmark]
  -[CKTranscriptLabelCell contentAlignmentRect]
  -[CKTranscriptLabelCell performInsertion:]
  -[CKTranscriptLabelCell layoutSubviewsForContents]
  -[CKTranscriptLabelCell layoutSubviewsForAlignmentContents]
  -[CKTranscriptLabelCell _fadeInLabelAtStartTime:completion:]


CKTwoButtonInlineNotificationView : CKInlineNotificationView
 @property  UIButton *failureButton
 @property  UILabel *headerLabel
 @property  UILabel *descriptionLabel
 @property  UIButton *leftButton
 @property  UIButton *rightButton
 @property  UIView *horizontalDivider
 @property  UIView *verticalDivider
 @property  UIView *leftGrayoutView
 @property  UIView *rightGrayoutView
 @property  BOOL leftButtonIsGrayedOut
 @property  BOOL rightButtonIsGrayedOut
 @property  UIImage *icon
 @property  NSString *headerText
 @property  NSString *descriptionText
 @property  NSString *leftButtonText
 @property  NSString *rightButtonText

  // instance methods
  -[CKTwoButtonInlineNotificationView leftButton]
  -[CKTwoButtonInlineNotificationView descriptionText]
  -[CKTwoButtonInlineNotificationView setLeftButton:]
  -[CKTwoButtonInlineNotificationView _updateFonts]
  -[CKTwoButtonInlineNotificationView _handleContentSizeCategoryDidChange:]
  -[CKTwoButtonInlineNotificationView leftGrayoutView]
  -[CKTwoButtonInlineNotificationView rightGrayoutView]
  -[CKTwoButtonInlineNotificationView setLeftButtonIsGrayedOut:]
  -[CKTwoButtonInlineNotificationView _heightForTopBoxWithContainerWidth:failureButtonFrame:labelFrame:descriptionFrame:]
  -[CKTwoButtonInlineNotificationView setRightButtonIsGrayedOut:]
  -[CKTwoButtonInlineNotificationView leftButtonText]
  -[CKTwoButtonInlineNotificationView rightButtonText]
  -[CKTwoButtonInlineNotificationView _heightForBottomBoxWithContainerWidth:startingYOffset:leftButtonFrame:rightButtonFrame:dividerFrame:leftGrayoutViewFrame:rightGrayoutViewFrame:]
  -[CKTwoButtonInlineNotificationView leftButtonIsGrayedOut]
  -[CKTwoButtonInlineNotificationView rightButtonIsGrayedOut]
  -[CKTwoButtonInlineNotificationView setLeftGrayoutView:]
  -[CKTwoButtonInlineNotificationView setRightGrayoutView:]
  -[CKTwoButtonInlineNotificationView .cxx_destruct]
  -[CKTwoButtonInlineNotificationView verticalDivider]
  -[CKTwoButtonInlineNotificationView setVerticalDivider:]
  -[CKTwoButtonInlineNotificationView setHorizontalDivider:]
  -[CKTwoButtonInlineNotificationView horizontalDivider]
  -[CKTwoButtonInlineNotificationView layoutSubviews]
  -[CKTwoButtonInlineNotificationView setRightButton:]
  -[CKTwoButtonInlineNotificationView contentView]
  -[CKTwoButtonInlineNotificationView setFailureButton:]
  -[CKTwoButtonInlineNotificationView descriptionLabel]
  -[CKTwoButtonInlineNotificationView setHeaderLabel:]
  -[CKTwoButtonInlineNotificationView _handleTouchDown:]
  -[CKTwoButtonInlineNotificationView _handleTouchUpInside:]
  -[CKTwoButtonInlineNotificationView _handleTouchUpOutside:]
  -[CKTwoButtonInlineNotificationView initWithFrame:]
  -[CKTwoButtonInlineNotificationView setHeaderText:]
  -[CKTwoButtonInlineNotificationView dealloc]
  -[CKTwoButtonInlineNotificationView rightButton]
  -[CKTwoButtonInlineNotificationView setDescriptionText:]
  -[CKTwoButtonInlineNotificationView failureButton]
  -[CKTwoButtonInlineNotificationView contentViewSizeThatFits:]
  -[CKTwoButtonInlineNotificationView setLeftButtonText:]
  -[CKTwoButtonInlineNotificationView setRightButtonText:]
  -[CKTwoButtonInlineNotificationView headerLabel]
  -[CKTwoButtonInlineNotificationView setDescriptionLabel:]


CKBlackholeTranscriptCell : UITableViewCell
 @property  UILabel *fromLabel
 @property  UIDateLabel *dateLabel
 @property  UILabel *bodyLabel

  // instance methods
  -[CKBlackholeTranscriptCell setDateLabel:]
  -[CKBlackholeTranscriptCell .cxx_destruct]
  -[CKBlackholeTranscriptCell setFromLabel:]
  -[CKBlackholeTranscriptCell fromLabel]
  -[CKBlackholeTranscriptCell bodyLabel]
  -[CKBlackholeTranscriptCell dateLabel]
  -[CKBlackholeTranscriptCell prepareForReuse]
  -[CKBlackholeTranscriptCell configureForMessageItem:showSender:]
  -[CKBlackholeTranscriptCell initWithStyle:reuseIdentifier:]
  -[CKBlackholeTranscriptCell setBodyLabel:]


CKDetailsAttachmentsSearchController : CKAttachmentsSearchController
 @property  CKAttachmentSearchResultCell *sizingCell

  // class methods
  +[CKDetailsAttachmentsSearchController sectionIdentifier]

  // instance methods
  -[CKDetailsAttachmentsSearchController .cxx_destruct]
  -[CKDetailsAttachmentsSearchController setSizingCell:]
  -[CKDetailsAttachmentsSearchController sizingCell]
  -[CKDetailsAttachmentsSearchController layoutGroupWithEnvironment:]


CKBalloonSelectionState : NSObject
 @property  long long style
 @property  {_NSRange=QQ} textSelectionRange

  // class methods
  +[CKBalloonSelectionState balloonSelectionState:]
  +[CKBalloonSelectionState balloonSelectionState:textSelectionRange:]

  // instance methods
  -[CKBalloonSelectionState initWithStyle:textSelectionRange:]
  -[CKBalloonSelectionState textSelectionRange]
  -[CKBalloonSelectionState style]


CKConversationListCollectionViewToolbar : UIToolbar
 @property  BOOL shouldExpandHeight

  // instance methods
  -[CKConversationListCollectionViewToolbar shouldExpandHeight]
  -[CKConversationListCollectionViewToolbar setShouldExpandHeight:]
  -[CKConversationListCollectionViewToolbar sizeThatFits:]
  -[CKConversationListCollectionViewToolbar expandHeight]
  -[CKConversationListCollectionViewToolbar contractHeight]


CKTranscriptNotifyAnywayButtonCell : CKTranscriptCell <CKTranscriptCollectionViewCellProtocol>
 @property  UIButton *notifyAnywayButton
 @property  NSAttributedString *notifyAnywayButtonAttributedText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKTranscriptNotifyAnywayButtonCell reuseIdentifier]
  +[CKTranscriptNotifyAnywayButtonCell notifyAnywayButton]

  // instance methods
  -[CKTranscriptNotifyAnywayButtonCell clearFilters]
  -[CKTranscriptNotifyAnywayButtonCell animationWithKeyPath:beginTime:duration:fromValue:toValue:]
  -[CKTranscriptNotifyAnywayButtonCell setNotifyAnywayButtonAttributedText:]
  -[CKTranscriptNotifyAnywayButtonCell setNotifyAnywayButton:]
  -[CKTranscriptNotifyAnywayButtonCell .cxx_destruct]
  -[CKTranscriptNotifyAnywayButtonCell notifyAnywayButtonAttributedText]
  -[CKTranscriptNotifyAnywayButtonCell addFilter:]
  -[CKTranscriptNotifyAnywayButtonCell initWithFrame:]
  -[CKTranscriptNotifyAnywayButtonCell configureForChatItem:context:]
  -[CKTranscriptNotifyAnywayButtonCell notifyAnywayButton]
  -[CKTranscriptNotifyAnywayButtonCell hidesCheckmark]
  -[CKTranscriptNotifyAnywayButtonCell performInsertion:]
  -[CKTranscriptNotifyAnywayButtonCell layoutSubviewsForAlignmentContents]
  -[CKTranscriptNotifyAnywayButtonCell _fadeInLabelAtStartTime:completion:]


CKBrowserTransitionCoordinator : NSObject <CKExpandedAppViewControllerDelegate>
 @property  UIViewController<CKBrowserViewControllerProtocol> *currentBrowser
 @property  long long currentConsumer
 @property  BOOL expanded
 @property  CKExpandedAppViewController *expandedAppViewController
 @property  UIWindow *appWindow
 @property  UIWindow *previousKeyWindow
 @property  UIWindow *preModalKeyWindow
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cachedCompactFrame
 @property  long long lastTransitionReason
 @property  UIWindow *modalAppWindow
 @property  UINavigationController *presentedModalBrowserNavigationController
 @property  UIViewController<CKBrowserViewControllerProtocol> *currentModalBrowser
 @property  <CKBrowserTransitionCoordinatorDelegate> *delegate
 @property  BOOL presentingFullScreenModal
 @property  BOOL wasCurrentBrowserExpanded
 @property  UIViewController *presentingViewController
 @property  CKConversation *conversation
 @property  <CKBrowserViewControllerSendDelegate> *sendDelegate
 @property  BOOL underTest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBrowserTransitionCoordinator appWindow]
  -[CKBrowserTransitionCoordinator isExpanded]
  -[CKBrowserTransitionCoordinator currentBrowser]
  -[CKBrowserTransitionCoordinator setAppWindow:]
  -[CKBrowserTransitionCoordinator modalAppWindow]
  -[CKBrowserTransitionCoordinator .cxx_destruct]
  -[CKBrowserTransitionCoordinator transitionViewController]
  -[CKBrowserTransitionCoordinator shouldPresentModalFromPresentingViewController]
  -[CKBrowserTransitionCoordinator usePresentationWindowDuringTransition]
  -[CKBrowserTransitionCoordinator setCachedCompactFrame:]
  -[CKBrowserTransitionCoordinator previousKeyWindow]
  -[CKBrowserTransitionCoordinator setPresentingViewController:]
  -[CKBrowserTransitionCoordinator setCurrentBrowser:]
  -[CKBrowserTransitionCoordinator setCurrentConsumer:]
  -[CKBrowserTransitionCoordinator requestOwnershipOfBrowserForConsumer:]
  -[CKBrowserTransitionCoordinator setExpanded:withReason:]
  -[CKBrowserTransitionCoordinator setExpandedAppViewController:]
  -[CKBrowserTransitionCoordinator cachedCompactFrame]
  -[CKBrowserTransitionCoordinator setPreviousKeyWindow:]
  -[CKBrowserTransitionCoordinator releaseOwnershipOfBrowserForConsumer:]
  -[CKBrowserTransitionCoordinator presentPluginFullScreenModal:datasource:animated:completion:]
  -[CKBrowserTransitionCoordinator setCurrentModalBrowser:]
  -[CKBrowserTransitionCoordinator setModalAppWindow:]
  -[CKBrowserTransitionCoordinator setPresentedModalBrowserNavigationController:]
  -[CKBrowserTransitionCoordinator setPreModalKeyWindow:]
  -[CKBrowserTransitionCoordinator modalPresentationViewController]
  -[CKBrowserTransitionCoordinator currentModalBrowser]
  -[CKBrowserTransitionCoordinator presentedModalBrowserNavigationController]
  -[CKBrowserTransitionCoordinator preModalKeyWindow]
  -[CKBrowserTransitionCoordinator lastTransitionReason]
  -[CKBrowserTransitionCoordinator transitionCurrentBrowserToCollapsedPresentationAnimated:completion:]
  -[CKBrowserTransitionCoordinator updateBrowserSessionForPlugin:datasource:]
  -[CKBrowserTransitionCoordinator wasCurrentBrowserExpanded]
  -[CKBrowserTransitionCoordinator setLastTransitionReason:]
  -[CKBrowserTransitionCoordinator isHostingRemoteKeyboardView]
  -[CKBrowserTransitionCoordinator setUnderTest:]
  -[CKBrowserTransitionCoordinator transitionCurrentBrowserToExpandedPresentationAnimated:completion:]
  -[CKBrowserTransitionCoordinator presentPluginFullScreenModal:animated:completion:]
  -[CKBrowserTransitionCoordinator setDelegate:]
  -[CKBrowserTransitionCoordinator shouldAlwaysShowAppTitle]
  -[CKBrowserTransitionCoordinator expandedAppViewControllerCollapsedContentHeight:]
  -[CKBrowserTransitionCoordinator expandedAppViewController:hasUpdatedLastTouchDate:]
  -[CKBrowserTransitionCoordinator expandedAppViewControllerWantsToCollapse:]
  -[CKBrowserTransitionCoordinator expandedAppViewControllerShouldDismissOnDragSuccess:]
  -[CKBrowserTransitionCoordinator presentingViewController]
  -[CKBrowserTransitionCoordinator dismissCurrentFullScreenModalAnimated:completion:]
  -[CKBrowserTransitionCoordinator dismissCurrentExpandedBrowserAnimated:completion:]
  -[CKBrowserTransitionCoordinator updateBrowser:]
  -[CKBrowserTransitionCoordinator underTest]
  -[CKBrowserTransitionCoordinator currentConsumer]
  -[CKBrowserTransitionCoordinator isPresentingFullScreenModal]
  -[CKBrowserTransitionCoordinator expandedAppViewController]
  -[CKBrowserTransitionCoordinator appTitleOverride]
  -[CKBrowserTransitionCoordinator expandedAppViewControllerDidTransitionFromOrientation:toOrientation:]
  -[CKBrowserTransitionCoordinator expandedAppViewController:wantsToSwitchToPlugin:datasource:]
  -[CKBrowserTransitionCoordinator delegate]
  -[CKBrowserTransitionCoordinator setConversation:]
  -[CKBrowserTransitionCoordinator expandedAppViewControllerSwitcherDidSelectAppStore:]
  -[CKBrowserTransitionCoordinator expandedAppViewControllerSwitcherDidSelectAppManager:]
  -[CKBrowserTransitionCoordinator appIconOverride]
  -[CKBrowserTransitionCoordinator setExpanded:]
  -[CKBrowserTransitionCoordinator sendDelegate]
  -[CKBrowserTransitionCoordinator setSendDelegate:]
  -[CKBrowserTransitionCoordinator conversation]


CKAppIconLinkView : UIView
 @property  long long appName
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} linkFrame
 @property  UIView *previewView
 @property  NSString *previewString
 @property  CKSyndicationOnboardingTailedBubble *tailedBubble
 @property  NSMutableArray *constraints

  // instance methods
  -[CKAppIconLinkView appName]
  -[CKAppIconLinkView previewView]
  -[CKAppIconLinkView constraints]
  -[CKAppIconLinkView updateConstraints]
  -[CKAppIconLinkView .cxx_destruct]
  -[CKAppIconLinkView tailedBubble]
  -[CKAppIconLinkView setUpViewsForApp:]
  -[CKAppIconLinkView setConstraints:]
  -[CKAppIconLinkView setLinkFrame:]
  -[CKAppIconLinkView setPreviewImageForImage:]
  -[CKAppIconLinkView previewString]
  -[CKAppIconLinkView setTailedBubble:]
  -[CKAppIconLinkView generateCroppedImageFromPreviewImage:]
  -[CKAppIconLinkView setPreviewString:]
  -[CKAppIconLinkView initWithFrame:withAppName:]
  -[CKAppIconLinkView linkFrame]
  -[CKAppIconLinkView setPreviewView:]
  -[CKAppIconLinkView setAppName:]


CKDeviceOrientationManager : NSObject <BKSAccelerometerDelegate>
 @property  BKSAccelerometer *accelerometer
 @property  NSMutableSet *listenerKeys
 @property  <CKDeviceOrientationManagerDelegate> *delegate
 @property  BOOL listeningForOrientationEvents
 @property  long long currentDeviceOrientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDeviceOrientationManager .cxx_destruct]
  -[CKDeviceOrientationManager currentDeviceOrientation]
  -[CKDeviceOrientationManager _updateListeningState]
  -[CKDeviceOrientationManager listenerKeys]
  -[CKDeviceOrientationManager accelerometer]
  -[CKDeviceOrientationManager _springboardDeviceLockOrientation]
  -[CKDeviceOrientationManager _wantsOrientationEvents]
  -[CKDeviceOrientationManager _broadcastOrientation:]
  -[CKDeviceOrientationManager setAccelerometer:]
  -[CKDeviceOrientationManager setListenerKeys:]
  -[CKDeviceOrientationManager setDelegate:]
  -[CKDeviceOrientationManager init]
  -[CKDeviceOrientationManager beginListeningForOrientationEventsWithKey:]
  -[CKDeviceOrientationManager endListeningForOrientationEventsWithKey:]
  -[CKDeviceOrientationManager isListeningForOrientationEvents]
  -[CKDeviceOrientationManager delegate]
  -[CKDeviceOrientationManager _applicationWillEnterForeground:]
  -[CKDeviceOrientationManager dealloc]
  -[CKDeviceOrientationManager invalidate]
  -[CKDeviceOrientationManager accelerometer:didAccelerateWithTimeStamp:x:y:z:eventType:]
  -[CKDeviceOrientationManager _applicationDidEnterBackground:]
  -[CKDeviceOrientationManager accelerometer:didChangeDeviceOrientation:]


CKHandwritingWindow : UIWindow
 @property  BOOL eatOrientationEvents

  // instance methods
  -[CKHandwritingWindow eatOrientationEvents]
  -[CKHandwritingWindow setEatOrientationEvents:]
  -[CKHandwritingWindow _updateInterfaceOrientationFromDeviceOrientation:]
  -[CKHandwritingWindow _canAffectStatusBarAppearance]


CKHandwritingPresentationController : NSObject
 @property  CKHandwritingWindow *handwritingWindow
 @property  UIViewController<CKHandwritingBrowserViewControllerProtocol> *browserViewController
 @property  CKScheduledUpdater *animationScheduledUpdater
 @property  BOOL requestedVisibility
 @property  BOOL actualVisibility
 @property  BOOL requestedVisibilityShouldBeAnimated
 @property  NSObject<CKHandwritingViewControllerSendDelegate> *cachedSendDelegate
 @property  CKBrowserItemPayload *cachedPluginPayload
 @property  BOOL suppressAppearanceCallbacksBecauseOfFirstInitialization
 @property  BOOL foregrounded
 @property  NSObject<CKHandwritingViewControllerSendDelegate> *sendDelegate
 @property  NSObject<CKHandwritingPresentationControllerDelegate> *delegate
 @property  CKDeviceOrientationManager *deviceOrientationManager
 @property  CKBrowserItemPayload *pluginPayload
 @property  long long initialInterfaceOrientation
 @property  BOOL visible
 @property  NSString *pluginBundleID

  // instance methods
  -[CKHandwritingPresentationController visible]
  -[CKHandwritingPresentationController _handleApplicationWillEnterForeground:]
  -[CKHandwritingPresentationController _handleApplicationDidEnterBackground:]
  -[CKHandwritingPresentationController setVisible:]
  -[CKHandwritingPresentationController .cxx_destruct]
  -[CKHandwritingPresentationController setAnimationScheduledUpdater:]
  -[CKHandwritingPresentationController animationScheduledUpdater]
  -[CKHandwritingPresentationController setForegrounded:]
  -[CKHandwritingPresentationController setCachedSendDelegate:]
  -[CKHandwritingPresentationController setDelegate:]
  -[CKHandwritingPresentationController browserViewController]
  -[CKHandwritingPresentationController cachedSendDelegate]
  -[CKHandwritingPresentationController setCachedPluginPayload:]
  -[CKHandwritingPresentationController _loadCachedPayloadIntoBrowser]
  -[CKHandwritingPresentationController foregrounded]
  -[CKHandwritingPresentationController cachedPluginPayload]
  -[CKHandwritingPresentationController actualVisibility]
  -[CKHandwritingPresentationController requestedVisibility]
  -[CKHandwritingPresentationController setRequestedVisibility:]
  -[CKHandwritingPresentationController setRequestedVisibilityShouldBeAnimated:]
  -[CKHandwritingPresentationController handwritingWindow]
  -[CKHandwritingPresentationController _flushHandwritingWindowCacheIfNeeded]
  -[CKHandwritingPresentationController requestedVisibilityShouldBeAnimated]
  -[CKHandwritingPresentationController _doInitialization]
  -[CKHandwritingPresentationController suppressAppearanceCallbacksBecauseOfFirstInitialization]
  -[CKHandwritingPresentationController pluginPayload]
  -[CKHandwritingPresentationController setActualVisibility:]
  -[CKHandwritingPresentationController setSuppressAppearanceCallbacksBecauseOfFirstInitialization:]
  -[CKHandwritingPresentationController setBrowserViewController:]
  -[CKHandwritingPresentationController setHandwritingWindow:]
  -[CKHandwritingPresentationController init]
  -[CKHandwritingPresentationController pluginBundleID]
  -[CKHandwritingPresentationController initialInterfaceOrientation]
  -[CKHandwritingPresentationController setDeviceOrientationManager:]
  -[CKHandwritingPresentationController setVisible:animated:]
  -[CKHandwritingPresentationController setPluginPayload:]
  -[CKHandwritingPresentationController _updateVisibilityState]
  -[CKHandwritingPresentationController delegate]
  -[CKHandwritingPresentationController sendDelegate]
  -[CKHandwritingPresentationController setInitialInterfaceOrientation:]
  -[CKHandwritingPresentationController setSendDelegate:]
  -[CKHandwritingPresentationController dealloc]
  -[CKHandwritingPresentationController isHandwritingLandscape]
  -[CKHandwritingPresentationController deviceOrientationManager]


CKAppInstallationWatcher : NSObject <LSApplicationWorkspaceObserverProtocol>
 @property  NSMutableArray *observers
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableArray *installations
 @property  NSArray *inProgressInstallations
 @property  BOOL observingApplicationWorkspace
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKAppInstallationWatcher sharedInstance]

  // instance methods
  -[CKAppInstallationWatcher applicationsDidInstall:]
  -[CKAppInstallationWatcher .cxx_destruct]
  -[CKAppInstallationWatcher applicationsDidFailToInstall:]
  -[CKAppInstallationWatcher applicationStateDidChange:]
  -[CKAppInstallationWatcher setObservers:]
  -[CKAppInstallationWatcher installations]
  -[CKAppInstallationWatcher _loadBundleIdentifiersFromDiskLocked]
  -[CKAppInstallationWatcher _callDelegateAsynchronouslyWithProgressForAppInstallation:added:updated:]
  -[CKAppInstallationWatcher _saveBundleIdentifiersToDiskLocked]
  -[CKAppInstallationWatcher _updateObservingApplicationWorkspaceLocked]
  -[CKAppInstallationWatcher setInstallations:]
  -[CKAppInstallationWatcher _updateAppProgressWithKnownChangedProxiesLocked:]
  -[CKAppInstallationWatcher init]
  -[CKAppInstallationWatcher setQueue:]
  -[CKAppInstallationWatcher inProgressInstallations]
  -[CKAppInstallationWatcher observingApplicationWorkspace]
  -[CKAppInstallationWatcher setObservingApplicationWorkspace:]
  -[CKAppInstallationWatcher _updateAppProgressWithKnownChangedProxies:]
  -[CKAppInstallationWatcher applicationsWillInstall:]
  -[CKAppInstallationWatcher addObserver:]
  -[CKAppInstallationWatcher applicationInstallsDidChange:]
  -[CKAppInstallationWatcher startListeningForAppBundleIdentifier:]
  -[CKAppInstallationWatcher fetchAllAppInstallations:]
  -[CKAppInstallationWatcher queue]
  -[CKAppInstallationWatcher observers]
  -[CKAppInstallationWatcher applicationInstallsDidUpdateIcon:]
  -[CKAppInstallationWatcher dealloc]
  -[CKAppInstallationWatcher applicationInstallsDidStart:]
  -[CKAppInstallationWatcher removeObserver:]
  -[CKAppInstallationWatcher _applicationWorkspace]


CKAppInstallation : NSObject <NSCopying>
 @property  LSApplicationProxy *proxy
 @property  double percentComplete
 @property  unsigned long installState
 @property  double startTime
 @property  LSApplicationWorkspace *_applicationWorkspace
 @property  NSString *bundleIdentifier
 @property  NSString *pluginBundleIdentifier
 @property  NSString *localizedDisplayName
 @property  UIImage *icon
 @property  BOOL installed

  // instance methods
  -[CKAppInstallation installed]
  -[CKAppInstallation icon]
  -[CKAppInstallation bundleIdentifier]
  -[CKAppInstallation localizedDisplayName]
  -[CKAppInstallation setStartTime:]
  -[CKAppInstallation .cxx_destruct]
  -[CKAppInstallation percentComplete]
  -[CKAppInstallation installState]
  -[CKAppInstallation initWithBundleIdentifier:startTime:]
  -[CKAppInstallation init]
  -[CKAppInstallation proxy]
  -[CKAppInstallation pluginBundleIdentifier]
  -[CKAppInstallation startTime]
  -[CKAppInstallation initWithBundleIdentifier:]
  -[CKAppInstallation setPercentComplete:]
  -[CKAppInstallation setProxy:]
  -[CKAppInstallation copyWithZone:]
  -[CKAppInstallation setInstallState:]
  -[CKAppInstallation _applicationWorkspace]


CKDetailsLocationShareHeaderFooterView : UITableViewHeaderFooterView <CKDetailsHeaderFooterView>
 @property  UITextView *locationSharingTextView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsLocationShareHeaderFooterView reuseIdentifier]

  // instance methods
  -[CKDetailsLocationShareHeaderFooterView .cxx_destruct]
  -[CKDetailsLocationShareHeaderFooterView layoutSubviews]
  -[CKDetailsLocationShareHeaderFooterView locationSharingTextView]
  -[CKDetailsLocationShareHeaderFooterView setLocationSharingTextView:]


CKAttachmentView : UIView <CKAttachmentView>
 @property  UIImageView *iconImageView
 @property  UILabel *actionLabel
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  CKMediaObject *mediaObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAttachmentView titleLabel]
  -[CKAttachmentView setSubtitleLabel:]
  -[CKAttachmentView icon]
  -[CKAttachmentView setMediaObject:]
  -[CKAttachmentView setTitle:]
  -[CKAttachmentView setIconImageView:]
  -[CKAttachmentView prepareForDisplay]
  -[CKAttachmentView .cxx_destruct]
  -[CKAttachmentView mediaObject]
  -[CKAttachmentView setTitleLabel:]
  -[CKAttachmentView layoutSubviews]
  -[CKAttachmentView setSubtitle:]
  -[CKAttachmentView setAction:]
  -[CKAttachmentView action]
  -[CKAttachmentView setActionLabel:]
  -[CKAttachmentView configureIconImageView:]
  -[CKAttachmentView sizeThatFits:]
  -[CKAttachmentView subtitleLabel]
  -[CKAttachmentView prepareForReuse]
  -[CKAttachmentView setIcon:]
  -[CKAttachmentView subtitle]
  -[CKAttachmentView title]
  -[CKAttachmentView initWithFrame:]
  -[CKAttachmentView actionLabel]
  -[CKAttachmentView iconImageView]


CKTipKitCollectionViewCell : UICollectionViewCell
 @property  TPKContentView *tipKitContentView

  // class methods
  +[CKTipKitCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKTipKitCollectionViewCell systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:]
  -[CKTipKitCollectionViewCell .cxx_destruct]
  -[CKTipKitCollectionViewCell setTipKitContentView:]
  -[CKTipKitCollectionViewCell dealloc]
  -[CKTipKitCollectionViewCell tipKitContentView]


CKHighlightsSearchController : CKMessageTypeSearchController <QLPreviewControllerDelegate, QLPreviewControllerConformingDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKHighlightsSearchController sectionIdentifier]
  +[CKHighlightsSearchController supportsQuicklookForResult:]
  +[CKHighlightsSearchController itemTypeForResult:]
  +[CKHighlightsSearchController indexingString]
  +[CKHighlightsSearchController sectionTitle]
  +[CKHighlightsSearchController supportedCellClasses]

  // instance methods
  -[CKHighlightsSearchController fetchAttributes]
  -[CKHighlightsSearchController filterQueries]
  -[CKHighlightsSearchController reuseIdentifierForIndex:]
  -[CKHighlightsSearchController cellForItemInCollectionView:atIndex:withIdentifier:]
  -[CKHighlightsSearchController fractionalWidth:count:forLayoutWidth:]
  -[CKHighlightsSearchController _additionalMenuElementsForResult:]
  -[CKHighlightsSearchController itemProviderForSearchResult:]
  -[CKHighlightsSearchController _activityItemProviderForResult:]
  -[CKHighlightsSearchController previewViewControllerForResult:]
  -[CKHighlightsSearchController handleSelectionForResult:]
  -[CKHighlightsSearchController queryAttributesForText:]
  -[CKHighlightsSearchController detailsFilterQueriesForChatGUIDs:]
  -[CKHighlightsSearchController applyLayoutMarginsToLayoutGroup]
  -[CKHighlightsSearchController layoutGroupWithEnvironment:]
  -[CKHighlightsSearchController cellForSupplementryItemInCollectionView:atIndexPath:supplementryViewKind:]
  -[CKHighlightsSearchController updateSupplementryViewIfNeeded:atIndexPath:]
  -[CKHighlightsSearchController deleteAttachmentForResult:]
  -[CKHighlightsSearchController shouldStartMenuInteractionForResult:]
  -[CKHighlightsSearchController createFoundItemsHandler]
  -[CKHighlightsSearchController interGroupSpacing]


CKTranscriptBalloonSelectionManager : NSObject <NSFastEnumeration>
 @property  NSMutableOrderedSet *selectedMessageGuids
 @property  NSMutableDictionary *selectedStates
 @property  NSString *trackedGuid
 @property  NSArray *chatItems
 @property  <CKTranscriptBalloonSelectionManagerDelegate> *delegate
 @property  <CKTranscriptBalloonSelectionManagerDataSource> *dataSource
 @property  unsigned long selectedGuidCount

  // instance methods
  -[CKTranscriptBalloonSelectionManager chatItems]
  -[CKTranscriptBalloonSelectionManager setDataSource:]
  -[CKTranscriptBalloonSelectionManager .cxx_destruct]
  -[CKTranscriptBalloonSelectionManager _chatItemForGUID:]
  -[CKTranscriptBalloonSelectionManager setDelegate:]
  -[CKTranscriptBalloonSelectionManager trackedGuid]
  -[CKTranscriptBalloonSelectionManager dataSource]
  -[CKTranscriptBalloonSelectionManager init]
  -[CKTranscriptBalloonSelectionManager indexOfGuid:inChatItems:]
  -[CKTranscriptBalloonSelectionManager selectedMessageGuids]
  -[CKTranscriptBalloonSelectionManager selectedStates]
  -[CKTranscriptBalloonSelectionManager setTrackedGuid:]
  -[CKTranscriptBalloonSelectionManager selectedGuidAtIndex:]
  -[CKTranscriptBalloonSelectionManager removeTrackedGuid]
  -[CKTranscriptBalloonSelectionManager setSelectedMessageGuids:]
  -[CKTranscriptBalloonSelectionManager setSelectedStates:]
  -[CKTranscriptBalloonSelectionManager countByEnumeratingWithState:objects:count:]
  -[CKTranscriptBalloonSelectionManager delegate]
  -[CKTranscriptBalloonSelectionManager removeAllSelectedMessageGuids]
  -[CKTranscriptBalloonSelectionManager isMessageGuidSelected:]
  -[CKTranscriptBalloonSelectionManager addSelectedMessageGuid:selectionState:]
  -[CKTranscriptBalloonSelectionManager removeSelectedMessageGuid:]
  -[CKTranscriptBalloonSelectionManager selectedStateForGuid:]
  -[CKTranscriptBalloonSelectionManager selectedGuidCount]
  -[CKTranscriptBalloonSelectionManager setSelectedGuids:]
  -[CKTranscriptBalloonSelectionManager trackSelectedGuid:selectionState:]
  -[CKTranscriptBalloonSelectionManager removeAllSelectedMessageGuidsExceptTrackedGuid]
  -[CKTranscriptBalloonSelectionManager __im_ff_commSafetyUIEnabled]


CKAssociatedStickerTranscriptCell : CKAssociatedMessageTranscriptCell <CKAnimationTimerObserver>
 @property  CKBalloonImageView *imageView
 @property  NSArray *frames
 @property  UILongPressGestureRecognizer *longPressGestureRecognizer
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  UIImage *image
 @property  CKAnimatedImage *animatedImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKAssociatedStickerTranscriptCell associatedStickerXOriginForStickerFrame:parentSize:contentAlignmentRect:orientation:geometryDescriptor:outBalloonOffset:]

  // instance methods
  -[CKAssociatedStickerTranscriptCell imageView]
  -[CKAssociatedStickerTranscriptCell setTapGestureRecognizer:]
  -[CKAssociatedStickerTranscriptCell performReload:completion:]
  -[CKAssociatedStickerTranscriptCell image]
  -[CKAssociatedStickerTranscriptCell .cxx_destruct]
  -[CKAssociatedStickerTranscriptCell setFrames:]
  -[CKAssociatedStickerTranscriptCell performReveal:]
  -[CKAssociatedStickerTranscriptCell frames]
  -[CKAssociatedStickerTranscriptCell tapGestureRecognizer]
  -[CKAssociatedStickerTranscriptCell longPressGestureRecognizer]
  -[CKAssociatedStickerTranscriptCell animationTimerFired:]
  -[CKAssociatedStickerTranscriptCell prepareForReuse]
  -[CKAssociatedStickerTranscriptCell initWithFrame:]
  -[CKAssociatedStickerTranscriptCell setImage:]
  -[CKAssociatedStickerTranscriptCell didMoveToWindow]
  -[CKAssociatedStickerTranscriptCell setLongPressGestureRecognizer:]
  -[CKAssociatedStickerTranscriptCell dealloc]
  -[CKAssociatedStickerTranscriptCell setImageView:]
  -[CKAssociatedStickerTranscriptCell layoutSubviewsForDrawer]
  -[CKAssociatedStickerTranscriptCell animatedImage]
  -[CKAssociatedStickerTranscriptCell updateAnimationTimerObserving]
  -[CKAssociatedStickerTranscriptCell performHide:]
  -[CKAssociatedStickerTranscriptCell doubleTapGestureRecognized:]
  -[CKAssociatedStickerTranscriptCell longPressGestureRecognized:]
  -[CKAssociatedStickerTranscriptCell configureForChatItem:context:]
  -[CKAssociatedStickerTranscriptCell layoutSubviewsForAlignmentContents]
  -[CKAssociatedStickerTranscriptCell setAnimatedImage:]


CKBrowserSwitcherViewController : UIViewController <UIGestureRecognizerDelegate, CKBrowserTransitionCoordinatorDelegate, CKAppGrabberViewDelegate, _UIBackdropViewGraphicsQualityChangeDelegate>
 @property  UIView *contentView
 @property  CKBrowserTransitionCoordinator *transitionCoordinator
 @property  UIView *browserContainer
 @property  CKBrowserSwitcherCell *cell
 @property  NSMutableDictionary *livePluginIdentifierToTimestampMap
 @property  UILongPressGestureRecognizer *touchTracker
 @property  IMBalloonPlugin *currentVisiblePlugin
 @property  CKAppGrabberView *grabberView
 @property  UIView *shadowView
 @property  BOOL insertedViaCollapse
 @property  BOOL browserViewReadyForUserInteraction
 @property  BOOL dragging
 @property  BOOL inDragAndDrop
 @property  BOOL interactiveExpandStarted
 @property  IMBalloonPlugin *balloonPlugin
 @property  BOOL transitioningFromSnapshotToLiveView
 @property  BOOL transitioningExpandedState
 @property  BOOL allowFooterLabelUpdates
 @property  BOOL allowPluginLaunchNotifications
 @property  @? performAfterFirstLayoutBlock
 @property  BOOL viewHasLaidOutSubviews
 @property  NSDate *timeOfLastScrollingDecelerationEnded
 @property  BOOL browserIsLoadingCompact
 @property  BOOL browserIsCollapsingFromFullscreen
 @property  <CKBrowserSwitcherViewControllerDelegate><CKBrowserTransitionCoordinatorDelegate> *delegate
 @property  UIViewController<CKBrowserViewControllerProtocol> *currentViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKBrowserSwitcherViewController layoutMarginsDidChange]
  -[CKBrowserSwitcherViewController cell]
  -[CKBrowserSwitcherViewController setDragging:]
  -[CKBrowserSwitcherViewController traitCollectionDidChange:]
  -[CKBrowserSwitcherViewController _rubberBandOffsetWithoutDecorationForOffset:maxOffset:minOffset:range:outside:]
  -[CKBrowserSwitcherViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKBrowserSwitcherViewController showPlugin:]
  -[CKBrowserSwitcherViewController .cxx_destruct]
  -[CKBrowserSwitcherViewController viewDidLoad]
  -[CKBrowserSwitcherViewController traitCollection]
  -[CKBrowserSwitcherViewController contentView]
  -[CKBrowserSwitcherViewController setCell:]
  -[CKBrowserSwitcherViewController backdropView:didChangeToGraphicsQuality:]
  -[CKBrowserSwitcherViewController updateGrabberTitleAndIconForPlugin:]
  -[CKBrowserSwitcherViewController animateInCompactWithCompletion:]
  -[CKBrowserSwitcherViewController setTransitionCoordinator:]
  -[CKBrowserSwitcherViewController animateOutCompactWithCompletion:]
  -[CKBrowserSwitcherViewController setDelegate:]
  -[CKBrowserSwitcherViewController shouldAlwaysShowAppTitle]
  -[CKBrowserSwitcherViewController viewDidAppear:]
  -[CKBrowserSwitcherViewController backdropView:willChangeToGraphicsQuality:]
  -[CKBrowserSwitcherViewController setInDragAndDrop:]
  -[CKBrowserSwitcherViewController shouldAutorotate]
  -[CKBrowserSwitcherViewController appGrabberViewCloseButtonTapped:]
  -[CKBrowserSwitcherViewController setGrabberView:]
  -[CKBrowserSwitcherViewController isDragging]
  -[CKBrowserSwitcherViewController shadowView]
  -[CKBrowserSwitcherViewController browserContainer]
  -[CKBrowserSwitcherViewController setBrowserViewReadyForUserInteraction:]
  -[CKBrowserSwitcherViewController setAllowFooterLabelUpdates:]
  -[CKBrowserSwitcherViewController unloadRemoteViewControllers]
  -[CKBrowserSwitcherViewController setTransitioningFromSnapshotToLiveView:]
  -[CKBrowserSwitcherViewController setAllowPluginLaunchNotifications:]
  -[CKBrowserSwitcherViewController restingContainerViewOriginY]
  -[CKBrowserSwitcherViewController setBrowserContainer:]
  -[CKBrowserSwitcherViewController expandGestureTouchMoved:]
  -[CKBrowserSwitcherViewController _hasLandscapeGutters]
  -[CKBrowserSwitcherViewController restingGrabberFrame]
  -[CKBrowserSwitcherViewController activeBrowserView]
  -[CKBrowserSwitcherViewController _updateBrowserViewPositionForPluginAndInsertIfNecessary:]
  -[CKBrowserSwitcherViewController setViewHasLaidOutSubviews:]
  -[CKBrowserSwitcherViewController performAfterFirstLayoutBlock]
  -[CKBrowserSwitcherViewController setPerformAfterFirstLayoutBlock:]
  -[CKBrowserSwitcherViewController dragManagerWillStartDrag:]
  -[CKBrowserSwitcherViewController dragManagerDidStartDrag:]
  -[CKBrowserSwitcherViewController _handleVisibleSwitcherPluginsChanged:]
  -[CKBrowserSwitcherViewController gestureRecognizerShouldBegin:]
  -[CKBrowserSwitcherViewController _transitionSnapshotViewToBrowserViewAfterViewDidPrepareForDisplay:]
  -[CKBrowserSwitcherViewController _handleRemoteViewControllerConnectionInterrupted:]
  -[CKBrowserSwitcherViewController setInsertedViaCollapse:]
  -[CKBrowserSwitcherViewController saveSnapshotForCurrentBrowserViewControllerIfPossible]
  -[CKBrowserSwitcherViewController _updateCurrentBrowserSnapshotIfPossible]
  -[CKBrowserSwitcherViewController _transitionSnapshotViewToBrowserView]
  -[CKBrowserSwitcherViewController isInDragAndDrop]
  -[CKBrowserSwitcherViewController stopExpandAnimatorAndCleanupState]
  -[CKBrowserSwitcherViewController isTransitioningExpandedState]
  -[CKBrowserSwitcherViewController setTransitioningExpandedState:]
  -[CKBrowserSwitcherViewController viewHasLaidOutSubviews]
  -[CKBrowserSwitcherViewController browserIsLoadingCompact]
  -[CKBrowserSwitcherViewController setShadowView:]
  -[CKBrowserSwitcherViewController livePluginIdentifierToTimestampMap]
  -[CKBrowserSwitcherViewController _removeBrowserWithPluginIdentifierFromViewHierarchy:]
  -[CKBrowserSwitcherViewController setCurrentViewController:]
  -[CKBrowserSwitcherViewController cleanupExpandAnimatorState]
  -[CKBrowserSwitcherViewController setupPausedExpandAnimatorIfNeeded]
  -[CKBrowserSwitcherViewController handleExpandButton:]
  -[CKBrowserSwitcherViewController reverseAndCleanupExpandAnimator]
  -[CKBrowserSwitcherViewController setInteractiveExpandStarted:]
  -[CKBrowserSwitcherViewController setCurrentVisiblePlugin:]
  -[CKBrowserSwitcherViewController currentViewController]
  -[CKBrowserSwitcherViewController initWithConversation:sendDelegate:presentingViewController:]
  -[CKBrowserSwitcherViewController setBrowserIsCollapsingFromFullscreen:]
  -[CKBrowserSwitcherViewController _removeBrowserFromViewHierarchy:]
  -[CKBrowserSwitcherViewController _updateVisibleBrowserView]
  -[CKBrowserSwitcherViewController _loadBrowserForBalloonPlugin:datasource:]
  -[CKBrowserSwitcherViewController _browserSize]
  -[CKBrowserSwitcherViewController _performAfterFirstLayout:]
  -[CKBrowserSwitcherViewController _switchToVisiblePluginWithIdentifier:]
  -[CKBrowserSwitcherViewController _snapshotCurrentViewController]
  -[CKBrowserSwitcherViewController _pluginHasLiveBrowserViewInSwitcher:]
  -[CKBrowserSwitcherViewController _updateActiveBrowserTimestampForCurrentBalloonPlugin]
  -[CKBrowserSwitcherViewController isTransitioningFromSnapshotToLiveView]
  -[CKBrowserSwitcherViewController currentVisiblePlugin]
  -[CKBrowserSwitcherViewController browserIsCollapsingFromFullscreen]
  -[CKBrowserSwitcherViewController _updateActiveBrowserAlphaStateOnInsertForCurrentController:currentView:]
  -[CKBrowserSwitcherViewController _insertCurrentBrowserAndRemoveOldBrowsersIfNeeded]
  -[CKBrowserSwitcherViewController setBrowserIsLoadingCompact:]
  -[CKBrowserSwitcherViewController touchTracker]
  -[CKBrowserSwitcherViewController viewWillDisappear:]
  -[CKBrowserSwitcherViewController setBalloonPlugin:]
  -[CKBrowserSwitcherViewController isBrowserSwitcherFirstLaunch]
  -[CKBrowserSwitcherViewController setLivePluginIdentifierToTimestampMap:]
  -[CKBrowserSwitcherViewController insertedViaCollapse]
  -[CKBrowserSwitcherViewController interactiveExpandStarted]
  -[CKBrowserSwitcherViewController allowFooterLabelUpdates]
  -[CKBrowserSwitcherViewController showBrowserFullscreenForPlugin:datasource:]
  -[CKBrowserSwitcherViewController showBrowserInSwitcherForPlugin:datasource:reloadData:]
  -[CKBrowserSwitcherViewController isBrowserReadyForUserInteraction]
  -[CKBrowserSwitcherViewController viewDidLayoutSubviews]
  -[CKBrowserSwitcherViewController gestureRecognizer:shouldReceiveTouch:]
  -[CKBrowserSwitcherViewController allowPluginLaunchNotifications]
  -[CKBrowserSwitcherViewController timeOfLastScrollingDecelerationEnded]
  -[CKBrowserSwitcherViewController setTimeOfLastScrollingDecelerationEnded:]
  -[CKBrowserSwitcherViewController appTitleOverride]
  -[CKBrowserSwitcherViewController setTouchTracker:]
  -[CKBrowserSwitcherViewController balloonPlugin]
  -[CKBrowserSwitcherViewController dismissBrowserFullscreenAnimated:withCompletion:]
  -[CKBrowserSwitcherViewController transitionToFullscreen]
  -[CKBrowserSwitcherViewController transitionToCollapsed]
  -[CKBrowserSwitcherViewController showBrowserFullscreenModalForPlugin:datasource:]
  -[CKBrowserSwitcherViewController _currentPluginIsJellyfish]
  -[CKBrowserSwitcherViewController transitionCoordinator]
  -[CKBrowserSwitcherViewController delegate]
  -[CKBrowserSwitcherViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKBrowserSwitcherViewController appIconOverride]
  -[CKBrowserSwitcherViewController appGrabberForBrowserTransitionCoordinator:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinator:expandedStateDidChange:withReason:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinatorWillTransitionOrPresentToFullscreen:withReason:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinatorDidTransitionOrPresentToFullscreen:withReason:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinatorWillCollapseOrDismiss:withReason:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinatorDidCollapseOrDismiss:withReason:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinator:browserWillBecomeInactive:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinator:didTransitionFromOrientation:toOrientation:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinator:didSwitchToPlugin:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinator:hasUpdatedLastTouchDate:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinator:preferredSizeForBrowser:]
  -[CKBrowserSwitcherViewController transitionsPresentationViewController]
  -[CKBrowserSwitcherViewController browserTransitionCoordinatorWantsPresentationOfAppStore:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinatorWantsPresentationOfAppManager:]
  -[CKBrowserSwitcherViewController reinsertAppGrabberViewForBrowserTransitionCoordinator:]
  -[CKBrowserSwitcherViewController cachedCompactFrameInWindowCoordsForBrowserTransitionCoordinator:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinatorCollapsedContentHeight:]
  -[CKBrowserSwitcherViewController browserTransitionCoordinatorShouldDismissOnDragSuccess:]
  -[CKBrowserSwitcherViewController dealloc]
  -[CKBrowserSwitcherViewController setContentView:]
  -[CKBrowserSwitcherViewController dragManagerDidEndDragging:]
  -[CKBrowserSwitcherViewController loadView]
  -[CKBrowserSwitcherViewController grabberView]
  -[CKBrowserSwitcherViewController supportedInterfaceOrientations]
  -[CKBrowserSwitcherViewController viewDidDisappear:]


CKStoragePlugin : STStoragePlugin <STStorageOptionTipDelegate>
 @property  STStorageOptionTip *cachedAutoDeleteMessagesTip
 @property  unsigned long cachedSpaceSavedByAutoDeletingMessages
 @property  double lastQuerySpaceSavedByAutoDeletingMessagesTime
 @property  STStorageActionTip *cachedReviewLargeConversationsTip
 @property  unsigned long cachedSpaceSavedByReviewingLargeConversations
 @property  double lastQuerySpaceSavedByReviewingLargeConversationsTime
 @property  STStorageActionTip *cachedReviewLargeAttachmentsTip
 @property  BOOL cachedAttachmentsTakeUpSignificantSpace
 @property  NSDate *cachedAttachmentsTakeUpSignificantSpaceDate
 @property  STStorageOptionTip *cachedMessagesOniCloudTip
 @property  unsigned long cachedSpaceSavedByDeletingNonSyncedAttachments
 @property  double lastQuerySpaceSavedByNonSyncedDeletingAttachments
 @property  NSArray *appSpecifiers
 @property  NSArray *cloudAppSpecifiers
 @property  NSDictionary *spaceTakenByAttachmentClass
 @property  IMCloudKitHooks *cloudKitHooks
 @property  IMMessageDirectoryContents *messageDirectoryContents
 @property  IMDirectoryContentsSizes *messageDirectorySizes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKStoragePlugin _representedApp]

  // instance methods
  -[CKStoragePlugin .cxx_destruct]
  -[CKStoragePlugin init]
  -[CKStoragePlugin messageDatabaseSize]
  -[CKStoragePlugin _loadTips]
  -[CKStoragePlugin appSpecifiers]
  -[CKStoragePlugin _loadAppSpecifiers]
  -[CKStoragePlugin _iCloudHooksSetEnabledReturned:]
  -[CKStoragePlugin _iCloudHooksValuesChanged:]
  -[CKStoragePlugin cloudAppSpecifiers]
  -[CKStoragePlugin _loadiCloudAppSpecifiers]
  -[CKStoragePlugin _cloudKitEnabled]
  -[CKStoragePlugin calculateDirectorySizesIfNeeded]
  -[CKStoragePlugin messageDirectorySizes]
  -[CKStoragePlugin cachedAutoDeleteMessagesTip]
  -[CKStoragePlugin _enableAutoDeleteMessages]
  -[CKStoragePlugin cachedMessagesOniCloudTip]
  -[CKStoragePlugin _enableMessagesOniCloud]
  -[CKStoragePlugin _spaceSavedByReviewingLargeConversations]
  -[CKStoragePlugin _spaceTakenForSpecifier:]
  -[CKStoragePlugin _loadAttachmentSizes]
  -[CKStoragePlugin spaceTakenByAttachmentClass]
  -[CKStoragePlugin setAppSpecifiers:]
  -[CKStoragePlugin setCloudAppSpecifiers:]
  -[CKStoragePlugin messageDirectoryContents]
  -[CKStoragePlugin setSpaceTakenByAttachmentClass:]
  -[CKStoragePlugin _autoDeleteMessagesTip]
  -[CKStoragePlugin _reviewLargeAttachmentsTip]
  -[CKStoragePlugin _messagesOniCloudTip]
  -[CKStoragePlugin cachedAttachmentsTakeUpSignificantSpaceDate]
  -[CKStoragePlugin _attachmentsTakeUpMoreSpaceThanBytes:]
  -[CKStoragePlugin setCachedAttachmentsTakeUpSignificantSpace:]
  -[CKStoragePlugin setCachedAttachmentsTakeUpSignificantSpaceDate:]
  -[CKStoragePlugin cachedAttachmentsTakeUpSignificantSpace]
  -[CKStoragePlugin lastQuerySpaceSavedByAutoDeletingMessagesTime]
  -[CKStoragePlugin cloudKitHooks]
  -[CKStoragePlugin setCachedSpaceSavedByAutoDeletingMessages:]
  -[CKStoragePlugin setLastQuerySpaceSavedByAutoDeletingMessagesTime:]
  -[CKStoragePlugin cachedSpaceSavedByAutoDeletingMessages]
  -[CKStoragePlugin _forceShowingAutoDeleteMessagesTip]
  -[CKStoragePlugin _spaceSavedByAutoDeleteMessages]
  -[CKStoragePlugin _shouldDisplayAutoDeleteMessagesTip]
  -[CKStoragePlugin setCachedAutoDeleteMessagesTip:]
  -[CKStoragePlugin _totalSpaceOfAttachments]
  -[CKStoragePlugin lastQuerySpaceSavedByReviewingLargeConversationsTime]
  -[CKStoragePlugin _totalSpaceOfLargeConversations]
  -[CKStoragePlugin setCachedSpaceSavedByReviewingLargeConversations:]
  -[CKStoragePlugin setLastQuerySpaceSavedByReviewingLargeConversationsTime:]
  -[CKStoragePlugin cachedSpaceSavedByReviewingLargeConversations]
  -[CKStoragePlugin _forceShowingReviewLargeAttachmentsTip]
  -[CKStoragePlugin _attachmentsTakeUpSignificantSpace]
  -[CKStoragePlugin _shouldDisplayReviewLargeAttachmentsTip]
  -[CKStoragePlugin cachedReviewLargeAttachmentsTip]
  -[CKStoragePlugin setCachedReviewLargeAttachmentsTip:]
  -[CKStoragePlugin lastQuerySpaceSavedByNonSyncedDeletingAttachments]
  -[CKStoragePlugin setCachedSpaceSavedByDeletingNonSyncedAttachments:]
  -[CKStoragePlugin documentAppIdentifiers]
  -[CKStoragePlugin dealloc]
  -[CKStoragePlugin setLastQuerySpaceSavedByNonSyncedDeletingAttachments:]
  -[CKStoragePlugin cachedSpaceSavedByDeletingNonSyncedAttachments]
  -[CKStoragePlugin _displayICloudErrorMessage]
  -[CKStoragePlugin enableOptionForTip:]
  -[CKStoragePlugin _refreshMessageOniCloudTipIfNeeded]
  -[CKStoragePlugin documentSpecifiersForApp:]
  -[CKStoragePlugin cloudDocumentSpecifiers]
  -[CKStoragePlugin externDataSizeAppIdentifiers]
  -[CKStoragePlugin externDataSizeForApp:]
  -[CKStoragePlugin _purgeableDiskSpace]
  -[CKStoragePlugin _spaceSavedByDeletingNonSyncedAttachments]
  -[CKStoragePlugin cachedReviewLargeConversationsTip]
  -[CKStoragePlugin setCachedMessagesOniCloudTip:]
  -[CKStoragePlugin setCachedReviewLargeConversationsTip:]
  -[CKStoragePlugin setCloudKitHooks:]


CKBalloonChatItem : CKChatItem
 @property  BOOL balloonOrientation
 @property  unsigned long balloonCorners
 @property  BOOL tailShape
 @property  BOOL balloonShape
 @property  Class balloonViewClass
 @property  Class impactBalloonViewClass
 @property  BOOL fromMe
 @property  BOOL failed
 @property  NSDate *time
 @property  IMHandle *sender
 @property  BOOL shouldCacheSize
 @property  BOOL isBlackholed
 @property  BOOL isMultilineText

  // instance methods
  -[CKBalloonChatItem layoutType]
  -[CKBalloonChatItem isEditable]
  -[CKBalloonChatItem transcriptOrientation]
  -[CKBalloonChatItem displayDuringSend]
  -[CKBalloonChatItem impactBalloonViewClass]
  -[CKBalloonChatItem contentInsets]
  -[CKBalloonChatItem .cxx_destruct]
  -[CKBalloonChatItem sender]
  -[CKBalloonChatItem balloonOrientation]
  -[CKBalloonChatItem wantsDrawerLayout]
  -[CKBalloonChatItem transcriptTextAlignmentInsets]
  -[CKBalloonChatItem balloonViewClass]
  -[CKBalloonChatItem configureBalloonView:]
  -[CKBalloonChatItem isFromMe]
  -[CKBalloonChatItem time]
  -[CKBalloonChatItem tailShape]
  -[CKBalloonChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKBalloonChatItem loadTranscriptDrawerText]
  -[CKBalloonChatItem cellIdentifier]
  -[CKBalloonChatItem balloonDescriptor]
  -[CKBalloonChatItem failed]
  -[CKBalloonChatItem isMultilineText]
  -[CKBalloonChatItem balloonCorners]
  -[CKBalloonChatItem needsPreservedAspectRatio]
  -[CKBalloonChatItem cellClass]
  -[CKBalloonChatItem needsAdjustedTextAlignmentInsets]
  -[CKBalloonChatItem contact]
  -[CKBalloonChatItem shouldCacheSize]
  -[CKBalloonChatItem balloonShape]
  -[CKBalloonChatItem isBlackholed]


CKPassbookMediaObject : CKMediaObject
 @property  PKPass *pass
 @property  BOOL supported

  // class methods
  +[CKPassbookMediaObject isPreviewable]
  +[CKPassbookMediaObject UTITypes]
  +[CKPassbookMediaObject fallbackFilenamePrefix]

  // instance methods
  -[CKPassbookMediaObject pass]
  -[CKPassbookMediaObject generateThumbnailForWidth:orientation:]
  -[CKPassbookMediaObject .cxx_destruct]
  -[CKPassbookMediaObject isSupported]
  -[CKPassbookMediaObject attachmentSummary:]
  -[CKPassbookMediaObject shouldShowViewer]
  -[CKPassbookMediaObject previewForWidth:orientation:]
  -[CKPassbookMediaObject setPass:]
  -[CKPassbookMediaObject previewBalloonViewClass]
  -[CKPassbookMediaObject shouldShowDisclosure]
  -[CKPassbookMediaObject previewItemTitle]
  -[CKPassbookMediaObject mediaType]
  -[CKPassbookMediaObject metricsCollectorMediaType]
  -[CKPassbookMediaObject shouldBeQuickLooked]


CKTranscriptActionButtonCell : CKTranscriptAbstractLabelCell
 @property  <CKTranscriptActionButtonCellDelegate> *delegate

  // class methods
  +[CKTranscriptActionButtonCell sizeThatFits:attributedText:displayScale:]
  +[CKTranscriptActionButtonCell reuseIdentifier]

  // instance methods
  -[CKTranscriptActionButtonCell setAttributedText:]
  -[CKTranscriptActionButtonCell label]
  -[CKTranscriptActionButtonCell attributedText]
  -[CKTranscriptActionButtonCell .cxx_destruct]
  -[CKTranscriptActionButtonCell setDelegate:]
  -[CKTranscriptActionButtonCell cellView]
  -[CKTranscriptActionButtonCell initWithFrame:]
  -[CKTranscriptActionButtonCell delegate]
  -[CKTranscriptActionButtonCell buttonPrimaryActionTriggered:]
  -[CKTranscriptActionButtonCell configureForChatItem:context:]


CKCamPhysicalCaptureNotifier : NSObject
 @property  long long state
 @property  long long _volumeUpButtonState
 @property  long long _volumeDownButtonState
 @property  SBSHardwareButtonService *_cameraButtonRequest
 @property  <CKCamPhysicalCaptureNotifierDelegate> *delegate
 @property  BOOL enabled

  // instance methods
  -[CKCamPhysicalCaptureNotifier _setState:]
  -[CKCamPhysicalCaptureNotifier .cxx_destruct]
  -[CKCamPhysicalCaptureNotifier setDelegate:]
  -[CKCamPhysicalCaptureNotifier init]
  -[CKCamPhysicalCaptureNotifier state]
  -[CKCamPhysicalCaptureNotifier isEnabled]
  -[CKCamPhysicalCaptureNotifier delegate]
  -[CKCamPhysicalCaptureNotifier dealloc]
  -[CKCamPhysicalCaptureNotifier setEnabled:]
  -[CKCamPhysicalCaptureNotifier _volumeDownButtonState]
  -[CKCamPhysicalCaptureNotifier _updateCaptureButtonNotifications]
  -[CKCamPhysicalCaptureNotifier _handleVolumeUpButtonUpNotification:]
  -[CKCamPhysicalCaptureNotifier _cameraButtonRequest]
  -[CKCamPhysicalCaptureNotifier _handleVolumeUpButtonDownNotification:]
  -[CKCamPhysicalCaptureNotifier _handleVolumeDownButtonUpNotification:]
  -[CKCamPhysicalCaptureNotifier _handleVolumeDownButtonDownNotification:]
  -[CKCamPhysicalCaptureNotifier set_cameraButtonRequest:]
  -[CKCamPhysicalCaptureNotifier _setVolumeUpButtonState:]
  -[CKCamPhysicalCaptureNotifier _setVolumeDownButtonState:]
  -[CKCamPhysicalCaptureNotifier _updateStateAndNotifyDelegateIfNeeded]
  -[CKCamPhysicalCaptureNotifier _volumeUpButtonState]


CKNotificationChatController : CKCoreChatController <UITextInputPayloadDelegate, CKMessageEntryViewDelegate, CKMessageEntryViewInputDelegate>
 @property  CKMessageEntryViewController *entryViewController
 @property  CKScheduledUpdater *typingUpdater
 @property  CKRaiseGesture *raiseGesture
 @property  BOOL shouldAllowReplyFromLockScreen
 @property  NSDate *notificationViewWillAppearDate
 @property  NSTimer *notificationViewDismissalTimer
 @property  BOOL allowedByScreenTime
 @property  STLockoutViewController *lockoutViewController
 @property  CKMessageEntryView *entryView
 @property  NSExtensionContext *urlOpenContext
 @property  <CKNotificationChatControllerDelegate> *delegate
 @property  CKFullScreenBalloonViewControllerNotification *notificationFullScreenBalloonController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKNotificationChatController notificationViewWillAppearDate]
  -[CKNotificationChatController setNotificationViewWillAppearDate:]
  -[CKNotificationChatController notificationViewDismissalTimer]
  -[CKNotificationChatController setNotificationViewDismissalTimer:]
  -[CKNotificationChatController inputAccessoryView]
  -[CKNotificationChatController messageEntryViewSendButtonHitWhileDisabled:]
  -[CKNotificationChatController messageEntryViewWidth:andOffset:]
  -[CKNotificationChatController raiseGesture]
  -[CKNotificationChatController .cxx_destruct]
  -[CKNotificationChatController initWithConversation:]
  -[CKNotificationChatController _setConversationDeferredSetup]
  -[CKNotificationChatController showFullScreenAcknowledgmentPickerForChatItem:]
  -[CKNotificationChatController _dismissFullScreenBubbleViewControllerAnimated:withSendAnimation:completion:]
  -[CKNotificationChatController _fullScreenBalloonViewControllerWithChatItem:]
  -[CKNotificationChatController fullScreenBalloonViewController:sendMessageAcknowledgment:forChatItem:]
  -[CKNotificationChatController fullScreenBalloonViewControllerHandleDismissTap:]
  -[CKNotificationChatController fullScreenBalloonViewController:didAppearAnimated:]
  -[CKNotificationChatController fullScreenBalloonViewControllerDidDisappear:]
  -[CKNotificationChatController fullScreenBalloonViewController:willAppearAnimated:]
  -[CKNotificationChatController fullScreenBalloonViewController:willDisappearWithSendAnimation:]
  -[CKNotificationChatController fullScreenBalloonViewController:verticallyScrollTranscriptByAmount:animated:completion:]
  -[CKNotificationChatController messageEntryViewDidChange:]
  -[CKNotificationChatController messageEntryViewMaxHeight:]
  -[CKNotificationChatController canBecomeFirstResponder]
  -[CKNotificationChatController messageEntryView:didInsertPluginPayload:]
  -[CKNotificationChatController setRaiseGesture:]
  -[CKNotificationChatController messageEntryViewShouldBeginEditing:]
  -[CKNotificationChatController messageEntryViewMaxShelfPluginViewSize:]
  -[CKNotificationChatController messageEntryViewDidEndEditing:]
  -[CKNotificationChatController messageEntryViewDidBeginEditingNotAlreadyActive:]
  -[CKNotificationChatController messageEntryView:shouldInsertMediaObjects:]
  -[CKNotificationChatController messageEntryView:didTapMediaObject:]
  -[CKNotificationChatController messageEntryViewDidTakeFocus:]
  -[CKNotificationChatController messageEntryViewHandwritingButtonHit:]
  -[CKNotificationChatController viewDidAppear:]
  -[CKNotificationChatController messageEntryViewRecordingDidChange:]
  -[CKNotificationChatController _updateEntryViewFrameIfNeeded:]
  -[CKNotificationChatController becomeFirstResponder]
  -[CKNotificationChatController raiseGestureRecognized:]
  -[CKNotificationChatController messageEntryViewPhotoButtonHit:]
  -[CKNotificationChatController sendComposition:]
  -[CKNotificationChatController wantsWindowedPresentation]
  -[CKNotificationChatController preserveModalPresentationStyle]
  -[CKNotificationChatController messageEntryViewBrowserButtonHit:]
  -[CKNotificationChatController constrainToPresentingVCBounds]
  -[CKNotificationChatController forceWindowedPresentation]
  -[CKNotificationChatController allowedByScreenTime]
  -[CKNotificationChatController messageEntryViewSendButtonHit:]
  -[CKNotificationChatController messageEntryViewRaiseGestureAutoSend:]
  -[CKNotificationChatController pluginButtonsEnabled]
  -[CKNotificationChatController entryView]
  -[CKNotificationChatController sendCurrentLocationMessage:]
  -[CKNotificationChatController setSendingMessage:]
  -[CKNotificationChatController isSafeToMarkAsRead]
  -[CKNotificationChatController setAllowedByScreenTime:]
  -[CKNotificationChatController transcriptCollectionViewControllerPlayingAudioDidChange:]
  -[CKNotificationChatController _raiseToListenSettingChanged:]
  -[CKNotificationChatController viewWillDisappear:]
  -[CKNotificationChatController handlePayload:withPayloadId:]
  -[CKNotificationChatController transcriptCollectionViewController:balloonView:tappedForChatItem:]
  -[CKNotificationChatController transcriptCollectionViewController:balloonView:longPressedForItemWithIndexPath:]
  -[CKNotificationChatController viewWillAppear:]
  -[CKNotificationChatController setEntryViewController:]
  -[CKNotificationChatController entryViewController]
  -[CKNotificationChatController shouldShowEntryView]
  -[CKNotificationChatController transcriptCollectionViewControllerChatItemsDidChange:]
  -[CKNotificationChatController _maxEntryViewHeight]
  -[CKNotificationChatController _setEntryViewFrame:animated:]
  -[CKNotificationChatController setTypingUpdater:]
  -[CKNotificationChatController setConversation:]
  -[CKNotificationChatController typingUpdater]
  -[CKNotificationChatController inputAccessoryViewControllerEnabled]
  -[CKNotificationChatController updateTyping]
  -[CKNotificationChatController _updateTitleAnimated:]
  -[CKNotificationChatController dealloc]
  -[CKNotificationChatController setEntryView:]
  -[CKNotificationChatController setLocalUserIsComposing:withPluginBundleID:typingIndicatorData:]
  -[CKNotificationChatController registerForTextInputPayloadHandling]
  -[CKNotificationChatController progressBar]
  -[CKNotificationChatController inputAccessoryViewController]
  -[CKNotificationChatController viewLayoutMarginsDidChange]
  -[CKNotificationChatController lockoutViewController]
  -[CKNotificationChatController setLockoutViewController:]
  -[CKNotificationChatController __raiseGestureRecognized:]
  -[CKNotificationChatController wantsReplyButton]
  -[CKNotificationChatController _deviceIsPasscodeLocked]
  -[CKNotificationChatController _menuTitleForChatItem:]
  -[CKNotificationChatController _messageReceivedInCurrentTranscript:]
  -[CKNotificationChatController _allowedByScreenTimeChanged:]
  -[CKNotificationChatController _setupShouldShowReplyFromLockScreen]
  -[CKNotificationChatController updateRaiseGesture]
  -[CKNotificationChatController notificationFullScreenBalloonController]
  -[CKNotificationChatController setNotificationFullScreenBalloonController:]
  -[CKNotificationChatController urlOpenContext]
  -[CKNotificationChatController shouldAllowReplyFromLockScreen]
  -[CKNotificationChatController backgroundViewTapGestureRecognized:]
  -[CKNotificationChatController messageEntryShouldHideCaret:]
  -[CKNotificationChatController unregisterForTextInputPayloadHandling]
  -[CKNotificationChatController balloonMaxWidth]
  -[CKNotificationChatController _canShowWhileLocked]
  -[CKNotificationChatController setShouldAllowReplyFromLockScreen:]
  -[CKNotificationChatController lockoutViewControllerClass]
  -[CKNotificationChatController _openMessagesForChat:]
  -[CKNotificationChatController launchURLForInputMode:]
  -[CKNotificationChatController setUrlOpenContext:]
  -[CKNotificationChatController messageEntryViewHighLightInputButton:]


CKFullScreenBalloonViewControllerPhone : CKFullScreenBalloonViewController <CKBalloonViewDelegate, CKStickerDetailViewControllerDelegate, PHLivePhotoViewDelegate, CKMessageHighlightButtonDelegate>
 @property  CKGroupAcknowledgmentVotingViewController *votingViewController
 @property  UIView *balloonView
 @property  NSArray *interfaceActions
 @property  CKLivePhotoBalloonView *livePhotoBalloonView
 @property  UIVisualEffectView *replyButtonEffectView
 @property  CAShapeLayer *replyButtonBorderLayer
 @property  CAShapeLayer *replyButtonMaskLayer
 @property  CAShapeLayer *tintViewMaskLayer
 @property  UIView *replyButtonView
 @property  double balloonYOffsetFromTranscript
 @property  BOOL animationsDisabledForTesting
 @property  CKMessageHighlightButton *highlightButton
 @property  BOOL hideBalloonView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKFullScreenBalloonViewControllerPhone interfaceActions]
  -[CKFullScreenBalloonViewControllerPhone livePhotoView:didEndPlaybackWithStyle:]
  -[CKFullScreenBalloonViewControllerPhone setVotingViewController:]
  -[CKFullScreenBalloonViewControllerPhone votingViewController]
  -[CKFullScreenBalloonViewControllerPhone traitCollectionDidChange:]
  -[CKFullScreenBalloonViewControllerPhone balloonViewFrameWithoutTransform]
  -[CKFullScreenBalloonViewControllerPhone setLivePhotoBalloonView:]
  -[CKFullScreenBalloonViewControllerPhone livePhotoBalloonView]
  -[CKFullScreenBalloonViewControllerPhone setBalloonYOffsetFromTranscript:]
  -[CKFullScreenBalloonViewControllerPhone highlightButton]
  -[CKFullScreenBalloonViewControllerPhone hideBalloonView]
  -[CKFullScreenBalloonViewControllerPhone loadLivePhotoBalloonViewIfNeeded]
  -[CKFullScreenBalloonViewControllerPhone _shouldShowVotingView]
  -[CKFullScreenBalloonViewControllerPhone addHighlightButtonIfNeeded]
  -[CKFullScreenBalloonViewControllerPhone replyButtonHeightFromBalloon]
  -[CKFullScreenBalloonViewControllerPhone balloonYOffsetFromTranscript]
  -[CKFullScreenBalloonViewControllerPhone updateReplyButtonSizeAndLocation:layoutRelativeToHighlightButton:]
  -[CKFullScreenBalloonViewControllerPhone animationsDisabledForTesting]
  -[CKFullScreenBalloonViewControllerPhone updateReplyButtonColor]
  -[CKFullScreenBalloonViewControllerPhone setAnimationsDisabledForTesting:]
  -[CKFullScreenBalloonViewControllerPhone setReplyButtonBorderLayer:]
  -[CKFullScreenBalloonViewControllerPhone setReplyButtonMaskLayer:]
  -[CKFullScreenBalloonViewControllerPhone setReplyButtonEffectView:]
  -[CKFullScreenBalloonViewControllerPhone setReplyButtonView:]
  -[CKFullScreenBalloonViewControllerPhone setTintViewMaskLayer:]
  -[CKFullScreenBalloonViewControllerPhone replyButtonVerticalOffset]
  -[CKFullScreenBalloonViewControllerPhone replyButtonEffectView]
  -[CKFullScreenBalloonViewControllerPhone replyButtonBorderLayer]
  -[CKFullScreenBalloonViewControllerPhone replyButtonMaskLayer]
  -[CKFullScreenBalloonViewControllerPhone tintViewMaskLayer]
  -[CKFullScreenBalloonViewControllerPhone setHighlightButton:]
  -[CKFullScreenBalloonViewControllerPhone _stickerDetailViewControllerCloseButtonPressed:]
  -[CKFullScreenBalloonViewControllerPhone balloonViewSelected:keyModifierFlags:selectedText:]
  -[CKFullScreenBalloonViewControllerPhone disableAnimationsForTesting]
  -[CKFullScreenBalloonViewControllerPhone replyButtonView]
  -[CKFullScreenBalloonViewControllerPhone setHideBalloonView:]
  -[CKFullScreenBalloonViewControllerPhone .cxx_destruct]
  -[CKFullScreenBalloonViewControllerPhone initWithChatItem:title:interfaceActions:gradientReferenceView:isGroupConversation:pluginBalloonSnapshot:delegate:]
  -[CKFullScreenBalloonViewControllerPhone viewDidLoad]
  -[CKFullScreenBalloonViewControllerPhone setupReplyButton]
  -[CKFullScreenBalloonViewControllerPhone dismissTapGestureRecognized:]
  -[CKFullScreenBalloonViewControllerPhone performInitialAnimations]
  -[CKFullScreenBalloonViewControllerPhone performClosingAnimationsAnimated:withSendAnimation:withCompletion:]
  -[CKFullScreenBalloonViewControllerPhone balloonView]
  -[CKFullScreenBalloonViewControllerPhone __im_ff_isInterstellarEnabled]
  -[CKFullScreenBalloonViewControllerPhone messageHightlightButtonDidFinishAnimating:]
  -[CKFullScreenBalloonViewControllerPhone messageHightlightButtonWasClicked:]
  -[CKFullScreenBalloonViewControllerPhone messageHightlightButtonTranscriptOrientation:]
  -[CKFullScreenBalloonViewControllerPhone viewDidLayoutSubviews]
  -[CKFullScreenBalloonViewControllerPhone messageHightlightButtonBalloonViewFrame:]
  -[CKFullScreenBalloonViewControllerPhone messageHightlightButtonReplyButtonFrame:]
  -[CKFullScreenBalloonViewControllerPhone setBalloonView:]
  -[CKFullScreenBalloonViewControllerPhone dealloc]
  -[CKFullScreenBalloonViewControllerPhone balloonViewSelected:withModifierFlags:selectedText:]
  -[CKFullScreenBalloonViewControllerPhone balloonViewTextViewDidChangeSelection:selectedText:textView:]
  -[CKFullScreenBalloonViewControllerPhone liveBalloonTouched:]
  -[CKFullScreenBalloonViewControllerPhone interactionStartedFromPreviewItemControllerInBalloonView:]
  -[CKFullScreenBalloonViewControllerPhone interactionStoppedFromPreviewItemControllerInBalloonView:]
  -[CKFullScreenBalloonViewControllerPhone audioBalloonScrubberDidChangeValue:]
  -[CKFullScreenBalloonViewControllerPhone balloonView:userDidDragOutsideBalloonWithPoint:]
  -[CKFullScreenBalloonViewControllerPhone balloonViewShouldCopyToPasteboard:]
  -[CKFullScreenBalloonViewControllerPhone presentStickerDetailControllerWithStickers:]
  -[CKFullScreenBalloonViewControllerPhone balloonViewLongTouched:]
  -[CKFullScreenBalloonViewControllerPhone balloonViewShowInlineReply:]
  -[CKFullScreenBalloonViewControllerPhone balloonViewTapped:withModifierFlags:selectedText:]
  -[CKFullScreenBalloonViewControllerPhone balloonViewDoubleTapped:]
  -[CKFullScreenBalloonViewControllerPhone stickerDetailViewController:deletedStickerWithTransferGUID:]
  -[CKFullScreenBalloonViewControllerPhone stickerDetailViewController:selectedStickerPackWithAdamID:]
  -[CKFullScreenBalloonViewControllerPhone setInterfaceActions:]


CKFullScreenBalloonViewControllerNotification : CKFullScreenBalloonViewControllerPhone

CKFullScreenBalloonViewControllerQuicklook : CKFullScreenBalloonViewControllerPhone
  // instance methods
  -[CKFullScreenBalloonViewControllerQuicklook hideBalloonView]
  -[CKFullScreenBalloonViewControllerQuicklook wantsWindowedPresentation]
  -[CKFullScreenBalloonViewControllerQuicklook preserveModalPresentationStyle]
  -[CKFullScreenBalloonViewControllerQuicklook constrainToPresentingVCBounds]
  -[CKFullScreenBalloonViewControllerQuicklook forceWindowedPresentation]


CKFullScreenBalloonViewControllerSocialLayer : CKFullScreenBalloonViewControllerPhone
  // instance methods
  -[CKFullScreenBalloonViewControllerSocialLayer wantsWindowedPresentation]
  -[CKFullScreenBalloonViewControllerSocialLayer preserveModalPresentationStyle]
  -[CKFullScreenBalloonViewControllerSocialLayer constrainToPresentingVCBounds]
  -[CKFullScreenBalloonViewControllerSocialLayer forceWindowedPresentation]
  -[CKFullScreenBalloonViewControllerSocialLayer shouldShowVotingView]


CKStaticDisplayAssetFetchResult : NSObject <PXDisplayAssetFetchResult>
 @property  NSArray *assets
 @property  <PXDisplayAsset> *firstObject
 @property  <PXDisplayAsset> *lastObject
 @property  long long count
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKStaticDisplayAssetFetchResult containsObject:]
  -[CKStaticDisplayAssetFetchResult firstObject]
  -[CKStaticDisplayAssetFetchResult lastObject]
  -[CKStaticDisplayAssetFetchResult objectsAtIndexes:]
  -[CKStaticDisplayAssetFetchResult initWithAssets:]
  -[CKStaticDisplayAssetFetchResult .cxx_destruct]
  -[CKStaticDisplayAssetFetchResult assets]
  -[CKStaticDisplayAssetFetchResult count]
  -[CKStaticDisplayAssetFetchResult objectAtIndexedSubscript:]
  -[CKStaticDisplayAssetFetchResult init]
  -[CKStaticDisplayAssetFetchResult objectAtIndex:]
  -[CKStaticDisplayAssetFetchResult countOfAssetsWithMediaType:]
  -[CKStaticDisplayAssetFetchResult cachedCountOfAssetsWithMediaType:]
  -[CKStaticDisplayAssetFetchResult thumbnailAssetAtIndex:]


CKMomentSharePreviewAssetsDataSourceManager : PXAssetsDataSourceManager
 @property  NSURL *momentShareURL
 @property  PHMomentShare *momentShare

  // instance methods
  -[CKMomentSharePreviewAssetsDataSourceManager initWithMomentShareURL:]
  -[CKMomentSharePreviewAssetsDataSourceManager _fetchMomentShare]
  -[CKMomentSharePreviewAssetsDataSourceManager .cxx_destruct]
  -[CKMomentSharePreviewAssetsDataSourceManager _momentShareCacheDidChange:]
  -[CKMomentSharePreviewAssetsDataSourceManager _handleFetchedMomentShare:error:]
  -[CKMomentSharePreviewAssetsDataSourceManager init]
  -[CKMomentSharePreviewAssetsDataSourceManager createInitialDataSource]
  -[CKMomentSharePreviewAssetsDataSourceManager momentShare]
  -[CKMomentSharePreviewAssetsDataSourceManager momentShareURL]


CKMultiDict : NSObject
 @property  NSObject<OS_dispatch_queue> *lockQueue
 @property  NSMutableDictionary *dictionary

  // instance methods
  -[CKMultiDict removeAllObjects]
  -[CKMultiDict objectsForKey:]
  -[CKMultiDict .cxx_destruct]
  -[CKMultiDict count]
  -[CKMultiDict peekObjectForKey:]
  -[CKMultiDict dictionary]
  -[CKMultiDict allKeys]
  -[CKMultiDict init]
  -[CKMultiDict lockQueue]
  -[CKMultiDict setDictionary:]
  -[CKMultiDict removeObjectsForKey:]
  -[CKMultiDict pushObject:forKey:]
  -[CKMultiDict popObjectForKey:]
  -[CKMultiDict enqueueObject:forKey:]
  -[CKMultiDict headObjectForKey:]
  -[CKMultiDict dequeueObjectForKey:]
  -[CKMultiDict setLockQueue:]


CKMessagesSearchController : CKMessageTypeSearchController <CKMessageSearchResultCellDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKMessagesSearchController sectionIdentifier]
  +[CKMessagesSearchController supportsQuicklookForResult:]
  +[CKMessagesSearchController sectionTitle]
  +[CKMessagesSearchController supportsMenuInteraction]
  +[CKMessagesSearchController reuseIdentifier]
  +[CKMessagesSearchController cellClass]

  // instance methods
  -[CKMessagesSearchController fetchAttributes]
  -[CKMessagesSearchController searchWithText:mode:]
  -[CKMessagesSearchController additionalGroupInsets]
  -[CKMessagesSearchController customLayoutSectionForEnvironment:]
  -[CKMessagesSearchController cellForItemInCollectionView:atIndex:withIdentifier:]
  -[CKMessagesSearchController maxResultsForMode:]
  -[CKMessagesSearchController queryAttributesForText:]
  -[CKMessagesSearchController applyLayoutMarginsToLayoutGroup]
  -[CKMessagesSearchController widthForDeterminingAvatarVisibility]


CKPinnedConversationView : UIView <CNAvatarViewDelegate>
 @property  CAFilter *dimmingFilter
 @property  CKAvatarView *avatarView
 @property  CKLabel *titleLabel
 @property  UIImageView *unreadIndicator
 @property  CKPinnedConversationActivityView *activityView
 @property  UIImageView *radiantShadowImageView
 @property  UIImageView *avatarSnapshotImageView
 @property  VNFaceLandmarkRegion2D *avatarMouthRegion
 @property  NSMutableArray *activeActivitySuppressionReasons
 @property  BOOL dimmed
 @property  CKConversation *conversation
 @property  NSArray *recentMessagesInPinnedConversations
 @property  BOOL unreadIndicatorHidden
 @property  BOOL showsLiveActivity
 @property  BOOL suppressingActivity
 @property  BOOL preferShortConversationName
 @property  long long activityItemOriginationDirection
 @property  UIImage *avatarSnapshot
 @property  long long layoutStyle
 @property  BOOL needsUnreadIndicatorLeadingEdgePadding
 @property  BOOL isSelectedWithDarkAppearance
 @property  UIView *activityBoundingParentView
 @property  double activityItemTopInset
 @property  <CKPinnedConversationViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKPinnedConversationView avatarViewPadding]
  +[CKPinnedConversationView _maximumAvatarViewWidthFittingSize:]
  +[CKPinnedConversationView _preferredAvatarViewDiameterForLayoutStyle:]
  +[CKPinnedConversationView _requiredContactKeys]
  +[CKPinnedConversationView _mouthRegionDetectionEnabled]
  +[CKPinnedConversationView _cachedMouthRegionForContact:]
  +[CKPinnedConversationView _mouthRegionForContactImageCacheKeyForContact:]
  +[CKPinnedConversationView _updateCachedMouthRegionIfNecessaryForContact:completion:]
  +[CKPinnedConversationView _mouthRegionForContactImageCache]
  +[CKPinnedConversationView _mouthRegionDetectionDispatchQueue]
  +[CKPinnedConversationView _determineMouthRegionForContact:completion:]
  +[CKPinnedConversationView avatarViewSizeFittingSize:layoutStyle:]
  +[CKPinnedConversationView titleLabelVerticalPadding]

  // instance methods
  -[CKPinnedConversationView titleLabel]
  -[CKPinnedConversationView didUpdateContentForAvatarView:]
  -[CKPinnedConversationView isDimmed]
  -[CKPinnedConversationView setAvatarView:]
  -[CKPinnedConversationView layoutStyle]
  -[CKPinnedConversationView .cxx_destruct]
  -[CKPinnedConversationView _updateTitleLabelColor]
  -[CKPinnedConversationView _updateRadiantShadowAffineTranform]
  -[CKPinnedConversationView _updateRadiantShadowImageView]
  -[CKPinnedConversationView dimAvatarView]
  -[CKPinnedConversationView _activityIsSuppressedForLayoutStyle:]
  -[CKPinnedConversationView _updateAvatarMouthRegion]
  -[CKPinnedConversationView _updateUnreadIndicator]
  -[CKPinnedConversationView avatarSnapshotImageView]
  -[CKPinnedConversationView removeDimmingFilter]
  -[CKPinnedConversationView dimmingFilter]
  -[CKPinnedConversationView setDimmingFilter:]
  -[CKPinnedConversationView titleLabelSizeFittingSize:]
  -[CKPinnedConversationView unreadIndicatorSize]
  -[CKPinnedConversationView unreadIndicatorPreferredPadding]
  -[CKPinnedConversationView unreadIndicatorMinimumPadding]
  -[CKPinnedConversationView showsLiveActivity]
  -[CKPinnedConversationView _updateAvatarView]
  -[CKPinnedConversationView avatarView]
  -[CKPinnedConversationView _centerPointOfFaceLandmarkRegion:inImageOfSize:]
  -[CKPinnedConversationView _unreadIndicatorImage]
  -[CKPinnedConversationView setNeedsUnreadIndicatorLeadingEdgePadding:]
  -[CKPinnedConversationView setIsSelectedWithDarkAppearance:]
  -[CKPinnedConversationView _updateTitleLabelFont]
  -[CKPinnedConversationView setTitleLabel:]
  -[CKPinnedConversationView layoutSubviews]
  -[CKPinnedConversationView _unreadIndicatorLeadingEdgePadding]
  -[CKPinnedConversationView recentMessagesInPinnedConversations]
  -[CKPinnedConversationView preferShortConversationName]
  -[CKPinnedConversationView _updateTitleLabelWithText:]
  -[CKPinnedConversationView isSelectedWithDarkAppearance]
  -[CKPinnedConversationView avatarSnapshot]
  -[CKPinnedConversationView setAvatarMouthRegion:]
  -[CKPinnedConversationView setUnreadIndicatorHidden:]
  -[CKPinnedConversationView isUnreadIndicatorHidden]
  -[CKPinnedConversationView setUnreadIndicator:]
  -[CKPinnedConversationView setRadiantShadowImageView:]
  -[CKPinnedConversationView needsUnreadIndicatorLeadingEdgePadding]
  -[CKPinnedConversationView activityBoundingParentView]
  -[CKPinnedConversationView activityItemTopInset]
  -[CKPinnedConversationView avatarMouthRegion]
  -[CKPinnedConversationView setAvatarSnapshotImageView:]
  -[CKPinnedConversationView activeActivitySuppressionReasons]
  -[CKPinnedConversationView setActiveActivitySuppressionReasons:]
  -[CKPinnedConversationView setUnreadIndicatorHidden:animated:]
  -[CKPinnedConversationView configureAsPrototypeCell]
  -[CKPinnedConversationView avatarViewFrameForSize:layoutStyle:]
  -[CKPinnedConversationView setDelegate:]
  -[CKPinnedConversationView unreadIndicator]
  -[CKPinnedConversationView radiantShadowImageView]
  -[CKPinnedConversationView init]
  -[CKPinnedConversationView presentingViewControllerForAvatarView:]
  -[CKPinnedConversationView sizeThatFits:]
  -[CKPinnedConversationView setAvatarSnapshot:]
  -[CKPinnedConversationView prepareForReuse]
  -[CKPinnedConversationView isSuppressingActivity]
  -[CKPinnedConversationView activityItemOriginationDirection]
  -[CKPinnedConversationView setActivityItemOriginationDirection:]
  -[CKPinnedConversationView initWithFrame:]
  -[CKPinnedConversationView contentSizeCategoryChanged:]
  -[CKPinnedConversationView delegate]
  -[CKPinnedConversationView setConversation:]
  -[CKPinnedConversationView setShowsLiveActivity:]
  -[CKPinnedConversationView _unreadIndicatorColor]
  -[CKPinnedConversationView setActivityView:]
  -[CKPinnedConversationView didEndDisplaying]
  -[CKPinnedConversationView activityView]
  -[CKPinnedConversationView conversation]
  -[CKPinnedConversationView reapplyPreviouslyDisplayedActivitySnapshot:]
  -[CKPinnedConversationView setActivityBoundingParentView:]
  -[CKPinnedConversationView setActivityItemTopInset:]
  -[CKPinnedConversationView setLayoutStyle:]
  -[CKPinnedConversationView setPreferShortConversationName:]
  -[CKPinnedConversationView setDimmed:]
  -[CKPinnedConversationView setRecentMessagesInPinnedConversations:]
  -[CKPinnedConversationView beginSuppressingActivityWithReason:animated:completion:]
  -[CKPinnedConversationView updateActivityViewAnimated:completion:]
  -[CKPinnedConversationView endSuppressingActivityWithReason:animated:completion:]
  -[CKPinnedConversationView _updateTitleLabel]


CKSenderChatItem : CKChatItem
  // instance methods
  -[CKSenderChatItem layoutType]
  -[CKSenderChatItem isEditable]
  -[CKSenderChatItem transcriptOrientation]
  -[CKSenderChatItem contentInsets]
  -[CKSenderChatItem wantsDrawerLayout]
  -[CKSenderChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKSenderChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKSenderChatItem loadTranscriptText]
  -[CKSenderChatItem cellIdentifier]
  -[CKSenderChatItem cellClass]


_CKPhotosSupportWeakBox : NSObject
 @property  id object

  // instance methods
  -[_CKPhotosSupportWeakBox initWithObject:]
  -[_CKPhotosSupportWeakBox .cxx_destruct]
  -[_CKPhotosSupportWeakBox object]
  -[_CKPhotosSupportWeakBox setObject:]


CKGroupActionChatItem : CKMultilineStampChatItem
  // instance methods
  -[CKGroupActionChatItem sender]
  -[CKGroupActionChatItem actionType]
  -[CKGroupActionChatItem loadTranscriptText]


CKTiledLayoutGenerator : NSObject
 @property  @? parsedFrameBlock
 @property  CKTiledLayoutGeneratorScanState *scanState
 @property  long long scanLocation
 @property  id scannedBatchID
 @property  BOOL scannedBatchHasCaption
 @property  long long scanSpecialSequenceCount
 @property  BOOL isAtEnd
 @property  BOOL shouldStop
 @property  long long tileCount
 @property  {CGSize=dd} interTileSpacing
 @property  @? tileImageSizeBlock
 @property  @? tileMinimumSizeBlock
 @property  {UIEdgeInsets=dddd} captionPadding
 @property  {CGSize=dd} noCaptionSpacing
 @property  @? tileHasCaptionBlock
 @property  @? tileCaptionSizeBlock
 @property  @? tileBatchIDBlock
 @property  long long numberOfMagneticGuidelines
 @property  double roundingScale

  // instance methods
  -[CKTiledLayoutGenerator scanState]
  -[CKTiledLayoutGenerator .cxx_destruct]
  -[CKTiledLayoutGenerator parseTiles]
  -[CKTiledLayoutGenerator tileCount]
  -[CKTiledLayoutGenerator scannedBatchID]
  -[CKTiledLayoutGenerator init]
  -[CKTiledLayoutGenerator shouldStop]
  -[CKTiledLayoutGenerator roundingScale]
  -[CKTiledLayoutGenerator setParsedFrameBlock:]
  -[CKTiledLayoutGenerator setScannedBatchID:]
  -[CKTiledLayoutGenerator setScannedBatchHasCaption:]
  -[CKTiledLayoutGenerator tileImageSizeBlock]
  -[CKTiledLayoutGenerator tileMinimumSizeBlock]
  -[CKTiledLayoutGenerator tileHasCaptionBlock]
  -[CKTiledLayoutGenerator tileBatchIDBlock]
  -[CKTiledLayoutGenerator scanTile:passingTest:]
  -[CKTiledLayoutGenerator tileCaptionSizeBlock]
  -[CKTiledLayoutGenerator parsedFrameBlock]
  -[CKTiledLayoutGenerator setShouldStop:]
  -[CKTiledLayoutGenerator isAtEnd]
  -[CKTiledLayoutGenerator setTileCount:]
  -[CKTiledLayoutGenerator setTileImageSizeBlock:]
  -[CKTiledLayoutGenerator setTileMinimumSizeBlock:]
  -[CKTiledLayoutGenerator setTileHasCaptionBlock:]
  -[CKTiledLayoutGenerator setTileCaptionSizeBlock:]
  -[CKTiledLayoutGenerator setTileBatchIDBlock:]
  -[CKTiledLayoutGenerator interTileSpacing]
  -[CKTiledLayoutGenerator captionPadding]
  -[CKTiledLayoutGenerator noCaptionSpacing]
  -[CKTiledLayoutGenerator setNumberOfMagneticGuidelines:]
  -[CKTiledLayoutGenerator setRoundingScale:]
  -[CKTiledLayoutGenerator enumerateFramesWithBlock:]
  -[CKTiledLayoutGenerator setInterTileSpacing:]
  -[CKTiledLayoutGenerator setCaptionPadding:]
  -[CKTiledLayoutGenerator setNoCaptionSpacing:]
  -[CKTiledLayoutGenerator setScanLocation:]
  -[CKTiledLayoutGenerator scanLocation]
  -[CKTiledLayoutGenerator willParseTiles]
  -[CKTiledLayoutGenerator didParseTiles]
  -[CKTiledLayoutGenerator scanAnyTile:]
  -[CKTiledLayoutGenerator setScanState:]
  -[CKTiledLayoutGenerator scanTileWithPortraitImage:]
  -[CKTiledLayoutGenerator scanTileWithLandscapeImage:]
  -[CKTiledLayoutGenerator valueByRounding:usingMagneticGuidelines:]
  -[CKTiledLayoutGenerator scannedBatchHasCaption]
  -[CKTiledLayoutGenerator scanTileWithHorizontalPanorama:]
  -[CKTiledLayoutGenerator scanTile:type:]
  -[CKTiledLayoutGenerator scanTile:ofType:]
  -[CKTiledLayoutGenerator scanTileWithSquareImage:]
  -[CKTiledLayoutGenerator captionSizeForTileAtIndex:proposedSize:]
  -[CKTiledLayoutGenerator parsedFrame:type:forTileAtIndex:]
  -[CKTiledLayoutGenerator numberOfMagneticGuidelines]
  -[CKTiledLayoutGenerator scanSpecialSequenceCount]
  -[CKTiledLayoutGenerator setScanSpecialSequenceCount:]
  -[CKTiledLayoutGenerator parseNextTiles]


CKTiledLayoutGeneratorScanState : NSObject
 @property  long long scanLocation
 @property  id scannedBatchID
 @property  BOOL scannedBatchHasCaption
 @property  long long scanSpecialSequenceCount

  // instance methods
  -[CKTiledLayoutGeneratorScanState .cxx_destruct]
  -[CKTiledLayoutGeneratorScanState scannedBatchID]
  -[CKTiledLayoutGeneratorScanState setScannedBatchID:]
  -[CKTiledLayoutGeneratorScanState setScannedBatchHasCaption:]
  -[CKTiledLayoutGeneratorScanState setScanLocation:]
  -[CKTiledLayoutGeneratorScanState scanLocation]
  -[CKTiledLayoutGeneratorScanState scannedBatchHasCaption]
  -[CKTiledLayoutGeneratorScanState scanSpecialSequenceCount]
  -[CKTiledLayoutGeneratorScanState setScanSpecialSequenceCount:]


CKChatControllerDummyAnimator : NSObject <CAAnimationDelegate, CKImpactEffectAnimationProvider>
 @property  CAEmitterLayer *dustEmitter
 @property  NSObject<OS_dispatch_group> *throwAnimationGroup
 @property  <CKSendAnimationManager> *animationDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKChatControllerDummyAnimator .cxx_destruct]
  -[CKChatControllerDummyAnimator animationDidStop:finished:]
  -[CKChatControllerDummyAnimator dustEmitter]
  -[CKChatControllerDummyAnimator setAnimationDelegate:]
  -[CKChatControllerDummyAnimator throwAnimationGroup]
  -[CKChatControllerDummyAnimator setDustEmitter:]
  -[CKChatControllerDummyAnimator _beginImpactAnimationWithContext:]
  -[CKChatControllerDummyAnimator _beginGentleAnimationWithContext:]
  -[CKChatControllerDummyAnimator _beginLoudAnimationsWithContext:]
  -[CKChatControllerDummyAnimator _beginFocusAnimationWithContext:]
  -[CKChatControllerDummyAnimator setThrowAnimationGroup:]
  -[CKChatControllerDummyAnimator _beginThrowAnimationWithContext:]
  -[CKChatControllerDummyAnimator _configureForVFD:]
  -[CKChatControllerDummyAnimator animationDelegate]
  -[CKChatControllerDummyAnimator beginAnimationWithSendAnimationContext:]
  -[CKChatControllerDummyAnimator stopAnimationWithSendAnimationContext:]


CKScrollViewController : CKViewController
 @property  BOOL keyboardVisible
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} keyboardScreenFrame
 @property  BOOL keyboardInteractionCancelled
 @property  IMScheduledUpdater *updater
 @property  @? overrideScrollBlock
 @property  UIScrollView *scrollView
 @property  BOOL topInsetIncludesPalette
 @property  double topInsetPadding
 @property  double bottomInsetPadding
 @property  double minimumBottomInset
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} keyboardFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} keyboardFrameInViewCoordinates
 @property  BOOL keyboardUndocked
 @property  BOOL keyboardOnscreenWithoutAccessoryView
 @property  BOOL enableContentPinning
 @property  double contentPinningThreshold
 @property  {CGSize=dd} contentSizeForPinning

  // instance methods
  -[CKScrollViewController updater]
  -[CKScrollViewController scrollView]
  -[CKScrollViewController .cxx_destruct]
  -[CKScrollViewController beginHoldingScrollGeometryUpdatesForKey:]
  -[CKScrollViewController setEnableContentPinning:]
  -[CKScrollViewController setContentPinningThreshold:]
  -[CKScrollViewController isKeyboardVisible]
  -[CKScrollViewController init]
  -[CKScrollViewController accessoryViewHeight]
  -[CKScrollViewController contentSizeForPinning]
  -[CKScrollViewController navigationBarInsetsWithoutPalette]
  -[CKScrollViewController setKeyboardVisible:]
  -[CKScrollViewController keyboardFrame]
  -[CKScrollViewController keyboardWillShowOrHide:]
  -[CKScrollViewController topInsetPadding]
  -[CKScrollViewController keyboardDidShowOrHide:]
  -[CKScrollViewController _entryViewWillRotate:]
  -[CKScrollViewController _changedStatusBarFrame:]
  -[CKScrollViewController setKeyboardScreenFrame:]
  -[CKScrollViewController _updateKeyboardScreenFrameForShowOrHideWithNewScreenFrame:previousFrame:duration:isShowEvent:]
  -[CKScrollViewController bannerInsets]
  -[CKScrollViewController setKeyboardInteractionCancelled:]
  -[CKScrollViewController keyboardInteractionCancelled]
  -[CKScrollViewController _visibleKeyboardHeight]
  -[CKScrollViewController _updateScrollGeometryWithDuration:]
  -[CKScrollViewController keyboardScreenFrame]
  -[CKScrollViewController inputAccessoryViewFrameForFloatingKeyboard]
  -[CKScrollViewController keyboardVisibilityWillChange]
  -[CKScrollViewController topInsetIncludesPalette]
  -[CKScrollViewController _bottomRotatingFooterHeight]
  -[CKScrollViewController bottomInsetPadding]
  -[CKScrollViewController visibleHeightAboveKeyboard]
  -[CKScrollViewController isKeyboardUndocked]
  -[CKScrollViewController isKeyboardOnscreenWithoutAccessoryView]
  -[CKScrollViewController endHoldingScrollGeometryUpdatesForAllKeys]
  -[CKScrollViewController enableContentPinning]
  -[CKScrollViewController contentPinningThreshold]
  -[CKScrollViewController keyboardFrameInViewCoordinates]
  -[CKScrollViewController primeWithKeyboardFrame:]
  -[CKScrollViewController isKeyboardFloating]
  -[CKScrollViewController inputAccessoryViewFrameUpdatedForFloatingKeyboard]
  -[CKScrollViewController bottomInsetWithoutAccessoryView]
  -[CKScrollViewController dealloc]
  -[CKScrollViewController updateScrollGeometry]
  -[CKScrollViewController keyboardDidChangeFrame:]
  -[CKScrollViewController endHoldingScrollGeometryUpdatesForKey:]
  -[CKScrollViewController setUpdater:]
  -[CKScrollViewController macToolbarInsets]
  -[CKScrollViewController overrideScrollBlock]
  -[CKScrollViewController navigationBarInsets]
  -[CKScrollViewController contentInsetDidChange]
  -[CKScrollViewController contentInsetWillChange:animated:duration:]
  -[CKScrollViewController keyboardWillHideViaGesture]
  -[CKScrollViewController setOverrideScrollBlock:]
  -[CKScrollViewController manuallyUpdateKeyboardScreenFrameWithFrameIfNeeded:animationDuration:]
  -[CKScrollViewController isHoldingScrollGeometryUpdates]
  -[CKScrollViewController minimumBottomInset]


CKMediaObjectAssetCollection : PXBaseDisplayCollection <PXDisplayAssetCollection>
 @property  BOOL isEnriched
 @property  BOOL isEnrichmentComplete
 @property  double promotionScore
 @property  BOOL isAggregation
 @property  BOOL isRecent
 @property  unsigned short px_highlightEnrichmentState
 @property  long long px_highlightKind
 @property  NSString *uuid
 @property  NSString *localizedSubtitle
 @property  NSString *localizedDebugDescription
 @property  NSArray *localizedLocationNames
 @property  NSString *localizedDateDescription
 @property  NSString *localizedSmartDescription
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  unsigned long estimatedAssetCount
 @property  BOOL canContainAssets
 @property  BOOL canContainCollections
 @property  NSString *localizedTitle
 @property  BOOL px_allowsImplicitSelectionForProjectOrSharingAction
 @property  BOOL px_canDeleteContent
 @property  BOOL px_canRemoveContent
 @property  BOOL px_canAddContent
 @property  BOOL px_canCreateContent
 @property  BOOL px_canRearrangeContent
 @property  BOOL px_isDeletable
 @property  BOOL px_isRenamable
 @property  BOOL px_isUserCreated
 @property  BOOL px_isRegularAlbum
 @property  BOOL px_isStandInAlbum
 @property  BOOL px_isImportedAlbum
 @property  BOOL px_isMyPhotoStreamAlbum
 @property  BOOL px_isUserSmartAlbum
 @property  BOOL px_isSmartAlbum
 @property  BOOL px_isRootSmartAlbum
 @property  BOOL px_isMediaTypeSmartAlbum
 @property  BOOL px_isAllPhotosSmartAlbum
 @property  BOOL px_isFavoritesSmartAlbum
 @property  BOOL px_isPlacesSmartAlbum
 @property  BOOL px_isHiddenSmartAlbum
 @property  BOOL px_isRecentlyAddedSmartAlbum
 @property  BOOL px_isRecentlyDeletedSmartAlbum
 @property  BOOL px_isRecentsSmartAlbum
 @property  BOOL px_isRecentlyEditedSmartAlbum
 @property  BOOL px_isScreenRecordingsSmartAlbum
 @property  BOOL px_isVideosSmartAlbum
 @property  BOOL px_isTimelapsesSmartAlbum
 @property  BOOL px_isBurstsSmartAlbum
 @property  BOOL px_isSlomoVideosSmartAlbum
 @property  BOOL px_isSelfPortraitsSmartAlbum
 @property  BOOL px_isScreenshotsSmartAlbum
 @property  BOOL px_isDepthEffectSmartAlbum
 @property  BOOL px_isLivePhotosSmartAlbum
 @property  BOOL px_isAnimatedSmartAlbum
 @property  BOOL px_isLongExposuresSmartAlbum
 @property  BOOL px_isRAWSmartAlbum
 @property  BOOL px_isCinematicSmartAlbum
 @property  BOOL px_isProResSmartAlbum
 @property  BOOL px_isUnableToUploadSmartAlbum
 @property  BOOL px_isPanoramasSmartAlbum
 @property  BOOL px_isMoment
 @property  BOOL px_isHighlight
 @property  BOOL px_isSuggestion
 @property  BOOL px_isMomentShare
 @property  BOOL px_isContentSyndicationAlbum
 @property  BOOL px_isSharedAlbum
 @property  BOOL px_isOwnedSharedAlbum
 @property  BOOL px_isCloudMultipleContributorsEnabled
 @property  BOOL px_isInReadWriteCloudLibrary
 @property  BOOL px_isFolder
 @property  BOOL px_isRegularFolder
 @property  BOOL px_isSmartFolder
 @property  BOOL px_isFavoriteMemoriesSmartFolder
 @property  BOOL px_isTopLevelFolder
 @property  BOOL px_isSharedAlbumsFolder
 @property  BOOL px_isSharedAlbumsAndActivityFolder
 @property  BOOL px_isMediaTypesFolder
 @property  BOOL px_isProjectsFolder
 @property  BOOL px_isContentSyndicationFolder
 @property  BOOL px_isMacSyncedAlbum
 @property  BOOL px_isMacSyncedRegularAlbum
 @property  BOOL px_isMacSyncedFacesAlbum
 @property  BOOL px_isMacSyncedEventsFolder
 @property  BOOL px_isMacSyncedFacesFolder
 @property  BOOL px_isProject
 @property  BOOL px_isPhotosVirtualCollection
 @property  BOOL px_isMomentsVirtualCollection
 @property  BOOL px_isMemoriesVirtualCollection
 @property  BOOL px_isForYouVirtualCollection
 @property  BOOL px_isPeopleVirtualCollection
 @property  BOOL px_isSharedActivityVirtualCollection
 @property  BOOL px_isTransientPlacesCollection
 @property  BOOL px_isImportHistoryCollection
 @property  BOOL px_isMyAlbumsVirtualCollection
 @property  BOOL px_isSharedAlbumsVirtualCollection
 @property  BOOL px_isContentSyndicationVirtualCollection
 @property  BOOL px_isContentSyndicationAllPhotosAlbum
 @property  BOOL px_isImportSessionCollection
 @property  id px_cheapLogIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMediaObjectAssetCollection localizedTitle]
  -[CKMediaObjectAssetCollection localizedLocationNames]
  -[CKMediaObjectAssetCollection isEnriched]
  -[CKMediaObjectAssetCollection isRecent]
  -[CKMediaObjectAssetCollection localizedSubtitle]
  -[CKMediaObjectAssetCollection promotionScore]
  -[CKMediaObjectAssetCollection isAggregation]
  -[CKMediaObjectAssetCollection estimatedAssetCount]
  -[CKMediaObjectAssetCollection localizedDateDescriptionWithOptions:]
  -[CKMediaObjectAssetCollection isEnrichmentComplete]
  -[CKMediaObjectAssetCollection px_highlightEnrichmentState]
  -[CKMediaObjectAssetCollection px_highlightKind]
  -[CKMediaObjectAssetCollection uuid]
  -[CKMediaObjectAssetCollection localizedDebugDescription]
  -[CKMediaObjectAssetCollection localizedDateDescription]
  -[CKMediaObjectAssetCollection localizedSmartDescription]
  -[CKMediaObjectAssetCollection startDate]
  -[CKMediaObjectAssetCollection copyWithZone:]
  -[CKMediaObjectAssetCollection endDate]


CKMediaObjectAssetDataSource : PXAssetsDataSource
 @property  NSString *parentChatItemGUID
 @property  NSArray *chatItems
 @property  NSDictionary *chatItemGUIDMap
 @property  NSArray *displayAssets
 @property  <PXDisplayAssetCollection> *assetCollection
 @property  NSArray *mediaObjects
 @property  {?=QQQ} assetTypeCounts
 @property  NSURL *momentShareURL

  // instance methods
  -[CKMediaObjectAssetDataSource chatItems]
  -[CKMediaObjectAssetDataSource numberOfItemsInSection:]
  -[CKMediaObjectAssetDataSource numberOfSections]
  -[CKMediaObjectAssetDataSource .cxx_destruct]
  -[CKMediaObjectAssetDataSource chatItemGUIDMap]
  -[CKMediaObjectAssetDataSource chatItemForAssetReference:]
  -[CKMediaObjectAssetDataSource assetTypeCounts]
  -[CKMediaObjectAssetDataSource copyRefreshingAssetsAtIndexes:]
  -[CKMediaObjectAssetDataSource temporaryChatItemForAssetReference:]
  -[CKMediaObjectAssetDataSource assetReferenceForMediaObject:]
  -[CKMediaObjectAssetDataSource displayAssets]
  -[CKMediaObjectAssetDataSource indexPathForObjectReference:]
  -[CKMediaObjectAssetDataSource setChatItemGUIDMap:]
  -[CKMediaObjectAssetDataSource initWithChatItems:parentChatItemGUID:displayAssets:chatItemGUIDMap:]
  -[CKMediaObjectAssetDataSource objectAtIndexPath:]
  -[CKMediaObjectAssetDataSource setParentChatItemGUID:]
  -[CKMediaObjectAssetDataSource setDisplayAssets:]
  -[CKMediaObjectAssetDataSource setAssetCollection:]
  -[CKMediaObjectAssetDataSource parentChatItemGUID]
  -[CKMediaObjectAssetDataSource _indexPathForMediaObject:]
  -[CKMediaObjectAssetDataSource chatItemForAsset:]
  -[CKMediaObjectAssetDataSource initWithChatItems:parentChatItemGUID:]
  -[CKMediaObjectAssetDataSource setChatItems:]
  -[CKMediaObjectAssetDataSource mediaObjects]
  -[CKMediaObjectAssetDataSource momentShareURL]
  -[CKMediaObjectAssetDataSource assetCollection]
  -[CKMediaObjectAssetDataSource objectsInIndexPath:]
  -[CKMediaObjectAssetDataSource numberOfSubitemsInItem:section:]


CKMediaObjectManager : NSObject
 @property  NSArray *classes
 @property  NSDictionary *UTITypes
 @property  NSDictionary *dynTypes
 @property  NSMutableDictionary *transfers

  // class methods
  +[CKMediaObjectManager sharedInstance]

  // instance methods
  -[CKMediaObjectManager fileManager]
  -[CKMediaObjectManager .cxx_destruct]
  -[CKMediaObjectManager dynTypes]
  -[CKMediaObjectManager transfers]
  -[CKMediaObjectManager setClasses:]
  -[CKMediaObjectManager classForFilename:]
  -[CKMediaObjectManager init]
  -[CKMediaObjectManager UTITypes]
  -[CKMediaObjectManager setUTITypes:]
  -[CKMediaObjectManager allUTITypes]
  -[CKMediaObjectManager classForUTIType:]
  -[CKMediaObjectManager mediaObjectWithData:UTIType:filename:transcoderUserInfo:]
  -[CKMediaObjectManager mediaObjectWithFileURL:filename:transcoderUserInfo:]
  -[CKMediaObjectManager setDynTypes:]
  -[CKMediaObjectManager setTransfers:]
  -[CKMediaObjectManager mediaObjectWithSticker:stickerUserInfo:]
  -[CKMediaObjectManager transferRemoved:]
  -[CKMediaObjectManager UTITypeForExtension:]
  -[CKMediaObjectManager transferWithTransferGUID:imMessage:]
  -[CKMediaObjectManager transferWithFileURL:transcoderUserInfo:attributionInfo:hideAttachment:]
  -[CKMediaObjectManager transferClass]
  -[CKMediaObjectManager mediaObjectWithFileURL:filename:transcoderUserInfo:attributionInfo:hideAttachment:]
  -[CKMediaObjectManager transferWithStickerFileURL:transferUserInfo:attributionInfo:]
  -[CKMediaObjectManager mediaObjectWithTransferGUID:imMessage:chatContext:]
  -[CKMediaObjectManager dealloc]
  -[CKMediaObjectManager classes]
  -[CKMediaObjectManager mediaObjectWithTransferGUID:imMessage:]
  -[CKMediaObjectManager UTITypeForFilename:]


CKAttachmentItem : NSObject <QLPreviewItem>
 @property  NSURL *fileURL
 @property  NSString *guid
 @property  NSString *transferGUID
 @property  NSDate *createdDate
 @property  NSString *irisVideoPath
 @property  BOOL isIrisAsset
 @property  NSURL *previewURL
 @property  {CGSize=dd} size
 @property  BOOL isSticker
 @property  BOOL showDocumentIcon
 @property  NSURL *previewItemURL
 @property  NSString *previewItemTitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKAttachmentItem pxWidth]
  +[CKAttachmentItem defaultSize]
  +[CKAttachmentItem previewCache]
  +[CKAttachmentItem UTITypes]
  +[CKAttachmentItem previewSizingQueue]

  // instance methods
  -[CKAttachmentItem setFileURL:]
  -[CKAttachmentItem initWithFileURL:size:transferGUID:guid:createdDate:]
  -[CKAttachmentItem dragItem]
  -[CKAttachmentItem getIrisVideoPath]
  -[CKAttachmentItem guid]
  -[CKAttachmentItem fileURL]
  -[CKAttachmentItem .cxx_destruct]
  -[CKAttachmentItem UTIType]
  -[CKAttachmentItem transferGUID]
  -[CKAttachmentItem imageData]
  -[CKAttachmentItem isSticker]
  -[CKAttachmentItem cachedPreview]
  -[CKAttachmentItem setShowDocumentIcon:]
  -[CKAttachmentItem generatePreviewWithCompletion:]
  -[CKAttachmentItem previewURL]
  -[CKAttachmentItem isIrisAsset]
  -[CKAttachmentItem isEqual:]
  -[CKAttachmentItem setIsSticker:]
  -[CKAttachmentItem fileIcon]
  -[CKAttachmentItem createdDate]
  -[CKAttachmentItem canShareItem]
  -[CKAttachmentItem _savePreview:]
  -[CKAttachmentItem previewURL:]
  -[CKAttachmentItem setGuid:]
  -[CKAttachmentItem previewItemURL]
  -[CKAttachmentItem _savedPreviewFromURL:]
  -[CKAttachmentItem calculateIrisVideoPath]
  -[CKAttachmentItem setCreatedDate:]
  -[CKAttachmentItem irisVideoPath]
  -[CKAttachmentItem setTransferGUID:]
  -[CKAttachmentItem showDocumentIcon]
  -[CKAttachmentItem uncachedPreviewURL]
  -[CKAttachmentItem _getIrisBundleLocation]
  -[CKAttachmentItem _getIrisBundleURL]
  -[CKAttachmentItem setIrisVideoPath:]
  -[CKAttachmentItem setPreviewURL:]
  -[CKAttachmentItem setIsIrisAsset:]
  -[CKAttachmentItem startDeferredSetup]
  -[CKAttachmentItem pasteboardItem]
  -[CKAttachmentItem size]


CKDateUtilities : NSObject
  // class methods
  +[CKDateUtilities relativeDateFormatterFromDate:toDate:]
  +[CKDateUtilities relativeDateOnlyFormatterFromDate:toDate:]
  +[CKDateUtilities thePastDateFormatter]
  +[CKDateUtilities thisWeekRelativeDateFormatter]
  +[CKDateUtilities thisYearDateFormatter]
  +[CKDateUtilities thePastDateFormatterNoTime]
  +[CKDateUtilities thisYearDateFormatterNoTime]
  +[CKDateUtilities thisWeekRelativeDateFormatterNoTime]


CKBrowserIconView : UIView
 @property  BOOL animating
 @property  double animationStartTime
 @property  double animationStartPercentComplete
 @property  double animationEndPercentComplete
 @property  CADisplayLink *displayLink
 @property  UIImage *iconImage
 @property  double percentComplete

  // class methods
  +[CKBrowserIconView _pieImageForPercentComplete:size:center:radius:]

  // instance methods
  -[CKBrowserIconView iconImage]
  -[CKBrowserIconView setDisplayLink:]
  -[CKBrowserIconView .cxx_destruct]
  -[CKBrowserIconView percentComplete]
  -[CKBrowserIconView layoutSubviews]
  -[CKBrowserIconView animating]
  -[CKBrowserIconView displayLink]
  -[CKBrowserIconView setAnimating:]
  -[CKBrowserIconView sizeThatFits:]
  -[CKBrowserIconView setIconImage:]
  -[CKBrowserIconView _onDisplayLink:]
  -[CKBrowserIconView setPercentComplete:]
  -[CKBrowserIconView initWithFrame:]
  -[CKBrowserIconView setAnimationStartTime:]
  -[CKBrowserIconView setPercentComplete:animated:]
  -[CKBrowserIconView setAnimationStartPercentComplete:]
  -[CKBrowserIconView setAnimationEndPercentComplete:]
  -[CKBrowserIconView animationStartTime]
  -[CKBrowserIconView animationEndPercentComplete]
  -[CKBrowserIconView animationStartPercentComplete]
  -[CKBrowserIconView dealloc]
  -[CKBrowserIconView drawRect:]
  -[CKBrowserIconView intrinsicContentSize]


CKIMFileTransfer : NSObject <CKFileTransfer>
 @property  NSURL *linkFileURL
 @property  long long transferState
 @property  NSDictionary *attributionInfo
 @property  IMMessage *IMMessage
 @property  NSString *guid
 @property  NSURL *fileURL
 @property  NSString *filename
 @property  NSDictionary *transcoderUserInfo
 @property  NSDictionary *stickerUserInfo
 @property  NSError *error
 @property  unsigned long currentBytes
 @property  unsigned long totalBytes
 @property  BOOL isSticker
 @property  BOOL hideAttachment
 @property  BOOL isDirectory
 @property  long long commSafetySensitive
 @property  BOOL fileURLFinalized
 @property  BOOL fileDataReady
 @property  BOOL downloadable
 @property  BOOL downloading
 @property  BOOL restoring
 @property  BOOL isFromMomentShare
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKIMFileTransfer notificationCenter]
  -[CKIMFileTransfer fileManager]
  -[CKIMFileTransfer isRestoring]
  -[CKIMFileTransfer IMMessage]
  -[CKIMFileTransfer transferUpdated:]
  -[CKIMFileTransfer guid]
  -[CKIMFileTransfer fileURL]
  -[CKIMFileTransfer .cxx_destruct]
  -[CKIMFileTransfer filename]
  -[CKIMFileTransfer isSticker]
  -[CKIMFileTransfer setTransferState:]
  -[CKIMFileTransfer initWithFileURL:transcoderUserInfo:attributionInfo:hideAttachment:]
  -[CKIMFileTransfer isDirectory]
  -[CKIMFileTransfer isFileURLFinalized]
  -[CKIMFileTransfer transferState]
  -[CKIMFileTransfer setIMMessage:]
  -[CKIMFileTransfer isFileDataReady]
  -[CKIMFileTransfer isDownloadable]
  -[CKIMFileTransfer setAttributionInfo:]
  -[CKIMFileTransfer initWithTransferGUID:imMessage:]
  -[CKIMFileTransfer initWithStickerFileURL:transferUserInfo:attributionInfo:]
  -[CKIMFileTransfer stickerUserInfo]
  -[CKIMFileTransfer currentBytes]
  -[CKIMFileTransfer updateTransfer]
  -[CKIMFileTransfer hideAttachment]
  -[CKIMFileTransfer imFileTransferCenter]
  -[CKIMFileTransfer linkFileURLWithFilename:]
  -[CKIMFileTransfer attachmentRestored:]
  -[CKIMFileTransfer isFromMomentShare]
  -[CKIMFileTransfer isDownloading]
  -[CKIMFileTransfer setLinkFileURL:]
  -[CKIMFileTransfer dealloc]
  -[CKIMFileTransfer linkFileURL]
  -[CKIMFileTransfer commSafetySensitive]
  -[CKIMFileTransfer totalBytes]
  -[CKIMFileTransfer attributionInfo]
  -[CKIMFileTransfer syncController]
  -[CKIMFileTransfer error]
  -[CKIMFileTransfer mediaObjectRemoved]
  -[CKIMFileTransfer mediaObjectAdded]
  -[CKIMFileTransfer transcoderUserInfo]
  -[CKIMFileTransfer fetchHighQualityFile:]


CKSharedContactsCollectionViewCell : CKSharedContentsCollectionViewCell
 @property  CNAvatarView *avatarView

  // class methods
  +[CKSharedContactsCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKSharedContactsCollectionViewCell setAvatarView:]
  -[CKSharedContactsCollectionViewCell .cxx_destruct]
  -[CKSharedContactsCollectionViewCell avatarView]
  -[CKSharedContactsCollectionViewCell layoutSubviews]
  -[CKSharedContactsCollectionViewCell configureWithContact:]


CKInvisibleInkImageEffectView : CKInvisibleInkEffectView <CAAnimationDelegate>
 @property  CALayer *blurredImageLayer
 @property  CALayer *blurredImageContainerLayer
 @property  CALayer *drawEmitterContainerLayer
 @property  CAEmitterLayer *drawEmitterLayer
 @property  CALayer *dustEmitterContainerLayer
 @property  CAEmitterLayer *dustEmitterLayer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKInvisibleInkImageEffectView setSuspended:]
  -[CKInvisibleInkImageEffectView .cxx_destruct]
  -[CKInvisibleInkImageEffectView layoutSubviews]
  -[CKInvisibleInkImageEffectView drawEmitterLayer]
  -[CKInvisibleInkImageEffectView dustEmitterLayer]
  -[CKInvisibleInkImageEffectView setDustEmitterLayer:]
  -[CKInvisibleInkImageEffectView setDrawEmitterLayer:]
  -[CKInvisibleInkImageEffectView disableBlending]
  -[CKInvisibleInkImageEffectView endDrawEmitterEffects]
  -[CKInvisibleInkImageEffectView moveEmittersForTouchesBegan:]
  -[CKInvisibleInkImageEffectView enableBlending]
  -[CKInvisibleInkImageEffectView touchesBegan:withEvent:]
  -[CKInvisibleInkImageEffectView moveEmittersWithTouches:]
  -[CKInvisibleInkImageEffectView moveEmittersForTouchesMoved:]
  -[CKInvisibleInkImageEffectView endEmittersForTouchesEnded:]
  -[CKInvisibleInkImageEffectView endEmittersForTouchesCancelled:]
  -[CKInvisibleInkImageEffectView animationDidStop:finished:]
  -[CKInvisibleInkImageEffectView touchesMoved:withEvent:]
  -[CKInvisibleInkImageEffectView reset]
  -[CKInvisibleInkImageEffectView touchesCancelled:withEvent:]
  -[CKInvisibleInkImageEffectView setPaused:]
  -[CKInvisibleInkImageEffectView initWithFrame:]
  -[CKInvisibleInkImageEffectView setImage:]
  -[CKInvisibleInkImageEffectView setDustEmitterContainerLayer:]
  -[CKInvisibleInkImageEffectView dustEmitterContainerLayer]
  -[CKInvisibleInkImageEffectView setBlurredImageContainerLayer:]
  -[CKInvisibleInkImageEffectView setBlurredImageLayer:]
  -[CKInvisibleInkImageEffectView blurredImageLayer]
  -[CKInvisibleInkImageEffectView setupDrawEmitter]
  -[CKInvisibleInkImageEffectView setupDustEmitter]
  -[CKInvisibleInkImageEffectView blurredImageContainerLayer]
  -[CKInvisibleInkImageEffectView drawEmitterContainerLayer]
  -[CKInvisibleInkImageEffectView setDrawEmitterContainerLayer:]
  -[CKInvisibleInkImageEffectView endDustEmitterFingerEffects]
  -[CKInvisibleInkImageEffectView addDustRandomEmitterAnimationsWithSize:]
  -[CKInvisibleInkImageEffectView setRandomAttractorsEnabled:]
  -[CKInvisibleInkImageEffectView touchesEnded:withEvent:]


CKPendingMomentShareImageProvider : PXUIMediaProvider
  // instance methods
  -[CKPendingMomentShareImageProvider cancelImageRequest:]
  -[CKPendingMomentShareImageProvider requestImageForAsset:targetSize:contentMode:options:resultHandler:]


CKDetailsSeparatorCell : CKDetailsCell
 @property  double leadingSpace
 @property  BOOL indentSeparator
 @property  UIView *separatorView

  // class methods
  +[CKDetailsSeparatorCell defaultHeight]
  +[CKDetailsSeparatorCell reuseIdentifier]
  +[CKDetailsSeparatorCell defaultLeadingSpace]

  // instance methods
  -[CKDetailsSeparatorCell .cxx_destruct]
  -[CKDetailsSeparatorCell layoutSubviews]
  -[CKDetailsSeparatorCell prepareForReuse]
  -[CKDetailsSeparatorCell initWithStyle:reuseIdentifier:]
  -[CKDetailsSeparatorCell separatorView]
  -[CKDetailsSeparatorCell indentSeparator]
  -[CKDetailsSeparatorCell leadingSpace]
  -[CKDetailsSeparatorCell setIndentSeparator:]
  -[CKDetailsSeparatorCell setLeadingSpace:]


CKDBFileTransfer : NSObject <CKFileTransfer>
 @property  NSString *filename
 @property  long long transferState
 @property  NSDictionary *attributionInfo
 @property  IMMessage *IMMessage
 @property  NSString *guid
 @property  NSURL *fileURL
 @property  NSDictionary *transcoderUserInfo
 @property  NSDictionary *stickerUserInfo
 @property  NSError *error
 @property  unsigned long currentBytes
 @property  unsigned long totalBytes
 @property  BOOL isSticker
 @property  BOOL hideAttachment
 @property  BOOL isDirectory
 @property  long long commSafetySensitive
 @property  BOOL fileURLFinalized
 @property  BOOL fileDataReady
 @property  BOOL downloadable
 @property  BOOL downloading
 @property  BOOL restoring
 @property  BOOL isFromMomentShare
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDBFileTransfer isRestoring]
  -[CKDBFileTransfer guid]
  -[CKDBFileTransfer fileURL]
  -[CKDBFileTransfer .cxx_destruct]
  -[CKDBFileTransfer filename]
  -[CKDBFileTransfer isSticker]
  -[CKDBFileTransfer setTransferState:]
  -[CKDBFileTransfer initWithFileURL:transcoderUserInfo:attributionInfo:hideAttachment:]
  -[CKDBFileTransfer isDirectory]
  -[CKDBFileTransfer isFileURLFinalized]
  -[CKDBFileTransfer transferState]
  -[CKDBFileTransfer setFilename:]
  -[CKDBFileTransfer isFileDataReady]
  -[CKDBFileTransfer isDownloadable]
  -[CKDBFileTransfer setAttributionInfo:]
  -[CKDBFileTransfer initWithTransferGUID:imMessage:]
  -[CKDBFileTransfer stickerUserInfo]
  -[CKDBFileTransfer currentBytes]
  -[CKDBFileTransfer hideAttachment]
  -[CKDBFileTransfer isFromMomentShare]
  -[CKDBFileTransfer isDownloading]
  -[CKDBFileTransfer commSafetySensitive]
  -[CKDBFileTransfer totalBytes]
  -[CKDBFileTransfer attributionInfo]
  -[CKDBFileTransfer error]
  -[CKDBFileTransfer mediaObjectRemoved]
  -[CKDBFileTransfer mediaObjectAdded]
  -[CKDBFileTransfer transcoderUserInfo]
  -[CKDBFileTransfer fetchHighQualityFile:]


CKTypingView : UIView
 @property  CALayer<IMTypingIndicatorLayerProtocol> *indicatorLayer
 @property  CKBaseLayer *baseLayer

  // instance methods
  -[CKTypingView setIndicatorLayer:]
  -[CKTypingView .cxx_destruct]
  -[CKTypingView baseLayer]
  -[CKTypingView initWithFrame:]
  -[CKTypingView setBaseLayer:]
  -[CKTypingView indicatorLayer]


CKTranscriptTypingIndicatorCell : CKTranscriptMessageCell <CKLayerDelegate>
 @property  CKTypingView *typingView
 @property  CALayer<IMTypingIndicatorLayerProtocol> *indicatorLayer

  // instance methods
  -[CKTranscriptTypingIndicatorCell setTraitCollection:]
  -[CKTranscriptTypingIndicatorCell setOrientation:]
  -[CKTranscriptTypingIndicatorCell performRemoval:]
  -[CKTranscriptTypingIndicatorCell setIndicatorLayer:]
  -[CKTranscriptTypingIndicatorCell .cxx_destruct]
  -[CKTranscriptTypingIndicatorCell prepareForReuse]
  -[CKTranscriptTypingIndicatorCell ckLayerDidBecomeVisible:]
  -[CKTranscriptTypingIndicatorCell initWithFrame:]
  -[CKTranscriptTypingIndicatorCell startPulseAnimation]
  -[CKTranscriptTypingIndicatorCell stopPulseAnimation]
  -[CKTranscriptTypingIndicatorCell startGrowAnimation]
  -[CKTranscriptTypingIndicatorCell indicatorLayer]
  -[CKTranscriptTypingIndicatorCell typingView]
  -[CKTranscriptTypingIndicatorCell startShrinkAnimation]
  -[CKTranscriptTypingIndicatorCell setTypingView:]
  -[CKTranscriptTypingIndicatorCell configureForChatItem:context:]
  -[CKTranscriptTypingIndicatorCell performInsertion:]
  -[CKTranscriptTypingIndicatorCell layoutSubviewsForAlignmentContents]


CKTranscriptDetailsResizableCell : CKDetailsCell
  // class methods
  +[CKTranscriptDetailsResizableCell identifier]

  // instance methods
  -[CKTranscriptDetailsResizableCell initWithStyle:reuseIdentifier:]


CKReplyContextAggregateMessagePartChatItem : CKAggregateMessagePartChatItem <CKReplyContext>
  // instance methods
  -[CKReplyContextAggregateMessagePartChatItem isEditable]
  -[CKReplyContextAggregateMessagePartChatItem color]
  -[CKReplyContextAggregateMessagePartChatItem bodyTextFont]
  -[CKReplyContextAggregateMessagePartChatItem wantsOutline]
  -[CKReplyContextAggregateMessagePartChatItem balloonViewClass]
  -[CKReplyContextAggregateMessagePartChatItem replyIsFromMe]
  -[CKReplyContextAggregateMessagePartChatItem loadTranscriptDrawerText]
  -[CKReplyContextAggregateMessagePartChatItem isReplyContextPreview]
  -[CKReplyContextAggregateMessagePartChatItem balloonDescriptor]
  -[CKReplyContextAggregateMessagePartChatItem balloonStyle]


CKAnimatedEmojiMediaObject : CKAnimatedImageMediaObject
  // class methods
  +[CKAnimatedEmojiMediaObject shouldShadePreview]
  +[CKAnimatedEmojiMediaObject UTITypes]
  +[CKAnimatedEmojiMediaObject shouldScaleUpPreview]

  // instance methods
  -[CKAnimatedEmojiMediaObject backgroundColorOverride]
  -[CKAnimatedEmojiMediaObject icon]
  -[CKAnimatedEmojiMediaObject attachmentSummary:]
  -[CKAnimatedEmojiMediaObject previewForWidth:orientation:]
  -[CKAnimatedEmojiMediaObject previewBalloonViewClass]
  -[CKAnimatedEmojiMediaObject previewItemTitle]


CKMediaObjectBackedAsset : NSObject <PXDisplayAsset, PXMetadataAsset, NSCopying>
 @property  CKAttachmentMessagePartChatItem *chatItem
 @property  CKMediaObject *mediaObject
 @property  NSArray *visibleAssociatedMessageChatItems
 @property  CKAggregateAcknowledgmentChatItem *acknowledgmentChatItem
 @property  NSURL *url
 @property  BOOL favorite
 @property  unsigned long thumbnailIndex
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} preferredCropRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} acceptableCropRect
 @property  long long mediaType
 @property  unsigned long mediaSubtypes
 @property  NSDate *creationDate
 @property  NSDate *localCreationDate
 @property  BOOL representsBurst
 @property  BOOL isInCloud
 @property  BOOL isEligibleForAutoPlayback
 @property  unsigned long pixelWidth
 @property  unsigned long pixelHeight
 @property  Class defaultImageProviderClass
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} faceAreaRect
 @property  double duration
 @property  {?=qiIq} livePhotoVideoDuration
 @property  long long playbackStyle
 @property  long long playbackVariation
 @property  double aspectRatio
 @property  unsigned long thumbnailVersion
 @property  NSString *uuid
 @property  NSNumber *hdrGain
 @property  unsigned long burstSelectionTypes
 @property  NSString *localizedGeoDescription
 @property  NSDate *importDate
 @property  BOOL isAutoPlaybackEligibilityEstimated
 @property  NSData *fetchColorNormalizationData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  CLLocation *location
 @property  BOOL cloudIsDeletable

  // instance methods
  -[CKMediaObjectBackedAsset aspectRatio]
  -[CKMediaObjectBackedAsset acknowledgmentChatItem]
  -[CKMediaObjectBackedAsset url]
  -[CKMediaObjectBackedAsset .cxx_destruct]
  -[CKMediaObjectBackedAsset mediaSubtypes]
  -[CKMediaObjectBackedAsset acceptableCropRect]
  -[CKMediaObjectBackedAsset mediaObject]
  -[CKMediaObjectBackedAsset localCreationDate]
  -[CKMediaObjectBackedAsset isInCloud]
  -[CKMediaObjectBackedAsset preferredCropRect]
  -[CKMediaObjectBackedAsset initWithChatItem:]
  -[CKMediaObjectBackedAsset pixelWidth]
  -[CKMediaObjectBackedAsset thumbnailIndex]
  -[CKMediaObjectBackedAsset isContentEqualTo:]
  -[CKMediaObjectBackedAsset representsBurst]
  -[CKMediaObjectBackedAsset isEligibleForAutoPlayback]
  -[CKMediaObjectBackedAsset defaultImageProviderClass]
  -[CKMediaObjectBackedAsset pixelHeight]
  -[CKMediaObjectBackedAsset isEqual:]
  -[CKMediaObjectBackedAsset chatItem]
  -[CKMediaObjectBackedAsset setChatItem:]
  -[CKMediaObjectBackedAsset location]
  -[CKMediaObjectBackedAsset playbackStyle]
  -[CKMediaObjectBackedAsset creationDate]
  -[CKMediaObjectBackedAsset uuid]
  -[CKMediaObjectBackedAsset mediaType]
  -[CKMediaObjectBackedAsset isFavorite]
  -[CKMediaObjectBackedAsset copyWithZone:]
  -[CKMediaObjectBackedAsset faceAreaRect]
  -[CKMediaObjectBackedAsset visibleAssociatedMessageChatItems]
  -[CKMediaObjectBackedAsset _transcoderGeneratedPxSize:]
  -[CKMediaObjectBackedAsset _previewPxSize:]
  -[CKMediaObjectBackedAsset _clientPreviewConstraints]
  -[CKMediaObjectBackedAsset _mediaObjectPreview]
  -[CKMediaObjectBackedAsset duration]


CKSimSwitchedChatItem : CKStampChatItem
  // instance methods
  -[CKSimSwitchedChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKSimSwitchedChatItem loadTranscriptText]


CKDetailsSearchViewController : CKSearchViewController <CKContainerSearchControllerDelegate, QLPreviewControllerDelegate, CKDetailsSearchResultsFooterCellDelegate, CKDetailsSearchResultsTitleHeaderCellDelegate>
 @property  NSArray *chatGUIDs
 @property  CKQLPreviewControllerDataSource *qlPreviewDataSource
 @property  CKQLPreviewController *previewController
 @property  CKDetailsSearchResultsTitleHeaderCell *titleSizingCell
 @property  CKDetailsSearchResultsFooterCell *footerSizingCell
 @property  CKSearchIndexingFooterCell *sizingIndexingFooterCell
 @property  BOOL searchComplete
 @property  UIBarButtonItem *selectButton
 @property  UIBarButtonItem *cancelButton
 @property  UIBarButtonItem *flexibleItem
 @property  UIBarButtonItem *saveButton
 @property  UIBarButtonItem *deleteButton
 @property  NSDate *lastUserSelectedCellTime
 @property  UICollectionViewCell *lastUserSelectedCell
 @property  <CKDetailsSearchControllerDelegate> *detailsDelegate
 @property  CKConversation *conversation
 @property  CKSearchController *associatedDetailsSubsectionSearchController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDetailsSearchViewController previewControllerDidDismiss:]
  -[CKDetailsSearchViewController setDeleteButton:]
  -[CKDetailsSearchViewController collectionView:didDeselectItemAtIndexPath:]
  -[CKDetailsSearchViewController collectionView:didSelectItemAtIndexPath:]
  -[CKDetailsSearchViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[CKDetailsSearchViewController collectionView:shouldSelectItemAtIndexPath:]
  -[CKDetailsSearchViewController setQlPreviewDataSource:]
  -[CKDetailsSearchViewController searchWithText:]
  -[CKDetailsSearchViewController setPreviewController:]
  -[CKDetailsSearchViewController qlPreviewDataSource]
  -[CKDetailsSearchViewController cancelButton]
  -[CKDetailsSearchViewController .cxx_destruct]
  -[CKDetailsSearchViewController setCancelButton:]
  -[CKDetailsSearchViewController searchEnded]
  -[CKDetailsSearchViewController setDetailsDelegate:]
  -[CKDetailsSearchViewController previewController:transitionViewForPreviewItem:]
  -[CKDetailsSearchViewController rekickZKWSearchForAttachmentBatchUpdate]
  -[CKDetailsSearchViewController sizeThatFits:]
  -[CKDetailsSearchViewController saveButton]
  -[CKDetailsSearchViewController _selectedIndexPaths]
  -[CKDetailsSearchViewController chatGUIDs]
  -[CKDetailsSearchViewController setEditing:]
  -[CKDetailsSearchViewController viewWillDisappear:]
  -[CKDetailsSearchViewController viewDidLayoutSubviews]
  -[CKDetailsSearchViewController viewWillAppear:]
  -[CKDetailsSearchViewController searchControllerChatGUIDsForDetailsSearch:]
  -[CKDetailsSearchViewController setConversation:]
  -[CKDetailsSearchViewController initWithSearchControllerClasses:]
  -[CKDetailsSearchViewController searchController:conversationForChatGUID:]
  -[CKDetailsSearchViewController searchControllerContentsDidChange:]
  -[CKDetailsSearchViewController deleteMessageItem:]
  -[CKDetailsSearchViewController _updateToolbar]
  -[CKDetailsSearchViewController _saveSelectedAttachments:]
  -[CKDetailsSearchViewController _deleteSelectedAttachments:]
  -[CKDetailsSearchViewController setSaveButton:]
  -[CKDetailsSearchViewController reloadData]
  -[CKDetailsSearchViewController conversation]
  -[CKDetailsSearchViewController searchResultsTitleCellShowAllButtonTapped:]
  -[CKDetailsSearchViewController searchController:didSelectItem:inChat:]
  -[CKDetailsSearchViewController searchControllerDidBeginDragging:]
  -[CKDetailsSearchViewController previewController]
  -[CKDetailsSearchViewController searchViewController:requestsPushOfSearchController:]
  -[CKDetailsSearchViewController searchBarForSearchViewController:]
  -[CKDetailsSearchViewController shouldInsetResultsForSearchController:]
  -[CKDetailsSearchViewController loadView]
  -[CKDetailsSearchViewController selectButton]
  -[CKDetailsSearchViewController searchDetailsShowAllButtonTapped:]
  -[CKDetailsSearchViewController wantsSpaceKeyCommandActive]
  -[CKDetailsSearchViewController searchController:requestsItemDeletionAtIndexPath:]
  -[CKDetailsSearchViewController handleSpacePressed]
  -[CKDetailsSearchViewController searchDetailsFooterCellShowAllTapped:]
  -[CKDetailsSearchViewController _selectButtonTapped:]
  -[CKDetailsSearchViewController setSelectButton:]
  -[CKDetailsSearchViewController detailsDelegate]
  -[CKDetailsSearchViewController presentQuickLookView:]
  -[CKDetailsSearchViewController lastUserSelectedCellTime]
  -[CKDetailsSearchViewController lastUserSelectedCell]
  -[CKDetailsSearchViewController setLastUserSelectedCellTime:]
  -[CKDetailsSearchViewController setLastUserSelectedCell:]
  -[CKDetailsSearchViewController setChatGUIDs:]
  -[CKDetailsSearchViewController deleteTransferGUID:]
  -[CKDetailsSearchViewController layoutSectionForController:withEnvironment:]
  -[CKDetailsSearchViewController setSearchComplete:]
  -[CKDetailsSearchViewController globalLayoutConfiguration]
  -[CKDetailsSearchViewController flexibleItem]
  -[CKDetailsSearchViewController deleteButton]
  -[CKDetailsSearchViewController _registerCells]
  -[CKDetailsSearchViewController titleSizingCell]
  -[CKDetailsSearchViewController sizeAttributeForController:sizingAttribute:]
  -[CKDetailsSearchViewController _searchResultsHeaderClass]
  -[CKDetailsSearchViewController searchComplete]
  -[CKDetailsSearchViewController sizingIndexingFooterCell]
  -[CKDetailsSearchViewController _configureIndexingCell:]
  -[CKDetailsSearchViewController _searchResultHeaderButtonTapped:]
  -[CKDetailsSearchViewController setupDetailsSearchController:]
  -[CKDetailsSearchViewController setAssociatedDetailsSubsectionSearchController:]
  -[CKDetailsSearchViewController _deleteAttachmentsAtIndexPaths:]
  -[CKDetailsSearchViewController _cancelEditing:]
  -[CKDetailsSearchViewController setFlexibleItem:]
  -[CKDetailsSearchViewController _searchControllerForIndexPath:]
  -[CKDetailsSearchViewController associatedDetailsSubsectionSearchController]
  -[CKDetailsSearchViewController _newSnapshotForCurrentControllerState]
  -[CKDetailsSearchViewController headerBoundryItemsForController:withEnvironment:]
  -[CKDetailsSearchViewController footerSizingCell]
  -[CKDetailsSearchViewController footerBoundryItemsForController:withEnvironment:]
  -[CKDetailsSearchViewController setTitleSizingCell:]
  -[CKDetailsSearchViewController setFooterSizingCell:]
  -[CKDetailsSearchViewController setSizingIndexingFooterCell:]


CKPhotoStackReplyPreviewBalloonView : CKStaticPhotoStackBalloonView
  // instance methods
  -[CKPhotoStackReplyPreviewBalloonView layoutSubviews]
  -[CKPhotoStackReplyPreviewBalloonView stackCornerRadius]


CKSyndicationSharedWithYouViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
 @property  NSArray *constraints
 @property  NSArray *defaultAppBundleIDs
 @property  {CGSize=dd} maxContentSize
 @property  UICollectionView *collectionView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKSyndicationSharedWithYouViewController updateViewConstraints]
  -[CKSyndicationSharedWithYouViewController collectionView:cellForItemAtIndexPath:]
  -[CKSyndicationSharedWithYouViewController collectionView:numberOfItemsInSection:]
  -[CKSyndicationSharedWithYouViewController collectionView:layout:minimumInteritemSpacingForSectionAtIndex:]
  -[CKSyndicationSharedWithYouViewController collectionView:layout:insetForSectionAtIndex:]
  -[CKSyndicationSharedWithYouViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[CKSyndicationSharedWithYouViewController setDefaultAppBundleIDs:]
  -[CKSyndicationSharedWithYouViewController collectionView:layout:referenceSizeForHeaderInSection:]
  -[CKSyndicationSharedWithYouViewController collectionView:layout:minimumLineSpacingForSectionAtIndex:]
  -[CKSyndicationSharedWithYouViewController _appIconNameForBundleID:]
  -[CKSyndicationSharedWithYouViewController constraints]
  -[CKSyndicationSharedWithYouViewController defaultAppBundleIDs]
  -[CKSyndicationSharedWithYouViewController .cxx_destruct]
  -[CKSyndicationSharedWithYouViewController setConstraints:]
  -[CKSyndicationSharedWithYouViewController collectionView]
  -[CKSyndicationSharedWithYouViewController setCollectionView:]
  -[CKSyndicationSharedWithYouViewController setMaxContentSize:]
  -[CKSyndicationSharedWithYouViewController maxContentSize]
  -[CKSyndicationSharedWithYouViewController loadView]


CKTranscriptCollectionView : CKEditableCollectionView
 @property  BOOL ignoresContentOffsetChanges
 @property  BOOL ignoresReloadDataRequests
 @property  BOOL dynamicsDisabled

  // instance methods
  -[CKTranscriptCollectionView initWithFrame:collectionViewLayout:]
  -[CKTranscriptCollectionView setContentOffset:]
  -[CKTranscriptCollectionView ignoresReloadDataRequests]
  -[CKTranscriptCollectionView setContentOffset:animated:]
  -[CKTranscriptCollectionView layoutSubviews]
  -[CKTranscriptCollectionView setContentInset:]
  -[CKTranscriptCollectionView ignoresContentOffsetChanges]
  -[CKTranscriptCollectionView setIgnoresReloadDataRequests:]
  -[CKTranscriptCollectionView setDynamicsDisabled:]
  -[CKTranscriptCollectionView _edgesPropagatingSafeAreaInsetsToSubviews]
  -[CKTranscriptCollectionView dynamicsDisabled]
  -[CKTranscriptCollectionView reloadData]
  -[CKTranscriptCollectionView setIgnoresContentOffsetChanges:]
  -[CKTranscriptCollectionView setContentSize:]


CKSMSSpamChatItem : CKStampChatItem
  // instance methods
  -[CKSMSSpamChatItem getTranscriptTextForExtensionName:]
  -[CKSMSSpamChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKSMSSpamChatItem loadTranscriptText]
  -[CKSMSSpamChatItem cellClass]


CKUnreadBannerView : UIView <UIGestureRecognizerDelegate>
 @property  _UIBackdropView *backdropView
 @property  UILabel *label
 @property  UIImageView *chevronView
 @property  UIView *overlayView
 @property  <CKUnreadBannerViewDelegate> *delegate
 @property  unsigned long unreadCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKUnreadBannerView backdropView]
  -[CKUnreadBannerView setBackdropView:]
  -[CKUnreadBannerView label]
  -[CKUnreadBannerView overlayView]
  -[CKUnreadBannerView bannerPressed:]
  -[CKUnreadBannerView unreadCount]
  -[CKUnreadBannerView .cxx_destruct]
  -[CKUnreadBannerView setUnreadCount:]
  -[CKUnreadBannerView setOverlayView:]
  -[CKUnreadBannerView layoutSubviews]
  -[CKUnreadBannerView setDelegate:]
  -[CKUnreadBannerView init]
  -[CKUnreadBannerView startAnimation]
  -[CKUnreadBannerView chevronView]
  -[CKUnreadBannerView setChevronView:]
  -[CKUnreadBannerView delegate]
  -[CKUnreadBannerView setLabel:]
  -[CKUnreadBannerView stopAnimation]


CKSyndicationOnboardingTailedBubble : CKPinnedConversationRichLinkBubble
 @property  long long appName
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bubbleFrame
 @property  NSAttributedString *bubbleText

  // instance methods
  -[CKSyndicationOnboardingTailedBubble appName]
  -[CKSyndicationOnboardingTailedBubble bubbleFrame]
  -[CKSyndicationOnboardingTailedBubble setBubbleFrame:]
  -[CKSyndicationOnboardingTailedBubble setBubbleText:]
  -[CKSyndicationOnboardingTailedBubble pillRect]
  -[CKSyndicationOnboardingTailedBubble .cxx_destruct]
  -[CKSyndicationOnboardingTailedBubble layoutSubviews]
  -[CKSyndicationOnboardingTailedBubble initWithFrame:withAppName:withLPLinkView:]
  -[CKSyndicationOnboardingTailedBubble pillCornerRadius]
  -[CKSyndicationOnboardingTailedBubble sizeThatFits:]
  -[CKSyndicationOnboardingTailedBubble balloonTailHeight]
  -[CKSyndicationOnboardingTailedBubble bubbleText]
  -[CKSyndicationOnboardingTailedBubble setAppName:]


CKManualUpdater : NSObject
 @property  BOOL needsUpdate
 @property  id target
 @property  SEL action

  // instance methods
  -[CKManualUpdater updateIfNeeded]
  -[CKManualUpdater initWithTarget:action:]
  -[CKManualUpdater setAction:]
  -[CKManualUpdater action]
  -[CKManualUpdater setNeedsUpdate:]
  -[CKManualUpdater setTarget:]
  -[CKManualUpdater target]
  -[CKManualUpdater needsUpdate]
  -[CKManualUpdater setNeedsUpdate]


CKScheduledUpdater : CKManualUpdater
 @property  NSCountedSet *holdingUpdatesKeys
 @property  BOOL updateSynchronouslyIfPossible

  // instance methods
  -[CKScheduledUpdater updateIfNeeded]
  -[CKScheduledUpdater setUpdateSynchronouslyIfPossible:]
  -[CKScheduledUpdater updateSynchronouslyIfPossible]
  -[CKScheduledUpdater .cxx_destruct]
  -[CKScheduledUpdater initWithTarget:action:]
  -[CKScheduledUpdater endHoldingAllUpdatesForKey:]
  -[CKScheduledUpdater endHoldingAllUpdates]
  -[CKScheduledUpdater holdingUpdatesKeys]
  -[CKScheduledUpdater setHoldingUpdatesKeys:]
  -[CKScheduledUpdater isHoldingUpdates]
  -[CKScheduledUpdater beginHoldingUpdatesForKey:]
  -[CKScheduledUpdater endHoldingUpdatesForKey:]
  -[CKScheduledUpdater isHoldingUpdatesForKey:]
  -[CKScheduledUpdater setNeedsUpdate]
  -[CKScheduledUpdater dealloc]
  -[CKScheduledUpdater invalidate]


CKReasonTrackingUpdater : NSObject
 @property  NSCountedSet *reasonsForNeedsUpdates
 @property  NSCountedSet *reasonsForHoldingUpdates
 @property  BOOL hasPendingDeferredUpdate
 @property  NSString *name
 @property  <CKReasonTrackingUpdaterDelegate> *delegate
 @property  BOOL isHoldingUpdates

  // instance methods
  -[CKReasonTrackingUpdater name]
  -[CKReasonTrackingUpdater setNeedsDeferredUpdateWithReason:]
  -[CKReasonTrackingUpdater endAllHoldsOnUpdatesForReason:updateTriggeredIfNotHeldShouldBeDeferred:]
  -[CKReasonTrackingUpdater _scheduleDeferredUpdateFollowingHoldForReason:]
  -[CKReasonTrackingUpdater _triggerNeedsUpdateFollowingHoldForReason:]
  -[CKReasonTrackingUpdater updateImmediatelyIfNeeded]
  -[CKReasonTrackingUpdater _handleReasonsForHoldingUpdatesChangeForReason:updateTriggeredIfNotHeldShouldBeDeferred:]
  -[CKReasonTrackingUpdater isHoldingUpdatesForReason:]
  -[CKReasonTrackingUpdater updateImmediatelyWithReason:]
  -[CKReasonTrackingUpdater reasonsForNeedsUpdates]
  -[CKReasonTrackingUpdater setReasonsForNeedsUpdates:]
  -[CKReasonTrackingUpdater reasonsForHoldingUpdates]
  -[CKReasonTrackingUpdater setReasonsForHoldingUpdates:]
  -[CKReasonTrackingUpdater hasPendingDeferredUpdate]
  -[CKReasonTrackingUpdater setHasPendingDeferredUpdate:]
  -[CKReasonTrackingUpdater .cxx_destruct]
  -[CKReasonTrackingUpdater setName:]
  -[CKReasonTrackingUpdater setDelegate:]
  -[CKReasonTrackingUpdater isHoldingUpdates]
  -[CKReasonTrackingUpdater delegate]
  -[CKReasonTrackingUpdater needsUpdate]
  -[CKReasonTrackingUpdater initWithName:delegate:]
  -[CKReasonTrackingUpdater beginHoldingUpdatesForReason:]
  -[CKReasonTrackingUpdater endHoldingUpdatesForReason:updateTriggeredIfNotHeldShouldBeDeferred:]


CKCommSafetyHelper : NSObject
  // class methods
  +[CKCommSafetyHelper validLanguageCountryPairings]
  +[CKCommSafetyHelper defaultLanguageForCountryPairings]
  +[CKCommSafetyHelper waysToGetHelpURL]


CKMacToolbarItem : NSObject
 @property  NSString *itemIdentifier

  // instance methods
  -[CKMacToolbarItem itemIdentifier]
  -[CKMacToolbarItem .cxx_destruct]
  -[CKMacToolbarItem init]


CKMacBarButtonToolbarItem : CKMacToolbarItem
  // instance methods
  -[CKMacBarButtonToolbarItem init]


CKMacMenuToolbarItem : CKMacToolbarItem
 @property  UIMenu *menu

  // instance methods
  -[CKMacMenuToolbarItem menu]
  -[CKMacMenuToolbarItem setMenu:]
  -[CKMacMenuToolbarItem initWithItemIdentifier:menu:]
  -[CKMacMenuToolbarItem .cxx_destruct]


CKMediaObjectImageProvider : PXUIMediaProvider <PXUIImageProvider>
 @property  UIImage *testImage
 @property  long long numberOfOutstandingHandlers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMediaObjectImageProvider cancelImageRequest:]
  -[CKMediaObjectImageProvider _lock_cancelImageRequest:]
  -[CKMediaObjectImageProvider setTestImage:]
  -[CKMediaObjectImageProvider .cxx_destruct]
  -[CKMediaObjectImageProvider _handleFileTransferDidChangeNotification:]
  -[CKMediaObjectImageProvider _imagePreviewForMediaObject:isSynchronous:requestID:]
  -[CKMediaObjectImageProvider _lock_imagePreviewForMediaObject:isSynchronous:requestID:]
  -[CKMediaObjectImageProvider numberOfOutstandingHandlers]
  -[CKMediaObjectImageProvider requestPlayerItemForVideo:options:resultHandler:]
  -[CKMediaObjectImageProvider _handlePreviewDidChangeNotification:]
  -[CKMediaObjectImageProvider init]
  -[CKMediaObjectImageProvider testImage]
  -[CKMediaObjectImageProvider requestImageForAsset:targetSize:contentMode:options:resultHandler:]
  -[CKMediaObjectImageProvider thumbnailDataForAsset:targetSize:onlyFromCache:outDataSpec:]


CKMediaRequestDetails : NSObject
 @property  long long requestID
 @property  @? resultHandler
 @property  NSString *transferGUID

  // instance methods
  -[CKMediaRequestDetails requestID]
  -[CKMediaRequestDetails resultHandler]
  -[CKMediaRequestDetails .cxx_destruct]
  -[CKMediaRequestDetails transferGUID]
  -[CKMediaRequestDetails initWithRequestID:transferGUID:resultHandler:]


CKFullscreenEffectDecorationView : UICollectionReusableView
 @property  UIView<CKFullscreenEffectView> *effectView

  // class methods
  +[CKFullscreenEffectDecorationView decorationViewKind]
  +[CKFullscreenEffectDecorationView reuseIdentifier]

  // instance methods
  -[CKFullscreenEffectDecorationView setEffectView:]
  -[CKFullscreenEffectDecorationView .cxx_destruct]
  -[CKFullscreenEffectDecorationView effectView]
  -[CKFullscreenEffectDecorationView prepareForReuse]
  -[CKFullscreenEffectDecorationView setupForEffectView:]
  -[CKFullscreenEffectDecorationView tearDownEffectView]


CKMovieAttachmentItem : CKAttachmentItem
  // class methods
  +[CKMovieAttachmentItem UTITypes]

  // instance methods
  -[CKMovieAttachmentItem isJellyfishVideo]
  -[CKMovieAttachmentItem generatePreviewWithCompletion:]
  -[CKMovieAttachmentItem isIrisAsset]
  -[CKMovieAttachmentItem previewItemTitle]
  -[CKMovieAttachmentItem _defaultSize]
  -[CKMovieAttachmentItem size]
  -[CKMovieAttachmentItem _generateThumbnailFillToSize:]


CKMessageAcknowledgmentPickerBarItemViewPhone : CKMessageAcknowledgmentPickerBarItemView
 @property  CALayer *selectionLayer

  // instance methods
  -[CKMessageAcknowledgmentPickerBarItemViewPhone .cxx_destruct]
  -[CKMessageAcknowledgmentPickerBarItemViewPhone layoutSubviews]
  -[CKMessageAcknowledgmentPickerBarItemViewPhone setSelected:]
  -[CKMessageAcknowledgmentPickerBarItemViewPhone selectionLayer]
  -[CKMessageAcknowledgmentPickerBarItemViewPhone setSelectionLayer:]


CKTransientFileTransfer : NSObject <CKFileTransfer>
 @property  NSDictionary *attributionInfo
 @property  IMMessage *IMMessage
 @property  NSString *guid
 @property  NSURL *fileURL
 @property  NSString *filename
 @property  NSDictionary *transcoderUserInfo
 @property  NSDictionary *stickerUserInfo
 @property  NSError *error
 @property  unsigned long currentBytes
 @property  unsigned long totalBytes
 @property  BOOL isSticker
 @property  BOOL hideAttachment
 @property  BOOL isDirectory
 @property  long long commSafetySensitive
 @property  BOOL fileURLFinalized
 @property  BOOL fileDataReady
 @property  BOOL downloadable
 @property  BOOL downloading
 @property  BOOL restoring
 @property  BOOL isFromMomentShare
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKTransientFileTransfer isRestoring]
  -[CKTransientFileTransfer IMMessage]
  -[CKTransientFileTransfer guid]
  -[CKTransientFileTransfer fileURL]
  -[CKTransientFileTransfer .cxx_destruct]
  -[CKTransientFileTransfer filename]
  -[CKTransientFileTransfer isSticker]
  -[CKTransientFileTransfer initWithFileURL:transcoderUserInfo:attributionInfo:hideAttachment:]
  -[CKTransientFileTransfer isDirectory]
  -[CKTransientFileTransfer isFileURLFinalized]
  -[CKTransientFileTransfer setIMMessage:]
  -[CKTransientFileTransfer isFileDataReady]
  -[CKTransientFileTransfer isDownloadable]
  -[CKTransientFileTransfer setAttributionInfo:]
  -[CKTransientFileTransfer initWithAttributionInfo:]
  -[CKTransientFileTransfer initWithTransferGUID:imMessage:]
  -[CKTransientFileTransfer stickerUserInfo]
  -[CKTransientFileTransfer currentBytes]
  -[CKTransientFileTransfer hideAttachment]
  -[CKTransientFileTransfer isFromMomentShare]
  -[CKTransientFileTransfer isDownloading]
  -[CKTransientFileTransfer commSafetySensitive]
  -[CKTransientFileTransfer totalBytes]
  -[CKTransientFileTransfer attributionInfo]
  -[CKTransientFileTransfer error]
  -[CKTransientFileTransfer mediaObjectRemoved]
  -[CKTransientFileTransfer mediaObjectAdded]
  -[CKTransientFileTransfer transcoderUserInfo]
  -[CKTransientFileTransfer fetchHighQualityFile:]


CKSpeakerButton : UIButton
 @property  BOOL shouldShowText
 @property  BOOL orientation
 @property  BOOL speakerEnabled

  // class methods
  +[CKSpeakerButton speakerImageWithOrientation:speakerEnabled:shouldShowText:]

  // instance methods
  -[CKSpeakerButton setOrientation:]
  -[CKSpeakerButton touchUpInside:]
  -[CKSpeakerButton updateSpeakerImage]
  -[CKSpeakerButton hideSpeakerText]
  -[CKSpeakerButton setSpeakerEnabled:]
  -[CKSpeakerButton sizeThatFits:]
  -[CKSpeakerButton orientation]
  -[CKSpeakerButton initWithFrame:]
  -[CKSpeakerButton __im_ff_systemImageAdoptionEnabled]
  -[CKSpeakerButton isSpeakerEnabled]
  -[CKSpeakerButton shouldShowText]
  -[CKSpeakerButton setShouldShowText:]


CKThrowAnimationManager : NSObject <CKSendAnimationManager>
 @property  CKSendAnimationContext *currentContext
 @property  UIView *sendAnimationWindow
 @property  CKChatControllerDummyAnimator *animator
 @property  CKTranscriptTypingIndicatorCell *fakeTypingIndicatorCell
 @property  CKTranscriptUnavailabilityIndicatorCell *fakeUnavailabilityIndicatorCell
 @property  CKTranscriptNotifyAnywayButtonCell *fakeNotifyAnywayButtonCell
 @property  <CKThrowAnimationManagerDelegate> *throwManagerDelegate
 @property  <CKSendAnimationManagerDelegate> *sendAnimationManagerDelegate
 @property  <CKSendAnimationBalloonProvider> *sendAnimationBalloonProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKThrowAnimationManager setAnimator:]
  -[CKThrowAnimationManager animator]
  -[CKThrowAnimationManager .cxx_destruct]
  -[CKThrowAnimationManager setThrowManagerDelegate:]
  -[CKThrowAnimationManager setSendAnimationManagerDelegate:]
  -[CKThrowAnimationManager setSendAnimationBalloonProvider:]
  -[CKThrowAnimationManager animateMessages:]
  -[CKThrowAnimationManager currentContext]
  -[CKThrowAnimationManager sendAnimationWindow]
  -[CKThrowAnimationManager fakeUnavailabilityIndicatorCell]
  -[CKThrowAnimationManager setFakeUnavailabilityIndicatorCell:]
  -[CKThrowAnimationManager fakeNotifyAnywayButtonCell]
  -[CKThrowAnimationManager setFakeNotifyAnywayButtonCell:]
  -[CKThrowAnimationManager fakeTypingIndicatorCell]
  -[CKThrowAnimationManager setFakeTypingIndicatorCell:]
  -[CKThrowAnimationManager throwManagerDelegate]
  -[CKThrowAnimationManager _setupFakeTypingAndUnavailabilityIndicatorsIfNecessary]
  -[CKThrowAnimationManager _setupThrowBalloonViews]
  -[CKThrowAnimationManager _snapshotLiveBubbleIfNecessary]
  -[CKThrowAnimationManager _sendMessageAndPinTranscript]
  -[CKThrowAnimationManager _removeFakeTypingIndicatorIfNecessary]
  -[CKThrowAnimationManager _setupThrowFrames]
  -[CKThrowAnimationManager _shiftFakeTypingIndicator]
  -[CKThrowAnimationManager _hideAddedChatItems]
  -[CKThrowAnimationManager bestVisibleOffsetForBubbleAtIndex:]
  -[CKThrowAnimationManager _transcriptWillShiftDueToThrowAnimation]
  -[CKThrowAnimationManager lastVisibleCellOfType:inCollectionView:]
  -[CKThrowAnimationManager _collectionViewController]
  -[CKThrowAnimationManager _changeInEntryViewHeight]
  -[CKThrowAnimationManager setSendAnimationWindow:]
  -[CKThrowAnimationManager setCurrentContext:]
  -[CKThrowAnimationManager init]
  -[CKThrowAnimationManager _entryView]
  -[CKThrowAnimationManager _removeAllAnimations]
  -[CKThrowAnimationManager animationWillBeginWithContext:]
  -[CKThrowAnimationManager animationDidFinishWithContext:]
  -[CKThrowAnimationManager sendAnimationManagerDelegate]
  -[CKThrowAnimationManager sendAnimationBalloonProvider]


CKInputView : UIInputView
 @property  {CGSize=dd} lastContentSize
 @property  long long lastContentSizeInterfaceOrientation

  // class methods
  +[CKInputView defaultContentSizeLargerThanKeyboard:]
  +[CKInputView defaultContentSize]

  // instance methods
  -[CKInputView lastContentSize]
  -[CKInputView lastContentSizeInterfaceOrientation]
  -[CKInputView setLastContentSize:]
  -[CKInputView setLastContentSizeInterfaceOrientation:]
  -[CKInputView intrinsicContentSize]


CKKeyboardContentViewController : UIInputViewController
 @property  NSString *identifier
 @property  UIViewController *viewController

  // instance methods
  -[CKKeyboardContentViewController viewController]
  -[CKKeyboardContentViewController .cxx_destruct]
  -[CKKeyboardContentViewController viewDidLoad]
  -[CKKeyboardContentViewController identifier]
  -[CKKeyboardContentViewController viewDidLayoutSubviews]
  -[CKKeyboardContentViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKKeyboardContentViewController setIdentifier:]
  -[CKKeyboardContentViewController loadView]
  -[CKKeyboardContentViewController setViewController:]
  -[CKKeyboardContentViewController initWithViewController:identifier:]


CKImpactEffectHapticsGenerator : NSObject
 @property  NSObject<CK_UIFeedBackImpactBehavior> *expressiveSendFeedbackImpactBehavior
 @property  double feedbackImpactBehaviorDispatchDelay
 @property  BOOL sendFeedbackImpactBehavior

  // instance methods
  -[CKImpactEffectHapticsGenerator .cxx_destruct]
  -[CKImpactEffectHapticsGenerator setFeedbackImpactBehaviorDispatchDelay:]
  -[CKImpactEffectHapticsGenerator setSendFeedbackImpactBehavior:]
  -[CKImpactEffectHapticsGenerator setExpressiveSendFeedbackImpactBehavior:]
  -[CKImpactEffectHapticsGenerator sendFeedbackImpactBehavior]
  -[CKImpactEffectHapticsGenerator sendImpactBehaviorFeedbackForCoordinateSpace:cleanUpOnSend:]
  -[CKImpactEffectHapticsGenerator expressiveSendFeedbackImpactBehavior]
  -[CKImpactEffectHapticsGenerator feedbackImpactBehaviorDispatchDelay]
  -[CKImpactEffectHapticsGenerator init]
  -[CKImpactEffectHapticsGenerator _setUpExpressiveSendFeedbackImpactBehaviorForCoordinateSpace:]
  -[CKImpactEffectHapticsGenerator cleanUpImpactBehaviorFeedback]
  -[CKImpactEffectHapticsGenerator sendImpactBehaviorFeedbackForCoordinateSpace:]
  -[CKImpactEffectHapticsGenerator setImpactBehaviorFeedbackDispatchTimeForSendWithImpactMessage:]


CKGroupRecipientSelectionController : CKRecipientSelectionController <CKRecipientSelectionControllerDelegate>
 @property  UIBarButtonItem *doneButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKGroupRecipientSelectionController .cxx_destruct]
  -[CKGroupRecipientSelectionController initWithConversation:]
  -[CKGroupRecipientSelectionController doneButton]
  -[CKGroupRecipientSelectionController shouldAutorotate]
  -[CKGroupRecipientSelectionController topInsetForNavBar]
  -[CKGroupRecipientSelectionController recipientSelectionControllerDidChange]
  -[CKGroupRecipientSelectionController isBeingPresentedInMacDetailsView]
  -[CKGroupRecipientSelectionController homogenizePreferredServiceForiMessage]
  -[CKGroupRecipientSelectionController recipientSelectionController:textDidChange:]
  -[CKGroupRecipientSelectionController setDoneButton:]
  -[CKGroupRecipientSelectionController _frecencySearch]
  -[CKGroupRecipientSelectionController recipientSelectionControllerReturnPressed:]
  -[CKGroupRecipientSelectionController recipientSelectionControllerTabPressed:]
  -[CKGroupRecipientSelectionController recipientSelectionControllerDidChangeSize:]
  -[CKGroupRecipientSelectionController recipientSelectionControllerRequestDismissKeyboard:]
  -[CKGroupRecipientSelectionController _updateNavigationButton]
  -[CKGroupRecipientSelectionController recipientSelectionControllerDidPushABViewController:]
  -[CKGroupRecipientSelectionController recipientSelectionControllerDidBecomeFirstResponder:]
  -[CKGroupRecipientSelectionController recipientSelectionControllerShouldResignFirstResponder:]
  -[CKGroupRecipientSelectionController _checkAvailabilityAndAddToken]
  -[CKGroupRecipientSelectionController _enableRecipientsAdditionBasedOnAvailability]
  -[CKGroupRecipientSelectionController recipientAvailibilitiesDidUpdate]
  -[CKGroupRecipientSelectionController recipientSelectionController:didFinishAvailaiblityLookupForRecipient:]
  -[CKGroupRecipientSelectionController shouldSuppressSearchResultsTable]
  -[CKGroupRecipientSelectionController alwaysShowSearchResultsTable]
  -[CKGroupRecipientSelectionController recipientSelectionControllerSearchListDidShowOrHide:]
  -[CKGroupRecipientSelectionController navigationBarInsetsForRecipientSelectionController:]
  -[CKGroupRecipientSelectionController handlesForScreenTimePolicyCheck]
  -[CKGroupRecipientSelectionController composeRecipientViewReturnPressed:]
  -[CKGroupRecipientSelectionController viewWillAppear:]
  -[CKGroupRecipientSelectionController viewDidAppearDeferredSetup]
  -[CKGroupRecipientSelectionController loadView]


CKAudioSessionController : NSObject
 @property  BOOL active
 @property  BOOL dirty
 @property  unsigned long options
 @property  BOOL shouldUseSpeaker
 @property  BOOL shouldStopPlayingWhenSilent
 @property  BOOL shouldDuckOthers

  // class methods
  +[CKAudioSessionController shareInstance]
  +[CKAudioSessionController queue]

  // instance methods
  -[CKAudioSessionController setDirty:]
  -[CKAudioSessionController isDirty]
  -[CKAudioSessionController isActive]
  -[CKAudioSessionController options]
  -[CKAudioSessionController setOptions:]
  -[CKAudioSessionController audioSessionInterruption:]
  -[CKAudioSessionController shouldUseSpeaker]
  -[CKAudioSessionController shouldStopPlayingWhenSilent]
  -[CKAudioSessionController shouldDuckOthers]
  -[CKAudioSessionController init]
  -[CKAudioSessionController audioSessionRouteChange:]
  -[CKAudioSessionController audioSessionMediaServicesWereLost:]
  -[CKAudioSessionController audioSessionMediaServicesWereReset:]
  -[CKAudioSessionController setActive:options:completion:]
  -[CKAudioSessionController configureAudioSessionWithOptions:]
  -[CKAudioSessionController setActive:]
  -[CKAudioSessionController deactivate]
  -[CKAudioSessionController dealloc]
  -[CKAudioSessionController activateWithOptions:completion:]


CKCommunicationSafetyEDUScreenOne : CKCommunicationSafetyEDUScreen
 @property  BOOL isYoungAgeGroup
 @property  BOOL isSending
 @property  NSIndexPath *indexPath
 @property  CKComposition *composition
 @property  NSSet *sensitiveMediaObjects
 @property  NSArray *identifiersOfShelvedImages
 @property  <CKCommunicationSafetyEDUScreenProtocol> *delegate

  // instance methods
  -[CKCommunicationSafetyEDUScreenOne isSending]
  -[CKCommunicationSafetyEDUScreenOne composition]
  -[CKCommunicationSafetyEDUScreenOne .cxx_destruct]
  -[CKCommunicationSafetyEDUScreenOne initFirstReceivingEDUScreenWithItemIndexPath:]
  -[CKCommunicationSafetyEDUScreenOne setDelegate:]
  -[CKCommunicationSafetyEDUScreenOne addButtonsToTray]
  -[CKCommunicationSafetyEDUScreenOne configureFirstReceiveScreen]
  -[CKCommunicationSafetyEDUScreenOne configureFirstSendScreen]
  -[CKCommunicationSafetyEDUScreenOne _notNowButtonPressed]
  -[CKCommunicationSafetyEDUScreenOne _acceptButtonPressed]
  -[CKCommunicationSafetyEDUScreenOne isYoungAgeGroup]
  -[CKCommunicationSafetyEDUScreenOne indexPath]
  -[CKCommunicationSafetyEDUScreenOne _messageButtonPressed]
  -[CKCommunicationSafetyEDUScreenOne sensitiveMediaObjects]
  -[CKCommunicationSafetyEDUScreenOne identifiersOfShelvedImages]
  -[CKCommunicationSafetyEDUScreenOne delegate]
  -[CKCommunicationSafetyEDUScreenOne initFirstSendingEDUScreenWithComposition:withSensitiveMediaObjects:withIdentifiersOfShelvedImages:]


CKDispatchCache : NSObject <IMSystemMonitorListener>
 @property  NSCache *objectCache
 @property  NSCountedSet *pendingKeys
 @property  NSMutableDictionary *pendingGroups
 @property  CKDispatchQueue *dispatchQueue
 @property  NSObject<OS_dispatch_queue> *lockQueue
 @property  long long dispatchPriority

  // instance methods
  -[CKDispatchCache emptyCache]
  -[CKDispatchCache suspend]
  -[CKDispatchCache .cxx_destruct]
  -[CKDispatchCache objectCache]
  -[CKDispatchCache enqueueGenerationBlock:completion:withPriority:forKey:]
  -[CKDispatchCache pendingGroups]
  -[CKDispatchCache init]
  -[CKDispatchCache setObjectCache:]
  -[CKDispatchCache isGeneratingForKey:]
  -[CKDispatchCache initWithCacheLimit:dispatchPriority:]
  -[CKDispatchCache beginGeneratingForKey:]
  -[CKDispatchCache _endGeneratingForKeyUnlocked:]
  -[CKDispatchCache _beginGeneratingForKeyUnlocked:]
  -[CKDispatchCache setCachedObject:forKey:]
  -[CKDispatchCache enqueueBlock:withPriority:]
  -[CKDispatchCache endGeneratingForKey:]
  -[CKDispatchCache waitOnGenerationForKey:]
  -[CKDispatchCache setPendingKeys:]
  -[CKDispatchCache setPendingGroups:]
  -[CKDispatchCache dispatchPriority]
  -[CKDispatchCache setDispatchPriority:]
  -[CKDispatchCache lockQueue]
  -[CKDispatchCache dispatchQueue]
  -[CKDispatchCache clearQueue]
  -[CKDispatchCache resume]
  -[CKDispatchCache setLockQueue:]
  -[CKDispatchCache dealloc]
  -[CKDispatchCache cachedObjectForKey:]
  -[CKDispatchCache systemApplicationDidSuspend]
  -[CKDispatchCache pendingKeys]
  -[CKDispatchCache setDispatchQueue:]


CKAddressBook : NSObject
  // class methods
  +[CKAddressBook locationSharingContactImageOfDiameter:forID:useCustomFont:]
  +[CKAddressBook contactImageCache]
  +[CKAddressBook monogrammerProvider]
  +[CKAddressBook contactImageOfDiameter:forID:monogramStyle:tintMonogramText:customFont:]
  +[CKAddressBook placeholderContactImageOfDiameter:monogramStyle:tintMonogramText:]
  +[CKAddressBook contactImageOfDiameter:forID:monogramStyle:tintMonogramText:]
  +[CKAddressBook transcriptContactImageOfDiameter:forID:]
  +[CKAddressBook flushMonogrammers]
  +[CKAddressBook monogrammerWithDiameter:style:useAppTintColor:customFont:]


_CKAddressBookMonogrammerProvider : NSObject <CKAddressBookMonogrammerProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_CKAddressBookMonogrammerProvider sharedInstance]

  // instance methods
  -[_CKAddressBookMonogrammerProvider monogrammerForStyle:diameter:]


CKDetailsContactsStandardTableViewCell : CKDetailsContactsTableViewCell
 @property  NSMutableArray *visibleButtons

  // class methods
  +[CKDetailsContactsStandardTableViewCell estimatedHeight]
  +[CKDetailsContactsStandardTableViewCell preferredHeight]

  // instance methods
  -[CKDetailsContactsStandardTableViewCell setShowsTUConversationStatus:]
  -[CKDetailsContactsStandardTableViewCell .cxx_destruct]
  -[CKDetailsContactsStandardTableViewCell layoutSubviews]
  -[CKDetailsContactsStandardTableViewCell visibleButtons]
  -[CKDetailsContactsStandardTableViewCell _updateVisibleButtons]
  -[CKDetailsContactsStandardTableViewCell _hideAllButtons]
  -[CKDetailsContactsStandardTableViewCell setVisibleButtons:]
  -[CKDetailsContactsStandardTableViewCell initWithStyle:reuseIdentifier:]
  -[CKDetailsContactsStandardTableViewCell setShowsLocation:]


CKMessageAcknowledgmentPickerBarView : UIView <CKPickerBarView>
 @property  {CGPoint=dd} anchorBubblePosition
 @property  BOOL anchorVerticalOrientation
 @property  NSArray *acknowledgmentViews
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMessageAcknowledgmentPickerBarView traitCollectionDidChange:]
  -[CKMessageAcknowledgmentPickerBarView .cxx_destruct]
  -[CKMessageAcknowledgmentPickerBarView layoutSubviews]
  -[CKMessageAcknowledgmentPickerBarView sizeThatFits:]
  -[CKMessageAcknowledgmentPickerBarView updateDynamicColorsForBubbleLayers]
  -[CKMessageAcknowledgmentPickerBarView anchorBubblePosition]
  -[CKMessageAcknowledgmentPickerBarView anchorVerticalOrientation]
  -[CKMessageAcknowledgmentPickerBarView _ackViewsBoundsWidth]
  -[CKMessageAcknowledgmentPickerBarView setAcknowledgmentViews:]
  -[CKMessageAcknowledgmentPickerBarView _hasGroupCounts]
  -[CKMessageAcknowledgmentPickerBarView performSelectedAnimation:]
  -[CKMessageAcknowledgmentPickerBarView initWithGroupCounts:selectedType:orientation:]
  -[CKMessageAcknowledgmentPickerBarView acknowledgmentViews]
  -[CKMessageAcknowledgmentPickerBarView setAnchorBubblePosition:]
  -[CKMessageAcknowledgmentPickerBarView performShowAnimation:]
  -[CKMessageAcknowledgmentPickerBarView performSendAnimation:]
  -[CKMessageAcknowledgmentPickerBarView performCancelAnimation:]
  -[CKMessageAcknowledgmentPickerBarView setAnchorVerticalOrientation:]


CKCMMAssetActionManager : PXPhotoKitAssetActionManager
 @property  CKMediaObjectAssetActionManager *messagesAssetActionManager
 @property  id photosAssetActionManager
 @property  PXCMMSession *session

  // class methods
  +[CKCMMAssetActionManager assetActionManagerWithCMMSession:chatItem:chatActionHelper:performerDelegate:]

  // instance methods
  -[CKCMMAssetActionManager presentationSource]
  -[CKCMMAssetActionManager canPerformActionType:]
  -[CKCMMAssetActionManager .cxx_destruct]
  -[CKCMMAssetActionManager executeActionForActionType:withCompletionHandler:]
  -[CKCMMAssetActionManager previewActionForActionType:image:]
  -[CKCMMAssetActionManager supportsActionType:]
  -[CKCMMAssetActionManager setSession:]
  -[CKCMMAssetActionManager setPerformerDelegate:]
  -[CKCMMAssetActionManager actionPerformerForActionType:]
  -[CKCMMAssetActionManager setPhotosAssetActionManager:]
  -[CKCMMAssetActionManager setMessagesAssetActionManager:]
  -[CKCMMAssetActionManager _propagatePerformerDelegate:]
  -[CKCMMAssetActionManager _destinationActionManagerForActionType:]
  -[CKCMMAssetActionManager shouldEnableActionType:onAsset:]
  -[CKCMMAssetActionManager setAdditionalPropertiesFromActionManager:]
  -[CKCMMAssetActionManager messagesAssetActionManager]
  -[CKCMMAssetActionManager _propagateObjectReference:]
  -[CKCMMAssetActionManager photosAssetActionManager]
  -[CKCMMAssetActionManager barButtonItemForActionType:]
  -[CKCMMAssetActionManager session]
  -[CKCMMAssetActionManager setObjectReference:]


CKNavigationButtonView : UIButton
 @property  BOOL wantsLongPress
 @property  UIImage *image
 @property  UIImage *defaultImage
 @property  UIImage *disabledImage
 @property  UIImageView *iconImageView
 @property  UILabel *textLabel
 @property  UIVisualEffectView *vibrancyView
 @property  UIVisualEffect *vibrancyEffect
 @property  UIVisualEffect *disabledVibrancyEffect
 @property  NSString *text
 @property  long long joinButtonStyle
 @property  BOOL wantsVibrancy
 @property  UIButton *imageButton

  // instance methods
  -[CKNavigationButtonView imageButton]
  -[CKNavigationButtonView setText:]
  -[CKNavigationButtonView setWantsVibrancy:]
  -[CKNavigationButtonView image]
  -[CKNavigationButtonView setIconImageView:]
  -[CKNavigationButtonView .cxx_destruct]
  -[CKNavigationButtonView setVibrancyEffect:]
  -[CKNavigationButtonView layoutSubviews]
  -[CKNavigationButtonView initWithImage:disabledImage:text:wantsLongPress:]
  -[CKNavigationButtonView initWithImage:text:wantsLongPress:]
  -[CKNavigationButtonView joinButtonStyle]
  -[CKNavigationButtonView setJoinButtonStyle:]
  -[CKNavigationButtonView wantsVibrancy]
  -[CKNavigationButtonView disabledImage]
  -[CKNavigationButtonView setWantsLongPress:]
  -[CKNavigationButtonView setDefaultImage:]
  -[CKNavigationButtonView _setupIconImageView]
  -[CKNavigationButtonView vibrancyEffect]
  -[CKNavigationButtonView _imageForCurrentState]
  -[CKNavigationButtonView disabledVibrancyEffect]
  -[CKNavigationButtonView setDisabledVibrancyEffect:]
  -[CKNavigationButtonView wantsLongPress]
  -[CKNavigationButtonView setDisabledImage:]
  -[CKNavigationButtonView vibrancyView]
  -[CKNavigationButtonView setTextLabel:]
  -[CKNavigationButtonView setImage:]
  -[CKNavigationButtonView textLabel]
  -[CKNavigationButtonView setVibrancyView:]
  -[CKNavigationButtonView iconImageView]
  -[CKNavigationButtonView setEnabled:]
  -[CKNavigationButtonView text]
  -[CKNavigationButtonView defaultImage]


CKCloudMessagesDetailController : PSListController
 @property  UIProgressHUD *cloudKitProgressView

  // class methods
  +[CKCloudMessagesDetailController specifier]

  // instance methods
  -[CKCloudMessagesDetailController specifiers]
  -[CKCloudMessagesDetailController .cxx_destruct]
  -[CKCloudMessagesDetailController init]
  -[CKCloudMessagesDetailController dataSize:]
  -[CKCloudMessagesDetailController undoDelete:]
  -[CKCloudMessagesDetailController hideSpinner]
  -[CKCloudMessagesDetailController setEnabledDidReturned:]
  -[CKCloudMessagesDetailController tryToDisableAllDevicesDidReturn:]
  -[CKCloudMessagesDetailController disableAndDelete:]
  -[CKCloudMessagesDetailController cloudDocsSpecifiers]
  -[CKCloudMessagesDetailController showSpinnerMessage:]
  -[CKCloudMessagesDetailController _displayiCloudErrorMessage]
  -[CKCloudMessagesDetailController cloudKitProgressView]
  -[CKCloudMessagesDetailController setCloudKitProgressView:]
  -[CKCloudMessagesDetailController viewWillAppear:]


CKUIVideoEditorController : UIVideoEditorController <CKAdaptivePresentedControllerProtocol>
 @property  BOOL wantsWindowedPresentation
 @property  BOOL preserveModalPresentationStyle
 @property  BOOL shouldHidePresentingWindow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKUIVideoEditorController wantsWindowedPresentation]
  -[CKUIVideoEditorController setWantsWindowedPresentation:]
  -[CKUIVideoEditorController preserveModalPresentationStyle]
  -[CKUIVideoEditorController setPreserveModalPresentationStyle:]


CKVideoTrimController : NSObject <UIVideoEditorControllerDelegatePrivate, UINavigationControllerDelegate>
 @property  <CKTrimControllerDelegate> *delegate
 @property  CKMediaObject *originalMediaObject
 @property  CKMediaObject *trimmedMediaObject
 @property  CKUIVideoEditorController *editVideoVC
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKVideoTrimController .cxx_destruct]
  -[CKVideoTrimController editVideoVC]
  -[CKVideoTrimController setDelegate:]
  -[CKVideoTrimController initWithMediaObject:maxTrimDuration:]
  -[CKVideoTrimController videoEditorControllerDidCancel:]
  -[CKVideoTrimController videoEditorController:didFailWithError:]
  -[CKVideoTrimController videoEditorController:didTrimVideoWithOptions:]
  -[CKVideoTrimController videoEditorController:didSaveEditedVideoToPath:]
  -[CKVideoTrimController setEditVideoVC:]
  -[CKVideoTrimController setOriginalMediaObject:]
  -[CKVideoTrimController originalMediaObject]
  -[CKVideoTrimController setTrimmedMediaObject:]
  -[CKVideoTrimController trimmedMediaObject]
  -[CKVideoTrimController delegate]
  -[CKVideoTrimController dealloc]


CKPassKitStateObserver : NSObject
 @property  BOOL passKitUIPresented
 @property  BOOL iTunesStoreDialogPresented

  // class methods
  +[CKPassKitStateObserver sharedInstance]

  // instance methods
  -[CKPassKitStateObserver prepareForResume]
  -[CKPassKitStateObserver iTunesStoreDialogPresented]
  -[CKPassKitStateObserver init]
  -[CKPassKitStateObserver setITunesStoreDialogPresented:]
  -[CKPassKitStateObserver setPassKitUIPresented:]
  -[CKPassKitStateObserver _passKitUIDismissed]
  -[CKPassKitStateObserver _iTunesStoreDialogDidDismiss]
  -[CKPassKitStateObserver _iTunesStoreDialogWillDisplay]
  -[CKPassKitStateObserver _passKitUIPresented]
  -[CKPassKitStateObserver dealloc]
  -[CKPassKitStateObserver passKitUIPresented]


CKHorizontalTiledLayoutGenerator : CKTiledLayoutGenerator
 @property  double referenceHeight

  // instance methods
  -[CKHorizontalTiledLayoutGenerator referenceHeight]
  -[CKHorizontalTiledLayoutGenerator _addColumnWithTiles:imageFrames:count:]
  -[CKHorizontalTiledLayoutGenerator _addColumnWithContiguousTiles:count:]
  -[CKHorizontalTiledLayoutGenerator _hasLeftSuboptimalColumn]
  -[CKHorizontalTiledLayoutGenerator _scanSpecialSequenceColumn:count:]
  -[CKHorizontalTiledLayoutGenerator _parseSpecialSubsequenceWithColumnRequired:columnParsed:]
  -[CKHorizontalTiledLayoutGenerator _isAtEndOfColumn]
  -[CKHorizontalTiledLayoutGenerator _enumerateColumnFramesWithContiguousTiles:count:useMagneticGuidelines:block:]
  -[CKHorizontalTiledLayoutGenerator setReferenceHeight:]
  -[CKHorizontalTiledLayoutGenerator willParseTiles]
  -[CKHorizontalTiledLayoutGenerator _parseSpecialSequence]
  -[CKHorizontalTiledLayoutGenerator _parseSpecialTileTriplet]
  -[CKHorizontalTiledLayoutGenerator _parseTileTriplet]
  -[CKHorizontalTiledLayoutGenerator _parseTilePair]
  -[CKHorizontalTiledLayoutGenerator _parseSingleTile]
  -[CKHorizontalTiledLayoutGenerator _scanTripletWithLargeLead:]
  -[CKHorizontalTiledLayoutGenerator _scanSpecialSequenceBlock:]
  -[CKHorizontalTiledLayoutGenerator _addSpecialSequenceBlock:]
  -[CKHorizontalTiledLayoutGenerator _scanNonPanoramaSequence:count:]
  -[CKHorizontalTiledLayoutGenerator parseNextTiles]
  -[CKHorizontalTiledLayoutGenerator referenceDistanceForMagneticGuidelines]


CKMediaObjectAddToLibraryAssetActionPerformer : CKMediaObjectAssetActionPerformer
  // class methods
  +[CKMediaObjectAddToLibraryAssetActionPerformer canPerformWithActionManager:selectionSnapshot:]
  +[CKMediaObjectAddToLibraryAssetActionPerformer canPerformOnImplicitSelection]
  +[CKMediaObjectAddToLibraryAssetActionPerformer localizedTitleForUseCase:actionManager:]
  +[CKMediaObjectAddToLibraryAssetActionPerformer systemImageNameForActionManager:]

  // instance methods
  -[CKMediaObjectAddToLibraryAssetActionPerformer performUserInteractionTask]


CKReaderViewController : UIViewController <UIWebViewDelegate>
 @property  UITextView *textView
 @property  <CKReaderViewControllerDelegate> *delegate
 @property  NSString *messageGUID
 @property  NSAttributedString *text
 @property  {_NSRange=QQ} visibleRange
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKReaderViewController readerScrollPositionCache]
  +[CKReaderViewController readerViewControllerForChatItem:]

  // instance methods
  -[CKReaderViewController textView]
  -[CKReaderViewController setText:]
  -[CKReaderViewController visibleRange]
  -[CKReaderViewController .cxx_destruct]
  -[CKReaderViewController messageGUID]
  -[CKReaderViewController setMessageGUID:]
  -[CKReaderViewController contentSizeCategoryDidChange:]
  -[CKReaderViewController setDelegate:]
  -[CKReaderViewController shouldAutorotate]
  -[CKReaderViewController init]
  -[CKReaderViewController viewWillDisappear:]
  -[CKReaderViewController setTextView:]
  -[CKReaderViewController setVisibleRange:]
  -[CKReaderViewController delegate]
  -[CKReaderViewController dealloc]
  -[CKReaderViewController loadView]
  -[CKReaderViewController text]
  -[CKReaderViewController supportedInterfaceOrientations]


CKWatchfaceMediaObject : CKMediaObject
 @property  LPLinkMetadata *linkMetadata
 @property  double cachedWidth
 @property  BOOL cachedOrientation

  // class methods
  +[CKWatchfaceMediaObject isPreviewable]
  +[CKWatchfaceMediaObject canGeneratePreviewInMVSHostProcess]
  +[CKWatchfaceMediaObject UTITypes]
  +[CKWatchfaceMediaObject shouldUseTranscoderGeneratedPreviewSize]

  // instance methods
  -[CKWatchfaceMediaObject linkMetadataForWidth:orientation:]
  -[CKWatchfaceMediaObject generateThumbnailForWidth:orientation:]
  -[CKWatchfaceMediaObject .cxx_destruct]
  -[CKWatchfaceMediaObject attachmentSummary:]
  -[CKWatchfaceMediaObject cachedWidth]
  -[CKWatchfaceMediaObject previewBalloonViewClass]
  -[CKWatchfaceMediaObject placeholderBalloonViewClass]
  -[CKWatchfaceMediaObject setCachedWidth:]
  -[CKWatchfaceMediaObject generatePreviewFromThumbnail:width:orientation:]
  -[CKWatchfaceMediaObject hasOutOfProcessPreviewGenerator]
  -[CKWatchfaceMediaObject _isCachedFileLocationValid]
  -[CKWatchfaceMediaObject cachedOrientation]
  -[CKWatchfaceMediaObject setCachedOrientation:]
  -[CKWatchfaceMediaObject linkMetadata]
  -[CKWatchfaceMediaObject mediaType]
  -[CKWatchfaceMediaObject setLinkMetadata:]
  -[CKWatchfaceMediaObject metricsCollectorMediaType]
  -[CKWatchfaceMediaObject generatePreviewOutOfProcess]


CKPinnedConversationActivityItemViewBackdropLayer : CABackdropLayer
 @property  long long userInterfaceStyle

  // instance methods
  -[CKPinnedConversationActivityItemViewBackdropLayer setUserInterfaceStyle:]
  -[CKPinnedConversationActivityItemViewBackdropLayer _updateBackgroundColor]
  -[CKPinnedConversationActivityItemViewBackdropLayer userInterfaceStyle]
  -[CKPinnedConversationActivityItemViewBackdropLayer init]


CKPinnedConversationActivityItemViewShadowLayer : CAShapeLayer
 @property  long long shadowType
 @property  long long userInterfaceStyle

  // instance methods
  -[CKPinnedConversationActivityItemViewShadowLayer setUserInterfaceStyle:]
  -[CKPinnedConversationActivityItemViewShadowLayer initWithShadowType:]
  -[CKPinnedConversationActivityItemViewShadowLayer userInterfaceStyle]
  -[CKPinnedConversationActivityItemViewShadowLayer shadowType]
  -[CKPinnedConversationActivityItemViewShadowLayer _updateShadowProperties]
  -[CKPinnedConversationActivityItemViewShadowLayer _shadowStyleForShadowType:userInterfaceStyle:]
  -[CKPinnedConversationActivityItemViewShadowLayer _opacityForShadowStyle:]
  -[CKPinnedConversationActivityItemViewShadowLayer _radiusForShadowStyle:]
  -[CKPinnedConversationActivityItemViewShadowLayer _offsetForShadowStyle:]


CKTranscriptPluginViewManager : NSObject
  // class methods
  +[CKTranscriptPluginViewManager sharedInstance]

  // instance methods
  -[CKTranscriptPluginViewManager resetState]
  -[CKTranscriptPluginViewManager .cxx_destruct]
  -[CKTranscriptPluginViewManager init]
  -[CKTranscriptPluginViewManager _objectSupportsPluginViewReuse:]
  -[CKTranscriptPluginViewManager _registerPluginView:withReuseDelegate:]
  -[CKTranscriptPluginViewManager _pointerKeyForPluginView:]
  -[CKTranscriptPluginViewManager dequeuePluginViewForBalloonController:]
  -[CKTranscriptPluginViewManager dealloc]
  -[CKTranscriptPluginViewManager enqueuePluginViewForReuse:]
  -[CKTranscriptPluginViewManager didReceiveMemoryWarning]


CKTranscriptExtensionViewController : UINavigationController <CKChatControllerDelegate>
 @property  CKDetailsNavigationController *detailsNavigationController
 @property  NSUUID *requestUUID
 @property  NSExtension *weakExtension
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKTranscriptExtensionViewController initialize]

  // instance methods
  -[CKTranscriptExtensionViewController __im_ff_chatCacheEnabled]
  -[CKTranscriptExtensionViewController setRequestUUID:]
  -[CKTranscriptExtensionViewController requestUUID]
  -[CKTranscriptExtensionViewController setDetailsNavigationController:]
  -[CKTranscriptExtensionViewController detailsNavigationController]
  -[CKTranscriptExtensionViewController chatController:willSendComposition:inConversation:]
  -[CKTranscriptExtensionViewController chatController:didSendCompositionInConversation:]
  -[CKTranscriptExtensionViewController chatController:didReportSpamForConversation:]
  -[CKTranscriptExtensionViewController prewarmCameraIfNecessaryForChatController:]
  -[CKTranscriptExtensionViewController doneButtonPressedForChatController:]
  -[CKTranscriptExtensionViewController presentDetailsNavigationController:]
  -[CKTranscriptExtensionViewController .cxx_destruct]
  -[CKTranscriptExtensionViewController viewDidLoad]
  -[CKTranscriptExtensionViewController weakExtension]
  -[CKTranscriptExtensionViewController presentConversationWithMessageGUID:attachmentGUID:]
  -[CKTranscriptExtensionViewController setWeakExtension:]
  -[CKTranscriptExtensionViewController chatController:forwardComposition:]


CKOrganicImageLayoutRecipe : NSObject
 @property  double rotation
 @property  double offset
 @property  {CGSize=dd} targetSize
 @property  double overlap
 @property  BOOL wantsShadow
 @property  NSNumber *relativeGroupCenter
 @property  NSNumber *groupMaxX
 @property  NSString *groupIdentifier
 @property  BOOL isLastItem

  // instance methods
  -[CKOrganicImageLayoutRecipe setRotation:]
  -[CKOrganicImageLayoutRecipe setWantsShadow:]
  -[CKOrganicImageLayoutRecipe setGroupIdentifier:]
  -[CKOrganicImageLayoutRecipe overlap]
  -[CKOrganicImageLayoutRecipe targetSize]
  -[CKOrganicImageLayoutRecipe setTargetSize:]
  -[CKOrganicImageLayoutRecipe offset]
  -[CKOrganicImageLayoutRecipe .cxx_destruct]
  -[CKOrganicImageLayoutRecipe groupIdentifier]
  -[CKOrganicImageLayoutRecipe rotation]
  -[CKOrganicImageLayoutRecipe groupMaxX]
  -[CKOrganicImageLayoutRecipe isLastItem]
  -[CKOrganicImageLayoutRecipe setOverlap:]
  -[CKOrganicImageLayoutRecipe setRelativeGroupCenter:]
  -[CKOrganicImageLayoutRecipe setGroupMaxX:]
  -[CKOrganicImageLayoutRecipe setIsLastItem:]
  -[CKOrganicImageLayoutRecipe initWithRotation:offset:targetSize:overlap:wantsShadow:groupIdentifier:]
  -[CKOrganicImageLayoutRecipe setOffset:]
  -[CKOrganicImageLayoutRecipe wantsShadow]
  -[CKOrganicImageLayoutRecipe relativeGroupCenter]


CKOrganicImageLayoutGroupProvider : NSObject <CKTranscriptCustomLayoutGroupProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKOrganicImageLayoutGroupProvider _setLayoutRecipesForChatItems:]
  -[CKOrganicImageLayoutGroupProvider _startOffsetSpecForCount:]
  -[CKOrganicImageLayoutGroupProvider _targetSizeForChatItem:totalItemCount:]
  -[CKOrganicImageLayoutGroupProvider _orientationForChatItemSize:]
  -[CKOrganicImageLayoutGroupProvider _startRotationSpec]
  -[CKOrganicImageLayoutGroupProvider _rotationForChatItem:leftRotated:]
  -[CKOrganicImageLayoutGroupProvider _intersectSpecForIndex:count:]
  -[CKOrganicImageLayoutGroupProvider scalarForSize:count:]
  -[CKOrganicImageLayoutGroupProvider layoutGroupForDatasourceItems:environment:layoutItems:]


CKAvatarShadowClippingCollectionReusableView : UICollectionReusableView
 @property  UIImageView *imageView

  // class methods
  +[CKAvatarShadowClippingCollectionReusableView shadowSize]
  +[CKAvatarShadowClippingCollectionReusableView decorationViewKind]

  // instance methods
  -[CKAvatarShadowClippingCollectionReusableView imageView]
  -[CKAvatarShadowClippingCollectionReusableView .cxx_destruct]
  -[CKAvatarShadowClippingCollectionReusableView initWithFrame:]


CKBalloonTextView : UITextView <NSLayoutManagerDelegate, UIGestureRecognizerDelegate, UITextViewDelegate>
 @property  NSAttributedString *attributedText
 @property  UIPanGestureRecognizer *dragGestureRecognizer
 @property  {_NSRange=QQ} _selectedRange
 @property  <CKBalloonTextViewInteractionDelegate> *interactionDelegate
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  BOOL fakeSelected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKBalloonTextView textView]

  // instance methods
  -[CKBalloonTextView interactionDelegate]
  -[CKBalloonTextView setAttributedText:]
  -[CKBalloonTextView attributedText]
  -[CKBalloonTextView setInteractionDelegate:]
  -[CKBalloonTextView copy:]
  -[CKBalloonTextView gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[CKBalloonTextView _interactionStartedFromPreviewItemController:]
  -[CKBalloonTextView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CKBalloonTextView .cxx_destruct]
  -[CKBalloonTextView registerForEvents]
  -[CKBalloonTextView becomeFirstResponder]
  -[CKBalloonTextView sizeThatFits:textAlignmentInsets:isSingleLine:isReplyPreview:]
  -[CKBalloonTextView setFakeSelected:]
  -[CKBalloonTextView setBalloonTextSelectedRange:]
  -[CKBalloonTextView isFakeSelected]
  -[CKBalloonTextView tapGestureRecognizer]
  -[CKBalloonTextView resignFirstResponder]
  -[CKBalloonTextView gestureRecognizerShouldBegin:]
  -[CKBalloonTextView panGestureRecognized:]
  -[CKBalloonTextView _interactionStoppedFromPreviewItemController:]
  -[CKBalloonTextView setDragGestureRecognizer:]
  -[CKBalloonTextView dragGestureRecognizer]
  -[CKBalloonTextView set_selectedRange:]
  -[CKBalloonTextView _textWithHyphenationAppliedForAttributedText:]
  -[CKBalloonTextView _setFakeSelectionBackgroundColorForRange:]
  -[CKBalloonTextView _fakeSelectionBackgroundColor]
  -[CKBalloonTextView _setFakeSelectionBackgroundColor]
  -[CKBalloonTextView didMoveToWindow]
  -[CKBalloonTextView _removeFakeSelectionBackgroundColorForRange:]
  -[CKBalloonTextView _removeFakeSelectionBackgroundColor]
  -[CKBalloonTextView _updateFakeSelectionBackgroundColor:]
  -[CKBalloonTextView initReadonlyAndUnselectableWithFrame:textContainer:]
  -[CKBalloonTextView canBecomeFocused]
  -[CKBalloonTextView _selectedRange]
  -[CKBalloonTextView _showsEditMenu]


CKTextStorage : NSConcreteTextStorage
  // instance methods
  -[CKTextStorage processEditing]


CKCommunicationSafetyEDUScreen : OBWelcomeController

CKAvatarPickerLayout : UICollectionViewLayout
 @property  NSArray *attrCollection
 @property  NSArray *supplementaryAttrCollection
 @property  NSArray *cutoutAttrCollection
 @property  UICollectionViewLayoutAttributes *titleSupplementaryAttr
 @property  UICollectionViewLayoutAttributes *leftShadowDecorationAttr
 @property  UICollectionViewLayoutAttributes *rightShadowDecorationAttr
 @property  BOOL isInEditingMode
 @property  NSValue *editingFrameValue
 @property  unsigned long layoutMode
 @property  <CKAvatarPickerLayoutDelegate> *delegate

  // instance methods
  -[CKAvatarPickerLayout initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:]
  -[CKAvatarPickerLayout finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:]
  -[CKAvatarPickerLayout layoutAttributesForItemAtIndexPath:]
  -[CKAvatarPickerLayout initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:]
  -[CKAvatarPickerLayout prepareLayout]
  -[CKAvatarPickerLayout setLayoutMode:]
  -[CKAvatarPickerLayout collectionViewContentSize]
  -[CKAvatarPickerLayout .cxx_destruct]
  -[CKAvatarPickerLayout setDelegate:]
  -[CKAvatarPickerLayout isInEditingMode]
  -[CKAvatarPickerLayout _itemCount]
  -[CKAvatarPickerLayout initWithLayoutMode:]
  -[CKAvatarPickerLayout titleSupplementaryAttr]
  -[CKAvatarPickerLayout layoutAttributesForElementsInRect:]
  -[CKAvatarPickerLayout finalLayoutAttributesForDisappearingItemAtIndexPath:]
  -[CKAvatarPickerLayout initialLayoutAttributesForAppearingItemAtIndexPath:]
  -[CKAvatarPickerLayout delegate]
  -[CKAvatarPickerLayout setEditingFrameValue:]
  -[CKAvatarPickerLayout setAttrCollection:]
  -[CKAvatarPickerLayout setSupplementaryAttrCollection:]
  -[CKAvatarPickerLayout setTitleSupplementaryAttr:]
  -[CKAvatarPickerLayout supplementaryAttrCollection]
  -[CKAvatarPickerLayout _shouldShowContactNames]
  -[CKAvatarPickerLayout _shouldShowCutouts]
  -[CKAvatarPickerLayout _usesGroupAvatar]
  -[CKAvatarPickerLayout editingFrameValue]
  -[CKAvatarPickerLayout attrCollection]
  -[CKAvatarPickerLayout cutoutAttrCollection]
  -[CKAvatarPickerLayout _shouldShowTitle]
  -[CKAvatarPickerLayout _canShowShadowClipping]
  -[CKAvatarPickerLayout leftShadowDecorationAttr]
  -[CKAvatarPickerLayout rightShadowDecorationAttr]
  -[CKAvatarPickerLayout setCutoutAttrCollection:]
  -[CKAvatarPickerLayout _setupBannerLayout]
  -[CKAvatarPickerLayout _setupDefaultLayout]
  -[CKAvatarPickerLayout nameLayoutAttributesCollectionAtPoint:]
  -[CKAvatarPickerLayout invalidateLayoutAndCache]
  -[CKAvatarPickerLayout setLeftShadowDecorationAttr:]
  -[CKAvatarPickerLayout setRightShadowDecorationAttr:]
  -[CKAvatarPickerLayout layoutMode]
  -[CKAvatarPickerLayout shouldInvalidateLayoutForBoundsChange:]
  -[CKAvatarPickerLayout setIsInEditingMode:]
  -[CKAvatarPickerLayout finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:]
  -[CKAvatarPickerLayout wantsChromelessAppearance]
  -[CKAvatarPickerLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[CKAvatarPickerLayout layoutAttributesForDecorationViewOfKind:atIndexPath:]


CKEffectSelectionViewController : UIViewController <UICollectionViewDelegate>
 @property  UICollectionView *collectionView
 @property  UICollectionViewDiffableDataSource *dataSource
 @property  CKFullScreenEffectManager *fsem
 @property  NSArray *sendEffects
 @property  UIColor *labelColor
 @property  BOOL labelUsesDarkVibrancy
 @property  <CKEffectSelectionViewControllerDelegate> *delegate
 @property  NSString *selectedEffectIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKEffectSelectionViewController orderedEffectIdentifiers]

  // instance methods
  -[CKEffectSelectionViewController fsem]
  -[CKEffectSelectionViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[CKEffectSelectionViewController collectionView:didSelectItemAtIndexPath:]
  -[CKEffectSelectionViewController labelColor]
  -[CKEffectSelectionViewController setDataSource:]
  -[CKEffectSelectionViewController setSelectedEffectIdentifier:]
  -[CKEffectSelectionViewController selectedEffectIdentifier]
  -[CKEffectSelectionViewController setFsem:]
  -[CKEffectSelectionViewController .cxx_destruct]
  -[CKEffectSelectionViewController viewDidLoad]
  -[CKEffectSelectionViewController setDelegate:]
  -[CKEffectSelectionViewController becomeFirstResponder]
  -[CKEffectSelectionViewController dataSource]
  -[CKEffectSelectionViewController collectionView]
  -[CKEffectSelectionViewController setCollectionView:]
  -[CKEffectSelectionViewController maxCellHeight]
  -[CKEffectSelectionViewController delegate]
  -[CKEffectSelectionViewController effectImageForIndexPath:]
  -[CKEffectSelectionViewController sendEffects]
  -[CKEffectSelectionViewController setSendEffects:]
  -[CKEffectSelectionViewController effectTitleForIndexPath:]
  -[CKEffectSelectionViewController labelUsesDarkVibrancy]
  -[CKEffectSelectionViewController setLabelUsesDarkVibrancy:]
  -[CKEffectSelectionViewController setLabelColor:]


CKAudioProgressView : CKBalloonImageView
 @property  IMManualUpdater *displayUpdater
 @property  float progress
 @property  BOOL playing
 @property  BOOL played
 @property  BOOL color

  // class methods
  +[CKAudioProgressView progressForTime:duration:]
  +[CKAudioProgressView imageWithType:color:]
  +[CKAudioProgressView templateImageWithType:]
  +[CKAudioProgressView templateImageWithControlImage:]

  // instance methods
  -[CKAudioProgressView setPlaying:]
  -[CKAudioProgressView isPlaying]
  -[CKAudioProgressView isPlayed]
  -[CKAudioProgressView prepareForDisplay]
  -[CKAudioProgressView color]
  -[CKAudioProgressView .cxx_destruct]
  -[CKAudioProgressView prepareForDisplayIfNeeded]
  -[CKAudioProgressView progress]
  -[CKAudioProgressView setColor:]
  -[CKAudioProgressView sizeThatFits:]
  -[CKAudioProgressView initWithFrame:]
  -[CKAudioProgressView setProgress:]
  -[CKAudioProgressView displayUpdater]
  -[CKAudioProgressView __im_ff_systemImageAdoptionEnabled]
  -[CKAudioProgressView setDisplayUpdater:]
  -[CKAudioProgressView setNeedsPrepareForDisplay]
  -[CKAudioProgressView setPlayed:]


CKBusinessChatController : CKChatController
 @property  CKNavbarCanvasViewController *navbarCanvasViewController

  // instance methods
  -[CKBusinessChatController preferredStatusBarStyle]
  -[CKBusinessChatController .cxx_destruct]
  -[CKBusinessChatController _handleAddressBookChangedNotification:]
  -[CKBusinessChatController shouldListParticipantsInTitle]
  -[CKBusinessChatController setNavbarCanvasViewController:]
  -[CKBusinessChatController viewWillDisappear:]
  -[CKBusinessChatController viewDidLayoutSubviews]
  -[CKBusinessChatController navbarCanvasViewController]
  -[CKBusinessChatController setupBizNavBarIfNecessary]
  -[CKBusinessChatController cleanUpBizNavBarIfNecessary]
  -[CKBusinessChatController loadView]
  -[CKBusinessChatController _updateNavigationUI]
  -[CKBusinessChatController canShowBusinessOnboarding]


CKOrganicPendingMomentShareBalloonView : CKPendingMomentShareBalloonView
 @property  CKOrganicImageLayoutRecipe *layoutRecipe

  // instance methods
  -[CKOrganicPendingMomentShareBalloonView prepareForDisplay]
  -[CKOrganicPendingMomentShareBalloonView .cxx_destruct]
  -[CKOrganicPendingMomentShareBalloonView layoutRecipe]
  -[CKOrganicPendingMomentShareBalloonView prepareForReuse]
  -[CKOrganicPendingMomentShareBalloonView setLayoutRecipe:]


CKDetailsContactsLargeTextTableViewCell : CKDetailsContactsTableViewCell
 @property  NSLayoutConstraint *buttonsTopConstraint

  // class methods
  +[CKDetailsContactsLargeTextTableViewCell estimatedHeight]
  +[CKDetailsContactsLargeTextTableViewCell preferredHeight]

  // instance methods
  -[CKDetailsContactsLargeTextTableViewCell setShowsTUConversationStatus:]
  -[CKDetailsContactsLargeTextTableViewCell .cxx_destruct]
  -[CKDetailsContactsLargeTextTableViewCell _initConstraints]
  -[CKDetailsContactsLargeTextTableViewCell _updateVisibleButtons]
  -[CKDetailsContactsLargeTextTableViewCell _hideAllButtons]
  -[CKDetailsContactsLargeTextTableViewCell sizeThatFits:]
  -[CKDetailsContactsLargeTextTableViewCell initWithStyle:reuseIdentifier:]
  -[CKDetailsContactsLargeTextTableViewCell buttonsTopConstraint]
  -[CKDetailsContactsLargeTextTableViewCell setButtonsTopConstraint:]
  -[CKDetailsContactsLargeTextTableViewCell setShowsLocation:]
  -[CKDetailsContactsLargeTextTableViewCell configureWithViewModel:]


CKBrowserSelectionLabelAccessoryView : UIView
 @property  UIImageView *plusLView
 @property  UIImageView *plusDView

  // instance methods
  -[CKBrowserSelectionLabelAccessoryView initWithCoder:]
  -[CKBrowserSelectionLabelAccessoryView .cxx_destruct]
  -[CKBrowserSelectionLabelAccessoryView sizeThatFits:]
  -[CKBrowserSelectionLabelAccessoryView plusLView]
  -[CKBrowserSelectionLabelAccessoryView plusDView]
  -[CKBrowserSelectionLabelAccessoryView initWithLabelAccessoryType:]
  -[CKBrowserSelectionLabelAccessoryView initWithFrame:]
  -[CKBrowserSelectionLabelAccessoryView setPlusLView:]
  -[CKBrowserSelectionLabelAccessoryView setPlusDView:]


CKTranscriptCollectionViewLayout : UICollectionViewLayout <CKTranscriptLayoutCompatibility>
 @property  NSArray *layoutAttributes
 @property  NSArray *associatedLayoutAttributes
 @property  NSArray *decorationLayoutAttributes
 @property  NSArray *oldAssociatedLayoutAttributes
 @property  NSMutableIndexSet *insertedAssociatedLayoutAttributes
 @property  NSDate *lastTouchTime
 @property  BOOL hasLoadMore
 @property  NSMutableDictionary *initialParentLayoutAttributes
 @property  NSMutableDictionary *finalParentVerticalOffsets
 @property  BOOL coalesceInvalidations
 @property  BOOL sizeCategoryIsAccessibilitySizeCategory
 @property  IMScheduledUpdater *dynamicsUpdater
 @property  double anchorYPosition
 @property  {CGPoint=dd} targetContentOffset
 @property  BOOL holdingBoundsInvalidation
 @property  BOOL useInitialLayoutAttributesForRotation
 @property  BOOL useOverlayLayout
 @property  BOOL inlineAnimatingOut
 @property  unsigned char chatStyle
 @property  BOOL isResting
 @property  {CGSize=dd} sizeForRotation
 @property  NSIndexSet *indicesOfChatItemsToBeRemovedWithoutFading
 @property  NSIndexSet *indicesOfChatItemsToBeInsertedWithoutFading
 @property  NSIndexSet *indicesOfReplyChatItemsToBeInserted
 @property  BOOL disableDynamicsWhileScrolling
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKTranscriptCollectionViewLayout layoutAttributesClass]
  +[CKTranscriptCollectionViewLayout translateLayoutIndexToEffectIndex:]
  +[CKTranscriptCollectionViewLayout bottomTranscriptSpaceWithLastChatItem:]

  // instance methods
  -[CKTranscriptCollectionViewLayout _applyTargetFrameOffsetsForLayoutAttributesIfNeeded:]
  -[CKTranscriptCollectionViewLayout _kickDynamicsIfNeeded]
  -[CKTranscriptCollectionViewLayout disableDynamicsWhileScrolling]
  -[CKTranscriptCollectionViewLayout setChatStyle:]
  -[CKTranscriptCollectionViewLayout lastTouchTime]
  -[CKTranscriptCollectionViewLayout handleInvalidCaseForChatItem:withPrevChatItem:]
  -[CKTranscriptCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[CKTranscriptCollectionViewLayout updateContentSize]
  -[CKTranscriptCollectionViewLayout setSizeForRotation:]
  -[CKTranscriptCollectionViewLayout indicesOfChatItemsToBeRemovedWithoutFading]
  -[CKTranscriptCollectionViewLayout setLastTouchTime:]
  -[CKTranscriptCollectionViewLayout prepareLayout]
  -[CKTranscriptCollectionViewLayout _dealloc]
  -[CKTranscriptCollectionViewLayout collectionViewContentSize]
  -[CKTranscriptCollectionViewLayout indicesOfChatItemsToBeInsertedWithoutFading]
  -[CKTranscriptCollectionViewLayout .cxx_destruct]
  -[CKTranscriptCollectionViewLayout clearParentInitialIndexesAndFinalOffsets]
  -[CKTranscriptCollectionViewLayout setInitialIndex:forParentOfAssociatedItemInsertedAtIndex:]
  -[CKTranscriptCollectionViewLayout dynamicsUpdater]
  -[CKTranscriptCollectionViewLayout insertedAssociatedLayoutAttributes]
  -[CKTranscriptCollectionViewLayout sizeCategoryDidChange:]
  -[CKTranscriptCollectionViewLayout isUsingInitialLayoutAttributesForRotation]
  -[CKTranscriptCollectionViewLayout nextMessageIsReplyForIndex:]
  -[CKTranscriptCollectionViewLayout sizeForRotation]
  -[CKTranscriptCollectionViewLayout setFinalParentVerticalOffsets:]
  -[CKTranscriptCollectionViewLayout invalidateDisplayLink]
  -[CKTranscriptCollectionViewLayout reloadLayout]
  -[CKTranscriptCollectionViewLayout finalParentVerticalOffsets]
  -[CKTranscriptCollectionViewLayout isResting]
  -[CKTranscriptCollectionViewLayout setUseOverlayLayout:]
  -[CKTranscriptCollectionViewLayout _convertScreenFrameToLocalFrame:]
  -[CKTranscriptCollectionViewLayout setNeedsDynamicsUpdate]
  -[CKTranscriptCollectionViewLayout setHoldingBoundsInvalidation:]
  -[CKTranscriptCollectionViewLayout setUseInitialLayoutAttributesForRotation:]
  -[CKTranscriptCollectionViewLayout _applyAttributeUpdatesWithTargetMap:layoutAttributes:updateBlock:]
  -[CKTranscriptCollectionViewLayout setDecorationLayoutAttributes:]
  -[CKTranscriptCollectionViewLayout init]
  -[CKTranscriptCollectionViewLayout effectIndexForDecorationViewAtIndex:]
  -[CKTranscriptCollectionViewLayout isInlineAnimatingOut]
  -[CKTranscriptCollectionViewLayout updateAttributesForAnchorYChangeWithAttributes:]
  -[CKTranscriptCollectionViewLayout _configureThreadGroupsForAttributes:outMaxYAnchorAttribute:forVisibleBounds:]
  -[CKTranscriptCollectionViewLayout targetContentOffset]
  -[CKTranscriptCollectionViewLayout setDisableDynamicsWhileScrolling:]
  -[CKTranscriptCollectionViewLayout initialParentLayoutAttributes]
  -[CKTranscriptCollectionViewLayout setInlineAnimatingOut:]
  -[CKTranscriptCollectionViewLayout decorationLayoutAttributes]
  -[CKTranscriptCollectionViewLayout updateAttributesForTargetContentOffsetChangeWithAttributes:]
  -[CKTranscriptCollectionViewLayout prepareLayoutForRotisserieScrolling]
  -[CKTranscriptCollectionViewLayout reduceMotionSettingChanged:]
  -[CKTranscriptCollectionViewLayout setInitialParentLayoutAttributes:]
  -[CKTranscriptCollectionViewLayout layoutAttributesForElementsInRect:]
  -[CKTranscriptCollectionViewLayout setOldAssociatedLayoutAttributes:]
  -[CKTranscriptCollectionViewLayout setHasLoadMore:]
  -[CKTranscriptCollectionViewLayout oldAssociatedLayoutAttributes]
  -[CKTranscriptCollectionViewLayout _applyCurrentFrameOffsetsForLayoutAttributesIfNeeded:]
  -[CKTranscriptCollectionViewLayout displayLinkFired:]
  -[CKTranscriptCollectionViewLayout indicesOfReplyChatItemsToBeInserted]
  -[CKTranscriptCollectionViewLayout finalLayoutAttributesForDisappearingItemAtIndexPath:]
  -[CKTranscriptCollectionViewLayout hasLoadMore]
  -[CKTranscriptCollectionViewLayout setAssociatedLayoutAttributes:]
  -[CKTranscriptCollectionViewLayout setIndicesOfChatItemsToBeRemovedWithoutFading:]
  -[CKTranscriptCollectionViewLayout setLayoutAttributes:]
  -[CKTranscriptCollectionViewLayout initialLayoutAttributesForAppearingItemAtIndexPath:]
  -[CKTranscriptCollectionViewLayout setSizeCategoryIsAccessibilitySizeCategory:]
  -[CKTranscriptCollectionViewLayout setIndicesOfChatItemsToBeInsertedWithoutFading:]
  -[CKTranscriptCollectionViewLayout bezierPointForPercentage:anchor1:anchor2:control1:control2:]
  -[CKTranscriptCollectionViewLayout beginHoldingDynamicsUpdatesForKey:]
  -[CKTranscriptCollectionViewLayout needsAdditionalBracketPaddingForChatItem:prevChatItem:]
  -[CKTranscriptCollectionViewLayout chatStyle]
  -[CKTranscriptCollectionViewLayout setAnchorYPosition:]
  -[CKTranscriptCollectionViewLayout nextItemIsOriginatorWithRepliesForIndex:]
  -[CKTranscriptCollectionViewLayout layoutAttributes]
  -[CKTranscriptCollectionViewLayout setIndicesOfReplyChatItemsToBeInserted:]
  -[CKTranscriptCollectionViewLayout updateFrames]
  -[CKTranscriptCollectionViewLayout dealloc]
  -[CKTranscriptCollectionViewLayout endHoldingDynamicsUpdatesForKey:]
  -[CKTranscriptCollectionViewLayout reloadData]
  -[CKTranscriptCollectionViewLayout setDynamicsUpdater:]
  -[CKTranscriptCollectionViewLayout isUsingOverlayLayout]
  -[CKTranscriptCollectionViewLayout _setEasingUpForTesting:]
  -[CKTranscriptCollectionViewLayout _getEasingUpForTesting]
  -[CKTranscriptCollectionViewLayout _setVisibleBoundsForTesting:]
  -[CKTranscriptCollectionViewLayout _setDisplayLinkForTesting:]
  -[CKTranscriptCollectionViewLayout coalesceInvalidations]
  -[CKTranscriptCollectionViewLayout setCoalesceInvalidations:]
  -[CKTranscriptCollectionViewLayout previousReplyCount:isOccludedForAssociatedFrame:outMaxY:]
  -[CKTranscriptCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[CKTranscriptCollectionViewLayout updateAssociatedLayoutAttributesIfNecessary]
  -[CKTranscriptCollectionViewLayout _visibleRectInsectsForMaxYAnchorLayoutAttribute:forVisibleBounds:]
  -[CKTranscriptCollectionViewLayout isHoldingBoundsInvalidation]
  -[CKTranscriptCollectionViewLayout invalidateLayoutWithContext:]
  -[CKTranscriptCollectionViewLayout setInsertedAssociatedLayoutAttributes:]
  -[CKTranscriptCollectionViewLayout setVerticalOffset:forParentOfAssociatedItemDeletedAtIndex:]
  -[CKTranscriptCollectionViewLayout setTargetContentOffset:]
  -[CKTranscriptCollectionViewLayout associatedLayoutAttributes]
  -[CKTranscriptCollectionViewLayout layoutAttributesForDecorationViewOfKind:atIndexPath:]
  -[CKTranscriptCollectionViewLayout sizeCategoryIsAccessibilitySizeCategory]
  -[CKTranscriptCollectionViewLayout anchorYPosition]


CKCommunicationSafetyEDUScreenTwo : CKCommunicationSafetyEDUScreen
 @property  BOOL isYoungAgeGroup
 @property  BOOL isSending
 @property  NSIndexPath *indexPath
 @property  CKComposition *composition
 @property  NSSet *sensitiveMediaObjects
 @property  NSArray *identifiersOfShelvedImages
 @property  <CKCommunicationSafetyEDUScreenProtocol> *delegate

  // instance methods
  -[CKCommunicationSafetyEDUScreenTwo isSending]
  -[CKCommunicationSafetyEDUScreenTwo composition]
  -[CKCommunicationSafetyEDUScreenTwo .cxx_destruct]
  -[CKCommunicationSafetyEDUScreenTwo setDelegate:]
  -[CKCommunicationSafetyEDUScreenTwo addButtonsToTray]
  -[CKCommunicationSafetyEDUScreenTwo _notNowButtonPressed]
  -[CKCommunicationSafetyEDUScreenTwo _acceptButtonPressed]
  -[CKCommunicationSafetyEDUScreenTwo isYoungAgeGroup]
  -[CKCommunicationSafetyEDUScreenTwo indexPath]
  -[CKCommunicationSafetyEDUScreenTwo initSecondReceivingEDUScreenWithItemIndexPath:]
  -[CKCommunicationSafetyEDUScreenTwo _messageButtonPressed]
  -[CKCommunicationSafetyEDUScreenTwo sensitiveMediaObjects]
  -[CKCommunicationSafetyEDUScreenTwo identifiersOfShelvedImages]
  -[CKCommunicationSafetyEDUScreenTwo delegate]
  -[CKCommunicationSafetyEDUScreenTwo initSecondSendingEDUScreenWithComposition:withSensitiveMediaObjects:withIdentifiersOfShelvedImages:]
  -[CKCommunicationSafetyEDUScreenTwo configureSecondSendScreen]
  -[CKCommunicationSafetyEDUScreenTwo configureSecondReceiveScreen]


CKSearchCollectionView : UICollectionView
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  BOOL _ck_editing
 @property  BOOL suppressDatasourceUpdates
 @property  BOOL lockContentOffset

  // instance methods
  -[CKSearchCollectionView setContentOffset:]
  -[CKSearchCollectionView dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:]
  -[CKSearchCollectionView dequeueReusableCellWithReuseIdentifier:forIndexPath:]
  -[CKSearchCollectionView setDataSource:]
  -[CKSearchCollectionView marginInsets]
  -[CKSearchCollectionView suppressDatasourceUpdates]
  -[CKSearchCollectionView setSuppressDatasourceUpdates:]
  -[CKSearchCollectionView setMarginInsets:]
  -[CKSearchCollectionView _ck_isEditing]
  -[CKSearchCollectionView lockContentOffset]
  -[CKSearchCollectionView _ck_setEditing:]
  -[CKSearchCollectionView setLockContentOffset:]


CKSearchViewController : CKScrollViewController <CKSearchResultsTitleHeaderCellDelegate, UIContextMenuInteractionDelegate, UICollectionViewDragDelegate, UISearchResultsUpdating, UICollectionViewDelegate, CKSearchControllerDelegate>
 @property  NSArray *searchControllers
 @property  NSString *searchText
 @property  BOOL searchInProgress
 @property  CKSearchCollectionView *collectionView
 @property  UICollectionViewDiffableDataSource *dataSource
 @property  UICollectionViewCompositionalLayout *collectionViewLayout
 @property  BOOL isInitialLoad
 @property  @? performAfterInitialLoadBlock
 @property  NSMutableSet *searchCompleteControllerSet
 @property  IMTimingCollection *timingCollection
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  <CKContainerSearchControllerDelegate> *delegate
 @property  unsigned long mode
 @property  BOOL dismissingSearchController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKSearchViewController collectionView:canFocusItemAtIndexPath:]
  -[CKSearchViewController collectionView:itemsForBeginningDragSession:atIndexPath:]
  -[CKSearchViewController contextMenuInteraction:previewForHighlightingMenuWithConfiguration:]
  -[CKSearchViewController contextMenuInteraction:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[CKSearchViewController collectionView:didSelectItemAtIndexPath:]
  -[CKSearchViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[CKSearchViewController collectionView:shouldSelectItemAtIndexPath:]
  -[CKSearchViewController scrollView]
  -[CKSearchViewController setDismissingSearchController:]
  -[CKSearchViewController searchWithText:]
  -[CKSearchViewController setDataSource:]
  -[CKSearchViewController parentMarginInsetsForSearchController:]
  -[CKSearchViewController updateSearchResultsForSearchController:]
  -[CKSearchViewController findNext]
  -[CKSearchViewController contextMenuInteraction:configurationForMenuAtLocation:]
  -[CKSearchViewController contextMenuInteraction]
  -[CKSearchViewController isInitialLoad]
  -[CKSearchViewController .cxx_destruct]
  -[CKSearchViewController containerTraitCollectionForController:]
  -[CKSearchViewController collectionViewLayout]
  -[CKSearchViewController searchController:cellForResult:]
  -[CKSearchViewController setContextMenuInteraction:]
  -[CKSearchViewController searchEnded]
  -[CKSearchViewController searchText]
  -[CKSearchViewController setDelegate:]
  -[CKSearchViewController dataSource]
  -[CKSearchViewController cancelCurrentQuery]
  -[CKSearchViewController collectionView]
  -[CKSearchViewController setCollectionView:]
  -[CKSearchViewController sizeThatFits:]
  -[CKSearchViewController __im_ff_isInterstellarEnabled]
  -[CKSearchViewController setIsInitialLoad:]
  -[CKSearchViewController setSearchText:]
  -[CKSearchViewController setCollectionViewLayout:]
  -[CKSearchViewController viewDidLayoutSubviews]
  -[CKSearchViewController scrollViewWillBeginDragging:]
  -[CKSearchViewController viewWillAppear:]
  -[CKSearchViewController containerWidthForController:]
  -[CKSearchViewController _currentModeIsDetails]
  -[CKSearchViewController searchController:requestsPresentationOfShareController:atRect:]
  -[CKSearchViewController cellForItemInCollectionView:atIndexPath:withIdentifier:]
  -[CKSearchViewController conversationSearchHasResult]
  -[CKSearchViewController delegate]
  -[CKSearchViewController initWithSearchControllerClasses:]
  -[CKSearchViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKSearchViewController searchController:conversationForChatGUID:]
  -[CKSearchViewController searchControllerContentsDidChange:]
  -[CKSearchViewController deleteMessageItem:]
  -[CKSearchViewController setMode:]
  -[CKSearchViewController dealloc]
  -[CKSearchViewController contextMenuInteractionShouldBegin:]
  -[CKSearchViewController reloadData]
  -[CKSearchViewController searchResultsTitleCellShowAllButtonTapped:]
  -[CKSearchViewController setSearchCompleteControllerSet:]
  -[CKSearchViewController layoutSectionForSection:withEnvironment:]
  -[CKSearchViewController searchInProgress]
  -[CKSearchViewController cellForSupplementryItemInCollectionView:atIndexPath:forSupplementryViewKind:]
  -[CKSearchViewController performAfterInitialLoadBlock]
  -[CKSearchViewController setPerformAfterInitialLoadBlock:]
  -[CKSearchViewController findPrevious]
  -[CKSearchViewController _shouldHideShowAllButtonForController:]
  -[CKSearchViewController _hasSelectedItemAtIndexPath:]
  -[CKSearchViewController rowIndexFindNextForIndex:numberOfTotalItems:]
  -[CKSearchViewController shouldInsetResultsForSearchController:]
  -[CKSearchViewController widthForDeterminingAvatarVisibility]
  -[CKSearchViewController setTimingCollection:]
  -[CKSearchViewController _selectItemForFindAtIndexPath:]
  -[CKSearchViewController rowIndexFindPreviousForIndex:numberOfTotalItems:]
  -[CKSearchViewController searchController:requestsPresentationOfAlertController:atRect:]
  -[CKSearchViewController loadView]
  -[CKSearchViewController _layoutSectionForController:withEnvironment:]
  -[CKSearchViewController dismissingSearchController]
  -[CKSearchViewController _isInternalInstall]
  -[CKSearchViewController timingCollection]
  -[CKSearchViewController searchController:requestsItemDeletionAtIndexPath:]
  -[CKSearchViewController searchControllers]
  -[CKSearchViewController setSearchControllers:]
  -[CKSearchViewController _searchImmediately]
  -[CKSearchViewController deleteTransferGUID:]
  -[CKSearchViewController mode]
  -[CKSearchViewController layoutSectionForController:withEnvironment:]
  -[CKSearchViewController setSearchInProgress:]
  -[CKSearchViewController searchCompleteControllerSet]
  -[CKSearchViewController globalLayoutConfiguration]
  -[CKSearchViewController viewDidDisappear:]
  -[CKSearchViewController _registerCells]
  -[CKSearchViewController _identifiersToAppendForResults:]
  -[CKSearchViewController _searchResultsHeaderClass]
  -[CKSearchViewController _needsIndexing]
  -[CKSearchViewController _configureIndexingCell:]
  -[CKSearchViewController _searchResultHeaderButtonTapped:]
  -[CKSearchViewController _newSnapshotForCurrentControllerState]
  -[CKSearchViewController headerBoundryItemsForController:withEnvironment:]
  -[CKSearchViewController footerBoundryItemsForController:withEnvironment:]


CKAcknowledgmentGlyphImageView : UIView
 @property  UIImage *image

  // instance methods
  -[CKAcknowledgmentGlyphImageView image]
  -[CKAcknowledgmentGlyphImageView initWithImage:]
  -[CKAcknowledgmentGlyphImageView .cxx_destruct]
  -[CKAcknowledgmentGlyphImageView sizeToFit]
  -[CKAcknowledgmentGlyphImageView setImage:]


CKAcknowledgmentGlyphView : UIView
 @property  long long acknowledgmentType
 @property  {CGPoint=dd} glyphOffset
 @property  double animationDuration
 @property  UIColor *glyphColor

  // class methods
  +[CKAcknowledgmentGlyphView glyphViewForAcknowledgmentType:glyphColor:]
  +[CKAcknowledgmentGlyphView cacheGlyphView:]
  +[CKAcknowledgmentGlyphView viewCache]

  // instance methods
  -[CKAcknowledgmentGlyphView acknowledgmentType]
  -[CKAcknowledgmentGlyphView animationDuration]
  -[CKAcknowledgmentGlyphView setGlyphColor:]
  -[CKAcknowledgmentGlyphView animateWithBeginTime:completionDelay:completion:]
  -[CKAcknowledgmentGlyphView .cxx_destruct]
  -[CKAcknowledgmentGlyphView glyphColor]
  -[CKAcknowledgmentGlyphView glyphOffset]
  -[CKAcknowledgmentGlyphView initWithFrame:color:]


CKSimpleAcknowledgementGlyphView : CKAcknowledgmentGlyphView
 @property  CKAcknowledgmentGlyphImageView *glyph

  // instance methods
  -[CKSimpleAcknowledgementGlyphView animationDuration]
  -[CKSimpleAcknowledgementGlyphView setGlyphColor:]
  -[CKSimpleAcknowledgementGlyphView .cxx_destruct]
  -[CKSimpleAcknowledgementGlyphView layoutSubviews]
  -[CKSimpleAcknowledgementGlyphView setGlyph:]
  -[CKSimpleAcknowledgementGlyphView glyphOffset]
  -[CKSimpleAcknowledgementGlyphView glyph]
  -[CKSimpleAcknowledgementGlyphView initWithFrame:color:]
  -[CKSimpleAcknowledgementGlyphView glyphImageForType:color:]


CKHeartAcknowledgmentGlyphView : CKSimpleAcknowledgementGlyphView
  // instance methods
  -[CKHeartAcknowledgmentGlyphView acknowledgmentType]
  -[CKHeartAcknowledgmentGlyphView animateWithBeginTime:completionDelay:completion:]
  -[CKHeartAcknowledgmentGlyphView glyphOffset]


CKThumbsUpAcknowledgmentGlyphView : CKSimpleAcknowledgementGlyphView
 @property  CALayer *animationLayer
 @property  CALayer *contentLayer

  // instance methods
  -[CKThumbsUpAcknowledgmentGlyphView acknowledgmentType]
  -[CKThumbsUpAcknowledgmentGlyphView animationDuration]
  -[CKThumbsUpAcknowledgmentGlyphView setGlyphColor:]
  -[CKThumbsUpAcknowledgmentGlyphView animateWithBeginTime:completionDelay:completion:]
  -[CKThumbsUpAcknowledgmentGlyphView .cxx_destruct]
  -[CKThumbsUpAcknowledgmentGlyphView contentLayer]
  -[CKThumbsUpAcknowledgmentGlyphView animationLayer]
  -[CKThumbsUpAcknowledgmentGlyphView setAnimationLayer:]
  -[CKThumbsUpAcknowledgmentGlyphView setContentLayer:]


CKThumbsDownAcknowledgmentGlyphView : CKSimpleAcknowledgementGlyphView
 @property  CALayer *animationLayer
 @property  CALayer *contentLayer

  // instance methods
  -[CKThumbsDownAcknowledgmentGlyphView acknowledgmentType]
  -[CKThumbsDownAcknowledgmentGlyphView animationDuration]
  -[CKThumbsDownAcknowledgmentGlyphView setGlyphColor:]
  -[CKThumbsDownAcknowledgmentGlyphView animateWithBeginTime:completionDelay:completion:]
  -[CKThumbsDownAcknowledgmentGlyphView .cxx_destruct]
  -[CKThumbsDownAcknowledgmentGlyphView contentLayer]
  -[CKThumbsDownAcknowledgmentGlyphView animationLayer]
  -[CKThumbsDownAcknowledgmentGlyphView setAnimationLayer:]
  -[CKThumbsDownAcknowledgmentGlyphView setContentLayer:]


CKHaAcknowledgmentGlyphView : CKSimpleAcknowledgementGlyphView
  // instance methods
  -[CKHaAcknowledgmentGlyphView acknowledgmentType]
  -[CKHaAcknowledgmentGlyphView animateWithBeginTime:completionDelay:completion:]
  -[CKHaAcknowledgmentGlyphView glyphOffset]


CKEnglishHaAcknowledgmentGlyphView : CKAcknowledgmentGlyphView
 @property  CKAcknowledgmentGlyphImageView *h1
 @property  CKAcknowledgmentGlyphImageView *a1
 @property  CKAcknowledgmentGlyphImageView *h2
 @property  CKAcknowledgmentGlyphImageView *a2

  // instance methods
  -[CKEnglishHaAcknowledgmentGlyphView h1]
  -[CKEnglishHaAcknowledgmentGlyphView a1]
  -[CKEnglishHaAcknowledgmentGlyphView h2]
  -[CKEnglishHaAcknowledgmentGlyphView a2]
  -[CKEnglishHaAcknowledgmentGlyphView setH1:]
  -[CKEnglishHaAcknowledgmentGlyphView setA1:]
  -[CKEnglishHaAcknowledgmentGlyphView setH2:]
  -[CKEnglishHaAcknowledgmentGlyphView setA2:]
  -[CKEnglishHaAcknowledgmentGlyphView acknowledgmentType]
  -[CKEnglishHaAcknowledgmentGlyphView animationDuration]
  -[CKEnglishHaAcknowledgmentGlyphView setGlyphColor:]
  -[CKEnglishHaAcknowledgmentGlyphView animateWithBeginTime:completionDelay:completion:]
  -[CKEnglishHaAcknowledgmentGlyphView .cxx_destruct]
  -[CKEnglishHaAcknowledgmentGlyphView layoutSubviews]
  -[CKEnglishHaAcknowledgmentGlyphView glyphOffset]
  -[CKEnglishHaAcknowledgmentGlyphView initWithFrame:color:]


CKExclamationAcknowledgmentGlyphView : CKAcknowledgmentGlyphView
 @property  CKAcknowledgmentGlyphImageView *leftExclamationGlyph
 @property  CKAcknowledgmentGlyphImageView *rightExclamationGlyph

  // instance methods
  -[CKExclamationAcknowledgmentGlyphView acknowledgmentType]
  -[CKExclamationAcknowledgmentGlyphView animationDuration]
  -[CKExclamationAcknowledgmentGlyphView setGlyphColor:]
  -[CKExclamationAcknowledgmentGlyphView animateWithBeginTime:completionDelay:completion:]
  -[CKExclamationAcknowledgmentGlyphView .cxx_destruct]
  -[CKExclamationAcknowledgmentGlyphView layoutSubviews]
  -[CKExclamationAcknowledgmentGlyphView glyphOffset]
  -[CKExclamationAcknowledgmentGlyphView initWithFrame:color:]
  -[CKExclamationAcknowledgmentGlyphView leftExclamationGlyph]
  -[CKExclamationAcknowledgmentGlyphView setLeftExclamationGlyph:]
  -[CKExclamationAcknowledgmentGlyphView setRightExclamationGlyph:]
  -[CKExclamationAcknowledgmentGlyphView rightExclamationGlyph]


CKQuestionAcknowledgmentGlyphView : CKAcknowledgmentGlyphView
 @property  CKAcknowledgmentGlyphImageView *glyph
 @property  CKAcknowledgmentGlyphImageView *dot

  // instance methods
  -[CKQuestionAcknowledgmentGlyphView dot]
  -[CKQuestionAcknowledgmentGlyphView acknowledgmentType]
  -[CKQuestionAcknowledgmentGlyphView animationDuration]
  -[CKQuestionAcknowledgmentGlyphView setGlyphColor:]
  -[CKQuestionAcknowledgmentGlyphView animateWithBeginTime:completionDelay:completion:]
  -[CKQuestionAcknowledgmentGlyphView setDot:]
  -[CKQuestionAcknowledgmentGlyphView .cxx_destruct]
  -[CKQuestionAcknowledgmentGlyphView layoutSubviews]
  -[CKQuestionAcknowledgmentGlyphView setGlyph:]
  -[CKQuestionAcknowledgmentGlyphView glyphOffset]
  -[CKQuestionAcknowledgmentGlyphView glyph]
  -[CKQuestionAcknowledgmentGlyphView initWithFrame:color:]


CKPluginMessageStatusCell : CKTranscriptMultilineLabelCell
 @property  UIImageView *imageView
 @property  NSString *balloonBundleID
 @property  IMBalloonPluginDataSource *dataSource
 @property  UIView *previousPluginSnapshot

  // instance methods
  -[CKPluginMessageStatusCell imageView]
  -[CKPluginMessageStatusCell setDataSource:]
  -[CKPluginMessageStatusCell setBalloonBundleID:]
  -[CKPluginMessageStatusCell .cxx_destruct]
  -[CKPluginMessageStatusCell dataSource]
  -[CKPluginMessageStatusCell prepareForReuse]
  -[CKPluginMessageStatusCell initWithFrame:]
  -[CKPluginMessageStatusCell dealloc]
  -[CKPluginMessageStatusCell setImageView:]
  -[CKPluginMessageStatusCell configureForChatItem:context:]
  -[CKPluginMessageStatusCell setPreviousPluginSnapshot:]
  -[CKPluginMessageStatusCell _updateBalloonPluginIconImage]
  -[CKPluginMessageStatusCell previousPluginSnapshot]
  -[CKPluginMessageStatusCell balloonBundleID]
  -[CKPluginMessageStatusCell performInsertion:]
  -[CKPluginMessageStatusCell layoutSubviewsForAlignmentContents]


CKParticipantChangeChatItem : CKMultilineStampChatItem
  // instance methods
  -[CKParticipantChangeChatItem changeType]
  -[CKParticipantChangeChatItem sender]
  -[CKParticipantChangeChatItem handle]
  -[CKParticipantChangeChatItem loadTranscriptText]
  -[CKParticipantChangeChatItem activeTelephonyConversationUUID]


CKTranscriptReplayEffectCell : CKTranscriptStatusCell

CKTranscriptStatusCell : CKTranscriptLabelCell
 @property  NSAttributedString *attributedButtonText
 @property  UIButton *statusButton
 @property  BOOL buttonAlignmentRelativeToContent
 @property  double prevBalloonWidth
 @property  BOOL shouldHideDuringDarkFSM

  // class methods
  +[CKTranscriptStatusCell statusButton]
  +[CKTranscriptStatusCell transitionFromView:toView:duration:options:completion:]
  +[CKTranscriptStatusCell zoomAnimation:completion:]

  // instance methods
  -[CKTranscriptStatusCell clearFilters]
  -[CKTranscriptStatusCell setOrientation:]
  -[CKTranscriptStatusCell prevBalloonWidth]
  -[CKTranscriptStatusCell statusButton]
  -[CKTranscriptStatusCell buttonAlignmentRelativeToContent]
  -[CKTranscriptStatusCell performReload:completion:]
  -[CKTranscriptStatusCell performRemoval:]
  -[CKTranscriptStatusCell setAttributedButtonText:]
  -[CKTranscriptStatusCell setButtonAlignmentRelativeToContent:]
  -[CKTranscriptStatusCell .cxx_destruct]
  -[CKTranscriptStatusCell attributedButtonText]
  -[CKTranscriptStatusCell shouldHideDuringDarkFSM]
  -[CKTranscriptStatusCell prepareForReuse]
  -[CKTranscriptStatusCell addFilter:]
  -[CKTranscriptStatusCell configureForChatItem:context:]
  -[CKTranscriptStatusCell setPrevBalloonWidth:]
  -[CKTranscriptStatusCell setStatusButton:]
  -[CKTranscriptStatusCell performInsertion:]
  -[CKTranscriptStatusCell layoutSubviewsForAlignmentContents]


CKUnreadCountLabelCell : CKTranscriptMultilineLabelCell
 @property  UIView *leftSeparator
 @property  UIView *rightSeparator

  // instance methods
  -[CKUnreadCountLabelCell .cxx_destruct]
  -[CKUnreadCountLabelCell initWithFrame:]
  -[CKUnreadCountLabelCell leftSeparator]
  -[CKUnreadCountLabelCell setLeftSeparator:]
  -[CKUnreadCountLabelCell rightSeparator]
  -[CKUnreadCountLabelCell setRightSeparator:]
  -[CKUnreadCountLabelCell layoutSubviewsForContents]


CKBalloonImageView : UIView
 @property  UIImage *image
 @property  UIImage *invisibleInkEffectImage
 @property  BOOL imageHidden
 @property  NSString *stickerAccessibilityDescription

  // instance methods
  -[CKBalloonImageView setInvisibleInkEffectImage:]
  -[CKBalloonImageView image]
  -[CKBalloonImageView .cxx_destruct]
  -[CKBalloonImageView setFrame:]
  -[CKBalloonImageView layoutSubviews]
  -[CKBalloonImageView stickerAccessibilityDescription]
  -[CKBalloonImageView sizeThatFits:]
  -[CKBalloonImageView prepareForReuse]
  -[CKBalloonImageView setImageHidden:]
  -[CKBalloonImageView invisibleInkEffectImage]
  -[CKBalloonImageView setImage:]
  -[CKBalloonImageView setStickerAccessibilityDescription:]
  -[CKBalloonImageView setBounds:]
  -[CKBalloonImageView alignmentRectInsets]
  -[CKBalloonImageView imageHidden]


CKInteractiveBalloonImageView : CKBalloonImageView
  // instance methods
  -[CKInteractiveBalloonImageView hitTest:withEvent:]


CKBrowserDragController : UIViewController
 @property  <CKBrowserDragControllerDelegate> *delegate

  // instance methods
  -[CKBrowserDragController initWithView:]
  -[CKBrowserDragController .cxx_destruct]
  -[CKBrowserDragController setDelegate:]
  -[CKBrowserDragController delegate]


CKFaceTimeUtilities : NSObject
  // class methods
  +[CKFaceTimeUtilities isGroupFaceTimeSupported]
  +[CKFaceTimeUtilities isFaceTimeAudioAvailable:]
  +[CKFaceTimeUtilities isDirectTelephonyAvailable]
  +[CKFaceTimeUtilities isTelephonyAvailable]
  +[CKFaceTimeUtilities isFaceTimeVideoAvailable:]
  +[CKFaceTimeUtilities showCallControlsForConversation:]


CKMessagesController : UISplitViewController <UISplitViewControllerDelegate, CKCoreChatControllerDelegate, UINavigationControllerDelegate, CKChatControllerDelegate, CKComposeChatControllerDelegate, CKBrowserViewControllerStoreSendDelegate, CKOnboardingControllerDelegate, CKAlertUtilitiesProtocol, CKAlertSuppressionContextsProviding, CKConversationListControllerDelegate>
 @property  UIViewController<CKConversationListControllerProtocol> *conversationListController
 @property  CKCoreChatController *chatController
 @property  CKCoreChatController *composeChatController
 @property  CKConversation *currentConversation
 @property  CKOnboardingController *onboardingController
 @property  UINavigationController *conversationListNavigationController
 @property  UINavigationController *chatNavigationController
 @property  UINavigationController *composeChatNavigationController
 @property  CKMacToolbarController *macToolbarController
 @property  CKBlankViewController *blankViewController
 @property  BOOL isInitialLoad
 @property  UIViewController *statusBarStyleViewController
 @property  UIViewController<CKBrowserViewControllerProtocol> *prewarmedCameraBrowser
 @property  CKAlertUtilities *alertUtilities
 @property  UIViewController *inboxViewController
 @property  CKInboxModel *inboxModel
 @property  CKAlertController *currentSMSRelayPinAlert
 @property  NSMutableArray *pendingSMSRelayPINPrompts
 @property  {?=ddBBB} columnResizeParams
 @property  short pinningInputViewStackCounter
 @property  NSArray *windowToConversationListConstraints
 @property  <CKMessagesControllerDelegate> *messagesControllerDelegate
 @property  CKDetailsNavigationController *detailsNavigationController
 @property  BOOL isShowingConversationListController
 @property  BOOL isThreeColumnLayoutEnabled
 @property  @? deferredHandleURLBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *alertSuppressionContexts
 @property  BOOL isCollapsed
 @property  BOOL isComposingMessage
 @property  BOOL hasDetailsNavigationController
 @property  BOOL isDetailsNavigationControllerDetached
 @property  BOOL isAnimatingMessageSend
 @property  BOOL isShowingChatController

  // instance methods
  -[CKMessagesController isCollapsed]
  -[CKMessagesController initialize]
  -[CKMessagesController preferredFocusEnvironments]
  -[CKMessagesController chatNavigationController]
  -[CKMessagesController conversationListNavigationController]
  -[CKMessagesController _isMessageFilteringEnabled]
  -[CKMessagesController inboxViewController]
  -[CKMessagesController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[CKMessagesController splitViewController:separateSecondaryViewControllerFromPrimaryViewController:]
  -[CKMessagesController updateConversationListNavigationControllerViewStack]
  -[CKMessagesController _unreadCountStringForFilterMode:]
  -[CKMessagesController changeFilterMode:]
  -[CKMessagesController inboxItemForFilterMode:title:andSystemImage:]
  -[CKMessagesController splitViewController:collapseSecondaryViewController:ontoPrimaryViewController:]
  -[CKMessagesController chatController]
  -[CKMessagesController _splitViewControllerShouldRestoreResponderAfterTraitCollectionTransition:]
  -[CKMessagesController childViewControllerForStatusBarHidden]
  -[CKMessagesController prepareForResume]
  -[CKMessagesController viewWillLayoutSubviews]
  -[CKMessagesController _hasCurrentConversations]
  -[CKMessagesController _setIsShowingNoSelectionUI:]
  -[CKMessagesController showConversationList:]
  -[CKMessagesController _updateAlertSuppressionContext]
  -[CKMessagesController daemonIsConnected]
  -[CKMessagesController executeDeferredTasks]
  -[CKMessagesController presentMacToolbarController]
  -[CKMessagesController prepareForSuspend]
  -[CKMessagesController onboardingControllerCreatingIfNecessary]
  -[CKMessagesController setDefaultForUIKitLogging]
  -[CKMessagesController _handleInitialLoad]
  -[CKMessagesController _updateSidebarWidth]
  -[CKMessagesController setAlertUtilities:]
  -[CKMessagesController alertUtilities]
  -[CKMessagesController teardownCamera]
  -[CKMessagesController _sharedBalloonPluginManager]
  -[CKMessagesController presentOnboardingViewControllerIfNeeded]
  -[CKMessagesController _shouldShowSMSRelayPrompt]
  -[CKMessagesController _showSMSRelayPromptIfNeeded]
  -[CKMessagesController pendingSMSRelayPINPrompts]
  -[CKMessagesController _shouldShowSMSRelayPromptOnLaunch]
  -[CKMessagesController setPendingSMSRelayPINPrompts:]
  -[CKMessagesController setCurrentSMSRelayPinAlert:]
  -[CKMessagesController _showNextSMSRelayPINPrompt]
  -[CKMessagesController currentSMSRelayPinAlert]
  -[CKMessagesController showConversationAndMessageForChatGUID:messageGUID:withInlineReplyOverlay:animate:]
  -[CKMessagesController setComposeChatController:]
  -[CKMessagesController setComposeChatNavigationController:]
  -[CKMessagesController setupBizNavBarForConversation:]
  -[CKMessagesController composeChatNavigationController]
  -[CKMessagesController setCurrentConversation:]
  -[CKMessagesController setChatController:]
  -[CKMessagesController splitViewController:displayModeForExpandingToProposedDisplayMode:]
  -[CKMessagesController setDetailsNavigationController:]
  -[CKMessagesController detailsNavigationController]
  -[CKMessagesController chatController:willSendComposition:inConversation:]
  -[CKMessagesController splitViewController:topColumnForCollapsingToProposedTopColumn:]
  -[CKMessagesController chatController:didSendCompositionInConversation:]
  -[CKMessagesController chatController:didReportSpamForConversation:]
  -[CKMessagesController prewarmCameraIfNecessaryForChatController:]
  -[CKMessagesController screenTimeOKPressedForChatController:]
  -[CKMessagesController navigationBarBackdropLayerGroupNameForChatController:]
  -[CKMessagesController unreadCountForCurrentFilterModeForChatController:]
  -[CKMessagesController chatController:didDetachDetailsNavigationController:]
  -[CKMessagesController presentDetailsNavigationController:]
  -[CKMessagesController hasDetailsNavigationController]
  -[CKMessagesController dismissDetailsNavigationController]
  -[CKMessagesController dismissAndReopenDetailsNavigationController]
  -[CKMessagesController isDetailsNavigationControllerDetached]
  -[CKMessagesController updateInboxBackButton]
  -[CKMessagesController dismissPhotosGridIfNeeded]
  -[CKMessagesController columnResizeParams]
  -[CKMessagesController setColumnResizeParams:]
  -[CKMessagesController setCurrentConversation:keepAllCurrentlyLoadedMessages:]
  -[CKMessagesController navigationController:didShowViewController:animated:]
  -[CKMessagesController messagesControllerDelegate]
  -[CKMessagesController _keyCommandChangeConversation:]
  -[CKMessagesController _isShowingFullscreenController]
  -[CKMessagesController keyCommandFind:]
  -[CKMessagesController statusBarStyleViewController]
  -[CKMessagesController performResumeDeferredSetup]
  -[CKMessagesController shouldPresentOnboarding]
  -[CKMessagesController _isShowingModalChatController]
  -[CKMessagesController _isShowingExpandedAppViewController]
  -[CKMessagesController isShowingConversationListController]
  -[CKMessagesController __updateAlertSuppressionContext]
  -[CKMessagesController isInitialLoad]
  -[CKMessagesController .cxx_destruct]
  -[CKMessagesController setBlankViewController:]
  -[CKMessagesController presentFocusStatusAuthorizationAlertIfNecessary]
  -[CKMessagesController _sanitizeProposedSidebarWidth:]
  -[CKMessagesController _macConvertLegacySidebarWidthToModernWidth:]
  -[CKMessagesController calculatedPrimaryColumnWidth_iOS]
  -[CKMessagesController persistSidebarWidth:]
  -[CKMessagesController executeDeferredHandleURLBlock]
  -[CKMessagesController notifyThatKeepMessagesSettingWasResetIfNeeded]
  -[CKMessagesController shouldShowImessageAlert]
  -[CKMessagesController onboardingControllerIsActive]
  -[CKMessagesController showNewMessageCompositionPanelWithRecipients:composition:animated:bizIntent:launchPluginWithBundleID:pluginLaunchPayload:]
  -[CKMessagesController showNewMessageCompositionPanelWithRecipients:composition:appendToExistingDraft:animated:bizIntent:launchPluginWithBundleID:pluginLaunchPayload:]
  -[CKMessagesController cancelAndDestroyCompositionWithoutDismiss]
  -[CKMessagesController _checkPushToTranscriptTimingWithStartTime:]
  -[CKMessagesController isShowingDirtyComposeModalView]
  -[CKMessagesController newInboxModel]
  -[CKMessagesController viewDidLoad]
  -[CKMessagesController alertSuppressionContexts]
  -[CKMessagesController showConversation:animate:forceToTranscript:keepAllCurrentlyLoadedMessages:userInitiated:]
  -[CKMessagesController cleanUpBizNavBarForConversation:]
  -[CKMessagesController showConversation:animate:keepAllCurrentlyLoadedMessages:]
  -[CKMessagesController showConversation:animate:forceToTranscript:keepAllCurrentlyLoadedMessages:]
  -[CKMessagesController resumeToConversation:]
  -[CKMessagesController conversationListControllerIfInitialized]
  -[CKMessagesController _presentAppStoreWithLaunchURL:fromSourceApplication:]
  -[CKMessagesController _setEntryViewHidden:]
  -[CKMessagesController performSearchForQuery:]
  -[CKMessagesController setDeferredHandleURLBlock:]
  -[CKMessagesController _showSMSRelayPromptOnLaunchIfNeeded]
  -[CKMessagesController _smsRelayPINReceived:]
  -[CKMessagesController showInboxViewController:]
  -[CKMessagesController _pinVerificationShouldDismiss:]
  -[CKMessagesController _splitViewController:constrainPrimaryColumnWidthForResizeWidth:]
  -[CKMessagesController _splitViewController:willBeginResizingColumn:]
  -[CKMessagesController presentCKAlertController:]
  -[CKMessagesController didFinishCheckingMissingCarrierSetting]
  -[CKMessagesController keyCommandOpenConversationInNewWindow:]
  -[CKMessagesController keyCommandNextConversation:]
  -[CKMessagesController keyCommandPreviousConversation:]
  -[CKMessagesController keyCommandSelectPinnedConversation:]
  -[CKMessagesController _newCameraBrowser]
  -[CKMessagesController conversationListController]
  -[CKMessagesController keyCommandSelectFirstActiveConversation]
  -[CKMessagesController _popToConversationListAndPerformBlockAnimated:block:]
  -[CKMessagesController hasBusinessRecipientWithRecipientIDs:]
  -[CKMessagesController presentPrivacyView:]
  -[CKMessagesController cancelNewMessageComposition]
  -[CKMessagesController isDownTimeActiveForCurrentChat]
  -[CKMessagesController showConversationAndMessageForSearchURL:]
  -[CKMessagesController showDetailViewController:]
  -[CKMessagesController isShowingBlankChatController]
  -[CKMessagesController applicationWillResume:]
  -[CKMessagesController _hideConversationListForIPadPPTTest]
  -[CKMessagesController currentCompositionHasContent]
  -[CKMessagesController isShowingInboxViewController]
  -[CKMessagesController hasUnreadFilteredConversationsIgnoringMessages:]
  -[CKMessagesController showUnreadConversationsWithLastConversation:ignoringMessages:]
  -[CKMessagesController isShowingChatControllerWithUnsentText]
  -[CKMessagesController showStoreForURL:fromSourceApplication:]
  -[CKMessagesController setInboxModel:]
  -[CKMessagesController _conversationFilteringStateChangedNotification:]
  -[CKMessagesController dismissAndReloadInputViews:]
  -[CKMessagesController viewDidAppear:]
  -[CKMessagesController setConversationListController:]
  -[CKMessagesController becomeFirstResponder]
  -[CKMessagesController showSurfAppForCurrentConversationWithAmount:currency:]
  -[CKMessagesController presentOnboardingViewController:]
  -[CKMessagesController _fetchMeContactWithError:]
  -[CKMessagesController prewarmCameraIfNecessary]
  -[CKMessagesController setMessagesControllerDelegate:]
  -[CKMessagesController deferredHandleURLBlock]
  -[CKMessagesController setConversationListNavigationController:]
  -[CKMessagesController setChatNavigationController:]
  -[CKMessagesController prewarmedCameraBrowser]
  -[CKMessagesController shouldAutorotate]
  -[CKMessagesController setPrewarmedCameraBrowser:]
  -[CKMessagesController setInboxViewController:]
  -[CKMessagesController pinningInputViewStackCounter]
  -[CKMessagesController setPinningInputViewStackCounter:]
  -[CKMessagesController windowToConversationListConstraints]
  -[CKMessagesController macToolbarController]
  -[CKMessagesController requestPresentationStyleExpanded:]
  -[CKMessagesController conversationList]
  -[CKMessagesController configureWithToolbarController:]
  -[CKMessagesController setWindowToConversationListConstraints:]
  -[CKMessagesController init]
  -[CKMessagesController currentConversation]
  -[CKMessagesController isComposingMessage]
  -[CKMessagesController showNewMessageCompositionPanelWithRecipients:composition:animated:]
  -[CKMessagesController updateCompositionInEntryViewWithComposition:]
  -[CKMessagesController setStatusBarStyleViewController:]
  -[CKMessagesController initWithStyle:]
  -[CKMessagesController showConversation:animate:userInitiated:]
  -[CKMessagesController setIsInitialLoad:]
  -[CKMessagesController showConversation:animate:]
  -[CKMessagesController commitPayload:]
  -[CKMessagesController startEditingPayload:dismiss:]
  -[CKMessagesController openURL:pluginID:completionHandler:]
  -[CKMessagesController openURL:applicationIdentifier:pluginID:completionHandler:]
  -[CKMessagesController dismissToKeyboard:]
  -[CKMessagesController viewWillDisappear:]
  -[CKMessagesController presentAlertWithTitle:message:buttonTitle:completion:]
  -[CKMessagesController commitSticker:]
  -[CKMessagesController commitSticker:withDragTarget:]
  -[CKMessagesController onboardingController]
  -[CKMessagesController viewDidLayoutSubviews]
  -[CKMessagesController setOnboardingController:]
  -[CKMessagesController parentControllerDidResume:animating:]
  -[CKMessagesController isShowingChatController]
  -[CKMessagesController composeChatController]
  -[CKMessagesController _shouldShowInboxView]
  -[CKMessagesController conversationListWillBeginEditing:]
  -[CKMessagesController viewWillAppear:]
  -[CKMessagesController showConversationInNewWindow:]
  -[CKMessagesController composeChatControllerDidCancelComposition:]
  -[CKMessagesController conversationListIsDeletingConversations:]
  -[CKMessagesController dismiss]
  -[CKMessagesController setMacToolbarController:]
  -[CKMessagesController didBeginInstallingAppWithBundleIdentifier:]
  -[CKMessagesController conversationListControllerTappedDeleteNewMessage:]
  -[CKMessagesController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKMessagesController startEditingPayload:]
  -[CKMessagesController conversationListControllerWillPresentSearchResultsController]
  -[CKMessagesController conversationListControllerWillDismissSearchResultsController]
  -[CKMessagesController showConversationAndMessageForChatGUID:messageGUID:animate:]
  -[CKMessagesController dragControllerTranscriptDelegate]
  -[CKMessagesController isAnimatingMessageSend]
  -[CKMessagesController dealloc]
  -[CKMessagesController isThreeColumnLayoutEnabled]
  -[CKMessagesController composeChatControllerCanEditRecipients]
  -[CKMessagesController composeChatController:didSelectNewConversation:]
  -[CKMessagesController composeChatControllerShouldShowBackButtonViewDuringSendAnimation:]
  -[CKMessagesController setLocalUserIsTyping:]
  -[CKMessagesController loadView]
  -[CKMessagesController _conversationListFinishedMerging:]
  -[CKMessagesController supportedInterfaceOrientations]
  -[CKMessagesController chatController:forwardComposition:]
  -[CKMessagesController splitViewController:willShowColumn:]
  -[CKMessagesController showNewMessageCompositionPanelAppendingToExistingDraft:animated:]
  -[CKMessagesController inboxModel]
  -[CKMessagesController __im_ff_systemImageAdoptionEnabled]
  -[CKMessagesController splitViewControllerDidCollapse:]
  -[CKMessagesController dismissKeyboardIfUp]
  -[CKMessagesController splitViewControllerDidExpand:]
  -[CKMessagesController viewDidDisappear:]
  -[CKMessagesController navigationController:willShowViewController:animated:]
  -[CKMessagesController presentingViewControllerForOnboardingController:]
  -[CKMessagesController didReceiveMemoryWarning]
  -[CKMessagesController onboardingControllerDidFinish:]
  -[CKMessagesController parentControllerDidBecomeActive]
  -[CKMessagesController __im_ff_commSafetyUIEnabled]
  -[CKMessagesController _conversationLeft:]
  -[CKMessagesController keyCommandDeleteConversation:]
  -[CKMessagesController __im_ff_newInboxViewEnabled]
  -[CKMessagesController _chatRegistryDidLoad:]
  -[CKMessagesController _appStateChange:]
  -[CKMessagesController _appStateDidResumeFromInactive:]
  -[CKMessagesController performVisibleAppPluginIconPrefetch:]
  -[CKMessagesController _unreadCountDidChange:]
  -[CKMessagesController blankViewController]


CKQLPreviewController : QLPreviewController <CKFullScreenBalloonViewControllerDelegate, IMPhotoLibraryPersistenceManagerListener>
 @property  BOOL controllerWasDismissed
 @property  BOOL suppressRefetchingCurrentHighQualityImage
 @property  UIBarButtonItem *tapbackButton
 @property  BOOL currentPreviewItemIsSaved
 @property  CKChatItem *chatItem
 @property  <CKQLPreviewControllerDelegate> *chatControllerPreviewDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKQLPreviewController preferredStatusBarStyle]
  -[CKQLPreviewController preferredContentSize]
  -[CKQLPreviewController photoLibraryPersistedSyndicatedAssetSetDidChange]
  -[CKQLPreviewController .cxx_destruct]
  -[CKQLPreviewController fullScreenBalloonViewControllerShouldShowReplyButton:]
  -[CKQLPreviewController fullScreenBalloonViewController:sendMessageAcknowledgment:forChatItem:]
  -[CKQLPreviewController replyTapped:]
  -[CKQLPreviewController fullScreenBalloonViewControllerHandleDismissTap:]
  -[CKQLPreviewController fullScreenBalloonViewController:didAppearAnimated:]
  -[CKQLPreviewController fullScreenBalloonViewControllerDidDisappear:]
  -[CKQLPreviewController fullScreenBalloonViewController:replyButtonPressedForChatItem:]
  -[CKQLPreviewController fullScreenBalloonViewController:willAppearAnimated:]
  -[CKQLPreviewController fullScreenBalloonViewControllerShouldShowHightlightButton:forChatItem:]
  -[CKQLPreviewController fullScreenBalloonViewController:willDisappearWithSendAnimation:]
  -[CKQLPreviewController fullScreenBalloonViewController:verticallyScrollTranscriptByAmount:animated:completion:]
  -[CKQLPreviewController fullScreenBalloonViewController:sendMessageHighlight:forChatItem:]
  -[CKQLPreviewController updateBarButtonItems]
  -[CKQLPreviewController viewDidAppear:]
  -[CKQLPreviewController init]
  -[CKQLPreviewController setChatControllerPreviewDelegate:]
  -[CKQLPreviewController tapbackTapped:]
  -[CKQLPreviewController controllerWasDismissed]
  -[CKQLPreviewController currentPreviewItemIsSaved]
  -[CKQLPreviewController currentPreviewItemDidChange]
  -[CKQLPreviewController saveTapped:]
  -[CKQLPreviewController chatControllerPreviewDelegate]
  -[CKQLPreviewController setControllerWasDismissed:]
  -[CKQLPreviewController setTapbackButton:]
  -[CKQLPreviewController canCurrentPreviewItemQuickSave]
  -[CKQLPreviewController setCurrentPreviewItemIsSaved:]
  -[CKQLPreviewController updateCurrentPreviewItemIsSaved:valueDidChange:]
  -[CKQLPreviewController _dismissFullScreenBubbleViewController:animated:withSendAnimation:completion:]
  -[CKQLPreviewController suppressRefetchingCurrentHighQualityImage]
  -[CKQLPreviewController tapbackButton]
  -[CKQLPreviewController setSuppressRefetchingCurrentHighQualityImage:]
  -[CKQLPreviewController chatItem]
  -[CKQLPreviewController setChatItem:]
  -[CKQLPreviewController previewActions]
  -[CKQLPreviewController dismissViewControllerAnimated:completion:]
  -[CKQLPreviewController viewWillDisappear:]
  -[CKQLPreviewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CKQLPreviewController currentPreviewItem]
  -[CKQLPreviewController fullScreenBalloonViewControllerSafeAreaLayoutFrame:]
  -[CKQLPreviewController loadView]
  -[CKQLPreviewController fullScreenBalloonViewController:stickerPackTappedWithAdamID:]
  -[CKQLPreviewController fullScreenBalloonViewController:deleteStickerWithTransferGUID:]
  -[CKQLPreviewController fullScreenBalloonViewControllerAnchorVertialOrientation:withBalloonFrame:]
  -[CKQLPreviewController fullScreenBalloonViewControllerMessageHighlightButtonDidFinishAnimating:]
  -[CKQLPreviewController observeValueForKeyPath:ofObject:change:context:]
  -[CKQLPreviewController viewDidDisappear:]
  -[CKQLPreviewController __im_ff_commSafetyUIEnabled]
  -[CKQLPreviewController fullScreenBalloonViewController:balloonFrameForChatItem:]


CKQLDetailsPreviewController : CKQLPreviewController <QLPreviewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKQLDetailsPreviewController ckCanDismissWhenSuspending]


CKImageReplyPreviewBalloonView : CKImageBalloonView
  // instance methods
  -[CKImageReplyPreviewBalloonView prepareForDisplay]
  -[CKImageReplyPreviewBalloonView layoutSubviews]
  -[CKImageReplyPreviewBalloonView configureForMessagePart:]
  -[CKImageReplyPreviewBalloonView initWithFrame:]
  -[CKImageReplyPreviewBalloonView sizeThatFits:textAlignmentInsets:]


CKPreviewDispatchCache : NSObject <IMSystemMonitorListener>
 @property  CKDispatchCache *dispatchCache
 @property  CKMultiDict *pendingBlocks

  // class methods
  +[CKPreviewDispatchCache snapshotCache]
  +[CKPreviewDispatchCache detailsPreviewCache]
  +[CKPreviewDispatchCache transcriptPreviewCache]
  +[CKPreviewDispatchCache mapThumbnailQueue]
  +[CKPreviewDispatchCache stickerPreviewCache]
  +[CKPreviewDispatchCache _invalidateStickerPreviewCache]
  +[CKPreviewDispatchCache previewPrewarmQueue]

  // instance methods
  -[CKPreviewDispatchCache notificationCenter]
  -[CKPreviewDispatchCache suspend]
  -[CKPreviewDispatchCache .cxx_destruct]
  -[CKPreviewDispatchCache cachedPreviewForKey:]
  -[CKPreviewDispatchCache setCachedPreview:key:]
  -[CKPreviewDispatchCache isGeneratingPreviewForKey:]
  -[CKPreviewDispatchCache enqueueGenerationBlock:completion:withPriority:forKey:]
  -[CKPreviewDispatchCache enqueueSaveBlock:withPriority:]
  -[CKPreviewDispatchCache init]
  -[CKPreviewDispatchCache flush]
  -[CKPreviewDispatchCache beginGeneratingForKey:]
  -[CKPreviewDispatchCache endGeneratingForKey:]
  -[CKPreviewDispatchCache dispatchCache]
  -[CKPreviewDispatchCache setDispatchCache:]
  -[CKPreviewDispatchCache initWithCacheLimit:]
  -[CKPreviewDispatchCache setPendingBlocks:]
  -[CKPreviewDispatchCache shouldReplaceCachedPreview:withPreview:]
  -[CKPreviewDispatchCache pendingBlocks]
  -[CKPreviewDispatchCache mediaObjectManager]
  -[CKPreviewDispatchCache transferFinished:]
  -[CKPreviewDispatchCache enqueueSaveBlock:forMediaObject:withPriority:]
  -[CKPreviewDispatchCache resume]
  -[CKPreviewDispatchCache transferRemoved:]
  -[CKPreviewDispatchCache clearQueueAndCachedPreviews]
  -[CKPreviewDispatchCache dealloc]
  -[CKPreviewDispatchCache systemApplicationDidSuspend]
  -[CKPreviewDispatchCache didReceiveMemoryWarning]


CKPendingConversation : CKConversation
 @property  IMService *composeSendingService
 @property  BOOL noAvailableServices
 @property  IMService *previousSendingService

  // instance methods
  -[CKPendingConversation uniqueIdentifier]
  -[CKPendingConversation sendingService]
  -[CKPendingConversation .cxx_destruct]
  -[CKPendingConversation refreshComposeSendingServiceForAddresses:withCompletionBlock:]
  -[CKPendingConversation refreshStatusForAddresses:withCompletionBlock:]
  -[CKPendingConversation composeSendingService]
  -[CKPendingConversation previousSendingService]
  -[CKPendingConversation setComposeSendingService:]
  -[CKPendingConversation setNoAvailableServices:]
  -[CKPendingConversation deviceIndependentID]
  -[CKPendingConversation isMakoConversation]
  -[CKPendingConversation setPreviousSendingService:]
  -[CKPendingConversation isAppleConversation]
  -[CKPendingConversation noAvailableServices]


CKAggregateAttachmentMessagePartChatItem : CKMessagePartChatItem
 @property  NSArray *aggregateChatItems
 @property  NSArray *mediaObjects
 @property  NSArray *aggregatedVisibleAssociatedMessageChatItems
 @property  NSArray *aggregatedNonTapbackVisibleAssociatedMessageChatItems
 @property  CKMediaObjectAssetDataSource *dataSource
 @property  NSURL *momentShareURL
 @property  NSArray *transferGUIDs
 @property  NSArray *visibleAssociatedMessageChatItemsIncludingTapbacks

  // instance methods
  -[CKAggregateAttachmentMessagePartChatItem layoutType]
  -[CKAggregateAttachmentMessagePartChatItem canDelete]
  -[CKAggregateAttachmentMessagePartChatItem setDataSource:]
  -[CKAggregateAttachmentMessagePartChatItem .cxx_destruct]
  -[CKAggregateAttachmentMessagePartChatItem transferGUIDs]
  -[CKAggregateAttachmentMessagePartChatItem aggregateChatItems]
  -[CKAggregateAttachmentMessagePartChatItem canExport]
  -[CKAggregateAttachmentMessagePartChatItem initWithIMChatItem:maxWidth:]
  -[CKAggregateAttachmentMessagePartChatItem transcriptTraitCollection]
  -[CKAggregateAttachmentMessagePartChatItem balloonViewClass]
  -[CKAggregateAttachmentMessagePartChatItem dataSource]
  -[CKAggregateAttachmentMessagePartChatItem canCopy]
  -[CKAggregateAttachmentMessagePartChatItem setMomentShareURL:]
  -[CKAggregateAttachmentMessagePartChatItem _generateMediaObjects]
  -[CKAggregateAttachmentMessagePartChatItem aggregatedVisibleAssociatedMessageChatItems]
  -[CKAggregateAttachmentMessagePartChatItem aggregatedNonTapbackVisibleAssociatedMessageChatItems]
  -[CKAggregateAttachmentMessagePartChatItem setAggregateChatItems:]
  -[CKAggregateAttachmentMessagePartChatItem setAggregatedVisibleAssociatedMessageChatItems:]
  -[CKAggregateAttachmentMessagePartChatItem setAggregatedNonTapbackVisibleAssociatedMessageChatItems:]
  -[CKAggregateAttachmentMessagePartChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKAggregateAttachmentMessagePartChatItem mediaObjects]
  -[CKAggregateAttachmentMessagePartChatItem setMediaObjects:]
  -[CKAggregateAttachmentMessagePartChatItem canQuickSave]
  -[CKAggregateAttachmentMessagePartChatItem visibleAssociatedMessageChatItemsIncludingTapbacks]
  -[CKAggregateAttachmentMessagePartChatItem visibleAssociatedMessageChatItems]
  -[CKAggregateAttachmentMessagePartChatItem cellClass]
  -[CKAggregateAttachmentMessagePartChatItem momentShareURL]
  -[CKAggregateAttachmentMessagePartChatItem pasteboardItemProviders]
  -[CKAggregateAttachmentMessagePartChatItem shouldCacheSize]
  -[CKAggregateAttachmentMessagePartChatItem canForward]
  -[CKAggregateAttachmentMessagePartChatItem setTranscriptTraitCollection:]


CKPhotoSearchResultCell : CKEditableSearchResultCell <CKSearchResultCell>
 @property  UIImageView *livePhotoImage
 @property  NSString *resultIdentifier
 @property  UILabel *durationLabel
 @property  UIImageView *durationGradientImage
 @property  BOOL isLivePhoto
 @property  BOOL isVideo
 @property  UIImage *image
 @property  {UIEdgeInsets=dddd} marginInsets
 @property  BOOL _ck_editing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKPhotoSearchResultCell reuseIdentifier]

  // instance methods
  -[CKPhotoSearchResultCell isVideo]
  -[CKPhotoSearchResultCell image]
  -[CKPhotoSearchResultCell .cxx_destruct]
  -[CKPhotoSearchResultCell layoutSubviews]
  -[CKPhotoSearchResultCell marginInsets]
  -[CKPhotoSearchResultCell setSelected:]
  -[CKPhotoSearchResultCell prepareForReuse]
  -[CKPhotoSearchResultCell _livePhotoUpdated:]
  -[CKPhotoSearchResultCell setIsVideo:]
  -[CKPhotoSearchResultCell _videoDurationUpdated:]
  -[CKPhotoSearchResultCell livePhotoImage]
  -[CKPhotoSearchResultCell durationLabel]
  -[CKPhotoSearchResultCell durationGradientImage]
  -[CKPhotoSearchResultCell setIsLivePhoto:]
  -[CKPhotoSearchResultCell setLivePhotoImage:]
  -[CKPhotoSearchResultCell _configureDurationLabelForResult:]
  -[CKPhotoSearchResultCell setDurationLabel:]
  -[CKPhotoSearchResultCell setDurationGradientImage:]
  -[CKPhotoSearchResultCell isLivePhoto]
  -[CKPhotoSearchResultCell _thumbnailGenerated:]
  -[CKPhotoSearchResultCell initWithFrame:]
  -[CKPhotoSearchResultCell setMarginInsets:]
  -[CKPhotoSearchResultCell setImage:]
  -[CKPhotoSearchResultCell dealloc]
  -[CKPhotoSearchResultCell setResultIdentifier:]
  -[CKPhotoSearchResultCell resultIdentifier]
  -[CKPhotoSearchResultCell configureWithQueryResult:searchText:mode:]
  -[CKPhotoSearchResultCell refreshForSearchTextIfNeeded:]


CKChatEagerUploadController : NSObject
 @property  NSMutableDictionary *identifierMap
 @property  NSMutableArray *uploadUrls
 @property  NSMutableDictionary *temporaryURLS

  // instance methods
  -[CKChatEagerUploadController cancelURL:]
  -[CKChatEagerUploadController .cxx_destruct]
  -[CKChatEagerUploadController cancelAll]
  -[CKChatEagerUploadController uploadFileURL:filename:transcoderUserInfo:videoComplementURL:attributionInfo:identifier:recipients:]
  -[CKChatEagerUploadController init]
  -[CKChatEagerUploadController uploadUrls]
  -[CKChatEagerUploadController removeTemporaryURLForURL:]
  -[CKChatEagerUploadController _uploadFileURL:filename:transcoderUserInfo:videoComplementURL:attributionInfo:identifier:recipients:]
  -[CKChatEagerUploadController setIdentifierMap:]
  -[CKChatEagerUploadController _newTransferForURL:transcoderUserInfo:attributionInfo:]
  -[CKChatEagerUploadController addURLToIdentifierMap:forIdentifier:]
  -[CKChatEagerUploadController asyncCopyFileAtURL:toDestinationURL:completion:]
  -[CKChatEagerUploadController identifierMap]
  -[CKChatEagerUploadController setUploadUrls:]
  -[CKChatEagerUploadController temporaryURLS]
  -[CKChatEagerUploadController setTemporaryURLS:]
  -[CKChatEagerUploadController didSendComposition]
  -[CKChatEagerUploadController cancelIdentifier:]
  -[CKChatEagerUploadController uploadPayload:identifier:replace:recipients:]


CKExpressiveSendAsTextChatItem : CKMultilineStampChatItem
  // instance methods
  -[CKExpressiveSendAsTextChatItem loadTranscriptText]


CKDetailsExpanseActivityHeaderView : UITableViewHeaderFooterView <CKDetailsHeaderFooterView>
 @property  UITextView *expanseActivityTextView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDetailsExpanseActivityHeaderView reuseIdentifier]

  // instance methods
  -[CKDetailsExpanseActivityHeaderView expanseActivityTextView]
  -[CKDetailsExpanseActivityHeaderView .cxx_destruct]
  -[CKDetailsExpanseActivityHeaderView setExpanseActivityTextView:]
  -[CKDetailsExpanseActivityHeaderView layoutSubviews]


CKTranscriptSMSSpamCell : CKTranscriptLabelCell
 @property  NSAttributedString *attributedButtonText

  // instance methods
  -[CKTranscriptSMSSpamCell clearFilters]
  -[CKTranscriptSMSSpamCell setAttributedButtonText:]
  -[CKTranscriptSMSSpamCell .cxx_destruct]
  -[CKTranscriptSMSSpamCell attributedButtonText]
  -[CKTranscriptSMSSpamCell addFilter:]
  -[CKTranscriptSMSSpamCell initWithFrame:]
  -[CKTranscriptSMSSpamCell configureForChatItem:context:]
  -[CKTranscriptSMSSpamCell layoutSubviewsForAlignmentContents]


CKCommSafetyAuthenticationController : NSObject
  // class methods
  +[CKCommSafetyAuthenticationController _presentAuthenticationUI:completion:]
  +[CKCommSafetyAuthenticationController presentAuthenticationUI:completion:]


CKMessagesSceneDelegate : CKSceneDelegate <CKMessagesControllerDelegate, CKAlertSuppressionContextsProviding>
 @property  BOOL suspended
 @property  BOOL locked
 @property  CKSceneDelegateState *storedState
 @property  CKRegistrationViewController *madridRegistrationController
 @property  BOOL shouldShowRegistrationOverride
 @property  BOOL willPresentRegistrationViewController
 @property  CKMessagesController *messagesController
 @property  NSSet *alertSuppressionContexts

  // instance methods
  -[CKMessagesSceneDelegate sceneDidEnterBackground:]
  -[CKMessagesSceneDelegate sceneDidDisconnect:]
  -[CKMessagesSceneDelegate setSuspended:]
  -[CKMessagesSceneDelegate scene:willConnectToSession:options:]
  -[CKMessagesSceneDelegate sceneWillEnterForeground:]
  -[CKMessagesSceneDelegate sceneWillResignActive:]
  -[CKMessagesSceneDelegate sceneDidBecomeActive:]
  -[CKMessagesSceneDelegate _chatItemsDidChange:]
  -[CKMessagesSceneDelegate windowSceneDidBecomeVisible:]
  -[CKMessagesSceneDelegate presentOnboardingViewControllerIfNeeded]
  -[CKMessagesSceneDelegate sharedConversationList]
  -[CKMessagesSceneDelegate _updateAppSnapshot]
  -[CKMessagesSceneDelegate __updateAppSnapshot]
  -[CKMessagesSceneDelegate prefersToActivatePredicate]
  -[CKMessagesSceneDelegate canActivatePredicate]
  -[CKMessagesSceneDelegate messagesController:didUpdateCurrentConversation:]
  -[CKMessagesSceneDelegate scene:openURLContexts:]
  -[CKMessagesSceneDelegate .cxx_destruct]
  -[CKMessagesSceneDelegate alertSuppressionContexts]
  -[CKMessagesSceneDelegate hasBusinessRecipientWithRecipientIDs:]
  -[CKMessagesSceneDelegate _conversationFilteringStateChangedNotification:]
  -[CKMessagesSceneDelegate init]
  -[CKMessagesSceneDelegate isLocked]
  -[CKMessagesSceneDelegate stateRestorationActivityForScene:]
  -[CKMessagesSceneDelegate openSMSURL:]
  -[CKMessagesSceneDelegate openURL:sourceApplication:]
  -[CKMessagesSceneDelegate storedState]
  -[CKMessagesSceneDelegate windowScene:performActionForShortcutItem:completionHandler:]
  -[CKMessagesSceneDelegate _prepareForSuspend]
  -[CKMessagesSceneDelegate messagesController]
  -[CKMessagesSceneDelegate _handleAccountsChanged:]
  -[CKMessagesSceneDelegate _handleDaemonConnected:]
  -[CKMessagesSceneDelegate _handleDaemonDisconnected:]
  -[CKMessagesSceneDelegate _destroyMadridRegistrationView]
  -[CKMessagesSceneDelegate _scheduleDeferredSetup]
  -[CKMessagesSceneDelegate _prepareForResume:]
  -[CKMessagesSceneDelegate _messageUnknownFilteringEnabled]
  -[CKMessagesSceneDelegate _showMadridRegistrationViewIfNecessary]
  -[CKMessagesSceneDelegate _updateStoredState]
  -[CKMessagesSceneDelegate restoreStateFromUserActivity:]
  -[CKMessagesSceneDelegate _restoreState:]
  -[CKMessagesSceneDelegate _showPeerPaymentUIForPerson:amount:]
  -[CKMessagesSceneDelegate _shouldShowMadridRegistrationView]
  -[CKMessagesSceneDelegate _updateMadridRegistrationViewAnimated:]
  -[CKMessagesSceneDelegate _clearOldInputContextIdentifiersIfNeeded]
  -[CKMessagesSceneDelegate openSURFURL:]
  -[CKMessagesSceneDelegate loadConversationWithMessageGUID:withInlineReplyOverlay:]
  -[CKMessagesSceneDelegate validIntentDictionaryWithURLParameters:]
  -[CKMessagesSceneDelegate setStoredState:]
  -[CKMessagesSceneDelegate _setMessageFilterModeBy:]
  -[CKMessagesSceneDelegate shouldRestoreToConversationListForState:]
  -[CKMessagesSceneDelegate __showMadridRegistrationViewIfNecessary]
  -[CKMessagesSceneDelegate _createMadridRegistrationViewIfNecessary]
  -[CKMessagesSceneDelegate willPresentRegistrationViewController]
  -[CKMessagesSceneDelegate setWillPresentRegistrationViewController:]
  -[CKMessagesSceneDelegate _mainThread_updateMadridRegistrationViewAnimated:]
  -[CKMessagesSceneDelegate _oldInputContextIdentifiers]
  -[CKMessagesSceneDelegate madridRegistrationController]
  -[CKMessagesSceneDelegate setMadridRegistrationController:]
  -[CKMessagesSceneDelegate shouldShowRegistrationOverride]
  -[CKMessagesSceneDelegate setShouldShowRegistrationOverride:]
  -[CKMessagesSceneDelegate type]
  -[CKMessagesSceneDelegate dealloc]
  -[CKMessagesSceneDelegate setLocked:]
  -[CKMessagesSceneDelegate isSuspended]
  -[CKMessagesSceneDelegate scene:continueUserActivity:]


CKDispatchQueue : NSObject
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  NSObject<OS_dispatch_queue> *lockQueue
 @property  ^{__CFBinaryHeap=} heap
 @property  NSMutableDictionary *dispatchQueueBlocks
 @property  BOOL cancelled
 @property  BOOL suspended

  // class methods
  +[CKDispatchQueue concurrentQueueWithDispatchPriority:]
  +[CKDispatchQueue serialQueueWithDispatchPriority:]

  // instance methods
  -[CKDispatchQueue setSuspended:]
  -[CKDispatchQueue heap]
  -[CKDispatchQueue setHeap:]
  -[CKDispatchQueue .cxx_destruct]
  -[CKDispatchQueue addBlock:]
  -[CKDispatchQueue setCancelled:]
  -[CKDispatchQueue isCancelled]
  -[CKDispatchQueue init]
  -[CKDispatchQueue removeAllOutstandingBlocks]
  -[CKDispatchQueue lockQueue]
  -[CKDispatchQueue dispatchQueue]
  -[CKDispatchQueue setDispatchQueueBlocks:]
  -[CKDispatchQueue _initWithDispatchAttr:dispatchPriority:]
  -[CKDispatchQueue addBlock:withQueuePriority:forKey:]
  -[CKDispatchQueue dispatchQueueBlocks]
  -[CKDispatchQueue removeOutstandingBlockForKey:]
  -[CKDispatchQueue containsOutstandingBlockForKey:]
  -[CKDispatchQueue setQueuePriority:ofOutstandingBlockForKey:]
  -[CKDispatchQueue queuePriorityOfOutstandingBlockForKey:]
  -[CKDispatchQueue allKeysOfOutstandingBlocks]
  -[CKDispatchQueue setLockQueue:]
  -[CKDispatchQueue dealloc]
  -[CKDispatchQueue isSuspended]
  -[CKDispatchQueue addBlock:withQueuePriority:]
  -[CKDispatchQueue setDispatchQueue:]


_CKDispatchQueueBlock : NSObject
 @property  @? block
 @property  NSString *key
 @property  long long priority
 @property  unsigned long fifo

  // instance methods
  -[_CKDispatchQueueBlock setBlock:]
  -[_CKDispatchQueueBlock fifo]
  -[_CKDispatchQueueBlock setKey:]
  -[_CKDispatchQueueBlock .cxx_destruct]
  -[_CKDispatchQueueBlock setFIFO:]
  -[_CKDispatchQueueBlock setPriority:]
  -[_CKDispatchQueueBlock compare:]
  -[_CKDispatchQueueBlock priority]
  -[_CKDispatchQueueBlock cancel]
  -[_CKDispatchQueueBlock initWithBlock:key:priority:fifo:]
  -[_CKDispatchQueueBlock key]
  -[_CKDispatchQueueBlock block]


CKComposeSubscriptionSelectorButton : UIButton
 @property  TPBadgeView *badgeView
 @property  UILabel *buttonTitleLabel
 @property  UIStackView *stackView
 @property  UITapGestureRecognizer *gestureRecognizer
 @property  <CKComposeSubscriptionSelectorButtonDelegate> *delegate
 @property  unsigned long theme

  // instance methods
  -[CKComposeSubscriptionSelectorButton stackView]
  -[CKComposeSubscriptionSelectorButton theme]
  -[CKComposeSubscriptionSelectorButton gestureRecognizer]
  -[CKComposeSubscriptionSelectorButton badgeView]
  -[CKComposeSubscriptionSelectorButton .cxx_destruct]
  -[CKComposeSubscriptionSelectorButton setBadgeView:]
  -[CKComposeSubscriptionSelectorButton handleTap:]
  -[CKComposeSubscriptionSelectorButton setStackView:]
  -[CKComposeSubscriptionSelectorButton setDelegate:]
  -[CKComposeSubscriptionSelectorButton init]
  -[CKComposeSubscriptionSelectorButton setTheme:]
  -[CKComposeSubscriptionSelectorButton updateTheme]
  -[CKComposeSubscriptionSelectorButton buttonTitleLabel]
  -[CKComposeSubscriptionSelectorButton delegate]
  -[CKComposeSubscriptionSelectorButton loadConstraintsForButton]
  -[CKComposeSubscriptionSelectorButton setButtonTitleLabel:]
  -[CKComposeSubscriptionSelectorButton updateTitleFont:]
  -[CKComposeSubscriptionSelectorButton updateContentsWithTitle:badgeText:theme:]


CKPinnedConversationDropTargetCollectionViewCell : UICollectionViewCell
 @property  CKDropZoneCircleView *dropZoneCircleView
 @property  UILabel *instructionLabel
 @property  CKPinnedConversationView *prototypeConversationView
 @property  long long layoutStyle
 @property  BOOL shouldHideLabel
 @property  BOOL shouldAnimateCircle

  // class methods
  +[CKPinnedConversationDropTargetCollectionViewCell uniqueIdentifier]
  +[CKPinnedConversationDropTargetCollectionViewCell uniqueIdentifierForDropTargetAtItemIndex:]
  +[CKPinnedConversationDropTargetCollectionViewCell reuseIdentifier]

  // instance methods
  -[CKPinnedConversationDropTargetCollectionViewCell _updateFont]
  -[CKPinnedConversationDropTargetCollectionViewCell traitCollectionDidChange:]
  -[CKPinnedConversationDropTargetCollectionViewCell layoutStyle]
  -[CKPinnedConversationDropTargetCollectionViewCell .cxx_destruct]
  -[CKPinnedConversationDropTargetCollectionViewCell layoutSubviews]
  -[CKPinnedConversationDropTargetCollectionViewCell sizeThatFits:]
  -[CKPinnedConversationDropTargetCollectionViewCell initWithFrame:]
  -[CKPinnedConversationDropTargetCollectionViewCell setShouldAnimateCircle:]
  -[CKPinnedConversationDropTargetCollectionViewCell instructionLabel]
  -[CKPinnedConversationDropTargetCollectionViewCell _updateInstructionLabelColor]
  -[CKPinnedConversationDropTargetCollectionViewCell shouldHideLabel]
  -[CKPinnedConversationDropTargetCollectionViewCell shouldAnimateCircle]
  -[CKPinnedConversationDropTargetCollectionViewCell dropZoneCircleView]
  -[CKPinnedConversationDropTargetCollectionViewCell setDropZoneCircleView:]
  -[CKPinnedConversationDropTargetCollectionViewCell setInstructionLabel:]
  -[CKPinnedConversationDropTargetCollectionViewCell prototypeConversationView]
  -[CKPinnedConversationDropTargetCollectionViewCell setPrototypeConversationView:]
  -[CKPinnedConversationDropTargetCollectionViewCell setLayoutStyle:]
  -[CKPinnedConversationDropTargetCollectionViewCell setShouldHideLabel:]


CKDropZoneCircleView : UIView
 @property  BOOL isAnimating
 @property  CAShapeLayer *dropZoneShapeLayer

  // instance methods
  -[CKDropZoneCircleView traitCollectionDidChange:]
  -[CKDropZoneCircleView .cxx_destruct]
  -[CKDropZoneCircleView layoutSubviews]
  -[CKDropZoneCircleView isAnimating]
  -[CKDropZoneCircleView stopAnimating]
  -[CKDropZoneCircleView startAnimating]
  -[CKDropZoneCircleView initWithFrame:]
  -[CKDropZoneCircleView spinAnimation]
  -[CKDropZoneCircleView _updateShapeLayerStrokeColor]
  -[CKDropZoneCircleView dropZoneShapeLayer]
  -[CKDropZoneCircleView setDropZoneShapeLayer:]


CKAudioAnalyzer : NSObject <Endpointer>
 @property  unsigned int inMaxSamplesPerBuffer
 @property  float speechPaddingFactor
 @property  float decoderLatency
 @property  float heuristicWindowSec
 @property  float heuristicTransitionRatio
 @property  int endpointMode
 @property  double startWaitTime
 @property  double interspeechWaitTime
 @property  double endWaitTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKAudioAnalyzer initialize]

  // instance methods
  -[CKAudioAnalyzer setStartWaitTime:]
  -[CKAudioAnalyzer .cxx_destruct]
  -[CKAudioAnalyzer startWaitTime]
  -[CKAudioAnalyzer init]
  -[CKAudioAnalyzer setEndpointMode:]
  -[CKAudioAnalyzer reset]
  -[CKAudioAnalyzer getStatus:]
  -[CKAudioAnalyzer setInterspeechWaitTime:]
  -[CKAudioAnalyzer setEndWaitTime:]
  -[CKAudioAnalyzer configureWithSampleRate:andFrameRate:]
  -[CKAudioAnalyzer interspeechWaitTime]
  -[CKAudioAnalyzer dealloc]
  -[CKAudioAnalyzer inMaxSamplesPerBuffer]
  -[CKAudioAnalyzer setInMaxSamplesPerBuffer:]
  -[CKAudioAnalyzer speechPaddingFactor]
  -[CKAudioAnalyzer setSpeechPaddingFactor:]
  -[CKAudioAnalyzer decoderLatency]
  -[CKAudioAnalyzer setDecoderLatency:]
  -[CKAudioAnalyzer heuristicWindowSec]
  -[CKAudioAnalyzer setHeuristicWindowSec:]
  -[CKAudioAnalyzer heuristicTransitionRatio]
  -[CKAudioAnalyzer endWaitTime]
  -[CKAudioAnalyzer setHeuristicTransitionRatio:]
  -[CKAudioAnalyzer endpointMode]


CKBrowserItemPayload : IMPluginPayload
 @property  NSURL *videoComplementFileURL
 @property  UIViewController<CKPluginEntryViewController> *photoShelfViewController
 @property  NSURL *fileURL
 @property  NSString *filename
 @property  NSDictionary *attributionInfo
 @property  CKMediaObject *mediaObject
 @property  BOOL requiresValidation
 @property  BOOL useDirectSend

  // class methods
  +[CKBrowserItemPayload supportsSecureCoding]
  +[CKBrowserItemPayload browserItemFromSticker:]
  +[CKBrowserItemPayload browserItemPayloadFromIMPluginPayload:]

  // instance methods
  -[CKBrowserItemPayload setFileURL:]
  -[CKBrowserItemPayload initWithCoder:]
  -[CKBrowserItemPayload setMediaObject:]
  -[CKBrowserItemPayload useDirectSend]
  -[CKBrowserItemPayload fileURL]
  -[CKBrowserItemPayload .cxx_destruct]
  -[CKBrowserItemPayload mediaObject]
  -[CKBrowserItemPayload filename]
  -[CKBrowserItemPayload photoShelfViewController]
  -[CKBrowserItemPayload mediaObjectFromPayload]
  -[CKBrowserItemPayload shouldSendAsMediaObject]
  -[CKBrowserItemPayload isEqualToPluginPayload:]
  -[CKBrowserItemPayload isEqual:]
  -[CKBrowserItemPayload setPhotoShelfViewController:]
  -[CKBrowserItemPayload shouldSendAsRichLink]
  -[CKBrowserItemPayload videoComplementFileURL]
  -[CKBrowserItemPayload setFilename:]
  -[CKBrowserItemPayload setUseDirectSend:]
  -[CKBrowserItemPayload setAttributionInfo:]
  -[CKBrowserItemPayload requiresValidation]
  -[CKBrowserItemPayload copyWithZone:]
  -[CKBrowserItemPayload setVideoComplementFileURL:]
  -[CKBrowserItemPayload setRequiresValidation:]
  -[CKBrowserItemPayload shouldSendAsText]
  -[CKBrowserItemPayload __ck_urlFromTextBodyForRichLink]
  -[CKBrowserItemPayload attributionInfo]
  -[CKBrowserItemPayload encodeWithCoder:]
  -[CKBrowserItemPayload transcoderUserInfo]


CKLoadMoreChatItem : CKChatItem
  // instance methods
  -[CKLoadMoreChatItem layoutType]
  -[CKLoadMoreChatItem transcriptOrientation]
  -[CKLoadMoreChatItem displayDuringSend]
  -[CKLoadMoreChatItem contentInsets]
  -[CKLoadMoreChatItem transcriptTextAlignmentInsets]
  -[CKLoadMoreChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKLoadMoreChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKLoadMoreChatItem cellClass]


CKComposition : NSObject
 @property  NSArray *pasteboardItemProviders
 @property  NSArray *mediaObjects
 @property  NSArray *pluginDisplayContainers
 @property  BOOL textOnly
 @property  BOOL expirableComposition
 @property  NSAttributedString *text
 @property  NSAttributedString *subject
 @property  IMPluginPayload *shelfPluginPayload
 @property  NSString *expressiveSendStyleID
 @property  NSDictionary *bizIntent
 @property  BOOL isFromExternalSource
 @property  BOOL hasContent
 @property  BOOL hasNonwhiteSpaceContent
 @property  NSString *previewText
 @property  BOOL shouldHideClearPluginButton
 @property  BOOL sendAnimated
 @property  BOOL saveable

  // class methods
  +[CKComposition composition]
  +[CKComposition expirableCompositionWithMediaObject:]
  +[CKComposition quickImageCompositionWithMediaObject:]
  +[CKComposition newExpirableCompositionWithText:subject:shelfPluginPayload:]
  +[CKComposition savedCompositionForGUID:]
  +[CKComposition deleteCompositionWithGUID:]
  +[CKComposition compositionFromItemProviders:completionHandler:]
  +[CKComposition pasteboardTypesForItemProvider:]
  +[CKComposition _shouldCreateMediaObjectForUTIType:]
  +[CKComposition dataForPasteboardType:forItemProvider:completion:]
  +[CKComposition mediaObjectFromItemAtURL:filename:completion:]
  +[CKComposition _transcoderUserInfoFor:filename:type:]
  +[CKComposition isRTFDocumentWithItemProvider:]
  +[CKComposition filenameForType:forItemProvider:completionHandler:]
  +[CKComposition __ck_valueForItemClass:forItemProvider:completion:]
  +[CKComposition filenameFromURLTypeForType:forItemProvider:completionHandler:]
  +[CKComposition _temporaryURLFromURL:]
  +[CKComposition requestCompositionFromItemProvider:completion:]
  +[CKComposition _trimUnwantedAttributesFromAttributedString:]
  +[CKComposition compositionWithMediaObject:subject:]
  +[CKComposition compositionWithPluginDisplayContainer:subject:]
  +[CKComposition finalCompositionFromAllCompositions:]
  +[CKComposition _pasteRTFDocumentWithItemProvider:completionHandler:]
  +[CKComposition pluginDisplayContainerForItemProvider:completion:]
  +[CKComposition mediaObjectForItemProvider:completion:]
  +[CKComposition richestMediaTypeForItemProvider:]
  +[CKComposition requestPluginDisplayContainerForItemProvider:completion:]
  +[CKComposition requestMediaObjectForItemProvider:type:completion:]
  +[CKComposition requestMediaObjectsForAttributedString:completion:]
  +[CKComposition requestFilenameForType:forItemProvider:completion:]
  +[CKComposition stickerCompositionWithMediaObjects:]
  +[CKComposition mediaObjectFromPhotosAsset:completion:]
  +[CKComposition requestCompositionFromItemProviders:completion:]
  +[CKComposition compositionWithShelfPluginPayload:]
  +[CKComposition audioCompositionWithMediaObject:]
  +[CKComposition compositionForMessageParts:preserveSubject:contextIdentifier:]
  +[CKComposition compositionWithMSMessage:appExtensionIdentifier:]
  +[CKComposition compositionWithMediaObjects:subject:]
  +[CKComposition photoPickerCompositionWithMediaObject:]
  +[CKComposition photoPickerCompositionWithMediaObjects:]
  +[CKComposition _savedCompositionForGUID:readUsingBlock:]

  // instance methods
  -[CKComposition setSubject:]
  -[CKComposition setText:]
  -[CKComposition subject]
  -[CKComposition isSendAnimated]
  -[CKComposition .cxx_destruct]
  -[CKComposition initWithText:subject:shelfPluginPayload:]
  -[CKComposition bizIntent]
  -[CKComposition shelfPluginPayload]
  -[CKComposition expressiveSendStyleID]
  -[CKComposition compositionByReplacingMediaObject:withMediaObject:]
  -[CKComposition balloonViewClass]
  -[CKComposition pluginDisplayContainers]
  -[CKComposition initWithText:subject:shelfPluginPayload:bizIntent:]
  -[CKComposition setShelfPluginPayload:]
  -[CKComposition hasContent]
  -[CKComposition previewText]
  -[CKComposition isEqual:]
  -[CKComposition hasNonwhiteSpaceContent]
  -[CKComposition isExpirableComposition]
  -[CKComposition saveCompositionWithGUID:]
  -[CKComposition messageWithGUID:]
  -[CKComposition initWithText:subject:]
  -[CKComposition compositionByAppendingPluginDisplayContainer:]
  -[CKComposition compositionByAppendingText:]
  -[CKComposition setShouldHideClearPluginButton:]
  -[CKComposition compositionByAppendingMediaObject:]
  -[CKComposition superFormatText:]
  -[CKComposition mediaObjects]
  -[CKComposition compositionByAppendingComposition:]
  -[CKComposition compositionWithExpressiveSendStyleID:]
  -[CKComposition compositionByRemovingMediaObjects:]
  -[CKComposition compositionByAppendingMediaObjects:]
  -[CKComposition shouldHideClearPluginButton]
  -[CKComposition messagesFromCompositionFirstGUIDForMessage:]
  -[CKComposition isTextOnly]
  -[CKComposition setBizIntent:]
  -[CKComposition text]
  -[CKComposition pasteboardItemProviders]
  -[CKComposition setExpressiveSendStyleID:]
  -[CKComposition _compositionByAppendingText:isExpirable:shelfPluginPayload:]
  -[CKComposition isFromExternalSource]
  -[CKComposition isSaveable]
  -[CKComposition setIsFromExternalSource:]
  -[CKComposition externalSourceComposition]
  -[CKComposition _compositionParts]
  -[CKComposition messageWithGUID:superFormatText:superFormatSubject:fileTransferGUIDs:mediaObjects:balloonBundleID:payloadData:]
  -[CKComposition __im_ff_commSafetyUIEnabled]
  -[CKComposition superFormatSubject]
  -[CKComposition superFormatText:transfterGUIDs:mediaObjects:]
  -[CKComposition _messageFromPayload:firstGUID:]
  -[CKComposition _saveCompositionData:atURL:forGUID:]


_CKExpirableComposition : CKComposition
  // class methods
  +[_CKExpirableComposition compositionWithMediaObject:subject:]
  +[_CKExpirableComposition newCompositionWithText:subject:shelfPluginPayload:]

  // instance methods
  -[_CKExpirableComposition isSendAnimated]
  -[_CKExpirableComposition isSaveable]


_CKAudioComposition : _CKExpirableComposition
  // class methods
  +[_CKAudioComposition compositionWithMediaObject:subject:]

  // instance methods
  -[_CKAudioComposition isSendAnimated]


_CKQuickImageComposition : CKComposition
  // class methods
  +[_CKQuickImageComposition compositionWithMediaObject:subject:]

  // instance methods
  -[_CKQuickImageComposition isSendAnimated]


_CKQuickSendMediaComposition : CKComposition
  // class methods
  +[_CKQuickSendMediaComposition compositionWithMediaObject:subject:]
  +[_CKQuickSendMediaComposition compositionWithMediaObjects:subject:]

  // instance methods
  -[_CKQuickSendMediaComposition isSendAnimated]


_CKExternalAudioComposition : _CKAudioComposition

CKCommSafetyImprovePhotoDetectionViewController : UIViewController
 @property  UIImageView *imageView

  // instance methods
  -[CKCommSafetyImprovePhotoDetectionViewController imageView]
  -[CKCommSafetyImprovePhotoDetectionViewController .cxx_destruct]
  -[CKCommSafetyImprovePhotoDetectionViewController viewDidLoad]
  -[CKCommSafetyImprovePhotoDetectionViewController initWithChatItem:]
  -[CKCommSafetyImprovePhotoDetectionViewController viewDidLayoutSubviews]
  -[CKCommSafetyImprovePhotoDetectionViewController setImageView:]
  -[CKCommSafetyImprovePhotoDetectionViewController layoutImageView]
  -[CKCommSafetyImprovePhotoDetectionViewController configureImageFromChatItem:]


CKPhotosSearchResultsTitleHeaderCell : CKSearchResultsTitleHeaderCell
 @property  UISegmentedControl *control
 @property  double controlTopPadding
 @property  double controlBottomPadding

  // class methods
  +[CKPhotosSearchResultsTitleHeaderCell supplementaryViewType]
  +[CKPhotosSearchResultsTitleHeaderCell reuseIdentifier]

  // instance methods
  -[CKPhotosSearchResultsTitleHeaderCell setTitle:]
  -[CKPhotosSearchResultsTitleHeaderCell control]
  -[CKPhotosSearchResultsTitleHeaderCell .cxx_destruct]
  -[CKPhotosSearchResultsTitleHeaderCell preferredLayoutAttributesFittingAttributes:]
  -[CKPhotosSearchResultsTitleHeaderCell layoutSubviews]
  -[CKPhotosSearchResultsTitleHeaderCell setControl:]
  -[CKPhotosSearchResultsTitleHeaderCell initWithFrame:]
  -[CKPhotosSearchResultsTitleHeaderCell _controlIndexDidChange:]
  -[CKPhotosSearchResultsTitleHeaderCell updateSegmentedControlToFitWidth:]
  -[CKPhotosSearchResultsTitleHeaderCell setControlTopPadding:]
  -[CKPhotosSearchResultsTitleHeaderCell setControlBottomPadding:]
  -[CKPhotosSearchResultsTitleHeaderCell controlBottomPadding]
  -[CKPhotosSearchResultsTitleHeaderCell controlTopPadding]


CKPinnedConversationRichLinkBubble : CKPinnedConversationTailedActivityItemView <LPLinkViewDelegate>
 @property  LPLinkView *linkView
 @property  CKPinnedConversationRichLinkActivityItem *richLinkActivityItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKPinnedConversationRichLinkBubble _updatePillCornerRadius]
  -[CKPinnedConversationRichLinkBubble contentViewContentMode]
  -[CKPinnedConversationRichLinkBubble setActivityItem:]
  -[CKPinnedConversationRichLinkBubble supportsActivityItemViewContentScale]
  -[CKPinnedConversationRichLinkBubble activityItemViewContentScale]
  -[CKPinnedConversationRichLinkBubble setActivityItemViewContentScale:]
  -[CKPinnedConversationRichLinkBubble supportsAlignmentWithOriginationSubAvatarFrame]
  -[CKPinnedConversationRichLinkBubble initWithRichLinkActivityItem:]
  -[CKPinnedConversationRichLinkBubble contentViewPadding]
  -[CKPinnedConversationRichLinkBubble contentViewHorizontalInsetForPillCornerRadius]
  -[CKPinnedConversationRichLinkBubble .cxx_destruct]
  -[CKPinnedConversationRichLinkBubble contentSizeCategoryDidChange:]
  -[CKPinnedConversationRichLinkBubble linkView]
  -[CKPinnedConversationRichLinkBubble linkViewNeedsResize:]
  -[CKPinnedConversationRichLinkBubble pillCornerRadius]
  -[CKPinnedConversationRichLinkBubble setLinkView:]
  -[CKPinnedConversationRichLinkBubble _linkViewFromActivityItem:]
  -[CKPinnedConversationRichLinkBubble _updateLinkMetadata]
  -[CKPinnedConversationRichLinkBubble richLinkActivityItem]


CKPinnedConversationRichLinkActivityItem : NSObject <CKPinnedConversationActivityItem>
 @property  IMMessage *message
 @property  IMChatContext *chatContext
 @property  NSString *attachedContactItemIdentifier
 @property  LPLinkView *linkView
 @property  NSString *activityItemIdentifier
 @property  BOOL activityItemAppearsWithAnimation
 @property  BOOL activityItemDisappearsWithAnimation
 @property  double activityItemContentScale
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKPinnedConversationRichLinkActivityItem initWithLinkView:]
  -[CKPinnedConversationRichLinkActivityItem activityItemIdentifier]
  -[CKPinnedConversationRichLinkActivityItem activityItemView]
  -[CKPinnedConversationRichLinkActivityItem activityItemDisappearsWithAnimation]
  -[CKPinnedConversationRichLinkActivityItem activityItemContentScale]
  -[CKPinnedConversationRichLinkActivityItem activityItemAppearsWithAnimation]
  -[CKPinnedConversationRichLinkActivityItem attachedContactItemIdentifier]
  -[CKPinnedConversationRichLinkActivityItem .cxx_destruct]
  -[CKPinnedConversationRichLinkActivityItem linkView]
  -[CKPinnedConversationRichLinkActivityItem message]
  -[CKPinnedConversationRichLinkActivityItem initWithMessage:chatContext:contentScale:attachedContactItemIdentifier:]
  -[CKPinnedConversationRichLinkActivityItem chatContext]


CKTranscriptCollectionSupplementaryView : UICollectionReusableView <CKTranscriptSupplementaryViewProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKTranscriptCollectionSupplementaryView supplementaryViewKindForGUID:]
  +[CKTranscriptCollectionSupplementaryView reuseIdentifier]
  +[CKTranscriptCollectionSupplementaryView supplementaryViewKindPrefix]

  // instance methods
  -[CKTranscriptCollectionSupplementaryView configureForChatItem:context:]


CKDetailsMacChangeGroupNameCell : CKDetailsCell
 @property  UIImageView *cellGlpyh
 @property  UILabel *changeNameLabel

  // class methods
  +[CKDetailsMacChangeGroupNameCell identifier]

  // instance methods
  -[CKDetailsMacChangeGroupNameCell setChangeNameLabel:]
  -[CKDetailsMacChangeGroupNameCell setCellGlpyh:]
  -[CKDetailsMacChangeGroupNameCell .cxx_destruct]
  -[CKDetailsMacChangeGroupNameCell cellGlpyh]
  -[CKDetailsMacChangeGroupNameCell layoutSubviews]
  -[CKDetailsMacChangeGroupNameCell sizeThatFits:]
  -[CKDetailsMacChangeGroupNameCell initWithStyle:reuseIdentifier:]
  -[CKDetailsMacChangeGroupNameCell changeNameLabel]


CKMessagePartHighlightChatItemCell : CKAssociatedMessageTranscriptCell
 @property  CKMessagePartHighlightBalloonView *highlightBalloonView

  // instance methods
  -[CKMessagePartHighlightChatItemCell highlightBalloonView]
  -[CKMessagePartHighlightChatItemCell performReload:completion:]
  -[CKMessagePartHighlightChatItemCell performRemoval:]
  -[CKMessagePartHighlightChatItemCell setHighlightBalloonView:]
  -[CKMessagePartHighlightChatItemCell performReveal:]
  -[CKMessagePartHighlightChatItemCell prepareForReuse]
  -[CKMessagePartHighlightChatItemCell accessibilityIdentifier]
  -[CKMessagePartHighlightChatItemCell performHide:]
  -[CKMessagePartHighlightChatItemCell configureForChatItem:context:]
  -[CKMessagePartHighlightChatItemCell performInsertion:]
  -[CKMessagePartHighlightChatItemCell layoutSubviewsForAlignmentContents]


CKTranscriptCell : CKEditableCollectionViewCell
 @property  BOOL wantsDrawerLayout
 @property  BOOL orientation
 @property  double drawerPercentRevealed
 @property  double associatedItemOffset
 @property  BOOL shouldConfigureForDarkFSM
 @property  BOOL isInReplyContext
 @property  long long insertionType
 @property  double insertionDuration
 @property  double insertionBeginTime
 @property  BOOL insertingBeforeReplyPreview
 @property  BOOL insertingWithReplyPreview
 @property  BOOL suppressAnimationsForLineUpdates

  // instance methods
  -[CKTranscriptCell clearFilters]
  -[CKTranscriptCell setOrientation:]
  -[CKTranscriptCell shouldConfigureForDarkFSM]
  -[CKTranscriptCell performReload:completion:]
  -[CKTranscriptCell performRemoval:]
  -[CKTranscriptCell setSuppressAnimationsForLineUpdates:]
  -[CKTranscriptCell setInsertionBeginTime:]
  -[CKTranscriptCell setInsertingWithReplyPreview:]
  -[CKTranscriptCell setInsertingBeforeReplyPreview:]
  -[CKTranscriptCell insertionBeginTime]
  -[CKTranscriptCell insertingBeforeReplyPreview]
  -[CKTranscriptCell insertionDuration]
  -[CKTranscriptCell insertingWithReplyPreview]
  -[CKTranscriptCell isInReplyContext]
  -[CKTranscriptCell layoutSubviews]
  -[CKTranscriptCell performReveal:]
  -[CKTranscriptCell wantsDrawerLayout]
  -[CKTranscriptCell prepareForReuse]
  -[CKTranscriptCell orientation]
  -[CKTranscriptCell addFilter:]
  -[CKTranscriptCell initWithFrame:]
  -[CKTranscriptCell setDrawerPercentRevealed:]
  -[CKTranscriptCell layoutSubviewsForDrawer]
  -[CKTranscriptCell associatedItemOffset]
  -[CKTranscriptCell setIsInReplyContext:]
  -[CKTranscriptCell setShouldConfigureForDarkFSM:]
  -[CKTranscriptCell performHide:]
  -[CKTranscriptCell insertionType]
  -[CKTranscriptCell configureForChatItem:context:]
  -[CKTranscriptCell setAssociatedItemOffset:]
  -[CKTranscriptCell setWantsDrawerLayout:]
  -[CKTranscriptCell setInsertionType:]
  -[CKTranscriptCell suppressesAnimationsForLineUpdates]
  -[CKTranscriptCell performInsertion:]
  -[CKTranscriptCell drawerPercentRevealed]
  -[CKTranscriptCell __im_ff_commSafetyUIEnabled]
  -[CKTranscriptCell layoutSubviewsForContents]
  -[CKTranscriptCell layoutSubviewsForAlignmentContents]
  -[CKTranscriptCell setInsertionDuration:]


CKSpotlightQueryResult : NSObject <QLPreviewItem>
 @property  NSString *identifier
 @property  CSSearchableItem *item
 @property  CKConversation *conversation
 @property  NSString *messageGUID
 @property  LPLinkMetadata *linkMetadata
 @property  NSURL *previewItemURL
 @property  NSString *previewItemTitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKSpotlightQueryResult setItem:]
  -[CKSpotlightQueryResult .cxx_destruct]
  -[CKSpotlightQueryResult messageGUID]
  -[CKSpotlightQueryResult item]
  -[CKSpotlightQueryResult isEqual:]
  -[CKSpotlightQueryResult identifier]
  -[CKSpotlightQueryResult previewItemURL]
  -[CKSpotlightQueryResult previewItemTitle]
  -[CKSpotlightQueryResult setConversation:]
  -[CKSpotlightQueryResult setIdentifier:]
  -[CKSpotlightQueryResult linkMetadata]
  -[CKSpotlightQueryResult initWithSearchableItem:inSection:withConversation:]
  -[CKSpotlightQueryResult setLinkMetadata:]
  -[CKSpotlightQueryResult conversation]


CKZKWQueryResult : CKSpotlightQueryResult
  // instance methods
  -[CKZKWQueryResult initWithSearchableItem:inSection:withConversation:]


CKSearchActivityItemProvider : UIActivityItemProvider
 @property  id payload
 @property  LPLinkMetadata *metadata

  // instance methods
  -[CKSearchActivityItemProvider setPayload:]
  -[CKSearchActivityItemProvider payload]
  -[CKSearchActivityItemProvider .cxx_destruct]
  -[CKSearchActivityItemProvider activityViewController:itemForActivityType:]
  -[CKSearchActivityItemProvider item]
  -[CKSearchActivityItemProvider activityViewControllerLinkMetadata:]
  -[CKSearchActivityItemProvider metadata]
  -[CKSearchActivityItemProvider setMetadata:]
  -[CKSearchActivityItemProvider initWithPlaceholderItem:metadata:]
  -[CKSearchActivityItemProvider activityViewControllerPlaceholderItem:]


CKSpotlightQueryUtilities : NSObject
  // class methods
  +[CKSpotlightQueryUtilities stringByEscapingSearchString:]
  +[CKSpotlightQueryUtilities rankingQueryForField:matchType:searchString:]
  +[CKSpotlightQueryUtilities countOfNonSpaceCharsInSearchString:]
  +[CKSpotlightQueryUtilities rankingQueriesForSearchString:attributes:]
  +[CKSpotlightQueryUtilities queryStringByOringSubqueries:]
  +[CKSpotlightQueryUtilities detailsSearchControllers]
  +[CKSpotlightQueryUtilities annotatedResultStringWithSearchText:resultText:primaryTextColor:primaryFont:annotatedTextColor:annotatedFont:]
  +[CKSpotlightQueryUtilities queryStringForSearchString:attributes:matchType:]
  +[CKSpotlightQueryUtilities defaultSearchControllers]
  +[CKSpotlightQueryUtilities matchedRankingQueriesForResult:withRankingQueryCount:maxRankingQuery:]

  // instance methods
  -[CKSpotlightQueryUtilities __im_ff_isInterstellarEnabled]


CKSpotlightQueryResultUtilities : NSObject
  // class methods
  +[CKSpotlightQueryResultUtilities coordinateForResult:]
  +[CKSpotlightQueryResultUtilities contactForResult:]


CKInboxViewController : UIViewController <UITextViewDelegate, UICollectionViewDelegate>
 @property  UIViewController<CKConversationListControllerProtocol> *conversationListController
 @property  UICollectionViewDiffableDataSource *collectionViewDataSource
 @property  UICollectionView *collectionView
 @property  NSMutableArray *tableCellDataArray
 @property  NSMutableArray *categoriesCellDataArray
 @property  NSMutableArray *junkCellDataArray
 @property  NSMutableArray *footerCellDataArray
 @property  UITextView *stickyFooterTextView
 @property  UITextView *scrollingFooterTextView
 @property  long long primaryIndexSection
 @property  long long categoriesIndexSection
 @property  long long junkIndexSection
 @property  long long footerIndexSection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKInboxViewController initWithConversationListController:]
  -[CKInboxViewController junkIndexSection]
  -[CKInboxViewController collectionView:didSelectItemAtIndexPath:]
  -[CKInboxViewController _spamFilteringStateChanged]
  -[CKInboxViewController primaryIndexSection]
  -[CKInboxViewController collectionViewDataSource]
  -[CKInboxViewController reloadCollectionViewDataWithConversationListUpdate:]
  -[CKInboxViewController _highlightCurrentfilterMode]
  -[CKInboxViewController shouldHideInboxFooterTextView]
  -[CKInboxViewController stickyFooterTextView]
  -[CKInboxViewController categoriesIndexSection]
  -[CKInboxViewController _spamFilteringEnabled]
  -[CKInboxViewController _setHeaderAttributedString]
  -[CKInboxViewController _unreadCountStringForIndexPath:]
  -[CKInboxViewController scrollingFooterTextView]
  -[CKInboxViewController _filterModeForIndexPath:]
  -[CKInboxViewController _indexPathForFilterMode:]
  -[CKInboxViewController footerTextView]
  -[CKInboxViewController setPrimaryIndexSection:]
  -[CKInboxViewController tableCellDataArray]
  -[CKInboxViewController setCategoriesIndexSection:]
  -[CKInboxViewController setJunkIndexSection:]
  -[CKInboxViewController categoriesCellDataArray]
  -[CKInboxViewController junkCellDataArray]
  -[CKInboxViewController reloadCollectionViewData]
  -[CKInboxViewController _getHeaderStringForExtension:]
  -[CKInboxViewController footerCellDataArray]
  -[CKInboxViewController setTableCellDataArray:]
  -[CKInboxViewController setCategoriesCellDataArray:]
  -[CKInboxViewController setJunkCellDataArray:]
  -[CKInboxViewController setFooterCellDataArray:]
  -[CKInboxViewController setStickyFooterTextView:]
  -[CKInboxViewController setScrollingFooterTextView:]
  -[CKInboxViewController footerIndexSection]
  -[CKInboxViewController setFooterIndexSection:]
  -[CKInboxViewController _conversationList]
  -[CKInboxViewController .cxx_destruct]
  -[CKInboxViewController viewDidLoad]
  -[CKInboxViewController conversationListController]
  -[CKInboxViewController _chatUnreadCountDidChange:]
  -[CKInboxViewController viewDidAppear:]
  -[CKInboxViewController setConversationListController:]
  -[CKInboxViewController updateBackButton]
  -[CKInboxViewController collectionView]
  -[CKInboxViewController textView:shouldInteractWithURL:inRange:interaction:]
  -[CKInboxViewController setCollectionView:]
  -[CKInboxViewController viewWillDisappear:]
  -[CKInboxViewController viewDidLayoutSubviews]
  -[CKInboxViewController viewWillAppear:]
  -[CKInboxViewController setCollectionViewDataSource:]
  -[CKInboxViewController _contentSizeCategoryChanged]
  -[CKInboxViewController _getSpamExtensionName]


CKTranscriptPluginChatItem : CKMessagePartChatItem
 @property  IMTranscriptPluginChatItem *imTranscriptPluginChatItem
 @property  BOOL isHandwriting
 @property  NSString *conversationID
 @property  NSArray *recipients
 @property  BOOL isBusiness
 @property  BOOL wantsTranscriptGroupMonograms
 @property  BOOL wantsBalloonGradient
 @property  NSString *bundleIdentifier
 @property  BOOL wantsOutline
 @property  IMTranscriptPluginChatItem *IMChatItem
 @property  BOOL isPlayed
 @property  BOOL isSaved
 @property  BOOL isAppearing

  // instance methods
  -[CKTranscriptPluginChatItem layoutType]
  -[CKTranscriptPluginChatItem contentViewControllerForContext:]
  -[CKTranscriptPluginChatItem conversationID]
  -[CKTranscriptPluginChatItem isAppearing]
  -[CKTranscriptPluginChatItem isPlayed]
  -[CKTranscriptPluginChatItem bundleIdentifier]
  -[CKTranscriptPluginChatItem setIsBusiness:]
  -[CKTranscriptPluginChatItem transcriptOrientation]
  -[CKTranscriptPluginChatItem setRecipients:]
  -[CKTranscriptPluginChatItem shouldSnapshot]
  -[CKTranscriptPluginChatItem configureWithConversationID:recipients:isBusiness:context:]
  -[CKTranscriptPluginChatItem contentInsets]
  -[CKTranscriptPluginChatItem imTranscriptPluginChatItem]
  -[CKTranscriptPluginChatItem setImTranscriptPluginChatItem:]
  -[CKTranscriptPluginChatItem _configureBalloonController:conversationID:recipients:isBusiness:]
  -[CKTranscriptPluginChatItem _cacheConversationID:recipients:isBusiness:]
  -[CKTranscriptPluginChatItem isHandwriting]
  -[CKTranscriptPluginChatItem .cxx_destruct]
  -[CKTranscriptPluginChatItem snapshotGUIDForPluginPayload:]
  -[CKTranscriptPluginChatItem canInlineReply]
  -[CKTranscriptPluginChatItem menuTitle]
  -[CKTranscriptPluginChatItem releaseBalloonControllerIfNeededForContext:]
  -[CKTranscriptPluginChatItem pluginDisplayContainerForContext:]
  -[CKTranscriptPluginChatItem sender]
  -[CKTranscriptPluginChatItem initWithIMChatItem:maxWidth:]
  -[CKTranscriptPluginChatItem wantsOutline]
  -[CKTranscriptPluginChatItem balloonViewClass]
  -[CKTranscriptPluginChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKTranscriptPluginChatItem canCopy]
  -[CKTranscriptPluginChatItem recipients]
  -[CKTranscriptPluginChatItem wantsBalloonGradient]
  -[CKTranscriptPluginChatItem setConversationID:]
  -[CKTranscriptPluginChatItem message]
  -[CKTranscriptPluginChatItem loadSizeThatFits:textAlignmentInsets:]
  -[CKTranscriptPluginChatItem loadTranscriptDrawerText]
  -[CKTranscriptPluginChatItem cellIdentifier]
  -[CKTranscriptPluginChatItem performHostAppResumeWithContext:]
  -[CKTranscriptPluginChatItem dragItemProvider]
  -[CKTranscriptPluginChatItem extensibleViewForContext:]
  -[CKTranscriptPluginChatItem extensibleViewControllerForContext:]
  -[CKTranscriptPluginChatItem relinquishBalloonControllerForContext:]
  -[CKTranscriptPluginChatItem balloonControllerForContext:]
  -[CKTranscriptPluginChatItem isSaved]
  -[CKTranscriptPluginChatItem cellClass]
  -[CKTranscriptPluginChatItem setIsAppearing:]
  -[CKTranscriptPluginChatItem wantsTranscriptGroupMonograms]
  -[CKTranscriptPluginChatItem contact]
  -[CKTranscriptPluginChatItem canForward]
  -[CKTranscriptPluginChatItem isBusiness]
  -[CKTranscriptPluginChatItem textAlignmentInsets]
  -[CKTranscriptPluginChatItem rtfDocumentItemsWithFormatString:selectedTextRange:]
  -[CKTranscriptPluginChatItem compositionWithContext:]


CKNanoReplyGenerator : NSObject
  // class methods
  +[CKNanoReplyGenerator _repliesForMessage:recipients:time:languageCode:loadAsync:completion:]
  +[CKNanoReplyGenerator _cannedRepliesForLanguage:]
  +[CKNanoReplyGenerator repliesForMessage:recipients:time:languageCode:]
  +[CKNanoReplyGenerator _contextualRepliesForMessage:recipients:time:languageCode:loadAsync:completion:]
  +[CKNanoReplyGenerator repliesForMessage:recipients:time:languageCode:completion:]
  +[CKNanoReplyGenerator primeResponseKitIfNeeded]


CKSOSMessage : NSObject <NSCopying>
 @property  NSArray *handles
 @property  NSString *message
 @property  NSString *smsMessage
 @property  NSString *mmsMessage
 @property  CLLocation *location
 @property  NSString *locationURL
 @property  NSArray *recipients
 @property  @? failureBlock
 @property  BOOL useStandalone

  // instance methods
  -[CKSOSMessage setHandles:]
  -[CKSOSMessage smsMessage]
  -[CKSOSMessage setRecipients:]
  -[CKSOSMessage .cxx_destruct]
  -[CKSOSMessage setFailureBlock:]
  -[CKSOSMessage setSmsMessage:]
  -[CKSOSMessage setMessage:]
  -[CKSOSMessage setLocation:]
  -[CKSOSMessage setMmsMessage:]
  -[CKSOSMessage setUseStandalone:]
  -[CKSOSMessage initWithMessage:recipients:]
  -[CKSOSMessage initWithSMSMessage:mmsMessage:recipients:]
  -[CKSOSMessage useStandalone]
  -[CKSOSMessage setLocationURL:]
  -[CKSOSMessage recipients]
  -[CKSOSMessage message]
  -[CKSOSMessage location]
  -[CKSOSMessage locationURL]
  -[CKSOSMessage handles]
  -[CKSOSMessage copyWithZone:]
  -[CKSOSMessage failureBlock]
  -[CKSOSMessage mmsMessage]


CKSOSUtilities : NSObject
 @property  BOOL MMSEnabled

  // class methods
  +[CKSOSUtilities sendMessage:location:recipients:]
  +[CKSOSUtilities sendMessage:location:recipients:failureHandler:]
  +[CKSOSUtilities sharedUtilities]

  // instance methods
  -[CKSOSUtilities __im_ff_chatCacheEnabled]
  -[CKSOSUtilities sendMessage:]
  -[CKSOSUtilities isMMSEnabled]
  -[CKSOSUtilities sendMessage:location:recipients:]
  -[CKSOSUtilities sendMessage:location:recipients:failureHandler:]
  -[CKSOSUtilities _sendMessageAndObserveNotification:]
  -[CKSOSUtilities _sendMessageAndReturnGUIDs:]
  -[CKSOSUtilities sendComposition:toConversation:useStandalone:]
  -[CKSOSUtilities isMobileKeyBagDisabledOrDeviceUnlockedSinceBoot]
  -[CKSOSUtilities _uniqueFilePathForFilename:]


CKCanvasBackButtonView : UIControl <_UICursorInteractionDelegate>
 @property  UIImageView *backButtonView
 @property  UILabel *titleLabel
 @property  UIView *titlePaddingView
 @property  BOOL shouldShowTitlePaddingView
 @property  UIColor *titleLabelColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKCanvasBackButtonView setHighlighted:]
  -[CKCanvasBackButtonView cursorInteraction:styleForRegion:modifiers:]
  -[CKCanvasBackButtonView titleLabel]
  -[CKCanvasBackButtonView .cxx_destruct]
  -[CKCanvasBackButtonView setTitleLabel:]
  -[CKCanvasBackButtonView sizeToFit]
  -[CKCanvasBackButtonView layoutSubviews]
  -[CKCanvasBackButtonView titlePaddingView]
  -[CKCanvasBackButtonView setShouldShowTitlePaddingView:]
  -[CKCanvasBackButtonView _setVisuallyHighlighted:]
  -[CKCanvasBackButtonView setTitlePaddingView:]
  -[CKCanvasBackButtonView shouldShowTitlePaddingView]
  -[CKCanvasBackButtonView _titlePaddingViewSizeForTitle]
  -[CKCanvasBackButtonView tintColorDidChange]
  -[CKCanvasBackButtonView initWithFrame:showPaddingTitleView:]
  -[CKCanvasBackButtonView setTitleLabelColor:]
  -[CKCanvasBackButtonView setBackButtonView:]
  -[CKCanvasBackButtonView sizeThatFits:]
  -[CKCanvasBackButtonView titleLabelColor]
  -[CKCanvasBackButtonView backButtonView]
  -[CKCanvasBackButtonView setBackButtonTitle:]
  -[CKCanvasBackButtonView cursorInteraction:regionForLocation:defaultRegion:]
  -[CKCanvasBackButtonView wantsChromelessAppearance]


CKBrowserAppInstallCell : CKBrowserCell
 @property  CKBrowserIconView *browserIconView
 @property  CKAppInstallation *installation

  // class methods
  +[CKBrowserAppInstallCell reuseIdentifier]

  // instance methods
  -[CKBrowserAppInstallCell .cxx_destruct]
  -[CKBrowserAppInstallCell layoutSubviews]
  -[CKBrowserAppInstallCell browserIconView]
  -[CKBrowserAppInstallCell setBrowserIconView:]
  -[CKBrowserAppInstallCell installation]
  -[CKBrowserAppInstallCell setInstallation:]
  -[CKBrowserAppInstallCell iconView]


CKCloudKitAccountRepairController : NSObject <AAUIDeviceToDeviceEncryptionHelperDelegate>
 @property  AAUIDeviceToDeviceEncryptionHelper *encryptionHelper
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKCloudKitAccountRepairController accountStore]
  -[CKCloudKitAccountRepairController .cxx_destruct]
  -[CKCloudKitAccountRepairController encryptionHelper]
  -[CKCloudKitAccountRepairController authenticationContextClass]
  -[CKCloudKitAccountRepairController AKSecurityUpgradeContextMessages]
  -[CKCloudKitAccountRepairController AAUIDeviceToDeviceEncryptionHelperWithPresentingViewController:]
  -[CKCloudKitAccountRepairController setEncryptionHelper:]
  -[CKCloudKitAccountRepairController deviceToDeviceEncryptionHelper:shouldContinueUpgradingUserToHSA2WithCompletion:]
  -[CKCloudKitAccountRepairController beginRepairWithPresentingViewController:completion:]
  -[CKCloudKitAccountRepairController authenticationContext]
  -[CKCloudKitAccountRepairController primaryAppleAccount]


CKDetailsContactsManager : NSObject
 @property  CKConversation *conversation
 @property  NSString *serviceAvailabilityKey
 @property  NSDictionary *facetimeIDStatuses
 @property  NSDictionary *facetimeAudioIDStatuses
 @property  NSDictionary *screenSharingIDSStatuses
 @property  NSArray *contactsViewModels
 @property  NSArray *contacts
 @property  <CKDetailsContactsManagerDelegate> *delegate

  // instance methods
  -[CKDetailsContactsManager conversationContextMenuConfigForEntity:allowConversationRemoval:]
  -[CKDetailsContactsManager .cxx_destruct]
  -[CKDetailsContactsManager _handleConversationRecipientsDidChange:]
  -[CKDetailsContactsManager startCommunicationForEntity:action:address:usePreferredRouteIfAvailable:]
  -[CKDetailsContactsManager startCommunicationForViewModel:action:address:]
  -[CKDetailsContactsManager callMenuForEntity:]
  -[CKDetailsContactsManager sendEmail]
  -[CKDetailsContactsManager setDelegate:]
  -[CKDetailsContactsManager callActionsForEntity:]
  -[CKDetailsContactsManager _handleLocationChanged:]
  -[CKDetailsContactsManager conversationContextMenuForEntity:allowConversationRemoval:]
  -[CKDetailsContactsManager setServiceAvailabilityKey:]
  -[CKDetailsContactsManager serviceAvailabilityKey]
  -[CKDetailsContactsManager _handleConversationPendingRecipientsDidChange:]
  -[CKDetailsContactsManager _handleMultiwayStateChanged:]
  -[CKDetailsContactsManager _updateViewModelsWithDelay:]
  -[CKDetailsContactsManager _refreshIDSStatusWithCompletion:]
  -[CKDetailsContactsManager _performUpdateViewModels]
  -[CKDetailsContactsManager _isHandleActiveParticipantInTUConversation:]
  -[CKDetailsContactsManager setContactsViewModels:]
  -[CKDetailsContactsManager _showMessageButtonForEntity:]
  -[CKDetailsContactsManager _showFaceTimeVideoButtonForEntity:]
  -[CKDetailsContactsManager _showPhoneButtonForEntity:]
  -[CKDetailsContactsManager showScreenSharingButtonForEntity:]
  -[CKDetailsContactsManager _startMessageWithEntity:]
  -[CKDetailsContactsManager contextMenuForUnknownRecipient:atom:]
  -[CKDetailsContactsManager isFaceTimeAudioAvailableForEntity:]
  -[CKDetailsContactsManager callableAddressesForEntity:withResult:]
  -[CKDetailsContactsManager conversationContextMenuForUnknownEntity:allowConversationRemoval:showUnknownContactActionInPopover:unknownContactActionHandler:]
  -[CKDetailsContactsManager preferredCallServiceForID:]
  -[CKDetailsContactsManager initWithConversation:delegate:]
  -[CKDetailsContactsManager hasPreferredCallServiceForEntity:]
  -[CKDetailsContactsManager _startCommunicationForEntity:usePreferredRouteIfAvailable:]
  -[CKDetailsContactsManager _startFacetimeCommunicationForEntity:audioOnly:]
  -[CKDetailsContactsManager _startCallWithEntity:phoneAddress:]
  -[CKDetailsContactsManager _shareMyScreenWithEntity:]
  -[CKDetailsContactsManager _inviteEntityToShareTheirScreen:]
  -[CKDetailsContactsManager startCommunicationForEntity:action:address:]
  -[CKDetailsContactsManager shouldAlwaysShowCallMenuForEntity:]
  -[CKDetailsContactsManager startAudioCommunicationUsingPreferredRouteIfAvailable:]
  -[CKDetailsContactsManager isTelephonyCallAvailableForEntity:]
  -[CKDetailsContactsManager _facetimeIDStatusForEntity:]
  -[CKDetailsContactsManager _hasLinkedTelephoneNumbersForEntity:]
  -[CKDetailsContactsManager facetimeAudioIDStatuses]
  -[CKDetailsContactsManager _screenSharingStatusForEntity:]
  -[CKDetailsContactsManager facetimeIDStatuses]
  -[CKDetailsContactsManager screenSharingIDSStatuses]
  -[CKDetailsContactsManager setFacetimeIDStatuses:]
  -[CKDetailsContactsManager setFacetimeAudioIDStatuses:]
  -[CKDetailsContactsManager setScreenSharingIDSStatuses:]
  -[CKDetailsContactsManager _preferredRoutesDisabledViaServerBag]
  -[CKDetailsContactsManager _preferredCallServiceToIDMap]
  -[CKDetailsContactsManager _setPreferredCallServiceToIDMap:]
  -[CKDetailsContactsManager isFaceTimeVideoAvailableForEntity:]
  -[CKDetailsContactsManager _facetimeAudioIDStatusForEntity:]
  -[CKDetailsContactsManager contextMenuForEntity:atom:]
  -[CKDetailsContactsManager beginFacetimeCallWithVideo:]
  -[CKDetailsContactsManager _callButtonPressedWithVideoEnabled:]
  -[CKDetailsContactsManager _conversationJoinStateDidChange:]
  -[CKDetailsContactsManager __im_ff_isExpanseEnabled]
  -[CKDetailsContactsManager delegate]
  -[CKDetailsContactsManager setConversation:]
  -[CKDetailsContactsManager contacts]
  -[CKDetailsContactsManager setPreferredCallService:forID:]
  -[CKDetailsContactsManager dealloc]
  -[CKDetailsContactsManager _handleAddressBookChange:]
  -[CKDetailsContactsManager conversation]
  -[CKDetailsContactsManager contactsViewModels]


CKInvisibleInkEffectView : UIView <CKInvisibleInkEffectCoverageTrackerDelegate>
 @property  CKInvisibleInkEffectCoverageTracker *coverageTracker
 @property  <CKInvisibleInkEffectViewDelegate> *delegate
 @property  UIImage *image
 @property  BOOL suspended
 @property  BOOL paused
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKInvisibleInkEffectView initialize]
  +[CKInvisibleInkEffectView updateInterval]

  // instance methods
  -[CKInvisibleInkEffectView setSuspended:]
  -[CKInvisibleInkEffectView image]
  -[CKInvisibleInkEffectView .cxx_destruct]
  -[CKInvisibleInkEffectView layoutSubviews]
  -[CKInvisibleInkEffectView moveEmittersForTouchesBegan:]
  -[CKInvisibleInkEffectView moveEmittersForTouchesMoved:]
  -[CKInvisibleInkEffectView endEmittersForTouchesEnded:]
  -[CKInvisibleInkEffectView endEmittersForTouchesCancelled:]
  -[CKInvisibleInkEffectView setDelegate:]
  -[CKInvisibleInkEffectView invisibleInkEffectCoverageTrackerDidUncover:]
  -[CKInvisibleInkEffectView setCoverageTracker:]
  -[CKInvisibleInkEffectView reset]
  -[CKInvisibleInkEffectView setPaused:]
  -[CKInvisibleInkEffectView initWithFrame:]
  -[CKInvisibleInkEffectView delegate]
  -[CKInvisibleInkEffectView setImage:]
  -[CKInvisibleInkEffectView coverageTracker]
  -[CKInvisibleInkEffectView isSuspended]
  -[CKInvisibleInkEffectView isPaused]


CKIMComposeRecipient : CNComposeRecipient <CKIMComposeRecipient>
 @property  IMHandle *handle
 @property  BOOL useAbbreviatedDisplayName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKIMComposeRecipient supportsSecureCoding]

  // instance methods
  -[CKIMComposeRecipient displayString]
  -[CKIMComposeRecipient initWithCoder:]
  -[CKIMComposeRecipient initWithHandle:]
  -[CKIMComposeRecipient setUseAbbreviatedDisplayName:]
  -[CKIMComposeRecipient releaseIMReferences]
  -[CKIMComposeRecipient .cxx_destruct]
  -[CKIMComposeRecipient address]
  -[CKIMComposeRecipient unlocalizedLabel]
  -[CKIMComposeRecipient isEqual:]
  -[CKIMComposeRecipient useAbbreviatedDisplayName]
  -[CKIMComposeRecipient supportedDragTypes]
  -[CKIMComposeRecipient objectForDragType:]
  -[CKIMComposeRecipient compositeName]
  -[CKIMComposeRecipient uncommentedAddress]
  -[CKIMComposeRecipient commentedAddress]
  -[CKIMComposeRecipient isRemovableFromSearchResults]
  -[CKIMComposeRecipient handle]
  -[CKIMComposeRecipient setIdentifier:]
  -[CKIMComposeRecipient copyWithZone:]
  -[CKIMComposeRecipient encodeWithCoder:]


CKIMGroupComposeRecipient : CNComposeRecipientGroup <CKIMComposeRecipient>
 @property  NSString *conversationGUID
 @property  NSArray *handles
 @property  NSString *detailsString
 @property  NSDate *lastMessageDate
 @property  CKIMComposeRecipient *matchingRecipient
 @property  NSArray *composeRecipients
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKIMGroupComposeRecipient supportsSecureCoding]
  +[CKIMGroupComposeRecipient composeRecipientWithConversation:searchTerm:matchingRecipient:]

  // instance methods
  -[CKIMGroupComposeRecipient setHandles:]
  -[CKIMGroupComposeRecipient initWithCoder:]
  -[CKIMGroupComposeRecipient releaseIMReferences]
  -[CKIMGroupComposeRecipient .cxx_destruct]
  -[CKIMGroupComposeRecipient address]
  -[CKIMGroupComposeRecipient detailsString]
  -[CKIMGroupComposeRecipient conversationGUID]
  -[CKIMGroupComposeRecipient setMatchingRecipient:]
  -[CKIMGroupComposeRecipient matchingRecipient]
  -[CKIMGroupComposeRecipient compositeName]
  -[CKIMGroupComposeRecipient initWithGUID:displayString:detailsString:handles:lastMessageDate:searchTerm:matchingRecipient:]
  -[CKIMGroupComposeRecipient setConversationGUID:]
  -[CKIMGroupComposeRecipient setDetailsString:]
  -[CKIMGroupComposeRecipient setLastMessageDate:]
  -[CKIMGroupComposeRecipient composeRecipients]
  -[CKIMGroupComposeRecipient isRemovableFromSearchResults]
  -[CKIMGroupComposeRecipient lastMessageDate]
  -[CKIMGroupComposeRecipient handles]
  -[CKIMGroupComposeRecipient dealloc]
  -[CKIMGroupComposeRecipient copyWithZone:]
  -[CKIMGroupComposeRecipient encodeWithCoder:]


CKIMGroupHeaderRecipient : CKIMComposeRecipient
 @property  NSString *displayString

  // instance methods
  -[CKIMGroupHeaderRecipient displayString]
  -[CKIMGroupHeaderRecipient setDisplayString:]
  -[CKIMGroupHeaderRecipient .cxx_destruct]


CKAssociatedMessageChatItem : CKChatItem
 @property  NSString *timestampString
 @property  NSString *guid
 @property  NSString *associatedChatItemGUID
 @property  BOOL isFromMe
 @property  BOOL parentMessageIsFromMe
 @property  BOOL failed
 @property  {IMAssociatedMessageGeometryDescriptor=QQfffff} geometryDescriptor
 @property  NSDate *time
 @property  IMHandle *sender
 @property  {_NSRange=QQ} associatedMessageRange

  // instance methods
  -[CKAssociatedMessageChatItem transcriptOrientation]
  -[CKAssociatedMessageChatItem guid]
  -[CKAssociatedMessageChatItem geometryDescriptor]
  -[CKAssociatedMessageChatItem parentMessageIsFromMe]
  -[CKAssociatedMessageChatItem .cxx_destruct]
  -[CKAssociatedMessageChatItem timestampString]
  -[CKAssociatedMessageChatItem sender]
  -[CKAssociatedMessageChatItem wantsDrawerLayout]
  -[CKAssociatedMessageChatItem layoutItemSpacingWithEnvironment:datasourceItemIndex:allDatasourceItems:supplementryItems:]
  -[CKAssociatedMessageChatItem IMAssociatedMessageChatItem]
  -[CKAssociatedMessageChatItem isFromMe]
  -[CKAssociatedMessageChatItem loadTimestampString]
  -[CKAssociatedMessageChatItem setTimestampString:]
  -[CKAssociatedMessageChatItem time]
  -[CKAssociatedMessageChatItem loadTranscriptDrawerText]
  -[CKAssociatedMessageChatItem failed]
  -[CKAssociatedMessageChatItem associatedChatItemGUID]
  -[CKAssociatedMessageChatItem associatedMessageRange]


CKAvatarShadowClippingRightCollectionReusableView : CKAvatarShadowClippingCollectionReusableView
  // class methods
  +[CKAvatarShadowClippingRightCollectionReusableView shadowSize]
  +[CKAvatarShadowClippingRightCollectionReusableView decorationViewKind]

  // instance methods
  -[CKAvatarShadowClippingRightCollectionReusableView imageView]


UITableViewController(CKBlackHoleUtilities)
	// instance methods
	-[UITableViewController(CKBlackHoleUtilities) _confirmDeleteConversationFromView:alertTitle:forMultipleConversations:withReportSpamHander:withNotReportSpamHandler:withCancelHandler:]

(CKEntity)
	// instance methods
	-[(CKEntity) __im_canonicalIDSAddressesFromEntities]
	-[(CKEntity) __ck_indexOfChatItemWithGUID:]
	-[(CKEntity) __ck_indexOfMediaObject:]
	-[(CKEntity) __ck_chatItemWithGUID:]
	-[(CKEntity) __ck_proxyWithBundleIdentifier:]
	-[(CKEntity) __ck_unloadSizesAtIndexes:]
	-[(CKEntity) __ck_unloadTranscriptTextAtIndexes:]
	-[(CKEntity) __ck_indexesOfUnplayedAudioMessages]
	-[(CKEntity) __ck_IMChatItemsAtIndexes:]
	-[(CKEntity) __ck_messageForChatItemAtIndex:]
	-[(CKEntity) __ck_indexesOfPartsOfNonAttachmentMessages:]
	-[(CKEntity) __ck_indexesOfPartsOfMessages:]
	-[(CKEntity) __ck_parentChatItemWithMesssageGUID:associatedMessageRange:]
	-[(CKEntity) composeRecipientHandles]
	-[(CKEntity) composeRecipientNormalizedAddresses]
	-[(CKEntity) composeRecipientAddresses]
	-[(CKEntity) __ck_indexOfTransfer:]
	-[(CKEntity) __ck_indexSetForIndexPathRowsInSection:]
	-[(CKEntity) ck_containsObjectIdenticalTo:]
	-[(CKEntity) __ck_indexSetForIndexPathItemsInSection:]
	-[(CKEntity) __ck_indexesOfPartsOfMessage:]
	-[(CKEntity) __ck_indexOfParentChatItemWithMesssageGUID:associatedMessageRange:]
	-[(CKEntity) __ck_commaJoinedValueForKey:]
	-[(CKEntity) __ck_shuffledArray]

(SMSPhoneNumberNormalization)
	// class methods
	+[(SMSPhoneNumberNormalization) __ck_appleMapsURLStringForCoordinate:coordinateName:]

	// instance methods
	-[(SMSPhoneNumberNormalization) mentionsSafeText]
	-[(SMSPhoneNumberNormalization) __ck_stringByExpandingTildeInPath]
	-[(SMSPhoneNumberNormalization) ck_isSiriRecognizableWithLanguageCode:]
	-[(SMSPhoneNumberNormalization) __ck_shouldUseBigEmoji]
	-[(SMSPhoneNumberNormalization) unformattedPhoneNumber]
	-[(SMSPhoneNumberNormalization) isAddressBookLabel]
	-[(SMSPhoneNumberNormalization) __ck_containsOnlyCharactersFromSet:]
	-[(SMSPhoneNumberNormalization) __ck_rangeOfSequenceOfCharactersFromSet:options:range:]

CPMessageListItem(CKConversation)
	// instance methods
	-[CPMessageListItem(CKConversation) _dateStringFromDate:dateFormatter:timeFormatter:]
	-[CPMessageListItem(CKConversation) initWithConversation:dateFormatter:timeFormatter:]
	-[CPMessageListItem(CKConversation) _conversation]

CNContact(CKAdditions)
	// instance methods
	-[CNContact(CKAdditions) identifierForKey:withDestination:]

(ChatKitAdditions)
	// class methods
	+[(ChatKitAdditions) __ck_appleMapsURLForCoordinate:coordinateName:]
	+[(ChatKitAdditions) ckURLForResource:withExtension:]
	+[(ChatKitAdditions) ckURLForChatIdentifier:entryBody:]
	+[(ChatKitAdditions) ckSMSURLFromBusinessChatURL:]

	// instance methods
	-[(ChatKitAdditions) ckLaunchURLBalloonPluginBundleID]
	-[(ChatKitAdditions) ckLaunchURLBalloonPluginPayload]
	-[(ChatKitAdditions) ckShouldShowComposeUI]
	-[(ChatKitAdditions) ckIsSMSPrivateURLScheme]
	-[(ChatKitAdditions) ckWillNotLaunchComposeUIURL]
	-[(ChatKitAdditions) ckShouldShowDigitalTouchCanvas]
	-[(ChatKitAdditions) ckAllowRetargeting]
	-[(ChatKitAdditions) ckIsLaunchAppURL]
	-[(ChatKitAdditions) ckIsUnitTestingURL]
	-[(ChatKitAdditions) ckLaunchURLPostComposeDismissal]
	-[(ChatKitAdditions) ckSuggestedReplies]
	-[(ChatKitAdditions) ckLaunchURLPresentContentForMessageGUID]

UIImage(ChatKitAdditions)
	// class methods
	+[UIImage(ChatKitAdditions) ckImageNamed:]
	+[UIImage(ChatKitAdditions) badgeIconForImageNamed:inBundle:]
	+[UIImage(ChatKitAdditions) placeholderExtensionIcon]
	+[UIImage(ChatKitAdditions) ckImageWithData:]
	+[UIImage(ChatKitAdditions) ckTemplateImageNamed:]
	+[UIImage(ChatKitAdditions) abImageNamed:]
	+[UIImage(ChatKitAdditions) ckImageNamed:compatibleWithTraitCollection:]
	+[UIImage(ChatKitAdditions) ckColorImageOfSize:withColor:]
	+[UIImage(ChatKitAdditions) ckImageNamed:withTintColor:]
	+[UIImage(ChatKitAdditions) __ck_actionImageForSubscriptionShortName:maxSubscriptionLabelWidth:]

	// instance methods
	-[UIImage(ChatKitAdditions) discardContentIfPossible]
	-[UIImage(ChatKitAdditions) isContentDiscarded]
	-[UIImage(ChatKitAdditions) iconForInterfaceStyle:]
	-[UIImage(ChatKitAdditions) endContentAccess]
	-[UIImage(ChatKitAdditions) decode]
	-[UIImage(ChatKitAdditions) ckImageWithTintColor:]
	-[UIImage(ChatKitAdditions) beginContentAccess]
	-[UIImage(ChatKitAdditions) __ck_contentsCenter]
	-[UIImage(ChatKitAdditions) __ck_imageWithOrientation:]
	-[UIImage(ChatKitAdditions) __ck_ASTCRepresentation]
	-[UIImage(ChatKitAdditions) __ck_resizableBalloonWithBalloonDescriptor:framed:]
	-[UIImage(ChatKitAdditions) ck_imageCroppedToCircle]

UIColor(ChatKitAdditions)
	// class methods
	+[UIColor(ChatKitAdditions) ckColorNamed:]
	+[UIColor(ChatKitAdditions) dynamicColorWithLightColor:darkColor:]
	+[UIColor(ChatKitAdditions) _ckSystemBackgroundColor]
	+[UIColor(ChatKitAdditions) _ckColor:forUserInterfaceStyle:]
	+[UIColor(ChatKitAdditions) _ckSecondarySystemBackgroundColor]
	+[UIColor(ChatKitAdditions) _ckTertiarySystemBackgroundColor]
	+[UIColor(ChatKitAdditions) _ckSecondarySystemGroupedBackgroundColor]
	+[UIColor(ChatKitAdditions) _ckSystemGroupedBackgroundColor]

	// instance methods
	-[UIColor(ChatKitAdditions) resolvedColorForTraitCollection:]
	-[UIColor(ChatKitAdditions) colorByBlendingWithColor:]
	-[UIColor(ChatKitAdditions) colorByBlendingWithColor:withFraction:]

UIButtonConfiguration(ChatKitAdditions)
	// class methods
	+[UIButtonConfiguration(ChatKitAdditions) ckCreateButtonConfigurationWithType:withTitle:withFont:]
	+[UIButtonConfiguration(ChatKitAdditions) ckCreateButtonConfigurationWithType:withImage:]
	+[UIButtonConfiguration(ChatKitAdditions) ckCreateButtonConfigurationWithType:withImage:withTitle:withFont:]
	+[UIButtonConfiguration(ChatKitAdditions) ckCreateButtonConfigurationWithType:withTitle:]

UIScrollView(CKUtilities)
	// instance methods
	-[UIScrollView(CKUtilities) __ck_scrollToTop:]
	-[UIScrollView(CKUtilities) __ck_scrollToBottom:]
	-[UIScrollView(CKUtilities) __ck_isScrolledToTop]
	-[UIScrollView(CKUtilities) __ck_scrollToTopContentOffset]
	-[UIScrollView(CKUtilities) __ck_contentSize]
	-[UIScrollView(CKUtilities) __ck_scrollToBottomContentOffset]
	-[UIScrollView(CKUtilities) __ck_isVerticallyRubberBanding]
	-[UIScrollView(CKUtilities) __ck_isScrolledToBottom]

UITableView(CKUtilities)
	// instance methods
	-[UITableView(CKUtilities) __ck_contentSize]
	-[UITableView(CKUtilities) __ck_indexPathForLastRow]

UICollectionView(CKUtilities)
	// instance methods
	-[UICollectionView(CKUtilities) __ck_reloadDataKeepingSelection]
	-[UICollectionView(CKUtilities) __ck_contentSize]
	-[UICollectionView(CKUtilities) __ck_scrollToBottomContentOffsetHidingIndexPath:]
	-[UICollectionView(CKUtilities) __ck_indexPathForLastItem]
	-[UICollectionView(CKUtilities) __ck_indexPathForReplyItem]
	-[UICollectionView(CKUtilities) __ck_isScrolledToBottomHidingIndexPath:]
	-[UICollectionView(CKUtilities) __ck_scrollToTopOfCellAtIndexPath:hidingCellAtIndexPath:animated:]

(CKUtilities)
	// instance methods
	-[(CKUtilities) containsAttribute:]

(CKUtilities)
	// instance methods
	-[(CKUtilities) __ck_localizedAppName]

NSIndexSet(CKUtilities)
	// instance methods
	-[NSIndexSet(CKUtilities) __ck_indexPathRowsInSection:]
	-[NSIndexSet(CKUtilities) __ck_indexPathItemsInSection:]
	-[NSIndexSet(CKUtilities) __ck_enumerateIndexesByProximityToIndex:usingBlock:]
	-[NSIndexSet(CKUtilities) __ck_indexSetShiftedForInsertedIndexes:removedIndexes:]

<DEREK BUG Categories!>(CKUtilities)
	// instance methods
	-[<DEREK BUG Categories!>(CKUtilities) __ck_intersectIndexes:]

NSIndexPath(CKUtilities)
	// instance methods
	-[NSIndexPath(CKUtilities) __ck_indexPathShiftedForInsertedIndexes:deletedIndexes:]

UIView(CKUtilities)
	// instance methods
	-[UIView(CKUtilities) __ck_addEqualityConstraintWithItem:toItem:usingAttribute:]
	-[UIView(CKUtilities) setGradientViewsNeedLayout]
	-[UIView(CKUtilities) layoutGradientViewsIfNeeded]
	-[UIView(CKUtilities) messageAcknowledgmentBounceView:]
	-[UIView(CKUtilities) messageAcknowledgmentShrinkViewToPoint:completion:]
	-[UIView(CKUtilities) pointMostlyInside:threshold:velocity:]
	-[UIView(CKUtilities) __ck_alignmentRectSizeForFrameSize:]
	-[UIView(CKUtilities) __ck_makeEdgesEqualTo:]
	-[UIView(CKUtilities) __ck_containsFirstResponder]
	-[UIView(CKUtilities) __ck_frameSizeForAlignmentRectSize:]

(CKUtilities)
	// class methods
	+[(CKUtilities) __ck_currentCalendar]
	+[(CKUtilities) __ck_setTestCalendar:]

	// instance methods
	-[(CKUtilities) __ck_unitOfDisambiguityFromDate:toDate:]

(CKUtilities)
	// class methods
	+[(CKUtilities) __ck_currentLocale]
	+[(CKUtilities) __ck_setTestLocale:]

(CKUtilities)
	// instance methods
	-[(CKUtilities) __ck_localizedString]

UIFont(CKUtilities)
	// class methods
	+[UIFont(CKUtilities) _interpolatedAdditionalFontSizeForMainScreen]
	+[UIFont(CKUtilities) ck_cui_cameraFontOfSize:]
	+[UIFont(CKUtilities) ck_cui_cameraFontForContentSize:]
	+[UIFont(CKUtilities) ck_cui_cameraTimerFontForContentSize:]
	+[UIFont(CKUtilities) ck_cui_cameraModeDialFontForContentSize:]
	+[UIFont(CKUtilities) ck_cui_cameraModeDialApproximateFontForContentSize:]
	+[UIFont(CKUtilities) ck_cui_cameraPadModeDialFontForContentSize:]
	+[UIFont(CKUtilities) ck_cui_cameraKerningForFont:]
	+[UIFont(CKUtilities) __ck_emphasizedFontFromFont:]
	+[UIFont(CKUtilities) __ck_emphasizedPreferredFontForTextStyle:]
	+[UIFont(CKUtilities) __ck_shortPreferredFontForTextStyle:size:]
	+[UIFont(CKUtilities) __ck_monospacedPreferredFontForTextStyle:]
	+[UIFont(CKUtilities) __ck_shortPreferredFontForTextStyle:]
	+[UIFont(CKUtilities) __ck_shortMonospacedPreferredFontForTextStyle:]
	+[UIFont(CKUtilities) __ck_shortDefaultFontForTextStyle:]
	+[UIFont(CKUtilities) __ck_shortEmphasizedPreferredFontForTextStyle:]
	+[UIFont(CKUtilities) __ck_fontForStyle:weight:]

	// instance methods
	-[UIFont(CKUtilities) __ck_fontScaledByUserPreference]

UIKeyboard(CKUtilities)
	// class methods
	+[UIKeyboard(CKUtilities) __ck_isUsingCompactHeightPredictionBar]
	+[UIKeyboard(CKUtilities) __ck_appStripVerticalPadding]

_UINavigationControllerPalette(CKUtilities)
	// instance methods
	-[_UINavigationControllerPalette(CKUtilities) __ck_setPaletteFrame:]

UINavigationBar(CKUtilities)
	// instance methods
	-[UINavigationBar(CKUtilities) setDarkEffectStyle:]
	-[UINavigationBar(CKUtilities) _enableBusinessBranding:primaryColor:secondaryColor:]
	-[UINavigationBar(CKUtilities) enableBranding:forBusinessChat:]
	-[UINavigationBar(CKUtilities) enableBranding:forBusinessHandle:]

UIScreen(CKUtilities)
	// instance methods
	-[UIScreen(CKUtilities) ck_screenSizeCategory]
	-[UIScreen(CKUtilities) __ck_isFullscreen]

UIDevice(CKUtilities)
	// class methods
	+[UIDevice(CKUtilities) __ck_currentDeviceIsPadOrMac]

NSDateComponentsFormatter(CKUtilities)
	// class methods
	+[NSDateComponentsFormatter(CKUtilities) __ck_durationFormatter]

IMTimingCollection(CKUtilities)
	// class methods
	+[IMTimingCollection(CKUtilities) activeGlobalTimingCollections]
	+[IMTimingCollection(CKUtilities) invalidateGlobalTimingCollections]
	+[IMTimingCollection(CKUtilities) globalTimingCollectionForKey:]
	+[IMTimingCollection(CKUtilities) logTimingCollectionForKey:]
	+[IMTimingCollection(CKUtilities) invalidateGlobalTimingCollectionForKey:]

(ChatKit)
	// class methods
	+[(ChatKit) __ck_isKindOfClass:]

	// instance methods
	-[(ChatKit) ck_constrainedSizeThatFits:]
	-[(ChatKit) initWithNavigationController:]
	-[(ChatKit) smsComposeControllerDataInserted:]
	-[(ChatKit) smsComposeControllerAppeared:]
	-[(ChatKit) smsComposeControllerCancelled:]
	-[(ChatKit) smsComposeControllerSendStarted:]
	-[(ChatKit) smsComposeControllerEntryViewContentInserted:]

NSItemProvider(MapUtils)
	// class methods
	+[NSItemProvider(MapUtils) __ck_itemProviderForAppleMapsCoordinateURL:vCardURL:]

	// instance methods
	-[NSItemProvider(MapUtils) __ck_loadDataForAppleMapVCard:]
	-[NSItemProvider(MapUtils) supportedInQLController]

IMBrand(ChatKit)
	// class methods
	+[IMBrand(ChatKit) makeBrandPlacecardForIMBrand:]

	// instance methods
	-[IMBrand(ChatKit) primaryBrandColor]
	-[IMBrand(ChatKit) secondaryBrandColor]

IMTranscriptChatItem(CKChatItems)
	// instance methods
	-[IMTranscriptChatItem(CKChatItems) __ck_chatItemClass]

IMDateChatItem(CKChatItems)
	// instance methods
	-[IMDateChatItem(CKChatItems) __ck_chatItemClass]

IMSenderChatItem(CKChatItems)
	// instance methods
	-[IMSenderChatItem(CKChatItems) __ck_chatItemClass]

IMReplySenderChatItem(CKChatItems)
	// instance methods
	-[IMReplySenderChatItem(CKChatItems) __ck_chatItemClass]

IMServiceChatItem(CKChatItems)
	// instance methods
	-[IMServiceChatItem(CKChatItems) __ck_chatItemClass]

IMMessageStatusChatItem(CKChatItems)
	// instance methods
	-[IMMessageStatusChatItem(CKChatItems) __ck_chatItemClass]

IMMessageReplyCountChatItem(CKChatItems)
	// instance methods
	-[IMMessageReplyCountChatItem(CKChatItems) __ck_chatItemClass]

IMTypingChatItem(CKChatItems)
	// instance methods
	-[IMTypingChatItem(CKChatItems) __ck_chatItemClass]

IMTypingPluginChatItem(CKChatItems)
	// instance methods
	-[IMTypingPluginChatItem(CKChatItems) __ck_chatItemClass]

IMLocatingChatItem(CKChatItems)
	// instance methods
	-[IMLocatingChatItem(CKChatItems) __ck_chatItemClass]

IMLoadMoreChatItem(CKChatItems)
	// instance methods
	-[IMLoadMoreChatItem(CKChatItems) __ck_chatItemClass]

IMBlackholeChatItem(CKChatItems)
	// instance methods
	-[IMBlackholeChatItem(CKChatItems) __ck_chatItemClass]

IMTextMessagePartChatItem(CKChatItems)
	// instance methods
	-[IMTextMessagePartChatItem(CKChatItems) __ck_chatItemClass]

IMReplyContextTextMessagePartChatItem(CKChatItems)
	// instance methods
	-[IMReplyContextTextMessagePartChatItem(CKChatItems) __ck_chatItemClass]

IMReplyContextDeletedMessageChatItem(CKChatItems)
	// instance methods
	-[IMReplyContextDeletedMessageChatItem(CKChatItems) __ck_chatItemClass]

IMAttachmentMessagePartChatItem(CKChatItems)
	// instance methods
	-[IMAttachmentMessagePartChatItem(CKChatItems) __ck_chatItemClass]

IMOrganicAttachmentMessagePartChatItem(CKChatItems)
	// instance methods
	-[IMOrganicAttachmentMessagePartChatItem(CKChatItems) __ck_chatItemClass]

IMAggregateAttachmentMessagePartChatItem(CKChatItems)
	// instance methods
	-[IMAggregateAttachmentMessagePartChatItem(CKChatItems) __ck_chatItemClass]

IMReplyContextAttachmentMessagePartChatItem(CKChatItems)
	// instance methods
	-[IMReplyContextAttachmentMessagePartChatItem(CKChatItems) __ck_chatItemClass]

IMReplyContextAggregateAttachmentMessagePartChatItem(CKChatItems)
	// instance methods
	-[IMReplyContextAggregateAttachmentMessagePartChatItem(CKChatItems) __ck_chatItemClass]

IMTranscriptPluginChatItem(CKChatItems)
	// instance methods
	-[IMTranscriptPluginChatItem(CKChatItems) __ck_chatItemClass]

IMReplyContextTranscriptPluginChatItem(CKChatItems)
	// instance methods
	-[IMReplyContextTranscriptPluginChatItem(CKChatItems) __ck_chatItemClass]

IMTranscriptPluginBreadcrumbChatItem(CKChatItems)
	// instance methods
	-[IMTranscriptPluginBreadcrumbChatItem(CKChatItems) __ck_chatItemClass]

IMAnimatedEmojiMessagePartChatItem(CKChatItems)
	// instance methods
	-[IMAnimatedEmojiMessagePartChatItem(CKChatItems) __ck_chatItemClass]

IMExpirableMessageChatItem(CKChatItems)
	// instance methods
	-[IMExpirableMessageChatItem(CKChatItems) __ck_chatItemClass]

IMAudioMessageChatItem(CKChatItems)
	// instance methods
	-[IMAudioMessageChatItem(CKChatItems) __ck_chatItemClass]

IMAggregateMessagePartChatItem(CKChatItems)
	// instance methods
	-[IMAggregateMessagePartChatItem(CKChatItems) __ck_chatItemClass]

IMReplyContextAggregateMessagePartChatItem(CKChatItems)
	// instance methods
	-[IMReplyContextAggregateMessagePartChatItem(CKChatItems) __ck_chatItemClass]

IMGroupActionChatItem(CKChatItems)
	// instance methods
	-[IMGroupActionChatItem(CKChatItems) __ck_chatItemClass]

IMGroupTitleChangeChatItem(CKChatItems)
	// instance methods
	-[IMGroupTitleChangeChatItem(CKChatItems) __ck_chatItemClass]

IMParticipantChangeChatItem(CKChatItems)
	// instance methods
	-[IMParticipantChangeChatItem(CKChatItems) __ck_chatItemClass]

IMParticipantSubscriptionSwitchChatItem(CKChatItems)
	// instance methods
	-[IMParticipantSubscriptionSwitchChatItem(CKChatItems) __ck_chatItemClass]

IMLocationShareOfferChatItem(CKChatItems)
	// instance methods
	-[IMLocationShareOfferChatItem(CKChatItems) __ck_chatItemClass]

IMLocationShareActionChatItem(CKChatItems)
	// instance methods
	-[IMLocationShareActionChatItem(CKChatItems) __ck_chatItemClass]

IMEmoteMessageChatItem(CKChatItems)
	// instance methods
	-[IMEmoteMessageChatItem(CKChatItems) __ck_chatItemClass]

IMMessageActionChatItem(CKChatItems)
	// instance methods
	-[IMMessageActionChatItem(CKChatItems) __ck_chatItemClass]

IMReportSpamChatItem(CKChatItems)
	// instance methods
	-[IMReportSpamChatItem(CKChatItems) __ck_chatItemClass]

IMBlockContactChatItem(CKChatItems)
	// instance methods
	-[IMBlockContactChatItem(CKChatItems) __ck_chatItemClass]

IMUnavailabilityIndicatorChatItem(CKChatItems)
	// instance methods
	-[IMUnavailabilityIndicatorChatItem(CKChatItems) __ck_chatItemClass]

IMNotifyAnywayChatItem(CKChatItems)
	// instance methods
	-[IMNotifyAnywayChatItem(CKChatItems) __ck_chatItemClass]

IMNumberChangedChatItem(CKChatItems)
	// instance methods
	-[IMNumberChangedChatItem(CKChatItems) __ck_chatItemClass]

IMSimSwitchedChatItem(CKChatItems)
	// instance methods
	-[IMSimSwitchedChatItem(CKChatItems) __ck_chatItemClass]

IMSMSSpamChatItem(CKChatItems)
	// instance methods
	-[IMSMSSpamChatItem(CKChatItems) __ck_chatItemClass]

IMAssociatedStickerChatItem(CKChatItems)
	// instance methods
	-[IMAssociatedStickerChatItem(CKChatItems) __ck_chatItemClass]

IMMessageAcknowledgmentChatItem(CKItems)
	// instance methods
	-[IMMessageAcknowledgmentChatItem(CKItems) __ck_chatItemClass]

IMTranscriptLocationChatItem(CKItems)
	// instance methods
	-[IMTranscriptLocationChatItem(CKItems) __ck_chatItemClass]

IMTUConversationChatItem(CKChatItems)
	// instance methods
	-[IMTUConversationChatItem(CKChatItems) __ck_chatItemClass]

IMAggregateAcknowledgmentChatItem(CKItems)
	// instance methods
	-[IMAggregateAcknowledgmentChatItem(CKItems) __ck_chatItemClass]

IMUnreadCountChatItem(CKChatItems)
	// instance methods
	-[IMUnreadCountChatItem(CKChatItems) __ck_chatItemClass]

IMExpressiveSendAsTextChatItem(CKChatItems)
	// instance methods
	-[IMExpressiveSendAsTextChatItem(CKChatItems) __ck_chatItemClass]

IMPhotoAttachmentStatusChatItem(CKChatItems)
	// instance methods
	-[IMPhotoAttachmentStatusChatItem(CKChatItems) __ck_chatItemClass]

IMMomentShareStatusChatItem(CKChatItems)
	// instance methods
	-[IMMomentShareStatusChatItem(CKChatItems) __ck_chatItemClass]

IMMessagePartHighlightChatItem(CKItems)
	// instance methods
	-[IMMessagePartHighlightChatItem(CKItems) __ck_chatItemClass]

CNComposeRecipient(Additions)
	// instance methods
	-[CNComposeRecipient(Additions) isPhone]
	-[CNComposeRecipient(Additions) isNamedGroup]
	-[CNComposeRecipient(Additions) IDSCanonicalAddress]
	-[CNComposeRecipient(Additions) rawAddress]
	-[CNComposeRecipient(Additions) isEmail]
	-[CNComposeRecipient(Additions) canonicalAddress]
	-[CNComposeRecipient(Additions) isUnnamedGroup]
	-[CNComposeRecipient(Additions) IDSCanonicalAddressForAddress:]
	-[CNComposeRecipient(Additions) isNotAChildOfUnifiedRecipient]
	-[CNComposeRecipient(Additions) copyPhoneNumber]
	-[CNComposeRecipient(Additions) setCanonicalAddress:]

IMBalloonPlugin(CKAppMenuItem)
	// class methods
	+[IMBalloonPlugin(CKAppMenuItem) __ck_appIconFromPayloadDictionary:withCompletionBlock:]

	// instance methods
	-[IMBalloonPlugin(CKAppMenuItem) __ck_identifier]
	-[IMBalloonPlugin(CKAppMenuItem) _adamID]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_breadcrumbImage]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_cacheKeyForInterfaceStyle:]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_browserImageGenerateSynchronously:interfaceStyle:]
	-[IMBalloonPlugin(CKAppMenuItem) __ckImageForInterfaceStyle:generateSynchronously:]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_preferIconServices]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_iconServicesBundleIdentifier]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_generateAssetCatalogImageForInterfaceStyle:]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_statusImage]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_badgeImage]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_browserImageForInterfaceStyle:]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_browserImageName:]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_iconServicesDescriptor]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_iconServicesIconForInterfaceStyle:]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_postImageUpdateNotificationWithImage:]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_generateIconForInterfaceStyle:notify:]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_cachedAssetCatalogImageForInterfaceStyle:]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_placeholderImageForInterfaceStyle:]
	-[IMBalloonPlugin(CKAppMenuItem) appStoreBadgeIcon]
	-[IMBalloonPlugin(CKAppMenuItem) recentsBadgeIcon]
	-[IMBalloonPlugin(CKAppMenuItem) _scaledImage:xscale:yscale:]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_statusImageForTransport]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_prefetchBrowserImageForInterfaceStyle:]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_attributionInfo]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_displayName]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_statusJPEGImageDataForTransportWithCompressionFactor:]
	-[IMBalloonPlugin(CKAppMenuItem) description]
	-[IMBalloonPlugin(CKAppMenuItem) __ck_imageForTraitCollection:]

LSPlugInKitProxy(IconAdditions)
	// instance methods
	-[LSPlugInKitProxy(IconAdditions) iconForInterfaceStyle:]
	-[LSPlugInKitProxy(IconAdditions) iconDataForInterfaceStyle:]

IMBalloonAppExtension(ImageLoading)
	// instance methods
	-[IMBalloonAppExtension(ImageLoading) containingBundleIdentifier]
	-[IMBalloonAppExtension(ImageLoading) _adamID]
	-[IMBalloonAppExtension(ImageLoading) __ck_breadcrumbImage]
	-[IMBalloonAppExtension(ImageLoading) _validProxy]
	-[IMBalloonAppExtension(ImageLoading) __ck_browserImageGenerateSynchronously:interfaceStyle:]
	-[IMBalloonAppExtension(ImageLoading) __ck_preferIconServices]
	-[IMBalloonAppExtension(ImageLoading) __ck_iconServicesBundleIdentifier]
	-[IMBalloonAppExtension(ImageLoading) __ck_generateAssetCatalogImageForInterfaceStyle:]
	-[IMBalloonAppExtension(ImageLoading) _generatePlaceholderImageForInterfaceStyle:]
	-[IMBalloonAppExtension(ImageLoading) __ck_statusImage]
	-[IMBalloonAppExtension(ImageLoading) __ck_browserImageForInterfaceStyle:]

IMBalloonPluginDataSource(CKAdditions)
	// instance methods
	-[IMBalloonPluginDataSource(CKAdditions) wantsInteractiveContentView]

UIPasteboard(CKComposition)
	// class methods
	+[UIPasteboard(CKComposition) __ck_pasteboardTypeListRTFD]

	// instance methods
	-[UIPasteboard(CKComposition) __ck_canCreateComposition]
	-[UIPasteboard(CKComposition) __ck_compositionWithCompletionHandler:]
	-[UIPasteboard(CKComposition) __ck_mediaObjectManager]

UIResponder(FirstResponder)
	// class methods
	+[UIResponder(FirstResponder) currentFirstResponder]

	// instance methods
	-[UIResponder(FirstResponder) findFirstResponder:]

CAFilter(CKFilterWithDictionary)
	// class methods
	+[CAFilter(CKFilterWithDictionary) ck_filterWithDictionary:]

CSSearchableItemAttributeSet(CKAdditions)
	// instance methods
	-[CSSearchableItemAttributeSet(CKAdditions) __ck_spotlightItemSnippet]
	-[CSSearchableItemAttributeSet(CKAdditions) __ck_itemContentCreationDate]
	-[CSSearchableItemAttributeSet(CKAdditions) __ck_privateMutableAttributesDictionary]

IMBalloonPluginManager(ChatKitAdditions)
	// instance methods
	-[IMBalloonPluginManager(ChatKitAdditions) balloonControllerForIMChatItem:contextIdentifier:]

CAMShutterButton(CKActionMenuItemView)
	// class methods
	+[CAMShutterButton(CKActionMenuItemView) actionMenuShutterButton]

	// instance methods
	-[CAMShutterButton(CKActionMenuItemView) setHighlighted:animated:]
	-[CAMShutterButton(CKActionMenuItemView) setSelected:animated:]
	-[CAMShutterButton(CKActionMenuItemView) setEnabled:animated:]

IMChat(CKAdditions)
	// class methods
	+[IMChat(CKAdditions) associatedMessageContentTypeFromCKMediaType:]
	+[IMChat(CKAdditions) configureMessageSummaryInfoForChatItem:]

	// instance methods
	-[IMChat(CKAdditions) __ck_updateWatermarkToMessageID:date:]
	-[IMChat(CKAdditions) sendMessageAcknowledgment:forChatItem:withGuid:]
	-[IMChat(CKAdditions) __ck_watermarkMessageID]
	-[IMChat(CKAdditions) __ck_watermarkDate]
	-[IMChat(CKAdditions) __ck_saveWatermark]
	-[IMChat(CKAdditions) __ck_sendReadReceipts]
	-[IMChat(CKAdditions) __ck_setSendReadReceipts:]
	-[IMChat(CKAdditions) sendMessageAcknowledgment:forChatItem:]

IMChatRegistry(CKAdditions)
	// instance methods
	-[IMChatRegistry(CKAdditions) _ck_chatForHandles:createIfNecessary:]
	-[IMChatRegistry(CKAdditions) _ck_chatForHandles:displayName:lastAddressedHandle:lastAddressedSIMID:joinedChatsOnly:createIfNecessary:]

IMMessage(CKAdditions)
	// instance methods
	-[IMMessage(CKAdditions) __ck_isSMS]
	-[IMMessage(CKAdditions) __ck_context]
	-[IMMessage(CKAdditions) __ck_mediaObjects]
	-[IMMessage(CKAdditions) __ck_previewTextWithChat:]
	-[IMMessage(CKAdditions) __ck_isiMessage]
	-[IMMessage(CKAdditions) __ck_previewTextWithChat:ignorePluginContent:]
	-[IMMessage(CKAdditions) __ck_downgradedMessage]
	-[IMMessage(CKAdditions) __ck_service]
	-[IMMessage(CKAdditions) __ck_undowngradedMessage]
	-[IMMessage(CKAdditions) __ck_isEqualToMessageUsingGUID:]
	-[IMMessage(CKAdditions) __ck_attachmentPreviewTextForAttachmentAtIndex:]
	-[IMMessage(CKAdditions) __ck_isAcknowledgmentMessage]

IMService(CKAdditions)
	// instance methods
	-[IMService(CKAdditions) __ck_isSMS]
	-[IMService(CKAdditions) __ck_displayColor]
	-[IMService(CKAdditions) __ck_displayName]
	-[IMService(CKAdditions) __ck_serviceType]
	-[IMService(CKAdditions) __ck_maxRecipientCountForHandle:simID:]
	-[IMService(CKAdditions) __ck_isiMessage]

IMAccountController(CKAdditions)
	// instance methods
	-[IMAccountController(CKAdditions) __ck_bestAccountForAddresses:withFallbackService:]
	-[IMAccountController(CKAdditions) __ck_bestAccountForAddresses:]
	-[IMAccountController(CKAdditions) __ck_bestAccountForAddress:]
	-[IMAccountController(CKAdditions) __ck_defaultAccountForService:]

IMAccount(CKAdditions)
	// instance methods
	-[IMAccount(CKAdditions) __ck_handlesFromAddressStrings:]

CALayer(BalloonLayerExtension)
	// class methods
	+[CALayer(BalloonLayerExtension) maxInsetForImage:]
	+[CALayer(BalloonLayerExtension) extraInsetsForImage:]
	+[CALayer(BalloonLayerExtension) boundsForMaskImage:withOriginalSize:]

	// instance methods
	-[CALayer(BalloonLayerExtension) setMaskImage:]

UIViewController(CKBrowserTransitionCoordinator)
	// instance methods
	-[UIViewController(CKBrowserTransitionCoordinator) __ck_topViewController]

LSApplicationProxy(_CKAppInstallation)
	// instance methods
	-[LSApplicationProxy(_CKAppInstallation) __ck_messagesPluginKitProxy]

LSBundleProxy(_CKAppInstallation)
	// instance methods
	-[LSBundleProxy(_CKAppInstallation) __ck_icon]

CNGroupIdentity(CKPinnedConversationView)
	// instance methods
	-[CNGroupIdentity(CKPinnedConversationView) ck_contactInstancesMatchingContacts:]

PXPhotosUIViewController(MessagesSupport)
	// instance methods
	-[PXPhotosUIViewController(MessagesSupport) previewControllerDidDismiss:]
	-[PXPhotosUIViewController(MessagesSupport) setCk_chatController:]
	-[PXPhotosUIViewController(MessagesSupport) configureWithToolbarController:]
	-[PXPhotosUIViewController(MessagesSupport) providerWillBeRemovedFromToolbarController:]
	-[PXPhotosUIViewController(MessagesSupport) toolbarItemForIdentifier:]
	-[PXPhotosUIViewController(MessagesSupport) ck_transitionView]
	-[PXPhotosUIViewController(MessagesSupport) excludedActivityTypesForPreviewController:]
	-[PXPhotosUIViewController(MessagesSupport) additionalActivitiesTypesForPreviewController:]
	-[PXPhotosUIViewController(MessagesSupport) ck_chatController]
	-[PXPhotosUIViewController(MessagesSupport) previewController:transitionViewForPreviewItem:uncroppedSourceFrame:]
	-[PXPhotosUIViewController(MessagesSupport) setCk_transitionView:]
	-[PXPhotosUIViewController(MessagesSupport) _assetReferenceForPreviewItem:]
	-[PXPhotosUIViewController(MessagesSupport) _handleBackButton]
	-[PXPhotosUIViewController(MessagesSupport) previewControllerWillDismiss:]
	-[PXPhotosUIViewController(MessagesSupport) previewController:editingModeForPreviewItem:]
	-[PXPhotosUIViewController(MessagesSupport) invisibleInkEffectControllerForPreviewController:]
	-[PXPhotosUIViewController(MessagesSupport) previewControllerDidCancelDismiss:]
	-[PXPhotosUIViewController(MessagesSupport) shouldHideInteractionOptions]
	-[PXPhotosUIViewController(MessagesSupport) replyButtonTappedForMediaObject:previewController:]
	-[PXPhotosUIViewController(MessagesSupport) chatItemForMediaObject:previewController:]
	-[PXPhotosUIViewController(MessagesSupport) previewControllerIsInGroupConversation:]
	-[PXPhotosUIViewController(MessagesSupport) sendMessageAcknowledgment:chatItem:previewController:]

UINavigationController(CKAdditions)
	// instance methods
	-[UINavigationController(CKAdditions) __ck_enqueueCompletionBlock:]
	-[UINavigationController(CKAdditions) __ck_pushViewController:animated:completion:]
	-[UINavigationController(CKAdditions) __ck_popViewControllerAnimated:completion:]
	-[UINavigationController(CKAdditions) __ck_popToViewController:animated:completion:]
	-[UINavigationController(CKAdditions) __ck_popToRootViewControllerAnimated:completion:]
	-[UINavigationController(CKAdditions) __ck_callDelegateBlocks]

NSTextContainer(CKBalloonTextView)
	// instance methods
	-[NSTextContainer(CKBalloonTextView) sizeThatFits:textAlignmentInsets:isSingleLine:]

IMPluginPayload(ChatKitAdditions)
	// instance methods
	-[IMPluginPayload(ChatKitAdditions) __ck_photoCompositionString]
	-[IMPluginPayload(ChatKitAdditions) __ck_photoCompositionMediaObjects]
	-[IMPluginPayload(ChatKitAdditions) cleansedCopy]
	-[IMPluginPayload(ChatKitAdditions) __ck_superFormatStringTransferGUIDs:mediaObjects:]

01 00 0600 /System/Library/Frameworks/AddressBook.framework/AddressBook: ABSVCardRecord 
01 00 3500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetExportSession 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetImageGenerator 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReader 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderTrackOutput 
01 00 4a00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioPlayer 
01 00 4a00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSession 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDevice 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureMovieFileOutput 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureStillImageOutput 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoPreviewLayer 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLayer 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLooper 
01 00 2f00 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVQueuePlayer 
01 00 3400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 4a00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVVoiceController 
01 00 0e00 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSAccelerometer 
01 00 1200 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMDiscoverabilitySignalEvent 
01 00 1200 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMStreams 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimation 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABackdropLayer 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAEmitterBehavior 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAEmitterCell 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAEmitterLayer 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0a00 /System/Library/PrivateFrameworks/CameraKit.framework/CameraKit: CAMShutterButton 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMatchMoveAnimation 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMeshTransform 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAPackage 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAReplicatorLayer 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateController 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 4000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransformLayer 
01 00 1400 /System/Library/PrivateFrameworks/MessagesSupport.framework/MessagesSupport: CKInboxItem 
01 00 1400 /System/Library/PrivateFrameworks/MessagesSupport.framework/MessagesSupport: CKInboxModel 
01 00 1400 /System/Library/PrivateFrameworks/MessagesSupport.framework/MessagesSupport: CKInboxSection 
01 00 1400 /System/Library/PrivateFrameworks/MessagesSupport.framework/MessagesSupport: CKTranscriptCompositor 
01 00 0f00 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMGestureManager 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNActionView 
01 00 1f40 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNAtomView 
01 00 1f40 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNAutocompleteGroupDetailViewController 
01 00 1f40 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNAutocompleteResultsTableViewController 
01 00 1f40 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNAutocompleteSearchManager 
01 00 1f40 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNAutocompleteSupplementalGroup 
01 00 1f40 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNAutocompleteSupplementalGroupMember 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRenderer 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRendererSettings 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRenderingScope 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarView 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarViewControllerSettings 
01 00 1f40 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNComposeRecipient 
01 00 1f40 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNComposeRecipientGroup 
01 00 1f40 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNComposeRecipientOriginContext 
01 00 1f40 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNComposeRecipientTextView 
01 00 2600 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 2600 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNContactPickerViewController 
01 00 2600 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNContactStyle 
01 00 2600 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactVCardSerialization 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNContactViewController 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNGroupAvatarViewController 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNGroupIdentity 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNGroupIdentityActionItem 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNGroupIdentityHeaderViewController 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNGroupIdentityInlineActionsViewConfiguration 
01 00 2600 /System/Library/Frameworks/Contacts.framework/Contacts: CNLabeledValue 
01 00 2600 /System/Library/Frameworks/Contacts.framework/Contacts: CNMailToGroup 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNMeCardSharingSettingsViewController 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNMonogrammer 
01 00 2600 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutableContact 
01 00 2600 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 2600 /System/Library/Frameworks/Contacts.framework/Contacts: CNSaveRequest 
01 00 1f40 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNUnifiedComposeRecipient 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNUnknownContactsController 
01 00 2c00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNVisualIdentityPickerViewController 
01 00 3600 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPLRUDictionary 
01 00 0d00 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPListSection 
01 00 0d00 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPListTemplate 
01 00 0d00 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPMessageComposeBarButton 
01 00 0d00 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPMessageListItem 
01 00 0d00 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPMessageListItemLeadingConfiguration 
01 00 2b00 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSPerson 
01 00 2b00 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchQuery 
01 00 2b00 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchQueryContext 
01 00 2b00 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableItem 
01 00 2b00 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableItemAttributeSet 
01 00 2100 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0700 /System/Library/PrivateFrameworks/EmojiKit.framework/EmojiKit: EMKLayoutManager 
01 00 0700 /System/Library/PrivateFrameworks/EmojiKit.framework/EmojiKit: EMKTextView 
01 00 4400 /System/Library/PrivateFrameworks/FTClientServices.framework/FTClientServices: FTCServiceAvailabilityCenter 
01 00 4200 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTDeviceSupport 
01 00 4200 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTServerBag 
01 00 3100 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSBatchIDQueryController 
01 00 3100 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSIDQueryController 
01 00 3100 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSServerBag 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMAccount 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMAccountController 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMAggregateAcknowledgmentChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMAggregateAttachmentMessagePartChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMAggregateMessagePartChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMAnimatedEmojiMessagePartChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMAppleStoreHelper 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMAssociatedMessageItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMAssociatedStickerChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMAttachmentBlastdoor 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMAttachmentMessagePartChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMAttachmentUtilities 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMAudioMessageChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMAvailabilityInvitationManager 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMBalloonAppExtension 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMBalloonBrowserPlugin 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMBalloonPlugin 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMBalloonPluginDataSource 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMBalloonPluginManager 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMBlackholeChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMBlockContactChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMBlockListController 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMBrand 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCTSMSUtilities 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCTSubscriptionUtilities 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMChat 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMChatHistoryController 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMChatRegistry 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMCloudKitEventNotificationManager 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMCloudKitHooks 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCommSafetyRequestsManager 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCommSafetySettingsManager 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMCommSafetySummary 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMCommSafetySummaryImage 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMContactStore 
01 00 2500 /System/Library/PrivateFrameworks/IMSharedUI.framework/IMSharedUI: IMConversationListTypingIndicatorLayer 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCoreSpotlightUtilities 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMDDController 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMDNDList 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMDPLogsCollector 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMDaemonController 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMDateChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMDefaults 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMDeletedMomentShareMessagePartChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMDeviceUtilities 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMDirectoryContentsSizes 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMDoubleLinkedList 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMDoubleLinkedListNode 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMDowntimeController 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMEmoteMessageChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMExpirableMessageChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMExpressiveSendAsTextChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMFMFSession 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMFaceTimeUtilities 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMFeatureFlags 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMFileManager 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMFileTransfer 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMFileTransferCenter 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMGroupActionChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMGroupTitleChangeChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMHandle 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMHandleAvailabilityManager 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMImageUtilities 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMLoadMoreChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMLocatingChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMLocationShareActionChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMLocationShareOfferChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMLocationShareStatusChangeItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMLockdownManager 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMManualUpdater 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMe 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMeCardSharingStateController 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMessage 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMessageAcknowledgmentChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMessageActionChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMessageAttributionChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMessageChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMessageDirectoryContents 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMessageItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMessagePartChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMessagePartHighlightChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMessageReplyCountChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMessageStatusChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMetricsCollector 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMomentShareCache 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMomentShareStatusChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMultiDict 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMutableChatContext 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMNicknameController 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMNotifyAnywayChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMNumberChangedChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMOrganicAttachmentMessagePartChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMParticipantChangeChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMParticipantSubscriptionSwitchChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMPendingMomentShareMessagePartChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMPhotoAttachmentStatusChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMPhotoLibraryPersistenceManager 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMPinnedConversationsController 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMPluginPayload 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMRecentItemsList 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMReplyContextAggregateAttachmentMessagePartChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMReplyContextAggregateMessagePartChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMReplyContextAttachmentMessagePartChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMReplyContextDeletedMessageChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMReplyContextTextMessagePartChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMReplyContextTranscriptPluginChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMReplySenderChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMReportSpamChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMSMSSpamChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMScheduledUpdater 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMSenderChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSenderIdentityManager 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMService 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMServiceChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMServiceImpl 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedWithYouManager 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMSimSwitchedChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSpamFilterHelper 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMStateCaptureAssistant 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSticker 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMSuggestionsService 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMSystemMonitor 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTUConversationChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTextMessagePartChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTimingCollection 
01 00 2300 /System/Library/PrivateFrameworks/IMTranscoding.framework/IMTranscoding: IMTranscodeController 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTranscriptChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTranscriptChatItemRules 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTranscriptLocationChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTranscriptPluginBreadcrumbChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTranscriptPluginChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTranscriptPluginStatusChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTransientMessagePartChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTypingChatItem 
01 00 2500 /System/Library/PrivateFrameworks/IMSharedUI.framework/IMSharedUI: IMTypingIndicatorLayer 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTypingPluginChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMUnavailabilityIndicatorChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMUnavailableMomentShareMessagePartChatItem 
01 00 3700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMUnitTestRunner 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMUnreadCountChatItem 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMUserDefaults 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMUserNotification 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMUserNotificationCenter 
01 00 4100 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMWeakReference 
01 00 2000 /System/Library/Frameworks/Intents.framework/Intents: INDeferredLocalizedString 
01 00 2000 /System/Library/Frameworks/Intents.framework/Intents: INFocusStatusCenter 
01 00 2000 /System/Library/Frameworks/Intents.framework/Intents: INPreferences 
01 00 2000 /System/Library/Frameworks/Intents.framework/Intents: INRequestPaymentIntent 
01 00 2000 /System/Library/Frameworks/Intents.framework/Intents: INSendMessageIntent 
01 00 2000 /System/Library/Frameworks/Intents.framework/Intents: INSendPaymentIntent 
01 00 2800 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISIcon 
01 00 2800 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 4700 /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer: ISWrappedAVAudioSession 
01 00 1e00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPAppleTVMetadata 
01 00 1e00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPCaptionBarPresentationProperties 
01 00 1e00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPFileMetadata 
01 00 1e00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPImage 
01 00 1e00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPImagePresentationProperties 
01 00 1e00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPLinkMetadata 
01 00 1e00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPLinkView 
01 00 1e00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPSourceApplicationMetadata 
01 00 1e00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPWebLinkPresentationProperties 
01 00 1e00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPiTunesMediaPodcastEpisodeMetadata 
01 00 1e00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPiTunesMediaSongMetadata 
01 00 4b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 4b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 4b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 4b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 4b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSDocumentProxy 
01 00 4b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 1840 /System/Library/PrivateFrameworks/TranslationUIServices.framework/TranslationUIServices: LTUITranslationViewController 
01 00 3d00 /System/Library/Frameworks/MessageUI.framework/MessageUI: MFRecipientTableViewCell 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSByteCountFormatter 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutAnchor 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutBoundarySupplementaryItem 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutDecorationItem 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutDimension 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutEdgeSpacing 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutGroup 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutGroupCustomItem 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutItem 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSection 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSize 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSpacing 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSupplementaryItem 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSConcreteTextStorage 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSDiffableDataSourceSnapshot 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileWrapper 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSLayoutManager 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 4800 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextContainer 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextStorage 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTypesetter 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUserActivity 
01 00 3a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 2d00 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBBoldTrayButton 
01 00 2d00 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBLinkTrayButton 
01 00 2d00 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPrivacyLinkController 
01 00 2d00 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPrivacyPresenter 
01 00 2d00 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBWelcomeController 
01 00 4600 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFVideoComplement 
01 00 4600 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFVideoMetadata 
01 00 0800 /System/Library/Frameworks/Photos.framework/Photos: PHAsset 
01 00 0800 /System/Library/Frameworks/Photos.framework/Photos: PHAssetChangeRequest 
01 00 0800 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCreationRequest 
01 00 0800 /System/Library/Frameworks/Photos.framework/Photos: PHAssetExportRequest 
01 00 0800 /System/Library/Frameworks/Photos.framework/Photos: PHAssetExportRequestOptions 
01 00 0800 /System/Library/Frameworks/Photos.framework/Photos: PHLivePhoto 
01 00 0800 /System/Library/Frameworks/Photos.framework/Photos: PHMomentShare 
01 00 0800 /System/Library/Frameworks/Photos.framework/Photos: PHPhotoLibrary 
01 00 0300 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSListController 
01 00 0300 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSRootController 
01 00 0300 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSpecifier 
01 00 0300 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSViewController 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXArrayChangeDetails 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetActionManager 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetActionPerformer 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetReference 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetsDataSource 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetsDataSourceCountsController 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetsDataSourceManager 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXBaseDisplayCollection 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCMMPhotoKitContext 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCMMWorkflowCoordinator 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFooterViewModel 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXMessagesStackView 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXMutableIndexPathSet 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitAssetActionManager 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitAssetsDataSource 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitMessagesAssetActionManager 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitUIMediaProvider 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosUIViewController 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosViewConfiguration 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSectionedDataSourceChangeDetails 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSectionedSelectionManager 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSelectionSnapshot 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXStaticDisplayAssetsDataSource 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUIMediaProvider 
01 00 1500 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXViewSpec 
01 00 1a00 /System/Library/Frameworks/QuickLook.framework/QuickLook: QLPreviewController 
01 00 1a00 /System/Library/Frameworks/QuickLook.framework/QuickLook: QLPreviewMockScene 
01 00 0500 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailGenerationRequest 
01 00 0500 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailGenerator 
01 00 1700 /System/Library/PrivateFrameworks/ResponseKit.framework/ResponseKit: RKMessageResponseManager 
01 00 3200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAEmail 
01 00 3200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAPerson 
01 00 3200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAPersonAttribute 
01 00 3200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAPhone 
01 00 3200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASmsSms 
01 00 0900 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationService 
01 00 0900 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSHardwareButtonService 
01 00 1d00 /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions: SGRealtimeContact 
01 00 0b00 /System/Library/PrivateFrameworks/StorageSettings.framework/StorageSettings: STStorageActionTip 
01 00 0b00 /System/Library/PrivateFrameworks/StorageSettings.framework/StorageSettings: STStorageAppHeaderCell 
01 00 0b00 /System/Library/PrivateFrameworks/StorageSettings.framework/StorageSettings: STStorageOptionTip 
01 00 0b00 /System/Library/PrivateFrameworks/StorageSettings.framework/StorageSettings: STStoragePlugin 
01 00 0c00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriDirectActionContext 
01 00 0c00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriDirectActionSource 
01 00 1900 /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary: TLAlert 
01 00 1900 /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary: TLAlertConfiguration 
01 00 1900 /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary: TLToneManager 
01 00 1000 /System/Library/PrivateFrameworks/TipKit.framework/TipKit: TPKContentController 
01 00 1000 /System/Library/PrivateFrameworks/TipKit.framework/TipKit: TPKContentView 
01 00 1000 /System/Library/PrivateFrameworks/TipKit.framework/TipKit: TPKTipContentHintView 
01 00 2400 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCall 
01 00 2400 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCallCapabilities 
01 00 2400 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCallCenter 
01 00 2400 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCallProviderManager 
01 00 2400 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUDialRequest 
01 00 2400 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUHandle 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivity 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityItemProvider 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationShortcutIcon 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationShortcutItem 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAutoRotatingWindow 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBackgroundConfiguration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButtonConfiguration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryDisclosureIndicator 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryLabel 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionLayoutListConfiguration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionReusableView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCellRegistration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayout 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayoutConfiguration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDiffableDataSource 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDropProposal 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayout 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayout 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayoutAttributes 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewListCell 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewSupplementaryRegistration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColorEffect 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuConfiguration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuInteraction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextualAction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICubicTimingParameters 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDateLabel 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDictationInputModeOptions 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragInteraction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragItem 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreview 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewParameters 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewTarget 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropInteraction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropProposal 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontMetrics 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIHoverGestureRecognizer 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImagePickerController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInputContextHistory 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInputView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInputViewController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInterfaceAction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKBVisualEffectView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyCommand 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboard 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardImpl 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardInputMode 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardInputModeController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIListContentConfiguration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuItem 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMovieScrubber 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMutableApplicationShortcutItem 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBarAppearance 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPageControl 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPageViewController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPasteConfiguration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPasteboard 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPeripheralHost 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPresentationController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewAction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewForceInteractionProgress 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewInteractionController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewParameters 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewTarget 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintInfo 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintInteractionController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintPageRenderer 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIProgressHUD 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIProgressView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIResponder 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISceneActivationConditions 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScribbleInteraction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISegmentedControl 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISplitViewController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringTimingParameters 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeActionsConfiguration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeGestureRecognizer 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewDropProposal 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewRowAction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedDragPreview 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextDropProposal 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextEffectsWindow 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextInputMode 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextInputPayloadController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbar 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVibrancyEffect 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVideoEditorController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffect 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowScene 
01 00 2900 /System/Library/Frameworks/UniformTypeIdentifiers.framework/UniformTypeIdentifiers: UTType 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebView 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebViewConfiguration 
01 00 1100 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebsiteDataStore 
01 00 2200 /System/Library/PrivateFrameworks/PeopleSuggester.framework/PeopleSuggester: _PSMessagesPinningFeedback 
01 00 2200 /System/Library/PrivateFrameworks/PeopleSuggester.framework/PeopleSuggester: _PSMessagesPinningSuggester 
01 00 2200 /System/Library/PrivateFrameworks/PeopleSuggester.framework/PeopleSuggester: _PSMessagesPinningSuggestion 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIAction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIActivityRecipientManager 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropViewSettings 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackgroundViewConfiguration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICellAccessoryConfigurationCustomView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICellAccessoryConfigurationMultiselect 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIClickInteraction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICollectionViewListCell 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICollectionViewListLayoutSection 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICollectionViewListLayoutSectionConfiguration 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContextMenuAccessoryView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContextMenuInteraction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContextMenuPreviewActionGroup 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContextMenuStyle 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICursor 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICursorHighlightEffect 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICursorInteraction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICursorLiftEffect 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICursorStyle 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDragSnappingFeedbackGenerator 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIGrabber 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UINavigationBarTitleView 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UINavigationControllerPalette 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIPreviewPresentationController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISheetDetent 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISheetPresentationController 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISupplementalLexicon 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISupplementalPersonItem 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UITableViewCellActionButton 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UITableViewDiffableDataSource 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UITargetedPreview 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIWindowSceneActivationAction 
01 00 3c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIWindowSceneActivationConfiguration 
