|| __DATA.__objc_data _OBJC_CLASS_$_VKAnalysisExecutionDurations
|| __DATA.__objc_data _OBJC_CLASS_$_VKAnalyticsAnalyzerEvent
|| __DATA.__objc_data _OBJC_CLASS_$_VKAnalyticsDDEvent
|| __DATA.__objc_data _OBJC_CLASS_$_VKAnalyticsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_VKAnalyticsInteractionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_VKAnalyticsMRCEvent
|| __DATA.__objc_data _OBJC_CLASS_$_VKAnalyticsTextEvent
|| __DATA.__objc_data _OBJC_CLASS_$_VKAnalyticsVisualSearchEvent
|| __DATA.__objc_data _OBJC_CLASS_$_VKCTextRecognitionResult
|| __DATA.__objc_data _OBJC_CLASS_$_VKCaptureTextAnalysisRequest
|| __DATA.__objc_data _OBJC_CLASS_$_VKCaptureTextAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_VKCaptureTextDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_VKCaptureTextFeedbackAssetProvider
|| __DATA.__objc_data _OBJC_CLASS_$_VKCaptureVideoPreviewView
|| __DATA.__objc_data _OBJC_CLASS_$_VKCaptureVideoPreviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$_VKFeedbackAttachment
|| __DATA.__objc_data _OBJC_CLASS_$_VKFeedbackProvider
|| __DATA.__objc_data _OBJC_CLASS_$_VKImageAnalysis
|| __DATA.__objc_data _OBJC_CLASS_$_VKImageAnalysisBarButtonItem
|| __DATA.__objc_data _OBJC_CLASS_$_VKImageAnalysisInteraction
|| __DATA.__objc_data _OBJC_CLASS_$_VKImageAnalysisInteractionResultInfo
|| __DATA.__objc_data _OBJC_CLASS_$_VKImageAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_VKImageAnalyzerRequest
|| __DATA.__objc_data _OBJC_CLASS_$_VKKeyboardCameraViewController
|| __DATA.__objc_data _OBJC_CLASS_$_VKQuad
|| __DATA.__objc_data _OBJC_CLASS_$_VKSelectableBarButtonItem
|| __DATA.__objc_data _OBJC_CLASS_$_VKTextLiftingView
|| __DATA.__objc_data _OBJC_CLASS_$_VKVideoTextRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_VKVideoTextRecognizerItem
|| __DATA.__objc_data _OBJC_CLASS_$_VKVisualSearchActivity
|| __DATA.__objc_data _OBJC_CLASS_$_VKVisualSearchViewController
|| __DATA.__objc_data _OBJC_CLASS_$_VKWKDataDetectorInfo
|| __DATA.__objc_data _OBJC_CLASS_$_VKWKLineInfo
|| __DATA.__objc_data _OBJC_CLASS_$_VKWKTextInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VKAnalysisExecutionDurations
|| __DATA.__objc_data _OBJC_METACLASS_$_VKAnalyticsAnalyzerEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_VKAnalyticsDDEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_VKAnalyticsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_VKAnalyticsInteractionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_VKAnalyticsMRCEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_VKAnalyticsTextEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_VKAnalyticsVisualSearchEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_VKCTextRecognitionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_VKCaptureTextAnalysisRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_VKCaptureTextAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_VKCaptureTextDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_VKCaptureTextFeedbackAssetProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_VKCaptureVideoPreviewView
|| __DATA.__objc_data _OBJC_METACLASS_$_VKCaptureVideoPreviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_VKFeedbackAttachment
|| __DATA.__objc_data _OBJC_METACLASS_$_VKFeedbackProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_VKImageAnalysis
|| __DATA.__objc_data _OBJC_METACLASS_$_VKImageAnalysisBarButtonItem
|| __DATA.__objc_data _OBJC_METACLASS_$_VKImageAnalysisInteraction
|| __DATA.__objc_data _OBJC_METACLASS_$_VKImageAnalysisInteractionResultInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VKImageAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_VKImageAnalyzerRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_VKKeyboardCameraViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_VKQuad
|| __DATA.__objc_data _OBJC_METACLASS_$_VKSelectableBarButtonItem
|| __DATA.__objc_data _OBJC_METACLASS_$_VKTextLiftingView
|| __DATA.__objc_data _OBJC_METACLASS_$_VKVideoTextRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_VKVideoTextRecognizerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_VKVisualSearchActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_VKVisualSearchViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_VKWKDataDetectorInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VKWKLineInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VKWKTextInfo
|| __DATA_CONST.__const _VKCaptureTextAnalysisErrorDomain
|| __DATA_CONST.__const _VKFeedbackMetadataKeyAdditionalDescriptionText
|| __DATA_CONST.__const _VKFeedbackMetadataKeyClientID
|| __DATA_CONST.__const _VKFeedbackMetadataKeyComponentID
|| __DATA_CONST.__const _VKFeedbackMetadataKeyComponentName
|| __DATA_CONST.__const _VKFeedbackMetadataKeyComponentVersion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VKImageAnalysisButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKImageAnalysisButton
|| __TEXT.__text _VKMMininumQuadSideLength
|| __TEXT.__text _VKMMultiplyQuadSideLengthScaler
|| __TEXT.__text _VKMNearlyEqualVKQuads
|| __TEXT.__text _vk_cgImagePropertyOrientationFromVKOrientation
|| __TEXT.__text _vk_clockwiseRotationsFromUpToMatchOrientation
|| __TEXT.__text _vk_counterClockwiseRotationsFromUpToMatchOrientation
|| __TEXT.__text _vk_nonLocalizedOrientationNameForType
|| __TEXT.__text _vk_orientationByRotatingLeft
|| __TEXT.__text _vk_orientationByRotatingRight
|| __TEXT.__text _vk_orientationFromNonLocalizedName
|| __TEXT.__text _vk_transformFromImageOrientation
__ AVFoundation: _AVCaptureDeviceTypeBuiltInDualCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInDualWideCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInTripleCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInUltraWideCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInWideAngleCamera
__ AVFoundation: _AVCaptureSessionErrorKey
__ AVFoundation: _AVCaptureSessionPresetInputPriority
__ AVFoundation: _AVCaptureSessionRuntimeErrorNotification
__ AVFoundation: _AVCaptureSessionSetAuthorizedToUseCameraInMultipleForegroundAppLayout
__ AVFoundation: _AVFileTypeQuickTimeMovie
__ AVFoundation: _AVLayerVideoGravityResizeAspect
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVVideoCodecKey
__ AVFoundation: _AVVideoCodecTypeH264
__ AVFoundation: _AVVideoHeightKey
__ AVFoundation: _AVVideoWidthKey
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriter
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceDiscoverySession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoDataOutput
__ BackBoardServices: _OBJC_CLASS_$_BKSAccelerometer
__ CameraEditKit: _OBJC_CLASS_$_CEKSubjectIndicatorView
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFErrorDescriptionKey
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationOtherButtonTitleKey
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorCreateWithPattern
__ CoreGraphics: _CGColorGetAlpha
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorSpaceCopyName
__ CoreGraphics: _CGColorSpaceCreateDeviceCMYK
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreatePattern
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceGetNumberOfComponents
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathApplyWithBlock
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathContainsPoint
__ CoreGraphics: _CGPathCreateCopyByTransformingPath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPatternCreate
__ CoreGraphics: _CGPatternRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectStandardize
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _kCIInputRadiusKey
__ CoreMaterial: _MTCoreMaterialRecipePlatformChromeLight
__ CoreMaterial: _MTCoreMaterialVisualStyleCategoryFill
__ CoreMaterial: _MTCoreMaterialVisualStylePrimary
__ CoreMaterial: _OBJC_CLASS_$_MTMaterialLayer
__ CoreMedia: _CMFormatDescriptionGetMediaSubType
__ CoreMedia: _CMGetAttachment
__ CoreMedia: _CMSampleBufferGetFormatDescription
__ CoreMedia: _CMSampleBufferGetImageBuffer
__ CoreMedia: _CMSampleBufferGetPresentationTimeStamp
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMVideoFormatDescriptionGetDimensions
__ CoreMedia: _kCMTimeInvalid
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSDocumentProxy
__ CoreUtils: _IsAppleInternalBuild
__ CoreVideo: _CVBufferRelease
__ CoreVideo: _CVImageBufferGetDisplaySize
__ CoreVideo: _CVPixelBufferCreate
__ CoreVideo: _CVPixelBufferCreateWithIOSurface
__ CoreVideo: _CVPixelBufferGetBaseAddress
__ CoreVideo: _CVPixelBufferGetBytesPerRow
__ CoreVideo: _CVPixelBufferGetHeight
__ CoreVideo: _CVPixelBufferGetWidth
__ CoreVideo: _CVPixelBufferLockBaseAddress
__ CoreVideo: _CVPixelBufferRelease
__ CoreVideo: _CVPixelBufferRetain
__ CoreVideo: _CVPixelBufferUnlockBaseAddress
__ CoreVideo: _kCVPixelBufferHeightKey
__ CoreVideo: _kCVPixelBufferIOSurfacePropertiesKey
__ CoreVideo: _kCVPixelBufferPixelFormatTypeKey
__ CoreVideo: _kCVPixelBufferWidthKey
__ DataDetectorsCore: _DDBinderEmailKey
__ DataDetectorsCore: _DDBinderFlightInformationKey
__ DataDetectorsCore: _DDBinderGenericURLKey
__ DataDetectorsCore: _DDBinderHttpURLKey
__ DataDetectorsCore: _DDBinderMailURLKey
__ DataDetectorsCore: _DDBinderMapsURLKey
__ DataDetectorsCore: _DDBinderParsecSourceKey
__ DataDetectorsCore: _DDBinderTrackingNumberKey
__ DataDetectorsCore: _DDBinderWebURLKey
__ DataDetectorsCore: _OBJC_CLASS_$_DDScannerResult
__ Foundation: _NSGlobalDomain
__ Foundation: _NSIntersectionRange
__ Foundation: _NSLinguisticTagSchemeTokenType
__ Foundation: _NSLinguisticTagWord
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUnionRange
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSLinguisticTagger
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUndoManager
__ Foundation: _OBJC_CLASS_$_NSValue
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ MediaAnalysisServices: _OBJC_CLASS_$_MADService
__ MediaAnalysisServices: _OBJC_CLASS_$_MADVIDocumentRecognitionRequest
__ MediaAnalysisServices: _OBJC_CLASS_$_MADVIDocumentRecognitionResult
__ MediaAnalysisServices: _OBJC_CLASS_$_MADVIMachineReadableCodeDetectionRequest
__ MediaAnalysisServices: _OBJC_CLASS_$_MADVIMachineReadableCodeDetectionResult
__ MediaAnalysisServices: _OBJC_CLASS_$_MADVIVisualSearchGatingRequest
__ MediaAnalysisServices: _OBJC_CLASS_$_MADVIVisualSearchGatingResultItem
__ MediaAnalysisServices: _OBJC_CLASS_$_MADVIVisualSearchRequest
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DConcat
__ QuartzCore: _CATransform3DGetAffineTransform
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DIsAffine
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCAFilterGaussianBlur
__ QuartzCore: _kCAGravityResizeAspectFill
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ RevealCore: _OBJC_CLASS_$_RVItem
__ RevealCore: _OBJC_CLASS_$_RVQuery
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ SoftLinking: __sl_dlopen
__ TextRecognition: _OBJC_CLASS_$_CRDataDetectorsOutputRegion
__ TextRecognition: _OBJC_CLASS_$_CRNormalizedQuad
__ TextRecognition: _deviceHasAppleNeuralEngine
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIAccessibilityElement
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivity
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIButtonConfiguration
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIColorEffect
__ UIKit: _OBJC_CLASS_$_UIContextMenuConfiguration
__ UIKit: _OBJC_CLASS_$_UIContextMenuInteraction
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDragInteraction
__ UIKit: _OBJC_CLASS_$_UIDragItem
__ UIKit: _OBJC_CLASS_$_UIDragPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontMetrics
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UIMenuController
__ UIKit: _OBJC_CLASS_$_UIPasteboard
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPointerInteraction
__ UIKit: _OBJC_CLASS_$_UIPointerLiftEffect
__ UIKit: _OBJC_CLASS_$_UIPointerShape
__ UIKit: _OBJC_CLASS_$_UIPointerStyle
__ UIKit: _OBJC_CLASS_$_UIPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScribbleInteraction
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedDragPreview
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextInputStringTokenizer
__ UIKit: _OBJC_CLASS_$_UITextInteraction
__ UIKit: _OBJC_CLASS_$_UITextPosition
__ UIKit: _OBJC_CLASS_$_UITextRange
__ UIKit: _OBJC_CLASS_$_UITextSelectionRect
__ UIKit: _OBJC_CLASS_$_UITextSelectionRectCustomHandleInfo
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewFloatAnimatableProperty
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$_UIWindowScene
__ UIKit: _OBJC_CLASS_$__UIContextMenuStyle
__ UIKit: _OBJC_METACLASS_$_UIAccessibilityElement
__ UIKit: _OBJC_METACLASS_$_UIActivity
__ UIKit: _OBJC_METACLASS_$_UIBarButtonItem
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UITextInputStringTokenizer
__ UIKit: _OBJC_METACLASS_$_UITextPosition
__ UIKit: _OBJC_METACLASS_$_UITextRange
__ UIKit: _OBJC_METACLASS_$_UITextSelectionRect
__ UIKit: _OBJC_METACLASS_$_UITextSelectionRectCustomHandleInfo
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIAccessibilityTraitLink
__ UIKit: _UIAccessibilityTraitStaticText
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIContentSizeCategoryUnspecified
__ UIKit: _UIDeviceOrientationDidChangeNotification
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectGetCenter
__ UIKit: _UITextSelectionDidScroll
__ UIKit: _UITextSelectionDidZoom
__ UIKit: _UITextSelectionWillScroll
__ UIKit: _UITextSelectionWillZoom
__ UIKit: _UIWindowLevelAlert
__ UniformTypeIdentifiers: _UTTypeJPEG
__ UniformTypeIdentifiers: _UTTypePNG
__ Vision: _OBJC_CLASS_$_VNBarcodeObservation
__ Vision: _OBJC_CLASS_$_VNDetectBarcodesRequest
__ Vision: _OBJC_CLASS_$_VNDocumentObservation
__ Vision: _OBJC_CLASS_$_VNImageRequestHandler
__ Vision: _OBJC_CLASS_$_VNRecognizeDocumentsRequest
__ Vision: _OBJC_CLASS_$_VNRecognizedTextBlockObservation
__ Vision: _OBJC_CLASS_$_VNRectangleObservation
__ Vision: _OBJC_CLASS_$_VNSession
__ Vision: _OBJC_CLASS_$_VNTrackHomographyRequest
__ Vision: _VNBarcodeSymbologyAppClipCode
__ Vision: _VNBarcodeSymbologyQR
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Init
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___invert_f3
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _acos
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _matrix_identity_float3x3
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _tan
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEx
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt9exception
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_getName
VKCCornerLookupButton : VKCTappableView <UIPointerInteractionDelegate, UIGestureRecognizerDelegate>
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  VKCVisualSearchResultItem *resultItem
 @property  UIButton *button
 @property  <VKCCornerLookupButtonDelegate> *delegate
 @property  BOOL isShowingVisualResultsPane
 @property  MADVIVisualSearchResultItem *searchItem
 @property  NSString *currentRVItemID
 @property  BOOL observingInteractionDidFinish
 @property  BOOL didProcessResult
 @property  BOOL shouldShowResultWhenVisible
 @property  double buttonWidth
 @property  double buttonHeight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCCornerLookupButton _updateImage]
  -[VKCCornerLookupButton pointerInteraction:styleForRegion:]
  -[VKCCornerLookupButton setTapGestureRecognizer:]
  -[VKCCornerLookupButton buttonHeight]
  -[VKCCornerLookupButton .cxx_destruct]
  -[VKCCornerLookupButton didTap]
  -[VKCCornerLookupButton button]
  -[VKCCornerLookupButton setDelegate:]
  -[VKCCornerLookupButton gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:]
  -[VKCCornerLookupButton _setupGestures]
  -[VKCCornerLookupButton tapGestureRecognizer]
  -[VKCCornerLookupButton setButton:]
  -[VKCCornerLookupButton delegate]
  -[VKCCornerLookupButton didMoveToWindow]
  -[VKCCornerLookupButton buttonWidth]
  -[VKCCornerLookupButton dealloc]
  -[VKCCornerLookupButton _queryString]
  -[VKCCornerLookupButton _setupButton]
  -[VKCCornerLookupButton setButtonHeight:]
  -[VKCCornerLookupButton setButtonWidth:]
  -[VKCCornerLookupButton setResultItem:]
  -[VKCCornerLookupButton cornerButtonSize]
  -[VKCCornerLookupButton shouldShowResultWhenVisible]
  -[VKCCornerLookupButton showVisualSearchResultView]
  -[VKCCornerLookupButton _symbolNameForItem]
  -[VKCCornerLookupButton _defaultSymbolName]
  -[VKCCornerLookupButton resultItem]
  -[VKCCornerLookupButton imageForButton]
  -[VKCCornerLookupButton updateIndicatorDotForState]
  -[VKCCornerLookupButton contentSizeScaleFactor]
  -[VKCCornerLookupButton _backgroundColorBehindText]
  -[VKCCornerLookupButton showLookupUIPaneForResultItem]
  -[VKCCornerLookupButton didProcessResult]
  -[VKCCornerLookupButton setDidProcessResult:]
  -[VKCCornerLookupButton searchItem]
  -[VKCCornerLookupButton setSearchItem:]
  -[VKCCornerLookupButton queryForProcessingResult]
  -[VKCCornerLookupButton setCurrentRVItemID:]
  -[VKCCornerLookupButton observingInteractionDidFinish]
  -[VKCCornerLookupButton _didDismissVisualResultsPane:]
  -[VKCCornerLookupButton setObservingInteractionDidFinish:]
  -[VKCCornerLookupButton currentRVItemID]
  -[VKCCornerLookupButton initWithFrame:resultItem:]
  -[VKCCornerLookupButton setShouldShowResultWhenVisible:]
  -[VKCCornerLookupButton didDismissVisualResultsPane]
  -[VKCCornerLookupButton isShowingVisualResultsPane]
  -[VKCCornerLookupButton setIsShowingVisualResultsPane:]


VKCVisualSearchCornerView : VKCTappableView <VKCCornerLookupButtonDelegate>
 @property  NSArray *cornerResultItems
 @property  NSMutableArray *cornerButtons
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleScrollViewUnitRect
 @property  NSString *_customAnalyticsIdentifier
 @property  double buttonSpacing
 @property  VKImageAnalysis *analysis
 @property  <VKCVisualSearchCornerViewDelegate> *delegate

  // instance methods
  -[VKCVisualSearchCornerView traitCollectionDidChange:]
  -[VKCVisualSearchCornerView .cxx_destruct]
  -[VKCVisualSearchCornerView setDelegate:]
  -[VKCVisualSearchCornerView init]
  -[VKCVisualSearchCornerView _contentSizeChanged:]
  -[VKCVisualSearchCornerView analysis]
  -[VKCVisualSearchCornerView delegate]
  -[VKCVisualSearchCornerView intrinsicContentSize]
  -[VKCVisualSearchCornerView setAnalysis:]
  -[VKCVisualSearchCornerView scrollViewDidZoomToUnitRect:]
  -[VKCVisualSearchCornerView buttonSpacing]
  -[VKCVisualSearchCornerView set_customAnalyticsIdentifier:]
  -[VKCVisualSearchCornerView _resultItems]
  -[VKCVisualSearchCornerView showVisualSearchResultView]
  -[VKCVisualSearchCornerView lookupButton:didTapVisualSearchIndicatorWithNormalizedBoundingBox:]
  -[VKCVisualSearchCornerView lookupButtonDidDismissController:]
  -[VKCVisualSearchCornerView lookupButton:didProcessResultWithDuration:]
  -[VKCVisualSearchCornerView generateVisualSearchResultForItems:queryID:completionHandler:]
  -[VKCVisualSearchCornerView _showCornerLookupButtonsForResults:]
  -[VKCVisualSearchCornerView _itemObscuredByViewport:]
  -[VKCVisualSearchCornerView invalidateButtonsForResults]
  -[VKCVisualSearchCornerView _updateButtonFrames]
  -[VKCVisualSearchCornerView visibleScrollViewUnitRect]
  -[VKCVisualSearchCornerView sendProcessingAnalyticsEventEventWithItem:duration:]
  -[VKCVisualSearchCornerView sendDismissedAnalyticsEventEventWithItem:]
  -[VKCVisualSearchCornerView setVisibleScrollViewUnitRect:]
  -[VKCVisualSearchCornerView _customAnalyticsIdentifier]
  -[VKCVisualSearchCornerView automaticallyShowVisualSearchResultsIfApplicable]
  -[VKCVisualSearchCornerView cornerResultItems]
  -[VKCVisualSearchCornerView setCornerResultItems:]
  -[VKCVisualSearchCornerView cornerButtons]
  -[VKCVisualSearchCornerView setCornerButtons:]


VKImageAnalyzer : NSObject
 @property  NSObject<OS_dispatch_queue> *processingQueue
 @property  NSObject<OS_dispatch_queue> *realCallbackQueue
 @property  VKImageAnalyzerMadInterface *mad
 @property  <VKAnalyzerAnalyticsDelegate> *_analyticsDelegate
 @property  VKAnalyticsProcessor *analyticsProcessor
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  BOOL createFeedbackProviders

  // class methods
  +[VKImageAnalyzer deviceSupportsImageAnalysis]

  // instance methods
  -[VKImageAnalyzer mad]
  -[VKImageAnalyzer .cxx_destruct]
  -[VKImageAnalyzer callbackQueue]
  -[VKImageAnalyzer init]
  -[VKImageAnalyzer setCallbackQueue:]
  -[VKImageAnalyzer setProcessingQueue:]
  -[VKImageAnalyzer processRequest:progressHandler:completionHandler:]
  -[VKImageAnalyzer cancelAllRequests]
  -[VKImageAnalyzer processingQueue]
  -[VKImageAnalyzer dealloc]
  -[VKImageAnalyzer _analyticsDelegate]
  -[VKImageAnalyzer observeValueForKeyPath:ofObject:change:context:]
  -[VKImageAnalyzer cancelRequestID:]
  -[VKImageAnalyzer statusForRequestID:]
  -[VKImageAnalyzer updateForLiveTextSupport]
  -[VKImageAnalyzer _processRequest:progressHandler:completionHandler:]
  -[VKImageAnalyzer realCallbackQueue]
  -[VKImageAnalyzer createFeedbackProviders]
  -[VKImageAnalyzer analyticsProcessor]
  -[VKImageAnalyzer _forceInProcessAnalysis]
  -[VKImageAnalyzer setCreateFeedbackProviders:]
  -[VKImageAnalyzer setMad:]
  -[VKImageAnalyzer set_analyticsDelegate:]
  -[VKImageAnalyzer setAnalyticsProcessor:]


VKKeyboardCameraViewController : VKCaptureVideoPreviewViewController <VKVideoTextRecognizerDelegate, VKTextLiftingViewDelegate, VKCaptureTextAnalysisRequestDelegate>
 @property  UIView *hitTestView
 @property  VKKeyboardCameraCloseButton *closeButton
 @property  VKTextLiftingView *textLiftingView
 @property  VKKeyboardCameraInsertButton *insertButton
 @property  VKImageAnalysisButton *liftTextButton
 @property  VKKeyboardCameraGuidanceView *guidanceView
 @property  VKVideoTextRecognizer *textRecognizer
 @property  VKKeyboardCameraReticleView *reticleView
 @property  BOOL didSetInitialComparisonPoint
 @property  BOOL didOverrideComparisonPoint
 @property  VKVideoTextRecognizerItem *closestItem
 @property  NSString *previousString
 @property  NSString *liftedString
 @property  BOOL didDismiss
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  NSTimer *timeWithoutTextTimer
 @property  VKCaptureTextAnalyzer *textAnalyzer
 @property  BOOL isTextLifted
 @property  UIPinchGestureRecognizer *pinchGestureRecognizer
 @property  double initialPinchZoom
 @property  BOOL isPinchToZoomInProgress
 @property  UIButton *tapToRadarButton
 @property  BOOL recording
 @property  AVAssetWriter *videoWriter
 @property  AVAssetWriterInput *videoWriterInput
 @property  VKFeedbackProvider *feedbackProvider
 @property  NSMutableArray *dataForRadar
 @property  {?=qiIq} initialRecordingTimestamp
 @property  <VKKeyboardCameraViewControllerDelegate> *delegate
 @property  unsigned long dataTypes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKKeyboardCameraViewController fadeOutAnimationDidEndForView:]
  -[VKKeyboardCameraViewController requestDidCancel:]
  -[VKKeyboardCameraViewController animateAlongsideFadeOutForTextLiftingView:]
  -[VKKeyboardCameraViewController textLiftingAnimationDidEndForView:]
  -[VKKeyboardCameraViewController isRecording]
  -[VKKeyboardCameraViewController request:didFailWithError:]
  -[VKKeyboardCameraViewController request:didRecgonizeTextWithAnalysis:]
  -[VKKeyboardCameraViewController animateAlongsideTextLiftingForView:]
  -[VKKeyboardCameraViewController setTapGestureRecognizer:]
  -[VKKeyboardCameraViewController pinchGestureRecognizer]
  -[VKKeyboardCameraViewController .cxx_destruct]
  -[VKKeyboardCameraViewController viewDidLoad]
  -[VKKeyboardCameraViewController setDelegate:]
  -[VKKeyboardCameraViewController viewDidAppear:]
  -[VKKeyboardCameraViewController setRecording:]
  -[VKKeyboardCameraViewController tapGestureRecognizer]
  -[VKKeyboardCameraViewController didDismiss]
  -[VKKeyboardCameraViewController hitTestView]
  -[VKKeyboardCameraViewController captureOutput:didOutputSampleBuffer:fromConnection:]
  -[VKKeyboardCameraViewController viewWillDisappear:]
  -[VKKeyboardCameraViewController request:didDetectTextWithResult:]
  -[VKKeyboardCameraViewController setHitTestView:]
  -[VKKeyboardCameraViewController viewDidLayoutSubviews]
  -[VKKeyboardCameraViewController dataTypes]
  -[VKKeyboardCameraViewController viewWillAppear:]
  -[VKKeyboardCameraViewController delegate]
  -[VKKeyboardCameraViewController frame]
  -[VKKeyboardCameraViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[VKKeyboardCameraViewController setCloseButton:]
  -[VKKeyboardCameraViewController dealloc]
  -[VKKeyboardCameraViewController closeButton]
  -[VKKeyboardCameraViewController onTap:]
  -[VKKeyboardCameraViewController setPinchGestureRecognizer:]
  -[VKKeyboardCameraViewController _canShowWhileLocked]
  -[VKKeyboardCameraViewController tapToRadarButton]
  -[VKKeyboardCameraViewController setTapToRadarButton:]
  -[VKKeyboardCameraViewController setDataTypes:]
  -[VKKeyboardCameraViewController textAnalyzer]
  -[VKKeyboardCameraViewController onCancel]
  -[VKKeyboardCameraViewController setVideoWriterInput:]
  -[VKKeyboardCameraViewController videoWriterInput]
  -[VKKeyboardCameraViewController videoWriter]
  -[VKKeyboardCameraViewController setVideoWriter:]
  -[VKKeyboardCameraViewController setReticleView:]
  -[VKKeyboardCameraViewController reticleView]
  -[VKKeyboardCameraViewController setDidDismiss:]
  -[VKKeyboardCameraViewController textRecognizer]
  -[VKKeyboardCameraViewController setTextRecognizer:]
  -[VKKeyboardCameraViewController setFeedbackProvider:]
  -[VKKeyboardCameraViewController setPreviousString:]
  -[VKKeyboardCameraViewController addButtons]
  -[VKKeyboardCameraViewController addTapToRadarButtonIfNeeded]
  -[VKKeyboardCameraViewController setGuidanceView:]
  -[VKKeyboardCameraViewController onPinch:]
  -[VKKeyboardCameraViewController configureConstraints]
  -[VKKeyboardCameraViewController onTapToRadarButton]
  -[VKKeyboardCameraViewController onInsert]
  -[VKKeyboardCameraViewController setInsertButton:]
  -[VKKeyboardCameraViewController onLiftTextButton:]
  -[VKKeyboardCameraViewController setLiftTextButton:]
  -[VKKeyboardCameraViewController setClosestItem:]
  -[VKKeyboardCameraViewController startTimeWithoutTextTimer]
  -[VKKeyboardCameraViewController textLiftingView]
  -[VKKeyboardCameraViewController previousString]
  -[VKKeyboardCameraViewController insertButton]
  -[VKKeyboardCameraViewController closestItem]
  -[VKKeyboardCameraViewController resetToDefaultComparisonPoint]
  -[VKKeyboardCameraViewController liftTextButton]
  -[VKKeyboardCameraViewController animate:]
  -[VKKeyboardCameraViewController guidanceView]
  -[VKKeyboardCameraViewController didSetInitialComparisonPoint]
  -[VKKeyboardCameraViewController setDidSetInitialComparisonPoint:]
  -[VKKeyboardCameraViewController isTextLifted]
  -[VKKeyboardCameraViewController liftedString]
  -[VKKeyboardCameraViewController updateInsertButtonWithRecognizedString:]
  -[VKKeyboardCameraViewController dismissLiftedText]
  -[VKKeyboardCameraViewController liftTextIfPossible]
  -[VKKeyboardCameraViewController setDidOverrideComparisonPoint:]
  -[VKKeyboardCameraViewController setInitialPinchZoom:]
  -[VKKeyboardCameraViewController setIsPinchToZoomInProgress:]
  -[VKKeyboardCameraViewController willBeginPinchToZoom]
  -[VKKeyboardCameraViewController initialPinchZoom]
  -[VKKeyboardCameraViewController didEndPinchToZoom]
  -[VKKeyboardCameraViewController clearFoundItemAndRemoveLiftTextButton:]
  -[VKKeyboardCameraViewController liftTextWithCompletion:]
  -[VKKeyboardCameraViewController setTextLiftingView:]
  -[VKKeyboardCameraViewController setIsTextLifted:]
  -[VKKeyboardCameraViewController liftTextWithSnapshot:]
  -[VKKeyboardCameraViewController setTextAnalyzer:]
  -[VKKeyboardCameraViewController setLiftedString:]
  -[VKKeyboardCameraViewController onSelectionChanged:]
  -[VKKeyboardCameraViewController timeWithoutTextTimer]
  -[VKKeyboardCameraViewController setTimeWithoutTextTimer:]
  -[VKKeyboardCameraViewController findTextLocalizedStringKey]
  -[VKKeyboardCameraViewController startRecordingForTapToRadarAtTimestamp:]
  -[VKKeyboardCameraViewController stopRecordingForTapToRadar]
  -[VKKeyboardCameraViewController videoTextRecognizer:added:updated:removed:bufferTimestamp:]
  -[VKKeyboardCameraViewController arrayToJSON:]
  -[VKKeyboardCameraViewController initialRecordingTimestamp]
  -[VKKeyboardCameraViewController dataForRadar]
  -[VKKeyboardCameraViewController didOverrideComparisonPoint]
  -[VKKeyboardCameraViewController cancelTimeWithoutTextTimer]
  -[VKKeyboardCameraViewController isPinchToZoomInProgress]
  -[VKKeyboardCameraViewController feedbackProvider]
  -[VKKeyboardCameraViewController setInitialRecordingTimestamp:]
  -[VKKeyboardCameraViewController setDataForRadar:]
  -[VKKeyboardCameraViewController sendRadarWithVideo]
  -[VKKeyboardCameraViewController videoTextRecognizer:added:updated:removed:]
  -[VKKeyboardCameraViewController videoTextRecognizer:didChangeStability:]
  -[VKKeyboardCameraViewController wantsRegionOfInterest]
  -[VKKeyboardCameraViewController didChangeRegionOfInterest:]
  -[VKKeyboardCameraViewController desiredDeviceTypes]


VKVideoTextRecognizer : NSObject
 @property  <VKVideoTextRecognizerDelegate> *delegate
 @property  NSArray *recognizedItems
 @property  BOOL paused
 @property  double stabilityInitializationThreshold
 @property  double stabilityGainedThreshold
 @property  double stabilityLostThreshold
 @property  unsigned long stabilityState
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} regionOfInterest
 @property  {CGPoint=dd} comparisonPoint
 @property  BOOL usesAlternateLineGrouping
 @property  BOOL allowsFallbackWhenUsingDataTypes
 @property  NSArray *recognitionLanguages

  // instance methods
  -[VKVideoTextRecognizer usesAlternateLineGrouping]
  -[VKVideoTextRecognizer .cxx_destruct]
  -[VKVideoTextRecognizer paused]
  -[VKVideoTextRecognizer setUsesAlternateLineGrouping:]
  -[VKVideoTextRecognizer setDelegate:]
  -[VKVideoTextRecognizer setRecognitionLanguages:]
  -[VKVideoTextRecognizer resumeWithCompletion:]
  -[VKVideoTextRecognizer reset]
  -[VKVideoTextRecognizer pauseWithCompletion:]
  -[VKVideoTextRecognizer delegate]
  -[VKVideoTextRecognizer recognitionLanguages]
  -[VKVideoTextRecognizer regionOfInterest]
  -[VKVideoTextRecognizer setRegionOfInterest:]
  -[VKVideoTextRecognizer initUsingSingleItemRecognition:singleLine:dataType:]
  -[VKVideoTextRecognizer setComparisonPoint:]
  -[VKVideoTextRecognizer setAllowsFallbackWhenUsingDataTypes:]
  -[VKVideoTextRecognizer updateFromSampleBuffer:]
  -[VKVideoTextRecognizer recognizedItems]
  -[VKVideoTextRecognizer q_updateStabilityFromSampleBuffer:]
  -[VKVideoTextRecognizer q_performReset]
  -[VKVideoTextRecognizer q_recognizeTextFromSampleBuffer:bufferTimestamp:]
  -[VKVideoTextRecognizer q_trackTextFromSampleBuffer:bufferTimestamp:]
  -[VKVideoTextRecognizer q_updateStabilityState:]
  -[VKVideoTextRecognizer updateSingleItemFromRecognitionResults:blockType:transform:bufferTimestamp:]
  -[VKVideoTextRecognizer updateSingleItemFromRecognitionResults:dataType:blockType:transform:bufferTimestamp:]
  -[VKVideoTextRecognizer updateItemsFromRecognitionResults:blockType:transform:bufferTimestamp:]
  -[VKVideoTextRecognizer q_updateFromHomographyResult:bufferTimestamp:]
  -[VKVideoTextRecognizer updateItemsTransform]
  -[VKVideoTextRecognizer delegateVideoTextRecognizer:added:updated:removed:bufferTimestamp:]
  -[VKVideoTextRecognizer clockwiseLayerPointsFromObservation:]
  -[VKVideoTextRecognizer layerQuadFromObservation:]
  -[VKVideoTextRecognizer lineGeometriesFromTextBlock:]
  -[VKVideoTextRecognizer comparisonPoint]
  -[VKVideoTextRecognizer updateSingleItemFromTextBlockObservation:transform:bufferTimestamp:]
  -[VKVideoTextRecognizer allowsFallbackWhenUsingDataTypes]
  -[VKVideoTextRecognizer initWithVideoOrientation:dimensions:]
  -[VKVideoTextRecognizer setStabilityInitializationThreshold:]
  -[VKVideoTextRecognizer setStabilityGainedThreshold:]
  -[VKVideoTextRecognizer setStabilityLostThreshold:]
  -[VKVideoTextRecognizer stabilityInitializationThreshold]
  -[VKVideoTextRecognizer stabilityGainedThreshold]
  -[VKVideoTextRecognizer stabilityLostThreshold]
  -[VKVideoTextRecognizer stabilityState]


VKKeyboardCameraGuidanceView : UIView
 @property  double preferredMaxLayoutWidth

  // instance methods
  -[VKKeyboardCameraGuidanceView viewForFirstBaselineLayout]
  -[VKKeyboardCameraGuidanceView preferredMaxLayoutWidth]
  -[VKKeyboardCameraGuidanceView didMoveToSuperview]
  -[VKKeyboardCameraGuidanceView .cxx_destruct]
  -[VKKeyboardCameraGuidanceView initWithFrame:]
  -[VKKeyboardCameraGuidanceView setPreferredMaxLayoutWidth:]
  -[VKKeyboardCameraGuidanceView showGuidanceWithText:]
  -[VKKeyboardCameraGuidanceView hideGuidance]
  -[VKKeyboardCameraGuidanceView _reallyShowGuidance]
  -[VKKeyboardCameraGuidanceView _reallyHideGuidance]


VKAnalyticsMRCEvent : VKAnalyticsEvent
 @property  long long eventType
 @property  NSString *barcodeSymbology
 @property  long long _dataType
 @property  long long dataType

  // instance methods
  -[VKAnalyticsMRCEvent .cxx_destruct]
  -[VKAnalyticsMRCEvent dataType]
  -[VKAnalyticsMRCEvent _dataType]
  -[VKAnalyticsMRCEvent type]
  -[VKAnalyticsMRCEvent eventType]
  -[VKAnalyticsMRCEvent eventKey]
  -[VKAnalyticsMRCEvent setEventType:]
  -[VKAnalyticsMRCEvent coreAnalyticsDictionary]
  -[VKAnalyticsMRCEvent set_dataType:]
  -[VKAnalyticsMRCEvent barcodeSymbology]
  -[VKAnalyticsMRCEvent initWithElement:eventType:customIdentifier:]
  -[VKAnalyticsMRCEvent setBarcodeSymbology:]


VKAnalyticsEvent : NSObject
 @property  NSString *bundleIdentifier
 @property  BOOL isPerformingAutomatedTest
 @property  long long type
 @property  NSDate *date
 @property  VKAnalyticsAnalyzerEvent *analyzerEvent
 @property  VKAnalyticsTextEvent *textEvent
 @property  VKAnalyticsDDEvent *ddEvent
 @property  VKAnalyticsMRCEvent *mrcEvent
 @property  VKAnalyticsInteractionEvent *interactionEvent
 @property  VKAnalyticsVisualSearchEvent *visualSearchEvent

  // instance methods
  -[VKAnalyticsEvent bundleIdentifier]
  -[VKAnalyticsEvent .cxx_destruct]
  -[VKAnalyticsEvent setBundleIdentifier:]
  -[VKAnalyticsEvent type]
  -[VKAnalyticsEvent initWithCustomIdentifier:]
  -[VKAnalyticsEvent eventKey]
  -[VKAnalyticsEvent date]
  -[VKAnalyticsEvent coreAnalyticsDictionary]
  -[VKAnalyticsEvent isPerformingAutomatedTest]
  -[VKAnalyticsEvent analyzerEvent]
  -[VKAnalyticsEvent textEvent]
  -[VKAnalyticsEvent ddEvent]
  -[VKAnalyticsEvent mrcEvent]
  -[VKAnalyticsEvent interactionEvent]
  -[VKAnalyticsEvent visualSearchEvent]


VKPlatformView : UIView
  // instance methods
  -[VKPlatformView vk_alpha]


VKImageAnalysisBarButtonItem : VKSelectableBarButtonItem
 @property  unsigned long mode

  // class methods
  +[VKImageAnalysisBarButtonItem analysisButtonWithTarget:action:mode:]
  +[VKImageAnalysisBarButtonItem imageForMode:]

  // instance methods
  -[VKImageAnalysisBarButtonItem setMode:]
  -[VKImageAnalysisBarButtonItem mode]


VKCaptureTextDetectionResult : NSObject
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _imageBounds
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox
 @property  VKQuad *boundingQuad
 @property  NSArray *lineQuads
 @property  NSArray *blockQuads
 @property  NSArray *normalizedLineQuads
 @property  double baselineAngle

  // instance methods
  -[VKCaptureTextDetectionResult _imageBounds]
  -[VKCaptureTextDetectionResult boundingBox]
  -[VKCaptureTextDetectionResult .cxx_destruct]
  -[VKCaptureTextDetectionResult boundingQuad]
  -[VKCaptureTextDetectionResult baselineAngle]
  -[VKCaptureTextDetectionResult boundingPathWithPadding:cornerRadius:]
  -[VKCaptureTextDetectionResult initWithBlocks:imageSize:]
  -[VKCaptureTextDetectionResult normalizedLineQuads]
  -[VKCaptureTextDetectionResult lineQuads]
  -[VKCaptureTextDetectionResult initWithBlock:imageSize:]
  -[VKCaptureTextDetectionResult groupedPath]
  -[VKCaptureTextDetectionResult groupedPathForLinesWithPadding:cornerRadius:]
  -[VKCaptureTextDetectionResult blockQuads]


VKCImageAnalysisResult : VKCTextRecognitionResult
 @property  NSArray *textDataDetectorElements
 @property  NSArray *mrcDataDetectorElements
 @property  NSArray *appClipDataDetectorElements
 @property  VKCVisualSearchResult *visualSearchResult
 @property  VKImageAnalyzerRequest *request
 @property  int analysisRequestID
 @property  double totalBoundingBoxTextArea
 @property  double totalQuadTextArea
 @property  UIMenu *mrcMenu
 @property  UIViewController *presentingViewControllerForMrcAction
 @property  NSArray *barcodeActions

  // class methods
  +[VKCImageAnalysisResult supportsSecureCoding]

  // instance methods
  -[VKCImageAnalysisResult setRequest:]
  -[VKCImageAnalysisResult initWithCoder:]
  -[VKCImageAnalysisResult mrcMenu]
  -[VKCImageAnalysisResult .cxx_destruct]
  -[VKCImageAnalysisResult dictionaryRepresentation]
  -[VKCImageAnalysisResult setPresentingViewControllerForMrcAction:]
  -[VKCImageAnalysisResult request]
  -[VKCImageAnalysisResult encodeWithCoder:]
  -[VKCImageAnalysisResult visualSearchResult]
  -[VKCImageAnalysisResult initWithDocumentObservation:mrcDataDetectors:imageSize:]
  -[VKCImageAnalysisResult mrcDataDetectorElements]
  -[VKCImageAnalysisResult presentingViewControllerForMrcAction]
  -[VKCImageAnalysisResult setVisualSearchResult:]
  -[VKCImageAnalysisResult totalBoundingBoxTextArea]
  -[VKCImageAnalysisResult totalQuadTextArea]
  -[VKCImageAnalysisResult barcodeActions]
  -[VKCImageAnalysisResult textDataDetectorElements]
  -[VKCImageAnalysisResult appClipDataDetectorElements]
  -[VKCImageAnalysisResult analysisRequestID]
  -[VKCImageAnalysisResult setAnalysisRequestID:]
  -[VKCImageAnalysisResult setTotalBoundingBoxTextArea:]
  -[VKCImageAnalysisResult setTotalQuadTextArea:]
  -[VKCImageAnalysisResult linesPlistFromSourceDocument:]
  -[VKCImageAnalysisResult dataDetectorsFromRecognitionResult:]
  -[VKCImageAnalysisResult wordsPlistFromRegion:sourceDocument:]
  -[VKCImageAnalysisResult wordPlistFromOutputRegion:document:]
  -[VKCImageAnalysisResult ddDictionaryFromDataDetectorElement:]


VKCaptureTextAnalyzer : NSObject
 @property  NSObject<OS_dispatch_queue> *_processingQueue
 @property  VKCaptureTextAnalysisRequest *_pendingRequest
 @property  VKCaptureTextAnalysisRequest *_processingRequest
 @property  BOOL _processing
 @property  BOOL shouldCreateFeedbackProviders

  // instance methods
  -[VKCaptureTextAnalyzer _processingQueue]
  -[VKCaptureTextAnalyzer .cxx_destruct]
  -[VKCaptureTextAnalyzer init]
  -[VKCaptureTextAnalyzer cancelAllRequests]
  -[VKCaptureTextAnalyzer dealloc]
  -[VKCaptureTextAnalyzer _processingRequest]
  -[VKCaptureTextAnalyzer _pendingRequest]
  -[VKCaptureTextAnalyzer processRequest:]
  -[VKCaptureTextAnalyzer _isProcessing]
  -[VKCaptureTextAnalyzer _setProcessing:]
  -[VKCaptureTextAnalyzer setShouldCreateFeedbackProviders:]
  -[VKCaptureTextAnalyzer _enqueueProcessingForRequest:]
  -[VKCaptureTextAnalyzer _setPendingRequest:]
  -[VKCaptureTextAnalyzer _setProcessingRequest:]
  -[VKCaptureTextAnalyzer _documentDetectionRequest]
  -[VKCaptureTextAnalyzer _isCanceledRequest:]
  -[VKCaptureTextAnalyzer _blocksIntersectingQuad:inDocument:]
  -[VKCaptureTextAnalyzer _documentRecognitionRequestWithInputBlocks:]
  -[VKCaptureTextAnalyzer _imageAnalysisForDocument:imageSize:]
  -[VKCaptureTextAnalyzer _didProcessRequest:withDetectionResult:analysis:error:]
  -[VKCaptureTextAnalyzer shouldCreateFeedbackProviders]
  -[VKCaptureTextAnalyzer _documentRecognitionRequestWithInputBlock:]


VKFeedbackProviderViewController : UIViewController
 @property  <VKFeedbackProviderViewControllerDelegate> *delegate

  // instance methods
  -[VKFeedbackProviderViewController present]
  -[VKFeedbackProviderViewController _createContentView]
  -[VKFeedbackProviderViewController .cxx_destruct]
  -[VKFeedbackProviderViewController viewDidLoad]
  -[VKFeedbackProviderViewController setDelegate:]
  -[VKFeedbackProviderViewController delegate]
  -[VKFeedbackProviderViewController dealloc]
  -[VKFeedbackProviderViewController loadView]
  -[VKFeedbackProviderViewController _canShowWhileLocked]
  -[VKFeedbackProviderViewController _contentRowButtonWithTitle:tag:allowToggle:]
  -[VKFeedbackProviderViewController _toggleContentRowButton:]
  -[VKFeedbackProviderViewController initWithOptions:attachments:]


VKCTextSelectionLongPressDelegateHandler : NSObject <UIGestureRecognizerDelegate>
 @property  UIGestureRecognizer *gestureRecognizer
 @property  <VKCTextSelectionLongPressHandlerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCTextSelectionLongPressDelegateHandler setGestureRecognizer:]
  -[VKCTextSelectionLongPressDelegateHandler gestureRecognizer]
  -[VKCTextSelectionLongPressDelegateHandler gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[VKCTextSelectionLongPressDelegateHandler .cxx_destruct]
  -[VKCTextSelectionLongPressDelegateHandler setDelegate:]
  -[VKCTextSelectionLongPressDelegateHandler gestureRecognizer:shouldReceiveTouch:]
  -[VKCTextSelectionLongPressDelegateHandler delegate]


VKCImageContentRectCalculator : NSObject
  // class methods
  +[VKCImageContentRectCalculator processNormalizedRect:forContentMode:]
  +[VKCImageContentRectCalculator unitContentsRectForBounds:contentMode:imageSize:]


VKCBaseDataDetectorElement : VKCBaseElement <VKAnalysisElementDebugMenuProvider>
 @property  NSUUID *uuid
 @property  DDScannerResult *scannerResult
 @property  NSArray *boundingQuads
 @property  unsigned long dataDetectorTypes
 @property  BOOL isTextDataDetector
 @property  BOOL isMRCDataDetector
 @property  BOOL wantsMacOSHandCursor
 @property  NSString *stringValue
 @property  UIMenu *debugMenu

  // class methods
  +[VKCBaseDataDetectorElement dataDetectorTypesForScannerResult:]
  +[VKCBaseDataDetectorElement stringArrayForVKDataDetectorTypes:]

  // instance methods
  -[VKCBaseDataDetectorElement stringValue]
  -[VKCBaseDataDetectorElement dataDetectorTypes]
  -[VKCBaseDataDetectorElement .cxx_destruct]
  -[VKCBaseDataDetectorElement elementType]
  -[VKCBaseDataDetectorElement uuid]
  -[VKCBaseDataDetectorElement containsPoint:]
  -[VKCBaseDataDetectorElement boundingQuads]
  -[VKCBaseDataDetectorElement setUuid:]
  -[VKCBaseDataDetectorElement scannerResult]
  -[VKCBaseDataDetectorElement isTextDataDetector]
  -[VKCBaseDataDetectorElement isMRCDataDetector]
  -[VKCBaseDataDetectorElement debugMenu]
  -[VKCBaseDataDetectorElement isInspectableCellSelectable]
  -[VKCBaseDataDetectorElement wantsMacOSHandCursor]


VKCImageTextSelectionView : VKCImageBaseOverlayView
 @property  NSArray *allLineQuads
 @property  CAShapeLayer *highlightLayer
 @property  CALayer *highlightShadowLayer
 @property  UIBezierPath *normalizedHighlightPath
 @property  UIBezierPath *borderedNormalizedHighlightPath
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} highlightLayerStartContentsRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} currentContentsRectInLayerCoodinates
 @property  NSObject<OS_dispatch_queue> *analyticsQueue
 @property  <VKCImageTextSelectionViewDelegate> *textSelectionDelegate
 @property  VKTextRange *documentRange
 @property  NSString *text
 @property  NSString *selectedText
 @property  VKTextRange *selectedRange
 @property  BOOL highlightSelectableItems
 @property  BOOL longPressDataDetectorsInTextMode

  // instance methods
  -[VKCImageTextSelectionView caretRectForPosition:]
  -[VKCImageTextSelectionView selectionRectsForRange:]
  -[VKCImageTextSelectionView comparePosition:toPosition:]
  -[VKCImageTextSelectionView positionWithinRange:farthestInDirection:]
  -[VKCImageTextSelectionView firstRectForRange:]
  -[VKCImageTextSelectionView selectedText]
  -[VKCImageTextSelectionView characterRangeAtPoint:]
  -[VKCImageTextSelectionView closestPositionToPoint:withinRange:]
  -[VKCImageTextSelectionView documentRange]
  -[VKCImageTextSelectionView closestPositionToPoint:]
  -[VKCImageTextSelectionView positionFromPosition:inDirection:offset:]
  -[VKCImageTextSelectionView characterRangeByExtendingPosition:inDirection:]
  -[VKCImageTextSelectionView offsetFromPosition:toPosition:]
  -[VKCImageTextSelectionView selectedRange]
  -[VKCImageTextSelectionView setAnalyticsQueue:]
  -[VKCImageTextSelectionView setSelectedRange:]
  -[VKCImageTextSelectionView .cxx_destruct]
  -[VKCImageTextSelectionView baseWritingDirectionForPosition:inDirection:]
  -[VKCImageTextSelectionView setFrame:]
  -[VKCImageTextSelectionView textInRange:]
  -[VKCImageTextSelectionView highlightLayer]
  -[VKCImageTextSelectionView setHighlightLayer:]
  -[VKCImageTextSelectionView positionFromPosition:offset:]
  -[VKCImageTextSelectionView initWithFrame:]
  -[VKCImageTextSelectionView analyticsQueue]
  -[VKCImageTextSelectionView setBounds:]
  -[VKCImageTextSelectionView text]
  -[VKCImageTextSelectionView setHighlightSelectableItems:]
  -[VKCImageTextSelectionView highlightSelectableItems]
  -[VKCImageTextSelectionView setRecognitionResult:]
  -[VKCImageTextSelectionView allLineQuads]
  -[VKCImageTextSelectionView quadsForAllWordsForCurrentLayout]
  -[VKCImageTextSelectionView setDocumentRange:]
  -[VKCImageTextSelectionView performHighlightSelectableTextAnimated:]
  -[VKCImageTextSelectionView setHighlightSelectableItems:animated:]
  -[VKCImageTextSelectionView highlightShadowLayer]
  -[VKCImageTextSelectionView updateHighlightLayerGeometryIfVisible]
  -[VKCImageTextSelectionView textSelectionDelegate]
  -[VKCImageTextSelectionView updateHighlightLayerGeometry]
  -[VKCImageTextSelectionView transformForHighlightLayerInCurrentBounds]
  -[VKCImageTextSelectionView currentContentsRectInLayerCoodinates]
  -[VKCImageTextSelectionView normalizedHighlightPath]
  -[VKCImageTextSelectionView borderedNormalizedHighlightPath]
  -[VKCImageTextSelectionView setNormalizedHighlightPath:]
  -[VKCImageTextSelectionView setBorderedNormalizedHighlightPath:]
  -[VKCImageTextSelectionView boundedPositionFromPosition:]
  -[VKCImageTextSelectionView closestBlockOfType:toPoint:maxDistance:]
  -[VKCImageTextSelectionView updateHighlightLayerContentIfVisible]
  -[VKCImageTextSelectionView closestQuadForBlockOfType:toPoint:maxDistance:]
  -[VKCImageTextSelectionView updateSelectionRectsForBoundsChange]
  -[VKCImageTextSelectionView containsTextAtPoint:]
  -[VKCImageTextSelectionView containsSelectedTextAtPoint:]
  -[VKCImageTextSelectionView imageContainsPoint:]
  -[VKCImageTextSelectionView sendAnalyticsEventWithSelector:type:source:]
  -[VKCImageTextSelectionView setTextSelectionDelegate:]
  -[VKCImageTextSelectionView longPressDataDetectorsInTextMode]
  -[VKCImageTextSelectionView setLongPressDataDetectorsInTextMode:]
  -[VKCImageTextSelectionView setAllLineQuads:]
  -[VKCImageTextSelectionView setHighlightShadowLayer:]
  -[VKCImageTextSelectionView highlightLayerStartContentsRect]
  -[VKCImageTextSelectionView setHighlightLayerStartContentsRect:]


VKCTextElementProcessor : NSObject
  // class methods
  +[VKCTextElementProcessor textElementsFromCRDocumentOutputRegion:]
  +[VKCTextElementProcessor dataDetectorsFromCRDocumentOutputRegion:shouldFilter:]
  +[VKCTextElementProcessor dataDetectorElementFromVNBarcodeObservation:loggingIndex:]


VKVisualSearchActivity : UIActivity
 @property  NSString *title
 @property  UIImage *image
 @property  UIViewController *presentingViewController
 @property  ^{CGImage=} imageToProcess

  // instance methods
  -[VKVisualSearchActivity setTitle:]
  -[VKVisualSearchActivity image]
  -[VKVisualSearchActivity .cxx_destruct]
  -[VKVisualSearchActivity setPresentingViewController:]
  -[VKVisualSearchActivity activityType]
  -[VKVisualSearchActivity canPerformWithActivityItems:]
  -[VKVisualSearchActivity performActivity]
  -[VKVisualSearchActivity presentingViewController]
  -[VKVisualSearchActivity title]
  -[VKVisualSearchActivity activityTitle]
  -[VKVisualSearchActivity setImage:]
  -[VKVisualSearchActivity activityImage]
  -[VKVisualSearchActivity imageToProcess]
  -[VKVisualSearchActivity initWithImage:presentingViewController:]
  -[VKVisualSearchActivity setImageToProcess:]


VKTextInputStringTokenizer : UITextInputStringTokenizer
 @property  VKCTextRecognitionResult *recognitionResult

  // instance methods
  -[VKTextInputStringTokenizer isPosition:withinTextUnit:inDirection:]
  -[VKTextInputStringTokenizer positionFromPosition:toBoundary:inDirection:]
  -[VKTextInputStringTokenizer rangeEnclosingPosition:withGranularity:inDirection:]
  -[VKTextInputStringTokenizer .cxx_destruct]
  -[VKTextInputStringTokenizer isPosition:atBoundary:inDirection:]
  -[VKTextInputStringTokenizer setRecognitionResult:]
  -[VKTextInputStringTokenizer recognitionResult]
  -[VKTextInputStringTokenizer initWithTextInput:recognitionResult:]


VKTextPosition : VKBaseTextPosition
 @property  long long offset

  // class methods
  +[VKTextPosition positionWithOffset:]
  +[VKTextPosition zeroPosition]

  // instance methods
  -[VKTextPosition offset]
  -[VKTextPosition summaryDescription]
  -[VKTextPosition isEqual:]
  -[VKTextPosition setOffset:]
  -[VKTextPosition initWithOffset:]
  -[VKTextPosition positionByAddingOffset:]


VKTextRange : VKBaseTextRange <NSCopying>
 @property  VKTextPosition *start
 @property  VKTextPosition *end
 @property  {_NSRange=QQ} nsRange
 @property  BOOL isZeroRange
 @property  BOOL isNSNotFound
 @property  unsigned long minIndex
 @property  unsigned long maxIndex
 @property  unsigned long location
 @property  unsigned long length

  // class methods
  +[VKTextRange rangeWithStart:end:]
  +[VKTextRange rangeWithNSRange:]
  +[VKTextRange rangeWithStartOffset:endOffset:]
  +[VKTextRange zeroRange]
  +[VKTextRange defaultRange]

  // instance methods
  -[VKTextRange setEnd:]
  -[VKTextRange isEmpty]
  -[VKTextRange initWithRange:]
  -[VKTextRange .cxx_destruct]
  -[VKTextRange setStart:]
  -[VKTextRange summaryDescription]
  -[VKTextRange end]
  -[VKTextRange length]
  -[VKTextRange isEqual:]
  -[VKTextRange initWithStart:end:]
  -[VKTextRange location]
  -[VKTextRange start]
  -[VKTextRange copyWithZone:]
  -[VKTextRange nsRange]
  -[VKTextRange initWithStartOffset:endOffset:]
  -[VKTextRange minIndex]
  -[VKTextRange maxIndex]
  -[VKTextRange isZeroRange]
  -[VKTextRange containsTextPosition:]
  -[VKTextRange isNSNotFound]


VKTextSelectionRectCustomHandleInfo : UITextSelectionRectCustomHandleInfo
 @property  {CGPoint=dd} bottomLeft
 @property  {CGPoint=dd} topLeft
 @property  {CGPoint=dd} bottomRight
 @property  {CGPoint=dd} topRight

  // instance methods
  -[VKTextSelectionRectCustomHandleInfo topLeft]
  -[VKTextSelectionRectCustomHandleInfo setTopLeft:]
  -[VKTextSelectionRectCustomHandleInfo setTopRight:]
  -[VKTextSelectionRectCustomHandleInfo setBottomRight:]
  -[VKTextSelectionRectCustomHandleInfo setBottomLeft:]
  -[VKTextSelectionRectCustomHandleInfo topRight]
  -[VKTextSelectionRectCustomHandleInfo bottomRight]
  -[VKTextSelectionRectCustomHandleInfo bottomLeft]


VKTextSelectionRect : VKBaseTextSelectionRect
 @property  BOOL containsStart
 @property  BOOL containsEnd
 @property  long long writingDirection
 @property  UIBezierPath *_path
 @property  VKTextSelectionRectCustomHandleInfo *_customHandleInfo
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rect
 @property  NSString *_transcript
 @property  VKQuad *quad

  // instance methods
  -[VKTextSelectionRect quad]
  -[VKTextSelectionRect rect]
  -[VKTextSelectionRect .cxx_destruct]
  -[VKTextSelectionRect summaryDescription]
  -[VKTextSelectionRect setRect:]
  -[VKTextSelectionRect containsEnd]
  -[VKTextSelectionRect writingDirection]
  -[VKTextSelectionRect _customHandleInfo]
  -[VKTextSelectionRect containsStart]
  -[VKTextSelectionRect setWritingDirection:]
  -[VKTextSelectionRect setContainsEnd:]
  -[VKTextSelectionRect containsPoint:]
  -[VKTextSelectionRect _path]
  -[VKTextSelectionRect setContainsStart:]
  -[VKTextSelectionRect _transcript]
  -[VKTextSelectionRect handleInfoForQuad:origin:]
  -[VKTextSelectionRect initWithRect:containsStart:containsEnd:writingDirection:quad:]
  -[VKTextSelectionRect set_path:]
  -[VKTextSelectionRect set_customHandleInfo:]
  -[VKTextSelectionRect set_transcript:]


VKCBaseElement : NSObject
 @property  VKQuad *quad
 @property  VKCBaseElement *parent
 @property  CROutputRegion *crOutputRegion
 @property  CRDocumentOutputRegion *parentCRDocument
 @property  long long elementType
 @property  NSString *stringValue
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imageSpaceBoundingBox
 @property  int confidence
 @property  NSArray *components
 @property  unsigned long numberOfChildren
 @property  NSArray *children
 @property  BOOL hasChildren

  // instance methods
  -[VKCBaseElement stringValue]
  -[VKCBaseElement quad]
  -[VKCBaseElement boundingBox]
  -[VKCBaseElement children]
  -[VKCBaseElement .cxx_destruct]
  -[VKCBaseElement confidence]
  -[VKCBaseElement setQuad:]
  -[VKCBaseElement elementType]
  -[VKCBaseElement setParent:]
  -[VKCBaseElement components]
  -[VKCBaseElement parent]
  -[VKCBaseElement type]
  -[VKCBaseElement containsPoint:]
  -[VKCBaseElement numberOfChildren]
  -[VKCBaseElement hasChildren]
  -[VKCBaseElement childAtIndex:]
  -[VKCBaseElement isInspectableCellSelectable]
  -[VKCBaseElement crOutputRegion]
  -[VKCBaseElement loadInfoFromCROutputRegion:]
  -[VKCBaseElement recursiveSearchForCROutputRegion:]
  -[VKCBaseElement imageSpaceBoundingBox]
  -[VKCBaseElement setCrOutputRegion:]
  -[VKCBaseElement parentCRDocument]
  -[VKCBaseElement setParentCRDocument:]


VKCImageCustomHighlightView : VKCImageBaseOverlayView
 @property  UIColor *highlightColor
 @property  NSArray *selectionRects
 @property  NSArray *matchedRanges
 @property  NSArray *highlightRanges
 @property  CAShapeLayer *highlightLayer
 @property  CALayer *highlightShadowLayer
 @property  CAShapeLayer *highlightColorLayer
 @property  UIBezierPath *normalizedHighlightPath
 @property  UIBezierPath *borderedNormalizedHighlightPath
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} startingHighlightLayerRect
 @property  BOOL isConfiguringHighlights
 @property  NSMutableArray *highlightDots
 @property  <VKCImageCustomHighlightViewDelegate> *highlightViewDelegate

  // instance methods
  -[VKCImageCustomHighlightView .cxx_destruct]
  -[VKCImageCustomHighlightView selectionRects]
  -[VKCImageCustomHighlightView layoutSubviews]
  -[VKCImageCustomHighlightView highlightLayer]
  -[VKCImageCustomHighlightView setHighlightLayer:]
  -[VKCImageCustomHighlightView highlightColor]
  -[VKCImageCustomHighlightView setSelectionRects:]
  -[VKCImageCustomHighlightView initWithDelegate:]
  -[VKCImageCustomHighlightView matchedRanges]
  -[VKCImageCustomHighlightView setMatchedRanges:]
  -[VKCImageCustomHighlightView setHighlightRanges:]
  -[VKCImageCustomHighlightView highlightRanges]
  -[VKCImageCustomHighlightView highlightShadowLayer]
  -[VKCImageCustomHighlightView updateHighlightLayerGeometryIfVisible]
  -[VKCImageCustomHighlightView updateHighlightLayerGeometry]
  -[VKCImageCustomHighlightView transformForHighlightLayerInCurrentBounds]
  -[VKCImageCustomHighlightView currentContentsRectInLayerCoodinates]
  -[VKCImageCustomHighlightView normalizedHighlightPath]
  -[VKCImageCustomHighlightView borderedNormalizedHighlightPath]
  -[VKCImageCustomHighlightView setNormalizedHighlightPath:]
  -[VKCImageCustomHighlightView setBorderedNormalizedHighlightPath:]
  -[VKCImageCustomHighlightView setHighlightShadowLayer:]
  -[VKCImageCustomHighlightView normalizedVisibleRectDidChange]
  -[VKCImageCustomHighlightView highlightDots]
  -[VKCImageCustomHighlightView clearHighlightsAnimated:hideLayers:]
  -[VKCImageCustomHighlightView highlightColorLayer]
  -[VKCImageCustomHighlightView startingHighlightLayerRect]
  -[VKCImageCustomHighlightView isConfiguringHighlights]
  -[VKCImageCustomHighlightView setIsConfiguringHighlights:]
  -[VKCImageCustomHighlightView setStartingHighlightLayerRect:]
  -[VKCImageCustomHighlightView highlightViewDelegate]
  -[VKCImageCustomHighlightView performHighlightForRanges:animated:isReplacingResults:]
  -[VKCImageCustomHighlightView _configureHighlightDotForRanges:]
  -[VKCImageCustomHighlightView clearHighlightsAnimated:]
  -[VKCImageCustomHighlightView beginHighlightWithRanges:animated:]
  -[VKCImageCustomHighlightView setHighlightViewDelegate:]
  -[VKCImageCustomHighlightView setHighlightColorLayer:]
  -[VKCImageCustomHighlightView setHighlightDots:]


VKCAnalysisDebugMenuProvider : NSObject <UIContextMenuInteractionDelegate>
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  <VKAnalysisDebugInfoProvider> *provider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCAnalysisDebugMenuProvider setProvider:]
  -[VKCAnalysisDebugMenuProvider _contextMenuInteraction:styleForMenuWithConfiguration:]
  -[VKCAnalysisDebugMenuProvider contextMenuInteraction:configurationForMenuAtLocation:]
  -[VKCAnalysisDebugMenuProvider contextMenuInteraction]
  -[VKCAnalysisDebugMenuProvider .cxx_destruct]
  -[VKCAnalysisDebugMenuProvider contextMenuInteraction:willEndForConfiguration:animator:]
  -[VKCAnalysisDebugMenuProvider setContextMenuInteraction:]
  -[VKCAnalysisDebugMenuProvider provider]
  -[VKCAnalysisDebugMenuProvider menuFromElements:title:]
  -[VKCAnalysisDebugMenuProvider menuFromProvider:]
  -[VKCAnalysisDebugMenuProvider presentDebugMenuProvider:fromView:rect:]


VKCVisualSearchResultItem : NSObject <VKAnalysisElementDebugMenuProvider>
 @property  MADVIVisualSearchGatingResultItem *resultItem
 @property  MADVIVisualSearchResultItem *searchItem
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} normalizedBoundingBox
 @property  {CGPoint=dd} normalizedIconLocation
 @property  BOOL shouldPlaceInCorner
 @property  NSString *glyphName
 @property  MADVIVisualSearchGatingDomainInfo *domainInfo
 @property  UIMenu *debugMenu

  // instance methods
  -[VKCVisualSearchResultItem .cxx_destruct]
  -[VKCVisualSearchResultItem glyphName]
  -[VKCVisualSearchResultItem normalizedBoundingBox]
  -[VKCVisualSearchResultItem domainInfo]
  -[VKCVisualSearchResultItem _hasFocalPoint]
  -[VKCVisualSearchResultItem setResultItem:]
  -[VKCVisualSearchResultItem resultItem]
  -[VKCVisualSearchResultItem searchItem]
  -[VKCVisualSearchResultItem setSearchItem:]
  -[VKCVisualSearchResultItem shouldPlaceInCorner]
  -[VKCVisualSearchResultItem normalizedIconLocation]
  -[VKCVisualSearchResultItem debugMenu]
  -[VKCVisualSearchResultItem initWithGatingResultItem:domain:]
  -[VKCVisualSearchResultItem initWithSearchResultItem:]
  -[VKCVisualSearchResultItem setDomainInfo:]


VKBaseTextPosition : UITextPosition

VKBaseTextRange : UITextRange

VKBaseTextSelectionRect : UITextSelectionRect

VKCTappableView : VKPlatformView

VKKeyboardCameraDefaults : NSObject
  // class methods
  +[VKKeyboardCameraDefaults sharedInstance]

  // instance methods
  -[VKKeyboardCameraDefaults .cxx_destruct]
  -[VKKeyboardCameraDefaults boolForKey:]
  -[VKKeyboardCameraDefaults init]
  -[VKKeyboardCameraDefaults doubleForKey:]


VKVideoTextRecognizerItem : NSObject
 @property  NSUUID *uuid
 @property  VKQuad *originalBoundingQuad
 @property  VKQuad *boundingQuad
 @property  NSArray *originalPoints
 @property  NSArray *points
 @property  NSString *string
 @property  {?=[3]} warpTransform

  // instance methods
  -[VKVideoTextRecognizerItem .cxx_destruct]
  -[VKVideoTextRecognizerItem dictionaryRepresentation]
  -[VKVideoTextRecognizerItem init]
  -[VKVideoTextRecognizerItem string]
  -[VKVideoTextRecognizerItem uuid]
  -[VKVideoTextRecognizerItem points]
  -[VKVideoTextRecognizerItem setPoints:]
  -[VKVideoTextRecognizerItem setWarpTransform:]
  -[VKVideoTextRecognizerItem warpTransform]
  -[VKVideoTextRecognizerItem boundingQuad]
  -[VKVideoTextRecognizerItem setBoundingQuad:]
  -[VKVideoTextRecognizerItem setOriginalBoundingQuad:]
  -[VKVideoTextRecognizerItem setOriginalPoints:]
  -[VKVideoTextRecognizerItem didRecognizeString:]
  -[VKVideoTextRecognizerItem originalPoints]
  -[VKVideoTextRecognizerItem originalBoundingQuad]
  -[VKVideoTextRecognizerItem pointsToDictionaryRepresentation:]
  -[VKVideoTextRecognizerItem matrix3x3TransformToDictionaryRepresentation:]


VKImageAnalysisInteraction : NSObject <VKCImageAnalysisBaseViewDelegate, VKCVisualSearchCornerViewDelegate, UIInteraction>
 @property  NSArray *baseViewConstraints
 @property  UIView *view
 @property  VKCImageAnalysisBaseView *baseView
 @property  UIView *viewForObservingContentMode
 @property  BOOL isSettingAnalysis
 @property  BOOL isUpdatingActiveTypes
 @property  VKCVisualSearchCornerView *visualSearchCornerButtonView
 @property  VKImageAnalysisBarButtonItem *analysisBarButtonItem
 @property  VKImageAnalysisButton *analysisButton
 @property  <VKInteractionAnalyticsDelegate> *_analyticsDelegate
 @property  BOOL didInteractWithVisualSearchItem
 @property  BOOL forceAnalysisBarButtonItemEnabled
 @property  BOOL didToggleAAButton
 @property  double visibleTextAreaThreshold
 @property  VKAnalyticsSessionAccumulator *analyticsSession
 @property  VKAnalyticsProcessor *analyticsProcessor
 @property  unsigned long analyticsTimeoutIndex
 @property  NSString *_customAnalyticsIdentifier
 @property  BOOL buttonsVisible
 @property  BOOL didLogAnalysisButtonVisible
 @property  <VKImageAnalysisInteractionDelegate> *delegate
 @property  VKImageAnalysis *analysis
 @property  BOOL highlightSelectableItems
 @property  unsigned long activeInteractionTypes
 @property  BOOL allowLongPressForDataDetectorsInTextMode
 @property  BOOL wantsAutomaticContentsRectCalculation
 @property  BOOL hasActiveTextSelection
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentsRect
 @property  unsigned long dataDetectorTypes
 @property  BOOL analysisButtonPrefersDarkGlyphWhenSelected
 @property  BOOL analysisButtonRequiresVisibleContentGating
 @property  UIView *visualSearchCornerView
 @property  BOOL didAddVisualSearchCornerView
 @property  UIGestureRecognizer *feedbackGestureRecognizer
 @property  UIActivity *feedbackActivity
 @property  BOOL automaticallyShowVisualSearchResults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VKImageAnalysisInteraction keyPathsForValuesAffectingHasActiveTextSelection]

  // instance methods
  -[VKImageAnalysisInteraction didMoveToView:]
  -[VKImageAnalysisInteraction dataDetectorTypes]
  -[VKImageAnalysisInteraction commonInit]
  -[VKImageAnalysisInteraction applicationWillResignActive:]
  -[VKImageAnalysisInteraction visualSearchCornerView]
  -[VKImageAnalysisInteraction .cxx_destruct]
  -[VKImageAnalysisInteraction willMoveToView:]
  -[VKImageAnalysisInteraction initWithInteractionOptions:]
  -[VKImageAnalysisInteraction setDataDetectorTypes:]
  -[VKImageAnalysisInteraction setDelegate:]
  -[VKImageAnalysisInteraction contentsRect]
  -[VKImageAnalysisInteraction init]
  -[VKImageAnalysisInteraction view]
  -[VKImageAnalysisInteraction setView:]
  -[VKImageAnalysisInteraction analysis]
  -[VKImageAnalysisInteraction textExistsAtPoint:]
  -[VKImageAnalysisInteraction delegate]
  -[VKImageAnalysisInteraction hasActiveTextSelection]
  -[VKImageAnalysisInteraction dealloc]
  -[VKImageAnalysisInteraction _analyticsDelegate]
  -[VKImageAnalysisInteraction baseView]
  -[VKImageAnalysisInteraction activeInteractionTypes]
  -[VKImageAnalysisInteraction visualSearchExistsAtPoint:]
  -[VKImageAnalysisInteraction setAnalysis:]
  -[VKImageAnalysisInteraction setActiveInteractionTypes:]
  -[VKImageAnalysisInteraction scrollViewDidZoomToUnitRect:]
  -[VKImageAnalysisInteraction openInfoPaneForTopItem]
  -[VKImageAnalysisInteraction clearMatchedHighlightsIfNecessaryAnimated:]
  -[VKImageAnalysisInteraction resetSelection]
  -[VKImageAnalysisInteraction resultItems]
  -[VKImageAnalysisInteraction analysisButton]
  -[VKImageAnalysisInteraction highlightMatchesForStrings:animated:]
  -[VKImageAnalysisInteraction analyticsSession]
  -[VKImageAnalysisInteraction setAnalyticsSession:]
  -[VKImageAnalysisInteraction setWantsAutomaticContentsRectCalculation:]
  -[VKImageAnalysisInteraction setAutomaticallyShowVisualSearchResults:]
  -[VKImageAnalysisInteraction setHighlightSelectableItems:]
  -[VKImageAnalysisInteraction highlightSelectableItems]
  -[VKImageAnalysisInteraction dataDetectorExistsAtPoint:]
  -[VKImageAnalysisInteraction setBaseView:]
  -[VKImageAnalysisInteraction feedbackGestureRecognizer]
  -[VKImageAnalysisInteraction set_customAnalyticsIdentifier:]
  -[VKImageAnalysisInteraction triggerTapToRadar]
  -[VKImageAnalysisInteraction generateVisualSearchResultForItems:queryID:completionHandler:]
  -[VKImageAnalysisInteraction visualSearchCornerViewDidDismissVisualSearchController:]
  -[VKImageAnalysisInteraction visualSearchCornerView:didTapVisualSearchIndicatorWithNormalizedBoundingBox:]
  -[VKImageAnalysisInteraction _customAnalyticsIdentifier]
  -[VKImageAnalysisInteraction visualSearchCornerView:analyticsEventDidOccur:]
  -[VKImageAnalysisInteraction analyticsProcessor]
  -[VKImageAnalysisInteraction set_analyticsDelegate:]
  -[VKImageAnalysisInteraction setAnalyticsProcessor:]
  -[VKImageAnalysisInteraction setAllowLongPressForDataDetectorsInTextMode:]
  -[VKImageAnalysisInteraction closeAndSendCurrentAnalyticsSession]
  -[VKImageAnalysisInteraction setVisualSearchCornerButtonView:]
  -[VKImageAnalysisInteraction visualSearchCornerButtonView]
  -[VKImageAnalysisInteraction setDidAddVisualSearchCornerView:]
  -[VKImageAnalysisInteraction setAnalysisButtonRequiresVisibleContentGating:]
  -[VKImageAnalysisInteraction triggerTapToRadar:]
  -[VKImageAnalysisInteraction setFeedbackGestureRecognizer:]
  -[VKImageAnalysisInteraction setViewForObservingContentMode:]
  -[VKImageAnalysisInteraction viewForObservingContentMode]
  -[VKImageAnalysisInteraction setIsSettingAnalysis:]
  -[VKImageAnalysisInteraction setDidLogAnalysisButtonVisible:]
  -[VKImageAnalysisInteraction configureForCurrentDerivedAutomaticStateWithUpdateActiveTypes:]
  -[VKImageAnalysisInteraction setDidToggleAAButton:]
  -[VKImageAnalysisInteraction _automaticallyShowVisualSearchResultsIfApplicable]
  -[VKImageAnalysisInteraction didLogAnalysisButtonVisible]
  -[VKImageAnalysisInteraction logButtonsVisibleStatus]
  -[VKImageAnalysisInteraction setActiveInteractionTypes:updateAutomaticState:]
  -[VKImageAnalysisInteraction isUpdatingActiveTypes]
  -[VKImageAnalysisInteraction setIsUpdatingActiveTypes:]
  -[VKImageAnalysisInteraction automaticallyShowVisualSearchResults]
  -[VKImageAnalysisInteraction wantsAutomaticContentsRectCalculation]
  -[VKImageAnalysisInteraction buttonsVisible]
  -[VKImageAnalysisInteraction analysisContainsTextAtPoint:]
  -[VKImageAnalysisInteraction viewForImageSnapshotForBaseView:]
  -[VKImageAnalysisInteraction updateForAnalyticsVisualSearchEventIfNecessary:]
  -[VKImageAnalysisInteraction addEventToAnalyticsSession:]
  -[VKImageAnalysisInteraction setDidInteractWithVisualSearchItem:]
  -[VKImageAnalysisInteraction didInteractWithVisualSearchItem]
  -[VKImageAnalysisInteraction didToggleAAButton]
  -[VKImageAnalysisInteraction sendAnalyticsEventWithType:source:analysisButtonActive:]
  -[VKImageAnalysisInteraction _provideFeedback]
  -[VKImageAnalysisInteraction aAAnalysisButtonPressed:]
  -[VKImageAnalysisInteraction deriveCurrentAutomaticState]
  -[VKImageAnalysisInteraction configureButtonsForState:updateActiveTypes:]
  -[VKImageAnalysisInteraction sendAAButtonPressedDelegateCallbackIfNecessaryForSender:]
  -[VKImageAnalysisInteraction analysisButtonRequiresVisibleContentGating]
  -[VKImageAnalysisInteraction forceAnalysisBarButtonItemEnabled]
  -[VKImageAnalysisInteraction setButtonsVisible:]
  -[VKImageAnalysisInteraction isSettingAnalysis]
  -[VKImageAnalysisInteraction beginNewAnalyticsSessionIfNecessary]
  -[VKImageAnalysisInteraction analyticsTimeoutIndex]
  -[VKImageAnalysisInteraction setAnalyticsTimeoutIndex:]
  -[VKImageAnalysisInteraction previewForDataDetectorElementView:]
  -[VKImageAnalysisInteraction topLevelImplementsContentsRectDelegateForBaseView:]
  -[VKImageAnalysisInteraction contentsRectForImageRecognitionBaseView:]
  -[VKImageAnalysisInteraction baseOverlayView:didUpdateToNormalizedVisibleRect:]
  -[VKImageAnalysisInteraction baseOverlayView:shouldBeginInteractionAtPoint:withTypes:]
  -[VKImageAnalysisInteraction baseOverlayView:didFinishTransitionToNormalizedVisibleRect:]
  -[VKImageAnalysisInteraction presentingViewControllerForImageAnalysisInteraction]
  -[VKImageAnalysisInteraction baseOverlayView:prepareForCalloutAction:competion:]
  -[VKImageAnalysisInteraction baseOverlayView:didTapVisualSearchIndicatorWithNormalizedBoundingBox:]
  -[VKImageAnalysisInteraction baseOverlayViewDismissVisualSearchController:]
  -[VKImageAnalysisInteraction baseOverlayView:analyticsEventDidOccur:]
  -[VKImageAnalysisInteraction allowLongPressForDataDetectorsInTextMode]
  -[VKImageAnalysisInteraction interactableItemExistsAtPoint:]
  -[VKImageAnalysisInteraction setForceAnalysisBarButtonItemEnabled:]
  -[VKImageAnalysisInteraction highlightMatchesForString:animated:]
  -[VKImageAnalysisInteraction feedbackActivity]
  -[VKImageAnalysisInteraction presentingViewControllerForFeedbackProvider]
  -[VKImageAnalysisInteraction analysisBarButtonItem]
  -[VKImageAnalysisInteraction setAnalysisButtonPrefersDarkGlyphWhenSelected:]
  -[VKImageAnalysisInteraction analysisButtonPrefersDarkGlyphWhenSelected]
  -[VKImageAnalysisInteraction didAddVisualSearchCornerView]
  -[VKImageAnalysisInteraction baseViewConstraints]
  -[VKImageAnalysisInteraction setBaseViewConstraints:]
  -[VKImageAnalysisInteraction setAnalysisBarButtonItem:]
  -[VKImageAnalysisInteraction setAnalysisButton:]
  -[VKImageAnalysisInteraction visibleTextAreaThreshold]
  -[VKImageAnalysisInteraction setVisibleTextAreaThreshold:]
  -[VKImageAnalysisInteraction generatePlistsForScalingAndAlignment]


VKAnalyticsSessionAccumulator : NSObject
 @property  VKImageAnalysis *analysis
 @property  NSMutableArray *interactionEvents
 @property  NSMutableArray *textEvents
 @property  NSMutableArray *mrcEvents
 @property  NSMutableArray *ddEvents
 @property  NSMutableArray *vsEvents
 @property  NSDate *sessionOpenDate
 @property  BOOL didSelectText
 @property  unsigned long numberOfEvents
 @property  unsigned long numberOfTextEvents
 @property  unsigned long numberOfMRCEvents
 @property  unsigned long numberOfDDEvents
 @property  unsigned long numberOfVSEvents
 @property  unsigned long numberOfMRCElements
 @property  unsigned long numberOfDDElements
 @property  unsigned long numberOfVSElements
 @property  unsigned long textLength
 @property  unsigned long averageTextSelectionLength
 @property  unsigned long numberOfSelectionChanges
 @property  BOOL didActivateHighlightAll
 @property  BOOL didActivateRegex
 @property  double sessionDuration
 @property  BOOL isPerformingAutomatedTest
 @property  NSString *bundleIdentifier
 @property  NSDictionary *coreAnalyticsDictionary

  // instance methods
  -[VKAnalyticsSessionAccumulator sessionDuration]
  -[VKAnalyticsSessionAccumulator send]
  -[VKAnalyticsSessionAccumulator setSessionDuration:]
  -[VKAnalyticsSessionAccumulator bundleIdentifier]
  -[VKAnalyticsSessionAccumulator .cxx_destruct]
  -[VKAnalyticsSessionAccumulator setBundleIdentifier:]
  -[VKAnalyticsSessionAccumulator textLength]
  -[VKAnalyticsSessionAccumulator addEvent:]
  -[VKAnalyticsSessionAccumulator setTextLength:]
  -[VKAnalyticsSessionAccumulator numberOfEvents]
  -[VKAnalyticsSessionAccumulator analysis]
  -[VKAnalyticsSessionAccumulator close]
  -[VKAnalyticsSessionAccumulator setAnalysis:]
  -[VKAnalyticsSessionAccumulator coreAnalyticsDictionary]
  -[VKAnalyticsSessionAccumulator isPerformingAutomatedTest]
  -[VKAnalyticsSessionAccumulator initWithAnalysis:customIdentifier:]
  -[VKAnalyticsSessionAccumulator textEvents]
  -[VKAnalyticsSessionAccumulator ddEvents]
  -[VKAnalyticsSessionAccumulator mrcEvents]
  -[VKAnalyticsSessionAccumulator vsEvents]
  -[VKAnalyticsSessionAccumulator interactionEvents]
  -[VKAnalyticsSessionAccumulator sessionOpenDate]
  -[VKAnalyticsSessionAccumulator setNumberOfDDEvents:]
  -[VKAnalyticsSessionAccumulator setNumberOfVSEvents:]
  -[VKAnalyticsSessionAccumulator setNumberOfTextEvents:]
  -[VKAnalyticsSessionAccumulator setNumberOfMRCEvents:]
  -[VKAnalyticsSessionAccumulator setNumberOfMRCElements:]
  -[VKAnalyticsSessionAccumulator setNumberOfVSElements:]
  -[VKAnalyticsSessionAccumulator setNumberOfDDElements:]
  -[VKAnalyticsSessionAccumulator calculateAverageSelectedLengthFromTextEvents]
  -[VKAnalyticsSessionAccumulator calculateDidHighlightAll]
  -[VKAnalyticsSessionAccumulator calculateDidActivateRegex]
  -[VKAnalyticsSessionAccumulator setNumberOfSelectionChanges:]
  -[VKAnalyticsSessionAccumulator setAverageTextSelectionLength:]
  -[VKAnalyticsSessionAccumulator setDidActivateHighlightAll:]
  -[VKAnalyticsSessionAccumulator setDidActivateRegex:]
  -[VKAnalyticsSessionAccumulator numberOfTextEvents]
  -[VKAnalyticsSessionAccumulator numberOfMRCEvents]
  -[VKAnalyticsSessionAccumulator numberOfDDEvents]
  -[VKAnalyticsSessionAccumulator numberOfVSEvents]
  -[VKAnalyticsSessionAccumulator numberOfMRCElements]
  -[VKAnalyticsSessionAccumulator numberOfDDElements]
  -[VKAnalyticsSessionAccumulator numberOfVSElements]
  -[VKAnalyticsSessionAccumulator averageTextSelectionLength]
  -[VKAnalyticsSessionAccumulator numberOfSelectionChanges]
  -[VKAnalyticsSessionAccumulator didActivateHighlightAll]
  -[VKAnalyticsSessionAccumulator didActivateRegex]
  -[VKAnalyticsSessionAccumulator setInteractionEvents:]
  -[VKAnalyticsSessionAccumulator setTextEvents:]
  -[VKAnalyticsSessionAccumulator setMrcEvents:]
  -[VKAnalyticsSessionAccumulator setDdEvents:]
  -[VKAnalyticsSessionAccumulator setVsEvents:]
  -[VKAnalyticsSessionAccumulator setSessionOpenDate:]
  -[VKAnalyticsSessionAccumulator didSelectText]
  -[VKAnalyticsSessionAccumulator setDidSelectText:]
  -[VKAnalyticsSessionAccumulator setNumberOfEvents:]
  -[VKAnalyticsSessionAccumulator setIsPerformingAutomatedTest:]


VKCMRCMADWrappedDataDetectorElement : VKCMRCDataDetectorElement <NSSecureCoding>
 @property  DDScannerResult *scannerResult
 @property  unsigned long dataDetectorTypes
 @property  VKQuad *quad
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox

  // class methods
  +[VKCMRCMADWrappedDataDetectorElement supportsSecureCoding]

  // instance methods
  -[VKCMRCMADWrappedDataDetectorElement quad]
  -[VKCMRCMADWrappedDataDetectorElement dataDetectorTypes]
  -[VKCMRCMADWrappedDataDetectorElement initWithCoder:]
  -[VKCMRCMADWrappedDataDetectorElement setBoundingBox:]
  -[VKCMRCMADWrappedDataDetectorElement boundingBox]
  -[VKCMRCMADWrappedDataDetectorElement .cxx_destruct]
  -[VKCMRCMADWrappedDataDetectorElement setDataDetectorTypes:]
  -[VKCMRCMADWrappedDataDetectorElement setQuad:]
  -[VKCMRCMADWrappedDataDetectorElement boundingQuads]
  -[VKCMRCMADWrappedDataDetectorElement encodeWithCoder:]
  -[VKCMRCMADWrappedDataDetectorElement scannerResult]
  -[VKCMRCMADWrappedDataDetectorElement setScannerResult:]
  -[VKCMRCMADWrappedDataDetectorElement initWithScannerResult:quad:]
  -[VKCMRCMADWrappedDataDetectorElement initWithMADMRCResultItem:scannerResult:]


VKCQuadTranscriptTuple : NSObject
 @property  VKQuad *quad
 @property  NSString *transcript

  // instance methods
  -[VKCQuadTranscriptTuple quad]
  -[VKCQuadTranscriptTuple .cxx_destruct]
  -[VKCQuadTranscriptTuple transcript]
  -[VKCQuadTranscriptTuple setQuad:]
  -[VKCQuadTranscriptTuple setTranscript:]


VKCTextRecognitionResult : NSObject <NSSecureCoding>
 @property  NSArray *textElements
 @property  NSArray *inspectableElements
 @property  NSArray *dataDetectors
 @property  NSArray *unfilteredDataDetectors
 @property  CRDocumentOutputRegion *sourceDocument
 @property  VNDocumentObservation *sourceVNDocument
 @property  VNRecognizedTextBlockObservation *titleObservation
 @property  NSString *buildString
 @property  NSString *text
 @property  NSString *title
 @property  {CGSize=dd} imageSize
 @property  NSDate *creationDate
 @property  CROutputRegion *crTitleOutput
 @property  VKTextRange *vk_documentRange
 @property  <VKCTextRecognitionResultTextDelegate> *textDelegate
 @property  unsigned long imageSource
 @property  NSArray *allLineQuads
 @property  NSArray *requestLocales
 @property  NSArray *requestBarcodeSymbologies

  // class methods
  +[VKCTextRecognitionResult supportsSecureCoding]

  // instance methods
  -[VKCTextRecognitionResult setText:]
  -[VKCTextRecognitionResult characterRangeAtPoint:]
  -[VKCTextRecognitionResult closestPositionToPoint:withinRange:]
  -[VKCTextRecognitionResult initWithCoder:]
  -[VKCTextRecognitionResult setImageSize:]
  -[VKCTextRecognitionResult setCreationDate:]
  -[VKCTextRecognitionResult setTitle:]
  -[VKCTextRecognitionResult documentElements]
  -[VKCTextRecognitionResult .cxx_destruct]
  -[VKCTextRecognitionResult setImageSource:]
  -[VKCTextRecognitionResult imageSize]
  -[VKCTextRecognitionResult title]
  -[VKCTextRecognitionResult creationDate]
  -[VKCTextRecognitionResult imageSource]
  -[VKCTextRecognitionResult text]
  -[VKCTextRecognitionResult textElements]
  -[VKCTextRecognitionResult encodeWithCoder:]
  -[VKCTextRecognitionResult countOfDataDetectorsWithTypes:]
  -[VKCTextRecognitionResult textDelegate]
  -[VKCTextRecognitionResult setTextDelegate:]
  -[VKCTextRecognitionResult buildString]
  -[VKCTextRecognitionResult initWithDocumentObservation:mrcDataDetectors:imageSize:]
  -[VKCTextRecognitionResult setRequestLocales:]
  -[VKCTextRecognitionResult setRequestBarcodeSymbologies:]
  -[VKCTextRecognitionResult updateInspectableElements]
  -[VKCTextRecognitionResult allLineQuads]
  -[VKCTextRecognitionResult dataDetectors]
  -[VKCTextRecognitionResult smallestSelectableRangeForPosition:]
  -[VKCTextRecognitionResult normalizedSelectionQuadsForRange:]
  -[VKCTextRecognitionResult closestBlockOfType:toPoint:]
  -[VKCTextRecognitionResult firstRectForRange:documentView:contentRect:]
  -[VKCTextRecognitionResult selectionRectsForRange:documentView:contentRect:]
  -[VKCTextRecognitionResult sourceVNDocument]
  -[VKCTextRecognitionResult adjustTextRangeToSelectableRange:]
  -[VKCTextRecognitionResult requestLocales]
  -[VKCTextRecognitionResult requestBarcodeSymbologies]
  -[VKCTextRecognitionResult setBuildString:]
  -[VKCTextRecognitionResult inspectableElements]
  -[VKCTextRecognitionResult sourceDocument]
  -[VKCTextRecognitionResult vk_documentRange]
  -[VKCTextRecognitionResult closestPositionToPoint:withinRange:maxDistance:]
  -[VKCTextRecognitionResult selectionRectsForRange:documentView:contentRect:addTranscript:]
  -[VKCTextRecognitionResult elementMatchingOutputRegion:]
  -[VKCTextRecognitionResult rangeOfWordForPosition:]
  -[VKCTextRecognitionResult rangeOfLineForPosition:]
  -[VKCTextRecognitionResult setSourceDocument:]
  -[VKCTextRecognitionResult setSourceVNDocument:]
  -[VKCTextRecognitionResult setTextElements:]
  -[VKCTextRecognitionResult setDataDetectors:]
  -[VKCTextRecognitionResult unfilteredDataDetectors]
  -[VKCTextRecognitionResult setUnfilteredDataDetectors:]
  -[VKCTextRecognitionResult setInspectableElements:]
  -[VKCTextRecognitionResult titleObservation]
  -[VKCTextRecognitionResult setTitleObservation:]
  -[VKCTextRecognitionResult crTitleOutput]
  -[VKCTextRecognitionResult setCrTitleOutput:]


VKCMRCDataDetectorElement : VKCBaseDataDetectorElement <BCSActionDelegate, NSSecureCoding>
 @property  VNBarcodeObservation *barcodeObservation
 @property  unsigned long dataDetectorTypes
 @property  VKQuad *quad
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox
 @property  BOOL childrenCreated
 @property  BCSAction *barcodeAction
 @property  UIMenu *mrcMenu
 @property  UIViewController *presentingViewControllerForMrcAction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VKCMRCDataDetectorElement supportsSecureCoding]

  // instance methods
  -[VKCMRCDataDetectorElement stringValue]
  -[VKCMRCDataDetectorElement quad]
  -[VKCMRCDataDetectorElement dataDetectorTypes]
  -[VKCMRCDataDetectorElement initWithCoder:]
  -[VKCMRCDataDetectorElement presentingViewControllerForAction:]
  -[VKCMRCDataDetectorElement mrcMenu]
  -[VKCMRCDataDetectorElement setBoundingBox:]
  -[VKCMRCDataDetectorElement boundingBox]
  -[VKCMRCDataDetectorElement children]
  -[VKCMRCDataDetectorElement .cxx_destruct]
  -[VKCMRCDataDetectorElement setDataDetectorTypes:]
  -[VKCMRCDataDetectorElement setQuad:]
  -[VKCMRCDataDetectorElement setPresentingViewControllerForMrcAction:]
  -[VKCMRCDataDetectorElement boundingQuads]
  -[VKCMRCDataDetectorElement encodeWithCoder:]
  -[VKCMRCDataDetectorElement scannerResult]
  -[VKCMRCDataDetectorElement barcodeObservation]
  -[VKCMRCDataDetectorElement barcodeAction]
  -[VKCMRCDataDetectorElement presentingViewControllerForMrcAction]
  -[VKCMRCDataDetectorElement isMRCDataDetector]
  -[VKCMRCDataDetectorElement debugMenu]
  -[VKCMRCDataDetectorElement initWithBarcodeObservation:action:]
  -[VKCMRCDataDetectorElement createChildrenIfNecessary]
  -[VKCMRCDataDetectorElement childrenCreated]
  -[VKCMRCDataDetectorElement setChildrenCreated:]
  -[VKCMRCDataDetectorElement setBarcodeObservation:]
  -[VKCMRCDataDetectorElement setBarcodeAction:]


VKCaptureVideoPreviewView : UIImageView
 @property  CIImage *ciImage
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} regionOfInterest
 @property  double viewToImageScale

  // instance methods
  -[VKCaptureVideoPreviewView screenScale]
  -[VKCaptureVideoPreviewView .cxx_destruct]
  -[VKCaptureVideoPreviewView init]
  -[VKCaptureVideoPreviewView ciImage]
  -[VKCaptureVideoPreviewView imageSize]
  -[VKCaptureVideoPreviewView enqueueSampleBuffer:]
  -[VKCaptureVideoPreviewView dealloc]
  -[VKCaptureVideoPreviewView regionOfInterest]
  -[VKCaptureVideoPreviewView snapshotWithCompletion:]
  -[VKCaptureVideoPreviewView viewToImageScale]
  -[VKCaptureVideoPreviewView viewSizeInPixels]


VKAnalyticsDDEvent : VKAnalyticsEvent
 @property  long long eventType
 @property  unsigned long dataDetectorTypes

  // instance methods
  -[VKAnalyticsDDEvent dataDetectorTypes]
  -[VKAnalyticsDDEvent setDataDetectorTypes:]
  -[VKAnalyticsDDEvent type]
  -[VKAnalyticsDDEvent eventType]
  -[VKAnalyticsDDEvent eventKey]
  -[VKAnalyticsDDEvent setEventType:]
  -[VKAnalyticsDDEvent coreAnalyticsDictionary]
  -[VKAnalyticsDDEvent initWithElement:eventType:customIdentifier:]


VKAnalyticsInteractionEvent : VKAnalyticsEvent
 @property  long long eventType
 @property  BOOL analysisButtonActive
 @property  long long source
 @property  unsigned long activeInteractionTypes
 @property  long long textLength
 @property  long long ddCount
 @property  long long mrcCount
 @property  long long vsCount

  // instance methods
  -[VKAnalyticsInteractionEvent textLength]
  -[VKAnalyticsInteractionEvent setTextLength:]
  -[VKAnalyticsInteractionEvent setSource:]
  -[VKAnalyticsInteractionEvent type]
  -[VKAnalyticsInteractionEvent eventType]
  -[VKAnalyticsInteractionEvent eventKey]
  -[VKAnalyticsInteractionEvent source]
  -[VKAnalyticsInteractionEvent setEventType:]
  -[VKAnalyticsInteractionEvent activeInteractionTypes]
  -[VKAnalyticsInteractionEvent setActiveInteractionTypes:]
  -[VKAnalyticsInteractionEvent coreAnalyticsDictionary]
  -[VKAnalyticsInteractionEvent initWithEventType:analysis:source:interactionTypes:buttonActive:customIdentifier:]
  -[VKAnalyticsInteractionEvent analysisButtonActive]
  -[VKAnalyticsInteractionEvent ddCount]
  -[VKAnalyticsInteractionEvent mrcCount]
  -[VKAnalyticsInteractionEvent vsCount]
  -[VKAnalyticsInteractionEvent setAnalysisButtonActive:]
  -[VKAnalyticsInteractionEvent setDdCount:]
  -[VKAnalyticsInteractionEvent setMrcCount:]
  -[VKAnalyticsInteractionEvent setVsCount:]


VKRadarUtilities : NSObject
  // class methods
  +[VKRadarUtilities promptUserToFileBugWithAlertMessage:bugTitle:bugDescription:]
  +[VKRadarUtilities createRadarWithTitle:description:componentName:componentVersion:componentID:]
  +[VKRadarUtilities createRadarWithTitle:description:componentName:componentVersion:componentID:keywordIDs:attachmentURLs:includeSysdiagnose:]


VKLine : NSObject
 @property  double a
 @property  double b

  // instance methods
  -[VKLine b]
  -[VKLine a]
  -[VKLine setA:]
  -[VKLine setB:]


VKLineSegment : NSObject
 @property  {CGPoint=dd} startPoint
 @property  {CGPoint=dd} endPoint

  // instance methods
  -[VKLineSegment startPoint]
  -[VKLineSegment setStartPoint:]
  -[VKLineSegment setEndPoint:]
  -[VKLineSegment endPoint]


VKCMockDataDetectorElement : VKCTextDataDetectorElement
  // instance methods
  -[VKCMockDataDetectorElement dataDetectorTypes]
  -[VKCMockDataDetectorElement .cxx_destruct]
  -[VKCMockDataDetectorElement initWithDictionary:]
  -[VKCMockDataDetectorElement characterRange]
  -[VKCMockDataDetectorElement boundingQuads]


VKAnalyticsVisualSearchEvent : VKAnalyticsEvent
 @property  long long eventType
 @property  BOOL didInteractWithResultItem
 @property  NSCountedSet *allItemDomains
 @property  long long itemCount
 @property  long long focalPointItemCount
 @property  VKCVisualSearchResultItem *interactedItem
 @property  double serverProcessingTime
 @property  BOOL serverResultWasCached
 @property  long long nonFocalPointItemCount
 @property  NSString *itemDomain
 @property  BOOL itemHasFocalPoint

  // instance methods
  -[VKAnalyticsVisualSearchEvent .cxx_destruct]
  -[VKAnalyticsVisualSearchEvent itemCount]
  -[VKAnalyticsVisualSearchEvent type]
  -[VKAnalyticsVisualSearchEvent eventType]
  -[VKAnalyticsVisualSearchEvent setItemCount:]
  -[VKAnalyticsVisualSearchEvent eventKey]
  -[VKAnalyticsVisualSearchEvent setEventType:]
  -[VKAnalyticsVisualSearchEvent coreAnalyticsDictionary]
  -[VKAnalyticsVisualSearchEvent initWithType:items:interactedItem:serverProcessingTime:customIdentifier:]
  -[VKAnalyticsVisualSearchEvent setDidInteractWithResultItem:]
  -[VKAnalyticsVisualSearchEvent processItems:]
  -[VKAnalyticsVisualSearchEvent didInteractWithResultItem]
  -[VKAnalyticsVisualSearchEvent focalPointItemCount]
  -[VKAnalyticsVisualSearchEvent itemDomain]
  -[VKAnalyticsVisualSearchEvent serverProcessingTime]
  -[VKAnalyticsVisualSearchEvent serverResultWasCached]
  -[VKAnalyticsVisualSearchEvent setAllItemDomains:]
  -[VKAnalyticsVisualSearchEvent setFocalPointItemCount:]
  -[VKAnalyticsVisualSearchEvent interactedItem]
  -[VKAnalyticsVisualSearchEvent allItemDomains]
  -[VKAnalyticsVisualSearchEvent nonFocalPointItemCount]
  -[VKAnalyticsVisualSearchEvent itemHasFocalPoint]
  -[VKAnalyticsVisualSearchEvent setServerProcessingTime:]
  -[VKAnalyticsVisualSearchEvent setServerResultWasCached:]
  -[VKAnalyticsVisualSearchEvent setInteractedItem:]


VKKeyboardCameraReticleView : UIView
 @property  double spotlightBlurRadius
 @property  double invertedShadowAlpha
 @property  double reticleAlpha

  // instance methods
  -[VKKeyboardCameraReticleView .cxx_destruct]
  -[VKKeyboardCameraReticleView layoutSubviews]
  -[VKKeyboardCameraReticleView init]
  -[VKKeyboardCameraReticleView setSpotlightBlurRadius:]
  -[VKKeyboardCameraReticleView setInvertedShadowAlpha:]
  -[VKKeyboardCameraReticleView setReticleAlpha:]
  -[VKKeyboardCameraReticleView collapseReticleRect]
  -[VKKeyboardCameraReticleView setReticleRect:angle:]
  -[VKKeyboardCameraReticleView spotlightBlurRadius]
  -[VKKeyboardCameraReticleView invertedShadowAlpha]
  -[VKKeyboardCameraReticleView reticleAlpha]


VKCImageVisualSearchView : VKCImageBaseOverlayView <VKCVisualSearchResultItemViewDelegate>
 @property  NSMutableArray *resultViews
 @property  BOOL shouldAutomaticallyShowVisualSearchResult
 @property  NSMutableSet *cachedResultItemsWithFocalDot
 @property  VKCVisualSearchResult *visualSearchResult
 @property  <VKCImageVisualSearchViewDelegate> *delegate
 @property  BOOL didAddVisualSearchCornerView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCImageVisualSearchView hitTest:withEvent:]
  -[VKCImageVisualSearchView .cxx_destruct]
  -[VKCImageVisualSearchView setFrame:]
  -[VKCImageVisualSearchView layoutSubviews]
  -[VKCImageVisualSearchView setDelegate:]
  -[VKCImageVisualSearchView init]
  -[VKCImageVisualSearchView delegate]
  -[VKCImageVisualSearchView setHidden:]
  -[VKCImageVisualSearchView hideDots]
  -[VKCImageVisualSearchView triggerTapToRadar]
  -[VKCImageVisualSearchView generateVisualSearchResultForItems:queryID:completionHandler:]
  -[VKCImageVisualSearchView visualSearchResult]
  -[VKCImageVisualSearchView sendProcessingAnalyticsEventEventWithItem:duration:]
  -[VKCImageVisualSearchView sendDismissedAnalyticsEventEventWithItem:]
  -[VKCImageVisualSearchView setVisualSearchResult:]
  -[VKCImageVisualSearchView setDidAddVisualSearchCornerView:]
  -[VKCImageVisualSearchView automaticallyShowVisualSearchResults]
  -[VKCImageVisualSearchView containsVisualSearchItemAtPoint:]
  -[VKCImageVisualSearchView showTopVisualSearchResult]
  -[VKCImageVisualSearchView didAddVisualSearchCornerView]
  -[VKCImageVisualSearchView setNormalizedVisibleRect:]
  -[VKCImageVisualSearchView _layoutResultViews]
  -[VKCImageVisualSearchView resultViews]
  -[VKCImageVisualSearchView updateUIForVisualSearchResultsClearExistingResults:]
  -[VKCImageVisualSearchView animateDotsIn]
  -[VKCImageVisualSearchView _shouldShowPulsingDot:]
  -[VKCImageVisualSearchView setResultViews:]
  -[VKCImageVisualSearchView topResultView]
  -[VKCImageVisualSearchView visualSearchItemView:shouldBeginAtPoint:]
  -[VKCImageVisualSearchView visualSearchItemView:didTapVisualSearchIndicatorWithNormalizedBoundingBox:]
  -[VKCImageVisualSearchView visualSearchItemViewDidDismissController:]
  -[VKCImageVisualSearchView visualSearchItemView:didProcessResultsWithDuration:]
  -[VKCImageVisualSearchView shouldAutomaticallyShowVisualSearchResult]
  -[VKCImageVisualSearchView setShouldAutomaticallyShowVisualSearchResult:]
  -[VKCImageVisualSearchView cachedResultItemsWithFocalDot]
  -[VKCImageVisualSearchView setCachedResultItemsWithFocalDot:]


VKCElementCollection : VKCBaseElement
 @property  NSString *title
 @property  NSArray *_children

  // class methods
  +[VKCElementCollection collectionWithTitle:children:parent:]
  +[VKCElementCollection collectionWithTitle:elementInfoText:parent:]

  // instance methods
  -[VKCElementCollection stringValue]
  -[VKCElementCollection setTitle:]
  -[VKCElementCollection _children]
  -[VKCElementCollection children]
  -[VKCElementCollection .cxx_destruct]
  -[VKCElementCollection title]
  -[VKCElementCollection set_children:]


VKCMockImageAnalysisResult : VKCImageAnalysisResult
 @property  NSDictionary *sourceDict
 @property  NSString *text
 @property  VKCMockTextProvider *textProvider
 @property  BOOL isRunningTest
 @property  {CGSize=dd} imageSize

  // class methods
  +[VKCMockImageAnalysisResult mockImageAnalysisResultFromDictionary:]

  // instance methods
  -[VKCMockImageAnalysisResult caretRectForPosition:]
  -[VKCMockImageAnalysisResult setText:]
  -[VKCMockImageAnalysisResult characterRangeAtPoint:]
  -[VKCMockImageAnalysisResult closestPositionToPoint:withinRange:]
  -[VKCMockImageAnalysisResult setImageSize:]
  -[VKCMockImageAnalysisResult .cxx_destruct]
  -[VKCMockImageAnalysisResult isRunningTest]
  -[VKCMockImageAnalysisResult imageSize]
  -[VKCMockImageAnalysisResult text]
  -[VKCMockImageAnalysisResult textProvider]
  -[VKCMockImageAnalysisResult setTextProvider:]
  -[VKCMockImageAnalysisResult stringForLine:]
  -[VKCMockImageAnalysisResult allLineQuads]
  -[VKCMockImageAnalysisResult dataDetectors]
  -[VKCMockImageAnalysisResult smallestSelectableRangeForPosition:]
  -[VKCMockImageAnalysisResult firstRectForRange:documentView:contentRect:]
  -[VKCMockImageAnalysisResult selectionRectsForRange:documentView:contentRect:]
  -[VKCMockImageAnalysisResult adjustTextRangeToSelectableRange:]
  -[VKCMockImageAnalysisResult rangeOfWordForPosition:]
  -[VKCMockImageAnalysisResult rangeOfLineForPosition:]
  -[VKCMockImageAnalysisResult setSourceDict:]
  -[VKCMockImageAnalysisResult generateText]
  -[VKCMockImageAnalysisResult addMockDataDetectorElementsFromArray:]
  -[VKCMockImageAnalysisResult setIsRunningTest:]
  -[VKCMockImageAnalysisResult sourceDict]


VKCVisualSearchResult : NSObject
 @property  MADVIVisualSearchGatingResult *gatingResult
 @property  MADVIVisualSearchResult *searchResult
 @property  NSData *payload
 @property  NSArray *resultItems

  // instance methods
  -[VKCVisualSearchResult setSearchResult:]
  -[VKCVisualSearchResult payload]
  -[VKCVisualSearchResult .cxx_destruct]
  -[VKCVisualSearchResult searchResult]
  -[VKCVisualSearchResult resultItems]
  -[VKCVisualSearchResult initWithGatingResult:]
  -[VKCVisualSearchResult gatingResult]
  -[VKCVisualSearchResult setGatingResult:]


VKImageAnalyzerMadInterface : NSObject
 @property  NSObject<OS_dispatch_queue> *housekeepingQueue
 @property  NSObject<OS_dispatch_queue> *processingQueue
 @property  NSMutableOrderedSet *requestQueueProcessing
 @property  NSMutableSet *requestQueueCancelling
 @property  NSMutableDictionary *vkToMadIDs
 @property  NSMutableDictionary *idsToRequests
 @property  int requestIDIndex
 @property  BOOL hasAnyRequests
 @property  MADService *service
 @property  MADService *_serviceDontUseThisOneDirectly
 @property  unsigned long timeoutIndex
 @property  MADService *madService

  // class methods
  +[VKImageAnalyzerMadInterface sharedInterface]
  +[VKImageAnalyzerMadInterface analyzerDeallocedError]

  // instance methods
  -[VKImageAnalyzerMadInterface .cxx_destruct]
  -[VKImageAnalyzerMadInterface _processRequest:]
  -[VKImageAnalyzerMadInterface cancelledError]
  -[VKImageAnalyzerMadInterface _cancelRequest:]
  -[VKImageAnalyzerMadInterface init]
  -[VKImageAnalyzerMadInterface setProcessingQueue:]
  -[VKImageAnalyzerMadInterface cancelAllRequests]
  -[VKImageAnalyzerMadInterface service]
  -[VKImageAnalyzerMadInterface processingQueue]
  -[VKImageAnalyzerMadInterface _cancelRequestID:]
  -[VKImageAnalyzerMadInterface cancelRequestID:]
  -[VKImageAnalyzerMadInterface processRequest:]
  -[VKImageAnalyzerMadInterface statusForRequestID:]
  -[VKImageAnalyzerMadInterface didLeaveVisualSearchHints]
  -[VKImageAnalyzerMadInterface generateVisualSearchResultForRequest:analysis:items:payload:queryID:completionHandler:]
  -[VKImageAnalyzerMadInterface requestIDIndex]
  -[VKImageAnalyzerMadInterface setRequestIDIndex:]
  -[VKImageAnalyzerMadInterface setRequest:forRequestID:]
  -[VKImageAnalyzerMadInterface housekeepingQueue]
  -[VKImageAnalyzerMadInterface _statusForRequestID:]
  -[VKImageAnalyzerMadInterface idsToRequests]
  -[VKImageAnalyzerMadInterface requestForRequestID:]
  -[VKImageAnalyzerMadInterface requestQueueCancelling]
  -[VKImageAnalyzerMadInterface requestQueueProcessing]
  -[VKImageAnalyzerMadInterface vkToMadIDs]
  -[VKImageAnalyzerMadInterface clearCompletedRequest:]
  -[VKImageAnalyzerMadInterface createNewIdleTimerIfNecessary]
  -[VKImageAnalyzerMadInterface logCollectionsIfNecessary]
  -[VKImageAnalyzerMadInterface didFinishRequest:withAnalysis:analyticsEvent:error:]
  -[VKImageAnalyzerMadInterface analysisResultFromMadRequests:imageSize:durations:]
  -[VKImageAnalyzerMadInterface performMADRequest:forRequest:withCompletion:]
  -[VKImageAnalyzerMadInterface _performMADRequest:forRequest:pixelBuffer:cgImage:useCGForMad:withCompletion:]
  -[VKImageAnalyzerMadInterface removeAndNotifyOfCancelledRequest:completion:]
  -[VKImageAnalyzerMadInterface documentObservationFromRequests:durations:]
  -[VKImageAnalyzerMadInterface mrcDDElementsFromRequests:didParse:durations:]
  -[VKImageAnalyzerMadInterface visualSearchResultFromRequests:durations:]
  -[VKImageAnalyzerMadInterface request:didCompleteWithAnalysis:analysisEvent:error:]
  -[VKImageAnalyzerMadInterface hasAnyRequests]
  -[VKImageAnalyzerMadInterface timeoutIndex]
  -[VKImageAnalyzerMadInterface setTimeoutIndex:]
  -[VKImageAnalyzerMadInterface set_serviceDontUseThisOneDirectly:]
  -[VKImageAnalyzerMadInterface didShowVisualSearchHintsForRequest:]
  -[VKImageAnalyzerMadInterface setHousekeepingQueue:]
  -[VKImageAnalyzerMadInterface setRequestQueueProcessing:]
  -[VKImageAnalyzerMadInterface setRequestQueueCancelling:]
  -[VKImageAnalyzerMadInterface setVkToMadIDs:]
  -[VKImageAnalyzerMadInterface setIdsToRequests:]
  -[VKImageAnalyzerMadInterface _serviceDontUseThisOneDirectly]
  -[VKImageAnalyzerMadInterface madService]
  -[VKImageAnalyzerMadInterface setMadService:]


VKCTextElement : VKCBaseElement
 @property  NSArray *_children
 @property  NSArray *components
 @property  NSArray *candidates
 @property  BOOL childrenCreated

  // class methods
  +[VKCTextElement textElementFromCROutputRegion:parentDocument:]

  // instance methods
  -[VKCTextElement setCandidates:]
  -[VKCTextElement _children]
  -[VKCTextElement children]
  -[VKCTextElement candidates]
  -[VKCTextElement .cxx_destruct]
  -[VKCTextElement setComponents:]
  -[VKCTextElement elementType]
  -[VKCTextElement components]
  -[VKCTextElement isInspectableCellSelectable]
  -[VKCTextElement createChildrenIfNecessary]
  -[VKCTextElement childrenCreated]
  -[VKCTextElement setChildrenCreated:]
  -[VKCTextElement set_children:]
  -[VKCTextElement confidenceString]
  -[VKCTextElement crOutputRegionTypeString]
  -[VKCTextElement elementCollectionForQuad:]


VKCDataDetectorElementView : VKPlatformView <UIContextMenuInteractionDelegate, UIGestureRecognizerDelegate, BCSActionDelegate>
 @property  CAShapeLayer *highlightPathLayer
 @property  UIBezierPath *highlightPath
 @property  VKQuad *boundingQuadInBoundsCoordinates
 @property  NSArray *subQuadsInBoundsCoordinates
 @property  double lineWithForAverageSubquadHeight
 @property  BOOL shouldUseBCSAction
 @property  VKCMRCDataDetectorElement *mrcElement
 @property  BOOL isPeformingManualContextInvocation
 @property  BOOL allowLongPressDDActivationOnly
 @property  UIContextMenuInteraction *menuInteraction
 @property  NSDictionary *dataDetectorContext
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  <VKCDataDetectorElementViewDelegate> *delegate
 @property  NSString *customAnalyticsIdentifier
 @property  VKCBaseDataDetectorElement *dataDetectorElement
 @property  NSArray *allDataDetectorElements
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCDataDetectorElementView contextMenuInteraction:previewForHighlightingMenuWithConfiguration:]
  -[VKCDataDetectorElementView hitTest:withEvent:]
  -[VKCDataDetectorElementView contextMenuInteraction:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[VKCDataDetectorElementView contextMenuInteraction:willDisplayMenuForConfiguration:animator:]
  -[VKCDataDetectorElementView _contextMenuInteraction:styleForMenuWithConfiguration:]
  -[VKCDataDetectorElementView setTapGestureRecognizer:]
  -[VKCDataDetectorElementView contextMenuInteraction:previewForDismissingMenuWithConfiguration:]
  -[VKCDataDetectorElementView _contextMenuInteraction:overrideSuggestedActionsForConfiguration:]
  -[VKCDataDetectorElementView contextMenuInteraction:configurationForMenuAtLocation:]
  -[VKCDataDetectorElementView didTap:]
  -[VKCDataDetectorElementView .cxx_destruct]
  -[VKCDataDetectorElementView contextMenuInteraction:willEndForConfiguration:animator:]
  -[VKCDataDetectorElementView layoutSubviews]
  -[VKCDataDetectorElementView setDelegate:]
  -[VKCDataDetectorElementView tapGestureRecognizer]
  -[VKCDataDetectorElementView accessibilityTraits]
  -[VKCDataDetectorElementView accessibilityValue]
  -[VKCDataDetectorElementView isAccessibilityElement]
  -[VKCDataDetectorElementView accessibilityIdentifier]
  -[VKCDataDetectorElementView gestureRecognizer:shouldReceiveTouch:]
  -[VKCDataDetectorElementView delegate]
  -[VKCDataDetectorElementView menuInteraction]
  -[VKCDataDetectorElementView setMenuInteraction:]
  -[VKCDataDetectorElementView dataDetectorContext]
  -[VKCDataDetectorElementView setDataDetectorContext:]
  -[VKCDataDetectorElementView dataDetectorElement]
  -[VKCDataDetectorElementView customAnalyticsIdentifier]
  -[VKCDataDetectorElementView setCustomAnalyticsIdentifier:]
  -[VKCDataDetectorElementView mrcElement]
  -[VKCDataDetectorElementView updateHighlightPath]
  -[VKCDataDetectorElementView calcPathForUnderline]
  -[VKCDataDetectorElementView setHighlightPath:]
  -[VKCDataDetectorElementView highlightPath]
  -[VKCDataDetectorElementView highlightPathLayer]
  -[VKCDataDetectorElementView lineWithForAverageSubquadHeight]
  -[VKCDataDetectorElementView subQuadsInBoundsCoordinates]
  -[VKCDataDetectorElementView allowLongPressDDActivationOnly]
  -[VKCDataDetectorElementView allDataDetectorElements]
  -[VKCDataDetectorElementView isPointInQuad:]
  -[VKCDataDetectorElementView setIsPeformingManualContextInvocation:]
  -[VKCDataDetectorElementView sendAnalyticsEventIfNecessaryForDDType:]
  -[VKCDataDetectorElementView boundingQuadInBoundsCoordinates]
  -[VKCDataDetectorElementView analyticsEventWithDDType:]
  -[VKCDataDetectorElementView isPeformingManualContextInvocation]
  -[VKCDataDetectorElementView shouldUseBCSAction]
  -[VKCDataDetectorElementView presentingViewControllerForInteraction]
  -[VKCDataDetectorElementView initWithDataDetectorElement:unfilteredElements:]
  -[VKCDataDetectorElementView setAllowLongPressDDActivationOnly:]
  -[VKCDataDetectorElementView manuallyActivateLongPressMenuInteraction]
  -[VKCDataDetectorElementView setHighlightPathLayer:]


VKKeyboardCameraInsertButton : UIView
 @property  UIButton *uiButton

  // instance methods
  -[VKKeyboardCameraInsertButton viewForFirstBaselineLayout]
  -[VKKeyboardCameraInsertButton .cxx_destruct]
  -[VKKeyboardCameraInsertButton isEnabled]
  -[VKKeyboardCameraInsertButton initWithPrimaryAction:]
  -[VKKeyboardCameraInsertButton setEnabled:]
  -[VKKeyboardCameraInsertButton intrinsicContentSize]
  -[VKKeyboardCameraInsertButton uiButton]


VKFeedbackAttachment : NSObject
 @property  NSString *fileName
 @property  NSString *label
 @property  BOOL isOptional

  // instance methods
  -[VKFeedbackAttachment label]
  -[VKFeedbackAttachment isOptional]
  -[VKFeedbackAttachment fileName]
  -[VKFeedbackAttachment .cxx_destruct]
  -[VKFeedbackAttachment initWithFileName:label:isOptional:]


VKFeedbackProvider : NSObject <VKFeedbackProviderViewControllerDelegate>
 @property  <VKFeedbackAssetsProvider> *assetsProvider
 @property  VKImageAnalysis *imageAnalysis
 @property  NSError *error
 @property  VKImageAnalyzerRequest *request
 @property  UIViewController *presentingViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKFeedbackProvider setRequest:]
  -[VKFeedbackProvider imageAnalysis]
  -[VKFeedbackProvider .cxx_destruct]
  -[VKFeedbackProvider setPresentingViewController:]
  -[VKFeedbackProvider presentingViewController]
  -[VKFeedbackProvider init]
  -[VKFeedbackProvider request]
  -[VKFeedbackProvider setError:]
  -[VKFeedbackProvider error]
  -[VKFeedbackProvider setImageAnalysis:]
  -[VKFeedbackProvider assetsProvider]
  -[VKFeedbackProvider setAssetsProvider:]
  -[VKFeedbackProvider provideFeedbackWithType:options:metadata:promisedAttachments:userResponseHandler:]
  -[VKFeedbackProvider provideFeedbackWithType:]
  -[VKFeedbackProvider feedbackProviderViewControllerDidCancel:]
  -[VKFeedbackProvider feedbackProviderViewController:submitWithOptions:attachments:]
  -[VKFeedbackProvider _captureScreenshots]
  -[VKFeedbackProvider _jsonRepresentationForAttributesDictionary:]
  -[VKFeedbackProvider _saveFeedbackAttributesJSON:]
  -[VKFeedbackProvider _saveScreenshots]
  -[VKFeedbackProvider _saveImage:withName:]
  -[VKFeedbackProvider provideFeedbackWithType:consentPresentingView:]
  -[VKFeedbackProvider provideFeedbackWithType:options:metadata:consentPresentingView:]


VKCImageAnalysisBaseView : VKPlatformView <VKCImageDataDetectorViewDelegate, VKCImageTextSelectionViewDelegate, VKCImageVisualSearchViewDelegate, VKCImageCustomHighlightViewDelegate, VKAnalysisDebugInfoProvider, _UIScrollViewScrollObserver>
 @property  VKCImageTextSelectionView *textSelectionView
 @property  VKCImageDataDetectorView *dataDetectorView
 @property  VKCImageVisualSearchView *visualSearchView
 @property  VKCImageCustomHighlightView *regexHighlightView
 @property  VKCImageCustomHighlightView *regexHighlightViewIfExists
 @property  NSArray *keyPathsAffectingContentMode
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentsRect
 @property  BOOL didLogContentsRectError
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} normalizedVisibleRect
 @property  BOOL visibleTextAreaInfoIsValid
 @property  {VKVisibleTextAreaInfo=ddddQ} visibleTextAreaInfo
 @property  BOOL isAnalysisVisible
 @property  NSArray *highlightStrings
 @property  NSIndexSet *highlightStringsIndexSet
 @property  BOOL stringHighlightsActive
 @property  UIImageView *debugImageView
 @property  BOOL clientDidSetNormalizedRect
 @property  UILabel *textInfoView
 @property  VKTextRange *selectedTextRangeBeforeDataDetectorMenu
 @property  VKCAnalysisDebugMenuProvider *debugMenuProvider
 @property  UIScrollView *scrollViewToObserve
 @property  long long scrollViewToObserveCount
 @property  double currentExtraOffsetForViewScale
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frameWhenResigningActive
 @property  id loggingParentObject
 @property  <VKCImageAnalysisBaseViewDelegate> *delegate
 @property  unsigned long activeInteractionTypes
 @property  VKCImageAnalysisResult *analysisResult
 @property  BOOL highlightSelectableItems
 @property  BOOL longPressDataDetectorsInTextMode
 @property  NSString *customAnalyticsIdentifier
 @property  BOOL wantsAutomaticContentsRectCalculation
 @property  BOOL hasActiveTextSelection
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleImageRect
 @property  {_NSRange=QQ} selectedRange
 @property  unsigned long dataDetectorTypes
 @property  UIView *viewForObservingContentMode
 @property  BOOL didAddVisualSearchCornerView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double totalQuadTextArea
 @property  double totalBoundingBoxTextArea

  // class methods
  +[VKCImageAnalysisBaseView keyPathsForValuesAffectingHasActiveTextSelection]
  +[VKCImageAnalysisBaseView keyPathsForValuesAffectingContentsRect]

  // instance methods
  -[VKCImageAnalysisBaseView hitTest:withEvent:]
  -[VKCImageAnalysisBaseView dataDetectorTypes]
  -[VKCImageAnalysisBaseView applicationWillResignActive:]
  -[VKCImageAnalysisBaseView selectedRange]
  -[VKCImageAnalysisBaseView _observeScrollViewDidScroll:]
  -[VKCImageAnalysisBaseView setContentsRect:]
  -[VKCImageAnalysisBaseView .cxx_destruct]
  -[VKCImageAnalysisBaseView setFrame:]
  -[VKCImageAnalysisBaseView layoutSubviews]
  -[VKCImageAnalysisBaseView setDataDetectorTypes:]
  -[VKCImageAnalysisBaseView setDelegate:]
  -[VKCImageAnalysisBaseView textSelectionView]
  -[VKCImageAnalysisBaseView contentsRect]
  -[VKCImageAnalysisBaseView init]
  -[VKCImageAnalysisBaseView safeAreaInsetsDidChange]
  -[VKCImageAnalysisBaseView delegate]
  -[VKCImageAnalysisBaseView didMoveToWindow]
  -[VKCImageAnalysisBaseView hasActiveTextSelection]
  -[VKCImageAnalysisBaseView dealloc]
  -[VKCImageAnalysisBaseView setBounds:]
  -[VKCImageAnalysisBaseView observeValueForKeyPath:ofObject:change:context:]
  -[VKCImageAnalysisBaseView activeInteractionTypes]
  -[VKCImageAnalysisBaseView setActiveInteractionTypes:]
  -[VKCImageAnalysisBaseView scrollViewDidZoomToUnitRect:]
  -[VKCImageAnalysisBaseView setAnalysisResult:]
  -[VKCImageAnalysisBaseView analysisResult]
  -[VKCImageAnalysisBaseView resetSelection]
  -[VKCImageAnalysisBaseView setWantsAutomaticContentsRectCalculation:]
  -[VKCImageAnalysisBaseView setHighlightSelectableItems:]
  -[VKCImageAnalysisBaseView highlightSelectableItems]
  -[VKCImageAnalysisBaseView triggerTapToRadar]
  -[VKCImageAnalysisBaseView generateVisualSearchResultForItems:queryID:completionHandler:]
  -[VKCImageAnalysisBaseView automaticallyShowVisualSearchResultsIfApplicable]
  -[VKCImageAnalysisBaseView totalBoundingBoxTextArea]
  -[VKCImageAnalysisBaseView totalQuadTextArea]
  -[VKCImageAnalysisBaseView setHighlightSelectableItems:animated:]
  -[VKCImageAnalysisBaseView textSelectionView:boundsDidChangeFromRect:toRect:]
  -[VKCImageAnalysisBaseView nonTextNormalizedHighlightAllQuadsForTextSelectionView:]
  -[VKCImageAnalysisBaseView customAnalyticsIdentifier]
  -[VKCImageAnalysisBaseView textSelectionView:analyticsEventOccured:]
  -[VKCImageAnalysisBaseView containsTextAtPoint:]
  -[VKCImageAnalysisBaseView longPressDataDetectorsInTextMode]
  -[VKCImageAnalysisBaseView setLongPressDataDetectorsInTextMode:]
  -[VKCImageAnalysisBaseView highlightView:selectionRectsForRanges:]
  -[VKCImageAnalysisBaseView visibleTextAreaInfo]
  -[VKCImageAnalysisBaseView useInteractionOptions:]
  -[VKCImageAnalysisBaseView setLoggingParentObject:]
  -[VKCImageAnalysisBaseView setDidAddVisualSearchCornerView:]
  -[VKCImageAnalysisBaseView setViewForObservingContentMode:]
  -[VKCImageAnalysisBaseView configureForCurrentActiveInteractionTypes]
  -[VKCImageAnalysisBaseView updateCurrentDisplayedViewContentsRect]
  -[VKCImageAnalysisBaseView viewForObservingContentMode]
  -[VKCImageAnalysisBaseView wantsAutomaticContentsRectCalculation]
  -[VKCImageAnalysisBaseView setCustomAnalyticsIdentifier:]
  -[VKCImageAnalysisBaseView containsInteractiveItemAtPoint:]
  -[VKCImageAnalysisBaseView dataDetectorTypeAtPoint:]
  -[VKCImageAnalysisBaseView containsVisualSearchItemAtPoint:]
  -[VKCImageAnalysisBaseView analysisContainsTextAtPoint:]
  -[VKCImageAnalysisBaseView showTopVisualSearchResult]
  -[VKCImageAnalysisBaseView highlightMatchesWithString:animated:]
  -[VKCImageAnalysisBaseView clearStringHighlightsAnimated:]
  -[VKCImageAnalysisBaseView previewForDataDetectorElementView:]
  -[VKCImageAnalysisBaseView presentingViewControllerForImageAnalysisInteraction]
  -[VKCImageAnalysisBaseView didAddVisualSearchCornerView]
  -[VKCImageAnalysisBaseView setNormalizedVisibleRect:]
  -[VKCImageAnalysisBaseView normalizedVisibleRect]
  -[VKCImageAnalysisBaseView visualSearchItemView:shouldBeginAtPoint:]
  -[VKCImageAnalysisBaseView visualSearchItemView:didTapVisualSearchIndicatorWithNormalizedBoundingBox:]
  -[VKCImageAnalysisBaseView visualSearchItemViewDidDismissController:]
  -[VKCImageAnalysisBaseView visualSearchView:analyticsEventOccured:]
  -[VKCImageAnalysisBaseView keyPathsAffectingContentMode]
  -[VKCImageAnalysisBaseView scrollViewWillChange:]
  -[VKCImageAnalysisBaseView scrollViewDidChange:]
  -[VKCImageAnalysisBaseView debugButtonDidTap:]
  -[VKCImageAnalysisBaseView frameWhenResigningActive]
  -[VKCImageAnalysisBaseView setFrameWhenResigningActive:]
  -[VKCImageAnalysisBaseView updateNormalizedVisibleRectIfNecessary]
  -[VKCImageAnalysisBaseView dataDetectorView]
  -[VKCImageAnalysisBaseView visualSearchView]
  -[VKCImageAnalysisBaseView regexHighlightViewIfExists]
  -[VKCImageAnalysisBaseView clearRegexHighlightsAnimated:updateActiveTypes:]
  -[VKCImageAnalysisBaseView configureForActiveTypes:]
  -[VKCImageAnalysisBaseView sendAnalysisDidChangeAnalyticsEvent]
  -[VKCImageAnalysisBaseView invaliateVisibleTextAreInfo]
  -[VKCImageAnalysisBaseView sendActiveInteractionTypesDidChangeAnalyticsEvent:]
  -[VKCImageAnalysisBaseView visibleImageRect]
  -[VKCImageAnalysisBaseView setVisibleTextAreaInfoIsValid:]
  -[VKCImageAnalysisBaseView updateAndNotifyAfterValidNormalizedVisibleRectChangeIfNecessary]
  -[VKCImageAnalysisBaseView updateSubviewsToMatchBounds]
  -[VKCImageAnalysisBaseView debugImageView]
  -[VKCImageAnalysisBaseView didLogContentsRectError]
  -[VKCImageAnalysisBaseView setDidLogContentsRectError:]
  -[VKCImageAnalysisBaseView updateDebugButtonIfNecessary]
  -[VKCImageAnalysisBaseView isAnalysisVisible]
  -[VKCImageAnalysisBaseView sendVisualSearchAnalyticsWithDidBecomeActive:]
  -[VKCImageAnalysisBaseView setIsAnalysisVisible:]
  -[VKCImageAnalysisBaseView _logVisualSearchHintAvailabilityUpdate]
  -[VKCImageAnalysisBaseView stringHighlightsActive]
  -[VKCImageAnalysisBaseView calculateNormalizedVisibleRect]
  -[VKCImageAnalysisBaseView _updateAnalysisVisibility]
  -[VKCImageAnalysisBaseView updateAndNotifyAfterValidNormalizedVisibleRectChange]
  -[VKCImageAnalysisBaseView calculateVisibleTextAreaInfo]
  -[VKCImageAnalysisBaseView setVisibleTextAreaInfo:]
  -[VKCImageAnalysisBaseView textInfoView]
  -[VKCImageAnalysisBaseView debugMenuProvider]
  -[VKCImageAnalysisBaseView regexHighlightView]
  -[VKCImageAnalysisBaseView currentExtraOffsetForViewScale]
  -[VKCImageAnalysisBaseView dataDetectorElementPoint:requestingView:]
  -[VKCImageAnalysisBaseView scrollViewToObserve]
  -[VKCImageAnalysisBaseView scrollViewToObserveCount]
  -[VKCImageAnalysisBaseView setScrollViewToObserveCount:]
  -[VKCImageAnalysisBaseView setScrollViewToObserve:]
  -[VKCImageAnalysisBaseView setHighlightStrings:]
  -[VKCImageAnalysisBaseView setStringHighlightsActive:]
  -[VKCImageAnalysisBaseView setSelectedTextRangeBeforeDataDetectorMenu:]
  -[VKCImageAnalysisBaseView selectedTextRangeBeforeDataDetectorMenu]
  -[VKCImageAnalysisBaseView loggingParentObject]
  -[VKCImageAnalysisBaseView dataDetectorView:dataDetectorInteractionShouldBeginAtPoint:]
  -[VKCImageAnalysisBaseView willDisplayMenuForDataDetectorView:]
  -[VKCImageAnalysisBaseView willDismissMenuForDataDetectorView:]
  -[VKCImageAnalysisBaseView dataDetectorView:analyticsEventOccured:]
  -[VKCImageAnalysisBaseView presentingViewControllerForInteractionWithDataDetectorView:]
  -[VKCImageAnalysisBaseView dataDetectorElementAtPoint:fromTextSelectionView:]
  -[VKCImageAnalysisBaseView viewForImageSnapshotForTextSelectionView:]
  -[VKCImageAnalysisBaseView textSelectionView:shouldBeginAtPoint:]
  -[VKCImageAnalysisBaseView textSelectionView:dataDetectorExistsAtPoint:]
  -[VKCImageAnalysisBaseView textSelectionView:requestsDataDetectorActivationAtPoint:]
  -[VKCImageAnalysisBaseView textSelectionView:selectionDidChange:]
  -[VKCImageAnalysisBaseView textSelectionView:prepareForCalloutAction:competion:]
  -[VKCImageAnalysisBaseView clearTextSelectionViewIfNecessary]
  -[VKCImageAnalysisBaseView clearDataDetectorViewIfNecessary]
  -[VKCImageAnalysisBaseView clearVisualSearchViewIfNecessary]
  -[VKCImageAnalysisBaseView setTextSelectionView:]
  -[VKCImageAnalysisBaseView setDataDetectorView:]
  -[VKCImageAnalysisBaseView setVisualSearchView:]
  -[VKCImageAnalysisBaseView setRegexHighlightView:]
  -[VKCImageAnalysisBaseView visibleTextAreaInfoIsValid]
  -[VKCImageAnalysisBaseView highlightStrings]
  -[VKCImageAnalysisBaseView highlightStringsIndexSet]
  -[VKCImageAnalysisBaseView setHighlightStringsIndexSet:]
  -[VKCImageAnalysisBaseView setDebugImageView:]
  -[VKCImageAnalysisBaseView clientDidSetNormalizedRect]
  -[VKCImageAnalysisBaseView setClientDidSetNormalizedRect:]
  -[VKCImageAnalysisBaseView setTextInfoView:]
  -[VKCImageAnalysisBaseView setDebugMenuProvider:]


VKImageAnalyzerRequest : NSObject <NSCopying, VKFeedbackAssetsProvider>
 @property  unsigned long requestType
 @property  long long imageOrientation
 @property  unsigned int cgimageOrientation
 @property  unsigned long analysisTypes
 @property  UIImage *image
 @property  CIImage *ciImage
 @property  ^{CGImage=} cgImageRef
 @property  ^{__CVBuffer=} pixelBuffer
 @property  NSURL *URL
 @property  NSString *localIdentifier
 @property  {CGSize=dd} photosImageSize
 @property  int requestID
 @property  int madRequestID
 @property  NSDate *processDate
 @property  BOOL cancelled
 @property  CLLocation *location
 @property  NSURL *imageURL
 @property  NSURL *pageURL
 @property  unsigned long imageSource
 @property  @? progressHandler
 @property  @? completionHandler
 @property  NSArray *defaultBarcodeSymbologies
 @property  double screenScale
 @property  unsigned long queryID
 @property  NSArray *locales
 @property  NSArray *barcodeSymbologies
 @property  {CGSize=dd} imageSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VKImageAnalyzerRequest newQueryIDForParsec]

  // instance methods
  -[VKImageAnalyzerRequest imageOrientation]
  -[VKImageAnalyzerRequest pixelBuffer]
  -[VKImageAnalyzerRequest screenScale]
  -[VKImageAnalyzerRequest requestID]
  -[VKImageAnalyzerRequest cancelled]
  -[VKImageAnalyzerRequest setRequestType:]
  -[VKImageAnalyzerRequest queryID]
  -[VKImageAnalyzerRequest pageURL]
  -[VKImageAnalyzerRequest setImageOrientation:]
  -[VKImageAnalyzerRequest imageURL]
  -[VKImageAnalyzerRequest image]
  -[VKImageAnalyzerRequest setQueryID:]
  -[VKImageAnalyzerRequest setURL:]
  -[VKImageAnalyzerRequest .cxx_destruct]
  -[VKImageAnalyzerRequest setImageURL:]
  -[VKImageAnalyzerRequest setScreenScale:]
  -[VKImageAnalyzerRequest setLocation:]
  -[VKImageAnalyzerRequest setCancelled:]
  -[VKImageAnalyzerRequest cgImageRef]
  -[VKImageAnalyzerRequest setProgressHandler:]
  -[VKImageAnalyzerRequest setImageSource:]
  -[VKImageAnalyzerRequest init]
  -[VKImageAnalyzerRequest requestType]
  -[VKImageAnalyzerRequest ciImage]
  -[VKImageAnalyzerRequest imageSize]
  -[VKImageAnalyzerRequest locales]
  -[VKImageAnalyzerRequest setPageURL:]
  -[VKImageAnalyzerRequest setCompletionHandler:]
  -[VKImageAnalyzerRequest location]
  -[VKImageAnalyzerRequest localIdentifier]
  -[VKImageAnalyzerRequest progressHandler]
  -[VKImageAnalyzerRequest URL]
  -[VKImageAnalyzerRequest setLocalIdentifier:]
  -[VKImageAnalyzerRequest setImage:]
  -[VKImageAnalyzerRequest setRequestID:]
  -[VKImageAnalyzerRequest imageSource]
  -[VKImageAnalyzerRequest dealloc]
  -[VKImageAnalyzerRequest completionHandler]
  -[VKImageAnalyzerRequest copyWithZone:]
  -[VKImageAnalyzerRequest initWithCGImage:orientation:requestType:]
  -[VKImageAnalyzerRequest initWithLocalIdentifier:photoLibraryURL:imageSize:requestType:]
  -[VKImageAnalyzerRequest setLocales:]
  -[VKImageAnalyzerRequest setPixelBuffer:]
  -[VKImageAnalyzerRequest shortLoggingDescription]
  -[VKImageAnalyzerRequest initWithImage:requestType:]
  -[VKImageAnalyzerRequest setCiImage:]
  -[VKImageAnalyzerRequest processDate]
  -[VKImageAnalyzerRequest setProcessDate:]
  -[VKImageAnalyzerRequest initWithImage:orientation:requestType:]
  -[VKImageAnalyzerRequest requestIDValue]
  -[VKImageAnalyzerRequest barcodeSymbologies]
  -[VKImageAnalyzerRequest madRequestID]
  -[VKImageAnalyzerRequest madRequests]
  -[VKImageAnalyzerRequest tempPixelBufferRef]
  -[VKImageAnalyzerRequest setMadRequestID:]
  -[VKImageAnalyzerRequest viImageType]
  -[VKImageAnalyzerRequest saveAssetsToFeedbackAttachmentsFolder:error:]
  -[VKImageAnalyzerRequest defaultBarcodeSymbologies]
  -[VKImageAnalyzerRequest analysisTypes]
  -[VKImageAnalyzerRequest processedBarcodeSymbologies]
  -[VKImageAnalyzerRequest cgimageOrientation]
  -[VKImageAnalyzerRequest imageSizeFromCGImageSource:]
  -[VKImageAnalyzerRequest photosImageSize]
  -[VKImageAnalyzerRequest initWithCIImage:orientation:requestType:]
  -[VKImageAnalyzerRequest initWithCVPixelBuffer:orientation:requestType:]
  -[VKImageAnalyzerRequest initWithImageURL:requestType:]
  -[VKImageAnalyzerRequest initWithLocalIdentifier:photoLibraryURL:cgImage:orientation:requestType:]
  -[VKImageAnalyzerRequest initWithLocalIdentifier:photoLibraryURL:pixelBuffer:orientation:requestType:]
  -[VKImageAnalyzerRequest initWithView:requestType:]
  -[VKImageAnalyzerRequest setBarcodeSymbologies:]
  -[VKImageAnalyzerRequest createVNRequestHandler]
  -[VKImageAnalyzerRequest setCgimageOrientation:]
  -[VKImageAnalyzerRequest setAnalysisTypes:]
  -[VKImageAnalyzerRequest setCgImageRef:]
  -[VKImageAnalyzerRequest setPhotosImageSize:]
  -[VKImageAnalyzerRequest setDefaultBarcodeSymbologies:]


VKCMockHelper : NSObject
  // class methods
  +[VKCMockHelper plistFromRange:]
  +[VKCMockHelper plistFromSize:]
  +[VKCMockHelper sizeFromPlistDictionary:]
  +[VKCMockHelper rangeFromPlistDictionary:]


VKAssert : NSObject
  // class methods
  +[VKAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:]
  +[VKAssert handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:alertMessage:format:]


VKCTextDataDetectorElement : VKCBaseDataDetectorElement
 @property  NSArray *_children
 @property  CRDataDetectorsOutputRegion *ddOutputRegion
 @property  unsigned long dataDetectorTypes
 @property  BOOL childrenCreated
 @property  unsigned long crDataType
 @property  {_NSRange=QQ} characterRange

  // class methods
  +[VKCTextDataDetectorElement dataDetectorElementFromCROutputRegion:parentDocument:]

  // instance methods
  -[VKCTextDataDetectorElement dataDetectorTypes]
  -[VKCTextDataDetectorElement _children]
  -[VKCTextDataDetectorElement children]
  -[VKCTextDataDetectorElement .cxx_destruct]
  -[VKCTextDataDetectorElement setDataDetectorTypes:]
  -[VKCTextDataDetectorElement dataType]
  -[VKCTextDataDetectorElement characterRange]
  -[VKCTextDataDetectorElement boundingQuads]
  -[VKCTextDataDetectorElement scannerResult]
  -[VKCTextDataDetectorElement isTextDataDetector]
  -[VKCTextDataDetectorElement debugMenu]
  -[VKCTextDataDetectorElement createChildrenIfNecessary]
  -[VKCTextDataDetectorElement childrenCreated]
  -[VKCTextDataDetectorElement setChildrenCreated:]
  -[VKCTextDataDetectorElement set_children:]
  -[VKCTextDataDetectorElement initWithCROutputRegion:parentDocument:]
  -[VKCTextDataDetectorElement ddOutputRegion]
  -[VKCTextDataDetectorElement crDataType]


VKCImageDataDetectorView : VKCImageBaseOverlayView <VKCDataDetectorElementViewDelegate, VKCMRCHighlightViewDelegate>
 @property  NSArray *allElements
 @property  NSArray *unfilteredElements
 @property  NSArray *displayedElements
 @property  NSMutableSet *displayedElementViews
 @property  NSMutableSet *displayedMRCPills
 @property  BOOL needsElementFrameUpdate
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundsUsedToCalculateElementFrames
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentsRectUsedToCalculateElementFrames
 @property  <VKCImageDataDetectorViewDelegate> *delegate
 @property  unsigned long dataDetectorTypes
 @property  BOOL highlightSelectableItems
 @property  BOOL allowLongPressDDActivationOnly
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCImageDataDetectorView dataDetectorTypes]
  -[VKCImageDataDetectorView didMoveToSuperview]
  -[VKCImageDataDetectorView setContentsRect:]
  -[VKCImageDataDetectorView .cxx_destruct]
  -[VKCImageDataDetectorView setFrame:]
  -[VKCImageDataDetectorView layoutSubviews]
  -[VKCImageDataDetectorView setDataDetectorTypes:]
  -[VKCImageDataDetectorView setDelegate:]
  -[VKCImageDataDetectorView allElements]
  -[VKCImageDataDetectorView initWithFrame:]
  -[VKCImageDataDetectorView delegate]
  -[VKCImageDataDetectorView setHighlightSelectableItems:]
  -[VKCImageDataDetectorView highlightSelectableItems]
  -[VKCImageDataDetectorView setRecognitionResult:]
  -[VKCImageDataDetectorView setAllElements:]
  -[VKCImageDataDetectorView setHighlightSelectableItems:animated:]
  -[VKCImageDataDetectorView setCustomAnalyticsIdentifier:]
  -[VKCImageDataDetectorView previewForDataDetectorElementView:]
  -[VKCImageDataDetectorView allowLongPressDDActivationOnly]
  -[VKCImageDataDetectorView dataDetectorElementView:shouldBeginAtPoint:]
  -[VKCImageDataDetectorView dataDetectorElementView:analyticsEventOccured:]
  -[VKCImageDataDetectorView presentingViewControllerForInteractionWithDataDetectorElementView:]
  -[VKCImageDataDetectorView willDisplayMenuForDataDetectorElementView:]
  -[VKCImageDataDetectorView willDismissMenuForDataDetectorElementView:]
  -[VKCImageDataDetectorView setAllowLongPressDDActivationOnly:]
  -[VKCImageDataDetectorView displayedElements]
  -[VKCImageDataDetectorView closestElementToPoint:maxDistance:]
  -[VKCImageDataDetectorView activateLongPressDataDetectorAtPoint:maxDistance:]
  -[VKCImageDataDetectorView setUnfilteredElements:]
  -[VKCImageDataDetectorView updateDisplayedElements]
  -[VKCImageDataDetectorView updateAllElementViewFramesIfNecessary]
  -[VKCImageDataDetectorView displayedElementViews]
  -[VKCImageDataDetectorView loadDataDetectorViewsFromDisplayedElements]
  -[VKCImageDataDetectorView shouldFilterElementForSpecialCase:]
  -[VKCImageDataDetectorView setDisplayedElements:]
  -[VKCImageDataDetectorView unfilteredElements]
  -[VKCImageDataDetectorView updateAllElementViewFrames]
  -[VKCImageDataDetectorView needsElementFrameUpdate]
  -[VKCImageDataDetectorView setBoundsUsedToCalculateElementFrames:]
  -[VKCImageDataDetectorView setContentsRectUsedToCalculateElementFrames:]
  -[VKCImageDataDetectorView frameForDataDetectorElement:]
  -[VKCImageDataDetectorView boundsUsedToCalculateElementFrames]
  -[VKCImageDataDetectorView contentsRectUsedToCalculateElementFrames]
  -[VKCImageDataDetectorView displayedMRCPills]
  -[VKCImageDataDetectorView currentViewSpaceQaudForHighlightView:]
  -[VKCImageDataDetectorView highlightView:needsToAdjustQuad:]
  -[VKCImageDataDetectorView viewSpaceQuadsForDataDetectorElement:]
  -[VKCImageDataDetectorView showMRCPills:animated:]
  -[VKCImageDataDetectorView setDisplayedElementViews:]
  -[VKCImageDataDetectorView setDisplayedMRCPills:]


VKCaptureTextAnalysisRequest : NSObject <NSCopying, VKFeedbackAssetsProvider>
 @property  UIImage *image
 @property  VKQuad *focusQuad
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} focusRect
 @property  <VKCaptureTextAnalysisRequestDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCaptureTextAnalysisRequest image]
  -[VKCaptureTextAnalysisRequest .cxx_destruct]
  -[VKCaptureTextAnalysisRequest delegate]
  -[VKCaptureTextAnalysisRequest requestHandler]
  -[VKCaptureTextAnalysisRequest copyWithZone:]
  -[VKCaptureTextAnalysisRequest initWithImage:focusQuad:delegate:]
  -[VKCaptureTextAnalysisRequest focusRect]
  -[VKCaptureTextAnalysisRequest focusQuad]
  -[VKCaptureTextAnalysisRequest saveAssetsToFeedbackAttachmentsFolder:error:]
  -[VKCaptureTextAnalysisRequest initWithImage:focusRect:delegate:]
  -[VKCaptureTextAnalysisRequest initWithImage:delegate:]


VKSelectableBarButtonItem : UIBarButtonItem
 @property  VKSelectableBarButtonContainerView *toggleView
 @property  BOOL showsMenuAsPrimaryAction
 @property  double padding
 @property  double compactPadding
 @property  double cornerRadiusRatio
 @property  double width
 @property  double alpha

  // class methods
  +[VKSelectableBarButtonItem keyPathsForValuesAffectingAlpha]

  // instance methods
  -[VKSelectableBarButtonItem width]
  -[VKSelectableBarButtonItem menu]
  -[VKSelectableBarButtonItem setMenu:]
  -[VKSelectableBarButtonItem setWidth:]
  -[VKSelectableBarButtonItem image]
  -[VKSelectableBarButtonItem .cxx_destruct]
  -[VKSelectableBarButtonItem padding]
  -[VKSelectableBarButtonItem setAction:]
  -[VKSelectableBarButtonItem init]
  -[VKSelectableBarButtonItem setSelected:]
  -[VKSelectableBarButtonItem setAlpha:]
  -[VKSelectableBarButtonItem setTarget:]
  -[VKSelectableBarButtonItem showsMenuAsPrimaryAction]
  -[VKSelectableBarButtonItem setPadding:]
  -[VKSelectableBarButtonItem setImage:]
  -[VKSelectableBarButtonItem setShowsMenuAsPrimaryAction:]
  -[VKSelectableBarButtonItem alpha]
  -[VKSelectableBarButtonItem setEnabled:]
  -[VKSelectableBarButtonItem toggleView]
  -[VKSelectableBarButtonItem setToggleView:]
  -[VKSelectableBarButtonItem setCornerRadiusRatio:]
  -[VKSelectableBarButtonItem compactPadding]
  -[VKSelectableBarButtonItem setCompactPadding:]
  -[VKSelectableBarButtonItem cornerRadiusRatio]


VKSelectableBarButtonContainerView : UIView
 @property  UIImage *image
 @property  UIButton *button
 @property  double padding
 @property  double compactPadding
 @property  double cornerRadiusRatio
 @property  BOOL selected
 @property  double width

  // instance methods
  -[VKSelectableBarButtonContainerView selected]
  -[VKSelectableBarButtonContainerView width]
  -[VKSelectableBarButtonContainerView updateForMiniBarState:]
  -[VKSelectableBarButtonContainerView setWidth:]
  -[VKSelectableBarButtonContainerView image]
  -[VKSelectableBarButtonContainerView .cxx_destruct]
  -[VKSelectableBarButtonContainerView padding]
  -[VKSelectableBarButtonContainerView layoutSubviews]
  -[VKSelectableBarButtonContainerView button]
  -[VKSelectableBarButtonContainerView _buttonSize]
  -[VKSelectableBarButtonContainerView init]
  -[VKSelectableBarButtonContainerView setSelected:]
  -[VKSelectableBarButtonContainerView sizeThatFits:]
  -[VKSelectableBarButtonContainerView setPadding:]
  -[VKSelectableBarButtonContainerView setButton:]
  -[VKSelectableBarButtonContainerView setImage:]
  -[VKSelectableBarButtonContainerView didMoveToWindow]
  -[VKSelectableBarButtonContainerView intrinsicContentSize]
  -[VKSelectableBarButtonContainerView setCornerRadiusRatio:]
  -[VKSelectableBarButtonContainerView compactPadding]
  -[VKSelectableBarButtonContainerView setCompactPadding:]
  -[VKSelectableBarButtonContainerView cornerRadiusRatio]


VKKeyboardCameraCloseButton : UIView
 @property  UIButton *uiButton

  // instance methods
  -[VKKeyboardCameraCloseButton viewForFirstBaselineLayout]
  -[VKKeyboardCameraCloseButton .cxx_destruct]
  -[VKKeyboardCameraCloseButton layoutSubviews]
  -[VKKeyboardCameraCloseButton initWithFrame:]
  -[VKKeyboardCameraCloseButton intrinsicContentSize]
  -[VKKeyboardCameraCloseButton uiButton]


VKQuad : NSObject <NSCopying, NSSecureCoding>
 @property  double angleAveragedFromBottomAndTopEdges
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} minimumBoundingRectWithoutRotation
 @property  {CGPoint=dd} topLeft
 @property  {CGPoint=dd} topRight
 @property  {CGPoint=dd} bottomLeft
 @property  {CGPoint=dd} bottomRight
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox
 @property  BOOL containsIntersectingLines
 @property  {VKQuadSideLength=dddd} sideLength
 @property  double maxHeight
 @property  double area
 @property  double boundingBoxArea
 @property  NSString *summaryDescription
 @property  NSArray *allPoints
 @property  UIBezierPath *path
 @property  {CGPoint=dd} vertexCentroid
 @property  VKQuad *quadByAdjustingOrientation

  // class methods
  +[VKQuad supportsSecureCoding]
  +[VKQuad quadFromCGRect:]
  +[VKQuad quadFromUnionOfQuads:baselineAngle:]
  +[VKQuad transformToConvertLayer:intoQuad:frame:]

  // instance methods
  -[VKQuad area]
  -[VKQuad initWithCoder:]
  -[VKQuad topLeft]
  -[VKQuad boundingBox]
  -[VKQuad initWithRect:]
  -[VKQuad .cxx_destruct]
  -[VKQuad dictionaryRepresentation]
  -[VKQuad summaryDescription]
  -[VKQuad isEqual:]
  -[VKQuad debugQuickLookObject]
  -[VKQuad maxHeight]
  -[VKQuad initWithDictionary:]
  -[VKQuad allPoints]
  -[VKQuad path]
  -[VKQuad containsPoint:]
  -[VKQuad copyWithZone:]
  -[VKQuad topRight]
  -[VKQuad bottomRight]
  -[VKQuad initWithPoints:]
  -[VKQuad encodeWithCoder:]
  -[VKQuad bottomLeft]
  -[VKQuad quadFromRotatingAroundCentroidWithAngle:]
  -[VKQuad initWithBottomLeft:bottomRight:topLeft:topRight:]
  -[VKQuad quadByConvertingFromView:toView:isNormalized:]
  -[VKQuad normalizedQuadByConvertingFromView:toView:toViewSize:]
  -[VKQuad containsIntersectingLines]
  -[VKQuad intersectionOfLineFrom:to:withLineFrom:to:]
  -[VKQuad sideLength]
  -[VKQuad vertexCentroid]
  -[VKQuad angleAveragedFromBottomAndTopEdges]
  -[VKQuad minimumBoundingRectWithoutRotation]
  -[VKQuad normalizedQuadFromView:]
  -[VKQuad boundingBoxArea]
  -[VKQuad quadMultipliedBySize:]
  -[VKQuad quadByFlippingPointsWithSourceFrame:]
  -[VKQuad initWithTopLeft:topRight:bottomLeft:bottomRight:]
  -[VKQuad intersectsQuad:]
  -[VKQuad quadFromAddingPoint:]
  -[VKQuad mininumDistanceToPoint:]
  -[VKQuad quadByConvertingFromNormalizedRectToView:contentsRect:]
  -[VKQuad quadFromSubtractingPoint:]
  -[VKQuad subquadFromRect:]
  -[VKQuad isCompletelyInsideRect:]
  -[VKQuad calcluateBoundingBox]
  -[VKQuad pointInsideValueForStartPoint:endPoint:testPoint:]
  -[VKQuad quadFromRotatingAroundOriginWithAngle:]
  -[VKQuad quadFromUnionWithQuad:]
  -[VKQuad distanceFromLine:toPoint:]
  -[VKQuad quadByAdjustingOrientation]
  -[VKQuad rotationTransformAndBoundingBox:]
  -[VKQuad initWithCRNormalizedQuad:]


VKBlockUIActivity : UIActivity
 @property  @? block
 @property  NSString *title
 @property  UIImage *image
 @property  NSString *type

  // instance methods
  -[VKBlockUIActivity setBlock:]
  -[VKBlockUIActivity setTitle:]
  -[VKBlockUIActivity image]
  -[VKBlockUIActivity setType:]
  -[VKBlockUIActivity .cxx_destruct]
  -[VKBlockUIActivity activityType]
  -[VKBlockUIActivity activityCategory]
  -[VKBlockUIActivity canPerformWithActivityItems:]
  -[VKBlockUIActivity performActivity]
  -[VKBlockUIActivity init]
  -[VKBlockUIActivity initWithBlock:]
  -[VKBlockUIActivity title]
  -[VKBlockUIActivity type]
  -[VKBlockUIActivity activityTitle]
  -[VKBlockUIActivity setImage:]
  -[VKBlockUIActivity initWithTitle:block:]
  -[VKBlockUIActivity block]
  -[VKBlockUIActivity activityImage]
  -[VKBlockUIActivity initWithTitle:image:activityType:block:]
  -[VKBlockUIActivity initWithTitle:systemImageName:activityType:block:]
  -[VKBlockUIActivity initWithTitle:image:block:]
  -[VKBlockUIActivity initWithTitle:systemImageName:block:]


VKAnalyticsTextEvent : VKAnalyticsEvent
 @property  long long source
 @property  long long textEventType
 @property  unsigned long selectionLength
 @property  unsigned long selectionWordCount
 @property  unsigned long totalLength
 @property  SEL macOSKBNavigationSelector
 @property  long long eventType

  // instance methods
  -[VKAnalyticsTextEvent setSource:]
  -[VKAnalyticsTextEvent type]
  -[VKAnalyticsTextEvent eventType]
  -[VKAnalyticsTextEvent eventKey]
  -[VKAnalyticsTextEvent source]
  -[VKAnalyticsTextEvent totalLength]
  -[VKAnalyticsTextEvent selectionLength]
  -[VKAnalyticsTextEvent setSelectionLength:]
  -[VKAnalyticsTextEvent setTotalLength:]
  -[VKAnalyticsTextEvent coreAnalyticsDictionary]
  -[VKAnalyticsTextEvent initWithSelectionLength:totalLength:selectionWordCount:macOSSelector:eventType:source:customIdentifier:]
  -[VKAnalyticsTextEvent macOSKBNavigationSelector]
  -[VKAnalyticsTextEvent selectionWordCount]
  -[VKAnalyticsTextEvent textEventType]
  -[VKAnalyticsTextEvent setSelectionWordCount:]
  -[VKAnalyticsTextEvent setMacOSKBNavigationSelector:]
  -[VKAnalyticsTextEvent setTextEventType:]


VKAnalyticsProcessor : NSObject
 @property  VKAnalyticsSessionAccumulator *sessionAccumulator

  // instance methods
  -[VKAnalyticsProcessor .cxx_destruct]
  -[VKAnalyticsProcessor processAndSendEvent:]
  -[VKAnalyticsProcessor processAndSendSession:]
  -[VKAnalyticsProcessor sendCoreAnalyticsEvent:block:]
  -[VKAnalyticsProcessor sessionAccumulator]
  -[VKAnalyticsProcessor setSessionAccumulator:]


VKCDragImageLabel : UILabel
 @property  {UIEdgeInsets=dddd} customEdgeInsets

  // instance methods
  -[VKCDragImageLabel drawTextInRect:]
  -[VKCDragImageLabel intrinsicContentSize]
  -[VKCDragImageLabel customEdgeInsets]
  -[VKCDragImageLabel setCustomEdgeInsets:]


VKCImageTextSelectionView_iOS : VKCImageTextSelectionView <UITextInteractionDelegate, VKCTextRecognitionResultTextDelegate, UIDragInteractionDelegate, UIScribbleInteractionDelegatePrivate, UITextInputTraits_Private, _UITextInputTranslationSupport, VKCTextSelectionLongPressHandlerDelegate, UITextInput, UIKeyInput>
 @property  UITextInputStringTokenizer *tokenizer
 @property  UITextInteraction *textInteraction
 @property  UIDragInteraction *dragInteraction
 @property  BOOL beginSelectionChangedCalled
 @property  BOOL manuallySettingSelectedRange
 @property  unsigned long draggedRectEdge
 @property  {_NSRange=QQ} preSelectionChangeSelectedRange
 @property  NSArray *accessibilityElements
 @property  VKCTextPointerTrackingView *textPointerTrackingView
 @property  VKCTextSelectionLongPressDelegateHandler *longPressHandler
 @property  UILongPressGestureRecognizer *longPressGR
 @property  BOOL initializationComplete
 @property  BOOL useFullDocumentRangeForEmptySelection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *recentInputIdentifier
 @property  {_NSRange=QQ} validTextRange
 @property  NSIndexSet *PINEntrySeparatorIndexes
 @property  ^{__CFCharacterSet=} textTrimmingSet
 @property  UIColor *insertionPointColor
 @property  UIColor *selectionBarColor
 @property  UIColor *selectionHighlightColor
 @property  UIImage *selectionDragDotImage
 @property  UIColor *selectionBorderColor
 @property  double selectionBorderWidth
 @property  double selectionCornerRadius
 @property  {UIEdgeInsets=dddd} selectionEdgeInsets
 @property  UIColor *underlineColorForTextAlternatives
 @property  UIColor *underlineColorForSpelling
 @property  unsigned long insertionPointWidth
 @property  int textLoupeVisibility
 @property  int textSelectionBehavior
 @property  id textSuggestionDelegate
 @property  BOOL isSingleLineDocument
 @property  BOOL contentsIsSingleValue
 @property  BOOL hasDefaultContents
 @property  BOOL acceptsPayloads
 @property  BOOL acceptsEmoji
 @property  BOOL acceptsInitialEmojiKeyboard
 @property  BOOL acceptsDictationSearchResults
 @property  BOOL useAutomaticEndpointing
 @property  BOOL showDictationButton
 @property  BOOL forceEnableDictation
 @property  BOOL forceDisableDictation
 @property  BOOL forceDefaultDictationInfo
 @property  long long forceDictationKeyboardType
 @property  BOOL preferOnlineDictation
 @property  int emptyContentReturnKeyType
 @property  BOOL returnKeyGoesToNextResponder
 @property  BOOL acceptsFloatingKeyboard
 @property  BOOL forceFloatingKeyboard
 @property  {UIEdgeInsets=dddd} floatingKeyboardEdgeInsets
 @property  BOOL acceptsSplitKeyboard
 @property  BOOL displaySecureTextUsingPlainText
 @property  BOOL displaySecureEditsUsingPlainText
 @property  BOOL learnsCorrections
 @property  int shortcutConversionType
 @property  BOOL suppressReturnKeyStyling
 @property  BOOL useInterfaceLanguageForLocalization
 @property  BOOL deferBecomingResponder
 @property  BOOL enablesReturnKeyOnNonWhiteSpaceContent
 @property  NSString *autocorrectionContext
 @property  NSString *responseContext
 @property  UIInputContextHistory *inputContextHistory
 @property  BOOL disableInputBars
 @property  BOOL isCarPlayIdiom
 @property  long long textScriptType
 @property  BOOL loadKeyboardsForSiriLanguage
 @property  _UISupplementalLexicon *supplementalLexicon
 @property  UIImage *supplementalLexiconAmbiguousItemIcon
 @property  BOOL disablePrediction
 @property  BOOL hidePrediction
 @property  BOOL disableHandwritingKeyboard
 @property  BOOL devicePasscodeEntry
 @property  long long preferredKeyboardStyle
 @property  UITextRange *textRangeForServicesInteraction
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long spellCheckingType
 @property  long long smartQuotesType
 @property  long long smartDashesType
 @property  long long smartInsertDeleteType
 @property  long long keyboardType
 @property  long long keyboardAppearance
 @property  long long returnKeyType
 @property  BOOL enablesReturnKeyAutomatically
 @property  BOOL secureTextEntry
 @property  NSString *textContentType
 @property  UITextInputPasswordRules *passwordRules
 @property  BOOL imageBacked
 @property  UITextRange *selectedTextRange
 @property  UITextRange *markedTextRange
 @property  NSDictionary *markedTextStyle
 @property  UITextPosition *beginningOfDocument
 @property  UITextPosition *endOfDocument
 @property  <UITextInputDelegate> *inputDelegate
 @property  UIView *textInputView
 @property  long long selectionAffinity
 @property  id insertDictationResultPlaceholder
 @property  BOOL hasText

  // class methods
  +[VKCImageTextSelectionView_iOS processHasSnapshotDragEntitlement]

  // instance methods
  -[VKCImageTextSelectionView_iOS markedTextStyle]
  -[VKCImageTextSelectionView_iOS setMarkedText:selectedRange:]
  -[VKCImageTextSelectionView_iOS _translate:]
  -[VKCImageTextSelectionView_iOS _lookup:]
  -[VKCImageTextSelectionView_iOS _share:]
  -[VKCImageTextSelectionView_iOS setInputDelegate:]
  -[VKCImageTextSelectionView_iOS hitTest:withEvent:]
  -[VKCImageTextSelectionView_iOS endSelectionChange]
  -[VKCImageTextSelectionView_iOS setMarkedTextStyle:]
  -[VKCImageTextSelectionView_iOS beginSelectionChange]
  -[VKCImageTextSelectionView_iOS markedTextRange]
  -[VKCImageTextSelectionView_iOS commonInit]
  -[VKCImageTextSelectionView_iOS copy:]
  -[VKCImageTextSelectionView_iOS tokenizer]
  -[VKCImageTextSelectionView_iOS _addShortcut:]
  -[VKCImageTextSelectionView_iOS initWithCoder:]
  -[VKCImageTextSelectionView_iOS takeTraitsFrom:]
  -[VKCImageTextSelectionView_iOS setSelectedTextRange:]
  -[VKCImageTextSelectionView_iOS inputDelegate]
  -[VKCImageTextSelectionView_iOS selectAll:]
  -[VKCImageTextSelectionView_iOS isEditable]
  -[VKCImageTextSelectionView_iOS _define:]
  -[VKCImageTextSelectionView_iOS textInputView]
  -[VKCImageTextSelectionView_iOS selectedRange]
  -[VKCImageTextSelectionView_iOS beginningOfDocument]
  -[VKCImageTextSelectionView_iOS setBaseWritingDirection:forRange:]
  -[VKCImageTextSelectionView_iOS setSelectedRange:]
  -[VKCImageTextSelectionView_iOS setContentsRect:]
  -[VKCImageTextSelectionView_iOS textRangeFromPosition:toPosition:]
  -[VKCImageTextSelectionView_iOS .cxx_destruct]
  -[VKCImageTextSelectionView_iOS dragInteraction:previewForLiftingItem:session:]
  -[VKCImageTextSelectionView_iOS selectedTextRange]
  -[VKCImageTextSelectionView_iOS _scribbleInteractionShouldDisableInputAssistant:]
  -[VKCImageTextSelectionView_iOS unmarkText]
  -[VKCImageTextSelectionView_iOS accessibilityElements]
  -[VKCImageTextSelectionView_iOS endOfDocument]
  -[VKCImageTextSelectionView_iOS isImageBacked]
  -[VKCImageTextSelectionView_iOS setDragInteraction:]
  -[VKCImageTextSelectionView_iOS canBecomeFirstResponder]
  -[VKCImageTextSelectionView_iOS becomeFirstResponder]
  -[VKCImageTextSelectionView_iOS scribbleInteraction:shouldBeginAtLocation:]
  -[VKCImageTextSelectionView_iOS dragInteraction:itemsForBeginningSession:]
  -[VKCImageTextSelectionView_iOS dragInteraction]
  -[VKCImageTextSelectionView_iOS textRangeForServicesInteraction]
  -[VKCImageTextSelectionView_iOS replaceRange:withText:]
  -[VKCImageTextSelectionView_iOS selectable]
  -[VKCImageTextSelectionView_iOS _accessibilityUserTestingChildren]
  -[VKCImageTextSelectionView_iOS initWithFrame:]
  -[VKCImageTextSelectionView_iOS deleteBackward]
  -[VKCImageTextSelectionView_iOS isEditing]
  -[VKCImageTextSelectionView_iOS setSelectionAffinity:]
  -[VKCImageTextSelectionView_iOS _availableTextServices]
  -[VKCImageTextSelectionView_iOS setTokenizer:]
  -[VKCImageTextSelectionView_iOS insertText:]
  -[VKCImageTextSelectionView_iOS hasText]
  -[VKCImageTextSelectionView_iOS text]
  -[VKCImageTextSelectionView_iOS interactionShouldBegin:atPoint:]
  -[VKCImageTextSelectionView_iOS selectionAffinity]
  -[VKCImageTextSelectionView_iOS setHidden:]
  -[VKCImageTextSelectionView_iOS didLongPress:]
  -[VKCImageTextSelectionView_iOS initializationComplete]
  -[VKCImageTextSelectionView_iOS setRecognitionResult:]
  -[VKCImageTextSelectionView_iOS setLongPressHandler:]
  -[VKCImageTextSelectionView_iOS longPressHandler]
  -[VKCImageTextSelectionView_iOS textInteraction]
  -[VKCImageTextSelectionView_iOS setTextInteraction:]
  -[VKCImageTextSelectionView_iOS longPressHandler:gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[VKCImageTextSelectionView_iOS longPressHandler:gestureRecognizer:shouldRecieveTouch:]
  -[VKCImageTextSelectionView_iOS setLongPressDataDetectorsInTextMode:]
  -[VKCImageTextSelectionView_iOS useInteractionOptions:]
  -[VKCImageTextSelectionView_iOS selectedRangeForTextRecognitionResult:]
  -[VKCImageTextSelectionView_iOS preSelectionChangeSelectedRangeForTextRecognitionResult:]
  -[VKCImageTextSelectionView_iOS draggedRectEdgeForTextRecognitionResult:]
  -[VKCImageTextSelectionView_iOS updateSelectionRectsForWindowChange]
  -[VKCImageTextSelectionView_iOS setBeginSelectionChangedCalled:]
  -[VKCImageTextSelectionView_iOS currentDraggedRectEdge]
  -[VKCImageTextSelectionView_iOS setDraggedRectEdge:]
  -[VKCImageTextSelectionView_iOS setPreSelectionChangeSelectedRange:]
  -[VKCImageTextSelectionView_iOS setManuallySettingSelectedRange:]
  -[VKCImageTextSelectionView_iOS _textRangeForActions]
  -[VKCImageTextSelectionView_iOS longPressGR]
  -[VKCImageTextSelectionView_iOS textPointerTrackingView]
  -[VKCImageTextSelectionView_iOS setTextPointerTrackingView:]
  -[VKCImageTextSelectionView_iOS beginSelectionChangedCalled]
  -[VKCImageTextSelectionView_iOS manuallySettingSelectedRange]
  -[VKCImageTextSelectionView_iOS draggedRectEdge]
  -[VKCImageTextSelectionView_iOS preSelectionChangeSelectedRange]
  -[VKCImageTextSelectionView_iOS useFullDocumentRangeForEmptySelection]
  -[VKCImageTextSelectionView_iOS targetedDragPreviewForCurrentSelection]
  -[VKCImageTextSelectionView_iOS targetedDragPreviewWithLabelsForCurrentSelection]
  -[VKCImageTextSelectionView_iOS selectedTextPathsConvertedToView:]
  -[VKCImageTextSelectionView_iOS setUseFullDocumentRangeForEmptySelection:]
  -[VKCImageTextSelectionView_iOS setLongPressGR:]
  -[VKCImageTextSelectionView_iOS setInitializationComplete:]


VKCTextPointerTrackingView : UIView <UIPointerInteractionDelegate>
 @property  VKQuad *quad
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCTextPointerTrackingView quad]
  -[VKCTextPointerTrackingView pointerInteraction:styleForRegion:]
  -[VKCTextPointerTrackingView pointerInteraction:willExitRegion:animator:]
  -[VKCTextPointerTrackingView .cxx_destruct]
  -[VKCTextPointerTrackingView initWithQuad:]


VKCImageTextSelectionViewAccessibilityElement : UIAccessibilityElement
  // instance methods
  -[VKCImageTextSelectionViewAccessibilityElement accessibilityTraits]
  -[VKCImageTextSelectionViewAccessibilityElement isAccessibilityElement]
  -[VKCImageTextSelectionViewAccessibilityElement accessibilityIdentifier]


VKCTextHighlightDot : UIView
 @property  CALayer *pulsingLayer
 @property  CALayer *circleLayer
 @property  UIColor *highlightColor
 @property  BOOL pulsing
 @property  {VKQuadSideLength=dddd} quadSideLength
 @property  CALayer *textHighlightLayer

  // instance methods
  -[VKCTextHighlightDot setPulsing:]
  -[VKCTextHighlightDot _updateLayout]
  -[VKCTextHighlightDot traitCollectionDidChange:]
  -[VKCTextHighlightDot setHighlightColor:]
  -[VKCTextHighlightDot .cxx_destruct]
  -[VKCTextHighlightDot layoutSubviews]
  -[VKCTextHighlightDot highlightColor]
  -[VKCTextHighlightDot pulsing]
  -[VKCTextHighlightDot initWithColor:]
  -[VKCTextHighlightDot circleLayer]
  -[VKCTextHighlightDot setCircleLayer:]
  -[VKCTextHighlightDot updateIndicatorDotForState]
  -[VKCTextHighlightDot setQuadSideLength:]
  -[VKCTextHighlightDot setTextHighlightLayer:]
  -[VKCTextHighlightDot opacityForCurrentQuadSize]
  -[VKCTextHighlightDot textHighlightLayer]
  -[VKCTextHighlightDot quadSideLength]
  -[VKCTextHighlightDot _rectForViewSpace:]
  -[VKCTextHighlightDot rectForIndicatorDot]
  -[VKCTextHighlightDot configureForPulsing:]
  -[VKCTextHighlightDot pulsingLayer]
  -[VKCTextHighlightDot setPulsingLayer:]


VKAnalysisExecutionDurations : NSObject
 @property  double madRoundTripAnalysisDuration
 @property  double mrcParseDuration
 @property  double madDocumentDuration
 @property  double madMRCDuration
 @property  double madVisualSearchDuration

  // instance methods
  -[VKAnalysisExecutionDurations setMadRoundTripAnalysisDuration:]
  -[VKAnalysisExecutionDurations setMrcParseDuration:]
  -[VKAnalysisExecutionDurations setMadDocumentDuration:]
  -[VKAnalysisExecutionDurations setMadVisualSearchDuration:]
  -[VKAnalysisExecutionDurations setMadMRCDuration:]
  -[VKAnalysisExecutionDurations madRoundTripAnalysisDuration]
  -[VKAnalysisExecutionDurations mrcParseDuration]
  -[VKAnalysisExecutionDurations madDocumentDuration]
  -[VKAnalysisExecutionDurations madMRCDuration]
  -[VKAnalysisExecutionDurations madVisualSearchDuration]


VKAnalyticsAnalyzerEvent : VKAnalyticsEvent
 @property  VKAnalysisExecutionDurations *durations
 @property  unsigned long analysisTypes
 @property  {CGSize=dd} imageSize
 @property  unsigned long requestType
 @property  long long textLength
 @property  long long lineCount
 @property  long long ddCount
 @property  long long mrcCount
 @property  long long visualSearchCount
 @property  NSError *error
 @property  double madRoundTripAnalysisDuration
 @property  double madDocumentDuration
 @property  double madMRCDuration
 @property  double madVisualSearchDuration
 @property  double mrcParseDuration

  // instance methods
  -[VKAnalyticsAnalyzerEvent setRequestType:]
  -[VKAnalyticsAnalyzerEvent setImageSize:]
  -[VKAnalyticsAnalyzerEvent .cxx_destruct]
  -[VKAnalyticsAnalyzerEvent lineCount]
  -[VKAnalyticsAnalyzerEvent textLength]
  -[VKAnalyticsAnalyzerEvent requestType]
  -[VKAnalyticsAnalyzerEvent setTextLength:]
  -[VKAnalyticsAnalyzerEvent imageSize]
  -[VKAnalyticsAnalyzerEvent durations]
  -[VKAnalyticsAnalyzerEvent setLineCount:]
  -[VKAnalyticsAnalyzerEvent setDurations:]
  -[VKAnalyticsAnalyzerEvent type]
  -[VKAnalyticsAnalyzerEvent eventKey]
  -[VKAnalyticsAnalyzerEvent setError:]
  -[VKAnalyticsAnalyzerEvent error]
  -[VKAnalyticsAnalyzerEvent coreAnalyticsDictionary]
  -[VKAnalyticsAnalyzerEvent ddCount]
  -[VKAnalyticsAnalyzerEvent mrcCount]
  -[VKAnalyticsAnalyzerEvent setDdCount:]
  -[VKAnalyticsAnalyzerEvent setMrcCount:]
  -[VKAnalyticsAnalyzerEvent initWithExecutionDurations:request:analysis:customIdentifier:error:]
  -[VKAnalyticsAnalyzerEvent analysisTypes]
  -[VKAnalyticsAnalyzerEvent setAnalysisTypes:]
  -[VKAnalyticsAnalyzerEvent madRoundTripAnalysisDuration]
  -[VKAnalyticsAnalyzerEvent mrcParseDuration]
  -[VKAnalyticsAnalyzerEvent madDocumentDuration]
  -[VKAnalyticsAnalyzerEvent madMRCDuration]
  -[VKAnalyticsAnalyzerEvent madVisualSearchDuration]
  -[VKAnalyticsAnalyzerEvent visualSearchCount]
  -[VKAnalyticsAnalyzerEvent setVisualSearchCount:]


VKImageAnalyzerInProcessMadInterface : VKImageAnalyzerMadInterface
 @property  NSObject<OS_dispatch_queue> *housekeepingQueue
 @property  NSObject<OS_dispatch_queue> *tempMadProcessingQueue
 @property  NSMutableOrderedSet *tempMadRequestQueueWaiting
 @property  NSMutableOrderedSet *tempMadRequestQueueProcessing
 @property  NSMutableSet *tempMadRequestQueueCancelling
 @property  NSMutableDictionary *idsToRequests
 @property  int queueRequestID
 @property  NSString *errorDomain

  // class methods
  +[VKImageAnalyzerInProcessMadInterface sharedInterface]

  // instance methods
  -[VKImageAnalyzerInProcessMadInterface errorDomain]
  -[VKImageAnalyzerInProcessMadInterface .cxx_destruct]
  -[VKImageAnalyzerInProcessMadInterface _processRequest:]
  -[VKImageAnalyzerInProcessMadInterface cancelledError]
  -[VKImageAnalyzerInProcessMadInterface _cancelRequest:]
  -[VKImageAnalyzerInProcessMadInterface init]
  -[VKImageAnalyzerInProcessMadInterface cancelAllRequests]
  -[VKImageAnalyzerInProcessMadInterface nextRequestID]
  -[VKImageAnalyzerInProcessMadInterface cancelRequestID:]
  -[VKImageAnalyzerInProcessMadInterface processRequest:]
  -[VKImageAnalyzerInProcessMadInterface statusForRequestID:]
  -[VKImageAnalyzerInProcessMadInterface housekeepingQueue]
  -[VKImageAnalyzerInProcessMadInterface _statusForRequestID:]
  -[VKImageAnalyzerInProcessMadInterface idsToRequests]
  -[VKImageAnalyzerInProcessMadInterface clearCompletedRequest:]
  -[VKImageAnalyzerInProcessMadInterface setHousekeepingQueue:]
  -[VKImageAnalyzerInProcessMadInterface setIdsToRequests:]
  -[VKImageAnalyzerInProcessMadInterface addRequestForProcessing:]
  -[VKImageAnalyzerInProcessMadInterface tempMadRequestQueueProcessing]
  -[VKImageAnalyzerInProcessMadInterface tempMadRequestQueueWaiting]
  -[VKImageAnalyzerInProcessMadInterface removeAndNotifyOfCancelledRequest:]
  -[VKImageAnalyzerInProcessMadInterface tempMadRequestQueueCancelling]
  -[VKImageAnalyzerInProcessMadInterface processNextItemIfNecessary]
  -[VKImageAnalyzerInProcessMadInterface tempMadProcessingQueue]
  -[VKImageAnalyzerInProcessMadInterface mrcElementsFromImage:symbologies:]
  -[VKImageAnalyzerInProcessMadInterface didFinishRequest:withAnalysisResult:error:]
  -[VKImageAnalyzerInProcessMadInterface request:didCompleteWithAnalysis:error:]
  -[VKImageAnalyzerInProcessMadInterface setTempMadProcessingQueue:]
  -[VKImageAnalyzerInProcessMadInterface setTempMadRequestQueueWaiting:]
  -[VKImageAnalyzerInProcessMadInterface setTempMadRequestQueueProcessing:]
  -[VKImageAnalyzerInProcessMadInterface setTempMadRequestQueueCancelling:]
  -[VKImageAnalyzerInProcessMadInterface queueRequestID]
  -[VKImageAnalyzerInProcessMadInterface setQueueRequestID:]


VKImageAnalysisButton : UIButton
 @property  UIView *_backgroundView
 @property  UIView *_selectedBackgroundView
 @property  UIView *_selectedBackgroundColorView
 @property  UIVisualEffectView *_selectedBackgroundVisualEffectView
 @property  UIVisualEffectView *_backgroundVisualEffectView
 @property  double _highlightedGlyphScaleFactor
 @property  CABasicAnimation *_highlightedGlyphAnimation
 @property  BOOL didManuallySetBackgroundDiameter
 @property  double backgroundDiameter
 @property  double glyphRotation
 @property  UIColor *cameraModeBackgroundColor
 @property  unsigned long mode
 @property  unsigned long glyphConfiguration
 @property  unsigned long function
 @property  BOOL prefersDarkGlyphWhenSelected

  // instance methods
  -[VKImageAnalysisButton setHighlighted:]
  -[VKImageAnalysisButton pointerInteraction:styleForRegion:]
  -[VKImageAnalysisButton initWithCoder:]
  -[VKImageAnalysisButton _backgroundView]
  -[VKImageAnalysisButton traitCollectionDidChange:]
  -[VKImageAnalysisButton setFunction:]
  -[VKImageAnalysisButton _selectedIndicatorBounds]
  -[VKImageAnalysisButton .cxx_destruct]
  -[VKImageAnalysisButton layoutSubviews]
  -[VKImageAnalysisButton _backgroundVisualEffectView]
  -[VKImageAnalysisButton tintColorDidChange]
  -[VKImageAnalysisButton setSelected:]
  -[VKImageAnalysisButton initWithFrame:]
  -[VKImageAnalysisButton function]
  -[VKImageAnalysisButton _updateGlyph]
  -[VKImageAnalysisButton setMode:]
  -[VKImageAnalysisButton _selectedIndicatorAlpha]
  -[VKImageAnalysisButton _selectedIndicatorViewWithImage:]
  -[VKImageAnalysisButton _selectedBackgroundView]
  -[VKImageAnalysisButton mode]
  -[VKImageAnalysisButton intrinsicContentSize]
  -[VKImageAnalysisButton setBackgroundDiameter:]
  -[VKImageAnalysisButton setGlyphRotation:]
  -[VKImageAnalysisButton setCameraModeBackgroundColor:]
  -[VKImageAnalysisButton setPrefersDarkGlyphWhenSelected:]
  -[VKImageAnalysisButton setHighlightedGlyphScaleFactor:animation:]
  -[VKImageAnalysisButton _updateBackgroundColors]
  -[VKImageAnalysisButton setGlyphConfiguration:]
  -[VKImageAnalysisButton prefersDarkGlyphWhenSelected]
  -[VKImageAnalysisButton set_selectedBackgroundColorView:]
  -[VKImageAnalysisButton _commonVKImageAnalysisButtonInitialization]
  -[VKImageAnalysisButton backgroundDiameter]
  -[VKImageAnalysisButton glyphRotation]
  -[VKImageAnalysisButton _glyphTransformForRotation:highlighted:]
  -[VKImageAnalysisButton didManuallySetBackgroundDiameter]
  -[VKImageAnalysisButton _highlightedGlyphScaleFactor]
  -[VKImageAnalysisButton _highlightedGlyphAnimation]
  -[VKImageAnalysisButton setupForFunction:]
  -[VKImageAnalysisButton _selectedBackgroundVisualEffectView]
  -[VKImageAnalysisButton setDidManuallySetBackgroundDiameter:]
  -[VKImageAnalysisButton set_highlightedGlyphScaleFactor:]
  -[VKImageAnalysisButton set_highlightedGlyphAnimation:]
  -[VKImageAnalysisButton cameraModeBackgroundColor]
  -[VKImageAnalysisButton _selectedBackgroundColorView]
  -[VKImageAnalysisButton glyphConfiguration]
  -[VKImageAnalysisButton set_selectedBackgroundVisualEffectView:]
  -[VKImageAnalysisButton set_backgroundVisualEffectView:]


VKCLookupButton : VKCTappableView
 @property  <VKCLookupButtonDelegate> *delegate

  // instance methods
  -[VKCLookupButton .cxx_destruct]
  -[VKCLookupButton setDelegate:]
  -[VKCLookupButton delegate]


VKCVisualSearchResultItemView : VKPlatformView <UIPointerInteractionDelegate, CAAnimationDelegate>
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  long long interfaceOrientation
 @property  VKCVisualSearchResultItem *visualSearchResultItem
 @property  VKCLookupButton *lookupButton
 @property  CALayer *iconInLookupButtonLayer
 @property  {CGSize=dd} cachedDotSize
 @property  long long status
 @property  CALayer *pinLayer
 @property  CALayer *pulsingLayer
 @property  BOOL didProcessResult
 @property  BOOL isShowingVisualResultsPane
 @property  NSString *currentRVItemID
 @property  BOOL observingInteractionDidFinish
 @property  BOOL shouldShowDots
 @property  UIImage *imageForButton
 @property  UIImage *tintedImageForButton
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} currentImageRectForLayerContents
 @property  <VKCVisualSearchResultItemViewDelegate> *delegate
 @property  BOOL pulsing
 @property  BOOL automaticallyShowVisualSearchResults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCVisualSearchResultItemView setPulsing:]
  -[VKCVisualSearchResultItemView hitTest:withEvent:]
  -[VKCVisualSearchResultItemView pointerInteraction:styleForRegion:]
  -[VKCVisualSearchResultItemView _updateLayout]
  -[VKCVisualSearchResultItemView setTapGestureRecognizer:]
  -[VKCVisualSearchResultItemView traitCollectionDidChange:]
  -[VKCVisualSearchResultItemView didTap:]
  -[VKCVisualSearchResultItemView .cxx_destruct]
  -[VKCVisualSearchResultItemView pinLayer]
  -[VKCVisualSearchResultItemView layoutSubviews]
  -[VKCVisualSearchResultItemView setInterfaceOrientation:]
  -[VKCVisualSearchResultItemView setDelegate:]
  -[VKCVisualSearchResultItemView animationDidStop:finished:]
  -[VKCVisualSearchResultItemView deviceOrientationDidChange:]
  -[VKCVisualSearchResultItemView interfaceOrientation]
  -[VKCVisualSearchResultItemView tapGestureRecognizer]
  -[VKCVisualSearchResultItemView pulsing]
  -[VKCVisualSearchResultItemView status]
  -[VKCVisualSearchResultItemView setPinLayer:]
  -[VKCVisualSearchResultItemView delegate]
  -[VKCVisualSearchResultItemView setStatus:]
  -[VKCVisualSearchResultItemView dealloc]
  -[VKCVisualSearchResultItemView _queryString]
  -[VKCVisualSearchResultItemView setAutomaticallyShowVisualSearchResults:]
  -[VKCVisualSearchResultItemView hideDots]
  -[VKCVisualSearchResultItemView _symbolNameForItem]
  -[VKCVisualSearchResultItemView _defaultSymbolName]
  -[VKCVisualSearchResultItemView imageForButton]
  -[VKCVisualSearchResultItemView updateIndicatorDotForState]
  -[VKCVisualSearchResultItemView contentSizeScaleFactor]
  -[VKCVisualSearchResultItemView showLookupUIPaneForResultItem]
  -[VKCVisualSearchResultItemView didProcessResult]
  -[VKCVisualSearchResultItemView setDidProcessResult:]
  -[VKCVisualSearchResultItemView setCurrentRVItemID:]
  -[VKCVisualSearchResultItemView observingInteractionDidFinish]
  -[VKCVisualSearchResultItemView _didDismissVisualResultsPane:]
  -[VKCVisualSearchResultItemView setObservingInteractionDidFinish:]
  -[VKCVisualSearchResultItemView currentRVItemID]
  -[VKCVisualSearchResultItemView didDismissVisualResultsPane]
  -[VKCVisualSearchResultItemView isShowingVisualResultsPane]
  -[VKCVisualSearchResultItemView setIsShowingVisualResultsPane:]
  -[VKCVisualSearchResultItemView automaticallyShowVisualSearchResults]
  -[VKCVisualSearchResultItemView containsVisualSearchItemAtPoint:]
  -[VKCVisualSearchResultItemView beginAnimatingDotAfterDelay:]
  -[VKCVisualSearchResultItemView didFinishAnimatingDots]
  -[VKCVisualSearchResultItemView initWithVisualSearchResultItem:]
  -[VKCVisualSearchResultItemView visualSearchResultItem]
  -[VKCVisualSearchResultItemView showVisualResultsPane]
  -[VKCVisualSearchResultItemView _rectForViewSpace:]
  -[VKCVisualSearchResultItemView rectForIndicatorDot]
  -[VKCVisualSearchResultItemView pulsingLayer]
  -[VKCVisualSearchResultItemView setPulsingLayer:]
  -[VKCVisualSearchResultItemView lookupButtonSize]
  -[VKCVisualSearchResultItemView tintedImageForButton]
  -[VKCVisualSearchResultItemView boundsFromVisualSearchResult]
  -[VKCVisualSearchResultItemView updatePulsingLayer]
  -[VKCVisualSearchResultItemView setImageContentsInLayer:withRect:]
  -[VKCVisualSearchResultItemView _transformForButtonScale]
  -[VKCVisualSearchResultItemView _animatePin:]
  -[VKCVisualSearchResultItemView _pinEndTransform]
  -[VKCVisualSearchResultItemView _pinSizeForViewScale]
  -[VKCVisualSearchResultItemView _pinArrowDirection]
  -[VKCVisualSearchResultItemView currentImageRectForLayerContents]
  -[VKCVisualSearchResultItemView setCurrentImageRectForLayerContents:]
  -[VKCVisualSearchResultItemView _screenZoomScale]
  -[VKCVisualSearchResultItemView updatePinLayerFrame]
  -[VKCVisualSearchResultItemView trianglePathForPinBubbleWithDirection:withRadius:]
  -[VKCVisualSearchResultItemView circlePathForPinBubbleWithDirection:withRadius:]
  -[VKCVisualSearchResultItemView setImageContentsInLayer:withMaterialLayer:withRect:]
  -[VKCVisualSearchResultItemView _pinButtonRect]
  -[VKCVisualSearchResultItemView _offsetForPinBubbleFrameWithDirection:pinBubbleBounds:]
  -[VKCVisualSearchResultItemView lookupButton]
  -[VKCVisualSearchResultItemView setShouldShowDots:]
  -[VKCVisualSearchResultItemView _initialDotAnimationTransform]
  -[VKCVisualSearchResultItemView shouldShowDots]
  -[VKCVisualSearchResultItemView showPinForTappedDot]
  -[VKCVisualSearchResultItemView animateToVisualResultsPane:]
  -[VKCVisualSearchResultItemView _queryForProcessingResult]
  -[VKCVisualSearchResultItemView pointForVisualSearchIcon]
  -[VKCVisualSearchResultItemView removePulsing]
  -[VKCVisualSearchResultItemView didDismissViewController]
  -[VKCVisualSearchResultItemView performLookup]
  -[VKCVisualSearchResultItemView setVisualSearchResultItem:]
  -[VKCVisualSearchResultItemView setLookupButton:]
  -[VKCVisualSearchResultItemView iconInLookupButtonLayer]
  -[VKCVisualSearchResultItemView setIconInLookupButtonLayer:]
  -[VKCVisualSearchResultItemView cachedDotSize]
  -[VKCVisualSearchResultItemView setCachedDotSize:]


VKVisualSearchViewController : UIViewController
 @property  VKCVisualSearchResult *visualSearchResult
 @property  BOOL didShowResults
 @property  UIActivityIndicatorView *loadingIndicator
 @property  <VKVisualSearchViewControllerDelegate> *delegate
 @property  NSArray *visualSearchResultItems

  // instance methods
  -[VKVisualSearchViewController viewWillLayoutSubviews]
  -[VKVisualSearchViewController initWithImage:]
  -[VKVisualSearchViewController .cxx_destruct]
  -[VKVisualSearchViewController viewDidLoad]
  -[VKVisualSearchViewController setDelegate:]
  -[VKVisualSearchViewController viewWillDisappear:]
  -[VKVisualSearchViewController viewWillAppear:]
  -[VKVisualSearchViewController delegate]
  -[VKVisualSearchViewController setLoadingIndicator:]
  -[VKVisualSearchViewController loadingIndicator]
  -[VKVisualSearchViewController visualSearchResult]
  -[VKVisualSearchViewController setVisualSearchResult:]
  -[VKVisualSearchViewController setVisualSearchResultItems:]
  -[VKVisualSearchViewController visualSearchResultItems]
  -[VKVisualSearchViewController _showVisualSearchViewController]
  -[VKVisualSearchViewController _resultSectionsForRecognitionResult:]
  -[VKVisualSearchViewController _resultSectionsForRecognitionResultItems:]
  -[VKVisualSearchViewController presentSearchViewControllerForSections:]
  -[VKVisualSearchViewController initWithVisualSearchResultItems:]
  -[VKVisualSearchViewController didShowResults]
  -[VKVisualSearchViewController setDidShowResults:]


VKPointAnimatableProperty : NSObject
 @property  UIViewFloatAnimatableProperty *x
 @property  UIViewFloatAnimatableProperty *y
 @property  {CGPoint=dd} value
 @property  {CGPoint=dd} presentationValue

  // instance methods
  -[VKPointAnimatableProperty y]
  -[VKPointAnimatableProperty x]
  -[VKPointAnimatableProperty .cxx_destruct]
  -[VKPointAnimatableProperty presentationValue]
  -[VKPointAnimatableProperty init]
  -[VKPointAnimatableProperty setValue:]
  -[VKPointAnimatableProperty value]


VKTextLiftingView : UIView
 @property  UIImageView *_imageView
 @property  UIBezierPath *_rotatedCutoutPath
 @property  UIVisualEffectView *_highlightView
 @property  BOOL _hasLifted
 @property  BOOL _hasFadedOut
 @property  BOOL _presentedMenuForLiftedText
 @property  UIImage *image
 @property  UIBezierPath *cutoutPath
 @property  double baselineAngle
 @property  UIBezierPath *hitTestPath
 @property  double maxScale
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  VKImageAnalysisInteraction *imageInteraction
 @property  BOOL presentsMenuForLiftedText
 @property  <VKTextLiftingViewDelegate> *delegate

  // instance methods
  -[VKTextLiftingView maxScale]
  -[VKTextLiftingView imageInteraction]
  -[VKTextLiftingView _imageView]
  -[VKTextLiftingView setImageInteraction:]
  -[VKTextLiftingView setContentInsets:]
  -[VKTextLiftingView didMoveToSuperview]
  -[VKTextLiftingView image]
  -[VKTextLiftingView contentInsets]
  -[VKTextLiftingView .cxx_destruct]
  -[VKTextLiftingView setMaxScale:]
  -[VKTextLiftingView layoutSubviews]
  -[VKTextLiftingView setDelegate:]
  -[VKTextLiftingView _hasLifted]
  -[VKTextLiftingView _highlightView]
  -[VKTextLiftingView pointInside:withEvent:]
  -[VKTextLiftingView delegate]
  -[VKTextLiftingView _contentBounds]
  -[VKTextLiftingView baselineAngle]
  -[VKTextLiftingView performLiftAnimation]
  -[VKTextLiftingView fadeOutAndRemoveFromSuperview]
  -[VKTextLiftingView initWithImage:cutoutPath:baselineAngle:]
  -[VKTextLiftingView hitTestPath]
  -[VKTextLiftingView setPresentsMenuForLiftedText:]
  -[VKTextLiftingView setHitTestPath:]
  -[VKTextLiftingView _applyInteractionToImageViewIfReady]
  -[VKTextLiftingView _imageTransformInBounds:]
  -[VKTextLiftingView cutoutPath]
  -[VKTextLiftingView _hasLifted:]
  -[VKTextLiftingView _springAnimationForKeyPath:fromValue:toValue:]
  -[VKTextLiftingView presentsMenuForLiftedText]
  -[VKTextLiftingView _hasFadedOut]
  -[VKTextLiftingView _setPresentedMenuForLiftedText:]
  -[VKTextLiftingView _hasFadedOut:]
  -[VKTextLiftingView _presentedMenuForLiftedText]
  -[VKTextLiftingView _gaussianBlurFilterWithRadius:]
  -[VKTextLiftingView _rotatedCutoutPath]
  -[VKTextLiftingView initWithImage:cutoutPath:]


VKCMockTextProvider : NSObject
 @property  NSMutableArray *lines
 @property  NSString *text
 @property  BOOL isRunningTest

  // instance methods
  -[VKCMockTextProvider caretRectForPosition:]
  -[VKCMockTextProvider lines]
  -[VKCMockTextProvider setText:]
  -[VKCMockTextProvider characterRangeAtPoint:]
  -[VKCMockTextProvider closestPositionToPoint:withinRange:]
  -[VKCMockTextProvider .cxx_destruct]
  -[VKCMockTextProvider isRunningTest]
  -[VKCMockTextProvider setLines:]
  -[VKCMockTextProvider initWithDictionary:]
  -[VKCMockTextProvider text]
  -[VKCMockTextProvider lineForIndex:]
  -[VKCMockTextProvider allLineQuads]
  -[VKCMockTextProvider smallestSelectableRangeForPosition:]
  -[VKCMockTextProvider firstRectForRange:documentView:contentRect:]
  -[VKCMockTextProvider selectionRectsForRange:documentView:contentRect:]
  -[VKCMockTextProvider adjustTextRangeToSelectableRange:]
  -[VKCMockTextProvider rangeOfWordForPosition:]
  -[VKCMockTextProvider rangeOfLineForPosition:]
  -[VKCMockTextProvider setIsRunningTest:]
  -[VKCMockTextProvider loadInfoFromDictionary:]
  -[VKCMockTextProvider wordForIndex:]


VKCInternalSettings : NSObject
  // class methods
  +[VKCInternalSettings defaults]
  +[VKCInternalSettings boolForKey:withDefaultValue:]
  +[VKCInternalSettings addRandomArtificalAnalysisDelay]
  +[VKCInternalSettings randomDelayStartValue]
  +[VKCInternalSettings randomDelayEndValue]
  +[VKCInternalSettings isPerformingAutomatedTest]
  +[VKCInternalSettings overrideDeviceAvailability]
  +[VKCInternalSettings visibleTextAreaButtonThreshold]
  +[VKCInternalSettings isCGImageForMadEnabled]
  +[VKCInternalSettings debugMenuEnabled]
  +[VKCInternalSettings extraWindowPointTouchOffset]
  +[VKCInternalSettings floatForKey:withDefaultValue:]
  +[VKCInternalSettings alwaysShowTextSelectionBorders]
  +[VKCInternalSettings defaultsKeyForKey:]
  +[VKCInternalSettings settingsValueForKey:]
  +[VKCInternalSettings isCGImageForMadEnabledSettingsValue]
  +[VKCInternalSettings addRandomArtificalAnalysisDelaySettingsValue]
  +[VKCInternalSettings randomDelayStartValueSettingsValue]
  +[VKCInternalSettings randomDelayEndValueSettingsValue]
  +[VKCInternalSettings extraWindowPointTouchOffsetSettingsValue]
  +[VKCInternalSettings debugMenuEnabledSettingsValue]
  +[VKCInternalSettings visibleTextAreaButtonThresholdSettingsValue]
  +[VKCInternalSettings alwaysShowTextSelectionBordersSettingsValue]
  +[VKCInternalSettings overrideDeviceAvailabilitySettingsValue]
  +[VKCInternalSettings isPerformingAutomatedTestSettingsValue]


VKCMockTextLine : NSObject
 @property  {_NSRange=QQ} range
 @property  NSString *text
 @property  VKQuad *quad
 @property  NSArray *words

  // instance methods
  -[VKCMockTextLine range]
  -[VKCMockTextLine words]
  -[VKCMockTextLine quad]
  -[VKCMockTextLine setText:]
  -[VKCMockTextLine .cxx_destruct]
  -[VKCMockTextLine setRange:]
  -[VKCMockTextLine setQuad:]
  -[VKCMockTextLine setWords:]
  -[VKCMockTextLine text]
  -[VKCMockTextLine initWithWordsArray:startingIndex:]
  -[VKCMockTextLine loadWordsArrayFromWords:startingIndex:]


VKCMockTextWord : NSObject
 @property  {_NSRange=QQ} range
 @property  NSString *text
 @property  VKQuad *quad

  // instance methods
  -[VKCMockTextWord range]
  -[VKCMockTextWord quad]
  -[VKCMockTextWord setText:]
  -[VKCMockTextWord .cxx_destruct]
  -[VKCMockTextWord setRange:]
  -[VKCMockTextWord setQuad:]
  -[VKCMockTextWord text]
  -[VKCMockTextWord initWithWordsDictionary:]


VKCaptureVideoPreviewViewController : UIViewController <BKSAccelerometerDelegate, AVCaptureVideoDataOutputSampleBufferDelegate>
 @property  BKSAccelerometer *accelerometer
 @property  BOOL viewDidAppear
 @property  {CGSize=dd} dimensions
 @property  AVCaptureConnection *connection
 @property  {CGAffineTransform=dddddd} transform
 @property  AVCaptureSession *captureSession
 @property  AVCaptureDevice *captureDevice
 @property  NSObject<OS_dispatch_queue> *sampleBufferQueue
 @property  NSObject<OS_dispatch_queue> *avCaptureQueue
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} regionOfInterest
 @property  NSDictionary *videoSettings
 @property  long long videoOrientation
 @property  VKCaptureVideoPreviewView *previewView
 @property  BOOL wantsRegionOfInterest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCaptureVideoPreviewViewController videoOrientation]
  -[VKCaptureVideoPreviewViewController previewView]
  -[VKCaptureVideoPreviewViewController captureDevice]
  -[VKCaptureVideoPreviewViewController viewDidAppear]
  -[VKCaptureVideoPreviewViewController .cxx_destruct]
  -[VKCaptureVideoPreviewViewController setDimensions:]
  -[VKCaptureVideoPreviewViewController viewDidLoad]
  -[VKCaptureVideoPreviewViewController accelerometer]
  -[VKCaptureVideoPreviewViewController setAccelerometer:]
  -[VKCaptureVideoPreviewViewController setConnection:]
  -[VKCaptureVideoPreviewViewController videoSettings]
  -[VKCaptureVideoPreviewViewController dimensions]
  -[VKCaptureVideoPreviewViewController init]
  -[VKCaptureVideoPreviewViewController connection]
  -[VKCaptureVideoPreviewViewController setTransform:]
  -[VKCaptureVideoPreviewViewController setVideoSettings:]
  -[VKCaptureVideoPreviewViewController sessionRuntimeError:]
  -[VKCaptureVideoPreviewViewController captureOutput:didOutputSampleBuffer:fromConnection:]
  -[VKCaptureVideoPreviewViewController viewWillDisappear:]
  -[VKCaptureVideoPreviewViewController transform]
  -[VKCaptureVideoPreviewViewController viewDidLayoutSubviews]
  -[VKCaptureVideoPreviewViewController setCaptureDevice:]
  -[VKCaptureVideoPreviewViewController viewWillAppear:]
  -[VKCaptureVideoPreviewViewController dealloc]
  -[VKCaptureVideoPreviewViewController accelerometer:didAccelerateWithTimeStamp:x:y:z:eventType:]
  -[VKCaptureVideoPreviewViewController loadView]
  -[VKCaptureVideoPreviewViewController _canShowWhileLocked]
  -[VKCaptureVideoPreviewViewController accelerometer:didChangeDeviceOrientation:]
  -[VKCaptureVideoPreviewViewController regionOfInterest]
  -[VKCaptureVideoPreviewViewController setRegionOfInterest:]
  -[VKCaptureVideoPreviewViewController setViewDidAppear:]
  -[VKCaptureVideoPreviewViewController setCaptureSession:]
  -[VKCaptureVideoPreviewViewController captureSession]
  -[VKCaptureVideoPreviewViewController changeToZoomFactor:]
  -[VKCaptureVideoPreviewViewController layerPointFromVisionPoint:]
  -[VKCaptureVideoPreviewViewController wantsRegionOfInterest]
  -[VKCaptureVideoPreviewViewController didChangeRegionOfInterest:]
  -[VKCaptureVideoPreviewViewController desiredDeviceTypes]
  -[VKCaptureVideoPreviewViewController configureCamera]
  -[VKCaptureVideoPreviewViewController updateDimensionsAndTransform]
  -[VKCaptureVideoPreviewViewController startSessionIfReady]
  -[VKCaptureVideoPreviewViewController avCaptureQueue]
  -[VKCaptureVideoPreviewViewController sampleBufferQueue]
  -[VKCaptureVideoPreviewViewController visionPointFromLayerPoint:]
  -[VKCaptureVideoPreviewViewController setSampleBufferQueue:]
  -[VKCaptureVideoPreviewViewController setAvCaptureQueue:]


VKCImageBaseOverlayView : VKPlatformView
 @property  VKCTextRecognitionResult *recognitionResult
 @property  NSString *customAnalyticsIdentifier
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentsRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} normalizedVisibleRect

  // instance methods
  -[VKCImageBaseOverlayView setContentsRect:]
  -[VKCImageBaseOverlayView .cxx_destruct]
  -[VKCImageBaseOverlayView contentsRect]
  -[VKCImageBaseOverlayView initWithFrame:]
  -[VKCImageBaseOverlayView setRecognitionResult:]
  -[VKCImageBaseOverlayView recognitionResult]
  -[VKCImageBaseOverlayView normalizedPointFromViewPoint:]
  -[VKCImageBaseOverlayView customAnalyticsIdentifier]
  -[VKCImageBaseOverlayView normalizedVisibleRectDidChange]
  -[VKCImageBaseOverlayView setCustomAnalyticsIdentifier:]
  -[VKCImageBaseOverlayView setNormalizedVisibleRect:]
  -[VKCImageBaseOverlayView normalizedVisibleRect]
  -[VKCImageBaseOverlayView updateSelectionRectsForWindowChange]
  -[VKCImageBaseOverlayView normalizedQuadFromViewQuad:]
  -[VKCImageBaseOverlayView viewPointFromNormalizedPoint:]
  -[VKCImageBaseOverlayView normalizedRectFromViewRect:]
  -[VKCImageBaseOverlayView viewRectFromNormalizedRect:]
  -[VKCImageBaseOverlayView viewQuadFromNormalizedQuad:]


VKCElementInfo : VKCBaseElement
 @property  NSString *text

  // class methods
  +[VKCElementInfo infoWithText:parent:]

  // instance methods
  -[VKCElementInfo stringValue]
  -[VKCElementInfo setText:]
  -[VKCElementInfo children]
  -[VKCElementInfo .cxx_destruct]
  -[VKCElementInfo text]


VKCaptureTextFeedbackAssetProvider : NSObject <VKFeedbackAssetsProvider>
 @property  VKCaptureTextAnalysisRequest *request
 @property  VKCaptureTextDetectionResult *detectionResult
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCaptureTextFeedbackAssetProvider .cxx_destruct]
  -[VKCaptureTextFeedbackAssetProvider request]
  -[VKCaptureTextFeedbackAssetProvider detectionResult]
  -[VKCaptureTextFeedbackAssetProvider initWithRequest:detectionResult:]
  -[VKCaptureTextFeedbackAssetProvider saveAssetsToFeedbackAttachmentsFolder:error:]


VKWKTextInfo : NSObject
 @property  NSString *string
 @property  VKQuad *quad

  // instance methods
  -[VKWKTextInfo quad]
  -[VKWKTextInfo .cxx_destruct]
  -[VKWKTextInfo setQuad:]
  -[VKWKTextInfo string]
  -[VKWKTextInfo setString:]


VKWKLineInfo : VKWKTextInfo
 @property  NSArray *children

  // instance methods
  -[VKWKLineInfo setChildren:]
  -[VKWKLineInfo children]
  -[VKWKLineInfo .cxx_destruct]


VKWKDataDetectorInfo : NSObject
 @property  DDScannerResult *result
 @property  NSArray *boundingQuads
 @property  {_NSRange=QQ} characterRange

  // instance methods
  -[VKWKDataDetectorInfo .cxx_destruct]
  -[VKWKDataDetectorInfo setCharacterRange:]
  -[VKWKDataDetectorInfo result]
  -[VKWKDataDetectorInfo setResult:]
  -[VKWKDataDetectorInfo characterRange]
  -[VKWKDataDetectorInfo boundingQuads]
  -[VKWKDataDetectorInfo setBoundingQuads:]


VKImageAnalysis : NSObject <NSSecureCoding>
 @property  VKCImageAnalysisResult *imageAnalysisResult
 @property  NSString *requestIdentifier
 @property  VKFeedbackProvider *feedbackProvider
 @property  int analysisRequestID

  // class methods
  +[VKImageAnalysis supportsSecureCoding]

  // instance methods
  -[VKImageAnalysis setRequestIdentifier:]
  -[VKImageAnalysis requestIdentifier]
  -[VKImageAnalysis initWithCoder:]
  -[VKImageAnalysis mrcMenu]
  -[VKImageAnalysis .cxx_destruct]
  -[VKImageAnalysis allLines]
  -[VKImageAnalysis setPresentingViewControllerForMrcAction:]
  -[VKImageAnalysis hasResultsForAnalysisTypes:]
  -[VKImageAnalysis textDataDetectors]
  -[VKImageAnalysis encodeWithCoder:]
  -[VKImageAnalysis countOfDataDetectorsWithTypes:]
  -[VKImageAnalysis imageAnalysisResult]
  -[VKImageAnalysis setFeedbackProvider:]
  -[VKImageAnalysis feedbackProvider]
  -[VKImageAnalysis presentingViewControllerForMrcAction]
  -[VKImageAnalysis barcodeActions]
  -[VKImageAnalysis analysisRequestID]
  -[VKImageAnalysis initWithAnalysisResult:]
  -[VKImageAnalysis writeSecureCodedArchiveToURL:error:]
  -[VKImageAnalysis _hasVisualSearchElements]
  -[VKImageAnalysis analysisByReplacingTypes:fromAnalysis:]
  -[VKImageAnalysis setImageAnalysisResult:]


VKImageAnalysisInteractionResultInfo : NSObject
 @property  NSString *displayLabel
 @property  NSString *displayMessage
 @property  NSString *domain
 @property  NSString *glyphName
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} normalizedBoundingRect

  // instance methods
  -[VKImageAnalysisInteractionResultInfo .cxx_destruct]
  -[VKImageAnalysisInteractionResultInfo glyphName]
  -[VKImageAnalysisInteractionResultInfo domain]
  -[VKImageAnalysisInteractionResultInfo displayLabel]
  -[VKImageAnalysisInteractionResultInfo displayMessage]
  -[VKImageAnalysisInteractionResultInfo initWithDisplayLabel:displayMessage:glyphName:rect:]
  -[VKImageAnalysisInteractionResultInfo normalizedBoundingRect]


VKLocalization : NSObject

VKCMRCHighlightView : VKPlatformView
 @property  VKCMRCDataDetectorElement *element
 @property  VKPlatformView *containerView
 @property  VKPlatformView *pillView
 @property  UILabel *label
 @property  NSLayoutConstraint *pillWidthConstraint
 @property  NSLayoutConstraint *pillTopConstraint
 @property  NSLayoutConstraint *pillCenterConstraint
 @property  <VKCMRCHighlightViewDelegate> *delegate

  // instance methods
  -[VKCMRCHighlightView element]
  -[VKCMRCHighlightView label]
  -[VKCMRCHighlightView containerView]
  -[VKCMRCHighlightView .cxx_destruct]
  -[VKCMRCHighlightView setPillView:]
  -[VKCMRCHighlightView layoutSubviews]
  -[VKCMRCHighlightView setElement:]
  -[VKCMRCHighlightView setDelegate:]
  -[VKCMRCHighlightView setContainerView:]
  -[VKCMRCHighlightView delegate]
  -[VKCMRCHighlightView setLabel:]
  -[VKCMRCHighlightView pillView]
  -[VKCMRCHighlightView initWithElement:delegate:]
  -[VKCMRCHighlightView createPillViewIfNecessary]
  -[VKCMRCHighlightView attributedStringForHeight:]
  -[VKCMRCHighlightView pillWidthConstraint]
  -[VKCMRCHighlightView pillTopConstraint]
  -[VKCMRCHighlightView pillCenterConstraint]
  -[VKCMRCHighlightView setPillWidthConstraint:]
  -[VKCMRCHighlightView setPillTopConstraint:]
  -[VKCMRCHighlightView setPillCenterConstraint:]


(VK)
	// class methods
	+[(VK) vk_valueWithPoint:]
	+[(VK) vk_valueWithSize:]
	+[(VK) vk_valueWithRect:]

	// instance methods
	-[(VK) vk_rectValue]
	-[(VK) vk_pointValue]

(VK)
	// instance methods
	-[(VK) vk_isToday]
	-[(VK) vk_isYesterday]
	-[(VK) vk_briefFormattedDate:]
	-[(VK) vk_localDateWithSeconds]
	-[(VK) vk_shortFormattedDate]
	-[(VK) vk_briefFormattedDate]
	-[(VK) vk_briefFormattedDateForAccessibility]
	-[(VK) vk_isEarlierThanDate:]
	-[(VK) vk_isLaterThanDate:]

UIView(Utilities)
	// instance methods
	-[UIView(Utilities) summaryDescription]
	-[UIView(Utilities) setVk_backgroundColor:]
	-[UIView(Utilities) vk_alpha]
	-[UIView(Utilities) vk_viewLengthFromWindowLength:]
	-[UIView(Utilities) vk_windowLengthFromViewLength:]
	-[UIView(Utilities) vk_autoFadeOutShapePointLayer]
	-[UIView(Utilities) vk_autoFadeOutLayerWithPath:fadeOutDelay:]
	-[UIView(Utilities) vk_autoFadeOutLayerWithQuad:fadeOutDelay:]
	-[UIView(Utilities) vk_renderImageFromViewBackingStoreWithSubrect:]
	-[UIView(Utilities) vk_backgroundColor]
	-[UIView(Utilities) setVk_alpha:]
	-[UIView(Utilities) vk_userInteractionEnabled]
	-[UIView(Utilities) setVk_userInteractionEnabled:]
	-[UIView(Utilities) vk_isFlipped]
	-[UIView(Utilities) vk_isFirstResponder]
	-[UIView(Utilities) vk_viewPointRatioFromWindow]
	-[UIView(Utilities) vk_windowPointRatioFromView]
	-[UIView(Utilities) vk_setNeedsDisplay]
	-[UIView(Utilities) vk_setNeedsLayout]
	-[UIView(Utilities) vk_layoutIfNeeded]
	-[UIView(Utilities) vk_clipsToBounds]
	-[UIView(Utilities) vk_isDescendantOfView:]
	-[UIView(Utilities) vk_autoFadeOutShapeRectLayer]
	-[UIView(Utilities) vk_autoFadeOutLayerWithPath:]
	-[UIView(Utilities) vk_autoFadeOutLayerWithQuad:]
	-[UIView(Utilities) vk_constraintsToFillView:]
	-[UIView(Utilities) vk_renderImageFromViewBackingStore]
	-[UIView(Utilities) vk_constraintsToFillLayoutGuide:]

CALayer(Utilities)
	// instance methods
	-[CALayer(Utilities) vk_quadFromConvertingRect:toLayer:]
	-[CALayer(Utilities) vk_quadFromConvertingBoundsToLayer:]

(VKLoggable)
	// class methods
	+[(VKLoggable) vk_loggingDescriptionFromLoggable:isPretty:]

	// instance methods
	-[(VKLoggable) vk_loggingIdentifier]
	-[(VKLoggable) vk_loggingDescription]
	-[(VKLoggable) vk_prettyLoggingDescription]

UIColor(Utilities)
	// class methods
	+[UIColor(Utilities) vk_randomColor]

	// instance methods
	-[UIColor(Utilities) vk_colorWith20PercentOpacity]
	-[UIColor(Utilities) vk_colorWith40PercentOpacity]
	-[UIColor(Utilities) vk_colorWith60PercentOpacity]
	-[UIColor(Utilities) vk_colorWith80PercentOpacity]
	-[UIColor(Utilities) vk_colorWithMaxSaturation]

UITraitCollection(Utilities)
	// class methods
	+[UITraitCollection(Utilities) appearanceClassForType:]

	// instance methods
	-[UITraitCollection(Utilities) ic_traitCollectionByAppendingNonNilTraitCollection:]
	-[UITraitCollection(Utilities) vk_hasCompactWidth]
	-[UITraitCollection(Utilities) vk_contentSizeScaleFactor]
	-[UITraitCollection(Utilities) vk_hasCompactSize]
	-[UITraitCollection(Utilities) vk_performAsCurrent:]
	-[UITraitCollection(Utilities) vk_hasCompactHeight]
	-[UITraitCollection(Utilities) vk_isDark]
	-[UITraitCollection(Utilities) vk_isRTL]
	-[UITraitCollection(Utilities) vk_hasEqualSizeToTraitCollection:]
	-[UITraitCollection(Utilities) vk_traitCollectionClampedToNonaccessibilityContentSize]
	-[UITraitCollection(Utilities) vk_traitCollectionWithContentSize:]
	-[UITraitCollection(Utilities) vk_traitCollectionByAppendingNonNilTraitCollection:]

(VKDataExtensions)
	// instance methods
	-[(VKDataExtensions) vk_md5]
	-[(VKDataExtensions) vk_stringValue]

VNRectangleObservation(Utilities)
	// instance methods
	-[VNRectangleObservation(Utilities) summaryDescription]
	-[VNRectangleObservation(Utilities) vk_quadConvertedToView:withContentsRect:]
	-[VNRectangleObservation(Utilities) vkQuad]

VNRecognizedTextBlockObservation(Utilities)
	// instance methods
	-[VNRecognizedTextBlockObservation(Utilities) vk_textBlock]

NSUndoManager(VK)
	// instance methods
	-[NSUndoManager(VK) vk_performUndoGroupWithActionName:undoGroup:]
	-[NSUndoManager(VK) vk_isUndoingOrRedoing]
	-[NSUndoManager(VK) vk_performUndoGroup:]

UIMenu(Utilities)
	// class methods
	+[UIMenu(Utilities) vk_menuWithItems:title:]
	+[UIMenu(Utilities) vk_menuWithItems:title:subtitle:image:]
	+[UIMenu(Utilities) vk_menuWithItems:title:subtitle:]

	// instance methods
	-[UIMenu(Utilities) vk_addItems:]

UIAction(Utilities)
	// class methods
	+[UIAction(Utilities) vk_itemWithTitle:subtitle:]
	+[UIAction(Utilities) vk_itemWithTitle:]

UIViewController(Utilities)
	// instance methods
	-[UIViewController(Utilities) vk_viewIfLoaded]

(VK)
	// class methods
	+[(VK) vk_NSAttachmentCharacterString]

	// instance methods
	-[(VK) vk_range]
	-[(VK) vk_substringWithRange:]
	-[(VK) vk_checkedSubstringWithRange:]
	-[(VK) vk_wordCount]
	-[(VK) vk_substringToIndex:]
	-[(VK) vk_substringFromIndex:]
	-[(VK) vk_md5]
	-[(VK) vk_stringByReplacingNewlineCharactersWithWhiteSpace]
	-[(VK) vk_rangesOfMatchesForString:]
	-[(VK) vk_stringByTrimmingLeadingCharactersInSet:]
	-[(VK) vk_stringByReplacingCharactersInSet:withString:]
	-[(VK) vk_stringByReplacingCharactersInStringMap:]
	-[(VK) vk_isLastCharacterInRangeANewlineForRange:]
	-[(VK) vk_rangeIsValid:]
	-[(VK) vk_safeCharacterRangeForRange:]
	-[(VK) vk_trailingTrimmedString]
	-[(VK) vk_htmlStringEscapingQuotesAndLineBreaks]
	-[(VK) vk_trimmedString]
	-[(VK) vk_leadingTrimmedString]
	-[(VK) vk_whitespaceAndNewlineCoalescedString]
	-[(VK) vk_sanitizedFilenameString]
	-[(VK) vk_lineRangeIgnoringLineBreakCharactersForIndex:]
	-[(VK) vk_stringReplacingUnsafeHTMLCharacters]
	-[(VK) vk_stringReplacingUnsafeXMLCharacters]
	-[(VK) vk_stringByRemovingAttachmentCharacters]
	-[(VK) vk_isLastCharacterANewline]
	-[(VK) vk_numberOfLines]
	-[(VK) vk_uniqueWordsWithMinLength:]
	-[(VK) vk_containsNonWhitespaceCharacters]
	-[(VK) vk_containsNonWhitespaceAndAttachmentCharacters]
	-[(VK) vk_containsAlphanumericCharacters]
	-[(VK) vk_enumerateParagraphsInRange:usingBlock:]
	-[(VK) vk_enumerateContentLineRangesInRange:usingBlock:]
	-[(VK) vk_paragraphRangeForRange:contentEnd:]
	-[(VK) vk_lengthOfLongestLine]
	-[(VK) vk_countOfCharactersInSet:]
	-[(VK) vk_truncatedStringWithMaxLength:truncated:]

UIBezierPath(Utilities)
	// class methods
	+[UIBezierPath(Utilities) vk_roundAndGroupNormalizedQuadsForHighlight:aspectRatio:expansionScale:radiusToAvgHeightRatio:]
	+[UIBezierPath(Utilities) vk_newRoundedPathWithRadius:points:]
	+[UIBezierPath(Utilities) vk_groupAndRoundPaths:radius:offset:]
	+[UIBezierPath(Utilities) vk_allPointsFromCGPath:]
	+[UIBezierPath(Utilities) vk_subpathArrayFromCGPath:]
	+[UIBezierPath(Utilities) _cgPathFromClipperPath:]
	+[UIBezierPath(Utilities) vk_pathFromCGPath:]
	+[UIBezierPath(Utilities) vk_cgPathcontainsAnyCurveToPoints:]
	+[UIBezierPath(Utilities) _processPointsForRounding:withRadius:]
	+[UIBezierPath(Utilities) _processPointsForNarrowAngles:]
	+[UIBezierPath(Utilities) vk_clampedRadius:p1:p2:p3:]
	+[UIBezierPath(Utilities) vk_calculateCenterForPoints:p2:p3:radius:]
	+[UIBezierPath(Utilities) vk_projectPoint:lineStart:lineEnd:]
	+[UIBezierPath(Utilities) vk_signForRadiusWithVectorStart:end:otherPoint:]
	+[UIBezierPath(Utilities) vk_shiftLinePerpendicularlyFromPoint:to:radius:]
	+[UIBezierPath(Utilities) mapPaths:toQuads:]
	+[UIBezierPath(Utilities) radiusForQuads:radiusRatio:]

	// instance methods
	-[UIBezierPath(Utilities) debugQuickLookObject]
	-[UIBezierPath(Utilities) vk_applyTransform:]
	-[UIBezierPath(Utilities) vk_expandWithOffset:]
	-[UIBezierPath(Utilities) vk_intersectAndFlattenWithPath:]
	-[UIBezierPath(Utilities) vk_allPoints]
	-[UIBezierPath(Utilities) vk_CGPath]
	-[UIBezierPath(Utilities) vk_unionAndFlattenWithPath:]
	-[UIBezierPath(Utilities) vk_appendBezierPath:]
	-[UIBezierPath(Utilities) vk_addLineToPoint:]
	-[UIBezierPath(Utilities) vk_addCurveToPoint:controlPoint1:controlPoint2:]
	-[UIBezierPath(Utilities) _vk_flattenWithPath:clipType:]
	-[UIBezierPath(Utilities) vk_centroid]
	-[UIBezierPath(Utilities) vk_pathFromFlippingInRect:]
	-[UIBezierPath(Utilities) vk_subpathArray]

(VK)
	// class methods
	+[(VK) heapsAlgorithm:k:result:]
	+[(VK) vk_arrayFromNonNilObject:]

	// instance methods
	-[(VK) vk_objectPassingTest:]
	-[(VK) vk_compactMap:]
	-[(VK) vk_objectsPassingTest:]
	-[(VK) vk_flatMap:]
	-[(VK) vk_containsObjectPassingTest:]
	-[(VK) vk_arrayByAddingNonNilObject:]
	-[(VK) vk_arrayByAddingObjectsFromNonNilArray:]
	-[(VK) vk_countOfObjectsPassingTest:]
	-[(VK) vk_map:]
	-[(VK) vk_objectsOfClass:]
	-[(VK) vk_objectBefore:wrap:]
	-[(VK) vk_objectAfter:wrap:]
	-[(VK) vk_randomObject]
	-[(VK) vk_generateAllPermutations]
	-[(VK) vk_firstObjectOfClass:]
	-[(VK) vk_objectsConformingToProtocol:]
	-[(VK) vk_arrayByGroupingIntoArraysWithMaxCount:]
	-[(VK) vk_indexOfSortedObject:insertionIndex:usingComparator:]
	-[(VK) vk_indexIsValid:]
	-[(VK) vk_objectBefore:]
	-[(VK) vk_objectAfter:]

<DEREK BUG Categories!>(VK)
	// instance methods
	-[<DEREK BUG Categories!>(VK) vk_addNonNilObject:]
	-[<DEREK BUG Categories!>(VK) vk_addObjectsFromNonNilArray:]
	-[<DEREK BUG Categories!>(VK) vk_insertNonNilObject:atIndex:]

NSIndexSet(VK)
	// instance methods
	-[NSIndexSet(VK) vk_rangeArray]

UIButton(Utilities)
	// instance methods
	-[UIButton(Utilities) vk_setTintColor:]

(VK)
	// instance methods
	-[(VK) vk_objectPassingTest:]
	-[(VK) vk_compactMap:]
	-[(VK) vk_containsObjectPassingTest:]
	-[(VK) vk_map:]
	-[(VK) vk_objectsOfClass:]
	-[(VK) vk_objectsConformingToProtocol:]

<DEREK BUG Categories!>(VK)
	// class methods
	+[<DEREK BUG Categories!>(VK) vk_setFromNonNilArray:]

	// instance methods
	-[<DEREK BUG Categories!>(VK) vk_addNonNilObject:]
	-[<DEREK BUG Categories!>(VK) vk_removeNonNilObject:]
	-[<DEREK BUG Categories!>(VK) vk_addObjectsFromNonNilArray:]
	-[<DEREK BUG Categories!>(VK) vk_removeObjectsFromNonNilArray:]

<DEREK BUG Categories!>(VK)
	// instance methods
	-[<DEREK BUG Categories!>(VK) vk_addNonNilObject:]

(VK)
	// instance methods
	-[(VK) vk_prettyDescriptionWithTabLevel:]
	-[(VK) vk_md5]
	-[(VK) vk_objectForNonNilKey:]

<DEREK BUG Categories!>(VK)
	// instance methods
	-[<DEREK BUG Categories!>(VK) vk_addKey:forNonNilObject:]
	-[<DEREK BUG Categories!>(VK) vk_setNonNilObject:forKey:]
	-[<DEREK BUG Categories!>(VK) vk_removeObjectForNonNilKey:]
	-[<DEREK BUG Categories!>(VK) vk_setNonNilObject:forNonNilKey:]

(VK)
	// instance methods
	-[(VK) vk_range]
	-[(VK) vk_attributedStringByReplacingCharactersInSet:withString:]
	-[(VK) vk_attributedSubstringFromRange:]
	-[(VK) vk_enumerateClampedAttribute:inRange:options:usingBlock:]
	-[(VK) vk_enumerateUnclampedAttribute:inRange:options:usingBlock:]
	-[(VK) vk_attributedStringByReplacingNewlineCharactersWithWhiteSpace]

NSMutableAttributedString(VK)
	// instance methods
	-[NSMutableAttributedString(VK) vk_replaceCharactersInRange:withAttributedSubstring:fromRange:]
	-[NSMutableAttributedString(VK) vk_appendString:]
	-[NSMutableAttributedString(VK) vk_appendAttributedSubstring:fromRange:]

UIDevice(VK)
	// class methods
	+[UIDevice(VK) vk_isiPad]
	+[UIDevice(VK) vk_isiPhone]
	+[UIDevice(VK) vk_isSmalliPhone]
	+[UIDevice(VK) vk_isPlusiPhone]
	+[UIDevice(VK) vk_isLargeiPad]
	+[UIDevice(VK) vk_isCatalyst]

UIImage(Utilities)
	// class methods
	+[UIImage(Utilities) vk_symbolImageWithName:]
	+[UIImage(Utilities) vk_imageWithCGImage:]
	+[UIImage(Utilities) vk_imageWithCGImage:scale:orientation:]
	+[UIImage(Utilities) vk_orientedImageFromCGImage:scale:transform:]
	+[UIImage(Utilities) vk_orientationMetadataFromImageOrientation:]
	+[UIImage(Utilities) vk_imageWithContentsOfURL:]
	+[UIImage(Utilities) vk_imageNamed:withTint:]
	+[UIImage(Utilities) vk_imageNamed:withTint:size:]
	+[UIImage(Utilities) vk_UIImageFromCIImage:]
	+[UIImage(Utilities) vk_orientedImageFromImage:fromOrientation:]
	+[UIImage(Utilities) vk_orientedImageFromImage:toOrientation:]
	+[UIImage(Utilities) vk_imageWithData:]
	+[UIImage(Utilities) vk_fileIconForURL:withPreferredSize:]
	+[UIImage(Utilities) vk_imageWithColor:size:]
	+[UIImage(Utilities) vk_aspectFitImageFrameForViewWithFrame:imageSize:]

	// instance methods
	-[UIImage(Utilities) vk_cgImage]
	-[UIImage(Utilities) vk_PNGData]
	-[UIImage(Utilities) vk_imageOrientation]
	-[UIImage(Utilities) vk_imageWithTint:size:]
	-[UIImage(Utilities) vk_scaledImageWithSize:scale:]
	-[UIImage(Utilities) vk_JPEGDataWithOrientation:]
	-[UIImage(Utilities) vk_imageDataWithUTType:metadata:]
	-[UIImage(Utilities) vk_decodeInBackground]
	-[UIImage(Utilities) vk_newARGB8BitmapContextFromImage:]
	-[UIImage(Utilities) vk_scaledImageMinDimension:scale:]
	-[UIImage(Utilities) vk_scaledImageMaxDimension:scale:]
	-[UIImage(Utilities) vk_imageFromRect:]
	-[UIImage(Utilities) vk_horizontallyMirroredImage]
	-[UIImage(Utilities) vk_cgImagePropertyOrientation]
	-[UIImage(Utilities) vk_JPEGData]
	-[UIImage(Utilities) vk_PNGDataWithOrientation:]
	-[UIImage(Utilities) vk_imageDataWithUTType:]
	-[UIImage(Utilities) vk_decodeWithCompletion:]
	-[UIImage(Utilities) vk_cropRectZeroAlpha]

UIImageView(Utilities)
	// instance methods
	-[UIImageView(Utilities) setVk_contentTintColor:]
	-[UIImageView(Utilities) vk_contentTintColor]

NSRegularExpression(VK)
	// class methods
	+[NSRegularExpression(VK) vk_regexForSearchStrings:]

	// instance methods
	-[NSRegularExpression(VK) vk_rangesForMatchesInString:]

CRNormalizedQuad(VKQuadAdditions)
	// instance methods
	-[CRNormalizedQuad(VKQuadAdditions) summaryDescription]
	-[CRNormalizedQuad(VKQuadAdditions) vkQuad]

01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriter 
01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInput 
01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceDiscoverySession 
01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoDataOutput 
01 00 0500 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSAccelerometer 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0200 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKSubjectIndicatorView 
01 00 0300 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 0300 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 0d00 /System/Library/PrivateFrameworks/TextRecognition.framework/TextRecognition: CRDataDetectorsOutputRegion 
01 00 0d00 /System/Library/PrivateFrameworks/TextRecognition.framework/TextRecognition: CRNormalizedQuad 
01 00 0c00 /System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore: DDScannerResult 
01 00 1100 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1100 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSDocumentProxy 
01 00 0700 /System/Library/PrivateFrameworks/MediaAnalysisServices.framework/MediaAnalysisServices: MADService 
01 00 0700 /System/Library/PrivateFrameworks/MediaAnalysisServices.framework/MediaAnalysisServices: MADVIDocumentRecognitionRequest 
01 00 0700 /System/Library/PrivateFrameworks/MediaAnalysisServices.framework/MediaAnalysisServices: MADVIDocumentRecognitionResult 
01 00 0700 /System/Library/PrivateFrameworks/MediaAnalysisServices.framework/MediaAnalysisServices: MADVIMachineReadableCodeDetectionRequest 
01 00 0700 /System/Library/PrivateFrameworks/MediaAnalysisServices.framework/MediaAnalysisServices: MADVIMachineReadableCodeDetectionResult 
01 00 0700 /System/Library/PrivateFrameworks/MediaAnalysisServices.framework/MediaAnalysisServices: MADVIVisualSearchGatingRequest 
01 00 0700 /System/Library/PrivateFrameworks/MediaAnalysisServices.framework/MediaAnalysisServices: MADVIVisualSearchGatingResultItem 
01 00 0700 /System/Library/PrivateFrameworks/MediaAnalysisServices.framework/MediaAnalysisServices: MADVIVisualSearchRequest 
01 00 1400 /System/Library/PrivateFrameworks/CoreMaterial.framework/CoreMaterial: MTMaterialLayer 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSLinguisticTagger 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUndoManager 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0400 /System/Library/PrivateFrameworks/RevealCore.framework/RevealCore: RVItem 
01 00 0400 /System/Library/PrivateFrameworks/RevealCore.framework/RevealCore: RVQuery 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIAccessibilityElement 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivity 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIButtonConfiguration 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIColorEffect 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuConfiguration 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuInteraction 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragInteraction 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragItem 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewParameters 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontMetrics 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuController 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIPasteboard 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerInteraction 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerLiftEffect 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerShape 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerStyle 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewParameters 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewTarget 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIScribbleInteraction 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedDragPreview 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITextInputStringTokenizer 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITextInteraction 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITextPosition 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITextRange 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITextSelectionRect 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITextSelectionRectCustomHandleInfo 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewFloatAnimatableProperty 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowScene 
01 00 0b00 /System/Library/Frameworks/Vision.framework/Vision: VNBarcodeObservation 
01 00 0b00 /System/Library/Frameworks/Vision.framework/Vision: VNDetectBarcodesRequest 
01 00 0b00 /System/Library/Frameworks/Vision.framework/Vision: VNDocumentObservation 
01 00 0b00 /System/Library/Frameworks/Vision.framework/Vision: VNImageRequestHandler 
01 00 0b00 /System/Library/Frameworks/Vision.framework/Vision: VNRecognizeDocumentsRequest 
01 00 0b00 /System/Library/Frameworks/Vision.framework/Vision: VNRecognizedTextBlockObservation 
01 00 0b00 /System/Library/Frameworks/Vision.framework/Vision: VNRectangleObservation 
01 00 0b00 /System/Library/Frameworks/Vision.framework/Vision: VNSession 
01 00 0b00 /System/Library/Frameworks/Vision.framework/Vision: VNTrackHomographyRequest 
01 00 1800 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContextMenuStyle 
