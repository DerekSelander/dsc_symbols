|| __DATA.__data _IMDCKBackupControllerDefaultTimebombIntervalInDays
|| __DATA.__data _IMDCKCacheDeleteAutoCaptureSubtype
|| __DATA.__data _IMDCKUpdateSyncControllerErrorDomain
|| __DATA.__data _IMDMeCardUpdatedNotification
|| __DATA.__data _IMDMessageHistorySyncNotifyCKChatSyncControllerWantsSync
|| __DATA.__data _IMDMessageHistorySyncNotifyIDSTransactionLogWantsSync
|| __DATA.__data _IMDMessageHistorySyncNotifyReplayControllerWantsSync
|| __DATA.__data _MessageDictionaryMeCardSharingAudienceKey
|| __DATA.__data _MessageDictionaryMeCardSharingEnabledKey
|| __DATA.__data _MessageDictionaryMeCardSharingImageForkedKey
|| __DATA.__data _MessageDictionaryMeCardSharingNameForkedKey
|| __DATA.__data _MessageDictionaryMeCardSharingVersionKey
|| __DATA.__data _MessageDictionaryNicknameAllowListKey
|| __DATA.__data _MessageDictionaryNicknameDenyAllowListVersionKey
|| __DATA.__data _MessageDictionaryNicknameDenyListKey
|| __DATA.__data _MessageDictionaryNicknameParticipantTruncatedRIDKey
|| __DATA.__data _MessageDictionaryNicknameRequestPersonalNicknameInfoKey
|| __DATA.__data _MessageDictionaryNicknameVersionKey
|| __DATA.__data _MessageDictionaryPendingNicknameUpdatesHandlesKey
|| __DATA.__data _MessageDictionaryPendingNicknameUpdatesVersionKey
|| __DATA.__data _MessageDictionaryPersonalNicknameDecryptKeyKey
|| __DATA.__data _MessageDictionaryPersonalNicknameRecordIDKey
|| __DATA.__data _OBJC_METACLASS_$_IMDaemonCoreHelloWorldClass_Impl
|| __DATA.__data _OBJC_METACLASS_$__IMDInternalWorkQueue
|| __DATA.__data _OBJC_METACLASS_$__TtC12IMDaemonCore28PersistedCollaborationNotice
|| __DATA.__data _OBJC_METACLASS_$___IMDBackwardCompatibilityMessageIdentifier
|| __DATA.__data _OBJC_METACLASS_$___IMDPlainTextTapbackInterpreterImpl
|| __DATA.__objc_data _OBJC_CLASS_$_CKRecordUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_IMDAvailabilityVerificationTokens
|| __DATA.__objc_data _OBJC_CLASS_$_IMDBackwardCompatibilityMessageIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_IMDCKRecoverableMessageSyncController
|| __DATA.__objc_data _OBJC_CLASS_$_IMDCKSyncStatsCollector
|| __DATA.__objc_data _OBJC_CLASS_$_IMDCKUpdateSyncController
|| __DATA.__objc_data _OBJC_CLASS_$_IMDCollaborationNoticeTypeGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_IMDDeletePartsHelper
|| __DATA.__objc_data _OBJC_CLASS_$_IMDMessageHistoryFirstUnlockReplaySyncTask
|| __DATA.__objc_data _OBJC_CLASS_$_IMDMessageHistoryIDSTransactionLogSyncTask
|| __DATA.__objc_data _OBJC_CLASS_$_IMDMessagePTask
|| __DATA.__objc_data _OBJC_CLASS_$_IMDMessageSortOrderAssigner
|| __DATA.__objc_data _OBJC_CLASS_$_IMDMomentShareManager
|| __DATA.__objc_data _OBJC_CLASS_$_IMDPhotosSyndicationLibraryChangeListener
|| __DATA.__objc_data _OBJC_CLASS_$_IMDPlainTextTapbackInterpreter
|| __DATA.__objc_data _OBJC_CLASS_$_IMDReplayStorageIterationContext
|| __DATA.__objc_data _OBJC_CLASS_$_IMDSIMSubscriptionUpdateTracker
|| __DATA.__objc_data _OBJC_CLASS_$_IMDSpotlightIndexDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_IMDWorkQueue
|| __DATA.__objc_data _OBJC_CLASS_$_IMDaemonCoreHelloWorldClass
|| __DATA.__objc_data _OBJC_CLASS_$_IMDaemonCoreHelloWorldClass_Impl
|| __DATA.__objc_data _OBJC_CLASS_$_IMDeliveredQuietlyReceiptPipelineParameter
|| __DATA.__objc_data _OBJC_CLASS_$_IMDeliveredQuietlyReceiptProcessingPipelineComponent
|| __DATA.__objc_data _OBJC_CLASS_$_IMEditMessageCommandPipelineParameter
|| __DATA.__objc_data _OBJC_CLASS_$_IMEditMessageCommandProcessingPipelineComponent
|| __DATA.__objc_data _OBJC_CLASS_$_IMMarkUnreadRequestPipelineParameter
|| __DATA.__objc_data _OBJC_CLASS_$_IMMarkUnreadRequestProcessingPipelineComponent
|| __DATA.__objc_data _OBJC_CLASS_$_IMMessagesToTrack
|| __DATA.__objc_data _OBJC_CLASS_$_IMNotifyRecipientCommandPipelineParameter
|| __DATA.__objc_data _OBJC_CLASS_$_IMNotifyRecipientCommandProcessingPipelineComponent
|| __DATA.__objc_data _OBJC_CLASS_$_IMPlayedReceiptPipelineParameter
|| __DATA.__objc_data _OBJC_CLASS_$_IMPlayedReceiptProcessingPipelineComponent
|| __DATA.__objc_data _OBJC_CLASS_$_IMTextMessageAttributedStringContent
|| __DATA.__objc_data _OBJC_CLASS_$__IMDInternalWorkQueue
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12IMDaemonCore28PersistedCollaborationNotice
|| __DATA.__objc_data _OBJC_CLASS_$___IMDBackwardCompatibilityMessageIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$___IMDPlainTextTapbackInterpreterImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_CKRecordUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDAvailabilityVerificationTokens
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDBackwardCompatibilityMessageIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDCKRecoverableMessageSyncController
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDCKSyncStatsCollector
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDCKUpdateSyncController
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDCollaborationNoticeTypeGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDDeletePartsHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDMessageHistoryFirstUnlockReplaySyncTask
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDMessageHistoryIDSTransactionLogSyncTask
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDMessagePTask
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDMessageSortOrderAssigner
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDMomentShareManager
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDPhotosSyndicationLibraryChangeListener
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDPlainTextTapbackInterpreter
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDReplayStorageIterationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDSIMSubscriptionUpdateTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDSpotlightIndexDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDWorkQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDaemonCoreHelloWorldClass
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDeliveredQuietlyReceiptPipelineParameter
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDeliveredQuietlyReceiptProcessingPipelineComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_IMEditMessageCommandPipelineParameter
|| __DATA.__objc_data _OBJC_METACLASS_$_IMEditMessageCommandProcessingPipelineComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_IMMarkUnreadRequestPipelineParameter
|| __DATA.__objc_data _OBJC_METACLASS_$_IMMarkUnreadRequestProcessingPipelineComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_IMMessagesToTrack
|| __DATA.__objc_data _OBJC_METACLASS_$_IMNotifyRecipientCommandPipelineParameter
|| __DATA.__objc_data _OBJC_METACLASS_$_IMNotifyRecipientCommandProcessingPipelineComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_IMPlayedReceiptPipelineParameter
|| __DATA.__objc_data _OBJC_METACLASS_$_IMPlayedReceiptProcessingPipelineComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_IMTextMessageAttributedStringContent
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDLocationSharingController._session
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageStore._cachedLastFailedMessageDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageStore._cachedUnreadMessageCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageStore._modificationStamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageStore._pendingDBUpdatePost
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageStore._suppressedUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageStore._suppressedUpdatesTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageSuppressionController._chatSuppressionFlagMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageSuppressionController._chatSuppressionTimerMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageSuppressionController._suppressedMessages
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._buddies
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._password
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._proxyAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._proxyHost
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._proxyPassword
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._proxyPort
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._proxyType
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._serverHost
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._serverPort
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._service
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._useSSL
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDeliveryReceiptProcessingPipelineComponent._messageStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMFindChatProcessingPipelineComponent._account
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMFindChatProcessingPipelineComponent._chatRegistry
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMarkUnreadRequestProcessingPipelineComponent._chatRegistry
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMarkUnreadRequestProcessingPipelineComponent._messageStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMarkUnreadRequestProcessingPipelineComponent._messageSuppressionController
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMarkUnreadRequestProcessingPipelineComponent._recents
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMarkUnreadRequestProcessingPipelineComponent._service
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMessageFromStoragePipelineComponent._broadcaster
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMessageFromStoragePipelineComponent._processingType
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMessageFromStoragePipelineComponent._service
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMessageFromStoragePipelineComponent._storageController
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMessageLegacyProcessingPipelineComponent._account
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMessageLegacyProcessingPipelineComponent._idsTrustedData
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMessageLegacyProcessingPipelineComponent._messageContext
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMMessageLegacyProcessingPipelineComponent._serviceSession
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMReadReceiptProcessingPipelineComponent._chatRegistry
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMReadReceiptProcessingPipelineComponent._messageStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMReadReceiptProcessingPipelineComponent._messageSuppressionController
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMReadReceiptProcessingPipelineComponent._recents
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMReadReceiptProcessingPipelineComponent._service
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMTextMessageProcessingPipelineComponent._account
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMTextMessageProcessingPipelineComponent._messageStore
|| __DATA_CONST.__const _CKRecordFileTransferAssetKey
|| __DATA_CONST.__const _CKRecordFileTransferAttachmentCompressedMetadataKey
|| __DATA_CONST.__const _CKRecordFileTransferAttachmentGuidKey
|| __DATA_CONST.__const _CKRecordFileTransferAttachmentMetadataKey
|| __DATA_CONST.__const _CKRecordFileTransferAttributionInfoKey
|| __DATA_CONST.__const _CKRecordFileTransferAuxVideoAssetKey
|| __DATA_CONST.__const _CKRecordFileTransferAuxVideoLastPathComponentKey
|| __DATA_CONST.__const _CKRecordFileTransferCreatedDateKey
|| __DATA_CONST.__const _CKRecordFileTransferFileNameKey
|| __DATA_CONST.__const _CKRecordFileTransferHideAttachmentKey
|| __DATA_CONST.__const _CKRecordFileTransferIncomingKey
|| __DATA_CONST.__const _CKRecordFileTransferIsStickerKey
|| __DATA_CONST.__const _CKRecordFileTransferLastPathComponentKey
|| __DATA_CONST.__const _CKRecordFileTransferStartDateKey
|| __DATA_CONST.__const _CKRecordFileTransferStateKey
|| __DATA_CONST.__const _CKRecordFileTransferStickerUserInfoKey
|| __DATA_CONST.__const _CKRecordFileTransferTotalBytesKey
|| __DATA_CONST.__const _CKRecordFileTransferTransferNameKey
|| __DATA_CONST.__const _CKRecordFileTransferTypeKey
|| __DATA_CONST.__const _CKRecordFileTransferUserInfoKey
|| __DATA_CONST.__const _CKRecordFileTransferVersionKey
|| __DATA_CONST.__const _CKRecordIMItemBalloonBundleID
|| __DATA_CONST.__const _CKRecordIMItemBody
|| __DATA_CONST.__const _CKRecordIMItemCompressedProtobuf
|| __DATA_CONST.__const _CKRecordIMItemCompressedProtobufP2
|| __DATA_CONST.__const _CKRecordIMItemCompressedProtobufP3
|| __DATA_CONST.__const _CKRecordIMItemErrorCode
|| __DATA_CONST.__const _CKRecordIMItemExpressiveSendStyleID
|| __DATA_CONST.__const _CKRecordIMItemFlags
|| __DATA_CONST.__const _CKRecordIMItemGUID
|| __DATA_CONST.__const _CKRecordIMItemParentChatID
|| __DATA_CONST.__const _CKRecordIMItemPayloadData
|| __DATA_CONST.__const _CKRecordIMItemService
|| __DATA_CONST.__const _CKRecordIMItemSubClassType
|| __DATA_CONST.__const _CKRecordIMItemSubject
|| __DATA_CONST.__const _CKRecordIMItemSummaryInfo
|| __DATA_CONST.__const _CKRecordIMItemTime
|| __DATA_CONST.__const _CKRecordIMItemTimeDelivered
|| __DATA_CONST.__const _CKRecordIMItemTimePlayed
|| __DATA_CONST.__const _CKRecordIMItemTimeRead
|| __DATA_CONST.__const _CKRecordIMItemUnencryptedTime
|| __DATA_CONST.__const _CKRecordIMMessageIncompatibleDeleteNotification
|| __DATA_CONST.__const _CKRecordKeyChatClientGroupID
|| __DATA_CONST.__const _CKRecordKeyChatDisplayName
|| __DATA_CONST.__const _CKRecordKeyChatGroupPhotoAsset
|| __DATA_CONST.__const _CKRecordKeyChatGuid
|| __DATA_CONST.__const _CKRecordKeyChatIdentifier
|| __DATA_CONST.__const _CKRecordKeyChatIsFiltered
|| __DATA_CONST.__const _CKRecordKeyChatLastAddressedHandle
|| __DATA_CONST.__const _CKRecordKeyChatOriginalGroupID
|| __DATA_CONST.__const _CKRecordKeyChatParticipants
|| __DATA_CONST.__const _CKRecordKeyChatProperties
|| __DATA_CONST.__const _CKRecordKeyChatProperties001
|| __DATA_CONST.__const _CKRecordKeyChatProperties001SyndicationDate
|| __DATA_CONST.__const _CKRecordKeyChatProperties001SyndicationType
|| __DATA_CONST.__const _CKRecordKeyChatReadWaterMark
|| __DATA_CONST.__const _CKRecordKeyChatService
|| __DATA_CONST.__const _CKRecordKeyChatState
|| __DATA_CONST.__const _CKRecordKeyChatStyle
|| __DATA_CONST.__const _CKRecordKeyChatSuccessFullQuery
|| __DATA_CONST.__const _CKRecordUpdateCompressedProtobuf
|| __DATA_CONST.__const _CKRecordUpdateType
|| __DATA_CONST.__const _IMAttachmentMetadataSyncCompleted
|| __DATA_CONST.__const _IMAttachmentSyncFailed
|| __DATA_CONST.__const _IMAttachmentSyncStarted
|| __DATA_CONST.__const _IMAttachmentSyncStoppedDueToDeviceConditions
|| __DATA_CONST.__const _IMBackUpCompletedRecently
|| __DATA_CONST.__const _IMBackUpNotCompletedRecently
|| __DATA_CONST.__const _IMBackupDisabledKeyroll
|| __DATA_CONST.__const _IMBackupDisabledKeyrollNotification
|| __DATA_CONST.__const _IMBackupDisabledKeyrollTestNotification
|| __DATA_CONST.__const _IMBackupDisabledSuccessfullKeyroll
|| __DATA_CONST.__const _IMBackupDisabledSuccessfullKeyrollNotification
|| __DATA_CONST.__const _IMBackupDisabledTestToggledKeyroll
|| __DATA_CONST.__const _IMBackupDisabledUserToggledKeyroll
|| __DATA_CONST.__const _IMChatSyncCompleted
|| __DATA_CONST.__const _IMCrashDuringFirstSync
|| __DATA_CONST.__const _IMDCKAllAliases
|| __DATA_CONST.__const _IMDCKBackupControllerErrorDomain
|| __DATA_CONST.__const _IMDCKBackupControllerServerBagTimeIntervalKey
|| __DATA_CONST.__const _IMDCKBackupControllerTimebombStartUserDefaultsKey
|| __DATA_CONST.__const _IMDCKBackupControllerUserDefaultsDomain
|| __DATA_CONST.__const _IMDCKBackupControllerWrittenQuotaRecordKey
|| __DATA_CONST.__const _IMDCKRecoverableMessageRecordDeleteDateKey
|| __DATA_CONST.__const _IMDCKRecoverableMessageRecordMessageGUIDKey
|| __DATA_CONST.__const _IMDCKSelectedAliases
|| __DATA_CONST.__const _IMDCKUtilitiesABCSubtype
|| __DATA_CONST.__const _IMDCKUtilitiesErrorDomain
|| __DATA_CONST.__const _IMDChatParticipantsDidChangeAddedParticipantsKey
|| __DATA_CONST.__const _IMDChatParticipantsDidChangeNotification
|| __DATA_CONST.__const _IMDChatParticipantsDidChangeRemovedParticipantsKey
|| __DATA_CONST.__const _IMDChatRegistryAddedChatNotification
|| __DATA_CONST.__const _IMDChatRegistryChatKey
|| __DATA_CONST.__const _IMDChatWasReportedAsJunkKey
|| __DATA_CONST.__const _IMDChatsLoadedNotification
|| __DATA_CONST.__const _IMDCommandChatGUIDKey
|| __DATA_CONST.__const _IMDCommandChatGroupIDKey
|| __DATA_CONST.__const _IMDDeleteCommandDeleteSubjectKey
|| __DATA_CONST.__const _IMDDeleteCommandIndexToRangeKey
|| __DATA_CONST.__const _IMDDeleteCommandIndexesKey
|| __DATA_CONST.__const _IMDDeleteCommandIsPermanentDeleteKey
|| __DATA_CONST.__const _IMDDeleteCommandMessageGUIDArrayKey
|| __DATA_CONST.__const _IMDDeleteCommandMessageGUIDKey
|| __DATA_CONST.__const _IMDDeleteCommandMessagePartMetadataArrayKey
|| __DATA_CONST.__const _IMDDeleteCommandRecoverableDeleteDateKey
|| __DATA_CONST.__const _IMDFileTransferAcceptedNotification
|| __DATA_CONST.__const _IMDFileTransferBatchAcceptedNotification
|| __DATA_CONST.__const _IMDFileTransferCreatedNotification
|| __DATA_CONST.__const _IMDFileTransferExplicitDownloadCompletedErrorKey
|| __DATA_CONST.__const _IMDFileTransferExplicitDownloadCompletedFileURLKey
|| __DATA_CONST.__const _IMDFileTransferExplicitDownloadCompletedNotification
|| __DATA_CONST.__const _IMDFileTransferExplicitDownloadCompletedSuccessKey
|| __DATA_CONST.__const _IMDFileTransferHighQualityDownloadCompletedFileURLKey
|| __DATA_CONST.__const _IMDFileTransferHighQualityDownloadCompletedNotification
|| __DATA_CONST.__const _IMDFileTransferHighQualityDownloadCompletedSuccessKey
|| __DATA_CONST.__const _IMDFileTransferHighQualityDownloadInitiatedNotification
|| __DATA_CONST.__const _IMDFileTransferRemovedNotification
|| __DATA_CONST.__const _IMDFileTransferStoppedNotification
|| __DATA_CONST.__const _IMDFileTransferUpdatedNotification
|| __DATA_CONST.__const _IMDManagedPreferencesChangedNotification
|| __DATA_CONST.__const _IMDMessagePTaskStoreAddedProcessingTask
|| __DATA_CONST.__const _IMDMessageStoreHandleCanonicalIDKey
|| __DATA_CONST.__const _IMDMessageStoreHandleCountryCodeKey
|| __DATA_CONST.__const _IMDMessageStoreHandleUnformattedIDKey
|| __DATA_CONST.__const _IMDPermanentDeleteCommandChatMetadataArrayKey
|| __DATA_CONST.__const _IMDRecoverCommandChatMetadataArrayKey
|| __DATA_CONST.__const _IMDRecoverableDeleteCommandChatMetadataArrayKey
|| __DATA_CONST.__const _IMDReplayControllerErrorDomain
|| __DATA_CONST.__const _IMDReplayMessageStorageControllerErrorDomain
|| __DATA_CONST.__const _IMDaemonWillShutdownNotification
|| __DATA_CONST.__const _IMDeletionSyncCompleted
|| __DATA_CONST.__const _IMFirstAttachmentSyncFailed
|| __DATA_CONST.__const _IMFirstAttachmentSyncInitiated
|| __DATA_CONST.__const _IMFirstChatSyncFailed
|| __DATA_CONST.__const _IMFirstMessageSyncFailed
|| __DATA_CONST.__const _IMFirstMessageSyncInitiated
|| __DATA_CONST.__const _IMFirstSyncCompleted
|| __DATA_CONST.__const _IMFirstSyncFailed
|| __DATA_CONST.__const _IMFirstSyncInitiated
|| __DATA_CONST.__const _IMFullChatSyncFailed
|| __DATA_CONST.__const _IMFullChatSyncStarted
|| __DATA_CONST.__const _IMFullSyncCompleted
|| __DATA_CONST.__const _IMFullSyncCompletedWithOver20HoursOfPowerAndWifi
|| __DATA_CONST.__const _IMFullSyncFailed
|| __DATA_CONST.__const _IMFullSyncInitiated
|| __DATA_CONST.__const _IMFullSyncInitiatedWithOver20HoursOfPowerAndWifi
|| __DATA_CONST.__const _IMInitialAttachmentSyncFailed
|| __DATA_CONST.__const _IMInitialAttachmentSyncInitiated
|| __DATA_CONST.__const _IMInitialChatSyncFailed
|| __DATA_CONST.__const _IMInitialChatSyncInitiated
|| __DATA_CONST.__const _IMInitialMessageSyncFailed
|| __DATA_CONST.__const _IMInitialMessageSyncInitiated
|| __DATA_CONST.__const _IMInitialSyncCompleted
|| __DATA_CONST.__const _IMInitialSyncInitiated
|| __DATA_CONST.__const _IMLastCKSyncWasNotWithin3Days
|| __DATA_CONST.__const _IMLastCKSyncWasNotWithin7Days
|| __DATA_CONST.__const _IMLastCKSyncWasWithin3Days
|| __DATA_CONST.__const _IMLastCKSyncWasWithin7Days
|| __DATA_CONST.__const _IMLastCompleteDBCKSyncWasNotWithin3Days
|| __DATA_CONST.__const _IMLastCompleteDBCKSyncWasNotWithin7Days
|| __DATA_CONST.__const _IMLastCompleteDBCKSyncWasWithin3Days
|| __DATA_CONST.__const _IMLastCompleteDBCKSyncWasWithin7Days
|| __DATA_CONST.__const _IMManateeIdentityFetchAttemptFullSync
|| __DATA_CONST.__const _IMManateeIdentityFetchAttemptFullSyncFailed
|| __DATA_CONST.__const _IMManateeIdentityFetchAttemptRestoreSync
|| __DATA_CONST.__const _IMManateeIdentityFetchAttemptRestoreSyncFailed
|| __DATA_CONST.__const _IMManateeNotAvailable
|| __DATA_CONST.__const _IMMaxRecoverableAttemptReached
|| __DATA_CONST.__const _IMMessageSyncFailed
|| __DATA_CONST.__const _IMMessageSyncStarted
|| __DATA_CONST.__const _IMMessageSyncStoppedDueToDeviceConditions
|| __DATA_CONST.__const _IMNotStartingCoreDuetSync
|| __DATA_CONST.__const _IMNotSyncDueToIMAuto
|| __DATA_CONST.__const _IMPCSIdentityWasLost
|| __DATA_CONST.__const _IMPendingKeyroll
|| __DATA_CONST.__const _IMPendingKeyrollNotification
|| __DATA_CONST.__const _IMPeriodicChatSyncCompleted
|| __DATA_CONST.__const _IMPeriodicChatSyncFailed
|| __DATA_CONST.__const _IMPeriodicChatSyncStarted
|| __DATA_CONST.__const _IMPostfixForOver20HoursOfPowerAndWiFi
|| __DATA_CONST.__const _IMPostingMissingMessageData
|| __DATA_CONST.__const _IMRecievedMissingMessageNotification
|| __DATA_CONST.__const _IMRestoredAllContentFromCloudKit
|| __DATA_CONST.__const _IMSyncCompletedInLast30Hours
|| __DATA_CONST.__const _IMSyncCompletedRecentlyCloudKitMetric
|| __DATA_CONST.__const _IMSyncDidNotCompleteRecentlyCloudKitMetric
|| __DATA_CONST.__const _IMSyncFullSyncDueToIMAutomaticHistoryDeletionAgent
|| __DATA_CONST.__const _IMSyncInProgressCloudKitMetric
|| __DATA_CONST.__const _IMSyncNoDueToCrash
|| __DATA_CONST.__const _IMSyncNoDueToFirstUnlock
|| __DATA_CONST.__const _IMSyncNoDueToPower
|| __DATA_CONST.__const _IMSyncNoDueToRecent
|| __DATA_CONST.__const _IMSyncNoDueToSyncing
|| __DATA_CONST.__const _IMSyncNoDueToWifi
|| __DATA_CONST.__const _IMSyncPreFlightZoneFetch
|| __DATA_CONST.__const _IMWriteSyncCompleted
|| __DATA_CONST.__const _kIMDAliasesPropertyKey
|| __DATA_CONST.__const _kIMDCKAnalyticBagKey
|| __DATA_CONST.__const _kIMDCKAnalyticDetailsBagKey
|| __DATA_CONST.__const _kIMDCKMetricBagKey
|| __DATA_CONST.__const _kIMUpdateType1InfoMessageIDKey
|| __DATA_CONST.__const _kIMUpdateType1InfoROWIDKey
|| __DATA_CONST.__const _kIMUpdateType1InfoThreadGUIDKey
|| __DATA_CONST.__const _kIMUpdateType1InfoThreadPartKey
|| __DATA_CONST.__const _kIMUpdateType2InfoMessageIDKey
|| __DATA_CONST.__const _kIMUpdateType2InfoROWIDKey
|| __DATA_CONST.__const _kIMUpdateType2InfoSyncedSyndicationRangesKey
|| __DATA_CONST.__const _kIMUpdateType2InfoSyndicationRangesKey
|| __DATA_CONST.__const _kIMUpdateTypeForType1
|| __DATA_CONST.__const _kIMUpdateTypeForType2
|| __DATA_DIRTY.__data _OBJC_METACLASS_$_IMDCallManager_Impl
|| __DATA_DIRTY.__data _OBJC_METACLASS_$_IMDClientConnectionManager
|| __DATA_DIRTY.__data _OBJC_METACLASS_$_IMDCollaborationNoticeStore
|| __DATA_DIRTY.__data _OBJC_METACLASS_$_IMDIncomingClientConnectionListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMBlastdoor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDAccountController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDAppleServiceSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDAttachmentStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDAvailabilityVerificationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDBadgeUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDBroadcastController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKAbstractSyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKAttachmentSyncCKOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKAttachmentSyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKBackupController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKCacheDeleteManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKChatSyncCKOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKChatSyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKDatabaseManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKExitManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKMessageSyncCKOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKMessageSyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKRampManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKRecordSaltManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKSyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKSyncState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCallManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCallManager_Impl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDChat
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDChatRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDChatStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDChatVocabularyUpdater
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDClientConnectionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDClientRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCollaborationNoticeController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCollaborationNoticeDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCollaborationNoticeRateLimiter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCollaborationNoticeStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDDaemonPropertyManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDExposureNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDFileTransferCenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDIDSAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDIDSService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDIncomingClientConnectionListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDInvocationForwarder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDLegactDTController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDLocalDaemon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDLocationSharingController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageActiveDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageFromStorageController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageHistoryCKChatSyncTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageHistorySyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageHistorySyncTaskLiveFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessagePTaskXPCStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageProcessingController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageSuppressionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDNicknameController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDNotificationResponseUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDOneTimeCodeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDQuickSwitchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDRecentsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDRecordZoneManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDReplayController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDReplayStorageController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDServiceController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDServiceSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDSoundUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDSpamController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDSpamMessageCreator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDStickerRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDXPCEventStreamHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDeliveryReceiptPipelineParameter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDeliveryReceiptProcessingPipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDiMessageIDSDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDiMessageIDSDelegateHandlerRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDiMessageIDSTrustedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDiMessageIncomingMessageHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDiMessagePipelineResources
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMFindChatProcessingPipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMMessageFromStoragePipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMMessageLegacyProcessingPipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMMessageMomentShareProcessingPipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMReadReceiptPipelineParameter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMReadReceiptProcessingPipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMTextMessagePipelineParameter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMTextMessageProcessingPipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMBlastdoor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDAccountController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDAppleServiceSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDAttachmentStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDAvailabilityVerificationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDBadgeUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDBroadcastController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKAbstractSyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKAttachmentSyncCKOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKAttachmentSyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKBackupController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKCacheDeleteManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKChatSyncCKOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKChatSyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKDatabaseManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKExitManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKMessageSyncCKOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKMessageSyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKRampManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKRecordSaltManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKSyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKSyncState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCallManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDChat
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDChatRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDChatStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDChatVocabularyUpdater
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDClientRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCollaborationNoticeController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCollaborationNoticeDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCollaborationNoticeRateLimiter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDDaemonPropertyManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDExposureNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDFileTransferCenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDIDSAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDIDSService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDInvocationForwarder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDLegactDTController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDLocalDaemon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDLocationSharingController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageActiveDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageFromStorageController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageHistoryCKChatSyncTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageHistorySyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageHistorySyncTaskLiveFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessagePTaskXPCStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageProcessingController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageSuppressionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDNicknameController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDNotificationResponseUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDOneTimeCodeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDQuickSwitchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDRecentsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDRecordZoneManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDReplayController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDReplayStorageController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDServiceController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDServiceSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDSoundUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDSpamController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDSpamMessageCreator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDStickerRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDXPCEventStreamHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDeliveryReceiptPipelineParameter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDeliveryReceiptProcessingPipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDiMessageIDSDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDiMessageIDSDelegateHandlerRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDiMessageIDSTrustedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDiMessageIncomingMessageHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDiMessagePipelineResources
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMFindChatProcessingPipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMMessageFromStoragePipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMMessageLegacyProcessingPipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMMessageMomentShareProcessingPipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMReadReceiptPipelineParameter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMReadReceiptProcessingPipelineComponent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMTextMessagePipelineParameter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMTextMessageProcessingPipelineComponent
|| __TEXT.__const _IMDChatPrecacheCountClientRecent
|| __TEXT.__const _IMDChatPrecacheCountClientVeryRecent
|| __TEXT.__const _IMDChatPrecacheCountDaemonFiltered
|| __TEXT.__const _IMDChatPrecacheCountDaemonKnown
|| __TEXT.__const _kIMDCKClientVersion
|| __TEXT.__const _kMaxCloudKitRetries
|| __TEXT.__text _IMDAttachmentRecordRefFromIMFileTransfer
|| __TEXT.__text _IMDCreateIMMessageItemFromIMDMessageRecordLoadAttachmentIfNeededRef
|| __TEXT.__text _IMDCreateIMMessageItemFromIMDMessageRecordRef
|| __TEXT.__text _IMDCreateWorkloop
|| __TEXT.__text _IMDInconsistencyResolved
|| __TEXT.__text _IMDNoticedInconsistency
|| __TEXT.__text _IMDSetInconsistencyHandler
|| __TEXT.__text _IMDSynchronouslyPerformBlockOnMainQueueWithDependency
|| __TEXT.__text _IMDUpdateIMFileTransferFromIMFileTransfer
|| __TEXT.__text _IMDaemonCoreBundle
|| __TEXT.__text _IMFileTransferFromIMDAttachmentRecordRef
|| __TEXT.__text _IMItemFuzzDateForUnencryptedTime
|| __TEXT.__text _NSStringFromIMDCKAccountStatus
|| __TEXT.__text _NSStringFromIMDCKBackupControllerResult
|| __TEXT.__text __IMCreatePredicateWithDeviceUDIDAndDeviceUUID
|| __TEXT.__text __IMDHashParticipants
|| __TEXT.__text __IMDShouldSaveAttachment
|| __TEXT.__text __IMDShouldSaveAttachmentStoreAtExternalLocation
__ Accounts: _kAccountDataclassBackup
__ Accounts: _kAccountDataclassMessages
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ AudioToolbox: _AudioServicesCreateSystemSoundID
__ AudioToolbox: _AudioServicesDisposeSystemSoundID
__ AudioToolbox: _AudioServicesPlaySystemSound
__ AudioToolbox: _AudioServicesSetProperty
__ BiomeStreams: _OBJC_CLASS_$_BMReadMessageEvent
__ BiomeStreams: _OBJC_CLASS_$_BMStreams
__ BlastDoor: _MBDIMFileTransferAttributeName
__ BlastDoor: _MBDIMLivePhotoAttributeName
__ BlastDoor: _OBJC_CLASS_$_BlastDoorBaseWritingDirectionAttribute
__ BlastDoor: _OBJC_CLASS_$_BlastDoorBreadcrumbTextMarkerAttribute
__ BlastDoor: _OBJC_CLASS_$_BlastDoorBreadcrumbTextOptionFlagsAttribute
__ BlastDoor: _OBJC_CLASS_$_BlastDoorFileTransferAttribute
__ BlastDoor: _OBJC_CLASS_$_BlastDoorMentionAttribute
__ BlastDoor: _OBJC_CLASS_$_BlastDoorMessagePartAttribute
__ CacheDelete: _CacheDeleteEnumerateRemovedFiles
__ CacheDelete: _CacheDeleteInitPurgeMarker
__ CacheDelete: _CacheDeleteRegisterInfoCallbacks
__ CacheDelete: _CacheDeleteRegisterPurgeNotification
__ CacheDelete: _CacheDeleteRequestCacheableSpaceGuidance
__ CacheDelete: _CacheDeleteSyncDone
__ CloudKit: _CKAccountChangedNotification
__ CloudKit: _CKCanRetryForError
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKErrorRetryAfterKey
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _CKRecordChangedErrorServerRecordKey
__ CloudKit: _OBJC_CLASS_$_CKAsset
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKContainerID
__ CloudKit: _OBJC_CLASS_$_CKContainerOptions
__ CloudKit: _OBJC_CLASS_$_CKDatabase
__ CloudKit: _OBJC_CLASS_$_CKFetchArchivedRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchArchivedRecordsOptions
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesConfiguration
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchUserQuotaOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKNotification
__ CloudKit: _OBJC_CLASS_$_CKOperationConfiguration
__ CloudKit: _OBJC_CLASS_$_CKOperationGroup
__ CloudKit: _OBJC_CLASS_$_CKQuery
__ CloudKit: _OBJC_CLASS_$_CKQueryOperation
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneSubscription
__ CloudKit: _OBJC_CLASS_$_CKServerChangeToken
__ CloudKit: _OBJC_METACLASS_$_CKDatabase
__ CloudKit: _kCKIdentityUpdateNotificationKey
__ CommonUtilities: _OBJC_CLASS_$_CUTWeakReference
__ Contacts: _CNContactStoreDidChangeNotification
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSPersistentContainer
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreDescription
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFMakeCollectable
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterPostNotificationWithOptions
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyKeyList
__ CoreFoundation: _CFPreferencesCopyMultiple
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesFlushCaches
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetMultiple
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFUserNotificationDisplayAlert
__ CoreFoundation: _CFUserNotificationDisplayNotice
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreServices: _OBJC_CLASS_$_LSAppLink
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ ExposureNotification: _OBJC_CLASS_$_ENManager
__ FTServices: _OBJC_CLASS_$_FTDeviceSupport
__ FTServices: _OBJC_CLASS_$_FTPasswordManager
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileSize
__ Foundation: _NSFileType
__ Foundation: _NSFileTypeDirectory
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ IDS: _IDSCheckiMessageUnknownSender
__ IDS: _IDSCopyAddressDestinationForDestination
__ IDS: _IDSCopyBestGuessIDForID
__ IDS: _IDSCopyIDForEmailAddress
__ IDS: _IDSCopyIDForPhoneNumberWithOptions
__ IDS: _IDSCopyRawAddressForDestination
__ IDS: _IDSReportiMessageSpam
__ IDS: _IDSSendMessageOptionAlwaysSkipSelfKey
__ IDS: _IDSServiceNameFaceTime
__ IDS: _IDSServiceNameiMessage
__ IDS: _IDSServiceNameiMessageForBusiness
__ IDS: _OBJC_CLASS_$_IDSAccount
__ IDS: _OBJC_CLASS_$_IDSAccountController
__ IDS: _OBJC_CLASS_$_IDSIDQueryController
__ IDS: _OBJC_CLASS_$_IDSService
__ IDS: _OBJC_CLASS_$_IDSTransactionLogMessage
__ IDS: _OBJC_CLASS_$_IDSTransactionLogSyncTask
__ IDSFoundation: _IDSCommandKey
__ IDSFoundation: _IDSDefaultPairedDevice
__ IDSFoundation: _IDSGetUUIDData
__ IDSFoundation: _IDSIncomingMessageDecryptedDataKey
__ IDSFoundation: _IDSIncomingMessageOriginalEncryptionTypeKey
__ IDSFoundation: _IDSIncomingMessagePushPayloadKey
__ IDSFoundation: _IDSOriginalCommandKey
__ IDSFoundation: _OBJC_CLASS_$_IDSProtobuf
__ IDSFoundation: _OBJC_CLASS_$_IDSServerBag
__ IDSFoundation: __IDSCopyCallerID
__ IDSFoundation: _kIDSServiceDefaultsAliasKey
__ IDSFoundation: _kIDSServiceDefaultsAliasStatusKey
__ IDSFoundation: _kIDSServiceDefaultsDisplayNameKey
__ IDSFoundation: _kIDSServiceDefaultsLoginAsKey
__ IDSFoundation: _kIDSServiceDefaultsSentinelAlias
__ IDSKVStore: _OBJC_CLASS_$_IDSKVStore
__ IMCorePipeline: _IMCoreBlastdoorErrorDomain
__ IMCorePipeline: _IMCoreReceivePipelineErrorDomain
__ IMCorePipeline: _OBJC_CLASS_$_IMPipelineComponent
__ IMCorePipeline: _OBJC_CLASS_$_IMPromise
__ IMCorePipeline: _OBJC_METACLASS_$_IMPipelineComponent
__ IMDMessageServices: _IMDMessageServicesExpireStateKey
__ IMDMessageServices: _IMDMessageServicesExpireStateShouldDeleteKey
__ IMDMessageServices: _IMDMessageServicesFlagsKey
__ IMDMessageServices: _IMDMessageServicesServiceKey
__ IMDMessageServices: _IMDMessageServicesUpdateDowngradePropertiesKey
__ IMDMessageServices: _IMDMessageServicesWatchdogShouldFailSendKey
__ IMDMessageServices: _OBJC_CLASS_$_IMDMessageServicesCenter
__ IMDPersistence: _IMDAddIncompatibleGroupPhotoChangedMessagesToDeleteFromCloudKit
__ IMDPersistence: _IMDAreAllAliasesUnknown
__ IMDPersistence: _IMDAttachmentCopyRecordIDsToDeleteAfterRowWithLimit
__ IMDPersistence: _IMDAttachmentMarkAllFailedAttachmentsAsNeedingSync
__ IMDPersistence: _IMDAttachmentRecordBulkUpdate
__ IMDPersistence: _IMDAttachmentRecordClearDeleteTombStones
__ IMDPersistence: _IMDAttachmentRecordCopyAttachmentForGUID
__ IMDPersistence: _IMDAttachmentRecordCopyAttachmentForGUIDIsLegacyGUID
__ IMDPersistence: _IMDAttachmentRecordCopyAttachmentGUIDsAndPathsForChatIdentifiersOnServices
__ IMDPersistence: _IMDAttachmentRecordCopyAttachmentsForQueryWithLimit
__ IMDPersistence: _IMDAttachmentRecordCopyAttachmentsToMetricForDiskSpace
__ IMDPersistence: _IMDAttachmentRecordCopyAttachmentsToPurgeForDiskSpace
__ IMDPersistence: _IMDAttachmentRecordCopyFilename
__ IMDPersistence: _IMDAttachmentRecordCopyMessageForAttachmentGUID
__ IMDPersistence: _IMDAttachmentRecordCopyPurgedAttachmentsCountForChatIdentifiersOnServices
__ IMDPersistence: _IMDAttachmentRecordCopyPurgedAttachmentsForChatIdentifiersOnServices
__ IMDPersistence: _IMDAttachmentRecordCreate
__ IMDPersistence: _IMDAttachmentRecordDeleteAttachmentForGUID
__ IMDPersistence: _IMDAttachmentRecordDeleteTombStonedAttachmentsWithRecordIDs
__ IMDPersistence: _IMDAttachmentRecordGetPurgeableDiskSpace
__ IMDPersistence: _IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync
__ IMDPersistence: _IMDAttachmentRecordMarkAttachmentWithROWIDAsFailedToUploadToCloudKit
__ IMDPersistence: _IMDAttachmentRecordMarkAttachmentWithROWIDAsSyncedWithCloudKit
__ IMDPersistence: _IMDAttachmentRecordRowIDForGUID
__ IMDPersistence: _IMDAttachmentRecordUpdateAttachmentGUIDWithGUID
__ IMDPersistence: _IMDAttachmentUpdateAttachmentFileSizeWithRowIDGreaterThanWatermark
__ IMDPersistence: _IMDCNPersonNotFound
__ IMDPersistence: _IMDCNRecordIDAndHistoryTokenForAliases
__ IMDPersistence: _IMDCNRecordIDAndHistoryTokenForAliasesWithCompletionHandler
__ IMDPersistence: _IMDCNRecordIDForAliases
__ IMDPersistence: _IMDCanDowngradeDatabaseToVersion
__ IMDPersistence: _IMDChatClearPendingDeleteChatsTable
__ IMDPersistence: _IMDChatCopyChatRecordIDsAndGUIDsToDeleteWithLimit
__ IMDPersistence: _IMDChatInsertIntoDeletedChatsTable
__ IMDPersistence: _IMDChatRecordAddHandle
__ IMDPersistence: _IMDChatRecordAssociateMessageWithGUIDToChatWithGUIDIfNeeded
__ IMDPersistence: _IMDChatRecordBulkUpdate
__ IMDPersistence: _IMDChatRecordCachedUnreadCount
__ IMDPersistence: _IMDChatRecordCopyAllActiveChatsProgressivelyWithLimitAndBlock
__ IMDPersistence: _IMDChatRecordCopyAllActiveChatsWithLimitAndBlock
__ IMDPersistence: _IMDChatRecordCopyCachedLastMessage
__ IMDPersistence: _IMDChatRecordCopyChatForGUID
__ IMDPersistence: _IMDChatRecordCopyChatsWithGroupID
__ IMDPersistence: _IMDChatRecordCopyChatsWithHandleOnService
__ IMDPersistence: _IMDChatRecordCopyChatsWithIdentifierOnService
__ IMDPersistence: _IMDChatRecordCopyChatsWithRoomnameOnService
__ IMDPersistence: _IMDChatRecordCopyDisplayName
__ IMDPersistence: _IMDChatRecordCopyGUID
__ IMDPersistence: _IMDChatRecordCopyHandles
__ IMDPersistence: _IMDChatRecordCopyMessagesWithLimit
__ IMDPersistence: _IMDChatRecordCopyNewestChatForGroupIDOnService
__ IMDPersistence: _IMDChatRecordCopyRecentChatsWithLimit
__ IMDPersistence: _IMDChatRecordCreate
__ IMDPersistence: _IMDChatRecordDeleteChatForGUID
__ IMDPersistence: _IMDChatRecordDisassociateMessageWithGUIDFromChatWithGUIDIfNeeded
__ IMDPersistence: _IMDChatRecordGetIdentifier
__ IMDPersistence: _IMDChatRecordLastMessageTimeStampOnLoad
__ IMDPersistence: _IMDChatRecordRemoveHandle
__ IMDPersistence: _IMDChatRecordRepairDuplicateChats
__ IMDPersistence: _IMDChatRecordSetIsArchived
__ IMDPersistence: _IMDChatRecordSetIsBlackholed
__ IMDPersistence: _IMDChatRecordSetIsFiltered
__ IMDPersistence: _IMDChatRemapMessagesWithErrorCodeToErrorCode
__ IMDPersistence: _IMDCopyAttachmentPersistentPath
__ IMDPersistence: _IMDCoreSpotlightAddChatGUID
__ IMDPersistence: _IMDCoreSpotlightAddMessageGUID
__ IMDPersistence: _IMDCoreSpotlightDeleteMessageGUIDS
__ IMDPersistence: _IMDCoreSpotlightReindexMessages
__ IMDPersistence: _IMDCoreSpotlightReindexMessagesWithCollaborationMetadata
__ IMDPersistence: _IMDCoreSpotlightSetNeedsMessageReindex
__ IMDPersistence: _IMDCreateIMDMessageRecordRefFromIMMessageItem
__ IMDPersistence: _IMDCreateIMItemFromIMDMessageRecordRefCopyAttachmentsIfNeededWithAccountLookup
__ IMDPersistence: _IMDDataDectorDictionaryForMessageItem
__ IMDPersistence: _IMDDatabaseDelete
__ IMDPersistence: _IMDDowngradeDatabaseToVersion
__ IMDPersistence: _IMDHandleRecordBulkUpdate
__ IMDPersistence: _IMDHandleRecordCopyCountry
__ IMDPersistence: _IMDHandleRecordCopyHandleForIDOnService
__ IMDPersistence: _IMDHandleRecordCopyID
__ IMDPersistence: _IMDHandleRecordCopyPersonCentricID
__ IMDPersistence: _IMDHandleRecordCopyUncanonicalizedID
__ IMDPersistence: _IMDHandleRecordCreate
__ IMDPersistence: _IMDHandleRecordGetIdentifier
__ IMDPersistence: _IMDIsFavoritedContact
__ IMDPersistence: _IMDKVPersistValueForKey
__ IMDPersistence: _IMDKVValueForKey
__ IMDPersistence: _IMDMessagePTaskDeleteAllCompletedTask
__ IMDPersistence: _IMDMessagePTaskInsertRow
__ IMDPersistence: _IMDMessagePTaskSelectWithLimit
__ IMDPersistence: _IMDMessagePTaskUpdateTaskFlagsForGUID
__ IMDPersistence: _IMDMessageRecordAddGUIDAndCKRecordIDToDeleteFromCloudKit
__ IMDPersistence: _IMDMessageRecordAssociateMessageWithGUIDToAttachmentWithGUID
__ IMDPersistence: _IMDMessageRecordCalculateLocalCloudKitStatistics
__ IMDPersistence: _IMDMessageRecordChatForMessageGUID
__ IMDPersistence: _IMDMessageRecordClearDeleteTombStones
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticAllSyncedCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticSyncedAttachmentCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticSyncedChatCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticSyncedMessageCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticTotalAttachmentCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticTotalChatCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticTotalCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticTotalMessageCountKey
__ IMDPersistence: _IMDMessageRecordCopyAndMarkAsReadMessagesPriorToGuidMatchingChatGUIDs
__ IMDPersistence: _IMDMessageRecordCopyArrayOfAssociatedMessagesForMessageGUIDFromSender
__ IMDPersistence: _IMDMessageRecordCopyChats
__ IMDPersistence: _IMDMessageRecordCopyChatsForMessageIdentifier
__ IMDPersistence: _IMDMessageRecordCopyFrequentRepliesForChatIdentifiersOnServicesUpToLimit
__ IMDPersistence: _IMDMessageRecordCopyGUIDForMessage
__ IMDPersistence: _IMDMessageRecordCopyGUIDsForMessagesWithChatIdentifiersOnServices
__ IMDPersistence: _IMDMessageRecordCopyMessageActionItemsForOriginalMessageGUID
__ IMDPersistence: _IMDMessageRecordCopyMessageForGUID
__ IMDPersistence: _IMDMessageRecordCopyMessageMatchingBodyStringWithChatIdentifiersServicesSkippingGUIDs
__ IMDPersistence: _IMDMessageRecordCopyMessageMatchingBodyStringWithHandleSkippingServicesSkippingGUIDs
__ IMDPersistence: _IMDMessageRecordCopyMessageWithHandleOnServiceWithReplaceID
__ IMDPersistence: _IMDMessageRecordCopyMessagesForAssociatedGUID
__ IMDPersistence: _IMDMessageRecordCopyMessagesForGUIDs
__ IMDPersistence: _IMDMessageRecordCopyMessagesPendingUpdateT1ToCloudKitWithLimit
__ IMDPersistence: _IMDMessageRecordCopyMessagesPendingUpdateT2ToCloudKitWithLimit
__ IMDPersistence: _IMDMessageRecordCopyMessagesToUploadToCloudKitWithLimit
__ IMDPersistence: _IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUIDWithOptionalThreadIdentifier
__ IMDPersistence: _IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesUpToGUIDOrLimitWithOptionalThreadIdentifier
__ IMDPersistence: _IMDMessageRecordCopyMessagesWithReplyToGUIDs
__ IMDPersistence: _IMDMessageRecordCopyRecordIDsAndGUIDsToDeleteWithLimit
__ IMDPersistence: _IMDMessageRecordCopyUnreadIncomingMessagesWithChatIdentifiersOnServicesToLimitFallbackGUID
__ IMDPersistence: _IMDMessageRecordCountAllUnreadMessages
__ IMDPersistence: _IMDMessageRecordCountAllUnreadMessagesForChatGUID
__ IMDPersistence: _IMDMessageRecordCountAllUnreadMessagesForChatRowID
__ IMDPersistence: _IMDMessageRecordDeleteMessagesForGUIDs
__ IMDPersistence: _IMDMessageRecordDeleteMessagesWithGUIDsChatIdentifiersOnServices
__ IMDPersistence: _IMDMessageRecordDeleteTombStonedMessagesWithRecordIDs
__ IMDPersistence: _IMDMessageRecordGetMessagesSequenceNumber
__ IMDPersistence: _IMDMessageRecordLastFailedMessageDate
__ IMDPersistence: _IMDMessageRecordLastSyncedMessageRowID
__ IMDPersistence: _IMDMessageRecordMarkAllMessagesAsNeedingCloudKitSync
__ IMDPersistence: _IMDMessageRecordMarkAllUnsuccessFullSyncMessagesAsNeedingSync
__ IMDPersistence: _IMDMessageRecordMarkFailedAllUnsentUnfailedMessages
__ IMDPersistence: _IMDMessageRecordMarkMessageGUIDAsDeduplicated
__ IMDPersistence: _IMDMessageRecordMarkMessageGUIDUnread
__ IMDPersistence: _IMDMessageRecordMarkMessageWithROWIDAsIgnoreButNeedingSyncWithCloudKit
__ IMDPersistence: _IMDMessageRecordMarkMessageWithROWIDAsSyncedWithCloudKit
__ IMDPersistence: _IMDMessageRecordUnassociateMessageWithGUIDFromAttachmentWithGUID
__ IMDPersistence: _IMDNotificationsPostNotificationsWithContext
__ IMDPersistence: _IMDNotificationsPostUrgentNotificationsForMessages
__ IMDPersistence: _IMDNotificationsRetractNotificationsForReadMessages
__ IMDPersistence: _IMDNotificationsRetractNotificationsFromFirstUnlockWithContext
__ IMDPersistence: _IMDNotificationsUpdatePostedNotificationsForMessages
__ IMDPersistence: _IMDReadDeviceState
__ IMDPersistence: _IMDRegisterReconnectBlockWithIdentifier
__ IMDPersistence: _IMDSMSRecordIsFull
__ IMDPersistence: _IMDSMSRecordStoreGetSchema
__ IMDPersistence: _IMDSMSRecordStoreGetSchemaVersion
__ IMDPersistence: _IMDSMSRecordStoreSave
__ IMDPersistence: _IMDSavedDeviceStateDateKey
__ IMDPersistence: _IMDSavedDeviceStateDidMigrateFromDifferentDeviceKey
__ IMDPersistence: _IMDSavedDeviceStateDidRestoreFromBackupKey
__ IMDPersistence: _IMDSavedDeviceStateDidRestoreFromCloudBackupKey
__ IMDPersistence: _IMDSavedDeviceStateIsMigratingKey
__ IMDPersistence: _IMDSystemMigrationOccurred
__ IMDPersistence: _IMDTrimSharedDatabaseToMessageCount
__ IMDPersistence: _IMDUpdateIMItemWithIMItemForceReplace
__ IMDPersistence: _IMDUpdateIMMessageItemWithIMMessageItemForceReplaceReplaceError
__ IMDPersistence: _IMNotificationContextActiveAccountAliasesKey
__ IMDPersistence: _OBJC_CLASS_$_IMDChatRecordBatchFetcher
__ IMDPersistence: _OBJC_CLASS_$_IMDDatabase
__ IMDPersistence: _OBJC_CLASS_$_IMDMessageRecord
__ IMDPersistence: _OBJC_CLASS_$_IMDMessageRecordBatchFetcher
__ IMDPersistence: _OBJC_CLASS_$_IMDPersistentAttachmentController
__ IMDPersistence: __IMDAttachmentRecordBulkCopy
__ IMDPersistence: __IMDChatRecordBulkCopy
__ IMDPersistence: _kAliasTOCNIDMapAliasKey
__ IMDPersistence: _kAliasTOCNIDMapHistoryTokenKey
__ IMDPersistence: _kMaxTransfersPerMessage
__ IMFoundation: _FZServicePropertyAlwaysActive
__ IMFoundation: _FZServicePropertyAlwaysLoggedIn
__ IMFoundation: _FZServicePropertyAlwaysOneAccountExists
__ IMFoundation: _FZServicePropertyCreateAccountsActive
__ IMFoundation: _FZServicePropertyDefaultBuddyListDescription
__ IMFoundation: _FZServicePropertyDisallowDeactivation
__ IMFoundation: _FZServicePropertyIDSBased
__ IMFoundation: _FZServicePropertyIgnoresNetworkConnectivity
__ IMFoundation: _FZServicePropertyInternalName
__ IMFoundation: _FZServicePropertyLocalizableDomain
__ IMFoundation: _FZServicePropertyLoginRequired
__ IMFoundation: _FZServicePropertyName
__ IMFoundation: _FZServicePropertyOldInternalName
__ IMFoundation: _FZServicePropertyPasswordRequired
__ IMFoundation: _FZServicePropertyProtocolVersion
__ IMFoundation: _FZServicePropertyServerHostRequired
__ IMFoundation: _FZServicePropertySessionClassName
__ IMFoundation: _FZServicePropertyShortName
__ IMFoundation: _FZServicePropertySingleAccount
__ IMFoundation: _FZServicePropertySubServiceName
__ IMFoundation: _FZServicePropertySupportsAuthorization
__ IMFoundation: _FZServicePropertySupportsDBStorage
__ IMFoundation: _FZServicePropertySupportsMutableGroupChatParticipants
__ IMFoundation: _FZServicePropertySupportsOneSessionForAllAccounts
__ IMFoundation: _FZServicePropertySupportsPresence
__ IMFoundation: _FZServicePropertySupportsRegistration
__ IMFoundation: _FZServicePropertyWantsNullHostReachability
__ IMFoundation: _IMBaseWritingDirectionAttributeName
__ IMFoundation: _IMBreadcrumbTextMarkerAttributeName
__ IMFoundation: _IMBreadcrumbTextOptionFlags
__ IMFoundation: _IMCallMonitorCallStatusChanged
__ IMFoundation: _IMCanonicalizeFormattedString
__ IMFoundation: _IMChatErrorDomain
__ IMFoundation: _IMCleanupPhoneNumber
__ IMFoundation: _IMComponentsFromChatGUID
__ IMFoundation: _IMCopyGUIDForChat
__ IMFoundation: _IMCountryCodeForIncomingTextMessage
__ IMFoundation: _IMCountryCodeForNumber
__ IMFoundation: _IMCreateSuperFormatStringWithAppendedFileTransfers
__ IMFoundation: _IMDDScanAttributedStringWithExtendedContext
__ IMFoundation: _IMDispatchForNotify
__ IMFoundation: _IMFileLocationTrimFileName
__ IMFoundation: _IMFileTransferGUIDAttributeName
__ IMFoundation: _IMFormatPhoneNumber
__ IMFoundation: _IMGetAppBoolForKey
__ IMFoundation: _IMGetAppIntForKey
__ IMFoundation: _IMGetAppValueForKey
__ IMFoundation: _IMGetAssertionFailureHandler
__ IMFoundation: _IMGetCachedDomainBoolForKey
__ IMFoundation: _IMGetCachedDomainBoolForKeyWithDefaultValue
__ IMFoundation: _IMGetCachedDomainIntForKeyWithDefaultValue
__ IMFoundation: _IMGetCachedDomainValueForKey
__ IMFoundation: _IMGetDomainBoolForKey
__ IMFoundation: _IMGetDomainBoolForKeyWithDefaultValue
__ IMFoundation: _IMGetDomainIntForKey
__ IMFoundation: _IMGetDomainValueForKey
__ IMFoundation: _IMLinkAttributeName
__ IMFoundation: _IMLogBacktrace
__ IMFoundation: _IMLogExceptionBacktrace
__ IMFoundation: _IMLogSimulateCrashForException
__ IMFoundation: _IMLogSimulateCrashForProcess
__ IMFoundation: _IMMessagePartAttributeName
__ IMFoundation: _IMNetworkChangedNotification
__ IMFoundation: _IMOSLoggingEnabled
__ IMFoundation: _IMRemoveAppValueForKey
__ IMFoundation: _IMSetAppValueForKey
__ IMFoundation: _IMSetDomainBoolForKey
__ IMFoundation: _IMSetDomainIntForKey
__ IMFoundation: _IMSetDomainValueForKey
__ IMFoundation: _IMSetKeychainPassword
__ IMFoundation: _IMSingleObjectArray
__ IMFoundation: _IMStringIsBusinessID
__ IMFoundation: _IMStringIsEmail
__ IMFoundation: _IMStringIsEmpty
__ IMFoundation: _IMStringIsPhoneNumber
__ IMFoundation: _IMStripLoginID
__ IMFoundation: _IMTimingStartTimingForKey
__ IMFoundation: _IMTimingStopTimingForKey
__ IMFoundation: _IMWeakLinkClass
__ IMFoundation: _IMWeakLinkSymbol
__ IMFoundation: _JWDecodeCodableObjectWithStandardAllowlist
__ IMFoundation: _JWDecodeDictionary
__ IMFoundation: _JWEncodeCodableObject
__ IMFoundation: _JWEncodeDictionary
__ IMFoundation: _JWUUIDPushObjectToString
__ IMFoundation: _OBJC_CLASS_$_IMCallMonitor
__ IMFoundation: _OBJC_CLASS_$_IMConnectionMonitor
__ IMFoundation: _OBJC_CLASS_$_IMFileCopier
__ IMFoundation: _OBJC_CLASS_$_IMFileManager
__ IMFoundation: _OBJC_CLASS_$_IMLockdownManager
__ IMFoundation: _OBJC_CLASS_$_IMMultiQueue
__ IMFoundation: _OBJC_CLASS_$_IMPowerAssertion
__ IMFoundation: _OBJC_CLASS_$_IMRGLog
__ IMFoundation: _OBJC_CLASS_$_IMSystemMonitor
__ IMFoundation: _OBJC_CLASS_$_IMSystemProxySettingsFetcher
__ IMFoundation: _OBJC_CLASS_$_IMTimer
__ IMFoundation: _OBJC_CLASS_$_IMTimingCollection
__ IMFoundation: _OBJC_CLASS_$_IMUserDefaults
__ IMFoundation: _OBJC_CLASS_$_IMUserNotification
__ IMFoundation: _OBJC_CLASS_$_IMUserNotificationCenter
__ IMFoundation: _OBJC_CLASS_$_NetworkChangeNotifier
__ IMFoundation: _OSLogHandleForIMEventCategory
__ IMFoundation: _OSLogHandleForIMFoundationCategory
__ IMFoundation: _TemporaryTransfersPath
__ IMFoundation: __IMAlwaysLog
__ IMFoundation: __IMStringFromFZCapabilities
__ IMFoundation: __IMWarn
__ IMFoundation: __IMWillLog
__ IMFoundation: _im_dispatch_after
__ IMFoundation: _kFZAppBundleIdentifier
__ IMFoundation: _kFZChatParticipantStatusKey
__ IMFoundation: _kFZChatPropertyAutoDowngradedMessageCount
__ IMFoundation: _kFZChatPropertyLastDowngradedMessageTime
__ IMFoundation: _kFZChatPropertyManuallyDowngradedMessageCount
__ IMFoundation: _kFZDaemonPropertyOfflineAtQuit
__ IMFoundation: _kFZJoinBlobChatProperty
__ IMFoundation: _kFZListenerCapChats
__ IMFoundation: _kFZOldServiceDefaultsDomain
__ IMFoundation: _kFZPersonCountryCode
__ IMFoundation: _kFZPersonID
__ IMFoundation: _kFZPersonPersonCentricID
__ IMFoundation: _kFZPersonUnformattedName
__ IMFoundation: _kFZServiceDefaultsAccountStatusKey
__ IMFoundation: _kFZServiceDefaultsAccountsKey
__ IMFoundation: _kFZServiceDefaultsAccountsToImport
__ IMFoundation: _kFZServiceDefaultsActiveAccountsKey
__ IMFoundation: _kFZServiceDefaultsAliasesKey
__ IMFoundation: _kFZServiceDefaultsAutoLoginKey
__ IMFoundation: _kFZServiceDefaultsChatsPersistAtLogoutKey
__ IMFoundation: _kFZServiceDefaultsDisplayNameKey
__ IMFoundation: _kFZServiceDefaultsDomain
__ IMFoundation: _kFZServiceDefaultsLoggedInAccountsKey
__ IMFoundation: _kFZServiceDefaultsLoginAsKey
__ IMFoundation: _kFZServiceDefaultsManagedAccountKey
__ IMFoundation: _kFZServiceDefaultsProxyHostKey
__ IMFoundation: _kFZServiceDefaultsProxyPortKey
__ IMFoundation: _kFZServiceDefaultsProxyProtocolKey
__ IMFoundation: _kFZServiceDefaultsRegistrationInfoAlertInfoKey
__ IMFoundation: _kFZServiceDefaultsRegistrationInfoErrorCodeKey
__ IMFoundation: _kFZServiceDefaultsRegistrationInfoKey
__ IMFoundation: _kFZServiceDefaultsRegistrationInfoStatusKey
__ IMFoundation: _kFZServiceDefaultsSentinelAlias
__ IMFoundation: _kFZServiceDefaultsServerHostKey
__ IMFoundation: _kFZServiceDefaultsServerPortKey
__ IMFoundation: _kFZServiceDefaultsServerSSLHostKey
__ IMFoundation: _kFZServiceDefaultsServerSSLPortKey
__ IMFoundation: _kFZServiceDefaultsUseProxyKey
__ IMFoundation: _kFZServiceDefaultsUseProxySytemPrefs
__ IMFoundation: _kFZServiceDefaultsUsesSSLKey
__ IMFoundation: _kFZTextAppBundleIdentifier
__ IMSharedUtilities: _FormattedRecentDomainDirectory
__ IMSharedUtilities: _IMAllowMessagesIniCloud
__ IMSharedUtilities: _IMAttachmentPreviewFileURL
__ IMSharedUtilities: _IMAttachmentsReUploadDate
__ IMSharedUtilities: _IMBagIntValueWithDefault
__ IMSharedUtilities: _IMBalloonBundleIdentifierFamily
__ IMSharedUtilities: _IMBalloonBundleIdentifierFamilyScreenTimeRequest
__ IMSharedUtilities: _IMBalloonExtensionIDWithSuffix
__ IMSharedUtilities: _IMBalloonPluginIdentifierDT
__ IMSharedUtilities: _IMBalloonPluginIdentifierSurf
__ IMSharedUtilities: _IMBalloonPluginIdentifierSurfDeprecated
__ IMSharedUtilities: _IMCKFinishedFetchingAttachmentsFromCloudKit
__ IMSharedUtilities: _IMCKFirstSyncInProgress
__ IMSharedUtilities: _IMCKMOCAccountsMatch
__ IMSharedUtilities: _IMCKRemovedFromBackupViaServerBag
__ IMSharedUtilities: _IMCKResyncedForDeleteRecovery
__ IMSharedUtilities: _IMCKStatisticCollectionDomain
__ IMSharedUtilities: _IMCKSyncCountsPriorToSync
__ IMSharedUtilities: _IMChatCanonicalIDSIDsForAddress
__ IMSharedUtilities: _IMChatPropertyAutoDonationBehavior
__ IMSharedUtilities: _IMChatPropertyCloudKitSyncState
__ IMSharedUtilities: _IMChatPropertyGroupPhotoGUID
__ IMSharedUtilities: _IMChatPropertyIsEmergencyChat
__ IMSharedUtilities: _IMChatPropertyLastSeenMessageGuid
__ IMSharedUtilities: _IMChatPropertyLastTranslatableMessageGUIDByLanguageCode
__ IMSharedUtilities: _IMChatPropertyServiceName
__ IMSharedUtilities: _IMClientPreviewConstraints
__ IMSharedUtilities: _IMCloudKitAHDAgentLastSyncAttemptDate
__ IMSharedUtilities: _IMCloudKitAHDAgentLastSyncAttemptInfo
__ IMSharedUtilities: _IMCloudKitAccountStatusKey
__ IMSharedUtilities: _IMCloudKitAnalyticSyncDatesDictionaryKey
__ IMSharedUtilities: _IMCloudKitAppleIDSecurityLevelDowngradeDate
__ IMSharedUtilities: _IMCloudKitAppleIDSecurityLevelHSA2
__ IMSharedUtilities: _IMCloudKitAttachmentFileSizeUpdateWatermark
__ IMSharedUtilities: _IMCloudKitAttachmentsRestoredCount
__ IMSharedUtilities: _IMCloudKitAttachmentsSyncedCount
__ IMSharedUtilities: _IMCloudKitChatsRestoredCount
__ IMSharedUtilities: _IMCloudKitChatsSyncedCount
__ IMSharedUtilities: _IMCloudKitCheckedMiCSwitchEligibilityOnImagentLaunch
__ IMSharedUtilities: _IMCloudKitCompleteSyncedDBDate
__ IMSharedUtilities: _IMCloudKitCreatedChatZone
__ IMSharedUtilities: _IMCloudKitDefinesDomain
__ IMSharedUtilities: _IMCloudKitDefinesInitialStateCheckDomain
__ IMSharedUtilities: _IMCloudKitDefinesMarkAllAttachmentsAsNeedingSync
__ IMSharedUtilities: _IMCloudKitDefinesMarkAllChatsAsNeedingSync
__ IMSharedUtilities: _IMCloudKitDefinesMarkAllIncompatibleMessagesForDeletionVersion
__ IMSharedUtilities: _IMCloudKitDefinesMarkAllMessagesAsNeedingSync
__ IMSharedUtilities: _IMCloudKitDefinesNewDeviceBringUpDomain
__ IMSharedUtilities: _IMCloudKitDefinesNewDeviceBringUpHasFinished
__ IMSharedUtilities: _IMCloudKitDefinesNewDeviceBringUpHasPerformed
__ IMSharedUtilities: _IMCloudKitDefinesTriedToEnableCKAndSyncAfterFirstImagentConnection
__ IMSharedUtilities: _IMCloudKitDispatchedIMAutoSync
__ IMSharedUtilities: _IMCloudKitEnableCentralizedCacheDelete
__ IMSharedUtilities: _IMCloudKitErrorFetchingExitDate
__ IMSharedUtilities: _IMCloudKitExitDate
__ IMSharedUtilities: _IMCloudKitFeatureEnabled
__ IMSharedUtilities: _IMCloudKitFullPartialSyncFirstCompletedDate
__ IMSharedUtilities: _IMCloudKitFullSyncAttemptedDate
__ IMSharedUtilities: _IMCloudKitFullSyncFirstCompletedDate
__ IMSharedUtilities: _IMCloudKitGetSyncStateDictionary
__ IMSharedUtilities: _IMCloudKitHasDisplayedLogNotification
__ IMSharedUtilities: _IMCloudKitInitialStartDate
__ IMSharedUtilities: _IMCloudKitInitialStateCheckKey
__ IMSharedUtilities: _IMCloudKitInitialSyncCompletedDate
__ IMSharedUtilities: _IMCloudKitIsEligibleForTruthZone
__ IMSharedUtilities: _IMCloudKitIsInExitState
__ IMSharedUtilities: _IMCloudKitIsRemovedFromBackup
__ IMSharedUtilities: _IMCloudKitIsSyncing
__ IMSharedUtilities: _IMCloudKitKickOffDailySyncNotification
__ IMSharedUtilities: _IMCloudKitLastChatSyncTime
__ IMSharedUtilities: _IMCloudKitLastDeviceActivityDate
__ IMSharedUtilities: _IMCloudKitLastReportedErrorTimeKey
__ IMSharedUtilities: _IMCloudKitLogNotificationSetting
__ IMSharedUtilities: _IMCloudKitManualSyncInProgressCountKey
__ IMSharedUtilities: _IMCloudKitMessagesRestoredCount
__ IMSharedUtilities: _IMCloudKitMessagesSyncedCount
__ IMSharedUtilities: _IMCloudKitOneTimeAccountUpgradeCheck
__ IMSharedUtilities: _IMCloudKitOverrideNumberOfChatsToFetch
__ IMSharedUtilities: _IMCloudKitOverrideNumberOfChatsToWrite
__ IMSharedUtilities: _IMCloudKitPeriodicSyncInProgressCountKey
__ IMSharedUtilities: _IMCloudKitRampStateDict
__ IMSharedUtilities: _IMCloudKitRampStateFeatureAllowed
__ IMSharedUtilities: _IMCloudKitRampStateFeaturePromoted
__ IMSharedUtilities: _IMCloudKitRampStateFeatureVisible
__ IMSharedUtilities: _IMCloudKitRampStateFetchHadServerError
__ IMSharedUtilities: _IMCloudKitRequestPriorityRamp
__ IMSharedUtilities: _IMCloudKitSetEligibleToToggleMiCSwitch
__ IMSharedUtilities: _IMCloudKitShouldFetchArchivedRecords
__ IMSharedUtilities: _IMCloudKitShouldUseDevContainer
__ IMSharedUtilities: _IMCloudKitShouldUseDevNickNameContainer
__ IMSharedUtilities: _IMCloudKitStartingDisableDevices
__ IMSharedUtilities: _IMCloudKitStartingEnabledSettingChange
__ IMSharedUtilities: _IMCloudKitStartingInitialSync
__ IMSharedUtilities: _IMCloudKitStartingPeriodicSync
__ IMSharedUtilities: _IMCloudKitSyncControllerSyncRecordTypeKey
__ IMSharedUtilities: _IMCloudKitSyncControllerSyncStateKey
__ IMSharedUtilities: _IMCloudKitSyncControllerSyncTypeKey
__ IMSharedUtilities: _IMCloudKitSyncDate
__ IMSharedUtilities: _IMCloudKitSyncErrorDomain
__ IMSharedUtilities: _IMCloudKitSyncErrors
__ IMSharedUtilities: _IMCloudKitSyncPaused
__ IMSharedUtilities: _IMCloudKitSyncingEnabled
__ IMSharedUtilities: _IMCloudKitTogglediCloudSwitch
__ IMSharedUtilities: _IMCloudKitUserTypeKey
__ IMSharedUtilities: _IMCloudKitZoneDeletedDate
__ IMSharedUtilities: _IMCloudKitiCloudLoggedIntoHSA2AccountNotification
__ IMSharedUtilities: _IMCloudKitiCloudLoggedIntoNonHSA2AccountNotification
__ IMSharedUtilities: _IMCollaborationNoticeDirectoryPath
__ IMSharedUtilities: _IMComputeRecordName
__ IMSharedUtilities: _IMCoreAttachmentBlastdoorErrorDomain
__ IMSharedUtilities: _IMCreateSerializedItemsFromArray
__ IMSharedUtilities: _IMDCKAttachmentSyncErrorDomain
__ IMSharedUtilities: _IMDCKChatSyncControllerErrorDomain
__ IMSharedUtilities: _IMDCKMessageSyncControllerErrorDomain
__ IMSharedUtilities: _IMDidPerformInitialChatVocabularyUpdate
__ IMSharedUtilities: _IMEnableNicknamesDebug
__ IMSharedUtilities: _IMExtensionPayloadURLKey
__ IMSharedUtilities: _IMExtensionPayloadUnarchivingClasses
__ IMSharedUtilities: _IMFeatureFlagDomain
__ IMSharedUtilities: _IMFileTransferAttributionInfoAccessibilityLabelKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoAdamIDKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoAppNameKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoAssetCountKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoBundleIDKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoMomentShareURLKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoPHAssetUUID
__ IMSharedUtilities: _IMFileTransferAttributionInfoPreviewGenerationConstraintsKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoPreviewGenerationSizeHeightKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoPreviewGenerationSizeWidthKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoPreviewGenerationSucceededKey
__ IMSharedUtilities: _IMFileTransferErrorDomain
__ IMSharedUtilities: _IMFileTransferFileURLRetrievalErrorDomain
__ IMSharedUtilities: _IMFileTransferGuidIsLegacyGuid
__ IMSharedUtilities: _IMFileTransferGuidWithAssociatedMessageGUIDAndIndex
__ IMSharedUtilities: _IMFileTransferPluginPayloadAttachmentExtension
__ IMSharedUtilities: _IMFileTransferWrapperExtension
__ IMSharedUtilities: _IMFileTransferWrapperGUIDFilename
__ IMSharedUtilities: _IMGetConsumedSessionPayloadsForBreadcrumbItems
__ IMSharedUtilities: _IMGetUserIgnoreLogoutIntent
__ IMSharedUtilities: _IMGetUserLoginIntent
__ IMSharedUtilities: _IMGreenTeaConsumed2FACode
__ IMSharedUtilities: _IMGreenTeaMessageReadLog
__ IMSharedUtilities: _IMGreenTeaMessageTransmitLog
__ IMSharedUtilities: _IMGreenTeaPhoneNumberTransmitLog
__ IMSharedUtilities: _IMGreenTeaReceived2FACode
__ IMSharedUtilities: _IMIsRunningInAutomation
__ IMSharedUtilities: _IMIsRunningInUnitTesting
__ IMSharedUtilities: _IMIsSupportedUTIType
__ IMSharedUtilities: _IMLegacyCalculateFileSizeForPath
__ IMSharedUtilities: _IMLogHandleForCategory
__ IMSharedUtilities: _IMMentionConfirmedMention
__ IMSharedUtilities: _IMMessageCreateThreadIdentifierWithComponents
__ IMSharedUtilities: _IMMessageEditHistoryLimit
__ IMSharedUtilities: _IMMessageEditReceivedTimeout
__ IMSharedUtilities: _IMMessageFromStorageTimerFiredNotification
__ IMSharedUtilities: _IMMessageGuidFromIMFileTransferGuid
__ IMSharedUtilities: _IMMessageItemShouldAutomaticallySave
__ IMSharedUtilities: _IMMessagePropertyDate
__ IMSharedUtilities: _IMMessagePropertyItemType
__ IMSharedUtilities: _IMMessageRetractionReceivedTimeout
__ IMSharedUtilities: _IMMessageRetractionTimeout
__ IMSharedUtilities: _IMMessageSummaryInfoAssociatedBalloonBundleID
__ IMSharedUtilities: _IMMessageSummaryInfoContentType
__ IMSharedUtilities: _IMMessageSummaryInfoEditDeliveryFailedForPartIndexes
__ IMSharedUtilities: _IMMessageSummaryInfoEditUnsupportedByHandleIDs
__ IMSharedUtilities: _IMMessageSummaryInfoHasBeenRetried
__ IMSharedUtilities: _IMMessageSummaryInfoPluginBundleID
__ IMSharedUtilities: _IMMessageSummaryInfoPluginDisplayName
__ IMSharedUtilities: _IMMessageSummaryInfoRetractDeliveryFailedForPartIndexes
__ IMSharedUtilities: _IMMessageSummaryInfoSourceApplicationID
__ IMSharedUtilities: _IMMessageSummaryInfoSummary
__ IMSharedUtilities: _IMMessageSummaryInfoTapbackRepresentationKey
__ IMSharedUtilities: _IMMessageSummaryInfoUpdatedDateWithServerTime
__ IMSharedUtilities: _IMMetricsCollectorDeduplicationIntervalKey
__ IMSharedUtilities: _IMMetricsCollectorDeliveryDurationKey
__ IMSharedUtilities: _IMMetricsCollectorDurationBeforeDowngradeKey
__ IMSharedUtilities: _IMMetricsCollectorEventCKSyncingAllCompletedWithTime
__ IMSharedUtilities: _IMMetricsCollectorEventCKSyncingAllFailedWithTime
__ IMSharedUtilities: _IMMetricsCollectorEventCKSyncingChatsCompletedWithTime
__ IMSharedUtilities: _IMMetricsCollectorEventCKSyncingChatsFailedWithTime
__ IMSharedUtilities: _IMMetricsCollectorEventCKSyncingEnabled
__ IMSharedUtilities: _IMMetricsCollectorEventCKisInCarryEnabled
__ IMSharedUtilities: _IMMetricsCollectorEventChatsLoaded
__ IMSharedUtilities: _IMMetricsCollectorEventIMessageDeduplicatedSingleComponent
__ IMSharedUtilities: _IMMetricsCollectorEventIMessageDeliveredMessageSingleComponent
__ IMSharedUtilities: _IMMetricsCollectorEventIMessageDowngradeSingleComponent
__ IMSharedUtilities: _IMMetricsCollectorEventPresentedTTR
__ IMSharedUtilities: _IMMetricsCollectorEventPreviewGenerationFailure
__ IMSharedUtilities: _IMMetricsCollectorEventPreviewGenerationSuccess
__ IMSharedUtilities: _IMMetricsCollectorEventPreviewGenerationTimeout
__ IMSharedUtilities: _IMMetricsCollectorEventProcessedMessagesFromStorage
__ IMSharedUtilities: _IMMetricsCollectorEventSOSSMSMapURLReceived
__ IMSharedUtilities: _IMMetricsCollectorEventServedOTC
__ IMSharedUtilities: _IMMetricsCollectorIsManualDowngradeKey
__ IMSharedUtilities: _IMMetricsCollectorNumberOfChatsKey
__ IMSharedUtilities: _IMMetricsCollectorNumberOfMessages
__ IMSharedUtilities: _IMMetricsCollectorSensitiveImageReceived
__ IMSharedUtilities: _IMMetricsCollectorSensitiveImageSent
__ IMSharedUtilities: _IMMetricsCollectorStatisticReceivedDeliveryReceipt
__ IMSharedUtilities: _IMMetricsCollectorStatisticSendTime
__ IMSharedUtilities: _IMMetricsCollectorStorageProcessingError
__ IMSharedUtilities: _IMMetricsCollectorStorageService
__ IMSharedUtilities: _IMMetricsCollectorTimeToProcessMessages
__ IMSharedUtilities: _IMNicknameDidMakeAllContentsClassC
__ IMSharedUtilities: _IMNicknameDirectoryPath
__ IMSharedUtilities: _IMNicknameUnarchivingClasses
__ IMSharedUtilities: _IMNicknamesAppleIDAndiCloudAccountMatchAndExistKey
__ IMSharedUtilities: _IMNicknamesDenyAllowListNicknamesVersionKey
__ IMSharedUtilities: _IMNicknamesDomain
__ IMSharedUtilities: _IMNicknamesMeCardSharingAudienceKey
__ IMSharedUtilities: _IMNicknamesMeCardSharingEnabledKey
__ IMSharedUtilities: _IMNicknamesMeCardSharingImageForkedKey
__ IMSharedUtilities: _IMNicknamesMeCardSharingNameForkedKey
__ IMSharedUtilities: _IMNicknamesMultiplePhoneNumbersTiedToAppleID
__ IMSharedUtilities: _IMNicknamesNicknameVersionKey
__ IMSharedUtilities: _IMNicknamesPendingNicknamesVersionKey
__ IMSharedUtilities: _IMNicknamesRequestedProfileFromPeersKey
__ IMSharedUtilities: _IMNicknamesReuploadLocalProfileVersion
__ IMSharedUtilities: _IMNicknamesScrutinyDoNotHandleKey
__ IMSharedUtilities: _IMNicknamesSharingVersionKey
__ IMSharedUtilities: _IMNotificationContextMessagePayloadURLKey
__ IMSharedUtilities: _IMOneTimeCodeGuidKey
__ IMSharedUtilities: _IMOneTimeCodeHandleKey
__ IMSharedUtilities: _IMOneTimeCodeKey
__ IMSharedUtilities: _IMPeerAttachmentMessageErrorDomain
__ IMSharedUtilities: _IMPreviewConstraintsEqualToConstraints
__ IMSharedUtilities: _IMPreviewConstraintsFromDictionary
__ IMSharedUtilities: _IMPreviewExtension
__ IMSharedUtilities: _IMResumeToLastSeenMessage
__ IMSharedUtilities: _IMSHA1HashFromStrings
__ IMSharedUtilities: _IMScreenTimeAskActionAllDay
__ IMSharedUtilities: _IMScreenTimeAskActionFifteenMinute
__ IMSharedUtilities: _IMScreenTimeAskActionNotApproved
__ IMSharedUtilities: _IMScreenTimeAskActionOneHour
__ IMSharedUtilities: _IMServicePropertyDiscontinued
__ IMSharedUtilities: _IMSetHavePerformedInitialChatVocabularyUpdate
__ IMSharedUtilities: _IMSettingsKeepMessagesChangedNotification
__ IMSharedUtilities: _IMSettingsKeepMessagesDomain
__ IMSharedUtilities: _IMSettingsKeepMessagesKey
__ IMSharedUtilities: _IMSettingsKeepMessagesResetKey
__ IMSharedUtilities: _IMSettingsKeepMessagesShouldResetPrefNotification
__ IMSharedUtilities: _IMSettingsKeepMessagesVersionIDKey
__ IMSharedUtilities: _IMSettingsKeepMessagesWasResetNotification
__ IMSharedUtilities: _IMSharedHelperAreObjectsLogicallySame
__ IMSharedUtilities: _IMSharedHelperCachePathForStickerWithProperties
__ IMSharedUtilities: _IMSharedHelperContactsBasedMergingEnabled
__ IMSharedUtilities: _IMSharedHelperDeviceHasMultipleSubscriptions
__ IMSharedUtilities: _IMSharedHelperEnsureDirectoryExistsAtPath
__ IMSharedUtilities: _IMSharedHelperMD5HashOfFileAtPath
__ IMSharedUtilities: _IMSharedHelperMD5OfData
__ IMSharedUtilities: _IMSharedHelperMessagesRootFolderPath
__ IMSharedUtilities: _IMSharedHelperNSNewStringByAppendingStrings
__ IMSharedUtilities: _IMSharedHelperNickNameEnabled
__ IMSharedUtilities: _IMSharedHelperPersistMergeID
__ IMSharedUtilities: _IMSharedHelperPersistMergeIDMergedChats
__ IMSharedUtilities: _IMSharedHelperPersonCentricMergingEnabled
__ IMSharedUtilities: _IMSharedHelperSortUsingReplyToGUIDAlgorithm
__ IMSharedUtilities: _IMSharedHelperTruncatedGroupDisplayName
__ IMSharedUtilities: _IMSharedHelperTurnOnUNUserNotificationsInIMDPersistence
__ IMSharedUtilities: _IMSharedUtilitiesFrameworkBundle
__ IMSharedUtilities: _IMShouldHandleInternalPhishingAttempts
__ IMSharedUtilities: _IMStickerUserInfoAssociatedLayoutIntentKey
__ IMSharedUtilities: _IMStickerUserInfoLayoutIntentKey
__ IMSharedUtilities: _IMStickerUserInfoParentPreviewWidthKey
__ IMSharedUtilities: _IMStickerUserInfoRotationKey
__ IMSharedUtilities: _IMStickerUserInfoScaleKey
__ IMSharedUtilities: _IMStickerUserInfoStickerBIDKey
__ IMSharedUtilities: _IMStickerUserInfoStickerGUIDKey
__ IMSharedUtilities: _IMStickerUserInfoStickerHashKey
__ IMSharedUtilities: _IMStickerUserInfoStickerPackGUIDKey
__ IMSharedUtilities: _IMStickerUserInfoStickerRecipeKey
__ IMSharedUtilities: _IMStickerUserInfoXScalarKey
__ IMSharedUtilities: _IMStickerUserInfoYScalarKey
__ IMSharedUtilities: _IMStringFromCKSyncState
__ IMSharedUtilities: _IMStringFromClientCapabilities
__ IMSharedUtilities: _IMStringFromCloudKitSyncStep
__ IMSharedUtilities: _IMStringFromIMCloudKitAccountStatus
__ IMSharedUtilities: _IMStringFromIMCloudKitSyncControllerSyncRecordType
__ IMSharedUtilities: _IMStringFromIMCloudKitSyncControllerSyncState
__ IMSharedUtilities: _IMStringFromIMCloudKitSyncControllerSyncType
__ IMSharedUtilities: _IMStringFromTransferState
__ IMSharedUtilities: _IMStripTransferConstraintAndSizeKeys
__ IMSharedUtilities: _IMSyndicationActionCurrentVersion
__ IMSharedUtilities: _IMUTITypeForFilename
__ IMSharedUtilities: _IMUpdateTransferConstraintAndSizeKeys
__ IMSharedUtilities: _OBJC_CLASS_$_IMAKAppleIDAuthenticationController
__ IMSharedUtilities: _OBJC_CLASS_$_IMAssociatedMessageItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMAvailabilityInvitationManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMBaseCommandHandlerRegistry
__ IMSharedUtilities: _OBJC_CLASS_$_IMBroadcastingKeyValueCollection
__ IMSharedUtilities: _OBJC_CLASS_$_IMCKPadding
__ IMSharedUtilities: _OBJC_CLASS_$_IMCTSMSUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMCTSubscriptionUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMChatIdentifierUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMChatSyndicationAction
__ IMSharedUtilities: _OBJC_CLASS_$_IMCollaborationNotice
__ IMSharedUtilities: _OBJC_CLASS_$_IMCollaborationNoticeMetadata
__ IMSharedUtilities: _OBJC_CLASS_$_IMCollaborationNoticeTransmission
__ IMSharedUtilities: _OBJC_CLASS_$_IMCommSafetyRequestsManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMCommSafetySettingsManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMContactStore
__ IMSharedUtilities: _OBJC_CLASS_$_IMCoreAutomationNotifications
__ IMSharedUtilities: _OBJC_CLASS_$_IMDPLogsCollector
__ IMSharedUtilities: _OBJC_CLASS_$_IMDefaults
__ IMSharedUtilities: _OBJC_CLASS_$_IMDeviceConditions
__ IMSharedUtilities: _OBJC_CLASS_$_IMDeviceUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMDistributingProxy
__ IMSharedUtilities: _OBJC_CLASS_$_IMFeatureFlags
__ IMSharedUtilities: _OBJC_CLASS_$_IMFileTransfer
__ IMSharedUtilities: _OBJC_CLASS_$_IMFocusStateManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMGroupActionItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMGroupBlocklistManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMGroupTitleChangeItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMINInteractionUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMInternalPayloadUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMInvocationCapturingProxy
__ IMSharedUtilities: _OBJC_CLASS_$_IMItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMKeyValueCollectionUserDefaultsStorage
__ IMSharedUtilities: _OBJC_CLASS_$_IMLocationShareStatusChangeItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMLogDump
__ IMSharedUtilities: _OBJC_CLASS_$_IMMessageActionItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMMessageDescriptor
__ IMSharedUtilities: _OBJC_CLASS_$_IMMessageItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMMessageNotificationTimeManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMMessagePartHistoricalContent
__ IMSharedUtilities: _OBJC_CLASS_$_IMMessagePartSyndicationRange
__ IMSharedUtilities: _OBJC_CLASS_$_IMMessageSyndicationAction
__ IMSharedUtilities: _OBJC_CLASS_$_IMMetricsCollector
__ IMSharedUtilities: _OBJC_CLASS_$_IMMomentShareUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMNickname
__ IMSharedUtilities: _OBJC_CLASS_$_IMNicknameAvatar
__ IMSharedUtilities: _OBJC_CLASS_$_IMNicknameAvatarImage
__ IMSharedUtilities: _OBJC_CLASS_$_IMOneTimeCodeUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMParticipantChangeItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMPowerLog
__ IMSharedUtilities: _OBJC_CLASS_$_IMPowerWifiUsageCollector
__ IMSharedUtilities: _OBJC_CLASS_$_IMSMSFilterHelper
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedGroupAction
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedGroupTitleChange
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedLocationShareStatusChange
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedMessage
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedMessageAction
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedMessageP2
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedMessageP3
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedMessageUpdateT1
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedMessageUpdateT2
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedParticipantChange
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedWithYouManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMSpamFilterHelper
__ IMSharedUtilities: _OBJC_CLASS_$_IMStateCaptureAssistant
__ IMSharedUtilities: _OBJC_CLASS_$_IMSyncErrorAnalyzer
__ IMSharedUtilities: _OBJC_CLASS_$_IMSyndicationUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMTUConversationItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMTranscoderTelemetry
__ IMSharedUtilities: _OBJC_METACLASS_$_IMBaseCommandHandlerRegistry
__ IMSharedUtilities: __MessageGUIDToSignpostId
__ IMSharedUtilities: __iMessageTelemetryLogHandle
__ IMSharedUtilities: __signpostSendMessage
__ IMSharedUtilities: _im_checkpointIDSService
__ IMSharedUtilities: _im_sendCertifiedDeliveryReceiptIfPossible
__ IMSharedUtilities: _im_sendMessageCheckpointIfNecessary
__ IMSharedUtilities: _kIMSpamFilterHelperDefaultsMapReceivingID
__ IMTranscoding: _OBJC_CLASS_$_IMTranscodeController
__ IMTransferServices: _OBJC_CLASS_$_IMTransferServicesController
__ Marco: _MarcoLogMadridLevel
__ Marco: _MarcoShouldLogMadridLevel
__ MessagesBlastDoorSupport: _OBJC_CLASS_$_IMMessagesBlastDoorInterface
__ MessagesCloudSync: _OBJC_CLASS_$_IMDSyncTelemetryReporter
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ Photos: _OBJC_CLASS_$_PHAsset
__ Photos: _OBJC_CLASS_$_PHAssetChangeRequest
__ Photos: _OBJC_CLASS_$_PHAssetExportRequest
__ Photos: _OBJC_CLASS_$_PHAssetExportRequestOptions
__ Photos: _OBJC_CLASS_$_PHFetchOptions
__ Photos: _OBJC_CLASS_$_PHMomentShare
__ Photos: _OBJC_CLASS_$_PHPhotoLibrary
__ Photos: _OBJC_CLASS_$_PHResourceLocalAvailabilityRequest
__ Photos: _OBJC_CLASS_$_PHResourceLocalAvailabilityRequestOptions
__ Photos: _PHAssetExportRequestPhotoFileURLKey
__ Photos: _PHAssetExportRequestVideoFileURLKey
__ Photos: _PHAssetPropertySetCuration
__ Photos: _PHAssetPropertySetMediaAnalysis
__ Photos: _PHAssetPropertySetSceneAnalysis
__ ScreenTimeCore: _OBJC_CLASS_$_STAskClient
__ SoftLinking: __sl_dlopen
__ TelephonyUtilities: _OBJC_CLASS_$_TUCallCenter
__ TelephonyUtilities: _OBJC_CLASS_$_TUConversation
__ TelephonyUtilities: _OBJC_CLASS_$_TUConversationActivitySession
__ TelephonyUtilities: _OBJC_CLASS_$_TUConversationManager
__ TelephonyUtilities: _OBJC_CLASS_$_TUConversationMember
__ TelephonyUtilities: _OBJC_CLASS_$_TUHandle
__ TelephonyUtilities: _TUHandlesAreCanonicallyEqual
__ ToneLibrary: _OBJC_CLASS_$_TLToneManager
__ ToneLibrary: _TLToneIdentifierNone
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_queue
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_workloop_create
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _ffsctl
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fsctl
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _pthread_dependency_fulfill_np
__ libSystem.B.dylib: _pthread_dependency_init_np
__ libSystem.B.dylib: _pthread_dependency_wait_np
__ libSystem.B.dylib: _pthread_main_thread_np
__ libSystem.B.dylib: _sandbox_check_by_audit_token
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x11
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libswiftCore.dylib: _OBJC_CLASS_$_SwiftNativeNSObject
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$_SwiftNativeNSObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swiftEmptySetSingleton
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_allocateGenericClassMetadata
__ libswiftCore.dylib: _swift_allocateGenericValueMetadata
__ libswiftCore.dylib: _swift_arrayAssignWithTake
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_checkMetadataState
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deallocPartialClassInstance
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastClass
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_dynamicCastObjCProtocolUnconditional
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_errorRetain
__ libswiftCore.dylib: _swift_getEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getGenericMetadata
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTupleTypeMetadata2
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initClassMetadata2
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_initStaticObject
__ libswiftCore.dylib: _swift_initStructMetadata
__ libswiftCore.dylib: _swift_isEscapingClosureAtFileLocation
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_bridgeObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_release_n
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_retain_n
__ libswiftCore.dylib: _swift_slowAlloc
__ libswiftCore.dylib: _swift_slowDealloc
__ libswiftCore.dylib: _swift_stdlib_isStackAllocationSafe
__ libswiftCore.dylib: _swift_storeEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRelease_n
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_unknownObjectRetain_n
__ libswiftCore.dylib: _swift_unknownObjectWeakDestroy
__ libswiftCore.dylib: _swift_unknownObjectWeakInit
__ libswiftCore.dylib: _swift_unknownObjectWeakLoadStrong
__ libswiftCore.dylib: _swift_willThrow
__ libswift_Concurrency.dylib: _swift_continuation_await
__ libswift_Concurrency.dylib: _swift_continuation_init
__ libswift_Concurrency.dylib: _swift_continuation_resume
__ libswift_Concurrency.dylib: _swift_defaultActor_deallocate
__ libswift_Concurrency.dylib: _swift_defaultActor_destroy
__ libswift_Concurrency.dylib: _swift_defaultActor_initialize
__ libswift_Concurrency.dylib: _swift_task_alloc
__ libswift_Concurrency.dylib: _swift_task_create
__ libswift_Concurrency.dylib: _swift_task_dealloc
__ libswift_Concurrency.dylib: _swift_task_switch
IMReadReceiptPipelineParameter : NSObject <IMReadReceiptProcessingParameter, IMMessageFromStorageParameter>
 @property  NSString *GUID
 @property  NSNumber *timestamp
 @property  NSString *fromPushID
 @property  NSString *fromIdentifier
 @property  BOOL isFromDefaultPairedDevice
 @property  BOOL isFromStorage
 @property  BOOL isLastFromStorage
 @property  BOOL isFromMe
 @property  NSArray *messageItems
 @property  IMDChat *chat

  // instance methods
  -[IMReadReceiptPipelineParameter GUID]
  -[IMReadReceiptPipelineParameter setTimestamp:]
  -[IMReadReceiptPipelineParameter .cxx_destruct]
  -[IMReadReceiptPipelineParameter setIsFromStorage:]
  -[IMReadReceiptPipelineParameter timestamp]
  -[IMReadReceiptPipelineParameter isFromStorage]
  -[IMReadReceiptPipelineParameter fromIdentifier]
  -[IMReadReceiptPipelineParameter setFromIdentifier:]
  -[IMReadReceiptPipelineParameter isFromMe]
  -[IMReadReceiptPipelineParameter setChat:]
  -[IMReadReceiptPipelineParameter chat]
  -[IMReadReceiptPipelineParameter setIsFromMe:]
  -[IMReadReceiptPipelineParameter setGUID:]
  -[IMReadReceiptPipelineParameter isFromDefaultPairedDevice]
  -[IMReadReceiptPipelineParameter isLastFromStorage]
  -[IMReadReceiptPipelineParameter fromPushID]
  -[IMReadReceiptPipelineParameter setMessageItems:]
  -[IMReadReceiptPipelineParameter messageItems]
  -[IMReadReceiptPipelineParameter initWithBD:]
  -[IMReadReceiptPipelineParameter setFromPushID:]
  -[IMReadReceiptPipelineParameter setIsFromDefaultPairedDevice:]
  -[IMReadReceiptPipelineParameter setIsLastFromStorage:]


IMDMomentShareIngestionContext : NSObject
 @property  NSURL *shareURL
 @property  IMMessageItem *message
 @property  IMDChat *chat
 @property  PHMomentShare *momentShare
 @property  PHFetchResult *assetsFetch
 @property  long long fetchType
 @property  long long state
 @property  NSDictionary *assetUUIDsToFileTransfers

  // instance methods
  -[IMDMomentShareIngestionContext state]
  -[IMDMomentShareIngestionContext .cxx_destruct]
  -[IMDMomentShareIngestionContext fetchType]
  -[IMDMomentShareIngestionContext shareURL]
  -[IMDMomentShareIngestionContext message]
  -[IMDMomentShareIngestionContext setState:]
  -[IMDMomentShareIngestionContext chat]
  -[IMDMomentShareIngestionContext momentShare]
  -[IMDMomentShareIngestionContext setMomentShare:]
  -[IMDMomentShareIngestionContext initWithURL:message:inChat:]
  -[IMDMomentShareIngestionContext assetUUIDsToFileTransfers]
  -[IMDMomentShareIngestionContext addTransfers:]
  -[IMDMomentShareIngestionContext clearAllTransfers]
  -[IMDMomentShareIngestionContext completeTransferForAssetUUID:]
  -[IMDMomentShareIngestionContext assetsFetch]
  -[IMDMomentShareIngestionContext setAssetsFetch:]
  -[IMDMomentShareIngestionContext setFetchType:]


IMDAccount : NSObject <IMSystemMonitorListener>
 @property  BOOL loading
 @property  BOOL wasDisabledAutomatically
 @property  BOOL shouldPublishNowPlaying
 @property  NSString *accountID
 @property  NSString *loginID
 @property  IMDService *service
 @property  IMDServiceSession *session
 @property  unsigned int serviceLoginStatus
 @property  int serviceDisconnectReason
 @property  NSString *serviceLoginStatusMessage
 @property  int registrationStatus
 @property  int registrationError
 @property  NSDictionary *registrationAlertInfo
 @property  NSDictionary *accountDefaults
 @property  BOOL active
 @property  BOOL disabled
 @property  BOOL managed
 @property  BOOL canMakeDowngradeRoutingChecks
 @property  long long accountType

  // instance methods
  -[IMDAccount loginID]
  -[IMDAccount setLoginID:]
  -[IMDAccount setLoading:]
  -[IMDAccount registrationError]
  -[IMDAccount accountID]
  -[IMDAccount session]
  -[IMDAccount isManaged]
  -[IMDAccount setAccountID:]
  -[IMDAccount setIsManaged:]
  -[IMDAccount setSession:]
  -[IMDAccount accountDefaults]
  -[IMDAccount isLoading]
  -[IMDAccount dealloc]
  -[IMDAccount isActive]
  -[IMDAccount setService:]
  -[IMDAccount canMakeDowngradeRoutingChecks]
  -[IMDAccount .cxx_destruct]
  -[IMDAccount service]
  -[IMDAccount writeAccountDefaults:]
  -[IMDAccount registrationStatus]
  -[IMDAccount accountType]
  -[IMDAccount isDisabled]
  -[IMDAccount registrationAlertInfo]
  -[IMDAccount _registrationInfo]
  -[IMDAccount setManaged:]
  -[IMDAccount initWithAccountID:defaults:service:]
  -[IMDAccount wasDisabledAutomatically]
  -[IMDAccount setWasDisabledAutomatically:]
  -[IMDAccount postAccountCapabilities]
  -[IMDAccount accountInfoToPost]
  -[IMDAccount createSessionIfNecessary]
  -[IMDAccount releaseSession]
  -[IMDAccount setRegistrationStatus:error:alertInfo:]
  -[IMDAccount setLoginStatus:message:reason:properties:]
  -[IMDAccount setLoginStatus:message:]
  -[IMDAccount _forceSetLoginStatus:message:reason:properties:]
  -[IMDAccount serviceLoginStatus]
  -[IMDAccount setServiceLoginStatus:]
  -[IMDAccount serviceDisconnectReason]
  -[IMDAccount setServiceDisconnectReason:]
  -[IMDAccount serviceLoginStatusMessage]
  -[IMDAccount setServiceLoginStatusMessage:]
  -[IMDAccount shouldPublishNowPlaying]


IMAssociatedMessageProcessingPipelineComponent : IMTextMessageProcessingPipelineComponent
  // instance methods
  -[IMAssociatedMessageProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMAssociatedMessageProcessingPipelineComponent createMessageItemWithInput:]


IMDBroadcastController : NSObject
  // class methods
  +[IMDBroadcastController registerSharedProvider:]
  +[IMDBroadcastController sharedProvider]


IMDMessageHistorySyncTaskLiveFactory : NSObject <IMDMessageHistorySyncTaskFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMDMessageHistorySyncTaskLiveFactory dealloc]
  -[IMDMessageHistorySyncTaskLiveFactory _initWithCKSyncController:accountController:replayController:]
  -[IMDMessageHistorySyncTaskLiveFactory _newIDSTransactionLogSyncTask]
  -[IMDMessageHistorySyncTaskLiveFactory newSyncTaskForType:]
  -[IMDMessageHistorySyncTaskLiveFactory _newFirstUnlockReplaySyncTask]
  -[IMDMessageHistorySyncTaskLiveFactory _newKChatSyncTask]
  -[IMDMessageHistorySyncTaskLiveFactory init]


IMDSIMSubscriptionUpdateTracker : NSObject <CoreTelephonyClientDelegate>
 @property  CoreTelephonyClient *coreTelephonyClient
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDSIMSubscriptionUpdateTracker sharedTrackerInstance]

  // instance methods
  -[IMDSIMSubscriptionUpdateTracker setCoreTelephonyClient:]
  -[IMDSIMSubscriptionUpdateTracker coreTelephonyClient]
  -[IMDSIMSubscriptionUpdateTracker .cxx_destruct]
  -[IMDSIMSubscriptionUpdateTracker activeSubscriptionsDidChange]
  -[IMDSIMSubscriptionUpdateTracker init]


IMDAccountController : NSObject <IDSAccountDelegate>
 @property  BOOL isLoading
 @property  NSArray *accounts
 @property  NSArray *activeAccounts
 @property  NSArray *connectedAccounts
 @property  NSArray *connectingAccounts
 @property  NSArray *activeSessions
 @property  BOOL networkDataAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDAccountController sharedInstance]
  +[IMDAccountController sharedAccountController]

  // instance methods
  -[IMDAccountController addAccount:]
  -[IMDAccountController accounts]
  -[IMDAccountController removeAccount:]
  -[IMDAccountController connectingAccountsForService:]
  -[IMDAccountController accountsForLoginID:onService:]
  -[IMDAccountController activeAliases]
  -[IMDAccountController setNetworkDataAvailable:]
  -[IMDAccountController _isOperationalForAccount:]
  -[IMDAccountController load]
  -[IMDAccountController activateAccount:]
  -[IMDAccountController isLoading]
  -[IMDAccountController dealloc]
  -[IMDAccountController deactivateAccounts:]
  -[IMDAccountController isAccountActive:]
  -[IMDAccountController .cxx_destruct]
  -[IMDAccountController activeSessions]
  -[IMDAccountController accountForHandle:]
  -[IMDAccountController networkDataAvailable]
  -[IMDAccountController deactivateAccount:]
  -[IMDAccountController account:isActiveChanged:]
  -[IMDAccountController accountForIDSAccountUniqueID:]
  -[IMDAccountController deactivateAccounts:force:]
  -[IMDAccountController activeAccounts]
  -[IMDAccountController activeAccountsForService:]
  -[IMDAccountController connectedAccountsForService:]
  -[IMDAccountController connectingAccounts]
  -[IMDAccountController connectedAccounts]
  -[IMDAccountController accountForAccountID:]
  -[IMDAccountController hasActivePhoneAccount]
  -[IMDAccountController deferredSave]
  -[IMDAccountController receiverIsCandidateForHawking:]
  -[IMDAccountController activeAccountsAreEligibleForHawking]
  -[IMDAccountController anySessionForServiceName:]
  -[IMDAccountController _isAccountActive:forService:]
  -[IMDAccountController sessionForAccount:]
  -[IMDAccountController deactivateAccount:force:]
  -[IMDAccountController save]
  -[IMDAccountController accountsForService:]
  -[IMDAccountController accountAssociatedWithHandle:]
  -[IMDAccountController _daemonWillShutdown:]
  -[IMDAccountController _operationalAccounts]
  -[IMDAccountController _rebuildOperationalAccountsCache]
  -[IMDAccountController _checkPowerAssertion]
  -[IMDAccountController init]
  -[IMDAccountController activateAccounts:]
  -[IMDAccountController _nicknameController]


IMDCKUtilities : NSObject <IMDCKSyncStateDelegate>
 @property  BOOL didKeyRollPendingCheck
 @property  IMLockdownManager *lockdownManager
 @property  IDSServerBag *serverBag
 @property  FTDeviceSupport *deviceSupport
 @property  IMDefaults *imDefaults
 @property  IMDSyncTelemetryReporter *telemetryReporter
 @property  BOOL isInCloudKitDemoMode
 @property  BOOL useDeprecatedApi
 @property  IMDCKSyncState *syncState
 @property  BOOL isSyncingPaused
 @property  BOOL keyRollPending
 @property  BOOL deviceCharging
 @property  BOOL deviceOnWifi
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDCKUtilities sharedInstance]
  +[IMDCKUtilities logHandle]
  +[IMDCKUtilities _idsAccountController]
  +[IMDCKUtilities readAliasesFromDefaults]
  +[IMDCKUtilities restoreFailuresDirectory]
  +[IMDCKUtilities addConditionChecks:toCriteria:]
  +[IMDCKUtilities calculateAliasesForDefaults]
  +[IMDCKUtilities calculateAndSaveAliasesToDefaults]
  +[IMDCKUtilities im_AKSecurityLevelKey]

  // instance methods
  -[IMDCKUtilities setServerBag:]
  -[IMDCKUtilities logDumpIsNecessaryAfterSync]
  -[IMDCKUtilities fetchAccountStatusAndUpdateMiCSwitchEligibility]
  -[IMDCKUtilities _accountStore]
  -[IMDCKUtilities serverBag]
  -[IMDCKUtilities enableAttachmentMetricCollection]
  -[IMDCKUtilities fetchCloudKitAccountStatusWithCompletion:]
  -[IMDCKUtilities isFirstSyncWithActivity:completion:]
  -[IMDCKUtilities removeFromBackUpAllowed]
  -[IMDCKUtilities syncState]
  -[IMDCKUtilities _setiCloudSettingsSwitchEnabled:]
  -[IMDCKUtilities useDeprecatedApi]
  -[IMDCKUtilities reportMOCDebuggingErrorWithString:internalOnly:initialSync:sendToHandle:]
  -[IMDCKUtilities logHandle]
  -[IMDCKUtilities dsid]
  -[IMDCKUtilities logDumpAndSendMessageTo:forHours:reason:]
  -[IMDCKUtilities serverAllowsMetricSubmission]
  -[IMDCKUtilities shouldForceArchivedMessagesSync]
  -[IMDCKUtilities reportCompletionForSyncType:isCoreDuetSync:onAttempt:wasSuccessful:duration:]
  -[IMDCKUtilities _serverAllowsSync]
  -[IMDCKUtilities shouldReportToAnalytics]
  -[IMDCKUtilities logDumpIsExpected]
  -[IMDCKUtilities _showCKLogNotificationWithCompletion:]
  -[IMDCKUtilities setDidKeyRollPendingCheck:]
  -[IMDCKUtilities setDeviceSupport:]
  -[IMDCKUtilities setUseDeprecatedApi:]
  -[IMDCKUtilities shouldReportToRTC]
  -[IMDCKUtilities checkCloudkitEnabledStatusAndToggleiCloudSwitchIfNeeded]
  -[IMDCKUtilities broadcastCloudKitState]
  -[IMDCKUtilities iCloudAccountMatchesiMessageAccount]
  -[IMDCKUtilities _personIdFromAccount:]
  -[IMDCKUtilities deviceConditionsAllowPeriodicSync]
  -[IMDCKUtilities logDumpAndSendMessageTo:forHours:reason:requirePreviousPrompt:willSendBlock:]
  -[IMDCKUtilities recordNameForMessageWithGUID:usingSalt:]
  -[IMDCKUtilities telemetryReporter]
  -[IMDCKUtilities primaryAccountHasiCloudBackupEnabledWithCompletion:]
  -[IMDCKUtilities setCloudKitSyncingEnabled:]
  -[IMDCKUtilities _getKeepMessagesValue]
  -[IMDCKUtilities shouldRepairAccountWithAccountStatus:securityLevel:]
  -[IMDCKUtilities logCloudKitSyncToPowerLogForSyncType:isCoreDuetSync:didCompleteChatSync:didSucceedSyncingChats:didCompleteMessageSync:didSucceedSyncingMessages:didCompleteAttachmentSync:didSucceedSyncingAttachments:didCompleteRecoverableMessageSync:didSucceedSyncingRecoverableMessageSync:syncAttemptCount:]
  -[IMDCKUtilities didKeyRollPendingCheck]
  -[IMDCKUtilities isInCloudKitDemoMode]
  -[IMDCKUtilities deviceActiveString]
  -[IMDCKUtilities shouldKickOffWriteForSyncType:]
  -[IMDCKUtilities evalToggleiCloudSettingsSwitch]
  -[IMDCKUtilities .cxx_destruct]
  -[IMDCKUtilities shouldUseDevNickNameContainer]
  -[IMDCKUtilities readServerBagBoolForKey:defaultValue:]
  -[IMDCKUtilities PCSReportManateeStatusAsync:timeout:]
  -[IMDCKUtilities _createAccountError:]
  -[IMDCKUtilities signedIntoiCloudAndiMessageAndiCloudAccountMatchesiMessageAccount]
  -[IMDCKUtilities extractServerRecordFromCKServerErrorRecordChanged:]
  -[IMDCKUtilities logToPowerLogForLogDumpGUID:logDumpCompleted:logDumpSucceeded:logDumpSendingCompleted:logDumpSendingSucceeded:reason:]
  -[IMDCKUtilities PCSReportManateeStatus]
  -[IMDCKUtilities isDeviceOnWifi]
  -[IMDCKUtilities imDefaults]
  -[IMDCKUtilities cacheDeleteEnabled]
  -[IMDCKUtilities checkiCloudQuota:]
  -[IMDCKUtilities _isLogDumpAllowed]
  -[IMDCKUtilities messageDatabaseSize]
  -[IMDCKUtilities logDumpAndSendMessageTo:forHours:reason:isInitialSync:requirePreviousPrompt:willSendBlock:]
  -[IMDCKUtilities internalQueue]
  -[IMDCKUtilities reportMOCDebuggingErrorWithString:internalOnly:]
  -[IMDCKUtilities _authenticationController]
  -[IMDCKUtilities _checkEligibilityWithAccountInfo:]
  -[IMDCKUtilities _mocFeatureEnabled]
  -[IMDCKUtilities _isRunningInAutomation]
  -[IMDCKUtilities _setEligibleToToggleMiCSwitch:]
  -[IMDCKUtilities fetchAccountStatusAndUpdateMiCSwitchEligibilityIfNeededOnImagentLaunch]
  -[IMDCKUtilities keyRollPendingStateDidChange]
  -[IMDCKUtilities _isInExitState]
  -[IMDCKUtilities reportMOCDebuggingErrorWithString:internalOnly:initialSync:]
  -[IMDCKUtilities shouldUseDevContainer]
  -[IMDCKUtilities broadcastCloudKitStateAfterClearingErrors]
  -[IMDCKUtilities _isSyncingPausedOverride]
  -[IMDCKUtilities downgradingFromHSA2AndDisablingMOC]
  -[IMDCKUtilities shouldCollectDailyLogDump]
  -[IMDCKUtilities isCKPartialError:]
  -[IMDCKUtilities ckStatisticCalculations]
  -[IMDCKUtilities syncStateWillUpdate:]
  -[IMDCKUtilities _serverAllowsRemovalFromBackUp]
  -[IMDCKUtilities _allowDestructiveMOCFeaturesBasedOnDSID]
  -[IMDCKUtilities _primaryiCloudAccount]
  -[IMDCKUtilities _truthContainer]
  -[IMDCKUtilities serverAllowsAnalyticSubmission]
  -[IMDCKUtilities fetchiCloudAccountPersonID:]
  -[IMDCKUtilities disableAllDevicesWithCompletion:]
  -[IMDCKUtilities _deviceActive]
  -[IMDCKUtilities logCloudKitSyncToPowerLogForSyncType:isCoreDuetSync:didStartSync:didFinishSync:didSucceedSyncing:]
  -[IMDCKUtilities newfilteredArrayRemovingCKRecordIDDupes:]
  -[IMDCKUtilities cloudKitSyncingEnabled]
  -[IMDCKUtilities _accountNeedsRepairOverride]
  -[IMDCKUtilities isLocalCachedSaltPresent]
  -[IMDCKUtilities reportErrorForSyncType:syncStep:response:error:]
  -[IMDCKUtilities cloudKitSyncDownloadAssetsOnly]
  -[IMDCKUtilities newfilteredArrayRemovingCKRecordDupes:]
  -[IMDCKUtilities broadcastCloudKitStateAfterFetchingAccountStatus]
  -[IMDCKUtilities simplifiedError:]
  -[IMDCKUtilities resetLastSyncDate]
  -[IMDCKUtilities setImDefaults:]
  -[IMDCKUtilities overrideNumberOfChatsToWrite]
  -[IMDCKUtilities logCollectorAddress]
  -[IMDCKUtilities _truthDatabase]
  -[IMDCKUtilities _askToTapToRadarWithString:internalOnly:]
  -[IMDCKUtilities shouldCollectDailyLogDumpForRestoreFailures]
  -[IMDCKUtilities postSyncStateToCloudKit:]
  -[IMDCKUtilities _mininimumServerBagClientValue]
  -[IMDCKUtilities _serverAllowsCacheDelete]
  -[IMDCKUtilities accountIsVerifiedForMOCAndSafeForCacheDelete]
  -[IMDCKUtilities eligibleForTruthZoneWithCompletion:]
  -[IMDCKUtilities isDeviceCharging]
  -[IMDCKUtilities setTelemetryReporter:]
  -[IMDCKUtilities reportZoneCreation:]
  -[IMDCKUtilities reportMOCDebuggingErrorWithString:internalOnly:initialSync:sendToHandle:reasonString:]
  -[IMDCKUtilities serverAllowsAnalyticDetailsSubmission]
  -[IMDCKUtilities _shouldiCloudSwitchBeEnabled]
  -[IMDCKUtilities isSyncingPaused]
  -[IMDCKUtilities _fetchPrimaryAccountWithCompletion:]
  -[IMDCKUtilities deviceConditions]
  -[IMDCKUtilities deviceIsPhoneOrWatch]
  -[IMDCKUtilities exitManager]
  -[IMDCKUtilities isKeyRollPending]
  -[IMDCKUtilities syncFailureMetricString:isRecoverable:error:]
  -[IMDCKUtilities _resetKeepMessagesSettingandBroadcastToAllDevices]
  -[IMDCKUtilities _checkIfEnabledByServerBagOrDefault:]
  -[IMDCKUtilities fetchCloudKitAccountStatusAndUpdateEligibilityAndNeedsRepairStatusWithCompletion:]
  -[IMDCKUtilities postSyncStateToRTC:category:reportDictionary:]
  -[IMDCKUtilities overrideNumberOfChatsToFetch]
  -[IMDCKUtilities lastDeviceBackUpDate]
  -[IMDCKUtilities enableMOCIfNeeded]
  -[IMDCKUtilities _accountManager]
  -[IMDCKUtilities init]
  -[IMDCKUtilities initWithServerBag:lockDownmanager:deviceSupport:imDefaults:]
  -[IMDCKUtilities setLockdownManager:]
  -[IMDCKUtilities shouldLogDumpOnCloudKitError]
  -[IMDCKUtilities deviceSupport]
  -[IMDCKUtilities _primaryiCloudAccountAltDSID]
  -[IMDCKUtilities _shouldDisplayPopUpForResettingKeepMessages]
  -[IMDCKUtilities finalSyncStateFor:]
  -[IMDCKUtilities shouldPresentTTROnCloudKitError]
  -[IMDCKUtilities lockdownManager]
  -[IMDCKUtilities _primaryiCloudAccountSecurityLevel]
  -[IMDCKUtilities backupController]
  -[IMDCKUtilities findRootCauses:]


IMDMessageHistoryIDSTransactionLogSyncTask : NSObject <IMDMessageHistorySyncTask>
 @property  IMDAccountController *accountController
 @property  NSMutableDictionary *taskGroupedByServiceName
 @property  @? syncTaskCompletionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMDMessageHistoryIDSTransactionLogSyncTask accountController]
  -[IMDMessageHistoryIDSTransactionLogSyncTask dealloc]
  -[IMDMessageHistoryIDSTransactionLogSyncTask setAccountController:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask startSyncTask:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask syncTaskType]
  -[IMDMessageHistoryIDSTransactionLogSyncTask initWithAccountController:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask _setupAndBeginSync]
  -[IMDMessageHistoryIDSTransactionLogSyncTask _createProcessBatchBlockWithServiceSession:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask _createKnownRecordBlock]
  -[IMDMessageHistoryIDSTransactionLogSyncTask _createSyncCompletionBlockForServiceSession:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask taskGroupedByServiceName]
  -[IMDMessageHistoryIDSTransactionLogSyncTask setTaskGroupedByServiceName:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask syncTaskCompletionBlock]
  -[IMDMessageHistoryIDSTransactionLogSyncTask setSyncTaskCompletionBlock:]


IMStickerMessageProcessingPipelineComponent : IMAssociatedMessageProcessingPipelineComponent
  // instance methods
  -[IMStickerMessageProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMStickerMessageProcessingPipelineComponent createMessageItemWithInput:]


IMDMessageHistoryCKChatSyncTask : NSObject <IMDMessageHistorySyncTask>
 @property  @? syncTaskCompletionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMDMessageHistoryCKChatSyncTask dealloc]
  -[IMDMessageHistoryCKChatSyncTask startSyncTask:]
  -[IMDMessageHistoryCKChatSyncTask syncTaskType]
  -[IMDMessageHistoryCKChatSyncTask syncTaskCompletionBlock]
  -[IMDMessageHistoryCKChatSyncTask setSyncTaskCompletionBlock:]
  -[IMDMessageHistoryCKChatSyncTask initWithCKSyncController:]
  -[IMDMessageHistoryCKChatSyncTask _startICloudSyncWithActivity:]


IMDCKSyncStatsCollector : NSObject
 @property  NSMutableDictionary *inMemorySyncStatistics

  // class methods
  +[IMDCKSyncStatsCollector sharedInstance]

  // instance methods
  -[IMDCKSyncStatsCollector .cxx_destruct]
  -[IMDCKSyncStatsCollector init]
  -[IMDCKSyncStatsCollector refreshWithDBSyncStatistics]
  -[IMDCKSyncStatsCollector currentInMemorySyncStatistics]
  -[IMDCKSyncStatsCollector incrementSyncedChatCount:incrementTotalChatCount:]
  -[IMDCKSyncStatsCollector incrementSyncedMessageCount:incrementTotalMessageCount:]
  -[IMDCKSyncStatsCollector incrementSyncedAttachmentCount:incrementTotalAttachmentCount:]
  -[IMDCKSyncStatsCollector _incrementCountsForColumnSyncedKey:syncedColumnAmountToIncrease:totalColumnAmountKey:totalColumnAmountToIncrease:]
  -[IMDCKSyncStatsCollector inMemorySyncStatistics]
  -[IMDCKSyncStatsCollector setInMemorySyncStatistics:]


IMMarkUnreadRequestPipelineParameter : NSObject <IMMarkUnreadRequestProcessingParameter, IMMessageFromStorageParameter>
 @property  NSString *GUID
 @property  NSNumber *timestamp
 @property  BOOL isFromMe
 @property  BOOL isFromStorage
 @property  BOOL isLastFromStorage
 @property  NSArray *messageItems
 @property  IMDChat *chat

  // instance methods
  -[IMMarkUnreadRequestPipelineParameter GUID]
  -[IMMarkUnreadRequestPipelineParameter setTimestamp:]
  -[IMMarkUnreadRequestPipelineParameter .cxx_destruct]
  -[IMMarkUnreadRequestPipelineParameter setIsFromStorage:]
  -[IMMarkUnreadRequestPipelineParameter timestamp]
  -[IMMarkUnreadRequestPipelineParameter isFromStorage]
  -[IMMarkUnreadRequestPipelineParameter isFromMe]
  -[IMMarkUnreadRequestPipelineParameter setChat:]
  -[IMMarkUnreadRequestPipelineParameter chat]
  -[IMMarkUnreadRequestPipelineParameter setIsFromMe:]
  -[IMMarkUnreadRequestPipelineParameter setGUID:]
  -[IMMarkUnreadRequestPipelineParameter isLastFromStorage]
  -[IMMarkUnreadRequestPipelineParameter setMessageItems:]
  -[IMMarkUnreadRequestPipelineParameter messageItems]
  -[IMMarkUnreadRequestPipelineParameter setIsLastFromStorage:]
  -[IMMarkUnreadRequestPipelineParameter initWithBD:isFromMe:]


IMDClientRequestContext : NSObject
 @property  NSString *listenerID
 @property  {?=[8I]} auditToken
 @property  unsigned long capabilities
 @property  <IMDaemonListenerProtocol> *replyProxy

  // class methods
  +[IMDClientRequestContext setCurrentContext:]
  +[IMDClientRequestContext currentContext]

  // instance methods
  -[IMDClientRequestContext listenerID]
  -[IMDClientRequestContext .cxx_destruct]
  -[IMDClientRequestContext capabilities]
  -[IMDClientRequestContext auditToken]
  -[IMDClientRequestContext initWithListenerID:auditToken:capabilities:replyProxy:]
  -[IMDClientRequestContext replyProxy]


IMDCKSyncTokenStore : NSObject <IMDCKSyncTokenStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDCKSyncTokenStore migrateKey:fromDatabase:]
  +[IMDCKSyncTokenStore tokenForKey:]
  +[IMDCKSyncTokenStore persistToken:forKey:]

  // instance methods
  -[IMDCKSyncTokenStore migrateKey:fromDatabase:]
  -[IMDCKSyncTokenStore tokenForKey:]
  -[IMDCKSyncTokenStore persistToken:forKey:]


IMDService : NSObject <IMSystemMonitorListener>
 @property  NSDictionary *serviceProperties
 @property  Class sessionClass
 @property  Class accountClass
 @property  NSBundle *bundle
 @property  NSString *internalName
 @property  NSString *serviceDomain
 @property  BOOL isIDSBased
 @property  BOOL isLegacy
 @property  BOOL discontinued
 @property  NSDictionary *serviceDefaults
 @property  NSDictionary *serviceDefaultsForSetup
 @property  NSDictionary *defaultAccountSettings
 @property  BOOL serviceRequiresSingleAccount
 @property  BOOL shouldCreateActiveAccounts
 @property  BOOL serviceWantsNullHostReachability
 @property  BOOL serviceIgnoresNetworkConnectivity
 @property  BOOL shouldForceAccountsActive
 @property  BOOL shouldForceAccountsConnected
 @property  BOOL serviceNeedsLogin
 @property  BOOL serviceNeedsPassword
 @property  BOOL serviceShouldBeAlwaysLoggedIn
 @property  BOOL serviceRequiresHost
 @property  BOOL serviceSupportsRegistration
 @property  BOOL serviceSupportsAuthorization
 @property  BOOL serviceChatsIgnoreLoginStatus
 @property  BOOL serviceSupportsPresence
 @property  BOOL serviceSupportsOneSessionForAllAccounts
 @property  BOOL supportsDatabase
 @property  BOOL disallowDeactivation
 @property  long long serviceProtocolVersion

  // instance methods
  -[IMDService synchronizeServiceDefaults]
  -[IMDService internalName]
  -[IMDService accountRemoved:]
  -[IMDService serviceDefaults]
  -[IMDService serviceRequiresSingleAccount]
  -[IMDService serviceNeedsLogin]
  -[IMDService _copyServicePropertiesFromIMServiceBundle:]
  -[IMDService loadServiceBundle]
  -[IMDService disableAccount:]
  -[IMDService serviceSupportsOneSessionForAllAccounts]
  -[IMDService serviceDomain]
  -[IMDService serviceIgnoresNetworkConnectivity]
  -[IMDService purgeMemoryCaches]
  -[IMDService enableAccount:]
  -[IMDService _oldServiceDomain]
  -[IMDService supportsDatabase]
  -[IMDService mainService]
  -[IMDService serviceRequiresHost]
  -[IMDService clearOneTimeImportAccounts]
  -[IMDService systemDidEnterMemoryPressure]
  -[IMDService serviceSupportsPresence]
  -[IMDService serviceProtocolVersion]
  -[IMDService _defaultDefaults]
  -[IMDService unloadServiceBundle]
  -[IMDService systemDidStartBackup]
  -[IMDService shouldForceAccountsConnected]
  -[IMDService accountAdded:]
  -[IMDService delayedSaveSettings]
  -[IMDService saveSettings]
  -[IMDService _serviceDomain]
  -[IMDService setServiceProperties:]
  -[IMDService serviceDefaultsForSetup]
  -[IMDService serviceShouldBeAlwaysLoggedIn]
  -[IMDService oldInternalName]
  -[IMDService createDiscontinuedAccount]
  -[IMDService _reallyUnloadServiceBundle]
  -[IMDService sessionClass]
  -[IMDService accountClass]
  -[IMDService isDiscontinued]
  -[IMDService defaultAccountSettings]
  -[IMDService bundle]
  -[IMDService initWithBundle:]
  -[IMDService serviceProperties]
  -[IMDService serviceSupportsAuthorization]
  -[IMDService _serviceDefaultsForDomain:]
  -[IMDService serviceSupportsRegistration]
  -[IMDService serviceWantsNullHostReachability]
  -[IMDService isLegacy]
  -[IMDService shouldCreateActiveAccounts]
  -[IMDService serviceChatsIgnoreLoginStatus]
  -[IMDService serviceNeedsPassword]
  -[IMDService dealloc]
  -[IMDService newAccountWithAccountDefaults:accountID:]
  -[IMDService isIDSBased]
  -[IMDService disallowDeactivation]
  -[IMDService shouldForceAccountsActive]


IMStickerMessagePipelineParameter : IMAssociatedMessagePipelineParameter <IMStickerMessageProcessingParameter>
  // instance methods
  -[IMStickerMessagePipelineParameter initWithBD:idsTrustedData:]
  -[IMStickerMessagePipelineParameter supportsStickerAttributesInMessageBody]


IMDScreenTimeAskReponseHandler : NSObject
  // instance methods
  -[IMDScreenTimeAskReponseHandler canHandleNotificationResponse:userNotificationCenter:]
  -[IMDScreenTimeAskReponseHandler handleNotificationResponse:userNotificationCenter:completionHandler:]


IMDMessageActiveDevice : NSObject
 @property  NSString *idsDestination
 @property  NSDate *latestActiveDate
 @property  BOOL hasReceivedReadReceipt
 @property  NSDate *latestReadReceipt

  // instance methods
  -[IMDMessageActiveDevice .cxx_destruct]
  -[IMDMessageActiveDevice isEqual:]
  -[IMDMessageActiveDevice idsDestination]
  -[IMDMessageActiveDevice setIdsDestination:]
  -[IMDMessageActiveDevice initWithIDSDestination:latestDate:latestReadReceiptDate:hasReceivedReadReceipt:]
  -[IMDMessageActiveDevice _hasReceivedReadReceiptRecently]
  -[IMDMessageActiveDevice shouldSendTypingIndicator]
  -[IMDMessageActiveDevice shouldDisplayAttachmentDownloadFailure]
  -[IMDMessageActiveDevice shouldDisplayRemoteDecryptionFailure]
  -[IMDMessageActiveDevice latestActiveDate]
  -[IMDMessageActiveDevice setLatestActiveDate:]
  -[IMDMessageActiveDevice hasReceivedReadReceipt]
  -[IMDMessageActiveDevice setHasReceivedReadReceipt:]
  -[IMDMessageActiveDevice latestReadReceipt]
  -[IMDMessageActiveDevice setLatestReadReceipt:]


IMDaemonCoreHelloWorldClass : NSObject
  // instance methods
  -[IMDaemonCoreHelloWorldClass .cxx_destruct]
  -[IMDaemonCoreHelloWorldClass init]
  -[IMDaemonCoreHelloWorldClass printGreeting]


IMDOneTimeCodeManager : NSObject
 @property  NSArray *validCodes
 @property  NSTimer *codeInvalidationTimer
 @property  <IMDaemonListenerProtocol> *broadcaster
 @property  <IMDaemonListenerProtocol> *broadcasterOverride
 @property  IMOneTimeCodeUtilities *otcUtilities

  // class methods
  +[IMDOneTimeCodeManager sharedInstance]

  // instance methods
  -[IMDOneTimeCodeManager consumeCodeWithGuid:]
  -[IMDOneTimeCodeManager dealloc]
  -[IMDOneTimeCodeManager broadcaster]
  -[IMDOneTimeCodeManager init]
  -[IMDOneTimeCodeManager setBroadcaster:]
  -[IMDOneTimeCodeManager initWithBroadcaster:otcUtilities:]
  -[IMDOneTimeCodeManager startTrackingCode:]
  -[IMDOneTimeCodeManager broadcastCodeStatusToClients]
  -[IMDOneTimeCodeManager otcUtilities]
  -[IMDOneTimeCodeManager _setNewCodeAndPrepareInvalidationTimer:]
  -[IMDOneTimeCodeManager validCodes]
  -[IMDOneTimeCodeManager setValidCodes:]
  -[IMDOneTimeCodeManager codeInvalidationTimer]
  -[IMDOneTimeCodeManager setCodeInvalidationTimer:]
  -[IMDOneTimeCodeManager broadcasterOverride]
  -[IMDOneTimeCodeManager setBroadcasterOverride:]
  -[IMDOneTimeCodeManager setOtcUtilities:]


IMNotifyRecipientCommandPipelineParameter : NSObject <IMNotifyRecipientCommandProcessingParameter, IMMessageFromStorageParameter>
 @property  IMDiMessageIDSTrustedData *idsTrustedData
 @property  NSString *GUID
 @property  NSNumber *timestamp
 @property  BOOL isFromStorage
 @property  BOOL isLastFromStorage
 @property  NSArray *messageItems
 @property  IMDChat *chat

  // instance methods
  -[IMNotifyRecipientCommandPipelineParameter GUID]
  -[IMNotifyRecipientCommandPipelineParameter .cxx_destruct]
  -[IMNotifyRecipientCommandPipelineParameter timestamp]
  -[IMNotifyRecipientCommandPipelineParameter isFromStorage]
  -[IMNotifyRecipientCommandPipelineParameter setChat:]
  -[IMNotifyRecipientCommandPipelineParameter chat]
  -[IMNotifyRecipientCommandPipelineParameter isLastFromStorage]
  -[IMNotifyRecipientCommandPipelineParameter setMessageItems:]
  -[IMNotifyRecipientCommandPipelineParameter messageItems]
  -[IMNotifyRecipientCommandPipelineParameter idsTrustedData]
  -[IMNotifyRecipientCommandPipelineParameter initWithDefusedMessage:idsTrustedData:]
  -[IMNotifyRecipientCommandPipelineParameter initWithIdsTrustedData:GUID:timestamp:isFromStorage:isLastFromStorage:]


IMDSoundUtilities : NSObject
  // class methods
  +[IMDSoundUtilities playMessageSentSoundIfNeeded:]
  +[IMDSoundUtilities _soundTypeForMessage:]
  +[IMDSoundUtilities _smsSoundsToPlay]
  +[IMDSoundUtilities _playSoundType:]
  +[IMDSoundUtilities _installSystemSound:]
  +[IMDSoundUtilities _playAcknowledgmentSentSound]
  +[IMDSoundUtilities _playSMSSound]
  +[IMDSoundUtilities _isSMSMessage:]
  +[IMDSoundUtilities _wasDowngraded:]
  +[IMDSoundUtilities _isSuppressedForGUID:]
  +[IMDSoundUtilities _stopSuppressingForGUID:]
  +[IMDSoundUtilities _isAssociatedMessage:]
  +[IMDSoundUtilities _isAcknowledgmentMessage:]
  +[IMDSoundUtilities _isAutoPlay:]


IMEditMessageCommandPipelineParameter : NSObject <IMEditMessageCommandProcessingParameter, IMMessageFromStorageParameter>
 @property  IMDiMessageIDSTrustedData *idsTrustedData
 @property  NSString *editCommandGUID
 @property  NSNumber *timestamp
 @property  BOOL isFromStorage
 @property  BOOL isLastFromStorage
 @property  NSString *editedMessageGUID
 @property  long long editedMessagePartIndex
 @property  unsigned long editType
 @property  NSAttributedString *editedMessagePartBody
 @property  NSArray *editedMessagePartFileTransferGUIDs
 @property  BOOL shouldRetractMessageSubject
 @property  BOOL hasEditTypeAndPartIndex
 @property  NSAttributedString *fullMessageBody
 @property  NSString *fullMessagePlainTextBody
 @property  NSString *fullMessagePlainTextSubject
 @property  NSArray *fullMessageFileTransferGUIDs
 @property  NSArray *messageItems
 @property  IMDChat *chat

  // instance methods
  -[IMEditMessageCommandPipelineParameter GUID]
  -[IMEditMessageCommandPipelineParameter .cxx_destruct]
  -[IMEditMessageCommandPipelineParameter timestamp]
  -[IMEditMessageCommandPipelineParameter isFromStorage]
  -[IMEditMessageCommandPipelineParameter setChat:]
  -[IMEditMessageCommandPipelineParameter chat]
  -[IMEditMessageCommandPipelineParameter editedMessageGUID]
  -[IMEditMessageCommandPipelineParameter editType]
  -[IMEditMessageCommandPipelineParameter editedMessagePartIndex]
  -[IMEditMessageCommandPipelineParameter editedMessagePartBody]
  -[IMEditMessageCommandPipelineParameter isLastFromStorage]
  -[IMEditMessageCommandPipelineParameter setMessageItems:]
  -[IMEditMessageCommandPipelineParameter messageItems]
  -[IMEditMessageCommandPipelineParameter idsTrustedData]
  -[IMEditMessageCommandPipelineParameter initWithDefusedMessage:idsTrustedData:]
  -[IMEditMessageCommandPipelineParameter editCommandGUID]
  -[IMEditMessageCommandPipelineParameter editedMessagePartFileTransferGUIDs]
  -[IMEditMessageCommandPipelineParameter shouldRetractMessageSubject]
  -[IMEditMessageCommandPipelineParameter hasEditTypeAndPartIndex]
  -[IMEditMessageCommandPipelineParameter fullMessageBody]
  -[IMEditMessageCommandPipelineParameter fullMessagePlainTextBody]
  -[IMEditMessageCommandPipelineParameter fullMessagePlainTextSubject]
  -[IMEditMessageCommandPipelineParameter fullMessageFileTransferGUIDs]
  -[IMEditMessageCommandPipelineParameter initWithIdsTrustedData:editCommandGUID:timestamp:isFromStorage:isLastFromStorage:fullMessageBody:fullMessagePlainTextBody:fullMessagePlainTextSubject:fullMessageFileTransferGUIDs:editedMessageGUID:editedMessagePartIndex:editType:editedMessagePartBody:editedMessagePartFileTransferGUIDs:shouldRetractMessageSubject:hasEditTypeAndPartIndex:]
  -[IMEditMessageCommandPipelineParameter _createSuperFormattedStringWithAttributedString:]
  -[IMEditMessageCommandPipelineParameter _existingFileTransfersForMessageGuid:]
  -[IMEditMessageCommandPipelineParameter _messageItemEditTypeForBlastdoorEditType:]


IMDeliveredQuietlyReceiptProcessingPipelineComponent : IMPipelineComponent
 @property  IMDiMessagePipelineResources *pipelineResources

  // instance methods
  -[IMDeliveredQuietlyReceiptProcessingPipelineComponent _account]
  -[IMDeliveredQuietlyReceiptProcessingPipelineComponent .cxx_destruct]
  -[IMDeliveredQuietlyReceiptProcessingPipelineComponent _messageStore]
  -[IMDeliveredQuietlyReceiptProcessingPipelineComponent _idsAccount]
  -[IMDeliveredQuietlyReceiptProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMDeliveredQuietlyReceiptProcessingPipelineComponent initWithPipelineResources:]
  -[IMDeliveredQuietlyReceiptProcessingPipelineComponent _markMessageAsDeliveredQuietlyAndNotify:session:chat:]
  -[IMDeliveredQuietlyReceiptProcessingPipelineComponent pipelineResources]


IMDMessageProcessingController : NSObject
 @property  <IMDMessagePTaskStore> *pTaskStore
 @property  NSTimer *processingTimer

  // instance methods
  -[IMDMessageProcessingController _scheduleDeferredProcessingWithTimeInterval:]
  -[IMDMessageProcessingController initWithMessagesPTaskStore:]
  -[IMDMessageProcessingController messageProcessingTaskAdded:]
  -[IMDMessageProcessingController dealloc]
  -[IMDMessageProcessingController processingTimer]
  -[IMDMessageProcessingController _xpc_IMDCoreSpotlightAddMessageGUID:]
  -[IMDMessageProcessingController _pref_IMDCoreSpotlightHasMigrated]
  -[IMDMessageProcessingController setPTaskStore:]
  -[IMDMessageProcessingController _processingTimerFired]
  -[IMDMessageProcessingController _indexSpotlightIfNeedForPTask:]
  -[IMDMessageProcessingController scheduleInitialProcessingCheck]
  -[IMDMessageProcessingController init]
  -[IMDMessageProcessingController setProcessingTimer:]
  -[IMDMessageProcessingController pTaskStore]


IMDCollaborationNoticeTypeGenerator : NSObject
  // class methods
  +[IMDCollaborationNoticeTypeGenerator typeForHighlightEvent:]
  +[IMDCollaborationNoticeTypeGenerator processMentionForPerson:]


IMDSpamMessageCreator : NSObject
  // instance methods
  -[IMDSpamMessageCreator transferForGuid:]
  -[IMDSpamMessageCreator reportMessageDictionaryForMessages:withLastAddressedHandle:maxMessageLength:isAutoReport:withChat:maxMessagesToReport:totalMessageCount:onlyReportForiMessageService:notifyInternalSecurity:]
  -[IMDSpamMessageCreator reportUnknownToIDS:messageID:isBlackholed:messageServerTimestamp:toURI:]
  -[IMDSpamMessageCreator isSurfPayment:]
  -[IMDSpamMessageCreator metaDataForSurfURL:]
  -[IMDSpamMessageCreator hasDataDetectedInformalPayment:]
  -[IMDSpamMessageCreator surfURLForIMMessageItem:]


IMDWorkQueue : NSObject
  // class methods
  +[IMDWorkQueue enqueueBlock:]


IMDServiceSession : NSObject <IMSystemMonitorListener, IMConnectionMonitorDelegate, IMServiceSessionProtocol>
 @property  NSArray *allBuddies
 @property  NSDictionary *buddyProperties
 @property  NSDictionary *buddyPictures
 @property  int registrationStatus
 @property  int registrationError
 @property  NSDictionary *registrationAlertInfo
 @property  IMDChatRegistry *chatRegistry
 @property  IMDAccount *account
 @property  IMDService *service
 @property  NSArray *accounts
 @property  NSString *accountID
 @property  NSString *password
 @property  NSDictionary *accountDefaults
 @property  NSString *serverHost
 @property  unsigned short serverPort
 @property  long long proxyType
 @property  NSString *proxyHost
 @property  unsigned short proxyPort
 @property  NSString *proxyAccount
 @property  NSString *proxyPassword
 @property  BOOL useSSL
 @property  BOOL isActive
 @property  NSString *displayName
 @property  BOOL accountNeedsLogin
 @property  BOOL accountNeedsPassword
 @property  BOOL accountShouldBeAlwaysLoggedIn
 @property  BOOL allowedAsChild
 @property  BOOL networkConditionsAllowLogin
 @property  BOOL overrideNetworkAvailability

  // class methods
  +[IMDServiceSession initialize]
  +[IMDServiceSession __allServiceSessionsWeakReferenceArray]
  +[IMDServiceSession __registerNewServiceSession:]
  +[IMDServiceSession allServiceSessions]
  +[IMDServiceSession existingServiceSessionForService:]
  +[IMDServiceSession _firewallUserNotificationForService:]

  // instance methods
  -[IMDServiceSession loginID]
  -[IMDServiceSession unregisterAccount:]
  -[IMDServiceSession addAccount:]
  -[IMDServiceSession loginServiceSessionWithAccount:]
  -[IMDServiceSession replayMessage:]
  -[IMDServiceSession accounts]
  -[IMDServiceSession removeAccount:]
  -[IMDServiceSession sessionDidBecomeActive]
  -[IMDServiceSession removePersonInfoFromiMessageChat:chatID:identifier:style:]
  -[IMDServiceSession logout]
  -[IMDServiceSession groups]
  -[IMDServiceSession registrationError]
  -[IMDServiceSession updateAuthorizationCredentials:token:account:]
  -[IMDServiceSession unvalidateAliases:account:]
  -[IMDServiceSession account]
  -[IMDServiceSession logoutServiceSessionWithAccount:]
  -[IMDServiceSession authenticateAccount:]
  -[IMDServiceSession leaveiMessageChat:style:]
  -[IMDServiceSession accountID]
  -[IMDServiceSession removeAliases:account:]
  -[IMDServiceSession validateAliases:account:]
  -[IMDServiceSession sendLocationSharingInfo:toID:completionBlock:]
  -[IMDServiceSession passwordUpdatedWithAccount:]
  -[IMDServiceSession registerAccount:]
  -[IMDServiceSession addAliases:account:]
  -[IMDServiceSession initWithAccount:service:]
  -[IMDServiceSession sendDeliveredQuietlyReceiptForMessage:forIncomingMessageFromIDSID:toChatGuid:identifier:style:withWillSendToDestinationsHandler:]
  -[IMDServiceSession sessionWillBecomeInactiveWithAccount:]
  -[IMDServiceSession canonicalFormOfID:]
  -[IMDServiceSession decrementPendingReadReceiptFromStorageCount]
  -[IMDServiceSession validateProfileWithAccount:]
  -[IMDServiceSession sendDeliveryReceiptForMessageID:toID:deliveryContext:needsDeliveryReceipt:callerID:account:]
  -[IMDServiceSession setPendingReadReceiptFromStorageCount:]
  -[IMDServiceSession incrementPendingReadReceiptFromStorageCount]
  -[IMDServiceSession scheduleTransactionLogTask:]
  -[IMDServiceSession sendNotifyRecipientCommandForMessage:toChatGuid:identifier:style:]
  -[IMDServiceSession eagerUploadTransfer:recipients:]
  -[IMDServiceSession _watchdogTimerFired]
  -[IMDServiceSession sendNicknameUpdatesToPeerDevices:toDestinations:]
  -[IMDServiceSession updateDisplayName:fromDisplayName:forChatID:identifier:style:]
  -[IMDServiceSession processNetworkDataAvailabilityChange:]
  -[IMDServiceSession eagerUploadCancel:]
  -[IMDServiceSession _shouldBlackholeGroupChatFromSender:toRecipient:withOtherParticipants:forAccount:]
  -[IMDServiceSession accountDefaults]
  -[IMDServiceSession noteLastItemFromStorage:]
  -[IMDServiceSession respondToVCInvitationWithPerson:properties:conference:]
  -[IMDServiceSession _blastDoorProcessingWithIMMessageItem:chat:account:fromToken:fromIDSID:fromIdentifier:toIdentifier:participants:groupName:groupID:isEncrypted:isFromMe:isLastFromStorage:isFromStorage:hideLockScreenNotification:wantsCheckpointing:needsDeliveryReceipt:messageBalloonPayloadAttachmentDictionary:inlineAttachments:attributionInfoArray:nicknameDictionary:availabilityVerificationRecipientChannelIDPrefix:availabilityVerificationRecipientEncryptionValidationToken:messageContext:completionBlock:]
  -[IMDServiceSession sendLogDumpMessageAtFilePath:toRecipient:shouldDeleteFile:withCompletion:]
  -[IMDServiceSession refreshServiceCapabilities]
  -[IMDServiceSession sendAVMessageToPerson:sessionID:type:userInfo:conference:]
  -[IMDServiceSession sendCommand:withProperties:toPerson:toChatID:identifier:style:]
  -[IMDServiceSession equalID:andID:]
  -[IMDServiceSession dealloc]
  -[IMDServiceSession relay:sendUpdate:toPerson:]
  -[IMDServiceSession didReceiveMessages:forChat:style:account:fromIDSID:]
  -[IMDServiceSession isActive]
  -[IMDServiceSession invitePersonInfoToiMessageChat:withMessage:toChat:style:]
  -[IMDServiceSession retryGroupPhotoUpload:toChatID:identifier:style:account:]
  -[IMDServiceSession _managedPrefsNotification:]
  -[IMDServiceSession sendPlayedReceiptForMessage:toChatID:identifier:style:]
  -[IMDServiceSession sendNicknameInfoToChatID:]
  -[IMDServiceSession requestVCWithPerson:properties:conference:]
  -[IMDServiceSession capabilities]
  -[IMDServiceSession storageController]
  -[IMDServiceSession broadcaster]
  -[IMDServiceSession requestProperty:ofPerson:]
  -[IMDServiceSession noteItemFromStorage:]
  -[IMDServiceSession invitePersonInfo:withMessage:toChat:style:]
  -[IMDServiceSession closeSessionChat:style:]
  -[IMDServiceSession service]
  -[IMDServiceSession connectionMonitorDidUpdate:]
  -[IMDServiceSession sendJunkReportMessage:]
  -[IMDServiceSession hasCapability:]
  -[IMDServiceSession leaveChat:style:]
  -[IMDServiceSession endMessageSuppression]
  -[IMDServiceSession sendMessage:toChat:style:]
  -[IMDServiceSession canMakeExpireStateChecks]
  -[IMDServiceSession noteMessagesMarkedAsReadForChatWithGUID:]
  -[IMDServiceSession joinChat:handleInfo:style:groupID:lastAddressedHandle:lastAddressedSIMID:joinProperties:]
  -[IMDServiceSession server]
  -[IMDServiceSession joinChat:handleInfo:style:groupID:joinProperties:]
  -[IMDServiceSession _sharedMessageStore]
  -[IMDServiceSession overrideNetworkAvailability]
  -[IMDServiceSession sendReadReceiptForMessage:toChatID:identifier:style:]
  -[IMDServiceSession sendDeleteCommand:forChatGUID:]
  -[IMDServiceSession removePersonInfo:chatID:identifier:style:]
  -[IMDServiceSession sendCommand:withProperties:toPerson:]
  -[IMDServiceSession systemDidUnlock]
  -[IMDServiceSession chatRegistry]
  -[IMDServiceSession password]
  -[IMDServiceSession pendingReadReceiptFromStorageCount]
  -[IMDServiceSession relay:sendInitateRequest:toPerson:]
  -[IMDServiceSession itemWithGUID:]
  -[IMDServiceSession registrationStatus]
  -[IMDServiceSession displayName]
  -[IMDServiceSession sendGroupPhotoUpdate:toChatID:identifier:style:account:]
  -[IMDServiceSession setAllowList:]
  -[IMDServiceSession sendSavedReceiptForMessage:toChatID:identifier:style:]
  -[IMDServiceSession isAwaitingStorageTimer]
  -[IMDServiceSession relay:sendCancel:toPerson:]
  -[IMDServiceSession networkConditionsAllowLogin]
  -[IMDServiceSession processMessageForSending:toChat:style:allowWatchdog:completionBlock:]
  -[IMDServiceSession sendSyndicationAction:toChatsWithIdentifiers:]
  -[IMDServiceSession serverPort]
  -[IMDServiceSession reflectMarkUnreadToPeerDevicesForMessageGUID:]
  -[IMDServiceSession allowList]
  -[IMDServiceSession registrationAlertInfo]
  -[IMDServiceSession requestGroupPhotoIfNecessary:incomingGroupPhotoCreationTime:toIdentifier:fromIdentifier:messageIsFromStorage:]
  -[IMDServiceSession sendEditedMessage:previousMessage:partIndex:editType:toChatIdentifier:style:account:backwardCompatabilityText:]
  -[IMDServiceSession enqueReplayMessageCallback:]
  -[IMDServiceSession noteSuppressedMessageUpdate:]
  -[IMDServiceSession noteLastItemProcessed]
  -[IMDServiceSession _IDSService]
  -[IMDServiceSession proxyType]
  -[IMDServiceSession _isActivated]
  -[IMDServiceSession _reconnectIfNecessary]
  -[IMDServiceSession systemProxySettingsFetcher:retrievedAccount:password:]
  -[IMDServiceSession systemProxySettingsFetcher:retrievedHost:port:protocol:]
  -[IMDServiceSession userNotificationDidFinish:]
  -[IMDServiceSession sendSavedReceiptForMessage:toChatID:identifier:style:account:]
  -[IMDServiceSession proxyPort]
  -[IMDServiceSession proxyPassword]
  -[IMDServiceSession useSSL]
  -[IMDServiceSession proxyHost]
  -[IMDServiceSession login]
  -[IMDServiceSession autoLogin]
  -[IMDServiceSession setBlockList:]
  -[IMDServiceSession blockList]
  -[IMDServiceSession blockingMode]
  -[IMDServiceSession setBlockingMode:]
  -[IMDServiceSession setBlockIdleStatus:]
  -[IMDServiceSession requestGroups]
  -[IMDServiceSession renameGroup:to:]
  -[IMDServiceSession holdBuddyUpdates]
  -[IMDServiceSession resumeBuddyUpdates]
  -[IMDServiceSession defaultChatSuffix]
  -[IMDServiceSession validityOfChatRoomName:]
  -[IMDServiceSession blockIdleStatus]
  -[IMDServiceSession serverHost]
  -[IMDServiceSession setRegistrationStatus:error:alertInfo:]
  -[IMDServiceSession otcUtilities]
  -[IMDServiceSession _networkChanged:]
  -[IMDServiceSession _callMonitorStateChanged:]
  -[IMDServiceSession _processConnectionMonitorUpdate]
  -[IMDServiceSession autoReconnect]
  -[IMDServiceSession autoReconnectWithAccount:]
  -[IMDServiceSession loginWithAccount:]
  -[IMDServiceSession logoutWithAccount:]
  -[IMDServiceSession changeGroups:]
  -[IMDServiceSession changeGroup:changes:]
  -[IMDServiceSession acceptSubscriptionRequest:from:]
  -[IMDServiceSession requestSubscriptionTo:]
  -[IMDServiceSession startWatchingBuddy:]
  -[IMDServiceSession stopWatchingBuddy:]
  -[IMDServiceSession setValue:ofProperty:ofPerson:]
  -[IMDServiceSession joinChatID:handleInfo:identifier:style:groupID:lastAddressedHandle:lastAddressedSIMID:joinProperties:]
  -[IMDServiceSession leaveChatID:identifier:style:]
  -[IMDServiceSession leaveiMessageChatID:identifier:style:]
  -[IMDServiceSession removeChatID:identifier:style:]
  -[IMDServiceSession invitePersonInfo:withMessage:toChatID:identifier:style:]
  -[IMDServiceSession invitePersonInfoToiMessageChat:withMessage:toChatID:identifier:style:]
  -[IMDServiceSession declineInvitationToChatID:identifier:style:]
  -[IMDServiceSession sendMessage:toChatID:identifier:style:]
  -[IMDServiceSession setProperties:ofParticipant:inChatID:identifier:style:]
  -[IMDServiceSession sendCounterProposalToPerson:properties:conference:]
  -[IMDServiceSession sendVCUpdate:toPerson:conference:]
  -[IMDServiceSession closeSessionChatID:identifier:style:]
  -[IMDServiceSession accountNeedsLogin]
  -[IMDServiceSession accountNeedsPassword]
  -[IMDServiceSession accountShouldBeAlwaysLoggedIn]
  -[IMDServiceSession _clearConnectionMonitor]
  -[IMDServiceSession _updateConnectionMonitorWithRemoteHost:]
  -[IMDServiceSession updateConnectionMonitorWithLocalSocketAddress:remoteSocketAddress:]
  -[IMDServiceSession _updateConnectionMonitorFromAccountDefaultsIgnoringProxy:]
  -[IMDServiceSession _reconnectIfNecessaryWithAccount:]
  -[IMDServiceSession _setPendingConnectionMonitorUpdate]
  -[IMDServiceSession _processPotentialNetworkChange]
  -[IMDServiceSession allowedAsChild]
  -[IMDServiceSession canonicalFormOfChatRoom:]
  -[IMDServiceSession broadcasterForChatListeners]
  -[IMDServiceSession broadcasterForChatListenersWithBlackholeStatus:]
  -[IMDServiceSession broadcasterForChatObserverListeners]
  -[IMDServiceSession broadcasterForAVConferenceListeners]
  -[IMDServiceSession broadcasterForACConferenceListeners]
  -[IMDServiceSession broadcasterForVCConferenceListeners]
  -[IMDServiceSession broadcasterForNotificationsListeners]
  -[IMDServiceSession _clearDowngradeMarkersForChat:]
  -[IMDServiceSession shouldInferRecoverableDeleteForCommandDictionary:]
  -[IMDServiceSession deleteCommandDictionaryWithIncomingDictionary:inferredRecoverableDeleteForLegacyCommandsWithDate:]
  -[IMDServiceSession _blocklistIfNeededForChatDict:]
  -[IMDServiceSession deleteChatsForCommandDictionary:]
  -[IMDServiceSession deleteMessagesForCommandDictionary:]
  -[IMDServiceSession recoverChatsForCommandDictionary:]
  -[IMDServiceSession deleteMessagePartsForCommandDictionary:]
  -[IMDServiceSession _updateLastMessageTimeStampForChat:broadcaster:]
  -[IMDServiceSession proxyAccount]
  -[IMDServiceSession setChatRegistry:]
  -[IMDServiceSession _routingTimerFired]
  -[IMDServiceSession _expireStateTimerFired]
  -[IMDServiceSession _IMDStoreMessage:inMessage:forceReplace:modifyError:modifyFlags:calculateUnreadCount:flagMask:shouldStoreBlock:didStoreBlock:block:]
  -[IMDServiceSession _sharedAccountController]
  -[IMDServiceSession useChatRoom:forGroupChatIdentifier:]
  -[IMDServiceSession groupChatIdentifierForChatRoom:]
  -[IMDServiceSession chatRoomForGroupChatIdentifier:]
  -[IMDServiceSession _newHashForChat:style:]
  -[IMDServiceSession registerChat:groupID:style:]
  -[IMDServiceSession registerChat:style:]
  -[IMDServiceSession registerChat:style:handleInfo:]
  -[IMDServiceSession registerChat:style:displayName:groupID:handleInfo:]
  -[IMDServiceSession registerChat:style:displayName:groupID:handleInfo:account:]
  -[IMDServiceSession registerChat:style:displayName:groupID:lastAddressedHandle:handleInfo:account:isBlackholed:]
  -[IMDServiceSession registerChat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:account:isBlackholed:]
  -[IMDServiceSession canonicalizeChatIdentifier:style:]
  -[IMDServiceSession _mapRoomChatToGroupChat:style:]
  -[IMDServiceSession existingChatsForGroupID:]
  -[IMDServiceSession existingChatsForIDs:style:]
  -[IMDServiceSession chatForChatIdentifier:style:]
  -[IMDServiceSession chatForChatIdentifier:style:account:]
  -[IMDServiceSession processMessageForSending:toChat:style:allowWatchdog:account:completionBlock:]
  -[IMDServiceSession _configureAccountInformationOnItem:withAccount:]
  -[IMDServiceSession _configureTimeOnOutgoingItem:]
  -[IMDServiceSession _configureIdentifierForOutgoingItem:withIdentifier:withStyle:]
  -[IMDServiceSession _configureSessionInformationOnItem:toChat:withStyle:forAccount:]
  -[IMDServiceSession _setOutgoingFlagsOnMessage:]
  -[IMDServiceSession _messageStoreCompletion:inputMessage:outputMessage:originalMessage:completionBlock:]
  -[IMDServiceSession _determineResultMessageForInput:output:original:]
  -[IMDServiceSession _shouldDropSendingMessage]
  -[IMDServiceSession chatForItemWithGUID:]
  -[IMDServiceSession storeItem:toChat:style:]
  -[IMDServiceSession sendMessage:toChat:style:account:]
  -[IMDServiceSession didLeaveChat:style:]
  -[IMDServiceSession didLeaveChat:style:account:]
  -[IMDServiceSession didJoinChat:style:]
  -[IMDServiceSession didJoinChat:style:handleInfo:]
  -[IMDServiceSession didJoinChat:style:handleInfo:account:]
  -[IMDServiceSession didJoinChat:style:displayName:groupID:handleInfo:]
  -[IMDServiceSession didJoinChat:style:displayName:groupID:lastAddressedHandle:handleInfo:]
  -[IMDServiceSession didJoinChat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:]
  -[IMDServiceSession didJoinChat:style:displayName:groupID:handleInfo:category:spamExtensionName:]
  -[IMDServiceSession didJoinChat:style:displayName:groupID:handleInfo:account:isBlackholed:]
  -[IMDServiceSession didJoinReadOnlyChat:style:displayName:groupID:handleInfo:category:spamExtensionName:]
  -[IMDServiceSession didReceiveReplaceMessageID:forChat:style:]
  -[IMDServiceSession didReceiveErrorMessage:forChat:style:]
  -[IMDServiceSession didReceiveError:forMessageID:forceError:]
  -[IMDServiceSession didReceiveError:forMessageID:forceError:account:]
  -[IMDServiceSession didReceiveMessageEditingUnsupportedHandleIDs:forMessageGUID:partIndex:previousMessage:backwardCompatibilityMessageGUID:]
  -[IMDServiceSession didReceiveMessageEditingSendFailure:forMessageGUID:previousMessage:]
  -[IMDServiceSession didSendMessageEditForMessageGUID:]
  -[IMDServiceSession didSendMessageReadReceiptForMessageID:]
  -[IMDServiceSession didSendMessageReadReceiptForMessageID:account:]
  -[IMDServiceSession didSendDeliveredQuietlyReceiptForMessageID:]
  -[IMDServiceSession didSendDeliveredQuietlyReceiptForMessageID:account:]
  -[IMDServiceSession didSendNotifyRecipientCommandForMessageID:]
  -[IMDServiceSession didSendNotifyRecipientCommandForMessageID:account:]
  -[IMDServiceSession didSendMessagePlayedReceiptForMessageID:]
  -[IMDServiceSession didSendMessagePlayedReceiptForMessageID:account:]
  -[IMDServiceSession didSendMessageSavedReceiptForMessageID:]
  -[IMDServiceSession didSendMessageSavedReceiptForMessageID:account:]
  -[IMDServiceSession didSendSyndicationActionItem:forChat:]
  -[IMDServiceSession didReceiveMessageDeliveryReceiptForMessageID:date:]
  -[IMDServiceSession didReceiveMessageDeliveryReceiptForMessageID:date:account:]
  -[IMDServiceSession _didReceiveMessageDeliveryReceiptForMessageID:attempts:date:account:]
  -[IMDServiceSession updateChatGUID:withLastReadTimeStamp:withLastSeenMessageGUID:fromMe:]
  -[IMDServiceSession _hasSuppressedMessageID:chatGUID:]
  -[IMDServiceSession _didReceiveMessageReadForMessageID:date:attempts:useMessageSuppression:completionBlock:]
  -[IMDServiceSession didReceiveMessageReadForMessageID:date:completionBlock:]
  -[IMDServiceSession didReceiveMessageReadForMessageID:date:useMessageSuppression:completionBlock:]
  -[IMDServiceSession _didReceiveMessageReadReceiptForMessageID:date:attempts:completionBlock:]
  -[IMDServiceSession didReceiveMessageReadReceiptForMessageID:date:completionBlock:]
  -[IMDServiceSession _didReceiveMessagePlayedForMessageID:date:attempts:useMessageSuppression:completionBlock:]
  -[IMDServiceSession didReceiveMessagePlayedForMessageID:date:completionBlock:]
  -[IMDServiceSession didReceiveMessagePlayedForMessageID:date:useMessageSuppression:completionBlock:]
  -[IMDServiceSession _didReceiveMessagePlayedReceiptForMessageID:date:attempts:completionBlock:]
  -[IMDServiceSession didReceiveMessagePlayedReceiptForMessageID:date:completionBlock:]
  -[IMDServiceSession _didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:attempts:useMessageSuppression:account:completionBlock:]
  -[IMDServiceSession didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:completionBlock:]
  -[IMDServiceSession didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:useMessageSuppression:account:completionBlock:]
  -[IMDServiceSession didSendMessage:forChat:style:]
  -[IMDServiceSession didSendMessage:forChat:style:forceDate:]
  -[IMDServiceSession didSendMessage:forChat:style:account:forceDate:]
  -[IMDServiceSession didSendMessage:forChat:style:account:forceDate:itemIsComingFromStorage:]
  -[IMDServiceSession notifyDidSendMessageID:]
  -[IMDServiceSession notifyDidSendMessageID:shouldNotify:]
  -[IMDServiceSession notifyDidSendMessageID:account:shouldNotify:]
  -[IMDServiceSession _endMessageSuppressionForChatGUID:]
  -[IMDServiceSession _setSuppressedMessage:inChatWithGUID:]
  -[IMDServiceSession didReceiveDisplayNameChange:fromID:toIdentifier:forChat:style:account:]
  -[IMDServiceSession didReceiveDisplayNameChange:fromID:toIdentifier:forChat:style:account:sender:]
  -[IMDServiceSession _updateInputMessage:forExistingMessage:]
  -[IMDServiceSession didReceiveMessage:forChat:style:fromIDSID:]
  -[IMDServiceSession didReceiveMessage:forChat:style:account:fromIDSID:]
  -[IMDServiceSession _transcodeController]
  -[IMDServiceSession _setReplyGUIDOnMessage:forChat:]
  -[IMDServiceSession _setSortIDForMessage:forChat:]
  -[IMDServiceSession testOverrideTextValidationDidFail]
  -[IMDServiceSession _storeMessage:chatIdentifier:localChat:style:account:messagesToPostArray:]
  -[IMDServiceSession didReceiveInvitation:forChat:style:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:account:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:handleInfo:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:handleInfo:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:account:isBlackholed:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:account:isBlackholed:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:account:category:spamExtensionName:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:account:category:spamExtensionName:isBlackholed:]
  -[IMDServiceSession didChangeMemberStatus:forHandle:forChat:style:]
  -[IMDServiceSession didChangeMemberStatus:forHandle:unformattedNumber:countryCode:forChat:style:]
  -[IMDServiceSession didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:]
  -[IMDServiceSession didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:]
  -[IMDServiceSession didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:destinationCallerID:]
  -[IMDServiceSession didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:destinationCallerID:messageTime:]
  -[IMDServiceSession spotlightItemRecorderClass]
  -[IMDServiceSession _removeChatGuidFromCoreDuet:]
  -[IMDServiceSession _markChatAsDowngraded:]
  -[IMDServiceSession _handleRoutingWithDictionary:]
  -[IMDServiceSession _updateRoutingForMessageGUID:chatGUID:error:account:]
  -[IMDServiceSession _updateRoutingTimerWithInterval:]
  -[IMDServiceSession _handleExpireStateDictionary:]
  -[IMDServiceSession _updateExpireStateForMessageGUID:]
  -[IMDServiceSession _updateExpireStateTimerWithInterval:]
  -[IMDServiceSession _handleWatchdogWithDictionary:]
  -[IMDServiceSession _updateWatchdogForMessageGUID:]
  -[IMDServiceSession _updateWatchdogTimerWithInterval:]
  -[IMDServiceSession _autoReplier]
  -[IMDServiceSession autoReplier:generatedAutoReplyText:forChat:]
  -[IMDServiceSession autoReplier:receivedUrgentRequestForMessages:]
  -[IMDServiceSession autoReplier:sendDeliveredQuietlyReceiptForMessages:forIncomingMessageFromIDSID:inChat:withWillSendToDestinationsHandler:]
  -[IMDServiceSession autoReplier:sendNotifyRecipientCommandForMessages:inChat:]
  -[IMDServiceSession _checkMessageForOneTimeCodes:]
  -[IMDServiceSession _checkMessageForENURL:]
  -[IMDServiceSession didSendBalloonPayload:forChat:style:messageGUID:account:completionBlock:]
  -[IMDServiceSession didReceiveBalloonPayload:forChat:style:messageGUID:account:]
  -[IMDServiceSession _isMessageSWYSpamMessage:inChat:]
  -[IMDServiceSession _shouldShowSWYQuickActionForMessage:outAppName:outBundleID:]
  -[IMDServiceSession _predominantServiceForChat:usingMessageThreshold:]
  -[IMDServiceSession _fetchMessagesFromChat:onService:numberOfMessages:]
  -[IMDServiceSession _configureSyndicationRangesForMessage:forChat:withSyndicationStatus:]
  -[IMDServiceSession buddyPictures]
  -[IMDServiceSession pictureOfBuddy:]
  -[IMDServiceSession pictureKeyForBuddy:]
  -[IMDServiceSession allBuddies]
  -[IMDServiceSession buddyProperties]
  -[IMDServiceSession markBuddiesAsChanged:]
  -[IMDServiceSession beginBuddyChanges]
  -[IMDServiceSession changeProperty:ofBuddy:to:]
  -[IMDServiceSession clearPropertiesOfBuddy:]
  -[IMDServiceSession endBuddyChanges]
  -[IMDServiceSession property:ofBuddy:]
  -[IMDServiceSession localProperty:ofBuddy:]
  -[IMDServiceSession clearLocalProperties]
  -[IMDServiceSession localPropertiesOfBuddy:]
  -[IMDServiceSession changeLocalProperty:ofBuddy:to:]
  -[IMDServiceSession loginIDForAccount:]
  -[IMDServiceSession noteBadPassword]
  -[IMDServiceSession _abandonPWFetcher]
  -[IMDServiceSession _abandonSystemProxySettingsFetcher]
  -[IMDServiceSession accountDefaultsChanged:]
  -[IMDServiceSession shouldImitateGroupChatUsingChatRooms]
  -[IMDServiceSession joinChat:style:joinProperties:]
  -[IMDServiceSession joinChat:style:groupID:joinProperties:]
  -[IMDServiceSession removeChat:style:]
  -[IMDServiceSession invitePerson:withMessage:toChat:style:]
  -[IMDServiceSession declineInvitationToChat:style:]
  -[IMDServiceSession setProperties:ofParticipant:inChat:style:]
  -[IMDServiceSession cancelVCRequestWithPerson:properties:conference:]
  -[IMDServiceSession warnIfPortBlocked:forAction:]
  -[IMDServiceSession _handleFirewallUserNotificationDidFinish:]
  -[IMDServiceSession disallowReconnection]
  -[IMDServiceSession _doLoginIgnoringProxy:]
  -[IMDServiceSession _doLoginIgnoringProxy:withAccount:]
  -[IMDServiceSession _login_serverSettingsReadyWithAccount:]
  -[IMDServiceSession _data_connection_readyWithAccount:]
  -[IMDServiceSession _login_usernameAndPasswordReadyWithAccount:]
  -[IMDServiceSession _login_checkUsernameAndPasswordWithAccount:]
  -[IMDServiceSession serviceSessionDidLoginWithAccount:]
  -[IMDServiceSession serviceSessionDidLogoutWithAccount:]
  -[IMDServiceSession serviceSessionDidLogoutWithMessage:reason:properties:account:]
  -[IMDServiceSession _wentOfflineWithAccount:]
  -[IMDServiceSession __forceSetLoginStatus:oldStatus:message:reason:properties:account:]
  -[IMDServiceSession _setAutoReconnectTimer]
  -[IMDServiceSession _autoReconnectTimer:]
  -[IMDServiceSession _clearAutoReconnectTimer]


IMDSpamController : NSObject
 @property  NSMutableDictionary *chatGUIDToSpamCheckTimerMap
 @property  NSMutableDictionary *chatGUIDToCountMap
 @property  double spamExtensionCutoffTime

  // class methods
  +[IMDSpamController sharedInstance]

  // instance methods
  -[IMDSpamController dealloc]
  -[IMDSpamController chatRegistry]
  -[IMDSpamController init]
  -[IMDSpamController _isDisabled]
  -[IMDSpamController _spamCheckTimerFired:]
  -[IMDSpamController __queryServerForID:count:completion:]
  -[IMDSpamController _updateSpamCheckTimerWithInterval:forChatGUID:]
  -[IMDSpamController detectSpam:chatGUID:]
  -[IMDSpamController shouldCheckForSpamWithExtensionInChat:fromIdentifier:toIdentifier:]
  -[IMDSpamController checkForSpamWithExtensionInChat:forMessageBody:sender:withCompletion:]
  -[IMDSpamController chatGUIDToSpamCheckTimerMap]
  -[IMDSpamController setChatGUIDToSpamCheckTimerMap:]
  -[IMDSpamController chatGUIDToCountMap]
  -[IMDSpamController setChatGUIDToCountMap:]
  -[IMDSpamController spamExtensionCutoffTime]
  -[IMDSpamController setSpamExtensionCutoffTime:]


IMDeliveredQuietlyReceiptPipelineParameter : NSObject <IMDeliveredQuietlyReceiptProcessingParameter, IMMessageFromStorageParameter>
 @property  IMDiMessageIDSTrustedData *idsTrustedData
 @property  NSString *GUID
 @property  NSNumber *timestamp
 @property  BOOL isFromStorage
 @property  BOOL isLastFromStorage
 @property  NSArray *messageItems
 @property  IMDChat *chat

  // instance methods
  -[IMDeliveredQuietlyReceiptPipelineParameter GUID]
  -[IMDeliveredQuietlyReceiptPipelineParameter .cxx_destruct]
  -[IMDeliveredQuietlyReceiptPipelineParameter timestamp]
  -[IMDeliveredQuietlyReceiptPipelineParameter isFromStorage]
  -[IMDeliveredQuietlyReceiptPipelineParameter setChat:]
  -[IMDeliveredQuietlyReceiptPipelineParameter chat]
  -[IMDeliveredQuietlyReceiptPipelineParameter isLastFromStorage]
  -[IMDeliveredQuietlyReceiptPipelineParameter setMessageItems:]
  -[IMDeliveredQuietlyReceiptPipelineParameter messageItems]
  -[IMDeliveredQuietlyReceiptPipelineParameter idsTrustedData]
  -[IMDeliveredQuietlyReceiptPipelineParameter initWithDefusedMessage:idsTrustedData:]
  -[IMDeliveredQuietlyReceiptPipelineParameter initWithIdsTrustedData:GUID:timestamp:isFromStorage:isLastFromStorage:]


IMDBackwardCompatibilityMessageIdentifier : NSObject
 @property  __IMDBackwardCompatibilityMessageIdentifier *swiftImplementation

  // class methods
  +[IMDBackwardCompatibilityMessageIdentifier sharedIdentifier]

  // instance methods
  -[IMDBackwardCompatibilityMessageIdentifier .cxx_destruct]
  -[IMDBackwardCompatibilityMessageIdentifier init]
  -[IMDBackwardCompatibilityMessageIdentifier isIgnorableBackwardCompatibilityMessage:inChat:]
  -[IMDBackwardCompatibilityMessageIdentifier swiftImplementation]
  -[IMDBackwardCompatibilityMessageIdentifier setSwiftImplementation:]


IMReadReceiptProcessingPipelineComponent : IMPipelineComponent
  // instance methods
  -[IMReadReceiptProcessingPipelineComponent .cxx_destruct]
  -[IMReadReceiptProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMReadReceiptProcessingPipelineComponent initWithMessageStore:chatRegistry:messageSuppressionController:recents:IDSService:]
  -[IMReadReceiptProcessingPipelineComponent _markMessagesUpToGUID:forChat:isFromMe:date:]
  -[IMReadReceiptProcessingPipelineComponent _donateReadEventForChat:]


IMTextMessagePipelineParameter : NSObject <IMFindChatProcessingParameter, IMTextMessageProcessingParameter, IMMessageLegacyProcessingParameter, IMMessageFromStorageParameter, IMMessageMomentShareProcessingParameter>
 @property  NSString *GUID
 @property  NSNumber *timestamp
 @property  BOOL wantsDeliveryReceipt
 @property  BOOL wantsCheckpointing
 @property  BOOL isFromStorage
 @property  BOOL isLastFromStorage
 @property  NSString *fromIdentifier
 @property  NSString *toIdentifier
 @property  BOOL isFromMe
 @property  NSString *plainTextBody
 @property  NSString *plainTextSubject
 @property  NSAttributedString *richBody
 @property  NSArray *fileTransferGUIDs
 @property  NSArray *participantIdentifiers
 @property  NSString *fromDisplayID
 @property  NSString *replyToGUID
 @property  NSString *threadIdentifierGUID
 @property  NSString *expressiveSendStyleIdentifier
 @property  NSDictionary *messageSummaryInfo
 @property  NSString *encryptionType
 @property  NSDictionary *inlineAttachmentsDictionary
 @property  NSArray *attributionInfoArray
 @property  NSDictionary *nicknameDictionary
 @property  NSString *availabilityVerificationRecipientChannelIDPrefix
 @property  NSString *availabilityVerificationRecipientEncryptionValidationToken
 @property  BOOL expirable
 @property  BOOL autoReply
 @property  NSString *groupID
 @property  NSString *currentGroupName
 @property  NSNumber *groupParticipantVersion
 @property  NSNumber *groupProtocolVersion
 @property  NSNumber *groupPhotoCreationTime
 @property  BOOL wasDetonated
 @property  NSArray *messageItems
 @property  IMDChat *chat

  // class methods
  +[IMTextMessagePipelineParameter encryptionTypeWithMessage:]
  +[IMTextMessagePipelineParameter participantDestinationIdentifierWithMessage:]
  +[IMTextMessagePipelineParameter participantDestinationIdentifierWithBasicMessage:]
  +[IMTextMessagePipelineParameter messageSummaryInfoDictionaryWithBlastDoorMessage:]
  +[IMTextMessagePipelineParameter messageSummaryInfoDictionaryWithBlastDoorBasicMessage:]
  +[IMTextMessagePipelineParameter nicknameDictionaryWithBlastDoorMessage:]
  +[IMTextMessagePipelineParameter availabilityVerificationRecipientChannelIDPrefixWithBlastDoorMessage:]
  +[IMTextMessagePipelineParameter availabilityVerificationRecipientEncryptionValidationTokenWithBlastDoorTextMessage:]
  +[IMTextMessagePipelineParameter isAutoReplyWithBlastDoorMessage:]
  +[IMTextMessagePipelineParameter richBodyWithBlastDoorMessage:]
  +[IMTextMessagePipelineParameter richBodyWithBlastDoorBasicMessage:]
  +[IMTextMessagePipelineParameter convertAttributionInfoToArray:]
  +[IMTextMessagePipelineParameter attributionInfoArrayWithBlastDoorMessage:]
  +[IMTextMessagePipelineParameter plainTextBodyWithBlastDoorMessage:]
  +[IMTextMessagePipelineParameter plainTextBodyWithBlastDoorBasicMessage:]
  +[IMTextMessagePipelineParameter plainTextSubjectWithBlastDoorMessage:]
  +[IMTextMessagePipelineParameter plainTextSubjectWithBlastDoorBasicMessage:]
  +[IMTextMessagePipelineParameter fileTransferForBlastDoorFileTransferAttribute:fileTransferGUIDs:supportingStickerAttributes:]
  +[IMTextMessagePipelineParameter _fileTransferMatchingAttribute:inExistingTransfersForMessage:]
  +[IMTextMessagePipelineParameter convertBlastdoorTypedAttributesToNativeTypesInAttributedString:supportingStickerAttributes:existingFileTransfersForMessage:]

  // instance methods
  -[IMTextMessagePipelineParameter setGroupID:]
  -[IMTextMessagePipelineParameter GUID]
  -[IMTextMessagePipelineParameter setTimestamp:]
  -[IMTextMessagePipelineParameter groupID]
  -[IMTextMessagePipelineParameter .cxx_destruct]
  -[IMTextMessagePipelineParameter setIsFromStorage:]
  -[IMTextMessagePipelineParameter timestamp]
  -[IMTextMessagePipelineParameter isFromStorage]
  -[IMTextMessagePipelineParameter fromIdentifier]
  -[IMTextMessagePipelineParameter setFromIdentifier:]
  -[IMTextMessagePipelineParameter isFromMe]
  -[IMTextMessagePipelineParameter setFileTransferGUIDs:]
  -[IMTextMessagePipelineParameter fileTransferGUIDs]
  -[IMTextMessagePipelineParameter messageSummaryInfo]
  -[IMTextMessagePipelineParameter setChat:]
  -[IMTextMessagePipelineParameter chat]
  -[IMTextMessagePipelineParameter wasDetonated]
  -[IMTextMessagePipelineParameter setIsFromMe:]
  -[IMTextMessagePipelineParameter encryptionType]
  -[IMTextMessagePipelineParameter setGUID:]
  -[IMTextMessagePipelineParameter setEncryptionType:]
  -[IMTextMessagePipelineParameter replyToGUID]
  -[IMTextMessagePipelineParameter setReplyToGUID:]
  -[IMTextMessagePipelineParameter setMessageSummaryInfo:]
  -[IMTextMessagePipelineParameter isExpirable]
  -[IMTextMessagePipelineParameter isAutoReply]
  -[IMTextMessagePipelineParameter wantsDeliveryReceipt]
  -[IMTextMessagePipelineParameter wantsCheckpointing]
  -[IMTextMessagePipelineParameter plainTextBody]
  -[IMTextMessagePipelineParameter plainTextSubject]
  -[IMTextMessagePipelineParameter threadIdentifierGUID]
  -[IMTextMessagePipelineParameter expressiveSendStyleIdentifier]
  -[IMTextMessagePipelineParameter currentGroupName]
  -[IMTextMessagePipelineParameter groupParticipantVersion]
  -[IMTextMessagePipelineParameter groupProtocolVersion]
  -[IMTextMessagePipelineParameter groupPhotoCreationTime]
  -[IMTextMessagePipelineParameter availabilityVerificationRecipientChannelIDPrefix]
  -[IMTextMessagePipelineParameter availabilityVerificationRecipientEncryptionValidationToken]
  -[IMTextMessagePipelineParameter isLastFromStorage]
  -[IMTextMessagePipelineParameter setMessageItems:]
  -[IMTextMessagePipelineParameter messageItems]
  -[IMTextMessagePipelineParameter setIsLastFromStorage:]
  -[IMTextMessagePipelineParameter initWithBD:idsTrustedData:]
  -[IMTextMessagePipelineParameter toIdentifier]
  -[IMTextMessagePipelineParameter fromDisplayID]
  -[IMTextMessagePipelineParameter participantIdentifiers]
  -[IMTextMessagePipelineParameter richBody]
  -[IMTextMessagePipelineParameter supportsStickerAttributesInMessageBody]
  -[IMTextMessagePipelineParameter _createSuperFormattedStringWithAttributedString:]
  -[IMTextMessagePipelineParameter inlineAttachmentsDictionary]
  -[IMTextMessagePipelineParameter attributionInfoArray]
  -[IMTextMessagePipelineParameter nicknameDictionary]
  -[IMTextMessagePipelineParameter initWithBDBasic:idsTrustedData:]
  -[IMTextMessagePipelineParameter setWantsDeliveryReceipt:]
  -[IMTextMessagePipelineParameter setWantsCheckpointing:]
  -[IMTextMessagePipelineParameter setToIdentifier:]
  -[IMTextMessagePipelineParameter setPlainTextBody:]
  -[IMTextMessagePipelineParameter setPlainTextSubject:]
  -[IMTextMessagePipelineParameter setRichBody:]
  -[IMTextMessagePipelineParameter setParticipantIdentifiers:]
  -[IMTextMessagePipelineParameter setFromDisplayID:]
  -[IMTextMessagePipelineParameter setThreadIdentifierGUID:]
  -[IMTextMessagePipelineParameter setExpressiveSendStyleIdentifier:]
  -[IMTextMessagePipelineParameter setInlineAttachmentsDictionary:]
  -[IMTextMessagePipelineParameter setAttributionInfoArray:]
  -[IMTextMessagePipelineParameter setNicknameDictionary:]
  -[IMTextMessagePipelineParameter setAvailabilityVerificationRecipientChannelIDPrefix:]
  -[IMTextMessagePipelineParameter setAvailabilityVerificationRecipientEncryptionValidationToken:]
  -[IMTextMessagePipelineParameter setExpirable:]
  -[IMTextMessagePipelineParameter setAutoReply:]
  -[IMTextMessagePipelineParameter setCurrentGroupName:]
  -[IMTextMessagePipelineParameter setGroupParticipantVersion:]
  -[IMTextMessagePipelineParameter setGroupProtocolVersion:]
  -[IMTextMessagePipelineParameter setGroupPhotoCreationTime:]
  -[IMTextMessagePipelineParameter setWasDetonated:]


IMTextMessageAttributedStringContent : NSObject
 @property  NSAttributedString *messageBodyWithNativeAttributes
 @property  NSArray *fileTransferGuids

  // instance methods
  -[IMTextMessageAttributedStringContent .cxx_destruct]
  -[IMTextMessageAttributedStringContent initWithMessageBodyWithNativeAttributes:fileTransferGuids:]
  -[IMTextMessageAttributedStringContent messageBodyWithNativeAttributes]
  -[IMTextMessageAttributedStringContent fileTransferGuids]


IMDCKExitManager : IMDCKAbstractSyncController
 @property  CKRecordID *exitRecordID
 @property  NSNumber *saltZoneCreatedOverride
 @property  NSNumber *subscriptionCreatedOverride
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  IMDRecordZoneManager *recordZoneManager
 @property  IMDCKDatabaseManager *databaseManager
 @property  NSDate *exitRecordDate
 @property  NSError *errorFetchingExitDate
 @property  BOOL fetchedExitDateOnLaunch

  // class methods
  +[IMDCKExitManager sharedInstance]

  // instance methods
  -[IMDCKExitManager setExitRecordID:]
  -[IMDCKExitManager writeInitialSyncCompletedRecordIfNeeded]
  -[IMDCKExitManager databaseManager]
  -[IMDCKExitManager analyticZoneRecordID]
  -[IMDCKExitManager ckQueue]
  -[IMDCKExitManager _saltZoneCreated]
  -[IMDCKExitManager _canSubmitCloudKitAnalytic]
  -[IMDCKExitManager _subscriptionCreated]
  -[IMDCKExitManager exitRecordDateWithCompletion:]
  -[IMDCKExitManager subscriptionCreatedOverride]
  -[IMDCKExitManager fetchedExitDateOnLaunch]
  -[IMDCKExitManager _sharedCKUtilities]
  -[IMDCKExitManager setFetchedExitDateOnLaunch:]
  -[IMDCKExitManager setErrorFetchingExitDate:]
  -[IMDCKExitManager recordZoneManager]
  -[IMDCKExitManager exitRecordID]
  -[IMDCKExitManager _evalToggleiCloudSettingsSwitch]
  -[IMDCKExitManager _setUpSubscription]
  -[IMDCKExitManager .cxx_destruct]
  -[IMDCKExitManager exitRecordDate]
  -[IMDCKExitManager _fetchExitRecordDateWithCompletion:]
  -[IMDCKExitManager saltZoneCreatedOverride]
  -[IMDCKExitManager submitCloudKitMetricWithOperationGroupName:]
  -[IMDCKExitManager handleNotificationForSubscriptionID:]
  -[IMDCKExitManager setRecordZoneManager:]
  -[IMDCKExitManager initRecordZoneManager:databaseManager:]
  -[IMDCKExitManager sendCloudKitZoneFetchRequestToNoteFeatureIsOn]
  -[IMDCKExitManager setSaltZoneCreatedOverride:]
  -[IMDCKExitManager deleteExitRecordWithCompletion:]
  -[IMDCKExitManager _modifiedOpGroupName:]
  -[IMDCKExitManager _scheduleOperation:]
  -[IMDCKExitManager syncCompleteRecordID]
  -[IMDCKExitManager setExitRecordDate:]
  -[IMDCKExitManager _submitCloudKitMetricWithOperationGroupName:record:ignoreZoneNotFoundError:completion:]
  -[IMDCKExitManager errorFetchingExitDate]
  -[IMDCKExitManager _scheduleMetricOperation:]
  -[IMDCKExitManager _canSubmitCloudKitMetric]
  -[IMDCKExitManager submitCloudKitMetricWithData:operationGroupName:completion:]
  -[IMDCKExitManager writeExitRecordWithDate:completion:]
  -[IMDCKExitManager submitCloudKitAnalyticWithOperationGroupName:analyticDictionary:]
  -[IMDCKExitManager _analyticZoneCreated]
  -[IMDCKExitManager setCkQueue:]
  -[IMDCKExitManager setDatabaseManager:]
  -[IMDCKExitManager setSubscriptionCreatedOverride:]
  -[IMDCKExitManager writeSyncCompletedRecordWithDate:completion:]
  -[IMDCKExitManager exitConfiguration]
  -[IMDCKExitManager submitCloudKitAnalyticWithDictionary:operationGroupName:completion:]
  -[IMDCKExitManager derivedQualityOfService]
  -[IMDCKExitManager init]


IMDRecordZoneManager : NSObject <APSConnectionDelegate>
 @property  IMDCKDatabaseManager *dataBaseManager
 @property  APSConnection *pushConnection
 @property  CKRecordZoneID *chatRecordZoneID
 @property  CKRecordZone *chatRecordZone
 @property  CKRecordZoneID *attachmentRecordZoneID
 @property  CKRecordZone *attachmentRecordZone
 @property  CKRecordZoneID *messageRecordZoneID
 @property  CKRecordZone *messageRecordZone
 @property  CKRecordZoneID *updateRecordZoneID
 @property  CKRecordZone *updateRecordZone
 @property  CKRecordZoneID *analyticRecordZoneID
 @property  CKRecordZone *analyticRecordZone
 @property  CKRecordZoneID *deDupeSaltZoneID
 @property  CKRecordZone *deDupeSaltRecordZone
 @property  CKRecordZoneID *metricZoneID
 @property  CKRecordZoneID *recoverableMessageRecordZoneID
 @property  CKRecordZone *recoverableMessageRecordZone
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDRecordZoneManager sharedInstance]

  // instance methods
  -[IMDRecordZoneManager setPushConnection:]
  -[IMDRecordZoneManager ckUtilities]
  -[IMDRecordZoneManager connection:didReceiveIncomingMessage:]
  -[IMDRecordZoneManager connection:didReceivePublicToken:]
  -[IMDRecordZoneManager _createRecordZoneIfNeeded:completionBlock:]
  -[IMDRecordZoneManager pushConnection]
  -[IMDRecordZoneManager deleteAnalyticZone]
  -[IMDRecordZoneManager _createSubscriptionIfNeededForZoneID:subscriptionID:recordType:completionBlock:]
  -[IMDRecordZoneManager createRecoverableMessageZoneIfNeededWithCompletionBlock:]
  -[IMDRecordZoneManager _setUpPushConnection]
  -[IMDRecordZoneManager createDeDupeSaltZoneIfNeededWithCompletionBlock:]
  -[IMDRecordZoneManager _createRecordZone:completionBlock:]
  -[IMDRecordZoneManager createUpdateZoneIfNeededWithCompletionBlock:]
  -[IMDRecordZoneManager messageRecordZone]
  -[IMDRecordZoneManager createSubscriptionIfNeededOnDeDupeZoneForSubscription:recordType:completionBlock:]
  -[IMDRecordZoneManager dealloc]
  -[IMDRecordZoneManager deleteChatZone]
  -[IMDRecordZoneManager deleteDeDupeSaltZone]
  -[IMDRecordZoneManager dataBaseManager]
  -[IMDRecordZoneManager metricZoneID]
  -[IMDRecordZoneManager recoverableMessageRecordZoneID]
  -[IMDRecordZoneManager _deleteAllZonesForDatabase:]
  -[IMDRecordZoneManager createMessageZoneIfNeededWithCompletionBlock:]
  -[IMDRecordZoneManager attachmentRecordZoneID]
  -[IMDRecordZoneManager deDupeSaltZoneID]
  -[IMDRecordZoneManager messageRecordZoneID]
  -[IMDRecordZoneManager deleteAttachmentZone]
  -[IMDRecordZoneManager _createSubscriptionForZoneID:subscriptionID:recordType:completionBlock:]
  -[IMDRecordZoneManager deleteMessageZone]
  -[IMDRecordZoneManager analyticRecordZoneID]
  -[IMDRecordZoneManager recoverableMessageRecordZone]
  -[IMDRecordZoneManager chatRecordZone]
  -[IMDRecordZoneManager createAnalyticZoneIfNeededWithCompletionBlock:]
  -[IMDRecordZoneManager chatRecordZoneID]
  -[IMDRecordZoneManager _deleteZone:forDatabase:]
  -[IMDRecordZoneManager setDataBaseManager:]
  -[IMDRecordZoneManager deleteAllZones]
  -[IMDRecordZoneManager createChatZoneIfNeededWithCompletionBlock:]
  -[IMDRecordZoneManager errorAnalyzer]
  -[IMDRecordZoneManager deleteRecoverableMessageZone]
  -[IMDRecordZoneManager _deleteZone:]
  -[IMDRecordZoneManager attachmentRecordZone]
  -[IMDRecordZoneManager updateRecordZoneID]
  -[IMDRecordZoneManager updateRecordZone]
  -[IMDRecordZoneManager createAttachmentZoneIfNeededWithCompletionBlock:]
  -[IMDRecordZoneManager _checkRecordZoneExists:completionBlock:]
  -[IMDRecordZoneManager deleteUpdateZone]
  -[IMDRecordZoneManager deDupeSaltRecordZone]
  -[IMDRecordZoneManager _handleNotificationForZoneID:subscriptionID:]
  -[IMDRecordZoneManager derivedQualityOfService]
  -[IMDRecordZoneManager init]
  -[IMDRecordZoneManager analyticRecordZone]
  -[IMDRecordZoneManager fetchChatZoneToCheckManateeStatus:]


IMDCKMessageSyncCKOperationFactory : NSObject
  // instance methods
  -[IMDCKMessageSyncCKOperationFactory _messageFetchRecordZoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:]
  -[IMDCKMessageSyncCKOperationFactory _operationGroupWithName:]
  -[IMDCKMessageSyncCKOperationFactory fetchMessageZoneChangesCKOperationUsingToken:zoneID:resultsLimit:operationGroupName:activity:]
  -[IMDCKMessageSyncCKOperationFactory saveMessagesCKOperationUsingRecordsToSave:operationGroupName:activity:]
  -[IMDCKMessageSyncCKOperationFactory deleteMessageCKOperationUsingRecordIDstoDelete:]
  -[IMDCKMessageSyncCKOperationFactory deleteRecoverableMessageCKOperationUsingRecordIDstoDelete:]
  -[IMDCKMessageSyncCKOperationFactory _fetchOptionsDictionaryWithFetchOptions:andZoneID:]
  -[IMDCKMessageSyncCKOperationFactory fetchArchivedRecordsOperationWithSyncToken:zoneID:activity:]


IMSyndicationActionPipelineParameter : NSObject <IMSyndicationActionProcessingParameter, IMFindChatProcessingParameter>
 @property  NSString *fromIdentifier
 @property  NSString *toIdentifier
 @property  NSString *fromDisplayID
 @property  NSString *groupID
 @property  NSString *currentGroupName
 @property  BOOL isFromMe
 @property  NSArray *participantIdentifiers
 @property  unsigned long encodedSyndicationStartDate
 @property  unsigned char itemType
 @property  NSString *messagePartGUID
 @property  {_NSRange=QQ} syndicatedMessagePartRange
 @property  unsigned char version
 @property  unsigned char actionType
 @property  IMSyndicationAction *syndicationAction
 @property  IMDChat *chat

  // instance methods
  -[IMSyndicationActionPipelineParameter setGroupID:]
  -[IMSyndicationActionPipelineParameter actionType]
  -[IMSyndicationActionPipelineParameter groupID]
  -[IMSyndicationActionPipelineParameter .cxx_destruct]
  -[IMSyndicationActionPipelineParameter itemType]
  -[IMSyndicationActionPipelineParameter version]
  -[IMSyndicationActionPipelineParameter fromIdentifier]
  -[IMSyndicationActionPipelineParameter setFromIdentifier:]
  -[IMSyndicationActionPipelineParameter isFromMe]
  -[IMSyndicationActionPipelineParameter setChat:]
  -[IMSyndicationActionPipelineParameter chat]
  -[IMSyndicationActionPipelineParameter setIsFromMe:]
  -[IMSyndicationActionPipelineParameter messagePartGUID]
  -[IMSyndicationActionPipelineParameter currentGroupName]
  -[IMSyndicationActionPipelineParameter encodedSyndicationStartDate]
  -[IMSyndicationActionPipelineParameter syndicatedMessagePartRange]
  -[IMSyndicationActionPipelineParameter toIdentifier]
  -[IMSyndicationActionPipelineParameter fromDisplayID]
  -[IMSyndicationActionPipelineParameter participantIdentifiers]
  -[IMSyndicationActionPipelineParameter setToIdentifier:]
  -[IMSyndicationActionPipelineParameter setParticipantIdentifiers:]
  -[IMSyndicationActionPipelineParameter setFromDisplayID:]
  -[IMSyndicationActionPipelineParameter setCurrentGroupName:]
  -[IMSyndicationActionPipelineParameter setSyndicationAction:]
  -[IMSyndicationActionPipelineParameter createSyndicationActionWithChat:]
  -[IMSyndicationActionPipelineParameter syndicationAction]
  -[IMSyndicationActionPipelineParameter initWithDefusedSyndicationAction:idsTrustedData:pipelineResources:]


IMDAvailabilityVerificationManager : NSObject <SKStatusSubscriptionServiceDelegate>
 @property  SKStatusSubscriptionService *availabilitySubscriptionService
 @property  NSCache *subscriptionValidationTokenByHandleIDCache
 @property  NSObject<OS_dispatch_queue> *privateWorkQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDAvailabilityVerificationManager sharedInstance]
  +[IMDAvailabilityVerificationManager availabilityStatusTypeIdentifier]
  +[IMDAvailabilityVerificationManager deviceSupportsSubscriptionValidationTokens]

  // instance methods
  -[IMDAvailabilityVerificationManager setPrivateWorkQueue:]
  -[IMDAvailabilityVerificationManager .cxx_destruct]
  -[IMDAvailabilityVerificationManager privateWorkQueue]
  -[IMDAvailabilityVerificationManager init]
  -[IMDAvailabilityVerificationManager subscriptionInvitationReceived:]
  -[IMDAvailabilityVerificationManager subscriptionReceivedStatusUpdate:]
  -[IMDAvailabilityVerificationManager subscriptionStateChanged:]
  -[IMDAvailabilityVerificationManager subscriptionServiceDaemonDisconnected:]
  -[IMDAvailabilityVerificationManager cachedAvailabilityVerificationTokensForHandleID:]
  -[IMDAvailabilityVerificationManager populateCacheWithAvailbailityVerificationTokensForHandleID:]
  -[IMDAvailabilityVerificationManager verifyPersonalSubscriptionMatchesSubscriptionValidationToken:encryptionValidationToken:receivedByHandleID:fromHandleID:messageDate:]
  -[IMDAvailabilityVerificationManager _validatePersonalStatusSubscriptionMatchesSubscriptionValidationToken:encryptionValidationToken:fromSender:completion:]
  -[IMDAvailabilityVerificationManager _inviteSenderHandleID:fromHandleID:]
  -[IMDAvailabilityVerificationManager availabilitySubscriptionService]
  -[IMDAvailabilityVerificationManager setAvailabilitySubscriptionService:]
  -[IMDAvailabilityVerificationManager subscriptionValidationTokenByHandleIDCache]
  -[IMDAvailabilityVerificationManager setSubscriptionValidationTokenByHandleIDCache:]


IMDAvailabilityVerificationTokens : NSObject
 @property  NSString *subscriptionValidationToken
 @property  NSString *encryptionValidationToken

  // instance methods
  -[IMDAvailabilityVerificationTokens .cxx_destruct]
  -[IMDAvailabilityVerificationTokens isEqual:]
  -[IMDAvailabilityVerificationTokens initWithSubscriptionValidationToken:encryptionValidationToken:]
  -[IMDAvailabilityVerificationTokens isEqualToAvailabilityVerificationTokens:]
  -[IMDAvailabilityVerificationTokens subscriptionValidationToken]
  -[IMDAvailabilityVerificationTokens encryptionValidationToken]


IMDLocalDaemon : NSObject
  // class methods
  +[IMDLocalDaemon setSharedDaemon:]
  +[IMDLocalDaemon sharedDaemon]


IMFindChatProcessingPipelineComponent : IMPipelineComponent
  // instance methods
  -[IMFindChatProcessingPipelineComponent .cxx_destruct]
  -[IMFindChatProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMFindChatProcessingPipelineComponent initWithChatRegistry:account:]
  -[IMFindChatProcessingPipelineComponent _findGroupChatWithFromIdentifier:toIdentifier:groupName:participants:groupID:]
  -[IMFindChatProcessingPipelineComponent shouldDropDueToGroupSize:]
  -[IMFindChatProcessingPipelineComponent _participantsContainBizID:]
  -[IMFindChatProcessingPipelineComponent _shouldDropMessageGroupID:participants:fromIdentifier:toIdentifier:]


IMDDistributedNotificationXPCEventStreamHandler : IMDXPCEventStreamHandler
  // class methods
  +[IMDDistributedNotificationXPCEventStreamHandler sharedInstance]

  // instance methods
  -[IMDDistributedNotificationXPCEventStreamHandler initWithEventStreamName:]
  -[IMDDistributedNotificationXPCEventStreamHandler init]


IMConvergeGroupPipelineComponent : IMPipelineComponent
  // instance methods
  -[IMConvergeGroupPipelineComponent .cxx_destruct]
  -[IMConvergeGroupPipelineComponent runIndividuallyWithInput:]
  -[IMConvergeGroupPipelineComponent initWithServiceSession:idsTrustedData:account:]


IMDChatVocabularyUpdater : NSObject
 @property  IMDChatRegistry *chatRegistry
 @property  INVocabulary *vocabulary
 @property  BOOL haveDeferredUpdateRequest

  // class methods
  +[IMDChatVocabularyUpdater sharedInstance]
  +[IMDChatVocabularyUpdater performInitialUpdateIfNeeded]

  // instance methods
  -[IMDChatVocabularyUpdater .cxx_destruct]
  -[IMDChatVocabularyUpdater chatRegistry]
  -[IMDChatVocabularyUpdater setChatRegistry:]
  -[IMDChatVocabularyUpdater initWithChatRegistry:vocabulary:]
  -[IMDChatVocabularyUpdater updateVocabularyForAddedChat:completionHandler:]
  -[IMDChatVocabularyUpdater updateVocabularyForDeletedChat:completionHandler:]
  -[IMDChatVocabularyUpdater updateVocabularyForRenamedChat:completionHandler:]
  -[IMDChatVocabularyUpdater updateVocabularyForDeferredUpdateRequestIfNecessaryWithCompletionHandler:]
  -[IMDChatVocabularyUpdater _updateVocabularyExcludingChat:completionHandler:]
  -[IMDChatVocabularyUpdater vocabulary]
  -[IMDChatVocabularyUpdater setVocabulary:]
  -[IMDChatVocabularyUpdater haveDeferredUpdateRequest]
  -[IMDChatVocabularyUpdater setHaveDeferredUpdateRequest:]


IMDLegactDTController : NSObject <IDSServiceDelegate>
 @property  IDSService *dtService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDLegactDTController sharedInstance]

  // instance methods
  -[IMDLegactDTController dtService]
  -[IMDLegactDTController _senderIDFromToken:]
  -[IMDLegactDTController setDtService:]
  -[IMDLegactDTController dealloc]
  -[IMDLegactDTController service:account:incomingData:fromID:context:]
  -[IMDLegactDTController init]


IMDMessageFromStorageController : NSObject
 @property  IMDMessageStore *messageStore
 @property  NSString *serviceName
 @property  NSTimer *storageTimer
 @property  NSMutableSet *messagesReceivedDuringStorage
 @property  IMTimingCollection *timingComingBackFromStorage
 @property  unsigned long messagesProcessedComingBackFromStorage
 @property  id _broadcasterForTesting
 @property  double storageTimerInterval
 @property  double storageTimerUpdateInterval
 @property  double lastMessageStorageTimerInterval
 @property  unsigned long pendingReadReceiptFromStorageCount

  // class methods
  +[IMDMessageFromStorageController iMessageStorageController]
  +[IMDMessageFromStorageController SMSStorageController]

  // instance methods
  -[IMDMessageFromStorageController messageStore]
  -[IMDMessageFromStorageController setServiceName:]
  -[IMDMessageFromStorageController messagesProcessedComingBackFromStorage]
  -[IMDMessageFromStorageController decrementPendingReadReceiptFromStorageCount]
  -[IMDMessageFromStorageController setPendingReadReceiptFromStorageCount:]
  -[IMDMessageFromStorageController incrementPendingReadReceiptFromStorageCount]
  -[IMDMessageFromStorageController noteLastItemFromStorage:]
  -[IMDMessageFromStorageController setStorageTimer:]
  -[IMDMessageFromStorageController _updateStorageTimerWithInterval:]
  -[IMDMessageFromStorageController lastMessageStorageTimerInterval]
  -[IMDMessageFromStorageController serviceName]
  -[IMDMessageFromStorageController .cxx_destruct]
  -[IMDMessageFromStorageController initWithMessageStore:]
  -[IMDMessageFromStorageController setMessagesProcessedComingBackFromStorage:]
  -[IMDMessageFromStorageController broadcaster]
  -[IMDMessageFromStorageController noteItemFromStorage:]
  -[IMDMessageFromStorageController setStorageTimerUpdateInterval:]
  -[IMDMessageFromStorageController setTimingComingBackFromStorage:]
  -[IMDMessageFromStorageController setMessagesReceivedDuringStorage:]
  -[IMDMessageFromStorageController _postMessagesFromStorage:]
  -[IMDMessageFromStorageController storageTimer]
  -[IMDMessageFromStorageController set_broadcasterForTesting:]
  -[IMDMessageFromStorageController timingComingBackFromStorage]
  -[IMDMessageFromStorageController _storageTimerFired]
  -[IMDMessageFromStorageController pendingReadReceiptFromStorageCount]
  -[IMDMessageFromStorageController storageTimerInterval]
  -[IMDMessageFromStorageController noteLastItemProcessedWithError:]
  -[IMDMessageFromStorageController setLastMessageStorageTimerInterval:]
  -[IMDMessageFromStorageController _submitStorageMetricsWithError:]
  -[IMDMessageFromStorageController setMessageStore:]
  -[IMDMessageFromStorageController messagesReceivedDuringStorage]
  -[IMDMessageFromStorageController storageTimerUpdateInterval]
  -[IMDMessageFromStorageController isAwaitingStorageTimer]
  -[IMDMessageFromStorageController setStorageTimerInterval:]
  -[IMDMessageFromStorageController _broadcasterForTesting]
  -[IMDMessageFromStorageController noteSuppressedMessageUpdate:]
  -[IMDMessageFromStorageController noteLastItemProcessed]


IMDMomentShareManager : NSObject <PHPhotoLibraryChangeObserver>
 @property  NSMutableDictionary *shareURLsToContexts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDMomentShareManager sharedInstance]
  +[IMDMomentShareManager fetchMomentShareFromShareURL:forMessage:completionHandler:]
  +[IMDMomentShareManager _acceptMomentShare:completionHandler:]
  +[IMDMomentShareManager _loadCMMTransfersForMessage:]
  +[IMDMomentShareManager _copyItemAtURL:toTemporaryDirectoryWithName:isDirectory:error:]
  +[IMDMomentShareManager _copiedFileURLFromAssetExportFileURLs:transferGUID:error:]
  +[IMDMomentShareManager _requestResourceFileURLsForAsset:fileTransfer:completionHandler:]
  +[IMDMomentShareManager _clearCMMTransfersForCMMMessage:]
  +[IMDMomentShareManager _generateTransfersForAssetUUIDs:forMessage:inChat:momentShare:]
  +[IMDMomentShareManager _fileTransferForAssetUUID:forMessage:momentShare:atIndex:ofTotal:]
  +[IMDMomentShareManager _fetchResultForCuratedOrFirstForMomentShare:outFetchType:]
  +[IMDMomentShareManager _targetCountForContext:]

  // instance methods
  -[IMDMomentShareManager .cxx_destruct]
  -[IMDMomentShareManager photoLibraryDidChange:]
  -[IMDMomentShareManager init]
  -[IMDMomentShareManager _updateContext:withChange:]
  -[IMDMomentShareManager _transitionToFetchingMomentShareForContext:]
  -[IMDMomentShareManager _handleMomentShareFetchForContext:momentShare:error:]
  -[IMDMomentShareManager _transitionToWaitingForAssetsForContext:]
  -[IMDMomentShareManager _transitionToGenerateTransfersStateForContextIfNecessary:]
  -[IMDMomentShareManager _transitionToCompletedStateForContext:]
  -[IMDMomentShareManager _generateTransfersForContext:]
  -[IMDMomentShareManager _contextForMomentShareURL:forMessage:inChat:createIfNeeded:]
  -[IMDMomentShareManager _removeFinishedIngestionContext:]
  -[IMDMomentShareManager _handleIngestionFailureForContext:]
  -[IMDMomentShareManager registerAndAcceptMomentShareForMessage:inChat:resetAssetTransfers:]
  -[IMDMomentShareManager _acceptMomentShareIfNecessaryForContext:isRetry:]
  -[IMDMomentShareManager _fetchAssetsForAcceptedMomentShareWithContext:]
  -[IMDMomentShareManager regenerateTransfersForMessage:inChat:addingAssetWithUUID:]
  -[IMDMomentShareManager _assetUUIDToUnfinishedTransferMapFromTransfers:]
  -[IMDMomentShareManager messageHasUnfinishedTransfers:]
  -[IMDMomentShareManager _startAssetExportForContext:]
  -[IMDMomentShareManager _handleResourceRequestForContext:asset:transfer:didCompleteWithFileURL:error:]
  -[IMDMomentShareManager _persistAttachmentAtFileURL:forFileTransfer:]
  -[IMDMomentShareManager _updatePendingTransferMapForContext:completedTransfer:]
  -[IMDMomentShareManager shareURLsToContexts]
  -[IMDMomentShareManager setShareURLsToContexts:]


IMDCallManager : NSObject
  // instance methods
  -[IMDCallManager .cxx_destruct]
  -[IMDCallManager initWithServiceSession:]


IMDCKMockRecordKeyZone : IMDCKMockRecordZone
  // instance methods
  -[IMDCKMockRecordKeyZone handleOperation:]
  -[IMDCKMockRecordKeyZone _operationIsCloudKitMetricsOperation:]
  -[IMDCKMockRecordKeyZone _handleWritingCloudKitMetrics:]
  -[IMDCKMockRecordKeyZone _handleFetchingExitRecordOperation:]


IMDCKAttachmentSyncController : IMDCKAbstractSyncController
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  IMDRecordZoneManager *recordZoneManager
 @property  IMDCKAttachmentSyncCKOperationFactory *CKOperationFactory
 @property  <IMDCKSyncTokenStore> *syncTokenStore
 @property  NSMutableDictionary *completionBlocksForAssetFetchOperations
 @property  NSMutableDictionary *recordIDToTransferMap
 @property  @? perTransferProgress
 @property  BOOL assetDownloadInProgress
 @property  NSMutableArray *downloadAssetsForTransferGUIDs
 @property  unsigned long deviceConditionsToCheck
 @property  BOOL isDoingDeleteRecoverySync

  // class methods
  +[IMDCKAttachmentSyncController sharedInstance]

  // instance methods
  -[IMDCKAttachmentSyncController ckQueue]
  -[IMDCKAttachmentSyncController recordZoneManager]
  -[IMDCKAttachmentSyncController .cxx_destruct]
  -[IMDCKAttachmentSyncController syncControllerRecordType]
  -[IMDCKAttachmentSyncController setRecordZoneManager:]
  -[IMDCKAttachmentSyncController deleteAttachmentZone]
  -[IMDCKAttachmentSyncController _scheduleOperation:]
  -[IMDCKAttachmentSyncController setCkQueue:]
  -[IMDCKAttachmentSyncController init]
  -[IMDCKAttachmentSyncController initWithSyncTokenStore:]
  -[IMDCKAttachmentSyncController _needsToMarkAllAttachmentsAsNeedingSync]
  -[IMDCKAttachmentSyncController _shouldMarkAllAttachmentsAsNeedingSync]
  -[IMDCKAttachmentSyncController _hasMarkedAllAttachmentsAsNeedingSync]
  -[IMDCKAttachmentSyncController _numberOfBatchesOfAttachmentsToFetchInInitialSync]
  -[IMDCKAttachmentSyncController _shouldMarkAttachmentsAsNeedingReupload]
  -[IMDCKAttachmentSyncController _markAllFailedAttachmentsAsNeedingSync]
  -[IMDCKAttachmentSyncController _numberOfMetadataBatchesOfAttachmentsToFetchInInitialSync]
  -[IMDCKAttachmentSyncController syncAttachmentsWithSyncType:deviceConditionsToCheck:activity:completionBlock:]
  -[IMDCKAttachmentSyncController fetchAttachmentDataForTransfers:highQuality:perTransferProgress:activity:completion:]
  -[IMDCKAttachmentSyncController acceptFileTransfer:completion:]
  -[IMDCKAttachmentSyncController acceptFileTransfers:completion:]
  -[IMDCKAttachmentSyncController _attachmentDownloadCanStart:withActivity:]
  -[IMDCKAttachmentSyncController _downloadAttachmentAssetsWithActivity:restoringAttachments:retryCount:numAttachmentsDownloaded:completion:]
  -[IMDCKAttachmentSyncController _downloadAttachmentAssetsWithActivity:restoringAttachments:retryCount:numAttachmentsDownloaded:transfers:completion:]
  -[IMDCKAttachmentSyncController downloadAttachmentAssetsWithActivity:restoringAttachments:completion:]
  -[IMDCKAttachmentSyncController downloadAttachmentAssetsWithActivity:restoringAttachments:]
  -[IMDCKAttachmentSyncController purgedAttachmentsForChat:services:limit:]
  -[IMDCKAttachmentSyncController purgedAttachmentsCountForChatsWithChatIdentifiers:services:]
  -[IMDCKAttachmentSyncController downloadAttachmentAssetsForChatIDs:services:style:completion:]
  -[IMDCKAttachmentSyncController __databaseRequestForAttachmentsWithAssets]
  -[IMDCKAttachmentSyncController _ckUtilitiesInstance]
  -[IMDCKAttachmentSyncController _updateDeviceConditionsToCheckIfNeededForCurrentBatchCount:maxBatchCount:]
  -[IMDCKAttachmentSyncController _deviceConditionsAllowsMessageSyncForCurrentBatchCount:maxBatchCount:activity:]
  -[IMDCKAttachmentSyncController _deviceConditionsAllowsMessageSyncWithActivity:]
  -[IMDCKAttachmentSyncController _deviceConditionsAllowsMessageSyncIgnoreFeatureEnabled:activity:]
  -[IMDCKAttachmentSyncController _attachmentZoneID]
  -[IMDCKAttachmentSyncController _recordKeyManagerSharedInstance]
  -[IMDCKAttachmentSyncController _attachmentZoneSalt]
  -[IMDCKAttachmentSyncController _numberOfAttachmentsToDownload]
  -[IMDCKAttachmentSyncController _numberOfAttachmentsToWriteUp]
  -[IMDCKAttachmentSyncController _updateAttachmentGUIDIfNeededAndReturnTransfersToForceMarkAsSync:transfersToSyncRowIDs:]
  -[IMDCKAttachmentSyncController _writeAttachmentsToCloudKitWithActivity:completionBlock:]
  -[IMDCKAttachmentSyncController _fetchAttachmentZoneRecords:desiredKeys:ognSuffix:removeTombstones:activity:completion:]
  -[IMDCKAttachmentSyncController _fetchedAllChangesFromCloudKit]
  -[IMDCKAttachmentSyncController _resyncForDeleteRecoveryState]
  -[IMDCKAttachmentSyncController _hasCompletedRecoveryResync]
  -[IMDCKAttachmentSyncController _initResyncForDeleteRecovery]
  -[IMDCKAttachmentSyncController _markResyncForDeleteRecoveryAs:]
  -[IMDCKAttachmentSyncController _fetchAttachmentZoneChangesShouldWriteBackChanges:desiredKeys:syncType:currentBatchCount:maxBatchCount:syncToken:activity:completionBlock:]
  -[IMDCKAttachmentSyncController _writeCKRecordsToAttachmentZone:activity:withCompletion:]
  -[IMDCKAttachmentSyncController _attachmentZoneCreated]
  -[IMDCKAttachmentSyncController deleteAttachmentSyncToken]
  -[IMDCKAttachmentSyncController _kickOffWriteOnCKQueueWithActivity:completion:]
  -[IMDCKAttachmentSyncController _kickOffWriteIfNeededForSyncType:activity:completion:]
  -[IMDCKAttachmentSyncController _processRecordZoneFetchCompletion:zoneID:clientChangeTokenData:moreComing:shouldWriteBackChanges:desiredKeys:syncType:error:currentBatchCount:maxBatchCount:activity:completionBlock:]
  -[IMDCKAttachmentSyncController _processModifyPerRecordCallBack:error:]
  -[IMDCKAttachmentSyncController _processFetchRecordChangesCompleted:completionBlock:]
  -[IMDCKAttachmentSyncController _processRecordDeletion:]
  -[IMDCKAttachmentSyncController _processRecordChanged:]
  -[IMDCKAttachmentSyncController _processRecordZoneChangeTokenUpdated:zoneID:clienChangeToken:syncType:]
  -[IMDCKAttachmentSyncController _operationErrorForModifyingRecordCompletion:]
  -[IMDCKAttachmentSyncController _processModifyRecordCompletion:deletedRecordIDs:error:completionBlock:]
  -[IMDCKAttachmentSyncController _processAssetFetchPerRecordProgressBlock:progress:]
  -[IMDCKAttachmentSyncController _processAssetFetchPerRecordCompletionBlock:recordID:error:]
  -[IMDCKAttachmentSyncController _processAssetFetchOperationCompletionBlock:removeTombstones:operationID:error:]
  -[IMDCKAttachmentSyncController _recordsToProcessWithError:error:]
  -[IMDCKAttachmentSyncController _removeTransferFromiCloudBackupWithGuid:]
  -[IMDCKAttachmentSyncController _updateTransferUsingCKRecord:wasFetched:]
  -[IMDCKAttachmentSyncController _kickOffAssetFetchForTransfersIfNeededWithActivity:]
  -[IMDCKAttachmentSyncController _markAttachmentWithROWIDAsSyncedWithCloudKit:]
  -[IMDCKAttachmentSyncController _markAttachmentWithROWIDAsFailedToUploadToCloudKit:]
  -[IMDCKAttachmentSyncController _markTransferAsNotBeingAbleToSync:]
  -[IMDCKAttachmentSyncController _markTransferAsNotBeingAbleToSyncUsingCKRecord:]
  -[IMDCKAttachmentSyncController _resetAttachmentSyncStateForRecord:toState:]
  -[IMDCKAttachmentSyncController _migrateSyncToken]
  -[IMDCKAttachmentSyncController _changeTokenKeyForSyncType:]
  -[IMDCKAttachmentSyncController setLatestSyncToken:forSyncType:]
  -[IMDCKAttachmentSyncController latestSyncTokenForSyncType:]
  -[IMDCKAttachmentSyncController clearLocalSyncState:]
  -[IMDCKAttachmentSyncController _validateTransferFromCloudKit:localTransfer:validateCompletion:]
  -[IMDCKAttachmentSyncController _processAndValidateAttachmentRecordsEligibleForPurge:recordIDsToTransfers:capturedWithABC:completion:]
  -[IMDCKAttachmentSyncController _fetchAndValidateFileTransfersFromCloudKit:capturedWithABC:activity:completion:]
  -[IMDCKAttachmentSyncController fileTransferCenter]
  -[IMDCKAttachmentSyncController __shouldOptimizeAttachmentDefault]
  -[IMDCKAttachmentSyncController _constructAttachmentRecordIDUsingTombStoneDictionary:]
  -[IMDCKAttachmentSyncController _attachmentDeleteBatchSize]
  -[IMDCKAttachmentSyncController _readNextDeleteAfterRow]
  -[IMDCKAttachmentSyncController _setNextDeleteAfterRow:]
  -[IMDCKAttachmentSyncController _copyRecordIDsToDeleteWithLimit:]
  -[IMDCKAttachmentSyncController _deleteAttachmentsWithRecordIDs:completion:]
  -[IMDCKAttachmentSyncController syncAttachmentDeletesToCloudKitWithActivity:completion:]
  -[IMDCKAttachmentSyncController isDoingDeleteRecoverySync]
  -[IMDCKAttachmentSyncController setIsDoingDeleteRecoverySync:]
  -[IMDCKAttachmentSyncController CKOperationFactory]
  -[IMDCKAttachmentSyncController setCKOperationFactory:]
  -[IMDCKAttachmentSyncController syncTokenStore]
  -[IMDCKAttachmentSyncController setSyncTokenStore:]
  -[IMDCKAttachmentSyncController completionBlocksForAssetFetchOperations]
  -[IMDCKAttachmentSyncController setCompletionBlocksForAssetFetchOperations:]
  -[IMDCKAttachmentSyncController recordIDToTransferMap]
  -[IMDCKAttachmentSyncController setRecordIDToTransferMap:]
  -[IMDCKAttachmentSyncController perTransferProgress]
  -[IMDCKAttachmentSyncController setPerTransferProgress:]
  -[IMDCKAttachmentSyncController assetDownloadInProgress]
  -[IMDCKAttachmentSyncController setAssetDownloadInProgress:]
  -[IMDCKAttachmentSyncController downloadAssetsForTransferGUIDs]
  -[IMDCKAttachmentSyncController setDownloadAssetsForTransferGUIDs:]
  -[IMDCKAttachmentSyncController deviceConditionsToCheck]
  -[IMDCKAttachmentSyncController setDeviceConditionsToCheck:]


IMSyndicationActionProcessingPipelineComponent : IMPipelineComponent
 @property  IMDiMessagePipelineResources *pipelineResources

  // instance methods
  -[IMSyndicationActionProcessingPipelineComponent _account]
  -[IMSyndicationActionProcessingPipelineComponent .cxx_destruct]
  -[IMSyndicationActionProcessingPipelineComponent _messageStore]
  -[IMSyndicationActionProcessingPipelineComponent _chatRegistry]
  -[IMSyndicationActionProcessingPipelineComponent _broadcaster]
  -[IMSyndicationActionProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMSyndicationActionProcessingPipelineComponent initWithPipelineResources:]
  -[IMSyndicationActionProcessingPipelineComponent pipelineResources]
  -[IMSyndicationActionProcessingPipelineComponent handleMessageSyndicationAction:chat:]
  -[IMSyndicationActionProcessingPipelineComponent handleChatSyndicationAction:chat:]
  -[IMSyndicationActionProcessingPipelineComponent findSMSChatForInput:]


IMDCKSyncState : NSObject <IMKeyValueCollectionDelegate>
 @property  unsigned long syncControllerSyncState
 @property  long long syncControllerRecordType
 @property  BOOL syncing
 @property  BOOL startingPeriodicSyncSetByCloudKitHooks
 @property  BOOL startingInitialSyncSetByCloudKitHooks
 @property  IMKeyValueCollection *keyValueCollection
 @property  <IMDCKSyncStateDelegate> *delegate
 @property  BOOL featureEnabled
 @property  BOOL createdChatZone
 @property  BOOL deletedZones
 @property  BOOL eligibleForTruthZone
 @property  BOOL syncingEnabled
 @property  BOOL removedFromBackup
 @property  BOOL inExitState
 @property  BOOL syncingPaused
 @property  NSDate *exitDate
 @property  BOOL disablingDevices
 @property  BOOL startingEnabledSettingChange
 @property  NSDictionary *analyticSyncDatesDictionary
 @property  NSDate *lastSyncDate
 @property  long long accountStatus
 @property  NSArray *syncErrors
 @property  long long syncControllerSyncType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDCKSyncState logHandle]
  +[IMDCKSyncState removeBuildObjectsFromDict:]

  // instance methods
  -[IMDCKSyncState lastSyncDate]
  -[IMDCKSyncState setLastSyncDate:]
  -[IMDCKSyncState setSyncingFinished]
  -[IMDCKSyncState setSyncingEnabled:]
  -[IMDCKSyncState setDeletedZones:]
  -[IMDCKSyncState isSyncingEnabled]
  -[IMDCKSyncState logHandle]
  -[IMDCKSyncState setSyncControllerSyncState:]
  -[IMDCKSyncState isStartingEnabledSettingChange]
  -[IMDCKSyncState isEligibleForTruthZone]
  -[IMDCKSyncState setDelegate:]
  -[IMDCKSyncState _describeErrors:]
  -[IMDCKSyncState syncReportDictionaryForAttempt:withSuccess:duration:]
  -[IMDCKSyncState delegate]
  -[IMDCKSyncState createdChatZone]
  -[IMDCKSyncState keyValueCollection]
  -[IMDCKSyncState broadcastSyncState]
  -[IMDCKSyncState serializedRepresentation]
  -[IMDCKSyncState exitDate]
  -[IMDCKSyncState getAnalyticSyncDatesObjectForKey:]
  -[IMDCKSyncState .cxx_destruct]
  -[IMDCKSyncState syncControllerRecordType]
  -[IMDCKSyncState setStartingPeriodicSyncWithRecordType:]
  -[IMDCKSyncState setSyncing:]
  -[IMDCKSyncState setSyncControllerRecordType:]
  -[IMDCKSyncState setRemovedFromBackup:]
  -[IMDCKSyncState isFeatureEnabled]
  -[IMDCKSyncState _shouldReportNewUserIfCreatedChatZones:deletedZones:]
  -[IMDCKSyncState removeObjectFromAnalyticSyncDatesDictionaryForKey:]
  -[IMDCKSyncState setInExitState:]
  -[IMDCKSyncState _setObject:forKey:forDictionary:shouldSetBuild:]
  -[IMDCKSyncState isDisablingDevices]
  -[IMDCKSyncState isRemovedFromBackup]
  -[IMDCKSyncState syncControllerSyncType]
  -[IMDCKSyncState accountStatus]
  -[IMDCKSyncState keyValueCollection:didUpdateValues:]
  -[IMDCKSyncState syncControllerSyncState]
  -[IMDCKSyncState isStartingInitialSyncSetByCloudKitHooks]
  -[IMDCKSyncState analyticSyncDatesDictionary]
  -[IMDCKSyncState describeRecordCounts]
  -[IMDCKSyncState setAccountStatus:]
  -[IMDCKSyncState addSyncError:]
  -[IMDCKSyncState _setStartingSync]
  -[IMDCKSyncState setEligibleForTruthZone:]
  -[IMDCKSyncState isInExitState]
  -[IMDCKSyncState setErrorToAccountNeedsRepair]
  -[IMDCKSyncState setStartingPeriodicSyncSetByCloudKitHooks:]
  -[IMDCKSyncState setSyncControllerSyncState:withRecordType:]
  -[IMDCKSyncState setStartingInitialSyncSetByCloudKitHooks:]
  -[IMDCKSyncState _startBatchChange]
  -[IMDCKSyncState setDisablingDevices:]
  -[IMDCKSyncState syncUserType]
  -[IMDCKSyncState initWithKeyValueCollection:]
  -[IMDCKSyncState deletedZones]
  -[IMDCKSyncState syncErrors]
  -[IMDCKSyncState setSyncingPaused:]
  -[IMDCKSyncState setErrorToKeyRollingError]
  -[IMDCKSyncState isSyncing]
  -[IMDCKSyncState syncReportDictionary]
  -[IMDCKSyncState keyValueCollection:willUpdateValues:]
  -[IMDCKSyncState setStartingEnabledSettingChange:]
  -[IMDCKSyncState setFeatureEnabled:]
  -[IMDCKSyncState clearLocalCloudKitSyncState]
  -[IMDCKSyncState isSyncingPaused]
  -[IMDCKSyncState setExitDate:]
  -[IMDCKSyncState describeErrors]
  -[IMDCKSyncState clearSyncErrors]
  -[IMDCKSyncState setStartingInitialSyncWithRecordType:]
  -[IMDCKSyncState _removeObjectForKey:forDictionary:]
  -[IMDCKSyncState setSyncControllerSyncType:]
  -[IMDCKSyncState setAnalyticSyncDatesDictionaryObject:forKey:shouldOverrideIfExists:]
  -[IMDCKSyncState isStartingPeriodicSyncSetByCloudKitHooks]
  -[IMDCKSyncState init]
  -[IMDCKSyncState _finishBatchChange]
  -[IMDCKSyncState setCreatedChatZone:]
  -[IMDCKSyncState setAnalyticSyncDatesDictionary:]


IMDMessageHistoryFirstUnlockReplaySyncTask : IMDMessageHistoryIDSTransactionLogSyncTask
  // instance methods
  -[IMDMessageHistoryFirstUnlockReplaySyncTask dealloc]
  -[IMDMessageHistoryFirstUnlockReplaySyncTask syncTaskType]
  -[IMDMessageHistoryFirstUnlockReplaySyncTask _setupAndBeginSync]
  -[IMDMessageHistoryFirstUnlockReplaySyncTask initWithReplayController:accountController:]


IMDFamilyInviteReponseHandler : NSObject
  // instance methods
  -[IMDFamilyInviteReponseHandler canHandleNotificationResponse:userNotificationCenter:]
  -[IMDFamilyInviteReponseHandler handleNotificationResponse:userNotificationCenter:completionHandler:]


IMDPlainTextTapbackInterpreter : NSObject
 @property  __IMDPlainTextTapbackInterpreterImpl *impl

  // instance methods
  -[IMDPlainTextTapbackInterpreter impl]
  -[IMDPlainTextTapbackInterpreter .cxx_destruct]
  -[IMDPlainTextTapbackInterpreter setImpl:]
  -[IMDPlainTextTapbackInterpreter init]
  -[IMDPlainTextTapbackInterpreter interpretMessageItem:inChat:]


IMDFileTransferCenter : NSObject
 @property  NSString *contextStamp
 @property  NSMutableDictionary *guidToTransferMap
 @property  NSMutableSet *activeTransfers
 @property  NSTimer *transferTimer
 @property  NSMutableArray *transferringTransfers
 @property  NSMutableSet *activeHubbleRequestedTransfers

  // class methods
  +[IMDFileTransferCenter sharedInstance]
  +[IMDFileTransferCenter localFileURLRetrievalErrorWithReason:underlyingReason:description:]
  +[IMDFileTransferCenter localFileURLRetrievalErrorWithReason:description:]
  +[IMDFileTransferCenter fileTransferErrorWithReason:description:]

  // instance methods
  -[IMDFileTransferCenter removeTransferForGUID:]
  -[IMDFileTransferCenter resetSyncStateForRecordCK:toState:]
  -[IMDFileTransferCenter transferTimer]
  -[IMDFileTransferCenter _reset]
  -[IMDFileTransferCenter populateLocalURLsForTransfer:fromCKRecord:]
  -[IMDFileTransferCenter guidsForStoredAttachmentPayloadDataURLs:messageGUID:]
  -[IMDFileTransferCenter _completeProgressForTransferGUID:]
  -[IMDFileTransferCenter setActiveTransfers:]
  -[IMDFileTransferCenter _handleFileTransfer:acceptedWithPath:autoRename:overwrite:options:postNotification:]
  -[IMDFileTransferCenter _transferRequiresPreviewSizing:]
  -[IMDFileTransferCenter _transcodeControllerSharedInstance]
  -[IMDFileTransferCenter addHubbleRequestedTransfer:]
  -[IMDFileTransferCenter updateTransfersWithCKRecordCK:recordWasFetched:downloadAsset:]
  -[IMDFileTransferCenter updateTransferGUID:toGUID:]
  -[IMDFileTransferCenter _addGatekeeperProperties:toFileAtPath:]
  -[IMDFileTransferCenter contextStamp]
  -[IMDFileTransferCenter _progressForTransferGUID:allowCreate:path:]
  -[IMDFileTransferCenter guidsForStoredAttachmentPayloadData:messageGUID:]
  -[IMDFileTransferCenter _handleFileTransfers:autoRename:overwrite:options:postNotification:]
  -[IMDFileTransferCenter registerGUID:forNewOutgoingTransferWithLocalURL:]
  -[IMDFileTransferCenter _handleFileTransferRemoved:]
  -[IMDFileTransferCenter _clientPreviewConstraints]
  -[IMDFileTransferCenter activeHubbleRequestedTransfers]
  -[IMDFileTransferCenter _transferTimerTick:]
  -[IMDFileTransferCenter postHubbleDownloadFailedIfNeededForTransfer:error:]
  -[IMDFileTransferCenter setActiveHubbleRequestedTransfers:]
  -[IMDFileTransferCenter _addTransferringTransfer:]
  -[IMDFileTransferCenter deleteTransferForGUID:]
  -[IMDFileTransferCenter _removeHubbleRequestedTransfer:]
  -[IMDFileTransferCenter _createWrapperForTransfer:]
  -[IMDFileTransferCenter rejectTransfer:]
  -[IMDFileTransferCenter _dictionaryRepresentationsForFileTransfers:toSave:]
  -[IMDFileTransferCenter .cxx_destruct]
  -[IMDFileTransferCenter resetSyncStateForRecord:toState:]
  -[IMDFileTransferCenter setTransferTimer:]
  -[IMDFileTransferCenter addDefaultGatekeeperPropertiesToDirectory:]
  -[IMDFileTransferCenter _statsCollectorCK]
  -[IMDFileTransferCenter _updateSyncStatsForAttachmentsCK:incrementTotalAttachmentCount:]
  -[IMDFileTransferCenter updateTransfer:withPreviewSize:forConstraints:]
  -[IMDFileTransferCenter setRecoverableErrorForTransfer:error:]
  -[IMDFileTransferCenter _addGatekeeperProperties:toDirectory:]
  -[IMDFileTransferCenter makeNewIncomingTransferWithGUID:filename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:]
  -[IMDFileTransferCenter guidForNewOutgoingTransferWithFilename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:]
  -[IMDFileTransferCenter _allFileTransfers]
  -[IMDFileTransferCenter _postUpdated:forceNotify:]
  -[IMDFileTransferCenter _addSpotlightPropertiesFromFileTransfer:toDirectory:]
  -[IMDFileTransferCenter _handleFileTransferStopped:]
  -[IMDFileTransferCenter _completeHubbleDownloadForTransfer:]
  -[IMDFileTransferCenter markTransferAsNotSyncedSuccessfullyCK:]
  -[IMDFileTransferCenter _attachmentStoreSharedInstance]
  -[IMDFileTransferCenter addTransfer:forGUID:]
  -[IMDFileTransferCenter _shouldDownloadAssetForTransferCK:forMessageItem:]
  -[IMDFileTransferCenter failTransfer:error:]
  -[IMDFileTransferCenter _addActiveTransfer:]
  -[IMDFileTransferCenter markAttachment:sender:recipients:isIncoming:]
  -[IMDFileTransferCenter setGuidToTransferMap:]
  -[IMDFileTransferCenter transferForGUID:]
  -[IMDFileTransferCenter _clearProgressForTransferGUID:]
  -[IMDFileTransferCenter _updateContextStamp]
  -[IMDFileTransferCenter updateTransfer:]
  -[IMDFileTransferCenter _statsCollector]
  -[IMDFileTransferCenter _removeTransferringTransfer:]
  -[IMDFileTransferCenter _updateSyncStatsForAttachments:incrementTotalAttachmentCount:]
  -[IMDFileTransferCenter _postUpdated:]
  -[IMDFileTransferCenter activeTransfers]
  -[IMDFileTransferCenter _removeActiveTransfer:]
  -[IMDFileTransferCenter broadcastTransfersWithGUIDs:atLocalPaths:]
  -[IMDFileTransferCenter _removeWrapperForTransfer:]
  -[IMDFileTransferCenter failTransferPreviewGeneration:]
  -[IMDFileTransferCenter startFinalizingTransfer:]
  -[IMDFileTransferCenter _messageStoreSharedInstance]
  -[IMDFileTransferCenter acceptTransfer:path:]
  -[IMDFileTransferCenter updateTransfersWithCKRecord:recordWasFetched:downloadAsset:]
  -[IMDFileTransferCenter setTransferringTransfers:]
  -[IMDFileTransferCenter updateTransfer:currentBytes:totalBytes:]
  -[IMDFileTransferCenter _addTransfer:forGUID:shouldNotify:forceNotify:]
  -[IMDFileTransferCenter _postHubbleDownloadFailedForTransfer:error:]
  -[IMDFileTransferCenter markTransferAsNotSuccessfullyDownloadedFromCloudCK:]
  -[IMDFileTransferCenter markTransferAsNotSyncedSuccessfully:]
  -[IMDFileTransferCenter transferringTransfers]
  -[IMDFileTransferCenter resetTransfer:andPostReason:]
  -[IMDFileTransferCenter addTransfer:forGUID:forceNotify:]
  -[IMDFileTransferCenter _addTransfer:forGUID:shouldNotify:]
  -[IMDFileTransferCenter assignTransfer:toAccount:otherPerson:]
  -[IMDFileTransferCenter updateTransferAsWaitingForAccept:]
  -[IMDFileTransferCenter _shouldDownloadAssetForTransfer:forMessageItem:]
  -[IMDFileTransferCenter _handleFileTransfer:updatedWithProperties:]
  -[IMDFileTransferCenter _messageStoreSharedInstanceCK]
  -[IMDFileTransferCenter endTransfer:]
  -[IMDFileTransferCenter guidToTransferMap]
  -[IMDFileTransferCenter makeNewOutgoingTransferWithGUID:filename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:]
  -[IMDFileTransferCenter setContextStamp:]
  -[IMDFileTransferCenter failTransfer:reason:]
  -[IMDFileTransferCenter sizePreviewsForTransferGUIDs:]
  -[IMDFileTransferCenter _shouldUpdateSyncStats:originalSyncState:]
  -[IMDFileTransferCenter _getNewFileTransferForStoredAttachmentPayloadDataWithTransferGUID:messageGUID:]
  -[IMDFileTransferCenter guidForNewOutgoingTransferWithLocalURL:]
  -[IMDFileTransferCenter _handleFileTransfer:createdWithProperties:withAuditToken:]
  -[IMDFileTransferCenter postHubbleDownloadFinishedIfNeededForTransfer:]
  -[IMDFileTransferCenter _shouldUpdateSyncStatsCK:originalSyncState:]
  -[IMDFileTransferCenter init]
  -[IMDFileTransferCenter resetTransferAndPostError:error:]
  -[IMDFileTransferCenter startTransfer:]
  -[IMDFileTransferCenter markTransferAsNotSuccessfullyDownloadedFromCloud:]
  -[IMDFileTransferCenter guidForNewIncomingTransferWithFilename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:]
  -[IMDFileTransferCenter _updateTransferGUID:toGUID:]


IMDCKAttachmentSyncCKOperationFactory : NSObject
  // class methods
  +[IMDCKAttachmentSyncCKOperationFactory _desiredKeysArrayForType:]

  // instance methods
  -[IMDCKAttachmentSyncCKOperationFactory _operationGroupWithName:]
  -[IMDCKAttachmentSyncCKOperationFactory fetchAttachmentZoneChangesCKOperationUsingToken:zoneID:resultsLimit:desiredKeys:operationGroupName:activity:]
  -[IMDCKAttachmentSyncCKOperationFactory fetchAttachmentZoneRecords:desiredKeys:operationGroupName:activity:]
  -[IMDCKAttachmentSyncCKOperationFactory saveAttachmentsCKOperationUsingRecordsToSave:operationGroupName:activity:]
  -[IMDCKAttachmentSyncCKOperationFactory _defaultsSayWeHaveSyncedOnce]
  -[IMDCKAttachmentSyncCKOperationFactory _attachmentFetchRecordZoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:desiredKeys:]
  -[IMDCKAttachmentSyncCKOperationFactory deleteAttachmentCKOperationUsingRecordIDstoDelete:]


IMDExposureNotificationManager : NSObject
  // class methods
  +[IMDExposureNotificationManager sharedInstance]

  // instance methods
  -[IMDExposureNotificationManager _enTextMessageForMessageBody:]
  -[IMDExposureNotificationManager _enURLsForMessageBody:]
  -[IMDExposureNotificationManager _allowedDomains]
  -[IMDExposureNotificationManager _bagDisabled]
  -[IMDExposureNotificationManager processMessageItemForENURL:withCompletionHandler:]
  -[IMDExposureNotificationManager _enManager]
  -[IMDExposureNotificationManager _isMessageItemEligibleForEN:]


IMDQuickSwitchController : NSObject <PSYSyncCoordinatorDelegate, IDSServiceDelegate>
 @property  IDSService *quickSwitchIDSService
 @property  PSYSyncCoordinator *syncCoordinator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDQuickSwitchController sharedInstance]

  // instance methods
  -[IMDQuickSwitchController setQuickSwitchIDSService:]
  -[IMDQuickSwitchController service:account:identifier:didSendWithSuccess:error:]
  -[IMDQuickSwitchController _handleQuickSwitchCompleted:]
  -[IMDQuickSwitchController _getTempRecentsPath]
  -[IMDQuickSwitchController _handleQuickSwitchInitiateRequest]
  -[IMDQuickSwitchController _cleanUpTemporaryFiles]
  -[IMDQuickSwitchController _sendQuickSwitchCompletedWithResult:]
  -[IMDQuickSwitchController _defaultPairedDevice]
  -[IMDQuickSwitchController _getTruncatedDBPath]
  -[IMDQuickSwitchController _sendDBVersionResponse:]
  -[IMDQuickSwitchController dealloc]
  -[IMDQuickSwitchController setSyncCoordinator:]
  -[IMDQuickSwitchController dummyMethod]
  -[IMDQuickSwitchController _initiateQuickSwitch]
  -[IMDQuickSwitchController _decompressFileAtPath:toPath:withCompletionBlock:]
  -[IMDQuickSwitchController _sendIDSMessage:]
  -[IMDQuickSwitchController _handleDBVersionResponse:]
  -[IMDQuickSwitchController _compressFileAtPath:toPath:withCompletionBlock:]
  -[IMDQuickSwitchController _getZippedDBPath]
  -[IMDQuickSwitchController _getTempDBPath]
  -[IMDQuickSwitchController _getDowngradedDBPath]
  -[IMDQuickSwitchController _getZippedRecentsPath]
  -[IMDQuickSwitchController _isPairedDeviceInProxyMode]
  -[IMDQuickSwitchController service:account:incomingResourceAtURL:metadata:fromID:context:]
  -[IMDQuickSwitchController service:account:incomingData:fromID:context:]
  -[IMDQuickSwitchController _getFileSizeAtPath:]
  -[IMDQuickSwitchController _supportsQuickSwitchWithPairedDevice]
  -[IMDQuickSwitchController syncCoordinator]
  -[IMDQuickSwitchController _truncateDBToPath:]
  -[IMDQuickSwitchController syncCoordinator:beginSyncSession:]
  -[IMDQuickSwitchController _notifyPSYDataSent]
  -[IMDQuickSwitchController _sendRecentsRequest]
  -[IMDQuickSwitchController _handleIncomingRecents:]
  -[IMDQuickSwitchController _handleRecentsRequest]
  -[IMDQuickSwitchController _notifyPSYWithResult:]
  -[IMDQuickSwitchController _sendZippedFileAtPath:withCommand:]
  -[IMDQuickSwitchController _quickSwitchCompleted:]
  -[IMDQuickSwitchController _deleteFileAtPath:]
  -[IMDQuickSwitchController _sendIDSFile:withCommand:]
  -[IMDQuickSwitchController _handleIncomingDB:]
  -[IMDQuickSwitchController init]
  -[IMDQuickSwitchController _getCurrentDBVersion]
  -[IMDQuickSwitchController quickSwitchIDSService]


IMAudioMessageProcessingPipelineComponent : IMTextMessageProcessingPipelineComponent
  // instance methods
  -[IMAudioMessageProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMAudioMessageProcessingPipelineComponent createMessageItemWithInput:]


IMDiMessageIDSTrustedData : NSObject <NSCopying>
 @property  NSString *fromPushID
 @property  NSData *fromToken
 @property  NSString *fromIdentifier
 @property  NSString *toIdentifier
 @property  BOOL isFromMe
 @property  long long command

  // instance methods
  -[IMDiMessageIDSTrustedData command]
  -[IMDiMessageIDSTrustedData .cxx_destruct]
  -[IMDiMessageIDSTrustedData copyWithZone:]
  -[IMDiMessageIDSTrustedData fromIdentifier]
  -[IMDiMessageIDSTrustedData isFromMe]
  -[IMDiMessageIDSTrustedData fromPushID]
  -[IMDiMessageIDSTrustedData toIdentifier]
  -[IMDiMessageIDSTrustedData initWithTopLevelMessage:fromPushID:]
  -[IMDiMessageIDSTrustedData fromToken]


IMDCollaborationNoticeDispatcher : NSObject <IDSServiceDelegate>
 @property  IDSService *gelatoService
 @property  <IMDCollaborationNoticeDispatcherDelegate> *delegate
 @property  IMDCollaborationNoticeRateLimiter *rateLimiter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDCollaborationNoticeDispatcher noticeFanoutThreshold]
  +[IMDCollaborationNoticeDispatcher unarchiveNoticeTransmissionEvent:]
  +[IMDCollaborationNoticeDispatcher _SWCollaborationNoticeTransmissionMessageClass]

  // instance methods
  -[IMDCollaborationNoticeDispatcher setRateLimiter:]
  -[IMDCollaborationNoticeDispatcher rateLimiter]
  -[IMDCollaborationNoticeDispatcher setDelegate:]
  -[IMDCollaborationNoticeDispatcher delegate]
  -[IMDCollaborationNoticeDispatcher dealloc]
  -[IMDCollaborationNoticeDispatcher senderLoginIDs]
  -[IMDCollaborationNoticeDispatcher .cxx_destruct]
  -[IMDCollaborationNoticeDispatcher _handlesMinusSenderServiceAccountID:]
  -[IMDCollaborationNoticeDispatcher reflectDismissalForNoticeGUIDs:]
  -[IMDCollaborationNoticeDispatcher service:account:incomingMessage:fromID:context:]
  -[IMDCollaborationNoticeDispatcher setGelatoService:]
  -[IMDCollaborationNoticeDispatcher handleIncomingNoticeProtobuf:service:account:fromID:context:]
  -[IMDCollaborationNoticeDispatcher gelatoService]
  -[IMDCollaborationNoticeDispatcher init]
  -[IMDCollaborationNoticeDispatcher sendNotice:toHandles:]


IMBlastdoor : NSObject
  // class methods
  +[IMBlastdoor logger]
  +[IMBlastdoor _convertErrorToBlastdoorError:]
  +[IMBlastdoor sendSMSDictionary:withCompletionBlock:]
  +[IMBlastdoor supportsFeature:]
  +[IMBlastdoor _commandReadyForBlastdoor:]
  +[IMBlastdoor sendDictionary:withCompletionBlock:]
  +[IMBlastdoor _messageBlastdoorMetricsEnabled]
  +[IMBlastdoor blastdoorInterface]
  +[IMBlastdoor sendCollaborationNoticeActionDictionary:withCompletionBlock:]
  +[IMBlastdoor sendCollaborationNoticeData:withCompletionBlock:]
  +[IMBlastdoor sendBlastDoorError:guid:messageTypeString:senderURI:senderToken:messageContext:payloadAttachmentURL:]
  +[IMBlastdoor _askToTapToRadarForGUID:messageTypeString:sender:errorString:payloadAttachmentURL:]


IMDCKCacheDeleteManager : NSObject
 @property  BOOL alreadyCapturedErrorWithAutoBugCapture
 @property  BOOL allowsWritingToDisk
 @property  BOOL deviceLowOnDiskSpace
 @property  BOOL isUsingCentralizedModel
 @property  BOOL isUpdatingAttachmentFileSizes

  // class methods
  +[IMDCKCacheDeleteManager sharedInstance]

  // instance methods
  -[IMDCKCacheDeleteManager __wrapperAroundCacheDeletePurgingCallback:urgency:]
  -[IMDCKCacheDeleteManager isUsingCentralizeCacheDelete]
  -[IMDCKCacheDeleteManager deleteAttachmentsAndReturnBytesDeleted:urgency:]
  -[IMDCKCacheDeleteManager _purgeableSpaceGivenUrgency:]
  -[IMDCKCacheDeleteManager _fetchTransfersFromCloudKit:withActivity:]
  -[IMDCKCacheDeleteManager _deleteAttachmentsAndReturnBytesDeleted:]
  -[IMDCKCacheDeleteManager __wrapperAroundCacheDeletePurgeNotificationCallback:]
  -[IMDCKCacheDeleteManager purgeableAttachmentSize]
  -[IMDCKCacheDeleteManager createDictionaryForNotDeletingAnyAttachments:urgency:]
  -[IMDCKCacheDeleteManager registerWithCacheDelete]
  -[IMDCKCacheDeleteManager setIsUpdatingAttachmentFileSizes:]
  -[IMDCKCacheDeleteManager setIsUsingCentralizedModel:]
  -[IMDCKCacheDeleteManager _fileTransfersToDelete:]
  -[IMDCKCacheDeleteManager _getIndexSetForBatch:indexOfTransfers:]
  -[IMDCKCacheDeleteManager canWriteFileOfEstimatedSize:refreshCachedValue:]
  -[IMDCKCacheDeleteManager _postTransferInfoOfDeletedTransfers:]
  -[IMDCKCacheDeleteManager resetAttachmentWatermark]
  -[IMDCKCacheDeleteManager reportAvailableSpaceToBeDeleted:urgency:]
  -[IMDCKCacheDeleteManager setDeviceLowOnDiskSpace:]
  -[IMDCKCacheDeleteManager isDeviceLowOnDiskSpace]
  -[IMDCKCacheDeleteManager __wrapperAroundCacheDeletePurgeableCallback:urgency:]
  -[IMDCKCacheDeleteManager _fetchTransfersFromCloudKit:indexOfTransfers:numberOfBatchesToFetch:activity:withCompletion:]
  -[IMDCKCacheDeleteManager _ckUtilitiesSharedInstance]
  -[IMDCKCacheDeleteManager _deviceConditionsAllowsAttachmentFileSizeUpdateForActivity:]
  -[IMDCKCacheDeleteManager _fileTransfersToValidate:]
  -[IMDCKCacheDeleteManager setAllowsWritingToDisk:]
  -[IMDCKCacheDeleteManager allowsWritingToDisk]
  -[IMDCKCacheDeleteManager _deleteFilesOnDiskAndUpdateTransfers:]
  -[IMDCKCacheDeleteManager _cacheDeleteSetUp]
  -[IMDCKCacheDeleteManager purgeAttachments:]
  -[IMDCKCacheDeleteManager isUsingCentralizedModel]
  -[IMDCKCacheDeleteManager isUpdatingAttachmentFileSizes]
  -[IMDCKCacheDeleteManager _shouldFetchNextBatch:totalTransfers:]
  -[IMDCKCacheDeleteManager metricAttachmentsToPurge:withActivity:]
  -[IMDCKCacheDeleteManager updateAttachmentFileSizesWithActivity:]
  -[IMDCKCacheDeleteManager _copyAttachmentRecord:]
  -[IMDCKCacheDeleteManager setAlreadyCapturedErrorWithAutoBugCapture:]
  -[IMDCKCacheDeleteManager _cacheDeleteRequestCacheableSpaceGuidanceWithID:diskVolume:urgency:requestedSize:]
  -[IMDCKCacheDeleteManager _indexOfNextBatch:totalTransfers:indexOfTransfers:]
  -[IMDCKCacheDeleteManager alreadyCapturedErrorWithAutoBugCapture]
  -[IMDCKCacheDeleteManager init]
  -[IMDCKCacheDeleteManager shouldDownloadAssetsOfSize:refreshCachedValue:]


IMDAvailabilityAutoReplier : NSObject <IMDAutoReplying>
 @property  NSObject<OS_dispatch_queue> *privateWorkQueue
 @property  CARAutomaticDNDStatus *automaticDNDStatus
 @property  <IMDAutoReplyDelegate> *replyDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMDAvailabilityAutoReplier setPrivateWorkQueue:]
  -[IMDAvailabilityAutoReplier .cxx_destruct]
  -[IMDAvailabilityAutoReplier privateWorkQueue]
  -[IMDAvailabilityAutoReplier init]
  -[IMDAvailabilityAutoReplier processMessages:inChat:fromIDSID:]
  -[IMDAvailabilityAutoReplier replyDelegate]
  -[IMDAvailabilityAutoReplier setReplyDelegate:]
  -[IMDAvailabilityAutoReplier _processMessagesForAvailabilityAutoReply:forIncomingMessageFromIDSID:inChat:]
  -[IMDAvailabilityAutoReplier _userIsAvailableToHandle:]
  -[IMDAvailabilityAutoReplier _dndHandleForIMDHandle:]
  -[IMDAvailabilityAutoReplier _chatEligibleForAvailabilityInformation:]
  -[IMDAvailabilityAutoReplier _messageSenderEligibleToReceiveAvailabilityInformation:]
  -[IMDAvailabilityAutoReplier _messageItemsSupportingAvailabilityReplyFromItems:]
  -[IMDAvailabilityAutoReplier _sendDeliveredQuietelyForMessages:forIncomingMessageFromIDSID:inChat:]
  -[IMDAvailabilityAutoReplier _sendTextAutoReplyIfNecessaryForMessages:withUrgentBreakthroughInstructions:inChat:]
  -[IMDAvailabilityAutoReplier _deviceIsPhone]
  -[IMDAvailabilityAutoReplier _deviceSupportsiMessageAutoReply]
  -[IMDAvailabilityAutoReplier _localDeviceHasSIMMatchingChat:]
  -[IMDAvailabilityAutoReplier _deviceSupportsSMSAutoReplyForChat:]
  -[IMDAvailabilityAutoReplier _isInDrivingFocus]
  -[IMDAvailabilityAutoReplier _haveRecentlySentUnavailabilityAutoReplyMessageToChat:]
  -[IMDAvailabilityAutoReplier _messageItemsSupportingBreakthroughNotifications:]
  -[IMDAvailabilityAutoReplier _messageItemSupportsBreakthroughNotification:]
  -[IMDAvailabilityAutoReplier _messageItemSupportsAvailabilityReply:]
  -[IMDAvailabilityAutoReplier _messageGuidsForMessages:]
  -[IMDAvailabilityAutoReplier _shouldIgnoreDoNotDisturbForMessages:inChat:]
  -[IMDAvailabilityAutoReplier _haveRecentUrgentMessageInGracePeriodForChat:]
  -[IMDAvailabilityAutoReplier iterateRecentMessagesInChat:withBlock:]
  -[IMDAvailabilityAutoReplier _isSMSChat:]
  -[IMDAvailabilityAutoReplier _messageHasLegacyUrgentTriggerMatchInText:]
  -[IMDAvailabilityAutoReplier _autoReplyMessageTextWithUrgentBreakthroughInstructions:]
  -[IMDAvailabilityAutoReplier _sendTextAutoReplyToChat:withUrgentBreakthroughInstructions:]
  -[IMDAvailabilityAutoReplier _shouldSendTextAutoReplyForChat:]
  -[IMDAvailabilityAutoReplier _stringForAutoReplyAudience:]
  -[IMDAvailabilityAutoReplier _autoReplyAudience]
  -[IMDAvailabilityAutoReplier _customizedAutoReplyMessage]
  -[IMDAvailabilityAutoReplier _audience:allowsRepliesToChat:]
  -[IMDAvailabilityAutoReplier _contactsContainsParticipants:]
  -[IMDAvailabilityAutoReplier _favoritesContainsParticipants:]
  -[IMDAvailabilityAutoReplier _hasRecentOutgoingMessagesInChat:]
  -[IMDAvailabilityAutoReplier _messageIsSOS:]
  -[IMDAvailabilityAutoReplier _sosTransportValidForMessage:]
  -[IMDAvailabilityAutoReplier _sosURLMatchInText:]
  -[IMDAvailabilityAutoReplier automaticDNDStatus]
  -[IMDAvailabilityAutoReplier setAutomaticDNDStatus:]


IMDCKMockDatabase : CKDatabase
 @property  NSDictionary *identifierToZoneMap

  // instance methods
  -[IMDCKMockDatabase addOperation:]
  -[IMDCKMockDatabase _initWithContainer:scope:]
  -[IMDCKMockDatabase identifierToZoneMap]
  -[IMDCKMockDatabase dealloc]
  -[IMDCKMockDatabase _zoneManager]
  -[IMDCKMockDatabase init]
  -[IMDCKMockDatabase _zoneIdentifierForOperation:]


IMMessageLegacyProcessingPipelineComponent : IMPipelineComponent
  // instance methods
  -[IMMessageLegacyProcessingPipelineComponent .cxx_destruct]
  -[IMMessageLegacyProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMMessageLegacyProcessingPipelineComponent initWithServiceSession:idsTrustedData:account:messageContext:]


IMDiMessageIDSDelegate : NSObject <IDSServiceDelegatePrivate>
 @property  IDSService *idsService
 @property  IDSService *bizChatService
 @property  IMDiMessageIncomingMessageHandler *handler
 @property  IMDMessageStore *messageStore
 @property  IMDAccountController *accountController
 @property  IMDMessageFromStorageController *messageFromStorageController
 @property  IMDChatRegistry *chatRegistry
 @property  IMDMessageSuppressionController *messageSuppressionController
 @property  IMDRecentsController *recentsController
 @property  IMDAttachmentStore *attachmentStore
 @property  BOOL runningInAutomation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDiMessageIDSDelegate addStandardCommandHandlersToRegistry:]
  +[IMDiMessageIDSDelegate addLockdownCommandHandlersToRegistry:]
  +[IMDiMessageIDSDelegate commandHandlerRegistry]
  +[IMDiMessageIDSDelegate isDefaultPairedDevice:withAccount:]

  // instance methods
  -[IMDiMessageIDSDelegate messageStore]
  -[IMDiMessageIDSDelegate messageSuppressionController]
  -[IMDiMessageIDSDelegate accountController]
  -[IMDiMessageIDSDelegate setRunningInAutomation:]
  -[IMDiMessageIDSDelegate idsService]
  -[IMDiMessageIDSDelegate .cxx_destruct]
  -[IMDiMessageIDSDelegate broadcaster]
  -[IMDiMessageIDSDelegate attachmentStore]
  -[IMDiMessageIDSDelegate initWithiMessageService:bizChatService:incomingMessageHandler:messageStore:chatRegistry:accountController:messageSuppressionController:storageController:recentsController:attachmentStore:]
  -[IMDiMessageIDSDelegate handler]
  -[IMDiMessageIDSDelegate chatRegistry]
  -[IMDiMessageIDSDelegate messageFromStorageController]
  -[IMDiMessageIDSDelegate recentsController]
  -[IMDiMessageIDSDelegate bizChatService]
  -[IMDiMessageIDSDelegate init]
  -[IMDiMessageIDSDelegate runningInAutomation]
  -[IMDiMessageIDSDelegate service:account:incomingTopLevelMessage:fromID:messageContext:]


IMDNotificationResponseUtilities : NSObject <UNUserNotificationCenterDelegate>
 @property  UNUserNotificationCenter *notificationCenter
 @property  IMDScreenTimeAskReponseHandler *screenTimeAskReponseHandler
 @property  IMDFamilyInviteReponseHandler *familyInviteResponseHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDNotificationResponseUtilities sharedInstance]

  // instance methods
  -[IMDNotificationResponseUtilities notificationCenter]
  -[IMDNotificationResponseUtilities setNotificationCenter:]
  -[IMDNotificationResponseUtilities familyInviteResponseHandler]
  -[IMDNotificationResponseUtilities _markMessageAsRead:inChat:withCompletionHandler:]
  -[IMDNotificationResponseUtilities .cxx_destruct]
  -[IMDNotificationResponseUtilities userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[IMDNotificationResponseUtilities screenTimeAskReponseHandler]
  -[IMDNotificationResponseUtilities setScreenTimeAskReponseHandler:]
  -[IMDNotificationResponseUtilities _setupNotificationCenter]
  -[IMDNotificationResponseUtilities init]
  -[IMDNotificationResponseUtilities setFamilyInviteResponseHandler:]


IMDCKChatSyncCKOperationFactory : NSObject
  // instance methods
  -[IMDCKChatSyncCKOperationFactory _chatFetchRecordZoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:]
  -[IMDCKChatSyncCKOperationFactory _chatFetchRecordZoneChangesCKConfiguration:]
  -[IMDCKChatSyncCKOperationFactory _chatSyncOperationGroupWithName:]
  -[IMDCKChatSyncCKOperationFactory _chatSyncOperationGroup]
  -[IMDCKChatSyncCKOperationFactory fetchChatZoneChangesCKOperationUsingToken:zone:resultsLimit:groupName:activity:]
  -[IMDCKChatSyncCKOperationFactory fetchChatZoneChangesCKOperationUsingToken:zone:resultsLimit:activity:]
  -[IMDCKChatSyncCKOperationFactory _chatWriteRecordsCKConfiguration:]
  -[IMDCKChatSyncCKOperationFactory saveChatsCKOperationUsingRecordsToSave:activity:]
  -[IMDCKChatSyncCKOperationFactory deleteChatCKOperationUsingRecordIDstoDelete:]
  -[IMDCKChatSyncCKOperationFactory fetchChatCKOperationUsingRecordIDs:]


IMDServiceController : NSObject
 @property  NSArray *allServices

  // class methods
  +[IMDServiceController sharedInstance]

  // instance methods
  -[IMDServiceController dealloc]
  -[IMDServiceController allServices]
  -[IMDServiceController registerSessionClassWithBundle:]
  -[IMDServiceController serviceWithName:]
  -[IMDServiceController init]


IMDNicknameController : NSObject <IMSystemMonitorListener>
 @property  IDSKVStore *kvStore
 @property  double lastMeContactStoreSync
 @property  IDSKVStore *handledNicknamesKVStore
 @property  IDSKVStore *pendingNicknameUpdatesKVStore
 @property  IDSKVStore *handleSharingKVStore
 @property  NSMutableDictionary *handledNicknames
 @property  NSMutableDictionary *pendingNicknameUpdates
 @property  NSMutableSet *handleAllowList
 @property  NSMutableSet *handleDenyList
 @property  IMNickname *personalNickname
 @property  BOOL needToLoadMapsInfoFromDisk
 @property  NSMutableArray *chatsToSendNicknameInfoTo
 @property  BOOL nicknameIsUploadingToCK
 @property  NSSet *allowListedHandlesForSharing
 @property  NSSet *denyListedHandlesForSharing

  // class methods
  +[IMDNicknameController sharedInstance]

  // instance methods
  -[IMDNicknameController setKvStore:]
  -[IMDNicknameController kvStore]
  -[IMDNicknameController _tryToReuploadPersonalNicknameWithRetryCount:reuploadVersion:]
  -[IMDNicknameController _broadcastPendingMapChanged]
  -[IMDNicknameController _beginNicknameUpload:]
  -[IMDNicknameController defaults]
  -[IMDNicknameController markNicknameAsUpdated:]
  -[IMDNicknameController needToLoadMapsInfoFromDisk]
  -[IMDNicknameController pendingPersonalNickname]
  -[IMDNicknameController nickNameRecordID]
  -[IMDNicknameController setHandledNicknamesKVStore:]
  -[IMDNicknameController _ckAccountChanged:]
  -[IMDNicknameController broadcastHandlesSharingNicknamesDidChange]
  -[IMDNicknameController newDeviceDidSignIntoiMessage]
  -[IMDNicknameController denyHandlesForSharing:]
  -[IMDNicknameController setChatsToSendNicknameInfoTo:]
  -[IMDNicknameController _populateNicknameDictionary:forKVStore:limitToLoad:]
  -[IMDNicknameController chatsToSendNicknameInfoTo]
  -[IMDNicknameController nicknameForRecordID:handle:]
  -[IMDNicknameController _isNicknamesSharingEnabled]
  -[IMDNicknameController _endNicknameUpload]
  -[IMDNicknameController _newDeviceDidSignIntoiMessageWithRetryCount:]
  -[IMDNicknameController nicknameForRecordID:]
  -[IMDNicknameController _updateCloudKitRecordIDAndDecryptionKeyIfNeededFromMadridMessage:]
  -[IMDNicknameController _nicknameFeatureEnabled]
  -[IMDNicknameController _deletePublicNicknameLocationAndKey]
  -[IMDNicknameController deleteAllPersonalNicknames:withCompletion:]
  -[IMDNicknameController handledNicknames]
  -[IMDNicknameController _updateDenyAllowListHandlesVersion]
  -[IMDNicknameController nicknameForHandleURI:]
  -[IMDNicknameController allowHandlesForSharing:onChatGUIDs:]
  -[IMDNicknameController addNicknameToPendingUpdates:]
  -[IMDNicknameController _deleteHandleIDFromHandledMap:]
  -[IMDNicknameController dealloc]
  -[IMDNicknameController setLastMeContactStoreSync:]
  -[IMDNicknameController _sendMessageDictionary:toDevice:]
  -[IMDNicknameController getNicknameWithRecordID:decryptionKey:completionBlock:]
  -[IMDNicknameController _requestingToSendLocalNicknameInfo:]
  -[IMDNicknameController _reuploadLocalProfileVersionNumber]
  -[IMDNicknameController _markNicknameAsUpdated:incrementPendingNicknameVersion:]
  -[IMDNicknameController .cxx_destruct]
  -[IMDNicknameController _updateMessageDictionaryWithPendingNicknameUpdates:]
  -[IMDNicknameController pendingNicknameUpdates]
  -[IMDNicknameController _deleteDataUnderScrutiny]
  -[IMDNicknameController _makeAllNicknameContentsClassC]
  -[IMDNicknameController _getPendingNicknameForUpload]
  -[IMDNicknameController handleNicknameUpdatesFromPeerDevice:fromPeerDevice:]
  -[IMDNicknameController _deleteHandleIDFromPendingMap:]
  -[IMDNicknameController substringRecordIDForNickname:]
  -[IMDNicknameController nickNameDecryptionKey]
  -[IMDNicknameController handleAllowList]
  -[IMDNicknameController currentPersonalNicknamewithCompletionBlock:]
  -[IMDNicknameController _updatePendingNicknameVersion]
  -[IMDNicknameController setPersonalNickname:completionBlock:]
  -[IMDNicknameController setPendingNicknameUpdates:]
  -[IMDNicknameController loadHandledNicknamesAndPendingUpdates]
  -[IMDNicknameController sendPersonalNicknameRecordIDAndVersionToAllPeers]
  -[IMDNicknameController _storePublicNickname:nicknameLocation:encryptionKey:]
  -[IMDNicknameController _writeNicknameToKVStore:nickname:]
  -[IMDNicknameController ignorePendingNicknameForHandleID:]
  -[IMDNicknameController _loadAllInfoFromDiskIfAble]
  -[IMDNicknameController loadPersonalNicknameIfNeeded]
  -[IMDNicknameController _resetHandleSharingList]
  -[IMDNicknameController _evaluateIfAccountHasMultiplePhoneNumbers]
  -[IMDNicknameController messageDictionaryWithPersonalRecordIDAndVersion]
  -[IMDNicknameController allowListedHandlesForSharing]
  -[IMDNicknameController _isUnderScrutiny]
  -[IMDNicknameController aliasesDidChange:]
  -[IMDNicknameController lastMeContactStoreSync]
  -[IMDNicknameController personalNickname]
  -[IMDNicknameController pendingNicknameUpdatesKVStore]
  -[IMDNicknameController evaluateAccountStateForFeatureEligibility]
  -[IMDNicknameController markAllNicknamesAsPending]
  -[IMDNicknameController sendNicknamePreferencesDidChange]
  -[IMDNicknameController currentPersonalNicknameWithRecordID:decryptionKey:completionBlock:]
  -[IMDNicknameController deviceSignedOutOfiMessage]
  -[IMDNicknameController _deviceUnderFirstUnlock]
  -[IMDNicknameController setHandleDenyList:]
  -[IMDNicknameController _clearSharingLists]
  -[IMDNicknameController _updateHandleList:withHandles:forKey:broadcastUpdates:]
  -[IMDNicknameController allNicknames]
  -[IMDNicknameController _storePendingNicknameForUpload:]
  -[IMDNicknameController sendPendingNicknameUpdatesDidChange]
  -[IMDNicknameController _deleteNicknameFromPendingMap:]
  -[IMDNicknameController setNicknameIsUploadingToCK:]
  -[IMDNicknameController _retryPeerRequestWithRetry:]
  -[IMDNicknameController systemDidLeaveFirstDataProtectionLock]
  -[IMDNicknameController transferServicesController]
  -[IMDNicknameController setNeedToLoadMapsInfoFromDisk:]
  -[IMDNicknameController _markNicknameAsUpdatedForHandleID:]
  -[IMDNicknameController replacedNicknameForHandleIDInHandledMapIfNeeded:nickname:]
  -[IMDNicknameController _setUnderScrutiny:]
  -[IMDNicknameController cleanUpNicknameForID:]
  -[IMDNicknameController clearPendingNicknameForHandleID:]
  -[IMDNicknameController nicknameIsUploadingToCK]
  -[IMDNicknameController storedPersonalNickname]
  -[IMDNicknameController NicknameWithRecordID:URI:decryptionKey:withCompletionBlock:]
  -[IMDNicknameController sendPersonalNicknameToChat:]
  -[IMDNicknameController handleDenyList]
  -[IMDNicknameController setHandleSharingKVStore:]
  -[IMDNicknameController nicknameForHandle:]
  -[IMDNicknameController _updateNicknameInHandledMap:]
  -[IMDNicknameController setHandleAllowList:]
  -[IMDNicknameController _syncHandleAllowDenyListToOtherDevices]
  -[IMDNicknameController _deleteAvatarForNickname:]
  -[IMDNicknameController handleSharingKVStore]
  -[IMDNicknameController reuploadProfileIfNeeded]
  -[IMDNicknameController denyListedHandlesForSharing]
  -[IMDNicknameController _uploadPendingNicknameIfNecessary]
  -[IMDNicknameController sendPersonalNicknameRecordIDAndVersionRequestedByDevice:]
  -[IMDNicknameController queueChatToSendNicknamePostUploadIfNeeded:]
  -[IMDNicknameController setHandledNicknames:]
  -[IMDNicknameController loadSharingHandlesPrefs]
  -[IMDNicknameController _updateSharingPreferencesIfNeededFromMadridMessage:]
  -[IMDNicknameController verifyTruncatedRecordIDMatchesPersonalNickname:forChat:]
  -[IMDNicknameController setPersonalNickname:]
  -[IMDNicknameController _updateHandleDenyAllowListIfNeeded:]
  -[IMDNicknameController init]
  -[IMDNicknameController setPendingNicknameUpdatesKVStore:]
  -[IMDNicknameController _showDebugAlertWithHeader:message:]
  -[IMDNicknameController saveNicknameForRecordID:handleID:userNickname:]
  -[IMDNicknameController handledNicknamesKVStore]
  -[IMDNicknameController _updateHandledNicknamesIfNeeded:]
  -[IMDNicknameController _deletePendingNicknameForUpload]


IMDMessageSortOrderAssigner : NSObject
  // instance methods
  -[IMDMessageSortOrderAssigner messageWithGUID:]
  -[IMDMessageSortOrderAssigner copyOfMessagesWithReplyToGUID:]
  -[IMDMessageSortOrderAssigner compareMessageToOtherMessagesWithSameReplyToGUIDAndAssignSortID:existingMessagesWithSameReplyToGUID:]
  -[IMDMessageSortOrderAssigner assignSortIDToIncomingMessageWithNoExistingMessagesWithSameReplyToGUID:onChat:]
  -[IMDMessageSortOrderAssigner persistMessage:]
  -[IMDMessageSortOrderAssigner assignSortIDToIncomingMessage:onChat:]
  -[IMDMessageSortOrderAssigner assignAndPersistSortIDForIncomingMessage:onChat:]


IMDMessageStore : NSObject <IMSystemMonitorListener, IMFocusStateManagerDelegate>
 @property  NSString *modificationStamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDMessageStore sharedInstance]
  +[IMDMessageStore databaseNoLongerFull]
  +[IMDMessageStore _displayDatabaseFullAlert]
  +[IMDMessageStore _updateCacheForMessageGUID:fromMessage:toMessage:updateLastMessage:calculateUnreadCount:]
  +[IMDMessageStore databaseFull]
  +[IMDMessageStore _missingMessageReadReceiptCache]

  // instance methods
  -[IMDMessageStore deleteMessageGUIDs:inChat:]
  -[IMDMessageStore focusStateDidChange]
  -[IMDMessageStore updateSyndicatedMessageWithSyndicationMessageAction:]
  -[IMDMessageStore lastTUConversationItemForChat:]
  -[IMDMessageStore lastFailedMessageDate]
  -[IMDMessageStore _performBlock:afterDelay:]
  -[IMDMessageStore markMessageAsCleanWithROWID:]
  -[IMDMessageStore deleteMessageFromSpotlightWithGUID:]
  -[IMDMessageStore unreadMessagesWithRoomNames:onServices:limit:fallbackGUID:]
  -[IMDMessageStore markMessagesAsReadWithChatGUIDs:upToGUID:readDate:fromMe:]
  -[IMDMessageStore deleteMessagesWithReplaceMessageID:fromHandle:onService:]
  -[IMDMessageStore _suppressDBUpdateTimerFired]
  -[IMDMessageStore resolveUnformattedRepresentationsForHandles:onService:message:completionBlock:]
  -[IMDMessageStore storeMessage:forceReplace:modifyError:modifyFlags:flagMask:]
  -[IMDMessageStore chatForMessageGUID:enableVerboseLogging:]
  -[IMDMessageStore deleteMessagesWithChatIdentifiers:style:onServices:]
  -[IMDMessageStore messagesPendingUpdateT2ToCloudKitWithLimit:]
  -[IMDMessageStore _messagesPendingUpdateT1ToCloudKitWithLimit:attemptCount:]
  -[IMDMessageStore _chatRegistrySharedInstance]
  -[IMDMessageStore retractPostedNotificationsForMessageGUIDs:]
  -[IMDMessageStore canStoreItem:onService:]
  -[IMDMessageStore chatsForMessageGUID:]
  -[IMDMessageStore messageWithReplaceMessageID:fromHandle:onService:]
  -[IMDMessageStore markMessageGUIDUnread:]
  -[IMDMessageStore chatForMessageIdentifier:]
  -[IMDMessageStore itemsWithRoomNames:onServices:messageGUID:threadIdentifier:limit:]
  -[IMDMessageStore cleanUnformattedPhoneNumber:countryCode:]
  -[IMDMessageStore dealloc]
  -[IMDMessageStore storeMessage:forceReplace:modifyError:modifyFlags:flagMask:updateMessageCache:calculateUnreadCount:reindexMessage:]
  -[IMDMessageStore _itemsWithGUIDs:]
  -[IMDMessageStore _messageItemsForMessageRecords:handleID:useAttachmentCache:shouldLoadAttachments:reverseOrder:]
  -[IMDMessageStore hasStoredMessageWithGUID:]
  -[IMDMessageStore _itemsForMessageRecords:handleID:useAttachmentCache:shouldLoadAttachments:reverseOrder:]
  -[IMDMessageStore messageWithGUID:]
  -[IMDMessageStore _itemsWithRoomNames:onServices:messageGUID:threadIdentifier:limit:onlyMessages:]
  -[IMDMessageStore .cxx_destruct]
  -[IMDMessageStore _calculateUnreadMessagesCountFilteredByFocus]
  -[IMDMessageStore rebuildLastFailedMessageDate]
  -[IMDMessageStore existingChatForMessageGUID:]
  -[IMDMessageStore databaseChatSpamUpdated:]
  -[IMDMessageStore _fileTransferCenter]
  -[IMDMessageStore updateStamp]
  -[IMDMessageStore updateSyndicatedMessageWithMessageGUID:newRange:]
  -[IMDMessageStore markAllMessagesAsNeedingCloudKitSync]
  -[IMDMessageStore storeEditedMessage:editedPartIndex:editType:previousMessage:chat:updatedAssociatedMessageItems:]
  -[IMDMessageStore _updateModificationDate]
  -[IMDMessageStore _shouldUseBadgeUtilities]
  -[IMDMessageStore attachmentsWithHandles:onServices:]
  -[IMDMessageStore frequentRepliesForForChatIdentifiers:onServices:limit:]
  -[IMDMessageStore _chatsForMessageGUID:enableVerboseLogging:]
  -[IMDMessageStore __postDBUpdate]
  -[IMDMessageStore deleteMessagesFromTombStoneTableWithRecordIDs:]
  -[IMDMessageStore messageWithGUID:registerAttachments:]
  -[IMDMessageStore chatForMessageGUID:]
  -[IMDMessageStore addMissingMessageReadReceipt:]
  -[IMDMessageStore messagesPendingUpdateT1ToCloudKitWithLimit:]
  -[IMDMessageStore canStoreMessage:onService:]
  -[IMDMessageStore markMessagesAsReadWithIdentifiers:onServices:chatStyle:upToGUID:readDate:fromMe:]
  -[IMDMessageStore unreadMessagesWithHandles:onServices:limit:fallbackGUID:]
  -[IMDMessageStore markMessageAsDeduplicated:]
  -[IMDMessageStore itemsWithHandles:onServices:messageGUID:limit:]
  -[IMDMessageStore _copyHandle:onService:]
  -[IMDMessageStore _fileTransferGUIDsInMessageBody:]
  -[IMDMessageStore _itemsWithHandles:onServices:messageGUID:threadIdentifier:limit:onlyMessages:]
  -[IMDMessageStore itemsWithHandles:onServices:messageGUID:threadIdentifier:limit:]
  -[IMDMessageStore setSuppressDatabaseUpdates:]
  -[IMDMessageStore rebuildUnreadMessageCount]
  -[IMDMessageStore messageActionItemsForOriginalMessageGUID:]
  -[IMDMessageStore chatForMessage:]
  -[IMDMessageStore attachmentsWithRoomNames:onServices:]
  -[IMDMessageStore markMessageAsIgnoreButNeedingSyncWithROWID:]
  -[IMDMessageStore updatePostedNotificationsForMessageGUIDs:]
  -[IMDMessageStore existingMessageSimilarToMessage:skipServices:skipGUIDs:withinTimeInterval:participants:]
  -[IMDMessageStore messagesThatNeedSyncWithCloudKitWithLimit:]
  -[IMDMessageStore storeMessage:forceReplace:modifyError:modifyFlags:flagMask:updateMessageCache:calculateUnreadCount:]
  -[IMDMessageStore lastMessageWithHandles:onServices:]
  -[IMDMessageStore modificationStamp]
  -[IMDMessageStore performInitialHousekeeping]
  -[IMDMessageStore _handlesForChat:]
  -[IMDMessageStore isSuppressDatabaseUpdates]
  -[IMDMessageStore copyMessagesThatNeedToBeDeletedInCloudKitWithLimit:]
  -[IMDMessageStore updateSyndicatedMessageWithMessageItem:newRange:]
  -[IMDMessageStore loadConsumedSessionPayloadsForItems:]
  -[IMDMessageStore itemWithGUID:]
  -[IMDMessageStore _chatsForMessageIdentifier:]
  -[IMDMessageStore _deleteMessagesWithGUIDs:chatIdentifiers:style:onServices:batchNumber:completion:]
  -[IMDMessageStore itemsWithRoomNames:onServices:limit:]
  -[IMDMessageStore postUrgentNotificationsForMessageGUIDs:]
  -[IMDMessageStore lastSyncedMessageRowID]
  -[IMDMessageStore postCountChanges]
  -[IMDMessageStore updateFileTransfer:]
  -[IMDMessageStore replaceMessageAcknowledgmentsWithNewMessageAcknowledgment:associatedMessageGUID:sender:]
  -[IMDMessageStore _updateAssociatedMessageItemsFromMessage:toMessage:]
  -[IMDMessageStore itemsWithHandles:onServices:limit:]
  -[IMDMessageStore _messagesPendingUpdateT2ToCloudKitWithLimit:attemptCount:]
  -[IMDMessageStore lastMessageWithRoomNames:onServices:]
  -[IMDMessageStore chatsForMessage:]
  -[IMDMessageStore notificationContext]
  -[IMDMessageStore messagesWithReplyToGUID:]
  -[IMDMessageStore unreadMessagesCount]
  -[IMDMessageStore _messagesThatNeedSyncWithCloudKitWithLimit:attemptCount:]
  -[IMDMessageStore isAttachmentReferencedByMessage:]
  -[IMDMessageStore _storeAttachmentsForMessage:]
  -[IMDMessageStore _isValidPhoneNumber:forCountryCode:]
  -[IMDMessageStore messagesWithGUIDs:]
  -[IMDMessageStore itemsWithRoomNames:onServices:messageGUID:limit:]
  -[IMDMessageStore _postDBUpdate]
  -[IMDMessageStore _unreadMessagesWithHandles:onServices:limit:fallbackGUID:]
  -[IMDMessageStore _unreadMessagesWithRoomNames:onServices:limit:fallbackGUID:]
  -[IMDMessageStore popReadReceiptForMissingGUID:]
  -[IMDMessageStore _itemsWithAssociatedGUID:shouldLoadAttachments:]
  -[IMDMessageStore clearMessagesTombStoneTable]
  -[IMDMessageStore itemsWithHandles:onServices:messageGUID:numberOfMessagesBefore:numberOfMessagesAfter:threadIdentifier:hasMessagesBefore:hasMessagesAfter:]
  -[IMDMessageStore _cleanupPhoneNumber:]
  -[IMDMessageStore registerTransfersWithGUIDs:forMessageGUID:]
  -[IMDMessageStore deleteMessagesWithChatIdentifiers:style:onServices:completion:]
  -[IMDMessageStore setModificationStamp:]
  -[IMDMessageStore messagesWithAssociatedGUID:]
  -[IMDMessageStore _itemsWithHandlesBeforeAndAfterGUID:handles:onServices:numberOfMessagesBefore:numberOfMessagesAfter:threadIdentifier:hasMessagesBefore:hasMessagesAfter:]
  -[IMDMessageStore storeItem:forceReplace:]
  -[IMDMessageStore _itemClassShouldUpdateTransferForItem:]
  -[IMDMessageStore init]
  -[IMDMessageStore _hasMessagesWithGUIDs:]
  -[IMDMessageStore cleanseAttachments]
  -[IMDMessageStore deleteMessageGUIDs:]
  -[IMDMessageStore messagesWithAssociatedGUID:shouldLoadAttachments:]
  -[IMDMessageStore lastMessageForChatWithRowID:]
  -[IMDMessageStore updateUnformattedID:forBuddyID:onService:]


IMDPhotosSyndicationLibraryChangeListener : NSObject <PHPhotoLibraryChangeObserver>
 @property  PHPhotoLibrary *syndicationLibrary
 @property  NSObject<OS_dispatch_queue> *changeObservationQueue
 @property  PHFetchOptions *analysisFetchOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDPhotosSyndicationLibraryChangeListener sharedInstance]

  // instance methods
  -[IMDPhotosSyndicationLibraryChangeListener startListening]
  -[IMDPhotosSyndicationLibraryChangeListener stopListening]
  -[IMDPhotosSyndicationLibraryChangeListener dealloc]
  -[IMDPhotosSyndicationLibraryChangeListener .cxx_destruct]
  -[IMDPhotosSyndicationLibraryChangeListener photoLibraryDidChange:]
  -[IMDPhotosSyndicationLibraryChangeListener init]
  -[IMDPhotosSyndicationLibraryChangeListener analysisFetchOptions]
  -[IMDPhotosSyndicationLibraryChangeListener syndicationLibrary]
  -[IMDPhotosSyndicationLibraryChangeListener changeObservationQueue]


IMDChat : NSObject <INSpeakable>
 @property  NSString *spokenPhrase
 @property  NSString *pronunciationHint
 @property  NSString *vocabularyIdentifier
 @property  NSArray *alternativeSpeakableMatches
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <IMDaemonListenerChatProtocol> *broadcaster
 @property  NSString *guid
 @property  unsigned char style
 @property  NSString *groupID
 @property  NSString *engramID
 @property  NSString *roomName
 @property  NSString *displayName
 @property  IMMessageItem *lastMessage
 @property  NSDictionary *properties
 @property  NSString *accountID
 @property  unsigned long unreadCount
 @property  long long rowID
 @property  NSArray *participants
 @property  long long isFiltered
 @property  BOOL isBlackholed
 @property  BOOL hasHadSuccessfulQuery
 @property  BOOL isUnnamedChat
 @property  unsigned long numMessagesSent
 @property  BOOL meCardUpdated
 @property  NSString *serverChangeToken
 @property  long long lastMessageTimeStampOnLoad
 @property  NSString *chatIdentifier
 @property  NSString *serviceName
 @property  NSString *persistentID
 @property  NSString *deviceIndependentID
 @property  NSString *pinningIdentifier
 @property  long long state
 @property  NSString *cloudKitRecordID
 @property  long long cloudKitSyncState
 @property  NSString *originalGroupID
 @property  long long lastReadMessageTimeStamp
 @property  NSString *lastSeenMessageGuid
 @property  NSDate *lastTUConversationCreatedDate
 @property  IMDServiceSession *serviceSession
 @property  IMDAccount *account
 @property  IMDService *service
 @property  NSString *lastAddressedLocalHandle
 @property  NSString *lastAddressedSIMID
 @property  NSDictionary *dictionaryRepresentation
 @property  NSDictionary *chatProperties
 @property  BOOL isArchived
 @property  BOOL createEngramGroupOnMessageSend
 @property  BOOL pendingENGroupParticipantUpdate
 @property  NSString *personCentricID
 @property  NSDictionary *nicknamesForParticipants
 @property  BOOL wasReportedAsJunk
 @property  long long autoDonationBehavior
 @property  NSDate *autoDonationBehaviorLastModificationDate

  // class methods
  +[IMDChat _recordType]
  +[IMDChat chatWithCKRecord:]

  // instance methods
  -[IMDChat setServiceName:]
  -[IMDChat setGroupID:]
  -[IMDChat pronunciationHint]
  -[IMDChat rowID]
  -[IMDChat participants]
  -[IMDChat account]
  -[IMDChat accountID]
  -[IMDChat setProperties:]
  -[IMDChat isArchived]
  -[IMDChat alternativeSpeakableMatches]
  -[IMDChat spokenPhrase]
  -[IMDChat setParticipants:]
  -[IMDChat properties]
  -[IMDChat vocabularyIdentifier]
  -[IMDChat setLastMessage:]
  -[IMDChat lastMessage]
  -[IMDChat setAccountID:]
  -[IMDChat style]
  -[IMDChat groupID]
  -[IMDChat state]
  -[IMDChat dealloc]
  -[IMDChat serviceName]
  -[IMDChat .cxx_destruct]
  -[IMDChat isFiltered]
  -[IMDChat serverChangeToken]
  -[IMDChat setDisplayName:]
  -[IMDChat broadcaster]
  -[IMDChat service]
  -[IMDChat addParticipant:]
  -[IMDChat addParticipants:]
  -[IMDChat dictionaryRepresentation]
  -[IMDChat displayName]
  -[IMDChat setGuid:]
  -[IMDChat removeParticipant:]
  -[IMDChat _chatRegistry]
  -[IMDChat setStyle:]
  -[IMDChat setServerChangeToken:]
  -[IMDChat roomName]
  -[IMDChat setRoomName:]
  -[IMDChat recordName]
  -[IMDChat guid]
  -[IMDChat setState:]
  -[IMDChat unreadCount]
  -[IMDChat updateProperties:]
  -[IMDChat persistentID]
  -[IMDChat participantHandles]
  -[IMDChat lastMessageTimeStampOnLoad]
  -[IMDChat lastSeenMessageGuid]
  -[IMDChat lastTUConversationCreatedDate]
  -[IMDChat personCentricID]
  -[IMDChat setChatIdentifier:]
  -[IMDChat autoDonationBehavior]
  -[IMDChat engramID]
  -[IMDChat updateIsBlackholed:]
  -[IMDChat isSMS]
  -[IMDChat isGroupChat]
  -[IMDChat lastAddressedSIMID]
  -[IMDChat deviceIndependentID]
  -[IMDChat pinningIdentifier]
  -[IMDChat compareBySequenceNumberAndDateDescending:]
  -[IMDChat setLastAddressedSIMID:]
  -[IMDChat chatIdentifier]
  -[IMDChat updateIsFiltered:]
  -[IMDChat isBusinessChat]
  -[IMDChat isBlackholed]
  -[IMDChat isNewerThan:]
  -[IMDChat removeParticipants:]
  -[IMDChat isOlderThan:]
  -[IMDChat cloudKitSyncState]
  -[IMDChat setCloudKitSyncState:]
  -[IMDChat cloudKitRecordID]
  -[IMDChat setCloudKitRecordID:]
  -[IMDChat setLastTUConversationCreatedDate:]
  -[IMDChat lastSentMessageDate]
  -[IMDChat setIsFiltered:]
  -[IMDChat updateShouldForceToSMS:]
  -[IMDChat updateSMSCategory:subCategory:]
  -[IMDChat lastTranslatableMessageGUIDWithLanguageCode:]
  -[IMDChat updateLastMessageGUID:forLanguageCode:]
  -[IMDChat isEmergencyChat]
  -[IMDChat updateIsEmergencyChat:]
  -[IMDChat setHasHadSuccessfulQuery:]
  -[IMDChat _mergeParticipantIDs]
  -[IMDChat setLastMessageTimeStampOnLoad:]
  -[IMDChat hasHadSuccessfulQuery]
  -[IMDChat chatProperties]
  -[IMDChat originalGroupID]
  -[IMDChat setOriginalGroupID:]
  -[IMDChat _sortedParticipantIDHashForParticipants:]
  -[IMDChat _sortedParticipantIDHashForParticipants:usesPersonCentricID:]
  -[IMDChat lastReadMessageTimeStamp]
  -[IMDChat lastAddressedLocalHandle]
  -[IMDChat updateServerChangeToken:]
  -[IMDChat _findChatParticipantsWithFromID:]
  -[IMDChat _setParticipantVersion:]
  -[IMDChat _incrementParticipantVersion]
  -[IMDChat _modifyGroupWithServiceSession:groupID:toParticipants:toIdentifier:fromIdentifier:account:messageTimeStamp:]
  -[IMDChat _convergeGroupChatIfNeededWithServiceSession:account:groupID:incomingParticipants:fromIdentifier:toIdentifier:receivedGroupParticipantVersion:receivedGroupProtocolVersion:messageTimeStamp:groupPhotoCreationTime:]
  -[IMDChat powerLogConversationType]
  -[IMDChat copyCKRecordRepresentationWithZoneID:salt:]
  -[IMDChat initWithAccountID:service:guid:groupID:chatIdentifier:participants:roomName:displayName:lastAddressedLocalHandle:lastAddressedSIMID:properties:state:style:isFiltered:hasHadSuccessfulQuery:engramID:serverChangeToken:cloudKitSyncState:originalGroupID:lastReadMessageTimeStamp:lastMessageTimeStampOnLoad:cloudKitRecordID:isBlackholed:autoDonationBehavior:autoDonationBehaviorLastModificationDate:]
  -[IMDChat autoDonationBehaviorLastModificationDate]
  -[IMDChat _setAutoDonationBehavior:lastModificationDate:]
  -[IMDChat setAutoDonationBehavior:lastModificationDate:]
  -[IMDChat setEngramID:]
  -[IMDChat setLastReadMessageTimeStamp:]
  -[IMDChat setLastAddressedLocalHandle:]
  -[IMDChat _setUnreadCount:]
  -[IMDChat setIsBlackholed:]
  -[IMDChat _setRowID:]
  -[IMDChat _updateCachedParticipants]
  -[IMDChat resetParticipants:]
  -[IMDChat recoverParticipantsIfNeeded]
  -[IMDChat serviceSession]
  -[IMDChat engroupCreationDate]
  -[IMDChat dictionaryRepresentationIncludingLastMessage]
  -[IMDChat copyDictionaryRepresentation:]
  -[IMDChat _updateLastMessage:]
  -[IMDChat storeAndBroadcastChatChanges]
  -[IMDChat generateNewGroupID]
  -[IMDChat isUnnamedChat]
  -[IMDChat updateGroupID:]
  -[IMDChat updateEngramID:]
  -[IMDChat updateEngroupCreationDate:]
  -[IMDChat updateLastReadMessageTimeStampIfNeeded:]
  -[IMDChat updateCloudKitSyncState:]
  -[IMDChat updateOriginalGroupID:]
  -[IMDChat updateCloudKitRecordID:]
  -[IMDChat resetCKSyncState]
  -[IMDChat updateLastAddressedHandle:]
  -[IMDChat updateLastAddressedHandle:forceUpdate:]
  -[IMDChat updateLastAddressedSIMID:]
  -[IMDChat updateDisplayName:]
  -[IMDChat updateDisplayName:sender:]
  -[IMDChat updateNumberOfTimesRespondedToThread]
  -[IMDChat updateIsiMessageSpam:]
  -[IMDChat updateSMSSpamExtensionNameChatProperty:]
  -[IMDChat setLastSentMessageDate:]
  -[IMDChat updateReceivedBlackholeError:]
  -[IMDChat updateSMSHandshakeState:]
  -[IMDChat updateMessageHandshakeState:]
  -[IMDChat isiMessageSpam]
  -[IMDChat isSMSSpam]
  -[IMDChat getNumberOfTimesRespondedToThread]
  -[IMDChat receivedBlackholeError]
  -[IMDChat smsHandshakeState]
  -[IMDChat messageHandshakeState]
  -[IMDChat lastSeenMessageGUID]
  -[IMDChat updateLastSeenMessageGuidIfNeeded:]
  -[IMDChat updateHasHadSuccessfulQuery:]
  -[IMDChat groupPhotoGuid]
  -[IMDChat updateGroupPhotoGuid:]
  -[IMDChat groupPhotoUploadFailureCount]
  -[IMDChat updateGroupPhotoUploadFailureCount:]
  -[IMDChat _persistMergedIDMergedChatsIfNeeded:]
  -[IMDChat cloudKitChatID]
  -[IMDChat _ckUniqueID]
  -[IMDChat cloudKitDebugDescription]
  -[IMDChat tearDownToneNotificationSessionIfNeeded]
  -[IMDChat updateNicknamesForParticipants:]
  -[IMDChat meCardHasUpdated]
  -[IMDChat createEngramGroupOnMessageSend]
  -[IMDChat setCreateEngramGroupOnMessageSend:]
  -[IMDChat pendingENGroupParticipantUpdate]
  -[IMDChat setPendingENGroupParticipantUpdate:]
  -[IMDChat nicknamesForParticipants]
  -[IMDChat wasReportedAsJunk]
  -[IMDChat setWasReportedAsJunk:]
  -[IMDChat numMessagesSent]
  -[IMDChat setNumMessagesSent:]
  -[IMDChat meCardUpdated]
  -[IMDChat setMeCardUpdated:]
  -[IMDChat updateCollaborationMetadata:forMessageGUID:]
  -[IMDChat updateDonationStateWithSyndicationAction:]
  -[IMDChat _copyCKRecordFromExistingCKMetadataWithZoneID:salt:]
  -[IMDChat _addGroupPhotoToCKRecord:]
  -[IMDChat applyChangesUsingCKRecord:]


IMBalloonPluginPipelineParameter : IMTextMessagePipelineParameter <IMBalloonPluginPipelineParameter>
 @property  NSString *balloonPluginBundleID
 @property  NSData *balloonPluginPayload
 @property  NSDictionary *combinedPayloadAttachmentDictionary
 @property  long long associatedMessageType
 @property  NSString *associatedMessageGUID
 @property  {_NSRange=QQ} associatedMessageRange

  // class methods
  +[IMBalloonPluginPipelineParameter logger]

  // instance methods
  -[IMBalloonPluginPipelineParameter .cxx_destruct]
  -[IMBalloonPluginPipelineParameter setAssociatedMessageGUID:]
  -[IMBalloonPluginPipelineParameter setAssociatedMessageType:]
  -[IMBalloonPluginPipelineParameter associatedMessageGUID]
  -[IMBalloonPluginPipelineParameter associatedMessageType]
  -[IMBalloonPluginPipelineParameter associatedMessageRange]
  -[IMBalloonPluginPipelineParameter setAssociatedMessageRange:]
  -[IMBalloonPluginPipelineParameter balloonPluginBundleID]
  -[IMBalloonPluginPipelineParameter initWithBD:idsTrustedData:]
  -[IMBalloonPluginPipelineParameter setBalloonPluginBundleID:]
  -[IMBalloonPluginPipelineParameter balloonPluginPayload]
  -[IMBalloonPluginPipelineParameter setBalloonPluginPayload:]
  -[IMBalloonPluginPipelineParameter combinedPayloadAttachmentDictionary]
  -[IMBalloonPluginPipelineParameter setCombinedPayloadAttachmentDictionary:]


IMDCKRecordSaltManager : NSObject
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  NSString *cachedSalt

  // class methods
  +[IMDCKRecordSaltManager sharedInstance]

  // instance methods
  -[IMDCKRecordSaltManager ckQueue]
  -[IMDCKRecordSaltManager fetchLatestRecordKeyFromCKAndCreateIfKeyDoesNotExistWithCompletion:]
  -[IMDCKRecordSaltManager _fetchLatestSaltFromCloudKitAndPersistWithCompletion:]
  -[IMDCKRecordSaltManager _CKUtilitiesSharedInstance]
  -[IMDCKRecordSaltManager clearLocalSyncState]
  -[IMDCKRecordSaltManager .cxx_destruct]
  -[IMDCKRecordSaltManager deleteDeDupeRecordZone]
  -[IMDCKRecordSaltManager _container]
  -[IMDCKRecordSaltManager _scheduleOperation:]
  -[IMDCKRecordSaltManager fetchLatestRecordKeyFromCKAndCreateIfKeyDoesNotExistWithCompletion:forceFetch:]
  -[IMDCKRecordSaltManager init]
  -[IMDCKRecordSaltManager setCachedSalt:]
  -[IMDCKRecordSaltManager cachedSalt]


IMDChatRegistry : NSObject <TUConversationManagerDelegate, IMSystemMonitorListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *idToHandlesMap
 @property  NSData *historyToken
 @property  IMDCKUtilities *ckUtilities
 @property  IMDChatStore *chatStore
 @property  BOOL hasDumpedLogsForNoExisitingGroup
 @property  IMDMessageProcessingController *messageProcessingController
 @property  IMDMessageHistorySyncController *messageHistorySyncController
 @property  NSMutableDictionary *personCentricGroupedChatsCache
 @property  NSMutableDictionary *cachedAliasToCNIDMap
 @property  TUConversationManager *conversationManager
 @property  NSArray *chats
 @property  NSArray *allChats
 @property  NSArray *cachedChats
 @property  unsigned long cachedChatCount
 @property  unsigned long persistedChatCount

  // class methods
  +[IMDChatRegistry sharedInstance]
  +[IMDChatRegistry supportedServiceNames]

  // instance methods
  -[IMDChatRegistry ckUtilities]
  -[IMDChatRegistry _extractHandlesFromMap:usingCNID:]
  -[IMDChatRegistry removeMessage:fromChat:]
  -[IMDChatRegistry updateStateForChat:hintMessage:shouldRebuildFailedMessageDate:shouldCalculateUnreadCount:]
  -[IMDChatRegistry _chatInfoForChats:]
  -[IMDChatRegistry _exactGroupChatMatchOrNewestMatchingGroupID:serviceName:participants:toIdentifier:]
  -[IMDChatRegistry existingChatsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:limit:]
  -[IMDChatRegistry existingSMSChatForID:]
  -[IMDChatRegistry _cachedChatsWithGroupID:]
  -[IMDChatRegistry _existingChatsForIDs:serviceName:displayName:groupID:style:]
  -[IMDChatRegistry refreshUIWhileSyncing]
  -[IMDChatRegistry _fixSMSGroupChatAndStoreIfNeeded:iMessageChat:chatToRegenerate:]
  -[IMDChatRegistry _createGroupChatForConversation:onSession:]
  -[IMDChatRegistry existingChatWithGUID:]
  -[IMDChatRegistry moveMessagesWithGUIDsToRecentlyDeleted:deleteDate:]
  -[IMDChatRegistry generateUnusedChatIdentifierForGroupChatWithAccount:]
  -[IMDChatRegistry existingChatsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:olderThan:limit:]
  -[IMDChatRegistry chatForRoom:account:chatIdentifier:guid:]
  -[IMDChatRegistry _participantIDSetFromHandles:toIdentifier:]
  -[IMDChatRegistry markAsSpamForIDs:style:onServices:chatID:queryID:autoReport:]
  -[IMDChatRegistry removeChat:]
  -[IMDChatRegistry _shouldHandleInternalPhishingAttempts]
  -[IMDChatRegistry _setSortIDOnIncomingMessage:forChat:]
  -[IMDChatRegistry _addChatFromCacheMiss:preferExistingChat:]
  -[IMDChatRegistry _allHandles]
  -[IMDChatRegistry conversationManager]
  -[IMDChatRegistry existingChatWithEngramID:]
  -[IMDChatRegistry existingChatWithIdentifier:account:]
  -[IMDChatRegistry _chatInfoForNumberOfChats:]
  -[IMDChatRegistry handleMessageUpdateConflictType:serverRecord:localRowID:]
  -[IMDChatRegistry sortPersonCentricChatGroups:]
  -[IMDChatRegistry _existingiMessageChatForChatIdentifier:style:]
  -[IMDChatRegistry _reportMessageDictionaryForMessages:withLastAddressedHandle:maxMessageLength:isAutoReport:withChat:maxMessagesToReport:totalMessageCount:]
  -[IMDChatRegistry _setInitialLoadForTesting:]
  -[IMDChatRegistry messagesPendingUpdateT2ToCloudKitWithLimit:]
  -[IMDChatRegistry chats]
  -[IMDChatRegistry _addItemToParentChatIfNotLocationItem:parentChat:updatedLastMessageCount:]
  -[IMDChatRegistry _contactsBasedMerginEnabled]
  -[IMDChatRegistry updateStateForChat:forcePost:shouldRebuildFailedMessageDate:shouldCalculateUnreadCount:]
  -[IMDChatRegistry _lookupChatUsingParentChatID:service:]
  -[IMDChatRegistry _cachedChatWithGUID:]
  -[IMDChatRegistry updateUnreadCountForChat:]
  -[IMDChatRegistry _parentChatIDFromCKRecord:]
  -[IMDChatRegistry _chatsWithBlackholed:]
  -[IMDChatRegistry _chat:isDuplicateOfChat:]
  -[IMDChatRegistry __removeChatFromGroupIDChatIndex:]
  -[IMDChatRegistry existingChatsFilteredUsingPredicate:]
  -[IMDChatRegistry _finalizeIncomingChat:]
  -[IMDChatRegistry processMessageUsingCKRecord:]
  -[IMDChatRegistry updateFaceTimeGroupName:]
  -[IMDChatRegistry groupChatsBasedOnIdentity:]
  -[IMDChatRegistry storeRecoverableMessagePartWithBody:forMessageWithGUID:deleteDate:]
  -[IMDChatRegistry recoverableMessagesMetadataPendingCloudKitDeleteWithLimit:]
  -[IMDChatRegistry updateStateForChat:fromMessage:toMessage:forcePost:hintMessage:shouldRebuildFailedMessageDate:shouldCalculateUnreadCount:setUnreadCountToZero:]
  -[IMDChatRegistry _updateChat:usingRecord:]
  -[IMDChatRegistry updateRecoverableMessageSyncState:forMessageRowID:onPartIndex:]
  -[IMDChatRegistry _blackholedChatInfoForNumberOfChats:]
  -[IMDChatRegistry groupChatsBasedOnIdentityUsingCacheIfApplicable:]
  -[IMDChatRegistry _allChatInfo]
  -[IMDChatRegistry addItem:toChat:]
  -[IMDChatRegistry setHistoryToken:]
  -[IMDChatRegistry isBeingSetup]
  -[IMDChatRegistry __addChatToGroupIDChatIndex:]
  -[IMDChatRegistry findDuplicateChats:]
  -[IMDChatRegistry _shouldUpdateSyncStatsForChat:originalSyncState:]
  -[IMDChatRegistry _adoptUpdatedStateForExistingItem:itemFromCKRecord:]
  -[IMDChatRegistry existingGroupChatsContainingHandles:]
  -[IMDChatRegistry addMessage:toChat:deferSpotlightIndexing:]
  -[IMDChatRegistry dealloc]
  -[IMDChatRegistry _newestExistingChatWithOriginalGroupID:onService:]
  -[IMDChatRegistry removeIMDHandleFromRegistry:]
  -[IMDChatRegistry checkBlackholedChatsExistAfterUpdatingChatWithAdd:]
  -[IMDChatRegistry _findLosingChatGUIDsInArrayOfChats:withWinner:]
  -[IMDChatRegistry updateProperties:chat:style:]
  -[IMDChatRegistry invalidatePersonCentricGroupedChatsCache]
  -[IMDChatRegistry _addChatsFromCacheMisses:preferExistingChats:]
  -[IMDChatRegistry _itemFromCKRecord:]
  -[IMDChatRegistry .cxx_destruct]
  -[IMDChatRegistry _fixUpChatParticipantsIfNeeded:]
  -[IMDChatRegistry messagesToUploadToCloudKitWithLimit:]
  -[IMDChatRegistry setCkUtilities:]
  -[IMDChatRegistry _activeTUConversations]
  -[IMDChatRegistry conversationManager:conversation:addedMembersLocally:]
  -[IMDChatRegistry addChat:]
  -[IMDChatRegistry _reportMessageDictionaryForMessages:withLastAddressedHandle:maxMessageLength:isAutoReport:withChat:maxMessagesToReport:totalMessageCount:onlyReportForiMessageService:notifyInternalSecurity:]
  -[IMDChatRegistry _persistMergeIDMergedChatsIfNeeded]
  -[IMDChatRegistry _chatGUIDsThatNeedRemergingWithCompletionHandler:]
  -[IMDChatRegistry _shouldUpdateSyncStatsForMessage:originalSyncState:]
  -[IMDChatRegistry blackholedChatsExist]
  -[IMDChatRegistry processMessageUsingCKRecord:updatedLastMessageCount:]
  -[IMDChatRegistry cachedChatCount]
  -[IMDChatRegistry updateFaceTimeGroupPhoto:]
  -[IMDChatRegistry _legacyExistingLoadedChatsForIDs:onService:displayName:groupID:style:]
  -[IMDChatRegistry updateGroupIDForChat:newGroupID:]
  -[IMDChatRegistry existingChatsWithPinningIdentifier:]
  -[IMDChatRegistry _fixUpChatParticipantsIfNeeded:usingChatGUIDToChatMap:]
  -[IMDChatRegistry personCentricGroupedChatsCache]
  -[IMDChatRegistry handleMessageUpdate:]
  -[IMDChatRegistry _upgradeChatToGroupChat:forConversation:]
  -[IMDChatRegistry updateChatUsingCKRecord:]
  -[IMDChatRegistry _insertChatUsingCKRecord:]
  -[IMDChatRegistry _spamMessageCreator]
  -[IMDChatRegistry existingiMessageChatForID:withChatStyle:]
  -[IMDChatRegistry allExistingSupportedServiceChatsWithIdentifier:style:]
  -[IMDChatRegistry existingChatForID:account:]
  -[IMDChatRegistry chatForHandles:account:chatIdentifier:style:groupID:displayName:guid:lastAddressedHandle:lastAddressedSIMID:isBlackholed:]
  -[IMDChatRegistry updateChatWithGUID:serverChangeToken:recordID:]
  -[IMDChatRegistry _tuConversationForChat:]
  -[IMDChatRegistry clearRecoverableMessageTombStones]
  -[IMDChatRegistry updateNotificationUnreadCountForChat:]
  -[IMDChatRegistry chatStore]
  -[IMDChatRegistry _createGroupChatsArray]
  -[IMDChatRegistry _handlesWithChangedContactsOriginalMap:newMap:]
  -[IMDChatRegistry _siblingChatForChat:usingChatGUIDToChatMap:]
  -[IMDChatRegistry allHandlesForID:]
  -[IMDChatRegistry _haveInconsistentGroupPhotoGuidOnMergedChats:]
  -[IMDChatRegistry _updateCurrentAliasToCNIDDictionaryAndHistoryTokenWithCompletionHandler:]
  -[IMDChatRegistry messagesPendingUpdateT1ToCloudKitWithLimit:]
  -[IMDChatRegistry existingChatsForIDs:onService:style:]
  -[IMDChatRegistry recoverableMessagesMetadataPendingCloudKitSaveWithLimit:]
  -[IMDChatRegistry setUpInitialConversationManager]
  -[IMDChatRegistry _updateSyncStatisticsForChat:incrementTotalCount:]
  -[IMDChatRegistry repairDuplicateChatsIfNeeded]
  -[IMDChatRegistry _sharedMessageStore]
  -[IMDChatRegistry setPersonCentricGroupedChatsCache:]
  -[IMDChatRegistry stringForChatStyle:]
  -[IMDChatRegistry _populateLastMessageForChat:]
  -[IMDChatRegistry _contactsChanged:]
  -[IMDChatRegistry _conversationItemForChat:conversation:]
  -[IMDChatRegistry loadChatsWithCompletionBlock:]
  -[IMDChatRegistry _newestExistingChatWithGroupID:onService:]
  -[IMDChatRegistry markChatAsDeferredForSyncingUsingCKRecord:]
  -[IMDChatRegistry chatsToUploadToCloudKitWithLimit:]
  -[IMDChatRegistry setCachedAliasToCNIDMap:]
  -[IMDChatRegistry doneLoadingAfterMerge]
  -[IMDChatRegistry persistedChatCount]
  -[IMDChatRegistry existingChatsForIDs:onService:displayName:groupID:style:]
  -[IMDChatRegistry _statsCollector]
  -[IMDChatRegistry systemDidUnlock]
  -[IMDChatRegistry _existingChatForCKRecord:]
  -[IMDChatRegistry _chatForTUGroupID:participants:]
  -[IMDChatRegistry _existingItemRequiresUpgrade:itemFromCKRecord:]
  -[IMDChatRegistry existingChatForRoom:account:]
  -[IMDChatRegistry existingiMessageChatForID:]
  -[IMDChatRegistry _oneToOneChatForRemoteHandle:]
  -[IMDChatRegistry _forceReloadChats:]
  -[IMDChatRegistry _findExistingGroupChatForConversation:onSession:]
  -[IMDChatRegistry _ensureNoExistingGroupForCKRecord:]
  -[IMDChatRegistry setChatStore:]
  -[IMDChatRegistry copyRecordIDsAndGUIDsPendingCloudKitDelete]
  -[IMDChatRegistry messageProcessingController]
  -[IMDChatRegistry allChatsWithIdentifier:style:serviceNames:]
  -[IMDChatRegistry blackholedChats]
  -[IMDChatRegistry _chatInfoForConnection]
  -[IMDChatRegistry truncatedSortedChatsGroupedByPersonCentricID:count:pinnedChatIdentifiers:]
  -[IMDChatRegistry clearPendingDeleteTable]
  -[IMDChatRegistry _populateContactIDOnHandles]
  -[IMDChatRegistry recoverableMessagesMetadata]
  -[IMDChatRegistry systemDidLeaveFirstDataProtectionLock]
  -[IMDChatRegistry _messageStore]
  -[IMDChatRegistry _aliasToCNIDMapForAliases:]
  -[IMDChatRegistry allExistingChatsWithIdentifier:]
  -[IMDChatRegistry personCentricGroupedChatsArrayWithMaximumNumberOfChats:skipsLastMessageLoading:usingChats:useCachedChatGroups:includingPinnedChatIdentifiers:]
  -[IMDChatRegistry moveMessagesInChatsWithGUIDsToRecentlyDeleted:deleteDate:]
  -[IMDChatRegistry _repairInconsistentGroupPhotoGuidOnMergedChatsIfNecessary:]
  -[IMDChatRegistry existingChatsWithGroupID:]
  -[IMDChatRegistry _initiatorForConversation:chat:]
  -[IMDChatRegistry bestCandidateGroupChatWithFromIdentifier:toIdentifier:displayName:participants:groupID:serviceName:]
  -[IMDChatRegistry updateLastMessageForChat:hintMessage:historyQuery:]
  -[IMDChatRegistry cachedAliasToCNIDMap]
  -[IMDChatRegistry _chatInfoInRange:wantsBlackholed:]
  -[IMDChatRegistry waitForLoadedChatsWithCompletionHandler:]
  -[IMDChatRegistry recoverMessagesWithChatGUIDs:]
  -[IMDChatRegistry existingChatsForIDs:displayName:groupID:style:]
  -[IMDChatRegistry updateSyncedSyndicationRanges:forGUID:]
  -[IMDChatRegistry _setGroupID:forChatAndAllSiblings:]
  -[IMDChatRegistry historyToken]
  -[IMDChatRegistry _mergeDuplicateGroupsIfNeeded]
  -[IMDChatRegistry _updateCachedAliasToCNIDMap:withHistoryToken:completionHandler:]
  -[IMDChatRegistry existingChatForIDs:account:style:]
  -[IMDChatRegistry markDeferredChatsAsNeedingSync]
  -[IMDChatRegistry _makeAllAttachmentsClassC]
  -[IMDChatRegistry updateLastMessageForChat:hintMessage:]
  -[IMDChatRegistry allChats]
  -[IMDChatRegistry messageHistorySyncController]
  -[IMDChatRegistry _generateCurrentAliasToCNIDDictionary]
  -[IMDChatRegistry updateStateForChat:forcePost:]
  -[IMDChatRegistry _markGroupPhotosAsUnpurgeableIfNecessary]
  -[IMDChatRegistry findDuplicateUnnamedGroups:]
  -[IMDChatRegistry hasDumpedLogsForNoExisitingGroup]
  -[IMDChatRegistry updateMeCardHasUpdatedForAllChats]
  -[IMDChatRegistry _updateCachedCNIDMapForHandles:]
  -[IMDChatRegistry _mergedPinningIdentifiersForChats:chatGUIDToChatMap:groupedChatsByPersonCentricIdWithSortedChats:]
  -[IMDChatRegistry setHasDumpedLogsForNoExisitingGroup:]
  -[IMDChatRegistry existingChatForIDs:account:displayName:groupID:style:]
  -[IMDChatRegistry _chatForTUConversation:]
  -[IMDChatRegistry permanentlyDeleteRecoverableMessagesInChatsWithGUIDs:completionHandler:]
  -[IMDChatRegistry aliasToCNIDMap]
  -[IMDChatRegistry existingOneOnOneChatsWithIdentifiers:]
  -[IMDChatRegistry addIMDHandleToRegistry:]
  -[IMDChatRegistry _reportToIDSiMessageSpam:]
  -[IMDChatRegistry updateStateForChat:hintMessage:]
  -[IMDChatRegistry simulateMessageReceive:serviceName:groupID:handles:sender:date:associatedMessageType:associatedMessageGuid:]
  -[IMDChatRegistry updateStateForChat:hintMessage:shouldRebuildFailedMessageDate:setUnreadCountToZero:]
  -[IMDChatRegistry resolveChatConflictUsingCKRecord:localGUID:]
  -[IMDChatRegistry _markForksAsSyncedForChat:]
  -[IMDChatRegistry _chatGUIDToChatMapForChats:]
  -[IMDChatRegistry _findChatWinnerInDuplicateChatArray:fixDisplayName:]
  -[IMDChatRegistry setIdToHandlesMap:]
  -[IMDChatRegistry _updateSyncStatisticsForMessage:incrementTotalCount:]
  -[IMDChatRegistry cachedChats]
  -[IMDChatRegistry addMessage:toChat:]
  -[IMDChatRegistry updateStateForChat:forcePost:shouldRebuildFailedMessageDate:]
  -[IMDChatRegistry _chatGUIDsThatNeedRemerging:chatDictionaryArray:aliasMap:]
  -[IMDChatRegistry _newestGroupChatMatchingParticipants:displayName:strictDisplayNameMatching:serviceName:toIdentifier:]
  -[IMDChatRegistry removeItem:fromChat:]
  -[IMDChatRegistry addChat:firstLoad:]
  -[IMDChatRegistry init]
  -[IMDChatRegistry updateStateForChat:forcePost:shouldRebuildFailedMessageDate:setUnreadCountToZero:]
  -[IMDChatRegistry _evictCachedChat:]
  -[IMDChatRegistry allExistingChatsWithIdentifier:style:]
  -[IMDChatRegistry chatForHandle:account:chatIdentifier:guid:lastAddressedHandle:lastAddressedSIMID:isBlackholed:]
  -[IMDChatRegistry idToHandlesMap]
  -[IMDChatRegistry existingSMSChatForID:withChatStyle:]
  -[IMDChatRegistry updateStateForChat:hintMessage:shouldRebuildFailedMessageDate:]
  -[IMDChatRegistry _checkForContactChanges]


IMTypingIndicatorProcessingPipelineComponent : IMTextMessageProcessingPipelineComponent
  // instance methods
  -[IMTypingIndicatorProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMTypingIndicatorProcessingPipelineComponent createMessageItemWithInput:]
  -[IMTypingIndicatorProcessingPipelineComponent canSuppressMessageWithInput:]


IMDCKDatabaseManager : NSObject
 @property  CKContainer *manateeContainer
 @property  CKContainer *nickNameContainer
 @property  CKContainer *truthContainer

  // class methods
  +[IMDCKDatabaseManager sharedInstance]

  // instance methods
  -[IMDCKDatabaseManager nickNamePublicDatabase]
  -[IMDCKDatabaseManager truthDatabase]
  -[IMDCKDatabaseManager truthPublicDatabase]
  -[IMDCKDatabaseManager manateeDataBase]
  -[IMDCKDatabaseManager .cxx_destruct]
  -[IMDCKDatabaseManager _serverSaysToUseOldContainer]
  -[IMDCKDatabaseManager fetchCurrentUserForNicknameContainer:]
  -[IMDCKDatabaseManager nickNameContainer]
  -[IMDCKDatabaseManager manateeContainer]
  -[IMDCKDatabaseManager _nickNameContainerIdentifier]
  -[IMDCKDatabaseManager truthContainer]
  -[IMDCKDatabaseManager init]
  -[IMDCKDatabaseManager _nickNameContainer]


IMDeliveryReceiptProcessingPipelineComponent : IMPipelineComponent
  // instance methods
  -[IMDeliveryReceiptProcessingPipelineComponent .cxx_destruct]
  -[IMDeliveryReceiptProcessingPipelineComponent initWithMessageStore:]
  -[IMDeliveryReceiptProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMDeliveryReceiptProcessingPipelineComponent _processDeliveryReceiptForMessageGUID:date:]
  -[IMDeliveryReceiptProcessingPipelineComponent _metricMessageGUIDDelivered:sendDate:deliveryDate:]


IMDCKMockRecordZone : NSObject
 @property  NSString *identifier
 @property  NSObject<OS_dispatch_queue> *queue
 @property  IDSKVStore *recordStore

  // instance methods
  -[IMDCKMockRecordZone identifier]
  -[IMDCKMockRecordZone dealloc]
  -[IMDCKMockRecordZone initWithIdentifier:]
  -[IMDCKMockRecordZone queue]
  -[IMDCKMockRecordZone handleOperation:]
  -[IMDCKMockRecordZone recordStore]
  -[IMDCKMockRecordZone setRecordStore:]
  -[IMDCKMockRecordZone _kvStorePath]
  -[IMDCKMockRecordZone _fetchRecordZoneChangesOptionsFromOperation:]
  -[IMDCKMockRecordZone _fetchResultLimit:]
  -[IMDCKMockRecordZone _ckRecordFromData:]
  -[IMDCKMockRecordZone _handleFetchZoneChangesOperation:]
  -[IMDCKMockRecordZone _serializedCKRecordData:]
  -[IMDCKMockRecordZone _handleModifyRecordsOperation:]


IMDCKRampManager : NSObject
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  NSTimer *retryTimer

  // class methods
  +[IMDCKRampManager sharedInstance]

  // instance methods
  -[IMDCKRampManager fetchLatestRampStateFromCK:]
  -[IMDCKRampManager ckQueue]
  -[IMDCKRampManager _writeRampStateAllowed:promoted:visible:fetchHadServerError:]
  -[IMDCKRampManager _fetchLatestRampStateFromCK:]
  -[IMDCKRampManager _CKUtilitiesSharedInstance]
  -[IMDCKRampManager _shouldSendPriorityRequest]
  -[IMDCKRampManager dealloc]
  -[IMDCKRampManager .cxx_destruct]
  -[IMDCKRampManager cachedRampState:]
  -[IMDCKRampManager _rampUpRecordID]
  -[IMDCKRampManager _scheduleOperation:]
  -[IMDCKRampManager _performRampCheckWithRetryAfter:]
  -[IMDCKRampManager _persistRampFetchServerError:]
  -[IMDCKRampManager setRetryTimer:]
  -[IMDCKRampManager retryTimer]
  -[IMDCKRampManager init]


IMAssociatedMessagePipelineParameter : IMTextMessagePipelineParameter <IMAssociatedMessageProcessingParameter>
 @property  long long associatedMessageType
 @property  NSString *associatedMessageGUID
 @property  {_NSRange=QQ} associatedMessageRange

  // instance methods
  -[IMAssociatedMessagePipelineParameter .cxx_destruct]
  -[IMAssociatedMessagePipelineParameter setAssociatedMessageGUID:]
  -[IMAssociatedMessagePipelineParameter setAssociatedMessageType:]
  -[IMAssociatedMessagePipelineParameter associatedMessageGUID]
  -[IMAssociatedMessagePipelineParameter associatedMessageType]
  -[IMAssociatedMessagePipelineParameter associatedMessageRange]
  -[IMAssociatedMessagePipelineParameter setAssociatedMessageRange:]
  -[IMAssociatedMessagePipelineParameter initWithBD:idsTrustedData:]
  -[IMAssociatedMessagePipelineParameter initWithBDBasic:idsTrustedData:]


IMDDaemonPropertyManager : NSObject
 @property  NSMutableDictionary *mutableProperties
 @property  NSMutableDictionary *mutablePersistentProperties
 @property  NSDictionary *properties
 @property  NSDictionary *persistentProperties

  // class methods
  +[IMDDaemonPropertyManager sharedManager]

  // instance methods
  -[IMDDaemonPropertyManager properties]
  -[IMDDaemonPropertyManager .cxx_destruct]
  -[IMDDaemonPropertyManager mutableProperties]
  -[IMDDaemonPropertyManager persistentProperties]
  -[IMDDaemonPropertyManager valueOfPersistentProperty:]
  -[IMDDaemonPropertyManager setValue:ofProperty:]
  -[IMDDaemonPropertyManager valueOfProperty:]
  -[IMDDaemonPropertyManager setMutableProperties:]
  -[IMDDaemonPropertyManager setValue:ofPersistentProperty:]
  -[IMDDaemonPropertyManager setMutablePersistentProperties:]
  -[IMDDaemonPropertyManager init]
  -[IMDDaemonPropertyManager mutablePersistentProperties]


IMDInconsistency : NSObject
 @property  id context
 @property  NSDate *firstOccurrence
 @property  unsigned long count

  // instance methods
  -[IMDInconsistency setCount:]
  -[IMDInconsistency count]
  -[IMDInconsistency setContext:]
  -[IMDInconsistency context]
  -[IMDInconsistency init]
  -[IMDInconsistency firstOccurrence]
  -[IMDInconsistency shouldJettison:]


IMDAttachmentStore : NSObject
  // class methods
  +[IMDAttachmentStore sharedInstance]
  +[IMDAttachmentStore _cloudkitSyncingEnabled]
  +[IMDAttachmentStore fileEligibleForCacheDelete:]
  +[IMDAttachmentStore _askToTapToRadarForErrorString:path:]
  +[IMDAttachmentStore updateTransferIn:fromGUID:toGUID:]

  // instance methods
  -[IMDAttachmentStore storeAttachment:associateWithMessageWithGUID:]
  -[IMDAttachmentStore updateAttachment:chatGUID:storeAtExternalPath:]
  -[IMDAttachmentStore fileTransferWithAttachmentRecordRef:]
  -[IMDAttachmentStore isSafeToDeleteAttachmentAtPath:]
  -[IMDAttachmentStore _newFileTransferFromIMDAttachmentRecordRef:]
  -[IMDAttachmentStore updateLegacyTransferGUIDIfNeeded:transfersToSync:]
  -[IMDAttachmentStore markAttachmentUnpurgeable:]
  -[IMDAttachmentStore attachmentsWithGUIDs:]
  -[IMDAttachmentStore markAllAttachmentsAsNotPurgeable]
  -[IMDAttachmentStore removeAttachment:fromMessageWithGUID:]
  -[IMDAttachmentStore attachmentWithGUID:]
  -[IMDAttachmentStore _IMTransferGUIDForMessageGUID:andIndex:]
  -[IMDAttachmentStore markAttachment:purgeable:]
  -[IMDAttachmentStore markAttachmentPurgeable:]
  -[IMDAttachmentStore deleteAttachmentsDirectWithPredicate:]
  -[IMDAttachmentStore deleteAttachmentDataForTransfer:]
  -[IMDAttachmentStore _transferCanBeMarkedPurgable:]
  -[IMDAttachmentStore markFile:asPurgeable:]
  -[IMDAttachmentStore storeAttachment:associateWithMessageWithGUID:chatGUID:storeAtExternalLocation:]
  -[IMDAttachmentStore markAllAttachmentsAsNeedingCloudKitSync]
  -[IMDAttachmentStore _updatedMessageBody:replacingGuid:withGuid:]
  -[IMDAttachmentStore database]
  -[IMDAttachmentStore attachmentsFilteredUsingPredicate:limit:]
  -[IMDAttachmentStore _loadAttachmentRecordForGUID:]
  -[IMDAttachmentStore deleteAttachmentsWithGUIDs:]
  -[IMDAttachmentStore _shouldEarlyReturnForWrongItemType:]
  -[IMDAttachmentStore deleteAttachmentWithGUID:]
  -[IMDAttachmentStore _updateLegacyTransferGUIDOn:andUpdateMessageIfNeeded:transfersToSync:]
  -[IMDAttachmentStore updateAttachment:]
  -[IMDAttachmentStore _updateAttachmentGUID:withGUID:]
  -[IMDAttachmentStore _reindexMessage:completion:]
  -[IMDAttachmentStore deleteAttachmentsForMessage:]
  -[IMDAttachmentStore updateLegacyTransferGUIDOnMessageIfNeeded:]


IMDCKAbstractSyncController : NSObject
 @property  BOOL isSyncing
 @property  unsigned long recordsRead
 @property  unsigned long recordsWritten
 @property  unsigned long recordsWriteFailed
 @property  IMDCKSyncState *syncState
 @property  <IMDCKAbstractSyncControllerDelegate> *delegate

  // instance methods
  -[IMDCKAbstractSyncController ckUtilities]
  -[IMDCKAbstractSyncController syncStateDebuggingInfo:]
  -[IMDCKAbstractSyncController syncState]
  -[IMDCKAbstractSyncController setIsSyncing:]
  -[IMDCKAbstractSyncController setDelegate:]
  -[IMDCKAbstractSyncController delegate]
  -[IMDCKAbstractSyncController .cxx_destruct]
  -[IMDCKAbstractSyncController syncControllerRecordType]
  -[IMDCKAbstractSyncController describeRecordCounts]
  -[IMDCKAbstractSyncController errorAnalyzer]
  -[IMDCKAbstractSyncController isSyncing]
  -[IMDCKAbstractSyncController _fetchedAllChangesFromCloudKit]
  -[IMDCKAbstractSyncController clearLocalSyncState:]
  -[IMDCKAbstractSyncController resetRecordCounts]
  -[IMDCKAbstractSyncController countRecordOnRead:didSucceed:]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateStateToFinished]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateStateToStarting]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateToDownloading]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateToUploading]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateToDeleting]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateToStartingPeriodicSync]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateToStartingInitialSync]
  -[IMDCKAbstractSyncController addSyncDebuggingInfoToDictionary:]
  -[IMDCKAbstractSyncController syncBatchCompleted:]
  -[IMDCKAbstractSyncController recordsRead]
  -[IMDCKAbstractSyncController setRecordsRead:]
  -[IMDCKAbstractSyncController recordsWritten]
  -[IMDCKAbstractSyncController setRecordsWritten:]
  -[IMDCKAbstractSyncController recordsWriteFailed]
  -[IMDCKAbstractSyncController setRecordsWriteFailed:]


IMDDeletePartsHelper : NSObject
  // class methods
  +[IMDDeletePartsHelper _unsignedIntegerFromString:]
  +[IMDDeletePartsHelper _convertDeletedPartsDict:toIndexSet:toMap:]
  +[IMDDeletePartsHelper _makeDeletePartsDictFor:withIndexes:withIndexToRangeMap:deleteDate:]


IMDChatStore : NSObject <IMStateLoggable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *modificationStamp
 @property  <IMDMessagePTaskStore> *messagePTaskStore
 @property  IMStateCaptureAssistant *stateCaptureAssistant
 @property  <IMDRemoteDatabaseProtocol> *database

  // class methods
  +[IMDChatStore sharedInstance]

  // instance methods
  -[IMDChatStore enumerateBatchedChatsFilteredUsingPredicate:batchSize:block:]
  -[IMDChatStore unreadCountForChat:]
  -[IMDChatStore unarchiveChat:]
  -[IMDChatStore chatsWithIdentifier:]
  -[IMDChatStore blackholeChat:]
  -[IMDChatStore enumerateBatchedChatsFilteredUsingPredicate:block:]
  -[IMDChatStore loadAllChats]
  -[IMDChatStore _broadcastToForceReloadChats]
  -[IMDChatStore storeChat:]
  -[IMDChatStore chatsWithRoomname:onService:]
  -[IMDChatStore chatsWithHandles:onService:displayName:groupID:style:]
  -[IMDChatStore unblackholeChat:]
  -[IMDChatStore stateCaptureAssistant]
  -[IMDChatStore chatWithGUID:]
  -[IMDChatStore .cxx_destruct]
  -[IMDChatStore chatsGUIDsForMessageWithIdentifier:]
  -[IMDChatStore messagePTaskStore]
  -[IMDChatStore setStateCaptureAssistant:]
  -[IMDChatStore _updateModificationDate]
  -[IMDChatStore removeMessageWithGUID:fromChat:]
  -[IMDChatStore _incomingChatsWithChatRecords:]
  -[IMDChatStore remapMessageError:toError:forChat:completion:]
  -[IMDChatStore loadRecentChats]
  -[IMDChatStore setMessagePTaskStore:]
  -[IMDChatStore chatsGUIDsForMessageWithGUID:]
  -[IMDChatStore updateHandle:sourceMessage:personCentricID:onService:]
  -[IMDChatStore database]
  -[IMDChatStore chatsWithHandle:onService:]
  -[IMDChatStore chatsFilteredUsingPredicate:sortedUsingDescriptors:limit:]
  -[IMDChatStore setChatIsFiltered:withChatGuid:]
  -[IMDChatStore newestChatWithOriginalGroupID:onService:]
  -[IMDChatStore modificationStamp]
  -[IMDChatStore _addGroupPhotoToTransferCenterForChat:]
  -[IMDChatStore chatsWithPinningIdentifier:]
  -[IMDChatStore chatsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:olderThan:limit:]
  -[IMDChatStore addMessageWithGUID:toChat:]
  -[IMDChatStore _processIncomingChat:]
  -[IMDChatStore _incomingChatWithChatRecord:]
  -[IMDChatStore chatsWithGroupID:]
  -[IMDChatStore chatsFilteredUsingPredicate:]
  -[IMDChatStore _chatRegistry]
  -[IMDChatStore archiveChat:]
  -[IMDChatStore setModificationStamp:]
  -[IMDChatStore chatsWithIdentifier:onService:]
  -[IMDChatStore _loadChatsIncludingAllChats:]
  -[IMDChatStore init]
  -[IMDChatStore stateDictionaryForDiagnosticsRequest]
  -[IMDChatStore newestChatWithGroupID:onService:]
  -[IMDChatStore updatePersonCentricIDForHandlesInChatWithMessage:fromIdentifier:personCentricID:chat:]
  -[IMDChatStore addMessageWithGUID:toChat:deferSpotlightIndexing:]
  -[IMDChatStore deleteChat:]


IMPlayedReceiptPipelineParameter : NSObject <IMPlayedReceiptProcessingParameter, IMMessageFromStorageParameter>
 @property  IMDiMessageIDSTrustedData *idsTrustedData
 @property  NSString *GUID
 @property  NSNumber *timestamp
 @property  BOOL isFromStorage
 @property  BOOL isLastFromStorage
 @property  BOOL isFromDefaultPairedDevice
 @property  NSArray *messageItems
 @property  IMDChat *chat

  // instance methods
  -[IMPlayedReceiptPipelineParameter GUID]
  -[IMPlayedReceiptPipelineParameter .cxx_destruct]
  -[IMPlayedReceiptPipelineParameter timestamp]
  -[IMPlayedReceiptPipelineParameter isFromStorage]
  -[IMPlayedReceiptPipelineParameter setChat:]
  -[IMPlayedReceiptPipelineParameter chat]
  -[IMPlayedReceiptPipelineParameter isFromDefaultPairedDevice]
  -[IMPlayedReceiptPipelineParameter isLastFromStorage]
  -[IMPlayedReceiptPipelineParameter setMessageItems:]
  -[IMPlayedReceiptPipelineParameter messageItems]
  -[IMPlayedReceiptPipelineParameter idsTrustedData]
  -[IMPlayedReceiptPipelineParameter initWithDefusedMessage:idsTrustedData:isFromDefaultPairedDevice:]
  -[IMPlayedReceiptPipelineParameter initWithIdsTrustedData:GUID:timestamp:isFromStorage:isLastFromStorage:isFromDefaultPairedDevice:]


IMDiMessageIncomingMessageHandler : NSObject
  // instance methods
  -[IMDiMessageIncomingMessageHandler handleEditMessageCommandWithPipeline:input:completionBlock:]
  -[IMDiMessageIncomingMessageHandler handleMessageDeliveryReceiptWithPipeline:input:completionBlock:]
  -[IMDiMessageIncomingMessageHandler handleMessageMarkUnreadRequestWithPipeline:input:completionBlock:]
  -[IMDiMessageIncomingMessageHandler handleNotifyRecipientCommandWithPipeline:input:completionBlock:]
  -[IMDiMessageIncomingMessageHandler handleMessagePlayedReceiptWithPipeline:input:completionBlock:]
  -[IMDiMessageIncomingMessageHandler handleMessageDeliveredQuietlyReceiptWithPipeline:input:completionBlock:]
  -[IMDiMessageIncomingMessageHandler _enqueueBlock:withTimeout:description:]
  -[IMDiMessageIncomingMessageHandler handleMessageWithPipeline:input:completionBlock:]
  -[IMDiMessageIncomingMessageHandler handleMessageReadReceiptWithPipeline:input:completionBlock:]
  -[IMDiMessageIncomingMessageHandler handleSyndicatedActionWithPipeline:input:completionBlock:]


IMDLocationSharingController : NSObject
  // class methods
  +[IMDLocationSharingController sharedInstance]
  +[IMDLocationSharingController _addLocationShareItemToMatchingChats:handleID:hasStoredItem:broadcastChanges:]
  +[IMDLocationSharingController addLocationShareItemToMatchingChats:]

  // instance methods
  -[IMDLocationSharingController didStopSharingMyLocationWithHandle:]
  -[IMDLocationSharingController sendMappingPacket:toHandle:account:]
  -[IMDLocationSharingController receivedIncomingLocationSharePacket:]
  -[IMDLocationSharingController _forwardMappingPacket:toID:account:]
  -[IMDLocationSharingController didFailToHandleMappingPacket:error:]
  -[IMDLocationSharingController dealloc]
  -[IMDLocationSharingController didStartAbilityToGetLocationForHandle:]
  -[IMDLocationSharingController didStartSharingMyLocationWithHandle:]
  -[IMDLocationSharingController didStopAbilityToGetLocationForHandle:]
  -[IMDLocationSharingController _generateLocationSharingItemWithHandleID:direction:action:]
  -[IMDLocationSharingController init]


IMMessageMomentShareProcessingPipelineComponent : IMPipelineComponent
  // instance methods
  -[IMMessageMomentShareProcessingPipelineComponent runIndividuallyWithInput:]


IMDCKMessageSyncController : IMDCKAbstractSyncController
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  IMDRecordZoneManager *recordZoneManager
 @property  <IMDCKSyncTokenStore> *syncTokenStore
 @property  CKServerChangeToken *latestSyncToken
 @property  IMDCKMessageSyncCKOperationFactory *CKOperationFactory
 @property  CKServerChangeToken *archivedRecordSyncToken
 @property  unsigned long deviceConditionsToCheck
 @property  NSMutableDictionary *visitedChats
 @property  BOOL encounteredIncompatibleMessage

  // class methods
  +[IMDCKMessageSyncController sharedInstance]

  // instance methods
  -[IMDCKMessageSyncController ckQueue]
  -[IMDCKMessageSyncController recordZoneManager]
  -[IMDCKMessageSyncController .cxx_destruct]
  -[IMDCKMessageSyncController syncControllerRecordType]
  -[IMDCKMessageSyncController setRecordZoneManager:]
  -[IMDCKMessageSyncController _scheduleOperation:]
  -[IMDCKMessageSyncController setCkQueue:]
  -[IMDCKMessageSyncController _chatRegistry]
  -[IMDCKMessageSyncController init]
  -[IMDCKMessageSyncController _recordsToSave]
  -[IMDCKMessageSyncController deleteMessagesZone]
  -[IMDCKMessageSyncController initWithSyncTokenStore:]
  -[IMDCKMessageSyncController _ckUtilitiesInstance]
  -[IMDCKMessageSyncController _updateDeviceConditionsToCheckIfNeededForCurrentBatchCount:maxBatchCount:]
  -[IMDCKMessageSyncController _deviceConditionsAllowsMessageSyncForCurrentBatchCount:maxBatchCount:activity:]
  -[IMDCKMessageSyncController _recordKeyManagerSharedInstance]
  -[IMDCKMessageSyncController _kickOffWriteOnCKQueueWithActivity:completion:]
  -[IMDCKMessageSyncController _kickOffWriteIfNeededForSyncType:activity:completion:]
  -[IMDCKMessageSyncController _operationErrorForModifyingRecordCompletion:]
  -[IMDCKMessageSyncController clearLocalSyncState:]
  -[IMDCKMessageSyncController _copyRecordIDsToDeleteWithLimit:]
  -[IMDCKMessageSyncController CKOperationFactory]
  -[IMDCKMessageSyncController setCKOperationFactory:]
  -[IMDCKMessageSyncController syncTokenStore]
  -[IMDCKMessageSyncController setSyncTokenStore:]
  -[IMDCKMessageSyncController deviceConditionsToCheck]
  -[IMDCKMessageSyncController setDeviceConditionsToCheck:]
  -[IMDCKMessageSyncController incompatibleMessageDeleteDetected:]
  -[IMDCKMessageSyncController _messageZoneID]
  -[IMDCKMessageSyncController _messageRecordSalt]
  -[IMDCKMessageSyncController _numberOfMessagesToUpload]
  -[IMDCKMessageSyncController _numberOfRecordsToFetchForSyncType:]
  -[IMDCKMessageSyncController _messageDeleteBatchSize]
  -[IMDCKMessageSyncController _numberOfBatchesOfMessagesToFetchInInitialSync]
  -[IMDCKMessageSyncController _isValidCKRecordToSync:]
  -[IMDCKMessageSyncController _recordsToSaveWithAttemptCount:]
  -[IMDCKMessageSyncController _messageZoneCreated]
  -[IMDCKMessageSyncController _processRecordWriteCompletionForRecord:NSError:]
  -[IMDCKMessageSyncController _processModifyRecordsCompletion:deletedRecordIDs:operationError:isLastBatchOfWrite:activity:writeCompletionBlock:]
  -[IMDCKMessageSyncController _syncOperationGroupName]
  -[IMDCKMessageSyncController _writeDirtyMessagesToCloudKitWithActivity:completion:]
  -[IMDCKMessageSyncController _processRecordChange:]
  -[IMDCKMessageSyncController _shouldDeferCoreDuetMessagesSyncWithActivity:]
  -[IMDCKMessageSyncController _isCoreDuetSyncForMaxBatchCount:activity:]
  -[IMDCKMessageSyncController _deviceConditionsAllowsMessageSyncForActivity:deviceConditionsToCheck:currentBatchCount:maxBatchCount:]
  -[IMDCKMessageSyncController _migrateSyncTokens]
  -[IMDCKMessageSyncController setArchivedRecordSyncToken:]
  -[IMDCKMessageSyncController archivedRecordSyncToken]
  -[IMDCKMessageSyncController _resetArvchivedRecordSyncToken]
  -[IMDCKMessageSyncController _changeTokenKey]
  -[IMDCKMessageSyncController setLatestSyncToken:]
  -[IMDCKMessageSyncController latestSyncToken]
  -[IMDCKMessageSyncController _resetSyncToken]
  -[IMDCKMessageSyncController _processArchivedRecordsFetchCompletionZoneID:serverChangeToken:moreComing:currentBatchCount:maxNumberOfBatches:activity:error:completionBlock:]
  -[IMDCKMessageSyncController _fetchArchivedRecordsIfNeeded:currentBatchCount:maxNumberOfBatches:activity:withCompletionBlock:]
  -[IMDCKMessageSyncController _processFetchArchivedRecordCompletionWithError:WithCompletionBlock:]
  -[IMDCKMessageSyncController _processRecordZoneFetchCompletionZoneID:serverChangeToken:clientChangeTokenData:moreComing:NSError:syncType:currentBatchCount:maxNumberOfBatches:shouldFetchArchivedRecords:activity:completionBlock:]
  -[IMDCKMessageSyncController _processFetchRecordZoneChangesCompletionWithError:completionBlock:]
  -[IMDCKMessageSyncController _shouldFetchArchivedRecords:]
  -[IMDCKMessageSyncController _doesAnyRecordZoneIDHavePendingArchivedRecords:]
  -[IMDCKMessageSyncController _isDiskSpaceAvailableForSyncType:currentBatchCount:]
  -[IMDCKMessageSyncController _fetchMessageZoneChangesSyncType:currentBatchCount:maxNumberOfBatches:activity:completionBlock:]
  -[IMDCKMessageSyncController _noteSyncEnded]
  -[IMDCKMessageSyncController _markAllIncompatibleMessagesForDeletion]
  -[IMDCKMessageSyncController _needsToMarkAllMessagesAsNeedingSync]
  -[IMDCKMessageSyncController _shouldMarkAllMessagesAsNeedingSync]
  -[IMDCKMessageSyncController _hasMarkedAllMessagesAsNeedingSync]
  -[IMDCKMessageSyncController _markAllUnsuccessFullSyncMessagesAsNeedingSync]
  -[IMDCKMessageSyncController syncMessagesWithSyncType:deviceConditionsToCheck:activity:completionBlock:]
  -[IMDCKMessageSyncController deleteMessageSyncToken]
  -[IMDCKMessageSyncController _processRecordDeletionCompletion:error:completionBlock:]
  -[IMDCKMessageSyncController _deleteMessagesWithRecordIDs:completion:]
  -[IMDCKMessageSyncController _sharedIMDMessageStore]
  -[IMDCKMessageSyncController _constructMessageRecordIDUsingTombStoneDictionary:]
  -[IMDCKMessageSyncController syncDeletedMessagesToCloudKitWithCompletion:]
  -[IMDCKMessageSyncController visitedChats]
  -[IMDCKMessageSyncController setVisitedChats:]
  -[IMDCKMessageSyncController encounteredIncompatibleMessage]
  -[IMDCKMessageSyncController setEncounteredIncompatibleMessage:]


IMDCKRecoverableMessageSyncController : IMDCKAbstractSyncController
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  IMDRecordZoneManager *recordZoneManager
 @property  <IMDCKSyncTokenStore> *syncTokenStore
 @property  CKServerChangeToken *latestSyncToken
 @property  IMDCKMessageSyncCKOperationFactory *CKOperationFactory

  // class methods
  +[IMDCKRecoverableMessageSyncController sharedInstance]
  +[IMDCKRecoverableMessageSyncController _zoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:]
  +[IMDCKRecoverableMessageSyncController _fetchRecoverableMessagesCKConfiguration:]
  +[IMDCKRecoverableMessageSyncController _fetchOperationFactory:token:batchSize:activity:]

  // instance methods
  -[IMDCKRecoverableMessageSyncController ckQueue]
  -[IMDCKRecoverableMessageSyncController recordZoneManager]
  -[IMDCKRecoverableMessageSyncController .cxx_destruct]
  -[IMDCKRecoverableMessageSyncController syncControllerRecordType]
  -[IMDCKRecoverableMessageSyncController setRecordZoneManager:]
  -[IMDCKRecoverableMessageSyncController _scheduleOperation:]
  -[IMDCKRecoverableMessageSyncController deleteRecoverableMessageZone]
  -[IMDCKRecoverableMessageSyncController setCkQueue:]
  -[IMDCKRecoverableMessageSyncController init]
  -[IMDCKRecoverableMessageSyncController _zoneCreated]
  -[IMDCKRecoverableMessageSyncController initWithSyncTokenStore:]
  -[IMDCKRecoverableMessageSyncController clearLocalSyncState:]
  -[IMDCKRecoverableMessageSyncController _copyRecordIDsToDeleteWithLimit:]
  -[IMDCKRecoverableMessageSyncController CKOperationFactory]
  -[IMDCKRecoverableMessageSyncController setCKOperationFactory:]
  -[IMDCKRecoverableMessageSyncController syncTokenStore]
  -[IMDCKRecoverableMessageSyncController setSyncTokenStore:]
  -[IMDCKRecoverableMessageSyncController setLatestSyncToken:]
  -[IMDCKRecoverableMessageSyncController latestSyncToken]
  -[IMDCKRecoverableMessageSyncController _processRecordDeletionCompletion:error:completionBlock:]
  -[IMDCKRecoverableMessageSyncController syncWithType:withActivity:withCompletion:]
  -[IMDCKRecoverableMessageSyncController _readRecordsWithType:attemptCount:activity:completion:]
  -[IMDCKRecoverableMessageSyncController _onRecordRead:]
  -[IMDCKRecoverableMessageSyncController _onRecoverableMessagePartRecordReadWithDeleteDate:messageGUID:partBody:]
  -[IMDCKRecoverableMessageSyncController _onRecordDeleted:type:]
  -[IMDCKRecoverableMessageSyncController _onChangeTokenUpdated:token:data:]
  -[IMDCKRecoverableMessageSyncController _onRecordZoneFetchComplete:token:tokenData:moreComing:error:]
  -[IMDCKRecoverableMessageSyncController _onReadComplete:error:activity:completion:]
  -[IMDCKRecoverableMessageSyncController _writeRecordsWithType:activity:completion:]
  -[IMDCKRecoverableMessageSyncController _onRecordWrite:error:recordNameToPartIndexAndRowID:]
  -[IMDCKRecoverableMessageSyncController _onWriteComplete:error:shouldWriteMore:activity:completion:]
  -[IMDCKRecoverableMessageSyncController syncRemovedRecoverableMessagesToCloudKitWithCompletion:]
  -[IMDCKRecoverableMessageSyncController _deleteRecoverableMessagesWithRecordIDs:completion:]
  -[IMDCKRecoverableMessageSyncController _constructRecoverableMessageRecordIDUsingTombStoneDictionary:]
  -[IMDCKRecoverableMessageSyncController _deleteBatchSize]
  -[IMDCKRecoverableMessageSyncController _fetchRecordsOperationWithActivity:]
  -[IMDCKRecoverableMessageSyncController _saveRecordsOperationWithMap:activity:]
  -[IMDCKRecoverableMessageSyncController _writeRecoverableMessagesCKConfiguration:]
  -[IMDCKRecoverableMessageSyncController _saveRecoverableMessagesOperationFactory:token:batchSize:recordNameToPartIndexAndRowID:activity:]
  -[IMDCKRecoverableMessageSyncController createCKRecordforRecoverableMessageMetadata:zoneID:recordNameToPartIndexAndRowID:]
  -[IMDCKRecoverableMessageSyncController recoverableGUIDFromMessageGUID:chatGUID:partIndex:]


IMDInvocationForwarder : NSObject
 @property  NSMutableArray *_targets
 @property  NSLock *_lock

  // instance methods
  -[IMDInvocationForwarder addTarget:]
  -[IMDInvocationForwarder methodSignatureForSelector:]
  -[IMDInvocationForwarder dealloc]
  -[IMDInvocationForwarder respondsToSelector:]
  -[IMDInvocationForwarder initWithTargets:]
  -[IMDInvocationForwarder forwardInvocation:]
  -[IMDInvocationForwarder _lock]
  -[IMDInvocationForwarder _targets]
  -[IMDInvocationForwarder removeTarget:]
  -[IMDInvocationForwarder set_targets:]
  -[IMDInvocationForwarder set_lock:]


IMTextMessageProcessingPipelineComponent : IMPipelineComponent
  // instance methods
  -[IMTextMessageProcessingPipelineComponent .cxx_destruct]
  -[IMTextMessageProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMTextMessageProcessingPipelineComponent createMessageItemWithInput:]
  -[IMTextMessageProcessingPipelineComponent canSuppressMessageWithInput:]
  -[IMTextMessageProcessingPipelineComponent initWithAccount:messageStore:]
  -[IMTextMessageProcessingPipelineComponent computeFlagsForInput:]


IMEditMessageCommandProcessingPipelineComponent : IMPipelineComponent
 @property  IMDiMessagePipelineResources *pipelineResources

  // instance methods
  -[IMEditMessageCommandProcessingPipelineComponent _account]
  -[IMEditMessageCommandProcessingPipelineComponent .cxx_destruct]
  -[IMEditMessageCommandProcessingPipelineComponent _messageStore]
  -[IMEditMessageCommandProcessingPipelineComponent _messageEditHistoryLimit]
  -[IMEditMessageCommandProcessingPipelineComponent _idsAccount]
  -[IMEditMessageCommandProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMEditMessageCommandProcessingPipelineComponent initWithPipelineResources:]
  -[IMEditMessageCommandProcessingPipelineComponent pipelineResources]
  -[IMEditMessageCommandProcessingPipelineComponent _applyEditsToMessage:preEditFullMessageText:editType:editedPartIndex:editedMessagePartText:shouldRetractSubject:editTimestamp:chat:updatedAssociatedMessageItems:]
  -[IMEditMessageCommandProcessingPipelineComponent _timeoutIntervalForEditType:enforceExactRetractionTimeoutInterval:]
  -[IMEditMessageCommandProcessingPipelineComponent _messageEditReceivedTimeout]
  -[IMEditMessageCommandProcessingPipelineComponent _messageRetractionReceivedTimeoutEnforcingExactTimeoutInterval:]


IMDCKBackupController : NSObject <IMDXPCEventStreamHandlerDelegate>
 @property  IMDCKUtilities *ckUtilities
 @property  NSDate *firstSyncDate
 @property  BOOL iCloudBackupsDisabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDCKBackupController sharedInstance]

  // instance methods
  -[IMDCKBackupController ckUtilities]
  -[IMDCKBackupController toggleiCloudBackupsIfNeeded:]
  -[IMDCKBackupController syncStateDebuggingInfo:]
  -[IMDCKBackupController writeUserDefault:forKey:]
  -[IMDCKBackupController setFirstSyncDate:]
  -[IMDCKBackupController readUserDefaultForKey:]
  -[IMDCKBackupController _deviceStateHasChanged:]
  -[IMDCKBackupController removePathFromiCloudBackup:]
  -[IMDCKBackupController _enqueOperation:]
  -[IMDCKBackupController _attemptToDisableiCloudBackupsWithCurrentDeviceState:]
  -[IMDCKBackupController _timeIntervalFromFirstSync:hasExpiredForDate:]
  -[IMDCKBackupController .cxx_destruct]
  -[IMDCKBackupController setCkUtilities:]
  -[IMDCKBackupController createBackupManager]
  -[IMDCKBackupController setICloudBackupsDisabled:]
  -[IMDCKBackupController _firstSyncTimeoutHasExpired]
  -[IMDCKBackupController _savePreviousDeviceState:]
  -[IMDCKBackupController _readCurrentDeviceState]
  -[IMDCKBackupController setFirstSyncDateToNow]
  -[IMDCKBackupController _setiCloudBackupAttribute:onItemAtPath:error:]
  -[IMDCKBackupController _setICloudBackupsDisabled:]
  -[IMDCKBackupController _disableiCloudBackupIfSyncPercentageIsHighEnough:totalCount:]
  -[IMDCKBackupController removeUserDefault:]
  -[IMDCKBackupController _serverBagTimeIntervalForFirstSyncTimeout]
  -[IMDCKBackupController sendDeviceIDToCloudKitWithCompletion:]
  -[IMDCKBackupController setUserDefaultBool:forKey:]
  -[IMDCKBackupController _primaryAccountAltDSID]
  -[IMDCKBackupController registerForDistributedNotifications]
  -[IMDCKBackupController dateOfLastBackUp]
  -[IMDCKBackupController _readRecordCount]
  -[IMDCKBackupController readUserDefaultBoolForKey:]
  -[IMDCKBackupController _currentDeviceStateIsRestore:]
  -[IMDCKBackupController checkDatabaseWasRestored]
  -[IMDCKBackupController iCloudBackupEnabledSystemWide]
  -[IMDCKBackupController _disabledDirectoryPath]
  -[IMDCKBackupController pathRemovedFromBackup:]
  -[IMDCKBackupController eventStreamHandler:didReceiveEventWithName:userInfo:]
  -[IMDCKBackupController firstSyncDate]
  -[IMDCKBackupController _fetchCountOfSyncedCloudKitRecords:totalCount:]
  -[IMDCKBackupController _ensureRestoredDatabaseToBackup]
  -[IMDCKBackupController _debuggingRestoreStateDescription]
  -[IMDCKBackupController _readPreviousDeviceState]
  -[IMDCKBackupController iCloudBackupsDisabled]
  -[IMDCKBackupController _deviceIDFromMobileBackupManager:legacyDeviceID:]
  -[IMDCKBackupController _saveRecordCount:]
  -[IMDCKBackupController _canDisableiCloudBackupsAfterRestore]
  -[IMDCKBackupController setupAssistantNeedsToRun]
  -[IMDCKBackupController _firstSyncExpirationTimeInterval]


IMDCollaborationNoticeRateLimiter : NSObject
 @property  NSObject<OS_dispatch_queue> *persistenceQueue
 @property  NSMutableDictionary *noticeEventHistory

  // class methods
  +[IMDCollaborationNoticeRateLimiter participantChangeThreshold]
  +[IMDCollaborationNoticeRateLimiter loadNoticeEventHistory]
  +[IMDCollaborationNoticeRateLimiter commentThreshold]
  +[IMDCollaborationNoticeRateLimiter defaultThreshold]
  +[IMDCollaborationNoticeRateLimiter peristencePath]

  // instance methods
  -[IMDCollaborationNoticeRateLimiter shouldSendNotice:]
  -[IMDCollaborationNoticeRateLimiter .cxx_destruct]
  -[IMDCollaborationNoticeRateLimiter dateLastUpdatedForURL:]
  -[IMDCollaborationNoticeRateLimiter thresholdForNoticeType:]
  -[IMDCollaborationNoticeRateLimiter didSendNotice:]
  -[IMDCollaborationNoticeRateLimiter setNoticeEventHistory:]
  -[IMDCollaborationNoticeRateLimiter setPersistenceQueue:]
  -[IMDCollaborationNoticeRateLimiter noticeEventHistory]
  -[IMDCollaborationNoticeRateLimiter persistenceQueue]
  -[IMDCollaborationNoticeRateLimiter saveNoticeEventHistory]
  -[IMDCollaborationNoticeRateLimiter init]


IMDReplayController : NSObject
 @property  NSDictionary *syncTaskByServiceName
 @property  IMDReplayStorageIterationContext *heldDeletionContext
 @property  @? automationCompletionBlock
 @property  IMDReplayStorageController *storageController
 @property  BOOL isRecordingReplayDB

  // class methods
  +[IMDReplayController sharedInstance]
  +[IMDReplayController batchSize]

  // instance methods
  -[IMDReplayController syncTaskByServiceName]
  -[IMDReplayController isRecordingReplayDB]
  -[IMDReplayController storeMessage:type:error:]
  -[IMDReplayController deleteReplayDBIfNotUnderFirstUnlock]
  -[IMDReplayController setAutomationCompletionBlock:]
  -[IMDReplayController setSyncTaskByServiceName:]
  -[IMDReplayController dealloc]
  -[IMDReplayController setHeldDeletionContext:]
  -[IMDReplayController heldDeletionContext]
  -[IMDReplayController storageController]
  -[IMDReplayController restoreDefaultStoreControllerInstance]
  -[IMDReplayController _processBatch:]
  -[IMDReplayController startRecordingReplayDatabase]
  -[IMDReplayController overrideStorageControllerWithDatabaseFromPath:]
  -[IMDReplayController _fetchNexBatchOfMessagesAndReplay]
  -[IMDReplayController initWithStorageController:]
  -[IMDReplayController replayMessagesWithCompletion:]
  -[IMDReplayController automationCompletionBlock]
  -[IMDReplayController endRecordingReplayDatabase]
  -[IMDReplayController replayMessages]
  -[IMDReplayController init]
  -[IMDReplayController setStorageController:]
  -[IMDReplayController scheduleSyncTaskForServices:]


IMMessageFromStoragePipelineComponent : IMPipelineComponent
  // instance methods
  -[IMMessageFromStoragePipelineComponent .cxx_destruct]
  -[IMMessageFromStoragePipelineComponent runIndividuallyWithInput:]
  -[IMMessageFromStoragePipelineComponent initWithStorageProcessingType:storageController:broadcaster:account:]


IMDeliveryReceiptPipelineParameter : NSObject <IMDeliveryReceiptProcessingParameter, IMMessageFromStorageParameter>
 @property  NSString *GUID
 @property  NSNumber *timestamp
 @property  BOOL isFromStorage
 @property  BOOL isLastFromStorage
 @property  NSArray *messageItems
 @property  IMDChat *chat

  // instance methods
  -[IMDeliveryReceiptPipelineParameter GUID]
  -[IMDeliveryReceiptPipelineParameter setTimestamp:]
  -[IMDeliveryReceiptPipelineParameter .cxx_destruct]
  -[IMDeliveryReceiptPipelineParameter setIsFromStorage:]
  -[IMDeliveryReceiptPipelineParameter timestamp]
  -[IMDeliveryReceiptPipelineParameter isFromStorage]
  -[IMDeliveryReceiptPipelineParameter setChat:]
  -[IMDeliveryReceiptPipelineParameter chat]
  -[IMDeliveryReceiptPipelineParameter setGUID:]
  -[IMDeliveryReceiptPipelineParameter isLastFromStorage]
  -[IMDeliveryReceiptPipelineParameter setMessageItems:]
  -[IMDeliveryReceiptPipelineParameter messageItems]
  -[IMDeliveryReceiptPipelineParameter initWithBD:]
  -[IMDeliveryReceiptPipelineParameter setIsLastFromStorage:]


IMDCKSyncController : IMDCKAbstractSyncController <IMDXPCEventStreamHandlerDelegate, IMSystemMonitorListener, IMDCKAbstractSyncControllerDelegate>
 @property  NSDate *syncStartDate
 @property  NSTimer *longRunningSyncTimer
 @property  IMTimer *nightlySyncTimer
 @property  long long initialSyncAttempts
 @property  NSDate *lastLogDumpDate
 @property  NSDate *lastRestoreFailureLogDumpDate
 @property  BOOL shouldReloadConversations
 @property  NSTimer *reloadTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDCKSyncController sharedInstance]
  +[IMDCKSyncController initialSyncAllowed]

  // instance methods
  -[IMDCKSyncController reloadTimer]
  -[IMDCKSyncController _reloadChatRegistryOnMainThread]
  -[IMDCKSyncController _manualSyncAttemptCount]
  -[IMDCKSyncController longRunningSyncTimer]
  -[IMDCKSyncController syncStateDebuggingInfo:]
  -[IMDCKSyncController syncAttachmentMetadataFirstSyncWithActivity:deviceConditionsToCheck:completionBlock:]
  -[IMDCKSyncController initialAttachmentSyncController]
  -[IMDCKSyncController _accountHasMultipleDevices]
  -[IMDCKSyncController shouldReloadConversations]
  -[IMDCKSyncController _errorIndicatesDeviceNotGoodForSync:]
  -[IMDCKSyncController _ifCloudKitAbleToSyncWithActivity:callBlock:]
  -[IMDCKSyncController attachmentSyncController]
  -[IMDCKSyncController setNightlySyncTimer:]
  -[IMDCKSyncController _syncChatsWithActivity:]
  -[IMDCKSyncController chatSyncController]
  -[IMDCKSyncController _completedPeriodicSyncSinceFirstFullSyncForLastSyncDate:firstFullSyncCompletedDate:]
  -[IMDCKSyncController beginPeriodicSyncWithChecks:priority:reason:]
  -[IMDCKSyncController _refreshUIWhileSyncing]
  -[IMDCKSyncController _noteMetricsForSyncStartFrom:fullSync:]
  -[IMDCKSyncController setLongRunningSyncTimer:]
  -[IMDCKSyncController kickOffEagerSyncIfApplicable]
  -[IMDCKSyncController _dateForNext24LogDumpAtHour:timeNow:dumpNow:]
  -[IMDCKSyncController dealloc]
  -[IMDCKSyncController clearCKRelatedDefaults]
  -[IMDCKSyncController _periodicSyncStateDictionary]
  -[IMDCKSyncController performInitialSyncOnFirstConnectionOfImagentIfNeeded]
  -[IMDCKSyncController refreshUIIfApplicableWithBatchCount:]
  -[IMDCKSyncController _nightlySyncTimerFired]
  -[IMDCKSyncController syncStartDate]
  -[IMDCKSyncController _handleSyncFailureType:step:activity:attemptCount:startTime:error:retry:]
  -[IMDCKSyncController sendRestoreFailuresLogDumpsIfNeeded]
  -[IMDCKSyncController .cxx_destruct]
  -[IMDCKSyncController syncControllerRecordType]
  -[IMDCKSyncController updateSecurityLevelDowngradedIfNeeded:]
  -[IMDCKSyncController reloadTimeInterval]
  -[IMDCKSyncController registerForAccountNotifications]
  -[IMDCKSyncController _beginExitStateCleanupIfNeededWithActivity:]
  -[IMDCKSyncController initialMessageSyncController]
  -[IMDCKSyncController _postMetricsToCloudKitOnAutomaticHistoryDeletionAgentLaunch]
  -[IMDCKSyncController _serverDoesNotAllowComingBackOnlineChatSync]
  -[IMDCKSyncController _keychainError]
  -[IMDCKSyncController _clearTombstonesWithActivity:]
  -[IMDCKSyncController _serverAllowsUIRefreshTimerWhileSyncing]
  -[IMDCKSyncController recordMetricIsCloudKitEnabled]
  -[IMDCKSyncController _withinAnHourOfLogDumpHour]
  -[IMDCKSyncController _submitCloudKitAnalyticWithOperationGroupName:analyticDictionary:]
  -[IMDCKSyncController updateSyncController]
  -[IMDCKSyncController _serverAllowsUIRefreshWhileSyncing]
  -[IMDCKSyncController _nukeCKData]
  -[IMDCKSyncController _didPassAccountAndIdentityUpdateNeeds]
  -[IMDCKSyncController syncChatsWithMessageContext:]
  -[IMDCKSyncController _chatSyncedRecently]
  -[IMDCKSyncController lastLogDumpDate]
  -[IMDCKSyncController syncDeletesToCloudKitWithActivity:completion:]
  -[IMDCKSyncController beginInitialSyncWithActivity:]
  -[IMDCKSyncController _noteSyncStarted:]
  -[IMDCKSyncController _syncRecoverableMessagesToCloudKitWithActivity:syncAttemptCount:startTime:syncCompletionBlock:retryCompletionBock:]
  -[IMDCKSyncController _deleteRestoreFailuresDirectory]
  -[IMDCKSyncController _sharedDatabaseManager]
  -[IMDCKSyncController _autoBugCaptureWithSubType:debugDescription:]
  -[IMDCKSyncController _beginPeriodicSyncWithActivity:attemptCount:syncChatsCompletionBlock:]
  -[IMDCKSyncController _syncNotCompletedRecently]
  -[IMDCKSyncController initialSyncAttempts]
  -[IMDCKSyncController rampManager]
  -[IMDCKSyncController messageSyncController]
  -[IMDCKSyncController _noteMeticsForSyncEndedWithSuccces:]
  -[IMDCKSyncController systemDidUnlock]
  -[IMDCKSyncController _serverDoesNotSingleDeviceLimitation]
  -[IMDCKSyncController beginChatSyncPeriodic:activity:]
  -[IMDCKSyncController _recordManager]
  -[IMDCKSyncController _minimumChatComingOnlineSyncInterval]
  -[IMDCKSyncController clearAnalyticDefaultsAndLocalSyncState]
  -[IMDCKSyncController kickOffCloudKitSyncIfNeededOnImagentLaunch]
  -[IMDCKSyncController _keychainErrorWithCause:]
  -[IMDCKSyncController _retryError]
  -[IMDCKSyncController _currentHour]
  -[IMDCKSyncController _addDatesDefaultsIfNeededToDictionary:keys:]
  -[IMDCKSyncController beginPeriodicSyncWithActivity:]
  -[IMDCKSyncController _needsSyncOnIdentityUpdate]
  -[IMDCKSyncController _beginPeriodicSyncWithActivity:attemptCount:]
  -[IMDCKSyncController eventStreamHandler:didReceiveEventWithName:userInfo:]
  -[IMDCKSyncController handleAKUserInfoChangedNotification:]
  -[IMDCKSyncController _hasDumpedRestoreFailureLogsInPastHour]
  -[IMDCKSyncController setShouldReloadConversations:]
  -[IMDCKSyncController enforceAccountsMatchForMocAndShowDialogIfNeeded]
  -[IMDCKSyncController _accountDidChange:]
  -[IMDCKSyncController performOneTimeAccountUpgradeCheckIfNeeded]
  -[IMDCKSyncController setLastRestoreFailureLogDumpDate:]
  -[IMDCKSyncController clearLocalCloudKitSyncState]
  -[IMDCKSyncController setInitialSyncAttempts:]
  -[IMDCKSyncController _addDatesDefaultsIfNeededToDictionary:]
  -[IMDCKSyncController _needsSyncOnAccountUpdate]
  -[IMDCKSyncController collectLogsIfNeeded]
  -[IMDCKSyncController sendRestoreFailuresLogDumps]
  -[IMDCKSyncController _resetSyncStateAndAttemptCounts]
  -[IMDCKSyncController beginComingBackOnlineSyncWithActivity:]
  -[IMDCKSyncController nightlySyncTimer]
  -[IMDCKSyncController logCloudKitAnalytics]
  -[IMDCKSyncController _serverDeniesPeriodicSyncAnalytics]
  -[IMDCKSyncController exitManager]
  -[IMDCKSyncController _serverDeniesDailySyncStateAnalytics]
  -[IMDCKSyncController setSyncStartDate:]
  -[IMDCKSyncController _IMAHDAgentFallbackIntervalInSeconds]
  -[IMDCKSyncController beginInitialSyncAttemptCount:withActivity:]
  -[IMDCKSyncController shouldMarkAllIncompatibleMessagesForDeletion]
  -[IMDCKSyncController syncController:syncBatchCompleted:]
  -[IMDCKSyncController setLastLogDumpDate:]
  -[IMDCKSyncController _dailySyncStateDictionary]
  -[IMDCKSyncController init]
  -[IMDCKSyncController _callSyncWithCompletion:activity:]
  -[IMDCKSyncController _writeDownSyncDate]
  -[IMDCKSyncController _dispatchNotification:withBlock:]
  -[IMDCKSyncController _hasDumpedLogsInPastHour]
  -[IMDCKSyncController _maxTimeToDeferInSeconds]
  -[IMDCKSyncController _periodicSyncAttemptCount]
  -[IMDCKSyncController lastRestoreFailureLogDumpDate]
  -[IMDCKSyncController backupController]
  -[IMDCKSyncController setReloadTimer:]
  -[IMDCKSyncController _kickOffNightlyPeriodicSyncIfApplicable]
  -[IMDCKSyncController recoverableMessageSyncController]


IMMessagesToTrack : NSObject
 @property  NSMutableOrderedSet *recentMessageIDs
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  unsigned long maxNumberOfMessages
 @property  unsigned long currentNumberOfMessages

  // class methods
  +[IMMessagesToTrack sharedInstance]

  // instance methods
  -[IMMessagesToTrack .cxx_destruct]
  -[IMMessagesToTrack internalQueue]
  -[IMMessagesToTrack setInternalQueue:]
  -[IMMessagesToTrack init]
  -[IMMessagesToTrack addMessagesID:]
  -[IMMessagesToTrack containsMessageID:completion:]
  -[IMMessagesToTrack maxNumberOfMessages]
  -[IMMessagesToTrack currentNumberOfMessages]
  -[IMMessagesToTrack recentMessageIDs]
  -[IMMessagesToTrack setRecentMessageIDs:]


IMDiMessageIDSDelegateHandlerRegistry : IMBaseCommandHandlerRegistry
  // instance methods
  -[IMDiMessageIDSDelegateHandlerRegistry canAddCommand:]
  -[IMDiMessageIDSDelegateHandlerRegistry noopHandlerForCommand:]


IMDCKInitialAttachmentSyncController : IMDCKAttachmentSyncController
 @property  CKServerChangeToken *syncToken

  // instance methods
  -[IMDCKInitialAttachmentSyncController ckUtilities]
  -[IMDCKInitialAttachmentSyncController syncToken]
  -[IMDCKInitialAttachmentSyncController setSyncToken:]
  -[IMDCKInitialAttachmentSyncController .cxx_destruct]
  -[IMDCKInitialAttachmentSyncController _kickOffWriteIfNeededForSyncType:activity:completion:]
  -[IMDCKInitialAttachmentSyncController setLatestSyncToken:forSyncType:]
  -[IMDCKInitialAttachmentSyncController _deviceConditionsAllowsMessageSyncForActivity:deviceConditionsToCheck:currentBatchCount:maxBatchCount:]
  -[IMDCKInitialAttachmentSyncController setLatestSyncToken:]
  -[IMDCKInitialAttachmentSyncController latestSyncToken]
  -[IMDCKInitialAttachmentSyncController _deviceConditionsAllowsMessageSyncForCurrentBatchCount:maxBatchCount:]
  -[IMDCKInitialAttachmentSyncController _deviceConditionsAllowsMessageSync]
  -[IMDCKInitialAttachmentSyncController _deviceConditionsAllowsMessageSyncIgnoreFeatureEnabled:]


IMDMessageHistorySyncController : NSObject
 @property  BOOL replayControllerNeedsSync
 @property  BOOL ckChatSyncControllerNeedsSync
 @property  BOOL idsTransportLogNeedsSync
 @property  <IMDMessageHistorySyncTask> *currentlyExecutingSyncTask
 @property  <IMDMessageHistorySyncTaskFactory> *syncTaskFactory

  // instance methods
  -[IMDMessageHistorySyncController ckChatSyncControllerWantsToSync]
  -[IMDMessageHistorySyncController _evaluateStateAndActIfNeeded]
  -[IMDMessageHistorySyncController setSyncTaskFactory:]
  -[IMDMessageHistorySyncController setReplayControllerNeedsSync:]
  -[IMDMessageHistorySyncController currentlyExecutingSyncTask]
  -[IMDMessageHistorySyncController dealloc]
  -[IMDMessageHistorySyncController setIdsTransportLogNeedsSync:]
  -[IMDMessageHistorySyncController idsTransportLogNeedsSync]
  -[IMDMessageHistorySyncController IDSTransportLogWantsToSync]
  -[IMDMessageHistorySyncController replayControllerNeedsSync]
  -[IMDMessageHistorySyncController setCurrentlyExecutingSyncTask:]
  -[IMDMessageHistorySyncController syncTaskFactory]
  -[IMDMessageHistorySyncController ckChatSyncControllerNeedsSync]
  -[IMDMessageHistorySyncController _scheduleNextEvaluation]
  -[IMDMessageHistorySyncController setCkChatSyncControllerNeedsSync:]
  -[IMDMessageHistorySyncController replayControllerWantsToSync]
  -[IMDMessageHistorySyncController initWithMessageHistorySyncTaskFactory:]


IMDCKChatSyncController : IMDCKAbstractSyncController
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  IMDChatRegistry *chatRegistry
 @property  IMDRecordZoneManager *recordZoneManager
 @property  <IMDCKSyncTokenStore> *syncTokenStore
 @property  CKServerChangeToken *latestSyncToken
 @property  IMDCKChatSyncCKOperationFactory *CKOperationFactory
 @property  CKRecord *lockRecord
 @property  BOOL fetchedChatsDuringLastSync

  // class methods
  +[IMDCKChatSyncController sharedInstance]

  // instance methods
  -[IMDCKChatSyncController ckQueue]
  -[IMDCKChatSyncController recordZoneManager]
  -[IMDCKChatSyncController deleteChatZone]
  -[IMDCKChatSyncController .cxx_destruct]
  -[IMDCKChatSyncController syncControllerRecordType]
  -[IMDCKChatSyncController setRecordZoneManager:]
  -[IMDCKChatSyncController _scheduleOperation:]
  -[IMDCKChatSyncController chatRegistry]
  -[IMDCKChatSyncController setCkQueue:]
  -[IMDCKChatSyncController init]
  -[IMDCKChatSyncController _randomSalt]
  -[IMDCKChatSyncController setChatRegistry:]
  -[IMDCKChatSyncController initWithSyncTokenStore:]
  -[IMDCKChatSyncController _recordKeyManagerSharedInstance]
  -[IMDCKChatSyncController _kickOffWriteOnCKQueueWithActivity:completion:]
  -[IMDCKChatSyncController _kickOffWriteIfNeededForSyncType:activity:completion:]
  -[IMDCKChatSyncController _processRecordDeletion:]
  -[IMDCKChatSyncController _processRecordChanged:]
  -[IMDCKChatSyncController _processModifyRecordCompletion:deletedRecordIDs:error:completionBlock:]
  -[IMDCKChatSyncController clearLocalSyncState:]
  -[IMDCKChatSyncController CKOperationFactory]
  -[IMDCKChatSyncController setCKOperationFactory:]
  -[IMDCKChatSyncController syncTokenStore]
  -[IMDCKChatSyncController setSyncTokenStore:]
  -[IMDCKChatSyncController _changeTokenKey]
  -[IMDCKChatSyncController setLatestSyncToken:]
  -[IMDCKChatSyncController latestSyncToken]
  -[IMDCKChatSyncController _generateLockRecord]
  -[IMDCKChatSyncController _migrateServerChangeToken]
  -[IMDCKChatSyncController _copyChatsToUploadWithLimit:]
  -[IMDCKChatSyncController _newckRecordsFromChats:]
  -[IMDCKChatSyncController _chatZoneID]
  -[IMDCKChatSyncController _updateChatUsingCKRecord:onRead:didSucceed:]
  -[IMDCKChatSyncController _resolveChatConflictUsingCKRecord:localGUID:]
  -[IMDCKChatSyncController _markChatAsDefferedForSyncingUsingRecord:]
  -[IMDCKChatSyncController _chatZoneCreated]
  -[IMDCKChatSyncController _processModifyPerRecordCallBack:error:recordIDtoGUIDmap:]
  -[IMDCKChatSyncController _lockRecordHadConflict:]
  -[IMDCKChatSyncController _writeCKRecordsToChatZone:activity:withCompletion:]
  -[IMDCKChatSyncController _numberOfChatsToFetch]
  -[IMDCKChatSyncController _numberOfChatsToWrite]
  -[IMDCKChatSyncController _shouldResyncChatsForError:]
  -[IMDCKChatSyncController _logGreenTeaLogsForChats:]
  -[IMDCKChatSyncController _writeDirtyChatsToCloudKitWithActivity:completion:]
  -[IMDCKChatSyncController _fetchChatRecordOperationWithActivity:]
  -[IMDCKChatSyncController _processRecordZoneChangeTokenUpdated:zoneID:clienChangeToken:]
  -[IMDCKChatSyncController _processRecordZoneFetchCompletion:zoneID:clientChangeTokenData:moreComing:error:]
  -[IMDCKChatSyncController _processFetchRecordChangesCompleted:activity:completion:syncType:]
  -[IMDCKChatSyncController deleteChatSyncToken]
  -[IMDCKChatSyncController _syncChatsWithCloudKitWithCompletionType:activity:syncChatsCompletionBlock:]
  -[IMDCKChatSyncController _anyChatExistsOnServerWithResultsLimit:changeToken:activity:completion:]
  -[IMDCKChatSyncController anyChatExistsOnServerWithActivity:completion:]
  -[IMDCKChatSyncController _eligibleForTruthZone]
  -[IMDCKChatSyncController _needsToMarkAllChatsAsNeedingSync]
  -[IMDCKChatSyncController _shouldMarkAllChatsAsNeedingSync]
  -[IMDCKChatSyncController _hasMarkedAllChatsAsNeedingSync]
  -[IMDCKChatSyncController syncChatsWithType:withActivity:completion:]
  -[IMDCKChatSyncController __syncChatsWithCloudKit:attemptCount:activity:withCompletion:]
  -[IMDCKChatSyncController _copyRecordIDsToDelete]
  -[IMDCKChatSyncController _handleChatDeletionCompletionForRecordIDs:error:]
  -[IMDCKChatSyncController syncPendingDeletionWithCompletion:]
  -[IMDCKChatSyncController _deleteChatRecordsWithRecordIDs:completion:]
  -[IMDCKChatSyncController _filterRecordIDsToChatsWithNoRecentModifications:completion:]
  -[IMDCKChatSyncController fetchedChatsDuringLastSync]
  -[IMDCKChatSyncController setFetchedChatsDuringLastSync:]
  -[IMDCKChatSyncController lockRecord]
  -[IMDCKChatSyncController setLockRecord:]


IMNotifyRecipientCommandProcessingPipelineComponent : IMPipelineComponent
 @property  IMDiMessagePipelineResources *pipelineResources

  // instance methods
  -[IMNotifyRecipientCommandProcessingPipelineComponent _account]
  -[IMNotifyRecipientCommandProcessingPipelineComponent .cxx_destruct]
  -[IMNotifyRecipientCommandProcessingPipelineComponent _messageStore]
  -[IMNotifyRecipientCommandProcessingPipelineComponent _idsAccount]
  -[IMNotifyRecipientCommandProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMNotifyRecipientCommandProcessingPipelineComponent initWithPipelineResources:]
  -[IMNotifyRecipientCommandProcessingPipelineComponent pipelineResources]
  -[IMNotifyRecipientCommandProcessingPipelineComponent _markMessageAsNotifiedRecipientAndNotify:session:chat:]


IMDCollaborationNoticeController : NSObject <SWHighlightCenterDelegate, IMDCollaborationNoticeDispatcherDelegate>
 @property  NSObject<OS_dispatch_queue> *noticeDataQueue
 @property  IMDCollaborationNoticeStore *noticeStore
 @property  SWHighlightCenter *highlightCenter
 @property  NSSet *highlightURLs
 @property  NSDictionary *highlightURLsForChatGUID
 @property  BOOL hasPopulatedHighlightTracking
 @property  IMDCollaborationNoticeDispatcher *noticeDispatcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDCollaborationNoticeController sharedController]

  // instance methods
  -[IMDCollaborationNoticeController highlightCenterHighlightsDidChange:]
  -[IMDCollaborationNoticeController .cxx_destruct]
  -[IMDCollaborationNoticeController highlightCenter]
  -[IMDCollaborationNoticeController init]
  -[IMDCollaborationNoticeController dismissNotice:]
  -[IMDCollaborationNoticeController _handleChatParticipantsDidChange:]
  -[IMDCollaborationNoticeController _isShareBearURL:completionHandler:]
  -[IMDCollaborationNoticeController dispatcher:didReceiveNotice:fromID:]
  -[IMDCollaborationNoticeController dispatcher:didReceiveDismissalReflectionForNoticeGUIDs:]
  -[IMDCollaborationNoticeController highlightURLsForChatGUID]
  -[IMDCollaborationNoticeController setHighlightURLsForChatGUID:]
  -[IMDCollaborationNoticeController noticesForChatGUID:]
  -[IMDCollaborationNoticeController broadcastNoticesDidChangeForChatGUIDs:]
  -[IMDCollaborationNoticeController receiveHighlightEvent:fromSender:guidString:date:]
  -[IMDCollaborationNoticeController _processNotice:]
  -[IMDCollaborationNoticeController _updateMappingHighlightsToChats]
  -[IMDCollaborationNoticeController _mapChatGUIDsToHighlight:map:]
  -[IMDCollaborationNoticeController _chatGUIDsForNotice:]
  -[IMDCollaborationNoticeController _chatGUIDsForNoticeURL:]
  -[IMDCollaborationNoticeController highlightURLs]
  -[IMDCollaborationNoticeController setHighlightURLs:]
  -[IMDCollaborationNoticeController noticeDispatcher]
  -[IMDCollaborationNoticeController noticeDataQueue]
  -[IMDCollaborationNoticeController noticeStore]
  -[IMDCollaborationNoticeController setNoticeStore:]
  -[IMDCollaborationNoticeController hasPopulatedHighlightTracking]
  -[IMDCollaborationNoticeController setHasPopulatedHighlightTracking:]
  -[IMDCollaborationNoticeController _shouldPostParticipantChangeNoticesForChat:withParticipants:forNoticeType:]
  -[IMDCollaborationNoticeController _generateParticipantChangeNoticesForChat:highlights:participants:noticeType:]
  -[IMDCollaborationNoticeController _generateParticipantChangeNoticesForChat:highlight:participant:noticeType:checkedPrivileges:messageGUID:]
  -[IMDCollaborationNoticeController _hasAdministrativePrivilegesForHighlight:chatGUID:]
  -[IMDCollaborationNoticeController _highlightEligibleForSuggestAddingUser:]


IMDMessagePTask : NSObject
 @property  NSString *guid
 @property  unsigned long taskFlags

  // instance methods
  -[IMDMessagePTask dealloc]
  -[IMDMessagePTask guid]
  -[IMDMessagePTask initWithGUID:]
  -[IMDMessagePTask initWithStoreDictionary:]
  -[IMDMessagePTask setTaskFlag:]
  -[IMDMessagePTask needsProccesingFor:]
  -[IMDMessagePTask compeletedTask:]
  -[IMDMessagePTask taskFlags]


IMDStickerRegistry : NSObject
 @property  NSMutableDictionary *stickerPackGUIDToPackMap

  // class methods
  +[IMDStickerRegistry sharedInstance]

  // instance methods
  -[IMDStickerRegistry dealloc]
  -[IMDStickerRegistry init]
  -[IMDStickerRegistry _cachedPathForStickerWithProperties:]
  -[IMDStickerRegistry _isRecipeBasedSticker:]
  -[IMDStickerRegistry retrieveStickerWithProperties:completionBlock:]
  -[IMDStickerRegistry stickerPackGUIDToPackMap]
  -[IMDStickerRegistry setStickerPackGUIDToPackMap:]


IMDRecentsController : NSObject
  // class methods
  +[IMDRecentsController sharedInstance]

  // instance methods
  -[IMDRecentsController __pruneTypingContexts]
  -[IMDRecentsController .cxx_destruct]
  -[IMDRecentsController hasRecentlyMessaged:]
  -[IMDRecentsController activeDeviceForHandle:]
  -[IMDRecentsController updateLatestActiveDestination:ForHandle:incomingType:]
  -[IMDRecentsController _setTimerForPruningTypingContext]
  -[IMDRecentsController noteRecentMessageForPeople:]


IMDCKUpdateSyncController : IMDCKAbstractSyncController
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  IMDRecordZoneManager *recordZoneManager
 @property  <IMDCKSyncTokenStore> *syncTokenStore
 @property  CKServerChangeToken *latestSyncToken
 @property  BOOL fetchedChatsDuringLastSync
 @property  NSMutableDictionary *writeMsgIDToRowIDMap

  // class methods
  +[IMDCKUpdateSyncController sharedInstance]
  +[IMDCKUpdateSyncController _zoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:]
  +[IMDCKUpdateSyncController messageUpdateV1RecordType]
  +[IMDCKUpdateSyncController stepAfter:]
  +[IMDCKUpdateSyncController _fetchUpdatesCKConfiguration:]
  +[IMDCKUpdateSyncController fetchOperationFactory:token:batchSize:activity:]

  // instance methods
  -[IMDCKUpdateSyncController ckQueue]
  -[IMDCKUpdateSyncController recordZoneManager]
  -[IMDCKUpdateSyncController .cxx_destruct]
  -[IMDCKUpdateSyncController setRecordZoneManager:]
  -[IMDCKUpdateSyncController _scheduleOperation:]
  -[IMDCKUpdateSyncController setCkQueue:]
  -[IMDCKUpdateSyncController init]
  -[IMDCKUpdateSyncController _zoneCreated]
  -[IMDCKUpdateSyncController initWithSyncTokenStore:]
  -[IMDCKUpdateSyncController clearLocalSyncState:]
  -[IMDCKUpdateSyncController syncTokenStore]
  -[IMDCKUpdateSyncController setSyncTokenStore:]
  -[IMDCKUpdateSyncController _changeTokenKey]
  -[IMDCKUpdateSyncController setLatestSyncToken:]
  -[IMDCKUpdateSyncController latestSyncToken]
  -[IMDCKUpdateSyncController syncWithType:withActivity:withCompletion:]
  -[IMDCKUpdateSyncController _readRecordsWithType:attemptCount:activity:completion:]
  -[IMDCKUpdateSyncController _onRecordRead:]
  -[IMDCKUpdateSyncController _onRecordDeleted:type:]
  -[IMDCKUpdateSyncController _onChangeTokenUpdated:token:data:]
  -[IMDCKUpdateSyncController _onRecordZoneFetchComplete:token:tokenData:moreComing:error:]
  -[IMDCKUpdateSyncController _onReadComplete:error:activity:completion:]
  -[IMDCKUpdateSyncController _writeRecordsWithType:activity:completion:]
  -[IMDCKUpdateSyncController _fetchRecordsOperationWithActivity:]
  -[IMDCKUpdateSyncController fetchedChatsDuringLastSync]
  -[IMDCKUpdateSyncController setFetchedChatsDuringLastSync:]
  -[IMDCKUpdateSyncController deleteUpdateSyncToken]
  -[IMDCKUpdateSyncController _numberOfRecordsToFetchPerBatch]
  -[IMDCKUpdateSyncController _writeUpdatesWithType:updateStep:activity:completion:]
  -[IMDCKUpdateSyncController _writeT1RecordUpdatesWithType:activity:completion:]
  -[IMDCKUpdateSyncController _onRecordT1Write:error:recordNameToRowIDMap:]
  -[IMDCKUpdateSyncController _onWriteT1Complete:error:shouldWriteMore:activity:completion:]
  -[IMDCKUpdateSyncController _writeT2RecordUpdatesWithType:activity:completion:]
  -[IMDCKUpdateSyncController _onRecordT2Write:error:recordNameToItemMap:]
  -[IMDCKUpdateSyncController _onWriteT2Complete:error:shouldWriteMore:activity:completion:]
  -[IMDCKUpdateSyncController _saveRecordsT1OperationWithMap:activity:]
  -[IMDCKUpdateSyncController _saveRecordsT2OperationWithMap:activity:]
  -[IMDCKUpdateSyncController _writeUpdatesCKConfiguration:]
  -[IMDCKUpdateSyncController saveT1UpdatesOperationFactory:token:batchSize:recordNameToRowIDMap:activity:]
  -[IMDCKUpdateSyncController saveT2UpdatesOperationFactory:token:batchSize:recordNameToRowIDMap:activity:]
  -[IMDCKUpdateSyncController writeMsgIDToRowIDMap]
  -[IMDCKUpdateSyncController setWriteMsgIDToRowIDMap:]


IMDMessagePTaskXPCStore : NSObject <IMDMessagePTaskStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMDMessagePTaskXPCStore deleteAllCompletedTasks]
  -[IMDMessagePTaskXPCStore _networkCall_InsertRowGuid:taskFlags:]
  -[IMDMessagePTaskXPCStore _networkCall_IMDMessagePTaskUpdateTaskFlagsForGUID:taskFlags:]
  -[IMDMessagePTaskXPCStore _networkCall_IMDMessagePTaskSelectWithLimit:]
  -[IMDMessagePTaskXPCStore loadMostRecentMessagePTasks]
  -[IMDMessagePTaskXPCStore _networkCall_IMDMessagePTaskDeleteAllCompletedTask]
  -[IMDMessagePTaskXPCStore storePTask:]
  -[IMDMessagePTaskXPCStore updateTaskFlagsForPTask:]


IMDReplayStorageIterationContext : NSObject
 @property  IDSKVDeleteContext *deleteContext

  // instance methods
  -[IMDReplayStorageIterationContext dealloc]
  -[IMDReplayStorageIterationContext deleteContext]
  -[IMDReplayStorageIterationContext setDeleteContext:]


IMDReplayStorageController : NSObject
 @property  IDSKVStore *store
 @property  NSString *filePath

  // instance methods
  -[IMDReplayStorageController store]
  -[IMDReplayStorageController setStore:]
  -[IMDReplayStorageController filePath]
  -[IMDReplayStorageController dealloc]
  -[IMDReplayStorageController copyNextBatchWithSize:iterationContext:]
  -[IMDReplayStorageController deleteReplayDB]
  -[IMDReplayStorageController initWithFilePath:]
  -[IMDReplayStorageController storeDictionary:error:]


IMDCKInitialMessageSyncController : IMDCKMessageSyncController
 @property  CKServerChangeToken *syncToken

  // instance methods
  -[IMDCKInitialMessageSyncController ckUtilities]
  -[IMDCKInitialMessageSyncController syncToken]
  -[IMDCKInitialMessageSyncController setSyncToken:]
  -[IMDCKInitialMessageSyncController .cxx_destruct]
  -[IMDCKInitialMessageSyncController _kickOffWriteIfNeededForSyncType:activity:completion:]
  -[IMDCKInitialMessageSyncController setLatestSyncToken:forSyncType:]
  -[IMDCKInitialMessageSyncController _deviceConditionsAllowsMessageSyncForActivity:deviceConditionsToCheck:currentBatchCount:maxBatchCount:]
  -[IMDCKInitialMessageSyncController setLatestSyncToken:]
  -[IMDCKInitialMessageSyncController latestSyncToken]
  -[IMDCKInitialMessageSyncController syncMessagesWithSyncType:deviceConditionsToCheck:activity:completionBlock:]
  -[IMDCKInitialMessageSyncController _deviceConditionsAllowsMessageSyncForCurrentBatchCount:maxBatchCount:]


IMDMessageSuppressionController : NSObject
 @property  double timeToSuppressMessages

  // class methods
  +[IMDMessageSuppressionController sharedInstance]

  // instance methods
  -[IMDMessageSuppressionController messageStore]
  -[IMDMessageSuppressionController hasSuppressedMessageID:chatGUID:]
  -[IMDMessageSuppressionController setupTimerForChatGUID:]
  -[IMDMessageSuppressionController endMessageSuppressionForChatGUID:]
  -[IMDMessageSuppressionController setTimeToSuppressMessages:]
  -[IMDMessageSuppressionController setupTimerForChatGUID:message:]
  -[IMDMessageSuppressionController handlePlayedReceiptForChatGUID:messageGUID:]
  -[IMDMessageSuppressionController shouldSuppressMessageForChat:messageGUID:]
  -[IMDMessageSuppressionController .cxx_destruct]
  -[IMDMessageSuppressionController handleIncomingMessageForChatGUID:messageGUID:]
  -[IMDMessageSuppressionController storageController]
  -[IMDMessageSuppressionController broadcaster]
  -[IMDMessageSuppressionController setSuppressedMessage:inChatWithGUID:]
  -[IMDMessageSuppressionController _suppressionTimerFired:]
  -[IMDMessageSuppressionController endMessageSuppression]
  -[IMDMessageSuppressionController noteMessagesMarkedAsReadForChatWithGUID:]
  -[IMDMessageSuppressionController timeToSuppressMessages]
  -[IMDMessageSuppressionController handleReadReceiptForChatGUID:messageGUID:IDSService:]
  -[IMDMessageSuppressionController setupTimerForChatGUID:messageGUID:]
  -[IMDMessageSuppressionController setSuppressedMessageGUID:inChatWithGUID:]
  -[IMDMessageSuppressionController shouldSuppressMessageForChat:message:]
  -[IMDMessageSuppressionController _handleReceiptForChatGUID:messageGUID:unsuppressEarlierMessages:IDSService:]


IMDXPCEventStreamHandler : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMapTable *delegateToQueue

  // instance methods
  -[IMDXPCEventStreamHandler delegateToQueue]
  -[IMDXPCEventStreamHandler addDelegate:queue:]
  -[IMDXPCEventStreamHandler initWithEventStreamName:]
  -[IMDXPCEventStreamHandler .cxx_destruct]
  -[IMDXPCEventStreamHandler removeDelegate:]
  -[IMDXPCEventStreamHandler queue]
  -[IMDXPCEventStreamHandler init]
  -[IMDXPCEventStreamHandler queueForDelegate:]
  -[IMDXPCEventStreamHandler didReceiveEventWithName:userInfo:]


IMMarkUnreadRequestProcessingPipelineComponent : IMPipelineComponent
  // instance methods
  -[IMMarkUnreadRequestProcessingPipelineComponent .cxx_destruct]
  -[IMMarkUnreadRequestProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMMarkUnreadRequestProcessingPipelineComponent initWithMessageStore:chatRegistry:messageSuppressionController:recents:IDSService:]


IMBalloonPluginProcessingPipelineComponent : IMTextMessageProcessingPipelineComponent
  // instance methods
  -[IMBalloonPluginProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMBalloonPluginProcessingPipelineComponent createMessageItemWithInput:]


IMPlayedReceiptProcessingPipelineComponent : IMPipelineComponent
 @property  IMDiMessagePipelineResources *pipelineResources

  // instance methods
  -[IMPlayedReceiptProcessingPipelineComponent _account]
  -[IMPlayedReceiptProcessingPipelineComponent .cxx_destruct]
  -[IMPlayedReceiptProcessingPipelineComponent _messageStore]
  -[IMPlayedReceiptProcessingPipelineComponent _idsAccount]
  -[IMPlayedReceiptProcessingPipelineComponent runIndividuallyWithInput:]
  -[IMPlayedReceiptProcessingPipelineComponent initWithPipelineResources:]
  -[IMPlayedReceiptProcessingPipelineComponent pipelineResources]
  -[IMPlayedReceiptProcessingPipelineComponent _markMessageAsPlayedAndNotify:session:chat:date:]


IMDHandle : NSObject
 @property  NSString *ID
 @property  NSString *unformattedID
 @property  NSString *countryCode
 @property  NSDictionary *handleInfo
 @property  NSString *personCentricID
 @property  NSString *CNContactID

  // instance methods
  -[IMDHandle setID:]
  -[IMDHandle setCountryCode:]
  -[IMDHandle ID]
  -[IMDHandle dealloc]
  -[IMDHandle countryCode]
  -[IMDHandle isEqual:]
  -[IMDHandle compareIDs:]
  -[IMDHandle personCentricID]
  -[IMDHandle unformattedID]
  -[IMDHandle isBusiness]
  -[IMDHandle setPersonCentricID:]
  -[IMDHandle setUnformattedID:]
  -[IMDHandle handleInfo]
  -[IMDHandle initWithID:unformattedID:countryCode:]
  -[IMDHandle initWithID:unformattedID:countryCode:personCentricID:]
  -[IMDHandle isBetterDefinedThan:]
  -[IMDHandle CNContactID]
  -[IMDHandle setCNContactID:]


IMDiMessagePipelineResources : NSObject
 @property  IMDAccount *imdAccount
 @property  IDSService *service
 @property  IMDMessageStore *messageStore
 @property  IMDMessageFromStorageController *storageController
 @property  <IMDaemonListenerProtocol> *broadcaster
 @property  IMDMessageSuppressionController *messageSuppressionController
 @property  IMDRecentsController *recentsController
 @property  IMDChatRegistry *chatRegistry
 @property  IMDAttachmentStore *attachmentStore

  // instance methods
  -[IMDiMessagePipelineResources messageStore]
  -[IMDiMessagePipelineResources messageSuppressionController]
  -[IMDiMessagePipelineResources .cxx_destruct]
  -[IMDiMessagePipelineResources storageController]
  -[IMDiMessagePipelineResources broadcaster]
  -[IMDiMessagePipelineResources service]
  -[IMDiMessagePipelineResources attachmentStore]
  -[IMDiMessagePipelineResources chatRegistry]
  -[IMDiMessagePipelineResources recentsController]
  -[IMDiMessagePipelineResources initWithIMDAccount:service:messageStore:storageController:broadcaster:messageSuppressionController:recentsController:chatRegistry:attachmentStore:]
  -[IMDiMessagePipelineResources imdAccount]


IMDBadgeUtilities : NSObject
 @property  unsigned long unreadCount
 @property  long long lastFailedMessageDate
 @property  BOOL showingFailure
 @property  BOOL unexpectedlyLoggedOut
 @property  BOOL addedObserverForUnexpectedlyLoggedOut
 @property  UNUserNotificationCenter *notificationCenter
 @property  IMDefaults *sharedDefaultsInstance

  // class methods
  +[IMDBadgeUtilities sharedInstance]
  +[IMDBadgeUtilities _isTryingToLogin]
  +[IMDBadgeUtilities _iMessageEnabled]
  +[IMDBadgeUtilities _isUserIntentNotLoggedOut]
  +[IMDBadgeUtilities _isUsableSendingForAccount:]
  +[IMDBadgeUtilities _accountsArrayForServiceIMessage]
  +[IMDBadgeUtilities _iMessageFailedAccountIsIrreparable]

  // instance methods
  -[IMDBadgeUtilities notificationCenter]
  -[IMDBadgeUtilities setNotificationCenter:]
  -[IMDBadgeUtilities lastFailedMessageDate]
  -[IMDBadgeUtilities _checkIfUnexpectedlyLoggedOut]
  -[IMDBadgeUtilities _isUnexpectedlyLogOutValue]
  -[IMDBadgeUtilities _stopSuppressingSound]
  -[IMDBadgeUtilities setUnreadCount:]
  -[IMDBadgeUtilities isShowingFailure]
  -[IMDBadgeUtilities setSharedDefaultsInstance:]
  -[IMDBadgeUtilities dealloc]
  -[IMDBadgeUtilities _handleUnexpectedLogout]
  -[IMDBadgeUtilities _postBadgeNumber:]
  -[IMDBadgeUtilities isInAppleStoreDemoMode]
  -[IMDBadgeUtilities .cxx_destruct]
  -[IMDBadgeUtilities initWithMessageStore:]
  -[IMDBadgeUtilities _postBadgeString:]
  -[IMDBadgeUtilities setLastFailedMessageDate:]
  -[IMDBadgeUtilities setAddedObserverForUnexpectedlyLoggedOut:]
  -[IMDBadgeUtilities setUnexpectedlyLoggedOut:]
  -[IMDBadgeUtilities sharedDefaultsInstance]
  -[IMDBadgeUtilities _updateBadgeAndCancelPreviousUpdate]
  -[IMDBadgeUtilities _savedFailureDate]
  -[IMDBadgeUtilities _cacheFailureDate:]
  -[IMDBadgeUtilities _updateBadge]
  -[IMDBadgeUtilities initWithMessageStore:defaultsStore:]
  -[IMDBadgeUtilities updateBadgeForUnreadCountChangeIfNeeded:]
  -[IMDBadgeUtilities _shouldShowFailureString]
  -[IMDBadgeUtilities _compareLastFailureDateAndUpdateBadge:]
  -[IMDBadgeUtilities isUnexpectedlyLoggedOut]
  -[IMDBadgeUtilities addedObserverForUnexpectedlyLoggedOut]
  -[IMDBadgeUtilities init]
  -[IMDBadgeUtilities setShowingFailure:]
  -[IMDBadgeUtilities updateBadgeForLastFailedMessageDateChangeIfNeeded:]
  -[IMDBadgeUtilities unreadCount]
  -[IMDBadgeUtilities _saveFailureDate:]
  -[IMDBadgeUtilities _clearFailureBadge]


CKRecordUtilities : NSObject
  // class methods
  +[CKRecordUtilities recordNameUsingSalt:guid:]
  +[CKRecordUtilities recordNameForRecordChangeTag:ckRecordID:salt:guid:]
  +[CKRecordUtilities recordIDUsingName:zoneID:]
  +[CKRecordUtilities recordIDUsingSalt:zoneID:guid:]


IMDSpotlightIndexDelegate : NSObject <CSSearchableIndexDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDSpotlightIndexDelegate sharedInstance]

  // instance methods
  -[IMDSpotlightIndexDelegate searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:]
  -[IMDSpotlightIndexDelegate searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:]


IMDIDSAccount : IMDAccount
 @property  IDSAccount *idsAccount

  // instance methods
  -[IMDIDSAccount idsAccount]
  -[IMDIDSAccount multiplePhoneNumbersTiedToAccount]
  -[IMDIDSAccount accountDefaults]
  -[IMDIDSAccount canMakeDowngradeRoutingChecks]
  -[IMDIDSAccount .cxx_destruct]
  -[IMDIDSAccount initWithAccountID:defaults:service:idsAccount:]
  -[IMDIDSAccount writeAccountDefaults:]


IMDIDSService : IMDService <IDSAccountControllerDelegate, IDSAccountRegistrationDelegate>
 @property  IMDIDSService *subService
 @property  NSString *subServiceName
 @property  IMDIDSService *mainService
 @property  NSArray *accountsLoadedFromIdentityServices
 @property  NSArray *activeAccountsFromIdentityServices
 @property  BOOL isSubService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMDIDSService accountRemoved:]
  -[IMDIDSService disableAccount:]
  -[IMDIDSService enableAccount:]
  -[IMDIDSService mainService]
  -[IMDIDSService accountAdded:]
  -[IMDIDSService _serviceDomain]
  -[IMDIDSService accountClass]
  -[IMDIDSService initWithBundle:]
  -[IMDIDSService initWithBundle:subServiceName:]
  -[IMDIDSService accountController:accountUpdated:]
  -[IMDIDSService accountsLoadedFromIdentityServices]
  -[IMDIDSService account:registrationStatusInfoChanged:]
  -[IMDIDSService registrationFailedForAccount:needsDeletion:]
  -[IMDIDSService setSubService:]
  -[IMDIDSService dealloc]
  -[IMDIDSService newAccountWithAccountDefaults:accountID:]
  -[IMDIDSService setMockAccountController:]
  -[IMDIDSService .cxx_destruct]
  -[IMDIDSService accountController:accountDisabled:]
  -[IMDIDSService account:vettedAliasesChanged:]
  -[IMDIDSService account:aliasesChanged:]
  -[IMDIDSService setMainService:]
  -[IMDIDSService imdAccountLoginFromIDSAccountWithType:login:]
  -[IMDIDSService initWithBundle:isMainService:]
  -[IMDIDSService account:loginChanged:]
  -[IMDIDSService mockAccountController]
  -[IMDIDSService setSubServiceName:]
  -[IMDIDSService isSubService]
  -[IMDIDSService accountFromIDSAccountWithUniqueID:]
  -[IMDIDSService account:profileChanged:]
  -[IMDIDSService activeAccountsFromIdentityServices]
  -[IMDIDSService subServiceName]
  -[IMDIDSService subService]
  -[IMDIDSService accountController:accountAdded:]
  -[IMDIDSService accountController:accountRemoved:]
  -[IMDIDSService _loadIDSAccountController]
  -[IMDIDSService refreshRegistrationForAccount:]
  -[IMDIDSService account:displayNameChanged:]
  -[IMDIDSService accountController:accountEnabled:]


IMTypingIndicatorPipelineParameter : IMTextMessagePipelineParameter
 @property  BOOL isFinished
 @property  NSString *balloonPluginBundleID
 @property  NSData *typingIndicatorIconData

  // instance methods
  -[IMTypingIndicatorPipelineParameter isFinished]
  -[IMTypingIndicatorPipelineParameter .cxx_destruct]
  -[IMTypingIndicatorPipelineParameter setIsFinished:]
  -[IMTypingIndicatorPipelineParameter balloonPluginBundleID]
  -[IMTypingIndicatorPipelineParameter initWithBD:idsTrustedData:]
  -[IMTypingIndicatorPipelineParameter initWithBDBasic:idsTrustedData:]
  -[IMTypingIndicatorPipelineParameter setBalloonPluginBundleID:]
  -[IMTypingIndicatorPipelineParameter typingIndicatorIconData]
  -[IMTypingIndicatorPipelineParameter setTypingIndicatorIconData:]


IMDAppleServiceSession : IMDServiceSession
 @property  IDSAccount *idsAccount
 @property  NSArray *aliases
 @property  NSArray *vettedAliases
 @property  NSString *callerURI
 @property  NSArray *registeredURIs
 @property  NSString *GUID

  // class methods
  +[IMDAppleServiceSession idsAccounts]

  // instance methods
  -[IMDAppleServiceSession unregisterAccount:]
  -[IMDAppleServiceSession loginServiceSessionWithAccount:]
  -[IMDAppleServiceSession sessionDidBecomeActive]
  -[IMDAppleServiceSession _aliasStringsForIDSAccount:]
  -[IMDAppleServiceSession updateAuthorizationCredentials:token:account:]
  -[IMDAppleServiceSession activeDevicesUpdated]
  -[IMDAppleServiceSession callerURI]
  -[IMDAppleServiceSession validationStatusForAlias:onAccount:]
  -[IMDAppleServiceSession unvalidateAliases:account:]
  -[IMDAppleServiceSession reregister]
  -[IMDAppleServiceSession _isDeviceRegistered]
  -[IMDAppleServiceSession logoutServiceSessionWithAccount:]
  -[IMDAppleServiceSession authenticateAccount:]
  -[IMDAppleServiceSession vettedAliases]
  -[IMDAppleServiceSession _aliasesForIDSAccount:]
  -[IMDAppleServiceSession _updateAccountStatusToUnregistered:withAccount:]
  -[IMDAppleServiceSession removeAliases:account:]
  -[IMDAppleServiceSession registeredURIs]
  -[IMDAppleServiceSession resetCallerIDForIDSAccount:]
  -[IMDAppleServiceSession _validationStatusForAlias:onAccount:]
  -[IMDAppleServiceSession reIdentify]
  -[IMDAppleServiceSession refreshRegistration]
  -[IMDAppleServiceSession validationStatusForAlias:]
  -[IMDAppleServiceSession _aliases]
  -[IMDAppleServiceSession idsAccountForURI:IDSServiceName:]
  -[IMDAppleServiceSession validateAliases:account:]
  -[IMDAppleServiceSession idsAccountForFromURI:toURI:]
  -[IMDAppleServiceSession passwordUpdatedWithAccount:]
  -[IMDAppleServiceSession imdAccountForIDSAccount:]
  -[IMDAppleServiceSession registerAccount:]
  -[IMDAppleServiceSession addAliases:account:]
  -[IMDAppleServiceSession _isDeviceRegisteredForAccount:]
  -[IMDAppleServiceSession idsAccount]
  -[IMDAppleServiceSession initWithAccount:service:]
  -[IMDAppleServiceSession sessionWillBecomeInactiveWithAccount:]
  -[IMDAppleServiceSession callerURIForIDSAccount:]
  -[IMDAppleServiceSession validateProfileWithAccount:]
  -[IMDAppleServiceSession GUID]
  -[IMDAppleServiceSession aliases]
  -[IMDAppleServiceSession dealloc]


__IMDBackwardCompatibilityMessageIdentifier : NSObject
  // instance methods
  -[__IMDBackwardCompatibilityMessageIdentifier .cxx_destruct]
  -[__IMDBackwardCompatibilityMessageIdentifier init]
  -[__IMDBackwardCompatibilityMessageIdentifier isIgnorableBackwardCompatibilityMessage:inChat:]


IMDaemonCoreHelloWorldClass_Impl : NSObject
  // instance methods
  -[IMDaemonCoreHelloWorldClass_Impl .cxx_destruct]
  -[IMDaemonCoreHelloWorldClass_Impl init]
  -[IMDaemonCoreHelloWorldClass_Impl printGreeting]


IMDCallManager_Impl : NSObject
  // instance methods
  -[IMDCallManager_Impl dealloc]
  -[IMDCallManager_Impl .cxx_destruct]
  -[IMDCallManager_Impl initWithServiceSession:]
  -[IMDCallManager_Impl init]


IMDIncomingClientConnectionListener : SwiftNativeNSObject
  // instance methods
  -[IMDIncomingClientConnectionListener init]


__IMDPlainTextTapbackInterpreterImpl : NSObject
  // instance methods
  -[__IMDPlainTextTapbackInterpreterImpl .cxx_destruct]
  -[__IMDPlainTextTapbackInterpreterImpl init]
  -[__IMDPlainTextTapbackInterpreterImpl interpretMessageItem:inChat:]


_TtC12IMDaemonCore15DaemonWorkActor : Swift._SwiftObject

_IMDInternalWorkQueue : NSObject
  // class methods
  +[_IMDInternalWorkQueue enqueueWorkBlock:]

  // instance methods
  -[_IMDInternalWorkQueue init]


IMDClientConnectionManager : NSObject
  // instance methods
  -[IMDClientConnectionManager .cxx_destruct]
  -[IMDClientConnectionManager init]


IMDCollaborationNoticeStore : NSObject
  // instance methods
  -[IMDCollaborationNoticeStore .cxx_destruct]
  -[IMDCollaborationNoticeStore saveNotice:]
  -[IMDCollaborationNoticeStore deleteNoticesForURLs:]
  -[IMDCollaborationNoticeStore deleteNotice:]
  -[IMDCollaborationNoticeStore noticesForURLs:]
  -[IMDCollaborationNoticeStore init]
  -[IMDCollaborationNoticeStore deleteNoticeWithGUIDString:]


_TtC12IMDaemonCore16ClientConnection : Swift._SwiftObject

_TtC12IMDaemonCore28PersistedCollaborationNotice : NSManagedObject
 @property  NSDate *date
 @property  NSString *guidString
 @property  NSData *metadata
 @property  NSString *senderHandle
 @property  NSString *url
 @property  short version

  // instance methods
  -[_TtC12IMDaemonCore28PersistedCollaborationNotice initWithEntity:insertIntoManagedObjectContext:]


IDSService(IMReadReceiptsMetrics)
	// instance methods
	-[IDSService(IMReadReceiptsMetrics) _IMDTrackMetric:ForMessageGUID:]
	-[IDSService(IMReadReceiptsMetrics) _readReceiptTrackingEnabled]

IMItem(IMDTransferDictionaries)
	// class methods
	+[IMItem(IMDTransferDictionaries) _updateV1RecordType]
	+[IMItem(IMDTransferDictionaries) compressedProtobufDataWithPadding:]
	+[IMItem(IMDTransferDictionaries) compressedProtobufDataForUpdateT1:]
	+[IMItem(IMDTransferDictionaries) compressedProtobufDataForUpdateT2:]
	+[IMItem(IMDTransferDictionaries) protobufForCompressedData:]
	+[IMItem(IMDTransferDictionaries) protobufForCompressedDataP2:]
	+[IMItem(IMDTransferDictionaries) protobufForCompressedDataP3:]
	+[IMItem(IMDTransferDictionaries) protobufForUpdateT1:]
	+[IMItem(IMDTransferDictionaries) protobufForUpdateT2:]
	+[IMItem(IMDTransferDictionaries) populateIMMessageItemWithProtobufFields:withProtobufData:]
	+[IMItem(IMDTransferDictionaries) populateIMMessageItemWithProtobufFields:withProtobufDataP2:]
	+[IMItem(IMDTransferDictionaries) populateIMMessageItemWithProtobufFields:withProtobufDataP3:]
	+[IMItem(IMDTransferDictionaries) groupTitleChangeProtobufForCompressedData:]
	+[IMItem(IMDTransferDictionaries) populateIMGroupTitleChangeItem:withProtobufData:]
	+[IMItem(IMDTransferDictionaries) participantChangeProtobufForCompressedData:]
	+[IMItem(IMDTransferDictionaries) populateIMParticipantChangeItem:withProtobufData:]
	+[IMItem(IMDTransferDictionaries) locationShareStatusChangeProtobufForCompressedData:]
	+[IMItem(IMDTransferDictionaries) populateIMLocationShareStatusChangeItem:withProtobufData:]
	+[IMItem(IMDTransferDictionaries) groupActionProtobufForCompressedData:]
	+[IMItem(IMDTransferDictionaries) populateIMGroupActionItem:withProtobufData:]
	+[IMItem(IMDTransferDictionaries) messageActionChangeProtobufForCompressedData:]
	+[IMItem(IMDTransferDictionaries) populateIMMessageActionItem:withProtobufData:]
	+[IMItem(IMDTransferDictionaries) createCKRecordForUpdateT1:zoneID:salt:]
	+[IMItem(IMDTransferDictionaries) createCKRecordForUpdateT2:zoneID:salt:]
	+[IMItem(IMDTransferDictionaries) createUpdateT1Info:]
	+[IMItem(IMDTransferDictionaries) createItemWithCKRecord:]
	+[IMItem(IMDTransferDictionaries) resetSyncStateForMessage:toState:]

	// instance methods
	-[IMItem(IMDTransferDictionaries) _recordType]
	-[IMItem(IMDTransferDictionaries) isCompatibleWithMiC]
	-[IMItem(IMDTransferDictionaries) copyFileTransferDictionaryRepresentationsFromCenter:]
	-[IMItem(IMDTransferDictionaries) _accountControllerSharedInstance]
	-[IMItem(IMDTransferDictionaries) compressedProtobufDataForMessage]
	-[IMItem(IMDTransferDictionaries) compressedProtobufDataForMessageP2]
	-[IMItem(IMDTransferDictionaries) compressedProtobufDataForMessageP3]
	-[IMItem(IMDTransferDictionaries) _populateCKRecordWithIMItemFields:]
	-[IMItem(IMDTransferDictionaries) _populateCKRecordWithIMMessageItemFields:]
	-[IMItem(IMDTransferDictionaries) compressedProtobufDataForGroupTitleChangeItem]
	-[IMItem(IMDTransferDictionaries) _populateCKRecordWithIMGroupTitleChangeItemFields:]
	-[IMItem(IMDTransferDictionaries) compressedProtobufDataForParticipantChangeItem]
	-[IMItem(IMDTransferDictionaries) _populateCKRecordWithIMParticipantChangeItemFields:]
	-[IMItem(IMDTransferDictionaries) compressedProtobufDataForLocationShareStatusChangeItem]
	-[IMItem(IMDTransferDictionaries) _populateCKRecordWithIMLocationShareStatusChangeItemFields:]
	-[IMItem(IMDTransferDictionaries) compressedProtobufDataForGroupActionItem]
	-[IMItem(IMDTransferDictionaries) _populateCKRecordWithIMGroupActionItemFields:]
	-[IMItem(IMDTransferDictionaries) compressedProtobufDataForMessageActionItem]
	-[IMItem(IMDTransferDictionaries) _populateCKRecordWithIMMessageActionItemFields:]
	-[IMItem(IMDTransferDictionaries) callerIDShouldBeCheckedForRegistration:]
	-[IMItem(IMDTransferDictionaries) _recordFromServerChangeToken]
	-[IMItem(IMDTransferDictionaries) copyCKRecordRepresentationWithZoneID:salt:]
	-[IMItem(IMDTransferDictionaries) _shouldDownloadIfPhoneNumberAndNoSIM:]
	-[IMItem(IMDTransferDictionaries) shouldStoreMessage]

IDSAccount(IMDCallerIDUtilities)
	// instance methods
	-[IDSAccount(IMDCallerIDUtilities) im_registeredURIs]

NSUserDefaults(DeferredSavingAdditions)
	// instance methods
	-[NSUserDefaults(DeferredSavingAdditions) delayedSynchronize]

(IMLegacyAdditions)
	// instance methods
	-[(IMLegacyAdditions) stringValue]

CKRecord(CKRecord_IMDaemonCore)
	// instance methods
	-[CKRecord(CKRecord_IMDaemonCore) _dateForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _stringForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _valueForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setValue:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _numberForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _arrayForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _dataForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) copyEncodedSystemFields]
	-[CKRecord(CKRecord_IMDaemonCore) _setCKRecordString:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setCKRecordNumber:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setUnencryptedCKRecordNumber:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setCKRecordData:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setCKRecordArray:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setCKRecordAsset:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setCKRecordDate:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _assetForKey:]

IMMultiQueue(MessageProcessing)
	// class methods
	+[IMMultiQueue(MessageProcessing) im_enqueuiMessageBlock:withTimeout:description:]
	+[IMMultiQueue(MessageProcessing) im_enqueuSMSBlock:withTimeout:description:]

IMTimingCollection(IMDaemonCoreMessageReceivedTimingAdditions)
	// class methods
	+[IMTimingCollection(IMDaemonCoreMessageReceivedTimingAdditions) IMDaemonCoreMessageReceivedTimingCollection]

IMCoreAutomationNotifications(IMDaemonCoreIncomingMessageTracking)
	// instance methods
	-[IMCoreAutomationNotifications(IMDaemonCoreIncomingMessageTracking) postCoreAutomationNotificationIncomingMessageProcessedWithDuration:]

IMFileTransfer(IMFileTransfer_CKRecord)
	// class methods
	+[IMFileTransfer(IMFileTransfer_CKRecord) _recordType]
	+[IMFileTransfer(IMFileTransfer_CKRecord) transferMetaDataFromRecord:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) cleanUpAsset:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) _recordIsInvalid:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) utiTypeForRecord:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) sizeOfAssetForRecord:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) transferGUIDOfRecord:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) attachmentRecordHasAsset:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) cleanUpAssetsOnDiskForRecord:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) md5HashForRecord:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) validateMD5HashForRecord:]

	// instance methods
	-[IMFileTransfer(IMFileTransfer_CKRecord) _fileManager]
	-[IMFileTransfer(IMFileTransfer_CKRecord) copyCKRecordRepresentationWithZoneID:salt:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) _ckUniqueID]
	-[IMFileTransfer(IMFileTransfer_CKRecord) _assetURLToInsertToRecord]
	-[IMFileTransfer(IMFileTransfer_CKRecord) _copyCKRecordFromExistingCKMetadata]
	-[IMFileTransfer(IMFileTransfer_CKRecord) ckRecordIDFromExistingMetadata]
	-[IMFileTransfer(IMFileTransfer_CKRecord) md5HashForURL:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) md5HashForTransfer]
	-[IMFileTransfer(IMFileTransfer_CKRecord) _setRecordPropertiesBasedOnExistingRecord:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) recordIDWithZoneID:salt:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) wantsAssetFromRecord:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) hasPreferredAssetOverRecord:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) moveAssetFromRecord:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) initWithCKRecord:writeAssetToDisk:]

IMTransferServicesController(IMTransferServicesController_PreviewGeneration)
	// instance methods
	-[IMTransferServicesController(IMTransferServicesController_PreviewGeneration) transferServicesController]
	-[IMTransferServicesController(IMTransferServicesController_PreviewGeneration) generatePreviewForTransfer:attachmentPath:balloonBundleID:isFromMe:completionBlock:]
	-[IMTransferServicesController(IMTransferServicesController_PreviewGeneration) _markSensitiveDefault]
	-[IMTransferServicesController(IMTransferServicesController_PreviewGeneration) receiveFileTransfer:transferGUID:topic:path:requestURLString:ownerID:signature:decryptionKey:fileSize:generatePreview:balloonBundleID:isFromMe:progressBlock:completionBlock:]
	-[IMTransferServicesController(IMTransferServicesController_PreviewGeneration) failTransfersOnPreviewGenerationFailure]

CKOperationConfiguration(Messages)
	// instance methods
	-[CKOperationConfiguration(Messages) im_setActivity:]

IMDCallManager_Impl(IMDaemonCore)
	// instance methods
	-[IMDCallManager_Impl(IMDaemonCore) conversationManager:addedActiveConversation:]
	-[IMDCallManager_Impl(IMDaemonCore) conversationManager:conversationUpdatedMessagesGroupUUID:]

IMDIncomingClientConnectionListener(IMDaemonCore)
	// instance methods
	-[IMDIncomingClientConnectionListener(IMDaemonCore) listener:shouldAcceptNewConnection:]

IMDClientConnectionManager(IMDaemonCore)
	// instance methods
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForChatListeners]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForAVConferenceListeners]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForACConferenceListeners]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForAllListeners]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForAccountListeners]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForListenersSupportingService:]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForChatListenersSupportingService:]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForSentMessageListenersSupportingService:]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForBlackholeChatListeners]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForBlackholeChatListenersSupportingService:]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForChatListenersUsingBlackholeRegistry:]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForChatDatabaseListeners]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForChatCountsListeners]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForFileProviderListeners]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForNotificationListenersSupportingService:]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForAVConferenceListenersSupportingService:]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForACConferenceListenersSupportingService:]
	-[IMDClientConnectionManager(IMDaemonCore) broadcasterForVCConferenceListenersSupportingService:]

IMCollaborationNotice(IMDaemonCore)
	// instance methods
	-[IMCollaborationNotice(IMDaemonCore) description]

01 00 0f00 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 0500 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMReadMessageEvent 
01 00 0500 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMStreams 
01 00 0100 /System/Library/PrivateFrameworks/BlastDoor.framework/BlastDoor: BlastDoorBaseWritingDirectionAttribute 
01 00 0100 /System/Library/PrivateFrameworks/BlastDoor.framework/BlastDoor: BlastDoorBreadcrumbTextMarkerAttribute 
01 00 0100 /System/Library/PrivateFrameworks/BlastDoor.framework/BlastDoor: BlastDoorBreadcrumbTextOptionFlagsAttribute 
01 00 0100 /System/Library/PrivateFrameworks/BlastDoor.framework/BlastDoor: BlastDoorFileTransferAttribute 
01 00 0100 /System/Library/PrivateFrameworks/BlastDoor.framework/BlastDoor: BlastDoorMentionAttribute 
01 00 0100 /System/Library/PrivateFrameworks/BlastDoor.framework/BlastDoor: BlastDoorMessagePartAttribute 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAsset 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerID 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerOptions 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDatabase 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchArchivedRecordsOperation 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchArchivedRecordsOptions 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesConfiguration 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesOperation 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZonesOperation 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordsOperation 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchUserQuotaOperation 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordZonesOperation 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotification 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationConfiguration 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationGroup 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQuery 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQueryOperation 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneSubscription 
01 00 1300 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKServerChangeToken 
01 00 0600 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 1d00 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTWeakReference 
01 00 0400 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENManager 
01 00 1700 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTDeviceSupport 
01 00 1700 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTPasswordManager 
01 00 1a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSAccount 
01 00 1a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSAccountController 
01 00 1a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSIDQueryController 
01 00 1b00 /System/Library/PrivateFrameworks/IDSKVStore.framework/IDSKVStore: IDSKVStore 
01 00 1800 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSProtobuf 
01 00 1800 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSServerBag 
01 00 1a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 1a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSTransactionLogMessage 
01 00 1a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSTransactionLogSyncTask 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMAKAppleIDAuthenticationController 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMAssociatedMessageItem 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMAvailabilityInvitationManager 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMBaseCommandHandlerRegistry 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMBroadcastingKeyValueCollection 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCKPadding 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCTSMSUtilities 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCTSubscriptionUtilities 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMCallMonitor 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMChatIdentifierUtilities 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMChatSyndicationAction 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCollaborationNotice 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCollaborationNoticeMetadata 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCollaborationNoticeTransmission 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCommSafetyRequestsManager 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCommSafetySettingsManager 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMConnectionMonitor 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMContactStore 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCoreAutomationNotifications 
01 00 2100 /System/Library/PrivateFrameworks/IMDPersistence.framework/IMDPersistence: IMDChatRecordBatchFetcher 
01 00 2100 /System/Library/PrivateFrameworks/IMDPersistence.framework/IMDPersistence: IMDDatabase 
01 00 2100 /System/Library/PrivateFrameworks/IMDPersistence.framework/IMDPersistence: IMDMessageRecord 
01 00 2100 /System/Library/PrivateFrameworks/IMDPersistence.framework/IMDPersistence: IMDMessageRecordBatchFetcher 
01 00 1c00 /System/Library/PrivateFrameworks/IMDMessageServices.framework/IMDMessageServices: IMDMessageServicesCenter 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMDPLogsCollector 
01 00 2100 /System/Library/PrivateFrameworks/IMDPersistence.framework/IMDPersistence: IMDPersistentAttachmentController 
01 00 1f00 /System/Library/PrivateFrameworks/MessagesCloudSync.framework/MessagesCloudSync: IMDSyncTelemetryReporter 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMDefaults 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMDeviceConditions 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMDeviceUtilities 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMDistributingProxy 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMFeatureFlags 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMFileCopier 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMFileManager 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMFileTransfer 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMFocusStateManager 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMGroupActionItem 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMGroupBlocklistManager 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMGroupTitleChangeItem 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMINInteractionUtilities 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMInternalPayloadUtilities 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMInvocationCapturingProxy 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMItem 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMKeyValueCollectionUserDefaultsStorage 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMLocationShareStatusChangeItem 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMLockdownManager 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMLogDump 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMessageActionItem 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMessageDescriptor 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMessageItem 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMessageNotificationTimeManager 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMessagePartHistoricalContent 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMessagePartSyndicationRange 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMessageSyndicationAction 
01 00 0200 /System/Library/PrivateFrameworks/MessagesBlastDoorSupport.framework/MessagesBlastDoorSupport: IMMessagesBlastDoorInterface 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMetricsCollector 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMomentShareUtilities 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMMultiQueue 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMNickname 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMNicknameAvatar 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMNicknameAvatarImage 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMOneTimeCodeUtilities 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMParticipantChangeItem 
01 00 0800 /System/Library/PrivateFrameworks/IMCorePipeline.framework/IMCorePipeline: IMPipelineComponent 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMPowerAssertion 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMPowerLog 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMPowerWifiUsageCollector 
01 00 0800 /System/Library/PrivateFrameworks/IMCorePipeline.framework/IMCorePipeline: IMPromise 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMRGLog 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSMSFilterHelper 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedGroupAction 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedGroupTitleChange 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedLocationShareStatusChange 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedMessage 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedMessageAction 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedMessageP2 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedMessageP3 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedMessageUpdateT1 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedMessageUpdateT2 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedParticipantChange 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedWithYouManager 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSpamFilterHelper 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMStateCaptureAssistant 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSyncErrorAnalyzer 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSyndicationUtilities 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMSystemMonitor 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMSystemProxySettingsFetcher 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMTUConversationItem 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMTimer 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMTimingCollection 
01 00 1900 /System/Library/PrivateFrameworks/IMTranscoding.framework/IMTranscoding: IMTranscodeController 
01 00 0700 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMTranscoderTelemetry 
01 00 0e00 /System/Library/PrivateFrameworks/IMTransferServices.framework/IMTransferServices: IMTransferServicesController 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMUserDefaults 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMUserNotification 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMUserNotificationCenter 
01 00 1200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSAppLink 
01 00 1200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 1200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1400 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2400 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 2400 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 2400 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2400 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentContainer 
01 00 2400 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreDescription 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0900 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: NetworkChangeNotifier 
01 00 2300 /usr/lib/libSystem.B.dylib: OS_dispatch_queue 
01 00 2000 /System/Library/Frameworks/Photos.framework/Photos: PHAsset 
01 00 2000 /System/Library/Frameworks/Photos.framework/Photos: PHAssetChangeRequest 
01 00 2000 /System/Library/Frameworks/Photos.framework/Photos: PHAssetExportRequest 
01 00 2000 /System/Library/Frameworks/Photos.framework/Photos: PHAssetExportRequestOptions 
01 00 2000 /System/Library/Frameworks/Photos.framework/Photos: PHFetchOptions 
01 00 2000 /System/Library/Frameworks/Photos.framework/Photos: PHMomentShare 
01 00 2000 /System/Library/Frameworks/Photos.framework/Photos: PHPhotoLibrary 
01 00 2000 /System/Library/Frameworks/Photos.framework/Photos: PHResourceLocalAvailabilityRequest 
01 00 2000 /System/Library/Frameworks/Photos.framework/Photos: PHResourceLocalAvailabilityRequestOptions 
01 00 0300 /System/Library/PrivateFrameworks/ScreenTimeCore.framework/ScreenTimeCore: STAskClient 
01 00 2900 /usr/lib/swift/libswiftCore.dylib: SwiftNativeNSObject 
01 00 0c00 /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary: TLToneManager 
01 00 0d00 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCallCenter 
01 00 0d00 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUConversation 
01 00 0d00 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUConversationActivitySession 
01 00 0d00 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUConversationManager 
01 00 0d00 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUConversationMember 
01 00 0d00 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUHandle 
01 00 0a00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 2900 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
