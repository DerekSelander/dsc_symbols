|| __DATA.__data _IMDCKAttachmentSyncErrorDomain
|| __DATA.__data _IMDCKBackupControllerDefaultSyncPercentage
|| __DATA.__data _IMDCKBackupControllerDefaultTimebombIntervalInDays
|| __DATA.__data _IMDCKCacheDeleteAutoCaptureSubtype
|| __DATA.__data _IMDCKChatSyncControllerErrorDomain
|| __DATA.__data _IMDCKMessageSyncControllerErrorDomain
|| __DATA.__data _IMDMeCardUpdatedNotification
|| __DATA.__data _IMDMessageHistorySyncNotifyCKChatSyncControllerWantsSync
|| __DATA.__data _IMDMessageHistorySyncNotifyIDSTransactionLogWantsSync
|| __DATA.__data _IMDMessageHistorySyncNotifyReplayControllerWantsSync
|| __DATA.__data _MessageDictionaryMeCardSharingAudienceKey
|| __DATA.__data _MessageDictionaryMeCardSharingEnabledKey
|| __DATA.__data _MessageDictionaryMeCardSharingImageForkedKey
|| __DATA.__data _MessageDictionaryMeCardSharingNameForkedKey
|| __DATA.__data _MessageDictionaryMeCardSharingVersionKey
|| __DATA.__data _MessageDictionaryNicknameBlacklistKey
|| __DATA.__data _MessageDictionaryNicknameBlacklistWhitelistVersionKey
|| __DATA.__data _MessageDictionaryNicknameParticipantTruncatedRIDKey
|| __DATA.__data _MessageDictionaryNicknameRequestPersonalNicknameInfoKey
|| __DATA.__data _MessageDictionaryNicknameVersionKey
|| __DATA.__data _MessageDictionaryNicknameWhitelistKey
|| __DATA.__data _MessageDictionaryPendingNicknameUpdatesHandlesKey
|| __DATA.__data _MessageDictionaryPendingNicknameUpdatesVersionKey
|| __DATA.__data _MessageDictionaryPersonalNicknameDecryptKeyKey
|| __DATA.__data _MessageDictionaryPersonalNicknameRecordIDKey
|| __DATA.__objc_data _OBJC_CLASS_$_CKRecordUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_IMDCKSyncStatsCollector
|| __DATA.__objc_data _OBJC_CLASS_$_IMDMessagePTask
|| __DATA.__objc_data _OBJC_CLASS_$_IMDMessageSortOrderAssigner
|| __DATA.__objc_data _OBJC_CLASS_$_IMDReplayStorageIterationContext
|| __DATA.__objc_data _OBJC_CLASS_$_IMDSpamController
|| __DATA.__objc_data _OBJC_CLASS_$_IMDSpamMessageCreator
|| __DATA.__objc_data _OBJC_CLASS_$_IMDSpotlightIndexDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_CKRecordUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDCKSyncStatsCollector
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDMessagePTask
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDMessageSortOrderAssigner
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDReplayStorageIterationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDSpamController
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDSpamMessageCreator
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDSpotlightIndexDelegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDChatStore._lastModificationStamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDLocationSharingController._session
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageStore._cachedLastFailedMessageDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageStore._cachedUnreadMessageCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageStore._modificationStamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageStore._pendingDBUpdatePost
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageStore._suppressedUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDMessageStore._suppressedUpdatesTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._buddies
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._password
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._proxyAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._proxyHost
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._proxyPassword
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._proxyPort
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._proxyType
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._serverHost
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._serverPort
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._service
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMDServiceSession._useSSL
|| __DATA_CONST.__const _CKRecordFileTransferAssetKey
|| __DATA_CONST.__const _CKRecordFileTransferAttachmentCompressedMetadataKey
|| __DATA_CONST.__const _CKRecordFileTransferAttachmentGuidKey
|| __DATA_CONST.__const _CKRecordFileTransferAttachmentMetadataKey
|| __DATA_CONST.__const _CKRecordFileTransferAttributionInfoKey
|| __DATA_CONST.__const _CKRecordFileTransferAuxVideoAssetKey
|| __DATA_CONST.__const _CKRecordFileTransferAuxVideoLastPathComponentKey
|| __DATA_CONST.__const _CKRecordFileTransferCreatedDateKey
|| __DATA_CONST.__const _CKRecordFileTransferFileNameKey
|| __DATA_CONST.__const _CKRecordFileTransferHideAttachmentKey
|| __DATA_CONST.__const _CKRecordFileTransferIncomingKey
|| __DATA_CONST.__const _CKRecordFileTransferIsStickerKey
|| __DATA_CONST.__const _CKRecordFileTransferLastPathComponentKey
|| __DATA_CONST.__const _CKRecordFileTransferStartDateKey
|| __DATA_CONST.__const _CKRecordFileTransferStateKey
|| __DATA_CONST.__const _CKRecordFileTransferStickerUserInfoKey
|| __DATA_CONST.__const _CKRecordFileTransferTotalBytesKey
|| __DATA_CONST.__const _CKRecordFileTransferTransferNameKey
|| __DATA_CONST.__const _CKRecordFileTransferTypeKey
|| __DATA_CONST.__const _CKRecordFileTransferUserInfoKey
|| __DATA_CONST.__const _CKRecordFileTransferVersionKey
|| __DATA_CONST.__const _CKRecordIMItemBalloonBundleID
|| __DATA_CONST.__const _CKRecordIMItemBody
|| __DATA_CONST.__const _CKRecordIMItemCompressedProtobuf
|| __DATA_CONST.__const _CKRecordIMItemErrorCode
|| __DATA_CONST.__const _CKRecordIMItemExpressiveSendStyleID
|| __DATA_CONST.__const _CKRecordIMItemFlags
|| __DATA_CONST.__const _CKRecordIMItemGUID
|| __DATA_CONST.__const _CKRecordIMItemParentChatID
|| __DATA_CONST.__const _CKRecordIMItemPayloadData
|| __DATA_CONST.__const _CKRecordIMItemService
|| __DATA_CONST.__const _CKRecordIMItemSubClassType
|| __DATA_CONST.__const _CKRecordIMItemSubject
|| __DATA_CONST.__const _CKRecordIMItemSummaryInfo
|| __DATA_CONST.__const _CKRecordIMItemTime
|| __DATA_CONST.__const _CKRecordIMItemTimeDelivered
|| __DATA_CONST.__const _CKRecordIMItemTimePlayed
|| __DATA_CONST.__const _CKRecordIMItemTimeRead
|| __DATA_CONST.__const _CKRecordIMItemUnencryptedTime
|| __DATA_CONST.__const _CKRecordKeyChatClientGroupID
|| __DATA_CONST.__const _CKRecordKeyChatDisplayName
|| __DATA_CONST.__const _CKRecordKeyChatGuid
|| __DATA_CONST.__const _CKRecordKeyChatIdentifier
|| __DATA_CONST.__const _CKRecordKeyChatIsFiltered
|| __DATA_CONST.__const _CKRecordKeyChatLastAddressedHandle
|| __DATA_CONST.__const _CKRecordKeyChatOriginalGroupID
|| __DATA_CONST.__const _CKRecordKeyChatParticipants
|| __DATA_CONST.__const _CKRecordKeyChatProperties
|| __DATA_CONST.__const _CKRecordKeyChatReadWaterMark
|| __DATA_CONST.__const _CKRecordKeyChatService
|| __DATA_CONST.__const _CKRecordKeyChatState
|| __DATA_CONST.__const _CKRecordKeyChatStyle
|| __DATA_CONST.__const _CKRecordKeyChatSuccessFullQuery
|| __DATA_CONST.__const _IMAttachmentSyncFailed
|| __DATA_CONST.__const _IMAttachmentSyncStarted
|| __DATA_CONST.__const _IMAttachmentSyncStoppedDueToDeviceConditions
|| __DATA_CONST.__const _IMBackUpCompletedRecently
|| __DATA_CONST.__const _IMBackUpNotCompletedRecently
|| __DATA_CONST.__const _IMBackupDisabledKeyroll
|| __DATA_CONST.__const _IMBackupDisabledKeyrollNotification
|| __DATA_CONST.__const _IMBackupDisabledKeyrollTestNotification
|| __DATA_CONST.__const _IMBackupDisabledSuccessfullKeyroll
|| __DATA_CONST.__const _IMBackupDisabledSuccessfullKeyrollNotification
|| __DATA_CONST.__const _IMBackupDisabledTestToggledKeyroll
|| __DATA_CONST.__const _IMBackupDisabledUserToggledKeyroll
|| __DATA_CONST.__const _IMCrashDuringFirstSync
|| __DATA_CONST.__const _IMDCKBackupControllerBackupDeviceStateKey
|| __DATA_CONST.__const _IMDCKBackupControllerBackupRecordCountKey
|| __DATA_CONST.__const _IMDCKBackupControllerErrorDomain
|| __DATA_CONST.__const _IMDCKBackupControllerServerBagTimeIntervalKey
|| __DATA_CONST.__const _IMDCKBackupControllerTimebombStartUserDefaultsKey
|| __DATA_CONST.__const _IMDCKBackupControllerUserDefaultsDomain
|| __DATA_CONST.__const _IMDCKBackupControllerWrittenQuotaRecordKey
|| __DATA_CONST.__const _IMDCKUtilitiesABCSubtype
|| __DATA_CONST.__const _IMDCKUtilitiesErrorDomain
|| __DATA_CONST.__const _IMDFileTransferAcceptedNotification
|| __DATA_CONST.__const _IMDFileTransferArchiveFailedNotification
|| __DATA_CONST.__const _IMDFileTransferArchiveSucceededNotification
|| __DATA_CONST.__const _IMDFileTransferCreatedNotification
|| __DATA_CONST.__const _IMDFileTransferHighQualityDownloadCompletedFileURLKey
|| __DATA_CONST.__const _IMDFileTransferHighQualityDownloadCompletedNotification
|| __DATA_CONST.__const _IMDFileTransferHighQualityDownloadCompletedSuccessKey
|| __DATA_CONST.__const _IMDFileTransferHighQualityDownloadInitiatedNotification
|| __DATA_CONST.__const _IMDFileTransferRemovedNotification
|| __DATA_CONST.__const _IMDFileTransferStoppedNotification
|| __DATA_CONST.__const _IMDManagedPreferencesChangedNotification
|| __DATA_CONST.__const _IMDMessageStoreHandleCanonicalIDKey
|| __DATA_CONST.__const _IMDMessageStoreHandleCountryCodeKey
|| __DATA_CONST.__const _IMDMessageStoreHandleUnformattedIDKey
|| __DATA_CONST.__const _IMDReplayControllerErrorDomain
|| __DATA_CONST.__const _IMDReplayMessageStorageControllerErrorDomain
|| __DATA_CONST.__const _IMDaemonWillShutdownNotification
|| __DATA_CONST.__const _IMFirstAttachmentSyncFailed
|| __DATA_CONST.__const _IMFirstAttachmentSyncInitiated
|| __DATA_CONST.__const _IMFirstChatSyncFailed
|| __DATA_CONST.__const _IMFirstMessageSyncFailed
|| __DATA_CONST.__const _IMFirstMessageSyncInitiated
|| __DATA_CONST.__const _IMFirstSyncCompleted
|| __DATA_CONST.__const _IMFirstSyncFailed
|| __DATA_CONST.__const _IMFirstSyncInitiated
|| __DATA_CONST.__const _IMFullChatSyncFailed
|| __DATA_CONST.__const _IMFullChatSyncStarted
|| __DATA_CONST.__const _IMFullSyncCompleted
|| __DATA_CONST.__const _IMFullSyncCompletedWithOver20HoursOfPowerAndWifi
|| __DATA_CONST.__const _IMFullSyncFailed
|| __DATA_CONST.__const _IMFullSyncInitiated
|| __DATA_CONST.__const _IMFullSyncInitiatedWithOver20HoursOfPowerAndWifi
|| __DATA_CONST.__const _IMInitialAttachmentSyncFailed
|| __DATA_CONST.__const _IMInitialAttachmentSyncInitiated
|| __DATA_CONST.__const _IMInitialChatSyncFailed
|| __DATA_CONST.__const _IMInitialChatSyncInitiated
|| __DATA_CONST.__const _IMInitialMessageSyncFailed
|| __DATA_CONST.__const _IMInitialMessageSyncInitiated
|| __DATA_CONST.__const _IMInitialSyncCompleted
|| __DATA_CONST.__const _IMInitialSyncInitiated
|| __DATA_CONST.__const _IMLastCKSyncWasNotWithin3Days
|| __DATA_CONST.__const _IMLastCKSyncWasNotWithin7Days
|| __DATA_CONST.__const _IMLastCKSyncWasWithin3Days
|| __DATA_CONST.__const _IMLastCKSyncWasWithin7Days
|| __DATA_CONST.__const _IMLastCompleteDBCKSyncWasNotWithin3Days
|| __DATA_CONST.__const _IMLastCompleteDBCKSyncWasNotWithin7Days
|| __DATA_CONST.__const _IMLastCompleteDBCKSyncWasWithin3Days
|| __DATA_CONST.__const _IMLastCompleteDBCKSyncWasWithin7Days
|| __DATA_CONST.__const _IMManateeIdentityFetchAttemptFullSync
|| __DATA_CONST.__const _IMManateeIdentityFetchAttemptFullSyncFailed
|| __DATA_CONST.__const _IMManateeIdentityFetchAttemptRestoreSync
|| __DATA_CONST.__const _IMManateeIdentityFetchAttemptRestoreSyncFailed
|| __DATA_CONST.__const _IMManateeNotAvailable
|| __DATA_CONST.__const _IMMaxRecoverableAttemptReached
|| __DATA_CONST.__const _IMMessageSyncFailed
|| __DATA_CONST.__const _IMMessageSyncStarted
|| __DATA_CONST.__const _IMMessageSyncStoppedDueToDeviceConditions
|| __DATA_CONST.__const _IMNotStartingCoreDuetSync
|| __DATA_CONST.__const _IMNotSyncDueToIMAuto
|| __DATA_CONST.__const _IMPCSIdentityWasLost
|| __DATA_CONST.__const _IMPendingKeyroll
|| __DATA_CONST.__const _IMPendingKeyrollNotification
|| __DATA_CONST.__const _IMPeriodicChatSyncCompleted
|| __DATA_CONST.__const _IMPeriodicChatSyncFailed
|| __DATA_CONST.__const _IMPeriodicChatSyncStarted
|| __DATA_CONST.__const _IMPostingMissingMessageData
|| __DATA_CONST.__const _IMRecievedMissingMessageNotification
|| __DATA_CONST.__const _IMRestoredAllContentFromCloudKit
|| __DATA_CONST.__const _IMSyncCompletedInLast30Hours
|| __DATA_CONST.__const _IMSyncCompletedRecentlyCloudKitMetric
|| __DATA_CONST.__const _IMSyncDidNotCompleteRecentlyCloudKitMetric
|| __DATA_CONST.__const _IMSyncFullSyncDueToIMAutomaticHistoryDeletionAgent
|| __DATA_CONST.__const _IMSyncInProgressCloudKitMetric
|| __DATA_CONST.__const _IMSyncNoDueToCrash
|| __DATA_CONST.__const _IMSyncNoDueToFirstUnlock
|| __DATA_CONST.__const _IMSyncNoDueToPower
|| __DATA_CONST.__const _IMSyncNoDueToRecent
|| __DATA_CONST.__const _IMSyncNoDueToSyncing
|| __DATA_CONST.__const _IMSyncNoDueToWifi
|| __DATA_CONST.__const _kIMDCKAnalyticBagKey
|| __DATA_CONST.__const _kIMDCKAnalyticDetailsBagKey
|| __DATA_CONST.__const _kIMDCKMetricBagKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDAccountController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDAppleServiceSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDAttachmentStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDBadgeUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKAbstractSyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKAttachmentSyncCKOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKAttachmentSyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKBackupController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKCacheDeleteManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKChatSyncCKOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKChatSyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKDatabaseManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKExitManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKMessageSyncCKOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKMessageSyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKRampManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKRecordSaltManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKSyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKSyncState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDCKUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDChat
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDChatRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDChatStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDChatVocabularyUpdater
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDFileTransferCenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDIDSAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDIDSService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDInternalPhishingController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDInvocationForwarder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDLegactDTController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDLocationSharingController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageHistoryCKChatSyncTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageHistoryFirstUnlockReplaySyncTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageHistoryIDSTransactionLogSyncTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageHistorySyncController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageHistorySyncTaskLiveFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessagePTaskXPCStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageProcessingController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDMessageStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDNicknameController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDOneTimeCodeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDQuickSwitchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDRecordZoneManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDReplayController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDReplayStorageController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDScreenTimeEnablementController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDServiceController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDServiceSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDSoundUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDStickerRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMDXPCEventStreamHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMTunesController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDAccountController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDAppleServiceSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDAttachmentStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDBadgeUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKAbstractSyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKAttachmentSyncCKOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKAttachmentSyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKBackupController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKCacheDeleteManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKChatSyncCKOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKChatSyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKDatabaseManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKExitManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKMessageSyncCKOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKMessageSyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKRampManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKRecordSaltManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKSyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKSyncState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDCKUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDChat
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDChatRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDChatStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDChatVocabularyUpdater
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDFileTransferCenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDIDSAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDIDSService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDInternalPhishingController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDInvocationForwarder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDLegactDTController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDLocationSharingController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageHistoryCKChatSyncTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageHistoryFirstUnlockReplaySyncTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageHistoryIDSTransactionLogSyncTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageHistorySyncController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageHistorySyncTaskLiveFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessagePTaskXPCStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageProcessingController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDMessageStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDNicknameController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDOneTimeCodeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDQuickSwitchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDRecordZoneManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDReplayController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDReplayStorageController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDScreenTimeEnablementController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDServiceController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDServiceSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDSoundUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDStickerRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMDXPCEventStreamHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMTunesController
|| __TEXT.__const _kIMDCKClientVersion
|| __TEXT.__const _kMaxCloudKitRetries
|| __TEXT.__text _IMCreateIMDChatFromIMDChatRecordRef
|| __TEXT.__text _IMCreateIMDChatRecordRefWithIMDChat
|| __TEXT.__text _IMDAttachmentRecordRefFromIMFileTransfer
|| __TEXT.__text _IMDCreateIMMessageItemFromIMDMessageRecordLoadAttachmentIfNeededRef
|| __TEXT.__text _IMDCreateIMMessageItemFromIMDMessageRecordRef
|| __TEXT.__text _IMDInconsistencyResolved
|| __TEXT.__text _IMDNoticedInconsistenty
|| __TEXT.__text _IMDSetInconsistencyHandler
|| __TEXT.__text _IMDUpdateIMFileTransferFromIMFileTransfer
|| __TEXT.__text _IMDaemonCoreBundle
|| __TEXT.__text _IMFileTransferFromIMDAttachmentRecordRef
|| __TEXT.__text _IMItemFuzzDateForUnencryptedTime
|| __TEXT.__text _NSStringFromAKAppleIDSecurityLevel
|| __TEXT.__text _NSStringFromIMDCKAccountStatus
|| __TEXT.__text _NSStringFromIMDCKBackupControllerResult
|| __TEXT.__text __IMCreatePredicateWithDeviceUDIDAndDeviceUUID
|| __TEXT.__text __IMDHashParticipants
|| __TEXT.__text __IMDShouldSaveAttachment
__ Accounts: _kAccountDataclassBackup
__ Accounts: _kAccountDataclassMessages
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ AudioToolbox: _AudioServicesCreateSystemSoundID
__ AudioToolbox: _AudioServicesDisposeSystemSoundID
__ AudioToolbox: _AudioServicesPlaySystemSound
__ AudioToolbox: _AudioServicesSetProperty
__ CacheDelete: _CacheDeleteEnumerateRemovedFiles
__ CacheDelete: _CacheDeleteInitPurgeMarker
__ CacheDelete: _CacheDeleteRegisterInfoCallbacks
__ CacheDelete: _CacheDeleteRegisterPurgeNotification
__ CacheDelete: _CacheDeleteRequestCacheableSpaceGuidance
__ CacheDelete: _CacheDeleteSyncDone
__ CloudKit: _CKAccountChangedNotification
__ CloudKit: _CKCanRetryForError
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKErrorRetryAfterKey
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _CKRecordChangedErrorServerRecordKey
__ CloudKit: _OBJC_CLASS_$_CKAsset
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKContainerID
__ CloudKit: _OBJC_CLASS_$_CKContainerOptions
__ CloudKit: _OBJC_CLASS_$_CKDatabase
__ CloudKit: _OBJC_CLASS_$_CKFetchArchivedRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchArchivedRecordsOptions
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesConfiguration
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchUserQuotaOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKNotification
__ CloudKit: _OBJC_CLASS_$_CKOperationConfiguration
__ CloudKit: _OBJC_CLASS_$_CKOperationGroup
__ CloudKit: _OBJC_CLASS_$_CKQuery
__ CloudKit: _OBJC_CLASS_$_CKQueryOperation
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneSubscription
__ CloudKit: _OBJC_CLASS_$_CKServerChangeToken
__ CloudKit: _OBJC_METACLASS_$_CKDatabase
__ CloudKit: _kCKIdentityUpdateNotificationKey
__ CommonUtilities: _OBJC_CLASS_$_CUTWeakReference
__ Contacts: _CNContactStoreDidChangeNotification
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFMakeCollectable
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterPostNotificationWithOptions
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyKeyList
__ CoreFoundation: _CFPreferencesCopyMultiple
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesFlushCaches
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetMultiple
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFPropertyListCreateDeepCopy
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFUserNotificationDisplayAlert
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ DeviceManagement: _OBJC_CLASS_$_DMFApplicationPolicyMonitor
__ FTAWD: _FTAWDLogIMessageDeduplicated
__ FTAWD: _FTAWDLogIMessageDelivered
__ FTAWD: _FTAWDLogIMessageDowngrade
__ FTServices: _OBJC_CLASS_$_FTDeviceSupport
__ FTServices: _OBJC_CLASS_$_FTPasswordManager
__ Foundation: _NSClassFromString
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileType
__ Foundation: _NSFileTypeDirectory
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ IDS: _IDSCheckiMessageUnknownSender
__ IDS: _IDSCopyIDForEmailAddress
__ IDS: _IDSCopyIDForPhoneNumberWithOptions
__ IDS: _IDSReportiMessageSpam
__ IDS: _IDSReportiMessageUnknownSender
__ IDS: _IDSServiceNameFaceTime
__ IDS: _IDSServiceNameiMessage
__ IDS: _IDSServiceNameiMessageForBusiness
__ IDS: _OBJC_CLASS_$_IDSAccount
__ IDS: _OBJC_CLASS_$_IDSAccountController
__ IDS: _OBJC_CLASS_$_IDSService
__ IDS: _OBJC_CLASS_$_IDSTransactionLogMessage
__ IDS: _OBJC_CLASS_$_IDSTransactionLogSyncTask
__ IDSFoundation: _IDSDefaultPairedDevice
__ IDSFoundation: _OBJC_CLASS_$_IDSServerBag
__ IDSFoundation: __IDSCopyCallerID
__ IDSFoundation: _kIDSServiceDefaultsAliasKey
__ IDSFoundation: _kIDSServiceDefaultsAliasStatusKey
__ IDSFoundation: _kIDSServiceDefaultsDisplayNameKey
__ IDSFoundation: _kIDSServiceDefaultsLoginAsKey
__ IDSFoundation: _kIDSServiceDefaultsSentinelAlias
__ IDSKVStore: _OBJC_CLASS_$_IDSKVStore
__ IMDMessageServices: _IMDMessageServicesExpireStateKey
__ IMDMessageServices: _IMDMessageServicesExpireStateShouldDeleteKey
__ IMDMessageServices: _IMDMessageServicesFlagsKey
__ IMDMessageServices: _IMDMessageServicesServiceKey
__ IMDMessageServices: _IMDMessageServicesUpdateDowngradePropertiesKey
__ IMDMessageServices: _IMDMessageServicesWatchdogShouldFailSendKey
__ IMDMessageServices: _OBJC_CLASS_$_IMDMessageServicesCenter
__ IMDPersistence: _IMDAreAllAliasesUnknown
__ IMDPersistence: _IMDAttachmentCopyRecordIDsToDeleteWithLimit
__ IMDPersistence: _IMDAttachmentMarkAllUnsuccessFullSyncAttachmentsAsNeedingSync
__ IMDPersistence: _IMDAttachmentRecordBulkCopy
__ IMDPersistence: _IMDAttachmentRecordBulkUpdate
__ IMDPersistence: _IMDAttachmentRecordClearDeleteTombStones
__ IMDPersistence: _IMDAttachmentRecordCopyAttachmentForGUID
__ IMDPersistence: _IMDAttachmentRecordCopyAttachmentForGUIDIsLegacyGUID
__ IMDPersistence: _IMDAttachmentRecordCopyAttachmentGUIDsAndPathsForChatIdentifiersOnServices
__ IMDPersistence: _IMDAttachmentRecordCopyAttachmentsForQueryWithLimit
__ IMDPersistence: _IMDAttachmentRecordCopyAttachmentsToMetricForDiskSpace
__ IMDPersistence: _IMDAttachmentRecordCopyAttachmentsToPurgeForDiskSpace
__ IMDPersistence: _IMDAttachmentRecordCopyMessageForAttachmentGUID
__ IMDPersistence: _IMDAttachmentRecordCopyPurgedAttachmentsCountForChatIdentifiersOnServices
__ IMDPersistence: _IMDAttachmentRecordCopyPurgedAttachmentsForChatIdentifiersOnServices
__ IMDPersistence: _IMDAttachmentRecordCreate
__ IMDPersistence: _IMDAttachmentRecordDeleteAttachmentForGUID
__ IMDPersistence: _IMDAttachmentRecordDeleteTombStonedAttachmentsWithRecordIDs
__ IMDPersistence: _IMDAttachmentRecordGetIdentifier
__ IMDPersistence: _IMDAttachmentRecordGetPurgeableDiskSpace
__ IMDPersistence: _IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync
__ IMDPersistence: _IMDAttachmentRecordUpdateAttachmentGUIDWithGUID
__ IMDPersistence: _IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState
__ IMDPersistence: _IMDAttachmentUpdateAttachmentFileSizeWithRowIDGreaterThanWatermark
__ IMDPersistence: _IMDCNPersonNotFound
__ IMDPersistence: _IMDCNRecordIDAndHistoryTokenForAliases
__ IMDPersistence: _IMDCNRecordIDAndHistoryTokenForAliasesWithCompletionHandler
__ IMDPersistence: _IMDCNRecordIDForAliases
__ IMDPersistence: _IMDCanDowngradeDatabaseToVersion
__ IMDPersistence: _IMDChatClearPendingDeleteChatsTable
__ IMDPersistence: _IMDChatCopyChatRecordIDsAndGUIDsToDeleteWithLimit
__ IMDPersistence: _IMDChatInsertIntoDeletedChatsTable
__ IMDPersistence: _IMDChatRecordAddHandle
__ IMDPersistence: _IMDChatRecordAssociateMessageWithGUIDToChatWithGUIDIfNeeded
__ IMDPersistence: _IMDChatRecordBulkUpdate
__ IMDPersistence: _IMDChatRecordCachedUnreadCount
__ IMDPersistence: _IMDChatRecordCopyAllActiveChatsWithLimitAndBlock
__ IMDPersistence: _IMDChatRecordCopyCachedLastMessage
__ IMDPersistence: _IMDChatRecordCopyChatForGUID
__ IMDPersistence: _IMDChatRecordCopyChatsWithHandleOnService
__ IMDPersistence: _IMDChatRecordCopyChatsWithRoomnameOnService
__ IMDPersistence: _IMDChatRecordCopyGUID
__ IMDPersistence: _IMDChatRecordCopyHandles
__ IMDPersistence: _IMDChatRecordCopyNewestChatForGroupIDOnService
__ IMDPersistence: _IMDChatRecordCreate
__ IMDPersistence: _IMDChatRecordDeleteChatForGUID
__ IMDPersistence: _IMDChatRecordDisassociateMessageWithGUIDFromChatWithGUIDIfNeeded
__ IMDPersistence: _IMDChatRecordGetIdentifier
__ IMDPersistence: _IMDChatRecordLastMessageTimeStampOnLoad
__ IMDPersistence: _IMDChatRecordRemoveHandle
__ IMDPersistence: _IMDChatRecordRepairDuplicateChats
__ IMDPersistence: _IMDChatRecordSetIsArchived
__ IMDPersistence: _IMDChatRecordSetIsBlackholed
__ IMDPersistence: _IMDChatRecordSetIsFiltered
__ IMDPersistence: _IMDCopyAttachmentPersistentPath
__ IMDPersistence: _IMDCoreSpotlightAddMessageGUID
__ IMDPersistence: _IMDCoreSpotlightReindexMessages
__ IMDPersistence: _IMDCoreSpotlightSetNeedsMessageReindex
__ IMDPersistence: _IMDCreateIMItemFromIMDMessageRecordRefCopyAttachmentsIfNeededWithServiceResolve
__ IMDPersistence: _IMDDatabaseDelete
__ IMDPersistence: _IMDDowngradeDatabaseToVersion
__ IMDPersistence: _IMDHandleRecordBulkUpdate
__ IMDPersistence: _IMDHandleRecordCopyCountry
__ IMDPersistence: _IMDHandleRecordCopyHandleForIDOnService
__ IMDPersistence: _IMDHandleRecordCopyID
__ IMDPersistence: _IMDHandleRecordCopyPersonCentricID
__ IMDPersistence: _IMDHandleRecordCopyUncanonicalizedID
__ IMDPersistence: _IMDHandleRecordCreate
__ IMDPersistence: _IMDHandleRecordGetIdentifier
__ IMDPersistence: _IMDIsFavoritedContact
__ IMDPersistence: _IMDKVPersistValueForKey
__ IMDPersistence: _IMDKVValueForKey
__ IMDPersistence: _IMDMessagePTaskDeleteAllCompletedTask
__ IMDPersistence: _IMDMessagePTaskInsertRow
__ IMDPersistence: _IMDMessagePTaskSelectWithLimit
__ IMDPersistence: _IMDMessagePTaskUpdateTaskFlagsForGUID
__ IMDPersistence: _IMDMessageRecordAssociateMessageWithGUIDToAttachmentWithGUID
__ IMDPersistence: _IMDMessageRecordBulkCopy
__ IMDPersistence: _IMDMessageRecordBulkUpdate
__ IMDPersistence: _IMDMessageRecordCalculateLocalCloudKitStatistics
__ IMDPersistence: _IMDMessageRecordClearDeleteTombStones
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticAllSyncedCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticSyncedAttachmentCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticSyncedChatCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticSyncedMessageCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticTotalAttachmentCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticTotalChatCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticTotalCountKey
__ IMDPersistence: _IMDMessageRecordCloudKitStatisticTotalMessageCountKey
__ IMDPersistence: _IMDMessageRecordCopyAndMarkAsReadMessagesPriorToGuidMatchingHandleOnService
__ IMDPersistence: _IMDMessageRecordCopyAndMarkAsReadMessagesPriorToGuidMatchingRoomnameOnService
__ IMDPersistence: _IMDMessageRecordCopyArrayOfAssociatedMessagesForMessageGUIDFromSender
__ IMDPersistence: _IMDMessageRecordCopyChats
__ IMDPersistence: _IMDMessageRecordCopyChatsForMessageIdentifier
__ IMDPersistence: _IMDMessageRecordCopyFrequentRepliesForChatIdentifiersOnServicesUpToLimit
__ IMDPersistence: _IMDMessageRecordCopyGUIDsForMessagesWithChatIdentifiersOnServices
__ IMDPersistence: _IMDMessageRecordCopyGUIDsMarkingMessagesAsReadWithHandlesOnServicesUpToGUIDFromMe
__ IMDPersistence: _IMDMessageRecordCopyGUIDsMarkingMessagesAsReadWithRoomnamesOnServicesUpToGUIDFromMe
__ IMDPersistence: _IMDMessageRecordCopyMessageActionItemsForOriginalMessageGUID
__ IMDPersistence: _IMDMessageRecordCopyMessageForGUID
__ IMDPersistence: _IMDMessageRecordCopyMessageMatchingBodyStringWithChatIdentifiersServicesSkippingGUIDs
__ IMDPersistence: _IMDMessageRecordCopyMessageMatchingBodyStringWithHandleSkippingServicesSkippingGUIDs
__ IMDPersistence: _IMDMessageRecordCopyMessageWithHandleOnServiceWithReplaceID
__ IMDPersistence: _IMDMessageRecordCopyMessagesForAssociatedGUID
__ IMDPersistence: _IMDMessageRecordCopyMessagesForGUIDs
__ IMDPersistence: _IMDMessageRecordCopyMessagesToUploadToCloudKitWithLimit
__ IMDPersistence: _IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID
__ IMDPersistence: _IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesUpToGUIDOrLimit
__ IMDPersistence: _IMDMessageRecordCopyMessagesWithReplyToGUIDs
__ IMDPersistence: _IMDMessageRecordCopyRecordIDsAndGUIDsToDeleteWithLimit
__ IMDPersistence: _IMDMessageRecordCopyUnreadIncomingMessagesWithChatIdentifiersOnServicesToLimitFallbackGUID
__ IMDPersistence: _IMDMessageRecordCountAllUnreadMessages
__ IMDPersistence: _IMDMessageRecordCountAllUnreadMessagesForChatGUID
__ IMDPersistence: _IMDMessageRecordCountAllUnreadMessagesForChatRowID
__ IMDPersistence: _IMDMessageRecordCreate
__ IMDPersistence: _IMDMessageRecordDeleteMessagesForGUIDs
__ IMDPersistence: _IMDMessageRecordDeleteMessagesWithGUIDsChatIdentifiersOnServices
__ IMDPersistence: _IMDMessageRecordDeleteTombStonedMessagesWithRecordIDs
__ IMDPersistence: _IMDMessageRecordGetMessagesSequenceNumber
__ IMDPersistence: _IMDMessageRecordLastFailedMessageDate
__ IMDPersistence: _IMDMessageRecordLastSyncedMessageRowID
__ IMDPersistence: _IMDMessageRecordMarkAllMessagesAsNeedingCloudKitSync
__ IMDPersistence: _IMDMessageRecordMarkAllUnsuccessFullSyncMessagesAsNeedingSync
__ IMDPersistence: _IMDMessageRecordMarkAttachmentWithROWIDAsSyncedWithCloudKit
__ IMDPersistence: _IMDMessageRecordMarkFailedAllUnsentUnfailedMessages
__ IMDPersistence: _IMDMessageRecordMarkMessageGUIDAsDeduplicated
__ IMDPersistence: _IMDMessageRecordMarkMessageWithROWIDAsIgnoreButNeedingSyncWithCloudKit
__ IMDPersistence: _IMDMessageRecordMarkMessageWithROWIDAsSyncedWithCloudKit
__ IMDPersistence: _IMDMessageRecordUnassociateMessageWithGUIDFromAttachmentWithGUID
__ IMDPersistence: _IMDNotificationsPostNotifications
__ IMDPersistence: _IMDNotificationsPostUrgentNotificationsForMessages
__ IMDPersistence: _IMDNotificationsRetractNotificationsForReadMessages
__ IMDPersistence: _IMDNotificationsRetractNotificationsFromFirstUnlock
__ IMDPersistence: _IMDReadDeviceState
__ IMDPersistence: _IMDRegisterReconnectBlockWithIdentifier
__ IMDPersistence: _IMDSMSRecordIsFull
__ IMDPersistence: _IMDSMSRecordStoreGetSchemaVersion
__ IMDPersistence: _IMDSMSRecordStoreSave
__ IMDPersistence: _IMDSavedDeviceStateDateKey
__ IMDPersistence: _IMDSavedDeviceStateDidMigrateFromDifferentDeviceKey
__ IMDPersistence: _IMDSavedDeviceStateDidRestoreFromBackupKey
__ IMDPersistence: _IMDSavedDeviceStateDidRestoreFromCloudBackupKey
__ IMDPersistence: _IMDSavedDeviceStateIsMigratingKey
__ IMDPersistence: _IMDSystemMigrationOccurred
__ IMDPersistence: _IMDTrimSharedDatabaseToMessageCount
__ IMDPersistence: _OBJC_CLASS_$_IMDPersistentAttachmentController
__ IMDPersistence: __IMDChatRecordBulkCopy
__ IMDPersistence: _kAliasTOCNIDMapAliasKey
__ IMDPersistence: _kAliasTOCNIDMapHistoryTokenKey
__ IMDPersistence: _kMaxTransfersPerMessage
__ IMFoundation: _FZServicePropertyAlwaysActive
__ IMFoundation: _FZServicePropertyAlwaysLoggedIn
__ IMFoundation: _FZServicePropertyAlwaysOneAccountExists
__ IMFoundation: _FZServicePropertyCreateAccountsActive
__ IMFoundation: _FZServicePropertyDefaultBuddyListDescription
__ IMFoundation: _FZServicePropertyDisallowDeactivation
__ IMFoundation: _FZServicePropertyIDSBased
__ IMFoundation: _FZServicePropertyIgnoresNetworkConnectivity
__ IMFoundation: _FZServicePropertyInternalName
__ IMFoundation: _FZServicePropertyLocalizableDomain
__ IMFoundation: _FZServicePropertyLoginRequired
__ IMFoundation: _FZServicePropertyName
__ IMFoundation: _FZServicePropertyOldInternalName
__ IMFoundation: _FZServicePropertyPasswordRequired
__ IMFoundation: _FZServicePropertyProtocolVersion
__ IMFoundation: _FZServicePropertyServerHostRequired
__ IMFoundation: _FZServicePropertySessionClassName
__ IMFoundation: _FZServicePropertyShortName
__ IMFoundation: _FZServicePropertySingleAccount
__ IMFoundation: _FZServicePropertySubServiceName
__ IMFoundation: _FZServicePropertySupportsAuthorization
__ IMFoundation: _FZServicePropertySupportsDBStorage
__ IMFoundation: _FZServicePropertySupportsMutableGroupChatParticipants
__ IMFoundation: _FZServicePropertySupportsOneSessionForAllAccounts
__ IMFoundation: _FZServicePropertySupportsPresence
__ IMFoundation: _FZServicePropertySupportsRegistration
__ IMFoundation: _FZServicePropertyWantsNullHostReachability
__ IMFoundation: _IMAreObjectsLogicallySame
__ IMFoundation: _IMCallMonitorCallStatusChanged
__ IMFoundation: _IMCanonicalizeFormattedString
__ IMFoundation: _IMChatErrorDomain
__ IMFoundation: _IMCleanupPhoneNumber
__ IMFoundation: _IMComponentsFromChatGUID
__ IMFoundation: _IMCopyAppValueForKey
__ IMFoundation: _IMCopyGUIDForChat
__ IMFoundation: _IMCountryCodeForIncomingTextMessage
__ IMFoundation: _IMDispatchForNotify
__ IMFoundation: _IMFileLocationTrimFileName
__ IMFoundation: _IMFileTransferGUIDAttributeName
__ IMFoundation: _IMFormatPhoneNumber
__ IMFoundation: _IMGetAppBoolForKey
__ IMFoundation: _IMGetAppIntForKey
__ IMFoundation: _IMGetAssertionFailureHandler
__ IMFoundation: _IMGetCachedDomainBoolForKey
__ IMFoundation: _IMGetCachedDomainBoolForKeyWithDefaultValue
__ IMFoundation: _IMGetCachedDomainIntForKeyWithDefaultValue
__ IMFoundation: _IMGetCachedDomainValueForKey
__ IMFoundation: _IMGetDomainBoolForKey
__ IMFoundation: _IMGetDomainBoolForKeyWithDefaultValue
__ IMFoundation: _IMGetDomainIntForKey
__ IMFoundation: _IMGetDomainValueForKey
__ IMFoundation: _IMLocalizedStringFromTableInBundle
__ IMFoundation: _IMLogBacktrace
__ IMFoundation: _IMLogSimulateCrashForException
__ IMFoundation: _IMLogSimulateCrashForProcess
__ IMFoundation: _IMLogString
__ IMFoundation: _IMNetworkChangedNotification
__ IMFoundation: _IMOSLoggingEnabled
__ IMFoundation: _IMSetAppValueForKey
__ IMFoundation: _IMSetDomainBoolForKey
__ IMFoundation: _IMSetDomainIntForKey
__ IMFoundation: _IMSetDomainValueForKey
__ IMFoundation: _IMSetKeychainPassword
__ IMFoundation: _IMShouldLog
__ IMFoundation: _IMSingleObjectArray
__ IMFoundation: _IMStringIsBusinessID
__ IMFoundation: _IMStringIsEmail
__ IMFoundation: _IMStringIsPhoneNumber
__ IMFoundation: _IMStripLoginID
__ IMFoundation: _IMTimingStartTimingForKey
__ IMFoundation: _IMTimingStopTimingForKey
__ IMFoundation: _IMWeakLinkClass
__ IMFoundation: _IMWeakLinkSymbol
__ IMFoundation: _JWDecodeDictionary
__ IMFoundation: _JWEncodeCodableObject
__ IMFoundation: _JWEncodeDictionary
__ IMFoundation: _OBJC_CLASS_$_IMCallMonitor
__ IMFoundation: _OBJC_CLASS_$_IMConnectionMonitor
__ IMFoundation: _OBJC_CLASS_$_IMFileCopier
__ IMFoundation: _OBJC_CLASS_$_IMFileManager
__ IMFoundation: _OBJC_CLASS_$_IMLockdownManager
__ IMFoundation: _OBJC_CLASS_$_IMRemoteURLConnection
__ IMFoundation: _OBJC_CLASS_$_IMSystemMonitor
__ IMFoundation: _OBJC_CLASS_$_IMSystemProxySettingsFetcher
__ IMFoundation: _OBJC_CLASS_$_IMTimer
__ IMFoundation: _OBJC_CLASS_$_IMTimingCollection
__ IMFoundation: _OBJC_CLASS_$_IMUserDefaults
__ IMFoundation: _OBJC_CLASS_$_IMUserNotification
__ IMFoundation: _OBJC_CLASS_$_IMUserNotificationCenter
__ IMFoundation: _OBJC_CLASS_$_NetworkChangeNotifier
__ IMFoundation: _OSLogHandleForIDSCategory
__ IMFoundation: _OSLogHandleForIMEventCategory
__ IMFoundation: _OSLogHandleForIMFoundationCategory
__ IMFoundation: _OSLogHandleForRegistrationCategory
__ IMFoundation: _TemporaryTransfersPath
__ IMFoundation: __IMAlwaysLog
__ IMFoundation: __IMITunesInteropAvailable
__ IMFoundation: __IMStatusMessageWithFormatAndVariables
__ IMFoundation: __IMStringFromFZCapabilities
__ IMFoundation: __IMWarn
__ IMFoundation: __IMWillLog
__ IMFoundation: _im_dispatch_after
__ IMFoundation: _kFZAppBundleIdentifier
__ IMFoundation: _kFZChatParticipantStatusKey
__ IMFoundation: _kFZChatPropertyAutoDowngradedMessageCount
__ IMFoundation: _kFZChatPropertyLastDowngradedMessageTime
__ IMFoundation: _kFZChatPropertyManuallyDowngradedMessageCount
__ IMFoundation: _kFZDaemonPropertyOfflineAtQuit
__ IMFoundation: _kFZDefaultTuneMessageFormat
__ IMFoundation: _kFZDefaultsTuneMessageFormatKey
__ IMFoundation: _kFZJoinBlobChatProperty
__ IMFoundation: _kFZListenerCapAccounts
__ IMFoundation: _kFZListenerCapAppleAC
__ IMFoundation: _kFZListenerCapAppleLegacyVC
__ IMFoundation: _kFZListenerCapAppleVC
__ IMFoundation: _kFZListenerCapBlackholedChatRegistry
__ IMFoundation: _kFZListenerCapChatCountsObserver
__ IMFoundation: _kFZListenerCapChats
__ IMFoundation: _kFZListenerCapNotifications
__ IMFoundation: _kFZListenerCapSentMessageObserver
__ IMFoundation: _kFZNowPlayingAlbum
__ IMFoundation: _kFZNowPlayingArtist
__ IMFoundation: _kFZNowPlayingGenre
__ IMFoundation: _kFZNowPlayingState
__ IMFoundation: _kFZNowPlayingString
__ IMFoundation: _kFZNowPlayingTrack
__ IMFoundation: _kFZNowPlayingURL
__ IMFoundation: _kFZOldServiceDefaultsDomain
__ IMFoundation: _kFZPersonAwaySince
__ IMFoundation: _kFZPersonCountryCode
__ IMFoundation: _kFZPersonID
__ IMFoundation: _kFZPersonNowPlaying
__ IMFoundation: _kFZPersonPersonCentricID
__ IMFoundation: _kFZPersonPictureData
__ IMFoundation: _kFZPersonProfile
__ IMFoundation: _kFZPersonProfileData
__ IMFoundation: _kFZPersonSmallPictureData
__ IMFoundation: _kFZPersonStatus
__ IMFoundation: _kFZPersonStatusMessage
__ IMFoundation: _kFZPersonStatusURL
__ IMFoundation: _kFZPersonUnformattedName
__ IMFoundation: _kFZServiceDefaultsAccountStatusKey
__ IMFoundation: _kFZServiceDefaultsAccountsKey
__ IMFoundation: _kFZServiceDefaultsAccountsToImport
__ IMFoundation: _kFZServiceDefaultsActiveAccountsKey
__ IMFoundation: _kFZServiceDefaultsAliasesKey
__ IMFoundation: _kFZServiceDefaultsAutoLoginKey
__ IMFoundation: _kFZServiceDefaultsChatsPersistAtLogoutKey
__ IMFoundation: _kFZServiceDefaultsDisplayNameKey
__ IMFoundation: _kFZServiceDefaultsDomain
__ IMFoundation: _kFZServiceDefaultsLoggedInAccountsKey
__ IMFoundation: _kFZServiceDefaultsLoginAsKey
__ IMFoundation: _kFZServiceDefaultsManagedAccountKey
__ IMFoundation: _kFZServiceDefaultsProxyHostKey
__ IMFoundation: _kFZServiceDefaultsProxyPortKey
__ IMFoundation: _kFZServiceDefaultsProxyProtocolKey
__ IMFoundation: _kFZServiceDefaultsRegistrationInfoAlertInfoKey
__ IMFoundation: _kFZServiceDefaultsRegistrationInfoErrorCodeKey
__ IMFoundation: _kFZServiceDefaultsRegistrationInfoKey
__ IMFoundation: _kFZServiceDefaultsRegistrationInfoStatusKey
__ IMFoundation: _kFZServiceDefaultsSentinelAlias
__ IMFoundation: _kFZServiceDefaultsServerHostKey
__ IMFoundation: _kFZServiceDefaultsServerPortKey
__ IMFoundation: _kFZServiceDefaultsServerSSLHostKey
__ IMFoundation: _kFZServiceDefaultsServerSSLPortKey
__ IMFoundation: _kFZServiceDefaultsUseProxyKey
__ IMFoundation: _kFZServiceDefaultsUseProxySytemPrefs
__ IMFoundation: _kFZServiceDefaultsUsesSSLKey
__ IMFoundation: _kFZTextAppBundleIdentifier
__ IMFoundation: _kIMDDContextConversationIDKey
__ IMFoundation: _kIMDDContextServiceNameKey
__ IMSharedUtilities: _FZCreateSerializedIMMessageItemsfromArray
__ IMSharedUtilities: _FormattedRecentDomainDirectory
__ IMSharedUtilities: _IMAllowMessagesIniCloud
__ IMSharedUtilities: _IMAttachmentPreviewFileURL
__ IMSharedUtilities: _IMAttachmentsReUploadDate
__ IMSharedUtilities: _IMBagIntValueWithDefault
__ IMSharedUtilities: _IMBalloonPluginIdentifierDT
__ IMSharedUtilities: _IMBalloonPluginIdentifierSurf
__ IMSharedUtilities: _IMCKFinishedFetchingAttachmentsFromCloudKit
__ IMSharedUtilities: _IMCKFirstSyncInProgress
__ IMSharedUtilities: _IMCKMOCAccountsMatch
__ IMSharedUtilities: _IMCKRemovedFromBackupViaServerBag
__ IMSharedUtilities: _IMCKStatisticCollectionDomain
__ IMSharedUtilities: _IMCKSyncCountsPriorToSync
__ IMSharedUtilities: _IMCalculateFileSizeForPath
__ IMSharedUtilities: _IMChatPropertyLastSeenMessageGuid
__ IMSharedUtilities: _IMClientPreviewConstraints
__ IMSharedUtilities: _IMCloudKitAHDAgentLastSyncAttemptDate
__ IMSharedUtilities: _IMCloudKitAHDAgentLastSyncAttemptInfo
__ IMSharedUtilities: _IMCloudKitAccountStatusKey
__ IMSharedUtilities: _IMCloudKitAnalyticSyncDatesDictionaryKey
__ IMSharedUtilities: _IMCloudKitAppleIDSecurityLevelDowngradeDate
__ IMSharedUtilities: _IMCloudKitAppleIDSecurityLevelHSA2
__ IMSharedUtilities: _IMCloudKitAttachmentFileSizeUpdateWatermark
__ IMSharedUtilities: _IMCloudKitAttachmentsRestoredCount
__ IMSharedUtilities: _IMCloudKitAttachmentsSyncedCount
__ IMSharedUtilities: _IMCloudKitChatsRestoredCount
__ IMSharedUtilities: _IMCloudKitChatsSyncedCount
__ IMSharedUtilities: _IMCloudKitCheckedMiCSwitchEligibilityOnImagentLaunch
__ IMSharedUtilities: _IMCloudKitCompleteSyncedDBDate
__ IMSharedUtilities: _IMCloudKitCreatedChatZone
__ IMSharedUtilities: _IMCloudKitDefinesDomain
__ IMSharedUtilities: _IMCloudKitDefinesInitialStateCheckDomain
__ IMSharedUtilities: _IMCloudKitDefinesMarkAllAttachmentsAsNeedingSync
__ IMSharedUtilities: _IMCloudKitDefinesMarkAllChatsAsNeedingSync
__ IMSharedUtilities: _IMCloudKitDefinesMarkAllMessagesAsNeedingSync
__ IMSharedUtilities: _IMCloudKitDefinesNewDeviceBringUpDomain
__ IMSharedUtilities: _IMCloudKitDefinesNewDeviceBringUpHasFinished
__ IMSharedUtilities: _IMCloudKitDefinesNewDeviceBringUpHasPerformed
__ IMSharedUtilities: _IMCloudKitDefinesTriedToEnableCKAndSyncAfterFirstImagentConnection
__ IMSharedUtilities: _IMCloudKitDispatchedIMAutoSync
__ IMSharedUtilities: _IMCloudKitEnableCentralizedCacheDelete
__ IMSharedUtilities: _IMCloudKitErrorFetchingExitDate
__ IMSharedUtilities: _IMCloudKitExitDate
__ IMSharedUtilities: _IMCloudKitFeatureEnabled
__ IMSharedUtilities: _IMCloudKitFullPartialSyncFirstCompletedDate
__ IMSharedUtilities: _IMCloudKitFullSyncAttemptedDate
__ IMSharedUtilities: _IMCloudKitFullSyncFirstCompletedDate
__ IMSharedUtilities: _IMCloudKitGetSyncStateDictionary
__ IMSharedUtilities: _IMCloudKitHasDisplayedLogNotification
__ IMSharedUtilities: _IMCloudKitInitialStartDate
__ IMSharedUtilities: _IMCloudKitInitialStateCheckKey
__ IMSharedUtilities: _IMCloudKitInitialSyncCompletedDate
__ IMSharedUtilities: _IMCloudKitIsEligibleForTruthZone
__ IMSharedUtilities: _IMCloudKitIsInExitState
__ IMSharedUtilities: _IMCloudKitIsRemovedFromBackup
__ IMSharedUtilities: _IMCloudKitIsSyncing
__ IMSharedUtilities: _IMCloudKitKickOffDailySyncNotification
__ IMSharedUtilities: _IMCloudKitLastChatSyncTime
__ IMSharedUtilities: _IMCloudKitLastDeviceActivityDate
__ IMSharedUtilities: _IMCloudKitLastReportedErrorTimeKey
__ IMSharedUtilities: _IMCloudKitLogNotificationSetting
__ IMSharedUtilities: _IMCloudKitManualSyncInProgressCountKey
__ IMSharedUtilities: _IMCloudKitMessagesRestoredCount
__ IMSharedUtilities: _IMCloudKitMessagesSyncedCount
__ IMSharedUtilities: _IMCloudKitOneTimeAccountUpgradeCheck
__ IMSharedUtilities: _IMCloudKitOverrideNumberOfChatsToFetch
__ IMSharedUtilities: _IMCloudKitOverrideNumberOfChatsToWrite
__ IMSharedUtilities: _IMCloudKitPeriodicSyncInProgressCountKey
__ IMSharedUtilities: _IMCloudKitRampStateDict
__ IMSharedUtilities: _IMCloudKitRampStateFeatureAllowed
__ IMSharedUtilities: _IMCloudKitRampStateFeaturePromoted
__ IMSharedUtilities: _IMCloudKitRampStateFeatureVisible
__ IMSharedUtilities: _IMCloudKitRampStateFetchHadServerError
__ IMSharedUtilities: _IMCloudKitRequestPriorityRamp
__ IMSharedUtilities: _IMCloudKitRestoringContentFromCloudKit
__ IMSharedUtilities: _IMCloudKitSetEligibleToToggleMiCSwitch
__ IMSharedUtilities: _IMCloudKitShouldFetchArchivedRecords
__ IMSharedUtilities: _IMCloudKitShouldUseDevContainer
__ IMSharedUtilities: _IMCloudKitShouldUseDevNickNameContainer
__ IMSharedUtilities: _IMCloudKitStartingDisableDevices
__ IMSharedUtilities: _IMCloudKitStartingEnabledSettingChange
__ IMSharedUtilities: _IMCloudKitStartingInitialSync
__ IMSharedUtilities: _IMCloudKitStartingPeriodicSync
__ IMSharedUtilities: _IMCloudKitSyncControllerSyncRecordTypeKey
__ IMSharedUtilities: _IMCloudKitSyncControllerSyncStateKey
__ IMSharedUtilities: _IMCloudKitSyncControllerSyncTypeKey
__ IMSharedUtilities: _IMCloudKitSyncDate
__ IMSharedUtilities: _IMCloudKitSyncErrorDomain
__ IMSharedUtilities: _IMCloudKitSyncErrors
__ IMSharedUtilities: _IMCloudKitSyncPaused
__ IMSharedUtilities: _IMCloudKitSyncingEnabled
__ IMSharedUtilities: _IMCloudKitTogglediCloudSwitch
__ IMSharedUtilities: _IMCloudKitUserTypeKey
__ IMSharedUtilities: _IMCloudKitZoneDeletedDate
__ IMSharedUtilities: _IMCloudKitiCloudLoggedIntoHSA2AccountNotification
__ IMSharedUtilities: _IMCloudKitiCloudLoggedIntoNonHSA2AccountNotification
__ IMSharedUtilities: _IMComputeRecordName
__ IMSharedUtilities: _IMDidPerformInitialChatVocabularyUpdate
__ IMSharedUtilities: _IMExtensionPayloadURLKey
__ IMSharedUtilities: _IMExtensionPayloadUnarchivingClasses
__ IMSharedUtilities: _IMFileTransferAttributionInfoPreviewGenerationConstraintsKey
__ IMSharedUtilities: _IMFileTransferAttributionInfoPreviewGenerationSucceededKey
__ IMSharedUtilities: _IMFileTransferGuidIsLegacyGuid
__ IMSharedUtilities: _IMFileTransferGuidWithAssociatedMessageGUIDAndIndex
__ IMSharedUtilities: _IMFileTransferPluginPayloadAttachmentExtension
__ IMSharedUtilities: _IMFileTransferWrapperExtension
__ IMSharedUtilities: _IMFileTransferWrapperGUIDFilename
__ IMSharedUtilities: _IMGetConsumedSessionPayloadsForBreadcrumbItems
__ IMSharedUtilities: _IMGetUserIgnoreLogoutIntent
__ IMSharedUtilities: _IMGetUserLoginIntent
__ IMSharedUtilities: _IMGreenTeaConsumed2FACode
__ IMSharedUtilities: _IMGreenTeaMessageReadLog
__ IMSharedUtilities: _IMGreenTeaMessageTransmitLog
__ IMSharedUtilities: _IMGreenTeaPhoneNumberTransmitLog
__ IMSharedUtilities: _IMGreenTeaReceived2FACode
__ IMSharedUtilities: _IMIsRunningInAutomation
__ IMSharedUtilities: _IMIsRunningInUnitTesting
__ IMSharedUtilities: _IMIsSupportedUTIType
__ IMSharedUtilities: _IMMessageGuidFromIMFileTransferGuid
__ IMSharedUtilities: _IMMessageItemShouldAutomaticallySave
__ IMSharedUtilities: _IMMetricsCollectorEventCKSyncingAllCompletedWithTime
__ IMSharedUtilities: _IMMetricsCollectorEventCKSyncingAllFailedWithTime
__ IMSharedUtilities: _IMMetricsCollectorEventCKSyncingChatsCompletedWithTime
__ IMSharedUtilities: _IMMetricsCollectorEventCKSyncingChatsFailedWithTime
__ IMSharedUtilities: _IMMetricsCollectorEventCKSyncingCompleted
__ IMSharedUtilities: _IMMetricsCollectorEventCKSyncingEnabled
__ IMSharedUtilities: _IMMetricsCollectorEventCKisInCarryEnabled
__ IMSharedUtilities: _IMMetricsCollectorEventDNDAutoReplySent
__ IMSharedUtilities: _IMMetricsCollectorEventDNDUrgentRequestReceived
__ IMSharedUtilities: _IMMetricsCollectorEventLastCKSyncWasWithin3Days
__ IMSharedUtilities: _IMMetricsCollectorEventLastCKSyncWasWithin7Days
__ IMSharedUtilities: _IMMetricsCollectorEventLastCompleteDBCKSyncWasWithin3Days
__ IMSharedUtilities: _IMMetricsCollectorEventLastCompleteDBCKSyncWasWithin7Days
__ IMSharedUtilities: _IMMetricsCollectorEventPresentedTTR
__ IMSharedUtilities: _IMMetricsCollectorEventPreviewGenerationFailure
__ IMSharedUtilities: _IMMetricsCollectorEventPreviewGenerationSuccess
__ IMSharedUtilities: _IMMetricsCollectorEventPreviewGenerationTimeout
__ IMSharedUtilities: _IMMetricsCollectorEventServedOTC
__ IMSharedUtilities: _IMNicknameDirectoryPath
__ IMSharedUtilities: _IMNicknamesAppleIDAndiCloudAccountMatchAndExistKey
__ IMSharedUtilities: _IMNicknamesDomain
__ IMSharedUtilities: _IMNicknamesMeCardSharingAudienceKey
__ IMSharedUtilities: _IMNicknamesMeCardSharingEnabledKey
__ IMSharedUtilities: _IMNicknamesMeCardSharingImageForkedKey
__ IMSharedUtilities: _IMNicknamesMeCardSharingNameForkedKey
__ IMSharedUtilities: _IMNicknamesMultiplePhoneNumbersTiedToAppleID
__ IMSharedUtilities: _IMNicknamesNicknameVersionKey
__ IMSharedUtilities: _IMNicknamesPendingNicknamesVersionKey
__ IMSharedUtilities: _IMNicknamesRequestedProfileFromPeersKey
__ IMSharedUtilities: _IMNicknamesReuploadLocalProfileVersion
__ IMSharedUtilities: _IMNicknamesScrutinyDoNotHandleKey
__ IMSharedUtilities: _IMNicknamesSharingVersionKey
__ IMSharedUtilities: _IMNicknamesWhitelistBlacklistNicknamesVersionKey
__ IMSharedUtilities: _IMOneTimeCodeGuidKey
__ IMSharedUtilities: _IMOneTimeCodeHandleKey
__ IMSharedUtilities: _IMOneTimeCodeKey
__ IMSharedUtilities: _IMPowerWifiUsageCollectorOnPowerAndWifiNotification
__ IMSharedUtilities: _IMPreviewConstraintsEqualToConstraints
__ IMSharedUtilities: _IMPreviewConstraintsFromDictionary
__ IMSharedUtilities: _IMPreviewExtension
__ IMSharedUtilities: _IMResumeToLastSeenMessage
__ IMSharedUtilities: _IMServicePropertyDiscontinued
__ IMSharedUtilities: _IMSetHavePerformedInitialChatVocabularyUpdate
__ IMSharedUtilities: _IMSettingsKeepMessagesChangedNotification
__ IMSharedUtilities: _IMSettingsKeepMessagesDomain
__ IMSharedUtilities: _IMSettingsKeepMessagesKey
__ IMSharedUtilities: _IMSettingsKeepMessagesResetKey
__ IMSharedUtilities: _IMSettingsKeepMessagesShouldResetPrefNotification
__ IMSharedUtilities: _IMSettingsKeepMessagesVersionIDKey
__ IMSharedUtilities: _IMSettingsKeepMessagesWasResetNotification
__ IMSharedUtilities: _IMSharedHelperCachePathForStickerWithProperties
__ IMSharedUtilities: _IMSharedHelperContactsBasedMergingEnabled
__ IMSharedUtilities: _IMSharedHelperDeviceHasMultipleSubscriptions
__ IMSharedUtilities: _IMSharedHelperEnsureDirectoryExistsAtPath
__ IMSharedUtilities: _IMSharedHelperMD5HashOfFileAtPath
__ IMSharedUtilities: _IMSharedHelperMessagesRootFolderPath
__ IMSharedUtilities: _IMSharedHelperNSNewStringByAppendingStrings
__ IMSharedUtilities: _IMSharedHelperNickNameEnabled
__ IMSharedUtilities: _IMSharedHelperPersistMergeID
__ IMSharedUtilities: _IMSharedHelperPersistMergeIDMergedChats
__ IMSharedUtilities: _IMSharedHelperPersonCentricMergingEnabled
__ IMSharedUtilities: _IMSharedHelperSortUsingReplyToGUIDAlgorithm
__ IMSharedUtilities: _IMSharedHelperTurnOnUNUserNotificationsInIMDPersistence
__ IMSharedUtilities: _IMSharedUtilitiesFrameworkBundle
__ IMSharedUtilities: _IMShouldHandleInternalPhishingAttempts
__ IMSharedUtilities: _IMStickerUserInfoStickerBIDKey
__ IMSharedUtilities: _IMStickerUserInfoStickerRecipeKey
__ IMSharedUtilities: _IMStringFromIMCloudKitAccountStatus
__ IMSharedUtilities: _IMStringFromIMCloudKitSyncControllerSyncRecordType
__ IMSharedUtilities: _IMStringFromIMCloudKitSyncControllerSyncState
__ IMSharedUtilities: _IMStringFromIMCloudKitSyncControllerSyncType
__ IMSharedUtilities: _IMStripTransferConstraintAndSizeKeys
__ IMSharedUtilities: _IMUTITypeForFilename
__ IMSharedUtilities: _IMUpdateTransferConstraintAndSizeKeys
__ IMSharedUtilities: _OBJC_CLASS_$_IMAKAppleIDAuthenticationController
__ IMSharedUtilities: _OBJC_CLASS_$_IMAssociatedMessageItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMBroadcastingKeyValueCollection
__ IMSharedUtilities: _OBJC_CLASS_$_IMCKPadding
__ IMSharedUtilities: _OBJC_CLASS_$_IMCTSMSUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMCoreAutomationNotifications
__ IMSharedUtilities: _OBJC_CLASS_$_IMDefaults
__ IMSharedUtilities: _OBJC_CLASS_$_IMDeviceConditions
__ IMSharedUtilities: _OBJC_CLASS_$_IMFileTransfer
__ IMSharedUtilities: _OBJC_CLASS_$_IMGroupActionItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMGroupTitleChangeItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMINInteractionUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMKeyValueCollectionUserDefaultsStorage
__ IMSharedUtilities: _OBJC_CLASS_$_IMLocationShareStatusChangeItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMLogDump
__ IMSharedUtilities: _OBJC_CLASS_$_IMMessageActionItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMMessageItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMMessageNotificationTimeManager
__ IMSharedUtilities: _OBJC_CLASS_$_IMMetricsCollector
__ IMSharedUtilities: _OBJC_CLASS_$_IMNickname
__ IMSharedUtilities: _OBJC_CLASS_$_IMNicknameAvatar
__ IMSharedUtilities: _OBJC_CLASS_$_IMNicknameAvatarImage
__ IMSharedUtilities: _OBJC_CLASS_$_IMOneTimeCodeUtilities
__ IMSharedUtilities: _OBJC_CLASS_$_IMParticipantChangeItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMPowerWifiUsageCollector
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedGroupAction
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedGroupTitleChange
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedLocationShareStatusChange
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedMessage
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedMessageAction
__ IMSharedUtilities: _OBJC_CLASS_$_IMSharedUtilitiesProtoCloudKitEncryptedParticipantChange
__ IMSharedUtilities: _OBJC_CLASS_$_IMTUConversationItem
__ IMSharedUtilities: _OBJC_CLASS_$_IMTranscoderTelemetry
__ IMSharedUtilities: __MessageGUIDToSignpostId
__ IMSharedUtilities: __iMessageTelemetryLogHandle
__ IMSharedUtilities: __signpostSendMessage
__ IMTranscoding: _OBJC_CLASS_$_IMTranscodeController
__ IMTransferServices: _OBJC_CLASS_$_IMTransferServicesController
__ Marco: _MarcoLogMadridEvent
__ Marco: _MarcoLogMadridLevel
__ Marco: _MarcoLoggingStringForMessageData
__ Marco: _MarcoShouldLogMadridLevel
__ Marco: _MarcoWarnMadrid
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ PhotosFormats: _OBJC_CLASS_$_PFVideoComplement
__ PhotosFormats: _PFVideoComplementFileExtension
__ TelephonyUtilities: _OBJC_CLASS_$_TUConversationManager
__ ToneLibrary: _OBJC_CLASS_$_TLToneManager
__ ToneLibrary: _TLToneIdentifierNone
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_CLASS_C
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _ffsctl
__ libSystem.B.dylib: _fsctl
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_shim_legacy_logging_enabled
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _sandbox_check_by_audit_token
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
IMDAccount : NSObject <IMSystemMonitorListener>
 @property  BOOL isLoading
 @property  BOOL wasDisabledAutomatically
 @property  BOOL shouldPublishNowPlaying
 @property  int registrationStatus
 @property  int registrationError
 @property  NSDictionary *registrationAlertInfo
 @property  NSDictionary *statusToSave
 @property  NSDictionary *statusToPost
 @property  NSDictionary *accountInfoToPost
 @property  NSDictionary *accountDefaults
 @property  NSString *accountID
 @property  NSString *loginID
 @property  IMDService *service
 @property  IMDServiceSession *session
 @property  BOOL isActive
 @property  BOOL isDisabled
 @property  BOOL isManaged
 @property  BOOL canMakeDowngradeRoutingChecks
 @property  NSDictionary *status
 @property  unsigned int serviceLoginStatus
 @property  int serviceDisconnectReason
 @property  NSString *serviceLoginStatusMessage
 @property  long long accountType

  // instance methods
  -[IMDAccount dealloc]
  -[IMDAccount isActive]
  -[IMDAccount status]
  -[IMDAccount _registrationInfo]
  -[IMDAccount session]
  -[IMDAccount setSession:]
  -[IMDAccount service]
  -[IMDAccount accountType]
  -[IMDAccount isDisabled]
  -[IMDAccount isLoading]
  -[IMDAccount accountID]
  -[IMDAccount setIsLoading:]
  -[IMDAccount systemDidBecomeIdle]
  -[IMDAccount systemDidBecomeUnidle]
  -[IMDAccount registrationStatus]
  -[IMDAccount loginID]
  -[IMDAccount registrationError]
  -[IMDAccount registrationAlertInfo]
  -[IMDAccount isManaged]
  -[IMDAccount setIsManaged:]
  -[IMDAccount writeAccountDefaults:]
  -[IMDAccount accountDefaults]
  -[IMDAccount postAccountCapabilitiesToListener:]
  -[IMDAccount statusToPost]
  -[IMDAccount serviceLoginStatus]
  -[IMDAccount serviceLoginStatusMessage]
  -[IMDAccount wasDisabledAutomatically]
  -[IMDAccount setWasDisabledAutomatically:]
  -[IMDAccount shouldPublishNowPlaying]
  -[IMDAccount changeStatus:]
  -[IMDAccount _updateIdle]
  -[IMDAccount _forceSetLoginStatus:message:reason:properties:]
  -[IMDAccount setLoginStatus:message:reason:properties:]
  -[IMDAccount initWithAccountID:defaults:service:]
  -[IMDAccount canMakeDowngradeRoutingChecks]
  -[IMDAccount postAccountCapabilities]
  -[IMDAccount accountInfoToPost]
  -[IMDAccount createSessionIfNecessary]
  -[IMDAccount releaseSession]
  -[IMDAccount statusToSave]
  -[IMDAccount tunesController:playerInfoChanged:]
  -[IMDAccount setRegistrationStatus:error:alertInfo:]
  -[IMDAccount setLoginStatus:message:]
  -[IMDAccount serviceDisconnectReason]


IMDMessageHistorySyncTaskLiveFactory : NSObject <IMDMessageHistorySyncTaskFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMDMessageHistorySyncTaskLiveFactory init]
  -[IMDMessageHistorySyncTaskLiveFactory dealloc]
  -[IMDMessageHistorySyncTaskLiveFactory _initWithCKSyncController:accountController:replayController:]
  -[IMDMessageHistorySyncTaskLiveFactory _newFirstUnlockReplaySyncTask]
  -[IMDMessageHistorySyncTaskLiveFactory _newIDSTransactionLogSyncTask]
  -[IMDMessageHistorySyncTaskLiveFactory _newKChatSyncTask]
  -[IMDMessageHistorySyncTaskLiveFactory newSyncTaskForType:]


IMDAccountController : NSObject <IDSAccountDelegate>
 @property  NSDictionary *loadOldStatusStore
 @property  BOOL isLoading
 @property  NSArray *accounts
 @property  NSArray *activeAccounts
 @property  NSArray *connectedAccounts
 @property  NSArray *connectingAccounts
 @property  NSArray *activeSessions
 @property  BOOL networkDataAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDAccountController sharedInstance]
  +[IMDAccountController sharedAccountController]

  // instance methods
  -[IMDAccountController init]
  -[IMDAccountController dealloc]
  -[IMDAccountController load]
  -[IMDAccountController save]
  -[IMDAccountController accounts]
  -[IMDAccountController activeAccounts]
  -[IMDAccountController activeSessions]
  -[IMDAccountController isLoading]
  -[IMDAccountController addAccount:]
  -[IMDAccountController removeAccount:]
  -[IMDAccountController account:isActiveChanged:]
  -[IMDAccountController accountsForService:]
  -[IMDAccountController _nicknameController]
  -[IMDAccountController networkDataAvailable]
  -[IMDAccountController activeAccountsForService:]
  -[IMDAccountController connectedAccountsForService:]
  -[IMDAccountController connectedAccounts]
  -[IMDAccountController setNetworkDataAvailable:]
  -[IMDAccountController activateAccounts:]
  -[IMDAccountController deactivateAccounts:]
  -[IMDAccountController deactivateAccount:]
  -[IMDAccountController activateAccount:]
  -[IMDAccountController _operationalAccounts]
  -[IMDAccountController isAccountActive:]
  -[IMDAccountController _daemonWillShutdown:]
  -[IMDAccountController accountForAccountID:]
  -[IMDAccountController loadOldStatusStore]
  -[IMDAccountController _checkPowerAssertion]
  -[IMDAccountController _rebuildOperationalAccountsCache]
  -[IMDAccountController deactivateAccounts:force:]
  -[IMDAccountController _isAccountActive:forService:]
  -[IMDAccountController deactivateAccount:force:]
  -[IMDAccountController _isOperationalForAccount:]
  -[IMDAccountController deferredSave]
  -[IMDAccountController setupAccount:]
  -[IMDAccountController accountsForLoginID:onService:]
  -[IMDAccountController connectingAccounts]
  -[IMDAccountController connectingAccountsForService:]
  -[IMDAccountController accountForIDSAccountUniqueID:]
  -[IMDAccountController sessionForAccount:]
  -[IMDAccountController anySessionForServiceName:]
  -[IMDAccountController _superFormatFromAIML:]


IMDCKUtilities : NSObject <IMDCKSyncStateDelegate>
 @property  BOOL didKeyRollPendingCheck
 @property  IMLockdownManager *lockdownManager
 @property  IDSServerBag *serverBag
 @property  FTDeviceSupport *deviceSupport
 @property  IMDefaults *imDefaults
 @property  BOOL isInCloudKitDemoMode
 @property  BOOL useDeprecatedApi
 @property  IMDCKSyncState *syncState
 @property  BOOL isSyncingPaused
 @property  BOOL keyRollPending
 @property  BOOL deviceCharging
 @property  BOOL deviceOnWifi
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDCKUtilities sharedInstance]
  +[IMDCKUtilities logHandle]
  +[IMDCKUtilities im_AKSecurityLevelKey]
  +[IMDCKUtilities restoreFailuresDirectory]

  // instance methods
  -[IMDCKUtilities init]
  -[IMDCKUtilities .cxx_destruct]
  -[IMDCKUtilities dsid]
  -[IMDCKUtilities _accountStore]
  -[IMDCKUtilities internalQueue]
  -[IMDCKUtilities serverBag]
  -[IMDCKUtilities isDeviceOnWifi]
  -[IMDCKUtilities isDeviceCharging]
  -[IMDCKUtilities logHandle]
  -[IMDCKUtilities _accountManager]
  -[IMDCKUtilities _authenticationController]
  -[IMDCKUtilities syncState]
  -[IMDCKUtilities messageDatabaseSize]
  -[IMDCKUtilities broadcastCloudKitState]
  -[IMDCKUtilities broadcastCloudKitStateAfterFetchingAccountStatus]
  -[IMDCKUtilities broadcastCloudKitStateAfterClearingErrors]
  -[IMDCKUtilities fetchSecurityLevelAndUpdateMiCSwitchEligibility]
  -[IMDCKUtilities isSyncingPaused]
  -[IMDCKUtilities _primaryiCloudAccount]
  -[IMDCKUtilities initWithServerBag:lockDownmanager:deviceSupport:imDefaults:]
  -[IMDCKUtilities cloudKitSyncingEnabled]
  -[IMDCKUtilities backupController]
  -[IMDCKUtilities didKeyRollPendingCheck]
  -[IMDCKUtilities setDidKeyRollPendingCheck:]
  -[IMDCKUtilities isKeyRollPending]
  -[IMDCKUtilities syncStateWillUpdate:]
  -[IMDCKUtilities fetchCloudKitAccountStatusAndCheckForAccountNeedsRepairWithCompletion:]
  -[IMDCKUtilities lockdownManager]
  -[IMDCKUtilities _truthDatabase]
  -[IMDCKUtilities _mininimumServerBagClientValue]
  -[IMDCKUtilities iCloudAccountMatchesiMessageAccount]
  -[IMDCKUtilities _serverAllowsSync]
  -[IMDCKUtilities _mocFeatureEnabled]
  -[IMDCKUtilities _isInExitState]
  -[IMDCKUtilities _resetKeepMessagesSettingandBroadcastToAllDevices]
  -[IMDCKUtilities evalToggleiCloudSettingsSwitch]
  -[IMDCKUtilities _getKeepMessagesValue]
  -[IMDCKUtilities _shouldDisplayPopUpForResettingKeepMessages]
  -[IMDCKUtilities _allowDestructiveMOCFeaturesBasedOnDSID]
  -[IMDCKUtilities _serverAllowsCacheDelete]
  -[IMDCKUtilities _serverAllowsRemovalFromBackUp]
  -[IMDCKUtilities fetchCloudKitAccountStatusWithCompletion:]
  -[IMDCKUtilities cacheDeleteEnabled]
  -[IMDCKUtilities _truthContainer]
  -[IMDCKUtilities _checkEligibilityWithAccountInfo:]
  -[IMDCKUtilities _accountInfoWithCompletionHandler:]
  -[IMDCKUtilities _createAccountError:]
  -[IMDCKUtilities _checkEligibilityWithLoggedInAccountWithCompletion:]
  -[IMDCKUtilities fetchSecurityLevelForAccount:withCompletion:]
  -[IMDCKUtilities _accountNeedsRepairOverride]
  -[IMDCKUtilities _setEligibleToToggleMiCSwitch:]
  -[IMDCKUtilities shouldRepairAccountWithDeviceAccountSecurityLevel:serverAccountStatus:]
  -[IMDCKUtilities _primaryiCloudAccountSecurityLevel]
  -[IMDCKUtilities _checkIfEnabledByServerBagOrDefault:]
  -[IMDCKUtilities _isLogDumpAllowed]
  -[IMDCKUtilities logCollectorAddress]
  -[IMDCKUtilities reportMOCDebuggingErrorWithString:internalOnly:initialSync:sendToHandle:]
  -[IMDCKUtilities reportMOCDebuggingErrorWithString:internalOnly:initialSync:sendToHandle:reasonString:]
  -[IMDCKUtilities shouldLogDumpOnCloudKitError]
  -[IMDCKUtilities logDumpAndSendMessageTo:forHours:reason:isInitialSync:requirePreviousPrompt:willSendBlock:]
  -[IMDCKUtilities shouldPresentTTROnCloudKitError]
  -[IMDCKUtilities _askToTapToRadarWithString:internalOnly:]
  -[IMDCKUtilities _mocEnabledStateFromAccountStatus:]
  -[IMDCKUtilities imDefaults]
  -[IMDCKUtilities _isCKErrorPartialFailure:]
  -[IMDCKUtilities _errorsFromPartialError:]
  -[IMDCKUtilities CKPartialError:onlyHasErrorCodes:]
  -[IMDCKUtilities errorIndicatesQuotaExceeded:]
  -[IMDCKUtilities errorIndicatesDeviceConditionsDontAllowSync:]
  -[IMDCKUtilities reportMOCDebuggingErrorWithString:internalOnly:initialSync:]
  -[IMDCKUtilities _shouldiCloudSwitchBeEnabled]
  -[IMDCKUtilities _setiCloudSettingsSwitchEnabled:]
  -[IMDCKUtilities _personIdFromAccount:]
  -[IMDCKUtilities _fetchPrimaryAccountWithCompletion:]
  -[IMDCKUtilities _isSyncingPausedOverride]
  -[IMDCKUtilities _deviceActive]
  -[IMDCKUtilities postSyncStateToCloudKit:useManatee:legacyOnly:]
  -[IMDCKUtilities exitManager]
  -[IMDCKUtilities serverAllowsAnalyticDetailsSubmission]
  -[IMDCKUtilities serverAllowsMetricSubmission]
  -[IMDCKUtilities syncFailureMetricString:isRecoverable:error:]
  -[IMDCKUtilities serverAllowsAnalyticSubmission]
  -[IMDCKUtilities isCKPartialError:]
  -[IMDCKUtilities deviceActiveString]
  -[IMDCKUtilities logToPowerLogForLogDumpGUID:logDumpCompleted:logDumpSucceeded:logDumpSendingCompleted:logDumpSendingSucceeded:reason:]
  -[IMDCKUtilities _showCKLogNotificationWithCompletion:]
  -[IMDCKUtilities deviceConditionsAllowPeriodicSync]
  -[IMDCKUtilities _isRunningInAutomation]
  -[IMDCKUtilities logDumpIsExpected]
  -[IMDCKUtilities ckStatisticCalculations]
  -[IMDCKUtilities _metricForPCSReportManateeStatusWithReason:linkedFunction:timeoutInSec:completion:]
  -[IMDCKUtilities metricForPCSReportManateeStatusWithReason:completion:]
  -[IMDCKUtilities _primaryiCloudAccountAltDSID]
  -[IMDCKUtilities setCloudKitSyncingEnabled:]
  -[IMDCKUtilities deviceSupport]
  -[IMDCKUtilities keyRollPendingStateDidChange]
  -[IMDCKUtilities shouldUseDevContainer]
  -[IMDCKUtilities shouldUseDevNickNameContainer]
  -[IMDCKUtilities shouldForceArchivedMessagesSync]
  -[IMDCKUtilities shouldSyncToSRContainer]
  -[IMDCKUtilities overrideNumberOfChatsToFetch]
  -[IMDCKUtilities overrideNumberOfChatsToWrite]
  -[IMDCKUtilities isFirstSyncWithCompletion:]
  -[IMDCKUtilities checkiCloudQuota:]
  -[IMDCKUtilities cloudKitSyncDownloadAssetsOnly]
  -[IMDCKUtilities enableAttachmentMetricCollection]
  -[IMDCKUtilities removeFromBackUpAllowed]
  -[IMDCKUtilities accountIsVerifiedForMOCAndSafeForCacheDelete]
  -[IMDCKUtilities fetchLocalAccountSecurityLevel:]
  -[IMDCKUtilities shouldCollectDailyLogDump]
  -[IMDCKUtilities shouldCollectDailyLogDumpForRestoreFailures]
  -[IMDCKUtilities reportMOCDebuggingErrorWithString:internalOnly:]
  -[IMDCKUtilities recordNameForMessageWithGUID:usingSalt:]
  -[IMDCKUtilities fetchMOCEnabledStateWithCompletionBlock:]
  -[IMDCKUtilities extractServerRecordFromCKServerErrorRecordChanged:]
  -[IMDCKUtilities CKPartialError:hasErrorCode:]
  -[IMDCKUtilities CKPartialErrorOnlyHasQuotaExceededError:]
  -[IMDCKUtilities isRecoverableCloudKitError:withRetryInterval:]
  -[IMDCKUtilities acceptableErrorCodeWhileDeleting:]
  -[IMDCKUtilities extractRecordIDsDeletedFromCKPartialError:]
  -[IMDCKUtilities errorIndicatesZoneNotCreated:]
  -[IMDCKUtilities errorIndicatesUserDeletedZone:]
  -[IMDCKUtilities resetLastSyncDate]
  -[IMDCKUtilities errorIndicatesChatZoneCreationFailed:]
  -[IMDCKUtilities checkCloudkitEnabledStatusAndToggleiCloudSwitchIfNeeded]
  -[IMDCKUtilities fetchiCloudAccountPersonID:]
  -[IMDCKUtilities primaryAccountHasiCloudBackupEnabledWithCompletion:]
  -[IMDCKUtilities deviceConditions]
  -[IMDCKUtilities newfilteredArrayRemovingCKRecordDupes:]
  -[IMDCKUtilities newfilteredArrayRemovingCKRecordIDDupes:]
  -[IMDCKUtilities lastDeviceBackUpDate]
  -[IMDCKUtilities errorIndicatesIdentityWasLost:]
  -[IMDCKUtilities errorIndicateDeviceDoesNotHaveKeysToSync:]
  -[IMDCKUtilities shouldKickOffWriteForSyncType:]
  -[IMDCKUtilities isLocalCachedSaltPresent]
  -[IMDCKUtilities postSyncStateToCloudKit:]
  -[IMDCKUtilities postSyncStateToCloudKit:useManatee:]
  -[IMDCKUtilities postSyncStateToCloudKit:legacyOnly:]
  -[IMDCKUtilities reportZoneCreation:]
  -[IMDCKUtilities reportErrorForSyncType:syncStep:isRecoverable:error:]
  -[IMDCKUtilities reportCompletionForSyncType:isCoreDuetSync:onAttempt:wasSuccessful:]
  -[IMDCKUtilities findRootCause:]
  -[IMDCKUtilities logDumpAndSendMessageTo:forHours:reason:]
  -[IMDCKUtilities logDumpAndSendMessageTo:forHours:reason:requirePreviousPrompt:willSendBlock:]
  -[IMDCKUtilities logCloudKitSyncToPowerLogForSyncType:isCoreDuetSync:didStartSync:didFinishSync:didSucceedSyncing:]
  -[IMDCKUtilities logCloudKitSyncToPowerLogForSyncType:isCoreDuetSync:didCompleteChatSync:didSucceedSyncingChats:didCompleteMessageSync:didSucceedSyncingMessages:didCompleteAttachmentSync:didSucceedSyncingAttachments:syncAttemptCount:]
  -[IMDCKUtilities logDumpIsNecessaryAfterSync]
  -[IMDCKUtilities submitPCSReportManateeStatuMetricWithPrefix:andReason:]
  -[IMDCKUtilities fetchSecurityLevelAndUpdateMiCSwitchEligibilityIfNeededOnImagentLaunch]
  -[IMDCKUtilities signedIntoiCloudAndiMessageAndiCloudAccountMatchesiMessageAccount]
  -[IMDCKUtilities enableMOCIfNeeded]
  -[IMDCKUtilities downgradingFromHSA2AndDisablingMOC]
  -[IMDCKUtilities eligibleForTruthZoneWithCompletion:]
  -[IMDCKUtilities isInCloudKitDemoMode]
  -[IMDCKUtilities disableAllDevicesWithCompletion:]
  -[IMDCKUtilities accountDSID:]
  -[IMDCKUtilities accountWithDSID:]
  -[IMDCKUtilities setLockdownManager:]
  -[IMDCKUtilities setServerBag:]
  -[IMDCKUtilities setDeviceSupport:]
  -[IMDCKUtilities setImDefaults:]
  -[IMDCKUtilities useDeprecatedApi]
  -[IMDCKUtilities setUseDeprecatedApi:]


IMDMessageHistoryIDSTransactionLogSyncTask : NSObject <IMDMessageHistorySyncTask>
 @property  IMDAccountController *accountController
 @property  NSMutableDictionary *taskGroupedByServiceName
 @property  @? syncTaskCompletionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMDMessageHistoryIDSTransactionLogSyncTask dealloc]
  -[IMDMessageHistoryIDSTransactionLogSyncTask accountController]
  -[IMDMessageHistoryIDSTransactionLogSyncTask setAccountController:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask initWithAccountController:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask setSyncTaskCompletionBlock:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask _setupAndBeginSync]
  -[IMDMessageHistoryIDSTransactionLogSyncTask setTaskGroupedByServiceName:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask _createProcessBatchBlockWithServiceSession:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask _createKnownRecordBlock]
  -[IMDMessageHistoryIDSTransactionLogSyncTask _createSyncCompletionBlockForServiceSession:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask startSyncTask:]
  -[IMDMessageHistoryIDSTransactionLogSyncTask syncTaskType]
  -[IMDMessageHistoryIDSTransactionLogSyncTask taskGroupedByServiceName]
  -[IMDMessageHistoryIDSTransactionLogSyncTask syncTaskCompletionBlock]


IMDMessageHistoryCKChatSyncTask : NSObject <IMDMessageHistorySyncTask>
 @property  @? syncTaskCompletionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMDMessageHistoryCKChatSyncTask dealloc]
  -[IMDMessageHistoryCKChatSyncTask initWithCKSyncController:]
  -[IMDMessageHistoryCKChatSyncTask setSyncTaskCompletionBlock:]
  -[IMDMessageHistoryCKChatSyncTask startSyncTask:]
  -[IMDMessageHistoryCKChatSyncTask syncTaskType]
  -[IMDMessageHistoryCKChatSyncTask syncTaskCompletionBlock]
  -[IMDMessageHistoryCKChatSyncTask _startICloudSync]


IMDCKSyncStatsCollector : NSObject
 @property  NSMutableDictionary *inMemorySyncStatistics

  // class methods
  +[IMDCKSyncStatsCollector sharedInstance]

  // instance methods
  -[IMDCKSyncStatsCollector init]
  -[IMDCKSyncStatsCollector dealloc]
  -[IMDCKSyncStatsCollector inMemorySyncStatistics]
  -[IMDCKSyncStatsCollector _incrementCountsForColumnSyncedKey:syncedColumnAmountToIncrease:totalColumnAmountKey:totalColumnAmountToIncrease:]
  -[IMDCKSyncStatsCollector refreshWithDBSyncStatistics]
  -[IMDCKSyncStatsCollector currentInMemorySyncStatistics]
  -[IMDCKSyncStatsCollector incrementSyncedChatCount:incrementTotalChatCount:]
  -[IMDCKSyncStatsCollector incrementSyncedMessageCount:incrementTotalMessageCount:]
  -[IMDCKSyncStatsCollector incrementSyncedAttachmentCount:incrementTotalAttachmentCount:]
  -[IMDCKSyncStatsCollector setInMemorySyncStatistics:]


IMDCKSyncTokenStore : NSObject <IMDCKSyncTokenStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDCKSyncTokenStore migrateKey:fromDatabase:]
  +[IMDCKSyncTokenStore tokenForKey:]
  +[IMDCKSyncTokenStore persistToken:forKey:]

  // instance methods
  -[IMDCKSyncTokenStore migrateKey:fromDatabase:]
  -[IMDCKSyncTokenStore tokenForKey:]
  -[IMDCKSyncTokenStore persistToken:forKey:]


IMDService : NSObject <IMSystemMonitorListener>
 @property  NSDictionary *serviceProperties
 @property  Class sessionClass
 @property  Class accountClass
 @property  NSBundle *bundle
 @property  NSString *internalName
 @property  NSString *serviceDomain
 @property  BOOL isIDSBased
 @property  BOOL isLegacy
 @property  BOOL discontinued
 @property  NSDictionary *serviceDefaults
 @property  NSDictionary *serviceDefaultsForSetup
 @property  NSDictionary *defaultAccountSettings
 @property  BOOL serviceRequiresSingleAccount
 @property  BOOL shouldCreateActiveAccounts
 @property  BOOL serviceWantsNullHostReachability
 @property  BOOL serviceIgnoresNetworkConnectivity
 @property  BOOL shouldForceAccountsActive
 @property  BOOL shouldForceAccountsConnected
 @property  BOOL serviceNeedsLogin
 @property  BOOL serviceNeedsPassword
 @property  BOOL serviceShouldBeAlwaysLoggedIn
 @property  BOOL serviceRequiresHost
 @property  BOOL serviceSupportsRegistration
 @property  BOOL serviceSupportsAuthorization
 @property  BOOL serviceChatsIgnoreLoginStatus
 @property  BOOL serviceSupportsPresence
 @property  BOOL serviceSupportsOneSessionForAllAccounts
 @property  BOOL supportsDatabase
 @property  BOOL disallowDeactivation
 @property  long long serviceProtocolVersion

  // instance methods
  -[IMDService dealloc]
  -[IMDService initWithBundle:]
  -[IMDService bundle]
  -[IMDService isLegacy]
  -[IMDService internalName]
  -[IMDService systemDidEnterMemoryPressure]
  -[IMDService systemDidStartBackup]
  -[IMDService enableAccount:]
  -[IMDService disableAccount:]
  -[IMDService accountAdded:]
  -[IMDService accountRemoved:]
  -[IMDService serviceDomain]
  -[IMDService accountClass]
  -[IMDService setServiceProperties:]
  -[IMDService isDiscontinued]
  -[IMDService serviceProperties]
  -[IMDService serviceDefaults]
  -[IMDService defaultAccountSettings]
  -[IMDService sessionClass]
  -[IMDService serviceSupportsAuthorization]
  -[IMDService delayedSaveSettings]
  -[IMDService mainService]
  -[IMDService serviceSupportsOneSessionForAllAccounts]
  -[IMDService shouldForceAccountsConnected]
  -[IMDService createDiscontinuedAccount]
  -[IMDService isIDSBased]
  -[IMDService serviceRequiresSingleAccount]
  -[IMDService shouldCreateActiveAccounts]
  -[IMDService disallowDeactivation]
  -[IMDService shouldForceAccountsActive]
  -[IMDService saveSettings]
  -[IMDService serviceSupportsRegistration]
  -[IMDService _copyServicePropertiesFromIMServiceBundle:]
  -[IMDService synchronizeServiceDefaults]
  -[IMDService unloadServiceBundle]
  -[IMDService _reallyUnloadServiceBundle]
  -[IMDService serviceProtocolVersion]
  -[IMDService _serviceDomain]
  -[IMDService oldInternalName]
  -[IMDService loadServiceBundle]
  -[IMDService _defaultDefaults]
  -[IMDService _serviceDefaultsForDomain:]
  -[IMDService _oldServiceDomain]
  -[IMDService purgeMemoryCaches]
  -[IMDService serviceDefaultsForSetup]
  -[IMDService clearOneTimeImportAccounts]
  -[IMDService newAccountWithAccountDefaults:accountID:]
  -[IMDService supportsDatabase]
  -[IMDService serviceIgnoresNetworkConnectivity]
  -[IMDService serviceWantsNullHostReachability]
  -[IMDService serviceNeedsLogin]
  -[IMDService serviceNeedsPassword]
  -[IMDService serviceShouldBeAlwaysLoggedIn]
  -[IMDService serviceRequiresHost]
  -[IMDService serviceChatsIgnoreLoginStatus]
  -[IMDService serviceSupportsPresence]


IMDOneTimeCodeManager : NSObject
 @property  NSArray *validCodes
 @property  NSTimer *codeInvalidationTimer
 @property  <IMDaemonListenerProtocol> *broadcaster
 @property  <IMDaemonListenerProtocol> *broadcasterOverride
 @property  IMOneTimeCodeUtilities *otcUtilities

  // class methods
  +[IMDOneTimeCodeManager sharedInstance]

  // instance methods
  -[IMDOneTimeCodeManager init]
  -[IMDOneTimeCodeManager dealloc]
  -[IMDOneTimeCodeManager consumeCodeWithGuid:]
  -[IMDOneTimeCodeManager setValidCodes:]
  -[IMDOneTimeCodeManager setOtcUtilities:]
  -[IMDOneTimeCodeManager setBroadcasterOverride:]
  -[IMDOneTimeCodeManager initWithBroadcaster:otcUtilities:]
  -[IMDOneTimeCodeManager codeInvalidationTimer]
  -[IMDOneTimeCodeManager setCodeInvalidationTimer:]
  -[IMDOneTimeCodeManager setBroadcaster:]
  -[IMDOneTimeCodeManager otcUtilities]
  -[IMDOneTimeCodeManager _setNewCodeAndPrepareInvalidationTimer:]
  -[IMDOneTimeCodeManager broadcastCodeStatusToClients]
  -[IMDOneTimeCodeManager broadcaster]
  -[IMDOneTimeCodeManager validCodes]
  -[IMDOneTimeCodeManager broadcasterOverride]
  -[IMDOneTimeCodeManager startTrackingCode:]


IMDInternalPhishingController : NSObject
 @property  IMRemoteURLConnection *remoteURLConnection
 @property  NSArray *blacklist
 @property  double lastBlacklistSync
 @property  NSObject<OS_dispatch_queue> *blacklistDiskQueue

  // class methods
  +[IMDInternalPhishingController sharedInstance]
  +[IMDInternalPhishingController _isAppleInternal]
  +[IMDInternalPhishingController _hasAppleConnect]
  +[IMDInternalPhishingController allowPhishingCheck]

  // instance methods
  -[IMDInternalPhishingController init]
  -[IMDInternalPhishingController dealloc]
  -[IMDInternalPhishingController _endpoint]
  -[IMDInternalPhishingController setBlacklist:]
  -[IMDInternalPhishingController blacklist]
  -[IMDInternalPhishingController remoteURLConnection]
  -[IMDInternalPhishingController setBlacklistDiskQueue:]
  -[IMDInternalPhishingController loadBlacklistFromDiskAsync:]
  -[IMDInternalPhishingController fetchBlacklistFromNetworkWithCompletion:]
  -[IMDInternalPhishingController blacklistDiskQueue]
  -[IMDInternalPhishingController lastBlacklistSync]
  -[IMDInternalPhishingController setLastBlacklistSync:]
  -[IMDInternalPhishingController setRemoteURLConnection:]
  -[IMDInternalPhishingController _apiKey]
  -[IMDInternalPhishingController _persistBlacklist:]
  -[IMDInternalPhishingController blacklistMessage:]


IMDSoundUtilities : NSObject
  // class methods
  +[IMDSoundUtilities _soundTypeForMessage:]
  +[IMDSoundUtilities _playSoundType:]
  +[IMDSoundUtilities _smsSoundsToPlay]
  +[IMDSoundUtilities _isSMSMessage:]
  +[IMDSoundUtilities _wasDowngraded:]
  +[IMDSoundUtilities _isSuppressedForGUID:]
  +[IMDSoundUtilities _stopSuppressingForGUID:]
  +[IMDSoundUtilities _isAssociatedMessage:]
  +[IMDSoundUtilities _isAcknowledgmentMessage:]
  +[IMDSoundUtilities _isAutoPlay:]
  +[IMDSoundUtilities _playSMSSound]
  +[IMDSoundUtilities _playAcknowledgmentSentSound]
  +[IMDSoundUtilities playMessageSentSoundIfNeeded:]
  +[IMDSoundUtilities _installSystemSound:]


IMDMessageProcessingController : NSObject
 @property  <IMDMessagePTaskStore> *pTaskStore
 @property  NSTimer *processingTimer

  // instance methods
  -[IMDMessageProcessingController init]
  -[IMDMessageProcessingController dealloc]
  -[IMDMessageProcessingController messageProcessingTaskAdded:]
  -[IMDMessageProcessingController initWithMessagesPTaskStore:]
  -[IMDMessageProcessingController _scheduleDeferredProcessingWithTimeInterval:]
  -[IMDMessageProcessingController _processingTimerFired]
  -[IMDMessageProcessingController _indexSpotlightIfNeedForPTask:]
  -[IMDMessageProcessingController _pref_IMDCoreSpotlightHasMigrated]
  -[IMDMessageProcessingController _xpc_IMDCoreSpotlightAddMessageGUID:]
  -[IMDMessageProcessingController scheduleInitialProcessingCheck]
  -[IMDMessageProcessingController pTaskStore]
  -[IMDMessageProcessingController setPTaskStore:]
  -[IMDMessageProcessingController processingTimer]
  -[IMDMessageProcessingController setProcessingTimer:]


IMDSpamMessageCreator : NSObject
  // instance methods
  -[IMDSpamMessageCreator transferForGuid:]
  -[IMDSpamMessageCreator surfURLForIMMessageItem:]
  -[IMDSpamMessageCreator metaDataForSurfURL:]
  -[IMDSpamMessageCreator isSurfPayment:]
  -[IMDSpamMessageCreator hasDataDetectedInformalPayment:]
  -[IMDSpamMessageCreator reportUnknownToIDS:messageID:messageServerTimestamp:toURI:]
  -[IMDSpamMessageCreator reportMessageDictionaryForMessages:withLastAddressedHandle:maxMessageLength:isAutoReport:withChat:maxMessagesToReport:totalMessageCount:onlyReportForiMessageService:notifyInternalSecurity:]


IMDServiceSession : NSObject <IMSystemMonitorListener, IMConnectionMonitorDelegate, IMServiceSessionProtocol>
 @property  NSArray *allBuddies
 @property  NSDictionary *buddyProperties
 @property  NSDictionary *buddyPictures
 @property  int registrationStatus
 @property  int registrationError
 @property  NSDictionary *registrationAlertInfo
 @property  IMDAccount *account
 @property  IMDService *service
 @property  NSArray *accounts
 @property  NSString *accountID
 @property  NSString *password
 @property  NSDictionary *accountDefaults
 @property  NSString *serverHost
 @property  unsigned short serverPort
 @property  long long proxyType
 @property  NSString *proxyHost
 @property  unsigned short proxyPort
 @property  NSString *proxyAccount
 @property  NSString *proxyPassword
 @property  BOOL useSSL
 @property  BOOL isActive
 @property  NSString *displayName
 @property  BOOL accountNeedsLogin
 @property  BOOL accountNeedsPassword
 @property  BOOL accountShouldBeAlwaysLoggedIn
 @property  BOOL allowedAsChild
 @property  BOOL networkConditionsAllowLogin
 @property  BOOL overrideNetworkAvailability

  // class methods
  +[IMDServiceSession initialize]
  +[IMDServiceSession existingServiceSessionForService:]
  +[IMDServiceSession __allServiceSessionsWeakReferenceArray]
  +[IMDServiceSession allServiceSessions]
  +[IMDServiceSession __registerNewServiceSession:]
  +[IMDServiceSession _firewallUserNotificationForService:]

  // instance methods
  -[IMDServiceSession dealloc]
  -[IMDServiceSession password]
  -[IMDServiceSession isActive]
  -[IMDServiceSession displayName]
  -[IMDServiceSession server]
  -[IMDServiceSession account]
  -[IMDServiceSession service]
  -[IMDServiceSession proxyPort]
  -[IMDServiceSession proxyType]
  -[IMDServiceSession proxyPassword]
  -[IMDServiceSession useSSL]
  -[IMDServiceSession accounts]
  -[IMDServiceSession groups]
  -[IMDServiceSession _watchdogTimerFired]
  -[IMDServiceSession serverPort]
  -[IMDServiceSession _isActivated]
  -[IMDServiceSession accountID]
  -[IMDServiceSession capabilities]
  -[IMDServiceSession systemProxySettingsFetcher:retrievedHost:port:protocol:]
  -[IMDServiceSession systemProxySettingsFetcher:retrievedAccount:password:]
  -[IMDServiceSession systemDidUnlock]
  -[IMDServiceSession connectionMonitorDidUpdate:]
  -[IMDServiceSession userNotificationDidFinish:]
  -[IMDServiceSession addAccount:]
  -[IMDServiceSession removeAccount:]
  -[IMDServiceSession authenticateAccount:]
  -[IMDServiceSession registerAccount:]
  -[IMDServiceSession unregisterAccount:]
  -[IMDServiceSession registrationStatus]
  -[IMDServiceSession scheduleTransactionLogTask:]
  -[IMDServiceSession loginID]
  -[IMDServiceSession registrationError]
  -[IMDServiceSession registrationAlertInfo]
  -[IMDServiceSession setIdleTime:]
  -[IMDServiceSession eagerUploadCancel:]
  -[IMDServiceSession eagerUploadTransfer:]
  -[IMDServiceSession hasCapability:]
  -[IMDServiceSession serverHost]
  -[IMDServiceSession login]
  -[IMDServiceSession logout]
  -[IMDServiceSession canonicalFormOfID:]
  -[IMDServiceSession equalID:andID:]
  -[IMDServiceSession blockIdleStatus]
  -[IMDServiceSession setBlockIdleStatus:]
  -[IMDServiceSession blockingMode]
  -[IMDServiceSession blockList]
  -[IMDServiceSession allowList]
  -[IMDServiceSession setBlockList:]
  -[IMDServiceSession setBlockingMode:]
  -[IMDServiceSession setAllowList:]
  -[IMDServiceSession requestGroups]
  -[IMDServiceSession defaultChatSuffix]
  -[IMDServiceSession updateAuthorizationCredentials:token:account:]
  -[IMDServiceSession addAliases:account:]
  -[IMDServiceSession removeAliases:account:]
  -[IMDServiceSession unvalidateAliases:account:]
  -[IMDServiceSession validateAliases:account:]
  -[IMDServiceSession autoLogin]
  -[IMDServiceSession renameGroup:to:]
  -[IMDServiceSession holdBuddyUpdates]
  -[IMDServiceSession resumeBuddyUpdates]
  -[IMDServiceSession validityOfChatRoomName:]
  -[IMDServiceSession sendSavedReceiptForMessage:toChatID:identifier:style:account:]
  -[IMDServiceSession _managedPrefsNotification:]
  -[IMDServiceSession accountDefaults]
  -[IMDServiceSession accountDefaultsChanged:]
  -[IMDServiceSession buddyProperties]
  -[IMDServiceSession initWithAccount:service:]
  -[IMDServiceSession sessionDidBecomeActive]
  -[IMDServiceSession changeMyStatus:changedKeys:]
  -[IMDServiceSession sessionWillBecomeInactiveWithAccount:]
  -[IMDServiceSession __forceSetLoginStatus:oldStatus:message:reason:properties:account:]
  -[IMDServiceSession setRegistrationStatus:error:alertInfo:]
  -[IMDServiceSession loginWithAccount:]
  -[IMDServiceSession sendLogDumpMessageAtFilePath:toRecipient:shouldDeleteFile:withCompletion:]
  -[IMDServiceSession replayMessage:]
  -[IMDServiceSession enqueReplayMessageCallback:]
  -[IMDServiceSession otcUtilities]
  -[IMDServiceSession broadcaster]
  -[IMDServiceSession _setAutoReconnectTimer]
  -[IMDServiceSession _newHashForChat:style:]
  -[IMDServiceSession _networkChanged:]
  -[IMDServiceSession _callMonitorStateChanged:]
  -[IMDServiceSession _processConnectionMonitorUpdate]
  -[IMDServiceSession _abandonSystemProxySettingsFetcher]
  -[IMDServiceSession _abandonPWFetcher]
  -[IMDServiceSession _clearAutoReconnectTimer]
  -[IMDServiceSession _clearConnectionMonitor]
  -[IMDServiceSession _updateConnectionMonitorFromAccountDefaultsIgnoringProxy:]
  -[IMDServiceSession _updateWatchdogTimerWithInterval:]
  -[IMDServiceSession leaveAllChats]
  -[IMDServiceSession _updateConnectionMonitorWithRemoteHost:]
  -[IMDServiceSession _reconnectIfNecessaryWithAccount:]
  -[IMDServiceSession accountShouldBeAlwaysLoggedIn]
  -[IMDServiceSession _doLoginIgnoringProxy:withAccount:]
  -[IMDServiceSession overrideNetworkAvailability]
  -[IMDServiceSession logoutServiceSessionWithAccount:]
  -[IMDServiceSession processNetworkDataAvailabilityChange:]
  -[IMDServiceSession _setPendingConnectionMonitorUpdate]
  -[IMDServiceSession _processPotentialNetworkChange]
  -[IMDServiceSession autoReconnectWithAccount:]
  -[IMDServiceSession allowedAsChild]
  -[IMDServiceSession broadcasterForListenersWithCapabilities:]
  -[IMDServiceSession endMessageSuppression]
  -[IMDServiceSession chatForChatIdentifier:style:]
  -[IMDServiceSession broadcasterForChatListeners]
  -[IMDServiceSession autoReconnect]
  -[IMDServiceSession logoutWithAccount:]
  -[IMDServiceSession changeGroups:]
  -[IMDServiceSession changeGroup:changes:]
  -[IMDServiceSession acceptSubscriptionRequest:from:]
  -[IMDServiceSession requestSubscriptionTo:]
  -[IMDServiceSession startWatchingBuddy:]
  -[IMDServiceSession stopWatchingBuddy:]
  -[IMDServiceSession requestProperty:ofPerson:]
  -[IMDServiceSession setValue:ofProperty:ofPerson:]
  -[IMDServiceSession joinChatID:handleInfo:identifier:style:groupID:lastAddressedHandle:lastAddressedSIMID:joinProperties:]
  -[IMDServiceSession leaveChatID:identifier:style:]
  -[IMDServiceSession leaveiMessageChatID:identifier:style:]
  -[IMDServiceSession removeChatID:identifier:style:]
  -[IMDServiceSession invitePersonInfo:withMessage:toChatID:identifier:style:]
  -[IMDServiceSession invitePersonInfoToiMessageChat:withMessage:toChatID:identifier:style:]
  -[IMDServiceSession removePersonInfo:chatID:identifier:style:]
  -[IMDServiceSession removePersonInfoFromiMessageChat:chatID:identifier:style:]
  -[IMDServiceSession declineInvitationToChatID:identifier:style:]
  -[IMDServiceSession updateDisplayName:fromDisplayName:forChatID:identifier:style:]
  -[IMDServiceSession sendMessage:toChatID:identifier:style:]
  -[IMDServiceSession sendReadReceiptForMessage:toChatID:identifier:style:]
  -[IMDServiceSession sendPlayedReceiptForMessage:toChatID:identifier:style:]
  -[IMDServiceSession sendSavedReceiptForMessage:toChatID:identifier:style:]
  -[IMDServiceSession noteMessagesMarkedAsReadForChatWithGUID:]
  -[IMDServiceSession setProperties:ofParticipant:inChatID:identifier:style:]
  -[IMDServiceSession passwordUpdatedWithAccount:]
  -[IMDServiceSession sendFileTransfer:toPerson:]
  -[IMDServiceSession sendCommand:withProperties:toPerson:]
  -[IMDServiceSession sendCommand:withProperties:toPerson:toChatID:identifier:style:]
  -[IMDServiceSession sendDeleteCommand:forChatGUID:]
  -[IMDServiceSession requestVCWithPerson:properties:conference:]
  -[IMDServiceSession respondToVCInvitationWithPerson:properties:conference:]
  -[IMDServiceSession sendCounterProposalToPerson:properties:conference:]
  -[IMDServiceSession sendVCUpdate:toPerson:conference:]
  -[IMDServiceSession sendAVMessageToPerson:sessionID:type:userInfo:conference:]
  -[IMDServiceSession relay:sendInitateRequest:toPerson:]
  -[IMDServiceSession relay:sendUpdate:toPerson:]
  -[IMDServiceSession relay:sendCancel:toPerson:]
  -[IMDServiceSession validateProfileWithAccount:]
  -[IMDServiceSession closeSessionChatID:identifier:style:]
  -[IMDServiceSession sendNicknameUpdatesToPeerDevices:toDestinations:]
  -[IMDServiceSession sendNicknameInfoToChatID:]
  -[IMDServiceSession accountNeedsLogin]
  -[IMDServiceSession accountNeedsPassword]
  -[IMDServiceSession updateConnectionMonitorWithLocalSocketAddress:remoteSocketAddress:]
  -[IMDServiceSession _reconnectIfNecessary]
  -[IMDServiceSession networkConditionsAllowLogin]
  -[IMDServiceSession canonicalFormOfChatRoom:]
  -[IMDServiceSession refreshServiceCapabilities]
  -[IMDServiceSession broadcasterForChatObserverListeners]
  -[IMDServiceSession broadcasterForAVConferenceListeners]
  -[IMDServiceSession broadcasterForACConferenceListeners]
  -[IMDServiceSession broadcasterForVCConferenceListeners]
  -[IMDServiceSession _clearDowngradeMarkersForChat:]
  -[IMDServiceSession proxyHost]
  -[IMDServiceSession proxyAccount]
  -[IMDServiceSession autoReplier:generatedAutoReplyText:forChat:]
  -[IMDServiceSession autoReplier:receivedUrgentRequestForMessages:]
  -[IMDServiceSession didReceiveMessage:forChat:style:]
  -[IMDServiceSession _sharedMessageStore]
  -[IMDServiceSession _updateRoutingTimerWithInterval:]
  -[IMDServiceSession _updateExpireStateTimerWithInterval:]
  -[IMDServiceSession didJoinChat:style:displayName:groupID:handleInfo:account:isBlackholed:]
  -[IMDServiceSession sendLocationSharingInfo:toID:completionBlock:]
  -[IMDServiceSession registerChat:style:displayName:groupID:handleInfo:]
  -[IMDServiceSession registerChat:style:displayName:groupID:handleInfo:account:]
  -[IMDServiceSession registerChat:style:displayName:groupID:lastAddressedHandle:handleInfo:account:isBlackholed:]
  -[IMDServiceSession registerChat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:account:isBlackholed:]
  -[IMDServiceSession canonicalizeChatIdentifier:style:]
  -[IMDServiceSession shouldImitateGroupChatUsingChatRooms]
  -[IMDServiceSession chatRoomForGroupChatIdentifier:]
  -[IMDServiceSession groupChatIdentifierForChatRoom:]
  -[IMDServiceSession chatForChatIdentifier:style:account:]
  -[IMDServiceSession processMessageForSending:toChat:style:allowWatchdog:account:completionBlock:]
  -[IMDServiceSession _mapRoomChatToGroupChat:style:]
  -[IMDServiceSession _updateWatchdogForMessageGUID:]
  -[IMDServiceSession _IMDStoreMessage:inMessage:forceReplace:modifyError:modifyFlags:calculateUnreadCount:flagMask:shouldStoreBlock:didStoreBlock:block:]
  -[IMDServiceSession sendMessage:toChat:style:account:]
  -[IMDServiceSession didSendMessageReadReceiptForMessageID:account:]
  -[IMDServiceSession didSendMessagePlayedReceiptForMessageID:account:]
  -[IMDServiceSession didSendMessageSavedReceiptForMessageID:account:]
  -[IMDServiceSession didLeaveChat:style:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:handleInfo:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:account:]
  -[IMDServiceSession didJoinChat:style:displayName:groupID:handleInfo:]
  -[IMDServiceSession didJoinChat:style:displayName:groupID:lastAddressedHandle:handleInfo:]
  -[IMDServiceSession didJoinChat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:account:isSpam:spamExtensionName:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:account:isBlackholed:]
  -[IMDServiceSession isAwaitingStorageTimer]
  -[IMDServiceSession didReceiveError:forMessageID:forceError:account:]
  -[IMDServiceSession noteSuppressedMessageUpdate:]
  -[IMDServiceSession _updateExpireStateForMessageGUID:]
  -[IMDServiceSession _didReceiveMessageDeliveryReceiptForMessageID:attempts:date:account:]
  -[IMDServiceSession _hasSuppressedMessageID:chatGUID:]
  -[IMDServiceSession _didReceiveMessageReadForMessageID:date:attempts:useMessageSuppression:completionBlock:]
  -[IMDServiceSession didReceiveMessageReadForMessageID:date:useMessageSuppression:completionBlock:]
  -[IMDServiceSession _didReceiveMessageReadReceiptForMessageID:date:attempts:completionBlock:]
  -[IMDServiceSession _didReceiveMessagePlayedForMessageID:date:attempts:useMessageSuppression:completionBlock:]
  -[IMDServiceSession didReceiveMessagePlayedForMessageID:date:useMessageSuppression:completionBlock:]
  -[IMDServiceSession _didReceiveMessagePlayedReceiptForMessageID:date:attempts:completionBlock:]
  -[IMDServiceSession _didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:attempts:useMessageSuppression:account:completionBlock:]
  -[IMDServiceSession didSendMessage:forChat:style:forceDate:]
  -[IMDServiceSession didSendMessage:forChat:style:account:forceDate:]
  -[IMDServiceSession didSendMessage:forChat:style:account:forceDate:itemIsComingFromStorage:]
  -[IMDServiceSession loginIDForAccount:]
  -[IMDServiceSession _updateRoutingForMessageGUID:chatGUID:error:account:]
  -[IMDServiceSession notifyDidSendMessageID:shouldNotify:]
  -[IMDServiceSession notifyDidSendMessageID:account:shouldNotify:]
  -[IMDServiceSession _endMessageSuppressionForChatGUID:]
  -[IMDServiceSession didReceiveMessage:forChat:style:account:]
  -[IMDServiceSession didReceiveMessages:forChat:style:account:]
  -[IMDServiceSession _setReplyGUIDOnMessage:forChat:]
  -[IMDServiceSession _setSortIDForMessage:forChat:]
  -[IMDServiceSession _storeMessage:chatIdentifier:localChat:style:account:messagesToPostArray:]
  -[IMDServiceSession _transcodeController]
  -[IMDServiceSession testOverrideTextValidationDidFail]
  -[IMDServiceSession _autoReplier]
  -[IMDServiceSession _updateInputMessage:forExistingMessage:]
  -[IMDServiceSession _suppresionTimerFired:]
  -[IMDServiceSession _setSuppressedMessage:inChatWithGUID:]
  -[IMDServiceSession _checkMessageForOneTimeCodes:]
  -[IMDServiceSession useChatRoom:forGroupChatIdentifier:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:handleInfo:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:account:isBlackholed:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:account:isSpam:spamExtensionName:isBlackholed:]
  -[IMDServiceSession unregisterChat:style:]
  -[IMDServiceSession didChangeMemberStatus:forHandle:unformattedNumber:countryCode:forChat:style:]
  -[IMDServiceSession didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:]
  -[IMDServiceSession didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:]
  -[IMDServiceSession didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:destinationCallerID:]
  -[IMDServiceSession _sharedAccountController]
  -[IMDServiceSession sendMessage:toChat:style:]
  -[IMDServiceSession _markChatAsDowngraded:]
  -[IMDServiceSession _handleRoutingWithDictionary:]
  -[IMDServiceSession _routingTimerFired]
  -[IMDServiceSession canMakeExpireStateChecks]
  -[IMDServiceSession _handleExpireStateDictionary:]
  -[IMDServiceSession _expireStateTimerFired]
  -[IMDServiceSession _handleWatchdogWithDictionary:]
  -[IMDServiceSession _storageTimerFired]
  -[IMDServiceSession pendingReadReceiptFromStorageCount]
  -[IMDServiceSession setPendingReadReceiptFromStorageCount:]
  -[IMDServiceSession _updateStorageTimerWithInterval:]
  -[IMDServiceSession noteLastItemProcessed]
  -[IMDServiceSession _postMessagesFromStorage:]
  -[IMDServiceSession registerChat:groupID:style:]
  -[IMDServiceSession registerChat:style:]
  -[IMDServiceSession registerChat:style:handleInfo:]
  -[IMDServiceSession isChatRegistered:style:]
  -[IMDServiceSession processMessageForSending:toChat:style:allowWatchdog:completionBlock:]
  -[IMDServiceSession didLeaveChat:style:account:]
  -[IMDServiceSession didJoinChat:style:]
  -[IMDServiceSession didJoinChat:style:handleInfo:]
  -[IMDServiceSession didJoinChat:style:handleInfo:account:]
  -[IMDServiceSession didJoinChat:style:displayName:groupID:handleInfo:isSpam:spamExtensionName:]
  -[IMDServiceSession didReceiveReplaceMessageID:forChat:style:]
  -[IMDServiceSession didReceiveErrorMessage:forChat:style:]
  -[IMDServiceSession didReceiveError:forMessageID:forceError:]
  -[IMDServiceSession didSendMessageReadReceiptForMessageID:]
  -[IMDServiceSession didSendMessagePlayedReceiptForMessageID:]
  -[IMDServiceSession didSendMessageSavedReceiptForMessageID:]
  -[IMDServiceSession didReceiveMessageDeliveryReceiptForMessageID:date:]
  -[IMDServiceSession didReceiveMessageDeliveryReceiptForMessageID:date:account:]
  -[IMDServiceSession updateChatGUID:withLastReadTimeStamp:withLastSeenMessageGUID:fromMe:]
  -[IMDServiceSession didReceiveMessageReadForMessageID:date:completionBlock:]
  -[IMDServiceSession didReceiveMessageReadReceiptForMessageID:date:completionBlock:]
  -[IMDServiceSession didReceiveMessagePlayedForMessageID:date:completionBlock:]
  -[IMDServiceSession didReceiveMessagePlayedReceiptForMessageID:date:completionBlock:]
  -[IMDServiceSession didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:completionBlock:]
  -[IMDServiceSession didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:useMessageSuppression:account:completionBlock:]
  -[IMDServiceSession didSendMessage:forChat:style:]
  -[IMDServiceSession notifyDidSendMessageID:]
  -[IMDServiceSession didReceiveDisplayNameChange:fromID:toIdentifier:forChat:style:account:]
  -[IMDServiceSession didReceiveInvitation:forChat:style:]
  -[IMDServiceSession didUpdateChatStatus:chat:style:]
  -[IMDServiceSession didChangeMemberStatus:forHandle:forChat:style:]
  -[IMDServiceSession didSendBalloonPayload:forChat:style:messageGUID:account:completionBlock:]
  -[IMDServiceSession didReceiveBalloonPayload:forChat:style:messageGUID:account:]
  -[IMDServiceSession noteItemFromStorage:]
  -[IMDServiceSession noteLastItemFromStorage:]
  -[IMDServiceSession incrementPendingReadReceiptFromStorageCount]
  -[IMDServiceSession decrementPendingReadReceiptFromStorageCount]
  -[IMDServiceSession beginBuddyChanges]
  -[IMDServiceSession endBuddyChanges]
  -[IMDServiceSession localPropertiesOfBuddy:]
  -[IMDServiceSession buddyPictures]
  -[IMDServiceSession pictureOfBuddy:]
  -[IMDServiceSession pictureKeyForBuddy:]
  -[IMDServiceSession allBuddies]
  -[IMDServiceSession markBuddiesAsChanged:]
  -[IMDServiceSession changeProperty:ofBuddy:to:]
  -[IMDServiceSession clearPropertiesOfBuddy:]
  -[IMDServiceSession property:ofBuddy:]
  -[IMDServiceSession localProperty:ofBuddy:]
  -[IMDServiceSession clearLocalProperties]
  -[IMDServiceSession changeLocalProperty:ofBuddy:to:]
  -[IMDServiceSession disallowReconnection]
  -[IMDServiceSession joinChat:style:groupID:joinProperties:]
  -[IMDServiceSession invitePersonInfo:withMessage:toChat:style:]
  -[IMDServiceSession invitePerson:withMessage:toChat:style:]
  -[IMDServiceSession invitePersonInfoToiMessageChat:withMessage:toChat:style:]
  -[IMDServiceSession joinChat:handleInfo:style:groupID:lastAddressedHandle:lastAddressedSIMID:joinProperties:]
  -[IMDServiceSession leaveChat:style:]
  -[IMDServiceSession leaveiMessageChat:style:]
  -[IMDServiceSession removeChat:style:]
  -[IMDServiceSession declineInvitationToChat:style:]
  -[IMDServiceSession setProperties:ofParticipant:inChat:style:]
  -[IMDServiceSession closeSessionChat:style:]
  -[IMDServiceSession noteBadPassword]
  -[IMDServiceSession loginServiceSessionWithAccount:]
  -[IMDServiceSession joinChat:style:joinProperties:]
  -[IMDServiceSession joinChat:handleInfo:style:groupID:joinProperties:]
  -[IMDServiceSession cancelVCRequestWithPerson:properties:conference:]
  -[IMDServiceSession _handleFirewallUserNotificationDidFinish:]
  -[IMDServiceSession warnIfPortBlocked:forAction:]
  -[IMDServiceSession _login_serverSettingsReadyWithAccount:]
  -[IMDServiceSession _data_connection_readyWithAccount:]
  -[IMDServiceSession _login_usernameAndPasswordReadyWithAccount:]
  -[IMDServiceSession _login_checkUsernameAndPasswordWithAccount:]
  -[IMDServiceSession _doLoginIgnoringProxy:]
  -[IMDServiceSession _wentOfflineWithAccount:]
  -[IMDServiceSession serviceSessionDidLoginWithAccount:]
  -[IMDServiceSession serviceSessionDidLogoutWithAccount:]
  -[IMDServiceSession serviceSessionDidLogoutWithMessage:reason:properties:account:]
  -[IMDServiceSession _autoReconnectTimer:]


IMDCarAutoReplierChatProperties : NSObject
 @property  BOOL autoReplySent
 @property  BOOL urgent

  // instance methods
  -[IMDCarAutoReplierChatProperties init]
  -[IMDCarAutoReplierChatProperties dealloc]
  -[IMDCarAutoReplierChatProperties addSuppressedMessage:]
  -[IMDCarAutoReplierChatProperties popSuppressedMessages]
  -[IMDCarAutoReplierChatProperties autoReplySent]
  -[IMDCarAutoReplierChatProperties setAutoReplySent:]
  -[IMDCarAutoReplierChatProperties isUrgent]
  -[IMDCarAutoReplierChatProperties setUrgent:]


IMDCarAutoReplier : NSObject <IMDAutoReplying>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  CARAutomaticDNDStatus *automaticDNDStatus
 @property  NSMutableDictionary *propertiesForChatIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <IMDAutoReplyDelegate> *replyDelegate

  // instance methods
  -[IMDCarAutoReplier init]
  -[IMDCarAutoReplier dealloc]
  -[IMDCarAutoReplier setQueue:]
  -[IMDCarAutoReplier queue]
  -[IMDCarAutoReplier _isActive]
  -[IMDCarAutoReplier setReplyDelegate:]
  -[IMDCarAutoReplier _updateDNDStatus]
  -[IMDCarAutoReplier automaticDNDStatus]
  -[IMDCarAutoReplier propertiesForChatIdentifiers]
  -[IMDCarAutoReplier _favoritesContainsParticipants:]
  -[IMDCarAutoReplier _hasRecentOutgoingMessagesInChat:]
  -[IMDCarAutoReplier _contactsContainsParticipants:]
  -[IMDCarAutoReplier _autoReplyAudiencePreference]
  -[IMDCarAutoReplier _urgentTriggerMatchInText:]
  -[IMDCarAutoReplier _propertiesForChat:]
  -[IMDCarAutoReplier _audience:allowsRepliesToChat:]
  -[IMDCarAutoReplier _customizedAutoReplyMessage]
  -[IMDCarAutoReplier _handleGeneratedAutoReplyText:forChat:]
  -[IMDCarAutoReplier _handleReceivedUrgentRequestForMessages:]
  -[IMDCarAutoReplier processMessages:inChat:]
  -[IMDCarAutoReplier replyDelegate]
  -[IMDCarAutoReplier setAutomaticDNDStatus:]


IMDSpamController : NSObject
 @property  NSMutableDictionary *chatGUIDToSpamCheckTimerMap
 @property  NSMutableDictionary *chatGUIDToCountMap
 @property  double spamExtensionCutoffTime

  // class methods
  +[IMDSpamController sharedInstance]

  // instance methods
  -[IMDSpamController init]
  -[IMDSpamController dealloc]
  -[IMDSpamController _isDisabled]
  -[IMDSpamController chatRegistry]
  -[IMDSpamController setChatGUIDToSpamCheckTimerMap:]
  -[IMDSpamController setChatGUIDToCountMap:]
  -[IMDSpamController setSpamExtensionCutoffTime:]
  -[IMDSpamController _spamCheckTimerFired:]
  -[IMDSpamController detectSpam:chatGUID:]
  -[IMDSpamController chatGUIDToCountMap]
  -[IMDSpamController _updateSpamCheckTimerWithInterval:forChatGUID:]
  -[IMDSpamController __queryServerForID:count:completion:]
  -[IMDSpamController shouldCheckForSpamWithExtensionInChat:fromIdentifier:toIdentifier:]
  -[IMDSpamController checkForSpamWithExtensionInChat:forMessageBody:sender:withCompletion:]
  -[IMDSpamController chatGUIDToSpamCheckTimerMap]
  -[IMDSpamController spamExtensionCutoffTime]


IMDCKExitManager : IMDCKAbstractSyncController
 @property  CKRecordID *exitRecordID
 @property  NSNumber *saltZoneCreatedOverride
 @property  NSNumber *subscriptionCreatedOverride
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  IMDRecordZoneManager *recordZoneManager
 @property  IMDCKDatabaseManager *databaseManager
 @property  NSDate *exitRecordDate
 @property  NSError *errorFetchingExitDate
 @property  BOOL fetchedExitDateOnLaunch

  // class methods
  +[IMDCKExitManager sharedInstance]

  // instance methods
  -[IMDCKExitManager init]
  -[IMDCKExitManager dealloc]
  -[IMDCKExitManager _scheduleOperation:]
  -[IMDCKExitManager databaseManager]
  -[IMDCKExitManager setDatabaseManager:]
  -[IMDCKExitManager setRecordZoneManager:]
  -[IMDCKExitManager recordZoneManager]
  -[IMDCKExitManager submitCloudKitMetricWithOperationGroupName:useManatee:]
  -[IMDCKExitManager submitCloudKitAnalyticWithOperationGroupName:useManatee:analyticDictionary:]
  -[IMDCKExitManager writeExitRecordWithDate:completion:]
  -[IMDCKExitManager initRecordZoneManager:databaseManager:]
  -[IMDCKExitManager _setUpSubscription]
  -[IMDCKExitManager ckQueue]
  -[IMDCKExitManager exitRecordDate]
  -[IMDCKExitManager errorFetchingExitDate]
  -[IMDCKExitManager _fetchExitRecordDateWithCompletion:]
  -[IMDCKExitManager _saltZoneCreated]
  -[IMDCKExitManager _subscriptionCreated]
  -[IMDCKExitManager exitRecordID]
  -[IMDCKExitManager exitConfiguration]
  -[IMDCKExitManager setExitRecordDate:]
  -[IMDCKExitManager setErrorFetchingExitDate:]
  -[IMDCKExitManager fetchedExitDateOnLaunch]
  -[IMDCKExitManager setFetchedExitDateOnLaunch:]
  -[IMDCKExitManager _evalToggleiCloudSettingsSwitch]
  -[IMDCKExitManager derivedQualityOfService]
  -[IMDCKExitManager writeSyncCompletedRecordWithDate:useManatee:completion:]
  -[IMDCKExitManager submitCloudKitMetricWithData:operationGroupName:useManatee:completion:]
  -[IMDCKExitManager _analyticZoneCreated]
  -[IMDCKExitManager submitCloudKitAnalyticWithDictionary:operationGroupName:useManatee:completion:]
  -[IMDCKExitManager _sharedCKUtilities]
  -[IMDCKExitManager _scheduleMetricOperation:useManate:]
  -[IMDCKExitManager _canSubmitCloudKitMetric]
  -[IMDCKExitManager _modifiedOpGroupName:useManatee:]
  -[IMDCKExitManager syncCompleteRecordID]
  -[IMDCKExitManager _submitCloudKitMetricWithOperationGroupName:record:useManatee:ignoreZoneNotFoundError:completion:]
  -[IMDCKExitManager _canSubmitCloudKitAnalytic]
  -[IMDCKExitManager analyticZoneRecordID]
  -[IMDCKExitManager handleNotificationForSubscriptionID:]
  -[IMDCKExitManager exitRecordDateWithCompletion:]
  -[IMDCKExitManager deleteExitRecordWithCompletion:]
  -[IMDCKExitManager writeInitialSyncCompletedRecordIfNeeded]
  -[IMDCKExitManager sendCloudKitZoneFetchRequestToNoteFeatureIsOn]
  -[IMDCKExitManager setExitRecordID:]
  -[IMDCKExitManager saltZoneCreatedOverride]
  -[IMDCKExitManager setSaltZoneCreatedOverride:]
  -[IMDCKExitManager subscriptionCreatedOverride]
  -[IMDCKExitManager setSubscriptionCreatedOverride:]


IMDRecordZoneManager : NSObject <APSConnectionDelegate>
 @property  IMDCKDatabaseManager *dataBaseManager
 @property  APSConnection *pushConnection
 @property  CKRecordZoneID *chatRecordZoneID
 @property  CKRecordZone *chatRecordZone
 @property  CKRecordZoneID *attachmentRecordZoneID
 @property  CKRecordZone *attachmentRecordZone
 @property  CKRecordZoneID *messageRecordZoneID
 @property  CKRecordZone *messageRecordZone
 @property  CKRecordZoneID *analyticRecordZoneID
 @property  CKRecordZone *analyticRecordZone
 @property  CKRecordZoneID *deDupeSaltZoneID
 @property  CKRecordZone *deDupeSaltRecordZone
 @property  CKRecordZoneID *metricZoneID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDRecordZoneManager sharedInstance]

  // instance methods
  -[IMDRecordZoneManager init]
  -[IMDRecordZoneManager dealloc]
  -[IMDRecordZoneManager connection:didReceivePublicToken:]
  -[IMDRecordZoneManager connection:didReceiveIncomingMessage:]
  -[IMDRecordZoneManager deleteChatZone]
  -[IMDRecordZoneManager deleteAttachmentZone]
  -[IMDRecordZoneManager setPushConnection:]
  -[IMDRecordZoneManager pushConnection]
  -[IMDRecordZoneManager deleteAllZones]
  -[IMDRecordZoneManager createSubscriptionIfNeededOnDeDupeZoneForSubscription:recordType:completionBlock:]
  -[IMDRecordZoneManager deDupeSaltZoneID]
  -[IMDRecordZoneManager metricZoneID]
  -[IMDRecordZoneManager analyticRecordZoneID]
  -[IMDRecordZoneManager derivedQualityOfService]
  -[IMDRecordZoneManager createDeDupeSaltZoneIfNeededWithCompletionBlock:]
  -[IMDRecordZoneManager ckUtilities]
  -[IMDRecordZoneManager createAnalyticZoneIfNeededWithCompletionBlock:]
  -[IMDRecordZoneManager _setUpPushConnection]
  -[IMDRecordZoneManager _handleNotificationForZoneID:subscriptionID:]
  -[IMDRecordZoneManager dataBaseManager]
  -[IMDRecordZoneManager _createSubscriptionForZoneID:subscriptionID:recordType:completionBlock:]
  -[IMDRecordZoneManager _createRecordZone:completionBlock:]
  -[IMDRecordZoneManager _checkRecordZoneExists:completionBlock:]
  -[IMDRecordZoneManager _deleteZone:forDatabase:]
  -[IMDRecordZoneManager chatRecordZone]
  -[IMDRecordZoneManager _createRecordZoneIfNeeded:completionBlock:]
  -[IMDRecordZoneManager _deleteZone:]
  -[IMDRecordZoneManager attachmentRecordZone]
  -[IMDRecordZoneManager messageRecordZone]
  -[IMDRecordZoneManager analyticRecordZone]
  -[IMDRecordZoneManager deDupeSaltRecordZone]
  -[IMDRecordZoneManager _createSubscriptionIfNeededForZoneID:subscriptionID:recordType:completionBlock:]
  -[IMDRecordZoneManager _deleteAllZonesForDatabase:]
  -[IMDRecordZoneManager chatRecordZoneID]
  -[IMDRecordZoneManager messageRecordZoneID]
  -[IMDRecordZoneManager attachmentRecordZoneID]
  -[IMDRecordZoneManager createChatZoneIfNeededWithCompletionBlock:]
  -[IMDRecordZoneManager createAttachmentZoneIfNeededWithCompletionBlock:]
  -[IMDRecordZoneManager createMessageZoneIfNeededWithCompletionBlock:]
  -[IMDRecordZoneManager deleteMessageZone]
  -[IMDRecordZoneManager deleteAnalyticZone]
  -[IMDRecordZoneManager deleteDeDupeSaltZone]
  -[IMDRecordZoneManager fetchChatZoneToCheckManateeStatus:]
  -[IMDRecordZoneManager setDataBaseManager:]


IMDCKMessageSyncCKOperationFactory : NSObject
  // instance methods
  -[IMDCKMessageSyncCKOperationFactory _messageFetchRecordZoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:]
  -[IMDCKMessageSyncCKOperationFactory _operationGroupWithName:]
  -[IMDCKMessageSyncCKOperationFactory _fetchOptionsDictionaryWithFetchOptions:andZoneID:]
  -[IMDCKMessageSyncCKOperationFactory fetchMessageZoneChangesCKOperationUsingToken:zoneID:resultsLimit:operationGroupName:]
  -[IMDCKMessageSyncCKOperationFactory saveMessagesCKOperationUsingRecordsToSave:operationGroupName:]
  -[IMDCKMessageSyncCKOperationFactory deleteMessageCKOperationUsingRecordIDstoDelete:]
  -[IMDCKMessageSyncCKOperationFactory fetchArchivedRecordsOperationWithSyncToken:zoneID:]


IMDDistributedNotificationXPCEventStreamHandler : IMDXPCEventStreamHandler
  // class methods
  +[IMDDistributedNotificationXPCEventStreamHandler sharedInstance]

  // instance methods
  -[IMDDistributedNotificationXPCEventStreamHandler init]
  -[IMDDistributedNotificationXPCEventStreamHandler initWithEventStreamName:]


IMDChatVocabularyUpdater : NSObject
 @property  IMDChatRegistry *chatRegistry
 @property  INVocabulary *vocabulary
 @property  BOOL haveDeferredUpdateRequest

  // class methods
  +[IMDChatVocabularyUpdater sharedInstance]
  +[IMDChatVocabularyUpdater performInitialUpdateIfNeeded]

  // instance methods
  -[IMDChatVocabularyUpdater dealloc]
  -[IMDChatVocabularyUpdater chatRegistry]
  -[IMDChatVocabularyUpdater initWithChatRegistry:vocabulary:]
  -[IMDChatVocabularyUpdater _updateVocabularyExcludingChat:completionHandler:]
  -[IMDChatVocabularyUpdater updateVocabularyForAddedChat:completionHandler:]
  -[IMDChatVocabularyUpdater updateVocabularyForDeletedChat:completionHandler:]
  -[IMDChatVocabularyUpdater updateVocabularyForRenamedChat:completionHandler:]
  -[IMDChatVocabularyUpdater updateVocabularyForDeferredUpdateRequestIfNecessaryWithCompletionHandler:]
  -[IMDChatVocabularyUpdater setChatRegistry:]
  -[IMDChatVocabularyUpdater vocabulary]
  -[IMDChatVocabularyUpdater setVocabulary:]
  -[IMDChatVocabularyUpdater haveDeferredUpdateRequest]
  -[IMDChatVocabularyUpdater setHaveDeferredUpdateRequest:]


IMDLegactDTController : NSObject <IDSServiceDelegate>
 @property  IDSService *dtService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDLegactDTController sharedInstance]

  // instance methods
  -[IMDLegactDTController init]
  -[IMDLegactDTController dealloc]
  -[IMDLegactDTController service:account:incomingData:fromID:context:]
  -[IMDLegactDTController _senderIDFromToken:]
  -[IMDLegactDTController dtService]
  -[IMDLegactDTController setDtService:]


IMDCKMockRecordKeyZone : IMDCKMockRecordZone
  // instance methods
  -[IMDCKMockRecordKeyZone _handleFetchingExitRecordOperation:]
  -[IMDCKMockRecordKeyZone _operationIsCloudKitMetricsOperation:]
  -[IMDCKMockRecordKeyZone _handleWritingCloudKitMetrics:]
  -[IMDCKMockRecordKeyZone handleOperation:]


IMDCKAttachmentSyncController : IMDCKAbstractSyncController
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  IMDRecordZoneManager *recordZoneManager
 @property  IMDCKAttachmentSyncCKOperationFactory *CKOperationFactory
 @property  <IMDCKSyncTokenStore> *syncTokenStore
 @property  NSMutableDictionary *completionBlocksForAssetFetchOperations
 @property  NSMutableDictionary *recordIDToTransferMap
 @property  @? perTransferProgress
 @property  BOOL assetDownloadInProgress
 @property  NSMutableArray *downloadAssetsForTransferGUIDs
 @property  unsigned long deviceConditionsToCheck
 @property  NSObject<OS_xpc_object> *activity

  // class methods
  +[IMDCKAttachmentSyncController sharedInstance]

  // instance methods
  -[IMDCKAttachmentSyncController init]
  -[IMDCKAttachmentSyncController dealloc]
  -[IMDCKAttachmentSyncController activity]
  -[IMDCKAttachmentSyncController setActivity:]
  -[IMDCKAttachmentSyncController _scheduleOperation:]
  -[IMDCKAttachmentSyncController deleteAttachmentZone]
  -[IMDCKAttachmentSyncController syncControllerRecordType]
  -[IMDCKAttachmentSyncController setRecordZoneManager:]
  -[IMDCKAttachmentSyncController recordZoneManager]
  -[IMDCKAttachmentSyncController clearLocalSyncState:]
  -[IMDCKAttachmentSyncController ckQueue]
  -[IMDCKAttachmentSyncController setPerTransferProgress:]
  -[IMDCKAttachmentSyncController _migrateSyncToken]
  -[IMDCKAttachmentSyncController initWithSyncTokenStore:]
  -[IMDCKAttachmentSyncController _shouldMarkAttachmentsAsNeedingReupload]
  -[IMDCKAttachmentSyncController setDeviceConditionsToCheck:]
  -[IMDCKAttachmentSyncController _numberOfMetadataBatchesOfAttachmentsToFetchInInitialSync]
  -[IMDCKAttachmentSyncController latestSyncTokenForSyncType:]
  -[IMDCKAttachmentSyncController _fetchAttachmentZoneChangesShouldWriteBackChanges:desiredKeys:syncType:currentBatchCount:maxBatchCount:syncToken:completionBlock:]
  -[IMDCKAttachmentSyncController _shouldMarkAllAttachmentsAsNeedingSync]
  -[IMDCKAttachmentSyncController _hasMarkedAllAttachmentsAsNeedingSync]
  -[IMDCKAttachmentSyncController setLatestSyncToken:forSyncType:]
  -[IMDCKAttachmentSyncController _writeAttachmentsToCloudKit:]
  -[IMDCKAttachmentSyncController _markAllUnsuccessFullSyncAttachmentsAsNeedingSync]
  -[IMDCKAttachmentSyncController _numberOfBatchesOfAttachmentsToFetchInInitialSync]
  -[IMDCKAttachmentSyncController _attachmentZoneID]
  -[IMDCKAttachmentSyncController _attachmentZoneSalt]
  -[IMDCKAttachmentSyncController recordIDToTransferMap]
  -[IMDCKAttachmentSyncController _fetchAttachmentZoneRecords:desiredKeys:useNonHSA2ManateeDatabase:completion:]
  -[IMDCKAttachmentSyncController fetchAttachmentDataForTransfers:highQuality:useNonHSA2ManateeDatabase:perTransferProgress:completion:]
  -[IMDCKAttachmentSyncController fetchAttachmentDataForTransfers:highQuality:perTransferProgress:completion:]
  -[IMDCKAttachmentSyncController __shouldOptimizeAttachmentDefault]
  -[IMDCKAttachmentSyncController assetDownloadInProgress]
  -[IMDCKAttachmentSyncController _deviceConditionsAllowsMessageSyncIgnoreFeatureEnabled:]
  -[IMDCKAttachmentSyncController _downloadAttachmentAssetsWithActivity:restoringAttachments:useNonHSA2ManateeDatabase:retryCount:numAttachmentsDownloaded:transfers:completion:]
  -[IMDCKAttachmentSyncController setAssetDownloadInProgress:]
  -[IMDCKAttachmentSyncController __databaseRequestForAttachmentsWithAssets]
  -[IMDCKAttachmentSyncController fileTransferCenter]
  -[IMDCKAttachmentSyncController _attachmentDownloadCanStart:withActivity:]
  -[IMDCKAttachmentSyncController _downloadAttachmentAssetsWithActivity:restoringAttachments:useNonHSA2ManateeDatabase:retryCount:numAttachmentsDownloaded:completion:]
  -[IMDCKAttachmentSyncController downloadAttachmentAssetsWithActivity:restoringAttachments:useNonHSA2ManateeDatabase:completion:]
  -[IMDCKAttachmentSyncController purgedAttachmentsForChat:services:limit:]
  -[IMDCKAttachmentSyncController _numberOfAttachmentsToDownload]
  -[IMDCKAttachmentSyncController deviceConditionsToCheck]
  -[IMDCKAttachmentSyncController _updateDeviceConditionsToCheckIfNeededForCurrentBatchCount:maxBatchCount:]
  -[IMDCKAttachmentSyncController _deviceConditionsAllowsMessageSync]
  -[IMDCKAttachmentSyncController _ckUtilitiesInstance]
  -[IMDCKAttachmentSyncController _recordKeyManagerSharedInstance]
  -[IMDCKAttachmentSyncController _markAttachmentWithROWIDAsSyncedWithCloudKit:]
  -[IMDCKAttachmentSyncController _deviceConditionsAllowsMessageSyncForCurrentBatchCount:maxBatchCount:]
  -[IMDCKAttachmentSyncController _numberOfAttachmentsToWriteUp]
  -[IMDCKAttachmentSyncController _updateAttachmentGUIDIfNeededAndReturnTransfersToForceMarkAsSync:transfersToSyncRowIDs:]
  -[IMDCKAttachmentSyncController _writeCKRecordsToAttachmentZone:withCompletion:]
  -[IMDCKAttachmentSyncController CKOperationFactory]
  -[IMDCKAttachmentSyncController _processAssetFetchPerRecordProgressBlock:progress:]
  -[IMDCKAttachmentSyncController _processAssetFetchPerRecordCompletionBlock:recordID:error:]
  -[IMDCKAttachmentSyncController _processAssetFetchOperationCompletionBlock:operationID:error:]
  -[IMDCKAttachmentSyncController completionBlocksForAssetFetchOperations]
  -[IMDCKAttachmentSyncController _fetchedAllChangesFromCloudKit]
  -[IMDCKAttachmentSyncController _processRecordChanged:]
  -[IMDCKAttachmentSyncController _processRecordDeletion:]
  -[IMDCKAttachmentSyncController _processRecordZoneFetchCompletion:zoneID:clientChangeTokenData:moreComing:shouldWriteBackChanges:desiredKeys:syncType:error:currentBatchCount:maxBatchCount:completionBlock:]
  -[IMDCKAttachmentSyncController _processFetchRecordChangesCompleted:completionBlock:]
  -[IMDCKAttachmentSyncController _processModifyPerRecordCallBack:error:]
  -[IMDCKAttachmentSyncController _processModifyRecordCompletion:deletedRecordIDs:error:completionBlock:]
  -[IMDCKAttachmentSyncController _deleteStingRayToken]
  -[IMDCKAttachmentSyncController _kickOffWriteOnCKQueueWithCompletion:]
  -[IMDCKAttachmentSyncController _kickOffAssetFetchForTransfersIfNeeded]
  -[IMDCKAttachmentSyncController _kickOffWriteIfNeededForSyncType:completion:]
  -[IMDCKAttachmentSyncController _attachmentZoneCreated]
  -[IMDCKAttachmentSyncController _updateTransferUsingCKRecord:wasFetched:]
  -[IMDCKAttachmentSyncController _resetAttachmentSyncStateForRecord:toState:]
  -[IMDCKAttachmentSyncController _markTransferAsNotBeingAbleToSyncUsingCKRecord:]
  -[IMDCKAttachmentSyncController _operationErrorForModifyingRecordCompletion:]
  -[IMDCKAttachmentSyncController perTransferProgress]
  -[IMDCKAttachmentSyncController _recordIDsToProcessWithError:error:]
  -[IMDCKAttachmentSyncController _removeTransferFromiCloudBackupWithGuid:]
  -[IMDCKAttachmentSyncController downloadAssetsForTransferGUIDs]
  -[IMDCKAttachmentSyncController setDownloadAssetsForTransferGUIDs:]
  -[IMDCKAttachmentSyncController syncTokenStore]
  -[IMDCKAttachmentSyncController _changeTokenKeyForSyncType:]
  -[IMDCKAttachmentSyncController deleteAttachmentSyncToken]
  -[IMDCKAttachmentSyncController _needsToMarkAllAttachmentsAsNeedingSync]
  -[IMDCKAttachmentSyncController _validateTransferFromCloudKit:localTransfer:validateCompletion:]
  -[IMDCKAttachmentSyncController _processAndValidateAttachmentRecordsEligibleForPurge:recordIDsToTransfers:capturedWithABC:completion:]
  -[IMDCKAttachmentSyncController _constructAttachmentRecordIDUsingTombStoneDictionary:]
  -[IMDCKAttachmentSyncController _attachmentDeleteBatchSize]
  -[IMDCKAttachmentSyncController _copyRecordIDsToDeleteWithLimit:]
  -[IMDCKAttachmentSyncController syncAttachmentDeletesToCloudKit:]
  -[IMDCKAttachmentSyncController _deleteAttachmentsWithRecordIDs:completion:]
  -[IMDCKAttachmentSyncController syncAttachmentsWithSyncType:deviceConditionsToCheck:activity:completionBlock:]
  -[IMDCKAttachmentSyncController acceptFileTransfer:completion:]
  -[IMDCKAttachmentSyncController downloadAttachmentAssetsWithActivity:restoringAttachments:]
  -[IMDCKAttachmentSyncController purgedAttachmentsCountForChat:services:]
  -[IMDCKAttachmentSyncController downloadAttachmentAssetsForChatIDs:services:style:completion:]
  -[IMDCKAttachmentSyncController __databaseRequestResetAllAttachmentsInFaiedCloudDownloadState]
  -[IMDCKAttachmentSyncController _processRecordZoneChangeTokenUpdated:zoneID:clienChangeToken:syncType:]
  -[IMDCKAttachmentSyncController _fetchAndValidateFileTransfersFromCloudKit:capturedWithABC:completion:]
  -[IMDCKAttachmentSyncController setCKOperationFactory:]
  -[IMDCKAttachmentSyncController setSyncTokenStore:]
  -[IMDCKAttachmentSyncController setCompletionBlocksForAssetFetchOperations:]
  -[IMDCKAttachmentSyncController setRecordIDToTransferMap:]


IMDCKSyncState : NSObject <IMKeyValueCollectionDelegate>
 @property  unsigned long syncControllerSyncState
 @property  long long syncControllerRecordType
 @property  BOOL syncing
 @property  BOOL startingPeriodicSyncSetByCloudKitHooks
 @property  BOOL startingInitialSyncSetByCloudKitHooks
 @property  IMKeyValueCollection *keyValueCollection
 @property  <IMDCKSyncStateDelegate> *delegate
 @property  BOOL featureEnabled
 @property  BOOL createdChatZone
 @property  BOOL deletedZones
 @property  BOOL eligibleForTruthZone
 @property  BOOL syncingEnabled
 @property  BOOL removedFromBackup
 @property  BOOL inExitState
 @property  BOOL syncingPaused
 @property  NSDate *exitDate
 @property  BOOL disablingDevices
 @property  BOOL startingEnabledSettingChange
 @property  NSDictionary *analyticSyncDatesDictionary
 @property  NSDate *lastSyncDate
 @property  long long accountStatus
 @property  NSArray *syncErrors
 @property  long long syncControllerSyncType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDCKSyncState logHandle]
  +[IMDCKSyncState removeBuildObjectsFromDict:]

  // instance methods
  -[IMDCKSyncState init]
  -[IMDCKSyncState delegate]
  -[IMDCKSyncState setDelegate:]
  -[IMDCKSyncState .cxx_destruct]
  -[IMDCKSyncState serializedRepresentation]
  -[IMDCKSyncState lastSyncDate]
  -[IMDCKSyncState accountStatus]
  -[IMDCKSyncState setAccountStatus:]
  -[IMDCKSyncState logHandle]
  -[IMDCKSyncState keyValueCollection:willUpdateValues:]
  -[IMDCKSyncState keyValueCollection:didUpdateValues:]
  -[IMDCKSyncState setLastSyncDate:]
  -[IMDCKSyncState exitDate]
  -[IMDCKSyncState isFeatureEnabled]
  -[IMDCKSyncState isSyncing]
  -[IMDCKSyncState setSyncingEnabled:]
  -[IMDCKSyncState isSyncingEnabled]
  -[IMDCKSyncState isInExitState]
  -[IMDCKSyncState clearLocalCloudKitSyncState]
  -[IMDCKSyncState syncControllerSyncState]
  -[IMDCKSyncState isDisablingDevices]
  -[IMDCKSyncState isSyncingPaused]
  -[IMDCKSyncState syncControllerSyncType]
  -[IMDCKSyncState syncControllerRecordType]
  -[IMDCKSyncState setFeatureEnabled:]
  -[IMDCKSyncState setSyncing:]
  -[IMDCKSyncState setEligibleForTruthZone:]
  -[IMDCKSyncState setSyncControllerSyncState:]
  -[IMDCKSyncState setExitDate:]
  -[IMDCKSyncState initWithKeyValueCollection:]
  -[IMDCKSyncState setSyncingPaused:]
  -[IMDCKSyncState setRemovedFromBackup:]
  -[IMDCKSyncState setErrorToKeyRollingError]
  -[IMDCKSyncState broadcastSyncState]
  -[IMDCKSyncState _startBatchChange]
  -[IMDCKSyncState _finishBatchChange]
  -[IMDCKSyncState clearSyncErrors]
  -[IMDCKSyncState setErrorToAccountNeedsRepair]
  -[IMDCKSyncState removeObjectFromAnalyticSyncDatesDictionaryForKey:]
  -[IMDCKSyncState getAnalyticSyncDatesObjectForKey:]
  -[IMDCKSyncState syncReportDictionary]
  -[IMDCKSyncState setAnalyticSyncDatesDictionaryObject:forKey:shouldOverrideIfExists:]
  -[IMDCKSyncState addSyncError:]
  -[IMDCKSyncState syncReportDictionaryForAttempt:withSuccess:]
  -[IMDCKSyncState keyValueCollection]
  -[IMDCKSyncState analyticSyncDatesDictionary]
  -[IMDCKSyncState _removeObjectForKey:forDictionary:]
  -[IMDCKSyncState setAnalyticSyncDatesDictionary:]
  -[IMDCKSyncState _setObject:forKey:forDictionary:shouldSetBuild:]
  -[IMDCKSyncState syncErrors]
  -[IMDCKSyncState _describeErrors:]
  -[IMDCKSyncState createdChatZone]
  -[IMDCKSyncState deletedZones]
  -[IMDCKSyncState _shouldReportNewUserIfCreatedChatZones:deletedZones:]
  -[IMDCKSyncState syncUserType]
  -[IMDCKSyncState describeErrors]
  -[IMDCKSyncState isEligibleForTruthZone]
  -[IMDCKSyncState isRemovedFromBackup]
  -[IMDCKSyncState isStartingEnabledSettingChange]
  -[IMDCKSyncState setStartingPeriodicSyncSetByCloudKitHooks:]
  -[IMDCKSyncState setStartingInitialSyncSetByCloudKitHooks:]
  -[IMDCKSyncState setSyncControllerRecordType:]
  -[IMDCKSyncState setSyncControllerSyncType:]
  -[IMDCKSyncState setStartingEnabledSettingChange:]
  -[IMDCKSyncState setDisablingDevices:]
  -[IMDCKSyncState _setStartingSync]
  -[IMDCKSyncState setSyncControllerSyncState:withRecordType:]
  -[IMDCKSyncState setCreatedChatZone:]
  -[IMDCKSyncState setDeletedZones:]
  -[IMDCKSyncState setInExitState:]
  -[IMDCKSyncState isStartingPeriodicSyncSetByCloudKitHooks]
  -[IMDCKSyncState isStartingInitialSyncSetByCloudKitHooks]
  -[IMDCKSyncState setSyncingFinished]
  -[IMDCKSyncState setStartingPeriodicSyncWithRecordType:]
  -[IMDCKSyncState setStartingInitialSyncWithRecordType:]


IMDMessageHistoryFirstUnlockReplaySyncTask : IMDMessageHistoryIDSTransactionLogSyncTask
  // instance methods
  -[IMDMessageHistoryFirstUnlockReplaySyncTask dealloc]
  -[IMDMessageHistoryFirstUnlockReplaySyncTask initWithReplayController:accountController:]
  -[IMDMessageHistoryFirstUnlockReplaySyncTask _setupAndBeginSync]
  -[IMDMessageHistoryFirstUnlockReplaySyncTask syncTaskType]


IMDFileTransferCenter : NSObject <IMFileCopierDelegate>
 @property  NSString *contextStamp
 @property  BOOL hasActiveFileTransfers

  // class methods
  +[IMDFileTransferCenter sharedInstance]

  // instance methods
  -[IMDFileTransferCenter init]
  -[IMDFileTransferCenter dealloc]
  -[IMDFileTransferCenter fileCopierDidStart:]
  -[IMDFileTransferCenter fileCopierDidFinish:]
  -[IMDFileTransferCenter transferForGUID:]
  -[IMDFileTransferCenter guidForNewOutgoingTransferWithLocalURL:]
  -[IMDFileTransferCenter _transcodeControllerSharedInstance]
  -[IMDFileTransferCenter _handleFileTransfer:updatedWithProperties:]
  -[IMDFileTransferCenter markAttachment:sender:recipients:isIncoming:]
  -[IMDFileTransferCenter _removeActiveTransfer:]
  -[IMDFileTransferCenter _addActiveTransfer:]
  -[IMDFileTransferCenter hasActiveFileTransfers]
  -[IMDFileTransferCenter guidsForStoredAttachmentPayloadData:messageGUID:]
  -[IMDFileTransferCenter updateTransfer:currentBytes:totalBytes:]
  -[IMDFileTransferCenter removeTransferForGUID:]
  -[IMDFileTransferCenter addTransfer:forGUID:]
  -[IMDFileTransferCenter markTransferAsNotSyncSuccessfullyDownloadedFromCloud:]
  -[IMDFileTransferCenter populateLocalURLsForTransfer:fromCKRecord:]
  -[IMDFileTransferCenter endTransfer:overrideFinalFileName:]
  -[IMDFileTransferCenter updateTransferAsWaitingForAccept:]
  -[IMDFileTransferCenter updateTransfersWithCKRecord:recordWasFetched:downloadAsset:]
  -[IMDFileTransferCenter acceptTransfer:path:]
  -[IMDFileTransferCenter markTransferAsNotSyncSuccessFullyUsingCKRecord:]
  -[IMDFileTransferCenter resetSyncStateForRecord:toState:]
  -[IMDFileTransferCenter setContextStamp:]
  -[IMDFileTransferCenter _updateContextStamp]
  -[IMDFileTransferCenter _postUpdated:]
  -[IMDFileTransferCenter _archiveFileTransfer:]
  -[IMDFileTransferCenter failTransfer:reason:]
  -[IMDFileTransferCenter _addGatekeeperProperties:toFileAtPath:]
  -[IMDFileTransferCenter _transferTimerTick:]
  -[IMDFileTransferCenter makeNewIncomingTransferWithGUID:filename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:]
  -[IMDFileTransferCenter makeNewOutgoingTransferWithGUID:filename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:]
  -[IMDFileTransferCenter _createWrapperForTransfer:]
  -[IMDFileTransferCenter resetTransfer:andPostReason:]
  -[IMDFileTransferCenter _addTransferringTransfer:]
  -[IMDFileTransferCenter _attachmentStoreSharedInstance]
  -[IMDFileTransferCenter _removeWrapperForTransfer:]
  -[IMDFileTransferCenter _removeTransferringTransfer:]
  -[IMDFileTransferCenter startFinalizingTransfer:]
  -[IMDFileTransferCenter _addSpotlightPropertiesFromFileTransfer:toDirectory:]
  -[IMDFileTransferCenter _completeProgressForTransferGUID:]
  -[IMDFileTransferCenter _clearProgressForTransferGUID:]
  -[IMDFileTransferCenter _handleFileTransfer:acceptedWithPath:autoRename:overwrite:postNotification:]
  -[IMDFileTransferCenter _dictionaryRepresentationsForFileTransfers:toSave:]
  -[IMDFileTransferCenter _handleFileTransferStopped:]
  -[IMDFileTransferCenter _getNewFileTransferForStoredAttachmentPayloadDataWithTransferGUID:messageGUID:]
  -[IMDFileTransferCenter broadcastTransfersWithGUIDs:atLocalPaths:]
  -[IMDFileTransferCenter _transferRequiresPreviewSizing:]
  -[IMDFileTransferCenter _clientPreviewConstraints]
  -[IMDFileTransferCenter updateTransfer:withPreviewSize:forConstraints:]
  -[IMDFileTransferCenter _statsCollector]
  -[IMDFileTransferCenter _messageStoreSharedInstance]
  -[IMDFileTransferCenter _usingStingRay]
  -[IMDFileTransferCenter _shouldUpdateSyncStats:originalSyncState:]
  -[IMDFileTransferCenter _updateSyncStatsForAttachments:incrementTotalAttachmentCount:]
  -[IMDFileTransferCenter _shouldDownloadAssetForTransfer:forMessageItem:]
  -[IMDFileTransferCenter _progressForTransferGUID:allowCreate:path:]
  -[IMDFileTransferCenter _temporaryPathForGUID:filename:]
  -[IMDFileTransferCenter archiveFileTransfer:]
  -[IMDFileTransferCenter _addGatekeeperProperties:toDirectory:]
  -[IMDFileTransferCenter addDefaultGatekeeperPropertiesToDirectory:]
  -[IMDFileTransferCenter guidForNewIncomingTransferWithFilename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:]
  -[IMDFileTransferCenter guidForNewOutgoingTransferWithFilename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:]
  -[IMDFileTransferCenter assignTransfer:toAccount:otherPerson:]
  -[IMDFileTransferCenter removeUnassignedTransfers]
  -[IMDFileTransferCenter startTransfer:]
  -[IMDFileTransferCenter updateTransfer:]
  -[IMDFileTransferCenter isSafeToDeleteTransferAttachmentPath:]
  -[IMDFileTransferCenter endTransfer:]
  -[IMDFileTransferCenter failTransferPreviewGeneration:]
  -[IMDFileTransferCenter resetTransferAndPostError:error:]
  -[IMDFileTransferCenter failTransfer:error:]
  -[IMDFileTransferCenter _allFileTransfers]
  -[IMDFileTransferCenter _handleSendFileTransfer:]
  -[IMDFileTransferCenter _handleFileTransfer:createdWithProperties:withAuditToken:]
  -[IMDFileTransferCenter _handleFileTransferRemoved:]
  -[IMDFileTransferCenter initiateHighQualityDownload:]
  -[IMDFileTransferCenter sizePreviewsForTransferGUIDs:]
  -[IMDFileTransferCenter contextStamp]


IMDCKAttachmentSyncCKOperationFactory : NSObject
  // class methods
  +[IMDCKAttachmentSyncCKOperationFactory _desiredKeysArrayForType:]

  // instance methods
  -[IMDCKAttachmentSyncCKOperationFactory _operationGroupWithName:]
  -[IMDCKAttachmentSyncCKOperationFactory fetchAttachmentZoneRecords:desiredKeys:operationGroupName:]
  -[IMDCKAttachmentSyncCKOperationFactory fetchAttachmentZoneChangesCKOperationUsingToken:zoneID:resultsLimit:desiredKeys:operationGroupName:]
  -[IMDCKAttachmentSyncCKOperationFactory saveAttachmentsCKOperationUsingRecordsToSave:]
  -[IMDCKAttachmentSyncCKOperationFactory deleteAttachmentCKOperationUsingRecordIDstoDelete:]
  -[IMDCKAttachmentSyncCKOperationFactory _attachmentFetchRecordZoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:desiredKeys:]
  -[IMDCKAttachmentSyncCKOperationFactory _defaultsSayWeHaveSyncedOnce]


IMDQuickSwitchController : NSObject <PSYSyncCoordinatorDelegate, IDSServiceDelegate>
 @property  IDSService *quickSwitchIDSService
 @property  PSYSyncCoordinator *syncCoordinator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDQuickSwitchController sharedInstance]

  // instance methods
  -[IMDQuickSwitchController init]
  -[IMDQuickSwitchController dealloc]
  -[IMDQuickSwitchController service:account:incomingData:fromID:context:]
  -[IMDQuickSwitchController service:account:incomingResourceAtURL:metadata:fromID:context:]
  -[IMDQuickSwitchController service:account:identifier:didSendWithSuccess:error:]
  -[IMDQuickSwitchController _defaultPairedDevice]
  -[IMDQuickSwitchController syncCoordinator]
  -[IMDQuickSwitchController setSyncCoordinator:]
  -[IMDQuickSwitchController syncCoordinator:beginSyncSession:]
  -[IMDQuickSwitchController _deleteFileAtPath:]
  -[IMDQuickSwitchController _cleanUpTemporaryFiles]
  -[IMDQuickSwitchController _isPairedDeviceInProxyMode]
  -[IMDQuickSwitchController _initiateQuickSwitch]
  -[IMDQuickSwitchController _getFileSizeAtPath:]
  -[IMDQuickSwitchController _getTempDBPath]
  -[IMDQuickSwitchController _getTempRecentsPath]
  -[IMDQuickSwitchController _getZippedDBPath]
  -[IMDQuickSwitchController _getZippedRecentsPath]
  -[IMDQuickSwitchController _getTruncatedDBPath]
  -[IMDQuickSwitchController _getDowngradedDBPath]
  -[IMDQuickSwitchController _sendIDSMessage:]
  -[IMDQuickSwitchController _quickSwitchCompleted:]
  -[IMDQuickSwitchController _notifyPSYWithResult:]
  -[IMDQuickSwitchController _sendIDSFile:withCommand:]
  -[IMDQuickSwitchController _getCurrentDBVersion]
  -[IMDQuickSwitchController _truncateDBToPath:]
  -[IMDQuickSwitchController _sendZippedFileAtPath:withCommand:]
  -[IMDQuickSwitchController _notifyPSYDataSent]
  -[IMDQuickSwitchController _compressFileAtPath:toPath:withCompletionBlock:]
  -[IMDQuickSwitchController _handleQuickSwitchInitiateRequest]
  -[IMDQuickSwitchController _handleDBVersionResponse:]
  -[IMDQuickSwitchController _handleRecentsRequest]
  -[IMDQuickSwitchController _handleQuickSwitchCompleted:]
  -[IMDQuickSwitchController _handleIncomingDB:]
  -[IMDQuickSwitchController _handleIncomingRecents:]
  -[IMDQuickSwitchController _supportsQuickSwitchWithPairedDevice]
  -[IMDQuickSwitchController dummyMethod]
  -[IMDQuickSwitchController _decompressFileAtPath:toPath:withCompletionBlock:]
  -[IMDQuickSwitchController _sendDBVersionResponse:]
  -[IMDQuickSwitchController _sendRecentsRequest]
  -[IMDQuickSwitchController _sendQuickSwitchCompletedWithResult:]
  -[IMDQuickSwitchController quickSwitchIDSService]
  -[IMDQuickSwitchController setQuickSwitchIDSService:]


IMTunesController : NSObject
 @property  NSMutableDictionary *playerInfo
 @property  BOOL isEnabled
 @property  NSString *messageFormat

  // class methods
  +[IMTunesController sharedTunesController]

  // instance methods
  -[IMTunesController init]
  -[IMTunesController dealloc]
  -[IMTunesController isEnabled]
  -[IMTunesController addListener:]
  -[IMTunesController removeListener:]
  -[IMTunesController playerInfo]
  -[IMTunesController messageFormat]
  -[IMTunesController _updateMessage]
  -[IMTunesController _playerChanged:]
  -[IMTunesController _playerChangedNotification:]
  -[IMTunesController setPlayerInfo:]


IMDCKCacheDeleteManager : NSObject
 @property  BOOL alreadyCapturedErrorWithAutoBugCapture
 @property  BOOL allowsWritingToDisk
 @property  BOOL deviceLowOnDiskSpace
 @property  BOOL isUsingCentralizedModel
 @property  BOOL isUpdatingAttachmentFileSizes

  // class methods
  +[IMDCKCacheDeleteManager sharedInstance]

  // instance methods
  -[IMDCKCacheDeleteManager init]
  -[IMDCKCacheDeleteManager purgeAttachments:]
  -[IMDCKCacheDeleteManager canWriteFileOfEstimatedSize:refreshCachedValue:]
  -[IMDCKCacheDeleteManager shouldDownloadAssetsOfSize:refreshCachedValue:]
  -[IMDCKCacheDeleteManager isUpdatingAttachmentFileSizes]
  -[IMDCKCacheDeleteManager setIsUpdatingAttachmentFileSizes:]
  -[IMDCKCacheDeleteManager _deviceConditionsAllowsAttachmentFileSizeUpdateForActivity:]
  -[IMDCKCacheDeleteManager _cacheDeleteSetUp]
  -[IMDCKCacheDeleteManager _ckUtilitiesSharedInstance]
  -[IMDCKCacheDeleteManager isUsingCentralizedModel]
  -[IMDCKCacheDeleteManager setIsUsingCentralizedModel:]
  -[IMDCKCacheDeleteManager __wrapperAroundCacheDeletePurgeNotificationCallback:]
  -[IMDCKCacheDeleteManager __wrapperAroundCacheDeletePurgeableCallback:urgency:]
  -[IMDCKCacheDeleteManager createDictionaryForNotDeletingAnyAttachments:urgency:]
  -[IMDCKCacheDeleteManager setDeviceLowOnDiskSpace:]
  -[IMDCKCacheDeleteManager __wrapperAroundCacheDeletePurgingCallback:urgency:]
  -[IMDCKCacheDeleteManager _cacheDeleteRequestCacheableSpaceGuidanceWithID:diskVolume:urgency:requestedSize:]
  -[IMDCKCacheDeleteManager setAllowsWritingToDisk:]
  -[IMDCKCacheDeleteManager allowsWritingToDisk]
  -[IMDCKCacheDeleteManager _purgeableSpaceGivenUrgency:]
  -[IMDCKCacheDeleteManager _deleteAttachmentsAndReturnBytesDeleted:]
  -[IMDCKCacheDeleteManager purgeableAttachmentSize]
  -[IMDCKCacheDeleteManager reportAvailableSpaceToBeDeleted:urgency:]
  -[IMDCKCacheDeleteManager deleteAttachmentsAndReturnBytesDeleted:urgency:]
  -[IMDCKCacheDeleteManager _copyRecordRef:]
  -[IMDCKCacheDeleteManager _postTransferInfoOfDeletedTransfers:]
  -[IMDCKCacheDeleteManager _fileTransfersToDelete:]
  -[IMDCKCacheDeleteManager _deleteFilesOnDiskAndUpdateTransfers:]
  -[IMDCKCacheDeleteManager _fileTransfersToValidate:]
  -[IMDCKCacheDeleteManager _fetchTransfersFromCloudKit:]
  -[IMDCKCacheDeleteManager _fetchTransfersFromCloudKit:indexOfTransfers:numberOfBatchesToFetch:withCompletion:]
  -[IMDCKCacheDeleteManager _getIndexSetForBatch:indexOfTransfers:]
  -[IMDCKCacheDeleteManager _indexOfNextBatch:totalTransfers:indexOfTransfers:]
  -[IMDCKCacheDeleteManager _shouldFetchNextBatch:totalTransfers:]
  -[IMDCKCacheDeleteManager updateAttachmentFileSizesWithActivity:]
  -[IMDCKCacheDeleteManager registerWithCacheDelete]
  -[IMDCKCacheDeleteManager resetAttachmentWatermark]
  -[IMDCKCacheDeleteManager isUsingCentralizeCacheDelete]
  -[IMDCKCacheDeleteManager metricAttachmentsToPurge:]
  -[IMDCKCacheDeleteManager alreadyCapturedErrorWithAutoBugCapture]
  -[IMDCKCacheDeleteManager setAlreadyCapturedErrorWithAutoBugCapture:]
  -[IMDCKCacheDeleteManager isDeviceLowOnDiskSpace]


IMDCKMockDatabase : CKDatabase /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
 @property  NSDictionary *identifierToZoneMap

  // instance methods
  -[IMDCKMockDatabase init]
  -[IMDCKMockDatabase dealloc]
  -[IMDCKMockDatabase addOperation:]
  -[IMDCKMockDatabase _initWithContainer:scope:]
  -[IMDCKMockDatabase _zoneManager]
  -[IMDCKMockDatabase _zoneIdentifierForOperation:]
  -[IMDCKMockDatabase identifierToZoneMap]


IMDCKChatSyncCKOperationFactory : NSObject
  // instance methods
  -[IMDCKChatSyncCKOperationFactory _chatSyncOperationGroupWithName:]
  -[IMDCKChatSyncCKOperationFactory _chatFetchRecordZoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:]
  -[IMDCKChatSyncCKOperationFactory _chatFetchRecordZoneChangesCKConfiguration]
  -[IMDCKChatSyncCKOperationFactory fetchChatZoneChangesCKOperationUsingToken:zone:resultsLimit:groupName:]
  -[IMDCKChatSyncCKOperationFactory _chatWriteRecordsCKConfiguration]
  -[IMDCKChatSyncCKOperationFactory _chatSyncOperationGroup]
  -[IMDCKChatSyncCKOperationFactory fetchChatZoneChangesCKOperationUsingToken:zone:resultsLimit:]
  -[IMDCKChatSyncCKOperationFactory saveChatsCKOperationUsingRecordsToSave:]
  -[IMDCKChatSyncCKOperationFactory deleteChatCKOperationUsingRecordIDstoDelete:]


IMDServiceController : NSObject
 @property  NSArray *allServices

  // class methods
  +[IMDServiceController sharedInstance]

  // instance methods
  -[IMDServiceController init]
  -[IMDServiceController dealloc]
  -[IMDServiceController allServices]
  -[IMDServiceController serviceWithName:]
  -[IMDServiceController registerSessionClassWithBundle:]


IMDNicknameController : NSObject <IMSystemMonitorListener>
 @property  IDSKVStore *kvStore
 @property  double lastMeContactStoreSync
 @property  IDSKVStore *handledNicknamesKVStore
 @property  IDSKVStore *pendingNicknameUpdatesKVStore
 @property  IDSKVStore *handleSharingKVStore
 @property  NSMutableDictionary *handledNicknames
 @property  NSMutableDictionary *pendingNicknameUpdates
 @property  NSMutableSet *handleWhitelist
 @property  NSMutableSet *handleBlacklist
 @property  IMNickname *personalNickname
 @property  BOOL needToLoadMapsInfoFromDisk
 @property  NSMutableArray *chatsToSendNicknameInfoTo
 @property  BOOL nicknameIsUploadingToCK
 @property  NSSet *whitelistedHandlesForSharing
 @property  NSSet *blacklistedHandlesForSharing

  // class methods
  +[IMDNicknameController sharedInstance]

  // instance methods
  -[IMDNicknameController init]
  -[IMDNicknameController dealloc]
  -[IMDNicknameController defaults]
  -[IMDNicknameController systemDidLeaveFirstDataProtectionLock]
  -[IMDNicknameController lastMeContactStoreSync]
  -[IMDNicknameController setLastMeContactStoreSync:]
  -[IMDNicknameController personalNickname]
  -[IMDNicknameController nicknameForHandle:]
  -[IMDNicknameController _nicknameFeatureEnabled]
  -[IMDNicknameController pendingNicknameUpdates]
  -[IMDNicknameController handledNicknames]
  -[IMDNicknameController whitelistedHandlesForSharing]
  -[IMDNicknameController blacklistedHandlesForSharing]
  -[IMDNicknameController setPendingNicknameUpdates:]
  -[IMDNicknameController setHandledNicknames:]
  -[IMDNicknameController setPersonalNickname:]
  -[IMDNicknameController kvStore]
  -[IMDNicknameController setKvStore:]
  -[IMDNicknameController newDeviceDidSignIntoiMessage]
  -[IMDNicknameController deviceSignedOutOfiMessage]
  -[IMDNicknameController _ckAccountChanged:]
  -[IMDNicknameController _loadAllInfoFromDiskIfAble]
  -[IMDNicknameController evaluateAccountStateForFeatureEligibility]
  -[IMDNicknameController aliasesDidChange:]
  -[IMDNicknameController _tryToReuploadPersonalNicknameWithRetryCount:reuploadVersion:]
  -[IMDNicknameController setPersonalNickname:completionBlock:]
  -[IMDNicknameController _reuploadLocalProfileVersionNumber]
  -[IMDNicknameController _newDeviceDidSignIntoiMessageWithRetryCount:]
  -[IMDNicknameController _sendMessageDictionary:toDevice:]
  -[IMDNicknameController _retryPeerRequestWithRetry:]
  -[IMDNicknameController _deletePublicNicknameLocationAndKey]
  -[IMDNicknameController substringRecordIDForNickname:]
  -[IMDNicknameController _storePendingNicknameForUpload:]
  -[IMDNicknameController _deletePendingNicknameForUpload]
  -[IMDNicknameController chatsToSendNicknameInfoTo]
  -[IMDNicknameController sendPersonalNicknameToChat:]
  -[IMDNicknameController _isNicknamesSharingEnabled]
  -[IMDNicknameController transferServicesController]
  -[IMDNicknameController _beginNicknameUpload:]
  -[IMDNicknameController nickNameRecordID]
  -[IMDNicknameController _resetHandleSharingList]
  -[IMDNicknameController _storePublicNickname:nicknameLocation:encryptionKey:]
  -[IMDNicknameController _endNicknameUpload]
  -[IMDNicknameController sendPersonalNicknameRecordIDAndVersionToAllPeers]
  -[IMDNicknameController _getPendingNicknameForUpload]
  -[IMDNicknameController handleWhitelist]
  -[IMDNicknameController handleBlacklist]
  -[IMDNicknameController handleSharingKVStore]
  -[IMDNicknameController _updateWhitelistBlacklistHandlesVersion]
  -[IMDNicknameController _syncHandleWhitelistBlacklistToOtherDevices]
  -[IMDNicknameController nickNameDecryptionKey]
  -[IMDNicknameController currentPersonalNicknameWithRecordID:decryptionKey:completionBlock:]
  -[IMDNicknameController getNicknameWithRecordID:decryptionKey:completionBlock:]
  -[IMDNicknameController nicknameForRecordID:handle:]
  -[IMDNicknameController saveNicknameForRecordID:handleID:userNickname:]
  -[IMDNicknameController _markNicknameAsUpdated:incrementPendingNicknameVersion:]
  -[IMDNicknameController _markNicknameAsUpdatedForHandleID:]
  -[IMDNicknameController _updateHandleList:withHandles:forKey:broadcastUpdates:]
  -[IMDNicknameController _requestingToSendLocalNicknameInfo:]
  -[IMDNicknameController sendPersonalNicknameRecordIDAndVersionRequestedByDevice:]
  -[IMDNicknameController _updateSharingPreferencesIfNeededFromMadridMessage:]
  -[IMDNicknameController _updateCloudKitRecordIDAndDecryptionKeyIfNeededFromMadridMessage:]
  -[IMDNicknameController _updateHandledNicknamesIfNeeded:]
  -[IMDNicknameController _updateHandleBlacklistWhitelistIfNeeded:]
  -[IMDNicknameController _updateMessageDictionaryWithPendingNicknameUpdates:]
  -[IMDNicknameController storedPersonalNickname]
  -[IMDNicknameController deleteAllPersonalNicknames:withCompletion:]
  -[IMDNicknameController messageDictionaryWithPersonalRecordIDAndVersion]
  -[IMDNicknameController nicknameIsUploadingToCK]
  -[IMDNicknameController broadcastHandlesSharingNicknamesDidChange]
  -[IMDNicknameController replacedNicknameForHandleIDInHandledMapIfNeeded:nickname:]
  -[IMDNicknameController addNicknameToPendingUpdates:]
  -[IMDNicknameController markNicknameAsUpdated:]
  -[IMDNicknameController _updatePendingNicknameVersion]
  -[IMDNicknameController sendPendingNicknameUpdatesDidChange]
  -[IMDNicknameController handledNicknamesKVStore]
  -[IMDNicknameController _writeNicknameToKVStore:nickname:]
  -[IMDNicknameController pendingNicknameUpdatesKVStore]
  -[IMDNicknameController _broadcastPendingMapChanged]
  -[IMDNicknameController _updateNicknameInHandledMap:]
  -[IMDNicknameController _deleteNicknameFromPendingMap:]
  -[IMDNicknameController _deleteHandleIDFromPendingMap:]
  -[IMDNicknameController _deleteHandleIDFromHandledMap:]
  -[IMDNicknameController _isUnderScrutiny]
  -[IMDNicknameController _deviceUnderFirstUnlock]
  -[IMDNicknameController loadPersonalNicknameIfNeeded]
  -[IMDNicknameController reuploadProfileIfNeeded]
  -[IMDNicknameController loadHandledNicknamesAndPendingUpdates]
  -[IMDNicknameController loadSharingHandlesPrefs]
  -[IMDNicknameController _evaluateIfAccountHasMultiplePhoneNumbers]
  -[IMDNicknameController _uploadPendingNicknameIfNecessary]
  -[IMDNicknameController currentPersonalNicknamewithCompletionBlock:]
  -[IMDNicknameController _setUnderScrutiny:]
  -[IMDNicknameController _populateNicknameDictionary:forKVStore:limitToLoad:]
  -[IMDNicknameController allNicknames]
  -[IMDNicknameController nicknameForRecordID:]
  -[IMDNicknameController verifyTruncatedRecordIDMatchesPersonalNickname:forChat:]
  -[IMDNicknameController NicknameWithRecordID:URI:decryptionKey:withCompletionBlock:]
  -[IMDNicknameController handleNicknameUpdatesFromPeerDevice:fromPeerDevice:]
  -[IMDNicknameController sendNicknamePreferencesDidChange]
  -[IMDNicknameController queueChatToSendNicknamePostUploadIfNeeded:]
  -[IMDNicknameController whitelistHandlesForSharing:onChatGUIDs:]
  -[IMDNicknameController blacklistHandlesForSharing:]
  -[IMDNicknameController clearPendingNicknameForHandleID:]
  -[IMDNicknameController ignorePendingNicknameForHandleID:]
  -[IMDNicknameController cleanUpNicknameForID:]
  -[IMDNicknameController pendingPersonalNickname]
  -[IMDNicknameController _deleteAvatarForNickname:]
  -[IMDNicknameController nicknameForHandleURI:]
  -[IMDNicknameController setHandledNicknamesKVStore:]
  -[IMDNicknameController setPendingNicknameUpdatesKVStore:]
  -[IMDNicknameController setHandleSharingKVStore:]
  -[IMDNicknameController setHandleWhitelist:]
  -[IMDNicknameController setHandleBlacklist:]
  -[IMDNicknameController needToLoadMapsInfoFromDisk]
  -[IMDNicknameController setNeedToLoadMapsInfoFromDisk:]
  -[IMDNicknameController setChatsToSendNicknameInfoTo:]
  -[IMDNicknameController setNicknameIsUploadingToCK:]


IMDMessageSortOrderAssigner : NSObject
  // instance methods
  -[IMDMessageSortOrderAssigner messageWithGUID:]
  -[IMDMessageSortOrderAssigner copyOfMessagesWithReplyToGUID:]
  -[IMDMessageSortOrderAssigner compareMessageToOtherMessagesWithSameReplyToGUIDAndAssignSortID:existingMessagesWithSameReplyToGUID:]
  -[IMDMessageSortOrderAssigner assignSortIDToIncomingMessageWithNoExistingMessagesWithSameReplyToGUID:onChat:]
  -[IMDMessageSortOrderAssigner assignSortIDToIncomingMessage:onChat:]
  -[IMDMessageSortOrderAssigner persistMessage:]
  -[IMDMessageSortOrderAssigner assignAndPersistSortIDForIncomingMessage:onChat:]


IMDMessageStore : NSObject
 @property  NSString *modificationStamp

  // class methods
  +[IMDMessageStore sharedInstance]
  +[IMDMessageStore databaseFull]
  +[IMDMessageStore _updateCacheForMessageGUID:fromMessage:toMessage:updateLastMessage:calculateUnreadCount:]
  +[IMDMessageStore _displayDatabaseFullAlert]
  +[IMDMessageStore databaseNoLongerFull]

  // instance methods
  -[IMDMessageStore init]
  -[IMDMessageStore dealloc]
  -[IMDMessageStore messageWithGUID:]
  -[IMDMessageStore databaseChatSpamUpdated:]
  -[IMDMessageStore updateUnformattedID:forBuddyID:onService:]
  -[IMDMessageStore hasStoredMessageWithGUID:]
  -[IMDMessageStore lastFailedMessageDate]
  -[IMDMessageStore itemWithGUID:]
  -[IMDMessageStore storeMessage:forceReplace:modifyError:modifyFlags:flagMask:]
  -[IMDMessageStore storeItem:forceReplace:]
  -[IMDMessageStore messagesWithReplyToGUID:]
  -[IMDMessageStore setModificationStamp:]
  -[IMDMessageStore performInitialHousekeeping]
  -[IMDMessageStore _itemsWithGUIDs:]
  -[IMDMessageStore updateStamp]
  -[IMDMessageStore storeMessage:forceReplace:modifyError:modifyFlags:flagMask:updateMessageCache:calculateUnreadCount:]
  -[IMDMessageStore storeMessage:forceReplace:modifyError:modifyFlags:flagMask:updateMessageCache:calculateUnreadCount:reindexMessage:]
  -[IMDMessageStore _storeAttachmentsForMessage:]
  -[IMDMessageStore _fileTransferCenter]
  -[IMDMessageStore messagesWithAssociatedGUID:shouldLoadAttachments:]
  -[IMDMessageStore _itemsWithAssociatedGUID:shouldLoadAttachments:]
  -[IMDMessageStore registerTransfersWithGUIDs:forMessageGUID:]
  -[IMDMessageStore _hasMessagesWithGUIDs:]
  -[IMDMessageStore messageWithGUID:registerAttachments:]
  -[IMDMessageStore messagesWithHandles:onServices:messageGUID:limit:]
  -[IMDMessageStore _messagesWithHandles:onServices:messageGUID:limit:onlyMessages:]
  -[IMDMessageStore messagesWithRoomNames:onServices:messageGUID:limit:]
  -[IMDMessageStore _messagesWithRoomNames:onServices:messageGUID:limit:onlyMessages:]
  -[IMDMessageStore _messagesWithHandlesBeforeAndAfterGUID:handles:onServices:numberOfMessagesBefore:numberOfMessagesAfter:]
  -[IMDMessageStore _unreadMessagesWithHandles:onServices:limit:fallbackGUID:]
  -[IMDMessageStore _unreadMessagesWithRoomNames:onServices:limit:fallbackGUID:]
  -[IMDMessageStore chatForMessageGUID:]
  -[IMDMessageStore chatForMessageGUID:enableVerboseLogging:]
  -[IMDMessageStore _chatsForMessageGUID:enableVerboseLogging:]
  -[IMDMessageStore chatsForMessageGUID:]
  -[IMDMessageStore _chatsForMessageIdentifier:]
  -[IMDMessageStore _isValidPhoneNumber:forCountryCode:]
  -[IMDMessageStore _copyHandle:onService:]
  -[IMDMessageStore _cleanUnformattedPhoneNumber:countryCode:]
  -[IMDMessageStore deleteMessageGUIDs:]
  -[IMDMessageStore _deleteMessagesWithGUIDs:chatIdentifiers:style:onServices:batchNumber:completion:]
  -[IMDMessageStore _performBlock:afterDelay:]
  -[IMDMessageStore deleteMessagesWithChatIdentifiers:style:onServices:completion:]
  -[IMDMessageStore messageWithReplaceMessageID:fromHandle:onService:]
  -[IMDMessageStore _suppressDBUpdateTimerFired]
  -[IMDMessageStore __postDBUpdate]
  -[IMDMessageStore modificationStamp]
  -[IMDMessageStore postCountChanges]
  -[IMDMessageStore _updateModificationDate]
  -[IMDMessageStore _postDBUpdate]
  -[IMDMessageStore unreadMessagesCount]
  -[IMDMessageStore _shouldUseBadgeUtilities]
  -[IMDMessageStore _isUsingStingRay]
  -[IMDMessageStore _itemClassShouldUpdateTransferForItem:]
  -[IMDMessageStore _messagesThatNeedSyncWithCloudKitWithLimit:attemptCount:]
  -[IMDMessageStore _chatRegistrySharedInstance]
  -[IMDMessageStore updateFileTransfer:]
  -[IMDMessageStore messagesWithAssociatedGUID:]
  -[IMDMessageStore messagesWithGUIDs:]
  -[IMDMessageStore canStoreItem:onService:]
  -[IMDMessageStore canStoreMessage:onService:]
  -[IMDMessageStore existingMessageSimilarToMessage:skipServices:skipGUIDs:withinTimeInterval:participants:]
  -[IMDMessageStore markMessageAsDeduplicated:]
  -[IMDMessageStore messagesWithHandles:onServices:limit:]
  -[IMDMessageStore messagesWithRoomNames:onServices:limit:]
  -[IMDMessageStore messagesWithHandlesBeforeAndAfterGUID:handles:onServices:numberOfMessagesBefore:numberOfMessagesAfter:]
  -[IMDMessageStore lastMessageWithHandles:onServices:]
  -[IMDMessageStore unreadMessagesWithHandles:onServices:limit:fallbackGUID:]
  -[IMDMessageStore unreadMessagesWithRoomNames:onServices:limit:fallbackGUID:]
  -[IMDMessageStore lastMessageWithRoomNames:onServices:]
  -[IMDMessageStore attachmentsWithHandles:onServices:]
  -[IMDMessageStore attachmentsWithRoomNames:onServices:]
  -[IMDMessageStore messageActionItemsForOriginalMessageGUID:]
  -[IMDMessageStore frequentRepliesForForChatIdentifiers:onServices:limit:]
  -[IMDMessageStore chatForMessage:]
  -[IMDMessageStore chatsForMessage:]
  -[IMDMessageStore chatForMessageIdentifier:]
  -[IMDMessageStore resolveUnformattedRepresentationsForHandles:onService:message:completionBlock:]
  -[IMDMessageStore deleteMessageGUIDs:inChat:]
  -[IMDMessageStore deleteMessagesWithChatIdentifiers:style:onServices:]
  -[IMDMessageStore deleteMessagesWithReplaceMessageID:fromHandle:onService:]
  -[IMDMessageStore markMessagesAsReadWithHandles:onServices:upToGUID:readDate:fromMe:]
  -[IMDMessageStore markMessagesAsReadWithRoomNames:onServices:upToGUID:readDate:fromMe:]
  -[IMDMessageStore markMessagesAsReadWithHandle:onService:upToGUID:readDate:fromMe:]
  -[IMDMessageStore markMessagesAsReadWithRoomname:onService:upToGUID:readDate:fromMe:]
  -[IMDMessageStore cleanseAttachments]
  -[IMDMessageStore isSuppressDatabaseUpdates]
  -[IMDMessageStore setSuppressDatabaseUpdates:]
  -[IMDMessageStore retractPostedNotificationsForMessageGUIDs:]
  -[IMDMessageStore rebuildLastFailedMessageDate]
  -[IMDMessageStore rebuildUnreadMessageCount]
  -[IMDMessageStore replaceMessageAcknowledgmentsWithNewMessageAcknowledgment:associatedMessageGUID:sender:]
  -[IMDMessageStore loadConsumedSessionPayloadsForItems:]
  -[IMDMessageStore messagesThatNeedSyncWithCloudKitWithLimit:]
  -[IMDMessageStore markAllMessagesAsNeedingCloudKitSync]
  -[IMDMessageStore copyMessagesThatNeedToBeDeletedInCloudKitWithLimit:]
  -[IMDMessageStore deleteMessagesFromTombStoneTableWithRecordIDs:]
  -[IMDMessageStore clearMessagesTombStoneTable]
  -[IMDMessageStore markMessageAsCleanWithROWID:]
  -[IMDMessageStore markMessageAsIgnoreButNeedingSyncWithROWID:]
  -[IMDMessageStore lastSyncedMessageRowID]


IMDChat : NSObject <INSpeakable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *spokenPhrase
 @property  NSString *pronunciationHint
 @property  NSString *vocabularyIdentifier
 @property  NSArray *alternativeSpeakableMatches
 @property  NSString *identifier
 @property  NSString *guid
 @property  unsigned char style
 @property  NSString *groupID
 @property  NSString *engramID
 @property  NSString *roomName
 @property  NSString *displayName
 @property  IMMessageItem *lastMessage
 @property  NSDictionary *properties
 @property  NSString *accountID
 @property  unsigned long unreadCount
 @property  long long rowID
 @property  NSArray *participants
 @property  BOOL isFiltered
 @property  BOOL isBlackholed
 @property  BOOL hasHadSuccessfulQuery
 @property  BOOL isUnnamedChat
 @property  unsigned long numMessagesSent
 @property  BOOL meCardUpdated
 @property  NSString *serverChangeToken
 @property  long long lastMessageTimeStampOnLoad
 @property  NSString *chatIdentifier
 @property  NSString *serviceName
 @property  long long state
 @property  NSString *cloudKitRecordID
 @property  NSString *srCloudKitRecordID
 @property  long long cloudKitSyncState
 @property  NSString *originalGroupID
 @property  long long lastReadMessageTimeStamp
 @property  NSString *lastSeenMessageGuid
 @property  NSString *srServerChangeToken
 @property  long long srCloudKitSyncState
 @property  IMDServiceSession *serviceSession
 @property  IMDAccount *account
 @property  IMDService *service
 @property  NSString *lastAddressedLocalHandle
 @property  NSString *lastAddressedSIMID
 @property  NSDate *lastSentMessageDate
 @property  NSDictionary *dictionaryRepresentation
 @property  NSDictionary *chatProperties
 @property  BOOL isArchived
 @property  BOOL createEngramGroupOnMessageSend
 @property  BOOL pendingENGroupParticipantUpdate
 @property  NSString *personCentricID
 @property  NSDictionary *nicknamesForParticipants
 @property  BOOL wasReportedAsJunk

  // class methods
  +[IMDChat _recordType]

  // instance methods
  -[IMDChat dealloc]
  -[IMDChat dictionaryRepresentation]
  -[IMDChat state]
  -[IMDChat displayName]
  -[IMDChat serviceName]
  -[IMDChat style]
  -[IMDChat setStyle:]
  -[IMDChat setState:]
  -[IMDChat properties]
  -[IMDChat account]
  -[IMDChat recordName]
  -[IMDChat groupID]
  -[IMDChat setDisplayName:]
  -[IMDChat setProperties:]
  -[IMDChat setGroupID:]
  -[IMDChat spokenPhrase]
  -[IMDChat service]
  -[IMDChat setServiceName:]
  -[IMDChat updateProperties:]
  -[IMDChat participants]
  -[IMDChat accountID]
  -[IMDChat setAccountID:]
  -[IMDChat serverChangeToken]
  -[IMDChat setServerChangeToken:]
  -[IMDChat addParticipant:]
  -[IMDChat removeParticipant:]
  -[IMDChat isFiltered]
  -[IMDChat setGuid:]
  -[IMDChat guid]
  -[IMDChat cloudKitSyncState]
  -[IMDChat cloudKitRecordID]
  -[IMDChat setRoomName:]
  -[IMDChat setCloudKitSyncState:]
  -[IMDChat setCloudKitRecordID:]
  -[IMDChat setSrCloudKitSyncState:]
  -[IMDChat setSrCloudKitRecordID:]
  -[IMDChat roomName]
  -[IMDChat srCloudKitRecordID]
  -[IMDChat personCentricID]
  -[IMDChat srCloudKitSyncState]
  -[IMDChat setParticipants:]
  -[IMDChat addParticipants:]
  -[IMDChat pronunciationHint]
  -[IMDChat vocabularyIdentifier]
  -[IMDChat alternativeSpeakableMatches]
  -[IMDChat isOlderThan:]
  -[IMDChat chatIdentifier]
  -[IMDChat setChatIdentifier:]
  -[IMDChat rowID]
  -[IMDChat unreadCount]
  -[IMDChat lastMessage]
  -[IMDChat lastAddressedSIMID]
  -[IMDChat compareBySequenceNumberAndDateDescending:]
  -[IMDChat lastSeenMessageGuid]
  -[IMDChat setLastAddressedSIMID:]
  -[IMDChat isBusinessChat]
  -[IMDChat updateIsFiltered:]
  -[IMDChat lastMessageTimeStampOnLoad]
  -[IMDChat isBlackholed]
  -[IMDChat engramID]
  -[IMDChat isArchived]
  -[IMDChat isNewerThan:]
  -[IMDChat setHasHadSuccessfulQuery:]
  -[IMDChat hasHadSuccessfulQuery]
  -[IMDChat setIsFiltered:]
  -[IMDChat lastSentMessageDate]
  -[IMDChat updateIsBlackholed:]
  -[IMDChat updateShouldForceToSMS:]
  -[IMDChat removeParticipants:]
  -[IMDChat updateServerChangeToken:]
  -[IMDChat setLastMessage:]
  -[IMDChat _chatRegistry]
  -[IMDChat meCardHasUpdated]
  -[IMDChat setEngramID:]
  -[IMDChat setLastAddressedLocalHandle:]
  -[IMDChat setCreateEngramGroupOnMessageSend:]
  -[IMDChat setPendingENGroupParticipantUpdate:]
  -[IMDChat _updateCachedParticipants]
  -[IMDChat setOriginalGroupID:]
  -[IMDChat setLastReadMessageTimeStamp:]
  -[IMDChat setLastSentMessageDate:]
  -[IMDChat setLastMessageTimeStampOnLoad:]
  -[IMDChat setSrServerChangeToken:]
  -[IMDChat setIsBlackholed:]
  -[IMDChat setWasReportedAsJunk:]
  -[IMDChat originalGroupID]
  -[IMDChat lastAddressedLocalHandle]
  -[IMDChat lastReadMessageTimeStamp]
  -[IMDChat engroupCreationDate]
  -[IMDChat copyDictionaryRepresentation:]
  -[IMDChat storeAndBroadcastChatChanges]
  -[IMDChat srServerChangeToken]
  -[IMDChat updateLastAddressedHandle:forceUpdate:]
  -[IMDChat dictionaryRepresentationIncludingLastMessage]
  -[IMDChat getNumberOfTimesRespondedToThread]
  -[IMDChat _personIdentity]
  -[IMDChat _ckUniqueID]
  -[IMDChat setMeCardUpdated:]
  -[IMDChat initWithAccountID:service:guid:groupID:chatIdentifier:participants:roomName:displayName:lastAddressedLocalHandle:lastAddressedSIMID:properties:state:style:isFiltered:hasHadSuccessfulQuery:engramID:serverChangeToken:cloudKitSyncState:originalGroupID:lastReadMessageTimeStamp:lastMessageTimeStampOnLoad:srServerChangeToken:srCloudKitSyncState:cloudKitRecordID:srCloudKitRecordID:isBlackholed:]
  -[IMDChat _setUnreadCount:]
  -[IMDChat _setRowID:]
  -[IMDChat serviceSession]
  -[IMDChat chatProperties]
  -[IMDChat _updateLastMessage:]
  -[IMDChat generateNewGroupID]
  -[IMDChat isUnnamedChat]
  -[IMDChat updateGroupID:]
  -[IMDChat updateEngramID:]
  -[IMDChat updateEngroupCreationDate:]
  -[IMDChat updateLastReadMessageTimeStampIfNeeded:]
  -[IMDChat updateSRServerChangeToken:]
  -[IMDChat updateCloudKitSyncState:]
  -[IMDChat updateSRCloudKitSyncState:]
  -[IMDChat updateOriginalGroupID:]
  -[IMDChat updateCloudKitRecordID:]
  -[IMDChat updateSrCloudKitRecordID:]
  -[IMDChat resetCKSyncState]
  -[IMDChat updateLastAddressedHandle:]
  -[IMDChat updateLastAddressedSIMID:]
  -[IMDChat updateDisplayName:]
  -[IMDChat updateNumberOfTimesRespondedToThread]
  -[IMDChat updateIsiMessageSpam:]
  -[IMDChat updateIsSMSSpamChatProperty:]
  -[IMDChat updateSMSSpamExtensionNameChatProperty:]
  -[IMDChat isiMessageSpam]
  -[IMDChat isSMSSpam]
  -[IMDChat lastSeenMessageGUID]
  -[IMDChat updateLastSeenMessageGuidIfNeeded:]
  -[IMDChat updateHasHadSuccessfulQuery:]
  -[IMDChat _persistMergedIDMergedChatsIfNeeded:]
  -[IMDChat cloudKitChatID]
  -[IMDChat cloudKitDebugDescription]
  -[IMDChat tearDownToneNotificationSessionIfNeeded]
  -[IMDChat updateNicknamesForParticipants:]
  -[IMDChat createEngramGroupOnMessageSend]
  -[IMDChat pendingENGroupParticipantUpdate]
  -[IMDChat nicknamesForParticipants]
  -[IMDChat wasReportedAsJunk]
  -[IMDChat numMessagesSent]
  -[IMDChat setNumMessagesSent:]
  -[IMDChat meCardUpdated]
  -[IMDChat initWithCKRecord:isUsingStingRay:]
  -[IMDChat applyChangesUsingCKRecord:isUsingStingRay:]
  -[IMDChat copyCKRecordRepresentationWithZoneID:salt:isUsingStingRay:]
  -[IMDChat _copyCKRecordFromExistingCKMetadataIsUsingStringRay:zoneID:salt:]


IMDCKRecordSaltManager : NSObject
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  NSString *cachedSalt

  // class methods
  +[IMDCKRecordSaltManager sharedInstance]

  // instance methods
  -[IMDCKRecordSaltManager init]
  -[IMDCKRecordSaltManager dealloc]
  -[IMDCKRecordSaltManager _container]
  -[IMDCKRecordSaltManager _scheduleOperation:]
  -[IMDCKRecordSaltManager clearLocalSyncState]
  -[IMDCKRecordSaltManager cachedSalt]
  -[IMDCKRecordSaltManager ckQueue]
  -[IMDCKRecordSaltManager setCachedSalt:]
  -[IMDCKRecordSaltManager fetchLatestRecordKeyFromCKAndCreateIfKeyDoesNotExistWithCompletion:forceFetch:]
  -[IMDCKRecordSaltManager _CKUtilitiesSharedInstance]
  -[IMDCKRecordSaltManager _fetchLatestSaltFromCloudKitAndPersistWithCompletion:]
  -[IMDCKRecordSaltManager fetchLatestRecordKeyFromCKAndCreateIfKeyDoesNotExistWithCompletion:]
  -[IMDCKRecordSaltManager deleteDeDupeRecordZone]


IMDChatRegistry : NSObject <TUConversationManagerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *idToHandlesMap
 @property  NSData *historyToken
 @property  IMDCKUtilities *ckUtilities
 @property  IMDChatStore *chatStore
 @property  BOOL hasDumpedLogsForNoExisitingGroup
 @property  IMDMessageProcessingController *messageProcessingController
 @property  IMDMessageHistorySyncController *messageHistorySyncController
 @property  NSMutableDictionary *personCentricGroupedChatsCache
 @property  NSMutableDictionary *cachedAliasToCNIDMap
 @property  TUConversationManager *conversationManager
 @property  NSArray *chats
 @property  NSArray *allChats
 @property  NSArray *blackholedChats
 @property  BOOL blackholedChatsExist

  // class methods
  +[IMDChatRegistry sharedInstance]

  // instance methods
  -[IMDChatRegistry init]
  -[IMDChatRegistry dealloc]
  -[IMDChatRegistry systemDidUnlock]
  -[IMDChatRegistry systemDidLeaveFirstDataProtectionLock]
  -[IMDChatRegistry aliasToCNIDMap]
  -[IMDChatRegistry historyToken]
  -[IMDChatRegistry setHistoryToken:]
  -[IMDChatRegistry conversationManager:stateChangedForConversation:]
  -[IMDChatRegistry conversationManager]
  -[IMDChatRegistry existingChatWithGUID:]
  -[IMDChatRegistry removeChat:]
  -[IMDChatRegistry simulateMessageReceive:serviceName:groupID:handles:sender:]
  -[IMDChatRegistry blackholedChatsExist]
  -[IMDChatRegistry _activeTUConversations]
  -[IMDChatRegistry _messageStore]
  -[IMDChatRegistry _contactsChanged:]
  -[IMDChatRegistry chats]
  -[IMDChatRegistry updateProperties:chat:style:]
  -[IMDChatRegistry ckUtilities]
  -[IMDChatRegistry doneLoadingAfterMerge]
  -[IMDChatRegistry _statsCollector]
  -[IMDChatRegistry updateLastMessageForChat:hintMessage:]
  -[IMDChatRegistry updateStateForChat:fromMessage:toMessage:forcePost:hintMessage:shouldRebuildFailedMessageDate:shouldCalculateUnreadCount:setUnreadCountToZero:]
  -[IMDChatRegistry existingChatsForIDs:onService:style:]
  -[IMDChatRegistry removeMessage:fromChat:]
  -[IMDChatRegistry _isUsingStingRay]
  -[IMDChatRegistry invalidatePersonCentricGroupedChatsCache]
  -[IMDChatRegistry checkBlackholedChatsExistAfterUpdatingChatWithAdd:]
  -[IMDChatRegistry existingChatsWithGroupID:]
  -[IMDChatRegistry _forceReloadChats:]
  -[IMDChatRegistry updateMeCardHasUpdatedForAllChats]
  -[IMDChatRegistry _chatsWithBlackholed:]
  -[IMDChatRegistry existingChatForID:account:]
  -[IMDChatRegistry addChat:]
  -[IMDChatRegistry addIMDHandleToRegistry:]
  -[IMDChatRegistry existingChatWithIdentifier:account:]
  -[IMDChatRegistry existingChatForRoom:account:]
  -[IMDChatRegistry allChats]
  -[IMDChatRegistry existingChatForIDs:account:displayName:groupID:style:]
  -[IMDChatRegistry allChatsWithIdentifier:style:serviceNames:]
  -[IMDChatRegistry updateLastMessageForChat:hintMessage:historyQuery:]
  -[IMDChatRegistry isBeingSetup]
  -[IMDChatRegistry updateUnreadCountForChat:]
  -[IMDChatRegistry _sharedMessageStore]
  -[IMDChatRegistry updateStateForChat:hintMessage:shouldRebuildFailedMessageDate:]
  -[IMDChatRegistry updateStateForChat:forcePost:shouldRebuildFailedMessageDate:]
  -[IMDChatRegistry updateStateForChat:forcePost:shouldRebuildFailedMessageDate:shouldCalculateUnreadCount:]
  -[IMDChatRegistry __removeChatFromGroupIDChatIndex:]
  -[IMDChatRegistry __addChatToGroupIDChatIndex:]
  -[IMDChatRegistry addChat:firstLoad:]
  -[IMDChatRegistry personCentricGroupedChatsCache]
  -[IMDChatRegistry _contactsBasedMerginEnabled]
  -[IMDChatRegistry _updateCachedCNIDMapForHandles:]
  -[IMDChatRegistry cachedAliasToCNIDMap]
  -[IMDChatRegistry removeIMDHandleFromRegistry:]
  -[IMDChatRegistry updateStateForChat:hintMessage:]
  -[IMDChatRegistry addMessage:toChat:deferSpotlightIndexing:]
  -[IMDChatRegistry chatStore]
  -[IMDChatRegistry stringForChatStyle:]
  -[IMDChatRegistry _fixSMSGroupChatAndStoreIfNeeded:iMessageChat:]
  -[IMDChatRegistry _chatInfoInRange:wantsBlackholed:]
  -[IMDChatRegistry loadChatsWithCompletionBlock:]
  -[IMDChatRegistry _saveChats]
  -[IMDChatRegistry repairDuplicateChatsIfNeeded]
  -[IMDChatRegistry repairPersonCentricIDsOnChatsIfNeeded]
  -[IMDChatRegistry _populateContactIDOnHandles]
  -[IMDChatRegistry _persistMergeIDMergedChatsIfNeeded]
  -[IMDChatRegistry setUpInitialConversationManager]
  -[IMDChatRegistry _allHandles]
  -[IMDChatRegistry allExistingChatsWithIdentifier:style:]
  -[IMDChatRegistry _makeAllAttachmentsClassC]
  -[IMDChatRegistry _createGroupChatsArray]
  -[IMDChatRegistry findDuplicateUnnamedGroups:]
  -[IMDChatRegistry updateGroupIDForChat:newGroupID:]
  -[IMDChatRegistry _chat:isDuplicateOfChat:]
  -[IMDChatRegistry findDuplicateChats:]
  -[IMDChatRegistry _findChatWinnerInDuplicateChatArray:fixDisplayName:]
  -[IMDChatRegistry _findLosingChatGUIDsInArrayOfChats:withWinner:]
  -[IMDChatRegistry _mergeDuplicateGroupsIfNeeded]
  -[IMDChatRegistry groupChatsBasedOnIdentity:]
  -[IMDChatRegistry setPersonCentricGroupedChatsCache:]
  -[IMDChatRegistry _fixUpChatParticipantsIfNeeded:]
  -[IMDChatRegistry groupChatsBasedOnIdentityUsingCacheIfApplicable:]
  -[IMDChatRegistry sortPersonCentricChatGroups:]
  -[IMDChatRegistry truncateSortedChatsGroupedByPersonCentricID:toMaximumNumberOfChats:]
  -[IMDChatRegistry _updateSyncStatisticsForChat:incrementTotalCount:]
  -[IMDChatRegistry _existingChatWithOriginalGroupID:onService:]
  -[IMDChatRegistry hasDumpedLogsForNoExisitingGroup]
  -[IMDChatRegistry setHasDumpedLogsForNoExisitingGroup:]
  -[IMDChatRegistry _existingChatForCKRecord:]
  -[IMDChatRegistry _markForksAsSyncedForChat:]
  -[IMDChatRegistry _shouldUpdateSyncStatsForChat:originalSyncState:]
  -[IMDChatRegistry _ensureNoExistingGroupForCKRecord:]
  -[IMDChatRegistry _insertChatUsingCKRecord:]
  -[IMDChatRegistry _shouldMigrateIMDHandlesPersonCentricIDsOnAllChats]
  -[IMDChatRegistry _noteDownAttemptToMigratePersonCentricIDsOnIMDHandles]
  -[IMDChatRegistry _pcmidToHandlesMapForChats:]
  -[IMDChatRegistry _handlesThatNeedPCMIDsUpdatedGivenMap:]
  -[IMDChatRegistry _updatePCMIDOnHandles:]
  -[IMDChatRegistry _addHandlesToPCMIDMapForChatParticipants:pcmidToHandleMap:]
  -[IMDChatRegistry _handlesThatNeedPCMIDUpdatedGivenArray:]
  -[IMDChatRegistry _updatePCMIDForHandle:]
  -[IMDChatRegistry _personCentricIDForHandleID:]
  -[IMDChatRegistry _updateHandleInDBWithPCMID:handle:]
  -[IMDChatRegistry addItem:toChat:]
  -[IMDChatRegistry processMessageUsingCKRecord:updatedLastMessageCount:]
  -[IMDChatRegistry _itemFromCKRecord:]
  -[IMDChatRegistry _parentChatIDFromCKRecord:]
  -[IMDChatRegistry _lookupChatUsingID:]
  -[IMDChatRegistry _shouldUpdateSyncStatsForMessage:originalSyncState:]
  -[IMDChatRegistry _updateSyncStatisticsForMessage:incrementTotalCount:]
  -[IMDChatRegistry _setSortIDOnIncomingMessage:forChat:]
  -[IMDChatRegistry _addItemToParentChatIfNotLocationItem:parentChat:updatedLastMessageCount:]
  -[IMDChatRegistry _updateCachedAliasToCNIDMap:withHistoryToken:completionHandler:]
  -[IMDChatRegistry idToHandlesMap]
  -[IMDChatRegistry _aliasToCNIDMapForAliases:]
  -[IMDChatRegistry _generateCurrentAliasToCNIDDictionary]
  -[IMDChatRegistry setCachedAliasToCNIDMap:]
  -[IMDChatRegistry _extractHandlesFromMap:usingCNID:]
  -[IMDChatRegistry existingOneOnOneChatsWithIdentifiers:]
  -[IMDChatRegistry existingUnnamedGroupChatsContainingHandles:]
  -[IMDChatRegistry _checkForContactChanges]
  -[IMDChatRegistry _chatGUIDsThatNeedRemergingWithCompletionHandler:]
  -[IMDChatRegistry _chatGUIDsThatNeedRemerging:chatDictionaryArray:aliasMap:]
  -[IMDChatRegistry _updateCurrentAliasToCNIDDictionaryAndHistoryTokenWithCompletionHandler:]
  -[IMDChatRegistry _handlesWithChangedContactsOriginalMap:newMap:]
  -[IMDChatRegistry _chatsContainingHandles:]
  -[IMDChatRegistry blackholedChats]
  -[IMDChatRegistry personCentricGroupedChatsArrayWithMaximumNumberOfChats:skipsLastMessageLoading:usingChats:useCachedChatGroups:]
  -[IMDChatRegistry chatForHandle:account:chatIdentifier:guid:lastAddressedHandle:lastAddressedSIMID:isBlackholed:]
  -[IMDChatRegistry chatForHandles:account:chatIdentifier:style:groupID:displayName:guid:lastAddressedHandle:lastAddressedSIMID:isBlackholed:]
  -[IMDChatRegistry chatForRoom:account:chatIdentifier:guid:]
  -[IMDChatRegistry existingChatWithEngramID:]
  -[IMDChatRegistry existingChatForIDs:account:style:]
  -[IMDChatRegistry allExistingSupportedServiceChatsWithIdentifier:style:]
  -[IMDChatRegistry updateStateForChat:hintMessage:shouldRebuildFailedMessageDate:shouldCalculateUnreadCount:]
  -[IMDChatRegistry updateStateForChat:hintMessage:shouldRebuildFailedMessageDate:setUnreadCountToZero:]
  -[IMDChatRegistry updateStateForChat:forcePost:]
  -[IMDChatRegistry updateStateForChat:forcePost:shouldRebuildFailedMessageDate:setUnreadCountToZero:]
  -[IMDChatRegistry removeItem:fromChat:]
  -[IMDChatRegistry addMessage:toChat:]
  -[IMDChatRegistry _chatInfoForConnection]
  -[IMDChatRegistry _allChatInfo]
  -[IMDChatRegistry _chatInfoForNumberOfChats:]
  -[IMDChatRegistry _blackholedChatInfoForNumberOfChats:]
  -[IMDChatRegistry _chatInfoForSaving]
  -[IMDChatRegistry _setInitialLoadForTesting:]
  -[IMDChatRegistry refreshUIWhileSyncing]
  -[IMDChatRegistry saveChats]
  -[IMDChatRegistry allHandlesForID:]
  -[IMDChatRegistry _updateDuplicateUnnamedGroupsWithNewGroupIDIfNeeded]
  -[IMDChatRegistry _aliasToHandlesMap:]
  -[IMDChatRegistry chatIdToLastMessageMapOfOldChats]
  -[IMDChatRegistry chatsToUploadToCloudKitWithLimit:isUsingStingRay:]
  -[IMDChatRegistry updateChatWithGUID:serverChangeToken:recordID:]
  -[IMDChatRegistry updateChatUsingCKRecord:]
  -[IMDChatRegistry markChatAsDeferredForSyncingUsingCKRecord:]
  -[IMDChatRegistry markDefferredChatsAsNeedingSync]
  -[IMDChatRegistry resetChatSyncStateForRecord:]
  -[IMDChatRegistry messagesToUploadToCloudKitWithLimit:]
  -[IMDChatRegistry processMessageUsingCKRecord:]
  -[IMDChatRegistry copyRecordIDsAndGUIDsPendingCloudKitDelete]
  -[IMDChatRegistry clearPendingDeleteTable]
  -[IMDChatRegistry _existingiMessageChatForChatIdentifier:style:]
  -[IMDChatRegistry setIdToHandlesMap:]
  -[IMDChatRegistry setCkUtilities:]
  -[IMDChatRegistry setChatStore:]
  -[IMDChatRegistry messageProcessingController]
  -[IMDChatRegistry messageHistorySyncController]
  -[IMDChatRegistry _insertCurrentActiveTUConversationsIfNeeded]
  -[IMDChatRegistry _addTUConversationToMessageStore:shouldBroadcast:]
  -[IMDChatRegistry _chatForTUGroupID:]
  -[IMDChatRegistry _conversationItemForChat:conversation:]
  -[IMDChatRegistry _initiatorForConversation:chat:]
  -[IMDChatRegistry _shouldAddNewItemForConversation:]


IMDCKDatabaseManager : NSObject
 @property  CKContainer *manateeContainer
 @property  CKContainer *nonHSA2ManateeContainer
 @property  CKContainer *nickNameContainer
 @property  CKContainer *truthContainer
 @property  BOOL useStingRay

  // class methods
  +[IMDCKDatabaseManager sharedInstance]

  // instance methods
  -[IMDCKDatabaseManager init]
  -[IMDCKDatabaseManager dealloc]
  -[IMDCKDatabaseManager truthContainer]
  -[IMDCKDatabaseManager truthDatabase]
  -[IMDCKDatabaseManager useStingRay]
  -[IMDCKDatabaseManager manateeDataBase]
  -[IMDCKDatabaseManager nonHSA2ManateeDatabase]
  -[IMDCKDatabaseManager _serverSaysToUseOldContainer]
  -[IMDCKDatabaseManager _nickNameContainerIdentifier]
  -[IMDCKDatabaseManager manateeContainer]
  -[IMDCKDatabaseManager nonHSA2ManateeContainer]
  -[IMDCKDatabaseManager _nickNameContainer]
  -[IMDCKDatabaseManager truthPublicDatabase]
  -[IMDCKDatabaseManager nickNamePublicDatabase]
  -[IMDCKDatabaseManager fetchCurrentUserForNicknameContainer:]
  -[IMDCKDatabaseManager nickNameContainer]


IMDCKMockRecordZone : NSObject
 @property  NSString *identifier
 @property  NSObject<OS_dispatch_queue> *queue
 @property  IDSKVStore *recordStore

  // instance methods
  -[IMDCKMockRecordZone dealloc]
  -[IMDCKMockRecordZone queue]
  -[IMDCKMockRecordZone identifier]
  -[IMDCKMockRecordZone initWithIdentifier:]
  -[IMDCKMockRecordZone recordStore]
  -[IMDCKMockRecordZone handleOperation:]
  -[IMDCKMockRecordZone _kvStorePath]
  -[IMDCKMockRecordZone _handleFetchZoneChangesOperation:]
  -[IMDCKMockRecordZone _handleModifyRecordsOperation:]
  -[IMDCKMockRecordZone _fetchRecordZoneChangesOptionsFromOperation:]
  -[IMDCKMockRecordZone _fetchResultLimit:]
  -[IMDCKMockRecordZone _ckRecordFromData:]
  -[IMDCKMockRecordZone _serializedCKRecordData:]
  -[IMDCKMockRecordZone setRecordStore:]


IMDCKRampManager : NSObject
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  NSTimer *retryTimer

  // class methods
  +[IMDCKRampManager sharedInstance]

  // instance methods
  -[IMDCKRampManager init]
  -[IMDCKRampManager dealloc]
  -[IMDCKRampManager _scheduleOperation:]
  -[IMDCKRampManager retryTimer]
  -[IMDCKRampManager setRetryTimer:]
  -[IMDCKRampManager ckQueue]
  -[IMDCKRampManager _CKUtilitiesSharedInstance]
  -[IMDCKRampManager fetchLatestRampStateFromCK:]
  -[IMDCKRampManager _rampUpRecordID]
  -[IMDCKRampManager _shouldSendPriorityRequest]
  -[IMDCKRampManager _writeRampStateAllowed:promoted:visible:fetchHadServerError:]
  -[IMDCKRampManager _performRampCheckWithRetryAfter:]
  -[IMDCKRampManager _persistRampFetchServerError:]
  -[IMDCKRampManager _fetchLatestRampStateFromCK:]
  -[IMDCKRampManager cachedRampState:]


IMDInconsistency : NSObject
 @property  id context
 @property  NSDate *firstOccurrence
 @property  unsigned long count

  // instance methods
  -[IMDInconsistency init]
  -[IMDInconsistency count]
  -[IMDInconsistency setCount:]
  -[IMDInconsistency context]
  -[IMDInconsistency setContext:]
  -[IMDInconsistency firstOccurrence]
  -[IMDInconsistency shouldJettison:]


IMDAttachmentStore : NSObject
  // class methods
  +[IMDAttachmentStore sharedInstance]

  // instance methods
  -[IMDAttachmentStore markAllAttachmentsAsNotPurgeable]
  -[IMDAttachmentStore updateLegacyTransferGUIDIfNeeded:]
  -[IMDAttachmentStore attachmentWithGUID:]
  -[IMDAttachmentStore markAllAttachmentsAsNeedingCloudKitSync]
  -[IMDAttachmentStore updateAttachment:]
  -[IMDAttachmentStore isSafeToDeleteAttachmentAtPath:]
  -[IMDAttachmentStore storeAttachment:associateWithMessageWithGUID:]
  -[IMDAttachmentStore updateLegacyTransferGUIDOnMessageIfNeeded:]
  -[IMDAttachmentStore markAttachmentPurgeable:]
  -[IMDAttachmentStore fileTransferWithAttachmentRecordRef:]
  -[IMDAttachmentStore _fileEligibleForCacheDelete:]
  -[IMDAttachmentStore _cloudkitSyncingEnabled]
  -[IMDAttachmentStore markFileAsPurgeable:]
  -[IMDAttachmentStore getAuxVideoPath:]
  -[IMDAttachmentStore _updateLegacyTransferGUIDOnMessageIfNeeded:andUpdateTransfer:]
  -[IMDAttachmentStore _shouldEarlyReturnForWrongItemType:]
  -[IMDAttachmentStore _updatedMessageBody:replacingGuid:withGuid:]
  -[IMDAttachmentStore removeAttachment:fromMessageWithGUID:]
  -[IMDAttachmentStore deleteAttachmentsWithGUIDs:]
  -[IMDAttachmentStore deleteAttachmentDataForTransfer:]
  -[IMDAttachmentStore deleteAttachmentWithGUID:]


IMDCKAbstractSyncController : NSObject
 @property  BOOL isSyncing
 @property  BOOL isUsingStingRay
 @property  IMDCKSyncState *syncState
 @property  <IMDCKAbstractSyncControllerDelegate> *delegate

  // instance methods
  -[IMDCKAbstractSyncController delegate]
  -[IMDCKAbstractSyncController setDelegate:]
  -[IMDCKAbstractSyncController .cxx_destruct]
  -[IMDCKAbstractSyncController isSyncing]
  -[IMDCKAbstractSyncController syncState]
  -[IMDCKAbstractSyncController syncControllerRecordType]
  -[IMDCKAbstractSyncController setIsSyncing:]
  -[IMDCKAbstractSyncController clearLocalSyncState:]
  -[IMDCKAbstractSyncController ckUtilities]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateToUploading]
  -[IMDCKAbstractSyncController isUsingStingRay]
  -[IMDCKAbstractSyncController _fetchedAllChangesFromCloudKit]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateToDownloading]
  -[IMDCKAbstractSyncController syncBatchCompleted:]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateToDeleting]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateStateToStarting]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateStateToFinished]
  -[IMDCKAbstractSyncController addSyncDebuggingInfoToDictionary:]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateToStartingPeriodicSync]
  -[IMDCKAbstractSyncController setBroadcastedSyncStateToStartingInitialSync]
  -[IMDCKAbstractSyncController syncStateDebuggingInfo:]


IMDChatStore : NSObject
 @property  NSString *modificationStamp
 @property  <IMDMessagePTaskStore> *messagePTaskStore

  // class methods
  +[IMDChatStore sharedInstance]

  // instance methods
  -[IMDChatStore init]
  -[IMDChatStore dealloc]
  -[IMDChatStore _chatRegistry]
  -[IMDChatStore setModificationStamp:]
  -[IMDChatStore chatsGUIDsForMessageWithGUID:]
  -[IMDChatStore chatsGUIDsForMessageWithIdentifier:]
  -[IMDChatStore modificationStamp]
  -[IMDChatStore _updateModificationDate]
  -[IMDChatStore storeChat:]
  -[IMDChatStore unreadCountForChat:]
  -[IMDChatStore deleteChat:]
  -[IMDChatStore addMessageWithGUID:toChat:]
  -[IMDChatStore removeMessageWithGUID:fromChat:]
  -[IMDChatStore addMessageWithGUID:toChat:deferSpotlightIndexing:]
  -[IMDChatStore loadAllChats]
  -[IMDChatStore newestChatWithOriginalGroupID:onService:]
  -[IMDChatStore updateHandle:forMessage:WithPC:onService:]
  -[IMDChatStore _broadcastUpdateForMergedChatWithPersonCentricIDIfNeeded:updatedHandleID:]
  -[IMDChatStore archiveChat:]
  -[IMDChatStore unarchiveChat:]
  -[IMDChatStore blackholeChat:]
  -[IMDChatStore unblackholeChat:]
  -[IMDChatStore chatsWithHandle:onService:]
  -[IMDChatStore chatsWithRoomname:onService:]
  -[IMDChatStore setChatIsFiltered:withChatGuid:]
  -[IMDChatStore updatePersonCentricIDForHandlesInChatWithMessage:fromIdentifier:personCentricID:chat:]
  -[IMDChatStore _allHandlesOnAllChats]
  -[IMDChatStore _broadcastToForceReloadChats]
  -[IMDChatStore messagePTaskStore]
  -[IMDChatStore setMessagePTaskStore:]


IMDLocationSharingController : NSObject
  // class methods
  +[IMDLocationSharingController sharedInstance]
  +[IMDLocationSharingController addLocationShareItemToMatchingChats:]
  +[IMDLocationSharingController _addLocationShareItemToMatchingChats:handleID:hasStoredItem:broadcastChanges:]

  // instance methods
  -[IMDLocationSharingController init]
  -[IMDLocationSharingController dealloc]
  -[IMDLocationSharingController didStartSharingMyLocationWithHandle:]
  -[IMDLocationSharingController didStopSharingMyLocationWithHandle:]
  -[IMDLocationSharingController didStartAbilityToGetLocationForHandle:]
  -[IMDLocationSharingController didStopAbilityToGetLocationForHandle:]
  -[IMDLocationSharingController didFailToHandleMappingPacket:error:]
  -[IMDLocationSharingController sendMappingPacket:toHandle:account:]
  -[IMDLocationSharingController _generateLocationSharingItemWithHandleID:direction:action:]
  -[IMDLocationSharingController receivedIncomingLocationSharePacket:]
  -[IMDLocationSharingController _forwardMappingPacket:toID:account:]


IMDCKMessageSyncController : IMDCKAbstractSyncController
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  IMDRecordZoneManager *recordZoneManager
 @property  <IMDCKSyncTokenStore> *syncTokenStore
 @property  CKServerChangeToken *latestSyncToken
 @property  IMDCKMessageSyncCKOperationFactory *CKOperationFactory
 @property  CKServerChangeToken *archivedRecordSyncToken
 @property  NSObject<OS_xpc_object> *activity
 @property  unsigned long deviceConditionsToCheck
 @property  NSMutableDictionary *visitedChats

  // class methods
  +[IMDCKMessageSyncController sharedInstance]

  // instance methods
  -[IMDCKMessageSyncController init]
  -[IMDCKMessageSyncController dealloc]
  -[IMDCKMessageSyncController activity]
  -[IMDCKMessageSyncController setActivity:]
  -[IMDCKMessageSyncController _recordsToSave]
  -[IMDCKMessageSyncController _scheduleOperation:]
  -[IMDCKMessageSyncController deleteMessagesZone]
  -[IMDCKMessageSyncController syncControllerRecordType]
  -[IMDCKMessageSyncController setRecordZoneManager:]
  -[IMDCKMessageSyncController recordZoneManager]
  -[IMDCKMessageSyncController clearLocalSyncState:]
  -[IMDCKMessageSyncController ckQueue]
  -[IMDCKMessageSyncController _chatRegistry]
  -[IMDCKMessageSyncController initWithSyncTokenStore:]
  -[IMDCKMessageSyncController setDeviceConditionsToCheck:]
  -[IMDCKMessageSyncController deviceConditionsToCheck]
  -[IMDCKMessageSyncController _updateDeviceConditionsToCheckIfNeededForCurrentBatchCount:maxBatchCount:]
  -[IMDCKMessageSyncController _ckUtilitiesInstance]
  -[IMDCKMessageSyncController _recordKeyManagerSharedInstance]
  -[IMDCKMessageSyncController _deviceConditionsAllowsMessageSyncForCurrentBatchCount:maxBatchCount:]
  -[IMDCKMessageSyncController CKOperationFactory]
  -[IMDCKMessageSyncController _kickOffWriteOnCKQueueWithCompletion:]
  -[IMDCKMessageSyncController _kickOffWriteIfNeededForSyncType:completion:]
  -[IMDCKMessageSyncController _operationErrorForModifyingRecordCompletion:]
  -[IMDCKMessageSyncController syncTokenStore]
  -[IMDCKMessageSyncController _copyRecordIDsToDeleteWithLimit:]
  -[IMDCKMessageSyncController setCKOperationFactory:]
  -[IMDCKMessageSyncController setSyncTokenStore:]
  -[IMDCKMessageSyncController _migrateSyncTokens]
  -[IMDCKMessageSyncController _numberOfMessagesToUpload]
  -[IMDCKMessageSyncController _messageZoneID]
  -[IMDCKMessageSyncController _messageRecordSalt]
  -[IMDCKMessageSyncController _sharedIMDMessageStore]
  -[IMDCKMessageSyncController _isValidCKRecordToSync:]
  -[IMDCKMessageSyncController _recordsToSaveWithAttemptCount:]
  -[IMDCKMessageSyncController _writeDirtyMessagesToCloudKitWithCompletion:]
  -[IMDCKMessageSyncController _syncOperationGroupName]
  -[IMDCKMessageSyncController _processRecordWriteCompletionForRecord:NSError:]
  -[IMDCKMessageSyncController _processModifyRecordsCompletion:deletedRecordIDs:operationError:isLastBatchOfWrite:writeCompletionBlock:]
  -[IMDCKMessageSyncController _deviceConditionsAllowsMessageSyncForActivity:deviceConditionsToCheck:currentBatchCount:maxBatchCount:]
  -[IMDCKMessageSyncController _isCoreDuetSyncForMaxBatchCount:]
  -[IMDCKMessageSyncController _shouldDeferCoreDuetMessagesSync]
  -[IMDCKMessageSyncController _numberOfBatchesOfMessagesToFetchInInitialSync]
  -[IMDCKMessageSyncController setArchivedRecordSyncToken:]
  -[IMDCKMessageSyncController _changeTokenKey]
  -[IMDCKMessageSyncController setLatestSyncToken:]
  -[IMDCKMessageSyncController _fetchArchivedRecordsIfNeeded:currentBatchCount:maxNumberOfBatches:WithCompletionBlock:]
  -[IMDCKMessageSyncController _resetArvchivedRecordSyncToken]
  -[IMDCKMessageSyncController archivedRecordSyncToken]
  -[IMDCKMessageSyncController _processRecordChange:]
  -[IMDCKMessageSyncController _processArchivedRecordsFetchCompletionZoneID:serverChangeToken:moreComing:currentBatchCount:maxNumberOfBatches:NSError:completionBlock:]
  -[IMDCKMessageSyncController _processFetchArchivedRecordCompletionWithError:WithCompletionBlock:]
  -[IMDCKMessageSyncController _fetchMessageZoneChangesSyncType:currentBatchCount:maxNumberOfBatches:completionBlock:]
  -[IMDCKMessageSyncController _messageZoneCreated]
  -[IMDCKMessageSyncController _doesAnyRecordZoneIDHavePendingArchivedRecords:]
  -[IMDCKMessageSyncController _numberOfRecordsToFetchForSyncType:]
  -[IMDCKMessageSyncController _isDiskSpaceAvailableForSyncType:currentBatchCount:]
  -[IMDCKMessageSyncController latestSyncToken]
  -[IMDCKMessageSyncController _shouldFetchArchivedRecords:]
  -[IMDCKMessageSyncController _processRecordZoneFetchCompletionZoneID:serverChangeToken:clientChangeTokenData:moreComing:NSError:syncType:currentBatchCount:maxNumberOfBatches:shouldFetchArchivedRecords:completionBlock:]
  -[IMDCKMessageSyncController _processFetchRecordZoneChangesCompletionWithError:completionBlock:]
  -[IMDCKMessageSyncController _noteSyncEnded]
  -[IMDCKMessageSyncController _shouldMarkAllMessagesAsNeedingSync]
  -[IMDCKMessageSyncController _hasMarkedAllMessagesAsNeedingSync]
  -[IMDCKMessageSyncController _markAllUnsuccessFullSyncMessagesAsNeedingSync]
  -[IMDCKMessageSyncController _deleteStingRaySyncToken]
  -[IMDCKMessageSyncController deleteMessageSyncToken]
  -[IMDCKMessageSyncController _needsToMarkAllMessagesAsNeedingSync]
  -[IMDCKMessageSyncController _processRecordDeletionCompletion:error:completionBlock:]
  -[IMDCKMessageSyncController _constructMessageRecordIDUsingTombStoneDictionary:]
  -[IMDCKMessageSyncController _messageDeleteBatchSize]
  -[IMDCKMessageSyncController syncDeletedMessagesToCloudKitWithCompletion:]
  -[IMDCKMessageSyncController _deleteMessagesWithRecordIDs:completion:]
  -[IMDCKMessageSyncController _resetSyncToken]
  -[IMDCKMessageSyncController syncMessagesWithSyncType:deviceConditionsToCheck:activity:completionBlock:]
  -[IMDCKMessageSyncController visitedChats]
  -[IMDCKMessageSyncController setVisitedChats:]


IMDInvocationForwarder : NSObject
 @property  NSMutableArray *_targets
 @property  NSLock *_lock

  // instance methods
  -[IMDInvocationForwarder dealloc]
  -[IMDInvocationForwarder respondsToSelector:]
  -[IMDInvocationForwarder methodSignatureForSelector:]
  -[IMDInvocationForwarder forwardInvocation:]
  -[IMDInvocationForwarder _lock]
  -[IMDInvocationForwarder _targets]
  -[IMDInvocationForwarder removeTarget:]
  -[IMDInvocationForwarder addTarget:]
  -[IMDInvocationForwarder initWithTargets:]
  -[IMDInvocationForwarder set_targets:]
  -[IMDInvocationForwarder set_lock:]


IMDCKBackupController : NSObject <IMDXPCEventStreamHandlerDelegate>
 @property  IMDCKUtilities *ckUtilities
 @property  NSDate *firstSyncDate
 @property  BOOL iCloudBackupsDisabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDCKBackupController sharedInstance]

  // instance methods
  -[IMDCKBackupController .cxx_destruct]
  -[IMDCKBackupController _enqueOperation:]
  -[IMDCKBackupController iCloudBackupsDisabled]
  -[IMDCKBackupController setICloudBackupsDisabled:]
  -[IMDCKBackupController dateOfLastBackUp]
  -[IMDCKBackupController ckUtilities]
  -[IMDCKBackupController removePathFromiCloudBackup:]
  -[IMDCKBackupController _ensureRestoredDatabaseToBackup]
  -[IMDCKBackupController setCkUtilities:]
  -[IMDCKBackupController syncStateDebuggingInfo:]
  -[IMDCKBackupController _setICloudBackupsDisabled:]
  -[IMDCKBackupController writeUserDefault:forKey:]
  -[IMDCKBackupController readUserDefaultForKey:]
  -[IMDCKBackupController _serverBagTimeIntervalForFirstSyncTimeout]
  -[IMDCKBackupController firstSyncDate]
  -[IMDCKBackupController setFirstSyncDate:]
  -[IMDCKBackupController _timeIntervalFromFirstSync:hasExpiredForDate:]
  -[IMDCKBackupController _firstSyncExpirationTimeInterval]
  -[IMDCKBackupController _readCurrentDeviceState]
  -[IMDCKBackupController _savePreviousDeviceState:]
  -[IMDCKBackupController _attemptToDisableiCloudBackupsWithCurrentDeviceState:]
  -[IMDCKBackupController _readPreviousDeviceState]
  -[IMDCKBackupController _currentDeviceStateIsRestore:]
  -[IMDCKBackupController _canDisableiCloudBackupsAfterRestore]
  -[IMDCKBackupController _fetchCountOfSyncedCloudKitRecords:totalCount:]
  -[IMDCKBackupController _disableiCloudBackupIfSyncPercentageIsHighEnough:totalCount:]
  -[IMDCKBackupController _disabledDirectoryPath]
  -[IMDCKBackupController _setiCloudBackupAttribute:onItemAtPath:error:]
  -[IMDCKBackupController createBackupManager]
  -[IMDCKBackupController _deviceIDFromMobileBackupManager:legacyDeviceID:]
  -[IMDCKBackupController checkDatabaseWasRestored]
  -[IMDCKBackupController _debuggingRestoreStateDescription]
  -[IMDCKBackupController eventStreamHandler:didReceiveEventWithName:userInfo:]
  -[IMDCKBackupController setUserDefaultBool:forKey:]
  -[IMDCKBackupController removeUserDefault:]
  -[IMDCKBackupController readUserDefaultBoolForKey:]
  -[IMDCKBackupController _readRecordCount]
  -[IMDCKBackupController _saveRecordCount:]
  -[IMDCKBackupController setFirstSyncDateToNow]
  -[IMDCKBackupController _firstSyncTimeoutHasExpired]
  -[IMDCKBackupController toggleiCloudBackupsIfNeeded:]
  -[IMDCKBackupController registerForDistributedNotifications]
  -[IMDCKBackupController _primaryAccountAltDSID]
  -[IMDCKBackupController _deviceStateHasChanged:]
  -[IMDCKBackupController pathRemovedFromBackup:]
  -[IMDCKBackupController iCloudBackupEnabledSystemWide]
  -[IMDCKBackupController sendDeviceIDToCloudKitWithCompletion:]


IMDReplayController : NSObject
 @property  NSDictionary *syncTaskByServiceName
 @property  IMDReplayStorageIterationContext *heldDeletionContext
 @property  @? automationCompletionBlock
 @property  IMDReplayStorageController *storageController
 @property  BOOL isRecordingReplayDB

  // class methods
  +[IMDReplayController sharedInstance]
  +[IMDReplayController batchSize]

  // instance methods
  -[IMDReplayController init]
  -[IMDReplayController dealloc]
  -[IMDReplayController storageController]
  -[IMDReplayController setStorageController:]
  -[IMDReplayController scheduleSyncTaskForServices:]
  -[IMDReplayController replayMessages]
  -[IMDReplayController _fetchNexBatchOfMessagesAndReplay]
  -[IMDReplayController setHeldDeletionContext:]
  -[IMDReplayController setSyncTaskByServiceName:]
  -[IMDReplayController heldDeletionContext]
  -[IMDReplayController automationCompletionBlock]
  -[IMDReplayController setAutomationCompletionBlock:]
  -[IMDReplayController _processBatch:]
  -[IMDReplayController endRecordingReplayDatabase]
  -[IMDReplayController initWithStorageController:]
  -[IMDReplayController storeMessage:type:error:]
  -[IMDReplayController deleteReplayDBIfNotUnderFirstUnlock]
  -[IMDReplayController overrideStorageControllerWithDatabaseFromPath:]
  -[IMDReplayController restoreDefaultStoreControllerInstance]
  -[IMDReplayController startRecordingReplayDatabase]
  -[IMDReplayController replayMessagesWithCompletion:]
  -[IMDReplayController isRecordingReplayDB]
  -[IMDReplayController syncTaskByServiceName]


IMDCKSyncController : IMDCKAbstractSyncController <IMDXPCEventStreamHandlerDelegate, IMSystemMonitorListener, IMDCKAbstractSyncControllerDelegate>
 @property  NSDate *syncStartDate
 @property  NSTimer *longRunningSyncTimer
 @property  IMTimer *nightlySyncTimer
 @property  long long initialSyncAttempts
 @property  NSDate *lastLogDumpDate
 @property  NSDate *lastRestoreFailureLogDumpDate
 @property  BOOL shouldReloadConversations
 @property  NSTimer *reloadTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDCKSyncController sharedInstance]

  // instance methods
  -[IMDCKSyncController init]
  -[IMDCKSyncController dealloc]
  -[IMDCKSyncController .cxx_destruct]
  -[IMDCKSyncController _accountDidChange:]
  -[IMDCKSyncController registerForAccountNotifications]
  -[IMDCKSyncController systemDidUnlock]
  -[IMDCKSyncController isSyncing]
  -[IMDCKSyncController clearLocalCloudKitSyncState]
  -[IMDCKSyncController sendRestoreFailuresLogDumps]
  -[IMDCKSyncController clearAnalyticDefaultsAndLocalSyncState]
  -[IMDCKSyncController syncControllerRecordType]
  -[IMDCKSyncController backupController]
  -[IMDCKSyncController beginInitialSync]
  -[IMDCKSyncController exitManager]
  -[IMDCKSyncController beginComingBackOnlineSync]
  -[IMDCKSyncController performOneTimeAccountUpgradeCheckIfNeeded]
  -[IMDCKSyncController syncController:syncBatchCompleted:]
  -[IMDCKSyncController syncStateDebuggingInfo:]
  -[IMDCKSyncController _noteSyncEnded]
  -[IMDCKSyncController eventStreamHandler:didReceiveEventWithName:userInfo:]
  -[IMDCKSyncController _IMAHDAgentFallbackIntervalInSeconds]
  -[IMDCKSyncController _maxTimeToDeferInSeconds]
  -[IMDCKSyncController _nightlySyncTimerFired]
  -[IMDCKSyncController setNightlySyncTimer:]
  -[IMDCKSyncController _syncNotCompletedRecently]
  -[IMDCKSyncController beginFullSyncPeriodic:deviceConditionsToCheck:activity:]
  -[IMDCKSyncController _logIMAutomaticHistorySyncDidNotOccurMetricsUnderFirstUnlock:isSyncing:deviceConditionsAllowSync:syncNotCompletedRecently:]
  -[IMDCKSyncController nightlySyncTimer]
  -[IMDCKSyncController _kickOffNightlyPeriodicSyncIfApplicable]
  -[IMDCKSyncController _dispatchNotification:withBlock:]
  -[IMDCKSyncController kickOffEagerSyncIfApplicable]
  -[IMDCKSyncController longRunningSyncTimer]
  -[IMDCKSyncController setLongRunningSyncTimer:]
  -[IMDCKSyncController reloadTimer]
  -[IMDCKSyncController setReloadTimer:]
  -[IMDCKSyncController setInitialSyncAttempts:]
  -[IMDCKSyncController _recordManager]
  -[IMDCKSyncController _noteMetricsForSyncStartFrom:fullSync:]
  -[IMDCKSyncController beginInitialSyncAttemptCount:]
  -[IMDCKSyncController _retryError]
  -[IMDCKSyncController _ifCloudKitAbleToSyncIsFullSync:activity:callBlock:]
  -[IMDCKSyncController _accountHasMultipleDevices]
  -[IMDCKSyncController _syncDeletesOrClearTombstones]
  -[IMDCKSyncController _chatSyncedRecently]
  -[IMDCKSyncController _syncChatsWithActivity:]
  -[IMDCKSyncController _noteDownSyncStartedWithIsPeriodicSync:]
  -[IMDCKSyncController _beginPeriodicSyncWithActivity:deviceConditionsToCheck:attemptCount:]
  -[IMDCKSyncController _serverDoesNotAllowComingBackOnlineChatSync]
  -[IMDCKSyncController _minimumChatComingOnlineSyncInterval]
  -[IMDCKSyncController _serverDoesNotSingleDeviceLimitation]
  -[IMDCKSyncController syncDeletesToCloudKitWithCompletion:]
  -[IMDCKSyncController _periodicSyncAttemptCount]
  -[IMDCKSyncController _autoBugCaptureWithSubType:debugDescription:]
  -[IMDCKSyncController _manualSyncAttemptCount]
  -[IMDCKSyncController clearCKRelatedDefaults]
  -[IMDCKSyncController refreshUIIfApplicableWithBatchCount:]
  -[IMDCKSyncController _serverAllowsUIRefreshWhileSyncing]
  -[IMDCKSyncController setShouldReloadConversations:]
  -[IMDCKSyncController _serverAllowsUIRefreshTimerWhileSyncing]
  -[IMDCKSyncController reloadTimeInterval]
  -[IMDCKSyncController _refreshUIWhileSyncing]
  -[IMDCKSyncController shouldReloadConversations]
  -[IMDCKSyncController _performLastSyncDateMetricForSuccessfulSync]
  -[IMDCKSyncController _performLastCompleteSyncedDBDateMetricForSuccessfulSync]
  -[IMDCKSyncController lastLogDumpDate]
  -[IMDCKSyncController lastRestoreFailureLogDumpDate]
  -[IMDCKSyncController _currentHour]
  -[IMDCKSyncController setLastRestoreFailureLogDumpDate:]
  -[IMDCKSyncController _deleteRestoreFailuresDirectory]
  -[IMDCKSyncController _withinAnHourOfLogDumpHour]
  -[IMDCKSyncController _hasDumpedRestoreFailureLogsInPastHour]
  -[IMDCKSyncController _hasDumpedLogsInPastHour]
  -[IMDCKSyncController setLastLogDumpDate:]
  -[IMDCKSyncController chatSyncController]
  -[IMDCKSyncController _noteMeticsForSyncEndedWithSuccces:]
  -[IMDCKSyncController statsCollector]
  -[IMDCKSyncController initialMessageSyncController]
  -[IMDCKSyncController initialAttachmentSyncController]
  -[IMDCKSyncController _reloadChatRegistryOnMainThread]
  -[IMDCKSyncController _nukeCKData]
  -[IMDCKSyncController performMetricForSuccessfulSync]
  -[IMDCKSyncController _beginPeriodicSyncWithActivity:deviceConditionsToCheck:attemptCount:useStingRay:syncChatsCompletionBlock:]
  -[IMDCKSyncController _dealWithEncryptionKeyLostErrorIfApplicable:]
  -[IMDCKSyncController attachmentSyncController]
  -[IMDCKSyncController messageSyncController]
  -[IMDCKSyncController syncStartDate]
  -[IMDCKSyncController _writeDownSyncDateUseManatee:]
  -[IMDCKSyncController _errorIndicatesDeviceNotGoodForSync:]
  -[IMDCKSyncController syncAttachmentMetadataFirstSyncWithActivity:deviceConditionsToCheck:completionBlock:]
  -[IMDCKSyncController _beginExitStateCleanupIfNeededWithActivity:useNonHSA2ManateeDatabase:]
  -[IMDCKSyncController rampManager]
  -[IMDCKSyncController _callSyncWithCompletion:activity:]
  -[IMDCKSyncController recordMetricIsCloudKitEnabled]
  -[IMDCKSyncController setSyncStartDate:]
  -[IMDCKSyncController handleAKUserInfoChangedNotification:]
  -[IMDCKSyncController enforceAccountsMatchForMocAndShowDialogIfNeeded]
  -[IMDCKSyncController updateSecurityLevelDowngradedIfNeeded:]
  -[IMDCKSyncController _addDatesDefaultsIfNeededToDictionary:keys:]
  -[IMDCKSyncController _addDatesDefaultsIfNeededToDictionary:]
  -[IMDCKSyncController _completedPeriodicSyncSinceFirstFullSyncForLastSyncDate:firstFullSyncCompletedDate:]
  -[IMDCKSyncController _dailySyncStateDictionary]
  -[IMDCKSyncController _submitCloudKitAnalyticWithOperationGroupName:analyticDictionary:]
  -[IMDCKSyncController _periodicSyncStateDictionary]
  -[IMDCKSyncController _postMetricsToCloudKitOnAutomaticHistoryDeletionAgentLaunch]
  -[IMDCKSyncController _dateForNext24LogDumpAtHour:timeNow:dumpNow:]
  -[IMDCKSyncController performInitialSyncOnFirstConnectionOfImagentIfNeeded]
  -[IMDCKSyncController beginChatSyncPeriodic:activity:]
  -[IMDCKSyncController kickOffCloudKitSyncIfNeededOnImagentLaunch]
  -[IMDCKSyncController sendRestoreFailuresLogDumpsIfNeeded]
  -[IMDCKSyncController collectLogsIfNeeded]
  -[IMDCKSyncController _sharedDatabaseManager]
  -[IMDCKSyncController syncChatsWithMessageContext:]
  -[IMDCKSyncController _serverDeniesPeriodicSyncAnalytics]
  -[IMDCKSyncController _serverDeniesDailySyncStateAnalytics]
  -[IMDCKSyncController logCloudKitAnalytics]
  -[IMDCKSyncController initialSyncAttempts]


IMDCKInitialAttachmentSyncController : IMDCKAttachmentSyncController
 @property  CKServerChangeToken *syncToken

  // instance methods
  -[IMDCKInitialAttachmentSyncController dealloc]
  -[IMDCKInitialAttachmentSyncController syncToken]
  -[IMDCKInitialAttachmentSyncController setSyncToken:]
  -[IMDCKInitialAttachmentSyncController ckUtilities]
  -[IMDCKInitialAttachmentSyncController _deviceConditionsAllowsMessageSyncIgnoreFeatureEnabled:]
  -[IMDCKInitialAttachmentSyncController _deviceConditionsAllowsMessageSync]
  -[IMDCKInitialAttachmentSyncController _deviceConditionsAllowsMessageSyncForCurrentBatchCount:maxBatchCount:]
  -[IMDCKInitialAttachmentSyncController _kickOffWriteIfNeededForSyncType:completion:]
  -[IMDCKInitialAttachmentSyncController setLatestSyncToken:]
  -[IMDCKInitialAttachmentSyncController latestSyncToken]


IMDMessageHistorySyncController : NSObject
 @property  BOOL replayControllerNeedsSync
 @property  BOOL ckChatSyncControllerNeedsSync
 @property  BOOL idsTransportLogNeedsSync
 @property  <IMDMessageHistorySyncTask> *currentlyExecutingSyncTask
 @property  <IMDMessageHistorySyncTaskFactory> *syncTaskFactory

  // instance methods
  -[IMDMessageHistorySyncController dealloc]
  -[IMDMessageHistorySyncController initWithMessageHistorySyncTaskFactory:]
  -[IMDMessageHistorySyncController ckChatSyncControllerWantsToSync]
  -[IMDMessageHistorySyncController replayControllerWantsToSync]
  -[IMDMessageHistorySyncController IDSTransportLogWantsToSync]
  -[IMDMessageHistorySyncController replayControllerNeedsSync]
  -[IMDMessageHistorySyncController setReplayControllerNeedsSync:]
  -[IMDMessageHistorySyncController _evaluateStateAndActIfNeeded]
  -[IMDMessageHistorySyncController idsTransportLogNeedsSync]
  -[IMDMessageHistorySyncController setIdsTransportLogNeedsSync:]
  -[IMDMessageHistorySyncController ckChatSyncControllerNeedsSync]
  -[IMDMessageHistorySyncController setCkChatSyncControllerNeedsSync:]
  -[IMDMessageHistorySyncController _scheduleNextEvaluation]
  -[IMDMessageHistorySyncController currentlyExecutingSyncTask]
  -[IMDMessageHistorySyncController setCurrentlyExecutingSyncTask:]
  -[IMDMessageHistorySyncController syncTaskFactory]
  -[IMDMessageHistorySyncController setSyncTaskFactory:]


IMDCKChatSyncController : IMDCKAbstractSyncController
 @property  NSObject<OS_dispatch_queue> *ckQueue
 @property  IMDChatRegistry *chatRegistry
 @property  IMDRecordZoneManager *recordZoneManager
 @property  <IMDCKSyncTokenStore> *syncTokenStore
 @property  CKServerChangeToken *latestSyncToken
 @property  IMDCKChatSyncCKOperationFactory *CKOperationFactory
 @property  CKRecord *lockRecord
 @property  CKRecord *manateeLockRecord
 @property  CKRecord *stingRayLockRecord
 @property  BOOL fetchedChatsDuringLastSync

  // class methods
  +[IMDCKChatSyncController sharedInstance]

  // instance methods
  -[IMDCKChatSyncController init]
  -[IMDCKChatSyncController dealloc]
  -[IMDCKChatSyncController _scheduleOperation:]
  -[IMDCKChatSyncController chatRegistry]
  -[IMDCKChatSyncController deleteChatZone]
  -[IMDCKChatSyncController syncControllerRecordType]
  -[IMDCKChatSyncController setRecordZoneManager:]
  -[IMDCKChatSyncController recordZoneManager]
  -[IMDCKChatSyncController clearLocalSyncState:]
  -[IMDCKChatSyncController _randomSalt]
  -[IMDCKChatSyncController anyChatExistsOnServerWithCompletion:]
  -[IMDCKChatSyncController ckQueue]
  -[IMDCKChatSyncController setChatRegistry:]
  -[IMDCKChatSyncController initWithSyncTokenStore:]
  -[IMDCKChatSyncController _recordKeyManagerSharedInstance]
  -[IMDCKChatSyncController CKOperationFactory]
  -[IMDCKChatSyncController _processRecordDeletion:]
  -[IMDCKChatSyncController _processModifyRecordCompletion:deletedRecordIDs:error:completionBlock:]
  -[IMDCKChatSyncController syncTokenStore]
  -[IMDCKChatSyncController setCKOperationFactory:]
  -[IMDCKChatSyncController setSyncTokenStore:]
  -[IMDCKChatSyncController _changeTokenKey]
  -[IMDCKChatSyncController setLatestSyncToken:]
  -[IMDCKChatSyncController latestSyncToken]
  -[IMDCKChatSyncController deleteChatSyncToken]
  -[IMDCKChatSyncController fetchedChatsDuringLastSync]
  -[IMDCKChatSyncController syncChatsWithCloudKit:withCompletion:]
  -[IMDCKChatSyncController syncChatsWithCloudKitWithCompletion:]
  -[IMDCKChatSyncController syncPendingDeletionWithCompletion:]
  -[IMDCKChatSyncController _migrateServerChangeToken]
  -[IMDCKChatSyncController stingRayLockRecord]
  -[IMDCKChatSyncController manateeLockRecord]
  -[IMDCKChatSyncController setStingRayLockRecord:]
  -[IMDCKChatSyncController setManateeLockRecord:]
  -[IMDCKChatSyncController setLockRecord:isUsingStingRay:]
  -[IMDCKChatSyncController _updateChatUsingCKRecord:]
  -[IMDCKChatSyncController _markChatAsDefferedForSyncingUsingRecord:]
  -[IMDCKChatSyncController _processModifyPerRecordCallBack:error:isUsingStingRay:]
  -[IMDCKChatSyncController _numberOfChatsToWrite]
  -[IMDCKChatSyncController _copyChatsToUploadWithLimit:]
  -[IMDCKChatSyncController _logGreenTeaLogsForChats:]
  -[IMDCKChatSyncController _newckRecordsFromChats:]
  -[IMDCKChatSyncController lockRecordForStingRay:]
  -[IMDCKChatSyncController _generateLockRecord]
  -[IMDCKChatSyncController _writeDirtyChatsToCloudKitWithCompletion:isUsingStingRay:]
  -[IMDCKChatSyncController _shouldResyncChatsForError:]
  -[IMDCKChatSyncController _writeCKRecordsToChatZone:isUsingStingRay:withCompletion:]
  -[IMDCKChatSyncController _chatZoneID]
  -[IMDCKChatSyncController _numberOfChatsToFetch]
  -[IMDCKChatSyncController setFetchedChatsDuringLastSync:]
  -[IMDCKChatSyncController _kickOffWriteOnCKQueueWithCompletion:isUsingStingRay:]
  -[IMDCKChatSyncController _chatZoneCreated]
  -[IMDCKChatSyncController _kickOffWriteIfNeededForSyncType:completion:isUsingStingRay:]
  -[IMDCKChatSyncController _clearStingRaySyncToken]
  -[IMDCKChatSyncController _fetchChatRecordOperation]
  -[IMDCKChatSyncController _processRecordChanged:isUsingStingRay:]
  -[IMDCKChatSyncController _processRecordZoneChangeTokenUpdated:zoneID:clienChangeToken:]
  -[IMDCKChatSyncController _processRecordZoneFetchCompletion:zoneID:clientChangeTokenData:moreComing:error:]
  -[IMDCKChatSyncController _processFetchRecordChangesCompleted:completion:isUsingStingRay:syncType:]
  -[IMDCKChatSyncController _anyChatExistsOnServerWithResultsLimit:changeToken:completion:]
  -[IMDCKChatSyncController _shouldMarkAllChatsAsNeedingSync]
  -[IMDCKChatSyncController _hasMarkedAllChatsAsNeedingSync]
  -[IMDCKChatSyncController __syncChatsWithCloudKit:attemptCount:withCompletion:]
  -[IMDCKChatSyncController _eligibleForTruthZone]
  -[IMDCKChatSyncController _syncChatsWithCloudKitWithCompletionType:syncChatsCompletionBlock:]
  -[IMDCKChatSyncController _needsToMarkAllChatsAsNeedingSync]
  -[IMDCKChatSyncController _copyRecordIDsToDelete]
  -[IMDCKChatSyncController _handleChatDeletionCompletionForRecordIDs:error:]
  -[IMDCKChatSyncController _resetChatSyncStateForRecord:]
  -[IMDCKChatSyncController _lockRecordHadConflict:]
  -[IMDCKChatSyncController lockRecord]
  -[IMDCKChatSyncController setLockRecord:]


IMDMessagePTask : NSObject
 @property  NSString *guid
 @property  unsigned long taskFlags

  // instance methods
  -[IMDMessagePTask dealloc]
  -[IMDMessagePTask guid]
  -[IMDMessagePTask needsProccesingFor:]
  -[IMDMessagePTask compeletedTask:]
  -[IMDMessagePTask initWithGUID:]
  -[IMDMessagePTask setTaskFlag:]
  -[IMDMessagePTask initWithStoreDictionary:]
  -[IMDMessagePTask taskFlags]


IMDStickerRegistry : NSObject
 @property  NSMutableDictionary *stickerPackGUIDToPackMap

  // class methods
  +[IMDStickerRegistry sharedInstance]

  // instance methods
  -[IMDStickerRegistry init]
  -[IMDStickerRegistry dealloc]
  -[IMDStickerRegistry _cachedPathForStickerWithProperties:]
  -[IMDStickerRegistry _isRecipeBasedSticker:]
  -[IMDStickerRegistry retrieveStickerWithProperties:completionBlock:]
  -[IMDStickerRegistry stickerPackGUIDToPackMap]
  -[IMDStickerRegistry setStickerPackGUIDToPackMap:]


IMDMessagePTaskXPCStore : NSObject <IMDMessagePTaskStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMDMessagePTaskXPCStore loadMostRecentMessagePTasks]
  -[IMDMessagePTaskXPCStore deleteAllCompletedTasks]
  -[IMDMessagePTaskXPCStore updateTaskFlagsForPTask:]
  -[IMDMessagePTaskXPCStore storePTask:]
  -[IMDMessagePTaskXPCStore _networkCall_InsertRowGuid:taskFlags:]
  -[IMDMessagePTaskXPCStore _networkCall_IMDMessagePTaskSelectWithLimit:]
  -[IMDMessagePTaskXPCStore _networkCall_IMDMessagePTaskDeleteAllCompletedTask]
  -[IMDMessagePTaskXPCStore _networkCall_IMDMessagePTaskUpdateTaskFlagsForGUID:taskFlags:]


IMDReplayStorageIterationContext : NSObject
 @property  IDSKVDeleteContext *deleteContext

  // instance methods
  -[IMDReplayStorageIterationContext dealloc]
  -[IMDReplayStorageIterationContext deleteContext]
  -[IMDReplayStorageIterationContext setDeleteContext:]


IMDReplayStorageController : NSObject
 @property  IDSKVStore *store
 @property  NSString *filePath

  // instance methods
  -[IMDReplayStorageController dealloc]
  -[IMDReplayStorageController store]
  -[IMDReplayStorageController setStore:]
  -[IMDReplayStorageController initWithFilePath:]
  -[IMDReplayStorageController filePath]
  -[IMDReplayStorageController storeDictionary:error:]
  -[IMDReplayStorageController copyNextBatchWithSize:iterationContext:]
  -[IMDReplayStorageController deleteReplayDB]


IMDCKInitialMessageSyncController : IMDCKMessageSyncController
 @property  CKServerChangeToken *syncToken

  // instance methods
  -[IMDCKInitialMessageSyncController dealloc]
  -[IMDCKInitialMessageSyncController syncToken]
  -[IMDCKInitialMessageSyncController setSyncToken:]
  -[IMDCKInitialMessageSyncController _deviceConditionsAllowsMessageSyncForCurrentBatchCount:maxBatchCount:]
  -[IMDCKInitialMessageSyncController _kickOffWriteIfNeededForSyncType:completion:]
  -[IMDCKInitialMessageSyncController _deviceConditionsAllowsMessageSyncForActivity:deviceConditionsToCheck:currentBatchCount:maxBatchCount:]
  -[IMDCKInitialMessageSyncController setLatestSyncToken:]
  -[IMDCKInitialMessageSyncController latestSyncToken]
  -[IMDCKInitialMessageSyncController syncMessagesWithSyncType:deviceConditionsToCheck:activity:completionBlock:]


IMDXPCEventStreamHandler : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMapTable *delegateToQueue

  // instance methods
  -[IMDXPCEventStreamHandler init]
  -[IMDXPCEventStreamHandler queue]
  -[IMDXPCEventStreamHandler .cxx_destruct]
  -[IMDXPCEventStreamHandler removeDelegate:]
  -[IMDXPCEventStreamHandler addDelegate:queue:]
  -[IMDXPCEventStreamHandler delegateToQueue]
  -[IMDXPCEventStreamHandler initWithEventStreamName:]
  -[IMDXPCEventStreamHandler didReceiveEventWithName:userInfo:]
  -[IMDXPCEventStreamHandler queueForDelegate:]


IMDHandle : NSObject
 @property  NSString *ID
 @property  NSString *unformattedID
 @property  NSString *countryCode
 @property  NSDictionary *handleInfo
 @property  NSString *personCentricID
 @property  NSString *CNContactID

  // instance methods
  -[IMDHandle dealloc]
  -[IMDHandle isEqual:]
  -[IMDHandle countryCode]
  -[IMDHandle setCountryCode:]
  -[IMDHandle setUnformattedID:]
  -[IMDHandle unformattedID]
  -[IMDHandle setPersonCentricID:]
  -[IMDHandle personCentricID]
  -[IMDHandle ID]
  -[IMDHandle isBusiness]
  -[IMDHandle compareIDs:]
  -[IMDHandle setID:]
  -[IMDHandle handleInfo]
  -[IMDHandle isBetterDefinedThan:]
  -[IMDHandle CNContactID]
  -[IMDHandle setCNContactID:]
  -[IMDHandle initWithID:unformattedID:countryCode:personCentricID:]
  -[IMDHandle initWithID:unformattedID:countryCode:]


IMDBadgeUtilities : NSObject
 @property  UNUserNotificationCenter *notificationCenter
 @property  IMDefaults *sharedDefaultsInstance

  // class methods
  +[IMDBadgeUtilities sharedInstance]
  +[IMDBadgeUtilities _iMessageEnabled]
  +[IMDBadgeUtilities _isTryingToLogin]
  +[IMDBadgeUtilities _iMessageFailedAccountIsIrreparable]
  +[IMDBadgeUtilities _isUserIntentNotLoggedOut]
  +[IMDBadgeUtilities _accountsArrayForServiceIMessage]
  +[IMDBadgeUtilities _isUsableSendingForAccount:]

  // instance methods
  -[IMDBadgeUtilities init]
  -[IMDBadgeUtilities dealloc]
  -[IMDBadgeUtilities notificationCenter]
  -[IMDBadgeUtilities isInAppleStoreDemoMode]
  -[IMDBadgeUtilities _clearFailureBadge]
  -[IMDBadgeUtilities setNotificationCenter:]
  -[IMDBadgeUtilities initWithMessageStore:]
  -[IMDBadgeUtilities updateBadgeForLastFailedMessageDateChangeIfNeeded:]
  -[IMDBadgeUtilities updateBadgeForUnreadCountChangeIfNeeded:]
  -[IMDBadgeUtilities initWithMessageStore:defaultsStore:]
  -[IMDBadgeUtilities _savedFailureDate]
  -[IMDBadgeUtilities _saveFailureDate:]
  -[IMDBadgeUtilities _updateBadgeAndCancelPreviousUpdate]
  -[IMDBadgeUtilities _cacheFailureDate:]
  -[IMDBadgeUtilities _compareLastFailureDateAndUpdateBadge:]
  -[IMDBadgeUtilities _stopSuppressingSound]
  -[IMDBadgeUtilities _updateBadge]
  -[IMDBadgeUtilities _shouldShowFailureString]
  -[IMDBadgeUtilities _postBadgeString:]
  -[IMDBadgeUtilities _postBadgeNumber:]
  -[IMDBadgeUtilities _isUnexpectedlyLoggedOut]
  -[IMDBadgeUtilities _checkIfUnexpectedlyLoggedOut]
  -[IMDBadgeUtilities sharedDefaultsInstance]
  -[IMDBadgeUtilities _handleUnexpectedLogout]
  -[IMDBadgeUtilities _isUnexpectedlyLogOutValue]
  -[IMDBadgeUtilities setSharedDefaultsInstance:]


CKRecordUtilities : NSObject
  // class methods
  +[CKRecordUtilities recordNameForRecordChangeTag:ckRecordID:salt:guid:]
  +[CKRecordUtilities recordIDUsingName:zoneID:]
  +[CKRecordUtilities recordIDUsingSalt:zoneID:guid:]
  +[CKRecordUtilities recordNameUsingSalt:guid:]


IMDSpotlightIndexDelegate : NSObject <CSSearchableIndexDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMDSpotlightIndexDelegate sharedInstance]

  // instance methods
  -[IMDSpotlightIndexDelegate dealloc]
  -[IMDSpotlightIndexDelegate searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:]
  -[IMDSpotlightIndexDelegate searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:]


IMDScreenTimeEnablementController : NSObject
 @property  BOOL screenTimeEnabled
 @property  BOOL screenTimeEnabledOveriddenByPreference
 @property  BOOL screenTimeEnabledOveriddenValue
 @property  BOOL screenTimeEnabledValueWasCached
 @property  BOOL screenTimeEnabledCachedValue
 @property  BOOL screenTimeEnabledSystemWideDMF
 @property  BOOL screenTimeEnabledDMFValue
 @property  DMFApplicationPolicyMonitor *applicationPolicyMonitor

  // class methods
  +[IMDScreenTimeEnablementController sharedInstance]

  // instance methods
  -[IMDScreenTimeEnablementController init]
  -[IMDScreenTimeEnablementController dealloc]
  -[IMDScreenTimeEnablementController .cxx_destruct]
  -[IMDScreenTimeEnablementController observeValueForKeyPath:ofObject:change:context:]
  -[IMDScreenTimeEnablementController setScreenTimeEnabled:]
  -[IMDScreenTimeEnablementController screenTimeEnabled]
  -[IMDScreenTimeEnablementController applicationPolicyMonitor]
  -[IMDScreenTimeEnablementController _determineEnablement:]
  -[IMDScreenTimeEnablementController _readEnablementOverrideFromPreferences]
  -[IMDScreenTimeEnablementController _readEnablementCachedValueFromPreferences]
  -[IMDScreenTimeEnablementController _updateEnablementPolicyFromDMF]
  -[IMDScreenTimeEnablementController screenTimeEnabledOveriddenByPreference]
  -[IMDScreenTimeEnablementController setScreenTimeEnabledOveriddenByPreference:]
  -[IMDScreenTimeEnablementController screenTimeEnabledOveriddenValue]
  -[IMDScreenTimeEnablementController setScreenTimeEnabledOveriddenValue:]
  -[IMDScreenTimeEnablementController screenTimeEnabledValueWasCached]
  -[IMDScreenTimeEnablementController setScreenTimeEnabledValueWasCached:]
  -[IMDScreenTimeEnablementController screenTimeEnabledCachedValue]
  -[IMDScreenTimeEnablementController setScreenTimeEnabledCachedValue:]
  -[IMDScreenTimeEnablementController screenTimeEnabledSystemWideDMF]
  -[IMDScreenTimeEnablementController setScreenTimeEnabledSystemWideDMF:]
  -[IMDScreenTimeEnablementController screenTimeEnabledDMFValue]
  -[IMDScreenTimeEnablementController setScreenTimeEnabledDMFValue:]
  -[IMDScreenTimeEnablementController setApplicationPolicyMonitor:]


IMDIDSAccount : IMDAccount
 @property  IDSAccount *idsAccount

  // instance methods
  -[IMDIDSAccount dealloc]
  -[IMDIDSAccount writeAccountDefaults:]
  -[IMDIDSAccount accountDefaults]
  -[IMDIDSAccount canMakeDowngradeRoutingChecks]
  -[IMDIDSAccount idsAccount]
  -[IMDIDSAccount multiplePhoneNumbersTiedToAccount]
  -[IMDIDSAccount initWithAccountID:defaults:service:idsAccount:]


IMDIDSService : IMDService <IDSAccountControllerDelegate, IDSAccountRegistrationDelegate>
 @property  IMDIDSService *subService
 @property  NSString *subServiceName
 @property  IMDIDSService *mainService
 @property  NSArray *accountsLoadedFromIdentityServices
 @property  NSArray *activeAccountsFromIdentityServices
 @property  BOOL isSubService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMDIDSService dealloc]
  -[IMDIDSService initWithBundle:]
  -[IMDIDSService enableAccount:]
  -[IMDIDSService disableAccount:]
  -[IMDIDSService accountAdded:]
  -[IMDIDSService accountRemoved:]
  -[IMDIDSService account:registrationStatusInfoChanged:]
  -[IMDIDSService account:aliasesChanged:]
  -[IMDIDSService account:vettedAliasesChanged:]
  -[IMDIDSService account:profileChanged:]
  -[IMDIDSService account:loginChanged:]
  -[IMDIDSService account:displayNameChanged:]
  -[IMDIDSService registrationFailedForAccount:needsDeletion:]
  -[IMDIDSService refreshRegistrationForAccount:]
  -[IMDIDSService accountController:accountAdded:]
  -[IMDIDSService accountController:accountUpdated:]
  -[IMDIDSService accountController:accountRemoved:]
  -[IMDIDSService accountController:accountEnabled:]
  -[IMDIDSService accountController:accountDisabled:]
  -[IMDIDSService setSubService:]
  -[IMDIDSService subService]
  -[IMDIDSService setSubServiceName:]
  -[IMDIDSService accountClass]
  -[IMDIDSService mainService]
  -[IMDIDSService accountsLoadedFromIdentityServices]
  -[IMDIDSService activeAccountsFromIdentityServices]
  -[IMDIDSService _serviceDomain]
  -[IMDIDSService newAccountWithAccountDefaults:accountID:]
  -[IMDIDSService initWithBundle:subServiceName:]
  -[IMDIDSService imdAccountLoginFromIDSAccountWithType:login:]
  -[IMDIDSService isSubService]
  -[IMDIDSService _loadIDSAccountController]
  -[IMDIDSService initWithBundle:isMainService:]
  -[IMDIDSService setMainService:]
  -[IMDIDSService subServiceName]
  -[IMDIDSService accountFromIDSAccountWithUniqueID:]
  -[IMDIDSService setMockAccountController:]
  -[IMDIDSService mockAccountController]


IMDAppleServiceSession : IMDServiceSession
 @property  IDSAccount *idsAccount
 @property  NSArray *aliases
 @property  NSArray *vettedAliases
 @property  NSString *callerURI
 @property  NSArray *registeredURIs
 @property  NSString *GUID

  // class methods
  +[IMDAppleServiceSession idsAccounts]

  // instance methods
  -[IMDAppleServiceSession dealloc]
  -[IMDAppleServiceSession GUID]
  -[IMDAppleServiceSession vettedAliases]
  -[IMDAppleServiceSession authenticateAccount:]
  -[IMDAppleServiceSession registerAccount:]
  -[IMDAppleServiceSession unregisterAccount:]
  -[IMDAppleServiceSession aliases]
  -[IMDAppleServiceSession registeredURIs]
  -[IMDAppleServiceSession _aliases]
  -[IMDAppleServiceSession updateAuthorizationCredentials:token:account:]
  -[IMDAppleServiceSession addAliases:account:]
  -[IMDAppleServiceSession removeAliases:account:]
  -[IMDAppleServiceSession unvalidateAliases:account:]
  -[IMDAppleServiceSession validateAliases:account:]
  -[IMDAppleServiceSession validationStatusForAlias:]
  -[IMDAppleServiceSession initWithAccount:service:]
  -[IMDAppleServiceSession sessionDidBecomeActive]
  -[IMDAppleServiceSession sessionWillBecomeInactiveWithAccount:]
  -[IMDAppleServiceSession idsAccount]
  -[IMDAppleServiceSession logoutServiceSessionWithAccount:]
  -[IMDAppleServiceSession passwordUpdatedWithAccount:]
  -[IMDAppleServiceSession validateProfileWithAccount:]
  -[IMDAppleServiceSession loginServiceSessionWithAccount:]
  -[IMDAppleServiceSession refreshRegistration]
  -[IMDAppleServiceSession _updateAccountStatusToUnregistered:withAccount:]
  -[IMDAppleServiceSession _aliasesForIDSAccount:]
  -[IMDAppleServiceSession _isDeviceRegisteredForAccount:]
  -[IMDAppleServiceSession validationStatusForAlias:onAccount:]
  -[IMDAppleServiceSession resetCallerIDForIDSAccount:]
  -[IMDAppleServiceSession _aliasStringsForIDSAccount:]
  -[IMDAppleServiceSession _validationStatusForAlias:onAccount:]
  -[IMDAppleServiceSession callerURIForIDSAccount:]
  -[IMDAppleServiceSession idsAccountForURI:IDSServiceName:]
  -[IMDAppleServiceSession imdAccountForIDSAccount:]
  -[IMDAppleServiceSession _isDeviceRegistered]
  -[IMDAppleServiceSession activeDevicesUpdated]
  -[IMDAppleServiceSession reregister]
  -[IMDAppleServiceSession reIdentify]
  -[IMDAppleServiceSession callerURI]
  -[IMDAppleServiceSession idsAccountForFromURI:toURI:]


IDSAccount(IMDCallerIDUtilities)
	// instance methods
	-[IDSAccount(IMDCallerIDUtilities) im_registeredURIs]

NSUserDefaults(DeferredSavingAdditions)
	// instance methods
	-[NSUserDefaults(DeferredSavingAdditions) delayedSynchronize]

NSString(TunesController_Additions)
	// instance methods
	-[NSString(TunesController_Additions) stringValue]

NSMutableDictionary(TunesController_Additions)
	// instance methods
	-[NSMutableDictionary(TunesController_Additions) setAsString:forKey:]

IMItem(IMItem_CKRecord)
	// class methods
	+[IMItem(IMItem_CKRecord) protobufForCompressedData:]
	+[IMItem(IMItem_CKRecord) groupTitleChangeProtobufForCompressedData:]
	+[IMItem(IMItem_CKRecord) participantChangeProtobufForCompressedData:]
	+[IMItem(IMItem_CKRecord) locationShareStatusChangeProtobufForCompressedData:]
	+[IMItem(IMItem_CKRecord) groupActionProtobufForCompressedData:]
	+[IMItem(IMItem_CKRecord) messageActionChangeProtobufForCompressedData:]
	+[IMItem(IMItem_CKRecord) populateIMMessageItemWithProtoBufFields:withProtbufData:]
	+[IMItem(IMItem_CKRecord) populateIMGroupTitleChangeItem:withProtobufData:]
	+[IMItem(IMItem_CKRecord) populateIMParticipantChangeItem:withProtobufData:]
	+[IMItem(IMItem_CKRecord) populateIMLocationShareStatusChangeItem:withProtobufData:]
	+[IMItem(IMItem_CKRecord) populateIMGroupActionItem:withProtobufData:]
	+[IMItem(IMItem_CKRecord) populateIMMessageActionItem:withProtobufData:]
	+[IMItem(IMItem_CKRecord) createItemWithCKRecord:]
	+[IMItem(IMItem_CKRecord) resetSyncStateForMessage:toState:]

	// instance methods
	-[IMItem(IMItem_CKRecord) _recordType]
	-[IMItem(IMItem_CKRecord) _usingStingRay]
	-[IMItem(IMItem_CKRecord) compressedProtobufDataWithPadding:]
	-[IMItem(IMItem_CKRecord) compressedProtobufDataForMessage]
	-[IMItem(IMItem_CKRecord) compressedProtobufDataForGroupTitleChangeItem]
	-[IMItem(IMItem_CKRecord) compressedProtobufDataForParticipantChangeItem]
	-[IMItem(IMItem_CKRecord) compressedProtobufDataForLocationShareStatusChangeItem]
	-[IMItem(IMItem_CKRecord) compressedProtobufDataForGroupActionItem]
	-[IMItem(IMItem_CKRecord) compressedProtobufDataForMessageActionItem]
	-[IMItem(IMItem_CKRecord) _populateCKRecordWithIMItemFields:]
	-[IMItem(IMItem_CKRecord) _populateCKRecordWithIMMessageItemFields:]
	-[IMItem(IMItem_CKRecord) _populateCKRecordWithIMGroupTitleChangeItemFields:]
	-[IMItem(IMItem_CKRecord) _populateCKRecordWithIMParticipantChangeItemFields:]
	-[IMItem(IMItem_CKRecord) _populateCKRecordWithIMLocationShareStatusChangeItemFields:]
	-[IMItem(IMItem_CKRecord) _populateCKRecordWithIMGroupActionItemFields:]
	-[IMItem(IMItem_CKRecord) _populateCKRecordWithIMMessageActionItemFields:]
	-[IMItem(IMItem_CKRecord) _accountControllerSharedInstance]
	-[IMItem(IMItem_CKRecord) _shouldDownloadIfPhoneNumberAndNoSIM:]
	-[IMItem(IMItem_CKRecord) _recordFromServerChangeToken]
	-[IMItem(IMItem_CKRecord) copyCKRecordRepresentationWithZoneID:salt:]
	-[IMItem(IMItem_CKRecord) shouldStoreMessage]

CKRecord(CKRecord_IMDaemonCore)
	// instance methods
	-[CKRecord(CKRecord_IMDaemonCore) _setValue:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _arrayForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _numberForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _stringForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _dataForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _valueForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) copyEncodedSystemFields]
	-[CKRecord(CKRecord_IMDaemonCore) _assetForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setCKRecordString:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setCKRecordDate:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setUnencryptedCKRecordNumber:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setCKRecordNumber:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setCKRecordData:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _dateForKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setCKRecordAsset:forKey:]
	-[CKRecord(CKRecord_IMDaemonCore) _setCKRecordArray:forKey:]

IMTimingCollection(IMDaemonCoreMessageReceivedTimingAdditions)
	// class methods
	+[IMTimingCollection(IMDaemonCoreMessageReceivedTimingAdditions) IMDaemonCoreMessageReceivedTimingCollection]

IMCoreAutomationNotifications(IMDaemonCoreIncomingMessageTracking)
	// instance methods
	-[IMCoreAutomationNotifications(IMDaemonCoreIncomingMessageTracking) postCoreAutomationNotificationIncomingMessageProcessedWithDuration:]

IMFileTransfer(IMFileTransfer_CKRecord)
	// class methods
	+[IMFileTransfer(IMFileTransfer_CKRecord) _recordType]
	+[IMFileTransfer(IMFileTransfer_CKRecord) transferGUIDOfRecord:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) validateMD5HashForRecord:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) attachmentRecordHasAsset:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) md5HashForRecord:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) transferMetaDataFromRecord:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) _recordIsInvalid:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) utiTypeForRecord:]
	+[IMFileTransfer(IMFileTransfer_CKRecord) sizeOfAssetForRecord:]

	// instance methods
	-[IMFileTransfer(IMFileTransfer_CKRecord) _fileManager]
	-[IMFileTransfer(IMFileTransfer_CKRecord) copyCKRecordRepresentationWithZoneID:salt:useStingRay:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) ckRecordIDFromExistingMetadata]
	-[IMFileTransfer(IMFileTransfer_CKRecord) moveTransferAssertFromRecord:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) initWithCKRecord:writeAssetToDisk:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) _isUsingStingRay]
	-[IMFileTransfer(IMFileTransfer_CKRecord) _ckUniqueID]
	-[IMFileTransfer(IMFileTransfer_CKRecord) _copyCKRecordFromExistingCKMetadata:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) _assetURLToInsertToRecord]
	-[IMFileTransfer(IMFileTransfer_CKRecord) md5HashForURL:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) _setRecordPropertiesBasedOnExistingRecord:useStingRay:]
	-[IMFileTransfer(IMFileTransfer_CKRecord) md5HashForTransfer]

IMTransferServicesController(IMTransferServicesController_PreviewGeneration)
	// instance methods
	-[IMTransferServicesController(IMTransferServicesController_PreviewGeneration) transferServicesController]
	-[IMTransferServicesController(IMTransferServicesController_PreviewGeneration) generatePreviewForTransfer:attachmentPath:completionBlock:]
	-[IMTransferServicesController(IMTransferServicesController_PreviewGeneration) receiveFileTransfer:transferGUID:topic:path:requestURLString:ownerID:signature:decryptionKey:fileSize:generatePreview:progressBlock:completionBlock:]
	-[IMTransferServicesController(IMTransferServicesController_PreviewGeneration) failTransfersOnPreviewGenerationFailure]

01 00 0b00 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAsset 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerID 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerOptions 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDatabase 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchArchivedRecordsOperation 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchArchivedRecordsOptions 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesConfiguration 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesOperation 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZonesOperation 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordsOperation 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchUserQuotaOperation 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordZonesOperation 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotification 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationConfiguration 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationGroup 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQuery 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQueryOperation 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneSubscription 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKServerChangeToken 
01 00 0200 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 1900 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTWeakReference 
01 00 0100 /System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement: DMFApplicationPolicyMonitor 
01 00 1300 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTDeviceSupport 
01 00 1300 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTPasswordManager 
01 00 1600 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSAccount 
01 00 1600 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSAccountController 
01 00 1700 /System/Library/PrivateFrameworks/IDSKVStore.framework/IDSKVStore: IDSKVStore 
01 00 1400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSServerBag 
01 00 1600 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 1600 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSTransactionLogMessage 
01 00 1600 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSTransactionLogSyncTask 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMAKAppleIDAuthenticationController 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMAssociatedMessageItem 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMBroadcastingKeyValueCollection 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCKPadding 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCTSMSUtilities 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMCallMonitor 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMConnectionMonitor 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMCoreAutomationNotifications 
01 00 1800 /System/Library/PrivateFrameworks/IMDMessageServices.framework/IMDMessageServices: IMDMessageServicesCenter 
01 00 1b00 /System/Library/PrivateFrameworks/IMDPersistence.framework/IMDPersistence: IMDPersistentAttachmentController 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMDefaults 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMDeviceConditions 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMFileCopier 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMFileManager 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMFileTransfer 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMGroupActionItem 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMGroupTitleChangeItem 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMINInteractionUtilities 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMItem 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMKeyValueCollectionUserDefaultsStorage 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMLocationShareStatusChangeItem 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMLockdownManager 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMLogDump 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMessageActionItem 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMessageItem 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMessageNotificationTimeManager 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMetricsCollector 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMNickname 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMNicknameAvatar 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMNicknameAvatarImage 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMOneTimeCodeUtilities 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMParticipantChangeItem 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMPowerWifiUsageCollector 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMRemoteURLConnection 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedGroupAction 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedGroupTitleChange 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedLocationShareStatusChange 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedMessage 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedMessageAction 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMSharedUtilitiesProtoCloudKitEncryptedParticipantChange 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMSystemMonitor 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMSystemProxySettingsFetcher 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMTUConversationItem 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMTimer 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMTimingCollection 
01 00 1500 /System/Library/PrivateFrameworks/IMTranscoding.framework/IMTranscoding: IMTranscodeController 
01 00 0300 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMTranscoderTelemetry 
01 00 0a00 /System/Library/PrivateFrameworks/IMTransferServices.framework/IMTransferServices: IMTransferServicesController 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMUserDefaults 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMUserNotification 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMUserNotificationCenter 
01 00 1000 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1e00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0400 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: NetworkChangeNotifier 
01 00 0800 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFVideoComplement 
01 00 0700 /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary: TLToneManager 
01 00 0900 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUConversationManager 
01 00 0500 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
