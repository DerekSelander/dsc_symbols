|| __TEXT.__const _SiriNotificationsIntentsVersionNumber
|| __TEXT.__const _SiriNotificationsIntentsVersionString
__ AssistantServices: _AFSiriAnnouncementPlatformGetName
__ CoreEmoji: _CEMCreateEmojiLocaleData
__ CoreEmoji: _CEMEmojiTokenCopyNameWithCount
__ CoreEmoji: _CEMEmojiTokenCreateWithString
__ CoreEmoji: _CEMEmojiTokensAreEquivalent
__ CoreEmoji: _CEMEnumerateEmojiTokensInStringWithLocaleAndBlock
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringTrimWhitespace
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ DialogEngine: _OBJC_CLASS_$_PatternExecutionResult
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSDataDetector
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSTextCheckingResult
__ Foundation: _OBJC_CLASS_$_NSValue
__ SAObjects: _OBJC_CLASS_$_SAAceView
__ SAObjects: _OBJC_CLASS_$_SABaseCommand
__ SAObjects: _OBJC_CLASS_$_SANotificationOnDeviceObject
__ SAObjects: _OBJC_CLASS_$_SANotificationsSearch
__ SAObjects: _OBJC_CLASS_$_SAOnDeviceNotificationsSearchCompleted
__ SAObjects: _OBJC_CLASS_$_SAUIAddViews
__ SAObjects: _OBJC_CLASS_$_SAUIAssistantUtteranceView
__ SAObjects: _OBJC_CLASS_$_SAUIPlayNotificationSound
__ SAObjects: _SANotificationPriorityNONEValue
__ SAObjects: _SANotificationTypeIncomingMessageValue
__ SAObjects: _SAUIDialogPhaseCompletionValue
__ SiriKitInvocation: _SKINotificationsDirectInvocationPayloadKeyAnnouncePlatform
__ SiriKitInvocation: _SKINotificationsDirectInvocationPayloadKeyAppBundleId
__ SiriKitInvocation: _SKINotificationsDirectInvocationPayloadKeyIsSameTypeAsLastAnnouncement
__ SiriKitInvocation: _SKINotificationsDirectInvocationPayloadKeyNotificationBody
__ SiriKitInvocation: _SKINotificationsDirectInvocationPayloadKeyNotificationDate
__ SiriKitInvocation: _SKINotificationsDirectInvocationPayloadKeyNotificationId
__ SiriKitInvocation: _SKINotificationsDirectInvocationPayloadKeyNotificationSubtitle
__ SiriKitInvocation: _SKINotificationsDirectInvocationPayloadKeyNotificationThreadId
__ SiriKitInvocation: _SKINotificationsDirectInvocationPayloadKeyNotificationTitle
__ SiriKitInvocation: _SKINotificationsDirectInvocationPayloadKeySynchronousBurstIndex
__ SiriOntology: _OBJC_CLASS_$_SIRINLUUserAccepted
__ SiriOntology: _OBJC_CLASS_$_SIRINLUUserCancelled
__ SiriOntology: _OBJC_CLASS_$_SIRINLUUserRejected
__ SiriOntology: _OBJC_CLASS_$_SIRINLUUserStatedTask
__ VoiceServices: _OBJC_CLASS_$_VSSpeechCharacterSet
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_semaphore
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_os_log
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: _swift_allocBox
__ libswiftCore.dylib: _swift_allocError
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_allocateGenericClassMetadata
__ libswiftCore.dylib: _swift_allocateGenericValueMetadata
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deallocPartialClassInstance
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_errorRetain
__ libswiftCore.dylib: _swift_getEnumCaseMultiPayload
__ libswiftCore.dylib: _swift_getEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getGenericMetadata
__ libswiftCore.dylib: _swift_getKeyPath
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initClassMetadata2
__ libswiftCore.dylib: _swift_initEnumMetadataMultiPayload
__ libswiftCore.dylib: _swift_initEnumMetadataSingleCase
__ libswiftCore.dylib: _swift_initStructMetadata
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_slowAlloc
__ libswiftCore.dylib: _swift_storeEnumTagMultiPayload
__ libswiftCore.dylib: _swift_storeEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_updateClassMetadata2
__ libswiftCore.dylib: _swift_willThrow
__ libswift_Concurrency.dylib: _swift_defaultActor_deallocate
__ libswift_Concurrency.dylib: _swift_defaultActor_destroy
__ libswift_Concurrency.dylib: _swift_defaultActor_initialize
__ libswift_Concurrency.dylib: _swift_task_alloc
__ libswift_Concurrency.dylib: _swift_task_create
__ libswift_Concurrency.dylib: _swift_task_dealloc
__ libswift_Concurrency.dylib: _swift_task_switch
