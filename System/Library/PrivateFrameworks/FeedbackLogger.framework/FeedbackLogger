|| __DATA.__objc_data _OBJC_CLASS_$_FeedbackLoggerFBFClient
|| __DATA.__objc_data _OBJC_CLASS_$_UploadRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_FeedbackLoggerFBFClient
|| __DATA.__objc_data _OBJC_METACLASS_$_UploadRecord
|| __DATA_CONST.__const _FLErrorDomain
|| __DATA_CONST.__const _FLUploadHeadersKey
|| __DATA_CONST.__const _FLUploadImmediately
|| __DATA_DIRTY.__common _FL_LOG_SIGNPOSTS
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BatchMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FLLogger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FLLoggingContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FLSQLiteDatabaseConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FLSQLitePersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BatchMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FLLogger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FLLoggingContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FLSQLiteDatabaseConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FLSQLitePersistence
|| __TEXT.__const _FeedbackLoggerVersionNumber
|| __TEXT.__const _FeedbackLoggerVersionString
|| __TEXT.__const _kMaxBatchContinuesDuration
|| __TEXT.__text _FLGetBootSessionUUID
|| __TEXT.__text _FLSignpostLoggingInit
|| __TEXT.__text _flLogForObject
|| __TEXT.__text _tryGetDataProperty
|| __TEXT.__text _tryGetDateProperty
|| __TEXT.__text _tryGetTextProperty
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFilePosixPermissions
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ ProtocolBuffer: _OBJC_CLASS_$_PBDataReader
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dispatch_workloop_copy_current
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _sysctlbyname
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _object_getClassName
__ libsqlite3.dylib: __sqlite3_db_truncate
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_free
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_step
BatchMetadata : NSObject
 @property  NSString *batchIdentifier
 @property  NSString *timestampReferenceIdentifier
 @property  unsigned long batchSize
 @property  int batchStatus
 @property  unsigned long processedAttempts
 @property  NSDate *dateCreated
 @property  NSDate *dateLastProcessed
 @property  NSDate *dateUploaded
 @property  unsigned long eventCount
 @property  NSNumber *category

  // instance methods
  -[BatchMetadata eventCount]
  -[BatchMetadata setCategory:]
  -[BatchMetadata setBatchSize:]
  -[BatchMetadata batchSize]
  -[BatchMetadata dateCreated]
  -[BatchMetadata category]
  -[BatchMetadata .cxx_destruct]
  -[BatchMetadata setEventCount:]
  -[BatchMetadata setDateCreated:]
  -[BatchMetadata batchIdentifier]
  -[BatchMetadata setBatchIdentifier:]
  -[BatchMetadata timestampReferenceIdentifier]
  -[BatchMetadata setTimestampReferenceIdentifier:]
  -[BatchMetadata batchStatus]
  -[BatchMetadata setBatchStatus:]
  -[BatchMetadata processedAttempts]
  -[BatchMetadata setProcessedAttempts:]
  -[BatchMetadata dateLastProcessed]
  -[BatchMetadata setDateLastProcessed:]
  -[BatchMetadata dateUploaded]
  -[BatchMetadata setDateUploaded:]


FLLogger : NSObject
 @property  NSMutableDictionary *dbConnections
 @property  NSMutableDictionary *persistentStores
 @property  NSObject<FLLoggingContext> *context
 @property  NSObject<OS_os_log> *log
 @property  unsigned long persistentStoreCacheTTL
 @property  NSObject<OS_dispatch_source> *persistentStoreCacheTTLTimer
 @property  NSDistributedNotificationCenter *notificationCenter
 @property  {os_unfair_lock_s=I} lock
 @property  NSObject<OS_os_transaction> *writeTransaction
 @property  unsigned long writeTransactionTTL
 @property  NSObject<OS_dispatch_source> *transactionTTLTimer

  // class methods
  +[FLLogger sharedLogger]
  +[FLLogger readSiriCategoryFrom:recursive:]
  +[FLLogger categoryForSiriPayload:]

  // instance methods
  -[FLLogger notificationCenter]
  -[FLLogger setNotificationCenter:]
  -[FLLogger initWithContext:]
  -[FLLogger dealloc]
  -[FLLogger .cxx_destruct]
  -[FLLogger log]
  -[FLLogger setContext:]
  -[FLLogger context]
  -[FLLogger lock]
  -[FLLogger setLog:]
  -[FLLogger closeAllStores]
  -[FLLogger persistentStores]
  -[FLLogger reportDataUploadEvent:application:completion:]
  -[FLLogger reportSiriInstrumentationEvent:forBundleID:completion:]
  -[FLLogger closeStoreForApplicationFromNotification:]
  -[FLLogger writeTransaction]
  -[FLLogger _setupTransactionTTLTimer]
  -[FLLogger _scheduleTransactionTTLTimer]
  -[FLLogger _transactionTTLTimerDidFire]
  -[FLLogger _cancelTransactionTTLTimer]
  -[FLLogger cancelTransactionTTLTimer]
  -[FLLogger __dispatched_databaseConnectionWithId:]
  -[FLLogger __dispatched_persistentStoreWithId:category:]
  -[FLLogger pathForStore:]
  -[FLLogger closeStoreForBundleID:]
  -[FLLogger _cleanPersistantStores]
  -[FLLogger _nextTimerFireDate]
  -[FLLogger _setupStoreCacheTimer]
  -[FLLogger _scheduleStoreCacheTimer]
  -[FLLogger _cancelStoreCacheTimer]
  -[FLLogger _closeAllStores]
  -[FLLogger setValue:forUploadHeaderNamed:]
  -[FLLogger uploadHeaders]
  -[FLLogger scheduleImmediateUpload]
  -[FLLogger write:category:toStoreWithID:completion:]
  -[FLLogger parsecStoreId]
  -[FLLogger parsecCategoryForPayload:]
  -[FLLogger parsecPersistentStoreForBundleID:]
  -[FLLogger reportParsecFeedback:completion:]
  -[FLLogger siriStoreIdForBundleId:]
  -[FLLogger siriWritingStoreForBundleID:category:]
  -[FLLogger siriReadingStoreForBundleID:]
  -[FLLogger registerSiriInstrumentationObserver:observer:]
  -[FLLogger removeSiriInstrumentationObserver:]
  -[FLLogger dataUploadStoreIdForApplicationIdentifier:]
  -[FLLogger report:application:]
  -[FLLogger report:application:onComplete:]
  -[FLLogger dbConnections]
  -[FLLogger setDbConnections:]
  -[FLLogger setPersistentStores:]
  -[FLLogger persistentStoreCacheTTL]
  -[FLLogger setPersistentStoreCacheTTL:]
  -[FLLogger persistentStoreCacheTTLTimer]
  -[FLLogger setPersistentStoreCacheTTLTimer:]
  -[FLLogger writeTransactionTTL]
  -[FLLogger setWriteTransactionTTL:]
  -[FLLogger transactionTTLTimer]
  -[FLLogger setTransactionTTLTimer:]


FLSQLiteDatabaseConnection : NSObject
 @property  NSString *storePath
 @property  NSObject<OS_os_log> *log
 @property  ^{sqlite3=} db

  // instance methods
  -[FLSQLiteDatabaseConnection db]
  -[FLSQLiteDatabaseConnection dealloc]
  -[FLSQLiteDatabaseConnection close]
  -[FLSQLiteDatabaseConnection setStorePath:]
  -[FLSQLiteDatabaseConnection .cxx_destruct]
  -[FLSQLiteDatabaseConnection open]
  -[FLSQLiteDatabaseConnection log]
  -[FLSQLiteDatabaseConnection storePath]
  -[FLSQLiteDatabaseConnection setLog:]
  -[FLSQLiteDatabaseConnection initWithStorePath:]


FLSQLitePersistence : NSObject
 @property  NSString *databasePath
 @property  NSObject<OS_os_log> *log
 @property  FLLoggingContext *context
 @property  ^{sqlite3_stmt=} insertRecordsStatement
 @property  ^{sqlite3_stmt=} iteratePayloadStatement
 @property  NSString *storeIdentifier
 @property  AB configured
 @property  unsigned long maxBatchPayloadInBytes
 @property  unsigned long maxAllowedDatabaseSizeInBytes
 @property  NSString *currentBatchIdentifier
 @property  NSDate *currentBatchCreationDate
 @property  unsigned long currentBatchPayloadSize
 @property  double batchMaximumDuration
 @property  ^{sqlite3_stmt=} maxRowIdStatement
 @property  ^{sqlite3=} db
 @property  FLSQLiteDatabaseConnection *dbConnection

  // class methods
  +[FLSQLitePersistence uploadStatusDescription:]
  +[FLSQLitePersistence batchStatusDescription:]

  // instance methods
  -[FLSQLitePersistence vacuum]
  -[FLSQLitePersistence databasePath]
  -[FLSQLitePersistence closeDatabase]
  -[FLSQLitePersistence storeIdentifier]
  -[FLSQLitePersistence setDbConnection:]
  -[FLSQLitePersistence setDb:]
  -[FLSQLitePersistence db]
  -[FLSQLitePersistence dealloc]
  -[FLSQLitePersistence .cxx_destruct]
  -[FLSQLitePersistence createDatabase]
  -[FLSQLitePersistence open]
  -[FLSQLitePersistence dbConnection]
  -[FLSQLitePersistence log]
  -[FLSQLitePersistence setContext:]
  -[FLSQLitePersistence context]
  -[FLSQLitePersistence configured]
  -[FLSQLitePersistence setConfigured:]
  -[FLSQLitePersistence setLog:]
  -[FLSQLitePersistence deleteDatabase]
  -[FLSQLitePersistence getSchemaVersion]
  -[FLSQLitePersistence persist:]
  -[FLSQLitePersistence getUploadIdsWithStatus:]
  -[FLSQLitePersistence getUploadIdsWithAllStatuses]
  -[FLSQLitePersistence getPurgableUploadIds]
  -[FLSQLitePersistence _getUploadIdsHelper:]
  -[FLSQLitePersistence getUploadsRangeStart:end:]
  -[FLSQLitePersistence _updateStatusHelperForUpload:toStatus:]
  -[FLSQLitePersistence _updateMetadataHelperForUpload:query:]
  -[FLSQLitePersistence updateStatusForUpload:toStatus:]
  -[FLSQLitePersistence recoverOrphanedProcessingUploads]
  -[FLSQLitePersistence doUploadHousekeeping]
  -[FLSQLitePersistence markUploadsForPurge]
  -[FLSQLitePersistence cleanupPurgableUploads]
  -[FLSQLitePersistence persistUploadPayload:]
  -[FLSQLitePersistence getUploadRecordWithId:]
  -[FLSQLitePersistence iterateUploadsWithCodeblock:]
  -[FLSQLitePersistence deleteUploadWithIdentifier:]
  -[FLSQLitePersistence __deleteStatementHelper:forUploadId:]
  -[FLSQLitePersistence deleteAllUploads]
  -[FLSQLitePersistence getBatchIdsWithStatus:]
  -[FLSQLitePersistence getBatchIdsWithAllStatuses]
  -[FLSQLitePersistence getPurgableBatchIds]
  -[FLSQLitePersistence _getBatchIdsHelper:]
  -[FLSQLitePersistence getRecordsRangeStart:end:]
  -[FLSQLitePersistence getBatchMetadata:batchMetadata:]
  -[FLSQLitePersistence _updateStatusHelperForBatch:toStatus:]
  -[FLSQLitePersistence _updateMetadataHelperForBatch:query:]
  -[FLSQLitePersistence updateStatusForBatch:toStatus:]
  -[FLSQLitePersistence getDataVersion]
  -[FLSQLitePersistence initializeNewBatch]
  -[FLSQLitePersistence closeOrphanedBatches]
  -[FLSQLitePersistence closeAllBatches]
  -[FLSQLitePersistence forceCloseOpenBatches]
  -[FLSQLitePersistence closeOpenBatch]
  -[FLSQLitePersistence recoverOrphanedProcessingBatches]
  -[FLSQLitePersistence markBatchesforPurge]
  -[FLSQLitePersistence doBatchesHousekeeping]
  -[FLSQLitePersistence purgeBatch:]
  -[FLSQLitePersistence __purgeStatementHelper:forBatchId:]
  -[FLSQLitePersistence purgeAllBatches]
  -[FLSQLitePersistence prepareSchema]
  -[FLSQLitePersistence isSchemaReady]
  -[FLSQLitePersistence updateSchema]
  -[FLSQLitePersistence getCurrentDatabaseSize]
  -[FLSQLitePersistence setDatabaseSizeLimit]
  -[FLSQLitePersistence initWithStoreId:dbConnection:loggingContext:]
  -[FLSQLitePersistence initWithStoreId:loggingContext:]
  -[FLSQLitePersistence initializeConnectionForUseBy:]
  -[FLSQLitePersistence tryRolloverBatchIfNecessary:]
  -[FLSQLitePersistence tryPrepare:preparedStatement:]
  -[FLSQLitePersistence executeSQLStatement:usingTransaction:]
  -[FLSQLitePersistence executeSQLStatement:]
  -[FLSQLitePersistence executeInTransactionMultipleSQLStatements:]
  -[FLSQLitePersistence iteratePayloadForBatch:codeblock:]
  -[FLSQLitePersistence getIntValueForPragma:into:]
  -[FLSQLitePersistence insertRecordsStatement]
  -[FLSQLitePersistence setInsertRecordsStatement:]
  -[FLSQLitePersistence iteratePayloadStatement]
  -[FLSQLitePersistence setIteratePayloadStatement:]
  -[FLSQLitePersistence maxBatchPayloadInBytes]
  -[FLSQLitePersistence setMaxBatchPayloadInBytes:]
  -[FLSQLitePersistence maxAllowedDatabaseSizeInBytes]
  -[FLSQLitePersistence setMaxAllowedDatabaseSizeInBytes:]
  -[FLSQLitePersistence currentBatchIdentifier]
  -[FLSQLitePersistence setCurrentBatchIdentifier:]
  -[FLSQLitePersistence currentBatchCreationDate]
  -[FLSQLitePersistence setCurrentBatchCreationDate:]
  -[FLSQLitePersistence currentBatchPayloadSize]
  -[FLSQLitePersistence setCurrentBatchPayloadSize:]
  -[FLSQLitePersistence batchMaximumDuration]
  -[FLSQLitePersistence setBatchMaximumDuration:]
  -[FLSQLitePersistence maxRowIdStatement]
  -[FLSQLitePersistence setMaxRowIdStatement:]
  -[FLSQLitePersistence finalizeObserver]
  -[FLSQLitePersistence maxRowId]
  -[FLSQLitePersistence registerInsertionObserver:]
  -[FLSQLitePersistence observeInsertionAtRow:observer:]


FLLoggingContext : NSObject <FLLoggingContext>
 @property  NSString *timestampReferenceIdentifier
 @property  NSFileManager *fileManager
 @property  unsigned long now
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSUserDefaults *userDefaults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FLLoggingContext now]
  -[FLLoggingContext userDefaults]
  -[FLLoggingContext .cxx_destruct]
  -[FLLoggingContext fileManager]
  -[FLLoggingContext initWithFileManager:]
  -[FLLoggingContext queue]
  -[FLLoggingContext setFileManager:]
  -[FLLoggingContext init]
  -[FLLoggingContext timestampReferenceIdentifier]
  -[FLLoggingContext setTimestampReferenceIdentifier:]
  -[FLLoggingContext reportTelemetry:payload:]


UploadRecord : NSObject
 @property  NSString *uploadIdentifier
 @property  NSData *payload
 @property  NSString *timestampReferenceIdentifier
 @property  int uploadStatus
 @property  unsigned long processedAttempts
 @property  NSDate *dateCreated
 @property  NSDate *dateLastProcessed
 @property  NSDate *dateUploaded
 @property  unsigned long size
 @property  NSString *applicationIdentifier

  // instance methods
  -[UploadRecord setPayload:]
  -[UploadRecord applicationIdentifier]
  -[UploadRecord setApplicationIdentifier:]
  -[UploadRecord payload]
  -[UploadRecord dateCreated]
  -[UploadRecord .cxx_destruct]
  -[UploadRecord size]
  -[UploadRecord uploadIdentifier]
  -[UploadRecord setSize:]
  -[UploadRecord setDateCreated:]
  -[UploadRecord setUploadIdentifier:]
  -[UploadRecord timestampReferenceIdentifier]
  -[UploadRecord setTimestampReferenceIdentifier:]
  -[UploadRecord processedAttempts]
  -[UploadRecord setProcessedAttempts:]
  -[UploadRecord dateLastProcessed]
  -[UploadRecord setDateLastProcessed:]
  -[UploadRecord dateUploaded]
  -[UploadRecord setDateUploaded:]
  -[UploadRecord outcomeTelemetryDictionary]
  -[UploadRecord uploadStatus]
  -[UploadRecord setUploadStatus:]


FeedbackLoggerFBFClient : NSObject
 @property  NSXPCConnection *daemonConnection
 @property  <FeedbackLoggerDaemonXPC> *fbf
 @property  NSDistributedNotificationCenter *notificationCenter
 @property  NSObject<OS_os_log> *log

  // instance methods
  -[FeedbackLoggerFBFClient notificationCenter]
  -[FeedbackLoggerFBFClient setDaemonConnection:]
  -[FeedbackLoggerFBFClient setNotificationCenter:]
  -[FeedbackLoggerFBFClient daemonConnection]
  -[FeedbackLoggerFBFClient .cxx_destruct]
  -[FeedbackLoggerFBFClient log]
  -[FeedbackLoggerFBFClient init]
  -[FeedbackLoggerFBFClient scheduleImmediateUploadWithHeaders:completion:]
  -[FeedbackLoggerFBFClient fbf]
  -[FeedbackLoggerFBFClient setFbf:]


NSFileManager(FeedbackLogger)
	// instance methods
	-[NSFileManager(FeedbackLogger) feedbackLoggerDirectoryURL]
	-[NSFileManager(FeedbackLogger) urlForStoreWithId:]

01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0200 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBDataReader 
