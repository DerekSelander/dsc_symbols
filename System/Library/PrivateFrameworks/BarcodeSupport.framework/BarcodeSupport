|| __DATA.__data _BCSBarcodeNotificationPayloadActionsKey
|| __DATA.__data _BCSBarcodeNotificationPayloadContactKey
|| __DATA.__data _BCSBarcodeNotificationPayloadContentIsPreviewableKey
|| __DATA.__data _BCSBarcodeNotificationPayloadExtraPreviewText
|| __DATA.__data _BCSBarcodeNotificationPayloadICSStringKey
|| __DATA.__data _BCSBarcodeNotificationPayloadKey
|| __DATA.__data _BCSBarcodeNotificationPayloadPreviewFooterSubtitleKey
|| __DATA.__data _BCSBarcodeNotificationPayloadPreviewFooterTitleKey
|| __DATA.__data _BCSBarcodeNotificationPayloadScannerResultKey
|| __DATA.__data _BCSBarcodeNotificationPayloadURLKey
|| __DATA.__objc_data _OBJC_CLASS_$_BCSAVParsingSession
|| __DATA.__objc_data _OBJC_CLASS_$_BCSAWDLogger
|| __DATA.__objc_data _OBJC_CLASS_$_BCSAction
|| __DATA.__objc_data _OBJC_CLASS_$_BCSActionPickerItem
|| __DATA.__objc_data _OBJC_CLASS_$_BCSAnalyticsLogger
|| __DATA.__objc_data _OBJC_CLASS_$_BCSAppClipCodeURLDecoder
|| __DATA.__objc_data _OBJC_CLASS_$_BCSAppRanker
|| __DATA.__objc_data _OBJC_CLASS_$_BCSConfigurationManager
|| __DATA.__objc_data _OBJC_CLASS_$_BCSDataDetectionActionPickerItem
|| __DATA.__objc_data _OBJC_CLASS_$_BCSDetectedCode
|| __DATA.__objc_data _OBJC_CLASS_$_BCSNFCCodeParser
|| __DATA.__objc_data _OBJC_CLASS_$_BCSNotification
|| __DATA.__objc_data _OBJC_CLASS_$_BCSNotificationManager
|| __DATA.__objc_data _OBJC_CLASS_$_BCSNotificationServiceConnection
|| __DATA.__objc_data _OBJC_CLASS_$_BCSNotificationServiceDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_BCSParser
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSAVParsingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSAWDLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSAction
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSActionPickerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSAnalyticsLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSAppClipCodeURLDecoder
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSAppRanker
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSConfigurationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSDataDetectionActionPickerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSDetectedCode
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSNFCCodeParser
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSNotificationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSNotificationServiceConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSNotificationServiceDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSParser
|| __DATA_CONST.__const _BCSActionErrorDomain
|| __DATA_CONST.__const _BCSAppClipCodeURLDecoderErrorDomain
|| __DATA_CONST.__const _BCSDetectedCodeErrorDomain
|| __DATA_CONST.__const _BCSErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSNFCReaderConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSQRCodeParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSNFCReaderConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSQRCodeParser
|| __TEXT.__text __BCSLocalizedString
|| __TEXT.__text __bcs_CGImagePNGRepresentation
|| __TEXT.__text __bcs_applyTreatmentToIcon
|| __TEXT.__text __bcs_iconWithAppclipTreatment
|| __TEXT.__text __bcs_notificationIconBaseURL
|| __TEXT.__text __bcs_pointToRectDistance
__ AVFoundation: _AVMetadataObjectTypeQRCode
__ AVFoundation: _OBJC_CLASS_$_AVMetadataMachineReadableCodeObject
__ ClipServices: _CPSErrorDomain
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAllocatorGetDefault
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __CFBundleCopyFrameworkURLForExecutablePath
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationOtherButtonTitleKey
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectZero
__ CoreImage: _CIDetectorAccuracy
__ CoreImage: _CIDetectorAccuracyHigh
__ CoreImage: _CIDetectorAspectRatio
__ CoreImage: _CIDetectorTypeQRCode
__ CoreImage: _OBJC_CLASS_$_CIDetector
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _OBJC_CLASS_$_CIQRCodeDescriptor
__ CoreImage: _OBJC_CLASS_$_CIQRCodeFeature
__ CoreServices: _OBJC_CLASS_$_LSAppLink
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ CoreServices: _OBJC_CLASS_$_NSUserActivity
__ CoreServices: _OBJC_CLASS_$__LSOpenConfiguration
__ Foundation: _NSStringFromClass
__ Foundation: _NSUserActivityTypeBrowsingWeb
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSValue
__ MobileSafari: __SFDeviceIsPad
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ SoftLinking: __sl_dlopen
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationSound
__ UserNotifications: _OBJC_CLASS_$_UNNotificationAction
__ UserNotifications: _OBJC_CLASS_$_UNNotificationAttachment
__ UserNotifications: _OBJC_CLASS_$_UNNotificationIcon
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ UserNotifications: _UNNotificationDefaultActionIdentifier
__ UserNotifications: _UNNotificationDismissActionIdentifier
__ WirelessDiagnostics: _AWDPostMetric
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetFloat32Answer
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _clock_gettime_nsec_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_image_path_containing_address
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _strlen
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
AWDBarcodeSupportCodeActivatedEvent : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasClientType
 @property  int clientType
 @property  BOOL hasBarcodeDataType
 @property  int barcodeDataType
 @property  BOOL hasBarcodeURLType
 @property  int barcodeURLType
 @property  BOOL hasAppLinkActivationOpenStrategy
 @property  int appLinkActivationOpenStrategy
 @property  BOOL hasBarcodeSourceType
 @property  int barcodeSourceType

  // instance methods
  -[AWDBarcodeSupportCodeActivatedEvent setClientType:]
  -[AWDBarcodeSupportCodeActivatedEvent clientType]
  -[AWDBarcodeSupportCodeActivatedEvent mergeFrom:]
  -[AWDBarcodeSupportCodeActivatedEvent dictionaryRepresentation]
  -[AWDBarcodeSupportCodeActivatedEvent writeTo:]
  -[AWDBarcodeSupportCodeActivatedEvent isEqual:]
  -[AWDBarcodeSupportCodeActivatedEvent copyTo:]
  -[AWDBarcodeSupportCodeActivatedEvent readFrom:]
  -[AWDBarcodeSupportCodeActivatedEvent hasTimestamp]
  -[AWDBarcodeSupportCodeActivatedEvent timestamp]
  -[AWDBarcodeSupportCodeActivatedEvent copyWithZone:]
  -[AWDBarcodeSupportCodeActivatedEvent setHasTimestamp:]
  -[AWDBarcodeSupportCodeActivatedEvent setTimestamp:]
  -[AWDBarcodeSupportCodeActivatedEvent setHasClientType:]
  -[AWDBarcodeSupportCodeActivatedEvent hasClientType]
  -[AWDBarcodeSupportCodeActivatedEvent clientTypeAsString:]
  -[AWDBarcodeSupportCodeActivatedEvent StringAsClientType:]
  -[AWDBarcodeSupportCodeActivatedEvent barcodeDataType]
  -[AWDBarcodeSupportCodeActivatedEvent setBarcodeDataType:]
  -[AWDBarcodeSupportCodeActivatedEvent setHasBarcodeDataType:]
  -[AWDBarcodeSupportCodeActivatedEvent hasBarcodeDataType]
  -[AWDBarcodeSupportCodeActivatedEvent barcodeDataTypeAsString:]
  -[AWDBarcodeSupportCodeActivatedEvent StringAsBarcodeDataType:]
  -[AWDBarcodeSupportCodeActivatedEvent barcodeURLType]
  -[AWDBarcodeSupportCodeActivatedEvent setBarcodeURLType:]
  -[AWDBarcodeSupportCodeActivatedEvent setHasBarcodeURLType:]
  -[AWDBarcodeSupportCodeActivatedEvent hasBarcodeURLType]
  -[AWDBarcodeSupportCodeActivatedEvent barcodeURLTypeAsString:]
  -[AWDBarcodeSupportCodeActivatedEvent StringAsBarcodeURLType:]
  -[AWDBarcodeSupportCodeActivatedEvent appLinkActivationOpenStrategy]
  -[AWDBarcodeSupportCodeActivatedEvent setAppLinkActivationOpenStrategy:]
  -[AWDBarcodeSupportCodeActivatedEvent setHasAppLinkActivationOpenStrategy:]
  -[AWDBarcodeSupportCodeActivatedEvent hasAppLinkActivationOpenStrategy]
  -[AWDBarcodeSupportCodeActivatedEvent appLinkActivationOpenStrategyAsString:]
  -[AWDBarcodeSupportCodeActivatedEvent StringAsAppLinkActivationOpenStrategy:]
  -[AWDBarcodeSupportCodeActivatedEvent barcodeSourceType]
  -[AWDBarcodeSupportCodeActivatedEvent setBarcodeSourceType:]
  -[AWDBarcodeSupportCodeActivatedEvent setHasBarcodeSourceType:]
  -[AWDBarcodeSupportCodeActivatedEvent hasBarcodeSourceType]
  -[AWDBarcodeSupportCodeActivatedEvent barcodeSourceTypeAsString:]
  -[AWDBarcodeSupportCodeActivatedEvent StringAsBarcodeSourceType:]


BCSDetectedCode : NSObject
 @property  AVMetadataMachineReadableCodeObject *mrcObject
 @property  VNBarcodeObservation *observation

  // class methods
  +[BCSDetectedCode detectedCodeWithBarcodeObservation:]
  +[BCSDetectedCode detectedCodeWithMachineReadableObject:]

  // instance methods
  -[BCSDetectedCode .cxx_destruct]
  -[BCSDetectedCode observation]
  -[BCSDetectedCode isLikelyEqualToCode:]
  -[BCSDetectedCode parseCodeWithCompletion:]
  -[BCSDetectedCode mrcObject]


AWDBarcodeSupportCodeDetectedEvent : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasClientType
 @property  int clientType
 @property  BOOL hasBarcodeDataType
 @property  int barcodeDataType
 @property  BOOL hasDetectionTimeMs
 @property  unsigned long detectionTimeMs
 @property  BOOL hasInvalidBarcodeDataType
 @property  int invalidBarcodeDataType
 @property  BOOL hasBarcodeURLType
 @property  int barcodeURLType
 @property  BOOL hasAppLinkPreferredOpenStrategy
 @property  int appLinkPreferredOpenStrategy
 @property  BOOL hasBarcodeSourceType
 @property  int barcodeSourceType

  // instance methods
  -[AWDBarcodeSupportCodeDetectedEvent setClientType:]
  -[AWDBarcodeSupportCodeDetectedEvent clientType]
  -[AWDBarcodeSupportCodeDetectedEvent mergeFrom:]
  -[AWDBarcodeSupportCodeDetectedEvent dictionaryRepresentation]
  -[AWDBarcodeSupportCodeDetectedEvent writeTo:]
  -[AWDBarcodeSupportCodeDetectedEvent isEqual:]
  -[AWDBarcodeSupportCodeDetectedEvent copyTo:]
  -[AWDBarcodeSupportCodeDetectedEvent readFrom:]
  -[AWDBarcodeSupportCodeDetectedEvent hasTimestamp]
  -[AWDBarcodeSupportCodeDetectedEvent timestamp]
  -[AWDBarcodeSupportCodeDetectedEvent copyWithZone:]
  -[AWDBarcodeSupportCodeDetectedEvent setHasTimestamp:]
  -[AWDBarcodeSupportCodeDetectedEvent setTimestamp:]
  -[AWDBarcodeSupportCodeDetectedEvent setHasClientType:]
  -[AWDBarcodeSupportCodeDetectedEvent hasClientType]
  -[AWDBarcodeSupportCodeDetectedEvent clientTypeAsString:]
  -[AWDBarcodeSupportCodeDetectedEvent StringAsClientType:]
  -[AWDBarcodeSupportCodeDetectedEvent barcodeDataType]
  -[AWDBarcodeSupportCodeDetectedEvent setBarcodeDataType:]
  -[AWDBarcodeSupportCodeDetectedEvent setHasBarcodeDataType:]
  -[AWDBarcodeSupportCodeDetectedEvent hasBarcodeDataType]
  -[AWDBarcodeSupportCodeDetectedEvent barcodeDataTypeAsString:]
  -[AWDBarcodeSupportCodeDetectedEvent StringAsBarcodeDataType:]
  -[AWDBarcodeSupportCodeDetectedEvent barcodeURLType]
  -[AWDBarcodeSupportCodeDetectedEvent setBarcodeURLType:]
  -[AWDBarcodeSupportCodeDetectedEvent setHasBarcodeURLType:]
  -[AWDBarcodeSupportCodeDetectedEvent hasBarcodeURLType]
  -[AWDBarcodeSupportCodeDetectedEvent barcodeURLTypeAsString:]
  -[AWDBarcodeSupportCodeDetectedEvent StringAsBarcodeURLType:]
  -[AWDBarcodeSupportCodeDetectedEvent barcodeSourceType]
  -[AWDBarcodeSupportCodeDetectedEvent setBarcodeSourceType:]
  -[AWDBarcodeSupportCodeDetectedEvent setHasBarcodeSourceType:]
  -[AWDBarcodeSupportCodeDetectedEvent hasBarcodeSourceType]
  -[AWDBarcodeSupportCodeDetectedEvent barcodeSourceTypeAsString:]
  -[AWDBarcodeSupportCodeDetectedEvent StringAsBarcodeSourceType:]
  -[AWDBarcodeSupportCodeDetectedEvent setDetectionTimeMs:]
  -[AWDBarcodeSupportCodeDetectedEvent setHasDetectionTimeMs:]
  -[AWDBarcodeSupportCodeDetectedEvent hasDetectionTimeMs]
  -[AWDBarcodeSupportCodeDetectedEvent invalidBarcodeDataType]
  -[AWDBarcodeSupportCodeDetectedEvent setInvalidBarcodeDataType:]
  -[AWDBarcodeSupportCodeDetectedEvent setHasInvalidBarcodeDataType:]
  -[AWDBarcodeSupportCodeDetectedEvent hasInvalidBarcodeDataType]
  -[AWDBarcodeSupportCodeDetectedEvent invalidBarcodeDataTypeAsString:]
  -[AWDBarcodeSupportCodeDetectedEvent StringAsInvalidBarcodeDataType:]
  -[AWDBarcodeSupportCodeDetectedEvent appLinkPreferredOpenStrategy]
  -[AWDBarcodeSupportCodeDetectedEvent setAppLinkPreferredOpenStrategy:]
  -[AWDBarcodeSupportCodeDetectedEvent setHasAppLinkPreferredOpenStrategy:]
  -[AWDBarcodeSupportCodeDetectedEvent hasAppLinkPreferredOpenStrategy]
  -[AWDBarcodeSupportCodeDetectedEvent appLinkPreferredOpenStrategyAsString:]
  -[AWDBarcodeSupportCodeDetectedEvent StringAsAppLinkPreferredOpenStrategy:]
  -[AWDBarcodeSupportCodeDetectedEvent detectionTimeMs]


BCSShareActionPickerItem : BCSActionPickerItem
  // instance methods
  -[BCSShareActionPickerItem label]
  -[BCSShareActionPickerItem icon]
  -[BCSShareActionPickerItem .cxx_destruct]
  -[BCSShareActionPickerItem initWithAction:]
  -[BCSShareActionPickerItem performActionWithFBOptions:]
  -[BCSShareActionPickerItem canGroupInSubmenu]


AWDBarcodeSupportCodePreviewedEvent : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasPreviewContentType
 @property  int previewContentType

  // instance methods
  -[AWDBarcodeSupportCodePreviewedEvent mergeFrom:]
  -[AWDBarcodeSupportCodePreviewedEvent dictionaryRepresentation]
  -[AWDBarcodeSupportCodePreviewedEvent writeTo:]
  -[AWDBarcodeSupportCodePreviewedEvent isEqual:]
  -[AWDBarcodeSupportCodePreviewedEvent copyTo:]
  -[AWDBarcodeSupportCodePreviewedEvent readFrom:]
  -[AWDBarcodeSupportCodePreviewedEvent hasTimestamp]
  -[AWDBarcodeSupportCodePreviewedEvent timestamp]
  -[AWDBarcodeSupportCodePreviewedEvent copyWithZone:]
  -[AWDBarcodeSupportCodePreviewedEvent setHasTimestamp:]
  -[AWDBarcodeSupportCodePreviewedEvent setTimestamp:]
  -[AWDBarcodeSupportCodePreviewedEvent previewContentType]
  -[AWDBarcodeSupportCodePreviewedEvent setPreviewContentType:]
  -[AWDBarcodeSupportCodePreviewedEvent setHasPreviewContentType:]
  -[AWDBarcodeSupportCodePreviewedEvent hasPreviewContentType]
  -[AWDBarcodeSupportCodePreviewedEvent previewContentTypeAsString:]
  -[AWDBarcodeSupportCodePreviewedEvent StringAsPreviewContentType:]


BCSAction : NSObject <BCSActionPrivate, BCSAction>
 @property  <BCSParsedDataPrivate> *data
 @property  NSURL *url
 @property  <BCSCodePayload> *codePayload
 @property  BOOL preferItemsInSubmenu
 @property  BCSDetectedCode *detectedCode
 @property  NSArray *menuElements
 @property  unsigned long menuElementsCount
 @property  @? menuProvider
 @property  NSString *shortDescription
 @property  UIImage *actionIcon
 @property  NSString *dataTypeDisplayString
 @property  NSString *contentPreviewString
 @property  long long payloadDataType
 @property  NSDictionary *debugDescriptionDictionary
 @property  NSString *extraPreviewText
 @property  NSArray *appLinks
 @property  BOOL isInvalidDataAction
 @property  BOOL isWiFiAction
 @property  long long codeType
 @property  BOOL shouldRequireUserToPickTargetApp
 @property  BOOL hasSensitiveURL
 @property  CPSClipMetadataRequest *clipMetadataRequest
 @property  BOOL isAMSAction
 @property  BOOL isPasskeyAction
 @property  <BCSActionDelegate> *delegate
 @property  NSURL *urlThatCanBeOpened
 @property  NSString *defaultActionTargetApplicationBundleIdentifier
 @property  NSString *localizedDefaultActionTitle
 @property  NSString *localizedDefaultActionDescription
 @property  NSString *localizedActionDescription
 @property  NSArray *actionPickerItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSAction getActionWithData:codePayload:completionHandler:]

  // instance methods
  -[BCSAction performAction]
  -[BCSAction url]
  -[BCSAction .cxx_destruct]
  -[BCSAction setDelegate:]
  -[BCSAction data]
  -[BCSAction performDefaultAction]
  -[BCSAction setDetectedCode:]
  -[BCSAction performActionWithCompletion:]
  -[BCSAction codeType]
  -[BCSAction appLinks]
  -[BCSAction type]
  -[BCSAction delegate]
  -[BCSAction menuProvider]
  -[BCSAction shortDescription]
  -[BCSAction urlThatCanBeOpened]
  -[BCSAction actionPickerItems]
  -[BCSAction localizedDefaultActionDescription]
  -[BCSAction defaultActionTargetApplicationBundleIdentifier]
  -[BCSAction detectedCode]
  -[BCSAction payloadDataType]
  -[BCSAction dataTypeDisplayString]
  -[BCSAction menuElements]
  -[BCSAction contentPreviewString]
  -[BCSAction menuElementsCount]
  -[BCSAction actionIcon]
  -[BCSAction initWithData:codePayload:]
  -[BCSAction determineActionabilityWithCompletionHandler:]
  -[BCSAction localizedActionDescription]
  -[BCSAction debugDescriptionExtraInfoDictionary]
  -[BCSAction extraPreviewText]
  -[BCSAction performActionWithOptions:completion:]
  -[BCSAction preferItemsInSubmenu]
  -[BCSAction subMenuWithMenuItems:]
  -[BCSAction localizedDefaultActionTitle]
  -[BCSAction shouldRequireUserToPickTargetApp]
  -[BCSAction clipMetadataRequest]
  -[BCSAction _fallbackDataTypeDisplayString]
  -[BCSAction showActionPicker]
  -[BCSAction debugDescriptionDictionary]
  -[BCSAction isInvalidDataAction]
  -[BCSAction isWiFiAction]
  -[BCSAction hasSensitiveURL]
  -[BCSAction setClipMetadataRequest:]
  -[BCSAction isAMSAction]
  -[BCSAction isPasskeyAction]
  -[BCSAction codePayload]


BCSActionPickerItem : NSObject
 @property  UIImage *icon
 @property  <BCSActionPickerItemDelegate> *actionPickerItemDelegate
 @property  NSString *label
 @property  BCSAction *action
 @property  BOOL shouldDismissAlertWhenActionIsTaken
 @property  NSURL *actionURL
 @property  NSString *targetApplicationBundleIdentifier
 @property  long long dataType
 @property  NSString *localizedDefaultActionDescription
 @property  BOOL copyActionItem
 @property  BOOL useInlineMenu
 @property  BOOL canGroupInSubmenu

  // class methods
  +[BCSActionPickerItem actionPickerItemWithLabel:actionHandler:]

  // instance methods
  -[BCSActionPickerItem label]
  -[BCSActionPickerItem performAction]
  -[BCSActionPickerItem icon]
  -[BCSActionPickerItem .cxx_destruct]
  -[BCSActionPickerItem dataType]
  -[BCSActionPickerItem action]
  -[BCSActionPickerItem setIcon:]
  -[BCSActionPickerItem actionURL]
  -[BCSActionPickerItem targetApplicationBundleIdentifier]
  -[BCSActionPickerItem initWithAction:]
  -[BCSActionPickerItem isCopyActionItem]
  -[BCSActionPickerItem localizedDefaultActionDescription]
  -[BCSActionPickerItem didPerformAction]
  -[BCSActionPickerItem performActionWithFBOptions:]
  -[BCSActionPickerItem canGroupInSubmenu]
  -[BCSActionPickerItem useInlineMenu]
  -[BCSActionPickerItem initWithLabel:actionHandler:]
  -[BCSActionPickerItem initWithLabel:action:]
  -[BCSActionPickerItem shouldDismissAlertWhenActionIsTaken]
  -[BCSActionPickerItem actionPickerItemDelegate]
  -[BCSActionPickerItem setActionPickerItemDelegate:]


BCSActionPickerViewAssistant : NSObject <BCSActionPickerItemDelegate>
 @property  BOOL showingPicker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSActionPickerViewAssistant .cxx_destruct]
  -[BCSActionPickerViewAssistant isShowingPicker]
  -[BCSActionPickerViewAssistant showActionPickerWithItems:fromViewController:presentingRect:]
  -[BCSActionPickerViewAssistant _cleanUpAlertController]
  -[BCSActionPickerViewAssistant actionPickerItemAlertController:]
  -[BCSActionPickerViewAssistant actionPickerItem:didDismissAlertController:]


BCSAVParsingSession : NSObject
  // instance methods
  -[BCSAVParsingSession .cxx_destruct]
  -[BCSAVParsingSession init]
  -[BCSAVParsingSession dealloc]
  -[BCSAVParsingSession updateSessionWithMetadataObjects:completionHandler:]
  -[BCSAVParsingSession _isLikelyLastScannedObject:]
  -[BCSAVParsingSession _bestObjectForParsing:]
  -[BCSAVParsingSession _shouldSkipIncomingObject:]
  -[BCSAVParsingSession _updateSessionWithMetadataObject:completionHandler:]
  -[BCSAVParsingSession _temporalStickyFactorForObject:]
  -[BCSAVParsingSession updateSessionWithMetadataObjects:]


BCSNFCReaderURLRecord : NSObject
 @property  NSURL *url
 @property  <NFNdefMessage> *message

  // instance methods
  -[BCSNFCReaderURLRecord url]
  -[BCSNFCReaderURLRecord .cxx_destruct]
  -[BCSNFCReaderURLRecord message]
  -[BCSNFCReaderURLRecord initWithURL:message:]


BCSNFCReader : NSObject <NFReaderSessionDelegate>
 @property  long long state
 @property  BCSNotificationService *notificationService
 @property  double postNotificationReactivationDelay
 @property  double dismissProxCardReactivationDelay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSNFCReader .cxx_destruct]
  -[BCSNFCReader startReading]
  -[BCSNFCReader _restart]
  -[BCSNFCReader state]
  -[BCSNFCReader _isWaiting]
  -[BCSNFCReader initWithDelegate:]
  -[BCSNFCReader _readTag:]
  -[BCSNFCReader dealloc]
  -[BCSNFCReader readerSession:didDetectTags:]
  -[BCSNFCReader readerSessionDidEndUnexpectedly:reason:]
  -[BCSNFCReader readerSession:externalReaderFieldNotification:]
  -[BCSNFCReader _performBlockOnQueue:]
  -[BCSNFCReader _startPolling]
  -[BCSNFCReader _stopPolling]
  -[BCSNFCReader _setStateAndNotifyDelegate:]
  -[BCSNFCReader _startReading]
  -[BCSNFCReader _stopReadingAndTransitionToState:]
  -[BCSNFCReader _didDetectTags:]
  -[BCSNFCReader _startProcessingURLs]
  -[BCSNFCReader _restartPolling]
  -[BCSNFCReader _disconnectTagAndBlockReadingUntilRemoved]
  -[BCSNFCReader _disconnectTag]
  -[BCSNFCReader _processNextURL]
  -[BCSNFCReader _requestNotificationForURLRecord:]
  -[BCSNFCReader _didFindLink]
  -[BCSNFCReader _requestAppClipForURLRecord:]
  -[BCSNFCReader _scheduleReactivationWithDelay:]
  -[BCSNFCReader stopReading]
  -[BCSNFCReader notificationService]
  -[BCSNFCReader setNotificationService:]
  -[BCSNFCReader postNotificationReactivationDelay]
  -[BCSNFCReader setPostNotificationReactivationDelay:]
  -[BCSNFCReader dismissProxCardReactivationDelay]
  -[BCSNFCReader setDismissProxCardReactivationDelay:]


BCSAppRanker : NSObject
  // class methods
  +[BCSAppRanker orderApps:forLastUsedApp:]
  +[BCSAppRanker orderAppLinks:forLastUsedApp:]
  +[BCSAppRanker orderApplicationRecords:forPreferredBundleID:]
  +[BCSAppRanker setLastUsedApp:forURL:]
  +[BCSAppRanker bundleIdentifierOfLastUsedAppForURL:]


BCSNFCReaderConnection : NSObject
  // instance methods
  -[BCSNFCReaderConnection disconnect]
  -[BCSNFCReaderConnection .cxx_destruct]
  -[BCSNFCReaderConnection init]
  -[BCSNFCReaderConnection _isNFCEnabled]
  -[BCSNFCReaderConnection _needsRadioEnabledCheck]
  -[BCSNFCReaderConnection _enableNFC]
  -[BCSNFCReaderConnection _hardwareSupportState]
  -[BCSNFCReaderConnection checkNFCEnabledWithCompletionHandler:]
  -[BCSNFCReaderConnection enableNFCWithCompletionHandler:]
  -[BCSNFCReaderConnection checkHardwareSupportStateWithCompletionHandler:]
  -[BCSNFCReaderConnection startReaderWithDelegate:errorHandler:interruptionHandler:]
  -[BCSNFCReaderConnection stopReaderWithErrorHandler:]


BCSWiFiConfigurationActionPickerItem : BCSActionPickerItem
  // instance methods
  -[BCSWiFiConfigurationActionPickerItem icon]


BCSAWDLogger : NSObject
  // class methods
  +[BCSAWDLogger sharedLogger]

  // instance methods
  -[BCSAWDLogger logBarcodeActivatedEventForAction:]
  -[BCSAWDLogger _awdBarcodeClientType]
  -[BCSAWDLogger _awdBarcodeSourceTypeForAction:]
  -[BCSAWDLogger _awdBarcodeDataTypeFromAction:]
  -[BCSAWDLogger _awdInvalidBarcodeDataTypeFromInvalidData:]
  -[BCSAWDLogger _awdBarcodeURLTypeFromURLAction:]
  -[BCSAWDLogger _awdBarcodePreferredAppLinkOpenStrategyFromURLAction:]
  -[BCSAWDLogger barcodeDetectedEventForAction:]
  -[BCSAWDLogger logBarcodeDetectedEvent:startTime:]
  -[BCSAWDLogger logBarcodeDetectedEventForAction:startTime:]
  -[BCSAWDLogger logBarcodePreviewedEventForContentType:]


BCSCalendarEventData : NSObject <BCSParsedDataPrivate>
 @property  NSString *icsString
 @property  long long type
 @property  NSString *extraPreviewText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSCalendarEventData supportsSecureCoding]

  // instance methods
  -[BCSCalendarEventData initWithCoder:]
  -[BCSCalendarEventData .cxx_destruct]
  -[BCSCalendarEventData type]
  -[BCSCalendarEventData encodeWithCoder:]
  -[BCSCalendarEventData icsString]
  -[BCSCalendarEventData extraPreviewText]
  -[BCSCalendarEventData initWithICSString:]


BCSCalendarEventParser : NSObject <BCSDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSCalendarEventParser parseString:]
  +[BCSCalendarEventParser _validatedICSString:]


BCSContactData : NSObject <BCSParsedDataPrivate>
 @property  CNContact *contact
 @property  long long type
 @property  NSString *extraPreviewText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSContactData supportsSecureCoding]

  // instance methods
  -[BCSContactData initWithContact:]
  -[BCSContactData initWithCoder:]
  -[BCSContactData .cxx_destruct]
  -[BCSContactData type]
  -[BCSContactData contact]
  -[BCSContactData encodeWithCoder:]
  -[BCSContactData extraPreviewText]


BCSCopyActionPickerItem : BCSActionPickerItem
 @property  NSString *textToCopy
 @property  NSURL *urlToCopy

  // instance methods
  -[BCSCopyActionPickerItem icon]
  -[BCSCopyActionPickerItem .cxx_destruct]
  -[BCSCopyActionPickerItem isCopyActionItem]
  -[BCSCopyActionPickerItem performActionWithFBOptions:]
  -[BCSCopyActionPickerItem canGroupInSubmenu]
  -[BCSCopyActionPickerItem initWithAction:textToCopy:]
  -[BCSCopyActionPickerItem initWithAction:urlToCopy:]
  -[BCSCopyActionPickerItem textToCopy]
  -[BCSCopyActionPickerItem urlToCopy]


BCSDataDetectionActionPickerItem : BCSActionPickerItem <DDDetectionControllerInteractionDelegate>
 @property  CNContact *contact
 @property  NSString *icsString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSDataDetectionActionPickerItem label]
  -[BCSDataDetectionActionPickerItem icon]
  -[BCSDataDetectionActionPickerItem .cxx_destruct]
  -[BCSDataDetectionActionPickerItem actionURL]
  -[BCSDataDetectionActionPickerItem action:didDismissAlertController:]
  -[BCSDataDetectionActionPickerItem targetApplicationBundleIdentifier]
  -[BCSDataDetectionActionPickerItem contact]
  -[BCSDataDetectionActionPickerItem isCopyActionItem]
  -[BCSDataDetectionActionPickerItem icsString]
  -[BCSDataDetectionActionPickerItem performActionWithFBOptions:]
  -[BCSDataDetectionActionPickerItem shouldDismissAlertWhenActionIsTaken]
  -[BCSDataDetectionActionPickerItem initWithAction:ddAction:]


BCSDataDetectorsScannerResultData : NSObject <BCSParsedDataPrivate>
 @property  DDScannerResult *scannerResult
 @property  long long type
 @property  NSString *extraPreviewText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSDataDetectorsScannerResultData supportsSecureCoding]

  // instance methods
  -[BCSDataDetectorsScannerResultData initWithCoder:]
  -[BCSDataDetectorsScannerResultData .cxx_destruct]
  -[BCSDataDetectorsScannerResultData type]
  -[BCSDataDetectorsScannerResultData encodeWithCoder:]
  -[BCSDataDetectorsScannerResultData scannerResult]
  -[BCSDataDetectorsScannerResultData extraPreviewText]
  -[BCSDataDetectorsScannerResultData initWithScannerResult:type:extraPreviewText:]


UpdatingRectValue : NSValue
  // instance methods
  -[UpdatingRectValue .cxx_destruct]
  -[UpdatingRectValue CGRectValue]
  -[UpdatingRectValue initWithUpdateBlock:]


BCSDataDetectorsSupportedAction : BCSAction <BCSActionDelegate>
 @property  DDScannerResult *scannerResult
 @property  CNContact *contact
 @property  NSString *icsString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSDataDetectorsSupportedAction performAction]
  -[BCSDataDetectorsSupportedAction url]
  -[BCSDataDetectorsSupportedAction .cxx_destruct]
  -[BCSDataDetectorsSupportedAction performDefaultAction]
  -[BCSDataDetectorsSupportedAction shortDescription]
  -[BCSDataDetectorsSupportedAction contact]
  -[BCSDataDetectorsSupportedAction scannerResult]
  -[BCSDataDetectorsSupportedAction actionPickerItems]
  -[BCSDataDetectorsSupportedAction localizedDefaultActionDescription]
  -[BCSDataDetectorsSupportedAction defaultActionTargetApplicationBundleIdentifier]
  -[BCSDataDetectorsSupportedAction icsString]
  -[BCSDataDetectorsSupportedAction menuElements]
  -[BCSDataDetectorsSupportedAction contentPreviewString]
  -[BCSDataDetectorsSupportedAction menuElementsCount]
  -[BCSDataDetectorsSupportedAction actionIcon]
  -[BCSDataDetectorsSupportedAction initWithData:codePayload:]
  -[BCSDataDetectorsSupportedAction determineActionabilityWithCompletionHandler:]
  -[BCSDataDetectorsSupportedAction localizedActionDescription]
  -[BCSDataDetectorsSupportedAction debugDescriptionExtraInfoDictionary]
  -[BCSDataDetectorsSupportedAction preferItemsInSubmenu]
  -[BCSDataDetectorsSupportedAction _performActionAndShowActionPickerIfNeeded:]
  -[BCSDataDetectorsSupportedAction _actionStringsArray]
  -[BCSDataDetectorsSupportedAction _setUpActionMenuIfNeeded]
  -[BCSDataDetectorsSupportedAction _hostingViewForAction]


BCSConfigurationManager : NSObject
 @property  NSXPCConnection *serviceConnection

  // instance methods
  -[BCSConfigurationManager .cxx_destruct]
  -[BCSConfigurationManager setServiceConnection:]
  -[BCSConfigurationManager serviceConnection]
  -[BCSConfigurationManager setUpQRCodeControlCenterModuleWithCompletionHandler:]
  -[BCSConfigurationManager processAppClipImageWithURL:scale:completion:]


BCSDocomoEmailParser : NSObject <BCSDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSDocomoEmailParser parseString:]


BCSGenericDataParser : NSObject <BCSDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSGenericDataParser parseString:]
  +[BCSGenericDataParser _parsedDataFromDDResult:decodedString:]


BCSGeoDataParser : NSObject <BCSDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSGeoDataParser parseString:]
  +[BCSGeoDataParser _validateLatitudeAndLongitudeInString:range:]


BCSAnalyticsLogger : NSObject
  // class methods
  +[BCSAnalyticsLogger sharedLogger]

  // instance methods
  -[BCSAnalyticsLogger .cxx_destruct]
  -[BCSAnalyticsLogger _initWithQueue:]
  -[BCSAnalyticsLogger logBarcodeActivatedEventForAction:]
  -[BCSAnalyticsLogger didScanNFCTagOfType:]
  -[BCSAnalyticsLogger logBarcodeDetectedEventForAction:startTime:]
  -[BCSAnalyticsLogger logBarcodePreviewedEventForContentType:]
  -[BCSAnalyticsLogger _sendEventLazyWithName:payload:]
  -[BCSAnalyticsLogger _stringForCodeType:]
  -[BCSAnalyticsLogger _stringForDataType:]
  -[BCSAnalyticsLogger logBarcodeDetectedEventForAction:fromBundleID:]
  -[BCSAnalyticsLogger _eventPayloadForAction:]
  -[BCSAnalyticsLogger didActivateNFCReader]


BCSInvalidDataAction : BCSAction
  // instance methods
  -[BCSInvalidDataAction performDefaultAction]
  -[BCSInvalidDataAction actionPickerItems]
  -[BCSInvalidDataAction localizedDefaultActionDescription]
  -[BCSInvalidDataAction initWithData:codePayload:]
  -[BCSInvalidDataAction isInvalidDataAction]


BCSInvalidParsedData : NSObject <BCSParsedDataPrivate>
 @property  long long invalidDataType
 @property  NSString *invalidContents
 @property  NSString *invalidURLScheme
 @property  long long type
 @property  NSString *extraPreviewText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSInvalidParsedData supportsSecureCoding]

  // instance methods
  -[BCSInvalidParsedData initWithCoder:]
  -[BCSInvalidParsedData .cxx_destruct]
  -[BCSInvalidParsedData type]
  -[BCSInvalidParsedData encodeWithCoder:]
  -[BCSInvalidParsedData extraPreviewText]
  -[BCSInvalidParsedData invalidDataType]
  -[BCSInvalidParsedData initWithInvalidDataType:invalidContents:]
  -[BCSInvalidParsedData setInvalidURLScheme:]
  -[BCSInvalidParsedData setInvalidContents:]
  -[BCSInvalidParsedData invalidContents]
  -[BCSInvalidParsedData invalidURLScheme]


BCSKeyValueParser : NSObject
 @property  NSDictionary *keyValuePairs

  // instance methods
  -[BCSKeyValueParser keyValuePairs]
  -[BCSKeyValueParser .cxx_destruct]
  -[BCSKeyValueParser initWithString:startIndex:]
  -[BCSKeyValueParser _parseNextKeyValuePair]
  -[BCSKeyValueParser _indexOfDelimiter:range:]
  -[BCSKeyValueParser _numberOfPreviousBackSlashesFromIndex:withinRange:]


BCSMeCardParser : NSObject <BCSDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSMeCardParser parseString:]


BCSNotification : NSObject
 @property  long long codeType
 @property  BOOL shouldSkipBanner
 @property  UNNotificationRequest *request
 @property  NSString *identifier
 @property  int requestingProcessID
 @property  BOOL canHandleActionLocally

  // class methods
  +[BCSNotification tempVCardFileURL]
  +[BCSNotification notificationForAction:]
  +[BCSNotification _tlAlertConfiguration]

  // instance methods
  -[BCSNotification _content]
  -[BCSNotification .cxx_destruct]
  -[BCSNotification _defaultURL]
  -[BCSNotification request]
  -[BCSNotification identifier]
  -[BCSNotification _title]
  -[BCSNotification codeType]
  -[BCSNotification _initWithAction:]
  -[BCSNotification _actionTypeStringForQRCode]
  -[BCSNotification _actionTypeStringForNFC]
  -[BCSNotification _shouldRequireUserToPickTargetApp]
  -[BCSNotification _notificationActionFromActionPickerItem:]
  -[BCSNotification _shouldHandleActionPickerItemLocally:]
  -[BCSNotification canHandleActionLocally]
  -[BCSNotification _actionDescriptionString]
  -[BCSNotification _contentIsPreviewable]
  -[BCSNotification _shouldManuallyRequireAuthenticationForURL:]
  -[BCSNotification _supplementActions]
  -[BCSNotification _fbOptionsHandlingUnlockIfNecessary]
  -[BCSNotification shouldSkipBanner]
  -[BCSNotification shouldHandleBulletinActionWithIdentifier:]
  -[BCSNotification _handleCalendarEventWithICSString:]
  -[BCSNotification _performActionAfterUnlock:]
  -[BCSNotification _handleContactInfo:]
  -[BCSNotification _showAppPickerAlertWithFBOptions:]
  -[BCSNotification _contentExtensionData]
  -[BCSNotification _attachmentIconURL]
  -[BCSNotification _shouldScheduleBackgroundActionForLaunchBundleID:]
  -[BCSNotification _orderAppLinkActionsByRecency:]
  -[BCSNotification _pickerLabelForURLActionPickerItem:]
  -[BCSNotification handleActionWithIdentifier:notificationResponseOriginID:]
  -[BCSNotification didHandleBulletinActionWithIdentifier:]
  -[BCSNotification requestingProcessID]
  -[BCSNotification setRequestingProcessID:]


BCSNotificationIcon : NSObject
 @property  NSURL *imageURL

  // class methods
  +[BCSNotificationIcon nfcIcon]
  +[BCSNotificationIcon viewfinderIcon]
  +[BCSNotificationIcon qrCodeIcon]

  // instance methods
  -[BCSNotificationIcon imageURL]
  -[BCSNotificationIcon .cxx_destruct]
  -[BCSNotificationIcon initWithAction:]
  -[BCSNotificationIcon _clipIconURLForAction:scale:]
  -[BCSNotificationIcon _notificationIconDataURLForApp:scale:]


BCSNotificationManager : NSObject <UNUserNotificationCenterDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSNotificationManager sharedManager]

  // instance methods
  -[BCSNotificationManager .cxx_destruct]
  -[BCSNotificationManager init]
  -[BCSNotificationManager userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[BCSNotificationManager invalidate]
  -[BCSNotificationManager _configureUserNotificationCenter]
  -[BCSNotificationManager _addRequestForNotification:codeType:]
  -[BCSNotificationManager _userNotificationCenterForCodeType:]
  -[BCSNotificationManager _notificationWithIdentifier:]
  -[BCSNotificationManager didReceiveNotificationResponse:]
  -[BCSNotificationManager scheduleNotification:codeType:]
  -[BCSNotificationManager withdrawNotificationsWithProcessID:codeType:]


BCSNotificationService : NSObject <BCSNotificationServiceProtocol>
  // instance methods
  -[BCSNotificationService .cxx_destruct]
  -[BCSNotificationService initWithConnection:]
  -[BCSNotificationService notifyParsedCodeWithData:codePayload:shouldReplacePreviousNotifications:reply:]
  -[BCSNotificationService didReceiveNotificationResponse:]
  -[BCSNotificationService _cancelNotificationsForCodeType:]
  -[BCSNotificationService _didReceiveNotificationResponse:]
  -[BCSNotificationService cancelNotificationsForCodeType:]
  -[BCSNotificationService startNFCReaderWithDelegate:]
  -[BCSNotificationService stopNFCReader]


BCSNotificationServiceConnection : NSObject
 @property  NSXPCConnection *serviceConnection
 @property  @? interruptionHandler

  // instance methods
  -[BCSNotificationServiceConnection .cxx_destruct]
  -[BCSNotificationServiceConnection setServiceConnection:]
  -[BCSNotificationServiceConnection serviceConnection]
  -[BCSNotificationServiceConnection dealloc]
  -[BCSNotificationServiceConnection interruptionHandler]
  -[BCSNotificationServiceConnection setInterruptionHandler:]
  -[BCSNotificationServiceConnection startNFCReaderWithDelegate:errorHandler:]
  -[BCSNotificationServiceConnection stopNFCReaderWithErrorHandler:]
  -[BCSNotificationServiceConnection didReceiveNotificationResponse:]
  -[BCSNotificationServiceConnection cancelNotificationsForCodeType:]
  -[BCSNotificationServiceConnection notifyParsedCodeWithData:codePayload:shouldReplacePreviousNotifications:withReply:]


BCSNotificationServiceDelegate : NSObject <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSNotificationServiceDelegate listener:shouldAcceptNewConnection:]


BCSParsedURLData : NSObject <BCSParsedDataPrivate>
 @property  NSURL *url
 @property  NSString *preferredBundleID
 @property  long long type
 @property  NSString *extraPreviewText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSParsedURLData supportsSecureCoding]

  // instance methods
  -[BCSParsedURLData initWithCoder:]
  -[BCSParsedURLData url]
  -[BCSParsedURLData .cxx_destruct]
  -[BCSParsedURLData initWithURL:type:]
  -[BCSParsedURLData type]
  -[BCSParsedURLData encodeWithCoder:]
  -[BCSParsedURLData initWithURL:]
  -[BCSParsedURLData extraPreviewText]
  -[BCSParsedURLData initWithURL:type:extraPreviewText:]
  -[BCSParsedURLData initWithURL:type:extraPreviewText:preferredBundleID:]
  -[BCSParsedURLData preferredBundleID]


BCSParser : NSObject
  // class methods
  +[BCSParser parseString:]


BCSParsingServiceConnection : NSObject
 @property  NSXPCConnection *parsingServiceConnection

  // instance methods
  -[BCSParsingServiceConnection .cxx_destruct]
  -[BCSParsingServiceConnection dealloc]
  -[BCSParsingServiceConnection parsingServiceConnection]
  -[BCSParsingServiceConnection parseQRCodeString:withReply:]
  -[BCSParsingServiceConnection parseQRCodeMetadata:withReply:]
  -[BCSParsingServiceConnection parseQRCodeFeature:withReply:]
  -[BCSParsingServiceConnection decodeAppClipCodeURLWithEncodedData:codingVersion:requiresAuthorization:withReply:]
  -[BCSParsingServiceConnection setPreferredBundleIdentifier:forURL:]
  -[BCSParsingServiceConnection setParsingServiceConnection:]


BCSQRCodeParser : NSObject
 @property  BCSNotificationServiceConnection *notificationServiceConnection

  // class methods
  +[BCSQRCodeParser sharedParser]

  // instance methods
  -[BCSQRCodeParser .cxx_destruct]
  -[BCSQRCodeParser parseCodeFromImage:completionHandler:]
  -[BCSQRCodeParser parseCodeFromMetadataMachineReadableCodeObject:completionHandler:]
  -[BCSQRCodeParser parseCodeFromString:completionHandler:]
  -[BCSQRCodeParser stopQRCodeParsingSession]
  -[BCSQRCodeParser startQRCodeParsingSessionWithMetadataObject:completionHandler:]
  -[BCSQRCodeParser setPreferredBundleIdentifier:forURL:]
  -[BCSQRCodeParser _payloadForMRCObject:]
  -[BCSQRCodeParser _parseMetadataObject:reply:completionHandler:]
  -[BCSQRCodeParser _qrCodeFeatureFromImage:]
  -[BCSQRCodeParser notificationServiceConnection]
  -[BCSQRCodeParser postNotificationAfterParsingCodeFromImage:completion:]


BCSSMSTODataParser : NSObject <BCSDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSSMSTODataParser parseString:]


BCSNFCCodeParser : NSObject
  // instance methods
  -[BCSNFCCodeParser .cxx_destruct]
  -[BCSNFCCodeParser postNotificationForURL:payload:completionHandler:]


BCSStringAction : BCSAction
  // instance methods
  -[BCSStringAction performAction]
  -[BCSStringAction performDefaultAction]
  -[BCSStringAction shortDescription]
  -[BCSStringAction actionPickerItems]
  -[BCSStringAction localizedDefaultActionDescription]
  -[BCSStringAction defaultActionTargetApplicationBundleIdentifier]
  -[BCSStringAction contentPreviewString]
  -[BCSStringAction actionIcon]
  -[BCSStringAction initWithData:codePayload:]
  -[BCSStringAction performActionWithOptions:completion:]


BCSNSUserDefaults : NSObject
  // class methods
  +[BCSNSUserDefaults bcs_barcodeSupportDefaults]


BCSStringData : NSObject <BCSParsedDataPrivate>
 @property  long long type
 @property  NSString *extraPreviewText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSStringData supportsSecureCoding]

  // instance methods
  -[BCSStringData initWithCoder:]
  -[BCSStringData .cxx_destruct]
  -[BCSStringData initWithString:]
  -[BCSStringData type]
  -[BCSStringData encodeWithCoder:]
  -[BCSStringData extraPreviewText]


BCSURLAction : BCSAction
 @property  LSApplicationRecord *targetApplication
 @property  BOOL mustOpenAppLinkInApp
 @property  unsigned long appLinkCount
 @property  BOOL hasPreferredAppLink

  // instance methods
  -[BCSURLAction performAction]
  -[BCSURLAction url]
  -[BCSURLAction .cxx_destruct]
  -[BCSURLAction targetApplication]
  -[BCSURLAction performDefaultAction]
  -[BCSURLAction appLinks]
  -[BCSURLAction shortDescription]
  -[BCSURLAction urlThatCanBeOpened]
  -[BCSURLAction actionPickerItems]
  -[BCSURLAction localizedDefaultActionDescription]
  -[BCSURLAction defaultActionTargetApplicationBundleIdentifier]
  -[BCSURLAction menuElements]
  -[BCSURLAction contentPreviewString]
  -[BCSURLAction menuElementsCount]
  -[BCSURLAction actionIcon]
  -[BCSURLAction initWithData:codePayload:]
  -[BCSURLAction determineActionabilityWithCompletionHandler:]
  -[BCSURLAction debugDescriptionExtraInfoDictionary]
  -[BCSURLAction performActionWithOptions:completion:]
  -[BCSURLAction localizedDefaultActionTitle]
  -[BCSURLAction shouldRequireUserToPickTargetApp]
  -[BCSURLAction hasSensitiveURL]
  -[BCSURLAction isAMSAction]
  -[BCSURLAction isPasskeyAction]
  -[BCSURLAction appLinkCount]
  -[BCSURLAction mustOpenAppLinkInApp]
  -[BCSURLAction performDefaultActionWithFBOptions:]
  -[BCSURLAction hasPreferredAppLink]
  -[BCSURLAction preferredBundleID]
  -[BCSURLAction _hasCellularPlanAction]
  -[BCSURLAction _passkeyActionDescription]
  -[BCSURLAction _actionDescriptionForURL:application:shouldShowHostNameForSafariURL:]
  -[BCSURLAction _actionDescriptionWithoutTargetApplicationForURL:]
  -[BCSURLAction _willOpenInSafari]
  -[BCSURLAction _commonActionPickerItemsForURL]
  -[BCSURLAction _additionalActionPickerItems]
  -[BCSURLAction _actionPickerItemsForAppClip]
  -[BCSURLAction _actionPickerItemsForLockScreenVisibleApps]
  -[BCSURLAction _actionPickerItemsForUnlockedAppLinks]
  -[BCSURLAction _appclipLaunchReason]
  -[BCSURLAction _isVisualCode]
  -[BCSURLAction _tryDetermineActionabilityForSpecialCodesFromQRScannerWithCompletionHandler:]
  -[BCSURLAction _resolveTargetApplicationForURL:completionHandler:]
  -[BCSURLAction _resolveAppClipForURL:completion:]
  -[BCSURLAction _isCodeFromQRScanner]
  -[BCSURLAction _shouldOpenInAppForAppLink:]
  -[BCSURLAction _shouldBlockHandlingURL:]
  -[BCSURLAction _queryApplicationRecordForURL:completionHandler:]
  -[BCSURLAction _actionDescriptionForAppClip]
  -[BCSURLAction _menuElementForActionPicker:]


BCSURLActionPickerItem : BCSActionPickerItem
 @property  LSAppLink *appLink
 @property  <BCSCodePayload> *codePayload

  // instance methods
  -[BCSURLActionPickerItem performAction]
  -[BCSURLActionPickerItem appLink]
  -[BCSURLActionPickerItem icon]
  -[BCSURLActionPickerItem .cxx_destruct]
  -[BCSURLActionPickerItem actionURL]
  -[BCSURLActionPickerItem targetApplicationBundleIdentifier]
  -[BCSURLActionPickerItem performActionWithFBOptions:]
  -[BCSURLActionPickerItem useInlineMenu]
  -[BCSURLActionPickerItem codePayload]
  -[BCSURLActionPickerItem initWithLabel:action:url:applicationRecord:]
  -[BCSURLActionPickerItem initWithLabel:action:appLink:codePayload:]
  -[BCSURLActionPickerItem initWithLabel:action:url:applicationRecord:preferApplicationIcon:]
  -[BCSURLActionPickerItem initWithLabel:action:appLink:codePayload:preferApplicationIcon:]


BCSURLDataParser : NSObject <BCSDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSURLDataParser parseString:]
  +[BCSURLDataParser parseURL:]
  +[BCSURLDataParser parseURL:originalString:]
  +[BCSURLDataParser _canonicalizeMessageURL:]
  +[BCSURLDataParser _dataTypeForSchemeIfSupportedByDataDetectors:]


BCSVCardParser : NSObject <BCSDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSVCardParser parseString:]


BCSAppClipActionPickerItem : BCSActionPickerItem
  // instance methods
  -[BCSAppClipActionPickerItem label]
  -[BCSAppClipActionPickerItem icon]
  -[BCSAppClipActionPickerItem useInlineMenu]


BCSWiFiConfigurationAction : BCSAction
  // instance methods
  -[BCSWiFiConfigurationAction performDefaultAction]
  -[BCSWiFiConfigurationAction actionPickerItems]
  -[BCSWiFiConfigurationAction localizedDefaultActionDescription]
  -[BCSWiFiConfigurationAction actionIcon]
  -[BCSWiFiConfigurationAction initWithData:codePayload:]
  -[BCSWiFiConfigurationAction debugDescriptionExtraInfoDictionary]
  -[BCSWiFiConfigurationAction performDefaultActionWithCompletionHandler:]
  -[BCSWiFiConfigurationAction isWiFiAction]
  -[BCSWiFiConfigurationAction _wiFiConfigurationData]


BCSQRCodePayload : NSObject <BCSCodePayload>
 @property  long long codeType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSQRCodePayload supportsSecureCoding]

  // instance methods
  -[BCSQRCodePayload initWithCoder:]
  -[BCSQRCodePayload .cxx_destruct]
  -[BCSQRCodePayload codeType]
  -[BCSQRCodePayload encodeWithCoder:]
  -[BCSQRCodePayload initWithBarcodeDescriptor:]
  -[BCSQRCodePayload savePayloadInUserActivity:]


BCSNFCCodePayload : NSObject <BCSCodePayload>
 @property  long long codeType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSNFCCodePayload supportsSecureCoding]

  // instance methods
  -[BCSNFCCodePayload initWithCoder:]
  -[BCSNFCCodePayload .cxx_destruct]
  -[BCSNFCCodePayload codeType]
  -[BCSNFCCodePayload encodeWithCoder:]
  -[BCSNFCCodePayload initWithNFCPayload:]
  -[BCSNFCCodePayload savePayloadInUserActivity:]


BCSAppclipCodePayload : NSObject <BCSCodePayload>
 @property  long long codeType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSAppclipCodePayload supportsSecureCoding]

  // instance methods
  -[BCSAppclipCodePayload initWithCoder:]
  -[BCSAppclipCodePayload .cxx_destruct]
  -[BCSAppclipCodePayload codeType]
  -[BCSAppclipCodePayload encodeWithCoder:]
  -[BCSAppclipCodePayload initWithData:version:]
  -[BCSAppclipCodePayload savePayloadInUserActivity:]


BCSWiFiConfigurationData : NSObject <BCSParsedDataPrivate>
 @property  NSString *ssid
 @property  BOOL WEP
 @property  NSString *password
 @property  BOOL hidden
 @property  long long type
 @property  NSString *extraPreviewText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSWiFiConfigurationData supportsSecureCoding]

  // instance methods
  -[BCSWiFiConfigurationData ssid]
  -[BCSWiFiConfigurationData isWEP]
  -[BCSWiFiConfigurationData initWithCoder:]
  -[BCSWiFiConfigurationData password]
  -[BCSWiFiConfigurationData .cxx_destruct]
  -[BCSWiFiConfigurationData isHidden]
  -[BCSWiFiConfigurationData type]
  -[BCSWiFiConfigurationData encodeWithCoder:]
  -[BCSWiFiConfigurationData extraPreviewText]
  -[BCSWiFiConfigurationData initWithSSID:isWEP:password:isHidden:]


BCSAppClipCodeURLDecoder : NSObject
  // class methods
  +[BCSAppClipCodeURLDecoder sharedDecoder]

  // instance methods
  -[BCSAppClipCodeURLDecoder .cxx_destruct]
  -[BCSAppClipCodeURLDecoder init]
  -[BCSAppClipCodeURLDecoder decodeURLWithEncodedData:codingVersion:requiresAuthorization:completionHandler:]
  -[BCSAppClipCodeURLDecoder parseEncodedURLData:version:completion:]


BCSWiFiConfigurationParser : NSObject <BCSDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSWiFiConfigurationParser parseString:]


(BCSNSErrorExtras)
	// instance methods
	-[(BCSNSErrorExtras) _bcs_privacyPreservingDescription]

AVMetadataMachineReadableCodeObject(BCSAVMetadataMachineReadableCodeObjectExtras)
	// instance methods
	-[AVMetadataMachineReadableCodeObject(BCSAVMetadataMachineReadableCodeObjectExtras) _bcs_probablyContainsSameCodeInBasicDescriptor:]

LSAppLink(BCSAppRanker)
	// instance methods
	-[LSAppLink(BCSAppRanker) bundleIdentifier]

CIImage(BCSCIImageExtras)
	// instance methods
	-[CIImage(BCSCIImageExtras) _bcs_stringValueIfQRCode]

NSCoder(BCSNSCoderExtras)
	// instance methods
	-[NSCoder(BCSNSCoderExtras) _bcs_strictlyDecodeObjectOfClass:forKey:]

(BCSNSStringExtras)
	// instance methods
	-[(BCSNSStringExtras) _bcs_hasCaseInsensitivePrefix:]
	-[(BCSNSStringExtras) _bcs_trimmedString]
	-[(BCSNSStringExtras) _bcs_looksLikeEmailAddress]
	-[(BCSNSStringExtras) _bcs_urlEncodedQueryValue]
	-[(BCSNSStringExtras) _bcs_unescapedString]
	-[(BCSNSStringExtras) _bcs_stringForcingLeftToRightDirection]
	-[(BCSNSStringExtras) _bcs_stringWithEnclosingDoubleQuotesRemoved]

(BCSNSURLExtras)
	// class methods
	+[(BCSNSURLExtras) _bcs_searchURLWithQuery:]
	+[(BCSNSURLExtras) _bcs_appStoreSearchURLWithScheme:]
	+[(BCSNSURLExtras) _bcs_URLWithUserTypedString:]

	// instance methods
	-[(BCSNSURLExtras) _bcs_isUPIURL]
	-[(BCSNSURLExtras) _bcs_displayString]
	-[(BCSNSURLExtras) _bcs_isDataDetectorURL]
	-[(BCSNSURLExtras) _bcs_isHTTPFamilyURL]
	-[(BCSNSURLExtras) _bcs_fullURLDisplayString]
	-[(BCSNSURLExtras) _bcs_isMapsURL]
	-[(BCSNSURLExtras) _bcs_isSHCURL]
	-[(BCSNSURLExtras) _bcs_isRedirectedSHCURL]
	-[(BCSNSURLExtras) _bcs_isOtpauthURL]
	-[(BCSNSURLExtras) _bcs_hostWithoutWwwDot]
	-[(BCSNSURLExtras) _bcs_redirectedHealthURLWithOriginalString:]
	-[(BCSNSURLExtras) _bcs_localizedDisplayNameForRedirectedSHCURL]

01 00 0900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataMachineReadableCodeObject 
01 00 0b00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIDetector 
01 00 0b00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 0b00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIQRCodeDescriptor 
01 00 0b00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIQRCodeFeature 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSAppLink 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1100 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: NSUserActivity 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0d00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0700 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 0700 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationSound 
01 00 0700 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationAction 
01 00 0700 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationAttachment 
01 00 0700 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationIcon 
01 00 0700 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 0700 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: _LSOpenConfiguration 
