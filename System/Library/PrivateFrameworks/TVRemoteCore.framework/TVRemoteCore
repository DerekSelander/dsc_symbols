|| __DATA.__data _TVRMSDAAPControlSessionTimeout
|| __DATA.__data _TVRMSDiscoverySessionTimeout
|| __DATA.__data _TVRMSPairingSessionTimeout
|| __DATA.__data _kReachabilityChangedNotification
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCAnalytics
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCButton
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCButtonEvent
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCConstants
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCDevice
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCDeviceAuthenticationChallenge
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCDeviceEventManager
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCDeviceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCDeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCDeviceState
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCFeatures
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCGameControllerEvent
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCHMHomeObserver
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCHMServiceWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCKeyboardAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCKeyboardController
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCKeyboardState
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCLogBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCMatchPointDeviceImpl
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCMatchPointDeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCMediaRemoteEndpointManager
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCPINEntryAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCPreferredDeviceManager
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCRPCompanionLinkClientWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCRapportDeviceImpl
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCRapportDeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCRapportMediaEventsManager
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCRapportRemoteTextInputKeyboardImpl
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCSessionData
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCTouchEvent
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCVoiceRecorder
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCXPCClient
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCXPCProtocolManager
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSAddToWishlistMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSAppleTVServiceProvider
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSAudioRoute
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSAudioRouteMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSAudioRoutesDidUpdateMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSAvailableServicesDidUpdateMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSBeginDiscoveryMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSBeginPairingMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSBeginPairingResponseMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSBonjourServiceProvider
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSConnectToServiceMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSConnectToServiceResponseMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSControlInterface
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSControlInterfaceMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSDAAPControlSession
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSDAAPControlSessionProxy
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSDAAPEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSDAAPLoginManager
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSDAAPParser
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSDAAPRequestManager
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSDAAPTouchRemoteManager
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSDiscoverySession
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSDiscoverySessionProxy
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSFairPlayKeyboardEncryption
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSFairPlaySession
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSHomeSharingServiceProvider
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSIDSClient
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSIDSServer
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSKeyboardInfo
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSNavigationCommandMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSNowPlayingArtworkAvailableMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSNowPlayingArtworkCache
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSNowPlayingArtworkRequestMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSNowPlayingInfo
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSNowPlayingInfoDidUpdateMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSNowPlayingInfoMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSPairingRecordStore
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSPairingServer
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSPairingSession
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSPairingSessionDidPairMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSPairingSessionProxy
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSPickAudioRouteMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSPlaybackCommandMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSPowerAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSReachability
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSResponseCodeMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSRunAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSSeekToPlaybackTimeMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSService
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSServiceMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSSessionManager
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSSessionMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSSessionProxy
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSSetLikeStateMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSSetVolumeMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSTouchMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSTouchRemoteSocket
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSUpdatePairedNetworNamesMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSVolumeDidUpdateMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMSWifiAvailabilityDidChangeMessage
|| __DATA.__objc_data _OBJC_CLASS_$_TVRXDevice
|| __DATA.__objc_data _OBJC_CLASS_$_TVRXDeviceAuthenticationChallenge
|| __DATA.__objc_data _OBJC_CLASS_$_TVRXKeyboardController
|| __DATA.__objc_data _OBJC_CLASS_$_TVRXVoiceRecorder
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCRMSDeviceImpl
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCRMSDeviceKeyboardImpl
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCRMSDeviceManager
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCRMSDeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCRMSDeviceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCAnalytics
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCButton
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCButtonEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCConstants
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCDeviceAuthenticationChallenge
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCDeviceEventManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCDeviceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCDeviceQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCDeviceState
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCFeatures
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCGameControllerEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCHMHomeObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCHMServiceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCKeyboardAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCKeyboardController
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCKeyboardState
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCLogBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCMatchPointDeviceImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCMatchPointDeviceQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCMediaRemoteEndpointManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCPINEntryAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCPreferredDeviceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCRPCompanionLinkClientWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCRapportDeviceImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCRapportDeviceQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCRapportMediaEventsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCRapportRemoteTextInputKeyboardImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCSessionData
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCTouchEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCVoiceRecorder
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCXPCClient
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCXPCProtocolManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSAddToWishlistMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSAppleTVServiceProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSAudioRoute
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSAudioRouteMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSAudioRoutesDidUpdateMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSAvailableServicesDidUpdateMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSBeginDiscoveryMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSBeginPairingMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSBeginPairingResponseMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSBonjourServiceProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSConnectToServiceMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSConnectToServiceResponseMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSControlInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSControlInterfaceMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSDAAPControlSession
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSDAAPControlSessionProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSDAAPEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSDAAPLoginManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSDAAPParser
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSDAAPRequestManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSDAAPTouchRemoteManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSDiscoverySession
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSDiscoverySessionProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSFairPlayKeyboardEncryption
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSFairPlaySession
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSHomeSharingServiceProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSIDSClient
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSIDSServer
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSKeyboardInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSNavigationCommandMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSNowPlayingArtworkAvailableMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSNowPlayingArtworkCache
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSNowPlayingArtworkRequestMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSNowPlayingInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSNowPlayingInfoDidUpdateMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSNowPlayingInfoMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSPairingRecordStore
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSPairingServer
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSPairingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSPairingSessionDidPairMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSPairingSessionProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSPickAudioRouteMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSPlaybackCommandMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSPowerAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSReachability
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSResponseCodeMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSRunAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSSeekToPlaybackTimeMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSService
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSServiceMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSSessionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSSessionMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSSessionProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSSetLikeStateMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSSetVolumeMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSTouchMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSTouchRemoteSocket
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSUpdatePairedNetworNamesMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSVolumeDidUpdateMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMSWifiAvailabilityDidChangeMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRXDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRXDeviceAuthenticationChallenge
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRXKeyboardController
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRXVoiceRecorder
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCRMSDeviceImpl
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCRMSDeviceKeyboardImpl
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCRMSDeviceManager
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCRMSDeviceQuery
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCRMSDeviceWrapper
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAddToWishlistMessage._databaseID
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAddToWishlistMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAddToWishlistMessage._itemID
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAddToWishlistMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAudioRouteMessage._displayName
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAudioRouteMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAudioRouteMessage._macAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAudioRouteMessage._selected
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAudioRouteMessage._supportsVideo
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAudioRoutesDidUpdateMessage._audioRoutes
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAudioRoutesDidUpdateMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAudioRoutesDidUpdateMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAvailableServicesDidUpdateMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAvailableServicesDidUpdateMessage._services
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSAvailableServicesDidUpdateMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSBeginDiscoveryMessage._discoveryTypes
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSBeginDiscoveryMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSBeginDiscoveryMessage._hasPairedNetworkNames
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSBeginDiscoveryMessage._pairedNetworkNames
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSBeginPairingMessage._appName
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSBeginPairingMessage._deviceModel
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSBeginPairingMessage._deviceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSBeginPairingMessage._passcode
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSBeginPairingResponseMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSBeginPairingResponseMessage._responseCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSBeginPairingResponseMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSConnectToServiceMessage._pairingGUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSConnectToServiceMessage._service
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSConnectToServiceResponseMessage._controlInterface
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSConnectToServiceResponseMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSConnectToServiceResponseMessage._responseCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSConnectToServiceResponseMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSControlInterfaceMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSControlInterfaceMessage._supportsDirectionalControl
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSControlInterfaceMessage._supportsSpeakerSelection
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSControlInterfaceMessage._supportsVolumeControl
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNavigationCommandMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNavigationCommandMessage._navigationCommand
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNavigationCommandMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingArtworkAvailableMessage._artworkIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingArtworkAvailableMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingArtworkAvailableMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingArtworkRequestMessage._artworkIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingArtworkRequestMessage._compressionQuality
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingArtworkRequestMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingArtworkRequestMessage._height
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingArtworkRequestMessage._width
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoDidUpdateMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoDidUpdateMessage._nowPlayingInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoDidUpdateMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._albumName
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._artistName
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._canSkipNext
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._canSkipPrevious
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._canWishlist
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._databaseID
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._hasChapterData
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._itemID
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._likeable
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._likedState
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._mediaKind
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._playbackState
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._revisionNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._scrubbableState
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._timeRemaining
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._totalDuration
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSNowPlayingInfoMessage._trackName
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSPairingSessionDidPairMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSPairingSessionDidPairMessage._pairingGUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSPairingSessionDidPairMessage._serviceNetworkName
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSPairingSessionDidPairMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSPickAudioRouteMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSPickAudioRouteMessage._macAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSPickAudioRouteMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSPlaybackCommandMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSPlaybackCommandMessage._playbackCommand
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSPlaybackCommandMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSResponseCodeMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSResponseCodeMessage._responseCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSeekToPlaybackTimeMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSeekToPlaybackTimeMessage._playbackTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSeekToPlaybackTimeMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSServiceMessage._displayName
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSServiceMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSServiceMessage._homeSharingGroupKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSServiceMessage._hostName
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSServiceMessage._networkName
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSServiceMessage._port
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSServiceMessage._serviceDiscoverySource
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSServiceMessage._serviceLegacyFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSServiceMessage._serviceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSessionMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSessionMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSetLikeStateMessage._databaseID
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSetLikeStateMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSetLikeStateMessage._itemID
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSetLikeStateMessage._likeState
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSetLikeStateMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSetVolumeMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSetVolumeMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSSetVolumeMessage._volume
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSTouchMessage._direction
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSTouchMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSTouchMessage._repeatCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSTouchMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSUpdatePairedNetworNamesMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSUpdatePairedNetworNamesMessage._pairedNetworkNames
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSUpdatePairedNetworNamesMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSVolumeDidUpdateMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSVolumeDidUpdateMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSVolumeDidUpdateMessage._volume
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSWifiAvailabilityDidChangeMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSWifiAvailabilityDidChangeMessage._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TVRMSWifiAvailabilityDidChangeMessage._wifiAvailable
|| __DATA_CONST.__const _TVRCAirplayIDKey
|| __DATA_CONST.__const _TVRCButtonApplicationBundleIDKey
|| __DATA_CONST.__const _TVRCButtonSkipIntervalKey
|| __DATA_CONST.__const _TVRCConnectionInvalidatedNotification
|| __DATA_CONST.__const _TVRCDeviceModelTypeAirplaySetTopBox
|| __DATA_CONST.__const _TVRCDeviceModelTypeAirplayStick
|| __DATA_CONST.__const _TVRCDeviceModelTypeAirplayTelevision
|| __DATA_CONST.__const _TVRCDeviceNameKey
|| __DATA_CONST.__const _TVRCErrorDomain
|| __DATA_CONST.__const _TVRCErrorMediaRemotePairingLockoutDelayKey
|| __DATA_CONST.__const _TVRCFetchAttentionState
|| __DATA_CONST.__const _TVRCFetchLaunchableApplicationsEvent
|| __DATA_CONST.__const _TVRCFetchUserAccountsEvent
|| __DATA_CONST.__const _TVRCMatchPointServiceAddedNotification
|| __DATA_CONST.__const _TVRCMatchPointServiceNameChangedNotification
|| __DATA_CONST.__const _TVRCMatchPointServiceRemovedNotification
|| __DATA_CONST.__const _TVRCMediaRemoteIDKey
|| __DATA_CONST.__const _TVRCReduceLoundSoundsEnabled
|| __DATA_CONST.__const _TVRCSwitchAccountID
|| __DATA_CONST.__const _TVRCSwitchUserAccountEvent
|| __DATA_CONST.__const _TVRCSystemAppearanceLight
|| __DATA_CONST.__const _TVRCSystemStatus
|| __DATA_CONST.__const _TVRCToggleReduceLoudSounds
|| __DATA_CONST.__const _TVRCToggleSystemAppearance
|| __DATA_CONST.__const _TVRMSIDSClientAvailableServicesDidUpdateNotification
|| __DATA_CONST.__const _TVRMSIDSClientAvailableServicesNotificationKey
|| __DATA_CONST.__const _TVRMSIDSClientCompanionAvailabilityDidChangeNotification
|| __DATA_CONST.__const _TVRMSIDSClientControlInterfaceNotificationKey
|| __DATA_CONST.__const _TVRMSIDSClientDidPairWithServiceNotification
|| __DATA_CONST.__const _TVRMSIDSClientLoginTokenNotificationKey
|| __DATA_CONST.__const _TVRMSIDSClientNowPlayingArtworkDidBecomeAvailableNotification
|| __DATA_CONST.__const _TVRMSIDSClientNowPlayingArtworkIdentifierKey
|| __DATA_CONST.__const _TVRMSIDSClientNowPlayingAudioRoutesDidUpdateNotification
|| __DATA_CONST.__const _TVRMSIDSClientNowPlayingAudioRoutesNotificationKey
|| __DATA_CONST.__const _TVRMSIDSClientNowPlayingInfoDidUpdateNotification
|| __DATA_CONST.__const _TVRMSIDSClientNowPlayingInfoNotificationKey
|| __DATA_CONST.__const _TVRMSIDSClientNowPlayingVolumeDidUpdateNotification
|| __DATA_CONST.__const _TVRMSIDSClientNowPlayingVolumeNotificationKey
|| __DATA_CONST.__const _TVRMSIDSClientPairingDidFailNotification
|| __DATA_CONST.__const _TVRMSIDSClientPairingGUIDNotificationKey
|| __DATA_CONST.__const _TVRMSIDSClientResponseCodeNotificationKey
|| __DATA_CONST.__const _TVRMSIDSClientServiceNetworkNameNotificationKey
|| __DATA_CONST.__const _TVRMSIDSClientServiceNotificationKey
|| __DATA_CONST.__const _TVRMSIDSClientSessionDidEndNotification
|| __DATA_CONST.__const _TVRMSIDSClientSessionIdentifierNotificationKey
|| __DATA_CONST.__const _TVRMSIDSClientWifiAvailabilityDidChangeNotification
|| __DATA_CONST.__const _TVRMSIDSClientWifiAvailabilityNotificationKey
|| __DATA_CONST.__const _TVRXManagedConfigManagerTVRemoteAllowedTVAdded
|| __DATA_CONST.__const __TVRCButtonLongPressBeginActionKey
|| __DATA_CONST.__const __TVRCButtonLongPressEndActionKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVRXDeviceLocator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVRXDeviceQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVRXManagedConfigManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVRXDeviceLocator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVRXDeviceQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVRXManagedConfigManager
|| __TEXT.__const _TVRCRSSIThreshold
|| __TEXT.__const _TVRemoteCoreVersionNumber
|| __TEXT.__const _TVRemoteCoreVersionString
|| __TEXT.__text _NSStringFromRMSMessageType
|| __TEXT.__text _NSStringFromRMSResponseCode
|| __TEXT.__text _TVRCButtonTypeDescription
|| __TEXT.__text _TVRCDeviceConnectionTypeDescription
|| __TEXT.__text _TVRCMakeError
|| __TEXT.__text _TVRCTouchPhaseDescription
|| __TEXT.__text _TVRMSAddToWishlistMessageReadFrom
|| __TEXT.__text _TVRMSAudioRouteMessageReadFrom
|| __TEXT.__text _TVRMSAudioRoutesDidUpdateMessageReadFrom
|| __TEXT.__text _TVRMSAvailableServicesDidUpdateMessageReadFrom
|| __TEXT.__text _TVRMSBeginDiscoveryMessageReadFrom
|| __TEXT.__text _TVRMSBeginPairingMessageReadFrom
|| __TEXT.__text _TVRMSBeginPairingResponseMessageReadFrom
|| __TEXT.__text _TVRMSConnectToServiceMessageReadFrom
|| __TEXT.__text _TVRMSConnectToServiceResponseMessageReadFrom
|| __TEXT.__text _TVRMSControlInterfaceMessageReadFrom
|| __TEXT.__text _TVRMSLogEx
|| __TEXT.__text _TVRMSNavigationCommandMessageReadFrom
|| __TEXT.__text _TVRMSNowPlayingArtworkAvailableMessageReadFrom
|| __TEXT.__text _TVRMSNowPlayingArtworkRequestMessageReadFrom
|| __TEXT.__text _TVRMSNowPlayingInfoDidUpdateMessageReadFrom
|| __TEXT.__text _TVRMSNowPlayingInfoMessageReadFrom
|| __TEXT.__text _TVRMSPairingSessionDidPairMessageReadFrom
|| __TEXT.__text _TVRMSPickAudioRouteMessageReadFrom
|| __TEXT.__text _TVRMSPlaybackCommandMessageReadFrom
|| __TEXT.__text _TVRMSResponseCodeMessageReadFrom
|| __TEXT.__text _TVRMSSeekToPlaybackTimeMessageReadFrom
|| __TEXT.__text _TVRMSServiceMessageReadFrom
|| __TEXT.__text _TVRMSSessionMessageReadFrom
|| __TEXT.__text _TVRMSSetLikeStateMessageReadFrom
|| __TEXT.__text _TVRMSSetVolumeMessageReadFrom
|| __TEXT.__text _TVRMSTouchMessageReadFrom
|| __TEXT.__text _TVRMSUpdatePairedNetworNamesMessageReadFrom
|| __TEXT.__text _TVRMSVolumeDidUpdateMessageReadFrom
|| __TEXT.__text _TVRMSWifiAvailabilityDidChangeMessageReadFrom
|| __TEXT.__text __TVRCAddStateHandlerWithName
|| __TEXT.__text __TVRCGeneralLog
|| __TEXT.__text __TVRCHomeKitLog
|| __TEXT.__text __TVRCMDMLog
|| __TEXT.__text __TVRCMediaEventsManagerLog
|| __TEXT.__text __TVRCMediaRemoteEndpointManagerLog
|| __TEXT.__text __TVRCRMSLog
|| __TEXT.__text __TVRCRapportLog
|| __TEXT.__text __TVRCRemoteTextInputLog
|| __TEXT.__text _generateRandomPasscode
__ AVFAudio: _AVVoiceActivationModeKey
__ AVFAudio: _OBJC_CLASS_$_AVAudioFormat
__ AVFAudio: _OBJC_CLASS_$_AVVoiceController
__ AppSupport: _CPLoggingCopyLogDirectory
__ AppSupport: _CPLoggingMaxLogFileLevel
__ AppSupport: _CPLoggingSetCreateLogFormatBlock
__ AppSupport: _CPLoggingSetLogDirectory
__ AppSupport: _CPLoggingSetLogName
__ AppSupport: _CPLoggingSetMaxConsoleLevel
__ AppSupport: _CPLoggingSetMaxLogFileLevel
__ AppSupport: __CPLogLine
__ AssistantServices: _OBJC_CLASS_$_AFSettingsConnection
__ BaseBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ CFNetwork: _CFHTTPMessageGetResponseStatusCode
__ CFNetwork: _CFHTTPMessageSetHeaderFieldValue
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSNetService
__ CFNetwork: _OBJC_CLASS_$_NSNetServiceBrowser
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: __CFHTTPServerConnectionInvalidate
__ CFNetwork: __CFHTTPServerConnectionSetClient
__ CFNetwork: __CFHTTPServerConnectionSetDispatchQueue
__ CFNetwork: __CFHTTPServerCopyProperty
__ CFNetwork: __CFHTTPServerCreateService
__ CFNetwork: __CFHTTPServerInvalidate
__ CFNetwork: __CFHTTPServerRequestCopyProperty
__ CFNetwork: __CFHTTPServerRequestCreateResponseMessage
__ CFNetwork: __CFHTTPServerResponseCopyProperty
__ CFNetwork: __CFHTTPServerResponseCreateWithData
__ CFNetwork: __CFHTTPServerResponseEnqueue
__ CFNetwork: __CFHTTPServerSetDispatchQueue
__ CFNetwork: __kCFHTTPServerRequestHTTPVersion
__ CFNetwork: __kCFHTTPServerRequestMethod
__ CFNetwork: __kCFHTTPServerRequestURL
__ CFNetwork: __kCFHTTPServerResponseMessage
__ CFNetwork: __kCFHTTPServerServicePort
__ CFNetwork: _kCFHTTPVersion1_1
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterCreateStringWithDate
__ CoreFoundation: _CFDateFormatterSetFormat
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFLocaleCopyCurrent
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFStreamCreatePairWithSocketToHost
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextTranslateCTM
__ CoreUtils: _TextToHardwareAddress
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ HomeKit: _HMAccessoryCategoryTypeTelevisionSetTopBox
__ HomeKit: _HMAccessoryCategoryTypeTelevisionStreamingStick
__ HomeKit: _HMCharacteristicTypeActive
__ HomeKit: _HMCharacteristicTypeActiveIdentifier
__ HomeKit: _HMCharacteristicTypeRemoteKey
__ HomeKit: _HMCharacteristicTypeVolumeControlType
__ HomeKit: _HMCharacteristicTypeVolumeSelector
__ HomeKit: _HMErrorDomain
__ HomeKit: _HMServiceTypeSpeaker
__ HomeKit: _HMServiceTypeTelevision
__ HomeKit: _OBJC_CLASS_$_HMCharacteristicBatchRequest
__ HomeKit: _OBJC_CLASS_$_HMCharacteristicReadRequest
__ HomeKit: _OBJC_CLASS_$_HMCharacteristicWriteRequest
__ HomeKit: _OBJC_CLASS_$_HMHomeManager
__ HomeKit: _OBJC_CLASS_$_HMMutableHomeManagerConfiguration
__ HomeSharing: _HSGroupIDDidChangeNotification
__ HomeSharing: _OBJC_CLASS_$_HSAccountStore
__ IDS: _IDSDefaultPairedDevice
__ IDS: _IDSMaxMessageTimeout
__ IDS: _IDSSendMessageOptionBypassDuetKey
__ IDS: _IDSSendMessageOptionEnforceRemoteTimeoutsKey
__ IDS: _IDSSendMessageOptionExpectsPeerResponseKey
__ IDS: _IDSSendMessageOptionFireAndForgetKey
__ IDS: _IDSSendMessageOptionLocalDeliveryKey
__ IDS: _IDSSendMessageOptionPeerResponseIdentifierKey
__ IDS: _IDSSendMessageOptionQueueOneIdentifierKey
__ IDS: _IDSSendMessageOptionTimeoutKey
__ IDS: _OBJC_CLASS_$_IDSProtobuf
__ IDS: _OBJC_CLASS_$_IDSService
__ IOKit: _IOPMAssertionCreateWithProperties
__ IOKit: _IOPMAssertionRelease
__ IOKit: _IOPMAssertionSetProperty
__ ManagedConfiguration: _MCFeatureTVRemoteAllowedTVDeviceNames
__ ManagedConfiguration: _MCFeatureTVRemoteAllowedTVs
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaRemote: _MRAVEndpointGetActiveSystemEndpointUID
__ MediaRemote: _MRAVEndpointUpdateActiveSystemEndpointForOutputDeviceUIDWithReason
__ MediaRemote: _MRMediaRemoteGetNowPlayingApplicationPlaybackState
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteFloatField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ Rapport: _OBJC_CLASS_$_RPCompanionLinkClient
__ Rapport: _OBJC_CLASS_$_RPHIDSession
__ Rapport: _OBJC_CLASS_$_RPHIDTouchEvent
__ Rapport: _OBJC_CLASS_$_RPHIDTouchSession
__ Rapport: _OBJC_CLASS_$_RPMediaControlSession
__ Rapport: _OBJC_CLASS_$_RPSiriSession
__ Rapport: _OBJC_CLASS_$_RPTextInputSession
__ Rapport: _RPDestinationIdentifierDirectPeer
__ Rapport: _RPOptionInterest
__ RemoteTextInput: _OBJC_CLASS_$_RTIDataPayload
__ Security: _SecCertificateCreateWithData
__ Security: _SecKeyEncrypt
__ Security: _SecPolicyCreateBasicX509
__ Security: _SecTrustCopyPublicKey
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustEvaluate
__ SpringBoardServices: _SBSGetScreenLockStatus
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilityScheduleWithRunLoop
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilityUnscheduleFromRunLoop
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImageJPEGRepresentation
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Init
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___exp10f
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_initiate
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _srandom
__ libSystem.B.dylib: _time
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
TVRCFeatures : NSObject
  // class methods
  +[TVRCFeatures rapportEnabled]
  +[TVRCFeatures legacyDevicesDisabled]
  +[TVRCFeatures isWakeToRemoteOnLockScreenDisabled]
  +[TVRCFeatures isPersistOnLockScreenEnabled]
  +[TVRCFeatures updogEnabled]
  +[TVRCFeatures tvPushToTalkEnabled]
  +[TVRCFeatures ghostdogEnabled]


TVRMSDiscoverySessionProxy : TVRMSSessionProxy <TVRMSDiscoverySession>
 @property  <TVRMSDiscoverySessionDelegate> *delegate
 @property  long long discoveryTypes
 @property  NSArray *availableServices
 @property  BOOL networkAvailable
 @property  NSArray *pairedNetworkNames
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRMSDiscoverySessionProxy isNetworkAvailable]
  -[TVRMSDiscoverySessionProxy setDelegate:]
  -[TVRMSDiscoverySessionProxy delegate]
  -[TVRMSDiscoverySessionProxy dealloc]
  -[TVRMSDiscoverySessionProxy .cxx_destruct]
  -[TVRMSDiscoverySessionProxy beginDiscovery]
  -[TVRMSDiscoverySessionProxy init]
  -[TVRMSDiscoverySessionProxy endDiscovery]
  -[TVRMSDiscoverySessionProxy availableServices]
  -[TVRMSDiscoverySessionProxy _availableServicesDidUpdateNotification:]
  -[TVRMSDiscoverySessionProxy _handleSessionDidEndNotification:]
  -[TVRMSDiscoverySessionProxy _companionAvailabilityDidChange:]
  -[TVRMSDiscoverySessionProxy _wifiAvailabilityDidChange:]
  -[TVRMSDiscoverySessionProxy discoveryTypes]
  -[TVRMSDiscoverySessionProxy setDiscoveryTypes:]
  -[TVRMSDiscoverySessionProxy pairedNetworkNames]
  -[TVRMSDiscoverySessionProxy setPairedNetworkNames:]
  -[TVRMSDiscoverySessionProxy heartbeatDidFail]
  -[TVRMSDiscoverySessionProxy _updateNetworkAvailability]


TVRCSessionData : NSObject
 @property  NSDate *sessionStartTime
 @property  BOOL usedRTI
 @property  BOOL usedSiri
 @property  BOOL requiredPairing
 @property  BOOL directionalControlsEnabled
 @property  NSString *launchContextDesc

  // instance methods
  -[TVRCSessionData sessionStartTime]
  -[TVRCSessionData setSessionStartTime:]
  -[TVRCSessionData .cxx_destruct]
  -[TVRCSessionData usedRTI]
  -[TVRCSessionData setUsedRTI:]
  -[TVRCSessionData usedSiri]
  -[TVRCSessionData setUsedSiri:]
  -[TVRCSessionData requiredPairing]
  -[TVRCSessionData setRequiredPairing:]
  -[TVRCSessionData directionalControlsEnabled]
  -[TVRCSessionData setDirectionalControlsEnabled:]
  -[TVRCSessionData launchContextDesc]
  -[TVRCSessionData setLaunchContextDesc:]


TVRCAnalytics : NSObject
  // class methods
  +[TVRCAnalytics sharedInstance]

  // instance methods
  -[TVRCAnalytics logPresentationFrom:]
  -[TVRCAnalytics _presentationSourceEventDictionaryFor:]
  -[TVRCAnalytics logConnectingSpinnerShown:]
  -[TVRCAnalytics logSearchingSpinnerShown]
  -[TVRCAnalytics _spinnerShownDictionaryFor:]
  -[TVRCAnalytics logConnectionStatus:type:reason:]
  -[TVRCAnalytics _connectionDictionaryForType:status:reason:]
  -[TVRCAnalytics logShortcutActionRunWithType:]
  -[TVRCAnalytics logSessionStatistics:]


TVRCLogBuilder : NSObject
 @property  NSString *context
 @property  NSString *name
 @property  NSObject<OS_os_log> *logger

  // instance methods
  -[TVRCLogBuilder logger]
  -[TVRCLogBuilder .cxx_destruct]
  -[TVRCLogBuilder name]
  -[TVRCLogBuilder context]
  -[TVRCLogBuilder initWithContext:name:]
  -[TVRCLogBuilder jsonForDictionary:]
  -[TVRCLogBuilder jsonForArray:]
  -[TVRCLogBuilder jsonForError:]
  -[TVRCLogBuilder _dataSetFromArray:]
  -[TVRCLogBuilder _templateForDataSetData:]


TVRMSAddToWishlistMessage : PBCodable <NSCopying>
 @property  BOOL hasItemID
 @property  unsigned long itemID
 @property  BOOL hasDatabaseID
 @property  unsigned long databaseID
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier

  // instance methods
  -[TVRMSAddToWishlistMessage setSessionIdentifier:]
  -[TVRMSAddToWishlistMessage sessionIdentifier]
  -[TVRMSAddToWishlistMessage databaseID]
  -[TVRMSAddToWishlistMessage setDatabaseID:]
  -[TVRMSAddToWishlistMessage copyTo:]
  -[TVRMSAddToWishlistMessage setItemID:]
  -[TVRMSAddToWishlistMessage mergeFrom:]
  -[TVRMSAddToWishlistMessage itemID]
  -[TVRMSAddToWishlistMessage dictionaryRepresentation]
  -[TVRMSAddToWishlistMessage copyWithZone:]
  -[TVRMSAddToWishlistMessage readFrom:]
  -[TVRMSAddToWishlistMessage writeTo:]
  -[TVRMSAddToWishlistMessage isEqual:]
  -[TVRMSAddToWishlistMessage hasItemID]
  -[TVRMSAddToWishlistMessage hasSessionIdentifier]
  -[TVRMSAddToWishlistMessage setHasItemID:]
  -[TVRMSAddToWishlistMessage setHasDatabaseID:]
  -[TVRMSAddToWishlistMessage hasDatabaseID]
  -[TVRMSAddToWishlistMessage setHasSessionIdentifier:]


_TVRCRMSNowPlayingState : NSObject
 @property  double playbackRate
 @property  double duration
 @property  NSDate *lastReportedTimestamp
 @property  double lastReportedPlaybackPosition

  // class methods
  +[_TVRCRMSNowPlayingState nowPlayingStateFromInfo:]

  // instance methods
  -[_TVRCRMSNowPlayingState setDuration:]
  -[_TVRCRMSNowPlayingState setPlaybackRate:]
  -[_TVRCRMSNowPlayingState .cxx_destruct]
  -[_TVRCRMSNowPlayingState playbackRate]
  -[_TVRCRMSNowPlayingState duration]
  -[_TVRCRMSNowPlayingState lastReportedTimestamp]
  -[_TVRCRMSNowPlayingState setLastReportedTimestamp:]
  -[_TVRCRMSNowPlayingState lastReportedPlaybackPosition]
  -[_TVRCRMSNowPlayingState setLastReportedPlaybackPosition:]


_TVRCRMSDeviceWrapper : NSObject <TVRMSDAAPControlSessionDelegate, TVRMSPairingSessionDelegate, _TVRCRMSDeviceKeyboardImplDelegate>
 @property  BOOL connected
 @property  TVRMSService *device
 @property  TVRMSPairingSession *pairingSession
 @property  <TVRMSDAAPControlSession> *controlSession
 @property  TVRXKeyboardController *keyboardController
 @property  _TVRCRMSDeviceKeyboardImpl *keyboardImpl
 @property  NSMutableSet *mediaButtons
 @property  _TVRCRMSNowPlayingState *nowPlayingState
 @property  NSString *name
 @property  NSString *identifier
 @property  NSDictionary *alternateIdentifiers
 @property  NSString *model
 @property  BOOL authenticationAllowed
 @property  <_TVRCRMSDeviceWrapperDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_TVRCRMSDeviceWrapper wrapperWithDevice:]

  // instance methods
  -[_TVRCRMSDeviceWrapper disconnect]
  -[_TVRCRMSDeviceWrapper connect]
  -[_TVRCRMSDeviceWrapper isPaired]
  -[_TVRCRMSDeviceWrapper identifier]
  -[_TVRCRMSDeviceWrapper model]
  -[_TVRCRMSDeviceWrapper setConnected:]
  -[_TVRCRMSDeviceWrapper setDelegate:]
  -[_TVRCRMSDeviceWrapper connected]
  -[_TVRCRMSDeviceWrapper delegate]
  -[_TVRCRMSDeviceWrapper dealloc]
  -[_TVRCRMSDeviceWrapper .cxx_destruct]
  -[_TVRCRMSDeviceWrapper setDevice:]
  -[_TVRCRMSDeviceWrapper device]
  -[_TVRCRMSDeviceWrapper connectionType]
  -[_TVRCRMSDeviceWrapper keyboardController]
  -[_TVRCRMSDeviceWrapper name]
  -[_TVRCRMSDeviceWrapper initWithDevice:]
  -[_TVRCRMSDeviceWrapper disconnectWithError:]
  -[_TVRCRMSDeviceWrapper pairingSession]
  -[_TVRCRMSDeviceWrapper sendButtonEvent:]
  -[_TVRCRMSDeviceWrapper setPairingSession:]
  -[_TVRCRMSDeviceWrapper nowPlayingState]
  -[_TVRCRMSDeviceWrapper _seekToTime:]
  -[_TVRCRMSDeviceWrapper setNowPlayingState:]
  -[_TVRCRMSDeviceWrapper supportedButtons]
  -[_TVRCRMSDeviceWrapper _disconnectWithError:]
  -[_TVRCRMSDeviceWrapper _cancelPairing]
  -[_TVRCRMSDeviceWrapper controlSession:didUpdateNowPlayingInfo:]
  -[_TVRCRMSDeviceWrapper controlSession:artworkDataDidBecomeAvailable:identifier:]
  -[_TVRCRMSDeviceWrapper controlSession:didUpdateAudioRoutes:]
  -[_TVRCRMSDeviceWrapper controlSession:didUpdateVolume:]
  -[_TVRCRMSDeviceWrapper controlSession:keyboardEditingDidBegin:]
  -[_TVRCRMSDeviceWrapper controlSession:keyboardEditingDidEnd:]
  -[_TVRCRMSDeviceWrapper controlSession:didUpdateKeyboardEditingInfo:]
  -[_TVRCRMSDeviceWrapper controlSessionDidEnd:]
  -[_TVRCRMSDeviceWrapper pairingSession:didPairWithServiceNetworkName:pairingGUID:]
  -[_TVRCRMSDeviceWrapper pairingSessionDidFail:]
  -[_TVRCRMSDeviceWrapper pairingSession:didBeginPairingWithPasscode:]
  -[_TVRCRMSDeviceWrapper keyboardImpl:updatedText:]
  -[_TVRCRMSDeviceWrapper keyboardImplRequestsSendingReturnKey:]
  -[_TVRCRMSDeviceWrapper alternateIdentifiers]
  -[_TVRCRMSDeviceWrapper supportsTouchEvents]
  -[_TVRCRMSDeviceWrapper sendTouchEvent:]
  -[_TVRCRMSDeviceWrapper _initiatePairing]
  -[_TVRCRMSDeviceWrapper _connectWithPairingGUID:]
  -[_TVRCRMSDeviceWrapper _touchDirectionForButtonEvent:]
  -[_TVRCRMSDeviceWrapper _navigationCommandForButtonEvent:]
  -[_TVRCRMSDeviceWrapper _setupKeyboardController]
  -[_TVRCRMSDeviceWrapper _skipSeconds:]
  -[_TVRCRMSDeviceWrapper authenticationAllowed]
  -[_TVRCRMSDeviceWrapper setAuthenticationAllowed:]
  -[_TVRCRMSDeviceWrapper controlSession]
  -[_TVRCRMSDeviceWrapper setControlSession:]
  -[_TVRCRMSDeviceWrapper setKeyboardController:]
  -[_TVRCRMSDeviceWrapper keyboardImpl]
  -[_TVRCRMSDeviceWrapper setKeyboardImpl:]
  -[_TVRCRMSDeviceWrapper mediaButtons]
  -[_TVRCRMSDeviceWrapper setMediaButtons:]


TVRMSTouchMessage : PBCodable <NSCopying>
 @property  BOOL hasDirection
 @property  int direction
 @property  BOOL hasRepeatCount
 @property  unsigned int repeatCount
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier

  // instance methods
  -[TVRMSTouchMessage setSessionIdentifier:]
  -[TVRMSTouchMessage repeatCount]
  -[TVRMSTouchMessage sessionIdentifier]
  -[TVRMSTouchMessage setRepeatCount:]
  -[TVRMSTouchMessage setDirection:]
  -[TVRMSTouchMessage copyTo:]
  -[TVRMSTouchMessage mergeFrom:]
  -[TVRMSTouchMessage direction]
  -[TVRMSTouchMessage dictionaryRepresentation]
  -[TVRMSTouchMessage copyWithZone:]
  -[TVRMSTouchMessage readFrom:]
  -[TVRMSTouchMessage writeTo:]
  -[TVRMSTouchMessage isEqual:]
  -[TVRMSTouchMessage hasDirection]
  -[TVRMSTouchMessage hasSessionIdentifier]
  -[TVRMSTouchMessage setHasDirection:]
  -[TVRMSTouchMessage setHasSessionIdentifier:]
  -[TVRMSTouchMessage setHasRepeatCount:]
  -[TVRMSTouchMessage hasRepeatCount]


TVRCDeviceState : NSObject <NSSecureCoding>
 @property  long long connectionState
 @property  unsigned long pairingCapability
 @property  long long connectionType
 @property  BOOL supportsTouchEvents
 @property  BOOL paired
 @property  NSString *name
 @property  NSString *identifier
 @property  NSDictionary *alternateIdentifiers
 @property  NSString *model
 @property  NSSet *supportedButtons
 @property  TVRCKeyboardState *keyboardState
 @property  NSString *sourceVersion
 @property  long long disconnectReason
 @property  NSError *disconnectError

  // class methods
  +[TVRCDeviceState supportsSecureCoding]
  +[TVRCDeviceState deviceStateFromDevice:]
  +[TVRCDeviceState setOfStatesFromDevices:]

  // instance methods
  -[TVRCDeviceState keyboardState]
  -[TVRCDeviceState connectionState]
  -[TVRCDeviceState setModel:]
  -[TVRCDeviceState isPaired]
  -[TVRCDeviceState identifier]
  -[TVRCDeviceState setConnectionType:]
  -[TVRCDeviceState model]
  -[TVRCDeviceState encodeWithCoder:]
  -[TVRCDeviceState setConnectionState:]
  -[TVRCDeviceState .cxx_destruct]
  -[TVRCDeviceState sourceVersion]
  -[TVRCDeviceState connectionType]
  -[TVRCDeviceState setPaired:]
  -[TVRCDeviceState setIdentifier:]
  -[TVRCDeviceState setName:]
  -[TVRCDeviceState setKeyboardState:]
  -[TVRCDeviceState name]
  -[TVRCDeviceState initWithDevice:]
  -[TVRCDeviceState initWithCoder:]
  -[TVRCDeviceState setSourceVersion:]
  -[TVRCDeviceState disconnectReason]
  -[TVRCDeviceState setDisconnectReason:]
  -[TVRCDeviceState supportedButtons]
  -[TVRCDeviceState alternateIdentifiers]
  -[TVRCDeviceState supportsTouchEvents]
  -[TVRCDeviceState pairingCapability]
  -[TVRCDeviceState setPairingCapability:]
  -[TVRCDeviceState setSupportsTouchEvents:]
  -[TVRCDeviceState setAlternateIdentifiers:]
  -[TVRCDeviceState setSupportedButtons:]
  -[TVRCDeviceState disconnectError]
  -[TVRCDeviceState setDisconnectError:]


TVRMSService : NSObject
 @property  NSString *displayName
 @property  NSString *networkName
 @property  NSString *hostName
 @property  int port
 @property  long long serviceType
 @property  long long serviceDiscoverySource
 @property  long long serviceLegacyFlags
 @property  NSString *homeSharingGroupKey

  // class methods
  +[TVRMSService servicesFromProtobufs:]
  +[TVRMSService protobufsFromServices:]

  // instance methods
  -[TVRMSService networkName]
  -[TVRMSService port]
  -[TVRMSService setPort:]
  -[TVRMSService isLegacy]
  -[TVRMSService setServiceType:]
  -[TVRMSService hostName]
  -[TVRMSService setNetworkName:]
  -[TVRMSService .cxx_destruct]
  -[TVRMSService setDisplayName:]
  -[TVRMSService initWithProtobuf:]
  -[TVRMSService serviceType]
  -[TVRMSService displayName]
  -[TVRMSService initWithData:]
  -[TVRMSService protobuf]
  -[TVRMSService isEqual:]
  -[TVRMSService data]
  -[TVRMSService setHostName:]
  -[TVRMSService isEqualToService:]
  -[TVRMSService serviceDiscoverySource]
  -[TVRMSService setServiceDiscoverySource:]
  -[TVRMSService serviceLegacyFlags]
  -[TVRMSService setServiceLegacyFlags:]
  -[TVRMSService homeSharingGroupKey]
  -[TVRMSService setHomeSharingGroupKey:]


_TVRXSearchReference : NSObject
 @property  NSString *identifier
 @property  id completionBlock
 @property  NSTimer *expirationTimer

  // instance methods
  -[_TVRXSearchReference setCompletionBlock:]
  -[_TVRXSearchReference identifier]
  -[_TVRXSearchReference completionBlock]
  -[_TVRXSearchReference expirationTimer]
  -[_TVRXSearchReference .cxx_destruct]
  -[_TVRXSearchReference setIdentifier:]
  -[_TVRXSearchReference setExpirationTimer:]


TVRXDeviceLocator : NSObject <TVRXDeviceQueryDelegate>
 @property  TVRXDeviceQuery *query
 @property  NSMutableDictionary *searches
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRXDeviceLocator query]
  -[TVRXDeviceLocator setQuery:]
  -[TVRXDeviceLocator .cxx_destruct]
  -[TVRXDeviceLocator init]
  -[TVRXDeviceLocator _timerExpired:]
  -[TVRXDeviceLocator searches]
  -[TVRXDeviceLocator setSearches:]
  -[TVRXDeviceLocator deviceQueryDidUpdateDevices:]
  -[TVRXDeviceLocator findDeviceWithIdentifier:timeout:completion:]
  -[TVRXDeviceLocator cancelSearchForDeviceWithIdentifier:]


_TVRCRMSDeviceImpl : NSObject <_TVRCRMSDeviceWrapperDelegate, _TVRCDeviceImpl>
 @property  _TVRCRMSDeviceWrapper *deviceWrapper
 @property  TVRXDevice *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_TVRCRMSDeviceImpl implWithDevice:]

  // instance methods
  -[_TVRCRMSDeviceImpl disconnect]
  -[_TVRCRMSDeviceImpl connect]
  -[_TVRCRMSDeviceImpl isPaired]
  -[_TVRCRMSDeviceImpl identifier]
  -[_TVRCRMSDeviceImpl model]
  -[_TVRCRMSDeviceImpl .cxx_destruct]
  -[_TVRCRMSDeviceImpl setDevice:]
  -[_TVRCRMSDeviceImpl device]
  -[_TVRCRMSDeviceImpl connectionType]
  -[_TVRCRMSDeviceImpl keyboardController]
  -[_TVRCRMSDeviceImpl name]
  -[_TVRCRMSDeviceImpl initWithDevice:]
  -[_TVRCRMSDeviceImpl sendButtonEvent:]
  -[_TVRCRMSDeviceImpl sendGameControllerEvent:]
  -[_TVRCRMSDeviceImpl supportedButtons]
  -[_TVRCRMSDeviceImpl alternateIdentifiers]
  -[_TVRCRMSDeviceImpl supportsTouchEvents]
  -[_TVRCRMSDeviceImpl sendTouchEvent:]
  -[_TVRCRMSDeviceImpl pairingCapability]
  -[_TVRCRMSDeviceImpl connectedToDevice:]
  -[_TVRCRMSDeviceImpl disconnectedFromDevice:error:]
  -[_TVRCRMSDeviceImpl deviceUpdatedSupportedButtons:]
  -[_TVRCRMSDeviceImpl deviceEncounteredAuthenticationChallenge:]
  -[_TVRCRMSDeviceImpl voiceRecorder]
  -[_TVRCRMSDeviceImpl setAuthenticationSupported:]
  -[_TVRCRMSDeviceImpl deviceWrapper]
  -[_TVRCRMSDeviceImpl setDeviceWrapper:]


TVRMSPairingServiceProvider : TVRMSBonjourServiceProvider
 @property  NSArray *pairedNetworkNames

  // instance methods
  -[TVRMSPairingServiceProvider searchType]
  -[TVRMSPairingServiceProvider netServiceBrowser:didFindService:moreComing:]
  -[TVRMSPairingServiceProvider dealloc]
  -[TVRMSPairingServiceProvider .cxx_destruct]
  -[TVRMSPairingServiceProvider init]
  -[TVRMSPairingServiceProvider pairedNetworkNames]
  -[TVRMSPairingServiceProvider setPairedNetworkNames:]
  -[TVRMSPairingServiceProvider serviceDiscoverySource]
  -[TVRMSPairingServiceProvider serviceLegacyFlagsFromTXTDictionary:]


TVRMSConnectToServiceMessage : PBCodable <NSCopying>
 @property  BOOL hasService
 @property  TVRMSServiceMessage *service
 @property  BOOL hasPairingGUID
 @property  NSString *pairingGUID

  // instance methods
  -[TVRMSConnectToServiceMessage copyTo:]
  -[TVRMSConnectToServiceMessage setService:]
  -[TVRMSConnectToServiceMessage .cxx_destruct]
  -[TVRMSConnectToServiceMessage service]
  -[TVRMSConnectToServiceMessage mergeFrom:]
  -[TVRMSConnectToServiceMessage dictionaryRepresentation]
  -[TVRMSConnectToServiceMessage copyWithZone:]
  -[TVRMSConnectToServiceMessage readFrom:]
  -[TVRMSConnectToServiceMessage writeTo:]
  -[TVRMSConnectToServiceMessage isEqual:]
  -[TVRMSConnectToServiceMessage hasService]
  -[TVRMSConnectToServiceMessage hasPairingGUID]
  -[TVRMSConnectToServiceMessage pairingGUID]
  -[TVRMSConnectToServiceMessage setPairingGUID:]


TVRCButton : NSObject <NSSecureCoding>
 @property  long long buttonType
 @property  BOOL enabled
 @property  BOOL hasTapAction
 @property  NSDictionary *properties

  // class methods
  +[TVRCButton supportsSecureCoding]
  +[TVRCButton _isMediaButtonEvent:]

  // instance methods
  -[TVRCButton properties]
  -[TVRCButton buttonType]
  -[TVRCButton encodeWithCoder:]
  -[TVRCButton _setEnabled:]
  -[TVRCButton .cxx_destruct]
  -[TVRCButton isEqual:]
  -[TVRCButton isEnabled]
  -[TVRCButton initWithCoder:]
  -[TVRCButton hasTapAction]
  -[TVRCButton _initWithButtonType:]
  -[TVRCButton _initWithButtonType:hasTapAction:properties:]
  -[TVRCButton isEqualToButton:]


TVRCButtonEvent : NSObject <NSSecureCoding>
 @property  NSDate *timestamp
 @property  TVRCButton *button
 @property  long long eventType

  // class methods
  +[TVRCButtonEvent supportsSecureCoding]
  +[TVRCButtonEvent buttonEventForButton:eventType:]

  // instance methods
  -[TVRCButtonEvent button]
  -[TVRCButtonEvent encodeWithCoder:]
  -[TVRCButtonEvent .cxx_destruct]
  -[TVRCButtonEvent eventType]
  -[TVRCButtonEvent timestamp]
  -[TVRCButtonEvent _init]
  -[TVRCButtonEvent initWithCoder:]


TVRMSPickAudioRouteMessage : PBCodable <NSCopying>
 @property  BOOL hasMacAddress
 @property  long long macAddress
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier

  // instance methods
  -[TVRMSPickAudioRouteMessage setSessionIdentifier:]
  -[TVRMSPickAudioRouteMessage macAddress]
  -[TVRMSPickAudioRouteMessage sessionIdentifier]
  -[TVRMSPickAudioRouteMessage copyTo:]
  -[TVRMSPickAudioRouteMessage mergeFrom:]
  -[TVRMSPickAudioRouteMessage setMacAddress:]
  -[TVRMSPickAudioRouteMessage dictionaryRepresentation]
  -[TVRMSPickAudioRouteMessage hasMacAddress]
  -[TVRMSPickAudioRouteMessage copyWithZone:]
  -[TVRMSPickAudioRouteMessage readFrom:]
  -[TVRMSPickAudioRouteMessage writeTo:]
  -[TVRMSPickAudioRouteMessage isEqual:]
  -[TVRMSPickAudioRouteMessage hasSessionIdentifier]
  -[TVRMSPickAudioRouteMessage setHasSessionIdentifier:]
  -[TVRMSPickAudioRouteMessage setHasMacAddress:]


TVRMSVolumeDidUpdateMessage : PBCodable <NSCopying>
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier
 @property  BOOL hasVolume
 @property  float volume

  // instance methods
  -[TVRMSVolumeDidUpdateMessage setSessionIdentifier:]
  -[TVRMSVolumeDidUpdateMessage sessionIdentifier]
  -[TVRMSVolumeDidUpdateMessage copyTo:]
  -[TVRMSVolumeDidUpdateMessage hasVolume]
  -[TVRMSVolumeDidUpdateMessage setVolume:]
  -[TVRMSVolumeDidUpdateMessage mergeFrom:]
  -[TVRMSVolumeDidUpdateMessage volume]
  -[TVRMSVolumeDidUpdateMessage dictionaryRepresentation]
  -[TVRMSVolumeDidUpdateMessage copyWithZone:]
  -[TVRMSVolumeDidUpdateMessage readFrom:]
  -[TVRMSVolumeDidUpdateMessage setHasVolume:]
  -[TVRMSVolumeDidUpdateMessage writeTo:]
  -[TVRMSVolumeDidUpdateMessage isEqual:]
  -[TVRMSVolumeDidUpdateMessage hasSessionIdentifier]
  -[TVRMSVolumeDidUpdateMessage setHasSessionIdentifier:]


TVRXVoiceRecorder : NSObject <AVVoiceControllerRecordDelegate>
 @property  <TVRXVoiceRecorderDelegate> *delegate
 @property  BOOL recordsAutomatically
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRXVoiceRecorder setDelegate:]
  -[TVRXVoiceRecorder delegate]
  -[TVRXVoiceRecorder dealloc]
  -[TVRXVoiceRecorder .cxx_destruct]
  -[TVRXVoiceRecorder stop]
  -[TVRXVoiceRecorder start]
  -[TVRXVoiceRecorder _init]
  -[TVRXVoiceRecorder voiceControllerDidStopRecording:forReason:]
  -[TVRXVoiceRecorder voiceControllerEncoderErrorDidOccur:error:]
  -[TVRXVoiceRecorder voiceControllerRecordBufferAvailable:buffer:]
  -[TVRXVoiceRecorder audioFormatSettings]
  -[TVRXVoiceRecorder _processAudioBufferOnMainQueue:]
  -[TVRXVoiceRecorder recordsAutomatically]
  -[TVRXVoiceRecorder setRecordsAutomatically:]


TVRCKeyboardState : NSObject <NSSecureCoding>
 @property  BOOL isEditing
 @property  TVRCKeyboardAttributes *attributes
 @property  NSString *text

  // class methods
  +[TVRCKeyboardState supportsSecureCoding]
  +[TVRCKeyboardState keyboardStateFromDevice:]

  // instance methods
  -[TVRCKeyboardState text]
  -[TVRCKeyboardState setAttributes:]
  -[TVRCKeyboardState attributes]
  -[TVRCKeyboardState encodeWithCoder:]
  -[TVRCKeyboardState .cxx_destruct]
  -[TVRCKeyboardState isEditing]
  -[TVRCKeyboardState initWithDevice:]
  -[TVRCKeyboardState setText:]
  -[TVRCKeyboardState initWithCoder:]
  -[TVRCKeyboardState setIsEditing:]


_TVRCRMSDeviceKeyboardImpl : NSObject <TVRXKeyboardImpl>
 @property  BOOL editing
 @property  TVRMSKeyboardInfo *keyboardInfo
 @property  TVRXKeyboardController *keyboardController
 @property  <_TVRCRMSDeviceKeyboardImplDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRCRMSDeviceKeyboardImpl text]
  -[_TVRCRMSDeviceKeyboardImpl attributes]
  -[_TVRCRMSDeviceKeyboardImpl setDelegate:]
  -[_TVRCRMSDeviceKeyboardImpl setEditing:]
  -[_TVRCRMSDeviceKeyboardImpl delegate]
  -[_TVRCRMSDeviceKeyboardImpl .cxx_destruct]
  -[_TVRCRMSDeviceKeyboardImpl keyboardController]
  -[_TVRCRMSDeviceKeyboardImpl isEditing]
  -[_TVRCRMSDeviceKeyboardImpl editing]
  -[_TVRCRMSDeviceKeyboardImpl setText:]
  -[_TVRCRMSDeviceKeyboardImpl setKeyboardController:]
  -[_TVRCRMSDeviceKeyboardImpl sendReturnKey]
  -[_TVRCRMSDeviceKeyboardImpl keyboardSessionBegan:]
  -[_TVRCRMSDeviceKeyboardImpl keyboardSessionEnded:]
  -[_TVRCRMSDeviceKeyboardImpl keyboardSessionUpdatedEditingInfo:]
  -[_TVRCRMSDeviceKeyboardImpl _attributesForKeyboardInfo:]
  -[_TVRCRMSDeviceKeyboardImpl _keyboardTypeForInfo:]
  -[_TVRCRMSDeviceKeyboardImpl keyboardInfo]
  -[_TVRCRMSDeviceKeyboardImpl setKeyboardInfo:]


TVRMSAudioRouteMessage : PBCodable <NSCopying>
 @property  BOOL hasDisplayName
 @property  NSString *displayName
 @property  BOOL hasMacAddress
 @property  long long macAddress
 @property  BOOL hasSupportsVideo
 @property  BOOL supportsVideo
 @property  BOOL hasSelected
 @property  BOOL selected

  // instance methods
  -[TVRMSAudioRouteMessage macAddress]
  -[TVRMSAudioRouteMessage copyTo:]
  -[TVRMSAudioRouteMessage supportsVideo]
  -[TVRMSAudioRouteMessage setSelected:]
  -[TVRMSAudioRouteMessage .cxx_destruct]
  -[TVRMSAudioRouteMessage setDisplayName:]
  -[TVRMSAudioRouteMessage mergeFrom:]
  -[TVRMSAudioRouteMessage setMacAddress:]
  -[TVRMSAudioRouteMessage dictionaryRepresentation]
  -[TVRMSAudioRouteMessage hasMacAddress]
  -[TVRMSAudioRouteMessage copyWithZone:]
  -[TVRMSAudioRouteMessage hasDisplayName]
  -[TVRMSAudioRouteMessage readFrom:]
  -[TVRMSAudioRouteMessage displayName]
  -[TVRMSAudioRouteMessage selected]
  -[TVRMSAudioRouteMessage writeTo:]
  -[TVRMSAudioRouteMessage isEqual:]
  -[TVRMSAudioRouteMessage hasSelected]
  -[TVRMSAudioRouteMessage setSupportsVideo:]
  -[TVRMSAudioRouteMessage setHasSelected:]
  -[TVRMSAudioRouteMessage setHasMacAddress:]
  -[TVRMSAudioRouteMessage setHasSupportsVideo:]
  -[TVRMSAudioRouteMessage hasSupportsVideo]


TVRMSKeyboardInfo : NSObject
 @property  NSString *text
 @property  NSString *title
 @property  NSString *subtitle
 @property  BOOL secureText
 @property  long long keyboardType
 @property  long long keyboardInputType
 @property  long long minimumCharacters
 @property  long long maximumCharacters

  // instance methods
  -[TVRMSKeyboardInfo text]
  -[TVRMSKeyboardInfo subtitle]
  -[TVRMSKeyboardInfo setSubtitle:]
  -[TVRMSKeyboardInfo .cxx_destruct]
  -[TVRMSKeyboardInfo setKeyboardType:]
  -[TVRMSKeyboardInfo title]
  -[TVRMSKeyboardInfo keyboardType]
  -[TVRMSKeyboardInfo setTitle:]
  -[TVRMSKeyboardInfo setText:]
  -[TVRMSKeyboardInfo setSecureText:]
  -[TVRMSKeyboardInfo secureText]
  -[TVRMSKeyboardInfo maximumCharacters]
  -[TVRMSKeyboardInfo setMaximumCharacters:]
  -[TVRMSKeyboardInfo initWithItemsArray:]
  -[TVRMSKeyboardInfo keyboardInputType]
  -[TVRMSKeyboardInfo setKeyboardInputType:]
  -[TVRMSKeyboardInfo minimumCharacters]
  -[TVRMSKeyboardInfo setMinimumCharacters:]


_RMSBonjourService : NSObject
 @property  TVRMSService *service
 @property  NSNetService *netService
 @property  long long state
 @property  BOOL available

  // instance methods
  -[_RMSBonjourService setAvailable:]
  -[_RMSBonjourService isAvailable]
  -[_RMSBonjourService state]
  -[_RMSBonjourService setService:]
  -[_RMSBonjourService .cxx_destruct]
  -[_RMSBonjourService service]
  -[_RMSBonjourService setState:]
  -[_RMSBonjourService setNetService:]
  -[_RMSBonjourService netService]


TVRMSBonjourServiceProvider : NSObject <TVRMSServiceProvider, NSNetServiceBrowserDelegate, NSNetServiceDelegate>
 @property  NSNetServiceBrowser *netServiceBrowser
 @property  NSString *searchType
 @property  NSString *searchDomain
 @property  NSString *searchScope
 @property  long long serviceDiscoverySource
 @property  <TVRMSServiceProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRMSBonjourServiceProvider searchType]
  -[TVRMSBonjourServiceProvider setDelegate:]
  -[TVRMSBonjourServiceProvider netServiceBrowser:didFindService:moreComing:]
  -[TVRMSBonjourServiceProvider delegate]
  -[TVRMSBonjourServiceProvider dealloc]
  -[TVRMSBonjourServiceProvider .cxx_destruct]
  -[TVRMSBonjourServiceProvider beginDiscovery]
  -[TVRMSBonjourServiceProvider netServiceBrowser:didRemoveService:moreComing:]
  -[TVRMSBonjourServiceProvider init]
  -[TVRMSBonjourServiceProvider netServiceDidResolveAddress:]
  -[TVRMSBonjourServiceProvider netService:didNotResolve:]
  -[TVRMSBonjourServiceProvider netService:didUpdateTXTRecordData:]
  -[TVRMSBonjourServiceProvider _searchString]
  -[TVRMSBonjourServiceProvider endDiscovery]
  -[TVRMSBonjourServiceProvider netServiceBrowser]
  -[TVRMSBonjourServiceProvider searchScope]
  -[TVRMSBonjourServiceProvider serviceDiscoverySource]
  -[TVRMSBonjourServiceProvider serviceLegacyFlagsFromTXTDictionary:]
  -[TVRMSBonjourServiceProvider searchDomain]
  -[TVRMSBonjourServiceProvider serviceTypeFromTXTDictionary:]
  -[TVRMSBonjourServiceProvider _updateCacheWithService:identifier:]
  -[TVRMSBonjourServiceProvider _updateService:withNetService:txtData:]
  -[TVRMSBonjourServiceProvider _valueForTXTRecordKey:inTXTDictionary:]
  -[TVRMSBonjourServiceProvider _identifierForNetService:]


TVRMSPairingSessionDidPairMessage : PBCodable <NSCopying>
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier
 @property  BOOL hasServiceNetworkName
 @property  NSString *serviceNetworkName
 @property  BOOL hasPairingGUID
 @property  NSString *pairingGUID

  // instance methods
  -[TVRMSPairingSessionDidPairMessage setSessionIdentifier:]
  -[TVRMSPairingSessionDidPairMessage sessionIdentifier]
  -[TVRMSPairingSessionDidPairMessage copyTo:]
  -[TVRMSPairingSessionDidPairMessage .cxx_destruct]
  -[TVRMSPairingSessionDidPairMessage mergeFrom:]
  -[TVRMSPairingSessionDidPairMessage dictionaryRepresentation]
  -[TVRMSPairingSessionDidPairMessage copyWithZone:]
  -[TVRMSPairingSessionDidPairMessage readFrom:]
  -[TVRMSPairingSessionDidPairMessage writeTo:]
  -[TVRMSPairingSessionDidPairMessage isEqual:]
  -[TVRMSPairingSessionDidPairMessage hasSessionIdentifier]
  -[TVRMSPairingSessionDidPairMessage setHasSessionIdentifier:]
  -[TVRMSPairingSessionDidPairMessage hasPairingGUID]
  -[TVRMSPairingSessionDidPairMessage pairingGUID]
  -[TVRMSPairingSessionDidPairMessage setPairingGUID:]
  -[TVRMSPairingSessionDidPairMessage hasServiceNetworkName]
  -[TVRMSPairingSessionDidPairMessage serviceNetworkName]
  -[TVRMSPairingSessionDidPairMessage setServiceNetworkName:]


TVRCConstants : NSObject

TVRMSFairPlaySession : NSObject
 @property  BOOL handshakeComplete

  // instance methods
  -[TVRMSFairPlaySession dealloc]
  -[TVRMSFairPlaySession invalidate]
  -[TVRMSFairPlaySession _getHardwareInfo:]
  -[TVRMSFairPlaySession _hexStringForData:]
  -[TVRMSFairPlaySession handshakeData]
  -[TVRMSFairPlaySession handshakeIterationWithData:]
  -[TVRMSFairPlaySession headerForURL:]
  -[TVRMSFairPlaySession isHandshakeComplete]


TVRCMatchPointDeviceImpl : NSObject <TVRCHMServiceWrapperDelegate, _TVRCDeviceImpl>
 @property  TVRCHMServiceWrapper *service
 @property  TVRXDevice *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVRCMatchPointDeviceImpl implWithService:]

  // instance methods
  -[TVRCMatchPointDeviceImpl disconnect]
  -[TVRCMatchPointDeviceImpl connect]
  -[TVRCMatchPointDeviceImpl identifier]
  -[TVRCMatchPointDeviceImpl model]
  -[TVRCMatchPointDeviceImpl initWithService:]
  -[TVRCMatchPointDeviceImpl setService:]
  -[TVRCMatchPointDeviceImpl .cxx_destruct]
  -[TVRCMatchPointDeviceImpl service]
  -[TVRCMatchPointDeviceImpl setDevice:]
  -[TVRCMatchPointDeviceImpl device]
  -[TVRCMatchPointDeviceImpl connectionType]
  -[TVRCMatchPointDeviceImpl keyboardController]
  -[TVRCMatchPointDeviceImpl name]
  -[TVRCMatchPointDeviceImpl sendButtonEvent:]
  -[TVRCMatchPointDeviceImpl sendGameControllerEvent:]
  -[TVRCMatchPointDeviceImpl supportedButtons]
  -[TVRCMatchPointDeviceImpl alternateIdentifiers]
  -[TVRCMatchPointDeviceImpl supportsTouchEvents]
  -[TVRCMatchPointDeviceImpl sendTouchEvent:]
  -[TVRCMatchPointDeviceImpl pairingCapability]
  -[TVRCMatchPointDeviceImpl voiceRecorder]
  -[TVRCMatchPointDeviceImpl setAuthenticationSupported:]
  -[TVRCMatchPointDeviceImpl connectedToService:]
  -[TVRCMatchPointDeviceImpl disconnectedFromService:error:]
  -[TVRCMatchPointDeviceImpl service:updatedName:]


TVRMSNowPlayingInfoMessage : PBCodable <NSCopying>
 @property  BOOL hasItemID
 @property  unsigned long itemID
 @property  BOOL hasDatabaseID
 @property  unsigned long databaseID
 @property  BOOL hasTrackName
 @property  NSString *trackName
 @property  BOOL hasArtistName
 @property  NSString *artistName
 @property  BOOL hasAlbumName
 @property  NSString *albumName
 @property  BOOL hasTimestamp
 @property  double timestamp
 @property  BOOL hasTimeRemaining
 @property  double timeRemaining
 @property  BOOL hasTotalDuration
 @property  double totalDuration
 @property  BOOL hasRevisionNumber
 @property  unsigned int revisionNumber
 @property  BOOL hasMediaKind
 @property  int mediaKind
 @property  BOOL hasPlaybackState
 @property  int playbackState
 @property  BOOL hasLikedState
 @property  int likedState
 @property  BOOL hasScrubbableState
 @property  int scrubbableState
 @property  BOOL hasCanSkipNext
 @property  BOOL canSkipNext
 @property  BOOL hasCanSkipPrevious
 @property  BOOL canSkipPrevious
 @property  BOOL hasLikeable
 @property  BOOL likeable
 @property  BOOL hasCanWishlist
 @property  BOOL canWishlist
 @property  BOOL hasHasChapterData
 @property  BOOL hasChapterData

  // instance methods
  -[TVRMSNowPlayingInfoMessage setAlbumName:]
  -[TVRMSNowPlayingInfoMessage databaseID]
  -[TVRMSNowPlayingInfoMessage setDatabaseID:]
  -[TVRMSNowPlayingInfoMessage mediaKind]
  -[TVRMSNowPlayingInfoMessage setMediaKind:]
  -[TVRMSNowPlayingInfoMessage artistName]
  -[TVRMSNowPlayingInfoMessage setTimestamp:]
  -[TVRMSNowPlayingInfoMessage playbackState]
  -[TVRMSNowPlayingInfoMessage copyTo:]
  -[TVRMSNowPlayingInfoMessage setItemID:]
  -[TVRMSNowPlayingInfoMessage setHasPlaybackState:]
  -[TVRMSNowPlayingInfoMessage setPlaybackState:]
  -[TVRMSNowPlayingInfoMessage timeRemaining]
  -[TVRMSNowPlayingInfoMessage totalDuration]
  -[TVRMSNowPlayingInfoMessage .cxx_destruct]
  -[TVRMSNowPlayingInfoMessage albumName]
  -[TVRMSNowPlayingInfoMessage mergeFrom:]
  -[TVRMSNowPlayingInfoMessage setHasTimestamp:]
  -[TVRMSNowPlayingInfoMessage itemID]
  -[TVRMSNowPlayingInfoMessage hasPlaybackState]
  -[TVRMSNowPlayingInfoMessage dictionaryRepresentation]
  -[TVRMSNowPlayingInfoMessage hasTimestamp]
  -[TVRMSNowPlayingInfoMessage setArtistName:]
  -[TVRMSNowPlayingInfoMessage copyWithZone:]
  -[TVRMSNowPlayingInfoMessage hasAlbumName]
  -[TVRMSNowPlayingInfoMessage timestamp]
  -[TVRMSNowPlayingInfoMessage readFrom:]
  -[TVRMSNowPlayingInfoMessage writeTo:]
  -[TVRMSNowPlayingInfoMessage isEqual:]
  -[TVRMSNowPlayingInfoMessage hasItemID]
  -[TVRMSNowPlayingInfoMessage hasArtistName]
  -[TVRMSNowPlayingInfoMessage likedState]
  -[TVRMSNowPlayingInfoMessage setLikedState:]
  -[TVRMSNowPlayingInfoMessage setTotalDuration:]
  -[TVRMSNowPlayingInfoMessage setTimeRemaining:]
  -[TVRMSNowPlayingInfoMessage setHasLikedState:]
  -[TVRMSNowPlayingInfoMessage hasLikedState]
  -[TVRMSNowPlayingInfoMessage setHasChapterData:]
  -[TVRMSNowPlayingInfoMessage setHasHasChapterData:]
  -[TVRMSNowPlayingInfoMessage hasHasChapterData]
  -[TVRMSNowPlayingInfoMessage hasChapterData]
  -[TVRMSNowPlayingInfoMessage setHasTotalDuration:]
  -[TVRMSNowPlayingInfoMessage hasTotalDuration]
  -[TVRMSNowPlayingInfoMessage setHasItemID:]
  -[TVRMSNowPlayingInfoMessage setHasDatabaseID:]
  -[TVRMSNowPlayingInfoMessage hasDatabaseID]
  -[TVRMSNowPlayingInfoMessage hasTrackName]
  -[TVRMSNowPlayingInfoMessage setHasTimeRemaining:]
  -[TVRMSNowPlayingInfoMessage hasTimeRemaining]
  -[TVRMSNowPlayingInfoMessage setRevisionNumber:]
  -[TVRMSNowPlayingInfoMessage setHasRevisionNumber:]
  -[TVRMSNowPlayingInfoMessage hasRevisionNumber]
  -[TVRMSNowPlayingInfoMessage setHasMediaKind:]
  -[TVRMSNowPlayingInfoMessage hasMediaKind]
  -[TVRMSNowPlayingInfoMessage setScrubbableState:]
  -[TVRMSNowPlayingInfoMessage setHasScrubbableState:]
  -[TVRMSNowPlayingInfoMessage hasScrubbableState]
  -[TVRMSNowPlayingInfoMessage setCanSkipNext:]
  -[TVRMSNowPlayingInfoMessage setHasCanSkipNext:]
  -[TVRMSNowPlayingInfoMessage hasCanSkipNext]
  -[TVRMSNowPlayingInfoMessage setCanSkipPrevious:]
  -[TVRMSNowPlayingInfoMessage setHasCanSkipPrevious:]
  -[TVRMSNowPlayingInfoMessage hasCanSkipPrevious]
  -[TVRMSNowPlayingInfoMessage setLikeable:]
  -[TVRMSNowPlayingInfoMessage setHasLikeable:]
  -[TVRMSNowPlayingInfoMessage hasLikeable]
  -[TVRMSNowPlayingInfoMessage setCanWishlist:]
  -[TVRMSNowPlayingInfoMessage setHasCanWishlist:]
  -[TVRMSNowPlayingInfoMessage hasCanWishlist]
  -[TVRMSNowPlayingInfoMessage trackName]
  -[TVRMSNowPlayingInfoMessage setTrackName:]
  -[TVRMSNowPlayingInfoMessage revisionNumber]
  -[TVRMSNowPlayingInfoMessage scrubbableState]
  -[TVRMSNowPlayingInfoMessage canSkipNext]
  -[TVRMSNowPlayingInfoMessage canSkipPrevious]
  -[TVRMSNowPlayingInfoMessage likeable]
  -[TVRMSNowPlayingInfoMessage canWishlist]


_TVRDeviceAggregate : NSObject
 @property  TVRCRPCompanionLinkClientWrapper *rapport
 @property  _TVRCRMSDeviceWrapper *remoteMediaService
 @property  TVRCHMServiceWrapper *homeKit
 @property  TVRXDevice *publicDevice

  // instance methods
  -[_TVRDeviceAggregate .cxx_destruct]
  -[_TVRDeviceAggregate isEmpty]
  -[_TVRDeviceAggregate setRapport:]
  -[_TVRDeviceAggregate rapport]
  -[_TVRDeviceAggregate bestImpl]
  -[_TVRDeviceAggregate remoteMediaService]
  -[_TVRDeviceAggregate setRemoteMediaService:]
  -[_TVRDeviceAggregate homeKit]
  -[_TVRDeviceAggregate setHomeKit:]
  -[_TVRDeviceAggregate publicDevice]
  -[_TVRDeviceAggregate setPublicDevice:]


TVRXDeviceQuery : NSObject <TVRCRapportDeviceQueryDelegate, _TVRCMatchPointDeviceQueryDelegate, _TVRCRMSDeviceQueryDelegate>
 @property  BOOL isRunning
 @property  NSMutableDictionary *aggregateDevices
 @property  TVRCRapportDeviceQuery *rapportDeviceQuery
 @property  _TVRCRMSDeviceQuery *rmsDeviceQuery
 @property  TVRCMatchPointDeviceQuery *matchPointQuery
 @property  <TVRXDeviceQueryDelegate> *delegate
 @property  NSSet *devices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRXDeviceQuery setIsRunning:]
  -[TVRXDeviceQuery setDelegate:]
  -[TVRXDeviceQuery delegate]
  -[TVRXDeviceQuery devices]
  -[TVRXDeviceQuery isRunning]
  -[TVRXDeviceQuery .cxx_destruct]
  -[TVRXDeviceQuery stop]
  -[TVRXDeviceQuery start]
  -[TVRXDeviceQuery init]
  -[TVRXDeviceQuery rapportDeviceQuery:addedDevice:]
  -[TVRXDeviceQuery rapportDeviceQuery:removedDevice:]
  -[TVRXDeviceQuery matchpointDeviceQuery:addedService:]
  -[TVRXDeviceQuery matchpointDeviceQuery:removedService:]
  -[TVRXDeviceQuery rmsDeviceQuery:addedDevice:]
  -[TVRXDeviceQuery rmsDeviceQuery:removedDevice:]
  -[TVRXDeviceQuery _startSearch]
  -[TVRXDeviceQuery _stopSearch]
  -[TVRXDeviceQuery _findAggregateForIdentifier:createIfNeeded:]
  -[TVRXDeviceQuery _reevaluateAggregates]
  -[TVRXDeviceQuery _notifyDelegateDidUpdateDevices]
  -[TVRXDeviceQuery aggregateDevices]
  -[TVRXDeviceQuery setAggregateDevices:]
  -[TVRXDeviceQuery rapportDeviceQuery]
  -[TVRXDeviceQuery setRapportDeviceQuery:]
  -[TVRXDeviceQuery rmsDeviceQuery]
  -[TVRXDeviceQuery setRmsDeviceQuery:]
  -[TVRXDeviceQuery matchPointQuery]
  -[TVRXDeviceQuery setMatchPointQuery:]


TVRMSNowPlayingInfoDidUpdateMessage : PBCodable <NSCopying>
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier
 @property  BOOL hasNowPlayingInfo
 @property  TVRMSNowPlayingInfoMessage *nowPlayingInfo

  // instance methods
  -[TVRMSNowPlayingInfoDidUpdateMessage setSessionIdentifier:]
  -[TVRMSNowPlayingInfoDidUpdateMessage sessionIdentifier]
  -[TVRMSNowPlayingInfoDidUpdateMessage setNowPlayingInfo:]
  -[TVRMSNowPlayingInfoDidUpdateMessage copyTo:]
  -[TVRMSNowPlayingInfoDidUpdateMessage .cxx_destruct]
  -[TVRMSNowPlayingInfoDidUpdateMessage mergeFrom:]
  -[TVRMSNowPlayingInfoDidUpdateMessage dictionaryRepresentation]
  -[TVRMSNowPlayingInfoDidUpdateMessage copyWithZone:]
  -[TVRMSNowPlayingInfoDidUpdateMessage readFrom:]
  -[TVRMSNowPlayingInfoDidUpdateMessage nowPlayingInfo]
  -[TVRMSNowPlayingInfoDidUpdateMessage writeTo:]
  -[TVRMSNowPlayingInfoDidUpdateMessage isEqual:]
  -[TVRMSNowPlayingInfoDidUpdateMessage hasNowPlayingInfo]
  -[TVRMSNowPlayingInfoDidUpdateMessage hasSessionIdentifier]
  -[TVRMSNowPlayingInfoDidUpdateMessage setHasSessionIdentifier:]


TVRMSNowPlayingArtworkAvailableMessage : PBCodable <NSCopying>
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier
 @property  BOOL hasArtworkIdentifier
 @property  NSString *artworkIdentifier

  // instance methods
  -[TVRMSNowPlayingArtworkAvailableMessage setSessionIdentifier:]
  -[TVRMSNowPlayingArtworkAvailableMessage sessionIdentifier]
  -[TVRMSNowPlayingArtworkAvailableMessage setArtworkIdentifier:]
  -[TVRMSNowPlayingArtworkAvailableMessage artworkIdentifier]
  -[TVRMSNowPlayingArtworkAvailableMessage copyTo:]
  -[TVRMSNowPlayingArtworkAvailableMessage hasArtworkIdentifier]
  -[TVRMSNowPlayingArtworkAvailableMessage .cxx_destruct]
  -[TVRMSNowPlayingArtworkAvailableMessage mergeFrom:]
  -[TVRMSNowPlayingArtworkAvailableMessage dictionaryRepresentation]
  -[TVRMSNowPlayingArtworkAvailableMessage copyWithZone:]
  -[TVRMSNowPlayingArtworkAvailableMessage readFrom:]
  -[TVRMSNowPlayingArtworkAvailableMessage writeTo:]
  -[TVRMSNowPlayingArtworkAvailableMessage isEqual:]
  -[TVRMSNowPlayingArtworkAvailableMessage hasSessionIdentifier]
  -[TVRMSNowPlayingArtworkAvailableMessage setHasSessionIdentifier:]


_RMSNowPlayingArtworkCacheItem : NSObject <NSDiscardableContent>
 @property  NSString *artworkIdentifier
 @property  NSData *artworkData

  // instance methods
  -[_RMSNowPlayingArtworkCacheItem beginContentAccess]
  -[_RMSNowPlayingArtworkCacheItem setArtworkIdentifier:]
  -[_RMSNowPlayingArtworkCacheItem artworkData]
  -[_RMSNowPlayingArtworkCacheItem setArtworkData:]
  -[_RMSNowPlayingArtworkCacheItem artworkIdentifier]
  -[_RMSNowPlayingArtworkCacheItem discardContentIfPossible]
  -[_RMSNowPlayingArtworkCacheItem .cxx_destruct]
  -[_RMSNowPlayingArtworkCacheItem endContentAccess]
  -[_RMSNowPlayingArtworkCacheItem isContentDiscarded]


TVRMSNowPlayingArtworkCache : NSObject
  // class methods
  +[TVRMSNowPlayingArtworkCache sharedArtworkCache]

  // instance methods
  -[TVRMSNowPlayingArtworkCache .cxx_destruct]
  -[TVRMSNowPlayingArtworkCache init]
  -[TVRMSNowPlayingArtworkCache artworkDataForIdentifier:]
  -[TVRMSNowPlayingArtworkCache artworkDataForNowPlayingInfo:]
  -[TVRMSNowPlayingArtworkCache setArtworkData:forIdentifier:]
  -[TVRMSNowPlayingArtworkCache setArtworkData:forNowPlayingInfo:]


TVRMSAudioRoutesDidUpdateMessage : PBCodable <NSCopying>
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier
 @property  NSMutableArray *audioRoutes

  // instance methods
  -[TVRMSAudioRoutesDidUpdateMessage setSessionIdentifier:]
  -[TVRMSAudioRoutesDidUpdateMessage sessionIdentifier]
  -[TVRMSAudioRoutesDidUpdateMessage copyTo:]
  -[TVRMSAudioRoutesDidUpdateMessage .cxx_destruct]
  -[TVRMSAudioRoutesDidUpdateMessage mergeFrom:]
  -[TVRMSAudioRoutesDidUpdateMessage dictionaryRepresentation]
  -[TVRMSAudioRoutesDidUpdateMessage copyWithZone:]
  -[TVRMSAudioRoutesDidUpdateMessage clearAudioRoutes]
  -[TVRMSAudioRoutesDidUpdateMessage readFrom:]
  -[TVRMSAudioRoutesDidUpdateMessage writeTo:]
  -[TVRMSAudioRoutesDidUpdateMessage isEqual:]
  -[TVRMSAudioRoutesDidUpdateMessage hasSessionIdentifier]
  -[TVRMSAudioRoutesDidUpdateMessage setHasSessionIdentifier:]
  -[TVRMSAudioRoutesDidUpdateMessage addAudioRoutes:]
  -[TVRMSAudioRoutesDidUpdateMessage audioRoutesCount]
  -[TVRMSAudioRoutesDidUpdateMessage audioRoutesAtIndex:]
  -[TVRMSAudioRoutesDidUpdateMessage audioRoutes]
  -[TVRMSAudioRoutesDidUpdateMessage setAudioRoutes:]


TVRCDeviceAuthenticationChallenge : NSObject
 @property  NSString *deviceIdentifier
 @property  long long challengeType
 @property  long long challengeAttributes
 @property  long long throttleSeconds
 @property  NSString *codeToEnterOnDevice

  // instance methods
  -[TVRCDeviceAuthenticationChallenge setDeviceIdentifier:]
  -[TVRCDeviceAuthenticationChallenge deviceIdentifier]
  -[TVRCDeviceAuthenticationChallenge .cxx_destruct]
  -[TVRCDeviceAuthenticationChallenge cancel]
  -[TVRCDeviceAuthenticationChallenge throttleSeconds]
  -[TVRCDeviceAuthenticationChallenge _initWithDeviceIdentifier:challengeType:codeToEnterOnDevice:]
  -[TVRCDeviceAuthenticationChallenge userEnteredCodeLocally:]
  -[TVRCDeviceAuthenticationChallenge challengeType]
  -[TVRCDeviceAuthenticationChallenge challengeAttributes]
  -[TVRCDeviceAuthenticationChallenge setChallengeAttributes:]
  -[TVRCDeviceAuthenticationChallenge setThrottleSeconds:]
  -[TVRCDeviceAuthenticationChallenge codeToEnterOnDevice]


TVRCTouchEvent : NSObject <NSSecureCoding>
 @property  double timestamp
 @property  long long finger
 @property  long long phase
 @property  {CGPoint=dd} digitizerLocation

  // class methods
  +[TVRCTouchEvent supportsSecureCoding]

  // instance methods
  -[TVRCTouchEvent phase]
  -[TVRCTouchEvent encodeWithCoder:]
  -[TVRCTouchEvent timestamp]
  -[TVRCTouchEvent initWithCoder:]
  -[TVRCTouchEvent digitizerLocation]
  -[TVRCTouchEvent finger]
  -[TVRCTouchEvent _initWithTimestamp:finger:phase:digitizerLocation:]


TVRMSDiscoverySession : NSObject <TVRMSServiceProviderDelegate, TVRMSDiscoverySession>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <TVRMSDiscoverySessionDelegate> *delegate
 @property  long long discoveryTypes
 @property  NSArray *availableServices
 @property  BOOL networkAvailable
 @property  NSArray *pairedNetworkNames

  // class methods
  +[TVRMSDiscoverySession localDiscoverySession]
  +[TVRMSDiscoverySession proxyDiscoverySession]

  // instance methods
  -[TVRMSDiscoverySession isNetworkAvailable]
  -[TVRMSDiscoverySession setDelegate:]
  -[TVRMSDiscoverySession delegate]
  -[TVRMSDiscoverySession dealloc]
  -[TVRMSDiscoverySession .cxx_destruct]
  -[TVRMSDiscoverySession beginDiscovery]
  -[TVRMSDiscoverySession init]
  -[TVRMSDiscoverySession endDiscovery]
  -[TVRMSDiscoverySession availableServices]
  -[TVRMSDiscoverySession discoveryTypes]
  -[TVRMSDiscoverySession setDiscoveryTypes:]
  -[TVRMSDiscoverySession pairedNetworkNames]
  -[TVRMSDiscoverySession setPairedNetworkNames:]
  -[TVRMSDiscoverySession _handleHSGroupIDDidChangeNotification:]
  -[TVRMSDiscoverySession _handleReachabilityChangedNotification:]
  -[TVRMSDiscoverySession serviceProvider:serviceDidBecomeAvailable:]
  -[TVRMSDiscoverySession serviceProvider:serviceDidBecomeUnavailable:]
  -[TVRMSDiscoverySession _enableProviders]
  -[TVRMSDiscoverySession _providerForDiscoveryType:]
  -[TVRMSDiscoverySession _updateWifiAvailability]


TVRMSSeekToPlaybackTimeMessage : PBCodable <NSCopying>
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier
 @property  BOOL hasPlaybackTime
 @property  int playbackTime

  // instance methods
  -[TVRMSSeekToPlaybackTimeMessage setSessionIdentifier:]
  -[TVRMSSeekToPlaybackTimeMessage sessionIdentifier]
  -[TVRMSSeekToPlaybackTimeMessage copyTo:]
  -[TVRMSSeekToPlaybackTimeMessage setPlaybackTime:]
  -[TVRMSSeekToPlaybackTimeMessage mergeFrom:]
  -[TVRMSSeekToPlaybackTimeMessage dictionaryRepresentation]
  -[TVRMSSeekToPlaybackTimeMessage copyWithZone:]
  -[TVRMSSeekToPlaybackTimeMessage readFrom:]
  -[TVRMSSeekToPlaybackTimeMessage playbackTime]
  -[TVRMSSeekToPlaybackTimeMessage writeTo:]
  -[TVRMSSeekToPlaybackTimeMessage isEqual:]
  -[TVRMSSeekToPlaybackTimeMessage hasSessionIdentifier]
  -[TVRMSSeekToPlaybackTimeMessage setHasSessionIdentifier:]
  -[TVRMSSeekToPlaybackTimeMessage setHasPlaybackTime:]
  -[TVRMSSeekToPlaybackTimeMessage hasPlaybackTime]


TVRCMatchPointDeviceQuery : NSObject <HMHomeManagerDelegatePrivate>
 @property  HMHomeManager *homeManager
 @property  <NSObject> *homekitActiveAssertion
 @property  NSMutableDictionary *wrapperToIdentifierMapping
 @property  <_TVRCMatchPointDeviceQueryDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRCMatchPointDeviceQuery homeManagerDidUpdateHomes:]
  -[TVRCMatchPointDeviceQuery setDelegate:]
  -[TVRCMatchPointDeviceQuery delegate]
  -[TVRCMatchPointDeviceQuery dealloc]
  -[TVRCMatchPointDeviceQuery .cxx_destruct]
  -[TVRCMatchPointDeviceQuery stop]
  -[TVRCMatchPointDeviceQuery homeManager]
  -[TVRCMatchPointDeviceQuery setHomeManager:]
  -[TVRCMatchPointDeviceQuery start]
  -[TVRCMatchPointDeviceQuery init]
  -[TVRCMatchPointDeviceQuery homeManagerDidUpdateCurrentHome:]
  -[TVRCMatchPointDeviceQuery _matchPointServiceAdded:]
  -[TVRCMatchPointDeviceQuery _matchPointServiceRemoved:]
  -[TVRCMatchPointDeviceQuery _matchPointServiceNameChanged:]
  -[TVRCMatchPointDeviceQuery _notifyAddedService:]
  -[TVRCMatchPointDeviceQuery _notifyRemovedService:]
  -[TVRCMatchPointDeviceQuery homekitActiveAssertion]
  -[TVRCMatchPointDeviceQuery setHomekitActiveAssertion:]
  -[TVRCMatchPointDeviceQuery wrapperToIdentifierMapping]
  -[TVRCMatchPointDeviceQuery setWrapperToIdentifierMapping:]


TVRMSIDSServer : NSObject <IDSServiceDelegate, TVRMSSessionManagerDelegate, TVRMSDiscoverySessionDelegate, TVRMSPairingSessionDelegate, TVRMSDAAPControlSessionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVRMSIDSServer server]

  // instance methods
  -[TVRMSIDSServer service:account:incomingUnhandledProtobuf:fromID:context:]
  -[TVRMSIDSServer .cxx_destruct]
  -[TVRMSIDSServer init]
  -[TVRMSIDSServer discoverySessionNetworkAvailabilityDidChange:]
  -[TVRMSIDSServer controlSession:didUpdateNowPlayingInfo:]
  -[TVRMSIDSServer controlSession:artworkDataDidBecomeAvailable:identifier:]
  -[TVRMSIDSServer controlSession:didUpdateAudioRoutes:]
  -[TVRMSIDSServer controlSession:didUpdateVolume:]
  -[TVRMSIDSServer controlSession:keyboardEditingDidBegin:]
  -[TVRMSIDSServer controlSession:keyboardEditingDidEnd:]
  -[TVRMSIDSServer controlSession:didUpdateKeyboardEditingInfo:]
  -[TVRMSIDSServer controlSessionDidEnd:]
  -[TVRMSIDSServer pairingSession:didPairWithServiceNetworkName:pairingGUID:]
  -[TVRMSIDSServer pairingSessionDidFail:]
  -[TVRMSIDSServer _handleSessionHeartbeat:]
  -[TVRMSIDSServer _handleBeginDiscovery:]
  -[TVRMSIDSServer _handleEndDiscovery:]
  -[TVRMSIDSServer _handleConnectToService:]
  -[TVRMSIDSServer _handleLogout:]
  -[TVRMSIDSServer _handlePlaybackCommand:]
  -[TVRMSIDSServer _handlePickAudioRoute:]
  -[TVRMSIDSServer _handleSetVolume:]
  -[TVRMSIDSServer _handleTouchMove:]
  -[TVRMSIDSServer _handleTouchEnd:]
  -[TVRMSIDSServer _handleNavigationCommand:]
  -[TVRMSIDSServer _handleBeginObservingNowPlaying:]
  -[TVRMSIDSServer _handleEndObservingNowPlaying:]
  -[TVRMSIDSServer _handleNowPlayingArtworkRequest:]
  -[TVRMSIDSServer _handleBeginPairing:]
  -[TVRMSIDSServer _handleEndPairing:]
  -[TVRMSIDSServer _handleSetLikeState:]
  -[TVRMSIDSServer _handleAddToWishlist:]
  -[TVRMSIDSServer _handleSeekToPlaybackTime:]
  -[TVRMSIDSServer _handleUpdatePairedNetworkNames:]
  -[TVRMSIDSServer sessionManager:sessionDidTimeout:]
  -[TVRMSIDSServer discoverySessionDidUpdateAvailableServices:]
  -[TVRMSIDSServer _cleanupStaleSessions:]
  -[TVRMSIDSServer _sendData:type:timeout:queueOneID:inResponseTo:]
  -[TVRMSIDSServer _sendData:type:priority:timeout:queueOneID:inResponseTo:]


TVRCHMHomeObserver : NSObject <HMAccessoryDelegate, HMHomeDelegate, HMAccessoryDelegatePrivate>
 @property  NSMutableDictionary *serviceToAccessoryIDMapping
 @property  HMHome *currentHome
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVRCHMHomeObserver sharedInstance]

  // instance methods
  -[TVRCHMHomeObserver home:didAddAccessory:]
  -[TVRCHMHomeObserver home:didRemoveAccessory:]
  -[TVRCHMHomeObserver currentHome]
  -[TVRCHMHomeObserver .cxx_destruct]
  -[TVRCHMHomeObserver init]
  -[TVRCHMHomeObserver accessory:didUpdateNameForService:]
  -[TVRCHMHomeObserver accessoryDidUpdateServices:]
  -[TVRCHMHomeObserver accessoryDidUpdateReachability:]
  -[TVRCHMHomeObserver accessoryDidUpdateReachableTransports:]
  -[TVRCHMHomeObserver setCurrentHome:]
  -[TVRCHMHomeObserver _updateAccessoriesForHome:]
  -[TVRCHMHomeObserver _updateServicesForAccessory:]
  -[TVRCHMHomeObserver _checkAccessoryReachabilityAndFetchTVServices:withCompletion:]
  -[TVRCHMHomeObserver _readCharacteristic:completion:]
  -[TVRCHMHomeObserver _checkErrorForLocallySuspendedAccessory:]
  -[TVRCHMHomeObserver serviceToAccessoryIDMapping]
  -[TVRCHMHomeObserver setServiceToAccessoryIDMapping:]


TVRCHMServiceWrapper : NSObject <HMAccessoryDelegate>
 @property  HMHome *home
 @property  HMService *service
 @property  HMAccessory *accessory
 @property  HMCharacteristic *serviceCharacteristic
 @property  HMCharacteristic *activeCharacteristic
 @property  HMCharacteristic *volumeSelectorCharacteristic
 @property  BOOL connected
 @property  BOOL sentWakeKey
 @property  BOOL volumeControlSupported
 @property  NSString *name
 @property  NSString *identifier
 @property  NSString *model
 @property  <TVRCHMServiceWrapperDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVRCHMServiceWrapper wrapperWithService:]

  // instance methods
  -[TVRCHMServiceWrapper accessory]
  -[TVRCHMServiceWrapper home]
  -[TVRCHMServiceWrapper disconnect]
  -[TVRCHMServiceWrapper connect]
  -[TVRCHMServiceWrapper identifier]
  -[TVRCHMServiceWrapper model]
  -[TVRCHMServiceWrapper setConnected:]
  -[TVRCHMServiceWrapper setDelegate:]
  -[TVRCHMServiceWrapper initWithService:]
  -[TVRCHMServiceWrapper connected]
  -[TVRCHMServiceWrapper setAccessory:]
  -[TVRCHMServiceWrapper supportsVolumeControl]
  -[TVRCHMServiceWrapper delegate]
  -[TVRCHMServiceWrapper setService:]
  -[TVRCHMServiceWrapper .cxx_destruct]
  -[TVRCHMServiceWrapper service]
  -[TVRCHMServiceWrapper name]
  -[TVRCHMServiceWrapper setHome:]
  -[TVRCHMServiceWrapper sendButtonEvent:]
  -[TVRCHMServiceWrapper _disconnectWithError:]
  -[TVRCHMServiceWrapper _serviceNameChanged:]
  -[TVRCHMServiceWrapper _serviceRemoved:]
  -[TVRCHMServiceWrapper supportsInfoKey]
  -[TVRCHMServiceWrapper _startObservingServiceNotifications]
  -[TVRCHMServiceWrapper _stopObservingServiceNotifications]
  -[TVRCHMServiceWrapper _sendRemoteKey:]
  -[TVRCHMServiceWrapper _sendWakeKey]
  -[TVRCHMServiceWrapper _sendVolumeKey:]
  -[TVRCHMServiceWrapper _remoteKeyForTVRCButton:]
  -[TVRCHMServiceWrapper _televisionServiceForAccessory:]
  -[TVRCHMServiceWrapper _setCharacteristicsForService:]
  -[TVRCHMServiceWrapper _checkVolumeServicesForAccessory:]
  -[TVRCHMServiceWrapper _writeValue:toCharacteristic:]
  -[TVRCHMServiceWrapper serviceCharacteristic]
  -[TVRCHMServiceWrapper setServiceCharacteristic:]
  -[TVRCHMServiceWrapper activeCharacteristic]
  -[TVRCHMServiceWrapper setActiveCharacteristic:]
  -[TVRCHMServiceWrapper volumeSelectorCharacteristic]
  -[TVRCHMServiceWrapper setVolumeSelectorCharacteristic:]
  -[TVRCHMServiceWrapper sentWakeKey]
  -[TVRCHMServiceWrapper setSentWakeKey:]
  -[TVRCHMServiceWrapper volumeControlSupported]
  -[TVRCHMServiceWrapper setVolumeControlSupported:]


TVRMSPairingRecordStore : NSObject
  // class methods
  +[TVRMSPairingRecordStore sharedRecordStore]

  // instance methods
  -[TVRMSPairingRecordStore .cxx_destruct]
  -[TVRMSPairingRecordStore _synchronizePreferences]
  -[TVRMSPairingRecordStore init]
  -[TVRMSPairingRecordStore allPairingRecords]
  -[TVRMSPairingRecordStore pairedServiceNetworkNames]
  -[TVRMSPairingRecordStore pairingRecordForServiceWithNetworkName:]
  -[TVRMSPairingRecordStore savePairingRecord:forServiceWithNetworkName:]
  -[TVRMSPairingRecordStore removePairingRecordForServiceWithNetworkName:]


TVRMSHomeSharingServiceProvider : TVRMSBonjourServiceProvider
  // instance methods
  -[TVRMSHomeSharingServiceProvider searchType]
  -[TVRMSHomeSharingServiceProvider searchScope]
  -[TVRMSHomeSharingServiceProvider serviceDiscoverySource]


TVRCPINEntryAttributes : NSObject <NSSecureCoding>
 @property  unsigned long totalDigitCount
 @property  unsigned long numberOfDigitGroups

  // class methods
  +[TVRCPINEntryAttributes supportsSecureCoding]

  // instance methods
  -[TVRCPINEntryAttributes encodeWithCoder:]
  -[TVRCPINEntryAttributes .cxx_destruct]
  -[TVRCPINEntryAttributes initWithCoder:]
  -[TVRCPINEntryAttributes initWithDigitCount:]
  -[TVRCPINEntryAttributes initWithGroupLengths:]
  -[TVRCPINEntryAttributes totalDigitCount]
  -[TVRCPINEntryAttributes numberOfDigitGroups]
  -[TVRCPINEntryAttributes numberOfDigitsInGroup:]


TVRCKeyboardAttributes : NSObject <NSSecureCoding>
 @property  NSString *title
 @property  NSString *prompt
 @property  TVRCPINEntryAttributes *PINEntryAttributes
 @property  RTIDataPayload *rtiDataPayload
 @property  BOOL likelyPINEntry
 @property  BOOL secure
 @property  BOOL enablesReturnKeyAutomatically
 @property  long long keyboardType
 @property  long long returnKeyType
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long spellCheckingType

  // class methods
  +[TVRCKeyboardAttributes supportsSecureCoding]

  // instance methods
  -[TVRCKeyboardAttributes setPrompt:]
  -[TVRCKeyboardAttributes encodeWithCoder:]
  -[TVRCKeyboardAttributes .cxx_destruct]
  -[TVRCKeyboardAttributes title]
  -[TVRCKeyboardAttributes prompt]
  -[TVRCKeyboardAttributes _isSecure]
  -[TVRCKeyboardAttributes setTitle:]
  -[TVRCKeyboardAttributes _init]
  -[TVRCKeyboardAttributes isEqual:]
  -[TVRCKeyboardAttributes initWithCoder:]
  -[TVRCKeyboardAttributes _keyboardType]
  -[TVRCKeyboardAttributes _returnKeyType]
  -[TVRCKeyboardAttributes _setSecure:]
  -[TVRCKeyboardAttributes _autocorrectionType]
  -[TVRCKeyboardAttributes _autocapitalizationType]
  -[TVRCKeyboardAttributes _enablesReturnKeyAutomatically]
  -[TVRCKeyboardAttributes isEqualToAttributes:]
  -[TVRCKeyboardAttributes applyToTextField:]
  -[TVRCKeyboardAttributes PINEntryAttributes]
  -[TVRCKeyboardAttributes setPINEntryAttributes:]
  -[TVRCKeyboardAttributes rtiDataPayload]
  -[TVRCKeyboardAttributes setRtiDataPayload:]
  -[TVRCKeyboardAttributes _isLikelyPINEntry]
  -[TVRCKeyboardAttributes _setLikelyPINEntry:]
  -[TVRCKeyboardAttributes _setEnablesReturnKeyAutomatically:]
  -[TVRCKeyboardAttributes _setKeyboardType:]
  -[TVRCKeyboardAttributes _setReturnKeyType:]
  -[TVRCKeyboardAttributes _setAutocapitalizationType:]
  -[TVRCKeyboardAttributes _setAutocorrectionType:]
  -[TVRCKeyboardAttributes _spellCheckingType]
  -[TVRCKeyboardAttributes _setSpellCheckingType:]


TVRMSPairingSession : NSObject <NSNetServiceDelegate, TVRMSPairingServerDelegate, TVRMSPairingSession>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <TVRMSPairingSessionDelegate> *delegate
 @property  NSString *passcode
 @property  NSString *advertisedAppName
 @property  NSString *advertisedDeviceName
 @property  NSString *advertisedDeviceModel

  // class methods
  +[TVRMSPairingSession localPairingSession]
  +[TVRMSPairingSession proxyPairingSession]

  // instance methods
  -[TVRMSPairingSession passcode]
  -[TVRMSPairingSession setDelegate:]
  -[TVRMSPairingSession delegate]
  -[TVRMSPairingSession dealloc]
  -[TVRMSPairingSession .cxx_destruct]
  -[TVRMSPairingSession setPasscode:]
  -[TVRMSPairingSession init]
  -[TVRMSPairingSession netService:didNotPublish:]
  -[TVRMSPairingSession netServiceDidStop:]
  -[TVRMSPairingSession netServiceDidPublish:]
  -[TVRMSPairingSession endPairing]
  -[TVRMSPairingSession pairingServer:didPairWithService:pairingGUID:]
  -[TVRMSPairingSession pairingServerDidFail:]
  -[TVRMSPairingSession beginPairing]
  -[TVRMSPairingSession advertisedAppName]
  -[TVRMSPairingSession setAdvertisedAppName:]
  -[TVRMSPairingSession advertisedDeviceName]
  -[TVRMSPairingSession setAdvertisedDeviceName:]
  -[TVRMSPairingSession advertisedDeviceModel]
  -[TVRMSPairingSession setAdvertisedDeviceModel:]
  -[TVRMSPairingSession _startBonjourAdvertisingWithPublicKey:httpServerPort:]
  -[TVRMSPairingSession _generatePublicKey]
  -[TVRMSPairingSession _expectedPasscodeHashForPasscode:publicKey:]
  -[TVRMSPairingSession _pairingNetServiceName]


TVRMSPowerAssertion : NSObject
  // instance methods
  -[TVRMSPowerAssertion refresh]
  -[TVRMSPowerAssertion dealloc]
  -[TVRMSPowerAssertion initWithName:]


TVRMSSessionMessage : PBCodable <NSCopying>
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier

  // instance methods
  -[TVRMSSessionMessage setSessionIdentifier:]
  -[TVRMSSessionMessage sessionIdentifier]
  -[TVRMSSessionMessage copyTo:]
  -[TVRMSSessionMessage mergeFrom:]
  -[TVRMSSessionMessage dictionaryRepresentation]
  -[TVRMSSessionMessage copyWithZone:]
  -[TVRMSSessionMessage readFrom:]
  -[TVRMSSessionMessage writeTo:]
  -[TVRMSSessionMessage isEqual:]
  -[TVRMSSessionMessage hasSessionIdentifier]
  -[TVRMSSessionMessage setHasSessionIdentifier:]


TVRMSBeginPairingMessage : PBCodable <NSCopying>
 @property  BOOL hasAppName
 @property  NSString *appName
 @property  BOOL hasDeviceName
 @property  NSString *deviceName
 @property  BOOL hasDeviceModel
 @property  NSString *deviceModel
 @property  BOOL hasPasscode
 @property  NSString *passcode

  // instance methods
  -[TVRMSBeginPairingMessage appName]
  -[TVRMSBeginPairingMessage deviceModel]
  -[TVRMSBeginPairingMessage passcode]
  -[TVRMSBeginPairingMessage setDeviceName:]
  -[TVRMSBeginPairingMessage copyTo:]
  -[TVRMSBeginPairingMessage hasDeviceModel]
  -[TVRMSBeginPairingMessage .cxx_destruct]
  -[TVRMSBeginPairingMessage mergeFrom:]
  -[TVRMSBeginPairingMessage setPasscode:]
  -[TVRMSBeginPairingMessage setAppName:]
  -[TVRMSBeginPairingMessage dictionaryRepresentation]
  -[TVRMSBeginPairingMessage setDeviceModel:]
  -[TVRMSBeginPairingMessage copyWithZone:]
  -[TVRMSBeginPairingMessage readFrom:]
  -[TVRMSBeginPairingMessage deviceName]
  -[TVRMSBeginPairingMessage writeTo:]
  -[TVRMSBeginPairingMessage isEqual:]
  -[TVRMSBeginPairingMessage hasAppName]
  -[TVRMSBeginPairingMessage hasDeviceName]
  -[TVRMSBeginPairingMessage hasPasscode]


TVRMSDAAPParser : NSObject
  // class methods
  +[TVRMSDAAPParser sharedInstance]
  +[TVRMSDAAPParser objectWithData:]
  +[TVRMSDAAPParser objectWithData:error:]
  +[TVRMSDAAPParser typeForDRCPValueType:]

  // instance methods
  -[TVRMSDAAPParser parseUTF8String:length:]
  -[TVRMSDAAPParser setBool:size:inDict:forKey:]
  -[TVRMSDAAPParser setSInt8:size:inDict:forKey:]
  -[TVRMSDAAPParser setUInt8:size:inDict:forKey:]
  -[TVRMSDAAPParser setSInt16:size:inDict:forKey:]
  -[TVRMSDAAPParser setUInt16:size:inDict:forKey:]
  -[TVRMSDAAPParser setDate:size:inDict:forKey:]
  -[TVRMSDAAPParser setUInt32:size:inDict:forKey:]
  -[TVRMSDAAPParser setFloat32:size:inDict:forKey:]
  -[TVRMSDAAPParser setUInt64:size:inDict:forKey:]
  -[TVRMSDAAPParser setString:size:inDict:forKey:]
  -[TVRMSDAAPParser parseUnicodeCharacter:length:]
  -[TVRMSDAAPParser parseXMLContent:length:]
  -[TVRMSDAAPParser unknownChunk:]
  -[TVRMSDAAPParser enumerateDAAPChunksInBytes:length:usingBlock:]
  -[TVRMSDAAPParser parseMACAddressListing:length:]
  -[TVRMSDAAPParser parseServerInfo:length:]
  -[TVRMSDAAPParser parseContentCollectionDict:length:]
  -[TVRMSDAAPParser parseContentCodes:length:]
  -[TVRMSDAAPParser parseLogin:length:]
  -[TVRMSDAAPParser parseQueueSectionItems:length:]
  -[TVRMSDAAPParser parseListingItem:length:]
  -[TVRMSDAAPParser parseListingCollection:length:capacity:sectionHeaders:]
  -[TVRMSDAAPParser parseBrowseResults:length:]
  -[TVRMSDAAPParser parseListingHeader:length:]
  -[TVRMSDAAPParser parseControlPromptCollection:length:]
  -[TVRMSDAAPParser parseControlPromptResponse:length:]
  -[TVRMSDAAPParser parseGetSpeakersResponse:length:]
  -[TVRMSDAAPParser parseDACPPropertyResponse:length:]
  -[TVRMSDAAPParser processResponseCode:bytes:length:]


TVRMSNowPlayingArtworkRequestMessage : PBCodable <NSCopying>
 @property  BOOL hasArtworkIdentifier
 @property  NSString *artworkIdentifier
 @property  BOOL hasWidth
 @property  unsigned int width
 @property  BOOL hasHeight
 @property  unsigned int height
 @property  BOOL hasCompressionQuality
 @property  float compressionQuality

  // instance methods
  -[TVRMSNowPlayingArtworkRequestMessage setArtworkIdentifier:]
  -[TVRMSNowPlayingArtworkRequestMessage hasHeight]
  -[TVRMSNowPlayingArtworkRequestMessage artworkIdentifier]
  -[TVRMSNowPlayingArtworkRequestMessage setHasWidth:]
  -[TVRMSNowPlayingArtworkRequestMessage setHasHeight:]
  -[TVRMSNowPlayingArtworkRequestMessage hasWidth]
  -[TVRMSNowPlayingArtworkRequestMessage copyTo:]
  -[TVRMSNowPlayingArtworkRequestMessage hasArtworkIdentifier]
  -[TVRMSNowPlayingArtworkRequestMessage width]
  -[TVRMSNowPlayingArtworkRequestMessage height]
  -[TVRMSNowPlayingArtworkRequestMessage setWidth:]
  -[TVRMSNowPlayingArtworkRequestMessage .cxx_destruct]
  -[TVRMSNowPlayingArtworkRequestMessage mergeFrom:]
  -[TVRMSNowPlayingArtworkRequestMessage dictionaryRepresentation]
  -[TVRMSNowPlayingArtworkRequestMessage copyWithZone:]
  -[TVRMSNowPlayingArtworkRequestMessage setHeight:]
  -[TVRMSNowPlayingArtworkRequestMessage readFrom:]
  -[TVRMSNowPlayingArtworkRequestMessage writeTo:]
  -[TVRMSNowPlayingArtworkRequestMessage isEqual:]
  -[TVRMSNowPlayingArtworkRequestMessage setCompressionQuality:]
  -[TVRMSNowPlayingArtworkRequestMessage compressionQuality]
  -[TVRMSNowPlayingArtworkRequestMessage setHasCompressionQuality:]
  -[TVRMSNowPlayingArtworkRequestMessage hasCompressionQuality]


TVRMSAvailableServicesDidUpdateMessage : PBCodable <NSCopying>
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier
 @property  NSMutableArray *services

  // instance methods
  -[TVRMSAvailableServicesDidUpdateMessage setSessionIdentifier:]
  -[TVRMSAvailableServicesDidUpdateMessage sessionIdentifier]
  -[TVRMSAvailableServicesDidUpdateMessage copyTo:]
  -[TVRMSAvailableServicesDidUpdateMessage services]
  -[TVRMSAvailableServicesDidUpdateMessage .cxx_destruct]
  -[TVRMSAvailableServicesDidUpdateMessage mergeFrom:]
  -[TVRMSAvailableServicesDidUpdateMessage dictionaryRepresentation]
  -[TVRMSAvailableServicesDidUpdateMessage copyWithZone:]
  -[TVRMSAvailableServicesDidUpdateMessage setServices:]
  -[TVRMSAvailableServicesDidUpdateMessage readFrom:]
  -[TVRMSAvailableServicesDidUpdateMessage writeTo:]
  -[TVRMSAvailableServicesDidUpdateMessage isEqual:]
  -[TVRMSAvailableServicesDidUpdateMessage servicesCount]
  -[TVRMSAvailableServicesDidUpdateMessage hasSessionIdentifier]
  -[TVRMSAvailableServicesDidUpdateMessage clearServices]
  -[TVRMSAvailableServicesDidUpdateMessage addServices:]
  -[TVRMSAvailableServicesDidUpdateMessage servicesAtIndex:]
  -[TVRMSAvailableServicesDidUpdateMessage setHasSessionIdentifier:]


TVRMSRunAssertion : NSObject
  // instance methods
  -[TVRMSRunAssertion dealloc]
  -[TVRMSRunAssertion init]


TVRMSAppleTVServiceProvider : TVRMSHomeSharingServiceProvider
  // instance methods
  -[TVRMSAppleTVServiceProvider searchType]
  -[TVRMSAppleTVServiceProvider serviceLegacyFlagsFromTXTDictionary:]
  -[TVRMSAppleTVServiceProvider serviceTypeFromTXTDictionary:]


_TVRCRMSDeviceManager : NSObject
  // class methods
  +[_TVRCRMSDeviceManager sharedInstance]

  // instance methods
  -[_TVRCRMSDeviceManager _allRecords]
  -[_TVRCRMSDeviceManager pairingGUIDForNetworkName:]
  -[_TVRCRMSDeviceManager addStoredInfoForNetworkName:displayName:pairingGUID:]
  -[_TVRCRMSDeviceManager removeStoredInfoForNetworkName:]
  -[_TVRCRMSDeviceManager _performWithMutableRecords:]
  -[_TVRCRMSDeviceManager _addOrUpdateRecordInUserDefaults:]
  -[_TVRCRMSDeviceManager _removeRecordWithNetworkNameFromUserDefaults:]


TVRMSDAAPRequestManager : NSObject
 @property  NSString *hostName
 @property  NSString *pairingGUID
 @property  NSString *homeSharingGroupKey
 @property  long long sessionIdentifier
 @property  long long port
 @property  <TVRMSDAAPRequestManagerDelegate> *delegate
 @property  TVRMSFairPlaySession *fairPlaySession

  // instance methods
  -[TVRMSDAAPRequestManager setSessionIdentifier:]
  -[TVRMSDAAPRequestManager sessionIdentifier]
  -[TVRMSDAAPRequestManager port]
  -[TVRMSDAAPRequestManager setPort:]
  -[TVRMSDAAPRequestManager setDelegate:]
  -[TVRMSDAAPRequestManager delegate]
  -[TVRMSDAAPRequestManager hostName]
  -[TVRMSDAAPRequestManager .cxx_destruct]
  -[TVRMSDAAPRequestManager init]
  -[TVRMSDAAPRequestManager setHostName:]
  -[TVRMSDAAPRequestManager homeSharingGroupKey]
  -[TVRMSDAAPRequestManager setHomeSharingGroupKey:]
  -[TVRMSDAAPRequestManager pairingGUID]
  -[TVRMSDAAPRequestManager setPairingGUID:]
  -[TVRMSDAAPRequestManager requestWithPath:method:postData:queryArgs:completionHandler:]
  -[TVRMSDAAPRequestManager requestControlCommand:text:promptRevision:completionHandler:]
  -[TVRMSDAAPRequestManager requestControlCommand:text:data:controlValue:promptRevision:completionHandler:]
  -[TVRMSDAAPRequestManager fairPlaySession]
  -[TVRMSDAAPRequestManager setFairPlaySession:]


TVRMSDAAPLoginManager : NSObject
  // instance methods
  -[TVRMSDAAPLoginManager .cxx_destruct]
  -[TVRMSDAAPLoginManager initWithRequestManager:]
  -[TVRMSDAAPLoginManager loginWithCompletionHandler:]
  -[TVRMSDAAPLoginManager _requestServerInfoWithCompletionHandler:]
  -[TVRMSDAAPLoginManager _requestControlInterfaceWithCompletionHandler:]
  -[TVRMSDAAPLoginManager _requestLoginWithCompletionHandler:]
  -[TVRMSDAAPLoginManager _requestFairPlayHandshake:]
  -[TVRMSDAAPLoginManager _continueFairPlayHandshakeWithData:completionHandler:]
  -[TVRMSDAAPLoginManager _isFairplayRequiredForServerInfo:]


_RMSMessageRecord : NSObject
 @property  unsigned short messageType
 @property  id responseBlock

  // instance methods
  -[_RMSMessageRecord setMessageType:]
  -[_RMSMessageRecord .cxx_destruct]
  -[_RMSMessageRecord messageType]
  -[_RMSMessageRecord responseBlock]
  -[_RMSMessageRecord setResponseBlock:]


TVRMSIDSClient : NSObject <IDSServiceDelegate>
 @property  BOOL companionAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVRMSIDSClient sharedClient]

  // instance methods
  -[TVRMSIDSClient service:account:incomingUnhandledProtobuf:fromID:context:]
  -[TVRMSIDSClient service:devicesChanged:]
  -[TVRMSIDSClient service:account:identifier:didSendWithSuccess:error:]
  -[TVRMSIDSClient .cxx_destruct]
  -[TVRMSIDSClient init]
  -[TVRMSIDSClient _handleSessionDidEnd:]
  -[TVRMSIDSClient _handleAvailableServicesDidUpdate:]
  -[TVRMSIDSClient _handleNowPlayingInfoDidUpdate:]
  -[TVRMSIDSClient _handleNowPlayingArtworkAvailable:]
  -[TVRMSIDSClient _handleAudioRoutesDidUpdate:]
  -[TVRMSIDSClient _handleVolumeDidUpdate:]
  -[TVRMSIDSClient _handlePairingDidSucceed:]
  -[TVRMSIDSClient _handlePairingDidFail:]
  -[TVRMSIDSClient _handleWifiAvailabilityDidChange:]
  -[TVRMSIDSClient _handleBeginDiscoverySessionResponse:]
  -[TVRMSIDSClient _handleConnectToServiceResponse:]
  -[TVRMSIDSClient _handleNowPlayingArtworkDataResponse:]
  -[TVRMSIDSClient _handleBeginPairingSessionResponse:]
  -[TVRMSIDSClient _handleHeartbeatResponse:]
  -[TVRMSIDSClient _handlePickAudioRouteResponse:]
  -[TVRMSIDSClient _handleSetLikedStateResponse:]
  -[TVRMSIDSClient _handleBeginObservingNowPlayingResponse:]
  -[TVRMSIDSClient beginDiscoverySessionWithDiscoveryTypes:pairedNetworkNames:completionHandler:]
  -[TVRMSIDSClient updatePairedNetworkNames:sessionIdentifier:]
  -[TVRMSIDSClient _invokeBeginDiscoveryResponseBlock:success:session:]
  -[TVRMSIDSClient endDiscoverySession:]
  -[TVRMSIDSClient sendHeartbeatWithSessionIdentifier:completionHandler:]
  -[TVRMSIDSClient connectToService:pairingGUID:completionHandler:]
  -[TVRMSIDSClient logoutWithSessionIdentifier:]
  -[TVRMSIDSClient _invokeConnectToServiceResponseBlock:responseCode:controlInterface:session:]
  -[TVRMSIDSClient sendPlaybackCommand:sessionIdentifier:]
  -[TVRMSIDSClient setVolume:sessionIdentifier:]
  -[TVRMSIDSClient pickAudioRouteWithMacAddress:sessionIdentifier:completionHandler:]
  -[TVRMSIDSClient seekToPlaybackTime:sessionIdentifier:]
  -[TVRMSIDSClient setLikedState:itemID:databaseID:sessionIdentifier:completionHandler:]
  -[TVRMSIDSClient addToWishlist:databaseID:sessionIdentifier:completionHandler:]
  -[TVRMSIDSClient _handleAddToWishlistResponse:]
  -[TVRMSIDSClient beginObservingNowPlayingWithSessionIdentifier:completionHandler:]
  -[TVRMSIDSClient endObservingNowPlayingWithSessionIdentifier:]
  -[TVRMSIDSClient requestArtworkDataForNowPlayingInfo:width:height:compressionQuality:completionHandler:]
  -[TVRMSIDSClient _invokeArtworkDataResponseBlock:artworkData:]
  -[TVRMSIDSClient sendTouchMoveWithDirection:repeatCount:sessionIdentifier:]
  -[TVRMSIDSClient sendTouchEndWithDirection:repeatCount:sessionIdentifier:]
  -[TVRMSIDSClient sendNavigationCommand:sessionIdentifier:]
  -[TVRMSIDSClient beginPairingSessionWithPasscode:appName:deviceName:deviceModel:completionHandler:]
  -[TVRMSIDSClient endPairingSession:]
  -[TVRMSIDSClient _invokeBeginPairingResponseBlock:responseCode:session:]
  -[TVRMSIDSClient _sendMessage:type:timeout:queueOneID:priority:responseBlock:]
  -[TVRMSIDSClient _handleResponseCodeMessage:]
  -[TVRMSIDSClient _invokeResponseCodeResponseBlock:responseCode:]
  -[TVRMSIDSClient _updateCompanionAvailability]
  -[TVRMSIDSClient _isCompanionAvailable]
  -[TVRMSIDSClient _handleTimeoutForMessageWithIdentifier:]
  -[TVRMSIDSClient isCompanionAvailable]
  -[TVRMSIDSClient setCompanionAvailable:]


TVRMSControlInterfaceMessage : PBCodable <NSCopying>
 @property  BOOL hasSupportsSpeakerSelection
 @property  BOOL supportsSpeakerSelection
 @property  BOOL hasSupportsVolumeControl
 @property  BOOL supportsVolumeControl
 @property  BOOL hasSupportsDirectionalControl
 @property  BOOL supportsDirectionalControl

  // instance methods
  -[TVRMSControlInterfaceMessage copyTo:]
  -[TVRMSControlInterfaceMessage supportsVolumeControl]
  -[TVRMSControlInterfaceMessage mergeFrom:]
  -[TVRMSControlInterfaceMessage dictionaryRepresentation]
  -[TVRMSControlInterfaceMessage copyWithZone:]
  -[TVRMSControlInterfaceMessage readFrom:]
  -[TVRMSControlInterfaceMessage writeTo:]
  -[TVRMSControlInterfaceMessage isEqual:]
  -[TVRMSControlInterfaceMessage setSupportsSpeakerSelection:]
  -[TVRMSControlInterfaceMessage setHasSupportsSpeakerSelection:]
  -[TVRMSControlInterfaceMessage hasSupportsSpeakerSelection]
  -[TVRMSControlInterfaceMessage setSupportsVolumeControl:]
  -[TVRMSControlInterfaceMessage setHasSupportsVolumeControl:]
  -[TVRMSControlInterfaceMessage hasSupportsVolumeControl]
  -[TVRMSControlInterfaceMessage setSupportsDirectionalControl:]
  -[TVRMSControlInterfaceMessage setHasSupportsDirectionalControl:]
  -[TVRMSControlInterfaceMessage hasSupportsDirectionalControl]
  -[TVRMSControlInterfaceMessage supportsSpeakerSelection]
  -[TVRMSControlInterfaceMessage supportsDirectionalControl]


_RMSSessionRecord : NSObject
 @property  int refreshCount
 @property  int timeout
 @property  id session
 @property  TVRMSPowerAssertion *powerAssertion
 @property  TVRMSRunAssertion *runAssertion

  // instance methods
  -[_RMSSessionRecord session]
  -[_RMSSessionRecord setSession:]
  -[_RMSSessionRecord setTimeout:]
  -[_RMSSessionRecord .cxx_destruct]
  -[_RMSSessionRecord powerAssertion]
  -[_RMSSessionRecord timeout]
  -[_RMSSessionRecord setPowerAssertion:]
  -[_RMSSessionRecord refreshCount]
  -[_RMSSessionRecord setRefreshCount:]
  -[_RMSSessionRecord runAssertion]
  -[_RMSSessionRecord setRunAssertion:]


TVRMSSessionManager : NSObject
 @property  <TVRMSSessionManagerDelegate> *delegate

  // instance methods
  -[TVRMSSessionManager setDelegate:]
  -[TVRMSSessionManager delegate]
  -[TVRMSSessionManager .cxx_destruct]
  -[TVRMSSessionManager sessionWithIdentifier:]
  -[TVRMSSessionManager init]
  -[TVRMSSessionManager identifierForSession:]
  -[TVRMSSessionManager beginSession:timeout:shouldTakePowerAssertion:completionHandler:]
  -[TVRMSSessionManager endSessionWithIdentifier:completionHandler:]
  -[TVRMSSessionManager refreshSessionWithIdentifier:]
  -[TVRMSSessionManager persistedSessionIdentifiers]
  -[TVRMSSessionManager _scheduleSessionExpirationWithIdentifier:timeout:]
  -[TVRMSSessionManager _uniqueSessionIdentifier]
  -[TVRMSSessionManager _updatePersistedSessionIdentifiers]


TVRMSDAAPEncoder : NSObject
 @property  NSData *data

  // instance methods
  -[TVRMSDAAPEncoder .cxx_destruct]
  -[TVRMSDAAPEncoder init]
  -[TVRMSDAAPEncoder data]
  -[TVRMSDAAPEncoder encodeInt32:forCode:]
  -[TVRMSDAAPEncoder encodeInt64:forCode:]
  -[TVRMSDAAPEncoder encodeString:forCode:]
  -[TVRMSDAAPEncoder encodeData:forCode:]
  -[TVRMSDAAPEncoder encodeBytes:length:forCode:]


TVRMSUpdatePairedNetworNamesMessage : PBCodable <NSCopying>
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier
 @property  NSMutableArray *pairedNetworkNames

  // instance methods
  -[TVRMSUpdatePairedNetworNamesMessage setSessionIdentifier:]
  -[TVRMSUpdatePairedNetworNamesMessage sessionIdentifier]
  -[TVRMSUpdatePairedNetworNamesMessage copyTo:]
  -[TVRMSUpdatePairedNetworNamesMessage .cxx_destruct]
  -[TVRMSUpdatePairedNetworNamesMessage mergeFrom:]
  -[TVRMSUpdatePairedNetworNamesMessage dictionaryRepresentation]
  -[TVRMSUpdatePairedNetworNamesMessage copyWithZone:]
  -[TVRMSUpdatePairedNetworNamesMessage readFrom:]
  -[TVRMSUpdatePairedNetworNamesMessage writeTo:]
  -[TVRMSUpdatePairedNetworNamesMessage isEqual:]
  -[TVRMSUpdatePairedNetworNamesMessage hasSessionIdentifier]
  -[TVRMSUpdatePairedNetworNamesMessage pairedNetworkNames]
  -[TVRMSUpdatePairedNetworNamesMessage setPairedNetworkNames:]
  -[TVRMSUpdatePairedNetworNamesMessage setHasSessionIdentifier:]
  -[TVRMSUpdatePairedNetworNamesMessage clearPairedNetworkNames]
  -[TVRMSUpdatePairedNetworNamesMessage addPairedNetworkNames:]
  -[TVRMSUpdatePairedNetworNamesMessage pairedNetworkNamesCount]
  -[TVRMSUpdatePairedNetworNamesMessage pairedNetworkNamesAtIndex:]


TVRMSWifiAvailabilityDidChangeMessage : PBCodable <NSCopying>
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier
 @property  BOOL hasWifiAvailable
 @property  BOOL wifiAvailable

  // instance methods
  -[TVRMSWifiAvailabilityDidChangeMessage setSessionIdentifier:]
  -[TVRMSWifiAvailabilityDidChangeMessage sessionIdentifier]
  -[TVRMSWifiAvailabilityDidChangeMessage copyTo:]
  -[TVRMSWifiAvailabilityDidChangeMessage mergeFrom:]
  -[TVRMSWifiAvailabilityDidChangeMessage dictionaryRepresentation]
  -[TVRMSWifiAvailabilityDidChangeMessage copyWithZone:]
  -[TVRMSWifiAvailabilityDidChangeMessage readFrom:]
  -[TVRMSWifiAvailabilityDidChangeMessage writeTo:]
  -[TVRMSWifiAvailabilityDidChangeMessage isEqual:]
  -[TVRMSWifiAvailabilityDidChangeMessage hasSessionIdentifier]
  -[TVRMSWifiAvailabilityDidChangeMessage setHasSessionIdentifier:]
  -[TVRMSWifiAvailabilityDidChangeMessage setWifiAvailable:]
  -[TVRMSWifiAvailabilityDidChangeMessage setHasWifiAvailable:]
  -[TVRMSWifiAvailabilityDidChangeMessage hasWifiAvailable]
  -[TVRMSWifiAvailabilityDidChangeMessage wifiAvailable]


TVRXManagedConfigManager : NSObject <MCProfileConnectionObserver>
 @property  NSSet *allowedDeviceNames
 @property  NSArray *allowedTVs
 @property  BOOL managedConfigProfileInstalled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVRXManagedConfigManager sharedInstance]

  // instance methods
  -[TVRXManagedConfigManager dealloc]
  -[TVRXManagedConfigManager .cxx_destruct]
  -[TVRXManagedConfigManager profileConnectionDidReceiveProfileListChangedNotification:userInfo:]
  -[TVRXManagedConfigManager init]
  -[TVRXManagedConfigManager refreshState]
  -[TVRXManagedConfigManager allowedTVs]
  -[TVRXManagedConfigManager setAllowedTVs:]
  -[TVRXManagedConfigManager isManagedConfigProfileInstalled]
  -[TVRXManagedConfigManager allowedDeviceWithName:]
  -[TVRXManagedConfigManager _convertMACAddressesToData:]
  -[TVRXManagedConfigManager allowedDeviceNames]
  -[TVRXManagedConfigManager setAllowedDeviceNames:]


TVRMSSetLikeStateMessage : PBCodable <NSCopying>
 @property  BOOL hasLikeState
 @property  int likeState
 @property  BOOL hasItemID
 @property  unsigned long itemID
 @property  BOOL hasDatabaseID
 @property  unsigned long databaseID
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier

  // instance methods
  -[TVRMSSetLikeStateMessage setSessionIdentifier:]
  -[TVRMSSetLikeStateMessage sessionIdentifier]
  -[TVRMSSetLikeStateMessage databaseID]
  -[TVRMSSetLikeStateMessage setDatabaseID:]
  -[TVRMSSetLikeStateMessage copyTo:]
  -[TVRMSSetLikeStateMessage setItemID:]
  -[TVRMSSetLikeStateMessage mergeFrom:]
  -[TVRMSSetLikeStateMessage itemID]
  -[TVRMSSetLikeStateMessage dictionaryRepresentation]
  -[TVRMSSetLikeStateMessage copyWithZone:]
  -[TVRMSSetLikeStateMessage readFrom:]
  -[TVRMSSetLikeStateMessage writeTo:]
  -[TVRMSSetLikeStateMessage isEqual:]
  -[TVRMSSetLikeStateMessage hasItemID]
  -[TVRMSSetLikeStateMessage hasSessionIdentifier]
  -[TVRMSSetLikeStateMessage likeState]
  -[TVRMSSetLikeStateMessage setLikeState:]
  -[TVRMSSetLikeStateMessage setHasItemID:]
  -[TVRMSSetLikeStateMessage setHasDatabaseID:]
  -[TVRMSSetLikeStateMessage hasDatabaseID]
  -[TVRMSSetLikeStateMessage setHasSessionIdentifier:]
  -[TVRMSSetLikeStateMessage setHasLikeState:]
  -[TVRMSSetLikeStateMessage hasLikeState]


TVRMSSetVolumeMessage : PBCodable <NSCopying>
 @property  BOOL hasVolume
 @property  float volume
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier

  // instance methods
  -[TVRMSSetVolumeMessage setSessionIdentifier:]
  -[TVRMSSetVolumeMessage sessionIdentifier]
  -[TVRMSSetVolumeMessage copyTo:]
  -[TVRMSSetVolumeMessage hasVolume]
  -[TVRMSSetVolumeMessage setVolume:]
  -[TVRMSSetVolumeMessage mergeFrom:]
  -[TVRMSSetVolumeMessage volume]
  -[TVRMSSetVolumeMessage dictionaryRepresentation]
  -[TVRMSSetVolumeMessage copyWithZone:]
  -[TVRMSSetVolumeMessage readFrom:]
  -[TVRMSSetVolumeMessage setHasVolume:]
  -[TVRMSSetVolumeMessage writeTo:]
  -[TVRMSSetVolumeMessage isEqual:]
  -[TVRMSSetVolumeMessage hasSessionIdentifier]
  -[TVRMSSetVolumeMessage setHasSessionIdentifier:]


TVRMSFairPlayKeyboardEncryption : NSObject
  // instance methods
  -[TVRMSFairPlayKeyboardEncryption dealloc]
  -[TVRMSFairPlayKeyboardEncryption reset]
  -[TVRMSFairPlayKeyboardEncryption .cxx_destruct]
  -[TVRMSFairPlayKeyboardEncryption isTrusted]
  -[TVRMSFairPlayKeyboardEncryption encryptString:]
  -[TVRMSFairPlayKeyboardEncryption setLeafString:]
  -[TVRMSFairPlayKeyboardEncryption setChallengeString:]
  -[TVRMSFairPlayKeyboardEncryption _convertStringToData:]
  -[TVRMSFairPlayKeyboardEncryption _convertDataToString:]
  -[TVRMSFairPlayKeyboardEncryption _verifyCert:]


TVRCXPCClient : NSObject <TVRCXPCRequestProtocol>
 @property  NSXPCConnection *xpcConnection
 @property  <TVRCXPCRequestProtocol> *remoteObject
 @property  NSMutableDictionary *eventObserversByID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVRCXPCClient sharedInstance]

  // instance methods
  -[TVRCXPCClient remoteObject]
  -[TVRCXPCClient xpcConnection]
  -[TVRCXPCClient setRemoteObject:]
  -[TVRCXPCClient .cxx_destruct]
  -[TVRCXPCClient setXpcConnection:]
  -[TVRCXPCClient init]
  -[TVRCXPCClient openConnectionToDeviceWithIdentifier:]
  -[TVRCXPCClient closeConnectionToDeviceWithIdentifier:withType:]
  -[TVRCXPCClient fulfillAuthChallengeForDeviceWithIdentifier:withLocallyEnteredCode:]
  -[TVRCXPCClient cancelAuthChallengeForDeviceWithIdentifier:]
  -[TVRCXPCClient sendButtonEvent:toDeviceWithIdentifier:]
  -[TVRCXPCClient sendTouchEvent:toDeviceWithIdentifier:]
  -[TVRCXPCClient sendGameControllerEvent:toDeviceWithIdentifier:]
  -[TVRCXPCClient sendInputText:toDeviceWithIdentifier:]
  -[TVRCXPCClient sendInputReturnKeyToDeviceWithIdentifier:]
  -[TVRCXPCClient sendInputTextPayload:toDeviceWithIdentifier:]
  -[TVRCXPCClient setVoiceRecorderAutomaticRecording:forDeviceWithIdentifier:]
  -[TVRCXPCClient startVoiceRecordingForDeviceWithIdentifier:]
  -[TVRCXPCClient stopVoiceRecordingForDeviceWithIdentifier:]
  -[TVRCXPCClient beginDeviceQuery]
  -[TVRCXPCClient endDeviceQuery]
  -[TVRCXPCClient fetchActiveMREndpointUIDWithCompletion:]
  -[TVRCXPCClient sendEvent:toDeviceWithIdentifier:options:response:]
  -[TVRCXPCClient launchViewServiceForDeviceWithIdentifier:]
  -[TVRCXPCClient enableTVRemoteOnLockscreen:forDeviceIdentifier:]
  -[TVRCXPCClient addEventObserver:forDeviceWithIdentifier:]
  -[TVRCXPCClient removeEventObserver:forDeviceWithIdentifier:]
  -[TVRCXPCClient deviceUpdatedState:]
  -[TVRCXPCClient deviceWithState:encounteredAuthChallengeOfType:attributes:codeToEnterOnDevice:throttleSeconds:]
  -[TVRCXPCClient deviceQueryUpdatedDiscoveredDevices:]
  -[TVRCXPCClient _setupConnectionIfNeeded]
  -[TVRCXPCClient _disconnectAllDevices]
  -[TVRCXPCClient _broadcastStateUpdateToDevices:]
  -[TVRCXPCClient _postInvalidationNotification]
  -[TVRCXPCClient eventObserversByID]
  -[TVRCXPCClient setEventObserversByID:]


TVRMSTouchRemoteSocket : NSObject <NSStreamDelegate>
 @property  <TVRMSTouchRemoteSocketDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRMSTouchRemoteSocket stream:handleEvent:]
  -[TVRMSTouchRemoteSocket disconnect]
  -[TVRMSTouchRemoteSocket connect]
  -[TVRMSTouchRemoteSocket setDelegate:]
  -[TVRMSTouchRemoteSocket delegate]
  -[TVRMSTouchRemoteSocket dealloc]
  -[TVRMSTouchRemoteSocket .cxx_destruct]
  -[TVRMSTouchRemoteSocket initWithHost:port:encryptionKey:]
  -[TVRMSTouchRemoteSocket sendTouchCode:timeInMilliseconds:location:]
  -[TVRMSTouchRemoteSocket _encryptData:]


_TVRCRMSDeviceQuery : NSObject <TVRMSDiscoverySessionDelegate>
 @property  TVRMSService *service
 @property  <TVRMSDiscoverySession> *legacyDiscoverySession
 @property  NSMutableDictionary *wrapperToIdentifierMapping
 @property  <_TVRCRMSDeviceQueryDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRCRMSDeviceQuery setDelegate:]
  -[_TVRCRMSDeviceQuery delegate]
  -[_TVRCRMSDeviceQuery setService:]
  -[_TVRCRMSDeviceQuery .cxx_destruct]
  -[_TVRCRMSDeviceQuery stop]
  -[_TVRCRMSDeviceQuery service]
  -[_TVRCRMSDeviceQuery start]
  -[_TVRCRMSDeviceQuery wrapperToIdentifierMapping]
  -[_TVRCRMSDeviceQuery setWrapperToIdentifierMapping:]
  -[_TVRCRMSDeviceQuery discoverySessionDidUpdateAvailableServices:]
  -[_TVRCRMSDeviceQuery _shouldReportDevice:]
  -[_TVRCRMSDeviceQuery legacyDiscoverySession]
  -[_TVRCRMSDeviceQuery setLegacyDiscoverySession:]


TVRCXPCProtocolManager : NSObject
  // class methods
  +[TVRCXPCProtocolManager requestInterface]
  +[TVRCXPCProtocolManager responseInterface]


TVRMSConnectToServiceResponseMessage : PBCodable <NSCopying>
 @property  BOOL hasResponseCode
 @property  int responseCode
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier
 @property  BOOL hasControlInterface
 @property  TVRMSControlInterfaceMessage *controlInterface

  // instance methods
  -[TVRMSConnectToServiceResponseMessage setSessionIdentifier:]
  -[TVRMSConnectToServiceResponseMessage setResponseCode:]
  -[TVRMSConnectToServiceResponseMessage sessionIdentifier]
  -[TVRMSConnectToServiceResponseMessage responseCode]
  -[TVRMSConnectToServiceResponseMessage copyTo:]
  -[TVRMSConnectToServiceResponseMessage .cxx_destruct]
  -[TVRMSConnectToServiceResponseMessage mergeFrom:]
  -[TVRMSConnectToServiceResponseMessage dictionaryRepresentation]
  -[TVRMSConnectToServiceResponseMessage copyWithZone:]
  -[TVRMSConnectToServiceResponseMessage readFrom:]
  -[TVRMSConnectToServiceResponseMessage writeTo:]
  -[TVRMSConnectToServiceResponseMessage isEqual:]
  -[TVRMSConnectToServiceResponseMessage hasSessionIdentifier]
  -[TVRMSConnectToServiceResponseMessage setHasResponseCode:]
  -[TVRMSConnectToServiceResponseMessage hasResponseCode]
  -[TVRMSConnectToServiceResponseMessage controlInterface]
  -[TVRMSConnectToServiceResponseMessage setHasSessionIdentifier:]
  -[TVRMSConnectToServiceResponseMessage hasControlInterface]
  -[TVRMSConnectToServiceResponseMessage setControlInterface:]


TVRCDeviceInfo : NSObject
 @property  NSString *mediaRemoteID
 @property  NSString *airplayID

  // instance methods
  -[TVRCDeviceInfo .cxx_destruct]
  -[TVRCDeviceInfo mediaRemoteID]
  -[TVRCDeviceInfo airplayID]
  -[TVRCDeviceInfo containsID:]
  -[TVRCDeviceInfo _populateValidIdentifiers:]


TVRCRapportRemoteTextInputKeyboardImpl : NSObject <RTIInputSystemSessionDelegate, RTIInputSystemPayloadDelegate, TVRXKeyboardImpl>
 @property  BOOL editing
 @property  RTIInputSystemSourceSession *currentSession
 @property  TVRCKeyboardAttributes *currentAttributes
 @property  TVRXKeyboardController *keyboardController
 @property  TVRCRPCompanionLinkClientWrapper *companionLinkWrapper
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRCRapportRemoteTextInputKeyboardImpl currentSession]
  -[TVRCRapportRemoteTextInputKeyboardImpl text]
  -[TVRCRapportRemoteTextInputKeyboardImpl attributes]
  -[TVRCRapportRemoteTextInputKeyboardImpl setEditing:]
  -[TVRCRapportRemoteTextInputKeyboardImpl .cxx_destruct]
  -[TVRCRapportRemoteTextInputKeyboardImpl keyboardController]
  -[TVRCRapportRemoteTextInputKeyboardImpl setCurrentSession:]
  -[TVRCRapportRemoteTextInputKeyboardImpl handleTextActionPayload:]
  -[TVRCRapportRemoteTextInputKeyboardImpl inputSessionDidDie:]
  -[TVRCRapportRemoteTextInputKeyboardImpl isEditing]
  -[TVRCRapportRemoteTextInputKeyboardImpl editing]
  -[TVRCRapportRemoteTextInputKeyboardImpl setText:]
  -[TVRCRapportRemoteTextInputKeyboardImpl inputSessionDidBegin:]
  -[TVRCRapportRemoteTextInputKeyboardImpl inputSessionDidEnd:]
  -[TVRCRapportRemoteTextInputKeyboardImpl currentAttributes]
  -[TVRCRapportRemoteTextInputKeyboardImpl setKeyboardController:]
  -[TVRCRapportRemoteTextInputKeyboardImpl sendReturnKey]
  -[TVRCRapportRemoteTextInputKeyboardImpl setTextActionPayload:]
  -[TVRCRapportRemoteTextInputKeyboardImpl setCompanionLinkWrapper:]
  -[TVRCRapportRemoteTextInputKeyboardImpl _stopObservingTelevisionEditingSession]
  -[TVRCRapportRemoteTextInputKeyboardImpl _receivedInputSourceSession:]
  -[TVRCRapportRemoteTextInputKeyboardImpl companionLinkWrapper]
  -[TVRCRapportRemoteTextInputKeyboardImpl setCurrentAttributes:]


TVRMSControlInterface : NSObject
 @property  BOOL supportsSpeakerSelection
 @property  BOOL supportsVolumeControl
 @property  BOOL supportsDirectionalControl

  // instance methods
  -[TVRMSControlInterface supportsVolumeControl]
  -[TVRMSControlInterface initWithProtobuf:]
  -[TVRMSControlInterface protobuf]
  -[TVRMSControlInterface setSupportsSpeakerSelection:]
  -[TVRMSControlInterface setSupportsVolumeControl:]
  -[TVRMSControlInterface setSupportsDirectionalControl:]
  -[TVRMSControlInterface supportsSpeakerSelection]
  -[TVRMSControlInterface supportsDirectionalControl]


TVRMSAudioRoute : NSObject
 @property  NSString *displayName
 @property  unsigned long macAddress
 @property  BOOL supportsVideo
 @property  BOOL selected

  // class methods
  +[TVRMSAudioRoute audioRoutesFromProtobufs:]
  +[TVRMSAudioRoute protobufsFromAudioRoutes:]

  // instance methods
  -[TVRMSAudioRoute macAddress]
  -[TVRMSAudioRoute supportsVideo]
  -[TVRMSAudioRoute setSelected:]
  -[TVRMSAudioRoute .cxx_destruct]
  -[TVRMSAudioRoute setDisplayName:]
  -[TVRMSAudioRoute initWithProtobuf:]
  -[TVRMSAudioRoute setMacAddress:]
  -[TVRMSAudioRoute displayName]
  -[TVRMSAudioRoute isSelected]
  -[TVRMSAudioRoute protobuf]
  -[TVRMSAudioRoute setSupportsVideo:]
  -[TVRMSAudioRoute isEqualToAudioRoute:]


TVRCDevice : NSObject
 @property  NSString *identifier
 @property  NSString *name
 @property  TVRCDeviceState *deviceState
 @property  TVRCKeyboardController *keyboardController
 @property  TVRCVoiceRecorder *voiceRecorder
 @property  TVRCDeviceInfo *info
 @property  long long connectionType
 @property  <TVRCDeviceDelegate> *delegate
 @property  NSString *model
 @property  BOOL supportsTouchEvents
 @property  long long connectionState
 @property  NSSet *supportedButtons
 @property  BOOL paired
 @property  unsigned long pairingCapability

  // instance methods
  -[TVRCDevice connectionState]
  -[TVRCDevice connect]
  -[TVRCDevice isPaired]
  -[TVRCDevice identifier]
  -[TVRCDevice model]
  -[TVRCDevice setDelegate:]
  -[TVRCDevice delegate]
  -[TVRCDevice dealloc]
  -[TVRCDevice .cxx_destruct]
  -[TVRCDevice setDeviceState:]
  -[TVRCDevice connectionType]
  -[TVRCDevice keyboardController]
  -[TVRCDevice containsIdentifier:]
  -[TVRCDevice setInfo:]
  -[TVRCDevice setIdentifier:]
  -[TVRCDevice setName:]
  -[TVRCDevice info]
  -[TVRCDevice name]
  -[TVRCDevice isEqualToDevice:]
  -[TVRCDevice deviceState]
  -[TVRCDevice initWithDeviceIdentifier:]
  -[TVRCDevice sendButtonEvent:]
  -[TVRCDevice sendGameControllerEvent:]
  -[TVRCDevice supportedButtons]
  -[TVRCDevice supportsTouchEvents]
  -[TVRCDevice sendTouchEvent:]
  -[TVRCDevice setKeyboardController:]
  -[TVRCDevice pairingCapability]
  -[TVRCDevice voiceRecorder]
  -[TVRCDevice disconnectWithType:]
  -[TVRCDevice isInEditingSession]
  -[TVRCDevice _deviceUpdatedState:]
  -[TVRCDevice _deviceEncounteredAuthChallengeType:attributes:codeToEnterOnDevice:throttleSeconds:]
  -[TVRCDevice _disconnectDeviceDueToConnectionInterruption]
  -[TVRCDevice _sendRTIDataPayload:]
  -[TVRCDevice enableTVRemoteOnLockscreen:]
  -[TVRCDevice setVoiceRecorder:]


TVRCRPCompanionLinkClientWrapper : NSObject <RPSiriSessionDelegate>
 @property  TVRCRapportMediaEventsManager *mediaManager
 @property  RPCompanionLinkClient *companionClient
 @property  RPCompanionLinkDevice *device
 @property  RPSiriSession *siriSession
 @property  RPHIDSession *hidSession
 @property  RPHIDTouchSession *hidTouchSession
 @property  RPTextInputSession *textInputSession
 @property  @? rtiSessionHandler
 @property  NSString *sourceVersion
 @property  unsigned long featureFlags
 @property  BOOL activated
 @property  BOOL authenticated
 @property  BOOL startedSetup
 @property  BOOL connected
 @property  BOOL hidSessionActivated
 @property  BOOL hidTouchSessionActivated
 @property  BOOL textInputSessionActivated
 @property  BOOL pttFeatureSupported
 @property  BOOL siriEnabled
 @property  long long attentionState
 @property  NSString *name
 @property  NSString *identifier
 @property  NSDictionary *alternateIdentifiers
 @property  NSString *model
 @property  <_TVRCCompanionLinkClientWrapperDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVRCRPCompanionLinkClientWrapper wrapperWithDevice:]

  // instance methods
  -[TVRCRPCompanionLinkClientWrapper featureFlags]
  -[TVRCRPCompanionLinkClientWrapper disconnect]
  -[TVRCRPCompanionLinkClientWrapper setFeatureFlags:]
  -[TVRCRPCompanionLinkClientWrapper connect]
  -[TVRCRPCompanionLinkClientWrapper isPaired]
  -[TVRCRPCompanionLinkClientWrapper identifier]
  -[TVRCRPCompanionLinkClientWrapper authenticated]
  -[TVRCRPCompanionLinkClientWrapper model]
  -[TVRCRPCompanionLinkClientWrapper setConnected:]
  -[TVRCRPCompanionLinkClientWrapper setDelegate:]
  -[TVRCRPCompanionLinkClientWrapper connected]
  -[TVRCRPCompanionLinkClientWrapper delegate]
  -[TVRCRPCompanionLinkClientWrapper setActivated:]
  -[TVRCRPCompanionLinkClientWrapper .cxx_destruct]
  -[TVRCRPCompanionLinkClientWrapper setDevice:]
  -[TVRCRPCompanionLinkClientWrapper device]
  -[TVRCRPCompanionLinkClientWrapper sourceVersion]
  -[TVRCRPCompanionLinkClientWrapper connectionType]
  -[TVRCRPCompanionLinkClientWrapper reconnect]
  -[TVRCRPCompanionLinkClientWrapper name]
  -[TVRCRPCompanionLinkClientWrapper initWithDevice:]
  -[TVRCRPCompanionLinkClientWrapper disconnectWithError:]
  -[TVRCRPCompanionLinkClientWrapper setAuthenticated:]
  -[TVRCRPCompanionLinkClientWrapper activated]
  -[TVRCRPCompanionLinkClientWrapper _connectionInfo]
  -[TVRCRPCompanionLinkClientWrapper sendButtonEvent:]
  -[TVRCRPCompanionLinkClientWrapper isSiriEnabled]
  -[TVRCRPCompanionLinkClientWrapper setSiriEnabled:]
  -[TVRCRPCompanionLinkClientWrapper supportedButtons]
  -[TVRCRPCompanionLinkClientWrapper rpSiriSessionDidReceiveStopRecording]
  -[TVRCRPCompanionLinkClientWrapper _disconnectWithError:]
  -[TVRCRPCompanionLinkClientWrapper alternateIdentifiers]
  -[TVRCRPCompanionLinkClientWrapper supportsTouchEvents]
  -[TVRCRPCompanionLinkClientWrapper sendTouchEvent:]
  -[TVRCRPCompanionLinkClientWrapper sendEvent:options:response:]
  -[TVRCRPCompanionLinkClientWrapper getCurrentRTISourceSession:]
  -[TVRCRPCompanionLinkClientWrapper setRTISessionHandler:]
  -[TVRCRPCompanionLinkClientWrapper _logError:name:]
  -[TVRCRPCompanionLinkClientWrapper _featureSupported:]
  -[TVRCRPCompanionLinkClientWrapper _resolveFeatureFlags]
  -[TVRCRPCompanionLinkClientWrapper _stringForFeatureFlags:]
  -[TVRCRPCompanionLinkClientWrapper _invalidateAndReset]
  -[TVRCRPCompanionLinkClientWrapper _createHidSession]
  -[TVRCRPCompanionLinkClientWrapper _setupFeatureServices]
  -[TVRCRPCompanionLinkClientWrapper _setupTouchSession]
  -[TVRCRPCompanionLinkClientWrapper _setupTextInputSession]
  -[TVRCRPCompanionLinkClientWrapper _updateAttentionState:]
  -[TVRCRPCompanionLinkClientWrapper _fetchTVSystemStatusAndStartMonitoring]
  -[TVRCRPCompanionLinkClientWrapper _startMonitoringTVSystemStatus]
  -[TVRCRPCompanionLinkClientWrapper _stopMonitoringTVSystemStatus]
  -[TVRCRPCompanionLinkClientWrapper _commandForButtonEvent:]
  -[TVRCRPCompanionLinkClientWrapper _stateForButtonEvent:]
  -[TVRCRPCompanionLinkClientWrapper _handleSideEffectsForEvent:]
  -[TVRCRPCompanionLinkClientWrapper _updateConnectedState]
  -[TVRCRPCompanionLinkClientWrapper _launchApplicationOrURL:]
  -[TVRCRPCompanionLinkClientWrapper _fetchSiriEnabledWithCompletionHandler:]
  -[TVRCRPCompanionLinkClientWrapper attentionState]
  -[TVRCRPCompanionLinkClientWrapper setAttentionState:]
  -[TVRCRPCompanionLinkClientWrapper mediaManager]
  -[TVRCRPCompanionLinkClientWrapper setMediaManager:]
  -[TVRCRPCompanionLinkClientWrapper companionClient]
  -[TVRCRPCompanionLinkClientWrapper setCompanionClient:]
  -[TVRCRPCompanionLinkClientWrapper siriSession]
  -[TVRCRPCompanionLinkClientWrapper setSiriSession:]
  -[TVRCRPCompanionLinkClientWrapper hidSession]
  -[TVRCRPCompanionLinkClientWrapper setHidSession:]
  -[TVRCRPCompanionLinkClientWrapper hidTouchSession]
  -[TVRCRPCompanionLinkClientWrapper setHidTouchSession:]
  -[TVRCRPCompanionLinkClientWrapper textInputSession]
  -[TVRCRPCompanionLinkClientWrapper setTextInputSession:]
  -[TVRCRPCompanionLinkClientWrapper rtiSessionHandler]
  -[TVRCRPCompanionLinkClientWrapper setRtiSessionHandler:]
  -[TVRCRPCompanionLinkClientWrapper startedSetup]
  -[TVRCRPCompanionLinkClientWrapper setStartedSetup:]
  -[TVRCRPCompanionLinkClientWrapper hidSessionActivated]
  -[TVRCRPCompanionLinkClientWrapper setHidSessionActivated:]
  -[TVRCRPCompanionLinkClientWrapper hidTouchSessionActivated]
  -[TVRCRPCompanionLinkClientWrapper setHidTouchSessionActivated:]
  -[TVRCRPCompanionLinkClientWrapper textInputSessionActivated]
  -[TVRCRPCompanionLinkClientWrapper setTextInputSessionActivated:]
  -[TVRCRPCompanionLinkClientWrapper pttFeatureSupported]
  -[TVRCRPCompanionLinkClientWrapper setPttFeatureSupported:]


TVRCRapportMediaEventsManager : NSObject
 @property  NSSet *volumeCommands
 @property  NSMutableSet *mediaCommands
 @property  RPMediaControlSession *mediaSession
 @property  @? eventHandler
 @property  int currentSetting
 @property  NSSet *supportedMediaCommands
 @property  BOOL volumeSupported

  // instance methods
  -[TVRCRapportMediaEventsManager eventHandler]
  -[TVRCRapportMediaEventsManager dealloc]
  -[TVRCRapportMediaEventsManager .cxx_destruct]
  -[TVRCRapportMediaEventsManager setEventHandler:]
  -[TVRCRapportMediaEventsManager mediaSession]
  -[TVRCRapportMediaEventsManager setMediaSession:]
  -[TVRCRapportMediaEventsManager initWithCompanionLinkClient:eventHandler:]
  -[TVRCRapportMediaEventsManager supportedMediaCommands]
  -[TVRCRapportMediaEventsManager volumeSupported]
  -[TVRCRapportMediaEventsManager sendMediaEvent:]
  -[TVRCRapportMediaEventsManager _setupMediaCommands:]
  -[TVRCRapportMediaEventsManager _commandForMediaButtonEvent:]
  -[TVRCRapportMediaEventsManager _captionSettingForButtonEvent:]
  -[TVRCRapportMediaEventsManager _refreshCaptionState]
  -[TVRCRapportMediaEventsManager supportedCaptionEvents]
  -[TVRCRapportMediaEventsManager volumeCommands]
  -[TVRCRapportMediaEventsManager setVolumeCommands:]
  -[TVRCRapportMediaEventsManager mediaCommands]
  -[TVRCRapportMediaEventsManager setMediaCommands:]
  -[TVRCRapportMediaEventsManager currentSetting]
  -[TVRCRapportMediaEventsManager setCurrentSetting:]


TVRMSBeginPairingResponseMessage : PBCodable <NSCopying>
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier
 @property  BOOL hasResponseCode
 @property  int responseCode

  // instance methods
  -[TVRMSBeginPairingResponseMessage setSessionIdentifier:]
  -[TVRMSBeginPairingResponseMessage setResponseCode:]
  -[TVRMSBeginPairingResponseMessage sessionIdentifier]
  -[TVRMSBeginPairingResponseMessage responseCode]
  -[TVRMSBeginPairingResponseMessage copyTo:]
  -[TVRMSBeginPairingResponseMessage mergeFrom:]
  -[TVRMSBeginPairingResponseMessage dictionaryRepresentation]
  -[TVRMSBeginPairingResponseMessage copyWithZone:]
  -[TVRMSBeginPairingResponseMessage readFrom:]
  -[TVRMSBeginPairingResponseMessage writeTo:]
  -[TVRMSBeginPairingResponseMessage isEqual:]
  -[TVRMSBeginPairingResponseMessage hasSessionIdentifier]
  -[TVRMSBeginPairingResponseMessage setHasResponseCode:]
  -[TVRMSBeginPairingResponseMessage hasResponseCode]
  -[TVRMSBeginPairingResponseMessage setHasSessionIdentifier:]


TVRCGameControllerEvent : NSObject <NSSecureCoding>
 @property  double timestamp
 @property  BOOL down
 @property  {CGPoint=dd} joystickLocation

  // class methods
  +[TVRCGameControllerEvent supportsSecureCoding]

  // instance methods
  -[TVRCGameControllerEvent encodeWithCoder:]
  -[TVRCGameControllerEvent timestamp]
  -[TVRCGameControllerEvent initWithCoder:]
  -[TVRCGameControllerEvent isDown]
  -[TVRCGameControllerEvent _initWithTimestamp:isDown:joystickLocation:]
  -[TVRCGameControllerEvent joystickLocation]


TVRMSSessionProxy : NSObject
 @property  int sessionIdentifier

  // instance methods
  -[TVRMSSessionProxy setSessionIdentifier:]
  -[TVRMSSessionProxy sessionIdentifier]
  -[TVRMSSessionProxy _applicationDidBecomeActive:]
  -[TVRMSSessionProxy dealloc]
  -[TVRMSSessionProxy .cxx_destruct]
  -[TVRMSSessionProxy initWithTimeout:]
  -[TVRMSSessionProxy init]
  -[TVRMSSessionProxy _applicationWillResignActiveNotification:]
  -[TVRMSSessionProxy heartbeatDidFail]
  -[TVRMSSessionProxy _sendHeartbeat:]
  -[TVRMSSessionProxy beginHeartbeat]
  -[TVRMSSessionProxy endHeartbeat]
  -[TVRMSSessionProxy heartbeatTime]
  -[TVRMSSessionProxy sessionMatchesNotification:]


TVRMSPairingServer : NSObject
 @property  <TVRMSPairingServerDelegate> *delegate
 @property  unsigned short port

  // instance methods
  -[TVRMSPairingServer port]
  -[TVRMSPairingServer setDelegate:]
  -[TVRMSPairingServer stopServer]
  -[TVRMSPairingServer delegate]
  -[TVRMSPairingServer .cxx_destruct]
  -[TVRMSPairingServer startServerWithExpectedPasscodeHash:advertisedDeviceName:advertisedDeviceModel:]
  -[TVRMSPairingServer handleHTTPServerInvalidated]
  -[TVRMSPairingServer handleHTTPServerDidReceiveError:]
  -[TVRMSPairingServer handleHTTPServerDidOpenConnection:]
  -[TVRMSPairingServer handleHTTPServerDidCloseConnection:]
  -[TVRMSPairingServer handleHTTPServerConnectionInvalidated]
  -[TVRMSPairingServer handleHTTPServerConnectionDidReceiveError:]
  -[TVRMSPairingServer _parsedQueryParametersWithQueryString:]
  -[TVRMSPairingServer handleHTTPServerConnectionDidReceiveRequest:]
  -[TVRMSPairingServer handleHTTPServerConnectionDidReplyToRequest:withResponse:]
  -[TVRMSPairingServer handleHTTPServerConnectionDidFailToReplyToRequest:withResponse:]


TVRCDeviceQuery : NSObject
 @property  <TVRCDeviceQueryDelegate> *delegate
 @property  NSSet *devices

  // class methods
  +[TVRCDeviceQuery _allDiscoveredDevices]
  +[TVRCDeviceQuery _allDiscoveredDevicesDidUpdate:]
  +[TVRCDeviceQuery fetchActiveEndpointUIDWithCompletion:]

  // instance methods
  -[TVRCDeviceQuery setDelegate:]
  -[TVRCDeviceQuery delegate]
  -[TVRCDeviceQuery devices]
  -[TVRCDeviceQuery dealloc]
  -[TVRCDeviceQuery .cxx_destruct]
  -[TVRCDeviceQuery stop]
  -[TVRCDeviceQuery start]


TVRCDeviceEventManager : NSObject
 @property  TVRCDevice *device
 @property  @? eventResponseHandler

  // instance methods
  -[TVRCDeviceEventManager .cxx_destruct]
  -[TVRCDeviceEventManager setDevice:]
  -[TVRCDeviceEventManager device]
  -[TVRCDeviceEventManager initWithDevice:responseHandler:]
  -[TVRCDeviceEventManager sendEvent:options:]
  -[TVRCDeviceEventManager eventResponseHandler]
  -[TVRCDeviceEventManager setEventResponseHandler:]


TVRXDevice : NSObject
 @property  NSString *name
 @property  NSString *identifier
 @property  NSDictionary *alternateIdentifiers
 @property  NSString *model
 @property  NSSet *supportedButtons
 @property  <_TVRCDeviceImpl> *impl
 @property  <_TVRXDeviceDelegate> *delegate
 @property  long long connectionType
 @property  BOOL supportsTouchEvents
 @property  BOOL paired
 @property  long long connectionState
 @property  TVRXVoiceRecorder *voiceRecorder
 @property  TVRXKeyboardController *keyboardController
 @property  unsigned long pairingCapability
 @property  long long attentionState

  // instance methods
  -[TVRXDevice disconnect]
  -[TVRXDevice connectionState]
  -[TVRXDevice setModel:]
  -[TVRXDevice connect]
  -[TVRXDevice identifier]
  -[TVRXDevice model]
  -[TVRXDevice setDelegate:]
  -[TVRXDevice delegate]
  -[TVRXDevice paired]
  -[TVRXDevice .cxx_destruct]
  -[TVRXDevice connectionType]
  -[TVRXDevice keyboardController]
  -[TVRXDevice containsIdentifier:]
  -[TVRXDevice setIdentifier:]
  -[TVRXDevice setName:]
  -[TVRXDevice allIdentifiers]
  -[TVRXDevice name]
  -[TVRXDevice _impl]
  -[TVRXDevice _init]
  -[TVRXDevice _setImpl:]
  -[TVRXDevice sendButtonEvent:]
  -[TVRXDevice sendGameControllerEvent:]
  -[TVRXDevice supportedButtons]
  -[TVRXDevice alternateIdentifiers]
  -[TVRXDevice supportsTouchEvents]
  -[TVRXDevice sendTouchEvent:]
  -[TVRXDevice pairingCapability]
  -[TVRXDevice setAlternateIdentifiers:]
  -[TVRXDevice setSupportedButtons:]
  -[TVRXDevice voiceRecorder]
  -[TVRXDevice sendEvent:options:response:]
  -[TVRXDevice attentionState]
  -[TVRXDevice _setDeviceName:]
  -[TVRXDevice _setSupportedButtons:]
  -[TVRXDevice _encounteredAuthenticationChallenge:]
  -[TVRXDevice _connectionAttemptSucceeded]
  -[TVRXDevice _disconnected:error:]
  -[TVRXDevice _setActiveEndpoint]
  -[TVRXDevice _authenticationIsSupported]
  -[TVRXDevice _applyButtonEventSideEffects:]
  -[TVRXDevice _deviceUpdateAttentionState]
  -[TVRXDevice _setIdentifier:alternateIdentifiers:name:model:supportedButtons:]


TVRMSServiceMessage : PBCodable <NSCopying>
 @property  BOOL hasDisplayName
 @property  NSString *displayName
 @property  BOOL hasNetworkName
 @property  NSString *networkName
 @property  BOOL hasHostName
 @property  NSString *hostName
 @property  BOOL hasPort
 @property  int port
 @property  BOOL hasServiceType
 @property  int serviceType
 @property  BOOL hasServiceDiscoverySource
 @property  int serviceDiscoverySource
 @property  BOOL hasServiceLegacyFlags
 @property  int serviceLegacyFlags
 @property  BOOL hasHomeSharingGroupKey
 @property  NSString *homeSharingGroupKey

  // instance methods
  -[TVRMSServiceMessage networkName]
  -[TVRMSServiceMessage setHasServiceType:]
  -[TVRMSServiceMessage port]
  -[TVRMSServiceMessage hasServiceType]
  -[TVRMSServiceMessage setPort:]
  -[TVRMSServiceMessage copyTo:]
  -[TVRMSServiceMessage setServiceType:]
  -[TVRMSServiceMessage hostName]
  -[TVRMSServiceMessage setNetworkName:]
  -[TVRMSServiceMessage .cxx_destruct]
  -[TVRMSServiceMessage setDisplayName:]
  -[TVRMSServiceMessage mergeFrom:]
  -[TVRMSServiceMessage serviceType]
  -[TVRMSServiceMessage dictionaryRepresentation]
  -[TVRMSServiceMessage copyWithZone:]
  -[TVRMSServiceMessage hasDisplayName]
  -[TVRMSServiceMessage readFrom:]
  -[TVRMSServiceMessage displayName]
  -[TVRMSServiceMessage writeTo:]
  -[TVRMSServiceMessage isEqual:]
  -[TVRMSServiceMessage hasPort]
  -[TVRMSServiceMessage setHostName:]
  -[TVRMSServiceMessage setHasPort:]
  -[TVRMSServiceMessage hasNetworkName]
  -[TVRMSServiceMessage serviceDiscoverySource]
  -[TVRMSServiceMessage setServiceDiscoverySource:]
  -[TVRMSServiceMessage serviceLegacyFlags]
  -[TVRMSServiceMessage setServiceLegacyFlags:]
  -[TVRMSServiceMessage homeSharingGroupKey]
  -[TVRMSServiceMessage setHomeSharingGroupKey:]
  -[TVRMSServiceMessage hasHostName]
  -[TVRMSServiceMessage setHasServiceDiscoverySource:]
  -[TVRMSServiceMessage hasServiceDiscoverySource]
  -[TVRMSServiceMessage setHasServiceLegacyFlags:]
  -[TVRMSServiceMessage hasServiceLegacyFlags]
  -[TVRMSServiceMessage hasHomeSharingGroupKey]


TVRMSPlaybackCommandMessage : PBCodable <NSCopying>
 @property  BOOL hasPlaybackCommand
 @property  int playbackCommand
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier

  // instance methods
  -[TVRMSPlaybackCommandMessage setSessionIdentifier:]
  -[TVRMSPlaybackCommandMessage sessionIdentifier]
  -[TVRMSPlaybackCommandMessage copyTo:]
  -[TVRMSPlaybackCommandMessage mergeFrom:]
  -[TVRMSPlaybackCommandMessage dictionaryRepresentation]
  -[TVRMSPlaybackCommandMessage copyWithZone:]
  -[TVRMSPlaybackCommandMessage readFrom:]
  -[TVRMSPlaybackCommandMessage writeTo:]
  -[TVRMSPlaybackCommandMessage isEqual:]
  -[TVRMSPlaybackCommandMessage hasSessionIdentifier]
  -[TVRMSPlaybackCommandMessage playbackCommand]
  -[TVRMSPlaybackCommandMessage setPlaybackCommand:]
  -[TVRMSPlaybackCommandMessage setHasSessionIdentifier:]
  -[TVRMSPlaybackCommandMessage setHasPlaybackCommand:]
  -[TVRMSPlaybackCommandMessage hasPlaybackCommand]


TVRCRapportDeviceImpl : NSObject <_TVRCDeviceImpl, _TVRCCompanionLinkClientWrapperDelegate>
 @property  TVRXDevice *device
 @property  TVRCRPCompanionLinkClientWrapper *deviceWrapper
 @property  TVRXKeyboardController *keyboardController
 @property  TVRCRapportRemoteTextInputKeyboardImpl *keyboardImpl
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVRCRapportDeviceImpl implWithDevice:]

  // instance methods
  -[TVRCRapportDeviceImpl disconnect]
  -[TVRCRapportDeviceImpl connect]
  -[TVRCRapportDeviceImpl isPaired]
  -[TVRCRapportDeviceImpl identifier]
  -[TVRCRapportDeviceImpl model]
  -[TVRCRapportDeviceImpl .cxx_destruct]
  -[TVRCRapportDeviceImpl setDevice:]
  -[TVRCRapportDeviceImpl device]
  -[TVRCRapportDeviceImpl connectionType]
  -[TVRCRapportDeviceImpl keyboardController]
  -[TVRCRapportDeviceImpl name]
  -[TVRCRapportDeviceImpl initWithDevice:]
  -[TVRCRapportDeviceImpl sendButtonEvent:]
  -[TVRCRapportDeviceImpl sendGameControllerEvent:]
  -[TVRCRapportDeviceImpl supportedButtons]
  -[TVRCRapportDeviceImpl alternateIdentifiers]
  -[TVRCRapportDeviceImpl supportsTouchEvents]
  -[TVRCRapportDeviceImpl sendTouchEvent:]
  -[TVRCRapportDeviceImpl _setupKeyboardController]
  -[TVRCRapportDeviceImpl setKeyboardController:]
  -[TVRCRapportDeviceImpl keyboardImpl]
  -[TVRCRapportDeviceImpl setKeyboardImpl:]
  -[TVRCRapportDeviceImpl pairingCapability]
  -[TVRCRapportDeviceImpl connectedToDevice:]
  -[TVRCRapportDeviceImpl disconnectedFromDevice:error:]
  -[TVRCRapportDeviceImpl deviceUpdatedSupportedButtons:]
  -[TVRCRapportDeviceImpl deviceEncounteredAuthenticationChallenge:]
  -[TVRCRapportDeviceImpl voiceRecorder]
  -[TVRCRapportDeviceImpl setAuthenticationSupported:]
  -[TVRCRapportDeviceImpl sendEvent:options:response:]
  -[TVRCRapportDeviceImpl deviceAttentionState]
  -[TVRCRapportDeviceImpl deviceWrapper]
  -[TVRCRapportDeviceImpl setDeviceWrapper:]
  -[TVRCRapportDeviceImpl deviceUpdatedAttentionState]


TVRCMediaRemoteEndpointManager : NSObject
 @property  NSObject<OS_dispatch_queue> *mediaRemoteQueue

  // class methods
  +[TVRCMediaRemoteEndpointManager sharedInstance]

  // instance methods
  -[TVRCMediaRemoteEndpointManager .cxx_destruct]
  -[TVRCMediaRemoteEndpointManager init]
  -[TVRCMediaRemoteEndpointManager updateActiveEndpoint:withCompletion:]
  -[TVRCMediaRemoteEndpointManager fetchActiveEndpointWithCompletion:]
  -[TVRCMediaRemoteEndpointManager mediaRemoteQueue]
  -[TVRCMediaRemoteEndpointManager setMediaRemoteQueue:]


_TVRCExpiringStore : NSObject
 @property  NSMutableSet *store
 @property  NSMapTable *identifierToBlockMap

  // instance methods
  -[_TVRCExpiringStore store]
  -[_TVRCExpiringStore setStore:]
  -[_TVRCExpiringStore dealloc]
  -[_TVRCExpiringStore .cxx_destruct]
  -[_TVRCExpiringStore containsIdentifier:]
  -[_TVRCExpiringStore removeIdentifier:]
  -[_TVRCExpiringStore init]
  -[_TVRCExpiringStore _removeIdentifierAndPerformCompletion:]
  -[_TVRCExpiringStore addIdentifier:withExpiration:completion:]
  -[_TVRCExpiringStore identifierToBlockMap]
  -[_TVRCExpiringStore setIdentifierToBlockMap:]


_TVRCRapportDeviceRecord : NSObject
 @property  NSString *identifier
 @property  NSString *name
 @property  unsigned long transports
 @property  BOOL hasAvailableTransports

  // instance methods
  -[_TVRCRapportDeviceRecord identifier]
  -[_TVRCRapportDeviceRecord .cxx_destruct]
  -[_TVRCRapportDeviceRecord setIdentifier:]
  -[_TVRCRapportDeviceRecord setName:]
  -[_TVRCRapportDeviceRecord name]
  -[_TVRCRapportDeviceRecord initWithDevice:]
  -[_TVRCRapportDeviceRecord transports]
  -[_TVRCRapportDeviceRecord addTransportForStatusFlag:]
  -[_TVRCRapportDeviceRecord removeTransportForStatusFlag:]
  -[_TVRCRapportDeviceRecord updateTransportsForStatusFlags:]
  -[_TVRCRapportDeviceRecord hasAvailableTransports]
  -[_TVRCRapportDeviceRecord _transportForStatusFlag:]


_TVRCRapportDeviceManager : NSObject
 @property  NSMutableDictionary *deviceRecords

  // instance methods
  -[_TVRCRapportDeviceManager .cxx_destruct]
  -[_TVRCRapportDeviceManager init]
  -[_TVRCRapportDeviceManager removeDevice:]
  -[_TVRCRapportDeviceManager recordForDevice:]
  -[_TVRCRapportDeviceManager createOrUpdateRecordForDevice:]
  -[_TVRCRapportDeviceManager _identifierForDevice:]
  -[_TVRCRapportDeviceManager _checkIfDuplicateNameButDifferentIDSIdentifier:device:]
  -[_TVRCRapportDeviceManager deviceRecords]
  -[_TVRCRapportDeviceManager setDeviceRecords:]


TVRCRapportDeviceQuery : NSObject
 @property  _TVRCExpiringStore *expiringStore
 @property  RPCompanionLinkClient *companionLinkClient
 @property  NSMutableDictionary *wrapperToIdentifierMapping
 @property  _TVRCRapportDeviceManager *deviceManager
 @property  <TVRCRapportDeviceQueryDelegate> *delegate

  // instance methods
  -[TVRCRapportDeviceQuery deviceManager]
  -[TVRCRapportDeviceQuery setDelegate:]
  -[TVRCRapportDeviceQuery delegate]
  -[TVRCRapportDeviceQuery dealloc]
  -[TVRCRapportDeviceQuery .cxx_destruct]
  -[TVRCRapportDeviceQuery stop]
  -[TVRCRapportDeviceQuery setCompanionLinkClient:]
  -[TVRCRapportDeviceQuery companionLinkClient]
  -[TVRCRapportDeviceQuery start]
  -[TVRCRapportDeviceQuery init]
  -[TVRCRapportDeviceQuery setDeviceManager:]
  -[TVRCRapportDeviceQuery _deviceFound:]
  -[TVRCRapportDeviceQuery _deviceLost:]
  -[TVRCRapportDeviceQuery wrapperToIdentifierMapping]
  -[TVRCRapportDeviceQuery setWrapperToIdentifierMapping:]
  -[TVRCRapportDeviceQuery _disconnectAllDevices]
  -[TVRCRapportDeviceQuery _shouldReportDevice:]
  -[TVRCRapportDeviceQuery _mdmConfigChanged:]
  -[TVRCRapportDeviceQuery _wrapperForDevice:]
  -[TVRCRapportDeviceQuery _disconnectDevice:]
  -[TVRCRapportDeviceQuery expiringStore]
  -[TVRCRapportDeviceQuery setExpiringStore:]


TVRMSNowPlayingInfo : NSObject
 @property  unsigned long itemID
 @property  unsigned long databaseID
 @property  NSString *trackName
 @property  NSString *artistName
 @property  NSString *albumName
 @property  double timestamp
 @property  double timeRemaining
 @property  double totalDuration
 @property  int revisionNumber
 @property  long long mediaKind
 @property  long long playbackState
 @property  long long likedState
 @property  long long scrubbableState
 @property  BOOL canSkipNext
 @property  BOOL canSkipPrevious
 @property  BOOL canWishlist
 @property  BOOL hasChapterData
 @property  BOOL likeable
 @property  BOOL playing
 @property  NSString *artworkIdentifier

  // instance methods
  -[TVRMSNowPlayingInfo setAlbumName:]
  -[TVRMSNowPlayingInfo databaseID]
  -[TVRMSNowPlayingInfo setDatabaseID:]
  -[TVRMSNowPlayingInfo mediaKind]
  -[TVRMSNowPlayingInfo setMediaKind:]
  -[TVRMSNowPlayingInfo artistName]
  -[TVRMSNowPlayingInfo artworkIdentifier]
  -[TVRMSNowPlayingInfo setTimestamp:]
  -[TVRMSNowPlayingInfo playbackState]
  -[TVRMSNowPlayingInfo setItemID:]
  -[TVRMSNowPlayingInfo setPlaybackState:]
  -[TVRMSNowPlayingInfo timeRemaining]
  -[TVRMSNowPlayingInfo totalDuration]
  -[TVRMSNowPlayingInfo .cxx_destruct]
  -[TVRMSNowPlayingInfo albumName]
  -[TVRMSNowPlayingInfo initWithProtobuf:]
  -[TVRMSNowPlayingInfo itemID]
  -[TVRMSNowPlayingInfo isPlaying]
  -[TVRMSNowPlayingInfo setArtistName:]
  -[TVRMSNowPlayingInfo timestamp]
  -[TVRMSNowPlayingInfo protobuf]
  -[TVRMSNowPlayingInfo likedState]
  -[TVRMSNowPlayingInfo setLikedState:]
  -[TVRMSNowPlayingInfo setTotalDuration:]
  -[TVRMSNowPlayingInfo setTimeRemaining:]
  -[TVRMSNowPlayingInfo setHasChapterData:]
  -[TVRMSNowPlayingInfo hasChapterData]
  -[TVRMSNowPlayingInfo setRevisionNumber:]
  -[TVRMSNowPlayingInfo setScrubbableState:]
  -[TVRMSNowPlayingInfo setCanSkipNext:]
  -[TVRMSNowPlayingInfo setCanSkipPrevious:]
  -[TVRMSNowPlayingInfo setLikeable:]
  -[TVRMSNowPlayingInfo setCanWishlist:]
  -[TVRMSNowPlayingInfo trackName]
  -[TVRMSNowPlayingInfo setTrackName:]
  -[TVRMSNowPlayingInfo revisionNumber]
  -[TVRMSNowPlayingInfo scrubbableState]
  -[TVRMSNowPlayingInfo canSkipNext]
  -[TVRMSNowPlayingInfo canSkipPrevious]
  -[TVRMSNowPlayingInfo canWishlist]
  -[TVRMSNowPlayingInfo isLikeable]


TVRMSReachability : NSObject
  // class methods
  +[TVRMSReachability reachabilityWithAddress:]
  +[TVRMSReachability reachabilityForInternetConnection]
  +[TVRMSReachability reachabilityWithHostName:]
  +[TVRMSReachability reachabilityForLocalWiFi]

  // instance methods
  -[TVRMSReachability stopNotifier]
  -[TVRMSReachability localWiFiStatusForFlags:]
  -[TVRMSReachability dealloc]
  -[TVRMSReachability connectionRequired]
  -[TVRMSReachability networkStatusForFlags:]
  -[TVRMSReachability currentReachabilityStatus]
  -[TVRMSReachability startNotifier]


TVRMSBeginDiscoveryMessage : PBCodable <NSCopying>
 @property  BOOL hasDiscoveryTypes
 @property  int discoveryTypes
 @property  NSMutableArray *pairedNetworkNames
 @property  BOOL hasHasPairedNetworkNames
 @property  BOOL hasPairedNetworkNames

  // instance methods
  -[TVRMSBeginDiscoveryMessage copyTo:]
  -[TVRMSBeginDiscoveryMessage .cxx_destruct]
  -[TVRMSBeginDiscoveryMessage mergeFrom:]
  -[TVRMSBeginDiscoveryMessage dictionaryRepresentation]
  -[TVRMSBeginDiscoveryMessage copyWithZone:]
  -[TVRMSBeginDiscoveryMessage readFrom:]
  -[TVRMSBeginDiscoveryMessage writeTo:]
  -[TVRMSBeginDiscoveryMessage isEqual:]
  -[TVRMSBeginDiscoveryMessage discoveryTypes]
  -[TVRMSBeginDiscoveryMessage setDiscoveryTypes:]
  -[TVRMSBeginDiscoveryMessage pairedNetworkNames]
  -[TVRMSBeginDiscoveryMessage setPairedNetworkNames:]
  -[TVRMSBeginDiscoveryMessage clearPairedNetworkNames]
  -[TVRMSBeginDiscoveryMessage addPairedNetworkNames:]
  -[TVRMSBeginDiscoveryMessage pairedNetworkNamesCount]
  -[TVRMSBeginDiscoveryMessage pairedNetworkNamesAtIndex:]
  -[TVRMSBeginDiscoveryMessage setHasDiscoveryTypes:]
  -[TVRMSBeginDiscoveryMessage hasDiscoveryTypes]
  -[TVRMSBeginDiscoveryMessage setHasPairedNetworkNames:]
  -[TVRMSBeginDiscoveryMessage setHasHasPairedNetworkNames:]
  -[TVRMSBeginDiscoveryMessage hasHasPairedNetworkNames]
  -[TVRMSBeginDiscoveryMessage hasPairedNetworkNames]


TVRXKeyboardController : NSObject
 @property  <TVRXKeyboardImpl> *keyboardImpl
 @property  <TVRXKeyboardControllerDelegate> *delegate
 @property  BOOL editing
 @property  TVRCKeyboardAttributes *attributes
 @property  NSString *text

  // instance methods
  -[TVRXKeyboardController text]
  -[TVRXKeyboardController attributes]
  -[TVRXKeyboardController setDelegate:]
  -[TVRXKeyboardController delegate]
  -[TVRXKeyboardController .cxx_destruct]
  -[TVRXKeyboardController _endSession]
  -[TVRXKeyboardController isEditing]
  -[TVRXKeyboardController _init]
  -[TVRXKeyboardController setText:]
  -[TVRXKeyboardController _keyboardImpl]
  -[TVRXKeyboardController sendReturnKey]
  -[TVRXKeyboardController sendTextActionPayload:]
  -[TVRXKeyboardController _setKeyboardImpl:]
  -[TVRXKeyboardController _editingSessionBeganWithAttributes:]
  -[TVRXKeyboardController _editingSessionUpdatedText:]
  -[TVRXKeyboardController _editingSessionUpdatedAttributes:]
  -[TVRXKeyboardController _editingSessionEnded]
  -[TVRXKeyboardController _textActionPayloadGenerated:]
  -[TVRXKeyboardController _beginSessionWithAttributes:]


TVRCVoiceRecorder : NSObject
 @property  BOOL recordsAutomatically

  // instance methods
  -[TVRCVoiceRecorder .cxx_destruct]
  -[TVRCVoiceRecorder stop]
  -[TVRCVoiceRecorder start]
  -[TVRCVoiceRecorder recordsAutomatically]
  -[TVRCVoiceRecorder setRecordsAutomatically:]
  -[TVRCVoiceRecorder _initWithDevice:]


TVRMSDAAPNowPlayingManager : NSObject
 @property  <TVRMSDAAPNowPlayingManagerDelegate> *delegate
 @property  TVRMSControlInterface *controlInterface
 @property  BOOL observing

  // instance methods
  -[TVRMSDAAPNowPlayingManager setDelegate:]
  -[TVRMSDAAPNowPlayingManager delegate]
  -[TVRMSDAAPNowPlayingManager .cxx_destruct]
  -[TVRMSDAAPNowPlayingManager isObserving]
  -[TVRMSDAAPNowPlayingManager controlInterface]
  -[TVRMSDAAPNowPlayingManager initWithRequestManager:]
  -[TVRMSDAAPNowPlayingManager setControlInterface:]
  -[TVRMSDAAPNowPlayingManager beginObservingNowPlaying]
  -[TVRMSDAAPNowPlayingManager endObservingNowPlaying]
  -[TVRMSDAAPNowPlayingManager _refreshNowPlayingInfoRequest]
  -[TVRMSDAAPNowPlayingManager _requestNowPlayingInfoWithCompletionHandler:]
  -[TVRMSDAAPNowPlayingManager _requestArtworkDataIfNecessaryForNowPlayingInfo:]
  -[TVRMSDAAPNowPlayingManager _scheduleArtworkRetryForNowPlayingInfo:delay:]
  -[TVRMSDAAPNowPlayingManager _cancelArtworkRetryTimer]
  -[TVRMSDAAPNowPlayingManager _requestAudioRoutes]
  -[TVRMSDAAPNowPlayingManager _requestVolume]
  -[TVRMSDAAPNowPlayingManager _audioRoutes:equalAudioRoutes:]


TVRMSDAAPControlSession : NSObject <TVRMSDAAPNowPlayingManagerDelegate, TVRMSDAAPRequestManagerDelegate, TVRMSDAAPTouchRemoteManagerDelegate, TVRMSDAAPControlSession>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <TVRMSDAAPControlSessionDelegate> *delegate
 @property  TVRMSService *service

  // class methods
  +[TVRMSDAAPControlSession localControlSession]
  +[TVRMSDAAPControlSession proxyControlSession]

  // instance methods
  -[TVRMSDAAPControlSession logout]
  -[TVRMSDAAPControlSession setDelegate:]
  -[TVRMSDAAPControlSession delegate]
  -[TVRMSDAAPControlSession dealloc]
  -[TVRMSDAAPControlSession .cxx_destruct]
  -[TVRMSDAAPControlSession sendPlaybackCommand:completionHandler:]
  -[TVRMSDAAPControlSession service]
  -[TVRMSDAAPControlSession init]
  -[TVRMSDAAPControlSession connectToService:pairingGUID:completionHandler:]
  -[TVRMSDAAPControlSession beginObservingNowPlaying]
  -[TVRMSDAAPControlSession endObservingNowPlaying]
  -[TVRMSDAAPControlSession nowPlayingManager:didUpdateNowPlayingInfo:]
  -[TVRMSDAAPControlSession nowPlayingManager:artworkDataDidBecomeAvailable:identifier:]
  -[TVRMSDAAPControlSession nowPlayingManager:didUpdateAudioRoutes:]
  -[TVRMSDAAPControlSession nowPlayingManager:didUpdateVolume:]
  -[TVRMSDAAPControlSession requestManagerFailedWithUnauthorizedError:]
  -[TVRMSDAAPControlSession requestManagerFailedWithUnknownError:]
  -[TVRMSDAAPControlSession touchRemoteManagerDidDisconnect:]
  -[TVRMSDAAPControlSession touchRemoteManagerKeyboardEditingSessionDidBegin:]
  -[TVRMSDAAPControlSession touchRemoteManagerKeyboardEditingSessionDidUpdate:]
  -[TVRMSDAAPControlSession touchRemoteManagerKeyboardEditingSessionDidEnd:]
  -[TVRMSDAAPControlSession setVolume:completionHandler:]
  -[TVRMSDAAPControlSession pickAudioRoute:completionHandler:]
  -[TVRMSDAAPControlSession seekToPlaybackTime:completionHandler:]
  -[TVRMSDAAPControlSession setLikedState:itemID:databaseID:completionHandler:]
  -[TVRMSDAAPControlSession addToWishlist:databaseID:completionHandler:]
  -[TVRMSDAAPControlSession sendTouchMoveWithDirection:repeatCount:]
  -[TVRMSDAAPControlSession sendTouchEndWithDirection:repeatCount:]
  -[TVRMSDAAPControlSession sendNavigationCommand:]
  -[TVRMSDAAPControlSession setKeyboardText:]
  -[TVRMSDAAPControlSession clearKeyboardText]
  -[TVRMSDAAPControlSession sendKeyboardReturnCommand]
  -[TVRMSDAAPControlSession _initializeManagersWithControlInterface:completionHandler:]
  -[TVRMSDAAPControlSession _stringFromRMSPlaybackCommand:]


TVRCPreferredDeviceManager : NSObject
  // class methods
  +[TVRCPreferredDeviceManager sharedInstance]

  // instance methods
  -[TVRCPreferredDeviceManager setPreferredDevice:]
  -[TVRCPreferredDeviceManager preferredDeviceIdentifier]
  -[TVRCPreferredDeviceManager preferredDeviceSearchTimeout]


TVRMSDAAPControlSessionProxy : TVRMSSessionProxy <TVRMSDAAPControlSession>
 @property  <TVRMSDAAPControlSessionDelegate> *delegate
 @property  TVRMSService *service
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRMSDAAPControlSessionProxy logout]
  -[TVRMSDAAPControlSessionProxy setDelegate:]
  -[TVRMSDAAPControlSessionProxy delegate]
  -[TVRMSDAAPControlSessionProxy dealloc]
  -[TVRMSDAAPControlSessionProxy .cxx_destruct]
  -[TVRMSDAAPControlSessionProxy sendPlaybackCommand:completionHandler:]
  -[TVRMSDAAPControlSessionProxy service]
  -[TVRMSDAAPControlSessionProxy init]
  -[TVRMSDAAPControlSessionProxy _handleSessionDidEndNotification:]
  -[TVRMSDAAPControlSessionProxy heartbeatDidFail]
  -[TVRMSDAAPControlSessionProxy connectToService:pairingGUID:completionHandler:]
  -[TVRMSDAAPControlSessionProxy beginObservingNowPlaying]
  -[TVRMSDAAPControlSessionProxy endObservingNowPlaying]
  -[TVRMSDAAPControlSessionProxy setVolume:completionHandler:]
  -[TVRMSDAAPControlSessionProxy pickAudioRoute:completionHandler:]
  -[TVRMSDAAPControlSessionProxy seekToPlaybackTime:completionHandler:]
  -[TVRMSDAAPControlSessionProxy setLikedState:itemID:databaseID:completionHandler:]
  -[TVRMSDAAPControlSessionProxy addToWishlist:databaseID:completionHandler:]
  -[TVRMSDAAPControlSessionProxy sendTouchMoveWithDirection:repeatCount:]
  -[TVRMSDAAPControlSessionProxy sendTouchEndWithDirection:repeatCount:]
  -[TVRMSDAAPControlSessionProxy sendNavigationCommand:]
  -[TVRMSDAAPControlSessionProxy setKeyboardText:]
  -[TVRMSDAAPControlSessionProxy clearKeyboardText]
  -[TVRMSDAAPControlSessionProxy sendKeyboardReturnCommand]
  -[TVRMSDAAPControlSessionProxy _handleNowPlayingInfoDidUpdateNotification:]
  -[TVRMSDAAPControlSessionProxy _handleNowPlayingArtworkDidBecomeAvailableNotification:]
  -[TVRMSDAAPControlSessionProxy _handleAudioRoutesDidUpdateNotification:]
  -[TVRMSDAAPControlSessionProxy _handleVolumeDidUpdateNotification:]
  -[TVRMSDAAPControlSessionProxy _notifyDelegateForArtworkChange]


TVRMSResponseCodeMessage : PBCodable <NSCopying>
 @property  BOOL hasResponseCode
 @property  int responseCode

  // instance methods
  -[TVRMSResponseCodeMessage setResponseCode:]
  -[TVRMSResponseCodeMessage responseCode]
  -[TVRMSResponseCodeMessage copyTo:]
  -[TVRMSResponseCodeMessage mergeFrom:]
  -[TVRMSResponseCodeMessage dictionaryRepresentation]
  -[TVRMSResponseCodeMessage copyWithZone:]
  -[TVRMSResponseCodeMessage readFrom:]
  -[TVRMSResponseCodeMessage writeTo:]
  -[TVRMSResponseCodeMessage isEqual:]
  -[TVRMSResponseCodeMessage setHasResponseCode:]
  -[TVRMSResponseCodeMessage hasResponseCode]


TVRMSPairingSessionProxy : TVRMSSessionProxy <TVRMSPairingSession>
 @property  <TVRMSPairingSessionDelegate> *delegate
 @property  NSString *passcode
 @property  NSString *advertisedAppName
 @property  NSString *advertisedDeviceName
 @property  NSString *advertisedDeviceModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRMSPairingSessionProxy passcode]
  -[TVRMSPairingSessionProxy setDelegate:]
  -[TVRMSPairingSessionProxy delegate]
  -[TVRMSPairingSessionProxy dealloc]
  -[TVRMSPairingSessionProxy .cxx_destruct]
  -[TVRMSPairingSessionProxy setPasscode:]
  -[TVRMSPairingSessionProxy init]
  -[TVRMSPairingSessionProxy endPairing]
  -[TVRMSPairingSessionProxy _handleSessionDidEndNotification:]
  -[TVRMSPairingSessionProxy heartbeatDidFail]
  -[TVRMSPairingSessionProxy beginPairing]
  -[TVRMSPairingSessionProxy advertisedAppName]
  -[TVRMSPairingSessionProxy setAdvertisedAppName:]
  -[TVRMSPairingSessionProxy advertisedDeviceName]
  -[TVRMSPairingSessionProxy setAdvertisedDeviceName:]
  -[TVRMSPairingSessionProxy advertisedDeviceModel]
  -[TVRMSPairingSessionProxy setAdvertisedDeviceModel:]
  -[TVRMSPairingSessionProxy _handleDidPairWithServiceNotification:]
  -[TVRMSPairingSessionProxy _handlePairingDidFailNotification:]
  -[TVRMSPairingSessionProxy _notifyDelegatePairingFailed]


TVRXDeviceAuthenticationChallenge : NSObject
 @property  long long challengeType
 @property  long long challengeAttributes
 @property  long long throttleSeconds
 @property  NSString *codeToEnterOnDevice

  // class methods
  +[TVRXDeviceAuthenticationChallenge _challengeWithCodeToEnterOnDevice:cancellationHandler:]
  +[TVRXDeviceAuthenticationChallenge _challengeWithCodeToEnterLocally:]

  // instance methods
  -[TVRXDeviceAuthenticationChallenge .cxx_destruct]
  -[TVRXDeviceAuthenticationChallenge _init]
  -[TVRXDeviceAuthenticationChallenge cancel]
  -[TVRXDeviceAuthenticationChallenge throttleSeconds]
  -[TVRXDeviceAuthenticationChallenge userEnteredCodeLocally:]
  -[TVRXDeviceAuthenticationChallenge challengeType]
  -[TVRXDeviceAuthenticationChallenge challengeAttributes]
  -[TVRXDeviceAuthenticationChallenge setChallengeAttributes:]
  -[TVRXDeviceAuthenticationChallenge setThrottleSeconds:]
  -[TVRXDeviceAuthenticationChallenge codeToEnterOnDevice]


TVRMSDAAPTouchRemoteManager : NSObject <TVRMSTouchRemoteSocketDelegate>
 @property  <TVRMSDAAPTouchRemoteManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRMSDAAPTouchRemoteManager setDelegate:]
  -[TVRMSDAAPTouchRemoteManager delegate]
  -[TVRMSDAAPTouchRemoteManager .cxx_destruct]
  -[TVRMSDAAPTouchRemoteManager keyboardInfo]
  -[TVRMSDAAPTouchRemoteManager initWithRequestManager:]
  -[TVRMSDAAPTouchRemoteManager sendTouchMoveWithDirection:repeatCount:]
  -[TVRMSDAAPTouchRemoteManager sendTouchEndWithDirection:repeatCount:]
  -[TVRMSDAAPTouchRemoteManager sendNavigationCommand:]
  -[TVRMSDAAPTouchRemoteManager setKeyboardText:]
  -[TVRMSDAAPTouchRemoteManager clearKeyboardText]
  -[TVRMSDAAPTouchRemoteManager sendKeyboardReturnCommand]
  -[TVRMSDAAPTouchRemoteManager touchRemoteSocketDidConnect:]
  -[TVRMSDAAPTouchRemoteManager touchRemoteSocketDidDisconnect:]
  -[TVRMSDAAPTouchRemoteManager initiateControlWithCompletionHandler:]
  -[TVRMSDAAPTouchRemoteManager keyboardEditingSessionActive]
  -[TVRMSDAAPTouchRemoteManager _createSocket]
  -[TVRMSDAAPTouchRemoteManager _requestPromptUpdate:]
  -[TVRMSDAAPTouchRemoteManager _parsePortInfoItems:]
  -[TVRMSDAAPTouchRemoteManager _requestPortInfo]
  -[TVRMSDAAPTouchRemoteManager _timeForDirection:repeatCount:]
  -[TVRMSDAAPTouchRemoteManager _locationForDirection:repeatCount:]
  -[TVRMSDAAPTouchRemoteManager _requestKeyboardStatus]
  -[TVRMSDAAPTouchRemoteManager _processKeyboardMessageItems:]
  -[TVRMSDAAPTouchRemoteManager _processAuthenticationUpdateForItems:]
  -[TVRMSDAAPTouchRemoteManager _encryptString:]


TVRMSNavigationCommandMessage : PBCodable <NSCopying>
 @property  BOOL hasNavigationCommand
 @property  int navigationCommand
 @property  BOOL hasSessionIdentifier
 @property  int sessionIdentifier

  // instance methods
  -[TVRMSNavigationCommandMessage setSessionIdentifier:]
  -[TVRMSNavigationCommandMessage sessionIdentifier]
  -[TVRMSNavigationCommandMessage copyTo:]
  -[TVRMSNavigationCommandMessage mergeFrom:]
  -[TVRMSNavigationCommandMessage dictionaryRepresentation]
  -[TVRMSNavigationCommandMessage copyWithZone:]
  -[TVRMSNavigationCommandMessage readFrom:]
  -[TVRMSNavigationCommandMessage writeTo:]
  -[TVRMSNavigationCommandMessage isEqual:]
  -[TVRMSNavigationCommandMessage hasSessionIdentifier]
  -[TVRMSNavigationCommandMessage setHasSessionIdentifier:]
  -[TVRMSNavigationCommandMessage setNavigationCommand:]
  -[TVRMSNavigationCommandMessage setHasNavigationCommand:]
  -[TVRMSNavigationCommandMessage hasNavigationCommand]
  -[TVRMSNavigationCommandMessage navigationCommand]


TVRCKeyboardController : NSObject
 @property  <TVRCKeyboardControllerDelegate> *delegate
 @property  BOOL editing
 @property  TVRCKeyboardAttributes *attributes
 @property  NSString *text

  // instance methods
  -[TVRCKeyboardController text]
  -[TVRCKeyboardController attributes]
  -[TVRCKeyboardController setDelegate:]
  -[TVRCKeyboardController delegate]
  -[TVRCKeyboardController .cxx_destruct]
  -[TVRCKeyboardController _setCurrentState:]
  -[TVRCKeyboardController isEditing]
  -[TVRCKeyboardController setText:]
  -[TVRCKeyboardController sendReturnKey]
  -[TVRCKeyboardController _initWithDevice:]


(TriageKitJSON)
	// instance methods
	-[(TriageKitJSON) tk_jsonRepresentation]

RPCompanionLinkClient(TVRemoteCore)
	// instance methods
	-[RPCompanionLinkClient(TVRemoteCore) tvrc_setAllowedTVs]

UIImage(TVRMSAdditions)
	// instance methods
	-[UIImage(TVRMSAdditions) rms_jpegDataScaledToSize:compressionQuality:]

NSURLComponents(TVRMSAdditions)
	// instance methods
	-[NSURLComponents(TVRMSAdditions) rms_componentsByAddingQueryParameters:]

01 00 0600 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFSettingsConnection 
01 00 1800 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioFormat 
01 00 1800 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVVoiceController 
01 00 1a00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDescriptionBuilder 
01 00 0f00 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCharacteristicBatchRequest 
01 00 0f00 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCharacteristicReadRequest 
01 00 0f00 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCharacteristicWriteRequest 
01 00 0f00 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMHomeManager 
01 00 0f00 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMMutableHomeManagerConfiguration 
01 00 0500 /System/Library/PrivateFrameworks/HomeSharing.framework/HomeSharing: HSAccountStore 
01 00 0c00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSProtobuf 
01 00 0c00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0400 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0a00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 0a00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetService 
01 00 0a00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetServiceBrowser 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0a00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0a00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0900 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0d00 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPCompanionLinkClient 
01 00 0d00 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPHIDSession 
01 00 0d00 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPHIDTouchEvent 
01 00 0d00 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPHIDTouchSession 
01 00 0d00 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPMediaControlSession 
01 00 0d00 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPSiriSession 
01 00 0d00 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPTextInputSession 
01 00 0e00 /System/Library/PrivateFrameworks/RemoteTextInput.framework/RemoteTextInput: RTIDataPayload 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
