|| __DATA.__data __TVRCMRTelevisionWrapperAssociatedObject
|| __DATA.__objc_data _OBJC_CLASS_$_LaunchApplicationIntent
|| __DATA.__objc_data _OBJC_CLASS_$_LaunchApplicationIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_LaunchRemoteIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_LaunchTVAppIntent
|| __DATA.__objc_data _OBJC_CLASS_$_LaunchTVAppIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_PauseContentIntent
|| __DATA.__objc_data _OBJC_CLASS_$_PauseContentIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SleepAppleTVIntent
|| __DATA.__objc_data _OBJC_CLASS_$_SleepAppleTVIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TVRApplication
|| __DATA.__objc_data _OBJC_CLASS_$_TVRApplicationResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCAnalytics
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCButton
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCButtonEvent
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCDevice
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCDeviceAuthenticationChallenge
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCDeviceEventManager
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCDeviceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCDeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCGameControllerEvent
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCKeyboardAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCKeyboardController
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCPINEntryAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCSessionData
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCTouchEvent
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCVoiceRecorder
|| __DATA.__objc_data _OBJC_CLASS_$_TVRDevice
|| __DATA.__objc_data _OBJC_CLASS_$_TVRDeviceResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMediaCommandResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_WakeAppleTVIntent
|| __DATA.__objc_data _OBJC_CLASS_$_WakeAppleTVIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCDeviceState
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCFeatures
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCHMHomeObserver
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCHMServiceWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCKeyboardState
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMRAudioBufferWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMRCommandInfoWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMROriginWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMRTelevisionWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMRTextEditingAttributesWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMRTextEditingSessionWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMRVirtualTouchDeviceWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMRVirtualVoiceInputDeviceWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMatchPointDeviceImpl
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMatchPointDeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMediaRemoteCommandParser
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMediaRemoteDeviceImpl
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMediaRemoteDeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMediaRemoteEndpointManager
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMediaRemoteEventTranslator
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMediaRemoteKeyboardAdapter
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMediaRemoteKeyboardImplManager
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMediaRemoteLegacyKeyboardImpl
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCMediaRemoteRemoteTextInputKeyboardImpl
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCRPCompanionLinkClientWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCRPCompanionLinkClientWrapper_UnpairedBLE
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCRapportDeviceImpl
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCRapportDeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCRapportDeviceRecord
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCRapportMediaEventsManager
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCRapportRemoteTextInputKeyboardImpl
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCWeakObjectWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCXPCClient
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCXPCProtocolManager
|| __DATA.__objc_data _OBJC_CLASS_$__TVRDeviceAggregate
|| __DATA.__objc_data _OBJC_CLASS_$__TVRXDevice
|| __DATA.__objc_data _OBJC_CLASS_$__TVRXDeviceAuthenticationChallenge
|| __DATA.__objc_data _OBJC_CLASS_$__TVRXDeviceLocator
|| __DATA.__objc_data _OBJC_CLASS_$__TVRXDeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$__TVRXKeyboardController
|| __DATA.__objc_data _OBJC_CLASS_$__TVRXManagedConfigManager
|| __DATA.__objc_data _OBJC_CLASS_$__TVRXMetrics
|| __DATA.__objc_data _OBJC_CLASS_$__TVRXSearchReference
|| __DATA.__objc_data _OBJC_CLASS_$__TVRXVoiceRecorder
|| __DATA.__objc_data _OBJC_METACLASS_$_LaunchApplicationIntent
|| __DATA.__objc_data _OBJC_METACLASS_$_LaunchApplicationIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_LaunchRemoteIntent
|| __DATA.__objc_data _OBJC_METACLASS_$_LaunchRemoteIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_LaunchTVAppIntent
|| __DATA.__objc_data _OBJC_METACLASS_$_LaunchTVAppIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_PauseContentIntent
|| __DATA.__objc_data _OBJC_METACLASS_$_PauseContentIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SleepAppleTVIntent
|| __DATA.__objc_data _OBJC_METACLASS_$_SleepAppleTVIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRApplicationResolutionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCAnalytics
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCButton
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCButtonEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCDeviceAuthenticationChallenge
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCDeviceEventManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCDeviceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCDeviceQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCGameControllerEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCKeyboardAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCKeyboardController
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCPINEntryAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCSessionData
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCTouchEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCVoiceRecorder
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRDeviceResolutionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMediaCommandResolutionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_WakeAppleTVIntent
|| __DATA.__objc_data _OBJC_METACLASS_$_WakeAppleTVIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCDeviceState
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCFeatures
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCHMHomeObserver
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCHMServiceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCKeyboardState
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMRAudioBufferWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMRCommandInfoWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMROriginWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMRTelevisionWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMRTextEditingAttributesWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMRTextEditingSessionWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMRVirtualTouchDeviceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMRVirtualVoiceInputDeviceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMatchPointDeviceImpl
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMatchPointDeviceQuery
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMediaRemoteCommandParser
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMediaRemoteDeviceImpl
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMediaRemoteDeviceQuery
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMediaRemoteEndpointManager
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMediaRemoteEventTranslator
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMediaRemoteKeyboardAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMediaRemoteKeyboardImplManager
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMediaRemoteLegacyKeyboardImpl
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCMediaRemoteRemoteTextInputKeyboardImpl
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCRPCompanionLinkClientWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCRPCompanionLinkClientWrapper_UnpairedBLE
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCRapportDeviceImpl
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCRapportDeviceQuery
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCRapportDeviceRecord
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCRapportMediaEventsManager
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCRapportRemoteTextInputKeyboardImpl
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCWeakObjectWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCXPCClient
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCXPCProtocolManager
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRDeviceAggregate
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRXDevice
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRXDeviceAuthenticationChallenge
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRXDeviceLocator
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRXDeviceQuery
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRXKeyboardController
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRXMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRXSearchReference
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRXVoiceRecorder
|| __DATA_CONST.__const _TVRCAirplayIDKey
|| __DATA_CONST.__const _TVRCButtonApplicationBundleIDKey
|| __DATA_CONST.__const _TVRCButtonSkipIntervalKey
|| __DATA_CONST.__const _TVRCConnectionInvalidatedNotification
|| __DATA_CONST.__const _TVRCErrorDomain
|| __DATA_CONST.__const _TVRCErrorMediaRemotePairingLockoutDelayKey
|| __DATA_CONST.__const _TVRCMatchPointServiceAddedNotification
|| __DATA_CONST.__const _TVRCMatchPointServiceNameChangedNotification
|| __DATA_CONST.__const _TVRCMatchPointServiceRemovedNotification
|| __DATA_CONST.__const _TVRCMediaRemoteIDKey
|| __DATA_CONST.__const __TVRCButtonLongPressBeginActionKey
|| __DATA_CONST.__const __TVRCButtonLongPressEndActionKey
|| __DATA_CONST.__const _kTVRAppleTVModelString
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LaunchRemoteIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__TVRXManagedConfigManager
|| __TEXT.__const _TVRCSkipInterval
|| __TEXT.__const _TVRemoteCoreVersionNumber
|| __TEXT.__const _TVRemoteCoreVersionString
|| __TEXT.__text _TVRCButtonTypeDescription
|| __TEXT.__text _TVRCDeviceConnectionTypeDescription
|| __TEXT.__text _TVRCLastConnectedDeviceIdentifier
|| __TEXT.__text _TVRCMakeError
|| __TEXT.__text _TVRCTouchPhaseDescription
|| __TEXT.__text __TVRCGeneralLog
|| __TEXT.__text __TVRCHomeKitLog
|| __TEXT.__text __TVRCMediaRemoteConnectionLog
|| __TEXT.__text __TVRCMediaRemoteKeyboardLog
|| __TEXT.__text __TVRCMostRecentlyConnectedDeviceIdentifier
|| __TEXT.__text __TVRCRapportLog
|| __TEXT.__text __TVRCRemoteTextInputLog
|| __TEXT.__text __TVRCSendVirtualTouchEvent
|| __TEXT.__text __TVRCSetLastConnectedDeviceIdentifier
|| __TEXT.__text __TVRCSetMostRecentlyConnectedDeviceIdentifier
__ AVFoundation: _AVVoiceActivationModeKey
__ AVFoundation: _OBJC_CLASS_$_AVAudioFormat
__ AVFoundation: _OBJC_CLASS_$_AVVoiceController
__ AppSupport: _OBJC_CLASS_$_CPAggregateDictionary
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ Foundation: _NSFoundationVersionNumber
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ HomeKit: _HMCharacteristicTypeActive
__ HomeKit: _HMCharacteristicTypeActiveIdentifier
__ HomeKit: _HMCharacteristicTypeRemoteKey
__ HomeKit: _HMCharacteristicTypeVolumeControlType
__ HomeKit: _HMCharacteristicTypeVolumeSelector
__ HomeKit: _HMErrorDomain
__ HomeKit: _HMServiceTypeSpeaker
__ HomeKit: _HMServiceTypeTelevision
__ HomeKit: _OBJC_CLASS_$_HMCharacteristicBatchRequest
__ HomeKit: _OBJC_CLASS_$_HMCharacteristicReadRequest
__ HomeKit: _OBJC_CLASS_$_HMCharacteristicWriteRequest
__ HomeKit: _OBJC_CLASS_$_HMHomeManager
__ HomeKit: _OBJC_CLASS_$_HMHomeManagerConfiguration
__ Intents: _OBJC_CLASS_$_INEnumResolutionResult
__ Intents: _OBJC_CLASS_$_INIntent
__ Intents: _OBJC_CLASS_$_INIntentResponse
__ Intents: _OBJC_CLASS_$_INObject
__ Intents: _OBJC_CLASS_$_INObjectResolutionResult
__ Intents: _OBJC_METACLASS_$_INEnumResolutionResult
__ Intents: _OBJC_METACLASS_$_INIntent
__ Intents: _OBJC_METACLASS_$_INIntentResponse
__ Intents: _OBJC_METACLASS_$_INObject
__ Intents: _OBJC_METACLASS_$_INObjectResolutionResult
__ ManagedConfiguration: _MCFeatureTVRemoteAllowedTVs
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaRemote: _MRAVEndpointGetActiveSystemEndpointUID
__ MediaRemote: _MRAVEndpointUpdateActiveSystemEndpointForOutputDeviceUIDWithReason
__ MediaRemote: _MRAudioBufferCreate
__ MediaRemote: _MRAudioBufferGetMutableContentsPtr
__ MediaRemote: _MRAudioBufferGetMutablePacketDescriptionsArrayPtr
__ MediaRemote: _MRAudioBufferGetPacketCount
__ MediaRemote: _MRAudioBufferSetPacketCount
__ MediaRemote: _MRExternalDeviceCopyDeviceInfo
__ MediaRemote: _MRGameControllerButtonsCreate
__ MediaRemote: _MRGameControllerButtonsSetA
__ MediaRemote: _MRGameControllerButtonsSetPause
__ MediaRemote: _MRGameControllerButtonsSetX
__ MediaRemote: _MRGameControllerDigitizerCreate
__ MediaRemote: _MRGameControllerDigitizerSetTimestamp
__ MediaRemote: _MRGameControllerDigitizerSetTouchDown
__ MediaRemote: _MRGameControllerDigitizerSetX
__ MediaRemote: _MRGameControllerDigitizerSetY
__ MediaRemote: _MRGameControllerEventCreateWithButtons
__ MediaRemote: _MRGameControllerEventCreateWithDigitizer
__ MediaRemote: _MRGameControllerPropertiesCreate
__ MediaRemote: _MRGameControllerPropertiesSetProfile
__ MediaRemote: _MRMediaRemoteCommandInfoGetCommand
__ MediaRemote: _MRMediaRemoteCommandInfoGetEnabled
__ MediaRemote: _MRMediaRemoteCopyCommandDescription
__ MediaRemote: _MRMediaRemoteGetPickedRouteHasVolumeControlForOrigin
__ MediaRemote: _MRMediaRemoteGetSupportedCommandsForOrigin
__ MediaRemote: _MRMediaRemoteRegisterForNowPlayingNotifications
__ MediaRemote: _MRMediaRemoteSendCommandForOrigin
__ MediaRemote: _MRMediaRemoteSetWantsSupportedCommandsChangedNotifications
__ MediaRemote: _MRMediaRemoteSetWantsVolumeControlNotifications
__ MediaRemote: _MRMediaRemoteUnregisterForNowPlayingNotifications
__ MediaRemote: _MROriginEqualToOrigin
__ MediaRemote: _MRPairedDeviceCopyDeviceUID
__ MediaRemote: _MRTelevisionConnect
__ MediaRemote: _MRTelevisionControllerBeginDiscovery
__ MediaRemote: _MRTelevisionControllerCreate
__ MediaRemote: _MRTelevisionControllerEndDiscovery
__ MediaRemote: _MRTelevisionControllerSetDiscoveryCallback
__ MediaRemote: _MRTelevisionControllerSetRemovalCallback
__ MediaRemote: _MRTelevisionCopyCustomOrigin
__ MediaRemote: _MRTelevisionCopyName
__ MediaRemote: _MRTelevisionCopySystemBuildVersion
__ MediaRemote: _MRTelevisionCopyUniqueIdentifier
__ MediaRemote: _MRTelevisionDeletePairedDevice
__ MediaRemote: _MRTelevisionDisconnect
__ MediaRemote: _MRTelevisionGetCurrentRTISourceSession
__ MediaRemote: _MRTelevisionGetCurrentTextEditingSession
__ MediaRemote: _MRTelevisionGetVoiceRecordingState
__ MediaRemote: _MRTelevisionIsPairingAllowed
__ MediaRemote: _MRTelevisionProcessVirtualVoiceInputAudioData
__ MediaRemote: _MRTelevisionRegisterGameControllerWithProperties
__ MediaRemote: _MRTelevisionRegisterVirtualTouchDevice
__ MediaRemote: _MRTelevisionRegisterVirtualVoiceInputDevice
__ MediaRemote: _MRTelevisionSendButtonEvent
__ MediaRemote: _MRTelevisionSendGameControllerEventV2
__ MediaRemote: _MRTelevisionSendVirtualTouchEvent
__ MediaRemote: _MRTelevisionSetConnectionStateCallback
__ MediaRemote: _MRTelevisionSetGameControllerInputModeCallback
__ MediaRemote: _MRTelevisionSetNameCallback
__ MediaRemote: _MRTelevisionSetPairingCallback
__ MediaRemote: _MRTelevisionSetRTICallback
__ MediaRemote: _MRTelevisionSetTextEditingCallback
__ MediaRemote: _MRTelevisionSetVoiceRecordingStateCallback
__ MediaRemote: _MRTelevisionSetWantsNowPlayingUpdates
__ MediaRemote: _MRTelevisionSetWantsVolumeControlAvailabilityUpdates
__ MediaRemote: _MRTelevisionTextEditingClearText
__ MediaRemote: _MRTelevisionTextEditingDeleteBackward
__ MediaRemote: _MRTelevisionTextEditingInsert
__ MediaRemote: _MRTelevisionTextEditingSetText
__ MediaRemote: _MRTelevisionUnregisterGameController
__ MediaRemote: _MRTextEditingAttributesGetInputTraits
__ MediaRemote: _MRTextEditingAttributesGetPrompt
__ MediaRemote: _MRTextEditingAttributesGetTitle
__ MediaRemote: _MRTextEditingSessionGetAttributes
__ MediaRemote: _MRTextEditingSessionGetText
__ MediaRemote: _MRVirtualTouchDeviceDescriptorCreate
__ MediaRemote: _MRVirtualTouchDeviceDescriptorGetScreenSize
__ MediaRemote: _MRVirtualTouchDeviceDescriptorIsAbsolute
__ MediaRemote: _MRVirtualTouchDeviceDescriptorIsDisplayIntegrated
__ MediaRemote: _MRVirtualTouchDeviceDescriptorSetDisplayIntegrated
__ MediaRemote: _MRVirtualTouchDeviceDescriptorSetIsAbsolute
__ MediaRemote: _MRVirtualTouchDeviceDescriptorSetScreenSize
__ MediaRemote: _MRVirtualVoiceInputDeviceDescriptorCopyDefaultFormat
__ MediaRemote: _MRVirtualVoiceInputDeviceDescriptorCopySupportedFormats
__ MediaRemote: _MRVirtualVoiceInputDeviceDescriptorCreate
__ MediaRemote: _MRVirtualVoiceInputDeviceDescriptorSetDefaultAudioFormat
__ MediaRemote: _MRVirtualVoiceInputDeviceDescriptorSetSupportedFormats
__ MediaRemote: _kMRMediaRemoteErrorTelevisionPairingLockOutDelayUserInfoKey
__ MediaRemote: _kMRMediaRemoteOptionSkipInterval
__ MediaRemote: _kMRMediaRemoteOriginSupportedCommandsDidChangeNotification
__ MediaRemote: _kMRMediaRemoteOriginUserInfoKey
__ MediaRemote: _kMRMediaRemotePickedRouteVolumeControlAvailabilityDidChangeNotification
__ MediaRemote: _kMRMediaRemotePickedRouteVolumeControlAvailabilityUserInfoKey
__ Rapport: _OBJC_CLASS_$_RPCompanionLinkClient
__ Rapport: _OBJC_CLASS_$_RPHIDSession
__ Rapport: _OBJC_CLASS_$_RPHIDTouchEvent
__ Rapport: _OBJC_CLASS_$_RPHIDTouchSession
__ Rapport: _OBJC_CLASS_$_RPMediaControlSession
__ Rapport: _OBJC_CLASS_$_RPSiriSession
__ Rapport: _OBJC_CLASS_$_RPTextInputSession
__ Rapport: _RPDestinationIdentifierDirectPeer
__ RemoteTextInput: _OBJC_CLASS_$_RTIDataPayload
__ SpringBoardServices: _SBSGetScreenLockStatus
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___exp10f
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
_TVRCFeatures : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[_TVRCFeatures rapportEnabled]
  +[_TVRCFeatures isWakeToRemoteOnLockScreenDisabled]
  +[_TVRCFeatures nearbyDevicesEnabled]


TVRCSessionData : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDate *sessionStartTime
 @property  BOOL usedRTI
 @property  BOOL usedSiri
 @property  BOOL requiredPairing
 @property  BOOL directionalControlsEnabled
 @property  NSString *launchContextDesc

  // instance methods
  -[TVRCSessionData .cxx_destruct]
  -[TVRCSessionData sessionStartTime]
  -[TVRCSessionData setSessionStartTime:]
  -[TVRCSessionData setLaunchContextDesc:]
  -[TVRCSessionData launchContextDesc]
  -[TVRCSessionData setDirectionalControlsEnabled:]
  -[TVRCSessionData setUsedRTI:]
  -[TVRCSessionData setRequiredPairing:]
  -[TVRCSessionData setUsedSiri:]
  -[TVRCSessionData usedRTI]
  -[TVRCSessionData usedSiri]
  -[TVRCSessionData requiredPairing]
  -[TVRCSessionData directionalControlsEnabled]


TVRCAnalytics : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TVRCAnalytics sharedInstance]

  // instance methods
  -[TVRCAnalytics logPresentationFrom:]
  -[TVRCAnalytics logSessionStatistics:]
  -[TVRCAnalytics logSearchingSpinnerShown]
  -[TVRCAnalytics logConnectingSpinnerShown:]
  -[TVRCAnalytics logConnectionStatus:type:reason:]
  -[TVRCAnalytics _presentationSourceEventDictionaryFor:]
  -[TVRCAnalytics _spinnerShownDictionaryFor:]
  -[TVRCAnalytics _connectionDictionaryForType:status:reason:]
  -[TVRCAnalytics logShortcutActionRunWithType:]


_TVRCMRTextEditingAttributesWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *title
 @property  NSString *prompt
 @property  {_MRTextInputTraits=IIIII{?=qq}BB[10q]Q} traits

  // instance methods
  -[_TVRCMRTextEditingAttributesWrapper title]
  -[_TVRCMRTextEditingAttributesWrapper traits]
  -[_TVRCMRTextEditingAttributesWrapper prompt]
  -[_TVRCMRTextEditingAttributesWrapper initWithAttributes:]


_TVRCMRTextEditingSessionWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *text
 @property  _TVRCMRTextEditingAttributesWrapper *attributes

  // instance methods
  -[_TVRCMRTextEditingSessionWrapper dealloc]
  -[_TVRCMRTextEditingSessionWrapper attributes]
  -[_TVRCMRTextEditingSessionWrapper text]
  -[_TVRCMRTextEditingSessionWrapper initWithSession:]


_TVRCRPCompanionLinkClientWrapper_UnpairedBLE : _TVRCRPCompanionLinkClientWrapper
  // instance methods
  -[_TVRCRPCompanionLinkClientWrapper_UnpairedBLE connectionType]
  -[_TVRCRPCompanionLinkClientWrapper_UnpairedBLE connect]
  -[_TVRCRPCompanionLinkClientWrapper_UnpairedBLE isPaired]
  -[_TVRCRPCompanionLinkClientWrapper_UnpairedBLE supportsTouchEvents]


_TVRCDeviceState : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  long long connectionState
 @property  unsigned long pairingCapability
 @property  long long connectionType
 @property  BOOL supportsTouchEvents
 @property  BOOL paired
 @property  NSString *name
 @property  NSString *identifier
 @property  NSDictionary *alternateIdentifiers
 @property  NSString *model
 @property  NSSet *supportedButtons
 @property  _TVRCKeyboardState *keyboardState
 @property  long long disconnectReason
 @property  NSError *disconnectError

  // class methods
  +[_TVRCDeviceState supportsSecureCoding]
  +[_TVRCDeviceState deviceStateFromDevice:]
  +[_TVRCDeviceState setOfStatesFromDevices:]

  // instance methods
  -[_TVRCDeviceState name]
  -[_TVRCDeviceState encodeWithCoder:]
  -[_TVRCDeviceState initWithCoder:]
  -[_TVRCDeviceState .cxx_destruct]
  -[_TVRCDeviceState setName:]
  -[_TVRCDeviceState identifier]
  -[_TVRCDeviceState setIdentifier:]
  -[_TVRCDeviceState connectionType]
  -[_TVRCDeviceState model]
  -[_TVRCDeviceState setModel:]
  -[_TVRCDeviceState initWithDevice:]
  -[_TVRCDeviceState connectionState]
  -[_TVRCDeviceState setConnectionType:]
  -[_TVRCDeviceState setPaired:]
  -[_TVRCDeviceState isPaired]
  -[_TVRCDeviceState keyboardState]
  -[_TVRCDeviceState setKeyboardState:]
  -[_TVRCDeviceState setConnectionState:]
  -[_TVRCDeviceState supportedButtons]
  -[_TVRCDeviceState supportsTouchEvents]
  -[_TVRCDeviceState alternateIdentifiers]
  -[_TVRCDeviceState pairingCapability]
  -[_TVRCDeviceState setPairingCapability:]
  -[_TVRCDeviceState setSupportsTouchEvents:]
  -[_TVRCDeviceState setAlternateIdentifiers:]
  -[_TVRCDeviceState setSupportedButtons:]
  -[_TVRCDeviceState disconnectReason]
  -[_TVRCDeviceState setDisconnectReason:]
  -[_TVRCDeviceState disconnectError]
  -[_TVRCDeviceState setDisconnectError:]


_TVRXSearchReference : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  id completionBlock
 @property  NSTimer *expirationTimer

  // instance methods
  -[_TVRXSearchReference .cxx_destruct]
  -[_TVRXSearchReference identifier]
  -[_TVRXSearchReference setIdentifier:]
  -[_TVRXSearchReference completionBlock]
  -[_TVRXSearchReference setCompletionBlock:]
  -[_TVRXSearchReference expirationTimer]
  -[_TVRXSearchReference setExpirationTimer:]


_TVRXDeviceLocator : NSObject /usr/lib/libSystem.B.dylib <_TVRXDeviceQueryDelegate>
 @property  _TVRXDeviceQuery *query
 @property  NSMutableDictionary *searches
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRXDeviceLocator init]
  -[_TVRXDeviceLocator query]
  -[_TVRXDeviceLocator .cxx_destruct]
  -[_TVRXDeviceLocator setQuery:]
  -[_TVRXDeviceLocator _timerExpired:]
  -[_TVRXDeviceLocator searches]
  -[_TVRXDeviceLocator setSearches:]
  -[_TVRXDeviceLocator deviceQueryDidUpdateDevices:]
  -[_TVRXDeviceLocator findDeviceWithIdentifier:timeout:completion:]
  -[_TVRXDeviceLocator cancelSearchForDeviceWithIdentifier:]


_TVRCMediaRemoteCommandParser : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[_TVRCMediaRemoteCommandParser .cxx_destruct]
  -[_TVRCMediaRemoteCommandParser _gatherEnabledCommands]
  -[_TVRCMediaRemoteCommandParser _containsAnySkipCommands]
  -[_TVRCMediaRemoteCommandParser _skipButtons]
  -[_TVRCMediaRemoteCommandParser _containsAnyTrackCommands]
  -[_TVRCMediaRemoteCommandParser _trackAndSpeedButtons]
  -[_TVRCMediaRemoteCommandParser _containsEnabledCommand:]
  -[_TVRCMediaRemoteCommandParser buttonsForCommands:]


TVRCButton : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  long long buttonType
 @property  BOOL enabled
 @property  BOOL hasTapAction
 @property  NSDictionary *properties

  // class methods
  +[TVRCButton supportsSecureCoding]
  +[TVRCButton _isMediaButtonEvent:]

  // instance methods
  -[TVRCButton isEqual:]
  -[TVRCButton encodeWithCoder:]
  -[TVRCButton initWithCoder:]
  -[TVRCButton .cxx_destruct]
  -[TVRCButton isEnabled]
  -[TVRCButton properties]
  -[TVRCButton _setEnabled:]
  -[TVRCButton buttonType]
  -[TVRCButton hasTapAction]
  -[TVRCButton _initWithButtonType:hasTapAction:properties:]
  -[TVRCButton _initWithButtonType:]
  -[TVRCButton isEqualToButton:]


TVRCButtonEvent : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDate *timestamp
 @property  TVRCButton *button
 @property  long long eventType

  // class methods
  +[TVRCButtonEvent supportsSecureCoding]
  +[TVRCButtonEvent buttonEventForButton:eventType:]

  // instance methods
  -[TVRCButtonEvent encodeWithCoder:]
  -[TVRCButtonEvent initWithCoder:]
  -[TVRCButtonEvent .cxx_destruct]
  -[TVRCButtonEvent _init]
  -[TVRCButtonEvent timestamp]
  -[TVRCButtonEvent eventType]
  -[TVRCButtonEvent button]


_TVRCMRVirtualVoiceInputDeviceWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *supportedFormats
 @property  NSDictionary *defaultAudioFormat

  // instance methods
  -[_TVRCMRVirtualVoiceInputDeviceWrapper init]
  -[_TVRCMRVirtualVoiceInputDeviceWrapper dealloc]
  -[_TVRCMRVirtualVoiceInputDeviceWrapper supportedFormats]
  -[_TVRCMRVirtualVoiceInputDeviceWrapper setSupportedFormats:]
  -[_TVRCMRVirtualVoiceInputDeviceWrapper deviceDescriptor]
  -[_TVRCMRVirtualVoiceInputDeviceWrapper defaultAudioFormat]
  -[_TVRCMRVirtualVoiceInputDeviceWrapper setDefaultAudioFormat:]


_TVRXVoiceRecorder : NSObject /usr/lib/libSystem.B.dylib <AVVoiceControllerRecordDelegate>
 @property  <_TVRXVoiceRecorderDelegate> *delegate
 @property  BOOL recordsAutomatically
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRXVoiceRecorder dealloc]
  -[_TVRXVoiceRecorder delegate]
  -[_TVRXVoiceRecorder setDelegate:]
  -[_TVRXVoiceRecorder .cxx_destruct]
  -[_TVRXVoiceRecorder _init]
  -[_TVRXVoiceRecorder stop]
  -[_TVRXVoiceRecorder start]
  -[_TVRXVoiceRecorder voiceControllerDidStopRecording:forReason:]
  -[_TVRXVoiceRecorder voiceControllerEncoderErrorDidOccur:error:]
  -[_TVRXVoiceRecorder voiceControllerRecordBufferAvailable:buffer:]
  -[_TVRXVoiceRecorder _processAudioBufferOnMainQueue:]
  -[_TVRXVoiceRecorder audioFormatSettings]
  -[_TVRXVoiceRecorder recordsAutomatically]
  -[_TVRXVoiceRecorder setRecordsAutomatically:]


_TVRCMRVirtualTouchDeviceWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL absolute
 @property  BOOL displayIntegrated
 @property  {CGSize=dd} screenSize

  // instance methods
  -[_TVRCMRVirtualTouchDeviceWrapper init]
  -[_TVRCMRVirtualTouchDeviceWrapper dealloc]
  -[_TVRCMRVirtualTouchDeviceWrapper isAbsolute]
  -[_TVRCMRVirtualTouchDeviceWrapper setScreenSize:]
  -[_TVRCMRVirtualTouchDeviceWrapper screenSize]
  -[_TVRCMRVirtualTouchDeviceWrapper isDisplayIntegrated]
  -[_TVRCMRVirtualTouchDeviceWrapper setAbsolute:]
  -[_TVRCMRVirtualTouchDeviceWrapper deviceDescriptor]
  -[_TVRCMRVirtualTouchDeviceWrapper setDisplayIntegrated:]


_TVRCKeyboardState : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  BOOL isEditing
 @property  TVRCKeyboardAttributes *attributes
 @property  NSString *text

  // class methods
  +[_TVRCKeyboardState supportsSecureCoding]
  +[_TVRCKeyboardState keyboardStateFromDevice:]

  // instance methods
  -[_TVRCKeyboardState encodeWithCoder:]
  -[_TVRCKeyboardState initWithCoder:]
  -[_TVRCKeyboardState .cxx_destruct]
  -[_TVRCKeyboardState attributes]
  -[_TVRCKeyboardState setAttributes:]
  -[_TVRCKeyboardState initWithDevice:]
  -[_TVRCKeyboardState text]
  -[_TVRCKeyboardState setText:]
  -[_TVRCKeyboardState isEditing]
  -[_TVRCKeyboardState setIsEditing:]


_TVRXMetrics : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *sessionEventCounts

  // class methods
  +[_TVRXMetrics sharedInstance]

  // instance methods
  -[_TVRXMetrics init]
  -[_TVRXMetrics .cxx_destruct]
  -[_TVRXMetrics incrementKey:]
  -[_TVRXMetrics setSessionEventCounts:]
  -[_TVRXMetrics sessionEventCounts]
  -[_TVRXMetrics incrementKey:andSessionKey:]
  -[_TVRXMetrics endSessionForKey:]


_TVRCMatchPointDeviceImpl : NSObject /usr/lib/libSystem.B.dylib <_TVRCHMServiceWrapperDelegate, _TVRCDeviceImpl>
 @property  _TVRCHMServiceWrapper *service
 @property  _TVRXDevice *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_TVRCMatchPointDeviceImpl implWithService:]

  // instance methods
  -[_TVRCMatchPointDeviceImpl name]
  -[_TVRCMatchPointDeviceImpl .cxx_destruct]
  -[_TVRCMatchPointDeviceImpl identifier]
  -[_TVRCMatchPointDeviceImpl disconnect]
  -[_TVRCMatchPointDeviceImpl connectionType]
  -[_TVRCMatchPointDeviceImpl model]
  -[_TVRCMatchPointDeviceImpl device]
  -[_TVRCMatchPointDeviceImpl service]
  -[_TVRCMatchPointDeviceImpl connect]
  -[_TVRCMatchPointDeviceImpl keyboardController]
  -[_TVRCMatchPointDeviceImpl setService:]
  -[_TVRCMatchPointDeviceImpl initWithService:]
  -[_TVRCMatchPointDeviceImpl setDevice:]
  -[_TVRCMatchPointDeviceImpl sendButtonEvent:]
  -[_TVRCMatchPointDeviceImpl sendGameControllerEvent:]
  -[_TVRCMatchPointDeviceImpl supportedButtons]
  -[_TVRCMatchPointDeviceImpl supportsTouchEvents]
  -[_TVRCMatchPointDeviceImpl sendTouchEvent:]
  -[_TVRCMatchPointDeviceImpl voiceRecorder]
  -[_TVRCMatchPointDeviceImpl alternateIdentifiers]
  -[_TVRCMatchPointDeviceImpl pairingCapability]
  -[_TVRCMatchPointDeviceImpl connectedToService:]
  -[_TVRCMatchPointDeviceImpl disconnectedFromService:error:]
  -[_TVRCMatchPointDeviceImpl service:updatedName:]
  -[_TVRCMatchPointDeviceImpl setAuthenticationSupported:]


_TVRDeviceAggregate : NSObject /usr/lib/libSystem.B.dylib
 @property  _TVRCMRTelevisionWrapper *mediaRemote
 @property  _TVRCRPCompanionLinkClientWrapper *rapport
 @property  _TVRCHMServiceWrapper *homeKit
 @property  _TVRXDevice *publicDevice

  // instance methods
  -[_TVRDeviceAggregate isEmpty]
  -[_TVRDeviceAggregate .cxx_destruct]
  -[_TVRDeviceAggregate setRapport:]
  -[_TVRDeviceAggregate bestImpl]
  -[_TVRDeviceAggregate mediaRemote]
  -[_TVRDeviceAggregate setMediaRemote:]
  -[_TVRDeviceAggregate rapport]
  -[_TVRDeviceAggregate homeKit]
  -[_TVRDeviceAggregate setHomeKit:]
  -[_TVRDeviceAggregate publicDevice]
  -[_TVRDeviceAggregate setPublicDevice:]


_TVRXDeviceQuery : NSObject /usr/lib/libSystem.B.dylib <_TVRCMediaRemoteDeviceQueryDelegate, _TVRCRapportDeviceQueryDelegate, _TVRCMatchPointDeviceQueryDelegate>
 @property  BOOL isRunning
 @property  NSMutableDictionary *aggregateDevices
 @property  _TVRCMediaRemoteDeviceQuery *mediaRemoteQuery
 @property  _TVRCRapportDeviceQuery *rapportDeviceQuery
 @property  _TVRCMatchPointDeviceQuery *matchPointQuery
 @property  <_TVRXDeviceQueryDelegate> *delegate
 @property  NSSet *devices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRXDeviceQuery init]
  -[_TVRXDeviceQuery delegate]
  -[_TVRXDeviceQuery setDelegate:]
  -[_TVRXDeviceQuery .cxx_destruct]
  -[_TVRXDeviceQuery stop]
  -[_TVRXDeviceQuery start]
  -[_TVRXDeviceQuery isRunning]
  -[_TVRXDeviceQuery devices]
  -[_TVRXDeviceQuery setIsRunning:]
  -[_TVRXDeviceQuery _startSearch]
  -[_TVRXDeviceQuery _notifyDelegateDidUpdateDevices]
  -[_TVRXDeviceQuery _stopSearch]
  -[_TVRXDeviceQuery _findAggregateForIdentifier:createIfNeeded:]
  -[_TVRXDeviceQuery _reevaluateAggregates]
  -[_TVRXDeviceQuery mediaRemoteDeviceQuery:addedTelevision:]
  -[_TVRXDeviceQuery mediaRemoteDeviceQuery:removedTelevision:]
  -[_TVRXDeviceQuery rapportDeviceQuery:addedDevice:]
  -[_TVRXDeviceQuery rapportDeviceQuery:removedDevice:]
  -[_TVRXDeviceQuery matchpointDeviceQuery:addedService:]
  -[_TVRXDeviceQuery matchpointDeviceQuery:removedService:]
  -[_TVRXDeviceQuery aggregateDevices]
  -[_TVRXDeviceQuery setAggregateDevices:]
  -[_TVRXDeviceQuery mediaRemoteQuery]
  -[_TVRXDeviceQuery setMediaRemoteQuery:]
  -[_TVRXDeviceQuery rapportDeviceQuery]
  -[_TVRXDeviceQuery setRapportDeviceQuery:]
  -[_TVRXDeviceQuery matchPointQuery]
  -[_TVRXDeviceQuery setMatchPointQuery:]


TVRCDeviceAuthenticationChallenge : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *deviceIdentifier
 @property  long long challengeType
 @property  long long challengeAttributes
 @property  NSString *codeToEnterOnDevice

  // instance methods
  -[TVRCDeviceAuthenticationChallenge .cxx_destruct]
  -[TVRCDeviceAuthenticationChallenge cancel]
  -[TVRCDeviceAuthenticationChallenge deviceIdentifier]
  -[TVRCDeviceAuthenticationChallenge setDeviceIdentifier:]
  -[TVRCDeviceAuthenticationChallenge userEnteredCodeLocally:]
  -[TVRCDeviceAuthenticationChallenge challengeAttributes]
  -[TVRCDeviceAuthenticationChallenge _initWithDeviceIdentifier:challengeType:codeToEnterOnDevice:]
  -[TVRCDeviceAuthenticationChallenge challengeType]
  -[TVRCDeviceAuthenticationChallenge setChallengeAttributes:]
  -[TVRCDeviceAuthenticationChallenge codeToEnterOnDevice]


TVRCTouchEvent : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  double timestamp
 @property  long long finger
 @property  long long phase
 @property  {CGPoint=dd} digitizerLocation

  // class methods
  +[TVRCTouchEvent supportsSecureCoding]

  // instance methods
  -[TVRCTouchEvent encodeWithCoder:]
  -[TVRCTouchEvent initWithCoder:]
  -[TVRCTouchEvent timestamp]
  -[TVRCTouchEvent phase]
  -[TVRCTouchEvent digitizerLocation]
  -[TVRCTouchEvent finger]
  -[TVRCTouchEvent _initWithTimestamp:finger:phase:digitizerLocation:]


_TVRCMatchPointDeviceQuery : NSObject /usr/lib/libSystem.B.dylib <HMHomeManagerDelegatePrivate>
 @property  HMHomeManager *homeManager
 @property  NSMutableDictionary *wrapperToIdentifierMapping
 @property  <_TVRCMatchPointDeviceQueryDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRCMatchPointDeviceQuery init]
  -[_TVRCMatchPointDeviceQuery dealloc]
  -[_TVRCMatchPointDeviceQuery delegate]
  -[_TVRCMatchPointDeviceQuery setDelegate:]
  -[_TVRCMatchPointDeviceQuery .cxx_destruct]
  -[_TVRCMatchPointDeviceQuery stop]
  -[_TVRCMatchPointDeviceQuery start]
  -[_TVRCMatchPointDeviceQuery homeManagerDidUpdateCurrentHome:]
  -[_TVRCMatchPointDeviceQuery homeManagerDidUpdateHomes:]
  -[_TVRCMatchPointDeviceQuery homeManager]
  -[_TVRCMatchPointDeviceQuery setHomeManager:]
  -[_TVRCMatchPointDeviceQuery _matchPointServiceAdded:]
  -[_TVRCMatchPointDeviceQuery _matchPointServiceRemoved:]
  -[_TVRCMatchPointDeviceQuery _matchPointServiceNameChanged:]
  -[_TVRCMatchPointDeviceQuery _notifyAddedService:]
  -[_TVRCMatchPointDeviceQuery _notifyRemovedService:]
  -[_TVRCMatchPointDeviceQuery wrapperToIdentifierMapping]
  -[_TVRCMatchPointDeviceQuery setWrapperToIdentifierMapping:]


_TVRCHMHomeObserver : NSObject /usr/lib/libSystem.B.dylib <HMAccessoryDelegate, HMHomeDelegate, HMAccessoryDelegatePrivate>
 @property  NSMutableDictionary *serviceToAccessoryIDMapping
 @property  HMHome *currentHome
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_TVRCHMHomeObserver sharedInstance]

  // instance methods
  -[_TVRCHMHomeObserver init]
  -[_TVRCHMHomeObserver .cxx_destruct]
  -[_TVRCHMHomeObserver home:didAddAccessory:]
  -[_TVRCHMHomeObserver home:didRemoveAccessory:]
  -[_TVRCHMHomeObserver accessoryDidUpdateReachableTransports:]
  -[_TVRCHMHomeObserver accessory:didUpdateNameForService:]
  -[_TVRCHMHomeObserver accessoryDidUpdateServices:]
  -[_TVRCHMHomeObserver accessoryDidUpdateReachability:]
  -[_TVRCHMHomeObserver currentHome]
  -[_TVRCHMHomeObserver setCurrentHome:]
  -[_TVRCHMHomeObserver _updateAccessoriesForHome:]
  -[_TVRCHMHomeObserver _updateServicesForAccessory:]
  -[_TVRCHMHomeObserver serviceToAccessoryIDMapping]
  -[_TVRCHMHomeObserver _checkAccessoryReachabilityAndFetchTVServices:withCompletion:]
  -[_TVRCHMHomeObserver _readCharacteristic:completion:]
  -[_TVRCHMHomeObserver _checkErrorForLocallySuspendedAccessory:]
  -[_TVRCHMHomeObserver setServiceToAccessoryIDMapping:]


_TVRCHMServiceWrapper : NSObject /usr/lib/libSystem.B.dylib <HMAccessoryDelegate>
 @property  HMHome *home
 @property  HMService *service
 @property  HMAccessory *accessory
 @property  HMCharacteristic *serviceCharacteristic
 @property  HMCharacteristic *activeCharacteristic
 @property  HMCharacteristic *volumeSelectorCharacteristic
 @property  BOOL connected
 @property  BOOL sentWakeKey
 @property  BOOL volumeControlSupported
 @property  NSString *name
 @property  NSString *identifier
 @property  NSString *model
 @property  <_TVRCHMServiceWrapperDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_TVRCHMServiceWrapper wrapperWithService:]

  // instance methods
  -[_TVRCHMServiceWrapper name]
  -[_TVRCHMServiceWrapper delegate]
  -[_TVRCHMServiceWrapper setDelegate:]
  -[_TVRCHMServiceWrapper .cxx_destruct]
  -[_TVRCHMServiceWrapper identifier]
  -[_TVRCHMServiceWrapper disconnect]
  -[_TVRCHMServiceWrapper model]
  -[_TVRCHMServiceWrapper home]
  -[_TVRCHMServiceWrapper service]
  -[_TVRCHMServiceWrapper connect]
  -[_TVRCHMServiceWrapper setService:]
  -[_TVRCHMServiceWrapper setConnected:]
  -[_TVRCHMServiceWrapper connected]
  -[_TVRCHMServiceWrapper setHome:]
  -[_TVRCHMServiceWrapper accessory]
  -[_TVRCHMServiceWrapper setAccessory:]
  -[_TVRCHMServiceWrapper initWithService:]
  -[_TVRCHMServiceWrapper supportsVolumeControl]
  -[_TVRCHMServiceWrapper sendButtonEvent:]
  -[_TVRCHMServiceWrapper _disconnectWithError:]
  -[_TVRCHMServiceWrapper supportsInfoKey]
  -[_TVRCHMServiceWrapper _checkVolumeServicesForAccessory:]
  -[_TVRCHMServiceWrapper _setCharacteristicsForService:]
  -[_TVRCHMServiceWrapper _startObservingServiceNotifications]
  -[_TVRCHMServiceWrapper _sendVolumeKey:]
  -[_TVRCHMServiceWrapper _remoteKeyForTVRCButton:]
  -[_TVRCHMServiceWrapper _sendRemoteKey:]
  -[_TVRCHMServiceWrapper _sendWakeKey]
  -[_TVRCHMServiceWrapper _serviceNameChanged:]
  -[_TVRCHMServiceWrapper _serviceRemoved:]
  -[_TVRCHMServiceWrapper _stopObservingServiceNotifications]
  -[_TVRCHMServiceWrapper _writeValue:toCharacteristic:]
  -[_TVRCHMServiceWrapper _televisionServiceForAccessory:]
  -[_TVRCHMServiceWrapper serviceCharacteristic]
  -[_TVRCHMServiceWrapper setServiceCharacteristic:]
  -[_TVRCHMServiceWrapper activeCharacteristic]
  -[_TVRCHMServiceWrapper setActiveCharacteristic:]
  -[_TVRCHMServiceWrapper volumeSelectorCharacteristic]
  -[_TVRCHMServiceWrapper setVolumeSelectorCharacteristic:]
  -[_TVRCHMServiceWrapper sentWakeKey]
  -[_TVRCHMServiceWrapper setSentWakeKey:]
  -[_TVRCHMServiceWrapper volumeControlSupported]
  -[_TVRCHMServiceWrapper setVolumeControlSupported:]


_TVRCMediaRemoteDeviceImpl : NSObject /usr/lib/libSystem.B.dylib <_TVRXVoiceRecorderDelegate, _TVRCMROriginDelegate, _TVRCDeviceImpl>
 @property  _TVRCMRTelevisionWrapper *television
 @property  _TVRCMROriginWrapper *origin
 @property  NSSet *mediaButtons
 @property  NSSet *volumeButtons
 @property  unsigned long touchDeviceID
 @property  unsigned int voiceDeviceID
 @property  unsigned long gameControllerID
 @property  long long gameControllerState
 @property  _TVRCMediaRemoteEventTranslator *eventTranslator
 @property  _TVRXVoiceRecorder *voiceRecorder
 @property  NSMutableArray *queuedAudioBuffers
 @property  _TVRXKeyboardController *keyboardController
 @property  _TVRCMediaRemoteKeyboardImplManager *keyboardImplManager
 @property  _TVRXDevice *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_TVRCMediaRemoteDeviceImpl implWithTelevision:]

  // instance methods
  -[_TVRCMediaRemoteDeviceImpl dealloc]
  -[_TVRCMediaRemoteDeviceImpl name]
  -[_TVRCMediaRemoteDeviceImpl .cxx_destruct]
  -[_TVRCMediaRemoteDeviceImpl identifier]
  -[_TVRCMediaRemoteDeviceImpl disconnect]
  -[_TVRCMediaRemoteDeviceImpl connectionType]
  -[_TVRCMediaRemoteDeviceImpl model]
  -[_TVRCMediaRemoteDeviceImpl device]
  -[_TVRCMediaRemoteDeviceImpl origin]
  -[_TVRCMediaRemoteDeviceImpl connect]
  -[_TVRCMediaRemoteDeviceImpl setOrigin:]
  -[_TVRCMediaRemoteDeviceImpl keyboardController]
  -[_TVRCMediaRemoteDeviceImpl setDevice:]
  -[_TVRCMediaRemoteDeviceImpl initWithTelevision:]
  -[_TVRCMediaRemoteDeviceImpl television]
  -[_TVRCMediaRemoteDeviceImpl sendButtonEvent:]
  -[_TVRCMediaRemoteDeviceImpl sendGameControllerEvent:]
  -[_TVRCMediaRemoteDeviceImpl supportedButtons]
  -[_TVRCMediaRemoteDeviceImpl supportsTouchEvents]
  -[_TVRCMediaRemoteDeviceImpl setKeyboardController:]
  -[_TVRCMediaRemoteDeviceImpl sendTouchEvent:]
  -[_TVRCMediaRemoteDeviceImpl voiceRecorder]
  -[_TVRCMediaRemoteDeviceImpl alternateIdentifiers]
  -[_TVRCMediaRemoteDeviceImpl pairingCapability]
  -[_TVRCMediaRemoteDeviceImpl voiceRecorder:isAboutToBeginRecording:]
  -[_TVRCMediaRemoteDeviceImpl voidRecorderDidStop:]
  -[_TVRCMediaRemoteDeviceImpl createBufferWithSettings:packetCapacity:maxPacketSize:]
  -[_TVRCMediaRemoteDeviceImpl voiceRecorder:bufferAvailable:]
  -[_TVRCMediaRemoteDeviceImpl setAuthenticationSupported:]
  -[_TVRCMediaRemoteDeviceImpl _nameChanged:]
  -[_TVRCMediaRemoteDeviceImpl setTelevision:]
  -[_TVRCMediaRemoteDeviceImpl _connectionRequestedPairing:continuation:]
  -[_TVRCMediaRemoteDeviceImpl _addConnectionStateHandler]
  -[_TVRCMediaRemoteDeviceImpl _becameDisconnected:]
  -[_TVRCMediaRemoteDeviceImpl _removeConnectionStateHandler]
  -[_TVRCMediaRemoteDeviceImpl _resetAllState]
  -[_TVRCMediaRemoteDeviceImpl _sendEquivalentGameButton:]
  -[_TVRCMediaRemoteDeviceImpl _connectionStateChanged:error:]
  -[_TVRCMediaRemoteDeviceImpl _becameConnected]
  -[_TVRCMediaRemoteDeviceImpl _registerTouchDevice]
  -[_TVRCMediaRemoteDeviceImpl _setupVoiceRecorder]
  -[_TVRCMediaRemoteDeviceImpl _beginObservingNowPlaying]
  -[_TVRCMediaRemoteDeviceImpl _setupKeyboardController]
  -[_TVRCMediaRemoteDeviceImpl _setupVolumeControls]
  -[_TVRCMediaRemoteDeviceImpl _registerGameControllerInputModeHandler]
  -[_TVRCMediaRemoteDeviceImpl _removePairingRecords]
  -[_TVRCMediaRemoteDeviceImpl _unregisterGameControllerInputModeHandler]
  -[_TVRCMediaRemoteDeviceImpl _teardownVolumeControls]
  -[_TVRCMediaRemoteDeviceImpl _registerVoiceDeviceWithCompletion:]
  -[_TVRCMediaRemoteDeviceImpl _voiceRecorderStateChanged:]
  -[_TVRCMediaRemoteDeviceImpl _drainAndClearAudioBufferQueue]
  -[_TVRCMediaRemoteDeviceImpl _setupOriginIfNeeded]
  -[_TVRCMediaRemoteDeviceImpl _volumeControlsDidUpdate:]
  -[_TVRCMediaRemoteDeviceImpl _reloadVolumeControlAvailability]
  -[_TVRCMediaRemoteDeviceImpl setVolumeButtons:]
  -[_TVRCMediaRemoteDeviceImpl _enableVolumeButtons:]
  -[_TVRCMediaRemoteDeviceImpl setMediaButtons:]
  -[_TVRCMediaRemoteDeviceImpl _isSystemVersionSupported]
  -[_TVRCMediaRemoteDeviceImpl _gameControllerInputModeChanged:]
  -[_TVRCMediaRemoteDeviceImpl _registerGameControllerID]
  -[_TVRCMediaRemoteDeviceImpl _unregisterGameControllerID]
  -[_TVRCMediaRemoteDeviceImpl origin:updatedSupportedCommands:]
  -[_TVRCMediaRemoteDeviceImpl mediaButtons]
  -[_TVRCMediaRemoteDeviceImpl volumeButtons]
  -[_TVRCMediaRemoteDeviceImpl touchDeviceID]
  -[_TVRCMediaRemoteDeviceImpl setTouchDeviceID:]
  -[_TVRCMediaRemoteDeviceImpl voiceDeviceID]
  -[_TVRCMediaRemoteDeviceImpl setVoiceDeviceID:]
  -[_TVRCMediaRemoteDeviceImpl gameControllerID]
  -[_TVRCMediaRemoteDeviceImpl setGameControllerID:]
  -[_TVRCMediaRemoteDeviceImpl gameControllerState]
  -[_TVRCMediaRemoteDeviceImpl setGameControllerState:]
  -[_TVRCMediaRemoteDeviceImpl eventTranslator]
  -[_TVRCMediaRemoteDeviceImpl setEventTranslator:]
  -[_TVRCMediaRemoteDeviceImpl setVoiceRecorder:]
  -[_TVRCMediaRemoteDeviceImpl queuedAudioBuffers]
  -[_TVRCMediaRemoteDeviceImpl setQueuedAudioBuffers:]
  -[_TVRCMediaRemoteDeviceImpl keyboardImplManager]
  -[_TVRCMediaRemoteDeviceImpl setKeyboardImplManager:]


TVRCPINEntryAttributes : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned long totalDigitCount
 @property  unsigned long numberOfDigitGroups

  // class methods
  +[TVRCPINEntryAttributes supportsSecureCoding]

  // instance methods
  -[TVRCPINEntryAttributes encodeWithCoder:]
  -[TVRCPINEntryAttributes initWithCoder:]
  -[TVRCPINEntryAttributes .cxx_destruct]
  -[TVRCPINEntryAttributes initWithDigitCount:]
  -[TVRCPINEntryAttributes numberOfDigitGroups]
  -[TVRCPINEntryAttributes numberOfDigitsInGroup:]
  -[TVRCPINEntryAttributes totalDigitCount]
  -[TVRCPINEntryAttributes initWithGroupLengths:]


TVRCKeyboardAttributes : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *title
 @property  NSString *prompt
 @property  TVRCPINEntryAttributes *PINEntryAttributes
 @property  RTIDataPayload *rtiDataPayload
 @property  BOOL likelyPINEntry
 @property  BOOL secure
 @property  BOOL enablesReturnKeyAutomatically
 @property  long long keyboardType
 @property  long long returnKeyType
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long spellCheckingType

  // class methods
  +[TVRCKeyboardAttributes supportsSecureCoding]

  // instance methods
  -[TVRCKeyboardAttributes isEqual:]
  -[TVRCKeyboardAttributes encodeWithCoder:]
  -[TVRCKeyboardAttributes initWithCoder:]
  -[TVRCKeyboardAttributes .cxx_destruct]
  -[TVRCKeyboardAttributes _init]
  -[TVRCKeyboardAttributes title]
  -[TVRCKeyboardAttributes setTitle:]
  -[TVRCKeyboardAttributes _keyboardType]
  -[TVRCKeyboardAttributes prompt]
  -[TVRCKeyboardAttributes setPrompt:]
  -[TVRCKeyboardAttributes _isSecure]
  -[TVRCKeyboardAttributes _returnKeyType]
  -[TVRCKeyboardAttributes _setSecure:]
  -[TVRCKeyboardAttributes _autocorrectionType]
  -[TVRCKeyboardAttributes _autocapitalizationType]
  -[TVRCKeyboardAttributes _enablesReturnKeyAutomatically]
  -[TVRCKeyboardAttributes applyToTextField:]
  -[TVRCKeyboardAttributes PINEntryAttributes]
  -[TVRCKeyboardAttributes setPINEntryAttributes:]
  -[TVRCKeyboardAttributes _setAutocorrectionType:]
  -[TVRCKeyboardAttributes _setAutocapitalizationType:]
  -[TVRCKeyboardAttributes _setEnablesReturnKeyAutomatically:]
  -[TVRCKeyboardAttributes isEqualToAttributes:]
  -[TVRCKeyboardAttributes rtiDataPayload]
  -[TVRCKeyboardAttributes setRtiDataPayload:]
  -[TVRCKeyboardAttributes _isLikelyPINEntry]
  -[TVRCKeyboardAttributes _setLikelyPINEntry:]
  -[TVRCKeyboardAttributes _setKeyboardType:]
  -[TVRCKeyboardAttributes _setReturnKeyType:]
  -[TVRCKeyboardAttributes _spellCheckingType]
  -[TVRCKeyboardAttributes _setSpellCheckingType:]


_TVRCMediaRemoteLegacyKeyboardImpl : NSObject /usr/lib/libSystem.B.dylib <_TVRCMediaRemoteKeyboardAdapterDelegate, _TVRXKeyboardImpl>
 @property  BOOL editing
 @property  TVRCKeyboardAttributes *currentAttributes
 @property  _TVRCMediaRemoteKeyboardAdapter *adapter
 @property  _TVRXKeyboardController *keyboardController
 @property  _TVRCMRTelevisionWrapper *television
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRCMediaRemoteLegacyKeyboardImpl .cxx_destruct]
  -[_TVRCMediaRemoteLegacyKeyboardImpl attributes]
  -[_TVRCMediaRemoteLegacyKeyboardImpl text]
  -[_TVRCMediaRemoteLegacyKeyboardImpl setText:]
  -[_TVRCMediaRemoteLegacyKeyboardImpl isEditing]
  -[_TVRCMediaRemoteLegacyKeyboardImpl setEditing:]
  -[_TVRCMediaRemoteLegacyKeyboardImpl editing]
  -[_TVRCMediaRemoteLegacyKeyboardImpl keyboardController]
  -[_TVRCMediaRemoteLegacyKeyboardImpl adapter]
  -[_TVRCMediaRemoteLegacyKeyboardImpl setAdapter:]
  -[_TVRCMediaRemoteLegacyKeyboardImpl television]
  -[_TVRCMediaRemoteLegacyKeyboardImpl setKeyboardController:]
  -[_TVRCMediaRemoteLegacyKeyboardImpl sendReturnKey]
  -[_TVRCMediaRemoteLegacyKeyboardImpl currentAttributes]
  -[_TVRCMediaRemoteLegacyKeyboardImpl setTelevision:]
  -[_TVRCMediaRemoteLegacyKeyboardImpl _textEditingHandlerUpdatedWithEvent:session:]
  -[_TVRCMediaRemoteLegacyKeyboardImpl _sessionDidBegin:]
  -[_TVRCMediaRemoteLegacyKeyboardImpl _sessionDidEnd:]
  -[_TVRCMediaRemoteLegacyKeyboardImpl _sessionTextDidChange:]
  -[_TVRCMediaRemoteLegacyKeyboardImpl _sessionAttributesDidChange:]
  -[_TVRCMediaRemoteLegacyKeyboardImpl keyboardAdapter:receivedUnexpectedTextUpdate:]
  -[_TVRCMediaRemoteLegacyKeyboardImpl setCurrentAttributes:]


_TVRCMediaRemoteRemoteTextInputKeyboardImpl : NSObject /usr/lib/libSystem.B.dylib <RTIInputSystemSessionDelegate, RTIInputSystemPayloadDelegate, _TVRXKeyboardImpl>
 @property  BOOL editing
 @property  RTIInputSystemSourceSession *currentSession
 @property  TVRCKeyboardAttributes *currentAttributes
 @property  NSDate *lastSessionTimestamp
 @property  _TVRXKeyboardController *keyboardController
 @property  _TVRCMRTelevisionWrapper *television
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl dealloc]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl .cxx_destruct]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl attributes]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl text]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl setText:]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl isEditing]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl setEditing:]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl editing]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl currentSession]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl keyboardController]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl inputSessionDidBegin:]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl inputSessionDidEnd:]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl inputSessionDidDie:]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl handleTextActionPayload:]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl television]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl setKeyboardController:]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl sendReturnKey]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl setCurrentSession:]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl currentAttributes]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl setTelevision:]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl setTextActionPayload:]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl setCurrentAttributes:]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl _stopObservingTelevisionEditingSession]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl _receivedInputSourceSession:]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl _shouldAllowSourceSession]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl lastSessionTimestamp]
  -[_TVRCMediaRemoteRemoteTextInputKeyboardImpl setLastSessionTimestamp:]


_TVRCMediaRemoteDeviceQuery : NSObject /usr/lib/libSystem.B.dylib
 @property  <_TVRCMediaRemoteDeviceQueryDelegate> *delegate

  // instance methods
  -[_TVRCMediaRemoteDeviceQuery delegate]
  -[_TVRCMediaRemoteDeviceQuery setDelegate:]
  -[_TVRCMediaRemoteDeviceQuery .cxx_destruct]
  -[_TVRCMediaRemoteDeviceQuery stop]
  -[_TVRCMediaRemoteDeviceQuery start]
  -[_TVRCMediaRemoteDeviceQuery _shouldUseMediaRemoteForConnection:]
  -[_TVRCMediaRemoteDeviceQuery _discoveredTelevision:]
  -[_TVRCMediaRemoteDeviceQuery _removedTelevision:]


_TVRCMediaRemoteEventTranslator : NSObject /usr/lib/libSystem.B.dylib
 @property  _TVRCMRTelevisionWrapper *television
 @property  _TVRCMROriginWrapper *origin
 @property  _TVRCMRVirtualTouchDeviceWrapper *touchDevice

  // instance methods
  -[_TVRCMediaRemoteEventTranslator .cxx_destruct]
  -[_TVRCMediaRemoteEventTranslator origin]
  -[_TVRCMediaRemoteEventTranslator setOrigin:]
  -[_TVRCMediaRemoteEventTranslator television]
  -[_TVRCMediaRemoteEventTranslator sendButtonEvent:]
  -[_TVRCMediaRemoteEventTranslator _isMediaButtonEvent:]
  -[_TVRCMediaRemoteEventTranslator setTelevision:]
  -[_TVRCMediaRemoteEventTranslator sendTouchEvent:withDeviceID:]
  -[_TVRCMediaRemoteEventTranslator touchDevice]
  -[_TVRCMediaRemoteEventTranslator _commandForMediaButtonEvent:]
  -[_TVRCMediaRemoteEventTranslator _commandOptionsForMediaButtonEvent:command:]
  -[_TVRCMediaRemoteEventTranslator _createMRHIDButtonEventTemplateWithButtonType:]
  -[_TVRCMediaRemoteEventTranslator _createMRHIDTouchEvent:]


_TVRXManagedConfigManager : NSObject /usr/lib/libSystem.B.dylib <MCProfileConnectionObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_TVRXManagedConfigManager sharedInstance]

  // instance methods
  -[_TVRXManagedConfigManager init]
  -[_TVRXManagedConfigManager dealloc]
  -[_TVRXManagedConfigManager profileConnectionDidReceiveProfileListChangedNotification:userInfo:]
  -[_TVRXManagedConfigManager refreshState]
  -[_TVRXManagedConfigManager managedConfigProfileInstalled]


_TVRCXPCClient : NSObject /usr/lib/libSystem.B.dylib <TVRCXPCResponseProtocol, TVRCXPCRequestProtocol>
 @property  NSXPCConnection *xpcConnection
 @property  <TVRCXPCRequestProtocol> *remoteObject
 @property  NSMutableDictionary *eventObserversByID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_TVRCXPCClient sharedInstance]

  // instance methods
  -[_TVRCXPCClient init]
  -[_TVRCXPCClient .cxx_destruct]
  -[_TVRCXPCClient xpcConnection]
  -[_TVRCXPCClient setXpcConnection:]
  -[_TVRCXPCClient remoteObject]
  -[_TVRCXPCClient setRemoteObject:]
  -[_TVRCXPCClient fulfillAuthChallengeForDeviceWithIdentifier:withLocallyEnteredCode:]
  -[_TVRCXPCClient cancelAuthChallengeForDeviceWithIdentifier:]
  -[_TVRCXPCClient _setupConnectionIfNeeded]
  -[_TVRCXPCClient openConnectionToDeviceWithIdentifier:]
  -[_TVRCXPCClient closeConnectionToDeviceWithIdentifier:withType:]
  -[_TVRCXPCClient sendButtonEvent:toDeviceWithIdentifier:]
  -[_TVRCXPCClient sendTouchEvent:toDeviceWithIdentifier:]
  -[_TVRCXPCClient sendGameControllerEvent:toDeviceWithIdentifier:]
  -[_TVRCXPCClient sendInputText:toDeviceWithIdentifier:]
  -[_TVRCXPCClient sendInputReturnKeyToDeviceWithIdentifier:]
  -[_TVRCXPCClient sendInputTextPayload:toDeviceWithIdentifier:]
  -[_TVRCXPCClient setVoiceRecorderAutomaticRecording:forDeviceWithIdentifier:]
  -[_TVRCXPCClient startVoiceRecordingForDeviceWithIdentifier:]
  -[_TVRCXPCClient stopVoiceRecordingForDeviceWithIdentifier:]
  -[_TVRCXPCClient beginDeviceQuery]
  -[_TVRCXPCClient endDeviceQuery]
  -[_TVRCXPCClient fetchActiveMREndpointUIDWithCompletion:]
  -[_TVRCXPCClient sendEvent:toDeviceWithIdentifier:options:response:]
  -[_TVRCXPCClient _broadcastStateUpdateToDevices:]
  -[_TVRCXPCClient _disconnectAllDevices]
  -[_TVRCXPCClient _postInvalidationNotification]
  -[_TVRCXPCClient deviceUpdatedState:]
  -[_TVRCXPCClient deviceWithState:encounteredAuthChallengeOfType:attributes:codeToEnterOnDevice:]
  -[_TVRCXPCClient deviceQueryUpdatedDiscoveredDevices:]
  -[_TVRCXPCClient addEventObserver:forDeviceWithIdentifier:]
  -[_TVRCXPCClient removeEventObserver:forDeviceWithIdentifier:]
  -[_TVRCXPCClient eventObserversByID]
  -[_TVRCXPCClient setEventObserversByID:]


_TVRCXPCProtocolManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[_TVRCXPCProtocolManager requestInterface]
  +[_TVRCXPCProtocolManager responseInterface]


_TVRCMediaRemoteKeyboardAdapter : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *text
 @property  NSMutableArray *typedStringsAwaitingAcknowledgement
 @property  NSTimer *acknowledgementTimer
 @property  _TVRCMRTelevisionWrapper *television
 @property  <_TVRCMediaRemoteKeyboardAdapterDelegate> *delegate

  // instance methods
  -[_TVRCMediaRemoteKeyboardAdapter init]
  -[_TVRCMediaRemoteKeyboardAdapter delegate]
  -[_TVRCMediaRemoteKeyboardAdapter setDelegate:]
  -[_TVRCMediaRemoteKeyboardAdapter .cxx_destruct]
  -[_TVRCMediaRemoteKeyboardAdapter text]
  -[_TVRCMediaRemoteKeyboardAdapter setText:]
  -[_TVRCMediaRemoteKeyboardAdapter television]
  -[_TVRCMediaRemoteKeyboardAdapter sessionEnded]
  -[_TVRCMediaRemoteKeyboardAdapter setTelevision:]
  -[_TVRCMediaRemoteKeyboardAdapter userEnteredText:]
  -[_TVRCMediaRemoteKeyboardAdapter sessionBeganWithInitialText:]
  -[_TVRCMediaRemoteKeyboardAdapter receivedRemotelyUpdatedText:]
  -[_TVRCMediaRemoteKeyboardAdapter _acknowledgementTimerExpired:]
  -[_TVRCMediaRemoteKeyboardAdapter _resetTextValueToSessionValue]
  -[_TVRCMediaRemoteKeyboardAdapter typedStringsAwaitingAcknowledgement]
  -[_TVRCMediaRemoteKeyboardAdapter setTypedStringsAwaitingAcknowledgement:]
  -[_TVRCMediaRemoteKeyboardAdapter acknowledgementTimer]
  -[_TVRCMediaRemoteKeyboardAdapter setAcknowledgementTimer:]


TVRCDeviceInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *mediaRemoteID
 @property  NSString *airplayID

  // instance methods
  -[TVRCDeviceInfo .cxx_destruct]
  -[TVRCDeviceInfo mediaRemoteID]
  -[TVRCDeviceInfo airplayID]
  -[TVRCDeviceInfo containsID:]
  -[TVRCDeviceInfo _populateValidIdentifiers:]


_TVRCRapportRemoteTextInputKeyboardImpl : NSObject /usr/lib/libSystem.B.dylib <RTIInputSystemSessionDelegate, RTIInputSystemPayloadDelegate, _TVRXKeyboardImpl>
 @property  BOOL editing
 @property  RTIInputSystemSourceSession *currentSession
 @property  TVRCKeyboardAttributes *currentAttributes
 @property  _TVRXKeyboardController *keyboardController
 @property  _TVRCRPCompanionLinkClientWrapper *companionLinkWrapper
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRCRapportRemoteTextInputKeyboardImpl .cxx_destruct]
  -[_TVRCRapportRemoteTextInputKeyboardImpl attributes]
  -[_TVRCRapportRemoteTextInputKeyboardImpl text]
  -[_TVRCRapportRemoteTextInputKeyboardImpl setText:]
  -[_TVRCRapportRemoteTextInputKeyboardImpl isEditing]
  -[_TVRCRapportRemoteTextInputKeyboardImpl setEditing:]
  -[_TVRCRapportRemoteTextInputKeyboardImpl editing]
  -[_TVRCRapportRemoteTextInputKeyboardImpl currentSession]
  -[_TVRCRapportRemoteTextInputKeyboardImpl keyboardController]
  -[_TVRCRapportRemoteTextInputKeyboardImpl inputSessionDidBegin:]
  -[_TVRCRapportRemoteTextInputKeyboardImpl inputSessionDidEnd:]
  -[_TVRCRapportRemoteTextInputKeyboardImpl inputSessionDidDie:]
  -[_TVRCRapportRemoteTextInputKeyboardImpl handleTextActionPayload:]
  -[_TVRCRapportRemoteTextInputKeyboardImpl setKeyboardController:]
  -[_TVRCRapportRemoteTextInputKeyboardImpl sendReturnKey]
  -[_TVRCRapportRemoteTextInputKeyboardImpl setCurrentSession:]
  -[_TVRCRapportRemoteTextInputKeyboardImpl currentAttributes]
  -[_TVRCRapportRemoteTextInputKeyboardImpl setTextActionPayload:]
  -[_TVRCRapportRemoteTextInputKeyboardImpl setCurrentAttributes:]
  -[_TVRCRapportRemoteTextInputKeyboardImpl _stopObservingTelevisionEditingSession]
  -[_TVRCRapportRemoteTextInputKeyboardImpl _receivedInputSourceSession:]
  -[_TVRCRapportRemoteTextInputKeyboardImpl setCompanionLinkWrapper:]
  -[_TVRCRapportRemoteTextInputKeyboardImpl companionLinkWrapper]


_TVRCMRCommandInfoWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned int command
 @property  NSString *commandDescription
 @property  BOOL enabled

  // instance methods
  -[_TVRCMRCommandInfoWrapper dealloc]
  -[_TVRCMRCommandInfoWrapper isEnabled]
  -[_TVRCMRCommandInfoWrapper command]
  -[_TVRCMRCommandInfoWrapper commandDescription]
  -[_TVRCMRCommandInfoWrapper initWithCommandInfo:]


_TVRCMROriginWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  <_TVRCMROriginDelegate> *delegate

  // instance methods
  -[_TVRCMROriginWrapper dealloc]
  -[_TVRCMROriginWrapper delegate]
  -[_TVRCMROriginWrapper setDelegate:]
  -[_TVRCMROriginWrapper .cxx_destruct]
  -[_TVRCMROriginWrapper sendCommand:options:]
  -[_TVRCMROriginWrapper initWithOrigin:]
  -[_TVRCMROriginWrapper endObservingUpdates]
  -[_TVRCMROriginWrapper startObservingUpdates]
  -[_TVRCMROriginWrapper isEqualToOriginRef:]
  -[_TVRCMROriginWrapper getPickedRouteHasVolumeControl:]
  -[_TVRCMROriginWrapper _supportedCommandsChanged:]
  -[_TVRCMROriginWrapper getSupportedCommands:]
  -[_TVRCMROriginWrapper _fetchAndReportSupportedCommands]


_TVRCMRAudioBufferWrapper : NSObject /usr/lib/libSystem.B.dylib <_TVRCAudioBuffer>
 @property  unsigned long packetCount
 @property  double sampleRate
 @property  double timestamp
 @property  float gain
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRCMRAudioBufferWrapper dealloc]
  -[_TVRCMRAudioBufferWrapper timestamp]
  -[_TVRCMRAudioBufferWrapper setTimestamp:]
  -[_TVRCMRAudioBufferWrapper setSampleRate:]
  -[_TVRCMRAudioBufferWrapper setGain:]
  -[_TVRCMRAudioBufferWrapper gain]
  -[_TVRCMRAudioBufferWrapper sampleRate]
  -[_TVRCMRAudioBufferWrapper packetCount]
  -[_TVRCMRAudioBufferWrapper setPacketCount:]
  -[_TVRCMRAudioBufferWrapper audioBuffer]
  -[_TVRCMRAudioBufferWrapper writeAudioData:length:]
  -[_TVRCMRAudioBufferWrapper writePacketDescriptions:length:]
  -[_TVRCMRAudioBufferWrapper initWithSettings:packetCapacity:maxPacketSize:]


TVRCDevice : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  NSString *name
 @property  _TVRCDeviceState *deviceState
 @property  TVRCKeyboardController *keyboardController
 @property  TVRCVoiceRecorder *voiceRecorder
 @property  TVRCDeviceInfo *info
 @property  long long connectionType
 @property  <TVRCDeviceDelegate> *delegate
 @property  NSString *model
 @property  BOOL supportsTouchEvents
 @property  long long connectionState
 @property  NSSet *supportedButtons
 @property  BOOL paired
 @property  unsigned long pairingCapability

  // instance methods
  -[TVRCDevice dealloc]
  -[TVRCDevice name]
  -[TVRCDevice delegate]
  -[TVRCDevice setDelegate:]
  -[TVRCDevice .cxx_destruct]
  -[TVRCDevice setName:]
  -[TVRCDevice identifier]
  -[TVRCDevice setIdentifier:]
  -[TVRCDevice connectionType]
  -[TVRCDevice model]
  -[TVRCDevice info]
  -[TVRCDevice isEqualToDevice:]
  -[TVRCDevice connect]
  -[TVRCDevice keyboardController]
  -[TVRCDevice setInfo:]
  -[TVRCDevice containsIdentifier:]
  -[TVRCDevice connectionState]
  -[TVRCDevice deviceState]
  -[TVRCDevice isPaired]
  -[TVRCDevice setDeviceState:]
  -[TVRCDevice initWithDeviceIdentifier:]
  -[TVRCDevice sendButtonEvent:]
  -[TVRCDevice sendGameControllerEvent:]
  -[TVRCDevice supportedButtons]
  -[TVRCDevice supportsTouchEvents]
  -[TVRCDevice setKeyboardController:]
  -[TVRCDevice sendTouchEvent:]
  -[TVRCDevice _sendRTIDataPayload:]
  -[TVRCDevice disconnectWithType:]
  -[TVRCDevice voiceRecorder]
  -[TVRCDevice pairingCapability]
  -[TVRCDevice setVoiceRecorder:]
  -[TVRCDevice _deviceEncounteredAuthChallengeType:attributes:codeToEnterOnDevice:]
  -[TVRCDevice _deviceUpdatedState:]
  -[TVRCDevice _disconnectDeviceDueToConnectionInterruption]
  -[TVRCDevice isInEditingSession]


_TVRCRPCompanionLinkClientWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  _TVRCRapportMediaEventsManager *mediaManager
 @property  RPCompanionLinkClient *companionClient
 @property  RPCompanionLinkDevice *device
 @property  RPSiriSession *siriSession
 @property  RPHIDSession *hidSession
 @property  RPHIDTouchSession *hidTouchSession
 @property  RPTextInputSession *textInputSession
 @property  @? rtiSessionHandler
 @property  BOOL activated
 @property  BOOL authenticated
 @property  BOOL startedSetup
 @property  BOOL connected
 @property  BOOL hidSessionActivated
 @property  BOOL hidTouchSessionActivated
 @property  BOOL textInputSessionActivated
 @property  NSString *name
 @property  NSString *identifier
 @property  NSDictionary *alternateIdentifiers
 @property  NSString *model
 @property  <_TVRCCompanionLinkClientWrapperDelegate> *delegate

  // class methods
  +[_TVRCRPCompanionLinkClientWrapper wrapperWithDevice:]

  // instance methods
  -[_TVRCRPCompanionLinkClientWrapper name]
  -[_TVRCRPCompanionLinkClientWrapper delegate]
  -[_TVRCRPCompanionLinkClientWrapper setDelegate:]
  -[_TVRCRPCompanionLinkClientWrapper .cxx_destruct]
  -[_TVRCRPCompanionLinkClientWrapper identifier]
  -[_TVRCRPCompanionLinkClientWrapper disconnect]
  -[_TVRCRPCompanionLinkClientWrapper connectionType]
  -[_TVRCRPCompanionLinkClientWrapper model]
  -[_TVRCRPCompanionLinkClientWrapper device]
  -[_TVRCRPCompanionLinkClientWrapper initWithDevice:]
  -[_TVRCRPCompanionLinkClientWrapper activated]
  -[_TVRCRPCompanionLinkClientWrapper connect]
  -[_TVRCRPCompanionLinkClientWrapper setAuthenticated:]
  -[_TVRCRPCompanionLinkClientWrapper authenticated]
  -[_TVRCRPCompanionLinkClientWrapper setActivated:]
  -[_TVRCRPCompanionLinkClientWrapper setConnected:]
  -[_TVRCRPCompanionLinkClientWrapper connected]
  -[_TVRCRPCompanionLinkClientWrapper setDevice:]
  -[_TVRCRPCompanionLinkClientWrapper isPaired]
  -[_TVRCRPCompanionLinkClientWrapper disconnectWithError:]
  -[_TVRCRPCompanionLinkClientWrapper sendButtonEvent:]
  -[_TVRCRPCompanionLinkClientWrapper supportedButtons]
  -[_TVRCRPCompanionLinkClientWrapper supportsTouchEvents]
  -[_TVRCRPCompanionLinkClientWrapper sendTouchEvent:]
  -[_TVRCRPCompanionLinkClientWrapper _disconnectWithError:]
  -[_TVRCRPCompanionLinkClientWrapper alternateIdentifiers]
  -[_TVRCRPCompanionLinkClientWrapper sendEvent:options:response:]
  -[_TVRCRPCompanionLinkClientWrapper setRTISessionHandler:]
  -[_TVRCRPCompanionLinkClientWrapper getCurrentRTISourceSession:]
  -[_TVRCRPCompanionLinkClientWrapper _updateConnectedState]
  -[_TVRCRPCompanionLinkClientWrapper _launchApplicationOrURL:]
  -[_TVRCRPCompanionLinkClientWrapper _commandForButtonEvent:]
  -[_TVRCRPCompanionLinkClientWrapper _stateForButtonEvent:]
  -[_TVRCRPCompanionLinkClientWrapper _handleSideEffectsForEvent:]
  -[_TVRCRPCompanionLinkClientWrapper setRtiSessionHandler:]
  -[_TVRCRPCompanionLinkClientWrapper _createHidSession]
  -[_TVRCRPCompanionLinkClientWrapper _setupMediaManager]
  -[_TVRCRPCompanionLinkClientWrapper _setupTouchSession]
  -[_TVRCRPCompanionLinkClientWrapper _setupTextInputSession]
  -[_TVRCRPCompanionLinkClientWrapper mediaManager]
  -[_TVRCRPCompanionLinkClientWrapper setMediaManager:]
  -[_TVRCRPCompanionLinkClientWrapper companionClient]
  -[_TVRCRPCompanionLinkClientWrapper setCompanionClient:]
  -[_TVRCRPCompanionLinkClientWrapper siriSession]
  -[_TVRCRPCompanionLinkClientWrapper setSiriSession:]
  -[_TVRCRPCompanionLinkClientWrapper hidSession]
  -[_TVRCRPCompanionLinkClientWrapper setHidSession:]
  -[_TVRCRPCompanionLinkClientWrapper hidTouchSession]
  -[_TVRCRPCompanionLinkClientWrapper setHidTouchSession:]
  -[_TVRCRPCompanionLinkClientWrapper textInputSession]
  -[_TVRCRPCompanionLinkClientWrapper setTextInputSession:]
  -[_TVRCRPCompanionLinkClientWrapper rtiSessionHandler]
  -[_TVRCRPCompanionLinkClientWrapper startedSetup]
  -[_TVRCRPCompanionLinkClientWrapper setStartedSetup:]
  -[_TVRCRPCompanionLinkClientWrapper hidSessionActivated]
  -[_TVRCRPCompanionLinkClientWrapper setHidSessionActivated:]
  -[_TVRCRPCompanionLinkClientWrapper hidTouchSessionActivated]
  -[_TVRCRPCompanionLinkClientWrapper setHidTouchSessionActivated:]
  -[_TVRCRPCompanionLinkClientWrapper textInputSessionActivated]
  -[_TVRCRPCompanionLinkClientWrapper setTextInputSessionActivated:]


_TVRCRapportMediaEventsManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSSet *volumeCommands
 @property  NSMutableSet *mediaCommands
 @property  RPMediaControlSession *mediaSession
 @property  @? eventHandler
 @property  int currentSetting
 @property  NSSet *supportedMediaCommands

  // instance methods
  -[_TVRCRapportMediaEventsManager dealloc]
  -[_TVRCRapportMediaEventsManager .cxx_destruct]
  -[_TVRCRapportMediaEventsManager eventHandler]
  -[_TVRCRapportMediaEventsManager setEventHandler:]
  -[_TVRCRapportMediaEventsManager mediaSession]
  -[_TVRCRapportMediaEventsManager setMediaSession:]
  -[_TVRCRapportMediaEventsManager currentSetting]
  -[_TVRCRapportMediaEventsManager setCurrentSetting:]
  -[_TVRCRapportMediaEventsManager _commandForMediaButtonEvent:]
  -[_TVRCRapportMediaEventsManager supportedMediaCommands]
  -[_TVRCRapportMediaEventsManager sendMediaEvent:]
  -[_TVRCRapportMediaEventsManager initWithCompanionLinkClient:eventHandler:]
  -[_TVRCRapportMediaEventsManager _setupMediaCommands:]
  -[_TVRCRapportMediaEventsManager _refreshCaptionState]
  -[_TVRCRapportMediaEventsManager supportedCaptionEvents]
  -[_TVRCRapportMediaEventsManager _captionSettingForButtonEvent:]
  -[_TVRCRapportMediaEventsManager volumeCommands]
  -[_TVRCRapportMediaEventsManager setVolumeCommands:]
  -[_TVRCRapportMediaEventsManager mediaCommands]
  -[_TVRCRapportMediaEventsManager setMediaCommands:]


TVRCGameControllerEvent : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  double timestamp
 @property  BOOL down
 @property  {CGPoint=dd} joystickLocation

  // class methods
  +[TVRCGameControllerEvent supportsSecureCoding]

  // instance methods
  -[TVRCGameControllerEvent encodeWithCoder:]
  -[TVRCGameControllerEvent initWithCoder:]
  -[TVRCGameControllerEvent timestamp]
  -[TVRCGameControllerEvent _initWithTimestamp:isDown:joystickLocation:]
  -[TVRCGameControllerEvent isDown]
  -[TVRCGameControllerEvent joystickLocation]


TVRCDeviceQuery : NSObject /usr/lib/libSystem.B.dylib
 @property  <TVRCDeviceQueryDelegate> *delegate
 @property  NSSet *devices

  // class methods
  +[TVRCDeviceQuery fetchActiveEndpointUIDWithCompletion:]
  +[TVRCDeviceQuery _allDiscoveredDevices]
  +[TVRCDeviceQuery _allDiscoveredDevicesDidUpdate:]

  // instance methods
  -[TVRCDeviceQuery dealloc]
  -[TVRCDeviceQuery delegate]
  -[TVRCDeviceQuery setDelegate:]
  -[TVRCDeviceQuery .cxx_destruct]
  -[TVRCDeviceQuery stop]
  -[TVRCDeviceQuery start]
  -[TVRCDeviceQuery devices]


TVRCDeviceEventManager : NSObject /usr/lib/libSystem.B.dylib
 @property  TVRCDevice *device
 @property  @? eventResponseHandler

  // instance methods
  -[TVRCDeviceEventManager .cxx_destruct]
  -[TVRCDeviceEventManager device]
  -[TVRCDeviceEventManager setDevice:]
  -[TVRCDeviceEventManager initWithDevice:responseHandler:]
  -[TVRCDeviceEventManager sendEvent:options:]
  -[TVRCDeviceEventManager eventResponseHandler]
  -[TVRCDeviceEventManager setEventResponseHandler:]


_TVRXDevice : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  NSString *identifier
 @property  NSDictionary *alternateIdentifiers
 @property  NSString *model
 @property  NSSet *supportedButtons
 @property  <_TVRCDeviceImpl> *impl
 @property  <_TVRXDeviceDelegate> *delegate
 @property  long long connectionType
 @property  BOOL supportsTouchEvents
 @property  BOOL paired
 @property  long long connectionState
 @property  _TVRXVoiceRecorder *voiceRecorder
 @property  _TVRXKeyboardController *keyboardController
 @property  unsigned long pairingCapability

  // instance methods
  -[_TVRXDevice name]
  -[_TVRXDevice delegate]
  -[_TVRXDevice setDelegate:]
  -[_TVRXDevice .cxx_destruct]
  -[_TVRXDevice _init]
  -[_TVRXDevice setName:]
  -[_TVRXDevice identifier]
  -[_TVRXDevice setIdentifier:]
  -[_TVRXDevice _impl]
  -[_TVRXDevice disconnect]
  -[_TVRXDevice connectionType]
  -[_TVRXDevice model]
  -[_TVRXDevice setModel:]
  -[_TVRXDevice connect]
  -[_TVRXDevice allIdentifiers]
  -[_TVRXDevice _setImpl:]
  -[_TVRXDevice keyboardController]
  -[_TVRXDevice containsIdentifier:]
  -[_TVRXDevice connectionState]
  -[_TVRXDevice paired]
  -[_TVRXDevice sendButtonEvent:]
  -[_TVRXDevice sendGameControllerEvent:]
  -[_TVRXDevice supportedButtons]
  -[_TVRXDevice supportsTouchEvents]
  -[_TVRXDevice sendTouchEvent:]
  -[_TVRXDevice voiceRecorder]
  -[_TVRXDevice alternateIdentifiers]
  -[_TVRXDevice pairingCapability]
  -[_TVRXDevice setAlternateIdentifiers:]
  -[_TVRXDevice setSupportedButtons:]
  -[_TVRXDevice _connectionAttemptSucceeded]
  -[_TVRXDevice _disconnected:error:]
  -[_TVRXDevice _setDeviceName:]
  -[_TVRXDevice sendEvent:options:response:]
  -[_TVRXDevice _encounteredAuthenticationChallenge:]
  -[_TVRXDevice _setSupportedButtons:]
  -[_TVRXDevice _applyButtonEventSideEffects:]
  -[_TVRXDevice _authenticationIsSupported]
  -[_TVRXDevice _setActiveEndpoint]
  -[_TVRXDevice _setIdentifier:alternateIdentifiers:name:model:supportedButtons:]


_TVRCRapportDeviceImpl : NSObject /usr/lib/libSystem.B.dylib <_TVRCCompanionLinkClientWrapperDelegate, _TVRCDeviceImpl>
 @property  _TVRCRPCompanionLinkClientWrapper *deviceWrapper
 @property  _TVRXKeyboardController *keyboardController
 @property  _TVRCRapportRemoteTextInputKeyboardImpl *keyboardImpl
 @property  _TVRXDevice *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_TVRCRapportDeviceImpl implWithDevice:]

  // instance methods
  -[_TVRCRapportDeviceImpl name]
  -[_TVRCRapportDeviceImpl .cxx_destruct]
  -[_TVRCRapportDeviceImpl identifier]
  -[_TVRCRapportDeviceImpl disconnect]
  -[_TVRCRapportDeviceImpl connectionType]
  -[_TVRCRapportDeviceImpl model]
  -[_TVRCRapportDeviceImpl device]
  -[_TVRCRapportDeviceImpl initWithDevice:]
  -[_TVRCRapportDeviceImpl connect]
  -[_TVRCRapportDeviceImpl keyboardController]
  -[_TVRCRapportDeviceImpl setDevice:]
  -[_TVRCRapportDeviceImpl isPaired]
  -[_TVRCRapportDeviceImpl sendButtonEvent:]
  -[_TVRCRapportDeviceImpl sendGameControllerEvent:]
  -[_TVRCRapportDeviceImpl supportedButtons]
  -[_TVRCRapportDeviceImpl supportsTouchEvents]
  -[_TVRCRapportDeviceImpl setKeyboardController:]
  -[_TVRCRapportDeviceImpl sendTouchEvent:]
  -[_TVRCRapportDeviceImpl voiceRecorder]
  -[_TVRCRapportDeviceImpl alternateIdentifiers]
  -[_TVRCRapportDeviceImpl pairingCapability]
  -[_TVRCRapportDeviceImpl setAuthenticationSupported:]
  -[_TVRCRapportDeviceImpl sendEvent:options:response:]
  -[_TVRCRapportDeviceImpl _setupKeyboardController]
  -[_TVRCRapportDeviceImpl keyboardImpl]
  -[_TVRCRapportDeviceImpl deviceEncounteredAuthenticationChallenge:]
  -[_TVRCRapportDeviceImpl disconnectedFromDevice:error:]
  -[_TVRCRapportDeviceImpl deviceUpdatedSupportedButtons:]
  -[_TVRCRapportDeviceImpl connectedToDevice:]
  -[_TVRCRapportDeviceImpl deviceWrapper]
  -[_TVRCRapportDeviceImpl setDeviceWrapper:]
  -[_TVRCRapportDeviceImpl setKeyboardImpl:]


_TVRCMediaRemoteEndpointManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[_TVRCMediaRemoteEndpointManager sharedInstance]

  // instance methods
  -[_TVRCMediaRemoteEndpointManager updateActiveEndpoint:withCompletion:]
  -[_TVRCMediaRemoteEndpointManager fetchActiveEndpointWithCompletion:]


_TVRCRapportDeviceRecord : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *ids
 @property  unsigned long transports

  // instance methods
  -[_TVRCRapportDeviceRecord .cxx_destruct]
  -[_TVRCRapportDeviceRecord ids]
  -[_TVRCRapportDeviceRecord transports]
  -[_TVRCRapportDeviceRecord setTransports:]
  -[_TVRCRapportDeviceRecord setIds:]
  -[_TVRCRapportDeviceRecord initWithIDS:]
  -[_TVRCRapportDeviceRecord hasAvailableTransports]


_TVRCRapportDeviceQuery : NSObject /usr/lib/libSystem.B.dylib
 @property  <_TVRCRapportDeviceQueryDelegate> *delegate

  // instance methods
  -[_TVRCRapportDeviceQuery dealloc]
  -[_TVRCRapportDeviceQuery delegate]
  -[_TVRCRapportDeviceQuery setDelegate:]
  -[_TVRCRapportDeviceQuery .cxx_destruct]
  -[_TVRCRapportDeviceQuery stop]
  -[_TVRCRapportDeviceQuery start]
  -[_TVRCRapportDeviceQuery _disconnectAllDevices]
  -[_TVRCRapportDeviceQuery _deviceFound:unpairedBLE:]
  -[_TVRCRapportDeviceQuery _shouldReportDevice:]
  -[_TVRCRapportDeviceQuery _deviceLost:]
  -[_TVRCRapportDeviceQuery _recordExistsForIDS:]
  -[_TVRCRapportDeviceQuery _updateRecordForIDS:addTransportForFlag:]
  -[_TVRCRapportDeviceQuery _updateRecordForIDS:removeTransportForFlag:]
  -[_TVRCRapportDeviceQuery _transportForStatusFlag:]


_TVRCWeakObjectWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  id objectValue

  // class methods
  +[_TVRCWeakObjectWrapper wrapperWithObjectValue:]

  // instance methods
  -[_TVRCWeakObjectWrapper .cxx_destruct]
  -[_TVRCWeakObjectWrapper objectValue]
  -[_TVRCWeakObjectWrapper setObjectValue:]


_TVRCMRTelevisionWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  NSString *identifier
 @property  NSDictionary *alternateIdentifiers
 @property  NSString *softwareVersion
 @property  BOOL isPairingAllowed
 @property  unsigned int voiceRecordingState
 @property  _TVRCMROriginWrapper *customOrigin

  // class methods
  +[_TVRCMRTelevisionWrapper deletePairedDevice:]
  +[_TVRCMRTelevisionWrapper wrapperWithTelevision:]

  // instance methods
  -[_TVRCMRTelevisionWrapper dealloc]
  -[_TVRCMRTelevisionWrapper name]
  -[_TVRCMRTelevisionWrapper identifier]
  -[_TVRCMRTelevisionWrapper disconnect]
  -[_TVRCMRTelevisionWrapper setText:]
  -[_TVRCMRTelevisionWrapper connect]
  -[_TVRCMRTelevisionWrapper deleteBackward]
  -[_TVRCMRTelevisionWrapper insertText:]
  -[_TVRCMRTelevisionWrapper clearText]
  -[_TVRCMRTelevisionWrapper softwareVersion]
  -[_TVRCMRTelevisionWrapper initWithTelevision:]
  -[_TVRCMRTelevisionWrapper customOrigin]
  -[_TVRCMRTelevisionWrapper sendButtonEvent:]
  -[_TVRCMRTelevisionWrapper voiceRecordingState]
  -[_TVRCMRTelevisionWrapper setConnectionStateHandler:]
  -[_TVRCMRTelevisionWrapper alternateIdentifiers]
  -[_TVRCMRTelevisionWrapper setNameChangedHandler:]
  -[_TVRCMRTelevisionWrapper setPairingHandler:]
  -[_TVRCMRTelevisionWrapper sendTouchEvent:withDeviceID:]
  -[_TVRCMRTelevisionWrapper sendGameControllerDigitizerEvent:withControllerID:]
  -[_TVRCMRTelevisionWrapper setWantsNowPlayingUpdates:]
  -[_TVRCMRTelevisionWrapper registerVirtualTouchDevice:completion:]
  -[_TVRCMRTelevisionWrapper setVoiceRecordingStateHandler:]
  -[_TVRCMRTelevisionWrapper registerVirtualVoiceInputDevice:completion:]
  -[_TVRCMRTelevisionWrapper sendAudioData:withDeviceID:]
  -[_TVRCMRTelevisionWrapper setWantsVolumeControlAvailabilityUpdates:]
  -[_TVRCMRTelevisionWrapper isPairingAllowed]
  -[_TVRCMRTelevisionWrapper setGameControllerInputModeHandler:]
  -[_TVRCMRTelevisionWrapper registerGameControllerDevice:]
  -[_TVRCMRTelevisionWrapper unregisterGameControllerDevice:]
  -[_TVRCMRTelevisionWrapper sendGameControllerButtonEventWithButton:isDown:controllerID:]
  -[_TVRCMRTelevisionWrapper setTextEditingHandler:]
  -[_TVRCMRTelevisionWrapper getTextEditingSession:]
  -[_TVRCMRTelevisionWrapper setRTISessionHandler:]
  -[_TVRCMRTelevisionWrapper getCurrentRTISourceSession:]


_TVRCMediaRemoteKeyboardImplManager : NSObject /usr/lib/libSystem.B.dylib
 @property  _TVRCMRTelevisionWrapper *television

  // instance methods
  -[_TVRCMediaRemoteKeyboardImplManager .cxx_destruct]
  -[_TVRCMediaRemoteKeyboardImplManager television]
  -[_TVRCMediaRemoteKeyboardImplManager setTelevision:]
  -[_TVRCMediaRemoteKeyboardImplManager initWithTelevisionSystemVersion:]
  -[_TVRCMediaRemoteKeyboardImplManager keyboardImpl]


_TVRXKeyboardController : NSObject /usr/lib/libSystem.B.dylib
 @property  <_TVRXKeyboardImpl> *impl
 @property  <_TVRXKeyboardControllerDelegate> *delegate
 @property  BOOL editing
 @property  TVRCKeyboardAttributes *attributes
 @property  NSString *text

  // instance methods
  -[_TVRXKeyboardController delegate]
  -[_TVRXKeyboardController setDelegate:]
  -[_TVRXKeyboardController .cxx_destruct]
  -[_TVRXKeyboardController _init]
  -[_TVRXKeyboardController attributes]
  -[_TVRXKeyboardController _impl]
  -[_TVRXKeyboardController text]
  -[_TVRXKeyboardController setText:]
  -[_TVRXKeyboardController isEditing]
  -[_TVRXKeyboardController _setImpl:]
  -[_TVRXKeyboardController _endSession]
  -[_TVRXKeyboardController sendReturnKey]
  -[_TVRXKeyboardController _editingSessionBeganWithAttributes:]
  -[_TVRXKeyboardController _editingSessionEnded]
  -[_TVRXKeyboardController _editingSessionUpdatedAttributes:]
  -[_TVRXKeyboardController _editingSessionUpdatedText:]
  -[_TVRXKeyboardController _beginSessionWithAttributes:]
  -[_TVRXKeyboardController sendTextActionPayload:]
  -[_TVRXKeyboardController _textActionPayloadGenerated:]


TVRCVoiceRecorder : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL recordsAutomatically

  // instance methods
  -[TVRCVoiceRecorder .cxx_destruct]
  -[TVRCVoiceRecorder stop]
  -[TVRCVoiceRecorder start]
  -[TVRCVoiceRecorder recordsAutomatically]
  -[TVRCVoiceRecorder setRecordsAutomatically:]
  -[TVRCVoiceRecorder _initWithDevice:]


_TVRXDeviceAuthenticationChallenge : NSObject /usr/lib/libSystem.B.dylib
 @property  long long challengeType
 @property  long long challengeAttributes
 @property  NSString *codeToEnterOnDevice

  // class methods
  +[_TVRXDeviceAuthenticationChallenge _challengeWithCodeToEnterLocally:]
  +[_TVRXDeviceAuthenticationChallenge _challengeWithCodeToEnterOnDevice:]

  // instance methods
  -[_TVRXDeviceAuthenticationChallenge .cxx_destruct]
  -[_TVRXDeviceAuthenticationChallenge _init]
  -[_TVRXDeviceAuthenticationChallenge cancel]
  -[_TVRXDeviceAuthenticationChallenge userEnteredCodeLocally:]
  -[_TVRXDeviceAuthenticationChallenge challengeAttributes]
  -[_TVRXDeviceAuthenticationChallenge challengeType]
  -[_TVRXDeviceAuthenticationChallenge setChallengeAttributes:]
  -[_TVRXDeviceAuthenticationChallenge codeToEnterOnDevice]


TVRCKeyboardController : NSObject /usr/lib/libSystem.B.dylib
 @property  <TVRCKeyboardControllerDelegate> *delegate
 @property  BOOL editing
 @property  TVRCKeyboardAttributes *attributes
 @property  NSString *text

  // instance methods
  -[TVRCKeyboardController delegate]
  -[TVRCKeyboardController setDelegate:]
  -[TVRCKeyboardController .cxx_destruct]
  -[TVRCKeyboardController attributes]
  -[TVRCKeyboardController text]
  -[TVRCKeyboardController setText:]
  -[TVRCKeyboardController isEditing]
  -[TVRCKeyboardController _setCurrentState:]
  -[TVRCKeyboardController sendReturnKey]
  -[TVRCKeyboardController _initWithDevice:]


WakeAppleTVIntent : INIntent /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 @property  TVRDevice *device


WakeAppleTVIntentResponse : INIntentResponse /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 @property  long long code

  // instance methods
  -[WakeAppleTVIntentResponse code]
  -[WakeAppleTVIntentResponse setCode:]
  -[WakeAppleTVIntentResponse initWithCode:userActivity:]


SleepAppleTVIntent : INIntent /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 @property  TVRDevice *device


SleepAppleTVIntentResponse : INIntentResponse /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 @property  long long code

  // instance methods
  -[SleepAppleTVIntentResponse code]
  -[SleepAppleTVIntentResponse setCode:]
  -[SleepAppleTVIntentResponse initWithCode:userActivity:]


LaunchTVAppIntent : INIntent /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 @property  TVRDevice *device


LaunchTVAppIntentResponse : INIntentResponse /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 @property  long long code

  // instance methods
  -[LaunchTVAppIntentResponse code]
  -[LaunchTVAppIntentResponse setCode:]
  -[LaunchTVAppIntentResponse initWithCode:userActivity:]


LaunchRemoteIntent : INIntent /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 @property  TVRDevice *device


LaunchRemoteIntentResponse : INIntentResponse /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 @property  long long code

  // instance methods
  -[LaunchRemoteIntentResponse code]
  -[LaunchRemoteIntentResponse setCode:]
  -[LaunchRemoteIntentResponse initWithCode:userActivity:]


PauseContentIntent : INIntent /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 @property  TVRDevice *device
 @property  long long mediaCommand


PauseContentIntentResponse : INIntentResponse /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 @property  long long code

  // instance methods
  -[PauseContentIntentResponse code]
  -[PauseContentIntentResponse setCode:]
  -[PauseContentIntentResponse initWithCode:userActivity:]


LaunchApplicationIntent : INIntent /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 @property  TVRDevice *device
 @property  TVRApplication *application


LaunchApplicationIntentResponse : INIntentResponse /System/Library/PrivateFrameworks/Rapport.framework/Rapport
 @property  long long code

  // instance methods
  -[LaunchApplicationIntentResponse code]
  -[LaunchApplicationIntentResponse setCode:]
  -[LaunchApplicationIntentResponse initWithCode:userActivity:]


TVRMediaCommandResolutionResult : INEnumResolutionResult /System/Library/PrivateFrameworks/Rapport.framework/Rapport
  // class methods
  +[TVRMediaCommandResolutionResult successWithResolvedMediaCommand:]
  +[TVRMediaCommandResolutionResult confirmationRequiredWithMediaCommandToConfirm:]


TVRDevice : INObject /System/Library/PrivateFrameworks/Rapport.framework/Rapport

TVRDeviceResolutionResult : INObjectResolutionResult /System/Library/PrivateFrameworks/Rapport.framework/Rapport
  // class methods
  +[TVRDeviceResolutionResult successWithResolvedDevice:]
  +[TVRDeviceResolutionResult disambiguationWithDevicesToDisambiguate:]
  +[TVRDeviceResolutionResult confirmationRequiredWithDeviceToConfirm:]


TVRApplication : INObject /System/Library/PrivateFrameworks/Rapport.framework/Rapport

TVRApplicationResolutionResult : INObjectResolutionResult /System/Library/PrivateFrameworks/Rapport.framework/Rapport
  // class methods
  +[TVRApplicationResolutionResult successWithResolvedApplication:]
  +[TVRApplicationResolutionResult disambiguationWithApplicationsToDisambiguate:]
  +[TVRApplicationResolutionResult confirmationRequiredWithApplicationToConfirm:]


01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioFormat 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVVoiceController 
01 00 0a00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPAggregateDictionary 
01 00 0900 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCharacteristicBatchRequest 
01 00 0900 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCharacteristicReadRequest 
01 00 0900 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCharacteristicWriteRequest 
01 00 0900 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMHomeManager 
01 00 0900 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMHomeManagerConfiguration 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INEnumResolutionResult 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INIntent 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INIntentResponse 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INObject 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INObjectResolutionResult 
01 00 0500 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1100 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0700 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPCompanionLinkClient 
01 00 0700 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPHIDSession 
01 00 0700 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPHIDTouchEvent 
01 00 0700 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPHIDTouchSession 
01 00 0700 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPMediaControlSession 
01 00 0700 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPSiriSession 
01 00 0700 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPTextInputSession 
01 00 0800 /System/Library/PrivateFrameworks/RemoteTextInput.framework/RemoteTextInput: RTIDataPayload 
