|| __DATA.__objc_data _OBJC_CLASS_$_DAAgent
|| __DATA.__objc_data _OBJC_CLASS_$_DAChangeHistoryClerk
|| __DATA.__objc_data _OBJC_CLASS_$_DACoreDAVAgent
|| __DATA.__objc_data _OBJC_CLASS_$_DADAccessManager
|| __DATA.__objc_data _OBJC_CLASS_$_DADClient
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientAccountTimers
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientAttachmentDownloadDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientCalendarAvailabilityResponseDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientCalendarDirectorySearchResponseDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientContactsSearchDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientGrantedDelegatesListResponseDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientGroupExpansionResponseDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientHolidayCalendarFetchDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientOfficeHoursRequestDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientSettingsDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientShareResponseDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientSubscribedCalendarDownloadDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientSubscribedCalendarJunkCheckDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientSubscribedCalendarJunkReportDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADClientUpdateGrantedDelegatePermissionResponseDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADStatusReportAggregator
|| __DATA.__objc_data _OBJC_CLASS_$_DAFolderSyncRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DAReachability
|| __DATA.__objc_data _OBJC_CLASS_$_DARefreshWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_DATokenRegistrationRequest
|| __DATA.__objc_data _OBJC_CLASS_$__DAChangeHistoryABLegacyClerk
|| __DATA.__objc_data _OBJC_CLASS_$__DAChangeHistoryContactsClerk
|| __DATA.__objc_data _OBJC_METACLASS_$_DAAgent
|| __DATA.__objc_data _OBJC_METACLASS_$_DAChangeHistoryClerk
|| __DATA.__objc_data _OBJC_METACLASS_$_DACoreDAVAgent
|| __DATA.__objc_data _OBJC_METACLASS_$_DADAccessManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClient
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientAccountTimers
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientAttachmentDownloadDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientCalendarAvailabilityResponseDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientCalendarDirectorySearchResponseDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientContactsSearchDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientGrantedDelegatesListResponseDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientGroupExpansionResponseDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientHolidayCalendarFetchDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientOfficeHoursRequestDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientSettingsDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientShareResponseDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientSubscribedCalendarDownloadDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientSubscribedCalendarJunkCheckDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientSubscribedCalendarJunkReportDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADClientUpdateGrantedDelegatePermissionResponseDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADStatusReportAggregator
|| __DATA.__objc_data _OBJC_METACLASS_$_DAFolderSyncRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DAReachability
|| __DATA.__objc_data _OBJC_METACLASS_$_DARefreshWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_DATokenRegistrationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$__DAChangeHistoryABLegacyClerk
|| __DATA.__objc_data _OBJC_METACLASS_$__DAChangeHistoryContactsClerk
|| __DATA.__objc_ivar _OBJC_IVAR_$_DADStatusReportAggregator._completionBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$_DADStatusReportAggregator._finished
|| __DATA.__objc_ivar _OBJC_IVAR_$_DADStatusReportAggregator._numOutstandingReports
|| __DATA.__objc_ivar _OBJC_IVAR_$_DADStatusReportAggregator._persistentUUIDToStatusReport
|| __DATA_CONST.__const _DADAgentsStartedNotification
|| __DATA_CONST.__const _DADAgentsStoppedNotification
|| __DATA_CONST.__const _DADRequestClientStatusDumpNotification
|| __DATA_CONST.__const _kHolidayCalendarFetchThrottleDate
|| __DATA_DIRTY.__common ___RootDomainConnect
|| __DATA_DIRTY.__common _gDADHighAvailabilityQueue
|| __DATA_DIRTY.__common _gDADOperationQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DADAgentManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DADMain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DADaemonPowerAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DARefreshManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DADAgentManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DADMain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DADaemonPowerAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DARefreshManager
|| __TEXT.__const _DARefreshIntervalAutomatic
|| __TEXT.__const _DARefreshIntervalManual
|| __TEXT.__const _DARefreshIntervalSystemDefault
|| __TEXT.__text __devicePowerChanged
|| __TEXT.__text _handleSignal
__ Accounts: _ACAccountDataclassCalendars
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifierCardDAVLegacy
__ Accounts: _ACAccountTypeIdentifierExchange
__ Accounts: _ACAccountTypeIdentifierHotmail
__ Accounts: _ACAccountTypeIdentifierSubscribedCalendar
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _OBJC_CLASS_$_ACAccountType
__ Accounts: _kAccountDataclassCalendars
__ Accounts: _kAccountDataclassContacts
__ Accounts: _kAccountDataclassContactsSearch
__ Accounts: _kAccountDataclassMail
__ Accounts: _kAccountDataclassNotes
__ AddressBookLegacy: _ABChangeHistoryCopyAllRegisteredClientIdentifiers
__ AddressBookLegacy: _ABChangeHistoryRegisterClientForSource
__ AddressBookLegacy: _ABChangeHistoryUnregisterClientForSource
__ AppSupport: _CPNetworkObserverHostname
__ AppSupport: _CPNetworkObserverHostnameReachableNotification
__ AppSupport: _CPNetworkObserverNetworkReachableNotification
__ AppSupport: _CPNetworkObserverReachable
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _OBJC_CLASS_$_CPNetworkObserver
__ AppleAccount: _AAAccountClassPrimary
__ ApplePushService: _APSEnvironmentDemo
__ ApplePushService: _APSEnvironmentDevelopment
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ CFNetwork: _CFURLCacheCopySharedURLCache
__ CFNetwork: _CFURLCacheRemoveAllCachedResponses
__ CFNetwork: _CFURLConnectionInvalidateConnectionCache
__ CalDAV: _CalDAVErrorDomain
__ CalDAV: _OBJC_CLASS_$_CalDAVCalendarSearchTask
__ CalDAVServerSimulator: _OBJC_CLASS_$_CalDAVServerSimulator
__ CalendarDatabase: _CDBPreferences_Notification_kCalPreferredDaysToSyncKey
__ CalendarDatabase: _CalAuxDatabaseCopyPath
__ CalendarDatabase: _CalAuxDatabaseCopyPersonaID
__ CalendarDatabase: _CalAuxDatabaseGetUID
__ CalendarDatabase: _CalCalendarCopySubCalAccountID
__ CalendarDatabase: _CalCalendarCopyTitle
__ CalendarDatabase: _CalCalendarGetUID
__ CalendarDatabase: _CalDatabaseCopyAllAuxDatabases
__ CalendarDatabase: _CalDatabaseCopyOfAllStores
__ CalendarDatabase: _CalDatabaseCopyRegisteredClientIdentifiersForPersistentChangeTrackingInStore
__ CalendarDatabase: _CalDatabaseMigrateIfNeededOutOfProcess
__ CalendarDatabase: _CalRemoveCalendar
__ CalendarDatabase: _CalRemoveClientForPersistentChangeTracking
__ CalendarDatabase: _CalRemoveStore
__ CalendarDatabase: _CalStoreCopyCalendars
__ CalendarDatabase: _CalStoreCopyExternalID
__ CalendarDatabase: _CalStoreGetType
__ CalendarDatabase: _OBJC_CLASS_$_CDBPreferences
__ CalendarDatabase: _OBJC_CLASS_$_CalStoreSetupAndTeardownUtils
__ CalendarFoundation: _CalAddStateCaptureBlock
__ CalendarFoundation: _OBJC_CLASS_$_CalDistributedNotificationCenter
__ CalendarFoundation: _OBJC_CLASS_$_CalHolidayAccountUtils
__ CalendarFoundation: _OBJC_CLASS_$_CalSystemInformation
__ Contacts: _OBJC_CLASS_$_CNSaveRequest
__ CoreAnalytics: _AnalyticsIsEventUsed
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreDAV: _CoreDAVErrorDomain
__ CoreDAV: _CoreDAVHTTPHeader_RetryAfter
__ CoreDAV: _OBJC_CLASS_$_CoreDAVOptionsTask
__ CoreDAV: _OBJC_CLASS_$_CoreDAVXMLData
__ CoreDAV: _cdXMLCalendarServerSource
__ CoreDAV: _cdXMLCalendarServerURI
__ CoreDAV: _cdXMLDAVURI
__ CoreDAV: _cdXMLHREF
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotificationWithOptions
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFLocaleCurrentLocaleDidChangeNotification
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreTelephony: __CTServerConnectionCopyCellularUsagePolicy
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionRegisterForNotification
__ CoreTelephony: _kCTCellularDataUsagePolicy
__ CoreTelephony: _kCTCellularDataUsagePolicyAlwaysAllow
__ CoreTelephony: _kCTCellularDataUsagePolicyDeny
__ CoreTelephony: _kCTPerAppNetworkDataAccessPolicyChangedNotification
__ CoreTelephony: _kCTWiFiDataUsagePolicy
__ DataAccess: _DAAccountFolderContentsChangedNotification
__ DataAccess: _DAMigrationIsNeeded
__ DataAccess: _DAReListenForAccounts
__ DataAccess: _DAUpdateMigrationVersion
__ DataAccess: _DAUserAgent
__ DataAccess: _OBJC_CLASS_$_DAAccount
__ DataAccess: _OBJC_CLASS_$_DAAccountChangeHandler
__ DataAccess: _OBJC_CLASS_$_DAAccountChangeUpdaterAccountStoreWrapper
__ DataAccess: _OBJC_CLASS_$_DAAccountLoader
__ DataAccess: _OBJC_CLASS_$_DAActivity
__ DataAccess: _OBJC_CLASS_$_DAAnalyticsReporter
__ DataAccess: _OBJC_CLASS_$_DABabysitter
__ DataAccess: _OBJC_CLASS_$_DAContactsAccountProvider
__ DataAccess: _OBJC_CLASS_$_DAContainerProvider
__ DataAccess: _OBJC_CLASS_$_DAKeychain
__ DataAccess: _OBJC_CLASS_$_DALocalDBGateKeeper
__ DataAccess: _OBJC_CLASS_$_DALocalDBHelper
__ DataAccess: _OBJC_CLASS_$_DALocalDBWatcher
__ DataAccess: _OBJC_CLASS_$_DAPowerAssertionManager
__ DataAccess: _OBJC_CLASS_$_DAPriorityManager
__ DataAccess: _OBJC_CLASS_$_DARunLoopRegistry
__ DataAccess: _OBJC_CLASS_$_DAStoreSyncStatusUpdater
__ DataAccess: _OBJC_CLASS_$_DATaskManager
__ DataAccess: _OBJC_CLASS_$_DATransaction
__ DataAccess: _OBJC_CLASS_$_DATransactionMonitor
__ DataAccess: _OBJC_METACLASS_$_DAPowerAssertionManager
__ DataAccess: _dataaccess_get_global_queue
__ DataAccess: _kDAAccountPersistentUUID
__ DataAccess: _kGenericDAAccountType
__ DataAccess: _kSubCalCalendarStoreExternalId
__ DataAccess: _sharedDAAccountStore
__ DataAccess: _statusAndErrorIndicateWeShouldTurnOnReachability
__ DataAccessExpress: _ASPolicyErrorKey
__ DataAccessExpress: _ASPolicyKey
__ DataAccessExpress: _ASPolicyKeyChangedNotification
__ DataAccessExpress: _DAAccountConfigChanged
__ DataAccessExpress: _DACPLoggingFlush
__ DataAccessExpress: _DAChangedFolderIDs
__ DataAccessExpress: _DADCalendarDirectorySearchRecordType_Users
__ DataAccessExpress: _DAErrorDomain
__ DataAccessExpress: _DALoggingwithCategory
__ DataAccessExpress: _OBJC_CLASS_$_CalDAVOfficeHour
__ DataAccessExpress: _OBJC_CLASS_$_DAAccountChangeInfo
__ DataAccessExpress: _OBJC_CLASS_$_DABehaviorOptions
__ DataAccessExpress: _OBJC_CLASS_$_DAContactsSearchQuery
__ DataAccessExpress: _OBJC_CLASS_$_DADisableableObject
__ DataAccessExpress: _OBJC_CLASS_$_DAECalendarDirectorySearchResult
__ DataAccessExpress: _OBJC_CLASS_$_DAEGrantedDelegate
__ DataAccessExpress: _OBJC_CLASS_$_DAEHolidayCalendarFetchResult
__ DataAccessExpress: _OBJC_CLASS_$_DAESubscribedCalendarSummary
__ DataAccessExpress: _OBJC_CLASS_$_DAFolderChange
__ DataAccessExpress: _OBJC_CLASS_$_DAOofParams
__ DataAccessExpress: _OBJC_CLASS_$_DASharedAccountProperties
__ DataAccessExpress: _OBJC_CLASS_$_DAStatusReport
__ DataAccessExpress: _OBJC_METACLASS_$_DADisableableObject
__ DataAccessExpress: __CPLog_to_os_log_type
__ DataAccessExpress: _kDADPortName
__ DataAccessExpress: _kDAEAccountIDKey
__ DataAccessExpress: _kDAEAddressesKey
__ DataAccessExpress: _kDAEAgentMonitoringNeedsReply
__ DataAccessExpress: _kDAEAgentMonitoringToken
__ DataAccessExpress: _kDAEAsyncProcessMeetingRequests
__ DataAccessExpress: _kDAEAttachmentDownloadFinished
__ DataAccessExpress: _kDAEAttachmentDownloadIdKey
__ DataAccessExpress: _kDAEAttachmentDownloadProgress
__ DataAccessExpress: _kDAEAttachmentIdsKey
__ DataAccessExpress: _kDAEAttachmentUUIDKey
__ DataAccessExpress: _kDAEBeginDownloadingAttachment
__ DataAccessExpress: _kDAEBeginMonitoringFolders
__ DataAccessExpress: _kDAECalendarAvailabilityRequestFinished
__ DataAccessExpress: _kDAECalendarAvailabilityRequestIDKey
__ DataAccessExpress: _kDAECalendarAvailabilityRequestReturnedResults
__ DataAccessExpress: _kDAECalendarAvailabilityResultsKey
__ DataAccessExpress: _kDAECalendarDirectorySearchExceededResultLimitKey
__ DataAccessExpress: _kDAECalendarDirectorySearchFinished
__ DataAccessExpress: _kDAECalendarDirectorySearchIDKey
__ DataAccessExpress: _kDAECalendarDirectorySearchRecordTypesKey
__ DataAccessExpress: _kDAECalendarDirectorySearchResultLimitKey
__ DataAccessExpress: _kDAECalendarDirectorySearchResultsKey
__ DataAccessExpress: _kDAECalendarDirectorySearchReturnedResults
__ DataAccessExpress: _kDAECalendarDirectorySearchTermsKey
__ DataAccessExpress: _kDAECalendarShareResponseFinished
__ DataAccessExpress: _kDAECancelCalendarAvailabilityRequest
__ DataAccessExpress: _kDAECancelCalendarDirectorySearch
__ DataAccessExpress: _kDAECancelDownloadSubscribedCalendar
__ DataAccessExpress: _kDAECancelDownloadingAttachment
__ DataAccessExpress: _kDAECancelGrantedDelegatesListRequest
__ DataAccessExpress: _kDAECancelServerContactsSearch
__ DataAccessExpress: _kDAECheckSubscribedCalendarIsJunk
__ DataAccessExpress: _kDAECheckSubscribedCalendarIsJunkFinished
__ DataAccessExpress: _kDAECheckSubscribedCalendarIsJunkIdKey
__ DataAccessExpress: _kDAECheckSubscribedCalendarJunkStatusKey
__ DataAccessExpress: _kDAEDataclassesBitmaskKey
__ DataAccessExpress: _kDAEDownloadSubscribedCalendar
__ DataAccessExpress: _kDAEDownloadSubscribedCalendarFinished
__ DataAccessExpress: _kDAEDownloadSubscribedCalendarPasswordRequired
__ DataAccessExpress: _kDAEDownloadSubscribedCalendarProgress
__ DataAccessExpress: _kDAEDownloadedBytesKey
__ DataAccessExpress: _kDAEEndDateKey
__ DataAccessExpress: _kDAEErrorDataKey
__ DataAccessExpress: _kDAEFetchHolidayCalendars
__ DataAccessExpress: _kDAEFetchHolidayCalendarsFinished
__ DataAccessExpress: _kDAEFetchHolidayCalendarsIdKey
__ DataAccessExpress: _kDAEFetchHolidayCalendarsResultsKey
__ DataAccessExpress: _kDAEFetchHolidayCalendarsResults_FetchResultsKey
__ DataAccessExpress: _kDAEFetchHolidayCalendarsRetryThrottleTime
__ DataAccessExpress: _kDAEFetchHolidayCalendarsReturnedResults
__ DataAccessExpress: _kDAEFetchOfficeHours
__ DataAccessExpress: _kDAEFillOutEASTimeZoneInfo
__ DataAccessExpress: _kDAEFolderChangeDataKey
__ DataAccessExpress: _kDAEFolderChangeFinished
__ DataAccessExpress: _kDAEFolderIDKey
__ DataAccessExpress: _kDAEFolderIDsKey
__ DataAccessExpress: _kDAEFolderNameKey
__ DataAccessExpress: _kDAEFolderSyncItemsCountKey
__ DataAccessExpress: _kDAEFoldersUpdated
__ DataAccessExpress: _kDAEGetActiveSyncDeviceIdentifier
__ DataAccessExpress: _kDAEGetCurrentPolicyKey
__ DataAccessExpress: _kDAEGetStatusReports
__ DataAccessExpress: _kDAEGetStatusReportsFromClient
__ DataAccessExpress: _kDAEGrantedDelegateKey
__ DataAccessExpress: _kDAEGrantedDelegatesListRequestFinished
__ DataAccessExpress: _kDAEGrantedDelegatesListRequestIDKey
__ DataAccessExpress: _kDAEGrantedDelegatesListResultsKey
__ DataAccessExpress: _kDAEGroupExpansionFinished
__ DataAccessExpress: _kDAEGroupExpansionIDKey
__ DataAccessExpress: _kDAEGroupExpansionPrincipalPathKey
__ DataAccessExpress: _kDAEHandleAccountChange
__ DataAccessExpress: _kDAEHandleAccountChangeDataKey
__ DataAccessExpress: _kDAEHandleURL
__ DataAccessExpress: _kDAEIgnoredEventIDKey
__ DataAccessExpress: _kDAEInvalidAccountIDKey
__ DataAccessExpress: _kDAEIsOofSettingsSupported
__ DataAccessExpress: _kDAEIsOofSupportedKey
__ DataAccessExpress: _kDAEIsUserRequestedKey
__ DataAccessExpress: _kDAELogDataAccessStatus
__ DataAccessExpress: _kDAEManageCalDAVServerSimulator
__ DataAccessExpress: _kDAEMeetingRequestDatasKey
__ DataAccessExpress: _kDAEMeetingRequestIdsToClearKey
__ DataAccessExpress: _kDAEMeetingRequestIdsToSoftClearKey
__ DataAccessExpress: _kDAEMessageNameKey
__ DataAccessExpress: _kDAEMonitoredFolderIdsAddedKey
__ DataAccessExpress: _kDAEMonitoredFolderIdsDeletedKey
__ DataAccessExpress: _kDAEMonitoredFolderIdsTagKey
__ DataAccessExpress: _kDAEOfficeHoursDataKey
__ DataAccessExpress: _kDAEOfficeHoursRequestFinished
__ DataAccessExpress: _kDAEOfficeHoursRequestIdKey
__ DataAccessExpress: _kDAEOofIsUpdateKey
__ DataAccessExpress: _kDAEOofRequestIDKey
__ DataAccessExpress: _kDAEOofSettings
__ DataAccessExpress: _kDAEOofSettingsFinished
__ DataAccessExpress: _kDAEOofSettingsRequestKey
__ DataAccessExpress: _kDAEOofSettingsResultKey
__ DataAccessExpress: _kDAEOpenServerContactsSearch
__ DataAccessExpress: _kDAEPerformCalendarDirectorySearch
__ DataAccessExpress: _kDAEPerformGroupExpansion
__ DataAccessExpress: _kDAEPersistentMonitoringKey
__ DataAccessExpress: _kDAEPolicyErrorCodeKey
__ DataAccessExpress: _kDAEPolicyKeyChanged
__ DataAccessExpress: _kDAEPolicyKeyKey
__ DataAccessExpress: _kDAEProcessFolderChange
__ DataAccessExpress: _kDAEProcessMeetingRequests
__ DataAccessExpress: _kDAERegisterForInterrogation
__ DataAccessExpress: _kDAEReportFolderItemsSyncResult
__ DataAccessExpress: _kDAEReportSharedCalendarAsJunk
__ DataAccessExpress: _kDAEReportSubscribedCalendarAsJunk
__ DataAccessExpress: _kDAERequestAllFolderContentsUpdate
__ DataAccessExpress: _kDAERequestCalendarAvailability
__ DataAccessExpress: _kDAERequestFolderContentsUpdate
__ DataAccessExpress: _kDAERequestFolderListUpdate
__ DataAccessExpress: _kDAERequestGrantedDelegatesList
__ DataAccessExpress: _kDAERequestPolicyUpdate
__ DataAccessExpress: _kDAERequireChangedFoldersKey
__ DataAccessExpress: _kDAEResetCertWarnings
__ DataAccessExpress: _kDAEResetThrottleTimers
__ DataAccessExpress: _kDAERespondToSharedCalendar
__ DataAccessExpress: _kDAEResumeMonitoringFolders
__ DataAccessExpress: _kDAESearchIDKey
__ DataAccessExpress: _kDAESearchQueryKey
__ DataAccessExpress: _kDAESearchResultsKey
__ DataAccessExpress: _kDAEServerContactsSearchQueryFinished
__ DataAccessExpress: _kDAEServerSimulatorActionBegin
__ DataAccessExpress: _kDAEServerSimulatorActionEnd
__ DataAccessExpress: _kDAEServerSimulatorActionKey
__ DataAccessExpress: _kDAEServerSimulatorHostnameKey
__ DataAccessExpress: _kDAESetFolderIdsThatExternalClientsCareAbout
__ DataAccessExpress: _kDAESetOfficeHours
__ DataAccessExpress: _kDAESetPasswordForSubscribedCalendar
__ DataAccessExpress: _kDAESharedCalendarActionIdKey
__ DataAccessExpress: _kDAESharedCalendarReponseTypeKey
__ DataAccessExpress: _kDAESharedCalendarResponseCalendarIDKey
__ DataAccessExpress: _kDAEStartDateKey
__ DataAccessExpress: _kDAEStartMonitoringAgents
__ DataAccessExpress: _kDAEStatusKey
__ DataAccessExpress: _kDAEStatusReportsKey
__ DataAccessExpress: _kDAEStopMonitoringAgents
__ DataAccessExpress: _kDAEStopMonitoringFolders
__ DataAccessExpress: _kDAESubCalDownloadRequestIDKey
__ DataAccessExpress: _kDAESubCalDownloadSummaryDataKey
__ DataAccessExpress: _kDAESubCalDownloadURLKey
__ DataAccessExpress: _kDAESubCalPasswordKey
__ DataAccessExpress: _kDAESubCalUsernameKey
__ DataAccessExpress: _kDAESuspendMonitoringFolders
__ DataAccessExpress: _kDAETaskIDKey
__ DataAccessExpress: _kDAETotalBytesKey
__ DataAccessExpress: _kDAEURLStringKey
__ DataAccessExpress: _kDAEUpdateGrantedDelegatePermissionRequest
__ DataAccessExpress: _kDAEUpdateGrantedDelegatePermissionRequestFinished
__ DataAccessExpress: _kDAEUpdateGrantedDelegatePermissionRequestIDKey
__ DataAccessExpress: _shouldDALogAtLevel
__ DataMigration: _DMPerformMigrationReturningAfterPlugin
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSURLAuthenticationMethodClientCertificate
__ Foundation: _NSURLAuthenticationMethodHTTPBasic
__ Foundation: _NSURLAuthenticationMethodHTTPDigest
__ Foundation: _NSURLAuthenticationMethodServerTrust
__ Foundation: _NSURLAuthenticationMethodXMobileMeAuthToken
__ Foundation: _NSURLErrorDomain
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLCredential
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _OBJC_CLASS_$_FBSSystemService
__ IOKit: _IOAllowPowerChange
__ IOKit: _IODeregisterForSystemPower
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortGetRunLoopSource
__ IOKit: _IORegisterForSystemPower
__ IOKit: _IOServiceClose
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MessageLegacy: _OBJC_CLASS_$_MailAccount
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _kMobileKeyBagLockStatusNotification
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientSetType
__ Notes: _OBJC_CLASS_$_NoteContext
__ PersistentConnection: _PCSettingsGetPollInterval
__ PersistentConnection: _PCSettingsGetStyle
__ Security: _SecTrustEvaluate
__ Security: _SecTrustGetCertificateCount
__ SetupAssistant: _BYSetupAssistantNeedsToRun
__ Symbolication: _OBJC_CLASS_$_VMUVMRegionIdentifier
__ Symbolication: _OBJC_IVAR_$_VMUVMRegion.pages_dirtied
__ Symbolication: _OBJC_IVAR_$_VMUVMRegion.pages_resident
__ TCC: _TCCAccessCheckAuditToken
__ TCC: _kTCCServiceAddressBook
__ TCC: _kTCCServiceCalendar
__ TCC: _kTCCServiceReminders
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ UserManagement: _OBJC_CLASS_$_UMUserSwitchBlockingTask
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_30_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _mach_continuous_approximate_time
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _setenv
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _sysconf
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_copy_entitlement_value
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_audit_token
__ libSystem.B.dylib: _xpc_connection_get_pid
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_remote_connection
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_getName
DAAgent : NSObject <DAReachabilityClient>
 @property  DAAccount *account
 @property  double lastRetryTimeout
 @property  BOOL syncWhenReachable
 @property  @? networkReachableBlock
 @property  BOOL isWaitingForPassword
 @property  BOOL isMonitoring
 @property  DATrustHandler *trustHandler
 @property  NSString *publicDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DAAgent account]
  -[DAAgent isMonitoring]
  -[DAAgent initWithAccount:]
  -[DAAgent stopObservingReachability]
  -[DAAgent setAccount:]
  -[DAAgent stateString]
  -[DAAgent publicDescription]
  -[DAAgent .cxx_destruct]
  -[DAAgent networkReachable]
  -[DAAgent shutdown]
  -[DAAgent startMonitoring]
  -[DAAgent trustHandler]
  -[DAAgent saveXpcActivity:]
  -[DAAgent hostToObserveForDAReachability:]
  -[DAAgent shouldBeMonitoringReachability]
  -[DAAgent startOrStopMonitoringReachability:]
  -[DAAgent observeReachabilityWithBlock:]
  -[DAAgent setNetworkReachableBlock:]
  -[DAAgent setSyncWhenReachable:]
  -[DAAgent requestAgentStopMonitoringWithCompletionBlock:]
  -[DAAgent refreshFolderListRequireChangedFolders:isUserRequested:]
  -[DAAgent syncFolderIDs:forDataclasses:isUserRequested:]
  -[DAAgent processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:callback:]
  -[DAAgent getDAAccount]
  -[DAAgent setIsMonitoring:]
  -[DAAgent lastRetryTimeout]
  -[DAAgent setLastRetryTimeout:]
  -[DAAgent syncWhenReachable]
  -[DAAgent networkReachableBlock]
  -[DAAgent isWaitingForPassword]
  -[DAAgent setIsWaitingForPassword:]
  -[DAAgent preferredEventDaysToSync]
  -[DAAgent preferredToDoDaysToSync]


DADAccessManager : DADisableableObject
 @property  NSObject<OS_xpc_object> *mainConnection
 @property  NSMutableArray *clients

  // class methods
  +[DADAccessManager sharedManager]

  // instance methods
  -[DADAccessManager setClients:]
  -[DADAccessManager removeClient:]
  -[DADAccessManager clients]
  -[DADAccessManager stateString]
  -[DADAccessManager dealloc]
  -[DADAccessManager .cxx_destruct]
  -[DADAccessManager _init]
  -[DADAccessManager init]
  -[DADAccessManager _setupServerConnection]
  -[DADAccessManager addPersistentClientWithAccountID:clientID:watchedIDs:]
  -[DADAccessManager isAccountID:folderID:watchedByClientBesides:]
  -[DADAccessManager mainConnection]
  -[DADAccessManager setMainConnection:]


DADaemonPowerAssertionManager : DAPowerAssertionManager
  // class methods
  +[DADaemonPowerAssertionManager _getWiFiClientRef]

  // instance methods
  -[DADaemonPowerAssertionManager _retainAssertionForContext:]
  -[DADaemonPowerAssertionManager _releaseAssertionForContext:]


DADClientGrantedDelegatesListResponseDelegate : DADClientDelegate <DAEventsGrantedDelegatesListResponseConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DADClientGrantedDelegatesListResponseDelegate finishWithError:]
  -[DADClientGrantedDelegatesListResponseDelegate .cxx_destruct]
  -[DADClientGrantedDelegatesListResponseDelegate grantedDelegatesListRequestFinishedWithResults:error:]
  -[DADClientGrantedDelegatesListResponseDelegate performRequest]


_DAChangeHistoryABLegacyClerk : DAChangeHistoryClerk
 @property  ^v addressBook

  // instance methods
  -[_DAChangeHistoryABLegacyClerk addressBook]
  -[_DAChangeHistoryABLegacyClerk dealloc]
  -[_DAChangeHistoryABLegacyClerk initWithAddressBook:]
  -[_DAChangeHistoryABLegacyClerk unregisterClientWithIdentifier:forContainer:]
  -[_DAChangeHistoryABLegacyClerk registerClientWithIdentifier:forContainer:]
  -[_DAChangeHistoryABLegacyClerk identifiersOfAllRegisterdClients]


DADAgentManager : NSObject
 @property  NSMutableArray *subCalHandlers
 @property  unsigned long nextDisableMonitoringAgentsToken
 @property  NSMutableDictionary *disableMonitoringAgentsTokens
 @property  NSArray *activeAgents

  // class methods
  +[DADAgentManager sharedManager]
  +[DADAgentManager wirelessPolicy:isMorePermissiveThanPolicy:]
  +[DADAgentManager _shouldAccount:syncWhenSyncingParentAccountWithID:]

  // instance methods
  -[DADAgentManager stopMonitoringAccountID:folderIDs:]
  -[DADAgentManager _clearOrphanedStores]
  -[DADAgentManager removePersistMonitoringAccountID:folderIDs:clientID:]
  -[DADAgentManager startMonitoringAccountID:folderIDs:]
  -[DADAgentManager hasPendingAccountSetup]
  -[DADAgentManager stateString]
  -[DADAgentManager changeHistoryClerkWithDBHelper:]
  -[DADAgentManager saveAndReleaseAgents]
  -[DADAgentManager _hasDataclassWeCareAbout:]
  -[DADAgentManager dealloc]
  -[DADAgentManager _deviceWillSleep]
  -[DADAgentManager resetCertWarningsForAccountWithId:andDataclasses:]
  -[DADAgentManager currentPolicyKeyForAccount:]
  -[DADAgentManager updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:]
  -[DADAgentManager .cxx_destruct]
  -[DADAgentManager _calDaysToSyncDidChange]
  -[DADAgentManager setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:]
  -[DADAgentManager addPendingAccountSetup]
  -[DADAgentManager nextDisableMonitoringAgentsToken]
  -[DADAgentManager updateContentsOfFolders:forAccountID:andDataclasses:isUserRequested:]
  -[DADAgentManager accountsProviderWithDBHelper:]
  -[DADAgentManager _deviceDidWake]
  -[DADAgentManager disableMonitoringAgentsTokens]
  -[DADAgentManager processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:callback:]
  -[DADAgentManager hasActiveAccounts]
  -[DADAgentManager disableActiveSync]
  -[DADAgentManager hasEASAccountConfigured]
  -[DADAgentManager clearPersistMonitoringAccountID:clientID:]
  -[DADAgentManager processFolderChange:forAccountWithID:completionBlock:]
  -[DADAgentManager _accountInfoPath]
  -[DADAgentManager setSubCalHandlers:]
  -[DADAgentManager suspendMonitoringAccountID:folderIDs:]
  -[DADAgentManager updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:]
  -[DADAgentManager _configFileForAgent:]
  -[DADAgentManager registerForBuddy]
  -[DADAgentManager accountWithAccountID:]
  -[DADAgentManager _resetMonitoringRequestsAndLoadAgents]
  -[DADAgentManager enableActiveSync]
  -[DADAgentManager removePendingAccountSetup]
  -[DADAgentManager activeAccountBundleIDs]
  -[DADAgentManager handleURLString:]
  -[DADAgentManager accountWithAccountID:andClassName:]
  -[DADAgentManager loadAgents]
  -[DADAgentManager _systemMayNowBeReady]
  -[DADAgentManager addPersistMonitoringAccountID:folderIDs:clientID:]
  -[DADAgentManager resumeMonitoringAccountID:folderIDs:]
  -[DADAgentManager _stopMonitoringAndSaveAgents]
  -[DADAgentManager enableMonitoringAgentsWithToken:]
  -[DADAgentManager reportFolderItemsSyncSuccess:forFolderWithID:withItemsCount:andAccountWithID:]
  -[DADAgentManager activeAgents]
  -[DADAgentManager subCalHandlers]
  -[DADAgentManager setNextDisableMonitoringAgentsToken:]
  -[DADAgentManager _handleCellularDataUsageChangedNotification]
  -[DADAgentManager requestPolicyUpdateForAccount:]
  -[DADAgentManager agentWithAccountID:]
  -[DADAgentManager init]
  -[DADAgentManager _registerForCTDataUsageNotificaiton]
  -[DADAgentManager disableMonitoringAgents]
  -[DADAgentManager getStatusReportDictsWithCompletionBlock:]
  -[DADAgentManager containerProviderWithDBHelper:]
  -[DADAgentManager _clearOrphanedStoresInCalendarDatabase:eventAccountIds:]
  -[DADAgentManager _clearOrphanedSubscribedCalendars:eventAccountIds:]
  -[DADAgentManager appleAccountsMatchingClass:errror:]
  -[DADAgentManager _loadAndStartMonitoringAgents]
  -[DADAgentManager _sendAccountAnalytics]
  -[DADAgentManager agentsToSyncForAccountID:]


DADClient : DADisableableObject
 @property  NSObject<OS_xpc_object> *conn
 @property  NSMutableDictionary *watchedIDs
 @property  NSMutableDictionary *busyIDs
 @property  NSMutableDictionary *updatedIDs
 @property  int numOutstandingBlockingClientCalls
 @property  int numOutstandingRefreshPriorityClientCalls
 @property  NSMutableDictionary *accountTimers
 @property  NSMutableDictionary *actionDelegatesById
 @property  NSString *clientName
 @property  int clientPID
 @property  NSString *clientBundleID
 @property  NSString *clientUniqueID
 @property  NSMutableDictionary *agentMonitoringTokens
 @property  NSCountedSet *simulatedCalDAVHostnames
 @property  BOOL persistent
 @property  unsigned long outstandingStopMonitoringAgentRequests

  // class methods
  +[DADClient clientsToInterrogate]
  +[DADClient _shouldReloadAgentsForAccountChange:]
  +[DADClient permissionsForMessage:]

  // instance methods
  -[DADClient setConn:]
  -[DADClient disable]
  -[DADClient conn]
  -[DADClient _handleAccountChange:]
  -[DADClient setClientPID:]
  -[DADClient initWithClientID:]
  -[DADClient clientBundleID]
  -[DADClient persistent]
  -[DADClient setClientBundleID:]
  -[DADClient _foldersUpdated:]
  -[DADClient setClientName:]
  -[DADClient clientPID]
  -[DADClient _dispatchMessage:]
  -[DADClient dealloc]
  -[DADClient .cxx_destruct]
  -[DADClient rawConnection]
  -[DADClient _createReplyToRequest:withProperties:]
  -[DADClient clientName]
  -[DADClient _isInternalTool]
  -[DADClient _asPolicyKeyChanged:]
  -[DADClient _requestClientStatusDump:]
  -[DADClient _agentsStopped:]
  -[DADClient _restartAgentsDueToTimeout]
  -[DADClient initWithConnection:clientID:]
  -[DADClient reconnectWithConnection:]
  -[DADClient _removeBusyFolderIDs:forAccountWithID:]
  -[DADClient _removeWatchedFolderIDs:forAccountWithID:]
  -[DADClient watchedFolderCount]
  -[DADClient persistentClientCleanup]
  -[DADClient isMonitoringAccountID:folderID:]
  -[DADClient noteBlockedClientCallChange:]
  -[DADClient noteRefreshClientCallChange:]
  -[DADClient registerForInterrogation]
  -[DADClient unregisterForInterrogation]
  -[DADClient _beginMonitoringFolders:]
  -[DADClient beginMonitoringPersistentFolders:forAccount:]
  -[DADClient _stopMonitoringFolders:]
  -[DADClient _resumeMonitoringFolders:]
  -[DADClient _suspendMonitoringFolders:]
  -[DADClient _stopMonitoringAgentsWithClientToken:]
  -[DADClient _startMonitoringAgentsWithClientToken:]
  -[DADClient _startMonitoringAgentsWithServerToken:]
  -[DADClient _startTimeoutWithClientToken:]
  -[DADClient _cancelRestartingAgentsDueToTimeout]
  -[DADClient _clearAllStopMonitoringAgentsTokens]
  -[DADClient outstandingStopMonitoringAgentRequests]
  -[DADClient _startMonitoringAgents:]
  -[DADClient _stopMonitoringAgents:]
  -[DADClient _getCurrentPolicyKey:]
  -[DADClient _requestPolicyUpdate:]
  -[DADClient timersForAccountWithID:]
  -[DADClient _requestFolderContentsUpdateForFolders:accountId:dataclasses:isUserRequested:]
  -[DADClient _requestFolderContentsUpdate:]
  -[DADClient _requestAllFolderContentsUpdateForAccountId:dataclasses:isUserRequested:]
  -[DADClient _requestAllFolderContentsUpdate:]
  -[DADClient _requestFolderListUpdateForAccountId:dataclasses:requireChangedFolders:isUserRequested:]
  -[DADClient _requestFolderListUpdate:]
  -[DADClient delegateWithIDIsGoingAway:]
  -[DADClient _openServerContactsSearch:]
  -[DADClient _cancelServerContactsSearch:]
  -[DADClient _processMeetingRequests:]
  -[DADClient _asyncProcessMeetingRequests:]
  -[DADClient _resetCertWarnings:]
  -[DADClient _setFolderIdsThatExternalClientsCareAbout:]
  -[DADClient _reportFolderItemsSyncResult:]
  -[DADClient _handleURL:]
  -[DADClient _processFolderChange:]
  -[DADClient _getStatusReports:]
  -[DADClient _registerForInterrogation:]
  -[DADClient _resetThrottleTimers:]
  -[DADClient _beginDownloadingAttachmentEvent:eventDict:]
  -[DADClient _cancelDownloadingAttachmentEvent:eventDict:]
  -[DADClient _respondToSharedCalendarEvent:eventDict:]
  -[DADClient _reportSharedCalendarAsJunkEvent:eventDict:]
  -[DADClient _fetchOfficeHoursEvent:eventDict:]
  -[DADClient _setOfficeHoursEvent:eventDict:]
  -[DADClient _reportSubscribedCalendarAsJunk:eventDict:]
  -[DADClient _checkSubscribedCalendarIsJunk:eventDict:]
  -[DADClient _fetchHolidayCalendars:eventDict:]
  -[DADClient _openServerOofSettingsRequest:]
  -[DADClient _checkIsOofSettingsSupported:]
  -[DADClient _downloadSubscribedCalendar:eventDict:]
  -[DADClient _cancelDownloadingSubscribedCalendar:eventDict:]
  -[DADClient _setUserNameAndPasswordForSubscribedCalendar:eventDict:]
  -[DADClient _requestCalendarAvailability:eventDict:]
  -[DADClient _cancelCalendarAvailabilityRequest:eventDict:]
  -[DADClient _requestGrantedDelegatesList:eventDict:]
  -[DADClient _cancelGrantedDelegatesListRequest:eventDict:]
  -[DADClient _updateGrantedDelegatePermission:eventDict:]
  -[DADClient _performCalendarDirectorySearch:eventDict:]
  -[DADClient _cancelCalendarDirectorySearch:eventDict:]
  -[DADClient _performGroupExpansion:eventDict:]
  -[DADClient applyClientStatusReportToAggregator:]
  -[DADClient _manageCalDAVServerSimulatorWithHostname:action:]
  -[DADClient _endAllServerSimulations]
  -[DADClient _checkAccountId:]
  -[DADClient _sendInvalidAccountIDReplyToMessage:withAccountID:]
  -[DADClient _clientDiedWithReason:]
  -[DADClient _checkAccessForMessage:]
  -[DADClient _sendAccessDeniedReplyForMessage:]
  -[DADClient _hasCalendarAccess]
  -[DADClient _hasReminderAccess]
  -[DADClient _hasContactsAccess]
  -[DADClient _isAccountsDaemon]
  -[DADClient clientUniqueID]
  -[DADClient setClientUniqueID:]
  -[DADClient watchedIDs]
  -[DADClient setWatchedIDs:]
  -[DADClient busyIDs]
  -[DADClient setBusyIDs:]
  -[DADClient updatedIDs]
  -[DADClient setUpdatedIDs:]
  -[DADClient numOutstandingBlockingClientCalls]
  -[DADClient setNumOutstandingBlockingClientCalls:]
  -[DADClient numOutstandingRefreshPriorityClientCalls]
  -[DADClient setNumOutstandingRefreshPriorityClientCalls:]
  -[DADClient accountTimers]
  -[DADClient setAccountTimers:]
  -[DADClient actionDelegatesById]
  -[DADClient setActionDelegatesById:]
  -[DADClient agentMonitoringTokens]
  -[DADClient setAgentMonitoringTokens:]
  -[DADClient simulatedCalDAVHostnames]
  -[DADClient setSimulatedCalDAVHostnames:]


DADClientCalendarAvailabilityResponseDelegate : DADClientDelegate <DAEventsCalendarAvailabilityResponseConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DADClientCalendarAvailabilityResponseDelegate finishWithError:]
  -[DADClientCalendarAvailabilityResponseDelegate dealloc]
  -[DADClientCalendarAvailabilityResponseDelegate .cxx_destruct]
  -[DADClientCalendarAvailabilityResponseDelegate calendarAvailabilityRequestFinishedWithError:]
  -[DADClientCalendarAvailabilityResponseDelegate performRequest]
  -[DADClientCalendarAvailabilityResponseDelegate calendarAvailabilityRequestReturnedResults:]
  -[DADClientCalendarAvailabilityResponseDelegate initWithAccountID:client:startDate:endDate:ignoredEventID:addresses:]


DADClientAccountTimers : NSObject
 @property  NSMutableDictionary *folderIdToLastFolderContentsRequestDate
 @property  NSDate *lastAllFolderContentsRequestDate
 @property  NSDate *lastFolderListRequestDate
 @property  NSDate *lastFolderWipeRequestDate
 @property  NSObject<OS_dispatch_source> *deferredAllFolderContentsSource
 @property  NSObject<OS_dispatch_source> *deferredFolderListSource
 @property  NSObject<OS_dispatch_source> *deferredFolderContentsSource

  // instance methods
  -[DADClientAccountTimers dealloc]
  -[DADClientAccountTimers .cxx_destruct]
  -[DADClientAccountTimers killAllTimers]
  -[DADClientAccountTimers deferredTimerInterval]
  -[DADClientAccountTimers folderIdToLastFolderContentsRequestDate]
  -[DADClientAccountTimers setLastFolderContentRequestDate:forFolderWithId:]
  -[DADClientAccountTimers setDeferredAllFolderContentsSource:]
  -[DADClientAccountTimers setDeferredFolderListSource:]
  -[DADClientAccountTimers setDeferredFolderContentsSource:]
  -[DADClientAccountTimers clientBehaviorForFolderIds:]
  -[DADClientAccountTimers clientBehaviorForFolderList]
  -[DADClientAccountTimers clientBehaviorForFolderContents]
  -[DADClientAccountTimers allowFolderWipe]
  -[DADClientAccountTimers lastAllFolderContentsRequestDate]
  -[DADClientAccountTimers setLastAllFolderContentsRequestDate:]
  -[DADClientAccountTimers lastFolderListRequestDate]
  -[DADClientAccountTimers setLastFolderListRequestDate:]
  -[DADClientAccountTimers lastFolderWipeRequestDate]
  -[DADClientAccountTimers setLastFolderWipeRequestDate:]
  -[DADClientAccountTimers deferredAllFolderContentsSource]
  -[DADClientAccountTimers deferredFolderListSource]
  -[DADClientAccountTimers deferredFolderContentsSource]
  -[DADClientAccountTimers setFolderIdToLastFolderContentsRequestDate:]


DADMain : DADisableableObject <UMUserSwitchStakeholder, DATransactionMonitorDelegate>
 @property  NSArray *userSwitchTasks
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DADMain sharedMain]

  // instance methods
  -[DADMain disable]
  -[DADMain dealloc]
  -[DADMain addSignalHandler]
  -[DADMain .cxx_destruct]
  -[DADMain willSwitchUser]
  -[DADMain init]
  -[DADMain didFinishAllXPCTransactions]
  -[DADMain _forceShutdownTimerFired:]
  -[DADMain agentsStarted]
  -[DADMain _shutdownDaemon]
  -[DADMain _forceShutdownDaemonOnLogoutInTimeInterval:]
  -[DADMain addToOperationsQueueDisabledCheckAndGoBlock:wrappedBlock:]
  -[DADMain addLanguageChangeHandler]
  -[DADMain shutdownDAD]
  -[DADMain waitForSystemAvailability]
  -[DADMain setRunLoopStoppedRef:]
  -[DADMain _setRunLoopStopped:]
  -[DADMain _configureAnalyticsLogging]
  -[DADMain xpc_checkin]
  -[DADMain evaluateConnectedStartupActivityStatus]
  -[DADMain userSwitchTasks]
  -[DADMain setUserSwitchTasks:]


DADClientSubscribedCalendarJunkReportDelegate : DADClientDelegate
 @property  NSString *requestID

  // instance methods
  -[DADClientSubscribedCalendarJunkReportDelegate finishWithError:]
  -[DADClientSubscribedCalendarJunkReportDelegate setRequestID:]
  -[DADClientSubscribedCalendarJunkReportDelegate .cxx_destruct]
  -[DADClientSubscribedCalendarJunkReportDelegate requestID]
  -[DADClientSubscribedCalendarJunkReportDelegate reportSubscribedCalendarAsJunk:]
  -[DADClientSubscribedCalendarJunkReportDelegate _createURLRequestForSubscriptionCalendarURL:]
  -[DADClientSubscribedCalendarJunkReportDelegate _generateBodyWithURL:]
  -[DADClientSubscribedCalendarJunkReportDelegate _findCalendarURLFromAccount:]


DADClientContactsSearchDelegate : DADClientDelegate <DASearchQueryConsumer>
 @property  DASearchQuery *query
 @property  NSData *queryResultData

  // instance methods
  -[DADClientContactsSearchDelegate finishWithError:]
  -[DADClientContactsSearchDelegate disable]
  -[DADClientContactsSearchDelegate query]
  -[DADClientContactsSearchDelegate setQuery:]
  -[DADClientContactsSearchDelegate dealloc]
  -[DADClientContactsSearchDelegate .cxx_destruct]
  -[DADClientContactsSearchDelegate searchQuery:returnedResults:]
  -[DADClientContactsSearchDelegate searchQuery:finishedWithError:]
  -[DADClientContactsSearchDelegate initWithAccountID:queryDictionary:client:]
  -[DADClientContactsSearchDelegate beginQuery]
  -[DADClientContactsSearchDelegate queryResultData]
  -[DADClientContactsSearchDelegate setQueryResultData:]


DADClientSubscribedCalendarDownloadDelegate : DADClientDelegate <SubCalValidationTaskDelegate, SubCalDATaskPasswordDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DADClientSubscribedCalendarDownloadDelegate finishWithError:]
  -[DADClientSubscribedCalendarDownloadDelegate dealloc]
  -[DADClientSubscribedCalendarDownloadDelegate .cxx_destruct]
  -[DADClientSubscribedCalendarDownloadDelegate evaluateTrust:]
  -[DADClientSubscribedCalendarDownloadDelegate handleTrustChallenge:forTask:]
  -[DADClientSubscribedCalendarDownloadDelegate handleTrustChallenge:forTask:completionHandler:]
  -[DADClientSubscribedCalendarDownloadDelegate subCalValidationTask:finishedWithError:calendarName:document:calendarData:]
  -[DADClientSubscribedCalendarDownloadDelegate subCalValidationTask:downloadProgressedTo:outOf:]
  -[DADClientSubscribedCalendarDownloadDelegate subCalTask:needsUsernameAndPasswordForHost:continuation:]
  -[DADClientSubscribedCalendarDownloadDelegate initWithURL:client:]
  -[DADClientSubscribedCalendarDownloadDelegate beginDownload]
  -[DADClientSubscribedCalendarDownloadDelegate createAndSubmitValidationTask]
  -[DADClientSubscribedCalendarDownloadDelegate shouldTrustChallenge:]
  -[DADClientSubscribedCalendarDownloadDelegate tryUsername:password:]
  -[DADClientSubscribedCalendarDownloadDelegate finishWithError:summary:]


DAFolderSyncRequest : NSObject
 @property  DAFolder *folder
 @property  BOOL hasRemoteChanges
 @property  BOOL isInitialUberSync
 @property  NSArray *actions
 @property  BOOL isResyncAfterConnectionFailed
 @property  BOOL isResyncAfterServerError
 @property  BOOL containsPostponedActions

  // instance methods
  -[DAFolderSyncRequest .cxx_destruct]
  -[DAFolderSyncRequest actions]
  -[DAFolderSyncRequest folder]
  -[DAFolderSyncRequest setActions:]
  -[DAFolderSyncRequest setFolder:]
  -[DAFolderSyncRequest hasRemoteChanges]
  -[DAFolderSyncRequest setHasRemoteChanges:]
  -[DAFolderSyncRequest initWithFolder:hasRemoteChanges:isInitialUberSync:]
  -[DAFolderSyncRequest isInitialUberSync]
  -[DAFolderSyncRequest setIsInitialUberSync:]
  -[DAFolderSyncRequest isResyncAfterConnectionFailed]
  -[DAFolderSyncRequest setIsResyncAfterConnectionFailed:]
  -[DAFolderSyncRequest isResyncAfterServerError]
  -[DAFolderSyncRequest setIsResyncAfterServerError:]
  -[DAFolderSyncRequest containsPostponedActions]
  -[DAFolderSyncRequest setContainsPostponedActions:]


_DAChangeHistoryContactsClerk : DAChangeHistoryClerk
 @property  CNContactStore *contactStore

  // class methods
  +[_DAChangeHistoryContactsClerk os_log]

  // instance methods
  -[_DAChangeHistoryContactsClerk initWithContactStore:]
  -[_DAChangeHistoryContactsClerk .cxx_destruct]
  -[_DAChangeHistoryContactsClerk contactStore]
  -[_DAChangeHistoryContactsClerk unregisterClientWithIdentifier:forContainer:]
  -[_DAChangeHistoryContactsClerk registerClientWithIdentifier:forContainer:]
  -[_DAChangeHistoryContactsClerk identifiersOfAllRegisterdClients]


DARefreshManager : NSObject
 @property  NSMutableDictionary *enabledTopicWrappersByEnv
 @property  NSMutableDictionary *suspendedTopicWrappersByEnv
 @property  NSMutableSet *wrappers
 @property  NSMutableSet *wrappersForDailyRefresh
 @property  BOOL dailyRefreshInitialized
 @property  APSConnection *connection
 @property  NSMutableDictionary *apsConnections
 @property  NSTimer *tokenRegistrationTimer
 @property  NSObject<OS_dispatch_queue> *pcQueue
 @property  BOOL persistAPSAfterShutdown

  // class methods
  +[DARefreshManager sharedManager]

  // instance methods
  -[DARefreshManager connection:didReceivePublicToken:]
  -[DARefreshManager connection:didReceiveMessageForTopic:userInfo:]
  -[DARefreshManager stateString]
  -[DARefreshManager dealloc]
  -[DARefreshManager .cxx_destruct]
  -[DARefreshManager connection]
  -[DARefreshManager _portNameForEnvironmentName:]
  -[DARefreshManager wrappers]
  -[DARefreshManager registerDelegate:]
  -[DARefreshManager unregisterDelegate:]
  -[DARefreshManager init]
  -[DARefreshManager setConnection:]
  -[DARefreshManager _registerAPSTopics]
  -[DARefreshManager _tearDownAPS]
  -[DARefreshManager _tearDownAllApsConnections]
  -[DARefreshManager establishAllApsConnections]
  -[DARefreshManager _apsEnvStringForDAEnvString:]
  -[DARefreshManager _connectionForEnv:]
  -[DARefreshManager _registerAPSTopicsForDelegates:withConnection:]
  -[DARefreshManager _currentTruePCStyleForDelegate:]
  -[DARefreshManager _pushRegistrationForDelegateFailed:]
  -[DARefreshManager _wrapperIsSuspended:]
  -[DARefreshManager _suspendTopicsForDelegate:]
  -[DARefreshManager _resumeTopicsForSuspendedDelegate:]
  -[DARefreshManager pushPreferenceDidChange]
  -[DARefreshManager _performBlockOnRefreshManagerThread:]
  -[DARefreshManager _refreshWrapperForDelegate:]
  -[DARefreshManager _enabledTopicsForWrapper:]
  -[DARefreshManager _suspendedTopicsForWrapper:]
  -[DARefreshManager _dailyRefreshActivityFired]
  -[DARefreshManager startDailyRefreshActivityForWrapper:]
  -[DARefreshManager endDailyRefreshActivityForWrapper:]
  -[DARefreshManager registerTopic:forDelegate:inEnvironment:]
  -[DARefreshManager _unregisterWrapper:forTopic:inTopicDictionary:]
  -[DARefreshManager _unregisterTopicLocked:forDelegate:inEnvironment:]
  -[DARefreshManager unregisterTopic:forDelegate:inEnvironment:]
  -[DARefreshManager delegateDidCompleteRefresh:]
  -[DARefreshManager retryRefreshForDelegate:withCollections:after:originalRefreshReason:]
  -[DARefreshManager pushTokenForEnvironment:]
  -[DARefreshManager persistAPSAfterShutdown]
  -[DARefreshManager setPersistAPSAfterShutdown:]
  -[DARefreshManager enabledTopicWrappersByEnv]
  -[DARefreshManager setEnabledTopicWrappersByEnv:]
  -[DARefreshManager suspendedTopicWrappersByEnv]
  -[DARefreshManager setSuspendedTopicWrappersByEnv:]
  -[DARefreshManager setWrappers:]
  -[DARefreshManager wrappersForDailyRefresh]
  -[DARefreshManager setWrappersForDailyRefresh:]
  -[DARefreshManager dailyRefreshInitialized]
  -[DARefreshManager setDailyRefreshInitialized:]
  -[DARefreshManager apsConnections]
  -[DARefreshManager setApsConnections:]
  -[DARefreshManager tokenRegistrationTimer]
  -[DARefreshManager setTokenRegistrationTimer:]
  -[DARefreshManager pcQueue]
  -[DARefreshManager setPcQueue:]


DADClientHolidayCalendarFetchDelegate : DADClientDelegate
  // instance methods
  -[DADClientHolidayCalendarFetchDelegate finishWithError:]
  -[DADClientHolidayCalendarFetchDelegate .cxx_destruct]
  -[DADClientHolidayCalendarFetchDelegate fetchHolidayCalendars]
  -[DADClientHolidayCalendarFetchDelegate _handleCalendarSearchResults:]
  -[DADClientHolidayCalendarFetchDelegate _sendResults:]
  -[DADClientHolidayCalendarFetchDelegate _sendCompletionWithError:retryThrottleTime:]
  -[DADClientHolidayCalendarFetchDelegate syncingAccount]
  -[DADClientHolidayCalendarFetchDelegate _getThrottleDateIfApplicable]
  -[DADClientHolidayCalendarFetchDelegate _setThrottledRetryDateUsingTimeInterval:]


DATokenRegistrationRequest : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate>
 @property  DARefreshWrapper *wrapper
 @property  NSString *onBehalfOfBundleIdentifier
 @property  NSData *token
 @property  NSString *pushKey
 @property  AKAppleIDSession *hsa2Session
 @property  BOOL finished
 @property  <DATokenRegistrationDelegate> *delegate
 @property  NSMutableURLRequest *request
 @property  NSURLSession *session
 @property  NSURLSessionDataTask *task
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DATokenRegistrationRequest requestWithToken:pushKey:wrapper:onBehalfOf:]

  // instance methods
  -[DATokenRegistrationRequest pushKey]
  -[DATokenRegistrationRequest URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[DATokenRegistrationRequest URLSession:task:didCompleteWithError:]
  -[DATokenRegistrationRequest URLSession:didReceiveChallenge:completionHandler:]
  -[DATokenRegistrationRequest setTask:]
  -[DATokenRegistrationRequest session]
  -[DATokenRegistrationRequest token]
  -[DATokenRegistrationRequest URLSession:dataTask:didReceiveData:]
  -[DATokenRegistrationRequest setDelegate:]
  -[DATokenRegistrationRequest setRequest:]
  -[DATokenRegistrationRequest setFinished:]
  -[DATokenRegistrationRequest setSession:]
  -[DATokenRegistrationRequest delegate]
  -[DATokenRegistrationRequest .cxx_destruct]
  -[DATokenRegistrationRequest finished]
  -[DATokenRegistrationRequest URLSession:task:didReceiveChallenge:completionHandler:]
  -[DATokenRegistrationRequest setToken:]
  -[DATokenRegistrationRequest URLSession:didBecomeInvalidWithError:]
  -[DATokenRegistrationRequest setPushKey:]
  -[DATokenRegistrationRequest task]
  -[DATokenRegistrationRequest request]
  -[DATokenRegistrationRequest cancel]
  -[DATokenRegistrationRequest wrapper]
  -[DATokenRegistrationRequest onBehalfOfBundleIdentifier]
  -[DATokenRegistrationRequest _canAuthenticateAgainstProtectionSpace:]
  -[DATokenRegistrationRequest _handleAuthenticationChallenge:completionHandler:]
  -[DATokenRegistrationRequest initWithToken:pushKey:wrapper:onBehalfOf:]
  -[DATokenRegistrationRequest _reallyHandleAuthenticationChallenge:completionHandler:]
  -[DATokenRegistrationRequest sendRegistrationRequestForAccount:]
  -[DATokenRegistrationRequest setWrapper:]
  -[DATokenRegistrationRequest setOnBehalfOfBundleIdentifier:]
  -[DATokenRegistrationRequest hsa2Session]
  -[DATokenRegistrationRequest setHsa2Session:]


DADClientOfficeHoursRequestDelegate : DADClientDelegate <DAEventsOfficeHoursRequestResponseConsumer>
 @property  NSString *requestID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DADClientOfficeHoursRequestDelegate finishWithError:]
  -[DADClientOfficeHoursRequestDelegate setRequestID:]
  -[DADClientOfficeHoursRequestDelegate .cxx_destruct]
  -[DADClientOfficeHoursRequestDelegate requestID]
  -[DADClientOfficeHoursRequestDelegate officeHoursRequestWithID:finishedWithOfficeHours:error:]
  -[DADClientOfficeHoursRequestDelegate officeHoursRequestWithID:finishedWithError:]
  -[DADClientOfficeHoursRequestDelegate fetchOfficeHours]
  -[DADClientOfficeHoursRequestDelegate setOfficeHours:]
  -[DADClientOfficeHoursRequestDelegate _doRequestWithBlock:]
  -[DADClientOfficeHoursRequestDelegate _finishedWithOfficeHours:error:canceled:]


DAReachability : NSObject
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[DAReachability hostLikelyUnreachable:]
  +[DAReachability recordError:forHost:]
  +[DAReachability sharedReachability]

  // instance methods
  -[DAReachability muckWithDelegates:]
  -[DAReachability _startOrStopObservingHostReachabilityAfterUpdatingDelegates]
  -[DAReachability addDelegate:]
  -[DAReachability _startOrStopObservingNetworkReachabilityAfterUpdatingDelegates]
  -[DAReachability _notifyDelegatesNetworkReachable]
  -[DAReachability .cxx_destruct]
  -[DAReachability _startMonitoringNetworkReachability]
  -[DAReachability _notifyDelegatesHostReachable:]
  -[DAReachability removeDelegate:]
  -[DAReachability _monitoringReachabilityForHost:]
  -[DAReachability _networkReachabilityChanged:]
  -[DAReachability _stopMonitoringReachabilityForHost:]
  -[DAReachability queue]
  -[DAReachability _monitoringNetworkReachability]
  -[DAReachability _startMonitoringReachabilityForHost:]
  -[DAReachability _hostReachabilityChanged:]
  -[DAReachability init]
  -[DAReachability _stopMonitoringNetworkReachability]


DARefreshWrapper : NSObject <DATokenRegistrationDelegate>
 @property  NSMutableSet *tokenRegistrations
 @property  int refreshReason
 @property  NSMutableSet *refreshCollections
 @property  long long fetchInterval
 @property  <DARefreshManagerDelegate> *delegate
 @property  int pushState
 @property  NSDate *pushRegistrationTime
 @property  int curStyle

  // instance methods
  -[DARefreshWrapper setDelegate:]
  -[DARefreshWrapper delegate]
  -[DARefreshWrapper .cxx_destruct]
  -[DARefreshWrapper pushState]
  -[DARefreshWrapper setRefreshReason:]
  -[DARefreshWrapper refreshReason]
  -[DARefreshWrapper _stringForStyle:]
  -[DARefreshWrapper init]
  -[DARefreshWrapper refreshCollections]
  -[DARefreshWrapper fetchInterval]
  -[DARefreshWrapper tokenRegistrationRequest:finishedWithError:]
  -[DARefreshWrapper retryActivityIdentifier]
  -[DARefreshWrapper cancelRetryActivity]
  -[DARefreshWrapper cancelDailyRefreshActivity]
  -[DARefreshWrapper startDailyRefreshActivity]
  -[DARefreshWrapper stopCollectionsRefresh]
  -[DARefreshWrapper fetchActivityIdentifier]
  -[DARefreshWrapper XPCActivityInterval]
  -[DARefreshWrapper _fetchActivityCriteriaWithInterval:]
  -[DARefreshWrapper _fetchActivityCriteriaInOnPowerMode]
  -[DARefreshWrapper startFetchActivityWithInterval:]
  -[DARefreshWrapper startFetchActivityForFetch]
  -[DARefreshWrapper startFetchActivityForPush]
  -[DARefreshWrapper cancelFetchActivity]
  -[DARefreshWrapper isSetToExpectedFetchInterval]
  -[DARefreshWrapper setCurStyle:]
  -[DARefreshWrapper cancelAllTokenRegistrations]
  -[DARefreshWrapper performTokenRegistrationRequestsWithToken:onBehalfOf:]
  -[DARefreshWrapper refreshCollections:withReason:]
  -[DARefreshWrapper _retryActivityFired]
  -[DARefreshWrapper dailyRefreshActivityFired]
  -[DARefreshWrapper retryCollections:after:reason:]
  -[DARefreshWrapper setPushState:]
  -[DARefreshWrapper pushRegistrationTime]
  -[DARefreshWrapper setPushRegistrationTime:]
  -[DARefreshWrapper curStyle]
  -[DARefreshWrapper tokenRegistrations]
  -[DARefreshWrapper setTokenRegistrations:]
  -[DARefreshWrapper setRefreshCollections:]
  -[DARefreshWrapper setFetchInterval:]


DADClientSettingsDelegate : DADClientDelegate <DASettingsResponseDelegate>
 @property  BOOL isUpdate
 @property  DAOofParams *requestParams
 @property  DAOofParams *responseParams

  // instance methods
  -[DADClientSettingsDelegate finishWithError:]
  -[DADClientSettingsDelegate disable]
  -[DADClientSettingsDelegate dealloc]
  -[DADClientSettingsDelegate .cxx_destruct]
  -[DADClientSettingsDelegate isUpdate]
  -[DADClientSettingsDelegate setIsUpdate:]
  -[DADClientSettingsDelegate settingsRequestFinishedWithResults:status:error:]
  -[DADClientSettingsDelegate isOofSupported]
  -[DADClientSettingsDelegate initWithAccountID:requestDictionary:forUpdate:client:]
  -[DADClientSettingsDelegate beginSettingsRequest]
  -[DADClientSettingsDelegate requestParams]
  -[DADClientSettingsDelegate setRequestParams:]
  -[DADClientSettingsDelegate responseParams]
  -[DADClientSettingsDelegate setResponseParams:]


DADClientCalendarDirectorySearchResponseDelegate : DADClientDelegate <DAEventsCalendarDirectorySearchResponseConsumer, DASearchQueryConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DADClientCalendarDirectorySearchResponseDelegate finishWithError:]
  -[DADClientCalendarDirectorySearchResponseDelegate dealloc]
  -[DADClientCalendarDirectorySearchResponseDelegate .cxx_destruct]
  -[DADClientCalendarDirectorySearchResponseDelegate searchQuery:returnedResults:]
  -[DADClientCalendarDirectorySearchResponseDelegate searchQuery:finishedWithError:]
  -[DADClientCalendarDirectorySearchResponseDelegate calendarDirectorySearchFinishedWithError:exceededResultLimit:]
  -[DADClientCalendarDirectorySearchResponseDelegate performRequest]
  -[DADClientCalendarDirectorySearchResponseDelegate calendarDirectorySearchReturnedResults:]
  -[DADClientCalendarDirectorySearchResponseDelegate initWithAccountID:client:terms:recordTypes:resultLimit:]
  -[DADClientCalendarDirectorySearchResponseDelegate _convertSearchQueryResults:]


DADClientSubscribedCalendarJunkCheckDelegate : DADClientDelegate
 @property  NSString *requestID

  // instance methods
  -[DADClientSubscribedCalendarJunkCheckDelegate finishWithError:]
  -[DADClientSubscribedCalendarJunkCheckDelegate setRequestID:]
  -[DADClientSubscribedCalendarJunkCheckDelegate .cxx_destruct]
  -[DADClientSubscribedCalendarJunkCheckDelegate requestID]
  -[DADClientSubscribedCalendarJunkCheckDelegate _createURLRequestForSubscriptionCalendarURL:]
  -[DADClientSubscribedCalendarJunkCheckDelegate _generateBodyWithURL:]
  -[DADClientSubscribedCalendarJunkCheckDelegate _findCalendarURLFromAccount:]
  -[DADClientSubscribedCalendarJunkCheckDelegate checkSubscribedCalendarJunkStatus:]
  -[DADClientSubscribedCalendarJunkCheckDelegate _finishWithJunkStatusString:error:]


DADClientGroupExpansionResponseDelegate : DADClientDelegate <DAEventsGroupExpansionResponseConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DADClientGroupExpansionResponseDelegate finishWithError:]
  -[DADClientGroupExpansionResponseDelegate dealloc]
  -[DADClientGroupExpansionResponseDelegate .cxx_destruct]
  -[DADClientGroupExpansionResponseDelegate groupExpansionFinishedWithResults:error:]
  -[DADClientGroupExpansionResponseDelegate performRequest]
  -[DADClientGroupExpansionResponseDelegate initWithAccountID:client:principalPath:]


DADClientAttachmentDownloadDelegate : DADClientDelegate <DAEventsAttachmentDownloadConsumer>
 @property  NSString *attachmentUUID
 @property  id downloadID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DADClientAttachmentDownloadDelegate finishWithError:]
  -[DADClientAttachmentDownloadDelegate dealloc]
  -[DADClientAttachmentDownloadDelegate .cxx_destruct]
  -[DADClientAttachmentDownloadDelegate downloadID]
  -[DADClientAttachmentDownloadDelegate setDownloadID:]
  -[DADClientAttachmentDownloadDelegate downloadFinishedError:]
  -[DADClientAttachmentDownloadDelegate attachmentUUID]
  -[DADClientAttachmentDownloadDelegate beginDownload]
  -[DADClientAttachmentDownloadDelegate downloadProgressDownloadedByteCount:totalByteCount:]
  -[DADClientAttachmentDownloadDelegate initWithAccountID:attachmentUUID:client:]
  -[DADClientAttachmentDownloadDelegate setAttachmentUUID:]


DADClientUpdateGrantedDelegatePermissionResponseDelegate : DADClientDelegate <DAEventsUpdateGrantedDelegatePermissionResponseConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DADClientUpdateGrantedDelegatePermissionResponseDelegate finishWithError:]
  -[DADClientUpdateGrantedDelegatePermissionResponseDelegate .cxx_destruct]
  -[DADClientUpdateGrantedDelegatePermissionResponseDelegate updateGrantedDelegatePermissionFinishedWithError:]
  -[DADClientUpdateGrantedDelegatePermissionResponseDelegate performRequest]
  -[DADClientUpdateGrantedDelegatePermissionResponseDelegate initWithAccountID:client:grantedDelegate:]


DADStatusReportAggregator : NSObject
  // instance methods
  -[DADStatusReportAggregator .cxx_destruct]
  -[DADStatusReportAggregator initWithStatusReports:numOutstandingReports:timeout:completionBlock:]
  -[DADStatusReportAggregator _coalesceAndReport]
  -[DADStatusReportAggregator noteAdditionalReportDicts:]


DACoreDAVAgent : DAAgent <DABabysittable>
 @property  CoreDAVOptionsTask *optionsProbe
 @property  NSTimer *optionsTimeoutTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DACoreDAVAgent initWithAccount:]
  -[DACoreDAVAgent dealloc]
  -[DACoreDAVAgent .cxx_destruct]
  -[DACoreDAVAgent waiterID]
  -[DACoreDAVAgent _serverProbeTimedOut]
  -[DACoreDAVAgent _cancelOptionsTimer]
  -[DACoreDAVAgent _probeAndSyncWithBlock:]
  -[DACoreDAVAgent optionsProbe]
  -[DACoreDAVAgent setOptionsProbe:]
  -[DACoreDAVAgent optionsTimeoutTimer]
  -[DACoreDAVAgent setOptionsTimeoutTimer:]


DADClientDelegate : DADisableableObject
 @property  DADClient *client
 @property  NSString *accountID
 @property  BOOL finished
 @property  BOOL consumerCancelled
 @property  NSString *delegateID

  // instance methods
  -[DADClientDelegate finishWithError:]
  -[DADClientDelegate disable]
  -[DADClientDelegate accountID]
  -[DADClientDelegate setFinished:]
  -[DADClientDelegate setAccountID:]
  -[DADClientDelegate dealloc]
  -[DADClientDelegate .cxx_destruct]
  -[DADClientDelegate setClient:]
  -[DADClientDelegate finished]
  -[DADClientDelegate client]
  -[DADClientDelegate initWithAccountID:client:]
  -[DADClientDelegate userRequestsCancel]
  -[DADClientDelegate delegateID]
  -[DADClientDelegate setDelegateID:]
  -[DADClientDelegate consumerCancelled]
  -[DADClientDelegate setConsumerCancelled:]


DADClientShareResponseDelegate : DADClientDelegate <DAEventsCalendarSharingResponseConsumer>
 @property  NSString *calendarID
 @property  NSString *shareID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DADClientShareResponseDelegate finishWithError:]
  -[DADClientShareResponseDelegate shareID]
  -[DADClientShareResponseDelegate dealloc]
  -[DADClientShareResponseDelegate .cxx_destruct]
  -[DADClientShareResponseDelegate setShareID:]
  -[DADClientShareResponseDelegate calendarID]
  -[DADClientShareResponseDelegate shareResponseFinishedWithError:]
  -[DADClientShareResponseDelegate initWithAccountID:client:calendarID:]
  -[DADClientShareResponseDelegate respondToShareRequestWithResponse:]
  -[DADClientShareResponseDelegate reportAsJunk]
  -[DADClientShareResponseDelegate _doResponseWithBlock:]
  -[DADClientShareResponseDelegate setCalendarID:]


DAChangeHistoryClerk : NSObject
  // class methods
  +[DAChangeHistoryClerk clerkWithContactStore:]
  +[DAChangeHistoryClerk clerkWithAddressBook:]

  // instance methods
  -[DAChangeHistoryClerk unregisterClientWithIdentifier:forContainer:]
  -[DAChangeHistoryClerk registerClientWithIdentifier:forContainer:]
  -[DAChangeHistoryClerk identifiersOfAllRegisterdClients]


DAAccount(DaemonAdditions)
	// instance methods
	-[DAAccount(DaemonAdditions) agentClass]
	-[DAAccount(DaemonAdditions) deviceWillSleep]
	-[DAAccount(DaemonAdditions) deviceDidWake]

01 00 2100 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 2100 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountType 
01 00 1f00 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 1800 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CDBPreferences 
01 00 1000 /System/Library/Frameworks/Contacts.framework/Contacts: CNSaveRequest 
01 00 1600 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPNetworkObserver 
01 00 0b00 /System/Library/PrivateFrameworks/CalDAV.framework/CalDAV: CalDAVCalendarSearchTask 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: CalDAVOfficeHour 
01 00 2340 /AppleInternal/Library/Frameworks/CalDAVServerSimulator.framework/CalDAVServerSimulator: CalDAVServerSimulator 
01 00 0f00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalDistributedNotificationCenter 
01 00 0f00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalHolidayAccountUtils 
01 00 1800 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CalStoreSetupAndTeardownUtils 
01 00 0f00 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalSystemInformation 
01 00 2000 /System/Library/PrivateFrameworks/CoreDAV.framework/CoreDAV: CoreDAVOptionsTask 
01 00 2000 /System/Library/PrivateFrameworks/CoreDAV.framework/CoreDAV: CoreDAVXMLData 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAAccount 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAAccountChangeHandler 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAAccountChangeInfo 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAAccountChangeUpdaterAccountStoreWrapper 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAAccountLoader 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAActivity 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAAnalyticsReporter 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DABabysitter 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DABehaviorOptions 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAContactsAccountProvider 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAContactsSearchQuery 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAContainerProvider 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DADisableableObject 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAECalendarDirectorySearchResult 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAEGrantedDelegate 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAEHolidayCalendarFetchResult 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAESubscribedCalendarSummary 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAFolderChange 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAKeychain 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DALocalDBGateKeeper 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DALocalDBHelper 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DALocalDBWatcher 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAOofParams 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAPowerAssertionManager 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAPriorityManager 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DARunLoopRegistry 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DASharedAccountProperties 
01 00 1a00 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAStatusReport 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAStoreSyncStatusUpdater 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DATaskManager 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DATransaction 
01 00 1b00 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DATransactionMonitor 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSSystemService 
01 00 0300 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0900 /System/Library/PrivateFrameworks/MessageLegacy.framework/MessageLegacy: MailAccount 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCredential 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0800 /System/Library/PrivateFrameworks/Notes.framework/Notes: NoteContext 
01 00 0600 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 0600 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserSwitchBlockingTask 
01 00 0d00 /System/Library/PrivateFrameworks/Symbolication.framework/Symbolication: VMUVMRegionIdentifier 
