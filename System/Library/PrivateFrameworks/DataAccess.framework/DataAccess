|| __DATA.__objc_data _OBJC_CLASS_$_ASAccountActor
|| __DATA.__objc_data _OBJC_CLASS_$_ContactFolderItemsSyncContext
|| __DATA.__objc_data _OBJC_CLASS_$_DAABLegacyAccount
|| __DATA.__objc_data _OBJC_CLASS_$_DAABLegacyContainer
|| __DATA.__objc_data _OBJC_CLASS_$_DAAccountChangeHandler
|| __DATA.__objc_data _OBJC_CLASS_$_DAAccountChangeUpdaterAccountStoreWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_DAAccountClassNames
|| __DATA.__objc_data _OBJC_CLASS_$_DAAccountLoader
|| __DATA.__objc_data _OBJC_CLASS_$_DAAccountMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_DAAccountUpgrader
|| __DATA.__objc_data _OBJC_CLASS_$_DAAction
|| __DATA.__objc_data _OBJC_CLASS_$_DAActivity
|| __DATA.__objc_data _OBJC_CLASS_$_DABabysitter
|| __DATA.__objc_data _OBJC_CLASS_$_DAContactsAccountProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DAContactsBasedAccount
|| __DATA.__objc_data _OBJC_CLASS_$_DAContactsContainer
|| __DATA.__objc_data _OBJC_CLASS_$_DAContainerProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DADataHandler
|| __DATA.__objc_data _OBJC_CLASS_$_DADraftMessageRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DAEditPropertyAction
|| __DATA.__objc_data _OBJC_CLASS_$_DAFolder
|| __DATA.__objc_data _OBJC_CLASS_$_DALocalDBGateKeeper
|| __DATA.__objc_data _OBJC_CLASS_$_DALocalDBHelper
|| __DATA.__objc_data _OBJC_CLASS_$_DALocalDBWatcher
|| __DATA.__objc_data _OBJC_CLASS_$_DAMailMessage
|| __DATA.__objc_data _OBJC_CLASS_$_DAMailboxDeleteMessageRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DAMailboxFetchMessageRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DAMailboxFetchSearchResultRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DAMailboxGetUpdatesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DAMailboxRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DAMailboxSetFlagsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DAMessageFetchAttachmentRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DAMessageMoveRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DAMoveAction
|| __DATA.__objc_data _OBJC_CLASS_$_DAMoveResponse
|| __DATA.__objc_data _OBJC_CLASS_$_DAResolveRecipientsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DAResolvedRecipient
|| __DATA.__objc_data _OBJC_CLASS_$_DAResponse
|| __DATA.__objc_data _OBJC_CLASS_$_DATaskManager
|| __DATA.__objc_data _OBJC_CLASS_$_DATrafficLogger
|| __DATA.__objc_data _OBJC_CLASS_$_DATrustHandler
|| __DATA.__objc_data _OBJC_CLASS_$_DAUserNotificationInfo
|| __DATA.__objc_data _OBJC_CLASS_$_DAUserNotificationUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_DAWaiterWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_DAiCalendarLogger
|| __DATA.__objc_data _OBJC_CLASS_$_EventsFolderItemsSyncContext
|| __DATA.__objc_data _OBJC_CLASS_$__DAABLegacyContainerProvider
|| __DATA.__objc_data _OBJC_CLASS_$__DAContactsAccountABLegacyProvider
|| __DATA.__objc_data _OBJC_CLASS_$__DAContactsAccountContactsProvider
|| __DATA.__objc_data _OBJC_CLASS_$__DAContactsContainerProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_ASAccountActor
|| __DATA.__objc_data _OBJC_METACLASS_$_ContactFolderItemsSyncContext
|| __DATA.__objc_data _OBJC_METACLASS_$_DAABLegacyAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_DAABLegacyContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_DAAccountChangeHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_DAAccountChangeUpdaterAccountStoreWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_DAAccountClassNames
|| __DATA.__objc_data _OBJC_METACLASS_$_DAAccountLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_DAAccountMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_DAAccountUpgrader
|| __DATA.__objc_data _OBJC_METACLASS_$_DAAction
|| __DATA.__objc_data _OBJC_METACLASS_$_DAActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_DABabysitter
|| __DATA.__objc_data _OBJC_METACLASS_$_DAContactsAccountProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DAContactsBasedAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_DAContactsContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_DAContainerProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DADataHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_DADraftMessageRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DAEditPropertyAction
|| __DATA.__objc_data _OBJC_METACLASS_$_DAFolder
|| __DATA.__objc_data _OBJC_METACLASS_$_DALocalDBGateKeeper
|| __DATA.__objc_data _OBJC_METACLASS_$_DALocalDBHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_DALocalDBWatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_DAMailMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_DAMailboxDeleteMessageRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DAMailboxFetchMessageRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DAMailboxFetchSearchResultRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DAMailboxGetUpdatesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DAMailboxRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DAMailboxSetFlagsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DAMessageFetchAttachmentRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DAMessageMoveRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DAMoveAction
|| __DATA.__objc_data _OBJC_METACLASS_$_DAMoveResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_DAResolveRecipientsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DAResolvedRecipient
|| __DATA.__objc_data _OBJC_METACLASS_$_DAResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_DATaskManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DATrafficLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_DATrustHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_DAUserNotificationInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_DAUserNotificationUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_DAWaiterWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_DAiCalendarLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_EventsFolderItemsSyncContext
|| __DATA.__objc_data _OBJC_METACLASS_$__DAABLegacyContainerProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__DAContactsAccountABLegacyProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__DAContactsAccountContactsProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__DAContactsContainerProvider
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAAccount._continueCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAAccount._isFetchingAutomatically
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAAccount._taskManager
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAAccount._xpcActivity
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAAccountClassNames._accountClassName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAAccountClassNames._agentClassName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAAccountClassNames._clientAccountClassName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAAccountClassNames._daemonAccountClassName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAActivity._account
|| __DATA.__objc_ivar _OBJC_IVAR_$_DADataHandler._container
|| __DATA.__objc_ivar _OBJC_IVAR_$_DATaskManager._account
|| __DATA.__objc_ivar _OBJC_IVAR_$_DATaskManager._daActivity
|| __DATA.__objc_ivar _OBJC_IVAR_$_DATaskManager._transaction
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAWaiterWrapper._completionHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAWaiterWrapper._dataclasses
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAWaiterWrapper._waiter
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAWaiterWrapper._waiterNum
|| __DATA_CONST.__const _DAAccountFolderContentsChangedNotification
|| __DATA_CONST.__const _DAAccountFolderHierarchyChangedNotification
|| __DATA_CONST.__const _DAAccountFolderHierarchyNeedsUpdateNotification
|| __DATA_CONST.__const _DAAccountFolderHierarchyNeedsUpdateRequireChangedFoldersNotification
|| __DATA_CONST.__const _DAAccountFolderUpdatedWithNoChangesNotification
|| __DATA_CONST.__const _DAAccountPushedFolderPreferencesChangedNotification
|| __DATA_CONST.__const _DAAccountValidationDomain
|| __DATA_CONST.__const _DACalendarBundleIdentifier
|| __DATA_CONST.__const _DAContactsBundleIdentifier
|| __DATA_CONST.__const _DAPhoneBundleIdentifier
|| __DATA_CONST.__const _DAReListenForAccounts
|| __DATA_CONST.__const _kDAAccountDoNotSaveReason
|| __DATA_CONST.__const _kDAAccountEmailAddress
|| __DATA_CONST.__const _kDAAccountHost
|| __DATA_CONST.__const _kDAAccountIdentifiersToIgnoreForUniquenessCheck
|| __DATA_CONST.__const _kDAAccountOldKeychainURLs
|| __DATA_CONST.__const _kDAAccountPersistentUUID
|| __DATA_CONST.__const _kDAAccountPersistentUUIDOldKey
|| __DATA_CONST.__const _kDAAccountPort
|| __DATA_CONST.__const _kDAAccountPrincipalPath
|| __DATA_CONST.__const _kDAAccountSavePreflighted
|| __DATA_CONST.__const _kDAAccountStolenDisplayUsername
|| __DATA_CONST.__const _kDAAccountUseSSL
|| __DATA_CONST.__const _kDAAccountUseTrustedSSLCertificate
|| __DATA_CONST.__const _kDAAccountVersion2Key
|| __DATA_CONST.__const _kDAAccountWasUpgradedFromLegacyAccount
|| __DATA_CONST.__const _kDAClientNameForChangeInsertion
|| __DATA_CONST.__const _kDADidAutodiscoverKey
|| __DATA_CONST.__const _kDAEASEndPointFQDN
|| __DATA_CONST.__const _kDAEncryptionIdentityPersistentReference
|| __DATA_CONST.__const _kDAExchangeOAuthSupportedKey
|| __DATA_CONST.__const _kDAExchangeOAuthURI
|| __DATA_CONST.__const _kDAExchangeTokenRequestURI
|| __DATA_CONST.__const _kDAIdentityPersist
|| __DATA_CONST.__const _kDAIdentityPersistIsManagedByProfile
|| __DATA_CONST.__const _kDAPowerLogCalendarItemsDownloadedEventName
|| __DATA_CONST.__const _kDAPowerLogCalendarItemsUploadedEventName
|| __DATA_CONST.__const _kDAPowerLogContainerID
|| __DATA_CONST.__const _kDAPowerLogNumberOfItemsChanged
|| __DATA_CONST.__const _kDAPowerLogSyncAccountClass
|| __DATA_CONST.__const _kDAPowerLogSyncAccountID
|| __DATA_CONST.__const _kDAPowerLogSyncAccountName
|| __DATA_CONST.__const _kDAPowerLogSyncEndEventName
|| __DATA_CONST.__const _kDAPowerLogSyncStartEventName
|| __DATA_CONST.__const _kDASigningIdentityPersistentReference
|| __DATA_CONST.__const _kDATrustSettingsExceptions
|| __DATA_CONST.__const _kGenericDAAccountType
|| __DATA_CONST.__const _kGenericDAAccountWithLoggingType
|| __DATA_CONST.__const _kSubCalCalendarStoreExternalId
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DAAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DAAggDReporter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DAAnalyticsReporter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DAKeychain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DAPowerAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DAPriorityManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DAPriorityRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DARunLoopRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DAStoreSyncStatusUpdater
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DATransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DATransactionMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DAAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DAAggDReporter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DAAnalyticsReporter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DAKeychain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DAPowerAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DAPriorityManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DAPriorityRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DARunLoopRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DAStoreSyncStatusUpdater
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DATransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DATransactionMonitor
|| __TEXT.__text _DAGetSyncImageForPerson
|| __TEXT.__text _DAIsRunningInDataAccessD
|| __TEXT.__text _DAMigrationIsNeeded
|| __TEXT.__text _DAModelString
|| __TEXT.__text _DAProductString
|| __TEXT.__text _DAStringFromCalEntityType
|| __TEXT.__text _DAUpdateMigrationVersion
|| __TEXT.__text _DAUserAgent
|| __TEXT.__text _DAWeakLinkClass
|| __TEXT.__text _DAWeakLinkSymbol
|| __TEXT.__text __DASecCopyIdentityFromPersist
|| __TEXT.__text __DASecDeleteIdentityByPersistentRef
|| __TEXT.__text __DASecIdentityCopySSLClientAuthenticationChain
|| __TEXT.__text _acDataclassForDADataclass
|| __TEXT.__text _acDataclassesForDADataclasses
|| __TEXT.__text _addNullRunLoopSourceForRunLoopAndModes
|| __TEXT.__text _appBundleIDsForDADataclasses
|| __TEXT.__text _areDADiagnosticsEnabled
|| __TEXT.__text _daDataclassForACDataclass
|| __TEXT.__text _daDataclassesForACDataclasses
|| __TEXT.__text _daDeviceID
|| __TEXT.__text _dataaccess_get_global_queue
|| __TEXT.__text _flockWithProcessAssertion
|| __TEXT.__text _runLoopModesToPerformDelayedSelectorsIn
|| __TEXT.__text _setDAIsRunningInDataAccessD
|| __TEXT.__text _sharedDAAccountStore
|| __TEXT.__text _statusAndErrorIndicatePersistentFolderSyncFailure
|| __TEXT.__text _statusAndErrorIndicateWeShouldTurnOnReachability
|| __TEXT.__text _walkUpDAErrorChain
__ Accounts: _ACAccountDataclassCalendars
__ Accounts: _ACAccountDataclassContacts
__ Accounts: _ACAccountDataclassContactsSearch
__ Accounts: _ACAccountPropertyHostname
__ Accounts: _ACAccountPropertySSLEnabled
__ Accounts: _ACAccountTypeIdentifierAol
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifierCalDAV
__ Accounts: _ACAccountTypeIdentifierCardDAV
__ Accounts: _ACAccountTypeIdentifierExchange
__ Accounts: _ACAccountTypeIdentifierFacebook
__ Accounts: _ACAccountTypeIdentifierGmail
__ Accounts: _ACAccountTypeIdentifierHolidayCalendar
__ Accounts: _ACAccountTypeIdentifierHotmail
__ Accounts: _ACAccountTypeIdentifierIMAP
__ Accounts: _ACAccountTypeIdentifierIMAPNotes
__ Accounts: _ACAccountTypeIdentifierLDAP
__ Accounts: _ACAccountTypeIdentifierOSXServer
__ Accounts: _ACAccountTypeIdentifierSubscribedCalendar
__ Accounts: _ACAccountTypeIdentifierYahoo
__ Accounts: _ACCredentialTypeOAuth2
__ Accounts: _ACCredentialTypePassword
__ Accounts: _ACCredentialTypeYahooXYMPKI
__ Accounts: _ACPropertyKeyCredential
__ Accounts: _ACYahooXYMPKICookieTKey
__ Accounts: _ACYahooXYMPKICookieYKey
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountCredential
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kACRenewCredentialsShouldAvoidUIKey
__ Accounts: _kACRenewCredentialsShouldForceKey
__ Accounts: _kAccountAuthenticationTypeParent
__ Accounts: _kAccountDataclassCalendars
__ Accounts: _kAccountDataclassContacts
__ Accounts: _kAccountDataclassContactsSearch
__ Accounts: _kAccountDataclassMail
__ Accounts: _kAccountDataclassNotes
__ Accounts: _kAccountDataclassReminders
__ AddressBookLegacy: _ABAccountCopyIdentifier
__ AddressBookLegacy: _ABAccountCopyInternalUUID
__ AddressBookLegacy: _ABAccountCreate
__ AddressBookLegacy: _ABAccountSetIdentifier
__ AddressBookLegacy: _ABAccountStoreGetAccountTypeForSource
__ AddressBookLegacy: _ABAddressBookAddRecord
__ AddressBookLegacy: _ABAddressBookCheckDefaultSourceIntegrityAndUpdateIfNeeded
__ AddressBookLegacy: _ABAddressBookCopyAccountWithIdentifier
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllAccounts
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllGroupsInSource
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllPeopleInSource
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllSourcesIncludingDisabledSources
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllSourcesWithAccountIdentifier
__ AddressBookLegacy: _ABAddressBookCopyDefaultSource
__ AddressBookLegacy: _ABAddressBookCopySourceWithAccountAndExternalIdentifiers
__ AddressBookLegacy: _ABAddressBookCopySourcesWithUUIDs
__ AddressBookLegacy: _ABAddressBookCreateWithDatabaseDirectory
__ AddressBookLegacy: _ABAddressBookCreateWithOptions
__ AddressBookLegacy: _ABAddressBookDirectoryOnlyKeepFamilyDatabasesWithDSIDs
__ AddressBookLegacy: _ABAddressBookGetAccountForSource
__ AddressBookLegacy: _ABAddressBookGetCountOfRecordsOutsideSource
__ AddressBookLegacy: _ABAddressBookGetPersonWithRecordID
__ AddressBookLegacy: _ABAddressBookMoveAllRecordsInSourceToSource
__ AddressBookLegacy: _ABAddressBookProcessAddedRecords
__ AddressBookLegacy: _ABAddressBookRegisterYieldBlock
__ AddressBookLegacy: _ABAddressBookRemoveRecord
__ AddressBookLegacy: _ABAddressBookSave
__ AddressBookLegacy: _ABAddressBookSetDefaultSource
__ AddressBookLegacy: _ABAddressBookSetIsBackgroundProcess
__ AddressBookLegacy: _ABChangeHistoryInsertUpdatesForRecordsFromBlockWithClientIdentifier
__ AddressBookLegacy: _ABChangeHistorySetAddressBookClientIdentifier
__ AddressBookLegacy: _ABDatabaseIntegrityCheckWithAddressBook
__ AddressBookLegacy: _ABImageUtilsCopySyncImageForPerson
__ AddressBookLegacy: _ABProcessAddedImages
__ AddressBookLegacy: _ABRecordCopyValue
__ AddressBookLegacy: _ABRecordGetAddressBook
__ AddressBookLegacy: _ABRecordGetIntValue
__ AddressBookLegacy: _ABRecordGetRecordID
__ AddressBookLegacy: _ABRecordSetIntValue
__ AddressBookLegacy: _ABRecordSetValue
__ AddressBookLegacy: _ABSourceAreFoldersReadonlyInCapabilityRestrictions
__ AddressBookLegacy: _ABSourceCreate
__ AddressBookLegacy: _ABSourceIsContentReadonlyInCapabilityRestrictions
__ AddressBookLegacy: _ABSourceSetContentReadonly
__ AddressBookLegacy: _ABSourceSetFoldersReadonly
__ AddressBookLegacy: _ABSourceSetMe
__ AddressBookLegacy: _ABSourceSetShouldIgnoreCapabilitiesRestrictions
__ AddressBookLegacy: _kABAddressBookCreateOptionFamilyMemberACAccountID
__ AddressBookLegacy: _kABAddressBookCreateOptionFamilyMemberAltDSIDKey
__ AddressBookLegacy: _kABSourceAccountIDProperty
__ AddressBookLegacy: _kABSourceCapabilitiesProperty
__ AddressBookLegacy: _kABSourceConstraintsPathProperty
__ AddressBookLegacy: _kABSourceExternalIdentifierProperty
__ AddressBookLegacy: _kABSourceExternalModificationTagProperty
__ AddressBookLegacy: _kABSourceExternalSyncTagProperty
__ AddressBookLegacy: _kABSourceInternalUUIDProperty
__ AddressBookLegacy: _kABSourceLastSyncDateProperty
__ AddressBookLegacy: _kABSourceMeIdentifierProperty
__ AddressBookLegacy: _kABSourceNameProperty
__ AddressBookLegacy: _kABSourceSyncDataProperty
__ AddressBookLegacy: _kABSourceTypeProperty
__ AddressBookLegacy: _kABSyncClientBeginningMultiSave
__ AddressBookLegacy: _kABSyncClientFinishedMultiSave
__ AppSupport: _CPPowerAssertionCreate
__ AppSupport: _CPSharedResourcesDirectory
__ AssertionServices: _BKSApplicationStateDisplayIDKey
__ AssertionServices: _BKSApplicationStateKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ CFNetwork: _CFHTTPCookieStorageDeleteAllCookies
__ CFNetwork: _CFHTTPCookieStorageSetCookieAcceptPolicy
__ CFNetwork: _CFURLCacheCopySharedURLCache
__ CFNetwork: _CFURLCacheRemoveAllCachedResponses
__ CFNetwork: _CFURLCacheSetDiskCapacity
__ CFNetwork: _CFURLCacheSetMemoryCapacity
__ CFNetwork: _CFURLRequestCreateMutableCopy
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLCredential
__ CFNetwork: _OBJC_CLASS_$_NSURLCredentialStorage
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: __CFURLRequestSetStorageSession
__ CFNetwork: __CFURLStorageSessionCopyCache
__ CFNetwork: __CFURLStorageSessionCopyCookieStorage
__ CFNetwork: __CFURLStorageSessionCreate
__ CFNetwork: _kCFStreamPropertyAccountIdentifier
__ CFNetwork: _kCFStreamPropertySourceApplicationBundleIdentifier
__ CFNetwork: _kCFURLConnectionSocketStreamProperties
__ CalendarDatabase: _CalDatabaseClearSuperfluousChanges
__ CalendarDatabase: _CalDatabaseCopyStoreWithExternalID
__ CalendarDatabase: _CalDatabaseCreateWithOptions
__ CalendarDatabase: _CalDatabaseCreateWithOptionsAndDatabaseDirectory
__ CalendarDatabase: _CalDatabaseGetSequenceNumber
__ CalendarDatabase: _CalDatabaseRegisterYieldBlock
__ CalendarDatabase: _CalDatabaseSave
__ CalendarDatabase: _CalDatabaseSaveAndFlushCaches
__ CalendarDatabase: _CalDatabaseSetClientIdentifier
__ CalendarDatabase: _CalDatabaseSetPropertyModificationLoggingEnabled
__ CalendarDatabase: _CalRemoveCalendar
__ CalendarDatabase: _CalStoreCopyCalendars
__ CalendarDatabase: _CalStoreCopyExternalModificationTag
__ CalendarDatabase: _CalStoreSetExternalModificationTag
__ CalendarDatabase: _OBJC_CLASS_$_CalStoreSetupAndTeardownUtils
__ CalendarDatabase: _kCalDatabaseChangedExternallyNotification
__ CalendarDatabase: _kCalSyncClientBeginningMultiSave
__ CalendarDatabase: _kCalSyncClientFinishedMultiSave
__ CalendarFoundation: _kEKAccountErrorDomain
__ CertUI: _OBJC_CLASS_$_CertUIPrompt
__ CertUI: _OBJC_CLASS_$_CertUITrustManager
__ CertUI: _kCertUIServiceTypeHTTPS
__ CertUI: _kCertUITrustPromptOptionsAllowCertificateTrustKey
__ Contacts: _OBJC_CLASS_$_CNAccount
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNContainer
__ Contacts: _OBJC_CLASS_$_CNMutableContainer
__ Contacts: _OBJC_CLASS_$_CNSaveRequest
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreDAV: _CDVExtractValuesFromRedirectString
__ CoreDAV: _CoreDAVErrorDomain
__ CoreDAV: _CoreDAVHTTPHeader_XWebLoginRequired
__ CoreDAV: _CoreDAVHTTPHeaders
__ CoreDAV: _CoreDAVHTTPStatusErrorDomain
__ CoreDAV: _kCDVRedirectReasonKey
__ CoreDAV: _kCDVRedirectURLKey
__ CoreFoundation: _CFArrayAppendArray
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopCopyCurrentMode
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringTrimWhitespace
__ CoreFoundation: _CFURLCopyPath
__ CoreFoundation: _CFURLCreateStringByAddingPercentEscapes
__ CoreFoundation: _CFURLCreateStringByReplacingPercentEscapes
__ CoreFoundation: _CFURLCreateWithString
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFCopyServerVersionDictionary
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: __kCFSystemVersionProductVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ DataAccessExpress: _DACPLoggingAddCustomLogFile
__ DataAccessExpress: _DACPLoggingAppendDataToLogFile
__ DataAccessExpress: _DACPLoggingSlurpFileIntoLogFile
__ DataAccessExpress: _DACustomLogDirectory
__ DataAccessExpress: _DAErrorDomain
__ DataAccessExpress: _DALoggingwithCategory
__ DataAccessExpress: _DAUnderlyingStatusCodeKey
__ DataAccessExpress: _OBJC_CLASS_$_DAAccountChangeInfo
__ DataAccessExpress: _OBJC_CLASS_$_DABehaviorOptions
__ DataAccessExpress: _OBJC_CLASS_$_DADConnection
__ DataAccessExpress: _OBJC_CLASS_$_DADisableableObject
__ DataAccessExpress: _OBJC_CLASS_$_DASharedAccountProperties
__ DataAccessExpress: _OBJC_CLASS_$_DAStatusReport
__ DataAccessExpress: _OBJC_METACLASS_$_DADisableableObject
__ DataAccessExpress: __CPLog_to_os_log_type
__ DataAccessExpress: _kDACPLoggingCustomCreateLogFormatBlock
__ DataAccessExpress: _kDACPLoggingCustomLogDirectoryKey
__ DataAccessExpress: _kDACPLoggingCustomLogFileLevelDefaultsKeyKey
__ DataAccessExpress: _kDACPLoggingCustomLogNameKey
__ DataAccessExpress: _kDACPLoggingCustomMaxConsoleLevelKey
__ DataAccessExpress: _kDACPLoggingCustomMaxLogFileLevelKey
__ DataAccessExpress: _kDACPLoggingEnableNewlinesKey
__ DataAccessExpress: _kSubCalRefreshTaskErrorDomain
__ DataAccessExpress: _kSubCalURLRequestErrorDomain
__ DataAccessExpress: _shouldDALogAtLevel
__ DataMigration: _DMGetPreviousBuildVersion
__ EventKit: _OBJC_CLASS_$_EKEventStore
__ EventKit: _OBJC_CLASS_$_EKTimedEventStorePurger
__ Foundation: _NSClassFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ MIME: _H_DATE
__ MIME: _H_SUBJECT
__ MIME: _MFMimeHeaderReplyToKey
__ MIME: _OBJC_CLASS_$_MFMutableMessageHeaders
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ Notes: _OBJC_CLASS_$_NoteContext
__ PowerLog: _PLLogRegisteredEvent
__ PowerLog: _PLShouldLogRegisteredEvent
__ Security: _SecCertificateGetSHA1Digest
__ Security: _SecIdentityCopyCertificate
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecPolicyCreateSSL
__ Security: _SecTrustCopyExceptions
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustEvaluate
__ Security: _SecTrustGetCertificateAtIndex
__ Security: _SecTrustGetCertificateCount
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAfterFirstUnlock
__ Security: _kSecAttrAccessibleAlways
__ Security: _kSecAttrAccessibleWhenUnlocked
__ Security: _kSecAttrAccount
__ Security: _kSecAttrAuthenticationType
__ Security: _kSecAttrAuthenticationTypeDefault
__ Security: _kSecAttrPath
__ Security: _kSecAttrPort
__ Security: _kSecAttrProtocol
__ Security: _kSecAttrProtocolFTP
__ Security: _kSecAttrProtocolHTTP
__ Security: _kSecAttrProtocolHTTPS
__ Security: _kSecAttrSecurityDomain
__ Security: _kSecAttrServer
__ Security: _kSecAttrService
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecClassInternetPassword
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecReturnAttributes
__ Security: _kSecReturnData
__ Security: _kSecReturnRef
__ Security: _kSecValueData
__ Security: _kSecValuePersistentRef
__ SoftLinking: __sl_dlopen_audited
__ SpringBoardServices: _SBGetScreenLockStatus
__ SpringBoardServices: _SBSProcessAssertionCreateForPID
__ SpringBoardServices: _SBSSpringBoardServerPort
__ SpringBoardServices: _kSBSLockStateNotifyKey
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ iCalendar: _OBJC_CLASS_$_ICSLogger
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_nospin_lock_lock
__ libSystem.B.dylib: __os_nospin_lock_unlock
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _flock
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _setpriority
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_getName
DAAccount : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *dataclassPropertyURLsByDataclass
 @property  DAStatusReport *statusReport
 @property  DATrustHandler *trustHandler
 @property  BOOL shouldUseOpportunisticSockets
 @property  BOOL wasUserInitiated
 @property  NSMutableArray *pendingQueries
 @property  NSObject<OS_dispatch_queue> *pendingQueryQueue
 @property  NSDate *lastQueryStartedTime
 @property  NSString *accountID
 @property  int daAccountVersion
 @property  NSString *persistentUUID
 @property  NSString *accountDescription
 @property  NSString *publicDescription
 @property  NSString *username
 @property  NSString *user
 @property  NSString *host
 @property  long long port
 @property  NSString *password
 @property  BOOL useSSL
 @property  long long enabledDataclassesBitmask
 @property  BOOL isChildAccount
 @property  ACAccount *backingAccountInfo
 @property  DATaskManager *taskManager
 @property  NSString *changeTrackingID
 @property  int keychainAccessibilityType
 @property  NSString *scheduleIdentifier
 @property  NSData *signingIdentityPersistentReference
 @property  NSData *encryptionIdentityPersistentReference
 @property  BOOL shouldDoInitialAutodiscovery
 @property  BOOL shouldAutodiscoverAccountProperties
 @property  NSString *scheme
 @property  NSURL *principalURL
 @property  NSString *principalPath
 @property  NSString *clientToken
 @property  NSString *emailAddress
 @property  NSArray *emailAddresses
 @property  NSString *preferredAddress
 @property  NSArray *appIdsForPasswordPrompt
 @property  BOOL shouldFailAllTasks
 @property  NSData *identityPersist
 @property  BOOL isValidating
 @property  NSString *userAgentHeader
 @property  NSSet *serverComplianceClasses
 @property  NSString *serverRoot
 @property  NSString *sourceApplicationBundleIdentifier

  // class methods
  +[DAAccount daAccountSubclassWithBackingAccountInfo:]
  +[DAAccount shouldCreateAccountForBackingAccountInfo:]
  +[DAAccount _leafAccountTypes]
  +[DAAccount _leafAccountTypes]
  +[DAAccount oneshotListOfAccountIDs]
  +[DAAccount reacquireClientRestrictions:]

  // instance methods
  -[DAAccount useSSL]
  -[DAAccount setPort:]
  -[DAAccount scheme]
  -[DAAccount user]
  -[DAAccount setUser:]
  -[DAAccount host]
  -[DAAccount setHost:]
  -[DAAccount isDisabled]
  -[DAAccount stateString]
  -[DAAccount setUsername:]
  -[DAAccount setEmailAddresses:]
  -[DAAccount isEqualToAccount:]
  -[DAAccount emailAddresses]
  -[DAAccount setEmailAddress:]
  -[DAAccount reload]
  -[DAAccount password]
  -[DAAccount objectForKeyedSubscript:]
  -[DAAccount setPassword:]
  -[DAAccount _refreshCredential]
  -[DAAccount resetStatusReport]
  -[DAAccount _setPersistentUUID:]
  -[DAAccount ingestBackingAccountInfoProperties]
  -[DAAccount performUsingAccountPersona:]
  -[DAAccount daAccountVersion]
  -[DAAccount shutdown]
  -[DAAccount username]
  -[DAAccount initWithBackingAccountInfo:]
  -[DAAccount accountIntPropertyForKey:]
  -[DAAccount setAccountIntProperty:forKey:]
  -[DAAccount setDAAccountVersion:]
  -[DAAccount statusReport]
  -[DAAccount setAccountBoolProperty:forKey:]
  -[DAAccount identityPersist]
  -[DAAccount passwordWithExpected:]
  -[DAAccount dataclassPropertyURLsByDataclass]
  -[DAAccount urlFromDataclassPropertiesForDataclass:]
  -[DAAccount checkValidityOnAccountStore:withConsumer:inQueue:]
  -[DAAccount setIsValidating:]
  -[DAAccount removeDBSyncData]
  -[DAAccount protocolVersion]
  -[DAAccount clientToken]
  -[DAAccount sourceApplicationBundleIdentifier]
  -[DAAccount preferredAddress]
  -[DAAccount dealloc]
  -[DAAccount removeFromCoreDAVLoggingDelegates]
  -[DAAccount addToCoreDAVLoggingDelegates]
  -[DAAccount shouldDoInitialAutodiscovery]
  -[DAAccount shouldRemoveDBSyncDataOnAccountChange]
  -[DAAccount containerProviderWithDBHelper:]
  -[DAAccount accountHasSignificantPropertyChangesWithChangeInfo:]
  -[DAAccount _handleSignificantPropertyChanges]
  -[DAAccount cleanupAccountFiles]
  -[DAAccount onBehalfOfBundleIdentifier]
  -[DAAccount monitorFoldersWithIDs:]
  -[DAAccount _isIdentityManagedByProfile]
  -[DAAccount setIdentityCertificatePersistentID:managedByProfile:]
  -[DAAccount saveAccountPropertiesWithCompletionHandler:]
  -[DAAccount saveAccountProperties]
  -[DAAccount canSaveWithAccountProvider:]
  -[DAAccount exceptionsDict]
  -[DAAccount copyStorageSession]
  -[DAAccount trustHandler]
  -[DAAccount resetCertWarnings]
  -[DAAccount setStatusReport:]
  -[DAAccount isValidating]
  -[DAAccount isDelegateAccount]
  -[DAAccount keychainAccessibilityType]
  -[DAAccount upgradeAccount]
  -[DAAccount resetAccountID]
  -[DAAccount scheduleIdentifier]
  -[DAAccount consumerForTask:]
  -[DAAccount .cxx_destruct]
  -[DAAccount enabledForAnyDADataclasses:]
  -[DAAccount setEnabled:forDADataclass:]
  -[DAAccount enabledDataclassesBitmask]
  -[DAAccount spinnerIdentifiers]
  -[DAAccount resumeMonitoringFoldersWithIDs:]
  -[DAAccount suspendMonitoringFoldersWithIDs:]
  -[DAAccount stopMonitoringFolderWithID:]
  -[DAAccount setConsumer:forTask:]
  -[DAAccount removeConsumerForTask:]
  -[DAAccount clientTokenRequestedByServer]
  -[DAAccount hostFromDataclassPropertiesForDataclass:]
  -[DAAccount usernameWithoutDomain]
  -[DAAccount domainOnly]
  -[DAAccount getAppleIDSession]
  -[DAAccount setAccountDescription:]
  -[DAAccount useSSLFromDataclassPropertiesForDataclass:]
  -[DAAccount portFromDataclassPropertiesForDataclass:]
  -[DAAccount accountContainsEmailAddress:]
  -[DAAccount setPrincipalURL:]
  -[DAAccount checkValidityOnAccountStore:withConsumer:]
  -[DAAccount saveModifiedPropertiesOnBackingAccount]
  -[DAAccount discoverInitialPropertiesWithConsumer:]
  -[DAAccount autodiscoverAccountConfigurationWithConsumer:]
  -[DAAccount setShouldDoInitialAutodiscovery:]
  -[DAAccount serverRoot]
  -[DAAccount shouldAutodiscoverAccountProperties]
  -[DAAccount accountDidChangeWithChangeInfo:]
  -[DAAccount serverComplianceClasses]
  -[DAAccount handleCertificateError:]
  -[DAAccount additionalHeaderValues]
  -[DAAccount customConnectionProperties]
  -[DAAccount oauthInfoProvider]
  -[DAAccount monitorFolderWithID:]
  -[DAAccount stopMonitoringFoldersWithIDs:]
  -[DAAccount stopMonitoringFolders]
  -[DAAccount defaultContainerIdentifierForDADataclass:]
  -[DAAccount removeClientCertificateData]
  -[DAAccount addUsernameToURL:]
  -[DAAccount setSourceApplicationBundleIdentifier:]
  -[DAAccount setAccountProperty:forKey:]
  -[DAAccount port]
  -[DAAccount updateExistingAccountProperties]
  -[DAAccount preflightSaveWithAccountProvider:]
  -[DAAccount exceptionsForDigest:]
  -[DAAccount setExceptions:forDigest:]
  -[DAAccount shouldFailAllTasks]
  -[DAAccount isActiveSyncAccount]
  -[DAAccount isLDAPAccount]
  -[DAAccount isCalDAVAccount]
  -[DAAccount isCardDAVAccount]
  -[DAAccount isCalDAVChildAccount]
  -[DAAccount isGoogleAccount]
  -[DAAccount isSubscribedCalendarAccount]
  -[DAAccount shouldCancelTaskDueToOnPowerFetchMode]
  -[DAAccount saveXpcActivity:]
  -[DAAccount hasXpcActivity]
  -[DAAccount isChildAccount]
  -[DAAccount setObject:forKeyedSubscript:]
  -[DAAccount incrementXpcActivityContinueCount]
  -[DAAccount decrementXpcActivityContinueCount]
  -[DAAccount saveFetchingAutomaticallyState:]
  -[DAAccount getFetchingAutomaticallyState]
  -[DAAccount shouldUseOpportunisticSockets]
  -[DAAccount setShouldUseOpportunisticSockets:]
  -[DAAccount setWasUserInitiated:]
  -[DAAccount setTrustHandler:]
  -[DAAccount appIdsForPasswordPrompt]
  -[DAAccount setDataclassPropertyURLsByDataclass:]
  -[DAAccount pendingQueries]
  -[DAAccount setPendingQueries:]
  -[DAAccount pendingQueryQueue]
  -[DAAccount publicDescription]
  -[DAAccount setPendingQueryQueue:]
  -[DAAccount lastQueryStartedTime]
  -[DAAccount setLastQueryStartedTime:]
  -[DAAccount eventsFolders]
  -[DAAccount handleTrustChallenge:]
  -[DAAccount handleTrustChallenge:completionHandler:]
  -[DAAccount notesFolders]
  -[DAAccount _webLoginRequestedAtURL:reasonString:inQueue:completionBlock:]
  -[DAAccount dropAssertionsAndRenewCredentialsInQueue:withHandler:]
  -[DAAccount localizedIdenticalAccountFailureMessage]
  -[DAAccount localizedInvalidPasswordMessage]
  -[DAAccount handleValidationError:completion:]
  -[DAAccount userAgentHeader]
  -[DAAccount principalURL]
  -[DAAccount setUseSSL:]
  -[DAAccount setEnabled:forDataclass:]
  -[DAAccount dataclassProperties]
  -[DAAccount accountPropertyForKey:]
  -[DAAccount webLoginRequestedAtURL:reasonString:inQueue:completionBlock:]
  -[DAAccount accountHasSignificantPropertyChangesFromOldAccountInfo:]
  -[DAAccount accountDidChangeFromOldAccountInfo:]
  -[DAAccount isEnabledForDataclass:]
  -[DAAccount defaultEventsFolder]
  -[DAAccount sendEmailsForCalEvents:consumer:]
  -[DAAccount defaultNotesFolder]
  -[DAAccount synchronizeNotesFolder:noteContext:previousTag:actions:changeSet:notesToDeleteAfterSync:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:]
  -[DAAccount synchronizeEventsFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:]
  -[DAAccount beginDownloadingAttachmentWithUUID:consumer:]
  -[DAAccount cancelDownloadingInstance:error:]
  -[DAAccount requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:]
  -[DAAccount fetchOfficeHoursWithConsumer:error:]
  -[DAAccount changeTrackingID]
  -[DAAccount requestGrantedDelegatesListWithConsumer:]
  -[DAAccount updateGrantedDelegatePermission:consumer:]
  -[DAAccount cancelUpdateGrantedDelegatePermissionRequestWithID:]
  -[DAAccount performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:]
  -[DAAccount respondToShareRequestForCalendar:withResponse:consumer:]
  -[DAAccount reportShareRequestAsJunkForCalendar:consumer:]
  -[DAAccount cancelShareResponseInstance:error:]
  -[DAAccount setOfficeHours:withConsumer:error:]
  -[DAAccount cancelOfficeHoursRequestWithID:]
  -[DAAccount defaultContactsFolder]
  -[DAAccount contactsFolders]
  -[DAAccount synchronizeContactsFolder:previousTag:previousSyncToken:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:previousTagIsSuspect:moreLocalChangesAvailable:consumer:]
  -[DAAccount principalPath]
  -[DAAccount setPrincipalPath:]
  -[DAAccount tearDown]
  -[DAAccount taskManager]
  -[DAAccount accountsProviderWithDBHelper:]
  -[DAAccount wasUserInitiated]
  -[DAAccount accountDescription]
  -[DAAccount syncStoreIdentifier]
  -[DAAccount removeAccountPropertyForKey:]
  -[DAAccount cancelCalendarDirectorySearchWithID:]
  -[DAAccount oauth2Token]
  -[DAAccount emailAddress]
  -[DAAccount updateOofSettingsWithParams:consumer:]
  -[DAAccount retrieveOofSettingsForConsumer:]
  -[DAAccount isOofSupported]
  -[DAAccount getPendingQueryQueue]
  -[DAAccount _reallyPerformSearchQuery:]
  -[DAAccount _dequeueQuery]
  -[DAAccount _reallyCancelSearchQuery:]
  -[DAAccount _reallyCancelPendingSearchQuery:]
  -[DAAccount _reallyCancelAllSearchQueries]
  -[DAAccount _reallySearchQueriesRunning]
  -[DAAccount cancelAllSearchQueries]
  -[DAAccount searchQueriesRunning]
  -[DAAccount defaultToDosFolder]
  -[DAAccount toDosFolders]
  -[DAAccount synchronizeToDosFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:]
  -[DAAccount toDosNumberOfPastDaysToSync]
  -[DAAccount accountTypeIdentifier]
  -[DAAccount cancelGrantedDelegatesListRequestWithID:]
  -[DAAccount setToDosNumberOfPastDaysToSync:]
  -[DAAccount backingAccountInfo]
  -[DAAccount inboxFolder]
  -[DAAccount sentItemsFolder]
  -[DAAccount deletedItemsFolder]
  -[DAAccount draftsFolder]
  -[DAAccount accountID]
  -[DAAccount cancelCalendarAvailabilityRequestWithID:]
  -[DAAccount accountBoolPropertyForKey:]
  -[DAAccount encryptionIdentityPersistentReference]
  -[DAAccount isHotmailAccount]
  -[DAAccount persistentUUID]
  -[DAAccount enabledForDADataclass:]
  -[DAAccount supportsMailboxSearch]
  -[DAAccount supportsEmailFlagging]
  -[DAAccount reattemptInvitationLinkageForMetaData:inFolderWithId:]
  -[DAAccount unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:]
  -[DAAccount displayName]
  -[DAAccount performSearchQuery:]
  -[DAAccount cancelSearchQuery:]
  -[DAAccount signingIdentityPersistentReference]
  -[DAAccount setSigningIdentityPersistentReference:]
  -[DAAccount setEncryptionIdentityPersistentReference:]
  -[DAAccount removeXpcActivity]


EventsFolderItemsSyncContext : NSObject /usr/lib/libSystem.B.dylib
 @property  int calEventChangeId
 @property  int calRecurrenceChangeId
 @property  int calAlarmChangeId
 @property  int calAttendeeChangeId
 @property  int calAttachmentChangeId
 @property  int highestSequenceNumber

  // instance methods
  -[EventsFolderItemsSyncContext calEventChangeId]
  -[EventsFolderItemsSyncContext setCalEventChangeId:]
  -[EventsFolderItemsSyncContext calRecurrenceChangeId]
  -[EventsFolderItemsSyncContext setCalRecurrenceChangeId:]
  -[EventsFolderItemsSyncContext calAlarmChangeId]
  -[EventsFolderItemsSyncContext setCalAlarmChangeId:]
  -[EventsFolderItemsSyncContext calAttendeeChangeId]
  -[EventsFolderItemsSyncContext setCalAttendeeChangeId:]
  -[EventsFolderItemsSyncContext calAttachmentChangeId]
  -[EventsFolderItemsSyncContext setCalAttachmentChangeId:]
  -[EventsFolderItemsSyncContext highestSequenceNumber]
  -[EventsFolderItemsSyncContext setHighestSequenceNumber:]


DATransactionMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  int transactionCount
 @property  NSMutableArray *transactions
 @property  <DATransactionMonitorDelegate> *transactionMonitorDelegate

  // class methods
  +[DATransactionMonitor sharedTransactionMonitor]

  // instance methods
  -[DATransactionMonitor transactionCount]
  -[DATransactionMonitor init]
  -[DATransactionMonitor .cxx_destruct]
  -[DATransactionMonitor setTransactions:]
  -[DATransactionMonitor transactions]
  -[DATransactionMonitor incrementTransactionCountForTransaction:]
  -[DATransactionMonitor decrementTransactionCountForTransaction:]
  -[DATransactionMonitor transactionMonitorDelegate]
  -[DATransactionMonitor setTransactionMonitorDelegate:]
  -[DATransactionMonitor setTransactionCount:]


ContactFolderItemsSyncContext : NSObject /usr/lib/libSystem.B.dylib
 @property  int abPersonChangeId
 @property  int abGroupChangeId
 @property  BOOL changeHistoryTruncated
 @property  unsigned long latestSequenceNumber
 @property  CNChangeHistoryAnchor *cnChangeAnchor

  // instance methods
  -[ContactFolderItemsSyncContext init]
  -[ContactFolderItemsSyncContext .cxx_destruct]
  -[ContactFolderItemsSyncContext abPersonChangeId]
  -[ContactFolderItemsSyncContext setAbPersonChangeId:]
  -[ContactFolderItemsSyncContext abGroupChangeId]
  -[ContactFolderItemsSyncContext setAbGroupChangeId:]
  -[ContactFolderItemsSyncContext isChangeHistoryTruncated]
  -[ContactFolderItemsSyncContext setChangeHistoryTruncated:]
  -[ContactFolderItemsSyncContext latestSequenceNumber]
  -[ContactFolderItemsSyncContext setLatestSequenceNumber:]
  -[ContactFolderItemsSyncContext cnChangeAnchor]
  -[ContactFolderItemsSyncContext setCnChangeAnchor:]


DAAccountLoader : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *acAccountTypeToAccountFrameworkSubpath
 @property  NSMutableDictionary *acAccountTypeToAccountDaemonBundleSubpath
 @property  NSMutableDictionary *acAccountTypeToClassNames
 @property  NSMutableDictionary *acParentAccountTypeToChildAccountTypes

  // class methods
  +[DAAccountLoader sharedInstance]
  +[DAAccountLoader _findPrivateFrameworks]

  // instance methods
  -[DAAccountLoader init]
  -[DAAccountLoader daemonAppropriateAccountClassForACAccount:]
  -[DAAccountLoader .cxx_destruct]
  -[DAAccountLoader setAcAccountTypeToAccountFrameworkSubpath:]
  -[DAAccountLoader setAcAccountTypeToAccountDaemonBundleSubpath:]
  -[DAAccountLoader setAcAccountTypeToClassNames:]
  -[DAAccountLoader setAcParentAccountTypeToChildAccountTypes:]
  -[DAAccountLoader _addAccountInfo:forFrameworkNamed:]
  -[DAAccountLoader _loadFrameworkAtSubpath:]
  -[DAAccountLoader loadFrameworkForACAccountType:]
  -[DAAccountLoader loadDaemonBundleForACAccountType:]
  -[DAAccountLoader agentClassForACAccount:]
  -[DAAccountLoader daemonAccountClassForACAccount:]
  -[DAAccountLoader clientAccountClassForACAccount:]
  -[DAAccountLoader accountClassForACAccount:]
  -[DAAccountLoader acAccountTypeToAccountFrameworkSubpath]
  -[DAAccountLoader acAccountTypeToAccountDaemonBundleSubpath]
  -[DAAccountLoader acAccountTypeToClassNames]
  -[DAAccountLoader acParentAccountTypeToChildAccountTypes]


DAAccountClassNames : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *accountClassName
 @property  NSString *clientAccountClassName
 @property  NSString *daemonAccountClassName
 @property  NSString *agentClassName

  // instance methods
  -[DAAccountClassNames .cxx_destruct]
  -[DAAccountClassNames setAccountClassName:]
  -[DAAccountClassNames setClientAccountClassName:]
  -[DAAccountClassNames setDaemonAccountClassName:]
  -[DAAccountClassNames setAgentClassName:]
  -[DAAccountClassNames accountClassName]
  -[DAAccountClassNames clientAccountClassName]
  -[DAAccountClassNames daemonAccountClassName]
  -[DAAccountClassNames agentClassName]


DAAction : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned long itemChangeType
 @property  id serverId
 @property  id instanceId
 @property  id changedItem
 @property  int changeId
 @property  id forwardedAttendees
 @property  id forwardedAttendeeUUIDs
 @property  BOOL ignoresGuardianRestrictions

  // class methods
  +[DAAction supportsSecureCoding]

  // instance methods
  -[DAAction message]
  -[DAAction instanceId]
  -[DAAction ignoresGuardianRestrictions]
  -[DAAction .cxx_destruct]
  -[DAAction encodeWithCoder:]
  -[DAAction stringForItemChangeType:]
  -[DAAction setItemChangeType:]
  -[DAAction _setChangedItem:]
  -[DAAction setServerId:]
  -[DAAction setInstanceId:]
  -[DAAction setChangeId:]
  -[DAAction initWithItemChangeType:changedItem:serverId:instanceId:]
  -[DAAction forwardedAttendees]
  -[DAAction setForwardedAttendees:]
  -[DAAction forwardedAttendeeUUIDs]
  -[DAAction setForwardedAttendeeUUIDs:]
  -[DAAction isEqual:]
  -[DAAction serverId]
  -[DAAction changeId]
  -[DAAction initWithItemChangeType:changedItem:serverId:]
  -[DAAction itemChangeType]
  -[DAAction changedItem]
  -[DAAction setIgnoresGuardianRestrictions:]
  -[DAAction initWithCoder:]


DAMoveAction : DAAction
 @property  NSString *sourceContainerId
 @property  NSString *sourceServerId
 @property  NSString *destinationContainerId

  // class methods
  +[DAMoveAction supportsSecureCoding]

  // instance methods
  -[DAMoveAction .cxx_destruct]
  -[DAMoveAction encodeWithCoder:]
  -[DAMoveAction setSourceContainerId:]
  -[DAMoveAction setSourceServerId:]
  -[DAMoveAction setDestinationContainerId:]
  -[DAMoveAction sourceContainerId]
  -[DAMoveAction sourceServerId]
  -[DAMoveAction destinationContainerId]
  -[DAMoveAction initWithItemChangeType:changedItem:sourceContainerId:sourceServerId:destinationContainerId:]
  -[DAMoveAction initWithCoder:]


DAEditPropertyAction : DAAction
 @property  NSString *propertyName
 @property  NSString *value
 @property  NSString *propertyNamespace

  // class methods
  +[DAEditPropertyAction supportsSecureCoding]

  // instance methods
  -[DAEditPropertyAction propertyName]
  -[DAEditPropertyAction .cxx_destruct]
  -[DAEditPropertyAction encodeWithCoder:]
  -[DAEditPropertyAction propertyNamespace]
  -[DAEditPropertyAction initWithChangedItem:propertyName:value:propertyNamespace:serverId:]
  -[DAEditPropertyAction value]
  -[DAEditPropertyAction initWithCoder:]


DAResponse : DAAction
 @property  long long status

  // class methods
  +[DAResponse supportsSecureCoding]

  // instance methods
  -[DAResponse encodeWithCoder:]
  -[DAResponse initWithItemChangeType:changedItem:serverId:status:]
  -[DAResponse setStatus:]
  -[DAResponse status]
  -[DAResponse initWithCoder:]


DAAnalyticsReporter : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DAAnalyticsReporter reportActiveExchangeOAuthAccountsCount]
  +[DAAnalyticsReporter startDailyAnalyticsReporter]
  +[DAAnalyticsReporter endDailyAnalyticsReporter]


DAABLegacyContainer : NSObject /usr/lib/libSystem.B.dylib <DAContainer>
 @property  ^v source
 @property  BOOL guardianRestricted
 @property  BOOL guardianStateDirty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DAABLegacyContainer isGroup]
  -[DAABLegacyContainer isContact]
  -[DAABLegacyContainer cTag]
  -[DAABLegacyContainer accountIdentifier]
  -[DAABLegacyContainer dealloc]
  -[DAABLegacyContainer updateSaveRequest:]
  -[DAABLegacyContainer source]
  -[DAABLegacyContainer setType:]
  -[DAABLegacyContainer name]
  -[DAABLegacyContainer identifier]
  -[DAABLegacyContainer syncTag]
  -[DAABLegacyContainer type]
  -[DAABLegacyContainer isAccount]
  -[DAABLegacyContainer setSyncTag:]
  -[DAABLegacyContainer markAsDefault]
  -[DAABLegacyContainer setGuardianRestricted:]
  -[DAABLegacyContainer isGuardianRestricted]
  -[DAABLegacyContainer syncData]
  -[DAABLegacyContainer meContactIdentifier]
  -[DAABLegacyContainer setMeContactIdentifier:]
  -[DAABLegacyContainer isContentReadonly]
  -[DAABLegacyContainer setContentReadonly:]
  -[DAABLegacyContainer arePropertiesReadonly]
  -[DAABLegacyContainer setArePropertiesReadonly:]
  -[DAABLegacyContainer isSearchContainer]
  -[DAABLegacyContainer asContainer]
  -[DAABLegacyContainer initWithABSource:]
  -[DAABLegacyContainer setSyncData:]
  -[DAABLegacyContainer markForDeletion]
  -[DAABLegacyContainer setExternalIdentifier:]
  -[DAABLegacyContainer isContainer]
  -[DAABLegacyContainer constraintsPath]
  -[DAABLegacyContainer setCTag:]
  -[DAABLegacyContainer asSource]
  -[DAABLegacyContainer setConstraintsPath:]
  -[DAABLegacyContainer isGuardianStateDirty]
  -[DAABLegacyContainer setGuardianStateDirty:]
  -[DAABLegacyContainer isLocal]
  -[DAABLegacyContainer externalIdentifier]
  -[DAABLegacyContainer setName:]
  -[DAABLegacyContainer setAccountIdentifier:]


DAFolder : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL hasRemoteChanges
 @property  NSString *folderName
 @property  NSString *folderID
 @property  NSString *parentFolderID
 @property  long long dataclass
 @property  BOOL isDefault

  // instance methods
  -[DAFolder setDataclass:]
  -[DAFolder mailboxID]
  -[DAFolder setFolderID:]
  -[DAFolder .cxx_destruct]
  -[DAFolder setFolderName:]
  -[DAFolder parentMailboxID]
  -[DAFolder isEqual:]
  -[DAFolder folderID]
  -[DAFolder setParentFolderID:]
  -[DAFolder hasRemoteChanges]
  -[DAFolder setHasRemoteChanges:]
  -[DAFolder dataclass]
  -[DAFolder folderName]
  -[DAFolder parentFolderID]
  -[DAFolder isDefault]
  -[DAFolder setIsDefault:]


DAAccountMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSHashTable *accounts
 @property  NSObject<OS_dispatch_queue> *accountsQueue

  // class methods
  +[DAAccountMonitor sharedMonitor]

  // instance methods
  -[DAAccountMonitor accounts]
  -[DAAccountMonitor init]
  -[DAAccountMonitor unmonitorAccount:]
  -[DAAccountMonitor monitorAccount:]
  -[DAAccountMonitor .cxx_destruct]
  -[DAAccountMonitor monitoredAccounts]
  -[DAAccountMonitor setAccountsQueue:]
  -[DAAccountMonitor accountsQueue]
  -[DAAccountMonitor setAccounts:]


DAKeychain : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DAKeychain sharedKeychain]

  // instance methods
  -[DAKeychain migratePasswordForAccount:]
  -[DAKeychain _daKeychainAccessibilityForSecAccessibility:]
  -[DAKeychain canAccessCredentialsWithAccessibility:]
  -[DAKeychain removePersistentCredentials]
  -[DAKeychain _secAccessibilityForDAKeychainAccessibility:]
  -[DAKeychain _DACopyMutableQueryForAccountWithPersistentUUID:]
  -[DAKeychain _DACopyMutableAttributesForAccountWithPersistentUUID:accessibility:]
  -[DAKeychain removePasswordForAccount:withPersistentUUID:]
  -[DAKeychain passwordForAccountWithPersistentUUID:expectedAccessibility:shouldSetAccessibility:passwordExpected:]
  -[DAKeychain guessPasswordForURL:]
  -[DAKeychain removeKeychainInformationsForURL:]
  -[DAKeychain setPassword:forAccount:withPersistentUUID:withAccessibility:]
  -[DAKeychain loadKeychainInformationsForURL:]
  -[DAKeychain saveKeychainInformationsForURL:andPassword:withAccessibility:]


DAAccountChangeUpdaterAccountStoreWrapper : NSObject /usr/lib/libSystem.B.dylib <DAAccountChangeHandlerAccountStoreUpdater>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DAAccountChangeUpdaterAccountStoreWrapper initWithAccountStore:]
  -[DAAccountChangeUpdaterAccountStoreWrapper .cxx_destruct]
  -[DAAccountChangeUpdaterAccountStoreWrapper removeAccount:completion:]
  -[DAAccountChangeUpdaterAccountStoreWrapper addAccount:withCompletionHandler:]
  -[DAAccountChangeUpdaterAccountStoreWrapper updateAccount:withCompletionHandler:]


DAAccountChangeHandler : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DAAccountChangeHandler _handleAccountAddOrModify:withChangeInfo:inStore:accountUpdater:]
  +[DAAccountChangeHandler _handleCalDAVAccountModifiedByDataAccess:withChangeInfo:inStore:accountUpdater:]
  +[DAAccountChangeHandler _handleAccountDelete:withChangeInfo:inStore:]
  +[DAAccountChangeHandler _cleanupStoreForDisabledAccount:inStore:]
  +[DAAccountChangeHandler _setupStoreForNewAccount:]
  +[DAAccountChangeHandler _sanityCheckChildSubCalAccountsWithParent:inStore:accountUpdater:]
  +[DAAccountChangeHandler _sanityCheckCalDAVAccount:modifiedDataClasses:]
  +[DAAccountChangeHandler _sanityCheckChildAccountOfType:withParent:accountChangeInfo:inStore:updater:]
  +[DAAccountChangeHandler _sanityCheckEnabledDataclassesOnExchangeAccountInfo:]
  +[DAAccountChangeHandler _performBlockWithGenericClientDB:]
  +[DAAccountChangeHandler _accountTypeWithIdentifier:inStore:]
  +[DAAccountChangeHandler _pickAccountToKeepWithAccount:andAccount:]
  +[DAAccountChangeHandler _sanityCheckChildDAVAccount:withParent:modifiedDataClasses:]
  +[DAAccountChangeHandler handleAccountWillChange:withChangeInfo:store:accountUpdater:]
  +[DAAccountChangeHandler handleAccountDidChange:withChangeInfo:store:]


DAMailboxRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  int requestType
 @property  int bodyFormat
 @property  NSString *messageID

  // instance methods
  -[DAMailboxRequest setRequestType:]
  -[DAMailboxRequest init]
  -[DAMailboxRequest setMessageID:]
  -[DAMailboxRequest requestType]
  -[DAMailboxRequest messageID]
  -[DAMailboxRequest .cxx_destruct]
  -[DAMailboxRequest setBodyFormat:]
  -[DAMailboxRequest bodyFormat]


DAMailboxSetFlagsRequest : DAMailboxRequest
 @property  unsigned long onFlags
 @property  unsigned long offFlags

  // instance methods
  -[DAMailboxSetFlagsRequest onFlags]
  -[DAMailboxSetFlagsRequest isEqual:]
  -[DAMailboxSetFlagsRequest offFlags]
  -[DAMailboxSetFlagsRequest setOnFlags:]
  -[DAMailboxSetFlagsRequest setOffFlags:]
  -[DAMailboxSetFlagsRequest initRequestWithSetFlags:unsetFlags:message:]


DAMailboxGetUpdatesRequest : DAMailboxRequest
 @property  int maxSize

  // instance methods
  -[DAMailboxGetUpdatesRequest maxSize]
  -[DAMailboxGetUpdatesRequest setMaxSize:]
  -[DAMailboxGetUpdatesRequest isEqual:]
  -[DAMailboxGetUpdatesRequest initRequestForBodyFormat:withBodySizeLimit:]


DAMailboxDeleteMessageRequest : DAMailboxRequest
  // instance methods
  -[DAMailboxDeleteMessageRequest isEqual:]
  -[DAMailboxDeleteMessageRequest initRequestWithMessageID:]


DAMailboxFetchMessageRequest : DAMailboxRequest
 @property  int maxSize

  // instance methods
  -[DAMailboxFetchMessageRequest maxSize]
  -[DAMailboxFetchMessageRequest setMaxSize:]
  -[DAMailboxFetchMessageRequest isEqual:]
  -[DAMailboxFetchMessageRequest initRequestForBodyFormat:withMessageID:withBodySizeLimit:]


DAMailboxFetchSearchResultRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *longID
 @property  NSString *folderID
 @property  NSString *serverID
 @property  int bodyFormat
 @property  int maxSize

  // instance methods
  -[DAMailboxFetchSearchResultRequest maxSize]
  -[DAMailboxFetchSearchResultRequest setFolderID:]
  -[DAMailboxFetchSearchResultRequest longID]
  -[DAMailboxFetchSearchResultRequest .cxx_destruct]
  -[DAMailboxFetchSearchResultRequest setMaxSize:]
  -[DAMailboxFetchSearchResultRequest isEqual:]
  -[DAMailboxFetchSearchResultRequest folderID]
  -[DAMailboxFetchSearchResultRequest serverID]
  -[DAMailboxFetchSearchResultRequest setBodyFormat:]
  -[DAMailboxFetchSearchResultRequest setServerID:]
  -[DAMailboxFetchSearchResultRequest setLongID:]
  -[DAMailboxFetchSearchResultRequest initRequestForBodyFormat:withLongID:withBodySizeLimit:]
  -[DAMailboxFetchSearchResultRequest initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:]
  -[DAMailboxFetchSearchResultRequest bodyFormat]


DAMessageMoveRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *message
 @property  NSString *fromFolder
 @property  NSString *toFolder
 @property  id context

  // instance methods
  -[DAMessageMoveRequest context]
  -[DAMessageMoveRequest message]
  -[DAMessageMoveRequest setMessage:]
  -[DAMessageMoveRequest .cxx_destruct]
  -[DAMessageMoveRequest setContext:]
  -[DAMessageMoveRequest isEqual:]
  -[DAMessageMoveRequest setFromFolder:]
  -[DAMessageMoveRequest setToFolder:]
  -[DAMessageMoveRequest fromFolder]
  -[DAMessageMoveRequest toFolder]
  -[DAMessageMoveRequest initMoveRequestWithMessage:fromFolder:toFolder:]


DAMessageFetchAttachmentRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *messageID
 @property  NSString *attachmentName

  // instance methods
  -[DAMessageFetchAttachmentRequest setMessageID:]
  -[DAMessageFetchAttachmentRequest messageID]
  -[DAMessageFetchAttachmentRequest .cxx_destruct]
  -[DAMessageFetchAttachmentRequest isEqual:]
  -[DAMessageFetchAttachmentRequest attachmentName]
  -[DAMessageFetchAttachmentRequest setAttachmentName:]
  -[DAMessageFetchAttachmentRequest initWithAttachmentName:andMessageServerID:]


DADraftMessageRequest : DAMailboxRequest
 @property  DAMailMessage *message
 @property  BOOL send

  // instance methods
  -[DADraftMessageRequest message]
  -[DADraftMessageRequest setMessage:]
  -[DADraftMessageRequest .cxx_destruct]
  -[DADraftMessageRequest send]
  -[DADraftMessageRequest setSend:]
  -[DADraftMessageRequest initWithRequestType:message:send:]


DAMoveResponse : NSObject /usr/lib/libSystem.B.dylib
 @property  int status
 @property  NSString *sourceID
 @property  NSString *destID
 @property  DAMessageMoveRequest *origRequest

  // instance methods
  -[DAMoveResponse destID]
  -[DAMoveResponse .cxx_destruct]
  -[DAMoveResponse sourceID]
  -[DAMoveResponse setDestID:]
  -[DAMoveResponse origRequest]
  -[DAMoveResponse initWithStatus:sourceID:destID:]
  -[DAMoveResponse setOrigRequest:]
  -[DAMoveResponse setStatus:]
  -[DAMoveResponse setSourceID:]
  -[DAMoveResponse status]


DAResolveRecipientsRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *emailAddresses
 @property  BOOL retrieveCertificates
 @property  BOOL retrieveAvailablilty
 @property  NSDate *startTime
 @property  NSDate *endTime

  // instance methods
  -[DAResolveRecipientsRequest endTime]
  -[DAResolveRecipientsRequest setEndTime:]
  -[DAResolveRecipientsRequest setEmailAddresses:]
  -[DAResolveRecipientsRequest setStartTime:]
  -[DAResolveRecipientsRequest emailAddresses]
  -[DAResolveRecipientsRequest .cxx_destruct]
  -[DAResolveRecipientsRequest isEqual:]
  -[DAResolveRecipientsRequest setRetrieveCertificates:]
  -[DAResolveRecipientsRequest setRetrieveAvailablilty:]
  -[DAResolveRecipientsRequest initWithEmailAddresses:retrieveCertificates:retrieveAvailability:withStartTime:endTime:]
  -[DAResolveRecipientsRequest retrieveCertificates]
  -[DAResolveRecipientsRequest retrieveAvailablilty]
  -[DAResolveRecipientsRequest initWithEmailAddresses:]
  -[DAResolveRecipientsRequest startTime]


DAResolvedRecipient : NSObject /usr/lib/libSystem.B.dylib
 @property  long long status
 @property  long long certificatesStatus
 @property  NSMutableDictionary *mResolvedEmailToX509Certs
 @property  long long availabilityStatus
 @property  NSString *mergedFreeBusy
 @property  NSDictionary *resolvedEmailToX509Certs

  // instance methods
  -[DAResolvedRecipient .cxx_destruct]
  -[DAResolvedRecipient setAvailabilityStatus:]
  -[DAResolvedRecipient availabilityStatus]
  -[DAResolvedRecipient mResolvedEmailToX509Certs]
  -[DAResolvedRecipient certificatesStatus]
  -[DAResolvedRecipient mergedFreeBusy]
  -[DAResolvedRecipient setMResolvedEmailToX509Certs:]
  -[DAResolvedRecipient addCert:forEmailAddress:]
  -[DAResolvedRecipient setCertificatesStatus:]
  -[DAResolvedRecipient setMergedFreeBusy:]
  -[DAResolvedRecipient setStatus:]
  -[DAResolvedRecipient resolvedEmailToX509Certs]
  -[DAResolvedRecipient status]


DAMailMessage : NSObject /usr/lib/libSystem.B.dylib <NSCoding>
  // instance methods
  -[DAMailMessage to]
  -[DAMailMessage cc]
  -[DAMailMessage from]
  -[DAMailMessage bcc]
  -[DAMailMessage clientID]
  -[DAMailMessage preview]
  -[DAMailMessage instanceID]
  -[DAMailMessage isDraft]
  -[DAMailMessage sender]
  -[DAMailMessage attachments]
  -[DAMailMessage flagged]
  -[DAMailMessage longID]
  -[DAMailMessage date]
  -[DAMailMessage importance]
  -[DAMailMessage encodeWithCoder:]
  -[DAMailMessage subject]
  -[DAMailMessage replyTo]
  -[DAMailMessage messageClass]
  -[DAMailMessage body]
  -[DAMailMessage folderID]
  -[DAMailMessage remoteID]
  -[DAMailMessage lastVerb]
  -[DAMailMessage bodySize]
  -[DAMailMessage serverID]
  -[DAMailMessage bodyType]
  -[DAMailMessage displayTo]
  -[DAMailMessage bodyTruncated]
  -[DAMailMessage threadTopic]
  -[DAMailMessage conversationIndex]
  -[DAMailMessage rfc822Data]
  -[DAMailMessage read]
  -[DAMailMessage conversationId]
  -[DAMailMessage readIsSet]
  -[DAMailMessage meetingRequestUUID]
  -[DAMailMessage verbIsSet]
  -[DAMailMessage flaggedIsSet]
  -[DAMailMessage smimeType]
  -[DAMailMessage initWithCoder:]
  -[DAMailMessage meetingRequestMetaData]
  -[DAMailMessage meetingRequestIsActionable]


DAContactsBasedAccount : NSObject /usr/lib/libSystem.B.dylib <DAContactsAccount>
 @property  CNAccount *account
 @property  BOOL markedForDeletion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DAContactsBasedAccount isGroup]
  -[DAContactsBasedAccount isContact]
  -[DAContactsBasedAccount updateSaveRequest:]
  -[DAContactsBasedAccount account]
  -[DAContactsBasedAccount .cxx_destruct]
  -[DAContactsBasedAccount legacyIdentifier]
  -[DAContactsBasedAccount identifier]
  -[DAContactsBasedAccount initWithAccount:]
  -[DAContactsBasedAccount isAccount]
  -[DAContactsBasedAccount markForDeletion]
  -[DAContactsBasedAccount isContainer]
  -[DAContactsBasedAccount markedForDeletion]
  -[DAContactsBasedAccount setMarkedForDeletion:]
  -[DAContactsBasedAccount externalIdentifier]


DATaskManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *queuedExclusiveTasks
 @property  <DATask> *activeExclusiveTask
 @property  NSMutableSet *independentTasks
 @property  NSMutableSet *heldIndependentTasks
 @property  NSMutableSet *modalHeldIndependentTasks
 @property  NSMutableArray *mQueuedTasks
 @property  <DATask> *modalHeldActiveQueuedTask
 @property  <DATask> *activeQueuedTask
 @property  NSMutableArray *queuedModalTasks
 @property  <DATask> *activeModalTask
 @property  int state
 @property  NSTimer *managerIdleTimer
 @property  NSTimer *userInitiatedSyncTimer
 @property  NSTimer *xpcTransactionTimer
 @property  NSTimer *powerLogIdleTimer
 @property  BOOL didLogSyncStart
 @property  DAAccount *account
 @property  NSArray *queuedTasks
 @property  NSArray *allTasks
 @property  NSString *powerAssertionGroupID

  // instance methods
  -[DATaskManager useSSL]
  -[DATaskManager user]
  -[DATaskManager stateString]
  -[DATaskManager queuedExclusiveTasks]
  -[DATaskManager activeExclusiveTask]
  -[DATaskManager independentTasks]
  -[DATaskManager activeQueuedTask]
  -[DATaskManager modalHeldActiveQueuedTask]
  -[DATaskManager _logSyncEnd]
  -[DATaskManager _populateVersionDescriptions]
  -[DATaskManager submitExclusiveTask:toFrontOfQueue:]
  -[DATaskManager xpcTransactionTimer]
  -[DATaskManager userAgent]
  -[DATaskManager setXpcTransactionTimer:]
  -[DATaskManager setActiveExclusiveTask:]
  -[DATaskManager _schedulePerformTask:]
  -[DATaskManager _makeStateTransition]
  -[DATaskManager _requestCancelTasksWithReason:]
  -[DATaskManager taskManagerDidAddTask:]
  -[DATaskManager heldIndependentTasks]
  -[DATaskManager setActiveQueuedTask:]
  -[DATaskManager cancelTask:withUnderlyingError:]
  -[DATaskManager managerIdleTimer]
  -[DATaskManager setManagerIdleTimer:]
  -[DATaskManager userInitiatedSyncTimer]
  -[DATaskManager setUserInitiatedSyncTimer:]
  -[DATaskManager powerLogIdleTimer]
  -[DATaskManager setPowerLogIdleTimer:]
  -[DATaskManager _cancelTasksWithReason:]
  -[DATaskManager modalHeldIndependentTasks]
  -[DATaskManager activeModalTask]
  -[DATaskManager queuedModalTasks]
  -[DATaskManager _powerLogInfoDictionary]
  -[DATaskManager _taskForcesNetworking:]
  -[DATaskManager _taskInQueueForcesNetworkConnection:]
  -[DATaskManager taskManagerWillRemoveTask:]
  -[DATaskManager _releasePowerAssertionForTask:]
  -[DATaskManager setModalHeldActiveQueuedTask:]
  -[DATaskManager _performTask:]
  -[DATaskManager _startModal:]
  -[DATaskManager password]
  -[DATaskManager setActiveModalTask:]
  -[DATaskManager _reactivateHeldTasks]
  -[DATaskManager _scheduleStartModal:]
  -[DATaskManager _hasTasksForcingNetworkConnection]
  -[DATaskManager _useOpportunisticSocketsAgain]
  -[DATaskManager _hasTasksIndicatingARunningSync]
  -[DATaskManager _clearUserInitiatedSyncTimer]
  -[DATaskManager _endXpcTransaction]
  -[DATaskManager didLogSyncStart]
  -[DATaskManager cancelTasksDueToOnPowerMode]
  -[DATaskManager _retainPowerAssertionForTask:]
  -[DATaskManager _scheduleSelector:withArgument:]
  -[DATaskManager init]
  -[DATaskManager isShutdown]
  -[DATaskManager shutdown]
  -[DATaskManager powerAssertionGroupID]
  -[DATaskManager queuedTasks]
  -[DATaskManager _useFakeDescriptions]
  -[DATaskManager OAuth2Token]
  -[DATaskManager submitExclusiveTask:]
  -[DATaskManager submitIndependentTask:]
  -[DATaskManager submitQueuedTask:]
  -[DATaskManager taskDidFinish:]
  -[DATaskManager taskRequestModal:]
  -[DATaskManager taskEndModal:]
  -[DATaskManager taskIsModal:]
  -[DATaskManager setPowerAssertionGroupID:]
  -[DATaskManager setQueuedExclusiveTasks:]
  -[DATaskManager setIndependentTasks:]
  -[DATaskManager setMQueuedTasks:]
  -[DATaskManager setHeldIndependentTasks:]
  -[DATaskManager setModalHeldIndependentTasks:]
  -[DATaskManager setQueuedModalTasks:]
  -[DATaskManager setDidLogSyncStart:]
  -[DATaskManager identityPersist]
  -[DATaskManager cancelAllTasks]
  -[DATaskManager deviceType]
  -[DATaskManager setAccount:]
  -[DATaskManager dealloc]
  -[DATaskManager account]
  -[DATaskManager setState:]
  -[DATaskManager .cxx_destruct]
  -[DATaskManager port]
  -[DATaskManager shouldCancelTaskDueToOnPowerFetchMode]
  -[DATaskManager server]
  -[DATaskManager accountPersistentUUID]
  -[DATaskManager allTasks]
  -[DATaskManager cancelTask:]
  -[DATaskManager _version]
  -[DATaskManager initWithAccount:]
  -[DATaskManager state]
  -[DATaskManager mQueuedTasks]
  -[DATaskManager accountID]


DALocalDBHelper : NSObject /usr/lib/libSystem.B.dylib
 @property  ^v abDB
 @property  NSString *familyDelegateAltDSID
 @property  NSString *familyDelegateACAccountID
 @property  NSMutableArray *saveRequests
 @property  int abConnectionCount
 @property  CNContactStore *contactStore
 @property  ^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@B} calDB
 @property  int calConnectionCount
 @property  NSString *clientIdentifier
 @property  NoteContext *noteDB
 @property  int noteConnectionCount
 @property  @? calUnitTestCallbackBlock

  // class methods
  +[DALocalDBHelper abSetTestABDBDir:]
  +[DALocalDBHelper abTestABDBDir]
  +[DALocalDBHelper calSetTestCalDBDir:]
  +[DALocalDBHelper calTestCalDBDir]
  +[DALocalDBHelper sharedInstanceForAccountType:creatingClass:]
  +[DALocalDBHelper os_log]

  // instance methods
  -[DALocalDBHelper setContactStore:]
  -[DALocalDBHelper calSaveDB]
  -[DALocalDBHelper init]
  -[DALocalDBHelper _registerForAddressBookYieldNotifications]
  -[DALocalDBHelper executeAllSaveRequests]
  -[DALocalDBHelper clientIdentifier]
  -[DALocalDBHelper abConnectionCount]
  -[DALocalDBHelper removeDelegateDatabasesNotMatchingAltDSIDs:]
  -[DALocalDBHelper calOpenDBWithClientIdentifier:]
  -[DALocalDBHelper initWithContactsFamilyDelegateAltDSID:familyDelegateACAccountID:]
  -[DALocalDBHelper abValidateDefaultSource]
  -[DALocalDBHelper abDefaultAccountInfoSuitableForLogging]
  -[DALocalDBHelper familyDelegateAltDSID]
  -[DALocalDBHelper setFamilyDelegateAltDSID:]
  -[DALocalDBHelper familyDelegateACAccountID]
  -[DALocalDBHelper setFamilyDelegateACAccountID:]
  -[DALocalDBHelper abOpenDBWithClientIdentifier:]
  -[DALocalDBHelper calOpenDBAsGenericClient]
  -[DALocalDBHelper contactStore]
  -[DALocalDBHelper dealloc]
  -[DALocalDBHelper _registerForCalendarYieldNotifications]
  -[DALocalDBHelper .cxx_destruct]
  -[DALocalDBHelper setAbDB:]
  -[DALocalDBHelper calUnitTestCallbackBlock]
  -[DALocalDBHelper calClearSuperfluousChanges]
  -[DALocalDBHelper calDB]
  -[DALocalDBHelper abDBThrowOnNil:]
  -[DALocalDBHelper saveRequests]
  -[DALocalDBHelper noteCloseDBAndSave:]
  -[DALocalDBHelper setCalConnectionCount:]
  -[DALocalDBHelper calCloseDBAndSave:]
  -[DALocalDBHelper changeTrackingID]
  -[DALocalDBHelper abSaveDB]
  -[DALocalDBHelper calSaveDBAndFlushCaches]
  -[DALocalDBHelper _abOpenDBWithClientIdentifier:]
  -[DALocalDBHelper addSaveRequest:]
  -[DALocalDBHelper noteOpenDB]
  -[DALocalDBHelper abConstraintPlistPath]
  -[DALocalDBHelper setNoteDB:]
  -[DALocalDBHelper calUnitTestsSetCallbackBlockForSave:]
  -[DALocalDBHelper setCalDB:]
  -[DALocalDBHelper useContacts]
  -[DALocalDBHelper calConnectionCount]
  -[DALocalDBHelper abOpenDBAsGenericClient]
  -[DALocalDBHelper abDB]
  -[DALocalDBHelper setNoteConnectionCount:]
  -[DALocalDBHelper abProcessAddedRecords]
  -[DALocalDBHelper noteDB]
  -[DALocalDBHelper abProcessAddedImages]
  -[DALocalDBHelper setClientIdentifier:]
  -[DALocalDBHelper setSaveRequests:]
  -[DALocalDBHelper setAbConnectionCount:]
  -[DALocalDBHelper noteSaveDB]
  -[DALocalDBHelper setCalUnitTestCallbackBlock:]
  -[DALocalDBHelper _calOpenDBWithClientIdentifier:]
  -[DALocalDBHelper noteConnectionCount]
  -[DALocalDBHelper abCloseDBAndSave:]


DAPowerAssertionManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSCountedSet *contexts
 @property  NSMapTable *groupIdentifierToContexts
 @property  NSMapTable *contextToGroupIdentifier
 @property  NSMutableSet *heldAsideGroupIdentifiers
 @property  NSCountedSet *heldAsideContexts
 @property  NSMapTable *contextToPowerAssertionRef

  // class methods
  +[DAPowerAssertionManager vendDaemons:]
  +[DAPowerAssertionManager sharedPowerAssertionManager]

  // instance methods
  -[DAPowerAssertionManager stateString]
  -[DAPowerAssertionManager init]
  -[DAPowerAssertionManager retainPowerAssertion:withGroupIdentifier:]
  -[DAPowerAssertionManager setGroupIdentifierToContexts:]
  -[DAPowerAssertionManager setContextToGroupIdentifier:]
  -[DAPowerAssertionManager setHeldAsideContexts:]
  -[DAPowerAssertionManager setHeldAsideGroupIdentifiers:]
  -[DAPowerAssertionManager setContextToPowerAssertionRef:]
  -[DAPowerAssertionManager heldAsideContexts]
  -[DAPowerAssertionManager heldAsideGroupIdentifiers]
  -[DAPowerAssertionManager groupIdentifierToContexts]
  -[DAPowerAssertionManager contextToGroupIdentifier]
  -[DAPowerAssertionManager _retainAssertionForContext:]
  -[DAPowerAssertionManager _releaseAssertionForContext:]
  -[DAPowerAssertionManager contextToPowerAssertionRef]
  -[DAPowerAssertionManager powerAssertionRetainCount:]
  -[DAPowerAssertionManager .cxx_destruct]
  -[DAPowerAssertionManager releasePowerAssertion:]
  -[DAPowerAssertionManager contexts]
  -[DAPowerAssertionManager dropPowerAssertionsForGroupIdentifier:]
  -[DAPowerAssertionManager reattainPowerAssertionsForGroupIdentifier:]
  -[DAPowerAssertionManager setContexts:]


_DAABLegacyContainerProvider : DAContainerProvider
 @property  ^v addressBook

  // instance methods
  -[_DAABLegacyContainerProvider allContainers]
  -[_DAABLegacyContainerProvider containerWithExternalIdentifier:forAccountWithExternalIdentifier:]
  -[_DAABLegacyContainerProvider setDefaultContainer:withLocalDBHelper:onlyIfNotSet:]
  -[_DAABLegacyContainerProvider dealloc]
  -[_DAABLegacyContainerProvider allContainersForAccountWithExternalIdentifier:]
  -[_DAABLegacyContainerProvider createNewContainerWithType:name:externalIdentifier:constraintsPath:syncData:contentReadonly:propertiesReadonly:forAccount:]
  -[_DAABLegacyContainerProvider mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords:]
  -[_DAABLegacyContainerProvider setLastSyncDateForContainer:]
  -[_DAABLegacyContainerProvider initWithAddressBook:]
  -[_DAABLegacyContainerProvider addressBook]


ASAccountActor : DADisableableObject /System/Library/Frameworks/Foundation.framework/Foundation <ASAccountActorMessages>
  // instance methods
  -[ASAccountActor shutdown]
  -[ASAccountActor cancelTaskWithID:]
  -[ASAccountActor setAccount:]
  -[ASAccountActor generatesBulletins]
  -[ASAccountActor performMailboxRequest:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:]
  -[ASAccountActor supportsSmartForwardReply]
  -[ASAccountActor foldersTag]
  -[ASAccountActor customSignature]
  -[ASAccountActor setCustomSignature:]
  -[ASAccountActor setMailNumberOfPastDaysToSync:]
  -[ASAccountActor setGeneratesBulletins:]
  -[ASAccountActor monitorFoldersForUpdates:]
  -[ASAccountActor folderIDsThatExternalClientsCareAboutWithTag:]
  -[ASAccountActor sendSmartMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:replaceOriginalMime:isUserRequested:consumer:context:]
  -[ASAccountActor performMailboxRequest:mailbox:previousTag:isUserRequested:consumer:]
  -[ASAccountActor performMailboxRequests:mailbox:previousTag:isUserRequested:consumer:]
  -[ASAccountActor _newASPolicyKeyNotification:]
  -[ASAccountActor _daemonDiedNotification:]
  -[ASAccountActor _folderUpdatedNotification:]
  -[ASAccountActor _folderHierarchyChanged]
  -[ASAccountActor _foldersThatExternalClientsCareAboutChanged]
  -[ASAccountActor _accountPasswordChanged]
  -[ASAccountActor mailNumberOfPastDaysToSync]
  -[ASAccountActor startup]
  -[ASAccountActor cancelAllSearchQueries]
  -[ASAccountActor searchQueriesRunning]
  -[ASAccountActor sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:]
  -[ASAccountActor inboxFolder]
  -[ASAccountActor sentItemsFolder]
  -[ASAccountActor deletedItemsFolder]
  -[ASAccountActor draftsFolder]
  -[ASAccountActor initWithDAAccount:]
  -[ASAccountActor performFolderChange:isUserRequested:]
  -[ASAccountActor encryptionIdentityPersistentReference]
  -[ASAccountActor supportsMailboxSearch]
  -[ASAccountActor supportsEmailFlagging]
  -[ASAccountActor performMailboxRequests:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:]
  -[ASAccountActor supportsDraftFolderSync]
  -[ASAccountActor supportsUniqueServerId]
  -[ASAccountActor reattemptInvitationLinkageForMetaData:inFolderWithId:]
  -[ASAccountActor unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:]
  -[ASAccountActor folderIDsThatExternalClientsCareAboutForDataclasses:withTag:]
  -[ASAccountActor monitorFoldersForUpdates:persistent:]
  -[ASAccountActor stopMonitoringAllFolders]
  -[ASAccountActor supportsConversations]
  -[ASAccountActor performSearchQuery:]
  -[ASAccountActor cancelSearchQuery:]
  -[ASAccountActor stopMonitoringFoldersForUpdates:]
  -[ASAccountActor setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:]
  -[ASAccountActor signingIdentityPersistentReference]
  -[ASAccountActor setSigningIdentityPersistentReference:]
  -[ASAccountActor setEncryptionIdentityPersistentReference:]
  -[ASAccountActor performResolveRecipientsRequest:consumer:]
  -[ASAccountActor performFetchMessageSearchResultRequests:consumer:]
  -[ASAccountActor performFetchAttachmentRequest:consumer:]
  -[ASAccountActor mailboxes]
  -[ASAccountActor performMoveRequests:consumer:]


DAAccountUpgrader : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DAAccountUpgrader _upgradeDAAccounts]
  +[DAAccountUpgrader _writeDeviceSpecificID]
  +[DAAccountUpgrader _moveExchangeCredentialsToAppleAccessGroup]
  +[DAAccountUpgrader _updateFacebookAccountAuthenticationTypes]
  +[DAAccountUpgrader _notifyDaHolidaySubCalAccount]
  +[DAAccountUpgrader upgradeAccounts:]


DAContainerProvider : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DAContainerProvider providerWithContactStore:]
  +[DAContainerProvider providerWithAddressBook:]

  // instance methods
  -[DAContainerProvider allContainers]
  -[DAContainerProvider containerWithExternalIdentifier:forAccountWithExternalIdentifier:]
  -[DAContainerProvider setDefaultContainer:withLocalDBHelper:onlyIfNotSet:]
  -[DAContainerProvider allContainersForAccountWithExternalIdentifier:]
  -[DAContainerProvider createNewContainerWithType:name:externalIdentifier:constraintsPath:syncData:contentReadonly:propertiesReadonly:forAccount:]
  -[DAContainerProvider mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords:]
  -[DAContainerProvider setLastSyncDateForContainer:]


DADataHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *changeTrackingID
 @property  ^v container

  // class methods
  +[DADataHandler newDataHandlerForDataclass:container:changeTrackingID:]

  // instance methods
  -[DADataHandler dealloc]
  -[DADataHandler .cxx_destruct]
  -[DADataHandler openDB]
  -[DADataHandler container]
  -[DADataHandler setContainer:]
  -[DADataHandler initWithContainer:changeTrackingID:]
  -[DADataHandler getIdFromLocalObject:]
  -[DADataHandler copyLocalObjectFromId:]
  -[DADataHandler saveContainer]
  -[DADataHandler copyOfAllLocalObjectsInContainer]
  -[DADataHandler drainContainer]
  -[DADataHandler wipeServerIds]
  -[DADataHandler drainSuperfluousChanges]
  -[DADataHandler closeDBAndSave:]
  -[DADataHandler getDAObjectWithLocalItem:serverId:account:]
  -[DADataHandler getDAExceptionObjectWithLocalItem:originalEvent:account:]
  -[DADataHandler setChangeTrackingID:]
  -[DADataHandler changeTrackingID]
  -[DADataHandler dataclass]


_DAContactsContainerProvider : DAContainerProvider
 @property  CNContactStore *contactStore

  // instance methods
  -[_DAContactsContainerProvider initWithContactStore:]
  -[_DAContactsContainerProvider allContainers]
  -[_DAContactsContainerProvider contactStore]
  -[_DAContactsContainerProvider containerWithExternalIdentifier:forAccountWithExternalIdentifier:]
  -[_DAContactsContainerProvider setDefaultContainer:withLocalDBHelper:onlyIfNotSet:]
  -[_DAContactsContainerProvider allContainersForAccountWithExternalIdentifier:]
  -[_DAContactsContainerProvider createNewContainerWithType:name:externalIdentifier:constraintsPath:syncData:contentReadonly:propertiesReadonly:forAccount:]
  -[_DAContactsContainerProvider setLastSyncDateForContainer:]
  -[_DAContactsContainerProvider .cxx_destruct]


DAStoreSyncStatusUpdater : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DAStoreSyncStatusUpdater _eventStore]
  +[DAStoreSyncStatusUpdater resetSyncStatusForAllStoresIfNecessary]
  +[DAStoreSyncStatusUpdater syncEndedForCalendarWithExternalID:withError:]
  +[DAStoreSyncStatusUpdater _updateStatusForCalendar:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:]
  +[DAStoreSyncStatusUpdater _ekAccountErrorFromDAErrorCode:]
  +[DAStoreSyncStatusUpdater _updateStatusForCalendarWithExternalID:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:]
  +[DAStoreSyncStatusUpdater _ekAccountErrorFromSubCalErrorCode:]
  +[DAStoreSyncStatusUpdater _codeForLastSyncError:userInfo:]
  +[DAStoreSyncStatusUpdater _updateStatusForSource:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:]
  +[DAStoreSyncStatusUpdater _mappedAccountErrorFromError:]
  +[DAStoreSyncStatusUpdater _eventStorePurger]
  +[DAStoreSyncStatusUpdater _ekAccountErrorFromURLError:]
  +[DAStoreSyncStatusUpdater _accountErrorCodeForNSError:]
  +[DAStoreSyncStatusUpdater _updateStatusForStoreWithExternalID:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:]
  +[DAStoreSyncStatusUpdater syncStartedForCalendarWithExternalID:]
  +[DAStoreSyncStatusUpdater resetSyncStatusIfNecessaryForStoresOfType:]
  +[DAStoreSyncStatusUpdater _ekAccountErrorFromCoreDAVErrorCode:]
  +[DAStoreSyncStatusUpdater _ekAccountErrorFromCoreDAVHTTPStatusCode:]
  +[DAStoreSyncStatusUpdater syncEndedForStoreWithExternalID:withError:]
  +[DAStoreSyncStatusUpdater syncStartedForStoreWithExternalID:]
  +[DAStoreSyncStatusUpdater _isCanceledError:]
  +[DAStoreSyncStatusUpdater _ekAccountErrorFromDAValidationErrorCode:]


DALocalDBWatcher : NSObject /usr/lib/libSystem.B.dylib
 @property  int lastSavedCalSequenceNumber

  // class methods
  +[DALocalDBWatcher sharedDBWatcher]

  // instance methods
  -[DALocalDBWatcher init]
  -[DALocalDBWatcher lastSavedCalSequenceNumber]
  -[DALocalDBWatcher setLastSavedCalSequenceNumber:]
  -[DALocalDBWatcher noteCalDBDirChanged]
  -[DALocalDBWatcher dealloc]
  -[DALocalDBWatcher .cxx_destruct]
  -[DALocalDBWatcher _handleCalChangeNotification]
  -[DALocalDBWatcher _notesChangedExternally]
  -[DALocalDBWatcher registerConcernedCalParty:withChangedBlock:]
  -[DALocalDBWatcher removeConcernedCalParty:]
  -[DALocalDBWatcher registerConcernedNoteParty:withChangedBlock:]
  -[DALocalDBWatcher removeConcernedNoteParty:]
  -[DALocalDBWatcher didReceiveDarwinNotification:]


DARunLoopRegistry : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DARunLoopRegistry sharedRunLoop]


DAWaiterWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  <DADataclassLockWatcher> *waiter
 @property  @? completionHandler
 @property  long long dataclasses
 @property  int waiterNum

  // instance methods
  -[DAWaiterWrapper waiter]
  -[DAWaiterWrapper init]
  -[DAWaiterWrapper dataclasses]
  -[DAWaiterWrapper .cxx_destruct]
  -[DAWaiterWrapper setWaiter:]
  -[DAWaiterWrapper setDataclasses:]
  -[DAWaiterWrapper waiterNum]
  -[DAWaiterWrapper completionHandler]
  -[DAWaiterWrapper setCompletionHandler:]


DALocalDBGateKeeper : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL claimedOwnershipOfContacts
 @property  <DADataclassLockWatcher> *contactsLockHolder
 @property  NSMutableArray *contactsWaiters
 @property  NSMutableSet *waiterIDsExpectingContactsLock
 @property  BOOL claimedOwnershipOfEvents
 @property  <DADataclassLockWatcher> *eventsLockHolder
 @property  NSMutableArray *eventsWaiters
 @property  NSMutableSet *waiterIDsExpectingEventsLock
 @property  BOOL claimedOwnershipOfNotes
 @property  <DADataclassLockWatcher> *notesLockHolder
 @property  NSMutableArray *notesWaiters
 @property  NSMutableSet *waiterIDsExpectingNotesLock
 @property  NSString *unitTestHackRunLoopMode

  // class methods
  +[DALocalDBGateKeeper sharedGateKeeper]

  // instance methods
  -[DALocalDBGateKeeper stateString]
  -[DALocalDBGateKeeper init]
  -[DALocalDBGateKeeper claimedOwnershipOfDataclasses:]
  -[DALocalDBGateKeeper dealloc]
  -[DALocalDBGateKeeper .cxx_destruct]
  -[DALocalDBGateKeeper setEventsWaiters:]
  -[DALocalDBGateKeeper setWaiterIDsExpectingEventsLock:]
  -[DALocalDBGateKeeper setContactsWaiters:]
  -[DALocalDBGateKeeper setNotesWaiters:]
  -[DALocalDBGateKeeper setWaiterIDsExpectingContactsLock:]
  -[DALocalDBGateKeeper setWaiterIDsExpectingNotesLock:]
  -[DALocalDBGateKeeper setContactsLockHolder:]
  -[DALocalDBGateKeeper setEventsLockHolder:]
  -[DALocalDBGateKeeper notesWaiters]
  -[DALocalDBGateKeeper setNotesLockHolder:]
  -[DALocalDBGateKeeper _canWakenWaiter:]
  -[DALocalDBGateKeeper _abortWaiterForWrappers:]
  -[DALocalDBGateKeeper _setUnitTestHackRunLoopMode:]
  -[DALocalDBGateKeeper _notifyWaitersForDataclasses:]
  -[DALocalDBGateKeeper _registerWaiter:forDataclassLocks:preempt:completionHandler:]
  -[DALocalDBGateKeeper relinquishLocksForWaiter:dataclasses:moreComing:]
  -[DALocalDBGateKeeper _sendAllClearNotifications]
  -[DALocalDBGateKeeper registerPreemptiveWaiter:forDataclassLocks:completionHandler:]
  -[DALocalDBGateKeeper registerWaiter:forDataclassLocks:completionHandler:]
  -[DALocalDBGateKeeper unregisterWaiterForDataclassLocks:]
  -[DALocalDBGateKeeper claimedOwnershipOfContacts]
  -[DALocalDBGateKeeper setClaimedOwnershipOfContacts:]
  -[DALocalDBGateKeeper contactsLockHolder]
  -[DALocalDBGateKeeper contactsWaiters]
  -[DALocalDBGateKeeper waiterIDsExpectingContactsLock]
  -[DALocalDBGateKeeper claimedOwnershipOfEvents]
  -[DALocalDBGateKeeper setClaimedOwnershipOfEvents:]
  -[DALocalDBGateKeeper eventsLockHolder]
  -[DALocalDBGateKeeper eventsWaiters]
  -[DALocalDBGateKeeper waiterIDsExpectingEventsLock]
  -[DALocalDBGateKeeper notesLockHolder]
  -[DALocalDBGateKeeper claimedOwnershipOfNotes]
  -[DALocalDBGateKeeper setClaimedOwnershipOfNotes:]
  -[DALocalDBGateKeeper waiterIDsExpectingNotesLock]
  -[DALocalDBGateKeeper unitTestHackRunLoopMode]
  -[DALocalDBGateKeeper setUnitTestHackRunLoopMode:]


_DAContactsAccountContactsProvider : DAContactsAccountProvider
 @property  CNContactStore *contactStore

  // instance methods
  -[_DAContactsAccountContactsProvider initWithContactStore:]
  -[_DAContactsAccountContactsProvider allAccounts]
  -[_DAContactsAccountContactsProvider contactStore]
  -[_DAContactsAccountContactsProvider fetchedAccountWithExternalIdentifier:]
  -[_DAContactsAccountContactsProvider .cxx_destruct]
  -[_DAContactsAccountContactsProvider accountByCreatingAccountWithExternalIdentifier:]
  -[_DAContactsAccountContactsProvider accountForContainerWithIdentifier:]


DATransaction : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *label
 @property  NSString *transactionId

  // instance methods
  -[DATransaction init]
  -[DATransaction initWithLabel:]
  -[DATransaction dealloc]
  -[DATransaction .cxx_destruct]
  -[DATransaction label]
  -[DATransaction transactionId]


DAAggDReporter : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DAAggDReporter startDailyAggDReporter]
  +[DAAggDReporter endDailyAggDReporter]
  +[DAAggDReporter reportActiveExchangeOAuthAccountsCount]


DAUserNotificationUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DAUserNotificationUtilities showUserNotification:groupIdentifier:callbackQueue:sourceRunLoop:completionBlock:]


DAUserNotificationInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *groupIdentifier
 @property  @? handler
 @property  NSObject<OS_dispatch_queue> *callbackQueue

  // instance methods
  -[DAUserNotificationInfo setGroupIdentifier:]
  -[DAUserNotificationInfo groupIdentifier]
  -[DAUserNotificationInfo callbackQueue]
  -[DAUserNotificationInfo setCallbackQueue:]
  -[DAUserNotificationInfo .cxx_destruct]
  -[DAUserNotificationInfo handler]
  -[DAUserNotificationInfo setHandler:]


DAiCalendarLogger : NSObject /usr/lib/libSystem.B.dylib <ICSLoggingDelegate>
  // class methods
  +[DAiCalendarLogger sharedLogger]

  // instance methods
  -[DAiCalendarLogger logICSMessage:atLevel:]
  -[DAiCalendarLogger registerWithiCalendar]


DAContactsAccountProvider : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DAContactsAccountProvider providerWithContactStore:]
  +[DAContactsAccountProvider providerWithAddressBook:]

  // instance methods
  -[DAContactsAccountProvider allAccounts]
  -[DAContactsAccountProvider fetchedAccountWithExternalIdentifier:]
  -[DAContactsAccountProvider accountByCreatingAccountWithExternalIdentifier:]
  -[DAContactsAccountProvider accountForContainerWithIdentifier:]


DATrustHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  <DATrustHandlerDelegate> *delegate
 @property  NSMutableDictionary *haveWarnedAboutCertDict

  // instance methods
  -[DATrustHandler initWithDelegate:]
  -[DATrustHandler resetCertWarnings]
  -[DATrustHandler .cxx_destruct]
  -[DATrustHandler handleTrustChallenge:forAccount:]
  -[DATrustHandler handleTrustChallenge:forAccount:completionHandler:]
  -[DATrustHandler haveWarnedAboutCert:forHost:]
  -[DATrustHandler _serverSuffixesToAlwaysFail]
  -[DATrustHandler setHaveWarnedAboutCert:forHost:]
  -[DATrustHandler handleTrust:forHost:forAccount:withCompletionBlock:]
  -[DATrustHandler _actionForTrust:host:service:]
  -[DATrustHandler haveWarnedAboutCertDict]
  -[DATrustHandler setHaveWarnedAboutCertDict:]
  -[DATrustHandler setDelegate:]
  -[DATrustHandler delegate]


DAABLegacyAccount : NSObject /usr/lib/libSystem.B.dylib <DAContactsAccount>
 @property  ^v account
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DAABLegacyAccount isGroup]
  -[DAABLegacyAccount isContact]
  -[DAABLegacyAccount dealloc]
  -[DAABLegacyAccount updateSaveRequest:]
  -[DAABLegacyAccount account]
  -[DAABLegacyAccount legacyIdentifier]
  -[DAABLegacyAccount identifier]
  -[DAABLegacyAccount initWithABAccout:]
  -[DAABLegacyAccount isAccount]
  -[DAABLegacyAccount markForDeletion]
  -[DAABLegacyAccount isContainer]
  -[DAABLegacyAccount externalIdentifier]


DATrafficLogger : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *filename

  // class methods
  +[DATrafficLogger enabled]

  // instance methods
  -[DATrafficLogger filename]
  -[DATrafficLogger .cxx_destruct]
  -[DATrafficLogger setFilename:]
  -[DATrafficLogger _ensureCustomLogFile]
  -[DATrafficLogger initWithFilename:]
  -[DATrafficLogger logSnippet:]
  -[DATrafficLogger slurpAndRemoveLookasideFile:prefixString:suffixString:]


DAPriorityRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  long long refreshDataclasses
 @property  long long UIDataclasses

  // instance methods
  -[DAPriorityRequest refreshDataclasses]
  -[DAPriorityRequest setRefreshDataclasses:]
  -[DAPriorityRequest UIDataclasses]
  -[DAPriorityRequest setUIDataclasses:]


DAPriorityManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMapTable *clientsToPriorityRequests
 @property  BKSApplicationStateMonitor *appStateMonitor
 @property  NSMutableDictionary *cachedAppState
 @property  long long foregroundDataclasses
 @property  int currentPriority

  // class methods
  +[DAPriorityManager sharedManager]
  +[DAPriorityManager vendPriorityManagers]

  // instance methods
  -[DAPriorityManager stateString]
  -[DAPriorityManager init]
  -[DAPriorityManager _setForegroundDataclasses:]
  -[DAPriorityManager dealloc]
  -[DAPriorityManager requestPriority:forClient:dataclasses:]
  -[DAPriorityManager appIDsToDataclasses]
  -[DAPriorityManager .cxx_destruct]
  -[DAPriorityManager cachedAppState]
  -[DAPriorityManager appStateMonitor]
  -[DAPriorityManager _updateForegroundDataclasses]
  -[DAPriorityManager setForegroundDataclasses:]
  -[DAPriorityManager _recalculatePriority]
  -[DAPriorityManager setAppStateMonitor:]
  -[DAPriorityManager setCachedAppState:]
  -[DAPriorityManager setClientsToPriorityRequests:]
  -[DAPriorityManager _setNewPriority]
  -[DAPriorityManager foregroundDataclasses]
  -[DAPriorityManager clientsToPriorityRequests]
  -[DAPriorityManager currentPriority]
  -[DAPriorityManager bumpDataclassesToUIPriority:]
  -[DAPriorityManager _applicationStateChanged:]


DAContactsContainer : NSObject /usr/lib/libSystem.B.dylib <DAContainer>
 @property  CNMutableContainer *mutableContainer
 @property  BOOL markedForDeletion
 @property  BOOL markedAsDefault
 @property  BOOL guardianRestricted
 @property  BOOL guardianStateDirty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DAContactsContainer isGroup]
  -[DAContactsContainer isContact]
  -[DAContactsContainer cTag]
  -[DAContactsContainer accountIdentifier]
  -[DAContactsContainer updateSaveRequest:]
  -[DAContactsContainer setType:]
  -[DAContactsContainer .cxx_destruct]
  -[DAContactsContainer name]
  -[DAContactsContainer identifier]
  -[DAContactsContainer syncTag]
  -[DAContactsContainer initWithCNContainer:]
  -[DAContactsContainer type]
  -[DAContactsContainer mutableContainer]
  -[DAContactsContainer setMarkedAsDefault:]
  -[DAContactsContainer markedAsDefault]
  -[DAContactsContainer isAccount]
  -[DAContactsContainer setSyncTag:]
  -[DAContactsContainer markAsDefault]
  -[DAContactsContainer setGuardianRestricted:]
  -[DAContactsContainer isGuardianRestricted]
  -[DAContactsContainer syncData]
  -[DAContactsContainer meContactIdentifier]
  -[DAContactsContainer setMeContactIdentifier:]
  -[DAContactsContainer isContentReadonly]
  -[DAContactsContainer setContentReadonly:]
  -[DAContactsContainer arePropertiesReadonly]
  -[DAContactsContainer setArePropertiesReadonly:]
  -[DAContactsContainer isSearchContainer]
  -[DAContactsContainer asContainer]
  -[DAContactsContainer setSyncData:]
  -[DAContactsContainer markForDeletion]
  -[DAContactsContainer setExternalIdentifier:]
  -[DAContactsContainer isContainer]
  -[DAContactsContainer constraintsPath]
  -[DAContactsContainer setCTag:]
  -[DAContactsContainer asSource]
  -[DAContactsContainer setConstraintsPath:]
  -[DAContactsContainer isGuardianStateDirty]
  -[DAContactsContainer setGuardianStateDirty:]
  -[DAContactsContainer isLocal]
  -[DAContactsContainer markedForDeletion]
  -[DAContactsContainer setMarkedForDeletion:]
  -[DAContactsContainer externalIdentifier]
  -[DAContactsContainer setName:]
  -[DAContactsContainer setAccountIdentifier:]


DABabysitter : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *buildVersion
 @property  NSMutableDictionary *refreshingWaiters
 @property  NSMutableDictionary *failedWaiters
 @property  NSMutableDictionary *restrictedWaiters

  // class methods
  +[DABabysitter sharedBabysitter]

  // instance methods
  -[DABabysitter setBuildVersion:]
  -[DABabysitter init]
  -[DABabysitter giveAccountWithIDAnotherChance:]
  -[DABabysitter accountWithIDShouldContinue:]
  -[DABabysitter dealloc]
  -[DABabysitter buildVersion]
  -[DABabysitter .cxx_destruct]
  -[DABabysitter _init]
  -[DABabysitter _reloadBabysitterProperties]
  -[DABabysitter _decrementRefreshCountForWaiter:forOperationWithName:]
  -[DABabysitter accountShouldContinue:]
  -[DABabysitter _incrementRefreshCountForWaiterID:operationName:]
  -[DABabysitter _decrementRefreshCountForWaiterID:operationName:]
  -[DABabysitter registerAccount:forOperationWithName:]
  -[DABabysitter refreshingWaiters]
  -[DABabysitter failedWaiters]
  -[DABabysitter unregisterAccount:forOperationWithName:]
  -[DABabysitter setRefreshingWaiters:]
  -[DABabysitter setFailedWaiters:]
  -[DABabysitter restrictedWaiters]
  -[DABabysitter setRestrictedWaiters:]


DAActivity : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[DAActivity dealloc]
  -[DAActivity .cxx_destruct]
  -[DAActivity initWithAccount:]


_DAContactsAccountABLegacyProvider : DAContactsAccountProvider
 @property  ^v addressBook

  // instance methods
  -[_DAContactsAccountABLegacyProvider allAccounts]
  -[_DAContactsAccountABLegacyProvider dealloc]
  -[_DAContactsAccountABLegacyProvider fetchedAccountWithExternalIdentifier:]
  -[_DAContactsAccountABLegacyProvider initWithAddressBook:]
  -[_DAContactsAccountABLegacyProvider accountByCreatingAccountWithExternalIdentifier:]
  -[_DAContactsAccountABLegacyProvider accountForContainerWithIdentifier:]
  -[_DAContactsAccountABLegacyProvider addressBook]


(ChillOutARC)
	// instance methods
	-[(ChillOutARC) da_performSelectorThatDoesntAffectRetainCount:withObject:]
	-[(ChillOutARC) da_addNullRunLoopSourceAndPerformSelector:withObject:afterDelay:inModes:]

(DAKeychainAdditions)
	// class methods
	+[(DAKeychainAdditions) da_newGUID]
	+[(DAKeychainAdditions) da_new64ByteGUID]

	// instance methods
	-[(DAKeychainAdditions) da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:]
	-[(DAKeychainAdditions) da_appendSlashIfNeeded]
	-[(DAKeychainAdditions) da_stringByAddingPercentEscapesForUsername]
	-[(DAKeychainAdditions) stringByURLQuoting]
	-[(DAKeychainAdditions) da_stringByRemovingPercentEscapesForUsername]
	-[(DAKeychainAdditions) da_removeSlashIfNeeded]
	-[(DAKeychainAdditions) da_stringByURLEscapingPathComponent]
	-[(DAKeychainAdditions) da_hasPrefixCaseInsensitive:]
	-[(DAKeychainAdditions) da_trimWhiteSpace]

(DAKeychainAddition)
	// class methods
	+[(DAKeychainAddition) da_URLWithScheme:host:port:uri:]
	+[(DAKeychainAddition) da_URLWithDirtyString:]
	+[(DAKeychainAddition) da_classicPortForScheme:]
	+[(DAKeychainAddition) da_URLWithScheme:host:user:port:uri:]

	// instance methods
	-[(DAKeychainAddition) uri]
	-[(DAKeychainAddition) da_urlBySettingUsername:]
	-[(DAKeychainAddition) URLWithoutUsername]
	-[(DAKeychainAddition) URLWithUsername:]
	-[(DAKeychainAddition) URLByRemovingLastPathComponent]
	-[(DAKeychainAddition) da_rawPath]
	-[(DAKeychainAddition) da_urlBySettingScheme:keepUsername:]
	-[(DAKeychainAddition) da_urlBySettingHost:keepUsername:]
	-[(DAKeychainAddition) da_urlBySettingPort:keepUsername:]
	-[(DAKeychainAddition) da_isEqualToDAVURL:]
	-[(DAKeychainAddition) da_urlBySettingPath:keepUsername:]
	-[(DAKeychainAddition) da_urlBySettingPassword:]
	-[(DAKeychainAddition) da_urlByRemovingUsername]
	-[(DAKeychainAddition) da_urlForLogging]
	-[(DAKeychainAddition) da_urlBySettingScheme:]
	-[(DAKeychainAddition) da_urlBySettingHost:]
	-[(DAKeychainAddition) da_urlBySettingPort:]
	-[(DAKeychainAddition) da_urlBySettingPath:]
	-[(DAKeychainAddition) da_pathWithoutTrailingRemovingSlash]
	-[(DAKeychainAddition) da_leastInfoStringRepresentationRelativeToParentURL:]
	-[(DAKeychainAddition) URLWithUsername:withPassword:]

ACAccountStore(DAExtensions)
	// instance methods
	-[ACAccountStore(DAExtensions) da_accountsWithAccountTypeIdentifiers:outError:]
	-[ACAccountStore(DAExtensions) _daAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:filterOnDataclasses:withCompletion:]
	-[ACAccountStore(DAExtensions) da_loadDAAccountsWithCompletion:]
	-[ACAccountStore(DAExtensions) da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:]
	-[ACAccountStore(DAExtensions) da_accounts]
	-[ACAccountStore(DAExtensions) da_accountsWithAccountTypeIdentifiers:]
	-[ACAccountStore(DAExtensions) da_loadDAAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:withCompletion:]
	-[ACAccountStore(DAExtensions) da_accountsWithAccountTypeIdentifiers:enabledForDADataclasses:]

(DAHexString)
	// class methods
	+[(DAHexString) da_dataWithHexString:stringIsUppercase:]
	+[(DAHexString) da_dataWithHexString:]

	// instance methods
	-[(DAHexString) da_hexString]
	-[(DAHexString) da_lowercaseHexStringWithoutSpaces]
	-[(DAHexString) da_uppercaseHexStringWithoutSpaces]

(DAExtensions)
	// instance methods
	-[(DAExtensions) DACompactDescription]

NSURLRequest(DAExtensions)
	// instance methods
	-[NSURLRequest(DAExtensions) DARequestByApplyingStorageSession:]

(DAExtensions)
	// instance methods
	-[(DAExtensions) DAObjectForKeyCaseInsensitive:]
	-[(DAExtensions) DAMergeOverrideDictionary:]

(DADAExtendedDescription)
	// instance methods
	-[(DADAExtendedDescription) DAExtendedDescription]

01 00 1e00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 1e00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountCredential 
01 00 1e00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0d00 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNAccount 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContainer 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutableContainer 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNSaveRequest 
01 00 1100 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CalStoreSetupAndTeardownUtils 
01 00 0300 /System/Library/PrivateFrameworks/CertUI.framework/CertUI: CertUIPrompt 
01 00 0300 /System/Library/PrivateFrameworks/CertUI.framework/CertUI: CertUITrustManager 
01 00 1700 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAAccountChangeInfo 
01 00 1700 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DABehaviorOptions 
01 00 1700 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DADConnection 
01 00 1700 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DADisableableObject 
01 00 1700 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DASharedAccountProperties 
01 00 1700 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAStatusReport 
01 00 1200 /System/Library/Frameworks/EventKit.framework/EventKit: EKEventStore 
01 00 1200 /System/Library/Frameworks/EventKit.framework/EventKit: EKTimedEventStorePurger 
01 00 1400 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSLogger 
01 00 0400 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMutableMessageHeaders 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1300 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1300 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredential 
01 00 1300 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredentialStorage 
01 00 1300 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0a00 /System/Library/PrivateFrameworks/Notes.framework/Notes: NoteContext 
01 00 0900 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
